{"cell_type":{"aa962b71":"code","200f2314":"code","6f7691de":"code","e99439fe":"code","408e8b6f":"code","fdb60412":"code","3d04b3e2":"code","f362e8fd":"code","e5aa238a":"code","74e06fd2":"code","83d804e9":"code","b037ea5c":"code","55d3c5c7":"code","72251f47":"code","9824171e":"code","64e604d2":"code","aa05dae3":"code","f6d33301":"code","4e3618a9":"code","0ea70d85":"code","a52f1614":"code","2716c43d":"code","dd5f215b":"code","340f4051":"code","e911d2af":"code","5574d989":"code","2b1921ed":"code","84c34d3e":"code","c8074663":"code","5b59907e":"code","ac44afa6":"code","8e74697f":"code","c42719bc":"code","b77ae17f":"markdown","60526b49":"markdown","55dabf59":"markdown","7fb9bf88":"markdown","f7854a17":"markdown","48077bdf":"markdown","3ac5de60":"markdown","1b27edfe":"markdown","f008cc4d":"markdown","b457e424":"markdown","6eb75530":"markdown","be889037":"markdown","1da09988":"markdown","24bd85bc":"markdown","8ea99a4d":"markdown","c76302d1":"markdown","5d79e87e":"markdown","3c5edeb9":"markdown","8f84cc63":"markdown","a653253c":"markdown","eaa8632e":"markdown"},"source":{"aa962b71":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno\nfrom pandas_profiling import ProfileReport\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","200f2314":"df = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')\ndf","6f7691de":"df.dropna(inplace=True)\ndf.drop(columns=\"Rank\",inplace=True)\ndf = df[df[\"Year\"]<2017.0]\ndf","e99439fe":"missingno.matrix(df)","408e8b6f":"df.isnull().sum()","fdb60412":"df.duplicated().sum()","3d04b3e2":"df.loc[:,'Year'] = df.loc[:,'Year'].astype(int)","f362e8fd":"df.info()","e5aa238a":"years = df['Year'].unique()\nyears.sort()\nyears","74e06fd2":"games_profile = ProfileReport(df, title='Video Games Sales Profiling')","83d804e9":"games_profile","b037ea5c":"df['Platform'].unique()","55d3c5c7":"matrix = df.corr()\nplt.figure(figsize=(16,12))\ng=sns.heatmap(matrix,annot=True,cmap=\"YlGn\")","72251f47":"sns.pairplot(df)","9824171e":"plt.figure(dpi=125)\nsns.regplot(x=df['NA_Sales'],y=df['Global_Sales'])\nplt.xlabel('North America Sales')\nplt.ylabel('Global Sales')\nplt.title('Relationship between North America Sales and Global Sales')\nplt.show()","64e604d2":"plt.figure(dpi=125)\nsns.regplot(x=df['EU_Sales'],y=df['Global_Sales'])\nplt.xlabel('Europe Sales')\nplt.ylabel('Global Sales')\nplt.title('Relationship between Europe Sales and Global Sales')\nplt.show()","aa05dae3":"plt.figure(dpi=125)\nsns.regplot(x=df['JP_Sales'],y=df['Global_Sales'])\nplt.xlabel('Japan Sales')\nplt.ylabel('Global Sales')\nplt.title('Relationship between Japan Sales and Global Sales')\nplt.show()","f6d33301":"fig ,ax = plt.subplots(figsize= (12,8))\nsns.countplot(df.head(100)['Publisher'], ax=ax)\nplt.xlabel('Publisher Name')\nplt.xticks(rotation=90)\nplt.ylabel('Count')\nplt.title('Best Publisher in Top 100 Video Games')\nplt.show()","4e3618a9":"df.hist(figsize=(15,15))\nplt.show()\nprint(df.shape)\nprint(df.columns)","0ea70d85":"df_by_year = df.groupby(by  = 'Year').sum()\ndf_by_year","a52f1614":"df_by_year=df_by_year.apply(lambda x : x.astype(\"int\"))","2716c43d":"df_by_year.info()","dd5f215b":"df_by_year.plot.line(figsize=(10,10), grid=\"on\");\nplt.ylabel(\"Sales in million $\");","340f4051":"fig ,ax = plt.subplots(figsize= (16,12))\nsns.kdeplot(data=df_by_year, ax=ax)","e911d2af":"df_by_year.reset_index(inplace=True)\ndf_by_year","5574d989":"fig ,ax = plt.subplots(figsize= (12,8))\np = sns.stripplot(x=df_by_year['Year'],\n              y=df_by_year['Global_Sales'], ax=ax)\np.set_xticklabels(labels = df_by_year['Year'],rotation=90)","2b1921ed":"fig ,axs = plt.subplots(3,2 ,figsize= (16,16))\nfig.set_facecolor(\"white\")\nfig.delaxes(axs[2,1])\n\ndef jointplot(cplot,data,region):\n    x = cplot\/\/2\n    y = cplot%2\n    sns.kdeplot(ax=axs[x,y], data=data, x=df_by_year['Year'], y=region)\n    axs[x,y].set_title(region)\n    \ncplot=0\nregion = ['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales', 'Global_Sales']\nfor i in region:\n    jointplot(cplot, df_by_year, i)\n    cplot+=1\n    \nfig.tight_layout()\nplt.plot()","84c34d3e":"X = df[['Year','NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\ny = df['Global_Sales']","c8074663":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nreg = LinearRegression()\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\nreg.fit(X_train,y_train)\ny_pred = reg.predict(X_test)\ny_pred_train = reg.predict(X_train)\nR_squared = reg.score(X_test, y_test)\nR_squared","5b59907e":"y_pred","ac44afa6":"y_pred_train","8e74697f":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import r2_score\nkRange = range(1,15,1)\n\nscores_list = []\nfor i in kRange:\n    regressor_knn = KNeighborsRegressor(n_neighbors = i)\n    \n    regressor_knn.fit(X_train,y_train)\n    pred = regressor_knn.predict(X_test)\n    \n    scores_list.append(r2_score(y_test,pred))","c42719bc":"regressor_knn = KNeighborsRegressor(n_neighbors = 3)\n\nregressor_knn.fit(X_train,y_train)\npred = regressor_knn.predict(X_test)\n\nr2_knn = r2_score(y_test,pred)\nprint(r2_knn)","b77ae17f":"## Casted year column into int, furthermore we found that year ranges from 1980 to 2016.","60526b49":"# Dataset Profile Report","55dabf59":"# Video Games Sales Analysis and Predictive Modeling\n\n![img](https:\/\/cdn.wallpapersafari.com\/87\/43\/siqdob.jpg)","7fb9bf88":"## Multiple Linear Regression (scikit-learn)","f7854a17":"## Relationship between Japan Sales and Global Sales","48077bdf":"## R2 Score : 0.9999860496809578","3ac5de60":"# LOAD DATASET","1b27edfe":"# Predictive Modeling","f008cc4d":"## R2 Score : 0.9538189722969099","b457e424":"## kNN Regressor","6eb75530":"# Sales Analysis","be889037":"## Relationship between Europe Sales and Global Sales","1da09988":"# Correlations","24bd85bc":"![go](https:\/\/www.itl.cat\/pngfile\/big\/297-2974093_game-over-video-games-retro-games-distortion-wallpapers.jpg)","8ea99a4d":"## Relationship between North America Sales and Global Sales","c76302d1":"## Gaming Platforms","5d79e87e":"## Removing duplicate and missing values.","3c5edeb9":"## Sales by Year","8f84cc63":"## Sales Distribution","a653253c":"## Pairplot","eaa8632e":"## Best Publisher in Top 100 Video Games"}}