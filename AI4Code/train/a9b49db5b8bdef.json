{"cell_type":{"c33d9cb4":"code","e11381dd":"code","04187f10":"code","b469ce0e":"code","7efe2de7":"code","32f8ac51":"code","265507d7":"code","1d990f46":"code","896ba596":"code","3ec6c42c":"code","814b38ce":"code","c25a6cd3":"code","2a823813":"code","8ec6e536":"code","71ab0e86":"code","2a8d1f8b":"markdown","521d3e2a":"markdown","e220d0f1":"markdown","6a663318":"markdown","5e7f5225":"markdown","688ba74c":"markdown","69ca161e":"markdown","72e53cb1":"markdown","411beeec":"markdown","8cde651b":"markdown","c918152c":"markdown","d07ffb37":"markdown","c1525736":"markdown","3cd2316a":"markdown","19fd2b66":"markdown","4cff9808":"markdown","b90a5066":"markdown","19f9fb20":"markdown","231ad065":"markdown","59c713fb":"markdown","f12335e3":"markdown","e803981a":"markdown","ec77034d":"markdown","be052138":"markdown"},"source":{"c33d9cb4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport plotly.graph_objects as go\n\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e11381dd":"data = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nquestions = pd.DataFrame(data.iloc[0])\ndata.drop(index=0, inplace=True)","04187f10":"plt.figure(figsize=(10, 8))\nax = sns.countplot(x='Q1',hue='Q2',data=data, order = sorted(data['Q1'].value_counts().index))","b469ce0e":"data['Q4'] = data['Q4'].apply(lambda x : 'Others' if x in [np.nan,'I prefer not to answer'] else x)\nfig_edu, ax = plt.subplots(figsize=(10,8)) \nax = sns.countplot(x='Q4',hue='Q2',data=data)\nlabels = ['Doctoral','Masters','Bacherlors','High school','Professional','Others','College\/Univ. study']\nax.set_xticklabels(labels)","7efe2de7":"data['Q2'] = data['Q2'].apply(lambda x : 'Others' if x not in ['Man','Woman'] else x)\nfig, (ax1, ax2, ax3) = plt.subplots(3,1,figsize=(12,18))\n\ndf = pd.pivot_table(data[data.Q2=='Man'],index=['Q5'],columns=['Q1'],aggfunc='size', fill_value=0)\nax1 = sns.heatmap(df,cbar=True, cmap='BuGn', ax=ax1, annot=False, fmt='.1f')\n\ndf2 = pd.pivot_table(data[data.Q2=='Woman'],index=['Q5'],columns=['Q1'],aggfunc='size', fill_value=0)\nax2 = sns.heatmap(df2,cbar=True, cmap='Purples', ax=ax2, annot=False, fmt='.1f')\n\ndf3 = pd.pivot_table(data[data.Q2=='Others'],index=['Q5'],columns=['Q1'],aggfunc='size', fill_value=0)\nax3 = sns.heatmap(df3,cbar=True, cmap='YlOrBr', ax=ax3, annot=False, fmt='.1f')\n\nax1.title.set_text('Man')\nax2.title.set_text('Woman')\nax3.title.set_text('Others')\n\n\nfig.subplots_adjust(hspace=0.5)\nfig.text(0.3, 0.9, 'Age x Current Designation', fontweight='bold', fontfamily='serif', fontstretch= 'semi-expanded',fontsize=16)","32f8ac51":"data.rename(columns={'Q5':'Current Designation'}, inplace=True)\nmle = pd.pivot_table(data=data, columns='Current Designation', index='Q15', aggfunc='size')\n\nexperience = ['I do not use machine learning methods','Under 1 year','1-2 years','2-3 years','3-4 years','4-5 years','5-10 years','10-20 years','20 or more years']\nmapping = {exp: i for i, exp in enumerate(experience)}\n\nmle.rename_axis(index={'Q15':'Machine Learning experience'}, inplace=True)\nkey = mle.index.map(mapping)\nmle = mle.iloc[key.argsort()]\nmle[['Student','Other','Currently not employed']].plot(kind='barh', stacked=False, cmap='icefire', figsize=(8,6), width=0.75, use_index=True)\n\nmle.drop(['Student','Other','Currently not employed'], axis=1, inplace=True)\nmle.plot(kind='barh', stacked=True, figsize=(8,6), cmap = 'tab20b')","265507d7":"activity = {}\njobs = ['Business Analyst','Data Analyst','DBA\/Database Engineer','Data Engineer','Statistician','Data Scientist','Machine Learning Engineer','Software Engineer','Research Scientist','Product\/Project Manager','Other','Currently not employed']\n\nfor i in data.filter(like='Q23').columns:\n    activity[i] = str(data[i].value_counts().index.to_list()).strip('[|\\'|]')\n\nactivity= { k:v.strip() for k, v in activity.items()}\n\na = data.groupby('Current Designation').count().filter(like='Q23')\na.rename(columns=activity, inplace=True)\na =round(100 * a\/a.sum())\nfig = go.Figure(\n    data=[\n        go.Bar(\n            name=\"Analyse data for prod\/business decisions\",\n            x=jobs,\n            y=a['Analyze and understand data to influence product or business decisions'],\n            #y = a.columns,\n            offsetgroup=0,\n        ),\n        go.Bar(\n            name=\"Optimization of product\/workflow using ML\",\n            x=jobs,\n            y=a['Build and\/or run a machine learning service that operationally improves my product or workflows'],\n            #y = a.columns,\n            offsetgroup=1,\n        ),\n        go.Bar(\n            name=\"Development for new areas of applied ML\",\n            x=jobs,\n            y=a['Build prototypes to explore applying machine learning to new areas'],\n            #y = a.columns,\n            offsetgroup=1,\n        ),\n        go.Bar(\n            name=\"Research\",\n            x=jobs,\n            y=a['Do research that advances the state of the art of machine learning'],\n            #y = a.columns,\n            offsetgroup=1,\n        ),\n        go.Bar(\n            name=\"Optimization of existing ML models\",\n            x=jobs,\n            y=a['Experimentation and iteration to improve existing ML models'],\n            #y = a.columns,\n            offsetgroup=1,\n        ),\n        go.Bar(\n            name=\"Data infrastructure\",\n            x=jobs,\n            y=a['Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data'],\n            #y = a.columns,\n            offsetgroup=0,\n        ),\n        go.Bar(\n            name=\"Others\",\n            x=jobs,\n            y=a['Other'],\n            #y = a.columns,\n            offsetgroup=2,\n        ),\n        go.Bar(\n            name=\"None\",\n            x=jobs,\n            y=a['None of these activities are an important part of my role at work'],\n            offsetgroup=2,\n        )\n    ],\n    layout=go.Layout(\n        title=\"Roles & Responsibilities per job role\",\n        yaxis_title=\"% distribution\",\n        xaxis_title = \"Job Roles\",\n        barmode='stack'\n    )\n)\n\nfig.show()","1d990f46":"data.rename(columns={'Q20':'Employer strength','Q24':'Salary range'}, inplace=True)\n\nexperience = ['I do not use machine learning methods','Under 1 year','1-2 years','2-3 years','3-4 years','4-5 years','5-10 years','10-20 years','20 or more years']\nq20_order = ['0-49 employees','50-249 employees','250-999 employees','1000-9,999 employees','10,000 or more employees']\nq24_order = ['$0-999', '1,000-1,999', '2,000-2,999', '3,000-3,999', '4,000-4,999', '5,000-7,499', '7,500-9,999',\n             '10,000-14,999','15,000-19,999', '20,000-24,999', '25,000-29,999', '30,000-39,999', '40,000-49,999', '50,000-59,999', '60,000-69,999', '70,000-79,999', '80,000-89,999', '90,000-99,999',\n             '100,000-124,999', '125,000-149,999',  '150,000-199,999', '200,000-249,999',  '250,000-299,999', '300,000-500,000', '> $500,000']\n\n\nexp = data.groupby(['Current Designation','Q15'])['Salary range'].value_counts().unstack().reset_index()\n\nc = data.groupby(['Current Designation','Employer strength'])['Salary range'].value_counts().unstack().reset_index()\n\ndef plot_pivot_heatmap(df, col, x_values, y_values):\n    fig = go.Figure()\n    for column in df[col].unique():\n        fig.add_trace(\n            go.Heatmap(\n                x = x_values, \n                y = y_values,\n                z = df[df['Current Designation']== column].values[:,2:],\n                colorscale = 'ylgnbu',\n                showscale=True\n                )\n            )\n        \n    fig.update_layout(\n      updatemenus=[go.layout.Updatemenu(\n          go.layout.Updatemenu(\n          type = \"dropdown\", direction = \"down\", active = 0, x = 0.1, y = 1.2,\n          buttons = list(\n              [\n                dict(\n                    label = \"Business Analyst\", method = \"update\",\n                    args = [{\"visible\": [True, False, False, False, False, False, False, False, False, False]},{\"title\": \"Business Analyst\"} ]\n                ),\n                dict(\n                    label = \"DBA\/Database Engineer\", method = \"update\", \n                    args = [{\"visible\": [False, True, False, False, False, False, False, False, False, False]},{\"title\": \"DBA\/Database Engineer\"}]\n                ),\n                dict(\n                    label = \"Data Analyst\", method = \"update\",\n                    args = [{\"visible\": [False, False, True, False, False, False, False, False, False, False]},{\"title\": \"Data Analyst\"} ]\n                ),\n                dict(\n                    label = \"Data Engineer\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, True, False, False, False, False, False, False]},{\"title\": \"Data Engineer\"}]\n                ),\n                dict(\n                    label = \"Data Scientist\", method = \"update\",\n                    args = [{\"visible\": [False, False, False, False, True, False, False, False, False, False]},{\"title\": \"Data Scientist\"} ]\n                ),\n                dict(\n                    label = \"Machine Learning Engineer\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, False, False, True, False, False, False, False]},{\"title\": \"Machine Learning Engineer\"}]\n                ),\n                dict(\n                    label = \"Software Engineer\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, False, False, False, True, False, False, False]},{\"title\": \"Software Engineer\"}]\n                ),\n                dict(\n                    label = \"Research Scientist\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, False, False, False, False, True, False, False]},{\"title\": \"Research Scientist\"}]\n                ),\n                dict(\n                    label = \"Product\/Project Manager\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, False, False, False, False, False, True, False]},{\"title\": \"Product\/Project Manager\"}]\n                ),\n                dict(\n                    label = \"Statistician\", method = \"update\", \n                    args = [{\"visible\": [False, False, False, False, False, False, False, False, False, True]},{\"title\": \"Statistician\"}]\n                )\n              ]\n          )\n        )\n    )])\n    \n    fig.update_layout(\n        title={\n          'y':0.9,\n          'x':0.5,\n          'xanchor': 'center',\n          'yanchor': 'top'})\n    fig.show()\n\nplot_pivot_heatmap(c, 'Current Designation', q24_order, q20_order)\nplot_pivot_heatmap(exp, 'Current Designation' , q24_order, experience)","896ba596":"language = ['Python','R','SQL','C','C++','Java','Javascript','Julia','Swift','Bash','MATLAB','None','Other']\ngroup1 = ['Machine Learning Engineer', 'Data Scientist', 'Statistician']\ngroup2 = ['Data Analyst', 'Business Analyst', 'Data Engineer']\ngroup3 = ['Research Scientist', 'Product\/Project Manager']\ngroup4 = ['Student','Other','Currently not employed']\n\ncols= ['Q7_Part_1',\t'Q7_Part_2',\t'Q7_Part_3',\t'Q7_Part_4',\t'Q7_Part_5',\t'Q7_Part_6',\t'Q7_Part_7', 'Q7_Part_8', 'Q7_Part_9', 'Q7_Part_10',\t'Q7_Part_11',\t'Q7_Part_12',\t'Q7_OTHER']\ndata.rename(columns=dict(zip(cols, language)), inplace=True)\n\ncol_map = {'I have never written code':-1, '< 1 years':1, '1-2 years':2, '3-5 years':3, '5-10 years':4, '10-20 years':5, '20+ years':6}\ncol_map_r = {v: k for k, v in col_map.items()}\n\ndata['Q6'].replace(col_map, inplace=True)\ndata.rename(columns={'Q6':'Coding Experience'}, inplace=True)\n\nlang = pd.pivot_table(data=data, columns='Coding Experience', values=['Python','R','SQL','C','C++','Java','Javascript','Julia','Swift','Bash','MATLAB','None','Other'], aggfunc='count')\nlang.rename(columns=col_map_r, inplace=True)\n\nlang.plot(kind='bar', stacked=True, rot=30, width=0.75, cmap = 'YlGnBu', figsize=(10,8))","3ec6c42c":"ide = {'1':'JupyterLab','2':'RStudio','3':'Visual Studio','4':'VSCode', '5':'PyCharm','6':'Spyder','7':'Notepad++','8':'Sublime text','':'Vim, Emacs, similar','10':'MATLAB','11':'None','Other':'Other'}\n\ndata['Current Designation'].dropna(inplace=True)","814b38ce":"def draw_ide_map(data, group, ax):\n  pv = pd.pivot_table(data=data,index='Current Designation', values=data.filter(like='Q9'), aggfunc='count')\n  pv.columns = pv.columns.str.strip('Q9_Part_')\n  pv.rename(columns=ide, inplace=True)\n  pv[pv.index.isin(group)].plot(kind='bar', figsize=(15,18), ax=ax, rot=15, cmap='tab20c')\n\nfig_nb, ((idep1, idep2), (idep3, idep4)) = plt.subplots(2,2, figsize=(50,40))\ndraw_ide_map(data, group1, idep1)\ndraw_ide_map(data, group2, idep2)\ndraw_ide_map(data, group3, idep3)\ndraw_ide_map(data, group4, idep4)","c25a6cd3":"pv = pd.pivot_table(data=data,index='Current Designation', values=data.filter(like='Q9'), aggfunc='count')\npv.columns = pv.columns.str.strip('Q9_Part_')\npv.rename(columns=ide, inplace=True)\nsns.clustermap(pv, cmap='icefire', col_cluster=False)","2a823813":"def draw_all(col):\n  xdict = {}\n  for i in data.filter(like=col).columns:\n    xdict[i] = str(data[i].value_counts().index.to_list()).strip('[|\\'|]')\n\n  xdict= { k:v.strip() for k, v in xdict.items()}\n\n  pv = pd.pivot_table(data,index='Current Designation',values=data.filter(like=col), aggfunc='count')\n  pv.rename(columns=xdict, inplace=True)\n\n  return pv\n\nfor j in ['Q16','Q17','Q14','Q10', 'Q12']:\n  g= sns.clustermap(data=draw_all(j), cmap='icefire', col_cluster=False)\n  title = {'Q16':'Frameworks', 'Q17': 'ML Algorithms', 'Q10':'Notebook Products','Q14': 'Visualization Libraries','Q12':'Specialised Hardware'}\n  g.fig.suptitle(title[j],fontweight='bold', fontfamily='serif', fontstretch= 'semi-expanded',fontsize=16)","8ec6e536":"df = data.filter(['Q11','Current Designation']).rename(columns={'Q11':'Computing Platform'})\ndf['Current Designation'] = df['Current Designation'].apply(lambda x: 'Working Professionals' if x not in ['Student','Currently not employed', 'Other'] else x)\n#grouped = df.value_counts(['Computing Platform','Current Designation']).groupby('Computing Platform')\n\ngrouped = df.groupby(['Computing Platform', 'Current Designation']).size().unstack()\ngrouped = (grouped\/np.sum(grouped, axis=0)*100).round(2)\ngrouped.plot(kind='barh', figsize=(8,6), title=\"Computing Platform preference\")\n#df.value_counts(['Computing Platform'], ascending=False).plot(kind='barh')\n\ndf2 = data.filter(['Q13','Current Designation']).rename(columns={'Q13':'TPU usage'})\ndf2['Current Designation'] = df['Current Designation'].apply(lambda x: 'Working Professionals' if x not in ['Student','Currently not employed', 'Other'] else x)\ndf2.head()\ngrouped2 = df2.groupby(['TPU usage', 'Current Designation']).size().unstack()\ngrouped2 = (grouped2\/np.sum(grouped2, axis=0)*100).round(2)\ngrouped2.plot(kind='barh', figsize=(8,6), title=\"TPU usage frequency\")","71ab0e86":"prefix = ('Q26_A','Q27_A','Current')\nclp = data.loc[:,list(filter(lambda x: x.startswith(prefix), data.columns))]\n#clp['all'] = 'all'\n\ndef rename_columns(df, idx, col):\n  pvt = pd.pivot_table(clp, index=idx, values=clp.loc[:,df.columns.str.startswith(col)], aggfunc='count')\n  xdict = {}\n  for i in pvt.filter(like=col).columns:\n    xdict[i] = str(data[i].value_counts().index.to_list()).strip('[|\\'|]')\n\n  xdict= { k:v.strip() for k, v in xdict.items()}\n  pvt.rename(columns=xdict, inplace=True)\n\n  return pvt\n\npvt = rename_columns(clp,'Current Designation','Q26_A')\npvt.T.plot(kind='barh',figsize=(10,8), stacked=True, xlabel='Cloud Platforms')\n\npvt2 = rename_columns(clp,'Current Designation','Q27_A')\npvt2.T.plot(kind='barh',figsize=(10,8), stacked=True, xlabel='Cloud Products')","2a8d1f8b":"* Python has emerged as a clear favorite for the developers, esp among 1-2yrs & 3-5yrs.\n* The next favorite is SQL followed by R. \n* As respondents' experience with coding increases, the diversity in preferred language also increases.","521d3e2a":"**Analysis of respondents **\n## Job Role x Gender x Age Group","e220d0f1":"## **Popularity of IDE** \n*based on job role*","6a663318":"## **Frameworks, Algorithms, Hardware & Notebook Product** preferences","5e7f5225":"## Language preferences\n*based on coding experience*","688ba74c":"* JupyterLab is a favorite among all job roles\n* JupyterLab > PyCharm > RStudio > VSCode for Data scientists, Machine Learning Engineers and Statisticians\n* RStudio, VSCode, PyCharm are the next popular choices across all population\n* Tough competitors to above IDEs: Notepad++ & Spyder\n\nAs a professional in this field, you will mostly be working with JupyterLab, followed by PyCharm and VSCode. As a statistician, having hands-on experience with RStudio is recommended.","69ca161e":"# Executive Summary\n<table>\n<thead>\n  <tr>\n    <th>Metrics<\/th>\n    <th colspan=\"5\">Popular choice awards<\/th>\n  <\/tr>\n<\/thead>\n<tbody>\n  <tr>\n    <td>Language<\/td>\n    <td>Python<\/td>\n    <td>R<\/td>\n    <td>SQL<\/td>\n    <td><\/td>\n    <td><\/td>\n  <\/tr>\n  <tr>\n    <td>IDE<\/td>\n    <td>JupyterLab<\/td>\n    <td>PyCharm<\/td>\n    <td>RStudio<\/td>\n    <td>VSCode<\/td>\n    <td><\/td>\n  <\/tr>\n  <tr>\n    <td>Frameworks<\/td>\n    <td>Scikit Learn<\/td>\n    <td>Tensorflow<\/td>\n    <td>Keras<\/td>\n    <td>PyTorch<\/td>\n    <td>XGBoost<\/td>\n  <\/tr>\n  <tr>\n    <td>Algorithms<\/td>\n    <td>Linear\/Logistic Regression<\/td>\n    <td>Decision Tree<\/td>\n    <td>CNN<\/td>\n    <td><\/td>\n    <td><\/td>\n  <\/tr>\n  <tr>\n    <td>Visualization Libraries<\/td>\n    <td>Matplotlib<\/td>\n    <td>Seaborn<\/td>\n    <td>Plotly<\/td>\n    <td>ggplot<\/td>\n    <td><\/td>\n  <\/tr>\n  <tr>\n    <td>Computing platform<\/td>\n    <td colspan=\"5\">Personal Laptop \/ Computer<\/td>\n  <\/tr>\n  <tr>\n    <td>Cloud Platforms<\/td>\n    <td>AWS<\/td>\n    <td>GCP<\/td>\n    <td>Azure<\/td>\n    <td><\/td>\n    <td><\/td>\n  <\/tr>\n<\/tbody>\n<\/table>","72e53cb1":"## **Experience in Machine Learning**: \n*working professionals vs students & others*","411beeec":"## Computing platform preference & TPU usage frequency","8cde651b":"**Key takeaways**\n*   Strength of the existing Kaggle community lies within the age range of 18-29\n*   There exists a strong diversity in the survey respondents within the age groups of 18-29\n* Kaggle contests has an active diversity reach within 18-30 YOE","c918152c":"*Analysis of respondents'*\n## Highest level of education [attained\/to attain] x Gender","d07ffb37":"#### **R&Rs of different job roles**\n\n**Key Takeaways:**\n* As Product\/Project Manager, Data Analyst and Data scientist your primary responsibility will be to derive insights from data to influence product or business decisions\n* Primary responsibility of Research scientist: To do research that advances the state of the art of ML\n* As a data engineer, you will need to excel equally across all the activities, but will need to have infrastructure knowledge for storage, analysis and operationalizing of data ","c1525736":"1. Software developers have shown interest in ML and are currently in a ramp-up zone\n2. Other than the anticipated profiles of Data domain, we have product\/project engineers with some hands-on experience in Machine Learning\n3. While a lot of students have shown interest in the survey, very few have hands-on experience in Machine Learning\n4. Data Analysts & Data Engineers in the respondent pool also have relatively high experience in Machine Learning. \n\nThere exists an opportunity of applying Machine Learning to analyst & data engineering job roles as well, other than data scientist or ML engineering roles.\n","3cd2316a":"## Cloud platform & product preferences\nRanking of platforms and products based on response received\n<table>\n<thead>\n  <tr>\n    <th>Cloud Platforms<\/th>\n    <th>Cloud Products<\/th>\n  <\/tr>\n<\/thead>\n<tbody>\n  <tr>\n    <td rowspan=\"3\">AWS<\/td>\n    <td>EC2<\/td>\n  <\/tr>\n  <tr>\n    <td>Lambda<\/td>\n  <\/tr>\n  <tr>\n    <td>ECS<\/td>\n  <\/tr>\n  <tr>\n    <td rowspan=\"4\">GCP<\/td>\n    <td>Compute Engine<\/td>\n  <\/tr>\n  <tr>\n    <td>Functions<\/td>\n  <\/tr>\n  <tr>\n    <td>App Engine<\/td>\n  <\/tr>\n  <tr>\n    <td>Cloud Run<\/td>\n  <\/tr>\n  <tr>\n    <td rowspan=\"3\">Azure<\/td>\n    <td>Cloud services<\/td>\n  <\/tr>\n  <tr>\n    <td>Container instances<\/td>\n  <\/tr>\n  <tr>\n    <td>Functions<\/td>\n  <\/tr>\n<\/tbody>\n<\/table>","19fd2b66":"# Part C: Choices & Preferences","4cff9808":"# Part A: Demographic Analysis","b90a5066":"* Irrespective of work experience, personal computer\/laptop is the go-to computing environment for over 86% population\n* Hardly 10-15% developers have used TPUs between 1-5 times till date","19f9fb20":"## Gender by Age group","231ad065":"As shown above, the analysis is biased towards male student population. Potentially, students enrolled for Master's followed by those enrolled for Bachelors' or recent graduates dominate the current survey. In order to evaluate preferences of working professionals, following heatmap gives the clarity of respondents' current designation. \n\n* Assuming that increasing age group is directly proportional to increasing experience, we have very few respondents from Leadership positions.\n* Product\/Project Manager role has very weak response rate. The preferences that we will see going forward will majorly be coming from developers.\n* The gender breakup is an indicator of potential outreach of Kaggle contests to different sections of the community.","59c713fb":"**Key takeaways**:\n* ~70% population has\/is about to gain Master's and\/or Bachelor's degree as their highest level of education","f12335e3":"#### Compensation distribution basis job role & company's employee strength\n* There is very low visible disparity in compensation between companies of varying sizes\n* There is no proven correlation as per the data that larger the company, larger the compensation. This stands true across all job roles\n* Experience in Machine learning can give you a competitive edge in the job roles of 'Data Engineer', 'Research Scientist', 'Software Engineer', 'Statistician', 'DBA\/Database Engineer' [assuming the data is representative of the actual payscale being practiced]","e803981a":"* **Frameworks** : Scikit-learn, Tensorflow, Keras, PyTorch and XGBoost are popular applied frameworks, irrespective of the job role. \n* **ML Algorithms**: Unlike popular belief, Linear\/Logistic Regression, Decision Trees, followed by CNNs are more commonly used than the Deep Learning algorithms\n* **Visualization Libraries**: Matplotlib, Seaborn, plotly & ggplot are most favored visualization tools in the respective order\n* **Notebook Products** : Kaggle & Colab notebooks are emerging favorites among users. \n* **Specialised Hardware** : While majority population does not use any special hardware, GPUs are popular amongst Students and Data scientists more than other job roles\n","ec77034d":"# Part B: Experience analysis","be052138":"If you search for jobs available worldwide on LinkedIn right now, you will have\n* over 100,000+ 'Machine Learning'\n* over 93,000+ 'Business Analyst' \n* over 85,000+ 'Data Analyst' \n* over 53,000+ 'Data Scientist' \n* over 33,000+ 'AI Engineer' \n\njobs available for you. Each job demands experience or expertise in different algorithms, frameworks, IDEs and level of education.\nKaggle's survey data for 2020 gives us an opportunity to know what exactly is the world out there working on\/with. \n\nWhile the analysis may be long (bear with me, I am a series-fiction fan), I can guarantee you its worth your time. \nBy the end of the survey, you will get clarity on:\n1. What is the community's choice across different job roles?\n2. What are the opportunities you will receive if working for an SMB vs EA across different job roles?\n3. What is the expected compensation for each job role as per your preferred location?\n"}}