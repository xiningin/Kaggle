{"cell_type":{"bbdc1684":"code","de56d898":"code","67829b16":"code","73e5d826":"code","717cbcc6":"code","fe49c161":"code","a4876f95":"code","cf21ba08":"code","d3cbee16":"code","0ded88d2":"code","be3b6f06":"code","e0a4b1d0":"code","93ec1666":"code","4a9aeec3":"code","7856f9f9":"code","28df47d0":"code","e6a57e82":"code","8a596304":"code","d6145aa5":"code","bc1049e3":"code","45cd83da":"code","800b522e":"code","66c0ce7a":"code","de85255c":"code","85d07aac":"code","ed008880":"code","6a0d8e88":"code","344b4bd1":"code","49e08c71":"code","671f08fe":"code","3cae7f30":"code","8be1e704":"code","3016c466":"code","72e3a83d":"code","3ab731b7":"code","67337c88":"code","b3e78325":"code","6b875074":"code","9c71f8a6":"code","d69006f8":"code","3d378189":"markdown","f719a57d":"markdown","8b2f4c22":"markdown","f6d1a80d":"markdown","7a9f040d":"markdown","4169342d":"markdown","35118378":"markdown","46c22625":"markdown","a27a062c":"markdown","76205a48":"markdown","d6036bbe":"markdown","c0c7e8b3":"markdown","b52ce6c3":"markdown"},"source":{"bbdc1684":"import pandas as pd # package for high-performance, easy-to-use data structures and data analysis\nimport numpy as np # fundamental package for scientific computing with Python\nfrom pandas import Series\n\nimport matplotlib\nimport matplotlib.pyplot as plt # for plotting\nimport seaborn as sns # for making plots with seaborn\ncolor = sns.color_palette()\nimport plotly.plotly as py1\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nfrom mpl_toolkits.basemap import Basemap\nfrom numpy import array\nfrom matplotlib import cm\n\n# import cufflinks and offline mode\nimport cufflinks as cf\ncf.go_offline()\n\nfrom wordcloud import WordCloud, STOPWORDS\nfrom scipy.misc import imread\nimport base64\n\nfrom sklearn import preprocessing\n# Supress unnecessary warnings so that presentation looks clean\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Print all rows and columns\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","de56d898":"import bq_helper\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport wordcloud\nfrom bq_helper import BigQueryHelper\n\nstackOverflow = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"stackoverflow\")","67829b16":"bq_assistant = BigQueryHelper(\"bigquery-public-data\", \"stackoverflow\")","73e5d826":"survey_data = pd.read_csv('..\/input\/stackoverflow\/survey_results_public.csv')","717cbcc6":"# Users that are either students or without computer science bachelor degree\ntemp = survey_data['Student'].value_counts()\ndf = pd.DataFrame({'labels': temp.index,\n                   'values': temp.values\n                  })\ndf.iplot(kind='pie',labels='labels',values='values', title='Community percentage of students', hole = 0.3, color = ['#A9FE00','#FF8102','#FF1302'])","fe49c161":"# Users that are either students or without  bachelor degree\ntemp = survey_data['UndergradMajor'].value_counts()\ndf = pd.DataFrame({'labels': temp.index,\n                   'values': temp.values\n                  })\ndf.iplot(kind='pie',labels='labels',values='values', title='Community percentage of majors', hole = 0.3)","a4876f95":"print(bq_assistant.list_tables())","cf21ba08":"query1 = \"\"\"SELECT\n  EXTRACT(YEAR FROM creation_date) AS Year,\n  COUNT(*) AS Number_of_New_registers\nFROM\n  `bigquery-public-data.stackoverflow.users`\nGROUP BY\n  Year\nHAVING\n  Year > 2008 AND Year <= 2018\nORDER BY\n  Year;\n        \"\"\"","d3cbee16":"stackOverflow.head('users', num_rows = 5)","0ded88d2":"stackOverflow.head('posts_questions', num_rows = 5)","be3b6f06":"bq_assistant.estimate_query_size(query1)","e0a4b1d0":"new_users = stackOverflow.query_to_pandas_safe(query1)\nnew_users","93ec1666":"# Users that are either students or without  bachelor degree\nnew_users.iplot(kind='bar', x ='Year', y='Number_of_New_registers', xTitle = 'Year', title='Number of new user in the Community')","4a9aeec3":"# query new users from 2016 to 2018\nquery2 = \"\"\" SELECT user_id, register_date FROM\n    (SELECT\n  id as user_id,\n  date(creation_date) AS register_date,\n  EXTRACT(YEAR FROM creation_date) AS Year\n    FROM\n  `bigquery-public-data.stackoverflow.users`)\nWHERE Year > 2016 AND Year <= 2018;\n        \"\"\"","7856f9f9":"bq_assistant.estimate_query_size(query2)","28df47d0":"new_users = stackOverflow.query_to_pandas_safe(query2)\nnew_users.head()","e6a57e82":"new_users.to_csv('new_users.csv')","8a596304":"# query all post from 2016 to 2018\nquery3 = \"\"\" SELECT post_id, user_id, accepted_answer_id,comment_count, answer_count, post_date FROM\n    (SELECT\n  id as post_id,\n  date(creation_date) AS post_date,\n  EXTRACT(YEAR FROM creation_date) AS Year,\n  accepted_answer_id,\n  comment_count,\n  answer_count,\n  owner_user_id as user_id\n    FROM\n  `bigquery-public-data.stackoverflow.posts_questions`)\nWHERE Year > 2016 AND Year <= 2018;\n        \"\"\"","d6145aa5":"bq_assistant.estimate_query_size(query3)","bc1049e3":"# new post from \nnew_posts = stackOverflow.query_to_pandas_safe(query3)\nnew_posts.head()","45cd83da":"new_posts.to_csv('new_posts.csv')","800b522e":"query1 = \"\"\"SELECT\n  EXTRACT(YEAR FROM creation_date) AS Year,\n  COUNT(*) AS Number_of_Questions,\n  ROUND(100 * SUM(IF(answer_count > 0, 1, 0)) \/ COUNT(*), 1) AS Percent_Questions_with_Answers\nFROM\n  `bigquery-public-data.stackoverflow.posts_questions`\nGROUP BY\n  Year\nHAVING\n  Year > 2008 AND Year <= 2018\nORDER BY\n  Year;\n        \"\"\"","66c0ce7a":"bq_assistant.estimate_query_size(query1)","de85255c":"answered_questions = stackOverflow.query_to_pandas_safe(query1)\nanswered_questions.head(5)","85d07aac":"ax = sns.barplot(x=\"Year\",y=\"Percent_Questions_with_Answers\",data=answered_questions).set_title(\"What is the percentage of questions that have been answered over the years?\")","ed008880":"query1 = \"\"\"SELECT\n  EXTRACT(YEAR FROM creation_date) AS Year,\n  COUNT(*) AS Number_of_Questions,\n  SUM(IF(answer_count > 0, 1, 0)) AS Number_Questions_with_Answers\nFROM\n  `bigquery-public-data.stackoverflow.posts_questions`\nGROUP BY\n  Year\nHAVING\n  Year > 2008 AND Year <= 2018\nORDER BY\n  Year;\n        \"\"\"\n\nanswered_questions = stackOverflow.query_to_pandas_safe(query1)\nanswered_questions.head(5) ","6a0d8e88":"answered_questions.plot(x=\"Year\",y=[\"Number_of_Questions\",\"Number_Questions_with_Answers\"], \n\n                    kind=\"bar\",figsize=(14,6), \n\n                    title='What is the total number of questions and questions that have been answered over the years?')","344b4bd1":"tag_js_query = '''\n    select id, tags\n        from `bigquery-public-data.stackoverflow.posts_questions`\n            where extract(year from creation_date) > 2016 and\n            tags like '%python%'\n'''\ntags_raw = stackOverflow.query_to_pandas_safe(tag_js_query)\ntags_raw.head()\n\nrows_list = []\nfor _, rows in tags_raw.iterrows():\n    tag = rows.tags.split('|')\n    for t in tag:\n        if t != 'python':\n            row = {'question_id': rows.id, 'tag': t}\n            rows_list.append(row)\ntags_per_question = pd.DataFrame(rows_list)\ntags_per_question.head()","49e08c71":"query3 = \"\"\"SELECT \n    REGEXP_EXTRACT(tags, \"tensorflow\") AS Tag, \n    EXTRACT(YEAR FROM creation_date) AS Year, \n    COUNT(*) AS Number_Spark_Questions\nFROM \n    `bigquery-public-data.stackoverflow.posts_questions`\nGROUP BY\n  Tag, Year\nHAVING\n  Year > 2008 AND Year <= 2018 AND Tag IS NOT NULL\nORDER BY\n  Year;\n\"\"\"\n\nbq_assistant.estimate_query_size(query3)","671f08fe":"spark_questions = stackOverflow.query_to_pandas_safe(query3)\nspark_questions.head(5)","3cae7f30":"ax = sns.barplot(x=\"Year\",y=\"Number_Spark_Questions\",data=spark_questions,palette=\"coolwarm\").set_title(\"What is the number of questions about Apache Spark over years?\")","8be1e704":"query4 = \"\"\"SELECT tags\nFROM \n    `bigquery-public-data.stackoverflow.posts_questions`\nwhere extract(year from creation_date) > 2016 and\n            tags like '%python%';\n\"\"\"\n\nalltags = stackOverflow.query_to_pandas_safe(query4)\n\n","3016c466":"def remove_python(x):\n    A = []\n    for i in x.split('|'):\n        if i != 'python':\n            A.append(i)\n    return ''.join(A)\n\n","72e3a83d":"tags = ' '.join(alltags.tags.apply(remove_python)).lower()\ncloud = wordcloud.WordCloud(background_color='white',\n                            max_font_size=200,\n                            width=1600,\n                            height=800,\n                            max_words=300,\n                            relative_scaling=.5).generate(tags)\nplt.figure(figsize=(20,10))\nplt.axis('off')\nplt.savefig('stackOverflow.png')\nplt.imshow(cloud);","3ab731b7":"query5 = \"\"\"SELECT AVG(comment_count) AS Number_Comments, \n    score AS Score, \n    EXTRACT(YEAR FROM creation_date) AS Year\nFROM \n    `bigquery-public-data.stackoverflow.posts_answers`\nGROUP BY \n    Score, Year\nORDER BY\n    Score;\n\"\"\"\n\nscores_answers = stackOverflow.query_to_pandas_safe(query5)\nscores_answers.head(5)","67337c88":"plt.figure(figsize=(20,10))\nplt.scatter(scores_answers[\"Year\"], scores_answers[\"Score\"], c=scores_answers[\"Number_Comments\"], alpha=0.3, cmap='viridis')\nplt.xlabel(\"Year\")\nplt.ylabel(\"Score\")\nplt.title(\"How average score of answers is evolving over years?\")\nplt.colorbar();  # show color scale","b3e78325":"stackOverflow.head('posts_questions', num_rows = 2)","6b875074":"query1 = \"\"\"\nSELECT\n  id,\n  title,\n  body,\n  accepted_answer_id,\n  answer_count,\n  comment_count,\n  score,\n  tags,\n  view_count\nFROM\n  (SELECT * FROM `bigquery-public-data.stackoverflow.posts_questions`\nWHERE\n  EXTRACT(YEAR FROM creation_date) = 2017\nLIMIT 500000)\n        \"\"\"","9c71f8a6":"bq_assistant.estimate_query_size(query1)","d69006f8":"# new post from \nposts_2017 = stackOverflow.query_to_pandas_safe(query1, max_gb_scanned=26)\nposts_2017.head()","3d378189":"Which are the most typical tags used in questions?","f719a57d":"Without running the query, the function \"estimate_query_size\" allows knowing that it would \u201ccost\u201d nearly 0.23 GB. ","8b2f4c22":"What is the percentage of negatively scored questions over years?","f6d1a80d":"** A Brief Analysis and query of the Stack Overflow Data loaded as Google's BigQuery Dataset (Volume: 164.4 GB)**","7a9f040d":"## Plot word cloud for python related tags","4169342d":"## Here, we are asking the questions:\n1.  Does the new users ask questions?\n\n2. Distribution of users get their first question with accepted answers?\n\n3. Question get editor help?","35118378":"# 1. Explore the 2018 survey\n\nWe have a sense that 1\/4th of the community are students and more than 1\/3rd of the users do not have a computer science degree.","46c22625":"## Extract post questions for further NLP analysis\n1. should contrain metadata for good question metric: score, ","a27a062c":"How average score of answers is evolving over years?","76205a48":"The \"query_to_pandas_safe\" function makes the call to execute the query.","d6036bbe":"1.  Does the new users ask questions? We started by query ","c0c7e8b3":"# What is the percentage of answered questions","b52ce6c3":"What is the percentage of questions that have been answered over the years?\n"}}