{"cell_type":{"dfa590f7":"code","ac0855c5":"code","f5e67038":"code","2df25c6b":"code","4466a250":"code","a7ca1501":"code","8347d7a0":"code","e41095fb":"code","ba35521f":"code","953910ff":"code","5e7cfb78":"code","4588cb82":"code","27666497":"code","aa2d6b2a":"code","fc4f8c1b":"code","9179c729":"code","7707d3db":"code","fdb6f867":"code","10c729b1":"code","ffad7db0":"code","5a86f1a3":"code","04ae872e":"code","367a17bc":"code","e80b0ac6":"code","b32a8d5e":"code","d1802aaf":"code","5b368b32":"code","51aca905":"code","5cffd7b2":"code","2f37371c":"code","dd0a8e87":"code","3fcd2d78":"code","9f828242":"code","0332c675":"code","a78058a4":"code","f4819d05":"code","006177cc":"code","734ec779":"code","c60e8d80":"markdown","a9a7d083":"markdown","57e36edd":"markdown","ffbcf8a7":"markdown"},"source":{"dfa590f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport regex as re\npd.options.display.max_columns = 999\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\nimport matplotlib.pyplot as plt\nimport matplotlib\nfrom sklearn.ensemble import RandomForestRegressor\nimport statsmodels.api as sm\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import linear_model\nfrom sklearn import svm\nfrom sklearn.model_selection import train_test_split","ac0855c5":"df = pd.read_csv('..\/input\/2016 School Explorer.csv')\ndf.shape","f5e67038":"df.head()","2df25c6b":"df['School Income Estimate'] = df['School Income Estimate'].astype(str)\ndf['School Income Estimate'] = [re.sub(\"\\D\", \"\", s) for s in df['School Income Estimate']]\ndf = df.replace('', np.nan, regex=True)\ndf['School Income Estimate'] = [float(x) for x in df['School Income Estimate']]\ndf.sort_values(by='School Income Estimate')","4466a250":"list(df.columns)","a7ca1501":"df['Grade 3 passing rate'] = df['Grade 3 ELA 4s - All Students'].astype(float) \/df['Grade 3 ELA - All Students Tested'].astype(float)\ndf['Grade 4 passing rate'] = df['Grade 4 ELA 4s - All Students'].astype(float) \/df['Grade 4 ELA - All Students Tested'].astype(float)\ndf['Grade 5 passing rate'] = df['Grade 5 ELA 4s - All Students'].astype(float) \/df['Grade 5 ELA - All Students Tested'].astype(float)\ndf['Grade 6 passing rate'] = df['Grade 6 ELA 4s - All Students'].astype(float) \/df['Grade 6 ELA - All Students Tested'].astype(float)\ndf['Grade 7 passing rate'] = df['Grade 7 ELA 4s - All Students'].astype(float) \/df['Grade 7 ELA - All Students Tested'].astype(float)\ndf['Grade 8 passing rate'] = df['Grade 8 ELA 4s - All Students'].astype(float) \/df['Grade 8 ELA - All Students Tested'].astype(float)\ndf['Grade 4 math passing rate'] = df['Grade 4 Math 4s - All Students'].astype(float) \/df['Grade 4 Math - All Students Tested'].astype(float)\ndf['Grade 5 math passing rate'] = df['Grade 5 Math 4s - All Students'].astype(float) \/df['Grade 5 Math - All Students Tested'].astype(float)\ndf['Grade 6 math passing rate'] = df['Grade 6 Math 4s - All Students'].astype(float) \/df['Grade 6 Math - All Students Tested'].astype(float)\ndf['Grade 7 math passing rate'] = df['Grade 7 Math 4s - All Students'].astype(float) \/df['Grade 7 Math - All Students Tested'].astype(float)\ndf['Grade 8 math passing rate'] = df['Grade 8 Math 4s - All Students'].astype(float) \/df['Grade 8 Math - All Students Tested'].astype(float)","8347d7a0":"df.tail()","e41095fb":"df['Average English passing rate'] = df.loc[:,['Grade 3 passing rate','Grade 8 passing rate']].mean(axis=1)\ndf['Average math passing rate'] = df.loc[:,['Grade 4 math passing rate','Grade 8 math passing rate']].mean(axis=1)","ba35521f":"df.tail()","953910ff":"plt.scatter(df['School Income Estimate'], df['Average English passing rate'])\nplt.show()","5e7cfb78":"plt.scatter(df['School Income Estimate'], df['Average math passing rate'])\nplt.show()","4588cb82":"plt.scatter(df['Average English passing rate'], df['Average math passing rate'])\nplt.show()","27666497":"df.sort_values(by='School Income Estimate', ascending = False).head(10)","aa2d6b2a":"df['Improvement'] = df['Grade 8 passing rate'] - df['Grade 3 passing rate']","fc4f8c1b":"df.sort_values(by='Improvement').head()","9179c729":"df['English passing percentile'] = df['Average English passing rate'].rank(pct=True)\ndf['Math passing percentile'] = df['Average math passing rate'].rank(pct=True)\ndf['Income percentile'] = df['School Income Estimate'].rank(pct=True)","7707d3db":"df.head()","fdb6f867":"plt.scatter(df['English passing percentile'], df['Math passing percentile'])\nplt.show()\nprint(\"There doesn't appear to be any correlation between English and math performance. More is going on here.\")","10c729b1":"list(df.columns)","ffad7db0":"def percentconverter(x):\n    lambda x: float(x.strip(b\"%\"))\/100","5a86f1a3":"a = 'English passing percentile'\ncols = ['Percent ELL', 'Percent Asian', 'Percent Black', 'Percent Hispanic', 'Percent Black \/ Hispanic', 'Percent White', 'Student Attendance Rate','Percent of Students Chronically Absent','Rigorous Instruction %','Collaborative Teachers %','Supportive Environment %','Effective School Leadership %','Strong Family-Community Ties %','Trust %']\nfor a in cols:\n    df[a] = df[a] = df[a].str.rstrip('%').astype('float') \/ 100.0\ndf2 = df.drop(['Adjusted Grade','New?','Other Location Code in LCGMS','School Name','Location Code','Address (Full)','City','Grades','Grade Low','Grade High','Community School?','Rigorous Instruction Rating','Collaborative Teachers Rating','Supportive Environment Rating','Effective School Leadership Rating','Strong Family-Community Ties Rating','Trust Rating','Student Achievement Rating'], 1)\ndf2 = df2.dropna(axis = 0)\ny = df2[a]\nX = df2.drop([a], 1)\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.33, random_state=42)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))\nprint('School leadership and collaborative teaching models pull over 78% of the weight.')","04ae872e":"a = 'Math passing percentile'\ny = df2[a]\nX = df2.drop([a], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","367a17bc":"plt.scatter(df['Collaborative Teachers %'], df['Math passing percentile'])\nplt.show()\nprint('Not enough variation to tell at a glance.')","e80b0ac6":"# Note the difference in argument order\n# optionally, you can chain \"fit()\" to the model object\ndf2 = df2.drop(['Average ELA Proficiency',\n 'Average Math Proficiency',\n 'Grade 3 ELA - All Students Tested',\n 'Grade 3 ELA 4s - All Students',\n 'Grade 3 ELA 4s - American Indian or Alaska Native',\n 'Grade 3 ELA 4s - Black or African American',\n 'Grade 3 ELA 4s - Hispanic or Latino',\n 'Grade 3 ELA 4s - Asian or Pacific Islander',\n 'Grade 3 ELA 4s - White',\n 'Grade 3 ELA 4s - Multiracial',\n 'Grade 3 ELA 4s - Limited English Proficient',\n 'Grade 3 ELA 4s - Economically Disadvantaged',\n 'Grade 3 Math - All Students tested',\n 'Grade 3 Math 4s - All Students',\n 'Grade 3 Math 4s - American Indian or Alaska Native',\n 'Grade 3 Math 4s - Black or African American',\n 'Grade 3 Math 4s - Hispanic or Latino',\n 'Grade 3 Math 4s - Asian or Pacific Islander',\n 'Grade 3 Math 4s - White',\n 'Grade 3 Math 4s - Multiracial',\n 'Grade 3 Math 4s - Limited English Proficient',\n 'Grade 3 Math 4s - Economically Disadvantaged',\n 'Grade 4 ELA - All Students Tested',\n 'Grade 4 ELA 4s - All Students',\n 'Grade 4 ELA 4s - American Indian or Alaska Native',\n 'Grade 4 ELA 4s - Black or African American',\n 'Grade 4 ELA 4s - Hispanic or Latino',\n 'Grade 4 ELA 4s - Asian or Pacific Islander',\n 'Grade 4 ELA 4s - White',\n 'Grade 4 ELA 4s - Multiracial',\n 'Grade 4 ELA 4s - Limited English Proficient',\n 'Grade 4 ELA 4s - Economically Disadvantaged',\n 'Grade 4 Math - All Students Tested',\n 'Grade 4 Math 4s - All Students',\n 'Grade 4 Math 4s - American Indian or Alaska Native',\n 'Grade 4 Math 4s - Black or African American',\n 'Grade 4 Math 4s - Hispanic or Latino',\n 'Grade 4 Math 4s - Asian or Pacific Islander',\n 'Grade 4 Math 4s - White',\n 'Grade 4 Math 4s - Multiracial',\n 'Grade 4 Math 4s - Limited English Proficient',\n 'Grade 4 Math 4s - Economically Disadvantaged',\n 'Grade 5 ELA - All Students Tested',\n 'Grade 5 ELA 4s - All Students',\n 'Grade 5 ELA 4s - American Indian or Alaska Native',\n 'Grade 5 ELA 4s - Black or African American',\n 'Grade 5 ELA 4s - Hispanic or Latino',\n 'Grade 5 ELA 4s - Asian or Pacific Islander',\n 'Grade 5 ELA 4s - White',\n 'Grade 5 ELA 4s - Multiracial',\n 'Grade 5 ELA 4s - Limited English Proficient',\n 'Grade 5 ELA 4s - Economically Disadvantaged',\n 'Grade 5 Math - All Students Tested',\n 'Grade 5 Math 4s - All Students',\n 'Grade 5 Math 4s - American Indian or Alaska Native',\n 'Grade 5 Math 4s - Black or African American',\n 'Grade 5 Math 4s - Hispanic or Latino',\n 'Grade 5 Math 4s - Asian or Pacific Islander',\n 'Grade 5 Math 4s - White',\n 'Grade 5 Math 4s - Multiracial',\n 'Grade 5 Math 4s - Limited English Proficient',\n 'Grade 5 Math 4s - Economically Disadvantaged',\n 'Grade 6 ELA - All Students Tested',\n 'Grade 6 ELA 4s - All Students',\n 'Grade 6 ELA 4s - American Indian or Alaska Native',\n 'Grade 6 ELA 4s - Black or African American',\n 'Grade 6 ELA 4s - Hispanic or Latino',\n 'Grade 6 ELA 4s - Asian or Pacific Islander',\n 'Grade 6 ELA 4s - White',\n 'Grade 6 ELA 4s - Multiracial',\n 'Grade 6 ELA 4s - Limited English Proficient',\n 'Grade 6 ELA 4s - Economically Disadvantaged',\n 'Grade 6 Math - All Students Tested',\n 'Grade 6 Math 4s - All Students',\n 'Grade 6 Math 4s - American Indian or Alaska Native',\n 'Grade 6 Math 4s - Black or African American',\n 'Grade 6 Math 4s - Hispanic or Latino',\n 'Grade 6 Math 4s - Asian or Pacific Islander',\n 'Grade 6 Math 4s - White',\n 'Grade 6 Math 4s - Multiracial',\n 'Grade 6 Math 4s - Limited English Proficient',\n 'Grade 6 Math 4s - Economically Disadvantaged',\n 'Grade 7 ELA - All Students Tested',\n 'Grade 7 ELA 4s - All Students',\n 'Grade 7 ELA 4s - American Indian or Alaska Native',\n 'Grade 7 ELA 4s - Black or African American',\n 'Grade 7 ELA 4s - Hispanic or Latino',\n 'Grade 7 ELA 4s - Asian or Pacific Islander',\n 'Grade 7 ELA 4s - White',\n 'Grade 7 ELA 4s - Multiracial',\n 'Grade 7 ELA 4s - Limited English Proficient',\n 'Grade 7 ELA 4s - Economically Disadvantaged',\n 'Grade 7 Math - All Students Tested',\n 'Grade 7 Math 4s - All Students',\n 'Grade 7 Math 4s - American Indian or Alaska Native',\n 'Grade 7 Math 4s - Black or African American',\n 'Grade 7 Math 4s - Hispanic or Latino',\n 'Grade 7 Math 4s - Asian or Pacific Islander',\n 'Grade 7 Math 4s - White',\n 'Grade 7 Math 4s - Multiracial',\n 'Grade 7 Math 4s - Limited English Proficient',\n 'Grade 7 Math 4s - Economically Disadvantaged',\n 'Grade 8 ELA - All Students Tested',\n 'Grade 8 ELA 4s - All Students',\n 'Grade 8 ELA 4s - American Indian or Alaska Native',\n 'Grade 8 ELA 4s - Black or African American',\n 'Grade 8 ELA 4s - Hispanic or Latino',\n 'Grade 8 ELA 4s - Asian or Pacific Islander',\n 'Grade 8 ELA 4s - White',\n 'Grade 8 ELA 4s - Multiracial',\n 'Grade 8 ELA 4s - Limited English Proficient',\n 'Grade 8 ELA 4s - Economically Disadvantaged',\n 'Grade 8 Math - All Students Tested',\n 'Grade 8 Math 4s - All Students',\n 'Grade 8 Math 4s - American Indian or Alaska Native',\n 'Grade 8 Math 4s - Black or African American',\n 'Grade 8 Math 4s - Hispanic or Latino',\n 'Grade 8 Math 4s - Asian or Pacific Islander',\n 'Grade 8 Math 4s - White',\n 'Grade 8 Math 4s - Multiracial',\n 'Grade 8 Math 4s - Limited English Proficient',\n 'Grade 8 Math 4s - Economically Disadvantaged',\n 'Grade 3 passing rate',\n 'Grade 4 passing rate',\n 'Grade 5 passing rate',\n 'Grade 6 passing rate',\n 'Grade 7 passing rate',\n 'Grade 8 passing rate',\n 'Grade 4 math passing rate',\n 'Grade 5 math passing rate',\n 'Grade 6 math passing rate',\n 'Grade 7 math passing rate',\n 'Grade 8 math passing rate',], axis = 1)\ny = df2[a]\nX = df2.drop([a,'Average math passing rate'], 1)\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.33, random_state=42)\nmodel = sm.OLS(y_train, X_train, n_jobs=-1)\nmodel = model.fit()\npredictions = model.predict(X_test)\n\n# Plot the model\nplt.figure(figsize=(8,6))\nplt.scatter(predictions, y_test, s=30, c='r', marker='+', zorder=10)\nplt.xlabel(\"Predicted Values - $\\hat{y}$\")\nplt.ylabel(\"Actual Values - $y$\")\nplt.show()\n\nprint(\"MSE:\", mean_squared_error(y_test, predictions))","b32a8d5e":"model.summary()","d1802aaf":"print(\"This regression is too busy to be useful.\")","5b368b32":"a = 'Effective School Leadership %'\ny = df2[a]\nX = df2.drop([a], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","51aca905":"print(\"Collaborative teachers are very highly correlated with having an effective school leadership. Nothing else comes close.\")","5cffd7b2":"df2.corr()","2f37371c":"a = 'Math passing percentile'\ny = df2[a]\nX = df2.drop([a,'Average math passing rate','Average English passing rate'], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","dd0a8e87":"a = 'English passing percentile'\ny = df2[a]\nX = df2.drop([a,'Average math passing rate','Average English passing rate'], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","3fcd2d78":"print(\"Once we clear out a lot of the variables which we determined our percentile with, we can tell that math and English are the most important variables to determine each other. We need to test only one at a time, excluding them from the next regressions.\")","9f828242":"a = 'Math passing percentile'\ny = df2[a]\nX = df2.drop([a,'Average math passing rate','Average English passing rate','English passing percentile'], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","0332c675":"print(\"Absent students and poverty are important for math.\")","a78058a4":"a = 'English passing percentile'\ny = df2[a]\nX = df2.drop([a,'Average math passing rate','Average English passing rate','Math passing percentile'], 1)\nrf = RandomForestRegressor(n_jobs=-1)\nrf.fit(X, y)\nnames = X.dtypes.index\nprint(\"Features sorted by their score:\")\nprint (sorted(zip(map(lambda x: round(x, 4), rf.feature_importances_), names), \n             reverse=True))","f4819d05":"print(\"Absent students and poverty are the most important variables for students being successful in Math and English.\")","006177cc":"model = sm.OLS(y_train, X_train, n_jobs=-1)\nmodel = model.fit()\npredictions = model.predict(X_test)\n\n# Plot the model\nplt.figure(figsize=(8,6))\nplt.scatter(predictions, y_test, s=30, c='r', marker='+', zorder=10)\nplt.xlabel(\"Predicted Values - $\\hat{y}$\")\nplt.ylabel(\"Actual Values - $y$\")\nplt.show()\n\nprint(\"MSE:\", mean_squared_error(y_test, predictions))","734ec779":"model.summary()","c60e8d80":"Apparently not. Let's see if English and math are strongly correlated.","a9a7d083":"That doesn't appear to be the case, with numerous outliers. We need a more thorough approach to why some schools are failing and others are succeeding.","57e36edd":"Being an economist, my first suspicion is whether income is the main driver to school performance.","ffbcf8a7":"Now we come to the key takeaways. Once we get to the most important variables in determining how well students do in Math and English, assuming that the test scores are a good metric, we learn that alleviating poverty has the biggest impact on whether a student is going to do well on their math and English exams. Race had no significant impact when considering economics.<br \/>\nThese studies very clearly imply that the bestt programs to increase student success are going  to be general economic development programs to raise people out of poverty. This could come from small tweaks like increase accessbility to food stamps, or raising the bar for eligibility for Medicaid, or it could come from bigger programs like a Universal Basic Income which has very wide support from economists from across the political spectrum.<br \/>\nNo decent person wants to see children failing to learn the skills they need to be successful adults and engaged citizens, and in order to provide children the best environment possible we need to look at what programs will raise people out of poverty. There is a wide economic literature on this topic which can be used by governments across the world to improve the well being of everybody.<br \/>\nLet's make a better New York.<br \/>\nLet's make a better America.<br \/>\nLet's build a more just and peaceful world, driven by science and morality. This is my mission. This is what we must do."}}