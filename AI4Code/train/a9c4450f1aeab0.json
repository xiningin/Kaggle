{"cell_type":{"882614fe":"code","1226f048":"code","9b372119":"code","eccf74b2":"code","81101b7a":"code","2db394b6":"code","799d76a6":"code","21860617":"code","1f2b0405":"code","14e93574":"code","03c67cc2":"code","e464c653":"code","0cfffb31":"code","6909bc9f":"code","44515e5a":"code","6bff10f5":"code","72464954":"code","372dbd37":"code","28732b15":"code","9df8ecca":"code","469b5d48":"code","e9768e98":"code","0a7d7588":"code","b341dc04":"code","db17208f":"code","9d093eea":"markdown","942a13b4":"markdown","4837c1e2":"markdown","fc940b9b":"markdown","cabcc5c0":"markdown","6f7a2635":"markdown","906dc2e2":"markdown","d01432fe":"markdown","fef555d1":"markdown","62ba1b4b":"markdown","6a64d1a5":"markdown","b7a719e8":"markdown","94c6de18":"markdown","459a14b9":"markdown","cc2862d6":"markdown","ad8c5bf5":"markdown","813dc95d":"markdown","16b3e4b0":"markdown","0df40b83":"markdown","c92af857":"markdown","febb6e61":"markdown","bf7ccf63":"markdown","e98767c6":"markdown","6a2f4c4c":"markdown","ff84f35b":"markdown"},"source":{"882614fe":"# packages\n\nimport numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n# display HTML, Js apps\nfrom IPython.core.display import display, HTML, Javascript\n\n# plotly offline\nfrom plotly.offline import download_plotlyjs,init_notebook_mode\ninit_notebook_mode(connected=True)\n\n# data split\nfrom sklearn.model_selection import train_test_split\n\n# scaling\nfrom sklearn.preprocessing import StandardScaler \n\n# pipe\nfrom sklearn.pipeline import Pipeline\n\n# ML\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import  RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import  BaggingRegressor \nfrom sklearn.ensemble import  GradientBoostingRegressor\nfrom catboost import CatBoostRegressor\nfrom sklearn.ensemble import  AdaBoostRegressor\n\n# model Metrics\nfrom sklearn.metrics import mean_squared_error\n\n# model tuning\nfrom sklearn.model_selection import GridSearchCV","1226f048":"# data\ndf = pd.read_csv('..\/input\/melbourne-housing-snapshot\/melb_data.csv')","9b372119":"# missing values\nmissing_value = 100 * df.isnull().sum()\/len(df)\nmissing_value = missing_value.reset_index()\nmissing_value.columns = ['variables','missing values in percentage']\nmissing_value = missing_value.sort_values('missing values in percentage',ascending=False)\n\n# heatmap\nfig = px.imshow(df.isnull().T,template='ggplot2')\nfig.update_layout(title='Missing values in data set')\nfig.show()\n\n# barplot\nfig = px.bar(missing_value, y='missing values in percentage',x='variables',title='Missing values % in each column',\n             template='none',text='missing values in percentage');\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\n\n\nfig.add_annotation(x=3, y=20,\n            text=\"Above 20%\",\n            showarrow=True,\n            arrowhead=3)\nfig.show()","eccf74b2":"%%HTML\n<div class='tableauPlaceholder' id='viz1612329518571' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;me&#47;melbournehouseprices&#47;Houseprice_Dashboard&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='melbournehouseprices&#47;Houseprice_Dashboard' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;me&#47;melbournehouseprices&#47;Houseprice_Dashboard&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1612329518571');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='800px';vizElement.style.height='927px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='800px';vizElement.style.height='927px';} else { vizElement.style.width='100%';vizElement.style.height='727px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","81101b7a":"plt.figure(figsize=(14,6))\nsns.set_context(context='notebook',font_scale=1.1)\nsns.heatmap(df.corr(),annot=True,linewidths=0.2,linecolor='white',cmap='Blues');\nplt.title('Correlation of data');","2db394b6":"plt.style.use('seaborn-whitegrid')\nplot_df = df[['Price','Distance','Landsize','BuildingArea','Longtitude','Lattitude']]\nsns.pairplot(plot_df,diag_kind='kde');\nplt.tight_layout()","799d76a6":"# outliers\nplt.style.use('seaborn-whitegrid')\ndf[['Price','Distance','Landsize','BuildingArea','BuildingArea']].plot(kind='box',figsize=(12,6));\nplt.xticks(rotation=70)\nplt.title('Outliers');","21860617":"# visual check for to ensure null vales are not represented with other values like -999, -1, ?,-111\n\nlist_check = df[['Rooms','Type','Price','Method','Distance','Bedroom2']]\n\nfor feature in list_check.columns:\n    print('*******','Column name:',feature,'*******')\n    print(df[feature].unique())\n    print('***********-end-***********')\n    print(' ')","1f2b0405":"dups = df.duplicated()\ndups.sum()","14e93574":"# null values imputation\n\ndf['Car'].fillna(df['Car'].mode)\ndf['CouncilArea'].fillna(df['CouncilArea'].mode)","03c67cc2":"# Categorical variable\n\ndf['Regionname'] = pd.Categorical(df['Regionname']).codes\ndf['Type'] = pd.Categorical(df['Type']).codes\ndf['CouncilArea'] = pd.Categorical(df['CouncilArea']).codes\ndf['Car'] = pd.Categorical(df['Car']).codes\ndf['Method'] = pd.Categorical(df['Method']).codes","e464c653":"df_new = df[['Price','Rooms','Lattitude','Type','CouncilArea','Car','Method',\n             'Longtitude', 'Regionname','Landsize','Bathroom','Distance','Propertycount']]","0cfffb31":"df_new.info()","6909bc9f":"X = df_new.drop('Price',axis=1)\ny = df_new.pop('Price')","44515e5a":"# scaling\nstd = StandardScaler()\n\nX = std.fit_transform(X)","6bff10f5":"# data split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30 , random_state=1)","72464954":"# LR Model\nlr_model = LinearRegression()\n\n# Fit Model\nlr_model.fit(X_train, y_train)\n\n# Accuracy Score on test set\nlr_score = lr_model.score(X_test,y_test)\n\nprint('R_square',lr_score)\n\n# model metrics\nlr_predict = lr_model.predict(X_test)\n\nlr_model_MSE = np.sqrt(mean_squared_error(y_test,lr_predict))\n\nprint('MSE',lr_model_MSE)","372dbd37":"# Model\nRF_model = RandomForestRegressor()\n\nRF_model.fit(X_train, y_train)\n\nRF_score = RF_model.score(X_test,y_test)\n\nprint('R_square',RF_score)\n\n# metrics\nRF_predict = RF_model.predict(X_test)\n\nRF_model_MSE = np.sqrt(mean_squared_error(y_test,RF_predict))\n\nprint('MSE',RF_model_MSE)","28732b15":"# model\nBR_model = BaggingRegressor()\n\nBR_model.fit(X_train, y_train)\n\nBR_score = BR_model.score(X_test,y_test)\n\nprint('R_square',BR_score)\n\n# metrics\nBR_predict = BR_model.predict(X_test)\n\nBR_model_MSE = np.sqrt(mean_squared_error(y_test,BR_predict))\n\nprint('MSE',BR_model_MSE)","9df8ecca":"# model\nAdB_model = AdaBoostRegressor()\n\nAdB_model.fit(X_train, y_train)\n\nAdB_score = AdB_model.score(X_test,y_test)\n\nprint('R_square',AdB_score)\n\n# metrics\nAdB_predict = AdB_model.predict(X_test)\n\nAdB_model_MSE = np.sqrt(mean_squared_error(y_test,AdB_predict))\n\nprint('MSE',AdB_model_MSE)","469b5d48":"# Model\nDT_model = DecisionTreeRegressor()\n\nDT_model.fit(X_train, y_train)\n\nDT_score = DT_model.score(X_test,y_test)\n\nprint('R_square',DT_score)\n\n# Metrics\nDT_predict = DT_model.predict(X_test)\n\nDT_model_MSE = np.sqrt(mean_squared_error(y_test,DT_predict))\n\nprint('MSE',DT_model_MSE)","e9768e98":"# Model\nCB_model = CatBoostRegressor(verbose=False,loss_function='RMSE',n_estimators=600,depth=7,learning_rate=0.1)\n\nCB_model.fit(X_train, y_train)\n\nCB_score = CB_model.score(X_test,y_test)\n\nprint('R_square',CB_score)\n\n# Metrics\nCB_predict = CB_model.predict(X_test)\n\nCB_model_MSE = np.sqrt(mean_squared_error(y_test,CB_predict))\n\nprint('MSE',CB_model_MSE)","0a7d7588":"model_compare = pd.DataFrame({\"Model\":['CatBoost Regressor','Decision Tree Regressor','Bagging Regressor','Random Forest Regressor','Linear Regression','AdaBoost Regressor'],\n                              'R_square_on_Test_set':[CB_score,DT_score,BR_score,RF_score,lr_score,AdB_score],\n                              \"RMSE\":[CB_model_MSE,DT_model_MSE,BR_model_MSE,RF_model_MSE,lr_model_MSE,AdB_model_MSE]})\n\nmodel_compare = model_compare.sort_values('R_square_on_Test_set',ascending=False)","b341dc04":"model_compare.style.background_gradient(cmap='summer')","db17208f":"fig = px.bar(model_compare,y='R_square_on_Test_set',x='Model',color='RMSE',\n             template='none',title='Model Comparison')\n\nfig.show()","9d093eea":"* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;\"> In the above tableau dashboard, we can filter the region-wise by clicking on Region vs price bubble plot and it will reflect in all other plots as well\n","942a13b4":"# Models Comparison","4837c1e2":"#### <div class=\"alert alert-block alert-info\">\ud83d\udccc Kindly note Tableau Dashboard required some amount of time to load the data and filter the data when we try to click on the map furthermore, Tableau Dashboard can show details to the mapped location and  it might take 10 to 15 seconds to refresh the dashboard<\/div>","fc940b9b":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">BaggingRegressor","cabcc5c0":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">CatBoost Regressor","6f7a2635":"# <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Index\n\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\"> Packages\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\"> Missing Values\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\"> Housing price EDA\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Preprocessing\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">normalization\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Models\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Models Comparison","906dc2e2":"* <span style=\"font-family:Arial; font-size:1.2em;color:#333333;\">We need to be very careful while dealing with outliers here we can observe that price has outliers, but in real estate business some houses are valued not only for rooms and area but also for the vintage looks and some unique features taking a business call here is important\n\n* <span style=\"font-family:Arial; font-size:1.2em;color:#333333;\"> so outliers are not treated ","d01432fe":"![Presentation1.jpg](attachment:Presentation1.jpg)","fef555d1":"![image.png](attachment:image.png)*Click the button down right to reset the dashboard\n","62ba1b4b":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">Decision Tree Regressor","6a64d1a5":"# Models","b7a719e8":"* <span style=\"font-family:Arial; font-size:1.2em;color:#333333;\">In the above pair plot, we can observer that price and Distance has inverse relationship, note that this not to imply the causal relationship","94c6de18":"# <span style=\"font-family: Arial; font-weight:bold;font-size:1.2em;color:#326ada;text-align: center;\">Housing price EDA","459a14b9":"* <span style=\"font-family:Arial; font-size:1.2em; color:#333333;\">some of the independent variables are correlated with each other like Bedroom2 and Rooms furthermore, bathroom and bedroom might lead to multicollinearity\n* <span style=\"font-family:Arial; font-size:1.2em; color:#333333;\">Bedroom2 can be excluded from the model to avoide multicollinearity","cc2862d6":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">Linear Regression","ad8c5bf5":"* <span style=\"color:#333333;font-family:Arial;font-scale:1.2em;\">","813dc95d":"# <span style=\"font-family:Arial;font-size:1.2em;color:#326ada\">Missing Values","16b3e4b0":"* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Using Tableau Public dashboard for EDA\n* <span style=\"font-family: Arial;font-size:1.2em;color:#333333;text-align: center;\">Using different regression model and compare\n","0df40b83":"# <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">Scaling","c92af857":"## <span style=\"font-family: Arial; font-weight:bold;font-size:1.2em;color:#326ada;\">Objective","febb6e61":"# <span style=\"text-align:center;font-family:Arial; font-weight:bold;font-size:1.2em;color:#326ada;\">Housing price prediction","bf7ccf63":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">RandomForestRegressor","e98767c6":"### <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">AdaBoostRegressor","6a2f4c4c":"# Thanks!\n\n# Feel free to post your suggestion!","ff84f35b":"# <span style=\"font-family: Arial;font-size:1.2em;color:#326ada;text-align: center;\">Preprocessing"}}