{"cell_type":{"76f056a3":"code","587cd4a3":"code","c00e8a45":"code","9f8a224d":"code","b2704fe1":"code","afaf5c0e":"code","1c9a62a7":"code","b91e8177":"code","5dc7cc80":"code","36669cd3":"code","9212a356":"code","eecd2cef":"code","ed97695d":"code","49538202":"code","58df94c0":"code","e5590249":"code","377dee05":"code","57946418":"code","a7748756":"code","330988ca":"code","630591b4":"code","f01090fd":"code","0bfaf974":"code","c946764e":"code","9be63c53":"markdown","bef8d1dd":"markdown","b2fca4db":"markdown","69d9fb3b":"markdown","0550dc27":"markdown","067ef463":"markdown","108afbe8":"markdown","202bba52":"markdown","7d290a46":"markdown","3c0a2352":"markdown","30351607":"markdown","1f7086be":"markdown","4a2646e5":"markdown"},"source":{"76f056a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","587cd4a3":"data = pd.read_csv('..\/input\/googleplaystore.csv')","c00e8a45":"data.head()","9f8a224d":"data.tail()","b2704fe1":"data.info()","afaf5c0e":"#there is value '3.0M' which should not be in reviews column so we drop this column\ndata.drop(data.Reviews[data.Reviews == '3.0M'].index, inplace = True) ","1c9a62a7":"#replace space with _ so there is no gap between words in column names\ndata.columns = data.columns.str.replace(' ','_')\n#make Reviews number\ndata.Reviews = pd.to_numeric(data.Reviews ,downcast='integer')\n#make Last update date time format\ndata.Last_Updated= pd.to_datetime(data.Last_Updated)","b91e8177":"#add new column called size_number. Sizes are in kilobytes\ndata['Size_number'] = data.Size.str.replace('M','000')\ndata.Size_number = data.Size_number.str.replace('k','')\ndata.Size_number = data.Size_number.replace('Varies with device', np.NaN)\ndata.Size_number = pd.to_numeric(data.Size_number, downcast = 'integer')","5dc7cc80":"#make installs number\ndata.Installs = data.Installs.str.replace('+','')\ndata.Installs = data.Installs.str.replace(',','')\ndata.Installs = pd.to_numeric(data.Installs,downcast = 'integer')","36669cd3":"#make price float\ndata.Price = data.Price.str.replace('$','')\ndata.Price = pd.to_numeric(data.Price)","9212a356":"data.info()","eecd2cef":"data.head()","ed97695d":"sns.heatmap(data.corr(),vmax = 1, vmin = 0,annot = True)\nplt.show()","49538202":"#Bar plot of average size of applications by categories\naverage_size = []\nfor each in data.Category.unique():\n    average_size.append(data[data.Category == each].Size_number.mean()\/1000)\n\naverage_size_df = pd.DataFrame({'category':data.Category.unique(),'average_size':average_size})\nnew_index = (average_size_df.average_size.sort_values(ascending = False)).index.values\naverage_size_df = average_size_df.reindex(new_index)\n\nplt.figure(figsize = (15,10))\nsns.barplot(x = average_size_df.category, y = average_size_df.average_size)\nplt.xticks(rotation = 90)\nplt.xlabel('Category')\nplt.ylabel('Size (Mbytes)')\nplt.title('Average Size by Categories')\nplt.show()","58df94c0":"#Bar plot of number of paid and free app by categories \npaid = []\nnumber = []\nfor each in data.Category.unique():\n    paid.append(data[(data.Category == each) & (data.Type == 'Paid')].App.count())\n    number.append(data[(data.Category == each)].App.count())\n\napp_df = pd.DataFrame({'Category':data.Category.unique(), 'total':number, 'paid': paid})\nnew_index = (app_df.total.sort_values(ascending = False)).index.values\napp_df =app_df.reindex(new_index)\n\nplt.figure(figsize=(10,15))\nsns.barplot(x = app_df.total,y = app_df.Category, alpha = 0.5, label = 'Total', color = 'green')\nsns.barplot(x = app_df.paid, y = app_df.Category, alpha = 0.5, label = 'Paid', color = 'red')\nplt.xlabel('Number')\nplt.ylabel('Category')\nplt.title('Total Number of Apps by Category ')\nplt.legend()\nplt.show()","e5590249":"#point plot of ratings and reviews\navg_rating=[]\navg_review=[]\nfor each in data.Category.unique():\n    avg_rating.append(data[data.Category == each].Rating.mean())\n    avg_review.append(data[data.Category == each].Reviews.mean())\n    \navg_rating = np.asarray(avg_rating)\navg_review = np.asarray(avg_review)\navg_rating = avg_rating\/max(avg_rating)\navg_review = avg_review\/max(avg_review)\ndata_rr = pd.DataFrame({'category':data.Category.unique(),'rating': avg_rating, 'review': avg_review})\nnew_index = (data_rr.rating.sort_values(ascending = False).index.values)\ndata_rr = data_rr.reindex(new_index)\nplt.figure(figsize=(15,10))\nsns.pointplot(x=data_rr.category,y=data_rr.review, alpha = 0.5, color = 'red')\nsns.pointplot(x=data_rr.category,y=data_rr.rating, alpha = 0.5, color = 'lime')\nplt.xticks(rotation = 90)\nplt.xlabel('Category')\nplt.ylabel('Normalized Rating and Review')\nplt.title('Ratings and Reviews')\nplt.show()","377dee05":"#violin plot of ratings by categories\n\nplt.figure(figsize=(15,10))\nsns.violinplot(x = data.Category, y = data.Rating)\nplt.xticks(rotation= 90)\nplt.show()","57946418":"#countplot of genres of game apps\nplt.figure(figsize=(15,10))\nsns.countplot(data[data.Category == 'GAME'].Genres)\nplt.xticks(rotation = 90)\nplt.show()","a7748756":"#count plot of Android version\nplt.figure(figsize = (15,10))\nsns.countplot(data.Android_Ver)\nplt.xticks(rotation = 90)\nplt.show()","330988ca":"#swarm plot of ratings of paid and free types of health-fitness and food-drink apps\n\ndata_swarm = data[(data.Category == 'HEALTH_AND_FITNESS')|(data.Category == 'FOOD_AND_DRINK')]\n\nplt.figure(figsize = (15,10))\nsns.swarmplot(x = data_swarm.Category, y = data_swarm.Rating, hue = data_swarm.Type)\nplt.show()","630591b4":"#lm plot of max. normalized reviews and size_number\nrev = np.asarray(data.Reviews)\nsiz = np.asarray(data.Size_number)\nrev_n = rev\/max(rev)\nsiz_n = siz\/max(siz)\ndata_dum = pd.DataFrame({'rev':rev_n,'siz':siz_n})\nplt.figure()\nsns.lmplot(x = 'rev', y= 'siz', data = data_dum)\nplt.show()","f01090fd":"#kde plot of price and rating of paid apps\n\ndata_kde = data[data.Type == 'Paid']\nplt.figure(figsize = (15,10))\nsns.lmplot( x = 'Rating', y = 'Price' , data = data_kde)\nplt.show()","0bfaf974":"#box plot of ratings of finance and business apps\n\ndata_box = data[(data.Category == 'FINANCE') | (data.Category == 'BUSINESS')]\nplt.figure(figsize = (15,10))\nsns.boxplot(x = data_box.Category, y = data_box.Rating)\nplt.show()","c946764e":"#boxenplot of size_number of apps by android version\nplt.figure(figsize = (15,10))\nsns.boxenplot(x = data.Android_Ver, y = data.Size_number)\nplt.xticks(rotation = 90)\nplt.show()","9be63c53":"There is not significant relation between number of reviews and size of the app.","bef8d1dd":"4.1 and above is the most common android version for apps.","b2fca4db":"Action and arcade genres are the most popular for game apss.","69d9fb3b":"Avereage of the ratings are not changing too much for different categories but variation.","0550dc27":"There is not any significant correlation between any columns","067ef463":"Family category is in the first place according to number of apps and games are second. Also family category has most apps in paid but medical is in second place for paid apps.","108afbe8":"There is not significant difference for avereage rating of business and finance apps.","202bba52":"Games are the biggest apps in size and tools are the smallest","7d290a46":"There is not significant relation between price and rating for paid apps.","3c0a2352":"Size distrubition of apps are varies for android version of apps.","30351607":"#there are gaps between the words in columns names\n#reviews should be number \n#last update should be date \n#size should be float \n#installs should be number\n#price should be float","1f7086be":"There is not any significant relation between max. normalized average rating and review for app categories.","4a2646e5":"Average and variation of ratings for the categories are close but there are more both free and paid apps for health and fitness then food and drink category "}}