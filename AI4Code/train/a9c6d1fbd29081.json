{"cell_type":{"e691a714":"code","80cd6a86":"code","7893f67c":"code","15edeb7d":"code","9f8959c9":"code","6fccaf7b":"code","c6aab8b0":"code","425c405b":"code","5d19a739":"code","fe84b859":"code","52480eb0":"code","37e0e557":"code","3fecc155":"code","774e4eba":"code","e0d31a81":"code","245af9a7":"code","ff0584cc":"code","def0928a":"code","78216e18":"code","7699a2cb":"code","53d38ef1":"code","f2b9186a":"code","02752295":"code","3e49a761":"code","b5ca052a":"code","419c7409":"code","deb17663":"code","ba90f5c3":"code","af33614c":"code","ca05300e":"code","6219732b":"code","524622fd":"code","86964a2c":"code","165d1855":"code","5ce0240f":"code","9d8f69c0":"code","4b882039":"code","4f49329d":"code","0741b551":"code","fa32f9f8":"code","dc07b0a3":"code","e6bb2519":"code","a27338ef":"markdown","06905ce7":"markdown","062cae69":"markdown","2b4c0ea0":"markdown","01a7d527":"markdown","4f673c28":"markdown","38076e94":"markdown","4386e0aa":"markdown","787263d5":"markdown","8dd66f0e":"markdown","267f51ef":"markdown","4d21645e":"markdown","99208206":"markdown","9f02c4cf":"markdown","4b06ccc4":"markdown","5db42762":"markdown","69fdc1d3":"markdown","8a8926e0":"markdown","9e847416":"markdown","8af9b294":"markdown","ff1b6b08":"markdown","1e62ffe6":"markdown","9d37d65a":"markdown","dc6d94fd":"markdown","0a36abfa":"markdown","3c2aab33":"markdown","84723b60":"markdown","dfafc0fe":"markdown","7c483075":"markdown","d6e7419a":"markdown","834f42f0":"markdown","2a171a1f":"markdown","e0b6a1cf":"markdown","89672db4":"markdown","ef7c3c2f":"markdown","dbbb261f":"markdown","e4ea9e6d":"markdown","9550d7f2":"markdown","d5f5d4f3":"markdown","748c7d97":"markdown","e3730e26":"markdown","9223cf05":"markdown","d4e2279e":"markdown","e2d823ef":"markdown","891b45cb":"markdown","6f7f9af3":"markdown"},"source":{"e691a714":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno as msno\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport math\nfrom statistics import mode\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80cd6a86":"\ndf=pd.read_csv('\/kaggle\/input\/zomato-bangalore-restaurants\/zomato.csv')","7893f67c":"df.head()","15edeb7d":"df.info()","9f8959c9":"df.nunique()","6fccaf7b":"df['listed_in(type)'].unique()","c6aab8b0":"df['dish_liked'].head()[0]","425c405b":"df['reviews_list'][0]","5d19a739":"df.menu_item.head()","fe84b859":"df.isnull().sum()","52480eb0":"msno.matrix(df)","37e0e557":"(df['dish_liked'].isnull().sum())\/(df.shape[0])","3fecc155":"df.drop(['url','phone','menu_item'],axis=1,inplace=True)","774e4eba":"df.columns\n","e0d31a81":"\ndf.rename(columns={'listed_in(type)':'rest_category', 'listed_in(city)':'city','rate':'rating','approx_cost(for two people)':'cost_for_two'},inplace= True)","245af9a7":"df.head()","ff0584cc":"\ndf.drop_duplicates(keep='last',inplace=True)\n\n","def0928a":"df.duplicated().sum()","78216e18":"df.rating.unique()\ndf.rating.replace('-',np.nan, inplace=True)\ndf.rating.replace('NEW',np.nan,inplace=True)\nstring_float = lambda x: x.replace('\/5', '') if type(x) == np.str else x\ndf.rating = df.rating.apply(string_float).str.strip().astype('float')\ndf.rating.head()\n       ","7699a2cb":"df.rating\ntype(df.rating[0])","53d38ef1":"df['cost_for_two'] = df['cost_for_two'].astype(str)\ndf['cost_for_two']=df['cost_for_two'].apply(lambda x: x.replace(',','.'))\ndf['cost_for_two']=df['cost_for_two'].astype(float)","f2b9186a":"for i in df['cost_for_two'].unique():\n    if i<10.0:\n        df['cost_for_two'].replace({i:i*1000}, inplace=True)\n      \n        ","02752295":"df['cost_for_two'].unique()","3e49a761":"list=[]\nfor i in df['dish_liked']:\n    if type(i)!=float:\n        i.split(',')\n        list.append(i)\n# print(list)\n","b5ca052a":"print(mode(list))","419c7409":"# 10 most liked dishes in bangalore\nfrom collections import Counter\nwords_to_count = (word for word in list if word[:1].isupper())\nc = Counter(words_to_count)\nprint (c.most_common(10))","deb17663":"df.describe()","ba90f5c3":"#most voted\ndf[df['votes']==df['votes'].max()]","af33614c":"#Most expensive\ndf[df['cost_for_two']==df['cost_for_two'].max()]","ca05300e":"#most affordable restaurant\ndf[df['cost_for_two']==df['cost_for_two'].min()]","6219732b":"cuisine_list=[]\nfor i in df['cuisines']:\n    if type(i)!=float:\n        i.split(',')\n        cuisine_list.append(i)\n# print(cuisine_list)\nnew_list=[]\nfor i in cuisine_list:\n    new_list.append(i.split(','))\nnew_new_list = []\nfor i in new_list:\n    for j in i:\n        new_new_list.append(j.strip())\n# print(new_new_list)\n\nfrom collections import Counter\nwords_to_count = (word for word in new_new_list if word[:1].isupper())\nc = Counter(words_to_count)\nprint (c.most_common(10))","524622fd":"sns.distplot(df.cost_for_two,kde=False,bins=50)","86964a2c":"plt.figure()\nsns.countplot(df.online_order)","165d1855":"sns.countplot(df.book_table)","5ce0240f":"df.rating.isnull().sum()\/df.shape[0]","9d8f69c0":"fig,axes = plt.subplots(nrows=1, ncols=2, figsize=(12,4))\nsns.distplot( df.rating, ax=axes[0])\nsns.boxplot( df.rating, ax=axes[1])","4b882039":"fig=plt.figure(figsize=(10,3))\nsns.countplot(df.rest_category)\nplt.tight_layout()","4f49329d":"c= df.city.value_counts()[:10]\nc.plot.bar()","0741b551":"s= df.rest_type.value_counts()[:10]\ns.plot.bar()","fa32f9f8":"bt_plot=pd.crosstab(df['rating'], df['book_table'])\nbt_plot.plot(kind='bar',stacked=True);","dc07b0a3":"popular=df['name'].value_counts()[:10]\n# popular.plot.bar()\nsns.barplot(x=popular,y=popular.index,palette='Set1')","e6bb2519":"# most popular outlets\npopular=df['name'].value_counts()[:20]\nprint(popular)","a27338ef":"Haha,..CCD all the way. ","06905ce7":"No of unique values in each column:","062cae69":"Also, one more curious thing I observed. Lemme know if you see it too ;)","2b4c0ea0":"Removing any duplicate entries\n","01a7d527":"First we load the data file.","4f673c28":"# ANALYSIS","38076e94":"Now I'm going to change the rating column from string to float. That will suit us better when we need to do analysis to find relationships between restaurant rating and other factors\n","4386e0aa":"...hmm,...whats friendly staff and rooftop ambience doing in this list?..looks like the data is corrupted. Moving on,..Here's a general statistical description of data","787263d5":"Location wise density of restaurants in Bangalore - top 10 locations with restaurants","8dd66f0e":"I think, not bad. ","267f51ef":"Here's the most affordable one (let me note it down)","4d21645e":"Lets see the 10 most popular food outlet in Bangalore","99208206":"Hi everyone! This is my first kaggle data analysis project. Here you are going to find some interesting details about Zomato delivery in Bangalore. So if you wanna know the biggest restaurant chains in Bangalore, you should scroll ahead :) Wanna know the most voted restaurants? Definitely Scroll ahead :) Wanna know Bangaloreans most relished dish? What are you waiting for???!! Scroll ahead already! :P ","9f02c4cf":"Rating distribution\n\nP.S: I noticed in priliminary analysis there were some null values in this column. So i checked the number of nulls before showing the distribution. The lesser the nulls the more accurate our representation is :)","4b06ccc4":"Number of restaurants that offer\/dont offer booking services","5db42762":"Let's visualise this with the help of missingno module. The white blanks show missing entries in the columns.","69fdc1d3":"# VISUALISATIONS\n","8a8926e0":"Yaay,..its **byg brewski**","9e847416":"Distribution plot of cost_for_two","8af9b294":"Phew..that was lonnng","ff1b6b08":"Hmmm...that doesnt say anything about menus in restaurants.","1e62ffe6":"# DATA CLEANING\nHere we'll clean the data before getting into analysis.\nOkay, first thing,I see the menu_item column with empty list-like entries. So let's see what's happening there.","9d37d65a":"Lets see the most expensive one in town","dc6d94fd":"It looks like KFC , Domino's and Subway are in some kind of partnership to have no more outlets than each other in the city. Who knew of such sweet deals :D","0a36abfa":"Now I will delete the columns which are irrelevant to the analysis","3c2aab33":"Alright, that's it for now :) Let me know what you think. Also please forgive me for some of the laughable code inside. I know refactoring is a real thing, but I was too excited to share my first work :P \n\nDanke!\n\n-Meera.","84723b60":"# GETTING FAMILIAR WITH THE DATASET\nNow let's get familiar with the dataset. Calling first 5 rows...\n","dfafc0fe":"Looks like there are quite a few missing values in the dish_liked column. Lets see how much","7c483075":"That looks like 3.75-ish\n","d6e7419a":"I am soo curious to know which dish is most liked by bangaloreans,...so I can try it next time I visit bangalore!\nDoing some manipulations...","834f42f0":"Now let's see the category wise presence of restaurants on Zomato app.","2a171a1f":"I am also curious about the type of entries in few columns. Some of them look like categorical values, so I'm going to check the values in them.","e0b6a1cf":"Ok, I am reserving it to delete in the future. Meanwhile let's see how many null values are there in the dataset","89672db4":"Lets see the most popular cuisine categories offered by the restaurants.","ef7c3c2f":"Hmm... despite being in the south Bangalore definitely loves **northy-food **:D","dbbb261f":"Let's find which is the most voted restaurant","e4ea9e6d":"Moving to the cost for two column. Same process. Also this time I see some column values less than 10. I dont believe there's a single restaurant in Bangalore where cost for 2 is 1.6 or 2.5 rupees. I am assuming that the data was entered 1.6 for 1600 and similarly. So I'll change <10 values to multiplied by 1000 values for accurate depiction","9550d7f2":"What!!!...what!..did I just do all that to figure out people eat biriyani the most ? Stupid me. Who needs data to know Indians love biriyani. Lets see the 10 most liked dishes.","d5f5d4f3":"Top 10 food types available in the app","748c7d97":"Also lemme change the column titles to something easier and understandable for me.","e3730e26":"Yaay,At 40 rs for 2, **srinidhi sagar** takes the cake.","9223cf05":"Relationship between table-booking service and rating. Looks like there's a positive correlation between them. Not so surprising. ","d4e2279e":"Number of restaurants offering\/not offering online order","e2d823ef":"Wow,..that's more than 50%. So we must be cautious when dealing with entries from this column. ","891b45cb":"Ok so we have basic details like name, location, cuisine info about restaurants. Now lets see what the datatypes of each columns are, how many null values are there in each, any discrepancies etc.\n","6f7f9af3":"ahh..**Leela**, no surprise :D"}}