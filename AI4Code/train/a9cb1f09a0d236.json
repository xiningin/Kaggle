{"cell_type":{"0b35a13e":"code","a92b7a79":"code","b15a7f26":"code","2afbd1e3":"code","42822776":"code","b0fda1ef":"code","0a76612d":"code","3f7a6683":"code","ad42644a":"code","fd98b1bf":"code","53166534":"code","23550e68":"code","9978f538":"code","9e4c6cc1":"code","1d264e45":"code","8100c8d8":"code","a6a55602":"code","68daef8a":"code","9b17e602":"code","c98f0569":"markdown","8d34b97d":"markdown","51e2fc61":"markdown","84a94c74":"markdown","aadd576c":"markdown","3f6f19ca":"markdown","97a3875e":"markdown"},"source":{"0b35a13e":"# declara\u00e7\u00f5es\nimport pandas as pd\nimport numpy as np\n# import matplotlib.pyplot as plt\nimport plotly.graph_objects as go\n# from skimage.io import imread","a92b7a79":"# carregando dataset\ndados = pd.read_csv('..\/input\/leagueoflegends\/LeagueofLegends.csv')","b15a7f26":"dados.shape","2afbd1e3":"dados.describe()","42822776":"dados.info()","b0fda1ef":"dados.isnull().sum()","0a76612d":"# Substituindo nomes dos times nulos por 'SemTag'\ndados.update(dados[['blueTeamTag','redTeamTag']].fillna('SemTag'))","3f7a6683":"# Substituindo nomes dos jogadores nulos por 'SemNome'\ndados.update(dados[['blueTop','blueJungle','blueMiddle','blueADC','blueSupport','redTop','redJungle','redMiddle','redADC','redSupport']].fillna('SemNome'))","ad42644a":"# Por alguma raz\u00e3o alguns jogaores estavam com '=' no nome, foi substituido por 'SemNome'\ndados.update(dados[['blueJungle','redJungle']].replace('=','SemNome'))","fd98b1bf":"# Visualizando dados\nsemtag = dados.loc[dados['blueTeamTag']=='SemTag']\nsemtag[['League','Type','blueTeamTag','redTeamTag','blueTop','blueJungle','blueMiddle','blueADC','blueSupport','redTop','redJungle','redMiddle','redADC','redSupport']]","53166534":"dados2015 = dados.loc[dados['Year'] == 2015]\ndados2016 = dados.loc[dados['Year'] == 2016]\ndados2017 = dados.loc[dados['Year'] == 2017]\ndados2018 = dados.loc[dados['Year'] == 2018]\nq1_2015 = dados2015[['bResult','rResult']].sum()\nq1_2016 = dados2016[['bResult','rResult']].sum()\nq1_2017 = dados2017[['bResult','rResult']].sum()\nq1_2018 = dados2018[['bResult','rResult']].sum()","23550e68":"trace2015 = go.Bar( x = ['BlueTeam', 'RedTeam'],\n                    y = [q1_2015.bResult, q1_2015.rResult],\n                    name = '2015')\ntrace2016 = go.Bar( x = ['BlueTeam', 'RedTeam'],\n                    y = [q1_2016.bResult, q1_2016.rResult],\n                    name = '2016')\ntrace2017 = go.Bar( x = ['BlueTeam', 'RedTeam'],\n                    y = [q1_2017.bResult, q1_2017.rResult],\n                    name = '2017')\ntrace2018 = go.Bar( x = ['BlueTeam', 'RedTeam'],\n                    y = [q1_2018.bResult, q1_2018.rResult],\n                    name = '2018')\nq1data = [trace2015, trace2016, trace2017, trace2018]\n\nq1layout = go.Layout({\n    'title' : {\n        'text': 'Taxa de vit\u00f3rias do lado azul e vermelho por ano',\n        'font': {\n            'size': 20\n        }\n    }\n})\n\nq1fig = go.Figure(data=q1data, layout=q1layout)\n\nq1fig.show()","9978f538":"topchampb = dados['blueTopChamp'].value_counts()\ntopchampr = dados['redTopChamp'].value_counts()\ntopchampb.combine(topchampr, lambda x,y : x+y, fill_value=0)\ntopchamp = topchampb.sort_values(ascending=False)","9e4c6cc1":"champlist = []\nfor champ in topchamp.index:\n    champlist.append(champ)\n\nchampselct = []\nfor champ in topchamp:\n    champselct.append(champ)\n","1d264e45":"tracechamp = go.Bar( x = champlist,\n                    y = champselct)\nq2layout = go.Layout({\n    'title' : {\n        'text': 'Campe\u00f5es do Top mais escolhidos',\n        'font': {\n            'size': 20\n        }\n    }\n})\nq2data = [tracechamp]\nq2fig = go.Figure(data=q2data, layout=q2layout)\n\nq2fig.show()","8100c8d8":"leagues = dados['League'].unique().tolist()","a6a55602":"leagues.remove('RR')\nleagues.remove('IEM')\nleagues.remove('MSI')\nleagues.remove('WC')","68daef8a":"gamelength = []\nfor l in leagues:\n    df = dados.loc[dados[\"League\"]==l]\n    gamelength.append(df['gamelength'].mean())","9b17e602":"tracegamelength = go.Bar( x = leagues,\n                    y = gamelength)\nq3layout = go.Layout({\n    'title' : {\n        'text': 'M\u00e9dia de Partidas por regi\u00e3o',\n        'font': {\n            'size': 20\n        }\n    }\n})\nq3data = [tracegamelength]\nq3fig = go.Figure(data=q3data, layout=q3layout)\n\nq3fig.show()","c98f0569":"## An\u00e1lise","8d34b97d":"#### Informa\u00e7\u00f5es \u00fateis","51e2fc61":"## Codifica\u00e7\u00e3o","84a94c74":"#### Tratamento de dados faltantes","aadd576c":"## Introdu\u00e7\u00e3o  \n### Descri\u00e7\u00e3o: \n\n>League of Legends (lol), \u00e9 um jogo online, multiplayer e de estrat\u00e9gia em tempo real (MOBA), uma partida de lol \u00e9 jogada por 10 jogadores, dividos em dois times, blue e red, sendo 5 contra 5 (5x5). O dataset reuniu alguns atributos de partidas das principais competi\u00e7\u00f5es, entre os anos de 2015 e 2018. Representado pelas colunas, temos atributos como: vit\u00f3ria do time blue ou red, dura\u00e7\u00e3o da partida, campe\u00f5es utilizados por rota, nomes dos jogadores e etc. \n\n### Defini\u00e7\u00f5es:  \n#### Fases de uma partida de League of Legends:\n**early game**: 0 - 15 min   \n**mid game**: 16 - 30 min  \n**late game**: 30 min em diante  \n\n*obs: essa defini\u00e7\u00e3o \u00e9 s\u00f3 para efeito de estudos, pois a defini\u00e7\u00e3o das fases da partida s\u00e3o complexas e podem variar em cada partida.*  \n\n#### Rotas do mapa em League of Legends:\n**top lane**: rota de cima   \n**mid lane**: rota do meio  \n**bot lane**: rota de baixo  \n**jungle**: selva\n\n\n\n### Quest\u00f5es  \n\n1. Qual lado tem mais taxas de vit\u00f3rias por ano?\n2. Quais campe\u00f5es mais utilizados na top lane?\n3. Qual a m\u00e9dia de partidas das regi\u00f5es?","3f6f19ca":"# League of Legends","97a3875e":"#### Quest\u00e3o 1"}}