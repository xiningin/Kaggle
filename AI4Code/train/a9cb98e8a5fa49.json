{"cell_type":{"54d739cd":"code","4ffe37c3":"code","92ba3caf":"code","dc64e1fa":"code","dee20150":"code","bd909322":"code","155acf64":"code","5e36fe38":"code","5e22d885":"code","1f322458":"code","ab8e35c3":"code","ef43bc3e":"code","f2f4d22d":"markdown","5e0b6c09":"markdown"},"source":{"54d739cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ffe37c3":"## define configuration\nPATH_TRAIN = '..\/input\/tabular-playground-series-sep-2021\/train.csv'\nPATH_TEST = '..\/input\/tabular-playground-series-sep-2021\/test.csv'\n\nPATH_H2OAML_SUBMISSION = 'submission.csv'\nPATH_Pyc_SUBMISSION = 'submission_pyc.csv'\n\nMAX_MODEL_RUNTIME_MINS = 10\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","92ba3caf":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\ntrain = dt.fread(PATH_TRAIN)\ntest = dt.fread(PATH_TEST)\n\ntarget = train['claim'].to_numpy().ravel()\ntest_ids = test['id']\n\ndel train[:, ['id', 'claim']]\ntest = test[:, train.names]","dc64e1fa":"train = dt.fread(\"\/kaggle\/input\/tabular-playground-series-sep-2021\/train.csv\")\n\ntrain.head()","dee20150":"test.head()","bd909322":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","155acf64":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target).asfactor()","5e36fe38":"## run model\nfeatures = [x for x in h2o_train.columns if x != 'target']\n\nmodel_h2o = H2OAutoML(stopping_metric='AUC', max_runtime_secs=MAX_MODEL_RUNTIME_SECS)\nmodel_h2o.train(x=features, y='target', training_frame=h2o_train)","5e22d885":"## check leaderboard\nmodel_h2o.leaderboard","1f322458":"## generate predictions\npreds_h2o = model_h2o.leader.predict(h2o_test).as_data_frame()['True']","ab8e35c3":"## create submission\nsubmission = dt.Frame(id=test_ids, claim=dt.Frame(preds_h2o))\nsubmission.head()","ef43bc3e":"## save submission\nsubmission.to_csv(\"submission.csv\")","f2f4d22d":"* Automated Machine Learning(AutoML) has become widely adopted for building, experimenting and productionizing various types of machine learning models across business use-cases.\n\n* There are different open source solutions available and this notebook explores a simple baseline solution for some of them on the Kaggle TPS (September 2021) competition.","5e0b6c09":"# Import Libraries"}}