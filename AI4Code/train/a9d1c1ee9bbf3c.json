{"cell_type":{"8526a323":"code","82b4a5d8":"code","4f6d6547":"code","bb56c109":"code","7cb656de":"code","a234a5d0":"code","2751150b":"code","e8d354da":"code","20fa12ad":"code","0b1c9738":"code","82c2c5c2":"code","40dfab31":"code","e1e1c8a0":"code","8df0c1bb":"code","c55dd525":"code","1a11e005":"code","c08d41ec":"code","77ec1ca9":"code","08700585":"code","e5172c5a":"code","6649b14f":"code","3706862e":"code","bf3d7c8d":"markdown","33e866ab":"markdown","11ee2e14":"markdown","a3383f2a":"markdown","51f86e33":"markdown","13877988":"markdown","4ada7bd0":"markdown","7566c74f":"markdown","37bdd46d":"markdown","d333a025":"markdown","72b0ac1c":"markdown","d007b86b":"markdown","0ec338f5":"markdown","b4912310":"markdown","9fd43c94":"markdown","87f2c0eb":"markdown","098fe303":"markdown","62a40c68":"markdown","3fce629e":"markdown","26eee2c0":"markdown","84175c01":"markdown","3f2630a1":"markdown"},"source":{"8526a323":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nfrom sklearn.cluster import KMeans","82b4a5d8":"iris=pd.read_csv(r'..\/input\/species-segmentation-using-iris-dataset\/iris-dataset.csv')\niris.head()","4f6d6547":"plt.figure(figsize=(10, 10))\nplt.scatter(iris['sepal_length'],iris['sepal_width'])\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","bb56c109":"x=iris.copy()\nkmeans = KMeans(2)\nkmeans.fit(x)","7cb656de":"clusters = iris.copy()\nclusters['cluster_pred']=kmeans.fit_predict(x)\nclusters.head()","a234a5d0":"plt.figure(figsize=(10, 10))\nplt.scatter(iris['sepal_length'],iris['sepal_width'],c=clusters['cluster_pred'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","2751150b":"from sklearn import preprocessing\nx_scaled = preprocessing.scale(iris)\nprint(x_scaled)","e8d354da":"kmeans_scaled = KMeans(2)\nkmeans_scaled.fit(x)","20fa12ad":"clusters_scaled= iris.copy()\nclusters_scaled['cluster_pred']=kmeans.fit_predict(x_scaled)\nclusters_scaled.head()","0b1c9738":"plt.figure(figsize=(10, 10))\nplt.scatter(clusters_scaled['sepal_length'],clusters_scaled['sepal_width'],c=clusters_scaled['cluster_pred'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","82c2c5c2":"wcss = []\ncl_num = 10\nfor i in range (1,cl_num):\n    kmeans= KMeans(i)\n    kmeans.fit(x_scaled)\n    wcss_iter = kmeans.inertia_\n    wcss.append(wcss_iter)\nwcss","40dfab31":"number_clusters = range(1,cl_num)\nplt.plot(number_clusters, wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('Within-cluster Sum of Squares')","e1e1c8a0":"kmeans = KMeans(3)\n# fit the data\nkmeans.fit(x)","8df0c1bb":"\nclusters_scaled['cluster_pred_3']=kmeans.fit_predict(x)\nclusters_scaled.head()","c55dd525":"plt.figure(figsize=(10, 10))\nplt.scatter(clusters_scaled['sepal_length'],clusters_scaled['sepal_width'],c=clusters_scaled['cluster_pred_3'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","1a11e005":"kmeans = KMeans(4)\n# fit the data\nkmeans.fit(x)","c08d41ec":"clusters_scaled['cluster_pred_4']=kmeans.fit_predict(x)\nclusters_scaled.head()","77ec1ca9":"plt.figure(figsize=(10, 10))\nplt.scatter(clusters_scaled['sepal_length'],clusters_scaled['sepal_width'],c=clusters_scaled['cluster_pred_4'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","08700585":"kmeans = KMeans(5)\n# fit the data\nkmeans.fit(x)","e5172c5a":"clusters_scaled['cluster_pred_5']=kmeans.fit_predict(x)\nclusters_scaled.head()","6649b14f":"plt.figure(figsize=(10, 10))\nplt.scatter(clusters_scaled['sepal_length'],clusters_scaled['sepal_width'],c=clusters_scaled['cluster_pred_5'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","3706862e":"plt.figure(figsize=(10, 10))\nplt.scatter(clusters_scaled['sepal_length'],clusters_scaled['sepal_width'],c=clusters_scaled['cluster_pred'],cmap='rainbow')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')\nplt.title(\"sepal_length v\/s sepal_width\")\nplt.show()","bf3d7c8d":"Looks like the two solutions are identical. That is because the original features have very similar scales to start with!","33e866ab":"Separate the original data into 2 clusters.","11ee2e14":"### The Elbow Method","a3383f2a":"# Conclusion ","51f86e33":"**2 Clusters able to explain better than 3 or 4 clusters**","13877988":"## Take Advantage of the Elbow Method","4ada7bd0":"Import and use the <i> method <\/i> function from sklearn to standardize the data. ","7566c74f":"How many clusters are there?","37bdd46d":"# Standardize the variables","d333a025":"# Clustering (scaled data)","72b0ac1c":"Cluster is not helping for analysis ","d007b86b":"## Import the relevant libraries","0ec338f5":"## Load the data","b4912310":"For this exercise, try to cluster the iris flowers by the shape of their sepal. \n\n<i> Use the 'sepal_length' and 'sepal_width' variables.<\/i> ","9fd43c94":"# Clustering (unscaled data)","87f2c0eb":"The Iris flower dataset is one of the most popular ones for machine learning. You can read a lot about it online and have probably already heard of it: https:\/\/en.wikipedia.org\/wiki\/Iris_flower_data_set\n\nWe didn't want to use it in the lectures, but believe that it would be very interesting for you to try it out (and maybe read about it on your own).\n\nThere are 4 features: sepal length, sepal width, petal length, and petal width.\n\nStart by creating 2 clusters. Then standardize the data and try again. Does it make a difference?\n\nUse the Elbow rule to determine how many clusters are there.\n","098fe303":"# Species Segmentation with Cluster Analysis","62a40c68":"Cluster is not helping for analysis","3fce629e":"## Plot the data","26eee2c0":"Cluster is not helping for analysis","84175c01":"### WCSS","3f2630a1":"Load data from the csv file: <i> 'iris_dataset.csv'<\/i>."}}