{"cell_type":{"4060a8a0":"code","051df461":"code","1d085ccf":"code","ef231155":"code","35ac07c0":"code","91d3e831":"code","81dc1332":"code","9b3ebfb3":"code","0227b588":"code","77e96f24":"code","3dd76576":"code","bd0f9a1e":"code","98096013":"code","5d962f75":"code","6a938a73":"code","1bdf84cb":"code","c7a4f282":"code","6cbeaaae":"code","1438633a":"code","d50bf731":"code","392cb18f":"code","e307b3e2":"code","87997107":"code","264b94af":"code","0c7d055d":"code","7a5a9cb8":"code","ea660f28":"code","d5509174":"code","b94397a0":"code","3c59dc8e":"code","0467d55a":"code","72428651":"code","56e29f99":"code","a20a4bd0":"code","99221acf":"code","81517e5d":"code","31d2419f":"code","e763ae99":"code","5601eecf":"code","48f1373a":"code","baad9a78":"code","c721071e":"code","2ddf2ec2":"code","1e31908b":"code","85a762b1":"code","d30c4dd6":"code","795f6613":"code","212b2147":"code","d0d6fc84":"code","d8e114aa":"code","b4a35014":"code","79f68cc9":"code","78d2e6df":"code","605c1b91":"code","7ae7adf5":"code","1175484a":"code","cb039ecf":"code","c8682e10":"code","04054b7d":"code","b7a0f6fe":"code","aba09c99":"code","a3f18176":"code","d59a61b3":"code","166e9780":"code","b8f52cfd":"code","373e8b1c":"code","3cf44dcc":"code","56065d30":"markdown","e315b3e0":"markdown","82c112fd":"markdown","9be7d25d":"markdown","853404ab":"markdown","2ec98410":"markdown","7ff0d189":"markdown","abad8c0f":"markdown","e1a2fb7e":"markdown","1e50a1d4":"markdown","63b98d16":"markdown","5a75d7d0":"markdown","e5c8d326":"markdown","089f9383":"markdown","446b34e0":"markdown","0ad00582":"markdown","8fb74037":"markdown","f9b57b9c":"markdown","52ef807e":"markdown","d20f6a2b":"markdown"},"source":{"4060a8a0":"#Import Libraries\n#set location\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n#        \nimport numpy as np       # linear algebra\nimport pandas as pd      # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno as msno # \n        \n\n# data visualization Libararies\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n\n#ML Libararies:\nfrom sklearn.model_selection    import train_test_split\nfrom sklearn.linear_model       import LinearRegression\nfrom sklearn.linear_model       import LogisticRegression\nfrom sklearn.neighbors          import KNeighborsClassifier\nfrom sklearn.tree               import DecisionTreeClassifier\nfrom sklearn.ensemble           import RandomForestClassifier\nfrom sklearn.naive_bayes        import GaussianNB\nfrom sklearn.linear_model       import SGDClassifier\nfrom lightgbm                   import LGBMClassifier\nfrom sklearn.metrics            import confusion_matrix,accuracy_score","051df461":"train=pd.read_csv('..\/input\/hranalysis\/train.csv')\ntest=pd.read_csv('..\/input\/hranalysis\/test.csv')","1d085ccf":"#Look at head of dataset\nprint(\"Train Head:\\n\", train.head())\n\nprint(\"\\nTest Head:\\n \" ,test.head())","ef231155":"# check shape of Train & Test data\nprint('Train Shape:',train.shape)\nprint('Test Shape:',test.shape)","35ac07c0":"# Dispaly information of Train data\ntrain.info()\n","91d3e831":"#Dispaly information of Test data\ntest.info()","81dc1332":"#Display Discriptive Statistics of Train data\ntrain.describe()","9b3ebfb3":"#Display Discriptive Statistics of Test data\ntest.describe()","0227b588":"import pandas_profiling\ntrain.profile_report()","77e96f24":"#dispaly Correaltion between features through Heatmap : Lighter color Higher correlation (close to 1)\ncorr=train.corr()\n\nplt.figure(figsize=(10,10))\nsns.heatmap(corr,vmax=0.8,square=True,annot=True)","3dd76576":"#most corelated feature\nn=14\ncol=corr.nlargest(n,'is_promoted')['is_promoted'].index\nmost_corr = pd.DataFrame(col)\nmost_corr.columns = ['Most Correlated Features']\nmost_corr","bd0f9a1e":"#visualize deaprtment in the company\nplt.subplots(figsize=(15,5))\nplt.title('Different Department in the company', fontsize = 20)\nplt.xlabel('Department')\nplt.ylabel('count')\ntrain['department'].value_counts(dropna = False).plot.bar(color=['#459397','#63B4B8','#8FC8CB'])\nplt.show()","98096013":"# checking the different regions of the company\nplt.subplots(figsize=(15,5))\nsns.countplot(train['region'], color = '#63B4B8')\nplt.title('Different Regions in the company', fontsize = 20)\nplt.xticks(rotation = 60)\nplt.xlabel('Region Code')\nplt.ylabel('count')\nplt.show()","5d962f75":"#Display no of unique value with categories\neducation=train['education'].value_counts()\n# plotting a pie chart of education lavels\nplt.subplots(figsize=(8,8))\neducation.plot.pie(title='Pie Chart of the Employees Degrees', colors = ['#459397','#63B4B8','#8FC8CB'], shadow = True, autopct = \"%.1f%%\")\nplt.show()","6a938a73":"# plotting a pie chart Representing gendergap\ngender=train['gender'].value_counts()\ngender.plot.pie(title='A Pie Chart Representing GenderGap',autopct=\"%.1f%%\",colors = [\"#54ACB0\", \"#83C3C6\"])\nplt.legend(title='Gender',labels=['Male','Female'],loc='upper right')\nplt.show()","1bdf84cb":"plt.subplots(figsize=(15,5))\nsns.countplot(x = 'education', data = train, hue = 'gender', palette = 'Paired')\nplt.title('Showing Degree & Gender ratio', fontsize = 20)\nplt.show()","c7a4f282":"train['recruitment_channel'].value_counts()","6cbeaaae":"size = [30446, 23220,1142]\nlabels = \"other\", \"sourcing\",'referred'\ncolors = ['#459397','#63B4B8','#8FC8CB']\nexplode = [0.05,0.05,0.05]\n\nplt.subplots(figsize=(8,8))\nplt.pie(size, labels = labels, colors = colors, explode = explode, startangle=90, pctdistance=0.85, shadow = True, autopct = \"%.2f%%\")\n\n#draw circle\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\nplt.title('A Pie Chart Representing Recruitment_Channel', fontsize = 20)\nplt.axis('off')\nplt.legend(loc='upper right')\nplt.show()","1438633a":"train['no_of_trainings'].value_counts()","d50bf731":"# checking the \nplt.subplots(figsize=(10,5))\nsns.stripplot(x=train['no_of_trainings'])\nplt.title('no_of_trainings', fontsize = 20)\nplt.show()","392cb18f":"plt.subplots(figsize=(15,5))\nsns.distplot(train['age'])\nplt.title('Distribution of Age of Employees', fontsize = 20)\nplt.xlabel('Age')\nplt.ylabel('count')\nplt.show()","e307b3e2":"train['previous_year_rating'].value_counts().sort_values().plot.bar(color = 'lightblue', figsize = (15, 7))\nplt.title('Distribution of Previous year rating of the Employees', fontsize = 20)\nplt.xlabel('Ratings', fontsize = 15)\nplt.ylabel('count')\nplt.show()","87997107":"plt.subplots(figsize=(15,5))\nsns.distplot(train['length_of_service'])\nplt.title('showing of length_of_service of Employees', fontsize = 20)\nplt.xlabel('length_of_service in year')\nplt.ylabel('count')\nplt.show()","264b94af":"train['KPIs_met >80%'].value_counts()\n","0c7d055d":"size = [35517, 19291]\nlabels = \"Not Met KPI > 80%\", \"Met KPI > 80%\"\ncolors = [\"cyan\", \"lightblue\"]\nexplode = [0, 0.1]\n\nplt.rcParams['figure.figsize'] = (8, 8)\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, autopct = \"%.2f%%\",startangle=180)\nplt.title('A Pie Chart Representing Gap in Employees in terms of KPI', fontsize = 20)\nplt.axis('off')\nplt.legend()\nplt.show()","7a5a9cb8":"train['awards_won?'].value_counts()\n","ea660f28":"plt.hist(train['awards_won?'])\nplt.title('Display the gap of employee who win Awards or not', fontsize = 20)\nplt.xlabel('0 -No_Awards_wonand 1- Awards_won', fontsize = 20)\nplt.ylabel('count')\nplt.show()","d5509174":"train['avg_training_score'].value_counts()","b94397a0":"plt.subplots(figsize=(15,5))\nsns.distplot(train['avg_training_score'])\nplt.title('Distribution of Training Score among the Employees', fontsize = 20)\nplt.xlabel('avg_training_score')\nplt.ylabel('count')\nplt.show()","3c59dc8e":"train['is_promoted'].value_counts()","0467d55a":"size = [50140, 4668]\nlabels = \"Promoted == NO\", \"Promoted == YES\"\ncolors = ['#459397','#8FC8CB']\nexplode = [0, 0.1]\n\n#draw circle\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.rcParams['figure.figsize'] = (8, 8)\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, autopct = \"%.2f%%\",startangle=180)\nplt.title('Showing a Percentage of employees who Promoted ' , fontsize = 20)\nplt.axis('off')\nplt.legend()\nplt.show()","72428651":"a=['department', 'region', 'education', 'gender', 'no_of_trainings', 'age', 'previous_year_rating',\n       'length_of_service', 'KPIs_met >80%', 'awards_won?']","56e29f99":"for i in a:\n  data = pd.crosstab(train[i],train['is_promoted'])\n  data.div(data.sum(1).astype('float'), axis = 0).plot(kind = 'bar', stacked = True, figsize = (15, 5), color =  ['#459397','#8FC8CB'])\n\nplt.legend()\nplt.show()","a20a4bd0":"sns.barplot(x = \"length_of_service\", y = \"is_promoted\", hue = \"gender\",  data = train ) ","99221acf":"sns.barplot(x = \"no_of_trainings\", y = \"avg_training_score\", hue = \"is_promoted\",  data = train,palette=\"Blues_d\") ","81517e5d":"sns.barplot(x = \"previous_year_rating\", y = \"KPIs_met >80%\", hue = \"is_promoted\",  data = train,palette=\"Blues_d\") ","31d2419f":"sns.barplot(x = \"is_promoted\", y = \"education\", hue = \"gender\",  data = train,palette=\"Blues_d\") ","e763ae99":"sns.barplot(x = \"department\", y = \"is_promoted\", hue = \"gender\",  data = train,palette=\"Blues_d\" ) ","5601eecf":"sns.scatterplot(data=train, x=\"age\", y=\"length_of_service\", hue=\"is_promoted\")","48f1373a":"sns.scatterplot(data=train, x=\"no_of_trainings\", y=\"avg_training_score\", hue=\"is_promoted\")","baad9a78":"sns.scatterplot(data=train, x=\"age\", y=\"is_promoted\", hue=\"gender\")","c721071e":"sns.scatterplot(data=train, x=\"department\", y=\"age\", hue=\"is_promoted\")","2ddf2ec2":"sns.scatterplot(data=train, x=\"department\", y=\"age\", hue=\"is_promoted\")","1e31908b":"def remove_duplicate(data):\n  print(\"BEFOR REMOVING DUPLICATES - No of Row = \" ,data.shape[0])\n  data.drop_duplicates(keep='first',inplace=True)\n  print(\"AFTER REMOVING DUPLICATES - No of Row = \" ,data.shape[0])\n\n  return 'checked Duplicates'\n\nremove_duplicate(train) ","85a762b1":"#Check the missing values in train data\ntrain.isna().sum()","d30c4dd6":"#display of missing values in Train data\nmsno.bar(train, color = '#4CA0A5', figsize = (10,8)) ","795f6613":"#Check the missing values in test data\ntest.isna().sum()","212b2147":"#display of missing values in Test data\nmsno.bar(test, color = '#A5D3D6', figsize = (10,8))  ","d0d6fc84":"train['previous_year_rating']=train['previous_year_rating'].fillna(0)\ntest['previous_year_rating']=test['previous_year_rating'].fillna(0)","d8e114aa":"print (train['length_of_service'].head())\nprint(train['previous_year_rating'].head())","b4a35014":"train['Fresher']=train['previous_year_rating'].apply(lambda x: 'Fresher' if x==0 else 'Experienced')","79f68cc9":"train[['previous_year_rating','length_of_service','Fresher']][train['Fresher']=='Fresher']","78d2e6df":"train[['previous_year_rating','length_of_service','Fresher']].head(15)","605c1b91":"train['education']=train['education'].ffill(axis=0)\ntrain['education']=train['education'].bfill(axis=0)\n\ntest['education']=test['education'].ffill(axis=0)\ntest['education']=test['education'].bfill(axis=0)","7ae7adf5":"display(\"Null value in Train data:\",train.isna().sum())\ndisplay(\"Null value in Test data:\",test.isna().sum())","1175484a":"train=train.drop(['employee_id'],axis=1)\ntest=test.drop(['employee_id'],axis=1)","cb039ecf":"xtrain=train[['department', 'region', 'education', 'gender', 'recruitment_channel',\n       'no_of_trainings', 'age', 'previous_year_rating', 'length_of_service',\n       'KPIs_met >80%', 'awards_won?', 'avg_training_score']]\nytrain=train['is_promoted']\nxtest=test","c8682e10":"def data_encode(endcode_strategy,encode_col,encode_data):\n    if endcode_strategy=='Label_Encoding':\n        print('Label_Encoding')\n        Encoder==Labelencoder()\n        for col in encode_col:\n            print(\"columns\",col)\n            encode_data(col)==Encoder.fit_transform(tuple(encode_data[col]))\n    elif endcode_strategy=='Onehot_Encoding':\n        print('Onehot_Encoding')\n        encode_data=pd.get_dummies(encode_data)  \n        \n    dtype_list=['float64','float32','int64','int32']\n    encode_data.astype(dtype_list[0]).dtypes\n    \n    return encode_data","04054b7d":"encode_col=['department','region', 'education', 'gender', 'recruitment_channel','age']\nendcode_strategy=['Label_Encoding','Onehot_Encoding']\n\nxtrain_encode=data_encode(endcode_strategy[1],encode_col,xtrain)\nxtest_encode=data_encode(endcode_strategy[1],encode_col,xtest)","b7a0f6fe":"xtrain=xtrain_encode\nxtrain.head()","aba09c99":"xtest=xtest_encode\ndisplay(xtest_encode.head())","a3f18176":"#Linear Regression \nlin=LinearRegression()\nlin.fit(xtrain,ytrain)\n\nypred=lin.predict(xtest)\n\nprint(\"Training Accuracy :\", lin.score(xtrain, ytrain))","d59a61b3":"#LogisticRegression\nlog = LogisticRegression(random_state=15)\nlog.fit(xtrain,ytrain)\n\nypred=log.predict(xtest)\n\nprint(\"Training Accuracy :\", log.score(xtrain, ytrain))","166e9780":"#KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(xtrain, ytrain)\n\nypred = knn.predict(xtest)\n\nprint(\"Training Accuracy :\", knn.score(xtrain, ytrain))","b8f52cfd":"#Decision tree\ndtc = DecisionTreeClassifier(max_depth = 5,random_state=25)\ndtc.fit(xtrain, ytrain)\n\nypred = dtc.predict(xtest)\nprint(\"Training Accuracy :\", dtc.score(xtrain, ytrain))","373e8b1c":"#Gaussian Naive Bayes\ngnb = GaussianNB()\ngnb.fit(xtrain, ytrain)\n\nypred = gnb.predict(xtest)\n\nprint(\"Training Accuracy :\", gnb.score(xtrain, ytrain))","3cf44dcc":"#Light Gradient Boosting Classifier\n\nlgb = LGBMClassifier()\nlgb.fit(xtrain, ytrain)\n\nypred = lgb.predict(xtest)\n\nprint(\"Training Accuracy :\", lgb.score(xtrain, ytrain))","56065d30":"<h1 style=\"background-color:ffffff;font-size:30px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:center\">HR_Analysis Case Study<\/h1>\n","e315b3e0":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\"> Univariate Analysis<\/h1>","82c112fd":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">Thank you for Reading!!  \n    \n  Don't forget to appreciate me with an Upvote and Comments.  <\/h1>\n","9be7d25d":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">Bivariate Analysis<\/h1>","853404ab":"Pandas profiling\nPandas Profiling gives the overview of all the features we have used in the model. It gives how many missing values , unique valuesn there distinct count, memory size, Interactions,correlation between variables,mean , skewness, count, heatmap, visualization.","2ec98410":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">6.split dataset into Predictors(independent) & Target(dependent)<\/h1>","7ff0d189":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">Introduction<\/h1>","abad8c0f":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">5. Drop unneccessary columns in both Train & test data<\/h1>","e1a2fb7e":"Missing values are present in \"education\" & \"previous_year_rating \" columns in both Train & Test data.\n\nLet's Handle it based on intution.\n\nWhy missing data in 'previous_year_rating' cloumn?\n\ndata was no entered because these employees were Fresher.(lenght of service=1)\nNo datawould have been there in the datasource itself. Logically we are imputing with \"0\" as Fresher.","1e50a1d4":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">Problem Statement<\/h1>\n\n    Every year, Employees have promoted in the Several companies. Here we work on random dataset of a company.so we have the check employee is promoted or not?","63b98d16":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">4.Check & Fill Missing value:<\/h1>\n\n* Continuous: Mean\/Meadian\/Mode\/Zero(specific value)\n \n* Categorical: backfill\/forward\/other","5a75d7d0":"![HR_Analysis.png](attachment:9727dd4f-309c-437c-8e1f-82e1ea3134ab.png)","e5c8d326":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">Multivariate Analysis<\/h1>","089f9383":"Impute Missing data in 'Education' cloumn\n\nwe assume that wile collecting data Relevant menbers data were collected closed to one another.\n\n1.ffill -> forward fill that fills Missing values with Previous Row value if Previous Row value is NAN, moves to the next element without imputing any value.\n\n2.bfill -> backword fill thaat fills Missing values with Next Row value Next Row value is NAN, moves to the next element without imputing any any value.","446b34e0":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">7. Data Encoding : Label Encoding, Onehot encoding<\/h1>","0ad00582":"Import Dataset","8fb74037":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">8. Model Building<\/h1>","f9b57b9c":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">impute missing value<\/h1>","52ef807e":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\">2.Perform Exploratory Data Analysis (EDA): Undersatanding dataset<\/h1>","d20f6a2b":"<h1 style=\"background-color:ffffff;font-size:20px;font-family:Courier;color:#045F5F;font-weight : bold;text-align:left\"> 3.check duplicate row in train data if present<\/h1>"}}