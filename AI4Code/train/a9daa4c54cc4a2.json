{"cell_type":{"abe245df":"code","f5f18712":"code","b9e4b54e":"code","e702a9b6":"code","00dbac89":"code","b747fca7":"code","da58fef3":"code","4d411a85":"code","b18f4f16":"code","4c83a68a":"code","036baa56":"code","8839570b":"code","e36d14ed":"code","50dc914b":"code","3f7b7e6f":"code","fc73bb38":"code","b099209e":"code","08579c4e":"code","e62d9b54":"code","8b36e255":"code","f9c30502":"code","8f35e60c":"code","6a4ef55f":"code","971150b8":"code","2fe63273":"code","4fcc5f65":"code","81e143fc":"code","789b36ab":"code","3f309673":"code","f9adbae2":"code","56df881d":"code","7e86113a":"code","2c910e0f":"code","241e21d4":"code","c3325431":"code","d9654cf4":"code","c396995e":"code","a5e6935d":"code","89ab59db":"code","d8a5566e":"code","96ca7f33":"code","b392f2e9":"code","8aa3c250":"code","e760a4d0":"code","21286afb":"code","384788fb":"code","513de360":"code","c8985932":"code","3fc47404":"code","9315915d":"code","a2fe7089":"code","09fffd8f":"code","415d50d8":"code","bca3f26a":"markdown","2b29c82f":"markdown","564cc325":"markdown","9fec4f66":"markdown","eb1ed5a9":"markdown","082e07f0":"markdown","27b3afdc":"markdown","e1f91fb8":"markdown","f77f9cfe":"markdown","19178cbc":"markdown","abde7343":"markdown","e99c9a30":"markdown","55f99c52":"markdown","82190e49":"markdown","4831471c":"markdown","ecc886e8":"markdown","4bc37c6f":"markdown"},"source":{"abe245df":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport cufflinks as cf\nfrom scipy import stats\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()","f5f18712":"df = pd.read_csv(\"\/kaggle\/input\/pune-house-data\/Delhi house data.csv\")\ndf.head(n = 5)","b9e4b54e":"df.describe()","e702a9b6":"df.info()","00dbac89":"df.shape","b747fca7":"import missingno as msno\nmsno.bar(df)\nplt.show()","da58fef3":"df.isnull().sum()","4d411a85":"duplicate = df[df.duplicated()]\nduplicate","b18f4f16":"df1 = df.drop_duplicates().reset_index(drop=True)\ndf1.shape","4c83a68a":"df1.isnull().sum()","036baa56":"df1['Per_Sqft'] = df1['Per_Sqft'].fillna(df1['Per_Sqft'].mean())\ndf1['Parking'] = df1['Parking'].fillna(df1['Parking'].mode()[0])","8839570b":"df1 = df1.dropna()","e36d14ed":"df1.isnull().sum()","50dc914b":"df1.shape","3f7b7e6f":"px.histogram(df1,x='Price', color = 'Type')","fc73bb38":"px.histogram(df1,x='BHK')","b099209e":"px.histogram(df1,x='Area',barmode='relative')","08579c4e":"px.histogram(df1,x='Price')","e62d9b54":"px.histogram(df1,x='Parking')","8b36e255":"px.histogram(df1,x='Bathroom')","f9c30502":"px.histogram(df1,x='Furnishing')","8f35e60c":"px.histogram(df1,x='Status')","6a4ef55f":"px.histogram(df1,x='Transaction')","971150b8":"px.histogram(df1,x='Type')","2fe63273":"df1['Furnishing'].value_counts()","4fcc5f65":"df1['Status'].value_counts()","81e143fc":"df1['Transaction'].value_counts()","789b36ab":"df1['Type'].value_counts()","3f309673":"df1['Locality'].value_counts()","f9adbae2":"from sklearn.preprocessing import LabelEncoder\ncols = ['Furnishing','Status','Transaction','Type','Locality']\ndf1[cols] = df1[cols].apply(LabelEncoder().fit_transform)\ndf1.head(n=5)","56df881d":"px.scatter(df1,x='Price',y='Area',color='Locality',size='BHK',hover_data=['Per_Sqft','Type','Status'])","7e86113a":"px.box(df1,points='all')","2c910e0f":"px.violin(df1,x='Price',box=True,points='all')","241e21d4":"zscore = np.abs(stats.zscore(df1))\nprint(zscore)","c3325431":"print(np.where(zscore > 5))","d9654cf4":"df1 = df1[(zscore<5).all(axis=1)]","c396995e":"df1.shape","a5e6935d":"df1.corr()","89ab59db":"px.imshow(df1.corr())","d8a5566e":"x = df1.drop('Price',axis=True)\ny = df1['Price']","96ca7f33":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","b392f2e9":"from sklearn.preprocessing import MinMaxScaler\nms = MinMaxScaler()\nx_train = ms.fit_transform(x_train)\nx_test = ms.transform(x_test)","8aa3c250":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.metrics import r2_score","e760a4d0":"k_reg = KNeighborsRegressor()\nk_reg.fit(x_train,y_train)\n\nk_acc = r2_score(y_test,k_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (k_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (k_reg.score(x_test,y_test)))","21286afb":"l_reg = LinearRegression()\nl_reg.fit(x_train,y_train)\n\nl_acc = r2_score(y_test,l_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (l_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (l_reg.score(x_test,y_test)))","384788fb":"d_reg = DecisionTreeRegressor()\nd_reg.fit(x_train,y_train)\n\nd_acc = r2_score(y_test,d_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (d_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (d_reg.score(x_test,y_test)))","513de360":"r_reg = RandomForestRegressor()\nr_reg.fit(x_train,y_train)\n\nr_acc = r2_score(y_test,r_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(r_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(r_reg.score(x_test,y_test)))","c8985932":"x_reg = XGBRegressor()\nx_reg.fit(x_train,y_train)\n\nx_acc = r2_score(y_test,x_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(x_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(x_reg.score(x_test,y_test)))","3fc47404":"B_reg = BaggingRegressor()\nB_reg.fit(x_train,y_train)\n\nB_acc = r2_score(y_test,B_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(B_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(B_reg.score(x_test,y_test)))","9315915d":"GB_reg = GradientBoostingRegressor()\nGB_reg.fit(x_train,y_train)\n\nGB_acc = r2_score(y_test,GB_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(GB_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(GB_reg.score(x_test,y_test)))","a2fe7089":"models = pd.DataFrame({\n    'Models': ['Knn','Linear','DecisionTree','RandomForest','XGB','Bagging','GradientBoosting'],\n    'Scores': [k_acc,l_acc,d_acc,r_acc,x_acc,B_acc,GB_acc]\n\n})\n\nmodels.sort_values(by = 'Scores',ascending = False)","09fffd8f":"px.bar(models,x='Models',y = 'Scores',color='Models')","415d50d8":"plt.style.use('dark_background')\nplt.figure(figsize=(10,5))\nsns.histplot(y_test, color=\"red\", label=\"100% Equities\", kde=True, stat=\"density\", linewidth=0)\nsns.histplot(x_reg.predict(x_test), color=\"blue\", label=\"100% Equities\", kde=True, stat=\"density\", linewidth=0)\nplt.show()","bca3f26a":"# Removing Outliers","2b29c82f":"**XGBRegressor**","564cc325":"# <center> <div class=\"alert alert-block alert-info\"> <span style=\"color:crimson;\"> Models <\/center>","9fec4f66":"**GradientBoostingRegressor**","eb1ed5a9":"**Statistical Insights**","082e07f0":"# Data Cleaning","27b3afdc":"**RandomForestRegressor**","e1f91fb8":"**LinearRegression**","f77f9cfe":"**KNeighborsRegressor**","19178cbc":"# Import Libraries","abde7343":"# Normalization","e99c9a30":"# <center> <div class=\"alert alert-block alert-info\"> <span style=\"color:crimson;\"> Delhi House Price Prediction <\/center>","55f99c52":"**BaggingRegressor**","82190e49":"**DecisionTreeRegressor**","4831471c":"# <center> <div class=\"alert alert-block alert-info\"> <span style=\"color:crimson;\"> Data Preprocessing <\/center>","ecc886e8":"# Data Visualize","4bc37c6f":"![image.png](attachment:c96ef4dd-0663-4aea-9468-d460ce2ede9c.png)"}}