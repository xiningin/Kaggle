{"cell_type":{"edc58536":"code","6dc1725a":"code","5983ed5f":"code","2d4084de":"code","a5a65e02":"code","3a614ac0":"code","e009a9ef":"code","7e6ec0fb":"code","54ee32ce":"code","e1fe3e63":"code","13daf00b":"code","6f932f6c":"code","bf4ba9ef":"code","f89bcede":"code","511eae9b":"code","719caf5a":"code","b892479a":"code","d6c16575":"code","b34ae1f1":"code","69a79b29":"code","aa955906":"code","fa47aa52":"code","7753206b":"markdown","0fc6b111":"markdown","fa2b4404":"markdown","97639561":"markdown"},"source":{"edc58536":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6dc1725a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport plotly.express as px","5983ed5f":"# Not limiting the column number when displaying dataframe\npd.set_option(\"display.max_columns\", None)","2d4084de":"df = pd.read_csv(\"..\/input\/shiba-inu-data\/SHIB-USD.csv\", sep = \",\", skipinitialspace = True)\ndf.head()","a5a65e02":"df.tail()","3a614ac0":"df.columns","e009a9ef":"rows = df.shape[0]\ncols = df.shape[1]\n\nprint(\"Before cleaning, there are \" + str(rows) + \" rows and \" + str(cols) + \" columns in this dataframe.\")","7e6ec0fb":"dupRows = df.duplicated().sum()\nprint(\"There are \" + str(dupRows) + \" duplicated rows in the dataframe.\")","54ee32ce":"df.isnull().sum()","e1fe3e63":"df.nunique()","13daf00b":"df.info()","6f932f6c":"df.dtypes.value_counts()","bf4ba9ef":"df.memory_usage()","f89bcede":"df.describe()","511eae9b":"%matplotlib inline\n\ndf.plot(x = \"Date\", y = [\"Open\", \"High\", \"Low\", \"Close\"], title = \"Value Development over time\", xlabel = \"Date\", ylabel = \"Value\", figsize = (30, 14))","719caf5a":"fig = px.line(df, x = \"Date\", y = [\"Open\", \"High\", \"Low\", \"Close\"], title = \"Interactive Time Series Analysis\")\nfig.show()","b892479a":"df.plot(subplots = True, x = \"Date\", title = \"Value Development over time\", xlabel = \"Date\", ylabel = \"Value\", figsize = (30, 18))","d6c16575":"df.corr()","b34ae1f1":"#cmap = sns.diverging_palette(100, 200, s = 40, l = 65, n = 9)\ncorrmat = df.corr()\nplt.subplots(figsize = (22, 22))\nsns.heatmap(corrmat,cmap = \"copper\",annot = True, square = True, cbar_kws = {'label': 'Correlation Value', 'orientation': 'horizontal'});","69a79b29":"sns.pairplot(df, palette = \"flag\")","aa955906":"pip install pandas-profiling[notebook]","fa47aa52":"import pandas_profiling\nfrom pandas_profiling import ProfileReport\n\nprofile = ProfileReport(df, title = \"Pandas Profiling Report\", explorative = True)\n\nprofile.to_widgets()","7753206b":" # **<span style = \"color: #f1c40f;\">TABLE OF CONTENTS<\/span>**\n \n\n**IMPORTING LIBRARIES**\n\n**LOADING & DISPLAYING DATA**\n\n**EXPLORATORY DATA ANALYSIS**\n\n\n# **<span style = \"color: #f1c40f;\">IMPORTING LIBRARIES<\/span>**","0fc6b111":"# <h1 style = \"background: #fdfefe; border:0; color:black\"><b>SHIBA INU - EDA<\/b><\/h1>","fa2b4404":" # **<span style = \"color: #f1c40f;\">LOADING & DISPLAYING DATA<\/span>**","97639561":" # **<span style = \"color: #f1c40f;\">EXPLORATORY DATA ANALYSIS<\/span>**"}}