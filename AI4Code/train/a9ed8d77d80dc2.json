{"cell_type":{"60623a9a":"code","61963540":"code","f34dcd94":"code","533e4bcb":"code","16d1ada6":"code","a103fc9b":"code","ce9051d5":"code","ac3e9fdf":"code","ec94667d":"code","6612f7af":"code","49279320":"code","8f465482":"code","42dbc57d":"code","3c003ad3":"code","2044afdf":"markdown","564f965d":"markdown","19c8b45a":"markdown","6bac2230":"markdown","bfeab725":"markdown","87a6ad86":"markdown","f8a40faa":"markdown","1615a0ec":"markdown","b6b53248":"markdown"},"source":{"60623a9a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes  import BernoulliNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,classification_report","61963540":"data = pd.read_csv(r'\/kaggle\/input\/sms-spam-collection-dataset\/spam.csv',encoding='latin-1')\ndata.head()","f34dcd94":"data.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'],axis=1,inplace=True)\ndata.columns = ['label','messages']","533e4bcb":"data.head()","16d1ada6":"data.isnull().sum()","a103fc9b":"data.groupby('label').describe()","ce9051d5":"vect = TfidfVectorizer()\nx = vect.fit_transform(data['messages'].tolist())\nprint(len(vect.get_feature_names()))\nprint(vect.get_feature_names()[1000:1010])\nprint(x.toarray()[:5])\nx = x.toarray()","ac3e9fdf":"y = data['label'].tolist()\ny = np.array(y)","ec94667d":"print(\"Output Variable :\",y.shape)\nprint(\"Input Variable :\",x.shape)","6612f7af":"x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=10,test_size=0.3)","49279320":"model = BernoulliNB()\nmodel.fit(x_train,y_train)\nprediction = model.predict(x_test)\nprint(accuracy_score(y_test,prediction))\nprint(classification_report(y_test,prediction))","8f465482":"model = BernoulliNB(alpha=0.74)\nmodel.fit(x_train,y_train)\nprediction = model.predict(x_test)\nprint(accuracy_score(y_test,prediction))\nprint(classification_report(y_test,prediction))","42dbc57d":"print(pd.crosstab(y_test,prediction))","3c003ad3":"sms = [\"Congrats You have won a price in the xyz competion, click on the link to claim it  www.abc.advertise.com\/ \"]\nspam = vect.transform(sms)\nprint(model.predict(spam))","2044afdf":"# **Splitting data into training(%70) and testing(%30)**","564f965d":"# **Using Naive Bayes Classifier**\n\nIt is a classification technique based on Bayes\u2019 Theorem with an assumption of independence among predictors. In simple terms, a Naive Bayes classifier assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature.","19c8b45a":"# **Checking for spam sms**","6bac2230":"# **Importing Modules**","bfeab725":"## **Cleaning the dataset**","87a6ad86":"## **Tuning parameters**","f8a40faa":"### #beginnerscode &emsp; #codingisfun &emsp; #datasciencewithpy","1615a0ec":"# **Using Tfidf Vectorizer**\n\nTFIDF is another way to convert textual data to numeric form, and is short for Term Frequency-Inverse Document Frequency. The vector value it yields is the product of these two terms; TF and IDF.\n\nMore about TfidfVectorizer :\nhttps:\/\/en.wikipedia.org\/wiki\/Tf%E2%80%93idf\n\nImplementation :\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.feature_extraction.text.TfidfVectorizer.html","b6b53248":"# **Uploading the dataset**"}}