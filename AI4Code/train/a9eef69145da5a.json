{"cell_type":{"d8ba2bfa":"code","93314581":"code","99463851":"code","31997851":"code","d6e0492b":"code","e716cfa4":"code","dd88b1e1":"code","08c72de1":"code","7432dc1a":"code","51391f6e":"code","c05ac662":"code","dd06e605":"code","1382d0f9":"code","a9ce7374":"code","b3ed198d":"code","336a4857":"code","f05016d5":"code","75f16818":"code","dc10fb61":"code","fdc0cd51":"code","89023ccb":"code","6a940173":"code","87f0eec5":"code","55a5df90":"code","18b2acf7":"code","0cc95e6b":"code","3a45b317":"code","36d126d9":"code","4fd53668":"code","b51630d1":"code","913887c2":"code","11729e5a":"code","29b5da8b":"code","41d486c8":"code","0bd70ae7":"code","662800b9":"code","76cefb40":"code","338690a2":"code","77529a7e":"code","52de3eb4":"code","deb18d27":"code","b760df99":"code","421cda52":"code","dc82b711":"code","fc96948f":"code","957077eb":"code","38078c79":"code","8d9a478e":"code","8910f3f7":"code","92b3515b":"code","337fcf3e":"code","e8245667":"code","74a4f0a8":"code","37e8f043":"code","b9114963":"code","820411b7":"code","fefddc9b":"code","51f5cd17":"code","035a69e7":"code","ce4d2d06":"code","73be52cf":"code","acd47159":"code","6a083da1":"code","281434a0":"code","335ff387":"code","8156268b":"code","2d2211d1":"code","3203487b":"code","8eea2530":"code","6cf1eb4c":"code","8c323406":"code","1e359378":"code","55e17684":"code","36511b9c":"markdown","af076b06":"markdown","fcb7bf02":"markdown","6658cb47":"markdown","31db86b3":"markdown","551e206b":"markdown","cf0c9dbc":"markdown","c7864b19":"markdown","cb934d29":"markdown","da0eb5de":"markdown","7c62914c":"markdown","ff7627aa":"markdown","e78e01d2":"markdown","1c2b2da9":"markdown","17bb6a86":"markdown","6af32522":"markdown","7f3fa8ee":"markdown","9e81284f":"markdown","959ddfa4":"markdown","a8049897":"markdown","657a214b":"markdown","e8b46611":"markdown","33fc486c":"markdown","0820772a":"markdown","2efe72a8":"markdown","ad2f9135":"markdown","02bbb73b":"markdown","9920eb02":"markdown","50340b29":"markdown","22a0fc05":"markdown","3a70ed9a":"markdown","933f874f":"markdown","3c6c459d":"markdown","8593187e":"markdown","d09ae643":"markdown","12e739eb":"markdown","ac143bc2":"markdown","9a267d6f":"markdown","a69e51d1":"markdown","721ec6dc":"markdown","57068053":"markdown","0a4e207e":"markdown","06f9942f":"markdown","0a7d1508":"markdown","db2de1f4":"markdown","86451feb":"markdown","e85b44ba":"markdown","63b60cdf":"markdown","d1515936":"markdown","9b747e2b":"markdown","df67156a":"markdown","8de186c7":"markdown","9e760657":"markdown","67e2db92":"markdown","69734859":"markdown","f24cc32e":"markdown","30d32bad":"markdown","39700193":"markdown"},"source":{"d8ba2bfa":"import pandas as pd\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nimport os\nimport gc\nimport itertools\n","93314581":"distance = pd.read_csv('..\/input\/santa-2021\/distance_matrix.csv')\ndistance","99463851":"permutations = pd.read_csv('..\/input\/santa-2021\/permutations.csv')\npermutations","31997851":"wild = pd.read_csv('..\/input\/santa-2021\/wildcards.csv')\nwild","d6e0492b":"submission = pd.read_csv('..\/input\/santa-2021\/sample_submission.csv')\nsubmission","e716cfa4":"print(len(submission.loc[0,'schedule']))\nprint(len(submission.loc[1,'schedule']))\nprint(len(submission.loc[2,'schedule']))","dd88b1e1":"submission.loc[0,'schedule']","08c72de1":"submission.loc[1,'schedule']","7432dc1a":"submission.loc[2,'schedule']","51391f6e":"#submission.to_csv('submission.csv', index=False)","c05ac662":"print(list(itertools.permutations([1, 2, 3])))","dd06e605":"print(list(itertools.permutations([1, 2, 3],2)))","1382d0f9":"comm =permutations[permutations.Permutation.str[:2] =='\ud83c\udf85\ud83e\udd36']\ncomm","a9ce7374":"other =permutations[permutations.Permutation.str[:2] !='\ud83c\udf85\ud83e\udd36'].reset_index(drop=True)\nother","b3ed198d":"a=comm.copy()\nb=comm.copy()\nc=comm.copy()\nfor i in range(len(other)):\n    if i%3 ==0:\n        a = a.append(other.iloc[i],ignore_index=True)\n    if i%3 ==1:\n        b = b.append(other.iloc[i],ignore_index=True)\n    if i%3 ==2:\n        c = c.append(other.iloc[i],ignore_index=True)\n        \naa =str()\nbb =str()\ncc =str()\nfor i in a.Permutation.values:\n    aa +=i\n\nfor i in b.Permutation.values:\n    bb +=i\nfor i in c.Permutation.values:\n    cc +=i\n    \n    \nsubmission.loc[0,'schedule'] = aa\nsubmission.loc[1,'schedule'] = bb\nsubmission.loc[2,'schedule'] = cc","336a4857":"submission.to_csv('submission.csv', index=False)\nsubmission","f05016d5":"print(len(submission.loc[0,'schedule']))\nprint(len(submission.loc[1,'schedule']))\nprint(len(submission.loc[2,'schedule']))","75f16818":"comm_check =str()\nfor i in comm.Permutation.values:\n    comm_check +=i\ncomm_check","dc10fb61":"other_check =str()\nfor i in other.Permutation.values:\n    other_check +=i\nlen(other_check)","fdc0cd51":"#comm_check.find(other_check[i:i+7])","89023ccb":"len(comm_check)","6a940173":"for r in range(int(len(other_check)\/7)):\n    x = r*7\n    #for i in range(len(comm_check)-7):\n    if comm_check.find(other_check[x:x+7])== True:\n            print('find',x)\n    else:\n            comm_check +=other_check[x:x+7]\n    #if x%100 ==0:\n    #    print(x)","87f0eec5":"len(comm_check)","55a5df90":"data = permutations.Permutation.to_list()\nprint(data[:10])\nprint(len(data))","18b2acf7":"all_check =str(data.pop(int(np.random.rand()*len(data))))\nprint(all_check)\nprint(len(data))","0cc95e6b":"pattern_list = list(itertools.permutations(range(7),7))\npattern_list[0:3]","3a45b317":"pattern = pd.DataFrame()\npattern['permutation'] = pattern_list.copy()\npattern['permutation'] = pattern['permutation'].apply(lambda x: str(x[0])+str(x[1])+str(x[2])+str(x[3])+str(x[4])+str(x[5])+str(x[6]))\npattern","36d126d9":"len(pattern.permutation.unique())","4fd53668":"pattern =pattern[pattern['permutation'].str[:2] !='01'].reset_index(drop=True)\npattern","b51630d1":"a = str()\nfor i in range(len(pattern)):\n    a+=str(pattern.permutation.values[i])\nlen(a)","913887c2":"comm = pd.DataFrame()\ncomm['permutation'] = pattern_list.copy()\ncomm['permutation'] = comm['permutation'].apply(lambda x: str(x[0])+str(x[1])+str(x[2])+str(x[3])+str(x[4])+str(x[5])+str(x[6]))\ncomm = comm[comm['permutation'].str[:2] =='01'].reset_index(drop=True)\ncomm","11729e5a":"'''\npattern['con5_idx'] = str()\npattern['con5_flg'] = str()\npattern['con5_add'] = str()\n\na=str()\nidx1 =0\nfor i in pattern.permutation.str[-6:]:\n    idx2=0\n    for x in pattern.permutation.str[:6]:\n        if x ==i:\n            if a.find(i) == -1  and pattern.con5_flg[idx1] =='':\n                if pattern.con5_flg[idx2] =='':\n                    pattern.con5_flg[idx2] =str('1')\n                pattern.con5_flg[idx1] =str('-1') #block\n                pattern.con5_idx[idx1]+= str(idx2)+' '\n                pattern.con5_add[idx1]+=str(pattern.permutation.str[:8][idx1])+str(pattern.permutation.str[-2:][idx2]) \n                a+= str(i)+' '\n                break\n                \n        idx2+=1\n    idx1+=1\n       \npattern\n\naa = pattern.index[pattern.con5_flg=='1'].to_list()\n\npattern = pattern.drop(pattern.index[aa]).reset_index(drop=True)\n\na = pattern[pattern.con5_add=='']\n\n\npattern.con5_add.iloc[a.index] = a.permutation\n\na = str()\nfor i in range(len(pattern)):\n    a+=str(pattern.con5_add.values[i])\nlen(a)\n'''","29b5da8b":"pattern","41d486c8":"def pattern_right(pattern,line,dels,xx,yy):\n #print(dels)\n pattern[f'con5{yy}_idx'] = str()\n pattern[f'con5{yy}_flg'] = str()\n pattern[f'con5{yy}_add'] = str()\n a=str()\n idx1 =0\n for i in pattern[f'con5{xx}_add']:\n     if len(i)<= dels:\n        i = 'x'\n     i = i[-dels:]\n     idx2=0\n     for x in pattern[f'con5{xx}_add']:\n         if len(x)<= dels:\n            x= 'y'\n         #print(x) \n         x =x[:dels]\n         #if idx2 <5:\n         #    print('#',x,i,len(x),len(i),dels,idx1,idx2)\n         if x ==i:\n             if a.find(i) == -1  and pattern[f'con5{yy}_flg'][idx1] =='' and idx1!=idx2:\n                 #if idx1 ==0: #DEBUG\n                 #   print(x,i,len(x),len(i),dels,idx1,idx2)\n                 if  pattern[f'con5{yy}_flg'][idx2] =='' and pattern[f'con5{yy}_flg'][idx1]=='':\n                     pattern[f'con5{yy}_flg'][idx2] =str('1')\n                     pattern[f'con5{yy}_flg'][idx1] =str('-1') #block\n                     pattern[f'con5{yy}_idx'][idx1]+= str(idx2)+' '\n                     pattern[f'con5{yy}_add'][idx1]+=str(pattern[f'con5{xx}_add'][idx1])+str(pattern[f'con5{xx}_add'][idx2][-int(len(pattern[f'con5{xx}_add'][idx2]))+dels:])\n                     a+= str(i)+' '\n                     break\n                \n         idx2+=1\n     idx1+=1\n     #if idx1==2:\n     #       stop\n\n \n a = pattern[pattern[f'con5{yy}_add']=='']\n\n pattern[f'con5{yy}_add'].iloc[a.index] = a[f'con5{xx}_add']\n\n aa = pattern.index[pattern[f'con5{yy}_flg']=='1'].to_list()\n #print(aa)\n #   display('droped')\n pattern = pattern.drop(pattern.index[aa]).reset_index(drop=True)\n #else:\n #   display(aa)\n\n a = str()\n for i in range(len(pattern)):\n     a+=str(pattern[f'con5{yy}_add'].values[i])\n print('length=',len(a),'  step=',line,len(pattern),' ',dels)\n\n return pattern,len(a)","0bd70ae7":"def pattern_left(pattern,line,dels,xx,yy):\n #print(dels)\n pattern[f'con5{yy}_idx'] = str()\n pattern[f'con5{yy}_flg'] = str()\n pattern[f'con5{yy}_add'] = str()\n a=str()\n idx1 =0\n for i in pattern[f'con5{xx}_add']:\n     if len(i)<= dels:\n        i = 'x'\n     i = i[:dels]\n     idx2=0\n     for x in pattern[f'con5{xx}_add']:\n         if len(x)<= dels:\n            x= 'y'\n         #print(x) \n         x =x[-dels:]\n         #if idx2 <5:\n         #    print('#',x,i,len(x),len(i),dels,idx1,idx2)\n         if x ==i:\n             if a.find(i) == -1  and pattern[f'con5{yy}_flg'][idx1] =='' and idx1!=idx2:\n                 #if idx1 ==0: #DEBUG\n                 #   print(x,i,len(x),len(i),dels,idx1,idx2)\n                 if  pattern[f'con5{yy}_flg'][idx2] =='' and pattern[f'con5{yy}_flg'][idx1]=='':\n                     pattern[f'con5{yy}_flg'][idx2] =str('1')\n                     pattern[f'con5{yy}_flg'][idx1] =str('-1') #block\n                     pattern[f'con5{yy}_idx'][idx1]+= str(idx2)+' '\n                     pattern[f'con5{yy}_add'][idx1]+=str(pattern[f'con5{xx}_add'][idx2])+str(pattern[f'con5{xx}_add'][idx1][-int(len(pattern[f'con5{xx}_add'][idx1]))+dels:])\n                     break\n                     a+= str(i)+' '                  \n                \n         idx2+=1\n     idx1+=1\n     #if idx1==2:\n     #       stop\n\n \n a = pattern[pattern[f'con5{yy}_add']=='']\n\n pattern[f'con5{yy}_add'].iloc[a.index] = a[f'con5{xx}_add']\n\n aa = pattern.index[pattern[f'con5{yy}_flg']=='1'].to_list()\n #print(aa)\n #   display('droped')\n pattern = pattern.drop(pattern.index[aa]).reset_index(drop=True)\n #else:\n #   display(aa)\n\n a = str()\n for i in range(len(pattern)):\n     a+=str(pattern[f'con5{yy}_add'].values[i])\n print('length=',len(a),'  step=',line,len(pattern),' ',dels)\n return pattern,len(a)","662800b9":"pattern['con50_add'] =pattern['permutation']","76cefb40":"saved = pattern.copy()","338690a2":"pattern =saved.copy()\npattern","77529a7e":"a=str() \nfor i in range(len(pattern)):\n     a+=str(pattern.con50_add.values[i])\nprint('length=',len(a))","52de3eb4":"'''\npattern,length = pattern_right(pattern,1,dels=6,xx='',yy=0)\n#pattern,length = pattern_left(pattern,1,dels=6,xx='',yy=0)\npattern\n'''","deb18d27":"line=0\n'''\n#pattern,length = pattern_left(pattern,line=2,dels=6,xx=line,yy=line+1)\npattern,length = pattern_left(pattern,line+2,dels=6,xx=line,yy=line+1)\npattern\n'''","b760df99":"saved = pattern.copy()","421cda52":" pattern = saved.copy()","dc82b711":"pattern = saved.copy()\n#pattern,length = pattern_left(pattern,3,dels=6,xx=1,yy=2)\nlength_all=['6_a','6_b','6_a','6_a','6_b','6_a','6_b','5_b','5_b','5_a','5_b','5_b','4_a','4_a','4_a','4_b','4_b','5_a','5_b','4_b','4_a','3_a','3_b','3_b','3_a','3_a','2_a','2_a','2_b','2_b','2_a','2_b','1_a','1_b','1_b','1_a','1_a','1_b','1_a','1_b','1_b','1_a','1_b','1_a','1_a','1_b']\nline=-1\n\n\nfor i in range(len(length_all)):\n    dels = length_all.pop(0)\n    line+=1\n    if dels.split('_')[1] =='a':\n        pattern,length = pattern_right(pattern,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)\n    else:\n        pattern,length = pattern_left(pattern,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)","fc96948f":"alls = str()\nfor i in range(len(pattern)):\n    alls+=str(pattern.con546_add.values[i])\nalls.find('0214365')","957077eb":"line","38078c79":" a = str()\n for i in range(len(pattern)):\n     a+=str(pattern[f'con5{line+1}_add'].values[i])\n len(a)","8d9a478e":"listed =pattern[f'con5{line+1}_add'].to_list()\nlen(listed)","8910f3f7":"length =[]\nfor i in range(len(listed)):\n    length.append(len(listed[i]))","92b3515b":"a = np.argsort(length)\na = a[::-1]\na","337fcf3e":"add =[]\nfor i in a:\n    add.append(listed[a[int(np.where(a==i)[0])]])\nlen(add)","e8245667":"#if miss ==1:\n#    xx-=1\na = str()\nfor i in range(len(pattern)):\n     a+=str(pattern[f'con5{line+1}_add'].values[i])\nall =a\n","74a4f0a8":"len(add[0])","37e8f043":"len(add[1])","b9114963":"alls=str()\nfor i in range(len(add)):\n    alls+=add[i]\nlen(alls)","820411b7":"a=str()\nb=str()\nc=str()\na1=0\na_comm =[]# [pd.DataFrame(columns=['con50_add'])]\nb_comm =[]\nc_comm =[]\nfor i in add:\n    if len(b) >= len(a) and len(a) <= len(c):\n        a+=i\n        a_comm.append(i)\n    else:\n        if len(a) >= len(b) and len(b) <= len(c):\n            b+=i\n            b_comm.append(i)\n        \n        else:\n            if len(a) >= len(c) and len(c) <= len(b):\n                c+=i\n                c_comm.append(i)\n    x+=1    ","fefddc9b":"comm_l = comm.permutation.to_list()","51f5cd17":"list_ = a_comm+comm_l\ndataa = pd.DataFrame(columns=['con50_add'],index=range(len(list_)))\ndataa.con50_add = list_\n\nlist_ = b_comm+comm_l\ndatab = pd.DataFrame(columns=['con50_add'],index=range(len(list_)))\ndatab.con50_add = list_\n\nlist_ = c_comm+comm_l\ndatac = pd.DataFrame(columns=['con50_add'],index=range(len(list_)))\ndatac.con50_add = list_","035a69e7":"dataa =dataa.reset_index(drop=True)\ndatab =datab.reset_index(drop=True)\ndatac =datac.reset_index(drop=True)","ce4d2d06":"length_all=['6_a','6_b','5_a','5_b','4_a','4_b','3_a','3_b','2_a','2_b','1_a','1_b']\nline=-1\n\n\nfor i in range(len(length_all)):\n    dels = length_all.pop(0)\n    line+=1\n    if dels.split('_')[1] =='a':\n        dataa,length = pattern_right(dataa,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)\n    else:\n        dataa,length = pattern_left(dataa,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)","73be52cf":"length_all=['6_a','6_b','6_a','6_b']\nline=-1\nfor i in range(len(length_all)):\n    dels = length_all.pop(0)\n    line+=1\n    if dels.split('_')[1] =='a':\n        datab,length = pattern_right(datab,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)\n    else:\n        datab,length = pattern_left(datab,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)","acd47159":"length_all=['6_a','6_b','6_a','6_b']\nline=-1\nfor i in range(len(length_all)):\n    dels = length_all.pop(0)\n    line+=1\n    if dels.split('_')[1] =='a':\n        datac,length = pattern_right(datac,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)\n    else:\n        datac,length = pattern_left(datac,line+2,dels=int(dels.split('_')[0]),xx=line,yy=line+1)","6a083da1":" a = str()\n for i in range(len(dataa)):\n     a+=str(dataa[f'con54_add'].values[i])\n len(a)","281434a0":" b = str()\n for i in range(len(datab)):\n     b+=str(datab[f'con54_add'].values[i])\n len(b)","335ff387":" c = str()\n for i in range(len(datac)):\n     c+=str(datac[f'con54_add'].values[i])\n len(c)","8156268b":"def change(a):\n a =a.replace('0', '\ud83c\udf85')  \n a =a.replace('1', '\ud83e\udd36')\n a =a.replace('2', '\ud83e\udd8c')\n a =a.replace('3', '\ud83e\udddd')\n a =a.replace('4', '\ud83c\udf84')\n a =a.replace('5', '\ud83c\udf81')\n a= a.replace('6', '\ud83c\udf80')\n return a\n\ndef rechange(a):\n a =a.replace('\ud83c\udf85','0')  \n a =a.replace('\ud83e\udd36','1')\n a =a.replace('\ud83e\udd8c','2')\n a =a.replace('\ud83e\udddd','3')\n a =a.replace('\ud83c\udf84','4')\n a =a.replace('\ud83c\udf81','5')\n a= a.replace('\ud83c\udf80','6')\n return a","2d2211d1":"parta = change(a)\npartb = change(b)\npartc = change(c)\nall_=parta+partb+partc\nparta[:1000]","3203487b":"submission.loc[0,'schedule'] = parta\nsubmission.loc[1,'schedule'] =partb\nsubmission.loc[2,'schedule'] = partc\n\nsubmission.to_csv('submission.csv', index=False)","8eea2530":"print(len(submission.loc[0,'schedule']))\nprint(len(submission.loc[1,'schedule']))\nprint(len(submission.loc[2,'schedule']))","6cf1eb4c":"\nfor i in permutations.Permutation.values:\n    if str(all_).find(i)==-1:\n        display('Error',i)\n        break\n","8c323406":"rechange('\ud83c\udf85\ud83e\udd8c\ud83e\udd36\ud83c\udf84\ud83e\udddd\ud83c\udf80\ud83c\udf81')","1e359378":"#for i in permutations.Permutation.values:\n#    if submission.loc[0,'schedule'].find(i)==-1:\n#        display('Error',i)\n#        break\n    ","55e17684":"submission","36511b9c":"\u3053\u306e\u30b3\u30f3\u30da\u306f\u6570\u5b66\u7684\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u3084\u308b\u3079\u304d\u3067\u3059\u304c\u3001\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u529b\u696d\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002<br>\nOR-Tool\u306a\u3069\u306e\u4fbf\u5229\u306a\u3082\u306e\u304c\u3042\u308b\u306e\u306f\u77e5\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3057\u307e\u3046\u3068\u982d\u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002<br>\n\u305b\u3063\u304b\u304f\u3084\u308b\u306e\u3067\u3001\u529b\u696d\u3067\u3059\u304c\u5b66\u3073\u304c\u3042\u3063\u305f\u65b9\u304c\u3001\u6b21\u306b\u3064\u306a\u304c\u308b\u3068\u4fe1\u3058\u3066\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n\nThis competition should be done with a mathematical approach, but I don't know, so I'll do it by force.<br>\nI know there are useful things like OR-Tool, but if you use them, you will not use your head. <br>\nI will do it with all my might, so I believe that it will lead to the next one if I have learned it, although it is a hard work.","af076b06":"\u4eca\u56de\u306e\u30b3\u30f3\u30da\u3067\u5229\u7528\u3059\u308b\u3082\u306e\u3067\u3059\u3002[1,2,3]\u3068\u3044\u3046\u6570\u5b57\u3092\u4e0e\u3048\u3001\u3069\u306e\u3088\u3046\u306a\u7d44\u307f\u5408\u308f\u305b\u304c\u3042\u308b\u304b\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u306a\u3093\u3066\u4fbf\u5229\u3060\u3002\n\nIt will be used in this competition. It gives the number [1,2,3] and shows what combinations are available. How convenient.","fcb7bf02":"\u96e3\u3057\u3044\u306e\u3067\u3001other\u306e\u4e2d\u3092\uff11\u500b\u3065\u3064\u62bd\u51fa\u3057\u306a\u304c\u3089\u3001\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308c\u3070\u6392\u9664\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u521d\u5fc3\u8005\u306e\u79c1\u306b\u306f\u3044\u3044\u304b\u306a\u3042\u3002\n\nIt's difficult, so I wonder if it's good for me as a beginner to take an approach that extracts duplicates one by one and eliminates any duplicates.","6658cb47":"permuraton*permuration\u306e\u4e00\u89a7\u306b\u306a\u308a\u307e\u3059\u306d\u3002\u3053\u306e\u6570\u5b57\u306e\u610f\u5473\u306f\u3001\u3042\u3068\u3067\u8abf\u3079\u307e\u3059\u3002\n\nIt will be a list of permuraton * permuration. The meaning of this number will be checked later.","31db86b3":"### \u5168\u4ef6\u7a81\u304d\u5408\u308f\u305b\u308b\uff1f\n\n### Match all cases?","551e206b":"# \u521d\u5fc3\u8005\u306e\u65b9\u3078\uff1a\n\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u3001\u753b\u9762\u306esubmit\u306e\u6b04\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u63d0\u51fa\u3067\u304d\u307e\u3059\u3002<br>\n\u30b3\u30fc\u30c9\u306f\u6700\u5f8c\u306b\u3001submission.to_csv('submission.csv', index=False)\u306e\u6587\u3092\u5165\u308c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002<br>\n<u>\u305f\u3081\u3057\u306b\u3053\u306enotebook\u306esubmit\u62bc\u3059\u3068\u3001\u30b9\u30b3\u30a2\u304c\u3067\u307e\u3059\u3002<\/u><br>\n\u3088\u3046\u3053\u305d\u3001kaggle\u306e\u4e16\u754c\u3078\u3002\n       \n# For beginners:\nAfter creating the code, you can submit it by clicking the submit field on the screen.<br>\nIf you do not enter the statement submission.to_csv ('submission.csv', index = False) at the end of the code, an error will occur.<br>\n<u>If you try submit this notebook, you will get a score.<\/u>\n\n![image.png](attachment:235b9aed-c89c-48fb-b9a0-91de35f9336d.png)","cf0c9dbc":"# \u307e\u305a\u9069\u5f53\u306b\u3084\u308b\n\n# First do it ","c7864b19":"3034\n3039\n3039","cb934d29":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">Import<\/span>","da0eb5de":"# itertools","7c62914c":"![image.png](attachment:0540fb2d-ea44-4acc-b380-51ce68cd258b.png)","ff7627aa":"1\u884c\u76ee\u306f\u5fc5\u9808\u306e\u6620\u753b\u3060\u3051\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002","e78e01d2":"\u8a18\u53f7\u306e\u3059\u3079\u3066\u306e\u9806\u5217\ud83c\udf85\u3001\ud83e\udd36\u3001\ud83e\udd8c\u3001\ud83e\udddd\u3001\ud83c\udf84\u3001\ud83c\udf81\u3001\u304a\u3088\u3073\ud83c\udf80\u3002\uff17\u7a2e\u985e\u3042\u308b\u3063\u3066\u3053\u3068\u3067\u3059\u306d\u3002\n\nAll permutations of the symbols \ud83c\udf85, \ud83e\udd36, \ud83e\udd8c, \ud83e\udddd, \ud83c\udf84, \ud83c\udf81, and \ud83c\udf80.There are 7 types.","1c2b2da9":"\u30a8\u30e9\u30fc\u304c\u3067\u3066\u306a\u3051\u308c\u3070ok\n\nif there aren't error,so its ok","17bb6a86":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">permutations<\/span>","6af32522":"## \u3084\u3063\u3068\u3046\u3054\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\n\n## It's finally moving. I had a hard time.","7f3fa8ee":"\u30c7\u30fc\u30bf\u3092\uff11\u4ef6\u683c\u7d0d\u3059\u308b\u3068\u304d\u3001\u6b8b\u308a\u306e\u30c7\u30fc\u30bf\u5168\u90e8\u3068\u683c\u7d0d\u3057\u305f\u30c7\u30fc\u30bf\u5168\u90e8\u3092\u7a81\u304d\u5408\u308f\u305b\u308b\u306e\u304c\u3044\u3044\u306e\u304b\uff1f\u305d\u3093\u306a\u3053\u3068\u3092\u3057\u305f\u3089\u5929\u6587\u5b66\u7684\u306a\u91cf\u306e\u8a08\u7b97\u304c\u5fc5\u8981\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u30025039\u306e5039\u4e57\u304b\u3002\u7121\u7406\u3002\n\nWhen storing one data, is it better to match all the remaining data with all the stored data? If you do that, you will need to calculate astronomical quantities. Is it 5039 to the 5039 power? unreasonableness.","9e81284f":"### <font color='orange'> \u6587\u5b57\u5217\u306e\u53f3\u5074\u306e\u91cd\u8907\u3092\u63a2\u3059Function\n\n###  <font color='orange'> Function to look for duplicates on the right side of the string","959ddfa4":"![image.png](attachment:492afc6d-c989-472f-b62c-24173267f71b.png)","a8049897":"\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3063\u3066\u4f55\uff1f<br>\n\u5404\u6587\u5b57\u5217\u306b\u306f\u6700\u59272\u3064\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\ud83c\udf1f\u3002\u3053\u308c\u306f\u3001\u9806\u5217\u5185\u306e\u4efb\u610f\u306e\u8a18\u53f7\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002 \u8907\u6570\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3080\u9577\u30557\u306e\u6587\u5b57\u5217\u306f\u3001\u9806\u5217\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u307e\u305b\u3093\u3002<br>\n\u3046\u30fc\u3093\u3001\u610f\u5473\u304c\u308f\u304b\u3089\u3093\u3002\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u306f\u6700\u5f8c\u306b\u3084\u308b\u3053\u3068\u306b\u3057\u3088\u3046\u3002\n\nWhat is a wildcard?<br>\nEach string may have up to two wildcards \ud83c\udf1f, which will match any symbol in a permutation. No string of length seven containing more than one wildcard will count as a permutation.<br>\nWell, I don't understand the meaning.","657a214b":"### \u30eb\u30fc\u30eb<br>\n\u6b21\u306e\u6761\u4ef6\u306b\u5f93\u3063\u3066\u30017\u3064\u306e\u8a18\u53f7\ud83c\udf85\u3001\ud83e\udd36\u3001\ud83e\udd8c\u3001\ud83e\udddd\u3001\ud83c\udf84\u3001\ud83c\udf81\u3001\u304a\u3088\u3073\ud83c\udf80\u306e\u3059\u3079\u3066\u306e\u9806\u5217\uff08\u8aac\u660e\u304c\u96e3\u3057\u3044\u306e\u3067google\u691c\u7d22\u3092\uff09\u3092\u542b\u30803\u884c\u306e\u30bb\u30c3\u30c8\u3092\u898b\u3064\u3051\u307e\u3059\u3002\n\n\u30fb\u3059\u3079\u3066\u306e\u9806\u5217\u306f\u3001\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u884c\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u30fb\ud83c\udf85\ud83e\udd36\u3067\u59cb\u307e\u308b\u5404\u9806\u5217\u306f\u30013\u3064\u306e\u884c\u3059\u3079\u3066\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u30fb\u5404\u6587\u5b57\u5217\u306b\u306f\u6700\u59272\u3064\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\ud83c\udf1f\u3002\u3053\u308c\u306f\u9806\u5217\u5185\u306e\u4efb\u610f\u306e\u8a18\u53f7\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3080\u9577\u30557\u306e\u6587\u5b57\u5217\u306f\u3001\u9806\u5217\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u307e\u305b\u3093\u3002<br>\n\u30fb\u3042\u306a\u305f\u306e\u30b9\u30b3\u30a2\u306f3\u3064\u306e\u5f26\u306e\u4e2d\u3067\u6700\u3082\u9577\u3044\u3082\u306e\u306e\u9577\u3055\u3067\u3042\u308a\u3001\u30b9\u30b3\u30a2\u304c\u4f4e\u3044\u307b\u3069\u826f\u3044\u3067\u3059\u3002<br>\n\n### Rule <br>\nFind a set of 3 lines containing all the permutations of the 7 symbols \ud83c\udf85, \ud83e\udd36, \ud83e\udd8c, \ud83e\udddd, \ud83c\udf84, \ud83c\udf81, and \ud83c\udf80 (google search because it's difficult to explain):\n\n\u00b7 All permutations must be contained in at least one row. <br>\n\u00b7 Each permutation starting with \ud83c\udf85\ud83e\udd36 must be included in all three rows. <br>\n\u00b7 Each string can contain up to 2 wildcards \ud83c\udf1f. This matches any symbol in the permutation. A string of length 7 that contains multiple wildcards does not count as a permutation. <br>\n-Your score is the length of the longest of the three strings, the lower the score, the better. <br>","e8b46611":"------------------------------------------","33fc486c":"\u5358\u7d14\u306b\u3084\u308b\u3068\u3053\u3046\u306a\u308b\u3002\u3053\u306e\u4e2d\u306b\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u304b\u3089\u305d\u308c\u3092\u6392\u9664\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u305d\u308c\u304c\u3053\u306e\u30b3\u30f3\u30da\u306a\u3093\u3067\u3057\u3087\u3046\u3002\u3053\u3053\u3067distance\u306e\u767b\u5834\u304b\u306a\u3002<br>\nother\u3092\u6a2a\u306b\u4e26\u3079\u308b\u3068\u91cd\u8907\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3068\u3001distance\u3092\u3069\u3046\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b\u304c\u8ab2\u984c\u3002\u982d\u75db\u304f\u306a\u3063\u305f\u306e\u3067\u3001\u4f11\u61a9\n\nIf you do it simply, it will be like this. Some of these are duplicates, so we have to eliminate them. That is this competition.I wonder if distance is here.<br>\nThe issues are that there are some overlaps when other are arranged side by side, and how to use distance. I had a headache, so I took a break","0820772a":"## \u8ab2\u984c<br>\n\u300cAlwaysChristmas\u3001AlltheTime\u300d\u306e24\u6642\u9593\u5e74\u4e2d\u7121\u4f11\u306e\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30c6\u30ec\u30d3\u30c1\u30e3\u30f3\u30cd\u30eb\u3002\u5f7c\u3089\u306e\u65b0\u3057\u3044\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d3\u30e5\u30fc\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u5f7c\u3089\u306f\u30c6\u30ec\u30d3\u7528\u306e\u30af\u30ea\u30b9\u30de\u30b9\u6620\u753b\u30de\u30e9\u30bd\u30f3\u3067\u7269\u4e8b\u3092\u59cb\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff01\u5f7c\u3089\u306f\u3001\ud83c\udf85\u3001\ud83e\udd36\u3001\ud83e\udd8c\u3001\ud83e\udddd\u3001\ud83c\udf84\u3001\ud83c\udf81\u3001\ud83c\udf80\u306a\u3069\u306e\u6620\u753b\u306e\u30d7\u30ec\u30df\u30a2\u306b\u8208\u596e\u3057\u3066\u3044\u307e\u3059\uff01\u3053\u306e\u7d75\u304c\u6620\u753b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u3042\u306a\u305f\u306e\u4ed5\u4e8b\u306f\u3001\u30a8\u30eb\u30d5\u304c\u6620\u753b\u306e\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8868\u793a\u3059\u308b\u6700\u77ed\u306e\u8996\u8074\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u30a8\u30eb\u30d5\u3092\u52a9\u3051\u3001SantaTV +\u3092\u3067\u304d\u308b\u3060\u3051\u65e9\u304f\u30e9\u30a4\u30d6\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3059\uff01\n\u3059\u3079\u3066\u306e\u6620\u753b\u3092\u3059\u3079\u3066\u306e\u53ef\u80fd\u306a\u7d44\u307f\u5408\u308f\u305b\u3067\u898b\u3066\u3001\u3069\u308c\u304c\u6700\u3082\u30af\u30ea\u30b9\u30de\u30b9\u3063\u307d\u3044\u611f\u3058\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u73fe\u5728\u610f\u5473\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002<br>\n\n\u3042\u306a\u305f\u306e\u76ee\u7684\u306f\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u5f93\u3063\u3066\u30017\u3064\u306e\u8a18\u53f7\ud83c\udf85\u3001\ud83e\udd36\u3001\ud83e\udd8c\u3001\ud83e\udddd\u3001\ud83c\udf84\u3001\ud83c\udf81\u3001\u304a\u3088\u3073\ud83c\udf80\u306e\u3059\u3079\u3066\u306e\u9806\u5217\u3092\u542b\u30803\u3064\u306e\u6587\u5b57\u5217\u306e\u30bb\u30c3\u30c8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u3059\u3079\u3066\u306e\u9806\u5217\u306f\u3001\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\ud83c\udf85\ud83e\udd36\u3067\u59cb\u307e\u308b\u5404\u9806\u5217\u306f\u30013\u3064\u306e\u6587\u5b57\u5217\u3059\u3079\u3066\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u5404\u6587\u5b57\u5217\u306b\u306f\u6700\u59272\u3064\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\ud83c\udf1f\u3002\u3053\u308c\u306f\u9806\u5217\u5185\u306e\u4efb\u610f\u306e\u8a18\u53f7\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002 \u8907\u6570\u306e\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u542b\u3080\u9577\u30557\u306e\u6587\u5b57\u5217\u306f\u3001\u9806\u5217\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u307e\u305b\u3093\u3002\n\u3042\u306a\u305f\u306e\u30b9\u30b3\u30a2\u306f\u30013\u3064\u306e\u5f26\u306e\u4e2d\u3067\u6700\u3082\u9577\u3044\u3082\u306e\u306e\u9577\u3055\u3067\u3059\u3002 \u3053\u308c\u306f\u6700\u5c0f\u5316\u554f\u984c\u3067\u3042\u308b\u305f\u3081\u3001\u30b9\u30b3\u30a2\u304c\u4f4e\u3044\u307b\u3069\u826f\u3044\u3067\u3059\u3002\n\n## Challenges <br>\nA 24-hour, 24\/7 streaming TV channel for \"Always Christmas, All the Time\". To debut their new station, they decided to start things with a Christmas movie marathon for TV! They are excited about the movie premiere of \ud83c\udf85, \ud83e\udd36, \ud83e\udd8c, \ud83e\udddd, \ud83c\udf84, \ud83c\udf81, \ud83c\udf80 and more! This picture looks like a movie.\nYour job is to help the elves by giving them the shortest viewing schedule to see all the combinations of movies and get SantaTV + to live as soon as possible!\nWatch all the movies in all possible combinations to see which one feels most Christmas-like. But I don't understand the meaning now.<br>\n\nYour objective is to find a set of three strings containing every permutation of the seven symbols \ud83c\udf85, \ud83e\udd36, \ud83e\udd8c, \ud83e\udddd, \ud83c\udf84, \ud83c\udf81, and \ud83c\udf80 as substrings, subject to the following conditions:\n\nEvery permutation must be in at least one string.\nEach permutation beginning with \ud83c\udf85\ud83e\udd36 must be in all three strings.\nEach string may have up to two wildcards \ud83c\udf1f, which will match any symbol in a permutation. No string of length seven containing more than one wildcard will count as a permutation.\nYour score is the length of the longest of the three strings. This is a minimization problem, so lower scores are better.","2efe72a8":"length= 7305 ","ad2f9135":"# \u6570\u5b57\u3067\u8003\u3048\u3066\u3044\u3053\u3046\n\n# Let's think with numbers","02bbb73b":"### \ud83c\udf1f\u4eca\u5f8c\u306e\u6539\u826f\u30dd\u30a4\u30f3\u30c8\n### \u2705comm\u306e\u5727\u7e2e\u5316\n### \u30fb\u9069\u5f53\u306b\u5727\u7e2e\u3057\u3066\u3044\u308bother\u306e\u6700\u9069\u5727\u7e2e\n### \u2705comm+other\u306e\u5727\u7e2e\u5316\n### \u30fb\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u4f7f\u3046<br>\n### \u2705\uff83\uff9e\uff70\uff80\u3092\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\n### \u30fb\u3044\u307e\u3060\u306b\u8b0e\u306adistance\u3001wild\u30c7\u30fc\u30bf\n\n### \ud83c\udf1fFuture improvement points\n### \u2705comm compression\n### \u30fb Optimal compression of other that is properly compressed\n### \u2705 Compression of comm + other\n### \u30fb Use wildcards\n### \u2705 Sort data in descending order\n### \u30fb Still mysterious distance, wild data","9920eb02":"\u307e\u305a\u3001\ud83c\udf85\ud83e\udd36\u306e\u9806\u5217\u306f\uff13\u3064\u306e\u884c\u306b\u5fc5\u8981\u306a\u306e\u3067\u3053\u308c\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002","50340b29":"\u3053\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3068\u3044\u308d\u3093\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305a\u306f\u3001\u5358\u7d14\u306b\u5408\u8a08\u3057\u3066\u3044\u304f\u7d2f\u7a4d\u548c<br>\nYou can do many things with this tool. First, the cumulative sum that is simply summed up\n\n","22a0fc05":"\u91cd\u8907\u304c\uff11\u4ef6\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u3044\u3002\u305d\u3046\u304b\u3001\u683c\u7d0d\u3059\u308b\u9806\u756a\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u306d\u3002\u3053\u306e\uff11\u30d1\u30bf\u30fc\u30f3\u3067\u306f\uff11\u4ef6\u3060\u3051\u3002\u5168\u30d1\u30bf\u30fc\u30f3\u30c1\u30a7\u30c3\u30af\u3068\u3044\u3046\u306e\u306f\u73fe\u5b9f\u7684\u306a\u3093\u3060\u308d\u3046\u304b\uff1f\n\nOnly one duplicate can be found. Well, it depends on the order of storage. Only one case in this one pattern. Is it realistic to check all patterns?","3a70ed9a":"###  <font color='orange'> \u6587\u5b57\u5217\u306e\u5de6\u5074\u306e\u91cd\u8907\u3092\u63a2\u3059Function\n\n###  <font color='orange'> Function to look for duplicates on the left side of the string","933f874f":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">Let's Try<\/span>","3c6c459d":"![image.png](attachment:ab327347-5196-4eb0-9de9-7921859af387.png)","8593187e":"# \u9806\u5217\n# permutation","d09ae643":"\u3068\u308a\u3042\u3048\u305a\u3001\u30b3\u30f3\u30da\u304c\u306f\u3058\u307e\u3063\u305f\u306e\u3067\u30c7\u30fc\u30bf\u3092\u307f\u308b\u3068\u3053\u308d\u3092\u3084\u3063\u3066\u307f\u307e\u3059\u3002EDA\u5b9f\u65bd\u4e2d\u3067\u3059\u3002\u3053\u306e\u30b3\u30f3\u30da\u306fsubmit\u306f\uff11\u65e510\u56de\u3067\u304d\u307e\u3059\u3002\u666e\u901a\u306f\u30012\u56de\u304b5\u56de\u306a\u306e\u306b\u3002\u96e3\u6613\u5ea6\u304c\u9ad8\u3044\u304b\u3089\u304b\uff1f<br>\n<u>\u521d\u5fc3\u8005\u304c\u4f5c\u3063\u305f\u3001\u521d\u5fc3\u8005\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002<\/u>\n\nFor the time being, the competition has started, so let's take a look at the data. EDA is in progress. You can submit this competition 10 times a day. Usually it's 2 or 5 times. Is it because the difficulty is high? <br>\n<u> This is a code for beginners made by beginners. <\/u>","12e739eb":"\u7b2c\u4e8c\u5f15\u6570\u306b\u8a66\u3057\u306b2\u3092\u5165\u308c\u308b\u3068\u3001[1,2,3]\u306e\u4e2d\u306e[1,2]\u3060\u3051\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\n\nIf you try to put 2 in the second argument, only [1,2] in [1,2,3] will be calculated.","ac143bc2":"> \u3059\u3079\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u304c\u8996\u8074\u3092\u7d42\u4e86\u3059\u308b\u307e\u3067\u3001SantaTV +\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u3001\u30af\u30ea\u30b9\u30de\u30b9\u6620\u753b\u306e\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u898b\u308b\u306e\u306b\u6700\u3082\u52b9\u7387\u7684\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u3001\u304a\u3082\u3061\u3083\u306e\u4f5c\u6210\u306b\u623b\u308b\u306e\u3092\u624b\u4f1d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n> \n> They can\u2019t launch SantaTV+ until all the groups have finished watching - so help give them the most efficient schedule to see every Christmas movie combination, and help them get back to making toys!","9a267d6f":"\u3069\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u306a\u3044\u304b\u63a2\u3059","a69e51d1":"\u5171\u901a\u306e\u3082\u306e\uff08\ud83c\udf85:0 \ud83e\udd36:1\uff09\u3092\u9664\u5916\u3057\u307e\u3059\u3002\n\nExclude common ones (\ud83c\udf85: 0 \ud83e\udd36: 1).","721ec6dc":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">wild<\/span>","57068053":"\u96e3\u3057\u3044\u3053\u3068\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u305b\u3063\u304b\u304f\u3001permutations\u304c\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u3060\u3057\u3066\u307f\u3088\u3046\u3002\n\nI don't know how difficult it is, so I will try various things. Since there are permutations, let's leave this as it is.","0a4e207e":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">submittion<\/span>","06f9942f":"### \u5171\u901a\u306e\u3082\u306e\uff08\ud83c\udf85:0 \ud83e\udd36:1\uff09\n\n### common ones (\ud83c\udf85: 0 \ud83e\udd36: 1).","0a7d1508":"<pre>\n\u6570\u5b57\u3067\u8003\u3048\u308b\n1234567\n 2345671\n  3456712\n   4567123\n    5671234\n     6712345\n      7123456\n\u306e\u57fa\u672c\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308b\u306f\u305a\u306a\u306e\u306b\u3001\u306a\u3093\u3067\u5f15\u3063\u304b\u304b\u3063\u3066\u3053\u306a\u3044\u3093\u3060\u308d\u3046\uff1f\n\nThink in numbers \n1234567\n 2345671\n  3456712\n   4567123\n    5671234\n     6712345\n      7123456\nThere should be a basic pattern of, but why doesn't it get stuck?","db2de1f4":"### \u5168\u90e8\u96c6\u8a08\u3059\u308b\u3068\u3001\u6587\u5b57\u5217\u306f34440\u6587\u5b57\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n### Add up all of them, the character string is 34440 characters.","86451feb":"\u3088\u304f\u8aad\u3080\u3068\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u8aad\u3081\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\n\nWhen I read it carefully, it said that I should read this tutorial. .<br>\nhttps:\/\/www.kaggle.com\/ryanholbrook\/getting-started-with-santa-2021","e85b44ba":"length_all=['6_b','6_b','6_a','6_a','6_b','6_a','6_b','5_b','5_b','5_a','5_b','5_b','4_a','4_a','4_a','4_b','4_b','5_a','5_b','4_b','4_a','3_a','3_b','3_b','3_a','3_a','2_a','2_a','2_b','2_b','2_a','2_b','1_a','1_b','1_b','1_a','1_a','1_b','1_a','1_b','1_b','1_a','1_b','1_a','1_a','1_b']\n","63b60cdf":"\u3084\u3063\u3068sample\u306e\u30b9\u30b3\u30a2\u8d85\u3048\u307e\u3057\u305f\uff01\u3000\n\n Finally, the sample score has been exceeded! ","d1515936":" ### \u9806\u756a\u3092\u304b\u3048\u3066\u307f\u308b\n \n ### Try changing the order","9b747e2b":"## \u91cd\u8907\u524a\u9664\u3092\u7e70\u308a\u8fd4\u3059\u3002\n\n## Repeat the duplicate deletion.","df67156a":"\u3053\u3093\u306a\u5f62\u3067\u63d0\u51fa\u3059\u308b\u305d\u3046\u3067\u3059\u3002\u521d\u3081\u3066\u3067\u3059\u306d\u3002\u7d75\u3092\u63d0\u51fa\u3059\u308b\u306e\u306f\u3002\n\nIt seems to be submitted in this form. It's the first time. To submit the picture.","8de186c7":"<span style=\"color: orange; font-family: Segoe UI; font-size: 1.9em; font-weight: 300;\">Distance<\/span>","9e760657":"### \u3055\u3089\u306b\u5727\u7e2e\n\n### Further compression","67e2db92":"3034 ","69734859":"\u307e\u305a\u306f\u3001comm\u306e\u4e2d\u8eab\u3092\u5f15\u3063\u5f35\u308a\u51fa\u3057\u305f\u3002\n\nFirst, I pulled out the contents of comm.","f24cc32e":"length= 16260","30d32bad":"\u3068\u308a\u3042\u3048\u305a\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u3060\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u3053\u308c\u3092\u3069\u3046\u3057\u307e\u3059\u304b\u306d\u3002\n\nFor the time being, I'm just extracting the contents of the file. What would you do with this?","39700193":"![image.png](attachment:d9f37a43-4355-4b4a-8db4-f934fa7a7b53.png)"}}