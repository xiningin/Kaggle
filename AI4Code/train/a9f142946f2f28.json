{"cell_type":{"ced425fa":"code","d104f0ba":"code","057a9d0f":"code","1babbf7b":"code","cd979fc2":"code","db6c0758":"code","9f27cb76":"code","cd392e7e":"code","6e1917b5":"code","ae63cf1c":"code","88c29cb9":"code","1cec6921":"markdown","bd6e5dff":"markdown","73629037":"markdown","a4b0fd20":"markdown","cf0b37ca":"markdown"},"source":{"ced425fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error","d104f0ba":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2022\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2022\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/sample_submission.csv')\n\nlgbm = pd.read_csv('..\/input\/tps-jan2022-lgbm-optuna\/submission.csv')\nxgbm = pd.read_csv('..\/input\/tps-jan2022-xgb-optuna\/submission.csv')\nlstm = pd.read_csv('..\/input\/tps-jan-2022-lstm\/submission.csv')\n\navg1 = pd.read_csv('..\/input\/tps-jan2022-blending\/submission-avg-10.csv')\navg2 = pd.read_csv('..\/input\/k\/vladlee\/tps-jan2022-tuning\/submission-avg-10-rnd1.csv')\navg3 = pd.read_csv('..\/input\/k\/vladlee\/tps-jan2022-tuning\/submission-avg-10_rnd0.csv')","057a9d0f":"def process_dates(df):\n    df.date = pd.to_datetime(df.date)\n    df['year'] = df.date.dt.year\n    df['month'] = df.date.dt.month\n    df['week'] = df.date.dt.week\n    df['weekday'] = df.date.dt.weekday\n    df['dayofweek'] = df.date.dt.dayofweek\n    df['dayofyear'] = df.date.dt.dayofyear\n    df['day'] = df.date.dt.day\n    return df\n\ntrain = process_dates(train)\ntest = process_dates(test)","1babbf7b":"avg_num_sold = np.mean([lstm.num_sold, lgbm.num_sold, xgbm.num_sold, avg1.num_sold, avg2.num_sold, avg3.num_sold], axis=0)\ntest['num_sold'] = avg_num_sold\ntest['num_sold_lstm'] = lstm.num_sold\ntest['num_sold_lgbm'] = lgbm.num_sold\ntest['num_sold_xgbm'] = xgbm.num_sold\ntest['num_sold_avg1'] = avg1.num_sold\ntest['num_sold_avg2'] = avg2.num_sold\ntest['num_sold_avg3'] = avg3.num_sold","cd979fc2":"## this sub has 4.74 score\n\nsub.num_sold = test.num_sold.astype(int)\nsub.to_csv('submission.csv', index=False, float_format='%.6f')\nsub.head(20)","db6c0758":"f, (ax1, ax2) = plt.subplots(2, 1, figsize=(16, 12))\n\ng1 = sns.histplot(x=\"num_sold\", palette=\"rainbow\", hue='product',  multiple=\"stack\", data=train[train.date.dt.year==2018], ax=ax1)\ng1.set_title(\"Train - 2018\")\n\ng2 = sns.histplot(x=\"num_sold\", palette=\"rainbow\", hue='product',  multiple=\"stack\", data=test[test.date.dt.year==2019], ax=ax2)\ng2.set_title(\"Test AVG - 2018\")\n\nplt.show()","9f27cb76":"f, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(16, 16))\n\ng1 = sns.scatterplot(x=\"date\", y=\"num_sold\", palette=\"rainbow\", hue='country', data=test[test.date.dt.year==2019], ax=ax1)\ng1.set_title(\"AVG ALL\")\n\ng2 = sns.scatterplot(x=\"date\", y=\"num_sold_xgbm\", palette=\"rainbow\", hue='country', data=test[test.date.dt.year==2019], ax=ax2)\ng2.set_title(\"XGBM\")\n\ng3 = sns.scatterplot(x=\"date\", y=\"num_sold_lstm\", palette=\"rainbow\", hue='country', data=test[test.date.dt.year==2019], ax=ax3)\ng3.set_title(\"LSTM\")\n\nplt.show()","cd392e7e":"f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(16, 24))\n\ntest['num_sold-num_sold_avg1'] = test.num_sold - test.num_sold_avg1\ntest['num_sold-num_sold_xgbm'] = test.num_sold - test.num_sold_xgbm\ntest['num_sold-num_sold_lstm'] = test.num_sold - test.num_sold_lstm\ntest['num_sold-num_sold_lgbm'] = test.num_sold - test.num_sold_lgbm\n\ng1 = sns.scatterplot(x=\"date\", y=\"num_sold-num_sold_avg1\", palette=\"rainbow\", hue='month', data=test, ax=ax1)\ng1.set_title(\"Test - 2019 - AVG err\")\n\ng2 = sns.scatterplot(x=\"date\", y=\"num_sold-num_sold_xgbm\", palette=\"rainbow\", hue='month', data=test, ax=ax2)\ng2.set_title(\"Train - 2019 - XGB err\")\n\ng3 = sns.scatterplot(x=\"date\", y=\"num_sold-num_sold_lstm\", palette=\"rainbow\", hue='month', data=test, ax=ax3)\ng3.set_title(\"Train - 2019 - LSTM err\")\n\ng4 = sns.scatterplot(x=\"date\", y=\"num_sold-num_sold_lgbm\", palette=\"rainbow\", hue='month', data=test, ax=ax4)\ng4.set_title(\"Train - 2019 - LGBM err\")\n\nplt.show()","6e1917b5":"f, ax = plt.subplots(2, 2, figsize=(20, 12))\n\ng1 = sns.scatterplot(x=test.num_sold, y=test.num_sold_avg1, palette=\"rainbow\", data=test, hue='product', ax=ax[0,0])\ng1.set_title(\"Test - 2019 - AVG\/AGV1 by product\")\n\ng2 = sns.scatterplot(x=test.num_sold, y=test.num_sold_xgbm, palette=\"rainbow\", data=test, hue='product', ax=ax[0,1])\ng2.set_title(\"Train - 2019 - AVG\/XGB by product\")\n\ng3 = sns.scatterplot(x=test.num_sold, y=test.num_sold_lstm, palette=\"rainbow\", data=test, hue='product', ax=ax[1,0])\ng3.set_title(\"Train - 2019 - AVG\/LSTM by product\")\n\ng4 = sns.scatterplot(x=test.num_sold, y=test.num_sold_lstm, palette=\"rainbow\", data=test, hue='product', ax=ax[1,1])\ng4.set_title(\"Train - 2019 - AVG\/LGBM by product\")\n\nplt.show()","ae63cf1c":"## display error by month\nerrs_by_month = np.zeros((3, 12))\n\nfor month in test.month.unique():\n    err1 = mean_squared_error(test[test.month == month].num_sold, test[test.month == month].num_sold_avg1)\n    err2 = mean_squared_error(test[test.month == month].num_sold, test[test.month == month].num_sold_xgbm)\n    err3 = mean_squared_error(test[test.month == month].num_sold, test[test.month == month].num_sold_lstm)\n    print(f'Month {month}, AVG1 RMSE: {err1:.2f}, XGB RMSE: {err2:.2f}, LSTM RMSE: {err3:.2f}')    \n    errs_by_month[0][month-1] = err1\n    errs_by_month[1][month-1] = err2\n    errs_by_month[2][month-1] = err3","88c29cb9":"f, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(20, 6))\n\ng1 = sns.lineplot(x=test.month.unique(), y=errs_by_month[0], palette=\"rainbow\", ax=ax1)\ng1.set_title(\"2019 - err AVG\/AGV1 by month\")\n\ng2 = sns.lineplot(x=test.month.unique(), y=errs_by_month[1], palette=\"rainbow\", ax=ax2)\ng2.set_title(\"2019 - err AVG\/XGB by month\")\n\ng3 = sns.lineplot(x=test.month.unique(), y=errs_by_month[2], palette=\"rainbow\", ax=ax3)\ng3.set_title(\"2019 - err AVG\/LSTM by month\")\n\nplt.show()","1cec6921":"### Display avg diff (error) by model","bd6e5dff":"### Display value count avg vs train by product","73629037":"### Averaging models method from my other notebooks: XGB+LGBM+LSTM provide best score. \n#### Here, I will try to find differences between LSTM, XGB, LGBM and averaging models.","a4b0fd20":"### Display avg vs model by country","cf0b37ca":"### Display avg diff (error) vs model by product"}}