{"cell_type":{"bedc2146":"code","904b9d5d":"code","a21c6733":"code","f47b0461":"code","e72b64f7":"code","97697e94":"code","40d5c958":"code","19c547ea":"code","cf3d6839":"code","f19e329b":"code","47399488":"code","c30732b8":"code","02046eea":"code","78bc6efc":"code","91061df0":"code","bb98b8b3":"code","d1e5f864":"code","f7455947":"code","2dcbaa9f":"code","fe6274d1":"code","b7375b60":"code","81ce4437":"code","d9629b53":"code","094da893":"code","58f33ca2":"code","6b420630":"code","63e16f64":"code","75fd23c2":"code","15959b5a":"code","d8050eda":"code","cab58cf4":"code","02ffd477":"code","adad8cf6":"code","da9079bc":"code","56410dd6":"code","dde53979":"code","04b8267d":"code","5c410ab1":"markdown","13abaf70":"markdown","e34e7e70":"markdown","1fc97775":"markdown","388ea901":"markdown","09b41d75":"markdown","5b920844":"markdown","eed39cf3":"markdown","a1c104fd":"markdown","e70001df":"markdown","b60deb87":"markdown","e6f4c489":"markdown","1b37c89e":"markdown","d708acf1":"markdown","8f1a45ff":"markdown","07efd2e7":"markdown","66869e88":"markdown","2f9fd98b":"markdown","e36f719b":"markdown"},"source":{"bedc2146":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","904b9d5d":"Strokedata = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","a21c6733":"Strokedata = Strokedata.drop('id', axis=1)","f47b0461":"Strokedata.head()","e72b64f7":"Strokedata.tail()","97697e94":"Strokedata.shape\n\n### data Contain 5110 rows And 12 columns\n","40d5c958":"Strokedata.info()","19c547ea":"Strokedata.describe()","cf3d6839":"Strokedata.head()","f19e329b":"numerical_data = Strokedata.select_dtypes(\"number\")\nnumerical_data.columns","47399488":"Strokedata['age']  = Strokedata['age'].astype(int)\nStrokedata['age'].head()","c30732b8":"## Lets plot the Age and Stroke \nplt.figure(figsize=(15,10))\nsns.histplot(x= 'age', hue='stroke',data =Strokedata)\nplt.title(\"Age Distribution w.r.t Stoke\")\nplt.show()","02046eea":"## Now plot the avg_glucose_level wrt Stroke\nplt.figure(figsize=(15,10))\nsns.histplot(hue='stroke' , x='avg_glucose_level',data =Strokedata,kde = True)\nplt.title(\"Average Glucose Level w.r.t Stoke\")\nplt.show()","78bc6efc":"## for Bmi\nplt.figure(figsize=(15,10))\nsns.histplot(hue='stroke' , x='bmi',data =Strokedata,kde = True)\nplt.title(\"bmi w.r.t Stoke\")\nplt.show()","91061df0":"sns.pairplot(Strokedata)\nplt.show()","bb98b8b3":"categorical_data = Strokedata.select_dtypes(exclude = 'number')\ncategorical_data.columns","d1e5f864":" for feature  in categorical_data:\n  print(Strokedata[feature].unique())","f7455947":"for feature in categorical_data:\n  plt.figure(figsize = (15,10))\n  sns.countplot(x = Strokedata[feature])\n  plt.show()","2dcbaa9f":"data = Strokedata.copy()","fe6274d1":"data.head()","b7375b60":"data['smoking_status'].replace('Unknown', np.nan, inplace=True)","81ce4437":"data.isnull().sum()","d9629b53":" # percentage of data missing\n data.isnull().mean().round(4) * 100","094da893":"data['bmi'].fillna(data['bmi'].mean(), inplace=True)\ndata['smoking_status'].fillna(data['smoking_status'].mode()[0], inplace = True)","58f33ca2":" data.isnull().mean().round(4) * 100","6b420630":"sns.countplot(x = data['smoking_status'])","63e16f64":"plt.figure(figsize=(10,7))\nsns.histplot(x ='bmi',hue = 'stroke',data = data,kde =True)\nplt.show()","75fd23c2":"from sklearn.preprocessing import LabelEncoder\n","15959b5a":"le  = LabelEncoder()\nen_data = data.apply(le.fit_transform)\n","d8050eda":"en_data.head()","cab58cf4":"y = en_data['stroke']\nX = en_data.drop('stroke',axis =1)","02ffd477":"from sklearn.model_selection import train_test_split","adad8cf6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42, stratify=y)","da9079bc":"from sklearn.preprocessing import StandardScaler","56410dd6":"scaler = StandardScaler()\n\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","dde53979":"from sklearn.ensemble import RandomForestClassifier\n\nmodel_rf = RandomForestClassifier(n_estimators=100,random_state=0)\nmodel_rf.fit(X_train, y_train)\ny_pred = model_rf.predict(X_test)","04b8267d":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\nprint(\"The Training Score of RandomForestClassifier is: {:.3f}%\".format(model_rf.score(X_train, y_train)*100))\nprint(\"\\n**********************************************************************\\n\")\nprint(\"The Confusion Matrix for RandomForestClassifier is: \\n{}\\n\".format(confusion_matrix(y_test, y_pred)))\nprint(\"\\n**********************************************************************\\n\")\nprint(\"The Classification report: \\n{}\\n\".format(classification_report(y_test, y_pred)))\nprint(\"\\n**********************************************************************\\n\") \nprint(\"The Accuracy Score of RandomForestClassifier is: {:.3f}%\".format(accuracy_score(y_test, y_pred)*100))","5c410ab1":"## Training Model using RandomForestClassifer","13abaf70":"Task: Predict Storke","e34e7e70":"### EDA for Categorical feature","1fc97775":"### train test Split","388ea901":"## Feature Selection","09b41d75":"## Importing the dataset","5b920844":"## Some Analysis \n* bmi have some Missing values\n* Pretty high Difference between #Mean of avg_glucose_level and 50% of avg_glucose_level","eed39cf3":"## Feature Engineering","a1c104fd":"Lets check the type of the feature","e70001df":"According to the World Health Organization (WHO) stroke is the 2nd leading cause of death globally, responsible for approximately 11% of total deaths.\nThis dataset is used to predict whether a patient is likely to get stroke based on the input parameters like gender, age, various diseases, and smoking status. Each row in the data provides relavant information about the patient.","b60deb87":"## Feature Scaling","e6f4c489":"let's see the bottom five rows of the data","1b37c89e":"After filling the missing Values Countplot","d708acf1":"### EDA for Numerical data","8f1a45ff":" lets see size of the data","07efd2e7":"let's see the first five rows of dataset\n","66869e88":"### Attribute Information\n1) id: unique identifier\n\n2) gender: \"Male\", \"Female\" or \"Other\"\n\n3) age: age of the patient\n\n4) hypertension: 0 if the patient doesn't have hypertension, 1 if the patient has hypertension\n\n5) heart_disease: 0 if the patient doesn't have any heart diseases, 1 if the patient has a heart disease\n\n6) ever_married: \"No\" or \"Yes\"\n\n7) work_type: \"children\", \"Govt_jov\", \"Never_worked\", \"Private\" or \"Self-employed\"\n\n8) Residence_type: \"Rural\" or \"Urban\"\n\n9) avg_glucose_level: average glucose level in blood\n\n10) bmi: body mass index\n\n11) smoking_status: \"formerly smoked\", \"never smoked\", \"smokes\" or \"Unknown\"*\n\n12) stroke: 1 if the patient had a stroke or 0 if not\n\n*Note: \"Unknown\" in smoking_status means that the information is unavailable for this patient","2f9fd98b":"## Import the required Libraries\n","e36f719b":"## EDA : Exploratory Data Analysis"}}