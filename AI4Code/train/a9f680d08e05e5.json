{"cell_type":{"f2c7b212":"code","b777bfc4":"code","81f7917b":"code","2940ec36":"code","28b2d592":"code","19ddac5e":"code","bb8d0e7f":"code","56dca6d9":"code","dd545f6c":"code","c60b0d33":"code","f4983ef3":"code","966ea9cc":"code","381746e0":"code","ce2eced1":"code","c192f875":"code","f6b6e21b":"code","43937c39":"code","14a4e16d":"markdown","4ca227a8":"markdown","b39a5bca":"markdown","e52b1414":"markdown","5037aaca":"markdown","96f6bae0":"markdown","b0b10b0b":"markdown","1da05781":"markdown","88e2cfa9":"markdown","8f34f3d7":"markdown","beeaf7a5":"markdown","2d4f4414":"markdown","c0fb5b0a":"markdown","19e60ac4":"markdown","317fc019":"markdown","eba18419":"markdown"},"source":{"f2c7b212":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b777bfc4":"train = pd.read_csv(\"..\/input\/top-100-biggest-restaurant-chains-2021\/Top100Chains.csv\")\ntrain.head()","81f7917b":"train.shape","2940ec36":"train.info()","28b2d592":"train.describe().T","19ddac5e":"train.isnull().sum()","bb8d0e7f":"(train.isnull().sum()\/len(train))*100","56dca6d9":"categoryColumns = [col for col in train.columns if train[col].dtype == \"O\"]\n\nfor col in categoryColumns:\n    print(\"[\",col,\"]\")\n    print(\"count =\",[train[col].nunique()])\n    print(\"data =\",[train[col].unique()])\n    print(\"\")\n    print(\"\")","dd545f6c":"train[\"2020 U.S. Sales ($000,000)\"] = train[\"2020 U.S. Sales ($000,000)\"].apply(lambda x:x.replace(\"$\",\"\"))\ntrain[\"2020 U.S. Sales ($000,000)\"] = train[\"2020 U.S. Sales ($000,000)\"].apply(lambda x:x.replace(\",\",\"\"))\ntrain[\"2020 U.S. Sales ($000,000)\"] = train[\"2020 U.S. Sales ($000,000)\"].astype(int)","c60b0d33":"train[\"YOY SALES CHANGE\"] = train[\"YOY SALES CHANGE\"].apply(lambda x:x.replace(\"%\",\"\"))\ntrain[\"YOY SALES CHANGE\"] = train[\"YOY SALES CHANGE\"].astype(float)\n\ntrain[\"2020 U.S. UNITS\"] = train[\"2020 U.S. UNITS\"].apply(lambda x:x.replace(\",\",\"\"))\ntrain[\"2020 U.S. UNITS\"] = train[\"2020 U.S. UNITS\"].astype(float)\n\ntrain[\"YOY UNIT CHANGE\"] = train[\"YOY UNIT CHANGE\"].apply(lambda x:x.replace(\"%\",\"\"))\ntrain[\"YOY UNIT CHANGE\"] = train[\"YOY UNIT CHANGE\"].astype(float)","f4983ef3":"train.head()","966ea9cc":"train.info()","381746e0":"train.describe().T","ce2eced1":"categoryColumns = [col for col in train.columns if train[col].dtype == \"O\"]\n\nfor col in categoryColumns:\n    print(\"[\",col,\"]\")\n    print(\"count =\",[train[col].nunique()])\n    print(\"data =\",[train[col].unique()])\n    print(\"\")\n    print(\"\")","c192f875":"train.isnull().sum()","f6b6e21b":"(train.isnull().sum()\/len(train))*100","43937c39":"plt.figure(figsize=(10,8))\nsns.barplot(data=train[:5], x=\"CHAIN\", y =\"2020 U.S. Sales ($000,000)\")\nplt.show()","14a4e16d":"# data eda ","4ca227a8":"# null check percent eda ","b39a5bca":"# category data eda","e52b1414":"# data size eda ","5037aaca":"# null check eda","96f6bae0":"# convert type (string -> int or float )","b0b10b0b":"# null check percent eda","1da05781":"# null check eda","88e2cfa9":"# category eda ","8f34f3d7":"# type eda ","beeaf7a5":"# count mean min max eda ","2d4f4414":"# load data ","c0fb5b0a":"# column type eda ","19e60ac4":"# import libraries","317fc019":"# count mean min max eda ","eba18419":"# sale bar plot"}}