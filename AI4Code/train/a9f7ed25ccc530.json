{"cell_type":{"76e43905":"code","aef8f448":"code","621d9767":"code","078d8260":"code","fd0c4c53":"code","5698de25":"code","a1ddfd63":"code","b1ed71d5":"code","49b87cea":"code","7471dee1":"code","d766016e":"code","3056920d":"code","0b737c33":"code","bc0e054d":"code","69e90bac":"code","f6786731":"code","56f61403":"code","d3480ce5":"code","9da6f4d8":"code","f1585b00":"code","b575cfc5":"code","436bed46":"code","8087304f":"code","ca238c6f":"code","edd2471f":"code","0ba1b95a":"code","59d6e84c":"code","756adb3a":"code","8b7f7ca6":"code","39da6953":"code","f3365087":"code","757d196d":"code","25418cd7":"code","15fa13f9":"code","68d490a7":"code","decbf6d2":"code","61005ed7":"code","88168372":"code","434dc8b2":"code","1784fe56":"code","10b10419":"code","e5cef1b2":"code","ec8cb18a":"code","7bb8ef2d":"code","7a99ff3b":"code","fc11507e":"code","3de29fd3":"code","f3f4fc66":"code","f8c450c7":"code","cb209943":"code","eb3c1c5f":"code","bc4d131f":"markdown","42836bbc":"markdown","cb17e0de":"markdown","d6a541fa":"markdown","5601c276":"markdown","01866c24":"markdown","6d19dc5f":"markdown","da349209":"markdown","cc22809e":"markdown","52431893":"markdown"},"source":{"76e43905":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nfrom sklearn.metrics import precision_score, recall_score, accuracy_score\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aef8f448":"df = pd.read_csv(\"..\/input\/drug-classification\/drug200.csv\")","621d9767":"#check first 5 head\ndf.head()","078d8260":"#check bottom 5\ndf.tail()","fd0c4c53":"#get info\ndf.info()","5698de25":"#check number of rows n columns\ndf.shape","a1ddfd63":"#check some stat for numerical var\ndf.describe()","b1ed71d5":"#chech for null value\ndf.isnull().sum()","49b87cea":"#check for datatypes\ndf.dtypes","7471dee1":"#get numerical variables\nnum_vars=[var for var in df.columns if df[var].dtypes!='O']\nnum_vars","d766016e":"#get categorical variables\ncat_vars=[var for var in df.columns if df[var].dtypes=='O']\ncat_vars","3056920d":"#lets check unique labels in each category\nfor var in cat_vars:\n    print(df[var].unique())","0b737c33":"#let visualize the Age\nsns.displot(df['Age'],kde=True)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Count\")\nplt.show()","bc0e054d":"#How does age influence the type of drug people take\nsns.barplot(x=df[\"Drug\"],y=df[\"Age\"])","69e90bac":"#Lets check how does sodium to potasium levels affeck kind of drug?\nsns.barplot(x=df['Drug'],y=df['Na_to_K'])","f6786731":"#lets evalute the distribution of Na_to_K\nsns.histplot(df['Na_to_K'],color='yellow')","56f61403":"#how does age affect Na_to_K levels\nsns.scatterplot(x=df['Age'],y=df['Na_to_K'])","d3480ce5":"#How does cholesterol levels relate with drugs\ncholesterol_drug = df.groupby([\"Drug\",\"Cholesterol\"]).size().reset_index(name = \"Count\")\ncholesterol_drug","9da6f4d8":"#lets visualise it\nsns.barplot(x=cholesterol_drug['Drug'],y=cholesterol_drug['Count'])\nplt.ylabel('cholesterol')","f1585b00":"#how does gender and Na_to_K levels affect the kind of drug\nax = sns.barplot(x=\"Drug\", y=\"Na_to_K\", hue=\"Sex\", data=df)","b575cfc5":"#how does age affects Bp the kind of drug\nax = sns.barplot(x=\"BP\", y=\"Age\",data=df)","436bed46":"#how many times people take each drug\ndf.Drug.value_counts()","8087304f":"#lets visualise the counts\nsns.barplot(x=df.Drug.value_counts().index,y=df.Drug.value_counts())","ca238c6f":"#lets add this new feature\ndf['na\/ka>15'] = df['Na_to_K'].apply(lambda x: 1 if x>=15.015  else 0)","edd2471f":"#converting Cholesterol into numeric\nCH_mapping = {'HIGH':1,'NORMAL':0}\ndf['Cholesterol'] = df.Cholesterol.map(CH_mapping)","0ba1b95a":"#converting BP into numeric\nBP_mapping = {'HIGH':2,'LOW':0,'NORMAL':1}\ndf['BP']= df['BP'].map(BP_mapping)","59d6e84c":"#converting drugs into numeric\ndrug_mapping = {'DrugY':0,'drugC':2,'drugX':1,'drugA':3,'drugB':4}\ndf['Drug']=df.Drug.map(drug_mapping)","756adb3a":"#lets convert other columns to numbers using get_dummies\ndf = pd.get_dummies(df,drop_first=True)","8b7f7ca6":"#lets to for correlation with target\nmatrix_corr = df.corr().index\nplt.figure(figsize=(20,26))\nsns.heatmap(df[matrix_corr].corr(),annot=True,cmap='YlGn_r')","39da6953":"#divide into independent and indepent variables\nx = df[['Age', 'BP', 'Cholesterol', 'Na_to_K', 'Drug', 'na\/ka>15', 'Sex_M']]\ny=df['Drug']","f3365087":"#splitting into training and test\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=4)","757d196d":"#scaling\nscaler = StandardScaler()\nscaler.fit(x_train)\nx_train_scaled = scaler.transform(x_train)\nx_test_scaled = scaler.transform(x_test)","25418cd7":"#set the decision tree\nclf = tree.DecisionTreeClassifier(random_state=4)","15fa13f9":"#fit to training data\nclf.fit(x_train_scaled,y_train)","68d490a7":"#predict the test data\ny_pred_t = clf.predict(x_test_scaled)","decbf6d2":"print(accuracy_score(y_test,y_pred_t)*100,\"% accuracy\")","61005ed7":"#evalute ur model\nprint(classification_report(y_test,y_pred_t))","88168372":"#initialise the random forest object\nclf = RandomForestClassifier(random_state=0)","434dc8b2":"#fit to train data\nclf.fit(x_train_scaled,y_train)","1784fe56":"#predict the test\npred_rf = clf.predict(x_test_scaled)","10b10419":"print(classification_report(y_test,pred_rf))","e5cef1b2":"#max features to consider \ncriterion = ['gini', 'entropy']\nmax_features = ['auto', 'sqrt']\n# Maximum number of depth in trees\nmax_depth = [1,2,5, 10, 15, 20, 25, 30]\n#min samples for splitting nodes\nmin_samples_split = [5, 10, 15, 20,25,60,100]\n# Min samples for each leaf \nmin_samples_leaf = [1, 2, 3,5, 12]","ec8cb18a":"params_dict={\n    \"criterion\":criterion,\n    \"max_features\":max_features,\n    \"max_depth\":max_depth,\n    \"min_samples_split\":min_samples_split,\n    \"min_samples_leaf\":min_samples_leaf\n}","7bb8ef2d":"model_grid = GridSearchCV(clf,param_grid=params_dict,verbose=2,n_jobs=-1,cv=3)","7a99ff3b":"model_grid.fit(x_train_scaled,y_train)","fc11507e":"pred_rf = model_grid.predict(x_test_scaled)","3de29fd3":"print(classification_report(y_test,pred_rf))","f3f4fc66":"#instantiate naive bayes\nclf = GaussianNB()","f8c450c7":"#fit the model\nclf.fit(x_train_scaled,y_train)","cb209943":"#predict the test data\ny_pred_n  = clf.predict(x_test_scaled)","eb3c1c5f":"print(classification_report(y_test,y_pred_n))","bc4d131f":"# CONCLUSION","42836bbc":"DECISION TREE MODEL","cb17e0de":"# MODEL SUMMARY\n\n* DECISION TREE-100% ACCURATE ON TEST SET \n* NAIVE BAYES-100% ACCURATE ON TEST SET \n* RANDOM FOREST-100% ACCURATE ON TEST SE","d6a541fa":"# FEATURE SELECTION AND SCALING","5601c276":"# RANDOM FOREST","01866c24":"# NAIVE BAYES","6d19dc5f":"# EXPLORATORY DATA ANALYSIS AND FEATURE ENGINEERING","da349209":"DECISION TREE AND NAIVE BAYES GAVE ME 100% ACCURACY,BUT MY RANDOM FOREST GAVE 98% ACCURACY.","cc22809e":"# AIM: CLASSIFY DRUGS\n\nSTEPS:\n* 1)EXPLORATORY DATA-ANALYSIS\n* 2)FEATURE SELECTION\n* 3)FEATURE SCALING\n* 4)MODEL BUILDING\n\n","52431893":"# MODEL BUILDING"}}