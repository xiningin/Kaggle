{"cell_type":{"82701414":"code","043dc481":"code","647b47df":"code","0d96e28e":"code","b5ae3d85":"code","c32b7779":"code","b5945d58":"code","365ad796":"code","8dc1a5de":"code","e476cebc":"code","f8f271c4":"code","fe3f5a9a":"code","45bb3039":"code","87a11e5a":"code","042aee17":"code","92ed77d1":"code","6ffd4644":"code","e8308b29":"code","8ef7898d":"code","13a5cd14":"code","8a294633":"code","6b1a41d5":"code","41ad8b40":"code","e8a4e5de":"code","184007c4":"code","e49c2ab5":"code","373c9642":"markdown","fadf428b":"markdown","b393038e":"markdown","513eed39":"markdown","623fcbbb":"markdown","340af243":"markdown","77a8f847":"markdown","2e4afd06":"markdown","cb60e64c":"markdown","5e2b88ae":"markdown","70f8b3fc":"markdown","c5d93973":"markdown","8805e545":"markdown","e2f0b715":"markdown","f6381246":"markdown","02e96e21":"markdown","906aefed":"markdown","ed9a5c14":"markdown","0a783a31":"markdown","54b0c5f8":"markdown","feacc61f":"markdown","3daf8c9a":"markdown","7091a5f8":"markdown","ce8daf59":"markdown","9edcc2c7":"markdown","f40b2db4":"markdown"},"source":{"82701414":"import numpy as np\nimport pandas as pd \nimport missingno as mn\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport matplotlib.pyplot as plt\n\nimport warnings                       \nwarnings.filterwarnings(\"ignore\")","043dc481":"\nvideoGameData = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\",index_col=0)","647b47df":"data = videoGameData.copy()","0d96e28e":"data.head()","b5ae3d85":"data.shape","c32b7779":"data.size","b5945d58":"data.describe()","365ad796":"data.info()","8dc1a5de":"data.duplicated().sum()","e476cebc":"data.drop_duplicates(keep = 'first',inplace = True)","f8f271c4":"data.isnull().mean() * 100","fe3f5a9a":"mn.matrix(data)","45bb3039":"data.dropna(inplace=True)","87a11e5a":"data['Year']=data['Year'].astype('int64')","042aee17":"GamesRev = data.groupby('Name')['Global_Sales','NA_Sales','EU_Sales','JP_Sales','Other_Sales'].sum().sort_values('Global_Sales',ascending = False)[:10]\nGamesRev.drop('Global_Sales',axis=1,inplace=True)\nfig = px.bar(GamesRev,\n             labels={\n                     \"variable\": \"Region\",\n                     \"value\": \"Sales(in Million)\",\n                     \"Name\": \"Game\"},\n            title = 'Top Grossing Game in different Region')\nfig.update_layout(\n    title={'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.update\nfig.show()","92ed77d1":"region =['NA_Sales','EU_Sales','JP_Sales','Other_Sales']\nsales = [data[i].sum() for i in region]\nfig = px.pie(names=region,values=sales)\nfig.update_traces(rotation=90, pull=[0.06,0.06,0.06,0.06], textinfo=\"percent+label\")\nfig.show()","6ffd4644":"publisher = data['Publisher'].value_counts()\npublisher2 = data.groupby('Publisher')['Global_Sales'].sum().sort_values(ascending=False)[:10].reset_index()\npublisher = publisher.reindex(index=publisher2['Publisher'])\npublisher2['Games Published'] = publisher.values[:10]\nfig = px.bar(publisher2 , x =publisher2['Publisher'],y=publisher2['Global_Sales'],color=publisher2['Games Published'],\n             labels={\"Global_Sales\": \"Global Sales\"},\n            title = 'Top Grossing Publisher with number of Publications')\nfig.update_layout(\n    title={'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","e8308b29":"topPublisher = publisher2['Publisher'][:5]\npublisher = data.groupby(['Publisher'])\nfig = go.Figure()\nfor pub in topPublisher:\n    pubget = publisher.get_group(pub).groupby('Name')['Global_Sales'].sum().reset_index().sort_values('Global_Sales',ascending = False)[:10]\n    fig.add_trace(\n    go.Bar(x=pubget['Name'],\n            y=pubget['Global_Sales'],\n           name=pub,\n           visible= True if pub == 'Nintendo' else False,\n          marker={'color': pubget['Global_Sales'],'colorscale': 'Portland'}))\n    fig.update_layout(xaxis_title=\"Games\",\n    yaxis_title=\"Global Sales\")\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.85,\n            y=1.1,\n            buttons=list([\n                dict(label=topPublisher[0],\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 10 Games per Publisher\"}]),\n                dict(label=topPublisher[1],\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 10 Games per Publisher\"}]),\n                dict(label=topPublisher[2],\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 10 Games per Publisher\"}]),\n                dict(label=topPublisher[3],\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 10 Games per Publisher\"}]),\n                dict(label=topPublisher[4],\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 10 Games per Publisher\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Top 10 Games per Publisher\",\n     xaxis_domain=[0.05, 1.0],\n    title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28),\n    annotations=[\n        dict(text=\"Publisher :\", showarrow=False,\n                             x=0.2, y=1.1, yref=\"paper\", align=\"left\")\n    ]\n)\n\n\nfig.show()","8ef7898d":"text = list(set(data['Genre']))\nplt.rcParams['figure.figsize'] = (15,15)\nwordcloud = WordCloud(max_font_size=50, max_words=100,background_color=\"black\").generate(str(text))\n\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","13a5cd14":"genre = data['Genre'].value_counts()\nfig = px.pie(genre, values = genre.values , names=genre.index,title= \"Genre Distribution\")\nfig.update_traces(textinfo=\"percent+label\")\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","8a294633":"genreSales = data.groupby('Genre')['Global_Sales'].sum()\nfig = px.bar(genreSales,orientation='h',labels={\"value\": \"Global Sales\",\"variable\":\"region\"},title = 'Top Grossing Genre')\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","6b1a41d5":"text = list(set(data['Platform']))\nplt.rcParams['figure.figsize'] = (15,15)\nwordcloud = WordCloud(max_font_size=50, max_words=100,background_color=\"black\").generate(str(text))\n\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","41ad8b40":"platform = data['Platform'].value_counts()[:10]\nfig = px.pie(platform,names=platform.index,values=platform.values,hole=.3,title='Platform Distribution')\nfig.update_traces(textinfo=\"percent+label\",pull=[0.1,0.2,0.15,0.06,0.06,0.06,0.06,0.06,0.06,0.06])\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","e8a4e5de":"platform = data.groupby(['Year','Platform'])['Global_Sales'].sum().reset_index()\nplatform = platform[(platform['Year']>=2006) & (platform['Year']<=2015)]\nplatform = platform.loc[platform['Platform'].isin(['DS', 'PS2', 'PS3', 'Wii', 'X360'])]\nfig = px.bar(platform,x='Platform',y='Global_Sales',labels={\"Global_Sales\": \"Global Sales\"},\n             title = 'Top Grossing Platform over 10 Years',animation_frame='Year', \n           animation_group='Platform', color='Platform')\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","184007c4":"yearSales = data.groupby('Year')['Global_Sales','NA_Sales','EU_Sales','JP_Sales','Other_Sales'].sum()\nfig = px.line(yearSales,title='Region-wise Sales Distribution over Years',\n              labels={\"value\": \"Sales(in Million)\",\"variable\":\"Region\"} )\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","e49c2ab5":"year = data['Year'].value_counts()\nyear2 = data.groupby('Year')['Global_Sales'].sum().sort_values(ascending=False).reset_index()\nyear = year.reindex(index=year2['Year'])\nyear2['Games Published'] = year.values\nfig = px.bar(year2 , x =year2['Year'],y=year2['Global_Sales'],color=year2['Games Published'],\n             title='Sales Relation with Number of Game Published',labels={\"Global_Sales\":\"Global Sales\"})\nfig.update_layout(title={'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    titlefont=dict(size =28))\nfig.show()","373c9642":"### Year Datatype should be integer","fadf428b":"# 7.Most Favourite Platform","b393038e":"# 8.Top Grossing Platform","513eed39":"### North America constitutes 49.1% of the global game sales","623fcbbb":"# 9.Sales Distribution over Years","340af243":"# Exploratory Data Analysis ","77a8f847":"### Most Games published were of the ACTION genre followed by SPORTS and MISC","2e4afd06":"## Checking Duplicated values","cb60e64c":"# 5.Most Popular Genre","5e2b88ae":"# 6.Top Grossing Genre","70f8b3fc":"# 3.Top Grossing Publisher","c5d93973":"### We dont have much null values, so i would prefer dropping over synthesizing","8805e545":"### ACTION Games are the highest grossers of all time followed by SPORTS and SHOOTER Games","e2f0b715":"### Mostly Games were published for DS , PS2 and PS3","f6381246":"### Video Game Sales witnessed Global High between 2006 to 2011","02e96e21":"### Video Game Industry witnessed a boom between 2006-2011 ,when more than 1000 games were published every year with Global Sales hitting all time high.","906aefed":"## Importing Important Libraries","ed9a5c14":"## Importing data and creating a deep copy","0a783a31":"### Wii Sports was played the most with highest global sales followed by evergreen GTA V & Super Mario Bros","54b0c5f8":"# 4. Top Publishers Top 10 Grossing Games ","feacc61f":"## Examining the Data","3daf8c9a":"### Nintendo published 696 games constituing to their highest global sales \n### followed by Electronic Arts with most game publications i.e. 1339.","7091a5f8":"# 10.Sales relation with number of Game Published","ce8daf59":"# 1.Top Grossing Games","9edcc2c7":"## Checking Null value","f40b2db4":"# 2.Region Wise Sales Distribution"}}