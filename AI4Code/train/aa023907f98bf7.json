{"cell_type":{"21467a6a":"code","8630dc01":"code","57c486d5":"code","87ee83f4":"code","b61e108d":"code","01bfda04":"code","931daff3":"code","f3d3559f":"code","b0633f17":"code","b174508a":"code","3be20c0b":"code","5b4ae3ce":"code","6cf575f5":"code","0451ecef":"code","360e80ce":"code","f73e1d67":"code","fe23fb7e":"code","3ab6b324":"code","b70cb6ff":"code","bdaf0f24":"code","9be2b23d":"code","573f9163":"code","9a7a9368":"code","f1cec89c":"code","f3c686e9":"code","88997b20":"code","810078b7":"code","b419712c":"code","289ad431":"code","ecf4dccb":"code","9bb2f999":"code","801accf2":"code","08edc352":"code","c1487e09":"code","755e3cf8":"code","779290b8":"code","5ad9a258":"code","41427cfa":"code","d8168e39":"code","a3191ebb":"code","dc1d0e69":"code","9973d09b":"code","b0e403f1":"code","bd70c41c":"code","499b3ccb":"code","598ae091":"code","0d0fe95a":"code","b2a3242e":"code","dbc1ad5e":"code","fc056c65":"code","97bcf1c6":"markdown","c1762395":"markdown","6f23ecec":"markdown","6f53305d":"markdown","7e42c748":"markdown","f25734d3":"markdown","5aecfa80":"markdown","c01320f0":"markdown","1c5e4a9c":"markdown","1bf85427":"markdown","d64e5aab":"markdown"},"source":{"21467a6a":"# Importing Libraries\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8630dc01":"# Importing USA Housing.csv\ndata = pd.read_csv('..\/input\/USA_Housing.csv')","57c486d5":"data.head()","87ee83f4":"# Checking for Null Values\ndata.info()","b61e108d":"# Getting the summary of Data\ndata.describe()","01bfda04":"# Dropping Address Column\ndata.drop(['Address'],axis=1,inplace=True)","931daff3":"data.head()","f3d3559f":"# Let's plot a pair plot of all variables in our dataframe\nsns.pairplot(data)","b0633f17":"# Visualise the relationship between the features and the response using scatterplots\nsns.pairplot(data, x_vars=['Avg. Area Income','Avg. Area House Age','Avg. Area Number of Rooms','Avg. Area Number of Bedrooms','Area Population'], y_vars='Price',height=7, aspect=0.7, kind='scatter')","b174508a":"sns.heatmap(data.corr(),annot=True)","3be20c0b":"data.corr().Price.sort_values(ascending=False)","5b4ae3ce":"sns.distplot(data.Price)","6cf575f5":"from sklearn import preprocessing\npre_process = preprocessing.StandardScaler()","0451ecef":"# Putting feature variable to X\nX = data[['Avg. Area Income','Avg. Area House Age','Avg. Area Number of Rooms','Avg. Area Number of Bedrooms','Area Population']]\n\n# Putting response variable to y\ny = data['Price']","360e80ce":"X = pd.DataFrame(pre_process.fit_transform(X))","f73e1d67":"X.head()","fe23fb7e":"y.head()","3ab6b324":"#random_state is the seed used by the random number generator, it can be any integer.\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7 ,test_size = 0.3, random_state=2)","b70cb6ff":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","bdaf0f24":"# Importing RFE and LinearRegression\nfrom sklearn.linear_model import LinearRegression","9be2b23d":"# Representing LinearRegression as lr(Creating LinearRegression Object)\nlm = LinearRegression()","573f9163":"# fit the model to the training data\nlm.fit(X_train, y_train)","9a7a9368":"# print the intercept\nprint(lm.intercept_)","f1cec89c":"# Let's see the coefficient\ncoeff_df = pd.DataFrame(lm.coef_,X_test.columns,columns=['Coefficient'])\ncoeff_df","f3c686e9":"# Making predictions using the model\ny_pred = lm.predict(X_test)","88997b20":"from sklearn.metrics import mean_squared_error, r2_score\nmse = mean_squared_error(y_test, y_pred)\nr_squared = r2_score(y_test, y_pred)","810078b7":"print('Mean_Squared_Error :' ,mse)\nprint('r_square_value :',r_squared)","b419712c":"from math import sqrt\n\nrms = sqrt(mse)\nrms","289ad431":"# Actual and Predicted\nc = [i for i in range(1,1501,1)] # generating index \nfig = plt.figure(figsize=(12,8))\nplt.plot(c,y_test, color=\"blue\", linewidth=2.5, linestyle=\"-\") #Plotting Actual\nplt.plot(c,y_pred, color=\"red\",  linewidth=2.5, linestyle=\"-\") #Plotting predicted\nfig.suptitle('Actual and Predicted', fontsize=15)              # Plot heading \nplt.xlabel('Index', fontsize=18)                               # X-label\nplt.ylabel('Housing Price', fontsize=16)                       # Y-label","ecf4dccb":"import statsmodels.api as sm\nX_train_sm = X_train\n#Unlike SKLearn, statsmodels don't automatically fit a constant, \n#so you need to use the method sm.add_constant(X) in order to add a constant. \nX_train_sm = sm.add_constant(X_train_sm)\n# create a fitted model in one line\nlm_1 = sm.OLS(y_train,X_train_sm).fit()\n\n# print the coefficients\nlm_1.params","9bb2f999":"print(lm_1.summary())","801accf2":"from statsmodels.stats.outliers_influence import variance_inflation_factor as vif\nvifs=[vif(X_train.values,i) for i in range(len(X_train.columns))]\npd.Series(data=vifs,index=X_train.columns)","08edc352":"X.head()","c1487e09":"X.drop([3],axis=1, inplace=True)","755e3cf8":"X.head()","779290b8":"#random_state is the seed used by the random number generator, it can be any integer.\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7 ,test_size = 0.3, random_state=2)","5ad9a258":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","41427cfa":"# Importing RFE and LinearRegression\nfrom sklearn.linear_model import LinearRegression","d8168e39":"# Representing LinearRegression as lr(Creating LinearRegression Object)\nlm = LinearRegression()","a3191ebb":"# fit the model to the training data\nlm.fit(X_train, y_train)","dc1d0e69":"# print the intercept\nprint(lm.intercept_)","9973d09b":"# Let's see the coefficient\ncoeff_df = pd.DataFrame(lm.coef_,X_test.columns,columns=['Coefficient'])\ncoeff_df","b0e403f1":"# Making predictions using the model\ny_pred = lm.predict(X_test)","bd70c41c":"from sklearn.metrics import mean_squared_error, r2_score\nmse = mean_squared_error(y_test, y_pred)\nr_squared = r2_score(y_test, y_pred)","499b3ccb":"print('Mean_Squared_Error :' ,mse)\nprint('r_square_value :',r_squared)","598ae091":"from math import sqrt\n\nrms = sqrt(mse)\nrms","0d0fe95a":"# Actual and Predicted\nc = [i for i in range(1,1501,1)] # generating index \nfig = plt.figure(figsize=(12,8))\nplt.plot(c,y_test, color=\"blue\", linewidth=2.5, linestyle=\"-\") #Plotting Actual\nplt.plot(c,y_pred, color=\"red\",  linewidth=2.5, linestyle=\"-\") #Plotting predicted\nfig.suptitle('Actual and Predicted', fontsize=15)              # Plot heading \nplt.xlabel('Index', fontsize=18)                               # X-label\nplt.ylabel('Housing Price', fontsize=16)                       # Y-label","b2a3242e":"import statsmodels.api as sm\nX_train_sm = X_train\n#Unlike SKLearn, statsmodels don't automatically fit a constant, \n#so you need to use the method sm.add_constant(X) in order to add a constant. \nX_train_sm = sm.add_constant(X_train_sm)\n# create a fitted model in one line\nlm_1 = sm.OLS(y_train,X_train_sm).fit()\n\n# print the coefficients\nlm_1.params","dbc1ad5e":"print(lm_1.summary())","fc056c65":"from statsmodels.stats.outliers_influence import variance_inflation_factor as vif\nvifs=[vif(X_train.values,i) for i in range(len(X_train.columns))]\npd.Series(data=vifs,index=X_train.columns)","97bcf1c6":"1. There are no null values, so there is no need of deleting or replacing the data.\n2. There is no necessity of having Address column\/feature, so i am dropping it.","c1762395":"### Data Preparation","6f23ecec":"### Improving the Model using the above Statistics","6f53305d":"From the above result we may infer that coefficient of Columns like 'Avg. Area House Age','Avg. Area Number of Rooms' and 'Avg. Area Number of Bedrooms' are influencing more as compared to other, hence we need to do scaling.","7e42c748":"### Also checking through Statistical Method","f25734d3":"From the above result and the paiplot drawn above we may infer that, there are strong multicollinearity among 'Avg. Area Number of Bedrooms' and other independent variables, also lets find VIF values for this.","5aecfa80":"#### Dropping 'Avg. Area Number of Bedrooms' Column","c01320f0":"#### Creating a Base Model","1c5e4a9c":"### Also checking through Statistical Method","1bf85427":"### EDA ","d64e5aab":"From the above result we may infer that, mse is huge which shouldn't be, hence we need to improve our model."}}