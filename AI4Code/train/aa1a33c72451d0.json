{"cell_type":{"9419491b":"code","c608d82f":"code","85c337aa":"code","07b18bce":"code","501fdc36":"code","e6a62ed2":"code","4052bd0c":"code","9f05008f":"code","8beff958":"code","b597ee03":"code","7a80e786":"code","8452f9dd":"code","62a5972a":"code","308e2118":"code","91793190":"code","859dc9af":"code","e2ae0468":"code","c9da0bbc":"code","102cf27f":"code","bf90bb91":"code","ec0493c1":"code","f4ab7853":"code","9249fdcf":"markdown","842267ff":"markdown","507eeef6":"markdown","55427272":"markdown","1761b9d4":"markdown"},"source":{"9419491b":"# import libraries\nimport pandas as pd","c608d82f":"vehicle = pd.read_csv('\/kaggle\/input\/automobile-dataset\/Automobile_data.csv')\nvehicle.head()","85c337aa":"vehicle.tail()","07b18bce":"vehicle.head(25)","501fdc36":"vehicle.info()","e6a62ed2":"vehicle.describe()","4052bd0c":"print(\"vehicle:-  \", vehicle.shape)\nprint(\"Rows:-     \", vehicle.shape[0])\nprint(\"Columns:-  \", vehicle.shape[1])\nprint(\"Features:- \\n\", vehicle.columns.tolist())\nprint(\"\\nMissing Values:- \", vehicle.isnull().values.sum())\nprint(\"\\nUnique Values:- \\n\", vehicle.nunique())","9f05008f":"print(vehicle.dtypes)","8beff958":"print(\"Unique values for make:- \" , vehicle.make.unique())\nprint(\"\\nUnique values for num-of-doors:- \" , vehicle['num-of-doors'].unique())  \nprint(\"\\nUnique values for body-style :- \" , vehicle['body-style'].unique())\nprint(\"\\nUnique values for drive-wheels:- \" , vehicle['drive-wheels'].unique())\nprint(\"\\nUnique values for engine-location:-\", vehicle['engine-location'].unique())\nprint(\"\\nUnique values for bore:-\", vehicle.bore.unique())\n","b597ee03":"print(vehicle.dtypes)","7a80e786":"df = vehicle[vehicle[\"horsepower\"] == '?']\ndf","8452f9dd":"#Replacing missing values of horsepower with mean of horsepower\nhorsepower = vehicle['horsepower'].loc[vehicle[\"horsepower\"] != '?']\nhpmean = horsepower.astype(str).astype(int).mean()\nvehicle['horsepower'] = vehicle['horsepower'].replace(\"?\", hpmean).astype(int)\nvehicle['horsepower']","62a5972a":"vehicle['peak-rpm'].loc[vehicle['peak-rpm'] == '?']","308e2118":"#Replacing missing values of peak-rpm with mean of peak-rpm \npick_rpm = vehicle['peak-rpm'].loc[vehicle['peak-rpm'] != '?']\nrpm_mean = pick_rpm.astype(str).astype(int).mean()\nprint(\"Mean Value of pick-rpm:- \"+ str(rpm_mean))\nvehicle['peak-rpm'] = vehicle['peak-rpm'].replace('?', rpm_mean).astype(int)\nvehicle['peak-rpm']","91793190":"vehicle['bore'].loc[vehicle['bore'] == '?']","859dc9af":"#Replacing missing values of bore with mean of bore \nbore = vehicle['bore'].loc[vehicle['bore'] != '?']\nbore_mean = pd.to_numeric(bore, errors='coerce').mean()\nprint(\"Mean Value of bore:- \"+ str(bore_mean))\nvehicle['bore'] = vehicle['bore'].replace('?', bore_mean).astype(float)\nvehicle['bore']","e2ae0468":"vehicle['stroke'].loc[vehicle['stroke'] == '?']","c9da0bbc":"#Replacing missing values of bore with mean of bore \nstroke = vehicle['stroke'].loc[vehicle['stroke'] != '?']\nstroke\nstroke_mean = pd.to_numeric(stroke, errors='coerce').mean()\nprint(\"Mean Value of stroke:- \"+ str(stroke_mean))\nvehicle['stroke'] = vehicle['stroke'].replace('?', stroke_mean).astype(float)\nvehicle['stroke']","102cf27f":"vehicle['price'].loc[vehicle['price'] == '?']","bf90bb91":"#Replacing missing values of price with mean of price \nprice = vehicle['price'].loc[vehicle['price'] != '?']\nprice_mean = price.astype(str).astype(int).mean()\nprint(\"Mean Price of all vehicle price:- \" +str(price_mean))\nvehicle['price'] = vehicle['price'].replace(\"?\", price_mean).astype(int)\nvehicle['price']","ec0493c1":"print(vehicle.dtypes)","f4ab7853":"vehicle.head(100)","9249fdcf":"**Printing the data type of each column**","842267ff":"**Listing down key attributes from data frame**","507eeef6":"**Finding the Unique values for some columns**","55427272":"**Reading Data from Automoble_data.csv and create data frame vehicle**","1761b9d4":"**Here some of the colums that need to be numneric values but data type as object. i.e. we have some missing values in these column denoted by'?' . Finding out hand handling these missing values**"}}