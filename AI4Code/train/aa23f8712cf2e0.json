{"cell_type":{"8c2774a0":"code","6d6c9049":"code","7b8ef8ba":"code","7747b710":"code","5123988b":"code","9a743358":"code","ad5e6e48":"code","644b8bed":"code","ca555218":"code","6e38e928":"code","8278681b":"code","0c86ca22":"code","46424ce2":"code","8e0bbc95":"code","c3d1e277":"code","85ec59c5":"code","a099afa3":"code","37c94ecf":"code","f75590b6":"code","cbbf9b25":"code","73543668":"code","5b344047":"code","bb548cda":"code","0fd03954":"code","d653bc90":"code","4962b8da":"code","e6f1a468":"code","af735846":"code","0434da1e":"code","35d73565":"code","f4f78f66":"code","e74bbd5c":"code","c7382308":"code","ed22af50":"code","ff526aee":"code","e927d0d6":"code","ba09cbe2":"code","7e6d879d":"markdown","1f1a104f":"markdown","283d6d61":"markdown","667a216e":"markdown","4aa57d90":"markdown","d8331dae":"markdown"},"source":{"8c2774a0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d6c9049":"data = pd.read_csv(\"..\/input\/co2-emission-by-vehicles\/CO2 Emissions_Canada.csv\")\ndata.head(10)","7b8ef8ba":"data.shape","7747b710":"data.nunique()","5123988b":"data.isnull().sum()","9a743358":"data.duplicated().sum()","ad5e6e48":"data.drop_duplicates(inplace=True)","644b8bed":"data[\"Fuel Type\"].unique()","ca555218":"data[\"Transmission\"].unique()","6e38e928":"data[\"Vehicle Class\"].unique()","8278681b":"plt.scatter(data[\"Engine Size(L)\"], data[\"CO2 Emissions(g\/km)\"])","0c86ca22":"plt.scatter(data[\"Fuel Consumption Comb (L\/100 km)\"], data[\"CO2 Emissions(g\/km)\"])","46424ce2":"sns.barplot(data[\"Cylinders\"],data[\"CO2 Emissions(g\/km)\"])","8e0bbc95":"sns.barplot(data[\"Fuel Type\"],data[\"CO2 Emissions(g\/km)\"])","c3d1e277":"plt.figure(figsize=(10,5))\norder =data.groupby(['Vehicle Class']).mean().sort_values('CO2 Emissions(g\/km)',ascending=False).index\nsns.barplot(data[\"CO2 Emissions(g\/km)\"],data[\"Vehicle Class\"],order=order)","85ec59c5":"plt.figure(figsize = (10,8))\norder = data.groupby([\"Transmission\"]).mean().sort_values(\"CO2 Emissions(g\/km)\", ascending = False).index\nsns.barplot(data[\"CO2 Emissions(g\/km)\"],data[\"Transmission\"],order = order)","a099afa3":"X = data[[\"Vehicle Class\",\"Transmission\",\"Fuel Type\",\"Engine Size(L)\",\"Cylinders\",\"Fuel Consumption Comb (L\/100 km)\"]]\nY = data[[\"CO2 Emissions(g\/km)\"]]\nX.head(10)","37c94ecf":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ncols = [\"Engine Size(L)\",\"Cylinders\",\"Fuel Consumption Comb (L\/100 km)\"]\nX[cols] = sc.fit_transform(X[cols])","f75590b6":"from sklearn.preprocessing import OrdinalEncoder\noc = OrdinalEncoder()\ncols = [\"Vehicle Class\",\"Transmission\",\"Fuel Type\"]\nX[cols] = oc.fit_transform(X[cols])","cbbf9b25":"X.head(10)","73543668":"# Splitting the data\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state = 14)","5b344047":"from sklearn.preprocessing import PolynomialFeatures\npoly = PolynomialFeatures(degree = 2)\nx_train_poly = poly.fit_transform(x_train)\nx_test_poly = poly.fit_transform(x_test)","bb548cda":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()\nreg.fit(x_train_poly,y_train)","0fd03954":"reg.score(x_train_poly,y_train)","d653bc90":"reg.score(x_test_poly,y_test)","4962b8da":"from sklearn.tree import DecisionTreeRegressor\ndt_reg = DecisionTreeRegressor(random_state = 5, max_depth = 5)\ndt_reg.fit(x_train,y_train)","e6f1a468":"dt_reg.score(x_train,y_train)","af735846":"dt_reg.score(x_test,y_test)","0434da1e":"from sklearn.ensemble import RandomForestRegressor\nrf_reg = RandomForestRegressor(n_estimators = 3, random_state = 0)\nrf_reg.fit(x_train, y_train)","35d73565":"rf_reg.score(x_train,y_train)","f4f78f66":"rf_reg.score(x_test,y_test)","e74bbd5c":"from sklearn.linear_model import Ridge\nridge_reg = Ridge(alpha = 5)\nridge_reg.fit(x_train_poly,y_train)","c7382308":"ridge_reg.score(x_train_poly,y_train)","ed22af50":"ridge_reg.score(x_test_poly,y_test)","ff526aee":"from sklearn.linear_model import Lasso\nla_reg = Lasso()\nla_reg.fit(x_train_poly,y_train)","e927d0d6":"la_reg.score(x_train_poly,y_train)","ba09cbe2":"la_reg.score(x_test_poly,y_test)","7e6d879d":"# Decision Tree Regression","1f1a104f":"# Random Forest Regression","283d6d61":"# Lasso Regression","667a216e":"# Polynomial Regression","4aa57d90":"# Reading the data","d8331dae":"# Ridge Regression"}}