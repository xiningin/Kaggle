{"cell_type":{"da7a3b4d":"code","0a140bb1":"code","cf7d08b8":"code","b174e3d9":"code","11c2e631":"code","98b67e10":"code","ea05a5f6":"code","58da8d45":"code","3c5591a1":"code","f088d155":"code","e9b2ec6d":"code","7bb588b9":"code","a74792b9":"code","605e8e20":"code","b3071e47":"code","05eef5ab":"code","26818385":"code","bbaa3ad6":"code","0ba85cae":"code","fe26f406":"code","24237ec3":"code","7407b608":"code","ce1a71aa":"code","dc0090b6":"code","272bb443":"code","9cd8a621":"code","1b11cdc2":"code","5cb877d6":"code","3dc27f2a":"code","917a7e80":"code","8a382264":"code","8919f178":"code","588b1d96":"code","7fbcc20e":"code","3ad4ed8f":"code","147b7f48":"code","cd7c0cdc":"code","cf3704ca":"code","d9d11583":"code","2edacbe3":"code","01932e48":"code","35a98812":"code","1a2460a8":"code","5e09f531":"code","37010753":"code","1478a241":"code","e04a091e":"code","ff1c2a5f":"code","a28e4d9e":"code","5a662884":"code","aa5c2c51":"code","4b1d1abd":"code","ec5d2312":"code","9c80fe30":"code","19e88964":"code","3fd0995e":"code","b34374ca":"code","9b966778":"code","5024ec88":"markdown"},"source":{"da7a3b4d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn","0a140bb1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cf7d08b8":"# import io\n# df_train = pd.read_csv(io.BytesIO(uploaded['train.csv']))\n# df_test = pd.read_csv(io.BytesIO(uploaded['test.csv']))\n\ndf_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","b174e3d9":"df_train.head()","11c2e631":"df_test.head()","98b67e10":"df_train.info()","ea05a5f6":"df_test.info()","58da8d45":"round(100*(df_train.isnull().sum(axis = 0)\/len(df_train)),2)","3c5591a1":"round(100*(df_test.isnull().sum(axis=0)\/len(df_test)),2)","f088d155":"# Lets drop cabin column and both sets has 78% of missing values","e9b2ec6d":"df_train.drop([\"Cabin\"], 1, inplace = True)","7bb588b9":"round(100*(df_train.isnull().sum(axis = 0)\/len(df_train)),2)","a74792b9":"df_test.drop([\"Cabin\"],1,inplace = True)","605e8e20":"round(100*(df_test.isnull().sum(axis=0)\/len(df_test)),2)","b3071e47":"#Imputing the missing values","05eef5ab":"df_train.Age.mean()","26818385":"df_train['Age'] = df_train.Age.fillna(df_train.Age.mean())","bbaa3ad6":"df_train.Age.isnull().values.any()","0ba85cae":"round(100*(df_train.isnull().sum(axis = 0)\/len(df_train)),2)","fe26f406":"#Imputing AGE column\ndf_test['Age'] = df_test.Age.fillna(df_test.Age.mean())","24237ec3":"round(100*(df_test.isnull().sum(axis=0)\/len(df_test)),2)","7407b608":"# #Imputing FARE column\ndf_train['Embarked'] = df_train.Embarked.fillna(df_train.Embarked.mode()[0])","ce1a71aa":"round(100*(df_train.isnull().sum(axis = 0)\/len(df_train)),2)","dc0090b6":"# Imputing Fare column of Test set\ndf_test['Fare'] = df_test.Fare.fillna(df_test.Fare.mean())","272bb443":"round(100*(df_test.isnull().sum(axis=0)\/len(df_test)),2)","9cd8a621":"#Now we have no more null values, Let's visualize.","1b11cdc2":"ax = sn.heatmap(df_train.corr(), annot = True)\nax","5cb877d6":"ax = sn.heatmap(df_test.corr(), annot = True)\nax","3dc27f2a":"df_train.Pclass.value_counts()","917a7e80":"#Dropping PassengerId column from train set","8a382264":"df_train.drop(['PassengerId'],1,inplace=True)","8919f178":"#Dropping PassengerId column from train set","588b1d96":"df_test.drop(['PassengerId'],1,inplace=True)","7fbcc20e":"#Dropping Name var\ndf_train.drop(['Name'],1,inplace=True)\ndf_test.drop(['Name'],1,inplace=True)","3ad4ed8f":"#Dropping Ticket var\ndf_train.drop(['Ticket'],1,inplace=True)\ndf_test.drop(['Ticket'],1,inplace=True)","147b7f48":"#Creating dummy variables in train set","cd7c0cdc":"categorical_columns = df_train.loc[:, df_train.dtypes == 'object']\ncategorical_columns.columns","cf3704ca":"#Creating dummies\ntrain_dummy = pd.get_dummies(df_train[['Sex', 'Embarked']], drop_first=True)\n\ntrain_dummy","d9d11583":"#Creating dummies\ntest_dummy = pd.get_dummies(df_test[['Sex', 'Embarked']], drop_first=True)\n\ntest_dummy","2edacbe3":"#Adding dummy var in original set\ndf_train = pd.concat([df_train, train_dummy], axis=1)","01932e48":"#Adding dummy var in original set\ndf_test = pd.concat([df_test, test_dummy], axis=1)\ndf_test","35a98812":"df_train.describe()","1a2460a8":"df_train.shape","5e09f531":"df_test.shape","37010753":"X_train = df_train.drop(['Survived'],1)\ny_train = df_train['Survived']","1478a241":"# Import MinMax scaler\n\nfrom sklearn.preprocessing import MinMaxScaler","e04a091e":"# Scale the three numeric features present in the dataset\n\nscaler = MinMaxScaler()\n\nX_train[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']] = scaler.fit_transform(X_train[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']])\n\nX_train.head()","ff1c2a5f":"X_train.describe()","a28e4d9e":"X_train.corr()","5a662884":"# MODEL BUILDING\n\n# Import 'LogisticRegression' and create a LogisticRegression object\n\nfrom sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()","aa5c2c51":"X_train.drop(['Sex','Embarked'],1,inplace=True)","4b1d1abd":"logreg.fit(X_train, y_train)","ec5d2312":"scaler = MinMaxScaler()\n\ndf_test[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']] = scaler.fit_transform(df_test[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']])\n\ndf_test.head()","9c80fe30":"df_test.drop(['Sex','Embarked'],1,inplace=True)","19e88964":"y_pred = logreg.predict(df_test)","3fd0995e":"y_pred","b34374ca":"# df = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\n# df.head()","9b966778":"# pred = pd.DataFrame(y_pred)\n# datasets = pd.concat([df['PassengerId'],pred],axis=1)\n# datasets.columns=['PassengerId','Survived']\n# datasets.to_csv('gender_submission.csv',index=False)","5024ec88":"DATA EXPLORATION"}}