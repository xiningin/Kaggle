{"cell_type":{"37906626":"code","0f82890a":"code","baab30a2":"code","d2d7cb28":"code","83e7ae2e":"code","d066a6d5":"code","d4ecea4b":"code","2ec4007d":"code","58c8fe10":"code","9e812b99":"code","f8cc75f4":"code","f7d9a48e":"code","4215c2f3":"code","7d6d5042":"code","36d5307b":"code","2ac7eda5":"code","d3f649ba":"code","95ced376":"code","a84d00be":"markdown","69f8d6f9":"markdown","3628d244":"markdown","11a847da":"markdown","894253ed":"markdown","61e65c35":"markdown","3ef9d178":"markdown","bbad462f":"markdown"},"source":{"37906626":"# importing necessary libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt","0f82890a":"# the data\ndata={'Cause of deaths':['Chronic Disease','Unintetional Injuries','Alzheimers','Infuenza and Pneumonia','Sepsis','Others'],\n     'Percentile':[62, 5, 4, 2, 1, 26]}\n\ndf=pd.DataFrame(data) # creating dataframe\ndf","baab30a2":"# sorting the dataframe by Percentile in descending order\ndf.sort_values(by=['Percentile'],inplace=True,ascending=False)\ndf","d2d7cb28":"# plotting the piechart\n%matplotlib inline\nplt.figure(figsize=(7,7))\nplt.title('Ohio State\u2019s leading causes of death from the year 2012')\nplt.pie(df['Percentile'], labels=df['Cause of deaths'], autopct='%1.0f%%')","83e7ae2e":"data={'Country':['Algeria','Angola','Argentina','Australia','Austria','Bahamas','Bangladesh','Belarus','Belgium','Bhutan','Brazil','Bulgaria','Cambodia','Cameroon','Chile','China','Colombia','Cyprus','Denmark','El Salvador','Estonia','Ethiopia','Fiji','Finland','France','Georgia','Ghana','Grenada','Guinea','Haiti','Honduras','Hungary','India','Indonesia','Ireland','Italy','Japan','Kenya', 'South Korea','Liberia','Malaysia','Mexico', 'Morocco','Nepal','New Zealand','Norway','Pakistan', 'Peru','Qatar','Russia','Singapore','South Africa','Spain','Sweden','Switzerland','Thailand', 'United Arab Emirates','United Kingdom','United States','Uruguay','Venezuela','Vietnam','Zimbabwe'], \n      'GDP':[2255.225482,629.9553062,11601.63022,25306.82494,27266.40335,19466.99052,588.3691778,2890.345675,24733.62696,1445.760002,4803.398244,2618.876037,590.4521124,665.7982328,7122.938458,2639.54156,3362.4656,15378.16704,30860.12808,2579.115607,6525.541272,229.6769525,2242.689259,27570.4852,23016.84778,1334.646773,402.6953275,6047.200797,394.1156638,385.5793827,1414.072488,5745.981529,837.7464011,1206.991065,27715.52837,18937.24998,39578.07441,478.2194906,16684.21278,279.2204061,5345.213415,6288.25324,1908.304416,274.8728621,14646.42094,40034.85063,672.1547506,3359.517402,36152.66676,3054.727742,33529.83052,3825.093781,15428.32098,33630.24604,39170.41371,2699.123242,21058.43643,28272.40661,37691.02733,9581.05659,5671.912202,757.4009286,347.7456605]}\n # creating dataframe\ndf=pd.DataFrame(data)\ndf.head()","d066a6d5":"# the country with highest GDP\ndf[df.GDP == max(df.GDP)]\n","d4ecea4b":"df[df.GDP == min(df.GDP)]\n# the country with lowest GDP","2ec4007d":"# prints out the entire list of the countries with their GDPs.\ndf.values","58c8fe10":"# Print out text and input values iteratively\nfor i in range(len(df.Country)):\n  for j in range(i, len(df.GDP)):\n    print(df.Country.iloc[i],df.GDP.iloc[j])\n    break","9e812b99":"# Standardized GDP\nmean=df.GDP.mean()\nstd=df.GDP.std()\ndf['Standardized GDP']=(df.GDP-mean)\/std\ndf","f8cc75f4":"print('Mean GDP value is', df.GDP.mean())\nprint('Sum of all GDPs is', df.GDP.sum())","f7d9a48e":"df=pd.read_csv('\/kaggle\/input\/faa-aviation-data-small\/faa_ai_prelim.csv')","4215c2f3":"df.head()","7d6d5042":"#Create a new dataframe with only the required columns\ndf1=df[['ACFT_MAKE_NAME','LOC_STATE_NAME','ACFT_MODEL_NAME','RMK_TEXT','FLT_PHASE','EVENT_TYPE_DESC','FATAL_FLAG']]\ndf1.head()","36d5307b":"df1['FATAL_FLAG'].fillna('No', inplace=True)\ndf1.head()","2ac7eda5":"df1['ACFT_MAKE_NAME'].value_counts()","d3f649ba":"df2=df1.dropna(subset=['ACFT_MAKE_NAME'])","95ced376":"df2[df2['FATAL_FLAG']=='Yes']","a84d00be":"### Remove all the observations where aircraft names are not available\n","69f8d6f9":"# Evaluate the dataset containing the GDPs of different countries to:\n\u2022 Find and print the name of the country with the highest GDP,\n\n\u2022 Find and print the name of the country with the lowest GDP,\n\n\u2022 Print out text and input values iteratively,\n\n\u2022 Print out the entire list of the countries with their GDPs, and\n\n\u2022 Print the highest GDP value, lowest GDP value, mean GDP value, standardized GDP value, and the sum of all the GDPs","3628d244":"### For the first 7 tasks we can create a new dataframe with just the required columns","11a847da":"### Clean the dataset and replace the fatal flag NaN with \u201cNo\u201d","894253ed":"# Ohio State\u2019s leading causes of death from the year 2012.\nYou have been provided with a dataset that lists Ohio State\u2019s leading causes of death from the year 2012. Using the two data points:\n1. Cause of deaths and\n2. Percentile\n\n\nDraw a pie chart to visualize the dataset.","61e65c35":"### Find the aircraft types and their occurrences in the dataset","3ef9d178":"# Aviation Data\nTasks\n1. View Aircraft make name\n2. View State name\n3. View Aircraft model name\n4. View Text information\n5. View Flight phase\n5. View Event description type\n7. View Fatal flag\n8. Clean the dataset and replace the fatal flag NaN with \u201cNo\u201d\n9. Find the aircraft types and their occurrences in the dataset\n10. Remove all the observations where aircraft names are not available\n11. Display the observations where fatal flag is \u201cYes\u201d","bbad462f":"### Display the observations where fatal flag is \u201cYes\u201d"}}