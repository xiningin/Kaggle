{"cell_type":{"64c5c248":"code","3760fad1":"code","b15232a6":"code","43a70fbc":"code","0e8472b8":"code","2d04032d":"code","d828fc37":"code","5e5d1720":"code","2768853d":"code","0d9fabd2":"code","cac37f76":"code","730e9148":"code","baa3bbd6":"code","8b91d443":"code","dce35454":"code","b37889ca":"code","7443c656":"code","6ae1cb77":"code","fbf379a8":"code","b2a2a01e":"code","688a5307":"code","f7ce2861":"code","7fe9e9f2":"code","1634b97d":"code","32a8bbe4":"code","6df9bf89":"code","8074d63c":"code","c18ed69c":"code","c3216d40":"code","89eb5079":"code","6b84ab64":"code","ac54116a":"code","33f34535":"code","1be09eef":"code","a89b70e1":"code","3671455f":"code","0c16411e":"code","92b0b61a":"code","4e9d56b7":"code","4035a369":"code","847d93f9":"code","10844572":"code","7c7ec675":"code","ba370f81":"code","2a1a8e00":"code","950a0a91":"code","0db725dc":"code","8e26563f":"code","1ab13014":"code","b4c82f41":"code","b6a80c44":"code","533daf45":"code","4af9750f":"code","10a2404a":"code","9d7042fd":"code","37b15a4c":"code","24037bf4":"code","9ea3515a":"code","2e331f4a":"code","0bd7bab0":"code","63e542b3":"code","d970b917":"code","b695b142":"code","6e35b9b0":"code","01ff8d38":"code","cdece985":"code","0e708678":"code","1a2191b5":"code","ccd055dd":"code","c6623983":"code","61d4b7d5":"code","cf48891e":"code","da6a759c":"code","62485e0a":"code","a69884d0":"code","dec1233c":"code","1b6f8f1f":"code","38517d72":"code","c6cefa92":"code","ec7c4464":"code","1de6a0ea":"code","bc985e7c":"code","17c4b573":"code","714bd3d0":"code","ada687b8":"code","1665eb6f":"code","2d9a24ca":"code","20a17c22":"code","7a0b5eb7":"code","7b7bb6f8":"code","101b73ea":"code","011470a4":"code","726401d2":"code","152c8acb":"code","f6165f79":"code","7922fc05":"code","0b733269":"code","f9f1c742":"code","ddec7834":"code","04a94c16":"code","3eda8a33":"code","c04acf9d":"code","f2a868a4":"code","96f8d5bb":"code","2ec787ba":"code","60feafaf":"code","dfdaf491":"code","7772586d":"code","562277cf":"code","380de82b":"code","d3f04c69":"code","10b5b85b":"code","4ed1697f":"code","69861fde":"code","f60e80a7":"code","53ba0b49":"code","14e9e1f0":"code","6afd6d5f":"code","7ea02536":"code","fbb3128b":"code","ef85028e":"code","b678e0e3":"markdown","e00e7c32":"markdown","2db8a8c0":"markdown","ca652f86":"markdown","d4910a60":"markdown","4f2489e3":"markdown","01864783":"markdown","bbca457a":"markdown","bc5e53aa":"markdown","cafff060":"markdown","f216a00f":"markdown","addbe8c3":"markdown","69c3a0af":"markdown","7b519632":"markdown","76347b05":"markdown","8e900a7f":"markdown","f2f7a741":"markdown","14670493":"markdown","863baec3":"markdown","0016bdc3":"markdown","9cc21cde":"markdown","a4db8805":"markdown","b4022278":"markdown","80173fbd":"markdown","60363382":"markdown","d0d1f36a":"markdown","f267d967":"markdown","27aa571d":"markdown","0aae0848":"markdown","d4e74d84":"markdown","4afcd5bd":"markdown","50526291":"markdown","78aa2aac":"markdown","90995953":"markdown","498f1214":"markdown","2bbcb34e":"markdown","76ce7ec5":"markdown","3434e2d8":"markdown","6c637f0d":"markdown","2f37cb82":"markdown","525a8c55":"markdown","d0666908":"markdown","f32ddcd9":"markdown","33e1f0d4":"markdown","5f48cef9":"markdown","a93eef76":"markdown","62022962":"markdown","3bef81f3":"markdown","58ce0876":"markdown","bd854c76":"markdown","f0089756":"markdown","cb238322":"markdown","b87084bc":"markdown","687bb621":"markdown","db09d0f6":"markdown","034c5920":"markdown","1e9ed619":"markdown","49bb9e17":"markdown","dc9dbcc3":"markdown","05dba93b":"markdown","01c8beb5":"markdown","a46eb778":"markdown","f317e088":"markdown","dc65bdb9":"markdown","00fb9204":"markdown","90a19b3d":"markdown","c9b4ec4a":"markdown","4773af95":"markdown","2f7aec3b":"markdown","2eeb0a59":"markdown","78444bcc":"markdown","65fdafae":"markdown","69ad634c":"markdown","60cd7f92":"markdown","af029276":"markdown","ec96435a":"markdown","e8081228":"markdown","c47df30d":"markdown","106e0d10":"markdown","aabec6b4":"markdown","842a754f":"markdown","cb989c19":"markdown","1a07f631":"markdown","b155080e":"markdown","3110e3b4":"markdown","055eddfb":"markdown","e271f167":"markdown","2fcc9b9e":"markdown","61c78d93":"markdown","4f252ad5":"markdown","adff4fc7":"markdown","1347660b":"markdown","136a944d":"markdown","fe7a429d":"markdown","fc9d1f8b":"markdown","bb7d801c":"markdown","81a0cfc5":"markdown","845a0f38":"markdown","24ad87b3":"markdown","b1635ce6":"markdown","efac7c9c":"markdown","ce942047":"markdown","2f199cf9":"markdown","d616666a":"markdown","67740cec":"markdown","ae38df51":"markdown","0a298dd8":"markdown","76cee641":"markdown","c417354a":"markdown","5717775a":"markdown","3c508af2":"markdown","9c163c42":"markdown","948443e5":"markdown","aaaa566b":"markdown","7febb61f":"markdown","7a5e8bde":"markdown"},"source":{"64c5c248":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nimport itertools\n%matplotlib inline\n\n# setting up plot style \nstyle.use('seaborn-poster')\nstyle.use('fivethirtyeight')","3760fad1":"import warnings\nwarnings.filterwarnings('ignore')","b15232a6":"pd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\npd.set_option('display.expand_frame_repr', False)","43a70fbc":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0e8472b8":"applicationDF = pd.read_csv(r'\/kaggle\/input\/loan-defaulter\/application_data.csv')\npreviousDF = pd.read_csv('\/kaggle\/input\/loan-defaulter\/previous_application.csv')\napplicationDF.head()","2d04032d":"previousDF.head()","d828fc37":"# Database dimension\nprint(\"Database dimension - applicationDF     :\",applicationDF.shape)\nprint(\"Database dimension - previousDF        :\",previousDF.shape)\n\n#Database size\nprint(\"Database size - applicationDF          :\",applicationDF.size)\nprint(\"Database size - previousDF             :\",previousDF.size)","5e5d1720":"# Database column types\napplicationDF.info(verbose=True)","2768853d":"previousDF.info(verbose=True)","0d9fabd2":"# Checking the numeric variables of the dataframes\napplicationDF.describe()","cac37f76":"previousDF.describe()","730e9148":"import missingno as mn\nmn.matrix(applicationDF)","baa3bbd6":"# % null value in each column\nround(applicationDF.isnull().sum() \/ applicationDF.shape[0] * 100.00,2)","8b91d443":"null_applicationDF = pd.DataFrame((applicationDF.isnull().sum())*100\/applicationDF.shape[0]).reset_index()\nnull_applicationDF.columns = ['Column Name', 'Null Values Percentage']\nfig = plt.figure(figsize=(18,6))\nax = sns.pointplot(x=\"Column Name\",y=\"Null Values Percentage\",data=null_applicationDF,color='blue')\nplt.xticks(rotation =90,fontsize =7)\nax.axhline(40, ls='--',color='red')\nplt.title(\"Percentage of Missing values in application data\")\nplt.ylabel(\"Null Values PERCENTAGE\")\nplt.xlabel(\"COLUMNS\")\nplt.show()","dce35454":"# more than or equal to 40% empty rows columns\nnullcol_40_application = null_applicationDF[null_applicationDF[\"Null Values Percentage\"]>=40]\nnullcol_40_application","b37889ca":"# How many columns have more than or euqal to 40% null values ?\nlen(nullcol_40_application)","7443c656":"mn.matrix(previousDF)","6ae1cb77":"# checking the null value % of each column in previousDF dataframe\nround(previousDF.isnull().sum() \/ previousDF.shape[0] * 100.00,2)","fbf379a8":"null_previousDF = pd.DataFrame((previousDF.isnull().sum())*100\/previousDF.shape[0]).reset_index()\nnull_previousDF.columns = ['Column Name', 'Null Values Percentage']\nfig = plt.figure(figsize=(18,6))\nax = sns.pointplot(x=\"Column Name\",y=\"Null Values Percentage\",data=null_previousDF,color ='blue')\nplt.xticks(rotation =90,fontsize =7)\nax.axhline(40, ls='--',color='red')\nplt.title(\"Percentage of Missing values in previousDF data\")\nplt.ylabel(\"Null Values PERCENTAGE\")\nplt.xlabel(\"COLUMNS\")\nplt.show()","b2a2a01e":"# more than or equal to 40% empty rows columns\nnullcol_40_previous = null_previousDF[null_previousDF[\"Null Values Percentage\"]>=40]\nnullcol_40_previous","688a5307":"# How many columns have more than or euqal to 40% null values ?\nlen(nullcol_40_previous)","f7ce2861":"# Checking correlation of EXT_SOURCE_X columns vs TARGET column\nSource = applicationDF[[\"EXT_SOURCE_1\",\"EXT_SOURCE_2\",\"EXT_SOURCE_3\",\"TARGET\"]]\nsource_corr = Source.corr()\nax = sns.heatmap(source_corr,\n            xticklabels=source_corr.columns,\n            yticklabels=source_corr.columns,\n            annot = True,\n            cmap =\"RdYlGn\")","7fe9e9f2":"# create a list of columns that needs to be dropped including the columns with >40% null values\nUnwanted_application = nullcol_40_application[\"Column Name\"].tolist()+ ['EXT_SOURCE_2','EXT_SOURCE_3'] \n# as EXT_SOURCE_1 column is already included in nullcol_40_application \nlen(Unwanted_application)","1634b97d":"# Checking the relevance of Flag_Document and whether it has any relation with loan repayment status\ncol_Doc = [ 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3','FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6','FLAG_DOCUMENT_7', \n           'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9','FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12','FLAG_DOCUMENT_13',\n           'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15','FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18',\n           'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21']\ndf_flag = applicationDF[col_Doc+[\"TARGET\"]]\n\nlength = len(col_Doc)\n\ndf_flag[\"TARGET\"] = df_flag[\"TARGET\"].replace({1:\"Defaulter\",0:\"Repayer\"})\n\nfig = plt.figure(figsize=(21,24))\n\nfor i,j in itertools.zip_longest(col_Doc,range(length)):\n    plt.subplot(5,4,j+1)\n    ax = sns.countplot(df_flag[i],hue=df_flag[\"TARGET\"],palette=[\"r\",\"g\"])\n    plt.yticks(fontsize=8)\n    plt.xlabel(\"\")\n    plt.ylabel(\"\")\n    plt.title(i)","32a8bbe4":"# Including the flag documents for dropping the Document columns\ncol_Doc.remove('FLAG_DOCUMENT_3') \nUnwanted_application = Unwanted_application + col_Doc\nlen(Unwanted_application)","6df9bf89":"# checking is there is any correlation between mobile phone, work phone etc, email, Family members and Region rating\ncontact_col = ['FLAG_MOBIL', 'FLAG_EMP_PHONE', 'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE',\n       'FLAG_PHONE', 'FLAG_EMAIL','TARGET']\nContact_corr = applicationDF[contact_col].corr()\nfig = plt.figure(figsize=(8,8))\nax = sns.heatmap(Contact_corr,\n            xticklabels=Contact_corr.columns,\n            yticklabels=Contact_corr.columns,\n            annot = True,\n            cmap =\"RdYlGn\",\n            linewidth=1)","8074d63c":"# including the 6 FLAG columns to be deleted\ncontact_col.remove('TARGET') \nUnwanted_application = Unwanted_application + contact_col\nlen(Unwanted_application)","c18ed69c":"# Dropping the unnecessary columns from applicationDF\napplicationDF.drop(labels=Unwanted_application,axis=1,inplace=True)","c3216d40":"# Inspecting the dataframe after removal of unnecessary columns\napplicationDF.shape","89eb5079":"# inspecting the column types after removal of unnecessary columns\napplicationDF.info()","6b84ab64":"# Getting the 11 columns which has more than 40% unknown\nUnwanted_previous = nullcol_40_previous[\"Column Name\"].tolist()\nUnwanted_previous","ac54116a":"# Listing down columns which are not needed\nUnnecessary_previous = ['WEEKDAY_APPR_PROCESS_START','HOUR_APPR_PROCESS_START',\n                        'FLAG_LAST_APPL_PER_CONTRACT','NFLAG_LAST_APPL_IN_DAY']","33f34535":"Unwanted_previous = Unwanted_previous + Unnecessary_previous\nlen(Unwanted_previous)","1be09eef":"# Dropping the unnecessary columns from previous\npreviousDF.drop(labels=Unwanted_previous,axis=1,inplace=True)\n# Inspecting the dataframe after removal of unnecessary columns\npreviousDF.shape","a89b70e1":"# inspecting the column types after after removal of unnecessary columns\npreviousDF.info()","3671455f":"# Converting Negative days to positive days\n\ndate_col = ['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH']\n\nfor col in date_col:\n    applicationDF[col] = abs(applicationDF[col])","0c16411e":"# Binning Numerical Columns to create a categorical column\n\n# Creating bins for income amount\napplicationDF['AMT_INCOME_TOTAL']=applicationDF['AMT_INCOME_TOTAL']\/100000\n\nbins = [0,1,2,3,4,5,6,7,8,9,10,11]\nslot = ['0-100K','100K-200K', '200k-300k','300k-400k','400k-500k','500k-600k','600k-700k','700k-800k','800k-900k','900k-1M', '1M Above']\n\napplicationDF['AMT_INCOME_RANGE']=pd.cut(applicationDF['AMT_INCOME_TOTAL'],bins,labels=slot)\n","92b0b61a":"applicationDF['AMT_INCOME_RANGE'].value_counts(normalize=True)*100","4e9d56b7":"# Creating bins for Credit amount\napplicationDF['AMT_CREDIT']=applicationDF['AMT_CREDIT']\/100000\n\nbins = [0,1,2,3,4,5,6,7,8,9,10,100]\nslots = ['0-100K','100K-200K', '200k-300k','300k-400k','400k-500k','500k-600k','600k-700k','700k-800k',\n       '800k-900k','900k-1M', '1M Above']\n\napplicationDF['AMT_CREDIT_RANGE']=pd.cut(applicationDF['AMT_CREDIT'],bins=bins,labels=slots)","4035a369":"#checking the binning of data and % of data in each category\napplicationDF['AMT_CREDIT_RANGE'].value_counts(normalize=True)*100","847d93f9":"# Creating bins for Age\napplicationDF['AGE'] = applicationDF['DAYS_BIRTH'] \/\/ 365\nbins = [0,20,30,40,50,100]\nslots = ['0-20','20-30','30-40','40-50','50 above']\n\napplicationDF['AGE_GROUP']=pd.cut(applicationDF['AGE'],bins=bins,labels=slots)","10844572":"#checking the binning of data and % of data in each category\napplicationDF['AGE_GROUP'].value_counts(normalize=True)*100","7c7ec675":"# Creating bins for Employement Time\napplicationDF['YEARS_EMPLOYED'] = applicationDF['DAYS_EMPLOYED'] \/\/ 365\nbins = [0,5,10,20,30,40,50,60,150]\nslots = ['0-5','5-10','10-20','20-30','30-40','40-50','50-60','60 above']\n\napplicationDF['EMPLOYMENT_YEAR']=pd.cut(applicationDF['YEARS_EMPLOYED'],bins=bins,labels=slots)","ba370f81":"#checking the binning of data and % of data in each category\napplicationDF['EMPLOYMENT_YEAR'].value_counts(normalize=True)*100","2a1a8e00":"#Checking the number of unique values each column possess to identify categorical columns\napplicationDF.nunique().sort_values()","950a0a91":"# inspecting the column types if they are in correct data type using the above result.\napplicationDF.info()","0db725dc":"#Conversion of Object and Numerical columns to Categorical Columns\ncategorical_columns = ['NAME_CONTRACT_TYPE','CODE_GENDER','NAME_TYPE_SUITE','NAME_INCOME_TYPE','NAME_EDUCATION_TYPE',\n                       'NAME_FAMILY_STATUS','NAME_HOUSING_TYPE','OCCUPATION_TYPE','WEEKDAY_APPR_PROCESS_START',\n                       'ORGANIZATION_TYPE','FLAG_OWN_CAR','FLAG_OWN_REALTY','LIVE_CITY_NOT_WORK_CITY',\n                       'REG_CITY_NOT_LIVE_CITY','REG_CITY_NOT_WORK_CITY','REG_REGION_NOT_WORK_REGION',\n                       'LIVE_REGION_NOT_WORK_REGION','REGION_RATING_CLIENT','WEEKDAY_APPR_PROCESS_START',\n                       'REGION_RATING_CLIENT_W_CITY'\n                      ]\nfor col in categorical_columns:\n    applicationDF[col] =pd.Categorical(applicationDF[col])","8e26563f":"# inspecting the column types if the above conversion is reflected\napplicationDF.info()","1ab13014":"#Checking the number of unique values each column possess to identify categorical columns\npreviousDF.nunique().sort_values() ","b4c82f41":"# inspecting the column types if the above conversion is reflected\npreviousDF.info()","b6a80c44":"#Converting negative days to positive days \npreviousDF['DAYS_DECISION'] = abs(previousDF['DAYS_DECISION'])","533daf45":"#age group calculation e.g. 388 will be grouped as 300-400\npreviousDF['DAYS_DECISION_GROUP'] = (previousDF['DAYS_DECISION']-(previousDF['DAYS_DECISION'] % 400)).astype(str)+'-'+ ((previousDF['DAYS_DECISION'] - (previousDF['DAYS_DECISION'] % 400)) + (previousDF['DAYS_DECISION'] % 400) + (400 - (previousDF['DAYS_DECISION'] % 400))).astype(str)\n","4af9750f":"previousDF['DAYS_DECISION_GROUP'].value_counts(normalize=True)*100","10a2404a":"#Converting Categorical columns from Object to categorical \nCatgorical_col_p = ['NAME_CASH_LOAN_PURPOSE','NAME_CONTRACT_STATUS','NAME_PAYMENT_TYPE',\n                    'CODE_REJECT_REASON','NAME_CLIENT_TYPE','NAME_GOODS_CATEGORY','NAME_PORTFOLIO',\n                   'NAME_PRODUCT_TYPE','CHANNEL_TYPE','NAME_SELLER_INDUSTRY','NAME_YIELD_GROUP','PRODUCT_COMBINATION',\n                    'NAME_CONTRACT_TYPE','DAYS_DECISION_GROUP']\n\nfor col in Catgorical_col_p:\n    previousDF[col] =pd.Categorical(previousDF[col])","9d7042fd":"# inspecting the column types after conversion\npreviousDF.info()","37b15a4c":"# checking the null value % of each column in applicationDF dataframe\nround(applicationDF.isnull().sum() \/ applicationDF.shape[0] * 100.00,2)\n","24037bf4":"applicationDF['NAME_TYPE_SUITE'].describe()","9ea3515a":"applicationDF['NAME_TYPE_SUITE'].fillna((applicationDF['NAME_TYPE_SUITE'].mode()[0]),inplace = True)","2e331f4a":"\napplicationDF['OCCUPATION_TYPE'] = applicationDF['OCCUPATION_TYPE'].cat.add_categories('Unknown')\napplicationDF['OCCUPATION_TYPE'].fillna('Unknown', inplace =True) ","0bd7bab0":"applicationDF[['AMT_REQ_CREDIT_BUREAU_HOUR','AMT_REQ_CREDIT_BUREAU_DAY',\n               'AMT_REQ_CREDIT_BUREAU_WEEK','AMT_REQ_CREDIT_BUREAU_MON',\n               'AMT_REQ_CREDIT_BUREAU_QRT','AMT_REQ_CREDIT_BUREAU_YEAR']].describe()","63e542b3":"amount = ['AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_DAY','AMT_REQ_CREDIT_BUREAU_WEEK','AMT_REQ_CREDIT_BUREAU_MON',\n         'AMT_REQ_CREDIT_BUREAU_QRT','AMT_REQ_CREDIT_BUREAU_YEAR']\n\nfor col in amount:\n    applicationDF[col].fillna(applicationDF[col].median(),inplace = True)","d970b917":"# checking the null value % of each column in previousDF dataframe\nround(applicationDF.isnull().sum() \/ previousDF.shape[0] * 100.00,2)","b695b142":"# checking the null value % of each column in previousDF dataframe\nround(previousDF.isnull().sum() \/ previousDF.shape[0] * 100.00,2)","6e35b9b0":"plt.figure(figsize=(6,6))\nsns.kdeplot(previousDF['AMT_ANNUITY'])\nplt.show()","01ff8d38":"previousDF['AMT_ANNUITY'].fillna(previousDF['AMT_ANNUITY'].median(),inplace = True)","cdece985":"plt.figure(figsize=(6,6))\nsns.kdeplot(previousDF['AMT_GOODS_PRICE'][pd.notnull(previousDF['AMT_GOODS_PRICE'])])\nplt.show()","0e708678":"statsDF = pd.DataFrame() # new dataframe with columns imputed with mode, median and mean\nstatsDF['AMT_GOODS_PRICE_mode'] = previousDF['AMT_GOODS_PRICE'].fillna(previousDF['AMT_GOODS_PRICE'].mode()[0])\nstatsDF['AMT_GOODS_PRICE_median'] = previousDF['AMT_GOODS_PRICE'].fillna(previousDF['AMT_GOODS_PRICE'].median())\nstatsDF['AMT_GOODS_PRICE_mean'] = previousDF['AMT_GOODS_PRICE'].fillna(previousDF['AMT_GOODS_PRICE'].mean())\n\ncols = ['AMT_GOODS_PRICE_mode', 'AMT_GOODS_PRICE_median','AMT_GOODS_PRICE_mean']\n\nplt.figure(figsize=(18,10))\nplt.suptitle('Distribution of Original data vs imputed data')\nplt.subplot(221)\nsns.distplot(previousDF['AMT_GOODS_PRICE'][pd.notnull(previousDF['AMT_GOODS_PRICE'])]);\nfor i in enumerate(cols): \n    plt.subplot(2,2,i[0]+2)\n    sns.distplot(statsDF[i[1]])","1a2191b5":"previousDF['AMT_GOODS_PRICE'].fillna(previousDF['AMT_GOODS_PRICE'].mode()[0], inplace=True)","ccd055dd":"previousDF.loc[previousDF['CNT_PAYMENT'].isnull(),'NAME_CONTRACT_STATUS'].value_counts()","c6623983":"previousDF['CNT_PAYMENT'].fillna(0,inplace = True)","61d4b7d5":"# checking the null value % of each column in previousDF dataframe\nround(previousDF.isnull().sum() \/ previousDF.shape[0] * 100.00,2)","cf48891e":"plt.figure(figsize=(22,10))\n\napp_outlier_col_1 = ['AMT_ANNUITY','AMT_INCOME_TOTAL','AMT_CREDIT','AMT_GOODS_PRICE','DAYS_EMPLOYED']\napp_outlier_col_2 = ['CNT_CHILDREN','DAYS_BIRTH']\nfor i in enumerate(app_outlier_col_1):\n    plt.subplot(2,4,i[0]+1)\n    sns.boxplot(y=applicationDF[i[1]])\n    plt.title(i[1])\n    plt.ylabel(\"\")\n\nfor i in enumerate(app_outlier_col_2):\n    plt.subplot(2,4,i[0]+6)\n    sns.boxplot(y=applicationDF[i[1]])\n    plt.title(i[1])\n    plt.ylabel(\"\")","da6a759c":"applicationDF[['AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_CREDIT', 'AMT_GOODS_PRICE', 'DAYS_BIRTH','CNT_CHILDREN','DAYS_EMPLOYED']].describe()","62485e0a":"plt.figure(figsize=(22,8))\n\nprev_outlier_col_1 = ['AMT_ANNUITY','AMT_APPLICATION','AMT_CREDIT','AMT_GOODS_PRICE','SELLERPLACE_AREA']\nprev_outlier_col_2 = ['SK_ID_CURR','DAYS_DECISION','CNT_PAYMENT']\nfor i in enumerate(prev_outlier_col_1):\n    plt.subplot(2,4,i[0]+1)\n    sns.boxplot(y=previousDF[i[1]])\n    plt.title(i[1])\n    plt.ylabel(\"\")\n\nfor i in enumerate(prev_outlier_col_2):\n    plt.subplot(2,4,i[0]+6)\n    sns.boxplot(y=previousDF[i[1]])\n    plt.title(i[1])\n    plt.ylabel(\"\") ","a69884d0":"previousDF[['AMT_ANNUITY', 'AMT_APPLICATION', 'AMT_CREDIT', 'AMT_GOODS_PRICE', 'SELLERPLACE_AREA','CNT_PAYMENT','DAYS_DECISION']].describe()","dec1233c":"Imbalance = applicationDF[\"TARGET\"].value_counts().reset_index()\n\nplt.figure(figsize=(10,4))\nx= ['Repayer','Defaulter']\nsns.barplot(x,\"TARGET\",data = Imbalance,palette= ['g','r'])\nplt.xlabel(\"Loan Repayment Status\")\nplt.ylabel(\"Count of Repayers & Defaulters\")\nplt.title(\"Imbalance Plotting\")\nplt.show()","1b6f8f1f":"count_0 = Imbalance.iloc[0][\"TARGET\"]\ncount_1 = Imbalance.iloc[1][\"TARGET\"]\ncount_0_perc = round(count_0\/(count_0+count_1)*100,2)\ncount_1_perc = round(count_1\/(count_0+count_1)*100,2)\n\nprint('Ratios of imbalance in percentage with respect to Repayer and Defaulter datas are: %.2f and %.2f'%(count_0_perc,count_1_perc))\nprint('Ratios of imbalance in relative with respect to Repayer and Defaulter datas is %.2f : 1 (approx)'%(count_0\/count_1))","38517d72":"# function for plotting repetitive countplots in univariate categorical analysis on applicationDF\n# This function will create two subplots: \n# 1. Count plot of categorical column w.r.t TARGET; \n# 2. Percentage of defaulters within column\n\ndef univariate_categorical(feature,ylog=False,label_rotation=False,horizontal_layout=True):\n    temp = applicationDF[feature].value_counts()\n    df1 = pd.DataFrame({feature: temp.index,'Number of contracts': temp.values})\n\n    # Calculate the percentage of target=1 per category value\n    cat_perc = applicationDF[[feature, 'TARGET']].groupby([feature],as_index=False).mean()\n    cat_perc[\"TARGET\"] = cat_perc[\"TARGET\"]*100\n    cat_perc.sort_values(by='TARGET', ascending=False, inplace=True)\n    \n    if(horizontal_layout):\n        fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12,6))\n    else:\n        fig, (ax1, ax2) = plt.subplots(nrows=2, figsize=(20,24))\n        \n    # 1. Subplot 1: Count plot of categorical column\n    # sns.set_palette(\"Set2\")\n    s = sns.countplot(ax=ax1, \n                    x = feature, \n                    data=applicationDF,\n                    hue =\"TARGET\",\n                    order=cat_perc[feature],\n                    palette=['g','r'])\n    \n    # Define common styling\n    ax1.set_title(feature, fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'}) \n    ax1.legend(['Repayer','Defaulter'])\n    \n    # If the plot is not readable, use the log scale.\n    if ylog:\n        ax1.set_yscale('log')\n        ax1.set_ylabel(\"Count (log)\",fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'})   \n    \n    \n    if(label_rotation):\n        s.set_xticklabels(s.get_xticklabels(),rotation=90)\n    \n    # 2. Subplot 2: Percentage of defaulters within the categorical column\n    s = sns.barplot(ax=ax2, \n                    x = feature, \n                    y='TARGET', \n                    order=cat_perc[feature], \n                    data=cat_perc,\n                    palette='Set2')\n    \n    if(label_rotation):\n        s.set_xticklabels(s.get_xticklabels(),rotation=90)\n    plt.ylabel('Percent of Defaulters [%]', fontsize=10)\n    plt.tick_params(axis='both', which='major', labelsize=10)\n    ax2.set_title(feature + \" Defaulter %\", fontdict={'fontsize' : 15, 'fontweight' : 5, 'color' : 'Blue'}) \n\n    plt.show();","c6cefa92":"# function for plotting repetitive countplots in bivariate categorical analysis\n\ndef bivariate_bar(x,y,df,hue,figsize):\n    \n    plt.figure(figsize=figsize)\n    sns.barplot(x=x,\n                  y=y,\n                  data=df, \n                  hue=hue, \n                  palette =['g','r'])     \n        \n    # Defining aesthetics of Labels and Title of the plot using style dictionaries\n    plt.xlabel(x,fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'})    \n    plt.ylabel(y,fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'})    \n    plt.title(col, fontdict={'fontsize' : 15, 'fontweight' : 5, 'color' : 'Blue'}) \n    plt.xticks(rotation=90, ha='right')\n    plt.legend(labels = ['Repayer','Defaulter'])\n    plt.show()","ec7c4464":"# function for plotting repetitive rel plots in bivaritae numerical analysis on applicationDF\n\ndef bivariate_rel(x,y,data, hue, kind, palette, legend,figsize):\n    \n    plt.figure(figsize=figsize)\n    sns.relplot(x=x, \n                y=y, \n                data=applicationDF, \n                hue=\"TARGET\",\n                kind=kind,\n                palette = ['g','r'],\n                legend = False)\n    plt.legend(['Repayer','Defaulter'])\n    plt.xticks(rotation=90, ha='right')\n    plt.show()","1de6a0ea":"#function for plotting repetitive countplots in univariate categorical analysis on the merged df\n\ndef univariate_merged(col,df,hue,palette,ylog,figsize):\n    plt.figure(figsize=figsize)\n    ax=sns.countplot(x=col, \n                  data=df,\n                  hue= hue,\n                  palette= palette,\n                  order=df[col].value_counts().index)\n    \n\n    if ylog:\n        plt.yscale('log')\n        plt.ylabel(\"Count (log)\",fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'})     \n    else:\n        plt.ylabel(\"Count\",fontdict={'fontsize' : 10, 'fontweight' : 3, 'color' : 'Blue'})       \n\n    plt.title(col , fontdict={'fontsize' : 15, 'fontweight' : 5, 'color' : 'Blue'}) \n    plt.legend(loc = \"upper right\")\n    plt.xticks(rotation=90, ha='right')\n    \n    plt.show()","bc985e7c":"# Function to plot point plots on merged dataframe\n\ndef merged_pointplot(x,y):\n    plt.figure(figsize=(8,4))\n    sns.pointplot(x=x, \n                  y=y, \n                  hue=\"TARGET\", \n                  data=loan_process_df,\n                  palette =['g','r'])\n   # plt.legend(['Repayer','Defaulter'])","17c4b573":"# Checking the contract type based on loan repayment status\nunivariate_categorical('NAME_CONTRACT_TYPE',True)","714bd3d0":"# Checking the type of Gender on loan repayment status\nunivariate_categorical('CODE_GENDER')","ada687b8":"# Checking if owning a car is related to loan repayment status\nunivariate_categorical('FLAG_OWN_CAR')","1665eb6f":"# Checking if owning a realty is related to loan repayment status\nunivariate_categorical('FLAG_OWN_REALTY')","2d9a24ca":"# Analyzing Housing Type based on loan repayment status\nunivariate_categorical(\"NAME_HOUSING_TYPE\",True,True,True)","20a17c22":"# Analyzing Family status based on loan repayment status\nunivariate_categorical(\"NAME_FAMILY_STATUS\",False,True,True)","7a0b5eb7":"# Analyzing Education Type based on loan repayment status\nunivariate_categorical(\"NAME_EDUCATION_TYPE\",True,True,True)","7b7bb6f8":"# Analyzing Income Type based on loan repayment status\nunivariate_categorical(\"NAME_INCOME_TYPE\",True,True,False)","101b73ea":"# Analyzing Region rating where applicant lives based on loan repayment status\nunivariate_categorical(\"REGION_RATING_CLIENT\",False,False,True)","011470a4":"# Analyzing Occupation Type where applicant lives based on loan repayment status\nunivariate_categorical(\"OCCUPATION_TYPE\",False,True,False)","726401d2":"# Checking Loan repayment status based on Organization type\nunivariate_categorical(\"ORGANIZATION_TYPE\",True,True,False)","152c8acb":"# Analyzing Flag_Doc_3 submission status based on loan repayment status\nunivariate_categorical(\"FLAG_DOCUMENT_3\",False,False,True)","f6165f79":"# Analyzing Age Group based on loan repayment status\nunivariate_categorical(\"AGE_GROUP\",False,False,True)","7922fc05":"# Analyzing Employment_Year based on loan repayment status\nunivariate_categorical(\"EMPLOYMENT_YEAR\",False,False,True)","0b733269":"# Analyzing Amount_Credit based on loan repayment status\nunivariate_categorical(\"AMT_CREDIT_RANGE\",False,False,False)","f9f1c742":"# Analyzing Amount_Income Range based on loan repayment status\nunivariate_categorical(\"AMT_INCOME_RANGE\",False,False,False)","ddec7834":"# Analyzing Number of children based on loan repayment status\nunivariate_categorical(\"CNT_CHILDREN\",True)","04a94c16":"# Analyzing Number of family members based on loan repayment status\nunivariate_categorical(\"CNT_FAM_MEMBERS\",True, False, False)","3eda8a33":"applicationDF.groupby('NAME_INCOME_TYPE')['AMT_INCOME_TOTAL'].describe()","c04acf9d":"# Income type vs Income Amount Range\nbivariate_bar(\"NAME_INCOME_TYPE\",\"AMT_INCOME_TOTAL\",applicationDF,\"TARGET\",(18,10))","f2a868a4":"applicationDF.columns","96f8d5bb":"# Bifurcating the applicationDF dataframe based on Target value 0 and 1 for correlation and other analysis\ncols_for_correlation = ['NAME_CONTRACT_TYPE', 'CODE_GENDER', 'FLAG_OWN_CAR', 'FLAG_OWN_REALTY', \n                        'CNT_CHILDREN', 'AMT_INCOME_TOTAL', 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE', \n                        'NAME_TYPE_SUITE', 'NAME_INCOME_TYPE', 'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS',\n                        'NAME_HOUSING_TYPE', 'REGION_POPULATION_RELATIVE', 'DAYS_BIRTH', 'DAYS_EMPLOYED', \n                        'DAYS_REGISTRATION', 'DAYS_ID_PUBLISH', 'OCCUPATION_TYPE', 'CNT_FAM_MEMBERS', 'REGION_RATING_CLIENT',\n                        'REGION_RATING_CLIENT_W_CITY', 'WEEKDAY_APPR_PROCESS_START', 'HOUR_APPR_PROCESS_START',\n                        'REG_REGION_NOT_LIVE_REGION', 'REG_REGION_NOT_WORK_REGION', 'LIVE_REGION_NOT_WORK_REGION', \n                        'REG_CITY_NOT_LIVE_CITY', 'REG_CITY_NOT_WORK_CITY', 'LIVE_CITY_NOT_WORK_CITY', 'ORGANIZATION_TYPE',\n                        'OBS_60_CNT_SOCIAL_CIRCLE', 'DEF_60_CNT_SOCIAL_CIRCLE', 'DAYS_LAST_PHONE_CHANGE', 'FLAG_DOCUMENT_3', \n                        'AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_WEEK',\n                        'AMT_REQ_CREDIT_BUREAU_MON', 'AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR']\n\n\nRepayer_df = applicationDF.loc[applicationDF['TARGET']==0, cols_for_correlation] # Repayers\nDefaulter_df = applicationDF.loc[applicationDF['TARGET']==1, cols_for_correlation] # Defaulters","2ec787ba":"# Getting the top 10 correlation for the Repayers data\ncorr_repayer = Repayer_df.corr()\ncorr_repayer = corr_repayer.where(np.triu(np.ones(corr_repayer.shape),k=1).astype(np.bool))\ncorr_df_repayer = corr_repayer.unstack().reset_index()\ncorr_df_repayer.columns =['VAR1','VAR2','Correlation']\ncorr_df_repayer.dropna(subset = [\"Correlation\"], inplace = True)\ncorr_df_repayer[\"Correlation\"]=corr_df_repayer[\"Correlation\"].abs() \ncorr_df_repayer.sort_values(by='Correlation', ascending=False, inplace=True) \ncorr_df_repayer.head(10)","60feafaf":"fig = plt.figure(figsize=(12,12))\nax = sns.heatmap(Repayer_df.corr(), cmap=\"RdYlGn\",annot=False,linewidth =1)","dfdaf491":"# Getting the top 10 correlation for the Defaulter data\ncorr_Defaulter = Defaulter_df.corr()\ncorr_Defaulter = corr_Defaulter.where(np.triu(np.ones(corr_Defaulter.shape),k=1).astype(np.bool))\ncorr_df_Defaulter = corr_Defaulter.unstack().reset_index()\ncorr_df_Defaulter.columns =['VAR1','VAR2','Correlation']\ncorr_df_Defaulter.dropna(subset = [\"Correlation\"], inplace = True)\ncorr_df_Defaulter[\"Correlation\"]=corr_df_Defaulter[\"Correlation\"].abs()\ncorr_df_Defaulter.sort_values(by='Correlation', ascending=False, inplace=True)\ncorr_df_Defaulter.head(10)","7772586d":"fig = plt.figure(figsize=(12,12))\nax = sns.heatmap(Defaulter_df.corr(), cmap=\"RdYlGn\",annot=False,linewidth =1)","562277cf":"# Plotting the numerical columns related to amount as distribution plot to see density\namount = applicationDF[[ 'AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY', 'AMT_GOODS_PRICE']]\n\nfig = plt.figure(figsize=(16,12))\n\nfor i in enumerate(amount):\n    plt.subplot(2,2,i[0]+1)\n    sns.distplot(Defaulter_df[i[1]], hist=False, color='r',label =\"Defaulter\")\n    sns.distplot(Repayer_df[i[1]], hist=False, color='g', label =\"Repayer\")\n    plt.title(i[1], fontdict={'fontsize' : 15, 'fontweight' : 5, 'color' : 'Blue'}) \n    \nplt.legend()\n\nplt.show() ","380de82b":"# Checking the relationship between Goods price and credit and comparing with loan repayment staus\nbivariate_rel('AMT_GOODS_PRICE','AMT_CREDIT',applicationDF,\"TARGET\", \"line\", ['g','r'], False,(15,6))","d3f04c69":"# Plotting pairplot between amount variable to draw reference against loan repayment status\namount = applicationDF[[ 'AMT_INCOME_TOTAL','AMT_CREDIT',\n                         'AMT_ANNUITY', 'AMT_GOODS_PRICE','TARGET']]\namount = amount[(amount[\"AMT_GOODS_PRICE\"].notnull()) & (amount[\"AMT_ANNUITY\"].notnull())]\nax= sns.pairplot(amount,hue=\"TARGET\",palette=[\"g\",\"r\"])\nax.fig.legend(labels=['Repayer','Defaulter'])\nplt.show()","10b5b85b":"#merge both the dataframe on SK_ID_CURR with Inner Joins\nloan_process_df = pd.merge(applicationDF, previousDF, how='inner', on='SK_ID_CURR')\nloan_process_df.head()","4ed1697f":"#Checking the details of the merged dataframe\nloan_process_df.shape","69861fde":"# Checking the element count of the dataframe\nloan_process_df.size","f60e80a7":"# checking the columns and column types of the dataframe\nloan_process_df.info()","53ba0b49":"# Checking merged dataframe numerical columns statistics\nloan_process_df.describe()","14e9e1f0":"# Bifurcating the applicationDF dataframe based on Target value 0 and 1 for correlation and other analysis\n\nL0 = loan_process_df[loan_process_df['TARGET']==0] # Repayers\nL1 = loan_process_df[loan_process_df['TARGET']==1] # Defaulters","6afd6d5f":"univariate_merged(\"NAME_CASH_LOAN_PURPOSE\",L0,\"NAME_CONTRACT_STATUS\",[\"#548235\",\"#FF0000\",\"#0070C0\",\"#FFFF00\"],True,(18,7))\n\nunivariate_merged(\"NAME_CASH_LOAN_PURPOSE\",L1,\"NAME_CONTRACT_STATUS\",[\"#548235\",\"#FF0000\",\"#0070C0\",\"#FFFF00\"],True,(18,7))","7ea02536":"# Checking the Contract Status based on loan repayment status and whether there is any business loss or financial loss\nunivariate_merged(\"NAME_CONTRACT_STATUS\",loan_process_df,\"TARGET\",['g','r'],False,(12,8))\ng = loan_process_df.groupby(\"NAME_CONTRACT_STATUS\")[\"TARGET\"]\ndf1 = pd.concat([g.value_counts(),round(g.value_counts(normalize=True).mul(100),2)],axis=1, keys=('Counts','Percentage'))\ndf1['Percentage'] = df1['Percentage'].astype(str) +\"%\" # adding percentage symbol in the results for understanding\nprint (df1)","fbb3128b":"# plotting the relationship between income total and contact status\nmerged_pointplot(\"NAME_CONTRACT_STATUS\",'AMT_INCOME_TOTAL')","ef85028e":"# plotting the relationship between people who defaulted in last 60 days being in client's social circle and contact status\nmerged_pointplot(\"NAME_CONTRACT_STATUS\",'DEF_60_CNT_SOCIAL_CIRCLE')","b678e0e3":"<a id=\"merge\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            6. Merged Dataframes Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","e00e7c32":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>Correlating factors amongst repayers:<br>\n            Credit amount is highly correlated with\n            <ul>                \n                <li> amount of goods price<\/li>\n                <li> loan annuity<\/li>\n                <li> total income<\/li>\n        <\/ul>\n        We can also see that repayers have high correlation in number of days employed.\n    <\/span>    \n<\/div>","2db8a8c0":"<p>\n    <span style='font-family:Georgia'>\n           Impute numerical variables with the median as there are no outliers that can be seen from results of describe() and mean() returns decimal values and these columns represent number of enquiries made which cannot be decimal:\n    <\/span>\n<\/p>\n    ","ca652f86":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>The above graph shows that in most of the loan application cases, clients who applied for loans has not submitted FLAG_DOCUMENT_X except FLAG_DOCUMENT_3. Thus, Except for FLAG_DOCUMENT_3, we can delete rest of the columns. Data shows if borrower has submitted FLAG_DOCUMENT_3 then there is a less chance of defaulting the loan.\n    <\/span>    \n<\/div>","d4910a60":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Decisive Factor whether an applicant will be Repayer: <\/b> \n        <ol>\n            <li>NAME_EDUCATION_TYPE: Academic degree has less defaults. <\/li>\n            <li>NAME_INCOME_TYPE: Student and Businessmen have no defaults.<\/li>\n            <li>REGION_RATING_CLIENT: RATING 1 is safer.<\/li>\n            <li>ORGANIZATION_TYPE: Clients with Trade Type 4 and 5 and Industry type 8 have defaulted less than 3%<\/li>\n            <li>DAYS_BIRTH: People above age of 50 have low probability of defaulting<\/li>\n            <li>DAYS_EMPLOYED: Clients with 40+ year experience having less than 1% default rate<\/li>\n            <li>AMT_INCOME_TOTAL:Applicant with Income more than 700,000 are less likely to default<\/li>\n            <li>NAME_CASH_LOAN_PURPOSE: Loans bought for Hobby, Buying garage are being repayed mostly.<\/li>\n            <li>CNT_CHILDREN: People with zero to two children tend to repay the loans.<\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","4f2489e3":"<p>\n    <span style='font-family:Georgia'>\n           Following are the common functions customized to perform uniform anaysis that is called for all plots:\n    <\/span>\n<\/p>","01864783":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li> 90% of the previously cancelled client have actually repayed the loan. Revisiting the interest rates would increase business opoortunity for these clients<\/li>\n            <li> 88% of the clients who have been previously refused a loan has payed back the loan in current case.<\/li>\n            <li> Refual reason should be recorded for further analysis as these clients would turn into potential repaying customer. <\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","bbca457a":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.4.4 Numerical Bivariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h4>","bc5e53aa":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>The original distribution is closer with the distribution of data imputed with mode in this case\n    <\/span>    \n<\/div>","cafff060":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>There is a single peak at the left side of the distribution and it indicates the presence of outliers and hence imputing with mean would not be the right approach and hence imputing with median.\n    <\/span>    \n<\/div>","f216a00f":"<a id=\"analysis\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            5. Data Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","addbe8c3":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Most of the applicants do not have children<\/li>\n            <li>Very few clients have more than 3 children.<\/li>\n            <li>Client who have more than 4 children has a very high default rate with child count 9 and 11 showing 100% default rate<\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","69c3a0af":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy for previousDF: <\/b> \n        <ul>\n            <li>Convert DAYS_DECISION from negative to positive values and create categorical bins columns.<\/li>\n            <li>Convert loan purpose and few other columns to categorical.<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","7b519632":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>More than 80% of the loan provided are for amount less than 900,000<\/li>\n            <li>People who get loan for 300-600k tend to default more than others. <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","76347b05":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.3 Contact Parameters\n            <\/span>   \n        <\/font>    \n<\/h4>","8e900a7f":"<a id=\"libraries\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            2. Getting Jupyter Ready:\n            <\/span>   \n        <\/font>    \n<\/h2>","f2f7a741":"<p>\n    <span style='font-family:Georgia'>\n           There are several peaks along the distribution. Let's impute using the mode, mean and median and see if the distribution is still about the same.\n    <\/span>\n<\/p>","14670493":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>Family member follows the same trend as children where having more family members increases the risk of defaulting\n    <\/span>    \n<\/div>","863baec3":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy for applicationDF: <\/b> \n        <ul>\n            <li>To impute null values in categorical variables which has lower null percentage, mode() is used to impute the most frequent items.<\/li>\n            <li>To impute null values in categorical variables which has higher null percentage, a new category is created.<\/li>\n            <li>To impute null values in numerical variables which has lower null percentage, median() is used as <\/li>\n            <ul>\n                <li>There are no outliers in the columns<\/li>\n                <li>Mean returned decimal values and median returned whole numbers and the columns were number of requests<\/li>\n            <\/ul>        \n        <\/ul>\n    <\/span>    \n<\/div>","0016bdc3":"<a id=\"dconv\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             4.5 Data Type Conversion\n            <\/span>   \n        <\/font>    \n<\/h3>","9cc21cde":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.2 Flag Document\n            <\/span>   \n        <\/font>    \n<\/h4>","a4db8805":"<a id=\"input\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.1 Importing the input files\n            <\/span>   \n        <\/font>    \n<\/h3>","b4022278":"<p>\n    <span style='font-family:Georgia'>\n        After analysing the datasets, there are few attributes of a client with which the bank would be able to identify if they will repay the loan or not. The analysis is consised as below with the contributing factors and categorization:\n    <\/span>\n<\/p>","80173fbd":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> <br>Contract type: Revolving loans are just a small fraction (10%) from the total number of loans; in the same time, a larger amount of Revolving loans, comparing with their frequency, are not repaid. \n    <\/span>    \n<\/div>","60363382":"<p>\n    <span style='font-family:Georgia'>\n           Impute with median as mean has decimals and this is number of requests\n    <\/span>\n<\/p>","d0d1f36a":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>Based on the above Heatmap, we can see there is almost no correlation between EXT_SOURCE_X columns and target column, thus we can drop these columns. EXT_SOURCE_1 has 56% null values, where as EXT_SOURCE_3 has close to 20% null values\n    <\/span>    \n<\/div>","f267d967":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br> \n        After deleting unnecessary columns, there are 22 columns remaining in applicationDF\n    <\/span>    \n<\/div>","27aa571d":"<a id=\"stdval\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             4.4 Standardize Values\n            <\/span>   \n        <\/font>    \n<\/h3>","0aae0848":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>When the credit amount goes beyond 3M, there is an increase in defaulters.\n    <\/span>    \n<\/div>","d4e74d84":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>More than 50% loan applicants  have income amount in the range of 100K-200K. Almost 92% loan applicants have income less than 300K\n    <\/span>    \n<\/div>","4afcd5bd":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>There are many columns in applicationDF dataframe where missing value is more than 40%. Let's plot the columns vs missing value % with 40% being the cut-off marks\n    <\/span>    \n<\/div>","50526291":"<a id=\"inspect\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.2 Inspect Data Frames\n            <\/span>   \n        <\/font>    \n<\/h3>","78aa2aac":"<a id=\"null\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.1 Null Value Calculation\n            <\/span>   \n        <\/font>    \n<\/h3>","90995953":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Other suggestions: <\/b>\n        <ul>\n            <li>90% of the previously cancelled client have actually repayed the loan. Record the reason for cancellation which might help the bank to determine and negotiate terms with these repaying customers in future for increase business opportunity. <\/li>\n            <li>88% of the clients who were refused by bank for loan earlier have now turned into a repaying client. Hence documenting the reason for rejection could mitigate the business loss and these clients could be contacted for further loans.<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","498f1214":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.1 applicationDF Missing values\n            <\/span>   \n        <\/font>    \n<\/h4>","2bbcb34e":"**<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>More than 55% of the loan applicants have work experience within 0-5 years and almost 80% of them have less than 10 years of work experience\n    <\/span>    \n<\/div>","76ce7ec5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>Based on the above Matrix, it is evidednt that the dataset has many missing values. Let's check for each column what is the % of missing values\n    <\/span>    \n<\/div>","3434e2d8":"<a id=\"clean\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            4. Data Cleaning & Manipulation\n            <\/span>   \n        <\/font>    \n<\/h2>","6c637f0d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> It can be seen that in previous application data\n        <ol>\n            <li>AMT_ANNUITY, AMT_APPLICATION, AMT_CREDIT, AMT_GOODS_PRICE, SELLERPLACE_AREA have huge number of outliers.<\/li>\n            <li>CNT_PAYMENT has few outlier values.<\/li>\n            <li>SK_ID_CURR is an ID column and hence no outliers.<\/li>\n            <li>DAYS_DECISION has little number of outliers indicating that these previous applications decisions were taken long back.<\/li>\n        <\/ol>        \n    <\/span>    \n<\/div>\n<p>\n    <span style='font-family:Georgia'>\n           We can see the stats for these columns below as well.\n    <\/span>\n<\/p>","2f37cb82":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.1 EXT_SOURCE_X\n            <\/span>   \n        <\/font>    \n<\/h4>","525a8c55":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li> Most no of loans are given for goods price below 10 lakhs <\/li>\n            <li> Most people pay annuity below 50000 for the credit loan<\/li>\n            <li> Credit amount of the loan is mostly less then 10 lakhs<\/li>\n            <li> The repayers and defaulters distribution overlap in all the plots and hence we cannot use any of these variables in isolation to make a decision<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","d0666908":"<p>\n    <span style='font-family:Georgia'>\n           Finding outlier information in applicationDF\n    <\/span>\n<\/p>","f32ddcd9":"<a id=\"intro\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            1. Introduction:\n            <\/span>   \n        <\/font>    \n<\/h2>","33e1f0d4":"<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.3 Adjust Jupyer Views:\n            <\/span>   \n        <\/font>    \n<\/h3>","5f48cef9":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>Total of 11 columns are there which have more than 40% null values. These columns can be deleted. Before deleting these columns, let's review if there are more columns which can be dropped or not[](http:\/\/)\n    <\/span>    \n<\/div>","a93eef76":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br> We still have few null values in the columns: AMT_GOODS_PRICE, OBS_30_CNT_SOCIAL_CIRCLE, DEF_30_CNT_SOCIAL_CIRCLE, OBS_60_CNT_SOCIAL_CIRCLE, DEF_60_CNT_SOCIAL_CIRCLE. We can ignore as this percentage is very less.\n    <\/span>    \n<\/div>","62022962":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>From the plot we can see the columns in which percentage of null values more than 40% are marked above the red line and the columns which have less than 40 % null values below the red line. Let's check the columns which has more than 40% missing values\n    <\/span>    \n<\/div>","3bef81f3":"<a id=\"import\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            3. Reading & Understanding the data\n            <\/span>   \n        <\/font>    \n<\/h2>","58ce0876":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.4.1 Bifurcating the applicationDF dataframe based on Target value 0 and 1 for correlation and other analysis\n            <\/span>   \n        <\/font>    \n<\/h4>","bd854c76":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Organizations with highest percent of loans not repaid are Transport: type 3 (16%), Industry: type 13 (13.5%), Industry: type 8 (12.5%) and Restaurant (less than 12%). Self employed people have relative high defaulting rate, and thus should be avoided to be approved for loan or provide loan with higher interest rate to mitigate the risk of defaulting.<\/li>\n            <li>Most of the people application for loan are from Business Entity Type 3 <\/li>\n            <li>For a very high number of applications, Organization type information is unavailable(XNA)<\/li>\n        <\/ol>\n        It can be seen that following category of organization type has lesser defaulters thus safer for providing loans:\n        <ul>\n            <li>Trade Type 4 and 5<\/li>\n            <li>Industry type 8<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","f0089756":"<a id=\"catvar\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             5.3 Categorical Variables Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","cb238322":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Majority of people live in House\/apartment<\/li>\n            <li>People living in office apartments have lowest default rate<\/li>\n            <li>People living with parents (~11.5%) and living in rented apartments(>12%) have higher probability of defaulting <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","b87084bc":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>The clients who own real estate are more than double of the ones that don't own. But the defaulting rate of both categories are around the same (~8%). Thus there is no correlation between owning a reality and defaulting the loan.      \n    <\/span>    \n<\/div>","687bb621":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>There is no significant correlation between repayers and defaulters in terms of submitting document 3 as we see even if applicants have submitted the document, they have defaulted a slightly more (~9%) than who have not submitted the document (6%)\n    <\/span>    \n<\/div>","db09d0f6":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>Clients who own a car are half in number of the clients who dont own a car. But based on the percentage of deault, there is no correlation between owning a car and loan repayment as in both cases the default percentage is almost same.      \n    <\/span>    \n<\/div>","034c5920":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.4.3 Numerical Univariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h4>","1e9ed619":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>Total of 49 columns are there which have more than 40% null values.Seems like most of the columns with high missing values are related to different area sizes on apartment owned\/rented by the loan applicant\n    <\/span>    \n<\/div>","49bb9e17":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.3.2 Categorical Bi\/Multivariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h4>","dc9dbcc3":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy for applicationDF: <\/b> \n        <ul>\n            <li>Convert DAYS_DECISION,DAYS_EMPLOYED, DAYS_REGISTRATION,DAYS_ID_PUBLISH from negative to positive as days cannot be negative.<\/li>\n            <li>Convert DAYS_BIRTH from negative to positive values and calculate age and create categorical bins columns<\/li>\n            <li>Categorize the amount variables into bins<\/li>\n            <li>Convert region rating column and few other columns to categorical<\/li>\n        <\/ul>       \n    <\/span>    \n<\/div>","05dba93b":"<p>\n    <span style='font-family:Georgia'>\n           Impute AMT_ANNUITY with median as the distribution is greatly skewed:\n    <\/span>\n<\/p>","01c8beb5":"<a id=\"clean1\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.2 Analyze & Delete Unnecessary Columns in applicationDF\n            <\/span>   \n        <\/font>    \n<\/h3>","a46eb778":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b><br> \n        Clients who have average of 0.13 or higher DEF_60_CNT_SOCIAL_CIRCLE score tend to default more and hence client's social circle has to be analysed before providing the loan.\n    <\/span>    \n<\/div>","f317e088":"<p>\n    <span style='font-family:Georgia'>\n           Impute CNT_PAYMENT with 0 as the NAME_CONTRACT_STATUS for these indicate that most of these loans were not started:\n    <\/span>\n<\/p>","dc65bdb9":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b><br>\n        The point plot show that the people who have not used offer earlier have defaulted even when there average income is higher than others\n    <\/span>    \n<\/div>","00fb9204":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.2 previousDF Missing Values\n            <\/span>   \n        <\/font>    \n<\/h4>","90a19b3d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>We still have few null values in the PRODUCT_COMBINATION column. We can ignore as this percentage is very less.\n    <\/span>    \n<\/div>","c9b4ec4a":"<p>\n    <span style='font-family:Georgia'>\n           Impute categorical variable 'OCCUPATION_TYPE' which has higher null percentage(31.35%) with a new category as assigning to any existing category might influence the analysis:\n    <\/span>\n<\/p>\n\n    ","4773af95":"<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.2 Supress Warnings:\n            <\/span>   \n        <\/font>    \n<\/h3>","2f7aec3b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>There are many columns in previousDF dataframe where missing value is more than 40%. Let's plot the columns vs missing value % with 40% being the cut-off marks\n    <\/span>    \n<\/div>","2eeb0a59":"<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            Table of Contents:\n            <\/span>   \n        <\/font>    \n<\/h2>\n<span style='font-family:Georgia'>\n    <ol>\n        <li><a href='#intro'>Introduction<\/a><\/li>\n        <li><a href='#libraries'>Getting Jupyter Ready<\/a><\/li>\n        <li><a href='#import'>Reading & Understanding the data<\/a><\/li>\n        <ol>\n            <li><a href='#input'>Importing the input files<\/a><\/li>\n            <li><a href='#inspect'>Inspect Data Frames<\/a><\/li>\n        <\/ol>\n        <li><a href='#clean'>Data Cleaning & Manipulation<\/a><\/li>\n        <ol>\n            <li><a href='#null'>Null Value Calculation<\/a><\/li>\n            <li><a href='#clean1'>Analyze & Delete Unnecessary Columns in applicationDF<\/a><\/li>\n            <li><a href='#clean2'>Analyze & Delete Unnecessary Columns in previousDF<\/a><\/li>\n            <li><a href='#stdval'>Standardize Values<\/a><\/li>\n            <li><a href='#dconv'>Data Type Conversion<\/a><\/li>\n            <li><a href='#impute'>Null Value Data Imputation<\/a><\/li>\n            <li><a href='#outlier'>Identifying the outliers<\/a><\/li>\n        <\/ol>\n        <li><a href='#analysis'>Data Analysis<\/a><\/li>\n        <ol>\n            <li><a href='#imbalance'>Imbalance Analysis<\/a><\/li>\n            <li><a href='#pltfunc'>Plotting Functions<\/a><\/li>\n            <li><a href='#catvar'>Categorical Variables Analysis<\/a><\/li>\n            <li><a href='#numvar'>Numeric Variables Analysis<\/a><\/li>\n        <\/ol>\n        <li><a href='#merge'>Merged Dataframes Analysis<\/a><\/li>\n        <li><a href='#conclusion'>Conclusions<\/a><\/li>\n    <\/ol>\n<\/span>\n    ","78444bcc":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <br>It can be seen that business man's income is the highest and the estimated range with default 95% confidence level seem to indicate that the income of a business man could be in the range of slightly close to 4 lakhs and slightly above 10 lakhs\n    <\/span>    \n<\/div>","65fdafae":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br> \n        Total 76 columns can be deleted from applicationDF\n    <\/span>    \n<\/div>","69ad634c":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> <br>The number of female clients is almost double the number of male clients. Based on the percentage of defaulted credits, males have a higher chance of not returning their loans (~10%), comparing with women (~7%)  \n    <\/span>    \n<\/div>","60cd7f92":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy for applicationDF: <\/b> \n        <ul>\n            <li>To impute null values in numerical column, we analysed the loan status and assigned values.<\/li>\n            <li>To impute null values in continuous variables, we plotted the distribution of the columns and used <\/li>\n            <ul>\n                <li>median if the distribution is skewed<\/li>\n                <li>mode if the distribution pattern is preserved.<\/li>\n            <\/ul>        \n        <\/ul>\n    <\/span>    \n<\/div>","af029276":"<a id=\"impute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             4.6 Null Value Data Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","ec96435a":"<div class=\"alert alert-block alert-danger\">\n    <span style='font-family:Georgia'>\n        <b>Decisive Factor whether an applicant will be Defaulter: <\/b> \n        <ol>\n            <li>CODE_GENDER: Men are at relatively higher default rate<\/li>\n            <li>NAME_FAMILY_STATUS : People who have civil marriage or who are single default a lot. <\/li>\n            <li>NAME_EDUCATION_TYPE: People with Lower Secondary & Secondary education<\/li>\n            <li>NAME_INCOME_TYPE: Clients who are either at Maternity leave OR Unemployed default a lot.<\/li>\n            <li>REGION_RATING_CLIENT: People who live in Rating 3 has highest defaults.<\/li>\n            <li>OCCUPATION_TYPE: Avoid Low-skill Laborers, Drivers and Waiters\/barmen staff, Security staff, Laborers and Cooking staff as the default rate is huge.<\/li>\n            <li>ORGANIZATION_TYPE: Organizations with highest percent of loans not repaid are Transport: type 3 (16%), Industry: type 13 (13.5%), Industry: type 8 (12.5%) and Restaurant (less than 12%). Self-employed people have relative high defaulting rate, and thus should be avoided to be approved for loan or provide loan with higher interest rate to mitigate the risk of defaulting.<\/li>\n            <li>DAYS_BIRTH: Avoid young people who are in age group of 20-40 as they have higher probability of defaulting<\/li>\n            <li>DAYS_EMPLOYED: People who have less than 5 years of employment have high default rate.<\/li>\n            <li>CNT_CHILDREN & CNT_FAM_MEMBERS: Client who have children equal to or more than 9 default 100% and hence their applications are to be rejected.<\/li>\n            <li>AMT_GOODS_PRICE: When the credit amount goes beyond 3M, there is an increase in defaulters.<\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","e8081228":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Majority of the clients have Secondary \/ secondary special education, followed by clients with Higher education. Only a very small number having an academic degree<\/li>\n            <li>The Lower secondary category, although rare, have the largest rate of not returning the loan (11%). The people with Academic degree have less than 2% defaulting rate. <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","c47df30d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>Almost 37% loan applicatants have applied for a new loan within 0-400 days of previous loan decision\n    <\/span>    \n<\/div>","106e0d10":"<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.1 Import Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h3>","aabec6b4":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li> Credit amount is highly correlated with amount of goods price which is same as repayers. <\/li>\n            <li> But the loan annuity correlation with credit amount has slightly reduced in defaulters(0.75) when compared to repayers(0.77)<\/li>\n            <li> We can also see that repayers have high correlation in number of days employed(0.62) when compared to defaulters(0.58).<\/li>\n            <li> There is a severe drop in the correlation between total income of the client and the credit amount(0.038) amongst defaulters whereas it is 0.342 among repayers.<\/li>\n            <li> Days_birth and number of children correlation has reduced to 0.259 in defaulters when compared to 0.337 in repayers.<\/li>\n            <li> There is a slight increase in defaulted to observed count in social circle among defaulters(0.264) when compared to repayers(0.254)<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","842a754f":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy:<\/b> \n        <p>The data analysis flow has been planned in following way :<\/p>\n        <ul>\n            <li>Imbalance in Data<\/li>\n            <li>Categorical Data Analysis<\/li>\n            <ul>\n                <li>Categorical segmented Univariate Analysis<\/li>\n                <li>Categorical Bi\/Multivariate analysis<\/li>\n            <\/ul>\n            <li>Numeric Data Analysis<\/li>\n            <ul>\n                <li>Bi-furcation of databased based on TARGET data<\/li>\n                <li>Correlation Matrix<\/li>\n                <li>Numerical segmented Univariate Analysis<\/li>\n                <li>Numerical Bi\/Multivariate analysis<\/li>\n            <\/ul> \n        <\/ul>\n    <\/span>    \n<\/div>","cb989c19":"<p>\n    <span style='font-family:Georgia'>\n           Impute AMT_GOODS_PRICE with mode as the distribution is closely similar:\n    <\/span>\n<\/p>","1a07f631":"![](https:\/\/apps.tsn.go.tz\/public\/uploads\/fd2b657ba7ea5c49c5473dc452481cb0.png)","b155080e":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>People in the age group range 20-40 have higher probability of defaulting<\/li>\n            <li>People above age of 50 have low probability of defailting <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","3110e3b4":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>More Than 16% loan applicants have taken loan which amounts to more than 1M.\n    <\/span>    \n<\/div>","055eddfb":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>\n        Total 15 columns can be deleted from previousDF\n    <\/span>    \n<\/div>","e271f167":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Majority of the applicants have been employeed in between 0-5 years. The defaulting rating of this group is also the highest which is 10%<\/li>\n            <li>With increase of employment year, defaulting rate is gradually decreasing with people having 40+ year experience having less than 1% default rate <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","2fcc9b9e":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.4.2 Correlation between numeric variable\n            <\/span>   \n        <\/font>    \n<\/h4>","61c78d93":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>90% of the applications have Income total less than 300,000<\/li>\n            <li>Application with Income less than 300,000 has high probability of defaulting<\/li>\n            <li>Applicant with Income more than 700,000 are less likely to default <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","4f252ad5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>There is no correlation between flags of mobile phone, email etc with loan repayment; thus these columns can be deleted\n    <\/span>    \n<\/div>","adff4fc7":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li>Most of applicants for loans have income type as Working, followed by Commercial associate, Pensioner and State servant.<\/li>\n            <li>The applicants with the type of income Maternity leave have almost 40% ratio of not returning loans, followed by Unemployed (37%). The rest of types of incomes are under the average of 10% for not returning loans.<\/li>\n            <li>Student and Businessmen, though less in numbers do not have any default record. Thus these two category are <b>safest<\/b> for providing loan.<\/li>  \n        <\/ul>\n    <\/span>    \n<\/div>","1347660b":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             4.6.1 Imputing Null Values in applicationDF\n            <\/span>   \n        <\/font>    \n<\/h4>","136a944d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>Numeric columns are already in int64 and float64 format. Hence proceeding with other columns.\n    <\/span>    \n<\/div>","fe7a429d":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li> Loan purpose has high number of unknown values (XAP, XNA)<\/li>\n            <li> Loan taken for the purpose of Repairs seems to have highest default rate<\/li>\n            <li> A very high number application have been rejected by bank or refused by client which has purpose as repair or other. This shows that purpose repair is taken as high risk by bank and either they are rejected or bank offers very high loan interest rate which is not feasible by the clients, thus they refuse the loan.<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","fc9d1f8b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>From the plot we can see the columns in which percentage of null values more than 40% are marked above the red line and the columns which have less than 40 % null values below the red line. Let's check the columns which has more than 40% missing values\n    <\/span>    \n<\/div>","bb7d801c":"<a id=\"conclusion\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            7. Conclusions\n            <\/span>   \n        <\/font>    \n<\/h2>","81a0cfc5":"<a id=\"clean2\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.3 Analyze & Delete Unnecessary Columns in previousDF\n            <\/span>   \n        <\/font>    \n<\/h3>","845a0f38":"<p>\n    <span style='font-family:Georgia'>\n           Finding outlier information in previousDF\n    <\/span>\n<\/p>","24ad87b3":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <p>The following attributes indicate that people from these category tend to default but then due to the number of people and the amount of loan, the bank could provide loan with higher interest to mitigate any default risk thus preventing business loss:  <\/p> \n        <ol>\n            <li>NAME_HOUSING_TYPE: High number of loan applications are from the category of people who live in Rented apartments & living with parents and hence offering the loan would mitigate the loss if any of those default.<\/li>\n            <li>AMT_CREDIT: People who get loan for 300-600k tend to default more than others and hence having higher interest specifically for this credit range would be ideal.<\/li>\n            <li>AMT_INCOME: Since 90% of the applications have Income total less than 300,000 and they have high probability of defaulting, they could be offered loan with higher interest compared to other income category.<\/li>\n            <li>CNT_CHILDREN & CNT_FAM_MEMBERS: Clients who have 4 to 8 children has a very high default rate and hence higher interest should be imposed on their loans.<\/li>\n            <li>NAME_CASH_LOAN_PURPOSE: Loan taken for the purpose of Repairs seems to have highest default rate. A very high number applications have been rejected by bank or refused by client in previous applications as well which has purpose as repair or other. This shows that purpose repair is taken as high risk by bank and either they are rejected, or bank offers very high loan interest rate which is not feasible by the clients, thus they refuse the loan. The same approach could be followed in future as well.<\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","b1635ce6":"<p>\n    <span style='font-family:Georgia'>\n           Impute categorical variable 'NAME_TYPE_SUITE' which has lower null percentage(0.42%) with the most frequent category using mode()[0]:\n    <\/span>\n<\/p>\n\n    ","efac7c9c":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Most of the loans are taken by Laborers, followed by Sales staff. IT staff take the lowest amount of loans.<\/li>\n            <li>The category with highest percent of not repaid loans are Low-skill Laborers (above 17%), followed by Drivers and Waiters\/barmen staff, Security staff, Laborers and Cooking staff. <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","ce942047":"<a id=\"outlier\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             4.7 Identifying the outliers\n            <\/span>   \n        <\/font>    \n<\/h3>","2f199cf9":"<a id=\"imbalance\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             5.1 Imbalance Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","d616666a":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>It can be seen that in current application data\n        <ol>\n            <li>AMT_ANNUITY, AMT_CREDIT, AMT_GOODS_PRICE,CNT_CHILDREN have some number of outliers.<\/li>\n            <li>AMT_INCOME_TOTAL has huge number of outliers which indicate that few of the loan applicants have high income when compared to the others.<\/li>\n            <li>DAYS_BIRTH has no outliers which means the data available is reliable.<\/li>\n            <li>DAYS_EMPLOYED has outlier values around 350000(days) which is around 958 years which is impossible and hence this has to be incorrect entry.<\/li>\n        <\/ol>        \n    <\/span>    \n<\/div>\n<p>\n    <span style='font-family:Georgia'>\n           We can see the stats for these columns below as well.\n    <\/span>\n<\/p>","67740cec":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             4.4.2 Standardize Values for previousDF\n            <\/span>   \n        <\/font>    \n<\/h4>","ae38df51":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Most of the people who have taken loan are married, followed by Single\/not married and civil marriage <\/li>\n            <li>In terms of percentage of not repayment of loan, Civil marriage has the highest percent of not repayment (10%), with Widow the lowest (exception being Unknown). <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","0a298dd8":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ul>\n            <li> When amt_annuity >15000 amt_goods_price> 3M, there is a lesser chance of defaulters  <\/li>\n            <li> AMT_CREDIT and AMT_GOODS_PRICE are highly correlated as based on the scatterplot where most of the data are consolidated in form of a line<\/li>\n            <li> There are very less defaulters for AMT_CREDIT >3M<\/li>\n            <li> Inferences related to distribution plot has been already mentioned in previous distplot graphs inferences section<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","76cee641":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b> <br>31% loan applicants have age above 50 years. More than 55% of loan applicants have age over 40 years.\n    <\/span>    \n<\/div>","c417354a":"<p>\n    <span style='font-family:Georgia'>\n        <b> Plotting Contract Status vs purpose of the loan: <\/b>\n    <\/span>\n<\/p>","5717775a":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>After deleting unnecessary columns, there are 46 columns remaining in applicationDF\n    <\/span>    \n<\/div>","3c508af2":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             5.3.1 Segmented Univariate Analysis\n            <\/span>   \n        <\/font>    \n<\/h4>","9c163c42":"<h3 >   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            Introduction:\n            <\/span>   \n        <\/font>    \n<\/h3>\n<p>\n    <span style='font-family:Georgia'>\n    This case study aims to give an idea of applying EDA in a real business scenario. In this case study, we will develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.\n    <\/span>\n<\/p>   \n<hr>\n<h3>\n    <font color = purple >\n        <span style='font-family:Georgia'>\n            Business Understanding:\n            <\/span>   \n        <\/font>    \n<\/h3>\n<p>\n    <span style='font-family:Georgia'>\n    The loan providing companies find it hard to give loans to the people due to their insufficient or non-existent credit history. Because of that, some consumers use it as their advantage by becoming a defaulter. Suppose you work for a consumer finance company which specialises in lending various types of loans to urban customers. You have to use EDA to analyse the patterns present in the data. This will ensure that the applicants capable of repaying the loan are not rejected.<br>\n        When the company receives a loan application, the company has to decide for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n    <\/span>\n<\/p>\n<ul>\n    <span style='font-family:Georgia'>\n        <li>If the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company<\/li>\n        <li>If the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company.<\/li>\n    <\/span>\n<\/ul>\n    \n<p><span style='font-family:Georgia'>The data given below contains the information about the loan application at the time of applying for the loan. It contains two types of scenarios:<\/span><\/p>\n<ul>\n    <span style='font-family:Georgia'> \n        <li><b>The client with payment difficulties:<\/b> he\/she had late payment more than X days on at least one of the first Y instalments of the loan in our sample<\/li>\n        <li><b>All other cases:<\/b> All other cases when the payment is paid on time<\/li>\n    <\/span>\n<\/ul>\n    \n<p><span style='font-family:Georgia'>When a client applies for a loan, there are four types of decisions that could be taken by the client\/company):<\/span><\/p>\n\n<ol>\n    <span style='font-family:Georgia'>\n        <li><b>Approved:<\/b> The Company has approved loan Application<\/li>\n        <li><b>Cancelled:<\/b> The client cancelled the application sometime during approval. Either the client changed her\/his mind about the loan or in some cases due to a higher risk of the client he received worse pricing which he did not want.<\/li>\n        <li><b>Refused:<\/b> The company had rejected the loan (because the client does not meet their requirements etc.)<\/li>\n        <li><b>Unused offer:<\/b>  Loan has been cancelled by the client but on different stages of the process.<\/li>\n    <\/span>\n<\/ol>\n<hr>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            Business Objective:\n            <\/span>   \n        <\/font>    \n<\/h3>\n<p>\n    <span style='font-family:Georgia'>\n        This case study aims to identify patterns which indicate if a client has difficulty paying their installments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.<br>\n        In other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.\n    <\/span>\n<\/p>","948443e5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Inferences: <\/b> \n        <ol>\n            <li>Most of the applicants are living in Region_Rating 2 place.<\/li>\n            <li>Region Rating 3 has the highest default rate (11%)<\/li>\n            <li>Applicant living in Region_Rating 1 has the lowest probability of defaulting, thus <b>safer<\/b> for approving loans <\/li>\n        <\/ol>\n    <\/span>    \n<\/div>","aaaa566b":"<a id=\"numvar\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             5.4 Numeric Variables Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","7febb61f":"> <h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n             4.6.2 Imputing Null Values in previousDF\n            <\/span>   \n        <\/font>    \n<\/h4>","7a5e8bde":"<a id=\"oltfunc\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n             5.2 Plotting Functions\n            <\/span>   \n        <\/font>    \n<\/h3>"}}