{"cell_type":{"16c17cc0":"code","53fbafc0":"code","54f253c1":"code","b34cf15d":"code","171606db":"code","94279b73":"code","a56bede7":"code","598b2691":"code","6147d4f9":"code","c69cbebf":"markdown","a199bd18":"markdown","56b43e6c":"markdown","73cb59ba":"markdown","19a1ed48":"markdown","f64eda76":"markdown","9d3d2de2":"markdown","0d1a8e2d":"markdown"},"source":{"16c17cc0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\n\niris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\niris.head()","53fbafc0":"iris.info()","54f253c1":"new_iris = iris.copy()\nnew_iris.drop('Id', axis=1, inplace=True)\nsns.pairplot(new_iris, hue='Species', diag_kind='hist')","b34cf15d":"le = LabelEncoder()\nnew_iris['Species'] = le.fit_transform(new_iris['Species'])\n\nprint(new_iris.head(2))\nprint('..')\nprint(new_iris.tail(2))","171606db":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split, KFold, GridSearchCV, cross_val_score\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n\ny = new_iris['Species']\nX = new_iris.drop(['Species'], axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)\n\nX.head()","94279b73":"# show accuracy score mean and standard deviation\ndef show_score(estimator, X, y, cv, scoring):\n    score = cross_val_score(estimator=estimator, X=X, y=y, cv=cv, scoring=scoring)\n    print(model)\n    print('mean',scoring,':',score.mean())\n    print('std',scoring,':',score.std())\n    print('')","a56bede7":"# initialize kfold for cross-validation\nk_fold = KFold(n_splits=5, shuffle=True, random_state=0)\n\n# find best number of neighbors for knn\nknn_param_grid = {'n_neighbors': np.arange(1,30)}\nknn_gs = GridSearchCV(estimator=KNeighborsClassifier(),\n                      param_grid=knn_param_grid, cv=k_fold)\nknn_gs.fit(X_train, y_train)\nprint(knn_gs.best_params_)","598b2691":"# initialize models\nrfc = RandomForestClassifier(random_state=0)\nlda = LinearDiscriminantAnalysis(solver='lsqr')\nknn = KNeighborsClassifier(n_neighbors=6)\n\nfor model in [rfc, lda, knn]:\n    show_score(model, X_train, y_train, cv=k_fold, scoring='accuracy')","6147d4f9":"lda.fit(X_train, y_train)\ny_pred = lda.predict(X_test)\n\n# model evaluation\nprint(classification_report(y_test, y_pred))\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, cmap='Blues')\nplt.title('Confusion Matrix')\nplt.xlabel('Actual labels')\nplt.ylabel('Predicted labels')\nplt.show()","c69cbebf":"The data contain 150 samples (50 for each species) and there is no missing value.\nAll the features except the target and the Id refers to the size of Petals and Sepals and have 'float64' dtype.\n\nSince all of the features are continuous and the target is categorical data visualization can be performed by just displaying a pairplot using the three species as hue. I will be sure to drop the Id column as there is no reason to think it can be used for prediction purpose annd also it will make the pairplot more good looking.","a199bd18":"Before going into cross-validation I will use GridSearchCV ","56b43e6c":"## EDA\n\nDiving a bit more into the data","73cb59ba":"LDA seems to have both the highest mean score and the lowest standard deviation among the three candidates. Therefore I will use LDA for predictions.","19a1ed48":"## Getting Started\n\nThe Iris dataset was used in R.A. Fisher's classic 1936 paper, The Use of Multiple Measurements in Taxonomic Problems, and can also be found on the UCI Machine Learning Repository.\n\nIt includes three iris species with 50 samples each as well as some properties about each flower. One flower species is linearly separable from the other two, but the other two are not linearly separable from each other.\n\nThe task is to predict the species of the iris flower.\n\nThis section is used for importing the necessary libraries for pre-modeling and the data, also taking a peek at them.","f64eda76":"The diagonal highlights the following relations:\n* Iris setosa is characterized by having smaller petals with respect to the other species and low and short sepals. While the parameters for the sepal may overlap with those of the other species, the distinction is very clear regarding the petals.\n* Iris versicolor and Iris virginica are instead less well-separated. Both the petals and sepals of versicolor are generally smaller in size than virginica but the pattern is weaker than the one observed for setosa (especially regarding the sepal size).\n\nWhile looking at a triangle:\n* It is more evident why the dataset description says that one species is linearly separable from the other two, which are linearly unseparable instead.\n* Except for the sepal length-vs-width plot the others show linear relations in each class. In particular the petal length-vs-width plot seem to show the same linear relation for each species.\n\nBefore moving to the modeling part data must be encoded. Since the only variable to encode is the target I will use label encoding.","9d3d2de2":"I will use the following function to compare my models.","0d1a8e2d":"## Modeling\n\nFirst importing libraries for modeling, cross-validation and model evaluation, then splitting features and target."}}