{"cell_type":{"39731744":"code","ddb8e57a":"code","a6d0c453":"code","28f200ce":"code","9e31b568":"code","2478773b":"code","36a5f48b":"code","96b98e92":"code","3711b1c7":"code","3e1b60c2":"code","62175e6a":"code","9971bda9":"code","593a46ad":"code","0cf5c8ec":"code","04e8b093":"code","c9e0a755":"code","fb55b675":"code","98fdf43f":"code","55226ded":"code","21361266":"code","2cd5ac56":"code","f49765c2":"code","26f5ee07":"code","0a786bf5":"code","6bd2041d":"code","e10e7949":"code","e6a87bb6":"code","db141bcc":"code","e235467a":"code","4419c0b5":"code","404d969c":"code","fcf57609":"markdown","a50c60bd":"markdown","da9e7733":"markdown","6b20de6d":"markdown","e174a784":"markdown","8d452cc6":"markdown","857b0c74":"markdown","0df46db2":"markdown"},"source":{"39731744":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ddb8e57a":"import os\nimport numpy\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick\nimport matplotlib.image as mpimg\nfrom itertools import cycle\nimport seaborn as sns\nimport statsmodels.api as sm \nfrom scipy.interpolate import interp1d\nimport joblib\n\npd.set_option('max_columns', 50)\nplt.style.use('bmh')\ncolor_cycle = cycle(plt.rcParams['axes.prop_cycle'].by_key()['color'])","a6d0c453":"# \u5404\u7a2e\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30d7\u30c3\u30c8\nosj = os.path.join\nINPUT_DIR = '..\/input\/m5-forecasting-accuracy\/'\nsales = pd.read_csv(osj(INPUT_DIR, 'sales_train_evaluation.csv'))\nprices = pd.read_csv(osj(INPUT_DIR, 'sell_prices.csv'))\ncalendar = pd.read_csv(osj(INPUT_DIR, 'calendar.csv'))\n\nsample_submit = pd.read_csv(osj(INPUT_DIR, 'sample_submission.csv'))","28f200ce":"# sales\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\nsales.head()","9e31b568":"# \u8ca9\u58f2\u4fa1\u683c\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\nprices.head()","2478773b":"# \u30ab\u30ec\u30f3\u30c0\u30fc\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\ncalendar['date'] = pd.to_datetime(calendar['date']) # date\u3092datetime\u578b\u306b\u5909\u63db\ncalendar.head()","36a5f48b":"# \u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u4f8b\u306e\u78ba\u8a8d\nsample_submit.head()","96b98e92":"# \u30e9\u30f3\u30c0\u30e0\u306b\u62bd\u51fa\uff08\u500b\u6570\u3001random_state\u306f\u4efb\u610f\uff09\nexamples = sales.sample(6, random_state=700)\n# calendar\u3068\u30de\u30fc\u30b8\nd_cols = [c for c in sales.columns if 'd_' in c] # d_\u3067\u59cb\u307e\u308b\u65e5\u4ed8\u5217\u306e\u30ea\u30b9\u30c8\nexamples = examples.set_index('id')[d_cols].T.merge(calendar.set_index('d')['date'],left_index=True, \n                                                    right_index=True, validate='1:1').set_index('date')","3711b1c7":"# \u500b\u6570\u306e\u30d7\u30ed\u30c3\u30c8(\u7e26\u8ef8: \u58f2\u308a\u4e0a\u3052\u500b\u6570 \u6a2a\u8ef8: \u65e5\u4ed8)\nfor item in examples.columns:\n    examples[item].plot(title=item,\n                        figsize=(15, 2),\n                        color=next(color_cycle))\n    plt.show()\n","3e1b60c2":"# \u904e\u53bb\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30de\u30fc\u30b8\npast_sales = sales.set_index('id')[d_cols].T.merge(calendar.set_index('d')['date'],\n                                                   left_index=True,\n                                                   right_index=True,\n                                                   validate='1:1').set_index('date')","62175e6a":"# \u30d7\u30ed\u30c3\u30c8\npast_sales.sum(axis=1).plot(\n    figsize=(15, 5),\n    alpha=0.8,\n    title='Total Sales')\nplt.show()","9971bda9":"# \u6975\u7aef\u306b\u5c11\u306a\u3044\u65e5\u306e\u78ba\u8a8d\n[past_sales.index[_] for _, i in enumerate(past_sales.sum(axis=1)) if i <= 10000]","593a46ad":"# \u5dde\u306e\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\nstate_list = sales['state_id'].unique()\n\n# \u30d7\u30ed\u30c3\u30c8\nfor i in state_list:\n    items_col = [c for c in past_sales.columns if i in c]\n    # \u5404\u30a2\u30a4\u30c6\u30e0\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[items_col].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        alpha=0.8,\n        title='Rolling 30 Day Average Total Sales by State')\nplt.legend(sales['state_id'].unique())\nplt.show()\n","0cf5c8ec":"# \u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u78ba\u8a8d\nsales['cat_id'].unique()","04e8b093":"# \u30ab\u30c6\u30b4\u30ea\u30fc\u3054\u3068\u306e\u5546\u54c1\u6570\u306e\u96c6\u8a08\nsales.groupby('cat_id').count()['id'].sort_values().plot(\n    kind='barh',\n    figsize=(15, 5),\n    title='Count of Items by Category')\nplt.show()","c9e0a755":"# \u30d7\u30ed\u30c3\u30c8\nfor i in sales['cat_id'].unique():\n    items_col = [c for c in past_sales.columns if i in c]\n    # \u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[items_col].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        alpha=0.8,\n        title='Rolling 30 Day Average Total Sales by Category')\nplt.legend(sales['cat_id'].unique())\nplt.show()","fb55b675":"# \u5e97\u8217\u306e\u78ba\u8a8d\nsales['store_id'].unique()","98fdf43f":"# \u5404\u5e97\u8217\u3054\u3068\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\nstore_list = prices['store_id'].unique()\nstore_list_ca = [s for s in store_list if 'CA' in s]\nstore_list_tx = [s for s in store_list if 'TX' in s]\nstore_list_wi = [s for s in store_list if 'WI' in s]","55226ded":"# CA\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u3054\u3068\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in store_list_ca:\n    store_items = [c for c in past_sales.columns if s in c]\n    # CA\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[store_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        ylim=[0,8000],\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (CA)')\nplt.legend(store_list_ca)\nplt.show()","21361266":"# TX\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u3054\u3068\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in store_list_tx:\n    store_items = [c for c in past_sales.columns if s in c]\n    # TX\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[store_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        ylim=[0,8000],\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (TX)')\nplt.legend(store_list_ca)\nplt.show()","2cd5ac56":"# WI\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u3054\u3068\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in store_list_wi:\n    store_items = [c for c in past_sales.columns if s in c]\n    # WI\u306b\u304a\u3051\u308b\u5404\u5e97\u8217\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[store_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        ylim=[0,8000],\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (WI)')\nplt.legend(store_list_ca)\nplt.show()","f49765c2":"# \u90e8\u9580\u306e\u78ba\u8a8d\nsales['dept_id'].unique()","26f5ee07":"# \u5404\u90e8\u9580\u3054\u3068\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\nd_list = sales['dept_id'].unique()\nd_list_foods     = [d for d in d_list if 'FOODS' in d]\nd_list_hobbies   = [d for d in d_list if 'HOBBIES' in d]\nd_list_household = [d for d in d_list if 'HOUSEHOLD' in d]","0a786bf5":"# FOODS\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u304a\u3051\u308b\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in d_list_foods:\n    department_items = [c for c in past_sales.columns if s in c]\n    # FOODS\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[department_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (FOODS)')\nplt.legend(d_list_foods)\nplt.show()","6bd2041d":"# HOBBIES\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u304a\u3051\u308b\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in d_list_hobbies:\n    department_items = [c for c in past_sales.columns if s in c]\n    # HOBBIES\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[department_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (HOBBIES)')\nplt.legend(d_list_hobbies)\nplt.show()","e10e7949":"# HOUSEHOLD\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u304a\u3051\u308b\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nfor s in d_list_household:\n    department_items = [c for c in past_sales.columns if s in c]\n    # HOUSEHOLD\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n    past_sales[department_items].sum(axis=1).rolling(30).mean().plot(\n        figsize=(15, 5),\n        alpha=0.8,\n        color=next(color_cycle),\n        title='Rolling 30 Day Average Total Sales (HOUSEHOLD)')\nplt.legend(d_list_household)\nplt.show()","e6a87bb6":"# FOODS\u306b\u304a\u3044\u3066\u3001\u5dde\u5225\u306b\u898b\u305f\u5404\u90e8\u9580\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nl = d_list_foods\nfor st in state_list:\n    for d in l:\n        store_items = [c for c in past_sales.columns if st in c]\n        store_d_items = [s for s in store_items if d in s]\n        # \u5dde\u5225\u306eFOODS\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n        past_sales[store_d_items].sum(axis=1).rolling(30).mean().plot(\n            figsize=(15, 5),\n            ylim=[0,10000],\n            alpha=0.8,\n            title=f'Rolling 30 Day Average FOODS Sales ({st})')\n    plt.legend(l)\n    plt.show()","db141bcc":"# HOBBIES\u306b\u304a\u3044\u3066\u3001\u5dde\u5225\u306b\u898b\u305f\u5404\u90e8\u9580\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nl = d_list_hobbies\nfor st in state_list:\n    for d in l:\n        store_items = [c for c in past_sales.columns if st in c]\n        store_d_items = [s for s in store_items if d in s]\n        # \u5dde\u5225\u306eHOBBIES\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n        past_sales[store_d_items].sum(axis=1).rolling(30).mean().plot(\n            figsize=(15, 5),\n            ylim=[0,2000],\n            alpha=0.8,\n            title=f'Rolling 30 Day Average HOBBIES Sales ({st})')\n    plt.legend(l)\n    plt.show()","e235467a":"# HOUSEHOLD\u306b\u304a\u3044\u3066\u3001\u5dde\u5225\u306b\u898b\u305f\u5404\u90e8\u9580\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\nl = d_list_household\nfor st in state_list:\n    for d in l:\n        store_items = [c for c in past_sales.columns if st in c]\n        store_d_items = [s for s in store_items if d in s]\n        # \u5dde\u5225\u306eHOUSEHOLD\u306e\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u3064\u3044\u306630\u65e5\u5206\u306e\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3092\u3068\u308a\u5e73\u5747\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092\u30d7\u30ed\u30c3\u30c8\n        past_sales[store_d_items].sum(axis=1).rolling(30).mean().plot(\n            figsize=(15, 5),\n            ylim=[0,4000],\n            alpha=0.8,\n            title=f'Rolling 30 Day Average HOUSEHOLD Sales ({st})')\n    plt.legend(l)\n    plt.show()","4419c0b5":"submit = pd.read_csv(osj('..\/input\/submission\/total-20201204-032508.csv'))","404d969c":"submit.to_csv('submission.csv', index=False)","fcf57609":"# 2.4 \u5e97\u8217\u3054\u3068\u306e\u53ef\u8996\u5316\n\u5e97\u8217\u306f10\u5e97\u8217\u3042\u308a\u3001CA\u306b4\u5e97\u8217\u3001TX\u3068WI\u306b3\u5e97\u8217\u3042\u308b\u3002  \n\u30d7\u30ed\u30c3\u30c8\u7d50\u679c\u304b\u3089\u4ee5\u4e0b\u304c\u8003\u3048\u3089\u308c\u308b\u3002\n\n* TX\u306e\u5e97\u8217\u306b\u3064\u3044\u3066\u306f\u3001\u58f2\u308a\u4e0a\u3052\u306e\u5e97\u8217\u5dee\u306f\u307b\u3068\u3093\u3069\u306a\u3044\n* WI_1, WI_2\u3068CA_2\u306f\u58f2\u308a\u4e0a\u3052\u304c\u6025\u4e0a\u6607\u3059\u308b\u90e8\u5206\u304c\u3042\u308b","a50c60bd":"# 2.3 \u30ab\u30c6\u30b4\u30ea\u30fc\u3054\u3068\u306e\u53ef\u8996\u5316\n\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u4ee5\u4e0b\u306e3\u3064\u304c\u3042\u308b\u3002\n\n* HOBBIES\n* HOUSEHOLD\n* FOODS\n\n\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u5206\u6790\u304b\u3089\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\n* FOODS\u304c\u5546\u54c1\u6570\u3001\u8ca9\u58f2\u6570\u3068\u3082\u306b\u3082\u3063\u3068\u3082\u591a\u3044\n* \u5168\u4f53\u7684\u306b\u58f2\u308a\u4e0a\u3052\u306f\u5897\u52a0\u3057\u3066\u3044\u308b\n","da9e7733":"# 1 \u30c7\u30fc\u30bf\n## \u30c7\u30fc\u30bf\u306e\u8a73\u7d30\n### sales_train_validation\u306b\u3064\u3044\u3066\n#### \u6982\u8981\n\n\u88fd\u54c1\u304a\u3088\u3073\u30b9\u30c8\u30a2\u3054\u3068\u306e\u904e\u53bb\u306e1\u65e5\u306e\u8ca9\u58f2\u53f0\u6570\u30c7\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002  \n\u4e3b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u306a\u3063\u3066\u304a\u308a\u3001 2011-01-29\u304b\u30892016-04-24\u307e\u3067\u306e1913\u65e5\u3054\u3068\u306b1\u3064\u306e\u5217\u304c\u3042\u308b\u3002  \n\u30a2\u30a4\u30c6\u30e0\u3001\u90e8\u9580\u3001\u30ab\u30c6\u30b4\u30ea\u3001\u30b9\u30c8\u30a2\u3001\u304a\u3088\u3073\u72b6\u614b\u306eID\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u3002  \n3049\u30a2\u30a4\u30c6\u30e0\u306810\u5e97\u8217\u306e\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u884c\u6570\u306f30490\u3002\n\n* id: id\n* item_id: \u30a2\u30a4\u30c6\u30e0(\u5546\u54c1)\u306eid\n* dept_id: \u90e8\u9580\u306eid\n* cat_id: \u30ab\u30c6\u30b4\u30ea\u30fc\u306eid\n* store_id: \u5e97\u8217\u306eid\n* state_id: \u5dde\u306eid\n* d_hoge: \u65e5\u306b\u3061\u3054\u3068\u306e\u8ca9\u58f2\u6570(\u58f2\u308a\u4e0a\u3052\u306e\u5408\u8a08\u3067\u306f\u306a\u3044)\n\n### sell_prices.csv\u306b\u3064\u3044\u3066\n#### \u6982\u8981\n\n\u5e97\u8217\u3054\u3068\u306b\u8ca9\u58f2\u3055\u308c\u305f\u88fd\u54c1\u306e\u4fa1\u683c\u3068\u65e5\u4ed8\u306b\u95a2\u3059\u308b\u60c5\u5831\u3002  \n\u30b9\u30c8\u30a2ID\u3068\u30a2\u30a4\u30c6\u30e0ID\u3001\u304a\u3088\u3073\u30a2\u30a4\u30c6\u30e0\u8ca9\u58f2\u4fa1\u683c\u306e\u9031\u5e73\u5747\u3002  \n\u3053\u306e\u4fa1\u683c\u8868\u306b\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u306b\u30ea\u30f3\u30af\u3059\u308b\u305f\u3081\u306estore_id\u3068item_id\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002  \n\u4fa1\u683c\u306f$ 0.10\u304b\u3089100\u30c9\u30eb\u3092\u5c11\u3057\u8d85\u3048\u308b\u7bc4\u56f2\u3002\n\n* store_id: \u5e97\u8217\u306eid\n* item_id: \u30a2\u30a4\u30c6\u30e0(\u5546\u54c1)\u306eid\n* wm_yr_wk: \u9031\u306eid\n* sell_price: \u8ca9\u58f2\u4fa1\u683c\n\n\n### calendar.csv\u306b\u3064\u3044\u3066\n#### \u6982\u8981\n\n\u88fd\u54c1\u304c\u8ca9\u58f2\u3055\u308c\u305f\u65e5\u4ed8\u306b\u95a2\u3059\u308b\u60c5\u5831\u3002  \n2011-01-29\u304b\u30892016-05-30\u307e\u3067\u306e1949\u65e5\u5206\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30c7\u30fc\u30bf\u3002  \n\u65e5\u4ed8\u3001\u66dc\u65e5\u3001\u6708\u3001\u5e74\u3068\u95a2\u9023\u30a4\u30d9\u30f3\u30c8\u3001\u304a\u3088\u3073\u4e09\u3064\u306e\u5dde\u304c\u3053\u306e\u65e5\u306bSNAP\u30d5\u30fc\u30c9\u30b9\u30bf\u30f3\u30d7\uff08\u8a33\u8005\u6ce8\uff1a\u88dc\u52a9\u7684\u6804\u990a\u652f\u63f4\u30d7\u30ed\u30b0\u30e9\u30e0\u3001\u7121\u6599\u30d5\u30fc\u30c9\u30af\u30fc\u30dd\u30f3\uff09\u3067\u306e\u8cfc\u5165\u3092\u8a31\u53ef\u3057\u305f\u304b\u3092\u793a\u3059\u30d0\u30a4\u30ca\u30ea\u30d5\u30e9\u30b0\uff081:\u8a31\u53ef\u30010:\u4e0d\u8a31\u53ef\uff09\u3002  \nevent_name_2\u5217\u306b\u306f\u3001NA\u4ee5\u5916\u306e\u884c\u304c5\u884c\u3057\u304b\u306a\u3044\u3002  \n\u7279\u5b9a\u306e\u65e5\u306b\u8907\u6570\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308b\u306e\u306f5\u56de\u306e\u307f\u3067\u3059\u3002\n\n* date: \u65e5\u4ed8\n* wm_yr_wk: \u9031\u306eid\n* weekday: \u66dc\u65e5\n* wday: \u66dc\u65e5\u306eid(\u571f\u66dc\u65e5\u304c1, \u91d1\u66dc\u65e5\u304c7)\n* month: \u6708\n* year: \u5e74\n* d: \u65e5\n* event_name_1: \u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\n* event_type_1: \u30a4\u30d9\u30f3\u30c8\u306e\u8a73\u7d30(\u30b9\u30dd\u30fc\u30c4\u306a\u3069)\n* event_name_2: \u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\n* event_type_2: \u30a4\u30d9\u30f3\u30c8\u306e\u8a73\u7d30(\u30b9\u30dd\u30fc\u30c4\u306a\u3069)\n* snap_CA: SNAP\u30d5\u30fc\u30c9\u30b9\u30bf\u30f3\u30d7\u306e\u30d5\u30e9\u30b0(\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5dde)\n* snap_TX: SNAP\u30d5\u30fc\u30c9\u30b9\u30bf\u30f3\u30d7\u306e\u30d5\u30e9\u30b0(\u30c6\u30ad\u30b5\u30b9\u5dde)\n* snap_WI: SNAP\u30d5\u30fc\u30c9\u30b9\u30bf\u30f3\u30d7\u306e\u30d5\u30e9\u30b0(\u30a6\u30a3\u30b9\u30b3\u30f3\u30b7\u30f3\u5dde)\n\n### sample_submission.csv\u306b\u3064\u3044\u3066\n#### \u6982\u8981\n\n\u63d0\u51fa\u306e\u6b63\u3057\u3044\u5f62\u5f0f\u3002  \n\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[\u8a55\u4fa1]\u30bf\u30d6\u3092\u53c2\u7167\u3002\n\n* id: id\n* F1 - F28: \u65e5\u4ed8\u306e\u58f2\u4e0a\u6570(28\u65e5\u5206\u3092\u4e88\u6e2c)\n","6b20de6d":"# 2 \u30c7\u30fc\u30bf\u5206\u6790\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u51fa\u3057\u305f6\u500b\u306e\u5546\u54c1\u306e\u58f2\u4e0a\u6570\u3092\u30d7\u30ed\u30c3\u30c8\u3002  \n\u30d7\u30ed\u30c3\u30c8\u7d50\u679c\u304b\u3089\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u308b\u3002\n\n* \u6bce\u65e5\u58f2\u308c\u3066\u3044\u308b\u3082\u306e\u306f\u5c11\u306a\u305d\u3046\n* \u9014\u4e2d\u304b\u3089\u8ca9\u58f2\u304c\u958b\u59cb\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u3082\u306e(\u9014\u4e2d\u304b\u3089\u58f2\u4e0a\u6570\u304c0\u3067\u306f\u306a\u304f\u306a\u308b)\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\n* \u6b63\u78ba\u306a\u4e88\u6e2c\u306e\u305f\u3081\u306b\u591a\u304f\u306e\u30ce\u30a4\u30ba\u306b\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","e174a784":"# 2.1 \u5168\u3066\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u53ef\u8996\u5316\n\u5168\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u3001\u5e97\u8217\u3001\u30ab\u30c6\u30b4\u30ea\u3001\u90e8\u9580\u3001\u304a\u3088\u3073\u58f2\u4e0a\u306e\u96c6\u8a08\u6642\u7cfb\u5217\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3002  \n\u30d7\u30ed\u30c3\u30c8\u7d50\u679c\u304b\u3089\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u308b\u3002  \n\n* \u5168\u4f53\u3092\u901a\u3057\u3066\u307f\u308b\u3068\u3001\u58f2\u308a\u4e0a\u3052\u306f\u5f90\u3005\u306b\u5897\u52a0\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n* 12\/25\u3067\u6bce\u5e74\u58f2\u308a\u4e0a\u3052\u304c\u6975\u7aef\u306b\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b\n* 1\u5e74\u306b\u304a\u3044\u3066\u3001\u58f2\u308a\u4e0a\u3052\u304c\u9ad8\u3044\u6642\u671f\u3068\u305d\u3046\u3067\u306a\u3044\u6642\u671f\u304c\u5468\u671f\u7684\u306b\u8a2a\u308c\u3066\u3044\u308b","8d452cc6":"# 2.5 \u90e8\u9580\u3054\u3068\u306e\u53ef\u8996\u5316\n\u90e8\u9580\u306fFOODS\u304c3\u3064\u3001HOBBIES\u3068HOUSEHOLD\u304c2\u3064\u3067\u3042\u308b\u3002  \n\u90e8\u9580\u5168\u4f53\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\u3068\u5dde\u5225\u3067\u898b\u305f\u90e8\u9580\u306e\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u884c\u3046\u3002  \n\u30d7\u30ed\u30c3\u30c8\u7d50\u679c\u304b\u3089\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u308b\u3002  \n\n* \u90e8\u9580\u5168\u4f53\u3067\u898b\u305f\u6642\u3001\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u304a\u3044\u3066FOODS_3, HOBBIES_1, HOUSEHOLD_1\u304c\u58f2\u308a\u4e0a\u3052\u304c\u591a\u304f\u306a\u3063\u3066\u3044\u308b\n* \u4e0a\u8a18\u306e\u50be\u5411\u306f\u5dde\u5225\u3067\u898b\u305f\u6642\u3067\u3082\u540c\u69d8\u3067\u3042\u308b\n","857b0c74":"# 2.2 \u6708\u6bce\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u53ef\u8996\u5316\n1\u5e74\u306b\u304a\u3051\u308b\u58f2\u308a\u4e0a\u3052\u306e\u63a8\u79fb\u3092\u8a73\u3057\u304f\u307f\u308b\u305f\u3081\u306b\u6708\u6bce(\u6b63\u78ba\u306b\u306f30\u65e5\u3054\u3068)\u306b\u5e73\u5747\u3092\u3068\u3063\u305f\u58f2\u308a\u4e0a\u3052\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u884c\u3046\u3002  \n\u307e\u305f\u3001\u3053\u306e\u30d7\u30ed\u30c3\u30c8\u306f\u5dde\u3054\u3068\u306b\u63a8\u79fb\u3092\u51fa\u3059\u3053\u3068\u3068\u3059\u308b\u3002  \n\u30d7\u30ed\u30c3\u30c8\u7d50\u679c\u304b\u3089\u4ee5\u4e0b\u304c\u8003\u3048\u3089\u308c\u308b\u3002\n\n* CA\u306f\u9ad8\u3044\u58f2\u4e0a\u6570\u3092\u7dad\u6301\u3057\u3066\u3044\u308b\n* WI\u306f\u6700\u5f8c\u306e\u65b9\u3067TX\u3092\u629c\u3044\u3066\u3044\u308b\n","0df46db2":"# 2.6 \u307e\u3068\u3081\n\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u3092\u4ee5\u4e0b\u306b\u307e\u3068\u3081\u308b\u3002\n\n* \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6271\u3046\u306e\u304c\u826f\u3055\u305d\u3046\n* \u65e5\u4ed8(\u30af\u30ea\u30b9\u30de\u30b9)\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306a\u3069\u306e\u7279\u5fb4\u91cf\u306e\u4ed8\u4e0e\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\n* \u500b\u5225\u306e\u5546\u54c1\u3054\u3068\u3067\u305d\u308c\u305e\u308c\u30e2\u30c7\u30eb\u3092\u4f5c\u308c\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044"}}