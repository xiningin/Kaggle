{"cell_type":{"bfe04414":"code","fd34c6ba":"code","42cd4eae":"code","92763b35":"code","cb26a8d8":"code","707069b9":"code","34de9183":"code","f9d57342":"code","cfa15335":"code","68cb54d1":"code","c451ab24":"code","7e7aa6d0":"code","8dde7074":"code","2b792c9a":"code","ae0b95f0":"code","237e0fa3":"code","86509a8c":"code","92eaa44d":"code","4340646d":"code","770834cd":"code","ab46cdf7":"code","b313d71e":"code","71135325":"code","a53dd16a":"code","6fcd89e5":"code","bcfb691a":"code","82d18222":"code","3d9726f6":"code","424dc7a6":"code","eee547f2":"code","ead3bb24":"code","57433ee2":"code","2aba63e2":"code","b6600b19":"code","9672021d":"code","d0591b4b":"code","0b9db864":"code","3a916c53":"code","4f3734bf":"code","cbbba241":"code","a4804da6":"code","a0dcc752":"code","a0e9a646":"code","f9dcdc90":"code","c1a41dae":"code","6426ae36":"code","6c9e187f":"code","09cb449c":"code","6616c701":"code","bd91bb5a":"code","33af550b":"code","ba8122e5":"code","22c4d9ba":"code","a9356232":"code","41860b22":"code","f3083a82":"code","d1235135":"code","9e6d68d0":"code","a861eb81":"code","b3eeb1c5":"code","805db907":"code","0ed1cdfc":"code","833b54fa":"code","36023009":"code","87e8efe9":"code","f6fb2a8a":"code","e346c234":"code","4667aa90":"code","95a33204":"code","d4e58204":"code","a47b5a95":"code","a1666e5a":"code","b0e6a0fc":"code","6d4b0c77":"code","50865076":"code","b3586413":"code","ff80d34b":"markdown","9050aca9":"markdown","fdc82266":"markdown","9b8287d6":"markdown","b506eb6f":"markdown","64be5af9":"markdown","97b8d0a5":"markdown","e84b66f5":"markdown"},"source":{"bfe04414":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom random import randint\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.preprocessing import LabelEncoder","fd34c6ba":"df = pd.read_csv('..\/input\/used-bike-price-in-india\/bikes.csv')\ndf.head()","42cd4eae":"print('Size of Data:',df.size)\nprint('Size of Columns:',df.shape[1])\nprint('Size of Rows:',df.shape[0])","92763b35":"df.info()","cb26a8d8":"df.nunique()","707069b9":"df.duplicated().sum()","34de9183":"df.isnull().sum()","f9d57342":"sns.heatmap(df.isnull())\nplt.show()","cfa15335":"df.dropna(inplace=True)","68cb54d1":"df.isnull().sum()","c451ab24":"df['age'] = 2021-df['model_year']\ndf.head()","7e7aa6d0":"df['company'] = df['model_name'].apply(lambda x:' '.join(x.split()[0:1]))","8dde7074":"df.head()","2b792c9a":"df['kms_driven'] = df['kms_driven'].str.replace('Km','')","ae0b95f0":"df = df[df['kms_driven'].apply(lambda x : True if x.find(\"Mil\") == -1 else False)] \ndf = df[df['kms_driven'] != 'Yes ']\ndf['kms_driven'] = df['kms_driven'].astype(int)","237e0fa3":"df['mileage'].unique()","86509a8c":"df['mileage'] = df['mileage'].str.replace('\\n\\n','')","92eaa44d":"df['mileage'] = df['mileage'].str.replace('KMPL','')","4340646d":"df['mileage'] = df['mileage'].str.replace('kmpl','')","770834cd":"df['mileage'] = df['mileage'].str.replace('45-55','56')","ab46cdf7":"df = df[df['mileage'] != ' Liquid Cooled']\ndf = df[df['mileage'] != ' ']","b313d71e":"df['mileage'] = df['mileage'].str.replace('Liquid Cooled','35')","71135325":"df['mileage'] = df['mileage'].apply(lambda x : float(x) if len(x.split(\"-\")) == 1  else  (int(x.split(\"-\")[0]) + int(x.split(\"-\")[1])) \/2 )","a53dd16a":"df['mileage'] = df['mileage'].astype(int)","6fcd89e5":"df.power.unique()","bcfb691a":"df['power'] = df['power'].astype(str)","82d18222":"df['power'] = df['power'].astype(\"str\")\ndf['power'] = df['power'].apply(lambda x : x.upper().replace(\"BHP\",'').strip())\n\n# Handling 29.9 hp \/ 22 kW type data\ndf['power']  = df['power'].apply(lambda x : x if x.find(\"HP\") == -1 else str(float(x[:x.find(\"HP\")-1])))\n#1 kw = 1.34hp\ndf['power'] = df['power'].apply(lambda x : x if x.find(\"KW\") == -1 else str(float(x[:x.find(\"KW\")-1])*1.34))\n#1 ps = 0.98592 hp\ndf['power'] = df['power'].apply(lambda x : x if x.find(\"PS\") == -1 else str(float(x[:x.find(\"PS\")-1])*0.98592))\n\ndf['power'] = df['power'].astype(float)\n#Taking figure upto 2 decimal palces\ndf['power'] = round(df['power'],2)","3d9726f6":"df.head()","424dc7a6":"df.owner.unique()","eee547f2":"df.location.unique()","ead3bb24":"df['bike_model'] = df['model_name'].apply(lambda x:' '.join(x.split()[1:3]))","57433ee2":"df.head()","2aba63e2":"df.bike_model.unique()","b6600b19":"plt.figure(figsize=(10,30))\n# plt.suptitle(\"Numerical Distribution Plots\")\n\nplt.subplot(6,1,1)\nsns.distplot(df['model_year'])\n\nplt.subplot(6,1,2)\nsns.distplot(df['kms_driven'])\n\nplt.subplot(6,1,3)\nsns.distplot(df['mileage'])\n\nplt.subplot(6,1,4)\nsns.distplot(df['power'])\n\nplt.subplot(6,1,5)\nsns.distplot(df['price'])\n\nplt.subplot(6,1,6)\nsns.distplot(df['age'])\n\nplt.show()","9672021d":"# plt.figure(figsize=(8,5))\ndf['company'].value_counts().plot(kind='bar',figsize=(8,5),color='green')\nplt.show()","d0591b4b":"plt.figure(figsize=(8,5))\n\nsns.catplot(data=df,x='company',y='price')\nplt.xticks(rotation='vertical')\n\nplt.show()","0b9db864":"freq_model = df['bike_model'].value_counts()[:20]","3a916c53":"freq_model.plot(kind='bar',figsize=(8,6))","4f3734bf":"model_price = df[['bike_model','price']].sort_values(by='price',ascending=False)[:30]","cbbba241":"plt.figure(figsize=(10,5))\n\nsns.barplot(data=model_price,x='bike_model',y='price',palette='viridis')\nplt.xticks(rotation='vertical')\n\nplt.show()","a4804da6":"df.head()","a0dcc752":"df['owner'].value_counts().plot(kind='bar')\n\nplt.show()","a0e9a646":"plt.figure(figsize=(6,5))\n\nsns.barplot(data=df,x='owner',y='price',palette='viridis')\nplt.xticks(rotation='vertical')\n\nplt.show()","f9dcdc90":"plt.figure(figsize=(6,5))\n\nsns.lineplot(data=df,y='price',x='power',palette='viridis')\nplt.xticks(rotation='vertical')\n\nplt.show()","c1a41dae":"fre_loc = df['location'].value_counts()[:20]","6426ae36":"fre_loc.plot(kind='bar',figsize=(8,6),color='m')","6c9e187f":"loc_pri = df[['location','price']].sort_values(by='price',ascending=False)[:30]","09cb449c":"plt.figure(figsize=(10,5))\n\nsns.barplot(data=loc_pri,x='location',y='price',palette='viridis')\nplt.xticks(rotation='vertical')\n\nplt.show()","6616c701":"sns.pairplot(df,hue='owner')\nplt.show()","bd91bb5a":"plt.figure(figsize=(8,5))\n\nsns.heatmap(df.corr(),annot=True,cbar=False,cmap='viridis')\nplt.show()","33af550b":"dff = df.copy()","ba8122e5":"dff.head()","22c4d9ba":"plt.figure(figsize=(12,9))\n\nplt.subplot(3,2,1)\nsns.boxplot(dff['mileage'])\n\nplt.subplot(3,2,2)\nsns.boxplot(dff['age'])\n\nplt.show()","a9356232":"dff = dff[(dff['mileage']<70) & (dff['mileage']>20)]\ndff = dff[dff['age']<10]","41860b22":"table = pd.pivot_table(df, index='company', values=['power','mileage','age']).sort_values(by ='mileage',ascending=False)[:10]\ntable","f3083a82":"table.plot(kind='bar',figsize=(12,8))\nplt.show()","d1235135":"table2 = pd.pivot_table(df, index='owner', values=['price','kms_driven']).sort_values(by ='price',ascending=False)[:10]\ntable2","9e6d68d0":"table2.plot(kind='bar',figsize=(12,8))\nplt.show()","a861eb81":"encoder =LabelEncoder()","b3eeb1c5":"columns = ['model_name','owner','location','company','bike_model','model_year']","805db907":"for i in columns:\n    dff[i] = encoder.fit_transform(dff[i])","0ed1cdfc":"dff.head()\n","833b54fa":"dff.drop(columns=['model_name'],inplace=True)","36023009":"dff.head()","87e8efe9":"X= dff.drop(columns=['price'],axis=1)\ny=dff['price']","f6fb2a8a":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.30,random_state=100)","e346c234":"lr = LinearRegression()","4667aa90":"lr.fit(x_train,y_train)","95a33204":"predict_lr = lr.predict(x_test)","d4e58204":"score_lr = round((lr.score(x_test,y_test)*100),2)\nprint (\"Model Score\",score_lr,\"%\")","a47b5a95":"rid =Ridge(alpha=100)","a1666e5a":"rid.fit(x_train,y_train)","b0e6a0fc":"predic_rid = rid.predict(x_test)","6d4b0c77":"score_rid = round((rid.score(x_test,y_test)*100),2)\nprint (\"Model Score\",score_rid,\"%\")","50865076":"data = [\"Liner Regression\",score_lr],[\"Rigd Regression\",score_rid]","b3586413":"final = pd.DataFrame(data,columns=['Algorithm','Model Score'],index=[1,2])\nfinal","ff80d34b":"# Data Analysis","9050aca9":"## Thank You","fdc82266":"# Data Preprocessing","9b8287d6":"# Modeling","b506eb6f":"# Importing Library","64be5af9":"# Reading Data","97b8d0a5":"# **INDEX**\n* About This Data\n* Importing Library\n* Reading Data\n* Data Preprocesing\n* Data Analysis\n* Modeling","e84b66f5":"# About This Data\n This dataset contains around 8K records of used bike prices in India. The data has been collected from one of the leading online portal to sell used bikes in India via web scrapping.\n\n## Dataset Information\nmodel_name\nThe name of the bike's model. It contains some additional information like model year,engine etc.\n\nmodel_year\nThe year in which the model was built.\n\nkms_driven\nTotal kilometers the bike has been driven.\n\nowner\nThe represents which type of owner the bike has like it is first owner which means the current owner had bought the this bike as new, second owner means the bike has been sold to this owner from first owner and so on.\n\nlocation\nThe location of the seller.\n\nmileage\nAverage mileage the bike gives. Its is represented as kilometer per liter of petrol (kmpl).\n\npower\nPower is in terms of Bhp. BHP is the rate at which the torque generated by the engine in a bike is delivered to the wheels. Such that faster the deliverability, higher is the speed of the motorcycle and vice versa. For a bike that consists of a lower BHP can pull higher loads and for a bike that contains a greater BHP can propel the bike at faster speeds.\nThus, BHP depends on several factors such as deliverability, weight and power generation of the bike. It\u2019s the most common way of rating a bike and determining which ones might be faster\n\nprice\nThis is the target variable of the dataset. t is in Indian rupee\n\n\n![](https:\/\/i.pinimg.com\/736x\/4d\/65\/90\/4d6590bfa8e3d939b3ddf78a507cc85f.jpg)"}}