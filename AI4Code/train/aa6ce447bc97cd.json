{"cell_type":{"84bb6540":"code","fcc420cd":"code","7a3504bc":"code","f188a1f1":"code","7a8d7282":"code","75f55de5":"code","14975188":"code","83084394":"code","e53aeedf":"code","131d0efd":"code","89c04b33":"code","94a07e89":"code","ed79748d":"code","ad377f94":"code","1e64cc8d":"code","e0100195":"code","f0d172dc":"code","277cbb1d":"code","bbe4a631":"code","bf0c4d39":"code","0825dc9c":"code","103fb88a":"code","ce413c6b":"code","9a694a05":"code","11b105fe":"code","5788e51a":"code","42a8d259":"code","1c7ed153":"markdown","25c9af42":"markdown","a3504dfd":"markdown","3f5445ce":"markdown","582d79a5":"markdown","c04c2835":"markdown","d1500f0d":"markdown","20f0ec88":"markdown","46cdd696":"markdown","55e8c501":"markdown","794eab72":"markdown","cc9b9979":"markdown","bc6078ed":"markdown","1f49189c":"markdown"},"source":{"84bb6540":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split as tts\nfrom sklearn import metrics","fcc420cd":"df = pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')\ndisplay(df)\ndf.info()\ndf.describe()","7a3504bc":"X = df.drop([\"No\",\"Y house price of unit area\"],axis = 1)\ny = df[\"Y house price of unit area\"]\nX_train, X_test, y_train, y_test = tts(X,y,test_size=0.1,random_state=101)","f188a1f1":"from sklearn.preprocessing import PolynomialFeatures","7a8d7282":"def modelpoly(degree):\n    PolynomialConverter = PolynomialFeatures(degree = degree, include_bias= False)\n    return PolynomialConverter","75f55de5":"modelpoly_deg2 = modelpoly(2);\npoly_deg2_fea = modelpoly_deg2.fit(X);\npoly_deg2_fea = modelpoly_deg2.transform(X);","14975188":"X = df.drop([\"No\",\"Y house price of unit area\"],axis = 1)\ny = df[\"Y house price of unit area\"]","83084394":"X_train, X_test, y_train, y_test = tts(poly_deg2_fea,y,test_size=0.1,random_state=101)","e53aeedf":"from sklearn.preprocessing import StandardScaler","131d0efd":"Scaler = StandardScaler();","89c04b33":"Scaler.fit(X_train);","94a07e89":"X_train = Scaler.transform(X_train);\nX_test = Scaler.transform(X_test);","ed79748d":"from sklearn.linear_model import LassoCV","ad377f94":"LassoCV_model = LassoCV(eps=0.02,n_alphas=200,cv=10,max_iter=10000)","1e64cc8d":"LassoCV_model.fit(X_train,y_train)","e0100195":"y_pred = LassoCV_model.predict(X_test)","f0d172dc":"MAE = metrics.mean_absolute_error(y_test,y_pred)\nMSE = metrics.mean_squared_error(y_test,y_pred)\nRMSE = np.sqrt(MSE)\nprint(pd.DataFrame([MAE,MSE,RMSE],['MAE','MSE','RMSE'],columns = ['Metrics']))","277cbb1d":"  from sklearn.linear_model import RidgeCV","bbe4a631":"RidgeCV_model = RidgeCV(alphas=[0.1,1,10], scoring = \"neg_mean_absolute_error\")","bf0c4d39":"RidgeCV_model.fit(X_train,y_train)","0825dc9c":"y_pred = RidgeCV_model.predict(X_test)","103fb88a":"MAE = metrics.mean_absolute_error(y_test,y_pred)\nMSE = metrics.mean_squared_error(y_test,y_pred)\nRMSE = np.sqrt(MSE)\nprint(f\"Best alpha = {RidgeCV_model.alpha_}\\n\")\nprint(pd.DataFrame([MAE,MSE,RMSE],['MAE','MSE','RMSE'],columns = ['Metrics']))","ce413c6b":" from sklearn.linear_model import ElasticNetCV","9a694a05":"ElasticNetCV_Model = ElasticNetCV(l1_ratio=[.1, .5, .7, .9, .95, .99, 1],cv=10, max_iter=10000)","11b105fe":"ElasticNetCV_Model.fit(X_train,y_train)","5788e51a":"y_pred = ElasticNetCV_Model.predict(X_test)","42a8d259":"MAE = metrics.mean_absolute_error(y_test,y_pred)\nMSE = metrics.mean_squared_error(y_test,y_pred)\nRMSE = np.sqrt(MSE)\nprint(pd.DataFrame([MAE,MSE,RMSE],['MAE','MSE','RMSE'],columns = ['Metrics']))","1c7ed153":"# Step6: Scaling the Data","25c9af42":"## 1-Lasso Regression","a3504dfd":"## 3-ElasticNetCV","3f5445ce":"# Step5: Split Data to Train and Test","582d79a5":"## Evaluation","c04c2835":"# Step4: Preprocessing (Polynomial features)","d1500f0d":"# Step1: Libraries","20f0ec88":"## Evaluation","46cdd696":"# Step2: Data and Data Overview","55e8c501":"# Example of Predictive Modelling by Using regularization techniques (Lasso,Ridge Regression,Elastic Net)\n> 1. We want to predict the housing price (per unit area) by using Real estate database.\n> 2. real estate database has six features consist of (transaction date, house age, distance to the nearest, number of convenience stores, latitude) MRT station, and 414 observations with house price of the unit area as targets\n1. Lasso: RSS + The absolute value of the magnitude of coefficients\n2. Ridge: RSS + The square of the magnitude of coefficients\n3. Elastic net: Combines Lasso and Ridge with the addition of an alpha parameter deciding the ratio betweem them.","794eab72":"# Step 7: Regularization","cc9b9979":"# Step3: Determine the Features and Labels","bc6078ed":"## Evaluation ","1f49189c":"## 2-Ridge Regression"}}