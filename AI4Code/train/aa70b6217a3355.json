{"cell_type":{"90b35a3b":"code","7995348a":"code","cf72458d":"code","06c90e0f":"code","0a3d353e":"code","85198e50":"code","b2477d93":"code","34d2f628":"code","d7329a0e":"code","bb98714a":"code","9c7aa8ef":"code","4e398965":"code","a16fcc7d":"code","8a30d338":"code","28e7f5e3":"code","87a22756":"code","80971583":"code","6e698e40":"code","29947c45":"code","43001f88":"code","b137ad9c":"code","2ee94429":"code","56512335":"code","dce49aa5":"code","629b4b8f":"code","c79360b5":"code","086e5780":"code","dda2ddd0":"code","d310fc7d":"code","87601280":"code","37b8371b":"code","ad9393df":"code","84c62036":"code","3a771130":"code","6d43313c":"code","82242f6b":"code","2b70f3d6":"code","cf0c21c4":"code","e089966e":"code","79c48a19":"code","8ead088d":"code","3e5b4f69":"code","7b5ff092":"code","23599cc0":"code","938c56fe":"code","0b70df28":"code","6134fb55":"code","0050fe77":"code","3b458d8a":"code","45ca9921":"code","e546e104":"code","dd2b7f72":"code","fe3bb49a":"code","841eef4a":"code","3f24d0a2":"code","69781001":"code","b6e2ca37":"code","7b8fe51c":"code","e0da3341":"code","a44676be":"code","1b589079":"code","88970aa9":"code","63c7a0bf":"code","f8464791":"code","76a6d35e":"markdown","adf1009a":"markdown","1d129ff6":"markdown","d4b45290":"markdown","f434b421":"markdown","26219c4b":"markdown","fc680df6":"markdown","a13fcc02":"markdown","c18a9f32":"markdown","6a51cd01":"markdown","7606b08e":"markdown","82b3ce57":"markdown","b3a3f569":"markdown","ba0a61fc":"markdown","d4fa763d":"markdown","bf804ec0":"markdown"},"source":{"90b35a3b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7995348a":"daily_activity = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv')\ndaily_activity","cf72458d":"daily_activity.info()\n#no null columns.","06c90e0f":"daily_activity[daily_activity.duplicated()]\n# no duplicate rows.","0a3d353e":"daily_activity['Id'] = daily_activity.Id.astype('category')\ndaily_activity['ActivityDate'] = pd.to_datetime(daily_activity.ActivityDate)\n\ndaily_activity['TotalHours'] = ((daily_activity.VeryActiveMinutes + daily_activity.FairlyActiveMinutes \n                               + daily_activity.LightlyActiveMinutes + daily_activity.SedentaryMinutes) \/ 60).round(2)\ndaily_activity['Day'] = daily_activity['ActivityDate'].dt.day_name()\n\nweek_day = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndaily_activity['Day'] = daily_activity['Day'].astype('category')\ndaily_activity['Day'].cat.reorder_categories(week_day, inplace= True)","85198e50":"daily_activity","b2477d93":"#hourly_ativity = \"hourlyCalories_merged.csv\" + \"hourlyIntensities_merged.csv\" + \"hourlySteps_merged.csv\"\n\nhourly_calories = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyCalories_merged.csv')\nhourly_intensities = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyIntensities_merged.csv')\nhourly_steps = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv')","34d2f628":"print('hourly_calories | Total rows:',len(hourly_calories), '| Column Names:', hourly_calories.columns)\nprint('hourly_intensities | Total rows:',len(hourly_intensities), '| Column Names:',hourly_intensities.columns)\nprint('hourly_steps | Total rows:',len(hourly_steps), '| Column Names:',hourly_steps.columns)","d7329a0e":"hourly_activity = pd.merge(hourly_calories, hourly_intensities, how='left', left_on=['Id','ActivityHour'], right_on = ['Id','ActivityHour'])\nhourly_activity = pd.merge(hourly_activity, hourly_steps, how='left', left_on=['Id','ActivityHour'], right_on = ['Id','ActivityHour'])","bb98714a":"hourly_activity","9c7aa8ef":"hourly_activity.info()\n# no null values","4e398965":"hourly_activity[hourly_activity.duplicated()]\n# no duplicate rows","a16fcc7d":"hourly_activity['Id'] = hourly_activity.Id.astype('category')\nhourly_activity['ActivityHour'] = pd.to_datetime(hourly_activity.ActivityHour)\nhourly_activity['Hour'] = hourly_activity.ActivityHour.dt.hour","8a30d338":"hourly_activity","28e7f5e3":"daily_sleep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv')\ndaily_sleep","87a22756":"daily_sleep.columns = ['Id', 'Date', 'TotalSleepRecords', 'MinutesAsleep', 'MinutesInBed']","80971583":"daily_sleep.info()\n# no null values.","6e698e40":"daily_sleep[daily_sleep.duplicated()]","29947c45":"daily_sleep = daily_sleep.drop_duplicates()\ndaily_sleep\n# 3 duplicate rows removed","43001f88":"import warnings\nwarnings.filterwarnings('ignore')\n\ndaily_sleep['Id'] = daily_sleep.Id.astype('category')\ndaily_sleep['Date'] = pd.to_datetime(daily_sleep.Date)","b137ad9c":"daily_sleep['HoursAsleep'] = (daily_sleep.MinutesAsleep \/ 60).round(2)\ndaily_sleep['HoursInBed'] = (daily_sleep.MinutesInBed \/ 60).round(2)\ndaily_sleep['MinutesNotAsleep'] = daily_sleep.MinutesInBed - daily_sleep.MinutesAsleep\ndaily_sleep['PercentAsleep'] = (daily_sleep.MinutesAsleep \/ daily_sleep.MinutesInBed).round(2)\n\ndaily_sleep['Day'] = daily_sleep['Date'].dt.day_name()\nweek_day = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndaily_sleep['Day'] = daily_sleep['Day'].astype('category')\ndaily_sleep['Day'].cat.reorder_categories(week_day, inplace= True)","2ee94429":"daily_sleep","56512335":"minute_sleep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/minuteSleep_merged.csv')\nminute_sleep","dce49aa5":"minute_sleep.info()\n#no null values","629b4b8f":"minute_sleep[minute_sleep.duplicated()]","c79360b5":"#Randomly see what the duplicate rows look like.\nminute_sleep[(minute_sleep.Id == 4702921684) & (minute_sleep.date == '5\/7\/2016 6:12:00 AM')]","086e5780":"minute_sleep = minute_sleep.drop_duplicates()\nminute_sleep\n# 543 rows removed","dda2ddd0":"minute_sleep.info()","d310fc7d":"minute_sleep.columns = ['Id', 'Date', 'Value', 'LogId']","87601280":"minute_sleep['Id'] = minute_sleep.Id.astype('category')\nminute_sleep['LogId'] = minute_sleep.LogId.astype('category')\nminute_sleep['Date'] = pd.to_datetime(minute_sleep.Date)","37b8371b":"minute_sleep","ad9393df":"summary_daily_activity = daily_activity.describe().transpose().round(2)\nsummary_daily_activity","84c62036":"Q1_df = summary_daily_activity[8:12]['mean']\nQ1_df","3a771130":"pie, ax = plt.subplots(figsize=[8,8])\nlabels = Q1_df.keys()\nplt.pie(x=Q1_df, autopct=\"%.1f%%\", labels=labels, pctdistance=0.5,labeldistance = 1.2) #explode=[0.05]*4)#\nplt.title(\"Activity Level Breakdown\", fontsize=14)\nplt.show()\n\n# On average 81.3% of the time people are sedentary.","6d43313c":"plt.rcParams['figure.figsize'] = 10,6\nsns.set_style('darkgrid')\n\nf, axes = plt.subplots(2, 1, figsize = (10,12), sharex=True)\n\nsns.boxplot(data = daily_activity, x='Day', y='Calories', ax = axes[0])\nsns.boxplot(data = daily_activity, x='Day', y='TotalSteps', ax = axes[1])\nplt.show()\n\n# The calories burned do not vary much throughout the week.\n\n# Although the median steps taken throughout the week do not differ much, \n# on Saturdays the data is skewed towards people taking more steps, while on Sunday they take less steps.","82242f6b":"# Create a table to summarise the average values per hour.\n\nsummary_hourly_activity = hourly_activity.groupby(['Hour']).mean().reset_index().round(2)\nsummary_hourly_activity.columns = ['Hour', 'AvgCalories', 'AvgTotalIntensity', 'AvgIntensity', 'AvgSteps']\nsummary_hourly_activity","2b70f3d6":"f, axes = plt.subplots(3, 1, figsize = (10,7), sharex=True)\n\nQ3_axis = np.arange(0,24)\nQ3_f1 = sns.lineplot(data = summary_hourly_activity, x = 'Hour', y = 'AvgCalories', ax = axes[0])\nQ3_f2 = sns.lineplot(data = summary_hourly_activity, x = 'Hour', y = 'AvgSteps', ax = axes[1])\nQ3_f3 = sns.lineplot(data = summary_hourly_activity, x = 'Hour', y = 'AvgIntensity', ax = axes[2])\n\nQ3_f1.set_xticks(Q3_axis)\nplt.show()","cf0c21c4":"#The three plots above have very similar shapes, showing they are very highly correlated with each other. \n#Let's verify this with a heatmap.\n\ncorrelations = summary_hourly_activity.corr()\nsns.heatmap(correlations, annot = True)\nplt.show()","e089966e":"#Just to prove the correlation, we can see here that StepTotal and Calories are positively correlated.\n\nsns.lmplot(data = hourly_activity, x = 'StepTotal', y = 'Calories', height = 6, aspect = 1.5)\nplt.show()","79c48a19":"daily_sleep.describe().transpose()","8ead088d":"Q5_axis = np.arange(0,14)\nQ5_f1 = sns.histplot(daily_sleep.HoursAsleep)\nQ5_f1.set_xticks(Q5_axis)\nplt.show()\n\n# On average people get approximately 7 hours of sleep per day.\n# It is interesting to note the number of people who record only 1-2 hours of sleep a day.","3e5b4f69":"Q6_axis = np.arange(0,400,20)\n\nQ6_f1 = sns.histplot(daily_sleep.MinutesNotAsleep, bins=40)\nQ6_f1.set_xticks(Q6_axis)\nplt.show()\n\n# On average people spend 40 minutes lying awake in bed.","7b5ff092":"sns.boxplot(x = daily_sleep.Day, y = daily_sleep.HoursAsleep)\nplt.show()\n\n# There is a wider variation in sleep time on the weekends.\n# Also people spend more time in bed on Sundays.","23599cc0":"Q7_df = daily_sleep.groupby(['Day']).mean()\nQ7_df","938c56fe":"sns.barplot(data = Q7_df, x = Q7_df.index, y='HoursAsleep')\nplt.show()\n# On average people get more than 7 hours of sleep on Wednesday and Sunday, and less than 7 on other days.","0b70df28":"daily_sleep.head()","6134fb55":"# Here I assume that more than 1 sleep record means the user took a nap sometime in the day in addition to their normal sleep at night.\n\ndaily_sleep.groupby(['TotalSleepRecords'])['Id'].count().to_frame()","0050fe77":"Q8_df = daily_sleep[daily_sleep.TotalSleepRecords >1].groupby(['Day'])['Id'].count().to_frame()\n\nQ8_df.reset_index(inplace=True)\nQ8_df = Q8_df.rename(columns = {'Id':'NapCount'})\nQ8_df","3b458d8a":"sns.catplot(data=Q8_df, kind='bar', x='Day', y='NapCount', \n            height = 6, aspect = 1.5)\n\nplt.show()","45ca9921":"len(minute_sleep.LogId.unique())\n\n# There are 459 sleep \"sessions\". So let's create a table to summarise these sleep session.","e546e104":"sleep_session = minute_sleep.groupby(['LogId'])['Id'].count().to_frame().reset_index()\nsleep_session = sleep_session.rename(columns = {'Id':'SleepHours'})\nsleep_session['SleepHours'] = (sleep_session.SleepHours\/60).round(2)","dd2b7f72":"x = list(sleep_session.LogId)\ntime_list = []\nfor record in x:\n    df = minute_sleep[minute_sleep.LogId == record]\n    min_time = min(df.Date)\n    time_list.append(min_time)","fe3bb49a":"sleep_session['StartTime'] = time_list\nsleep_session['StartHour'] = sleep_session.StartTime.dt.hour\nsleep_session['Day'] = sleep_session['StartTime'].dt.day_name()\nsleep_session['Day'] = sleep_session['Day'].astype('category')\n\nweek_day = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nsleep_session['Day'].cat.reorder_categories(week_day, inplace= True)","841eef4a":"# Create a nap column to identify when a particular LogId start in the day time.\nsleep_session['Nap'] = sleep_session.StartHour.apply(lambda x: 'Yes' if (x >= 9) & (x <=19) else 'No')","3f24d0a2":"sleep_session","69781001":"Q9_axis = np.arange(0,24)\n\nQ9_f1 = sns.histplot(sleep_session.StartHour, bins = 23)\nQ9_f1.set_xticks(Q9_axis)\nplt.show()\n\n# Most people go to bed before midnight.","b6e2ca37":"# Now let's see how bedtime differs by Day of the week.\n# Here we can see that more people are going to bed after midnight as the weekend gets nearer.\n\nQ9_f2 = sns.FacetGrid(sleep_session, col='Day')\nkws = dict(bins = 23)\nQ9_f2.map(plt.hist, 'StartHour', **kws)\nplt.show()","7b8fe51c":"f, axes = plt.subplots(1, 1, figsize = (12,7))\n\n# midday naps are removed to reduce clutter\nQ10_f1 = sns.boxplot(data=(sleep_session[sleep_session.Nap == 'No']), x='StartHour', y='SleepHours') \nQ10_f1.axhline(7, c='gray', ls='--')\nQ10_f1.axhline(9, c='gray', ls='--')\nplt.show()\n\n# As expected those who go to bed earlier tend to get the recommended 7-9 hours of sleep.","e0da3341":"# First we count how many times the user used their Fitbit to record their sleep in the month under review.\n\nsleep_records = daily_sleep.groupby(['Id'])['Date'].count().to_frame().sort_values(by = 'Date', ascending=True)\nsleep_records.reset_index(inplace=True)\nsleep_records = sleep_records.rename(columns = {'Date':'TotalSleepRecords'})\nsleep_records.head()","a44676be":"# Then we count how many days each user wore their Fitbit throughout the month. \n\nactivity_records = daily_activity.groupby(['Id'])['ActivityDate'].count().to_frame().sort_values(by = 'ActivityDate', ascending=True)\nactivity_records.reset_index(inplace=True)\nactivity_records = activity_records.rename(columns = {'ActivityDate':'TotalActivityRecords'})\nactivity_records.head()","1b589079":"#And now we combine the two.\n\nuser_records = pd.merge(activity_records, sleep_records, how='outer', left_on=['Id'], right_on = ['Id'])\n\nuser_records.head()","88970aa9":"user_records['TotalSleepRecords'] = user_records['TotalSleepRecords'].fillna(0)\nuser_records['Id'] = user_records.Id.astype('category')\nuser_records['TotalSleepRecords'] = user_records.TotalSleepRecords.astype('int')","63c7a0bf":"user_records.sort_values(by='TotalSleepRecords')\n\n#Here we can see that some people do not regularly wear their Fitbit to monitor their sleep.","f8464791":"user_records.describe()\n\n# On average a person wears their Fitbit for 28 days, but only in 12 of those days do they monitor their sleep.\n# Half of all users record their sleep only 5 times or less throughout the month.","76a6d35e":"### 3. Prepare the daily_sleep dataset:","adf1009a":"### 4. Prepare the minute_sleep dataset:","1d129ff6":"### There are 4 tables to create: daily_activity,  hourly_activity,   daily_sleep,  minute_sleep\n### 1. Prepate the daily_activity dataset:","d4b45290":"### Q5: How many hours of sleep do fitbit users get in a day?","f434b421":"### Q11: Do people regularly wear their Fitbit throughout the day and to monitor their sleep?","26219c4b":"### 2. Prepare the hourly_activity dataset:","fc680df6":"# Google Data Analytics Professional Certificate Case Study.\nBellabeat, a high-tech manufacturer of health-focused products for women is a successful small company, but they have the potential to become a larger player in the global smart device market. Ur\u0161ka Sr\u0161en, cofounder and Chief Creative Officer of Bellabeat, believes that analyzing smart device fitness data could help unlock new growth opportunities for the company. Hence the objective of this case study is to analyze smart device data to gain insight into how consumers are using their smart devices. Based on the available dataset, activity and sleep data will be analysed.","a13fcc02":"### Q3: How do Calories and Steps vary by the hour?","c18a9f32":"### Q9: What time do people usually go to bed?","6a51cd01":"### Q1: Let's look at people Activity Level breakdown.","7606b08e":"# Let's Start Analysing!","82b3ce57":"### Q2: How do people's activity vary throughout the week?","b3a3f569":"### Q7: Do people have different sleep patterns on different day of the week?","ba0a61fc":"### Q8: How frequently do people take naps?","d4fa763d":"### Q6: How much time do people spend awake in bed?","bf804ec0":"### Q10: How is the bedtime and duration of sleep correlated?"}}