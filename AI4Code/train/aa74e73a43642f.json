{"cell_type":{"a5cfb112":"code","3e82d33b":"code","63c493e7":"code","c57b32bc":"code","e7e0d459":"code","d230dc6b":"code","6bfaff3a":"code","e4646e13":"code","5b298503":"code","69589bd8":"code","452444a3":"code","36309c57":"code","502ed3f1":"code","8ec2c22e":"code","9f016f60":"code","8dd597f1":"code","207fc15b":"code","4af6e1f4":"code","c4b603e7":"code","786a9f77":"code","6bc5e653":"code","310c289b":"code","a858840f":"code","1d666c67":"code","0f5ff5db":"code","7e804550":"code","f77aa919":"code","232f65b7":"code","29b1f4f8":"code","a7917a9d":"code","dfa7e945":"code","839fbd70":"code","8332a2f4":"markdown","f9182511":"markdown","08b58c94":"markdown","43b7aeaa":"markdown"},"source":{"a5cfb112":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e82d33b":"#Importing the data\ndf=pd.read_csv('\/kaggle\/input\/50-startups\/50_Startups.csv')","63c493e7":"#Check first 5 records\ndf.head()","c57b32bc":"#get the column names\nlist(df.columns)","e7e0d459":"#get the count of rows and columns in data\ndf.shape","d230dc6b":"#Identify the unique values\ndf.nunique()","6bfaff3a":"#Identify the datatype of columns\ndf.dtypes","e4646e13":"#get the descriptive statistics details of data\ndf.describe()","5b298503":"#Boxplot to understand the distribution of each varibale\ndf.boxplot()\nplt.show()","69589bd8":"#Understand the correlation of variables\ncorr=df.corr()\ncorr.style.background_gradient(cmap='coolwarm').set_precision(2)","452444a3":"#Histogram of R&D spend\nplt.hist(data=df,x='R&D Spend')\nplt.show()","36309c57":"#Histogram of Adminstration\nplt.hist(data=df,x='Administration')\nplt.show()","502ed3f1":"#Histogram for marketing spend\nplt.hist(data=df,x='Marketing Spend')\nplt.show()","8ec2c22e":"#Identify the null values from data\ndf.isnull().sum()","9f016f60":"#seprating the independent varibales from data\nindependent=df.drop('Profit',axis=1)","8dd597f1":"#Seprating the dependent varibale\ndependent=df['Profit']","207fc15b":"#Converting the categorical variables to binary format\nstate=pd.get_dummies(independent,drop_first=True)","4af6e1f4":"#removing the categorical variable\nindependent=independent.drop('State',axis=1)","c4b603e7":"#Concatenating the binary format of categorical variable to the dataframe of independent variables\nindependent=pd.concat([independent,state],axis=1)","786a9f77":"#Checking the independent variable dataset\nindependent.head(2)","6bc5e653":"#Split the data using train test method\nfrom sklearn.model_selection import train_test_split","310c289b":"x_train,x_test,y_train,y_test=train_test_split(independent,dependent,test_size=0.22,random_state=42)","a858840f":"#Checking the size of each splitted dataset\nx_train.shape,x_test.shape,y_train.shape,y_test.shape","1d666c67":"#Importing Linear Regression model\nfrom sklearn.linear_model import LinearRegression","0f5ff5db":"LR=LinearRegression()","7e804550":"#Fitting the model with training data\nLR.fit(x_train,y_train)","f77aa919":"#Predicting the values\ny_pred=LR.predict(x_test)","232f65b7":"y_pred","29b1f4f8":"#Importing the evaluation metrics\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score","a7917a9d":"#Analyzing the metrics\nRsquare=r2_score(y_test,y_pred)\nprint('The R-Square value of model is:', Rsquare)","dfa7e945":"MAE=mean_absolute_error(y_test,y_pred)\nprint('The MAE value of model is:', MAE)","839fbd70":"MSE=mean_squared_error(y_test,y_pred)\nprint('The MSE value of model is:', MSE)","8332a2f4":"# Result\n**As we can see we have got the r-square value of 89% we can conclude that our fitted regression model is good for future predictions**","f9182511":"**Basic assumptions of regression**\n\n1.Linearity:- There should be linear relationship between dependent and independent variable\n\n2.Normality:- For any fixed value of x,y should be normally distributed\n\n3.Independency:- All the observations should be independent of each other\n\n4.Homosecdasticity:-Errors should be independent and identically distributed\n\n**Null and alternative hypothesis for regression**\n\n**H0**: There is no relationship between x and y\n        i.e. b1=b2=b3....bn=0\n        \n**H1**: The relation between x and y is not 0\n        i.e. at least one of bj not equal 0\n\n","08b58c94":"# ****Multiple Linear Regression****","43b7aeaa":"# ***#Performing this analysis in order to understand the kaggle platform***"}}