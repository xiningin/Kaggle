{"cell_type":{"0d86acfb":"code","db560fed":"code","878a493e":"code","106033e3":"code","41c9b858":"code","88b8269b":"code","37d691eb":"code","fb5b0765":"code","256ddd5b":"code","c2711785":"code","2f0cb0c6":"code","922b7faa":"code","edc3c5ef":"code","b7f8b4e5":"code","bdeb76fa":"code","13e532cb":"code","4b6e8b9b":"code","a65951cd":"code","e2df8524":"code","744a177c":"code","b1a3420b":"code","ed7b0fab":"code","d0fd31e4":"code","6a48db09":"code","2d0d1c1a":"code","a8531cfd":"code","3496fc61":"markdown","f055e20c":"markdown","3248c236":"markdown","1e342b68":"markdown","18502fd5":"markdown","7f2283b0":"markdown","4c9c59ae":"markdown","625dd001":"markdown","55cff150":"markdown"},"source":{"0d86acfb":"# Importing libraries\n# -------------------\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","db560fed":"# Importing the dataset\n# ---------------------\ndataset = pd.read_csv('..\/input\/simple-dataset\/simple_dataset.csv')","878a493e":"type(dataset)","106033e3":"dataset.shape","41c9b858":"dataset.head()","88b8269b":"dataset.describe()","37d691eb":"dataset.info()","fb5b0765":"# Collecting X and Y\n# ------------------\nx = dataset.iloc[:, 0].values  # predictor (independent_variable) or input_variables\ny = dataset.iloc[:, 1].values  # target    (dependent_variable)   or outcome_variable","256ddd5b":"x","c2711785":"y","2f0cb0c6":"# y = mx + c","922b7faa":"# Linear Regression - Least Square Method formula \n# -----------------------------------------------\nn = 0\nd = 0\n\nfor i in range(len(x)):\n    n += (x[i] - np.mean(x)) * (y[i] - np.mean(y))\n    d += (x[i] - np.mean(x)) ** 2","edc3c5ef":"# y = mx + c\n# Using the formula to calculate m and c\n# --------------------------------------\n\nm = n \/ d    # coef or slope of the line","b7f8b4e5":"m  # coef.","bdeb76fa":"# y = mx + c\n# c = y - mx","13e532cb":"c = np.mean(y) - (m * np.mean(x))","4b6e8b9b":"c  # intercept","a65951cd":"# Calculating line values X and y_pred\n# ------------------------------------\nX = np.linspace(1, 5, 5)","e2df8524":"X       # actual values of x","744a177c":"y_pred = (m * X) + c   # predict values of y (for Regression Line) ","b1a3420b":"y_pred","ed7b0fab":"# Visualising: Plotting Values and Regression Line\n# -------------------------------------------------\n# Ploting Values \nplt.scatter(x, y, color='red', label=\"Scatter Points\")\n# Ploting Regression Line\nplt.plot(X, y_pred, color='blue', label='Regression Line')\nplt.title('x vs y')\nplt.xlabel('x data')\nplt.ylabel('y data')\nplt.legend()\nplt.show()","d0fd31e4":"y_pred","6a48db09":"sst = 0\nssr = 0\n\nfor i in range(len(x)):\n    sst += (y[i] - np.mean(y)) ** 2\n    ssr += (y[i] - y_pred[i]) ** 2","2d0d1c1a":"r2 = 1 - (ssr \/ sst) ","a8531cfd":"r2","3496fc61":"### Linear Regression","f055e20c":"Implementation using Python (NumPy, Pandas, Matplotlib & Seaborn)","3248c236":"### Simple Linear Regression ","1e342b68":"### Types of Regression","18502fd5":"## Machine Learning Algorithm - Regression","7f2283b0":"Regression analysis is a predictive modelling technique.\n\nIt estimates the relationship between a dependent (target) and an independent variable (predictor).","4c9c59ae":"- Simple Linear Regression\n- Multiple Linear Regression\n- Polynomial Linear Regression","625dd001":"A linear regression is one of the easiest statistical models in machine learning. It is used to show the linear relationship between a dependent variable and one or more independent variables.","55cff150":"## Happy Machine Learning :)"}}