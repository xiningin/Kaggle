{"cell_type":{"cb884ed4":"code","9c678996":"code","5e9b35ec":"code","57412fbd":"code","a2c9328f":"code","7bf70a52":"code","7ab2171a":"code","07105e84":"code","7568a6e7":"code","ecefa199":"code","bbbb8c4a":"code","8234a44f":"code","93e023d7":"code","07e0c291":"code","de40b843":"code","59941fdd":"code","f4b22fb4":"code","63fc7028":"code","cb052415":"code","2cb5f494":"code","2b3533df":"code","0ea657fa":"code","be6d885c":"code","91e13f9b":"code","95fc9ce0":"code","e1f03f07":"code","d84759ad":"code","9e650f7d":"code","aead2bdb":"code","62f897a4":"code","5b785c27":"code","0590f164":"code","97e2c524":"code","8415ecde":"code","5bee7f56":"code","75c3b155":"code","ce80b03b":"code","934c169b":"code","9b9a9044":"code","0078876d":"code","80582e33":"code","22d054e6":"code","b12ebe6f":"code","ca150c7b":"code","de3f74c0":"code","26fd4db5":"code","f5074803":"code","3396e491":"code","7c5e215f":"code","11c722b9":"markdown","cf2df3ec":"markdown","f4313bf2":"markdown","0b762468":"markdown","4e75a22c":"markdown","f2f4ff11":"markdown","9946e4e7":"markdown","c1f70535":"markdown","0438bca9":"markdown","939724a2":"markdown","30bf396a":"markdown","efb4bffb":"markdown","30751aba":"markdown","8df88d9a":"markdown"},"source":{"cb884ed4":"import pandas as pd\nimport numpy as np","9c678996":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5e9b35ec":"df = pd.read_excel('3_NEWS_Sales.xlsx',sheet_name='NEWS')","57412fbd":"df","a2c9328f":"df.set_index('Month', inplace = True)\ndf","7bf70a52":"df['North']","7ab2171a":"# Pass a list of column names\ndf[ ['North','South'] ]","07105e84":"df['Jan']","7568a6e7":"df.loc['Jan']","ecefa199":"type(df['North'])","bbbb8c4a":"type(df.loc['Jan'])","8234a44f":"df['North_South'] = df['North'] + df['South']","93e023d7":"df","07e0c291":"df.drop('North_South',axis=1)","de40b843":"# Not inplace unless specified!\ndf","59941fdd":"df.drop('North_South',axis=1,inplace=True)","f4b22fb4":"df","63fc7028":"df.drop('Jan',axis=0)","cb052415":"df.loc['Jan']","2cb5f494":"df.iloc[0]","2b3533df":"df.loc['Mar','South']","0ea657fa":"df.loc[['Feb','Mar'],['East','West']]","be6d885c":"df","91e13f9b":"df>5000","95fc9ce0":"df[df>5000]","e1f03f07":"df[df['North']>8000]","d84759ad":"df[df['North']>8000]['East']","9e650f7d":"df[df['North']>8000][['East','West']]","aead2bdb":"df[(df['North']>8000) & (df['East'] > 5000)]","62f897a4":"df","5b785c27":"# Reset to default 0,1...n index\ndf.reset_index()","0590f164":"newind = 'Jan19 Feb19 Mar19 Apr19 May19 Jun19 Jul19 Aug19 Sep19 Oct19 Nov19 Dec19'.split()","97e2c524":"df['Year_19'] = newind","8415ecde":"df","5bee7f56":"df.set_index('Year_19')","75c3b155":"df","ce80b03b":"df.set_index('Year_19',inplace=True)","934c169b":"df","9b9a9044":"# Index Levels\noutside = ['G1','G1','G1','G2','G2','G2']\ninside = [1,2,3,1,2,3]\nhier_index = list(zip(outside,inside))\nhier_index = pd.MultiIndex.from_tuples(hier_index)","0078876d":"hier_index","80582e33":"df = pd.DataFrame(np.random.randn(6,2),index=hier_index,columns=['A','B'])\ndf","22d054e6":"df.loc['G1']","b12ebe6f":"df.loc['G1'].loc[1]","ca150c7b":"df.index.names","de3f74c0":"df.index.names = ['Group','Num']","26fd4db5":"df","f5074803":"df.xs('G1')","3396e491":"df.xs(['G1',1])","7c5e215f":"df.xs(1,level='Num')","11c722b9":"**Creating a new column:**","cf2df3ec":"## Selection and Indexing\n\nLet's learn the various methods to grab data from a DataFrame","f4313bf2":"** Removing Columns**","0b762468":"## Multi-Index and Index Hierarchy\n\nLet us go over how to work with Multi-Index, first we'll create a quick example of what a Multi-Indexed DataFrame would look like:","4e75a22c":"For two conditions you can use | and & with parenthesis:","f2f4ff11":"Or select based off of position instead of label ","9946e4e7":"** Selecting Rows**","c1f70535":"** Selecting subset of rows and columns **","0438bca9":"Can also drop rows this way:","939724a2":"Now let's show how to index this! For index hierarchy we use df.loc[], if this was on the columns axis, you would just use normal bracket notation df[]. Calling one level of the index returns the sub-dataframe:","30bf396a":"### Conditional Selection\n\nAn important feature of pandas is conditional selection using bracket notation, very similar to numpy:","efb4bffb":"# DataFrames\n\nDataFrames are the workhorse of pandas and are directly inspired by the R programming language. We can think of a DataFrame as a bunch of Series objects put together to share the same index.","30751aba":"## More Index Details\n\nLet's discuss some more features of indexing, including resetting the index or setting it something else. Also, about index hierarchy!","8df88d9a":"DataFrame Columns are just Series"}}