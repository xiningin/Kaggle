{"cell_type":{"a303d393":"code","d9e712ff":"code","29f8d511":"code","5b5589eb":"code","e14733b4":"code","8b8fac52":"code","8fa520c7":"code","548e0b45":"code","30ffa556":"code","3f95a22b":"code","ffde8013":"code","6fbeb78f":"code","ed40c357":"code","441eefec":"code","7cba77a4":"code","1cb04758":"code","4af73267":"code","856c478b":"code","9aceeb65":"code","141d62a1":"code","9bd9a016":"code","48f49449":"code","362cd29f":"code","d3678db9":"code","6f9552c8":"code","c39d411a":"code","36e20004":"code","e02c3104":"code","cb827b8c":"code","4f9bf7d9":"code","8aed5c2a":"code","c9b35897":"code","97ddfb2d":"code","9a265063":"markdown","4a579644":"markdown","2e9a36fa":"markdown","ade42e85":"markdown","8d957e1a":"markdown","83431fb1":"markdown","02f56565":"markdown","5a572947":"markdown","1d2f9f3d":"markdown","b89f74b7":"markdown","fe8c7fd0":"markdown","50f2ed97":"markdown","484affd0":"markdown","d512ccd6":"markdown","d571a123":"markdown","43ab55b0":"markdown","2360fc8e":"markdown","d6071017":"markdown"},"source":{"a303d393":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Conv2D, MaxPool2D, Flatten, BatchNormalization, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom keras.utils import plot_model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix","d9e712ff":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","29f8d511":"df_train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ndf_test = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\n\nprint(df_train.shape)\nprint(df_test.shape)","5b5589eb":"df_train.head()","e14733b4":"df_test.head()","8b8fac52":"x_train_temp = np.array(df_train.iloc[:, 1:])\ny_train = np.array(df_train.iloc[:, 0])\n\nx_test = np.array(df_test)","8fa520c7":"N_train_samples = x_train_temp.shape[0]\nx_train = x_train_temp.reshape(N_train_samples, 28, 28, 1)","548e0b45":"plt.figure(figsize=(30, 15))\n\nn = 10\n\nfor i in range(n):\n    plt.subplot(1, n, i+1)\n    img = x_train[i]\n    plt.imshow(img, cmap='Greys')\nplt.show()","30ffa556":"def get_class_arrays(class_index):\n    return x_train[y_train==class_index],y_train[y_train==class_index]","3f95a22b":"def get_mean_images():\n    for i in range(10):\n        class_arrayX, class_arrayY = get_class_arrays(i)\n        mean_image = class_arrayX.mean(axis=0)\n        plt.subplot(2, 5, i+1)\n        plt.axis(\"off\")\n        plt.title(i)\n        plt.imshow(mean_image.squeeze())\n        \nplt.figure(figsize=(15, 5))\nget_mean_images()","ffde8013":"def get_mean_barchart():\n    mean_values =[]\n    for i in range(10):\n        class_arrayX,class_arrayY = get_class_arrays(i)\n        mean_values.append(class_arrayX.mean())\n    \n    plt.bar(np.arange(10), mean_values)\n    plt.xticks(np.arange(10))\n    \nplt.figure(figsize=(15, 5))\nget_mean_barchart()","6fbeb78f":"y_train","ed40c357":"y_cat_train = to_categorical(y_train)\ny_cat_train","441eefec":"x_train = x_train\/255","7cba77a4":"X_train, X_val, Y_train, Y_val = train_test_split(x_train, y_cat_train, test_size=0.2, random_state=42)","1cb04758":"model = Sequential()\n\nmodel.add(Conv2D(6,(5,5), activation='relu', input_shape=(28,28,1)))\nmodel.add(BatchNormalization())\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Conv2D(16, (5,5), activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPool2D(pool_size=(2,2))),\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(BatchNormalization())\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(BatchNormalization())\nmodel.add(Dense(10, activation='softmax'))\n\nmodel.compile(loss='categorical_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])","4af73267":"model.summary()","856c478b":"plot_model(model, show_shapes=True, show_layer_names=False)","9aceeb65":"early_stop = EarlyStopping(monitor='val_loss',\n                           patience=5)","141d62a1":"# TRAIN MODEL\n\nmodel.fit(X_train,\n          Y_train, \n          epochs=50, \n          validation_data=(X_val, Y_val),\n          callbacks=[early_stop])","9bd9a016":"losses = pd.DataFrame(model.history.history)\nlosses","48f49449":"losses[['accuracy','val_accuracy']].plot()","362cd29f":"losses[['loss','val_loss']].plot()","d3678db9":"pred_val = np.argmax(model.predict(X_val), axis=1)\nreal_val = np.argmax(Y_val, axis=1)","6f9552c8":"print(classification_report(real_val, pred_val))","c39d411a":"confusion_matrix(real_val, pred_val)","36e20004":"N_test_samples = x_test.shape[0]\n\nx_test_new = x_test.reshape(N_test_samples, 28, 28, 1)\nx_test_new = x_test_new\/255\n\nx_test_new.shape","e02c3104":"predictions = model.predict(x_test_new)\n\nprint(predictions.shape)\n\npredictions","cb827b8c":"final_pred = np.argmax(predictions, axis=1)\n\nfinal_pred","4f9bf7d9":"# Visualize some test prediction and corresponding digit \n\ntest_index = 10\n\nplt.imshow(x_test_new[test_index], cmap='Greys')\nprint(f\"Predicted value: {final_pred[test_index]}\\n\")\n","8aed5c2a":"pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/sample_submission.csv\")","c9b35897":"submission_dict = {\"ImageId\": [i+1 for i in range(28000)],\n                   \"Label\": final_pred}\n\nsub_df = pd.DataFrame(submission_dict)\n\nsub_df","97ddfb2d":"sub_df.to_csv(\"submission.csv\", index=False)","9a265063":"<a id=\"sec42\"><\/a>\n### data normalization","4a579644":"<a id=\"sec5\"><\/a>\n## 5. Define and train model","2e9a36fa":"<a id=\"sec30\"><\/a>\n### data reshaping","ade42e85":"<a id=\"sec32\"><\/a>\n### mean image per class","8d957e1a":"##### <a id=\"sec43\"><\/a>\n### data split","83431fb1":"<a id=\"sec33\"><\/a>\n### mean image pixels per class\n\nmean images distribution (mean of all pixels, from all images per class). Note that pixel values are in range 0-255.","02f56565":"<a id=\"sec7\"><\/a>\n## 7. Predict on test data","5a572947":"Sections:\n\n\n1. <a href=\"#sec1\"> Imports <\/a>\n2. <a href=\"#sec2\"> Load data <\/a>\n3. <a href=\"#sec3\"> Visualizing and exploring data <\/a>\n    * <a href=\"#sec30\"> data reshaping <\/a>\n    * <a href=\"#sec31\"> visualization <\/a>\n    * <a href=\"#sec32\"> mean image per class <\/a>\n    * <a href=\"#sec33\"> mean image pixels per class <\/a>\n4. <a href=\"#sec4\"> Pre-processing <\/a>\n    * <a href=\"#sec41\"> labels <\/a>\n    * <a href=\"#sec42\"> data normalization <\/a>\n    * <a href=\"#sec43\"> data split <\/a>\n5. <a href=\"#sec5\"> Define and train model <\/a>\n6. <a href=\"#sec6\"> Evaluate model <\/a>\n7. <a href=\"#sec7\"> Predict on test data <\/a>\n    * <a href=\"#sec71\"> generate submission <\/a>\n8. <a href=\"#sec8\"> Potential next steps <\/a>\n","1d2f9f3d":"<a id=\"sec41\"><\/a>\n### labels","b89f74b7":"<a id=\"sec31\"><\/a>\n### visualization","fe8c7fd0":"<a id=\"sec2\"><\/a>\n## 2. Load data","50f2ed97":"<a id=\"sec4\"><\/a>\n## 4. Pre-processing","484affd0":"<a id=\"sec6\"><\/a>\n## 6. Evaluate model","d512ccd6":"<a id=\"sec8\"><\/a>\n## 8. Potential next steps","d571a123":"<a id=\"sec71\"><\/a>\n### generate submission","43ab55b0":"* explore (histogram? nonzero per class?)\n* feature selection (crop and other methods)?\n* dimensionality reduction?\n* data augmentation?\n* cross validation?\n* more complex CNN?\n* grid search?\n* compare to simpler approach (cosine similarity? svm?)","2360fc8e":"<a id=\"sec1\"><\/a>\n## 1. Imports","d6071017":"<a id=\"sec3\"><\/a>\n## 3. Visualizing and exploring data"}}