{"cell_type":{"f20dbecd":"code","60d49729":"code","c5fe71de":"code","84f4691e":"code","41836080":"code","e4f6d4f9":"code","8884ec5d":"code","4397bdd0":"code","d47c73d6":"code","0b552de8":"code","14f60ca1":"code","dc504c3c":"code","222adb54":"markdown","c4d8bf6c":"markdown","47335fc3":"markdown","8b3f2f85":"markdown","100e26e4":"markdown","7f7e03f6":"markdown","c12864d0":"markdown","c7d1bbb3":"markdown","c631dfc3":"markdown"},"source":{"f20dbecd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.preprocessing    import LabelEncoder, OneHotEncoder","60d49729":"df = pd.read_csv(\"data\/beer_train.csv\")\ndf.head()","c5fe71de":"cat = df.select_dtypes(include=[object]).columns\nprint(\"\\nCategorical features:\\n\", cat.values)","84f4691e":"style_encoder = LabelEncoder()\nstyle_encoder.fit(df['Style'])\n\n#df[cat] = df[cat].apply(LabelEncoder().fit_transform)\n#df['Style'] = df[cat].apply(style_encoder.fit_transform)\n\n#df['Style'] = df['Style'].apply(style_encoder.fit_transform)\ndf['Style'] = style_encoder.fit_transform(df['Style'])\ndf.head()","41836080":"def encode_and_bind(original_dataframe, feature_to_encode):\n    dummies = pd.get_dummies(original_dataframe[[feature_to_encode]])#, prefix=feature_to_encode)\n    res = pd.concat([original_dataframe, dummies], axis=1)\n    res = res.drop([feature_to_encode], axis=1)\n    return(res)","e4f6d4f9":"for c in cat.values:\n  if c != 'Style':\n    df = encode_and_bind(df, c)\ndf.head()","8884ec5d":"from sklearn.impute import SimpleImputer\n\n# Imputar\nimputed_df = pd.DataFrame(SimpleImputer().fit_transform(df))\n# Restaurar nombres de columnas\nimputed_df.columns = df.columns\ndf = imputed_df\ndf.head()","4397bdd0":"# Features\nX = df[['Size(L)', 'OG', 'FG', 'ABV', 'IBU', 'Color', 'BoilSize', 'BoilTime',\n        'BoilGravity', 'Efficiency', 'MashThickness', 'PitchRate',\n        'PrimaryTemp', 'SugarScale_Plato', 'SugarScale_Specific Gravity',\n        'BrewMethod_All Grain', 'BrewMethod_BIAB', 'BrewMethod_Partial Mash', 'BrewMethod_extract'\n       ]]\n\n# Label\ny = df[\"Style\"].values\nX[0:5]","d47c73d6":"final_df = pd.read_csv(\"data\/5.csv\")\nfinal_df.head()","0b552de8":"# Generate solution Dataframe\nfinal_df = final_df[['predict']]\n# Name Index to 'Id'\nfinal_df.index.name = 'Id'\nfinal_df.columns = ['Style']\nfinal_df.head()","14f60ca1":"# Decode values\nfinal_df['Style'] = style_encoder.inverse_transform(final_df['Style'].astype('int')) # como pasamos el encoder?\nfinal_df.head()","dc504c3c":"# Save to file\nfinal_df.to_csv(\"5_final.csv\")","222adb54":"# Encoding","c4d8bf6c":"# Variables","47335fc3":"# PREDICTION -> FINAL DATA","8b3f2f85":"# Read Prediction","100e26e4":"# Read CSV","7f7e03f6":"# Missings","c12864d0":"# Decoding","c7d1bbb3":"# Get values","c631dfc3":"# One Hot Encoding (NO)"}}