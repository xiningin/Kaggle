{"cell_type":{"3f8802f0":"code","0185e9f4":"code","c7a8ca21":"code","9d1e5197":"code","2647f06d":"code","4802cbe0":"code","8632d99f":"code","53e9b037":"code","b19a5dfc":"code","16e6d313":"code","fd19241f":"code","cf7e7d6a":"code","b8eb7fb3":"code","72b8d9c9":"code","51739b76":"code","d9227af6":"code","072db975":"code","d2ec702a":"code","165b992c":"code","4dae6aa3":"code","8c5c46cb":"code","62f010a6":"code","30f56bdb":"code","ca86cfcd":"code","ec58e39b":"code","3bd278d0":"code","98e440cb":"code","9b70436c":"markdown","7fab6f1f":"markdown","1a477638":"markdown","3ae56dc7":"markdown","4a712b7c":"markdown"},"source":{"3f8802f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0185e9f4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","c7a8ca21":"headers = [\"symboling\",\"normalized-losses\",\"make\",\"fuel-type\",\"aspiration\", \"num-of-doors\",\"body-style\",\n         \"drive-wheels\",\"engine-location\",\"wheel-base\", \"length\",\"width\",\"height\",\"curb-weight\",\"engine-type\",\n         \"num-of-cylinders\", \"engine-size\",\"fuel-system\",\"bore\",\"stroke\",\"compression-ratio\",\"horsepower\",\n         \"peak-rpm\",\"city-mpg\",\"highway-mpg\",\"price\"]\ndata=pd.read_csv(\"..\/input\/cleaning\/auto.csv\",names=headers)","9d1e5197":"data.replace(\"?\",np.nan,inplace=True)\ndata","2647f06d":"missing_data=data.isnull()\nmissing_data.head(3)","4802cbe0":"for column in missing_data.columns.values.tolist():\n    print(column)\n    print(missing_data[column].value_counts())","8632d99f":"avg_norm=data[\"normalized-losses\"].astype(\"float\").mean(axis=0)\nprint(\"Average of normalized-losses: \",avg_norm)\ndata[\"normalized-losses\"].replace(np.nan,avg_norm,inplace=True)","53e9b037":"avg_stroke=data[\"stroke\"].astype(\"float\").mean(axis=0)\nprint(\"Average of stroke-losses\",avg_stroke)\ndata[\"stroke\"].replace(np.nan,avg_stroke,inplace=True)\navg_bore=data[\"bore\"].astype(\"float\").mean(axis=0)\nprint(\"aveerage of bore losses\",avg_bore)\ndata[\"bore\"].replace(np.nan,avg_bore,inplace=True)\navg_horsepower=data[\"horsepower\"].astype(\"float\").mean(axis=0)\nprint(\"aveerage of horsepower losses\",avg_horsepower)\ndata[\"horsepower\"].replace(np.nan,avg_horsepower,inplace=True)","b19a5dfc":"avg_peak=data[\"peak-rpm\"].astype(\"float\").mean(axis=0)\nprint(\"aveerage of stroke-losses\",avg_peak)\ndata[\"peak-rpm\"].replace(np.nan,avg_peak,inplace=True)","16e6d313":"data[\"normalized-losses\"].replace(np.nan,\"four\",inplace=True)","fd19241f":"data.dropna(subset=[\"price\"],axis=0,inplace=True)\ndata.reset_index(drop=True,inplace=True)","cf7e7d6a":"data.dtypes","b8eb7fb3":"data[\"city-L\/100km\"]=235\/data[\"city-mpg\"]\ndata[\"highway-mpg\"]=235\/data[\"highway-mpg\"]\ndata.rename(columns={'\"highway-mpg\"':'\"highway-L\/100km\"'},inplace=True)\ndata.head()","72b8d9c9":"data['length'] = data['length']\/data['length'].max()\ndata['width'] = data['width']\/data['width'].max()\ndata['height'] = data['height']\/data['height'].max()\ndata[[\"length\",\"width\",\"height\"]].head()","51739b76":"data[\"horsepower\"]=data[\"horsepower\"].astype(int,copy=True)","d9227af6":"plt.hist(data[\"horsepower\"])\n\n# set x\/y labels and plot title\nplt.xlabel(\"horsepower\")\nplt.ylabel(\"count\")\nplt.title(\"horsepower bins\")","072db975":"bins = np.linspace(min(data[\"horsepower\"]), max(data[\"horsepower\"]), 4)\nbins","d2ec702a":"group_names = ['Low', 'Medium', 'High']","165b992c":"data['horsepower-binned'] = pd.cut(data['horsepower'], bins, labels=group_names, include_lowest=True )\ndata[['horsepower','horsepower-binned']].head(20)","4dae6aa3":"data[\"horsepower-binned\"].value_counts()","8c5c46cb":"# draw historgram of attribute \"horsepower\" with bins = 3\nplt.hist(data[\"horsepower\"], bins = 3)\n\n# set x\/y labels and plot title\nplt.xlabel(\"horsepower\")\nplt.ylabel(\"count\")\nplt.title(\"horsepower bins\")","62f010a6":"dummy_variable_1 = pd.get_dummies(data[\"fuel-type\"])\ndummy_variable_1.head()","30f56bdb":"dummy_variable_1.rename(columns={'gas':'fuel-type-gas', 'diesel':'fuel-type-diesel'}, inplace=True)\ndummy_variable_1.head()","ca86cfcd":"data= pd.concat([data, dummy_variable_1], axis=1)\n\n# drop original column \"fuel-type\" from \"df\"\ndata.drop(\"fuel-type\", axis = 1, inplace=True)\ndata.head()","ec58e39b":"dummy_variable_2 = pd.get_dummies(data['aspiration'])\n\n# change column names for clarity\ndummy_variable_2.rename(columns={'std':'aspiration-std', 'turbo': 'aspiration-turbo'}, inplace=True)\n\n# show first 5 instances of data frame \"dummy_variable_1\"\ndummy_variable_2.head()\n","3bd278d0":"# Write your code below and press Shift+Enter to execute \ndata = pd.concat([data, dummy_variable_2], axis=1)\n\n# drop original column \"aspiration\" from \"df\"\ndata.drop('aspiration', axis = 1, inplace=True)","98e440cb":"data.to_csv(\"cleaned_data.csv\")","9b70436c":"# Data Standardization","7fab6f1f":"# Evaluating for Missing Data\u00b6","1a477638":"# Indicator variable or dummy variable","3ae56dc7":"# Binning","4a712b7c":"# Data Normalization"}}