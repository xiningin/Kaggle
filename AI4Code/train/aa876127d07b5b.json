{"cell_type":{"6ccd7def":"code","7308b610":"code","3a3c08d6":"code","0932c934":"code","e00c054f":"code","13d63d9e":"code","57be89d3":"code","fbe27999":"code","25ba195f":"code","e6b5a758":"code","7795236a":"code","67327b09":"code","95977e86":"code","faf8a89b":"code","7f60c07a":"code","6de2efd2":"code","e8365ebe":"markdown","389beb56":"markdown","d04c30df":"markdown","aab07f89":"markdown","d0a09c2c":"markdown","95881504":"markdown","8bf0b1c7":"markdown","01f28e73":"markdown","9df26fbc":"markdown","6cb5c778":"markdown","abb71f80":"markdown"},"source":{"6ccd7def":"from pandas import read_csv\nfrom pandas.plotting import scatter_matrix\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nimport warnings\nwarnings.filterwarnings('ignore')","7308b610":"dataset = read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")","3a3c08d6":"#shape\nprint(dataset.shape)","0932c934":"print(dataset.head(20))","e00c054f":"# drop 'Id' column\ndataset.drop(\"Id\", axis=1,inplace=True)","13d63d9e":"# descriptions\nprint(dataset.describe())","57be89d3":"print(dataset.groupby('Species').size())","fbe27999":"# box and whisker plots\ndataset.plot(kind='box',subplots=True,layout=(2,2))\nplt.show()","25ba195f":"# histograms\ndataset.hist()\nplt.show()","e6b5a758":"# scatter plot matrix\nscatter_matrix(dataset)\nplt.show()","7795236a":"# Split-out validation dataset\narray = dataset.values\nX = array[:,0:4]\ny = array[:,4]","67327b09":"validation_size = 0.20\nseed = 7\n\nX_train,X_validation,Y_train,Y_validation = train_test_split(X,y,\n                        test_size=validation_size, random_state=seed)","95977e86":"# Spot-Check Algorithms\nmodels = []\nmodels.append(('LR', LogisticRegression()))\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC()))","faf8a89b":"# evaluate each model in turn\nresults = []\nnames = []\nfor name, model in models:\n    kflod = KFold(n_splits=10, random_state=seed,shuffle=True)\n    cv = cross_val_score(model,X_train,Y_train,cv=kflod,scoring='accuracy')\n    results.append(cv)\n    names.append(name)\n    msg = \"%s %f (%f)\" % (name,cv.mean(),cv.std())\n    print(msg)","7f60c07a":"# Compare Algorithms\nfig = plt.figure()\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","6de2efd2":"# Make predictions on validation dataset\nknn = KNeighborsClassifier()\nknn.fit(X_train, Y_train)\npredictions = knn.predict(X_validation)\nprint(\"Accuracy: \", accuracy_score(Y_validation, predictions))\nprint(confusion_matrix(Y_validation, predictions))\nprint(classification_report(Y_validation, predictions))","e8365ebe":"## 5. Data Visualization","389beb56":"## 4. Class Distribution","d04c30df":"## 9. Make Predictions","aab07f89":"## 2. Load Dataset","d0a09c2c":"## 1. Import libraries","95881504":"## 6. Create a Validation Dataset","8bf0b1c7":"### 5.1 Univariate Plots","01f28e73":"## 8. Select The Best Model","9df26fbc":"### 5.2 Multivariate Plots","6cb5c778":"## 7. Build Models","abb71f80":"## 3. Summarize the Dataset"}}