{"cell_type":{"1773dab1":"code","4df01c97":"code","901b898b":"code","2b4929f2":"code","68e8d4e3":"code","6d810355":"code","aa835551":"code","9bef0878":"code","05a767c0":"code","92eddcff":"code","497a6790":"code","b9d9b888":"code","8ddf4668":"code","474f13f8":"code","de23b6e6":"code","5afb23f1":"code","5b26cddc":"code","e0d71e82":"code","d29ff60c":"code","e372c5d3":"markdown","1c74e6ce":"markdown","6039bc15":"markdown","c334dc8b":"markdown","6bf3713f":"markdown","feb0ecf5":"markdown","8939e71e":"markdown","86192a3b":"markdown","423ea376":"markdown","cec48e14":"markdown","7ccb0264":"markdown","7e52e576":"markdown","623614a1":"markdown","94080311":"markdown","e40c92ef":"markdown","acbe5094":"markdown","771b8b98":"markdown","d5ea794d":"markdown"},"source":{"1773dab1":"#importing necessary libraries\nimport pandas as pd\nimport numpy as np\n%matplotlib inline \nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport seaborn as sns\nfrom collections import Counter   #An extremely useful library under itertools\nsns.set()","4df01c97":"#taking a gander at the files we have\nfile_dir = '..\/input\/historical-stock-data-of-select-common-stocks'\nx= !ls $file_dir\nx","901b898b":"\nstock_dict={}\nstock_dict['HINDUNILVR']=pd.read_csv('..\/input\/historical-stock-data-of-select-common-stocks\/HINDUNILVR.csv')\nstock_dict['ITC']=pd.read_csv('..\/input\/historical-stock-data-of-select-common-stocks\/ITC.csv')\nstock_dict['LT']=pd.read_csv('..\/input\/historical-stock-data-of-select-common-stocks\/LT.csv')\nstock_dict['NESTLEIND']=pd.read_csv('..\/input\/historical-stock-data-of-select-common-stocks\/NESTLEIND.csv')\nstock_dict['RELIANCE']=pd.read_csv('..\/input\/historical-stock-data-of-select-common-stocks\/RELIANCE.csv')\n\n   ","2b4929f2":"#filtering out the equities for ITC stocks\nstock_dict['ITC'][(stock_dict['ITC'].Series=='EQ')]\n","68e8d4e3":"for i in Counter(stock_dict).keys():\n    print(i,':', stock_dict[i].Series.unique())\n\n","6d810355":"filtered_stocks={}\nfor i in Counter(stock_dict).keys():\n    filtered_stocks[i]= stock_dict[i][(stock_dict[i].Series=='EQ')].reset_index()\n\n\nfiltered_stocks.items()","aa835551":"\n\nfor i in Counter(filtered_stocks).keys():\n    pd.DataFrame(filtered_stocks[i])['Market Cap']=pd.DataFrame(filtered_stocks[i])['Average Price']*pd.DataFrame(filtered_stocks[i])['Total Traded Quantity']\n    \nfiltered_stocks.items()\n","9bef0878":"\nfor i in Counter(filtered_stocks).keys(): \n    filtered_stocks[i].plot.line(x='Date', y='Market Cap', figsize=(20,10))\n    patch = mpatches.Patch(color='blue', label= i)\n    plt.legend(handles=[patch])\n    \n","05a767c0":"#How abot we take a gander at the trends in close prices \n\nfig, axes = plt.subplots(nrows=5, ncols=1) \nnum=0\nfor i in Counter(filtered_stocks).keys(): \n    filtered_stocks[i].plot(x='Date',y='Close Price', label=i, ax=axes[num], figsize=(15,15))\n    num += 1\nplt.show()\n\n","92eddcff":"#Let's build a dataframe which has only the closing prices. This is a small trick which will be handy later.\nclose={}\nfor i in Counter(filtered_stocks).keys():\n    close[i]=filtered_stocks[i]['Close Price']\nclose_price=pd.DataFrame(close)\nclose_price\n","497a6790":"returns= close_price.pct_change().dropna()\nmean_returns=returns.mean()\nweights=np.array([])\nx=1\/5 #Weights assigned are given by 1\/n, where n is the number of stocks and in our case n=5\nfor i in range(5):\n    weights = np.append(weights, x)\nweights\n","b9d9b888":"#Calculating Portfolio Return\nport_return = np.sum(weights * mean_returns)\n\n#Annual portfolio return by multiplying 252*100, where 252 is the active number of working days\nport_annual=port_return*252*100\nport_annual","8ddf4668":"#Calculating Portfolio Volatility\ncov = returns.cov()\nport_vol = np.sqrt(np.dot(weights.T,np.dot(cov,weights)))\nport_vol\n\n","474f13f8":"#Let's declare the number of Portfolio to be generated\nnum_portfolio = 50000\n\n#Create an empty list for storing returns,volatility,sharpe_ratio(return\/volatility) and weightage of each stock in portfolio\nstats = np.zeros((3 + len(returns.columns),num_portfolio))\n\n\n\n#Monte Carlo Simulation\nfor i in range(num_portfolio):\n    \n    weight = np.random.rand(len(returns.columns)) #Declaring random weights\n    weight = weight\/np.sum(weight) #So that sum of all weight will be equal to 1\n\n    p_annual_return = np.sum(weight * mean_returns) * 252 #Annual Return\n    p_annual_volatility = np.sqrt(np.dot(weight.T,np.dot(cov,weight))) * np.sqrt(252) #Annual Volatility\n    \n    #Storing the values in results list\n    stats[0,i] = p_annual_return\n    stats[1,i] = p_annual_volatility\n    stats[2,i] = stats[0,i]\/stats[1,i]\n\n    for j in range(len(weight)):\n        stats[j+3,i] =  weight[j]\n        \n        \n        \n#Making a dataframe for results list of all generated Portfolio\ncols = ['Annual Return','Annual Volatility','Sharpe Ratio']\nfor num in range(len(list(returns.columns))):\n    cols.append(list(returns.columns)[num])\n\n    \nstats_df = pd.DataFrame(stats.T,columns=cols)\n\nstats_df","de23b6e6":"#locating \n#Portfolio 1 - Sharpe ratio is the highest (Return\/Volatility)\n#Portfolio 2 - Volatility is the lowest\n            \n\n#Portfolio 1\nmax_sharpe = stats_df.iloc[stats_df['Sharpe Ratio'].idxmax()]\n\n#Portfolio 2\nmin_vol = stats_df.iloc[stats_df['Annual Volatility'].idxmin()]\n\n#Portfolio 3\nmax_vol = stats_df.iloc[stats_df['Annual Volatility'].idxmax()]\n","5afb23f1":"#Portfolio 1\nprint('The Portfolio allocation with maximum Sharpe Ratio) is:')\nprint('All values in percentage')\nround(max_sharpe* 100,2)","5b26cddc":"#Portfolio 2\nprint('The Portfolio allocation with least Volatility is:')\nprint('All values in percentage')\nround(min_vol * 100,2)\n","e0d71e82":"#Portfolio 3\nprint('The Portfolio allocation with most Volatility is:')\nprint('All values in percentage')\nround(max_vol * 100,2)\n","d29ff60c":"#Plotting the simulation\nplt.figure(figsize=(20,10))\nplt.scatter(stats_df['Annual Volatility'],stats_df['Annual Return'],c =stats_df['Sharpe Ratio'],cmap='RdYlBu')\nplt.colorbar()\n\nplt.scatter(max_sharpe[1],max_sharpe[0],marker = (5,1,3),color='red',s=700) #Red - Portfolio 1\nplt.scatter(min_vol[1],min_vol[0],marker = (5,1,3),color='green',s=700) #Green - Portfolio 2\nplt.scatter(max_vol[1],max_vol[0],marker = (5,1,3),color='black',s=700) #Black - Portfolio 3\n            \n\nplt.xlabel('Volatility',fontsize = 20)\nplt.ylabel('Annual Returns',fontsize = 20)\nplt.show()","e372c5d3":"## Portfolio variance for a portfolio \n![](https:\/\/cdn.corporatefinanceinstitute.com\/assets\/portfolio-variance-formula-1024x84.png)\n\n### Here sigma is standard deviation and Cov is covariance\n\nThe standard deviation (i.e. sqrt of variance) can help us measure the volatility of our portfolio and is generally considered a vital statistical tool when it comes to comparing multiple values and their behavior.","1c74e6ce":"# Locating 3 different portfolios\n\n1. **The portfolio with the highest Sharpe Ratio.**\nTo get the gravity of this portfolio, let's dive in a bit deep to understand the significance of Sharpe Ratio in portfolio management. Sharpe Ratio has been widely used to identify risk-adjusted return. Modern Portfolio Theory states that adding assets to a diversified portfolio that has low correlations can decrease portfolio risk without sacrificing return. Apart from that, Sharpe ratio can be used to evaluate a portfolio\u2019s performance history (as seen above). Explanation on whether a portfolio's excess returns are due to smart investment decisions or a result of too much risk can be deduced from Sharpe ratio.\n\n2. **The portfolio with the lowest volatility\/lowest risk**\nIn a beginner's perspective, a low risk portfolio is what that is desired. And this is what that separates out the speculators from the investors: calculated risks taken by the latter. \n\n3. **The portfolio with the highest volatility\/highest risk**\nSeasoned investors choose this owing to their market knowledge. A higher risk can generate good returns given a diversified portfolio. But if you're a beginner, think twice. Do some research on the investment trends. Check out the book:\"The Intelligent Investor\" by Benjamin Graham to gain insights into investments.","6039bc15":"# Pre-requisites for the simulation \nWe will generate the returns, mean returns and the weights for our selected stocks ","c334dc8b":"## Stocks chosen \n\n1. Hindustan Unilever \n2. ITC \n3. Larson & Tourbo\n4. Nestle India\n5. Reliance  \n\nThe above chosen stocks are purely based on my preferences, feel free to explore with more and more stocks out there!","6bf3713f":"As a heads up, I would urge you to try to analyze the trends between deliverable quantity and the total traded quantity. There's quite some untold facts in them. Check the [link](https:\/\/www.goodreturns.in\/classroom\/2015\/10\/understanding-the-importance-shares-delivery-quantity-total-traded-quantity-400097.html) to know about the same. \nThank you! ","feb0ecf5":"![](http:\/\/m.economictimes.com\/thumb\/msid-70616931,width-3684,height-2068,resizemode-4,imgsize-550306\/stocks-market.jpg)","8939e71e":"   # The showdown\n   \n   Let's see all the 3 portfolios which we defined earlier. Remember this is the result of the Monte Carlo simulation which we deployed earlier.","86192a3b":"Hold up! This is an attempt by to explore the nuances of investment portfolio management and how can we optimize the same; after all at the end of the day we look to make more money with the stocks we have. I would urge you to watch the 2011 film \"Margin call\" to get the vitality of how portfolio mismanagement during increased volatility could kill one's investments.\n\n\n\n","423ea376":"# Note: \nBefore filtering out, you might be interested to know what are the different series apart from EQ. The code below returns the types of different types of series pertaining to each column. ","cec48e14":"# Inference\n\n1. The massive surge of market capitalization between April-May 2020 of the Hindustan Unilever stocks. The reason can be attributed to the rise in the sales of essential commodities like alcohol based hand sanitizers (Lifebuoy), bathroom cleaners (Domex) and washing powder which has seen a demand shock owinig to the hygiene precautions during the pandemic. This amplified the positive sentiments towards the 'HINDUNILVR' stocks.\n2. Simlar trends can be observed with ITC's stocks. It's imperative that Hindustan Unilever and ITC are on a **'FMCG Race'**** this year, given that a major chunk of the consumer spending has been channelized into acquiring the essentials. Apart from that, a massive spike is seen in mid-October which is the market's reaction to ITC investing Rs. 700 Crores to open a food park in Madhya Pradesh. Check out this [link](https:\/\/www.itcportal.com\/media-centre\/press-reports-content.aspx?id=2189&type=C&news=itc-to-invest-700-crores-in-state-of-the-art-food-processing-facility-in-mp#:~:text=The%20ITC%20Limited%20%2D%20one%20of,processing%20facility%20in%20Madhya%20Pradesh.)\n3.  All eyes on Reliance Industries Limited, for it has become the most valuable company in India. The plethora of investments made in Reliance facilitated this mammoth growth even during hostile business conditions. Check out this [link](https:\/\/www.jagranjosh.com\/general-knowledge\/list-of-top-investors-in-reliance-jio-1594630586-1) here for better understaning.\n\n","7ccb0264":"I've chosen some stocks of my interest here. Although if you feel you have different choices, you can get the historical data of the desired stocks NSE website [Link](https:\/\/www1.nseindia.com\/products\/content\/equities\/equities\/eq_security.htm) in .csv (Comma Separated Values) format. I've downloaded the data between the time range of **16th August 2019 - 14th August 2020** (not so historical!)\n\n","7e52e576":"# Inference#2 \nThe close prices of all the stocks have hit a low duting late march because of the announcement on 'Nationwide lockdown' made by our honourable Prime Minister on March 24, 2020. Negative business sentiments certainly caused the NSE to tank almost 25% in March, 2020. \nA gradual rebound can be seen from early June because of the government's ease in restrictions on business activities.","623614a1":"# MONTE CARLO SIMULATION\nAccording to Investopedia, Monte Carlo simulations are used to model the probability of different outcomes in a process that cannot easily be predicted due to the intervention of random variables. It is a technique used to understand the impact of risk and uncertainty in prediction and forecasting models.\nIn our case, we will try to return the optimal portfolio allocation to maximize the returns using the historical data we have. \n","94080311":"## Portfolio Optimization using Monte Carlo Simulation","e40c92ef":"# Heads up!\nBL series is meant to indicate Block deals in the stock market. The criteria for a certain trade to qualify under BL is to have a minimum 500,000 shares or minimum value of Rs. 5 crore, executed through a single transaction viz the special \u201cBlock Deal window\u201d. The window is opened for only 35 minutes in the morning from 9:15 to 9:50AM. Interesting, right?\n\nCheck out this link to know more about the different series used in NSE. [Types of Series in NSE](https:\/\/help.tradesmartonline.in\/what-does-eq-and-be-series-stand-for-in-nse\/#:~:text=BL%3A%20This%20series%20is%20for,or%20minimum%20value%20of%20Rs.&text=IL%20%E2%80%93%20This%20series%20allows%20only,for%20FIIs%20is%20not%20breached.)","acbe5094":"Our dataset should consist only Equities, i.e. Series column equals to 'EQ'. In case if it's not the case with your dataset, try to filter out the Equity trades, as we are mainly concerned with the equity portfolio at the moment. The code for filtering out goes something like this... ","771b8b98":"# Market capitalization\nFirst things first, let's try to calculate the market capitalization of the stocks and attach them to our dataset for ease. ","d5ea794d":"# Portfolio return\n\nTo put it in simple words, it is the gain or loss of your portfolio consisting of several investments: in our case the 5 equities. We are interested to find the net profit\/loss of all the stocks taken together rather than individual stocks. \n\nThe formula for the same is given by \n\n![](https:\/\/www.wallstreetmojo.com\/wp-content\/uploads\/2019\/04\/Portfolio-Return-Formula.jpg)\n\n\n**where w and r represent the weight and return of a particular stock\n**"}}