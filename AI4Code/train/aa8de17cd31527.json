{"cell_type":{"751f1b3b":"code","93bdd65c":"code","04a8df01":"code","b5bf9ab7":"code","8ffe146c":"code","5269d4c1":"code","621ef365":"code","f7340a97":"code","821df2ce":"code","881b5e31":"code","91877dbb":"code","d2aa6b7e":"code","78762aa3":"code","703951dd":"code","3430b11b":"code","06734126":"code","88b0ff2f":"code","5dc57bfb":"code","e4829be4":"code","1b9dfd2d":"code","d282f2b6":"code","b627f79d":"code","cbcc38ea":"code","d9b045c6":"code","97c488f6":"code","bf83a07c":"code","05de4dd7":"code","3d11d84d":"code","e46de59c":"code","51e5bf2f":"code","aaa601dc":"code","b6d3c0fc":"code","7179a414":"code","444b3029":"code","0407b5f8":"code","78ae9b75":"code","f3f9cce4":"code","f22864be":"code","1a6a12bd":"code","2ecc3645":"code","b4cd0ce9":"code","5a209791":"code","b53d5f2e":"code","da9f8fd3":"code","48172c5c":"code","e69b3561":"code","d3088b4b":"code","394c5988":"code","e11becaa":"code","9a3e5363":"code","3b62d982":"code","7a03c663":"code","59b283ec":"code","507b788f":"code","bfe6b8e1":"code","f1f299ba":"code","a0fd65ef":"code","1760a049":"markdown","b25d647f":"markdown","a09a1c1b":"markdown","874ae940":"markdown","5fb19e82":"markdown","b453fd02":"markdown","03cedbc1":"markdown"},"source":{"751f1b3b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","93bdd65c":"df = pd.read_csv(\"..\/input\/montcoalert\/911.csv\")","04a8df01":"df.info()","b5bf9ab7":"df.head()","8ffe146c":"df['zip'].value_counts().head(5)","5269d4c1":"df['twp'].value_counts().head()","621ef365":"len(df['title'].unique())","f7340a97":"df['title'].nunique()","821df2ce":"x = df['title'].iloc[0]","881b5e31":"x","91877dbb":"x.split(':')[0]","d2aa6b7e":"df['Reason'] = df['title'].apply(lambda title: title.split(':')[0])","78762aa3":"df['Reason'].value_counts()","703951dd":"sns.countplot(x='Reason', data =df, palette='viridis')","3430b11b":"df.info()","06734126":"type(df['timeStamp'].iloc[0])","88b0ff2f":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])","5dc57bfb":"type(df['timeStamp'].iloc[0])","e4829be4":"time = df['timeStamp'].iloc[0]","1b9dfd2d":"time","d282f2b6":"time.year","b627f79d":"time.month","cbcc38ea":"time.hour","d9b045c6":"time.dayofweek","97c488f6":"df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)","bf83a07c":"df['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)","05de4dd7":"df.head()","3d11d84d":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}","e46de59c":"df['Day of Week'] = df['Day of Week'].map(dmap)","51e5bf2f":"df.head()","aaa601dc":"sns.countplot(x='Day of Week', data = df, hue= 'Reason')\nplt.legend( bbox_to_anchor = (1.05,1),loc = 2, borderaxespad=0)","b6d3c0fc":"sns.countplot(x='Month', data = df, hue= 'Reason')\nplt.legend( bbox_to_anchor = (1.05,1),loc = 2, borderaxespad=0)","7179a414":"bymonth = df.groupby('Month').count()","444b3029":"bymonth","0407b5f8":"bymonth['lat'].plot()","78ae9b75":"sns.countplot(x='Month', data = df)","f3f9cce4":"data = bymonth.reset_index()","f22864be":"data","1a6a12bd":"sns.lmplot(x='Month',y ='twp', data = bymonth.reset_index())","2ecc3645":"t = df['timeStamp'].iloc[0]","b4cd0ce9":"t","5a209791":"t.date() # return date object","b53d5f2e":"df['Date'] = df['timeStamp'].apply(lambda t:t.date())","da9f8fd3":"df.head()","48172c5c":"df.groupby('Date').count()['lat'].plot()\nplt.tight_layout()","e69b3561":"df[df['Reason']=='Traffic'].groupby('Date').count()['lat'].plot()\nplt.title('Traffic')\nplt.tight_layout()","d3088b4b":"df[df['Reason']=='Fire'].groupby('Date').count()['lat'].plot()\nplt.title('Fire')\nplt.tight_layout()","394c5988":"df[df['Reason']=='EMS'].groupby('Date').count()['lat'].plot()\nplt.title('EMS')\nplt.tight_layout()","e11becaa":"df.groupby(by = ['Day of Week' , 'Hour']).count()","9a3e5363":"df.groupby(by = ['Day of Week' , 'Hour']).count()['Reason']","3b62d982":"dayhour = df.groupby(by = ['Day of Week' , 'Hour']).count()['Reason'].unstack()","7a03c663":"plt.figure(figsize= (12,6))\nsns.heatmap(dayhour)","59b283ec":"sns.clustermap(dayhour, cmap = 'coolwarm')","507b788f":"daymonth = df.groupby(by = ['Day of Week' , 'Month']).count()['Reason'].unstack()","bfe6b8e1":"daymonth","f1f299ba":"sns.heatmap(daymonth)","a0fd65ef":"sns.clustermap(daymonth, cmap='coolwarm')","1760a049":"### Now groupby this Date column with the count() aggregate and create a plot of counts of 911 calls","b25d647f":"#### Cluster map using this dataframe","a09a1c1b":"#### Created a new column called 'Date' that contains the date from the timeStamp column. You'll need to use apply along with the .date() method","874ae940":"#### Restructuring the dataframe using unstack method","5fb19e82":"## This data is from 2016-20, we above in the anlaysis took into account of only a single year 2016. So just keep in mind. Good Luck! ","b453fd02":"#### Day of week is an integer 0-6. Using the.map() with this dictionary to map the actual string names to the day of week:","03cedbc1":"### Now use seaborn to create a countplot of the Day of Week column with the hue based off of the Reason column"}}