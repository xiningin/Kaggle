{"cell_type":{"56c51816":"code","b03753df":"code","34a53257":"code","9c805160":"code","2eeb5875":"code","2dee6861":"code","7825f077":"code","d52e1786":"code","b46d6485":"code","54cb6637":"code","3133f0c2":"code","9e8406c5":"code","ccdb0601":"code","929fd397":"code","49a46940":"code","e6cb51ac":"code","14502098":"code","3969ce63":"code","d3b949a6":"code","50a73753":"code","2499baa8":"code","c9d65adc":"code","342a16eb":"code","2a607841":"code","ab797191":"code","29acacfb":"code","60b91fb5":"code","0c59071e":"code","a8358597":"code","fb7d1579":"code","03f62c6b":"markdown","9bbe1430":"markdown","56e50c81":"markdown","80e6fe69":"markdown","702ff855":"markdown","f6c97b0c":"markdown","e46e23c6":"markdown","2db337c5":"markdown","f6ece76f":"markdown","3001bada":"markdown","a356929a":"markdown","af7c1574":"markdown","999df5de":"markdown","4e6b4778":"markdown","0565e657":"markdown","32141db9":"markdown","c3ddd3b0":"markdown","b1c0dadb":"markdown","69c8f303":"markdown","3591b33c":"markdown","36c88b23":"markdown"},"source":{"56c51816":"import numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport dateutil\nimport seaborn as sns\nfrom copy import deepcopy\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        os.path.join(dirname, filename)\nprint(\"setup completed\")","b03753df":"bikes_data_filepath = \"\/kaggle\/input\/bikes-sales-sample-data\/SalesOrders.csv\"\nbikes_brands_filepath = \"\/kaggle\/input\/bikes-sales-sample-data\/SalesOrderItems.csv\"\n\nbikes_sales_data = pd.read_csv(bikes_data_filepath)\nbikes_brands = pd.read_csv(bikes_data_filepath)","34a53257":"#Display first 10 rows\nbikes_sales_data.head(10)","9c805160":"# Display total number of (rows, cols) using shape\nbikes_sales_data.shape","2eeb5875":"# use isnull() to get the null values\nnull_values = bikes_sales_data.isnull().sum()\nnull_values\n","2dee6861":"# how many total missing values do we have?\ntotal_cells = np.product(bikes_sales_data.shape)\ntotal_missing = null_values.sum()\n\n# percent of data that is missing\npercent_missing = (total_missing\/total_cells) * 100\n\nprint(\"Total cells in data set: \" + str(total_cells),\n      \"Total of Null values: \" +\n      str(total_missing), \"percent missing: \" +\n      str(percent_missing))\n","7825f077":"#Drop NOTEID column \nbikes_sales_data = bikes_sales_data.drop(['NOTEID'], axis = 1)\n","d52e1786":"# double check if there is any null values after droping NOTEID col\nprint(bikes_sales_data.isnull().sum())","b46d6485":"# declear paython function\n\ndef bar_plot(variable):\n    \"\"\"\n        input: variable e.g. SALES ORG\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = bikes_sales_data[variable]\n    #count numer of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","54cb6637":"SALESORG_CATEGORY= [\"SALESORG\"]\nfor cat in SALESORG_CATEGORY:\n    bar_plot(cat)","3133f0c2":"\nsorg_total_sales = bikes_sales_data.groupby('SALESORG')['NETAMOUNT'].sum()\nprint(sorg_total_sales)\n","9e8406c5":"bikes_sales_data[['SALESORG','NETAMOUNT']].groupby('SALESORG').sum()","ccdb0601":"plt.figure(figsize=(4, 4)) # you can remove this line chart will be bigger \nplt.title('Sales Total Per Sales Org.')\nsorg_total_sales.plot(kind='bar')","929fd397":"#sorg_total_sales.plot(kind='pie')\n#sorg_total_sales.plot.pie()\nsorg_total_sales.plot.pie(autopct='%1.1f%%')","49a46940":"sorg_total_sales = sorg_total_sales.reset_index()\nsorg_total_sales.sort_values(by='NETAMOUNT', ascending=False)\n","e6cb51ac":"year_total_sales = bikes_sales_data[['CREATEDAT','NETAMOUNT']].groupby('CREATEDAT').sum()\n","14502098":"year_total_sales","3969ce63":"#Remove index\nyear_total_sales_no_index = bikes_sales_data[['CREATEDAT','NETAMOUNT']]","d3b949a6":"year_total_sales_no_index","50a73753":"#Check column data type\nfor col in year_total_sales_no_index:\n    print (type(year_total_sales_no_index[col][1]))","2499baa8":"# Convert integer to Python string\nyear_total_sales_no_index['CREATEDAT'] = year_total_sales_no_index.CREATEDAT.astype('str')\n#year_total_sales_no_index['NETAMOUNT'] = year_total_sales_no_index.CREATEDAT.astype('float')","c9d65adc":"for col in year_total_sales_no_index:\n    print (type(year_total_sales_no_index[col][1]))","342a16eb":"# Substring Year from Date\nfor index_label, row_series in year_total_sales_no_index.iterrows():\n    string = row_series['CREATEDAT']   \n    year_total_sales_no_index.at[index_label , 'CREATEDAT'] = string[0:4]\n    ","2a607841":"year_total_sales_no_index","ab797191":"year_total_sales_no_index.NETAMOUNT.hist()\n","29acacfb":"year_total_sales_no_index = year_total_sales_no_index[['CREATEDAT','NETAMOUNT']].groupby('CREATEDAT').sum()\nyear_total_sales_no_index","60b91fb5":"# suppress scientific notation in Pandas 1.184117e+07 to show as 11841174.625\nyear_total_sales_no_index.apply(lambda x: '%.5f' % x, axis=1)\n\n","0c59071e":"year_total_sales_no_index.plot(kind='bar', title=\"Sales Total Per Year\")","a8358597":"year_total_sales_no_index.plot.pie(autopct='%1.1f%%', subplots=True)","fb7d1579":"sns.boxplot(year_total_sales_no_index.NETAMOUNT)\n","03f62c6b":"**another way for dispaly .**","9bbe1430":"# Group sales records per sales Orgnization\n\n","56e50c81":"****SAP save date as integer :)  2018-01-11 = 20180111","80e6fe69":"Create Sales Org Category","702ff855":"**Sort data by TOP sales org | **TOP sales value****","f6c97b0c":"* **NOTEID filed is empty with no data which means all valus are null.**\n* **Kaggl Advise: waht is null keep it null... it is not important**","e46e23c6":"#  SAP bikes store sales analysis\n* **Dummy sales data (bikes sales)**\n* **Data warehouse cloud content master**","2db337c5":"**Convert CREATEDAT values from integer to string**","f6ece76f":"**check if the CREATEDAT data type converted to string type**","3001bada":"# (EDA) Load and explor sales orders data","a356929a":"<table>\n<tr>\n<td><img src=\"https:\/\/i.imgur.com\/skaZPhb.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/gaNttYd.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/pampioh.png\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/OSbuszd.png\"\/><\/td>\n\n<!--<td><img src=\"https:\/\/i.imgur.com\/ydaMhT1.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/WLAqDSV.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/Tj2y9gH.png\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/X0qXLCu.png\"\/><\/td>-->\n<\/tr>\n<tr>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Bar Chat<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Line Chart<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Area Chart<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Histogram<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left\">df.plot.bar()<\/td>\n<td style=\"text-align:left\">df.plot.line()<\/td>\n<td style=\"text-align:left\">df.plot.area()<\/td>\n<td style=\"text-align:left\">df.plot.hist()<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left\">Good for nominal and small ordinal categorical data.<\/td>\n<td style=\"text-align:left\">\tGood for ordinal categorical and interval data.<\/td>\n<td style=\"text-align:left\">Good for ordinal categorical and interval data.<\/td>\n<td style=\"text-align:left\">Good for interval data.<\/td>\n<\/tr>\n<\/table>","af7c1574":"44.2% of sales are coming from EMEA","999df5de":"**Conclusion:** EMEA Sales Orgnization is the best sales org. (value + transactions)","4e6b4778":"# Draw Histogram for sales orders amount","0565e657":"EMA Sales Orgnization is having more sales transactions than other sales org.","32141db9":"**Get Total (rows, cols) using: shape**","c3ddd3b0":"# Sales Total Per Year (Best Year Sales).","b1c0dadb":"# Pie Chart","69c8f303":"**Please consider upvoting if you found it useful to you :)**\n\n**Thanks.**","3591b33c":"# Sales Per Sales Org (Top Sales Org).","36c88b23":"# Data Cleaning\nFind the null values"}}