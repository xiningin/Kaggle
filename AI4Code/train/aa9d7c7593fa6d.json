{"cell_type":{"97984d80":"code","2ede208f":"code","803d5d92":"code","292fe272":"code","f1121752":"code","f812204a":"code","e7394ff6":"code","286c7580":"code","87475780":"code","d9891f6b":"code","10ad1c57":"markdown","118b5fde":"markdown","d8055639":"markdown"},"source":{"97984d80":"import torch\nimport torchvision\nimport torchvision.transforms as transforms\nimport matplotlib.pyplot as plt\nimport time\nimport sys\nsys.path.append(\"\/kaggle\/input\") # \u4e3a\u4e86\u5bfc\u5165\u4e0a\u5c42\u76ee\u5f55\u7684d2lzh_pytorch\nimport d2lzhpytorch as d2l\n\nprint(torch.__version__)\nprint(torchvision.__version__)","2ede208f":"mnist_train = torchvision.datasets.FashionMNIST(root='~\/Datasets\/FashionMNIST', train=True, download=True, transform=transforms.ToTensor())\nmnist_test = torchvision.datasets.FashionMNIST(root='~\/Datasets\/FashionMNIST', train=False, download=True, transform=transforms.ToTensor())","803d5d92":"print(type(mnist_train))\nprint(len(mnist_train), len(mnist_test))","292fe272":"feature, label = mnist_train[0]\nprint(feature.shape, feature.dtype)  # Channel x Height X Width\nprint(label)","f1121752":"mnist_PIL = torchvision.datasets.FashionMNIST(root='~\/Datasets\/FashionMNIST', train=True, download=True)\nPIL_feature, label = mnist_PIL[0]\nprint(PIL_feature)","f812204a":"# \u672c\u51fd\u6570\u5df2\u4fdd\u5b58\u5728d2lzh\u5305\u4e2d\u65b9\u4fbf\u4ee5\u540e\u4f7f\u7528\ndef get_fashion_mnist_labels(labels):\n    text_labels = ['t-shirt', 'trouser', 'pullover', 'dress', 'coat',\n                   'sandal', 'shirt', 'sneaker', 'bag', 'ankle boot']\n    return [text_labels[int(i)] for i in labels]","e7394ff6":"# \u672c\u51fd\u6570\u5df2\u4fdd\u5b58\u5728d2lzh\u5305\u4e2d\u65b9\u4fbf\u4ee5\u540e\u4f7f\u7528\ndef show_fashion_mnist(images, labels):\n    d2l.use_svg_display()\n    # \u8fd9\u91cc\u7684_\u8868\u793a\u6211\u4eec\u5ffd\u7565\uff08\u4e0d\u4f7f\u7528\uff09\u7684\u53d8\u91cf\n    _, figs = plt.subplots(1, len(images), figsize=(12, 12))\n    for f, img, lbl in zip(figs, images, labels):\n        f.imshow(img.view((28, 28)).numpy())\n        f.set_title(lbl)\n        f.axes.get_xaxis().set_visible(False)\n        f.axes.get_yaxis().set_visible(False)\n    plt.show()","286c7580":"X, y = [], []\nfor i in range(10):\n    X.append(mnist_train[i][0])\n    y.append(mnist_train[i][1])\nshow_fashion_mnist(X, get_fashion_mnist_labels(y))","87475780":"batch_size = 256\nif sys.platform.startswith('win'):\n    num_workers = 0  # 0\u8868\u793a\u4e0d\u7528\u989d\u5916\u7684\u8fdb\u7a0b\u6765\u52a0\u901f\u8bfb\u53d6\u6570\u636e\nelse:\n    num_workers = 4\ntrain_iter = torch.utils.data.DataLoader(mnist_train, batch_size=batch_size, shuffle=True, num_workers=num_workers)\ntest_iter = torch.utils.data.DataLoader(mnist_test, batch_size=batch_size, shuffle=False, num_workers=num_workers)","d9891f6b":"start = time.time()\nfor X, y in train_iter:\n    continue\nprint('%.2f sec' % (time.time() - start))","10ad1c57":"## 3.5.1 \u83b7\u53d6\u6570\u636e\u96c6","118b5fde":"## 3.5.2 \u8bfb\u53d6\u5c0f\u6279\u91cf","d8055639":"# 3.5 \u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\uff08Fashion-MNIST\uff09"}}