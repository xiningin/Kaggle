{"cell_type":{"0cbfc5c9":"code","7efc71a8":"code","69f9489c":"code","e79de65c":"code","4f37b832":"code","2d815a69":"code","7177629b":"code","c93d535d":"code","b6da3d22":"markdown"},"source":{"0cbfc5c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7efc71a8":"import pandas as pd\nimport numpy as np\nfrom scipy import stats\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n%matplotlib inline\n\nimport plotly.offline as py\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.graph_objs as go\ninit_notebook_mode(connected = True) \n\nfrom IPython.display import Markdown\ndef bold(string):\n    display(Markdown(string))\ndf_train = pd.read_csv('..\/input\/bigquery-geotab-intersection-congestion\/train.csv')\ndf_test = pd.read_csv('..\/input\/bigquery-geotab-intersection-congestion\/test.csv')\ndef description(df):\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    \n    summary['First Value'] = df.iloc[0].values\n    summary['Fifth Value'] = df.iloc[5].values\n    summary['Third Value'] = df.iloc[2].values\n    return summary","69f9489c":"bold(' Description of  train Data:')\ndisplay(description(df_train))\nbold(' Description of  test Data:')\ndisplay(description(df_test))\nprint(df_train.shape)","e79de65c":"df_train.dropna(inplace=True)\nprint(df_train.shape)\ndf_train[\"EntryStreetName\"]\n","4f37b832":"df_train[\"freq\"]=df_train.groupby([\"EntryStreetName\"])[\"EntryStreetName\"].transform('count')\ndf_train=df_train.sort_values(by=[\"freq\"])\n","2d815a69":"fig,ax=plt.subplots(2,1,figsize=[13,12])\nsns.set_style(\"white\")\nplt.subplots_adjust(hspace=0.8)\ndf_train[\"EntryStreetName\"].value_counts()[:70].plot(kind=\"bar\",ax=ax[0],fontsize=8)\ndf_train[\"ExitStreetName\"].value_counts()[:70].plot(kind=\"bar\",ax=ax[1],fontsize=8)\n","7177629b":"sns.set_style(\"dark\")\nfig, ax = plt.subplots(2,1, figsize=[15, 12])\n\nsns.countplot(data = df_train, x = 'EntryHeading', ax = ax[0], palette = 'YlOrRd_r')\nax[0].set_title('Count plot of Entry Heading', fontsize = 22)\nax[0].set_xlabel('Entry Heady', fontsize = 18)\n\nsns.countplot(data = df_train, x = 'ExitHeading', ax = ax[1], palette = 'YlGnBu')\nax[1].set_title('Count plot of Exit Heading', fontsize = 22)\nax[1].set_xlabel('Exit Heady', fontsize = 18)\n\nplt.subplots_adjust(hspace = 0.3)\nplt.show()","c93d535d":"df_train.head()","b6da3d22":"**ABOVE IS THE TOP 70 ENTRY STREET NAMES AND EXIT STREETNAME**"}}