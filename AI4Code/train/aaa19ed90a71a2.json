{"cell_type":{"2fb83a55":"code","87cb7441":"code","da3d42bd":"code","a2b3a670":"code","83302c56":"code","e8cd680a":"code","23375810":"code","2e60ca4c":"code","2a0d2c5b":"code","68b462a0":"code","56f61d7a":"code","2279c298":"code","603c4731":"code","fc848efa":"code","49162c37":"code","c5fef90f":"code","2397116e":"code","a301bef9":"code","678626c1":"code","c9fd4caf":"code","d6bce4b7":"code","d4163d27":"code","12d2821d":"code","dc02f8fd":"code","fa10ce48":"code","9b2e24aa":"code","9a80494e":"code","52dec950":"code","529509e8":"code","1c66fdaf":"code","aaee555b":"code","22c7e760":"code","d6bb85a0":"code","da50c08d":"code","df0cfee5":"code","a8c79ede":"code","a5087b52":"code","289c2904":"code","656ad488":"code","8342d4a8":"code","e904cf17":"code","16f7f936":"code","94e6bdba":"code","f039d27f":"code","79924c5a":"code","3522d15c":"code","48275ac1":"code","943125bc":"code","3633016f":"code","d278b8c4":"code","3ef8a713":"code","4730776c":"code","6531bc88":"markdown","bc9239ab":"markdown","78b2c981":"markdown","3566f94e":"markdown","e384a44e":"markdown","c06664b3":"markdown","1c117b27":"markdown","1a95ca6f":"markdown","2e95f5cb":"markdown","9ec28134":"markdown"},"source":{"2fb83a55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","87cb7441":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nfrom plotly.offline import init_notebook_mode, iplot\nfrom bokeh.plotting import figure, show, output_file, output_notebook\nfrom bokeh.palettes import Spectral11, colorblind, Inferno, BuGn, brewer\nimport plotly.figure_factory as ff\nfrom bokeh.models import HoverTool, value, LabelSet, Legend, ColumnDataSource,LinearColorMapper,BasicTicker, PrintfTickFormatter, ColorBar\noutput_notebook()","da3d42bd":"## Load dataset","a2b3a670":"answers=pd.read_csv('..\/input\/answers.csv')\ncomments = pd.read_csv('..\/input\/comments.csv',parse_dates = ['comments_date_added'])\nemails = pd.read_csv(\"..\/input\/emails.csv\",parse_dates = ['emails_date_sent'])\ngroup_memberships = pd.read_csv('..\/input\/group_memberships.csv')\ngroups = pd.read_csv('..\/input\/groups.csv')\nmatches = pd.read_csv('..\/input\/matches.csv')\nprofessionals = pd.read_csv(\"..\/input\/professionals.csv\" ,parse_dates = ['professionals_date_joined'])\nquestions = pd.read_csv('..\/input\/questions.csv')\nschool_memberships = pd.read_csv('..\/input\/school_memberships.csv')\nstudents = pd.read_csv('..\/input\/students.csv',parse_dates = ['students_date_joined'])\ntag_questions = pd.read_csv(\"..\/input\/tag_questions.csv\")\ntag_users = pd.read_csv('..\/input\/tag_users.csv')\ntags = pd.read_csv('..\/input\/tags.csv')","83302c56":"answers.head(2)","e8cd680a":"comments.head(2)","23375810":"emails.head(2)","2e60ca4c":"group_memberships.head(2)","2a0d2c5b":"questions.head(2)","68b462a0":"school_memberships.head(2)","56f61d7a":"students.head(2)","2279c298":"tag_questions.head(2)","603c4731":"tag_users.head(2)","fc848efa":"tags.head(2)","49162c37":"print('First Student joined at ',students.students_date_joined.min())\nprint('Latest Student joined from this Dataset',students.students_date_joined.max())","c5fef90f":"def extract_date(df, column):\n    \n    df['year'] = df[column].apply(lambda x: x.year)\n    df['month'] = df[column].apply(lambda x: x.month)\n    df['day'] = df[column].apply(lambda x: x.day)","2397116e":"extract_date(professionals, 'professionals_date_joined')","a301bef9":"professionals.head(3)","678626c1":"year  = professionals.year.unique()\ntype(year)","c9fd4caf":"rev = -np.sort(-year)\nrev","d6bce4b7":"TOOLS = 'save,pan,box_zoom,reset,wheel_zoom,hover'\np = figure(title=\"Year-wise total number of professionals Count\", y_axis_type=\"linear\", plot_height = 400,\n           tools = TOOLS, plot_width = 800)\np.xaxis.axis_label = 'Year'\np.yaxis.axis_label = 'Total Count'\np.line(rev, professionals.year.value_counts() ,line_color=\"purple\", line_width = 3)\np.select_one(HoverTool).tooltips = [\n    ('year', '@x'),\n    ('Number of Count', '@y'),\n]\n\noutput_file(\"line_chart.html\", title=\"Line Chart\")\nshow(p)","d4163d27":"professionals = professionals.dropna()","12d2821d":"top_location = professionals.professionals_location.value_counts().head(12)","dc02f8fd":"top_location.plot.barh(figsize=(20,30),legend=True,fontsize='16', color=['#b2ade6'])\nplt.title('Top Locations of professionals\\n', fontsize='16')\nplt.ylabel('location', fontsize='30')\nplt.xlabel('Records', fontsize='30')","fa10ce48":"industries = professionals['professionals_industry'].value_counts().head(12)","9b2e24aa":"industries.plot.barh(figsize=(20,30),legend=True,fontsize='16', color=['#b2ade6'])\nplt.title('Top Industries\\n', fontsize='16')\nplt.ylabel('Industries', fontsize='30')\nplt.xlabel('Records', fontsize='30')","9a80494e":"headlines = professionals['professionals_headline'].value_counts().head(12)","52dec950":"headlines.plot.barh(figsize=(20,30),legend=True,fontsize='16', color=['#b2ade6'])\nplt.title('Top Headlines\\n', fontsize='16')\nplt.ylabel('Headlines', fontsize='30')\nplt.xlabel('Records', fontsize='30')","529509e8":"from wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\nwords = ' '.join(professionals['professionals_headline'])\nwordcloud = WordCloud(stopwords=STOPWORDS,max_words=500,\n                      background_color='white',min_font_size=6,\n                      width=2000,collocations=False,\n                      height=1500\n                     ).generate(words)\nplt.figure(1,figsize=(15, 15))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","1c66fdaf":"extract_date(emails, 'emails_date_sent')","aaee555b":"fig = plt.figure(figsize=(12, 7))\nsns.set_style(\"whitegrid\", {'axes.grid' : False})\nsns.countplot(emails['emails_frequency_level'],palette=\"Set3\")\nplt.xlabel('Email Level')\nplt.ylabel('Count')","22c7e760":"emailyear  = emails.year.unique()\nemailrev = -np.sort(-emailyear)\nemailrev","d6bb85a0":"TOOLS = 'save,pan,box_zoom,reset,wheel_zoom,hover'\np = figure(title=\"Year-wise total number of Email Count\", y_axis_type=\"linear\", plot_height = 400,\n           tools = TOOLS, plot_width = 800)\np.xaxis.axis_label = 'Year'\np.yaxis.axis_label = 'Total Count'\np.line(emailrev, emails.year.value_counts() ,line_color=\"purple\", line_width = 3)\np.select_one(HoverTool).tooltips = [\n    ('year', '@x'),\n    ('Number of Email Count', '@y'),\n]\n\noutput_file(\"line_chart.html\", title=\"Line Chart\")\nshow(p)","da50c08d":"extract_date(students, 'students_date_joined')  ","df0cfee5":"\nstudents.isnull().sum()\nstudents  = students.dropna()\nstudents.isnull().sum()","a8c79ede":"## Top Student location","a5087b52":"top_Student_location = students.students_location.value_counts().head(12)\ntop_Student_location.plot.barh(figsize=(20,30),legend=True,fontsize='16', color=['#b2ade6'])\nplt.title('Top Locations of Students\\n', fontsize='16')\nplt.ylabel('location', fontsize='30')\nplt.xlabel('Records', fontsize='30')","289c2904":"studentyear  =  students.year.unique()\nstudentrev = -np.sort(-studentyear)\nstudentrev","656ad488":"TOOLS = 'save,pan,box_zoom,reset,wheel_zoom,hover'\np = figure(title=\"Year-wise total number of Student Count\", y_axis_type=\"linear\", plot_height = 400,\n           tools = TOOLS, plot_width = 800)\np.xaxis.axis_label = 'Year'\np.yaxis.axis_label = 'Total Count'\np.line(studentrev, students.year.value_counts() ,line_color=\"purple\", line_width = 3)\np.select_one(HoverTool).tooltips = [\n    ('year', '@x'),\n    ('Number of Student Count', '@y'),\n]\n\noutput_file(\"line_chart.html\", title=\"Line Chart\")\nshow(p)","8342d4a8":"top_tag = tags.tags_tag_name.value_counts().head(12)\ntop_tag.plot.barh(figsize=(20,30),legend=True,fontsize='16', color=['#b2ade6'])\nplt.title('Top Tags\\n', fontsize='16')\nplt.ylabel('Tags', fontsize='30')","e904cf17":"values = ','.join(str(v) for v in tags['tags_tag_name'])\nwordcloud = WordCloud(stopwords=STOPWORDS,max_words=500,\n                      background_color='white',min_font_size=6,\n                      width=2000,collocations=False,\n                      height=1500\n                     ).generate(values)\nplt.figure(1,figsize=(15, 15))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","16f7f936":"extract_date(comments, 'comments_date_added')","94e6bdba":"commentyear  =  comments.year.unique()\ncommentrev = -np.sort(-commentyear)\ncommentrev\n\nTOOLS = 'save,pan,box_zoom,reset,wheel_zoom,hover'\np = figure(title=\"Year-wise total number of Comment Count\", y_axis_type=\"linear\", plot_height = 400,\n           tools = TOOLS, plot_width = 800)\np.xaxis.axis_label = 'Year'\np.yaxis.axis_label = 'Total Count'\np.line(commentrev, comments.year.value_counts() ,line_color=\"purple\", line_width = 3)\np.select_one(HoverTool).tooltips = [\n    ('year', '@x'),\n    ('Number of Comment Count', '@y'),\n]\n\noutput_file(\"line_chart.html\", title=\"Line Chart\")\nshow(p)","f039d27f":"values = ','.join(str(v) for v in comments['comments_body'])\nwordcloud = WordCloud(stopwords=STOPWORDS,max_words=500,\n                      background_color='white',min_font_size=6,\n                      width=2000,collocations=False,\n                      height=1500\n                     ).generate(values)\nplt.figure(1,figsize=(15, 15))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","79924c5a":"questions.head()","3522d15c":"from sklearn.model_selection import train_test_split\nX = emails[['emails_id']]\ny = emails.year\n","48275ac1":"emails.columns","943125bc":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20)","3633016f":"#from sklearn.svm import SVC\n#svclassifier = SVC(kernel='linear')\n#svclassifier.fit(X_train, y_train)\n\nfrom sklearn.svm import SVC # \"Support vector classifier\"\nmodel = SVC(kernel='linear', C=1E10)\nmodel.fit(X, y)","d278b8c4":"y_pred = model.predict(X)","3ef8a713":"y_pred","4730776c":"from sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(y, y_pred))\nprint(classification_report(y, y_pred))","6531bc88":"When did First Student join?","bc9239ab":"## Where are they from?","78b2c981":"# 2. Emails","3566f94e":"Take a look at data","e384a44e":"## WordCloud of Headlines","c06664b3":"Learn about Professionals\n","1c117b27":"## Top headlines","1a95ca6f":"##Comments","2e95f5cb":"## Top industries","9ec28134":"Finding the Top tags?"}}