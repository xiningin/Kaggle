{"cell_type":{"be464089":"code","82e793c6":"code","e7d68f86":"code","d25dc5c1":"code","4230a1fd":"code","c7da5f7e":"code","db928a88":"code","eb605763":"code","bab4fa4a":"code","638eab04":"code","86eefe1c":"code","8a870b12":"code","b8457610":"code","f1ed4287":"code","ebee3bac":"code","821ab5b9":"code","5f4ede69":"code","451a426e":"code","a03e5d88":"code","07427bc5":"code","15e93678":"code","b0086eed":"code","ea99514d":"code","da2d0679":"code","6b4b7ad0":"code","a9037232":"code","5174f540":"markdown","2d88412b":"markdown","57bd0ab0":"markdown","53cd8c10":"markdown","696ceacf":"markdown","554f93ee":"markdown","d8af3719":"markdown","0ce42634":"markdown","9379a0cd":"markdown","ce40a75f":"markdown","e7175625":"markdown"},"source":{"be464089":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","82e793c6":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","e7d68f86":"def missing_percent(df):\n    nan_percent = 100* (df.isnull().sum() \/ len(df))\n    nan_percent = nan_percent[nan_percent>0].sort_values()\n    return nan_percent\n\ndf_train = df_train.dropna(axis=0,subset=['Embarked'])\ndf_train['Age'] = df_train.groupby('Sex')['Age'].transform(lambda x: x.fillna(x.mean()))\ndf_train = df_train.drop(['Cabin'],axis=1)\n\ndf_Sex_train = pd.get_dummies(df_train['Sex'])\ndf_train = df_train.drop('Sex',axis=1)\ndf_train = pd.concat([df_train,df_Sex_train], axis=1)\n\n\ndf_test = df_test.dropna(axis=0,subset=['Embarked','Fare'])\n\ndf_test['Age'] = df_test.groupby('Sex')['Age'].transform(lambda x: x.fillna(x.mean()))\ndf_test = df_test.drop(['Cabin'],axis=1)\n\ndf_Sex_test = pd.get_dummies(df_test['Sex'])\ndf_test = df_test.drop('Sex',axis=1)\ndf_test = pd.concat([df_test,df_Sex_test], axis=1)","d25dc5c1":"df_train['Survived'].value_counts()","4230a1fd":"X = df_train.drop(['Survived','Name','Ticket','Embarked'],axis=1)\ny = df_train['Survived']","c7da5f7e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=42)","db928a88":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","eb605763":"scaler.fit(X_train)\nscaled_X_train = scaler.transform(X_train)\nscaled_X_test  = scaler.transform(X_test)","bab4fa4a":"from sklearn.svm import SVC\nmodel = SVC()\nmodel.fit(X_train, y_train)","638eab04":"y_pred= model.predict(X_test)","86eefe1c":"from sklearn.metrics import classification_report, confusion_matrix,plot_roc_curve","8a870b12":"confusion_matrix(y_test, y_pred)","b8457610":"print(classification_report(y_test, y_pred))","f1ed4287":"from sklearn.model_selection import GridSearchCV","ebee3bac":"svm = SVC()\nparam_grid = {'C':[0.01,0.1,1,10,100,1000],'gamma':[1,0.1,0.01,0.001,0.0001]}\ngrid = GridSearchCV(svm, param_grid, cv = 5)","821ab5b9":"grid.fit(X_train,y_train)","5f4ede69":"grid.best_estimator_","451a426e":"grid.best_params_","a03e5d88":"y_pred_grid = grid.predict(X_test)","07427bc5":"confusion_matrix(y_test, y_pred_grid)","15e93678":"print(classification_report(y_test, y_pred_grid))","b0086eed":"X_test  = df_test.drop(['Name','Ticket','Embarked'],axis=1)\nscaled_X_test = scaler.transform(X_test)\ny_pred_grid = grid.predict(scaled_X_test)","ea99514d":"y_pred_grid = pd.Series(y_pred_grid)\ndf_test = pd.concat([df_test,y_pred_grid], axis=0)\ndf_test = df_test.rename(columns={0: \"Survived\"})","da2d0679":"df_test.info()","6b4b7ad0":"df_test.Survived = df_test.Survived.fillna(0)\ndf_test.Survived = df_test.Survived.astype(int)","a9037232":"df_test","5174f540":"# Determine The Features and Target Value(Label)","2d88412b":"### according to this [Notebook](https:\/\/www.kaggle.com\/mohsenpg\/logisticregression-on-titanic) i'll do cleaning data ","57bd0ab0":"## this time we want to see our clusters","53cd8c10":"# Cleaning Data","696ceacf":"# Train The Model","554f93ee":"# Feature Scaling: Scaling The Features","d8af3719":"#### we have two groups:\n#### - first is 0 that means capacity of 549 haven't survived\n#### - second is 1 that means capacity of 549 have survived","0ce42634":"# The Accuracy","9379a0cd":"# Spliting The Data to Train and Test","ce40a75f":"# Predect Test Data","e7175625":"#### Now this time we must predict the test data set\n#### before we was training and test the train data set\n#### to be sure about the accuracy of our model\n#### now we must test the test dataset."}}