{"cell_type":{"e90f4429":"code","a000a7c3":"code","2cde2a35":"code","d0d13a08":"code","6b3851d9":"code","6fe4daa4":"code","845b365b":"code","4eeba725":"code","3eaedf91":"code","2a71939a":"code","bb9d343c":"code","a6c9aafa":"code","e5cc130b":"code","9427f09e":"code","f815e521":"code","dfd81511":"code","4506c169":"code","fa976466":"code","fadf496f":"code","ac8c88db":"code","15561aae":"code","cd867470":"code","e33c1e4e":"code","3909291c":"code","07123e6e":"code","dde0a6ff":"code","6e77555d":"code","69eff15e":"code","f6b5ac2e":"code","81f5e139":"markdown","5b7a4ec9":"markdown","a3e91e73":"markdown","b192f865":"markdown","5f98153f":"markdown","7e5cddd0":"markdown","6681201e":"markdown","70b4234b":"markdown","beb26ddb":"markdown","1516ca3e":"markdown","11b55f14":"markdown","55bfc379":"markdown","9efa510b":"markdown","00725669":"markdown","01a7a66e":"markdown","4aab9f93":"markdown","2b4b05de":"markdown","8d6e120d":"markdown"},"source":{"e90f4429":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport zipfile\nimport seaborn as sns\nimport scipy.stats as stats\nimport matplotlib.pyplot as plt\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a000a7c3":"df=pd.read_csv(\"..\/input\/paris-housing-classification\/ParisHousingClass.csv\")\n","2cde2a35":"df.info()","d0d13a08":"#Se revisa que no haya valores faltantes para ver si es necesario darle un tratamiento\ndf.isna().sum().sort_values()","6b3851d9":"df.head(3)","6fe4daa4":"df.shape","845b365b":"#Se realiza una tranformaci\u00f3n de la etiqueta mediante label Encoder\n\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\n\ndf['category'] = labelencoder.fit_transform(df['category'])\n","4eeba725":"df.head(3)","3eaedf91":"# Se revisa si la clase esta balanceada\n\nplt.figure(figsize=(8,5))\nsns.countplot(df.category)\nplt.title('Class distribution')\nplt.show()\n\n","2a71939a":"features = df.drop([\"category\"],axis=1)\nlabels = df[\"category\"]","bb9d343c":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(features,labels, test_size=0.30, random_state=42)\n\ndf_final=pd.DataFrame(y_test.copy())\n\nprint(\"Tama\u00f1o dataset entranamiento features\",X_train.shape,\"Tama\u00f1o dataset entranamiento labels\",y_test.shape)","a6c9aafa":"#Se analizan variables estad\u00edsticas b\u00e1sicas.\nX_train.describe()","e5cc130b":"for column in X_train:\n    print(column,len(df[column].unique()))","9427f09e":"#Se grafica un boxplot para ver si hay outliers muy marcados.\ncont=X_train.loc[:,[\"squareMeters\",\"numberOfRooms\",\"floors\",\"cityCode\",\"cityPartRange\",\"numPrevOwners\",\"made\",\"basement\",\"attic\",\"garage\",\"hasGuestRoom\",\"price\"]]\ncont2=X_test.loc[:,[\"squareMeters\",\"numberOfRooms\",\"floors\",\"cityCode\",\"cityPartRange\",\"numPrevOwners\",\"made\",\"basement\",\"attic\",\"garage\",\"hasGuestRoom\",\"price\"]]\n\nfor column in cont:\n    plt.figure(column)\n    sns.boxplot(data=cont,x=column)","f815e521":"# Se grafican las distribuciones de las variables continuas\n\ncont.hist(bins=30, figsize=(15,15))\nplt.show()","dfd81511":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n#Se aplica sobre dataset de test y entrenamiento\ncont =scaler.fit_transform(cont.values)\ncont2 =scaler.fit_transform(cont2.values)","4506c169":"#se agregan las columnas estandarizadas al df original \ncol=[\"squareMeters\",\"numberOfRooms\",\"floors\",\"cityCode\",\"cityPartRange\",\"numPrevOwners\",\"made\",\"basement\",\"attic\",\"garage\",\"hasGuestRoom\",\"price\"]\nX_train[col]=cont\nX_test[col]=cont2","fa976466":"X_train.describe()","fadf496f":"X_test.describe()","ac8c88db":"transicion=X_train.copy()\ntransicion[\"categoria\"]=y_train\ncorrelacion=transicion.corr()\nplt.figure(figsize = (20,20))\nsns.set(font_scale=1)\nsns.heatmap(correlacion, annot = True)\nplt.show()","15561aae":"Luxury=sum(y_train==1)\ntotal=len(y_train)","cd867470":"X_train2=pd.DataFrame()\nX_test2=pd.DataFrame()\nbinarias=[\"hasYard\",\"hasPool\",\"isNewBuilt\",\"hasStormProtector\",\"hasStorageRoom\"]\nX_train2 = pd.concat([X_train, pd.get_dummies(X_train,columns=binarias)], axis=1)\nX_test2 = pd.concat([X_test, pd.get_dummies(X_test, columns=binarias)], axis=1)\nX_train2.drop(columns=binarias, axis=1, inplace=True)\nX_test2.drop(columns=binarias, axis=1, inplace=True)","e33c1e4e":"X_train2.head(3)","3909291c":"from sklearn.linear_model import LogisticRegression\n\nlogreg_model = LogisticRegression(class_weight=\"balanced\")\nlogreg_model.fit(X_train2, y_train)\n\n\nprint(\"El accuracy del entranamiento es\", logreg_model.score(X_train2, y_train))","07123e6e":"y_prediction=logreg_model.predict(X_test2)\n\nprint(\"El accuracy del test es\", logreg_model.score(X_test2, y_test))","dde0a6ff":"from sklearn.metrics import f1_score, accuracy_score, confusion_matrix\n\nf1_test = f1_score(y_test, y_prediction)\nprint('The f1 score for the testing data:', f1_test)\n\ndef conf_matrix(y_test, y_prediction):    \n      \n    con_mat = confusion_matrix(y_test, y_prediction)\n    con_mat = pd.DataFrame(con_mat, range(2), range(2))\n    plt.figure(figsize=(6,6))\n    sns.set(font_scale=1.5) \n    sns.heatmap(con_mat, annot=True, annot_kws={\"size\": 16}, fmt='g', cmap='Blues', cbar=False)\n    \n\nconf_matrix(y_test, y_prediction)","6e77555d":"df_final[\"prediccion\"]=y_prediction\ndf_final","69eff15e":"coef=pd.DataFrame(logreg_model.coef_, columns=X_train2.columns.values)\ncoef\n","f6b5ac2e":"logreg_model.intercept_","81f5e139":"Para determinar las features m\u00e1s y menos importantes, vamos a obtener los coeficientes. Los que de forma absoluta sean mayores, son los m\u00e1s importantes y los que sean menos relevantes son los que de forma absoluta tengan el valor menor.","5b7a4ec9":"### 3. An\u00e1lisis de correlaci\u00f3n ","a3e91e73":"En este caso se puede observar que no hay ningun tipo de outlier identificable en los gr\u00e1ficos de cajas","b192f865":"Se revisar\u00e1 la cantidad de valores unicos por columna, ya que esto nos puede indicar que hay columnas que son atributos que podr\u00edamos tranformar mediante One Hot Encoding. Adicional de la tabla anterior se puede observar que hay varias variables binarias, como por ejemplo \"hasYard\",\"hasPool\", etc","5f98153f":"1. Separe el dataset en Train y Test (1 pt)\n2. Realice An\u00e1lisis de los datos (EDA) con gr\u00e1ficos o tablas (4 pts)\n3. Grafique la matriz de correlaci\u00f3n (2 pt)\n4. Ajuste un modelo utilizando regresi\u00f3n log\u00edstica (2 pts)\n5. Muestre el accuracy del modelo utilizando tanto el train y como el test.\n6. Cuales son las 2 caracter\u00edsticas (features) mas relevantes a la hora de realizar la clasificaci\u00f3n. (2 pts)\n7. Cuales son las 2 caracter\u00edsticas (features) menos relevantes a la hora de realizar la clasificaci\u00f3n. (2 pts)","7e5cddd0":"### 4. Modelado con regresi\u00f3n log\u00edstica y accuracy del modelo","6681201e":"Para el EDA nos vamos a centrar en el dataset de entrenamiento y si hubiese que aplicar alguna transformaci\u00f3n o preprocesamiento se le aplica al de test tambi\u00e9n.","70b4234b":"### 1. Divisi\u00f3n en train y test","beb26ddb":"Se puede observar que contamos con un dataset desbalanceado, lo cual lo debemos considerar a la hora de realizar el entranamiento","1516ca3e":"Ahora se va a revisar si existen outliers en los features que son continuos para ver su tratamiento. En este caso se dejaran por fuera todas las features binarias","11b55f14":"Se puede observar que hasGuestRoom no es una binaria, sino que contabiliza la cantidad de cuartos para huespedes","55bfc379":"No tienen una distribuci\u00f3n clara, para efectos de la clasificaci\u00f3n como se utilizar\u00e1 una regresi\u00f3n log\u00edstica se realizar\u00e1 estandarizaci\u00f3n como parte del preprocesamiento","9efa510b":"### 2. An\u00e1lisis exploratorio de datos","00725669":"Del grafico anterior, se puede observar que no hay una correlaci\u00f3n lineal fuerte entre las features, solamente entre el precio y los M2, lo cual hace sentido ya que el precio normalmente se calcula por m2.\n\nAl analizar la correlaci\u00f3n de la etiqueta con las features, se tienen valores bajos-medios, siendo hasYard, hasPool & isNewBuilt que hace sentido al ser indicativos de que una casa es de lujo","01a7a66e":"### 5. Features m\u00e1s y menos relevantes","4aab9f93":"### 0. Carga del Dataset y revisi\u00f3n","2b4b05de":"Se realiza el One Hot encoder para las variables binarias, antes de utilizar la regresion logistica","8d6e120d":"En este caso, se puede observar que de forma general las features mas relevantes son HasYard y HasPool,que indican que si su presencia es positiva indican que es una casa lujusa. Por otro lado, las features que aportan menos al modelo y por ende son menos relevantes son numberOfRooms y garage"}}