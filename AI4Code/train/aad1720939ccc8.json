{"cell_type":{"d6a3dbb9":"code","9c30db1a":"code","3c87bfff":"code","00f9d012":"code","521ff798":"code","57aad796":"code","c8167f59":"code","f66cbb3f":"code","31674638":"code","7fda1e86":"code","407e757b":"code","8fcfa126":"code","06c6cc34":"code","452266fa":"code","5f50de8c":"code","c51fa3a8":"code","cba61334":"code","e959bf52":"code","998fc211":"code","9aefb123":"code","eafa12b2":"code","561ae2ef":"code","ae9aa87f":"code","fbafc25a":"code","109692df":"code","9c262763":"code","aa51fb3e":"code","ce9f579a":"code","9be83d5d":"code","2e9921c9":"code","d93352b4":"code","9d6fc3c4":"code","6cf3b580":"code","7623a729":"code","293b51c4":"code","02361983":"code","9986c6f8":"code","6c032350":"code","a5529d95":"code","3f373ee0":"code","a95c3957":"code","62bc52df":"code","b7c26ff9":"code","2fdcee2b":"code","24ff12fb":"code","bcec6ce6":"code","cc37bbae":"code","3a9f2547":"code","403bc08b":"code","fd21f1bf":"code","d3a44d6f":"code","17ade1c6":"code","37a11a04":"code","350d3b53":"code","cca22bde":"code","8bc63f54":"code","dfdc140f":"code","7cb569e6":"code","865308a5":"code","0a63df84":"code","f5411d90":"code","666bf73c":"code","77e3bf0c":"code","7e2c5661":"code","759f92fe":"code","cd3d8247":"code","3eee044f":"code","3c2b56e1":"code","546fc81c":"code","1fbea5f8":"code","7162aeb0":"code","c29ce17c":"code","16409181":"code","bbd0103f":"code","c4c62d92":"code","d9f670e2":"code","edfece54":"code","d5783c2b":"code","3686cb76":"markdown","b4b30474":"markdown","487f87ef":"markdown","18084cd7":"markdown"},"source":{"d6a3dbb9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport scipy.stats as stats","9c30db1a":"import statsmodels.formula.api as smf\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nfrom sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression","3c87bfff":"# Create Data audit Report for continuous variables\ndef continuous_var_summary(x):\n    return pd.Series([x.count(), x.isnull().sum(), x.sum(), x.mean(), x.median(),  \n                      x.std(), x.var(), x.min(), x.quantile(0.01), x.quantile(0.05),\n                          x.quantile(0.10),x.quantile(0.25),x.quantile(0.50),x.quantile(0.75), \n                              x.quantile(0.90),x.quantile(0.95), x.quantile(0.99),x.max()], \n                  index = ['N', 'NMISS', 'SUM', 'MEAN','MEDIAN', 'STD', 'VAR', 'MIN', 'P1', \n                               'P5' ,'P10' ,'P25' ,'P50' ,'P75' ,'P90' ,'P95' ,'P99' ,'MAX'])","00f9d012":"# Create Data audit Report for categorical variables\ndef categorical_var_summary(x):\n    Mode = x.value_counts().sort_values(ascending = False)[0:1].reset_index()\n    return pd.Series([x.count(), x.isnull().sum(), Mode.iloc[0, 0], Mode.iloc[0, 1], \n                          round(Mode.iloc[0, 1] * 100\/x.count(), 2)], \n                  index = ['N', 'NMISS', 'MODE', 'FREQ', 'PERCENT'])","521ff798":"# Missing value imputation for categorical and continuous variables\ndef missing_imputation(x, stats = 'mean'):\n    if (x.dtypes == 'float64') | (x.dtypes == 'int64'):\n        x = x.fillna(x.mean()) if stats == 'mean' else x.fillna(x.median())\n    else:\n        x = x.fillna(x.mode())\n    return x","57aad796":"# An utility function to create dummy variable\ndef create_dummies(df, colname):\n    col_dummies = pd.get_dummies(df[colname], prefix = colname, drop_first = True)\n    df = pd.concat([df, col_dummies], axis = 1)\n    df.drop(colname, axis = 1, inplace = True )\n    return df","c8167f59":"df_campus = pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')","f66cbb3f":"df_campus.info()","31674638":"df_campus.drop(columns='sl_no',inplace=True)","7fda1e86":"df_campus.info()","407e757b":"### Imputing 0 in salary column for candidates whose status is not_placed","8fcfa126":"df_campus.salary = np.where(df_campus.status=='Not Placed',0,df_campus.salary)","06c6cc34":"df_campus_cont=df_campus[['ssc_p','hsc_p','degree_p','etest_p','mba_p','salary']]","452266fa":"df_campus_cat=df_campus.loc[:,df_campus.columns.difference(['ssc_p','hsc_p','degree_p','etest_p','mba_p','salary'])]","5f50de8c":"df_campus_cont.apply(continuous_var_summary)","c51fa3a8":"df_campus_cat.apply(categorical_var_summary)","cba61334":"def cat_count (x):\n    sns.countplot(x)\n    plt.show()","e959bf52":"df_campus_cat.apply(cat_count)","998fc211":"def box_cont(x):\n    sns.boxplot(x)\n    plt.show()","9aefb123":"df_campus_cont.apply(box_cont)","eafa12b2":"### Outlier Treatement","561ae2ef":"df_campus_cont = df_campus_cont.apply(lambda x: x.clip(lower = x.dropna().quantile(0.01), upper = x.dropna().quantile(0.99)))","ae9aa87f":"df_campus_cont.apply(box_cont)","fbafc25a":"import seaborn as sns\nplt.figure(figsize = (10,10))\nsns.heatmap(df_campus_cont.corr())\nplt.show()","109692df":"# for c_feature in categorical_features\nfor c_feature in list(df_campus_cat.columns):\n    df_campus_cat[c_feature] = df_campus_cat[c_feature].astype('category')\n    df_campus_cat = create_dummies(df_campus_cat, c_feature)","9c262763":"df_campus_new=pd.concat([df_campus_cont,df_campus_cat],axis = 1)","aa51fb3e":"df_campus_new.info()","ce9f579a":"df_campus_new.status_Placed.value_counts()","9be83d5d":"# F_regression","2e9921c9":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom patsy import dmatrices","d93352b4":"df_campus_new.rename(columns={'specialisation_Mkt&HR':'specialisation_Mkt_HR'},inplace=True)","9d6fc3c4":"df_campus_new.rename(columns={'degree_t_Sci&Tech':'degree_t_Sci_Tech'},inplace=True)","6cf3b580":"# get all the independant variables for model creation\nmodel_param = 'status_Placed ~ ' + ' + '.join(list(df_campus_new.columns.difference(['status_Placed'])))","7623a729":"model_param","293b51c4":"model_param='''status_Placed ~ degree_p + degree_t_Others + degree_t_Sci_Tech + etest_p + gender_M + \n                hsc_b_Others + hsc_p + hsc_s_Commerce + mba_p + \n            salary + specialisation_Mkt_HR + ssc_b_Others + ssc_p + workex_Yes'''","02361983":"# separate the Y and X variables\ny, X = dmatrices(model_param,df_campus_new, return_type = 'dataframe')","9986c6f8":"# For each X, calculate VIF and save in dataframe\nvif = pd.DataFrame()\nvif['Features'] = X.columns\nvif['VIF Factor'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n\n# display the output\nvif.round(1)","6c032350":"# Train and Test split\ntrain, test = train_test_split(df_campus_new, test_size = 0.3, random_state =  123)","a5529d95":"model_param='''status_Placed ~ degree_p + degree_t_Others + degree_t_Sci_Tech + etest_p + gender_M + \n                hsc_b_Others + hsc_p + hsc_s_Commerce + mba_p + specialisation_Mkt_HR + ssc_b_Others + ssc_p + workex_Yes'''","3f373ee0":"train","a95c3957":"m1 = smf.logit(formula = model_param, data = train).fit()","62bc52df":"print(m1.summary())","b7c26ff9":"p = m1.predict(train)","2fdcee2b":"# empty dataframe\nsomersd_df = pd.DataFrame()\n\n# iterate for each of the X - dependant variables and get the Somer's D value\nfor num_variable in train.columns.difference(['status_Placed','salary']):\n    \n    # execute teh logit model\n    logreg = smf.logit(formula = str('status_Placed ~ ') + str(num_variable), data = train).fit()\n    \n    # get the predicted probabilities and create a dataframe with the predicted values\n    y_score = pd.DataFrame(logreg.predict())\n    \n    # name the column of the df as score\n    y_score.columns = ['Score']\n    \n    # calculate the Somer's D values\n    somers_d = 2 * metrics.roc_auc_score(train['status_Placed'], y_score) - 1\n    \n    # place the variable name and the Somers' D score in a temp dataframe\n    temp = pd.DataFrame([num_variable, somers_d]).T\n    temp.columns = ['Variable Name', 'SomersD']\n    \n    # append the data in the dataframe for all the X variables\n    somersd_df = pd.concat([somersd_df, temp], axis=0)","24ff12fb":"somersd_df['Var_Sig']=np.where(somersd_df.SomersD < 0.2 , 'Insig','Sig')","bcec6ce6":"### Yes, the percentage matter in getting placed. Please check the below significant variables after Sommer's D","cc37bbae":"somersd_df","3a9f2547":"model_param='''status_Placed ~ degree_p +hsc_p+ specialisation_Mkt_HR + ssc_p + workex_Yes'''","403bc08b":"m1 = smf.logit(formula = model_param, data = train).fit()","fd21f1bf":"print(m1.summary())","d3a44d6f":"train_predict = m1.predict(train)","17ade1c6":"test_predict = m1.predict(test)","37a11a04":"df_campus_new.status_Placed.mean()","350d3b53":"metrics.accuracy_score( train['status_Placed'],\n                            train_predict>0.688)","cca22bde":"# model performance | Method 1: AUC\ntrain_auc = metrics.roc_auc_score(train['status_Placed'], train_predict)\ntest_auc = metrics.roc_auc_score(test['status_Placed'], test_predict)\n\nprint(\"The AUC for the model built on the Train Data is : \", train_auc)\nprint(\"The AUC for the model built on the Test Data is : \", test_auc)","8bc63f54":"feature_col=list(['degree_p','degree_t_Others','degree_t_Sci_Tech','etest_p','gender_M','hsc_b_Others','hsc_p','hsc_s_Commerce','mba_p','salary','specialisation_Mkt_HR','ssc_b_Others','ssc_p','workex_Yes'])","dfdc140f":"## Using Random Forest","7cb569e6":"from sklearn.model_selection import train_test_split\n\n\ntrain_X, test_X, train_y, test_y = train_test_split( df_campus_new[feature_col],\n                                                  df_campus_new['status_Placed'],\n                                                  test_size = 0.3,\n                                                  random_state = 555 )","865308a5":"#!pip install imblearn\nfrom imblearn.over_sampling import RandomOverSampler\nros = RandomOverSampler(random_state=123)\n\ntrain_X_os, train_y_os = ros.fit_sample(train_X, train_y)\n\nunique_elements, counts_elements = np.unique(train_y_os, return_counts=True)\nprint(\"Frequency of unique values of the said array:\")\nprint(np.asarray((unique_elements, counts_elements)))","0a63df84":"from sklearn.ensemble import RandomForestClassifier\nimport sklearn.tree as dt\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz, export\nfrom sklearn.model_selection import GridSearchCV","f5411d90":"pargrid_rf = {'n_estimators': np.arange(50,60,70),\n                  'max_features': np.arange(5,8)}\n\n#from sklearn.grid_search import GridSearchCV\ngscv_rf = GridSearchCV(estimator=RandomForestClassifier(), \n                        param_grid=pargrid_rf, \n                        cv=5,\n                        verbose=True, n_jobs=-1)\n\ngscv_results = gscv_rf.fit(train_X_os, train_y_os)","666bf73c":"gscv_results.best_params_","77e3bf0c":"gscv_rf.best_score_","7e2c5661":"radm_clf = RandomForestClassifier(oob_score=True,n_estimators=50, max_features=5, n_jobs=-1)\nradm_clf.fit( train_X, train_y )","759f92fe":"radm_train_pred = pd.DataFrame( { 'actual':  train_y,\n                            'predicted': radm_clf.predict( train_X ) } )","cd3d8247":"radm_test_pred = pd.DataFrame( { 'actual':  test_y,\n                            'predicted': radm_clf.predict( test_X ) } )","3eee044f":"print(metrics.accuracy_score( radm_test_pred.actual, radm_test_pred.predicted ))","3c2b56e1":"feat_imp=list(zip(train_X.columns,radm_clf.feature_importances_))","546fc81c":"feat_imp","1fbea5f8":"df_feat_imp=pd.DataFrame(feat_imp)","7162aeb0":"df_feat_imp.columns=['Features','Importance']","c29ce17c":"### Top 5 features are selected using Logistic Regression \n#degree_p \n#hsc_p \n#specialisation_Mkt_HR\n#ssc_p\n#workex_Yes\n### Top 5 features are selected using Random Forest\n#degree_p \n#hsc_p \n#salary\n#ssc_p\n#mba_p","16409181":"#Top 5 features\ndf_feat_imp.sort_values(by='Importance',ascending = False).head(5)","bbd0103f":"### Specialisation in Marketing and Finance is in more demand in the Corporate","c4c62d92":"df_campus[['specialisation','status']]","d9f670e2":"df_campus.specialisation.value_counts()","edfece54":"df_campus.loc[(df_campus.specialisation == 'Mkt&Fin') & (df_campus.status=='Placed')].status.count()","d5783c2b":"df_campus.loc[(df_campus.specialisation == 'Mkt&HR') & (df_campus.status=='Placed')].status.count()","3686cb76":"### 2)Does percentage matters for one to get placed?","b4b30474":"### Questions\n### 1)Which factor influenced a candidate in getting placed?\n### 2)Does percentage matters for one to get placed?\n### 3)Which degree specialization is much demanded by corporate?\n### 4)Play with the data conducting all statistical tests.","487f87ef":"### 3)Which degree specialization is much demanded by corporate?","18084cd7":"### 1)Which factor influenced a candidate in getting placed?"}}