{"cell_type":{"44536d96":"code","d2628b03":"code","8e3b6626":"code","0906e737":"code","29f827d2":"code","f3ea216e":"code","cf3f34b5":"code","88569806":"code","92c2806f":"code","01315f33":"code","67a966e9":"code","2d41862f":"code","60668095":"code","a4425bef":"code","d5a43bb6":"code","bb0a58cd":"code","2ab3dfbc":"code","b532d0de":"code","7182f1d5":"code","81956730":"code","95f68186":"code","de8ac2a8":"markdown","7fcc59ab":"markdown","2474f0fa":"markdown","da6bba8d":"markdown","b239577a":"markdown","e3f6d3fa":"markdown","a49411ec":"markdown","1b3765a3":"markdown","8e374da6":"markdown","eea9d3e4":"markdown","de919487":"markdown","4d63ec93":"markdown","4a3f1e70":"markdown","90466054":"markdown","864719c9":"markdown","e008415a":"markdown","adacfcc7":"markdown"},"source":{"44536d96":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report, roc_curve, confusion_matrix,roc_auc_score\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d2628b03":"data=pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndata.head()","8e3b6626":"data.info()","0906e737":"data.isnull().sum()","29f827d2":"data.describe()","f3ea216e":"# Heat Map Correlation\ncorr = data.corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nf, ax = plt.subplots(figsize=(8, 8))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0, square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","cf3f34b5":"plt.figure(figsize=(14,12))\nax = sns.heatmap(corr, square=True, annot=True, fmt='.2f')\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)          \nplt.show()","88569806":"plt.figure(figsize=(15,10))\nsns.countplot(x=data['age'])\nplt.title('AGE OF PATIENTS')\nplt.xlabel('AGE')\nplt.ylabel('COUNT')\nplt.show()","92c2806f":"plt.figure(figsize=(10,7))\nsns.countplot(x=data['sex'])\nplt.title('MALE VS FEMALE')\nplt.xlabel('SEX')\nplt.ylabel('COUNT')\nplt.show()","01315f33":"plt.figure(figsize=(10,7))\nsns.countplot(x=data['cp'])\nplt.title('TYPES OF CHEST PAIN')\nplt.xlabel('TYPES')\nplt.ylabel('COUNT')\nplt.show()","67a966e9":"plt.figure(figsize=(20,15))\nsns.displot(data[\"trtbps\"])\nplt.title(\"DISTRIBUTION OF BLOOD PRESSURE AROUND PATIENTS\",fontsize=20)\nplt.xlabel(\"BLOOD PRESSURE\",fontsize=20)\nplt.ylabel(\"COUNT\",fontsize=20)\nplt.show()","2d41862f":"labels = ['More Chance of Heart Attack', 'Less Chance of Heart Attack']\nsizes = data['output'].value_counts(sort = True)\n\ncolors = [\"#ffb3b3\",\"#C2C4E2\"]\nexplode = (0.05,0) \n \nplt.figure(figsize=(7,7))\nplt.suptitle(\"Number of Targets in the dataset\",y=0.9, family='Sherif', size=18, weight='bold')\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90,)\n\nplt.show()","60668095":"numerical = ['age','trtbps','chol','thalachh','oldpeak']\n\nj=0\nfig=plt.figure(figsize=(10,10),constrained_layout =True)\nplt.suptitle(\"Distribution of the Numeric Variables\",y=1.07, family='Sherif', size=18, weight='bold')\nfig.text(0.315,1.02,\"Numerical Data without Condition\", size=13, fontweight='light', fontfamily='monospace')\nfor i in data[numerical]:\n    ax=plt.subplot(321+j)\n    ax.set_aspect('auto')\n    ax.grid(color='gray', linestyle=':', axis='x', zorder=0,  dashes=(1,5))\n    ax=sns.kdeplot(data=data, x=i, color='#D0DBEE', fill=True, edgecolor='black', alpha=1)\n    for s in ['left','right','top','bottom']:\n        ax.spines[s].set_visible(False)\n    j=j+1","a4425bef":"# Distribution Plot of Numerical Data with Condition\ncolors = ['#D0DBEE','#ffcccc']\nj=0\nfig=plt.figure(figsize=(10,10),constrained_layout =True)\nplt.suptitle(\"Distribution of the Numeric Variables\",y=1.07, family='Sherif', size=18, weight='bold')\nfig.text(0.333,1.02,\"Numerical Data with Condition\", size=13, fontweight='light', fontfamily='monospace')\nfor i in data[numerical]:\n    ax=plt.subplot(321+j)\n    ax.set_aspect('auto')\n    ax.grid(color='gray', linestyle=':', axis='x', zorder=0,  dashes=(1,5))\n    ax=sns.kdeplot(data=data, x=i, hue='output', palette=colors, fill=True, edgecolor='black', alpha=1)\n    for s in ['left','right','top','bottom']:\n        ax.spines[s].set_visible(False)\n    j=j+1","d5a43bb6":"# Outliers Detection\ncolors = ['#CBE4F9','#CDF5F6','#EFF9DA','#F9EBDF','#F9D8D6']\nplt.figure(figsize=(10,9))\nplt.suptitle(\"Outliers of Numeric Variables\",y=0.94, family='Sherif', size=18, weight='bold')\nplt.text(-0.4, 1.64, 'Detecting Outlier', horizontalalignment='center',verticalalignment='center', transform=ax.transAxes,size=14,fontweight='light', fontfamily='monospace')\nsns.boxenplot(data = data[numerical],palette = colors)\nplt.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nplt.xticks(rotation=45)\nplt.show()","bb0a58cd":"for i in data[numerical]:\n    q1 = data[i].quantile(0.25)\n    q3 = data[i].quantile(0.75)\n    iqr = q3-q1\n    Lower_tail = q1 - 1.5 * iqr\n    Upper_tail = q3 + 1.5 * iqr\n    med = np.median(data[i])\n    for j in data[i]:\n        if j > Upper_tail or j < Lower_tail:\n            data[i] = data[i].replace(j, med)","2ab3dfbc":"colors = ['#CBE4F9','#CDF5F6','#EFF9DA','#F9EBDF','#F9D8D6']\nplt.figure(figsize=(9,9))\nplt.suptitle(\"Outliers of Numeric Variables\",y=0.94, family='Sherif', size=18, weight='bold')\nplt.text(-0.405, 1.64, 'Removing Outlier', horizontalalignment='center',verticalalignment='center', transform=ax.transAxes,size=14,fontweight='light', fontfamily='monospace')\nsns.boxenplot(data = data[numerical],palette = colors)\nplt.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nplt.xticks(rotation=45)\nplt.show()","b532d0de":"df1 = data\n\n# define the columns to be encoded and scaled\ncat_cols = ['sex','exng','caa','cp','fbs','restecg','slp','thall']\ncon_cols = [\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]\n\n# encoding the categorical columns\ndf1 = pd.get_dummies(df1, columns = cat_cols, drop_first = True)\n\n# defining the features and target\nX = df1.drop(['output'],axis=1)\ny = df1[['output']]\n\n# instantiating the scaler\nscaler = RobustScaler()\n\n# scaling the continuous featuree\nX[con_cols] = scaler.fit_transform(X[con_cols])\nprint(\"The first 5 rows of X are\")\nX.head()","7182f1d5":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2, random_state = 42)\nprint(\"The shape of X_train is      \", X_train.shape)\nprint(\"The shape of X_test is       \",X_test.shape)\nprint(\"The shape of y_train is      \",y_train.shape)\nprint(\"The shape of y_test is       \",y_test.shape)","81956730":"logreg = LogisticRegression()\n\n# fitting the object\nlogreg.fit(X_train, y_train)\n\n# calculating the probabilities\ny_pred_proba = logreg.predict_proba(X_test)\n\n# finding the predicted valued\ny_pred = np.argmax(y_pred_proba,axis=1)\n\n# printing the test accuracy\nprint(\"The test accuracy score of Logistric Regression is \", accuracy_score(y_test, y_pred))\n","95f68186":"# calculating the probabilities\ny_pred_prob = logreg.predict_proba(X_test)[:,1]\n\n# instantiating the roc_cruve\nfpr,tpr,threshols=roc_curve(y_test,y_pred_prob)\n\n# plotting the curve\nplt.plot([0,1],[0,1],\"k--\",'r+')\nplt.plot(fpr,tpr,label='Logistic Regression')\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title(\"Logistric Regression ROC Curve\")\nplt.show()","de8ac2a8":"<h2 style=\"color:SlateBlue;\"><b>Also checkout my other Notebooks<\/b><\/h2>","7fcc59ab":"<h2 style=\"color:SlateBlue;\"><b>Data Preprocessing<\/b><\/h2>","2474f0fa":"**Using Logistice Regression we got an Accuracy of 0.9016393442622951**","da6bba8d":"<div class=\"alert alert-block alert-info\"> Please Upvote \u270c if you like the notebook and share possible improvements in the comments.<\/div>","b239577a":"<h3 style=\"color:red;\"><b> Logistic Regression<\/b><\/h3>","e3f6d3fa":"#### Lets Check Outliers","a49411ec":"<h2 style=\"color:SlateBlue;\"><b>EDA & Visualization<\/b><\/h2>","1b3765a3":"* https:\/\/www.kaggle.com\/ritesh7355\/netflix-eda-visualization-for-beginner\n* https:\/\/www.kaggle.com\/ritesh7355\/complete-data-visualization-using-seaborn\n* https:\/\/www.kaggle.com\/ritesh7355\/eda-visualization-indianeedsoxygen\n* https:\/\/www.kaggle.com\/ritesh7355\/cotton-disease-prediction-with-99-accuracy\n* https:\/\/www.kaggle.com\/ritesh7355\/shape-image-classification-with-accuracy-95-56","8e374da6":"<h2 style=\"color:SlateBlue;\"><b>Applying ML Models<\/b><\/h2>","eea9d3e4":"**Observation:-** Most of the Patients Have Value 1: typical angina","de919487":"<h2 style=\"color:SlateBlue;\"><b> Importing Required Libraries<\/b><\/h2>","4d63ec93":"<h2 style=\"color:red;\"><b>Heart Attack:-<\/b><\/h2>\n<h3 style=\"background-color:powderblue;\">\nA heart attack is a medical emergency. A heart attack usually occurs when a blood clot blocks blood flow to the heart. Without blood, tissue loses oxygen and dies.Symptoms include tightness or pain in the chest, neck, back or arms, as well as fatigue, lightheadedness, abnormal heartbeat and anxiety. Women are more likely to have atypical symptoms than men.Treatment ranges from lifestyle changes and cardiac rehabilitation to medication, stents and bypass surgery.<\/h3>\n","4a3f1e70":"**Observation:-** Most of the Patients have Age 58","90466054":"**Observation:-** Males patients are almost double than female","864719c9":"<h2 style=\"color:SlateBlue;\"><b>About Data:-<\/b><\/h2>\n\n* Age : Age of the patient\n* Sex : Sex of the patient\n* exang: exercise induced angina (1 = yes; 0 = no)\n* ca: number of major vessels (0-3)\n* cp : Chest Pain type chest pain type\n            Value 1: typical angina\n            Value 2: atypical angina\n            Value 3: non-anginal pain\n            Value 4: asymptomatic\n* trtbps : resting blood pressure (in mm Hg)\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* rest_ecg : resting electrocardiographic results\n            Value 0: normal\n            Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or       depression of > 0.05 mV)  \n            Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* thalach : maximum heart rate achieved\n* target : 0= less chance of heart attack 1= more chance of heart attack. <\/b>\n\n\n","e008415a":"### Removing Outliers","adacfcc7":"<h1 ><b>\ud83d\udc94Heart Attack  EDA, Visualization & Prediction \ud83d\udc97<\/b><\/h1>\n"}}