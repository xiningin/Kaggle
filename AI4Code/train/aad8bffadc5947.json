{"cell_type":{"76f9625e":"code","0950b047":"code","ca86c745":"code","dca6d018":"code","2485f5fc":"code","78a899d0":"code","980be7dc":"code","ffa65fae":"code","14c6638d":"code","7befc664":"code","9859482d":"code","25d1af2d":"code","c3aaff91":"code","bf3f87d4":"code","c3669322":"code","e63d6642":"code","79954823":"code","0429cb2d":"code","729220ea":"code","431a3180":"code","e0b61fe7":"code","9ce1eaff":"code","14f62663":"code","74033388":"code","2cac9028":"code","ee09c04e":"code","53ee40a1":"code","ec85a217":"code","c9a1f5c1":"code","03ccc122":"code","c310953b":"code","1a1d578a":"code","69458bf3":"code","6f2e3138":"code","034bb470":"code","342d6011":"code","b3f93941":"code","05946ab4":"code","f87b0733":"code","77c86738":"code","97cf0f97":"code","fac4de23":"code","2a228991":"code","9514502d":"code","f800a9ff":"code","e453bce5":"code","941ac298":"code","3603c306":"code","0f701b32":"code","7652f572":"code","f985ec55":"code","3063ace4":"code","d0f610cc":"code","2f7152ae":"code","8ab963b9":"code","975f83ef":"code","34920588":"code","e3b82f4d":"markdown","e21f3305":"markdown","ec0a8f82":"markdown","91d34a8c":"markdown","9d554ec4":"markdown","3a2e6333":"markdown","5516489c":"markdown","3c0402c3":"markdown","1d3ae820":"markdown","e656a882":"markdown","a111ebe5":"markdown","6e3d8058":"markdown","9b2dc90d":"markdown","d6bdd5e6":"markdown","58b23a7f":"markdown","218f10fa":"markdown","bbf4d375":"markdown","7b722c3c":"markdown","ffe1f72f":"markdown","3a110f53":"markdown","adf4b198":"markdown","e1d9d96d":"markdown","1267fb12":"markdown","adaf2183":"markdown","1b330e58":"markdown","ce600a02":"markdown","57860419":"markdown","e48b03ed":"markdown","5108b099":"markdown","e8c59422":"markdown","22a91bd9":"markdown","6d925d9c":"markdown","7bc89afd":"markdown","fbf4591e":"markdown"},"source":{"76f9625e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom imblearn.over_sampling import RandomOverSampler\nsns.set(style='whitegrid')","0950b047":"train=pd.read_csv('..\/input\/vehicle-data\/train.csv')\ntest=pd.read_csv('..\/input\/vehicle-data\/test.csv')","ca86c745":"test.head()","dca6d018":"train.head()","2485f5fc":"train.shape","78a899d0":"train.isnull().sum()","980be7dc":"numerical_columns=['Age', 'Region_Code','Annual_Premium','Vintage']\ncategorical_columns=['Gender','Driving_License','Previously_Insured','Vehicle_Age','Vehicle_Damage','Response']","ffa65fae":"train[numerical_columns].describe()","14c6638d":"train","7befc664":"sns.countplot(train.Response)","9859482d":"train.Response.value_counts()","25d1af2d":"sns.distplot(train.Age)","c3aaff91":"sns.boxplot(y = 'Age', data = train,palette='Accent')","bf3f87d4":"sns.scatterplot(x=train['Age'],y=train['Annual_Premium'])","c3669322":"sns.countplot(train.Gender)","e63d6642":"df=train.groupby(['Gender','Response'])['id'].count().to_frame().rename(columns={'id':'count'}).reset_index()\n","79954823":"g = sns.catplot(x=\"Gender\", y=\"count\",col=\"Response\",\n                data=df, kind=\"bar\",\n                height=4, aspect=.7);","0429cb2d":"df=train.groupby(['Gender'])['Driving_License'].count().to_frame().reset_index()","729220ea":"df","431a3180":"sns.catplot(x=\"Gender\", y=\"Driving_License\",\n                data=df, kind=\"bar\");","e0b61fe7":"sns.countplot(train.Previously_Insured)","9ce1eaff":"sns.countplot(train.Vehicle_Age)","14f62663":"df=train.groupby(['Vehicle_Age','Response'])['id'].count().to_frame().rename(columns={'id':'count'}).reset_index()\ndf","74033388":"g = sns.catplot(x=\"Vehicle_Age\", y=\"count\",col=\"Response\",\n                data=df, kind=\"bar\",\n                height=4, aspect=.7);","2cac9028":"sns.countplot(train.Vehicle_Damage)","ee09c04e":"df=train.groupby(['Vehicle_Damage','Response'])['id'].count().to_frame().rename(columns={'id':'count'}).reset_index()","53ee40a1":"g = sns.catplot(x=\"Vehicle_Damage\", y=\"count\",col=\"Response\",\n                data=df, kind=\"bar\",\n                height=4, aspect=.7);","ec85a217":"sns.distplot(train.Annual_Premium)","c9a1f5c1":"sns.boxplot(y = 'Annual_Premium', data = train,palette='Accent')","03ccc122":"sns.distplot(train.Vintage)","c310953b":"num_feat = ['Age','Vintage']\ncat_feat = ['Gender', 'Driving_License', 'Previously_Insured', 'Vehicle_Age_lt_1_Year','Vehicle_Age_gt_2_Years','Vehicle_Damage_Yes','Region_Code','Policy_Sales_Channel']","1a1d578a":"train['Gender'] = train['Gender'].map( {'Female': 0, 'Male': 1} ).astype(int)","69458bf3":"train=pd.get_dummies(train,drop_first=True)","6f2e3138":"train=train.rename(columns={\"Vehicle_Age_< 1 Year\": \"Vehicle_Age_lt_1_Year\", \"Vehicle_Age_> 2 Years\": \"Vehicle_Age_gt_2_Years\"})\ntrain['Vehicle_Age_lt_1_Year']=train['Vehicle_Age_lt_1_Year'].astype('int')\ntrain['Vehicle_Age_gt_2_Years']=train['Vehicle_Age_gt_2_Years'].astype('int')\ntrain['Vehicle_Damage_Yes']=train['Vehicle_Damage_Yes'].astype('int')","034bb470":"from sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler, RobustScaler\nss = StandardScaler()\ntrain[num_feat] = ss.fit_transform(train[num_feat])\n\n\nmm = MinMaxScaler()\ntrain[['Annual_Premium']] = mm.fit_transform(train[['Annual_Premium']])","342d6011":"train=train.drop('id',axis=1)","b3f93941":"for column in cat_feat:\n    train[column] = train[column].astype('str')","05946ab4":"train","f87b0733":"test['Gender'] = test['Gender'].map( {'Female': 0, 'Male': 1} ).astype(int)\ntest=pd.get_dummies(test,drop_first=True)\ntest=test.rename(columns={\"Vehicle_Age_< 1 Year\": \"Vehicle_Age_lt_1_Year\", \"Vehicle_Age_> 2 Years\": \"Vehicle_Age_gt_2_Years\"})\ntest['Vehicle_Age_lt_1_Year']=test['Vehicle_Age_lt_1_Year'].astype('int')\ntest['Vehicle_Age_gt_2_Years']=test['Vehicle_Age_gt_2_Years'].astype('int')\ntest['Vehicle_Damage_Yes']=test['Vehicle_Damage_Yes'].astype('int')","77c86738":"from sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler, RobustScaler\nss = StandardScaler()\ntest[num_feat] = ss.fit_transform(test[num_feat])\n\n\nmm = MinMaxScaler()\ntest[['Annual_Premium']] = mm.fit_transform(test[['Annual_Premium']])","97cf0f97":"for column in cat_feat:\n    test[column] = test[column].astype('str')","fac4de23":"from sklearn.model_selection import train_test_split\n\ntrain_target=train['Response']\ntrain=train.drop(['Response'], axis = 1)\nx_train,x_test,y_train,y_test = train_test_split(train,train_target, random_state = 0)","2a228991":"id=test.id","9514502d":"test=test.drop('id',axis=1)","f800a9ff":"x_train.columns","e453bce5":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom catboost import CatBoostClassifier\nfrom scipy.stats import randint\nimport pickle\nimport xgboost as xgb\nimport lightgbm as lgb\nfrom sklearn.metrics import accuracy_score\n# import packages for hyperparameters tuning\nfrom hyperopt import STATUS_OK, Trials, fmin, hp, tpe\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV, StratifiedKFold, KFold, GridSearchCV\nfrom sklearn.metrics import f1_score, roc_auc_score,accuracy_score,confusion_matrix, precision_recall_curve, auc, roc_curve, recall_score, classification_report ","941ac298":"%pylab inline","3603c306":"x_train.dtypes","0f701b32":"random_search = {'criterion': ['entropy', 'gini'],\n               'max_depth': [2,3,4,5,6,7,10],\n               'min_samples_leaf': [4, 6, 8],\n               'min_samples_split': [5, 7,10],\n               'n_estimators': [300]}\n\nclf = RandomForestClassifier()\nmodel = RandomizedSearchCV(estimator = clf, param_distributions = random_search, n_iter = 10, \n                               cv = 4, verbose= 1, random_state= 101, n_jobs = -1)\nmodel.fit(x_train,y_train)","7652f572":"filename = 'rf_model.sav'\npickle.dump(model, open(filename, 'wb'))","f985ec55":"filename = 'rf_model.sav'","3063ace4":"rf_load = pickle.load(open(filename, 'rb'))","d0f610cc":"y_pred=model.predict(x_test)","2f7152ae":"print (classification_report(y_test, y_pred))","8ab963b9":"y_score = model.predict_proba(x_test)[:,1]\nfpr, tpr, _ = roc_curve(y_test, y_score)\n\ntitle('Random Forest ROC curve: CC Fraud')\nxlabel('FPR (Precision)')\nylabel('TPR (Recall)')\n\nplot(fpr,tpr)\nplot((0,1), ls='dashed',color='black')\nplt.show()\nprint ('Area under curve (AUC): ', auc(fpr,tpr))","975f83ef":"roc_auc_score(y_test, y_score)","34920588":"#X_cat_train, X_cat_test, y_cat_train, y_cat_test = train_test_split(X_cat, Y_cat, test_size = 0.22, random_state = 22, stratify = Y_cat, shuffle = True)\n\ncat_model = CatBoostClassifier()\ncat_model = cat_model.fit(x_train, y_train, cat_features = cat_feat, eval_set = (x_test, y_test), early_stopping_rounds = 10, verbose = 100)\n\npredictions = [pred[1] for pred in cat_model.predict_proba(x_test)]\nprint('Validation ROC AUC Score:', roc_auc_score(y_test, predictions, average = 'weighted'))","e3b82f4d":"<font size=\"+3\" color='#053c96'><b> Problem Statement<\/b><\/font>","e21f3305":"# Evaluate Model ","ec0a8f82":"<font size=\"+1\" color='blue'><b> I hope you enjoyed this kernel , Please don't forget to appreciate me with an Upvote.<\/b><\/font>","91d34a8c":"## Save model","9d554ec4":"<img src=\"https:\/\/i.pinimg.com\/originals\/e2\/d7\/c7\/e2d7c71b09ae9041c310cb6b2e2918da.gif\">","3a2e6333":"# Annual Premium Distribution ","5516489c":"# Response and Vehicle age","3c0402c3":"# Customers having damaged vehicle","1d3ae820":"## Classification Report ","e656a882":"# Check for missing values","a111ebe5":"* No missing data","6e3d8058":"<font size=\"+3\" color='#540b11'><b> Exploratory Data Analysis <\/b><\/font>","9b2dc90d":"# Age Vs Annual premium ","d6bdd5e6":"# Customers having Vehicle insurance already","58b23a7f":"<font size=\"+3\" color='#540b11'><b> Data Preprocessing <\/b> <\/font>","218f10fa":"# Damage Vehicle and Response","bbf4d375":"<font size=\"+3\" color='#053c96'><b>Bussiness Goal<\/b><\/font>","7b722c3c":"# Import Libraries","ffe1f72f":"# Target Variable (Response)","3a110f53":"<font size=\"+3\" color='#053c96'><b>This Notebook will cover - <\/b><\/font>\n### 1. Exploratory Data Analysis\n### 2. Data Modelling and Evaluation","adf4b198":"# Vintage\n\nNumber of Days, Customer has been associated with the company","e1d9d96d":"Our client is an Insurance company that has provided Health Insurance to its customers now they need your help in building a model to predict whether the policyholders (customers) from past year will also be interested in Vehicle Insurance provided by the company.\n\nAn insurance policy is an arrangement by which a company undertakes to provide a guarantee of compensation for specified loss, damage, illness, or death in return for the payment of a specified premium. A premium is a sum of money that the customer needs to pay regularly to an insurance company for this guarantee.\n\nFor example, you may pay a premium of Rs. 5000 each year for a health insurance cover of Rs. 200,000\/- so that if, God forbid, you fall ill and need to be hospitalised in that year, the insurance provider company will bear the cost of hospitalisation etc. for upto Rs. 200,000. Now if you are wondering how can company bear such high hospitalisation cost when it charges a premium of only Rs. 5000\/-, that is where the concept of probabilities comes in picture. For example, like you, there may be 100 customers who would be paying a premium of Rs. 5000 every year, but only a few of them (say 2-3) would get hospitalised that year and not everyone. This way everyone shares the risk of everyone else.\n\nJust like medical insurance, there is vehicle insurance where every year customer needs to pay a premium of certain amount to insurance provider company so that in case of unfortunate accident by the vehicle, the insurance provider company will provide a compensation (called \u2018sum assured\u2019) to the customer.","1267fb12":"<font size=\"+2\" color=chocolate ><b>Please Upvote my kernel if you like my work.<\/b><\/font>","adaf2183":"<font size=\"+3\" color='#540b11'><b> Data Modelling and Evaluation <\/b> <\/font>","1b330e58":"# Gender and Response","ce600a02":"Building a model to predict whether a customer would be interested in Vehicle Insurance is extremely helpful for the company because it can then accordingly plan its communication strategy to reach out to those customers and optimise its business model and revenue.\n\nNow, in order to predict, whether the customer would be interested in Vehicle insurance, you have information about demographics (gender, age, region code type), Vehicles (Vehicle Age, Damage), Policy (Premium, sourcing channel) etc.","57860419":"# Driving license by Gender","e48b03ed":"# Import Dataset","5108b099":"## ROC Curve & AUC of Random forest classifier","e8c59422":"![image.png](attachment:image.png)","22a91bd9":"# Age Distribution of Customers","6d925d9c":"# Vehicle Age ","7bc89afd":"# Random Forest Classifier","fbf4591e":"# CatBoost "}}