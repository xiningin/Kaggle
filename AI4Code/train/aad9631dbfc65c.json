{"cell_type":{"4bbbb2c8":"code","35ce1078":"code","cea8ec5b":"code","1d2be4b8":"code","f02aefc0":"code","43f6cd22":"code","b272b272":"code","17310a83":"code","cc6d6303":"code","61d30e9d":"code","1ad81516":"code","17aa16dd":"code","f477a45f":"markdown","dc0c1ca4":"markdown","3f6acc9a":"markdown","4eda8a6a":"markdown","46f3c94b":"markdown","593afee2":"markdown","1db2ddda":"markdown","cb7069da":"markdown","b01726a5":"markdown","e98c4750":"markdown"},"source":{"4bbbb2c8":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","35ce1078":"full_df = pd.read_csv('\/kaggle\/input\/have-you-ever\/responses.csv')\nfull_df = full_df.drop(['Timestamp'], axis=1) #timestamp isn't necessary for this challenge\nfull_df.head()","cea8ec5b":"col_list = list(full_df.columns)\ncol_list#unhide to see the full list of columns referenced in later cells","1d2be4b8":"task_1 = full_df.loc[full_df['Age range'] == '19-24']\ntask_1 = task_1.loc[task_1['broken a bone'] == True]\ntask_1.shape","f02aefc0":"task_2 = full_df.loc[full_df['ran a marathon'] == True]\ntask_2 = task_2.loc[task_2['had braces'] == True]\ntask_2.shape","43f6cd22":"print('###Full Data Set###\\n')\nfor val in col_list:\n    _ = full_df[val].value_counts()\n    if val == 'Age range':\n        pass\n    elif _[1] <= 300 or _[1] >= 3000:\n        print(val, '\\nFalse:', _[0], 'True:', _[1],'\\n')\n\nprint('\\n\\n###Task 1 Subset###\\n')\nfor val in col_list:\n    _ = task_1[val].value_counts()\n    if val == 'Age range' or val == 'broken a bone':\n        pass\n    elif _[1] <= 43 or _[1] >= 387:\n        print(val, '\\nFalse:', _[0], 'True:', _[1],'\\n')\n\nprint('\\n\\n###Task 2 Subset###\\n')\nfor val in col_list:\n    _ = task_2[val].value_counts()\n    if val == 'ran a marathon' or val == 'had braces':\n        pass\n    elif _[1] <= 10 or _[1] >= 63:\n        print(val, '\\nFalse:', _[0], 'True:', _[1],'\\n')","b272b272":"import matplotlib.pyplot as plt\nimport seaborn as sns","17310a83":"for col in col_list[1:]:\n    fig, ax =plt.subplots(1,3,  figsize=(10, 5))\n    ax[0].set_title('Full Data Frame')\n    sns.countplot(full_df[col], ax=ax[0])\n    ax[1].set_title('Task 1 subset')\n    sns.countplot(task_1[col], ax=ax[1])\n    ax[2].set_title('Task 2 subset')\n    sns.countplot(task_2[col], ax=ax[2])","cc6d6303":"hypo = full_df.loc[full_df['Age range'] != '19-24']\nhypo = hypo.loc[hypo['Age range'] != '0-18']\nhypo2 = hypo.loc[hypo['broken a bone'] == True]\nhypo = hypo.loc[hypo['broken a bone'] == False]\nprint('Cases where person has been 19-24 and broken a bone: ',hypo2.shape[0],'\\nCases where a person has been 19-24 but not broken a bone: ', hypo.shape[0])","61d30e9d":"full_df['Age range'].value_counts()","1ad81516":"a18 = full_df.loc[full_df['Age range'] == '0-18']\na24 = full_df.loc[full_df['Age range'] == '19-24']\na34 = full_df.loc[full_df['Age range'] == '25-34']\na44 = full_df.loc[full_df['Age range'] == '35-44']\na54 = full_df.loc[full_df['Age range'] == '45-54']\na64 = full_df.loc[full_df['Age range'] == '55-64']\na74 = full_df.loc[full_df['Age range'] == '65-74']\na100 = full_df.loc[full_df['Age range'] == '75+']","17aa16dd":"col = 'broken a bone'\n\nfig, ax =plt.subplots(1,8, figsize=(24, 10))\nax[0].set_title('0-18')\nsns.countplot(a18[col], ax=ax[0])\nax[1].set_title('19-24')\nsns.countplot(a24[col], ax=ax[1])\nax[2].set_title('25-34')\nsns.countplot(a34[col], ax=ax[2])\nax[3].set_title('35-44')\nsns.countplot(a44[col], ax=ax[3])\nax[4].set_title('45-54')\nsns.countplot(a54[col], ax=ax[4])\nax[5].set_title('55-64')\nsns.countplot(a64[col], ax=ax[5])\nax[6].set_title('65-74')\nsns.countplot(a74[col], ax=ax[6])\nax[7].set_title('75+')\nsns.countplot(a100[col], ax=ax[7])\n","f477a45f":"## Countplots\n\nBelow we have a series of countplots depicting the True\/False frequencies for each group. while the total values for the three groups will have different scales, one can get a good understanding of the ratios by viewing the plots side by side","dc0c1ca4":"# Final Thoughts:\n\nThere was a greater number of observed differences in the second tasks responses. Many of these responses are tied to outdoor activities. I'm curious if more questions were added which were indoor activities, if then we would see some larger deviations in the other groups. This also makes me wonder about those who are 35+ who haven't broken broken bones and what makes that group unique. There are certainly more interesting tidbits that could be teased out of this data set. Thanks for viewing this notebook!\n\nThis year I've challenged myself to complete one task on Kaggle per week, in order to develop a larger Data Science portfolio. If you found this notebook useful or interesting please give it an upvote. I'm always open to constructive feedback. If you have any questions, comments, concerns, or if you would like to collaborate on a future task of the week feel free to leave a comment here or message me directly. For past TOTW check out the link to my page on github for this ongoing project\nhttps:\/\/github.com\/Neil-Kloper\/Weekly-Kaggle-Task\/wiki","3f6acc9a":"## Step 2: Compare  similarities\n\nBelow we will view which features each dataframe has with 90% or higher conformity (90% or more of the group had the same answer). \n","4eda8a6a":"The graphs above, shows that the older a person is the more likely that they have experienced a broken bone. Note that there are only 21 cases that are older than 54 in the dataset so those figures should be taken with a grain of salt.","46f3c94b":"### Step 3: One last hypothesis\n\nObservations in the 19-24 who have broken bones subgroup doesn\u2019t seem to have a lot of distinctions between them and the general population. One possible explanation is that by the time one reaches the age of 25 the vast majority of them have already suffered a broken bone before (so not everyone is in the task one category but that everyone would qualify for it after a point in their lives) ","593afee2":"### Task 1 Observations\nThe 19-24 group who had already experienced a broken bone was more likely to have been on the radio or television, gotten stitches,had braces, but on the positive side were less likely to have been defecated on by a bird.\n\n### Task 2 Observations\nThe group of marathon runners who had had braces were more likely to have gotten a speeding ticket, gone skydiving, driven a boat, been on water skis, been on a motorcycle, been horseback riding, been alpine skiing, regifted a gift, paid for a stranger's meal, been defecated on by a bird, have glasses or contacts, and been shown on a jumbotron at a sporting event. ","1db2ddda":"Looking above there isn't much for unifying factors. The two task subgroups both are more likely to have sung in the shower than the rest of the population. ","cb7069da":"##### Disclaimer: Task 2 group size\nThere are only 73 observed cases who have both run a marathon and had braces. This makes up less than 5% of the dataset. Because of the small sample size, these results might not generalize well.","b01726a5":"## Step 1: Load the data\n\nI'll begin by loading the data into three different dataframes. The full dataframe, the dataframe that meets the criteria of the first task, and the dataframe that meets the condition of the second task. The two task dataframes will be created using pandas filters.","e98c4750":"### Task: What else do people ages 19-24 who've broken bones have in common with each other?\n\n### Task: What else do people who've both ran a marathon and had braces have in common?\n\nEach week I challenge myself to find and solve a task on kaggle to build a better Data Science portfolio. For this week's challenge I chose to knock out two similar tasks with one notebook.\n\nSpecial thanks to:\n* Benjamin Soyka https:\/\/www.kaggle.com\/bsoyka3 for both the dataset and the challenge. I'm grateful to have a less serious task to tackle this week."}}