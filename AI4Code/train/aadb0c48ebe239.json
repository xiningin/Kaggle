{"cell_type":{"e3c56d02":"code","cc2c77d0":"code","0fd807bf":"code","0344f08d":"code","57523677":"code","7c475aee":"code","63d09204":"code","3b1e09b1":"code","314a89fc":"code","222aa678":"code","b7fa327d":"code","3d4ae8ae":"markdown","ae8b7f4c":"markdown","ca1100d9":"markdown","2ddd2d3a":"markdown","85742220":"markdown","f2cb6dca":"markdown","d0128652":"markdown","766d0616":"markdown","9ff69328":"markdown","88e99c25":"markdown","e9e14b5e":"markdown","ab242d83":"markdown","8ac362d8":"markdown","7022e424":"markdown"},"source":{"e3c56d02":"# Setup feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.feature_engineering_new.ex2 import *\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.feature_selection import mutual_info_regression\n\n# Set Matplotlib defaults\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\n    \"axes\",\n    labelweight=\"bold\",\n    labelsize=\"large\",\n    titleweight=\"bold\",\n    titlesize=14,\n    titlepad=10,\n)\n\n\n# Load data\ndf = pd.read_csv(\"..\/input\/fe-course-data\/ames.csv\")\n\n\n# Utility functions from Tutorial\ndef make_mi_scores(X, y):\n    X = X.copy()\n    for colname in X.select_dtypes([\"object\", \"category\"]):\n        X[colname], _ = X[colname].factorize()\n    # All discrete features should now have integer dtypes\n    discrete_features = [pd.api.types.is_integer_dtype(t) for t in X.dtypes]\n    mi_scores = mutual_info_regression(X, y, discrete_features=discrete_features, random_state=0)\n    mi_scores = pd.Series(mi_scores, name=\"MI Scores\", index=X.columns)\n    mi_scores = mi_scores.sort_values(ascending=False)\n    return mi_scores\n\n\ndef plot_mi_scores(scores):\n    scores = scores.sort_values(ascending=True)\n    width = np.arange(len(scores))\n    ticks = list(scores.index)\n    plt.barh(width, scores)\n    plt.yticks(width, ticks)\n    plt.title(\"Mutual Information Scores\")","cc2c77d0":"features = [\"YearBuilt\", \"MoSold\", \"ScreenPorch\"]\nsns.relplot(\n    x=\"value\", y=\"SalePrice\", col=\"variable\", data=df.melt(id_vars=\"SalePrice\", value_vars=features), facet_kws=dict(sharex=False),\n);","0fd807bf":"# View the solution (Run this cell to receive credit!)\nq_1.check()","0344f08d":"X = df.copy()\ny = X.pop('SalePrice')\n\nmi_scores = make_mi_scores(X, y)","57523677":"# uncomment to see top 20\nprint(mi_scores.head(20))\n# uncomment to see bottom 20\nprint(mi_scores.tail(20))  \n\nplt.figure(dpi=100, figsize=(8, 5))\n# uncomment to see top 20\nplot_mi_scores(mi_scores.head(20))\n# uncomment to see bottom 20\nplot_mi_scores(mi_scores.tail(20))","7c475aee":"# View the solution (Run this cell to receive credit!)\nq_2.check()","63d09204":"sns.catplot(x=\"BldgType\", y=\"SalePrice\", data=df, kind=\"boxen\");","3b1e09b1":"feature = \"MoSold\"\n\nsns.lmplot(\n    x=feature, y=\"SalePrice\", hue=\"BldgType\", col=\"BldgType\",\n    data=df, scatter_kws={\"edgecolor\": 'w'}, col_wrap=3, height=4,\n);","314a89fc":"feature = \"GrLivArea\"\n\nsns.lmplot(\n    x=feature, y=\"SalePrice\", hue=\"BldgType\", col=\"BldgType\",\n    data=df, scatter_kws={\"edgecolor\": 'w'}, col_wrap=3, height=4,\n);","222aa678":"# View the solution (Run this cell to receive credit!)\nq_3.check()","b7fa327d":"mi_scores.head(10)","3d4ae8ae":"Still, the type of a dwelling seems like it should be important information. Investigate whether `BldgType` produces a significant interaction with either of the following:\n\n```\nGrLivArea  # Above ground living area\nMoSold     # Month sold\n```\n\nRun the following cell twice, the first time with `feature = \"GrLivArea\"` and the next time with `feature=\"MoSold\"`:","ae8b7f4c":"-------------------------------------------------------------------------------\n\nThe *Ames* dataset has seventy-eight features -- a lot to work with all at once! Fortunately, you can identify the features with the most potential.\n\nUse the `make_mi_scores` function (introduced in the tutorial) to compute mutual information scores for the *Ames* features:\n","ca1100d9":"Now examine the scores using the functions in this cell. Look especially at top and bottom ranks.","2ddd2d3a":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/221677) to chat with other Learners.*","85742220":"-------------------------------------------------------------------------------\n\nTo start, let's review the meaning of mutual information by looking at a few features from the *Ames* dataset.","f2cb6dca":"# Introduction #\n\nIn this exercise you'll identify an initial set of features in the [*Ames*](https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/data) dataset to develop using mutual information scores and interaction plots.\n\nRun this cell to set everything up!","d0128652":"# 1) Understand Mutual Information\n\nBased on the plots, which feature do you think would have the highest mutual information with `SalePrice`?","766d0616":"# A First Set of Development Features #\n\nLet's take a moment to make a list of features we might focus on. In the exercise in Lesson 3, you'll start to build up a more informative feature set through combinations of the original features you identified as having high potential.\n\nYou found that the ten features with the highest MI scores were:","9ff69328":"Do you recognize the themes here? Location, size, and quality. You needn't restrict development to only these top features, but you do now have a good place to start. Combining these top features with other related features, especially those you've identified as creating interactions, is a good strategy for coming up with a highly informative set of features to train your model on.\n\n# Keep Going #\n\n[**Start creating features**](https:\/\/www.kaggle.com\/ryanholbrook\/creating-features) and learn what kinds of transformations different models are most likely to benefit from.","88e99c25":"**This notebook is an exercise in the [Feature Engineering](https:\/\/www.kaggle.com\/learn\/feature-engineering) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/ryanholbrook\/mutual-information).**\n\n---\n","e9e14b5e":"# 3) Discover Interactions\n\nFrom the plots, does `BldgType` seem to exhibit an interaction effect with either `GrLivArea` or `MoSold`?","ab242d83":"# 2) Examine MI Scores\n\nDo the scores seem reasonable? Do the high scoring features represent things you'd think most people would value in a home? Do you notice any themes in what they describe? ","8ac362d8":"-------------------------------------------------------------------------------\n\nIn this step you'll investigate possible interaction effects for the `BldgType` feature. This feature describes the broad structure of the dwelling in five categories:\n\n> Bldg Type (Nominal): Type of dwelling\n>\t\t\n>       1Fam\tSingle-family Detached\t\n>       2FmCon\tTwo-family Conversion; originally built as one-family dwelling\n>       Duplx\tDuplex\n>       TwnhsE\tTownhouse End Unit\n>       TwnhsI\tTownhouse Inside Unit\n\nThe `BldgType` feature didn't get a very high MI score. A plot confirms that the categories in `BldgType` don't do a good job of distinguishing values in `SalePrice` (the distributions look fairly similar, in other words):","7022e424":"The trend lines being significantly different from one category to the next indicates an interaction effect."}}