{"cell_type":{"2d7b36e7":"code","75e88aa5":"code","ad4a6a56":"code","fc0bf109":"code","f99fd1cb":"code","bf1c3c90":"code","beb4d4ad":"code","2a9f1272":"code","18483dcc":"code","c02b9ea3":"code","79a9d64b":"code","17f9c574":"code","e5ed5f87":"markdown","3d6e6621":"markdown","443b5fb3":"markdown","288484b8":"markdown","60b51e5c":"markdown","1e872a07":"markdown","ff5df32a":"markdown","5cda6d95":"markdown","1c2fd512":"markdown","dcaa6cd2":"markdown","a54f78b5":"markdown","b777e5fc":"markdown","bc48835d":"markdown","66aeb194":"markdown"},"source":{"2d7b36e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","75e88aa5":"#Import the data\nfilename = '\/kaggle\/input\/bankchurnerscsv\/BankChurners.csv'\ndf1 = pd.read_csv(filename)","ad4a6a56":"#Import the packages\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","fc0bf109":"#Separate the dataframes into customer who attrited and those who didn't\n\ndfatt = df1[df1['Attrition_Flag'] == 'Attrited Customer']\ndfext = df1[df1['Attrition_Flag'] == 'Existing Customer']\n","f99fd1cb":"#Build the boxplot\nfig1 = go.Figure()\nfig1.add_trace(go.Box(y = dfatt['Customer_Age'], name = 'Attrition base'))\nfig1.add_trace(go.Box(y = dfext['Customer_Age'], name = 'Existing customers'))\nfig1.update_layout(plot_bgcolor = 'white', title = 'Age distribution of customers who attrited versus those who remain', yaxis = dict(title = 'Age'))\nfig1.show()","bf1c3c90":"#Group the attrition base by card type\ndfcardtype = dfatt.groupby('Card_Category')['CLIENTNUM'].count()\nfig2 = px.pie(values = dfcardtype, names = dfcardtype.index, color_discrete_sequence = px.colors.qualitative.Set2)\nfig2.update_layout(title = 'Card type of attrition base')\nfig2.show()","beb4d4ad":"#Group the data for all customers by card type\ndfcardtypeall = df1.groupby('Card_Category')['CLIENTNUM'].count()\nfig2a = px.pie(values = dfcardtypeall, names = dfcardtypeall.index, color_discrete_sequence = px.colors.qualitative.Set2)\nfig2a.update_layout(title = 'Card type of full base')\nfig2a.show()","2a9f1272":"#Build the boxplot\nfig3 = go.Figure()\nfig3.add_trace(go.Box(y = dfatt['Total_Trans_Ct'], name = 'Attrition base'))\nfig3.add_trace(go.Box(y = dfext['Total_Trans_Ct'], name = 'Existing customers'))\nfig3.update_layout(plot_bgcolor = 'white', title = 'Transaction distribution of customers who attrited versus those who remain', yaxis = dict(title = 'Number of transactions'))\nfig3.show()","18483dcc":"#Build the boxplot\nfig4 = go.Figure()\nfig4.add_trace(go.Box(y = dfatt['Total_Ct_Chng_Q4_Q1'], name = 'Attrition base'))\nfig4.add_trace(go.Box(y = dfext['Total_Ct_Chng_Q4_Q1'], name = 'Existing customers'))\nfig4.update_layout(plot_bgcolor = 'white', title = 'Change in transactions between customers who attrited versus those who remain', yaxis = dict(title = 'Change in number of transactions'))\nfig4.show()","c02b9ea3":"#Aggregate the data for the bar chart\n\ndfline = df1.groupby('Attrition_Flag').agg({'Credit_Limit':'mean'})\n\n#Build the bar chart\nfig5 = px.bar(dfline)\nfig5.update_layout(plot_bgcolor = 'white', title = 'Average credit line')\nfig5.show()","79a9d64b":"# Build the boxplot\nfig6 = go.Figure()\nfig6.add_trace(go.Box(y = dfatt['Avg_Utilization_Ratio'], name = 'Attrition base'))\nfig6.add_trace(go.Box(y = dfext['Avg_Utilization_Ratio'], name = 'Existing customers'))\nfig6.update_layout(plot_bgcolor = 'white', title = 'Utilisation level')\nfig6.show()","17f9c574":"#Build the boxplot\nfig7 = go.Figure()\nfig7.add_trace(go.Box(y = dfatt['Months_Inactive_12_mon'], name = 'Attrition base'))\nfig7.add_trace(go.Box(y = dfext['Months_Inactive_12_mon'], name = 'Existing customers'))\nfig7.update_layout(plot_bgcolor = 'white', title = 'Months inactive')\nfig7.show()","e5ed5f87":"# Hypothesis 4: customers who attrite will use less of their credit line (i.e. have lower utilisation)\nGiven what we saw in the transactional data, our next hypothesis is that customers who attrite have lower utilisation.  This means they use less of their credit line with us.   The first thing we need to check is whether we are giving these customers a similar credit line.","3d6e6621":"We can clearly see that the attrition base is transacting far less than existing customers.  But is this because of a decline in transactions or did they always do less transactions?","443b5fb3":"It doesn't look like we're offering a lower line to attrited customers so now let's check out whether they are using their line less.","288484b8":"We can clearly see from this graph, that the bulk of the attrition base is from 'Blue' customers.  But does this reflect the portfolio as a whole?","60b51e5c":"# Hypothesis 5: the attrition base have been inactive for longer than the customers who remain\nGiven the the attrition base is utilising the card less, do they have a sustained period of inactivity?","1e872a07":"It seems like the attrition base have a higher number of months inactive versus existing customers, the data is less distributed than existing customers. \n\n**Hypothesis 5: partially proven**\n","ff5df32a":"We can clearly see that the attrition base is skewed to 0% utilisation; i.e. they are not using their card at all.\n\n**Hypothesis 4: proven**","5cda6d95":"There isn't much change between the the attrition base and exitsing customers in the change in their transactions so customers are probably using their cards less to start with.\n\n**Hypothesis 3: proven**","1c2fd512":"# Who are customers that leave banks?\n\nIn any business, we want to understand the customer lifecycle, and put in methodologies to prevent customers leaving.  Normally in financial services, you can see customers start to disengage before they actually close their products, and this is the point to intervene.  In this analysis, we will analyse the factors that seem to affect whether a customer will attrite.\n\n![](https:\/\/www.smartsheet.com\/sites\/default\/files\/2020-07\/IC-Client-Lifecycle-Stages-Circle.png)","dcaa6cd2":"# Hypothesis 1: Customers who attrite are more likely to be younger\nThe first hypothesis we want to test is whether customers who attrite are likely to be younger.  Many financial services firms are struggling to attract and keep younger customers vs fintechs","a54f78b5":"# Hypothesis 3: customers who transact less are more likely to attrite\nIn this hypothesis we want to understand if customers who transact less are more likely to attrite.  First lets look at overall transaction levels","b777e5fc":"The attrition base seems to very closely reflect the portfolio, so it doesn't seem like the card type makes any difference to attrition\n\n**Hypothesis 2: not proven**","bc48835d":"The attrition base is slightly older but this is not significant in this dataset.\n\n**Hypothesis 1: not proven**","66aeb194":"# Hypothesis 2: does the card type make a difference?\nNext we want to understand whether the card type makes a difference to whether a customer is likely to attrite"}}