{"cell_type":{"21d17638":"code","8024e029":"code","9b98cd33":"code","39c5480a":"code","11640b95":"markdown","ac0036aa":"markdown","61921668":"markdown"},"source":{"21d17638":"import matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nimport plotly.express as px\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import datasets, svm, metrics\nfrom sklearn.model_selection import train_test_split","8024e029":"digits = datasets.load_digits()\n_, axes = plt.subplots(nrows=1, ncols=10, figsize=(20, 6))\nfor ax, image, label in zip(axes, digits.images, digits.target):\n    ax.set_axis_off()\n    ax.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')\n    ax.set_title('Training: %i' % label)","9b98cd33":"# flatten the images\nn_samples = len(digits.images)\ndata = digits.images.reshape((n_samples, -1))\n\n# Transforming data \nscaler = MinMaxScaler(feature_range=(0, 1))\ndata = scaler.fit_transform(data)\n\n# Split data into 50% train and 50% test subsets\nX_train, X_test, y_train, y_test = train_test_split(\n    data, digits.target, test_size=0.5, shuffle=False)\n\n# Create Logistic Regression model\nclf = LogisticRegression(solver='liblinear', random_state=0)\n\n# Learn the digits on the train subset\nclf.fit(X_train, y_train)\n\n# Predict the value of the digit on the test subset\npredicted = clf.predict(X_test)\n\n_, axes = plt.subplots(nrows=1, ncols=10, figsize=(20, 6))\nfor ax, image, prediction in zip(axes, X_test, predicted):\n    ax.set_axis_off()\n    image = image.reshape(8, 8)\n    ax.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')\n    ax.set_title(f'Prediction: {prediction}')","39c5480a":"train_scores = cross_val_score(clf, X_train, y_train, cv=5)\ntest_scores = cross_val_score(clf, X_test, y_test, cv=5)\n\nprint(f\"train_scores: {train_scores}\")\nprint(f\"test_scores: {test_scores}\")","11640b95":"# Import","ac0036aa":"# Data","61921668":"# Tarea #5\n\nImplemente un modelo de Regresi\u00f3n Log\u00edstica para predecir el d\u00edgito (Handwriting Recognition)\n* Escalamiento o Transformaci\u00f3n (2 pt)\n* Dividir el set de datos Train\/Test o usar Cross Validation (3 pt)\n* Declarar un modelo de Regresi\u00f3n Log\u00edstica con los hiperpar\u00e1metros que considere necesarios (6 pt)\n* Evaluar el modelo (3 pts)\n* Muestre almenos 10 d\u00edgitos (usando matplotlib) con sus respectivas predicciones (6 pts)"}}