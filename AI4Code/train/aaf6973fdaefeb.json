{"cell_type":{"bd8c3514":"code","a299bf9a":"code","d7e74b4f":"code","1bac9c03":"code","e65bfd84":"code","23a04f46":"code","3592521b":"code","585f85d9":"code","8d51d42b":"code","6b35bd55":"code","fe2682ce":"code","1312d158":"code","37c73e41":"code","03d803d8":"code","60434cdc":"code","eacb8e74":"code","db55aa8a":"code","100bead2":"code","234b60a4":"markdown","950733a3":"markdown","78e2b3c7":"markdown","c9b86cdd":"markdown"},"source":{"bd8c3514":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pylab as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a299bf9a":"df = pd.read_csv(\"\/kaggle\/input\/finance-accounting-courses-udemy-13k-course\/udemy_output_All_Finance__Accounting_p1_p626.csv\")","d7e74b4f":"df.shape","1bac9c03":"df.head()","e65bfd84":"df.nunique(axis=0)\n#It shows unique values for each variable\n#We can understand that in \"is_wishlisted\" column there is no variable except for \"False\". \n#Then, we will not need to investigate this column.\n#Same situation is also valid for \"discount_price_currency\", and \"price_detail_currency\".\n#So the first thing I will do in data-cleaning is to get rid of those column.\n#Also we ve seen that there are 13608 columns from df.shape. And in this list, we can see that there are 13608 different id variables.\n#Which means, every course is unique and it was obvious. The second thing I will get rid of will be the \"id\" column.","23a04f46":"# Letting unnecessary columns go\ndf = df.drop(columns = [\"id\", \"is_wishlisted\", \"discount_price__currency\", \"price_detail__currency\"])","3592521b":"# percentage of missing values in each column\n#Reference: https:\/\/www.kaggle.com\/gauravduttakiit\/creditcard-fraud-detection-by-logistic-regression\nround(100 * (df.isnull().sum()\/len(df)),2).sort_values(ascending=False)","585f85d9":"# percentage of missing values in each row\n#Reference: https:\/\/www.kaggle.com\/gauravduttakiit\/creditcard-fraud-detection-by-logistic-regression\nround(100 * (df.isnull().sum(axis=1)\/len(df)),2).sort_values(ascending=False)","8d51d42b":"# There are some missing values. Lets find them.\n#Reference: https:\/\/www.youtube.com\/watch?v=eMOA1pPVUc4\nnew_df = df[df.isna().any(axis=1)]\ndisplay(new_df)","6b35bd55":"# We will have to drop those rows by the method below if we want to make an analysis on a specific column which includes NaN.\ndf = df.drop(df.index[[33,39,40,80,90]])","fe2682ce":"df.describe()","1312d158":"df.info()","37c73e41":"#Lets investigate the relationship btw the year of publication and number of subscribers\n#First, we should scrap the year\ndf[\"published_time\"] = pd.to_datetime(df[\"published_time\"])","03d803d8":"df[\"publication_year\"] = df[\"published_time\"].dt.year","60434cdc":"year_df = df.groupby(\"publication_year\").sum()","eacb8e74":"year_df","db55aa8a":"years = [year for year, df in df.groupby(['publication_year'])]\nplt.bar(years,df.groupby(['publication_year']).sum()['num_subscribers'])\nplt.ylabel('Subscribers')\nplt.xlabel('Years')\nplt.xticks(years, rotation='vertical', size=10)\nplt.show()\n#Reference: https:\/\/www.youtube.com\/watch?v=eMOA1pPVUc4","100bead2":"#It can be seen that the number of subscribers skyrocketed btw 2012-2017, and then, it started to decrease.","234b60a4":"Cleaning","950733a3":"Simple Graph","78e2b3c7":"Partially Clean Data","c9b86cdd":"A Rough Look at Our Data"}}