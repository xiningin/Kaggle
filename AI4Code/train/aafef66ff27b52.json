{"cell_type":{"51b59aba":"code","53f96137":"code","c6b7843c":"code","eebfb568":"code","286ccae4":"code","35fc77ad":"code","21a2b9cb":"code","fddcaffa":"code","fc7905e9":"code","1bcbff9e":"code","4a0bd99f":"markdown","f3f456b0":"markdown","dbde81e0":"markdown","676760ce":"markdown","badf7e3e":"markdown","76c2de4a":"markdown","240963c9":"markdown","6b77b036":"markdown","2517cd0f":"markdown"},"source":{"51b59aba":"import os\nimport random\nimport pandas as pd\nimport numpy as np\nfrom lightgbm import LGBMRegressor\nimport matplotlib.pyplot as plt\nimport seaborn as sns","53f96137":"data = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\ndata.head()","c6b7843c":"add_data = pd.read_csv('..\/input\/g-research-crypto-forecasting\/supplemental_train.csv')\nadd_data.head()","eebfb568":"data = pd.concat([data, add_data], axis=0)\ndata.describe()","286ccae4":"asset_tmp = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')\nasset = asset_tmp.set_index('Asset_ID').sort_index()\nasset","35fc77ad":"# from the competition tutorial\ndef upper_shadow(df):\n    return df['High'] - np.maximum(df['Close'], df['Open'])\n\ndef lower_shadow(df):\n    return np.minimum(df['Close'], df['Open']) - df['Low']\n\ndef cal_features(df):\n    df_cal = df[['Count', 'Open', 'High', 'Low', 'Close', 'Volume', 'VWAP']].copy()\n    df_cal['upper_Shadow'] = upper_shadow(df_cal)\n    df_cal['lower_Shadow'] = lower_shadow(df_cal)\n    df_cal[\"high_div_low\"] = df_cal[\"High\"] \/ df_cal[\"Low\"]\n    df_cal[\"open_sub_close\"] = df_cal[\"Open\"] - df_cal[\"Close\"]\n    return df_cal\n\ndef Xy_split(df_train):    \n    X = cal_features(df_train)\n    y = df_train['Target']\n    return X, y","21a2b9cb":"# weighted correlation\ndef corr(a, b, w):\n    cov = lambda x, y: np.sum(w * (x - np.average(x, weights=w)) * (y - np.average(y, weights=w))) \/ np.sum(w)\n    return cov(a, b) \/ np.sqrt(cov(a, a) * cov(b, b))","fddcaffa":"from sklearn.model_selection import TimeSeriesSplit\nn_splits = 3\ntscv = TimeSeriesSplit(n_splits=n_splits)\n\nX_train_dict = {}\ny_train_dict = {}\nX_valid_dict = {}\ny_valid_dict = {}\nmodel_dict = {}\n\nfor asset_id, asset_name in zip(asset.index, asset['Asset_Name']):\n    print(f\"Training model for {asset_name:<16} (ID={asset_id:<2})\")\n    df_asset = data[data[\"Asset_ID\"] == asset_id].reset_index(drop=True)\n    df_asset = df_asset.dropna(how='any')\n    \n    X_trains = []\n    y_trains = []\n    X_valids = []\n    y_valids = []\n    scores = []\n    models = []\n    importance = np.array([])\n    \n    for i, (train, valid) in enumerate(tscv.split(df_asset)):\n        X_train, y_train = Xy_split(df_asset.iloc[train,:])\n        X_valid, y_valid = Xy_split(df_asset.iloc[valid,:])\n\n        model = LGBMRegressor(\n            n_estimators = 1000, num_leaves = 500, max_depth = 10, learning_rate = 0.09\n        )\n        model.fit(X_train, y_train)\n        \n        scores.append(corr(y_valid, model.predict(X_valid), np.array([asset.loc[asset_id,'Weight']] * len(y_valid))))\n        \n        X_trains.append(X_train)\n        y_trains.append(y_train)\n        X_valids.append(X_valid)\n        y_valids.append(y_valid)\n        models.append(model)\n        importance = np.append(importance, model.feature_importances_)\n    \n    print('CORR:{}'.format(np.mean(scores)))\n    \n    df_feature = pd.DataFrame({\n        'features' :X_valid.columns,\n        'importance' : np.mean(importance.reshape(n_splits, -1), axis=0)})\n    df_feature = df_feature.sort_values(by='importance',ascending = False)\n\n    plt.figure(figsize=(14, 4))\n    sns.barplot(x='features', y='importance', data=df_feature)\n    plt.title('Feature Importance')\n    plt.tight_layout()\n    plt.show()\n    \n    print('-' * 90)\n    X_train_dict[asset_id] = X_trains\n    y_train_dict[asset_id] = y_trains\n    X_valid_dict[asset_id] = X_valids\n    y_valid_dict[asset_id] = y_valids\n    model_dict[asset_id] = models\n    \n","fc7905e9":"import gresearch_crypto\n\nenv = gresearch_crypto.make_env()\niter_test = env.iter_test()","1bcbff9e":"df_test_entire = []\n\n# from the competition tutorial\nfor i, (df_test, sample_prediction_df) in enumerate(iter_test):\n    for j, test_row in df_test.iterrows():\n        try:\n            cur_models = model_dict[test_row['Asset_ID']]\n            X_test = cal_features(test_row).values.reshape(1, -1)\n            y_pred = np.mean([model.predict(X_test) for model in cur_models])\n        except: \n            y_pred = 0.0\n        sample_prediction_df.loc[sample_prediction_df['row_id'] == test_row['row_id'], 'Target'] = y_pred\n    df_test_entire.append(df_test)\n\n    # Send submissions\n    env.predict(sample_prediction_df)","4a0bd99f":"Asset_ID\u3068\u6697\u53f7\u901a\u8ca8\u306e\u5bfe\u5fdc<br>\nWeight\u306f\u3001\u76ee\u7684\u5909\u6570\u3068\u306a\u3063\u3066\u3044\u308bLogReturn\u3092\u7b97\u51fa\u3059\u308b\u969b\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002","f3f456b0":"### \u5b66\u7fd2\n\u691c\u8a3c\u30c7\u30fc\u30bf\u306b\u672a\u6765\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u306a\u3044\u3088\u3046\u3001[TimeSeriesSplit](https:\/\/scikit-learn.org\/stable\/modules\/cross_validation.html#time-series-split)\u3067CV\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","dbde81e0":"### \u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bupper_shadow\u3001lower_shadow\u3068high_div_low\u3001open_sub_close\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002","676760ce":"### \u30b3\u30f3\u30da\u6982\u8981\n\n\u76ee\u7684\uff1a\u6697\u53f7\u901a\u8ca8\u306b\u3088\u308b\u30ea\u30bf\u30fc\u30f3\u306e\u4e88\u6e2c<br>\n\u6697\u53f7\u901a\u8ca8\u306b\u95a2\u3059\u308b\u6642\u7cfb\u5217\u306e\u4fa1\u683c\u5c65\u6b74\u3092\u4f7f\u7528\u3057\u3066\u3001\u4fa1\u683c\u304c\u4e0a\u304c\u308b\u304b\u4e0b\u304c\u308b\u304b\u3001\u3069\u308c\u3060\u3051\u306e\u8cc7\u7523\u304c\u30ea\u30bf\u30fc\u30f3\u3059\u308b\u304b\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002<br>\n\u672c\u30b3\u30f3\u30da\u3067\u306f\u300114\u7a2e\u306e\u6697\u53f7\u901a\u8ca8\u306b\u3064\u3044\u3066\u306e\u30c7\u30fc\u30bf\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002<br>\n\n\u30c7\u30fc\u30bf\u306e\u7279\u6027\n- \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3002\n- \u6697\u53f7\u901a\u8ca8\u306e\u5909\u52d5\u306f\u3001\u4ed6\u306e\u6697\u53f7\u901a\u8ca8\u3084\u6697\u53f7\u901a\u8ca8\u5e02\u5834\u5168\u4f53\u306b\u5bfe\u3057\u3066\u5f71\u97ff\u3057\u3066\u3044\u308b\u3002\n- \u682a\u4fa1\u3068\u540c\u69d8\u306b\u3001\u901a\u8ca8\u306e\u4fa1\u683c\u306f\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u3082\u898b\u3048\u308b\u3002","badf7e3e":"# G-Research Crypto forecasting competition","76c2de4a":"\u30d9\u30fc\u30b9\u3068\u306a\u308b\u3001\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u7528CV\u306eLGBM\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<br>\ntrain.csv\u3088\u308a\u3082\u3055\u3089\u306b\u76f4\u8fd1\u306e\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002[supplemental_train.csv](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/discussion\/303302)\u3092\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002<br>\n\n**\u53c2\u8003**\n- [Tutorial to the G-Research Crypto Competition](https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition)\n- [Data Description](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/data)\n- [Detailed API Introduction](https:\/\/www.kaggle.com\/sohier\/detailed-api-introduction)\n\nEDA\uff1a[\u3010\u65e5\u672c\u8a9e\u3011G-research_Data_Outline](https:\/\/www.kaggle.com\/kitopl\/g-research-data-outline)<br>\nBase_Model\uff1a[\u3010\u65e5\u672c\u8a9e\u3011Bigginner_G-Research_Base_LGBM_Model](https:\/\/www.kaggle.com\/kitopl\/bigginner-g-research-base-lgbm-model)<br>","240963c9":"### \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f","6b77b036":"### \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\nCrypto\u30b3\u30f3\u30da\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3068\u4e00\u7dd2\u306b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bgresearch_crypto Python module\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u3053\u308c\u306f\u3001\u5c06\u6765\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u4e88\u6e2c\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3088\u3046\u3067\u3059\u3002<br>\n[API Introduction](https:\/\/www.kaggle.com\/sohier\/detailed-api-introduction)\u306b\u8a18\u8f09\u306e\u901a\u308a\u3001prediction\u3092\u884c\u3044\u307e\u3059\u3002<br>","2517cd0f":"- **timestamp**\uff1a1970-01-01 00:00:00.000 UTC\u304b\u3089\u306e\u7d4c\u904e\u79d2\u6570\u3092\u793a\u3059\u3002\u30c7\u30fc\u30bf\u306f\u5206\u30b9\u30b1\u30fc\u30eb\u306e\u305f\u3081\u300160\u306e\u500d\u6570\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n- **Asset_ID**\uff1a\u6697\u53f7\u901a\u8ca8\u3092\u8b58\u5225\u3059\u308bID(\u4f8b\uff1a\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u5834\u5408\u306fAsset_ID = 1)\u3002 Asset_ID\u3068\u6697\u53f7\u901a\u8ca8\u306e\u5bfe\u5fdc\u95a2\u4fc2\u306fasset_details.csv\u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n- **Count**\uff1a\u6642\u9593\u9593\u9694\uff08\u76f4\u524d\uff09\u306e\u53d6\u5f15\u306e\u7dcf\u6570\u3002\n- **Open**\uff1a\u6307\u5b9a\u6642\u9593\u9593\u9694\u306b\u304a\u3051\u308b\u59cb\u5024(USD)\u3002\n- **High**\uff1a\u6307\u5b9a\u6642\u9593\u9593\u9694\u306b\u304a\u3051\u308b\u6700\u9ad8\u4fa1\u683c(USD)\u3002\n- **Low**\uff1a\u6307\u5b9a\u6642\u9593\u9593\u9694\u306b\u304a\u3051\u308b\u6700\u4f4e\u4fa1\u683c(USD)\u3002\n- **Close**\uff1a\u6307\u5b9a\u6642\u9593\u9593\u9694\u306b\u304a\u3051\u308b\u7d42\u5024(USD)\u3002\n- **Volume**\uff1a\u8cfc\u5165\u307e\u305f\u306f\u8ca9\u58f2\u3055\u308c\u305f\u901a\u8ca8\u306e\u6570\u91cf\u3002\n- **VWAP**\uff1a\u6307\u5b9a\u6642\u9593\u9593\u9694\u306b\u304a\u3051\u308b\u901a\u8ca8\u306e\u91cd\u307f\u3065\u3051\u5e73\u5747\u4fa1\u683c\u3002\n- **Target**\uff1a15\u5206\u9593\u306e\u5bfe\u6570\u53ce\u76ca\u7387\u304b\u3089\u7b97\u51fa\u3002\ntimestamp\u3001Asset_ID\u306e\u8907\u5408\u30ad\u30fc\u304c\u3001\u30c7\u30fc\u30bf\u3092\u8b58\u5225\u3059\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u306b\u306a\u308a\u307e\u3059\u3002"}}