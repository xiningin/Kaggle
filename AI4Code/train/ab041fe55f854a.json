{"cell_type":{"8337e33e":"code","571979c4":"code","135cc0a8":"code","52c5b5dc":"code","261ae134":"code","a8c6800e":"code","47cfb005":"code","892be15c":"code","0fd7d673":"code","0761aeb0":"code","8ca1db42":"code","c233c831":"code","db9f79ee":"code","8856482b":"code","408beef3":"code","3130505a":"code","35a7d440":"code","defe14fa":"code","ebc8537c":"code","8412179b":"code","eab2f840":"code","964348a3":"code","64d9f79f":"code","990e2d33":"code","93962e12":"code","3e4c2767":"code","7d0f4ab8":"code","c8f25434":"code","0c92a7cb":"code","fbf0e86e":"code","0ca18af0":"code","fd20635b":"code","6404f368":"code","c278e739":"code","b67aeb5e":"code","f3f88a16":"code","193363c5":"code","ce2ccc61":"code","dfaae092":"code","0895b06c":"code","fd315208":"code","5f353a76":"code","e5e42bff":"code","4a48b08c":"code","f5509a55":"code","6241e088":"code","78b7d3ad":"code","9d78621d":"code","fe634824":"code","30b5a853":"code","29729f42":"code","8564b345":"code","44cc9cb7":"code","a9e06b74":"code","0e65f9ec":"code","b8c2c694":"code","9e6a1e5e":"code","7b8caccf":"code","03d75985":"code","71c2f25b":"code","6058707e":"code","078494d0":"code","a6e573b1":"code","f3f3eb70":"code","4071d8f3":"code","36a3f83b":"code","1081fc66":"code","3597035f":"code","f43a55ce":"code","4034d78e":"code","f72063a6":"code","445530f6":"code","6bdafe8b":"code","4c22ef14":"code","4458032a":"code","52f5c503":"code","f2600828":"code","72301a34":"code","1a902792":"code","3f68a859":"code","bd3423c9":"code","74ddca22":"code","1404f4c6":"code","f0f11b93":"code","2f820769":"code","a2a3e7a1":"code","d80d8ae5":"code","7395445f":"code","18c56168":"code","9d519542":"markdown","130ef922":"markdown","52fb6672":"markdown","efa7643e":"markdown","a5ee69be":"markdown","d34110b0":"markdown","70346cc6":"markdown","e07e4bea":"markdown","78452438":"markdown","83d95e40":"markdown","91be7c86":"markdown","af7f60ff":"markdown","3c9635f9":"markdown","765c96f3":"markdown","b1d210d2":"markdown","f86d8a6a":"markdown","fc6ec11b":"markdown","5a234c46":"markdown","f23bebef":"markdown","57f96439":"markdown","6da41a01":"markdown","9c13264c":"markdown","abb402dc":"markdown","59208df3":"markdown","f984bbda":"markdown","da8b394d":"markdown","5b8b0885":"markdown","c5df9f6c":"markdown","4679eea0":"markdown","75bb09c5":"markdown","86cbffd5":"markdown","989333c5":"markdown","5f5e787a":"markdown","208122a5":"markdown","74e6c68a":"markdown","9003a9e7":"markdown","26058713":"markdown","35660af8":"markdown","4ee77c58":"markdown","94c2ebe8":"markdown","b9582c30":"markdown","7846e1bd":"markdown","0954c8a6":"markdown","0e32bc9c":"markdown","24320304":"markdown","28131542":"markdown","b5ae5088":"markdown","dce2d719":"markdown","23f07258":"markdown","dee1644b":"markdown","a4586a08":"markdown"},"source":{"8337e33e":"import warnings \nwarnings.filterwarnings('ignore')","571979c4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","135cc0a8":"cntry_df = pd.read_csv(r'https:\/\/cdn.upgrad.com\/UpGrad\/temp\/2f181ade-814a-430a-b721-769d6a9bf814\/Country-data.csv')\ncntry_df.head()","52c5b5dc":"cntry_df.dtypes","261ae134":"cntry_df.shape","a8c6800e":"cntry_df.country.nunique()","47cfb005":"cntry_df.info()","892be15c":"cntry_df.isnull().sum()","0fd7d673":"cntry_df.describe()","0761aeb0":"for i in ['imports','exports','health']:\n    cntry_df[i] = (cntry_df[i] * cntry_df['gdpp'])\/100\ncntry_df.head()","8ca1db42":"# checking the outliers\n\nplt.figure(figsize = (20,10))\n\nfor i in enumerate(cntry_df.columns[1:]): # first column is 'country'. So, dropped it.\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(cntry_df[i[1]])","c233c831":"num_df = cntry_df[['child_mort', 'exports', 'health', 'imports', 'income', 'inflation','life_expec', 'total_fer', 'gdpp']\n]\npair = sns.PairGrid(num_df)\npair.map_upper(sns.regplot,color ='green', fit_reg = False)\npair.map_lower(sns.regplot, color ='red', fit_reg = False)\npair.map_diag(plt.hist)\nplt.show()","db9f79ee":"plt.figure(figsize=(21, 18))\nfeatures = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(num_df[i[1]])\n    plt.xticks(rotation=20)","8856482b":"new_cntry_df = cntry_df[cntry_df.columns[cntry_df.dtypes != 'object']]\nnew_cntry_df.info()","408beef3":"new_cntry_df.describe()","3130505a":"# instantiate \nscaler = StandardScaler()\n\n# fit_transform\nscaled_data = pd.DataFrame(scaler.fit_transform(new_cntry_df))\n\nscaled_data.columns = cntry_df.columns[cntry_df.dtypes != 'object']\n\nscaled_data.head()","35a7d440":"from sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins_test(X):\n    d = X.shape[1]\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","defe14fa":"#Using the Hopkins Statistic function by passing the above dataframe as a parameter\nhopkins_test(scaled_data)","ebc8537c":"plt.figure(figsize=(20, 10))\nplt.title('Hierarchical Clustering Dendrogram (Single)')\nplt.xlabel('index')\nplt.ylabel('distance')\nmerging_s = linkage(scaled_data, method=\"single\", metric='euclidean')\ndendrogram(merging_s)\nplt.show()","8412179b":"plt.figure(figsize=(18, 8))\nplt.title('Hierarchical Clustering Dendrogram (Complete)')\nplt.xlabel('index')\nplt.ylabel('distance')\nmerging_c = linkage(scaled_data, method=\"complete\", metric='euclidean')\ndendrogram(merging_c)\nplt.show()","eab2f840":"cluster_label_3 = cut_tree(merging_c, n_clusters = 3).reshape(-1,)\ncluster_label_3","964348a3":"# creating a dataframe with cluster labels on it\n\ncntry_data_h = cntry_df.copy()\ncntry_data_h['cluster_label_3'] = cluster_label_3\ncntry_data_h.head()","64d9f79f":"# Box plot on various features against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_label_3', y='child_mort', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_label_3', y='gdpp', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_label_3', y='income', data=cntry_data_h, palette=\"bright\")\n\nplt.show()","990e2d33":"# plotting scatter plot on various features to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","93962e12":"# checking cluster count\n\ncntry_data_h.cluster_label_3.value_counts()","3e4c2767":"# checking countries in cluster 2 \n\ncntry_data_h[cntry_data_h['cluster_label_3'] == 2]","7d0f4ab8":"# checking countries in cluster 1\n\ncntry_data_h[cntry_data_h['cluster_label_3'] == 1]","c8f25434":"# 4 Clusters\ncluster_label_4 = cut_tree(merging_c, n_clusters = 4).reshape(-1,)\ncluster_label_4","0c92a7cb":"cntry_data_h['cluster_label_4'] = cluster_label_4\n\ncntry_data_h.head()","fbf0e86e":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_label_4', y='child_mort', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_label_4', y='gdpp', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_label_4', y='income', data=cntry_data_h, palette=\"bright\")\n\nplt.show()","0ca18af0":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","fd20635b":"cntry_data_h.cluster_label_4.value_counts()","6404f368":"# Checking the countries in Cluster 2 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 2]","c278e739":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 3]","b67aeb5e":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 1]","f3f88a16":"cntry_data_h_analysis = cntry_data_h.groupby(['cluster_label_3']).mean()\ncntry_data_h_analysis","193363c5":"# Creating a new field for count of observations in each cluster\ncntry_data_h_analysis['Observations']=cntry_data_h[['cluster_label_3','child_mort']].groupby(['cluster_label_3']).count()\ncntry_data_h_analysis","ce2ccc61":"# Creating a new field for proportion of observations in each cluster\ncntry_data_h_analysis['Proportion']=round(cntry_data_h_analysis['Observations']\/cntry_data_h_analysis['Observations'].sum(),2)\ncntry_data_h_analysis","dfaae092":"plt.figure(figsize=(10, 5))\ncntry_data_h_plot1=cntry_data_h[['cluster_label_3','gdpp','income']].copy()\ncntry_data_h_plot1=cntry_data_h_plot1.groupby('cluster_label_3').mean()\ncntry_data_h_plot1.plot.bar()\n\ncntry_data_h_plot2=cntry_data_h[['cluster_label_3','child_mort']].copy()\ncntry_data_h_plot2=cntry_data_h_plot2.groupby('cluster_label_3').mean()\ncntry_data_h_plot2.plot.bar()\nplt.show()","0895b06c":"# elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(scaled_data)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)","fd315208":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(scaled_data)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(scaled_data, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","5f353a76":"# K Means with with k=3\nkmeans_3 = KMeans(n_clusters=3, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_3.fit(scaled_data)\nkmeans_3.labels_","e5e42bff":"# Create a new datafame with scaled data and adding country name to it.\ncntry_data_k = cntry_data_h.copy()\ncntry_data_k.head()","4a48b08c":"# assigning the label\ncntry_data_k['cluster_id_3'] = kmeans_3.labels_\ncntry_data_k.head()","f5509a55":"# Checking the number of countries in each cluster\ncntry_data_k.cluster_id_3.value_counts()","6241e088":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_3', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_3', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_3', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","78b7d3ad":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","9d78621d":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_3']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","fe634824":"# Checking the countries in Cluster 2 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_3'] == 2].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","30b5a853":"# Checking the countries in Cluster 0 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_3'] == 0].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","29729f42":"# K Means with with k=4\nkmeans_4 = KMeans(n_clusters=4, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_4.fit(scaled_data)\nkmeans_4.labels_","8564b345":"# assigning the label\ncntry_data_k['cluster_id_4'] = kmeans_4.labels_\ncntry_data_k.head()","44cc9cb7":"# Checking the number of countries in each cluster\n\ncntry_data_k.cluster_id_4.value_counts()","a9e06b74":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_4', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_4', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_4', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","0e65f9ec":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","b8c2c694":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_4']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","9e6a1e5e":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_4'] == 3].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","7b8caccf":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_4'] == 1].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","03d75985":"# K Means with with k=5\nkmeans_5 = KMeans(n_clusters=5, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_5.fit(scaled_data)\nkmeans_5.labels_","71c2f25b":"# assigning the label\ncntry_data_k['cluster_id_5'] = kmeans_5.labels_\ncntry_data_k.head()","6058707e":"# Checking the number of countries in each cluster\n\ncntry_data_k.cluster_id_5.value_counts()","078494d0":"## Visualizing the Clustered Data","a6e573b1":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_5', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_5', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_5', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","f3f3eb70":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","4071d8f3":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_5']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","36a3f83b":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_5'] == 4].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","1081fc66":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_5'] == 0].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","3597035f":"#New dataframe for group by & analysis\n\ncntry_data_k_analysis =  cntry_data_k.groupby(['cluster_id_3']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])\ncntry_data_k_analysis","f43a55ce":"# Creating a new field for count of observations in each cluster\n\ncntry_data_k_analysis['Observations']=cntry_data_k[['cluster_id_3','child_mort']].groupby(['cluster_id_3']).count()\ncntry_data_k_analysis","4034d78e":"# Creating a new field for proportion of observations in each cluster\n\ncntry_data_k_analysis['Proportion']=round(cntry_data_k_analysis['Observations']\/cntry_data_k_analysis['Observations'].sum(),2)\n\n\n#Summary View\ncntry_data_k_analysis[['child_mort','income','gdpp','Observations','Proportion']]","f72063a6":"plt.figure(figsize=(8, 5))\ncntry_data_k_plot1=cntry_data_k[['cluster_id_3','gdpp','income']].copy()\ncntry_data_k_plot1=cntry_data_k_plot1.groupby('cluster_id_3').mean()\ncntry_data_k_plot1.plot.bar()\n\ncntry_data_k_plot2=cntry_data_k[['cluster_id_3','child_mort']].copy()\ncntry_data_k_plot2=cntry_data_k_plot2.groupby('cluster_id_3').mean()\ncntry_data_k_plot2.plot.bar()","445530f6":"cntry_data_k_analysis = cntry_data_k_analysis.rename({\n    2: 'Under_Developed Countries',\n    1: 'Developed Countries',\n    0: 'Developing Countries'}).reset_index()","6bdafe8b":"cntry_data_k_analysis[['cluster_id_3','child_mort','income','gdpp','Observations','Proportion']]","4c22ef14":"cntry_data_k_analysis[['cluster_id_4','child_mort','income','gdpp','Observations','Proportion']]","4458032a":"# Countries in Cluster_id = 0, save to a new dataframe, this will form our final cluster data\n\nfinal_cluster = cntry_data_k[cntry_data_k['cluster_id_3'] == 2].copy()\nfinal_cluster = final_cluster[['country', 'child_mort', 'income', 'gdpp']]\n","52f5c503":"final_cluster.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","f2600828":"final_cluster.describe()","72301a34":"Under_Developed_Countries = cntry_df[cntry_df['gdpp'] <= 932].copy()\n# Under_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['gdpp'] <= 932]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","1a902792":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","3f68a859":"Under_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['income'] <= 1860]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","bd3423c9":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","74ddca22":"# We create a new dataframe to store the countries satisfying the cluster median from original dataframe\n\nUnder_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['child_mort'] >= 90]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","1404f4c6":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","f0f11b93":"# top 10 underdeveloped countries list to a new df\n\nUDC_top_10=Under_Developed_Countries[['country', 'gdpp', 'income', 'child_mort']].head(10).copy()","2f820769":"#Final countries list\n\nUDC_top_10","a2a3e7a1":"UDC_top_10.describe()","d80d8ae5":"plt.figure(figsize=(21, 18))\nfeatures = ['gdpp','income','child_mort']\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(UDC_top_10[i[1]])\n    plt.xticks(rotation=20)","7395445f":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 10))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.show()","18c56168":"#TOP 10 COUNTRIES recommended for Financial Aid\n\nUDC_top_10","9d519542":"### Analysing the 'Under Developed Countries' Cluster","130ef922":"## 2. Data Transformation","52fb6672":"- No null values in the dataframe","efa7643e":"# Importing modules","a5ee69be":"####  `NOTE`\n- From the above two dendrograms, it is clear that `Complete Linkage` has a batter cluster formation.\n- So, we will use `Complete linkage` output for further analysis. We will build two iterations of clustering\n    - one with 3 clusters and another one with 4 clusters (based on the output from Complete Linkage Dendrogram) and analyze the output\n    ","d34110b0":"## 3. Exploratory Data Analysis\n- `Visualizing Distribution`\n\nPlotting a pairplot","70346cc6":"#### INSIGHT: \n- Cluster 3 & Cluster 1 seems to have highest Child Mortality and lowest Income & GDPP. Lets check the countries in these clusters to see there outcome.","e07e4bea":"#### First iteration - Using 3 clusters","78452438":"### Renaming the Clusters","83d95e40":"## Finding the Optimal Number of Clusters\n### SSD (Elbow curve)","91be7c86":"#### INSIGHT:\n   - From the above validations (Elbow curve and Silhouette analysis), we can notice that 3,4 & 5 are the optimal number of clusters. We will do 3 iterations for 3,4 & 5 clusters.","af7f60ff":"- All features except country are numerical as expected","3c9635f9":"### Descriptive Statistics of Cluster 'Under_Developed_Countries'","765c96f3":"### 4.2 K-MEANS CLUSTERING \n\n#### First iteration - 3 Clusters","b1d210d2":"### INSIGHT\n   - Dataframe describes various socio-economic factors of 167 different countries.\n   - Dataframe has no multiple entries and no null values\n   - All features except 'country' are numerical as expected. So, no need of any type casting\n   - Descriptive statistics indicates that there is some variability in the data and requires scaling while model building.","f86d8a6a":"### complete linkage :\n- Here, the distance between 2 clusters is defined as the maximum distance between any 2 points in the clusters.\n","fc6ec11b":"`Interpretation of Clusters`\n- `Cluster 2` has the `Highest average Child Mortality rate` of `~92` when compared to other 3 clusters, and `Lowest average GDPP & Income of ~ 1909 & 3897 respectively`. All these figures clearly makes this cluster the best candidate for the financial aid from NGO. \n- We could also see that `Cluster 2 comprises of ~29% of overall data`, and has `~48 observations in comparision to 167 total observations`","5a234c46":"### Single linkage\n   - Here, the distance between 2 clusters is defined as the shortest distance between points in the two clusters.","f23bebef":"- No of unique entries in country column and number of rows in dataframe are equal. Which means that there are no multiple entries","57f96439":"- Clusters 1 and 2 are developed and developing countries. So, our segmentation is good in terms of all our under developed countries are segmented under cluster 0. We will further tune this cluster","6da41a01":"### Choosing the model\n\nFrom the above 3 Iterations of K-Means, we could see that using 3 Clusters provided a better output in terms of a balanced cluster size. So we will consider the 'K-Means with 3 Clusters' as our FINAL MODEL\n\n### Interpreting the Clusters from K-Means model","9c13264c":"### SCALING THE DATA (STANDARDIZATION) \n    - We will use standardization method for scaling the data.","abb402dc":"### INSIGHT:\n   - Majority of the data points are `not normally distributed`. \n   - Variance is not uniform and range is not same for all features.\n   - We need to standardize data to overcome all this. Since we need to calculate the Euclidean distance between the data points for clustering, it is important to ensure that the values with high range do not outweigh the values with smaller range. Thus, scaling down all the attributes to a uniform scale is important.","59208df3":"#### INSIGHT:\n   - `Cluster 3` & `Cluster 1` seems to have highest child mortality rate and lowest income and lowest gdpp. Checking the countries in these clusters","f984bbda":"### Silhouette Analysis\n`                                   silhouette score = p\u2212q\/max(p,q)`\n \n- p  is the mean distance to the points in the nearest cluster that the data point is not a part of\n- q  is the mean intra-cluster distance to all the points in its own cluster.\n- The value of the silhouette score range lies between -1 to 1.\n- A score closer to 1 indicates that the data point is very similar to other data points in the cluster,\n- A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","da8b394d":"### Data less than median of income of the cluster\n\n`NOTE`\n- We could see that the Median values of income for 'Under Developed Countries' is ~932. We will take this as a benchmark and fetch all countries from our 'ORIGINAL dataframe with income <= 1860.","5b8b0885":"### Visualizing the clustered data","c5df9f6c":"## 2.1 Outlier Treatment","4679eea0":"#### INSIGHT\n   - From the 2 iterations above, we can conclude that `3 clusters` is ideal for number of clusters.\n   - This is because for `4 clusters`, `nigeria` was added as a separate cluster. Since Nigeria could be a backward country which may need the aid in terms of it's child mortality rate. \n   - So, the ideal number of clusters is `3 clusters`. We will further validate this.","75bb09c5":"- We use Hierarchial clusterign approach to identify appropriate cluster size with a good split in data\n    - Max Intra-cluster distance and Min Inter-cluster distance","86cbffd5":"# 4. Model building\n## 4.1 Hierarchial Clustering","989333c5":"### Bivariate Analysis of Cluster 'Under_Developed_Countries' (Top 10)","5f5e787a":"`NOTE`\n- Looking at the descriptive statistics of our Under Developed Countries cluster, we could notice that some countries have really high income and gdpp values (looking at the max values of income & gdpp).\n- From a business problem prespective, we would want our numbers of child mortality, income and gdpp somewhere around the MEDIAN level (We decided to go with MEDIAN and not MEAN, as there seems to be a greater variablity in the income and gdpp values). \n- So the approach we are going to take is to filter out all countries from our original list with income & gdpp less than the Median of 1860 & 932 respectively and Child Mortality >= the Median of 90. \n- We will perform the filtering in the order `GDPP --> INCOME --> CHILD MORTALITY`\n- This is due to reason that, we need to identify the countries with lowest GDPP & INCOME first and then with maximum CHILD MORTALITY.","208122a5":"### INSIGHT: \n- `cluster 2` and `cluster 0` seems to have highest child mortality rate and lowest income and lowest GDPP. Checking the countries in both clusters.","74e6c68a":"#### Third Iteration - 5 clusters","9003a9e7":"## Univariate Analysis of Cluster 'Under_Developed_Countries' (Top 10)","26058713":"### INSIGHT\n   - If the value is between {0.01, ...,0.3}, the data is regularly spaced (normally distributed).\n   - If the value is around 0.5, it is random.\n   - If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster. ","35660af8":"### INSIGHT\n- In the dataframe(cntry_df) provided, `imports`,`exports` and `health` features have the percentage of money spent or gained from these sectors from the total gdpp which is not clear. So, to avoid this, values in `imports`, `exports` and `health` are converted to absolute values","4ee77c58":"#### Second iteration - Using 4 clusters","94c2ebe8":"### Decision Making on the final approach","b9582c30":"## Conclusion & Recommendation\n- We performed CLUSTERING on the socio-economic data provided for various countries to identify countries most eligible for Financial Aid from the NGO. \n- Based on Clustering Analysis, below are the top 10 countries under our 'Under Developed Countries' cluster which are in dire need of the Financial Aid. This output is purely based on the dataset provided and various analytical methodologies performed.","7846e1bd":"# 1. Importing the dataset and data inspection","0954c8a6":"#### Second Iteration - 4 clusters","0e32bc9c":"`OBSERVATIONS:`\n   - There are outliers in all features. \n   - We cannot cap the outliers in all features because is leads to deletion of some countries which are actually in dire need of aidand should be in prime focus.\n   - So, I've decided to go with the model which suites the Business Problem better. That is, not to treat the Outlier, and check the model with different K values to see which one gives a better business outcome.","24320304":"### Interpretation of Clusters: \n   - `Cluster 0` has the highest average child mortality rate of ~42 when compared to other 2 clusters and `lowest gdpp` and `lowest income` of ~7551 & 12641 respectively.\n   - All the above reasons make the `cluster 0` ideal for the requirement. We can also observe that cluster 0 comprises of ~89% of overall countries and has ~148 countries out of 167 total countries. This is a problem.\n   - Clustering model is not giving us a good result because ~89% of data is under one cluster and increasing the number of clusters doesn't solve this problem. We will check K-Means clustering.","28131542":"`Final Cluster`\n- Based on the above interpretation of the cluster, we now rename all the clusters accordingly.\n- The `Cluster 2 now becomes 'Under Developed Countries'`, which will be of our interest.\n- We will further analyse the Cluster 'Under Developed Countries' and get to know various metrics of that data set, based on which we could identify our final set of countries which needs the financial support from the NGO","b5ae5088":"### HOPKINS STATISTICS\n   - Before applying clustering on a dataframe, first we need to check whether has some meaningful(not occuring at random) clusters.\n   - The process of evaluating data whether clustering can be applied or not is called `Clustering Tendency`.\n   - For `clustering tendency`, we use `Hopkins Test` which examines whether the data points differ significantly from uniformly distributed data in the multidimensional space.","dce2d719":"### Fetching the final data based on Cluster Median\nData less than median of gdpp of the cluster\n`NOTE`\n- We could see that the Median values of gdpp for 'Under Developed Countries' is ~932. We will take this as a benchmark and fetch all countries from our 'ORIGINAL dataframe with gdpp <= 932.","23f07258":"`Rescaling the data`","dee1644b":"### Data greater than median of child mortality rate of the final cluster\n`NOTE` \n- We could see that the Median values of Child Mortality for 'Under Developed Countries' is ~90. We will take this as a benchmark and fetch all countries from our 'ORIGINAL dataframe with Child Mortality >= 90.","a4586a08":"### Interpreting Clusters from the Hierarchial Clustering model"}}