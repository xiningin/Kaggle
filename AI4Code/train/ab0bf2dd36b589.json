{"cell_type":{"d65e86d9":"code","cd4382f3":"code","be211863":"code","da6e5e26":"code","bc22f906":"code","6cf01743":"code","5b2a406f":"code","044b7014":"code","e68deb70":"code","d20fe649":"code","ceb92dfd":"code","adbd8df3":"code","239f6510":"code","0b80275f":"code","54072d23":"code","e1647743":"code","8a079990":"code","4cff5886":"code","0bd31709":"code","dab020a1":"code","86bbaa95":"code","e575aaec":"markdown","a2ec050a":"markdown","43115c7c":"markdown","cbe576ee":"markdown","d4d3b49c":"markdown"},"source":{"d65e86d9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cd4382f3":"df = pd.read_csv('..\/input\/global-adherence-to-religion-19452010\/WRP national data.csv')","be211863":"df.head()","da6e5e26":"df.tail()","bc22f906":"df.shape","6cf01743":"df.columns","5b2a406f":"df.describe()","044b7014":"df.isna().sum()","e68deb70":"df.info()","d20fe649":"df['name'].unique() # These are the total country names","ceb92dfd":"df['name'].unique().shape # There is the data for 200 countries","adbd8df3":"df.columns","239f6510":"df = df.drop(['chrstprot', 'chrstcat', 'chrstorth',\n       'chrstang', 'chrstothr', 'chrstgen', 'judorth', 'jdcons', 'judref',\n       'judothr', 'judgen', 'budmah', 'budthr',\n       'budothr', 'budgen', 'zorogen', 'hindgen', 'sikhgen', 'shntgen',\n       'bahgen', 'taogen', 'jaingen', 'confgen', 'syncgen', 'anmgen',\n       'nonrelig', 'othrgen', 'sumrelig', 'pop', 'chrstprotpct', 'chrstcatpct',\n       'chrstorthpct', 'chrstangpct', 'chrstothrpct', 'chrstgenpct',\n       'judorthpct', 'judconspct', 'judrefpct', 'judothrpct', 'judgenpct',\n       'islmsunpct', 'islmshipct', 'islmibdpct', 'islmnatpct', 'islmalwpct',\n       'islmahmpct', 'islmothrpct', 'islmgenpct', 'budmahpct', 'budthrpct',\n       'budothrpct', 'budgenpct', 'zorogenpct', 'hindgenpct', 'sikhgenpct',\n       'shntgenpct', 'bahgenpct', 'taogenpct', 'jaingenpct', 'confgenpct',\n       'syncgenpct', 'anmgenpct', 'nonreligpct', 'othrgenpct', 'sumreligpct'], axis=1)","0b80275f":"df","54072d23":"df['islmshi'].sum()","e1647743":"import matplotlib.pyplot as plt\nimport matplotlib.dates as mpl_dates","8a079990":"fig, ax = plt.subplots(figsize=(20,8))\nax.bar(df['year'], df['islmsun'], color='Red')\nax.set_xlabel('Year', fontsize='11')\nax.xaxis.set_major_locator(plt.MaxNLocator(5))\nax.set_ylabel('Sunni', fontsize='11')\nax.set_yscale('log')\nplt.title('Sunni', fontsize='20')\nplt.show()","4cff5886":"fig, ax = plt.subplots(figsize=(20,8))\nax.bar(df['year'], df['islmshi'], color='lime')\nax.set_xlabel('Year', fontsize='11')\nax.set_ylabel('Shia', fontsize='11')\nax.set_yscale('log')\nplt.title('Shia', fontsize='20')\nplt.show()","0bd31709":"fig, ax = plt.subplots(figsize=(20,8))\nax.bar(df['year'], df['islmahm'])\nax.set_xlabel('Year', fontsize='11')\nax.set_ylabel('Ahmadi', fontsize='11')\nax.set_yscale('log')\nplt.title('Ahmadiyya', fontsize='20')\nplt.show()","dab020a1":"df.head()","86bbaa95":"fig, ax = plt.subplots(figsize=(16,6))\nax.bar(df['year'], df['islmsun'])\nax.bar(df['year'], df['islmshi'])\n#ax.bar(df['year'], df['islmibd'])\n#ax.bar(df['year'], df['islmnat'])\n#ax.bar(df['year'], df['islmalw'])\nax.bar(df['year'], df['islmahm'])\n#ax.bar(df['year'], df['islmothr'])\n#ax.bar(df['year'], df['islmgen'])\nax.set_xlabel('Year', fontsize='11')\n#ax.set_ylabel('Ahmadi', fontsize='11')\nax.set_yscale('log')\nax.legend(['Sunni', 'Shia', 'Ahmadiyya'])\nplt.title('Sunni Vs. Shia Vs. Ahmadiyya', fontsize='20')\nplt.show()","e575aaec":"As we can see we probably don't need that much cleaning in the main dataset","a2ec050a":"As we are doing the analysis for Islam, we don't need any other columns for the other religions. That's why we are removing the rest of the columns for other religions.","43115c7c":"As I don't have any idea for the other sects, I haven't done any analysis for it. By following the above analysis, if possible, I'll do the rest of the analysis in the future.","cbe576ee":"# Data Analysis & Visualization\nAs our data is ready, we'll do our analysis","d4d3b49c":"# Data Preparation & Cleaning\nHere, we clean our data and prepare  it for analysis"}}