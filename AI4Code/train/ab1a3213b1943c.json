{"cell_type":{"3475114e":"code","880dbaf4":"code","10e173e2":"code","51a5e5b0":"code","ee975f3e":"code","7cdcb412":"code","853d4dcc":"code","4b755971":"code","0a8afab3":"code","b7ab8858":"code","5379570e":"code","7247f1ca":"code","affd340d":"code","ec03799c":"code","58efe504":"code","e786e7de":"code","ff56e8bd":"code","b7c78e02":"markdown","a532c55b":"markdown","35bf1085":"markdown","1f5e6eb7":"markdown","37fc2d52":"markdown","b16ccc02":"markdown","b8b60fb5":"markdown","a1b86682":"markdown","37b4eed4":"markdown","4e4394de":"markdown","c1a4f3ac":"markdown"},"source":{"3475114e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        #print(os.path.join(dirname, filename))\n        pass\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","880dbaf4":"from PIL import Image\npil_im = Image.open('..\/input\/logocanal\/LOGO PNG.png')\npil_im","10e173e2":"mypath='..\/input\/starwars-images\/star-wars-images\/star_wars\/filtered\/train\/BB-8\/'\n\nfrom os import listdir\nfrom os.path import isfile, join\nbb8 = [f for f in listdir(mypath) if isfile(join(mypath, f))]\nclass_bb8 = ['bb8' for f in listdir(mypath) if isfile(join(mypath, f))]","51a5e5b0":"import pandas as pd\n\ndf_star_wars=pd.DataFrame(bb8, columns=['filename'])\ndf_star_wars['class']=class_bb8","ee975f3e":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\ndata_generator=ImageDataGenerator()\nit=data_generator.flow_from_dataframe(df_star_wars, directory=mypath)","7cdcb412":"images,labels=it.next()","853d4dcc":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\nplt.imshow(images[1].astype('uint8'))\nplt.show()","4b755971":"datagen = ImageDataGenerator(width_shift_range=[-100,100])\n\nit=datagen.flow_from_dataframe(df_star_wars[0:1], directory=mypath,batch_size=1)\n","0a8afab3":"plt.figure(figsize=(100,100))\nplt.subplots_adjust(left=0.1, right=0.2, top=0.2, bottom=0.1)\n\n# generate samples and plot\nfor i in range(9):\n    plt.subplot(330 + 1 + i)\n    images,labels = it.next()\n    image = images[0].astype('uint8')\n    plt.imshow(image)\n    plt.axis('off')\n# show the figure\nplt.show()","b7ab8858":"datagen = ImageDataGenerator(horizontal_flip=True)\nit=datagen.flow_from_dataframe(df_star_wars[0:1], directory=mypath,batch_size=1)","5379570e":"plt.figure(figsize=(100,100))\nplt.subplots_adjust(left=0.1, right=0.2, top=0.2, bottom=0.1)\n\n# generate samples and plot\nfor i in range(9):\n    plt.subplot(330 + 1 + i)\n    images,labels = it.next()\n    image = images[0].astype('uint8')\n    plt.imshow(image)\n    plt.axis('off')\n# show the figure\nplt.show()","7247f1ca":"datagen = ImageDataGenerator(rotation_range=90)\nit=datagen.flow_from_dataframe(df_star_wars[0:1], directory=mypath,batch_size=1)","affd340d":"plt.figure(figsize=(100,100))\nplt.subplots_adjust(left=0.1, right=0.2, top=0.2, bottom=0.1)\n\n# generate samples and plot\nfor i in range(9):\n    plt.subplot(330 + 1 + i)\n    images,labels = it.next()\n    image = images[0].astype('uint8')\n    plt.imshow(image)\n    plt.axis('off')\n# show the figure\nplt.show()","ec03799c":"datagen = ImageDataGenerator(brightness_range=[0.2,1.0])\nit=datagen.flow_from_dataframe(df_star_wars[0:1], directory=mypath,batch_size=1)","58efe504":"plt.figure(figsize=(100,100))\nplt.subplots_adjust(left=0.1, right=0.2, top=0.2, bottom=0.1)\n\n# generate samples and plot\nfor i in range(9):\n    plt.subplot(330 + 1 + i)\n    images,labels = it.next()\n    image = images[0].astype('uint8')\n    plt.imshow(image)\n    plt.axis('off')\n# show the figure\nplt.show()","e786e7de":"datagen = ImageDataGenerator(zoom_range=[0.5,1.0])\nit=datagen.flow_from_dataframe(df_star_wars[0:1], directory=mypath,batch_size=1)","ff56e8bd":"plt.figure(figsize=(100,100))\nplt.subplots_adjust(left=0.1, right=0.2, top=0.2, bottom=0.1)\n\n# generate samples and plot\nfor i in range(9):\n    plt.subplot(330 + 1 + i)\n    images,labels = it.next()\n    image = images[0].astype('uint8')\n    plt.imshow(image)\n    plt.axis('off')\n# show the figure\nplt.show()","b7c78e02":"# Alterando o zoom","a532c55b":"# Mostrando a imagem","35bf1085":"# Retornando as imagens e Labels","1f5e6eb7":"# Lendo imagens do BB8","37fc2d52":"# width_shift_rang\n\nDeslocando imagem da direita para esquerda","b16ccc02":"# Rotacionando Imagem","b8b60fb5":"# Flip Horizontal\n\nInvertendo a imagem horizontalmentee","a1b86682":"# Usando a classe ImageDataGenerator do Keras","37b4eed4":"# Data Augmentation\n\nO atributo width_shift_range desloca a imagem 200 posi\u00e7\u00f5es para a direita ou para a esquerda","4e4394de":"# Alterando Brilho","c1a4f3ac":"# Criando um dataframe com as colunas para nome do arquivo e classe"}}