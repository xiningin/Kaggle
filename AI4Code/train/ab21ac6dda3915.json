{"cell_type":{"3ac9a327":"code","4658de92":"code","1530a297":"code","9219a116":"code","89d9bb44":"code","efd655ff":"code","8671d3fd":"code","3090b747":"code","0bdde90e":"code","5a9c030d":"code","f0772861":"code","07329811":"code","3e527b48":"code","94d187ef":"code","27c7f0a4":"code","29678473":"code","d5c95790":"code","529a983c":"code","5de01afe":"markdown","7a2eab83":"markdown","a26a6a7e":"markdown","fe2a236a":"markdown"},"source":{"3ac9a327":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport geopandas as gpd\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\n# visualization\nimport matplotlib.pyplot as plt\nimport folium\nimport plotly.express as px","4658de92":"districts=gpd.read_file(\"\/kaggle\/input\/india-district-wise-shape-files\/output.shp\")\n#details1=gpd.read_file(\"\/kaggle\/input\/india-district-wise-shape-files\/output.prj\")","1530a297":"districts.sample(5)","9219a116":"districts.columns.values","89d9bb44":"districts.info()","efd655ff":"type(districts)","8671d3fd":"districts.describe()","3090b747":"#Creating a plot\ndistricts.plot(figsize=(10,10))","0bdde90e":"districts.isna().sum()","5a9c030d":"# We can see all the null columns are quantitative so we can just put the median to fill na \n\ndistricts['distarea'].fillna(districts['distarea'].mean(),inplace=True)\ndistricts['totalpopul'].fillna(districts['totalpopul'].mean(),inplace=True)\ndistricts['totalhh'].fillna(districts['totalhh'].mean(),inplace=True)\ndistricts['totpopmale'].fillna(districts['totpopmale'].mean(),inplace=True)\ndistricts['totpopfema'].fillna(districts['totpopfema'].mean(),inplace=True)","f0772861":"states = districts.dissolve(by='statename',aggfunc='sum').reset_index()\nstates.head()","07329811":"states.plot(figsize=(10,10),cmap='coolwarm',column='totalpopul',legend=True)","3e527b48":"states[states['statename']=='Madhya Pradesh']","94d187ef":"m=folium.Map(location=[23, 78.9629],tiles='cartodbpositron',min_zoom=4, max_zoom=8,zoom_start=5)\nm","27c7f0a4":"folium.Choropleth(states,#to get the Geo data\n                  data=states,#data\n                  key_on='feature.properties.statename', # feature.properties.key\n                  columns=['statename', 'totalpopul'],   # [key, value]\n                  fill_color='RdPu',                     # cmap\n                  line_weight=0.15,                       # line wight (of the border)\n                  line_opacity=0.5,                      # line opacity (of the border)\n                  legend_name='Population').add_to(m)    # name on the legend color bar\n    \n    # add layer controls\nfolium.LayerControl().add_to(m)\nm","29678473":"states['female_sex_ratio']=(states['totpopfema']*1000)\/states['totpopmale']","d5c95790":"states.head()","529a983c":"folium.Choropleth(states,\n                 data=states,\n                 key_on='feature.properties.statename',\n                 columns=['statename','female_sex_ratio'],\n                 fill_color='PuBuGn',\n                 line_weight=0.15,                       # line wight (of the border)\n                 line_opacity=0.5,\n                 legend_name='female_Sex_Ratio').add_to(m)\n\nfolium.LayerControl().add_to(m)","5de01afe":"Visualizing Data by states****\n","7a2eab83":"# Population trend","a26a6a7e":"Now place the choropleth map to base map","fe2a236a":"PLOT THE BASEMAP WITH FOLIUM"}}