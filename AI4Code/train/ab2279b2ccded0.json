{"cell_type":{"3814fab9":"code","7045ebd2":"code","d6d25094":"code","91da083b":"code","67e4d12a":"code","71176e55":"code","8c8ac831":"code","6ba72a5a":"code","d8381591":"code","cbd3e63f":"code","3952cbd0":"code","6998d89b":"code","3b63e0b2":"code","23d7f925":"code","dbcf6482":"code","ff5a89be":"code","033a1714":"code","242196d5":"code","d2e6afa1":"code","caec71a3":"code","231a4bcf":"code","be1f7992":"code","70a089a6":"code","ccbe03ca":"code","887c729b":"code","eae38a13":"code","06c818d3":"code","35b49bf9":"code","485cce4c":"markdown","7160cc90":"markdown","4e4dc7bc":"markdown","926926b4":"markdown","9a4e9a35":"markdown","352a9a68":"markdown","3a309a9d":"markdown","9e995016":"markdown"},"source":{"3814fab9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7045ebd2":"import numpy as np\nimport pandas as pd\nimport plotly.express as px","d6d25094":"top250 = pd.read_csv('\/kaggle\/input\/restaurant-business-rankings-2020\/Top250.csv')","91da083b":"top250.head()","67e4d12a":"top250.info()","71176e55":"top250.isnull().sum()","8c8ac831":"top250.drop(['Content','Headquarters'],axis = 1,inplace = True)\ntop250.columns","6ba72a5a":"df1 = top250.groupby('Segment_Category').sum().reset_index().sort_values('Sales', ascending = False).reset_index().head(10)\nfig = px.pie(df1 , values = 'Sales', names = 'Segment_Category',\n            color_discrete_sequence = px.colors.sequential.Rainbow)\n\nfig.update_layout(title='Top 10 - Sales Based on the Segment Category',\n                  title_x = 0.4,\n                  title_font = dict(size = 16, color = 'MidnightBlue')\n                 )\n\nfig.show()","d8381591":"splitcategory = top250[\"Segment_Category\"].str.split(\"&\", n = -1,  expand = True)","cbd3e63f":"top250['category'] = splitcategory[0]","3952cbd0":"top250['category'].unique()","6998d89b":"df1 = top250.groupby('category').sum().reset_index().sort_values('Sales', ascending = False).reset_index().head(10)\nfig = px.pie(df1, values = 'Sales', names = 'category',color_discrete_sequence=px.colors.qualitative.T10)\n\nfig.update_layout(title='Top 10 - Sales Based on the Category',\n                  title_x = 0.45,\n                  title_font = dict(size = 16, color = 'MidnightBlue')\n                 \n                 )\n\nfig.show()","3b63e0b2":"df1 = top250.groupby(\"Restaurant\").sum().reset_index().sort_values('Sales', ascending=False).reset_index().head(10)\n\nfig = px.bar(df1, x = 'Restaurant', y = 'Sales', color = 'Sales', color_continuous_scale = 'ice')\n\nfig.update_layout(title=' Top 10 - Sales Based on the Restaurant',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\n\nfig.show()","23d7f925":"top250['YOY_Sales']=top250['YOY_Sales'].str.strip('%')\ntop250['YOY_Sales']=top250['YOY_Sales'].astype(float)","dbcf6482":"df1 = top250.groupby('Segment_Category').sum().reset_index().sort_values('YOY_Sales',ascending = False).reset_index().head(10)\n\nfig = px.pie(df1,values='YOY_Sales', names='Segment_Category',color_discrete_sequence=px.colors.sequential.RdBu)\nfig.update_traces(textposition = 'inside',textinfo = 'percent+label')\nfig.update_layout(title='Top 10 - Year over Year increase in  Sales Based on the Segment Category',\n                  title_x = 0.4,\n                  title_font = dict(size = 16, color = 'Darkred'))\n\nfig.show()","ff5a89be":"yoy_sales_postive=top250[top250['YOY_Sales']>0]\nyoy_sales_negative=top250[top250['YOY_Sales']<0]","033a1714":"df1 = yoy_sales_postive.groupby(\"Restaurant\").sum().reset_index().sort_values('YOY_Sales',ascending = False).reset_index().head(10)\n\nfig = px.bar(df1, y = 'YOY_Sales', x = 'Restaurant',color = 'YOY_Sales',\n             color_continuous_scale = 'blues')\n\nfig.update_layout(title=' Top 10 - Year over Year increase in Sales Based on the Restaurant',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\n\nfig.show()","242196d5":"df1 =yoy_sales_negative.groupby(\"Restaurant\").sum().reset_index().sort_values('YOY_Sales',ascending = True).reset_index().head(10)\n\nfig = px.bar(df1, y = 'YOY_Sales',x = 'Restaurant',color='YOY_Sales',\n             hover_data = ['Restaurant', 'YOY_Sales'],\n             color_continuous_scale = 'ice')\n\nfig.update_layout(title='Bottom 10 - Year over Year Decrease in Sales Based on the Restaurant',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\n\nfig.show()","d2e6afa1":"top250['YOY_Units']=top250['YOY_Units'].str.strip('%')\ntop250['YOY_Units']=top250['YOY_Units'].astype(float)","caec71a3":"yoy_units_postive=top250[top250['YOY_Units']>0]\nyoy_units_negative=top250[top250['YOY_Units']<0]","231a4bcf":"df1 = top250.groupby('Segment_Category').sum().reset_index().sort_values('YOY_Units', ascending=False).reset_index().head(10)\n\nfig = px.pie(df1, values='YOY_Units', names='Segment_Category',template=\"seaborn\")\n\nfig.update_traces(textposition='inside', textinfo='value')\nfig.update_layout(title=' Top 10 - Year over Year increase in Units Based on the Segment Category',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\nfig.show()","be1f7992":"df1 = yoy_units_postive.groupby(\"Restaurant\").sum().reset_index().sort_values('YOY_Units',ascending = False).reset_index().head(10)\n\nfig = px.bar(df1, y = 'YOY_Units',x = 'Restaurant', color = 'YOY_Units',\n             color_continuous_scale = 'brbg')\n\nfig.update_layout(title='Top 10 - Year over Year increase in Units Based on the Restaurant',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Teal'))\n\nfig.show()","70a089a6":"df1 =yoy_units_negative.groupby(\"Restaurant\").sum().reset_index().sort_values('YOY_Units',ascending = True).reset_index().head(10)\n\nfig = px.bar(df1, y = 'YOY_Units',x = 'Restaurant',color='YOY_Units',\n             hover_data = ['Restaurant', 'YOY_Units'],\n             color_continuous_scale = 'ice',\n             height = 400\n            )\n\nfig.update_layout(title=' Bottom 10 - Year over Year Decrease in Units Based on the Restaurant',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\n\nfig.show()","ccbe03ca":"pizza = top250[top250[\"category\"]=='Pizza'].head(10)\n\nfig = px.bar(pizza,\n             x = 'Restaurant',\n             y = 'Sales',\n             color = 'Sales',\n             color_continuous_scale = 'peach')\n\nfig.update_layout(title='Top 10 Restaurants-Pizza Sales',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'OrangeRed'))\n\nfig.show()","887c729b":"burger = top250[top250[\"category\"]=='Burger'].head(10)\n\nfig = px.bar(burger,\n             x = 'Restaurant',\n             y = 'Sales',\n             color = 'Sales',\n             color_continuous_scale = 'burg')\n\nfig.update_layout(title='Top 10 Restaurants-Burger Sales',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MediumVioletRed')\n                  \n                 )\n\nfig.show()","eae38a13":"VariedMenu = top250[top250[\"category\"]=='Varied Menu'].head(10)\n\nfig = px.bar(VariedMenu,\n             x = 'Restaurant',\n             y = 'Sales',\n             color = 'Sales',\n             color_continuous_scale = 'emrld')\n\nfig.update_layout(title='Top 10 Restaurants-Varied Menu Sales',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Teal')\n                 \n                 )\n\nfig.show()","06c818d3":"Sandwich = top250[top250[\"category\"]=='Sandwich'].head(10)\n\nfig = px.bar(Sandwich,\n             x = 'Restaurant',\n             y = 'Sales',\n             color = 'Sales',\n             color_continuous_scale = 'blues')\n\nfig.update_layout(title='Top 10 Restaurants-Sandwich Sales',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue')\n                 \n                 )\n\nfig.show()","35b49bf9":"Chicken = top250[top250[\"category\"]=='Chicken'].head(10)\n\nfig = px.bar(Chicken,\n             x = 'Restaurant',\n             y = 'Sales',\n             color = 'Sales',\n             color_continuous_scale = 'agsunset')\n\nfig.update_layout(title='Top 10 Restaurants - Chicken Sales',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Indigo')\n                 \n                 )\n\nfig.show()","485cce4c":"**<font color = MediumVioletRed size = 5>Information about data<\/font>**","7160cc90":"**<font color = MediumVioletRed size = 5>Import related libraries<\/font>**","4e4dc7bc":"**<font color = MediumVioletRed size = 5>Data cleaning<\/font>**","926926b4":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","9a4e9a35":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)","352a9a68":"**<font color = MediumVioletRed size = 5>Show first five row of data<\/font>**","3a309a9d":"**<font color = MediumVioletRed size = 5>Load data<\/font>**","9e995016":"**<font color = MediumVioletRed size = 5>Thank you for reading!<\/font>**"}}