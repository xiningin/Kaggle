{"cell_type":{"f95b0fce":"code","3c246cac":"code","10826335":"code","700ede07":"code","e987d3d8":"code","0dfee1ab":"code","3bf91e69":"code","c0702915":"code","46df6eca":"code","9e72bffa":"code","67fe0e1a":"code","462e34a9":"code","51c1a98b":"code","c6e28537":"code","4701597a":"markdown","2f5e0a49":"markdown","23e3bca9":"markdown","46963b6a":"markdown","5b3787a2":"markdown","5ce23e7d":"markdown","aacdc441":"markdown","c71957c1":"markdown","89168a5d":"markdown","e28c6b1c":"markdown"},"source":{"f95b0fce":"import ee \nimport numpy as np \nimport webbrowser\nimport pandas as pd\nimport os \n\n#visualization\nimport matplotlib.pyplot as plt \nfrom matplotlib.colors import ListedColormap\nimport folium\nimport branca.colormap as cmp\n\n#inspect source\nimport inspect\n\nfrom PIL import Image\nimport IPython.display as disp\n%matplotlib inline","3c246cac":"cwd =os.path.abspath(os.getcwd())\n\ncwd","10826335":"#geenrate a authentication token\n# ee.Authenticate()","700ede07":"ee.Initialize()","e987d3d8":"def add_ee_layer(self, ee_image_object, vis_params, name,opacity=0.90):\n    '''function to add GEE layer to folium,\n    Source : GEE'''\n    map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n    folium.raster_layers.TileLayer(\n          tiles=map_id_dict['tile_fetcher'].url_format,\n          attr='Map Data &copy; <a href=\"https:\/\/earthengine.google.com\/\">Google Earth Engine<\/a>',\n          name=name,\n          opacity=opacity,\n          overlay=True,\n          control=True\n      ).add_to(self)\n\nfolium.Map.add_ee_layer = add_ee_layer","0dfee1ab":"#the dataset with boundaries info\nbounds= ee.FeatureCollection(\"FAO\/GAUL_SIMPLIFIED_500m\/2015\/level2\")\n\n#get geometry for State of Maharashtra\nmh = bounds.filter(ee.Filter.eq('ADM1_NAME', 'Maharashtra')).geometry()\n\n\n\n#get a clipped image of Digital Elevation\ndem = ee.Image(\"NASA\/NASADEM_HGT\/001\").clip(mh)\n\n# srtm = ee.Image('CGIAR\/SRTM90_V4').clip(mh)","3bf91e69":"#select the elevation band\nelev = dem.select('elevation')","c0702915":"#slope: Slope is the steepness or the degree of incline of a surface. \nslope= ee.Terrain.slope(dem.select('elevation'))\n\n#aspect : Aspect is the orientation of slope, measured clockwise in degrees from 0 to 360, \n# where 0 is north-facing, 90 is east-facing, 180 is south-facing, and 270 is west-facing.\naspect = ee.Terrain.aspect(dem.select('elevation'))","46df6eca":"#find tallest region\n\nhighest_point=elev.reduceRegion(**{\n                        'reducer':ee.Reducer.max(),\n                        'geometry':mh,\n                        'scale':30,\n                        'maxPixels':1e10}).get('elevation').getInfo()\n\n#find lowest point\nlowest_point=elev.reduceRegion(**{\n                        'reducer':ee.Reducer.min(),\n                        'geometry':mh,\n                        'scale':30,\n                        'maxPixels':1e10}).get('elevation').getInfo()\n\n\n#note that the highest point here may not correspond to actual highest point as our scale is 30(i.e each pixel in image is atleast 30*30m)\nprint(f'Highest point found is {highest_point} meters')\nprint(f'Lowest point found is {lowest_point} meters')\n","9e72bffa":"# #loaction to initialize at :\nloc= (19.663280, 75.300293)\n\n\n# map\nmap_1 = folium.Map(location=loc, zoom_start=8)\n\n\n\n# palette = ListedColormap([\"white\", \"tan\", \"springgreen\", \"darkgreen\"])\ncolor_list=['green','yellow','orange','brown','black']\n\nviz1 = {'bands':['elevation'],\n        'min': -100, 'max': 1500, \n        'palette': color_list}\n\n#add color legend\ncbar = cmp.StepColormap(\n color_list,\n vmin=-100, vmax=1500,\n caption='Elevation'\n).add_to(map_1)\n\n\n# Add the image layer to the map and display it.\nmap_1.add_ee_layer(dem,viz1,'DEM')\nmap_1.add_child(folium.LayerControl())\n\n\nprint('Digital Elevation Model')\n\n\n#save map \nmap_1.save('DEM.html')\n\ndisp.IFrame('.\/DEM.html',width=1100, height=500)","67fe0e1a":"\nm_5 =folium.Map(location=loc, zoom_start=8)\n\ncolor_list2=['green','yellow','orange','brown','black'][::-1]\nviz5={'min': -100, 'max': 1300, \n        'palette': color_list2}\n\n\n#add color legend\ncbar = cmp.StepColormap(\n color_list2,\n vmin=-100, vmax=1300,\n caption='Elevation'\n).add_to(m_5)\n\n\n# Add the image layer to the map and display it.\nm_5.add_ee_layer(elev,viz5,'Valleys')\nm_5.add_child(folium.LayerControl())\n\n\nprint('Downward sloping regions')\n\n\n#save map \nm_5.save('valleys.html')\ndisp.IFrame('.\/valleys.html',width=1100, height=500)","462e34a9":"#loaction to initialize at :\nloc= (19.663280, 75.300293)\n\n\n# map\nmap2 = folium.Map(location=loc, zoom_start=8)\n\ncl2 = ['black','grey','white']\n\n\nviz1 = {'min':0, 'max': 75, \n        'palette': cl2}\n\n\n\nmap2.add_ee_layer(slope,viz1,'Slope',opacity=0.97)\nmap2.add_child(folium.LayerControl())\n\n\n\nprint('Slopes')\n\n#save map \nmap2.save('slope.html')\ndisp.IFrame('.\/slope.html',width=1100, height=500)","51c1a98b":"# # elev1: areas>800m, \n# # slope1 greater than 20 deg and less than 50 degrees\n\nslope1= slope.updateMask(slope.gte(20).And(slope.lte(50)))\n\n# #mask elevation > 800m\nele_mask = elev.gte(800)\n\n# #udate mask\nelev1= elev.updateMask(ele_mask)\n\n\n\nm_2 =folium.Map(location=loc, zoom_start=8,tiles='cartodb positron')\n\n\n\nclist2 = ['orange','brown','black']\n\n#elev viz\nviz_elev={'min': 800, 'max': 1500, \n        'palette': clist2}\n\n#add color legend\ncbar = cmp.StepColormap(\n clist2,\n vmin=800, vmax=1500,\n caption='Elevation'\n).add_to(m_2)\n\n\n#slope_viz\nslope_colors=['lightgreen','green','darkgreen']\nviz_slp={'min': 20, 'max': 50, \n        'palette': slope_colors}\ncbar = cmp.StepColormap(\n slope_colors,\n vmin=20, vmax=50,\n caption='slope'\n).add_to(m_2)\n\n\n\n\n\n#add elevation layer\nm_2.add_ee_layer(elev1,viz_elev,'Higher regions')\n\n#add slope layer\nm_2.add_ee_layer(slope1,viz_slp,'Slope')\n\nm_2.add_child(folium.LayerControl())\n\n\nprint('Probable areas for treks')\n\n#save map \nm_2.save('trek.html')\ndisp.IFrame('.\/trek.html',width=1100, height=500)","c6e28537":"\nm_2 =folium.Map(location=loc, zoom_start=8,tiles='cartodb positron')\n\n\n# # elev1: areas>800m, \n# # slope1 greater than 5 deg and less than 30 degrees\n\nslope2= slope.updateMask(slope.gte(5).And(slope.lte(30)))\n\n\n# #mask elevation > 800m\nele_mask = elev.lt(800).And(elev.gte(600))\n\n# #udate mask\nelev2= elev.updateMask(ele_mask)\n\n#elev viz\nviz_elev={'min': 800, 'max': 1500, \n        'palette': clist2}\n\n#add color legend\ncbar = cmp.StepColormap(\n clist2,\n vmin=600, vmax=800,\n caption='Elevation'\n).add_to(m_2)\n\n\n#slope_viz\nviz_slp={'min': 5, 'max': 30, \n        'palette': slope_colors}\ncbar = cmp.StepColormap(\n slope_colors,\n vmin=5, vmax=30,\n caption='slope'\n).add_to(m_2)\n\n\n\n\n#add elevation layer\nm_2.add_ee_layer(elev2,viz_elev,'Higher regions')\n\n#add slope layer\nm_2.add_ee_layer(slope2,viz_slp,'Slope')\n\nm_2.add_child(folium.LayerControl())\n\n\nprint('Probable areas for hikes')\n\n#save map \nm_2.save('hike.html')\ndisp.IFrame('.\/hike.html',width=1100, height=500)","4701597a":"# Helper Functions","2f5e0a49":"# Getting Image Boundaries and DEM Image","23e3bca9":"# Visualize Terrain:\n","46963b6a":"# Visualizing slope\n\n\n**The Whiter shade shows high degree of slope, while the darker region shows flat regions**","5b3787a2":"# Showing low lying regions\n\n**The darker hues show the presence of river valleys,while the lighter ones show tall ground. On the western region, the darker regions show coastal lowlands along with river valleys.**","5ce23e7d":"# gentler slopes (height > 600 m and <800m) and (5<slope < 30)","aacdc441":"# Authenticate Earth Engine","c71957c1":"# Find regions to trek (regions with slope  between 20- 50 degrees and elevation greater than 800 m)","89168a5d":"**This Map shows the topography of the region. The higher regions are marked with a darker hue, while the lower regions are marked with lighter colors**","e28c6b1c":"# Imports"}}