{"cell_type":{"02769dc2":"code","297f6111":"code","b9fbd2f7":"code","8a952b89":"code","241a77d3":"code","c483f759":"code","649cedbb":"code","c69f801f":"code","8366e454":"code","845ce340":"code","905e7506":"code","40cee9db":"code","f5f86ba3":"code","796a2fd3":"code","1414827e":"code","f9ce37d1":"code","13946bb1":"code","6103b2f1":"code","4f442fb9":"code","a3ce59b1":"code","faf6f007":"code","871f7ce6":"code","1772b4ae":"code","89989022":"code","4d2c92ef":"code","dacfc9b6":"code","95bcddd6":"code","63308055":"code","028035ef":"code","2dde3307":"code","5b2eb20f":"code","e1d5e645":"code","5dda1c9e":"code","5d123a25":"code","a4387cd6":"code","422640e8":"code","2cc4d1a1":"code","ea926073":"code","8e86683b":"code","5d8f9478":"code","5e1ac895":"code","f7caea9c":"code","4a7a6f60":"code","0cd735ac":"code","8a845202":"code","3c51388e":"code","ee2a435d":"code","8c9cfe08":"code","b4788ed6":"code","fcaa0ac9":"markdown","a92d9d4c":"markdown","d0b1111c":"markdown","f975d3b4":"markdown","54151758":"markdown","d857e8cc":"markdown","98d58b6f":"markdown","7fae05eb":"markdown","16352097":"markdown","e5460ed8":"markdown","77070e57":"markdown","b2aa6e36":"markdown","c7c00a8f":"markdown","9ce851a1":"markdown","347ee575":"markdown","0fc35f94":"markdown","c6cfa147":"markdown"},"source":{"02769dc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","297f6111":"df = pd.read_csv('\/kaggle\/input\/sloan-digital-sky-survey\/Skyserver_SQL2_27_2018 6_51_39 PM.csv')","b9fbd2f7":"df.head()","8a952b89":"df.columns","241a77d3":"import matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns","c483f759":"df['class'].value_counts()","649cedbb":"from astropy import units as u\nfrom astropy.coordinates import SkyCoord\nfrom astropy.cosmology import WMAP9 as cosmo\n\nradec = SkyCoord(ra=df['ra']*u.degree, dec=df['dec']*u.degree, frame='icrs')\n#radec.ra.value\n#radec.dec.value\ngalactic = radec.galactic\n\ndf['l'] = galactic.l.value\ndf['b'] = galactic.b.value\n\n\nr = cosmo.comoving_distance(df['redshift'])\ndf['distance']= r.value\n\ndf.head()","c69f801f":"def cartesian(dist,alpha,delta):\n    x = dist*np.cos(np.deg2rad(delta))*np.cos(np.deg2rad(alpha))\n    y = dist*np.cos(np.deg2rad(delta))*np.sin(np.deg2rad(alpha))\n    z = dist*np.sin(np.deg2rad(delta))\n    return x,y,z\n\ncart = cartesian(df['distance'],df['ra'],df['dec'])\ndf['x_coord'] = cart[0]\ndf['y_coord'] = cart[1]\ndf['z_coord'] = cart[2]\n\ndf.head()","8366e454":"df['u-r'] = df['u']-df['r']","845ce340":"galaxy = df[df['class']=='GALAXY']\nstar = df[df['class']=='STAR']\nquasar = df[df['class']=='QSO']","905e7506":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(galaxy['ra'],galaxy['dec'],galaxy['redshift'], s = 0.7, color = 'b', label = 'galaxy')\nax.scatter(star['ra'],star['dec'],star['redshift'], s = 0.7, color = 'y', label = 'star')\nax.scatter(quasar['ra'],quasar['dec'],quasar['redshift'], s = 0.7, color = 'r', label = 'quasar')\nax.set_xlabel('ra')\nax.set_ylabel('dec')\nax.set_zlabel('z')\nax.set_title('Object Distribution from SDSS',fontsize=18)\nplt.legend()\nplt.show()","40cee9db":"plt.scatter(galaxy['r'], galaxy['u-r'], s = 0.9, color = 'b')\nplt.scatter(star['r'], star['u-r'], s = 0.9, color = 'y')\nplt.scatter(quasar['r'], quasar['u-r'], s = 0.9, color = 'r')\nplt.xlabel('r')\nplt.ylabel('u-r')\nplt.title('CMD')\n","f5f86ba3":"galaxy.head()","796a2fd3":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(galaxy['ra'],galaxy['dec'],galaxy['redshift'], s = 0.7)\nax.set_xlabel('ra')\nax.set_ylabel('dec')\nax.set_zlabel('z')\nax.set_title('Galactic Distribution from SDSS',fontsize=18)\nplt.show()","1414827e":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(galaxy['x_coord'],galaxy['y_coord'],galaxy['z_coord'], s = 0.7, color = 'b')\nax.set_xlabel('x_coord')\nax.set_ylabel('y_coord')\nax.set_zlabel('z_coord')\nax.set_title('Galoaxy Distribution from SDSS',fontsize=18)\nplt.show()\n\n# z is the position from galaxy in cartesian coordinate, not to be confused with redshift","f9ce37d1":"sns.distplot(galaxy['redshift'], kde = False)","13946bb1":"sns.distplot(galaxy['distance'], kde = False)\nplt.title('Distance (Mpc)')","6103b2f1":"star.head()","4f442fb9":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(star['ra'],star['dec'],star['redshift'], s = 0.7, color = 'y')\nax.set_xlabel('ra')\nax.set_ylabel('dec')\nax.set_zlabel('z')\nax.set_title('Star Distribution from SDSS',fontsize=18)\nplt.show()","a3ce59b1":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(star['x_coord'],star['y_coord'],star['z_coord'], s = 0.7, color = 'y')\nax.set_xlabel('x_coord')\nax.set_ylabel('y_coord')\nax.set_zlabel('z_coord')\nax.set_title('Distribution from SDSS',fontsize=18)\nplt.show()\n\n# z is the position from galaxy in cartesian coordinate, not to be confused with redshift","faf6f007":"sns.distplot(star['redshift'], kde = False)\n","871f7ce6":"quasar.head()","1772b4ae":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(quasar['ra'],quasar['dec'],quasar['redshift'], s = 0.7, color = 'r')\nax.set_xlabel('ra')\nax.set_ylabel('dec')\nax.set_zlabel('z')\nax.set_title('QSO Distribution from SDSS',fontsize=18)\nplt.show()","89989022":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(quasar['x_coord'],quasar['y_coord'],quasar['z_coord'], s = 0.7, color = 'r')\nax.set_xlabel('x_coord')\nax.set_ylabel('y_coord')\nax.set_zlabel('z_coord')\nax.set_title('Distribution from SDSS',fontsize=18)\nplt.show()\n\n# z is the position from galaxy in cartesian coordinate, not to be confused with redshift","4d2c92ef":"df.head()","dacfc9b6":"fig = plt.figure(figsize=(12,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(galaxy['x_coord'],galaxy['y_coord'],galaxy['z_coord'], s = 0.7, color = 'b')\nax.scatter(star['x_coord'],star['y_coord'],star['z_coord'], s = 0.7, color = 'y')\nax.scatter(quasar['x_coord'],quasar['y_coord'],quasar['z_coord'], s = 0.7, color = 'r')\nax.set_xlabel('x_coord')\nax.set_ylabel('y_coord')\nax.set_zlabel('z_coord')\nax.set_title('Distribution from SDSS',fontsize=18)\nplt.show()\n\n# z is the position from galaxy in cartesian coordinate, not to be confused with redshift","95bcddd6":"display(df.head())\ndisplay(df.columns)","63308055":"df['class'] = df['class'].astype('category').cat.codes","028035ef":"df['class'].value_counts()","2dde3307":"df.columns","5b2eb20f":"X_df = df.drop(['objid','class'], axis=1).values\ny_df = df['class'].values","e1d5e645":"display(X_df)\ndisplay(y_df)","5dda1c9e":"from sklearn.preprocessing import StandardScaler, MinMaxScaler\n\n#ss = StandardScaler()\n#X_df = ss.fit_transform(X_df)\nminmax = MinMaxScaler()\nX_df = minmax.fit_transform(X_df)","5d123a25":"y_df = y_df.reshape(-1,1)","a4387cd6":"display(X_df)\ndisplay(y_df)","422640e8":"from sklearn.preprocessing import OneHotEncoder\n\nenc = OneHotEncoder()\ny_df = enc.fit_transform(y_df).toarray()","2cc4d1a1":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X_df,y_df, test_size=0.25)\n","ea926073":"X_train.shape","8e86683b":"y_train.shape","5d8f9478":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","5e1ac895":"model = Sequential()\nmodel.add(Dense(64, input_dim=23, activation='sigmoid'))\nmodel.add(Dense(32, activation='sigmoid'))\nmodel.add(Dense(16, activation='sigmoid'))\nmodel.add(Dense(3, activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","f7caea9c":"history = model.fit(X_train, y_train, validation_split = 0.1, epochs=30, batch_size=32)\n","4a7a6f60":"prediction = []\ntest = []","0cd735ac":"y_predict = model.predict(X_test)","8a845202":"for i in range(len(y_test)): \n    prediction.append(np.argmax(y_predict[i]))\n    test.append(np.argmax(y_test[i])) ","3c51388e":"from sklearn.metrics import accuracy_score\nacc = accuracy_score(prediction,test) \nprint('Accuracy is:', acc*100, '%')","ee2a435d":"compare = pd.DataFrame(prediction, columns = ['prediction'])\ncompare['test'] = test","8c9cfe08":"result = pd.DataFrame(X_test, columns = ['ra', 'dec', 'u', 'g', 'r', 'i', 'z', 'run', 'rerun', 'camcol',\n       'field', 'specobjid', 'redshift', 'plate', 'mjd', 'fiberid',\n       'l', 'b', 'distance', 'x_coord', 'y_coord', 'z_coord', 'u-r'])","b4788ed6":"result['class'] = compare['test']\nresult['prediction'] = compare['prediction']\n\nresult.to_csv('object_prediction.csv', index = False)","fcaa0ac9":"### Yea, and now we gonna save the output data","a92d9d4c":"## Plotting the Quasi-Stellar Objects","d0b1111c":"## Distance Sparse\n\nRedshift value shows the lookup on how early was the galaxy formed in universe. Edwin Hubble formulate the redshift into how shifted the wavelength of galaxy, thus indicating the radial velocity\n\n\n\\begin{align}\nz = \\frac{v}{c} = \\frac{\\lambda_{v}-\\lambda_{0}}{\\lambda_{0}}\n\\end{align}\n\nHubble's law could be stated in\n\\begin{align}\nv = \\frac{H_{0}}{d}\n\\end{align}\n\n### Reference: \n* Ryden, Barbara. Introduction to cosmology. Cambridge University Press, 2017.","f975d3b4":"### We use RA and dec first (note that some galaxies and stars grouping in same areas thanks to mutual gravitation)","54151758":"## Color Magnitude Diagram","d857e8cc":"## Neural Network Model","98d58b6f":"### 0s are galaxies, 2s are stars, and 1s are QSOs.","7fae05eb":"## Plotting the Galaxy","16352097":"## Plotting The Stars","e5460ed8":"### Stars appeared to be centered at 0 redshift since it is too close","77070e57":"### We need to change the object class into numerical label","b2aa6e36":"### As expected, we could see distant quasars because they are too bright for a galaxy","c7c00a8f":"For map the location of galaxy, we need to plot the cartesian space coordinate from the equatorial coordinate. This one formulated from the galactic coordinate, known distance, galactic longitude, and galactic latitude. \n\n\n![Galactic Coordinate](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/2\/2a\/Galactic_coordinates.JPG\/220px-Galactic_coordinates.JPG)\n\n\\begin{align}\nImage: Wikipedia\n\\end{align}\n\nGalactic coordinate could be formulated into\n\n\\begin{align}\nsin(b) = sin(\\delta_{NGP}) \\ cos(i_{g})  -  cos(\\delta) \\ sin(\\alpha - \\alpha_{NGP}) \\ sin(i_{g})\n\\end{align}\n\n\\begin{align}\ncos(b) \\ cos(l-l_{0}) = cos(\\delta) \\ cos(\\alpha - \\alpha_{NG})\n\\end{align}\n\n\\begin{align}\ncos(b) \\ sin(l-l_{0}) = sin(\\delta) \\ sin(i_{g}) + cos (\\delta) \\ sin(\\alpha - \\alpha_{NGP})\\ cos(i_{g})\n\\end{align}\n\nKnown $i = 62.6^{o}, \\alpha_{N} = 282.5^{o}, l_{0} = 33.0^{o}$\n\nSource: https:\/\/www.ucl.ac.uk\/~ucapsj0\/galcor.pdf\n\nFor the ease, thanks to kaggle, they provide astropy","9ce851a1":"### We will try to use standard scaler first\n\nStandardize features by removing the mean and scaling to unit variance\n\nThe standard score of a sample x is calculated as:\n\n$ z = (x - u) \/ s $","347ee575":"### I will not dropping RA and dec because a group of stars or galaxies could entangled in mutual gravitation, so they're located in a same area.","0fc35f94":"### Okay, back to the primary dataset","c6cfa147":"## Summing up"}}