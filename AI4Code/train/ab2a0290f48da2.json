{"cell_type":{"a5844146":"code","7241ad59":"code","0fa55499":"code","a23d4271":"code","f4e87f65":"code","6260f96c":"code","781da7a1":"code","10792f1c":"code","9e68ee4d":"code","bde36aa7":"code","eeb162a6":"code","3950fc42":"code","a2471f96":"code","921cd661":"code","65a9a3f8":"code","c2232b73":"code","790f7d2f":"code","76169986":"code","c15a2050":"code","448c0154":"code","f02c126c":"code","140c4a12":"code","b0cbf238":"code","597ffbfc":"code","e1139379":"code","51860639":"code","bb513e03":"code","d268498a":"code","f724351a":"code","23c16051":"code","8004f98c":"code","17d58a03":"markdown","4d63d64a":"markdown","0a8751a0":"markdown","3d5df768":"markdown","1d5b09a8":"markdown","5a2744ce":"markdown","1d8e1279":"markdown"},"source":{"a5844146":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7241ad59":"dataset = pd.read_csv(\"..\/input\/data.csv\")","0fa55499":"#y\/\/dependen variable\n#x\/\/independent variable\ny=dataset[\"diagnosis\"]\n","a23d4271":"dataset.shape","f4e87f65":"y.head()","6260f96c":"x=dataset.iloc[:,2:-1].values","781da7a1":"x","10792f1c":"plt.figure(figsize=(20,10))\nsns.heatmap(dataset.corr(),annot=True)","9e68ee4d":"#diagnosis\nfrom sklearn.preprocessing import LabelEncoder","bde36aa7":"y_label_encoder = LabelEncoder()\ny=y_label_encoder.fit_transform(y)","eeb162a6":"y","3950fc42":"from sklearn.model_selection import train_test_split","a2471f96":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=5)","921cd661":"from sklearn.svm import SVC","65a9a3f8":"from sklearn.metrics import classification_report,confusion_matrix","c2232b73":"classifier = SVC(kernel=\"linear\",random_state=5)","790f7d2f":"classifier.fit(x_train,y_train)","76169986":"y_pred = classifier.predict(x_test)","c15a2050":"cm = confusion_matrix(y_test,y_pred)\nsns.heatmap(cm,annot=True)","448c0154":"print(classification_report(y_test,y_pred))","f02c126c":"from sklearn.ensemble import RandomForestClassifier","140c4a12":"classifier1 = RandomForestClassifier(n_estimators=10,criterion = \"entropy\",random_state = 0)","b0cbf238":"classifier1.fit(x_train,y_train)","597ffbfc":"y_pred1 = classifier1.predict(x_test)","e1139379":"cm1 = confusion_matrix(y_test,y_pred1)\nsns.heatmap(cm1,annot=True)","51860639":"print(classification_report(y_test,y_pred1))","bb513e03":"from sklearn.naive_bayes import GaussianNB","d268498a":"classifier2 = GaussianNB()\nclassifier2.fit(x_train,y_train)","f724351a":"y_pred2 = classifier2.predict(x_test)","23c16051":"cm2 = confusion_matrix(y_test,y_pred2)\nsns.heatmap(cm2,annot=True)","8004f98c":"print(classification_report(y_test,y_pred2))","17d58a03":"## Random forest model","4d63d64a":"## Categorical data","0a8751a0":"## Splitting the dataset into training and test set","3d5df768":"## Bayes Theorem","1d5b09a8":"## Fitting the model into the dataset","5a2744ce":"\n## Visualize the data","1d8e1279":"## Splitting the dataset into dependent and independent variable"}}