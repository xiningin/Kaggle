{"cell_type":{"955d1557":"code","02926958":"code","b16d6c30":"code","4786e0de":"code","648c1f4c":"code","3d12cdb3":"code","ff3e06bf":"code","3c0a937d":"code","5476fa67":"code","3bb50a2d":"code","2a34767f":"code","52f4a065":"code","e422398b":"code","249857fb":"code","bd92687f":"markdown","808ef879":"markdown","945db9bf":"markdown","00e113d6":"markdown","9eec7c4d":"markdown","14649064":"markdown","b65143ee":"markdown","5618724e":"markdown"},"source":{"955d1557":"import pandas as pd\nimport numpy as np\nimport random\nimport os\n\nfrom scipy.stats import rankdata\nfrom pathlib import Path\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.linear_model import Ridge\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","02926958":"n_folds = 10\nseed_list = [i for i in range(2000, 2022)]","b16d6c30":"def set_seed(seed=42):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nset_seed(seed_list[0])","4786e0de":"INPUT_PATH = Path(\"..\/input\/tabular-playground-series-mar-2021\")\n\nTRAIN_PATH = Path(\"..\/input\/tps-mar-2021\/train\")\nTEST_PATH = Path(\"..\/input\/tps-mar-2021\/test\")","648c1f4c":"train_df = pd.read_csv(INPUT_PATH \/ \"train.csv\")\ntest_df = pd.read_csv(INPUT_PATH \/ \"test.csv\")\nsub_df = pd.read_csv(INPUT_PATH \/ 'sample_submission.csv')","3d12cdb3":"cat_features = [col for col in train_df.columns if 'cat' in col]\ncont_features = [col for col in train_df.columns if 'cont' in col]\n\nall_df = pd.concat([train_df, test_df]).reset_index(drop=True)\nle = LabelEncoder()\n\nfor col in cat_features:\n    all_df[col] = le.fit_transform(all_df[col])\n\ntrain_df = all_df[:train_df.shape[0]].copy()\ntest_df = all_df[train_df.shape[0]:].reset_index(drop=True).copy()\n\nall_features = cat_features + cont_features","ff3e06bf":"train_oof_dict = {\n    'trans_rgr_1': 'train_rgr_epoch2000_probas8_params0_batch512.npy',\n    'trans_rgr_2': 'train_rgr_epoch2000_probas8_params1_batch512.npy',\n    'trans_rgr_3': 'train_rgr_epoch2000_probas8_params2_batch512.npy',\n    'trans_rgr_4': 'train_rgr_epoch2000_probas8_params3_batch512.npy',\n    'trans_rgr_5': 'train_rgr_epoch2000_probas8_params4_batch512.npy',\n    'trans_rgr_6': 'train_rgr_epoch2000_probas8_params5_batch512.npy',\n    'trans_rgr_7': 'train_rgr_epoch2000_probas8_params6_batch512.npy',\n    'trans_rgr_15': 'train_rgr_epoch2000_probas8_params14_batch512.npy',\n    'trans_rgr_19': 'train_rgr_epoch2000_probas8_params18_batch512.npy',\n    'trans_rgr_23': 'train_rgr_epoch2000_probas8_params22_batch512.npy',\n    'trans_rgr_24': 'train_rgr_epoch2000_probas8_params23_batch512.npy',\n    'trans_rgr_27': 'train_rgr_epoch1000_probas8_params26_batch512.npy',\n    'trans_rdg_1': 'train_rdg_epoch2000_probas8_params0_batch512.npy',\n    'trans_rdg_2': 'train_rdg_epoch2000_probas8_params1_batch512.npy',\n    'trans_rdg_3': 'train_rdg_epoch2000_probas8_params2_batch512.npy',\n    'trans_rdg_4': 'train_rdg_epoch2000_probas8_params3_batch512.npy',\n    'trans_rdg_5': 'train_rdg_epoch2000_probas8_params4_batch512.npy',\n    'trans_rdg_6': 'train_rdg_epoch2000_probas8_params5_batch512.npy',\n    'trans_rdg_7': 'train_rdg_epoch2000_probas8_params6_batch512.npy',\n    'trans_rdg_15': 'train_rdg_epoch2000_probas8_params14_batch512.npy',\n    'trans_rdg_19': 'train_rdg_epoch2000_probas8_params18_batch512.npy',\n    'trans_rdg_23': 'train_rdg_epoch2000_probas8_params22_batch512.npy',\n    'trans_rdg_24': 'train_rdg_epoch2000_probas8_params23_batch512.npy',\n    'trans_rdg_27': 'train_rdg_epoch1000_probas8_params26_batch512.npy',\n    'trans_bayrdg_1': 'train_bayrdg_epoch2000_probas8_params0_batch512.npy',\n    'trans_bayrdg_2': 'train_bayrdg_epoch2000_probas8_params1_batch512.npy',\n    'trans_hgb_2': 'train_hgb_epoch2000_probas8_params1_batch512.npy',\n    'lightgbm1': 'train_oof_lgbm_0.npy',\n    'lightgbm2': 'train_oof_lgbm_1.npy',\n    'lightgbm3': 'train_oof_lgbm_2.npy',\n    'lightgbm4': 'train_oof_lgbm_3.npy',\n    'lightgbm5': 'train_oof_lgbm_4.npy',\n    'lightgbm6': 'train_oof_lgbm_5.npy',\n    'xgboost1': 'train_oof_xgb_0.npy',\n    'xgboost2': 'train_oof_xgb_1.npy',\n    'catboost1': 'train_oof_cbt_0.npy',\n    'catboost2': 'train_oof_cbt_1.npy',\n    'logistic_regression1': 'train_oof_lr_0.npy',\n    'logistic_regression2': 'train_oof_lr_1.npy',\n    'random_forest1': 'train_oof_rf_0.npy',\n    'tabnet1': 'train_oof_tabnet_0.npy',\n    'tabnet2': 'train_oof_tabnet_1.npy',\n    'histgradient1': 'train_oof_hgb_0.npy',\n    'histgradient2': 'train_oof_hgb_1.npy',\n    'keras1': 'train_oof_keras_0.npy',\n    'keras2': 'train_oof_keras_1.npy',\n    'keras3': 'train_oof_keras_2.npy',\n    'keras4': 'train_oof_keras_3.npy',\n    'dae1': 'train_oof_dae_0.npy',\n    'dae2': 'train_oof_dae_1.npy',\n    'dae3': 'train_oof_dae_2.npy',\n    'dae4': 'train_oof_dae_3.npy',\n    'dae5': 'train_oof_MLP_TPSMAR_FINAL.npy',\n    'dtables1': 'train_oof_dtables_0.npy',\n    'dtables2': 'train_oof_dtables_1.npy'\n}\n\ntest_pred_dict = {\n    'trans_rgr_1': 'test_rgr_epoch2000_probas8_params0_batch512.npy',\n    'trans_rgr_2': 'test_rgr_epoch2000_probas8_params1_batch512.npy',\n    'trans_rgr_3': 'test_rgr_epoch2000_probas8_params2_batch512.npy',\n    'trans_rgr_4': 'test_rgr_epoch2000_probas8_params3_batch512.npy',\n    'trans_rgr_5': 'test_rgr_epoch2000_probas8_params4_batch512.npy',\n    'trans_rgr_6': 'test_rgr_epoch2000_probas8_params5_batch512.npy',\n    'trans_rgr_7': 'test_rgr_epoch2000_probas8_params6_batch512.npy',\n    'trans_rgr_15': 'test_rgr_epoch2000_probas8_params14_batch512.npy',\n    'trans_rgr_19': 'test_rgr_epoch2000_probas8_params18_batch512.npy',\n    'trans_rgr_23': 'test_rgr_epoch2000_probas8_params22_batch512.npy',\n    'trans_rgr_24': 'test_rgr_epoch2000_probas8_params23_batch512.npy',\n    'trans_rgr_27': 'test_rgr_epoch1000_probas8_params26_batch512.npy',\n    'trans_rdg_1': 'test_rdg_epoch2000_probas8_params0_batch512.npy',\n    'trans_rdg_2': 'test_rdg_epoch2000_probas8_params1_batch512.npy',\n    'trans_rdg_3': 'test_rdg_epoch2000_probas8_params2_batch512.npy',\n    'trans_rdg_4': 'test_rdg_epoch2000_probas8_params3_batch512.npy',\n    'trans_rdg_5': 'test_rdg_epoch2000_probas8_params4_batch512.npy',\n    'trans_rdg_6': 'test_rdg_epoch2000_probas8_params5_batch512.npy',\n    'trans_rdg_7': 'test_rdg_epoch2000_probas8_params6_batch512.npy',\n    'trans_rdg_15': 'test_rdg_epoch2000_probas8_params14_batch512.npy',\n    'trans_rdg_19': 'test_rdg_epoch2000_probas8_params18_batch512.npy',\n    'trans_rdg_23': 'test_rdg_epoch2000_probas8_params22_batch512.npy',\n    'trans_rdg_24': 'test_rdg_epoch2000_probas8_params23_batch512.npy',\n    'trans_rdg_27': 'test_rdg_epoch1000_probas8_params26_batch512.npy',\n    'trans_bayrdg_1': 'test_bayrdg_epoch2000_probas8_params0_batch512.npy',\n    'trans_bayrdg_2': 'test_bayrdg_epoch2000_probas8_params1_batch512.npy',\n    'trans_hgb_2': 'test_hgb_epoch2000_probas8_params1_batch512.npy',\n    'lightgbm1': 'test_preds_lgbm_0.npy',\n    'lightgbm2': 'test_preds_lgbm_1.npy',\n    'lightgbm3': 'test_preds_lgbm_2.npy',\n    'lightgbm4': 'test_preds_lgbm_3.npy',\n    'lightgbm5': 'test_preds_lgbm_4.npy',\n    'lightgbm6': 'test_preds_lgbm_5.npy',\n    'xgboost1': 'test_preds_xgb_0.npy',\n    'xgboost2': 'test_preds_xgb_1.npy',\n    'catboost1': 'test_preds_cbt_0.npy',\n    'catboost2': 'test_preds_cbt_1.npy',\n    'logistic_regression1': 'test_preds_lr_0.npy',\n    'logistic_regression2': 'test_preds_lr_1.npy',\n    'random_forest1': 'test_preds_rf_0.npy',\n    'tabnet1': 'test_preds_tabnet_0.npy',\n    'tabnet2': 'test_preds_tabnet_1.npy',\n    'histgradient1': 'test_preds_hgb_0.npy',\n    'histgradient2': 'test_preds_hgb_1.npy',\n    'keras1': 'test_preds_keras_0.npy',\n    'keras2': 'test_preds_keras_1.npy',\n    'keras3': 'test_preds_keras_2.npy',\n    'keras4': 'test_preds_keras_3.npy',\n    'dae1': 'test_preds_dae_0.npy',\n    'dae2': 'test_preds_dae_1.npy',\n    'dae3': 'test_preds_dae_2.npy',\n    'dae4': 'test_preds_dae_3.npy',\n    'dae5': 'test_preds_MLP_TPSMAR_FINAL.npy',\n    'dtables1': 'test_preds_dtables_0.npy',\n    'dtables2': 'test_preds_dtables_1.npy'\n}","3c0a937d":"oof_df = pd.DataFrame()\npreds_df = pd.DataFrame()\n\nfor name, train_oof in train_oof_dict.items():\n    oof_df = pd.concat([oof_df, pd.Series(np.load(TRAIN_PATH \/ train_oof), name=name)], axis=1)\n    \nfor name, test_pred in test_pred_dict.items():\n    preds_df = pd.concat([preds_df, pd.Series(np.load(TEST_PATH \/ test_pred), name=name)], axis=1)","5476fa67":"oof_df","3bb50a2d":"preds_df","2a34767f":"plt.figure(figsize=(32, 16))\nsns.heatmap(oof_df.corr(), annot=True, fmt='.2f')","52f4a065":"plt.figure(figsize=(32, 16))\nsns.heatmap(preds_df.corr(), annot=True, fmt='.2f')","e422398b":"oof_list = list()\npreds_list = list()\n\nfor seed in seed_list:\n    oof = np.zeros(oof_df.shape[0])\n    preds = 0\n    skf = StratifiedKFold(n_splits=n_folds, shuffle=True, random_state=seed)\n    \n    for fold, (train_idx, valid_idx) in enumerate(skf.split(oof_df, train_df['target'])):\n        X_train, y_train = oof_df.to_numpy()[train_idx], train_df['target'].to_numpy()[train_idx]\n        X_valid, y_valid = oof_df.to_numpy()[valid_idx], train_df['target'].to_numpy()[valid_idx]\n    \n        model = Ridge(random_state=seed)\n        model.fit(X_train, y_train)\n        \n        oof[valid_idx] = model.predict(X_valid)\n        preds += model.predict(preds_df) \/ n_folds\n\n    auc = roc_auc_score(train_df['target'], oof)\n    print(f\"SEED {seed}: AUC {auc:.6f}\")\n\n    oof_list.append(oof)\n    preds_list.append(preds)\n\nauc = roc_auc_score(train_df['target'], np.mean(rankdata(oof_list, axis=1), axis=0)\/oof_df.shape[0])\nprint(f\"SEED AVERAGING AUC {auc:.6f}\")","249857fb":"sub_df['target'] = np.mean(rankdata(preds_list, axis=1), axis=0) \/ preds_df.shape[0]\nsub_df.to_csv(f\"submission.csv\", index=False)\ndisplay(sub_df.head(), sub_df.tail())","bd92687f":"## Stacking","808ef879":"* version2: late submission\n* version1: 3rd solution","945db9bf":"## Load data","00e113d6":"## Check data","9eec7c4d":"# TPS Mar 2021 Stacking","14649064":"## Check correlation","b65143ee":"## Define parameters","5618724e":"## Libraries"}}