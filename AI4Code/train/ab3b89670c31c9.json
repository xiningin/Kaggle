{"cell_type":{"bba1c972":"code","75e53b7b":"code","c7f5e025":"code","ba2a6dd0":"code","ff511c43":"code","e33014b9":"code","2eb24bc2":"code","1b020edd":"code","c1ae667e":"code","10de2baf":"code","9e0bf0a5":"code","3cf1abe6":"code","ae99e938":"code","fc483cf8":"code","73e9636a":"code","9d94a865":"code","7270071a":"code","339653d2":"code","8aede330":"code","1478af8e":"code","ed884fbd":"code","4d1b049a":"code","95595312":"code","c004f71b":"code","967f0b2c":"code","cadeaeb8":"code","b7511658":"code","c2081149":"code","676b3b5c":"code","cb97fabc":"code","c112be75":"code","6325d6c5":"code","fb261df0":"code","34a7a8bc":"code","e7503e65":"markdown","556288fc":"markdown","f6ea8568":"markdown","bff320c7":"markdown","92168b10":"markdown","9ba9b21d":"markdown","1ece0e20":"markdown","b087edff":"markdown","34b580be":"markdown","ec1032f1":"markdown","59c7a741":"markdown","b8a0fd90":"markdown","5bcb0135":"markdown"},"source":{"bba1c972":"# Import required libraries\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore') \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","75e53b7b":"# Read datas\ndata = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","c7f5e025":"data.head()","ba2a6dd0":"data.Nationality.unique()","ff511c43":"data.info()","e33014b9":"data.Club.unique()","2eb24bc2":"data.Nationality.value_counts()","1b020edd":"# Overall of each nationality\narea_list = list(data['Nationality'].unique())\noverall_ratio = []\nfor i in area_list:\n    x = data[data['Nationality']==i]\n    overall_rate = sum(x.Overall)\/len(x)\n    overall_ratio.append(overall_rate)\ndata = pd.DataFrame({'area_list': area_list,'overall_ratio':overall_ratio})\nnew_index = (data['overall_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(150,100))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['overall_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('Nationality')\nplt.ylabel('Overall')\nplt.title('Overall Given Nationality')\nplt.show()","c1ae667e":"data = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\ndata.head()","10de2baf":"#Let's Eye on Turkish Footballers\ndata1 = data[data['Nationality'] == \"Turkey\"][['Name','Overall','Potential','Position']]\ndata1","9e0bf0a5":"# Most common 25 Surname of Turkish Footballers\nseparate = data1.Name.str.split() \na,b = zip(*separate)                    \nname_list = b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(25)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# \nplt.figure(figsize=(25,10))\nax= sns.barplot(x=x, y=y,palette = \"Blues_d\")\nplt.xlabel('Surname of Turkish Footballer')\nplt.ylabel('Frequency')\nplt.title('Most common 25 Surname')\nplt.show()","3cf1abe6":"data1.head()","ae99e938":"# Overall of each position\narea_list = list(data1['Position'].unique())\noverall_ratio = []\nfor i in area_list:\n    x = data1[data1['Position']==i]\n    overall_rate = sum(x.Overall)\/len(x)\n    overall_ratio.append(overall_rate)\ndata = pd.DataFrame({'area_list': area_list,'overall_ratio':overall_ratio})\nnew_index = (data['overall_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(30,20))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['overall_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('Position')\nplt.ylabel('Overall')\nplt.title('Overall Given Position')\nplt.show()","fc483cf8":"# Potential of each position\narea_list = list(data1['Position'].unique())\npotential = []\nfor i in area_list:\n    x = data1[data1['Position']==i]\n    potential_rate = sum(x.Potential)\/len(x)\n    potential.append(potential_rate)\ndata = pd.DataFrame({'area_list': area_list,'potential': potential})\nnew_index = (data['potential'].sort_values(ascending=False)).index.values\nsorted_data2 = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(30,20))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['potential'])\nplt.xticks(rotation= 90)\nplt.xlabel('Position')\nplt.ylabel('Potential')\nplt.title('Potential Given Position')\nplt.show()","73e9636a":"data = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\ndata.head()","9d94a865":"# Overall vs Potential of each Position\nsorted_data['overall_ratio'] = sorted_data['overall_ratio']\/max(sorted_data['overall_ratio'])\nsorted_data2['potential'] = sorted_data2['potential']\/max(sorted_data2['potential'])\nturkey_data = pd.concat([sorted_data,sorted_data2['potential']],axis=1)\nturkey_data.sort_values('overall_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='overall_ratio',data=turkey_data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='potential',data=turkey_data,color='red',alpha=0.8)\nplt.xlabel('Position',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('Overall vs Potential',fontsize = 20,color='blue')\nplt.grid()","7270071a":"turkey_data.head()","339653d2":"# Visualization of potential vs overall of each position with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(turkey_data.overall_ratio, turkey_data.potential, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","8aede330":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"overall_ratio\", \"potential\", data=turkey_data,size=5, ratio=3, color=\"g\")","1478af8e":"data = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\ndata[\"Preferred Foot\"].head()","ed884fbd":"data[\"Preferred Foot\"].dropna(inplace = True)\nlabels = data[\"Preferred Foot\"].value_counts().index\ncolors = ['blue','yellow']\nexplode = [0,0]\nsizes =data[\"Preferred Foot\"].value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Footballer Preferred Foot',color = 'red',fontsize = 15)\nplt.show()","4d1b049a":"turkey_data.head()","95595312":"# Visualization of Overall vs Potential of every position with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"overall_ratio\", y=\"potential\", data=turkey_data)\nplt.show()","c004f71b":"# Visualization with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(turkey_data.overall_ratio, turkey_data.potential, shade=True, cut=3)\nplt.show()","967f0b2c":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.5, dark=.7)\nsns.violinplot(data=turkey_data, palette=pal, inner=\"points\")\nplt.show()","cadeaeb8":"turkey_data.corr()","b7511658":"#correlation map\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(turkey_data.corr(), annot=True, linewidths=0.5,linecolor=\"blue\", fmt= '.1f',ax=ax)\nplt.show()","c2081149":"data.head()","676b3b5c":"sns.boxplot(x=\"Real Face\", y=\"Age\", hue=\"Preferred Foot\", data=data, palette=\"PRGn\")\nplt.show()","cb97fabc":"data = data.iloc[0:500,:]","c112be75":"sns.swarmplot(x=\"Real Face\", y=\"Age\",hue=\"Preferred Foot\", data=data)\nplt.show()","6325d6c5":"# pair plot\nsns.pairplot(turkey_data)\nplt.show()","fb261df0":"data = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\ndata.head()","34a7a8bc":"sns.countplot(data[\"Preferred Foot\"])\nplt.title(\"Foot\",color = 'blue',fontsize=15)","e7503e65":"<a id=\"1\"><\/a> \n## Bar Plot","556288fc":"<a id=\"2\"><\/a> \n## Point Plot","f6ea8568":"<a id=\"3\"><\/a> \n## Joint Plot","bff320c7":"# INTRODUCTION\n1. Import required libraries\n1. Read datas\n1. Overall of each nationality\n1. Most common 25 Surname of Turkish Footballers\n1. Overall of each position for Turkish Footballer\n1. Potential of each position for Turkish Footballer\n1. Overall vs Potential of each Position\n1. Pie Chart for Preferred Foot\n<br>\n<br>\nPlot Contents:\n* [Bar Plot](#1)\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Kde Plot](#6)\n* [Violin Plot](#7)\n* [Heatmap](#8)\n* [Box Plot](#9)\n* [Swarm Plot](#10)\n* [Pair Plot](#11)\n* [Count Plot](#12)","92168b10":"<a id=\"9\"><\/a> \n## Box Plot","9ba9b21d":"<a id=\"12\"><\/a> \n## Count Plot","1ece0e20":"<a id=\"4\"><\/a> \n## Pie Chart","b087edff":"<a id=\"8\"><\/a> \n## Heatmap Plot","34b580be":"<a id=\"7\"><\/a> \n## Violin Plot","ec1032f1":"<a id=\"5\"><\/a> \n## Lm Plot","59c7a741":"<a id=\"11\"><\/a> \n## Pair Plot","b8a0fd90":"<a id=\"10\"><\/a> \n## Swarm Plot","5bcb0135":"<a id=\"6\"><\/a> \n## Kde Plot"}}