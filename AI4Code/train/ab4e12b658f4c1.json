{"cell_type":{"83b52cab":"code","cd0fa06b":"code","6feadcc1":"code","47305467":"code","ebc6cc6f":"code","141ef4c5":"code","33aa52e0":"code","3463f81f":"code","2a8de9e5":"code","639b7984":"code","139f0e6d":"code","a0b85533":"code","bbaf0560":"code","a31cafbd":"code","bee5582d":"code","610d1a73":"code","686b305b":"code","bcbee78b":"code","e5eec353":"code","e6e99945":"code","78f288a5":"code","dc97efd5":"code","0f810717":"code","44bdba06":"code","e7a2a834":"code","cd706321":"code","12a76abb":"code","1dc18c58":"code","c0f109bd":"code","8a06e721":"markdown","0f244edf":"markdown","83387f3f":"markdown","dba143f8":"markdown","676dc258":"markdown","b67af553":"markdown","0e3084cb":"markdown","0429eb1a":"markdown","a07e082e":"markdown","527651bd":"markdown","e4d5acee":"markdown","cf88a3c8":"markdown","a9941656":"markdown","c49e16c9":"markdown","a1bffb27":"markdown","a6de7227":"markdown","85ec7ac3":"markdown","8e68df88":"markdown"},"source":{"83b52cab":"my_county <- \"Fayette\"\nmy_state <- \"Kentucky\"\nmy_state_abb <- \"KY\"","cd0fa06b":"library(tidyverse) # metapackage of all tidyverse packages\nlibrary(lubridate)\nlibrary(RcppRoll)\nlibrary(scico)\nlibrary(mgcv)\nlibrary(usmap)","6feadcc1":"fig <- function(width, heigth){\n     options(repr.plot.width = width, repr.plot.height = heigth)\n}","47305467":"#dat_cdc <- read_csv(\"https:\/\/data.cdc.gov\/api\/views\/n8mc-b4w4\/rows.csv?accessType=DOWNLOAD\")","ebc6cc6f":"dat_jhu <- read_csv(\"https:\/\/raw.githubusercontent.com\/govex\/COVID-19\/master\/data_tables\/testing_data\/time_series_covid19_US.csv\")","141ef4c5":"dat_jhu %>%\n filter(state == my_state_abb) %>%\n mutate(date = mdy(date)) %>%\n pivot_longer(cols = cases_conf_probable:tests_combined_total) %>%\n ggplot(aes(date, value))+\n    geom_point() +\n    facet_wrap(~name)","33aa52e0":"dat_jhu %>%\n filter(state == my_state_abb) %>%\n mutate(date = mdy(date),\n        people_pos = people_viral_positive-lag(people_viral_positive),\n        test_tot = tests_viral_total-lag(tests_viral_total),\n        people_pos_7 = roll_sum(people_pos, n = 14, na.rm = T, align = \"right\", fill = NA),\n        test_tot_7 = roll_sum(test_tot, n = 14, na.rm = T, align = \"right\", fill = NA),\n        pos = people_pos_7\/test_tot_7)%>%\n filter(pos >=0,\n        date > ymd(\"2020-5-30\")) %>%\n ggplot(aes(date,  people_pos_7\/test_tot_7))+\n    geom_point()","3463f81f":"# fig(8,5)\n\n# pos %>%\n# # filter(positivity > 0.9)\n#   ggplot(aes(date, positivity))+\n#    geom_vline(xintercept = ymd(\"2020-11-26\"), \n#               color = \"grey60\",\n#               linetype = 2)+\n#     geom_hline(yintercept = 0.05, color = \"grey\", size = 1) +\n#     #geom_point()+\n#     geom_line(aes(y = positivity_roll), color = \"steelblue\", size = 1)+\n#     expand_limits(y = 0) +\n#     theme_minimal()+\n#     labs(title = str_c(my_state,\" 7-day state level positivity\"))","2a8de9e5":"# fig(8,5)\n\n# pos %>%\n#   filter(date >= today()-30) %>%\n#   ggplot(aes(date, positivity))+\n#    geom_vline(xintercept = ymd(\"2020-11-26\"),   \n#               color = \"grey60\",\n#               linetype = 2)+\n#     geom_hline(yintercept = 0.05, color = \"grey\", size = 1) +\n#     #geom_point()+\n#     geom_line(aes(y = positivity_roll), color = \"steelblue\", size = 1)+\n#     expand_limits(y = 0) +\n#     theme_minimal()+\n#     labs(title = str_c(my_state,\" 7-day state level positivity\"),\n#          subtitle = \"Last 30 days\")","639b7984":"read_csv(\"https:\/\/raw.githubusercontent.com\/nytimes\/covid-19-data\/master\/us-counties.csv\") %>%\n filter(county == my_county, state == my_state) %>% \n mutate(cases_daily = cases-lag(cases),\n        cases_daily = case_when(date == ymd(\"2020-11-26\") ~ as.numeric(NA),\n                                date == ymd(\"2021-9-6\") ~ as.numeric(NA),\n                                #cases_daily ==0 ~ as.numeric(NA),\n                               TRUE ~ cases_daily)) %>%\n        filter(cases_daily >= 0)%>%\n        mutate(cases_roll = roll_mean(cases_daily, n = 7, na.rm = T, align = \"right\", fill = NA),\n        deaths_daily = deaths - lag(deaths),\n        deaths_daily = case_when(deaths_daily < 0 ~ as.numeric(NA),\n                                 TRUE ~ deaths_daily),\n        deaths_roll = roll_mean(deaths_daily, n = 7, na.rm = T, align = \"right\", fill = NA),\n        deaths_as_cases = lead(deaths_roll, n = 7) * 150) %>%\n  mutate(cases_fill = cases_daily) %>%\n  fill(cases_fill, .direction = \"up\") %>%\n  mutate(smooth_date = case_when(is.finite(cases_daily) & is.na(lag(cases_daily)) ~ date,\n                                        is.finite(cases_daily) & is.finite(lag(cases_daily)) ~ date)) %>%\n  fill(smooth_date, .direction = \"up\") %>%\n  group_by(smooth_date) %>%\n  mutate(ndays = n(),\n                cases_smoothed = cases_fill\/ndays) %>%\n  ungroup() %>%\n         mutate(cases_smooth_roll = roll_mean(cases_smoothed, n = 7, na.rm = T, align = \"right\", fill = NA)) -> county","139f0e6d":"# county %>%\n#  left_join(pos %>% select(date, positivity_roll)) -> county_positivity","a0b85533":"# https:\/\/github.com\/ellisp\/blog-source\/blob\/master\/_working\/0178-covid-prevalence-inference.R\n\n# increase_cases <- function(observed_cases, pos_rate, m, k){\n#   y <- observed_cases * pos_rate ^ k * m\n#   return(y)\n# }","bbaf0560":"# 2019 estimate\ncensus_url <- \"https:\/\/www2.census.gov\/programs-surveys\/popest\/datasets\/2010-2019\/counties\/totals\/co-est2019-alldata.csv\"\ncounty_pop <- (read_csv(census_url) %>%\n                     filter(CTYNAME == str_c(my_county, \" County\"),\n                     STNAME == my_state)%>%\n                    pull(POPESTIMATE2019))[1]\n\ncounty %>%\n  mutate(#adj6 = increase_cases(cases_smooth_roll, positivity_roll, m = 6, k = 0.5),\n         #adj10 = increase_cases(cases_smooth_roll, positivity_roll, m = 10, k = 0.5),\n         cases_percap = (cases_smooth_roll\/county_pop)*100000,\n         #adj6_percap = (adj6\/county_pop)*100000,\n         #adj10_percap = (adj10\/county_pop)*100000,\n         dcases_percap = (deaths_as_cases\/county_pop)*100000,\n         active = roll_sum(cases_smoothed, n = 10, align = \"right\", fill = NA),\n         #active_adj6 = roll_sum(adj6, n = 10, align = \"right\", fill = NA),\n         #active_adj10 = roll_sum(adj10, n = 10, align = \"right\", fill = NA),\n         active_dcases = roll_sum(deaths_as_cases, n = 10, align = \"right\", fill = NA),\n         active_percap =  (active\/county_pop)*100000,\n         #active_adj6_percap = (active_adj6\/county_pop)*100000,\n         #active_adj10_percap = (active_adj10\/county_pop)*100000,\n         active_dcases_percap = (active_dcases\/county_pop)*100000) -> county_adj","a31cafbd":"fig(8,5)\n\n\n(county_adj %>%\n  filter(is.finite(cases_smooth_roll)) %>% \n  select(date, cases_smooth_roll) %>%\n  gather(key = \"measure\", value = \"number\",  c(\"cases_smooth_roll\")) %>%\n  ggplot(aes(date, number, color = measure))+\n   geom_line(size = 1)+\n   scale_color_scico_d(palette = \"hawaii\", end = 0.8, labels = c(\"cases\"))+\n   labs(y = \"daily cases\",\n        title = \"Rolling Weekly Case Average\",\n        subtitle = str_c(my_county, \"County, \", my_state))+\n   theme_minimal()) ","bee5582d":"fig(8,5)\n\n\n(county_adj %>%\n  filter(is.finite(cases_roll)) %>% \n  select(date, cases_percap) %>%\n  gather(key = \"measure\", value = \"number\",  c(\"cases_percap\")) %>%\n  ggplot(aes(date, number, color = measure))+\n   geom_vline(xintercept = ymd(\"2020-11-26\"), \n              color = \"grey60\",\n              linetype = 2)+\n   geom_hline(yintercept = 25, color = \"red\")+\n   geom_line(size = 1)+\n   scale_color_scico_d(palette = \"hawaii\", end = 0.8, labels = c(\"cases\"))+\n   labs(y = \"daily cases per 100,000\",\n        title = \"Rolling Weekly Case Average per 100,000\",\n        subtitle = str_c(my_county, \"County, \", my_state))+\n   theme_minimal())","610d1a73":"fig(8,5)\n\n\n(county_adj %>%\n  filter(is.finite(cases_smooth_roll),\n        date >= today() - 60) %>% \n  select(date, cases_smooth_roll, cases_daily) %>%\n  mutate(measure = \"cases\") %>%\n  #gather(key = \"measure\", value = \"number\",  c(\"cases_roll\")) %>%\n  ggplot(aes(date, cases_smooth_roll, color = measure))+\n    geom_vline(xintercept = ymd(\"2020-11-26\"), \n              color = \"grey60\",\n              linetype = 2)+\n    geom_vline(xintercept = ymd(\"2020-12-25\"), \n              color = \"grey60\",\n              linetype = 2)+ \n   geom_line(size = 1)+\n   geom_point(aes(y = cases_daily))+\n   scale_color_scico_d(palette = \"hawaii\", end = 0.8, labels = c(\"cases\"))+\n   labs(y = \"daily cases\",\n        title = \"Rolling Weekly Case Average (past 60 days)\",\n        subtitle = str_c(my_county, \"County, \", my_state))+\n   expand_limits(y = 0)+\n   theme_minimal()) ","686b305b":"fig(8,5)\n\n\n(county_adj %>%\n  filter(is.finite(cases_roll),\n        date >= today() - 60) %>% \n  select(date, cases_percap) %>%\n  gather(key = \"measure\", value = \"number\",  c(\"cases_percap\")) %>%\n  ggplot(aes(date, number, color = measure))+\n   geom_vline(xintercept = ymd(\"2020-12-25\"),\n              color = \"grey60\",\n              linetype = 2)+\n   geom_hline(yintercept = 25, color = \"red\")+\n   geom_hline(yintercept = 10, color = \"orange\")+\n   geom_hline(yintercept =  1, color = \"green\")+\n   geom_line(size = 1)+\n   expand_limits(y = 0)+\n   scale_color_scico_d(palette = \"hawaii\", end = 0.8, labels = c(\"cases\"))+\n   labs(y = \"daily cases per 100,000\",\n        title = \"Rolling Weekly Case Average per 100,000, past 60 days\",\n        subtitle = str_c(my_county, \"County, \", my_state))+\n   theme_minimal())","bcbee78b":"# fig(8,5)\n\n\n# (county_adj %>%\n#   filter(is.finite(cases_smooth_roll)) %>% \n#   select(date, cases_smooth_roll, adj6, adj10) %>%\n#   gather(key = \"measure\", value = \"number\",  c(\"cases_smooth_roll\", \"adj6\", \"adj10\")) %>%\n#   mutate(measure = factor(measure, levels = c(\"cases_smooth_roll\", \"adj6\", \"adj10\"))) %>%\n#   ggplot(aes(date, number, color = measure))+\n#     geom_vline(xintercept = ymd(\"2020-11-26\"), \n#               color = \"grey60\",\n#               linetype = 2)+\n#    geom_line(size = 1)+\n#    scale_color_scico_d(\"measure\", palette = \"hawaii\", end = 0.8, labels = c(\"cases\", \"adj6\", \"adj10\"))+\n#    labs(y = \"daily cases\",\n#         title = \"Rolling Daily Case Average & Positivity Adjustments\",\n#         subtitle = str_c(my_county, \", \", my_state),\n#         color = \"adjustment factor\")+\n#    theme_minimal()) ","e5eec353":"# fig(8,5)\n\n\n# (county_adj %>%\n#   filter(is.finite(cases_smooth_roll)) %>% \n#   filter(date >= today()-60) %>%\n#   select(date, cases_smooth_roll, adj6, adj10) %>%\n#   gather(key = \"measure\", value = \"number\",  c(\"cases_smooth_roll\", \"adj6\", \"adj10\")) %>%\n#   mutate(measure = factor(measure, levels = c(\"cases_smooth_roll\", \"adj6\", \"adj10\"))) %>%\n#   ggplot(aes(date, number, color = measure))+\n#    geom_line(size = 1)+\n#    scale_color_scico_d(\"measure\", palette = \"hawaii\", end = 0.8, labels = c(\"cases\", \"adj6\", \"adj10\"))+\n#    labs(y = \"daily cases\",\n#         title = \"Rolling Daily Case Average & Positivity Adjustments (past 60 days)\",\n#         subtitle = str_c(my_county, \", \", my_state),\n#         color = \"adjustment factor\")+\n#    expand_limits(y = 0) +\n#    theme_minimal()) ","e6e99945":"county_adj %>%\n  mutate(oneweek = cases_smooth_roll\/lag(cases_smooth_roll, n = 7)) %>%\n  ggplot(aes(date, oneweek)) + \n    geom_line()","78f288a5":"install.packages(\"coarseDataTools\")\ninstall.packages(\"EpiEstim\")","dc97efd5":"library(coarseDataTools)\nlibrary(EpiEstim)","0f810717":"source(\"https:\/\/raw.githubusercontent.com\/CBDRH\/ozcoviz\/master\/get_nishiura_si_sample.R\")\n","44bdba06":"nishi_si_sample  <- get_nishiura_si_sample()\n# posterior sample based on Nishiura et al SI data\nsi_from_sample_nishiura_config <-  make_config(list(n1=500, n2 = 50, seed=2))","e7a2a834":"county_adj %>%\n  filter(date > ymd(20200331)) %>%\n  mutate(dates = date, \n         I = cases_smooth_roll) %>%\n  select(dates, I) %>%\n  drop_na() %>%\n  estimate_R( method=\"si_from_sample\",\n                        si_sample=nishi_si_sample,\n                        config = si_from_sample_nishiura_config) -> effr\n\n# county_adj%>%\n#   filter(date > ymd(20200331)) %>%\n#   mutate(dates = date, \n#          I = adj10) %>%\n#   select(dates, I) %>%\n#   drop_na() %>%\n#   estimate_R( method=\"si_from_sample\",\n#                         si_sample=nishi_si_sample,\n#                         config = si_from_sample_nishiura_config) -> effr_adj10","cd706321":"fig(8,5)\n\n# (bind_rows(effr$R %>% mutate(measure = \"cases\"),\n#           effr_adj10$R %>% mutate(measure = \"adj10\")) %>%\n effr$R %>% \n  mutate(measure = \"cases\")%>%\n  mutate(date = (county_adj %>%  filter(date > ymd(20200331)))$date[t_end]) %>%\n  ggplot(aes(date, `Mean(R)`)) +\n    geom_hline(yintercept = 1)+\n    geom_ribbon(aes(ymin = `Quantile.0.025(R)`, ymax = `Quantile.0.975(R)`, fill = measure),\n               alpha = 0.2)+\n    geom_ribbon(aes(ymin = `Quantile.0.25(R)`, ymax = `Quantile.0.75(R)`, fill = measure),\n               alpha = 0.3)+\n    geom_line(aes(color = measure), size = 0.5)+\n    scale_color_scico_d(palette = \"berlin\")+\n    scale_fill_scico_d(palette = \"berlin\")+\n    scale_y_log10()+\n    labs(title = \"estimated Reff\", \n         subtitle = str_c(my_county, \", \", my_state))+\n    theme_minimal()","12a76abb":"fig(8,5)\n\n effr$R %>% \n  mutate(measure = \"cases\")%>%\n  mutate(date = (county_adj %>%  filter(date > ymd(20200331)))$date[t_end])%>%\n  filter(date >= today()-60) %>%\n  ggplot(aes(date, `Mean(R)`)) +\ngeom_vline(xintercept = ymd(\"2020-11-26\"), \n              color = \"grey60\",\n              linetype = 2)+\ngeom_vline(xintercept = ymd(\"2020-12-25\"), \n              color = \"grey60\",\n              linetype = 2)+\n    geom_hline(yintercept = 1)+\n    geom_ribbon(aes(ymin = `Quantile.0.025(R)`, ymax = `Quantile.0.975(R)`, fill = measure),\n               alpha = 0.2)+\n    geom_ribbon(aes(ymin = `Quantile.0.25(R)`, ymax = `Quantile.0.75(R)`, fill = measure),\n               alpha = 0.3)+\n    geom_line(aes(color = measure), size = 0.5)+\n    scale_color_scico_d(palette = \"berlin\")+\n    scale_fill_scico_d(palette = \"berlin\")+\n    scale_y_log10()+\n    labs(title = \"estimated Reff (last 60 days)\", \n         subtitle = str_c(my_county, \", \", my_state))+\n    theme_minimal()","1dc18c58":"# read_csv(pos_url) %>%\n#   mutate(date = ymd(date)) -> state_level ","c0f109bd":"# fig(8,5)\n\n# state_level %>% \n#     filter(!is.na(hospitalizedCurrently)) %>%\n#     ggplot(aes(date, hospitalizedCurrently))+\n#    geom_vline(xintercept = ymd(\"2020-11-26\"), \n#               color = \"grey60\",\n#               linetype = 2)+\n#    geom_vline(xintercept = ymd(\"2020-12-25\"),\n#               color = \"grey60\",\n#               linetype = 2)+\n#         geom_line(color = \"steelblue\", size = 1)+\n#         labs(y = \"currently hospitalized\",\n#              title = \"Hospitalization numbers\",\n#              subtitle = str_c(my_state))+\n#         expand_limits(y = 0)+\n#         theme_minimal()","8a06e721":"### 7 Day average daily cases (for the past month)","0f244edf":"# State Positivity Rate\n\n[The Positivity Rate](https:\/\/www.jhsph.edu\/covid-19\/articles\/covid-19-testing-understanding-the-percent-positive.html) is the proportion of covid tests that come back positive. It's like looking for clams at the beach. If you take a scoop of sand, and there aren't very many clams in your scoop, you can probably bet there's not a lot of clams left in the beach. But if there's a *lot* of clams in your scoop, then you can bet there's a lot more left in the beach that you haven't found.\n\nPublic health officials want to leave as few Covid cases undetected, because the more cases go undetected, [the harder it is to figure out how and where it is spreading](https:\/\/www.nytimes.com\/2020\/10\/31\/us\/coronavirus-transmission-everywhere.html), and the harder it gets to know how to keep ourselves safe.\n\nThe World Health Organization has said that positivity rates greater than 5% indicate that too many Covid cases are going undetected.","83387f3f":"### 7 Day average daily cases. ","dba143f8":"First, here is a graph of the observed cases, and the two positivity adjustments since the earliest data is available for the county","676dc258":"### 7 Day average cases per 100,000 people","b67af553":"This figure plots the same data, just for the past month.","0e3084cb":"# Hospitalization\n\nThe Hospitalization Rate is only available at the state level. Unlike the other measures, here I'm plotting the raw \"currently hospitalized\" data from the Covid Tracking Project.","0429eb1a":"# Description\n\nThis notebook draws data from the (Covid Tracking Project)[https:\/\/covidtracking.com], for state level positivity data, and from the New York Times (New York Times' Covid19 Data github repository)[https:\/\/github.com\/nytimes\/covid-19-data] for county level infection and death rates.\n\nIt displays 7-day averages for almost all data, since any one day might have exceptional peaks or exceptional valleys that aren't reflective of the trend.","a07e082e":"# New Daily Cases in the County\n\nThere are a few figures below showing the weekly average of new daily cases in the county. In order, they are:\n\n1. The weekly average of new cases.\n2. The weekly average of new cases per 100,000 people.\n3. The same as 1, but just for the past month.\n4. The same as 2, but just for the past month.\n\nThe reason I include a plot of cases per 100,000 people is because it gives a sense of how dense the number of Covid cases in a county are. 100 cases in a huge city means almost no one has it, while in a small county means that a lot of people have it. \n\nSome states are using the number of cases per capita as part of their COVID planning. For example, Kentucky has said that if a county has more than 25 cases per 100,000 people, it is in the \"Red Zone.\"","527651bd":"# R estimate\n\nThe R number an estimate of how quickly the virus is spreading. You can think of it as how many people each infected person infects. If R=1, then every sick person just infects one other person. If there were 70 cases new one day, there would be 70 new cases the next day if R=1. When R is greater than one, the virus is growing exponentially. If R = 1.2 and on Monday there were 70 new cases, then Tuesday there would be 84 new cases, and on Wednesday there would be 100 new cases.\n\nFor the pandemic to end, R needs to be less than 1 for an extended period of time.","e4d5acee":"This figure displays the 7-day positivity rate for the state, from the earliest date data is available.","cf88a3c8":"## What to look at and consider\n\nThe number of cases, and number of cases per 100,000 people are important metrics, but there's a few other things here to keep in mind when evaluating the risk to yourself and your community.\n\n1. The Positivity Rate\n    - When the positivity rate is high (say, above 5%), that means there are probably a lot more *actual* cases out there than are being observed. This is why I have a few plots of \"Positivity Adjustments\", where I try to estimate the number of actual cases.\n2. The R Number\n    - This is an estimate of how many people each infected person infects. If R=1, then the number of new cases each day will be the same. Once R goes above 1, the number of cases is increasing exponentially.\n3. The Hospitalization Rate\n    - The hospitalization rate can give us a sense of how close hospitals are to getting overwhelmed. Even minor cases that could be treated with simple thereputics like additional oxygen can be very serious if hospitals are too overwhelmed treating only the most severe cases.\n    \nThese are the three factors I'm paying the most attention to when thinking about how my actions might put myself at risk, or the people around me at risk.","a9941656":"## Positivity Adjustments\n\nIn this section, I do some \"positivity adjustment.\" Going back to the clams analogy, it's like trying to estimate how many clams are left in the beach based on how many you have in your shovel. For COVID, it's trying to guess how many cases there *actually* are assuming some people had it and never got tested.\n\nSince it is an estimate, there are a few different ways you can do it, depending on how pessimistic you are. The adjustment called `adj10` here is very pessimistic, and assumes there are more actual covid cases out there, and `adj6` is somewhere inbetween.\n\nI'm basing the positivity adjustment on discussion and code from [this blog post](http:\/\/freerangestats.info\/blog\/2020\/05\/09\/covid-population-incidence).","c49e16c9":"If you fork this notebook and want to run it for your own county, simply change the variables in this chunk.","a1bffb27":"### 7 Day average daily cases per 100,000 people (past 30 days)","a6de7227":"### Positivity Adjustments","85ec7ac3":"## Why I made this\n\nI made this for myself, originally, to help me make decisions about what kinds of activities I would engage in. If cases are low (about 10 per 100,000) and staying low (R at 1 or below), maybe I'd feel comfortable getting a haircut or dining outdoors. If cases are high (25 per 100,000) and rising (R above 1), I'd start avoiding grocery stores, restaurants, etc. ","8e68df88":"Now, here is the same plot, but for just the past month."}}