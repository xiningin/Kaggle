{"cell_type":{"cf9401c6":"code","0b912af4":"code","42241bed":"code","2d58a256":"code","72fbab6d":"code","f4a6cacb":"code","0346e3c4":"code","450ea8cd":"code","7273410e":"code","39c84091":"code","7810dca4":"markdown","77c80a15":"markdown","d95742a9":"markdown","ede4ceff":"markdown","201eb586":"markdown","c589ca3d":"markdown","df43df65":"markdown","2cbb51ac":"markdown","5bf52d95":"markdown","7497954c":"markdown","5a747d89":"markdown"},"source":{"cf9401c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0b912af4":"df = pd.read_csv('..\/input\/one-million-reddit-confessions\/one-million-reddit-confessions.csv', encoding='utf8')\ndf.tail(2)","42241bed":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\ndf = df[df[\"selftext\"] != \"[deleted]\"]\ndf = df[df[\"selftext\"] != \"[removed]\"]\nlen(df)","2d58a256":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\ndf[\"timestamp\"] = pd.to_datetime(df[\"created_utc\"],unit='s')\ndf[\"hour\"] = df[\"timestamp\"].dt.hour\ndf[\"noticed\"] = df[\"score\"] > 1","72fbab6d":"df.head(3)","f4a6cacb":"#https:\/\/stackoverflow.com\/questions\/3682748\/converting-unix-timestamp-string-to-readable-date\n#By Contango answered Jan 15 '20 at 19:52 StackOverflow\n\nimport datetime\n\ntimestamp = 1633046122 #number in created_utc 1st line\nvalue = datetime.datetime.fromtimestamp(timestamp)\nprint(f\"{value:%Y-%m-%d %H:%M:%S}\")","0346e3c4":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\n# How many posts do we receive per hour?\n\ncounts = df.groupby([\"hour\"]).count()\n\nresult = {}\nfor i in counts.iloc:\n    key = i.name\n    value = i[\"id\"]\n    result[key] = value\nplot = sns.lineplot(x=result.keys(), y=result.values())\nplot.set_xlabel(\"Hour (UTC)\")\nplot.set_ylabel(\"Post count\")\nNone","450ea8cd":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\n# What's the ratio of posts with a positive rank for each hour?\n\nnoticed_ratios = df.groupby([\"hour\"]).agg({'noticed':['mean']})\n\nresult = {}\nfor i in noticed_ratios.iloc:\n    key = i.name\n    value = i[\"noticed\"][\"mean\"]\n    result[key] = value\nplot = sns.lineplot(x=result.keys(), y=result.values())\nplot.set_xlabel(\"Hour (UTC)\")\nplot.set_ylabel(\"Likelihood of a positive rating\")\nNone","7273410e":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\nnoticed_df = df[df[\"noticed\"]]","39c84091":"#Code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n\n# What's the mean score of posts for each hour?\n\nmean_scores = noticed_df.groupby([\"hour\"]).agg({'score':['mean']})\n\nresult = {}\nfor i in mean_scores.iloc:\n    key = i.name\n    value = i[\"score\"][\"mean\"]\n    result[key] = value\nplot = sns.lineplot(x=result.keys(), y=result.values())\nplot.set_xlabel(\"Hour (UTC)\")\nplot.set_ylabel(\"Mean score\")\nNone","7810dca4":"After the snippet above, We'll have 3 more columns: timestamp, hour, and noticed.","77c80a15":"Acknowledgment: \n\nAll code and Dataset by Lexyr:\n\nhttps:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit","d95742a9":"#Quick clean-up\n\nWe are not that interested in removed posts.","ede4ceff":"\"There's a clear sweet spot around 11 AM UTC... right when post engagement starts dropping, if you remember our previous graph. If you post during one of those times, your post is less likely to get noticed.\"\n\nhttps:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit","201eb586":"#All code by Lexyr https:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit\n","c589ca3d":"What about the influence of followers? friends? In others words: Audience's power.","df43df65":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQskV97DFY3dVOZ2IlwlxYmX9AJG4to-RQIOw&usqp=CAU)mode.com","2cbb51ac":"#Transform the timestamp into an hour value.\n\nWe will need it to compare post ratings for different hours.","5bf52d95":"#I didn't even realize that created_utc was hour! That's why I'm reproducing Lexyr code (in another Dataset by him too. ","7497954c":"#Converting unix timestamp string to readable date\n\nhttps:\/\/stackoverflow.com\/questions\/3682748\/converting-unix-timestamp-string-to-readable-date","5a747d89":"\"To have the highest chance of being noticed, you should post between 00:00 UTC and 12:00 UTC (that's the evening to the middle of the night for you Americans, and morning to middle of afternoon for our Eurasian viewers). The content is low in number, and you might find it easier to discuss your ideas!\"\nhttps:\/\/www.kaggle.com\/pavellexyr\/what-is-the-best-time-to-ask-a-question-on-reddit"}}