{"cell_type":{"7b1d32bc":"code","199f79d8":"code","dcb4c495":"code","f65f1dc3":"code","d7b87feb":"code","c8e539d3":"code","fced4134":"code","55c6c034":"code","4aa47ce0":"code","e878202b":"code","99479510":"code","c4b7adde":"code","5c871a9e":"code","f3022b9f":"code","c60f41ec":"code","f9346340":"code","db347d31":"code","d04f482c":"code","525ec475":"code","5d3c44d6":"code","8e728f7f":"code","97b27a4f":"code","d5a475e8":"markdown","034fec79":"markdown","082518ed":"markdown"},"source":{"7b1d32bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","199f79d8":"df = pd.read_csv('\/kaggle\/input\/7k-indian-famous-women\/data.csv')\ndf.head()","dcb4c495":"df.shape","f65f1dc3":"df.isna().sum()  #we have quite a few null values to deal with","d7b87feb":"df[['Description','Job']].sample(10)\n#it seems like both the columns convey the same thing. It is safe to drop Description column\n#actually no we can fill the missing values of job column with description since ** THEYRE MORE OR LESS THE SAME **","c8e539d3":"df[df['Job'].isna()].head()  #observe 46th data ","fced4134":"df['Job'] = df['Job'].fillna(df['Description'])","55c6c034":"df.iloc[46]  # here we can see that our values have been updated, awesome","4aa47ce0":"df.isna().sum()  #the null values in Job column have dropped down drastically, yaaay","e878202b":"df = df.drop(['Description'],axis=1)  #dropping the column we dont need\n","99479510":"df['Job'].value_counts()  # we have 423 job categories they all fall under","c4b7adde":"plot1 = df['Job'].value_counts()[:10]","5c871a9e":"px.bar(plot1,\n      x='Job',\n      text = 'Job',\n      title = 'Top 10 professsions among popular ladies')","f3022b9f":"df['Country'].value_counts() # we have a bunch of settled foreigners in India","c60f41ec":"#before we visualize, we can convert all the countries with values <= 5 to Others since they are significantly low compared to\n#the others","f9346340":"df['Country'] = df['Country'].replace([\"Australia\",                        \n\"Canada\",                           \n\"Pakistan\",                        \n\"Switzerland\",                      \n\"Nigeria\",                     \n\"Germany\",                          \n\"Italy\",                           \n\"Malaysia\",                         \n\"Japan\",                           \n\"France\",                          \n\"Kuwait\",                      \n\"South Africa\",                     \n\"Bangladesh\",              \n\"Kingdom Of The Netherlands\",       \n\"Brazil\",                           \n\"Portugal\",                         \n\"Albania\",                          \n\"New Zealand\",                      \n\"Sweden\",                           \n\"Czech Republic\",                   \n\"Dominican Republic\",               \n\"Nepal\"],'Other')","db347d31":"df.Country.value_counts()","d04f482c":"px.bar(df.Country.value_counts(),\n      x='Country',\n      text = 'Country',\n      title = 'Having a look at the nationalities')","525ec475":"df['Birth Place'].value_counts()[:5]  #most of them seem to be from North India","5d3c44d6":"px.bar(df['Birth Place'].value_counts()[:5],\n      x='Birth Place',\n      text = 'Birth Place',\n      title = 'Top 10 Cities among these celebrities')","8e728f7f":"df['Death Method'].value_counts()","97b27a4f":"sns.countplot(data = df, x= df['Death Method'])","d5a475e8":"# MOST OF THE OTHER FEATURES HAVE A LOT OF MISSING VALUES .SO IT DIDNT MAKE SENSE TO USE THEM. THANKS FOR STOPPING BY :)","034fec79":"# Self explanatory , most of them are from India by a far distance, the closest to come is British India(makes sense, like theyre Indian :p","082518ed":"# It is clearly obvious about the impact of the film industry on this generation\n# (Film Actor and Directors storm into the top 10 list)"}}