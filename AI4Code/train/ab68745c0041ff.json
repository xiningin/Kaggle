{"cell_type":{"4b94a0a8":"code","f8e5dd6a":"code","a6cff37b":"code","f6132c1b":"code","2f2eb550":"code","154bac65":"code","6bfd7cf8":"code","437b7c37":"code","f14085a9":"code","66f93597":"code","96a01bba":"code","54f317c7":"code","109e6868":"code","a8b490b5":"code","f15b93e7":"code","41427657":"code","c03a43d2":"markdown","b9c6d910":"markdown"},"source":{"4b94a0a8":"import numpy as np\nimport pandas as pd","f8e5dd6a":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom sklearn import tree\nfrom sklearn.datasets import load_wine\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom IPython.display import SVG\nfrom graphviz import Source\nfrom IPython.display import display\nfrom sklearn.metrics import classification_report,confusion_matrix","a6cff37b":"data=pd.read_csv('..\/input\/titanic\/train.csv')\ndata.head()","f6132c1b":"data=data.dropna()","2f2eb550":"col=data.columns\ncol1=col[[2,5]]\n# col2=col[4:12]\n# col1=col1.append(col2)","154bac65":"x=data[col1]\nx.head()","6bfd7cf8":"y=data.Survived","437b7c37":"y.isna()","f14085a9":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=1)\nclf = DecisionTreeClassifier(criterion=\"entropy\", max_depth=None)\nclf = clf.fit(x_train,y_train)\ny_pred = clf.predict(x_test)\ny_score = clf.score(x,y)","66f93597":"print(classification_report(y_test,y_pred))","96a01bba":"confusion_matrix(y_test,y_pred)","54f317c7":"graph = Source(export_graphviz(clf, out_file=None,  \n                filled=True, rounded=True,\n                special_characters=True,feature_names = col1,class_names=['0','1','2']))\n\ndisplay(SVG(graph.pipe(format='svg')))","109e6868":"from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix","a8b490b5":"gnb = GaussianNB()\ny_pred = gnb.fit(x_train, y_train).predict(x_test)","f15b93e7":"print(classification_report(y_test,y_pred))","41427657":"confusion_matrix(y_test,y_pred)","c03a43d2":"# Na\u00efve Bayes Classification","b9c6d910":"# Decision Tree Classification"}}