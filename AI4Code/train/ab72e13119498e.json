{"cell_type":{"d307ce56":"code","ab6bf177":"code","11d91be2":"code","c1e406de":"code","7a05e08c":"code","308b0a26":"code","a335f745":"code","f71ecdca":"code","77dda477":"code","f3300a32":"code","b4dfac6f":"code","41e26c00":"code","d710da61":"code","f5f92699":"code","dc998bce":"code","4acb282d":"code","3a1bfb2f":"code","09d58473":"code","6923601d":"code","91368a7b":"code","772d3666":"code","368bde46":"code","fd2c8dcf":"code","10de8309":"code","a08f8f4f":"code","44246387":"code","5ccfb129":"code","401ba200":"code","496058c5":"code","38cfca3b":"code","0a0dd13a":"code","48f97ce6":"code","636ab472":"code","1253575b":"code","6bbc1712":"code","e9622722":"code","62dbc5ce":"code","e77f6651":"code","717f3b6f":"code","ce1c6de8":"code","85dced89":"code","9857f51d":"code","9db58ab1":"code","659888c5":"code","083709e8":"code","374fa217":"code","4b2179a5":"code","983b49b5":"code","9a85cd0b":"code","a71a34b0":"code","979d887b":"code","fe790374":"code","1cb2605f":"code","09368e7c":"code","9a0d88f5":"code","b7863431":"code","50abd0b5":"code","74df92ad":"code","c9ba626c":"code","1623ee6c":"code","79d1fc5a":"code","4373d371":"code","e3ace003":"code","18ddf8fb":"code","83b96f21":"code","9ce53bce":"code","94b46295":"code","9444359e":"code","0c3e4628":"code","01b4909b":"code","968bcde3":"code","54bc7f80":"code","825ffe1a":"code","9ff9eb79":"code","1433a9d2":"code","4cf695d7":"code","ef9152e1":"code","32ac7d52":"code","0f89bd59":"code","43785589":"code","aee3659c":"code","2f8f28f8":"code","2e9943d6":"code","3331b17e":"code","29fffbf2":"code","f53d1136":"code","52055ec9":"code","eac7d6ce":"code","024b7317":"code","310259ad":"code","a935383d":"code","f466bae8":"code","51f2c075":"code","28a497ce":"code","abdd446a":"code","c6f11a3a":"code","61a155aa":"code","88593942":"code","f47e0610":"code","baddf912":"code","4b6a6b4d":"code","2549748b":"code","3e9ccc79":"code","72a7f4d5":"code","161f61f9":"code","825d22be":"code","ab4f6826":"code","5d3dca17":"code","600894d2":"code","df6a92fa":"code","208b28cc":"code","56f2e232":"code","573f1ece":"code","eb640f0f":"code","168acdcd":"code","33e86f97":"code","44939e9d":"code","604face7":"code","380b252c":"code","4b1db754":"code","e9fd8fbd":"code","b634c67b":"code","340f7c4b":"code","9f279aca":"code","b4108eac":"code","3ad48782":"code","989ad49f":"code","0d2caac1":"code","4b943e38":"code","259232c3":"code","2dd29479":"code","fc51bedc":"code","f9f228d5":"code","fafd6d70":"code","be54a94b":"code","5cef33ef":"code","c1d8b441":"code","3665052f":"code","bf0fd43b":"code","c07d67e5":"code","08e1065b":"code","8f309288":"code","fc221ff3":"code","a5bc0a0d":"code","e38cf29a":"code","ed67d496":"code","c88230bc":"code","1c8e7827":"code","949d369b":"code","e6d89b21":"code","c20c0437":"code","5d43ed22":"code","cd68de66":"code","008cc2ea":"code","b4956686":"code","65d42507":"code","a2e99c85":"code","919b17cc":"code","b91323c8":"code","111c9ff9":"code","ae86cede":"markdown","6513e5a0":"markdown","3e415e34":"markdown","d5f1acd2":"markdown","af550652":"markdown","3c40227d":"markdown","1a42bea4":"markdown","db05f910":"markdown","c627d32e":"markdown","c7d95f1a":"markdown","51a5e518":"markdown","bde32c69":"markdown","280a3e3a":"markdown","d2720b4f":"markdown","f27d378c":"markdown","c4502459":"markdown","843a485f":"markdown","9614de20":"markdown","7c47d9db":"markdown","98da49ec":"markdown","89d12646":"markdown","fe66c350":"markdown","7e598f32":"markdown","ca5fd5e2":"markdown","97859549":"markdown","f33dd2d5":"markdown","18b60d1d":"markdown","a6fa8a7c":"markdown","e2b326e8":"markdown","414c07b4":"markdown","03f8dfa6":"markdown","adb11b39":"markdown","d0ba0060":"markdown","5b4055ef":"markdown","5fd883e0":"markdown","cf69def9":"markdown","61174766":"markdown","5ea00e04":"markdown","8c7a839e":"markdown","3b7bc006":"markdown","d0ebd853":"markdown","f2fd78f9":"markdown","1dbd33d2":"markdown","a4e9282e":"markdown","d433195c":"markdown","bb5032b4":"markdown","46e97753":"markdown","4779accd":"markdown","763e1280":"markdown","c245c4e9":"markdown","a53db81e":"markdown","2ad29aae":"markdown","a8d171b2":"markdown","f4e87bbe":"markdown","9dfa9de7":"markdown","717434bc":"markdown","70b098e5":"markdown","f7575fad":"markdown","9fab3a87":"markdown","0220c15a":"markdown","bcbb96c2":"markdown","df5aea8c":"markdown","c769b45b":"markdown","b491ccac":"markdown","6fd3f0a8":"markdown","60ae5478":"markdown","bd6431ad":"markdown","5fce7084":"markdown","9a139ff4":"markdown","03c506fd":"markdown","b87e3fff":"markdown","6776efb1":"markdown","a936c98d":"markdown","4f2b76c1":"markdown","d884a8d0":"markdown","6a09f035":"markdown","2592c702":"markdown","dc35c601":"markdown","87207bdb":"markdown","c6e2e460":"markdown","beb76183":"markdown","6402c5b4":"markdown","74b1dcdb":"markdown","6497b03c":"markdown","1e996ae9":"markdown","0609ec1c":"markdown","ae9d876f":"markdown","7a623b74":"markdown","cd10f02c":"markdown","7b1a60d7":"markdown","c59f8ecd":"markdown","17d96a21":"markdown","4cd92d66":"markdown","1cdd34fa":"markdown","e536b388":"markdown","c76ddfc6":"markdown","54886638":"markdown","8291cb30":"markdown","51e2cc17":"markdown","b1927d0f":"markdown","dd2ff490":"markdown","f7256838":"markdown","d777d745":"markdown","1d2d0f62":"markdown","08764f5a":"markdown","9083a868":"markdown","f2096db8":"markdown","b3c67b3f":"markdown","0ccafa23":"markdown","d601d03e":"markdown","327488d5":"markdown","f498d548":"markdown","9e6407aa":"markdown","ef2f24d2":"markdown","71c9de20":"markdown","669a5c42":"markdown","ad8b3c5d":"markdown","c4c2875c":"markdown","a42d5f2e":"markdown","759f9709":"markdown","316a52e8":"markdown","954d4e25":"markdown"},"source":{"d307ce56":"# Importing all the necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","ab6bf177":"# Setting the relevant options to view most rows and columns\n\npd.set_option('display.max_columns', 200)\npd.set_option('display.max_rows', 200) \npd.set_option('display.width', 1000)","11d91be2":"# Reading both the files and creating 2 dataframes.\n\nnew_app_df = pd.read_csv('..\/input\/credit-application-dataset\/application_data - Copy.csv')\nprev_app_df = pd.read_csv('..\/input\/risk-analytics\/previous_application.csv')","c1e406de":"new_app_df.head()","7a05e08c":"# Checking the number of rows and columns\n\nnew_app_df.shape","308b0a26":"#Checking datatypes of each column\n\nnew_app_df.info(verbose=True)","a335f745":"# Checking the statistical overview of the numerical columns\n\nnew_app_df.describe()","f71ecdca":"# Checking Null values\n\nnew_app_df.isnull().sum().sort_values(ascending = False)","77dda477":"# Checking percentage of Null values\n\nround(new_app_df.isnull().sum()\/new_app_df.shape[0]*100,2).sort_values(ascending = False)","f3300a32":"prev_app_df.head()","b4dfac6f":"# Checking the number of rows and columns\n\nprev_app_df.shape","41e26c00":"#Checking datatypes of each column\n\nprev_app_df.info()","d710da61":"prev_app_df.describe()","f5f92699":"# DROPPING COLUMNS WITH MORE THAN 45% OF NULL VALUES\n\nnew_app_df = new_app_df.loc[:,new_app_df.isnull().mean()<=0.45]\n\n# verifying by checking the shape if the columns have been dropped\n\nnew_app_df.shape","dc998bce":"NOT_REQ = ['FLAG_DOCUMENT_21' , 'FLAG_DOCUMENT_20' , 'FLAG_DOCUMENT_19' , 'FLAG_DOCUMENT_18' , 'FLAG_DOCUMENT_17' ,\n           'FLAG_DOCUMENT_16' , 'FLAG_DOCUMENT_15' , 'FLAG_DOCUMENT_14' , 'FLAG_DOCUMENT_13' , 'FLAG_DOCUMENT_12' ,\n           'FLAG_DOCUMENT_11' , 'FLAG_DOCUMENT_10' , 'FLAG_DOCUMENT_9' , 'FLAG_DOCUMENT_8' , 'FLAG_DOCUMENT_7' ,  \n           'FLAG_DOCUMENT_6' , 'FLAG_DOCUMENT_5' , 'FLAG_DOCUMENT_4' , 'FLAG_DOCUMENT_3' , 'FLAG_DOCUMENT_2' ,\n           'OBS_30_CNT_SOCIAL_CIRCLE' , 'DEF_30_CNT_SOCIAL_CIRCLE' , 'OBS_60_CNT_SOCIAL_CIRCLE' , 'DEF_60_CNT_SOCIAL_CIRCLE' ,\n           'AMT_REQ_CREDIT_BUREAU_YEAR' , 'AMT_REQ_CREDIT_BUREAU_MON' , 'AMT_REQ_CREDIT_BUREAU_WEEK' , \n           'AMT_REQ_CREDIT_BUREAU_DAY' , 'AMT_REQ_CREDIT_BUREAU_HOUR' , 'AMT_REQ_CREDIT_BUREAU_QRT' ]\n\nnew_app_df.drop( labels = NOT_REQ , axis = 1 , inplace = True)","4acb282d":"# verifying by checking the shape if the columns have been dropped\n\nnew_app_df.shape","3a1bfb2f":"# REMAINING NULL PERCENTAGES\n\n(new_app_df.isnull().sum()\/new_app_df.shape[0]*100).sort_values(ascending = False)","09d58473":"#VALUE COUNTS IN GRAPH \n\nplt.figure(figsize=[20,5])\n\nsns.barplot(x=new_app_df.OCCUPATION_TYPE.value_counts().index, \n            y=new_app_df.OCCUPATION_TYPE.value_counts().values).set_title(\"OCCUPATION TYPE COUNTS\", \n                                                                          fontsize=30, color='Green', pad = 20)\n\nplt.xlabel('OCCUPATION TYPE', fontsize= 20, color='Brown')\nplt.xticks(rotation=45)\n\nplt.show()","6923601d":"# Null values \n\nnew_app_df['OCCUPATION_TYPE'].isnull().sum()","91368a7b":"# Replacing NaN values with 'Unknown'\n\nnew_app_df['OCCUPATION_TYPE'].replace(np.NaN ,'Unknown' , inplace = True)","772d3666":"# OCCUPATION TYPE VALUE COUNTS\n\nnew_app_df.OCCUPATION_TYPE.value_counts()","368bde46":"plt.figure(figsize=[20,15])\n\nsns.set_style('darkgrid')\n\nplt.subplot(2,2,1)\nsns.boxplot(new_app_df['EXT_SOURCE_2']).set_title(\"EXT_SOURCE_2\", fontsize=20, color='Green', pad=20)\n\n\nplt.subplot(2,2,2)\nsns.boxplot(new_app_df['EXT_SOURCE_3']).set_title(\"EXT_SOURCE_3\", fontsize=20, color='Green', pad=20)\n\nplt.subplot(2,2,3)\nsns.distplot(new_app_df['EXT_SOURCE_2'], color='g')\n\nplt.subplot(2,2,4)\nsns.distplot(new_app_df['EXT_SOURCE_3'], color='g')\n\nplt.show()","fd2c8dcf":"# REPLACING MISSING VALUES OF THESE 2 COLUMNS WITH ITS CORRESPONDING MEDIAN\n\nfor column in ['EXT_SOURCE_2', 'EXT_SOURCE_3']:\n    new_app_df[column].fillna(new_app_df[column].median(), inplace=True)","10de8309":"# Checking the correlation between the loan amount demamded vs the good's price. \n\nsns.jointplot(new_app_df['AMT_CREDIT'] , new_app_df['AMT_GOODS_PRICE'] , kind='reg',\n              joint_kws = {'scatter_kws':dict(alpha=0.5)} , height=10)\n\nplt.title(\"Correlation between the Loan amount and the price of goods for which loan was given\\n\\n\\n\\n\\n\", \n          fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Green'})\nplt.xlabel(\"Loan Amount\", fontdict={'fontsize': 20, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"Price of Goods\", fontdict={'fontsize': 20, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","a08f8f4f":"# Imputing the above mentioned logic\n\nnew_app_df['AMT_GOODS_PRICE'] = np.where(new_app_df['AMT_GOODS_PRICE'].isnull() == True, \n                                         new_app_df['AMT_CREDIT'], new_app_df['AMT_GOODS_PRICE'])","44246387":"#Null values\n\nnew_app_df['AMT_GOODS_PRICE'].isnull().sum()","5ccfb129":"# Percentage of each category\n\ngo.Figure(data=[go.Pie(labels=new_app_df.NAME_TYPE_SUITE.value_counts().index,\n                       values=new_app_df.NAME_TYPE_SUITE.value_counts().values, hole=.6, title = 'NAME_TYPE_SUITE VALUE COUNTS',\n                       pull=[0,0.1,0.1,0.1,0.1,0.1,0.1])] )","401ba200":"new_app_df['NAME_TYPE_SUITE'].fillna(new_app_df['NAME_TYPE_SUITE'].mode()[0], inplace = True)","496058c5":"# REMAINING COLUMNS with negligible null values (LESS THAN 1%).\n\nNULL_COL = ['CNT_FAM_MEMBERS' , 'AMT_ANNUITY' , 'DAYS_LAST_PHONE_CHANGE']\n\nfor column in NULL_COL:\n    new_app_df[column].fillna(new_app_df[column].median(), inplace=True)","38cfca3b":"# REMAINING NULL PERCENTAGES\n\nround(new_app_df.isnull().sum()\/new_app_df.shape[0]*100,2)","0a0dd13a":"new_app_df.info()","48f97ce6":"dayandcount = ['CNT_FAM_MEMBERS' , 'DAYS_REGISTRATION' , 'DAYS_LAST_PHONE_CHANGE' ]\n\nnew_app_df.loc[:,dayandcount]=new_app_df.loc[:,dayandcount].apply(lambda x: x.astype('int64',errors='ignore'))","636ab472":"#LISTING OBJECT TYPE COLUMNS AND CONFIRMING THE VALUES TO BE IN STRING TYPE\n\nobj_col = list(new_app_df.select_dtypes(include='object').columns)\n\nnew_app_df.loc[:,obj_col] = new_app_df.loc[:,obj_col].apply(lambda x: x.astype('str', errors = 'ignore'))\n","1253575b":"# VALUE COUNTS OF GENDER CODE\n\nnew_app_df.CODE_GENDER.value_counts()","6bbc1712":"# Checking the gender column\n\nplt.figure(figsize=[10,5])\n\nsns.barplot(x=new_app_df.CODE_GENDER, y=new_app_df.TARGET).set_title(\"Gender vs Target\", fontsize=20, color='Green', pad=20)\n\nplt.show()","e9622722":"# REPLACING XNA VALUES WITH 'F'\n\nnew_app_df.CODE_GENDER = new_app_df.CODE_GENDER.str.replace('XNA','F')","62dbc5ce":"# Generating the barplot again\n\n'''\ngo.Figure(data=[go.Pie(labels=new_app_df.CODE_GENDER.value_counts().index,\n                       values=new_app_df.CODE_GENDER.value_counts().values, hole=.6, title = 'GENDER_CODE VALUE COUNTS')])\n'''\nplt.figure(figsize=[10,5])\n\nsns.barplot(x=new_app_df.CODE_GENDER, y=new_app_df.TARGET).set_title(\"Gender vs Target\", fontsize=20, color='Green', pad=20)\n\nplt.show()","e77f6651":"round(new_app_df.ORGANIZATION_TYPE.value_counts()\/new_app_df.shape[0]*100,2)","717f3b6f":"new_app_df.ORGANIZATION_TYPE = new_app_df.ORGANIZATION_TYPE.str.replace('XNA','Unknown')","ce1c6de8":"# Therefore, we elimiate the sub-category with the overall category\n\nnew_app_df.ORGANIZATION_TYPE = new_app_df.ORGANIZATION_TYPE.apply(lambda x: 'Industry' if 'Industry' in x else x)\nnew_app_df.ORGANIZATION_TYPE = new_app_df.ORGANIZATION_TYPE.apply(lambda x: 'Trade' if 'Trade' in x else x)\nnew_app_df.ORGANIZATION_TYPE = new_app_df.ORGANIZATION_TYPE.apply(lambda x: 'Transport' if 'Transport' in x else x)\nnew_app_df.ORGANIZATION_TYPE = new_app_df.ORGANIZATION_TYPE.apply(lambda x: 'Business' if 'Business' in x else x)","85dced89":"plt.figure(figsize=[20,5])\n\nsns.barplot(x=new_app_df.ORGANIZATION_TYPE.value_counts().index, \n            y=new_app_df.ORGANIZATION_TYPE.value_counts().values).set_title(\"Distribution within ORGANIZATION_TYPE\", \n                                                                            fontsize=20, color='Green', pad=20)\n\n# plt.xlabel('ORGANIZATION_TYPE', fontsize = 20, color = 'Brown')\nplt.xticks(rotation = 90)\n\nplt.show()","9857f51d":"new_app_df.NAME_CONTRACT_TYPE.value_counts()","9db58ab1":"new_app_df.FLAG_OWN_CAR.value_counts()","659888c5":"new_app_df.FLAG_OWN_REALTY.value_counts()","083709e8":"new_app_df.NAME_TYPE_SUITE.value_counts()","374fa217":"new_app_df.NAME_EDUCATION_TYPE.value_counts()","4b2179a5":"new_app_df.NAME_INCOME_TYPE.value_counts()","983b49b5":"new_app_df.NAME_FAMILY_STATUS.value_counts()\n","9a85cd0b":"new_app_df.NAME_HOUSING_TYPE.value_counts()\n","a71a34b0":"new_app_df.WEEKDAY_APPR_PROCESS_START.value_counts()","979d887b":"#CHECKING `DAYS_BIRTH` COLUMN\n\nnew_app_df.DAYS_BIRTH.unique()","fe790374":"#CHECKING `DAYS_EMPLOYED` COLUMN\n\nnew_app_df.DAYS_EMPLOYED.unique()","1cb2605f":"#CHECKING `DAYS_REGISTRATION` COLUMN\n\nnew_app_df.DAYS_REGISTRATION.unique()","09368e7c":"#CHECKING `DAYS_ID_PUBLISH` COLUMN\n\nnew_app_df.DAYS_ID_PUBLISH.unique()","9a0d88f5":"#CHECKING `DAYS_LAST_PHONE_CHANGE` COLUMN\n\nnew_app_df.DAYS_LAST_PHONE_CHANGE.unique()","b7863431":"# In the DAYS_EMPLOYED column, we can see that there is a value '365243' which corresponds to retired people or people who are not working.\n\nnew_app_df.DAYS_EMPLOYED.value_counts()","50abd0b5":"#changing values to positive integer\n\nnum_days = ['DAYS_BIRTH' , 'DAYS_EMPLOYED', 'DAYS_REGISTRATION' , 'DAYS_ID_PUBLISH' , 'DAYS_LAST_PHONE_CHANGE']\n\nfor i in num_days:\n    new_app_df[i] = abs(new_app_df[i])\n    ","74df92ad":"new_app_df.AMT_INCOME_TOTAL.quantile([0,0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.99,0.999,1])","c9ba626c":"new_app_df['INCOME_SLAB']=pd.qcut(new_app_df['AMT_INCOME_TOTAL'] , q=[0,0.2,0.5,0.75,0.95,1],\n                                  labels=['VeryLow','Low','Medium','High','VeryHigh'])","1623ee6c":"new_app_df['INCOME_SLAB'].value_counts()","79d1fc5a":"new_app_df['AMT_CREDIT_slab'] = pd.qcut(new_app_df['AMT_CREDIT'] , q = [0,0.2,0.5,0.75,0.95,1],\n                                   labels = ['VeryLow','Low','Medium','High','VeryHigh'])","4373d371":"new_app_df['AMT_CREDIT_slab'].value_counts()","e3ace003":"#CONVERTING DAYS TO YEARS\n\nnew_app_df['AGE']=(new_app_df['DAYS_BIRTH']\/\/365).astype('int64',errors='ignore')","18ddf8fb":"#MAX & MIN VALUES\n\nprint(new_app_df['AGE'].max())\nprint(new_app_df['AGE'].min())","83b96f21":"#CREATING 10 BINS \n\nnew_app_df['AGE_BINS'] = pd.cut(new_app_df['AGE'],bins=np.arange(20,71,5))","9ce53bce":"new_app_df['AGE_BINS'].value_counts()","94b46295":"new_app_df.AMT_INCOME_TOTAL.quantile([0.9991,0.9992,0.9993])","9444359e":"# Handling outliers for the AMT_INCOME_TOTAL by capping the income to 10lakh:\n\nnew_app_df['AMT_INCOME_TOTAL'] = np.where(new_app_df['AMT_INCOME_TOTAL'] > 1000000 , 1000000 , new_app_df['AMT_INCOME_TOTAL'])\n\n# new_app_df = new_app_df[new_app_df.AMT_INCOME_TOTAL < temp] ","0c3e4628":"new_app_df['AMT_INCOME_TOTAL'].value_counts()","01b4909b":"plt.figure(figsize=[20,5])\n\nplt.subplot(1,2,1)\nsns.boxplot(new_app_df['AMT_INCOME_TOTAL']).set_title(\"AMT_INCOME_TOTAL - BOX PLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(new_app_df['AMT_INCOME_TOTAL'], color='green').set_title(\"AMT_INCOME_TOTAL - DISTRIBUTION\",\n                                                                      fontsize=20, color='indigo', pad=20)\n\nplt.show()","968bcde3":"plt.figure(figsize=[20,5])\n\nplt.subplot(1,2,1)\nsns.boxplot(new_app_df['AMT_ANNUITY']).set_title(\"AMT_ANNUITY - BOXPLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(new_app_df['AMT_ANNUITY'], color='g').set_title(\"AMT_ANNUITY - DISTRIBUTION\", fontsize=20, color='indigo', pad=20)\n\nplt.show()","54bc7f80":"plt.figure(figsize=[20,5])\n\nplt.subplot(1,2,1)\nsns.boxplot(new_app_df['AGE']).set_title(\"AGE - BOXPLOT\", fontsize=20, color='indigo')\n\nplt.subplot(1,2,2)\nsns.distplot(new_app_df['AGE'], color='g').set_title(\"AGE - DISTRIBUTION\", fontsize=20, color='indigo')\n\nplt.show()","825ffe1a":"plt.figure(figsize=[20,5])\n\nplt.subplot(1,2,1)\nsns.boxplot(new_app_df['DAYS_EMPLOYED']).set_title(\"DAYS_EMPLOYED - BOXPLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(new_app_df['DAYS_EMPLOYED'], color='g').set_title(\"DAYS_EMPLOYED - DISTRIBUTION\", fontsize=20, color='indigo', pad=20)\n\nplt.show()","9ff9eb79":"plt.figure(figsize=[20,5])\n\nplt.subplot(1,2,1)\nsns.boxplot(new_app_df['DAYS_REGISTRATION']).set_title(\"DAYS_REGISTRATION - BOXPLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(new_app_df['DAYS_REGISTRATION'], color='g').set_title(\"DAYS_REGISTRATION - DISTRIBUTION\", \n                                                                   fontsize=20, color='indigo', pad=20)\n\nplt.show()","1433a9d2":"# CREATING A COLUMN WITH VALUES CREDIT TO INCOME RATIO\n    \nnew_app_df['CREDIT_RATIO'] = (new_app_df.AMT_CREDIT \/\/ new_app_df.AMT_INCOME_TOTAL).astype('int64')","4cf695d7":"go.Figure(data=[go.Pie(labels=new_app_df.TARGET.value_counts(normalize=True).index,\n                       values=new_app_df.TARGET.value_counts(normalize=True).values, hole=.6,\n                       title = 'Defaulter VS Non-Defaulters')])","ef9152e1":"go.Figure(data=[go.Pie(labels=new_app_df.CODE_GENDER.value_counts(normalize=True).index,\n                       values=new_app_df.CODE_GENDER.value_counts(normalize=True).values, hole=.5,\n                       title = 'Male Vs Female')])","32ac7d52":"new_app_df.info()","0f89bd59":"plt.figure(figsize=[12,12])\n\nf=sns.heatmap(new_app_df[['AMT_CREDIT','AMT_GOODS_PRICE','AMT_ANNUITY','AMT_INCOME_TOTAL' , 'AGE' , 'DAYS_BIRTH' , \n                          'DAYS_EMPLOYED' , 'REGION_RATING_CLIENT' , 'REGION_RATING_CLIENT_W_CITY']].corr(),\n              cmap = \"PRGn\" , annot=True).set_title('Correlation between variables', fontsize = 25, color='Teal')\n\nplt.show()","43785589":"plt.figure(figsize=[12,12])\n\nf=sns.heatmap(new_app_df[['AGE' , 'FLAG_EMP_PHONE' , 'FLAG_WORK_PHONE' , 'DAYS_REGISTRATION' , 'DAYS_ID_PUBLISH' ,\n                          'REGION_RATING_CLIENT' , 'REGION_RATING_CLIENT_W_CITY' , 'REG_CITY_NOT_LIVE_CITY' ,\n                          'REG_CITY_NOT_WORK_CITY' , 'LIVE_CITY_NOT_WORK_CITY' ]].corr(),\n              cmap = \"PiYG\" , annot=True).set_title('Correlation between variables', fontsize = 25, color='NAvy')\n\nplt.show()","aee3659c":"# AMT_CREDIT Vs AMT_GOODS_PRICE Vs AMT_ANNUITY Vs AGE\n\nf = sns.pairplot(new_app_df[['AMT_CREDIT','AMT_GOODS_PRICE','AMT_ANNUITY','AMT_INCOME_TOTAL']] , height = 3)\nf.fig.suptitle('AMT_CREDIT Vs AMT_GOODS_PRICE Vs AMT_ANNUITY Vs AMT_INCOME_TOTAL \\n\\n\\n\\n\\n', fontsize = 25, color='Green')\n\nplt.show()","2f8f28f8":"# checking the head of the dataset before splitting...\n\nnew_app_df.head()","2e9943d6":"# Creating two datasets for target=1 and target=0 (1=bad,0=good)\n\ntarget1 = new_app_df[new_app_df['TARGET'] == 1]\ntarget0 = new_app_df[new_app_df['TARGET'] == 0]\n\nprint(target1.shape, target0.shape, new_app_df.shape)","3331b17e":"# Finding the percentage of imbalance...\n\nprint(\"The dataset with Target value 1 has :\" + \"{:.2%}\".format(target1.shape[0]\/new_app_df.shape[0]) + \" data.\")\nprint(\"The dataset with Target value 0 has :\" + \"{:.2%}\".format(target0.shape[0]\/new_app_df.shape[0]) + \" data.\") ","29fffbf2":"# Checking the gender column:\n\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\nsns.barplot(x = target1.CODE_GENDER.value_counts(normalize=True).index, \n            y = target1.CODE_GENDER.value_counts(normalize=True).values ,\n            palette=\"rocket\").set_title(\"Gender(Defaulter) %\" , fontsize=30, color='Green')\n\nplt.subplot(1,2,2)\nsns.barplot(x = target0.CODE_GENDER.value_counts(normalize=True).index, \n            y = target0.CODE_GENDER.value_counts(normalize=True).values,\n            palette=\"rocket\").set_title(\"Gender(Non-Defaulter) %\" , fontsize=30, color='Green')\n\nplt.show()","f53d1136":"# Checking NAME_CONTRACT_TYPE:\n\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\ntarget1.NAME_CONTRACT_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_CONTRACT_TYPE(Defaulter) %\",\n                                                                                               fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_CONTRACT_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_CONTRACT_TYPE(Non-Defaulter) %\",\n                                                                                           fontsize=20, color='indigo', pad=20)\n\nplt.show()","52055ec9":"# Owning car vs Defaulting:\n\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\ntarget1.FLAG_OWN_CAR.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"FLAG_OWN_CAR(Defaulter) %\", \n                                                                                         fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.FLAG_OWN_CAR.value_counts(normalize=True).plot.barh(color='green').set_title(\"FLAG_OWN_CAR(Non-Defaulter) %\", \n                                                                                     fontsize=20, color='indigo', pad=20)\n\nplt.show()","eac7d6ce":"# Owning a House\/Estate etc vs Defaulting\n\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\ntarget1.FLAG_OWN_REALTY.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"FLAG_OWN_REALTY(Defaulter) %\", \n                                                                                            fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.FLAG_OWN_REALTY.value_counts(normalize=True).plot.barh(color='green').set_title(\"FLAG_OWN_REALTY(Non-Defaulter) %\", \n                                                                                        fontsize=20, color='indigo', pad=20)\n\nplt.show()","024b7317":"# NAME_TYPE_SUITE vs Defaulting\n\nplt.figure(figsize=[15,5])\n\nplt.subplot(1,2,1)\ntarget1.NAME_TYPE_SUITE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_TYPE_SUITE(Defaulter) %\", \n                                                                                            fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_TYPE_SUITE.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_TYPE_SUITE(Non-Defaulter) %\", \n                                                                                        fontsize=20, color='indigo', pad=20)\n\nplt.show()","310259ad":"# Income type vs Defaulting\n\nplt.figure(figsize=[22,10])\n\nplt.subplot(1,2,1)\ntarget1.NAME_INCOME_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_INCOME_TYPE(Defaulter) %\", \n                                                                                             fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_INCOME_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_INCOME_TYPE(Non-Defaulter) %\", \n                                                                                         fontsize=20, color='indigo', pad=20)\n\nplt.show()","a935383d":"# Education vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.NAME_EDUCATION_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_EDUCATION_TYPE(Defaulter) %\", \n                                                                                                fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_EDUCATION_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_EDUCATION_TYPE(Non-Defaulter) %\", \n                                                                                            fontsize=20, color='indigo', pad=20)\n\nplt.show()","f466bae8":"# Housing vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.NAME_HOUSING_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_HOUSING_TYPE(Defaulter) %\",\n                                                                                              fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_HOUSING_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_HOUSING_TYPE(Non-Defaulter) %\",\n                                                                                          fontsize=20, color='indigo', pad=20)\n\nplt.show()\n","51f2c075":"# Marital Status vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.NAME_FAMILY_STATUS.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_FAMILY_STATUS(Defaulter) %\",\n                                                                                               fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.NAME_FAMILY_STATUS.value_counts(normalize=True).plot.barh(color='green').set_title(\"NAME_FAMILY_STATUS(Non-Defaulter) %\",\n                                                                                           fontsize=20, color='indigo', pad=20)\n\nplt.show()","28a497ce":"# Occupations vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.OCCUPATION_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"OCCUPATION_TYPE(Defaulter) %\", \n                                                                                            fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.OCCUPATION_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"OCCUPATION_TYPE(Non-Defaulter) %\", \n                                                                                        fontsize=20, color='indigo', pad=20)\n\nplt.show()","abdd446a":"# Day of the Week vs Defaulting:\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.WEEKDAY_APPR_PROCESS_START.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"WEEKDAY_APPR_PROCESS_START(Defaulter) %\", \n                                                                                                       fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.WEEKDAY_APPR_PROCESS_START.value_counts(normalize=True).plot.barh(color='green').set_title(\"WEEKDAY_APPR_PROCESS_START(Non-Defaulter) %\", \n                                                                                                   fontsize=20, color='indigo', pad=20)\n\nplt.show()","c6f11a3a":"# Organization type vs Defaulting:\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.ORGANIZATION_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"ORGANIZATION_TYPE(Defaulter) %\", \n                                                                                              fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.ORGANIZATION_TYPE.value_counts(normalize=True).plot.barh(color='green').set_title(\"ORGANIZATION_TYPE(Non-Defaulter) %\", \n                                                                                          fontsize=20, color='indigo', pad=20)\n\nplt.show()","61a155aa":"# Income vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.INCOME_SLAB.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"INCOME_SLAB(Defaulter) %\", \n                                                                                        fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.INCOME_SLAB.value_counts(normalize=True).plot.barh(color='green').set_title(\"INCOME_SLAB(Non-Defaulter) %\", \n                                                                                    fontsize=20, color='indigo', pad=20)\n\nplt.show()","88593942":"# Loan amount vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.AMT_CREDIT_slab.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"AMT_CREDIT_slab(Defaulter) %\", \n                                                                                            fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.AMT_CREDIT_slab.value_counts(normalize=True).plot.barh(color='green').set_title(\"AMT_CREDIT_slab(Non-Defaulter) %\", \n                                                                                        fontsize=20, color='indigo', pad=20)\n\nplt.show()","f47e0610":"# Age groups vs Defaulting\n\nplt.figure(figsize=[20,10])\n\nplt.subplot(1,2,1)\ntarget1.AGE_BINS.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"AGE_BINS(Defaulter) %\", \n                                                                                     fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\ntarget0.AGE_BINS.value_counts(normalize=True).plot.barh(color='green').set_title(\"AGE_BINS(Non-Defaulter) %\", \n                                                                                 fontsize=20, color='indigo', pad=20)\n\nplt.show()","baddf912":"target0.info()","4b6a6b4d":"target0.head()","2549748b":"# Total income vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('AMT_INCOME_TOTAL for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['AMT_INCOME_TOTAL']).set_title(\"INCOME_TOTAL - BOXPLOT(Non-Defaulter)\", \n                                                   fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['AMT_INCOME_TOTAL'], color='g').set_title(\"AMT_INCOME_TOTAL - DISTRIBUTION(Non-Defaulter)\", \n                                                               fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['AMT_INCOME_TOTAL']).set_title(\"AMT_INCOME_TOTAL - BOXPLOT(Defaulter)\", \n                                                   fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['AMT_INCOME_TOTAL'], color='g').set_title(\"AMT_INCOME_TOTAL - DISTRIBUTION(Defaulter)\", \n                                                               fontsize=20, color='indigo', pad=20)\n\nplt.show()","3e9ccc79":"# Total income vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('AMT_CREDIT for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['AMT_CREDIT']).set_title(\"AMT_CREDIT - BOXPLOT(Non-Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['AMT_CREDIT'], color='g').set_title(\"AMT_CREDIT - DISTRIBUTION(Non-Defaulter)\", fontsize=20, \n                                                         color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['AMT_CREDIT']).set_title(\"AMT_CREDIT - BOXPLOT(Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['AMT_CREDIT'], color='g').set_title(\"AMT_CREDIT - DISTRIBUTION(Defaulter)\", fontsize=20, \n                                                         color='indigo', pad=20)\n\nplt.show()","72a7f4d5":"# AMT_ANNUITY vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('AMT_ANNUITY for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['AMT_ANNUITY']).set_title(\"AMT_ANNUITY - BOXPLOT(Non-Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['AMT_ANNUITY'], color='g').set_title(\"AMT_ANNUITY - DISTRIBUTION(Non-Defaulter)\", fontsize=20, \n                                                          color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['AMT_ANNUITY']).set_title(\"AMT_ANNUITY - BOXPLOT(Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['AMT_ANNUITY'], color='g').set_title(\"AMT_ANNUITY - DISTRIBUTION(Defaulter)\", fontsize=20, \n                                                          color='indigo', pad=20)\n\nplt.show()","161f61f9":"# AGE vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('AGE for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['AGE']).set_title(\"AGE - BOXPLOT(Non-Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['AGE'], color='g').set_title(\"AGE - DISTRIBUTION(Non-Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['AGE']).set_title(\"AGE - BOXPLOT(Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['AGE'], color='g').set_title(\"AGE - DISTRIBUTION(Defaulter)\", fontsize=20, color='indigo', pad=20)\n\nplt.show()","825d22be":"# REGION_POPULATION_RELATIVE vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('REGION_POPULATION_RELATIVE for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['REGION_POPULATION_RELATIVE']).set_title(\"REGION_POPULATION_RELATIVE - BOXPLOT(Non-Defaulter)\", \n                                                             fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['REGION_POPULATION_RELATIVE'], color='g').set_title(\"REGION_POPULATION_RELATIVE - DISTRIBUTION(Non-Defaulter)\", \n                                                                         fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['REGION_POPULATION_RELATIVE']).set_title(\"REGION_POPULATION_RELATIVE - BOXPLOT(Defaulter)\", \n                                                             fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['REGION_POPULATION_RELATIVE'], color='g').set_title(\"REGION_POPULATION_RELATIVE - DISTRIBUTION(Defaulter)\",\n                                                                         fontsize=20, color='indigo', pad=20)\n\nplt.show()","ab4f6826":"# DAYS_REGISTRATION vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('DAYS_REGISTRATION for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['DAYS_REGISTRATION']).set_title(\"DAYS_REGISTRATION - BOXPLOT(Non-Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['DAYS_REGISTRATION'], color='g').set_title(\"DAYS_REGISTRATION - DISTRIBUTION(Non-Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['DAYS_REGISTRATION']).set_title(\"DAYS_REGISTRATION - BOXPLOT(Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['DAYS_REGISTRATION'], color='g').set_title(\"DAYS_REGISTRATION - DISTRIBUTION(Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.show()","5d3dca17":"# EXT_SOURCE_2 vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('EXT_SOURCE_2 for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['EXT_SOURCE_2']).set_title(\"EXT_SOURCE_2 - BOXPLOT(Non-Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['EXT_SOURCE_2'], color='g').set_title(\"EXT_SOURCE_2 - DISTRIBUTION(Non-Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['EXT_SOURCE_2']).set_title(\"EXT_SOURCE_2 - BOXPLOT(Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['EXT_SOURCE_2'], color='g').set_title(\"EXT_SOURCE_2 - DISTRIBUTION(Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.show()","600894d2":"# DAYS_LAST_PHONE_CHANGE vs Defaulting\n\nplt.figure(figsize=[20,15])\n\nplt.suptitle('DAYS_LAST_PHONE_CHANGE for Defaulters and Non-Defaulters ',fontsize = 35, color='Teal')\n\nplt.subplot(2,2,1)\nsns.boxplot(target0['DAYS_LAST_PHONE_CHANGE']).set_title(\"DAYS_LAST_PHONE_CHANGE - BOXPLOT(Non-Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,2)\nsns.distplot(target0['DAYS_LAST_PHONE_CHANGE'], color='g').set_title(\"DAYS_LAST_PHONE_CHANGE - DISTRIBUTION(Non-Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,3)\nsns.boxplot(target1['DAYS_LAST_PHONE_CHANGE']).set_title(\"DAYS_LAST_PHONE_CHANGE - BOXPLOT(Defaulter)\", \n                                                    fontsize=20, color='indigo', pad=20)\n\nplt.subplot(2,2,4)\nsns.distplot(target1['DAYS_LAST_PHONE_CHANGE'], color='g').set_title(\"DAYS_LAST_PHONE_CHANGE - DISTRIBUTION(Defaulter)\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.show()","df6a92fa":"# CNT_FAM_MEMBERS vs Defaulting\n\nplt.figure(figsize=[20,8])\n\nplt.suptitle('CNT_FAM_MEMBERS for Defaulters and Non-Defaulters \\n ',fontsize = 30, color='Teal')\n\nplt.subplot(1,2,1)\nsns.barplot(x = target0.CNT_FAM_MEMBERS.value_counts(normalize=True).index,\n            y = target0.CNT_FAM_MEMBERS.value_counts(normalize=True).values ,\n            palette=\"magma\").set_title(\"CNT_FAM_MEMBERS(Non-Defaulter) \" , fontsize=20, color='Green')\n\nplt.subplot(1,2,2)\nsns.barplot(x = target1.CNT_FAM_MEMBERS.value_counts(normalize=True).index, \n            y = target1.CNT_FAM_MEMBERS.value_counts(normalize=True).values ,\n            palette=\"rocket\").set_title(\"CNT_FAM_MEMBERS(Defaulter) \" , fontsize=20, color='Green')\n\nplt.show()","208b28cc":"prev_app_df.head()","56f2e232":"#Checking Shapes\n\nprev_app_df.shape","573f1ece":"#Null counts\n\nprev_app_df.isnull().sum()","eb640f0f":"# columns required:\n\ncols_n = ['SK_ID_CURR', 'AMT_APPLICATION', 'NAME_CASH_LOAN_PURPOSE', 'NAME_CONTRACT_STATUS', 'DAYS_DECISION', 'NAME_PAYMENT_TYPE',\n         'CODE_REJECT_REASON','NAME_CLIENT_TYPE', 'NAME_GOODS_CATEGORY','NAME_PORTFOLIO','NAME_PRODUCT_TYPE','CHANNEL_TYPE',\n         'NAME_YIELD_GROUP']\n\nprev_app_df = prev_app_df.loc[:,cols_n]","168acdcd":"# checking if the change took place\n\nprev_app_df.shape","33e86f97":"# checking for any missing values\n\nprev_app_df.isnull().sum()","44939e9d":"prev_app_df.info()","604face7":"#Checking unique values\n\nprev_app_df.DAYS_DECISION.unique()","380b252c":"#Changing values to positive integer\n\nprev_app_df['DAYS_DECISION'] = abs(prev_app_df['DAYS_DECISION'])","4b1db754":"prev_app_df.NAME_PAYMENT_TYPE.value_counts()","e9fd8fbd":"prev_app_df.NAME_CLIENT_TYPE.value_counts()","b634c67b":"prev_app_df.NAME_PORTFOLIO.value_counts()","340f7c4b":"# Changing XNA to Unknown\n\nXNA_col = ['NAME_PAYMENT_TYPE' , 'NAME_CLIENT_TYPE', 'NAME_PORTFOLIO' ]\n\nfor i in XNA_col:\n    prev_app_df[i] = prev_app_df[i].str.replace('XNA','Unknown')\n\n","9f279aca":"#plotting graph for AMT_APPLICATION\n\nplt.figure(figsize=[20,6])\n\nplt.subplot(1,2,1)\nsns.boxplot(prev_app_df['AMT_APPLICATION']).set_title(\"AMT_APPLICATION - BOXPLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(prev_app_df['AMT_APPLICATION'], color='g').set_title(\"AMT_APPLICATION - DISTRIBUTION\", \n                                                                  fontsize=20, color='indigo', pad=20)\n\nplt.show()","b4108eac":"#plotting graph for DAYS_DECISION\n\nplt.figure(figsize=[20,6])\n\nplt.subplot(1,2,1)\nsns.boxplot(prev_app_df['DAYS_DECISION']).set_title(\"DAYS_DECISION - BOXPLOT\", fontsize=20, color='indigo', pad=20)\n\nplt.subplot(1,2,2)\nsns.distplot(prev_app_df['DAYS_DECISION'], color='g').set_title(\"DAYS_DECISION - DISTRIBUTION\", \n                                                                fontsize=20, color='indigo', pad=20)\n\nplt.show()","3ad48782":"# Reason for loan\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_CASH_LOAN_PURPOSE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"NAME_CASH_LOAN_PURPOSE\",\n                                                                                                       fontsize=20, color='indigo', pad=20)\n\nplt.show()","989ad49f":"# since most of the values are missing, this column is not useful for our analysis.\n\nprev_app_df.drop(columns=['NAME_CASH_LOAN_PURPOSE'], inplace=True)","0d2caac1":"prev_app_df.shape","4b943e38":"# Payment method for loan\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_PAYMENT_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Payment method for loan\", \n                                                                                                  fontsize=20, color='indigo', pad=20)\n\nplt.show()","259232c3":"# Previous Status of loan\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_CONTRACT_STATUS.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Loan Status\", \n                                                                                                     fontsize=20, color='indigo', pad=20)\n\nplt.show()","2dd29479":"# Reason loan was rejected\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.CODE_REJECT_REASON.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Reason loan was rejected\", \n                                                                                                   fontsize=20, color='indigo', pad=20)\n\nplt.show()","fc51bedc":"# since most of the values are missing, this column is not useful for our analysis.\n\nprev_app_df.drop(columns=['CODE_REJECT_REASON'], inplace=True)\nprev_app_df.shape","f9f228d5":"# Was the client old or new client when applying for the previous application\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_CLIENT_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Was the client old or new\", \n                                                                                                 fontsize=20, color='indigo', pad=20)\n\nplt.show()","fafd6d70":"# Kind of goods the client applied for in the previous application\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_GOODS_CATEGORY.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Kind of goods the client applied for in the previous application\", \n                                                                                                    fontsize=20, color='indigo', pad=20)\n\nplt.show()","be54a94b":"# since most of the values are missing, this column is not useful for our analysis.\n\nprev_app_df.drop(columns=['NAME_GOODS_CATEGORY'], inplace=True)\nprev_app_df.shape","5cef33ef":"# Was the previous application for CASH, POS, CAR, \u2026\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_PORTFOLIO.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Was the previous application for CASH, POS, CAR, \u2026\", \n                                                                                               fontsize=20, color='indigo', pad=20)\n\nplt.show()","c1d8b441":"# Was the previous application x-sell o walk-in\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_PRODUCT_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Was the previous application x-sell o walk-in\", \n                                                                                                  fontsize=20, color='indigo', pad=20)\n\nplt.show()","3665052f":"# Since it doesn't make sense to have this column in the dataset, we will remove this...\n\nprev_app_df.drop(columns=['NAME_PRODUCT_TYPE'], inplace=True)\nprev_app_df.shape","bf0fd43b":"# Through which channel we acquired the client on the previous application\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.CHANNEL_TYPE.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Through which channel the client was acquired on the previous application\", \n                                                                                             fontsize=20, color='indigo', pad=20)\n\nplt.show()","c07d67e5":"# Grouped interest rate into small medium and high of the previous application\n\nplt.figure(figsize=[20,10])\n\nprev_app_df.NAME_YIELD_GROUP.value_counts(normalize=True).plot.barh(color='firebrick').set_title(\"Interest group\", \n                                                                                                 fontsize=20, color='indigo', pad=20)\n\nplt.show()","08e1065b":"# Since this column will not add value to our analysis, we are dropping it...\n\nprev_app_df.drop(columns=['NAME_YIELD_GROUP'], inplace=True)\nprev_app_df.shape","8f309288":"prev_app_df.info()","fc221ff3":"new_df=pd.merge(left=new_app_df , right=prev_app_df , how='inner' , on='SK_ID_CURR' , suffixes='_x')","a5bc0a0d":"new_df.info()","e38cf29a":"#% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CLIENT_TYPE\n\ntable = pd.pivot_table(new_df, values='TARGET', index=['NAME_CLIENT_TYPE'],\n                       columns=['NAME_CONTRACT_STATUS'], aggfunc=np.mean)\n\ncm = sns.light_palette(\"green\", as_cmap=True)\ntable.style.background_gradient(cmap=cm)","ed67d496":"table.T.plot(kind='bar').set_ylabel('% of Loan-Payment Difficulties')\n\nplt.title('% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CLIENT_TYPE', fontdict={'fontsize':18}, pad=20)\n\nplt.show()","c88230bc":"#% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CLIENT_TYPE\n\ntable = pd.pivot_table(new_df, values='TARGET', index=['NAME_CONTRACT_TYPE'],\n                       columns=['NAME_CONTRACT_STATUS'], aggfunc=np.mean)\n\ncm = sns.light_palette(\"green\", as_cmap=True)\ntable.style.background_gradient(cmap=cm)","1c8e7827":"table.T.plot(kind='bar').set_ylabel('% of Loan-Payment Difficulties')\n\nplt.title('% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CONTRACT_TYPE', fontdict={'fontsize':18}, pad=20)\n\nplt.show()","949d369b":"#NAME_HOUSING_TYPE Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'NAME_HOUSING_TYPE', order=new_df['NAME_HOUSING_TYPE'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS').set_title(\"NAME_HOUSING_TYPE Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"NAME_HOUSING_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","e6d89b21":"#CODE_GENDER Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'CODE_GENDER', order=new_df['CODE_GENDER'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='magma').set_title(\"CODE_GENDER Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"CODE_GENDER\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","c20c0437":"#NAME_CLIENT_TYPE Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'NAME_CLIENT_TYPE', order=new_df['NAME_CLIENT_TYPE'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='mako').set_title(\"NAME_CLIENT_TYPE Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"NAME_CLIENT_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","5d43ed22":"#NAME_EDUCATION_TYPE Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'NAME_EDUCATION_TYPE', order=new_df['NAME_EDUCATION_TYPE'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='crest').set_title(\"NAME_EDUCATION_TYPE Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"NAME_EDUCATION_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","cd68de66":"#AMT_CREDIT_slab Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'AMT_CREDIT_slab', order=new_df['AMT_CREDIT_slab'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='icefire').set_title(\"AMT_CREDIT_slab Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"AMT_CREDIT_slab\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","008cc2ea":"#AGE_BINS Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'AGE_BINS', order=new_df['AGE_BINS'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='cubehelix').set_title(\"AGE_BINS Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"AGE_BINS\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","b4956686":"#INCOME_SLAB Vs NAME_CONTRACT_STATUS\n\nplt.figure(figsize=[20,10])\n\nsns.countplot(data = new_df, y= 'INCOME_SLAB', order=new_df['INCOME_SLAB'].value_counts().index,\n              hue = 'NAME_CONTRACT_STATUS',palette='Paired').set_title(\"INCOME_SLAB Vs NAME_CONTRACT_STATUS \" ,\n                                                                      fontsize=30, color='Green', pad=20)\n\n\nplt.ylabel(\"INCOME_SLAB\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","65d42507":"#Contract type Vs AMT_CREDIT\n\nplt.figure(figsize=[20,10])\n\nsns.boxenplot(x = new_df['NAME_CONTRACT_STATUS'] , y = new_df['AMT_CREDIT'] , hue = new_df['TARGET'] , \n           palette = 'viridis').set_title(\"Contract type Vs AMT_CREDIT \" , fontsize=30, color='Green', pad=20)\nplt.xlabel(\"NAME_CONTRACT_STATUS\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"AMT_CREDIT\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","a2e99c85":"#Education Vs AMT_CREDIT\n\nplt.figure(figsize=[20,10])\n\nsns.boxenplot(x = new_df['NAME_EDUCATION_TYPE'] , y = new_df['AMT_CREDIT'] , \n            hue = new_df['TARGET']).set_title(\"NAME_EDUCATION_TYPE Vs AMT_CREDIT \" , fontsize=30, color='Green', pad=20)\nplt.xlabel(\"NAME_EDUCATION_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"AMT_CREDIT\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","919b17cc":"#INCOME_SLAB Vs AMT_CREDIT\n\nplt.figure(figsize=[20,10])\n\nsns.boxenplot(x = new_df['INCOME_SLAB'] , y = new_df['AMT_CREDIT'] , hue = new_df['TARGET'] , \n           palette = 'Set2').set_title(\"INCOME_SLAB Vs AMT_CREDIT \" , fontsize=30, color='Green', pad=20)\nplt.xlabel(\"INCOME_SLAB\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"AMT_CREDIT\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","b91323c8":"#NAME_INCOME_TYPE Vs AMT_CREDIT\n\nplt.figure(figsize=[20,10])\n\nsns.boxenplot(x = new_df['NAME_INCOME_TYPE'] , y = new_df['AMT_CREDIT'] , hue = new_df['TARGET'] , \n           palette = 'flare').set_title(\"NAME_INCOME_TYPE Vs AMT_CREDIT \" , fontsize=30, color='Green', pad=20)\nplt.xlabel(\"NAME_INCOME_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"AMT_CREDIT\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","111c9ff9":"#NAME_CLIENT_TYPE Vs AMT_CREDIT\n\nplt.figure(figsize=[20,10])\n\nsns.boxenplot(x = new_df['NAME_CLIENT_TYPE'] , y = new_df['AMT_CREDIT'] , hue = new_df['TARGET'] , \n           palette = 'light:#5A9').set_title(\"NAME_CLIENT_TYPE Vs AMT_CREDIT \" , fontsize=30, color='Green', pad=20)\nplt.xlabel(\"NAME_CLIENT_TYPE\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\nplt.ylabel(\"AMT_CREDIT\", fontdict={'fontsize': 25, 'fontweight' : 5, 'color' : 'Brown'})\n\nplt.show()","ae86cede":"### % of Loan Payment Difficulties","6513e5a0":"##### **`INFERENCE`** - \n\n- Labourers and Sales Staff constitute the majority whereas IT Staff and HR staff are on the lower side","3e415e34":"##### **`INFERENCE`** - \n\n- It can be inferred that, most of the people earn around 1-2 lakh annually.\n- There are ofcourse people who earn a lot more, but they are present in mere numbers upto 10lakhs.\n- Largly the the bigger part of the population, applying for loan is concentrated near the 20 thousand to 4 lakh bucket.","d5f1acd2":"##### CHECKING `DAYS_REGISTRATION` COLUMN","af550652":"##### CHECKING `DAYS_EMPLOYED` COLUMN","3c40227d":"#### From the above graphs, we can conclude that:\n- There are no outliers\n- There is a small amount of skewness ","1a42bea4":"### Segmented Univariate analysis (Categorical columns)","db05f910":"**`INFERENCE`** - \n\n- We can notice that \"Students\" do not appear on the defaulters as they dont have to pay when they study. So they are a very good client to target.\n- Also businessmen dont default much like students category\n- Also, we see more than 10% increase in the number of \"Working\" category people who default loans.","c627d32e":"##### CHANGING ALL VALUES OF COLUMNS WITH DTYPE OBJECT  TO STRING","c7d95f1a":"**`Inference`** -\n\n- About 62% customers prefer to pay the loan back using cash through the bank.\n","51a5e518":"**`INFERENCE`** - \n\n- We can see that self employed, trade, construction, security, transport people and business people are more likely to have difficulty in paying the loan.","bde32c69":"##### CHECKING `NAME TYPE SUITE` COLUMN","280a3e3a":"### Correlation between variables","d2720b4f":"##### CHANGING `DAYS` COLUMNS AND `COUNT` COLUMNS TO INTEGER\n","f27d378c":"#### Checking and Imputing `AMT_GOODS_PRICE`  column:","c4502459":"### Final Conclusion:","843a485f":"**`Inference`** -\n\n- People with just an academic degree are more likely to default.","9614de20":"**`INFERENCE`** - \n\n- Here we can see that if the amount of credit taken as a loan is high, people are less likely to default. This is due to the fact that only a rich or established client will take a loan of very high amount.\n- On the other hand if the loan amount is low, we can see that people struggle to pay it back.","7c47d9db":"### Splitting the datasets into two, based on whether the person is defaulter or not(based on Target variable).","98da49ec":"**`Inference`** -\n\n- From the above histograms, we can see that people who live in a place which is not so populated, like village or small towns, have difficulty in repaying loan amount.\n- We can also see that people who live in cities which are more populated, do not face much difficulty with loan payments.","89d12646":"### IMPORTING LIBRARIES","fe66c350":"**`INFERENCE`** - \n\n- Here we see that the male % has increased almost by 10% from non-defaulter to defaulter.\n- In-case of female, we can see that there is also a similar 10% decrease from defaulter to non-defaulter.\n- We can imply that, men are more likely to default a loan than women.","7e598f32":"**`Inference`** -\n\n- In the age category of 20 to 35 years of age, we see a lot of rejection of loan. These group of people are also more likely to default as per our previous inferences and conclusions.\n- Age group of people above 40 are less likely to default and also they see less rejection and cancellation of loan amounts.","ca5fd5e2":"- Banks can give away loans to Students, pensioners and people with higher education degrees, as they are very less likely to default loan payments.\n\n- We understood that, Labourers, Sales staff, drivers, cleaning staff, low-skill labours are more likely to default a payment of the loan.\n\n- The best clients to target in this case would be Managers, core staff, high skill tech staff.\n\n- People in the age group of 20 to 30 are more likely to default. People above the age group of 45 do not default on their payments as much.\n\n- It was also observed that, people belonging to low and very low income slabs were showing strong indicating signs of defaulting.\n\n- We also observed that people who live in a place which is not so populated, like village or small towns, have difficulty in repaying loan amount.\n\n- Clients who are more likely to default loans are more likely to change their registration, few days prior to applying for the loan.\n\n##### Keeping these points in mind, if a customer can be evaluated based on the above parameters, the bank would see less default payments.","97859549":"##### As the missing values in `OCCUPATION_TYPE` column is more than 30 %, we are creating a new category 'Unknown' ","f33dd2d5":"# Credit Risk Analysis\n## BY SEYED JAVIDH ","18b60d1d":"##### Number of days should be in positive integer  ","a6fa8a7c":"**`INFERENCE`** \n#### Since there is a very linear and positive correlation between the Loan Amount and the Good's price, we can assume that, in most cases the loan amount demanded by the customer is slightly more than but mostly equal to the price of the article he\/she wishes to purchase.\n\n#### For the AMT_GOODS_PRICE we can impute the same value of AMT_CREDIT for missing values (keeping in mind loan amount is usually same as good's price)\n","e2b326e8":"##### BINNING OF `DAYS_BIRTH` \/ AGE COLUMN","414c07b4":"### Binning (continuous) numerical column values for analysis \n\n##### BINNING OF `AMT_INCOME_TOTAL` COLUMN","03f8dfa6":"**`Inference`** -\n\n- We can see that as the income slab increases, the credit amount of the loan also increases.\n- We can also see that the people in the low and very low income slabs are likely to default more.","adb11b39":"**`INFERENCE`** -\n\n- It can be observed that most of the customers have changed their registration at most 15000 days before application\n- Most of the people are in the range of 2500 to 7500 days.\n- But the maximum number of poeple changed their registration just days before the application.","d0ba0060":"**`Inference`** -\n\n- Since most of the data about the customer are not disclosed, as evident by the XNA value, this column won't help in analysis.\n- So we need to drop this column","5b4055ef":"**`INFERENCE`** - \n\n- From the above graph, we can understand that, Labourers, Sales staff, drivers, cleaning staff, low-skill labours are more likely to default a payment of the loan.\n- The best clients to target in this case would be Managers, core staff, high skill tech staff.","5fd883e0":"**`INFERENCE`** - \n\n- From the above graphs we can make out that people who persue \"Higher Education\" are less likely to default loans.\n- Client who have attained only \"Secondary education\" are more likely to default.","cf69def9":"**`Inference`** -\n\n- From the box plot and the histogram we can see that most of the clients have asked for credit worth 10 lakh and less.\n- Most of the credit being near about 1-3 lakh marker.","61174766":"**`INFERENCE`** - \n\n- Here people belonging to very high, high income slab do not face much difficulty with loan repayment.\n- However, people with low income struggle to make payment and are likely to default.","5ea00e04":"##### **`INFERENCE`** - \n\n- people who is in business field applied more in number for the loan compared to other fields.","8c7a839e":"**`Inference`** -\n\n- Here we do not see much trend in the loan amount and it getting accepted or rejected.","3b7bc006":"#### Keeping only the necessary columns for merge and analysis:","d0ebd853":"### Bivariate and multivatiate analysis","f2fd78f9":"**`Inference`** -\n\n- Here we can see that clients who are more likely to default loans are more likely to change their registration, few days prior to applying for the loan.","1dbd33d2":"**`Inference`** -\n\n- Cash loans are more likely to get cancelled or refused with a bigger margin of that of revolving loans.","a4e9282e":"**`INFERENCE`** - \n  \n- Here, we can see a very strong correlation between the amount of goods price and the loan amount. From this, we can conclude like previously that the loan amount disbursed is mostly equal or slightly higher than the cost of article the client wishes to purchase.\n- There is also a good correlation between the annuity amount and the loan amount as well as the good's price.\n- Here there is a negative correlation between the client's region and the money he earns. This means that if a client is from a place with a higher rating, he or she will more likely earn less money. ","d433195c":"### Merging both new and old dataframes","bb5032b4":"##### CHECKING `NAME HOUSING TYPE` COLUMN","46e97753":"**`INFERENCE`** - \n\n- Here we see a strong negative correlation between employee phone number and age.\n- There is a positive correlation between the number of days before which client changed his registration with respect to age. This goes to show that elderly people are less likely to make changes to their registration prior to applying for loan.\n- Clients that do not provide their phone numbers are also less likely to provide incorrect permanent and work address.\n","4779accd":"### READING DATAFRAMES","763e1280":"**`INFERENCE`** - \n\n- Here we can see that who own car are less likely to default a loan.\n- From this we can also understand that if a person is rich enough to afford a car, he\/she will have the money to pay back.","c245c4e9":"##### CHECKING `NAME FAMILY STATUS` COLUMN","a53db81e":"##### For columns with negligible Null values - Replacing Null values with its corresponding `MEDIAN` :","2ad29aae":"**`INFERENCE`** - \n\n- We can observe that single and civil marraige people are more likely to default.\n- Married people are less likely to default.","a8d171b2":"**`INFERENCE`** - \n\n- From the above pairplots we can find that there are good positive correlations between the Credit Amount, Good's price and Amount annuity.","f4e87bbe":"#### CHECKING AND IMPUTING `NAME_TYPE_SUITE`  COLUMN","9dfa9de7":"**`Inference`** -\n\n- From the above graph we can infer that the age bin from 25 to 40 are more likely to default a loan payment.\n- People above 45 are less likely to default.\n- With increasing age group, people tend to default less","717434bc":"#### The application dataset and the previous_application dataset were analyzed, cleaned and inferences\/correlations were drawn. We have thoroughly observed these datasets and here are our observations and comments about the same:","70b098e5":"**`INFERENCE`** - \n- Most of the applicants are near value zero \n- the value above 350000 is surely an outlier or NA value as the value comes around 1000 years","f7575fad":"**`Inference`** -","9fab3a87":"**`Inference`** -\n\n- People involved in business and unemployed people ask for more loan and repay better.","0220c15a":"**`Inference`** -\n\n- It is observed that Female clients are more successful in terms of having their loans approved.\n- However male clients are not so successful and do see an increase in the number of times their loans get refused.","bcbb96c2":"#### XNA is nearly 18% of the total data. we shall replace it with `Unknown`","df5aea8c":"**`INFERENCE`** - \n\n- Over here, from this graph, we do not see much difference. \n- It can be understood that, person accompanying the client doesn't have an impact on deciding if he\/she will default the loan.","c769b45b":"**`Inference`** -\n\n- Form the above histograms, we can observe that there is a sharp increase in the size of a bin at around 50,000.\n- So we can assume that client who's loan amount is 50,000, are likely to default their loan payment.","b491ccac":"**`Inference`** -\n\n- Repeaters and Refreshed clients show an increase in the number of default.","6fd3f0a8":"**`INFERENCE`** - \n\n- Usually people who are coming for loan are 20 years and above, till the age of 69.\n- Most of the people are in the range of 28 years to 45 years of age.\n- there are no outliers","60ae5478":"##### CHECKING `NAME INCOME TYPE` COLUMN","bd6431ad":"### CHECKING DATATYPES OF EACH COLUMN","5fce7084":"##### BINNING OF `AMT_CREDIT` COLUMN","9a139ff4":"**`Inference`** -\n\n- Clients living in house or appartments are more likely to get their loans approved.","03c506fd":"**`Inference`** -\n\n- From the above histograms and boxplots, we can understand that there are no impacts on loan defaulting due to Annuity amount.\n- From box plot we can say better return of loans for the higher amount annuity.","b87e3fff":"### Univariate analysis on the previous_application columns","6776efb1":"#### Dropping columns which are not required for our analysis:","a936c98d":"**`Inference`** -\n\n- About 62% of the loans were approved by the bank.\n- 19% were cancelled and 17% were refused.","4f2b76c1":"### Checking target imbalance","d884a8d0":"##### Checking `AMT_ANNUITY` column","6a09f035":"**`Inference`** -\n\n- We can see that people who face difficulty in paying a loan back are the ones, whose ext source score are below 2.0.\n- On the other hand, people with score above 2.0 are less likely to default on a loan payment.","2592c702":"**`Inference`** -\n\n- Reason why loan was rejected, column doesn't give us much info, so it can be dropped too.","dc35c601":"As the value of 99.9 percent shows around 10 lakh, we can cap outlier to this value ","87207bdb":"#### CHECKING VALUES OF OTHER NUMERICAL COLUMNS (Days)\n","c6e2e460":"#### Also we notice that there are several sub-categories within Industry, Trade, Business and Transport.","beb76183":"### DATAFRAME INSPECTION\n#### Inspecting new application dataframe:","6402c5b4":"### Working on the Previous_application dataset:","74b1dcdb":"**`INFERENCE`** - \n\n- Here we see only a minor change in the \"With Parents\" category by only a few percentage.\n- We can imply that clients who live with their parents might not be well established and might end up having difficulty in paying a loan back.\n- people who have House\/Appartment tend to apply for more loans.","6497b03c":"#### Inspecting previous application dataframe:","1e996ae9":"### BIVARIATE \/ MULTIVARIATE ANALYSIS","0609ec1c":"**`INFERENCE`** - \n\n- Here we do not see much of a difference between the two graphs, so it is safe to assume that the type of loan does is not enough to understand whether a person will default or not.","ae9d876f":"**`Inference`** -\n\n- New clients are more successful in getting their loan approved.\n- Repeater clients cancel or have their loan amount refused more than the new clients.","7a623b74":"**`Inference`** -\n\n- Here it can be seen that people who might default do change their number just prior to registration.","cd10f02c":"**`INFERENCE`** - \n\n- Over here, we do not see any indicator of the day of the week on which the application was started having an impact on the loan default analysis.","7b1a60d7":"#### CHECKING AND IMPUTING `EXT_SOURCE_2` AND `EXT_SOURCE_3` COLUMNS","c59f8ecd":"**`INFERENCE`** - \n\n- Owning a realty estate doesn't show much of an impact on whether a person is going to be a defaulter or not.\n- There is a very minor observation that, people who don't have house, might end up defaulting.","17d96a21":"**`Inference`** -\n\n- Here we can see that most customers who took loan previously came back to the back for loan again in 2 years time.","4cd92d66":"### OUTLIER ANALYSIS \n##### CHECKING `AMT_INCOME_TOTAL` COLUMN","1cdd34fa":"**`Inference`** -\n\n- Here most of the reason for why loan was taken is missing.","e536b388":"#### Inspecting and Imputing values for the OCCUPATION TYPE column:","c76ddfc6":"##### CHECKING `FLAG OWN REALTY` COLUMN","54886638":"**`Inference`** -\n- Not a big difference, still with increace in income, less likely to default","8291cb30":"#### Here we notice that the data is imbalanced.","51e2cc17":"**`INFERENCE`** - \n\n- The loan annuity amount is mostly concentrated around the 25,000 mark.\n","b1927d0f":"####  CREATING ADDITIONAL COLUMNS FOR ANALYSIS","dd2ff490":"### Segmented Univariate analysis (Continious Numeric columns)","f7256838":"**`Inference`** -\n\n- From the plot above we can clearly see that most of the customers are repeaters.\n- Only about 19% of the customers are new.","d777d745":"### CHECKING VALUES OF OTHER CATEGORICAL COLUMNS \n##### CHECKING `GENDER CODE` COLUMN","1d2d0f62":"##### Checking `AGE` Column","08764f5a":"#### Performing some Univariate analysis on some categorical data and comparing the characteristics of Defaulters vs non-Defaulters","9083a868":"##### CHECKING `WEEKDAY_APPR_PROCESS_START` COLUMN","f2096db8":"**`Inference`** -\n\n- Here we see usual trend in all the education type, so we cannot make any inferences here.","b3c67b3f":"### DATA CLEANING AND MANUPULATION\n\n#### Dropping columns with more than 45% Null values:","0ccafa23":"**`Inference`** -\n\n- We do not observe any significant impact of the number of family members of a client on defaulting.\n- We do however, see a very small trend that, clients who default might have more than 4 family members.","d601d03e":"**`Inference`** -\n\n- From the above data we can infer that new clients are more likely to cancel loans.\n- Also, new clients are more likely to get their loan amount refused.\n- Repeater clients are more likely to get a loan refused.","327488d5":"#### **`Median`** can be used to replace the missing values here because of skewness ","f498d548":"**`INFERENCE`** - \n\n- There is a huge data imbalance with almost 92% of the data corresponding to the Defaulter whereas only 8% belonging to the Non-defaulters.","9e6407aa":"**`Inference`** -\n\n- From the age 20 to 40 years, clients falling in this category of age range are more likely to default a payment.\n- Clients above 50 are less likely to default any payments.","ef2f24d2":"**`Inference`** -\n- Among these categories, POS are the majority","71c9de20":"##### Checking `NAME_CONTRACT_TYPE` column","669a5c42":"**`Inference`** -\n\n- Clients in the age range 30 years to 50 years ask for more credit amount and people above the age of 60 are likely to default on their payment.","ad8b3c5d":"##### Checking `ORGANIZATION TYPE` column:","c4c2875c":"### Checking Gender imbalance","a42d5f2e":"##### CHECKING `NAME EDUCATION TYPE` COLUMN","759f9709":"**`Inference`** -\n\n- We can see that customers with very low income or very high income show more signs of getting their loan amount refused, by a very minor margin.","316a52e8":"##### CHECKING `FLAG OWN CAR` COLUMN","954d4e25":"##### Replacing missing values with **`MODE`** :"}}