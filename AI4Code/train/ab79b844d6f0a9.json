{"cell_type":{"f8fceb65":"code","b3e7a77c":"code","4cc86c12":"code","8fae3930":"code","798ffdc5":"code","4975aaf8":"code","057b2d97":"code","0f81027f":"code","3c68591c":"code","b2d8f672":"code","f57b6e77":"code","b4298f96":"code","ec32ecda":"code","8268e78a":"code","218cce8e":"code","65ec9752":"code","794779cc":"code","ca149f1f":"code","703d6981":"code","fe3ef9d4":"code","88e87df3":"code","d99917c1":"code","198e71db":"code","82f399c5":"code","6c1f6f0e":"code","eb1475bc":"code","c77f3616":"markdown","d8f85651":"markdown","2b8fd34b":"markdown","4b1efb1b":"markdown","90f34a82":"markdown","92d06ca1":"markdown","97b7b662":"markdown","53e6686f":"markdown","e3d31ecd":"markdown","7fdc9989":"markdown","022ee482":"markdown","d942c893":"markdown","867bbdd1":"markdown","68b35b6e":"markdown","196b1e50":"markdown","7398f879":"markdown","163f3925":"markdown","da3a59fb":"markdown","f16ea991":"markdown","6a4efc05":"markdown"},"source":{"f8fceb65":"import numpy as np\nimport pandas as pd\n\nimport tensorflow as tf\n\nimport matplotlib.pyplot as plt","b3e7a77c":"train_data = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_train.csv')\ntest_data = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_test.csv')","4cc86c12":"train_data.shape","8fae3930":"test_data.shape","798ffdc5":"train_data.head()","4975aaf8":"train_data['label'].value_counts()","057b2d97":"class_names = ['T-shirt\/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']","0f81027f":"x_train = train_data.drop(['label'],axis = 1)\ny_train  = train_data['label']\nx_test = test_data.drop(['label'], axis= 1)\ny_test = test_data['label']","3c68591c":"x_train = x_train.astype('float32')\/255\nx_test = x_test.astype('float32')\/255","b2d8f672":"# index - 17\nimage = x_train.iloc[17]\nimage = np.array(image)\nimage = image.reshape((28,28))\nplt.figure()\nplt.imshow(image)","f57b6e77":"plt.figure(figsize = (10, 10))\nfor i in range(0,25):\n    image = x_train.iloc[i]\n    image = np.array(image)\n    image = image.reshape((28,28))\n    plt.subplot(5, 5, i+1)\n    plt.imshow(image)\nplt.show()  ","b4298f96":"model = tf.keras.Sequential([\n                    tf.keras.layers.Dense(units = 128, activation = tf.nn.relu, input_shape = [784]),\n                    tf.keras.layers.Dense(units = 10, activation = tf.nn.softmax)\n                    ])","ec32ecda":"model.compile(optimizer = 'adam', loss = tf.keras.losses.SparseCategoricalCrossentropy(), metrics = ['accuracy'])","8268e78a":"model.summary()","218cce8e":"BATCH_SIZE = 32","65ec9752":"import math\nmodel.fit(x_train, y_train, epochs=5, steps_per_epoch=math.ceil(train_data.shape[1]\/BATCH_SIZE))","794779cc":"# evaluate method helps in getting accuracy on test dataset\ntest_loss, test_accuracy = model.evaluate(x_test,y_test, steps=math.ceil(test_data.shape[1]\/BATCH_SIZE))\nprint('Accuracy on test dataset:', test_accuracy)","ca149f1f":"images = []\ntest_labels = []\nfor i in range(0,25):\n    image = x_test.iloc[i]\n    images.append(image)\n    test_labels.append(y_test[i])","703d6981":"test_images = np.array(images)","fe3ef9d4":"test_images.shape","88e87df3":"predictions = model.predict(test_images)","d99917c1":"predictions.shape","198e71db":"predictions","82f399c5":"#np.argmax() returns the index of the maximum value in the array\nnp.argmax(predictions[0])","6c1f6f0e":"test_labels[0]","eb1475bc":"plt.figure(figsize = (10,10))\nfor i in range(0,25):\n    plt.subplot(5,5, i+1)\n    plt.bar(range(10), predictions[i])\nplt.show()","c77f3616":"We can see the label with highest confidence value with below line of code","d8f85651":"We will store class names for prediction and visualization purpose.","2b8fd34b":"We will take first 25 images of the test dataset and let our model predict it's label.","4b1efb1b":"So, our model accurately predicted the image label.","90f34a82":"# TRAINING THE MODEL\n","92d06ca1":"We take 25 images from the test data to see for which labels are model is most confident.","97b7b662":"We can note that our model have high confidence values for more than one label which is certainly not good.","53e6686f":"### Single image ","e3d31ecd":"### First 25 images in the train dataset","7fdc9989":"# IMPORTING LIBRARIES","022ee482":"So, our model is most confident that the first image of the test dataset is T-Shirt\/Top.  \nWe will check the image label for the first image of the test dataset","d942c893":"# GOAL\n### Image Classification using Artificial Neural Networks","867bbdd1":"# MODEL BUILDING","68b35b6e":"# IMAGE VISUALIZATION","196b1e50":"# DATA DESCRIPTION","7398f879":"# MODEL EVALUATION","163f3925":"So, there is an equal data distribution between all the classes.","da3a59fb":"# DATA PREPROCESSING\n\nThe value of each pixel in the image data is an integer in the range [0,255]. For the model to work properly, these values need to be normalized to the range [0,1].","f16ea991":"For every image model generates 10 numbers which describe the \"confidence\" of the model that the image corresponds to each of the 10 different articles of clothing.","6a4efc05":"Each training and test example is assigned to one of the following labels:\n\n0 T-shirt\/top  \n1 Trouser  \n2 Pullover  \n3 Dress  \n4 Coat  \n5 Sandal  \n6 Shirt  \n7 Sneaker  \n8 Bag  \n9 Ankle boot  "}}