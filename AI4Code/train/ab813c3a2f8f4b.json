{"cell_type":{"330a5208":"code","e3f21458":"code","4caee6df":"code","3be7391b":"code","868bc2ec":"code","61e64bf3":"code","86f8cde4":"code","2a2288d0":"code","960e7e55":"code","6f589ced":"code","293776f3":"code","1c851460":"code","ebeac354":"code","ec190488":"code","aacc5a23":"code","44f5bd5c":"code","7ce02097":"code","760774ac":"code","6ffad2f8":"code","300e84c1":"code","eab26d24":"code","612a2f28":"code","e2efd660":"code","7bf56aef":"code","7fac33fa":"code","909dfb1d":"code","a41f9638":"code","104aab54":"code","6933d8f2":"code","a91397e1":"code","34f1eceb":"code","39232235":"markdown","73505336":"markdown","825964d9":"markdown","9dddaed9":"markdown","9fdaade3":"markdown","046d8e81":"markdown","33f33eb8":"markdown","c10ff303":"markdown","013a7158":"markdown","27b3d329":"markdown","e92ed5b5":"markdown","aa6b5603":"markdown","2e4f9bc1":"markdown","1dd398be":"markdown","81e37c19":"markdown","9ea8487f":"markdown","30a054a0":"markdown","0ac9de5a":"markdown","a38b19a5":"markdown"},"source":{"330a5208":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\nimport os\nimport random\nimport numpy as np\nimport pandas as pd\n\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e3f21458":"os.listdir('..\/input\/')","4caee6df":"base_dir = '..\/input\/'\ntrain_dir = os.path.join(base_dir, 'train_images\/')\ntrain = pd.read_csv(os.path.join(base_dir, 'train.csv'))\ntrain['path'] = train['id_code'].map(lambda x: os.path.join(train_dir, '{}.png'.format(x)))\ntrain = train.drop(columns = ['id_code'])\ntrain = train.sample(frac=1).reset_index(drop=True) #shuffle dataframe\n\ntest_dir = os.path.join(base_dir, 'test_images\/')\ntest = pd.read_csv(os.path.join(base_dir, 'test.csv'))\ntest['path'] = test['id_code'].map(lambda x: os.path.join(test_dir, '{}.png'.format(x)))\ntest = test.drop(columns = ['id_code'])\ntest = test.sample(frac=1).reset_index(drop=True) #shuffle dataframe\n","3be7391b":"print(\"size of train set: {}\".format(len(train)))\nprint(\"size of test set: {}\".format(len(test)))","868bc2ec":"train.head()","61e64bf3":"test.head()","86f8cde4":"train['diagnosis'].hist(figsize=(10,5), bins=10)","2a2288d0":"train_width, train_height = [], []\nfor i in range(len(train)):\n    image = Image.open(train['path'][i])\n    width, height = image.size\n    train_width.append(width)\n    train_height.append(height)\n    \ntest_width, test_height = [], []\nfor i in range(len(test)):\n    image = Image.open(test['path'][i])\n    width, height = image.size\n    test_width.append(width)\n    test_height.append(height)","960e7e55":"train['width'] = train_width\ntrain['height'] = train_height\ntest['width'] = test_width\ntest['height'] = test_height","6f589ced":"for df in [train, test]:\n    df['width_height_ratio'] = df['height'] \/ df['width']\n    df['width_height_added'] = df['height'] + df['width']","293776f3":"train.head()","1c851460":"test.head()","ebeac354":"fig = plt.figure(figsize=(12,20))\nax1 = fig.add_subplot(3, 2, 1)\nax2 = fig.add_subplot(3, 2, 2)\nax3 = fig.add_subplot(3, 2, 3)\nax4 = fig.add_subplot(3, 2, 4)\nax5 = fig.add_subplot(3, 2, 5)\nax6 = fig.add_subplot(3, 2, 6)\n\nax1.hist(train['width'])\nax1.set_title(\"train width\")\n\nax3.hist(test['width'])\nax3.set_title(\"test width\")\n\nax2.hist(train['height'])\nax2.set_title(\"train height\")\n\nax4.hist(test['height'])\nax4.set_title(\"test height\")\n\nax5.hist(train['width_height_ratio'])\nax5.set_title(\"train width height ratio\")\n\nax6.hist(test['width_height_ratio'])\nax6.set_title(\"test width height ratio\")","ec190488":"fig = plt.figure(figsize=(12,8))\nax1 = fig.add_subplot(2, 2, 1)\nax2 = fig.add_subplot(2, 2, 2)\n\nax1.hist(train['width_height_added'], bins=5)\nax1.set_title(\"train width height added\")\n\nax2.hist(test['width_height_added'], bins=5)\nax2.set_title(\"test width height added\")","aacc5a23":"train['width_height_added'].describe()","44f5bd5c":"test['width_height_added'].describe()","7ce02097":"train.groupby(['diagnosis'])['width_height_added'].mean()","760774ac":"train_class0 = [] \ntrain_class1 = []\ntrain_class2 = []\ntrain_class3 = []\ntrain_class4 = []\n\nnum_sample = 10\n\nfor path in train[train.diagnosis == 0].sample(num_sample)['path']:\n    im = Image.open(path)\n    train_class0.append(im)\n    \nfor path in train[train.diagnosis == 1].sample(num_sample)['path']:\n    im = Image.open(path)\n    train_class1.append(im)\n    \nfor path in train[train.diagnosis == 2].sample(num_sample)['path']:\n    im = Image.open(path)\n    train_class2.append(im)\n    \nfor path in train[train.diagnosis == 3].sample(num_sample)['path']:\n    im = Image.open(path)\n    train_class3.append(im)\n    \nfor path in train[train.diagnosis == 4].sample(num_sample)['path']:\n    im = Image.open(path)\n    train_class4.append(im)","6ffad2f8":"plt.figure(figsize=(20,10))\ncolumns = 5\n\nfor i, image in enumerate(train_class0):\n    plt.subplot(len(train_class0) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","300e84c1":"plt.figure(figsize=(20,10))\ncolumns = 5\n\nfor i, image in enumerate(train_class1):\n    plt.subplot(len(train_class1) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","eab26d24":"plt.figure(figsize=(20,10))\ncolumns = 5\n\nfor i, image in enumerate(train_class2):\n    plt.subplot(len(train_class2) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","612a2f28":"plt.figure(figsize=(20,10))\ncolumns = 5\n\nfor i, image in enumerate(train_class3):\n    plt.subplot(len(train_class3) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","e2efd660":"plt.figure(figsize=(20,10))\ncolumns = 5\n\nfor i, image in enumerate(train_class4):\n    plt.subplot(len(train_class4) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","7bf56aef":"test.head()","7fac33fa":"test.describe()","909dfb1d":"# width + height < 1500 => small image\n# width + height > 4000 => large image\n\ntest_image_small = []\ntest_image_large = []\n\nfor path in test[test.width_height_added < 1500].sample(30)['path']:\n    im = Image.open(path)\n    test_image_small.append(im)\n    \nfor path in test[test.width_height_added > 4000].sample(30)['path']:\n    im = Image.open(path)\n    test_image_large.append(im)","a41f9638":"plt.figure(figsize=(20,20))\ncolumns = 5\n\nfor i, image in enumerate(test_image_small):\n    plt.subplot(len(test_image_small) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","104aab54":"plt.figure(figsize=(20,20))\ncolumns = 5\n\nfor i, image in enumerate(test_image_large):\n    plt.subplot(len(test_image_large) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","6933d8f2":"train_image_small = []\ntrain_image_large = []\n\nfor path in train[train.width_height_added < 1500].sample(30)['path']:\n    im = Image.open(path)\n    train_image_small.append(im)\n    \nfor path in train[train.width_height_added > 4000].sample(30)['path']:\n    im = Image.open(path)\n    train_image_large.append(im)","a91397e1":"plt.figure(figsize=(20,20))\ncolumns = 5\n\nfor i, image in enumerate(train_image_small):\n    plt.subplot(len(train_image_small) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","34f1eceb":"plt.figure(figsize=(20,20))\ncolumns = 5\n\nfor i, image in enumerate(train_image_large):\n    plt.subplot(len(train_image_large) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)","39232235":"lets see the same thing for the train images","73505336":"## train class 2 (Moderate)","825964d9":"you can see that class 0 in train set have relatively small size of width and height","9dddaed9":"## test images (large size)","9fdaade3":"    # Visualinze Train Images","046d8e81":"# Conclusion\n\n+ by looking into the dataset, we can clearly see the difference between the train and test dataset\n+ hopefully this simple eda explains the large gap between the cv score and lb score\n+ and it will be your job to make stable cross validation","33f33eb8":"we can see that a lot of train images are in class 0 ","c10ff303":"+ small size of test images have class of near to 4 (seeing with my eyes)\n+ in the training set, class 0 were likely to be small image size. meaning **class distribution is very different in train and test set**","013a7158":"+ a lot images in the test set are very small compared to train set","27b3d329":"## train images (small size)","e92ed5b5":"## train class 4 (Proliferative DR)","aa6b5603":"+ comparison of train image's width, height and test image's width, height\n+ we can see the difference in the distribution","2e4f9bc1":"## train class 0 (No DR)","1dd398be":"## train images (large size)","81e37c19":"## train class 3 (Severe)","9ea8487f":"## train class 1 (Mild)","30a054a0":"# Visualize Test Images","0ac9de5a":"## test images (small size)","a38b19a5":"you can compare it with simple statistics"}}