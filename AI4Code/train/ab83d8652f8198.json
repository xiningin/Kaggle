{"cell_type":{"ab377fb4":"code","af778fea":"code","bfa0913b":"code","a366e12e":"code","461e094a":"code","d9b9fa37":"code","7a401999":"code","9d3c43db":"code","cad1f83a":"code","7f2c633a":"code","2826c6f8":"code","7282274c":"code","1d3560ca":"code","4fed0668":"code","816587e5":"code","cfb85deb":"code","c55a9ad3":"code","abb238a8":"code","adbab6ff":"code","2726d54c":"code","851825c8":"code","ea68db38":"code","306df6c3":"code","11262634":"code","a390c4f1":"code","dd7e45c3":"code","a4f6c6ad":"code","b3259678":"code","a461bd8c":"code","a8cbe35c":"code","98de84ef":"code","d6a1b287":"code","54cbf3af":"code","2a6a4815":"code","d4d529a8":"code","3fe008fa":"markdown","44427426":"markdown","05609774":"markdown","9f37b096":"markdown","e47245c3":"markdown","0ecabd4c":"markdown","f5e3fb42":"markdown","161905b4":"markdown","53e7952a":"markdown","9dc50601":"markdown","71df3221":"markdown","ef20d0e8":"markdown","6eebc085":"markdown"},"source":{"ab377fb4":"import pandas as pd\nimport numpy as np","af778fea":"df_neighborhood.to_csv('Denver_neighborhoods.csv')","bfa0913b":"import json\n\nwith open('neighbourhoods.geojson') as f:\n    data = json.load(f)\n","a366e12e":"Denver_coordinates = {}\nfor feature in data['features']:\n    coordinates = feature['geometry']['coordinates'][0][0]\n    neighborhood = feature['properties']['neighbourhood']\n    Denver_coordinates[neighborhood] = coordinates","461e094a":"for neighorhood in Denver_coordinates:\n    coordinates = Denver_coordinates[neighorhood]\n    flat_list = [item for sublist in coordinates for item in sublist]\n    longitudes = flat_list[::2]\n    latitudes = flat_list[1::2]\n    low_lat = min(latitudes)\n    high_lat = max(latitudes)\n    low_lng = min(longitudes)\n    high_lng = max(longitudes)\n    center_lat = low_lat + ((high_lat - low_lat)\/2)\n    center_lng = low_lng + ((high_lng - low_lng)\/2)\n    coordinates = (center_lat,center_lng)\n    Denver_coordinates[neighorhood] = coordinates\n","d9b9fa37":"df_Denver_coordinates = pd.DataFrame(Denver_coordinates).transpose().reset_index()\ndf_Denver_coordinates.columns = ['Neighborhood','Latitude','Longitude']\ndf_Denver_coordinates\n","7a401999":"import folium\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values","9d3c43db":"address = 'Denver, Colorado'\n\ngeolocator = Nominatim(user_agent=\"denver_explorer\")\nlocation = geolocator.geocode(address)\nDenver_lat = location.latitude\nDenver_lng = location.longitude","cad1f83a":"Denver_map = folium.Map(location=[Denver_lat, Denver_lng], zoom_start=11)\n\nfor lat, lng, label in zip(df_Denver_coordinates.Latitude, df_Denver_coordinates.Longitude, df_Denver_coordinates.Neighborhood):\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        color='blue',\n        popup=label,\n        fill = True,\n        fill_color='blue',\n        fill_opacity=0.6\n    ).add_to(Denver_map)\n\nDenver_map","7f2c633a":"df_Zillow_housing = pd.read_csv('Neighborhood_zhvi_uc_sfrcondo_tier_0.33_0.67_sm_sa_mon.csv')\ndf_Zillow_housing.head()","2826c6f8":"df_Denver_housing = df_Zillow_housing[df_Zillow_housing['City']=='Denver']\ndf_Denver_housing.head()","7282274c":"df_Denver_housing['RegionName'].value_counts","1d3560ca":"unique_coordinates = [nbhd for nbhd in set(df_Denver_coordinates.Neighborhood) if nbhd not in set(df_Denver_housing.RegionName)]\nunique_housing = [nbhd for nbhd in set(df_Denver_housing.RegionName) if nbhd not in set(df_Denver_coordinates.Neighborhood)]\n\nprint('The unique neighborhoods in df_Denver_coordinates include: ',unique_coordinates)\nprint('The unique neighborhoods in df_Denver_housing include: ',unique_housing)","4fed0668":"df_Denver_housing.loc[df_Denver_housing['RegionName'] =='Central Business District', 'RegionName'] = 'CBD'","816587e5":"New_Kennedy = df_Denver_housing.loc[df_Denver_housing['RegionName'] =='Hampden'].replace('Hampden','Kennedy')\ndf_Denver_housing = df_Denver_housing.append(New_Kennedy, ignore_index=True) #df.append doesn't change df, need to update df","cfb85deb":"df_Denver_housing.loc[df_Denver_housing['RegionName'].isin(['Kennedy','Hampden','CBD'])]","c55a9ad3":"df_Denver_housing = df_Denver_housing[['RegionName','2020-11-30']]\ndf_Denver_housing.rename(columns={'RegionName':'Neighborhood','2020-11-30':'HousingIndex'},inplace=True)","abb238a8":"df_Denver_housing","adbab6ff":"denver_geo = r'neighbourhoods.geojson'\n\nDenver_map.choropleth(\n    geo_data=denver_geo,\n    data=df_Denver_housing,\n    columns=['Neighborhood', 'HousingIndex'],\n    key_on='feature.properties.neighbourhood',\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Denver Housing Index'\n)\n\nDenver_map","2726d54c":"CLIENT_ID = '' # your Foursquare ID\nCLIENT_SECRET = '' # your Foursquare Secret\nVERSION = '20180605' # Foursquare API version\nLIMIT = 100 # A default Foursquare API limit value","851825c8":"categoryId = '5744ccdfe4b0c0459246b4c7,52f2ab2ebcbc57f1066b8b32,52e81612bcbc57f1066b7a45,5745c2e4498e11e7bccabdbd,4bf58dd8d48988d118951735,52f2ab2ebcbc57f1066b8b45,56aa371be4b08b9a8d573526,4bf58dd8d48988d175941735,4bf58dd8d48988d1fd941735'\nradius = 1000","ea68db38":"import requests","306df6c3":"def getNearbyVenues(names, latitudes, longitudes, categoryId, radius):\n    \n    venues_list=[]\n    for name, lat, lng in zip(names, latitudes, longitudes):\n                  \n        # create the API request URL\n        url = 'https:\/\/api.foursquare.com\/v2\/venues\/explore?&client_id={}&client_secret={}&v={}&ll={},{}&categoryId={}&radius={}&limit={}'.format(\n            CLIENT_ID, \n            CLIENT_SECRET, \n            VERSION, \n            lat, \n            lng,\n            categoryId,\n            radius, \n            LIMIT)\n            \n        # make the GET request\n        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n        \n        # return only relevant information for each nearby venue\n        venues_list.append([(\n            name, \n            lat, \n            lng, \n            v['venue']['name'],  \n            v['venue']['categories'][0]['name']) for v in results])\n\n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['Neighborhood', \n                  'Latitude', \n                  'Longitude', \n                  'Venue', \n                  'Venue Category']\n    \n    return(nearby_venues)","11262634":"Denver_venues = getNearbyVenues(df_Denver_coordinates['Neighborhood'], df_Denver_coordinates['Latitude'], df_Denver_coordinates['Longitude'], categoryId, radius)","a390c4f1":"print(Denver_venues.shape)\nDenver_venues.head()","dd7e45c3":"for nbhd in set(df_Denver_housing['Neighborhood']):\n    if nbhd not in set(Denver_venues['Neighborhood']):\n        print('No data retrived for {} neighborhood in Foursqure.'.format(nbhd))","a4f6c6ad":"Denver_venues.groupby('Neighborhood').count()","b3259678":"Denver_venues_count = Denver_venues.groupby('Neighborhood').count().reset_index()\nDenver_venues_count.head()","a461bd8c":"Denver_venues_count = Denver_venues_count[['Neighborhood','Venue']].rename(columns={'Venue':'VenueCount'})","a8cbe35c":"from sklearn.cluster import KMeans","98de84ef":"k = 3\nDenver_venues_clusters = Denver_venues_count.drop([\"Neighborhood\"], axis=1)\nkmeans = KMeans(init=\"k-means++\", n_clusters=k, random_state=0, n_init=12).fit(Denver_venues_clusters)\n\nDenver_venues_count['Label'] = kmeans.labels_\nDenver_venues_count","d6a1b287":"DIA_venues_count = {'Neighborhood':'DIA','VenueCount':0, 'Label':0}\nDenver_venues_count = Denver_venues_count.append(DIA_venues_count,ignore_index=True)\nDenver_venues_count","54cbf3af":"df_Denver_clusters = df_Denver_coordinates.join(Denver_venues_count.set_index('Neighborhood'),on='Neighborhood')","2a6a4815":"import matplotlib.cm as cm\nimport matplotlib.colors as colors","d4d529a8":"# set color scheme for the clusters\nx = np.arange(k)\nys = [i + x + (i*x)**2 for i in range(k)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, poi, cluster in zip(df_Denver_clusters['Latitude'], df_Denver_clusters['Longitude'], df_Denver_clusters['Neighborhood'], df_Denver_clusters['Label']):\n    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.7).add_to(Denver_map)\n       \nDenver_map","3fe008fa":"## Housing data for neighborhoods\n\nRaw data was downloaded from Zillow: https:\/\/www.zillow.com\/research\/data\/.","44427426":"In df_Denver_housing, we will change the name \"Central Business District\" to \"CBD\" for consistency. To handle the missing value for Kennedy, we will use the data for Hampden for Kennedy, considering that Hampden is the only neighboring neighhorhood of Kennedy, thus similar housing price (this may not be true due to potential differences in housing type distribution, year of built, etc.). ","05609774":"## Analyze Denver Neighborhoods","9f37b096":"It is possible to rank the neighborhoods based on the total number of venues, but instead we might want to group the neighborhoods  on a few levels (e.g., high-medium-low level of facility abundancy) to provide flexibility and enable effective decision making in choosing neighborhoods.","e47245c3":"From the table above, it appears that the more abundant the facilities are, the larger number the label has. Therefore, we can safely assign label \"0\" to DIA neighborhood, which returned zero venues.","0ecabd4c":"Data were then extracted for the neighborhoods in Denver, CO","f5e3fb42":"Foursquare has a large number of categories, but only a few were selected in this application that are very relevant to the needs of working parents of young children. Categories selected include Child Care Service (5744ccdfe4b0c0459246b4c7), Baby Store (52f2ab2ebcbc57f1066b8b32), Preschool (52e81612bcbc57f1066b7a45), Drugstore (5745c2e4498e11e7bccabdbd), Grocery Store (4bf58dd8d48988d118951735), Organic Grocery (52f2ab2ebcbc57f1066b8b45), Urgent Care Center (56aa371be4b08b9a8d573526), Gym \/ Fitness Center (4bf58dd8d48988d175941735), and Shopping Mall (4bf58dd8d48988d1fd941735).","161905b4":"Visualize the neighborhoods in a map using Folium package","53e7952a":"## Denver neighborhoods and coordinates\n\nGeojson data for Denver was obtained from https:\/\/www.kaggle.com\/broach\/denverairbnb?select=neighbourhoods.geojson.\nCoordinates in the original json file are provided for each Denver neighorhood in a polygon shape. The center coordinates for each neighborhood were calcuated by averaging the highest number and lowest number for latitudes and longitudes, respectively.","9dc50601":"Discrepancy in the number of neighborhoods was observed: 78 neighoborhoods in df_Denver_coordinates vs. 77 neighoborhoods in df_Denver_housing. It would be desirable to compare the difference of neighoborhood list in these two dataframes.","71df3221":"The data from Zillow is time series from 1996 to 2020. We will use the most recent data (last column \"2020-11-30\") as an indicator of Denver housing index.","ef20d0e8":"We use k-means to cluster Denver neighborhoods based on VanueCount ","6eebc085":"Now we use Foursquare API to explore Denver neighbohoods."}}