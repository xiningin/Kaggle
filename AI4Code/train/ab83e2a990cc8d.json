{"cell_type":{"6be5088a":"code","b0d5aca6":"code","0e60cc92":"code","38acf124":"code","169d890a":"code","86d4703c":"code","627c3cff":"code","512a4f85":"code","e61a9ac7":"code","dc33f818":"markdown","d8b346b7":"markdown","70ba3f91":"markdown","d75d6228":"markdown","b4e9e0fd":"markdown","4b3e598c":"markdown","7de31a6e":"markdown"},"source":{"6be5088a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b0d5aca6":"#reading data(CSV format)\n\ndf=pd.read_csv('\/kaggle\/input\/house-price-dataset-for-simple-regression\/house_prices.csv')","0e60cc92":"#checking first 5 rows\ndf.head()","38acf124":"#plotting scatter plot to see relation between LotArea and SalePrice\n\nplt.scatter(df.LotArea,df.SalePrice)\nplt.xlabel('LotArea')\nplt.ylabel(\"SalePrice\")\nplt.title('house pricing based on LotArea')\n","169d890a":"#fitting simple regression to training set\n\nreg=LinearRegression()\nX=df[['LotArea']]\ny=df.SalePrice\nreg.fit(X,y)","86d4703c":"#Predicting the test set results\ny_pr=reg.predict(X)","627c3cff":"plt.scatter(X,y)\nplt.plot(X,y_pr,\"r-\")\nplt.title('Housing Price ')\nplt.xlabel('Area')\nplt.ylabel('Price')\nplt.show()\n","512a4f85":"#plotting best fitted line and vertical line(area=14000)\n\nplt.scatter(X,y)\nplt.plot(X,y_pr,\"r-\")\n#plotting vertical line from area=14000\nplt.axvline(x=14000,color='black')\nplt.title('Housing Price ')\nplt.xlabel('Area')\nplt.ylabel('Price')\nplt.show()","e61a9ac7":"#predicting the price of house for Area=14000\n\nX=14000\nreg.predict([[X]])\n","dc33f818":"Just Check plot and predicted value for area=14000","d8b346b7":"A line in Above plot showing best relation between Area and HousePrice...","70ba3f91":"# Plotting best fitting line..","d75d6228":"# simple regression fitting to training data","b4e9e0fd":"# Checking above plot and fitted model give apprx. same predictions or not...","4b3e598c":"# Thank You!!! please upvote if you like it.","7de31a6e":"# Importing libraries"}}