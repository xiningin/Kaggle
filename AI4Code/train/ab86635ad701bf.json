{"cell_type":{"76e46562":"code","c125dfcf":"code","d5f05688":"code","0a6aca8f":"code","4b5f49ae":"code","98f7a6f7":"code","4b8e269a":"code","a033beaf":"code","b3d836d7":"code","fbd61198":"code","c891b3de":"code","43324d73":"code","e3bc6ba3":"code","8ae489e5":"code","904b6090":"code","ed6ce43c":"code","676f71af":"code","d1f06a44":"code","75b3b71d":"code","5b778172":"code","e8103386":"code","6329dc80":"code","903a82e7":"code","b8c157f1":"code","4a28a844":"code","1ab316f6":"code","7e1f21f4":"code","95a9467b":"code","0cf3747b":"code","353cc391":"code","abf3ef50":"code","6cc796c2":"code","b71af7de":"code","f8ba4aa7":"code","8721d8c5":"code","d390e0f7":"code","05eb04b4":"code","946cbb9c":"code","3552ff72":"code","7487b1a7":"code","f2aa983d":"code","5c1f6c50":"code","e5451675":"code","bf37df2d":"code","be5a19c7":"code","08198884":"code","aa5dfa1a":"code","e1d2f5fc":"code","da159d27":"code","37f8c1b0":"code","ee1ee34a":"code","fcc2eeb8":"code","8a347ef8":"code","f88cb435":"code","3c638b09":"code","b5b3da6b":"code","3d0d8adb":"code","3ac05140":"code","3d99394e":"code","43b769cf":"code","4b28244a":"code","87cf5cb9":"code","c73f890d":"code","119032a0":"code","7efc8114":"code","aba8112d":"code","6d123d39":"code","539d75cd":"code","d86b9904":"code","367545c8":"code","6f314b6b":"code","5229eb8e":"code","64930665":"code","fc4866db":"code","9778e0bb":"code","e0b77e62":"code","f85bec01":"code","ca35f988":"code","f4ec32da":"code","9e2801ea":"code","7e437219":"code","44c2b9ef":"code","bce2bad6":"code","bf394da8":"code","c97c54fd":"code","0dba98d9":"code","db2b986f":"code","1c2204e8":"code","8fd82208":"code","85fa1451":"code","a1443493":"code","4e7d2caa":"code","a83e90ec":"code","df11b6b6":"code","69167a10":"code","8a300b6e":"code","2a0b6563":"code","82d8edfc":"code","62e26227":"code","78de69b2":"code","bdb4b9a5":"code","e8b23f25":"code","34be699a":"code","808ba9b0":"code","bec3699d":"code","8c34a47f":"code","4e3fb4ec":"code","d8438c30":"code","638e722d":"code","ec744955":"code","4ceb6a2e":"code","01f783b4":"code","67214f63":"code","f7b04d5f":"markdown","58e18576":"markdown","16ddd4b7":"markdown","4a26fb48":"markdown","427d70e1":"markdown","b45bed39":"markdown","bf42bbb2":"markdown","d12ddcd4":"markdown","9928802a":"markdown","da579448":"markdown","abda7ce2":"markdown","68f7de8a":"markdown","0583c848":"markdown","9c7abde4":"markdown","831e8c3e":"markdown","2f356ce1":"markdown","a798ff35":"markdown","4561afed":"markdown","40690ec9":"markdown","34fcee65":"markdown","c11a71ff":"markdown","89f0ff8e":"markdown"},"source":{"76e46562":"import pandas as pd","c125dfcf":"df = pd.read_csv('..\/input\/mobile-price-prediction\/mobile_price_data.csv')","d5f05688":"df.head()","0a6aca8f":"df.info()","4b5f49ae":"for col in df.columns:\n    print(col, df[col].unique())\n    print('\\n')","98f7a6f7":"df._get_numeric_data()","4b8e269a":"initial_df = df","a033beaf":"# from collections import defaultdict\n\n# status = defaultdict(lambda: 0)\n\nstatus = dict(zip(df.columns,list([0]*len(df.columns))))","b3d836d7":"status","fbd61198":"def print_processed_status(df):\n    for col in df.columns:\n        print(col, status[col])","c891b3de":"print_processed_status(df)","43324d73":"def numericize(df,col):\n    return pd.to_numeric(df[col].str.replace('[a-zA-Z]','',regex=True))","e3bc6ba3":"df.head()","8ae489e5":"df['mp_speed'] = numericize(df,'mp_speed')\ndf['mp_speed'].unique()\nstatus['mp_speed'] = 1","904b6090":"df['int_memory'] = numericize(df,'int_memory')\ndf['int_memory'].unique()\nstatus['int_memory'] = 1","ed6ce43c":"df['ram'] = numericize(df,'ram')\ndf['ram'].unique()\nstatus['ram'] = 1","676f71af":"\ndf['battery_power'] = numericize(df,'battery_power')\ndf['battery_power'].unique()\nstatus['battery_power'] = 1","d1f06a44":"\ndf['mob_width'] = numericize(df,'mob_width')\ndf['mob_width'].unique()\nstatus['mob_width'] = 1","75b3b71d":"df['mob_height'] = numericize(df,'mob_height')\ndf['mob_height'].unique()\nstatus['mob_height'] = 1","5b778172":"df['mob_depth'] = numericize(df,'mob_depth')\ndf['mob_depth'].unique()\nstatus['mob_depth'] = 1","e8103386":"df['mob_weight'] = numericize(df,'mob_weight')\ndf['mob_weight'].unique()\nstatus['mob_weight'] = 1","6329dc80":"df._get_numeric_data()","903a82e7":"df.head()","b8c157f1":"def edit_numericize(df,col,strs_to_remove):\n    processed = df[col]\n    for string in strs_to_remove:\n        processed = processed.str.replace(string,'',regex=False)\n    return pd.to_numeric(processed)","4a28a844":"df['mobile_price'] = edit_numericize(df,'mobile_price',['\u20b9',','])\ndf['mobile_price'].unique()\nstatus['mobile_price'] = 1","1ab316f6":"import seaborn as sns\nimport numpy as np\n\nmask = np.zeros_like(df.corr())\nmask[np.triu_indices_from(mask)] = True\n\nsns.heatmap(df.corr(),mask=mask, annot=True)\n","7e1f21f4":"def plot_correlation_with_col(df, col):\n    sorted_corr = df.corr().sort_values(col)[col][:-1]\n    sorted_corr.plot(kind='bar',figsize = (10,5))","95a9467b":"plot_correlation_with_col(df,'mobile_price')","0cf3747b":"df.head()","353cc391":"def replace_regex_numericize(df,col,chars_to_remove):\n    processed = df[col]\n    for char in chars_to_remove:\n        processed = processed.str.replace(char,'',regex=True)\n    return pd.to_numeric(processed)","abf3ef50":"# edit_numericize\ndf['disp_size'] = replace_regex_numericize(df,'disp_size',[' cm .*'])\ndf['disp_size'].unique()\nstatus['disp_size'] = 1","6cc796c2":"plot_correlation_with_col(df,'mobile_price')","b71af7de":"df.head()","f8ba4aa7":"def replace_regex(df,col,chars_to_remove):\n    processed = df[col]\n    for char in chars_to_remove:\n        processed = processed.str.replace(char,'',regex=True)\n    return processed","8721d8c5":"df['mobile_name_brand'] = replace_regex(df, 'mobile_name', [' \\(.*\\)'])\ndf['mobile_name_brand'].unique()","d390e0f7":"df['mobile_name_brand_short'] = replace_regex(df, 'mobile_name', [' .*'])\ndf['mobile_name_brand_short'].unique()","05eb04b4":"def convert_words_to_num(df,cat_col):\n    return df[cat_col].astype('category').cat.codes","946cbb9c":"df['mobile_name_brand_new'] = convert_words_to_num(df,'mobile_name_brand')\ndf['mobile_name_brand_short_new'] = convert_words_to_num(df,'mobile_name_brand')","3552ff72":"plot_correlation_with_col(df,'mobile_price')","7487b1a7":"status['mobile_name'] = 1","f2aa983d":"df.head()","5c1f6c50":"df['mobile_color_cat'] = convert_words_to_num(df,'mobile_color')\ndf['dual_sim_cat'] = convert_words_to_num(df,'dual_sim')\ndf['resolution_cat'] = convert_words_to_num(df,'resolution')\ndf['os_cat'] = convert_words_to_num(df,'os')\ndf['num_cores_cat'] = convert_words_to_num(df,'num_cores')\ndf['f_cam_cat'] = convert_words_to_num(df,'f_cam')\ndf['network_cat'] = convert_words_to_num(df,'network')\n","e5451675":"status['mobile_color'] = 1\nstatus['dual_sim'] = 1\nstatus['resolution'] = 1\nstatus['os'] = 1\nstatus['num_cores'] = 1\nstatus['f_cam'] = 1\nstatus['network'] = 1","bf37df2d":"# status['mobile_color'] = 1 Let us see the result and values to be sure\n# status['dual_sim'] = 1 Let us see the result and values to be sure\n# status['resolution'] = 1 Let us see the result and values to be sure\n# status['os'] = 1 Let us see the result and values to be sure\n# status['num_cores'] = 1 Let us see the result and values to be sure\n# status['f_cam'] = 1 Let us see the result and values to be sure\n# status['network'] = 1 Let us see the result and values to be sure","be5a19c7":"status","08198884":"plot_correlation_with_col(df,'mobile_price')","aa5dfa1a":"df['dual_sim'].unique()","e1d2f5fc":"df['dual_sim_ord'] = df['dual_sim'].replace('Dual Sim',2).replace('Single Sim',1)","da159d27":"df['num_cores'].unique()","37f8c1b0":"df['num_cores_ord'] = df['num_cores'].replace('Octa Core',8).replace('Quad Core',4).replace('Single Core',1)","ee1ee34a":"plot_correlation_with_col(df,'mobile_price')","fcc2eeb8":"def plot_grouped_correlation_with_col(df, col):\n    sorted_corr = df.corr().sort_values(col)[col][:-1]\n    sorted_corr.sort_index().plot(kind='bar',figsize = (10,5))","8a347ef8":"plot_grouped_correlation_with_col(df,'mobile_price')","f88cb435":"df['battery_power'].unique()","3c638b09":"df['disp_size'].unique()","b5b3da6b":"df['f_cam'].unique()","3d0d8adb":"df['f_cam_ord'] = replace_regex_numericize(df,'f_cam',['MP.*'])","3ac05140":"plot_grouped_correlation_with_col(df,'mobile_price')","3d99394e":"df['mob_depth'].unique()","43b769cf":"df['mob_width'].unique()","4b28244a":"df['mob_height'].unique()","87cf5cb9":"for rownum, row in df.iterrows():\n    ordered_dim = sorted([row['mob_depth'],row['mob_width'],row['mob_height']])\n#     print(row['mob_depth'],row['mob_width'],row['mob_height'])\n#     print(ordered_dim)\n    df.at[rownum,'mob_depth_rearr'] = ordered_dim[0]\n    df.at[rownum,'mob_width_rearr'] = ordered_dim[1]\n    df.at[rownum,'mob_height_rearr'] = ordered_dim[2]","c73f890d":"df['mob_height_rearr'].unique()","119032a0":"df['mob_width_rearr'].unique()","7efc8114":"df['mob_depth_rearr'].unique()","aba8112d":"plot_grouped_correlation_with_col(df,'mobile_price')","6d123d39":"df['mob_weight'].unique()","539d75cd":"df['mobile_color'].unique()","d86b9904":"len(df['mobile_color'].unique())","367545c8":"df['mobile_color_basic'] = replace_regex(df,'mobile_color',['.* '])\ndf['mobile_color_basic'].unique()","6f314b6b":"df['mobile_color_basic_cat'] = convert_words_to_num(df,'mobile_color_basic')","5229eb8e":"plot_grouped_correlation_with_col(df,'mobile_price')","64930665":"df['mp_speed'].unique()","fc4866db":"df['network'].unique()","9778e0bb":"df['network_count'] = [len(x.split(',')) for x in df['network']]\ndf['network_count'].unique()","e0b77e62":"plot_grouped_correlation_with_col(df,'mobile_price')","f85bec01":"df['network_count'].plot(kind='hist')","ca35f988":"df['os'].unique()","f4ec32da":"df['os_version'] = replace_regex(df,'os',['[a-zA-z]* '])\ndf['os_version_cat'] = convert_words_to_num(df,'os_version')","9e2801ea":"df['os_version'].unique()","7e437219":"df['os_version_new'] = replace_regex_numericize(df,'os_version',['\\..*'])\ndf['os_version_new'].unique()","44c2b9ef":"plot_grouped_correlation_with_col(df, 'mobile_price')","bce2bad6":"df['ram'].unique()","bf394da8":"df['resolution'].unique()","c97c54fd":"df['res_dim'] = df['resolution'].replace('[pP]ixel.*','',regex=True).replace('\\$','',regex=True).replace('[\u00d7*]',' x ',regex=True)\ndf['res_dim'].unique()","0dba98d9":"df['res_dims'] = [x.rsplit('x') for x in df['res_dim']]\ndf['res_dims']","db2b986f":"temp_df = pd.DataFrame(df['res_dims'].to_list(), columns=['res1','res2'])\ndf['res_dim_1'] = pd.to_numeric(temp_df['res1'])\ndf['res_dim_2'] = pd.to_numeric(temp_df['res2'])\n","1c2204e8":"df['res_dim_1'].unique()","8fd82208":"df['res_dim_2'].unique()","85fa1451":"for rownum, row in df.iterrows():\n    sorted_vals = sorted([row['res_dim_1'],row['res_dim_2']])\n    df.at[rownum, 'res_dim_1'] = sorted_vals[0]\n    df.at[rownum, 'res_dim_2'] = sorted_vals[1]","a1443493":"plot_grouped_correlation_with_col(df,'mobile_price')","4e7d2caa":"df['resolution_new'] = df['res_dim_1']*df['res_dim_2']\ndf['resolution_new'].unique()","a83e90ec":"df['mob_screen_dimension'] = df['mob_width']*df['mob_height']\ndf['mob_screen_dimension'].unique()","df11b6b6":"df['mob_screen_dimension'].plot(kind='hist')","69167a10":"plot_grouped_correlation_with_col(df,'mobile_price')","8a300b6e":"df['p_cam'].unique()","2a0b6563":"df['p_cam_max'] = [x[0:2].replace('M','') for x in df['p_cam']]\ndf['p_cam_max'] = numericize(df,'p_cam_max')\ndf['p_cam_max'].unique()","82d8edfc":"df['p_cam_count'] = [x.count('MP') for x in df['p_cam']]\ndf['p_cam_count'].unique()","62e26227":"df['f_cam'].unique()","78de69b2":"df['f_cam_max'] = [x[0:2].replace('M','') for x in df['f_cam']]\ndf['f_cam_max'].unique()","bdb4b9a5":"df['f_cam_max'] = numericize(df,'f_cam_max')\ndf['f_cam_max'].unique()","e8b23f25":"df['f_cam_count'] = [x.count('MP') for x in df['f_cam']]\ndf['f_cam_count'].unique()","34be699a":"df['f_cam_max'].equals(df['f_cam_ord'])","808ba9b0":"df.drop('f_cam_ord',axis=1, inplace=True)","bec3699d":"plot_grouped_correlation_with_col(df,'mobile_price')","8c34a47f":"final_df = df[['battery_power','disp_size','dual_sim_ord','f_cam_max','f_cam_count','p_cam_max','p_cam_count','int_memory','mob_depth_rearr','mob_height_rearr','mob_width_rearr','mob_weight', 'mobile_color_basic_cat','mobile_name_brand_short_new','mp_speed','network_count','num_cores_ord','os_version_new','ram','res_dim_1','res_dim_2','mobile_price']]","4e3fb4ec":"cols=['Battery Power','Display Size','Sim count','Front camera max MP','Front camera count','Primary camera max MP','Primary camera count','Internal Memory','Mobile Depth','Mobile Height','Mobile Width','Mobile Weight', 'Mobile Color','Mobile Brand','Processor Speed','Networks','Core','OS','Ram','Resolution x','Resolution y','Mobile Price']","d8438c30":"old_cols = ['battery_power','disp_size','dual_sim_ord','f_cam_max','f_cam_count','p_cam_max','p_cam_count','int_memory','mob_depth_rearr','mob_height_rearr','mob_width_rearr','mob_weight', 'mobile_color_basic_cat','mobile_name_brand_short_new','mp_speed','network_count','num_cores_ord','os_version_new','ram','res_dim_1','res_dim_2','mobile_price']","638e722d":"col_mapping = dict(zip(old_cols,cols))","ec744955":"final_df = final_df.rename(columns=col_mapping)\nfinal_df","4ceb6a2e":"plot_correlation_with_col(final_df,'Mobile Price')","01f783b4":"!pwd","67214f63":"final_df.to_csv('Mobile Price Factors.csv',index=False)","f7b04d5f":"**disp_size seems to have both cm and inch info. Choose one among them and numericize it**","58e18576":"**Observations:**\n* All values for bluetooth seem to be 'Yes'. No relationship to be found\n* There are values which have numbers to be used for correlation analysis if unnecessary strings are removed\n* Mobile name seem to have lot of information but they seem to be covered in other columns separately","16ddd4b7":"**Check the first five records to have an initial look at the columns and values**","4a26fb48":"**Also maintain a dictionary(or mapping) to maintain the list of columns which are cleaned**","427d70e1":"**Check how many numeric columns are present for easily doing a relationship analysis**","b45bed39":"**Some columns seem to have data which can easily be made numeric by removing strings from it. For example, Rs.,Pixels,mm,mp etc.\nTry to remove them and check the correlation(relationship) with mobile_price**\n","bf42bbb2":"**Once data is cleaned and compared to unprocessed data in each column for understanding the impact of processing, we can move relevant columns for final analysis and presentation**","d12ddcd4":"**Read the file**","9928802a":"**Checking rest of the columns one by one. Probably there is more scope of cleaning in the negatively correlated ones**","da579448":"**Check again how many numeric columns are present for easily doing a relationship analysis**","abda7ce2":"**Try to plot a correlation map**","68f7de8a":"**Clean the mobile price column also so that we can compare it as a number with other columns**","0583c848":"**Some values seem to be 92 and 75 which are outliers or out of the general range.\nSomething has gone wrong in this data collection. \nSo check mob height and width too for confirmation.**","9c7abde4":"**Looks like the mobile dimensions were retrieved from some string and the order of height, weight, depth was not the same everywhere.\nSort it to get it right**","831e8c3e":"# **TODO: Add columns for highest network option, p_cam_max,p_cam_num, f_cam_max,f_cam_num**","2f356ce1":"**Check unique values in each column to understand values of each column**","a798ff35":"**Some columns seem to have values which are in words, but represents a number. Convert them**","4561afed":"**View it as a sorted list of factors with increasing order of correlation**","40690ec9":"**More cleaning should be possible for f_cam if we represent main\/overall f_cam MP as a number**","34fcee65":"**Ram, internal memory, mp speed, mob weight seem to be related to some extend in the same order**","c11a71ff":"**Maintain a copy of initial data as such for future reference and comparison, if needed**","89f0ff8e":"**Get more details about the data types and null values in the data**"}}