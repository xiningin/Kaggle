{"cell_type":{"8a8307b9":"code","3bc7b36d":"code","44554130":"code","61dede64":"code","dfe59097":"code","828ab1ca":"markdown","aa14eb5f":"markdown","de4a4880":"markdown","e7e1c830":"markdown"},"source":{"8a8307b9":"# Operating system interaction\nimport os\n\n# Data manipulation\nimport pandas as pd","3bc7b36d":"file_path_list = []","44554130":"for dirname, _, filenames in os.walk(\"\/kaggle\/input\/\"):\n   for filename in sorted(filenames):\n        file_path = os.path.join(dirname, filename)\n        file_path_list.append(file_path)\nfile_path_list[:3]","61dede64":"crime_data = pd.DataFrame(data=None)\n\nfor file_path in file_path_list:\n    crime_data = pd.concat([crime_data, pd.read_csv(file_path)])","dfe59097":"crime_data.shape","828ab1ca":"## Result\nThe result is a single large **DataFrame** containing all of the data from all of the individual CSV files. The data is also in chronological order because we read and concatenated all of the individual CSV files in ascending order.","aa14eb5f":"## Concatenate\nWe create a new **DataFrame** to store all of the data that we will read from all of the individual CSV files. Then we loop through all of the file paths in our list and get Pandas to read the CSV data and append it to the end of our **DataFrame**.","de4a4880":"## Read\nRunning **os.walk** without the **sorted** method will produce an unsorted output. Therefore we run **filenames** through the **sorted** method to read all of the individual CSV files in ascending order. This will produce a chronological dataset when we come to concatenating all of the individual CSV files.","e7e1c830":"## Import\nWe use Python's **OS** module to provide functions to interact with the operating system, and **Pandas** to read and concatenate all of the individual CSV files into one single **DataFrame**."}}