{"cell_type":{"d654922e":"code","49f2c711":"code","b2b7653e":"code","68bc0de6":"code","359f302e":"code","c2943037":"code","2cb8c66f":"code","5f4664bc":"code","86ac81ee":"code","bf69390b":"code","41f84403":"code","52bf42d0":"code","61b90da2":"code","d2fadb05":"code","18bde1c9":"code","a4ffec6e":"code","41e61575":"code","a0f7e12e":"code","8500897c":"code","582058b7":"code","0942b530":"code","fd1f3cb9":"code","bfa283ce":"code","a3b6ecef":"code","2b925979":"code","78d3a1ba":"code","811337d1":"code","eb455caa":"code","4582ca46":"code","e5034198":"code","b1d902f8":"code","e4f287e8":"code","3c252e90":"code","c96ad8cf":"code","78eddd22":"code","65377f4d":"code","d220c479":"code","6846b88f":"code","cb4574c2":"code","cdd14850":"code","a2886721":"markdown","e0701d09":"markdown","ecee78a9":"markdown","4dd726ad":"markdown","a97327ba":"markdown","e4ba137e":"markdown","38e357ac":"markdown","39b0415f":"markdown"},"source":{"d654922e":"# import packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","49f2c711":"#reading dataset\ntrain_data = pd.read_csv(\"..\/input\/heartbeat\/mitbih_train.csv\", header = None)\ntest_data = pd.read_csv(\"..\/input\/heartbeat\/mitbih_test.csv\", header = None)","b2b7653e":"train_data","68bc0de6":"# checking null values\ntrain_data.isnull().sum()","359f302e":"train_data.iloc[:, 187].unique()","c2943037":"# casting into int\ntrain_data[187] = train_data[187].astype('int')","2cb8c66f":"test_data[187] = test_data[187].astype('int') ","5f4664bc":"# Display counts of each classes - Most of Data samples are of normal HeartBeats & its a biased data\nsns.catplot(x = 187, kind = 'count', data = train_data)","86ac81ee":"plt.figure(figsize= (10,10))\nmy_circle = plt.Circle((0,0), 0.7, color = 'white') \nplt.pie(train_data[187].value_counts(), labels=['Normal Beats','Unknown Beats','Ventricular ectopic beats','Supraventricular ectopic beats',\n                                                'Fusion Beats'], autopct = '%0.0f%%', colors = ['red','orange','blue','magenta','cyan'])\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.show()","bf69390b":"sns.set_style('whitegrid')\nplt.figure(figsize = (20,8))\nplt.plot(train_data.iloc[0, 0:187], color = 'red')\nplt.show()","41f84403":"# Splitting data into Each Classes\ndf_1 = train_data[train_data[187] == 1]\ndf_2 = train_data[train_data[187] == 2]\ndf_3 = train_data[train_data[187] == 3]\ndf_4 = train_data[train_data[187] == 4]","52bf42d0":"sns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,8))\nplt.plot(train_data.iloc[0, 0:187], color = 'red', label = 'Normal Heart Beats')\nplt.plot(df_1.iloc[0, 0:187], color = 'blue', label = 'Supraventricular ectopic beats')\nplt.title(\"ECG Normal vs Supraventricular Ectopic Beats\", fontsize = 12)\nplt.xlabel(\"Time (in ms)\")\nplt.ylabel(\"Heart Beat Amplitude\")\nplt.legend()\nplt.show()","61b90da2":"sns.set_style(\"whitegrid\")\nplt.figure(figsize=(20,8))\nplt.plot(train_data.iloc[0, 0:187], color = 'red', label = 'Normal Heart Beats')\nplt.plot(df_2.iloc[0, 0:187], color = 'blue', label = 'Ventricular ectopic beats')\nplt.title(\"ECG Normal vs Ventricular Ectopic Beats\", fontsize = 12)\nplt.xlabel(\"Time (in ms)\")\nplt.ylabel(\"Heart Beat Amplitude\")\nplt.legend()\nplt.show()","d2fadb05":"from sklearn.utils import resample\n\ndf_1_upsample = resample(df_1, n_samples = 20000, replace = True, random_state = 123)\ndf_2_upsample = resample(df_2, n_samples = 20000, replace = True, random_state = 123)\ndf_3_upsample = resample(df_3, n_samples = 20000, replace = True, random_state = 123)\ndf_4_upsample = resample(df_4, n_samples = 20000, replace = True, random_state = 123)","18bde1c9":"# downsample the high number of counts in one class, select random samples 2000 samples from class 0 samples\ndf_0 = train_data[train_data[187]==0].sample(n =20000, random_state=123)","a4ffec6e":"# merge and all dataframes to create new train samples\ntrain_df = pd.concat([df_0, df_1_upsample, df_2_upsample, df_3_upsample, df_4_upsample])","41e61575":"plt.figure(figsize= (10,10))\nmy_circle = plt.Circle((0,0), 0.7, color = 'white') \nplt.pie(train_df[187].value_counts(), labels=['Normal Beats','Unknown Beats','Ventricular ectopic beats','Supraventricular ectopic beats',\n                                                'Fusion Beats'], autopct = '%0.0f%%', colors = ['red','orange','blue','magenta','cyan'])\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.show()","a0f7e12e":"# Display counts of each classes - Most of Data samples are of normal HeartBeats & its a biased data\nsns.catplot(x = 187, kind = 'count', data = train_df)","8500897c":"# target Y\ntarget_train = train_df[187]\ntarget_test = test_data[187]","582058b7":"target_train.unique()","0942b530":"# convert integer values into categorical one hot encoding\n# Class 1 - [0,1,0,0,0]\n# Class 4 - [0,0,0,0,1]","fd1f3cb9":"from keras.utils.np_utils import to_categorical\ny_train = to_categorical(target_train)","bfa283ce":"y_test = to_categorical(target_test)","a3b6ecef":"X_train = train_df.iloc[:, :-1].values\nX_test = test_data.iloc[:, :-1].values","2b925979":"# this data is in single dimension, 1D (no of samples, features)\nX_train.shape","78d3a1ba":"# For conv1D dimentionality should be 187X1 where 187 is number of features and 1 = 1D Dimentionality of data\nX_train = X_train.reshape(len(X_train),X_train.shape[1],1)\nX_test = X_test.reshape(len(X_test),X_test.shape[1],1)","811337d1":"X_train.shape","eb455caa":"from keras.models import Sequential\nfrom keras.layers import Dense # for fully connected layers dense will be used\nfrom keras.layers import Conv1D, MaxPooling1D, Flatten\nfrom keras.optimizers import Adam\n\n# avoid overfitting by normalizing the samples\nfrom keras.layers.normalization import BatchNormalization","4582ca46":"def build_model():\n    model = Sequential()\n    \n    # Filters = Units in Dense Total number of Neurons\n    # Padding = 'same' , zero-padding, Add zero pixels all around input data\n    model.add(Conv1D(filters = 64, kernel_size = 6, activation='relu', padding = 'same', input_shape = (187, 1))) #we pass individual values hence not 100000,187,1\n    \n    # Normalization to avoid overfitting\n    model.add(BatchNormalization())\n    \n    # Pooling \n    model.add(MaxPooling1D(pool_size=(3), strides = (2), padding = 'same'))\n\n    model.add(Conv1D(filters = 64, kernel_size = 6, activation='relu', padding = 'same'))\n    model.add(BatchNormalization())\n    model.add(MaxPooling1D(pool_size=(3), strides = (2), padding = 'same'))\n\n    model.add(Conv1D( filters = 64, kernel_size = 6, activation='relu', padding = 'same'))\n    model.add(BatchNormalization())\n    model.add(MaxPooling1D(pool_size=(3), strides = (2), padding = 'same'))\n\n    # Flatten \n    model.add(Flatten())\n\n    # Fully connected layer\n    # input layer\n    model.add(Dense(units = 64, activation='relu'))\n    \n    # Hidden Layer\n    model.add(Dense(units = 64, activation='relu'))\n    \n    # Output Layer\n    model.add(Dense(units = 5, activation='softmax'))\n\n    # loss = 'categorical_crossentropy'\n    model.compile(optimizer = 'Adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n    return model","e5034198":"model = build_model()","b1d902f8":"# This is for one sample, i.e. one row\nmodel.summary()","e4f287e8":"history = model.fit(X_train, y_train, epochs = 15, batch_size = 32, validation_data=(X_test, y_test))","3c252e90":"# evaluate ECG Test Data\nmodel.evaluate(X_test, y_test)","c96ad8cf":"# converting hsitory to dataframe\npd.DataFrame(history.history)\npd.DataFrame(history.history)[['accuracy', 'val_accuracy']].plot()\npd.DataFrame(history.history)[['loss', 'val_loss']].plot()","78eddd22":"# Make Prediction\npredict = model.predict(X_test)","65377f4d":"# Predicted o\/p will be in probability distribution \npredict","d220c479":"# distributional probability to integers\nyhat = np.argmax(predict, axis = 1)","6846b88f":"from sklearn.metrics import classification_report, confusion_matrix\nconfusion_matrix(np.argmax(y_test, axis = 1), yhat)","cb4574c2":"plt.figure(figsize=(8,6))\nsns.heatmap(confusion_matrix(np.argmax(y_test, axis =1), yhat), annot = True, fmt = '0.0f', cmap= 'RdPu')","cdd14850":"print(classification_report(np.argmax(y_test, axis=1), yhat))","a2886721":"**Checking the confusion matrix and classification report**","e0701d09":"This is not good for classification, we always convert them into catagorical one hot encoding","ecee78a9":"This will work good with ANN Classification","4dd726ad":"An Electro Cardio Gram (ECG) is a simple test that can can be used to check you heart rhythm nad electrical activity.\n\nClasses = [N:0, S:1, V:2, F:3, Q:4]\n\n* N: Non Ectopic beats (Normal beats)\n* S: Supraventrical ectopic beats\n* V: Ventricular ectopic beats\n* F: Fusion beats\n* Q: Unknown beats","a97327ba":"**Exploratory Data Analysis**","e4ba137e":"**Data Augmentation**\n* Since data is biased we will upsample it","38e357ac":"**Accuracy of the model comes out to be 0.9975!**","39b0415f":"**CNN - Conv1D**"}}