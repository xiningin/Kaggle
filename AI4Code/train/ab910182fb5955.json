{"cell_type":{"3c1c9511":"code","dbc5ba58":"code","611b21db":"code","8f33fc22":"code","832066be":"code","18f8f90c":"code","02814ef1":"code","6061ff01":"code","51cbb90c":"markdown","e2d99492":"markdown","04b545d2":"markdown","c4fb70e2":"markdown","7ee71444":"markdown","8bdb79ee":"markdown","cc52d48f":"markdown","462400e7":"markdown","e2a29b47":"markdown"},"source":{"3c1c9511":"import numpy as np\nimport pandas as pd\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras.utils import to_categorical\nfrom keras.preprocessing import image\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom keras.utils import to_categorical\nfrom tqdm import tqdm\nimport os\nimport cv2","dbc5ba58":"train_path='..\/input\/train\/train'\ntest_path='..\/input\/test\/test'","611b21db":"train = pd.read_csv(\"..\/input\/train.csv\")\ntrain.head()","8f33fc22":"id=train['id'].values\ncactus=train['has_cactus'].values\n\ntrain=[]\nX=[]\nY=[]\na=0\n\nfor i in tqdm(sorted(os.listdir(train_path))):\n    path=os.path.join(train_path,i)\n    i=cv2.imread(path,cv2.IMREAD_COLOR)\n    X.append(i)\n    train.append([np.array(cactus),cactus[a]])\n    a=a+1\n\ntrain=np.array(train)\nY=train[:,1]\ntrain=train[:,0]\nX=np.array(X)\n\nX.shape\n\nX=X\/255\ntrain=train\/255","832066be":"test1=[]\nX_test=[]\n\nfor i in tqdm(os.listdir(test_path)):\n    id=i\n    path=os.path.join(test_path,i)\n    i=cv2.imread(path,cv2.IMREAD_COLOR)\n    X_test.append(i)\n    test1.append([np.array(i),id])\n\nX_test=np.array(X_test)\nX_test.shape\ntest1=np.array(test1)\nid_test=test1[:,1]\ntest1=test1[:,0]\ntest1.shape\n\nX_test=X_test\/255\ntest1=test1\/255","18f8f90c":"model = Sequential()\nmodel.add(Conv2D(filters=128,kernel_size=2,padding=\"same\",activation=\"relu\",input_shape=(32,32,3)))\nmodel.add(MaxPooling2D(pool_size=2,strides=1))\nmodel.add(Dropout(0.2))\nmodel.add(Conv2D(filters=64,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2,strides=1))\nmodel.add(Dropout(0.2))\nmodel.add(Conv2D(filters=32,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2,strides=1))\nmodel.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(Dense(32,activation=\"relu\"))\nmodel.add(Dropout(0.7))\nmodel.add(Dense(1,activation=\"sigmoid\"))\nmodel.summary()","02814ef1":"model.compile(loss=\"binary_crossentropy\",optimizer=\"adam\",metrics=[\"accuracy\"])\nh=model.fit(X,Y,batch_size=256,validation_split=0.2,epochs=100)","6061ff01":"pred=model.predict(X_test)\nids=[]\nlabel=[]\na=0\nfor i in tqdm(os.listdir(test_path)):\n    id=i\n    ids.append(id)\n    label.append(pred[a])\n    a=a+1\n\nlabel=np.array(label,dtype='float64')\nout=pd.DataFrame({'id': ids,'has_cactus':label[:,0]})\n\nout.to_csv('submission.csv',index=False,header=True)","51cbb90c":"Reading Train files","e2d99492":"#### Storing Images in Array (Testing Data)","04b545d2":"### Help Me Improve The Accuracy I Am New :)","c4fb70e2":"Setting Path ","7ee71444":"### Predicting","8bdb79ee":"#### Storing Images and Id in Different arrays (Training Data)","cc52d48f":"### Imoprting required libraries","462400e7":"### Training Model","e2a29b47":"### Creating Model"}}