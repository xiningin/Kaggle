{"cell_type":{"f3ff949b":"code","1eaa5611":"code","eabfc2d5":"code","8e6834e7":"code","4b6cdb5e":"code","d767dc58":"code","7c6691d0":"code","f6b085b9":"code","1d73c6a2":"code","2b47e593":"code","ab842dce":"markdown","78a9a415":"markdown","f26ef844":"markdown","7881b935":"markdown","cbbe377d":"markdown"},"source":{"f3ff949b":"# jsu to see what is the data location\n! ls \/kaggle\/input -l\n! ls \/kaggle\/input\/imet-2021-fgvc8 -l","1eaa5611":"%matplotlib inline\nimport numpy as np\nimport pandas as pd","eabfc2d5":"df_label_map = pd.read_csv(\"\/kaggle\/input\/imet-2021-fgvc8\/label_map.csv\", index_col=\"attribute_id\")\nprint(f\"len: {len(df_label_map)}\")\nprint(df_label_map.head())","8e6834e7":"df_label_map[\"is_OR\"] = ['or' in name for name in df_label_map[\"attribute_name\"]]\ndf_label_map[\"is_AND\"] = ['and' in name for name in df_label_map[\"attribute_name\"]]\ndf_label_map[\"topic\"] = [name.split(\"::\")[0] if \"::\" in name else \".\" for name in df_label_map[\"attribute_name\"]]\ntopics = set(df_label_map['topic'])\n\nprint(f\"include OR: {sum(df_label_map['is_OR'])}\")\nprint(f\"include AND: {sum(df_label_map['is_AND'])}\")\n\ndf_label_map['topic'].hist()","4b6cdb5e":"df_train = pd.read_csv(\"\/kaggle\/input\/imet-2021-fgvc8\/train-from-kaggle.csv\")\nprint(f\"len: {len(df_train)}\")\nprint(df_train.head())","d767dc58":"import itertools\n\nlabel_map = dict(zip(df_label_map.index, df_label_map['attribute_name']))\nCOUNT_THR = 1000\n\nlabels_all = list(itertools.chain(*[[int(lb) for lb in lbs.split(\" \")] for lbs in df_train['attribute_ids']]))\nlb_hist = dict(zip(range(max(labels_all) + 1), np.bincount(labels_all)))\ndf_hist = pd.DataFrame([dict(lb=label_map[lb], count=count) for lb, count in lb_hist.items() if count > COUNT_THR]).set_index(\"lb\")\n\nax = df_hist.plot(kind=\"bar\", grid=True, title=\"ids counts\", figsize=(18, 4))","7c6691d0":"labels_counts = np.bincount(labels_all)\n[[ax]] = pd.DataFrame(labels_counts).hist(bins=500)\nax.set_yscale('log')\nax.set_xscale('log')\nax.set_ylabel('nb labes with this nymber of samples')\nax.set_xlabel('nb of sampls per label')","f6b085b9":"df_train['nb_classes'] = [len(lbs.split(\" \")) for lbs in df_train['attribute_ids']]\nlb_hist = dict(zip(range(25), np.bincount(df_train['nb_classes'])))\ndf_hist = pd.DataFrame([dict(lb=lb, count=count) for lb, count in lb_hist.items()]).set_index(\"lb\")\n\nprint(f\"max lbs: {max(df_train['nb_classes'])}\")\ndf_hist.plot(kind=\"bar\", grid=True, title=\"ids histogram\", figsize=(10, 4))\nprint(lb_hist)","1d73c6a2":"import tqdm\nfrom itertools import groupby\n\nls_tops = []\nfor idx, row in tqdm.tqdm(df_train.iterrows(), total=len(df_train)):\n    ids = row[\"attribute_ids\"].split()\n    tops = [df_label_map.loc[int(i), 'topic'] for i in ids]\n    t_hist = {k: len(list(g)) for k, g in groupby(tops)}\n    # print((ids, tops)\n    ls_tops.append(dict(id=row['id'], **t_hist))\n\ndf_train = pd.merge(df_train, pd.DataFrame(ls_tops), on=\"id\")\ndf_train.head()","2b47e593":"df_train[list(topics)].plot(kind=\"hist\", grid=True, alpha=0.5, bins=50)\ndf_train[list(topics)].max()","ab842dce":"## Frequency - topic per sample\n\nExploring the cumulation of same topics per image, for some it is atural for soem it can be confusing...","78a9a415":"## Frequency - labels per sample\n\nAlso labeling per image seems to be one to many with multiple same topis per image...","f26ef844":"# View the labels details\n\nCheckout the label mapping , there seems to be some topics\nnote that country has operand inside AND and OR which would be better encoded with just primitives","7881b935":"# Data exploration\nChecking what data do we have available and what is the labels distribution...","cbbe377d":"# Annotations - labed data"}}