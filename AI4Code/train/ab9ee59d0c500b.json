{"cell_type":{"6e15d6f5":"code","d132f20f":"code","77fd16d9":"code","232bb3aa":"code","b51b0f23":"code","874d764c":"code","607c55ff":"code","dcb683fe":"code","bd6985af":"code","77264bbe":"code","d49c7e12":"code","75de7205":"code","0122ea16":"code","0f28fa52":"code","191cf1bf":"code","0097edc8":"code","8ccc3097":"code","5c8a2be7":"code","06594a0e":"code","d60c7320":"code","50d34175":"code","8ac1e1c4":"code","5b542348":"code","ea747b7b":"code","1cb00470":"code","eb551713":"code","f0f4e8a5":"code","03f995c1":"code","58ae8f5c":"code","ef2bbed0":"markdown","53e20ce6":"markdown","868875b7":"markdown","17bfedaa":"markdown","758f7838":"markdown","7b4d5304":"markdown","9748448b":"markdown","2918f14f":"markdown","38987271":"markdown","b1a51db1":"markdown","a7a7e8ea":"markdown","ce9d97d3":"markdown","427fc691":"markdown","dd70528c":"markdown","16247de6":"markdown","64cd230d":"markdown","3f7f4b4d":"markdown","b94f42e4":"markdown","3333ce66":"markdown","6f31d3cf":"markdown"},"source":{"6e15d6f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d132f20f":"import numpy as np\nimport pandas as pd\nfrom copy import deepcopy\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","77fd16d9":"isl_df = pd.read_csv('\/kaggle\/input\/indian-super-league\/isl_player_final.csv')","232bb3aa":"isl_df.shape","b51b0f23":"isl_df.head()","874d764c":"isl_df.tail()","607c55ff":"isl_df.info()","dcb683fe":"isl_df.describe().T.round(1)","bd6985af":"isl_df[(isl_df[\"country_id\"] == 1) & (isl_df[\"position_id\"] == 2)]","77264bbe":"indian_forwards = deepcopy(isl_df[(isl_df[\"country_id\"] == 1) & (isl_df[\"position_id\"] == 2)])","d49c7e12":"# resetting index\nindian_forwards.reset_index(drop=True, inplace=True)","75de7205":"# checking new dataframe\nindian_forwards[indian_forwards[\"name\"].str.contains(\"Sunil\")]","0122ea16":"fwd_mins_df = indian_forwards.groupby([\"id\", \"name\"])[\"minutes_played\"].sum().reset_index()","0f28fa52":"fwd_mins_df.head()","191cf1bf":"px.bar(x=\"name\", y=\"minutes_played\", text=\"minutes_played\", data_frame=fwd_mins_df)","0097edc8":"# considered all stats where we can compare forwards\nper90Cols = [\"events.goals\", \"events.assists\", \"events.shots\", \"events.shots_on_target\", \"events.chances_created\",\n             \"events.fouls_suffered\", \"touches.total\", 'touches.aerial_duel.won']\n\nfor col in per90Cols:\n    indian_forwards[col + \"Per90\"] = indian_forwards[col].divide(indian_forwards[\"minutes_played\"]).multiply(90)\n\nindian_forwards = indian_forwards[indian_forwards[\"minutes_played\"] > 0]\n    \ncols_for_radar = [i + \"Per90\" for i in per90Cols]\nprint(cols_for_radar)","8ccc3097":"# checking the per 90 columns\nindian_forwards.loc[(indian_forwards[\"id\"] == 19150), cols_for_radar].sum()","5c8a2be7":"fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards[\"id\"] == 19150), cols_for_radar].sum(),\n                    theta=cols_for_radar, line_close=True)\nfig.update_traces(fill='toself')\nfig.show()","06594a0e":"from sklearn.preprocessing import MinMaxScaler","d60c7320":"# Using to transform data\nscaler = MinMaxScaler()\nindian_forwards[cols_for_radar] = scaler.fit_transform(indian_forwards[cols_for_radar])","50d34175":"# Checking\nindian_forwards[cols_for_radar].max()","8ac1e1c4":"indian_forwards[cols_for_radar].min()","5b542348":"fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards[\"id\"] == 19150), cols_for_radar].sum(),\n                    theta=cols_for_radar, line_close=True)\nfig.update_traces(fill='toself')\nfig.show()","ea747b7b":"for i, row in indian_forwards.iterrows():\n    print(row[\"name\"])\n    fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards[\"id\"] == row[\"id\"]), cols_for_radar].sum(),\n                        theta=cols_for_radar, line_close=True,\n                        title=row[\"name\"])\n    fig.update_traces(fill='toself')\n    fig.show()","1cb00470":"# removing duplicates\nind_fwds_id_names = indian_forwards.drop_duplicates(subset=[\"id\"])[[\"id\", \"name\"]]","eb551713":"ind_fwds_id_names.head()","f0f4e8a5":"# setting the max value for plot\nisl_max = indian_forwards[cols_for_radar].max().max()","03f995c1":"import plotly.graph_objects as go","58ae8f5c":"for i, row in ind_fwds_id_names.iterrows():\n    if row[\"id\"] == 19150:\n        continue\n    print(row[\"name\"])\n    # Initiate the plotly go figure\n    fig = go.Figure()\n    # Add Radar plots for different players:\n    fig.add_trace(go.Scatterpolar(\n        r=indian_forwards.loc[(indian_forwards[\"id\"] == 19150), cols_for_radar].sum(),\n        theta=cols_for_radar,\n        fill='toself',\n        name='Sunil Chhetri'))\n    fig.add_trace(go.Scatterpolar(\n        r=indian_forwards.loc[(indian_forwards[\"id\"] == row[\"id\"]), cols_for_radar].sum(),\n        theta=cols_for_radar,\n        fill='toself',\n        name=row[\"name\"]))\n    # Additional properties for the plot:\n    fig.update_layout(\n        title=\"Sunil Chhetri vs \" + row[\"name\"],\n    polar=dict(\n        radialaxis=dict(\n        visible=True,\n        range=[0, isl_max]\n        )),\n    showlegend=True\n    )\n    fig.show()","ef2bbed0":"# Making a new dataset for Indain Forwards using deepcopy","53e20ce6":"ind_fwds_id_names.shape","868875b7":"# Plotting all the indian forwards using plotly","17bfedaa":"# Adding columns","758f7838":"# Getting the data ready for final analysis","7b4d5304":"# Using Radar plot for analysis from plotly library","9748448b":"# Viewing the data","2918f14f":"# Viewing Indain forward","38987271":"# Plotting a bar graph","b1a51db1":"### We can standardize the data using Min Max Scaler","a7a7e8ea":"### Creating per 90 minutes stats columns for fair analysis","ce9d97d3":"# Importing required libraries","427fc691":"# Importing libraries for Multiple Trace Radar Chart for final analysis","dd70528c":"### From the ablove graphs we can conclude that - \n### 1. Thongkhosiem Haokip has quite similar stats compared to Sunil Chhetri.\n### 2. Manvir Singh has all stats almost similar to Sunil Chhetri except for fouls_suffered.\n### 3. Liston Colaco is one of the best answer to our question as he as better stats than Sunil Chhetri in terms of per90 except for aerial_duels_won.\n### 4. Leon Augustin can improve in the long run as he same number of shots but shots on target is less.\n### 5. Devendra Murgaonkar is also headed in the right direction but his numbers are less.\n### 6. Ishan Pandita has all the stats really high compared to others but has suffered less fouls and chances created are less because he is a central player, he may not be the next Sunil Chhetri but his numbers says that he will be the next big thing in Indian Football.","16247de6":"# Creating a new dataframe using name and minutes played","64cd230d":"# Importing MinMaxScaler to transform data","3f7f4b4d":"### Now we can easily analyze all the data","b94f42e4":"### Above we can see that all values are not in the same range and hence nothing can be inferred from this plot","3333ce66":"### We can see that although all the data is standardized using MinMaxScaler, it is not in the same range\n### We need a way to bring all the data to same range i.e. between 0 and 1 for fair analysis\n### To do this we can put Sunil Chhetri's graph with other player's graph for easier comparison and to have same range\n","6f31d3cf":"# Loading the Dataset"}}