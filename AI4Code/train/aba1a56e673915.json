{"cell_type":{"ef232fa5":"code","a818cd81":"code","2cea56b5":"code","d4dcf89d":"code","65a16b52":"code","022010c6":"code","d3ea8630":"code","cc342c3e":"code","9013cdfb":"code","454f1965":"code","aeea9df7":"code","6d1a989f":"code","a0bc0504":"code","90e350ec":"code","4982b4ef":"code","264ea847":"code","5db4ab3e":"code","190e1f8f":"code","d1a9fb28":"code","12c31fd1":"markdown","852ffabf":"markdown","133156fc":"markdown","021848fe":"markdown","9f42ee5f":"markdown","3ebc521a":"markdown"},"source":{"ef232fa5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","a818cd81":"data = pd.read_csv(\"..\/input\/bitcoin-price-usd\/main.csv\")\ndata","2cea56b5":"data['Open Time'] = pd.to_datetime(data['Open Time'], unit='ms')\ndata['Close Time'] =pd.to_datetime(data['Close Time'],unit='ms')\ndata","d4dcf89d":"import plotly.graph_objects as go\nd = data[:10]\nfig = go.Figure(data=[go.Candlestick(x=d['Open Time'],\n                open=d['Open'],\n                high=d['High'],\n                low=d['Low'],\n                close=d['Close'])])\n\nfig.show()","65a16b52":"pip install stock-pandas\n","022010c6":"pip install stockstats","d3ea8630":"from stock_pandas import StockDataFrame as SDF\nfrom stockstats import StockDataFrame","cc342c3e":"data1 = data[['Open Time','Open','Close','High','Low','Volume']]\ndata1","9013cdfb":"data1_df = StockDataFrame.retype(data1)\ndata1_df","454f1965":"data_df=data1_df.set_index('open time')\ndata_df","aeea9df7":"rsi_6 = pd.DataFrame(data1_df['rsi_6'])\nrsi_15 = pd.DataFrame(data1_df['rsi_15'])","6d1a989f":"data_df","a0bc0504":"import matplotlib.pyplot as plt\n\ndd = data_df[:50]\n\nplt.figure(figsize=(15,7))\nplt.plot(dd['rsi_6'],'g',label=\"rsi_6\")\nplt.plot(dd['rsi_15'], 'r', label=\"rsi_15\")\n#plt.plot(df[\"Close\"], label=\"Close\")\nplt.legend()\nplt.show()","90e350ec":"from stock_pandas import StockDataFrame as SDF\ndata2 = SDF(\n    data1_df,\n    date_col='open time',\n    # Which is equivalent to `time_frame=TimeFrame.M5`\n    time_frame='5m'\n)\ndata2","4982b4ef":"data2_15m = data2.cumulate()\n\ndata2_15m","264ea847":"import matplotlib.pyplot as plt\n\ndd1 = data2_15m[:50]\n\nplt.figure(figsize=(15,7))\nplt.plot(dd1['rsi_6'],'g',label=\"rsi_6\")\nplt.plot(dd1['rsi_15'], 'r', label=\"rsi_15\")\n#plt.plot(df[\"Close\"], label=\"Close\")\nplt.legend()\nplt.show()","5db4ab3e":"macd = data2_15m['macd']","190e1f8f":"data2_15m['macd']= macd\ndata2_15m","d1a9fb28":"import matplotlib.pyplot as plt\n\ndd2 = data2_15m[:300]\n\nplt.figure(figsize=(15,7))\nplt.plot(dd2['macd'],'y',label=\"macd\")\n#plt.plot(dd2['rsi_15'], 'r', label=\"rsi_15\")\n#plt.plot(df[\"Close\"], label=\"Close\")\nplt.legend()\nplt.show()","12c31fd1":"## here we have taken only 10 instance for proper view, with Open Time for plot, increase instance for more data","852ffabf":"***Moving average convergence divergence (MACD) is a trend-following momentum indicator that shows the relationship between two moving averages of a security\u2019s price. ***","133156fc":"# RSI","021848fe":"# MACD","9f42ee5f":"***The relative strength index (RSI) is a momentum indicator used in technical analysis that measures the magnitude of recent price changes to evaluate overbought or oversold conditions in the price of a stock or other asset. The RSI is displayed as an oscillator (a line graph that moves between two extremes) and can have a reading from 0 to 100.***","3ebc521a":"# Combining to 5min interval"}}