{"cell_type":{"fbf9f944":"code","73df8e0a":"code","50297eab":"code","ee8214b9":"code","c5260a3b":"code","0e6e1849":"code","3574cd2b":"code","14c3cdfb":"code","7c04b808":"code","3bd1492e":"code","dc6122d2":"code","e4843b27":"code","616d3b48":"code","bc47f8e7":"code","fdf2e98b":"code","e1eb052c":"code","da9f3fdd":"code","6c52e356":"code","f6e63b9d":"code","5b97ee8b":"code","c04ea231":"code","ec76cd83":"code","260dcff8":"code","115b38e0":"code","b98047b1":"markdown","a788044d":"markdown"},"source":{"fbf9f944":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","73df8e0a":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nimport lightgbm as lgb\nfrom sklearn.metrics import mean_squared_error","50297eab":"data=pd.read_csv('\/kaggle\/input\/craigslist-carstrucks-data\/vehicles.csv')\ndata","ee8214b9":"data.info()","c5260a3b":"data.isna().sum()","0e6e1849":"null_columns = data.columns[data.isna().mean()>0.25]\ndata = data.drop(null_columns,axis=1)","3574cd2b":"data","14c3cdfb":"unneeded_cols = ['url','region_url','image_url','description','id','posting_date',]\ndata = data.drop(unneeded_cols,axis=1)","7c04b808":"data","3bd1492e":"{column: len(data[column].unique()) for column in data.columns if data.dtypes[column] == 'object'}","dc6122d2":"def onehot_encode(df,cols,prefixes):\n    df=df.copy()\n    for col,prefix in zip(cols,prefixes):\n        dummies= pd.get_dummies(df[col],prefix=prefix)\n        df= pd.concat([df,dummies],axis=1)\n        df= df.drop(col,axis=1)\n    return df","e4843b27":"df= onehot_encode(data,\n                   ['region','manufacturer','fuel','title_status','transmission','type','state'],\n                   ['reg','manf','fuel','status','trans','type','state'])","616d3b48":"df","bc47f8e7":"df = df.drop('model',axis=1)","fdf2e98b":"for column in df.columns:\n    df[column] = df[column].fillna(df[column].mean())","e1eb052c":"df.isna().sum().sum()","da9f3fdd":"y = df.loc[:,'price']\nX = df.drop('price',axis=1)","6c52e356":"scaler = StandardScaler()\n\nX= scaler.fit_transform(X)","f6e63b9d":"X","5b97ee8b":"X_train,X_test, y_train,y_test = train_test_split(X,y, train_size = 0.7,random_state=34)","c04ea231":"lin_model = LinearRegression()\nlin_model.fit(X_train,y_train)\nlin_y_preds = lin_model.predict(X_test)","ec76cd83":"lgb_model = lgb.LGBMRegressor(\n            boosting_type = 'gbdt',\n            num_leaves = 31,\n            n_estimators = 100,\n            reg_lambda=1.0)\n\nlgb_model.fit(X_train,y_train)\nlgb_y_preds = lgb_model.predict(X_test)","260dcff8":"lin_loss = np.sqrt(mean_squared_error(y_test,lin_y_preds))\nlgb_loss = np.sqrt(mean_squared_error(y_test,lgb_y_preds))","115b38e0":"print('linear regression RMSE:', lin_loss)\nprint('Gradient boosted RMSE:', lgb_loss)","b98047b1":"# Preprocessing","a788044d":"# Spliting and Scaling"}}