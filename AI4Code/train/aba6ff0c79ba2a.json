{"cell_type":{"5612dee4":"code","4ea52db8":"code","4c5337cf":"code","b94cfa48":"code","6bfdc318":"code","63027f3f":"code","cd4e743d":"code","ee6a2afe":"code","97f0b369":"code","ce57e13e":"code","896cdfa8":"code","8dd2ccee":"code","f86918f0":"markdown","754be5ff":"markdown","da9ea0ff":"markdown","dd474864":"markdown","293bd5c9":"markdown","d2c6649b":"markdown","a4ca78e1":"markdown"},"source":{"5612dee4":"import numpy as np\nimport pandas as pd\nfrom tensorflow.keras.layers import Dense, Dropout,Activation, Conv2D, MaxPooling2D, Flatten\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.models import Sequential\nfrom keras.callbacks import EarlyStopping\nimport tensorflow as tf\nfrom PIL import Image \nimport os\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.preprocessing import image\n#from tensorflow.keras.applications.VGG import preprocess_input\n\nfrom tensorflow.keras.optimizers import Adam","4ea52db8":"\ntrain = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')\ntrain['label'] = train['label'].astype('string')\ntrain.head()","4c5337cf":"names_of_disease = pd.read_json('..\/input\/cassava-leaf-disease-classification\/label_num_to_disease_map.json', typ='series')\nnames_of_disease","b94cfa48":"plt.figure(figsize=(17, 12))\nfor i in range(8):\n    plt.subplot(4, 4, i + 1)\n    image = Image.open('..\/input\/cassava-leaf-disease-classification\/train_images\/'+ train.iloc[i]['image_id'])\n    array = np.array(image)\n    plt.imshow(array)\n    label=train.iloc[i]['label']\n    plt.title(f'{names_of_disease[int(label)]}')\nplt.show()","6bfdc318":"sizes = []\nfor i in range(1, len(train), 250):\n    image = Image.open('..\/input\/cassava-leaf-disease-classification\/train_images\/' + train.iloc[i]['image_id'])\n    array = np.array(image)\n    sizes.append(array.shape)\nprint('Picture size', set(sizes))","63027f3f":"datagen = ImageDataGenerator(validation_split=0.2,\n                             vertical_flip=True,\n                             rotation_range=90,\n                             width_shift_range=0.2,\n                             height_shift_range=0.2,\n                             horizontal_flip=True)\ntrain_datagen_flow = datagen.flow_from_dataframe(\n    dataframe=train,\n    directory='..\/input\/cassava-leaf-disease-classification\/train_images',\n    x_col='image_id',\n    y_col='label',\n    target_size=(300, 300),\n    batch_size=20,\n    subset='training',\n    seed=0)\n","cd4e743d":"valid_datagen_flow = datagen.flow_from_dataframe(\n    dataframe=train,\n    directory='..\/input\/cassava-leaf-disease-classification\/train_images',\n    x_col='image_id',\n    y_col='label',\n    target_size=(300, 300),\n    batch_size=20,    \n    subset='validation',\n    seed=0)\n","ee6a2afe":"import h5py\nmodel=Sequential()\n\noptimizer = Adam(lr=0.0002)\nbackbone = VGG16(weights='..\/input\/vgg16-weights\/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5', include_top=False,  pooling='max')\n\n                        \nmodel.add(backbone)\nmodel.add(Dense(5, activation='softmax'))\nmodel.compile(loss=\"categorical_crossentropy\", \n              optimizer=optimizer, \n              metrics=[\"accuracy\"])\nmodel.summary()","97f0b369":"\nmodel.fit_generator(train_datagen_flow,\n                    validation_data=valid_datagen_flow, \n                    epochs=10, \n                    verbose=1,shuffle=False)","ce57e13e":"submission = pd.DataFrame(columns=['image_id','label'])\nfor image_name in os.listdir('..\/input\/cassava-leaf-disease-classification\/train_images'):\n    image_path = os.path.join('..\/input\/cassava-leaf-disease-classification\/train_images', image_name)\n    image = tf.keras.preprocessing.image.load_img(image_path)\n    resized_image = image.resize((300,300))\n    numpied_image = np.expand_dims(resized_image, 0)\n    tensored_image = tf.cast(numpied_image, tf.float32)\n    submission = submission.append(pd.DataFrame({'image_id': image_name,\n                                                 'label': model.predict_classes(tensored_image)}))\n","896cdfa8":"submission.to_csv('\/kaggle\/working\/submission.csv', index=False)","8dd2ccee":"submission.head()","f86918f0":"## Data Augmentation","754be5ff":"### Optimizer: Adam","da9ea0ff":"### data splitting 0.2","dd474864":"## Loading Dataset","293bd5c9":"### learning rate=0.0002","d2c6649b":"## Training with vgg16","a4ca78e1":"## Submission"}}