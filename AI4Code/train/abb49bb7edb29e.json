{"cell_type":{"636f5315":"code","594c5203":"code","2bfbcfcd":"code","118edc64":"code","137c0c23":"code","02e7eb26":"code","f22c1b48":"code","6172d19e":"code","85c8606a":"code","4f85400c":"code","96bc227b":"code","a3260a83":"code","70b4c106":"code","4ede6c93":"code","57f1ad7a":"code","4987a753":"code","0a45e092":"code","22ef6363":"code","5f5ec699":"code","35d68837":"code","cb85aec6":"markdown","169e2b92":"markdown","90ac0181":"markdown","1c94ba8e":"markdown","80f379c1":"markdown","3461fa8e":"markdown","28cb039f":"markdown","d535b720":"markdown"},"source":{"636f5315":"import tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","594c5203":"path = '..\/input'\nheart_file = 'heart.csv'\nfile_path = os.listdir(path)\ndata_heart = pd.read_csv(os.path.join('..\/input',heart_file))","2bfbcfcd":"data_heart.shape","118edc64":"data_heart.columns","137c0c23":"for i in data_heart.index:\n    if (data_heart.loc[i].isnull().sum() != 0):\n        print('Missing value at ', i)\nprint('Done!')","02e7eb26":"data_heart_features = data_heart.loc[:,data_heart.columns!='target']\ndata_heart_target = data_heart.iloc[:,-1]","f22c1b48":"X_train_all,X_test_all,y_train_all,y_test_all = train_test_split(data_heart_features,data_heart_target,test_size=0.20,random_state=42)","6172d19e":"X_train_all.shape","85c8606a":"X_test_all.shape","4f85400c":"model = keras.Sequential([\n    keras.layers.Dense(64, activation=tf.nn.relu, input_shape=[len(X_train_all.keys())]),\n    keras.layers.Dense(64, activation=tf.nn.relu),\n    keras.layers.Dense(1)\n])","96bc227b":"optimizer = tf.keras.optimizers.RMSprop(0.001)\nmodel.compile(loss='mean_squared_error',\n                optimizer=optimizer,\n                metrics=['accuracy'])","a3260a83":"model.summary()","70b4c106":"model.fit(X_train_all,y_train_all,epochs=1000)","4ede6c93":"print(model.evaluate(X_test_all,y_test_all))","57f1ad7a":"data_features = data_heart.loc[:,['cp','slope','exang','thal']]\ndata_target = data_heart.iloc[:,-1]","4987a753":"X_train_four,X_test_four,y_train_four,y_test_four = train_test_split(data_features,data_target,test_size=0.20,random_state=42)","0a45e092":"model = keras.Sequential([\n    keras.layers.Dense(64, activation=tf.nn.relu, input_shape=[len(X_train_four.keys())]),\n    keras.layers.Dense(64, activation=tf.nn.relu),\n    keras.layers.Dense(1)\n])","22ef6363":"model.compile(loss='mean_squared_error',\n                optimizer='adam',\n                metrics=['accuracy'])","5f5ec699":"model.fit(X_train_four,y_train_four,epochs=1000)","35d68837":"print(model.evaluate(X_test_four,y_test_four))","cb85aec6":"**Separate features and target**","169e2b92":"After doing basic predictions with scikit-learn in the previous kernel,  [Heart Disease Playground (EDA and Predicitions)](https:\/\/www.kaggle.com\/codeai\/heart-disease-playground-eda-and-predictions), decided to do a small test for the same purpose using tensorflow with keras. Please, leave a comment if you find it interesting and if you have ideas for improvement.","90ac0181":"**Explore data and handle missing values**","1c94ba8e":"**First model: all features used**","80f379c1":"**Second model: usingonly four features - the ones that we found more correlated to the target, from previous kernel**","3461fa8e":"**Import libraries**","28cb039f":"Performance a bit better than in [Heart Disease Playground (EDA and Predictions)](https:\/\/www.kaggle.com\/codeai\/heart-disease-playground-eda-and-predictions) !","d535b720":"**Load the file - 'heart.csv'**"}}