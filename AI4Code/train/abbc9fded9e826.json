{"cell_type":{"6640b120":"code","136b6ace":"code","b0a0d133":"code","1cc4a34b":"code","32dedf0a":"code","4ec1b2de":"code","fdadbe54":"code","d79a6ba1":"code","284e94b0":"code","24f32598":"code","11e24488":"code","e2014c63":"code","47430bc8":"code","889b491a":"code","8e713f41":"code","cc39eea0":"code","e871428c":"code","244d0bb8":"code","989a448d":"code","f59ea580":"code","ed8f5504":"code","9f5b2cc9":"code","fd29ee96":"code","8e19aa9c":"code","52fc3759":"code","b2c04cd7":"code","e0f9384b":"code","e7f34bb3":"code","794e336a":"code","59f65c91":"code","59059083":"code","449a01cd":"code","bc580656":"code","873496ee":"code","71ba6374":"code","7a96da51":"code","12758eb5":"code","483ec55b":"code","2dfd5b6c":"code","8614670c":"code","07563fcb":"code","0e2517af":"code","64de55a5":"code","760a3d98":"code","d91bd879":"code","41a17404":"code","cc192a18":"code","c4c89450":"code","69dea952":"markdown"},"source":{"6640b120":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","136b6ace":"cardamom=pd.read_csv('\/kaggle\/input\/indian-small-cardamom-price-history-csv\/Indian Small Cardamom Price History.csv')","b0a0d133":"cardamom.head(5)","1cc4a34b":"list(filter(lambda x: x.isnumeric()==False,cardamom['Sno']))","32dedf0a":"cardamom['Sno'][0]='1'","4ec1b2de":"cardamom['Sno']=cardamom['Sno'].astype(int)","fdadbe54":"cardamom.info()","d79a6ba1":"from datetime import date\ncardamom['Date of Auction']=cardamom['Date of Auction'].str.split('-')\ncardamom['Date']=None\ncardamom['month']=None\nfor i in cardamom['Sno']:\n    cardamom['Date'][i-1]=cardamom['Date of Auction'][i-1][0]\n    cardamom['month'][i-1]=cardamom['Date of Auction'][i-1][1]\ncardamom['Date of Auction'][0][0]\n# cardamom['date']=cardamom['Date of Auction'][0]\n# cardamom['Month']=cardamom['Date of Auction'][1]","284e94b0":"cardamom","24f32598":"cardamom['Date']=cardamom['Date'].astype(int)","11e24488":"import datetime\nstr(cardamom['Date of Auction'][19][1])\ndatetime.datetime.strptime(str(cardamom['Date of Auction'][19][1]), \"%b\").month","e2014c63":"import datetime\nfor i in range(2836):\n    cardamom['Date of Auction'][i] = datetime.date(int('20'+(str(cardamom['Date of Auction'][i][2]))), \n                                                         datetime.datetime.strptime(str(cardamom['Date of Auction'][i][1]), \"%b\").month,\n                                                         int(cardamom['Date of Auction'][i][0]))","47430bc8":"cardamom.info()","889b491a":"cardamom","8e713f41":"cardamom['Date of Auction']=pd.to_datetime(cardamom['Date of Auction'])","cc39eea0":"cardamom.info()","e871428c":"cdf=cardamom[['Sno', 'Date of Auction', 'Auctioneer', 'No.of Lots',\n       'Total Qty Arrived (Kgs)', 'Qty Sold (Kgs)', 'MaxPrice (Rs.\/Kg)',\n       'Avg.Price (Rs.\/Kg)','Date','month']]","244d0bb8":"cdf=cdf.rename(columns={'Date of Auction':'dateofauction', 'No.of Lots':'nooflots',\n       'Total Qty Arrived (Kgs)':'totalquantityarrived', 'Qty Sold (Kgs)':'sold', 'MaxPrice (Rs.\/Kg)':'maxprice',\n       'Avg.Price (Rs.\/Kg)':'avgprice'},inplace=False)","989a448d":"cdf=cdf[cdf.sold!=max(cdf.sold)]","f59ea580":"cdf=cdf","ed8f5504":"import matplotlib.pyplot as plt\n%matplotlib inline","9f5b2cc9":"cdf.columns","fd29ee96":"cdf.describe()","8e19aa9c":"plt.scatter(cdf.nooflots,cdf.sold,color='blue')\nplt.xlabel(\"nooflots\")\nplt.ylabel('sold')\nplt.show()","52fc3759":"cdf.columns","b2c04cd7":"x=cdf.drop(columns=['sold','maxprice','avgprice','Sno','dateofauction'])\ny=cdf['sold']","e0f9384b":"x.columns","e7f34bb3":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\ndef encod(x):\n    char = x.select_dtypes([\"O\"]).columns\n    le = LabelEncoder()\n    for i in x[char]:\n        x[i] = le.fit_transform(x[i])\n\n    scale =StandardScaler()\n    x = scale.fit_transform(x)\n    return x","794e336a":"x=encod(x)","59f65c91":"# jaadu=[]\n# for i in range(100):\n#     x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2,random_state=i)\n#     lr=LinearRegression()\n#     # pipe=make_pipeline((Scale,x),lr)\n#     # pipe.fit(x_train,y_train)\n#     lr.fit(x_train,y_train)\n#     xpred=lr.predict(x_test)\n#     jaadu.append(r2_score(y_test,xpred ) )\n# print(jaadu)\n# print(max(jaadu))\n# print(jaadu.index(max(jaadu)))","59059083":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2,random_state=88)","449a01cd":"from sklearn.pipeline import make_pipeline\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nlr=LinearRegression()\nlr.fit(x_train,y_train)","bc580656":"xpred=lr.predict(x_test)","873496ee":"from sklearn.metrics import r2_score\nprint(\"R2-score: %.2f\" % r2_score(y_test,xpred ) )","71ba6374":"cardamom['predicted']=cdf.avgprice.shift(-1)","7a96da51":"cardamom.describe()","12758eb5":"cardamom=cardamom.sort_values(by=['Date of Auction'])","483ec55b":"cardamom=cardamom.dropna()","2dfd5b6c":"cardamom","8614670c":"a_train,a_test,b_train,b_test=train_test_split(np.array([cardamom['Avg.Price (Rs.\/Kg)']]).T,np.array(cardamom['predicted']),test_size=0.2)","07563fcb":"# li=[]\n# for i in range(2,50):\n#     from sklearn.ensemble import RandomForestRegressor\n#     model=RandomForestRegressor(n_estimators=i, random_state=1)\n#     model.fit(a_train, b_train)\n#     li.append([i, model.score(a_test,b_test)])\n# max(li)","0e2517af":"from sklearn.ensemble import RandomForestRegressor\nmodel=RandomForestRegressor(n_estimators=49, random_state=1)\nmodel.fit(a_train, b_train)","64de55a5":"a_pred=model.predict(a_test)","760a3d98":"b_test","d91bd879":"from sklearn.metrics import r2_score","41a17404":"r2_score(b_test,a_pred)","cc192a18":"p=cardamom.tail(1)\nl=np.array(p['Avg.Price (Rs.\/Kg)'])\nl","c4c89450":"# # auctioneer=input('Enter the Auctioneer name: ')\n# # Nooflots=input('Enter No of lots : ')\n# # totalquantity=input('Enter total quantity arrived:')\n# # da=input('Enter the date(dd): ')\n# # mon=input('Enter month(mm): ')\n# # s=pd.DataFrame(np.array([[auctioneer,Nooflots,totalquantity,da,mon]]),columns= ['Auctioneer', 'nooflots', 'totalquantityarrived', 'Date', 'month'])    \n# s=pd.DataFrame([['South Indian Green Cardamom Company Ltd, Kochi',231,78534.2,21,'May']],columns= ['Auctioneer', 'nooflots', 'totalquantityarrived', 'Date', 'month'])\n# s=encod(s)\n# print(lr.predict(s))\n","69dea952":"WORK IN PROGRESS .......******"}}