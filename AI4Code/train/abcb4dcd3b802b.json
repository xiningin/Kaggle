{"cell_type":{"aaadb6fa":"code","4c31ee95":"code","4310f83b":"code","6c64425a":"code","6cfe5d77":"code","b6749b2f":"markdown"},"source":{"aaadb6fa":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()","4c31ee95":"import random\nimport rx \nfrom rx import create,range,of,operators as op","4310f83b":"def make_observable(observer, scheduler):\n    observer.on_next(random.random())\n    observer.on_completed()\n    \nDATA = create(make_observable).pipe(op.publish())","6c64425a":"DATA.subscribe(\n    on_next = lambda x : print(\"sub1 result = {0}\".format(x)),\n    on_error = lambda e : print(\"sub1 error = {0}\".format(e)),\n    on_completed = lambda : print(\"sub1 completed\")\n)\n\nDATA.subscribe(\n    on_next = lambda x : print(\"sub2 result = {0}\".format(x)),\n    on_error = lambda e : print(\"sub2 error = {0}\".format(e)),\n    on_completed = lambda : print(\"sub2 completed\")\n)\n\nDATA.subscribe(\n    on_next = lambda x : print(\"sub3 result = {0}\".format(x)),\n    on_error = lambda e : print(\"sub3 error = {0}\".format(e)),\n    on_completed = lambda : print(\"sub3 completed\")\n)","6cfe5d77":"DATA.connect()","b6749b2f":"# publish (Observable -> Connectable Observable)\n\nconvert the observable into a connectable observable."}}