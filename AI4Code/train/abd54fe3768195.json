{"cell_type":{"010309a4":"code","b1eeb5a1":"code","95c345fc":"code","5ea273d1":"code","b940d224":"code","edd94f2c":"code","8023020a":"code","39dc3899":"code","33bd5d29":"code","fcc40cf0":"code","37a611dc":"code","635a391c":"code","f4d68ae1":"code","a6f3c635":"code","154bb743":"code","f4166886":"code","b8d0a883":"code","aba65ccf":"code","3842b38f":"code","b01ff087":"code","a208998b":"code","a35c60e2":"code","e79f94e7":"code","b45c9363":"code","9c256194":"code","ab7be9ac":"code","9fa9a1e2":"code","9b02f3af":"code","fadc99c7":"code","13d4920b":"code","dd61eb7a":"code","69ed4c09":"code","1ae244d9":"code","6de0e0ca":"code","82c97d8c":"code","c35ffae3":"code","0a93fe35":"code","b77eee41":"code","8fdbc600":"code","b2480ee2":"code","65f3899f":"code","e78705dd":"code","b78e6cb8":"code","70cba829":"code","fa928c4c":"code","a018096a":"code","35026d4e":"code","6fd9983a":"code","83af9a91":"markdown","c2b8acd3":"markdown","2842ef1f":"markdown","a0c7eaf4":"markdown","066da09d":"markdown","bfb5a6b2":"markdown","b883ae41":"markdown","128d17c6":"markdown","d1213668":"markdown","707f021e":"markdown","7a7ffb71":"markdown","01d19fef":"markdown","58c79518":"markdown","27c97f66":"markdown","a0d77f05":"markdown","421a134f":"markdown","996aac01":"markdown","0ee75eb2":"markdown","377e0825":"markdown","7e2af419":"markdown","dd71c3f4":"markdown","5103ed12":"markdown","9b4fe062":"markdown","a0ef2687":"markdown","0782a5b4":"markdown","1ce54cab":"markdown","1657b485":"markdown","9d56d4c9":"markdown","4b961254":"markdown","c7b2ff70":"markdown"},"source":{"010309a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b1eeb5a1":"data = pd.read_csv('\/kaggle\/input\/udemy-courses\/udemy_courses.csv')\ndata.head()","95c345fc":"data.shape","5ea273d1":"data.info()","b940d224":"data['content_duration'].unique()","edd94f2c":"data = data[data['content_duration'].str.contains('hour')]","8023020a":"data.head()","39dc3899":"def ajuste_hour(hour):\n    hora = hour.replace('hour','')\n    hora1 = hora.replace('s','')\n    output = float(hora1)\n    return output","33bd5d29":"data['content_duration'] = data['content_duration'].apply(ajuste_hour)","fcc40cf0":"data.info()","37a611dc":"data['price'].unique()","635a391c":"def free_course(course):\n    price = course.replace('Free','0')\n    price1 = float(price)\n    return price1","f4d68ae1":"data['price'] = data['price'].apply(free_course)","a6f3c635":"data.info()","154bb743":"data['published_timestamp']= pd.to_datetime(data['published_timestamp'], format = '%Y-%m-%dT%H:%M:%SZ')","f4166886":"data.head()","b8d0a883":"data.info()","aba65ccf":"data['date'] = pd.to_datetime(data['published_timestamp'].dt.date, format = '%Y-%m-%d')\ndata.head()","3842b38f":"categorical = [var for var in data.columns if data[var].dtype=='O']\n\nprint('There are {} categorical variables\\n'.format(len(categorical)))\n\nprint('The categorical variables are :\\n\\n', categorical)","b01ff087":"data['is_paid'].unique(), data['level'].unique(), data['subject'].unique()","a208998b":"data['is_paid'] = data['is_paid'].replace({'TRUE': 'True', 'FALSE':'False'})\ndata['is_paid'].unique()","a35c60e2":"# so we have 3 categorical data, we can explore these data here\n# view the frequency \nfor var in categorical:\n    print(data[var].value_counts()\/np.float(len(data)))","e79f94e7":"ax = data['is_paid'].value_counts().plot(kind ='bar',\n                                        figsize = (10,8))\n\nax.set_title('Almost every course in udemy is paid', fontsize = 22)\nax.set_ylabel('Amount of courses', fontsize = 20)\nax.set_xlabel('Paid', fontsize = 20)","b45c9363":"ax = data['subject'].value_counts().plot(kind ='bar',\n                                        figsize = (10,8),\n                                        color = 'g',\n                                        width = 0.6,\n                                        alpha = 0.6)\n\nax.set_title('Huge focus on web development and Business', fontsize = 22)\nax.set_ylabel('Amount of courses', fontsize = 20)\nax.set_xlabel('Courses', fontsize = 20)","9c256194":"ax = data['level'].value_counts().plot(kind ='bar',\n                                        figsize = (10,8),\n                                      width = 0.8,\n                                      alpha= 0.7)\n\nax.set_title('Designed for everybody!', fontsize = 22)\nax.set_ylabel('Amount of courses', fontsize = 20)\nax.set_xlabel('Levels', fontsize = 20)","ab7be9ac":"grouped = data.groupby(['level','subject'])","9fa9a1e2":"grouped_pct = grouped['course_id']","9b02f3af":"grouped_pct.agg('describe')","fadc99c7":"# now we are going to explore numerical data.\nnumerical = [var for var in data.columns if data[var].dtype!='O']\n\nprint('There are {} numerical variables\\n'.format(len(numerical)))\n\nprint('The numerical variables are :', numerical)","13d4920b":"data.corr().round(4)","dd61eb7a":"ax = sns.boxplot(data['price'], orient = 'v', width = 0.3)\nax.figure.set_size_inches(12,6)\nax.set_ylabel('Price', fontsize = 20)\nax.set_title('Distribuition from courses', fontsize  = 24)","69ed4c09":"ax = sns.distplot(data['price'])\nax.figure.set_size_inches(12,6)\nax.set_xlabel('Prices')\nax.set_title('Distribution', fontsize = 22)","1ae244d9":"ax = sns.boxplot(x = 'level',y = 'price', data = data, orient = 'v', width = 0.3)\nax.figure.set_size_inches(12,6)\nax.set_ylabel('Price', fontsize = 20)\nax.set_title('Distribution of price with level', fontsize  = 24)\nax.set_xlabel('Level', fontsize= 20)","6de0e0ca":"ax = sns.boxplot(x = 'subject',y = 'price', data = data, orient = 'v', width = 0.3)\nax.figure.set_size_inches(12,6)\nsns.set_palette('CMRmap')\nax.set_ylabel('Price', fontsize = 20)\nax.set_title('Distribution of price with subjects', fontsize  = 24)\nax.set_xlabel('Subjects', fontsize= 20)","82c97d8c":"ax = sns.pairplot(data, y_vars = 'price', x_vars = ['num_subscribers', 'num_reviews', 'num_lectures','content_duration'], height = 5, kind = 'reg')\nax.fig.suptitle('Scatter plot with variables', fontsize=20, y=1.05)\nax","c35ffae3":"data['log_price'] = np.log(data['price']+1)\ndata['log_num_subscribers'] = np.log(data['num_subscribers'])\ndata['log_num_reviews'] = np.log(data['num_reviews'] + 1)\ndata['log_num_lectures'] = np.log(data['num_lectures'])\ndata['log_content_duration'] = np.log(data['content_duration'])","0a93fe35":"data.head()","b77eee41":"## Filtering only paid courses\ndata_new = data[data['is_paid'] == 'True']","8fdbc600":"data_new.head()","b2480ee2":"ax = sns.distplot(data_new['log_price'], bins =15)\nax.figure.set_size_inches(12,6)\nax.set_xlabel('Price')\nax.set_title('Distribution of log_price', fontsize = 22)","65f3899f":"group_subject = data_new.groupby('subject')['price']","e78705dd":"type(group_subject)","b78e6cb8":"group_subject.groups","70cba829":"group_subject.mean()","fa928c4c":"Q1 = group_subject.quantile(.25)\nQ3 = group_subject.quantile(.75)\nIIQ = Q3 - Q1 #intervalo interquartilico\nlower_limit = Q1 - 1.5*IIQ\nupper_limit = Q3 + 1.5*IIQ","a018096a":"data_new1 = pd.DataFrame()\n\nfor subject in group_subject.groups.keys():\n    is_subject = data_new['subject'] == subject\n    is_limit = (data_new['price'] >= lower_limit[subject]) & (data_new['price'] <= upper_limit[subject])\n    selection = is_subject & is_limit\n    data_select = data_new[selection]\n    data_new1 = pd.concat([data_new1, data_select])","35026d4e":"ax = sns.boxplot(x = 'subject',y = 'price', data = data_new1, orient = 'v', width = 0.3)\nax.figure.set_size_inches(12,6)\nsns.set_palette('CMRmap')\nax.set_ylabel('Pre\u00e7o', fontsize = 20)\nax.set_title('Pre\u00e7o dos cursos', fontsize  = 24)\nax.set_xlabel('Subjects', fontsize= 20)","6fd9983a":"ax = sns.distplot(data_new1['log_price'], bins =15)\nax.figure.set_size_inches(12,6)\nax.set_xlabel('Price')\nax.set_title('Distribution of price', fontsize = 22)","83af9a91":"We have free courses","c2b8acd3":"## Now that we finally changed this erros lets now plot some views","2842ef1f":"## Lets filter only data with hours and hour in the dataset","a0c7eaf4":"## Getting some early infos about dataset","066da09d":"## Dataset has 3683 lines and 12 columns","bfb5a6b2":"Now price has only float numbers, as we expected","b883ae41":"## Here i tried to check if the price variable would became a normal distribution","128d17c6":"## Checking boxplot from price with other variables","d1213668":"## We can see that is_paid has variations of True and False, we have to fix it","707f021e":"## Lets visualize some data\n","7a7ffb71":"Let's start with content_duration","01d19fef":"## Now let's clean the price","58c79518":"## Checking the distribution","27c97f66":"Splitting to date","a0d77f05":"## These one i found really interesting, because it's designed for everybody!\n## If you want to learn, you don't have excuses\n\n## Let's see how its distribuited this data\n","421a134f":"## Now that we finally cleaned the dataset, lets try to visualize somethings.\n## We will start with categorical data","996aac01":"## A lot of courses are created for web development and business finance, perhaps udemy has a huge demand on theses general themes","0ee75eb2":"## Plotting now.. without outliers","377e0825":"## Lets explore numerical data","7e2af419":"## Transforming to log","dd71c3f4":"Checking if data changed","5103ed12":"## Majority of courses is paid..","9b4fe062":"## Now we have to fix the timestamp","a0ef2687":"Yes! Changed to float","0782a5b4":"## As you see below, we have 3683 non null values... So no missing data","1ce54cab":"Hello guys, this kernel i wanted to do some kind of Multiple Linear Regression, but i failed because the dataset doenst have a normal distribution. Maybe, i'm a newb yet, but currently is the only machile learning method i know.\n\nSo in this dataset i cleaned some values, transformed data, maybe i could create some other variables.\n\nSo If you like this notebook. Please upvote!\n\nFeel free to give suggestions, advices and tips!\n\nThanks!","1657b485":"## Not looking like a normal distribution","9d56d4c9":"## We can see that the column published_timestamp, price and content_duration isn't in the properly type","4b961254":"## Well i give up haha! Let's clean some outliers","c7b2ff70":"## Checking the variable price"}}