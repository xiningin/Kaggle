{"cell_type":{"5a1ffb41":"code","6bc72f40":"code","a570d463":"code","c328bf13":"code","e715b9c3":"code","140fad84":"code","b450d681":"code","bc5bc21f":"code","ec39216c":"code","0db2d7a2":"code","221e393d":"code","8adfd69c":"code","0fc03369":"code","b6134225":"code","357b554f":"code","11fc2b67":"markdown","2a5002e3":"markdown","72ecf7a2":"markdown","30755fba":"markdown","e42ca7d6":"markdown","4f6fc031":"markdown"},"source":{"5a1ffb41":"a=b","6bc72f40":"try:\n    #write some code\n    a=b\nexcept:\n    print('Some error may have occured')","a570d463":"try:\n    #write some code\n    a=b\nexcept Exception as e:\n    print(e)","c328bf13":"try:\n    #write some code\n    a=b\nexcept NameError as ne:\n    print('Please define variable')\nexcept Exception as e:\n    print(e)","e715b9c3":"try:\n    #write some code\n    a = 1\n    b = 'b'\n    c = a+b\nexcept NameError as ne:\n    print('Please define variable')\nexcept Exception as e:\n    print(e)","140fad84":"a = 1\nb = 'b'\nc = a+b","b450d681":"try:\n    #write some code\n    a = 1\n    b = 'b'\n    c = a+b\nexcept NameError as ne:\n    print('Please define variable')\nexcept TypeError as te:\n    print('Two different datatype variable cannot be added')\nexcept Exception as e:\n    print(e)","bc5bc21f":"a = 1\nb = 0\nc= a\/b","ec39216c":"try:\n    #write some code\n    a = 1\n    b = 0\n    c= a\/b\nexcept NameError as ne:\n    print('Please define variable')\nexcept TypeError as te:\n    print('Two different datatype variable cannot be added')\nexcept Exception as e:\n    print(e)","0db2d7a2":"try:\n    #write some code\n    a = 1\n    b = 0\n    c= a\/b\nexcept NameError as ne:\n    print('Please define variable')\nexcept TypeError as te:\n    print('Two different datatype variable cannot be added')\nexcept ZeroDivisionError:\n    print('Please change the denominator')\nexcept Exception as e:\n    print(e)","221e393d":"try:\n    a=1\n    b=2\nexcept:\n    print('Some Error')\nelse:\n    print('Executed successfully')","8adfd69c":"try:\n    a=1\n    b=2\nexcept:\n    print('Some Error')\nelse:\n    print('Executed successfully')\nfinally:\n    print('I always get printed ~finally')","0fc03369":"try:\n    x=z\nexcept:\n    print('Some Error')\nelse:\n    print('Executed successfully')\nfinally:\n    print('I always get printed ~finally')","b6134225":"class Error(Exception):\n    pass\nclass dobException(Error):\n    pass","357b554f":"year = int(input(\"Enter the year of birth \"))\nage = 2021-year\ntry:\n    if(age>20 and age<=30):\n        print('Age is valid. You can apply for exams')\n    else:\n        raise dobException\nexcept dobException:\n    print('Please enter valid age')","11fc2b67":"#### Else part in try except","2a5002e3":"#### Finally in try catch","72ecf7a2":"### Exception Handling ","30755fba":"If the try part runs successfully, then the further code can be written in else part","e42ca7d6":"### Custom Exception Handling","4f6fc031":"Finally part is always executed irrespective of which block(try, catch) is executed"}}