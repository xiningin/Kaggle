{"cell_type":{"6469f7b7":"code","cdd92d27":"code","100a7cb0":"code","8f730fe5":"code","c5f39f68":"code","32612e78":"code","b42d3988":"code","a0af6b76":"code","f7a369c7":"code","60461da0":"code","779a95e2":"code","e3a26b11":"code","6f249416":"code","4a45cee5":"code","4abec9cc":"code","ad85b55e":"code","2b42af13":"code","acbf4db4":"code","61cdd7e0":"code","651e0cbf":"code","e5bf4c99":"code","55eaeb4b":"code","b9a96e98":"code","f16ab499":"code","5d065a1b":"markdown","352e46c8":"markdown","a002a886":"markdown","c34660ab":"markdown","805db2fe":"markdown","8108141d":"markdown","23df3ea1":"markdown","5d89ba35":"markdown","fe7f3c58":"markdown"},"source":{"6469f7b7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport matplotlib.pyplot as plt\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk import bigrams\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\n\nfrom collections import Counter","cdd92d27":"df = pd.read_csv('..\/input\/us-election-2020-presidential-debates\/us_election_2020_1st_presidential_debate.csv')\ndf.head()","100a7cb0":"df.shape","8f730fe5":"# split by speaker\ndf_CW = df[df.speaker=='Chris Wallace']\ndf_JB = df[df.speaker=='Vice President Joe Biden']\ndf_DT = df[df.speaker=='President Donald J. Trump']\n","c5f39f68":"df_CW","32612e78":"df_DT","b42d3988":"df_JB","a0af6b76":"print('Number of segments - Chris Wallace             : ', df_CW.shape[0])\nprint('Number of segments - President Donald J. Trump : ', df_DT.shape[0])\nprint('Number of segments - Vice President Joe Biden  : ', df_JB.shape[0])","f7a369c7":"# convert to strings\ntext_CW = \" \".join(txt for txt in df_CW.text)\ntext_DT = \" \".join(txt for txt in df_DT.text)\ntext_JB = \" \".join(txt for txt in df_JB.text)\n\n# compare total text lengths\nprint('Length of text - Chris Wallace             : ', len(text_CW))\nprint('Length of text - President Donald J. Trump : ', len(text_DT))\nprint('Length of text - Vice President Joe Biden  : ', len(text_JB))","60461da0":"stopwords = set(STOPWORDS)","779a95e2":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text_CW)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","e3a26b11":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text_DT)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","6f249416":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text_JB)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","4a45cee5":"# standard stopwords\nmy_stopwords = set(nltk.corpus.stopwords.words('english'))\n# additional stopwords\nmy_stopwords = my_stopwords.union({\"'s\",\"'ll\",\"'re\",\"n't\",\"'ve\",\"'m\"})","4abec9cc":"# lower case\ntext = text_CW.lower()\n# tokenize text\nwords = nltk.word_tokenize(text)\n# remove single characters\nwords = [word for word in words if len(word) > 1]\n# remove stopwords\nwords = [word for word in words if word not in my_stopwords]\n# count word frequencies\nword_freqs = nltk.FreqDist(words)\n# plot word frequencies\nplt.rcParams['figure.figsize'] = [12, 6]\nplt.title('Word Frequency - Chris Wallace')\nword_freqs.plot(50)","ad85b55e":"my_bigrams = bigrams(words)\ncounts = Counter(my_bigrams)\ncounts = dict(counts)\n# convert dictionary to data frame\ndcounts = pd.DataFrame.from_dict(counts, orient='index', columns=['frequency'])\n# select only bigrams occuring at least four times\ndcounts = dcounts[dcounts.frequency>=4]\n# and sort descending\ndcounts = dcounts.sort_values(by='frequency', ascending=False)\nplt.rcParams['figure.figsize'] = [12, 12]\nplt.barh(list(map(str, dcounts.index)), dcounts.frequency)\nplt.title('Most frequent bigrams - Chris Wallace')\nplt.grid()\nplt.show()","2b42af13":"# lower case\ntext = text_DT.lower()\n# tokenize text\nwords = nltk.word_tokenize(text)\n# remove single characters\nwords = [word for word in words if len(word) > 1]\n# remove stopwords\nwords = [word for word in words if word not in my_stopwords]\n# count word frequencies\nword_freqs = nltk.FreqDist(words)\n# plot word frequencies\nplt.rcParams['figure.figsize'] = [12, 6]\nplt.title('Word Frequency - President Donald J. Trump')\nword_freqs.plot(50)","acbf4db4":"my_bigrams = bigrams(words)\ncounts = Counter(my_bigrams)\ncounts = dict(counts)\n# convert dictionary to data frame\ndcounts = pd.DataFrame.from_dict(counts, orient='index', columns=['frequency'])\n# select only bigrams occuring at least four times\ndcounts = dcounts[dcounts.frequency>=4]\n# and sort descending\ndcounts = dcounts.sort_values(by='frequency', ascending=False)\nplt.rcParams['figure.figsize'] = [12, 12]\nplt.barh(list(map(str, dcounts.index)), dcounts.frequency)\nplt.title('Most frequent bigrams - President Donald J. Trump')\nplt.grid()\nplt.show()","61cdd7e0":"# lower case\ntext = text_JB.lower()\n# tokenize text\nwords = nltk.word_tokenize(text)\n# remove single characters\nwords = [word for word in words if len(word) > 1]\n# remove stopwords\nwords = [word for word in words if word not in my_stopwords]\n# count word frequencies\nword_freqs = nltk.FreqDist(words)\n# plot word frequencies\nplt.rcParams['figure.figsize'] = [12, 6]\nplt.title('Word Frequency - Vice President Joe Biden')\nword_freqs.plot(50)","651e0cbf":"my_bigrams = bigrams(words)\ncounts = Counter(my_bigrams)\ncounts = dict(counts)\n# convert dictionary to data frame\ndcounts = pd.DataFrame.from_dict(counts, orient='index', columns=['frequency'])\n# select only bigrams occuring at least four times\ndcounts = dcounts[dcounts.frequency>=4]\n# and sort descending\ndcounts = dcounts.sort_values(by='frequency', ascending=False)\nplt.rcParams['figure.figsize'] = [12, 12]\nplt.barh(list(map(str, dcounts.index)), dcounts.frequency)\nplt.title('Most frequent bigrams - Vice President Joe Biden')\nplt.grid()\nplt.show()","e5bf4c99":"sia = SentimentIntensityAnalyzer()","55eaeb4b":"sent = sia.polarity_scores(text_CW)\nsent_val = sent['compound']\nsent.pop('compound')\nprint('CW: sentiment score = ', sent_val)\nprint('CW: split = ', sent)","b9a96e98":"sent = sia.polarity_scores(text_DT)\nsent_val = sent['compound']\nsent.pop('compound')\nprint('DT: sentiment score = ', sent_val)\nprint('DT: split = ', sent)","f16ab499":"sent = sia.polarity_scores(text_JB)\nsent_val = sent['compound']\nsent.pop('compound')\nprint('JB: sentiment score = ', sent_val)\nprint('JB: split = ', sent)","5d065a1b":"# Basic NLP applied to the debate","352e46c8":"### Vice President Joe Biden","a002a886":"# Wordcloud Vice President Joe Biden","c34660ab":"# Wordcloud President Donald J. Trump","805db2fe":"# Sentiment","8108141d":"### Chris Wallace","23df3ea1":"### President Donald J. Trump","5d89ba35":"# Wordcloud Chris Wallace","fe7f3c58":"# Word frequencies"}}