{"cell_type":{"dc5cb0fa":"code","57b0b62a":"code","c45ff5c4":"code","5088c684":"code","c6f6b212":"code","82b6ec93":"code","0beb6686":"code","9c2644c6":"code","8c00eb6d":"code","57a9cb54":"code","52b4585a":"code","0d13e3df":"code","6e8f8afc":"code","4ea2c0a7":"code","ba50358c":"markdown"},"source":{"dc5cb0fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.cluster import KMeans","57b0b62a":"data = pd.read_csv('\/kaggle\/input\/3.01. Country clusters.csv')\ndata\n\n# data analysis in direction : North and East : positive\n#                            : South and west : Negetive   ","c45ff5c4":"data['Language'] = data['Language'].map({'English' : 0, 'French' :1 , 'German' : 2})","5088c684":"# plot the data\n\nplt.scatter(data['Longitude'], data['Latitude'])\nplt.xlim(-180, 180)\nplt.ylim(-90,90)\nplt.show()","c6f6b212":"# clustering based on location\n\nx= data.iloc[:, 1:4]\nx","82b6ec93":"# clustering\nk_means = KMeans(3) #\" here KMeans(2) is the number of cluster we want to have in our datasets\"","0beb6686":"k_means.fit(x)","9c2644c6":"#clustering result\n\nidentified_cluster = k_means.fit_predict(x)\nidentified_cluster","8c00eb6d":"data_with_cluster = data.copy()\ndata_with_cluster['Cluster'] =  identified_cluster\ndata_with_cluster","57a9cb54":"# map\n\n# plot the data\n\nplt.scatter(data_with_cluster['Longitude'], data_with_cluster['Latitude'], c=data_with_cluster['Cluster'], cmap='rainbow')\nplt.xlim(-180, 180)\nplt.ylim(-90,90)\nplt.show()","52b4585a":"# wcss \nk_means.inertia_","0d13e3df":"wcss = []\nfor i in range(1,7):\n    k_means = KMeans(i)\n    k_means.fit(x)\n    wcss_iter = k_means.inertia_\n    wcss.append(wcss_iter)","6e8f8afc":"wcss","4ea2c0a7":"# elbow method\n\nnumber_clusters = range(1,7)\n\nplt.plot(number_clusters, wcss)\nplt.title('The Elbow Method')\n\nplt.xlabel('Number of cluster')\nplt.ylabel('within cluster sum of squar')\n\nplt.show()","ba50358c":"Loading the data"}}