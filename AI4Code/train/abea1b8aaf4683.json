{"cell_type":{"920b865e":"code","18f38a0e":"code","9fcaaa9b":"code","f421078b":"code","3d2d55ff":"code","8e276f2f":"code","b3623e12":"code","d6e7c902":"code","d36abd39":"code","01ed77ac":"code","04c01b83":"code","6b064466":"code","6f1466fa":"code","6062f6c7":"code","ad211423":"code","720534ac":"code","a3ff989e":"code","6854bc5f":"code","0d2cb0d7":"code","c13dac20":"code","db4911d7":"code","40677727":"code","7f056142":"code","40c86696":"code","6cb4e8f0":"code","48bc064e":"code","fdc7a02f":"code","3ef5f4c4":"code","4ed5fc2f":"code","b1d23c7e":"code","046649b6":"markdown"},"source":{"920b865e":"import pandas as pd\nimport numpy as np","18f38a0e":"import os\nfrom random import shuffle\nimport shutil\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing import image as img\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense,Dropout,Activation\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","9fcaaa9b":"# Let's create the directories for training and validation\nmain_path='.\/output\/bee-vs-wasp'\ntraining_path=main_path+'\/training'\ntesting_path=main_path+'\/validation'\nbee_training=training_path+'\/bee'\nwasp_training=training_path+'\/wasp'\nother_insects_training=training_path+'\/other_insects'\nother_noinsects_training=training_path+'\/other_noinsects'\nbee_testing=testing_path+'\/bee'\nwasp_testing=testing_path+'\/wasp'\nother_insects_testing=testing_path+'\/other_insects'\nother_noinsects_testing=testing_path+'\/other_noinsects'","f421078b":"def directory_creation(path):\n    os.mkdir(path)","3d2d55ff":"directory_creation('.\/output')","8e276f2f":"directory_creation(main_path)\ndirectory_creation(training_path)\ndirectory_creation(testing_path)\ndirectory_creation(bee_training)\ndirectory_creation(wasp_training)\ndirectory_creation(other_insects_training)\ndirectory_creation(other_noinsects_training)","b3623e12":"directory_creation(bee_testing)\ndirectory_creation(wasp_testing)\ndirectory_creation(other_insects_testing)\ndirectory_creation(other_noinsects_testing)","d6e7c902":"def copy_files(original,dest_training,dest_testing):\n    l=os.listdir(original)\n    training_length=int(len(l)*0.8)\n    shuffle(l)\n    for i in range(len(l)):\n        if i<training_length:\n            shutil.copy(original+'\/'+l[i],dest_training)\n        else:\n            shutil.copy(original+'\/'+l[i],dest_testing)\n            ","d36abd39":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/bee1',bee_training,bee_testing)","01ed77ac":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/bee2',bee_training,bee_testing)","04c01b83":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/wasp1',wasp_training,wasp_testing)","6b064466":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/wasp2',wasp_training,wasp_testing)","6f1466fa":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_insect',other_insects_training,other_insects_testing)","6062f6c7":"copy_files('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_noinsect',other_noinsects_training,other_noinsects_testing)","ad211423":"data_generator = ImageDataGenerator(rescale = 1.\/250,zoom_range = 0.2)\n","720534ac":"batch_size = 8 #accessing all our data both training and testing\ntraining_data = data_generator.flow_from_directory(directory = training_path,\n                                                  target_size = (150,150),\n                                                  batch_size = batch_size,)\ntesting_data = data_generator.flow_from_directory(directory = testing_path,\n                                                  target_size = (150,150),\n                                                  batch_size = batch_size)","a3ff989e":"model = Sequential() #making our CNN\nmodel.add(Conv2D(filters = 32, kernel_size = (3, 3), activation = 'relu', input_shape = training_data.image_shape))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\nmodel.add(Dropout(rate = 0.3))\nmodel.add(Conv2D(filters = 64, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\nmodel.add(Dropout(rate = 0.2))\nmodel.add(Conv2D(filters = 126, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\nmodel.add(Dropout(rate = 0.15))\nmodel.add(Flatten())\nmodel.add(Dense(units = 32, activation = 'relu'))\nmodel.add(Dropout(rate = 0.15))\nmodel.add(Dense(units = 64, activation = 'relu'))\nmodel.add(Dropout(rate = 0))\nmodel.add(Dense(units = len(set(training_data.classes)), activation = 'softmax'))\nmodel.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])","6854bc5f":"model.summary()\n","0d2cb0d7":"fitted_model = model.fit_generator(training_data,\n                        steps_per_epoch = 250,\n                        epochs = 15,\n                        validation_data = testing_data,\n                        validation_steps = 1000)","c13dac20":"# now let's save the model so we dont have to train this again\nmodel.save('.\/output\/model')","db4911d7":"def testing_image(image_directory): #testing out our model\n    test_image = img.load_img(image_directory, target_size = (150, 150))\n    test_image = img.img_to_array(test_image)\n    test_image = np.expand_dims(test_image, axis = 0)\n    result = model.predict(x = test_image)\n    print(result)\n    if result[0][2]==max(result[0]):\n        print('Other than insects')\n    elif result[0][1]==max(result[0]):\n        print('Insects')\n    elif result[0][0]==max(result[0]):\n        print('Bees')\n    else:\n        print('oooo its the wasps')","40677727":"from IPython.display import Image\nImage(\"..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/bee1\/10092043833_7306dfd1f0_n.jpg\")","7f056142":"testing_image('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/bee1\/10092043833_7306dfd1f0_n.jpg')","40c86696":"# let's try the insects now\nImage('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_insect\/10199076566_2014fdb8a8_n.jpg')","6cb4e8f0":"testing_image('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_insect\/10199076566_2014fdb8a8_n.jpg')","48bc064e":"# other objects other than the insects\nImage('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_noinsect\/501094.jpg')","fdc7a02f":"testing_image('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/other_noinsect\/501094.jpg')","3ef5f4c4":"# Wasps Which looks closer to the bees\nImage('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/wasp2\/G00017.jpg')","4ed5fc2f":"testing_image('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp\/wasp2\/G00017.jpg')","b1d23c7e":"# So we can see we are getting good results \n# Thanks for givin the file a read :)","046649b6":"Let's try some of the images "}}