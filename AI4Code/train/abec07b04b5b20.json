{"cell_type":{"a8613f52":"code","6d18c275":"code","11a6ccea":"code","3f667441":"code","b25e3648":"code","41954c81":"code","7cede065":"code","406aa278":"code","2b79bad5":"code","a34cbe54":"code","e55ab052":"code","326b3a25":"code","baf32e07":"code","4eb5a903":"code","7406f5c5":"code","d534e89f":"code","3a2d64c8":"code","2e6d029b":"code","93048f2f":"code","23c42287":"code","b4abe3b3":"code","d96e6f93":"code","bd7da1fc":"markdown","5d7b0d08":"markdown","f44ff24a":"markdown","b5d9f9e4":"markdown","f9d600c5":"markdown","17043b65":"markdown","2bed2473":"markdown"},"source":{"a8613f52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6d18c275":"data = pd.read_csv(\"..\/input\/2017.csv\")","11a6ccea":"data.info()","3f667441":"data.corr() #It gives data about ratio of column headings","b25e3648":"#correlation map\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.2f',ax=ax)\nplt.show()","41954c81":"data.head(10)","7cede065":"data.columns","406aa278":"# Line Plot\n# linewidth = width of line, alpha = opacity, linestyle = sytle of line\ndata.Family.plot(kind = \"line\",color = \"g\",label = \"Family\",linewidth = 1,alpha = 0.9,grid = True,linestyle = \":\" )\ndata.Freedom.plot(color = \"r\",label = \"Freedom\",linewidth = 1, alpha = 0.9,grid = True,linestyle = '-.')\nplt.legend(loc = \"upper right\")     # legend = puts label into plot\nplt.xlabel(\"x axis\")              # label = name of label\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\")            # title = title of plot\nplt.show()","2b79bad5":"# Scatter Plot \n# x = attack, y = defense\ndata.plot(kind = \"scatter\", x = \"Family\", y = \"Freedom\",alpha = 0.5,color = \"red\")\nplt.xlabel(\"Family\")              # label = name of label\nplt.ylabel(\"Freedom\")\nplt.title(\"Family Freedom Scatter Plot\")            # title = title of plot\nplt.show()","a34cbe54":"# Histogram\n# bins = number of bar in figure\ndata.Family.plot(kind = 'hist',bins = 40,figsize = (12,12))\nplt.show()","e55ab052":"# clf() = cleans it up again you can start a fresh\ndata.Family.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","326b3a25":"#create dictionary and look its keys and values\ndictionary = {\"spain\" : \"madrid\",\"italy\" : \"rome\"}\nprint(dictionary.keys())\nprint(dictionary.values())","baf32e07":"# Keys have to be immutable objects like string, boolean, float, integer or tubles\n# List is not immutable\n# Keys are unique\ndictionary[\"spain\"] = \"barcelona\"    # update existing entry\nprint(dictionary)\ndictionary[\"france\"] = \"paris\"       # Add new entry\nprint(dictionary)\ndel dictionary[\"spain\"]              # remove entry with key 'spain'\nprint(dictionary)\nprint(\"france\" in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","4eb5a903":"# In order to run all code you need to take comment this line\n# del dictionary         # delete entire dictionary     \nprint(dictionary)       # it gives error because dictionary is deleted","7406f5c5":"data = pd.read_csv(\"..\/input\/2017.csv\")","d534e89f":"series = data[\"Happiness.Score\"]        # data['Happiness.Score'] = series\nprint(type(series))\ndata_frame = data[[\"Happiness.Score\"]]  # data[['Happiness.Score']] = data frame\nprint(type(data_frame))","3a2d64c8":"# Comparison operator\nprint(3 > 2)\nprint(3!=2)\n# Boolean operators\nprint(True and False)\nprint(True or False)","2e6d029b":"# 1 - Filtering Pandas data frame\nx = data[\"Happiness.Score\"] > 7.0    # There are 12 countries which have higher happiness score than 7.0\ndata[x]","93048f2f":"# 2 - Filtering pandas with logical_and\n# There are 9 countries which have higher happiness score than 7.0 and higher family than 1.5\ndata[np.logical_and(data[\"Happiness.Score\"] > 7.0, data[\"Family\"] > 1.5)]","23c42287":"# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data[\"Happiness.Score\"] > 7.0) & (data[\"Family\"] > 1.5)]","b4abe3b3":"# Stay in loop if condition( i is not equal 5) is true\ni = 0\nwhile i != 5 :\n    print('i is: ',i)\n    i +=1 \nprint(i,' is equal to 5')","d96e6f93":"# Stay in loop if condition( i is not equal 5) is true\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint(\"\")\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint(\"\")   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {\"spain\" : \"madrid\",\"france\" : \"paris\"}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint(\"\")\n\n# For pandas we can achieve index and value\nfor index,value in data[[\"Happiness.Score\"]][0:1].iterrows():\n    print(index,\" : \",value)\n","bd7da1fc":"\n### **INTRODUCT\u0130ON TO PYTHON**\n\n* [Matplotlib](#1)\n* [Dictionary](#2)\n* [Pandas](#3)\n* [Logic, control flow and filtering](#4)\n* [Loop data structures](#5)\n","5d7b0d08":"<a id=\"4\"><\/a> <br>\nBefore continue with pandas, we need to learn logic, control flow and filtering. \n* Comparison operator: ==, <, >, <= \n* Boolean operators: and, or ,not \n* Filtering pandas","f44ff24a":"**In this part, you learn:**\n\n* how to import csv file\n* plotting line,scatter and histogram\n* basic dictionary features\n* basic pandas features like filtering that is actually something always used and main for being data scientist\n* While and for loops","b5d9f9e4":"<a id=\"1\"><\/a> <br>\n### **MATHPLOTLIP**\n\n Matplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.\n \n* Line plot is better when x axis is time.\n* Scatter is better when there is correlation between two variables\n* Histogram is better when we need to see distribution of numerical data.\n* Customization: Colors,labels,thickness of line, title, opacity, grid, figsize, ticks of axis and linestyle","f9d600c5":" <a id=\"5\"><\/a> <br>\n### **WHILE and FOR LOOPS**\n\nWe will learn most basic while and for loops","17043b65":"<a id=\"2\"><\/a> <br> \n### **DICTIONARY**\n \n Why we need dictionary?\n\n* It has 'key' and 'value'\n* Faster than lists \n* What is key and value. Example:\n* dictionary = {'turkey' : 'ankara'}\n* Key is turkey.\n* Values is ankara. \n\nLets practice some other properties like keys(), values(), update, add, check, remove key, remove all entries and remove dicrionary.","2bed2473":"<a id=\"3\"><\/a> <br>\n### **PANDAS**\n\nWhat we need to know about pandas?\n\n* CSV: comma - separated values"}}