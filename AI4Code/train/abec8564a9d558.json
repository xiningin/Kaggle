{"cell_type":{"01c46319":"code","574b610a":"code","741a12d4":"code","d1414e4c":"code","61f0de87":"code","38a20124":"code","7399ef07":"code","62db199c":"code","f044b039":"code","93d25aaf":"code","4012997f":"code","ec0c8ecd":"code","a560c6cf":"code","3683403d":"code","912ddf8b":"code","1c0bbe84":"code","b66a50e9":"code","665f4da8":"code","4ed2f958":"code","7a21a0ed":"code","40cd9a0e":"code","4d6534c7":"code","fc5e5d96":"code","f6af2978":"code","4468e42a":"code","ec5c50d3":"code","96430e65":"code","47af51ba":"code","9a87e158":"code","f6c32b36":"code","23f9a24e":"code","cf73833f":"code","fe0f036e":"code","c0026cba":"code","cd40e3dd":"code","bedb5855":"code","aa17b40c":"code","9d885cff":"code","b83623d2":"code","ed53a11e":"code","166fa8ac":"markdown"},"source":{"01c46319":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","574b610a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport datetime as dt\nimport missingno as msno\nimport calendar\n\n","741a12d4":"##Read data;\ndata=pd.read_csv(r\"\/kaggle\/input\/unemployment-in-india-due-to-covid19\/real_1_Unemployment_Rate_upto_11_2020.csv\")\n","d1414e4c":"#Print first five rows;\ndata.head()","61f0de87":"#Indetifiy the number of features;\nlen(data.columns)","38a20124":"#Indentify the features;\ndata.columns","7399ef07":"#Indentify the shape of data:\nprint(\"Number of Rows\",data.shape[0])\nprint(\"Number of Columns\",data.shape[1])","62db199c":"#Indentify the datatype of features;\ndata.dtypes","f044b039":"#Checking if dataset has a empty cell \ndata.isnull().sum().any()","93d25aaf":"#Indentify the number of empty cells;\ndata.isnull().sum()","4012997f":"msno.bar(data)","ec0c8ecd":"##Information about the data;\ndata.info()","a560c6cf":"#Describe the data;\ndata.describe()","3683403d":"#Check how many regions;\ndata[\"Region.1\"].value_counts()","912ddf8b":"#Rename same columns name;\ndata.rename(columns={\"Region\":\"States\",\"State\":\"Region\"},inplace=True)","1c0bbe84":"#Again change column name beacuse some special charatcer is here;\ndata.columns=[\"States\",\"Date\",\"Frequency\",\"Estimated Unemployment Rate\",\"Estimated Employed\",\"Estimated Labour Participation Rate\",\"Region\",\"longitude\",\"latitude\"]","b66a50e9":"data.columns","665f4da8":"#See unique states;\ndata.States.unique()","4ed2f958":"data.States.value_counts()","7a21a0ed":"plt.figure(figsize=(15,10))\n\nplt.subplot(221)\n\ndata[\"States\"].value_counts().plot(kind=\"barh\",title=\"States\")\n\nplt.xticks(rotation=0)\n\nplt.subplot(222)\n\ndata[\"Region\"].value_counts().plot(kind=\"barh\",title=\"Regions\")\n\nplt.xticks(rotation=0)\n\nplt.subplot(223)\n\ndata[\"longitude\"].value_counts().plot(kind=\"barh\",title=\"longitude\")\n\nplt.xticks(rotation=0)\n\nplt.subplot(224)\n\ndata[\"latitude\"].value_counts().plot(kind=\"barh\",title=\"latitude\")\n\nplt.xticks(rotation=0)\n\nplt.show()\n","40cd9a0e":"#It will return day first and month then year;\ndata[\"Data\"]=pd.to_datetime(data[\"Date\"],dayfirst=True)","4d6534c7":"##It will return month integer format with new features month\n\ndata['month'] = pd.DatetimeIndex(data['Date']).month","fc5e5d96":"#It will create new feature month_name\ndata[\"Month_name\"]=data[\"month\"].apply(lambda x:calendar.month_abbr[x])","f6af2978":"data.columns","4468e42a":"#Group States with Estimated Unemployment Rate bar graph;\ngroup=data.groupby([\"States\"])[\"Estimated Unemployment Rate\"].max().sort_values(ascending=False).reset_index()\nx=group[\"States\"]\ny=group[\"Estimated Unemployment Rate\"]\ny,x=zip(*sorted(zip(y,x)))\nplt.figure(figsize=(15,10))\nplt.barh(x,y,color=\"lightblue\")\nplt.xlabel(\"States\",fontsize=15)\nplt.ylabel(\"Estimated Unemployment Rate\",fontsize=15)\nplt.title(\"Which States has maximum Estimated Unemployment Rate\")\nplt.rcParams.update({\"axes.facecolor\":\"black\"})\nplt.grid(False)\nplt.show()\n","ec5c50d3":"data.columns","96430e65":"fig=px.bar(data,x=\"States\",y=\"Estimated Unemployment Rate\",color=\"States\",hover_data=[\"States\"],animation_frame=\"Month_name\",\n           title=\"Which month is highest Estimated Unemployment Rate with States\")\nfig.show()\n","47af51ba":"Estimated=data.groupby(\"States\")[\"Estimated Employed\"].sum().sort_values(ascending=False).reset_index().head(10)\nplt.figure(figsize=(15,10))\nplt.bar(Estimated[\"States\"],Estimated[\"Estimated Employed\"],color=\"lightblue\")\nplt.title(\"Top20 States with higest Estimated Employed\",fontsize=15)\nplt.xlabel(\"States\",fontsize=15)\nplt.ylabel(\"Estimated Employed\",fontsize=15)\nplt.rcParams.update({\"axes.facecolor\":\"black\"})\nplt.grid(False)\nplt.show()","9a87e158":"Estimated_rate=data.groupby(\"States\")[\"Estimated Labour Participation Rate\"].max().sort_values(ascending=False).reset_index().head(10)\nplt.figure(figsize=(20,10))\nplt.bar(Estimated_rate[\"States\"],Estimated_rate[\"Estimated Labour Participation Rate\"],color=\"blue\")\nplt.title(\"Top10 States with higest Estimated Labour Participation Rate\",fontsize=15)\nplt.xlabel(\"States\",fontsize=15)\nplt.ylabel(\"Estimated Labour Participation Rate\",fontsize=15)\nplt.rcParams.update({\"axes.facecolor\":\"black\"})\nplt.grid(False)\nplt.show()\n","f6c32b36":"data.columns","23f9a24e":"Estimated=data.groupby([\"States\",\"Region\"])[\"Estimated Unemployment Rate\"].mean().sort_values(ascending=False).reset_index()\nfig=px.sunburst(Estimated,\n               path=[\"Region\",\"States\"],\n               values=\"Estimated Unemployment Rate\",\n               width=600,height=600,color_continuous_scale=\"RdYlGn\",\n               title=\"Unemployment Rate Each States and Regions\")\nfig.show()","cf73833f":"fig=px.scatter_geo(data,\"longitude\",\"latitude\",color=\"Region\",\n                  hover_name=\"States\",size=\"Estimated Unemployment Rate\",\n                  animation_frame=\"Month_name\",scope=\"asia\",template=\"ggplot2\",\n                  title=\"Effact of lockdown on Employment across Regions\")\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"]=2000\nfig.update_geos(lataxis_range=[5,35],lonaxis_range=[65,100])\nfig.show()","fe0f036e":"fig=px.scatter(data,x=\"States\",y=\"Estimated Unemployment Rate\",color=\"Region\",text=\"Month_name\",width=500,height=700,\n              title=\"Which State highest Unemployment Rate with Month_name and Region\")\nfig.show()","c0026cba":"##Effect of unemployment after lockdown\nafter_lockdown=data[(data[\"month\"]>=4) &(data[\"month\"]<=7)]","cd40e3dd":"#Befor lockdown;\nbefore_lockdown=data[(data[\"month\"]>=1) & (data[\"month\"]<=4)]\n","bedb5855":"after_lock = after_lockdown.groupby('States')['Estimated Unemployment Rate'].mean().reset_index()\n\nbefore_lock = before_lockdown.groupby('States')['Estimated Unemployment Rate'].mean().reset_index()\n\n\nafter_lock['Unemployment Rate before lockdown'] = before_lock['Estimated Unemployment Rate']\nafter_lock.columns = ['States','Unemployment Rate after lockdown','Unemployment Rate before lockdown']\n","aa17b40c":"after_lock","9d885cff":"x=after_lock[\"States\"]\ny=after_lock[\"Unemployment Rate before lockdown\"]\nz=after_lock[\"Unemployment Rate after lockdown\"]\nfig = go.Figure()\nfig.add_trace(go.Bar(x=x,\n                y=y,\n                name='Unemployement Rate before lockdown',\n                marker_color='rgb(55, 83, 109)'\n                ))\nfig.add_trace(go.Bar(x=x,\n                y=z,\n                name='Unemployment Rate after lockdown',\n                marker_color='rgb(26, 118, 255)'\n                ))\n\nfig.update_layout(\n    title='Unemployement Rate during Covid-19 & Before',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Percentage %',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\nfig.show()","b83623d2":"Unemployment =data.groupby([\"States\",\"Month_name\"])[\"Estimated Unemployment Rate\"].max().sort_values(ascending=False).reset_index()\nplt.figure(figsize=(15,10))\nsns.lineplot(data=Unemployment,x=\"Month_name\",y=\"Estimated Unemployment Rate\",hue='States',marker=\"o\")\nplt.title(\"Maximum Unemployment Rate according to Moanths\",fontsize=15)\nplt.xlabel(\"Month_name\",fontsize=15)\nplt.ylabel(\"Estimated Unemployment Rate\",fontsize=15)\nplt.rcParams.update({\"axes.facecolor\":\"none\"})\nplt.show()","ed53a11e":"##Correlation\nplt.figure(figsize=(15,10))\ncorr=data.corr()\nsns.heatmap(corr,annot=True,square=True,cmap=\"coolwarm\")\nplt.title(\"Correletion between 5 scores\")\nplt.yticks(rotation=0)\nplt.show()","166fa8ac":"#Thank you "}}