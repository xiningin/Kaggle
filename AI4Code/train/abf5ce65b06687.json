{"cell_type":{"0c83b777":"code","0b95b79b":"code","9afdb4f6":"code","90a63bce":"code","462af4cb":"code","477cfdcd":"code","8268a3d5":"code","f785a1e1":"code","16c6e93b":"code","95559068":"code","169a8123":"code","732743f8":"code","f94d6f7f":"code","2fd3b7fc":"code","5efb7710":"code","275dc8fc":"code","f0ae3262":"code","9c1550d3":"code","6f077326":"code","1515a475":"code","1bda4daa":"code","f75449aa":"code","ce2662b2":"code","e0c93b1d":"code","082dd2a0":"code","75a35757":"code","edc73861":"code","2bee9c7d":"code","b9abf2e2":"code","59db263b":"code","3bbeb368":"code","8bd4c8e6":"code","54714e76":"code","8983a187":"code","94901aac":"code","f2052b00":"code","a8b664c8":"code","7ab06432":"code","3c941203":"code","0c7415e5":"code","8830d2fa":"code","fd1b5c9e":"code","037aaff2":"code","c86fea24":"code","414cc6f5":"code","408a4222":"code","94ff4c98":"code","fec0798d":"code","42a2d81f":"code","01e8ed0c":"code","e926588f":"code","698c1176":"code","c60576db":"code","0b2c5d9f":"code","3a565f83":"code","807cb7c5":"code","c8344e37":"code","0c30fb71":"code","184de5bd":"code","bd835c10":"code","6fdc32d7":"code","0f770044":"code","290d05d3":"code","c016327b":"code","527d105c":"markdown","e62d16f3":"markdown","79cc2afa":"markdown","d13041c1":"markdown","0636e6ad":"markdown","88d4af55":"markdown","e32b02bb":"markdown","a4d910e7":"markdown","95545771":"markdown","1a2adad8":"markdown","576fbcbf":"markdown","432b5d55":"markdown","ca8813b2":"markdown","acaaaf04":"markdown","e399d8af":"markdown","d35ebae0":"markdown","2b2e8574":"markdown","f0c5983e":"markdown","9ef6815e":"markdown","dd5a4a0b":"markdown","e6352482":"markdown","e5122bab":"markdown","e98d1757":"markdown","7b5b26a0":"markdown","2249bef5":"markdown","c9a234c9":"markdown","5caac003":"markdown","6366f18a":"markdown","fbf79210":"markdown"},"source":{"0c83b777":"import pandas as pd\nimport numpy as np\nimport random\nimport sqlite3\nimport matplotlib.pyplot as plt\nimport folium\n%matplotlib inline\nimport os\nprint(os.environ['PATH'])","0b95b79b":"# Connecting to sqlite database\ncnx = sqlite3.connect('..\/input\/world-development-indicators\/database.sqlite')","9afdb4f6":"cursor = cnx.cursor()\ncursor.execute(\"SELECT name FROM sqlite_master WHERE type='table';\")\nprint(cursor.fetchall())","90a63bce":"data = pd.read_sql_query(\"select * from Indicators;\", cnx)\ndata.head()","462af4cb":"print('Number of observation is ', len(data))","477cfdcd":"print('Number of distinct Indicator is', len(data['IndicatorCode'].unique()))","8268a3d5":"print('Range of indicators year is [', data['Year'].min(),',',data['Year'].max(),']')","f785a1e1":"print('Number of concerned country is ', len(data[\"CountryCode\"].unique()))","16c6e93b":"series = pd.read_sql_query(\"select * from Series;\", cnx)\nseries.head()","95559068":"for tpc in series['Topic'].unique():\n    print(tpc) ","169a8123":"series[series['Topic']=='Poverty: Income distribution']","732743f8":"# GINI index (World Bank estimate)\n# SI.POV.GINI\nprint(series[series['Topic']=='Poverty: Income distribution'].loc[940, 'IndicatorName'])\nprint(series[series['Topic']=='Poverty: Income distribution'].loc[940, 'LongDefinition'])","f94d6f7f":"series[series['Topic']=='Poverty: Poverty rates']","2fd3b7fc":"# Poverty gap at $1.90 a day (2011 PPP) (%)\n# SI.POV.GAPS\nprint(series[series['Topic']=='Poverty: Poverty rates'].loc[948,'IndicatorName'])\nprint(series[series['Topic']=='Poverty: Poverty rates'].loc[948,'LongDefinition'])","5efb7710":"# Poverty gap at national poverty lines (%)\n# SI.POV.NAGP\nprint(series[series['Topic']=='Poverty: Poverty rates'].loc[950,'IndicatorName'])\nprint(series[series['Topic']=='Poverty: Poverty rates'].loc[950,'LongDefinition'])","275dc8fc":"series[series['Topic']=='Poverty: Shared prosperity']","f0ae3262":"# Annualized average growth rate in per capita real survey mean consumption or income, bottom 40% of population (%)\n# SI.SPR.PC40.ZG\nprint(series[series['Topic']=='Poverty: Shared prosperity'].loc[958,'IndicatorName'])\nprint(series[series['Topic']=='Poverty: Shared prosperity'].loc[958,'LongDefinition'])","9c1550d3":"# Survey mean consumption or income per capita, bottom 40% of population (2011 PPP $ per day)\n# SI.SPR.PC40\nseries[series['Topic']=='Poverty: Shared prosperity'].loc[961,'LongDefinition']","6f077326":"# # Create list of only countries\n# df_countries = pd.DataFrame(columns=['CountryCode', 'CountryName'])\n# with open('..\/input\/country-alpha-codes\/Country_Code_alpha3.txt') as f:\n#     for line in f:\n# #         print({'CountryCode' : line[:3], 'CountryName' : line[4:-2]})\n#         df_countries = df_countries.append({'CountryCode' : line[:3], 'CountryName' : line[4:-2]}, ignore_index=True)\n# df_countries.to_csv('..\/input\/country-alpha-codes\/Country_Code_alpha3.csv', index=False)  \n# # df_countries.head(100)","1515a475":"# Get Countries code without groups of countries\nonlycontries = pd.read_csv('..\/input\/country-codes\/Country_Code_alpha3.csv')\n    \nonlycontries.drop(['CountryName'], axis=1, inplace=True)\nonlycontries.head()\nprint(len(data))\ndata = pd.merge(data, onlycontries, how='inner')\nprint(len(data))","1bda4daa":"print('Number of concerned country is ', len(data[\"CountryCode\"].unique()))","f75449aa":"gini = data[data['IndicatorCode']=='SI.POV.GINI']","ce2662b2":"print('Number of concerned country is ', len(gini[\"CountryCode\"].unique()))","e0c93b1d":"gini[\"CountryCode\"].value_counts()","082dd2a0":"cntry = []\nfor y in range(1960,2015):\n    cntry.append(gini[gini['Year']==y].shape[0])\nprint([(i+1960,j) for i, j in enumerate(cntry) ])","75a35757":"country_geo = '..\/input\/python-folio-country-boundaries\/world-countries.json'\n# Setup a folium map at a high-level zoom @Alok - what is the 100,0, doesn't seem like lat long\nmap = folium.Map(location=[40, 20], zoom_start=1.5)\n# choropleth maps bind Pandas Data Frames and json geometries.  This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=gini,\n             columns=['CountryCode', 'Value'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name=gini.iloc[0]['IndicatorName'])\n# Create Folium plot\nmap.save('plot_gini.html')\n\n# Import the Folium interactive html file\nfrom IPython.display import HTML\nHTML('<iframe src=plot_gini.html width=900 height=550><\/iframe>')","edc73861":"Poverty_gap=data[data['IndicatorCode']=='SI.POV.GAPS']","2bee9c7d":"print('Number of concerned country is ', len(Poverty_gap[\"CountryCode\"].unique()))","b9abf2e2":"Poverty_gap[\"CountryCode\"].value_counts()","59db263b":"cntry = []\nfor y in range(1960,2015):\n    cntry.append(Poverty_gap[Poverty_gap['Year']==y].shape[0])\nprint([(i+1960,j) for i, j in enumerate(cntry) ])","3bbeb368":"country_geo = '..\/input\/python-folio-country-boundaries\/world-countries.json'\n# Setup a folium map at a high-level zoom @Alok - what is the 100,0, doesn't seem like lat long\nmap = folium.Map(location=[40, 20], zoom_start=1.5)\n# choropleth maps bind Pandas Data Frames and json geometries.  This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=Poverty_gap,\n             columns=['CountryCode', 'Value'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name=Poverty_gap.iloc[0]['IndicatorName'])\n# Create Folium plot\nmap.save('plot_Poverty_gap.html')\n\n# Import the Folium interactive html file\nfrom IPython.display import HTML\nHTML('<iframe src=plot_Poverty_gap.html width=900 height=550><\/iframe>')","8bd4c8e6":"#### National Poverty Gap","54714e76":"National_Poverty_Gap=data[data['IndicatorCode']=='SI.POV.NAGP']","8983a187":"print('Number of concerned country is ', len(National_Poverty_Gap[\"CountryCode\"].unique()))","94901aac":"National_Poverty_Gap[\"CountryCode\"].value_counts()","f2052b00":"series[series['Topic']=='Economic Policy & Debt: National accounts: US$ at current prices: Aggregate indicators']","a8b664c8":"GDP_capita = data[(data['IndicatorCode'] == 'NY.GDP.PCAP.CD')]\nGDP_capita.head()","7ab06432":"print('year Range of GDP per capita is [', GDP_capita['Year'].min(),',',GDP_capita['Year'].max(),']')","3c941203":"top10_gdp_capita = GDP_capita[GDP_capita['Year']==2014].nlargest(10, 'Value')\nax = top10_gdp_capita.plot.bar(x='CountryName', y='Value', figsize=(10,5), legend=False)\nax.set_ylabel('GDP per capita (US$)')\nax.set_xlabel('Country Name')","0c7415e5":"top10_gdp_capita = GDP_capita[GDP_capita['Year']==2010].nlargest(10, 'Value')\nax = top10_gdp_capita.plot.bar(x='CountryName', y='Value', figsize=(8,5), legend=False)\nax.set_ylabel('GDP per capita (US$) 2010')\nax.set_xlabel('Country Name')\n# plt.savefig('figures\/gdp_capita_2010.png')","8830d2fa":"# Visualize GDP per capita using Folium\ncountry_geo = '..\/input\/python-folio-country-boundaries\/world-countries.json'\n# Setup a folium map at a high-level zoom @Alok - what is the 100,0, doesn't seem like lat long\nmap = folium.Map(location=[40, 20], zoom_start=1.5)\n# choropleth maps bind Pandas Data Frames and json geometries.  This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=GDP_capita[GDP_capita['Year']==2014],\n             columns=['CountryCode', 'Value'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name='GDP per capita, 2014')\n# Create Folium plot\nmap.save('plot_gdp_capita.html')\n\n# Import the Folium interactive html file\nfrom IPython.display import HTML\nHTML('<iframe src=plot_gdp_capita.html width=900 height=550><\/iframe>')","fd1b5c9e":"GDP = data[(data['IndicatorCode'] == 'NY.GDP.MKTP.CD')]\nGDP.head()","037aaff2":"top10_gdp = GDP[GDP['Year']==2014].nlargest(10, 'Value')\ntop10_gdp.head(10)","c86fea24":"ax = top10_gdp.plot.bar(x='CountryName', y='Value', figsize=(10,5), legend=False)\nax.set_ylabel('GDP (US$)')","414cc6f5":"# Find Population indicator\nseries[series['IndicatorName'].str.contains('population')]","408a4222":"# Get the rural and urban population\nRural_pop = data[(data['IndicatorCode'] == 'SP.RUR.TOTL')]\nUrban_pop = data[(data['IndicatorCode'] == 'SP.URB.TOTL')]","94ff4c98":"population = pd.merge(Rural_pop, Urban_pop, how='inner', left_on=['CountryCode', 'Year'], right_on=['CountryCode', 'Year'])\npopulation['population'] = population['Value_x'] + population['Value_y']\npopulation = population[['CountryName_x','CountryCode','Year','population']]\npopulation.columns = ['CountryName','CountryCode','Year','population']","fec0798d":"top10_population = population[population['Year']==2014].nlargest(10, 'population')\ntop10_population.head(10)","42a2d81f":"top10_population.plot.bar(x='CountryName', y='population', figsize=(10,5), legend=False)","01e8ed0c":"series[series['Topic']=='Environment: Natural resources contribution to GDP']","e926588f":"natural_ress = data[data[\"IndicatorCode\"]=='NY.GDP.TOTL.RT.ZS']\nnatural_ress.head()","698c1176":"top10_natural_ress = natural_ress[natural_ress['Year']==2010].nlargest(10, 'Value')\nax = top10_natural_ress.plot.bar(x='CountryName', y='Value', figsize=(8,6), legend=False)\nax.set_ylabel('Total natural resources rents (% of GDP)')\nax.set_xlabel('County Name')","c60576db":"# First, let's calculate the real value of the natural ressources in US$: GDP*Natural resources contribution to GDP\/100\nress_value = pd.merge(GDP, natural_ress, how='inner', left_on=['CountryCode', 'Year'], right_on=['CountryCode', 'Year'])\nress_value['ress_value'] = ress_value['Value_x']*ress_value['Value_y']\/100\nress_value = ress_value[['CountryName_x','CountryCode','Year','ress_value']]\nress_value.columns = ['CountryName','CountryCode','Year','ress_value']\nress_value.head()","0b2c5d9f":"# Visualize GDP per capita using Folium\ncountry_geo = '..\/input\/python-folio-country-boundaries\/world-countries.json'\n# Setup a folium map at a high-level zoom @Alok - what is the 100,0, doesn't seem like lat long\nmap = folium.Map(location=[40, 20], zoom_start=1.5)\n# choropleth maps bind Pandas Data Frames and json geometries.  This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=ress_value[ress_value['Year']==2010],\n             columns=['CountryCode', 'ress_value'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name='Natural ressource value (US$), 2010')\n# Create Folium plot\nmap.save('Natural_ressource_value.html')\n\n# Import the Folium interactive html file\nfrom IPython.display import HTML\nHTML('<iframe src=Natural_ressource_value.html width=900 height=550><\/iframe>')","3a565f83":"# let's calculate now the natural ressource value per capita in US$\nress_capita = pd.merge(ress_value, population, how='inner', left_on=['CountryCode', 'Year'], right_on=['CountryCode', 'Year'])\nress_capita['ress_capita'] = ress_capita['ress_value']\/ress_capita['population']\nress_capita = ress_capita[['CountryName_x','CountryCode','Year','ress_capita']]\nress_capita.columns = ['CountryName','CountryCode','Year','ress_capita']\nress_capita.head()","807cb7c5":"# Visualize GDP per capita using Folium\ncountry_geo = '..\/input\/python-folio-country-boundaries\/world-countries.json'\n# Setup a folium map at a high-level zoom @Alok - what is the 100,0, doesn't seem like lat long\nmap = folium.Map(location=[40, 20], zoom_start=1.5)\n# choropleth maps bind Pandas Data Frames and json geometries.  This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=ress_capita[ress_capita['Year']==2010],\n             columns=['CountryCode', 'ress_capita'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name='Natural ressource value per capita(US$), 2010')\n# Create Folium plot\nmap.save('Natural_ressource_value_per_capita.html')\n\n# Import the Folium interactive html file\nfrom IPython.display import HTML\nHTML('<iframe src=Natural_ressource_value_per_capita.html width=900 height=550><\/iframe>')","c8344e37":"top10_ress_capita = ress_capita[ress_capita['Year']==2010].nlargest(10, 'ress_capita')\nax = top10_ress_capita.plot.bar(x='CountryName', y='ress_capita', figsize=(8,5), legend=False)\nax.set_xlabel('Country Name')\nax.set_ylabel('Natural Ressource Value per capita (US$)')\n# plt.savefig('figures\/nat_ress_capita_2010.png')","0c30fb71":"gini_gdp = pd.merge(gini, GDP_capita, how='inner', left_on=['CountryCode', 'Year'], right_on=['CountryCode', 'Year'])\ngini_gdp.head()","184de5bd":"gini_gdp[gini_gdp['Year'].between(2004, 2012, inclusive=True)][['Value_x', 'Value_y']].corr()","bd835c10":"gdp_ress = pd.merge(GDP_capita, ress_capita, how='inner', left_on=['CountryCode', 'Year'], right_on=['CountryCode', 'Year'])\ngdp_ress = gdp_ress[['CountryName_x', 'CountryCode', 'Year', 'Value', 'ress_capita']]\ngdp_ress.columns = ['CountryName', 'CountryCode', 'Year', 'gdp_capita', 'ress_capita']\ngdp_ress.head()","6fdc32d7":"ax = gdp_ress[gdp_ress['Year']==2010].plot.scatter('gdp_capita', 'ress_capita', figsize=(15,15))\nlabels = gdp_ress[(gdp_ress['Year']==2010)&((gdp_ress['gdp_capita']>50000)|(gdp_ress['ress_capita']>1000))]\nfor index, row in labels.iterrows():\n    ax.text(row['gdp_capita'], row['ress_capita'], row['CountryName'], fontsize='x-large', color='red')\nax.set_xlabel('GDP per capita (US$)', fontsize='x-large')\nax.set_ylabel('Natural ressource value per capita (US$)', fontsize='x-large')","0f770044":"gdp_ress[['gdp_capita','ress_capita']].corr()","290d05d3":"print(gdp_ress['Year'].min(),gdp_ress['Year'].max())","c016327b":"gdp_ress.head()","527d105c":"Let's take a look at the natural ressources value for each country. ","e62d16f3":"### Natural ressources","79cc2afa":"## Explore the series Table","d13041c1":"The GINI index is provided for 153 country, but the index is irregular on time. Brazil GINI index is the most regular during 29 years. A Gini index of 0 represents perfect equality, while an index of 100 implies perfect inequality.","0636e6ad":"r = -0.44, a moderate downhill (negative) relationship between GINI index and GDP per capita.\n\nAll poverty indicators are irregular. So we can not get good quality analysis.","88d4af55":"# 1- Exloring DATA","e32b02bb":"### Listing Aggregate indicators in US\\$ at current prices (Economic Policy & Debt: National accounts)","a4d910e7":"Explaining the differences in today\u2019s global society is a topic that clearly captures the interest of many, the hardback version of Thomas Piketty\u2019s new book \u201cCapital in the Twenty-First Century\u201d is second on Amazon\u2019s best-seller list. That\u2019s not bad for a pretty hefty book about economics and the distribution of wealth!","95545771":"# 2- Data Analysis","1a2adad8":"<h1 style=\"color:blue;font-family:verdana;font-size:300%;\"><center>Does the country wealth in natural resource imply the population welfare?<\/center><\/h1>","576fbcbf":"**Motivation**\n\n\nWelfare is a government support for the citizens and residents of society. Welfare may be provided to people of any income level, as with social security (and is then often called a social safety net), but it is usually intended to ensure that the poor can meet their basic human needs such as food and shelter. Welfare attempts to provide poor people with a minimal level of well-being, usually either a free- or a subsidized-supply of certain goods and social services, such as healthcare, education, and vocational training. \n\nSource: https:\/\/en.wikipedia.org\/wiki\/Welfare\n","432b5d55":"Top 10 populated countries","ca8813b2":"# 3- Correlation","acaaaf04":"The natural ressources are presented by a percentage of the GDP. Let's convert it to natural ressources per capita.","e399d8af":"**Data Source: World Development Indicators**\n\nhttps:\/\/www.kaggle.com\/worldbank\/world-development-indicators","d35ebae0":"## List all tables into the sqlite database","2b2e8574":"## Explore the Indicators Table","f0c5983e":"r = 0.37, a weak downhill (positive) relationship between GDP per capita and Natural ressource value per capita.","9ef6815e":"### Poverty visualization","dd5a4a0b":"Does the natural ressource of a country induces hight living quality","e6352482":"#### Poverty gap (World Bank estimate)","e5122bab":"Correlation between the GINI index and the GDP per capita between 2004 and 2012","e98d1757":"1. Scattering of countries in 2010 throw GDP per capita and natural resource per capita.\n1. That is clear that the two top countries that have more then 100 000 $ per capita, don\u2019t have natural resources.\n\n1.  The two richest countries (Qatar, Kuwait) on natural resources per capita have less then 80 000$ per capita.\n\n1. Norway is doing the best.","7b5b26a0":"## What's the poverty indicators?","2249bef5":"### Population","c9a234c9":"## List of all indicator topics:","5caac003":"The gross domestic product (GDP) per capita is derived from PPP (Purchasing Power Parity) calculations. \nThe purchasing power parity (PPP) value of all final goods and services produced within a country in a given year, divided by the average (or mid-year) population for the same year.\nGDP (PPP) per capita is often considered one of the indicators of a country's standard of living, although this can be problematic because GDP per capita is not a measure of personal income.\n\nsource : [https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_GDP_(PPP)_per_capita](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_GDP_(PPP)_per_capita)","6366f18a":"#### GINI index (World Bank estimate)\nThe Gini index or Gini coefficient is a statistical measure of distribution. It is often used as a gauge of economic inequality, measuring income distribution or, less commonly, wealth distribution among a population. The coefficient ranges from 0 (or 0%) to 1 (or 100%), with 0 representing perfect equality and 1 representing perfect inequality.","fbf79210":"We presented the top 10 countries that have the highest GDP and Natural resource value per capita, 2010.\nWe can see that only two countries (Norway, Qatar) exist on the top 10 highest Natural resource value per capita and they still exist on the to 10 highest GDP per capita."}}