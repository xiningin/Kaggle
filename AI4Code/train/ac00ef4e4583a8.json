{"cell_type":{"ca9c322b":"code","ba4016a8":"code","933e2cdf":"code","38ff5072":"code","f443e9e2":"code","e1d45bb5":"code","4be43b9f":"code","e4fb4581":"code","2a2f9508":"code","16541a3a":"code","629d1573":"code","923292e5":"code","ef8e2d53":"code","6eb28821":"code","ed58ac2e":"code","d6a2517b":"code","417ec5bb":"code","4f8d4e92":"code","2497c1b8":"code","250d3acc":"code","3b29490d":"code","bf07e7bc":"code","2f7fa875":"code","0c0adfbf":"code","62b196c6":"code","74e9d283":"code","96bf0b80":"code","d99042ed":"code","220350f0":"code","15325cc1":"code","4838b713":"code","1b149d8b":"code","7f60bb9f":"code","f16f3099":"code","4cb0bdc2":"code","0a306e21":"code","77e850f7":"code","1db45164":"code","4a2e5547":"code","02a89cbe":"code","6abac9c7":"code","506c115b":"code","21a90654":"code","9b2c3fb7":"code","9c3eccba":"code","84410f5a":"code","0ccb89be":"code","ebb10cee":"code","c726f828":"code","7af74f90":"code","f77d047b":"code","0a0c0349":"code","591581f2":"code","338faa2c":"code","4e53349b":"code","7b56e2a0":"code","052c96cf":"code","0b3853ff":"code","184232c0":"code","a70024c5":"code","841b9e65":"code","fce86d9c":"code","e6649dc4":"code","c29bec1a":"code","f0a3661d":"code","c29daabb":"code","0baf5727":"code","59975d12":"code","6e856552":"code","03d6d247":"code","f0775976":"code","0a8b2bb8":"code","6997ac1e":"code","fbd2e4d7":"code","ed0bd2cc":"code","5e1bd679":"code","3a20316f":"code","e04dd185":"code","e82d3f81":"code","2bc61eba":"code","41199425":"code","a37b8966":"markdown","e7f6fb65":"markdown","e510feef":"markdown","7681ba04":"markdown","41b89ab8":"markdown","70c34342":"markdown","aae5f948":"markdown","5945442a":"markdown","ad7ff069":"markdown","8ff77127":"markdown","ade8e4d3":"markdown","d706263a":"markdown","265127a4":"markdown","46830b3f":"markdown","2badc3cc":"markdown","3eb6b5a3":"markdown","8cd41f61":"markdown","9f3e0c88":"markdown","e9a07e08":"markdown","048e59bc":"markdown","40df595e":"markdown","02f77b9f":"markdown","4f9de319":"markdown","4e01b0ef":"markdown","fa83fa97":"markdown","288900a3":"markdown","1082e222":"markdown"},"source":{"ca9c322b":"# imports \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","ba4016a8":"# importing df (data frame) collecting the totals for surveys 2018, 2019, 2020, 2021\ntot_all = pd.read_csv('..\/input\/survey-totals-merged-data\/totals_by_country_18_20.csv')\ntotals = tot_all.drop(['Countries'], axis=1).sum().to_dict()\nkagglers_tot = pd.DataFrame.from_dict(totals,  orient='index').reset_index()\nkagglers_tot.columns=['Year', 'Total']\nkagglers_tot","933e2cdf":"import matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(4,6))  \nkagglers_tot.plot.bar(width=.8, ax = ax,color='mediumseagreen' )\n\nax.set_xticklabels(kagglers_tot['Year'],  rotation = 45,)\nplt.title('Year on Year Totals')\nplt.ylabel('Count')","38ff5072":"#importing data\ntots_cols = ['Countries','Totals_2018', 'Totals_2021']\ntot = pd.read_csv('..\/input\/additional-data-wiki-22nov\/additional_data22Nov_wiki.csv', usecols=tots_cols)\ntot.head()","f443e9e2":"#Removing 'Other' and 'I do not wish to disclose...' from df\ntot.drop(3, inplace=True)\ntot.drop(12, inplace=True)","e1d45bb5":"#visualise the Kagglers\n\nimport plotly.graph_objs as go \nfrom plotly.offline import init_notebook_mode,iplot,plot\n\n\n\"\"\"\" code sourced at https:\/\/www.kdnuggets.com\/2020\/09\/geographical-plots-python.html \"\"\"\n\ndata = dict(\n        type = 'choropleth',\n        colorscale = 'rainbow',\n        locations = tot['Countries'],\n        locationmode = \"country names\",\n        z = tot['Totals_2018'],\n        text = tot['Countries'],\n        colorbar = {'title' : 'Kagglers 2018'}\n      )\n\nlayout = dict(title = '2018 Kaggle Surevey .' , geo = dict(projection = {'type':'natural earth'}))\nchoromap = go.Figure(data = [data],layout = layout)\n\nchoromap.update_geos(resolution=50,)\niplot(choromap,validate=False)\n\ndata1 = dict(\n        type = 'choropleth',\n        colorscale = 'rainbow',\n        locations = tot['Countries'],\n        locationmode = \"country names\",\n        z = tot['Totals_2021'],\n        text = tot['Countries'],\n        colorbar = {'title' : 'Kagglers 2021'},\n      )\n\n\n\nlayout1 = dict(title = '2021 Kaggle Surevey .', geo = dict(projection = {'type':'natural earth'}))\nchoromap1 = go.Figure(data = [data1],layout = layout1)\n\nchoromap1.update_geos(resolution=50,)\niplot(choromap1,validate=False)","4be43b9f":"most18abs = tot.sort_values(by='Totals_2018', ascending=False).head(5)\nmostabs = tot.sort_values(by='Totals_2021', ascending=False).head(5)\n\nprint('Most Kagglers in absolute numbers: \\n\\n 2018 \\n', most18abs[['Countries','Totals_2018']] ,'\\n\\n 2021 \\n', mostabs[['Countries','Totals_2021']])\n","e4fb4581":"#Importing data\npops_cols = ['Countries','Totals_2018', 'Totals_2021', 'Population_2018', 'Population_2021']\ntot_by_pop = pd.read_csv('..\/input\/additional-data-wiki-22nov\/additional_data22Nov_wiki.csv', usecols=pops_cols)\n#Removing 'Other' and 'I do not wish to disclose...' from df\ntot_by_pop.drop(3, inplace=True)\ntot_by_pop.drop(12, inplace=True)\ntot_by_pop.head()","2a2f9508":"#Turning Kaggle numbers into % of country population\ntot_by_pop['kag_%_21'] =(tot_by_pop['Totals_2021'])\/(tot_by_pop['Population_2021'])\ntot_by_pop['kag_%_18'] =(tot_by_pop['Totals_2018'])\/(tot_by_pop['Population_2018'])","16541a3a":"#visualise the Kagglers as % of population\n\nimport plotly.graph_objs as go \nfrom plotly.offline import init_notebook_mode,iplot,plot\n\n\n\"\"\"\" code sourced at https:\/\/www.kdnuggets.com\/2020\/09\/geographical-plots-python.html \"\"\"\n\ndata = dict(\n        type = 'choropleth',\n        colorscale = 'rainbow',\n        locations = tot_by_pop['Countries'],\n        locationmode = \"country names\",\n        z = tot_by_pop['kag_%_18'],\n        text = tot_by_pop['Countries'],\n        colorbar = {'title' : 'Kagglers 2018 % of population'}\n      )\n\nlayout = dict(title = '2018 Kaggle Surevey .' , geo = dict(projection = {'type':'natural earth'}))\nchoromap = go.Figure(data = [data],layout = layout)\n\nchoromap.update_geos(resolution=50,)\niplot(choromap,validate=False)\n\ndata1 = dict(\n        type = 'choropleth',\n        colorscale = 'rainbow',\n        locations = tot_by_pop['Countries'],\n        locationmode = \"country names\",\n        z = tot_by_pop['kag_%_21'],\n        text = tot_by_pop['Countries'],\n        colorbar = {'title' : '% of population'},\n      )\n\n\n\nlayout1 = dict(title = '2021 Kaggle Surevey .', geo = dict(projection = {'type':'natural earth'}))\nchoromap1 = go.Figure(data = [data1],layout = layout1)\n\nchoromap1.update_geos(resolution=50,)\niplot(choromap1,validate=False)","629d1573":"most18 = tot_by_pop.sort_values(by='kag_%_18', ascending = False).head(5)\nmost = tot_by_pop.sort_values(by='kag_%_21', ascending=False).head(5)\n\nprint('Most Kagglers as proportion of the population: \\n\\n 2018 \\n', most18[['Countries','kag_%_18']] ,'\\n\\n 2021 \\n', most[['Countries','kag_%_21']])","923292e5":"tot['diff_18_21']= (tot['Totals_2021']-tot['Totals_2018'])\/(tot['Totals_2021']+tot['Totals_2018']) #turning the difference into -1,1 range \n\ntot.sort_values(by='Countries', inplace=True)\n\nimport matplotlib.pyplot as plt\n\ntot['positive'] = tot['diff_18_21']> 0\n\nfig, ax = plt.subplots(figsize=(24,6))  \ntot['diff_18_21'].plot.bar( width=.6,ax = ax,color=tot.positive.map({True: 'b', False: 'r'}))\n\n\nax.set_xticklabels(tot['Countries'])\n\nplt.title('Numbers of Kagglers: gainers and losers.')","ef8e2d53":"# Get gender numbers per country from 2018 survey\ngender18 = ['Q1', 'Q3']\ngen_18 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', usecols=gender18)\ngen_18.columns=['Gender', 'Country']\ngen_18.drop(0, inplace=True) # drop question text","6eb28821":"# Get gender numbers per country from 2021 survey\ngender21 = ['Q2' ,'Q3']\ngen_21 = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=gender21)\ngen_21.columns=['Gender', 'Country']\ngen_21.drop(0, inplace=True) # drop question text","ed58ac2e":"gender_2018 = gen_18['Gender'].value_counts().rename_axis('Gender').reset_index(name = '2018')\ngender_2018['Gender'] =gender_2018['Gender'].str.replace('Male','Man')\ngender_2018['Gender'] = gender_2018['Gender'].str.replace('Female','Woman')\nprint('Totals by gender for 2018 survey:')\ngender_2018","d6a2517b":"gender_2021 = gen_21['Gender'].value_counts().rename_axis('Gender').reset_index(name = '2021')\nprint('Totals by gender for 2021 survey:')\ngender_2021","417ec5bb":"gender_2018_tot =gender_2018['2018'].sum()\nman_18 =((gender_2018.iloc[0, 1:].to_list())\/gender_2018_tot)*100\nwoman_18 = ((gender_2018.iloc[1, 1:].to_list())\/gender_2018_tot)*100\nprefer_not18 = ((gender_2018.iloc[2, 1:].to_list())\/gender_2018_tot)*100\nprefer_self18= ((gender_2018.iloc[3, 1:].to_list())\/gender_2018_tot)*100\n\ngender_2021_tot =gender_2021['2021'].sum()\nman_21 =((gender_2021.iloc[0, 1:].to_list())\/gender_2021_tot)*100\nwoman_21 = ((gender_2021.iloc[1, 1:].to_list())\/gender_2021_tot)*100\nprefer_not = ((gender_2021.iloc[2, 1:].to_list())\/gender_2021_tot)*100\nnon_bi= ((gender_2021.iloc[3, 1:].to_list())\/gender_2021_tot)*100\nprefer_self= ((gender_2021.iloc[4, 1:].to_list())\/gender_2021_tot)*100\n\nprint('Kagglers in percentages 2018: \\n man: ' ,man_18, '\\n woman: ',woman_18, '\\n prefer not to say:',prefer_not18, '\\n prefer to self describe:', prefer_self18)\n\nprint('\\nKagglers in percentages 2021: \\n man: ' ,man_21, '\\n woman: ',woman_21, '\\n prefer not to say:',prefer_not,'\\n prefer to self describe:', prefer_self, '\\n nonbinary',non_bi, )","4f8d4e92":"#Prepping data for visualization\n\npic18d = {'man': 81.43677438, 'woman': 16.8070749, 'prefer not to say': 1.42503877, 'prefer to self describe': 0.33111195}\n\npic18 = pd.DataFrame.from_dict(pic18d,orient='index').reset_index()\npic18.columns = (['Gender', 'Percent'])\n\npic21d = {'man': 79.30543256, 'woman': 18.82724368, 'prefer not to say': 1.36680399, 'prefer to self describe': (0.16170639+0.33881338)} #clubbing nonbinary with prefer to self describe for viz. comaparison ONLY\npic21 = pd.DataFrame.from_dict(pic21d,orient='index').reset_index()\npic21.columns = (['Gender', 'Percent'])","2497c1b8":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = pic18['Gender']\nlabels1 = pic21['Gender']\n\nfig = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['2018', '2021'])\nfig.add_trace(go.Pie(labels=labels, values=pic18['Percent'], scalegroup='one',\n                     name=\"Gender % in  2018\"), 1, 1)\nfig.add_trace(go.Pie(labels=labels1, values=pic21['Percent'], scalegroup='one',\n                     name=\"Gender % in  2021\"), 1, 2)\n\nfig.update_layout(title_text='Kagglers %')\nfig.show()","250d3acc":"gen_country18 = gen_18.groupby(['Country', 'Gender'])['Country'].count().unstack('Gender').fillna(0).reset_index()\ngen_country18 = gen_country18.sort_values(by='Female', ascending=False)\ngen_country18['Total'] = gen_country18.sum(axis=1)\ngen_country18.head(5).rename_axis('2018')\n\ngen_country = gen_21.groupby(['Country', 'Gender'])['Country'].count().unstack('Gender').fillna(0).reset_index()\ngen_country = gen_country.sort_values(by='Woman', ascending=False)\ngen_country['Total'] = gen_country.sum(axis=1)\ngen_country.head(5).rename_axis('2021')\n\nprint( 'Top 5 countries with highest numbers of female Kagglers in 2018: \\n ')\nprint(gen_country18[['Country', 'Female']].head(5))\n\nprint( '\\nTop 5 countries with highest numbers of female Kagglers in 2021: \\n ')\nprint(gen_country[['Country', 'Woman']].head(5))","3b29490d":"#Prepping the data 2018\ngen_country18['%Women'] = (gen_country18['Female']\/gen_country18['Total'])*100\n\n#the numbers for 'Prefer not to say, \tPrefer to self-describe' are low and might get lost in the viz, so for viz purposes ONLY I'm clubbing them under a new category called ''NonB_PrNtS_PrSlDs' (from the headers Initails )\ngen_country18['%NonB_PrNtS_PrSlDs']=((gen_country18[['Prefer not to say','Prefer to self-describe']].sum(axis=1))\/gen_country18['Total'])*100\n\ngen_country18['%Men']= (gen_country18['Male']\/gen_country18['Total'])*100\n\nsort18_w =  gen_country18.sort_values(by='%Women')\nsort18_w.head()","bf07e7bc":"#Prepping the data 2021\ngen_country['%Women'] = (gen_country['Woman']\/gen_country['Total'])*100\n\n#the numbers for 'Nonbinary, \tPrefer not to say, \tPrefer to self-describe' are low and might get lost in the viz, so for viz purposes ONLY I'm clubbing them under a new cat called ''NonB_PrNtS_PrSlDs' (from the headers Initails )\n\ngen_country['%NonB_PrNtS_PrSlDs']=((gen_country[['Nonbinary','Prefer not to say','Prefer to self-describe']].sum(axis=1))\/gen_country['Total'])*100\n\ngen_country['%Men']= (gen_country['Man']\/gen_country['Total'])*100\n\nsort_w =  gen_country.sort_values(by='%Women')\nsort_w.head()","2f7fa875":"tail_5_18=sort18_w.head(5)\nhead_5_18= sort18_w.tail(5)\ntail_5=sort_w.head(5)\nhead_5= sort_w.tail(5)\n\nprint('                         Female Kagglers , as a percentage of the country population\\n')\nprint(' Most Female partecipation in 2018:\\n', head_5_18['Country'].reset_index().drop(['index'], axis=1), '\\n', '\\n Lowest Female partecipation in 2018:\\n', tail_5_18['Country'].reset_index().drop(['index'], axis=1))\nprint('\\n Most Female partecipation in 2021:\\n', head_5['Country'].reset_index().drop(['index'], axis=1), '\\n', '\\n Lowest Female partecipation in 2021:\\n', tail_5['Country'].reset_index().drop(['index'], axis=1))","0c0adfbf":"#combining df for 2018, 2019\npart_w1 = gen_country[['Country','%Women',]].merge(gen_country18[['Country','%Women',]], how='outer', left_on=['Country'], right_on=['Country'],suffixes=('_2021', '_2018')).fillna(0)\npart_w= part_w1.copy()","62b196c6":"#Calculating the change in female partecipation range -1,1\npart_w['%diff'] = (part_w['%Women_2021']-part_w['%Women_2018'])\/(part_w['%Women_2021']+part_w['%Women_2018'])\n\npart_w_diff = part_w[['Country','%diff']]\npart_w_diff.sort_values(by='Country', inplace=True)\npart_w_diff.head()","74e9d283":"import matplotlib.pyplot as plt\n\npart_w_diff['posi'] = part_w_diff['%diff']> 0.0\n\nfig, ax = plt.subplots(figsize=(24,6))  \npart_w_diff['%diff'].plot.bar( width=.6, ax = ax, color=part_w_diff['posi'].map({True: 'b', False: 'r'}))#stacked=True)\n\n\nax.set_xticklabels(part_w_diff['Country'])\n\nplt.title('Female Partecipation changes between 2018 and 2021 by country')","96bf0b80":"# Prepping the data\nviz_inc18 = gen_country18[['Country','Female','Male']]\nviz_inc21 = gen_country[['Country','Man','Woman']]","d99042ed":"import numpy as np\nviz_merge = viz_inc21.merge(viz_inc18, how='outer', left_on=['Country'], right_on=['Country'], suffixes=('_2018', '_2021'))\nviz_merge['tot_m_f_2018'] = viz_merge['Female']+viz_merge['Male']\nviz_merge['tot_m_f_2021'] = viz_merge['Woman']+viz_merge['Man']\nviz_merge['tot_incr\/dcr'] = (viz_merge['tot_m_f_2021']-viz_merge['tot_m_f_2018'])\/(viz_merge['tot_m_f_2021']+viz_merge['tot_m_f_2018'])\nviz_merge['tot_incr\/dcr_w'] =(viz_merge['Woman']-viz_merge['Female'])\/(viz_merge['Woman']+viz_merge['Female'])\nviz_merge['tot_incr\/dcr_m'] =(viz_merge['Man']-viz_merge['Male'])\/(viz_merge['Man']+viz_merge['Male'])\nfilt_part= viz_merge['tot_incr\/dcr']>=0\nposi_only = viz_merge[filt_part]\nposi_only.head()","220350f0":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import rc\nimport pandas as pd\n\n \nfig, ax = plt.subplots(1,1,figsize=(24,8))\n\nposi_only[['tot_incr\/dcr_m','tot_incr\/dcr_w']].plot(kind='bar', ax=ax, color=['purple','cyan'])#stacked=True,\n\n\nax.set_xticklabels(posi_only['Country'], rotation=90)\n\nax.legend(['Male increse', 'Female increase'])\nplt.title('Visualising how much of the Kagglers increase is female driven. \\n (Only countries with increased number of Kagglers).')\nplt.show()","15325cc1":"filt_ab = part_w['%Women_2021']>18.8\nabove_avg_fem = part_w[filt_ab].sort_values(by='%Women_2021', ascending=False)\nabove_avg_fem= above_avg_fem[['Country','%Women_2021']]\nprint('Above 18.8% female partecipation:\\n')\nabove_avg_fem","4838b713":"#get data 2018\nwork =['Q6']\nwork_2018=pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', usecols=work)\nemp_2018=work_2018.value_counts().rename_axis('Employment').reset_index(name='Totals').drop(21)#dropping question text\n","1b149d8b":"#get data 2021\nimport pandas as pd\nwork_cols = ['Q5']\nwork_2021 = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=work_cols)\nemp_2021 = work_2021.value_counts().rename_axis('Employment').reset_index(name='Totals').drop(15) #dropping question text\n","7f60bb9f":"print('The top answer to the \"current role\" question in 2018 was : ', '\"',emp_2018.iloc[0,0],'\"' ', with a total of ',emp_2018.iloc[0,1],'.' )\nprint('The top answer to the \"current role\" question in 2021 was : ', '\"',emp_2021.iloc[0,0],'\"' ', with a total of ',emp_2021.iloc[0,1],'.' )","f16f3099":"#prep data 2018\nemployed18= emp_2018.drop(6) # take out students\nemployed18sum = employed18.iloc[1:].sum().rename_axis('Emp18').reset_index(name='Tots').drop(0)# get employed\nunemployed18 = emp_2018.iloc[6].reset_index() #get not-emplyed","4cb0bdc2":"#prep data 2021 : \nemployed21= emp_2021.drop(5) # take out students\nemployed21sum = employed21.iloc[1:].sum().rename_axis('Emp21').reset_index(name='Tots').drop(0) # get employed\nunemployed21 = emp_2021.iloc[5].reset_index() #get not-emplyed","0a306e21":"l_2018=[emp_2018.iloc[0,1],employed18sum.iloc[0,1],unemployed18.iloc[1,1]]\nl_2021=[emp_2021.iloc[0,1],employed21sum.iloc[0,1],unemployed21.iloc[1,1]]\ncol_name=['F\/Teducation' , 'Empl', 'Not_emp']","77e850f7":"d = {'2018':(l_2018), '2021':(l_2021)}\nrole_tot =pd.DataFrame.from_dict(d, orient='index',  columns=col_name)#.reset_index()\n\n\nts = role_tot.T.reset_index()\nts","1db45164":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = ts['index']\nfig = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['2018', '2021'])\nfig.add_trace(go.Pie(labels=labels, values=ts['2018'], scalegroup='one',\n                     name=\"Roles in  2018\"), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=ts['2021'], scalegroup='one',\n                     name=\"Roles in 2021\"), 1, 2)\n\nfig.update_layout(title_text='Kagglers Roles')\nfig.show()\n\n","4a2e5547":"#get data 2018\nemp_gen18 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', usecols=['Q1','Q6'])\nemp_gen18.drop(index=0, inplace=True) \nemp_gen18.columns=['Gender', 'Role']\n\n#group data and get gender totals\nrole_gen_18 = emp_gen18.groupby(['Gender', 'Role'])['Role'].count().unstack('Gender').fillna(0).reset_index()\n\n#prep data for viz\nrole_gen_18_stu =role_gen_18.iloc[20]\nrole_gen_18_unemp = role_gen_18.iloc[11]\nrole_gen_18_emp =role_gen_18.drop(20).drop(11).sum()\n\n\nrole_gen_18_role = pd.concat([role_gen_18_stu, role_gen_18_unemp, role_gen_18_emp], axis=1).T\nrole_gen_18_role.replace(role_gen_18_role.iloc[2,0], 'Employed', inplace=True)\n\nrole_gen_18_role\n","02a89cbe":"employed_all_2018 = role_gen_18_role.iloc[2, 1:].sum()","6abac9c7":"#get data 2021\nemp_gen21 = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=['Q2','Q5'])\nemp_gen21.drop(index=0, inplace=True) \nemp_gen21.columns=['Gender', 'Role']\nrole_gen_21 = emp_gen21.groupby(['Gender', 'Role'])['Role'].count().unstack('Gender').fillna(0).reset_index()\n\nrole_gen_21 = emp_gen21.groupby(['Gender', 'Role'])['Role'].count().unstack('Gender').fillna(0).reset_index()\n\n\n\nemp_gen21_stu =role_gen_21.iloc[14]\nemp_gen21_unemp = role_gen_21.iloc[1]\nemp_gen21_emp =role_gen_21.drop(14).drop(1).sum()\n\nemp_gen21_roles = pd.concat([emp_gen21_stu, emp_gen21_unemp, emp_gen21_emp], axis=1).T\nemp_gen21_roles.replace(emp_gen21_roles.iloc[2,0], 'Employed', inplace=True)\n\n# The group 'Non Binary' was not present in the 2018 survey, in order to keep the comparison between the two surveys balance, I am grouping 'Non-Binary' with 'Prefer to Self Descibe'\nemp_gen21_roles['Bnry_PrSf']= emp_gen21_roles['Nonbinary']+ emp_gen21_roles['Prefer to self-describe']\nemp_gen21_roles = emp_gen21_roles.drop(['Nonbinary', 'Prefer to self-describe'], axis=1)\nemp_gen21_roles","506c115b":"employed_all_2021 = emp_gen21_roles.iloc[2, 1:].sum()","21a90654":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = role_gen_18_role['Role']\nfig = make_subplots(2, 4, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'}],\n                                 [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['Man 2018', 'Woman 2018', 'Not_say 2018','PrSf 2018','Man 2021', 'Woman 2021', 'Not_say 2021','NoNB+PrSf 2021'])\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Male'], name=\"Roles\"), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Female'], name=\"Roles\"), 1, 2)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Prefer not to say'],name=\"Roles\"), 1, 3)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Prefer to self-describe'],name=\"Roles\"), 1, 4)\n\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Man'],name=\"Roles\"), 2, 1)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Woman'],name=\"Roles\"), 2, 2)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Prefer not to say'], name=\"Roles\"), 2, 3)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Bnry_PrSf'],name=\"Roles\"), 2, 4)\n\nfig.update_layout(title_text='Kagglers Roles ')\nfig.show()\n","9b2c3fb7":"labels = role_gen_18_role['Role']\nfig = make_subplots(2, 4, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'}],\n                                 [{'type':'domain'}, {'type':'domain'},{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['Man 2018', 'Woman 2018', 'Not_say 2018','PrSf 2018','Man 2021', 'Woman 2021', 'Not_say 2021','NoNB+PrSf 2021'])\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Male'], scalegroup='one',\n                     name=\"Roles\"), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Female'], scalegroup='one',\n                     name=\"Roles\"), 1, 2)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Prefer not to say'], scalegroup='one',\n                     name=\"Roles\"), 1, 3)\nfig.add_trace(go.Pie(labels=labels, values=role_gen_18_role['Prefer to self-describe'], scalegroup='one',\n                     name=\"Roles\"), 1, 4)\n\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Man'], scalegroup='one',\n                     name=\"Roles\"), 2, 1)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Woman'], scalegroup='one',\n                     name=\"Roles\"), 2, 2)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Prefer not to say'], scalegroup='one',\n                     name=\"Roles\"), 2, 3)\nfig.add_trace(go.Pie(labels=labels, values=emp_gen21_roles['Bnry_PrSf'], scalegroup='one',\n                     name=\"Roles\"), 2, 4)\n\nfig.update_layout(title_text='Kagglers Roles ')\nfig.show()","9c3eccba":"# getting the data 2018\nage18 = ['Q1','Q2', 'Q3']\nage_18 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', usecols=age18)\nage_18 = age_18[['Q2','Q1', 'Q3']] # reordering for ease of use\nage_18['Q1'] =age_18['Q1'].str.replace('Male','Man') #rename: to make it the same naming as in 2021\nage_18['Q1'] = age_18['Q1'].str.replace('Female','Woman')#rename: to make it the same naming as in 2021\nage_18.drop(index=0, inplace=True) # drop questions row\nage_18.columns=['Age', 'Gender', 'Country']","84410f5a":"# getting the data 2021\nage21 =['Q1','Q2', 'Q3']\nage_21 = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=age21)\nage_21.drop(index=0, inplace=True) \nage_21.columns=['Age', 'Gender', 'Country']","0ccb89be":"age21_tot = age_21['Age'].value_counts().rename_axis('Age').reset_index(name = 'Totals21')\nage18_tot = age_18['Age'].value_counts().rename_axis('Age').reset_index(name = 'Totals18')\n\n# For more accurate visuals when comparing the 2 sureveys,  I am turning the totals in percentages\ntemp18 = age18_tot['Totals18'].sum()\ntemp21 =age21_tot['Totals21'].sum()\nage21_tot['%age_2021'] = (age21_tot['Totals21']\/temp21)*100\nage18_tot['%age_2018'] = (age18_tot['Totals18']\/temp18)*100\n\n# merge 2018 and 2021\nage_total_per= age18_tot.merge(age21_tot, how='outer', left_on=['Age'], right_on=['Age'],).fillna(0).sort_values(by='Age')\nage_total_per","ebb10cee":"age_g21 = age_21.groupby(['Age', 'Gender'])['Age'].count().unstack('Gender').fillna(0).reset_index()\nage_g18 = age_18.groupby(['Age', 'Gender'])['Age'].count().unstack('Gender').fillna(0).reset_index()\n\n# for ease of viz, I am clubbing together ['Prefer not to say','Prefer to self-describe','Nonbinary']\nage_g21['PnS_Ps_s_Nb'] =age_g21[['Nonbinary','Prefer not to say','Prefer to self-describe',]].sum(axis=1)\nage_g18['PnS_Ps_s_Nb'] =age_g18[['Prefer not to say','Prefer to self-describe',]].sum(axis=1)\n\nage_g21.drop(['Nonbinary','Prefer not to say','Prefer to self-describe'], axis=1, inplace=True)\nage_g18.drop(['Prefer not to say','Prefer to self-describe'], axis=1, inplace=True)\n\nage_gender = age_g18.merge(age_g21, how='outer', left_on=['Age'], right_on=['Age'],suffixes=('_2018', '_2021')).fillna(0)\nage_gender","c726f828":"import matplotlib.pyplot as plt\n\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3,figsize=(16,6))\nfig.suptitle('Age distribututions percentages', fontsize=16)\n\nage_gender[['Man_2018','Man_2021']].plot.bar(width=.8, ax = ax1,color=['mediumseagreen','cyan'])\nax1.set_xticklabels(age_gender['Age'])\nax1.set_title('Men')\n\nage_gender[['Woman_2018','Woman_2021']].plot.bar(width=.8, ax = ax2,color=['mediumseagreen','cyan'])\nax2.set_xticklabels(age_gender['Age'])\nax2.set_title('Women')\n\nage_gender[['PnS_Ps_s_Nb_2018','PnS_Ps_s_Nb_2021']].plot.bar(width=.8, ax = ax3,color=['mediumseagreen','cyan'])\nax3.set_xticklabels(age_gender['Age'])\n\n\nplt.title('Prefer not to say, Prefer to self-describe, Nonbinary', loc='left')\n\n","7af74f90":"test1= age_gender.sum().reset_index(name= 'abs_tot')\ntest1.drop(0, inplace=True)\n\ntest2 = age_gender.head(3).sum().reset_index(name= 'sub_tot')\ntest2.drop(0, inplace=True)\n","f77d047b":"merged = test2.merge(test1, how='left', left_on=['Gender'], right_on=['Gender']).fillna(0)\nmerged['per_cent']= (merged['sub_tot']\/merged['abs_tot'])*100","0a0c0349":"print(' % of the total male Kagglers up to 29 years old in 2018:',round((merged.iloc[0, 3]),2),'%', '\\n',\n'% of the total male Kagglers up to 29 years old in 2021:',round((merged.iloc[3, 3]),2),'%', '\\n',\n'\\n % of the total female Kagglers up to 29 years old in 2018:',round((merged.iloc[1, 3]),2),'%', '\\n',\n'% of the total female Kagglers up to 29 years old in 2021:',round((merged.iloc[4, 3]),2),'%', '\\n',\n'\\n % of the total Kagglers that Prefer not to say, selfdescribe, non_binary, up to 29 years old in 2018:',round((merged.iloc[2, 3]),2),'%', '\\n',\n'% of the total Kagglers that Prefer not to say, selfdescribe, non_binary, up to 29 years old in 2021:',round((merged.iloc[5, 3]),2),'%', '\\n',)","591581f2":"import pandas as pd\n\n# dgetting data df for Kagglers Roles 2018\nwork_all18 = ['Q1','Q2','Q3','Q6']\nwork_2018_all = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', usecols=work_all18)\nwork_2018_all.drop(0, inplace=True) #dropping question text\nwork_2018_all.columns=['Gender', 'Age', 'Countries', 'Role']\nwork_2018_all['Role'] = work_2018_all['Role'].replace('Not employed', 'Currently not employed')\nwork_2018_all_role =work_2018_all.groupby(['Role', 'Gender'])['Gender'].count().unstack('Gender').reset_index().fillna(0)\nwork_2018_all_role=work_2018_all_role[['Role','Male', 'Female','Prefer not to say','Prefer to self-describe']]\n#work_2018_all_role.head()\n\n# getting data df for Kagglers Roles 2021\nwork_all = ['Q1','Q2','Q3','Q5']\nwork_2021_all = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', usecols=work_all)\nwork_2021_all.drop(0, inplace=True) #dropping question text\nwork_2021_all.columns=['Age','Gender', 'Countries', 'Role']\nwork_2021_all_role =work_2021_all.groupby(['Role', 'Gender'])['Gender'].count().unstack('Gender').reset_index().fillna(0)\nwork_2021_all_role=work_2021_all_role[['Role','Man', 'Woman','Nonbinary','Prefer not to say','Prefer to self-describe']]\n#work_2021_all_role.head()","338faa2c":"# df zooming in on unemployment by Age 2018\nunemp_18 = work_2018_all['Role']=='Currently not employed'\nunemp_18_age= work_2018_all[unemp_18]\nunemp_18_age= unemp_18_age.groupby(['Age', 'Gender'])['Role'].count().unstack('Gender').reset_index().fillna(0)\nunemp_18_age['Nbi_Pnt_Psd_2018'] = unemp_18_age['Prefer not to say']+unemp_18_age['Prefer to self-describe']\nunemp_18_age.drop(['Prefer not to say','Prefer to self-describe'], axis=1, inplace=True)\nunemp_18_age.head()","4e53349b":"# df zooming in on unemployment by Age 2021\nunemp_21 =work_2021_all['Role']=='Currently not employed'\nunemp_21_age = work_2021_all[unemp_21]\nunemp_21_age= unemp_21_age.groupby(['Age', 'Gender'])['Role'].count().unstack('Gender').reset_index().fillna(0)\n\nunemp_21_age['Nbi_Pnt_Psd_2018'] = unemp_21_age['Nonbinary']+unemp_21_age['Prefer not to say']+unemp_21_age['Prefer to self-describe']\nunemp_21_age.drop(['Nonbinary','Prefer not to say','Prefer to self-describe'], axis=1, inplace=True)\nunemp_21_age.head()","7b56e2a0":"combo_unemp_age = unemp_21_age.merge(unemp_18_age, how='outer', left_on=['Age'], right_on=['Age']).fillna(0)\ncombo_unemp_age.columns= ['Age', 'Man_2021', 'Woman_2021', 'Nbi_Pnt_Psd_2021', 'Woman_2018', 'Man_2018', 'Nbi_Pnt_Psd_2018']","052c96cf":"import matplotlib.pyplot as plt\nimport numpy as np\n\n\nfig, (ax1, ax2, ax3) = plt.subplots(1,3,figsize=(16,6)) #,sharey=True\n\n\nfig.suptitle('Unemployment by Age group and Gender.', fontsize=14)\n\ncombo_unemp_age[['Woman_2018','Woman_2021']].plot.bar(width=.8, ax = ax1,color=['mediumseagreen','cyan'])\nax1.set_xticklabels(combo_unemp_age['Age'])\nax1.set_title('Woman 2018 and 2021')\n\ncombo_unemp_age[['Man_2018','Man_2021']].plot.bar(width=.8, ax = ax2,color=['mediumseagreen','cyan'])\nax2.set_xticklabels(combo_unemp_age['Age'])\nax2.set_title('Man 2018 and 2021')\n\ncombo_unemp_age[['Nbi_Pnt_Psd_2018','Nbi_Pnt_Psd_2021']].plot.bar(width=.8, ax = ax3,color=['mediumseagreen','cyan','cyan','cyan'])\nax3.set_xticklabels(combo_unemp_age['Age'])\nax3.set_title('Woman 2018 and 2021')\n","0b3853ff":"#Checking the roles 2018\nwork_2018_all_role['nbi_pnt_psd']=work_2018_all_role['Prefer not to say']+work_2018_all_role['Prefer to self-describe']\nwork_2018_all_role.drop(['Prefer not to say', 'Prefer to self-describe'], axis=1, inplace=True)\n\nprint('Employment options in 2018:\\n')\nwork_2018_all_role","184232c0":"#Checking the roles\nwork_2021_all_role['nbi_pnt_psd']=work_2021_all_role['Prefer not to say']+work_2021_all_role['Prefer to self-describe']+work_2021_all_role['Nonbinary']\nwork_2021_all_role.drop(['Prefer not to say', 'Prefer to self-describe', 'Nonbinary'], axis=1, inplace=True)\n\nprint('Employment options in 2021:\\n')\nwork_2021_all_role","a70024c5":"selected_roles = work_2021_all_role.merge(work_2018_all_role, how='inner',left_on=['Role'],right_on=['Role'], suffixes=('_2021','_2018') )\nselected_roles.columns=['Role', 'Man_2021', 'Woman_2021', 'nbi_pnt_psd_2021', 'Man_2018', 'Woman_2018','nbi_pnt_psd_2018']\nprint(' Roles present in both 2018 and 2021 surveys:')\nselected_roles","841b9e65":"import matplotlib.pyplot as plt\n\nfig, (ax1, ax2, ax3) = plt.subplots(1,3,figsize=(16,6))\nfig.suptitle('Employmnet by roles', fontsize=14)\n#plt.ylim([0, 5400])\n\nselected_roles[[ 'Man_2018', 'Man_2021']].plot.bar(width=.8, ax = ax1,color=['mediumseagreen','cyan'] )\nax1.set_xticklabels(selected_roles['Role'])\nax1.set_title('Roles Man')\n#plt.legend(loc='bottom right')\n\nselected_roles[['Woman_2018','Woman_2021']].plot.bar(width=.8, ax = ax2,color=['mediumseagreen','cyan'])\nax2.set_xticklabels(selected_roles['Role'])\nax2.set_title('Roles Woman')\n\nselected_roles[['nbi_pnt_psd_2021','nbi_pnt_psd_2018']].plot.bar(width=.8, ax = ax3,color=['mediumseagreen','cyan'])\nax3.set_xticklabels(selected_roles['Role'])\nax3.set_title('Roles N_binary, Prefer_self, Pre_not')\n","fce86d9c":"tot_by_pop_c = tot[['Totals_2018','Countries','diff_18_21']]\nfilt_no18  =tot_by_pop_c['Totals_2018']>0\ndiff_18_21= tot_by_pop_c[filt_no18]\ndiff_18_21.head()","e6649dc4":"removed = tot_by_pop_c[~filt_no18]\nprint('For balance comparison, the coountires with no entries in the 2018 have been removed:\\n', removed)","c29bec1a":"#Adding in covid number\ncov_cols = ['Countries', 'Population_2021', 'Cases']\ncov_num = pd.read_csv('..\/input\/additional-data-wiki-22nov\/additional_data22Nov_wiki.csv', usecols=cov_cols)\ncov_num_tots=diff_18_21.merge(cov_num, how='left', left_on=['Countries'], right_on=['Countries'])","f0a3661d":"#I am using recorded cases as a loose indicator of the impact of the pandemic in a country\ncov_num_tots['cov%pop'] = cov_num_tots['Cases']\/cov_num_tots['Population_2021']\n\n# Dropping the Republic of Korea \/ North Korea because is not reporting  \ncov_num_tots.dropna(inplace=True)\n\ncov_num_tots =cov_num_tots.sort_values(by='cov%pop', ascending=False)\ncov_num_tots.head()","c29daabb":"woman_inc = viz_merge[['Country','tot_incr\/dcr_w']]\nwoman_inc.columns = ['Countries','diff_18_21_W']\ncov_num_tots_m_w=( cov_num_tots. merge(woman_inc, how='left', left_on=['Countries'], right_on=['Countries'])).fillna(-1)","0baf5727":"import matplotlib.pyplot as plt\n\nfig, (ax1, ax2) = plt.subplots(2, 1,figsize=(19,8))\n\nfig.suptitle('Difference between Kaggle numbers 2018\/2021  plotted against Covid19 cases: Overall', fontsize=14)\nfig.tight_layout()\n\ncov_num_tots_m_w[['cov%pop','diff_18_21']].plot.bar( width=.6, ax = ax1, color=['pink','green'])\nax1.set_xticklabels([])\n\n\ncov_num_tots_m_w[['cov%pop','diff_18_21_W']].plot.bar( width=.6, ax = ax2, color=['pink','blue'])\nax2.set_xticklabels(cov_num_tots_m_w['Countries'])\nplt.title('Difference between Kaggle numbers 2018\/2021 plotted against Covid19 cases: Women', fontsize=14)\n\n","59975d12":"print(cov_num_tots_m_w[['cov%pop','diff_18_21']].corr(), '\\n\\n')\nprint(cov_num_tots_m_w[['cov%pop','diff_18_21_W']].corr())","6e856552":"#taking out some outliers \n\nhigh =  cov_num_tots_m_w['cov%pop'].quantile(.90)\nhigh_k = cov_num_tots_m_w['diff_18_21'].quantile(.90)\nhigh_cov_low_drop = cov_num_tots_m_w.loc[(cov_num_tots_m_w['cov%pop']>=high )& (cov_num_tots_m_w['diff_18_21']>=high_k)]\nh_l =high_cov_low_drop['Countries'].to_list()\nprint('Outliers(upper 10%):\\nCountries with high covid19 cases and large increase in overall Kagglers:\\n',len(h_l))\nlow =  cov_num_tots_m_w['cov%pop'].quantile(.10)\nlow_k = cov_num_tots_m_w['diff_18_21'].quantile(.10)\nlow_cov_high_drop = cov_num_tots_m_w.loc[(cov_num_tots_m_w['cov%pop']<=low )& (cov_num_tots_m_w['diff_18_21']<=low_k)]\nl_h=low_cov_high_drop['Countries'].to_list()\nprint('Outliers(bottom 10%):\\nCountries with low covid19 cases and large drop in overall Kagglers:\\n', l_h)","03d6d247":"w_high =  cov_num_tots_m_w['cov%pop'].quantile(.90)\nw_high_k = cov_num_tots_m_w['diff_18_21_W'].quantile(.90)\nw_high_cov_low_drop=cov_num_tots_m_w.loc[(cov_num_tots_m_w['cov%pop']>=w_high )& (cov_num_tots_m_w['diff_18_21_W']>=w_high_k)]\nw_h_l =w_high_cov_low_drop['Countries'].to_list()\nprint('Outliers(upper 10%):\\nCountries with high covid19 cases and large increase in female Kagglers:\\n',len(w_h_l))\nw_low =  cov_num_tots_m_w['cov%pop'].quantile(.10)\nw_low_k = cov_num_tots_m_w['diff_18_21_W'].quantile(.10)\nw_low_cov_high_drop = cov_num_tots_m_w.loc[(cov_num_tots_m_w['cov%pop']<=w_low)& (cov_num_tots_m_w['diff_18_21_W']<=w_low_k)]\nw_l_h=w_low_cov_high_drop['Countries'].to_list()\nprint('Outliers(bottom 10%):\\nCountries with low covid19 cases and large drop in overall Kagglers:\\n', w_l_h)\n","f0775976":"cov_no_outl=  cov_num_tots_m_w[~cov_num_tots_m_w.isin(l_h)].dropna()\ncorr_all = cov_no_outl[['cov%pop','diff_18_21']].corr()\n\nw_cov_no_outl=  cov_num_tots_m_w[~cov_num_tots_m_w.isin(w_l_h)].dropna()\n\nw_corr = w_cov_no_outl[['cov%pop','diff_18_21_W']].corr()\n\nprint('Correlation matrix, Kagglers partecipation change and Covid10 reported cases for all Kgglers:\\n\\n', corr_all)\nprint('\\nCorrelation matrix, Kagglers partecipation change and Covid10 reported cases for female Kgglers:\\n\\n', w_corr)","0a8b2bb8":"# #Getting the data\n# import pandas as pd\n\n# # def to read the total respondents for years 2018, 2019, 2020,2021 surveys\n# def make_df(urly):\n#   usecols = ['Q3']\n#   data = pd.read_csv(urly, usecols=usecols)\n#   data.drop(0,inplace=True)\n#   data =data['Q3'].value_counts().reset_index()\n#   data.columns=['Countries', 'Totals']\n#   return data","6997ac1e":"# # Make df\n# d_2018 = make_df('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\n# d_2019 = make_df('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\n# d_2020 = make_df('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n# d_2021 = make_df('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\n","fbd2e4d7":"# tot_18_to_21 = d_2018.merge(d_2019,  how=\"outer\", left_on=['Countries'], right_on=['Countries'],suffixes=('_2018', '_2019')).fillna(0)\n# tot_18_to_21 = tot_18_to_21.merge(d_2020,  how=\"outer\", left_on=['Countries'], right_on=['Countries']).fillna(0)\n# tot_18_to_21 = tot_18_to_21.rename(columns={'Totals':'Totals_2020'})\n# tot_18_to_21 =tot_18_to_21.merge(d_2021,  how=\"outer\", left_on=['Countries'], right_on=['Countries']).fillna(0)\n# tot_18_to_21 = tot_18_to_21.rename(columns={'Totals':'Totals_2021'})\n# tot_18_to_21.head()","ed0bd2cc":"# tot_18_to_21.to_csv('totals_by_country_18_20.csv', index=False) \n\n# # loaded to datasets as 'survey_totals_merged_data'","5e1bd679":"# # merge df totals by country for years 2018 and 2021 surveys\n# tot_18_21 = d_2018.merge(d_2021,  how=\"outer\", left_on=['Countries'], right_on=['Countries'],suffixes=('_2018', '_2021')).fillna(0)","3a20316f":"# #Retrieve population data for 2018 2019\n# import pandas as pd\n\n# link = \"https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_population_(United_Nations)\"\n# tables = pd.read_html(link)\n# data = tables[0]\n\n# data= data[['Country\/Area', 'UN statisticalsubregion[4]', 'Population(1 July 2018)']]\n# data.columns=['Countries','UN statisticalsubregion','Population_2018']\n# data['Countries'] = data['Countries'].str.replace(r'\\[.*?\\]','')\n# data['Countries'] = data['Countries'].str.strip()\n\n# #Adjust country names to match Kaggle\n# data['Countries'] = data['Countries'].replace('United States', 'United States of America')\n# data['Countries'] = data['Countries'].replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland')\n# data['Countries'] = data['Countries'].replace('Iran', 'Iran, Islamic Republic of...')\n# data['Countries'] = data['Countries'].replace('Vietnam', 'Viet Nam')\n# data['Countries'] = data['Countries'].replace('Hong Kong (China)','Hong Kong (S.A.R.)')\n# data['Countries'] = data['Countries'].replace('North Korea','Republic of Korea')\n\n\n# link2021 = \"https:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_dependencies_by_population\"\n\n# tables21 = pd.read_html(link2021)\n\n# data21 = tables21[0].iloc[1:]\n\n# #Clean up columns\n# data21 = data21[['Country or dependent territory', 'Population', ]]\n# data21.columns=['Countries','Population_2021']\n# data21['Countries'] = data21['Countries'].str.replace(r'\\[.*?\\]','')\n# data21['Countries'] = data21['Countries'].str.strip()\n\n# #Adjust country names to match Kaggle\n# data21['Countries'] = data21['Countries'].replace('United States', 'United States of America')\n# data21['Countries'] = data21['Countries'].replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland')\n# data21['Countries'] = data21['Countries'].replace('Iran', 'Iran, Islamic Republic of...')\n# data21['Countries'] = data21['Countries'].replace('Vietnam', 'Viet Nam')\n# data21['Countries'] = data21['Countries'].replace('Hong Kong (China)','Hong Kong (S.A.R.)')\n# data21['Countries'] = data21['Countries'].replace('North Korea','Republic of Korea')\n\n# #Add data to Kaggle survey totals for 2018 and 2021\n# pop_data_2018 = tot_18_21.merge(data, how='left', left_on=['Countries'], right_on=['Countries'])\n# pop_data_21_18 = pop_data_2018.merge(data21, how='left', left_on=['Countries'], right_on=['Countries'])","e04dd185":"# #Covid cases totals \n\n# import pandas as pd\n\n# urli = 'https:\/\/en.wikipedia.org\/wiki\/COVID-19_pandemic_by_country_and_territory#wrapper65150380'\n\n# covid = pd.read_html(urli)\n# covid21 = covid[9].iloc[1:-1]\n# covid_cases= covid21[['Country.1','Cases']]\n# covid_cases['Country.1']= covid_cases['Country.1'].str.replace(r'\\[.*?\\]','')\n# covid_cases['Country.1'] = covid_cases['Country.1'].str.strip()\n\n# covid_cases = covid_cases.rename(columns={'Country.1':'Countries'})\n\n# covid_cases['Countries'] = covid_cases['Countries'].replace('United States', 'United States of America')\n# covid_cases['Countries'] = covid_cases['Countries'].replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland')\n# covid_cases['Countries'] = covid_cases['Countries'].replace('Iran', 'Iran, Islamic Republic of...')\n# covid_cases['Countries'] = covid_cases['Countries'].replace('Vietnam', 'Viet Nam')\n# covid_cases['Countries'] = covid_cases['Countries'].replace('Hong Kong', 'Hong Kong (S.A.R.)')\n# covid_cases['Countries'] = covid_cases['Countries'].replace('Republic of Ireland', 'Ireland')\n\n\n# pop_data_21_18 = pop_data_21_18.merge( covid_cases, how='left', left_on=['Countries'], right_on=['Countries'])","e82d3f81":"# # Population fertility\n\n# fertility_rate = 'https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_past_fertility_rate'\n\n# tables_fertility = pd.read_html(fertility_rate )\n\n# fertility = tables_fertility[1].iloc[:]\n# fertility.drop(columns=['1950\u20131955', '1955\u20131960', '1960\u20131965',\n#        '1965\u20131970', '1970\u20131975', '1975\u20131980', '1980\u20131985', '1985\u20131990',\n#        '1990\u20131995', '1995\u20132000'], inplace=True)\n\n# fertility['Country\/dependent territory']= fertility['Country\/dependent territory'].str.replace(r'\\[.*?\\]','')\n# fertility['Country\/dependent territory'] = fertility['Country\/dependent territory'].str.strip()\n\n# fertility = fertility.rename(columns={'Country\/dependent territory':'Countries'})\n\n# #adjust countries names to match Kaggle survey\n# fertility['Countries'] = fertility['Countries'].replace('United States', 'United States of America')\n# fertility['Countries'] = fertility['Countries'].replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland')\n# fertility['Countries'] = fertility['Countries'].replace('Iran', 'Iran, Islamic Republic of...')\n# fertility['Countries'] = fertility['Countries'].replace('Vietnam', 'Viet Nam')\n# fertility['Countries'] = fertility['Countries'].replace('Hong Kong (China)', 'Hong Kong (S.A.R.)')\n# fertility['Countries'] = fertility['Countries'].replace('Republic of Ireland', 'Ireland')\n# fertility['Countries'] = fertility['Countries'].replace('North Korea','Republic of Korea')\n\n# pop_data_21_18 = pop_data_21_18.merge(fertility, how='left', left_on=['Countries'], right_on=['Countries'])","2bc61eba":"# # Urbanization data\n# import pandas as pd\n\n# urb = 'https:\/\/en.wikipedia.org\/wiki\/Urbanization_by_country'\n\n# urban_table = pd.read_html(urb)\n# urban = urban_table[0].iloc[:]\n\n# urban['Nation']= urban['Nation'].str.replace(r'\\[.*?\\]','')\n# urban['Nation']= urban['Nation'].str.strip()\n# urban['Urbanization Rate (%)']=urban['Urbanization Rate (%)'].str.replace(r'\\[.*?\\]','')\n# urban['Urbanization Rate (%)']=urban['Urbanization Rate (%)'].str.strip()\n# urban= urban.rename(columns={'Urbanization Rate (%)':'Urbanization Rate_(%)_2015\u201320_est.','Nation':'Countries' })\n# urban.drop(columns=['Rank', 'Period'], inplace=True)\n\n# #adjust countries names to match Kaggle survey\n# urban['Countries'] = urban['Countries'].replace('United States', 'United States of America')\n# urban['Countries'] = urban['Countries'].replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland')\n# urban['Countries'] = urban['Countries'].replace('Iran', 'Iran, Islamic Republic of...')\n# urban['Countries'] = urban['Countries'].replace('Vietnam', 'Viet Nam')\n# urban['Countries'] = urban['Countries'].replace('Hong Kong (China)', 'Hong Kong (S.A.R.)')\n# urban['Countries'] = urban['Countries'].replace('Republic of Ireland', 'Ireland')\n# urban['Countries'] = urban['Countries'].replace('North Korea','Republic of Korea')\n\n# pop_data_21_18 = pop_data_21_18.merge(urban, how='left', left_on=['Countries'], right_on=['Countries'])","41199425":"#pop_data_21_18.to_csv('additional_data22Nov_wiki.csv', index=False)\n\n# # loaded to datasets as 'additional_data_wiki_22Nov'","a37b8966":"# Where were and where are the Kagglers\n\nA birds eye view of the geographical location of the Kagglers: \n\nChanges in the geographical distribution of Kagglers(absolute numbers)  between the 2018 and the 2021 surveys","e7f6fb65":"Overall changes in gender distribution <a id='18.8%'><\/a>","e510feef":"In line with overall numbers, the data shows that female only participation has nearly halved in the US, while it has increased in India in line with the increase of Kagglers in the country. \n\nHowever, to better understand female participation,  I will look at the number of women as a percentage of the total number of Kagglers in each country. Although this strategy is more vulnerable to distortion especially in countries with very few Kagglers,  it offers a more informative view of gender distributions.\n","7681ba04":"**Focus**: Unemployment by Age\n\n","41b89ab8":"As changes have occured in the unemployment landscape,  changes might have occurred in the 'employment' numbers also. \n\nThe roles available for selection have changed between the 2018 and 2021 survey, therefore I will select only roles that appear in both surveys;  this is should be sufficient to give an intuition of possible changes in the employment landscape.","70c34342":"Visualize which countries lost or gained Kagglers","aae5f948":"Although the top answer to the 'Role' question is student, it does not follow that the majority of Kagglers are students. In order to address this, I will re-group the answers to the 'Role' questions in: 'Full Time Education', 'Employed' and 'Un-employed'\n","5945442a":"The above seems to suggest that the pandemic has had a 'low to moderate' negative effect on Kaggle participation, the impact overall seems to be more or less equal among all the genders.\n\nIt must be noted that the recording of covid19 cases is not uniform across countries and measures taken to limit the spread of the virus, including limiting movement and access (work\/academia), and their implementation vary from country to country also. Here, I used the covid19 recorded cases numbers, in order to gain an intuition of how the Pandemic might have affected Kaggle participation in different countries.","ad7ff069":"Before moving on: \n\n**Reality-Check** : re-introducing how the defferent group sizes relate to each other.\n","8ff77127":"# Gender\n\nSo far we have see that there has been a degree of change in the number of Kagglers and their location. Relating the numbers and locations changes to gender will provide the next insight in how the community might be changing.","ade8e4d3":"**Focus** on : how much of the increase in Kagglers in each country is female driven","d706263a":"# Current Roles\n\nThis section dives into Kagglers' roles, it aims to highlight increase\/decrease diversity in the work\/study place.","265127a4":"We can see that there has been a drop in respondents in the years since the 2018 survey followed by a marked increase in 2021; this suggests that the community changes over time .","46830b3f":"Visualize the data","2badc3cc":"**Cvid19 possible impact on Kaggle numbers?**","3eb6b5a3":"Across the surveys, unemployment is higher for women. Unemployment is high among 'Prefer not to say', 'Self Describe' and 'Non Binary' genders, but the small number of respondents in these groups may adversely affect the quality of the insights that might be gained.\n\n**Age and Unemployment:**\nLooking at age distributions among the genders may offer an insight into why certain groups may be more at risk of unemployment.","8cd41f61":"The charts seem to confirm the hypothesis that unemployment numbers are concentrated in the  younger cohorts.\nHowever in the 2021 survey, although the unemployment numbers have risen across age and gender, women aged  35+ appear to have been more impacted.","9f3e0c88":"The number of women in the age-group up to 29 is proportionally higher than men. This might partially explain the unemployment rate, perhaps the female Kagglers in this group have recently entered the labour market and are looking for work or, as more junior members of the team, they might find themselves more at risk during redundancy rounds. ","e9a07e08":"\n# Appendix\n<a id='Appendix'><\/a>\n\nCode used to gather the additional data below (commented out). The resulting dataframes have been saved as Kaggle datasets (public):\n \n https:\/\/www.kaggle.com\/danielanewton\/additional-data-wiki-22nov \n \n https:\/\/www.kaggle.com\/danielanewton\/survey-totals-merged-data\n\nKaggles Survey Sources:\n\n..\/input\/kaggle-survey-2018\n\n..\/input\/kaggle-survey-2019\n\n..\/input\/kaggle-survey-2020\n\n..\/input\/kaggle-survey-2021\n\nAdditional data source:\n\nhttps:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_population_(United_Nations)\n\nhttps:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_dependencies_by_population\n\nhttps:\/\/en.wikipedia.org\/wiki\/COVID-19_pandemic_by_country_and_territory#wrapper65150380\n\nhttps:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_past_fertility_rate\n\nhttps:\/\/en.wikipedia.org\/wiki\/Urbanization_by_country\n\n\n","048e59bc":"The above graphs suggest that consistently across the 2 surveys, the majority of Kagglers are in Employment rather than full time education. \nLets' look a little deeper at the role distribution among different genders","40df595e":"We have seen that overall female participation is around [18.8%](#18.8%)in 2021.\n\n**Focus** on : which countries have higher than 18.8% female participation","02f77b9f":"Stellar female participation in Tunisia. \ud83d\ude00\n\nInterestingly, some of the countries that rank quite low in the Gender Equality Index (see: https:\/\/en.wikipedia.org\/wiki\/Global_Gender_Gap_Report) have higher proportion of female participation than 18.8% (overall survey total % 2021). \n\nA number of factors may be at play here, such as improved prospects for women in these countries,  AI\/ML being perceived as a socially acceptable work\/study-subject for women, the 'need' for the skill-set taking priority over custom and tradition. Or simply, the Equality Index does not work well for all countries and all cultures.\n","4f9de319":"# A story of change:\n\nThis notebook investigates how and if Kagglers have changed with regards to: geographical location, gender diversity, and type of \u2018employment\u2019. \n\nI compared the results for the 2018 survey to the 2021 survey.\n\n[Appendix](#Appendix)\n: please see the [Appendix](#Appendix) for the code used to create the additional dataset and the list of data sources\n","4e01b0ef":"From the above it appears that the more significant changes occurred in the Student and Not_Employed numbers, with a slight dip in 'Data Scientist' numbers.","fa83fa97":"In absolute numbers we have seen which countries have the highest number of Kagglers and how these numbers have changed. However, a number of Kagglers are in countries with populations that are a fraction of nations like India or the US, and in order to better appreciate where Kaggling is getting more or less popular, I will relate number of Kagglers to their country population. ","288900a3":"**Conclusions:**\n\nI chose to focus on 'change' as a way to explore if diversity is increasing in the field, a discipline needs diversity across age, gender,  and cultural background to prevent 'tunnel vision' and continue thriving.\nIn order to uncover diversity in the community, I looked for changes in who, where, and what the Kagglers do. The data has confirmed that the Kaggle community has changed: new countries have appeared, female participation has increased overall, students numbers have increased, Kagglers\u2019 employment range is reasonably varied, and although, the unemployment numbers hint at a difficult past two years they also imply that more people are choosing to use Kaggle to retrain or update\/upgrade their skill-set during the downtime. Encouragingly Kaggle is attracting people from a wide range of age groups.\n\n","1082e222":"Choosing among the past surveys for a suitable candidate."}}