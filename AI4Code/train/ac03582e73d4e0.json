{"cell_type":{"cd07102f":"code","f9aca632":"code","74587003":"code","c5cf37be":"code","6d900b4c":"code","0fad6e51":"code","c19a4dcd":"code","9c0829d9":"code","b968faa0":"code","a66bb8b5":"code","d03081c9":"code","58921203":"code","856c98e7":"code","0174270f":"code","44966423":"code","040bdf2e":"code","3a28b157":"code","9e884ef5":"code","2b15730f":"code","c45971b4":"code","69b15850":"code","3dab98a5":"code","374af8bc":"code","66fe08b0":"code","1b6b3ba8":"code","8ed70372":"code","23be7665":"code","656dae96":"code","b7d0c7b7":"code","d59477d7":"code","510786e3":"code","f27ad18c":"code","1adc3f9d":"code","eb1137e0":"code","8840e33f":"code","ee338daf":"markdown","e6c5954c":"markdown","67fd503b":"markdown","b3f55032":"markdown","3123c89b":"markdown","8d8c9b8c":"markdown"},"source":{"cd07102f":"!pip install feature_engine imbalanced_learn","f9aca632":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom feature_engine.encoding import WoEEncoder, RareLabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","74587003":"column_dtypes = {\n    'cc_num':'object',\n    'zip': 'object'\n}","c5cf37be":"pd.set_option('display.max_columns', None)","6d900b4c":"path = '\/kaggle\/input\/fraud-detection\/fraudTrain.csv'\ndf = pd.read_csv(path, index_col=0, dtype=column_dtypes, parse_dates=['trans_date_trans_time', 'dob'])","0fad6e51":"df.head()","c19a4dcd":"df.info()","9c0829d9":"columns = ['trans_date_trans_time', 'cc_num', 'merchant', 'category', 'amt', 'gender', 'lat', 'long', 'job', 'dob','merch_lat', 'merch_long', 'is_fraud']\n","b968faa0":"df['age'] = np.rint((pd.to_datetime('now') - df['dob']) \/ np.timedelta64(1, 'Y'))","a66bb8b5":"df.head()","d03081c9":"plt.figure(figsize=(20,8))\nplt.title('Number of frauds by categories')\nsns.barplot(x=\"category\", y='cc_num' ,hue=\"is_fraud\", data=df.groupby(['category','is_fraud']).agg({'cc_num':'count'}).reset_index())","58921203":"plt.figure(figsize=(20,8))\nplt.title('Number of frauds by the average amount of money spent')\nsns.barplot(x=\"is_fraud\", y='amt', data=df)","856c98e7":"fig, ax = plt.subplots()\nsns.distplot(df.loc[df.gender=='M', 'age'].dropna(),hist=False, color='green', kde_kws={\"shade\": True},ax=ax, label='Male')\nsns.distplot(df.loc[df.gender=='F', 'age'].dropna(),hist=False, color='blue',kde_kws={\"shade\": True},ax=ax, label='Female')\nax.set_title('Distribution of age')\nax.legend(title='Gender:')","0174270f":"sns.pairplot(df[['age', 'amt']])","44966423":"df.head()","040bdf2e":"df['is_fraud']","3a28b157":"features_cols = ['category', 'amt', 'gender', 'lat', 'long', 'job', 'age','merch_lat', 'merch_long', 'is_fraud']\n","9e884ef5":"X = df.copy()[features_cols]\ny = X.pop('is_fraud')","2b15730f":"y.value_counts()","c45971b4":"X.head()","69b15850":"rare_encoder = RareLabelEncoder(tol=0.005, n_categories=2, variables=['category', 'gender','job'])\nX_encoded = rare_encoder.fit_transform(X)\nwoe_encoder = WoEEncoder(variables=['category', 'gender','job'])\nwoe_encoder.fit(X_encoded , y)","3dab98a5":"def transform_X(X):\n    X_encoded = rare_encoder.transform(X)\n    return woe_encoder.transform(X_encoded)","374af8bc":"woe_encoder.encoder_dict_","66fe08b0":"transform_X(X)","1b6b3ba8":"# Because there are not many records labeled 1, I will undersample to balance the data and reduce training time\nrus = RandomUnderSampler(random_state=42)\nX_resample, y_resample = rus.fit_resample(transform_X(X), y)","8ed70372":"parameters = {'max_depth': [3, 5, 10],\n              'min_samples_split': [2, 5, 10]}\nrf = RandomForestClassifier()\nclf = GridSearchCV(rf, parameters,scoring='accuracy',cv=5)\nclf.fit(X_resample, y_resample)\nclf.best_params_","23be7665":"test_path = '\/kaggle\/input\/fraud-detection\/fraudTest.csv'\ndf_test = pd.read_csv(path, index_col=0, dtype=column_dtypes, parse_dates=['trans_date_trans_time', 'dob'])\ndf_test['age'] = np.rint((pd.to_datetime('now') - df['dob']) \/ np.timedelta64(1, 'Y'))\nX_test = df_test.copy()[features_cols]\ny_test = X_test.pop('is_fraud')\nX_test = transform_X(X_test)\nX_test_resample, y_test_resample = rus.fit_resample(X_test, y_test)","656dae96":"y_test_resample.value_counts()","b7d0c7b7":"clf.score(X_test_resample, y_test_resample)","d59477d7":"from sklearn.metrics import classification_report\ny_pred = clf.predict(X_test_resample)","510786e3":"print(classification_report(y_test_resample, y_pred))","f27ad18c":"from sklearn.metrics import confusion_matrix\ncf_matrix = confusion_matrix(y_test_resample, y_pred)","1adc3f9d":"plt.figure(figsize=(10,8))\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='Blues')","eb1137e0":"from sklearn import metrics","8840e33f":"#define metrics\ny_pred_proba = clf.predict_proba(X_test_resample)[::,1]\nfpr, tpr, _ = metrics.roc_curve(y_test_resample,  y_pred_proba)\nroc_auc = metrics.auc(fpr, tpr)\nplt.figure()\nlw = 2\nplt.plot(\n    fpr,\n    tpr,\n    color=\"darkorange\",\n    lw=lw,\n    label=\"ROC curve (area = %0.2f)\" % roc_auc,\n)\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=lw, linestyle=\"--\")\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title(\"Receiver operating characteristic example\")\nplt.legend(loc=\"lower right\")\nplt.show()","ee338daf":"# I. Install and import libraries","e6c5954c":"# VI. Test and plot results","67fd503b":"# III. EDA and feature engineering","b3f55032":"# IV. Prepare data for modeling","3123c89b":"# V. Train model","8d8c9b8c":"#  II. Load the dataset"}}