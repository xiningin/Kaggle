{"cell_type":{"1cf50988":"code","01a5207c":"code","eaf7ed17":"code","93defc2f":"code","9caac00c":"code","24ff4235":"code","9a35726c":"code","f02269d4":"code","db9d5ae9":"code","f07c9a82":"code","6ad2864b":"code","4dc18bd0":"code","fbc6d34d":"code","12806dd1":"code","831cb8d1":"code","801dd41b":"code","fcfea284":"code","e261461c":"code","36bb7310":"code","5667a5d5":"code","9743a9e9":"code","cd1b22de":"code","b04cb75e":"code","3559d1f9":"code","60cdaf9f":"code","9a974a09":"code","05f1d367":"code","6af64b3d":"code","c935ca20":"code","646c2acc":"code","e2512e42":"code","1d0b96ca":"code","75c6d764":"code","0171d389":"code","4084a4a2":"markdown"},"source":{"1cf50988":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport xgboost as xb\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","01a5207c":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","eaf7ed17":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","93defc2f":"train_data.shape","9caac00c":" train_data.info()","24ff4235":"train_data.describe()","9a35726c":"train_data.isnull().sum()","f02269d4":"train_data['Age'].isnull().sum()","db9d5ae9":"import seaborn as sns\nimport matplotlib.pyplot as plt","f07c9a82":"sns.pairplot(train_data)","6ad2864b":"sns.distplot(train_data['Age'],bins=40)","4dc18bd0":"sns.distplot(train_data['Age'].dropna(),bins=40)","fbc6d34d":"sns.distplot(train_data['Fare'])","12806dd1":"sns.distplot(train_data['Pclass'])","831cb8d1":"sns.heatmap(train_data.isnull(),yticklabels=False)","801dd41b":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train_data)","fcfea284":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train_data)","e261461c":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train_data)","36bb7310":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train_data,palette='winter')","5667a5d5":"#here adding the mean value of Age in each Pclass .\ndef missingAgeValue(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","9743a9e9":"train_data['Age'] = train_data[['Age','Pclass']].apply(missingAgeValue,axis=1)","cd1b22de":"train_data['Age'].isnull().sum()","b04cb75e":"train_data.head()","3559d1f9":"train_data.drop('Cabin',axis=1,inplace=True)","60cdaf9f":"train_data.isnull().sum()","9a974a09":"train_data.dropna(inplace=True)","05f1d367":"train_data.isnull().sum()","6af64b3d":"train_data.info()","c935ca20":"y = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])","646c2acc":"#from sklearn.linear_model import LogisticRegression#\n#logmodel = LogisticRegression()\n#logmodel.fit(X,y)","e2512e42":"from xgboost import XGBClassifier\nxgbmodel=XGBClassifier()\nxgbmodel.fit(X,y)","1d0b96ca":"predictions = xgbmodel.predict(X_test)","75c6d764":"#accuracy = accuracy_score(y, predictions)\nprint(predictions)","0171d389":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})#\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","4084a4a2":"describe() is used to view some basic statistical details like percentile, mean, std etc. of a data frame or a series of numeric values"}}