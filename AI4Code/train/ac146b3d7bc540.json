{"cell_type":{"a04df1fe":"code","14f119e5":"code","680fc8ac":"code","e71c78c2":"code","f2708e58":"code","6160678d":"code","563f6c06":"code","3f6f8078":"code","f19b5f5a":"code","9068e014":"code","20ceef88":"code","4a6abf66":"code","2ce12237":"code","5b50bf00":"code","db8b5fb0":"code","9e85c3ae":"code","786e0257":"code","0df2a166":"code","e706887c":"markdown","832bb7d4":"markdown","b2cac7f5":"markdown","f3edbfdf":"markdown","5e8dceda":"markdown","e906967f":"markdown","dcafffcd":"markdown","3617a2a7":"markdown","685e5705":"markdown","5b7e04f1":"markdown","8abf3fab":"markdown","6da4ac82":"markdown","8dec0a96":"markdown","98ec4338":"markdown"},"source":{"a04df1fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","14f119e5":"import matplotlib.pyplot as plt\nimport seaborn as sns","680fc8ac":"konusma=pd.read_csv(\"..\/input\/pd_speech_features.csv\")\nkonusma.head()","e71c78c2":"howmanyman=konusma.gender.sum()\ntotal=konusma.gender.count()\nhowmanywoman=total-howmanyman\nprint(\"man: \"+str(howmanyman)+\" woman: \"+str(howmanywoman))","f2708e58":"konusma[[\"numPulses\",\"numPeriodsPulses\"]].corr()","6160678d":"del konusma['numPeriodsPulses']\nkonusma.head()","563f6c06":"%matplotlib inline\nsns.heatmap(konusma[konusma.columns[0:10]].corr(),annot=True)","3f6f8078":"del konusma['locPctJitter']\nkonusma.head()","f19b5f5a":"%matplotlib inline\nsns.heatmap(konusma[konusma.columns[10:20]].corr(),annot=True)","9068e014":"del konusma['ddpJitter']\ndel konusma['locShimmer']\ndel konusma['apq11Shimmer']\ndel konusma['meanNoiseToHarmHarmonicity']\nkonusma.head()","20ceef88":"konusma.shape","4a6abf66":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import f_classif\ny=konusma[\"class\"]\nx=konusma.iloc[:,0:747]\nxnew2=SelectKBest(f_classif, k=20).fit_transform(x, y)","2ce12237":"X=pd.DataFrame(xnew2)\nX.head()","5b50bf00":"sns.heatmap(X.corr(),annot=True)","db8b5fb0":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=43421)\nrdclass=RandomForestClassifier()\nrdclass.fit(X_train,y_train)\nypred=rdclass.predict(X_test)","9e85c3ae":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,ypred))\nfrom sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,ypred))","786e0257":"konusma=pd.read_csv(\"..\/input\/pd_speech_features.csv\")\ny=konusma[\"class\"]\nx=konusma.iloc[:,0:746] #nearly all :)\n","0df2a166":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=43421)\nrdclass=RandomForestClassifier()\nrdclass.fit(X_train,y_train)\nypred=rdclass.predict(X_test)\nprint(confusion_matrix(y_test,ypred))\nprint(accuracy_score(y_test,ypred))","e706887c":"Number of pulses and numPeriod pulses looks like each other. Corr test maybe good for this type of problem..\n","832bb7d4":"This dataset has full of features because of these we use SelectKBEST","b2cac7f5":"I make some experiments. Use all Features for classification. Yes it's not logical but it's expriment.","f3edbfdf":"IOC PCT Jitter and IoC ABS Jitter have highly correlated also. We should delete one of these columns. I delete IocPCTJitter","5e8dceda":"    ppq5jitter and ddpjitter is highly correlated. IOCShimmer and IOCDBShimmer is also highly correlated. \u0130F features have similar name they correlated","e906967f":"We create some correlation heatmap","dcafffcd":"This 2 Attiributes is too similar. We should discard one of these. I choose **numPeriodsPulses**","3617a2a7":"Better than previous version of these data. Not perfect but it's very good. ","685e5705":"For Gender perspective this dataset is balanced.","5b7e04f1":"Still we have too many columns. We should use Automatic Feature Selection Techniques.","8abf3fab":"## Classification With Random Forest ","6da4ac82":"\u0130t's interesting still work fine. I have to read it further about too many features in Machine Learning. ","8dec0a96":"## Work very well.","98ec4338":"Go Further with our correlation heatmap."}}