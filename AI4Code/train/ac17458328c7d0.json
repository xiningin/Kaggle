{"cell_type":{"8d10a5f8":"code","7fed5004":"code","f3d8fa35":"code","75cfeedc":"code","04e6da3e":"code","a9268907":"code","893e024c":"code","2e49a1d6":"code","cf700a6b":"code","bb3ac764":"code","bb945d9c":"markdown","f956a503":"markdown","95824d91":"markdown","4be90642":"markdown","1cb2618d":"markdown","893adc04":"markdown","86c30c34":"markdown","b3fe1186":"markdown","48d8500e":"markdown","ad71b304":"markdown","eb1c326b":"markdown","163dc449":"markdown"},"source":{"8d10a5f8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\n\nimport warnings\n#Suppressing all warnings\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline\n\ndf = pd.read_csv('..\/input\/housing-prices-in-metropolitan-areas-of-india\/Mumbai.csv')\ndf.head()","7fed5004":"print(\"Shape of the Data is\",df.shape)","f3d8fa35":"df.describe()","75cfeedc":"df.replace(9, np.nan, inplace=True)\ndf.isna().sum()","04e6da3e":"#Cleaning Location Column\nlocation = df.Location\n\n#Removing 'East' and 'West' from locations\nfor i in range(len(location)):\n    last_word = location[i].split(\" \")[-1]\n    if \"east\" in last_word.lower() or \"west\" in last_word.lower():\n        location[i] = \" \".join(location[i].split(\" \")[:-1])\n        \n#Cleaning Variations of Top Locations\ndef loc(location, ind):\n    top_locations = location.value_counts().index[:ind]\n    for i in range(len(location)):\n        for j in top_locations:\n            if j.lower() in location[i].lower():\n                location[i] = j\n    return location\n\nlocation = loc(location, 36)\ndf['Location'] = location","a9268907":"fig, ax = plt.subplots(figsize=(15, 10))\nax.set_title('No. of Properties by Location (Top 25)', fontsize=20)\nsns.countplot(y='Location', data=df, order=df.Location.value_counts().index[:25])\nax.set_xlabel('Locations', fontsize=15)\nax.set_ylabel('No. of Properties', fontsize=15)\nplt.show()","893e024c":"df['Area'] = pd.cut(df['Area'], bins=[0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, np.inf], labels=['0-250', '250-500', '500-750', '750-1000', '1000-1250', '1250-1500', '1500-1750', '1750-2000', '2000-2250', '2250-2500', '2500-2750', '2750-3000', '3000+'])\nfig, ax = plt.subplots(figsize=(15, 10))\nax.set_title('Area Distribution', fontsize=20)\nsns.countplot(x='Area', data=df)\nax.set_ylabel('No of Properties', fontsize=15)\nax.set_xlabel('Area Ranges', fontsize=15)\nplt.xticks(rotation=45)\nplt.show()","2e49a1d6":"df['Price'] = pd.cut(df['Price'],\n                     bins=[0, 5000000, 10000000, 15000000, 20000000, 25000000, 30000000, 35000000, 40000000, 45000000, 50000000, 55000000, 60000000, np.inf],\n                     labels=['0-50', '50-100', '100-150', '150-200', '200-250', '250-300', '300-350', '350-400', '400-450', '450-500', '550-600', '650-700', '700+'])\n\nfig, ax = plt.subplots(figsize=(15, 10))\nax.set_title('Price Distribution', fontsize=20)\nsns.countplot(x='Price', data=df)\nax.set_ylabel('No of Properties', fontsize=15)\nax.set_xlabel('Price Ranges (In Lakhs)', fontsize=15)\nplt.xticks(rotation=45)\nplt.show()","cf700a6b":"fig, ax = plt.subplots(figsize=(15, 10))\nax.set_title('No. of Bedrooms', fontsize=20)\nsns.countplot(x='No. of Bedrooms', data=df)\nax.set_ylabel('No of Properties', fontsize=15)\nax.set_xlabel('No. of Bedrooms', fontsize=15)\nplt.xticks(rotation=45)\nplt.show()","bb3ac764":"def fixlabels(li):\n    return ['Yes', 'No'] if li[0] == 1 else ['No', 'Yes']\nfig, axes = plt.subplots(nrows=12, ncols=3, figsize=(15, 60))\nfor i in range(4,len(df.columns)):        \n    axes[(i-4)\/\/3][(i-4)%3].pie(df[df.columns[i]].value_counts(), labels=fixlabels(df[df.columns[i]].value_counts().index), autopct='%1.1f%%', startangle=90)\n    axes[(i-4)\/\/3][(i-4)%3].set_title(df.columns[i])\nplt.show()","bb945d9c":"## Area","f956a503":"6321 out of 7719 Records has missing data for most features.","95824d91":"## Location","4be90642":"<h1><center>Housing in Mumbai<\/center><\/h1>\n<center><img src=\"https:\/\/qph.fs.quoracdn.net\/main-qimg-33dc4f7f6b63c51266264b22dc6e532b?fit=scale\"><\/center>","1cb2618d":"**Null Values**","893adc04":"## Other Binary Features of the Dataset","86c30c34":"# Visualizations","b3fe1186":"# Data Overview","48d8500e":"**Description of Data**","ad71b304":"## Price","eb1c326b":"Null Data seems to be marked as '9' so we'll replace 9 with NaN","163dc449":"## No. of Bedrooms"}}