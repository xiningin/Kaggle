{"cell_type":{"1f4f794f":"code","09d6c684":"code","64f2169d":"code","3780f8d9":"code","25434d5f":"code","98971de9":"code","cb9abccd":"code","18f22bea":"code","c244e3d8":"code","c0207557":"code","6c9b55ee":"code","5a4117f1":"code","665979d9":"code","51c3e655":"code","5a05e3a0":"code","2b455030":"code","aff0fd76":"code","5d3f1612":"markdown","9a264d48":"markdown","1b29b1ca":"markdown","c7a61d3f":"markdown","9a939965":"markdown","a97f2ca0":"markdown","fa8ede36":"markdown","35913732":"markdown","da3d1871":"markdown","7878fd67":"markdown","f3e3e695":"markdown","33abf28c":"markdown","f958757f":"markdown","04c50aaa":"markdown","968420c9":"markdown","5312dbb1":"markdown","54976d39":"markdown"},"source":{"1f4f794f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09d6c684":"import matplotlib.pyplot as plt","64f2169d":"yogurts_sold = [300, 250, 160, 230, 180]\nflavors = ['chocolate', 'strawberry', 'honeybanana', 'blueberry', 'pistachio']","3780f8d9":"plt.pie(yogurts_sold, labels=flavors)\nplt.show()","25434d5f":"plt.pie(yogurts_sold, labels=flavors, radius=1.5) # default radius is 1\nplt.show()","98971de9":"explode = [0.1, 0, 0, 0, 0]\nplt.pie(yogurts_sold, explode=explode, labels=flavors, radius=1.5)\nplt.show()","cb9abccd":"plt.pie(yogurts_sold, explode=explode, labels=flavors, radius=1.5, shadow=True)\nplt.show()","18f22bea":"plt.pie(yogurts_sold, explode=explode, labels=flavors, radius=1.5, shadow=True, startangle=90)\nplt.show()","c244e3d8":"plt.pie(yogurts_sold, explode=explode, labels=flavors, radius=1.5, shadow=True, rotatelabels=True)\nplt.show()","c0207557":"colors = ['indianred', 'deeppink', 'gold', 'mediumorchid', 'palegreen']\nplt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, radius=1.5, shadow=True)\nplt.show()","6c9b55ee":"plt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, radius=1.5, shadow=True, autopct='%.1f%%')\nplt.show()","5a4117f1":"plt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, radius=2, shadow=True,  \n        autopct=lambda p: \"{:.1f}% ({:.0f} units)\".format(p, p*sum(yogurts_sold)\/100))\nplt.show()","665979d9":"textprops={\"color\":\"white\",\n           \"weight\":\"bold\"}     \n\nplt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, radius=2, shadow=True, \n        autopct=lambda p: \"{:.1f}% ({:.0f} units)\".format(p, p*sum(yogurts_sold)\/100),\n        textprops=textprops)\nplt.show()","51c3e655":"plt.figure(figsize=(10,8))\nplt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, shadow=True, \n       autopct= lambda p: \"{:.1f}% ({:.0f} units)\".format(p, p*sum(yogurts_sold)\/100),\n       textprops=textprops)\nplt.legend(title=\"Yogurt Flavors\", loc=\"upper right\")\n# loc: upper left, upper right, lower left, lower right, upper center, lower center, center left, center right, center, best\nplt.show()","5a05e3a0":"wedgeprops = {\"linewidth\":3, \"edgecolor\":\"black\"}\nplt.figure(figsize=(10,8))\nplt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, shadow=True, \n        autopct=lambda p: \"{:.2f}% ({:.0f} units)\".format(p, p*sum(yogurts_sold)\/100),\n        wedgeprops=wedgeprops)\nplt.legend(title=\"Yogurt Flavors\")\nplt.show()","2b455030":"plt.figure(figsize=(10,8))\nplt.pie(yogurts_sold, explode=explode, labels=flavors, colors=colors, shadow=True, \n        autopct=lambda p: \"{:.2f}% ({:.0f} units)\".format(p, p*sum(yogurts_sold)\/100),\n        labeldistance=None)\nplt.legend(title=\"Yogurt Flavors\")\nplt.show()","aff0fd76":"plt.pie(yogurts_sold, labels=flavors, radius=1, colors=colors, wedgeprops={\"width\":0.5})\nplt.show()","5d3f1612":"# 3) Using explode in pie chart","9a264d48":"# 12) Wedges with thicker line and different edge color","1b29b1ca":"# 1) Simple Pie chart","c7a61d3f":"# 8) Label a pie chart with percent","9a939965":"# 13) Without label names","a97f2ca0":"# 6) Rotate labels to the angle of the wedge","fa8ede36":"# 2) Make a pie chart bigger\u00b6","35913732":"Please visit [matplotlib - pie chart](https:\/\/mldoodles.com\/matplotlib-pie-chart\/) for detailed explanation to this notebook","da3d1871":"For more content like this, please visit [Machine learning in Python](https:\/\/mldoodles.com).","7878fd67":"# 4)  Pie chart with shadow","f3e3e695":"# 7) Customize colors in pie chart","33abf28c":"# 10) White and bold font for text in pie chart","f958757f":"# 14) Pie chart like a donut (Hole in the middle of a pie chart)","04c50aaa":"# 9) Label a pie chart with percent and value","968420c9":"# 5) Pie chart with different start angle","5312dbb1":"# 11) Pie chart with legend","54976d39":"\n# Matplotlib - Pie Chart"}}