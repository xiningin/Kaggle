{"cell_type":{"2c1cf39f":"code","ebd4f3b4":"code","61a3d42c":"code","8e677a37":"code","84965121":"code","2061bd09":"code","eb4a4d69":"code","e9f18f16":"code","1cb99629":"markdown"},"source":{"2c1cf39f":"!pip install autogluon.tabular[all] -q --progress-bar off","ebd4f3b4":"import pandas as pd\nfrom timeit import default_timer as timer","61a3d42c":"competition_prefix = 'tabular-playground-series-jun-2021'\n\ntrain_data = pd.read_csv(f'..\/input\/{competition_prefix}\/train.csv', index_col='id')\ntest_data = pd.read_csv(f'..\/input\/{competition_prefix}\/test.csv', index_col='id')\nsample_submission = pd.read_csv(f'..\/input\/{competition_prefix}\/sample_submission.csv', index_col='id')\n\nrandom_state = 42\n\nlabel = 'target'","8e677a37":"from autogluon.tabular import TabularPredictor\n\n\ntime_limit = 3600 * 8 # 8 hours time limit\n\n# copy and modify default parameters from \"fit\" method\n# (https:\/\/auto.gluon.ai\/stable\/api\/autogluon.predictor.html#autogluon.tabular.TabularPredictor.fit)\n# to fix random states and change n_neighbors parameter for KNN\nhyperparameters = {\n    'NN': {},\n    'GBM': [\n        {'extra_trees': True, 'seed': random_state, 'ag_args': {'name_suffix': 'XT'}},\n        {},\n        'GBMLarge',\n    ],\n    'CAT': {'random_seed': random_state},\n    'XGB': {'seed': random_state},\n    'FASTAI': {},\n    'RF': [\n        {'criterion': 'gini', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},\n        {'criterion': 'entropy', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},\n        {'criterion': 'mse', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},\n    ],\n    'XT': [\n        {'criterion': 'gini', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},\n        {'criterion': 'entropy', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},\n        {'criterion': 'mse', 'random_state': random_state,\n         'ag_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},\n    ],\n    'KNN': [\n        {'weights': 'uniform', 'n_neighbors': 1000, 'ag_args': {'name_suffix': 'Unif'}},\n        {'weights': 'distance', 'n_neighbors': 1000, 'ag_args': {'name_suffix': 'Dist'}},\n    ],\n}\n\nt0 = timer()\nautogluon_predictor = TabularPredictor(\n    label=label,\n    eval_metric=\"log_loss\",\n    learner_kwargs={'ignored_columns': ['id']}\n).fit(\n    train_data=train_data,\n    time_limit=time_limit,\n    presets='best_quality',\n    verbosity=0,\n    hyperparameters=hyperparameters\n)\nt1 = timer()\nfitting_time = t1 - t0\n\nleaderboard = autogluon_predictor.leaderboard()","84965121":"leaderboard","2061bd09":"t0 = timer()\npredictions = autogluon_predictor.predict_proba(test_data)\nt1 = timer()\nprediction_time = t1 - t0\npredictions.columns = list(sample_submission.columns)\npredictions.index = sample_submission.index\npredictions.to_csv('tps_jun_2021_autogluon_submission.csv')\n\npredictions.head()","eb4a4d69":"print('Fitting time[s]:', round(fitting_time, 3))\nprint('Prediction time[s]:', round(prediction_time, 3))","e9f18f16":"!rm -rf AutogluonModels","1cb99629":"## Default AutoGluon without Intel\u00ae Extension for Scikit-learn\n\nNotebook is using default AutoGluon without Intel\u00ae Extension for Scikit-learn (sklearnex). It's used as baseline for another [notebook](https:\/\/www.kaggle.com\/alex97andreev\/tps-jun-autogluon-with-sklearnex)."}}