{"cell_type":{"1eb066df":"code","ce2bbf67":"code","0d242d71":"code","69b97bc6":"code","571c8454":"code","7d61ddc6":"code","f9c130cb":"code","f92f7a04":"code","b11b58cc":"code","6150c740":"code","01e18da2":"code","14cf1e74":"code","9ca83ec1":"code","af34d3f3":"code","9ec79638":"code","72d2852c":"code","45629ee8":"code","0f85d718":"code","624a5998":"code","cd25baf2":"code","ec0a4c6a":"markdown","f33f377e":"markdown","4d211fa7":"markdown","7097b786":"markdown"},"source":{"1eb066df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce2bbf67":"import pandas as pd \nimport plotly.express as px","0d242d71":"netflix = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\nnetflix[\"date_added\"]=pd.to_datetime(netflix[\"date_added\"].str.strip(), format=\"%B %d, %Y\")\nnetflix","69b97bc6":"netflix.dtypes","571c8454":"netflix.describe()","7d61ddc6":"netflix[\"date_added\"].hist() #matplotlib version","f9c130cb":"px.histogram(netflix, x=\"release_year\")","f92f7a04":"netflix[netflix[\"release_year\"] == 1925]","b11b58cc":"### Extract Month from date_added\n\nnetflix[\"date_added_month\"] = netflix[\"date_added\"].dt.month.fillna(0)\nnetflix[\"date_added_day\"] = netflix[\"date_added\"].dt.day.fillna(0)","6150c740":"px.histogram(netflix, x=\"date_added\", color=\"date_added_month\") # Histogram of date","01e18da2":"px.histogram(netflix, x=\"date_added_month\", color=\"type\") ","14cf1e74":"px.histogram(netflix, x=\"date_added_day\", color=\"type\")  #graph shows Netflix release most shows\/movie on the first date of the month","9ca83ec1":"netflix.columns","af34d3f3":"netflix[\"type\"].hist()","9ec79638":"netflix[\"country\"].str.split(\",\", expand=True)","72d2852c":"country_count = netflix.copy()\ncountry_count = pd.concat([country_count, netflix[\"country\"].str.split(\",\", expand=True, )], axis=1)\ncountry_count = country_count.melt(id_vars=[\"type\", \"title\"], value_vars=range(12), value_name=\"Country\")\ncountry_count = country_count[country_count[\"Country\"].notna()]\ncountry_count[\"Country\"] = country_count[\"Country\"].str.strip()\ncountry_count","45629ee8":"px.histogram(country_count, \"Country\", color=\"type\").update_xaxes(categoryorder=\"total descending\")","0f85d718":"px.histogram(netflix, \"rating\").update_xaxes(categoryorder=\"total descending\")","624a5998":"netflix[\"Cast Count\"] = netflix[\"cast\"].str.split(\",\")\nnetflix = netflix[netflix[\"Cast Count\"].notna()]\nnetflix[\"Cast Count\"] = netflix[\"Cast Count\"].apply(lambda x: len(x))\nnetflix","cd25baf2":"px.histogram(netflix, \"Cast Count\").update_xaxes(categoryorder=\"total descending\")","ec0a4c6a":"## Numerical Column Describe function","f33f377e":"### Data Analysis","4d211fa7":"## Import Data and Libraries","7097b786":"## String Column Analysis\n"}}