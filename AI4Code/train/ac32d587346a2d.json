{"cell_type":{"9db4837e":"code","429d9aa8":"code","1f7abae8":"code","42ed2c62":"code","c464eea5":"code","47e53032":"code","d1704fc7":"markdown","2bfe84ff":"markdown"},"source":{"9db4837e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/sample images\"))\n\n# Any results you write to the current directory are saved as output.","429d9aa8":"# Convert to JPEG2K via Pillow\n# https:\/\/github.com\/python-pillow\/Pillow\n \nimport os\nimport pydicom\nimport glob\nfrom PIL import Image\n\ninputdir = '..\/input\/sample images\/'\noutdir = '.\/'\n\ntest_list = [os.path.basename(x) for x in glob.glob(inputdir + '.\/*.dcm')]\nfor f in test_list:  \n    ds = pydicom.read_file( inputdir + f) # read dicom image\n    img = ds.pixel_array # get image array\n    img_mem = Image.fromarray(img) # Creates an image memory from an object exporting the array interface\n    \n#   There is an exception in Kaggle kernel about \"encoder jpeg2k not available\", please test following code on your local workstation\n#   img_mem.save(outdir + f.replace('.dcm','.jp2'))","1f7abae8":"# Convert to JPEG2K via imageio\n# https:\/\/github.com\/imageio\/imageio\n\nimport os\nimport pydicom\nimport glob\nimport imageio\n\ninputdir = '..\/input\/sample images\/'\noutdir = '.\/'\n\ntest_list = [os.path.basename(x) for x in glob.glob(inputdir + '.\/*.dcm')]\nfor f in test_list:  \n    ds = pydicom.read_file(inputdir + f) # read dicom image\n    img = ds.pixel_array # get image array\n    \n#   There is an exception in Kaggle kernel about \"encoder jpeg2k not available\", please test following code on your local workstation\n#   imageio.imwrite(outdir + f.replace('.dcm','.jp2'), img)","42ed2c62":"# DCMTK \nDCMTK (https:\/\/dicom.offis.de\/dcmtk.php.en) also provides DICOM conversion to JPEG 2000\n\nInstall guide can be found at Quick installation section (https:\/\/dicom.offis.de\/dcmtk.php.en). \n\nTo perform DCMTK, please use executable binary software \"dcmj2pnm\" and run (e.g. Linux user)\n\n> dcmj2pnm \/PATH_TO_SAMPLE_DICOM\/sample.dcm \/PATH_TO_SAVE_JPEG2K\/sample.jpg\n\nThe create \"*.jpg\" file should be value lossless. Please do double check.  ","c464eea5":"# Convert DICOM to PNG via openCV\nimport cv2\nimport os\nimport pydicom\nimport glob\n\ninputdir = '..\/input\/sample images\/'\noutdir = '.\/'\n#os.mkdir(outdir)\n\ntest_list = [os.path.basename(x) for x in glob.glob(inputdir + '.\/*.dcm')]\n\nfor f in test_list:   \n    ds = pydicom.read_file(inputdir + f) # read dicom image\n    img = ds.pixel_array # get image array\n    cv2.imwrite(outdir + f.replace('.dcm','.png'),img) # write png image","47e53032":"# Convert to PNG via PIL \n# https:\/\/github.com\/python-pillow\/Pillow\nimport os\nimport pydicom\nimport glob\nfrom PIL import Image\n\ninputdir = '..\/input\/sample images\/'\noutdir = '.\/'\n\ntest_list = [os.path.basename(x) for x in glob.glob(inputdir + '.\/*.dcm')]\n#glob.glob(inputdir + '.\/*.dcm')\nfor f in test_list:   \n    ds = pydicom.read_file( inputdir + f) # read dicom image\n    img = ds.pixel_array # get image array\n    img_mem = Image.fromarray(img) # Creates an image memory from an object exporting the array interface\n    img_mem.save(outdir + f.replace('.dcm','.png'))","d1704fc7":"# Note\nTo safe Following sections are example methods to perform DICOM to JPEG2K conversion, please always double check if the generated JPEG files are lossless.\n\nCurrently you're receiving errors running following code on Kaggle Kernels that you're not having issues with locally. The kernels libraries may not match, and we are working this issue. Potential problem is mis-configured openjpeg package. Any thoughts and comments are appreciated. ","2bfe84ff":"# Other options"}}