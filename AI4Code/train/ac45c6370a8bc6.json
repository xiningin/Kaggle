{"cell_type":{"18614ffd":"code","cf971329":"code","3b2d3a13":"code","11348400":"code","9c9150ee":"code","1f708add":"code","29fe44b6":"code","d98827f4":"code","11d70ddf":"code","8ac383e5":"code","2cc8a77c":"code","dfc82816":"code","ca92653f":"code","7108de94":"code","c6d942cf":"code","d7e58501":"code","bad3903e":"markdown","c7ead3d0":"markdown","1d8922fc":"markdown","8ebb7332":"markdown","7a71a9e7":"markdown"},"source":{"18614ffd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n        \n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf971329":"from sklearn import datasets\niris = datasets.load_iris()","3b2d3a13":"# iris","11348400":"print(iris.DESCR)","9c9150ee":"df = pd.DataFrame(data= np.c_[iris['data'], iris['target']],columns= iris['feature_names'] + ['target'])","1f708add":"dict1 = {0:'Iris-Setosa',1:'Iris-Versicolour',2:'Iris-Virginica'}\ndf['target'] = df['target'].map(dict1)","29fe44b6":"df.head()","d98827f4":"import plotly.graph_objects as go","11d70ddf":"list(df['target'].unique())","8ac383e5":"import plotly.express as px\n\nfig = px.scatter(df, x=df['sepal length (cm)'], y=df['petal length (cm)'], color=df['target'])\n\nfig.update_layout(\n    autosize=True,\n    plot_bgcolor='#E1E8D3',\n    height=1000\n)\n\nfig.update_layout(title={\n        'text': \"Sepal length (cm) \/ Petal length (cm)\",\n        'y':0.98,\n        'x':0.5,\n        'xanchor': 'center'},\n        title_font_size=30,\n        showlegend=False)\n\nfig.show()","2cc8a77c":"fig = go.Figure()\n\nfig.update_layout(\n    autosize=True,\n    plot_bgcolor='#E1E8D3',\n    height=1000\n)\n\nfig.update_layout(title={\n        'text': \"Iris boxplot graph\",\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center'}, \n        title_font_size=30)\n\nfig.add_trace(go.Box(y=df['sepal length (cm)'], quartilemethod=\"linear\", name=df.columns[0], boxpoints='all', marker_color='#6E8B77'))\nfig.add_trace(go.Box(y=df['sepal width (cm)'], quartilemethod=\"linear\", name=df.columns[1], boxpoints='all', marker_color='#ADCBB7'))\nfig.add_trace(go.Box(y=df['petal length (cm)'], quartilemethod=\"linear\", name=df.columns[2], boxpoints='all', marker_color='#4A5143'))\nfig.add_trace(go.Box(y=df['petal width (cm)'], quartilemethod=\"linear\", name=df.columns[3], boxpoints='all', marker_color='#C78E68'))\n\nfig.update_layout(showlegend=False)\nfig.show()","dfc82816":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(iris['data'], iris['target'], random_state=2)","ca92653f":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nxgb = XGBClassifier(booster='gbtree', \n                    objective='multi:softprob', \n                    max_depth=6, \n                    learning_rate=0.1, \n                    n_estimators=100, \n                    random_state=2, \n                    n_jobs=-1)","7108de94":"xgb.fit(X_train, y_train)","c6d942cf":"y_pred = xgb.predict(X_test)\nscore = accuracy_score(y_pred, y_test)\nprint('Score: ' + str(score))","d7e58501":"# to be continued...","bad3903e":"Let's try to tune hyperparameters of XGBoost","c7ead3d0":"<div align='center'>\n    <img src=\"https:\/\/github.com\/GlebLevankov\/persimmone\/blob\/master\/IRIS%20DATASET%20_cool.gif?raw=true\">\n<\/div>","1d8922fc":"<p style=\"background-color:#252629;font-family:avenir next;color:#F1F3F4;font-size:200%;text-align:center;border-radius:25px 25px;\">IRIS XGBoost<\/p>","8ebb7332":"<p style=\"background-color:#252629;font-family:avenir next;color:#F1F3F4;font-size:200%;text-align:center;border-radius:25px 25px;\">Just a little Machine Learning<\/p>","7a71a9e7":"<p style=\"background-color:#252629;font-family:avenir next;color:#F1F3F4;font-size:200%;text-align:center;border-radius:25px 25px;\">Let's look at the Charts of the data<\/p>"}}