{"cell_type":{"7fc0d2e6":"code","6d2cac22":"code","44a8a44c":"code","5bdf1b05":"code","cc660e9e":"code","9ca146c3":"code","1ddea104":"code","608a139d":"code","0668d895":"code","96d9be5c":"markdown","9913e471":"markdown","fc461cd1":"markdown","79504efc":"markdown","dd92067f":"markdown","2f39a5ea":"markdown","81660222":"markdown","e123c13d":"markdown"},"source":{"7fc0d2e6":"ground_truth = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1] \n\nprediction   = [0.1, 0.3, 0.2, 0.6, 0.8, 0.05, 0.9, 0.5, 0.3, 0.66, 0.3,  0.2, 0.85, 0.15, 0.99] \n\nthresholds    = [0, 0.1, 0.2, 0.3, 0.4, 0.5,  0.6, 0.7, 0.8, 0.85, 0.9, 0.99, 1.0] ","6d2cac22":"#True Positive\ndef true_positive(ground_truth, prediction):\n    tp = 0\n    for gt, pred in zip(ground_truth, prediction):\n        if gt == 1 and pred == 1:\n            tp +=1\n    return tp","44a8a44c":"#True Negative\ndef true_negative(ground_truth, prediction):\n    tn = 0\n    for gt, pred in zip(ground_truth, prediction):\n        if gt == 0 and pred == 0:\n            tn +=1\n    return tn","5bdf1b05":"#False Positive\ndef false_positive(ground_truth, prediction):\n    fp = 0\n    for gt, pred in zip(ground_truth, prediction):\n        if gt == 0 and pred == 1:\n            fp +=1\n    return fp","cc660e9e":"#False Negative\ndef false_negative(ground_truth, prediction):\n    fn = 0\n    for gt, pred in zip(ground_truth, prediction):\n        if gt == 1 and pred == 0:\n            fn +=1\n    return fn","9ca146c3":"def tpr(ground_truth, prediction):\n    tp = true_positive(ground_truth, prediction)  \n    fn = false_negative(ground_truth, prediction)  \n    pr = tp\/ (tp + fn)  \n    return pr","1ddea104":"def fpr(ground_truth, prediction):\n    fp = false_positive(ground_truth, prediction)  \n    tn = true_negative(ground_truth, prediction)  \n    fr = fp\/ (tn + fp)  \n    return fr","608a139d":"true_positive_rate = []\nfalse_poitive_rate = []\n\nfor threshold in thresholds:  \n    #calculate predictions for threshold  \n    value_pred = [1 if x >= threshold else 0 for x in prediction]   \n    value_tpr = tpr(ground_truth, value_pred)   \n    value_fpr = fpr(ground_truth, value_pred)  \n    true_positive_rate.append(value_tpr)  \n    false_poitive_rate.append(value_fpr) ","0668d895":"%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(7, 7))  \nplt.fill_between(false_poitive_rate, true_positive_rate, alpha=0.4)  \nplt.plot(false_poitive_rate, true_positive_rate, lw=3)  \nplt.xlim(0, 1.0)  \nplt.ylim(0, 1.0)  \nplt.xlabel('FPR', fontsize=15)  \nplt.ylabel('TPR', fontsize=15)  \nplt.show() ","96d9be5c":"### True Positive Rate (Sensitivity or Recall) = TP\/ (TP + FN)","9913e471":"### True Positive:\nIf model predicts Positive class correctly then its True Positive.","fc461cd1":"### False Positive:\nIf model predicts Positive class incorrectly then its False Positive.","79504efc":"### False Positive Rate (Sensitivity or Recall) = FP\/ (TN + FP)","dd92067f":"### Assume Postive class : 1 and Negative class : 0","2f39a5ea":"### ROC and AUC ","81660222":"### True Negative:\nIf model predicts Negative class correctly then its True Negative.","e123c13d":"### False Negative:\nIf model predicts Negative class incorrectly then its False Negative."}}