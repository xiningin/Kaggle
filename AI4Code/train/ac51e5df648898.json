{"cell_type":{"3c3ebbf7":"code","c94b7e28":"code","4e381f14":"code","d6d232cf":"code","0e829f74":"code","a6bb7bd6":"code","6f603455":"code","2f5ffe74":"code","68fca08e":"code","11c0ead8":"code","0b979f2a":"code","92b5e928":"code","d854b822":"code","e780155e":"code","1d727d1d":"code","dd9771ad":"code","8bd88259":"code","a1aae1c6":"code","cd096140":"code","c17383df":"code","ad711d2f":"code","458416a7":"code","5bbf5ee1":"code","e444d2cd":"code","e95d1bbc":"code","33d9708c":"code","166f21de":"code","c5cbf129":"code","b8e3fa06":"markdown","22e16408":"markdown","6868610e":"markdown","cf257edd":"markdown","49b8e48a":"markdown","3ca79add":"markdown","a74135fc":"markdown","9cafdafa":"markdown","9a7b8c8d":"markdown","795d15f8":"markdown","68613c9c":"markdown","934b24a6":"markdown","25b22ec7":"markdown","d73e4211":"markdown","e4c46af9":"markdown","79db7964":"markdown"},"source":{"3c3ebbf7":"!pip install fastai==0.7.0 ","c94b7e28":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom fastai.imports import *\nfrom fastai.structured import *   ## Need to install fastai 0.7 for this \n\nfrom pandas_summary import DataFrameSummary\nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom IPython.display import display\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\nimport os\nprint(os.listdir(\"..\/input\"))","4e381f14":"df_raw = pd.read_csv('..\/input\/train_V2.csv', low_memory=False)\ndf_raw_test = pd.read_csv('..\/input\/test_V2.csv', low_memory=False)","d6d232cf":"def display_all(df):\n    with pd.option_context(\"display.max_rows\", 100, \"display.max_columns\", 100):\n        display(df)","0e829f74":"display_all(df_raw.tail())","a6bb7bd6":"display_all(df_raw.describe(include='all'))","6f603455":"# store test info\ndf_raw_test_info = df_raw_test[['Id', 'groupId', 'matchId']]","2f5ffe74":"df_raw.drop(['Id', 'groupId', 'matchId'], axis=1, inplace=True)\ndf_raw_test.drop(['Id', 'groupId', 'matchId'], axis=1, inplace=True)","68fca08e":"train_cats(df_raw)\napply_cats(df_raw_test, df_raw)","11c0ead8":"display_all(df_raw.isnull().sum().sort_index()\/len(df_raw))","0b979f2a":"df_raw[pd.isna(df_raw['winPlacePerc'])]","92b5e928":"df_raw.dropna(subset=['winPlacePerc'], inplace=True)","d854b822":"df_trn, y_trn, nas = proc_df(df_raw, 'winPlacePerc')\ndf_test, _, _ = proc_df(df_raw_test, na_dict=nas)","e780155e":"# split the data to train valid\n\nX_train, X_valid, y_train, y_valid = train_test_split(df_trn, y_trn, test_size=0.33, random_state=42)","1d727d1d":"from sklearn.metrics import mean_absolute_error\n\ndef print_score(m):\n    res = [mean_absolute_error(m.predict(X_train), y_train), mean_absolute_error(m.predict(X_valid), y_valid),\n                m.score(X_train, y_train), m.score(X_valid, y_valid)]\n    if hasattr(m, 'oob_score_'): res.append(m.oob_score_)\n    print(res)","dd9771ad":"set_rf_samples(20000)\nm = RandomForestRegressor(n_jobs=-1, n_estimators = 40, min_samples_leaf = 7, min_samples_split = 7)\n%time m.fit(X_train, y_train)","8bd88259":"%time print_score(m)","a1aae1c6":"pred = m.predict(df_test)\npred","cd096140":"df_sub = df_raw_test_info[['Id']]","c17383df":"pd.options.mode.chained_assignment = None  # default='warn' ## TO remove warning due to assignment below\ndf_sub['winPlacePerc'] = pred","ad711d2f":"df_sub.to_csv('PUBG_RF_tune.csv', index=None)","458416a7":"fi = rf_feat_importance(m, X_train)\nfi[:10]","5bbf5ee1":"fi.plot('cols', 'imp', figsize=(10,6), legend=False)","e444d2cd":"def plot_fi(fi): return fi.plot('cols', 'imp', 'barh', figsize=(12,7), legend=False)\nplot_fi(fi[:30])","e95d1bbc":"to_keep = fi[fi.imp>0.005].cols; len(to_keep)","33d9708c":"df_keep = df_raw[to_keep].copy()\nX_train, X_valid, y_train, y_valid = train_test_split(df_keep, y_trn, test_size=0.33, random_state=42)","166f21de":"set_rf_samples(20000)\nm = RandomForestRegressor(n_jobs=-1, n_estimators = 40, min_samples_leaf = 7, min_samples_split = 7)\n%time m.fit(X_train, y_train)","c5cbf129":"%time print_score(m)","b8e3fa06":"## Running the model \nRunning the model on the enitre dataset took 7 mins. So we are taking a random sub-sample to be able to iterate faster.","22e16408":"Now we can see how good our model is doing. The model is getting a R^2 score of ~0.91 for the validation dataset. ","6868610e":"fastai library provide train_cats method which change any columns of strings in a dataframe to a column of categorical values. I also use apply_cats method on the test dataset to change any columns of strings into categorical variables using the train dataset (df_raw) as a template.","cf257edd":"So Walk distance is THE most important feature that determines the output of a PUBG game !! Sounds intuitive as well !","49b8e48a":"## Submission","3ca79add":"## Initial Processing","a74135fc":"## Random Forest Regressor using fast.ai along with Model Interpretation","9cafdafa":"So not all the columns are useful in the Random Forest model, and we can just drop off the some features without sacrificing in accuracy. Let's see how many of these features do we need.","9a7b8c8d":"Let store Id, groupId, and matchId from the test dataset into an info dataset. This will be later use for submission. We can then drop this 3 fields from both the train and test dataset as it would not help us in building our model.","795d15f8":"Oh, it's only one row. Let's get rid of the row.","68613c9c":"## Feature Selection\nLet's check feature importance for each column","934b24a6":"Random forest classifier only take entirely numeric dataframe. To make sure our dataset is fit to be passed to the classifier, we can use proc_df to make sure the training and test dataset are set to numeric dataframe. ","25b22ec7":"Apparently, we have na values in the winPlacePerc column. This column is the target variable so it does not make sense to have an na values. Let's check the rows.","d73e4211":"## Splitting into Validation set\nLet's split the dataset to get a validation dataset to make sure we do not overfit to the training dataset.\n","e4c46af9":"To ensure no module not found errors","79db7964":"We see that the R^2 did not change much after removing the redundant features from our model !!"}}