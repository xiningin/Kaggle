{"cell_type":{"c6895876":"code","228f4bbc":"code","509c9ae1":"code","2a156b76":"code","4d480dc4":"code","363c5a90":"code","9fc57985":"code","5687d963":"code","eb829426":"code","a46af429":"code","a860ef3f":"code","53231f3a":"code","bf788020":"code","227ef883":"code","aa0a2516":"code","88697c4a":"code","21ebcff0":"code","0965cebf":"code","81ec09bb":"code","e307de9f":"code","6fe5f0db":"code","70f1d459":"code","f448c1bd":"code","6269d24b":"code","e438c9f9":"code","d8e34928":"code","93bff3ff":"code","f6147550":"code","d0435113":"code","136032c3":"code","e6100331":"code","11e7dc24":"code","7e6b677c":"code","b0d837c2":"code","0acd77fb":"code","8c6945ae":"code","8f5c98f8":"code","ed6b5c25":"code","0c0e29b2":"code","8829dfa8":"code","42bbe58f":"code","6ee59686":"code","b3158d4d":"code","977777b1":"code","3c52352f":"code","f2ad5e47":"code","afbe2bf1":"code","41a9776a":"code","9851f972":"code","c53a5d70":"code","d13de340":"code","72da4e0b":"code","fb604b3b":"code","50019e86":"code","fc74289a":"code","006ab0e6":"code","81375f6c":"code","534ce77f":"code","9be33ae9":"code","d3969f11":"code","c906ae57":"code","aef2dd72":"code","95205318":"code","d857d300":"markdown","d362e698":"markdown","5693003e":"markdown","da99a306":"markdown","79390126":"markdown","17857f75":"markdown","94886dd6":"markdown","b70c02bc":"markdown","a5b23dbb":"markdown"},"source":{"c6895876":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport pandas as pd\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport os\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\n\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","228f4bbc":"# Load data\nsurvey = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv',low_memory=False)\n\n# concate the first row into the header\nsurvey.columns=survey.columns+'|'+survey.iloc[0,:]\nsurvey = survey.iloc[1: , :]\n\n# create a column with unique respondent_id\nsurvey['respondent_id'] = range(1, survey.shape[0] + 1 ,1)\n\n# number of participants\n# 25973\nnr_participants = survey['respondent_id'].nunique()\nprint(\"The number of valid survey participants: \" + str(nr_participants) + \".\")","509c9ae1":"# How many participants answer the question of yearly compensation?\n# replace the null value  with 'unknown'\nsurvey['Q25|What is your current yearly compensation (approximate $USD)?'] = survey['Q25|What is your current yearly compensation (approximate $USD)?'].replace(np.nan, 'Unknown')\n# remove the unknown values of yearly compensation\nsurvey_compensation = survey.loc[survey['Q25|What is your current yearly compensation (approximate $USD)?'] != 'Unknown']\n\n# get number of respondents in each compensation group\nsurvey_compensation_count = survey_compensation['Q25|What is your current yearly compensation (approximate $USD)?'].value_counts().reset_index()\nsurvey_compensation_count = survey_compensation_count.rename(columns={'index': 'yearly_compensation_range', 'Q25|What is your current yearly compensation (approximate $USD)?': 'number_of_respondents'})\n\n#ordering the segments by amount \nsurvey_compensation_count.yearly_compensation_range = pd.Categorical(survey_compensation_count.yearly_compensation_range, \n                      categories=[\"$0-999\",\"1,000-1,999\",\"2,000-2,999\",\"3,000-3,999\",\"4,000-4,999\",\"5,000-7,499\",\"7,500-9,999\",\n                                 \"10,000-14,999\",\"15,000-19,999\",\"20,000-24,999\",\"25,000-29,999\",\"30,000-39,999\",\"40,000-49,999\",\"50,000-59,999\",\n                                 \"60,000-69,999\",\"70,000-79,999\",\"80,000-89,999\",\"90,000-99,999\",\"100,000-124,999\",\"125,000-149,999\",\n                                 \"150,000-199,999\",\"200,000-249,999\",\"250,000-299,999\",\"300,000-499,999\",\"$500,000-999,999\",\">$1,000,000\"],\n                      ordered=True)\nsurvey_compensation_count = survey_compensation_count.sort_values(by='yearly_compensation_range', ascending = False)\n\n# if you earn more than 70,000 USD a year, you are over 80% of the participants\nsurvey_compensation_count['cum_sum_number_of_respondents'] = survey_compensation_count['number_of_respondents'].cumsum()\nsurvey_compensation_count['cum_perc_respondents'] = round(100*survey_compensation_count['cum_sum_number_of_respondents']\/survey_compensation_count['number_of_respondents'].sum(),1)\nsurvey_compensation_count['share'] = round(100 * survey_compensation_count['number_of_respondents'] \/ survey_compensation.shape[0],1)\n\n# define a user as \"top 20\" if his\/her yearly compensation is over 70,000 USD, otherwise \"bottom 80\"\nsurvey_compensation_count['20-80'] = np.where(survey_compensation_count['cum_perc_respondents'].astype(float) <= 80, 'Less than 70K', 'More than 70K')\nsurvey_compensation_count.groupby(['20-80']).sum()\n\n# add a new column in survey data - tell whether a user has high\/low compensation\nsurvey_compensation['compensation_segment'] = np.where(survey_compensation['Q25|What is your current yearly compensation (approximate $USD)?'].isin([\"70,000-79,999\",\n                                                                                                                          \"80,000-89,999\",\n                                                                                                                          \"90,000-99,999\",\n                                                                                                                          \"100,000-124,999\",\n                                                                                                                          \"125,000-149,999\",\n                                                                                                                          \"150,000-199,999\",\n                                                                                                                          \"200,000-249,999\",\n                                                                                                                          \"250,000-299,999\",\n                                                                                                                          \"300,000-499,999\",\n                                                                                                                          \"$500,000-999,999\",\n                                                                                                                          \">$1,000,000\"]), \n                                                                                                                          'More than 70K', 'Less than 70K')\n# number of participants answer the question\n# Q25|What is your current yearly compensation (approximate $USD)?\nnr_compensation = survey_compensation['respondent_id'].nunique()","2a156b76":"print(str(round(100 * nr_compensation\/nr_participants)) +\"%\" + \" of participants\" + \"(\" +str(nr_compensation)+\")\"+ \" answered the question - What is your current yearly compensation (approximate $USD)?\")","4d480dc4":"# yearly compensation distribution\nfig = make_subplots(rows=2, cols=1)\n\nfig.append_trace(go.Bar(\n    y=['% of participants answered the question'],\n    x=[41],\n    width = 0.5,\n    name='Not answered the yearly compensation question',\n    orientation='h',\n    hoverinfo='skip',\n    texttemplate=\"41%\",\n        textposition=\"inside\",\n        textfont_size = 20,\n        textangle=0,\n        textfont_color=\"black\",\n    marker=dict(\n        color='#f3f3f3',\n        line=dict(color='#f3f3f3', width=1)\n    ),\n), row=1, col=1)\n\nfig.append_trace(go.Bar(\n    y=['% of participants answered the question'],\n    x=[59],\n    width = 0.5,\n    name='Answered the yearly compensation question',\n    orientation='h',\n    hoverinfo='skip',\n    texttemplate=\"59%\",\n        textposition=\"inside\",\n        textfont_size = 20,\n        textangle=0,\n        textfont_color=\"black\",\n    marker=dict(\n        color='#cccccc',\n        line=dict(color='#cccccc', width=1)\n    ),\n), row=1, col=1)\n\nfig.append_trace(go.Bar(\n    y=['% of participants lie in compensation range'],\n    x=[41],\n    width = 0.5,\n    name='Earn less than 70k USD',\n    orientation='h',\n    hoverinfo='skip',\n    marker=dict(\n        color='rgba(0,0,0,0)',\n        line=dict(color='rgba(0,0,0,0)', width=1)\n    ),\n), row=2, col=1)\n\nfig.append_trace(go.Bar(\n    y=['% of participants lie in compensation range'],\n    x=[79*0.59],\n    width = 0.5,\n    name='Earn less than 70k USD',\n    orientation='h',\n    hoverinfo='skip',\n    texttemplate=\"79%\",\n        textposition=\"inside\",\n        textfont_size = 20,\n        textangle=0,\n        textfont_color=\"black\",\n    marker=dict(\n        color='#9fc5e8',\n        line=dict(color='#9fc5e8', width=1)\n    ),\n), row=2, col=1)\n\nfig.append_trace(go.Bar(\n    y=['% of participants lie in compensation range'],\n    x=[21*0.59],\n    width = 0.5,\n    name='Earn more than 70k USD',\n    orientation='h',\n    hoverinfo='skip',\n    texttemplate=\"21%\",\n        textposition=\"inside\",\n        textfont_size = 20,\n        textangle=0,\n        textfont_color=\"black\",\n    marker=dict(\n        color='#0b5394',\n        line=dict(color='#0b5394', width=1)\n    ),\n), row=2, col=1)\n\n\n\nfig.update_layout(height=400, \n                  width=680, \n                  margin = {'t':100,\n                           'b':100,\n                           'l':50,\n                           'r':50},\n                  barmode='stack',\n                  title_text=\"Yearly compensation of survey participants<br><sup>59% of 25,973 survey participants answered the Question 25 - <br>What is your current yearly compensation (approximate $USD)?<\/sup>\",\n                 showlegend=False,\n                  paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\nfig.update_xaxes(showgrid=False,\n                visible = False)\nfig.update_yaxes(showgrid=False,\n                visible = False)\n\nfig.add_annotation(text=\"21% earn MORE <br>than 70k USD a year\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1, y=0.46, showarrow=False)\n\nfig.add_annotation(text=\"79% earn LESS <br>than 70k USD a year\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.5, y=0.00, showarrow=False)\n\nfig.show()","363c5a90":"# unique question : Question number - Question content\nunique_questions = []\nfor q in survey_compensation.columns:\n    if 'Q' in q:\n        if '_Part' in q:\n            q_num = q.split(\"_Part\")[0] + \" - \" + q.split(\"|\")[1].split(\"- Selected Choice\")[0]\n            unique_questions.append(q_num)\n        elif '_OTHER' in q:\n            q_num = q.split(\"_OTHER\")[0] + \" - \" + q.split(\"|\")[1].split(\"- Selected Choice\")[0]\n            unique_questions.append(q_num)\n        else:\n            q_num = q.split(\"|\")[0] + \" - \" + q.split(\"|\")[1].split(\"- Selected Choice\")[0]\n            unique_questions.append(q_num)\n    else:\n        pass\nunique_questions = set(unique_questions)","9fc57985":"unique_questions = [\n    \"Q1 - What is your age (# years)?\",\n    \"Q2 - What is your gender? \",\n    \"Q3 - In which country do you currently reside?\",\n    \"Q4 - What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\",\n    \"Q5 - Select the title most similar to your current role (or most recent title if retired): \",\n    'Q6 - For how many years have you been writing code and\/or programming?',\n    'Q7 - What programming languages do you use on a regular basis? (Select all that apply) ',\n    'Q8 - What programming language would you recommend an aspiring data scientist to learn first? ',\n    \"Q9 - Which of the following integrated development environments (IDE's) do you use on a regular basis?  (Select all that apply) \",\n    'Q10 - Which of the following hosted notebook products do you use on a regular basis?  (Select all that apply) ',\n    'Q11 - What type of computing platform do you use most often for your data science projects? ',\n    'Q12 - Which types of specialized hardware do you use on a regular basis?  (Select all that apply) ',\n    'Q13 - Approximately how many times have you used a TPU (tensor processing unit)?',\n    'Q14 - What data visualization libraries or tools do you use on a regular basis?  (Select all that apply) ',\n    'Q15 - For how many years have you used machine learning methods?',\n    'Q16 - Which of the following machine learning frameworks do you use on a regular basis? (Select all that apply) ',\n    'Q17 - Which of the following ML algorithms do you use on a regular basis? (Select all that apply): ',\n    'Q18 - Which categories of computer vision methods do you use on a regular basis?  (Select all that apply) ',\n    'Q19 - Which of the following natural language processing (NLP) methods do you use on a regular basis?  (Select all that apply) ',\n    'Q20 - In what industry is your current employer\/contract (or your most recent employer if retired)? ',\n    'Q21 - What is the size of the company where you are employed?',\n    'Q22 - Approximately how many individuals are responsible for data science workloads at your place of business?',\n    'Q23 - Does your current employer incorporate machine learning methods into their business?',\n    'Q24 - Select any activities that make up an important part of your role at work: (Select all that apply) ',\n    #'Q25 - What is your current yearly compensation (approximate $USD)?',\n    'Q26 - Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?',\n    'Q27_A - Which of the following cloud computing platforms do you use on a regular basis? (Select all that apply) ',\n    #'Q27_B - Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years? ',\n    'Q28 - Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? ',\n    'Q29_A - Do you use any of the following cloud computing products on a regular basis? (Select all that apply) ',\n    #'Q29_B - In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products? (Select all that apply) ',\n    'Q30_A - Do you use any of the following data storage products on a regular basis? (Select all that apply) ',\n    #'Q30_B - In the next 2 years, do you hope to become more familiar with any of these specific data storage products? (Select all that apply) ',\n    'Q31_A - Do you use any of the following managed machine learning products on a regular basis? (Select all that apply) ',\n    #'Q31_B - In the next 2 years, do you hope to become more familiar with any of these managed machine learning products? (Select all that apply) ',\n    'Q32_A - Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis? (Select all that apply) ',\n    #'Q32_B - Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years? (Select all that apply) ',\n    'Q33 - Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? ',\n    'Q34_A - Which of the following business intelligence tools do you use on a regular basis? (Select all that apply) ',\n    #'Q34_B - Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years? (Select all that apply) ',\n    'Q35 - Which of the following business intelligence tools do you use most often? ',\n    'Q36_A - Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?  (Select all that apply) ',\n    #'Q36_B - Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?  (Select all that apply) ',\n    'Q37_A - Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?  (Select all that apply) ',\n    #'Q37_B - Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?  (Select all that apply) ',\n    'Q38_A - Do you use any tools to help manage machine learning experiments? (Select all that apply) ',\n    #'Q38_B - In the next 2 years, do you hope to become more familiar with any of these tools for managing ML experiments? (Select all that apply) ',\n    'Q39 - Where do you publicly share your data analysis or machine learning applications? (Select all that apply) ',\n    'Q40 - On which platforms have you begun or completed data science courses? (Select all that apply) ',\n    'Q41 - What is the primary tool that you use at work or school to analyze data? (Include text response) ',\n    'Q42 - Who\/what are your favorite media sources that report on data science topics? (Select all that apply) '\n]","5687d963":"ordered_questions = [\"Q1 - What is your age (# years)?\",\n                     \"Q4 - What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\",\n                     'Q6 - For how many years have you been writing code and\/or programming?',\n                     'Q13 - Approximately how many times have you used a TPU (tensor processing unit)?',\n                     'Q15 - For how many years have you used machine learning methods?',\n                     'Q21 - What is the size of the company where you are employed?',\n                     'Q22 - Approximately how many individuals are responsible for data science workloads at your place of business?',\n                     'Q23 - Does your current employer incorporate machine learning methods into their business?',\n                     'Q26 - Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'            \n                    ]\n\nnon_ordered_questions = [item for item in unique_questions if item not in ordered_questions]","eb829426":"def create_dataset(question):\n    question_vis = []\n    for col in survey_compensation.columns:\n        if question.split(\" - \")[1] in col:\n            question_vis.append(col)\n    question_vis.append('respondent_id')\n    question_vis.append('compensation_segment')\n    question_dataset = survey_compensation[question_vis]\n    \n    if \"(Select all that apply)\" in question:\n    # multiple choice question\n        question_aggregate = question_dataset.groupby(['compensation_segment']).count().reset_index()\n        question_aggregate = question_aggregate.iloc[:,:-1]\n        question_col = list(question_aggregate.iloc[:,1:].columns)\n        question_aggregate['sum'] = question_aggregate[question_col].sum(axis=1)\n        new_cols = []\n        for col in question_col:\n            new_col = col.split(' - ')[2]\n            new_cols.append(new_col)\n            question_aggregate[new_col] = round(100 * question_aggregate[col] \/ question_aggregate['sum'],1)\n        new_cols.append('compensation_segment')\n        question_dataset = question_aggregate[new_cols].T.reset_index()\n        dataset_vis = question_dataset.loc[question_dataset['index'] != 'compensation_segment'].rename(columns={'index': question, \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\n        dataset_vis['question'] = question\n        dataset_vis.columns = ['choice', 'Less than 70K', 'More than 70K','question']\n\n    else:\n        # single choice question\n        question_col = list(question_dataset.iloc[:,[0,-1]].columns)\n        aggregate_dataset = question_dataset.groupby(question_col).count().reset_index()\n        aggregate_dataset['nr_respondents_segment'] = aggregate_dataset.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\n        aggregate_dataset['share_of_total'] = round(100 * aggregate_dataset['respondent_id'] \/ aggregate_dataset['nr_respondents_segment'],1)\n        dataset_vis = aggregate_dataset.pivot( index=aggregate_dataset.columns[0],\n                                                                          columns='compensation_segment', \n                                                                          values='share_of_total').reset_index()\n        dataset_vis['question'] = question\n        dataset_vis.columns = ['choice', 'Less than 70K', 'More than 70K','question']\n\n\n\n    return dataset_vis","a46af429":"# create a dataset containing all the question and aggregated answers\ndfs = []\nfor question in unique_questions:\n    df = create_dataset(question)        \n    df = df.fillna(0)\n    if question == 'Q1 - What is your age (# years)?':\n         df.choice = pd.Categorical(df.choice, \n                      categories=['18-21',\n                                  '22-24',\n                                  '25-29',\n                                  '30-34',\n                                  '35-39',\n                                  '40-44',\n                                  '45-49',\n                                  '50-54',\n                                  '55-59',\n                                  '60-69',\n                                  '70+'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question == 'Q4 - What is the highest level of formal education that you have attained or plan to attain within the next 2 years?':\n         df.choice = pd.Categorical(df.choice, \n                      categories=['I prefer not to answer',\n                                  'No formal education past high school',\n                                  'Some college\/university study without earning a bachelor\u2019s degree',\n                                  'Bachelor\u2019s degree',\n                                  'Master\u2019s degree',\n                                  'Professional doctorate',\n                                  'Doctoral degree'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q6 - For how many years have you been writing code and\/or programming?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['I have never written code',\n                                  '< 1 years',\n                                  '1-3 years',\n                                  '3-5 years',\n                                  '5-10 years',\n                                  '10-20 years',\n                                  '20+ years'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q13 - Approximately how many times have you used a TPU (tensor processing unit)?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['Never', \n                                'Once',\n                                '2-5 times', \n                                '6-25 times', \n                                'More than 25 times'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q15 - For how many years have you used machine learning methods?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['I do not use machine learning methods',\n                                'Under 1 year'\n                                '1-2 years',\n                                '2-3 years',\n                                '3-4 years',\n                                '4-5 years',\n                                '5-10 years',\n                                '10-20 years',\n                                '20 or more years'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q21 - What is the size of the company where you are employed?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['0-49 employees',\n                                '50-249 employees',\n                                '250-999 employees',\n                                '1000-9,999 employees',\n                                '10,000 or more employees'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q22 - Approximately how many individuals are responsible for data science workloads at your place of business?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['0', \n                                '1-2', \n                                '3-4', \n                                '5-9',\n                                '10-14', \n                                '15-19', \n                                '20+'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q23 - Does your current employer incorporate machine learning methods into their business?':\n         df.choice = pd.Categorical(df.choice, \n                    categories=['I do not know',\n                                'No (we do not use ML methods)',\n                                'We are exploring ML methods (and may one day put a model into production)',\n                                'We use ML methods for generating insights (but do not put working models into production)',\n                                'We recently started using ML methods (i.e., models in production for less than 2 years)',\n                                'We have well established ML methods (i.e., models in production for more than 2 years)'],\n                      ordered=True)\n         df.sort_values('choice', inplace=True)\n    elif question ==  'Q26 - Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?':\n         df.choice = pd.Categorical(df.choice,categories=['$0 ($USD)',\n                                '$1-$99',\n                                '$100-$999',\n                                '$1000-$9,999',\n                                '$10,000-$99,999',\n                                '$100,000 or more ($USD)'],ordered=True)\n         df.sort_values('choice', inplace=True)\n    else:\n         df['diff'] = df['More than 70K'] - df['Less than 70K']\n         df.sort_values('diff', inplace=True)\n    dfs.append(df)\n\nresult = pd.concat(dfs)\n","a860ef3f":"#### data visualization\n# dropdown button\n# question\nquestions = unique_questions\nfig=go.Figure()\nquestion_plot_names = []\nquestion_plot_names_2 = []\nbuttons=[]\nshapes = {}\ndefault_state = \"Q1 - What is your age (# years)?\"\nfor question_name in questions:\n    dataset = result.loc[result['question'] == question_name]\n    \n    for i in range(dataset.shape[0]):\n        fig.add_shape(\n            type='line',\n            x0=dataset['Less than 70K'].iloc[i], \n            y0=dataset['choice'].iloc[i], \n            x1=dataset['More than 70K'].iloc[i], \n            y1=dataset['choice'].iloc[i],\n            line_color=\"#cccccc\",\n            visible=(question_name==default_state)\n        )\n    \n    #print(question_name, default_state)\n    fig.add_trace(go.Scatter(x=dataset[\"Less than 70K\"], \n                             y=dataset[\"choice\"], \n                             hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K chose <b>%{y}<\/b>',\n                             mode='markers',\n                             name = \"\",\n                             marker=dict(size=[10] * dataset.shape[0], color=[\"#DEBAE6\"] * dataset.shape[0]),\n                             visible=(question_name==default_state)\n                            ))\n    \n    fig.add_trace(go.Scatter(x=dataset[\"More than 70K\"], \n                             y=dataset[\"choice\"], \n                             hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K chose <b>%{y}<\/b>',\n                             mode='markers',\n                             name = \"\",\n                             marker=dict(size=[10] * dataset.shape[0],color=[\"#C54DFD\"] * dataset.shape[0]),\n                             visible=(question_name==default_state)))\n    shape_list = []\n    for i in range(dataset.shape[0]):\n        shape = dict(\n            type='line',\n            line=dict(color=\"#cccccc\"),\n            x0=dataset['Less than 70K'].iloc[i], \n            y0=dataset['choice'].iloc[i], \n            x1=dataset['More than 70K'].iloc[i], \n            y1=dataset['choice'].iloc[i]\n        )\n        shape_list.append(shape)\n\n    shapes[question_name] = shape_list\n    question_plot_names.extend([question_name]* 2) \n\nfor question_name in questions:\n    buttons.append(dict(method='update',\n                        label= \"          \" * 2 + question_name ,\n                        args = [{'visible': [question_name==r for r in question_plot_names]},\n                               #{\"title\":question_name},\n                               {\"shapes\": shapes[question_name]}]\n                       ))\n\n\n# Add dropdown menus to the figure\nfig.update_layout(showlegend=False, \n                  #title = 'Choose a question you are interested in',\n                  margin=dict(\n                      l=100, \n                      r=100, \n                      t=20, \n                      b=20\n                  ),\n                  updatemenus=[{\"buttons\": buttons, \n                                                  \"direction\": \"down\", \n                                                  \"active\": questions.index(default_state), \n                                                  \"showactive\": True,\n                                                  \"borderwidth\" : 0.9,\n                                                  \"x\": 0.75, \n                                                  \"y\": 1.1,\n                                                   \"xanchor\":\"center\"}],\n                  xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\n\nfig.show()","53231f3a":"# demographics dataset\ndemo_questions = []\ndemo_questions.append('respondent_id')\ndemo_questions.append('compensation_segment')\nfor col in survey_compensation.columns:\n    if col.split(\"|\")[0] in ('Q1','Q2','Q3','Q4'):\n        demo_questions.append(col)\n    else:\n        pass\n\ndemographics_data = survey_compensation[demo_questions]","bf788020":"# country\nsurvey_demographics_country = demographics_data.groupby(['compensation_segment',\n                                                         'Q3|In which country do you currently reside?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q3|In which country do you currently reside?',\n                                                                                                              'respondent_id']]\nsurvey_demographics_country['nr_respondents_segment'] = survey_demographics_country.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_demographics_country['share_of_total'] = round(100 * survey_demographics_country['respondent_id'] \/ survey_demographics_country['nr_respondents_segment'],1)\n\nsurvey_demographics_country_pivot = survey_demographics_country.pivot(index='Q3|In which country do you currently reside?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_demographics_country_pivot= survey_demographics_country_pivot.fillna(0)\nsurvey_demographics_country_pivot['diff'] = survey_demographics_country_pivot['More than 70K'] - survey_demographics_country_pivot['Less than 70K']\nsurvey_demographics_country_pivot = survey_demographics_country_pivot.sort_values(by = 'diff')\nsurvey_demographics_country_pivot = survey_demographics_country_pivot.replace('United States of America', 'U.S.')\nsurvey_demographics_country_pivot = survey_demographics_country_pivot.replace('United Kingdom of Great Britain and Northern Ireland', 'U.K.')\nsurvey_demographics_country_pivot = survey_demographics_country_pivot.replace('Iran, Islamic Republic of...', 'Iran')\nsurvey_demographics_country_pivot = survey_demographics_country_pivot.replace('I do not wish to disclose my location', 'Not disclosed')\n\n\n# visualization - country\nfig = go.Figure()\n\nfor i in range(survey_demographics_country_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_demographics_country_pivot['Less than 70K'].iloc[i], \n        y0=survey_demographics_country_pivot['Q3|In which country do you currently reside?'].iloc[i], \n        x1=survey_demographics_country_pivot['More than 70K'].iloc[i], \n        y1=survey_demographics_country_pivot['Q3|In which country do you currently reside?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_country_pivot['Less than 70K'],\n            y=survey_demographics_country_pivot['Q3|In which country do you currently reside?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_demographics_country_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_demographics_country_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K are residing in <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_country_pivot['More than 70K'],\n            y=survey_demographics_country_pivot['Q3|In which country do you currently reside?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_demographics_country_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_demographics_country_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K are residing in <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=1280, \n                  width=1280, \n                  barmode='stack',\n                  title_text=\"In which country do you currently reside?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you are living in the U.S., <br>you are most likely to earn over 70K USD than people live in the rest of the world.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95, y=0.935, showarrow=False)\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","227ef883":"# gender\nsurvey_demographics_gender = demographics_data.groupby(['compensation_segment',\n                                                         'Q2|What is your gender? - Selected Choice']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q2|What is your gender? - Selected Choice',\n                                                                                                              'respondent_id']]\nsurvey_demographics_gender['nr_respondents_segment'] = survey_demographics_gender.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_demographics_gender['share_of_total'] = round(100 * survey_demographics_gender['respondent_id'] \/ survey_demographics_gender['nr_respondents_segment'],1)\n\nsurvey_demographics_gender_pivot = survey_demographics_gender.pivot(index='Q2|What is your gender? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_demographics_gender_pivot= survey_demographics_gender_pivot.fillna(0)\nsurvey_demographics_gender_pivot['diff'] = survey_demographics_gender_pivot['More than 70K'] - survey_demographics_country_pivot['Less than 70K']\nsurvey_demographics_gender_pivot = survey_demographics_gender_pivot.sort_values(by = 'diff')\n\n# visualization - gender\nfig = go.Figure()\n\nfor i in range(survey_demographics_gender_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_demographics_gender_pivot['Less than 70K'].iloc[i], \n        y0=survey_demographics_gender_pivot['Q2|What is your gender? - Selected Choice'].iloc[i], \n        x1=survey_demographics_gender_pivot['More than 70K'].iloc[i], \n        y1=survey_demographics_gender_pivot['Q2|What is your gender? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_gender_pivot['Less than 70K'],\n            y=survey_demographics_gender_pivot['Q2|What is your gender? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_demographics_gender_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_demographics_gender_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_gender_pivot['More than 70K'],\n            y=survey_demographics_gender_pivot['Q2|What is your gender? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_demographics_gender_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_demographics_gender_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"What is your gender?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Men dominates the industry in absolute shares<br>And they are more likely to earn more than 70K USD than others<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95, y=0.935, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","aa0a2516":"# Age\nsurvey_demographics_age = demographics_data.groupby(['compensation_segment',\n                                                         'Q1|What is your age (# years)?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q1|What is your age (# years)?',\n                                                                                                              'respondent_id']]\nsurvey_demographics_age['nr_respondents_segment'] = survey_demographics_age.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_demographics_age['share_of_total'] = round(100 * survey_demographics_age['respondent_id'] \/ survey_demographics_age['nr_respondents_segment'],1)\n\nsurvey_demographics_age_pivot = survey_demographics_age.pivot(index='Q1|What is your age (# years)?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_demographics_age_pivot= survey_demographics_age_pivot.fillna(0)\nsurvey_demographics_age_pivot['diff'] = survey_demographics_age_pivot['More than 70K'] - survey_demographics_age_pivot['Less than 70K']\n\n# visualization - age\nfig = go.Figure()\n\nfor i in range(survey_demographics_age_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_demographics_age_pivot['Less than 70K'].iloc[i], \n        y0=survey_demographics_age_pivot['Q1|What is your age (# years)?'].iloc[i], \n        x1=survey_demographics_age_pivot['More than 70K'].iloc[i], \n        y1=survey_demographics_age_pivot['Q1|What is your age (# years)?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_age_pivot['Less than 70K'],\n            y=survey_demographics_age_pivot['Q1|What is your age (# years)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_demographics_age_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_demographics_age_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_age_pivot['More than 70K'],\n            y=survey_demographics_age_pivot['Q1|What is your age (# years)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_demographics_age_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_demographics_age_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"What is your age (# years)?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Over 30, chances of earning over 70K<br> starts to be higher than<br>earning less than 70K.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95, y=0.38, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","88697c4a":"# Education\ndemographics_data = demographics_data.replace('No formal education past high school', \"No Bachelor's degree\")\ndemographics_data = demographics_data.replace('Some college\/university study without earning a bachelor\u2019s degree', \"No Bachelor's degree\")\n\n\nsurvey_demographics_edu = demographics_data.groupby(['compensation_segment',\n                                                         'Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?',\n                                                                                                              'respondent_id']]\nsurvey_demographics_edu['nr_respondents_segment'] = survey_demographics_edu.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_demographics_edu['share_of_total'] = round(100 * survey_demographics_edu['respondent_id'] \/ survey_demographics_edu['nr_respondents_segment'],1)\n\nsurvey_demographics_edu_pivot = survey_demographics_edu.pivot(index='Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_demographics_edu_pivot= survey_demographics_edu_pivot.fillna(0)\nsurvey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] = pd.Categorical(survey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'], \n                      categories=[\"I prefer not to answer\",\n                                  \"No Bachelor's degree\",\n                                  #\"No formal education past high school\",\n                                  #\"Some college\/university study without earning a bachelor\u2019s degree\",\n                                  \"Bachelor\u2019s degree\",\n                                  \"Master\u2019s degree\",\n                                  \"Professional doctorate\",\n                                  \"Doctoral degree\"],\n                      ordered=True)\n\nsurvey_demographics_edu_pivot = survey_demographics_edu_pivot.sort_values(by='Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?')\n\n# visualization - education\nfig = go.Figure()\n\nfor i in range(survey_demographics_edu_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_demographics_edu_pivot['Less than 70K'].iloc[i], \n        y0=survey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].iloc[i], \n        x1=survey_demographics_edu_pivot['More than 70K'].iloc[i], \n        y1=survey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_edu_pivot['Less than 70K'],\n            y=survey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_demographics_edu_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_demographics_edu_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_demographics_edu_pivot['More than 70K'],\n            y=survey_demographics_edu_pivot['Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_demographics_edu_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_demographics_edu_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Higher academic degrees help you get higher pay with higher chance<br> But the difference between a Master and a Doctor isn't that much.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.45, y=0.58, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","21ebcff0":"# work dataset\nwork_questions = []\nwork_questions.append('respondent_id')\nwork_questions.append('compensation_segment')\nfor col in survey_compensation.columns:\n    for q in ('Q5','Q20','Q21','Q22','Q23','Q24'):\n        if q in col.split(\"|\")[0]:\n            work_questions.append(col)\n        else:\n            pass\n\nwork_data = survey_compensation[work_questions]","0965cebf":"# title\/role\nsurvey_work_title = work_data.groupby(['compensation_segment',\n                                     'Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice',\n                                                                                                              'respondent_id']]\nsurvey_work_title['nr_respondents_segment'] = survey_work_title.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_title['share_of_total'] = round(100 * survey_work_title['respondent_id'] \/ survey_work_title['nr_respondents_segment'],1)\n\nsurvey_work_title_pivot = survey_work_title.pivot(index='Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_work_title_pivot= survey_work_title_pivot.fillna(0)\nsurvey_work_title_pivot['diff'] = survey_work_title_pivot['More than 70K'] - survey_work_title_pivot['Less than 70K']\nsurvey_work_title_pivot = survey_work_title_pivot.sort_values(by='diff')\n# visualization - title\nfig = go.Figure()\n\nfor i in range(survey_work_title_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_title_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_title_pivot['Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].iloc[i], \n        x1=survey_work_title_pivot['More than 70K'].iloc[i], \n        y1=survey_work_title_pivot['Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_title_pivot['Less than 70K'],\n            y=survey_work_title_pivot['Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_title_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_title_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_title_pivot['More than 70K'],\n            y=survey_work_title_pivot['Q5|Select the title most similar to your current role (or most recent title if retired): - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_title_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_title_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q5|Select the title most similar to your current role\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Data scientists takes up most of  the participants<br>And they are most likely to earn more than 70K USD than others<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95, y=1.1, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","81ec09bb":"# activities - nr of activities\nQ24 = []\nQ24.append('compensation_segment')\nQ24.append('respondent_id')\nfor col in work_data.columns:\n    if 'Q24' in col:\n        Q24.append(col)\n    else:\n        pass\n\nQ24_compensation = survey_compensation[Q24]\nQ24_compensation['nr_activities'] = Q24_compensation[Q24].count(axis = 1) - 2\n\n# nr of acts\nsurvey_work_nrAct = Q24_compensation.groupby(['compensation_segment','nr_activities']).count().reset_index()[['compensation_segment',\n                                                                                                              'nr_activities',\n                                                                                                              'respondent_id']]\nsurvey_work_nrAct['nr_respondents_segment'] = survey_work_nrAct.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_nrAct['share_of_total'] = round(100 * survey_work_nrAct['respondent_id'] \/ survey_work_nrAct['nr_respondents_segment'],1)\n\nsurvey_work_nrAct_pivot = survey_work_nrAct.pivot(index='nr_activities', columns='compensation_segment', values='share_of_total').reset_index()\n#survey_work_nrAct_pivot['diff'] = survey_work_nrAct_pivot['More than 70K'] - survey_work_nrAct_pivot['Less than 70K']\nsurvey_work_nrAct_pivot = survey_work_nrAct_pivot.sort_values(by='nr_activities')","e307de9f":"# visualization - nr of activities\nfig = go.Figure()\n\nfor i in range(survey_work_nrAct_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_nrAct_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_nrAct_pivot['nr_activities'].iloc[i], \n        x1=survey_work_nrAct_pivot['More than 70K'].iloc[i], \n        y1=survey_work_nrAct_pivot['nr_activities'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_nrAct_pivot['Less than 70K'],\n            y=survey_work_nrAct_pivot['nr_activities'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_nrAct_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_nrAct_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_nrAct_pivot['More than 70K'],\n            y=survey_work_nrAct_pivot['nr_activities'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_nrAct_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_nrAct_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"How many activities do you do in your work\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you are responsible for three activities or more, <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.65, y=0.3, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","6fe5f0db":"# What single activity help you earn more?\nQ24_compensation_count = Q24_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q24_compensation_count.columns\nnew_cols = []\nfor col in Q24_compensation_count[cols].columns:\n    if 'Q24' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q24_compensation_count[new_col] = round(100 * Q24_compensation_count[col] \/ Q24_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ24_compensation_count_share = Q24_compensation_count[new_cols].T.reset_index()\nQ24_compensation_count_share_pivot = Q24_compensation_count_share.loc[Q24_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'Activity at work', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ24_compensation_count_share_pivot= Q24_compensation_count_share_pivot.fillna(0)\n\nQ24_compensation_count_share_pivot['diff'] = Q24_compensation_count_share_pivot['More than 70K'] - Q24_compensation_count_share_pivot['Less than 70K']\nQ24_compensation_count_share_pivot = Q24_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - one activity\nfig = go.Figure()\n\nfor i in range(Q24_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q24_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q24_compensation_count_share_pivot['Activity at work'].iloc[i], \n        x1=Q24_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q24_compensation_count_share_pivot['Activity at work'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q24_compensation_count_share_pivot['Less than 70K'],\n            y=Q24_compensation_count_share_pivot['Activity at work'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q24_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q24_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q24_compensation_count_share_pivot['More than 70K'],\n            y=Q24_compensation_count_share_pivot['Activity at work'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q24_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q24_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Select any activities that make up an important part of your role at work\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If your work is related<br> with machine learning, <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1.2, y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","70f1d459":"# Q23|Does your current employer incorporate machine learning methods into their business?\nsurvey_work_ml = work_data.groupby(['compensation_segment',\n                                     'Q23|Does your current employer incorporate machine learning methods into their business?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q23|Does your current employer incorporate machine learning methods into their business?',\n                                                                                                              'respondent_id']]\nsurvey_work_ml['nr_respondents_segment'] = survey_work_ml.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_ml['share_of_total'] = round(100 * survey_work_ml['respondent_id'] \/ survey_work_ml['nr_respondents_segment'],1)\n\nsurvey_work_ml_pivot = survey_work_ml.pivot(index='Q23|Does your current employer incorporate machine learning methods into their business?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_work_ml_pivot= survey_work_ml_pivot.fillna(0)\nsurvey_work_ml_pivot['diff'] = survey_work_ml_pivot['More than 70K'] - survey_work_ml_pivot['Less than 70K']\nsurvey_work_ml_pivot = survey_work_ml_pivot.sort_values(by='diff')\n\n# visualization - ML in the company\nfig = go.Figure()\n\nfor i in range(survey_work_ml_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_ml_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_ml_pivot['Q23|Does your current employer incorporate machine learning methods into their business?'].iloc[i], \n        x1=survey_work_ml_pivot['More than 70K'].iloc[i], \n        y1=survey_work_ml_pivot['Q23|Does your current employer incorporate machine learning methods into their business?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_ml_pivot['Less than 70K'],\n            y=survey_work_ml_pivot['Q23|Does your current employer incorporate machine learning methods into their business?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_ml_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_ml_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_ml_pivot['More than 70K'],\n            y=survey_work_ml_pivot['Q23|Does your current employer incorporate machine learning methods into their business?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_ml_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_ml_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q23|Does your current employer incorporate machine learning methods into their business?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"More mature your employer applies<br> machine learning into the business model,<br> more likely you earn more than 70K USD than others<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1.2, y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","f448c1bd":"# Q22|Approximately how many individuals are responsible for data science workloads at your place of business?\nsurvey_work_ds = work_data.groupby(['compensation_segment',\n                                     'Q22|Approximately how many individuals are responsible for data science workloads at your place of business?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q22|Approximately how many individuals are responsible for data science workloads at your place of business?',\n                                                                                                              'respondent_id']]\nsurvey_work_ds['nr_respondents_segment'] = survey_work_ds.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_ds['share_of_total'] = round(100 * survey_work_ds['respondent_id'] \/ survey_work_ds['nr_respondents_segment'],1)\n\nsurvey_work_ds_pivot = survey_work_ds.pivot(index='Q22|Approximately how many individuals are responsible for data science workloads at your place of business?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_work_ds_pivot= survey_work_ds_pivot.fillna(0)\nsurvey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'] = pd.Categorical(survey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'], \n                      categories=[\"0\",\n                                 \"1-2\",\n                                 \"3-4\",\n                                 \"5-9\",\n                                 \"10-14\",\n                                 \"15-19\",\n                                 \"20+\"],\n                      ordered=True)\n\n#survey_demographics_ds_pivot['diff'] = survey_demographics_ds_pivot['top 20'] - survey_demographics_ds_pivot['bottom 80']\nsurvey_work_ds_pivot = survey_work_ds_pivot.sort_values(by = 'Q22|Approximately how many individuals are responsible for data science workloads at your place of business?')","6269d24b":"# visualization - DS team in the company\nfig = go.Figure()\n\nfor i in range(survey_work_ds_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_ds_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'].iloc[i], \n        x1=survey_work_ds_pivot['More than 70K'].iloc[i], \n        y1=survey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_ds_pivot['Less than 70K'],\n            y=survey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_ds_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_ds_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_ds_pivot['More than 70K'],\n            y=survey_work_ds_pivot['Q22|Approximately how many individuals are responsible for data science workloads at your place of business?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_ds_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_ds_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q22|Approximately how many individuals are responsible for data science workloads at your place of business?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Join a company that has as many people working in the data science as possible\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95, y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","e438c9f9":"# 'Q21|What is the size of the company where you are employed?'\nsurvey_work_size = work_data.groupby(['compensation_segment',\n                                     'Q21|What is the size of the company where you are employed?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q21|What is the size of the company where you are employed?',\n                                                                                                              'respondent_id']]\nsurvey_work_size['nr_respondents_segment'] = survey_work_size.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_size['share_of_total'] = round(100 * survey_work_size['respondent_id'] \/ survey_work_size['nr_respondents_segment'],1)\n\nsurvey_work_size_pivot = survey_work_size.pivot(index='Q21|What is the size of the company where you are employed?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_work_size_pivot= survey_work_size_pivot.fillna(0)\nsurvey_work_size_pivot['Q21|What is the size of the company where you are employed?'] = pd.Categorical(survey_work_size_pivot['Q21|What is the size of the company where you are employed?'], \n                      categories=[\"0-49 employees\",\n                                 \"50-249 employees\",\n                                 \"250-999 employees\",\n                                 \"1000-9,999 employees\",\n                                 \"10,000 or more employees\"],\n                      ordered=True)\n#survey_demographics_ds_pivot['diff'] = survey_demographics_ds_pivot['top 20'] - survey_demographics_ds_pivot['bottom 80']\nsurvey_work_size_pivot = survey_work_size_pivot.sort_values(by = 'Q21|What is the size of the company where you are employed?')","d8e34928":"# visualization - size\nfig = go.Figure()\n\nfor i in range(survey_work_size_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_size_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_size_pivot['Q21|What is the size of the company where you are employed?'].iloc[i], \n        x1=survey_work_size_pivot['More than 70K'].iloc[i], \n        y1=survey_work_size_pivot['Q21|What is the size of the company where you are employed?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_size_pivot['Less than 70K'],\n            y=survey_work_size_pivot['Q21|What is the size of the company where you are employed?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_size_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_size_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_size_pivot['More than 70K'],\n            y=survey_work_size_pivot['Q21|What is the size of the company where you are employed?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_size_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_size_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q21|What is the size of the company where you are employed?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"The bigger the company, the more money you would be paid.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.5, y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","93bff3ff":"# 'Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice'\nsurvey_work_industry = work_data.groupby(['compensation_segment',\n                                     'Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice',\n                                                                                                              'respondent_id']]\nsurvey_work_industry['nr_respondents_segment'] = survey_work_industry.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_work_industry['share_of_total'] = round(100 * survey_work_industry['respondent_id'] \/ survey_work_industry['nr_respondents_segment'],1)\n\nsurvey_work_industry_pivot = survey_work_industry.pivot(index='Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_work_industry_pivot= survey_work_industry_pivot.fillna(0)\nsurvey_work_industry_pivot['diff'] = survey_work_industry_pivot['More than 70K'] - survey_work_industry_pivot['Less than 70K']\nsurvey_work_industry_pivot = survey_work_industry_pivot.sort_values(by = 'diff')\n# visualization - industry\nfig = go.Figure()\n\nfor i in range(survey_work_industry_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_work_industry_pivot['Less than 70K'].iloc[i], \n        y0=survey_work_industry_pivot['Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice'].iloc[i], \n        x1=survey_work_industry_pivot['More than 70K'].iloc[i], \n        y1=survey_work_industry_pivot['Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_work_industry_pivot['Less than 70K'],\n            y=survey_work_industry_pivot['Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_work_industry_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_work_industry_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_work_industry_pivot['More than 70K'],\n            y=survey_work_industry_pivot['Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_work_industry_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_work_industry_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q20|In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Medical\/Pharmaceutical and Accounting\/Finance are high paid industry.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1, y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"Computers\/Technology take up the most amount of participants <br> and it has low\/high paid on either end.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1, y=0.45, showarrow=False)\n\nfig.add_annotation(text=\"Acadimics\/Education has the highest amount people who earned less than 70K.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1, y=0.1, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","f6147550":"# Q6: For how many years have you been writing code and\/or programming?\n# Q7: What programming languages do you use on a regular basis? (Select all that apply)\n# Q8: What programming language would you recommend an aspiring data scientist to learn first?\n# Q15: For how many years have you used machine learning methods?\n# Q16: Which of the following machine learning frameworks do you use on a regular basis? (Select all that apply)\n# Q17: Which of the following ML algorithms do you use on a regular basis? (Select all that apply):\n# Q18: Which categories of computer vision methods do you use on a regular basis? (Select all that apply)\n# Q19: Which of the following natural language processing (NLP) methods do you use on a regular basis? (Select all that apply)\n# Q39: Where do you publicly share or deploy your data analysis or machine learning applications? (Select all that apply)\n# Q40: On which platforms have you begun or completed data science courses? (Select all that apply)\n# Q42: Who\/what are your favorite media sources that report on data science topics? (Select all that apply)","d0435113":"# skill\/knowledge dataset\nskill_knowledge_questions = []\nskill_knowledge_questions.append('respondent_id')\nskill_knowledge_questions.append('compensation_segment')\nfor col in survey_compensation.columns:\n    for q in ('Q6','Q7','Q8','Q15','Q16','Q17','Q18','Q19','Q39','Q40','Q42'):\n        if q in col.split(\"|\")[0]:\n            skill_knowledge_questions.append(col)\n        else:\n            pass\n\nskill_knowledge_data = survey_compensation[skill_knowledge_questions]","136032c3":"# Q6: For how many years have you been writing code and\/or programming?\nsurvey_skill_knowledge_pro_year = skill_knowledge_data.groupby(['compensation_segment',\n                                                         'Q6|For how many years have you been writing code and\/or programming?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q6|For how many years have you been writing code and\/or programming?',\n                                                                                                              'respondent_id']]\nsurvey_skill_knowledge_pro_year['nr_respondents_segment'] = survey_skill_knowledge_pro_year.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_skill_knowledge_pro_year['share_of_total'] = round(100 * survey_skill_knowledge_pro_year['respondent_id'] \/ survey_skill_knowledge_pro_year['nr_respondents_segment'],1)\n\nsurvey_skill_knowledge_pro_year_pivot = survey_skill_knowledge_pro_year.pivot(index='Q6|For how many years have you been writing code and\/or programming?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_skill_knowledge_pro_year_pivot= survey_skill_knowledge_pro_year_pivot.fillna(0)\nsurvey_skill_knowledge_pro_year_pivot['diff'] = survey_skill_knowledge_pro_year_pivot['More than 70K'] - survey_skill_knowledge_pro_year_pivot['Less than 70K']\nsurvey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'] = pd.Categorical(survey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'], \n                      categories=[\"I have never written code\",\n                                  \"< 1 years\",\n                                  \"1-3 years\",\n                                  \"3-5 years\",\n                                  \"5-10 years\",\n                                 \"10-20 years\",\n                                 \"20+ years\"],\n                      ordered=True)\nsurvey_skill_knowledge_pro_year_pivot = survey_skill_knowledge_pro_year_pivot.sort_values(by = 'Q6|For how many years have you been writing code and\/or programming?')\n\n# visualization - year of programming\nfig = go.Figure()\n\nfor i in range(survey_skill_knowledge_pro_year_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_skill_knowledge_pro_year_pivot['Less than 70K'].iloc[i], \n        y0=survey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'].iloc[i], \n        x1=survey_skill_knowledge_pro_year_pivot['More than 70K'].iloc[i], \n        y1=survey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_knowledge_pro_year_pivot['Less than 70K'],\n            y=survey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_skill_knowledge_pro_year_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_skill_knowledge_pro_year_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_knowledge_pro_year_pivot['More than 70K'],\n            y=survey_skill_knowledge_pro_year_pivot['Q6|For how many years have you been writing code and\/or programming?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_skill_knowledge_pro_year_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_skill_knowledge_pro_year_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q6|For how many years have you been writing code and\/or programming?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"The longer years you wrote code <br> the more you likely to be paid high.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.05, y=0.65, showarrow=False)\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","e6100331":"# activities - nr of languages\nQ7 = []\nQ7.append('compensation_segment')\nQ7.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q7' in col:\n        Q7.append(col)\n    else:\n        pass\n\nQ7_compensation = survey_compensation[Q7]\nQ7_compensation['nr_prog_langs'] = Q7_compensation[Q7].count(axis = 1) - 2\n\n# nr of languages\nsurvey_skill_nrLan = Q7_compensation.groupby(['compensation_segment','nr_prog_langs']).count().reset_index()[['compensation_segment',\n                                                                                                              'nr_prog_langs',\n                                                                                                              'respondent_id']]\nsurvey_skill_nrLan['nr_respondents_segment'] = survey_skill_nrLan.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_skill_nrLan['share_of_total'] = round(100 * survey_skill_nrLan['respondent_id'] \/ survey_skill_nrLan['nr_respondents_segment'],1)\n\nnr_prog_langs_pivot = survey_skill_nrLan.pivot(index='nr_prog_langs', columns='compensation_segment', values='share_of_total').reset_index()\n#survey_work_nrAct_pivot['diff'] = survey_work_nrAct_pivot['More than 70K'] - survey_work_nrAct_pivot['Less than 70K']\nnr_prog_langs_pivot = nr_prog_langs_pivot.fillna(0)\nnr_prog_langs_pivot = nr_prog_langs_pivot.sort_values(by='nr_prog_langs')","11e7dc24":"# visualization - nr of programming languages\nfig = go.Figure()\n\nfor i in range(nr_prog_langs_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=nr_prog_langs_pivot['Less than 70K'].iloc[i], \n        y0=nr_prog_langs_pivot['nr_prog_langs'].iloc[i], \n        x1=nr_prog_langs_pivot['More than 70K'].iloc[i], \n        y1=nr_prog_langs_pivot['nr_prog_langs'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=nr_prog_langs_pivot['Less than 70K'],\n            y=nr_prog_langs_pivot['nr_prog_langs'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * nr_prog_langs_pivot.shape[0],\n                color=[\"#DEBAE6\"] * nr_prog_langs_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=nr_prog_langs_pivot['More than 70K'],\n            y=nr_prog_langs_pivot['nr_prog_langs'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * nr_prog_langs_pivot.shape[0],\n                color=[\"#C54DFD\"] * nr_prog_langs_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"How many programming languages do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you use two programming languages or more, <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.65, y=0.3, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","7e6b677c":"# What single language help you earn more?\nQ7_compensation_count = Q7_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q7_compensation_count.columns\nnew_cols = []\nfor col in Q7_compensation_count[cols].columns:\n    if 'Q7' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q7_compensation_count[new_col] = round(100 * Q7_compensation_count[col] \/ Q7_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ7_compensation_count_share = Q7_compensation_count[new_cols].T.reset_index()\nQ7_compensation_count_share_pivot = Q7_compensation_count_share.loc[Q7_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'Programming Language', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ7_compensation_count_share_pivot= Q7_compensation_count_share_pivot.fillna(0)\n\nQ7_compensation_count_share_pivot['diff'] = Q7_compensation_count_share_pivot['More than 70K'] - Q7_compensation_count_share_pivot['Less than 70K']\nQ7_compensation_count_share_pivot = Q7_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - one activity\nfig = go.Figure()\n\nfor i in range(Q7_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q7_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q7_compensation_count_share_pivot['Programming Language'].iloc[i], \n        x1=Q7_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q7_compensation_count_share_pivot['Programming Language'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q7_compensation_count_share_pivot['Less than 70K'],\n            y=Q7_compensation_count_share_pivot['Programming Language'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q7_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q7_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q7_compensation_count_share_pivot['More than 70K'],\n            y=Q7_compensation_count_share_pivot['Programming Language'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q7_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q7_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"What programming language do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you use Bash, SQL or R <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.8 , y=1, showarrow=False)\n\nfig.add_annotation(text=\"Python is the most used language.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.6, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","b0d837c2":"#'Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice',\nsurvey_skill_language_recommend = skill_knowledge_data.groupby(['compensation_segment',\n                                     'Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice',\n                                                                                                              'respondent_id']]\nsurvey_skill_language_recommend['nr_respondents_segment'] = survey_skill_language_recommend.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_skill_language_recommend['share_of_total'] = round(100 * survey_skill_language_recommend['respondent_id'] \/ survey_skill_language_recommend['nr_respondents_segment'],1)\n\nsurvey_skill_language_recommend_pivot = survey_skill_language_recommend.pivot(index='Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_skill_language_recommend_pivot= survey_skill_language_recommend_pivot.fillna(0)\nsurvey_skill_language_recommend_pivot['diff'] = survey_skill_language_recommend_pivot['More than 70K'] - survey_work_industry_pivot['Less than 70K']\nsurvey_skill_language_recommend_pivot = survey_skill_language_recommend_pivot.sort_values(by = 'diff')\n# visualization - recommend language\nfig = go.Figure()\n\nfor i in range(survey_skill_language_recommend_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_skill_language_recommend_pivot['Less than 70K'].iloc[i], \n        y0=survey_skill_language_recommend_pivot['Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].iloc[i], \n        x1=survey_skill_language_recommend_pivot['More than 70K'].iloc[i], \n        y1=survey_skill_language_recommend_pivot['Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_language_recommend_pivot['Less than 70K'],\n            y=survey_skill_language_recommend_pivot['Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_skill_language_recommend_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_skill_language_recommend_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_language_recommend_pivot['More than 70K'],\n            y=survey_skill_language_recommend_pivot['Q8|What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_skill_language_recommend_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_skill_language_recommend_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q8|What programming language would you recommend an aspiring data scientist to learn first?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"Python is still the most recommended, <br>though fewer high paid people in this group.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.85, y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"SQL and R are preffered by more high paid people\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.2, y=0.8, showarrow=False)\n\nfig.add_annotation(text=\"Only a few amount of people recommend <br>people learn Bash as the first language<br>Is it because its difficulty?\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.2, y=0.10, showarrow=False)\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","0acd77fb":"#       'Q15|For how many years have you used machine learning methods?'\n# Q6: For how many years have you been writing code and\/or programming?\nsurvey_skill_knowledge_ml_year = skill_knowledge_data.groupby(['compensation_segment',\n                                                         'Q15|For how many years have you used machine learning methods?']).count().reset_index()[[\n                                                                                                              'compensation_segment',\n                                                                                                              'Q15|For how many years have you used machine learning methods?',\n                                                                                                              'respondent_id']]\nsurvey_skill_knowledge_ml_year['nr_respondents_segment'] = survey_skill_knowledge_ml_year.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nsurvey_skill_knowledge_ml_year['share_of_total'] = round(100 * survey_skill_knowledge_ml_year['respondent_id'] \/ survey_skill_knowledge_ml_year['nr_respondents_segment'],1)\n\nsurvey_skill_knowledge_ml_year_pivot = survey_skill_knowledge_ml_year.pivot(index='Q15|For how many years have you used machine learning methods?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nsurvey_skill_knowledge_ml_year_pivot= survey_skill_knowledge_ml_year_pivot.fillna(0)\nsurvey_skill_knowledge_ml_year_pivot['diff'] = survey_skill_knowledge_ml_year_pivot['More than 70K'] - survey_skill_knowledge_ml_year_pivot['Less than 70K']\nsurvey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'] = pd.Categorical(survey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'], \n                      categories=['I do not use machine learning methods',\n                                  'Under 1 year',\n                                  \"1-2 years\",\n                                  \"2-3 years\",\n                                  \"3-4 years\",\n                                 \"4-5 years\",\n                                 \"5-10 years\",\n                                 \"10-20 years\",\n                                 \"20 or more years\"],                                                                                                                   \n                      ordered=True)\nsurvey_skill_knowledge_ml_year_pivot = survey_skill_knowledge_ml_year_pivot.sort_values(by = 'Q15|For how many years have you used machine learning methods?')\n\n# visualization - year of ML\nfig = go.Figure()\n\nfor i in range(survey_skill_knowledge_ml_year_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=survey_skill_knowledge_ml_year_pivot['Less than 70K'].iloc[i], \n        y0=survey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'].iloc[i], \n        x1=survey_skill_knowledge_ml_year_pivot['More than 70K'].iloc[i], \n        y1=survey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_knowledge_ml_year_pivot['Less than 70K'],\n            y=survey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * survey_skill_knowledge_ml_year_pivot.shape[0],\n                color=[\"#DEBAE6\"] * survey_skill_knowledge_ml_year_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=survey_skill_knowledge_ml_year_pivot['More than 70K'],\n            y=survey_skill_knowledge_ml_year_pivot['Q15|For how many years have you used machine learning methods?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * survey_skill_knowledge_ml_year_pivot.shape[0],\n                color=[\"#C54DFD\"] * survey_skill_knowledge_ml_year_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q15|For how many years have you used machine learning methods?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"The longer years you use machine learning methods, <br> the more you likely to be paid high.<br> At least three years experience is competitive\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.55, y=0.5, showarrow=False)\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","8c6945ae":"# 'Q16_Part_1|Which of the following machine learning frameworks do you use on a regular basis? (Select all that apply)'\n# activities - nr of languages\nQ16 = []\nQ16.append('compensation_segment')\nQ16.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q16' in col:\n        Q16.append(col)\n    else:\n        pass\n\nQ16_compensation = survey_compensation[Q16]\nQ16_compensation_count = Q16_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q16_compensation_count.columns\nnew_cols = []\nfor col in Q16_compensation_count[cols].columns:\n    if 'Q16' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q16_compensation_count[new_col] = round(100 * Q16_compensation_count[col] \/ Q16_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ16_compensation_count_share = Q16_compensation_count[new_cols].T.reset_index()\nQ16_compensation_count_share_pivot = Q16_compensation_count_share.loc[Q16_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'frameworks', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ16_compensation_count_share_pivot= Q16_compensation_count_share_pivot.fillna(0)\n\nQ16_compensation_count_share_pivot['diff'] = Q16_compensation_count_share_pivot['More than 70K'] - Q16_compensation_count_share_pivot['Less than 70K']\nQ16_compensation_count_share_pivot = Q16_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - one activity\nfig = go.Figure()\n\nfor i in range(Q16_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q16_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q16_compensation_count_share_pivot['frameworks'].iloc[i], \n        x1=Q16_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q16_compensation_count_share_pivot['frameworks'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q16_compensation_count_share_pivot['Less than 70K'],\n            y=Q16_compensation_count_share_pivot['frameworks'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q16_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q16_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q16_compensation_count_share_pivot['More than 70K'],\n            y=Q16_compensation_count_share_pivot['frameworks'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q16_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q16_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"What machine learning framework do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you use Xgboost, Scikit-learn or LightGBM <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=1, showarrow=False)\n\nfig.add_annotation(text=\"Scikit-learn is the most used language.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95 , y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","8f5c98f8":"# 'Q17_Part_1|Which of the following ML algorithms do you use on a regular basis? (Select all that apply)',\n# What are these algorithms?\nQ17 = []\nQ17.append('compensation_segment')\nQ17.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q17' in col:\n        Q17.append(col)\n    else:\n        pass\n\nQ17_compensation = survey_compensation[Q17]\nQ17_compensation_count = Q17_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q17_compensation_count.columns\nnew_cols = []\nfor col in Q17_compensation_count[cols].columns:\n    if 'Q17' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q17_compensation_count[new_col] = round(100 * Q17_compensation_count[col] \/ Q17_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ17_compensation_count_share = Q17_compensation_count[new_cols].T.reset_index()\nQ17_compensation_count_share_pivot = Q17_compensation_count_share.loc[Q17_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'algorithm', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ17_compensation_count_share_pivot= Q17_compensation_count_share_pivot.fillna(0)\n\nQ17_compensation_count_share_pivot['diff'] = Q17_compensation_count_share_pivot['More than 70K'] - Q17_compensation_count_share_pivot['Less than 70K']\nQ17_compensation_count_share_pivot = Q17_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - Algorithm\nfig = go.Figure()\n\nfor i in range(Q17_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q17_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q17_compensation_count_share_pivot['algorithm'].iloc[i], \n        x1=Q17_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q17_compensation_count_share_pivot['algorithm'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q17_compensation_count_share_pivot['Less than 70K'],\n            y=Q17_compensation_count_share_pivot['algorithm'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q17_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q17_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q17_compensation_count_share_pivot['More than 70K'],\n            y=Q17_compensation_count_share_pivot['algorithm'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q17_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q17_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"What machine learning algorithm do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\nfig.add_annotation(text=\"If you use Gradient Boosting Machine or Decision Trees <br> or Linear or Logistic Regression <br> you are more likely to be one of the high earners.<\/br>\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.1 , y=1, showarrow=False)\n\nfig.add_annotation(text=\"Those three are also most used algorithm.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.95 , y=0.75, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","ed6b5c25":"# 'Q18 Which categories of computer vision methods do you use on a regular basis?',\nQ18 = []\nQ18.append('compensation_segment')\nQ18.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q18' in col:\n        Q18.append(col)\n    else:\n        pass\n\nQ18_compensation = survey_compensation[Q18]\nQ18_compensation_count = Q18_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q18_compensation_count.columns\nnew_cols = []\nfor col in Q18_compensation_count[cols].columns:\n    if 'Q18' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q18_compensation_count[new_col] = round(100 * Q18_compensation_count[col] \/ Q18_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ18_compensation_count_share = Q18_compensation_count[new_cols].T.reset_index()\nQ18_compensation_count_share_pivot = Q18_compensation_count_share.loc[Q18_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'compVision', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ18_compensation_count_share_pivot= Q18_compensation_count_share_pivot.fillna(0)\n\nQ18_compensation_count_share_pivot['diff'] = Q18_compensation_count_share_pivot['More than 70K'] - Q18_compensation_count_share_pivot['Less than 70K']\nQ18_compensation_count_share_pivot = Q18_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - Computer vision\nfig = go.Figure()\n\nfor i in range(Q18_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q18_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q18_compensation_count_share_pivot['compVision'].iloc[i], \n        x1=Q18_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q18_compensation_count_share_pivot['compVision'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q18_compensation_count_share_pivot['Less than 70K'],\n            y=Q18_compensation_count_share_pivot['compVision'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q18_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q18_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q18_compensation_count_share_pivot['More than 70K'],\n            y=Q18_compensation_count_share_pivot['compVision'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q18_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q18_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Which categories of computer vision methods do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"High paid people are less <br>likely to work in the computer vision?\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1.1 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","0c0e29b2":"# 'Q19: Which of the following natural language processing (NLP) methods do you use on a regular basis?',\nQ19 = []\nQ19.append('compensation_segment')\nQ19.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q19' in col:\n        Q19.append(col)\n    else:\n        pass\n\nQ19_compensation = survey_compensation[Q19]\nQ19_compensation_count = Q19_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q19_compensation_count.columns\nnew_cols = []\nfor col in Q19_compensation_count[cols].columns:\n    if 'Q19' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q19_compensation_count[new_col] = round(100 * Q19_compensation_count[col] \/ Q19_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ19_compensation_count_share = Q19_compensation_count[new_cols].T.reset_index()\nQ19_compensation_count_share_pivot = Q19_compensation_count_share.loc[Q19_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'NLP', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ19_compensation_count_share_pivot= Q19_compensation_count_share_pivot.fillna(0)\n\nQ19_compensation_count_share_pivot['diff'] = Q19_compensation_count_share_pivot['More than 70K'] - Q19_compensation_count_share_pivot['Less than 70K']\nQ19_compensation_count_share_pivot = Q19_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - Computer vision\nfig = go.Figure()\n\nfor i in range(Q19_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q19_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q19_compensation_count_share_pivot['NLP'].iloc[i], \n        x1=Q19_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q19_compensation_count_share_pivot['NLP'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q19_compensation_count_share_pivot['Less than 70K'],\n            y=Q19_compensation_count_share_pivot['NLP'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q19_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q19_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q19_compensation_count_share_pivot['More than 70K'],\n            y=Q19_compensation_count_share_pivot['NLP'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q19_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q19_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Which categories of NLP methods do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"Transformer language models and <br>Word embeddings\/vectors are paid higher if you use\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.2 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","8829dfa8":"# 'Q39_Part_1|Where do you publicly share your data analysis or machine learning applications? (Select all that apply) ',\nQ39 = []\nQ39.append('compensation_segment')\nQ39.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q39' in col:\n        Q39.append(col)\n    else:\n        pass\n\nQ39_compensation = survey_compensation[Q39]\nQ39_compensation_count = Q39_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q39_compensation_count.columns\nnew_cols = []\nfor col in Q39_compensation_count[cols].columns:\n    if 'Q39' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q39_compensation_count[new_col] = round(100 * Q39_compensation_count[col] \/ Q39_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ39_compensation_count_share = Q39_compensation_count[new_cols].T.reset_index()\nQ39_compensation_count_share_pivot = Q39_compensation_count_share.loc[Q39_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'publicShare', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ39_compensation_count_share_pivot= Q39_compensation_count_share_pivot.fillna(0)\n\nQ39_compensation_count_share_pivot['diff'] = Q39_compensation_count_share_pivot['More than 70K'] - Q39_compensation_count_share_pivot['Less than 70K']\nQ39_compensation_count_share_pivot = Q39_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - public share\nfig = go.Figure()\n\nfor i in range(Q39_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q39_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q39_compensation_count_share_pivot['publicShare'].iloc[i], \n        x1=Q39_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q39_compensation_count_share_pivot['publicShare'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q39_compensation_count_share_pivot['Less than 70K'],\n            y=Q39_compensation_count_share_pivot['publicShare'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q39_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q39_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q39_compensation_count_share_pivot['More than 70K'],\n            y=Q39_compensation_count_share_pivot['publicShare'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q39_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q39_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Where do you publicly share your data analysis or machine learning applications?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"Higher paid people are less likely to share their work\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.1 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","42bbe58f":"# 'Q40_Part_10|On which platforms have you begun or completed data science courses? (Select all that apply) \nQ40 = []\nQ40.append('compensation_segment')\nQ40.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q40' in col:\n        Q40.append(col)\n    else:\n        pass\n\nQ40_compensation = survey_compensation[Q40]\nQ40_compensation_count = Q40_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q40_compensation_count.columns\nnew_cols = []\nfor col in Q40_compensation_count[cols].columns:\n    if 'Q40' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q40_compensation_count[new_col] = round(100 * Q40_compensation_count[col] \/ Q40_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ40_compensation_count_share = Q40_compensation_count[new_cols].T.reset_index()\nQ40_compensation_count_share_pivot = Q40_compensation_count_share.loc[Q40_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'courses', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ40_compensation_count_share_pivot= Q40_compensation_count_share_pivot.fillna(0)\n\nQ40_compensation_count_share_pivot['diff'] = Q40_compensation_count_share_pivot['More than 70K'] - Q40_compensation_count_share_pivot['Less than 70K']\nQ40_compensation_count_share_pivot = Q40_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - courses\nfig = go.Figure()\n\nfor i in range(Q40_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q40_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q40_compensation_count_share_pivot['courses'].iloc[i], \n        x1=Q40_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q40_compensation_count_share_pivot['courses'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q40_compensation_count_share_pivot['Less than 70K'],\n            y=Q40_compensation_count_share_pivot['courses'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q40_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q40_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q40_compensation_count_share_pivot['More than 70K'],\n            y=Q40_compensation_count_share_pivot['courses'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q40_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q40_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"On which platforms have you begun or completed data science courses?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"lifelong learning is important for people work in this area.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.1 , y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"University learning is still essential if you want to earn more\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","6ee59686":"# Q42_Part_1|Who\/what are your favorite media sources that report on data science topics?'\n\nQ42 = []\nQ42.append('compensation_segment')\nQ42.append('respondent_id')\nfor col in skill_knowledge_data.columns:\n    if 'Q42' in col:\n        Q42.append(col)\n    else:\n        pass\n\nQ42_compensation = survey_compensation[Q42]\nQ42_compensation_count = Q42_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q42_compensation_count.columns\nnew_cols = []\nfor col in Q42_compensation_count[cols].columns:\n    if 'Q42' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q42_compensation_count[new_col] = round(100 * Q42_compensation_count[col] \/ Q42_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ42_compensation_count_share = Q42_compensation_count[new_cols].T.reset_index()\nQ42_compensation_count_share_pivot = Q42_compensation_count_share.loc[Q42_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'media', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ42_compensation_count_share_pivot= Q42_compensation_count_share_pivot.fillna(0)\n\nQ42_compensation_count_share_pivot['diff'] = Q42_compensation_count_share_pivot['More than 70K'] - Q42_compensation_count_share_pivot['Less than 70K']\nQ42_compensation_count_share_pivot = Q42_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - courses\nfig = go.Figure()\n\nfor i in range(Q42_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q42_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q42_compensation_count_share_pivot['media'].iloc[i], \n        x1=Q42_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q42_compensation_count_share_pivot['media'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q42_compensation_count_share_pivot['Less than 70K'],\n            y=Q42_compensation_count_share_pivot['media'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q42_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q42_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q42_compensation_count_share_pivot['More than 70K'],\n            y=Q42_compensation_count_share_pivot['media'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q42_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q42_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Who\/what are your favorite media sources that report on data science topics?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"Popularity in reading blogs is aligned with publicly share source\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.1 , y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"Reading Journal publications is related with degree.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","b3158d4d":"# too\/product dataset\ntool_product_questions = []\ntool_product_questions.append('respondent_id')\ntool_product_questions.append('compensation_segment')\nfor col in survey_compensation.columns:\n    for q in ('Q9','Q10','Q11',\n              'Q12','Q13','Q14',\n              'Q26','Q27_A','Q28',\n              'Q29_A','Q30_A','Q31_A',\n              'Q32_A','Q33','Q34_A',\n              'Q35','Q36_A','Q37_A',\n              'Q38_A','Q41'):\n        if q in col.split(\"|\")[0]:\n            tool_product_questions.append(col)\n        else:\n            pass\n\ntool_product_data = survey_compensation[tool_product_questions]","977777b1":"# Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?\ninvest = tool_product_data.groupby(['compensation_segment',\n                                                  'Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?']).count().reset_index()[['compensation_segment',\n                                                  'Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?',\n                                                  'respondent_id']]\n\ninvest['nr_respondents_segment'] = invest.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\ninvest['share_of_total'] = round(100 * invest['respondent_id'] \/ invest['nr_respondents_segment'],1)\n\ninvest_pivot = invest.pivot(index='Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\ninvest_pivot= invest_pivot.fillna(0)\ninvest_pivot['diff'] = invest_pivot['More than 70K'] - invest_pivot['Less than 70K']\ninvest_pivot = invest_pivot.sort_values(by = 'diff')\n\ninvest_pivot = invest_pivot.replace('$0 ($USD)','0')\ninvest_pivot = invest_pivot.replace('$1-$99','1-99')\ninvest_pivot = invest_pivot.replace('$100-$999','100-999')\ninvest_pivot = invest_pivot.replace('$1000-$9,999','1000-9,999')\ninvest_pivot = invest_pivot.replace('$10,000-$99,999','10,000-99,999')\ninvest_pivot = invest_pivot.replace('$100,000 or more ($USD)','100,000 or more')\n\n\n\n# visualization - invest\nfig = go.Figure()\n\nfor i in range(invest_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=invest_pivot['Less than 70K'].iloc[i], \n        y0=invest_pivot['Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'].iloc[i], \n        x1=invest_pivot['More than 70K'].iloc[i], \n        y1=invest_pivot['Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=invest_pivot['Less than 70K'],\n            y=invest_pivot['Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * invest_pivot.shape[0],\n                color=[\"#DEBAE6\"] * invest_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=invest_pivot['More than 70K'],\n            y=invest_pivot['Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * invest_pivot.shape[0],\n                color=[\"#C54DFD\"] * invest_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q26|Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"The more you invest, the higher chance you get a higher pay.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"Most peole pay nothing\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.15, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","3c52352f":"# Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice\ntool_primary = tool_product_data.groupby(['compensation_segment',\n                                                  'Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice']).count().reset_index()[['compensation_segment',\n                                                  'Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice',\n                                                  'respondent_id']]\n\ntool_primary['nr_respondents_segment'] = tool_primary.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\ntool_primary['share_of_total'] = round(100 * tool_primary['respondent_id'] \/ tool_primary['nr_respondents_segment'],1)\n\ntool_primary_pivot = tool_primary.pivot(index='Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\ntool_primary_pivot= tool_primary_pivot.fillna(0)\ntool_primary_pivot['diff'] = tool_primary_pivot['More than 70K'] - tool_primary_pivot['Less than 70K']\ntool_primary_pivot = tool_primary_pivot.sort_values(by = 'diff')\n\n# visualization - primary tool\nfig = go.Figure()\n\nfor i in range(tool_primary_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=tool_primary_pivot['Less than 70K'].iloc[i], \n        y0=tool_primary_pivot['Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'].iloc[i], \n        x1=tool_primary_pivot['More than 70K'].iloc[i], \n        y1=tool_primary_pivot['Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=tool_primary_pivot['Less than 70K'],\n            y=tool_primary_pivot['Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * tool_primary_pivot.shape[0],\n                color=[\"#DEBAE6\"] * tool_primary_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=tool_primary_pivot['More than 70K'],\n            y=tool_primary_pivot['Q41|What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * tool_primary_pivot.shape[0],\n                color=[\"#C54DFD\"] * tool_primary_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q41|What is the primary tool that you use at work or school to analyze data?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"Local development software is needed.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.3 , y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"Basic statistical software if popular, but everyone seems know how to use it\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.15, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","f2ad5e47":"# Q9_Part_1|Which of the following integrated development environments (IDE's) do you use on a regular basis? \n\nQ9 = []\nQ9.append('compensation_segment')\nQ9.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q9' in col:\n        Q9.append(col)\n    else:\n        pass\n\nQ9_compensation = survey_compensation[Q9]\nQ9_compensation_count = Q9_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q9_compensation_count.columns\nnew_cols = []\nfor col in Q9_compensation_count[cols].columns:\n    if 'Q9' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q9_compensation_count[new_col] = round(100 * Q9_compensation_count[col] \/ Q9_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ9_compensation_count_share = Q9_compensation_count[new_cols].T.reset_index()\nQ9_compensation_count_share_pivot = Q9_compensation_count_share.loc[Q9_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'IDE', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ9_compensation_count_share_pivot= Q9_compensation_count_share_pivot.fillna(0)\n\nQ9_compensation_count_share_pivot['diff'] = Q9_compensation_count_share_pivot['More than 70K'] - Q9_compensation_count_share_pivot['Less than 70K']\nQ9_compensation_count_share_pivot = Q9_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - IDE\nfig = go.Figure()\n\nfor i in range(Q9_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q9_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q9_compensation_count_share_pivot['IDE'].iloc[i], \n        x1=Q9_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q9_compensation_count_share_pivot['IDE'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q9_compensation_count_share_pivot['Less than 70K'],\n            y=Q9_compensation_count_share_pivot['IDE'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q9_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q9_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q9_compensation_count_share_pivot['More than 70K'],\n            y=Q9_compensation_count_share_pivot['IDE'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q9_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q9_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Which of the following integrated development environments (IDE's) do you use on a regular basis? \",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\n\n\nfig.add_annotation(text=\"Vim\/Emacs, Jupyter Notebook and Rstudio\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.85, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","afbe2bf1":"# Q10_Part_1|Which of the following hosted notebook products do you use on a regular basis?  (Select all that apply) \n\nQ10 = []\nQ10.append('compensation_segment')\nQ10.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q10' in col:\n        Q10.append(col)\n    else:\n        pass\n\nQ10_compensation = survey_compensation[Q10]\nQ10_compensation_count = Q10_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q10_compensation_count.columns\nnew_cols = []\nfor col in Q10_compensation_count[cols].columns:\n    if 'Q10' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q10_compensation_count[new_col] = round(100 * Q10_compensation_count[col] \/ Q10_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ10_compensation_count_share = Q10_compensation_count[new_cols].T.reset_index()\nQ10_compensation_count_share_pivot = Q10_compensation_count_share.loc[Q10_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'hostedNotebook', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ10_compensation_count_share_pivot= Q10_compensation_count_share_pivot.fillna(0)\n\nQ10_compensation_count_share_pivot['diff'] = Q10_compensation_count_share_pivot['More than 70K'] - Q10_compensation_count_share_pivot['Less than 70K']\nQ10_compensation_count_share_pivot = Q10_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - hosted notedbook\nfig = go.Figure()\n\nfor i in range(Q10_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q10_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q10_compensation_count_share_pivot['hostedNotebook'].iloc[i], \n        x1=Q10_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q10_compensation_count_share_pivot['hostedNotebook'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q10_compensation_count_share_pivot['Less than 70K'],\n            y=Q10_compensation_count_share_pivot['hostedNotebook'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q10_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q10_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q10_compensation_count_share_pivot['More than 70K'],\n            y=Q10_compensation_count_share_pivot['hostedNotebook'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q10_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q10_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q10_Part_1|Which of the following hosted notebook products do you use on a regular basis?  (Select all that apply)\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\n\n\nfig.add_annotation(text=\"Why chose none gaining more paid?\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.8 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","41a9776a":"# Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice\n\ncomputingPlatform = tool_product_data.groupby(['compensation_segment',\n                                                  'Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice']).count().reset_index()[['compensation_segment',\n                                                  'Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice',\n                                                  'respondent_id']]\n\ncomputingPlatform['nr_respondents_segment'] = computingPlatform.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\ncomputingPlatform['share_of_total'] = round(100 * computingPlatform['respondent_id'] \/ computingPlatform['nr_respondents_segment'],1)\n\ncomputingPlatform_pivot = computingPlatform.pivot(index='Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\ncomputingPlatform_pivot= computingPlatform_pivot.fillna(0)\ncomputingPlatform_pivot['diff'] = computingPlatform_pivot['More than 70K'] - computingPlatform_pivot['Less than 70K']\ncomputingPlatform_pivot = computingPlatform_pivot.sort_values(by = 'diff')\n\n# visualization - computing platform\nfig = go.Figure()\n\nfor i in range(computingPlatform_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=computingPlatform_pivot['Less than 70K'].iloc[i], \n        y0=computingPlatform_pivot['Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice'].iloc[i], \n        x1=computingPlatform_pivot['More than 70K'].iloc[i], \n        y1=computingPlatform_pivot['Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=computingPlatform_pivot['Less than 70K'],\n            y=computingPlatform_pivot['Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * computingPlatform_pivot.shape[0],\n                color=[\"#DEBAE6\"] * computingPlatform_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=computingPlatform_pivot['More than 70K'],\n            y=computingPlatform_pivot['Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * computingPlatform_pivot.shape[0],\n                color=[\"#C54DFD\"] * computingPlatform_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q11|What type of computing platform do you use most often for your data science projects? - Selected Choice\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"A cloud computing platform is a must\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.95, showarrow=False)\n\nfig.add_annotation(text=\"A laptop is popular, but it also <br>takes up a large share of users earn in the bottom 80%.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.1, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","9851f972":"# Q12_Part_1|Which types of specialized hardware do you use on a regular basis?  (Select all that apply) - Selected Choice -  NVIDIA GPUs \n\nQ12 = []\nQ12.append('compensation_segment')\nQ12.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q12' in col:\n        Q12.append(col)\n    else:\n        pass\n\nQ12_compensation = survey_compensation[Q12]\nQ12_compensation_count = Q12_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q12_compensation_count.columns\nnew_cols = []\nfor col in Q12_compensation_count[cols].columns:\n    if 'Q12' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q12_compensation_count[new_col] = round(100 * Q12_compensation_count[col] \/ Q12_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ12_compensation_count_share = Q12_compensation_count[new_cols].T.reset_index()\nQ12_compensation_count_share_pivot = Q12_compensation_count_share.loc[Q12_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'hardware', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ12_compensation_count_share_pivot= Q12_compensation_count_share_pivot.fillna(0)\n\nQ12_compensation_count_share_pivot['diff'] = Q12_compensation_count_share_pivot['More than 70K'] - Q12_compensation_count_share_pivot['Less than 70K']\nQ12_compensation_count_share_pivot = Q12_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - hardware \nfig = go.Figure()\n\nfor i in range(Q12_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q12_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q12_compensation_count_share_pivot['hardware'].iloc[i], \n        x1=Q12_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q12_compensation_count_share_pivot['hardware'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q12_compensation_count_share_pivot['Less than 70K'],\n            y=Q12_compensation_count_share_pivot['hardware'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q12_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q12_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q12_compensation_count_share_pivot['More than 70K'],\n            y=Q12_compensation_count_share_pivot['hardware'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q12_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q12_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q12_Part_1|Which types of specialized hardware do you use on a regular basis?  (Select all that apply)\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"GPU is more popular or maybe enough for you earn a lot?\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.8 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","c53a5d70":"# Q13|Approximately how many times have you used a TPU (tensor processing unit)?\n\nTPUtimes = tool_product_data.groupby(['compensation_segment',\n                                                  'Q13|Approximately how many times have you used a TPU (tensor processing unit)?']).count().reset_index()[['compensation_segment',\n                                                  'Q13|Approximately how many times have you used a TPU (tensor processing unit)?',\n                                                  'respondent_id']]\n\nTPUtimes['nr_respondents_segment'] = TPUtimes.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nTPUtimes['share_of_total'] = round(100 * TPUtimes['respondent_id'] \/ TPUtimes['nr_respondents_segment'],1)\n\nTPUtimes_pivot = TPUtimes.pivot(index='Q13|Approximately how many times have you used a TPU (tensor processing unit)?', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nTPUtimes_pivot= TPUtimes_pivot.fillna(0)\n\nTPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'] = pd.Categorical(TPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'], \n                      categories=['Never',\n                                  'Once',\n                                  \"2-5 times\",\n                                  \"6-25 times\",\n                                  \"More than 25 times\"],                                                                                                                                                                                            \n                      ordered=True)\nTPUtimes_pivot = TPUtimes_pivot.sort_values(by = 'Q13|Approximately how many times have you used a TPU (tensor processing unit)?')\n\n\n# visualization - times of using TPU?\nfig = go.Figure()\n\nfor i in range(TPUtimes_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=TPUtimes_pivot['Less than 70K'].iloc[i], \n        y0=TPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'].iloc[i], \n        x1=TPUtimes_pivot['More than 70K'].iloc[i], \n        y1=TPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=TPUtimes_pivot['Less than 70K'],\n            y=TPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * TPUtimes_pivot.shape[0],\n                color=[\"#DEBAE6\"] * TPUtimes_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=TPUtimes_pivot['More than 70K'],\n            y=TPUtimes_pivot['Q13|Approximately how many times have you used a TPU (tensor processing unit)?'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * TPUtimes.shape[0],\n                color=[\"#C54DFD\"] * TPUtimes.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q13|Approximately how many times have you used a TPU (tensor processing unit)?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\nfig.add_annotation(text=\"The more times you used a TPU, more chance you'll get higher pay.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.2 , y=0.95, showarrow=False)\n\n\nfig.add_annotation(text=\"Most people never used it.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.15, showarrow=False)\n\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","d13de340":"# Q14_Part_1|What data visualization libraries or tools do you use on a regular basis?  (Select all that apply)\nQ14 = []\nQ14.append('compensation_segment')\nQ14.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q14' in col:\n        Q14.append(col)\n    else:\n        pass\n\nQ14_compensation = survey_compensation[Q14]\nQ14_compensation_count = Q14_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q14_compensation_count.columns\nnew_cols = []\nfor col in Q14_compensation_count[cols].columns:\n    if 'Q14' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q14_compensation_count[new_col] = round(100 * Q14_compensation_count[col] \/ Q14_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ14_compensation_count_share = Q14_compensation_count[new_cols].T.reset_index()\nQ14_compensation_count_share_pivot = Q14_compensation_count_share.loc[Q14_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'dataVis', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ14_compensation_count_share_pivot= Q14_compensation_count_share_pivot.fillna(0)\n\nQ14_compensation_count_share_pivot['diff'] = Q14_compensation_count_share_pivot['More than 70K'] - Q14_compensation_count_share_pivot['Less than 70K']\nQ14_compensation_count_share_pivot = Q14_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - data Vis \nfig = go.Figure()\n\nfor i in range(Q14_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q14_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q14_compensation_count_share_pivot['dataVis'].iloc[i], \n        x1=Q14_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q14_compensation_count_share_pivot['dataVis'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q14_compensation_count_share_pivot['Less than 70K'],\n            y=Q14_compensation_count_share_pivot['dataVis'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q14_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q14_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q14_compensation_count_share_pivot['More than 70K'],\n            y=Q14_compensation_count_share_pivot['dataVis'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q14_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q14_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q14_Part_1|What data visualization libraries or tools do you use on a regular basis? \",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"GGplot or Plotly\/Plotly Express\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.9, showarrow=False)\n\nfig.add_annotation(text=\"Matplotlib and Seaborn are popular but not grant you higher pay.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.3, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","72da4e0b":"# Q27_A_Part_1|Which of the following cloud computing platforms do you use on a regular basis? (Select all that apply) \nQ27 = []\nQ27.append('compensation_segment')\nQ27.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q27' in col:\n        Q27.append(col)\n    else:\n        pass\n\nQ27_compensation = survey_compensation[Q27]\nQ27_compensation_count = Q27_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q27_compensation_count.columns\nnew_cols = []\nfor col in Q27_compensation_count[cols].columns:\n    if 'Q27' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q27_compensation_count[new_col] = round(100 * Q27_compensation_count[col] \/ Q27_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ27_compensation_count_share = Q27_compensation_count[new_cols].T.reset_index()\nQ27_compensation_count_share_pivot = Q27_compensation_count_share.loc[Q27_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'CloudComputePlatform', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ27_compensation_count_share_pivot= Q27_compensation_count_share_pivot.fillna(0)\n\nQ27_compensation_count_share_pivot['diff'] = Q27_compensation_count_share_pivot['More than 70K'] - Q27_compensation_count_share_pivot['Less than 70K']\nQ27_compensation_count_share_pivot = Q27_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - data Vis \nfig = go.Figure()\n\nfor i in range(Q27_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q27_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q27_compensation_count_share_pivot['CloudComputePlatform'].iloc[i], \n        x1=Q27_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q27_compensation_count_share_pivot['CloudComputePlatform'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q27_compensation_count_share_pivot['Less than 70K'],\n            y=Q27_compensation_count_share_pivot['CloudComputePlatform'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q27_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q27_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q27_compensation_count_share_pivot['More than 70K'],\n            y=Q27_compensation_count_share_pivot['CloudComputePlatform'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q27_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q27_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q27_A_Part_1|Which of the following cloud computing platforms do you use on a regular basis? (Select all that apply)\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"AWS \/ Microsoft Azure \/ Google Cloud Platform\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.9, showarrow=False)\n\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","fb604b3b":"# Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice\ncloudPlatformExp = tool_product_data.groupby(['compensation_segment',\n                                                  'Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice']).count().reset_index()[['compensation_segment',\n                                                  'Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice',\n                                                  'respondent_id']]\n\ncloudPlatformExp['nr_respondents_segment'] = cloudPlatformExp.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\ncloudPlatformExp['share_of_total'] = round(100 * cloudPlatformExp['respondent_id'] \/ cloudPlatformExp['nr_respondents_segment'],1)\n\ncloudPlatformExp_pivot = cloudPlatformExp.pivot(index='Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\ncloudPlatformExp_pivot= cloudPlatformExp_pivot.fillna(0)\ncloudPlatformExp_pivot['diff'] = cloudPlatformExp_pivot['More than 70K'] - cloudPlatformExp_pivot['Less than 70K']\ncloudPlatformExp_pivot = cloudPlatformExp_pivot.sort_values(by = 'diff')\n\n# visualization - cloudPlatformExp\nfig = go.Figure()\n\nfor i in range(cloudPlatformExp_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=cloudPlatformExp_pivot['Less than 70K'].iloc[i], \n        y0=cloudPlatformExp_pivot['Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice'].iloc[i], \n        x1=cloudPlatformExp_pivot['More than 70K'].iloc[i], \n        y1=cloudPlatformExp_pivot['Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=cloudPlatformExp_pivot['Less than 70K'],\n            y=cloudPlatformExp_pivot['Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * cloudPlatformExp_pivot.shape[0],\n                color=[\"#DEBAE6\"] * cloudPlatformExp_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=cloudPlatformExp_pivot['More than 70K'],\n            y=cloudPlatformExp_pivot['Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * cloudPlatformExp_pivot.shape[0],\n                color=[\"#C54DFD\"] * cloudPlatformExp_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q28|Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)? - Selected Choice\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\n\n\nfig.add_annotation(text=\"High comment on AWS explains its popularity.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","50019e86":"# Q29_A_Part_1|Do you use any of the following cloud computing products on a regular basis? (Select all that apply) - Selected Choice -  Amazon Elastic Compute Cloud (EC2) \nQ29 = []\nQ29.append('compensation_segment')\nQ29.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q29' in col:\n        Q29.append(col)\n    else:\n        pass\n\nQ29_compensation = survey_compensation[Q29]\nQ29_compensation_count = Q29_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q29_compensation_count.columns\nnew_cols = []\nfor col in Q29_compensation_count[cols].columns:\n    if 'Q29' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q29_compensation_count[new_col] = round(100 * Q29_compensation_count[col] \/ Q29_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ29_compensation_count_share = Q29_compensation_count[new_cols].T.reset_index()\nQ29_compensation_count_share_pivot = Q29_compensation_count_share.loc[Q29_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'CloudCompProd', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ29_compensation_count_share_pivot= Q29_compensation_count_share_pivot.fillna(0)\n\nQ29_compensation_count_share_pivot['diff'] = Q29_compensation_count_share_pivot['More than 70K'] - Q29_compensation_count_share_pivot['Less than 70K']\nQ29_compensation_count_share_pivot = Q29_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - CloudCompProd\nfig = go.Figure()\n\nfor i in range(Q29_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q29_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q29_compensation_count_share_pivot['CloudCompProd'].iloc[i], \n        x1=Q29_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q29_compensation_count_share_pivot['CloudCompProd'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q29_compensation_count_share_pivot['Less than 70K'],\n            y=Q29_compensation_count_share_pivot['CloudCompProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q29_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q29_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q29_compensation_count_share_pivot['More than 70K'],\n            y=Q29_compensation_count_share_pivot['CloudCompProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q29_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q29_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q29_A_Part_1|Do you use any of the following cloud computing products on a regular basis? (Select all that apply)\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"Amazon Elastic Compute Cloud\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","fc74289a":"# Q30_A_Part_1|Do you use any of the following data storage products on a regular basis? (Select all that apply) - Selected Choice - Microsoft Azure Data Lake Storage \nQ30 = []\nQ30.append('compensation_segment')\nQ30.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q30' in col:\n        Q30.append(col)\n    else:\n        pass\n\nQ30_compensation = survey_compensation[Q30]\nQ30_compensation_count = Q30_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q30_compensation_count.columns\nnew_cols = []\nfor col in Q30_compensation_count[cols].columns:\n    if 'Q30' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q30_compensation_count[new_col] = round(100 * Q30_compensation_count[col] \/ Q30_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ30_compensation_count_share = Q30_compensation_count[new_cols].T.reset_index()\nQ30_compensation_count_share_pivot = Q30_compensation_count_share.loc[Q30_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'dataStorageProd', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ30_compensation_count_share_pivot= Q30_compensation_count_share_pivot.fillna(0)\n\nQ30_compensation_count_share_pivot['diff'] = Q30_compensation_count_share_pivot['More than 70K'] - Q30_compensation_count_share_pivot['Less than 70K']\nQ30_compensation_count_share_pivot = Q30_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - dataStorageProd\nfig = go.Figure()\n\nfor i in range(Q30_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q30_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q30_compensation_count_share_pivot['dataStorageProd'].iloc[i], \n        x1=Q30_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q30_compensation_count_share_pivot['dataStorageProd'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q30_compensation_count_share_pivot['Less than 70K'],\n            y=Q30_compensation_count_share_pivot['dataStorageProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q30_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q30_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q30_compensation_count_share_pivot['More than 70K'],\n            y=Q30_compensation_count_share_pivot['dataStorageProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q30_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q30_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q30_A_Part_1|Do you use any of the following data storage products on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"Amazon S3 is popular and earns most.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.9 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","006ab0e6":"# Q31_A_Part_3|Do you use any of the following managed machine learning products on a regular basis? (Select all that apply) - Selected Choice -  Google Cloud Vertex AI\nQ31 = []\nQ31.append('compensation_segment')\nQ31.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q31' in col:\n        Q31.append(col)\n    else:\n        pass\n\nQ31_compensation = survey_compensation[Q31]\nQ31_compensation_count = Q31_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q31_compensation_count.columns\nnew_cols = []\nfor col in Q31_compensation_count[cols].columns:\n    if 'Q31' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q31_compensation_count[new_col] = round(100 * Q31_compensation_count[col] \/ Q31_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ31_compensation_count_share = Q31_compensation_count[new_cols].T.reset_index()\nQ31_compensation_count_share_pivot = Q31_compensation_count_share.loc[Q31_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'MLProd', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ31_compensation_count_share_pivot= Q31_compensation_count_share_pivot.fillna(0)\n\nQ31_compensation_count_share_pivot['diff'] = Q31_compensation_count_share_pivot['More than 70K'] - Q31_compensation_count_share_pivot['Less than 70K']\nQ31_compensation_count_share_pivot = Q31_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - MLProd\nfig = go.Figure()\n\nfor i in range(Q31_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q31_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q31_compensation_count_share_pivot['MLProd'].iloc[i], \n        x1=Q31_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q31_compensation_count_share_pivot['MLProd'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q31_compensation_count_share_pivot['Less than 70K'],\n            y=Q31_compensation_count_share_pivot['MLProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q31_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q31_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q31_compensation_count_share_pivot['More than 70K'],\n            y=Q31_compensation_count_share_pivot['MLProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q31_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q31_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=480, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q31_A_Part_3|Do you use any of the following managed machine learning products on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"Not many people use it.\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","81375f6c":"# Q32_A_Part_1|Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis? (Select all that apply)\nQ32 = []\nQ32.append('compensation_segment')\nQ32.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q32' in col:\n        Q32.append(col)\n    else:\n        pass\n\nQ32_compensation = survey_compensation[Q32]\nQ32_compensation_count = Q32_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q32_compensation_count.columns\nnew_cols = []\nfor col in Q32_compensation_count[cols].columns:\n    if 'Q32' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q32_compensation_count[new_col] = round(100 * Q32_compensation_count[col] \/ Q32_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ32_compensation_count_share = Q32_compensation_count[new_cols].T.reset_index()\nQ32_compensation_count_share_pivot = Q32_compensation_count_share.loc[Q32_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'bigDataProd', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ32_compensation_count_share_pivot= Q32_compensation_count_share_pivot.fillna(0)\n\nQ32_compensation_count_share_pivot['diff'] = Q32_compensation_count_share_pivot['More than 70K'] - Q32_compensation_count_share_pivot['Less than 70K']\nQ32_compensation_count_share_pivot = Q32_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - bigDataProd\nfig = go.Figure()\n\nfor i in range(Q32_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q32_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q32_compensation_count_share_pivot['bigDataProd'].iloc[i], \n        x1=Q32_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q32_compensation_count_share_pivot['bigDataProd'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q32_compensation_count_share_pivot['Less than 70K'],\n            y=Q32_compensation_count_share_pivot['bigDataProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q32_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q32_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q32_compensation_count_share_pivot['More than 70K'],\n            y=Q32_compensation_count_share_pivot['bigDataProd'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q32_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q32_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q32_A_Part_1|Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"PostgreSQL and Redshift\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","534ce77f":"# Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice\nbigDataProdMost = tool_product_data.groupby(['compensation_segment',\n                                                  'Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice']).count().reset_index()[['compensation_segment',\n                                                  'Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice',\n                                                  'respondent_id']]\n\nbigDataProdMost['nr_respondents_segment'] = bigDataProdMost.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nbigDataProdMost['share_of_total'] = round(100 * bigDataProdMost['respondent_id'] \/ bigDataProdMost['nr_respondents_segment'],1)\n\nbigDataProdMost_pivot = bigDataProdMost.pivot(index='Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nbigDataProdMost_pivot= bigDataProdMost_pivot.fillna(0)\nbigDataProdMost_pivot['diff'] = bigDataProdMost_pivot['More than 70K'] - bigDataProdMost_pivot['Less than 70K']\nbigDataProdMost_pivot = bigDataProdMost_pivot.sort_values(by = 'diff')\n\n# visualization - bigDataProdMost\nfig = go.Figure()\n\nfor i in range(bigDataProdMost_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=bigDataProdMost_pivot['Less than 70K'].iloc[i], \n        y0=bigDataProdMost_pivot['Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice'].iloc[i], \n        x1=bigDataProdMost_pivot['More than 70K'].iloc[i], \n        y1=bigDataProdMost_pivot['Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=bigDataProdMost_pivot['Less than 70K'],\n            y=bigDataProdMost_pivot['Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * bigDataProdMost_pivot.shape[0],\n                color=[\"#DEBAE6\"] * bigDataProdMost_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=bigDataProdMost_pivot['More than 70K'],\n            y=bigDataProdMost_pivot['Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * bigDataProdMost_pivot.shape[0],\n                color=[\"#C54DFD\"] * bigDataProdMost_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q33|Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\n\n\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","9be33ae9":"# Q34_A_Part_1|Which of the following business intelligence tools do you use on a regular basis? (Select all that apply) - Selected Choice - Amazon QuickSight\nQ34 = []\nQ34.append('compensation_segment')\nQ34.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q34' in col:\n        Q34.append(col)\n    else:\n        pass\n\nQ34_compensation = survey_compensation[Q34]\nQ34_compensation_count = Q34_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q34_compensation_count.columns\nnew_cols = []\nfor col in Q34_compensation_count[cols].columns:\n    if 'Q34' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q34_compensation_count[new_col] = round(100 * Q34_compensation_count[col] \/ Q34_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ34_compensation_count_share = Q34_compensation_count[new_cols].T.reset_index()\nQ34_compensation_count_share_pivot = Q34_compensation_count_share.loc[Q34_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'businessIntellegence', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ34_compensation_count_share_pivot= Q34_compensation_count_share_pivot.fillna(0)\n\nQ34_compensation_count_share_pivot['diff'] = Q34_compensation_count_share_pivot['More than 70K'] - Q34_compensation_count_share_pivot['Less than 70K']\nQ34_compensation_count_share_pivot = Q34_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - businessIntellegence\nfig = go.Figure()\n\nfor i in range(Q34_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q34_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q34_compensation_count_share_pivot['businessIntellegence'].iloc[i], \n        x1=Q34_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q34_compensation_count_share_pivot['businessIntellegence'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q34_compensation_count_share_pivot['Less than 70K'],\n            y=Q34_compensation_count_share_pivot['businessIntellegence'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q34_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q34_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q34_compensation_count_share_pivot['More than 70K'],\n            y=Q34_compensation_count_share_pivot['businessIntellegence'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q34_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q34_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q34_A_Part_1|Which of the following business intelligence tools do you use on a regular basis?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","d3969f11":"# Q35|Which of the following business intelligence tools do you use most often? - Selected Choice\nbusinessIntell = tool_product_data.groupby(['compensation_segment',\n                                                  'Q35|Which of the following business intelligence tools do you use most often? - Selected Choice']).count().reset_index()[['compensation_segment',\n                                                  'Q35|Which of the following business intelligence tools do you use most often? - Selected Choice',\n                                                  'respondent_id']]\n\nbusinessIntell['nr_respondents_segment'] = businessIntell.groupby('compensation_segment', sort=False)[\"respondent_id\"].transform('sum')\nbusinessIntell['share_of_total'] = round(100 * businessIntell['respondent_id'] \/ businessIntell['nr_respondents_segment'],1)\n\nbusinessIntell_pivot = businessIntell.pivot(index='Q35|Which of the following business intelligence tools do you use most often? - Selected Choice', \n                                                                      columns='compensation_segment', \n                                                                      values='share_of_total').reset_index()\nbusinessIntell_pivot= businessIntell_pivot.fillna(0)\nbusinessIntell_pivot['diff'] = businessIntell_pivot['More than 70K'] - businessIntell_pivot['Less than 70K']\nbusinessIntell_pivot = businessIntell_pivot.sort_values(by = 'diff')\n\n# visualization - businessIntell_pivot\nfig = go.Figure()\n\nfor i in range(businessIntell_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=businessIntell_pivot['Less than 70K'].iloc[i], \n        y0=businessIntell_pivot['Q35|Which of the following business intelligence tools do you use most often? - Selected Choice'].iloc[i], \n        x1=businessIntell_pivot['More than 70K'].iloc[i], \n        y1=businessIntell_pivot['Q35|Which of the following business intelligence tools do you use most often? - Selected Choice'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=businessIntell_pivot['Less than 70K'],\n            y=businessIntell_pivot['Q35|Which of the following business intelligence tools do you use most often? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * businessIntell_pivot.shape[0],\n                color=[\"#DEBAE6\"] * businessIntell_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=businessIntell_pivot['More than 70K'],\n            y=businessIntell_pivot['Q35|Which of the following business intelligence tools do you use most often? - Selected Choice'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * businessIntell_pivot.shape[0],\n                color=[\"#C54DFD\"] * businessIntell_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q35|Which of the following business intelligence tools do you use most often? - Selected Choice\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\n\n\n\n\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=0.6 , y=0.95, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","c906ae57":"# Q36_A_Part_1|Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?   \nQ36 = []\nQ36.append('compensation_segment')\nQ36.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q36' in col:\n        Q36.append(col)\n    else:\n        pass\n\nQ36_compensation = survey_compensation[Q36]\nQ36_compensation_count = Q36_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q36_compensation_count.columns\nnew_cols = []\nfor col in Q36_compensation_count[cols].columns:\n    if 'Q36' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q36_compensation_count[new_col] = round(100 * Q36_compensation_count[col] \/ Q36_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ36_compensation_count_share = Q36_compensation_count[new_cols].T.reset_index()\nQ36_compensation_count_share_pivot = Q36_compensation_count_share.loc[Q36_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'autoMLTool', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ36_compensation_count_share_pivot= Q36_compensation_count_share_pivot.fillna(0)\n\nQ36_compensation_count_share_pivot['diff'] = Q36_compensation_count_share_pivot['More than 70K'] - Q36_compensation_count_share_pivot['Less than 70K']\nQ36_compensation_count_share_pivot = Q36_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - autoMLTool\nfig = go.Figure()\n\nfor i in range(Q36_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q36_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q36_compensation_count_share_pivot['autoMLTool'].iloc[i], \n        x1=Q36_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q36_compensation_count_share_pivot['autoMLTool'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q36_compensation_count_share_pivot['Less than 70K'],\n            y=Q36_compensation_count_share_pivot['autoMLTool'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q36_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q36_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q36_compensation_count_share_pivot['More than 70K'],\n            y=Q36_compensation_count_share_pivot['autoMLTool'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q36_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q36_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q36_A_Part_1|Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis? \",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","aef2dd72":"# Q37_A_Part_1|Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?  (Select all that apply) - Selected Choice -  Google Cloud AutoML \n\"\"\"\nQuestion 37-A (which specific product) was only asked to respondents that answered affirmatively to\nQuestion 36-A (which of the following categories of products).\n\"\"\"\nQ37 = []\nQ37.append('compensation_segment')\nQ37.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q37' in col:\n        Q37.append(col)\n    else:\n        pass\n\nQ37_compensation = survey_compensation[Q37]\nQ37_compensation_count = Q37_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q37_compensation_count.columns\nnew_cols = []\nfor col in Q37_compensation_count[cols].columns:\n    if 'Q37' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q37_compensation_count[new_col] = round(100 * Q37_compensation_count[col] \/ Q37_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ37_compensation_count_share = Q37_compensation_count[new_cols].T.reset_index()\nQ37_compensation_count_share_pivot = Q37_compensation_count_share.loc[Q37_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'autoMLToolRegular', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ37_compensation_count_share_pivot= Q37_compensation_count_share_pivot.fillna(0)\n\nQ37_compensation_count_share_pivot['diff'] = Q37_compensation_count_share_pivot['More than 70K'] - Q37_compensation_count_share_pivot['Less than 70K']\nQ37_compensation_count_share_pivot = Q37_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - autoMLToolRegular\nfig = go.Figure()\n\nfor i in range(Q37_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q37_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q37_compensation_count_share_pivot['autoMLToolRegular'].iloc[i], \n        x1=Q37_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q37_compensation_count_share_pivot['autoMLToolRegular'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q37_compensation_count_share_pivot['Less than 70K'],\n            y=Q37_compensation_count_share_pivot['autoMLToolRegular'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q37_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q37_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q37_compensation_count_share_pivot['More than 70K'],\n            y=Q37_compensation_count_share_pivot['autoMLToolRegular'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q37_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q37_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q37_A_Part_1|Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis? \",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","95205318":"# Q38_A_Part_1|Do you use any tools to help manage machine learning experiments? (Select all that apply) - Selected Choice\n\nQ38 = []\nQ38.append('compensation_segment')\nQ38.append('respondent_id')\nfor col in tool_product_data.columns:\n    if 'Q38' in col:\n        Q38.append(col)\n    else:\n        pass\n\nQ38_compensation = survey_compensation[Q38]\nQ38_compensation_count = Q38_compensation.groupby(['compensation_segment']).count().reset_index()\ncols = Q38_compensation_count.columns\nnew_cols = []\nfor col in Q38_compensation_count[cols].columns:\n    if 'Q38' in col:\n        new_col = col.split(' - ')[2]\n        new_cols.append(new_col)\n        Q38_compensation_count[new_col] = round(100 * Q38_compensation_count[col] \/ Q38_compensation_count['respondent_id'],1)\nnew_cols.append('compensation_segment')\nQ38_compensation_count_share = Q38_compensation_count[new_cols].T.reset_index()\nQ38_compensation_count_share_pivot = Q38_compensation_count_share.loc[Q38_compensation_count_share['index'] != 'compensation_segment'].rename(columns={'index': 'MLExp', \n                                                                                                                0: 'Less than 70K',\n                                                                                                               1:'More than 70K'})\nQ38_compensation_count_share_pivot= Q38_compensation_count_share_pivot.fillna(0)\n\nQ38_compensation_count_share_pivot['diff'] = Q38_compensation_count_share_pivot['More than 70K'] - Q38_compensation_count_share_pivot['Less than 70K']\nQ38_compensation_count_share_pivot = Q38_compensation_count_share_pivot.sort_values(by = 'diff')\n\n# visualization - MLExp\nfig = go.Figure()\n\nfor i in range(Q38_compensation_count_share_pivot.shape[0]):\n    fig.add_shape(\n        type='line',\n        x0=Q38_compensation_count_share_pivot['Less than 70K'].iloc[i], \n        y0=Q38_compensation_count_share_pivot['MLExp'].iloc[i], \n        x1=Q38_compensation_count_share_pivot['More than 70K'].iloc[i], \n        y1=Q38_compensation_count_share_pivot['MLExp'].iloc[i],\n        line_color=\"#cccccc\"        \n    )\nfig.add_trace(\n        go.Scatter(\n            x=Q38_compensation_count_share_pivot['Less than 70K'],\n            y=Q38_compensation_count_share_pivot['MLExp'], \n            #fill=\"toself\",\n            mode='markers',\n            name='Less than 70K',\n            marker=dict(size=[10] * Q38_compensation_count_share_pivot.shape[0],\n                color=[\"#DEBAE6\"] * Q38_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>LESS<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n    \nfig.add_trace(\n        go.Scatter(\n            x=Q38_compensation_count_share_pivot['More than 70K'],\n            y=Q38_compensation_count_share_pivot['MLExp'], \n            #fill=\"toself\",\n            mode='markers',\n            name='More than 70K', \n            marker=dict(size=[10] * Q38_compensation_count_share_pivot.shape[0],\n                color=[\"#C54DFD\"] * Q38_compensation_count_share_pivot.shape[0]),\n            hovertemplate='<b>%{x:.2f}%<\/b> of participants earning <b>MORE<\/b> than 70K selected <b>%{y}<\/b>'\n            #opacity=1\n        )\n    )\n\nfig.update_layout(height=600, \n                  width=1200, \n                  #barmode='stack',\n                  title_text=\"Q38_A_Part_1|Do you use any tools to help manage machine learning experiments?\",\n                    xaxis_title = \"% of respondents earning yearly compensation MORE\/LESS than 70K USD\",\n                  #hovermode='x unified',\n                  #paper_bgcolor='rgba(0,0,0,0)',\n                 plot_bgcolor='rgba(0,0,0,0)')\n\nfig.update_yaxes(title=None\n                 #visible=True, \n                 #showticklabels=True\n                )\nfig.add_annotation(text=\"\",\n                  xref=\"paper\", yref=\"paper\",\n                  x=1 , y=0.9, showarrow=False)\n\nfig.update_xaxes(showspikes=True)\nfig.update_yaxes(showspikes=True)\nfig.show()","d857d300":"# Demographics\nThere are four questions regarding this section\n\nQ1|What is your age (# years)?\n\nQ2|What is your gender? \n\nQ3|In which country do you currently reside?\n\nQ4|What is the highest level of formal education that you have attained or plan to attain within the next 2 years?","d362e698":"Among those who provided their compensation data, we are seeing if you earn more than **70k USD** annually, you have surpassed 80% of the industry fellows in the world.","5693003e":"* Daily tool and what they want to get familiar with in next two years\n1. Environment\n2. Product\n3. Tool","da99a306":"# Why do some people earn more than other do? \nLet's go deep dive on the profile of those top 20 earners. We divide the questions into four sections and compare the top 20s with bottoms 80s on each of them and offer some tips to those who want earn more.\n\nThe sections are\n* Demographic\n1. Where do they live\/work?\n2. Gender\n3. Age\n4. Education\n\n* Work\n1. industry\n2. Company size\n3. Role\n4. Ml status of the business\n5. Size of DS team in the company\n\n* Skill\n1. Year of coding \/ ml\n2. Where do they learn \/ share knowledge?\n3. What field\/model\/framework do they usually use?\n\n* Daily tool and what they want to get familiar with in next two years\n1. Environment\n2. Product\n3. Tool","79390126":"# If you earn over 80% of the people...\n\nData science and machine learning related jobs are among the top demanding careers in the world today ([1](http:\/\/https:\/\/knowledge.wharton.upenn.edu\/article\/whats-driving-demand-data-scientist\/)). However, among the people working in this area, there are still some of them earning much more than the others. From the Kaggle survey 2021 on 25,973 valid* participants, 15,391 answered the question **What is your current yearly compensation (approximate $USD)?**\n\n*\"To ensure response quality, we excluded respondents that were flagged by our survey system as\n\u201cSpam\u201d or \"Duplicate. We also dropped responses from respondents that spent less than 2\nminutes completing the survey, as well as responses from respondents that selected fewer than\n15 answer choices in total.\" -- Kaggle ML & DS Survey 2021 Methodology [(link)](http:\/\/www.kaggle.com\/c\/kaggle-survey-2021\/data)","17857f75":"Feel free to play with this interactive chart which can show you how high and low earners distribute in each question.\n\nYou can **select** a question in the dropdown menu.","94886dd6":"What data scientists do are different from others are applying machine learning knowledge and skills into their work.\nThat makes them earn more month than others.","b70c02bc":"* Work\n1. industry\n2. Company size\n3. Role\n4. Ml status of the business\n5. Size of DS team in the company\n6. activities at work","a5b23dbb":"* Skill\n1. Year of coding \/ ml\n2. Where do they learn \/ share knowledge?\n3. What field\/model\/framework do they usually use?"}}