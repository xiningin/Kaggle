{"cell_type":{"26307084":"code","19896e8e":"code","d7fa1233":"code","7127edeb":"code","1c8d04da":"code","98c80b36":"code","70a6e068":"code","86855a67":"code","00da6a6e":"code","c2c88dc9":"code","416e7257":"code","07a61236":"code","966e5244":"code","6c870c52":"code","a9d562b8":"code","a0de4df6":"code","b969bc82":"code","f831d2be":"code","13d75c2f":"code","e3074a22":"code","84902a30":"code","86d524e2":"code","48e35d96":"code","6efb2203":"code","8f8c832a":"code","d6b8fadf":"code","6d5edce5":"code","85e71142":"markdown"},"source":{"26307084":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","19896e8e":"data = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\ndata\n","d7fa1233":"data.describe()\n","7127edeb":"att = data.Attack.mean()\ndfs = data.Defense.mean()\n","1c8d04da":"best1 = data.Defense & data.Attack > 150\nbest11 = data[best1]\nbest111 = best11.sort_values(by='Defense', ascending=False).head(1)\nprint(best111)\n\n","98c80b36":"data.corr() # ozellikler arasindaki baglanti degerlerini karsilastirmak icin tcorelasyon tablosunu verir","70a6e068":"f,ax = plt.subplots(figsize = (18,18)) # resmin buyuklugunu ayarlar\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\n#annot True uzerindeki degerleri yazar\n#linewidth cizgilerin kalinligi\n#fmt virgullu degerleri ayarlar\n\nplt.show()","86855a67":"data.head() #datanin ilk 5.. degerlerini gosterir.\ndata.columns #datanin kolonlari gelir. \n","00da6a6e":"data.Speed.plot(kind = 'line',color = 'g', label = 'Speed', linewidth =1, alpha = 0.5, grid = True, linestyle = '-.')\ndata.Defense.plot(color = 'r', label ='Defense', linewidth = 1, alpha = 0.5, grid = True,linestyle = '-.')\nplt.legend(loc = 'upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","c2c88dc9":"data.plot(kind=\"scatter\", x=\"Attack\", y=\"Defense\", alpha= 0.5, color=\"blue\")\nplt.xlabel('Attack')\nplt.ylabel('Defence')\nplt.title('Attack Defense Scatter Plot')\nplt.show()","416e7257":"#histogram\ndata.Speed.plot(kind = 'hist',bins = 10,figsize = (12,12))#Speed kolonunu  #bins = cubuklarin kalinligini ayarlar\nplt.show()","07a61236":"data.Speed.plot(kind = 'hist',bins = 10,figsize = (12,12))#Speed kolonunu  #bins = cubuklarin kalinligini ayarlar\nplt.clf() # grafigi silmek icin clear icin","966e5244":"#Dictionary listelerden daha h\u0131zl\u0131.\ndictionary = {'spain' : 'madrid','usa' : 'vegas'}\nprint(dictionary.keys()) #key de\u011ferlerini ekrana yazd\u0131r\u0131yor.\nprint(dictionary.values()) #values de\u011ferlerini ekrana yazd\u0131r\u0131yor.\n","6c870c52":"dictionary['spain'] = \"barcelona\"    # spain anahtar\u0131n\u0131n de\u011ferini g\u00fcncelledik.\nprint(dictionary)\ndictionary['france'] = \"paris\"       # yeni bir key ve value ekledik.\nprint(dictionary)\ndel dictionary['spain']              # spain anahtar\u0131n\u0131 sildik.\nprint(dictionary)\nprint('france' in dictionary)       \ndictionary.clear()                   \nprint(dictionary)","a9d562b8":"data = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\nseries = data['Defense']        \nprint(type(series))     \ndata_frame = data[['Defense']]  \nprint(type(data_frame))\n# pandas'da 3 adet veritipi var. 1) series 2)data_Frame\n# series vekt\u00f6r \u015feklinde uzan\u0131r. tek boyutlu yap\u0131lard\u0131r.\n","a0de4df6":"#filtrelemeler\nx = data['Defense']>200    # Defans de\u011feri 200'den b\u00fcy\u00fck olan verileri x de\u011fi\u015fkenine at\u0131yoruz.\ndata[x]","b969bc82":"data[np.logical_and(data['Defense']>200, data['Attack']>100 )] # logical and fonksiyonu iki ko\u015fulunda sa\u011flanmas\u0131 istenildi\u011fi ko\u015fullarda kullan\u0131l\u0131r.\n# burada defense de\u011feri 200'den b\u00fcy\u00fck olsun ayn\u0131 zamanda attack de\u011feride 100'den b\u00fcy\u00fck olsun diyoruz.\n#numpy ile yaptik\n\n# logical and fonksiyonuna alternatif olarak a\u015fa\u011f\u0131daki yap\u0131 kullan\u0131labilir.\ndata[(data['Defense']>200) & (data['Attack']>100)]","f831d2be":"threshold = sum(data.Speed)\/len(data.Speed)\ndata[\"speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Speed]\ndata.loc[:10, [\"speed_level\", \"Speed\"]]","13d75c2f":"data.describe()","e3074a22":"print(data[\"Type 1\"].value_counts(dropna = False))\n#type 1 sutunundaki degerlerin kactane oldugunu yazar\n#dropna false ile bos degerleri almadik\n","84902a30":"#boxplot cizimi\ndata.boxplot(column=\"Attack\", by=\"Legendary\")","86d524e2":"data_new = data.head()\ndata_new","48e35d96":"melted = pd.melt(frame = data_new, id_vars = \"Name\", value_vars= [\"Attack\",\"Defense\"])\nmelted\n#sadece \"Attack\" ve \"Defense\" sutunlarini alir ve alt alta ekler. \n#coklu sutunlarda belirli sutunlarda daha kolay calismak icin kullanilir.\n","6efb2203":"melted.pivot(index=\"Name\", columns=\"variable\", values=\"value\")\n#sadece attack ve defanse sutunlarindaki ilk bes elemani alir(head yaptik o yuzden ilk bes)","8f8c832a":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row\n#iki DF yi birlestirdik\n","d6b8fadf":"data1 = data['Attack'].head()\ndata2= data['Defense'].head()\ndata3= data['Name'].head()\nconc_data_col = pd.concat([data1,data2,data3],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col\n#3 df yi birlestirdi","6d5edce5":"# lets convert object(str) to categorical and int to float.\n#datanin type ni degistirir. donusum yapar\ndata['Type 1'] = data['Type 1'].astype('category')\n#data type 1 in tipini category tipine cevirdi\ndata['Speed'] = data['Speed'].astype('float')\n#data \"speed\" in tipini \"float\" tipine cevirdi\ndata.dtypes\n","85e71142":"Benim en iyi pokemonum \"GroudonPrimal Groudon\" dur. Defense ve Attack ozelliklerinin ikisini de 150'den buyuk olana gore suzup sonre Defense ozelligi en yuksek olan pokemon benim icin en iyi pokemondur.(GroudonPrimal Groudon)\n\n#Yorumum : Defans ve Atak yuksek olup savunmasi en iyi olmasi karsi tarafi yoracak ve sonra saldiriya gececektir. Boylelikle rakibin guc seviyesi dusecek ve pokenomuz saldiriya gececektir."}}