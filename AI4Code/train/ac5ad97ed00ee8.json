{"cell_type":{"73782018":"code","48f96210":"code","068f252d":"code","7b578a2c":"code","b8200437":"code","3cc1c27e":"code","f68b3c5f":"code","7055faf5":"code","98d17ec5":"code","b1f90209":"code","525f43ad":"code","44d29aed":"code","caabfe60":"code","b2c30de1":"markdown","5142f55d":"markdown","bbb037a2":"markdown","2eecda2b":"markdown","470acee2":"markdown","cf5b1a06":"markdown"},"source":{"73782018":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","48f96210":"dataset=pd.read_csv(\"..\/input\/kc-house-data\/kc_house_data.csv\")\ndataset.head()","068f252d":"dataset.describe() #gives you entire stats about all the indexes.","7b578a2c":"#Treating Outliers\nbed=dataset['bedrooms']\npr=dataset['price']\nplt.title(\"No. Bedroom vs Price\")\nplt.xlabel(\"No of Bedrooms\")\nplt.ylabel(\"Price\")\nplt.scatter(bed,pr)\n #no of bedroom=33 is an outlier which can be removed","b8200437":"# check for the extreme values shown in the describe.\ndataset=dataset[dataset['bedrooms']<33]\n\n#Splitting into x and y dataset\ny=dataset['price']\nx= dataset.drop(columns=[\"price\",\"id\",\"lat\",\"long\"])\n\n","3cc1c27e":"xdf=x\n\n# Deriving new columns\nxdf['year_old']=2020-xdf['yr_built']\nxdf['renovated_status'] = np.where(xdf['yr_renovated']>0, 1, 0)\nxdf=xdf.drop(columns=['date','sqft_living15','sqft_lot15','yr_renovated','yr_built'])\n\nxdf.isnull().sum() #2 records in sqft_above is null\n","f68b3c5f":"#treating null values \nxdf=xdf.replace(np.nan,0)","7055faf5":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest=train_test_split(xdf,y,test_size=0.2)","98d17ec5":"#Linear Regression\nfrom sklearn.linear_model import LinearRegression\nlin_reg1=LinearRegression()\nlin_reg1.fit(xtrain,ytrain)\n","b1f90209":"#Polynomial Regression\n#converting x to polynomial to check the status of polynomial regression\nfrom sklearn.preprocessing import PolynomialFeatures\npolyreg=PolynomialFeatures(degree=2)\nxpoly=polyreg.fit_transform(xtrain)\nlin_reg2=LinearRegression()\nlin_reg2.fit(xpoly,ytrain)\n","525f43ad":"ypred1 = lin_reg1.predict(xtest) #output from Linear Regression\nypred2=  lin_reg2.predict(polyreg.fit_transform(xtest)) #Output from Polynomial Regression\nfrom sklearn.metrics import r2_score\nscore1= r2_score(ytest,ypred1)#Score from Linear Regression\nscore2=r2_score(ytest,ypred2)#Score from Polynomial Regression\nprint('Score for MultiLinear Regression',str(score1),'\\n','Score for Polynomial Regression',str(score2))\n\n","44d29aed":"#boosting accuracy\nfrom xgboost import XGBRegressor\nregboost=XGBRegressor(learning_rate=0.5, max_depth=4, n_estimators=500)\nregboost.fit(xtrain,ytrain)\n","caabfe60":"yboost=regboost.predict(xtest)\nfrom sklearn.metrics import r2_score\nscore3= r2_score(ytest,yboost)\nprint(\"Score with XGBoost \",score3)\n","b2c30de1":"# Building Model","5142f55d":"# Data Preprocessing ","bbb037a2":"# Splitting dataset\n","2eecda2b":"# Importing dataset","470acee2":"# Importing Libraries\n","cf5b1a06":"# Testing & Anallyzing the Results\n#MultiLinear\n#Polynomial"}}