{"cell_type":{"7efa43a4":"code","f7171af5":"code","51e163fb":"code","4fa39d01":"code","7b792b2c":"code","ab95da31":"code","fce17d20":"code","d77414e5":"code","9f5e432f":"code","22ca9561":"code","302161e0":"code","2bca2f4c":"code","c2355443":"code","72563b95":"code","787f35cd":"code","9706df56":"code","d4d6762b":"code","f838a16f":"code","27311345":"code","068a81fc":"code","86752d57":"code","8dc91ed1":"code","40e7249a":"code","03879e61":"code","9f2debab":"code","b905e8ad":"code","7d8100ba":"code","a87b71ed":"code","a6f6a0c6":"code","15bc677a":"code","a080fa82":"code","5ae39cac":"code","425c1c8c":"code","9acd469c":"code","3caeb6f0":"code","30dc0950":"code","97459b31":"code","9f683c03":"code","b0706558":"code","bd4f079d":"markdown","fd69b64c":"markdown","3c93a1bc":"markdown","75c22f82":"markdown","8e4b4423":"markdown","0ae49b79":"markdown","b61706b6":"markdown","2c8ee667":"markdown","2c18c01c":"markdown","b82337f6":"markdown","af8ecfee":"markdown","3d556c30":"markdown","8b7c494c":"markdown","b4ae67ef":"markdown","cbe7a7a7":"markdown","19750059":"markdown","39d0b0ec":"markdown","41d552eb":"markdown"},"source":{"7efa43a4":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f7171af5":"df = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","51e163fb":"df.head()","4fa39d01":"df.describe()","7b792b2c":"df.shape","ab95da31":"sns.countplot(x = df['stroke'])","fce17d20":"sns.countplot(x = df['gender'])\nplt.title('Gender count')","d77414e5":"sns.countplot(x=df['gender'],hue=df['stroke'])\nplt.title('Stroke rate in gender')","9f5e432f":"plt.figure(figsize=(30,8))\nsns.barplot(x=df['age'],y=df['hypertension'])\nplt.title('Age vs hypertension')","22ca9561":"plt.figure(figsize=(10,6))\n\nplt.subplot(1,2,1)\nsns.lineplot(x=df['age'],y=df['stroke'])\nplt.title('Age vs stroke')\n\nplt.subplot(1,2,2)\nsns.lineplot(x=df['age'],y=df['heart_disease'])\nplt.title('Age vs heart disease')","302161e0":"plt.figure(figsize=(10,6))\n\nplt.subplot(1,2,1)\nsns.lineplot(x=df['age'],y=df['stroke'])\nplt.title('Age vs stroke')\n\nplt.subplot(1,2,2)\nsns.lineplot(x=df['age'],y=df['heart_disease'])\nplt.title('Age vs heart disease')","2bca2f4c":"sns.countplot(x=df['hypertension'],hue=df['stroke'])\nplt.title('Hypertension and stroke')","c2355443":"plt.figure(figsize=(8,8))\ndf['smoking_status'].value_counts().plot(kind='pie')","72563b95":"sns.barplot(x=df['smoking_status'],y=df['heart_disease'])\nplt.title(\"Smoking vs heart disease\")","787f35cd":"plt.figure(figsize=(100,50))\nsns.barplot(x=df['bmi'],y=df['heart_disease'])\nplt.title('bmi vs heart disease')","9706df56":"plt.figure(figsize=(100,50))\nsns.barplot(x=df['bmi'],y=df['stroke'])\nplt.title('bmi vs stroke')","d4d6762b":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\nsns.lineplot(x=df['Residence_type'],y=df['stroke'])\nplt.title(\"Residence type vs stroke\")\n\nplt.subplot(1,2,2)\nsns.lineplot(x=df['work_type'],y=df['stroke'])\nplt.title(\"Work_type vs stroke\")","f838a16f":"sns.barplot(x=df['ever_married'],y=df['stroke'])\nplt.title('Married vs stroke')","27311345":"df.isna().sum()","068a81fc":"df.dropna(inplace=True)","86752d57":"df.isna().sum()","8dc91ed1":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\nle.fit(df['smoking_status'])\ndf['smoking_status'] = le.transform(df['smoking_status'])\n\nle.fit(df['work_type'])\ndf['work_type'] = le.transform(df['work_type'])\n\nle.fit(df['Residence_type'])\ndf['Residence_type'] = le.transform(df['Residence_type'])\n\nle.fit(df['ever_married'])\ndf['ever_married'] = le.transform(df['ever_married'])\n\nle.fit(df['gender'])\ndf['gender'] = le.transform(df['gender'])","40e7249a":"#I did visualization of avg_glucose with other factors and did find much relation\ndf.drop(['avg_glucose_level','id'],axis=1,inplace=True)","03879e61":"from sklearn.utils import resample,shuffle\n\nzero =df[df['stroke']==0]\none = df[df['stroke']==1]\n\nupsampled1 = resample(one, replace=True, n_samples=zero.shape[0])\n\ndf = pd.concat([zero,upsampled1])\n\ndf = shuffle(df)","9f2debab":"df['stroke'].value_counts().plot(kind='pie')","b905e8ad":"x = df.drop(['stroke'],axis=1)\ny = df['stroke']","7d8100ba":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.7,random_state=101)","a87b71ed":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\nlg = LogisticRegression(max_iter=450)\nlg.fit(x_train,y_train)\nlg_predict = lg.predict(x_test)\nlg_cm = confusion_matrix(lg_predict,y_test)\nsns.heatmap(lg_cm,annot=True)","a6f6a0c6":"accuracy_score(y_test,lg_predict)*100","15bc677a":"from sklearn.neighbors import KNeighborsClassifier\n\nkn = KNeighborsClassifier(n_neighbors=4)\nkn.fit(x_train,y_train)\nkn_predict = kn.predict(x_test)\nkn_cm = confusion_matrix(y_test,kn_predict)\nsns.heatmap(kn_cm,annot=True)","a080fa82":"accuracy_score(y_test,kn_predict)*100","5ae39cac":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier()\ndt.fit(x_train,y_train)\ndt_predict = dt.predict(x_test)\ndt_cm = confusion_matrix(y_test,dt_predict)\nsns.heatmap(dt_cm,annot=True)","425c1c8c":"accuracy_score(y_test,dt_predict)*100","9acd469c":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(x_train,y_train)\nrf_predict = rf.predict(x_test)\nrf_cm = confusion_matrix(y_test,rf_predict)\nsns.heatmap(rf_cm,annot=True)","3caeb6f0":"accuracy_score(y_test,rf_predict)*100","30dc0950":"from sklearn.svm import SVC\n\nsvm = SVC()\nsvm.fit(x_train,y_train)\nsvm_predict = svm.predict(x_test)\nsvm_cm = confusion_matrix(y_test,svm_predict)\nsns.heatmap(svm_cm,annot=True)","97459b31":"accuracy_score(y_test,svm_predict)*100","9f683c03":"from sklearn.naive_bayes import GaussianNB\n\nnb = GaussianNB()\nnb.fit(x_train,y_train)\nnb_predict = nb.predict(x_test)\nsns.heatmap(confusion_matrix(y_test,nb_predict),annot=True)","b0706558":"accuracy_score(y_test,nb_predict)*100","bd4f079d":"2)k-Nearest Neighbours","fd69b64c":"Model Building","3c93a1bc":"so as age increases chance of having a stroke increases\n\nsimilarly as age increases chances of having heart diseases also increases","75c22f82":"5) Suport vector machine","8e4b4423":"People living in Urban area tent to have higher chance of having a strok then rural area people\n\nPeople who are self_employed have a high chance to have a stroke","0ae49b79":"Among all the algorithms we used Random Forest outstanded all other algorithms with accuracy of 98.90%","b61706b6":"resampling the lesser data**","2c8ee667":"1) Logistic Regression","2c18c01c":"Similarly as bmi increases chances of having stroke also increases","b82337f6":"We can clearly see that those who have been former smokers or are still smoking have a greater chance of heart diseases","af8ecfee":"large number of people didnt have hypertension and only few had a stroke where as count of people with hypertension where few but significant number of people had a stroke.\n\nso we can say that chances of having a stroke increases with hypertension","3d556c30":"4) Random Forest","8b7c494c":"as bmi had a good relation with heart diseases and strokes so we didnt drop the whole column","b4ae67ef":"3) Decision Tree","cbe7a7a7":"Data Cleaning","19750059":"this image dosen't look that clear if you zoomin and watch it u will size that ass the bmi increases the chances of having a heart diseases increases","39d0b0ec":"6) Naive Bayes","41d552eb":"married people are tent to have a stroke then unmarried people"}}