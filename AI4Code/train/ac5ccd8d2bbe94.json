{"cell_type":{"5087a47f":"code","423e6b40":"code","1c55aa3d":"code","9dae77e8":"code","57291201":"markdown","9d054761":"markdown","4178ceab":"markdown","ee6e7e63":"markdown"},"source":{"5087a47f":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport warnings\n\nwarnings.simplefilter(action='ignore', category=DeprecationWarning) \nwarnings.simplefilter(action='ignore', category=FutureWarning)\n#so pandas doesn't spit out a warning everytime\n\n# DATA PREPROCESSING\n# Loading in Iowa housing data\ndata = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndata.dropna(axis=0, subset=['SalePrice'], inplace=True) #drops data with missing SalePrice value\ny = data.SalePrice\nX = data.drop(['SalePrice'], axis=1).select_dtypes(exclude=['object'])\n# this is the path to the Iowa data we will use\ntrain_X, test_X, train_y, test_y = train_test_split(X.as_matrix(), y.as_matrix(), test_size=0.25)\n\nprint('Setup Complete...')","423e6b40":"from xgboost import XGBRegressor\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import Imputer\n\nmy_pipeline = make_pipeline(Imputer(), XGBRegressor())\n","1c55aa3d":"my_pipeline.fit(train_X, train_y)\npredictions = my_pipeline.predict(test_X)\n\nfrom sklearn.metrics import mean_absolute_error\nprint(\"Mean Absolute Error : \" + str(mean_absolute_error(predictions, test_y)))\n\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\npredictions = test.select_dtypes(exclude=['object'])\n\npredicted_prices = my_pipeline.predict(predictions)","9dae77e8":"my_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': predicted_prices})\nmy_submission.to_csv('submission.csv', index=False)\nprint('Submitted!')","57291201":"Now we will fit our model and make our predictions","9d054761":"Now we will make our pipeline by using an Imputer to fill in our missing values and a RandomForestRegressor to make our predictions.","4178ceab":"# Making our submission","ee6e7e63":"# Using Pipelines to create a more efficient Model\n\n\"Pipelines are a simple way to keep your data processing and modeling code organized. Specifically, a pipeline bundles preprocessing and modeling steps so you can use the whole bundle as if it were a single step.\" (DanB, Pipelines)"}}