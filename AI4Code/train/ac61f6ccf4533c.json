{"cell_type":{"7976f182":"code","0fd7a4d1":"code","9da047a0":"code","3f8b416a":"code","58d4605d":"code","933f0564":"code","5a4a626c":"code","6137ca89":"code","8fcd3053":"code","4e764990":"code","5cfc954e":"code","16b15a41":"code","1655b372":"code","34098627":"code","ad2adfcc":"code","439ada4e":"code","19755775":"markdown","b9cd4af8":"markdown","ad3fba6a":"markdown","fd773962":"markdown","902bb6ae":"markdown","edd7a185":"markdown"},"source":{"7976f182":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom catboost import CatBoostClassifier, Pool, cv\nimport os\nimport math\nfrom sklearn.metrics import roc_auc_score\nimport pickle\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0fd7a4d1":"train_X = pd.read_pickle(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/train_X.pkl\")\ntrain_y = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/train_y.csv\")","9da047a0":"train_y.head()","3f8b416a":"val_X = pd.read_pickle(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/val_X.pkl\")\nval_y = pd.read_csv(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/val_y.csv\")","58d4605d":"test_df = pd.read_pickle(\"\/kaggle\/input\/ieee-pipeline-1-create-validation-set\/test_df.pkl\")\ntest_df.head()","933f0564":"print(f\"Before dropna, top missing columns:\\n{train_X.isna().sum().sort_values(ascending = False).head(5)}\\n\")\n\nthresh = 0.60 #how many NA values (%) I think anything more than 80% is a bit too much. This is of course only my opinion\n\ntrain_X_less_nas = train_X.dropna(thresh=train_X.shape[0]*(1-thresh), axis='columns')\n\ncols_dropped  = list(set(train_X.columns)-set(train_X_less_nas.columns))\n\ntest_df.drop(cols_dropped, axis=1, inplace=True)\nval_X.drop(cols_dropped, axis=1, inplace=True)\n\nprint(f\"After dropna, top missing columns:\\n{train_X_less_nas.isna().sum().sort_values(ascending = False).head(5)}\")\n\nprint(f\"\\nNo. of cols dropped = {len(set(train_X.columns)-set(train_X_less_nas.columns))}\")","5a4a626c":"cat_params = {\n    'loss_function': 'Logloss',\n    'custom_loss':['AUC'],\n    'logging_level':'Silent',\n    'task_type' : 'CPU',\n    'early_stopping_rounds' : 100\n}\n\nmodelA = CatBoostClassifier(**cat_params)","6137ca89":"train_X_less_nas.fillna(-10000, inplace=True)\ntest_df.fillna(-10000, inplace=True)","8fcd3053":"Catfeats = ['ProductCD'] + \\\n           [\"card\"+f\"{i+1}\" for i in range(6)] + \\\n           [\"addr\"+f\"{i+1}\" for i in range(2)] + \\\n           [\"P_emaildomain\", \"R_emaildomain\"] + \\\n           [\"M\"+f\"{i+1}\" for i in range(9)] + \\\n           [\"DeviceType\", \"DeviceInfo\"] + \\\n           [\"id_\"+f\"{i}\" for i in range(12, 39)]\n\nCatfeats = list(set(Catfeats)- set(cols_dropped))","4e764990":"def auc(x,y): \n    return roc_auc_score(x,y)\ndef print_score(m):\n    res = [auc(m.predict(train_X_less_nas), train_y), auc(m.predict(val_X), val_y)]\n    print(res)","5cfc954e":"modelA.fit(train_X_less_nas, train_y, cat_features = Catfeats)","16b15a41":"print_score(modelA)","1655b372":"predsA = pd.Series(modelA.predict(val_X))   ## or predict_proba ?? Not sklearn package","34098627":"test_predsA = pd.Series(modelA.predict(test_df))","ad2adfcc":"predsA.to_csv(\"predsA.csv\", index = False, header = True)\ntest_predsA.to_csv(\"test_predsA.csv\", index = False, header = True)","439ada4e":"sample_submission = pd.read_csv(\"\/kaggle\/input\/ieee-fraud-detection\/sample_submission.csv\")\n#sample_submission['isFraud'] = modelA.predict_proba(test_df)[:,1]\nsample_submission['isFraud'] = modelA.predict(test_df)              ## Does this give continuous response ??\nsample_submission.to_csv('catboost+ftsel.csv', index=False)","19755775":"### Make predictions on validation AND test set","b9cd4af8":"Previous kernel - https:\/\/www.kaggle.com\/priteshshrivastava\/ieee-pipeline-1-create-validation-set\n\nInput - Train & val, test CSVs\n\nOutput - Val & Test preds\n\nNext kernel - Meta model","ad3fba6a":"### Specify & fit models on training set","fd773962":"### Storing val & test pred","902bb6ae":"### Defining function to calculate the evaluation metric","edd7a185":"### Create submission file for single model"}}