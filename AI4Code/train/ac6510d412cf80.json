{"cell_type":{"7eec81b2":"code","1e1d155e":"code","7c7ee76d":"code","9e1609f9":"code","3803c4b7":"code","f2c87049":"code","87b39068":"code","bde12f5c":"code","7dc8828c":"code","1da40ee3":"code","36ed1805":"code","5c854bb0":"code","a46f23e7":"code","2f998ca0":"code","d0fe2269":"markdown"},"source":{"7eec81b2":"import sys\nimport os\nimport re\n\n# pandas,sqlite\nimport pandas as pd\nimport numpy as np\nimport pandas.io.sql as psql\nimport sqlite3\n\nfrom datetime import datetime as dt\nimport time\n\n# \u30c7\u30fc\u30bf\u53d6\u5f97\nimport json\nimport inspect\nimport requests\nimport codecs\nimport plotly\nimport plotly.graph_objects as go\n\n\nshow_tables = \"select tbl_name from sqlite_master where type = 'table'\"\ndesc = \"PRAGMA table_info([{table}])\"\nconn = \\\n    sqlite3.connect(':memory:')\ncursor = conn.cursor()\n# os.listdir('..\/input\/japantradestatistics3')\n# kaggle \u3067\u3001plotly \u304c\u8868\u793a\u3055\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30b3\u30fc\u30c9\uff08\u304a\u307e\u3058\u306a\u3044\u7684\u304b\u3082\uff09\nplotly.offline.init_notebook_mode (connected = True)\n\n# hs code,country,\ntry:\n    attach = 'attach \"..\/input\/japantradestatistics3\/codes4.db\" as code'\n    cursor.execute(attach)\nexcept:\n    pass\n\n# import hs,country code as pandas\ntmpl = \"{hs}_{lang}_df =  pd.read_sql('select * from code.{hs}_{lang}',conn)\"\nfor hs in ['hs2','hs4','hs6','hs6','hs9']:\n    for lang in ['jpn','eng']:\n        exec(tmpl.format(hs=hs,lang=lang))        \n        \n# country table: country_eng,country_jpn\ncountry_eng_df = pd.read_sql('select * from code.country_eng',conn)\ncountry_eng_df['Country']=country_eng_df['Country'].apply(str)\ncountry_jpn_df = pd.read_sql('select * from code.country_jpn',conn)\ncountry_jpn_df['Country']=country_jpn_df['Country'].apply(str)\n\n\n# \u5e74\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u3064\u304b\u3048\u308b\u3088\u3046\u306b\u3059\u308b(attach)\ntry:\n    attach = 'attach \"..\/input\/japantradestatistics3\/y_from_1988.db\" as y_1988'\n    cursor.execute(attach)\nexcept:\n    pass\ny_table = 'y_from_1988'","1e1d155e":"# \u6700\u65b0\ncountry_color_list = [['105', 'China', 'gold'],\n ['304', 'USA', 'red'],\n ['103', 'SouthKorea', 'brown'],\n ['106', 'Taiwan', 'cyan'],\n ['601', 'Australia', 'green'],\n ['111', 'Thai', 'violet'],\n ['213', 'Germany', 'grey'],\n ['110', 'VietNum', 'crimson'],\n ['108', 'HongKong', 'orangered'],\n ['112', 'Singapore', 'lightblue'],\n ['147', 'UAE', 'black'],\n ['137', 'SaudiArabia', 'lightgreen'],\n ['118', 'Indonesia', 'darkorange'],\n ['113', 'Malaysia', 'yellow'],\n ['205', 'UK', 'darkblue'],\n ['224', 'Russia', 'pink'],\n ['117', 'Philipin', 'olive'],\n ['302', 'Canada', 'blue'],\n ['210', 'France', 'indigo'],\n ['305', 'Mexico', 'tan'],\n ['141', 'Oman', 'moccasin'],\n                      \n ['312', 'Panama', 'dimgrey'],\n ['606', 'New_Zealand', 'palevioletred'],\n ['203', 'Sweden', 'slateblue'],\n ['223', 'Poland', 'darkviolet'],\n ['407', 'Peru', 'honeydew'],\n ['220', 'Italy', 'springgreen'],\n ['215', 'Switzerland', 'blue'],\n ['208', 'Belgium', 'darkolivegreen'],\n ['225', 'Austria', 'mediumpurple'],\n ['140', 'Qatar', 'lightgray'],\n ['409', 'Chile', 'maroon'],\n ['234', 'Turkey', 'orchid'],\n ['206', 'Ireland', 'navajowhite'],\n ['207', 'Netherlands', 'darkslateblue'],\n ['138', 'Kuwait', 'wheat'],\n ['123', 'India', 'beige'],\n ['551', 'South_Africa', 'papayawhip'],\n ['218', 'Spain', 'cornsilk'],\n ['410', 'Brazil', 'teal'],\n\n ['116', 'Brunei', 'seashell'],\n ['120', 'Cambodia', 'floralwhite'],\n ['122', 'Myanmar', 'darkmagenta'],\n ['124', 'Pakistan', 'firebrick'],\n ['125', 'Sri_Lanka', 'navy'],\n ['127', 'Bangladesh', 'gainsboro'],\n ['133', 'Iran', 'darkcyan'],\n ['134', 'Iraq', 'cornflowerblue'],\n ['135', 'Bahrain', 'yellowgreen'],\n ['143', 'Israel', 'peru'],\n ['153', 'Kazakhstan', 'darkturquoise'],\n ['202', 'Norway', 'cadetblue'],\n ['204', 'Denmark', 'palegreen'],\n ['222', 'Finland', 'darkseagreen'],\n ['227', 'Hungary', 'paleturquoise'],\n ['230', 'Greece', 'gray'],\n ['231', 'Romania', 'ivory'],\n ['238', 'Ukraine', 'lightpink'],\n ['245', 'Czech_Republic', 'whitesmoke'],\n ['315', 'Bahamas', 'lightseagreen'],\n ['324', 'Puerto_Rico_(USA)', 'lightskyblue'],\n ['401', 'Colombia', 'mediumslateblue'],\n ['406', 'Ecuador', 'chartreuse'],\n ['413', 'Argentina', 'lightslategrey'],\n ['506', 'Egypt', 'mediumaquamarine'],\n ['515', 'Liberia', 'slategray'],\n ['541', 'Kenya', 'mediumblue'],\n ['602', 'Papua_New_Guinea', 'magenta'],\n ['625', 'Marshall', 'darkgray']]\ncolors = {x[0]:[x[1],x[2]] for x in country_color_list}\n","7c7ee76d":"%%time\n# \u56fd\u306b\u4ed8\u4e0e\u3057\u305f\u30ab\u30e9\u30fc\u3092\u8868\u793a\n\"\"\"\n\nfig = go.Figure() \nfig.update_layout(width=1080,height=1080,paper_bgcolor='gold')\nfor i in range(len(country_color_list)):\n    xs = divmod(i,5)[1]\n    ys = divmod(i,5)[0]\n    fig.add_annotation(x=-0.4 + 1.2*xs, y=3.8-0.2*ys,\n                       showarrow=False,\n                       bgcolor=country_color_list[i][2],\n                       text=country_color_list[i][2],\n                       font={'family':'MS P\u30b4\u30b7\u30c3\u30af','size':18, 'color':\"#ffffff\"},\n                       width=150,\n                       height=30\n                       )\n\nfig.show()\n\n# \u6b8b\u308a\nnokori_colors  = list(set(color_all) - set([x[2] for x in country_color_list]))\nnokori_colors \n\n\n\"\"\"\n\n\n''","9e1609f9":"sql = \"\"\"\nselect Country,sum(Value) as Value from {y_table}\nwhere Year = 2019\ngroup by Country\norder by Value desc\n\"\"\"[1:-1]\n\n# xdf = pd.read_sql(sql.format(y_table=y_table),conn)\n# set(xdf.head(69)['Country']) - set([x[0] for x in country_color_list])","3803c4b7":"%%time\n# hs code \u3092\u6307\u5b9a\u3057\u3066\u3001\u62bd\u51fa Year \u306e\u30c7\u30fc\u30bf\u306f\u3001hs9 \u306e\u307f\nhs='hs9'\nhscode = '961700000'\nsql = \"\"\"\nselect Year,exp_imp,Country,Value,Q1,Q2 from {y_table}\nwhere {hs} = {hscode}\n\"\"\"[1:-1]\n\n# \u5e74\u3001\u8f38\u51fa\u5165\u3001\u56fd\u5225\u306e\u60c5\u5831\ny_df = pd.read_sql(sql.format(hs=hs,hscode=hscode,y_table=y_table),conn)\ny_df['Value'] = y_df['Value'].astype(float)\n\n","f2c87049":"# \u5e74\u3001\u8f38\u51fa\u5165\u3067\u3001\u96c6\u8a08\nxdf = y_df[['Year','exp_imp','Value']].groupby(['Year','exp_imp'],as_index=False).sum('Value')\ntext =\"\"\"\ngo.Scatter(x = xdf.query(\"exp_imp=={exp_imp}\")[\"Year\"]\n,y = xdf.query(\"exp_imp=={exp_imp}\")[\"Value\"],name=\"{name}\",line=dict(width=5))\n\"\"\"[1:-1]\n\n\nfig = go.Figure()\n\nfig.add_trace(eval(text.format(exp_imp=1,name='\u8f38\u51fa')))\nfig.add_trace(eval(text.format(exp_imp=2,name='\u8f38\u5165')))\n\nfig.update_layout(width=128,\n    title={'text':\"\u8f38\u51fa\u5165\u5168\u4f53\u3067\u3001\u8f38\u51fa\u3001\u8f38\u5165\u3092\u6bd4\u8f03\"},\n    xaxis_title = '\u5e74', yaxis_title = '\u91d1\u984d\u30011000\u5186\u5358\u4f4d',\n                  )\n\nfig.show()","87b39068":"#!pip install orca\n#fig.write_image('\/kaggle\/working\/test.png')\n#!\/usr\/bin\/apt-get --yes install libxss1 libgconf2-4","bde12f5c":"%%time\n# 2019 \u5e74\u306e\u8f38\u51fa\u5185\u8a33 pandas \u3067\u306e\u51e6\u7406\ntext = \"\"\"\nxdf = y_df.query(\"Year==2019 & exp_imp=={exp_imp}\")\nxdf = xdf[['Country','Value']].groupby('Country',as_index=False).sum('Value')\nxdf = xdf.sort_values('Value',ascending=False).head({head_num})\nxdf = pd.merge(xdf,country_eng_df,on='Country')\nxdf = xdf.sort_values('Value')\nxdf['name'] = xdf['Country_name'] + ': ' +  xdf['Country'] + ' '\ncountry_list =list(xdf['Country'])\n\"\"\"\n\nexp_imp=1\nexec(text.format(exp_imp=exp_imp,head_num=10))\nfig = go.Figure(go.Bar(\n            x=xdf['Value'],\n            y=xdf['name'],\n            orientation='h'))\nfig.show()\n\n# 105,108,137,147,112,141,304,106,140,138","7dc8828c":"%%time\n# 2019 \u5e74\u306e\u8f38\u5165\u5185\u8a33 pandas \u3067\u306e\u51e6\u7406\n\nexp_imp=2\nexec(text.format(exp_imp=exp_imp,head_num=10))\n\nfig = go.Figure(go.Bar(\n            x=xdf['Value'],\n            y=xdf['name'],\n            orientation='h'))\n\nfig.show()\n\n# sorted(country_list) ['105', '110', '111', '113', '117']","1da40ee3":"# \u4e2d\u56fd\u3068\u306e\u8f38\u51fa\u5165 2000\u5e74\u79fb\u884c\u306b\u9650\u5b9a\nxdf = y_df.query(\"Country=='105' & Year >2000\")\ntext = 'go.Scatter(x = xdf.query(\"exp_imp=={exp_imp}\")[\"Year\"],y = xdf.query(\"exp_imp=={exp_imp}\")[\"Value\"],name=\"{name}\",line=dict(width=5))'\nfig = go.Figure()\nfig.add_trace(eval(text.format(exp_imp=1,name='\u8f38\u51fa')))\nfig.add_trace(eval(text.format(exp_imp=2,name='\u8f38\u5165')))\nfig.show()","36ed1805":"\ntext = \"\"\"\ngo.Scatter(x=y_df.query(\"Country=='{country}' & exp_imp=={exp_imp}\")['Year'],\ny=y_df.query(\"Country=='{country}'  & exp_imp=={exp_imp}\")['Value'],\nname='{name}',line=dict(width=5,color='{color}'))\n\"\"\"[1:-1]","5c854bb0":"country_list = ['105','108','137','147','112']\nexp_imp=1\nfig = go.Figure()\nfor country in country_list:\n    tr = eval(text.format(country=country,exp_imp=exp_imp,\n                          name=colors[country][0],color=colors[country][1]))\n    fig.add_trace(tr)\nfig.show()","a46f23e7":"#country_list = ['105','111','117','113','110']\ncountry_list = ['137','147','112','141','304','106']\nexp_imp=1\nfig = go.Figure()\nfor country in country_list:\n    tr = eval(text.format(country=country,exp_imp=exp_imp,\n                          name=colors[country][0],color=colors[country][1]))\n    fig.add_trace(tr)\nfig.show()","2f998ca0":"color_all = ['aliceblue',\n 'antiquewhite',\n 'aqua',\n 'aquamarine',\n 'azure',\n 'beige',\n 'bisque',\n 'black',\n 'blanchedalmond',\n 'blue',\n 'blueviolet',\n 'brown',\n 'burlywood',\n 'cadetblue',\n 'chartreuse',\n 'chocolate',\n 'coral',\n 'cornflowerblue',\n 'cornsilk',\n 'crimson',\n 'cyan',\n 'darkblue',\n 'darkcyan',\n 'darkgoldenrod',\n 'darkgray',\n 'darkgrey',\n 'darkgreen',\n 'darkkhaki',\n 'darkmagenta',\n 'darkolivegreen',\n 'darkorange',\n 'darkorchid',\n 'darkred',\n 'darksalmon',\n 'darkseagreen',\n 'darkslateblue',\n 'darkslategray',\n 'darkslategrey',\n 'darkturquoise',\n 'darkviolet',\n 'deeppink',\n 'deepskyblue',\n 'dimgray',\n 'dimgrey',\n 'dodgerblue',\n 'firebrick',\n 'floralwhite',\n 'forestgreen',\n 'fuchsia',\n 'gainsboro',\n 'ghostwhite',\n 'gold',\n 'goldenrod',\n 'gray',\n 'grey',\n 'green',\n 'greenyellow',\n 'honeydew',\n 'hotpink',\n 'indianred',\n 'indigo',\n 'ivory',\n 'khaki',\n 'lavender',\n 'lavenderblush',\n 'lawngreen',\n 'lemonchiffon',\n 'lightblue',\n 'lightcoral',\n 'lightcyan',\n 'lightgoldenrodyellow',\n 'lightgray',\n 'lightgrey',\n 'lightgreen',\n 'lightpink',\n 'lightsalmon',\n 'lightseagreen',\n 'lightskyblue',\n 'lightslategray',\n 'lightslategrey',\n 'lightsteelblue',\n 'lightyellow',\n 'lime',\n 'limegreen',\n 'linen',\n 'magenta',\n 'maroon',\n 'mediumaquamarine',\n 'mediumblue',\n 'mediumorchid',\n 'mediumpurple',\n 'mediumseagreen',\n 'mediumslateblue',\n 'mediumspringgreen',\n 'mediumturquoise',\n 'mediumvioletred',\n 'midnightblue',\n 'mintcream',\n 'mistyrose',\n 'moccasin',\n 'navajowhite',\n 'navy',\n 'oldlace',\n 'olive',\n 'olivedrab',\n 'orange',\n 'orangered',\n 'orchid',\n 'palegoldenrod',\n 'palegreen',\n 'paleturquoise',\n 'palevioletred',\n 'papayawhip',\n 'peachpuff',\n 'peru',\n 'pink',\n 'plum',\n 'powderblue',\n 'purple',\n 'red',\n 'rosybrown',\n 'royalblue',\n 'saddlebrown',\n 'salmon',\n 'sandybrown',\n 'seagreen',\n 'seashell',\n 'sienna',\n 'silver',\n 'skyblue',\n 'slateblue',\n 'slategray',\n 'slategrey',\n 'snow',\n 'springgreen',\n 'steelblue',\n 'tan',\n 'teal',\n 'thistle',\n 'tomato',\n 'turquoise',\n 'violet',\n 'wheat',\n 'white',\n 'whitesmoke',\n 'yellow',\n 'yellowgreen']","d0fe2269":"# \u54c1\u76ee\u5225\u306e\u57fa\u672c\u7d71\u8a08 (\u9b54\u6cd5\u74f6) [\u5927\u962a\u7a0e\u95a2\u7279\u96c6](https:\/\/www.customs.go.jp\/osaka\/toukei\/pdf\/tokushu_201705.pdf)\n- 961700000\u300c\u9b54\u6cd5\u74f6\u305d\u306e\u4ed6\u306e\u771f\u7a7a\u5bb9\u5668\uff08\u30b1\u30fc\u30b9\u5165\u308a\u306e\u3082\u306e\u306b\u9650\u308b\u3002\uff09\u53ca\u3073\u305d\u306e\u90e8\u5206\u54c1\uff08\u30ac\u30e9\u30b9\u88fd\u306e\u5185\u90e8\u5bb9\u5668\u3092\u9664\u304f\u3002\uff09\u300d\u3000\u5358\u4f4d\u306fKG"}}