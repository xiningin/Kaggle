{"cell_type":{"8d226047":"code","02dabc1b":"code","f39143ab":"code","570c3d32":"code","c437e64d":"code","cd307605":"code","d9ec4995":"code","82b09339":"code","fffc1cc9":"code","e1e7e0b1":"code","1bd19285":"code","8d27fea9":"code","fa6912f5":"code","d424d6ae":"code","ec795562":"code","d284c14b":"code","6d035f78":"code","45ad4a7c":"code","3589fed3":"code","00be8d5a":"code","c4b9882e":"code","9fab1642":"code","a54b20ce":"code","75d667de":"code","157662fb":"code","6d533ff2":"code","89e475d6":"code","671fb5f0":"code","1eb70fb6":"code","d9b07cd0":"code","89e69d6a":"code","f8c9f5ef":"code","e4f476ba":"code","65be887f":"code","84180f23":"code","a5796a52":"code","d2cd84c7":"code","2a08fcb6":"code","0cc8af5a":"code","c8db39f3":"code","beee8245":"code","6ed934e2":"code","2cbb9704":"code","7e50fc8c":"code","362e664c":"code","8f3a7edc":"code","93e818ba":"code","e6001642":"code","876efc2a":"code","d20b251b":"code","cb054b22":"code","7df54263":"code","9244feee":"code","1374eac0":"code","58d689d5":"code","ce729537":"code","8236db5a":"code","81335c61":"code","fa455165":"code","a85eb51b":"code","b89dd66f":"code","b2789e2a":"code","0d60dc9e":"code","0f9fa579":"code","39829a38":"code","6fe6276f":"code","33b9c29e":"code","5e17a137":"code","7fee4296":"code","08516080":"code","27917551":"code","33bdbb84":"code","a8e0d44e":"code","69f2031c":"code","e6e27436":"code","d2bc0e80":"markdown","ca9388df":"markdown","d1bddcd3":"markdown","e84a4175":"markdown","b2b892fe":"markdown","591fe912":"markdown"},"source":{"8d226047":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02dabc1b":"# loading the training dataset\ntrain =pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","f39143ab":"train.shape","570c3d32":"train.head()","c437e64d":"train.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis=1,inplace=True)","cd307605":"train.head(2)","d9ec4995":"import matplotlib.pyplot as plt\nimport matplotlib\nimport pandas as pd\nimport seaborn as sns\n%matplotlib inline","82b09339":"train.describe().T\n# from this description we have found that 25% percent values are <= 20\n# 75","fffc1cc9":"train.Age.isnull().sum()","e1e7e0b1":"train.isnull().sum()","1bd19285":"max(list(train.Age.values))","8d27fea9":"min(list(train.Age.values))","fa6912f5":"train.Age.mode()","d424d6ae":"mean_age=train.Age.mean()","ec795562":"train.Age.fillna(mean_age,inplace=True)","d284c14b":"plt.hist(x=train.Age,bins=10)\nplt.xlabel('Age')\n# from the graph below we can see that most of the person are between age 18 to 40","6d035f78":"sns.barplot(x=train.Survived,y=train.Age,data=train)\n# we can see that average survival rate is less than average death rate","45ad4a7c":"plt.scatter(train.Age,train.Survived,c='red')\n# from below graph we can see that there are very person above age 65 who survived","3589fed3":"sns.barplot(x=train.Sex,y=train.Survived)\n# more percentage of female survide than male","00be8d5a":"# selecting input and output variable\nx=train.drop('Survived',axis=1)\ny=train.Survived","c4b9882e":"x[0:5]","9fab1642":"# since our machine learning model cant process categorial data, Sex column must be converted into readable data type\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nx['Sex']=le.fit_transform(x['Sex'])","a54b20ce":"x[:5]","75d667de":"# creating dummy varibale\ndummies=pd.get_dummies(train.Sex,drop_first=True)\ndummies[0:5]","157662fb":"train=pd.concat([train, dummies], axis=1)","6d533ff2":"train.head()","89e475d6":"# since we have created dummy variable for \"sex\" column so we have dropped it..\ntrain.drop('Sex',axis=1,inplace=True)","671fb5f0":"train.head()","1eb70fb6":"x=train.drop('Survived',axis=1)\ny=train.Survived","d9b07cd0":"from sklearn.linear_model import LogisticRegression\nlogistic_model=LogisticRegression()\nlogistic_model.fit(x,y)","89e69d6a":"logistic_model.score(x,y)","f8c9f5ef":"# Support Vector Machine\nfrom sklearn.svm import SVC","e4f476ba":"model_svm=SVC(gamma='auto')","65be887f":"model_svm.fit(x,y)\nmodel_svm.score(x,y)","84180f23":"# random forest model\nfrom sklearn.ensemble import RandomForestClassifier\nmodel_random_forest=RandomForestClassifier(n_estimators=30)\nmodel_random_forest.fit(x,y)\nmodel_random_forest.score(x,y)","a5796a52":"# decision tree classifier\nfrom sklearn.tree import DecisionTreeClassifier\ndecision_model=DecisionTreeClassifier(criterion='entropy')\ndecision_model.fit(x,y)\ndecision_model.score(x,y)","d2cd84c7":"test_data=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","2a08fcb6":"test_data.head(2)","0cc8af5a":"PassengerID=test_data['PassengerId']","c8db39f3":"test_data.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis=1,inplace=True)","beee8245":"test_data.head(3)","6ed934e2":"test_data.isnull().sum()","2cbb9704":"test_data.Age.describe()","7e50fc8c":"test_data.Age.fillna(30,inplace=True)","362e664c":"test_data.isnull().sum()","8f3a7edc":"test_data.Fare.fillna(0,inplace=True)","93e818ba":"test_data.isnull().sum()","e6001642":"test_data.head()","876efc2a":"test_dummies=pd.get_dummies(test_data.Sex,drop_first=True)\ntest_dummies[0:5]","d20b251b":"final_test_data=pd.concat([test_data,test_dummies],axis=1)","cb054b22":"final_test_data.head(2)","7df54263":"final_test_data.drop('Sex',axis=1,inplace=True)","9244feee":"y_pred=model_random_forest.predict(final_test_data)","1374eac0":"y_pred[:10]","58d689d5":"model_random_forest.predict([[3,35,8,1]])","ce729537":"model_random_forest.predict([[4,18,8,1]])","8236db5a":"model_random_forest.score(x,y)","81335c61":"model_svm.score(x,y)","fa455165":"len(y_pred)","a85eb51b":"type(y_pred)","b89dd66f":"from sklearn.tree import DecisionTreeClassifier\nmodel_decision_tree=DecisionTreeClassifier()\nmodel_decision_tree.fit(x,y)","b2789e2a":"model_decision_tree=DecisionTreeClassifier()\nmodel_decision_tree.fit(x,y)","0d60dc9e":"model_decision_tree.score(x,y)","0f9fa579":"y_pred_dt=model_decision_tree.predict(final_test_data)","39829a38":"prediction_dt={'PassengerID':PassengerID,'Survived':y_pred}","6fe6276f":"df_prediction_dt = pd.DataFrame.from_dict(prediction_dt) \ndf_prediction_dt.to_csv (r'titanic_prediction_2.csv',index=False, header=True)","33b9c29e":"# loadint the prediction file\ndf_dt=pd.read_csv('titanic_prediction_2.csv')","5e17a137":"df_dt.head(2)","7fee4296":"len(df_dt)","08516080":"import xgboost as xgb","27917551":"import warnings\nwarnings.filterwarnings('ignore')","33bdbb84":"from xgboost import XGBClassifier\nmodel_xgb=XGBClassifier()\nmodel_xgb.fit(x,y)\nmodel_xgb.score(x,y)","a8e0d44e":"xgb_prediction=model_xgb.predict(final_test_data)","69f2031c":"type(xgb_prediction)","e6e27436":"xgb_prediction[0:5]","d2bc0e80":"df=df.reset_index() then df=df.drop(['index'],axis=1)","ca9388df":"### Decision Tree Model","d1bddcd3":"#### decision tree 2","e84a4175":"### AdaBoost Classifier","b2b892fe":"### WORKING WITH THE TEST DATA","591fe912":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nx=ss.fit_transform(x)"}}