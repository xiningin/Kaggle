{"cell_type":{"84fc8911":"code","ef330db7":"code","e4e626c6":"code","07dcd773":"code","71319419":"code","613ba4e9":"code","7fdc79a8":"code","df38e910":"code","1546f986":"code","24c1e513":"code","348e901b":"code","95461f75":"code","5db7def4":"code","8a3cebc8":"code","6a4e4f05":"code","0bef4bdf":"code","e7a788d9":"code","67abc2cf":"code","b967fb25":"code","60e7f8dc":"code","4ef7307b":"code","8620c52c":"code","0a5b50aa":"code","4b8b450b":"code","3abefc47":"code","6e5985b8":"code","737b3fe1":"code","0df52bcf":"code","b863bfad":"code","47a846d4":"code","354a5d87":"markdown","2f233e18":"markdown","c463e857":"markdown","91599e7d":"markdown","8e51c76b":"markdown","db90c291":"markdown","e3e5ecf0":"markdown","f9490d3c":"markdown","66c6444a":"markdown","88f13a36":"markdown","83aa7b22":"markdown","b35a5ddd":"markdown"},"source":{"84fc8911":"import sys\nimport warnings\n\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\nsns.set_style('darkgrid')\nmatplotlib.rcParams['font.size'] = 14\nmatplotlib.rcParams['figure.figsize'] = (9, 5)\nmatplotlib.rcParams['figure.facecolor'] = '#00000000'\n","ef330db7":"#load IRIS Dataset\n\niris_df = pd.read_csv(\"..\/input\/iriscsv\/iris.csv\")\niris_df = iris_df.rename(columns={\"variety\" : \"species\"})\n\n#you can use scikit or other sources for loading dataset","e4e626c6":"iris_df.shape","07dcd773":"print(iris_df.head())","71319419":"iris_df.info()","613ba4e9":"iris_df.dtypes","7fdc79a8":"#statistics for numeric columns\niris_df.describe()","df38e910":"# No of duplicates in the dataset\niris_df.duplicated().sum() ","1546f986":"iris_df[iris_df.duplicated()] #This shows the actual duplicate rows","24c1e513":"#Checking the balance of dataset\niris_df['species'].value_counts()","348e901b":"#Checking missing values\niris_df.isnull().sum(axis=0)","95461f75":"#Estimating Skewness and Kurtosis\niris_df.skew()\niris_df.kurt()","5db7def4":"#Starting showing plots\nplt.title('Species Count')\nsns.countplot(iris_df['species']);","8a3cebc8":"plt.title('Comparison between sepal width and length')\nsns.scatterplot(iris_df['sepal.length'], iris_df['sepal.width']);","6a4e4f05":"plt.figure(figsize=(16,9))\nplt.title('Comparison between sepal width and length on the basis of species')\nsns.scatterplot(iris_df['sepal.length'], iris_df['sepal.width'], hue = iris_df['species'], s= 50);","0bef4bdf":"plt.figure(figsize=(16,9))\nplt.title('Comparison between petal width and length on the basis of species')\nsns.scatterplot(iris_df['petal.length'], iris_df['petal.width'], hue = iris_df['species'], s= 50);","e7a788d9":"#Visualize all the columns relationship\nsns.pairplot(iris_df,hue=\"species\",height=3);\n","67abc2cf":"#Correlation Between Variables\niris_df.corr()","b967fb25":"fig = plt.figure(figsize = (15,9))\nsns.heatmap(iris_df.corr(), cmap='Blues', annot = True);","60e7f8dc":"cols = ['sepal.width', 'sepal.length', 'petal.width', 'petal.length']\nplt.figure(figsize=(20,4), dpi=100)\ni = 1\nfor col in cols:\n    plt.subplot(1,11,i)\n    sns.distplot(iris_df[col])\n    i = i+1\nplt.tight_layout()\nplt.show()","4ef7307b":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\naxes[0,0].set_title(\"Distribution of Sepal Width\")\naxes[0,0].hist(iris_df['sepal.width'], bins=5);\naxes[0,1].set_title(\"Distribution of Sepal Length\")\naxes[0,1].hist(iris_df['sepal.length'], bins=7);\naxes[1,0].set_title(\"Distribution of Petal Width\")\naxes[1,0].hist(iris_df['petal.width'], bins=5);\naxes[1,1].set_title(\"Distribution of Petal Length\")\naxes[1,1].hist(iris_df['petal.length'], bins=6);\n\n\n","8620c52c":"#Univariate Analysis\nsns.FacetGrid(iris_df,hue=\"species\",height=5).map(sns.distplot,\"petal.width\").add_legend();","0a5b50aa":"sns.FacetGrid(iris_df,hue=\"species\",height=5).map(sns.distplot,\"petal.length\").add_legend();","4b8b450b":"sns.FacetGrid(iris_df,hue=\"species\",height=5).map(sns.distplot,\"sepal.length\").add_legend();","3abefc47":"sns.FacetGrid(iris_df,hue=\"species\",height=5).map(sns.distplot,\"sepal.width\").add_legend();","6e5985b8":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.boxplot(  y=\"petal.width\", x= \"species\", data=iris_df,  orient='v' , ax=axes[0, 0])\nsns.boxplot(  y=\"petal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[0, 1])\nsns.boxplot(  y=\"sepal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[1, 0])\nsns.boxplot(  y=\"sepal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[1, 1])\nplt.show()","737b3fe1":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.violinplot(y=\"petal.width\", x= \"species\", data=iris_df,  orient='v' , ax=axes[0, 0])\nsns.violinplot(y=\"petal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[0, 1])\nsns.violinplot(y=\"sepal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[1, 0])\nsns.violinplot(y=\"sepal.length\", x= \"species\", data=iris_df,  orient='v' , ax=axes[1, 1])\nplt.show()","0df52bcf":"# data without the indexes\ndt = iris_df[iris_df.columns[2:]]\n\n# method : {\u2018pearson\u2019, \u2018kendall\u2019, \u2018spearman\u2019}\ncorr = iris_df.corr(method=\"pearson\") #returns a dataframe, so it can be reused\n\n# eliminate upper triangle for readability\nbool_upper_matrix = np.tril(np.ones(corr.shape)).astype(np.bool)\ncorr = corr.where(bool_upper_matrix)\ndisplay(corr)\n# alternate method: http:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html\n\n# seaborn matrix here\n#sns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n#            square=True, ax=ax)\nsns.heatmap(corr, cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","b863bfad":"#Correlation matrix\n\n# import correlation matrix to see parametrs which best correlate each other\n# According to the correlation matrix results PetalLengthCm and\n#PetalWidthCm have possitive correlation which is proved by the plot above\n\n\ncorr = iris_df.corr()\nsns.heatmap(corr,\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)\n","47a846d4":"#Check correlation 3D\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nX = [iris_df[\"petal.width\"], iris_df[\"petal.length\"]]\nn = 100\nax.scatter(iris_df[\"petal.width\"], iris_df[\"petal.length\"], iris_df[\"sepal.length\"])\n\n\nax.set_xlabel('PetalWidthCm')\nax.set_ylabel('PetalLengthCm')\nax.set_zlabel('SepalLengthCm')\n\nplt.tight_layout(pad=0.5)\nplt.show()","354a5d87":"While the overlapping of species is more intense in the case of sepal_width.\n","2f233e18":"#### Conclusion of EDA ####\n\nThe dataset is balanced i.e. equal records are present for all three species.\n\nWe have four numerical columns while just one categorical column which in turn is our target column.\n\nA strong correlation is present between petal width and petal length.\n\nThe setosa species is the most easily distinguishable because of its small feature size.\n\nThe Versicolor and Virginica species are usually mixed and are sometimes hard to separate, while usually Versicolor has average feature sizes and virginica has larger feature sizes.","c463e857":"## IRIS Dataset EDA ##","91599e7d":"The Highest frequency of sepal width is between 3.0 to 3.5 which is around 70.\n\nThe Highest frequency of sepal length is between 5.5 and 6.0 which is around 35.\n\nThe Highest frequency of petal width is between 0 to 0.5 which is around 50.\n\nThe Highest frequency of petal length is between 0 to 0.5 which is around 50.","8e51c76b":"We see the setosa is easily separable while some portions of Versicolor and virginica are mixed.","db90c291":"The kernel density of the data along with the full distribution of the data is shown through the violin plots. We can see the probability density of the various features","e3e5ecf0":"Further, we see that the box plots describe that the setosa usually has smaller features with few outliers.\n\nThe Versicolor species has average features\n\nThe virginica species has the longest features widths and lengths as compared to others.","f9490d3c":"Interpretation\n\nDiagonal values and upper triangle are ignored (melted the upper triangle through np.tril and df.where).Naturally, we find:\n\na high positive correlation between PetalWidth and PetalLength (0.96)\n\na high positive correlation between PetalLength and SepalLength (0.87)\n\na high positive correlation between PetalWidth and SepalLength (0.81)\n\nAs such, we observe correlations between these main attributes: PetalWidth, PetalLength and SepalLength.\n\nTheory\n\nPCC is:\n\n1 is total positive linear correlation\n\n0 is no linear correlation\n\n\u22121 is total negative linear correlation","66c6444a":"It is the famous Iris dataset which introduced by the British statistician and biologist Ronald Fisher in his 1936 paper \"The use of multiple measurements in taxonomic problems\". The Iris Dataset contains four features (length and width of sepals and petals) of 50 samples of three species of Iris (Iris setosa, Iris virginica and Iris versicolor) The dataset even has a  [wikipedia page](https:\/\/en.wikipedia.org\/wiki\/Iris_flower_data_set)\n\nHere, we try to analyze this famous dataset from different aspects.","88f13a36":"Again we see that on the basis of petal length setosa is separable while the other two are still overlapping.","83aa7b22":"We see it is quite tough to separate the species on the basis of sepal_length alone.","b35a5ddd":"![](https:\/\/camo.githubusercontent.com\/1737290b1066ca9f2f6d3312950c063439311fac48213f178392739487e98afd\/68747470733a2f2f6d616368696e656c6561726e696e6768642e636f6d2f77702d636f6e74656e742f75706c6f6164732f323032312f30332f697269732d646174617365742e706e67)"}}