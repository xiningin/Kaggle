{"cell_type":{"736be0f4":"code","69fe8542":"code","03f38be9":"code","b05c23e1":"code","5f55eda7":"code","f86b0376":"code","96d7751b":"code","9ea74e58":"code","900f80ce":"code","44bdf9e8":"code","d77d7dd3":"code","6536a03f":"code","70e506c3":"code","f6b5d290":"code","8d57b4d6":"code","cfd8b7a6":"code","5c5b5583":"code","30cdfe96":"code","692e4bf3":"code","45abf460":"code","447a6d09":"code","b828d178":"code","81271120":"code","55bc6c38":"code","a2a63d16":"markdown","987a0f62":"markdown","923bfc15":"markdown","568a1e59":"markdown","ffb45351":"markdown","14bb5de6":"markdown","8d32b681":"markdown","ffc76abf":"markdown","b6399931":"markdown","b7941ff5":"markdown","a8989632":"markdown","1290ec1d":"markdown","ecc899bf":"markdown","ffb375c0":"markdown","3400956a":"markdown","689237f8":"markdown","7c4a3049":"markdown","ab489d2f":"markdown","58cc90ee":"markdown","91fde2cc":"markdown","31c0cd5a":"markdown","857e97bc":"markdown","abc115db":"markdown","b94c2f71":"markdown","f4411ee2":"markdown","52581c11":"markdown","5d774a59":"markdown"},"source":{"736be0f4":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","69fe8542":"netflix=pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","03f38be9":"netflix.head(10)","b05c23e1":"netflix.shape","5f55eda7":"netflix.columns","f86b0376":"netflix.isnull().sum()","96d7751b":"netflix.nunique()","9ea74e58":"netflix.duplicated().sum()","900f80ce":"df = netflix.copy()","44bdf9e8":"df.shape","d77d7dd3":"df=df.dropna()\ndf.shape","6536a03f":"df.head(10)","70e506c3":"df[\"date_added\"] = pd.to_datetime(df['date_added'])\ndf['day_added'] = df['date_added'].dt.day\ndf['year_added'] = df['date_added'].dt.year\ndf['month_added']=df['date_added'].dt.month\ndf['year_added'].astype(int);\ndf['day_added'].astype(int);","f6b5d290":"df.head(10)","8d57b4d6":"sns.countplot(netflix['type'])\nfig = plt.gcf()\nfig.set_size_inches(7,7)\nplt.title('Type')","cfd8b7a6":"sns.countplot(netflix['rating'])\nsns.countplot(netflix['rating']).set_xticklabels(sns.countplot(netflix['rating']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Rating')","5c5b5583":"plt.figure(figsize=(10,8))\nsns.countplot(x='rating',hue='type',data=netflix)\nplt.title('Relation between Type and Rating')\nplt.show()","30cdfe96":"labels = ['Movie', 'TV show']\nsize = netflix['type'].value_counts()\ncolors = plt.cm.Wistia(np.linspace(0, 1, 2))\nexplode = [0, 0.1]\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(size,labels=labels, colors = colors, explode = explode, shadow = True, startangle = 90)\nplt.title('Distribution of Type', fontsize = 25)\nplt.legend()\nplt.show()","692e4bf3":"netflix['rating'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.show()","45abf460":"from wordcloud import WordCloud","447a6d09":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.country))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('country.png')\nplt.show()","b828d178":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.cast))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('cast.png')\nplt.show()","81271120":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.director))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('director.png')\nplt.show()","55bc6c38":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.listed_in))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('category.png')\nplt.show()","a2a63d16":"### Rating of shows and movies","987a0f62":"#### Print first 10 values","923bfc15":"#### Convert Date Time format","568a1e59":"### Pie-chart for Rating","ffb45351":"#### Check for NULL Values","14bb5de6":"## Country","8d32b681":"#### Check unique values","ffc76abf":"## Categories","b6399931":"### Relation between Type and Rating","b7941ff5":"## Directors","a8989632":"### Pie-chart for the Type: Movie and TV Shows","1290ec1d":"### Loading the Dataset","ecc899bf":"#### Print the name of columns","ffb375c0":"<h1><font color='orange'>Please Upvote if you found these helpful<\/font><\/h1>","3400956a":"# Data Visualization","689237f8":"#### Drop NULL values","7c4a3049":"<h1 align='center'> Netflix Data Analysis <h1>\n![](https:\/\/www.gizmozones.com\/wp-content\/uploads\/2019\/07\/netflix-icon-wallpaper-66504-68771-hd-wallpapers.jpg)","ab489d2f":"### Importing Libraries","58cc90ee":"#### Shape of the dataset","91fde2cc":"## Cast in the Shows","31c0cd5a":"#### Make a copy of the dataset","857e97bc":"# WordCloud","abc115db":"#### First 10 values","b94c2f71":"No duplicate values present.","f4411ee2":"#### Check for Duplicate values","52581c11":"### Type: Movie and TV Shows","5d774a59":"# Breakdown of this notebook:\n1. **Importing Libraries**\n2. **Loading the dataset**\n3. **Data Cleaning:** \n - Deleting redundant columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - Some Transformations\n4. **Data Visualization:** Using plots to find relations between the features.\n    - Type: Movie and TV Shows\n    - Rating\n    - Relation between Type and Rating\n5. **Word Cloud**\n    - Country\n    - Cast\n    - Director\n    - Category"}}