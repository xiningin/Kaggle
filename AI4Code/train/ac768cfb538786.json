{"cell_type":{"6e03c8e6":"code","6c21d8a4":"code","c359b18c":"code","13bdac30":"code","50e897ae":"code","4eeab71a":"code","2359a5dd":"code","6cbace52":"code","d2f76015":"code","b6f421f5":"code","4e3adbb9":"code","a2080d80":"code","973b4e6c":"code","fca780c0":"code","4b382902":"code","d0df6908":"code","f1ca838a":"code","eb9ffd01":"code","a0c7eeb8":"code","2b016ccb":"code","693c1579":"code","4a5e3a29":"code","ad5e3b3d":"code","ee30e495":"code","ae512637":"code","3b4d13e1":"code","e072bade":"code","39d2723e":"code","163aa352":"code","d4f9d100":"code","a340d5fd":"code","c3803d8a":"code","7e0799f1":"code","5083d3a4":"code","4d5466d4":"code","e9e9df52":"code","07b64918":"code","96675ff9":"code","0b9e2360":"code","907a1814":"code","528b1f59":"code","ee619ec3":"code","443c07ee":"code","5cb331bd":"code","eba2a0d0":"code","79c49ac9":"code","93b9fd6e":"code","8fca775f":"code","456193a0":"code","301a7a1d":"code","da234c29":"code","b4fb7e1d":"code","7cf8a097":"code","1be3338d":"code","1a1934c0":"code","b99f0055":"markdown","662aea10":"markdown","afad193d":"markdown","3e564f84":"markdown","965b3521":"markdown","4294576c":"markdown","da3bb8a4":"markdown","52dadfb9":"markdown","b452ad5a":"markdown","9e4a1d95":"markdown","21cc706c":"markdown","da82f1b6":"markdown","70119882":"markdown","260e764c":"markdown","f1dbe374":"markdown","5d0d2580":"markdown","03d7380b":"markdown","5ccd8ff6":"markdown","4bc66933":"markdown","163e8a31":"markdown","cdb1e470":"markdown","72e99e6f":"markdown","ce7fd1fd":"markdown","66e06ba1":"markdown","39f27d82":"markdown","23ccf95f":"markdown","bad0983a":"markdown","f8936190":"markdown","6cda7ebe":"markdown","5ad7c3e4":"markdown","b2df0d49":"markdown","a3356e3a":"markdown","3bfab48b":"markdown","b803e8a9":"markdown","cae48084":"markdown","965a93cf":"markdown","73799e37":"markdown","04a79a3f":"markdown","fc96c9b2":"markdown","c0db18ce":"markdown","106591b1":"markdown","33732592":"markdown","298dee0f":"markdown","3e8f0b6f":"markdown","e29af0bb":"markdown","4c496562":"markdown","9a68b517":"markdown","9c890b6d":"markdown","0410da63":"markdown","5778b70f":"markdown"},"source":{"6e03c8e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c21d8a4":"data = pd.read_csv('\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')","c359b18c":"def show_the_data(data):\n    data.info()\n    print(\"\\n\\nThe columns are {}\".format(data.columns))\n    print(\"\\n\\nActual Data\\n\",data.head(2))","13bdac30":"def handle_missing_values(col):\n    print('Enter your choice\\n1.Mean\\t2.Median\\t3.Mode')\n    i=int(input())\n    if i ==1:\n        val =data[col].mean()\n    elif i ==2:\n        val = data[col].median()\n    else:\n        val = data[col].mode()[0]\n    data[col] = data[col].fillna(val)","50e897ae":"def categorize(col):\n    numerical,category=[],[]\n    for i in col:\n        if data[i].dtype ==object:\n            category.append(i)\n        else:\n            numerical.append(i)\n    print(\"The numerical features {}:\".format(numerical))\n    print(\"The categorical features {}:\".format(category))\n    return category,numerical","4eeab71a":"def get_correlated(cor):\n    correlated =set()\n    for i in cor.columns:\n        for j in cor.columns:\n            if cor[i][j]>0.7 or cor[i][j]>-0.7 and i!=j:\n                correlated.add(i)\n                correlated.add(j)\n    print(\"The Correlated columns: {}\".format(list(correlated)))\n    return correlated","2359a5dd":"def cat_to_num(data_x,col):\n    dummy = pd.get_dummies(data_x[col])\n    del dummy[dummy.columns[-1]]#To avoid dummy variable trap\n    data_x= pd.concat([data_x,dummy],axis =1)\n    return data_x","6cbace52":"show_the_data(data)","d2f76015":"categorical,numerical =categorize(data.columns)","b6f421f5":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize =(8,8))\ncor = data[numerical].corr()\nsns.heatmap(cor,annot =True)","4e3adbb9":"correlated = get_correlated(cor)","a2080d80":"sns.pairplot(data[correlated])","973b4e6c":"categorical","fca780c0":"plt.figure(figsize =(10,10))\nplt.subplot(2, 1, 1)\nax = sns.distplot(data['total (R$)'],kde =True)\nax.set_xlim(0,1200000)\nax.set_xticks(range(499,1200000,100000))\nplt.subplot(2, 1, 2)\nsns.boxplot(data['total (R$)'])","4b382902":"plt.figure(figsize =(15,5))\nax = sns.rugplot(data['total (R$)'])\nax.set_xlim(0,1200000)\nax.set_xticks(range(499,1200000,100000))","d0df6908":"plt.figure(figsize =(10,10))\nplt.subplot(2, 1, 1)\nax = sns.distplot(data['rent amount (R$)'],kde =True)\nplt.subplot(2, 1, 2)\nsns.boxplot(data['rent amount (R$)'])","f1ca838a":"sns.jointplot(y= data['rent amount (R$)'],x = data['rooms'],kind ='reg')","eb9ffd01":"sns.countplot(data['animal'],hue = data['city'])","a0c7eeb8":"sns.boxplot(data['rent amount (R$)'],y =data['animal'])","2b016ccb":"col = pd.DataFrame(data['city'].unique())\ncol","693c1579":"sns.catplot(x = 'city', y='rooms', data =data)","4a5e3a29":"g = sns.FacetGrid(data, row = 'city')\ng = g.map(plt.hist,'rent amount (R$)')","ad5e3b3d":"plt.subplot(2,1,1)\nsns.distplot(data['bathroom'])\nplt.subplot(2,1,2)\nsns.countplot(data['bathroom'])","ee30e495":"sns.catplot(x ='bathroom', y ='rent amount (R$)', data = data)","ae512637":"plt.figure(figsize=(15,15))\nj =1\nfor i in categorical:\n    plt.subplot(len(categorical),1,j)\n    sns.countplot(data[i])\n    j =j+1","3b4d13e1":"sns.violinplot(x ='furniture', y ='rent amount (R$)', data = data,hue ='city')","e072bade":"plt.figure(figsize =(6,6))\nplt.subplot(2,1,1)\nax = sns.regplot(data['parking spaces'],data['rent amount (R$)'])\nplt.subplot(2,1,2)\nsns.distplot(data['parking spaces'],kde =False)","39d2723e":"sns.violinplot(x ='city', y ='fire insurance (R$)', data = data,hue ='city')","163aa352":"ax = sns.regplot(data['fire insurance (R$)'],data['rent amount (R$)'])","d4f9d100":"sns.jointplot(y= data['rent amount (R$)'],x = data['property tax (R$)'],kind ='reg')","a340d5fd":"Wantedcolumns = ['fire insurance (R$)','parking spaces','rent amount (R$)','rooms','total (R$)','city','furniture','animal']","c3803d8a":"data_x = data[Wantedcolumns]","7e0799f1":"data_x.info()","5083d3a4":"for i in data_x.columns:\n    if data_x[i].dtype == object:\n        print(i)\n        data_x =cat_to_num(data_x,i)","4d5466d4":"data_x.info()","e9e9df52":"data_x.drop(['city','furniture','animal'],axis =1,inplace =True)","07b64918":"data_x.info()","96675ff9":"data_x.describe()","0b9e2360":"y = data_x['rent amount (R$)']\nx = data_x.drop(['rent amount (R$)'],axis =1)","907a1814":"y.describe()","528b1f59":"x.info()","ee619ec3":"from sklearn.model_selection import train_test_split as tts\nX_train,X_test,y_train,y_test = tts(x,y,test_size =0.3)","443c07ee":"acc=[]","5cb331bd":"from sklearn.tree import DecisionTreeRegressor as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nfrom sklearn.metrics import r2_score\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['DTR',r2_score(y_test,model.predict(X_test))])","eba2a0d0":"!pip install pydotplus\nfrom sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nfrom sklearn.tree import export_graphviz\nimport pydotplus\ndot_data = StringIO()\nexport_graphviz(model, out_file=dot_data,  \n                filled=True, rounded=True,\n                special_characters=True)\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue()) \nplt.figure(figsize=(100,70))\nImage(graph.create_png())","79c49ac9":"from sklearn.ensemble import RandomForestRegressor as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['RFN',r2_score(y_test,model.predict(X_test))])","93b9fd6e":"from sklearn.linear_model import LinearRegression as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['LIR',r2_score(y_test,model.predict(X_test))])","8fca775f":"from sklearn.svm import SVR as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['SVM',r2_score(y_test,model.predict(X_test))])","456193a0":"from sklearn.neighbors import KNeighborsRegressor as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['KNNR',r2_score(y_test,model.predict(X_test))])","301a7a1d":"from sklearn.linear_model import Lasso as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['LaR',r2_score(y_test,model.predict(X_test))])","da234c29":"from sklearn.linear_model import Ridge as regr\nmodel =regr()\nmodel.fit(X_train,y_train)\nprint(r2_score(y_test,model.predict(X_test)))\nacc.append(['RiR',r2_score(y_test,model.predict(X_test))])","b4fb7e1d":"acc.sort(key = lambda y:y[1],reverse =True)","7cf8a097":"acc","1be3338d":"from sklearn.ensemble import RandomForestRegressor as regr\nmodel =regr()\nmodel.fit(X_train,y_train)","1a1934c0":"ax1 = sns.distplot(y_test,hist=False,kde =True,color =\"r\",label =\"Actual Value\")\nsns.distplot(model.predict(X_test),color =\"b\",hist = False,kde =True, label = \"Preicted Value\",ax =ax1)","b99f0055":"# Lasso Regression","662aea10":"Non-Furnished homes are more costly and they are highly opted!!!<br\/>\nSao Paulo is the city with more non-furnitured houses","afad193d":"This is quite interesting the number of rooms does  have a great impact in the rent and it is also astonishing to see that the highest rent is given to 3 Roomed house\nWe can finally came to a conclusion that when the room is more than 2, the rent increases...","3e564f84":"![image.png](attachment:image.png)","965b3521":"# Does the people are looking for more bathrooms? (Silly Right)","4294576c":"# Significance of No of Rooms with the Total Rent ","da3bb8a4":"# Linear Regression","52dadfb9":"# SVM Regression","b452ad5a":"Mostly the range is in between 450 -10000<br\/>\nThe Data is Right Skewed<br\/>\nPotential outliers are there which are more than 10000<br\/>\nThe minimum rent is 450<br\/>\nThe maximum rent is 45000<br\/>\n","9e4a1d95":"# Random Forest Regression","21cc706c":"# Decision Tree Regression","da82f1b6":"![image.png](attachment:image.png)","70119882":"<b>Interesting fact is that the highest rent is given to the house with 7 bathrooms(What!!!!!)<\/b>","260e764c":"# What about pets?","f1dbe374":"![image.png](attachment:image.png)","5d0d2580":"# Does furnishing impact in the rent?","03d7380b":"# Statistical Description of the data on which we are going to do perdictive analysis","5ccd8ff6":"Sao Paulo are mostly accepting pets and mostly all the other cities are also accepting the pets and if you see the ratio of pet acceptance to non acceptance in all the cities its nearly 70:30","4bc66933":"# What about Fire Insurance?","163e8a31":"There is very less correlation between the parking spaces and the rent amount and mostly people are choosing houses with 0 to 2 parking spaces","cdb1e470":"Welcome everyone to this notebook,this is my third notebook and in this I'm going to explain you about my own way of performing data analysis. The dataset I'm using is brasilian-houses-to-rent from kaggle.To say more about the process I can include that I'm going to use python language and libraries which i'm going to use are seaborn,numpy,pandas,matplotlib and scikit learn.","72e99e6f":"# City and the rooms","ce7fd1fd":"# I really convey my sincere gratitude to all who viewed my kernal and please upvote it, then only aspiring data scientist like me can achieve more...<br\/>\n# <center>If you have any query post it in comment section...<center>","66e06ba1":"Nature of the data:<br\/>\n1.Right Skewed<br\/>\n2.Having potential outliers after 100000($)<br\/>\n3.Most of the values fall within the range 499 -100000","39f27d82":"# Different Algorithms and their performance","23ccf95f":"# Ridge Regression","bad0983a":"# How rent amount is distributed","f8936190":"To see the total column more clearly see the plot given below this confirms our inference about the data","6cda7ebe":"There is very high correlation with Fire Insurance amount and the rent amount, if the fire insurance is more then the rent will also be more and vice versa","5ad7c3e4":"**The overlapping of two curves tells about the higher accuracy of our model (99%)**","b2df0d49":"* S\u00e3o Paulo is highly opted for rental house the reason may be availability of more room and allowance of having pets as we seen in former analysis<br\/>\n* Campinas is lessly opted for rental house","a3356e3a":"# Visualising the Decision Tree","3bfab48b":"# Does the city has to do any thing with rent?","b803e8a9":"# As the Random Forest Regressor tops the list we will use it as our final model!!!!","cae48084":"Nope!!!\n* Mostly they are looking for only one or two bathrooms\n* There are also quite a number of people who prefer (3-5) bathrooms\n* There are very little amount people who looks for more than 5 bathrooms","965a93cf":"# Whats the relationship between parking spaces and the total rent?","73799e37":"# What about the impact of property tax in the rent?","04a79a3f":"# Let's create our own helper functions\n![image.png](attachment:image.png)","fc96c9b2":"# Predictive analysis of Rent using\n* Decision Tree Regression\n* Random Forest Regression\n* Linear Regression\n* SVM Regression\n* K Nearest Neighbour Regression\n* Lasso Regression\n* Ridge Regression","c0db18ce":"SaoPaulo is the city which has more fire insurance amount followed by Porto Alegre, Belo Horizonte, Rio De Janerio and atlast Campinas","106591b1":"Data Analysis is all about finding some intersting insights in the data and we can find more insight by asking more questions and here I'm going to find some interesting insights in the data by asking the following questions:\n* How total(price of house) is distributed?\n* How rent amount is distributed?\n* Significance of No of Rooms with the Rent\n* What about pets?\n* City and the rooms\n* Does the city has to do any thing with rent?\n* Does the people are looking for more bathrooms? (Silly Right)\n* Does furnishing impact in the rent?\n* Whats the relationship between parking spaces and the total rent?\n* What about Fire Insurance?\n* What about the impact of property tax in the rent?\nFinally we will create a machine learning model to perform predictive analysis. I can assure that this is gonna be very interesting stuff...\nLet's Start----->","33732592":"# Getting the intution about all the categorical features","298dee0f":"# How total is distributed?","3e8f0b6f":"Mostly the house which allows pets are more costly compared to house that doesn't allows pet and there there is some relationship between animal acceptance and total rent","e29af0bb":"![image.png](attachment:image.png)","4c496562":"![image.png](attachment:image.png)","9a68b517":"<b>!!!!!!!!!!!!!!!!!!!!LITERALLY NO IMPACT AT ALL!!!!!!!!!!!!!!!!!!!!!!!!!!<\/b>","9c890b6d":"# K Nearest Neighbour Regression","0410da63":"* Rio de Janeiro is the city which has the maxmimum no.of rooms in a house(upto 12 Rooms)\n* Then comes S\u00e3o Paulo and Belo Horizonte which has upto 10 Roomed houses\n* Campinas has upto 7 Roomed houses\n\n","5778b70f":"![image.png](attachment:image.png)"}}