{"cell_type":{"f2c94b00":"code","c3b63d3c":"code","15e2a948":"code","de68f24d":"code","b2732587":"code","bc223eb4":"code","029bb8ad":"code","0f7b004c":"code","6e3858a6":"code","07db6e5c":"code","c5c02641":"code","88d90d29":"code","338526ce":"code","f3da0ccd":"code","b12b07f3":"code","1b311ed9":"code","736962e2":"code","b2d10229":"code","bd921dae":"code","42e7da86":"code","2a14e784":"code","0ee1b1ca":"code","76850fd3":"code","6a4425be":"code","349ab83f":"code","98b95cdb":"code","963b506c":"code","7718a922":"code","ecb688a1":"code","0259ddbf":"code","10d54ca5":"code","5558c369":"code","28a6c0c6":"code","1bc9decf":"code","757b0870":"code","797edbfd":"code","8a6a85f7":"code","5a7fd875":"code","3b8f9119":"code","e13758f5":"markdown","033ddf7f":"markdown","ddd0d2f3":"markdown","5dd83637":"markdown","a2531c0c":"markdown","8e2b6afd":"markdown","27ace3c1":"markdown","9d0fce06":"markdown","037ffa1c":"markdown","fb1ed233":"markdown","85909f53":"markdown","59fcd473":"markdown","8ad3228e":"markdown","cb5f4a97":"markdown","37de553d":"markdown","a1438411":"markdown","736f8cc9":"markdown","b8bd85ee":"markdown","2ca07999":"markdown","77ad7511":"markdown","b67900a1":"markdown","79aedbe0":"markdown","371fde37":"markdown","5e361105":"markdown","9f9c5f9d":"markdown","f476d599":"markdown","113af5be":"markdown","f800428f":"markdown","d9f8401e":"markdown","600269a8":"markdown","af015c58":"markdown"},"source":{"f2c94b00":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.tsa.arima_model import ARIMA","c3b63d3c":"weather = pd.read_csv('..\/input\/delhi-weather-data\/testset.csv')","15e2a948":"weather.head(5)","de68f24d":"weather.tail(5)","b2732587":"weather_df = weather[['datetime_utc', ' _conds', ' _hum', ' _tempm']]","bc223eb4":"weather_df.head()","029bb8ad":"weather_df = weather_df.rename(columns={' _conds': 'condition', ' _hum': 'humidity', ' _tempm': 'temperature'})","0f7b004c":"weather_df.head()","6e3858a6":"weather_df.shape","07db6e5c":"weather_df.info()","c5c02641":"weather_df.duplicated().sum()","88d90d29":"from datetime import datetime\nweather_df['datetime_utc']=pd.to_datetime(weather_df['datetime_utc'],infer_datetime_format=True)","338526ce":"weather_df.info()","f3da0ccd":"weather_df = weather_df.set_index('datetime_utc',inplace=False)","b12b07f3":"weather_df.head()","1b311ed9":"sns.heatmap(weather_df.isnull(), cbar=False)","736962e2":"import missingno as msno\nmsno.matrix(weather_df)","b2d10229":"msno.heatmap(weather_df)","bd921dae":"weather_df.ffill(inplace=True)","42e7da86":"weather_df.isnull().sum()","2a14e784":"weather_df['condition'].value_counts().sort_index()","0ee1b1ca":"plt.figure(figsize=(10,5))\nplt.title('Delhi Weather Condition', fontsize=14)\nplt.xlabel(\"Weather\", fontsize=12)\nplt.ylabel(\"Count\", fontsize=12)\nplt.xticks(rotation=90, fontsize=12)\nplt.yticks(fontsize=12)\nsns.countplot(x = \"condition\", data = weather_df, palette='magma', order=weather_df[\"condition\"].value_counts().index)","76850fd3":"weather_time_df = weather_df[['temperature']]\nweather_time_df.head()","6a4425be":"weather_time_df=weather_time_df.resample('D').mean()","349ab83f":"weather_time_df.isna().sum()","98b95cdb":"weather_time_df.fillna(weather_df['temperature'].mean(),inplace=True)","963b506c":"weather_time_df.isna().sum()","7718a922":"weather_time_df.head()","ecb688a1":"weather_time_df.tail()","0259ddbf":"plt.figure(figsize=(10,5))\nplt.xlabel('Date')\nplt.ylabel('Temperature')\nplt.plot(weather_time_df)","10d54ca5":"def test_stationarity(timeseries):\n    \n    #Determine rolling statistics\n    movingAverage = timeseries.rolling(window=12).mean()\n    movingSTD = timeseries.rolling(window=12).std()\n    \n    #Plot rolling statistics\n    plt.figure(figsize=(10,5))\n    plt.plot(timeseries, color='blue', label='Original')\n    plt.plot(movingAverage, color='red', label='Rolling Mean')\n    plt.plot(movingSTD, color='black', label='Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show(block=False)\n    \n    #Perform Dickey\u2013Fuller test:\n    print('Results of Dickey Fuller Test:')\n    weather_test = adfuller(timeseries['temperature'], autolag='AIC')\n    dfoutput = pd.Series(weather_test[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in weather_test[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print(dfoutput)","5558c369":"test_stationarity(weather_time_df)","28a6c0c6":"lag_acf = acf(weather_time_df.diff().dropna().values, nlags=20)\nlag_pacf = pacf(weather_time_df.diff().dropna().values, nlags=20, method='ols')","1bc9decf":"#Plot ACF:\nplt.subplot(121)\nplt.plot(lag_acf)\nplt.axhline(y=0, linestyle='--', color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(weather_time_df.diff().values)), linestyle='--', color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(weather_time_df.diff().values)), linestyle='--', color='gray')\nplt.title('Autocorrelation Function')            \n\n#Plot PACF\nplt.subplot(122)\nplt.plot(lag_pacf)\nplt.axhline(y=0, linestyle='--', color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(weather_time_df.diff().values)), linestyle='--', color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(weather_time_df.diff().values)), linestyle='--', color='gray')\nplt.title('Partial Autocorrelation Function')\n            \nplt.tight_layout()","757b0870":"model = ARIMA(weather_time_df, order=(1,0,1))\nresults_ARIMA = model.fit(disp=-1)\nplt.plot(weather_time_df.diff())\nplt.plot(results_ARIMA.fittedvalues, color='red')\nplt.title('RSS: %.4f'%sum((results_ARIMA.fittedvalues - weather_time_df.diff()['temperature'])**2))\nprint('Plotting ARIMA model')","797edbfd":"predictions_ARIMA_diff = pd.Series(results_ARIMA.fittedvalues, copy=True)\npredictions_ARIMA_diff.head()","8a6a85f7":"predictions_ARIMA_diff_cumsum = predictions_ARIMA_diff.cumsum()\npredictions_ARIMA_diff_cumsum.head()","5a7fd875":"plt.figure(figsize=(10,5))\nplt.plot(weather_time_df)\nplt.plot(predictions_ARIMA_diff)","3b8f9119":"results_ARIMA.plot_predict(1,312)","e13758f5":"**Loading the basic libraries**","033ddf7f":"### **Data Analysis**","ddd0d2f3":"**From the above graph the mean values are correlating with the actual values and the standard deviation does not seem to vary. Also, Test statistic is less than Critical Values, so we already have STATIONARY Time Series. So our 'd' value will become 0 in ARIMA Model.**","5dd83637":"# **Delhi Weather Forecasting**\n\nTime series analysis is a statistical method to analyse the past data within a given duration of time to forecast the future. It comprises of ordered sequence of data at equally spaced interval.To understand the time series data & the analysis let us consider an example. Consider an example of Airline Passenger data. It has the count of passenger over a period of time.","a2531c0c":"### **Time Series Analysis**","8e2b6afd":"![](https:\/\/t3.ftcdn.net\/jpg\/00\/01\/66\/00\/240_F_1660067_xxydIbG3DNgq8IblPi12hM9oydvakY.jpg)","27ace3c1":"My Other Notebook On Time Series:\n* Air Passengers: https:\/\/www.kaggle.com\/sunaysawant\/air-passengers-time-series-arima\n* Electricty power Consumption: https:\/\/www.kaggle.com\/sunaysawant\/power-consumption-time-series-arima","9d0fce06":"**Look at the above plot, it is really so bad that mostly Delhi has Hazy and Smoky weather conditions, it shows the level of pollution city has.**","037ffa1c":"**So, here we have cleaned the data.**","fb1ed233":"### **Predictions**","85909f53":"**From the above graph the mean values are correlating with the actual values and the standard deviation does not seem to vary.**","59fcd473":"# **Thank You :D**","8ad3228e":"**So above plots shows that we do have some seasonality but there is no trend. Let's check rolling statistics. Also, perform the ADCF test(Dickey-Fuller Test)**","cb5f4a97":"### **Plotting ACF & PACF**","37de553d":"**Now, let's set datetime_utc column as index**","a1438411":"### **AR+I+MA = ARIMA Model**\nMaking order = (2,1,2)","736f8cc9":"**Let's plot the data**","b8bd85ee":"We have 252 (existing data of 21 yrs in months) data points. Now, we can to forecast for additional 5 yrs (5x12 months=60 data points).\n\n252+60 = 312 records\/data points","2ca07999":"### **Exploratory Data Analysis**","77ad7511":"Not many values are missing, but it will still be great to fill the missing ones instead of removing entire row.","b67900a1":"**Let's rename few columns for our better understanding**","79aedbe0":"**Loading Delhi Weather data set**","371fde37":"**From Data Analysis:**\n\n1. Extracted data contains 100990 records and 4 columns. \n2. There are null records present in condition, humidity and temperature columns. We'll need to remove them\n3. We need to convert datatype of datetime_utc column.\n4. We will need to index datetime_utc column.\n5. Also, there are no duplicate values are present","5e361105":"**Let's convert datatype of datetime column**","9f9c5f9d":"**From above plot, we can see that our predicted forecasts are very close to the real time series values. It also indicates a fairly accurate model.**","f476d599":"**Let's analyze the missing values now**","113af5be":"**We have to predict the temperature of Delhi, so, let's drop condition & humidity column.**","f800428f":"**Here we are going to consider only few of the columns which seems important for us to perform some basic EDA and time series prediction's point of view.**","d9f8401e":"**From the ACF graph, we can see that curve touches y=0.0 line at x=1. Thus, from theory, Q = 1 From the PACF graph, we see that curve touches y=0.0 line at x=1. Thus, from theory, P = 1**","600269a8":"**Let's check first 5 and last 5 records of data set**","af015c58":"As the capital city of India, Delhi is subject to a high level of pollution year-round. The levels of fine and coarse particulate matter, known respectively as PM2.5 and PM10 are often prevalent in the air, as well as other forms of pollutants and toxic chemicals finding their way into the atmosphere, each with their own detrimental effects on human health. There are an estimated 30.2 million people registered living in Delhi as of 2020, all squeezed into a relatively small area of 1,484km\u00b2, giving it an extremely high population density.\n\nHere in the notebook today, we are going to forecast Delhi Weather with given sample data."}}