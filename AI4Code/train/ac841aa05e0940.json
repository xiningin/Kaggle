{"cell_type":{"6158bcd2":"code","18832d10":"code","6648989c":"code","e06e7ae3":"code","2a0fcbda":"code","23e62333":"code","b0631417":"code","4b52baa9":"code","85a1dadc":"code","f9ba5945":"code","a9680a71":"code","b249f8f3":"code","e889b825":"code","121fe417":"code","969c4a0c":"code","35f42a06":"code","ead1bf3b":"code","8129d0ae":"code","5389dccb":"code","383fd8ae":"code","7a944f81":"code","2d4d8d48":"code","2d64a1eb":"code","7661a6e6":"code","e5b01a9c":"code","f6f3c884":"code","fd1e0798":"code","0878c5ce":"code","1514386c":"code","811f7b5e":"code","be6802f7":"code","cdba3979":"code","305941d7":"code","7be3afb0":"code","ce4f903a":"code","20e74068":"code","2bb69197":"code","ef09f365":"code","610ab2eb":"code","fb90f3fa":"code","6bcd9b96":"markdown","5a8cd434":"markdown","2d2f7e2b":"markdown","b2a24c51":"markdown","739c3a4f":"markdown","e092a944":"markdown","a500dd0d":"markdown"},"source":{"6158bcd2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18832d10":"# Dataset do Folha de SP\nnews = pd.read_csv('..\/input\/news-of-the-site-folhauol\/articles.csv')\n","6648989c":"# Nosso Forms\nseLiga = pd.read_csv('..\/input\/consumo-de-notcias-entre-os-jovens\/forms_response.csv.csv')","e06e7ae3":"news.head()","2a0fcbda":"seLiga.head()","23e62333":"# Dataframe Do Folha\ndata = pd.DataFrame(news.dtypes)\nprint(data)","b0631417":"# Dataframe Do Forms\nseLigaDf = pd.DataFrame(seLiga.dtypes)\nprint(seLigaDf)","4b52baa9":"# Nan no nosso Foms\nseLigaDf['Faltando'] = seLiga.isnull().sum()\nseLigaDf","85a1dadc":"# Nans no Folha\ndata['Faltando'] = news.isnull().sum()\ndata","f9ba5945":"# Valores Unicos no Folha\ndata['Identificadores'] = news.nunique()\ndata","a9680a71":"# Valores Unicos no nosso Forms\nseLigaDf['Identificadores'] = seLiga.nunique()\nseLigaDf","b249f8f3":"data['Total'] = news.count()\ndata","e889b825":"# Total de valores no nosso forms\nseLigaDf['Total'] = seLiga.count()\nseLigaDf","121fe417":"#Adicionando o nome tipo a coluna 0 no nosso dataframe de visualiza\u00e7\u00e3o incial\nseLigaDf = seLigaDf.rename(columns={0:'Tipo'})\nseLigaDf","969c4a0c":"#Adicionando o nome tipo a coluna 0 no nosso dataframe de visualiza\u00e7\u00e3o incial\ndata = data.rename(columns={0:'Tipo'})\ndata","35f42a06":"news.head()","ead1bf3b":"news = news.drop(columns=['subcategory'])","8129d0ae":"categories = news.category.value_counts().reset_index()\nprint(categories)","5389dccb":"seLiga.head()","383fd8ae":"seLiga.columns = [\"Timestamp\",'Age', \"snf\", 'where', 'how', 'frequency', 'share', 'if share where']\n# sns = see news freqently\nseLiga","7a944f81":"where = seLiga['where'].apply(pd.Series)\nwhere","2d4d8d48":"where = where.transpose()\nwhere","2d64a1eb":"seLiga['where']","7661a6e6":"whereCount = {}\nfor line in seLiga['where']:\n    # print(line)\n    values = line.split(';')\n    for font in values:\n        if (font in whereCount):\n            whereCount[font] += 1\n        else:\n            whereCount[font] = 1\n    # print('values', values)\nfor key, value in whereCount.items():\n    print(\"%s : %d\"%(key, value))","e5b01a9c":"whereCount\n","f6f3c884":"seLiga['if share where'].fillna(\"empty\", inplace=True)\nseLiga","fd1e0798":"validKeys = ['whatsapp', \"instagram\", 'whatsapp', 'twitter']\n\nshare = {}\nfor line in seLiga['if share where']:\n    # print(line)\n    if (line != 'empty'):\n        words = line.split(' ')\n        # print(words)\n        for word in words:\n            if (word.lower() in validKeys):\n                if (word.lower() in share):\n                    share[word.lower()] += 1\n                else:\n                    share[word.lower()] = 1\nshare","0878c5ce":"seLiga = seLiga.drop(columns=['if share where', 'Timestamp'])\nseLiga","1514386c":"# sns.boxplot(x='Age', y='where', data=seLiga)\nax = sns.barplot(x='Age',y='where', data=seLiga)","811f7b5e":"ax = sns.barplot(x='Age', y='how', data=seLiga)","be6802f7":"ax = sns.barplot(x='Age', y='snf', data=seLiga)","cdba3979":"snf_map = {\n    \"Sim\":1,\n    \"N\u00e3o\":0,\n}\nseLiga = seLiga.replace({'snf':snf_map})\nseLiga['snf']","305941d7":"how_map = {\n    'Vejo o que aparece': 0,\n    'Vou atr\u00e1s de not\u00edcias diariamente': 1,\n    'Vejo o que me interessa': 2,\n    'Me informo de tudo': 3,\n}\nseLiga = seLiga.replace({'how':how_map})\nseLiga['how']","7be3afb0":"frequency_map = {\n    'Todo dia':0,\n    'Quando preciso me informar':1,\n    'V\u00e1rias vezes ao dia':2,\n    'Algumas vezes na semana':3,\n    'O m\u00ednimo poss\u00edvel':4,\n    'Esporadicamente':5,\n}\nseLiga = seLiga.replace({'frequency':frequency_map})\nseLiga['frequency']","ce4f903a":"share_map = {\n    'Sim': 1,\n    'N\u00e3o': 0,\n    'As vezes': 2,\n}\nseLiga = seLiga.replace({'share':share_map})\nseLiga['share']","20e74068":"seLiga","2bb69197":"seLigan = seLiga.drop(columns=['where'])\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nseLigan[['Age', 'snf', 'how', 'frequency', 'share']] = scaler.fit_transform(seLigan[['Age', 'snf', 'how', 'frequency', 'share']])\nprint('feito')","ef09f365":"seLiga","610ab2eb":"ax = sns.barplot(x='snf', y='where', data=seLiga)","fb90f3fa":"import seaborn as sns\n\nf, ax = plt.subplots(figsize=(10, 8))\ncorr = seLiga.corr()\nsns.heatmap(corr,\n            mask=np.zeros_like(corr, dtype=np.bool), \n            cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax, annot=True)","6bcd9b96":"# Pr\u00f3ximos Passos\n## Segunda An\u00e1lise\nFazer um forms, coletando informa\u00e7\u00f5es de quais noticias eles consomem, comsumiriam, tipos de noticia, sobre o que \u00e9 a noticia, de quem consome.\\\nEx: \\\nConsome, Games, Lan\u00e7amentos, DavyJones\\\nConsumiria, Tech, Benchmark, LinusTechTips\\\nConumiria, Entrevista, Podcast, FlowPodcast","5a8cd434":"# Imports","2d2f7e2b":"\n# Heapmap de correla\u00e7\u00e3o\n","b2a24c51":"# Where\n![image.png](attachment:1068399d-affe-4c4e-b5ec-9cac8ae1675d.png)\n# How\n![image.png](attachment:fedcd981-26c6-4588-9544-c2c5c5281f7b.png)","739c3a4f":"# Loads","e092a944":"# Tratamento B\u00e1sico","a500dd0d":"# Visualiza\u00e7\u00e3o inicial"}}