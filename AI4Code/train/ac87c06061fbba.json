{"cell_type":{"73013818":"code","08fd2cd5":"code","d2489129":"code","002fb529":"code","6a679fef":"code","e361bdd2":"markdown"},"source":{"73013818":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","08fd2cd5":"#lets try to convert y value for n=4 equal states\ny=6.8\nn=4\ny_rest=y%1\nprint('y_rest=',y_rest)","d2489129":"part_size=1\/n\npart_number=y_rest\/\/part_size\nprint('part_number=',part_number)\n","002fb529":"#write as function\n\ndef continous2discrete(y_con,n):\n    y_rest=y_con%1\n    part_size=1\/n\n    part_number=y_rest\/\/part_size\n    return int(part_number)","6a679fef":"action=continous2discrete(-1.13,n=6)\nprint('action=',action)","e361bdd2":"Lets assume we have continous value y form space (-inf, + inf) and we wannt to convert it to discrete  n states, we want to split ininite area to equal ranges  it means that probability od each state is the same.\n\n(-inf, + inf) ---> {x1,x2,x3,...,xn}\n\nWe can interprete continous value as number of rotation around point (0,0).\n\nExample:\n7.2 - means 7.2 rotation in clockwise direction\n-3.2 -means 3.2 rotation in counter-clockwise direction \n\nNow we san split circle to n - states, for example:\naction 0 - 'up' part 0\naction 1 - 'left' part 1\naction 2 - 'down' part 2\naction 3 - 'right' part 3\n"}}