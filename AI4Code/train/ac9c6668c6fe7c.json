{"cell_type":{"b03a168f":"code","2397733f":"code","34ea1a5a":"code","d93745a5":"code","a8bb1fdc":"code","f8ccefe0":"code","b8b1ef9d":"code","fede0121":"code","40927f97":"code","d8db5652":"code","c129c05e":"code","15571a65":"code","29eedfa6":"code","ef9f7452":"code","36a0295a":"code","3e02d049":"code","4f7bdb49":"code","2ebba031":"markdown","9116153c":"markdown","de8baa5f":"markdown","1a48813e":"markdown","dee9dcab":"markdown","a7aab09d":"markdown","7ed1fe03":"markdown","e9c40be0":"markdown","e2c5d576":"markdown","767d0924":"markdown","36e5486f":"markdown","2c4167c7":"markdown","2571cd27":"markdown","60cae125":"markdown","6bc846ec":"markdown","6bb56554":"markdown"},"source":{"b03a168f":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","2397733f":"df = pd.read_excel('..\/input\/random-time-series-data\/ts_data.xlsx')\ndf.head()","34ea1a5a":"df.shape","d93745a5":"df.isnull().sum()","a8bb1fdc":"df['Value'].plot()","f8ccefe0":"from statsmodels.tsa.stattools import adfuller\n\ndef adfuller_test(Value):\n    result = adfuller(Value)\n    labels = ['ADF test statistics', 'P-value', '#Lags used', 'Number of observation used']\n    for value, label in zip(result, labels):\n        print(label+' : '+str(value))\n    if result[1] <= 0.05:\n        print('Strong evidence against the null hypothesis (Ho), Reject the null hypothesis, Data has no unit root and is stationary')\n    else:\n        print('Weak evidence against the null hypothesis (Ho), time series has a unit root, indicating it is non stationary. ')\n        \n        \nadfuller_test(df['Value'])","b8b1ef9d":"from statsmodels.graphics.tsaplots import plot_pacf\nplot_pacf(df['Value'], lags=10)","fede0121":"df['Value_shifted_1'] = df['Value'].shift(1)\ndf.head(3)","40927f97":"df.drop('Time', axis = 1, inplace = True)\ndf.head(3)","d8db5652":"df.dropna(inplace = True)\ndf.head(3)","c129c05e":"X = df.Value_shifted_1.values\ny = df.Value.values","15571a65":"X = X.reshape(-1, 1)\ny = y.reshape(-1, 1)","29eedfa6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 2)","ef9f7452":"lr1 = LinearRegression()\nmodel = lr1.fit(X_train, y_train)","36a0295a":"y1_pred = lr1.predict(X_test)","3e02d049":"plt.plot(y_test[-10:], label=\"Actual Values\", color = 'Green', marker = 'o')\nplt.plot(y1_pred[-10:], label=\"Predicted Values\", color = 'Red', marker = 'x')\nplt.legend()\nplt.show()","4f7bdb49":"from sklearn.metrics import r2_score\n\nprint(r2_score(y_test, y1_pred).round(4))","2ebba031":"## Dickey fukker test to see whether the dataset is stationary or not\nAs the P-value is less than 0.005, the dataset is stationary!","9116153c":"## Train test splitting","de8baa5f":"## Missing vcalues checking","1a48813e":"## Making the dataset concise","dee9dcab":"## Plotting the actual and predicted values\nFor making the plot readable, I only took last 10 values.","a7aab09d":"## Model Build UP","7ed1fe03":"## Choose lagged value as one","e9c40be0":"<br\/>\n<br\/>\n\n**Feel free to share your thoughts and if you find it helpful please upvote. It will keep me motivated. Thanks!**","e2c5d576":"## Plotting PACF","767d0924":"## Importing libraries","36e5486f":"## PLot the time series data","2c4167c7":"## Prediction","2571cd27":"## Reshaping X and y","60cae125":"## Shape of the dataset","6bc846ec":"## Splitting into X and y","6bb56554":"## Load the dataset"}}