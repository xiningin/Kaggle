{"cell_type":{"2f06a4e8":"code","1f2ffb43":"code","079d3d17":"code","d52700a0":"code","7d1e9882":"code","400d3120":"code","e58ac711":"code","1ecb30f9":"code","0aeebf3d":"code","0d42f41d":"code","6c1d2c29":"code","6c59b235":"code","29a24869":"code","3b660d56":"code","a562f9d3":"code","6deadd74":"code","669fb73b":"code","56f317f4":"code","21e92186":"code","2efc94c6":"code","c7fec86f":"code","84528807":"code","abd93442":"code","5ae3fc92":"code","ccf78a72":"code","62bfa88a":"code","7397d276":"code","66e2aaa0":"code","76400d60":"code","84c9f5c5":"code","37847350":"markdown","d00ece1b":"markdown","6a920749":"markdown","38d07eb6":"markdown","dacc4b66":"markdown","8e99a46a":"markdown","d0919efb":"markdown","58cf5d79":"markdown","926afcca":"markdown","57a6d432":"markdown","50eb40f1":"markdown","3269de07":"markdown","253cca03":"markdown","44e06a07":"markdown","19a1c9e9":"markdown","9584bf8d":"markdown","21963e41":"markdown","85530da2":"markdown","f1af1918":"markdown","087eaa52":"markdown","c7ed0b09":"markdown","ea47279e":"markdown","7153e9b6":"markdown","4bd46d23":"markdown","6b40be92":"markdown"},"source":{"2f06a4e8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings('ignore')","1f2ffb43":"MATH = '..\/input\/student-alcohol-consumption\/student-mat.csv'\n\ndataset = pd.read_csv(MATH)\ndataset.head()","079d3d17":"dataset.isna().sum()","d52700a0":"def create_plot(n: int, m: int, size: tuple = (12, 5)): \n    fig, ax = plt.subplots(n, m, figsize=size)\n    return fig, ax","7d1e9882":"fig, ax = create_plot(1, 2)\n\nsns.histplot(dataset['Dalc'], ax=ax[0])\nsns.histplot(dataset['Walc'], ax=ax[1])\nplt.show()","400d3120":"daily = dataset[dataset['Dalc'] >= 3.0]\nweekly = dataset[dataset['Walc'] >= 3.0]\n\ndaily_count = len(daily)\nweekly_count = len(weekly)\n\np_daily = np.round((daily_count \/ len(dataset)) * 100)\np_weekly = np.round((weekly_count \/ len(dataset)) * 100)\n\nprint(f'{p_daily}%, {p_weekly}%')","e58ac711":"fig, ax = create_plot(1, 2)\n\nsns.histplot(daily['age'], ax=ax[0], kde=True)\nsns.histplot(weekly['age'], ax=ax[1], kde=True)\nplt.show()","1ecb30f9":"daily_mean = np.round(daily['age'].mean())\nweekly_mean = np.round(weekly['age'].mean())\n\nprint(f\"Daily mean {daily_mean}, weekly mean {weekly_mean}\")","0aeebf3d":"sns.displot(dataset['age'])\nplt.show()","0d42f41d":"dataset['count'] = 1\n\npivot_1 = pd.pivot_table(dataset, \n                         values='count',\n                         index='age', \n                         columns='Dalc', \n                         aggfunc=np.sum, \n                         fill_value=0)\n\npivot_2 = pd.pivot_table(dataset, \n                         values='count', \n                         index='age', \n                         columns='Walc', \n                         aggfunc=np.sum, \n                         fill_value=0)\n\nfig, ax = create_plot(1, 2)\n\nsns.heatmap(pivot_1, ax=ax[0], annot=True)\nsns.heatmap(pivot_2, ax=ax[1], annot=True)\nplt.show()","6c1d2c29":"fig, ax = create_plot(3, 2, (20,20))\n\nfor idx, j in enumerate(['Dalc', 'Walc']):\n    for i in range(3):\n        sns.boxplot(data=dataset, x=f'{j}', y=f'G{i+1}', ax=ax[i][idx])","6c59b235":"fig, ax = create_plot(1, 3, (15, 5))\n\nfor i in range(3):\n    sns.kdeplot(dataset[f'G{i+1}'], ax=ax[i], fill=True, linewidth=2, alpha=0.1)\nplt.show()","29a24869":"fig, ax = create_plot(3, 1, (5, 15))\n\nfor i in range(3):\n    sns.boxplot(data=dataset, x='studytime', y=f'G{i+1}', ax=ax[i])\nplt.show()","3b660d56":"corr = dataset.corr()\n\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\n\nfig, ax = create_plot(1, 1, (12,12))\n\nax = sns.heatmap(corr, mask=mask, square=True)\nplt.show()","a562f9d3":"fig, ax = create_plot(1, 2)\n\nsns.kdeplot(dataset['Medu'], ax=ax[0], fill=True, linewidth=2, alpha=0.1)\nsns.kdeplot(dataset['Fedu'], ax=ax[1], fill=True, linewidth=2, alpha=0.1)\nplt.show()","6deadd74":"# School is irrelevant for my purpose\ndataset = dataset.drop(['school'], axis=1)","669fb73b":"T = True\n\nif T:\n    dataset.drop(['G1', 'G2'], axis=1)","56f317f4":"# Selecting categorical variables\ncategorical = dataset.select_dtypes(exclude=['int64', 'float64'])\ncategorical.head()","21e92186":"binary = ['sex', \n          'address', \n          'famsize', \n          'Pstatus', \n          'schoolsup', \n          'famsup', \n          'paid', \n          'activities', \n          'nursery', \n          'higher', \n          'internet', \n          'romantic'\n         ]\n\nfor col in categorical.columns:\n    if col in binary:\n        unique = categorical[col].unique()\n        categorical[col] = categorical[col].map({\n            f'{unique[0]}': 0, \n            f'{unique[1]}': 1\n        }) \n    else:\n        dummies = pd.get_dummies(categorical[col])\n        for dummy in dummies:\n            categorical[dummy] = dummies[dummy]\n        categorical.drop(col, axis=1, inplace=True)","2efc94c6":"categorical.head()","c7fec86f":"numerical = dataset.select_dtypes(include=['int64', 'float64'])\nnumerical.head()","84528807":"dataset_clean = pd.concat([numerical, categorical], axis=1)\ndataset_clean.head()","abd93442":"from sklearn.linear_model import Lasso, LinearRegression, SGDRegressor, ElasticNet\nfrom sklearn.svm import SVR, LinearSVR\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.metrics import mean_squared_error as mse","5ae3fc92":"X = dataset_clean.iloc[:, :-1]\ny = dataset_clean['G3']","ccf78a72":"# Dimensionality after PCA\nn_components = 2\n\npca = PCA(n_components=n_components)\n\nprincipal_components = StandardScaler().fit_transform(pca.fit_transform(X))\n# Explained variance ration is the % of information that is retained after PCA\nprint(f\"Explained variance ration = {np.sum(pca.explained_variance_ratio_)}\")\n\npca_df = pd.DataFrame(principal_components)\npca_df = pd.concat([pca_df, y], axis=1)\npca_df.head()","62bfa88a":"fig, ax = create_plot(1, 2)\n\nfor i in range(n_components):\n    ax[i].scatter(x=pca_df[i], y=pca_df['G3']) \n\nplt.show()","7397d276":"import plotly.express as px\n\nfig = px.scatter_3d(pca_df, x=0, y=1, z='G3',\n              color='G3')\nfig.show()","66e2aaa0":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","76400d60":"MODELS = [Lasso, LinearRegression, SGDRegressor, ElasticNet, SVR, LinearSVR]\n\ndef train_model(model):\n    pipe = Pipeline([\n        ('scaler', StandardScaler()), \n        (f'{str(model.__name__).lower()}', model())\n    ])\n\n    pipe.fit(X_train, y_train)\n    preds = pipe.predict(X_test)\n    score = mse(y_test, preds)\n    print(str(model.__name__) + \" score: \" + str(score))\n    return score","84c9f5c5":"scores = {}\n\nfor model in MODELS:\n    scores[str(model.__name__)] = train_model(model)\n\nprint()\nprint(min(scores, key=scores.get) + \" is the winner!\")","37847350":"Quite interestingly there dosn't seem to be a noticible trend in academic performance in regards to alcohol consumption. Most boxplots have a median of around 10, Q2 and Q3 are very simillar for all the cases, usually bigger values of alcohol consumption have slimer range for grades, however this is to be attributed to much fewer students who drink so much alcohol.","d00ece1b":"The distributions are quite close to normal distributions.","6a920749":"# Modeling\n\n**Now it's time for sexiest element in data science - modeling data with machine learning**\n\n* Handeling cateogrical variables\n* Normalizing the data\n* Fitting the models and evaluation","38d07eb6":"It seems like **Medu** and **Fedu** (respectively **Mother's education** and **Father's education**) have the biggest impact on chilldren's academic perfomrance. Let's take a look at those variables.","dacc4b66":"# Numerical data\n\nPreprocessing numerical variables usually means scaling and normalizing them. I am going to use StandardScaler with Pipeline from sklearn during model training, but for now I would like to know if the data forms some kind of pattern.\n\n# PCA\n\n**PCA** is an algorithm that is able to reduce the dimensionality (i.e reduce the number of columns from 39 to 2) of dataset and retain the most valuable information about underlaying patters in the data. It is often used to visualize the dataset and helps with model selection. I am also going to use sklearn's implementation of PCA","8e99a46a":"# Model selection\n\nThanks to PCA we already know that the dataset has a linear trend, so obvious model choice is beloved **least squares**, however just for fun I am going to fit few other models and see how they perform.","d0919efb":"Yes, clearly there are more younger students in this dataset \n\nKnowing that the data is biased, having ~90% students aged 15 - 18 compared to ~10% of ages 19 - 22, let's take a look at some **pivot tables.**","58cf5d79":"No big surprise here, Linear Regression won the competition","926afcca":"Now let's take a look at perhaps the most intresting topic: **how alcohol consumption affects academic performance.**","57a6d432":"**Let's take a closer look at those students.**\n\n**It might be not that bad if they aren't too young.**","50eb40f1":"**0.84 explained variance ratio is quite good, now let's visualize our reduced dataset.**","3269de07":"**First component of pca_df dosn't tell us too much about the patterns in data, however in the second one there is a clearly visible linear trend, let's visualize the whole dataset with 3D plotly scatterplot.**","253cca03":"Now with clean categorical variables let's move onto numerical columns.","44e06a07":"It looks like Mothers are on average better educated that Fathers","19a1c9e9":"Pivots are great and even though here they are quite irrepresentative we can still find some valuable insight looking at them. For example value **1 in both Walc and Dalc is by far the most common for 15 year olds**, yay underage students don't drink that much! **Values are more evenly distributed for ages 17 and 18** which is to be expected. **Anything past 19 is just not worth considerning since we lack much data in those age ranges.**","9584bf8d":"# Handling categorical variables\n\nSome cateogircal variables have only two possible values, these ones I am simply going to map either to 1 or 0, others have many classes for such cases we can encode them in sparse representations.","21963e41":"Atleast means aren't too low, however looking at both distributions it seems quite weird for me how there are more younger people who frequently consume alcohol than older people. This might be due to dataset imbalances, let's check it out!","85530da2":"# Academic performance\n\nLet's forget about alcohol for a moment and take a closer look at **grades**. The dataset contains three grades:\n* G1 - First period grade\n* G2 - Second period grade\n* G3 - Final grade\n\nOne interesting thing that I always wanted to know is **how correlated really are grades and study time**. But first let's take a look at grades distribution.","f1af1918":"Maybe suprisingly, studytime is only slightly correlated with grades. **If not studytime then what is?**","087eaa52":"Even more disturbing is the fact that **11% of daily drinkers are students with \"Dalc\" value bigger or equal to 3.0.** Imo this is a very worring fact.","c7ed0b09":"# Alcohol consumption\n\nFirst let's check out the distributions in two most interesting columns - **daily alcohol consumption** and **weekly alcohol consumption.** ","ea47279e":"**\"Dalc**\" and **\"Walc\"** - Daily alcohol consumption and weekly alcohol consumption are discrete values ranging from 1.0 (very low) to 5.0 (very high). Even though distributions might look fairly normal, one curious observations that I've made is that **40% of students drink alcohol on weekly basis with \"Walc\" value of bigger or equal 3.0**, which can be considered quite high for secondary school students.","7153e9b6":"**This 3D scatterplot is really helpful for understandig the patterns and correlations in the dataset, besides that don't you think it looks super cool?** ","4bd46d23":"**To be continued...**","6b40be92":"# Case Study\n\nIt is no secret students drink alcohol before reaching legal age, this dataset contains alcohol consumption data for two secondary schools students. It also contains data about their grades, families and how the students spend their free time. I hope that by analyzing such an intresting dataset I'll be able to find interesting patterns and correlations between alcohol consumption and academic perfromance."}}