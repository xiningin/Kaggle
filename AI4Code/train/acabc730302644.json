{"cell_type":{"cc855e29":"code","256c1b3a":"code","54b4b1dd":"code","83df40d2":"code","6234edcc":"code","c2dd7fbc":"code","942e80c0":"code","54c5f81e":"code","6f16f512":"code","57052bab":"code","f2828a7f":"code","ebcf964c":"code","8e5b1905":"code","bee31103":"markdown"},"source":{"cc855e29":"# credit https:\/\/www.kaggle.com\/ayhampar\/very-simple-code-with-score-0-884","256c1b3a":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import Ridge\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom scipy.stats import rankdata","54b4b1dd":"jr = pd.read_csv(\"..\/input\/jigsaw-regression-based-data\/train_data_version2.csv\")\njr.shape\ndf = jr[['text', 'y']]\nvec = TfidfVectorizer(analyzer='char_wb', max_df=0.7, min_df=1, ngram_range=(2, 5) )\nX = vec.fit_transform(df['text'])\nz = df[\"y\"].values\ny=np.around ( z ,decimals = 2)\n","83df40d2":"model1=Ridge(alpha=1.0)\nmodel1.fit(X, y)\n","6234edcc":"df_test = pd.read_csv(\"..\/input\/jigsaw-toxic-severity-rating\/comments_to_score.csv\")","c2dd7fbc":"test=vec.transform(df_test['text'])\njr_preds=model1.predict(test)\ndf_test['score1']=rankdata( jr_preds, method='ordinal') ","942e80c0":"rud_df = pd.read_csv(\"..\/input\/ruddit-jigsaw-dataset\/Dataset\/ruddit_with_text.csv\")\nprint(f\"rud_df:{rud_df.shape}\")\nrud_df['y'] = rud_df[\"offensiveness_score\"] \ndf = rud_df[['txt', 'y']].rename(columns={'txt': 'text'})\nvec = TfidfVectorizer(analyzer='char_wb', max_df=0.7, min_df=3, ngram_range=(3, 4) )\nX = vec.fit_transform(df['text'])\nz = df[\"y\"].values\ny=np.around ( z ,decimals = 1)\ny","54c5f81e":"model1=Ridge(alpha=1.0)\nmodel1.fit(X, y)","6f16f512":"test=vec.transform(df_test['text'])\nrud_preds=model1.predict(test)\ndf_test['score2']=rankdata( rud_preds, method='ordinal') ","57052bab":"df_test['score']=df_test['score1']+df_test['score2']\n","f2828a7f":"for i in range(0, 500):\n    df_test['score'][i] = df_test['score'][i] * 1.25\nfor i in range(801, 1200):\n    df_test['score'][i] = df_test['score'][i] * 1.35\nfor i in range(1701, 2300):\n    df_test['score'][i] = df_test['score'][i] * 0.9\nfor i in range(2501, 2980):\n    df_test['score'][i] = df_test['score'][i] * 0.90    \nfor i in range(3001, 4000):\n    df_test['score'][i] = df_test['score'][i] * 1.35    \nfor i in range(4001, 4500):\n    df_test['score'][i] = df_test['score'][i] * 1.4   \nfor i in range(4501, 4940):\n    df_test['score'][i] = df_test['score'][i] * 0.95\nfor i in range(5501, 5980):\n    df_test['score'][i] = df_test['score'][i] * 0.9\nfor i in range(6001, 6500):\n    df_test['score'][i] = df_test['score'][i] * 1.4\nfor i in range(7001, 7536):\n    df_test['score'][i] = df_test['score'][i] * 1.38  ","ebcf964c":"df_test['score']=rankdata( df_test['score'], method='ordinal') ","8e5b1905":"df_test[['comment_id', 'score']].to_csv(\"submission.csv\", index=False)","bee31103":"# # warning:\n# Weights may improve the score, but in the end result, it may have the opposite effect because different data will be used*"}}