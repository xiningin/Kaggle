{"cell_type":{"8cae1f7f":"code","8afe8238":"code","9ee6eda1":"code","7feb109f":"code","498a7f0c":"code","e3f964f6":"code","1aec202c":"code","b2256b2d":"code","76ce81a1":"code","babd232f":"code","b6ad6ab7":"code","6db4218b":"code","f5d6eb98":"code","f9c395a9":"code","83e62eb1":"code","68cae597":"code","cb939faf":"code","cb165b2b":"markdown","793e5d8d":"markdown","ff1de2ca":"markdown","7ecee1aa":"markdown","369c43e0":"markdown","9a143c89":"markdown","ce98a66b":"markdown","aa968558":"markdown","284cfd0e":"markdown","7d4301ef":"markdown","e4b0554c":"markdown","39c32dad":"markdown","460fcf3b":"markdown","644d26a9":"markdown","56f366c0":"markdown","4baee34f":"markdown","b8e6b081":"markdown","1c3d1eed":"markdown","5e0bacdc":"markdown"},"source":{"8cae1f7f":"import pandas as pd\nimport numpy as np\nfrom PIL import Image, ImageChops\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re\nimport warnings\nimport cv2\nfrom tqdm import tqdm\ntqdm.pandas()\nwarnings.filterwarnings(\"ignore\")","8afe8238":"train_data = pd.read_csv('..\/input\/bms-molecular-translation\/train_labels.csv')\ntrain_data.head()","9ee6eda1":"print(\"Training Data Size\",train_data.shape[0])\nprint('Number of unique chemical identifier:',len(train_data['InChI'].value_counts().index))","7feb109f":"train_data.isna().sum()","498a7f0c":"image_path = \"..\/input\/bms-molecular-translation\/train\/{}\/{}\/{}\/{}.png\"\nimage_id_to_path = lambda image_id :image_path.format(image_id[0], image_id[1], image_id[2], image_id) ","e3f964f6":"train_data['image_path'] = train_data['image_id'].apply(image_id_to_path)\ntrain_data.head()","1aec202c":"height_shape=[]\nwidth_shape=[]\n\nfor idx,image_id in enumerate(train_data.image_id.values[:1000]):\n    image = cv2.imread(train_data['image_path'][idx])\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n    height_shape.append(image.shape[0])\n    width_shape.append(image.shape[1])","b2256b2d":"plt.figure(figsize=(12, 7))\nsns.distplot(width_shape)\nplt.title(\"Image Width Distribution\", fontsize=14)","76ce81a1":"plt.figure(figsize=(12, 7))\nsns.distplot(height_shape)\nplt.title(\"Image Height Distribution\", fontsize=14)","babd232f":"label_lengths = train_data['InChI'].progress_apply(lambda x: len(x))\nsns.set_style(\"whitegrid\")\nplt.figure(figsize = (10, 6))\nplt.title('Distribution of label length', fontsize = '15')\nsns.kdeplot(label_lengths, fill = True, color = '#EE370F', \n            edgecolor = 'black', alpha = 0.9)\nplt.xlabel('InChlI length')\nplt.show()","b6ad6ab7":"df = train_data[:6]\nplt.figure(figsize = (15, 15))\nfor ind, (image_id, label) in enumerate(zip(df['image_id'], df[\"InChI\"].values)):\n    plt.subplot(3, 2, ind + 1)\n    image = cv2.imread(image_id_to_path(image_id))\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n    plt.imshow(image)\n    plt.title(f\"{label[:30]}...\", fontsize=15)\n    plt.axis(\"off\")\n    \nplt.show()","6db4218b":"print(train_data['InChI'].iloc[0])\nprint(\"Length of InChI of this Image\",len(train_data['InChI'].iloc[0]))\nImage.open(train_data['image_path'].iloc[0])","f5d6eb98":"Image.open(train_data['image_path'].iloc[0])","f9c395a9":"print(\"InChi Version \",train_data['InChI'].iloc[0].split(\"\/\")[0])\nImage.open(train_data['image_path'].iloc[0])","83e62eb1":"print(\"Chemical Formula\",train_data['InChI'].iloc[0].split(\"\/\")[1])\nImage.open(train_data['image_path'].iloc[0])","68cae597":"print(\"Atom Connection\",train_data['InChI'].iloc[0].split(\"\/\")[2])\nImage.open(train_data['image_path'].iloc[0])","cb939faf":"print(\"Hydrogen atoms \",train_data['InChI'].iloc[0].split(\"\/\")[3].split(\",\")[0])\nImage.open(train_data['image_path'].iloc[0])","cb165b2b":"# STRUCTURE\n\nEvery InChI starts with the string \"InChI=\" followed by the version \n\nIf the InChI is standard, this is followed by the letter S for standard InChIs, which is a fully standardized InChI flavor maintaining the same level of attention to structure details and the same conventions for drawing perception.\n\nThe remaining information is structured as a sequence of layers and sub-layers, with each layer providing one specific type of information.\n\nThe layers and sub-layers are separated by the delimiter \"\/\" and start with a characteristic prefix letter (except for the chemical formula sub-layer of the main layer).\n\nThe six layers with important sublayers are:\n\n","793e5d8d":"# Image Height and Width","ff1de2ca":"# Chemical formula","7ecee1aa":"#  Image and Image InChI ","369c43e0":"# Hydrogen atoms","9a143c89":"\nIf you find the work useful please considering upvoting the kernel. Share your own opinion and things to improve\/add","ce98a66b":"Observation \n* most of image InChI label length is below 250","aa968558":"# Distribution of label(InChI) length","284cfd0e":"![image.png](attachment:67dd7a75-a58b-4369-bf93-f468a683bbcf.png)","7d4301ef":"If we carefully watch image-name, first 3 characters in the id represents the folder structure,\nso using this lets construct the fully qualified image path for each image using below code","e4b0554c":"Observation \n* most of image has the Image Height below the 500","39c32dad":"Observation \n* most of image has the Image Width below the 800","460fcf3b":"# Checking NAN values","644d26a9":"# References:\n* https:\/\/www.inchi-trust.org\/technical-faq-2\/\n* https:\/\/www.kaggle.com\/ayuraj\/bms-eda-and-dataset-visualization-w-w-b\n* https:\/\/www.kaggle.com\/dschettler8845\/molecular-translation-eda-smart-baseline","56f366c0":"# Version Number","4baee34f":"### From Below Image you can easily understand the all layers ","b8e6b081":"# Atom Connection","1c3d1eed":"\n## 1. Main Layer\n Main layer can be split up into three sub-layers:\n\n\n* Chemical formula (no prefix). This is the only sublayer that must occur in every InChI.\n* Atom connections (prefix: \"c\").\nThe atoms in the chemical formula (except for hydrogens) are numbered in sequence. This sublayer describes which atoms are connected by bonds to which other ones.\n* Hydrogen atoms (prefix: \"h\").\nDescribes how many hydrogen atoms are connected to each of the other atoms.\n\n\n## 2. Charge Layer\n\n* Charge Sublayer (prefix: \"q\")\n* Proton Sublayer (prefix: \"p\")\n\n\n## 3. Stereochemical Layer\nThe two types of represented stereochemistry, double bond and tetrahedral,\n\n* Double Bonds and Cumulenes (prefix: \"b\")\n* Tetrahedral Stereochemistry of Atoms and Allenes (prefixes: \"t\")\n\n\n\n## 4. Isotopic Layer\n\n* prefixes: \"i\", \"h\", as well as \"b\", \"t\", \"m\", \"s\" for isotopic stereochemistry\n\n\n## 5. Fixed-H Layer\n\n* prefix: \"f\". NEVER INCLUDED IN STANDARD INCHI\n\n\n## 6. Reconnected Layer\n\n* prefix: \"r\". NEVER INCLUDED IN STANDARD INCHI","5e0bacdc":"# Training Data\n"}}