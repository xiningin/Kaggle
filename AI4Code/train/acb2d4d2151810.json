{"cell_type":{"838e263c":"code","576cf7ed":"code","128330f5":"code","3ff5541d":"code","26bda2a1":"code","eab3e81e":"code","29ffd299":"code","5249c268":"code","ddee64e4":"code","08741d20":"code","19697c90":"code","b5662068":"code","86f8a381":"code","b7451e83":"code","825b60d7":"code","7bfa2ba9":"code","786a612a":"code","6716b671":"code","96000242":"code","7f608b3c":"code","3a4659b1":"code","f8003221":"code","8f7735bb":"code","ed8a7fb7":"code","5024151c":"code","00727ab2":"code","1f78e981":"code","a18941bc":"code","65930b28":"code","935400ee":"code","7351de11":"code","8ec259e4":"markdown","d93f1ed0":"markdown","8defdc5c":"markdown","0a66506c":"markdown","6e8fc837":"markdown"},"source":{"838e263c":"import warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\ndf = pd.read_csv('Dataset\/BreastCancer.csv')\nprint(df.shape)\ndf.head()","576cf7ed":"df.drop(['id'], axis = 1,inplace = True)","128330f5":"df['diagnosis'].value_counts()","3ff5541d":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['diagnosis'] = le.fit_transform(df['diagnosis'])","26bda2a1":"df['diagnosis'].value_counts()","eab3e81e":"df","29ffd299":"import seaborn as sb\nimport matplotlib.pyplot as plt\nax = plt.figure(figsize = (16,25))\ncorr = df.corr()\nsb.heatmap(corr,vmax = 1, vmin = -1,annot = True)","5249c268":"#df.drop(df[['fractal_dimension_se','smoothness_se','fractal_dimension_se','symmetry_se', 'concavity_se','compactness_se','texture_se','fractal_dimension_mean']], axis = 1,inplace = True)","ddee64e4":"df['diagnosis'].value_counts()","08741d20":"import numpy as np\ndf[df.isnull()]","19697c90":"df.isnull().sum()","b5662068":"df.dropna(axis = 1,inplace = True)","86f8a381":"df.astype('float')","b7451e83":"from sklearn.model_selection import train_test_split\nx = df.drop('diagnosis', axis = 1)\ny = df['diagnosis']","825b60d7":"from sklearn.model_selection import RandomizedSearchCV as rcv\nxgb = XGBClassifier(tree_method = 'gpu_hist')\nxgb","7bfa2ba9":"params = {'max_depth' : [1,3,5,7,9,11],\n         'learning_rate': [0.001,0.01,0.03,0.05,0.07,0.09,0.1,0.2],\n         'n_estimators' : [10,30,50,80,120,230,340,450],\n         'gamma' : [0.1,0.2,0.3,0.4,0.5,0.7]}","786a612a":"rs = rcv(xgb,params,cv = 10,n_iter=10,n_jobs = -1,verbose = 2).fit(x_train,y_train.ravel())","6716b671":"rs.best_params_","96000242":"xgbr = XGBClassifier(n_estimators= 120, max_depth= 9, learning_rate= 0.2, gamma= 0.4,tree_method = 'gpu_hist').fit(x_train,y_train)\npredXGBr = xgbr.predict(x_test)\npredXGBr","7f608b3c":"print(accuracy_score(y_test,predXGBr))","3a4659b1":"from sklearn.model_selection import GridSearchCV\nparam_grid = {'max_depth':[rs.best_params_['max_depth']+1,\n                           rs.best_params_['max_depth']+3,\n                           rs.best_params_['max_depth']-2],\n             'n_estimators':[rs.best_params_['n_estimators']+5,\n                             rs.best_params_['n_estimators']-5,\n                             rs.best_params_['n_estimators']+10],\n             'learning_rate':[rs.best_params_['learning_rate']+0.2,\n                              rs.best_params_['learning_rate']-0.2,\n                              rs.best_params_['learning_rate']+0.03],\n             'gamma' : [rs.best_params_['gamma']+0.25,\n                        rs.best_params_['gamma']+0.5,\n                        rs.best_params_['gamma']-0.25,\n                        rs.best_params_['gamma']-0.5]}\ngscv = GridSearchCV(xgb,param_grid,n_jobs = -1,cv = 10).fit(x_train,y_train)","f8003221":"gscv.best_params_","8f7735bb":"xgbgs = XGBClassifier(n_estimators= 125, max_depth= 10, learning_rate= 0.4, gamma= 0.9,tree_method = 'gpu_hist').fit(x_train,y_train)\npredXGBgs = xgbgs.predict(x_test)\npredXGBgs","ed8a7fb7":"accuracy_score(y_test,predXGBgs)","5024151c":"import warnings\nwarnings.filterwarnings('ignore')\nfrom tpot import TPOTClassifier\ngm = TPOTClassifier(generations = 20,population_size = 24,offspring_size = 12,verbosity = 2,\n                    config_dict = {'xgboost.XGBClassifier':params},cv = 10,scoring = 'accuracy',\n                    n_jobs = -1).fit(x_train,y_train)","00727ab2":"accuracy = gm.score(x_test, y_test)\nprint(accuracy)","1f78e981":"\nimport optuna\ndef objective(trial):\n    \n    params = {'max_depth':trial.suggest_categorical('max_depth',[1,3,5,7,9,11]),\n             'learning_rate':trial.suggest_categorical('learning_rate',[0.001,0.01,0.03,0.05,0.07,0.09,0.1,0.2]),\n             'n_estimators':trial.suggest_categorical('n_estimators',[10,30,50,80,120,230,340,450]),\n             'gamma':trial.suggest_categorical('gamma',[0.1,0.2,0.3,0.4,0.5,0.7])}\n    #classifier = trial.suggest_categorical('classifier',['XGBClassifier'])\n    xgbOpt = XGBClassifier(tree_method = 'gpu_hist',**params).fit(x_train,y_train)\n    predXGBOpt = xgbOpt.predict(x_test)\n    acc = accuracy_score(y_test,predXGBOpt)\n    return acc\n    ","a18941bc":"study = optuna.create_study(direction = 'maximize')\nstudy.optimize(objective,n_trials = 100,n_jobs = -1)","65930b28":"study.best_trial.params","935400ee":"xgbOpt = XGBClassifier(tree_method = 'gpu_hist',max_depth = 11,n_estimators = 2302,\n                       learning_rate = 0.1,gamma = 0.2).fit(x_train,y_train)\npredXGBOpt = xgbOpt.predict(x_test)\nacc = accuracy_score(y_test,predXGBOpt)","7351de11":"print(classification_report(y_test,predXGBOpt))","8ec259e4":"## 4. OPTUNA","d93f1ed0":"# Hyperparameter Tuning\n## 1. RandomizedSearchCV","8defdc5c":"## 3. Genetic Algorithm","0a66506c":"# To Get multiple classification algos [Click Here](https:\/\/www.kaggle.com\/waizaidoc\/multiple-classification-algorithms)\n# To read Multiple cross validation techniques [Click Here](https:\/\/www.kaggle.com\/waizaidoc\/multiple-cross-validation-techniques)","6e8fc837":"## 2. GridSearchCV"}}