{"cell_type":{"8a862170":"code","4c28c833":"code","410d756d":"code","23e3e579":"code","9413b32c":"code","aa811ff2":"code","fe0bea5f":"markdown","63f92f9b":"markdown","1159bc06":"markdown","84a3bcae":"markdown","7ea9843e":"markdown","2057dded":"markdown","ca9676ce":"markdown","95c112ab":"markdown","fe77bd83":"markdown"},"source":{"8a862170":"import numpy as np\nimport pandas as pd\nimport folium\nimport base64\nimport os\n\nfrom PIL import Image\nfrom IPython.display import display\n\nfrom folium import IFrame\nfrom folium.plugins import MarkerCluster\nfrom folium.plugins import FloatImage\n\nworkind_dir = \"\/kaggle\/input\/riga-faces\"","4c28c833":"df = pd.read_csv(os.path.join(workind_dir, 'rigafaces.csv'))\ndf.head()","410d756d":"def get_image_path(filename, size):\n    return os.path.join(workind_dir, 'images', str(size) + 'p', filename)","23e3e579":"for filename in df[:3].filename.values:\n    display(Image.open(get_image_path(filename, 128)))","9413b32c":"resolution = 128\ndisplay_size = resolution + 20 # padding\n\ndef create_pop_up_marker(lat, lon, filename):\n    encoded = base64.b64encode(open(get_image_path(filename, resolution), \"rb\").read())\n    html = '<img src=\"data:image\/JPG;base64,{}\">'.format\n    iframe = IFrame(html(encoded.decode(\"UTF-8\")), width=display_size, height=display_size)\n    popup = folium.Popup(iframe, max_width=display_size)\n    icon = folium.Icon(color=\"blue\", icon=\"ok\")\n    return folium.Marker(location=[lat, lon], popup=popup, icon=icon)","aa811ff2":"def create_riga_map(df):\n    riga_map = folium.Map(location=[56.946285, 24.105078], tiles='cartodbpositron', zoom_start=14)\n    riga_legend = \"https:\/\/storage.googleapis.com\/riga-ds-club-public-assets\/RigaFaces-2.png\"\n    FloatImage(riga_legend, bottom=1, left=1).add_to(riga_map)\n    \n    for lat,lon in pd.unique(list(zip(df.latitude, df.longitude))):\n        clustered = df[(df['latitude'] == lat) & (df['longitude'] == lon)]\n        if(len(clustered) > 1):\n            cluster = folium.plugins.MarkerCluster().add_to(riga_map)\n            for filename in clustered[\"filename\"].values:\n                create_pop_up_marker(lat, lon, filename).add_to(cluster)\n        else:\n            create_pop_up_marker(lat, lon, clustered.iloc[0].filename).add_to(riga_map)\n            \n    return riga_map\n\ncreate_riga_map(df)","fe0bea5f":"We will define a helper method to display images as marker popups:","63f92f9b":"Create a map centered at Riga coordinates and populate it with clusters and markers:","1159bc06":"Here are a few images of the 128px size:","84a3bcae":"![Riga](https:\/\/storage.googleapis.com\/riga-ds-club-public-assets\/headline-sm.png)\n\n# Introduction\n[Riga](https:\/\/en.wikipedia.org\/wiki\/Riga) is a lovely city near the Baltic Sea, the capital of Latvia. \n\nLocals are proud of Rigas art nouveau heritage and not without a reason. Over a third of all buildings in Riga are examples of this unique school of design and it\u2019s worth to bring it to the light over and over again. This is what \u201cRiga faces\u201d project tries to do.\n\nWe are extremely grateful to Tomas Jundo, creator of www.rigafaces.com for providing all the photographs for this dataset.","7ea9843e":"Annotation file provides us with filenames and image metadata: address and geographical location. Actual files of corresponding resolution are placed under respective subfolders in the *image* directory:\n* *\/kaggle\/input\/riga-faces\/images\/64p\/*\n* *\/kaggle\/input\/riga-faces\/images\/128p\/*\n* *\/kaggle\/input\/riga-faces\/images\/1080p\/*\n\nLet's define a helper method to ease reading images of different resolutions:","2057dded":"# Further work\n\nA few ideas for inspiration:\n\n* Style transfer to convert given real face to \"Riga face\"\n* GAN to create new \"Riga faces\"","ca9676ce":"# Putting data on the map\n\nLet's make use of geocoding metadata and put all Riga Faces on the map. Certain buildings have multiple faces in the datasets, so we have to add clustering to avoid coordinate collisions.","95c112ab":"# Credits\nAll the photos are kindly provided by Tomas Jundo, creator of [www.rigafaces.com](https:\/\/www.rigafaces.com\/)\n\n\nCheck out some other resources of this project: \n* Instagram: https:\/\/www.instagram.com\/rigas_sejas\/\n* Facebook: https:\/\/www.facebook.com\/rigas.sejas\n","fe77bd83":"# Dataset structure\n\nRiga Faces dataset consists of *rigafaces.csv* annotation file and images of three distinct resolutions: 64px, 128px and 1080px."}}