{"cell_type":{"31112db2":"code","a2cd46e5":"code","315ec91c":"code","055b74ad":"code","b9017c25":"code","71064504":"markdown","d837219f":"markdown","b80bbd6e":"markdown","1650081f":"markdown"},"source":{"31112db2":"import pandas as pd\nimport numpy as np\nimport lightgbm as lgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold\nimport catboost as cb","a2cd46e5":"df = pd.read_csv('..\/input\/diamonds-ds-ft-2109\/diamonds_train.csv', index_col=0)\ntest_df = pd.read_csv('..\/input\/diamonds-ds-ft-2109\/diamonds_test.csv', index_col=0)","315ec91c":"target='price'\n\ncolor_map={'D':0, 'E':1, 'F':2, 'G':3, 'H':4, 'I':5, 'J':6}\ndf['color_map'] = df.color.map(color_map).astype('int32')\ntest_df['color_map'] = test_df.color.map(color_map).astype('int32')\n\nclarity_map={'I1':0, 'SI2':1, 'SI1':2, 'VS2':3, 'VS1':4, 'VVS2':5, 'VVS1':6, 'IF':7}\ndf['clarity_map'] = df.clarity.map(clarity_map).astype('int32')\ntest_df['clarity_map'] = test_df.clarity.map(clarity_map).astype('int32')\n\ncut_map={'Fair':0, 'Good':1, 'Very Good':2, 'Premium':3, 'Ideal':4}\ndf['cut_map'] = df.cut.map(cut_map).astype('int32')\ntest_df['cut_map'] = test_df.cut.map(cut_map).astype('int32')\n\ndf['shape'] = df.x\/df.y\ntest_df['shape'] = test_df.x\/test_df.y","055b74ad":"n_folds=6\nfeatures = ['carat','clarity','cut','depth','table','color_map','cut_map','clarity_map','shape']\ncat_features=['cut','clarity']\ndataset = cb.Pool(df[features], df[target], cat_features=cat_features) \nparams={\n    'objective':'RMSE',\n    'learning_rate': 0.05\n}\ncb_models = cb.cv(dataset, params=params, fold_count=n_folds, iterations=5000, early_stopping_rounds=50,\n                 stratified=False, verbose_eval=100, return_models=True)","b9017c25":"cb_res = np.zeros(test_df.shape[0])\nfor cb_model in cb_models[1]:\n    cb_res += cb_model.predict(test_df[features])\/n_folds\n    \ntest_df['id']=test_df.index\ntest_df['price']=cb_res\ntest_df[['id', 'price']].to_csv('submission.csv', index=False)","71064504":"### Using CatBoost as a model","d837219f":"### Reading Data","b80bbd6e":"### Prediction","1650081f":"### Extra features"}}