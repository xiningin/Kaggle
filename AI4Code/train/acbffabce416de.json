{"cell_type":{"1fcdfab6":"code","bdb6603a":"code","e6520caf":"code","c4ab9eb4":"code","60f74cbc":"code","91328335":"code","fe02d10e":"code","d79b3761":"code","1c982318":"code","517294c6":"markdown","a035bca6":"markdown","fbb7ab14":"markdown"},"source":{"1fcdfab6":"!pip install ppscore","bdb6603a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport ppscore as pps\n\nsns.set(style=\"white\")\n\ndf = pd.read_csv(\"..\/input\/foreign-exchange-rates-per-dollar-20002019\/Foreign_Exchange_Rates.csv\")\n\ndel df['Unnamed: 0']\ndf.rename(columns={'Time Serie': 'DATE',}, inplace=True)\ndf.sort_values(by=[\"DATE\"], inplace=True)\n\nfor col in set(df.columns):\n    if col != \"DATE\":\n        df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n    if col == \"DATE\":\n        df[col] = pd.to_datetime(df[col], errors=\"coerce\")\n\ndf.dropna(inplace=True)\ndf.set_index(\"DATE\", inplace=True)\n\ndf = df.pct_change().dropna()","e6520caf":"df.plot(figsize=(15,8))\nplt.ylabel('Percent');","c4ab9eb4":"df.cumsum().plot(figsize=(15,8)).axhline(0, lw=1, color='black')\nplt.ylabel('Returns From Start');","60f74cbc":"def plot_matrix(df, kind=\"corr\", vmax=1.0, center=0.0):\n    if kind == \"corr\":\n        # Compute the correlation matrix\n        corr = df.corr()\n    if kind == \"pps\":\n        corr = pps.matrix(df)\n    \n    corr = np.round(corr, 2)\n    \n    # Generate a mask for the upper triangle\n    mask = np.triu(np.ones_like(corr, dtype=np.bool))\n\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(11, 9))\n\n    # Generate a custom diverging colormap\n    cmap = sns.light_palette((210, 90, 60), input=\"husl\")\n\n    # Draw the heatmap with the mask and correct aspect ratio\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=vmax, center=center,\n                square=True, linewidths=.5, cbar_kws={\"shrink\": .5});","91328335":"plot_matrix(df, kind=\"pps\", vmax=1.0, center=0.5)","fe02d10e":"def currency_pairs(c1, c2):\n    _ = np.round(pps.score(df, c1, c2, task='regression')[\"ppscore\"], 2)\n    print(f\"The PPS of {c1} predicting {c2}: {_}\")\n    g = sns.jointplot(c1, c2, data=df.sample(500), kind=\"kde\", space=0, color=\"g\")","d79b3761":"c1 = 'EURO AREA - EURO\/US$'\nc2 = 'DENMARK - DANISH KRONE\/US$'\n\ncurrency_pairs(c1, c2)","1c982318":"c1 = 'JAPAN - YEN\/US$'\nc2 = 'INDIA - INDIAN RUPEE\/US$'\n\ncurrency_pairs(c1, c2)","517294c6":"# Plot daily percentage change in foreign exchange rates ","a035bca6":"# Can $x$ predict $y$?\n## Plot Predictive Power Score","fbb7ab14":"# What is Predictive Power Score (PPS)\n\nThe PPS is an asymmetric, data-type-agnostic score that can detect linear or non-linear relationships between two columns. The score ranges from $0$ (no predictive power) to $1$ (perfect predictive power). It can be used as an alternative to the correlation (matrix)."}}