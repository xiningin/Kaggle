{"cell_type":{"a61de5ab":"code","5f38d2fe":"code","9e0daddb":"code","480d5851":"code","191538d0":"code","97855778":"code","e9c92daf":"code","7f88c947":"code","612505b8":"code","865fcefb":"code","aea54f0b":"code","f888a7e7":"code","13147022":"code","76cf7423":"code","bc58916f":"code","253d1e04":"code","0f06fe31":"code","153e4d9d":"code","326ac17d":"code","ae76760e":"code","0642d458":"code","13ec0c6c":"code","ae5dc5d4":"code","f0c948d4":"code","5384a2ae":"code","820e036b":"code","ef01c9d5":"markdown","4a9fae2a":"markdown"},"source":{"a61de5ab":"import pandas as pd\nimport numpy as np\nimport os\nfrom glob import glob\nimport random\nimport matplotlib.pylab as plt\nimport keras.backend as K\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nimport keras\nfrom keras.utils.np_utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.optimizers import SGD, RMSprop, Adam, Adagrad, Adadelta\nfrom keras.layers import Dense, Dropout, Activation, Flatten, BatchNormalization, Conv2D, MaxPool2D, MaxPooling2D\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau, ModelCheckpoint, EarlyStopping\nfrom tensorflow.keras.applications import VGG16\n%matplotlib inline","5f38d2fe":"# Detect hardware, return appropriate distribution strategy\ntry:\n    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n    print('Running on TPU ', tpu.master())\nexcept ValueError:\n    tpu = None\n\nif tpu:\n    tf.config.experimental_connect_to_cluster(tpu)\n    tf.tpu.experimental.initialize_tpu_system(tpu)\n    strategy = tf.distribute.experimental.TPUStrategy(tpu)\nelse:\n    strategy = tf.distribute.get_strategy() # default distribution strategy in Tensorflow. Works on CPU and single GPU.\n\nprint(\"REPLICAS: \", strategy.num_replicas_in_sync)","9e0daddb":"imagePatches = glob('..\/input\/breast-histopathology-images\/IDC_regular_ps50_idx5\/**\/*.png', recursive=True)\nfor filename in imagePatches[0:10]:\n    print(filename)","480d5851":"# Two arrays holding images by class type\n\nclass0 = [] # 0 = no cancer\nclass1 = [] # 1 = cancer\n\nfor filename in imagePatches:\n    if filename.endswith(\"class0.png\"):\n         class0.append(filename)\n    else:\n        class1.append(filename)","191538d0":"len(class1)","97855778":"sampled_class0 = random.sample(class0, 78786)\nsampled_class1 = random.sample(class1, 78786)\nlen(sampled_class0)","e9c92daf":"from matplotlib.image import imread\nimport cv2\n\ndef get_image_arrays(data, label):\n    img_arrays = []\n    for i in data:\n      if i.endswith('.png'):\n        img = cv2.imread(i ,cv2.IMREAD_COLOR)\n        img_sized = cv2.resize(img, (50, 50), interpolation=cv2.INTER_LINEAR)\n        img_arrays.append([img_sized, label])\n    return img_arrays","7f88c947":"class0_array = get_image_arrays(sampled_class0, 0)\nclass1_array = get_image_arrays(sampled_class1, 1)","612505b8":"class0_array[1]","865fcefb":"test = cv2.imread('..\/input\/breast-histopathology-images\/IDC_regular_ps50_idx5\/13689\/1\/13689_idx5_x801_y1501_class1.png' ,cv2.IMREAD_COLOR)\ntest.shape","aea54f0b":"combined_data = np.concatenate((class0_array, class1_array))\nrandom.seed(41)\nrandom.shuffle(combined_data)","f888a7e7":"X = []\ny = []\n\nfor features,label in combined_data:\n    X.append(features)\n    y.append(label)","13147022":"# print(X[11].reshape(-1, 50, 50, 3))\n# reshape X data\nX = np.array(X).reshape(-1, 50, 50, 3)","76cf7423":"X.shape","bc58916f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\ny_train = to_categorical(y_train)\ny_test = to_categorical(y_test)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","253d1e04":"base_model = tf.keras.applications.VGG16(input_shape=(50,50,3),include_top=False,weights=\"imagenet\")","0f06fe31":"# Freezing Layers\n\nfor layer in base_model.layers[:-5]:\n    layer.trainable=False","153e4d9d":"# Building Model\n\nmodel=Sequential()\nmodel.add(base_model)\nmodel.add(Dropout(0.5))\nmodel.add(Flatten())\nmodel.add(Dense(2,activation='softmax'))","326ac17d":"# Model Summary\n\nmodel.summary()","ae76760e":"from tensorflow.keras.utils import plot_model\nfrom IPython.display import Image\nplot_model(model, to_file='convnet.png', show_shapes=True,show_layer_names=True)\nImage(filename='convnet.png') ","0642d458":"def f1_score(y_true, y_pred): #taken from old keras source code\n    true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n    possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\n    predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\n    precision = true_positives \/ (predicted_positives + K.epsilon())\n    recall = true_positives \/ (possible_positives + K.epsilon())\n    f1_val = 2*(precision*recall)\/(precision+recall+K.epsilon())\n    return f1_val","13ec0c6c":"METRICS = [\n      tf.keras.metrics.BinaryAccuracy(name='accuracy'),\n      tf.keras.metrics.Precision(name='precision'),\n      tf.keras.metrics.Recall(name='recall'),  \n      tf.keras.metrics.AUC(name='auc'),\n        f1_score,\n]","ae5dc5d4":"lrd = ReduceLROnPlateau(monitor = 'val_loss',patience = 5,verbose = 1,factor = 0.75, min_lr = 1e-10)\n\nmcp = ModelCheckpoint('model.h5')\n\nes = EarlyStopping(verbose=1, patience=5)","f0c948d4":"model.compile(optimizer='Adam', loss='binary_crossentropy',metrics=METRICS)","5384a2ae":"%time\nhistory=model.fit(X_train, y_train,validation_data=(X_test, y_test),verbose = 1,epochs = 5,callbacks=[lrd,mcp,es])","820e036b":"#%% PLOTTING RESULTS (Train vs Validation FOLDER 1)\n\ndef Train_Val_Plot(acc,val_acc,loss,val_loss,auc,val_auc,precision,val_precision,f1,val_f1):\n    \n    fig, (ax1, ax2,ax3,ax4,ax5) = plt.subplots(1,5, figsize= (20,5))\n    fig.suptitle(\" MODEL'S METRICS VISUALIZATION \")\n\n    ax1.plot(range(1, len(acc) + 1), acc)\n    ax1.plot(range(1, len(val_acc) + 1), val_acc)\n    ax1.set_title('History of Accuracy')\n    ax1.set_xlabel('Epochs')\n    ax1.set_ylabel('Accuracy')\n    ax1.legend(['training', 'validation'])\n\n\n    ax2.plot(range(1, len(loss) + 1), loss)\n    ax2.plot(range(1, len(val_loss) + 1), val_loss)\n    ax2.set_title('History of Loss')\n    ax2.set_xlabel('Epochs')\n    ax2.set_ylabel('Loss')\n    ax2.legend(['training', 'validation'])\n    \n    ax3.plot(range(1, len(auc) + 1), auc)\n    ax3.plot(range(1, len(val_auc) + 1), val_auc)\n    ax3.set_title('History of AUC')\n    ax3.set_xlabel('Epochs')\n    ax3.set_ylabel('AUC')\n    ax3.legend(['training', 'validation'])\n    \n    ax4.plot(range(1, len(precision) + 1), precision)\n    ax4.plot(range(1, len(val_precision) + 1), val_precision)\n    ax4.set_title('History of Precision')\n    ax4.set_xlabel('Epochs')\n    ax4.set_ylabel('Precision')\n    ax4.legend(['training', 'validation'])\n    \n    ax5.plot(range(1, len(f1) + 1), f1)\n    ax5.plot(range(1, len(val_f1) + 1), val_f1)\n    ax5.set_title('History of F1-score')\n    ax5.set_xlabel('Epochs')\n    ax5.set_ylabel('F1 score')\n    ax5.legend(['training', 'validation'])\n\n\n    plt.show()\n    \n\nTrain_Val_Plot(history.history['accuracy'],history.history['val_accuracy'],\n               history.history['loss'],history.history['val_loss'],\n               history.history['auc'],history.history['val_auc'],\n               history.history['precision'],history.history['val_precision'],\n               history.history['f1_score'],history.history['val_f1_score']\n              )","ef01c9d5":"# Dataset & Description\n\n### The original dataset consisted of 162 whole mount slide images of Breast Cancer (BCa) specimens scanned at 40x. From that, 277,524 patches of size 50 x 50 were extracted (198,738 IDC negative and 78,786 IDC positive). Each patch\u2019s file name is of the format: uxXyYclassC.png \u2014 > example 10253idx5x1351y1101class0.png . Where u is the patient ID (10253idx5), X is the x-coordinate of where this patch was cropped from, Y is the y-coordinate of where this patch was cropped from, and C indicates the class where 0 is non-IDC and 1 is IDC.\n\n\n## Link:\n\nhttps:\/\/www.kaggle.com\/paultimothymooney\/breast-histopathology-images","4a9fae2a":"# Breast Cancer Disease \n\n\n### Breast cancer is a disease in which cells in the breast grow out of control. There are different kinds of breast cancer. The kind of breast cancer depends on which cells in the breast turn into cancer. Breast cancer can begin in different parts of the breast.\n\n\n\n[![image.png](attachment:image.png)](http:\/\/)"}}