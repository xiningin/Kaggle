{"cell_type":{"e3b3a650":"code","2efe7bed":"code","b9dcc59f":"code","10b395fb":"code","430cb5cc":"code","33eb9fe7":"code","a0b04cf9":"code","73cdc4a1":"code","397f95d7":"code","62fc0735":"code","347dce01":"code","e53fa161":"code","bb710ef1":"code","a2ebf9da":"code","c927b212":"code","092bd3c5":"code","1e7af13a":"code","23a31211":"code","95772e44":"code","1744d722":"code","72d2f181":"code","7c4f6b2e":"code","831d6df4":"code","a0cbcf9e":"code","6d590bee":"code","dba65dd8":"code","37917fe1":"code","e94bbd39":"code","e82fe84f":"code","b9f04484":"code","63d9d6ae":"code","d03f01ea":"code","be78fa98":"code","ff62c4ef":"code","cde5b56a":"code","304239bf":"markdown","588551b9":"markdown","62943d09":"markdown","1d92a0cc":"markdown","e7fa4ec7":"markdown","aa5d6ae3":"markdown","cbeacd32":"markdown","7139dc46":"markdown","5aee86c9":"markdown","54336b6f":"markdown","d18c8943":"markdown","52093328":"markdown","82dd6756":"markdown","c3fc2d7d":"markdown","aae9003c":"markdown","540e9e59":"markdown"},"source":{"e3b3a650":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate, accuracy\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2efe7bed":"# to update functions used throughout the notebook\n#\u00a0and display plots inline with the notebook\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","b9dcc59f":"DATA_DIR = '..\/input\/oregon-wildlife\/oregon_wildlife\/oregon_wildlife'","10b395fb":"os.listdir(f'{DATA_DIR}')","430cb5cc":"np.random.seed(42)\ndata = (ImageDataBunch.from_folder(DATA_DIR, \n                                   train=\"\",\n                                   valid_pct=0.2,\n                                   ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                   size=224,\n                                   bs=64)\n        .normalize(imagenet_stats))","33eb9fe7":"print('Classes: \\n {}'.format(data.classes))","a0b04cf9":"# look at the data\ndata.show_batch(rows=3, figsize=(7,6))","73cdc4a1":"print(data.classes)\nlen(data.classes)\ndata.c","397f95d7":"learn = cnn_learner(data, models.resnet34, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","62fc0735":"learn.model","347dce01":"learn.fit_one_cycle(4)","e53fa161":"# save the model run\nlearn.save('stage-1')","bb710ef1":"interpretation = ClassificationInterpretation.from_learner(learn)","a2ebf9da":"losses, idxs = interpretation.top_losses()\nlen(data.valid_ds)==len(losses)==len(idxs)","c927b212":"interpretation.plot_top_losses(9, figsize=(15,11))","092bd3c5":"interpretation.plot_confusion_matrix(figsize=(12,12), dpi=60)","1e7af13a":"interpretation.most_confused(min_val=2)","23a31211":"# unfreeze the body layers\nlearn.unfreeze()","95772e44":"learn.lr_find()\nlearn.recorder.plot()","1744d722":"learn.fit_one_cycle(4, max_lr=slice(1e-06,1e-04))","72d2f181":"learn.save(\"stage-2\")","7c4f6b2e":"learn.recorder.plot_losses()","831d6df4":"interp = ClassificationInterpretation.from_learner(learn)","a0cbcf9e":"interp.plot_top_losses(9, figsize=(15,11))","6d590bee":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","dba65dd8":"learn50 = cnn_learner(data, models.resnet50, metrics=error_rate, model_dir=\"\/tmp\/model\/\")","37917fe1":"learn50.fit_one_cycle(4)","e94bbd39":"learn50.unfreeze()","e82fe84f":"learn50.lr_find()","b9f04484":"learn50.recorder.plot()","63d9d6ae":"learn50.fit_one_cycle(4, max_lr=slice(1e-06,1e-04))","d03f01ea":"learn50.save(\"learn50-stage-1\")","be78fa98":"learn50.recorder.plot_losses()","ff62c4ef":"interp = ClassificationInterpretation.from_learner(learn50)","cde5b56a":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","304239bf":"Accuracy improved compared to learn object built based on ResNet34 because we added more layers to our CNN so that it become more accurate.","588551b9":"# Results of the pre-trained CNN","62943d09":"For this particular image classification problem, labels are stored in the folder names.","1d92a0cc":"We have 20 different animals to classify","e7fa4ec7":"## Download the model","aa5d6ae3":"# Results of the Fine-Tuned Model","cbeacd32":"# Train the Model 2: Resnet50","7139dc46":"Plot Confusion Matrix","5aee86c9":"# Create Data Bunch Object","54336b6f":"# Load Data","d18c8943":"This is an exercise notebook to practice what I learned in the [fast.ai Deep Learning course Lesson 1](https:\/\/course.fast.ai\/videos\/?lesson=1).","52093328":"# Fine Tune the Learning Rate, Re-train Model","82dd6756":"Seems like loss is at the minimum when the learning rate is between 1e-06 and 1e-04. So, we will use this interval as a learning rate.","c3fc2d7d":"# Imports","aae9003c":"# Train the Model 1: Resnet34","540e9e59":"Rebuild Model with the adjusted learning rate"}}