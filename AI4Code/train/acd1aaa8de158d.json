{"cell_type":{"1d66746a":"code","93e4fb6b":"code","ed8a15dd":"code","b02aca92":"code","18f41922":"code","3e629260":"code","f665e922":"code","34fdc24e":"code","ac6daddc":"code","33600a08":"code","9fc1226b":"code","5fb4798c":"code","453ddba0":"code","13c7a3e3":"code","ed5c9b0c":"code","5b0f48eb":"code","fe66992e":"code","97a288d8":"code","4ee31bd5":"code","079ccb64":"code","b9bac196":"code","561f02f6":"code","5675c85b":"code","8d32d312":"code","01b7bcd6":"code","a4cd19cc":"code","13c8170c":"code","06bf50b4":"code","746c1102":"code","8dfe0098":"code","de2a287d":"code","8d980117":"code","7ab3faea":"code","896a5cc6":"code","a9f05140":"code","8fe9c0ff":"code","787b1c0a":"code","3ff9dead":"code","bdeefa1d":"code","8b4562ec":"code","c48265eb":"code","7173eb8d":"code","7b1d8dd2":"code","3dd97e64":"code","c6ce033d":"code","d1a2fa79":"code","503a3173":"code","17d13c65":"code","5f4c8958":"code","f789c775":"code","7f018026":"code","b6d2ffa0":"code","609a6d05":"code","11b328f8":"markdown","c516ed90":"markdown","94aaeb15":"markdown","0ff32c2f":"markdown","d76dfd37":"markdown","4d73df86":"markdown","3bec3814":"markdown","c4b4e2a8":"markdown","b8ff4f4b":"markdown","25c75672":"markdown","f41d48a9":"markdown","0869e0a9":"markdown","52ed74e6":"markdown"},"source":{"1d66746a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\ncrises=pd.read_csv('..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')\ncrises","93e4fb6b":"crises.info()","ed8a15dd":"x=crises.drop(['banking_crisis','cc3','gdp_weighted_default'],axis=1)\nx","b02aca92":"y=crises.iloc[:,13]\ny","18f41922":"sns.countplot(x=y,data=crises,palette='hls')\nplt.show()","3e629260":"pd.crosstab(x.country,y).plot(kind='bar')\nplt.title('crisis frequency for african country')\nplt.xlabel('country')\nplt.ylabel('frequency of banking crisis')\nplt.show()","f665e922":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency per year')\nplt.xlabel('year')\nplt.ylabel('frequency of banking crises')\nplt.show()","34fdc24e":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for systemic_crisis')\nplt.xlabel('systemic crisis')\nplt.ylabel('frequency of banking crises')\nplt.show()","ac6daddc":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for exch_usd')\nplt.xlabel('exch_usd')\nplt.ylabel('frequency of banking crises')\nplt.show()","33600a08":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for inflation_annual_cpi')\nplt.xlabel('inflation_annual_cpi')\nplt.ylabel('frequency of banking crises')\nplt.show()","9fc1226b":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for independence')\nplt.xlabel('independence')\nplt.ylabel('frequency of banking crises')\nplt.show()","5fb4798c":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for inflation_crises')\nplt.xlabel('inflation_crises')\nplt.ylabel('frequency of banking crises')\nplt.show()","453ddba0":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for currency_crises')\nplt.xlabel('currency_crises')\nplt.ylabel('frequency of banking crises')\nplt.show()","13c7a3e3":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for domestic_debt_in_default')\nplt.xlabel('domestic_debt_in_default')\nplt.ylabel('frequency of banking crises')\nplt.show()","ed5c9b0c":"pd.crosstab(x.year,y).plot(kind='bar')\nplt.title('crisis frequency for sovereign_external_debt_default')\nplt.xlabel('sovereign_external_debt_default')\nplt.ylabel('frequency of banking crises')\nplt.show()","5b0f48eb":"x.exch_usd.hist()","fe66992e":"x.country.hist()","97a288d8":"#data=x.drop(['country'],axis=1)\n#data","4ee31bd5":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nx['country']=le.fit_transform(x['country'])\ny=le.fit_transform(y)\n    ","079ccb64":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.20,random_state=0)\ny_test","b9bac196":"from sklearn.preprocessing import MinMaxScaler\nmms=MinMaxScaler()\nx_trainmin=mms.fit_transform(x_train)\n                         \nx_testmin=mms.transform(x_test)","561f02f6":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nx_trainstd=ss.fit_transform(x_train)\nx_teststd=ss.transform(x_test)","5675c85b":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_train,y_train)\npred1=lr.predict(x_test)\npred1\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred1))","8d32d312":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_trainmin,y_train)\npred2=lr.predict(x_testmin)\npred2\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred2))","01b7bcd6":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_trainstd,y_train)\npred3=lr.predict(x_teststd)\npred3\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred3))","a4cd19cc":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\nknn.fit(x_train,y_train)\npred1=knn.predict(x_test)\npred1\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred1))","13c8170c":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\nknn.fit(x_trainmin,y_train)\npred2=knn.predict(x_testmin)\npred2\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred2))","06bf50b4":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\nknn.fit(x_trainstd,y_train)\npred3=knn.predict(x_teststd)\npred3\n\n#from sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred3))","746c1102":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(x_train,y_train)\npred1=svc.predict(x_test)\npred1\n\n#from sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred1))","8dfe0098":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(x_trainmin,y_train)\npred2=svc.predict(x_testmin)\npred2\n\n#from sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred2))","de2a287d":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(x_trainstd,y_train)\npred3=svc.predict(x_teststd)\npred3\n\n#from sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_test,pred3))","8d980117":"from sklearn.tree import DecisionTreeClassifier\ndt1=DecisionTreeClassifier(splitter='best',max_depth=3,random_state=56)\ndt1.fit(x_train,y_train)\npred1=dt1.predict(x_test)\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, pred1)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test,pred1))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, pred1))\n","7ab3faea":"fet=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\n#distance\tspeed\ttemp_inside\tgas_type\tAC\train\tsun\nfrom sklearn.tree import export_graphviz\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(dt1, out_file=None, feature_names=fet, filled = True,rounded=True))\n\n\ndisplay(SVG(graph.pipe(format='svg')))\n","896a5cc6":"plt.scatter(y_test,pred1)\nplt.xlabel('Values')\nplt.ylabel('pred1')\nplt.show()","a9f05140":"from sklearn.tree import DecisionTreeClassifier\ndt2=DecisionTreeClassifier(splitter='best',max_depth=3,random_state=56)\ndt2.fit(x_trainmin,y_train)\npred2=dt2.predict(x_testmin)\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, pred2)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test,pred2))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, pred2))\n","8fe9c0ff":"fet=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\n\nfrom sklearn.tree import export_graphviz\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(dt2, out_file=None, feature_names=fet, filled = True,rounded=True))\n\n\ndisplay(SVG(graph.pipe(format='svg')))\n","787b1c0a":"plt.scatter(y_test,pred2)\nplt.xlabel('Values')\nplt.ylabel('pred2')\nplt.show()","3ff9dead":"from sklearn.tree import DecisionTreeClassifier\ndt3=DecisionTreeClassifier(splitter='best',max_depth=3,random_state=56)\ndt3.fit(x_trainstd,y_train)\npred3=dt2.predict(x_teststd)\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, pred3)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test,pred3))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, pred3))\n","bdeefa1d":"fet=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\n\nfrom sklearn.tree import export_graphviz\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(dt3, out_file=None, feature_names=fet, filled = True,rounded=True))\n\n\ndisplay(SVG(graph.pipe(format='svg')))\n","8b4562ec":"plt.scatter(y_test,pred3)\nplt.xlabel('Values')\nplt.ylabel('pred3')\nplt.show()","c48265eb":"from sklearn.ensemble import RandomForestClassifier\nmodel1 = RandomForestClassifier(n_estimators=5, random_state=50,criterion='entropy',max_depth=4)\n\nmodel1.fit(x_train, y_train)\npred1=model1.predict(x_test)\npred1","7173eb8d":"estimators=model1.estimators_[3]\nlabels=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(estimators, out_file=None\n   , feature_names=labels\n   , filled = True))\ndisplay(SVG(graph.pipe(format='svg')))\n","7b1d8dd2":"sns.distplot((y_test-pred1),bins=50)\nplt.show()","3dd97e64":"from sklearn.ensemble import RandomForestClassifier\nmodel2 = RandomForestClassifier(n_estimators=5, random_state=50,criterion='entropy',max_depth=4)\n\nmodel2.fit(x_trainmin, y_train)\npred2=model1.predict(x_testmin)\npred2","c6ce033d":"estimators=model2.estimators_[3]\nlabels=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(estimators, out_file=None\n   , feature_names=labels\n   , filled = True))\ndisplay(SVG(graph.pipe(format='svg')))\n","d1a2fa79":"sns.distplot((y_test-pred2),bins=50)\nplt.show()","503a3173":"from sklearn.ensemble import RandomForestClassifier\nmodel3= RandomForestClassifier(n_estimators=5, random_state=50,criterion='entropy',max_depth=4)\n\nmodel3.fit(x_trainstd, y_train)\npred3=model1.predict(x_teststd)\npred3","17d13c65":"estimators=model3.estimators_[3]\nlabels=['case','country','year','systemic_crisis','exch_usd','domestic_debt_in_default','sovereign_external_debt_default','inflation_annual_cpi','independence','currency_crises','inflation_crises']\nfrom sklearn import tree\nfrom graphviz import Source\nfrom IPython.display import SVG\nfrom IPython.display import display\n\ngraph = Source(tree.export_graphviz(estimators, out_file=None\n   , feature_names=labels\n   , filled = True))\ndisplay(SVG(graph.pipe(format='svg')))\n","5f4c8958":"sns.distplot((y_test-pred3),bins=50)\nplt.show()","f789c775":"from sklearn.naive_bayes import GaussianNB\nmodel1=GaussianNB()\nmodel1.fit(x_train,y_train)\n\npred1=model1.predict(x_test)\npred1\n\nfrom sklearn.metrics import accuracy_score\n#from sklearn.metrics import confusion_matrix\nprint(accuracy_score(y_test, pred1))\n\n","7f018026":"from sklearn.naive_bayes import GaussianNB\nmodel2=GaussianNB()\nmodel2.fit(x_trainmin,y_train)\n\npred2=model2.predict(x_testmin)\npred2\n\nfrom sklearn.metrics import accuracy_score\n#from sklearn.metrics import confusion_matrix\nprint(accuracy_score(y_test, pred2))\n\n","b6d2ffa0":"from sklearn.naive_bayes import GaussianNB\nmodel3=GaussianNB()\nmodel3.fit(x_trainstd,y_train)\n\npred3=model3.predict(x_teststd)\npred3\n\nfrom sklearn.metrics import accuracy_score\n#from sklearn.metrics import confusion_matrix\nprint(accuracy_score(y_test, pred3))\n\n","609a6d05":"import pandas as pd\nafrican_crises = pd.read_csv(\"..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv\")","11b328f8":"## DECISION TREE ACC TO MIN MAX SCALAR","c516ed90":"## RANDOM FOREST ACC TO MIN MAX SCALAR","94aaeb15":"## DECISION TREE ACC TO STANDARD SCALAR","0ff32c2f":"## visulization :","d76dfd37":"## DECISION TREE ACC TO TRAIN TEST SPLIT DATA","4d73df86":"## NAIVE BAYES ACC TO MIN MAX SCALAR","3bec3814":"## RANDOM FOREST ACC TO STANDARD SCALAR","c4b4e2a8":"## NAIVE BAYES ACC TO TRAIN TEST DATA","b8ff4f4b":"## LOGISTIC REGRESSION","25c75672":"## NAIVE BAYES ACC TO STANDARD SCALAR","f41d48a9":"## RANDOM FOREST ACC TO TRAIN TEST DATA","0869e0a9":"## svm","52ed74e6":"## knn"}}