{"cell_type":{"5c40c12d":"code","8d88f036":"code","0149a6ff":"markdown"},"source":{"5c40c12d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom numpy.fft import fft\nimport matplotlib.pyplot as plt","8d88f036":"df = pd.read_csv('\/kaggle\/input\/remove-drift-using-a-sine-function\/train_wo_drift.csv')[2_000_000:2_500_000]\n\ndft = fft(df.signal)\nfreq = (np.abs(dft[:len(dft)]))\n\nfor i in range(len(freq)):\n    if freq[i] < 30_000: \n        freq[i] = 0\n\nrsig = np.abs(np.fft.ifft(freq))\nplt.plot(rsig)\nplt.show()","0149a6ff":"I'm not very skilled in signal analysis.\nBut decided to share smth interesting, finded in data.\n\nIf we filter frequencies below 30_000 and then recover signal via inverse discrete Fourier Transform, then we got some periodical result.\nAm i right, we have some periodical component in high freqs?\nCan somebody explain what does it mean?\n\nData from this kernel: https:\/\/www.kaggle.com\/eunholee\/remove-drift-using-a-sine-function\n\nSorry for my English...\nA short code below..."}}