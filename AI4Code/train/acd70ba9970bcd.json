{"cell_type":{"f513ebda":"code","01d76d8a":"code","d258947d":"code","5b042730":"code","143cb772":"code","36ce1a61":"code","6761f51f":"code","489242c9":"code","6e0ad8fc":"code","65ea23c6":"code","18313ac1":"code","43f1f3df":"code","7f24caa2":"code","6dd9e1ca":"code","33bf0a1d":"code","651bfe52":"code","42c19b0a":"code","1529b4fb":"code","a6bbc644":"code","13b4a930":"code","38deefeb":"code","62191388":"code","9496ec23":"code","ddd6d244":"code","5b41237c":"code","a0ffe63a":"code","1904febf":"code","a625476e":"code","72efd3ed":"code","cdeb032b":"code","c7a93ef4":"code","84b46565":"code","cadfb5b3":"code","6098a677":"code","b9a1a32a":"code","888d60ba":"code","aa986c09":"code","2525d935":"code","292be8e0":"code","80d640a6":"code","5b215c90":"markdown","09e71f35":"markdown","bc6bb256":"markdown","f33029a1":"markdown","b7665104":"markdown","6b7259f2":"markdown","0e78f925":"markdown","e0e38c21":"markdown","7169e8e9":"markdown","d8abd27a":"markdown","274035ec":"markdown","c7b5d6c3":"markdown","d2a05473":"markdown","bbb4f1dd":"markdown","63fdf943":"markdown","831ff0ff":"markdown","f5faf5d3":"markdown","cd66aa58":"markdown","97a7850f":"markdown","c3f37e8f":"markdown","91ffc886":"markdown","d79a1ccf":"markdown"},"source":{"f513ebda":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01d76d8a":"wq_df=pd.read_csv('\/kaggle\/input\/water-potability\/water_potability.csv')","d258947d":"wq_df.info()","5b042730":"import missingno as msno\n\n#msno.matrix(wq_df)\n\nsns.heatmap(wq_df.isnull(), cbar=False)","143cb772":"msno.matrix(wq_df)","36ce1a61":"wq_df.describe()","6761f51f":"#### Univariate analysis","489242c9":"import seaborn as sns\nimport matplotlib.pyplot as plt","6e0ad8fc":"for col in wq_df.columns:\n    if col not in ['Potability']:\n        sns.boxplot(data=wq_df,y=col)\n        #sns.barplot(data=wq_df,y=col)\n        plt.show()\n    ","65ea23c6":"wq_df.head()","18313ac1":"for col in wq_df.columns:\n    if col not in ['Potability']:\n        wq_df=wq_df[wq_df[col] < wq_df[col].quantile(0.999)]\n        wq_df=wq_df[wq_df[col] > wq_df[col].quantile(0.01)]\n","43f1f3df":"wq_df.Potability.value_counts()","7f24caa2":"for col in wq_df.columns:\n    if col not in ['Potability']:\n        fig,ax =plt.subplots(1,3, figsize=(13,5))\n        sns.set_color_codes(\"muted\")\n        sns.set(style=\"whitegrid\")\n        sns.boxplot(data=wq_df,y=col,x='Potability',ax=ax[0])\n        sns.barplot(data=wq_df,y=col,x='Potability',ax=ax[1])\n        sns.violinplot(data=wq_df,y=col,x='Potability',ax=ax[2])\n            \n               \n    #plt.show()\n        plt.show()\n    ","6dd9e1ca":"wq_df.groupby(\"Potability\")['Potability'].count().plot.pie(autopct=\"%.1f%%\",labels=['red','white'])","33bf0a1d":"plt.figure(figsize =(10,10))\nsns.heatmap(wq_df.corr(),annot=True)\nplt.show()","651bfe52":"sns.pairplot(wq_df)","42c19b0a":"sns.lmplot(\"ph\", \"Hardness\", data=wq_df, hue=\"Potability\", fit_reg=False)\n","1529b4fb":"sns.lmplot(\"Sulfate\", \"Solids\", data=wq_df, hue=\"Potability\", fit_reg=False)","a6bbc644":"#sns.lmplot(\"ph\", \"Hardness\", data=wq_df, hue=\"Potability\", fit_reg=False)\nsns.lineplot(data=wq_df,y=\"ph\",x=\"Hardness\")","13b4a930":"sns.lineplot(data=wq_df,y=\"Sulfate\",x=\"Solids\")","38deefeb":"columns_with_missing_vls=['ph','Sulfate','Trihalomethanes']\nfor col in columns_with_missing_vls:\n    wq_df[col] = wq_df[col].fillna(wq_df[col].mean())","62191388":"wq_df.info()","9496ec23":"from sklearn.preprocessing import StandardScaler","ddd6d244":"scaler = StandardScaler()","5b41237c":"wq_df[wq_df.columns.difference(['Potability'])]","a0ffe63a":"wq_df_scaler=scaler.fit_transform(wq_df[wq_df.columns.difference(['Potability'])])","1904febf":"wq_df_scaler_df=pd.DataFrame(wq_df_scaler,columns=[wq_df[wq_df.columns.difference(['Potability'])].columns])","a625476e":"wq_df_scaler_df","72efd3ed":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","cdeb032b":"Y=wq_df.pop('Potability')\nX=wq_df_scaler_df","c7a93ef4":"X","84b46565":"from imblearn.over_sampling import SMOTE\nsm=SMOTE(k_neighbors=4)\n\nX,Y=sm.fit_resample(X,Y)","cadfb5b3":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)","6098a677":"model = XGBClassifier(radom_state=42)\nmodel.fit(X_train, y_train)","b9a1a32a":"y_pred = model.predict(X_test)","888d60ba":"print(\"Accuracy: %.2f%%\" % (accuracy_score(y_pred,y_test) * 100.0))","aa986c09":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(random_state=42)","2525d935":"rfc.fit(X_train, y_train)","292be8e0":"y_pred_rc = rfc.predict(X_test)","80d640a6":"print(\"Accuracy: %.2f%%\" % (accuracy_score(y_pred_rc,y_test) * 100.0))","5b215c90":"#### The accuracy with XGBhhost is around ~ 70 %","09e71f35":"#### From above analysis we see all the varaibles are independent","bc6bb256":"#### Check correlation among varaibles","f33029a1":"#### Check missing values again","b7665104":"#### Lets apply standard scaler ","6b7259f2":"### Split test and train with equal proportion","0e78f925":"#### There is not much variation between potability distribution","e0e38c21":"#### lets check the relation among all the variables using pair plot","7169e8e9":"### Bivariate analysis","d8abd27a":"#### Test and train split","274035ec":"### Check for missing values","c7b5d6c3":"#### check relation Sulfate , Solids and Potability","d2a05473":"#### We see some corelation between\n  - ph and Hardness\n  - Sulfate and Solids","bbb4f1dd":"#### check relation among ph , Hardness and Potability","63fdf943":"- ph\n- sulfate\n- Trihalomethanes","831ff0ff":"### Lets remove outliers","f5faf5d3":"### Model builidng with RandomForest classfier","cd66aa58":"###  Model building with XGBhhost","97a7850f":"### Fill missing values","c3f37e8f":"### As per above analysis, The best accuracy is ~ 73 with Random Forest.","91ffc886":"### Below columns have missing values:\n  -  ph\n  -  Sulfate\n  -  Trihalomethanes","d79a1ccf":"#### Check Potability distribution percentage"}}