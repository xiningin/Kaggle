{"cell_type":{"ed52d525":"code","bc475005":"code","db4df165":"code","2443ec98":"code","a345a765":"code","6832dfab":"code","de0be9ef":"code","aa2af3e8":"code","5a461891":"code","26d6712c":"code","045af682":"code","0be7c5c9":"code","367b0d4c":"code","7c90ceff":"code","438041ba":"code","5e38303e":"code","ce867995":"code","c4d61fba":"code","370bb527":"code","0789d507":"code","23eb2939":"code","3ae8f61a":"code","5f05c055":"markdown","5835c335":"markdown","08e22232":"markdown","db062706":"markdown","3747f63a":"markdown","862f7291":"markdown","153f5f53":"markdown","93ac8d7b":"markdown","86ad6692":"markdown","2c2e6726":"markdown","eef4966c":"markdown","ff1564d9":"markdown","0a824ab2":"markdown","be1ef1cb":"markdown"},"source":{"ed52d525":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.rcParams['figure.figsize']=[10,5]\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nData=pd.read_csv(\"..\/input\/Admission_Predict_Ver1.1.csv\")\n\n# Any results you write to the current directory are saved as output.","bc475005":"Data.head()","db4df165":"Data.columns=['Serial No', 'GRE Score', 'TOEFL Score', 'University Rating', 'SOP',\n       'LOR', 'CGPA', 'Research', 'Chance of Admit']\nData.describe()\nData.head()","2443ec98":"GRE_Score=Data[\"GRE Score\"]\nGRE_Score.describe()\n","a345a765":"sns.distplot(GRE_Score,hist_kws={\"color\":\"orange\",\"edgecolor\":\"black\"})\nplt.show()","6832dfab":"TOEFL_Score=Data[\"TOEFL Score\"]\nTOEFL_Score.describe()","de0be9ef":"sns.distplot(TOEFL_Score,hist_kws={\"color\":\"blue\",\"edgecolor\":\"black\"})\nplt.show()","aa2af3e8":"with sns.axes_style('darkgrid'):\n    sns.jointplot(TOEFL_Score,GRE_Score, kind='scatter')","5a461891":"UR=Data[\"University Rating\"]\nUR1=UR.value_counts()\nUR1=UR1.reset_index()\nplt.bar(UR1[\"index\"],UR1[\"University Rating\"])\nplt.show()","26d6712c":"SOP=Data[\"SOP\"]\nplt.rcParams['figure.figsize']=[10,5]\nSOP.unique()\nsns.countplot(SOP)\nplt.show()","045af682":"LOR=Data[\"LOR\"]\nplt.rcParams['figure.figsize']=[10,5]\nLOR.unique()\nsns.countplot(LOR)\nplt.show()","0be7c5c9":"CGPA=Data[\"CGPA\"]\nplt.hist(CGPA,edgecolor=\"black\")\nplt.show()","367b0d4c":"sns.countplot(Data[\"Research\"])\nplt.show()","7c90ceff":"sns.boxplot(Data[\"University Rating\"],y=Data[\"CGPA\"])\nplt.show()","438041ba":"sns.scatterplot(Data[\"GRE Score\"],Data[\"TOEFL Score\"],hue=Data[\"Research\"])\nplt.show()","5e38303e":"plt.rcParams['figure.figsize'] = [25, 15]\nData[\"University Rating\"]=Data[\"University Rating\"].astype(\"category\")\n#sns.swarmplot(Data[\"GRE Score\"],Data[\"TOEFL Score\"],hue=Data[\"University Rating\"])\nsns.stripplot(Data[\"GRE Score\"],Data[\"TOEFL Score\"],hue=\"University Rating\",data=Data,size=20)\n#Data[\"University Rating\"].unique()\nplt.show()","ce867995":"CGPA=Data[\"CGPA\"]\nbins=[6,6.5,7,7.5,8,8.5,9,9.5,10]\nCGPA=pd.cut(CGPA,bins)\nCGPA=CGPA.to_frame()\nCGPA.columns=[\"range\"]\nCGPA[\"range\"].unique()\nplt.rcParams['figure.figsize']=[25,15]\nsns.stripplot(Data[\"GRE Score\"],Data[\"TOEFL Score\"],hue=CGPA[\"range\"],data=Data,size=15)\nplt.show()\n\n","c4d61fba":"Data[\"University Rating\"]=Data[\"University Rating\"].astype(\"float\")\nData1=Data.loc[:,\"GRE Score\":]\nData_x=Data1.loc[:,:\"Research\"]\nData_y=Data1.loc[:,\"Chance of Admit\"]\nfrom sklearn.preprocessing import StandardScaler\n#Data_x[\"SOP\"]=Data_x[\"SOP\"].astype(\"category\")\n#Data_x[\"LOR\"]=Data_x[\"LOR\"].astype(\"category\")\nData_x.info()","370bb527":"scaler = StandardScaler()\nData_x=scaler.fit_transform(Data_x)\nData_x\n","0789d507":"from sklearn.tree import DecisionTreeClassifier","23eb2939":"from sklearn.model_selection import train_test_split\nData_y=[1 if each > 0.8 else 0 for each in Data_y]\ntrain_x,test_x,train_y,test_y=train_test_split(Data_x,Data_y,test_size=0.2,random_state=28)\nmodel=DecisionTreeClassifier(max_depth=2,random_state=28)\nmodel.fit(train_x,train_y)\nprediction=model.predict(test_x)\nfrom sklearn.metrics import f1_score\nf1_score(prediction,test_y)","3ae8f61a":"from sklearn.naive_bayes import GaussianNB\nmodel1=GaussianNB()\nmodel1.fit(train_x,train_y)\nprediction=model1.predict(test_x)\nf1_score(prediction,test_y)","5f05c055":"Let's see some relationship between HIgh rated College and CGPA","5835c335":"Starting analyzing every columns.\nFirst with GRE Score","08e22232":"University Ranking Info\n","db062706":"Some jointplot between TOEFL score and GRE Score","3747f63a":"Now Some Machine Learning","862f7291":"Statement of Purpose","153f5f53":"Starting with DecisionTree","93ac8d7b":"CGPA\n","86ad6692":"Let's check Data","2c2e6726":"TOEFL Score info","eef4966c":"One sexy distribution graph","ff1564d9":"Naive Bayes","0a824ab2":"**Let's Begin**\n\nFirst we import important libraries","be1ef1cb":"**Some Data processing**\n\nBasically i am renaming column names ,just removing some whitespaces and all"}}