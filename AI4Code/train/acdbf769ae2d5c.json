{"cell_type":{"de1ef119":"code","f6973b2d":"code","ea88b45b":"code","e25404a3":"code","ccb9ef5e":"code","0f1b82fc":"code","abb7de3c":"code","e07407f6":"code","bc391ab2":"code","d7bd2ebe":"code","136a9e1a":"code","fc5ba6bb":"code","ac63f633":"code","324bd0e6":"code","d0b0657a":"code","7e4a986d":"code","2f0b31b8":"code","0f671e77":"code","36ed9478":"markdown","6c798112":"markdown","3ea37ecb":"markdown","dda0b5b3":"markdown","225d6770":"markdown","ef663108":"markdown","077e7018":"markdown","6e72e630":"markdown","443d5f27":"markdown","8aafc907":"markdown","06cdb2b5":"markdown","cc01e450":"markdown","77dc887d":"markdown","3dc78d88":"markdown","e7146be1":"markdown","ae495302":"markdown"},"source":{"de1ef119":"#importing required packages\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nimport numpy as np\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\nsns.set(style=\"whitegrid\")\nimport missingno as msno\n#Interactive\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nfrom IPython.display import display, HTML","f6973b2d":"HTML('''<script>\ncode_show=true; \nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n $('div.cell.code_cell.rendered.selected div.input').hide();\n} \n$( document ).ready(code_toggle);\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" class=\"btn btn-primary\" value=\"Click here to toggle on\/off the raw code.\"><\/form>''')","ea88b45b":"#Reading data\nstoredata = pd.read_csv(\"..\/input\/googleplaystore.csv\")\n\nprint(\"\\n First 7 rows in our dataset\")\ndisplay(storedata.head(7))\n\nprint(\"\\n Number of rows in our dataset = \" + str(storedata.shape[0]))","e25404a3":"#Last Updated to (Month, Year) to number\nstoredata['Last Updated'] = pd.to_datetime(storedata['Last Updated'],format='%B %d, %Y',errors='coerce').astype('str')\n\ndef split_mul(data):\n    try:\n        data=list(map(int,data.split('-')))\n        return data[0]+(data[1]*12)+data[2]\n    except:\n        return \"Nan\"\nstoredata['Last Updated'] = [split_mul(x) for x in storedata['Last Updated']]\n\n#Improve 'Android Ver' and 'Installs' representation\nstoredata[\"Android Ver\"] = storedata[\"Android Ver\"].str.split(n=1, expand=True)\n\ndef deal_with_abnormal_strings(data):\n    data[data.str.isnumeric()==False]=-1\n    data=data.astype(np.float32)\n    return data\n\nstoredata.Installs = [x.strip().replace('+', '').replace(',','') for x in storedata.Installs]\nstoredata.Installs = deal_with_abnormal_strings(storedata.Installs)\n\nstoredata.Size = [x.strip().replace('M', '').replace(',','') for x in storedata.Size]\n\ndef convert_float(val):\n    try:\n        return float(val)\n    except ValueError:\n        try:\n            val=val.split('.')\n            return float(val[0]+'.'+val[1])\n        except:\n            return np.nan\n\n","ccb9ef5e":"storedata.head(7)","0f1b82fc":"#Number of categories of apps in the store.....\ndef plot_number_category():\n    fig, ax = plt.subplots()\n    fig.set_size_inches(15, 7)\n    fig.autofmt_xdate()\n    countplot=sns.categorical.countplot(storedata.Category,ax=ax)\n    plt.show(countplot)\n\nplot_number_category()\n\n# Tabular representation\ntop_cat=storedata.groupby('Category').size().reset_index(name='Count').nlargest(6,'Count')\ndisplay(top_cat)\n","abb7de3c":"\n\ncat=top_cat.Category.tolist()\ndata_top6=storedata.groupby('Category')['Installs'].agg('sum').loc[cat].reset_index(name='Number_Installations')\ndata=storedata.groupby('Category')['Installs'].agg('sum').reset_index(name='Number_Installations')\n\n#Comparing top 5 category on the basis of 'Installs'\ndef compare_6(data):\n    fig = plt.figure(figsize=(12,4))\n    title=plt.title('Comparing top 5 category on the basis of Installs')\n    bar=sns.barplot(y=data['Category'],x=data['Number_Installations'])\n    plt.show(bar)\n\n#Comparing all categoryies on the basis of 'Installs'\ndef compare_all(data):\n    fig = plt.figure(figsize=(12,7))\n    title=plt.title('Comparing all categories on the basis of Installs')\n    bar=sns.barplot(y=data['Category'],x=data['Number_Installations'])\n    plt.show(bar)\n    \ncompare_6(data_top6)\n\n","e07407f6":"compare_all(data)","bc391ab2":"print('\\nTabular Rep.Of Top 5 Number of Installation by Category')\ndisplay(data.nlargest(6,'Number_Installations'))","d7bd2ebe":"#features to use for correlation\ncorr_cat=['Rating','Reviews','Size','Installs','Current Ver','Android Ver','Last Updated']\nfor i in corr_cat:\n    storedata[i]=storedata[i].apply(lambda x: convert_float(x)) #To get it compatible to check correlation\n\ncorrelation = storedata[corr_cat].corr()\n\nprint(\"\\n Correlation of Installs with other selected features \")\ndisplay(correlation['Installs'].sort_values(ascending=False))\n\n","136a9e1a":"#Correlation Heatmap \nf , ax = plt.subplots(figsize = (14,12))\ntitle=plt.title('Correlation of Numeric Features with Installs',y=1,size=16)\nheatmap=sns.heatmap(correlation,square = True,  vmax=0.8)\nplt.show(heatmap)","fc5ba6bb":"install_sum_content=storedata.groupby('Content Rating')['Installs'].agg('sum').reset_index(name='Number_Installations')\napp_sum_content=data=storedata.groupby('Content Rating')['Installs'].size().reset_index(name='Number_Apps')\n\ndef content_bar_sum(data):\n    fig=plt.figure(figsize=(12,6))\n    \n    title=plt.title('Comparision of content ratings (Number of Installations)')\n    content_bar = sns.barplot(x=data['Content Rating'],y=data['Number_Installations'])\n    plt.show(content_bar)\n    \ndef content_bar_count(data):\n    fig=plt.figure(figsize=(12,6))\n    \n    title=plt.title('Comparision of content ratings (Number of Apps in Market)')\n    content_bar = sns.barplot(x=data['Content Rating'],y=data['Number_Apps'])\n    plt.show(content_bar)\n    \ncontent_bar_sum(install_sum_content)\ncontent_bar_count(app_sum_content)\n","ac63f633":"#Temporary dataframe with improved comparision metric for content rating\ncontent=pd.DataFrame()\ncontent['Content Rating'] = app_sum_content['Content Rating']\ncontent['No_Installations\/Total_Apps']=install_sum_content['Number_Installations']\/app_sum_content['Number_Apps']","324bd0e6":"#Visualize content\nfigure=plt.figure(figsize=(12,7))\ntitle=plt.title('Content Rating Comparision')\nbar=sns.barplot(x=content['Content Rating'],y=content['No_Installations\/Total_Apps'])\nplt.show(bar)","d0b0657a":"install_sum_type=storedata.groupby('Type')['Installs'].agg('sum').reset_index(name='Number_Installations')\n\ndef type_bar_sum(data):\n    fig=plt.figure(figsize=(12,6))\n    \n    title=plt.title('Comparision of  types (Number of Installations)')\n    content_bar = sns.barplot(x=data['Type'],y=data['Number_Installations'])\n    plt.show(content_bar)\ntype_bar_sum(install_sum_type)","7e4a986d":"storedata['Name_check']=['>2 words' if len(x.split())>2 else '<=2words' for x in storedata['App'] ]\n\ndata_install= storedata.groupby('Name_check')['Installs'].agg('sum').reset_index(name='Number_Installations')\ndata_apps= storedata.groupby('Name_check').size().reset_index(name='Number_Apps')\n\n\nfig,axes = plt.subplots(figsize=(15,3),ncols=2, nrows=1)\n\ntitle=axes[0].set_title(\"No. of Installations\", y = 1.1)\ntitle=axes[1].set_title(\"No of Apps\", y = 1.1)\n\nplot1=sns.barplot( x=data_install['Name_check'],y=data_install['Number_Installations'] , ax=axes[0])\n\nplot2=sns.barplot( x=data_apps['Name_check'],y=data_apps['Number_Apps'] , ax=axes[1])\n\nplt.show(fig)\n\n# No. of installation \/ No. of apps\n\nfigure=plt.figure(figsize=(12,5))\ntitle=plt.title(\"Installations\/Total Apps\", y = 1.0)\nplot3=sns.barplot( x=data_apps['Name_check'],y=data_install['Number_Installations']\/data_apps['Number_Apps'] ,palette=sns.color_palette(palette=\"Set1\",n_colors=2,desat=.8))\nplt.show(figure)","2f0b31b8":"#Number of null values in each feature\nstoredata.isnull().sum()\n\n#Visualising missing data\nmissing = msno.matrix(storedata.sample(250))","0f671e77":"mheatmap=msno.heatmap(storedata)","36ed9478":"<b>Are you surprised ???? <\/b>  \nI am .. 'Installs' is really so alone. No neighbour cares about him. They all are completely uncorrelated except Reviews. Reviews seems to have some effect on number of Installs. <b>BUT WAIT<\/b>  We can be wrong here. It seems to be a minor data leakage condition. With more installs comes more reviews. So they are more codependant.   \n\n<i>There's still some hope for our hero. We'll have happy ending. Let's check the categorical features for some positive information. Hang on ;)<\/i>","6c798112":"Yea... I know ... It was a boring part... It turns that in our storyline we have only one path ... 'Free' one....  \n\nHave you ever wondered if the name of the App plays an impact on its number of installations!!!  \nLet's feed our curiousity.  \n<i>We'll make a feature column like :- App name greater than 2 words or not, and visualize the comparisions<\/i>","3ea37ecb":"Ahhaaa !!! Isn't that like a suspensive movie twist ;)  \nBy a little tweak, we have got a completely different story. 'Everyone' is an easy option but 'Teen' and '10+' are the most rewarding.  \nAnd so, our hero 'Installs' moves forward on his journey. He has two paths to go :- 'Free' and 'Paid'. Let's see what happens now and what moves our hero.","dda0b5b3":"Okay !! It seems like 'Everyone' is the only choice for us to prefer. But no.... let's dive into this two graphs more to get good intel. Number of 'Teen' Apps are few as compared to 'Everyone' but when we check its 'Number of Installations', it seems like a good second best choice. <b>Few apps but Considerable Installations<\/b>  \nAhaaa !! Our hero 'Install' just got his first good partner XD. Let's interrogate him.","225d6770":"## Features Engineering  \n\nLike any other movie, our movie will also revolve around one main character. In this story, it is <b>'Installs'<\/b>. We will see who all character are his friends, foes and the ones who just doesn;t care about him.   \n\nAs we can see from the beginning Genres are Category are somewhat same. So we can omit Category as Genres present all its relevant information along with sub-categories. <i> Sayonara Category <\/i>  \n\nBefore getting into action part, our favourite <i>visualization<\/i> part, we will transform our character to a state where it is really easy for them to do all cool actions and deliver us amazing visualizations.\n\n    1) As far as I can understand, 'last updated' gives us to know if the developers are still improving this     app or moved on to some other work. So we can just update our data accordingly to easily represent that.\n    2) 'Android Ver.' can be represented more easily to use it in visualization.\n\nOk ... Let's continue !!\n    ","ef663108":"Now we know that 'Family' and 'Game' category rules the playstore market, followed by Tools,Medical and Business.\n<b>Okay Cool ..... <\/b> Developers understand our daily requirements and filling the market by similar apps.\nSo lets compare this 5 apps with their actual installs.","077e7018":"As we witnessed... Rating,Size,Current Ver. and Android Ver. have null values but our visualizations were not affected by this as we handled them during processing.  \nOur hero is NaNproof XD.  \n\nLet's the increase of this scene with <b>Missingno Correlation Heatmap<\/b>  \nThe missingno correlation heatmap measures nullity correlation: how strongly the presence or absence of one variable affects the presence of another:","6e72e630":"## Description of Dataset","443d5f27":"### In this notebook, we are aiming to understand the trend of current Google Playstore market.  \n\n<i>But Why ???<\/i>   \n\n<b>Because as a developer, I should know the best constraints to focus on when launching my first app :D .  \n    And I definitely have no intention of getting lost in this vast ocean of versatile apps XD<\/b>  \n\nSo stay with me on this short journey. \n\n------------------------------------------------------------------------------------------------------\n    ","8aafc907":"<b>Woww...<\/b> Family betrayed our 'Installs'.As we have seen so far, list of Top 6 Categories (acc. to number of apps developed) and Top 6 categories (acc. to number of Installs) differ a lot.  \nWe can feel this story. As a developer, we can use this information to decide our future projects.  \n\nTill now, our movie has been building slowly. Now let's increase its pace and see the relationship of our hero 'Installs' with other characters......","06cdb2b5":"## Conclusion\n\nYayyy!!! This is the end of our movie. Hope you enjoyed this journey.  \nIn this, we have seen :-\n    1) How every feature has an unique impact on the story.\n    2) Why exploring data is important beforing starting to build ML models\n    3) How visualizations make anything interesting. ;)\n    4) There's hell lot of comeptition in Android market.\n\nFinal Note :- This is the first movie directed by me. I have always tried running away from EDA, because Deep Learning and ML models seems super interesting. But believe me, EDA is an important subject.  \nAnd I will improve in this field and be regular with improved EDA's and interesting datasets.  \nStay connected :D ;)\n\n<center><h1> Thank You !!!! <\/h1><\/center>","cc01e450":"## Content\n\n<a href=\"#Description-of-Dataset\">Description of Dataset<\/a>  \n\n<a href=\"#Features-Engineering\">Features Engineering<\/a>  \n\n<a href=\"#Visulaizations \">Visulaizations <\/a> \n\n<a href=\"#Missing-Data-Study\">Missing Data Study<\/a>  \n\n<a href=\"#Conclusion\">Conclusion<\/a>  \n\n------------------------------------------------------------------------------------------------------------------","77dc887d":"<center><h1 style=\"color:blue\"><b>Google Playstore EDA<\/b><\/h1><\/center>","3dc78d88":"## Visulaizations \n\nNow we'll get into the fun part. We will try different visualization techniques to understand the life of our hero \"Installs\" and other characters.","e7146be1":"As our visualizations speak, it is better to have a small name for our app. Well, I personally prefer small but effective names.  \n\n<b>But the movie never ends without witnessing any villians. So it is required to witness villians of our data.<\/b>\n\n\n## Missing Data Study\n","ae495302":"<h3>We are going to use a simple csv file \"Playstore.csv\", available on Kaggle.  \nBefore getting into actual <i>movie<\/i>, let's have a look at our main characters :- <\/h3> \n\n    1) App :- Name of the App\n    2) Category :- Category under which the App falls.\n    3) Rating :- Application's rating on playstore\n    4) Reviews :- Number of reviews of the App.\n    5) Size :- Size of the App.\n    6) Install :- Number of Installs of the App\n    7) Type :- If the App is free\/paid\n    8) Price :- Price of the app (0 if it is Free)\n    9) Content Rating :- Appropiate Target Audience of the App.\n    10) Genres:- Genre under which the App falls.\n    11) Last Updated :- Date when the App was last updated\n    12) Current Ver :- Current Version of the Application\n    13) Android Ver :- Minimum Android Version required to run the App\n    \n<i>So now we know our characters and a basic plot, lets start our movie with no more delay. <\/i>"}}