{"cell_type":{"89f7bb51":"code","a801a21e":"code","e23b6ca8":"code","8aa28309":"code","b011ff51":"code","8b1e7bae":"code","66107527":"code","6d76e930":"markdown"},"source":{"89f7bb51":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a801a21e":"n = 200000","e23b6ca8":"%%time\nseries_1 = np.random.randint(low = 1,high = 1000,size = n)\nseries_1_T = series_1.reshape(n,1)\nseries_2  = np.random.randint(low = 1,high = 1000,size = n)\nseries_2_T = series_2.reshape(n,1)","8aa28309":"%%time\ndef differ(x):\n    count = 0\n    tabel_1 = series_1 + series_1_T[x:x+2000]\n    tabel_2 = series_2 + series_2_T[x:x+2000]\n    diff= tabel_1[tabel_1>tabel_2].shape[0]\n    count += diff\n    return count","b011ff51":"arr = pd.DataFrame(data = np.arange(0,n,2000),columns = [\"numbers\"])","8b1e7bae":"%%time\ncount_each_run = arr[\"numbers\"].apply(differ)","66107527":"count_each_run.sum()","6d76e930":"This is just a small game, it doesn't relate to data science project so much. However, it works with really big numbers and big shape of arrays. I believe this small job would be a good practice for dealing with big things. Please help me to improve my code. Thanks a lot."}}