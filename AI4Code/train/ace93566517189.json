{"cell_type":{"3b8d6332":"code","90fcc040":"code","438ba7b3":"code","5d223673":"code","4376af72":"code","d312ab89":"code","0976fe47":"code","46b8ccb1":"code","0cf42c5d":"code","cdef3ddc":"code","f99436e9":"code","9868cf46":"code","717f7c84":"code","3f51a171":"code","4b20acd9":"code","c2604a5a":"code","9c3fd984":"code","317609d9":"code","60217060":"code","03ede993":"code","7b693112":"code","6822a197":"code","f12916a2":"code","1271f05f":"code","42ce42e2":"code","8d10c016":"code","0a3331f6":"code","72c2e8ea":"code","92b762d7":"code","d6765a97":"code","6d94e20a":"code","2da31882":"code","f14348d6":"code","081d951a":"code","b096309c":"code","d57fe804":"code","e6f82dc2":"code","7eaa0d1a":"code","fe777841":"code","0b65bf8d":"code","83213a79":"code","7bfd470c":"code","49498823":"code","db1b4b17":"code","20a056db":"code","f5bcad8b":"code","5eb4aec3":"code","28a600f3":"code","41c26458":"code","fd26f494":"code","3953ab22":"code","2582b7a1":"code","d0781bc1":"code","a0dd4031":"code","200fa134":"code","8fc0f21e":"code","abd2ee34":"code","d9c326b2":"code","10c59347":"code","afaef842":"code","176d5dc7":"code","1874a2da":"code","b883c191":"code","3fec43e9":"code","a16c84ea":"code","43ed58c5":"code","2ef798ba":"code","4d80072a":"code","7cfed7e8":"code","c424dee9":"code","33e8cfd5":"code","c7428ec3":"code","c3f01915":"code","c81d4b0f":"code","0a630ec1":"code","e42af9ca":"code","c7c31b70":"code","7bfce868":"code","86b5781e":"code","cbdd3ae8":"code","773cde09":"code","a1825e30":"code","ad83a3ef":"code","bd127b4f":"code","55f8610f":"code","d17cfdd7":"code","963b43a2":"code","3f949566":"code","7e2bf7c0":"code","575b3164":"code","e2ac1a64":"code","08126046":"code","3f9af536":"code","76ad15e2":"markdown","bcd03ec6":"markdown","7015eec1":"markdown","4b98e8ed":"markdown","1d8e0583":"markdown","b296da13":"markdown","32b2fcd7":"markdown","44d00b3f":"markdown","e4f1c202":"markdown","de8b15bf":"markdown","00224a42":"markdown","dee0f7aa":"markdown","f03b0593":"markdown","6e348dfd":"markdown","6a66e545":"markdown","a803e727":"markdown","7adc95fc":"markdown","ea426a1a":"markdown","a621673e":"markdown","a110ee02":"markdown","ee5fc2e9":"markdown","2937a7f4":"markdown","fdf7b159":"markdown","10289a53":"markdown","79a44965":"markdown","eb1eac6e":"markdown","74558280":"markdown","6ebd220c":"markdown","e5d1d100":"markdown","2bc81ce2":"markdown","cf2f5eff":"markdown","5de6ab66":"markdown","950b7df3":"markdown","3346a040":"markdown","d9ebec32":"markdown","ec337002":"markdown","3ebeaee2":"markdown","262ccb4d":"markdown","dabb1008":"markdown","5f661afb":"markdown","f111125a":"markdown","a13e1bc0":"markdown","6e2a48a5":"markdown","17aad403":"markdown","753b1376":"markdown","f3f51d7c":"markdown","ed2c205c":"markdown","c7f06dc8":"markdown","a709cb3f":"markdown","dffaa18e":"markdown","0e5ac280":"markdown","1cf8edbc":"markdown","6429d5ac":"markdown","319da92d":"markdown","77daf313":"markdown","88ac15d2":"markdown"},"source":{"3b8d6332":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n","90fcc040":"#import the file\n\nimp = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\nimp\n","438ba7b3":"imp.columns\n\n","5d223673":"imp.head()","4376af72":"imp.tail()","d312ab89":"print(\"Number of rows = \",len(imp))\nprint(\"Number of columns = \",len(imp.columns))","0976fe47":"#Finding out columns \n\nimp.columns","46b8ccb1":"#Finding out datatypes\n\nimp.dtypes.to_frame(name='dtypes').T","0cf42c5d":"#Finding out datatype\n\nimp.dtypes","cdef3ddc":"imp.info()","f99436e9":"#finding out null or not null values\n\nimp.isnull()","9868cf46":"imp.isnull().sum()","717f7c84":"nx_hist = imp.isnull().sum()\n\nplt.figure(figsize=[10,5])\n\n#nx = plt.hist(x=nx_hist)\n\nplt.grid(axis='y', alpha=0.75)\n\nplt.xlabel('Value',fontsize=15)\n\nplt.xticks(fontsize=15)\n\nplt.yticks(fontsize=15)\n\nplt.title('Tip Histogram - Bins 20',fontsize=15)\n\nnx_hist.plot()","3f51a171":"#We can do it as also:--\n\nhist_1 = imp.isnull().sum()\nhist_1.plot()","4b20acd9":"imp.describe()","c2604a5a":"round(imp.describe())","9c3fd984":"f_d = imp.describe()","317609d9":"fa = f_d['fixed acidity']\nprint(fa)\n\nprint()\n\nfa_q1 = fa.iloc[4]\nfa_q3 = fa.iloc[6]\n\nprint(\"Fixed Acidity Q1 : \",fa_q1)\nprint(\"Fixed Acidity Q3 : \",fa_q3)\n\nprint()\n\nfa_iqr = fa_q3 - fa_q1\nprint(\"Fixed Acidity IQR : \",fa_iqr)\n\nprint()\n\nfa_out_l = fa_q1 - (1.5 * fa_iqr)\nprint(\"Fixed Acidity Lower Outliers : \",fa_out_l)\n\nfa_out_u = fa_q3 + (1.5 * fa_iqr)\nprint(\"Fixed Acidity Upper Outliers : \",fa_out_u)\n\nfor i in fa:\n    if(i<fa_out_l or i>fa_out_u):\n        print(\"\\nOutliers Of Fixed Acidity\",i)","60217060":"va = f_d['volatile acidity']\nprint(va)\n\nprint()\n\nva_q1 = va.iloc[4]\nva_q3 = va.iloc[6]\n\nprint(\"Volatile Acidity Q1 : \",fa_q1)\nprint(\"Volatile Acidity Q3 : \",fa_q3)\n\nprint()\n\nva_iqr = va_q3 - va_q1\nprint(\"Volatile Acidity IQR : \",fa_iqr)\n\nprint()\n\nva_out_l = va_q1 - (1.5 *va_iqr)\nprint(\"Volatile Acidity Lower Outliers : \",va_out_l)\n\nva_out_u = va_q3 + (1.5 * va_iqr)\nprint(\"Volatile Acidity Upper Outliers : \",va_out_u)\n\nfor i in va:\n    if(i<va_out_l or i>va_out_u):\n        print(\"\\nOutliers Of Volatile Acidity\",i)","03ede993":"ca = f_d['citric acid']\nprint(ca)\n\nprint()\n\nca_q1 = ca.iloc[4]\nca_q3 = ca.iloc[6]\n\nprint(\"Citric Acid Q1 : \",ca_q1)\nprint(\"Citric Acid Q3 : \",ca_q3)\n\nprint()\n\nca_iqr = ca_q3 - ca_q1\nprint(\"Citric Acid IQR : \",ca_iqr)\n\nprint()\n\nca_out_l = ca_q1 - (1.5 * ca_iqr)\nprint(\"Citric Acid Lower Outliers : \",ca_out_l)\n\nca_out_u = ca_q3 + (1.5 * ca_iqr)\nprint(\"Citric Acid Upper Outliers : \",ca_out_u)\n\nfor i in ca:\n    if(i<ca_out_l or i>ca_out_u):\n        print(\"\\nOutliers Of Citric Acid\",i)","7b693112":"rs = f_d['residual sugar']\nprint(rs)\n\nprint()\n\nrs_q1 = rs.iloc[4]\nrs_q3 = rs.iloc[6]\n\nprint(\"Residual Sugar Q1 : \",rs_q1)\nprint(\"Residual Sugar Q3 : \",rs_q3)\n\nprint()\n\nrs_iqr = rs_q3 - rs_q1\nprint(\"Residual Sugar IQR : \",rs_iqr)\n\nprint()\n\nrs_out_l = rs_q1 - (1.5 * rs_iqr)\nprint(\"Residual Sugar Lower Outliers : \",rs_out_l)\n\nrs_out_u = rs_q3 + (1.5 * rs_iqr)\nprint(\"Residual Sugar Upper Outliers : \",rs_out_u)\n\nfor i in rs:\n    if(i<rs_out_l or i>rs_out_u):\n        print(\"\\nOutliers Of Residual Sugar\",i)","6822a197":"c = f_d['chlorides']\nprint(c)\n\nprint()\n\nc_q1 = c.iloc[4]\nc_q3 = c.iloc[6]\n\nprint(\"Chlorides Q1 : \",c_q1)\nprint(\"Chlorides Q3 : \",c_q3)\n\nprint()\n\nc_iqr = c_q3 - c_q1\nprint(\"Chlorides IQR : \",rs_iqr)\n\nprint()\n\nc_out_l = c_q1 - (1.5 * c_iqr)\nprint(\"Chlorides Lower Outliers : \",c_out_l)\n\nc_out_u = c_q3 + (1.5 * c_iqr)\nprint(\"Chlorides Upper Outliers : \",c_out_u)\n\nfor i in c:\n    if(i<c_out_l or i>c_out_u):\n        print(\"\\nOutliers Of Chlorides\",i)","f12916a2":"fsd = f_d['free sulfur dioxide']\nprint(fsd)\n\nprint()\n\nfsd_q1 = fsd.iloc[4]\nfsd_q3 = fsd.iloc[6]\n\nprint(\"Free Sulfur Dioxide Q1 : \",fsd_q1)\nprint(\"Free Sulfur Dioxide Q3 : \",fsd_q3)\n\nprint()\n\nfsd_iqr = fsd_q3 - fsd_q1\nprint(\"Free Sulfur Dioxide IQR : \",fsd_iqr)\n\nprint()\n\nfsd_out_l = fsd_q1 - (1.5 * fsd_iqr)\nprint(\"Free Sulfur Dioxide Lower Outliers : \",fsd_out_l)\n\nfsd_out_u = fsd_q3 + (1.5 * fsd_iqr)\nprint(\"Free Sulfur Dioxide Upper Outliers : \",fsd_out_u)\n\nfor i in fsd:\n    if(i<fsd_out_l or i>fsd_out_u):\n        print(\"\\nOutliers Of Free Sulfur Dioxide\",i)","1271f05f":"tsd = f_d['total sulfur dioxide']\nprint(tsd)\n\nprint()\n\ntsd_q1 = tsd.iloc[4]\ntsd_q3 = tsd.iloc[6]\n\nprint(\"Total Sulfur Dioxide Q1 : \",tsd_q1)\nprint(\"Total Sulfur Dioxide Q3 : \",tsd_q3)\n\nprint()\n\ntsd_iqr = tsd_q3 - tsd_q1\nprint(\"Total Sulfur Dioxide IQR : \",tsd_iqr)\n\nprint()\n\ntsd_out_l = tsd_q1 - (1.5 * tsd_iqr)\nprint(\"Total Sulfur Dioxide Lower Outliers : \",tsd_out_l)\n\ntsd_out_u = tsd_q3 + (1.5 * tsd_iqr)\nprint(\"Total Sulfur Dioxide Upper Outliers : \",tsd_out_u)\n\nfor i in tsd:\n    if(i<tsd_out_l or i>tsd_out_u):\n        print(\"\\nOutliers Of Total Sulfur Dioxide\",i)","42ce42e2":"d = f_d['density']\nprint(d)\n\nprint()\n\nd_q1 = d.iloc[4]\nd_q3 = d.iloc[6]\n\nprint(\"Density Q1 : \",d_q1)\nprint(\"Density Q3 : \",d_q3)\n\nprint()\n\nd_iqr = d_q3 - d_q1\nprint(\"Density IQR : \",d_iqr)\n\nprint()\n\nd_out_l = d_q1 - (1.5 * d_iqr)\nprint(\"Density Lower Outliers : \",d_out_l)\n\nd_out_u = d_q3 + (1.5 * d_iqr)\nprint(\"Density Upper Outliers : \",d_out_u)\n\nfor i in d:\n    if(i<d_out_l or i>d_out_u):\n        print(\"\\nOutliers Of Density\",i)","8d10c016":"ph = f_d['pH']\nprint(ph)\n\nprint()\n\nph_q1 = ph.iloc[4]\nph_q3 = ph.iloc[6]\n\nprint(\"PH Q1 : \",ph_q1)\nprint(\"PH Q3 : \",ph_q3)\n\nprint()\n\nph_iqr = ph_q3 - ph_q1\nprint(\"PH IQR : \",ph_iqr)\n\nprint()\n\nph_out_l = ph_q1 - (1.5 * ph_iqr)\nprint(\"PH Lower Outliers : \",ph_out_l)\n\nph_out_u = ph_q3 + (1.5 * ph_iqr)\nprint(\"PH Upper Outliers : \",d_out_u)\n\nfor i in ph:\n    if(i<ph_out_l or i>ph_out_u):\n        print(\"\\nOutliers Of PH\",i)","0a3331f6":"s = f_d['sulphates']\nprint(s)\n\nprint()\n\ns_q1 = s.iloc[4]\ns_q3 = s.iloc[6]\n\nprint(\"Sulphates Q1 : \",s_q1)\nprint(\"Sulphates Q3 : \",s_q3)\n\nprint()\n\ns_iqr = s_q3 - s_q1\nprint(\"Sulphates IQR : \",s_iqr)\n\nprint()\n\ns_out_l = s_q1 - (1.5 * s_iqr)\nprint(\"Sulphates Lower Outliers : \",s_out_l)\n\ns_out_u = s_q3 + (1.5 * s_iqr)\nprint(\"Sulphates Upper Outliers : \",s_out_u)\n\nfor i in s:\n    if(i<s_out_l or i>s_out_u):\n        print(\"\\nOutliers Of Sulphates\",i)","72c2e8ea":"a = f_d['alcohol']\nprint(a)\n\nprint()\n\na_q1 = a.iloc[4]\na_q3 = a.iloc[6]\n\nprint(\"Alcohol Q1 : \",a_q1)\nprint(\"Alcohol Q3 : \",a_q3)\n\nprint()\n\na_iqr = a_q3 - a_q1\nprint(\"Alcohol IQR : \",a_iqr)\n\nprint()\n\na_out_l = a_q1 - (1.5 * a_iqr)\nprint(\"Alcohol Lower Outliers : \",a_out_l)\n\na_out_u = a_q3 + (1.5 * a_iqr)\nprint(\"Alcohol Upper Outliers : \",a_out_u)\n\nfor i in a:\n    if(i<a_out_l or i>a_out_u):\n        print(\"\\nOutliers Of Alcohol\",i)","92b762d7":"q = f_d['quality']\nprint(q)\n\nprint()\n\nq_q1 = q.iloc[4]\nq_q3 = q.iloc[6]\n\nprint(\"Quality Q1 : \",q_q1)\nprint(\"Quality Q3 : \",q_q3)\n\nprint()\n\nq_iqr = q_q3 - q_q1\nprint(\"Quality IQR : \",q_iqr)\n\nprint()\n\nq_out_l = q_q1 - (1.5 * q_iqr)\nprint(\"Quality Lower Outliers : \",q_out_l)\n\nq_out_u = q_q3 + (1.5 * q_iqr)\nprint(\"Quality Upper Outliers : \",q_out_u)\n\nfor i in q:\n    if(i<q_out_l or i>q_out_u):\n        print(\"\\nOutliers Of Quality\",i)","d6765a97":"plt.hist(imp['fixed acidity'],bins=10)","6d94e20a":"plt.hist(imp['volatile acidity'],bins=10)","2da31882":"plt.hist(imp['citric acid'],bins=10)","f14348d6":"\nplt.hist(imp['residual sugar'],bins=10)","081d951a":"plt.hist(imp['chlorides'],bins=10)","b096309c":"plt.hist(imp['free sulfur dioxide'],bins=10)","d57fe804":"plt.hist(imp['total sulfur dioxide'],bins=10)","e6f82dc2":"plt.hist(imp['density'],bins=20)","7eaa0d1a":"plt.hist(imp['pH'],bins=20)","fe777841":"plt.hist(imp['sulphates'],bins=20)","0b65bf8d":"plt.hist(imp['alcohol'],bins=20)","83213a79":"plt.hist(imp['quality'],bins=7)","7bfd470c":"imp['fixed acidity'].plot.kde()","49498823":"imp['volatile acidity'].plot.kde()","db1b4b17":"imp['citric acid'].plot.kde()","20a056db":"imp['residual sugar'].plot.kde()","f5bcad8b":"imp['chlorides'].plot.kde()","5eb4aec3":"imp['free sulfur dioxide'].plot.kde()","28a600f3":"imp['total sulfur dioxide'].plot.kde()","41c26458":"imp['density'].plot.kde()","fd26f494":"imp['pH'].plot.kde()","3953ab22":"imp['sulphates'].plot.kde()","2582b7a1":"imp['alcohol'].plot.kde()","d0781bc1":"imp['quality'].plot.kde()","a0dd4031":"imp.skew()","200fa134":"\nsns.barplot(x=imp['fixed acidity'])\npd.crosstab(index=imp['fixed acidity'],columns='total')","8fc0f21e":"sns.barplot(x=imp['volatile acidity'])\n\npd.crosstab(index=imp['volatile acidity'],columns='total')","abd2ee34":"sns.barplot(x=imp['citric acid'])\n\npd.crosstab(index= imp['citric acid'],columns='total')","d9c326b2":"sns.barplot(x=imp['residual sugar'])\n\npd.crosstab(index=imp['residual sugar'],columns='total')","10c59347":"sns.barplot(x=imp['chlorides'])\n\npd.crosstab(index=imp['chlorides'],columns='total')","afaef842":"sns.barplot(x=imp['free sulfur dioxide'])\n\npd.crosstab(index=imp['free sulfur dioxide'],columns='total')","176d5dc7":"sns.barplot(x=imp['density'])\n\npd.crosstab(index=imp['density'],columns='total')","1874a2da":"sns.barplot(x=imp['pH'])\n\npd.crosstab(index=imp['pH'],columns='total')","b883c191":"sns.barplot(x=imp['sulphates'])\n\npd.crosstab(index=imp['sulphates'],columns='total')","3fec43e9":"sns.barplot(x=imp['alcohol'])\n\npd.crosstab(index=imp['alcohol'],columns='total')","a16c84ea":"sns.barplot(x=imp['quality'])\n\npd.crosstab(index=imp['quality'],columns='total')","43ed58c5":"d = imp.describe()","2ef798ba":"sns.set(style=\"whitegrid\")\nsns.boxplot(x=imp['fixed acidity'],data=imp)","4d80072a":"sns.boxplot(x=imp['volatile acidity'],data=imp)","7cfed7e8":"sns.boxplot(x=imp['citric acid'],data=imp)","c424dee9":"sns.boxplot(x=imp['residual sugar'],data=imp)","33e8cfd5":"sns.boxplot(x=imp['chlorides'],data=imp)","c7428ec3":"sns.boxplot(x=imp['free sulfur dioxide'],data=imp)","c3f01915":"sns.boxplot(x=imp['total sulfur dioxide'],data=imp)","c81d4b0f":"sns.boxplot(x=imp['density'],data=imp)","0a630ec1":"sns.boxplot(x=imp['pH'],data=imp)","e42af9ca":"sns.boxplot(x=imp['sulphates'],data=imp)","c7c31b70":"sns.boxplot(x=imp['alcohol'],data=imp)","7bfce868":"sns.boxplot(x=imp['quality'],data=imp)","86b5781e":"cr=imp.corr()\ncr\ncr.style.background_gradient(cmap='coolwarm')","cbdd3ae8":"plt.figure(figsize=[20,10])\n\nsns.heatmap(imp.corr(), annot=True, cmap='coolwarm')","773cde09":"sns.pairplot(imp)","a1825e30":"sns.relplot(y='fixed acidity' ,x='density', col='quality', data=imp)","ad83a3ef":"sns.relplot(y='volatile acidity' ,x='density', col='quality', data=imp)","bd127b4f":"sns.relplot(y='citric acid' ,x='density', col='quality', data=imp)","55f8610f":"sns.relplot(y='residual sugar' ,x='density', col='quality', data=imp)","d17cfdd7":"sns.relplot(y='chlorides' ,x='density', col='quality', data=imp)","963b43a2":"sns.relplot(y='free sulfur dioxide' ,x='density', col='quality', data=imp)","3f949566":"sns.relplot(y='total sulfur dioxide' ,x='density', col='quality', data=imp)","7e2bf7c0":"sns.relplot(y='density' ,x='density', col='quality', data=imp)","575b3164":"sns.relplot(y='pH' ,x='density', col='quality', data=imp)","e2ac1a64":"sns.relplot(y='sulphates' ,x='density', col='quality', data=imp)","08126046":"sns.relplot(y='alcohol' ,x='density', col='quality', data=imp)","3f9af536":"sns.relplot(y='quality' ,x='density', col='quality', data=imp)","76ad15e2":"## 3.Multivariate Analysis\n   # Draw the correlation matrix and identify the variables that are correlated to each other.\u00b6","bcd03ec6":"Total Number of rows are  and Total Number of columns are ","7015eec1":"                                              Yash Kumar Sharma","4b98e8ed":"## 1. Print the first five rows of the dataset","1d8e0583":"## Importing Libraries","b296da13":"\n## Fixed Acidity\n","32b2fcd7":"## Fixed Acidity","44d00b3f":"## Fixed Acidity","e4f1c202":"## Free Sulfur Dioxide\n","de8b15bf":"## Residual Sugar\n","00224a42":"## Kernel Density Estimate\n","dee0f7aa":"## Histogram","f03b0593":"## Volatile Acidity\n","6e348dfd":"## Quality\n","6a66e545":"### Free Sulfur Dioxide\n","a803e727":"## 3.Find out the total number of rows and columns of the data set","7adc95fc":"                    Project: White Wine Data Exploratory Data Analysis (EDA) \n","ea426a1a":"## pH\n","a621673e":"## Free Sulfur Dioxide\n","a110ee02":"## Alcohol\n","ee5fc2e9":"## Alcohol\n","2937a7f4":"## Sulphates\n","fdf7b159":"### Total Sulfur Dioxide","10289a53":"## Total Sulfur Dioxide\n","79a44965":"## Sulphates\n","eb1eac6e":"### Chlorides","74558280":"## Citric Acid","6ebd220c":"## Create a Fequency Distribution Table And Bar Chart For The Output Variable\n","e5d1d100":"### Residual Sugar","2bc81ce2":" ## 6.Find out the number of rows, mean, std deviation, min, Q1, Q2, Q3, max values for each variable. Document your         observations to check if the outliers are present in the data set","cf2f5eff":"## pH\n","5de6ab66":"## Quality\n","950b7df3":"## Citric Acid\n","3346a040":"## Density\n","d9ebec32":"## Density\n","ec337002":"## Residual Sugar\n","3ebeaee2":"As we can see there is no negative value of any of the variable we can conclude that all of them are right skewed ","262ccb4d":"## Sulphates\n","dabb1008":"## Chlorides\n","5f661afb":"## total Sulfur Dioxide\n","f111125a":"## pH\n","a13e1bc0":"## Density\n","6e2a48a5":"## Volatile Acidity","17aad403":"## 4.Find out the columns, data types, and presence of null values or missing values in the data set Univariate Analysis","753b1376":"## 2. Print the last five rows of the dataset","f3f51d7c":"## 5. Find out missing values graphically","ed2c205c":"## Quality\n","c7f06dc8":"## Alcohol\n","a709cb3f":"## 7. Draw the histogram, kernel density estimate (kde) to check the distribution and skewness for each variable. Document your observation","dffaa18e":"                                                    Thanks ","0e5ac280":"## Volatile Acidity","1cf8edbc":"### Citric Acid\n","6429d5ac":"## Skewness Of Each Variable\n","319da92d":"## White Wine Data\n## Exploratory Data Analysis (EDA)\n\nThe process of analyzing the data, discovering the patterns, spotting anomalies, testing hypotheses, and checking the assumption. We use summary statistics and graphical representations for the EDA.  <br><br>\n\nProject Objective\n<br><br>\nStudy the data set of white wine quality. The objective of the study is to conduct EDA on several parameters of the data set. \n<br>\nExploratory Data Analysis\n<br>\n    Understand the data using the pandas library\n    \n    1.    Print the first five rows of the dataset\n    2.    Print the last five rows of the dataset\n    3.    Find out the total number of rows and columns of the data set\n    4.    Find out the columns, data types, and presence of null values or missing values in the data set\n          Univariate Analysis\n    5.    Find out missing values graphically\n    6.    Find out the number of rows, mean, std deviation, min, Q1, Q2, Q3, max values for each variable. Document your         observations to check if the outliers are present in the data set\n    7.    Draw the histogram, kernel density estimate (kde) to check the distribution and skewness for each variable. Document your observation\n    8.    Create a frequency distribution table and bar chart for the output variable\n    9.    Draw box plot for each variable and identify the IQR and outliers\n        Multivariate Analysis\n    11.   Draw the correlation matrix and identify the variables that are correlated to each other.","77daf313":"## Chlorides","88ac15d2":"## Draw box plot for each variable and identify the IQR and outliers"}}