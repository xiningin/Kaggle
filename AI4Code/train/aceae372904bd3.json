{"cell_type":{"2329a073":"code","b39e80a2":"code","d94599a6":"code","851e8d22":"code","755fb48b":"code","28d0e392":"code","4b9e9c0e":"code","2dc08563":"code","d8c220e6":"code","4ede5564":"code","07f40571":"code","a04b2455":"code","54ed8ae2":"code","779d3e14":"code","f3468c61":"code","9f34a1a7":"code","4ce2caae":"code","159ae56e":"code","98b58e54":"code","40395d42":"code","f8d6ab67":"code","f1caac19":"code","8d867597":"code","cd28494d":"code","3bec293b":"code","aa18e23d":"code","40a2a0b6":"code","64a97ff7":"code","0d09da1d":"code","e6402122":"code","01605cca":"code","32e1eb5e":"code","3bbc4d74":"code","f1b8e6cd":"code","6999a249":"code","a3e7092d":"code","f62205f0":"code","42de97c8":"code","3888c35c":"code","114261d3":"code","f65b3f7e":"code","ec266ce6":"code","d7095ff0":"code","c803e460":"code","6ad2ad9c":"code","b0e85832":"code","fa3e7674":"code","37d82597":"code","1e10361d":"code","24f55578":"code","81e56bfc":"code","59c1955b":"code","04a2975e":"code","e473a0ad":"code","c599f46b":"code","b996dc32":"markdown","abf84abb":"markdown","b3485a35":"markdown","641acec6":"markdown","c866dd99":"markdown","3a85b29c":"markdown","17e4c8e9":"markdown","3cf3687a":"markdown","a3b8b431":"markdown","a675e03f":"markdown","dfc1a8ab":"markdown","5b7c00ec":"markdown","60c4c738":"markdown"},"source":{"2329a073":"from IPython.display import Image\nImage(filename='..\/input\/fifa-19-word\/1_YOeQS.jpeg', width=\"800\", height='50')","b39e80a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d94599a6":"df = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")\ndf.head()","851e8d22":"### Check the rows and columns of the Dataset\ndf.shape","755fb48b":"df.columns","28d0e392":"# drop redundant columns\ndf.drop('Unnamed: 0', axis=1, inplace=True)","4b9e9c0e":"# view dataframe summary\ndf.info()","2dc08563":"df.isnull().sum()","d8c220e6":"import missingno as msno\nmsno.matrix(df)","4ede5564":"msno.bar(df, color = 'y', figsize = (15,8))","07f40571":"#Imputing Club and Position\ndf['Club'].fillna('No Club', inplace = True)\ndf['Position'].fillna('ST', inplace = True)","a04b2455":"impute_by_mean = df.loc[:, ['Crossing', 'Finishing', 'HeadingAccuracy',\n                                 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy',\n                                 'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed',\n                                 'Agility', 'Reactions', 'Balance', 'ShotPower', 'Jumping',\n                                 'Stamina', 'Strength', 'LongShots', 'Aggression', 'Interceptions',\n                                 'Positioning', 'Vision', 'Penalties', 'Composure', 'Marking',\n                                 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling',\n                                 'GKKicking', 'GKPositioning', 'GKReflexes']]","54ed8ae2":"for i in impute_by_mean.columns:\n    df[i].fillna(df[i].mean(), inplace = True)\n","779d3e14":"### These are categorical variables and will be imputed by mode.\nimpute_by_mode = df.loc[:, ['Body Type','International Reputation', 'Height', 'Weight', 'Preferred Foot','Jersey Number']]\nfor i in impute_by_mode.columns:\n    df[i].fillna(df[i].mode()[0], inplace = True)","f3468c61":"### The following variables are either discrete numerical or continuous numerical variables.So the will be imputed by median.'''\nimpute_by_median = df.loc[:, ['Weak Foot', 'Skill Moves', ]]\nfor i in impute_by_median.columns:\n    df[i].fillna(df[i].median(), inplace = True)","9f34a1a7":"df.fillna(0, inplace = True)","4ce2caae":"##### Columns remaining to be imputed'''\ndf.columns[df.isna().any()]","159ae56e":"def defending(data):\n    return int(round((data[['Marking', 'StandingTackle', \n                               'SlidingTackle']].mean()).mean()))\n\ndef general(data):\n    return int(round((data[['HeadingAccuracy', 'Dribbling', 'Curve', \n                               'BallControl']].mean()).mean()))\n\ndef mental(data):\n    return int(round((data[['Aggression', 'Interceptions', 'Positioning', \n                               'Vision','Composure']].mean()).mean()))\n\ndef passing(data):\n    return int(round((data[['Crossing', 'ShortPassing', \n                               'LongPassing']].mean()).mean()))\n\ndef mobility(data):\n    return int(round((data[['Acceleration', 'SprintSpeed', \n                               'Agility','Reactions']].mean()).mean()))\ndef power(data):\n    return int(round((data[['Balance', 'Jumping', 'Stamina', \n                               'Strength']].mean()).mean()))\n\ndef rating(data):\n    return int(round((data[['Potential', 'Overall']].mean()).mean()))\n\ndef shooting(data):\n    return int(round((data[['Finishing', 'Volleys', 'FKAccuracy', \n                               'ShotPower','LongShots', 'Penalties']].mean()).mean()))","98b58e54":"df.isnull().sum()","40395d42":"f,ax = plt.subplots(figsize=(25, 15))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","f8d6ab67":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Nationality))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('national.png')\nplt.show()","f1caac19":"df['Preferred Foot'].value_counts()\/len(df)","8d867597":"plt.style.use('fivethirtyeight')\nfig, ax = plt.subplots(figsize=(8,6))\ngraph = sns.countplot(ax=ax,x=df['Preferred Foot'], data=df, palette = 'bone')\ngraph.set_title('Preferred Foot of the Players', fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","cd28494d":"# plotting a pie chart to represent share of international repuatation\n\nlabels = ['1', '2', '3', '4', '5']\nsizes = df['International Reputation'].value_counts()\ncolors = plt.cm.copper(np.linspace(0, 1, 5))\nexplode = [0.1, 0.1, 0.2, 0.5, 0.9]\n\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(sizes, labels = labels, colors = colors, explode = explode, shadow = True)\nplt.title('International Repuatation for the Football Players', fontsize = 20)\nplt.legend()\nplt.show()","3bec293b":"# different positions acquired by the players \n\nplt.figure(figsize = (18, 8))\nplt.style.use('fivethirtyeight')\nax = sns.countplot('Position', data = df, palette = 'bone')\nax.set_xlabel(xlabel = 'Different Positions in Football', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of Players', fontsize = 16)\nax.set_title(label = 'Comparison of Positions and Players', fontsize = 20)\nplt.show()","aa18e23d":"# Skill Moves of Players\n\nplt.figure(figsize = (10, 8))\nax = sns.countplot(x = 'Skill Moves', data = df, palette = 'pastel')\nax.set_title(label = 'Count of players on Basis of their skill moves', fontsize = 20)\nax.set_xlabel(xlabel = 'Number of Skill Moves', fontsize = 16)\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nplt.show()","40a2a0b6":"\nplt.figure(figsize = (13, 8))\nax = sns.countplot(x = 'Height', data = df, palette = 'dark')\nax.set_title(label = 'Count of players on Basis of Height', fontsize = 20)\nax.set_xlabel(xlabel = 'Height in Foot per inch', fontsize = 16)\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nplt.show()","64a97ff7":"# To show Different Work rate of the players participating in the FIFA 2019\n\nplt.figure(figsize = (15, 7))\nplt.style.use('tableau-colorblind10')\n\nsns.countplot(x = 'Work Rate', data = df, palette = 'hls')\nplt.title('Different work rates of the Players Participating in the FIFA 2019', fontsize = 20)\nplt.xlabel('Work rates associated with the players', fontsize = 16)\nplt.ylabel('count of Players', fontsize = 16)\nplt.show()","0d09da1d":"x = df.Special\nplt.figure(figsize = (12, 8))\nplt.style.use('tableau-colorblind10')\n\nax = sns.distplot(x, bins = 58, kde = False, color = 'm')\nax.set_xlabel(xlabel = 'Special score range', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of the Players',fontsize = 16)\nax.set_title(label = 'Histogram for the Speciality Scores of the Players', fontsize = 20)\nplt.show()","e6402122":"# To show Different potential scores of the players participating in the FIFA 2019\n\nx = df.Potential\nplt.figure(figsize=(12,8))\nplt.style.use('seaborn-paper')\n\nax = sns.distplot(x, bins = 58, kde = False, color = 'y')\nax.set_xlabel(xlabel = \"Player\\'s Potential Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of players Potential Scores', fontsize = 20)\nplt.show()","01605cca":"# To show that there are people having same age\n# Histogram: number of players's age\n\nsns.set(style = \"dark\", palette = \"colorblind\", color_codes = True)\nx = df.Age\nplt.figure(figsize = (15,8))\nplt.style.use('ggplot')\nax = sns.distplot(x, bins = 58, kde = False, color = 'g')\nax.set_xlabel(xlabel = \"Player\\'s age\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of players age', fontsize = 20)\nplt.show()","32e1eb5e":"# best players per each position with their age, club, and nationality based on their overall scores\n\ndf.iloc[df.groupby(df['Position'])['Overall'].idxmax()][['Position', 'Name', 'Age', 'Club', 'Nationality']]","3bbc4d74":"df['Skill Moves'].value_counts()","f1b8e6cd":"fig, ax = plt.subplots(figsize=(12,8))\nplt.style.use('fivethirtyeight')\ngraph = sns.countplot(ax=ax,x=df['Skill Moves'], data=df, palette = 'PuBuGn_d')\ngraph.set_title('Skill Moves of the Players', fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","6999a249":"fig, ax = plt.subplots(figsize=(12,8))\nplt.style.use('fivethirtyeight')\ngraph = sns.countplot(ax=ax,x=df['Skill Moves'], data=df, hue='Preferred Foot', palette = 'PuBuGn_d')\ngraph.set_title('Skill Moves of Players segregated by Preferred Foot'  , fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","a3e7092d":"# To show Different overall scores of the players participating in the FIFA 2019\n\nsns.set(style = \"dark\", palette = \"deep\", color_codes = True)\nx = df.Overall\nplt.figure(figsize = (12,8))\nplt.style.use('ggplot')\n\nax = sns.distplot(x, bins = 52, kde = False, color = 'b')\nax.set_xlabel(xlabel = \"Player\\'s Potential Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of players Overall Scores', fontsize = 20)\nplt.show()","f62205f0":"df['Nationality'].nunique()","42de97c8":"df['Nationality'].unique()","3888c35c":"top_country = df['Nationality'].value_counts().head(15)\n\ntop_country","114261d3":"fig, ax = plt.subplots(figsize=(12,8))\nx = top_country.values\ny = top_country.index\nax.barh(y, x, align='center', color='dimgray')\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('Number of Players')\nax.set_ylabel('Name of Countries', rotation=0)\nax.set_title('Top 10 Countries with most number of players')\nplt.show()","f65b3f7e":"# Every Nations' Player and their overall scores\n\ncountries = ('England', 'Germany', 'Spain', 'Argentina', 'France', 'Brazil', 'Italy', 'Columbia', 'Japan', 'Mexico', 'China PR')\ndata_country= df.loc[df['Nationality'].isin(countries) & df['Overall']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sns.barplot(x = data_country['Nationality'], y = data_country['Overall'], palette = 'PuBuGn_d')\nax.set_xlabel(xlabel = 'Countries', fontsize = 12)\nax.set_ylabel(ylabel = 'Overall Scores', fontsize = 12)\nax.set_title(label = 'Distribution of overall scores of players from different countries', fontsize = 20)\nplt.show()","ec266ce6":"df['Overall'].value_counts().head()","d7095ff0":"df_best_players = pd.DataFrame.copy(df.sort_values(by ='Overall',ascending = False ).head(10))\nplt.figure(1,figsize = (12,6))\nsns.barplot(x ='Name' , y = 'Overall' , data = df_best_players, palette='Reds')\nplt.ylim(85,95)\nplt.show()","c803e460":"### top 10 eldest players\ndf.sort_values(by = 'Age' , ascending = False)[['Name','Club','Nationality','Overall', 'Age' ]].head()","6ad2ad9c":"### top 10 youngest players\ndf.sort_values(by = 'Age' , ascending = True)[['Name','Club','Nationality','Overall', 'Age' ]].head()","b0e85832":"#### Best Finisher\n\ndf.sort_values(by = 'Finishing' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','Finishing']].head()","fa3e7674":"### fastest players\n\ndf.sort_values(by = 'SprintSpeed' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','SprintSpeed']].head()","37d82597":"#### Best dribbler\ndf.sort_values(by = 'Dribbling' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','Dribbling']].head()","1e10361d":"#Player with maximum Potential and Overall Performance\nplayer = str(df.loc[df['Potential'].idxmax()][1])\nprint('Maximum Potential : '+str(df.loc[df['Potential'].idxmax()][1]))\nprint('Maximum Overall Perforamnce : '+str(df.loc[df['Overall'].idxmax()][1]))","24f55578":"pr_cols=['Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys',\n       'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing', 'BallControl',\n       'Acceleration', 'SprintSpeed', 'Agility', 'Reactions', 'Balance',\n       'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes']\ni=0\nwhile i < len(pr_cols):\n    print('Best {0} : {1}'.format(pr_cols[i],df.loc[df[pr_cols[i]].idxmax()][1]))\n    i += 1","81e56bfc":"i=0\nbest = []\nwhile i < len(pr_cols):\n    best.append(df.loc[df[pr_cols[i]].idxmax()][1])\n    i +=1","59c1955b":"f, ax = plt.subplots(figsize=(8, 6))\nsns.countplot(x=\"Preferred Foot\", hue=\"Real Face\", data=df)\nplt.show()","04a2975e":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Name[0:20]))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('players.png')\nplt.show()","e473a0ad":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Club))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('players.png')\nplt.show()","c599f46b":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(best))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('players.png')\nplt.show()","b996dc32":"FIFA 19 Cover art featuring Cristiano Ronaldo Developer(s) EA Vancouver EA Romania Publisher(s) EA Sports Composer(s) Hans Zimmer Lorne Balfe Series FIFA Engine Frostbite 3 (PS4, XOne, Windows) Platform(s) Microsoft Windows PlayStation 3 PlayStation 4 Xbox 360 Xbox One Nintendo Switch Release 28 September 2018 Genre(s) Sports Mode(s) Single-player, multiplayer FIFA 19 is a football simulation video game developed by EA Vancouver as part of Electronic Arts' FIFA series. Announced on 6 June 2018 for its E3 2018 press conference, it was released on 28 September 2018 for PlayStation 3, PlayStation 4, Xbox 360, Xbox One, Nintendo Switch, and Microsoft Windows. It is the 26th installment in the FIFA series. As with FIFA 18, Cristiano Ronaldo appears as the cover athlete of the regular edition.\n\nThe game features the UEFA club competitions for the first time, including the UEFA Champions League. Martin Tyler and Alan Smith return as regular commentators, while the new commentary team of Derek Rae and Lee Dixon feature in the UEFA competitions mode. Composer Hans Zimmer and rapper Vince Staples recorded a new remix of the UEFA Champions League anthem specifically for the game. The character Alex Hunter, who first appeared in FIFA 17 returns for the third and final installment of \"The Journey\", entitled, \"The Journey: Champions\".","abf84abb":"## Top 10 players","b3485a35":"## Correlation between different features","641acec6":"## Data Analysis","c866dd99":"## Check the Missing Values","3a85b29c":"# <font color='red'> Please Upvote if you found this helpful :<\/font>","17e4c8e9":"### Filling the Missing Values Using Mean, Mode and Median","3cf3687a":"## Analyse players based on nationality","a3b8b431":"# <font color='red'> FIFA Data Analysis and Visualization <\/font>","a675e03f":"## Over All Performance","dfc1a8ab":"References:\nhttps:\/\/www.kaggle.com\/roshansharma\/fifa-data-visualization","5b7c00ec":"## <font color='blue'> Table of Contents: <\/font>\n1. Importing Libraries\n2. Loading the dataset\n3. Check the missing values with visualization\n4. Data Cleaning:\n    - Deleting redundant columns.\n    - Dropping duplicates.\n    - Cleaning individual columns.\n    - Remove the NaN values from the dataset\n\n5. Data Visualization: Using plots to find relations between the features.\n    - Get Correlation between different variables\n    - Different positions acquired by the players\n    - Players on the Basis of Height\n    - Different Work rate of the players\n    - Count the players Skills\n    - Relation between neighbourgroup and Availability of Room\n    - Speciality Scores of Players\n    - Different Nations Players and their Overall Scores\n    - Distribution of Overall Score in Different popular Clubs\n    - Comparison the performance of left-footed and right-footed footballers on BallControl and Dribbing\n6. Data Analysis\n7. Word Cloud","60c4c738":"## Data Visualization"}}