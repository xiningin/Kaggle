{"cell_type":{"ce1f0344":"code","940edb0e":"code","f4bfa12a":"code","0cfba23d":"code","b4092c7b":"code","03a9a19c":"code","68b0cb27":"code","81a21ebe":"code","7cd6dc22":"code","72767f8e":"code","9e9d00fc":"markdown","491a9f82":"markdown","e3ec9864":"markdown","faf08e78":"markdown"},"source":{"ce1f0344":"import pandas as pd\nimport numpy as np\nfrom pandas.tseries.offsets import DateOffset\npd.options.mode.chained_assignment = None","940edb0e":"df = pd.read_csv(\"..\/input\/open-2-shopee-code-league-order-brushing\/order_brush_order.csv\")\ndf_raw = df","f4bfa12a":"df['event_time'] = pd.to_datetime(df.event_time)\ndf = df.set_index('event_time').sort_index()\ndf = df.reset_index().set_index('orderid')\nshop_list = list(df.shopid.unique())","0cfba23d":"shop = shop_list[0]\nshop_df = df[df['shopid']==shop]\nshop_df['rolling_H'] = shop_df[::-1][['event_time','userid']].rolling('H', on='event_time').count().userid\nshop_df.reset_index(inplace=True)\nindex_no = list(shop_df[shop_df['rolling_H']>=3].index)\nrolling_no = list(shop_df.rolling_H.loc[index_no])\nk = 0\nshop_df['orderBrush'] =''\nfor i in index_no:\n  temp_df = shop_df.iloc[i: int((i + rolling_no[k])) ,:]\n  no_user = len(temp_df.userid.unique())\n  conc = rolling_no[k]\/no_user\n  if conc >= 3:  \n    shop_df.iloc[i: (i + int(rolling_no[k]))  ,5] = 1\n  else:\n    c = rolling_no[k]-1\n    if i != 0:\n      time = shop_df.event_time.iloc[i-1]\n    else:\n      time = shop_df.event_time.iloc[i] - DateOffset(hours=1)\n    while (c>=3) & (conc<=3):\n      if temp_df.event_time.loc[int(i + c)] -DateOffset(hours=1) > time:\n        temp_df = shop_df.iloc[i: int((i + c)) ,:]\n        no_user = len(temp_df.userid.unique())\n        conc = c\/no_user\n      else:\n        break\n      if conc >= 3:  \n        shop_df.iloc[i: int(i+c) ,5] = 1\n        break\n      else:\n        pass\n      c-=1\n  k+=1\ncomplete_df = shop_df\ndel shop_list[0]","b4092c7b":"#d = 1\nfor shop in shop_list:\n  shop_df = df[df['shopid']==shop]\n  shop_df['rolling_H'] = shop_df[::-1][['event_time','userid']].rolling('H', on='event_time').count().userid\n  shop_df.reset_index(inplace=True)\n  index_no = list(shop_df[shop_df['rolling_H']>=3].index)\n  rolling_no = list(shop_df.rolling_H.loc[index_no])\n  k = 0\n  shop_df['orderBrush'] =''\n  for i in index_no:\n    temp_df = shop_df.iloc[i: int((i + rolling_no[k])) ,1:4:2]\n    no_user = len(temp_df.userid.unique())\n    conc = rolling_no[k]\/no_user\n    if conc >= 3:  \n      shop_df.iloc[i: (i + int(rolling_no[k]))  ,5] = 1\n    else:\n      c = rolling_no[k]-1\n      if i != 0:\n        time = shop_df.event_time.iloc[i-1]\n      else:\n        time = shop_df.event_time.iloc[i] - DateOffset(hours=1)\n      for p in range(int(c)-2):\n      #while (c>=3) & (conc<=3):\n        if temp_df.event_time.loc[int(i + c)] -DateOffset(hours=1) > time:\n          temp_df = shop_df.iloc[i: int((i + c)) ,1:4:2]\n          no_user = len(temp_df.userid.unique())\n          conc = c\/no_user\n        else:\n          break\n        if conc >= 3:  \n          shop_df.iloc[i: int(i+c) ,5] = 1\n          break\n        else:\n          pass\n        c-=1\n    k+=1\n  complete_df = pd.concat([complete_df,shop_df]) \n  #print(d)\n  #d+=1","03a9a19c":"complete = complete_df[complete_df['orderBrush']==1]\ns_shop = list(complete.shopid)","68b0cb27":"shop = s_shop[0]\ntemp = complete[complete['shopid']==shop]\ndf_counts = temp['userid'].value_counts()\nmax_count = df_counts.max()\ns_user = list(df_counts[df_counts==max_count].index)\nfor user in s_user:\n  temp.loc[temp['userid']==user,'S_User'] = user\ncomplete2_df = temp\ndel s_shop[0]\n\nfor shop in s_shop:\n  temp = complete[complete['shopid']==shop]\n  df_counts = temp['userid'].value_counts()\n  max_count = df_counts.max()\n  s_user = list(df_counts[df_counts==max_count].index)\n  for user in s_user:\n    temp.loc[temp['userid']==user,'S_User'] = user\n  complete2_df = pd.concat([complete2_df,temp]) ","81a21ebe":"complete2 = complete2_df.dropna()\ncomplete2 = complete2[['shopid','userid']]\ncomplete2.drop_duplicates(inplace=True)\nfirst = complete2[complete2.duplicated(subset = 'shopid',keep='first')]\nlast = complete2[complete2.duplicated(subset = 'shopid',keep='last')]\ndupli = pd.merge(first,last, on='shopid')\nfor i in range(len(dupli)): \n  if dupli.loc[i,'userid_x'] < dupli.loc[i,'userid_y']:\n    dupli.loc[i,['userid_x','userid_y']] = dupli.loc[i,['userid_x','userid_y']].astype(str)\n    dupli.loc[i,'userid'] = dupli.loc[i,'userid_x'] + '&'+ dupli.loc[i,'userid_y']\n  elif dupli.loc[i,'userid_x'] > dupli.loc[i,'userid_y']:\n    dupli.loc[i,['userid_x','userid_y']] = dupli.loc[i,['userid_y','userid_x']].astype(str)\n    dupli.loc[i,'userid'] = dupli.loc[i,'userid_y'] + '&'+ dupli.loc[i,'userid_x']\n  else:\n    pass\ndupli = dupli[['shopid','userid']]\nmerging1 = pd.concat([complete2,dupli])\nmerging1.drop_duplicates(subset='shopid',keep='last',inplace=True)","7cd6dc22":"df_raw = df_raw[['shopid']]\ndf_raw.drop_duplicates(inplace=True)\nmerging = pd.merge(df_raw,merging1,how='left',on='shopid')\nmerging.fillna(0,inplace=True)","72767f8e":"merging.to_csv('\/kaggle\/working\/result.csv',index=False)","9e9d00fc":"# Identification of Order Brushing Period","491a9f82":"# Merge into Final Output","e3ec9864":"# Import Library and Data","faf08e78":"# Identification of Suspicious User"}}