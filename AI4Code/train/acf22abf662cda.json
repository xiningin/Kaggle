{"cell_type":{"896ed965":"code","41b0c65b":"code","eb89b002":"code","a081f92d":"code","c0cc9c41":"code","00aca0eb":"code","e15c93f1":"code","e5493f2c":"code","f7cec00d":"code","b0bf14ea":"code","fe47b0b8":"code","f2b93257":"code","39f55c8f":"code","31047d50":"code","62ba9b13":"code","8ff43f69":"code","bfe805ef":"code","efa6be18":"code","7cc029ca":"code","370a0590":"code","9935e63f":"code","5c03fc74":"code","36610f8f":"code","1ce8a2fb":"code","48e87b48":"code","b536ca6b":"markdown","cbbd8ff5":"markdown","a2ab2b6b":"markdown","fd271029":"markdown","917e8f68":"markdown","e53b28a1":"markdown","4d7fc09b":"markdown","8ae42f49":"markdown","4ea695fc":"markdown","2e8896b0":"markdown","74f734b2":"markdown","0d891037":"markdown"},"source":{"896ed965":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pprint import pprint\nimport random\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41b0c65b":"df = pd.read_csv('\/kaggle\/input\/others\/MBA_ADMISSIONS.csv')\ndf.head()","eb89b002":"print(\"Columns names\")\nprint('-'*75)\nprint(df.columns)\nprint()\nprint(\"Dataset Information\")\nprint('-'*75)\nprint(df.info())\nprint()\nprint('-'*75)\npprint(df.describe())","a081f92d":"categories = []\nnumerical = []\n\nfor cols in df.columns:\n    if df[cols].dtype == 'object':\n        categories.append(cols)\n    else:\n        numerical.append(cols)\nprint(\"categories columns : \", categories)\nprint()\nprint(\"numerical columns: \", numerical)","c0cc9c41":"for items in categories:\n    print(items, \":\", df[items].unique())","00aca0eb":"f, ax = plt.subplots(4,2, figsize=(25, 25))\n\nfor items, subplot in zip(categories, ax.flatten()):\n    sns.countplot(x=items, data=df, ax=subplot, palette = 'hsv').set_title('Distribution of {}'.format(items))\nplt.show()\nplt.tight_layout()\n","e15c93f1":"f, ax = plt.subplots(4,2, figsize=(25, 25))\nx = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]\n\nfor items, subplot in zip(categories, ax.flatten()):\n    labels = df[items].unique()\n    size = df[items].value_counts()\n    explode = x[0:len(labels)]\n    subplot.pie(size, labels = labels,explode = explode,shadow = True, autopct = '%.2f%%')\n    subplot.text(-0.4, 1.3, items, fontsize = 20)\n    subplot.legend(loc=3)\nplt.show()\nplt.tight_layout()\nplt.axis('off')","e5493f2c":"f, ax = plt.subplots(4,2, figsize=(25, 25))\ncolor = ['g','b','r','y']\nsns.set(style = 'whitegrid')\nfor items, subplot in zip(numerical, ax.flatten()):\n    c = color[random.randint(0,3)]\n    sns.distplot(df[items], norm_hist=False, kde=True, rug=False,color=c, hist_kws={\"alpha\": 1},ax=subplot).set_title('Distribution of {}'.format(items))\nplt.show()\nplt.tight_layout()\n","f7cec00d":"# More Bins for scrutiny\n\nf, ax = plt.subplots(4,2, figsize=(25, 25))\ncolor = ['g','b','r','y']\nsns.set(style = 'whitegrid')\nfor items, subplot in zip(numerical, ax.flatten()):\n    c = color[random.randint(0,3)]\n    sns.distplot(df[items], norm_hist=False, kde=True, rug=False,color=c, hist_kws={\"alpha\": 1}, bins=100, ax=subplot).set_title('Distribution of {}'.format(items))\n    plt.tight_layout()\n\nplt.show()","b0bf14ea":"f, ax = plt.subplots(4,2, figsize=(25, 25))\nsns.set_style(\"white\")\n\nfor items, subplot in zip(numerical, ax.flatten()):\n    sns.scatterplot(data=df, y=items,x=df.index, hue=\"Gender\", style=\"Gender\", ax=subplot).set_title(\"Distribution of {}\".format(items))\nplt.tight_layout()\nplt.show()","fe47b0b8":"for i,items in enumerate(categories):\n    sns.swarmplot(data=df, x=items, y=\"percentage_MBA\", hue=\"Gender\")\n    plt.tight_layout()\n    plt.show()","f2b93257":"for i,items in enumerate(categories):\n    hue = categories[0]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","39f55c8f":"for i,items in enumerate(categories):\n    hue = categories[1]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","31047d50":"for i,items in enumerate(categories):\n    hue = categories[2]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","62ba9b13":"for i,items in enumerate(categories):\n    hue = categories[3]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","8ff43f69":"for i,items in enumerate(categories):\n    hue = categories[4]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","bfe805ef":"for i,items in enumerate(categories):\n    hue = categories[5]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","efa6be18":"for i,items in enumerate(categories):\n    hue = categories[6]\n    if items != hue:\n        sns.countplot(x=items, hue=hue, data=df).set_title(\"Distribution of {} vs {}\".format(items, hue))\n        plt.show()","7cc029ca":"f, ax = plt.subplots(4,2, figsize=(15, 15))\nfor var, subplot in zip(categories, ax.flatten()):\n    sns.boxplot(x=var, y='Age_in_years', data=df, ax=subplot).set_title(\"Analysis of {} vs Age_in_years\".format(var))\n    plt.tight_layout()","370a0590":"f, ax = plt.subplots(4,2, figsize=(15, 15))\nfor var, subplot in zip(categories, ax.flatten()):\n    sns.boxplot(x=var, y='percentage_MBA', data=df, ax=subplot).set_title(\"Analysis of {} vs percentage_MBA\".format(var))\n    plt.tight_layout()","9935e63f":"df.head(5)","5c03fc74":"f, ax = plt.subplots(4,2, figsize=(25, 25))\nsns.set_style(\"white\")\n\nfor items, subplot in zip(numerical, ax.flatten()):\n    sns.violinplot(df['Gender'], df[items], palette = 'hsv', ax=subplot).set_title('Gender vs {}'.format(items))\nplt.tight_layout()\nplt.show()","36610f8f":"f, ax = plt.subplots(4,2, figsize=(25, 25))\nsns.set_style(\"white\")\n\nfor items, subplot in zip(numerical, ax.flatten()):\n    sns.stripplot(df['Gender'], df[items], palette = 'hsv', ax=subplot).set_title('Gender vs {}'.format(items))\nplt.tight_layout()\nplt.show()","1ce8a2fb":"f, ax = plt.subplots(4,2, figsize=(20, 20))\nsns.set_style(\"white\")\n\nfor i, subplot in zip(sorted(df.Age_in_years.unique()), ax.flatten()):\n        sns.countplot(x=\"STATE\", hue=\"Gender\", data=df[df.Age_in_years == i], palette='hsv', ax=subplot).set_title(\"Distribution of {} vs {} for age {}\".format('STATE', 'Gender', i))\nplt.tight_layout()\nplt.show()","48e87b48":"corrMatrix = df.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","b536ca6b":"## *Bi-Variate Analysis*","cbbd8ff5":"## Distribution of Scores (all) vs gender\nViolin plot shows the range of Male Vs Female Population\nEX : In the plot of Gender VS MBA_Score, the female population has higher scores than the male population","a2ab2b6b":"# 4. Data Visualization - Categorical Columns","fd271029":"## More Scrutiny based on AGE (optional)\n\nHere I am trying to see relationship between gender and the STATE they are from for every age group possible\nAnd more exploration is possible based on the dataset variables understanding.","917e8f68":"# 3. Data Preparation \/ Data Cleaning","e53b28a1":"This notebook contains the following,\n\n1. Business Understanding*\n2. Data Understanding\n3. Data Preparation \/ Data Cleaning\n4. Data Visualization\n5. Deriving useful insights","4d7fc09b":"# 2. Data Understanding","8ae42f49":"## Numerical Data Analysis - Scatter Plots and Histograms","4ea695fc":"## Unique Elements in the Category Columns","2e8896b0":"## Distribution of percentage_MBA scores across categorical columns for each gender\nCan be extended for other categories based on data understanding","74f734b2":"## *Univariate Analysis*","0d891037":"## Box Plot for outlier and major contribution analysis"}}