{"cell_type":{"c1e293a2":"code","9bdc2dfa":"code","18ab1742":"code","0c041a2e":"code","eb7abb64":"code","99069a09":"code","fb11890e":"code","f5a99d63":"markdown","973d3d6e":"markdown"},"source":{"c1e293a2":"import sys\n!{sys.executable} -m pip install -U pandas-profiling[notebook]\n!jupyter nbextension enable --py widgetsnbextension","9bdc2dfa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas_profiling import ProfileReport # Profiling\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18ab1742":"file_1 = \"\/kaggle\/input\/bitcoin-historical-data\/coinbaseUSD_1-min_data_2014-12-01_to_2019-01-09.csv\"\nfile_2 = \"\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2020-04-22.csv\"\n\ndata_coinbase = pd.read_csv(file_1)\ndata_bitstamp = pd.read_csv(file_2)\n\ndata_coinbase[\"Timestamp\"] = pd.to_datetime(data_coinbase[\"Timestamp\"], unit=\"s\")\ndata_bitstamp[\"Timestamp\"] = pd.to_datetime(data_bitstamp[\"Timestamp\"], unit=\"s\")","0c041a2e":"data_bitstamp.describe()","eb7abb64":"data_bitstamp.dropna(inplace=True)","99069a09":"profile = ProfileReport(data_bitstamp, title='Pandas Profiling Report', explorative=True)","fb11890e":"profile.to_notebook_iframe()","f5a99d63":"# Columns meaning\n\n* **Startime** - Start time of time window (60s window), in Unix time\n* **Open** - Open price at start time window\n* **High** - High price within time window\n* **Low** - Low price within time window\n* **Close** - Close price at end of time window\n* **Volume_(BTC)** - Amount of BTC transacted in time window\n* **Volume_(Currency)** - Amount of Currency transacted in time window\n* **Weighted_Price** - volume-weighted average price (VWAP)\n\n","973d3d6e":"# TODO:\n\n1. time series forecasting"}}