{"cell_type":{"ca6b2647":"code","ac892787":"code","ee93c996":"code","be5863bc":"code","bd5be094":"code","f30573fb":"code","a5f20e53":"code","3e979dcf":"code","e041f237":"code","a440cb5f":"code","97929672":"code","e1031ef8":"code","3ebffb15":"code","9b1bf3b0":"code","2197244e":"code","32650452":"code","2cc052a7":"code","81724e0a":"code","6bcd4671":"code","7fa59d96":"code","6bd4ec10":"code","a31df209":"code","1c157247":"code","67b28538":"code","bcd61e53":"code","e9c7a54a":"code","a19bbf15":"code","02ece2bd":"code","015de352":"code","f090a30c":"code","8b703fbf":"code","466df3af":"code","508d9046":"code","8fc882ca":"code","b5decfc4":"code","de89af08":"markdown","d67c5fbd":"markdown","c04b532a":"markdown","dd9c8bf0":"markdown","36d12a59":"markdown","304a1ddc":"markdown","006cb474":"markdown","5306bf1b":"markdown","ef91cb3b":"markdown","84650462":"markdown","54481e8b":"markdown","49dd7574":"markdown","67572f3b":"markdown","0b54347c":"markdown","08bb3334":"markdown","7461bbf9":"markdown","028201fa":"markdown","94d0890f":"markdown","c708f52d":"markdown","1abed1e6":"markdown","83b99305":"markdown","cc5274c5":"markdown","9045c581":"markdown","97109320":"markdown"},"source":{"ca6b2647":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ac892787":"df = pd.read_csv(\"..\/input\/pokemon.csv\")","ee93c996":"df.head()","be5863bc":"df.tail()","bd5be094":"df.sample(10) # Pegando 10 registros aleat\u00f3rios na base","f30573fb":"df.info()","a5f20e53":"df.shape","3e979dcf":"# Descobrindo qual o valor NaN no campo \"Name\"\ndf[df['Name'].isna() == True]","e041f237":"df.dropna(subset=['Name'], inplace=True)\ndf.info()","a440cb5f":"df.loc[60:70] # Apresentandos os registros de 59 a 69","97929672":"df.reset_index(inplace=True)\ndf.loc[60:70]","e1031ef8":"df.drop(['index', '#'], axis=1, inplace=True) # Removendo as duas colunas index e #\ndf.head()","3ebffb15":"df.plot(title='HP', kind='hist', y='HP',\n               alpha=0.5, color='red')\n\ndf.plot(title='Attack', kind='hist', y='Attack',\n               alpha=0.5, color='green')\n\ndf.plot(title='Defense', kind='hist', y='Defense',\n               alpha=0.5, color='blue')\n\ndf.plot(title='Sp. Atk', kind='hist', y='Sp. Atk',\n               alpha=0.5, color='black')\n\ndf.plot(title='Sp. Def', kind='hist', y='Sp. Def',\n               alpha=0.5, color='yellow')\n\ndf.plot(title='Speed', kind='hist', y='Speed',\n               alpha=0.5, color='orange')\n\ndf.plot(title='Generation', kind='hist', y='Generation',\n               alpha=0.5, color='orange')\n\nplt.show()","9b1bf3b0":"df.describe()","2197244e":"_,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df.corr(), annot=True, linewidths=.2, fmt= '.1f',ax=ax)\nplt.show()","32650452":"plt.subplots(figsize=(20, 5))\nsns.countplot(x='Type 1', data=df)\nplt.show()","2cc052a7":"plt.subplots(figsize=(20, 5))\nsns.countplot(x='Type 2', data=df)\nplt.show()","81724e0a":"plt.subplots(figsize=(20, 5))\nsns.boxplot(x='Type 1', y='HP', data=df)\nplt.show()","6bcd4671":"plt.subplots(figsize=(20, 5))\nsns.boxplot(x='Type 1', y='Attack', data=df)\nplt.show()","7fa59d96":"plt.subplots(figsize=(20, 5))\nsns.boxplot(x='Type 1', y='Defense', data=df)\nplt.show()","6bd4ec10":"sns.factorplot(x='Type 1', y='HP', data=df, col='Legendary', kind='box')","a31df209":"df_normal = df[df['Type 1'] == 'Normal']\ndf_normal.nlargest(20, 'HP')","1c157247":"df['Legendary'].value_counts() # Quantidade de pokemons lend\u00e1rios","67b28538":"# Imprimindo o percentual de lend\u00e1rios em um gr\u00e1fico de pizza\nplt.pie(df['Legendary'].value_counts(), labels=(\"Normal\", \"Lend\u00e1rio\"), \n        autopct='%1.1f%%', shadow=True, startangle=90)","bcd61e53":"df_lendarios = df[df['Legendary']]\ndf_lendarios","e9c7a54a":"plt.subplots(figsize=(20, 5))\nsns.violinplot(x='Type 1', y='HP', data=df)\nplt.show()","a19bbf15":"sns.factorplot(x='Generation', y='HP', data=df, col='Type 1', kind='violin')","02ece2bd":"df['indice_equilibrio'] = df['Attack'] - df['Defense']\ndf['indice_poder'] = df['HP'] + df['Attack'] + df['Defense']\ndf.head()","015de352":"df.plot(title='indice_equilibrio', kind='hist', y='indice_equilibrio',\n               alpha=0.5, color='red')\n\ndf.plot(title='indice_poder', kind='hist', y='indice_poder',\n               alpha=0.5, color='green')","f090a30c":"df.nlargest(20, 'indice_equilibrio') # Os 20 Pokemons mais fortes para atacar","8b703fbf":"df.nsmallest(20, 'indice_equilibrio') # Os 20 Pokemons mais fortes para defender","466df3af":"df_mais_fortes = df.nlargest(20, 'indice_poder') # Os 20 Pokemons mais fortes\n\n# Gerando o plot dos 20 Pokemons mais fortes\nplt.subplots(figsize=(10,5))\nplt.grid(True, linestyle='--')\nplt.title('Pokemons mais fortes')\nplt.plot(df_mais_fortes['Name'], df_mais_fortes['indice_poder'], label='\u00cdndice poder', marker='o')\nplt.xticks(rotation=90)\nplt.xlabel('Nome do Pokemon')\nplt.ylabel('\u00ccndice de Poder')\nplt.legend()\nplt.show()","508d9046":"df_mais_fracos = df.nsmallest(20, 'indice_poder') # Os 20 Pokemons mais fracos\n\n# Gerando o plot dos 20 Pokemons mais fracos\nplt.subplots(figsize=(10,5))\nplt.grid(True, linestyle='--')\nplt.title('Pokemons mais fracos')\nplt.plot(df_mais_fracos['Name'], df_mais_fracos['indice_poder'], label='\u00cdndice poder', marker='o')\nplt.xticks(rotation=90)\nplt.xlabel('Nome do Pokemon')\nplt.ylabel('\u00cdndice de Poder')\nplt.legend()\nplt.show()","8fc882ca":"df.describe() # Avaliando as estatisticas b\u00e1sicas dos dois novos campos","b5decfc4":"df.plot(kind = \"scatter\",x=\"indice_poder\",y = \"indice_equilibrio\")","de89af08":"J\u00e1 com rela\u00e7\u00e3o a defesa, os pokemons tipo Steel tem, em m\u00e9dia, uma defesa muito maior que as dos outros pokemons.","d67c5fbd":"Vamos ver agora quais s\u00e3o os pokemons: mais fortes, mais fracos, os melhores para atacar e os melhores para defender.","c04b532a":"O tipo Dragon tem, de modo geral, HP maiores que os outros tipos. Al\u00e9m disso, observam-se alguns outliers, principalmente no tipo Normal. Para este caso pode-se abstratir tr\u00eas hipoteses: de que esses outliers s\u00e3o pokemons lendarios; ou podem ter sido preenchidos erroneamente na base de dados; ou que realmente s\u00e3o pokemons com um HP muito maior que a maioria dos outros pokemons.","dd9c8bf0":"O outro campo que possuia valores NaN era o \"Type 2\", no entanto, de acordo com as informa\u00e7\u00f5es do dataset, os NaN presentes neste campo sinalizam que o pokemon em quest\u00e3o tem apenas um tipo, ao inves de dois. Logo, n\u00e3o podemos excluir ou desconsiderar essa informa\u00e7\u00e3o. Al\u00e9m disso, vamos manter os valores como NaN mesmo. Isso n\u00e3o der\u00e1 impacto em nossa an\u00e1lise descritiva.\n\nFeito a limpeza de dados, vamos iniciar a an\u00e1lise explorat\u00f3ria dos dados.","36d12a59":"Notamos que em rela\u00e7\u00e3o ao Type 1, ou seja, o tipo base do pokemon, os tipos mais comuns s\u00e3o \"Water\" e \"Normal\". E \"Fly\" e \"Fairy\" s\u00e3o os tipos com menos pokemons.\nJ\u00e1 em rela\u00e7\u00e3o ao Type 2, o tipo \"Flying\" \u00e9 disparado o mais comum, e o tipo \"Bug\" o menos.\n\nVamos avaliar os atributos bases de batalha, especificamente HP, Attack e Defense de acordo com cada tipo.","304a1ddc":"**An\u00e1lise Explorat\u00f3ria dos dados**","006cb474":"Com base no scatter plot acima, observa-se que, de modo geral, h\u00e1 um equil\u00edbrio entre os pokemons de todas as gera\u00e7\u00f5es. Ou seja, os pokemos muito bons para defesa ou ataca, tem um \u00edndice de poder na m\u00e9dia (aproximadamente 222~250). Embora, pokemons com \u00edndice de poder alto, que s\u00e3o possivelmente lend\u00e1rios, tendem a ser menos equilibrados (eles est\u00e3o localizados no terceiro quartil para cima) diferentemente dos pokemons da mediana para baixo, que s\u00e3o bem mais equilibrados. ","5306bf1b":"![](http:\/\/)**Tratamento dos dados NaN**","ef91cb3b":"Aqui tamb\u00e9m observamos que o tipo Dragon tem, em m\u00e9dia, o maior valor de Attack, e os Fairy os menores.","84650462":"Acabamos de descobrir com base nos gr\u00e1ficos acima, apesar de estarem de ruim de ver, mas para essa quest\u00e3o s\u00e3o suficientes para interpretar que os valores outliers no tipo Normal n\u00e3o s\u00e3o pokemons lend\u00e1rios. Logo, eles podem ser ou erro na base de dados ou realmente podemos com HP muito alto, foram do comum.  Vamos descobrir quem s\u00e3o esses pokemons.","54481e8b":"**Importando e apresentando a base de dados pokemon**","49dd7574":"Aqui conseguimos analisar como \u00e9 a rela\u00e7\u00e3o de lend\u00e1rios de acordo com cada geral. Notamos brevemente que as primeiras gera\u00e7\u00f5es (1 e 2) do tipo normal, possuem uma m\u00e9dia HP bem superior do que em compara\u00e7\u00e3o com outras gera\u00e7\u00f5es de outros tipos tamb\u00e9m.\n\nVamos agora avaliar que pokemons s\u00e3o mais fortes, para isso vamos criar dois novos atributos:\n* um \u00edndice de equilibrio que corresponde a diferen\u00e7a entre o Attack e a Defense (ou seja, quanto mais pr\u00f3ximo de 0, mais equilibrado para batalha o pokemon \u00e9, quanto maior significa que esse pokemons \u00e9 voltado principalmente para atacar e quanto menor significa que ele \u00e9 voltado principalmente para defender)\n* e um \u00edndice de poder total que correponde ao somat\u00f3rio do Attack, Defense e HP (quanto maior esse indice, melhor \u00e9 esse pokemon)","67572f3b":"Observa-se que boa parte das distribui\u00e7\u00f5es se aproximam de uma distribui\u00e7\u00e3o normal, com exce\u00e7\u00e3o da vari\u00e1vel Generation. Agora, vamos avaliar brevemente algumas estatisticas base do nosso dataframe.","0b54347c":"**Avaliando as informa\u00e7\u00f5es presentes no dataframe**","08bb3334":"Agora vamos avaliar os atributos categ\u00f3ricos da base.","7461bbf9":"Observa-se que h\u00e1 valores preenchidos para este pokemon, embora ele n\u00e3o tenha nome. Vamos excluir esse registro, uma vez que n\u00e3o podemos identificar a qual pokemon esses atributos se referem.","028201fa":"Observa-se que o shape da tabela \u00e9 de 800 linhas por 12 colunas. E dentre essas colunas, tem-se 3 vari\u00e1veis do tipo obj, 8 vari\u00e1veis do tipo inteiro e uma booleana.\n\nAl\u00e9m disso, observa-se que h\u00e1 n\u00famero valores com NaN preenchidos. H\u00e1 1 registro em \"Name\" e 386 registros em Type 2. Vamos iniciar o tratamento nesses valores.","94d0890f":"Vamos iniciar a an\u00e1lise observando as distribui\u00e7\u00f5es dos dados de batalha das vari\u00e1veis categ\u00f3ricas (HP, Attack, Defense, Sp. Atk, Sp.Def, Speed e Generation).\n","c708f52d":"Aqui descobrimos que os dois valores outliers, do tipo normal, em rela\u00e7\u00e3o ao atributo HP s\u00e3o os pokemons: Blissey e o Chansey.\n\nVamos agora avaliar os pokemons lend\u00e1rios agora.","1abed1e6":"Observamos que o registro 63 n\u00e3o existe mais. Logo, vamos resetar nossa contagem de index e excluir as colunas index e #, uma vez que agora elas armazenam informa\u00e7\u00f5es irrelevantes para n\u00f3s. Iremos utilizar apenas o ID gerado pelo dataframe, que se inicia com 0 at\u00e9 o valor 798.","83b99305":"Vamos avaliar se os valores outliers no atributo HP s\u00e3o pokemons lend\u00e1rios ou se s\u00e3o erros na base.","cc5274c5":"Pronto! Agora observa-se que a linha sem nome foi deletada. Vamos observar se \u00e9 necess\u00e1rio resetar os IDs dos pokemons.","9045c581":"Outra informa\u00e7\u00e3o estatisticamente importante, \u00e9 a matriz de correla\u00e7\u00e3o.","97109320":"Conforme a distribui\u00e7\u00e3o do \u00edndice de equilibrio, observamos que a m\u00e9dia \u00e9 que os pokemons s\u00e3o mais equilibrado do que focados no ataque ou defesa.\n\nE que, conforme a distribui\u00e7\u00e3o do \u00edndice de poder, os pokemons tem um poder m\u00e9dio entre 150 e 300."}}