{"cell_type":{"a6ca7c5d":"code","9e4108c2":"code","bc6732ea":"code","f042ed98":"code","e679781f":"code","3f65f7d6":"code","1ff77c17":"code","37e8569c":"code","646805b2":"code","840e5e28":"code","879b5527":"code","9c8eda75":"code","0b85c7c6":"code","4a8850db":"code","2725bb6b":"code","94e73a7d":"code","e03cb2e4":"code","0b97f1c9":"code","982fc55c":"code","8138e92d":"code","b4d68b61":"markdown","0a7a06be":"markdown","3928fc7b":"markdown","a64cfc54":"markdown","f5a6d791":"markdown","93646cb2":"markdown"},"source":{"a6ca7c5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9e4108c2":"data = pd.read_csv(\"..\/input\/2015.csv\")","bc6732ea":"data.info() # Information for data","f042ed98":"data.describe() # Description of data","e679781f":"data.corr()","3f65f7d6":"f,ax = plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(), annot=True,linewidth=5, fmt='.1f',ax=ax)\nplt.show()\n","1ff77c17":"# print Columns of data with their number\nfor index,value in enumerate(data.columns):  \n    print(index+1,value)\n    ","37e8569c":"data.columns = [each.replace(\" \",\"_\") if (len(each.split()) > 1) else each for each in data.columns]","646805b2":"data.columns","840e5e28":"\ndata.Freedom.plot(kind=\"line\",color='red',label='Freedom',grid=True, alpha=0.5,linewidth=1,linestyle=':')\ndata.Generosity.plot(kind='line',color='blue',label='Generosity',grid=True, alpha=0.5,linewidth=1,linestyle='-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()\n\n","879b5527":"data.plot(kind='scatter', x='Freedom',y='Generosity',alpha=0.5, color='blue',grid=True)\nplt.xlabel('Freedom')\nplt.ylabel('Generosity')\nplt.title('Scatter Plot')\nplt.show()","9c8eda75":"data.Freedom.plot(kind='hist',bins=50,figsize=(12,8))\nplt.show()","0b85c7c6":"data.Freedom.plot(kind='hist',bins=50)\nplt.clf()","4a8850db":"print('Average Happiness Score: ',data.Happiness_Score.mean())\nprint('Average Freedom Score: ',data.Freedom.mean())","2725bb6b":"filtr=data['Happiness_Score']>data.Happiness_Score.mean()\ndata[filtr]","94e73a7d":"filtr2 = data['Freedom']>data.Freedom.mean()\ndata[filtr2].head(20)","e03cb2e4":"filtr1=data['Happiness_Score']>data.Happiness_Score.mean()\nfiltr2=data['Freedom']<data.Freedom.mean()\ndata[filtr1 & filtr2]","0b97f1c9":"filtr3=data['Freedom']>data.Freedom.mean() # data.Freedom.mean() is average freedom score\nfiltr4=data['Happiness_Score']<data.Happiness_Score.mean()\ndata[filtr3 & filtr4].head(10)","982fc55c":"#tail() - for last lines. Default number is 5 but we want to write 10.\n# [::-1] from end to top\ndata.tail(10)[::-1]        \n       ","8138e92d":"# Average Happiness Score --- Long way\naverage_h = sum(data.Happiness_Score)\/len(data.Happiness_Score)\n# Average Happiness Score --- Short Way\n# *** average_h = data.Happiness_Score.mean() ***\ndata['Who_is_happy'] = ['Happy' if i>average_h else 'Unhappy' for i in data.Happiness_Score]\ndata.loc[70:80,['Country','Who_is_happy']]\n\n","b4d68b61":"**Most Happy but little Free Country**","0a7a06be":"**Most Unhappy Country**","3928fc7b":"**Most Happy Country Which They are above average**","a64cfc54":"**New Column - Which country are happy or unhappy**","f5a6d791":"**Most Free but little Happy Country**","93646cb2":"**Most Free 50 country**"}}