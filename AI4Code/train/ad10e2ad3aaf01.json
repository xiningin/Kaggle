{"cell_type":{"8cd27e0b":"code","0015bdbf":"code","d6760da4":"code","dfc7fbee":"code","1d3e1526":"code","fd8063e6":"code","5fd5c050":"code","ef25a97c":"code","3f7a659b":"code","2d7765e8":"code","07fd947e":"code","5a7cc475":"code","32467121":"code","04612763":"code","33677b55":"code","2c2cb69c":"code","5ba954a2":"code","2d2df150":"code","e88f65db":"code","bdeb91a0":"code","42bb9fe4":"code","e5c2a8c9":"code","c84d3073":"code","1b458fcb":"code","d795c44a":"code","a6f0c6e3":"code","0e93fdcd":"code","4bdfe6e6":"code","e3262e2e":"code","3854dcb2":"code","74ec75ba":"code","2510937e":"code","76509b16":"code","a3d9f77b":"code","77087b7d":"code","f9f7b329":"code","f39c5c94":"markdown","8ff80837":"markdown","cc6d97b5":"markdown","ed08ee2f":"markdown","d36b260e":"markdown"},"source":{"8cd27e0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0015bdbf":"import seaborn as sns\nimport matplotlib.pyplot as plt","d6760da4":"df=pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")","dfc7fbee":"df.head()","1d3e1526":"df.isnull().sum()","fd8063e6":"sns.heatmap(df.isnull(),cmap = 'viridis')","5fd5c050":"df['rating'].value_counts().unique()","ef25a97c":"df.drop(['director','cast'],axis=1,inplace=True)","3f7a659b":"df.head()                 #after dropping columns","2d7765e8":"df['country'].replace(np.nan, 'United States',inplace=True)","07fd947e":"df.drop(['date_added'],axis=1,inplace=True)","5a7cc475":"df.head()","32467121":"df['rating'].value_counts()","04612763":"df['listed_in'].value_counts()","33677b55":"df['rating'].replace(np.nan,'TV-MA',inplace=True)","2c2cb69c":"df.isnull().sum()","5ba954a2":"df.head()","2d2df150":"sns.countplot(x='type',data=df)","e88f65db":"plt.figure(figsize=(12,8))\nsns.countplot(x='rating',data=df)","bdeb91a0":"plt.figure(figsize = (35,6))\nsns.countplot(x='release_year',data = df)","42bb9fe4":"plt.figure(figsize=(16,6))\nsns.scatterplot(x='rating',y='type',data=df)","e5c2a8c9":"plt.figure(figsize=(12,8))\nsns.countplot(x='rating',data=df,hue='type')","c84d3073":"#distribution according to countries\nimport plotly.express as px\ntop_rated=df[0:10]\nfig=px.sunburst(top_rated,path=['country'])\nfig.show()","1b458fcb":"#distribution according to the rating\ndf['rating'].value_counts().plot.pie(autopct='%1.1f%%',figsize=(20,35))\nplt.show()","d795c44a":" #oldest movies available on netflix\nold =df.sort_values(\"release_year\",ascending=True)\nold=old[old['duration']!= \"\" ]\nold[['title','release_year']][:15]","a6f0c6e3":"tag = \"Stand-Up Comedy\" #standup shows on Netflix\ndf[\"relevant\"] = df['listed_in'].fillna(\"\").apply(lambda x : 1 if tag.lower() in x.lower() else 0)\ncom = df[df[\"relevant\"] == 1]\ncom[com[\"country\"] == \"United States\"][[\"title\", \"country\",\"release_year\"]].head(10)","0e93fdcd":" #Kids TV shows on Netflix\ntag= \"Kids' TV\"\ndf[\"relevant\"]=df['listed_in'].fillna(\"\").apply(lambda x:1 if tag.lower() in x.lower() else 0)\ncom=df[df[\"relevant\"]==1]\ncom[com[\"country\"] == \"United States\"][[\"title\", \"country\",\"release_year\"]].head(10)","4bdfe6e6":"df_countries = pd.DataFrame(df.country.value_counts().reset_index().values, columns=[\"country\", \"count\"])\ndf_countries.head()","e3262e2e":"#distribution of content on basis of countries\nfig = px.choropleth(\nlocationmode='country names',\nlocations =df_countries[\"count\"])\nfig.show()","3854dcb2":"date=pd.DataFrame(df.release_year.value_counts().reset_index().values,columns=[\"Year\",\"Count\"])\ndate.head()","74ec75ba":"plt.figure(figsize=(12,6))\ndf[df[\"type\"]==\"Movie\"][\"release_year\"].value_counts()[:20].plot(kind=\"bar\",color=\"Red\")\nplt.title(\"Frequency of Movies which were released in different years and are available on Netflix\")","2510937e":"plt.figure(figsize=(12,6))\ndf[df[\"type\"]==\"TV Show\"][\"release_year\"].value_counts()[:20].plot(kind=\"bar\",color=\"Blue\")\nplt.title(\"Frequency of TV shows which were released in different years and are available on Netflix\")","76509b16":"plt.figure(figsize=(12,6))\ndf[df[\"type\"]==\"Movie\"][\"listed_in\"].value_counts()[:10].plot(kind=\"barh\",color=\"black\")\nplt.title(\"Top 10 Genres of Movies\",size=18)","a3d9f77b":"plt.figure(figsize=(12,6))\ndf[df[\"type\"]==\"TV Show\"][\"listed_in\"].value_counts()[:10].plot(kind=\"barh\",color=\"brown\")\nplt.title(\"Top 10 Genres of TV Shows\",size=18)","77087b7d":"from wordcloud import WordCloud","f9f7b329":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.title))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('cast.png')\nplt.show()","f39c5c94":"**standup shows on Netflix**","8ff80837":"**As we can see we only have 10 missing values in our rating column, we can either drop them or replace them. We have TV-MA which is the most common raing and hence we can replace all these nan values with TV-MA.**","cc6d97b5":".**We replaced all the Nan values in the country column with United States as Netflix was created in the USA and every show is aired on Netflix US. So instead of dropping the whole column we just replaced the values in it in order to save our data.**","ed08ee2f":"**We already have released year for each movie and hence even if we dont have released date,it wont affect our analsis much. Hence we can Drop released date column**","d36b260e":"**Dropping director & cast columns as they are not playing important part in analysis**"}}