{"cell_type":{"7db3f5c5":"code","0ae93157":"code","b1827a25":"code","81bced56":"code","1c72961f":"code","8c5a81e6":"code","41ba1f3e":"code","339e52e4":"code","802b6294":"code","9ecf9f6f":"code","bc0dd922":"code","7634490d":"code","a5e5f116":"code","ef46b48d":"code","fa35239c":"code","b0a41011":"code","f1177133":"code","b0b34a3f":"code","7b7fd20f":"code","4eb93c21":"code","cea9d674":"code","78576ac3":"code","f2b7dce3":"code","e3f48abb":"code","c6fdf479":"code","ccbd52fc":"code","b5cabe88":"markdown","c92f7e96":"markdown","4e57637e":"markdown","baf997cb":"markdown","0efbf589":"markdown","9590b682":"markdown","da928ae9":"markdown","8c3668bc":"markdown","c16220b6":"markdown"},"source":{"7db3f5c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ae93157":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/IR\/","b1827a25":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/IQ\/","81bced56":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/KP\/","1c72961f":"Iran = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/IR\/Iran-fa-result-3.txt'","8c5a81e6":"text = open(Iran, 'r',encoding='utf-8',\n                 errors='ignore').read()","41ba1f3e":"print(text[:2500])","339e52e4":"df3 = pd.read_table(\"\/kaggle\/input\/hackathon\/task_1-google_search_txt_files_v2\/IR\/Iran-fa-result-3.txt\",header=None)\ndf3.head()","802b6294":"Iraq = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/IQ\/Iraq-ar-result-6.txt'","9ecf9f6f":"text1 = open(Iraq, 'r',encoding='utf-8',\n                 errors='ignore').read()","bc0dd922":"print(text1[:2500])","7634490d":"df1 = pd.read_table(\"\/kaggle\/input\/hackathon\/task_1-google_search_txt_files_v2\/IQ\/Iraq-ar-result-6.txt\",header=None)\ndf1.head()","a5e5f116":"NorthKorea = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/KP\/North Korea-ko-result-4.txt'","ef46b48d":"text2 = open(NorthKorea, 'r',encoding='utf-8',\n                 errors='ignore').read()","fa35239c":"print(text2[:2500])","b0a41011":"df2 = pd.read_table(\"\/kaggle\/input\/hackathon\/task_1-google_search_txt_files_v2\/KP\/North Korea-ko-result-7.txt\",header=None)\ndf2.head()","f1177133":"df = pd.read_csv('..\/input\/hackathon\/BCG_world_atlas_data-2020.csv')\ndf.head()","b0b34a3f":"iraq = df[(df['Contry Name (Mandatory field)']=='Iraq')].reset_index(drop=True)\niraq.head()","7b7fd20f":"plt.figure(figsize=(24, 6))\nplt.subplot(131)\nsns.countplot(iraq['Vaccination Timing (age)'],palette=\"nipy_spectral\",order = iraq['Vaccination Timing (age)'].value_counts(dropna=False).index)\nplt.xticks(rotation=90)\nplt.subplot(132)\nsns.countplot(iraq['Is it mandatory for all children?'],palette=\"flag\", order = iraq['Is it mandatory for all children?'].value_counts(dropna=False).index)\nplt.subplot(133)\nsns.countplot(iraq['Is it from bcgatlas.org (Mandatory field)'], palette=\"bwr\", order = iraq['Is it from bcgatlas.org (Mandatory field)'].value_counts(dropna=False).index)","4eb93c21":"df4 = pd.read_csv('..\/input\/hackathon\/BCG_country_data.csv')\ndf4.head()","cea9d674":"iran = df4[(df4['country_name']=='Iran')].reset_index(drop=True)\niran.head()","78576ac3":"plt.figure(figsize=(24, 6))\nplt.subplot(131)\nsns.countplot(iran['gni_per_capita_usd'],palette=\"Greens_r\", order = iran['gni_per_capita_usd'].value_counts(dropna=False).index)\nplt.xticks(rotation=90)\nplt.subplot(132)\nsns.countplot(iran['income_group_type'],palette=\"flag\",order = iran['income_group_type'].value_counts(dropna=False).index)\nplt.subplot(133)\nsns.countplot(iran['percentage_people_with_diabetes'], palette=\"nipy_spectral\", order = iran['percentage_people_with_diabetes'].value_counts(dropna=False).index)","f2b7dce3":"fig = px.bar(iran, \n             x='lockdown_start', y='lockdown_end', color_discrete_sequence=['crimson'],\n             title='Covid19 in Iran', text='population_per_km2')\nfig.show()","e3f48abb":"northkorea = df4[(df4['country_name']=='North Korea')].reset_index(drop=True)\nnorthkorea.head()","c6fdf479":"plt.figure(figsize=(24, 6))\nplt.subplot(131)\nsns.countplot(northkorea['gni_per_capita_usd'],palette=\"flag\", order = northkorea['gni_per_capita_usd'].value_counts(dropna=False).index)\nplt.xticks(rotation=90)\nplt.subplot(132)\nsns.countplot(northkorea['income_group_type'],palette=\"bwr\",order = northkorea['income_group_type'].value_counts(dropna=False).index)\nplt.subplot(133)\nsns.countplot(northkorea['percentage_people_with_diabetes'], order = northkorea['percentage_people_with_diabetes'].value_counts(dropna=False).index)","ccbd52fc":"fig = px.bar(northkorea, \n             x='gni_per_capita_usd', y='percentage_people_with_diabetes', color_discrete_sequence=['#27f153'],\n             title='Covid19 in North Korea', text='population_per_km2')\nfig.show()","b5cabe88":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSsYFpPdY5RpsDQGH56NJT1e0eI5-4LRpsbnw&usqp=CAU)istockphoto.com","c92f7e96":"#Only the three columns above have any information to plot charts. Iran and North Korea have no info at all.","4e57637e":"#Axis of Evil\n\nThe phrase axis of evil was first used by U.S. President George W. Bush in his State of the Union address on January 29, 2002, less than five months after the 9\/11 attacks, and often repeated throughout his presidency, to describe foreign governments that, during his administration, allegedly sponsored terrorism and sought weapons of mass destruction. The notion of such an axis was used to pinpoint these common enemies of the United States and to rally the American populace in support of the War on Terror.\n\nIn his 2002 State of the Union Address, Bush called North Korea \"A regime arming with missiles and weapons of mass destruction, while starving its citizens.\" He also stated Iran \"aggressively pursues these weapons and exports terror, while an unelected few repress the Iranian people's hope for freedom.\" Bush gave the most criticism to Iraq, stating \"Iraq continues to flaunt its hostility toward America and to support terror. The Iraqi regime has plotted to develop anthrax and nerve gas and nuclear weapons for over a decade. This is a regime that has already used poison gas to murder thousands of its own citizens, leaving the bodies of mothers huddled over their dead children. This is a regime that agreed to international inspections, then kicked out the inspectors. This is a regime that has something to hide from the civilized world.\" Afterwards, Bush said, \"States like these and their terrorist allies constitute an axis of evil, arming to threaten the peace of the world.\" NONE of the terrorists involved in 9\/11 were citizens of the three nations Bush cited.\n\nhttps:\/\/en.wikipedia.org\/wiki\/Axis_of_evil","baf997cb":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQVkxcdQmzUmUjkJZT4gmYGBP-YhjI3k0hX5Q&usqp=CAU)en.wikipedia.org","0efbf589":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSQ6_txM-bjXkOw7Hyp58C3ZF78tXOMYjJ7NQ&usqp=CAU)cursosapientia.com.br","9590b682":"<iframe width=\"717\" height=\"538\" src=\"https:\/\/www.youtube.com\/embed\/9LUiMf_URW8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","da928ae9":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","8c3668bc":"#Maths is part of the Axis of Evil (According to the SNL video above).","c16220b6":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcS-ixzf3JDDtPbNEGaUWr0Bu81XRKqoLSGjbw&usqp=CAU)\nForces fighting Islamic State in Iraq helping to bury coronavirus victims in mass graves - youtube.com"}}