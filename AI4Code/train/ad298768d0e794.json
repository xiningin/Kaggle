{"cell_type":{"d81208f4":"code","7f2fb9d5":"code","ac45d531":"code","a3777814":"code","4fcfbdfd":"code","0163abe0":"code","20547165":"code","7c59f6f4":"code","6f4682b3":"code","c4699902":"code","3c6d30e5":"code","052b337b":"code","5861343a":"code","895948a6":"code","39b7771d":"code","cd600422":"code","1b6e4989":"code","daee32e8":"code","64618e7e":"code","404a0753":"code","6e2feb04":"code","2bbb510d":"code","967c4886":"code","30ee2c9e":"code","e4778eef":"code","6181e6b5":"code","56a8f74c":"code","ecc2c979":"code","d070cc10":"code","edaec07e":"code","1d6778c8":"code","b631b7e8":"markdown","c301556d":"markdown","85dbd45b":"markdown","8569a49f":"markdown","bf7a211b":"markdown","7a50db59":"markdown","2feec372":"markdown","3c0269c7":"markdown","893a01e6":"markdown","da1c5c93":"markdown","5ac8949e":"markdown","2259aee8":"markdown","c8773167":"markdown","69fdedb0":"markdown","ba2c4917":"markdown","984f0255":"markdown","88e44eac":"markdown"},"source":{"d81208f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f2fb9d5":"# Plotly Packages\nfrom plotly import tools\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\n# Matplotlib and Seaborn\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom string import ascii_letters\n\n# Statistical Libraries\nfrom scipy.stats import norm\nfrom scipy.stats import skew\nfrom scipy.stats.stats import pearsonr\nfrom scipy import stats","ac45d531":"df = pd.read_csv(\"..\/input\/flu-data\/H1N1_Flu_Vaccines.csv\")\ndf.head()","a3777814":"df.isnull().sum()","4fcfbdfd":"plt.rcParams['figure.figsize'] = (15, 10)\nplt.style.use('ggplot')\n\nsns.heatmap(df.corr(), annot=True)\nplt.title('Correlation Plot', fontsize = 20)\nplt.show()","0163abe0":"import pandas_profiling as pp \nprofile = pp.ProfileReport(df) \nprofile","20547165":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>0 and df[feature].dtypes=='O']\nprint(categorical_nan)","7c59f6f4":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","6f4682b3":"df[categorical_nan].isna().sum()","c4699902":"# Lets first handle numerical features with nan value\nnumerical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes!='O']\nnumerical_nan","3c6d30e5":"df[numerical_nan].isna().sum()","052b337b":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=df[feature].median()\n    \n    df[feature].fillna(median_value,inplace=True)\n    \ndf[numerical_nan].isnull().sum()","5861343a":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings(\"ignore\")","895948a6":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","39b7771d":"df = pd.get_dummies(df)","cd600422":"X, y = df.iloc[:,:-1],df.iloc[:,-1]","1b6e4989":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)\nprint('\\n \\n There are {} samples in the training set and {} samples in the test set'.format(X_train.shape[0], X_test.shape[0]))\nprint('\\n \\n There are {} samples in the training set and {} samples in the test set'.format(y_train.shape[0], y_test.shape[0]))","daee32e8":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel = model.fit(X_train, y_train)","64618e7e":"#Print the coefecients\/weights for each feature\/column of our model\nprint(model.coef_)","404a0753":"print(model.intercept_)","6e2feb04":"#print our predictions on our test data\ny_pred = model.predict(X_test)\nprint(y_pred)","2bbb510d":"x_ax = range(len(X_test))\nplt.scatter(x_ax, y_test, s=5, color=\"blue\", label=\"original\")\nplt.plot(x_ax, y_pred, lw=0.8, color=\"red\", label=\"predicted\")\nplt.legend()\nplt.show()","967c4886":"from sklearn.metrics import r2_score\nr2 = r2_score(y_test, y_pred)\nprint(r2)","30ee2c9e":"from sklearn.metrics import mean_absolute_error, mean_squared_error\nprint('Mean Squared Error:', mean_squared_error(y_test, y_pred)) \nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))\nprint('Mean Absolute Error:', mean_absolute_error(y_test, y_pred))","e4778eef":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.svm import SVR","6181e6b5":"#def find_best_model(X,Y):\n#    models = {\n#        'linear_regression' :{\n#            'model': LinearRegression(),\n #           'parameters':{\n                \n  #          }\n   #     },\n        \n    #    'decison_tree_regressor':{\n     #       'model': DecisionTreeRegressor(splitter='best'),\n      #      'parameters' :{\n       #         'max_depth' :[5,10]\n        #    }\n        #},\n        \n        #'random_forest': {\n         #   'model': RandomForestRegressor(),\n            \n          #  'parameters' :{\n           #     'n_estimators': [1,5,10,15,20,30,40,50,60,70,80,90,100]\n            #}\n        #},\n\n         #'svc' : {\n          #  'model' : SVR(gamma= 'auto'),\n            \n          #  'parameters': {\n          #      'kernel' : ['rbf','linear'],\n           #     'C': [1,10,20]\n          #  }\n        #}\n    #}\n    \n #   scores = []\n #   cv_shuffle = ShuffleSplit(n_splits=5,test_size= 0.33,random_state=0)\n    \n #   for model_names,model_params in models.items():\n  #      gc = GridSearchCV(model_params['model'],model_params['parameters'],cv = cv_shuffle,return_train_score= False)\n   #     gc.fit(X,Y)\n    #    scores.append({\n     #       'model': model_names,\n      #      'parameters' : gc.best_params_,\n       #     'score' : gc.best_score_\n       # })\n        \n    #return pd.DataFrame(scores, columns=['model','best_parameters','score'])\n\n#find_best_model(X_train, y_train)","56a8f74c":"#model = RandomForestRegressor(n_estimators= 1)\n#model.fit(X_train,y_train)","ecc2c979":"#predictions = model.predict(X_test)","d070cc10":"#predictions","edaec07e":"#x_ax = range(len(X_test))\n#plt.scatter(x_ax, y_test, s=5, color=\"blue\", label=\"original\")\n#plt.plot(x_ax, predictions, lw=0.8, color=\"red\", label=\"predicted\")\n#plt.legend()\n#plt.show()","1d6778c8":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke was Here' )","b631b7e8":"#The \u201cswine flu\u201d, The \u201cbird flu\u201d and Now The \"bat flu\".","c301556d":"#\u201cVaccine Nationalism.\u201d\n\nDuring the H1N1 pandemic, the federal government was criticized for relying on only one domestic vaccine supplier, GlaxoSmithKline (GSK), to manufacture the vaccine.\n\nCountries often prefer to produce their own vaccines domestically, in case there are border closures or what can be called \u201cvaccine nationalism.\u201d However, the dependence on only one supplier comes with its own risks because any disruptions or interruptions in the production line can cripple the whole\u2019s country\u2019s supply.\n\nIn the case of GSK, there were difficulties bottling the vaccine at their Quebec plant, which caused delays.\n\nAn internal review of the Public Health Agency of Canada and Health Canada\u2019s response to the H1N1 pandemic addressed the government\u2019s use of a sole vaccine supplier. The review stated that, at the time, there was only one manufacturer \u201cinterested in establishing sufficient domestic capacity to manufacture enough vaccine to inoculate the entire population in the event of an influenza pandemic.\u201d\nhttps:\/\/www.ctvnews.ca\/health\/covid-19-vaccination-lessons-from-canada-s-largest-ever-mass-immunization-effort-1.5138256","85dbd45b":"#Random Forest Model","8569a49f":"#Vaccine hesitancy\n\nAdd in vaccine hesitancy, which has only grown as a problem over the last decade. In 2019, the World Health Organization declared vaccine hesitancy to be one of the top 10 global health threats. Politicization of the U.S.\u2019s Covid-19 response, coupled with increasing distrust of the government, increases the risk of a Covid-19 vaccine safety scare undermining the vaccine program and public confidence.\n\nWe must prepare now for the launch of Covid-19 vaccines by setting up in advance these systems for vaccine safety monitoring to make sure the vaccines are very safe and to inspire the confidence necessary for a successful vaccination program.\nhttps:\/\/www.statnews.com\/2020\/10\/29\/lessons-h1n1-monitoring-covid-19-vaccine-safety\/","bf7a211b":"#Vaccine Distribution\n\n\"In preparation for a vaccine for the coronavirus, the Canadian government has already been pre-ordering supplies, such as vials and syringes, and working on logistics to store and transport the vaccine once it is ready.\n\n\u201cYou have to be ready to get, store, distribute that vaccine and so that is something the public health addresses and they will have to be ready to achieve that,\u201d\n\nIt\u2019s a considerable undertaking with respect to Canada\u2019s population of more than 35 million people.\n\n\u201cNot everyone will want a vaccine, not everyone will get it, but in broad numbers, 35 million vaccines would be needed or 20 million, and then if you need two doses, that\u2019s double that.\u201d \nhttps:\/\/www.ctvnews.ca\/health\/covid-19-vaccination-lessons-from-canada-s-largest-ever-mass-immunization-effort-1.5138256","7a50db59":"#Splitting data into Training and Testing data","2feec372":"#Getting Score for Model","3c0269c7":"#Rigor, objectivity, and transparency.\n\nBy the time the pandemic had faded, the H1N1 vaccine helped millions of people stay healthy without a safety problem \u2014 real or coincidental \u2014 derailing the program. This system to identify safety issues was developed using the principles of good governance and public health practice to ensure trust: rigor, objectivity, and transparency.\n\nThe need for monitoring the safety of SARS-CoV-2 vaccines after they are licensed and are being widely used is far greater today than it was for H1N1. Public health officials had decades of experience with influenza and influenza vaccines, and much was already known about the safety of these vaccines. In contrast, no coronavirus vaccine has ever existed. And some of the new vaccines are based on novel technologies, such as mRNA or DNA, and new vectors, such as the adenovirus.\nhttps:\/\/www.statnews.com\/2020\/10\/29\/lessons-h1n1-monitoring-covid-19-vaccine-safety\/","893a01e6":"#Handling Missing Values","da1c5c93":"#After the function below, the session stopped and didn't render anything else. I saved for the future.","5ac8949e":"#COVID-19 vaccination lessons from Canada's largest-ever mass immunization effort\n\nBy Jackie Dunham\n\nIn the fall of 2009, Canada launched its largest-ever vaccination campaign to protect against an outbreak of influenza A, or H1N1, with varying degrees of success. There were delays in production, supply shortages, and difficulties administering the new vaccine.\n\nAccording to Statistics Canada, by April 2010, the majority of Canadians (59 per cent or 16.5 million people) had not been vaccinated against the H1N1 virus, which was also known as the \u201cswine flu.\u201d\n\nThere were a number of reasons why there were delays in the rollout of the vaccine in Canada \u2013 timing being a key one \u2013 as the H1N1 virus spread in the spring of 2009 and the vaccine wasn\u2019t ready until months later, in the fall, when health-care providers were trying to administer seasonal flu shots.\n\nEarl Brown, a virologist and a former member of Canada\u2019s H1N1 Pandemic Vaccine Task Group, added that manufacturers were also preoccupied with creating a vaccine for avian influenza H5N1, or the \u201cbird flu,\u201d when they were forced to suddenly turn their attention to the new swine flu outbreak.\n\nWhile Canada\u2019s ambitious vaccination program for H1N1 may have had some hiccups along the way, the experience may provide some valuable lessons for the administration of future vaccines, such as those already in the works to combat against COVID-19.\nhttps:\/\/www.ctvnews.ca\/health\/covid-19-vaccination-lessons-from-canada-s-largest-ever-mass-immunization-effort-1.5138256","2259aee8":"#After trying Linear Regression, to get more accuracy (try to) make a function.","c8773167":"#Applying Linear Regression to Training Data","69fdedb0":"#Lessons for monitoring Covid-19 vaccine safety from the H1N1 pandemic\n\nBy DANIEL SALMON and JOSHUA M. SHARFSTEIN   OCTOBER 29, 2020\n\nAs the country and the world eagerly await vaccines to curb the Covid-19 pandemic and allow us to return to normal social and economic activities, preparing to monitor these vaccine for safety is critical task.\n\nWhy is safety monitoring needed after vaccines are found to be very safe and effective in the rigorous process of testing them in randomized controlled trials? Those trials establish which vaccines are effective and identify their most common adverse effects. But adverse reactions that are uncommon, appear only after a delay, or occur in subpopulations excluded from or inadequately included in clinical trials may not emerge until the vaccine is being widely used.\n\nAnother reason is that when vaccinating a large number of people, some will have heart attacks or strokes, develop diabetes or dementia, experience new-onset epilepsy, or have other health issues. Rapid and rigorous science is needed to determine if these events were caused by the vaccine or would have happened regardless of vaccination.\n\nThe process for separating real adverse reactions from coincidental events must be rapid and credible.\nhttps:\/\/www.statnews.com\/2020\/10\/29\/lessons-h1n1-monitoring-covid-19-vaccine-safety\/","ba2c4917":"#Plotting a graph between Testing and Prediction Data","984f0255":"#Codes by Shivangi Garg  https:\/\/www.kaggle.com\/shivangigarg160997\/pandas-profiling-and-to-choose-best-model","88e44eac":"#Calculating Errors"}}