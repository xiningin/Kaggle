{"cell_type":{"cb08aa5b":"code","8d8bbd3a":"code","5abccf14":"code","1d248528":"code","e4f9ac67":"code","4153256e":"code","3bf3071d":"code","21b7693c":"code","16445527":"markdown","0c88a091":"markdown","bb11139d":"markdown","77bd4066":"markdown","6ce6d2cb":"markdown","e5bc6f99":"markdown","4f37dfd3":"markdown"},"source":{"cb08aa5b":"!pip install adtk ;","8d8bbd3a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom adtk.detector import GeneralizedESDTestAD\nfrom adtk.visualization import plot\nfrom sklearn.metrics import f1_score\nimport warnings\nwarnings.filterwarnings('ignore')","5abccf14":"df = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ndf = df.iloc[0:500000]\ndf.time = [np.datetime64('2020-05-12') + pd.Timedelta(x, unit='ms') for x in df.time.values]\ndf.index = df.time","1d248528":"from adtk.detector import GeneralizedESDTestAD\nesd_ad = GeneralizedESDTestAD(alpha=75)\nanomalies = esd_ad.fit_detect(df.signal)","e4f9ac67":"plot(df.signal, anomaly=anomalies, ts_linewidth=1, ts_markersize=3, anomaly_markersize=5, anomaly_color='red', anomaly_tag=\"marker\");","4153256e":"f1_score(df.open_channels, anomalies, average='macro')","3bf3071d":"def change(val, b, r):\n    t = val.copy()\n    for i in range(0,len(t),b):\n        if np.sum(t[i:i+b])==b-1:\n            t[i:i+b]=1\n    for i in range(0,len(t),r\/\/2):\n        if np.sum(t[i:i+r])<2:\n            t[i:i+r]=0\n    return t","21b7693c":"f1_score(df.open_channels, change(anomalies.values,5,250), average='macro')","16445527":"# Finding Open Channels by using Anomaly Detection\nAs this is a somewhat nontraditional machine learning competition, it might be fun to look at the problem from a different perspective. <br>\nHence the idea of using anomaly detection to find open channels in those parts of the data which are binary (0 or 1 channels).","0c88a091":"## Data preprocessing\nAs I will only perform limited anomaly analysis, I restricted the data to the first batch (as I am sure only 0 and 1 open channels occur in this part of the data). <br>\nSecond, as anomaly detection takes into account the time between events, I added generated a timestamp value for each row based on the Time column.","bb11139d":"## Visualisation","77bd4066":"## Anomaly detection\nADTK provides multiple anomaly detection tools. Here I've used the GeneralizedESDTestAD and tuned the alpha parameter a bit. <br>\nGeneralizedESDTestAD detects anomaly based on generalized [extreme Studentized deviate (ESD)](https:\/\/en.wikipedia.org\/wiki\/Grubbs%27s_test_for_outliers) test.","6ce6d2cb":"We will use a python package to perform anomaly detection called ADTK:","e5bc6f99":"## Bonus: post-processing\nBy tweaking the results a little bit, such as smoothing the anomalies' outcome, the score can be improved even further.","4f37dfd3":"## Score"}}