{"cell_type":{"da90d407":"code","b3119cc2":"code","3e7b0fb0":"code","fb0fdc74":"code","4a4b4a68":"code","e98eb056":"code","bfe3a645":"code","73b5bd37":"code","f4bba377":"code","5ab37319":"markdown","247842a4":"markdown","30d1555c":"markdown","20033205":"markdown","a6548974":"markdown","96ff9a53":"markdown","b68b8d24":"markdown","885a3c3e":"markdown","fd08b231":"markdown"},"source":{"da90d407":"import os\nimport numpy as np\n\nfrom keras.models import Sequential, load_model\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\n\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","b3119cc2":"train_path = '..\/input\/fruits\/fruits-360_dataset\/fruits-360\/Training'\ntest_path = '..\/input\/fruits\/fruits-360_dataset\/fruits-360\/Test'\n\ntrain_labels = os.listdir(train_path)\ntest_labels = os.listdir(test_path)\n\ntrain_generator = ImageDataGenerator(rescale=1.\/255)\ntest_generator = ImageDataGenerator(rescale=1.\/255)\n\ntrain_data = train_generator.flow_from_directory(train_path, batch_size=32, classes=train_labels, target_size=(64,64))\ntest_data = test_generator.flow_from_directory(test_path, batch_size=32, classes=train_labels, target_size=(64,64))","3e7b0fb0":"cnn = Sequential()\n\ncnn.add(Conv2D(16, (3, 3), input_shape = (64, 64, 3), padding = \"same\", activation = \"relu\"))\ncnn.add(MaxPooling2D())\n\ncnn.add(Conv2D(32, (3,3), padding='same', activation='relu'))\ncnn.add(MaxPooling2D())\n\ncnn.add(Conv2D(64, (3,3), padding='same', activation='relu'))\ncnn.add(MaxPooling2D())\n\ncnn.add(Flatten())\n\ncnn.add(Dropout(0.25))\n\ncnn.add(Dense(256, activation = \"relu\"))\ncnn.add(Dense(len(train_labels), activation = \"softmax\"))","fb0fdc74":"cnn.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\ncnn.summary()","4a4b4a68":"history_cnn = cnn.fit(train_data, steps_per_epoch=1000, epochs=5, validation_steps=400, validation_data=test_data)","e98eb056":"plt.plot(history_cnn.history['accuracy'])\nplt.plot(history_cnn.history['val_accuracy'])","bfe3a645":"score = cnn.evaluate(test_data)","73b5bd37":"cnn.save(\"cnn_model.h5\")","f4bba377":"new_cnn = load_model(\"cnn_model.h5\")","5ab37319":"**(9) Loading the model**","247842a4":"**(3) Building the Keras model**","30d1555c":"**(4) Compiling the model**","20033205":"**(6) Plotting the accuracy and validation accuracy**","a6548974":"**(5) Training the model**","96ff9a53":"**(2) Preprocessing the data**","b68b8d24":"**(7) Evaluation of the model**","885a3c3e":"**(1) Import packages**","fd08b231":"**(8) Saving the model**"}}