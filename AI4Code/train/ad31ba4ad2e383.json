{"cell_type":{"761e4c62":"code","187ba853":"code","69945866":"code","cba1d15b":"code","1061e121":"code","30f42c4c":"code","a530ed21":"code","76fd2b2b":"code","d0110a46":"code","d2746276":"code","c300c2a3":"code","0a5065e4":"code","ae794636":"code","2c5f7213":"code","c07329b5":"code","33b6de84":"code","b5cfc5b9":"code","c71209be":"code","6e0d9f95":"code","17738d3e":"code","e9dc1ca9":"code","4b97099a":"code","e2deecee":"code","2c8f26a6":"code","4926225b":"code","3de86b1e":"code","2bbddf4e":"code","3830dec3":"code","6cb4882b":"code","fc92360e":"code","479c5cce":"code","196a051d":"code","663ba657":"code","0945442b":"code","038f824c":"code","8393131e":"code","48ad64a3":"code","4fa67462":"code","47a3b546":"code","a289c07b":"code","9f49465b":"code","8e56631d":"code","348b808a":"code","a960dad2":"code","b099887a":"code","31949184":"code","1e971de2":"code","7714b6b6":"code","ecc068b3":"code","7adc4531":"code","762c36c1":"code","28e4cd1f":"code","dce29be7":"markdown","604a44f6":"markdown","dc0c5319":"markdown","2913cd84":"markdown","25f40abe":"markdown","8cbbc89a":"markdown","6f3158db":"markdown","0abdfe07":"markdown","43662999":"markdown","2e7be02d":"markdown","d51cef28":"markdown","809a25d8":"markdown","4ab81bd4":"markdown","82c0637d":"markdown","ea546996":"markdown","f5bcc6f6":"markdown","b2119f38":"markdown","bf470dcb":"markdown","d48e19af":"markdown","7785f7d7":"markdown","dc8649d2":"markdown","52ac00ad":"markdown","739a3750":"markdown","306b87cd":"markdown","1f21d402":"markdown","6820f0f9":"markdown","69e9b27a":"markdown","3ade9a91":"markdown","d02e6fbe":"markdown","fafaf9c4":"markdown","910bac14":"markdown","234cf9bb":"markdown","4e744c7b":"markdown","3a1cb088":"markdown","fee32fe0":"markdown","4b0c17d9":"markdown","af0302a8":"markdown","bc7a07c7":"markdown","d0fef4d5":"markdown","3dfe92c3":"markdown","5c2f6c8e":"markdown","8efed97f":"markdown","460c16f0":"markdown","edee0ddc":"markdown","61b5e290":"markdown","969e700f":"markdown","e865a8a9":"markdown","125c6934":"markdown","b80f9c54":"markdown","d21bf555":"markdown","b2d41bcf":"markdown","086e90db":"markdown","8645dedb":"markdown"},"source":{"761e4c62":"import os\nimport random\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport tensorflow as tf\nfrom scipy import special #comb, factorial\nfrom keras import backend as K\nfrom scipy.stats import uniform\nfrom matplotlib import pyplot as plt\nfrom sklearn import tree\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest,chi2\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler,LabelEncoder\nfrom sklearn.metrics import classification_report, roc_auc_score, recall_score, make_scorer, plot_confusion_matrix, confusion_matrix, accuracy_score,f1_score\n\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","187ba853":"sns.set_style('whitegrid')","69945866":"df = pd.read_csv('\/kaggle\/input\/credit-card-customers\/BankChurners.csv')","cba1d15b":"df.head()","1061e121":"df.drop(['CLIENTNUM',\n        'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n        'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'],\n        axis=1,\n        inplace=True)","30f42c4c":"df.info()","a530ed21":"df.isnull().sum()","76fd2b2b":"df.head()","d0110a46":"df['Attrition_Flag'].value_counts()","d2746276":"df['Attrition_Flag'].value_counts(normalize=True)","c300c2a3":"dataframe = df\nfeature = 'Customer_Age'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist(bins=20)\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","0a5065e4":"#BOX\ndataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Customer_Age'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","ae794636":"df['Gender'].value_counts()","2c5f7213":"df['Gender'].value_counts(normalize=True)","c07329b5":"dataframe = df\nfeature_1 = 'Gender'\nfeature_2 = 'Attrition_Flag'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","33b6de84":"dataframe = df\nfeature_1 = 'Gender' # FEATURE\nfeature_2 = 'Attrition_Flag' # LABEL\nto_sort = True # `True` would be useful if label is binary\n\ncs = pd.crosstab(dataframe[feature_1],\n                 dataframe[feature_2],\n                 normalize='index')\nif to_sort == True:\n    cs.sort_values(by=[cs.columns[0]],inplace=True)\ncs.plot.bar(stacked=True,figsize=(10,6))\nplt.title(f'Conditional distributions of `{feature_2}`')\nplt.show()","b5cfc5b9":"#Histogram\ndataframe = df\nfeature1 = 'Dependent_count'\nsns.countplot(dataframe[feature1], order=df[feature1].value_counts().sort_index().index)\nplt.title(f\"Distribution of {feature1}\")","c71209be":"#Propotional Barplot (stacked)\n\ndataframe = df\nfeature_1 = 'Dependent_count' # FEATURE\nfeature_2 = 'Attrition_Flag' # LABEL\nto_sort = False\n\ncs = pd.crosstab(dataframe[feature_1],\n                 dataframe[feature_2],\n                 normalize='index')\nif to_sort == True:\n    cs.sort_values(by=[cs.columns[0]],inplace=True)\ncs.plot.bar(stacked=True,figsize=(10,6))\nplt.title(f'Conditional distributions of `{feature_2}`')\nplt.show()","6e0d9f95":"df['Education_Level'].value_counts()","17738d3e":"dataframe = df\nfeature_1 = 'Education_Level'\nfeature_2 = 'Attrition_Flag'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","e9dc1ca9":"dataframe = df\nfeature_1 = 'Education_Level' # FEATURE\nfeature_2 = 'Attrition_Flag' # LABEL\nto_sort = True # `True` would be useful if label is binary\n\n\n\ncs = pd.crosstab(dataframe[feature_1],\n                 dataframe[feature_2],\n                 normalize='index')\nif to_sort == True:\n    cs.sort_values(by=[cs.columns[0]],inplace=True)\ncs.plot.bar(stacked=True,figsize=(10,6))\nplt.title(f'Conditional distributions of `{feature_2}`')\nplt.show()","4b97099a":"df['Marital_Status'].value_counts()","e2deecee":"dataframe = df\nfeature_1 = 'Marital_Status'\nfeature_2 = 'Attrition_Flag'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","2c8f26a6":"dataframe = df\nfeature_1 = 'Marital_Status' # FEATURE\nfeature_2 = 'Attrition_Flag' # LABEL\nto_sort = True # `True` would be useful if label is binary\n\n\n\ncs = pd.crosstab(dataframe[feature_1],\n                 dataframe[feature_2],\n                 normalize='index')\nif to_sort == True:\n    cs.sort_values(by=[cs.columns[0]],inplace=True)\ncs.plot.bar(stacked=True,figsize=(10,6))\nplt.title(f'Conditional distributions of `{feature_2}`')\nplt.show()","4926225b":"df['Income_Category'].value_counts()","3de86b1e":"dataframe = df\nfeature_1 = 'Income_Category'\nfeature_2 = 'Attrition_Flag'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","2bbddf4e":"dataframe = df\nfeature_1 = 'Income_Category' # FEATURE\nfeature_2 = 'Attrition_Flag' # LABEL\nto_sort = True # `True` would be useful if label is binary\n\n\n\ncs = pd.crosstab(dataframe[feature_1],\n                 dataframe[feature_2],\n                 normalize='index')\nif to_sort == True:\n    cs.sort_values(by=[cs.columns[0]],inplace=True)\ncs.plot.bar(stacked=True,figsize=(10,6))\nplt.title(f'Conditional distributions of `{feature_2}`')\nplt.show()","3830dec3":"X, y = df.drop(['Attrition_Flag'],axis=1).copy(), df['Attrition_Flag'].copy()\n\nnon_numeric_features = ['Gender',\n'Education_Level',\n'Marital_Status', \n'Income_Category',\n'Card_Category']\n\nfor feature in non_numeric_features:\n    lb = LabelEncoder()\n    X[feature] = lb.fit_transform(X[feature])","6cb4882b":"sns.set_style('darkgrid')\n\nforest_clf = RandomForestClassifier(n_estimators=100)\nforest_clf.fit(X, y)\n\nimportances = forest_clf.feature_importances_\nindices = np.argsort(importances)[::-1]\n\nplt.figure(figsize=(7,7))\nplt.bar(range(len(indices)),importances[indices])\nplt.xticks(range(len(indices)), indices)\nplt.title(\"Feature importance (Random Forest)\")\nplt.xlabel('Index of a feature')\nplt.ylabel('Feature importance')\nplt.show()","fc92360e":"list(X.iloc[:,indices[:6]].columns)","479c5cce":"dataframe = df\nfeature = 'Total_Trans_Amt'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist()\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","196a051d":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Total_Trans_Amt'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","663ba657":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Total_Trans_Ct'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","0945442b":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Total_Ct_Chng_Q4_Q1'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","038f824c":"df['Total_Revolving_Bal'].describe()","8393131e":"#Histogram\ndataframe = df\nfeature = 'Total_Revolving_Bal'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist()\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","48ad64a3":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Total_Revolving_Bal'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","4fa67462":"#HISTOGRAM\ndataframe = df\ncat_feat = 'Attrition_Flag'\ncont_feat = 'Total_Revolving_Bal'\nplt.figure(figsize=(7,7))\nfor value in df[cat_feat].unique():\n    sns.distplot(df[df[cat_feat] == value][cont_feat], label=value)\nplt.legend()\nplt.title(f\"Distribution of `{cont_feat}` conditional on `{cat_feat}`\")\nplt.show()","47a3b546":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Avg_Utilization_Ratio'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","a289c07b":"dataframe = df\nfeature_1 = 'Attrition_Flag'\nfeature_2 = 'Total_Relationship_Count'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","9f49465b":"features = ['Total_Trans_Amt',\n             'Total_Trans_Ct',\n             'Total_Ct_Chng_Q4_Q1',\n             'Total_Revolving_Bal',\n             'Total_Relationship_Count',\n             'Total_Amt_Chng_Q4_Q1']\n\nX = df.loc[:,features]\ny = df['Attrition_Flag']","8e56631d":"fig, ax = plt.subplots(2,3,figsize=(10,10))\nax = ax.flatten()\n\nfor i,col in enumerate(X.columns):\n    ax[i].hist(X[col])\n    ax[i].set_title(f'Distribution of {col}')\n    \n","348b808a":"X['Total_Trans_Amt'] = np.log(X['Total_Trans_Amt']+1)","a960dad2":"plt.hist(X['Total_Trans_Amt'])\nplt.title('Distribution of `Total_Trans_Amt`')\nplt.show()","b099887a":"X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=11)\n\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)\n","31949184":"scoring = make_scorer(f1_score,pos_label='Existing Customer')","1e971de2":"nb_clf = GaussianNB().fit(X_train,y_train)\nprint(classification_report(y_true=y_test, y_pred=nb_clf.predict(X_test)))\nplot_confusion_matrix(nb_clf, X_test, y_test)","7714b6b6":"log_random_state = None\nlog_clf = LogisticRegression(random_state=log_random_state).fit(X_train, y_train)\nprint(classification_report(y_true=y_test, y_pred=log_clf.predict(X_test)))\nplot_confusion_matrix(log_clf, X_test, y_test)","ecc068b3":"MIN = 1 #Min number of neighbors\nMAX = 30 #Max number of neighbors\nknn_estimator = KNeighborsClassifier()\nknn_clf = GridSearchCV(knn_estimator,\n                       {'n_neighbors': range(MIN,MAX+1)}\n                       ,scoring=scoring).fit(X_train, y_train)\nprint(f\"Best estimator: {knn_clf.best_estimator_}\")\nprint(classification_report(y_true=y_test, y_pred=knn_clf.predict(X_test)))\nplot_confusion_matrix(knn_clf, X_test, y_test)","7adc4531":"estimator = RandomForestClassifier(random_state=13)\nrf_clf = GridSearchCV(estimator,\n                      param_grid={'n_estimators':[10,20,50,100], 'criterion': ['entropy','gini']},\n                      scoring=scoring).fit(X_train, y_train)\n\nprint(classification_report(y_true=y_test, y_pred=rf_clf.predict(X_test)))\nplot_confusion_matrix(rf_clf, X_test, y_test)","762c36c1":"model = ['NB','Logistic','KNN','RF']\nclfs = [nb_clf,log_clf,knn_clf,rf_clf]\nf1_att = [f1_score(y_true=y_test,\n                   y_pred=x.predict(X_test),\n                   pos_label='Attrited Customer') for x in clfs]\nf1_ex = [f1_score(y_true=y_test,\n                   y_pred=x.predict(X_test),\n                   pos_label='Existing Customer') for x in clfs]\n\nf1_att = [round(x,2) for x in f1_att]\nf1_ex = [round(x,2) for x in f1_ex]","28e4cd1f":"fig, ax = plt.subplots(1,2,figsize=(10,6))\nax = ax.flatten()\n\n\nax[0].bar(model,f1_att)\nax[0].set_title('f1 score (Positive label: Attrited customer)')\n\nax[1].bar(model,f1_ex)\nax[1].set_title('f1 score (Positive label: Existing customer)')\n\nplt.show()","dce29be7":"Unfortunately, target variable is highly unbalanced.","604a44f6":"Now the distribution looks like this:","dc0c5319":"Lastly, we will take a look at `Total_Relationship_Count`, which according to the dataset description, stands for \"Total no. of products held by the customer\". Let's see the conditional distribution:","2913cd84":"# Which features give us the best predicting power? (determined by Random Forest)","25f40abe":"# KNN\n\nWe will use Grid Search (where metric we are trying to optimize is f1 score with `Attrited Customer` being a positive label)","8cbbc89a":"# Naive Bayes","6f3158db":"# Is it true that existing customers make more transactions than attrited customers (over the last 12 months)? ","0abdfe07":"Unsurpursingly (partly due to the fact that the utililization ratio and revolving balance both reflect the borrowing habit of a customer), attrited customers tend to borrow less money than the existing customers.","43662999":"# How does the change in transaction frequency differ between attrited customers and existing ones?","2e7be02d":"# Does the total transcation amount over the last 12 months differ between attrited customers and existing ones?","d51cef28":"Let's have a look at each of the top 6 features separately. \n\nWe begin with `Total_Trans_Amt`, which stands for total amount of transactions over last 12 months.","809a25d8":"And the answer is: **no**, gender doesn't seem to be a good predictor of an attrition rate, as both distributions are roughly the same (although should be noted that in the female category, attrition rate is a little bit higher)","4ab81bd4":"# Does gender affect attrition rate?","82c0637d":"Get basic info about the dataset.","ea546996":"Next up is `Total_Ct_Chng_Q4_Q1`, which the the difference between the count of the transactions in Q4 and Q1. It wasn't specified how the values in `Total_Ct_Chng_Q4_Q1` were calculated, but it is likely the formula used was:\n\n$$\\frac{\\text{Count of transactions in Q4}}{\\text{Count of transcations in Q1}}$$","f5bcc6f6":"Now let's have an education level.","b2119f38":"As we see, attrited customers tend to purchase amount of services\/product from a bank","bf470dcb":"# Random Forest (with grid search)","d48e19af":"# Does marital status affect attrition rate?","7785f7d7":"# How does age affect attrition?","dc8649d2":"Let's have a look at the features' distribution, to determine which transformation\/scaling technique to use.","52ac00ad":"Let's take a look at top 6 features. Top 6 features are following:","739a3750":"And yet one more time, we see that the income doesn't have a good predictive power.","306b87cd":"Now let's have a look at the marital status.","1f21d402":"No, the marital status doesn't seem to be affecting attrition rate in any substantial way.","6820f0f9":"# Logistic regression","69e9b27a":"And indeed, attrited customers tend to have way smaller transaction frequency than the existing customers over the last 12 months.","3ade9a91":"Now let's look at some features separately.","d02e6fbe":"The next feature is `Total_Revolving_Bal`, which is revolving balance on the credit cart (i.e., the amount of money (excluding interest) that you borrowed last month but didn't repay).\n\nLet's look at the distribution:","fafaf9c4":"As the graphs show, education level (alone) doesn't allow your to predict whether a customer will close an account or not.","910bac14":"Similarly, dependent count is not really predictive of an attrition rate.","234cf9bb":"# Conclusions:\n\nHaving taken a look at the relation between top-6 features and the target, we can reach following conclusions:\n\n1. Attrited customers tend to make less transactions (signified by the lower transaction frequency and lower total transaction amount over the last 12 months)\n\n2. Attrited customers tend to borrow less money from a bank they are about to close the account in (signified by the lower utilization ratio and revolving balance)\n\n3. Attrited customers tend to use less of the bank's services than the existing customers.","4e744c7b":"# Conclusions so far:\n\nWe have been looking at a handful of features so far, namely: age, gender, dependent count, marital status, education level and income level. And as the results show, the aforementioned features are independent from the target variable (i.e., the features are bad predictors of the target variable).\n\nContinuing by looking at the remaining features one by one will be a tedious task, so to spare us time, we will now use Random Forest to help us find out the features with the best predicting power.","3a1cb088":"# How does dependent count affect attrition rate?","fee32fe0":"As we see, attrited customers tend to have way less amount of transactions.","4b0c17d9":"The next best feature is `Total_Trans_Ct`, which is the total **count** of transactions over the last 12 months. Even without looking at any graphs, we would expect that the attrited customers tend to have smaller count of the transactions than the existing customers. Let's verify it:","af0302a8":"# Does income level affect attrition rate?","bc7a07c7":"Normalizing distribution gives:","d0fef4d5":"All features besides `Total_Trans_Amt` are (roughly) normally distributed. To normalize `Total_Trans_Amt`, we will use logarithmic transform.","3dfe92c3":"# Does education level affect attrition rate?","5c2f6c8e":"The next good predictor is `Avg_Utilization_Ratio`, which stands for the utilization ratio of the user's credit card. Utilization ratio is calculated as:\n\n$$\\frac{\\text{amount borrowed}}{\\text{total available credit }}$$","8efed97f":"We see that random forest gives us the most accurate prediction.","460c16f0":"# Now let's try to classify.\n\nWe will be using top 6 features determined by the Random Forest.","edee0ddc":"As we see, attrited customers tend to have less revolving balance than existing customers.","61b5e290":"The column `CLIENTNUM` is not of much use, so we remove it. Furthermore, quoting the person who uploaded the dataset:\n> PLEASE IGNORE THE LAST 2 COLUMNS (NAIVE BAYES CLAS\u2026). I SUGGEST TO RATHER DELETE IT BEFORE DOING ANYTHING\"\n\nWe will do exactly that.","969e700f":"Luckily, no nulls.","e865a8a9":"Assuming that the formula to calculate the change was $\\frac{\\text{Count of transactions in Q4}}{\\text{Count of transcations in Q1}}$, we can see that most existing customers and attrited customers made less transactions in $Q4$ than in $Q1$. However, attrited customers saw a bigger slump in a transaction frequncy (signified by the lower median and the fact that customers with $0$ transactions in $Q4$ are not considered to be an outliers as far as attrited customers are concerned).","125c6934":"Now let's have a look at the gender distribution","b80f9c54":"As box plot suggests, the two groups (those with closed and open accounts) don't have any substantial differences in the age distribution.","d21bf555":"Do we have any nulls?","b2d41bcf":"Now we will split and standartize.","086e90db":"In our case, target variable is `Attrition_Flag`. Let's look at it's distribution.","8645dedb":"Let's have a look at the income category."}}