{"cell_type":{"91cf1df3":"code","50e80307":"code","6f9af3c0":"code","73f57d2b":"code","0e4ad0fc":"code","f719ed31":"code","138dfcd1":"code","7c2e850b":"code","8c6459a7":"code","6d66241d":"code","454afb1b":"code","9f70d6d8":"code","894a04cb":"code","a393e5bb":"markdown","3d018eee":"markdown","9b4d4de0":"markdown"},"source":{"91cf1df3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50e80307":"wutang_file = '..\/input\/wu-tang-clan-lyrics-dataset\/scrapes\/scrapes\/thelegacy.txt'\nwith open(wutang_file) as f: # The with keyword automatically closes the file when you are done\n    print (f.read(1000))","6f9af3c0":"import numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\ndef plotWordFrequency(input):\n    f = open(wutang_file,'r')\n    words = [x for y in [l.split() for l in f.readlines()] for x in y]\n    data = sorted([(w, words.count(w)) for w in set(words)], key = lambda x:x[1], reverse=True)[:40] \n    most_words = [x[0] for x in data]\n    times_used = [int(x[1]) for x in data]\n    plt.figure(figsize=(20,10))\n    plt.bar(x=sorted(most_words), height=times_used, edgecolor = 'black',  width=.5)\n    color = plt.cm.twilight(np.linspace(0, 1, 20))\n    plt.xticks(rotation=45, fontsize=18)\n    plt.yticks(rotation=0, fontsize=18)\n    plt.xlabel('Most Common Words:', fontsize=18)\n    plt.ylabel('Number of Occurences:', fontsize=18)\n    plt.title('Most Commonly Used Words: %s' % (wutang_file), fontsize=24)\n    plt.show()","73f57d2b":"wutang_file = '..\/input\/wu-tang-clan-lyrics-dataset\/scrapes\/scrapes\/thelegacy.txt'\nplotWordFrequency(wutang_file)","0e4ad0fc":"files = ['\/kaggle\/input\/wu-tang-clan-lyrics-dataset\/scrapes\/scrapes\/only4myniggas.txt']\nfiles","f719ed31":"!pip install tokenize_uk\n!pip install utils\n!pip install colorama\n!pip install pigeon-jupyter","138dfcd1":"import tokenize_uk\nfor src_file in files:\n    with open(src_file, 'rb') as f:\n        data = f.read()\n    text = data.decode('utf-8')\n    tokens_text = tokenize_uk.tokenize_sents(text)\ntokens_text","7c2e850b":"len(tokens_text)","8c6459a7":"tokens_text[:5]","6d66241d":"#\nfrom pigeon import annotate\nannotations = annotate(\ntokens_text[:25],\noptions=['fuck', 'fuck']\n)","454afb1b":"df = pd.DataFrame(annotations, columns=['scrapes', 'fuck'])\ndf","9f70d6d8":"def clean_text(text):\n  text = str(text)\n  text = re.sub(r'[0-9\"]', '', text)\n  text = re.sub(r'#[\\S]+\\b', '', text)\n  text = re.sub(r'@[\\S]+\\b', '', text)\n  text = re.sub(r'https?\\S+', '', text)\n  text = re.sub(r'\\s+', ' ', text)\n  return text.strip()\ndf['scrapes'] = df['scrapes'].apply(lambda x: clean_text(x))\ndf","894a04cb":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke Was here' )\n","a393e5bb":"I chose a word and repeated it. Don't ask me why.","3d018eee":"#Codes from Igor Krasovskiy https:\/\/www.kaggle.com\/mykras\/marking-up-for-ukrainian\/notebook","9b4d4de0":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQPyEOa55Oh4_D-XFFfzbLTHujOI3FmDLaWlg&usqp=CAU)amplycamisetas.com.br"}}