{"cell_type":{"71e42e56":"code","3ecdf0cd":"code","9f7cade6":"code","32ceff26":"code","9fcd40bb":"code","ad3391cc":"code","8debeca1":"code","43d76f16":"code","699f6293":"code","0f49747f":"code","66e41871":"code","13c4f9d1":"code","aa9d4518":"code","9e635aac":"code","bd1195bf":"code","f1921c40":"code","cd416f34":"code","b6df0b58":"code","7a37c0f1":"code","b44b13d8":"code","33a760ef":"markdown","d43dfb98":"markdown","4704816d":"markdown","5f57f10c":"markdown","d185f472":"markdown"},"source":{"71e42e56":"import numpy as np # lineer Cebir\nimport pandas as pd # Veri \u0130\u015fleme\nimport matplotlib.pyplot as plt # G\u00f6rselle\u015ftirme Arac\u0131\nimport seaborn as sns  # G\u00f6rselle\u015ftirme Arac\u0131\nfrom datetime import datetime # tarih-zaman k\u00fct\u00fcphanesi\n\nimport warnings\nwarnings.filterwarnings('ignore') # Uyar\u0131lar\u0131 g\u00f6rmezden gelme","3ecdf0cd":"df = pd.read_csv(\"..\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv\")\ndf.head() # Pandas ile yukarda okudu\u011fumuz DataFrame'nin ilk 5 \u00f6rne\u011fini g\u00f6r\u00fcnt\u00fcledik.","9f7cade6":"df = df.dropna() # Verimizdeki NaN de\u011ferleri d\u00fc\u015f\u00fcr\u00fcr.\ndf.Timestamp = pd.to_datetime(df.Timestamp, unit=\"s\") # Zaman format\u0131n\u0131 de\u011fi\u015ftiriyoruz \ndf.head()","32ceff26":"df.info() # Daha \u00f6nce okudu\u011fumuz .csv dosyas\u0131n\u0131n bilgilerini g\u00f6r\u00fcnt\u00fcledik\n# 1 integer ve 7 float verimiz var ve vermizin boyutu 296.5 mb. \n# Ayn\u0131 zamanda s\u00fct\u00fcn ba\u015fl\u0131klar\u0131n\u0131 ve \u00f6rnek say\u0131m\u0131z\u0131(4857377) g\u00f6rm\u00fc\u015f olduk.","9fcd40bb":"df.corr() # verilerin birbirleri ile orant\u0131s\u0131n\u0131(ters-do\u011fru) ve bunun etkisini g\u00f6r\u00fcyoruz.","ad3391cc":"df.describe() # S\u00fct\u00fcnlardaki verilerin say\u0131s\u0131, ortalams\u0131 gibi bilgilere ula\u015f\u0131yoruz.","8debeca1":"f,ax = plt.subplots(figsize=(9, 9))\nsns.heatmap(df.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","43d76f16":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\nplt.subplots(figsize=(9,6))\ndf.Open.plot(kind = 'line', color = 'g',label = 'Open',linewidth=1,alpha = 0.5,grid = True,linestyle = \":\")\ndf.Close.plot(color = 'r',label = 'Close',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n# Open ve Close de\u011ferlerini daha iyi analiz edebilmek i\u00e7in filtreleme yap\u0131p daha dar bir zaman aral\u0131\u011f\u0131 al\u0131nabilir.","699f6293":"df[\"Year\"] = (df[\"Timestamp\"]).dt.year # Zaman verisinden sadece y\u0131l\u0131 \u00e7ekip yeni bir s\u00fct\u00fcn olu\u015fturuyoruz\ndf_2020 = df[df[\"Year\"] == 2020] # Filtreleme ile 2020 y\u0131l\u0131 verilerini al\u0131yoruz.\ndf_2020.head()","0f49747f":"plt.subplots(figsize=(9,6))\ndf_2020.Open.plot(kind = 'line', color = 'g',label = 'Open',linewidth=1,alpha = 0.5,grid = True,linestyle = \":\")\ndf_2020.Close.plot(color = 'r',label = 'Close',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')            \nplt.show()\n# Filtreleme ilede pek de\u011fi\u015fiklik olmad\u0131 Open-Close verileri birbirine \u00e7ok yak\u0131n.","66e41871":"# Scatter Plot \n# x = Volume_(BTC), y = Volume_(Currency)\ndf_2020.plot(kind='scatter', x='Volume_(BTC)', y='Volume_(Currency)',alpha = 0.5,color = 'red')\nplt.xlabel('BTC')              \nplt.ylabel('Currency')\nplt.title('BTC - Currency Scatter Plot')\nplt.show()","13c4f9d1":"# Histogram\n# bins = number of bar in figure\ndf_2020.Weighted_Price.plot(kind = 'hist',bins = 50,figsize = (9,9))\nplt.show()\n# 2020 y\u0131l\u0131n\u0131n a\u011farl\u0131kl\u0131 ortalamas\u0131 fiyatlar\u0131n\u0131 g\u00f6rselle\u015ftirdik.","aa9d4518":"sene = df[\"Year\"]\nprint(type(sene))\nsene_Frame = df[[\"Year\"]]\nprint(type(sene_Frame))","9e635aac":"# Bir aral\u0131k ya da tek bir eleman\u0131 filtreleyebiliriz.\na = df[\"Year\"].iloc[5] # dataframeden tek bir eleman se\u00e7iyoruz.\nprint(a)\nb = df[\"Year\"].iloc[3452000]\nprint(b)\nc = df[\"Year\"]>2019\nprint(c.nunique()) # c de\u011fi\u015fkeni i\u00e7in ka\u00e7 tane e\u015fsiz de\u011fer oldu\u011funu bast\u0131rd\u0131k.\nd = df[(df[\"Year\"]>2017) & (df[\"Year\"]<2019)]\nprint(d.shape[0]) # filtreledi\u011fimiz d dataframesinin ka\u00e7 \u00f6rne\u011fi oldu\u011funu bast\u0131rd\u0131k.","bd1195bf":"# Mant\u0131ksal operat\u00f6rler \nprint(a > b)\nprint(a < b)\nprint(a == b)\nprint(a != b)\nprint(a >= b)\nprint(a <= b)\nprint((a < b) and (a != b)) # T\u00fcm e\u015fle\u015fmeler True olursa True d\u00f6ner di\u011fer durumlarda False d\u00f6ner.\nprint((a > b) or (a == b))\nprint((a < b) and (a == b))\nprint((a > b) or (a != b)) # E\u015fle\u015fmelerden tek biri bile True olsa True d\u00f6ner.","f1921c40":"while a != b:\n    print(\" a + b: \",a+b)\n    a += 1","cd416f34":"x = df.Year.iloc[:5]\nfor i in x: # Dataframemizden bir seri olu\u015fturup i\u00e7indeki elemanlar\u0131 bast\u0131rd\u0131k.\n    print(i)","b6df0b58":"# Dataframemizden bir seri olu\u015fturup i\u00e7indeki elemanlar\u0131 indexleri ile birlikte bast\u0131rd\u0131k.\nfor index, value in enumerate(x): \n    print(index,\" : \",value)","7a37c0f1":"# Olu\u015fturdu\u011fumuz serinin s\u00f6zl\u00fck gibi itemlerini bast\u0131rd\u0131k.\nfor key,value in x.items():\n    print(key,\" : \",value)","b44b13d8":"# DataFramemizin index ve de\u011ferini bast\u0131rd\u0131k\nfor index,value in df[['Year']][0:3].iterrows():\n    print(index,\" : \",value)","33a760ef":"# Tan\u0131t\u0131m\n\nBu \u00e7al\u0131\u015fmada pythonun *pandas*, *numpy*, *matplotlib* ve *seaborn* gibi k\u00fct\u00fcphanelerinin yard\u0131m\u0131 ile verileri .csv dosyas\u0131ndan okuma, i\u015fleme, g\u00f6rselle\u015ftirme i\u015flemlerini yapaca\u011f\u0131z.\n\n#### 1. Gerekli k\u00fct\u00fcphaneleri y\u00fckl\u00fcyoruz.\n#### 2. DataFrame'yi okuyor ve inceliyoruz.\n#### 3. Veriyi analiz edebilmek i\u00e7in g\u00f6rselle\u015ftiriyoruz.\n#### 4. Veride filtreleme ve d\u00fczenlemeler yap\u0131yoruz.","d43dfb98":"# Pandas\n\nVeri d\u00fczenleme, i\u015fleme, filtreleme <br>\nMant\u0131ksal de\u011ferlendirme operat\u00f6rleri <br>\nD\u00f6ng\u00fcler\n","4704816d":"## *Matplotlib*\n\nVerileri grafiklerle g\u00f6rselle\u015ftirip analiz etmek i\u00e7in kullanabildi\u011fimiz bir k\u00fct\u00fcphanedir. \u00d6rnekler i\u00e7in a\u015fa\u011f\u0131da linke bak\u0131labilir.\nhttps:\/\/matplotlib.org\/stable\/gallery\/index.html ","5f57f10c":"## *K\u00fct\u00fcphaneleri y\u00fckl\u00fcyoruz.*","d185f472":"## *Veriyi okuyor ve inceliyoruz.(EDA)*"}}