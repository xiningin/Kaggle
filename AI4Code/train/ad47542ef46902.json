{"cell_type":{"da97c5b6":"code","ea27b964":"code","ba2d5d63":"code","25cd9780":"code","8bfa4b4f":"code","6d1c170d":"code","01c8adf1":"code","568d5ad5":"code","791b97df":"code","ec604e94":"markdown","28444cd0":"markdown","2f46eeff":"markdown","5aba0d17":"markdown","7fb13028":"markdown","4c7b781b":"markdown","91d7c562":"markdown","b54701d2":"markdown"},"source":{"da97c5b6":"def getAreaAndPerimeter(a,b):\n    return ( a*b ,2*(a+b))\n\nw=4\nh=8\na,p=getAreaAndPerimeter(w,h)\nprint(\"width: {0}, height: {1}, area: {2}, perimeter: {3}\".format(h,w,a,p))","ea27b964":"# global scope\nxasd=5\n\ndef someFunc():\n    #someFunc scope starts here\n    xasd = 7\n    print(xasd)\n    #someFunc scope ends here\n    \ndef anotherFunc():\n    #anotherFunc scope starts here\n    xasd = 9\n    return xasd\n    #anotherFunc scope ends here\n    \n#global scope here too\nprint(xasd)\nsomeFunc()\nprint(anotherFunc())","ba2d5d63":"def calculate(a,b,op):\n    def add(a,b):\n        return a+b\n    def substract(a,b):\n        return a-b\n    \n    if op == '+':\n        return add(a,b)\n    elif op == '-':\n        return substract(a,b)\n    elif op=='*' or op=='\/':\n        return 'not supported yet'\n    else:\n        return 'invalid op'\n        \nprint(calculate(4,5,'+'))\nprint(calculate(7,5,'-'))\nprint(calculate(7,5,'*'))\nprint(calculate(7,5,'Q'))","25cd9780":"def calculate(*args,op='+'):\n    def add(args):\n        total=0\n        for i in args:\n            total = total + i\n        return total\n\n    if op == '+':\n        return add(args)\n\nprint(calculate(4,5,6,7,op='+'))\nprint(calculate(4,5,6,7))","8bfa4b4f":"# print(calculate(4,5,6,7,'+')) \n# will raise error. opt args must be stated explicitly if used with flexible args","6d1c170d":"getSquare = lambda x : x * x\nprint(getSquare(4))","01c8adf1":"it = iter(\"doruk ulucay\")\nprint(next(it))\nprint(next(it))\nprint(*it)","568d5ad5":"list1 = [1,3,5,7]\nlist2 = [2,4,6,8]\nz = zip(list1, list2)\nprint(z)\nz_list = list(z)\nprint(z_list)\n\n\nunzipped =zip(*z_list)\nl1, l2 = list(unzipped)\nprint(l1)","791b97df":"list1 = [1,2,3]\nlist2 = [i + 1 for i in list1]\nprint(list1)\nprint(list2)\n\nprint([str(i) +' is even' if i%2==0 else str(i) +' is odd' for i in range(1,100) ])","ec604e94":"what we learned in Python Data science toolbox section([here](https:\/\/www.kaggle.com\/kanncaa1\/data-sciencetutorial-for-beginners)) is to be reviewed in this homework","28444cd0":"## ZIP","2f46eeff":"## LIST COMPREHENSION","5aba0d17":"## ITERATOR","7fb13028":"## LAMBDA FUNC","4c7b781b":"## FLEXIBLE AND OPTIONAL ARGS","91d7c562":"## User Def'd Functions, Tuple, String.Format, Scope","b54701d2":"## NESTED FUNCTION"}}