{"cell_type":{"8432374b":"code","057f0d68":"code","a1ac828a":"code","9fa71ce6":"code","16bf3e30":"code","dd579f86":"code","9297ca45":"code","cb82fcb1":"code","ff785c9c":"code","ea85bf10":"code","521bbf0b":"code","a03248a0":"code","77917517":"code","3c18a082":"code","302a3b76":"code","72f78831":"code","a1278a41":"code","e2e5a41d":"code","08085bf0":"code","82fe7647":"code","f6c26681":"code","75ddb0f8":"code","d3e3c812":"code","ce7f1a46":"code","bdecb9d7":"code","190ac8ee":"code","ace5972b":"code","8c097c88":"code","a03f15b5":"code","c329222e":"markdown","3ef8ff18":"markdown","62ceaa85":"markdown","5d946dee":"markdown","dfa15e58":"markdown"},"source":{"8432374b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","057f0d68":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","a1ac828a":"file_name='..\/input\/youtube-new\/USvideos.csv'\nmy_df=pd.read_csv(file_name,index_col='video_id')\nmy_df.head(3)","9fa71ce6":"my_df['tresnding_date']=pd.to_datetime(my_df['trending_date'],format='%y.%d.%m')\nmy_df['trending_date'].head()","16bf3e30":"my_df['publish_time']=pd.to_datetime(my_df['publish_time'],format='%Y-%m-%dT%H:%M:%S.%fZ')\nmy_df['publish_time'].head()","dd579f86":"my_df['publish_time'].dt.date","9297ca45":"my_df.insert(4,'publish_date',my_df['publish_time'].dt.date)\nmy_df['publish_time']=my_df['publish_time'].dt.time","cb82fcb1":"my_df[['publish_time','publish_date']].head()","ff785c9c":"type_int=['views','likes','dislikes','comment_count']\nfor i in type_int:\n    my_df[i]=my_df[i].astype(int)\n\nmy_df['category_id']=my_df['category_id'].astype(str)","ea85bf10":"import json\nid_to_category = {}\nwith open('..\/input\/youtube-new\/US_category_id.json','r') as f:\n    data=json.load(f)\n    for category in data['items']:\n        id_to_category[category['id']]=category['snippet']['title']\n       # print(category['id'])\nid_to_category","521bbf0b":"my_df.insert(4,'category',my_df['category_id'].map(id_to_category))\nmy_df[['category_id','category']].head()","a03248a0":"corr_matrix=my_df[['views', 'likes', 'dislikes', 'comment_count']].corr()\ncorr_matrix","77917517":"import matplotlib\nmatplotlib.rcParams['figure.figsize'] = (10, 10)\nfrom matplotlib import cm\nfig,ax=plt.subplots()\nheatmap=ax.imshow(corr_matrix,interpolation='nearest',cmap=cm.coolwarm)\n\ncbar_min=corr_matrix.min().min()\ncbar_max=corr_matrix.max().min()\ncbar=fig.colorbar(heatmap,ticks=[cbar_min,cbar_max])\nkeep_columns=['views', 'likes', 'dislikes', 'comment_count']\nlabels = ['']\nfor column in keep_columns:\n    labels.append(column)\n    labels.append('')\nax.set_xticklabels(labels, minor=False)\nax.set_yticklabels(labels, minor=False)\n\n\nplt.show()","3c18a082":"my_df = my_df[~my_df.index.duplicated(keep='last')]","302a3b76":"my_df.shape","72f78831":"my_df.head(3)","a1278a41":"#Top 10 videos -Function\ndef top_10(data,column,n=10):\n    sorted_data=data.sort_values(column,ascending=False).iloc[:n]\n    #sns.barplot(sorted_data[column])\n    ax=sorted_data[column].plot.bar()\n    labels=[]\n    for item in sorted_data['title']:\n        labels.append(item[:8]+'..')\n    ax.set_xticklabels(labels,rotation=60,fontsize=10)\n    \ntop_10(my_df, 'views')","e2e5a41d":"#Likes Vs. Views\nimport seaborn as sns\nsns.scatterplot(x='likes',y='views',data=my_df)","08085bf0":"top_10(my_df, 'likes', n=5) # only visualizes the top 5","82fe7647":"top_10(my_df, 'dislikes', n=5)","f6c26681":"top_10(my_df, 'comment_count', n=5)","75ddb0f8":"category_count=my_df['category'].value_counts()\ncategory_count","d3e3c812":"ax=category_count.plot.bar()","ce7f1a46":"#Highly used tag\ntag=[]\nfor i in my_df['tags']:\n    for j in i.split('|'):\n        tag.append(j.replace('\"',\" \").strip().replace('\"',\"\"))\n        ","bdecb9d7":"TAGS=pd.DataFrame(tag,columns=['TAGS'])","190ac8ee":"TAGS=TAGS['TAGS'].value_counts().iloc[:6]\nTAGS=TAGS.drop('[none]')\nTAGS","ace5972b":"values=[]\nfor i in TAGS:\n    values.append(i)","8c097c88":"labels=[]\nfor i in TAGS.keys():\n    if i not in [False,0,\"[none]\"]:\n        labels.append(i)\n","a03f15b5":"sns.barplot(x=labels,y=values)\n# These are the highly used tags in the videos","c329222e":"# Processing Dates\nDates to proper dates\n","3ef8ff18":"# Correlation and heatmap","62ceaa85":"# changing data types\nviews,likes,dislikes,comment_count need int data type","5d946dee":"# Highly used tag","dfa15e58":"# TOP 10 Views,likes,dislikes"}}