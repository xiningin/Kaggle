{"cell_type":{"f57a128f":"code","6ffa9e31":"code","05ff4a6e":"code","6fc92a09":"code","5011678d":"code","bca98f46":"code","34602114":"code","5e38519a":"code","3a56e782":"code","a5e852d3":"code","6c4f920e":"code","9bf1d747":"code","92679fa2":"code","58a5570d":"code","63d89869":"code","4f37926e":"markdown","e9b45ef3":"markdown","9e300d2f":"markdown","be9e89d0":"markdown","0bafda3b":"markdown","43f40351":"markdown","0f054706":"markdown","74b4603d":"markdown","94c2f620":"markdown","fb1cb310":"markdown","239bca03":"markdown","27b8f19a":"markdown","0f5cccd1":"markdown","d0b7517a":"markdown"},"source":{"f57a128f":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nfrom iso3166 import countries","6ffa9e31":"u_cols = ['user_id', 'location', 'age']\nusers = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX-Users.csv', sep=';', names=u_cols, encoding='latin-1', low_memory=False, skiprows=1)\nb_cols = ['isbn', 'book_title' ,'book_author','year_of_publication', 'publisher', 'img_s', 'img_m', 'img_l']\nbooks = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX_Books.csv', sep=';', names=b_cols, encoding='latin-1', low_memory=False, skiprows=1)\nr_cols = ['user_id', 'isbn', 'rating']\nratings = pd.read_csv('..\/input\/bookcrossing-dataset\/Book reviews\/BX-Book-Ratings.csv', sep=';', names=r_cols, encoding='latin-1', low_memory=False, skiprows=1)","05ff4a6e":"df = pd.merge(users, ratings, on='user_id')\ndf = pd.merge(df, books, on='isbn')\ndf","6fc92a09":"ds = df['rating'].value_counts().reset_index()\n\nds.columns = [\n    'value', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x='value', \n    y=\"count\", \n    orientation='v', \n    title='Ranking distribution', \n    width=800,\n    height=600\n)\n\nfig.show()","5011678d":"ds = df['year_of_publication'].value_counts().reset_index()\n\nds.columns = [\n    'value', \n    'count'\n]\n\nds['value'] = ds['value'].astype(str) + ' year'\nds = ds.sort_values('count').tail(50)\n\nfig = px.bar(\n    ds, \n    x='count', \n    y=\"value\", \n    orientation='h', \n    title='Top 50 years of publishing', \n    width=800,\n    height=900\n)\n\nfig.show()","bca98f46":"ds = df['book_author'].value_counts().reset_index()\n\nds.columns = [\n    'author', \n    'count'\n]\n\nds = ds.sort_values('count').tail(50)\n\nfig = px.bar(\n    ds, \n    x='count', \n    y=\"author\", \n    orientation='h', \n    title='Authors with largest number of votes', \n    width=800,\n    height=900\n)\n\nfig.show()","34602114":"ds = df['book_title'].value_counts().reset_index()\n\nds.columns = [\n    'book_title', \n    'count'\n]\n\nds = ds.sort_values('count').tail(50)\n\nfig = px.bar(\n    ds, \n    x='count', \n    y='book_title', \n    orientation='h', \n    title='Books with largest number of votes', \n    width=800,\n    height=900\n)\n\nfig.show()","5e38519a":"fig = px.histogram(\n    df, \n    \"age\", \n    nbins=100, \n    title='Age distribution', \n    width=700,\n    height=600\n)\n\nfig.show()","3a56e782":"data = df.groupby('rating')['age'].mean().reset_index()\n\nfig = px.bar(\n    data, \n    x=\"rating\", \n    y=\"age\", \n    orientation='v', \n    title='Average age for every raiting',\n    width=800,\n    height=700\n)\n\nfig.show()","a5e852d3":"users = df['user_id'].value_counts().reset_index()\n\nusers.columns = [\n    'user_id', \n    'evaluation_count'\n]\n\nusers['user_id'] = 'user ' + users['user_id'].astype(str)\nusers = users.sort_values('evaluation_count')\n\nfig = px.bar(\n    users.tail(50), \n    x=\"evaluation_count\", \n    y=\"user_id\", \n    orientation='h', \n    title='Top 50 book reviewers',\n    width=800,\n    height=900\n)\n\nfig.show()","6c4f920e":"users = df['user_id'].value_counts().reset_index()\n\nusers.columns = [\n    'user_id', \n    'evaluation_count'\n]\n\ndf = pd.merge(df, users)\nmean_df = df[df['evaluation_count']>100]\nmean_df = mean_df.groupby('user_id')['rating'].mean().reset_index().sort_values('rating')\nmean_df['user_id'] = 'user ' + mean_df['user_id'].astype(str)\n\nfig = px.bar(\n    mean_df.tail(50), \n    x=\"rating\", \n    y=\"user_id\", \n    orientation='h', \n    title='Top 50 users with highest avarage rating (more than 100 evaluations)',\n    width=800,\n    height=900\n)\n\nfig.show()","9bf1d747":"books = df['book_title'].value_counts().reset_index()\nbooks.columns = ['book_title', 'book_evaluation_count']\ndf = pd.merge(df, books)\nmean_df = df[df['book_evaluation_count']>100]\nmean_df = mean_df.groupby('book_title')['rating'].mean().reset_index().sort_values('rating')\n\nfig = px.bar(\n    mean_df.tail(50), \n    x=\"rating\", \n    y=\"book_title\", \n    orientation='h', \n    title='Top 50 books with highest avarage rating (more than 100 evaluations)',\n    width=1000,\n    height=900\n)\nfig.show()","92679fa2":"books = df['publisher'].value_counts().reset_index()\nbooks.columns = ['publisher', 'publisher_evaluation_count']\ndf = pd.merge(df, books)\nmean_df = df[df['publisher_evaluation_count']>100]\nmean_df = mean_df.groupby('publisher')['rating'].mean().reset_index().sort_values('rating')\n\nfig = px.bar(\n    mean_df.tail(50), \n    x=\"rating\", \n    y=\"publisher\", \n    orientation='h', \n    title='Top 50 publishers with highest avarage rating (more than 100 evaluations)',\n    width=1000,\n    height=900\n)\nfig.show()","58a5570d":"books = df['book_author'].value_counts().reset_index()\nbooks.columns = ['book_author', 'author_evaluation_count']\ndf = pd.merge(df, books)\nmean_df = df[df['author_evaluation_count']>100]\nmean_df = mean_df.groupby('book_author')['rating'].mean().reset_index().sort_values('rating')\n\nfig = px.bar(\n    mean_df.tail(50), \n    x=\"rating\", \n    y=\"book_author\", \n    orientation='h', \n    title='Top 50 authors with highest avarage rating (more than 100 evaluations)',\n    width=1000,\n    height=900\n)\nfig.show()","63d89869":"df['country'] = df['location'].str.split(',').str[2].str.lstrip().str.rstrip()\ndf['state'] = df['location'].str.split(',').str[1].str.lstrip().str.rstrip()\ndf['city'] = df['location'].str.split(',').str[0].str.lstrip().str.rstrip()\ndf = df.drop(['location', 'img_s', 'img_m', 'img_l'], axis=1)","4f37926e":"Let's do the same for books.","e9b45ef3":"<h1><center>Book review ratings. Analysis and visualization<\/center><\/h1>\n\n<center><img src=\"https:\/\/www.detroitlabs.com\/wp-content\/uploads\/2018\/02\/alfons-morales-YLSwjSy7stw-unsplash.jpg\"><\/center>","9e300d2f":"# Work in Progress","be9e89d0":"Let's see average age for every rank","0bafda3b":"<a id=\"1\"><\/a>\n<h2 style='background:brown; border:0; color:white'><center>1. Data visualization<center><h2>","43f40351":"First let's see rating distribution","0f054706":"### Let's create columns based on location column","74b4603d":"Let's check users that made more reviews than others","94c2f620":"Let's check authors now?","fb1cb310":"<a id=\"2\"><\/a>\n<h2 style='background:brown; border:0; color:white'><center>2. Feature engineering<center><h2>","239bca03":"What about year of publication?","27b8f19a":"Age of users looks really impressive. Some of them are greater than 200 years old !!!)))","0f5cccd1":"What about users with the best loyality?","d0b7517a":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:Brown; border:0' role=\"tab\" aria-controls=\"home\"><center>Quick navigation<\/center><\/h3>\n\n* [1. Data visualization](#1)\n* [2. Feature engineering](#2)"}}