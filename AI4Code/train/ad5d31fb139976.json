{"cell_type":{"3e51263b":"code","47ca8593":"code","25f7b152":"code","60df797c":"code","3d90727c":"code","1f10d43f":"code","92823f7c":"code","b64c43d7":"markdown"},"source":{"3e51263b":"import datetime as dt\nimport os\nimport re\n\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\n\nNFL_DATA_DIR = '..\/input'\nNGS_DIR = '.'\n\nYARD = 0.9144\nMPH = 1.609344\nSPEED_LIMIT = 13\nMAX_SPEED = 11\nSMOOTHING_FACTOR = 3","47ca8593":"start = dt.datetime.now()","25f7b152":"NGS_BY_PLAY = {}\nngs_filenames = [f for f in os.listdir(NFL_DATA_DIR) if f.startswith('NGS')]\nfor f in ngs_filenames[:]:\n    ngs = pd.read_csv(os.path.join(NFL_DATA_DIR, f), parse_dates=['Time'], low_memory=False)\n    ngs['PlayKey'] = ngs['GameKey'].apply(str) + '_' + ngs['PlayID'].apply(str)\n    for playkey, df in tqdm(ngs.groupby('PlayKey')):\n        play_filename = os.path.join(NGS_DIR, f'{playkey}.csv')\n        NGS_BY_PLAY[playkey] = df[['GSISID', 'Time', 'x', 'y', 'dis', 'o', 'dir', 'Event']]\n\ndef get_plays():\n    data = pd.read_csv(os.path.join(NFL_DATA_DIR, 'play_information.csv'), parse_dates=['Game_Date'])\n    data.columns = [col.replace('_', '') for col in data.columns]\n    data['PlayKey'] = data['GameKey'].apply(str) + '_' + data['PlayID'].apply(str)\n    data = data.drop(['PlayID', 'PlayType'], axis=1)\n    data = data.sort_values(['GameKey', 'Quarter', 'GameClock'])\n    data['PlayType'] = 'Punt'\n    return data\n\ndef get_ngs(playkey):\n    ngs = NGS_BY_PLAY[playkey].copy()\n    ngs['t'] = (ngs.Time - ngs.Time.min()) \/ np.timedelta64(1, 's')\n    ngs = ngs.sort_values(by='t')\n    return ngs\n\ndef calculate_speed_and_acceleration(ngs, smoothing_factor=5):\n    speed = ngs.pivot('t', 'GSISID', 'dis') * YARD\n    speed = speed.fillna(0)\n    speed = speed.rolling(smoothing_factor).mean() * 10\n    acc = speed.clip(0, MAX_SPEED).diff(smoothing_factor) * 10. \/ smoothing_factor\n    return speed, acc\n\ndef collect_ngs_player_stats():\n    plays = get_plays()\n    result = []\n    for playkey in tqdm(plays.PlayKey.values):\n        try:\n            ngs = get_ngs(playkey)\n\n            speed, acc = calculate_speed_and_acceleration(ngs, SMOOTHING_FACTOR)\n            max_speed = speed.max(axis=0).reset_index().rename(columns={0: 'MaxSpeed'})\n            min_acceleration = acc.min(axis=0).reset_index().rename(columns={0: 'MinAcceleration'})\n            \n            collision_coords = pd.DataFrame([[c, acc[c].argmin()] for c in acc.columns],\n                                            columns=['GSISID', 't'])\n            collision_coords = collision_coords.merge(ngs[['GSISID', 't', 'x', 'y']],\n                                                      how='left', on=['GSISID', 't'])\n            collision_coords['x'] = collision_coords['x'] - 10\n            collision_coords.columns = ['GSISID', 'CollisionTime', 'CollisionX', 'CollisionY']\n\n            stats = pd.merge(max_speed, min_acceleration, on='GSISID')\n            stats = stats.merge(collision_coords, on='GSISID', how='left')\n            stats['PlayKey'] = playkey\n            result.append(stats)\n        except Exception as e:\n            print(e)\n    return pd.concat(result)","60df797c":"player_ngs = collect_ngs_player_stats()\nprint(player_ngs.shape)\nprint(player_ngs.count())\nprint(player_ngs.nunique())\nplayer_ngs.to_csv('player_ngs.csv', index=False)","3d90727c":"def get_video_review():\n    data = pd.read_csv(os.path.join(NFL_DATA_DIR, 'video_review.csv'))\n    data.columns = [col.replace('_', '') for col in data.columns]\n    data['PlayKey'] = data['GameKey'].apply(str) + '_' + data['PlayID'].apply(str)\n\n    footage = pd.read_csv(os.path.join(NFL_DATA_DIR, 'video_footage-injury.csv'))\n    footage['PlayKey'] = footage['gamekey'].apply(str) + '_' + footage['playid'].apply(str)\n\n    footage = footage.rename(columns={'PREVIEW LINK (5000K)': 'VideoLink'})\n    data = data.merge(footage[['PlayKey', 'VideoLink', 'PlayDescription']], how='left', on=['PlayKey'])\n    return data","1f10d43f":"videos = get_video_review()\nfor playkey in videos.PlayKey.values:\n    try:\n        NGS_BY_PLAY[playkey].to_csv(f'ngs_{playkey}.csv', index=False)\n    except Exception as e:\n        print(e)","92823f7c":"end = dt.datetime.now()\nprint('Latest run {}.\\nTotal time {}s'.format(end, (end - start).seconds))","b64c43d7":"# Injury related NGS"}}