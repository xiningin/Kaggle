{"cell_type":{"4072a5c2":"code","81871f45":"code","9b088984":"code","4c38ace6":"code","81b52c70":"code","dadce01c":"code","6c5ee0b9":"code","2550ef17":"code","54f42ad4":"code","d172028d":"code","e3620847":"code","cee5c0eb":"code","80e41346":"code","1e37505d":"code","59a557fb":"code","ef7b37b9":"code","b122e4d1":"code","09057461":"code","f95e9667":"code","98e6f26d":"code","273634db":"code","15178c9b":"code","0916d82a":"code","b335547b":"code","02a21787":"code","bf372ff4":"code","7e694f17":"code","5b18a6d2":"code","51b7f7e6":"code","39a32aeb":"code","500bd330":"code","79faebb3":"code","ad30651b":"code","aeb6a96d":"code","ac5d20a1":"code","cc62fd7d":"code","6e7d5a4f":"code","e65365fd":"code","81a9ec01":"code","71b17525":"code","fd436bac":"code","4700726c":"code","41e7f129":"code","4e88c3fa":"code","ce6d4fd6":"code","0608de82":"code","9f70c9f1":"code","232e8577":"markdown","f4860d91":"markdown","ad4df617":"markdown","4a1b6f75":"markdown","e1ff8cc9":"markdown","97c42640":"markdown","685d219e":"markdown","bb963e42":"markdown","6626d477":"markdown","c078a71d":"markdown","da6adc4c":"markdown","f3d89f04":"markdown"},"source":{"4072a5c2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","81871f45":"housing = pd.read_csv(\"..\/input\/d\/abdallahaboelkhair\/california-housing-prices\/housing2 (1) (1).csv\")","9b088984":"housing","4c38ace6":"housing.info()","81b52c70":"housing.describe()","dadce01c":"housing.isnull().sum()","6c5ee0b9":"plt.figure(figsize=(12,8))\nsns.heatmap(housing.isnull(), cbar = False)\n","2550ef17":"housing.describe(include = \"object\")","54f42ad4":"housing['households'].replace(\"no\", np.nan , inplace=True)","d172028d":"housing[\"households\"] = pd.to_numeric(housing[\"households\"], downcast=\"float\")","e3620847":"housing.info()","cee5c0eb":"housing['ocean_proximity'].value_counts()","80e41346":"plt.figure(figsize=(12,8))\nsns.countplot(data=housing,x='ocean_proximity')\nplt.plot()","1e37505d":"plt.figure(figsize=(16,12))\n\nsns.stripplot(x=\"median_house_value\", y=\"ocean_proximity\", data=housing, jitter=0.2)","59a557fb":"plt.figure(figsize=(12,8))\nsns.countplot(data=housing,x='gender')\nplt.plot()","ef7b37b9":"plt.figure(figsize=(16,12))\n\nsns.stripplot(x=\"median_house_value\", y=\"gender\", data=housing, jitter=0.2)","b122e4d1":"plt.figure(figsize=(16,12))\nsns.scatterplot(data=housing, x=\"housing_median_age\", y=\"median_house_value\",color=\"r\")","09057461":"plt.figure(figsize=(16,12))\nsns.scatterplot(data=housing, x=\"median_house_value\", y=\"total_rooms\",color=\"r\")","f95e9667":"housing.hist(bins=120, figsize=(20,15))\nplt.show();","98e6f26d":"fig = plt.figure(dpi = 100,figsize = (4,4))\nax = fig.add_axes([1,1,1,1])\n\nimport matplotlib.image as mpimg\ncalifornia_img=mpimg.imread(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/1b\/California_Locator_Map.PNG\/280px-California_Locator_Map.PNG\")\nhousing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", figsize=(10,7),ax=ax,\n                       s=housing['population']\/100, label=\"Population\",\n                       c=\"median_house_value\", cmap=plt.get_cmap(\"jet\"),\n                       colorbar=False, alpha=0.4,\n                      )\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05], alpha=0.5,\n           cmap=plt.get_cmap(\"jet\"))\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\n\nprices = housing[\"median_house_value\"]\ntick_values = np.linspace(prices.min(), prices.max(), 11)\ncbar = plt.colorbar()\ncbar.ax.set_yticklabels([\"$%dk\"%(round(v\/1000)) for v in tick_values], fontsize=12)\ncbar.set_label('Median House Value', fontsize=12)\n\nplt.legend(fontsize=12)\nplt.show();","273634db":"plt.figure(figsize=(12,8))\n\nsns.heatmap(housing.corr(), annot=True)","15178c9b":"plt.figure(figsize=(16,12))\nsns.scatterplot(data=housing, x=\"median_income\", y=\"median_house_value\",color=\"g\")","0916d82a":"housing.columns","b335547b":"housing.replace(\"<1H OCEAN\", 0 , inplace = True)\nhousing.replace(\"INLAND\", 1 , inplace = True)\nhousing.replace(\"NEAR OCEAN\", 2 , inplace = True)\nhousing.replace(\"NEAR BAY\", 3 , inplace = True)\nhousing.replace(\"ISLAND\", 4 , inplace = True)","02a21787":"housing.info()","bf372ff4":"housing.drop([\"gender\"] , axis = 1 , inplace = True)","7e694f17":"housing.head()","5b18a6d2":"from sklearn.neighbors import KNeighborsRegressor\n\n# function that imputes a dataframe \ndef impute_knn(data):\n    \n    ''' inputs: pandas df containing feature matrix '''\n    ''' outputs: dataframe with NaN imputed '''\n    # imputation with KNN unsupervised method\n\n    # separate dataframe into numerical\/categorical\n    ldf = data.select_dtypes(include=[np.number])           # select numerical columns in df\n    ldf_putaside = data.select_dtypes(exclude=[np.number])  # select categorical columns in df\n    # define columns w\/ and w\/o missing data\n    cols_nan = ldf.columns[ldf.isna().any()].tolist()         # columns w\/ nan \n    cols_no_nan = ldf.columns.difference(cols_nan).values     # columns w\/o nan \n\n    for col in cols_nan:                \n        imp_test = ldf[ldf[col].isna()]   # indicies which have missing data will become our test set\n        imp_train = ldf.dropna()          # all indicies which which have no missing data \n        model = KNeighborsRegressor(n_neighbors=5)  # KNR Unsupervised Approach\n        knr = model.fit(imp_train[cols_no_nan], imp_train[col])\n        ldf.loc[data[col].isna(), col] = knr.predict(imp_test[cols_no_nan])\n    \n    return pd.concat([ldf,ldf_putaside],axis=1)","51b7f7e6":"# Call function that imputes missing data\nnew_housing = impute_knn(housing)\n# looks like we have a full feature matrix\nnew_housing.info()","39a32aeb":"new_housing.isna().sum()","500bd330":"new_housing.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,3))\nplt.show()","79faebb3":"new_housing.columns","ad30651b":"fig , ax = plt.subplots(figsize=(12,8))\nax.scatter(x= new_housing[\"total_rooms\"],y = new_housing[\"median_house_value\"])\nax.set_xlabel(\"total_rooms\")\nax.set_ylabel(\"median_house_value\")\nplt.show()","aeb6a96d":"fig , ax = plt.subplots(figsize=(12,8))\nax.scatter(x= new_housing[\"median_income\"],y = new_housing[\"median_house_value\"])\nax.set_xlabel(\"median_income\")\nax.set_ylabel(\"median_house_value\")\nplt.show()","ac5d20a1":"fig , ax = plt.subplots(figsize=(12,8))\nax.scatter(x= new_housing[\"households\"],y = new_housing[\"median_house_value\"])\nax.set_xlabel(\"households\")\nax.set_ylabel(\"median_house_value\")\nplt.show()","cc62fd7d":"def zscore_trimming (data, cols, thr):\n    \n    drop_outliers = np.array([])\n    \n    for col in cols:\n        \n        mean = data[col].mean()\n        std = data[col].std()\n                \n        upper_bound = mean + (thr * std)\n        lower_bound = mean - (thr * std)\n        \n        S = data[col]\n        indexes = S[(S > upper_bound) | (S < lower_bound)].index\n        \n        drop_outliers = np.append(drop_outliers, indexes)\n        \n    return drop_outliers","6e7d5a4f":"outliers = np.unique(zscore_trimming(new_housing, new_housing.columns, 3))\nlen(outliers)","e65365fd":"new_housing.drop(outliers, inplace=True)","81a9ec01":"new_housing.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,3))\nplt.show()","71b17525":"new_housing.info()","fd436bac":"X = new_housing.drop(\"median_house_value\" , axis = 1).values\ny = new_housing['median_house_value'].values","4700726c":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size=0.20 , random_state=42)","41e7f129":"from sklearn.preprocessing import StandardScaler\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","4e88c3fa":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train,y_train)","ce6d4fd6":"lr.score(X_train,y_train)","0608de82":"lr.score(X_test,y_test)","9f70c9f1":"import statsmodels.api as sm\nfrom scipy import stats\nX2 = sm.add_constant(X)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nprint(est2.summary())","232e8577":"# California Housing Prices - Linear Regression","f4860d91":"Median_income is more correlation to median_house_value","ad4df617":"# Get the data","4a1b6f75":"# Discover and visualize the data to gain insights.","e1ff8cc9":"# Modeling using linear regression and split data","97c42640":"#### ocean_proximity categories","685d219e":"Drop the gender column","bb963e42":"If you find this useful, Please upvote.","6626d477":"## Missing values imputation using KNN","c078a71d":"## Outliers treatment using Z-score methode","da6adc4c":"# Data Preprocessing","f3d89f04":"Encoder the ocean_proximity "}}