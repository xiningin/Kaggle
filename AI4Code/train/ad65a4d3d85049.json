{"cell_type":{"2dfee88b":"code","bc8b5fc2":"code","c7de6a76":"code","f4b911ec":"code","825e4f7d":"code","03db8c47":"code","03e75580":"code","98095cc6":"code","5e5632bc":"code","62764cc1":"code","35863ba6":"code","d78704fa":"code","8c3bfdc0":"code","95afe4fa":"markdown","d098ed3e":"markdown","d074b170":"markdown","e321352d":"markdown","c9524377":"markdown","db0ded8a":"markdown","e4759b4a":"markdown"},"source":{"2dfee88b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc8b5fc2":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns","c7de6a76":"df=pd.read_csv('..\/input\/seed-from-uci\/Seed_Data.csv')\ndf.head()","f4b911ec":"df.describe()","825e4f7d":"df.shape","03db8c47":"df.info()","03e75580":"sns.pairplot(df)","98095cc6":"correlation_matrix=df.corr()\nsns.heatmap(correlation_matrix,annot=True)","5e5632bc":"features=df.iloc[:,0:7]\ntarget=df.iloc[:,7]","62764cc1":"target[:5]","35863ba6":"features[:5]","d78704fa":"from sklearn.preprocessing import StandardScaler\nscaling=StandardScaler()\nscaled_data=scaling.fit_transform(features)\nfeatures=pd.DataFrame(scaled_data,columns=features.columns)\nfeatures.head()","8c3bfdc0":"x=features['A']\ny=features['P']\nplt.scatter(x,y)\nplt.xlabel('A')\nplt.ylabel('P')\nplt.title('A vs P')","95afe4fa":"## import the library","d098ed3e":"## Analysis the seed data","d074b170":"## Correlation matrix ","e321352d":"## Read the data\nDataset URL: https:\/\/archive.ics.uci.edu\/ml\/datasets\/seeds\n1. area A,\n2. perimeter P,\n3. compactness C = 4*pi*A\/P^2,\n4. length of kernel,\n5. width of kernel,\n6. asymmetry coefficient\n7. length of kernel groove.","c9524377":"## Split the dataset: Features and target","db0ded8a":"## Plot features: A vs P","e4759b4a":"## Scaling the data using StandardScaler"}}