{"cell_type":{"54fcb871":"code","25ce2552":"code","8657c832":"code","750f8ff5":"code","f9bf0a03":"code","93bfe4c2":"code","8d679add":"code","a6ad480a":"code","3df8bbc8":"code","38a31257":"code","e9ee1cf6":"code","afc3053f":"code","91fd20e2":"code","157dd0af":"code","75389619":"code","d7dbf490":"code","d8c469fc":"code","90dd2f42":"code","d1b2dd10":"code","75b55c08":"code","19e6aeef":"code","50a0b68d":"code","ac3dd95e":"code","86d33357":"code","5dd06425":"code","a2db1226":"markdown","a98b54e9":"markdown","f975ebd0":"markdown","4db9aabf":"markdown","0b0a58b6":"markdown","80da5169":"markdown","c7252173":"markdown","92e11569":"markdown","df76a05a":"markdown","4e3b0205":"markdown","57edc242":"markdown","2b881051":"markdown","9b8a9208":"markdown","3e03686f":"markdown","ad7bf4dc":"markdown","e4bd5978":"markdown","ddd3df18":"markdown"},"source":{"54fcb871":"\nimport numpy as np \nimport pandas as pd \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nimport os\n\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\nimport pycountry\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\n!pip install chart_studio\nimport chart_studio.plotly as py\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n#py.init_notebook_mode(connected=True)\n\n#Geographical Plotting\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium import plugins\nfrom folium.plugins import HeatMap, MarkerCluster\n\n#Racing Bar Chart\n!pip install bar_chart_race\nimport bar_chart_race as bcr\nfrom IPython.display import HTML\n\n# Increase the default plot size and set the color scheme\nplt.rcParams['figure.figsize'] = 8, 5\nplt.style.use(\"fivethirtyeight\")# for pretty graphs\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n\n","25ce2552":"df = pd.read_csv('..\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_size.csv')\ndf.head()","8657c832":"df.info()","750f8ff5":"print(df.shape)","f9bf0a03":"df.describe(include='all')","93bfe4c2":"# Covariance\n\nprint('Covariance:')\ndf.cov()","8d679add":"print('Correlation:')\ndf.corr()","a6ad480a":"\n# credit: https:\/\/www.kaggle.com\/willkoehrsen\/start-here-a-gentle-introduction. \n# One of the best notebooks on getting started with a ML problem.\n\ndef missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns","3df8bbc8":"missing= missing_values_table(df)\nmissing","38a31257":"# Handling missing values\n\nfrom sklearn.impute import SimpleImputer\n#setting strategy to 'most frequent' to impute by the mean\nimputer = SimpleImputer(strategy='most_frequent')# strategy can also be mean or median \ndf.iloc[:,:] = imputer.fit_transform(df)","e9ee1cf6":"df.isnull().sum()","afc3053f":"lb = LabelEncoder()\ndf[\"sex\"] = lb.fit_transform(df[\"sex\"])\ndf['sex'][:5]","91fd20e2":"df['species'].value_counts()","157dd0af":"df['species'].value_counts().iplot(kind='bar')","75389619":"df1 = df[['culmen_length_mm', 'culmen_depth_mm','flipper_length_mm']]\nsns.boxplot(data=df1, width=0.5,fliersize=5)","d7dbf490":"sns.pairplot(df, hue=\"species\", size=3,diag_kind=\"hist\")","d8c469fc":"sns.FacetGrid(df, hue=\"species\", size=8) \\\n   .map(plt.scatter, \"culmen_length_mm\", \"culmen_depth_mm\") \\\n   .add_legend()","90dd2f42":"sns.FacetGrid(df, hue=\"species\", size=8) \\\n   .map(plt.scatter, \"culmen_length_mm\", \"flipper_length_mm\") \\\n   .add_legend()","d1b2dd10":"ax = sns.violinplot(x=\"species\", y=\"flipper_length_mm\", data=df,size=8)\n","75b55c08":"sns.FacetGrid(df, hue=\"species\", size=6,) \\\n   .map(sns.kdeplot, \"flipper_length_mm\",shade=True) \\\n   .add_legend()","19e6aeef":"sns.FacetGrid(df, hue=\"species\", size=8) \\\n   .map(plt.scatter, \"body_mass_g\", \"flipper_length_mm\") \\\n   .add_legend()","50a0b68d":"import umap\nreducer = umap.UMAP()","ac3dd95e":"penguin_data = df[\n    [\n        \"culmen_length_mm\",\n        \"culmen_depth_mm\",\n        \"flipper_length_mm\",\n        \"body_mass_g\",\n    ]\n].values\nscaled_penguin_data = StandardScaler().fit_transform(penguin_data)","86d33357":"embedding = reducer.fit_transform(scaled_penguin_data)\nembedding.shape","5dd06425":"plt.scatter(\n    embedding[:, 0],\n    embedding[:, 1],\n    c=[sns.color_palette()[x] for x in df.species.map({\"Adelie\":0, \"Chinstrap\":1, \"Gentoo\":2})])\nplt.gca().set_aspect('equal', 'datalim')\nplt.title('UMAP projection of the Penguin dataset', fontsize=24)","a2db1226":"## culmen_depth vs flipperlength\n","a98b54e9":"# Analysing the data visually\n\n## Number of Species","f975ebd0":"# Flipperlength distribution","4db9aabf":"# Scatterplot\nThe scatter plot which shows us the correlation with respect to other features. This method helps just to figure out the important features which account the most for the classification in our model.","0b0a58b6":"## Flipper length vs. body mass\n","80da5169":"## culmen_depth vs culmen_length","c7252173":"## KDEPlot","92e11569":"# UMAP\n\nTo use UMAP for this task we need to first construct a UMAP object that will do the job for us","df76a05a":"# Understanding the data\n\n","4e3b0205":"## Convert sex column to integer values","57edc242":"## Missing values","2b881051":"Unlike, Iris dataset which has equal number of all the species of flowers(50 each), the penguins dataset has different number of samples for each species.","9b8a9208":"![](https:\/\/imgur.com\/orZWHly.png)\n\nsource: @allison_horst https:\/\/github.com\/allisonhorst\/penguins\n\nThe Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by the British statistician and biologist Ronald Fisher in his 1936 paper The use of multiple measurements in taxonomic problems as an example of linear discriminant analysis[[source:WIkipedia](https:\/\/en.wikipedia.org\/wiki\/Iris_flower_data_set)]\n\nPalmer Archipelago (Antarctica) penguin dataset appears to be a drop in replacemnt for the same. It is a great intro dataset for data exploration & visualization. Let's import the dataset and explore it to understand it better.","3e03686f":"## Covariance & Correlation\n\n\u201cCovariance\u201d indicates the direction of the linear relationship between variables. \u201cCorrelation\u201d on the other hand measures both the strength and direction of the linear relationship between two variables. \nSource: https:\/\/tinyurl.com\/yd2pezss","ad7bf4dc":"The dataset consists of 7 columns. \n\n* **species**: penguin species (Chinstrap, Ad\u00e9lie, or Gentoo)\n* **culmen_length_mm**: culmen length (mm)\n* **culmen_depth_mm**: culmen depth (mm)\n* **flipper_length_mm**: flipper length (mm)\n* **body_mass_g**: body mass (g)\n* **island**: island name (Dream, Torgersen, or Biscoe) in the Palmer Archipelago (Antarctica)\n* **sex**: penguin sex\n\n## What are culmen length & depth?\nThe culmen is \"the upper ridge of a bird's beak\" \n\n![](https:\/\/github.com\/allisonhorst\/penguins\/raw\/master\/figures\/culmen_depth.png)\n\n\n## What are flippers?\nPenguins wings are called flippers. They are flat, thin, and broad with a long, tapered shape and a blunt, rounded tip\n\n![121265929-diagram-showing-body-part-of-penguin.jpg](attachment:121265929-diagram-showing-body-part-of-penguin.jpg)","e4bd5978":"# Reading in the dataset","ddd3df18":"# Boxplot\n\nThe box plot of the dataset,will show us the visual representation of how our data is scattered over the the plane"}}