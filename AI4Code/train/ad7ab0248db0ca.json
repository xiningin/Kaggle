{"cell_type":{"4966eb6a":"code","6212a884":"code","8183d923":"code","28e67efa":"code","eef82319":"code","49fe8dad":"code","2b74c3ec":"code","4b89a499":"code","fd8ae4f0":"code","d15bd8fb":"code","17f3cf3a":"code","6ae66532":"code","e2cd5c7c":"code","c8dd11ce":"code","74029bb2":"code","a85e14f8":"code","ad30c5bb":"code","d2428167":"code","3cc364f7":"markdown","87d30aac":"markdown","8930f038":"markdown"},"source":{"4966eb6a":"# Data Cleaning Libraries\nimport numpy as np\nimport pandas as pd","6212a884":"# Data Visulation Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly as py\nimport plotly.graph_objs as go\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()\n%matplotlib inline","8183d923":"# Data Prediction Libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import confusion_matrix, classification_report","28e67efa":"# Data set (Amazon Musical Instruents Review)\nAMIR = pd.read_csv('\/kaggle\/input\/amazon-music-reviews\/Musical_instruments_reviews.csv')","eef82319":"# AMIR dataset info.\nAMIR.info()     # Eagle Eye View","49fe8dad":"# Dropping null rows\nAMIR = AMIR.dropna()\nAMIR.info()","2b74c3ec":"# AMIR Dataset\nAMIR.head()","4b89a499":"# Length of words in each message of review text column\nAMIR['Length of Words'] = AMIR['reviewText'].apply(lambda x : len(x.split()))\nAMIR.rename(columns={'overall':'rating'},inplace=True)  # renaming 'overall' column with 'rating' \nAMIR.head(4)","fd8ae4f0":"# Total Number of Users who rated the product as per rating category\nAMIR.groupby(by='rating').helpful.count()","d15bd8fb":"# Overall Rating with respect to Length of words in reviewtext messages\ng = sns.FacetGrid(AMIR,col='rating',sharex=True)\ng.map(sns.kdeplot,'Length of Words',color='red')","17f3cf3a":"# Total number of people that rated the products as per rating category\ngo.Figure(data=[go.Pie(values=AMIR.groupby(by='rating').helpful.count(),labels=[1,2,3,4,5],\n                       title='Volume received by each rating category.')])","6ae66532":"# Predicting whether the reviewText message is positive or negative\n# Considering Rating '1,2,3' as 'Negative Review' \n# Considering Rating '4,5' as 'Positive Review'\n\nreview = {1:'Negative',2:'Negative',3:'Negative',4:'Positive',5:'Positive'}\nAMIR['review'] = AMIR['rating'].map(review)\nAMIR[['reviewText','rating','review']].head()","e2cd5c7c":"# Selecting Features & Labels\nX = AMIR['reviewText']        # features\ny = AMIR['review']            # labels","c8dd11ce":"# Splitting data into Training Data & Test Data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","74029bb2":"# Pipeline \npipeline = Pipeline([\n    ('Count Vectorizer',CountVectorizer()),\n    ('Model',MultinomialNB())\n])","a85e14f8":"# Training Data\npipeline.fit(X_train,y_train)","ad30c5bb":"# Model Prediction\ny_pred = pipeline.predict(X_test)","d2428167":"# Model Evaluation\nprint(confusion_matrix(y_test,y_pred))\nprint('\\n')\nprint(classification_report(y_test,y_pred))","3cc364f7":"# **Data Prediction**\n# **Predicting whether the review text is Positive or Negative**","87d30aac":"# **Data Visulation**","8930f038":" # **Set up**"}}