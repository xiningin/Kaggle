{"cell_type":{"42b0f192":"code","ef621a77":"code","fa166c2b":"code","4d434f25":"code","3062d36f":"code","a61f5315":"code","32d1f327":"code","f9719786":"code","656b4f52":"code","32ae9220":"code","c53a6f50":"code","e4418863":"code","d06e7c22":"code","92b0f315":"code","96e15bcd":"code","7e9fbec7":"code","0699edfc":"code","e736b5d7":"code","e83f1247":"code","a588a91c":"code","5b37c3b7":"code","477d4a8e":"code","94e68184":"code","2d5eba18":"code","4e3e3322":"code","0dcc1d94":"code","9083a299":"code","ebe42957":"code","da99be52":"code","c65322d7":"code","ee5adbf7":"code","cf62104a":"code","3be0a682":"code","6c3615c5":"code","5ea2fc02":"code","6531a6fe":"markdown","4b1be72d":"markdown","3b93bb4d":"markdown","c4ab6a4b":"markdown","e10eb3df":"markdown","99dda403":"markdown","dc9ab9d1":"markdown","35c88b78":"markdown","2b9fa75f":"markdown","6bee510a":"markdown","7c803548":"markdown","d9e0a741":"markdown","3bce8801":"markdown","753ea736":"markdown","1cac7ed9":"markdown","c7a8e8ff":"markdown","39f9ec0d":"markdown","88834c8d":"markdown","bcef5122":"markdown","c5f9310e":"markdown"},"source":{"42b0f192":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ef621a77":"import pandas as pd\n\n#  PassengerId\ub97c index\ub85c \uc9c0\uc815.\ntrain = pd.read_csv(\"..\/input\/taitanic\/train.csv\", index_col=\"PassengerId\")\n\n# train \ubcc0\uc218\uc5d0 \ud560\ub2f9\ub41c \ub370\uc774\ud130\uc758 \ud589\ub82c \uc0ac\uc774\uc988\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4.\n# \ucd9c\ub825\uc740 (row, column) \uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4.\nprint(train.shape)\n\n# head()\ub85c train \ub370\uc774\ud130\uc758 \uc0c1\uc704 5\uac1c\ub97c \ub744\uc6c1\ub2c8\ub2e4.\ntrain.head()","fa166c2b":"test = pd.read_csv(\"..\/input\/taitanic\/test.csv\", index_col=\"PassengerId\")\n\nprint(test.shape)\ntest.head()","4d434f25":"# matplotlib & seaborn : \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ud328\ud0a4\uc9c0\n# matplotlib\ub85c \uc2e4\ud589\ud558\ub294 \ubaa8\ub4e0 \uc2dc\uac01\ud654\ub97c \uc790\ub3d9\uc73c\ub85c \uc96c\ud53c\ud130 \ub178\ud2b8\ubd81\uc5d0 \ub744\uc6c1\ub2c8\ub2e4.\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","3062d36f":"# countplot\nsns.countplot(data=train, x=\"Sex\", hue=\"Survived\")","a61f5315":"# pivot_table\npd.pivot_table(train, index=\"Sex\", values=\"Survived\")","32d1f327":"# \uac1d\uc2e4\ub4f1\uae09\nsns.countplot(data=train, x=\"Pclass\", hue=\"Survived\")","f9719786":"# pivot_table\npd.pivot_table(train, index=\"Pclass\", values=\"Survived\")","656b4f52":"sns.countplot(data=train, x=\"Embarked\", hue=\"Survived\")","32ae9220":"pd.pivot_table(train, index=\"Embarked\", values=\"Survived\")","c53a6f50":"sns.lmplot(data=train, x=\"Age\", y=\"Fare\", hue=\"Survived\", fit_reg=False) #\ud68c\uadc0\uc120 false","e4418863":"# \uc6b4\uc784\uc694\uae08(Fare)\uc774 500\ub2ec\ub7ec \ubbf8\ub9cc\uc778 \ub370\uc774\ud130\ub9cc \uac00\uc838\uc624\uc790.\n# \uc774\ub97c low_fare\ub77c\ub294 \ubcc0\uc218\uc5d0 \ud560\ub2f9.\nlow_fare = train[train[\"Fare\"] < 500]\n\n\n# $500\ub2ec\ub7ec \uc774\uc0c1\uc744 \uc9c0\ubd88\ud55c \uc138 \uba85\uc758 \uc2b9\uac1d\uc774 \uc81c\uac70\ub40c.\ntrain.shape, low_fare.shape","d06e7c22":"# data\ub97c low_fare\ub85c \ubc14\uafd4\uc8fc\uc790\nsns.lmplot(data=low_fare, x=\"Age\", y=\"Fare\", hue=\"Survived\", fit_reg=False)","92b0f315":"# Sex_encode\ub77c\ub294 \uceec\ub7fc\uc744 \ub530\ub85c \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc11c \uc791\uc5c5\ud558\uc790(\uc0ac\ubcf8)\ntrain.loc[train[\"Sex\"] == \"male\", \"Sex_encode\"] = 0\ntrain.loc[train[\"Sex\"] == \"female\", \"Sex_encode\"] = 1\n\n\nprint(train.shape)\ntrain[[\"Sex\", \"Sex_encode\"]].head()","96e15bcd":"# Sex_encode\ub77c\ub294 \uceec\ub7fc\uc744 \ub530\ub85c \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc11c \uc791\uc5c5\ud558\uc790(\uc0ac\ubcf8)\ntest.loc[test[\"Sex\"] == \"male\", \"Sex_encode\"] = 0\ntest.loc[test[\"Sex\"] == \"female\", \"Sex_encode\"] = 1\n\n\nprint(test.shape)\ntest[[\"Sex\", \"Sex_encode\"]].head()","7e9fbec7":"train[train[\"Fare\"].isnull()]\n#\ube48\uac12 \uc5c6\uc74c","0699edfc":"test[test['Fare'].isnull()]\n# \ube48 \uac12\uc744 \uc694\uae08\uc758 \ud3c9\uade0\uac12\uc73c\ub85c \ucc44\uc6b0\ub294 \uac83\uc774 \uc77c\ubc18\uc801(train['Fare'].mean())\n# \ube48 \uac12\uc774 \ud558\ub098\ubfd0\uc774\ub2c8 0\uc744 \ub123\uc790","e736b5d7":"# \uc0ac\ubcf8\uc744 \ub9cc\ub4e4\uc5b4\uc11c \uc800\uc7a5\ntrain[\"Fare_fillin\"] = train[\"Fare\"]\n\nprint(train.shape)\ntrain[[\"Fare\", \"Fare_fillin\"]].head()","e83f1247":"\ntest[\"Fare_fillin\"] = test[\"Fare\"]\n\nprint(test.shape)\ntest[[\"Fare\", \"Fare_fillin\"]].head()","a588a91c":"test.loc[test['Fare'].isnull(), 'Fare_fillin']=0\n\ntest.loc[test['Fare'].isnull(), ['Fare','Fare_fillin']] # Fare\uac00 NaN\uc778 loc\ub97c \ucc3e\uc544\uc11c, Fare\uc640 Fare_filin\uce7c\ub7fc\ub9cc \ubcf4\uc5ec\ub2ec\ub77c","5b37c3b7":"test.loc[test['Fare'].isnull()]","477d4a8e":"train[\"Embarked_C\"] = train[\"Embarked\"] == \"C\"\ntrain[\"Embarked_S\"] = train[\"Embarked\"] == \"S\"\ntrain[\"Embarked_Q\"] = train[\"Embarked\"] == \"Q\"\n\n\nprint(train.shape)\ntrain[[\"Embarked\", \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\"]].head()","94e68184":"test[\"Embarked_C\"] = test[\"Embarked\"] == \"C\"\ntest[\"Embarked_S\"] = test[\"Embarked\"] == \"S\"\ntest[\"Embarked_Q\"] = test[\"Embarked\"] == \"Q\"\n\n\nprint(test.shape)\ntest[[\"Embarked\", \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\"]].head()","2d5eba18":"feature_names = [\"Pclass\", \"Sex_encode\", \"Fare_fillin\",\n                 \"Embarked_C\", \"Embarked_S\", \"Embarked_Q\"]\nfeature_names","4e3e3322":"label_name = \"Survived\"\nlabel_name","0dcc1d94":"X_train = train[feature_names]\nX_train.head()","9083a299":"X_test = test[feature_names]\nX_test.head()","ebe42957":"y_train = train[label_name]\ny_train.head()\n\n# \uc0b4\uc544\ub0a8\uc558\uc73c\uba74 1, \uc544\ub2c8\uba74 0","da99be52":"from sklearn.tree import DecisionTreeClassifier\n\n# depth\uc758 \uae4a\uc774\ub97c 5\ub85c \uc124\uc815\nmodel = DecisionTreeClassifier(max_depth=5)\nmodel\n","c65322d7":"# Fit : \ubaa8\ub378\uc744 train \ub370\uc774\ud130\ub85c \ud559\uc2b5\uc2dc\ud0a4\uae30 \nmodel.fit(X_train, y_train)","ee5adbf7":"import graphviz\nfrom sklearn.tree import export_graphviz\n\n# class_names. \uc0b4\uc558\uc744 \uacbd\uc6b0 \uc2dc\uac01\ud654\uc5d0\uc11c \uc5b4\ub5bb\uac8c \ud45c\ud604\ud560 \uac83\uc778\uc9c0(Survived)\n# out_file. \uacb0\uacfc\ub97c \uc800\uc7a5\ud560 \ud30c\uc77c\uba85. \uc9c0\uae08\uc740 \ubc14\ub85c \ubcf4\uc5ec\uc904 \uac83\uc774\ub77c \uc800\uc7a5 \uc548\ud568\ndot_tree = export_graphviz(model,\n                           feature_names=feature_names,\n                           class_names=[\"Perish\", \"Survived\"],\n                           out_file=None)\n\n#graphviz\uc758 Source\uae30\ub2a5\uc744 \ud1b5\ud574 Decision Tree \uc2dc\uac01\ud654\ngraphviz.Source(dot_tree)","cf62104a":"# Fit\uc744 \ub9c8\uce5c\ub4a4 predict\uae30\ub2a5\uc73c\ub85c \uc0dd\uc874 \uc608\uce21\nprediction = model.predict(X_test)\n\nprediction[0:10]","3be0a682":"submission = pd.read_csv(\"..\/input\/gender-submission\/gender_submission.csv\", index_col='PassengerId')\n\nsubmission.head()","6c3615c5":"submission[\"Survived\"] = prediction","5ea2fc02":"# Csv\ud30c\uc77c\ub85c \uc800\uc7a5\nsubmission.to_csv(\".\/2020_03_04_decision-tree_0.78947.csv\")","6531a6fe":"\uc0dd\uc874\uc728 : Female > Male ","4b1be72d":"## Age&Fare\n*      \uc0c1\uad00\uad00\uacc4 \ubd84\uc11d lmplot","3b93bb4d":"## Preprocessing\n    - \uc804\ucc98\ub9ac\n    - \ub370\uc774\ud130\ub97c \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc774 \uc774\ud574\ud560 \uc218 \uc788\ub294 \ud615\ud0dc\ub85c \ubc14\uafb8\ub294 \uac83\n    - \ubaa8\ub4e0 \ub370\uc774\ud130\ub294 \uc22b\uc790\uc5ec\uc57c \ud568\n    - \ub370\uc774\ud130\uc5d0 \ube48 \uac12\uc774 \uc5c6\uc5b4\uc57c \ud568","c4ab6a4b":"scikit-learn\uc5d0\ub294 NaN\uc774 \uc788\uc5b4\uc120 \uc548\ub40c.\ntest\uc758 NaN\uac12\uc744 \ucc44\uc6cc\uc8fc\uc790","e10eb3df":"\uc624\ub80c\uc9c0 \uc810(1)\uc774 \ubab0\ub824 \uc788\ub294\uacf3\uc774 \uc0dd\uc874\uc790\uac00 \ub9ce\uc740 \uc9c0\uc810\n\n\ub3d9\ub5a8\uc5b4\uc838 \uc788\ub294 outlier\ub4e4\uc744 \uc81c\uac70\ud574\ubcf4\uc790.","99dda403":"1\ub4f1\uae09: \uc0dd\uc874\uc790 \uc218\uac00 \uc0ac\ub9dd\uc790 \uc218\ubcf4\ub2e4 \ub354 \ub9ce\ub2e4.\n\n3\ub4f1\uae09: \uc0ac\ub9dd\uc790 \uc218\uac00 \uc0dd\uc874\uc790\uc218\ubcf4\ub2e4 \uc555\ub3c4\uc801\uc73c\ub85c \ub192\ub2e4.","dc9ab9d1":"## Sex","35c88b78":"### One Hot Encoding\n\nC == [True, False, False] \n\nS == [False, True, False] \n\nQ == [False, False, True] ","2b9fa75f":"### Visualize - Graphviz \ud234","6bee510a":"### Predict\n\nmodel.predict\ub85c \uc608\uce21.","7c803548":"## Embarked","d9e0a741":"## Pclass","3bce8801":"### SCikit-Learn\n\nFit : Tran\uc758 Feature\uc640 Label\uc774 \ud544\uc694\ud558\ub2e4.\n\nPredict : Fit\uc774 \ub05d\ub098\uba74 Predict\uac00\ub2a5. Test\uc758 Feature\uac12\uc774 \ud544\uc694\ud558\ub2e4.","753ea736":"\uce90\uae00 \uc81c\ucd9c \ud615\ud0dc\ub85c \uc800\uc7a5\n\n\uce90\uae00\uc774 \uc81c\uacf5\ud558\ub294 \uc81c\ucd9c \ud3ec\ub9f7\uc744 \uc774\uc6a9 (gender_submission.csv)","1cac7ed9":"S\uc5d0\uc11c \ud0d1\uc2b9\ud55c \uc2b9\uac1d\uc774 \uac00\uc7a5 \ub9ce\uace0 \uac00\uc7a5 \ub9ce\uc774 \uc8fd\uc5c8\ub2e4.\n\nC\uc5d0\uc11c \ud0d1\uc2b9\ud55c \uc2b9\uac1d\uc740 \uc0dd\uc874\uc728\uc774 \uac00\uc7a5 \ub192\ub2e4.\n","c7a8e8ff":"## Train - Decision Tree\n\n* Label: \ub9de\ucdb0\uc57c \ud558\ub294 \uc815\ub2f5 (Survived)\n* Feature: Label\uc744 \ub9de\ucd94\ub294\ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uac12\ub4e4\n\n-\n\n* Label : Survived\n* Feature: Pclass, Sex_encode, Fare_fillin, Embarked\n    - X_train : train\uc758 Feature\n    - Y_train : train\uc758 Label\n    - X_test : test\uc758 Feature\n    - Y_test : \uc774\uc81c \uad6c\ud574\uc57c \ud558\ub294 \uac12\n    ","39f9ec0d":"\ud0c0\uc774\ud0c0\ub2c9\uacfc \uc720\uc0ac\ud55c\ud574\uc0c1 \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud588\uc744 \uc2dc \uc5b4\ub5a4 \uc2b9\uac1d\uc774 \uc0dd\uc874\ud558\uba70, \uc5b4\ub5a4 \uc2b9\uac1d\uc774 \uc0ac\ub9dd\ud558\ub294\uc9c0\ub97c \uc608\uce21\ud558\ub294 \uc608\uce21 \ubaa8\ub378 \uac1c\ubc1c.\n\n- Survival\u200a-\u200a0\uc774\uba74 \uc0ac\ub9dd, 1\uc774\uba74 \uc0dd\uc874.\n- Pclass\u200a-\u200a\ud2f0\ucf13 \ub4f1\uae09. 1\ub4f1\uc11d(1), 2\ub4f1\uc11d(2), 3\ub4f1\uc11d(3)\n- Sex\u200a-\u200a\uc131\ubcc4. \ub0a8\uc790(male)\uc640 \uc5ec\uc790(female).\n- Age\u200a-\u200a\ub098\uc774\uc785\ub2c8\ub2e4. \ud2c8\ud2c8\ud788 \ube48 \uac12\uc774 \uc874\uc7ac\ud558\uba70, \uc18c\uc218\uc810 \uac12\ub3c4 \uc874\uc7ac\ud569\ub2c8\ub2e4.\n- SibSp\u200a-\u200a\ud574\ub2f9 \uc2b9\uac1d\uacfc \uac19\uc774 \ud0d1\uc2b9\ud55c \ud615\uc7ac\/\uc790\ub9e4(siblings)\uc640 \ubc30\uc6b0\uc790(spouses)\uc758 \ucd1d \uc778\uc6d0 \uc218.\n- Parch\u200a-\u200a\ud574\ub2f9 \uc2b9\uac1d\uacfc \uac19\uc774 \ud0d1\uc2b9\ud55c \ubd80\ubaa8(parents)\uc640 \uc790\uc2dd(children)\uc758 \ucd1d \uc778\uc6d0 \uc218.\n- Ticket\u200a-\u200a\ud2f0\ucf13 \ubc88\ud638.\u00a0\n- Fare\u200a-\u200a\uc6b4\uc784 \uc694\uae08\uc785\ub2c8\ub2e4. \uc18c\uc218\uc810\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n- Cabin\u200a-\u200a\uac1d\uc2e4 \ubc88\ud638\uc785\ub2c8\ub2e4. \ub9ce\uc740 \ube48 \uac12\uc774 \uc874\uc7ac\ud558\uba70, \ub2e4\uc591\ud55c \ud14d\uc2a4\ud2b8(\ubb38\uc790\uc5f4)\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n- Embarked\u200a-\u200a\uc120\ucc29\uc7a5\uc785\ub2c8\ub2e4. C\ub294 \uc170\ub974\ubd80\ub974(Cherbourg)\ub77c\ub294 \ud504\ub791\uc2a4 \uc9c0\uc5ed, Q\ub294 \ud038\uc2a4\ud0c0\uc6b4(Queenstown)\uc774\ub77c\ub294 \uc601\uad6d \uc9c0\uc5ed, S\ub294 \uc0ac\uc6b0\uc2a4\ud584\ud2bc(Southampton).\n\n","88834c8d":"## Encode Sex\n\nEncoding\n\nMale -> 0\n\nFemale -> 1","bcef5122":"## Fare(\uc6b4\uc784)\uc758 Nan\uac12 \ucc44\uc6cc\ub123\uae30","c5f9310e":"## Encode Embarked\n\n- C==0\n- S==1\n- Q==2\n        \uc73c\ub85c \uc778\ucf54\ub529\uc744 \ud574\uc8fc\uba74 \ub420\uae4c? \uc544\ub2c8, \uadf8\ub7ec\uba74 C+S\uac00 \uac00\ub2a5\ud558\ub2e4\ub294 \ub73b.\n     \n### One Hot Encoding     \n- C==[1,0,0]\n- S==[0,1,0]\n- Q==[0,0,1]\n"}}