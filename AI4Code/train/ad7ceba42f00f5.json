{"cell_type":{"ff64a58d":"code","8e60138e":"code","c1150da7":"code","cdeda0e7":"code","c96bc482":"code","bd465a25":"code","2c96fedf":"code","584576c3":"code","a7e30467":"code","515da652":"code","5e382b2e":"code","cef6c52b":"code","56f662be":"code","391897bc":"code","72ea6601":"code","627cf890":"code","7c6fb709":"code","38f7d6b1":"markdown","e61bd8ab":"markdown","993597ea":"markdown","a5695560":"markdown","645b0537":"markdown","7ed86b2b":"markdown","434e1a61":"markdown"},"source":{"ff64a58d":"import numpy as np \nimport pandas as pd \nimport re\nimport nltk \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","8e60138e":"data_source_url = \"https:\/\/raw.githubusercontent.com\/kolaveridi\/kaggle-Twitter-US-Airline-Sentiment-\/master\/Tweets.csv\"\nairline_tweets = pd.read_csv(data_source_url)","c1150da7":"airline_tweets.head()","cdeda0e7":"plot_size = plt.rcParams[\"figure.figsize\"] \nprint(plot_size[0]) \nprint(plot_size[1])\n\nplot_size[0] = 8\nplot_size[1] = 6\nplt.rcParams[\"figure.figsize\"] = plot_size ","c96bc482":"airline_tweets.airline.value_counts().plot(kind='pie', autopct='%1.0f%%')\n","bd465a25":"airline_tweets.airline_sentiment.value_counts().plot(kind='pie', autopct='%1.0f%%', colors=[\"red\", \"yellow\", \"green\"])","2c96fedf":"sns.barplot(x='airline_sentiment', y='airline_sentiment_confidence' , data=airline_tweets)","584576c3":"features = airline_tweets.iloc[:, 10].values\nlabels = airline_tweets.iloc[:, 1].values","a7e30467":"features","515da652":"processed_features = []\n\nfor sentence in range(0, len(features)):\n    # Remove all the special characters\n    processed_feature = re.sub(r'\\W', ' ', str(features[sentence]))\n\n    # remove all single characters\n    processed_feature= re.sub(r'\\s+[a-zA-Z]\\s+', ' ', processed_feature)\n\n    # Remove single characters from the start\n    processed_feature = re.sub(r'\\^[a-zA-Z]\\s+', ' ', processed_feature) \n\n    # Substituting multiple spaces with single space\n    processed_feature = re.sub(r'\\s+', ' ', processed_feature, flags=re.I)\n\n    # Removing prefixed 'b'\n    processed_feature = re.sub(r'^b\\s+', '', processed_feature)\n\n    # Converting to Lowercase\n    processed_feature = processed_feature.lower()\n\n    processed_features.append(processed_feature)","5e382b2e":"from nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\nvectorizer = TfidfVectorizer (max_features=2500, min_df=7, max_df=0.8, stop_words=stopwords.words('english'))\nprocessed_features = vectorizer.fit_transform(processed_features).toarray()","cef6c52b":"vectorizer.vocabulary_","56f662be":"processed_features.shape","391897bc":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(processed_features, labels, test_size=0.2, random_state=0)","72ea6601":"from sklearn.ensemble import RandomForestClassifier\n\ntext_classifier = RandomForestClassifier(n_estimators=200, random_state=0)\ntext_classifier.fit(X_train, y_train)","627cf890":"predictions = text_classifier.predict(X_test)                                                                         ","7c6fb709":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\nprint(confusion_matrix(y_test,predictions))\nprint(classification_report(y_test,predictions))\nprint(accuracy_score(y_test, predictions))","38f7d6b1":"To find the values for these metrics, we can use classification_report, confusion_matrix, and accuracy_score utilities from the sklearn.metrics library","e61bd8ab":"## Making Predictions and Evaluating the Model\n","993597ea":"### TF-IDF using the Scikit-Learn Library\n","a5695560":"## Data Cleaning","645b0537":"The sklearn.ensemble module contains the RandomForestClassifier class that can be used to train the machine learning model using the random forest algorithm.","7ed86b2b":"## Training the Model\n","434e1a61":"### Dividing Data into Training and Test Sets\n"}}