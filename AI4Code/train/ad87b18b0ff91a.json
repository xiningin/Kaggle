{"cell_type":{"6d6754b8":"code","f0fca5e2":"code","8306e594":"code","5b1a0b97":"code","9b3655c8":"code","1017ef44":"code","d62ae4fc":"code","75f9668b":"code","b69f255e":"code","cd706aa5":"code","2f432664":"code","0fbc1f06":"code","b0109710":"code","f9ebc112":"code","04d80e68":"code","455f7b34":"code","78e91eba":"markdown"},"source":{"6d6754b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f0fca5e2":"# Importa\u00e7\u00e3o de Pacotes\n\nimport pandas as pd \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score","8306e594":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","5b1a0b97":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","9b3655c8":"train.drop(['Name','Ticket','Cabin'],axis=1, inplace=True)\ntrain.head()\n","1017ef44":"test.drop(['Name','Ticket','Cabin'],axis=1, inplace=True)\ntest.head()","d62ae4fc":"# Convertendo as vari\u00e1veis categ\u00f3rica em vari\u00e1veis indicadoras (get_dummies)\n# TRAIN \n\ntrain=pd.get_dummies(train)\ntrain.head()","75f9668b":"# Convertendo as vari\u00e1veis categ\u00f3rica em vari\u00e1veis indicadoras (get_dummies)\n# TEST\n\ntest = pd.get_dummies(test)\ntest.head()","b69f255e":"#Verificando os valores ausentes \n#TRAIN\nprint (\"TRAIN\")\nprint(train.isnull().sum().sort_values(ascending=False))\n\nprint (\"\\n\\n\")\n\n#TEST\nprint (\"TEST\")\nprint(test.isnull().sum().sort_values(ascending=False))","cd706aa5":"#Preencha os valores de NA \/ NaN\n#TRAIN\ntrain[\"Age\"].fillna(train['Age'].mean(),inplace=True)\n\n#TEST\ntest['Age'].fillna(test['Age'].mean(),inplace=True)\ntest['Fare'].fillna(test['Fare'].mean(),inplace=True)\n","2f432664":"#Verificando os valores ausentes \n#TRAIN\nprint (\"TRAIN\")\nprint(train.isnull().sum().sort_values(ascending=False))\n\nprint (\"\\n\\n\")\n\n#TEST\nprint (\"TEST\")\nprint(test.isnull().sum().sort_values(ascending=False))","0fbc1f06":"X = train.drop('Survived',axis=1)\ny = train['Survived']","b0109710":"tree = DecisionTreeClassifier(max_depth=3,random_state=0)\ntree.fit(X,y)\ntree.score(X,y)\nscore_tree = cross_val_score(tree, X, y, cv=5).mean()\nprint(score_tree)\n","f9ebc112":"submit = pd.DataFrame()\nsubmit['PassengerId']= test['PassengerId']\nsubmit['Survived']=tree.predict(test)\n\n\nsubmit.to_csv(\"..\/working\/submit.csv\", index=False)","04d80e68":"submit.head(10)","455f7b34":"submit.shape","78e91eba":"#  UFRN\n## Disicplina: Ci\u00eancia de Dados (DCA-0131)\n\nProf. Luiz Affonso Guedes\n\n\nDiscente: Bruna R\u00eago de Moura\n\nEngenharia de Computa\u00e7\u00e3o - UFRN\n2019-2"}}