{"cell_type":{"43df3136":"code","db5dec71":"code","811cba3e":"code","7a6ad29d":"code","bee0ca24":"code","f1424e4c":"code","5a2b7eae":"code","7c6501d2":"code","b2229b13":"code","c9690d6c":"code","532f194d":"code","97147fe0":"code","7f6a7084":"code","01da7692":"code","103a4ee2":"code","d3d19aaa":"code","83c73cb9":"code","09996586":"code","2008571a":"code","daee85de":"code","26fbe54a":"code","7ffa0b52":"code","a8d2ed1e":"code","53ad0afb":"code","e0d08a2a":"code","d8fe6c36":"code","aeecc4a1":"code","65a074ca":"code","2b7dfc85":"code","008597d2":"code","bd4607e2":"code","eaaf568c":"code","c309aced":"code","d173b1dd":"code","bb92970f":"code","96a28245":"code","e06feca4":"code","d5877f41":"code","ca82d63a":"code","22c31704":"code","4f2564c3":"code","82fd9ddd":"markdown","390feefe":"markdown","d90c0cb0":"markdown","0bdd2f6f":"markdown","63032319":"markdown","eca392e9":"markdown","f7f6e6ce":"markdown","c250d8ad":"markdown","1989aff5":"markdown","6f28cc97":"markdown","4fefa05c":"markdown","bdc5abf8":"markdown","49c38f69":"markdown","442c4906":"markdown","66da75f5":"markdown","115c7ff7":"markdown","e1d4796e":"markdown","1274064a":"markdown","be560a14":"markdown","7640e9c4":"markdown","4d01ea1c":"markdown","f024d6b3":"markdown","73f0e230":"markdown","23250337":"markdown","0afbab49":"markdown","4b107e3a":"markdown","bedf5ceb":"markdown","f09c3ae9":"markdown","18beccd3":"markdown","382a050c":"markdown","1c456b59":"markdown","347f232b":"markdown","4b5f0839":"markdown","99e708b7":"markdown","a8ba066a":"markdown","54fc2407":"markdown","749f9736":"markdown","1d686793":"markdown"},"source":{"43df3136":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")        \nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick\nimport matplotlib.gridspec as grid_spec\nimport seaborn as sns\nimport squarify\n\n!pip install pywaffle","db5dec71":"#get data\ndf = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\ndf2 = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv')\npop = pd.read_csv('\/kaggle\/input\/population-by-country-2020\/population_by_country_2020.csv')\n\nsafety = df.copy()\n\n# renaming columns for easier merge later\ndf.rename(columns={'Country name': 'Country'}, inplace=True)\ndf2.rename(columns={'Country name': 'Country'}, inplace=True)\npop.rename(columns={'Country (or dependency)': 'Country'}, inplace=True)\n\n#might use later \ntemporal = df2.groupby(['year','Country'])['Life Ladder'].mean().unstack().T\ntemporal = temporal.fillna(0).astype(int)","811cba3e":"# colours\nlow_c = '#dd4124'\nhigh_c = '#009473'\nplt.rcParams[\"font.family\"] = \"monospace\"","7a6ad29d":"# inspiration ; https:\/\/www.kaggle.com\/gaetanlopez\/how-to-make-clean-visualizations\n# changed code signif.\n\nfig = plt.figure(figsize=(6,3),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.2, hspace=0.4)\nax0 = fig.add_subplot(gs[0, 0])\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \n\nax0.text(1.167,0.85,\"2021 World Happiness Index\",color='#323232',fontsize=28, fontweight='bold', fontfamily='sanserif',ha='center')\nax0.text(1.13,-0.35,\"stand-out facts\",color='lightgray',fontsize=28, fontweight='bold', fontfamily='monospace',ha='center')\n\nax0.text(0,0.4,\"Finland\",color=high_c,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(0,0.1,\"Happiest\",color='gray',fontsize=15, fontfamily='monospace',ha='center')\n\nax0.text(0.77,0.4,\"9 of top 10\",color=high_c,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(0.75,0.1,\"in Europe\",color='gray',fontsize=15, fontfamily='monospace',ha='center')\n\nax0.text(1.5,0.4,\"7 of bottom 10\",color=low_c,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(1.5,0.1,\"in Africa\",color='gray',fontsize=15, fontfamily='monospace',ha='center')\n\nax0.text(2.25,0.4,\"Afghanistan\",color=low_c,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(2.25,0.1,\"Unhappiest\",color='gray',fontsize=15, fontfamily='monospace',ha='center')\n\nax0.set_yticklabels('')\nax0.set_xticklabels('')\nax0.tick_params(axis='both',length=0)\n\nfor s in ['top','right','left','bottom']:\n    ax0.spines[s].set_visible(False)\n    \nimport matplotlib.lines as lines\nl1 = lines.Line2D([0.15, 1.95], [0.67, 0.67], transform=fig.transFigure, figure=fig,color = 'gray', linestyle='-',linewidth = 1.1, alpha = .5)\nfig.lines.extend([l1])\nl2 = lines.Line2D([0.15, 1.95], [0.07, 0.07], transform=fig.transFigure, figure=fig,color = 'gray', linestyle='-',linewidth = 1.1, alpha = .5)\nfig.lines.extend([l2])\n    \nplt.show()","bee0ca24":"past_winners = df2.loc[df2.groupby(\"year\")[\"Life Ladder\"].idxmax()]\npast_bottom = df2.loc[df2.groupby(\"year\")[\"Life Ladder\"].idxmin()]\n\nhap = df.groupby('Country')['Ladder score'].mean().sort_values(ascending=False)[:10]\nunhap = df.groupby('Country')['Ladder score'].mean().sort_values(ascending=True)[:10]\ntop_bottom = hap.append(unhap, ignore_index=False).sort_values(ascending=True)","f1424e4c":"fig = plt.figure(figsize=(15,15),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \n\n\n# Plots \n# Happiest\ndata = top_bottom\n\ncolor_map = ['#e7e9e7' for _ in range(20)]\ncolor_map[0] = color_map[1] = color_map[2] =  low_c # color highlight\ncolor_map[17] = color_map[18] = color_map[19] =  high_c \n#base\nax0.barh(data.index, 10, \n       edgecolor='darkgray',color='lightgray',alpha=0.1)\n# actual\nax0.barh(data.index, data, \n       edgecolor='darkgray',color=color_map)\n\nfor i in range(0,20):\n    ax0.annotate(list(data.index)[i], \n                   xy=(data[i]-(data[i]*0.01), i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='monospace',fontsize=15, color='gray',rotation=0)\n# diff color text\nfor i in range(0,3):\n    ax0.annotate(list(data.index)[i], \n                   xy=(data[i]-(data[i]*0.01), i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='monospace',fontsize=15, color='white',rotation=0)\n\nfor i in range(17,20):\n    ax0.annotate(list(data.index)[i], \n                   xy=(data[i]-(data[i]*0.01), i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='monospace',fontsize=15, color='white',rotation=0)\n    \n\nax0.axes.get_xaxis().set_ticks([])\nax0.axes.get_yaxis().set_ticks([])\n\n\n\nfor s in ['top', 'bottom', 'right']:\n    ax0.spines[s].set_visible(False)\n    \nax0.text(0,22.5,'The Happiest & Unhappiest Countries in the World',fontfamily='sans-serif',fontsize=20,fontweight='bold',color='#323232')\nax0.text(0,21.3,'We will investigate how these countries differ, and whether or not population\\nhas anything to do with it',fontfamily='monospace',fontsize=15,fontweight='light',color='gray')\n\nax0.annotate('7 of the bottom 10\\nare in Africa', xy=(4, 4.5), xytext=(6, 4.5), xycoords='data', \n            fontsize=15, ha='center', va='center',fontfamily='monospace',\n            bbox=dict(boxstyle='round', fc=low_c),\n            arrowprops=dict(arrowstyle='-[, widthB=12.3, lengthB=0.3', lw=1, color='gray'), color='white')\n\nplt.show()","5a2b7eae":"fig = plt.figure(figsize=(22,10),dpi=150)\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \n\n\n# Plots \n# Happiest\ndata = df.groupby('Country')['Ladder score'].mean().sort_values(ascending=False)[:10]\n\n\ncolor_map = ['#e7e9e7' for _ in range(10)]\ncolor_map[0] = color_map[1] = color_map[2] =  high_c # color highlight\n\n#base\nax0.barh(data.index, 10, \n       edgecolor='darkgray',color='lightgray',alpha=0.1)\n# actual\nax0.barh(data.index, data, \n       edgecolor='darkgray',color=color_map)\n\n\n#annotations\n#for i in data.index:\n #   ax.annotate(f\"{round(data[i],3)}\", \n  #                 xy=(data[i] + 0.5,i), #i like to change this to roughly 5% of the highest cat\n   #                va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=12)\nfor i in range(0,10):\n    ax0.annotate(list(data.index)[i], \n                   xy=(data[i]-(data[i]*0.01), i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='monospace',fontsize=15, color='gray',rotation=0)\n# diff color text\nfor i in range(0,3):\n    ax0.annotate(list(data.index)[i], \n                   xy=(data[i]-(data[i]*0.01), i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='monospace',fontsize=15, color='white',rotation=0)\n    \n# Unhappiest\n\ndata = df.groupby('Country')['Ladder score'].mean().sort_values(ascending=True)[:10]\n\ncolor_map = ['#e7e9e7' for _ in range(10)]\ncolor_map[0] = color_map[1] = color_map[2] =  low_c # color highlight\n\n#base\nax1.barh(data.index[::-1], 10, \n       edgecolor='darkgray',color='lightgray',alpha=0.1)\n# actual\nax1.barh(data.index, data, \n       edgecolor='darkgray',color=color_map)\n\n\n#annotations\n#for i in data.index:\n #   ax.annotate(f\"{round(data[i],3)}\", \n  #                 xy=(data[i] + 0.5,i), #i like to change this to roughly 5% of the highest cat\n   #                va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=12)\nfor i in range(7,10):\n    ax1.annotate(list(data.index)[::-1][i], \n                   xy=(data[::-1][i]-(data[::-1][i]*0.01), i), \n                   va = 'center', ha='left',fontweight='light', fontfamily='monospace',fontsize=15, color='white',rotation=0)\n# diff color text\nfor i in range(0,7):\n    ax1.annotate(list(data.index)[::-1][i], \n                   xy=(data[::-1][i]-(data[::-1][i]*0.01), i), \n                   va = 'center', ha='left',fontweight='light', fontfamily='monospace',fontsize=15, color='gray',rotation=0)\n\n    \n\n\n# Remove border from plot\n\nfor s in ['top', 'bottom', 'right']:\n    ax0.spines[s].set_visible(False)\n    \nfor s in ['top', 'bottom', 'right','left']:    \n    ax1.spines[s].set_visible(False)\n    \n\n\n    \nax0.set_xlim(0,10)\nax1.set_xlim(10,0)\n    \n# ax labels off\n\nax0.axes.get_xaxis().set_ticks([])\nax0.axes.get_yaxis().set_ticks([])\nax1.axes.get_xaxis().set_ticks([])\nax1.axes.get_yaxis().set_ticks([])\n\nax0.text(0,10.8,'The Happiest & Unhappiest Countries in the World: Side-by-side',fontfamily='sans-serif',fontsize=20,fontweight='bold',color='#323232')\nax0.text(0,10.3,'We will investigate how these countries differ, and whether or not population has anything to do with it',fontfamily='monospace',fontsize=15,fontweight='light',color='gray')\n\n# rect\nfrom matplotlib.patches import Rectangle\nX, Y = 0, 6.5\n\n\nax1.add_patch(Rectangle((X, Y), 10, 3,alpha=0.2, edgecolor='gray',facecolor='gray'))\n\nfig.text(0.53,0.72,\n        \n'''\nWhat makes these \ncountries appear \nat the bottom of\nthe list?\n\n''',color='black',fontfamily='monospace',fontsize=12)\n\n\nplt.show()","7c6501d2":"happiness_mean = df['Ladder score'].mean()\n\ndf['lower_happy'] = df['Ladder score'].apply(lambda x: 0 if x < happiness_mean else 1)\n","b2229b13":"\nbackground = \"#fbfbfb\"\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\nax.set_facecolor(background)\n\n# Reduced list as too many to show all at once \ntop_list_ = df2.groupby('Country')['Life Ladder'].mean().sort_values(ascending=False).reset_index()[:20].sort_values(by='Life Ladder',ascending=True)\n\n\nplot = 1\nfor country in top_list_['Country']:\n    mean = df2[df2['Country'] == country].groupby('Country')['Life Ladder'].mean()\n    # historic scores\n    sns.scatterplot(data=df2[df2['Country'] == country], y=plot, x='Life Ladder',color='lightgray',s=50,ax=ax)\n    # mean score\n    sns.scatterplot(data=df2[df2['Country'] == country], y=plot, x=mean,color='gold',ec='black',linewidth=1,s=75,ax=ax)\n    #2021 score\n    sns.scatterplot(data=df[df['Country'] == country], y=plot, x='Ladder score',color=high_c,ec='black',linewidth=1,s=75,ax=ax)   \n    plot += 1\n\n\nax.set_yticks(top_list_.index+1)\nax.set_yticklabels(top_list_['Country'][::-1], fontdict={'horizontalalignment': 'right'}, alpha=0.7)\nax.tick_params(axis=u'both', which=u'both',length=0)\nax.set_xlabel(\"Happiness Index Score\",fontfamily='monospace',loc='left',color='gray')\n\n\nfor s in ['top','right','bottom','left']:\n    ax.spines[s].set_visible(False)\n    \nXstart, Xend = ax.get_xlim()\nYstart, Yend = ax.get_ylim()\n\nax.hlines(y=top_list_.index+1, xmin=Xstart, xmax=Xend, color='gray', alpha=0.5, linewidth=.3, linestyles='--')\nax.set_axisbelow(True)\nax.text(6.25, Yend+4.3, 'Happiness Index Scores through the years', fontsize=17, fontweight='bold', fontfamily='sansserif',color='#323232')\nax.text(6.25, Yend+0.75,\n'''\nCountries scores do vary over time, however they remain  farily consistent\nIt is interesting that Finland's 2021 score is amongst the highest of all time\n''', fontsize=12, fontweight='light', fontfamily='monospace',color='gray')\n\nplt.annotate('2021\\nscore', xy=(7.842, 19), xytext=(8.2, 11),\n             arrowprops=dict(facecolor='steelblue',arrowstyle=\"->\",connectionstyle=\"arc3,rad=.3\"), fontsize=10,fontfamily='monospace',ha='center', color=high_c)\n\nplt.annotate('Mean\\nscore', xy=(7.6804, 20), xytext=(8.2, 16),\n             arrowprops=dict(facecolor='steelblue',arrowstyle=\"->\",connectionstyle=\"arc3,rad=.5\"), fontsize=10,fontfamily='monospace',ha='center', color='gold')\n\n\nplt.show()","c9690d6c":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [low_c,high_c]\n\nax.set_facecolor(background)\nsns.scatterplot(data=df, x='Healthy life expectancy', y='Ladder score',hue=df['Regional indicator'] == 'Western Europe',palette=cmap, alpha=0.9,ec='black',size=df[\"Logged GDP per capita\"]*1000, legend=True, sizes=(5, 500))\n\nax.set_xlabel(\"Life Expectancy\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n    \nax.text(45,9.2,'Happiness Score, Life Expectancy, and GDP per Capita',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(45,8.5,'We see a strong relationship between these variables and happiness scores\\nand countries in Europe have exclusively high scores',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Outside of Europe')\nL.get_texts()[2].set_text('Europe')\nL.get_texts()[3].set_text('GDP p\/Capita [log]')\n\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nplt.show()","532f194d":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [high_c,low_c]\n\nax.set_facecolor(background)\nsns.scatterplot(data=df, x='Healthy life expectancy', y='Ladder score',hue=df['Regional indicator'] == 'Sub-Saharan Africa',palette=cmap, alpha=0.9,ec='black',size=df[\"Logged GDP per capita\"]*1000, legend=True, sizes=(5, 500))\n\nax.set_xlabel(\"Life Expectancy\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n    \nax.text(45,9.2,'Happiness Score, Life Expectancy, and GDP per Capita',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(45,8.5,'Here we see that countries in Sub-Saharan Africa are,\\nby and large, very low scoring',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Outside of Africa')\nL.get_texts()[2].set_text('Africa')\nL.get_texts()[3].set_text('GDP p\/Capita [log]')\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nplt.show()","97147fe0":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [low_c,high_c]\n\nax.set_facecolor(background)\nsns.scatterplot(data=df, x='Freedom to make life choices', y='Perceptions of corruption',hue=df['Regional indicator'] == 'Western Europe',palette=cmap, alpha=0.9,ec='black',size=df[\"Ladder score\"], legend=True, sizes=(5, 600))\n\nax.set_xlabel(\"Freedom\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Corruption\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n    \n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Outside of Europe')\nL.get_texts()[2].set_text('Europe')\nL.get_texts()[3].set_text('Happiness Score')\n\nstart, end = ax.get_ylim()\nax.yaxis.set_ticks(np.arange(0, end+0.2, 0.2))\n\n\n\nax.text(0.31,1.155,'Happiness Score, Freedom, and Corruption',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(0.31,1.1,'Lower corruption, higher freedom, higher happiness?',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nax.text(0.4,0.1,\n'''\nIt appears that freedom and corruption\nare inversely related. \n\nIt also seems that as corruption reduces\nand freedom increases, so too does\nhappiness\n''',fontfamily='monospace',fontsize=10,color='gray')\n\nplt.show()","7f6a7084":"\ncontinent_score = df.groupby('Regional indicator')['Healthy life expectancy','Logged GDP per capita','Perceptions of corruption','Freedom to make life choices','Ladder score'].mean().reset_index()\n\nbackground = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [low_c,high_c]\n\n\ncolor_map = ['#e7e9e7' for _ in range(10)]\ncolor_map[9] =  high_c # color highlight\ncolor_map[5] =  high_c\ncolor_map[8] =  low_c\ncolor_map[6] =  low_c\n\n\nax.set_facecolor(background)\nsns.scatterplot(data=continent_score, x=continent_score['Healthy life expectancy'], y=continent_score['Ladder score'],hue=continent_score['Regional indicator'], alpha=0.9,ec='black',palette=color_map,size=df[\"Ladder score\"], legend=False, sizes=(5, 600))\n\nax.set_xlabel(\"Life Expectancy\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n    \nax.text(55,7.5,'Happiness Score & Life Expectancy by Continent',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(55,7.3,'There are clear distinctions, with four stand-out continents',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\n\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nfor i, txt in enumerate(continent_score['Regional indicator']):\n    ax.annotate(txt, (continent_score['Healthy life expectancy'][i]+0.5, continent_score['Ladder score'][i]),fontfamily='monospace')\n\n\n    \nplt.show()","01da7692":"continent_score = df.groupby('Regional indicator')['Healthy life expectancy','Logged GDP per capita','Perceptions of corruption','Freedom to make life choices','Ladder score'].mean().reset_index().mean().sort_values(ascending=True)[:10]\ndf_bottom = df.groupby('Country')['Logged GDP per capita','Perceptions of corruption','Freedom to make life choices','Social support','Ladder score'].mean().sort_values(by='Ladder score',ascending=True)[:10]\n\ndf_bottom['Logged GDP per capita'] = df_bottom['Logged GDP per capita']\/10\ndf_bottom['Ladder score'] = df_bottom['Ladder score']\/5\n\ncategorical = [var for var in df.columns if df[var].dtype=='O']\ncontinuous = [var for var in df.columns if df[var].dtype!='O']\n\n#refined\ncontinuous = ['Logged GDP per capita',\n 'Social support',\n 'Healthy life expectancy',\n 'Freedom to make life choices',\n 'Generosity',\n 'Perceptions of corruption']","103a4ee2":"background_color = '#fbfbfb'\nfig = plt.figure(figsize=(12, 6), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(2, 3)\ngs.update(wspace=0.2, hspace=0.5)\n\n\nplot = 0\nfor row in range(0, 2):\n    for col in range(0, 3):\n        locals()[\"ax\"+str(plot)] = fig.add_subplot(gs[row, col])\n        locals()[\"ax\"+str(plot)].set_facecolor(background_color)\n        locals()[\"ax\"+str(plot)].tick_params(axis='y', left=False)\n        locals()[\"ax\"+str(plot)].get_yaxis().set_visible(False)\n        locals()[\"ax\"+str(plot)].set_axisbelow(True)\n        for s in [\"top\",\"right\",\"left\"]:\n            locals()[\"ax\"+str(plot)].spines[s].set_visible(False)\n        plot += 1\n\nplot = 0\n\nYes = df[df['lower_happy'] == 1]\nNo = df[df['lower_happy'] == 0]\n\nfor variable in continuous:\n        sns.kdeplot(Yes[variable], ax=locals()[\"ax\"+str(plot)], color=high_c,ec='black', shade=True, linewidth=1.5, alpha=0.9, zorder=3, legend=False)\n        sns.kdeplot(No[variable],ax=locals()[\"ax\"+str(plot)], color=low_c, shade=True, ec='black',linewidth=1.5, alpha=0.9, zorder=3, legend=False)\n        locals()[\"ax\"+str(plot)].grid(which='major', axis='x', zorder=0, color='gray', linestyle=':', dashes=(1,5))\n        locals()[\"ax\"+str(plot)].set_xlabel(variable, fontfamily='monospace')\n        plot += 1\n        \nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.text(Xstart, Yend+(Yend*0.5), 'Differences between happy & unhappy countries', fontsize=17, fontweight='bold', fontfamily='sansserif',color='#323232')\nax0.text(Xstart, Yend+(Yend*0.25), 'There are large differences, with GDP & Social Support being clear\\nperhaps more interesting though, unhappy countries appear to be more generous', fontsize=12, fontweight='light', fontfamily='monospace',color='gray')\n\nplt.show()","d3d19aaa":"import geopandas\nimport matplotlib.colors\nimport pycountry \n\n#data prep\n\ngeo_temp = df\n\n\n\n#source: https:\/\/melaniesoek0120.medium.com\/data-visualization-how-to-plot-a-map-with-geopandas-in-python-73b10dcd4b4b\n\ndef alpha3code(column):\n    CODE=[]\n    for country in column:\n        try:\n            code=pycountry.countries.get(name=country).alpha_3\n           # .alpha_3 means 3-letter country code \n           # .alpha_2 means 2-letter country code\n            CODE.append(code)\n        except:\n            CODE.append('None')\n    return CODE\n# create a column for code \ngeo_temp['CODE']=alpha3code(geo_temp['Country'])\n\n\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\nworld.columns=['pop_est', 'continent', 'name', 'CODE', 'gdp_md_est', 'geometry']\nmerge=pd.merge(world,geo_temp,on='CODE')\n\n\n###\n\n# Custom colour map\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", [low_c,high_c])\n\nax = world.plot(figsize=(20,15), linewidth=0.25, edgecolor=background_color, color='lightgray')\nax.axis('off')\nax.set_facecolor(background_color)\nmerge.plot(column='lower_happy',figsize=(20, 15),legend=False,cmap=cmap,ax=ax)\n\n\nax.text(-175,112,'Where are the happiest countries?',fontsize=30,fontweight='bold',fontfamily='sansserif',color='#323232')\nax.text(-175,102,'We clearly see where the happy & unhappy countries are',color='gray',fontfamily='monospace',fontsize=20)\n\nplt.show()","83c73cb9":"# merge on country\ndf = pd.merge(df, pop, on='Country')\n# removing NA value\n\ndf=df[df['Urban Pop %'] != 'N.A.']\n\n# Changing data types, removing % strings etc\n\ndf['Urban Pop %'] = df['Urban Pop %'].str.rstrip('%').astype('float') \/ 100.0\ndf['World Share'] = df['World Share'].str.rstrip('%').astype('float') \/ 100.0\ndf['Yearly Change'] = df['Yearly Change'].str.rstrip('%').astype('float') \/ 100.0\ndf['Fert. Rate'] = df['Fert. Rate'].astype('float')\ndf['Med. Age'] = df['Med. Age'].astype('float')\n\n# Adding in some bins\n\ndf['Count'] = 1\ndf['pop_quantile'] = pd.qcut(df['Population (2020)'], 10, labels=False)\ndf['density_quantile'] = pd.qcut(df['Density (P\/Km\u00b2)'], 10, labels=False)\n\nmerge_safety = df\n","09996586":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [low_c,high_c]\n\nax.set_facecolor(background)\nsns.scatterplot(data=df, x='Med. Age', y='Ladder score',hue=df['Regional indicator'] == 'Western Europe',palette=cmap, alpha=0.9,ec='black',linewidth=1.3,size=df[\"Population (2020)\"]*1000, legend=True, sizes=(5, 2500))\n\nax.set_xlabel(\"Median age\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n\nstart, end = ax.get_xlim()\n    \nax.text(start,9.2,'Happiness Score, Median Age, and Population',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(start,8.5,'It appears that the happier countries have older populations,\\nand less people in general',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Outside of Europe')\nL.get_texts()[2].set_text('Europe')\nL.get_texts()[3].set_text('Population')\nL.get_texts()[4].set_text('   25m')\nL.get_texts()[5].set_text('   50m')\nL.get_texts()[6].set_text('   75m')\nL.get_texts()[7].set_text('   100m')\nL.get_texts()[8].set_text('   125m+')\n\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nplt.show()","2008571a":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\ncmap = [low_c,high_c]\n\nax.set_facecolor(background)\nsns.scatterplot(data=df, x='Fert. Rate', y='Logged GDP per capita',hue=df['Regional indicator'] == 'Western Europe',palette=cmap, alpha=0.9,ec='black',linewidth=1.3,size=df[\"Med. Age\"], legend=True, sizes=(5, 500))\n\nax.set_xlabel(\"Fertility rate\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"GDP p\/Capita [log]\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n\nstart, end = ax.get_xlim()\n    \nax.text(start,12.7,'GDP, Fertility Rate, and Median Age',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(start,12.3,'Bringing all the above together, we see that these features are all linked',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Outside of Europe')\nL.get_texts()[2].set_text('Europe')\nL.get_texts()[3].set_text('Median Age')\n#L.get_texts()[4].set_text('   25m')\n\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nplt.show()","daee85de":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\nax.set_facecolor(background)\n\ncmap = [low_c,high_c]\n\ndf_plot = df[df['density_quantile'] <9 ]\n\nsns.scatterplot(data=df_plot, x=\"Density (P\/Km\u00b2)\", y=\"Ladder score\", hue='lower_happy',palette=cmap, size=df_plot[\"Population (2020)\"]*1000, legend=True, sizes=(5, 2500),alpha=0.9,ec='black',linewidth=1.5)\n\nax.set_xlabel(\"Population density (p\/km\u00b2)\",fontfamily='monospace',loc='left',color='gray')\nax.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax.tick_params(axis = 'both', which = 'major', labelsize = 10)\n\nfor s in [\"top\",\"right\",\"left\"]:\n    ax.spines[s].set_visible(False)\n\nstart, end = ax.get_xlim()\n    \nax.text(start,9.35,'Happiness, Population, and Population Density',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(start,8.7,'There does not seem to be a relationshop between happiness\\nand population density',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\nL = ax.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(1.25, 0.8), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\nL.get_texts()[1].set_text('Below Average Happiness')\nL.get_texts()[2].set_text('Above')\nL.get_texts()[3].set_text('Population')\nL.get_texts()[4].set_text('   25m')\nL.get_texts()[5].set_text('   50m')\nL.get_texts()[6].set_text('   75m')\nL.get_texts()[7].set_text('   100m')\nL.get_texts()[8].set_text('   125m+')\n\nax.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\nplt.show()","26fbe54a":"import matplotlib.dates as mdates\n\n\nfig = plt.figure(figsize=(10, 4), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_xlabel(\"Year\",fontfamily='monospace',loc='left',color='gray')\nax0.set_ylabel(\"Happiness Index Score\",fontfamily='monospace',loc='top',color='gray')\nax0.tick_params(axis = 'both', which = 'major', labelsize = 10)\n    \n\n\nax0.tick_params(axis='both', which='both', left=False, bottom=False,labelbottom=True) \n\n#low\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Zimbabwe')], x='year', y='Life Ladder',color='lightgray')\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Rwanda')], x='year', y='Life Ladder',color='lightgray')\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Afghanistan')], x='year', y='Life Ladder',color=low_c)\n\n#high\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Denmark')], x='year', y='Life Ladder',color='lightgray')\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Switzerland')], x='year', y='Life Ladder',color='lightgray')\nsns.lineplot(ax=ax0,data=df2[(df2['Country']=='Finland')], x='year', y='Life Ladder',color=high_c)\n\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\nax0.plot(2019,df2[(df2['Country']=='Afghanistan')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=low_c, markeredgewidth=1.5)\nax0.plot(2020,df2[(df2['Country']=='Zimbabwe')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=low_c, markeredgewidth=1.5)\nax0.plot(2019,df2[(df2['Country']=='Rwanda')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=low_c, markeredgewidth=1.5)\n\nax0.plot(2020,df2[(df2['Country']=='Finland')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=high_c,markeredgewidth=1.5)\nax0.plot(2020,df2[(df2['Country']=='Denmark')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=high_c, markeredgewidth=1.5)\nax0.plot(2020,df2[(df2['Country']=='Switzerland')]['Life Ladder'].reset_index().iloc[-1,-1], 'ko', markersize=10, fillstyle='full',color=high_c, markeredgewidth=1.5)\n\n\nax0.text(2020.2,df2[(df2['Country']=='Finland')]['Life Ladder'].reset_index().iloc[-1,-1],'Finland',color=high_c,fontfamily='monospace',fontsize=8, rotation=0)\nax0.text(2020.2,df2[(df2['Country']=='Denmark')]['Life Ladder'].reset_index().iloc[-1,-1],'Denmark',color=high_c,fontfamily='monospace',fontsize=8, rotation=0)\nax0.text(2020.2,df2[(df2['Country']=='Switzerland')]['Life Ladder'].reset_index().iloc[-1,-1]-0.35,'Switzerland',color=high_c,fontfamily='monospace',fontsize=8, rotation=0)\n\nax0.text(2019.2,df2[(df2['Country']=='Afghanistan')]['Life Ladder'].reset_index().iloc[-1,-1],'Afghanistan',color=low_c,fontfamily='monospace',fontsize=8, rotation=0)\nax0.text(2020.2,df2[(df2['Country']=='Zimbabwe')]['Life Ladder'].reset_index().iloc[-1,-1],'Zimbabwe',color=low_c,fontfamily='monospace',fontsize=8, rotation=0)\nax0.text(2019.2,df2[(df2['Country']=='Rwanda')]['Life Ladder'].reset_index().iloc[-1,-1],'Rwanda',color=low_c,fontfamily='monospace',fontsize=8, rotation=0)\n\n\n\nax0.yaxis.set_ticks(np.arange(0, 10, 1))\nax0.set_xlim(left = 2008, right = 2020.5)\nplt.xticks(fontname = \"monospace\")\nplt.yticks(fontname = \"monospace\")\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.text(Xstart, Yend+(Yend*0.2), 'Changes over time', fontsize=17, fontweight='bold', fontfamily='sansserif',color='#323232')\nax0.text(Xstart, Yend+(Yend*0.06), \n'''\nOf concern is that the happy countries seem to remain happy, \nwhile the unhappiest are getting more unhappy''', fontsize=12, fontweight='light', fontfamily='monospace',color='gray')\n\n\n\nplt.show()","7ffa0b52":"past = df2[['Country','Life Ladder','year']]\n\npres = df[['Country','Ladder score']]\n\npres['year'] = 2020\n\npres.rename(columns={'Ladder score': 'Life Ladder'}, inplace=True)\n\ncombined = past.append(pres, ignore_index=False).sort_values(by='year')\n\nseven = combined[combined['year'] == 2007]\nseven.rename(columns={'Life Ladder':'07_score'}, inplace=True)\ntwenty = combined[combined['year'] == 2020]\ntwenty.rename(columns={'Life Ladder':'20_score'}, inplace=True)\n\nseven = seven.set_index('Country')\n\ntwenty = twenty.set_index('Country')\n\ncombined = seven.merge(twenty, on='Country', how='inner', suffixes=('_1', '_2'))\n\ncombined['change'] = combined['20_score'] - combined['07_score']\n\ntop_inc = combined.groupby('Country')['change'].mean().sort_values(ascending=False)[:10]\ntop_dec = combined.groupby('Country')['change'].mean().sort_values(ascending=True)[:10]\n\ntop_changes = top_inc.append(top_dec, ignore_index=False).sort_values(ascending=True)\n\n","a8d2ed1e":"temp = combined.groupby('Country')['07_score','20_score','change'].mean().sort_values(by='07_score',ascending=False).reset_index()\n\nsample = temp[(temp['Country'] == 'Denmark') | (temp['Country'] == 'United Kingdom') | (temp['Country'] == 'India') | (temp['Country'] == 'Cambodia') \n   | (temp['Country'] == 'North Cyprus') | (temp['Country'] == 'South Africa') | (temp['Country'] == 'Malawi') | (temp['Country'] == 'Niger')\n    | (temp['Country'] == 'Australia') | (temp['Country'] == 'Guatemala') | (temp['Country'] == 'Bulgaria') | (temp['Country'] == 'Chile') \n    | (temp['Country'] == 'Jordan') ]\n\nsample = sample.set_index('Country')","53ad0afb":"top_inc = combined.groupby('Country')['change'].mean().sort_values(ascending=False)[:10]\ntop_dec = combined.groupby('Country')['change'].mean().sort_values(ascending=True)[:10]\n\ntop_changes = top_inc.append(top_dec, ignore_index=False).sort_values(ascending=True)","e0d08a2a":"# https:\/\/www.machinelearningplus.com\/plots\/top-50-matplotlib-visualizations-the-master-plots-python\/#18.-Slope-Chart\n\nimport matplotlib.lines as mlines\n\nleft_label = [str(c) + ', '+ str(round(y)) for c, y in zip(sample.index, sample['07_score'])]\nright_label = [str(c) + ', '+ str(round(y)) for c, y in zip(sample.index, sample['20_score'])]\nklass = [low_c if (y1-y2) < 0 else high_c for y1, y2 in zip(sample['07_score'], sample['20_score'])]\n\n# draw line\n# https:\/\/stackoverflow.com\/questions\/36470343\/how-to-draw-a-line-with-matplotlib\/36479941\ndef newline(p1, p2, color='black'):\n    ax = plt.gca()\n    l = mlines.Line2D([p1[0],p2[0]], [p1[1],p2[1]], color=low_c if p1[1]-p2[1] > 0 else high_c, marker='o', markersize=6)\n    ax.add_line(l)\n    return l\n\nfig, ax = plt.subplots(1,1,figsize=(10,14), dpi= 150, facecolor=background_color)\n\nax.set_facecolor(background_color)\n\n# Vertical Lines\nax.vlines(x=1, ymin=0, ymax=9, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\nax.vlines(x=3, ymin=0, ymax=9, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\n\n# Points\nax.scatter(y=sample['07_score'], x=np.repeat(1, sample.shape[0]), s=75,linewidth=1.5, color='black', alpha=0.7)\nax.scatter(y=sample['20_score'], x=np.repeat(3, sample.shape[0]), s=75, linewidth=1.5,color='black', alpha=0.7)\n\n# Line Segments and Annotation\nfor p1, p2, c in zip(sample['07_score'], sample['20_score'], sample.index):\n    newline([1,p1], [3,p2])\n    ax.text(1-0.05, p1, c + ', ' + str(round(p1,1)), horizontalalignment='right', verticalalignment='center', fontdict={'size':14})\n    ax.text(3+0.05, p2, c + ', ' + str(round(p2,1)), horizontalalignment='left', verticalalignment='center', fontdict={'size':14})\n\n\nax.text(0,8.75,\"Happiness Index scores 2007 - 2020\", fontsize=20, fontfamily='sansserif',fontweight='bold',color='#323232')\nax.text(0,8.5, \n'''\nHere we see how a random sample performed over the years, \nof note is the large ascent seen in Bulgaria''', fontsize=12, fontweight='light', fontfamily='monospace',color='gray')\n\n\nax.set(xlim=(0,4), ylim=(3,8.2), ylabel='')\nax.set_xticks([1,3])\nax.set_xticklabels([\"2007\", \"2020\"],fontsize=20)\nplt.yticks(np.arange(3, 8.2, 2), fontsize=12)\n\nfor s in [\"top\",\"right\",\"left\",\"bottom\"]:\n    ax.spines[s].set_visible(False)\n    \nax.tick_params(axis='both',which='both',left=False,bottom=False,labelleft=False) \nplt.rcParams[\"font.family\"] = \"monospace\"\n\nplt.show()","d8fe6c36":"fig = plt.figure(figsize=(10,8),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) \nax0.set_facecolor(background_color) \nax1.set_facecolor(background_color) \n\n\n# Plots \n# Happiest\ndata = top_changes\n\n\ncolor_map = ['#e7e9e7' for _ in range(20)]\ncolor_map[0] = color_map[1] = color_map[2] =  low_c # color highlight\ncolor_map[17] = color_map[18] = color_map[19] =  high_c\n\n#base\nax0.bar(data.index, data, \n       edgecolor='darkgray',color='lightgray',alpha=0.1)\n# actual\nax0.bar(data.index, data, \n       edgecolor='darkgray',color=color_map)\n\n\nax0.axes.get_xaxis().set_ticks([])\nax0.axes.get_yaxis().set_ticks([])\n\n\nfor s in ['top','left', 'bottom', 'right']:\n    ax0.spines[s].set_visible(False)\n    \n\nfor i in range(0,3):\n    ax0.annotate(list(data.index)[i], \n                   xy=(i, -0.1), \n                   va = 'top', ha='center',fontweight='light',fontsize=8, color='white',rotation=90)\n\nfor i in range(3,10):\n    ax0.annotate(list(data.index)[i], \n                   xy=(i, -0.1), \n                   va = 'top', ha='center',fontweight='light',fontsize=8, color='black',rotation=90)\n\n    #top\nfor i in range(17,20):\n    ax0.annotate(list(data.index)[i], \n                   xy=(i, 0.1), \n                   va = 'bottom', ha='center',fontweight='light',fontsize=8, color='white',rotation=90)\n\nfor i in range(10,17):\n    ax0.annotate(list(data.index)[i], \n                   xy=(i, 0.1), \n                   va = 'bottom', ha='center',fontweight='light',fontsize=8, color='black',rotation=90)\n\nax0.text(0,0.75,'The biggest movers',fontfamily='sans-serif',fontsize=15,fontweight='bold',color='#323232')\nax0.text(0,0.4,'These countries have had the largest\\nchange in score between 2007 and 2020\\nCan we learn anything here?',fontfamily='monospace',fontsize=10,fontweight='light',color='gray')\n\nplt.show()","aeecc4a1":"# only top movers\ntop_ch_list = list(top_changes.reset_index()['Country'])\n\npre_post = seven.merge(twenty, on='Country', how='inner', suffixes=('_1', '_2')).reset_index()\n\npre_post = pre_post[pre_post['Country'].isin(top_ch_list)]\npre_post = pre_post.drop_duplicates(subset=['Country'], keep='first')","65a074ca":"pre_post['change'] = pre_post['20_score'] - pre_post['07_score']\npre_post.sort_values(by='change')\npre_post = pre_post.set_index('Country')","2b7dfc85":"fig = plt.figure(figsize=(8,6),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \n\n\nvalue1= pre_post['07_score']\nvalue2=pre_post['20_score']\n\n\n# Reorder it following the values of the first value:\nordered_df = pre_post.sort_values(by='20_score')\nmy_range=range(1,len(ordered_df.index)+1)\n \n\n# The horizontal plot is made using the hline function\nplt.hlines(y=my_range, xmin=ordered_df['07_score'], xmax=ordered_df['20_score'], color='lightgray', alpha=0.4)\nplt.scatter(ordered_df['07_score'], my_range, color=low_c, alpha=1, ec='black',label='2007 Score',s=150)\nplt.scatter(ordered_df['20_score'], my_range, color=high_c, alpha=1 , ec='black', label='2020 Score',s=150)\n\nax0.set_yticklabels([])\n#plt.locator_params(nbins=10)\n\nfor i in range(20):\n    ax0.annotate(list(ordered_df.index)[i], \n                   xy=((ordered_df[[\"07_score\", \"20_score\"]].max(axis=1)[i]+0.3),i+0.6), \n                   va = 'bottom', ha='left',fontweight='light', fontfamily='monospace',fontsize=8, color='black',rotation=0)\n\n\n\nXstart, Xend = ax0.get_xlim()\nax0.xaxis.set_ticks(np.arange(1, 10, 1))\n\n#ax0.axes.get_xaxis().set_ticks([])\nax0.axes.get_yaxis().set_ticks([])\n\n# Remove border from plot\n\nfor s in ['top','left', 'bottom', 'right']:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_xlabel(\"Happiness Index Score\",fontfamily='monospace',loc='left',color='gray')\nax0.tick_params(axis = 'both', which = 'major', labelsize = 10)\n    \nax0.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\n\nL = ax0.legend(frameon=False,loc=\"upper center\", bbox_to_anchor=(0.1, 0.65), ncol= 1)\nplt.setp(L.texts, family='monospace')\nL.get_frame().set_facecolor('none')\n#L.get_texts()[1].set_text('Outside of Europe')\n#L.get_texts()[2].set_text('Europe')\n\nax0.text(1,20,'The biggest movers',fontfamily='sans-serif',fontsize=15,fontweight='bold',color='#323232')\nax0.text(1,14.6,\n'''\nHere we can see the change that these\ncountries underwent.\n\nSome countries improved dramatically, \nwhile others have gotten significantly\nunhappier since 2007\n''',fontfamily='monospace',fontsize=8,fontweight='light',color='gray')\n\nplt.show()","008597d2":"fig = plt.figure(figsize=(6,6),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \n\nc1 = 'Jordan'\nc2 = 'Bulgaria'\n\n# filter data\ndf = df2.loc[(df2['Country']==c1) | (df2['Country']==c2)]\ndf = df2.loc[(df2['year']>2008)]\ndf = pd.pivot_table(df, values='Life Ladder', index=['year'], columns=['Country'])\n\n\n# plot the connected scatterplot\nplt.plot(df[c1], df[c2], '-', marker='o',color=high_c)\n\n# add annotations in every 3 data points with a loop\nfor line in range(0, df.shape[0], 1):\n     plt.annotate(\n          df.index[line], \n          (df[c1].iloc[line], df[c2].iloc[line]+0.025) ,\n          va='bottom',\n          ha='center',fontfamily='monospace'\n     )\n        \n\nfor s in ['top','right']:\n    ax0.spines[s].set_visible(False)\n    \n#ax0.xaxis.set_ticks(np.arange(1, 10, 1))\nax0.set_ylabel(f\"{c2}\",fontfamily='monospace',loc='top',color='gray')\nax0.set_xlabel(f\"{c1}\",fontfamily='monospace',loc='left',color='gray')\nax0.tick_params(axis = 'both', which = 'major', labelsize = 10)\n    \n\nax0.tick_params(axis='both', which='both',left=False, bottom=False,labelbottom=True) \n\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.text(Xstart,Yend+0.4,'Comparing two countries over time',fontsize=15,fontweight='bold',color='#323232')\nax0.text(Xstart,Yend+0.15,'Here we can see differences in happiness\\nbetween countries over time, and how some\\ncountries deteriorate, and others improve',fontsize=10,fontfamily='monospace',color='gray')\n\nfig.text(0.2,0.3,\n'''\nBulgaria is the country that has\nimproved the most \nbetween 2007 and 2020, \nwhereas Jordan has deteriorated \nby the most. \n\nThis is how the two countries\ncompared through the years\n''',fontfamily='monospace',fontsize=8,color='gray')\n\n# x axis label\nplt.xlabel(c1)\n\n# y axis label\nplt.ylabel(c2)\n\n# show the graph\nplt.show()","bd4607e2":"safety['bin'] = safety['Ladder score'].apply(lambda x: '0-3' if x <= 3 else '3-5' if x <= 5 else '5-7' if x <= 7 else '7+')\n\nbin_order = ['0-3','3-5','5-7','7+']\n\ncont_order = ['Western Europe', 'North America and ANZ',\n       'Middle East and North Africa', 'Latin America and Caribbean',\n       'Central and Eastern Europe', 'East Asia', 'Southeast Asia',\n       'Commonwealth of Independent States', 'Sub-Saharan Africa',\n       'South Asia']\n\nsafety['count'] = 1\n\n# matrix plot\n\ndata_matrix = pd.pivot_table(safety, values='count', index=['Regional indicator'], columns=['bin'], aggfunc=np.sum).fillna(0).astype(int).loc[cont_order, bin_order].stack()\n\nplt.rcParams[\"font.family\"] = \"monospace\"\n\nfig = plt.figure(figsize=(5, 9), dpi=150)\ngs = fig.add_gridspec(5, 5)\nax0 = fig.add_subplot(gs[1:4, 0:4]) \nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \n\nfor item in cont_order[::-1]:\n    for item_2 in bin_order:\n        size = data_matrix[item][item_2]\n        ax0.scatter(item_2, item, s=size*25, color='gray',ec='black',linewidth=1) \n\n#highlights\nax0.scatter(1, 1, s=650, color='#dd4124',ec='black',linewidth=1,alpha=1)    \nax0.scatter(0, 0, s=50, color='#dd4124',ec='black',linewidth=1,alpha=1) \nax0.scatter(1, 7, s=300, color='#dd4124',ec='black',linewidth=1,alpha=1) \n\nax0.scatter(3, 9, s=300, color='#009473',ec='black',linewidth=1,alpha=1) \nax0.scatter(3, 8, s=100, color='#009473',ec='black',linewidth=1,alpha=1) \nax0.scatter(3, 7, s=75, color='#009473',ec='black',linewidth=1,alpha=1) \nax0.scatter(3, 6, s=75, color='#009473',ec='black',linewidth=1,alpha=1) \n\nax0.grid(linewidth=0.1)        \nax0.set_xticklabels(bin_order, fontsize=11, rotation=0)\nplt.yticks(fontsize=11)\n\nfor s in ['top','right','left','bottom']:\n    ax0.spines[s].set_visible(False)\n    \nax0.text(-3,13.5,'Continental variance',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax0.text(-3,10.3,\n'''\nThis view helps to understand variance, and also hotspots\naround the globe for both unhappy & happy nations\n\nFor example, the box shows regions with particularly\nlow happiness scores\n''',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')    \n\nax0.tick_params(axis=u'both', which=u'both',length=0)\nax0.set_axisbelow(True)\nplt.xlabel('Happiness Score',loc='right',color='gray')\n\n\n#rect\n\nX, Y = -0.5, -0.5\n\n\nax0.add_patch(Rectangle((X, Y), 3, 4,alpha=0.2, edgecolor='gray',facecolor='gray'))\nplt.show()","eaaf568c":"fig, ax = plt.subplots(1, 1, figsize=(10, 15), dpi=150, facecolor=background_color)\nax.set_facecolor(background_color) \n\nplt.rcParams[\"font.family\"] = \"monospace\"\n\n\ncolors = [low_c,'gray','gray',high_c]\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", colors)\n\nsns.heatmap(df[list(safety[safety['Regional indicator'] == 'Western Europe']['Country name'])].T, \n            square=True,\n            linewidth=5, \n            cmap=cmap, \n            cbar=False, \n            ax=ax,annot=True,annot_kws={\"size\": 8})\n\nax.spines['top'].set_visible(False)\nax.set_xlabel(\"\")\nax.set_ylabel(\"\")\nplt.yticks(rotation=0,fontfamily='monospace',size=12)\nplt.xticks(rotation=0,fontfamily='monospace', size=12)\n\nax.tick_params(axis=u'both', which=u'both',length=0)\n\nax.text(0,-2.9,'Europe through the years',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(0,-0.3,\n'''\nHere we see that there is still a large amount of variance\neven within Europe\n\nIt does appear that the happiest nations tend to be in\nNorthern Europe, whilst the unhappier nations are, by \nand large, Southern Europe\n''',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\nplt.show()","c309aced":"background = \"#fbfbfb\"\n\nfig, ax = plt.subplots(1,1, figsize=(10, 5),dpi=150)\nfig.patch.set_facecolor(background) # figure background color\n\nax.set_facecolor(background)\n\npal = {'Western Europe':high_c, \n'North America and ANZ':high_c,\n'Middle East and North Africa':'gold',\n'Latin America and Caribbean':'gray',\n'Central and Eastern Europe':'gray',\n'East Asia':'gray',\n'Southeast Asia':'gray',\n'Commonwealth of Independent States':'gray',\n'Sub-Saharan Africa':low_c,\n'South Asia':low_c}\n\n\nax = sns.boxplot(y='Regional indicator', x='Ladder score', data=safety,palette=pal)\n\n\n \n# Add jitter with the swarmplot function\nax = sns.swarmplot(y='Regional indicator', x='Ladder score', data=safety, ec='black',linewidth=1.5,palette=pal)\n\nfor s in ['top','left','bottom','right']:\n    ax.spines[s].set_visible(False)\n    \nax.text(2.2,-2.5,'Continental variance',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(2.2,-0.3,\n'''\nThere is variance in every continent, but some are much more varied than \nothers, for example, the Middle East & North Africa has a huge dispersion\nfrom below 4 to above 7\n''',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n    \nax.set_xlabel(\"\")\nax.set_ylabel(\"\")\nax.tick_params(axis=u'both', which=u'both',length=0)\n\nplt.show()","d173b1dd":"fig, ax = plt.subplots(1, 1, figsize=(10, 15), dpi=150, facecolor=background_color)\nax.set_facecolor(background_color) \n\nplt.rcParams[\"font.family\"] = \"monospace\"\n\n\ncolors = [low_c,'gray','gray',high_c]\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", colors)\n\nsns.heatmap(df[list(safety[safety['Regional indicator'] == 'Middle East and North Africa']['Country name'])].T, \n            square=True,\n            linewidth=5, \n            cmap=cmap, \n            cbar=False, \n            ax=ax,annot=True,annot_kws={\"size\": 8})\n\nax.spines['top'].set_visible(False)\nax.set_xlabel(\"\")\nax.set_ylabel(\"\")\nplt.yticks(rotation=0,fontfamily='monospace',size=12)\nplt.xticks(rotation=0,fontfamily='monospace', size=12)\n\nax.tick_params(axis=u'both', which=u'both',length=0)\n\nax.text(0,-1.7,'The Middle East & North Africa',fontfamily='sansserif',fontweight='normal',fontsize=17,weight='bold',color='#323232')\nax.text(0,-0.3,\n'''\nContaining Israel & wealthy Gulf states, to war-torn countries such as Yemen, \nit is not suprising that this region has a high variance when it comes to the\nhappiness index score\n''',fontfamily='monospace',fontweight='light',fontsize=12,color='gray')\n\nplt.show()","bb92970f":"from pywaffle import Waffle\nfig = plt.figure(figsize=(12, 4),dpi=150,facecolor=background_color,\n    FigureClass=Waffle,\n    rows=10,\n    values=[5, 195],\n    colors=[high_c, \"lightgray\"],\n    icons=['circle','circle-notch'],\n    font_size=20,vertical=True,\n)\n\nfig.text(0.017,1.1,'History repeats itself',fontfamily='sanserif',fontsize=20,fontweight='bold',color='#323232')\nfig.text(0.017,1.01,'Since 2005 there have only ever been 5 different countries to top the leaderboard,\\nwith approx. 200 countries in the world, this is a troubling realisation',fontfamily='monospace',color='gray',fontsize=10)\nplt.show()","96a28245":"\nrefined_merge = merge_safety[['Country','Ladder score',\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Population (2020)', 'Density (P\/Km\u00b2)', 'Land Area (Km\u00b2)',\n       'Migrants (net)', 'Fert. Rate', 'Med. Age', 'Urban Pop %']]\n\n# Decided not to use this plot - heatmap agaisnt one variable, in this case, ladder score\n\n#fig, ax = plt.subplots(figsize=(1,8), dpi=150)\n#fig.patch.set_facecolor(background) # figure background color\n#ax.set_facecolor(background)\n\n#colors = [low_c,'gray','gray',high_c]\n#sns.heatmap(refined_merge.corr()[['Ladder score']].sort_values('Ladder score'),\n# vmax=1, vmin=-1, cmap=colors, annot=True,cbar=False,linewidth=5, ax=ax);\n#ax.invert_yaxis()\n#ax.tick_params(axis=u'both', which=u'both',length=0)\n#plt.show()","e06feca4":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\n\nX = refined_merge[['Ladder score','Logged GDP per capita', 'Social support',\n       'Healthy life expectancy', 'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Fert. Rate', 'Med. Age',\n       'Urban Pop %']]\n\n\n\nwcss = []\nfor i in range(1, 6):\n    km = KMeans(n_clusters = i, init = 'k-means++', max_iter = 20, n_init = 10, random_state = 0)\n    km.fit(X)\n    wcss.append(km.inertia_)\n    \n    \n###\n\nfig = plt.figure(figsize=(4,3),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nbackground_color = \"#fafafa\"\nfig.patch.set_facecolor(background_color) # figure background color\nax0.set_facecolor(background_color) \nfor s in ['top','right']:\n    ax0.spines[s].set_visible(False)\n    \nfig.text(0.13,0.93,\n'''\nThe optimal number of clusters is between \nthree and four, as the W.C.S.S is minimised''',fontsize=8, color='gray',ha='left')\n\nfig.text(0.13,1.05,'The Elbow Method',fontfamily='sansserif',fontweight='bold',fontsize=15,color='#323232')\n\nplt.tick_params(axis = 'both', which = 'major', labelsize = 10)\nplt.tick_params(axis=u'both', which=u'both',length=0)\n\nplt.annotate('I will select\\n3 Clusters', xy=(3, 2500), xytext=(4, 11000),\n             arrowprops=dict(facecolor='steelblue',arrowstyle=\"->\",connectionstyle=\"arc3,rad=.3\"), fontsize=10,fontfamily='monospace',ha='center', color=high_c)\n\n    \nplt.plot(range(1, 6), wcss,color='gold')\nplt.xlabel('No. of Clusters',fontsize=8)\nplt.ylabel('W.C.S.S.',fontsize=8)\nplt.show()\n\n","d5877f41":"# Create clusters\nkmeans = KMeans(n_clusters=3)\nX[\"Cluster\"] = kmeans.fit_predict(X)\nX[\"Cluster\"] = X[\"Cluster\"].astype(\"category\")\nrefined_merge['Cluster'] = X[\"Cluster\"].astype(\"category\")\n","ca82d63a":"refined_merge.groupby('Cluster')['Ladder score'].mean()","22c31704":"background_color = '#fbfbfb'\nfig = plt.figure(figsize=(15, 6), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(2, 5)\ngs.update(wspace=0.2, hspace=0.5)\n\n\nplot = 0\nfor row in range(0, 2):\n    for col in range(0, 5):\n        locals()[\"ax\"+str(plot)] = fig.add_subplot(gs[row, col])\n        locals()[\"ax\"+str(plot)].set_facecolor(background_color)\n        locals()[\"ax\"+str(plot)].tick_params(axis='y', left=False)\n        locals()[\"ax\"+str(plot)].get_yaxis().set_visible(False)\n        locals()[\"ax\"+str(plot)].set_axisbelow(True)\n        for s in [\"top\",\"right\",\"left\"]:\n            locals()[\"ax\"+str(plot)].spines[s].set_visible(False)\n        plot += 1\n\nplot = 0\n\nclus_vars = ['Ladder score', 'Logged GDP per capita', 'Social support',\n       'Healthy life expectancy', 'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Fert. Rate', 'Med. Age',\n       'Urban Pop %',]\n\ncluster_cols = {1: high_c, 0:low_c,2:'gold'}\n\nfor variable in clus_vars:\n        sns.kdeplot(refined_merge[variable], hue=refined_merge['Cluster'], ax=locals()[\"ax\"+str(plot)], palette=cluster_cols,ec='black', shade=True, linewidth=1.5, alpha=0.9, zorder=3, legend=False)\n        locals()[\"ax\"+str(plot)].grid(which='major', axis='x', zorder=0, color='gray', linestyle=':', dashes=(1,5))\n        locals()[\"ax\"+str(plot)].set_xlabel(variable, fontfamily='monospace')\n        plot += 1\n        \nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.text(Xstart, Yend+(Yend*0.38), 'Differences between clusters', fontsize=17, fontweight='bold', fontfamily='sansserif',color='#323232')\nax0.text(Xstart, Yend+(Yend*0.25), 'Our clusters have clear differences, with some, such as median age, being extremely pronounced', fontsize=12, fontweight='light', fontfamily='monospace',color='gray')\n\nplt.show()","4f2564c3":"#data prep\n\ngeo_temp = refined_merge\n\n\n\n#source: https:\/\/melaniesoek0120.medium.com\/data-visualization-how-to-plot-a-map-with-geopandas-in-python-73b10dcd4b4b\n\ndef alpha3code(column):\n    CODE=[]\n    for country in column:\n        try:\n            code=pycountry.countries.get(name=country).alpha_3\n           # .alpha_3 means 3-letter country code \n           # .alpha_2 means 2-letter country code\n            CODE.append(code)\n        except:\n            CODE.append('None')\n    return CODE\n# create a column for code \ngeo_temp['CODE']=alpha3code(geo_temp['Country'])\n\n\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\nworld.columns=['pop_est', 'continent', 'name', 'CODE', 'gdp_md_est', 'geometry']\nmerge=pd.merge(world,geo_temp,on='CODE')\n\n\n###\n\n# Custom colour map\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", [low_c,high_c,'gold'])\n\nax = world.plot(figsize=(20,15), linewidth=0.25, edgecolor=background_color, color='lightgray')\nax.axis('off')\nax.set_facecolor(background_color)\nmerge.plot(column='Cluster',figsize=(20, 15),legend=False,cmap=cmap,ax=ax)\n\n\nax.text(-175,112,'Where do our clusters appear?',fontsize=30,fontweight='bold',fontfamily='sansserif',color='#323232')\nax.text(-175,102,'The clusters neatly divide the globe, and we can also view intra-continental differences',color='gray',fontfamily='monospace',fontsize=20)\n\nplt.show()","82fd9ddd":"# I am still adding to this notebook - be sure to check back soon!","390feefe":"This plot confirms what we discovered above, with South Asia and Africa being in the red.\n\nBut it also highlights areas we can investigate. For exmaple, China & India, both in the red, have **populations over 1 billion.** Can we investigate population and happiness levels?","d90c0cb0":"We can now **create 3 clusters** within our dataset.\n\nThis can help for further analysis, and aid in **building our understanding even further**","0bdd2f6f":"# Cluster overview\n\nWe can now repeat the plot from earlier, but this time, **splitting the data in to our 3 new clusters**","63032319":"Clearly there has indeed been a lot of movement through the years.\n\nWhich countries have seen the biggest changes?","eca392e9":"As I suspected, happier countries tend also to have **fewer children**. Likely this is due to access to contraception.","f7f6e6ce":"# Initial Overview","c250d8ad":"# Why are there differences?\n\nWe now understand that Northern European nations top the list, and have done for some time.\n\nLet's explore these differences between Europe and the rest of the world a little more closely.","1989aff5":"There are **three clusters** of continents that are clear to see. **More on this later...**\n\nSub-Saharan Africa & South Asia have the lowest scores. Whilst Western Europe and North America & ANZ are far ahead at the top.","6f28cc97":"# Differences between those above & below the mean happiness level\n\nLet's plot all many features at once, split by the mean happiness level. The happiest countries are, as always, shown in green.","4fefa05c":"Of concern here is that the **unhappy stay unhappy, and worse still, they appear to be getting unhappier.**\n\nIs this trend consistent? Or do some countries scores improve over time?","bdc5abf8":"We see clearly that happier countries tend to be **older, and less populous**. \n\nI've included Europe for reference.\n\nWhat about Fertility rate?","49c38f69":"# Last steps: Clustering\n\nNow we have a clear understanding of our data.\n\nEarlier, I mentioned that there appeared to be **three clusters** in our dataset between regions. \n\nLet's formally cluster our data and see if the intuitions, **uncovered purely by exploratory data analysis**, prove correct.","442c4906":"I am surprised that **population density doesn't effect happiness** - though that is due to personal preferences!","66da75f5":"Let's bring the top 10 & bottom 10 side-by-side now for an alternative view","115c7ff7":"# Happiness\n\nThis notebook is purely an **exploratory data analysis** to see if I can figure out what makes a country happy or unhappy. To do this, I will be analysing & exploring the **World Happiness Index 2021, and the historic World Happiness Index scores from 2005.**\n\nI hope to learn a few things along the way, and I hope anyone reading this will, too.\n\nAs an aside, I will bring in **population** data to investiagte if that has any obvious links to happiness levels.\n\nI'll also explore if countries can improve their positions over time, or if the placings are more or less static.\n\n**Finally**, I will formally cluster our data using K-means & the elbow method to see if we can group countires together based on their scores across the various metrics in the dataset.","e1d4796e":"# What are the happiest countries in the world?\n\n'Happiness' to me seems like an individual metric, something that is hard to generalise. However, some countries perform consistently well on the happiness index rankings. \n\nWe've also noted that 9 of the top 10 are in Europe, and that 7 of the bottom 10 are in Africa.\n\nLet's see which countries top the list currently, and those that are at the bottom.","1274064a":"# Thanks for reading\n\nplease consider upvoting & checking out more of my work if you found this interesting & valuable!\n\nhttps:\/\/www.kaggle.com\/joshuaswords\/\n","be560a14":"Let's now view the top 10 and bottom 10 ...","7640e9c4":"# Have there been changes over time?\n\nDo the unhappy get happier?\n\nIs this just a snapshot of a moment in time? Or are the trends more long-standing?","4d01ea1c":"This region contains many countries that are in vastly different political realities - from war to peace, which of course will have a large effect on happiness scores.\n\nDespite the intercontinental variance, it is actually the case that there are only a few countries to have ever topped the leaderboard. \n\nIt does not seem like this will be changing any time soon either.\n","f024d6b3":"We can also view how our clusters are distributed geographically...","73f0e230":"Happier countries tend to be those with longer life expectancies, and a higher GDP. This is also most of Western Europe.\n\nLet's explicitly highlight Africa now...","23250337":"# Conclusions\n\nWe see that there are many clear distinctions between happy and unhappy countries - at least at the extremes. \n\nGenerally, happier countries tend to:\n\n- be wealthier\n\n- be less populous\n\n- have fewer children\n\n- be older\n\n- be less corrupt\n\n- be more free\n\n- have a lot of social support\n\nOf course, a lot of these findings may come **as a result of** being wealthy, rather than be a cause of happiness in and of themselves.\n\nWe also know that, generally, the happy stay happy, and the unhappy are getting unhappier. \n\nHowever, as we have seen with Bulgaria - this does not have to be the case. Bulgaria improved by over 1.5 points between 2007 and 2020 - the most of any country. So there is hope that unhappy countries can break the historic trends.\n\nLastly, we clustered the data, using K-means and the elbow method. This enables us again to easily visualise and inderstand the differences between nations, and what features lead to high or low happiness index scores.\n","0afbab49":"so within Europe there are indeed countries that might be considered 'unhappy', such as North Cyprus and Greece.\n\nAs I noted above, the North-South split is a well known issue within Europe, and even within countries such as Italy.\n\nLet's explore the variance in happiness index scores across all continents now...","4b107e3a":"As I have noted in the plot, Freedom & Corruption are inversely related: higher corruption tends to be accompanied by lower freedom.\n\nHowever, it is interesting to note that several European nations have high percieved levels of corruption too.\n\n\n# A Continental view\n\nLet's wrap the countries up in to their respective continents to see if we can learn more.\n\nOf course we expect Western Europe to be high, but are there any other continents that perform particularly well or poorly in the happiness rankings?","bedf5ceb":"Europe though seems almost exclusively without worry. Is this true? Doubtful.\n\nLet's explore Europe a little more...","f09c3ae9":"At a glance, we see that many of the happiest countries in the world are indeed in Europe. \n\nAn additional observation is that the countries in Europe in the top 10 are Northern European.","18beccd3":"Let's explore changes over time a little more.\n\nAbove, I took a sample of a few countries. Let's plot their changes in a **slopegraph from 2007 to 2020** to see if we can learn anything","382a050c":"# A global view\n\nWe've now seen clear differences between countries based on severla factors. \n\nLet's see this globally","1c456b59":"The plots above confirm what we saw earlier, with some notable features such as social support.\n\nThat genorisity is percieved as higher in unhappier countries is very interesting.","347f232b":"# Is this the case often?\n\nI will explore temporal change more in depth later, but for now, let's look at the **top 20 countries over the years**.\n\nThis plot shows all scores from 2005 through to the present for the top 20 countries, with their Mean score and their 2021 scores hihglighted specifically.\n\nIt's remarkable that many countries 2021 score is higher than their mean, despite the pandemic.\n\nAlthough the scores do vary, they still remain relatively high.","4b5f0839":"I'll use **K-Means** and  **the Elbow Method** to select the number of clusters.\n\nIn the Elbow method, we are actually varying the number of clusters (K) from 1 \u2013 6 in this caase. \n\nFor each value of K, we are calculating WCSS (Within-Cluster Sum of Square). WCSS is the sum of squared distance between each point and the centroid in a cluster. When we plot the WCSS with the K value, the plot looks like an Elbow. As the number of clusters increases, the WCSS value will start to decrease. WCSS value is largest when K = 1. When we analyze the graph we can see that the graph will rapidly change at a point and thus creating an elbow shape. From this point, the graph starts to move almost parallel to the X-axis. The K value corresponding to this point is the optimal K value or an optimal number of clusters.\n\nA good read and source for above description:\n(https:\/\/www.analyticsvidhya.com\/blog\/2021\/01\/in-depth-intuition-of-k-means-clustering-algorithm-in-machine-learning\/)","99e708b7":"Let's compare the biggest gainer & the biggest loser in terms of the happiness index scores: Bulgaria & Jordan.\n\nWe'll compare how they both got on over the years","a8ba066a":"# Population\n\nLet's bring in some more factors - such as population.\n\nDoes this imapct happiness levels?","54fc2407":"By and large, African countries have lower life expectancy, a lower GDP, and ultimately, lower happiness index scores.\n\n# Other factors\n\nSo GDP & Life expactancy are factors. What else can be considered?","749f9736":"As I suspected, there is of course variance within every continent\/region.\n\nHowever, highlighted above is the Middle East & North Africa because it has such a large spread in happiness scores.\n\nLet's repeat the plot from earlier on to see how each country in that region has scored over the years...","1d686793":"Whilst I explore this idea of temporal change, I want to look at a continental perspective.\n\nFor example, are all countries in Western Europe 'happy'?"}}