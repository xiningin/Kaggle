{"cell_type":{"a21af605":"code","374bb737":"code","44497ca9":"code","4888c1ae":"code","6e4f930e":"code","1c9160a2":"code","348ffc1f":"code","aebc167e":"code","b37f29c1":"code","18375866":"code","6c5accb8":"markdown"},"source":{"a21af605":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","374bb737":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","44497ca9":"import json\n\ndef init_ds(json):\n\n    \n    ds= {}\n    keys = json.keys()\n    for k in keys:\n        ds[k]= []\n    return ds, keys\n\ndef read_json(file):\n    dataset = {}\n    keys = []\n    with open(file) as file_lines:\n        for count, line in enumerate(file_lines):\n            data = json.loads(line.strip())\n            if count ==0:\n                dataset, keys = init_ds(data)\n            for k in keys:\n                dataset[k].append(data[k])\n                \n        return pd.DataFrame(dataset)","4888c1ae":"yelp_business = read_json('..\/input\/yelp-dataset\/yelp_academic_dataset_business.json')\n#yelp_business.head(5)","6e4f930e":"yelp_checkin = read_json('..\/input\/yelp-dataset\/yelp_academic_dataset_checkin.json')\n#yelp_checkin.head(5)","1c9160a2":"yelp_review = read_json('..\/input\/yelp-dataset\/yelp_academic_dataset_review.json')\n#yelp_review.head(5)","348ffc1f":"yelp_tip = read_json('..\/input\/yelp-dataset\/yelp_academic_dataset_tip.json')\n#yelp_tip.head(5)","aebc167e":"yelp_user = read_json('..\/input\/yelp-dataset\/yelp_academic_dataset_user.json')\n#yelp_user.head(5)","b37f29c1":"top_reviewed = yelp_business[yelp_business[\"stars\"]>4]\nplt.figure(figsize=(15,7))\nsns.countplot(top_reviewed[\"name\"],hue=top_reviewed[\"stars\"],palette='winter')\nplt.legend(bbox_to_anchor=(1.00, 1))\nplt.show()","18375866":"sns.pairplot(data=top_reviewed,hue=\"stars\")\nplt.show()","6c5accb8":"> Problem Statement\nIn this project, you will create a recommendation system for restaurants using collaborative filtering (CF). You will be using the Yelp Dataset for this.\n\nThe general structure of a recommendation system is that there are users and there are items. Users express explicit or implicit preferences towards certain items. CF thus relies on users' past behavior.\n\nThe data: https:\/\/www.yelp.com\/dataset\n\nPlease read about the dataset here: https:\/\/www.yelp.com\/dataset\/documentation\/main (This is important for you to understand the data well enough to do EDA on it)\n\nOutline of this Project We want you to work on these two subtopics for the project:\n\nBase Model: The base model is to answer the question for the user - \"give me more restaurants like this one\" Create a database of item-item similarities. Build a CF-based Recommender system using Stochastic Gradient Descent. (70% of the project score)\n\nYour way to improve the project - do further data analysis on the dataset and see if you can make an improvement to the base model created in part 1. This can be adding new features to the dataset to recommend the specific restaurant to users or to classify between two overlapping categories like nightlife and bars or restaurants and fast-food or checking how well a new restaurant will do in a certain neighborhood (30% of the project score)\n\nDon't Overscope \ud83d\ude45\u200d\u2640\ufe0f\ud83d\ude45\u200d\u2642\ufe0f This project can be either very simple or very challenging depending on how far you'd like to go. It's impossible to try everything in one and a half weeks, so scope your project wisely. The bottom line is every group member should completely understand everything the group attempted. Don't use a model\/algorithm you don't understand just because it performs better. The goal of the project is to practice what you learned, hone your research skills, and \u2013 most importantly \u2013 have great fun!\n\nNOTE - Remember that the scope of this project is algorithms covered in this course. You may use one additional algorithm of your choice, provided you are fully aware of how it works."}}