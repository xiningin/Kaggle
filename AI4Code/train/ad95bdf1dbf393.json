{"cell_type":{"e98beec0":"code","7783afe7":"code","bca6a914":"code","5d651806":"code","87c9d48d":"code","af35aaa4":"code","d06bd3a2":"code","6bb16e43":"code","0440e321":"code","7c4f0eb8":"code","6bf536f0":"code","18e85575":"code","ddfe09b6":"code","1478a20d":"code","8cc91a82":"code","978eef94":"code","e15e47e0":"code","e6fcd303":"code","84358921":"code","0ce77ec0":"code","5f9e0c69":"code","29d4ebb7":"code","e1db7dde":"code","28759643":"code","da1b2a28":"code","a79134cf":"code","7911ae3f":"code","eb398420":"code","31bb6460":"code","b312660e":"code","1aeea0ea":"code","79669f7d":"code","b9407c99":"code","1d85ca2a":"markdown","e3ddb7aa":"markdown","c1fda2c2":"markdown","1c1e797f":"markdown","098c2908":"markdown","d2fe5abc":"markdown","fd5abe2a":"markdown","b3927f08":"markdown","60338367":"markdown","7020e190":"markdown","93bc6ab1":"markdown","d96c2f1e":"markdown"},"source":{"e98beec0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7783afe7":"import numpy as np \nimport pandas as pd \nimport math\nimport glob\nimport os\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport wandb\n\nimport folium\nfrom geopy.geocoders import Nominatim\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster, FastMarkerCluster\nfrom wordcloud import WordCloud, STOPWORDS \n","bca6a914":"products_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\nproducts_df.head()","5d651806":"districts_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\ndistricts_df.head()","87c9d48d":"path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \nengagement_df = pd.concat(li)\nengagement_df = engagement_df.reset_index(drop=True)\nengagement_df.head()","af35aaa4":"msno.bar(products_df,color='#4895ef', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","d06bd3a2":"msno.bar(districts_df,color='#f72585', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","6bb16e43":"msno.bar(engagement_df,color='#FF7F7F', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","0440e321":"plt.figure(figsize=(16, 10))\nsns.countplot(y=\"state\",data=districts_df,order=districts_df.state.value_counts().index,palette=\"Blues\",linewidth=3)\nplt.title(\"State Distribution\",font=\"Serif\", size=20)\nplt.show()","7c4f0eb8":"fig, ax  = plt.subplots(figsize=(16, 8))\nfig.suptitle('Locale Distribution', size = 20, font=\"Serif\")\nexplode = (0.05, 0.05, 0.05, 0.05)\nlabels = list(districts_df.locale.value_counts().index)\nsizes = districts_df.locale.value_counts().values\nax.pie(sizes, explode=explode,startangle=60, labels=labels,autopct='%1.0f%%', pctdistance=0.7, colors=[\"#FFFF33\",\"#ff9100\",\"#eaaa00\",\"#6d6875\"])\nax.add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","6bf536f0":"plt.figure(figsize=(16, 10))\nsns.countplot(y='Provider\/Company Name', data=products_df, order=products_df[\"Provider\/Company Name\"].value_counts().index[:10],palette = 'cool')\nplt.title(\"Top 10 Provider\/Company Names\",font=\"Serif\", size=20)\nplt.show()","18e85575":"c1=c2=c3=0\nfor s in products_df[\"Sector(s)\"]:\n    if(not pd.isnull(s)):\n        s = s.split(\";\")\n        for i in range(len(s)):\n            sub = s[i].strip()\n            if(sub == 'PreK-12'): c1+=1\n            if(sub == 'Higher Ed'): c2+=1\n            if(sub == 'Corporate'): c3+=1\n\nfig, ax  = plt.subplots(figsize=(16, 8))\nfig.suptitle('Sector Distribution', size = 20, font=\"Serif\")\nexplode = (0.05, 0.05, 0.05)\nlabels = ['PreK-12','Higher Ed','Corporate']\nsizes = [c1,c2, c3]\nax.pie(sizes, explode=explode,startangle=60, labels=labels,autopct='%1.2f%%', pctdistance=0.7, colors=[\"#ff228a\",\"#20b1fd\",\"#ffb703\"])\nax.add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","ddfe09b6":"primary_essential_main = []\nprimary_essential_sub = []\nfor s in products_df[\"Primary Essential Function\"]:\n    if(not pd.isnull(s)):\n        s1 = s.split(\"-\",1)[0].strip()\n        primary_essential_main.append(s1)\n    else:\n        primary_essential_main.append(np.nan)\n    \n    if(not pd.isnull(s)):\n        s2 = s.split(\"-\",1)[1].strip()\n        primary_essential_sub.append(s2)\n    else:\n        primary_essential_sub.append(np.nan)\n\nproducts_df[\"primary_essential_main\"] = primary_essential_main\nproducts_df[\"primary_essential_sub\"] = primary_essential_sub","1478a20d":"c1=c2=c3=0\n\nfor s in products_df[\"primary_essential_main\"]:\n    if(not pd.isnull(s)):\n        c1 += s.count(\"CM\")\n        c2 += s.count(\"LC\")\n        c3 += s.count(\"SDO\")\n\nfig, ax  = plt.subplots(figsize=(16, 8))\nfig.suptitle('Primary Essential Function', size = 20, font=\"Serif\")\nexplode = (0.05, 0.05, 0.05)\nlabels = ['CM','LC','SDO']\nsizes = [c1, c2, c3]\nax.pie(sizes, explode=explode,startangle=60, labels=labels,autopct='%1.2f%%', pctdistance=0.7, colors=[\"#18ff9f\",\"#2cfbff\",\"#ffb703\"])\nax.add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","8cc91a82":"plt.figure(figsize=(16, 20))\nsns.countplot(y='primary_essential_sub', data=products_df, order=products_df[\"primary_essential_sub\"].value_counts().index,color = '#d8bbff')\nplt.title(\"Primary Essential Function(Sub)\",font=\"Serif\", size=20)\nplt.show()","978eef94":"engagement_df['time'] = pd.to_datetime(engagement_df['time'])","e15e47e0":"print(products_df[\"LP ID\"].nunique())\nprint(engagement_df[\"lp_id\"].nunique())","e6fcd303":"products_engagement_data = pd.merge(products_df, engagement_df, left_on='LP ID', right_on='lp_id')\nproducts_engagement_data.head()","84358921":"print(districts_df[\"district_id\"].nunique())\nprint(engagement_df[\"district_id\"].nunique())","0ce77ec0":"engagement_df[\"district_id\"] = engagement_df[\"district_id\"].astype(str).astype(int)\ndistricts_engagement_data = pd.merge(districts_df, engagement_df, left_on='district_id', right_on='district_id')\ndistricts_engagement_data.head()","5f9e0c69":"locations=pd.DataFrame({\"Name\":districts_df['state'].unique()})","29d4ebb7":"geolocator=Nominatim(user_agent=\"app\")\nlat=[]\nlon=[]\nfor location in locations['Name']:\n    location = geolocator.geocode(location)    \n    if location is None:\n        lat.append(np.nan)\n        lon.append(np.nan)\n    else:\n        lat.append(location.latitude)\n        lon.append(location.longitude)","e1db7dde":"locations['lat']=lat\nlocations['lon']=lon","28759643":"Rest_locations=pd.DataFrame(districts_df['state'].value_counts().reset_index())","da1b2a28":"Rest_locations.columns=['Name','count']\nfinal_loc=Rest_locations.merge(locations,on='Name',how=\"left\").dropna()\nfinal_loc.head(15).style.set_caption(\"Locations Dataframe\").set_properties(**{'background-color': 'lightgreen',\n                           'color': 'darkblue','border': '1.5px solid black'})","a79134cf":"def generateBaseMap(default_location=[37.0902, -95.7129], default_zoom_start=4):\n    base_map = folium.Map(location=default_location, zoom_start=default_zoom_start)\n    return base_map","7911ae3f":"basemap=generateBaseMap()","eb398420":"HeatMap(final_loc[['lat','lon','count']],zoom=20,radius=20).add_to(basemap)","31bb6460":"basemap","b312660e":"FastMarkerCluster(data=final_loc[['lat','lon','count']].values.tolist()).add_to(basemap)\n\nbasemap","1aeea0ea":"cloud = WordCloud(width=1440, height=1080,stopwords={'nan'}).generate(\" \".join(districts_df['state'].astype(str)))\nplt.figure(figsize=(10, 15))\nplt.imshow(cloud)\nplt.axis('off')","79669f7d":"cloud = WordCloud(width=1440, height=1080,stopwords={'nan'}).generate(\" \".join(products_df['Product Name'].astype(str)))\nplt.figure(figsize=(10, 10))\nplt.imshow(cloud)\nplt.axis('off')","b9407c99":"cloud = WordCloud(width=1440, height=1080,stopwords={'nan'}).generate(\" \".join(products_df['Provider\/Company Name'].astype(str)))\nplt.figure(figsize=(10, 10))\nplt.imshow(cloud)\nplt.axis('off')","1d85ca2a":"**Basic Wordclouds**","e3ddb7aa":"**Importing Libraries \ud83d\udcda**","c1fda2c2":"**EDA \ud83d\udcca**","1c1e797f":"***Reading Data***","098c2908":"**Geo Analysis**","d2fe5abc":"Product information data\nThe product file products_info.csv includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy.\n\n\ud83d\udcdd Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n**Name**                     -->        **Description**\n* LP ID                      -->        The unique identifier of the product\n* URL                        -->        Web Link to the specific product\n* Product Name               -->        Name of the specific product\n* Provider\/Company Name      -->        Name of the product provider\n* Sector(s)                  -->        Sector of education where the product is used\n* Primary Essential Function -> The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled\n","fd5abe2a":"Will update the notebook soon with next version until then take care, upvote if you like the exploration.","b3927f08":"**Engagement Data**\n\nThe engagement data are aggregated at school district level, and each file in the folder engagement_data represents data from one school district*.\n\n\ud83d\udcddThe 4-digit file name represents district_id which can be used to link to district information in district_info.csv.\n\n\ud83d\udcddThe lp_id can be used to link to product information in product_info.csv\n\n![image.png](attachment:135d9d87-67c0-44d2-8282-19ae59d0c427.png)","60338367":"**Missing values\ud83d\udd2e**","7020e190":"**Merging Data**","93bc6ab1":"**District information data**\n\nThe district file districts_info.csv includes information about the characteristics of school districts, including data from\n\nNCES (2018-19),\nFCC (Dec 2018), and\nEdunomics Lab.\nSteps taken to preserve Privacy \ud83d\udd12\n\nIdentifiable information about the school districts has been removed.\nAn open source tool ARX (Prasser et al. 2020) was used to transform several data fields and reduce the risks of re-identification.\n\ud83d\udcdd For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset.\n![image.png](attachment:cffd1735-4547-4850-9f0c-c1c675415516.png)","d96c2f1e":"Hello Friends, welcome to my Basic EDA of Impact of Covid on digital learning."}}