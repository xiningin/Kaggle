{"cell_type":{"51a17490":"code","caf54620":"code","e9bdaa0a":"code","54e43329":"code","eb7df14e":"code","00bb9857":"code","1b550da3":"code","447bd5c5":"code","7356756a":"code","fe52786c":"code","c09d0570":"code","5d2d7f08":"code","b74826cc":"code","b0dc0f23":"code","94bf4257":"code","273c4509":"code","69da0882":"code","37190145":"code","a652fb36":"code","67c730dc":"code","928df98e":"code","2c571065":"code","1dad6517":"markdown","688b6fa8":"markdown","f160b603":"markdown","8e8f40cd":"markdown","bd43297c":"markdown","a07d8bc0":"markdown","5bf8a716":"markdown","b7748c3b":"markdown","4dc5cbb4":"markdown","a20c49ec":"markdown","b9245a9b":"markdown","e15798ec":"markdown","c103419e":"markdown","7cb9ae5b":"markdown","f852e68d":"markdown","91514cce":"markdown","d84845d1":"markdown","4f31b7ce":"markdown","21987dcf":"markdown","5d230504":"markdown","3db9d35d":"markdown","ebc44f28":"markdown"},"source":{"51a17490":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","caf54620":"data = pd.read_csv('\/kaggle\/input\/woman-murdering-in-turkey-20082020\/women_who_have_been_murdered_in_turkey.csv')\ndata.head() ","e9bdaa0a":"data = data.replace({\"^\\s*|\\s*$\":\"\"}, regex=True) #verilerimizdeki bosluklar\u0131 yok edebilmek i\u00e7in\nyear = data['year'] = data['year'].astype('int') #year\u0131m\u0131z\u0131n degeri float olarak g\u00f6r\u00fcn\u00fcyor o y\u00fczden int e \u00e7evirdik\ndata['city'] = data['city'].astype('str')\n","54e43329":"data.columns","eb7df14e":"data.info()","00bb9857":"data.tail()","1b550da3":"data\n","447bd5c5":"yillaragoreolum = data.year.value_counts().head(13).sort_index()\nyillaragoreolum","7356756a":"kimtarafindan = data.killer1.value_counts()\nkimtarafindan.head(15)","fe52786c":"data.statusofkiller.value_counts().head(7)","c09d0570":"data[\n    ((data.killer1 == 'Kocasi') | (data.killer2 == 'Kocasi')) &\n    ((data.killingway1 == 'Atesli Silah') | (data.killingway2 == 'Atesli Silah')|(data.killingway3 == 'Atesli Silah'))\n]","5d2d7f08":"yillaragoreolenkadinlar =data.year.plot(kind = 'hist' , bins = 30 , figsize = (10,6) , range = (2008 , 2020) , label = 'Yil' )\nyillaragoreolenkadinlar.set_title(\"Ocak 2008 ve A\u011fustos 2020 Tarihleri Aras\u0131nda \u00d6len Kad\u0131nlar\" , fontsize = 12)\nyillaragoreolenkadinlar.set_xlabel(\"Y\u0131l\", fontsize = 12)\nyillaragoreolenkadinlar.set_ylabel(\"\u00d6len Kad\u0131nlar\", fontsize = 12)\nplt.show()","b74826cc":"degerler = data.killingway1.value_counts().head(7)\nnasiloldurulduler = degerler.plot(kind='pie'  , figsize = (9, 8) , startangle = 60 , shadow = False , autopct = \"%1.1f%%\")\nnasiloldurulduler.set_title(\"\u00d6ld\u00fcr\u00fclme \u015eekli\" , fontsize = 15)\nnasiloldurulduler.set_ylabel(\"\" , fontsize = 15)\nplt.show()","b0dc0f23":"degerler2 = data.protectionorder.value_counts().head(3)\nkorumakarari = degerler2.plot(kind='pie'  , figsize = (9, 8) , startangle = 60 , shadow = False , autopct = \"%1.1f%%\")\nkorumakarari.set_title(\"Koruma Karar\u0131 Durumu\" , fontsize = 15)\nkorumakarari.set_ylabel(\"\" , fontsize = 15)\nplt.show()","94bf4257":"degerler3 = data.statusofkiller.value_counts().head(6)\nkatildurumu = degerler3.plot(kind='pie'  , figsize = (9, 8) , startangle = 60 , shadow = False , autopct = \"%1.1f%%\")\nkatildurumu.set_title(\"Katillerin Durumu\" , fontsize = 15)\nkatildurumu.set_ylabel(\"\" , fontsize = 15)\nplt.show()","273c4509":"# K\u0131z\u0131 ve O\u011flu Taraf\u0131ndan\nailesi1 = data[(data['killer1'] == 'Oglu') | (data['killer1'] == 'Kizi')]\nailesi1filtre = ailesi1[['year','killer1']]\nailesi1filtre.year.value_counts().head(13).sort_index()\nlisteailesi1 = list(ailesi1filtre.year.value_counts().head(13).sort_index())\nlisteailesi1.insert(0,0) #Baz\u0131 y\u0131llarda veri yok bu y\u00fczden o y\u0131llara 0 ekledik\n#Abisi , Kardesi , Erkek Kardesi Taraf\u0131ndan\nailesi2 = data[(data['killer1'] == 'Abisi') | (data['killer1'] == 'Kardesi') | (data['killer1'] == 'Erkek Kardesi') ]\nailesi2filtre = ailesi2[['year','killer1']]\nailesi2filtre.year.value_counts().head(13).sort_index()\nlisteailesi2 = list(ailesi2filtre.year.value_counts().head(13).sort_index())\nlisteailesi2.append(0)\n# Annesi Babas\u0131 Taraf\u0131ndan\nailesi3 = data[(data['killer1'] == 'Babasi') | (data['killer1'] == 'Annesi') ]\nailesi3filtre = ailesi3[['year','killer1']]\nailesi3filtre.year.value_counts().head(13).sort_index()\nlisteailesi3 = list(ailesi3filtre.year.value_counts().head(13).sort_index())\nlisteailesi3.insert(4,0)\n#Torunu Taraf\u0131ndan\nailesi4 = data[(data['killer1'] == 'Torunu' ) | (data['killer1'] == 'Yegeni') | (data['killer1'] == 'Amcasi') | (data['killer1'] == 'Dayisi')|(data['killer1'] == 'Kuzeni') | (data['killer1'] == 'Akrabasi')]\nailesi4filtre = ailesi4[['year','killer1']]\nailesi4filtre.year.value_counts().head(13).sort_index()\nlisteailesi4 = list(ailesi4filtre.year.value_counts().head(13).sort_index())\n#Verimizi Listeye Alal\u0131m\ndatamiz1 = []\ndatamiz1.append(listeailesi1)\ndatamiz1.append(listeailesi2)\ndatamiz1.append(listeailesi3)\ndatamiz1.append(listeailesi4) \n# X axisindeki de\u011ferleri atayal\u0131m\nbarWidth = 0.22\nr1 = np.arange(len(datamiz1[0]))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n#plotu olu\u015ftural\u0131m ve g\u00f6r\u00fcnt\u00fcleyelim\nplt.figure(figsize=(18,9))\nplt.grid(zorder = 0)\nplt.bar(r1, datamiz1[0], color='#1089bc', width=barWidth, edgecolor='white', label='\u00c7ocuklar\u0131 Taraf\u0131ndan')\nplt.bar(r2, datamiz1[1] , color='#ff3300', width=barWidth, edgecolor='white', label='Karde\u015fi Taraf\u0131ndan')\nplt.bar(r3, datamiz1[2], color='#ffa500', width=barWidth, edgecolor='white', label='Annesi veya Babas\u0131 Taraf\u0131ndan')\nplt.bar(r4, datamiz1[3], color='purple', width=barWidth, edgecolor='white', label='Akrabalar\u0131 Taraf\u0131ndan')\nplt.xlabel('1. Dereceden Kan Ba\u011f\u0131 Olanlar Taraf\u0131ndan \u00d6ld\u00fcr\u00fclen Kad\u0131nlar', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(datamiz1[0]))], ['2008', '2009', '2010', '2011', '2012','2013', '2014', '2015', '2016', '2017','2018', '2019', '2020'])\nplt.legend()\nplt.show()\n","69da0882":"# Kocas\u0131 Taraf\u0131ndan \u00d6ld\u00fcr\u00fclenler\nkocasitarafindan = data[data['killer1'] == 'Kocasi' ]\nkocasitarafindanfiltre = kocasitarafindan[['year','killer1']]\nkocasitarafindanfiltre.year.value_counts().head(13).sort_index()\nlistekocasi = list(kocasitarafindanfiltre.year.value_counts().head(13).sort_index())\n#Eski Kocas\u0131 Taraf\u0131ndan \u00d6ld\u00fcr\u00fclenler\neskikocasitarafindan = data[data['killer1'] == 'Eski Kocasi' ]\neskikocasitarafindanfiltre = eskikocasitarafindan[['year','killer1']]\neskikocasitarafindanfiltre.year.value_counts().head(13).sort_index()\nlisteeskikocasi = list(eskikocasitarafindanfiltre.year.value_counts().head(13).sort_index())\n#Eski Sevgilisi Taraf\u0131ndan \u00d6ld\u00fcr\u00fclenler\neskisevgilisitarafindan = data[(data['killer1'] == 'Eski Sevgilisi') ]\neskisevgilisitarafindanfiltre = eskisevgilisitarafindan[['year','killer1']]\neskisevgilisitarafindanfiltre.year.value_counts().head(13).sort_index()        \nlisteeskisevgilisi = list(eskisevgilisitarafindanfiltre.year.value_counts().head(13).sort_index())\n#Sevgilisi Taraf\u0131ndan \u00d6ld\u00fcr\u00fclenler\nsevgilisitarafindan = data[data['killer1'] == 'Sevgilisi' ]\nsevgilisitarafindanfiltre = sevgilisitarafindan[['year','killer1']]\nsevgilisitarafindanfiltre.year.value_counts().head(13).sort_index()\nlistesevgilisi = list(sevgilisitarafindanfiltre.year.value_counts().head(13).sort_index())\n#Verimizi Listeye Alal\u0131m\ndatamiz = []\ndatamiz.append(listeeskisevgilisi)\ndatamiz.append(listeeskikocasi)\ndatamiz.append(listesevgilisi)\ndatamiz.append(listekocasi)\n# X axisindeki de\u011ferleri atayal\u0131m\nbarWidth = 0.22\nr1 = np.arange(len(datamiz[0]))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n#plotu olu\u015ftural\u0131m ve g\u00f6r\u00fcnt\u00fcleyelim\nplt.figure(figsize=(18,9))\nplt.grid(zorder = 0)\nplt.bar(r1, datamiz[0], color='#1089bc', width=barWidth, edgecolor='white', label='Eski Sevgilisi Taraf\u0131ndan')\nplt.bar(r2, datamiz[1] , color='#ff3300', width=barWidth, edgecolor='white', label='Eski Kocas\u0131 Taraf\u0131ndan')\nplt.bar(r3, datamiz[2], color='#ffa500', width=barWidth, edgecolor='white', label='Sevgilisi Taraf\u0131ndan')\nplt.bar(r4, datamiz[3], color='purple', width=barWidth, edgecolor='white', label='Kocas\u0131 Taraf\u0131ndan')\nplt.xlabel('Duygusal \u0130li\u015fki Kurulan \u0130nsanlar Taraf\u0131ndan \u00d6ld\u00fcr\u00fclen Kad\u0131nlar', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(datamiz[0]))], ['2008', '2009', '2010', '2011', '2012','2013', '2014', '2015', '2016', '2017','2018', '2019', '2020'])\nplt.legend()\nplt.show()\n","37190145":"Bolgeler= pd.DataFrame({'AkdenizBolgesi': ['Adana', 'Antalya', 'Mersin' , 'Burdur' , 'Hatay' , 'Isparta' , 'Kahramanmaras' , 'Osmaniye', '','','','','','','','','',''], \n              'EgeBolgesi': ['Izmir', 'Mugla' , 'Aydin' , 'Afyonkarahisar' , 'Denizli', 'Kutahya' , 'Manisa', 'Usak','','','','','','','','','',''], \n              'MarmaraBolgesi' : ['Balikesir', 'Bilecik' , 'Bursa' , 'Canakkale', 'Edirne', 'Istanbul', 'Kirklareli', 'Kocaeli' , 'Izmit', 'Sakarya', 'Tekirda\u011f' ,'Yalova','','','','','',''],\n              'DoguAnadoluBolgesi' : ['Agri', 'Ardahan', 'Bingol', 'Bitlis', 'Elazig', 'Erzincan' , 'Erzurum', 'Hakkari', 'Igdir', 'Kars', 'Malatya','Mus', 'Tunceli', 'Van','','','',''] ,\n              'IcAnadoluBolgesi': ['Aksaray', 'Ankara', 'Cankiri', 'Eskisehir', 'Karaman', 'Kayseri', 'Kirikkale', 'Kirsehir', 'Konya', 'Nevsehir', 'Nigde', 'Sivas','Yozgat','','','','',''],\n              'GuneydoguAnadoluBolgesi' : ['Adiyaman', 'Batman', 'Diyarbakir', 'Gaziantep', 'Mardin', 'Siirt', 'Sanliurfa', 'Urfa', 'Sirnak', 'Kilis','','','','','','','',''],\n              'KaradenizBolgesi' : ['Trabzon' , 'Amasya', 'Artvin', 'Bart\u0131n' , 'Bayburt', 'Bolu', 'Corum', 'Duzce', 'Giresun', 'Gumushane', 'Karabuk', 'Kastamonu', 'Ordu', 'Rize', 'Samsun', 'Sinop', 'Tokat', 'Zonguldak'] })\nakdenizcount = 0 \negecount = 0\nmarmaracount = 0\ndoguanadolucount=0 \nicanadolucount = 0\nguneydogucount=0\nkaradenizcount =0\nnancount= 0\nfor i in range (0,2972):\n    for j in range (0, 18):\n    #if data.city == deneme.AkdenizBolgesi[i]:\n        #count = count + \n        x = np.where((data.city[i] == Bolgeler.AkdenizBolgesi[j]), 1 ,0)\n        if x :\n            akdenizcount = akdenizcount +1\n            break\n        else :\n            y = np.where((data.city[i] == Bolgeler.EgeBolgesi[j]), 1 , 0)\n            if y : \n                egecount= egecount +1\n                break\n            else : \n                z = np.where((data.city[i] == Bolgeler.MarmaraBolgesi[j]), 1 ,0)\n                if z : \n                    marmaracount= marmaracount +1\n                    break\n                else:\n                    t = np.where((data.city[i] == Bolgeler.DoguAnadoluBolgesi[j]), 1 , 0)\n                    if t :\n                        doguanadolucount = doguanadolucount +1\n                        break\n                    else :    \n                        w = np.where((data.city[i] == Bolgeler.IcAnadoluBolgesi[j]), 1 ,0)\n                        if w : \n                            icanadolucount = icanadolucount + 1 \n                            break\n                        else:\n                            r = np.where((data.city[i] == Bolgeler.GuneydoguAnadoluBolgesi[j]), 1 , 0)\n                            if r :\n                                guneydogucount = guneydogucount + 1 \n                                break\n                            else: \n                                v = np.where((data.city[i] == Bolgeler.KaradenizBolgesi[j]), 1 , 0)\n                                if v: \n                                    karadenizcount = karadenizcount +1\n                                    break\n                                else:\n                                    if( j == 17):\n                                        nancount = nancount +1\nbolgeyegoreliste = [akdenizcount,egecount,marmaracount,icanadolucount,doguanadolucount,guneydogucount,karadenizcount,nancount]\nbolgeyegoreliste.sort()\nbolgeyegoreliste = bolgeyegoreliste[::-1]\nbolgeyegoreliste","a652fb36":"data.city.value_counts().head(10)","67c730dc":"counts = pd.Series([1220, 482, 282, 280, 250, 179, 169, 110],index = ['','','','','','','',''] )\n\nexplode = (0.075, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,0.025)\ncolors = ['#191970', '#001CF0', '#0038E2', '#0055D4', '#0071C6', '#008DB8', '#00AAAA',\n          '#00C69C', '#00E28E', '#00FF80','#00FF80' ,]\nindex1 = ['Tespit Edilemeyen','Marmara','Akdeniz','Ege','\u0130\u00e7 Anadolu','G\u00fcneydo\u011fu Anadolu','Karadeniz','Do\u011fu Anadolu']\ncounts.plot(kind='pie', fontsize=14, colors=colors, explode=explode,figsize = (8,8), autopct = \"%1.1f%%\" ,startangle = 15 ,textprops = dict(color = 'w'))\nplt.axis('equal')\nplt.ylabel('')\nplt.legend(labels=index1, loc=\"upper right\")\nplt.show()","928df98e":"degerler3 = data.city.value_counts().head(10)\ncolors = ['#191970', '#001CF0', '#0038E2', '#0055D4', '#0071C6', '#008DB8', '#00AAAA',\n          '#00C69C', '#00E28E', '#00FF80','#00FF80' ,]\nexplode = (0.075, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,0.025, 0.025,0.025)\nsehirler = degerler3.plot(kind='pie'  , textprops = dict(color = 'w'),figsize = (8, 8),colors = colors ,explode = explode, startangle = 20 , shadow = False , autopct = \"%1.1f%%\", fontsize=14)\nsehirler.set_title(\"\u0130lk 10 ile g\u00f6re \u00f6l\u00fcm oranlar\u0131\")\nsehirler.set_ylabel(\"\" )\nindexsehirler = ['Bilinemeyen','\u0130stanbul','\u0130zmir','Ankara','Bursa','Antalya','Adana','Konya','Gaziantep' , 'Mersin' ]\nplt.axis('equal')\nplt.legend(labels = indexsehirler , loc = 'upper right' , fontsize = 10)\nplt.ylabel('')\nplt.show()","2c571065":"\ncounts = data.why1.value_counts().head(10)\nexplode = (0.075, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,0.025,0.025,0.025)\ncolors = ['#7a0100', '#d30000', '#ee2c2c', '#ff3030', '#ff4040', '#ff5656', '#ff6b6b',\n          '#ff8484', '#ffaaaa', '#fcbfbf','#00FF80' ,]\nindex = ['Tespit Edilemeyen','Tart\u0131\u015fma','K\u0131skan\u00e7l\u0131k','Bo\u015fanma Talebi','Reddedilme','Para','Bo\u015fanma','Erke\u011fin istedi\u011fi bir \u015feyin ger\u00e7ekle\u015fmemesi','Ayr\u0131lma Talebi','Namus']\ncounts.plot(kind='pie', fontsize=14, colors=colors, explode=explode,figsize = (10,8), autopct = \"%1.1f%%\" ,startangle = 20,textprops = dict(color = 'w') )\nplt.axis('equal')\nplt.ylabel('')\nplt.legend(labels = index,loc = 'upper right')\nplt.show()","1dad6517":"<a id = \"14\"><\/a>\n<font color = \"#800000\">\n## **\u00d6ld\u00fcr\u00fclme Sebeplerine G\u00f6re Pie Chart Grafi\u011fi**\n","688b6fa8":"<a id = \"8\"><\/a>\n<font color = \"#800000\">\n### **Katillerin Durumu Pie Chart Grafi\u011fi**\n","f160b603":"<a id = '3'> <\/a>\n## Say\u0131sal De\u011ferlerin Belirlenmesi","8e8f40cd":"# T\u00fcrkiye'de Ocak 2008 ve A\u011fustos 2020 Aras\u0131ndaki Kad\u0131n Cinayetleri\n\n<font color = \"blue\">\n\u0130\u00e7erik:\n\n1. [Verinin Y\u00fcklenmesi ve Kontrol Edilmesi](#1)\n2. [Veri Tan\u0131mlamas\u0131](#2)\n3. [Say\u0131sal De\u011ferlerin Belirlenmesi](#3)\n4. [Sorgular ve Verilerin G\u00f6rselle\u015ftirilmesi](#4)\n    * [Ocak 2008 ve A\u011fustos 2020 Tarihleri Aras\u0131nda \u00d6len Kad\u0131nlar Histogram Grafi\u011fi](#5)\n    * [\u00d6ld\u00fcr\u00fclme \u015eekli Pie Chart Grafi\u011fi](#6)\n    * [Koruma Karar\u0131 Pie Chart Grafi\u011fi](#7)\n    * [Katillerin Durumu Pie Chart Grafi\u011fi](#8)\n    * [Kim Taraf\u0131ndan \u00d6ld\u00fcr\u00fcld\u00fc\u011f\u00fc Bar Plot Grafi\u011fi](#9)\n        * [1. Dereceden Kan Ba\u011f\u0131 Olanlar Taraf\u0131ndan](#10)\n        * [Duygusal \u0130li\u015fki Kurulan \u0130nsanlar Taraf\u0131ndan](#11)\n    * [B\u00f6lgelere G\u00f6re Pie Chart Grafi\u011fi](#12)\n    * [Sehirlere G\u00f6re Pie Chart Grafi\u011fi](#13)\n    * [\u00d6ld\u00fcr\u00fclme Sebeplerine G\u00f6re Pie Chart Grafi\u011fi](#14) \n5. [Kaynaklar](#15)\n6. [Teammate](#16)\n","bd43297c":"<a id = \"12\"><\/a>\n<font color = \"#800000\">\n## **B\u00f6lgelere G\u00f6re Pie Chart Grafi\u011fi**\n","a07d8bc0":" <a id='4'><\/a>\n## Sorgular ve Verilerin G\u00f6rselle\u015ftirilmesi ","5bf8a716":"<a id = '16' > <\/a>\n## Teammates\n\n* Ya\u011fmur Sezen Demir\n* B\u00fc\u015fra Durak \n","b7748c3b":"<a id = '2'><\/a> \n## **Verilerin Tan\u0131mlanmas\u0131**\n\n<font color = \"red\">A\u00c7IKLAMA:<\/font>\n<font color = \"blue\">Veriler internetteki haber sitelerinden al\u0131nm\u0131\u015f olup, y\u00fczde y\u00fcz do\u011fruluk pay\u0131 i\u00e7erememektedir. Baz\u0131 veriler ne yaz\u0131k ki eksik olup daha sonras\u0131nda kamuoyuna bildirilmedi\u011fi i\u00e7in ula\u015f\u0131lamamaktad\u0131r. Veriseti Ya\u011fmur Sezen Demir ve B\u00fc\u015fra Durak taraf\u0131ndan internetteki verilerin Selenium arac\u0131l\u0131\u011f\u0131 ile Excel'e \u00e7ekilmesi ile olu\u015fturulmu\u015ftur.<\/font>\n\n- **id: Tan\u0131mlay\u0131c\u0131**\n- **city: Hangi \u015eehirde \u00d6ld\u00fcr\u00fcld\u00fc\u011f\u00fc**\n- **age: Re\u015fit \/ Re\u015fit De\u011fil**\n- **date: Hangi Tarihte Ger\u00e7ekle\u015fti\u011fi**\n- **protectionorder: Koruma Karar\u0131**\n- **why1, why2: \u00d6ld\u00fcr\u00fclme Sebebi**\n- **killer1, killer2: Kim Taraf\u0131ndan \u00d6ld\u00fcr\u00fcld\u00fc\u011f\u00fc**\n- **killingway1, killingway2, killingway3: Makt\u00fcl\u00fcn \u00d6ld\u00fcr\u00fclme \u015eekli**\n- **statusofkiller: Katilin Durumu**\n- **year: Hangi Y\u0131lda Ger\u00e7ekle\u015fti\u011fi**\n","4dc5cbb4":"<a id = \"13\"><\/a>\n<font color = \"#800000\">\n## **\u015eehirlere G\u00f6re Pie Chart Grafi\u011fi**\n","a20c49ec":"<font color = \"#000045\"><b> Yukar\u0131daki verilerde katillerin durumu g\u00f6r\u00fclmektedir. <\/b>","b9245a9b":"<a id = \"10\"><\/a>\n### **1. Dereceden Kan Ba\u011f\u0131 Olanlar Taraf\u0131ndan**","e15798ec":"<font color = '#000045'> <b> Verilerde ilk 7 \u00f6ld\u00fcrme arac\u0131na bak\u0131ld\u0131\u011f\u0131nda neredeyse yar\u0131s\u0131n\u0131n ate\u015fli silah oldu\u011fu g\u00f6r\u00fclmektedir. <\/b> <\/font>","c103419e":"<font color = \"#000045\"> <b> Yukar\u0131da yaz\u0131lan sorguda kocas\u0131 taraf\u0131ndan 2008-2020 tarihleri aras\u0131nda ate\u015fli silahla \u00f6ld\u00fcr\u00fclenler listelenmi\u015ftir. <\/b>","7cb9ae5b":"<a id = \"9\"><\/a>\n<font color = \"#800000\">\n### **Kim Taraf\u0131ndan \u00d6ld\u00fcr\u00fcld\u00fc\u011f\u00fc Bar Plot Grafi\u011fi**","f852e68d":"<a id = \"7\"><\/a>\n<font color = \"#800000\">\n### **Koruma Karar\u0131 Pie Chart Grafi\u011fi**\n","91514cce":"<a id = \"11\"><\/a>\n### **Duygusal \u0130li\u015fki Kurulan \u0130nsanlar Taraf\u0131ndan**\n","d84845d1":"<font color = \"#000045\"><b> Yukar\u0131daki verilerde hangi y\u0131lda ka\u00e7 kad\u0131n \u00f6ld\u00fcr\u00fcld\u00fc\u011f\u00fc g\u00f6r\u00fclmektedir. 2020'nin ilk 8 ay\u0131nda toplamda 194 kad\u0131n \u00f6ld\u00fcr\u00fclm\u00fc\u015ft\u00fcr. <\/b>\n","4f31b7ce":"<a id = \"1\"><\/a>\n## Verinin Y\u00fcklenmesi ve Kontrol Edilmesi","21987dcf":"<a id = \"5\"><\/a>\n<font color = \"#800000\">\n### **Ocak 2008 ve A\u011fustos 2020 Tarihleri Aras\u0131nda \u00d6len Kad\u0131nlar Histogram Grafi\u011fi**\n","5d230504":" <font color = \"#000045\"><b> Yukar\u0131daki verilerde 2008-2020 y\u0131llar\u0131 aras\u0131nda makt\u00fcllerin kim taraf\u0131ndan \u00f6ld\u00fcr\u00fcld\u00fc\u011f\u00fc g\u00f6r\u00fclmektedir. Belirlenemeyen veriler haricinde, toplamda 1032 kad\u0131n kocas\u0131 taraf\u0131ndan \u00f6ld\u00fcr\u00fclm\u00fc\u015ft\u00fcr. <\/b>","3db9d35d":"<a id = \"6\"><\/a>\n<font color = \"#800000\">\n### **\u00d6ld\u00fcr\u00fclme \u015eekli Pie Chart Grafi\u011fi**","ebc44f28":"<a id = '15'> <\/a>\n## Kaynaklar\n\n* https:\/\/www.hurriyet.com.tr\n* https:\/\/www.sozcu.com.tr\n* http:\/\/anitsayac.com"}}