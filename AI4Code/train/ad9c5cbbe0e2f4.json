{"cell_type":{"52499478":"code","31cf4753":"code","3390c89d":"code","d54703f3":"code","4ad860f3":"code","b9ea06f8":"code","5ef5ffed":"code","9051902c":"code","b9615e66":"code","7382b281":"code","257392a0":"code","f8e45204":"code","8f00fc23":"code","89909b4a":"code","193f496f":"code","99334021":"code","811f8a91":"code","7b95371c":"code","7ad28a1f":"code","cd33d45d":"code","e7ffa8ac":"markdown","3200c251":"markdown","bb665782":"markdown","d9401ef3":"markdown","29ace59f":"markdown"},"source":{"52499478":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","31cf4753":"df=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/train.csv\")\ndf1=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/test.csv\")\ndf2=pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/gender_submission.csv\")","3390c89d":"df1.head()","d54703f3":"df.head()","4ad860f3":"df.info()","b9ea06f8":"df.isnull().sum()","5ef5ffed":"df.dropna()","9051902c":"df.shape","b9615e66":"df[[\"Pclass\",\"Survived\"]].groupby(\"Pclass\").mean()","7382b281":"df[[\"Sex\",\"Survived\"]].groupby(\"Sex\").mean()","257392a0":"df[[\"Embarked\",\"Survived\"]].groupby(\"Embarked\").mean()","f8e45204":"import re as re","8f00fc23":"def get_title(name):\n\ttitle_search = re.search(' ([A-Za-z]+)\\.', name)\n\t# If the title exists, extract and return it.\n\tif title_search:\n\t\treturn title_search.group(1)\n\treturn \"\"\n\nfor dataset in df:\n    df['Title'] = df['Name'].apply(get_title)\n\nprint(pd.crosstab(df['Title'], df['Sex']))","89909b4a":"for dataset in df:\n    df['Title'] = df['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\n    df['Title'] = df['Title'].replace('Mlle', 'Miss')\n    df['Title'] = df['Title'].replace('Ms', 'Miss')\n    df['Title'] = df['Title'].replace('Mme', 'Mrs')\n\nprint (df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean())\n","193f496f":"from sklearn.neighbors import KNeighborsClassifier","99334021":"model=KNeighborsClassifier(n_neighbors=3)","811f8a91":"X=df[[\"Pclass\"]]\ny=df[[\"Survived\"]]","7b95371c":"from sklearn.neighbors import KNeighborsClassifier\nmodel=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X,y)\n","7ad28a1f":"pred=model.predict(df1[[\"Pclass\"]])","cd33d45d":"print(\"Pclass\",\"Survived\")\nfor i in range(0,100):\n    print(df1[\"Pclass\"].values[i],pred[i])","e7ffa8ac":"# From the above analysis it is clear that we PClass has the greatest impact on the chances of survival","3200c251":"# Loading the data and performing the basic analysis","bb665782":"Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton","d9401ef3":"# Now, we are checking for which feature has a good impact on the chances of survival","29ace59f":"# We will be using KNN to predict wether the person was able to survive or not"}}