{"cell_type":{"6272da9b":"code","17e94720":"code","edd9b684":"code","89b9f4a8":"code","bd91b60f":"code","78e70be8":"code","6686a28e":"code","598435a3":"code","e94c1db0":"code","95b73a40":"code","8058ac63":"code","9391c756":"code","3b10c7e7":"code","ecba41b0":"code","8e7d3498":"code","43fb9ce9":"code","8c44ca9a":"code","6e9479f6":"markdown","cc2e4e7a":"markdown","4f0020b7":"markdown","9c8ab18f":"markdown","907376bf":"markdown","e8f44c5a":"markdown","5e5f0122":"markdown","bc95ccf5":"markdown","98f85b0b":"markdown"},"source":{"6272da9b":"# import packages\n\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport re\nfrom scipy.stats import mannwhitneyu\nfrom matplotlib import pyplot as plt","17e94720":"# Read dataframe and display data\ndf = pd.read_csv('..\/input\/googleplaystore.csv')\ndf.head(5)","edd9b684":"# check duplicates\nn_duplicated = df.duplicated(subset=['App']).sum()\nprint(\"There are {}\/{} duplicated records.\".format(n_duplicated, df.shape[0]))\ndf_no_dup = df.drop(df.index[df.App.duplicated()], axis=0)\nprint(\"{} records after dropping duplicated.\".format(df_no_dup.shape[0]))","89b9f4a8":"# Check and clean type values, defer nan value processing to the next cell\nprint(set(df_no_dup.Type))\nprint(\"Dropping alien Type value '0', {} record(s) removed\".format(sum(df_no_dup.Type == '0')))\ndf_no_dup = df_no_dup.drop(df_no_dup.index[df_no_dup.Type == '0'], axis=0)","bd91b60f":"# check and drop NaN values\nprint(\"NaA value statistics in each column\")\nprint(df_no_dup.isnull().sum(axis=0),'\\n')\ndf_no_dup = df_no_dup.dropna(subset=['Type'])\nprint(\"Column 'Type' with NaN values are dropped, {} records left.\".format(df_no_dup.shape[0]))\n\n# prepare rating dataframe\ndf_rating = df_no_dup.dropna(subset=['Rating'])\nprint(\"Cleaned dataframe for 'Rating' has {} records.\".format(df_rating.shape[0]))","78e70be8":"# we are interested in the columns Category, Rating and Type\n# Drop irrelevant columns for Rating dataframe.\ndf_rating = df_rating.loc[:,['Rating', 'Type', 'Category']]","6686a28e":"def plot_hist(df, col, bins=10):\n    \"\"\"\n    Plot histograms for a column\n    \"\"\"\n    plt.hist(df[col], bins=bins)\n    plt.xlabel(col)\n    plt.ylabel('counts')\n    plt.title('Distribution of {}'.format(col))\n\ndef compute_app_types(df):\n    \"\"\"\n    Given a dataframe, compute the number \n    of free and paid apps respectively\n    \"\"\"\n    return sum(df.Type == \"Free\"), sum(df.Type == 'Paid')\n\ndef plot_app_types(df):\n    \"\"\"\n    Plot app type distributions across categories\n    \"\"\"\n    vc_rating = df.Category.value_counts()\n    cat_free_apps = []\n    cat_paid_apps = []\n    for cat in vc_rating.index:\n        n_free, n_paid = compute_app_types(df.query(\"Category == '{}'\".format(cat)))\n        cat_free_apps.append(n_free)\n        cat_paid_apps.append(n_paid)\n\n    f, ax = plt.subplots(2,1)\n    ax[0].bar(range(1, len(cat_free_apps)+1), cat_free_apps)\n    ax[1].bar(range(1, len(cat_free_apps)+1), cat_paid_apps)\n\ndef drop_categories(df):\n    \"\"\"\n    Drop categories with any app type with instances fewer than 10\n    \"\"\"\n    vc_rating = df.Category.value_counts()\n    cats_to_drop = []\n    for cat in vc_rating.index:\n        n_free, n_paid = compute_app_types(df.query(\"Category == '{}'\".format(cat)))\n        if n_free < 10 or n_paid < 10:\n            cats_to_drop.append(cat)\n    for cat in cats_to_drop:\n        df.drop(df.query('Category == \"{}\"'.format(cat)).index, axis=0, inplace=True)\n    print(\"Deleted categories: {}\".format(cats_to_drop))\n    return df","598435a3":"# Describe Rating dataframe\nplot_hist(df_rating, 'Rating')\ndf_rating.describe()","e94c1db0":"print(\"There are {} free and {} paid apps in the the Rating dataframe \".format(*compute_app_types(df_rating)))","95b73a40":"# explore the distributions of free and paid apps across different categories\nplot_app_types(df_rating)","8058ac63":"# Exclude categories with fewer than 10 apps for any Free or Paid type\n# Otherwise the categories would contain too few data to generalize the result\ndf_rating = drop_categories(df_rating)\nprint(\"Cleaned Rating dataframe has {} datapoints\".format(df_rating.shape[0]))","9391c756":"df_rating.describe()","3b10c7e7":"def plot_target_by_group(df, target_col, group_col, figsize=(6,4), title=\"\"):\n    \"\"\"\n    Plot the mean of a target column (Numeric) groupped by the group column (categorical)\n    \"\"\"\n    order = sorted(list(set(df[group_col])))\n    stats = df.groupby(group_col).mean()[target_col]\n    fig, ax = plt.subplots(figsize=figsize)\n    sns.barplot(x=group_col, y=target_col, data=df, ax=ax, order=order).set_title(title)\n    ax.set(ylim=(3.8, 4.5))    \n    return stats","ecba41b0":"stats = plot_target_by_group(df_rating, 'Rating', 'Type', title=\"Average Rating Groupped by App Type\")\nfor i, s in zip(stats.index, stats):\n    print(\"{} app has average {} {}\".format(i, 'Rating',s))\nmean_rating = df_rating.Rating.mean()\nprint(\"Mean rating: {}\".format(mean_rating))","8e7d3498":"paid_stats = plot_target_by_group(df_rating.query('Type == \"Paid\"'), 'Rating', 'Category', (16, 4), \"(Paid App) Average Ratings by App Category\")\nfree_stats = plot_target_by_group(df_rating.query('Type == \"Free\"'), 'Rating', 'Category', (16, 4), \"(Free App) Average Ratings by App Category\")","43fb9ce9":"fig, ax = plt.subplots(figsize=(16,4))\nsorted_idx = sorted(paid_stats.index)\nrating_diff = paid_stats[sorted_idx] - free_stats[sorted_idx]\nsns.barplot(x=sorted_idx, y=rating_diff, ax=ax).set_title(\"Difference of Ratings between Paid and Free Apps Across App Categories\");\nrating_diff","8c44ca9a":"def compute_utest(df):\n    \"\"\"\n    Compute Mann-Whitney rank tests\n    for paid and free app ratings\n    \"\"\"\n    paid_rating = df.query('Type == \"Paid\"')['Rating']\n    free_rating = df.query('Type == \"Free\"')['Rating']\n    return mannwhitneyu(paid_rating, free_rating)\n\ndef cat_utest(df):\n    \"\"\"\n    Iteratively compute utest for each app category\n    \"\"\"\n    cats = set(df.Category)\n    res = []\n    for cat in cats:\n        stats, pval = compute_utest(df.query('Category == \"{}\"'.format(cat)))\n        res.append({'Category':cat,\n                    'u_statistics':stats,\n                    'p_value':pval})\n    return pd.DataFrame(res)\n\nuval, pval = compute_utest(df_rating)\n\nprint(\"General utest result: pval {}, u {}\".format(pval, uval))\ndf_utest = cat_utest(df_rating)   \ndf_utest.loc[df_utest.p_value < .05] # significant categories","6e9479f6":"### Q3 Are there any categories where the differences are statistically significant?","cc2e4e7a":"### Q 1. How does the ratings differ in general?","4f0020b7":"# Free or Paid, Choices of Google Play Store Users\nby Chen Qiao (cqiaohku@gmail.com)\n\n## Background\n\nUsers download apps for various usage purposes. Given that paid service is usually better at offering pleasant experience, and that free apps are more accesible to everyone, what are the user opinions towards these apps? \n\nMore specifically, the following questions are of interest:\n- How do the app ratings differ between paid and free apps in general?\n- How are the differences distributed across different app categories?\n- Are there any categories where the differences are statistically significant?\n\nTo expore answers to the above questions, I narrawed the context to Google Play Store and conducted data analysis on the Kaggle dataset [`Google Play Store`](https:\/\/www.kaggle.com\/lava18\/google-play-store-apps\/home),\n\n## Acknowledgement\nI would like to thank Google Play Store and [Lavanya Gupta](https:\/\/www.kaggle.com\/lava18) for offering the wonderful dataset.\n","9c8ab18f":"#### Interpretation\nAlthough paid apps are in general more highly-rated than free apps, and so are in most app categories, there are still some app categories where free apps are likely to be favored more than the paid apps. For instance, COMMUNICATION, FINANCE and PHOTOGRAPHY are three such categories. In FINANCE category, the free apps on average are rated almost 0.3 higher than the paid apps, which is also the largest difference between app types across all the categories.\n","907376bf":"#### Interpretation\nIn general, Free apps, with an average rating of 4.16, are lower rated than Paid apps with an average rating of 4.27. Note that the average rating for all apps is 4.17, so Free apps are rated below average, while Paid apps are rated reletively higher than the average score.","e8f44c5a":"### Concluding Remarks\n\nData analysis was conducted on the Kaggle Google Play Store dataset, the answers to the three questions were explored:\n- How do the ratings differ between paid and free apps in general?\n  In general, Paid apps are better-rated than free apps, which appears to support the argument that service quility of the paid apps is better.\n- How are the differences distributed across different app categories?\n  In most categories, Paid apps achieve higher ratings than free apps, however, in a few categories such as COMMUNICATION, FINANCE and PHOTOGRAPHY, the average ratings of free apps are higher than those of paid apps. Is this because many popular apps in these categories are free, like facebook and whatsapp in the COMMUNICATION category?\n- Are there any categories where the differences are statistically significant?\n  There are four categories (PERSONALIZATION, TOOLS, FAMILY and GAME) where paid apps are rated significantly higher than free apps.\n  \nThis is only a very superficial exploration of the Google Play Store dataset. There are many other useful information including installation counts and app review texts, which might entail many more interesting facts and await further exploration.\n  \n\n  \n\n","5e5f0122":"### Step 0. Explore and Prepare Dataframe","bc95ccf5":"#### Interpretation\nAs rating is not normally-distributed, Mann-Whitney's U test was applied to test the significance of rating differences, since this test is free from a normal assumption. At the 0.05 significance level, results of the u tests on different categories demonstrate that the free and paid apps in the following categories have significant rating differences: personalization, tools, family and games. Paid apps are on average higher rated than free apps in these categories.","98f85b0b":"### Q2 How are the differences distributed across different app categories?"}}