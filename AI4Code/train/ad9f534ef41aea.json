{"cell_type":{"525d963c":"code","c48c2fb6":"code","04a5bbd1":"code","94d79725":"code","44b5f810":"code","1e43148d":"code","7b806146":"code","d4c601ff":"code","fbce800c":"code","78d84f5c":"code","e51d8166":"code","786eb0b8":"code","9a164d08":"code","57e4cd24":"code","8933ddd9":"code","501488ba":"code","17e218ff":"code","1cadb79e":"code","7cb1e67f":"code","4b090ffe":"code","1f3f4c8d":"markdown","e5ebb2eb":"markdown"},"source":{"525d963c":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","c48c2fb6":"water.info()","04a5bbd1":"water.describe()","94d79725":"Potability_0=water[water.Potability==0]\nPotability_0.head()","44b5f810":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","1e43148d":"Potability_0.describe()","7b806146":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","d4c601ff":"Potability_1=water[water.Potability==1]\nPotability_1.head()","fbce800c":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","78d84f5c":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","e51d8166":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","786eb0b8":"water.nunique()","9a164d08":"round(water.Potability.value_counts()*100\/len(water),2)","57e4cd24":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","8933ddd9":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","501488ba":"round(data.Potability.value_counts()*100\/len(data),2)","17e218ff":"!pip install pycaret","1cadb79e":"from pycaret.classification import *","7cb1e67f":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","4b090ffe":"compare_models()","1f3f4c8d":"#### Treating Missing value for Potability_1 records","e5ebb2eb":"#### Treating Missing value for Potability_0 records"}}