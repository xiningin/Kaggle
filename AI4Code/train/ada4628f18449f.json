{"cell_type":{"a97d69f7":"code","b6e6e75d":"code","12ffc271":"code","a6f77c21":"code","7bd27354":"code","4d259342":"code","3b241028":"code","79917686":"code","5f08304d":"code","7524d386":"code","cf505e0c":"code","3c3fff4b":"markdown","79429643":"markdown","cf97ed63":"markdown","221a9b29":"markdown","2d36db0e":"markdown","072f460f":"markdown","211e8d9a":"markdown","94a611e0":"markdown","96454793":"markdown","9c46eeaf":"markdown","82a238f0":"markdown","310aa763":"markdown","6098d622":"markdown","0305dcc8":"markdown","f32327a6":"markdown","0a656ab0":"markdown","3206a393":"markdown"},"source":{"a97d69f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b6e6e75d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('ggplot')","12ffc271":"df = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\ndf.head()","a6f77c21":"df.info()","7bd27354":"null_ratings = df[df.Rating.isnull()].index\ndf.drop(null_ratings, axis=0, inplace=True)\n\n#I am dropping any ratings which are greater than 5\ndf.drop(df[df.Rating > 5].index, axis=0, inplace=True)","4d259342":"catrat = df.groupby(['Category'])['Rating'].median()\n\nfig, axes = plt.subplots(figsize=(13, 8))\ncatrat.sort_values(ascending=False).plot.barh(ax=axes, color='#9999e6')","3b241028":"fig, axes = plt.subplots(figsize=(12, 8))\ndf.plot.scatter(y='Rating', x='Reviews', ax=axes)","79917686":"fig, axes = plt.subplots(1, 2, figsize=(15, 6))\nfig.tight_layout()\n\nfree_genre = df[df.Type=='Free'][['Genres','Rating']]\nfree_genre = free_genre.groupby(['Genres'])['Rating'].median()\nfree_genre.sort_values(ascending=False)[0:11].plot.bar(ax=axes[0], color='#77b300')\naxes[0].set_title('Free Apps')\naxes[0].set_ylabel('Rating')\n\npaid_genre = df[df.Type=='Paid'][['Genres','Rating']]\npaid_genre = paid_genre.groupby(['Genres'])['Rating'].median()\npaid_genre.sort_values(ascending=False)[0:11].plot.bar(ax=axes[1],color='#77b300')\naxes[1].set_title('Paid Apps')\naxes[1].set_ylabel('Rating')\n","5f08304d":"df['Price'] = df['Price'].apply(lambda x: float(x[1:]) if len(x) > 1 else 0)\nsns.jointplot(y='Price',x='Rating',data=df, color='#0088cc')\n","7524d386":"df['Installs'] = df['Installs'].apply(lambda x: float(x[0:-1].replace(\",\",\"\")))\n\nfix, axes = plt.subplots(figsize=(13,7))\ninstalls = pd.DataFrame(df.groupby(['Installs'])['Rating'].median()).reset_index()\ninstalls.plot.line(x='Installs',y='Rating', marker= 'o', ax= axes)","cf505e0c":"category = df.groupby('Content Rating')['Rating'].median()\ncategory.sort_values(ascending=False).plot.barh()","3c3fff4b":"Getting the data into a csv file.","79429643":"### Getting necessary information about data\nThere are total 10841 rows and 13 columns.","cf97ed63":"### Droping null values \nI'm droping all the null values in data and removing all the rows with rating > 5 because ratings greater than 5 are anomalies.","221a9b29":"The Ratings of app is decreasing with increasing Installs this is because apps with 1 installs only 1 person is rating it and with increasing installs more people are rating it so it is taking the average of all the ratings by different people.","2d36db0e":"### Rating vs Genres \nI'm Visualizing Genres with respect to 'type' either app's are 'paid' or 'Free'.  \nBy Visualization I can see what 'Gentes' are for what type and what ratings are of 'Paid' and 'Free' apps.\n\n<h4>Note:<\/h4>I'm visualizing median rating for all the Genres","072f460f":"From above barplot I can see that 'Comics;Creativity' has the Highest Rating in Free apss and 'News and Magazines' and 'Board;pretend play' has the Highest Rating in 'Paid apps'. The Ratings of both 'Free' and 'Paid' are about same but they have different Generes.","211e8d9a":"### Importing all the libraries we'll need in visualization:\nI'll use Matplotlib and seaborn for visualization and numpy and pandas for data processing.\n","94a611e0":"From the above graph, it is clear that there is not much trend bewteen Rating and price. There are few applications which have cost above 300 dollars and they have rating in between 2.9 to 4.5. Most of the paid apps has Ratings in between 3.5 to 5 and most of apps charge about 1 to 5 dollars.","96454793":"### Rating Vs Price\nNow I'm going to see is 'Price' is related to 'Rating', for this I'm going to plot a joint plot for price and Rating.  \nThe price is in the form of object('$1.2'). For Visualization I'm first converting Price from object type to float type ","9c46eeaf":"From the above Graph we can see that 'Health and Fitness', 'Books and Reference' and 'Events' Category has the highest Rating while 'Dating' and 'Tools' has the least Rating. ","82a238f0":"### Content Rating Vs Rating\nRating of different Content wheater the app is for i.e, adults, teen, Mature or Everyone","310aa763":"### Rating Vs Reviews\nWe'll see how Rating is related to 'Reviews' by plotting Scatter plot between them.","6098d622":"# **It's All about Rating**\n\nI will visualize 'Rating' Column with other columns and find out how Rating is related to them.","0305dcc8":"The adult content is highly Rated ","f32327a6":"### Rating Vs Installs\nNow visulazing how installs effect rating. For this visualization I'm using LinePlot.  \nThe 'Installs' column have 'object' dtype ('Installs' is in the form of '10,000+')so firstly I'm converting it to integer type.\n\n<h4>Note:<\/h4>I'm visualizing median rating of all the Genres","0a656ab0":"### Rating Vs Category\n'Category' Column contains the category of apps and we'll see which Category has the most rating and which has the least.  \n<h5>Note:<\/h5> I'm visualizing median rating of all the categories\n\n","3206a393":"By looking at the Scatter plot it is clear that Rating very less related with Reviews. Most of the Rating is in between 4.0 to 4.8 despite of the reviews they got. From the above Scatter plot it is clear that both the columns don't have much same, the co-relation between both is about 0"}}