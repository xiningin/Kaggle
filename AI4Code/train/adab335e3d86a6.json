{"cell_type":{"fa3f1335":"code","d8ce1a3e":"code","e3843fcb":"code","98eff9b8":"code","9333e7bf":"code","a1ff0321":"code","5896c8af":"code","8b2737a9":"code","495d2ba8":"code","e064faab":"code","e4217a58":"code","675461d0":"code","0dab619f":"code","71575eb8":"code","d720046a":"code","e31ccc65":"code","d17d3397":"code","7d1908c2":"code","2dd9763f":"code","a7a6c7be":"code","d6528271":"code","bedfc45b":"code","8ccf1f8a":"code","59c33ecd":"code","f9eda762":"code","6bd470c5":"code","3ff99985":"code","ad292766":"code","dd741b56":"code","1d553902":"code","1aa46c28":"code","c87acdea":"code","f8619410":"code","8b4bb300":"code","3039c33c":"code","687fc169":"code","47982d26":"code","97139286":"code","01f543a2":"code","d67dc9ba":"code","28d913f8":"code","0a753ff1":"code","b146a44e":"code","f226381d":"code","f7a033da":"code","2ba7c10b":"code","ded5914b":"code","111e4830":"code","90400266":"code","9ceb65fd":"code","82f5a5e1":"code","97b85444":"code","38335f70":"code","5247341e":"code","c25ca55b":"code","71f80cea":"code","0b53800a":"code","aa3276b2":"code","b74a94b9":"code","7c4d6966":"code","26fe332e":"code","4633eb36":"code","d2e1e961":"code","c97821e8":"code","b2ff728b":"code","9e46b71a":"code","cd23da27":"code","89e6387c":"code","6fce67e2":"code","ceeb690c":"code","44ef865f":"code","7abaf3ea":"code","2e921e1d":"code","89565318":"code","d546306e":"code","bcef69af":"code","9094b82f":"code","d23d203d":"code","c98b4524":"code","8a16ee75":"code","f6b2290d":"code","4939bade":"code","61ee8709":"code","e8cd7bfc":"code","5e71d54f":"code","f83d08fe":"code","83cea0ac":"code","8b3f026e":"code","14524d87":"code","e61387b5":"code","c44f45d8":"code","16bc5334":"code","c0737cb8":"code","ad08d925":"code","df103b8d":"code","f254abc6":"code","ac0cfe60":"code","a12d78c8":"code","647cc056":"code","735f3afb":"code","acb48089":"code","bfcb38e4":"code","650364ed":"code","6f1afdfe":"code","6186ebdd":"code","d8066a92":"code","ad947d5e":"code","7c6d6eff":"code","6a7e761c":"code","ef8b03bd":"code","ee94f774":"code","ed7a9ac6":"code","a1f781ed":"code","2d6c00b2":"code","75157404":"code","59b46033":"code","838c6817":"code","080e6d7f":"code","76f26d0b":"code","80dfae42":"code","9d76523b":"code","70479909":"code","674e51aa":"code","822abf9c":"code","1bb9421b":"code","1d038776":"code","48da6002":"code","cf239e26":"code","f1bda369":"code","4e94d28d":"code","d25a2a3a":"code","556084ed":"code","c19c1132":"code","4ba21e07":"code","0a80333a":"code","8761e513":"code","04bfbef1":"markdown","5abe3018":"markdown","f2aa2276":"markdown","8e6724b6":"markdown","eecb4029":"markdown","c35e54ef":"markdown","e34b9de6":"markdown","ae8aacff":"markdown","2734758b":"markdown","9f82bebf":"markdown","e9924e59":"markdown","53cfba36":"markdown","2a75646d":"markdown","728198c0":"markdown","709dd37f":"markdown","38a456cb":"markdown","f0b51904":"markdown","1ce80d8b":"markdown","b19600cb":"markdown","f95b3558":"markdown","62c5163b":"markdown","83195ff8":"markdown","ec5aa9a2":"markdown","07cc8ddb":"markdown","c5a85ded":"markdown","608b33c5":"markdown","0e12e19b":"markdown","d265c4f4":"markdown","73b6bf9b":"markdown","6f000041":"markdown","b028f97a":"markdown","b43f968a":"markdown","2edeaabf":"markdown","dad1426a":"markdown","60c9393e":"markdown","5164bd19":"markdown","a4ba7c74":"markdown","e4b15b40":"markdown","6c0dd763":"markdown","d659975d":"markdown","45f6cc7e":"markdown","943349b1":"markdown","f888601c":"markdown","0498f2f4":"markdown","d6a56f25":"markdown","169b98a3":"markdown","2f358802":"markdown","5c44379d":"markdown","e05f3df5":"markdown","324c9a5d":"markdown","0de30ce9":"markdown","6b81289a":"markdown","fa76ff8f":"markdown","b14aafa8":"markdown","c8d1c325":"markdown","b2b8a123":"markdown","67c364ed":"markdown","5b6e4f95":"markdown","a8d04ca6":"markdown","0e558745":"markdown","1c913a8a":"markdown","70aae597":"markdown","32a6ae5b":"markdown","589381a3":"markdown","9ab3109f":"markdown","1bfd655e":"markdown","ea6c3fb3":"markdown","9a82722b":"markdown","0313d49c":"markdown","9539340f":"markdown","f8bfb2be":"markdown","81ac786c":"markdown","74c86967":"markdown","2fdf12d2":"markdown","9559c66c":"markdown","ec840abe":"markdown","289afa0a":"markdown","03812d7f":"markdown","c88b4940":"markdown","6755c984":"markdown","81ba76c1":"markdown","51a9e0bd":"markdown","7b7e509a":"markdown","4c21f6d7":"markdown","7cc415e1":"markdown","fc4095df":"markdown","3e12b237":"markdown","2cc5ca7a":"markdown","c7774c94":"markdown","d42d541e":"markdown","a10b1757":"markdown"},"source":{"fa3f1335":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8ce1a3e":"arno = pd.read_csv('\/kaggle\/input\/acea-water-prediction\/River_Arno.csv')","e3843fcb":"arno.head(10)","98eff9b8":"import seaborn as sns\nsns.heatmap(arno.isnull())","9333e7bf":"arno.shape","a1ff0321":"print('first date of observation :',arno['Date'][0])","5896c8af":"print('last date of observation :',arno['Date'][8216])","8b2737a9":"arno.corr()","495d2ba8":"sns.heatmap(arno.corr())","e064faab":"arno_1 = arno.copy()","e4217a58":"arno_1['Day'] = arno_1['Date'].str.split('\/').str[0]","675461d0":"arno_1['Month'] = arno_1['Date'].str.split('\/').str[1]\narno_1['Year'] = arno_1['Date'].str.split('\/').str[2]","0dab619f":"arno_1.head()","71575eb8":"import matplotlib.pyplot as plt\nplt.bar(arno_1['Month'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Month')\nplt.ylabel('Water Level in Metre')","d720046a":"plt.figure(figsize = (20,6))\nplt.bar(arno_1['Year'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Year')\nplt.ylabel('River Level')\n","e31ccc65":"#For Further EDA , I would drop missing values to keep things simple\narno_1.dropna()","d17d3397":"plt.scatter(arno_1['Month'],arno_1['Temperature_Firenze'])\nplt.xlabel('Month')\nplt.ylabel('Temp of River')\n","7d1908c2":"plt.figure(figsize=(20,6))\nplt.scatter(arno_1['Year'],arno_1['Temperature_Firenze'])\nplt.xlabel('Year')\nplt.ylabel('Temp of River')\n","2dd9763f":"plt.scatter(arno_1['Temperature_Firenze'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Temprature of River')\nplt.ylabel('River Level')","a7a6c7be":"plt.scatter(arno_1['Rainfall_Bibbiena'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Rainfall at BIBBIENA(mm)')\nplt.ylabel('River Level')","d6528271":"plt.scatter(arno_1['Rainfall_Camaldoli'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Rainfall at CAMALDOLI(mm)')\nplt.ylabel('River Level') ","bedfc45b":"plt.scatter(arno_1['Rainfall_Cavallina'],arno_1['Hydrometry_Nave_di_Rosano'])\nplt.xlabel('Rainfall at CAVALLINA(mm)')\nplt.ylabel('River Level')","8ccf1f8a":"arno_1.dropna()","59c33ecd":"plt.scatter(arno_1['Rainfall_Bibbiena'],arno_1['Temperature_Firenze'])\nplt.xlabel('Rainfall at BIBBIENA')\nplt.ylabel('Temprature of River')","f9eda762":"plt.scatter(arno_1['Rainfall_Camaldoli'],arno_1['Temperature_Firenze'])\nplt.xlabel('Rainfall at Camaldoli(mm)')\nplt.ylabel('Temprature of River(C)')","6bd470c5":"plt.scatter(arno_1['Rainfall_Mangona'],arno_1['Temperature_Firenze'])\nplt.xlabel('Rainfall at Magona(mm)')\nplt.ylabel('Temprature of River(C)')","3ff99985":"plt.figure(figsize=(12,6))\nplt.title('Water Level in June throughout Years')\narno_june = arno_1[arno_1['Month']=='06']\nsns.lineplot(x='Year',y='Hydrometry_Nave_di_Rosano',data=arno_june)\n\n\n","ad292766":"plt.figure(figsize=(12,6))\nplt.title('Temprature of River in June throughout Years')\nsns.lineplot(x='Year',y='Temperature_Firenze',data=arno_june)","dd741b56":"arno_1.columns","1d553902":"plt.figure(figsize=(12,6))\nplt.title('Rainfall in different regions v\/s River Water Level')\nsns.lineplot(x='Rainfall_Le_Croci',y='Hydrometry_Nave_di_Rosano',data=arno_june)\nsns.lineplot(x='Rainfall_Cavallina',y='Hydrometry_Nave_di_Rosano',data=arno_june)\nsns.lineplot(x='Rainfall_Vernio',y='Hydrometry_Nave_di_Rosano',data=arno_june)\nsns.lineplot(x='Rainfall_Camaldoli',y='Hydrometry_Nave_di_Rosano',data=arno_june)\nplt.legend()","1aa46c28":"plt.figure(figsize=(12,6))\nplt.title('Water Level in November throughout Years')\narno_nov = arno_1[arno_1['Month']=='11']\nsns.lineplot(x='Year',y='Hydrometry_Nave_di_Rosano',data=arno_nov)","c87acdea":"plt.figure(figsize=(12,6))\nplt.title('Temprature of River in November throughout Years')\nsns.lineplot(x='Year',y='Temperature_Firenze',data=arno_nov)","f8619410":"plt.figure(figsize=(12,6))\nplt.title('Rainfall in different regions v\/s River Water Level')\nsns.lineplot(x='Rainfall_Le_Croci',y='Hydrometry_Nave_di_Rosano',data=arno_nov)\nsns.lineplot(x='Rainfall_Cavallina',y='Hydrometry_Nave_di_Rosano',data=arno_nov)\nsns.lineplot(x='Rainfall_Vernio',y='Hydrometry_Nave_di_Rosano',data=arno_nov)\nsns.lineplot(x='Rainfall_Camaldoli',y='Hydrometry_Nave_di_Rosano',data=arno_nov)\nplt.legend()","8b4bb300":"from sklearn.model_selection import train_test_split\n","3039c33c":"arno_1.shape","687fc169":"arno_1 =  arno_1.dropna()","47982d26":"x = arno_1[[ 'Rainfall_Le_Croci', 'Rainfall_Cavallina', 'Rainfall_S_Agata',\n       'Rainfall_Mangona', 'Rainfall_S_Piero', 'Rainfall_Vernio',\n       'Rainfall_Stia', 'Rainfall_Consuma', 'Rainfall_Incisa',\n       'Rainfall_Montevarchi', 'Rainfall_S_Savino', 'Rainfall_Laterina',\n       'Rainfall_Bibbiena', 'Rainfall_Camaldoli', 'Temperature_Firenze',\n        'Month', 'Year']]\ny = arno_1['Hydrometry_Nave_di_Rosano']","97139286":"x_train ,x_test ,y_train ,y_test = train_test_split(x,y,test_size=0.1,random_state=101)","01f543a2":"from sklearn.linear_model import LinearRegression\nlin = LinearRegression()\nlin.fit(x_train,y_train)","d67dc9ba":"lin.score(x_test,y_test)","28d913f8":"y_pred = lin.predict(x_test)\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error\nimport math\nmean_abs_err = mean_absolute_error(y_pred,y_test)\nrmse = math.sqrt(mean_squared_error(y_test,y_pred))","0a753ff1":"print('Mean Absolute Error',mean_abs_err)\nprint('Root Mean Square Error',rmse)","b146a44e":"plt.plot(y_test,y_pred)","f226381d":"print('linear regression score on train set is :',lin.score(x_train,y_train))\nprint('linear regression score on test set is : ',lin.score(x_test,y_test))","f7a033da":"from sklearn.linear_model import Lasso\nlas = Lasso(alpha=0.1)\nlas.fit(x_train,y_train)\n","2ba7c10b":"print('linear regression score on train set is :',las.score(x_train,y_train))\nprint('linear regression score on test set is :',las.score(x_test,y_test))","ded5914b":"from sklearn.model_selection import GridSearchCV\nparam_grid = {'alpha':[0.1,0.2,0.3,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.9,0.005,1,5,10,0.001,0.0001]}\nserch = GridSearchCV(las,param_grid,cv=3,verbose=1)","111e4830":"result = serch.fit(x_train,y_train)","90400266":"result.best_params_","9ceb65fd":"result.score(x_test,y_test)","82f5a5e1":"y_pred = result.predict(x_test)\nprint('MAE',mean_absolute_error(y_pred,y_test))\nprint('RSME',math.sqrt(mean_squared_error(y_pred,y_test)))","97b85444":"from sklearn.neighbors import KNeighborsRegressor\nknn = KNeighborsRegressor()\nknn.fit(x_train,y_train)\nknn.score(x_test,y_test)","38335f70":"grid_parms = {\n    'n_neighbors':[3,4,5,6,10,15,20,25,30,35,40,45,50,55,90,105,110,150],\n    'weights' : ['uniform','distance'],\n    'metric' : ['eucledian','manhattan']\n}","5247341e":"gs = GridSearchCV(knn,grid_parms,cv=5,verbose=1)","c25ca55b":"gs.fit(x_train,y_train)","71f80cea":"gs.best_params_","0b53800a":"gs.score(x_test,y_test)","aa3276b2":"y_pred_k = gs.predict(x_test)","b74a94b9":"print('Mean Absolute Error',mean_absolute_error(y_pred_k,y_test))","7c4d6966":"print('RMSE',math.sqrt(mean_squared_error(y_pred_k,y_test)))","26fe332e":"from sklearn.tree import DecisionTreeRegressor\ntree = DecisionTreeRegressor()\ntree.fit(x_train,y_train)","4633eb36":"print('Testing Accuracy is : ',tree.score(x_test,y_test))","d2e1e961":"from sklearn.ensemble import RandomForestRegressor\nforest = RandomForestRegressor()\nforest.fit(x_train,y_train)","c97821e8":"print('Accuracy on Random Forest is :',forest.score(x_test,y_test))","b2ff728b":"param_grid = {\n    'max_depth' : [10,20,30,40,50,60,70,80,90,100],\n    \n}\n","9e46b71a":"fore = GridSearchCV(forest,param_grid,cv=5,verbose=1)\nfore.fit(x_train,y_train)","cd23da27":"fore.best_params_","89e6387c":"param_grid = {\n    'min_samples_split' : [100,500,1000,2000,4000,5000],\n    \n}\nfore = GridSearchCV(forest,param_grid,cv=5,verbose=1)\nfore.fit(x_train,y_train)\n","6fce67e2":"fore.best_params_","ceeb690c":"param_grid = {\n    'n_estimators' : [100,200,300,400,500,600],\n    \n}\nfore = GridSearchCV(forest,param_grid,cv=5,verbose=1)\nfore.fit(x_train,y_train)","44ef865f":"fore.best_params_","7abaf3ea":"fore = RandomForestRegressor(n_estimators=200,min_samples_split=100,max_depth=20)\nfore.fit(x_train,y_train)","2e921e1d":"fore.score(x_test,y_test)","89565318":"y_pred_rf = forest.predict(x_test)","d546306e":"print('MAE is : ',mean_absolute_error(y_pred_rf,y_test))","bcef69af":"print('RSME is : ',math.sqrt(mean_squared_error(y_pred_rf,y_test)))","9094b82f":"from sklearn.ensemble import GradientBoostingRegressor\nboost = GradientBoostingRegressor()\nboost.fit(x_train,y_train)","d23d203d":"boost.score(x_test,y_test)","c98b4524":"feature_importance =  boost.feature_importances_.tolist()","8a16ee75":"feature_list = x_train.columns.tolist()","f6b2290d":"\nimportance = pd.DataFrame(list(zip(feature_list, feature_importance)), \n               columns =['Feature', 'Importance']) ","4939bade":"importance","61ee8709":"x_opt = arno_1[['Temperature_Firenze','Rainfall_Consuma','Rainfall_Bibbiena','Month','Year','Rainfall_S_Savino',\n                      'Rainfall_Montevarchi','Rainfall_Camaldoli','Rainfall_Le_Croci','Rainfall_S_Agata']]\ny_opt = arno_1['Hydrometry_Nave_di_Rosano']","e8cd7bfc":"x_train_opt,x_test_opt,y_train_opt,y_test_opt = train_test_split(x_opt,y_opt,test_size=0.15,random_state=101)","5e71d54f":"boost.fit(x_train_opt,y_train_opt)","f83d08fe":"print('Accuracy on fewer columns testing data with gradient boosting : ',boost.score(x_test_opt,y_test_opt))","83cea0ac":"forest.fit(x_train_opt,y_train_opt)\nprint('accuracy on fewer columns testing data with Random Forest : ',forest.score(x_test_opt,y_test_opt))","8b3f026e":"arno_lstm = arno_1.copy()\ndf = arno_lstm.reset_index()['Hydrometry_Nave_di_Rosano']","14524d87":"df.shape","e61387b5":"df.head()","c44f45d8":"plt.plot(df)","16bc5334":"#Scaling our data to pass into LSTM as it is sensitive to scaling\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler(feature_range=(0,1))\ndf = scaler.fit_transform(np.array(df).reshape(-1,1))\n\n","c0737cb8":"df.shape","ad08d925":"df","df103b8d":"#separating traing and testing data\ntraining_size = int(len(df)*0.70)\ntest_size = len(df) - training_size\ntrain_data,test_data = df[0:training_size,:],df[training_size:len(df),:1]","f254abc6":"training_size","ac0cfe60":"test_size","a12d78c8":"#convert an arrays of value into dataset matrix\ndef create_dataset(dataset,timestep=1):\n    dataX,dataY = [],[]\n    for i in range(len(dataset)-timestep-1):\n        a = dataset[i:(i+timestep),0]\n        dataX.append(a)\n        dataY.append(dataset[i+timestep,0])\n    return np.array(dataX),np.array(dataY)","647cc056":"#reshape our dataset into 100 time steps\ntime_step=50\nx_train,y_train = create_dataset(train_data,time_step)\nx_test,y_test = create_dataset(test_data,time_step)","735f3afb":"#As LSTM model expexts 3D input so we would reshape our input data\nx_train = x_train.reshape(x_train.shape[0],x_train.shape[1],1)\nx_test = x_test.reshape(x_test.shape[0],x_test.shape[1],1)","acb48089":"x_train.shape","bfcb38e4":"y_train.shape","650364ed":"#Creating LSTM Model\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import LSTM\nmodel = Sequential()\nmodel.add(LSTM(50,return_sequences=True,input_shape=(50,1)))\nmodel.add(LSTM(50,return_sequences=True))\nmodel.add(LSTM(50))\nmodel.add(Dense(1))\nmodel.compile(loss='mean_squared_error',optimizer='adam')","6f1afdfe":"model.summary()","6186ebdd":"model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=80,batch_size=64,verbose=1)","d8066a92":"train_predict = model.predict(x_train)\ntest_predict = model.predict(x_test)\ntrain_predict = scaler.inverse_transform(train_predict)\ntest_predict = scaler.inverse_transform(test_predict)","ad947d5e":"math.sqrt(mean_squared_error(y_train,train_predict))","7c6d6eff":"math.sqrt(mean_squared_error(y_test,test_predict))","6a7e761c":"# shift train predictions for plotting\nlook_back=50\ntrainPredictPlot = np.empty_like(df)\ntrainPredictPlot[:, :] = np.nan\ntrainPredictPlot[look_back:len(train_predict)+look_back, :] = train_predict\n# shift test predictions for plotting\ntestPredictPlot = np.empty_like(df)\ntestPredictPlot[:, :] = np.nan\ntestPredictPlot[len(train_predict)+(look_back*2)+1:len(df)-1, :] = test_predict\n# plot baseline and predictions\nplt.plot(scaler.inverse_transform(df))\nplt.plot(trainPredictPlot)\nplt.plot(testPredictPlot)\nplt.show()","ef8b03bd":"len(test_data)","ee94f774":"383-50","ed7a9ac6":"x_input=test_data[333:].reshape(1,-1)\nx_input.shape","a1f781ed":"temp_input=list(x_input)\ntemp_input=temp_input[0].tolist()\ntemp_input","2d6c00b2":"#predicting values for next 10 days\nfrom numpy import array\n\nlst_output=[]\nn_steps=50\ni=0\nwhile(i<10):\n    \n    if(len(temp_input)>100):\n        #print(temp_input)\n        x_input=np.array(temp_input[1:])\n        print(\"{} day input {}\".format(i,x_input))\n        x_input=x_input.reshape(1,-1)\n        x_input = x_input.reshape((1, n_steps, 1))\n        #print(x_input)\n        yhat = model.predict(x_input, verbose=0)\n        print(\"{} day output {}\".format(i,yhat))\n        temp_input.extend(yhat[0].tolist())\n        temp_input=temp_input[1:]\n        #print(temp_input)\n        lst_output.extend(yhat.tolist())\n        i=i+1\n    else:\n        x_input = x_input.reshape((1, n_steps,1))\n        yhat = model.predict(x_input, verbose=0)\n        print(yhat[0])\n        temp_input.extend(yhat[0].tolist())\n        print(len(temp_input))\n        lst_output.extend(yhat.tolist())\n        i=i+1\n    \n","75157404":"len(df)","59b46033":"day_new=np.arange(1,101)\nday_pred=np.arange(101,111)\nplt.plot(day_new,scaler.inverse_transform(df[1176:]))\nplt.plot(day_pred,scaler.inverse_transform(lst_output))","838c6817":"lake = pd.read_csv('\/kaggle\/input\/acea-water-prediction\/Lake_Bilancino.csv')","080e6d7f":"lake.head()","76f26d0b":"lake.tail()","80dfae42":"sns.heatmap(lake.isnull())","9d76523b":"import pandas as pd \nimport missingno as msno ","70479909":"msno.bar(lake)","674e51aa":"lake_1 = lake.dropna()\nprint('original data shape',lake.shape)\nprint('missing values removed data shape',lake_1.shape)","822abf9c":"lake_1.corr()","1bb9421b":"corr = lake_1.corr()\nsns.heatmap(lake_1.corr(),xticklabels=corr.columns,\n        yticklabels=corr.columns)","1d038776":"plt.scatter(lake_1['Flow_Rate'],lake_1['Lake_Level'])\nplt.xlabel('FLOW RATE mc\/s')\nplt.ylabel('Water LEVEL (m)')","48da6002":"plt.bar(lake_1['Flow_Rate'],lake_1['Lake_Level'])\nplt.xlabel('FLOW RATE mc\/s')\nplt.ylabel('Water LEVEL (m)')","cf239e26":"sns.lineplot(x='Flow_Rate',y='Lake_Level',data=lake_1)","f1bda369":"plt.hist2d(lake_1['Flow_Rate'],lake_1['Lake_Level'])\nplt.xlabel('FLOW RATE mc\/s')\nplt.ylabel('Water LEVEL (m)')","4e94d28d":"plt.scatter(lake_1['Temperature_Le_Croci'],lake_1['Lake_Level'])\nplt.xlabel('Temprature in degree celsius')\nplt.ylabel('Water LEVEL (m)')","d25a2a3a":"plt.hist2d(lake_1['Temperature_Le_Croci'],lake_1['Lake_Level'])\nplt.xlabel('Temprature in degree celsius')\nplt.ylabel('Water LEVEL (m)')","556084ed":"plt.figure(figsize=(20,6))\nsns.lineplot(x='Temperature_Le_Croci',y='Lake_Level',data=lake_1)","c19c1132":"sns.kdeplot(lake_1['Temperature_Le_Croci'])","4ba21e07":"lake_1['Day'] = lake_1['Date'].str.split('\/').str[0]\nlake_1['Month'] = lake_1['Date'].str.split('\/').str[1]\nlake_1['Year'] = lake_1['Date'].str.split('\/').str[2]","0a80333a":"lake_1.head()","8761e513":"plt.figure(figsize=(20,6))\nsns.lineplot(x='Year',y='Temperature_Le_Croci',data=lake_1)\nsns.lineplot(x='Year',y='Lake_Level',data=lake_1)\nsns.lineplot(x='Year',y='Flow_Rate',data=lake_1)","04bfbef1":"Let's see how much missing data is in each column","5abe3018":"So This is also a gaussian distribution and as it is evident that mostly during temprature 10 to 20 degree water level at it's most with around 252m ","f2aa2276":"There is no regular pattern from which we can deduce any conclusion between Water Level and Rainfall at Different Regions","8e6724b6":"# EDA ","eecb4029":"It is again a Gaussian Curve , Maximum River Level Reaches at an optimal temprature of 10C to 20C \nexcept some outliers(exceptions) which would be studied furthur","c35e54ef":"All Rainfall DATA is majorly missing , so for our furthur EDA purpose , we can remove missing data","e34b9de6":"# GRADIENT BOOSTING","ae8aacff":"Now let us dive more into Temprature , Level and Flow rate and let us visualise all three at same time and deduce what we can...!","2734758b":"# OPTIMIZING RANDOM FOREST MODEL","9f82bebf":"Let us see the null data first","e9924e59":"This is a feature importance array , we would explore more about this tommorow !\n\nDAY 4 ends!!","53cfba36":"almost 600 entries were removed from 6000 which is almost 10 percent , we would deal with it later !","2a75646d":"This is feature importance as per gradeint boosting","728198c0":"as we said earlier that most probably temprature is between 15 and 20 degree celsius and water level is around 251m and if try to predict flow rate at this situation , it would most probably be between 0 and 10 mc\/s","709dd37f":"# LSTM CODE FOR RIVER LEVEL PREDICTION","38a456cb":"Lago di Bilancino is an artificial lake near Barberino di Mugello in the Metropolitan City of Florence, Tuscany, Italy, made with a dam on the river Sieve. At an elevation of 252 m, the lake surface area is approximately 5 km\u00b2","f0b51904":"we have seen water level of River is at lowest in JUNE AND JULY and highest in NOVEMBER AND JANURAY , let's see those trends more in depth","1ce80d8b":"DAY 5\n\nlet us look at some Feature importance","b19600cb":"we have 10 different csv files for use , we would examine each of our csv files , let's do some EDA for all our csv files","f95b3558":"DAY 6 ends\n","62c5163b":"Trends are same , More The Rainfall , Lesser the temprature of River and This trend is true for almost every Region ","83195ff8":"WE WILL NOT CONSIDER DECISION TREE BECAUSE IT IS GIVING VERY POOR ACCURACY","ec5aa9a2":"We would start our EDA with River Arno\n\nThe Arno is a river in the Tuscany region of Italy. It is the most important river of central Italy after the Tiber","07cc8ddb":"SO accuracy on testing dataset is 67 percent , which is a major improvement on previous models","c5a85ded":"LET US KNOW WHAT EACH COLUMN REPRESENT :\n1.Each Columns starting with Rainfall_X , here X is region , it tells us rainfall in region X in mm\n\n2.Temperature_Firenze represents temprature recorded by thermometric station Firenze (Temp in Celsius)\n\n3.Hydrometry_Nave_di_Rosano represents River Level recorder by hydrometric station at Rosano","608b33c5":"Model has relatively good model so we can futhur optimize it ","0e12e19b":"As Years proceed highest temprature of river is also increasing , especially after 2014 , maximum temp has increased drastically","d265c4f4":"so we basically converted our DataFrame into one dimensional array and also scaled it between 0 and 1 before feeding it to LSTM\n","73b6bf9b":"EVEN AFTER ALL THE TUING WE JUST GOT ACCURACY OF 47 percent\n\nDAY 3 ends !!","6f000041":"# Relation Between WATER LEVEL and TEMPRATURE","b028f97a":"White Portion Represents Missing Data ","b43f968a":"white part is the missing data","2edeaabf":"# DAY 3 : MODEL BUILDING AND OPTIMIZATION\n today on day 3 , we would focus on how to select best algorithm and get best result for river level prediction , and what factors are influencing it how much !","dad1426a":"DAY 4 : Trying more regression models\n\n\n","60c9393e":"so basically we have 842 data points and taking a time stamp of 50 at a time , it means 50 points would be taken at a time","5164bd19":"So blue line is trend in river level for last 100 days and then orange is river level prediction for next 10 days !","a4ba7c74":"let us see how both are related or un related or how are both affecting each other","e4b15b40":"so basically here we created a data for all The Hydrometry(River Level) as a time series format","6c0dd763":"This is just a Trial Model which ic very poor","d659975d":"We would make two models to predict LEVEL OF WATER IN RIVER , one would be Regression Model","45f6cc7e":"# TEMPRATURE AND RIVER DEPTH RELATION","943349b1":"So basically the  alpha=-.005  is the most optimized param was  all the way , and so our lasso model is also not working good and 50 percent accuracy is way too ppor","f888601c":"# RAINFALLS AND RIVER LEVEL","0498f2f4":"Water Level is considerably high but there is no pattern throughout the years , 2008 is outlier when water level were very low even in November ","d6a56f25":"We would reduce features and wo select top 10 most important feature and would then check the accuracy ","169b98a3":"# ANAYLYSIS OF NOVEMBER","2f358802":"DAY 7 \n# LAKE BILANCINO","5c44379d":"# PREDICTIVE MODEL","e05f3df5":"This gives us a idea that When Flow Rate is more there is a higher probability that Lake Level would be higher and as Flow Rate increases we have a higher probability of having a higher Lake Level","324c9a5d":"let us see how both are related or un related or how are both affecting each other","0de30ce9":"Let Us Find Out Avg Level of River For Each Year\n","6b81289a":"there is too much variance in the level and temprature but one this is quite evident that water level is maximum and least varying between 10 and 20 degree celsius temprature which again proves the point raised previously\n","fa76ff8f":"I was trying to find some pattern in Water level and Rainfall at different regions in month of June and to find some pattern that must be common but there was not any similar pattern except that River Level is highlt unstable when Rainfall is below 30mm and after that River Level becomes almost constant in month of June","b14aafa8":"# KNN REGRESSION","c8d1c325":"We can see that a huge amount of data has been lost after i dropped missing values but since it is for EDA , let's carry on EDA","b2b8a123":"# PREDICTING FUTURE VALUES","67c364ed":"Pattern of Falling and rising of Water Level through out time","5b6e4f95":"This clearly indicates that during June , July and August Water Level is at its lowest and during Nov , Dec  and Jan level at its peak ","a8d04ca6":"CONCLUSION : Direct relationship between level of water and temprature of river exists water level was lowest in 2017 and temprature was also higest in 2017 even though low water level of 2009 can not be explained by this pattern","0e558745":"Understanding DATA : \n    Rainfall_X : It indicates the quantity of rain falling, expressed in millimeters (mm), in the area X\n    \n    Flow_Rate : It indicates the lake's flow rate, expressed in cubic meters per seconds (mc\/s)\n    \n    Lake_Level : It indicates the lake level, expressed in meters (m)\n    \n    Temperature_Y : It indicates the temperature, expressed in \u00b0C, detected by the thermometric station Y\n\n\n","1c913a8a":"we would be using Long Short Term Memory to predict River Water Level , we would consider it as a time series and fed it in the same way in LSTM model","70aae597":"# Analysis of JUNE","32a6ae5b":"# Temprature , Flow Rate and Level","589381a3":"we will discuss trends based on different period of time ahead...","9ab3109f":"Quite obvious thing That Temprature of river is highest in JULY and AUGUST but , temprature of river in July too ranges between 20 to 35","1bfd655e":"# IS RAINFALL AFFECTING RIVER TEMPRATURE ?","ea6c3fb3":"# RANDOM FOREST REGRESSOR","9a82722b":"So basically blue lines are the trends in our real data , orange lines are how our training data is fitting and green points are how our testing data is fitting which is doing quite good barring some outliers","0313d49c":"so basically this is telling us that most of the flow rate of water is between 0 to 30 mc\/s","9539340f":"Random Forest MODEL has more accuracy without optimising ","f8bfb2be":"ALL THESE TRENDS POINT AT SAME THING : MORE RAINFALL means MORE RIVER LEVEL","81ac786c":"1. Rainfall and Lake Level has negative co relation which means Negative correlation is a relationship between two variables in which one variable increases as the other decreases, and vice versa\n\n2.Flow Rate and Lake Level has positive co relation\n\n3.Rainfall and Temprature has negative co relation","74c86967":"# LASSO REGRESSION","2fdf12d2":"we will discuss about it and will do more EDA ahead","9559c66c":" tempratures are scattered between -10 to 40 degree celsius peaking at around 10 degree celsius ","ec840abe":"# LAKE LEVEL AND FLOW RATE ","289afa0a":"# now we would try to optimize our LASSO model","03812d7f":"INDEPTH ANALYSIS OF WATER LEVEL IN SUMMERS AND WINTERS","c88b4940":"# CO RELATION","6755c984":"Optimising KNN model","81ba76c1":"*** END OF DAY 1 EDA ***","51a9e0bd":"The high co relation between rain fall of different regions can be because of closer distance","7b7e509a":"DECISION TREES REGRESSOR","4c21f6d7":"Well there is a little over-fitting but model on the whole is performing very poor","7cc415e1":"**DAY 2 ends**","fc4095df":"so the most probable situation in lake is when flow rate is between 0 and 10 and water level is between 250 and 252","3e12b237":"so baically most of flow rate is between 0 and 10 and usually water level stays highest at 252 around","2cc5ca7a":"There are some intersting observatons which we discuss ahead.....","c7774c94":"first let us break timestamp into months , days and years","d42d541e":"There is no uniformity in the river level in the years , it seems to be quite radom ","a10b1757":"# DAY 2 EDA"}}