{"cell_type":{"20c204c4":"code","5e85061d":"code","ce98632a":"code","f7ecd555":"code","55583514":"code","b7c2c16f":"code","59a0576a":"code","985e8e4a":"code","5a1f1b31":"markdown","5962579d":"markdown"},"source":{"20c204c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e85061d":"df = pd.read_csv('..\/input\/github-repo-sample-data\/filenames_with_ext.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.head()","ce98632a":"df1 = pd.read_csv('..\/input\/github-repo-sample-data\/filecontent_with_top_ext.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf1.head()","f7ecd555":"df.isnull().sum()","55583514":"df[\"extension\"].value_counts()","b7c2c16f":"df1[\"extension\"].value_counts()","59a0576a":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.extension)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","985e8e4a":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.extension)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","5a1f1b31":"Since I've no clue about what to make with the extensions path, I'll stop here.","5962579d":"![](https:\/\/cdn.extendoffice.com\/images\/stories\/doc-excel\/extract-extension-from-filenames\/doc-extract-extension-from-filenames-3.png)extendOffice"}}