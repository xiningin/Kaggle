{"cell_type":{"eaf8c30c":"code","1c372c7d":"code","b7cc1e48":"code","c9259c21":"code","d66819ce":"code","15151ae9":"code","d8bbf1fb":"code","7bc5ee93":"code","73a39606":"code","bb4ccd23":"code","b83b2e35":"code","fc6419f1":"code","c79aa9e1":"markdown","e96e45e7":"markdown","92dd917e":"markdown","67dfdeec":"markdown","5f573254":"markdown","cdc7aaf2":"markdown","ef6cb8b9":"markdown","d8e97cf1":"markdown","ee6e7354":"markdown","0e1e9ebc":"markdown","41daf9c2":"markdown","238b0623":"markdown"},"source":{"eaf8c30c":"# Import required Python libraries \nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Path of the file to read. We changed the directory structure to simplify submitting to a competition\niowa_file_path = '..\/input\/train.csv'\n","1c372c7d":"home_data = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')","b7cc1e48":"home_data.describe()","c9259c21":"home_data.head()","d66819ce":"# Create target object and call it y\ny = home_data.SalePrice # Predict Target is sales price \n","15151ae9":"# Create X\n\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\n\nX = home_data[features]\n\nX.head()","d8bbf1fb":"\n# Split into validation and training data\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\n# Specify Model\niowa_model = DecisionTreeRegressor(random_state=1)\n# Fit Model\niowa_model.fit(train_X, train_y)\n\n# Make validation predictions and calculate mean absolute error\nval_predictions = iowa_model.predict(val_X)\nval_mae = mean_absolute_error(val_predictions, val_y)\nprint(\"Validation MAE when not specifying max_leaf_nodes: {:,.0f}\".format(val_mae))\n\n# Using best value for max_leaf_nodes\niowa_model = DecisionTreeRegressor(max_leaf_nodes=100, random_state=1)\niowa_model.fit(train_X, train_y)\nval_predictions = iowa_model.predict(val_X)\nval_mae = mean_absolute_error(val_predictions, val_y)\nprint(\"Validation MAE for best value of max_leaf_nodes: {:,.0f}\".format(val_mae))\n\n# Define the model. Set random_state to 1\nrf_model = RandomForestRegressor(random_state=1)\nrf_model.fit(train_X, train_y)\nrf_val_predictions = rf_model.predict(val_X)\nrf_val_mae = mean_absolute_error(rf_val_predictions, val_y)\n\nprint(\"Validation MAE for Random Forest Model: {:,.0f}\".format(rf_val_mae))","7bc5ee93":"# To improve accuracy, create a new Random Forest model which you will train on all training data\nrf_model_on_full_data = RandomForestRegressor(random_state=1)\n\n\n\n# fit rf_model_on_full_data on all data from the training data\n\nrf_model_on_full_data.fit(X, y)","73a39606":"# path to file you will use for predictions\ntest_data_path = '\/kaggle\/input\/home-data-for-ml-course\/test.csv'\n\n# read test data file using pandas\ntest_data = pd.read_csv(test_data_path)\n\n# create test_X which comes from test_data but includes only the columns you used for prediction.\n# The list of columns is stored in a variable called features\n#******************* text x = featuers columns\n\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\ntest_X = test_data[features] \n\n\n# make predictions which we will submit. \ntest_preds = rf_model_on_full_data.predict(test_X)\n\n\noutput = pd.DataFrame({'Id': test_data.Id,\n                       'SalePrice': test_preds})","bb4ccd23":"output.head()","b83b2e35":"print(output)\n","fc6419f1":"output.to_csv('submission.csv', index=False) # convert data frame into csv file","c79aa9e1":"# Creating a Model For the Competition\nBuild a Random Forest model and train it on all of **X** and **y**.","e96e45e7":"Load and Explore Data (EDA)","92dd917e":"# Test final data befor submit","67dfdeec":"![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/5407\/media\/housesbanner.png)","5f573254":"# The Challenge \ud83c\udfaf\nWith 79 explanatory variables describing (almost) every aspect of residential homes in Ames, Iowa, this competition challenges you to predict the final price of each home.","cdc7aaf2":"# Submission","ef6cb8b9":"**Print Full output to make sure rows, cols are corrects**","d8e97cf1":"# Predict House Prices Using Machine Learning","ee6e7354":"Convert data frame output into csv file submission.csv","0e1e9ebc":"Please consider upvoting if you find it useful to you \ud83d\udc4d.\n\nThanks.","41daf9c2":"# Make Predictions\nRead the file of \"test\" data. And apply your model to make predictions\n","238b0623":"Create featuers list as X\n* LotArea\n* YearBuilt\n* 1stFlrSF\n* 2ndFlrSF\n* FullBath\n* BedroomAbvGr\n* TotRmsAbvGrd\n\n\n"}}