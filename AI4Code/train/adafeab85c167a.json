{"cell_type":{"d586312e":"code","f5cf6754":"code","2c3eb03f":"code","378bf6b7":"code","c23f6f82":"code","436b781e":"code","1b7c79eb":"code","3abca2eb":"code","40a9072b":"code","1667f5e7":"code","6ea3f534":"code","255565af":"code","4b15c446":"code","6b528f61":"code","0881f1fd":"code","8d08b294":"code","9a9a5f04":"markdown","ce8265ea":"markdown","41265a2a":"markdown","155fdf9e":"markdown"},"source":{"d586312e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5cf6754":"pip install pycaret","2c3eb03f":"# Import library\nfrom pycaret.classification import *","378bf6b7":"# Load data and show the variables\ndf = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\ndf.info()","c23f6f82":"# EDA\nfrom pandas_profiling import ProfileReport\nprofile = ProfileReport(df, title=\"Hear Attack Data Report\")\nprofile.to_widgets()","436b781e":"# Data Preprocessing\nfrom pycaret.classification import *\nclassifier_model= setup(df,\n                        target='output', # Rarget variable\n                        fix_imbalance=True, # Apply SMOTE\n                        remove_multicollinearity=True, # Drop features with high VIF\n                        ignore_low_variance=True,\n                        session_id=10003, \n                        log_experiment=True, \n                        experiment_name='Heart Attack Prediction')","1b7c79eb":"# Show the model performance\nbest_model = compare_models()","3abca2eb":"# Create Forest Classifier\nrf_clf = create_model('rf')","40a9072b":"# Model Tuning\ntuned_rf = tune_model(rf_clf)","1667f5e7":"# Show the parameters\ntuned_rf.get_params","6ea3f534":"# Show Confusion Matrix\nplot_model(tuned_rf, plot = 'confusion_matrix')","255565af":"# Depict ROC Curve\nplot_model(tuned_rf)","4b15c446":"# Model evaluation with various metrics\nevaluate_model(tuned_rf)","6b528f61":"# Interpret the model \ninterpret_model(tuned_rf)","0881f1fd":"# Model interpretation with SHAP\ninterpret_model(tuned_rf, plot='reason', observation=15)","8d08b294":"# Model interpretation with correlation\ninterpret_model(tuned_rf, plot='correlation', observation=100)","9a9a5f04":"# Use PyCaret for Classification.","ce8265ea":"### Let's see Random Forest in detail.","41265a2a":"## <span style=\"color:red\">The kernel returned error.<em> But try it in your Jupyter or other notebooks.<\/em> It will work well<\/span>.<\/p>","155fdf9e":"The target variable is \"output\"."}}