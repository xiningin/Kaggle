{"cell_type":{"2a69c4b3":"code","53cdbc93":"code","6a53d95e":"code","98c0028e":"code","fa0a166e":"code","3054c91f":"code","1d48a658":"code","9802ef33":"code","69cdf14a":"code","f0631ba5":"code","3bbe006f":"code","437e5616":"code","d11d948b":"code","0eb869e1":"code","42625bce":"code","232ac80f":"code","7b0db05b":"code","d4489ece":"code","2654318e":"code","970f9467":"code","1e0f5540":"code","06a9afc6":"markdown","8063cca1":"markdown","82e5c229":"markdown","d7bac55e":"markdown","dabe9b4a":"markdown","42fe942f":"markdown","b9579222":"markdown","335eed42":"markdown","37e88e11":"markdown","8b97d651":"markdown","7141bd19":"markdown","0fb9a47d":"markdown","6f78d7c6":"markdown","2ddb1d36":"markdown","2272956b":"markdown","890ae831":"markdown","66ed2c95":"markdown","405de4c8":"markdown","1ced7e56":"markdown","0441bb50":"markdown","a6b9fbdb":"markdown","e3ae47e2":"markdown","7075cc5c":"markdown"},"source":{"2a69c4b3":"# Import section\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport datetime as dt\n\n#Import Dataset \ndf = pd.read_csv('..\/input\/youtube-trending-video-dataset\/FR_youtube_trending_data.csv')\n\ndf.info()","53cdbc93":"df.head()","6a53d95e":"#Cleaning the unnecessary columns\ndf.drop(['channelId', 'tags','thumbnail_link','comments_disabled','ratings_disabled','description'], axis=1, inplace=True)\ndf['publishedAt'] = pd.to_datetime(df['publishedAt'], format='%Y-%m-%d %H:%M:%S')\ndf['published_year'] = df['publishedAt'].dt.year\ndf['published_hour'] = df['publishedAt'].dt.hour\ndf['published_day'] = df['publishedAt'].apply(lambda x: dt.datetime.strftime(x, '%A'))\ndf['ratio'] = df['likes'] \/ ( df['likes'] + df['dislikes'])","98c0028e":"df[['view_count','likes','dislikes','ratio','comment_count']].describe()","fa0a166e":"grouped = pd.pivot_table(df,index='channelTitle',columns=['published_year'],values='video_id',aggfunc='count',margins='sum')\ngrouped = grouped.sort_values(by='All', ascending=False).head(21)\ngrouped = grouped.sort_values(by='All', ascending=True)\ngrouped = grouped.drop(['All'])\ngrouped.drop(['All'], axis=1, inplace=True)","3054c91f":"grouped.plot.barh(stacked=True,figsize=(15,10))\n\nplt.legend()\nplt.title('The 20 Top performing channels ordered by their appearance on the trending page',fontsize=15)\nplt.xlabel('Number of appearances')\n\nplt.show()","1d48a658":"def caps_percent(title):\n    title = title.replace(\" \",\"\")\n    if len(title) <= 0: return 0 \n    s = 0\n    for cr in title:\n        if cr.isupper():\n            s += 1\n    return ((round((s\/len(title))*100,0)) \/\/ 5)*5\n    #To make categories based on 5\n\ndf['percent_caps'] = df.title.apply(caps_percent)\ndf['len_title'] = df.title.apply(len)","9802ef33":"plt.figure(figsize=[15,8])\nplt.hist(df['percent_caps'],edgecolor='black', rwidth=0.9)\n\nmedian_caps = df['percent_caps'].mean()\nplt.axvline(median_caps,color='#fc4f30',label='Median')\n\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Number of appearance as a function of CAPSLOCK percentage',fontsize=15)\nplt.xlabel('percentage of CAPSLOCK in a title')\nplt.ylabel('Number of appearances')\n\nplt.show()","69cdf14a":"plt.figure(figsize=[15,8])\nplt.hist(df['len_title'],bins=20, edgecolor='black', rwidth=0.9)\n\nmedian_caps = df['len_title'].mean()\nplt.axvline(median_caps,color='#fc4f30',label='Median')\n\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Number of appearance as a function the number of characters in the title',fontsize=15)\nplt.xlabel('Number of characters in the title')\nplt.ylabel('Number of appearances')\n\nplt.show()","f0631ba5":"def views_cat(views):\n    if views <= 10000: return 'less than 10k'\n    if views <= 25000: return '25k'\n    if views <= 50000: return '50k'\n    if views <= 75000: return '75k'\n    if views <= 100000: return '100k'\n    if views <= 250000: return '250k'\n    if views <= 500000: return '500k'\n    if views <= 750000: return '750k'\n    if views <= 1000000: return '1m'\n    if views <= 2500000: return '2.5m'\n    if views <= 5000000: return '5m'\n    if views <= 7500000: return '7.5m'\n    if views <= 10000000: return '10m'\n    if views <= 15000000: return '15m'\n    else: return 'more than 15m'\n            \n\ndf['views_cat'] = df.view_count.apply(views_cat)","3bbe006f":"#Pivot table to create views category based on views_cat colum\nappreanf_f_view = df.groupby('views_cat').size().reset_index(name='counts').sort_values(by='counts', ascending=True)\nsorter = ['less than 10k','25k','50k','75k','100k','250k','500k','750k','1m','2.5m','5m','7.5m','10m','15m','more than 15m']\nsorterIndex = dict(zip(sorter, range(len(sorter))))\nappreanf_f_view['rank'] = appreanf_f_view['views_cat'].map(sorterIndex)\nappreanf_f_view = appreanf_f_view.sort_values(by='rank')\nappreanf_f_view.drop(['rank'], axis=1, inplace=True)","437e5616":"plt.figure(figsize=[25,15])\nplt.pie(appreanf_f_view.counts,autopct='%1.0f%%')\n\n\nplt.legend(sorter)\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('percentage of appearance as a function of views category ',fontsize=15)\n\nplt.show()","d11d948b":"ratio_cat = pd.pivot_table(df,index='ratio',values='video_id',aggfunc='count')","0eb869e1":"plt.figure(figsize=[15,8])\nplt.scatter(ratio_cat.index, ratio_cat.values)\n\nplt.axvline(0.95,color='#fc4f30',label='ratio of 95%')\n\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.xlim(0,1)\nplt.title('Number of appearance as a function of likes dislikes ratio',fontsize=15)\nplt.xlabel('Ratio of likes\/dislikes')\nplt.ylabel('Number of appearance')\n\nplt.show()","42625bce":"def dispatch_com(numb):\n    if numb <= 10: return 1\n    Mod = numb \/\/ 10\n    count_cr = len(str(numb)) - 1\n    text = str(Mod)[:1]\n    if count_cr > 1:\n        for i in range(count_cr-1):\n          text = text + \"0\"\n    return int(text)","232ac80f":"df['comment_cat'] = df.comment_count.apply(dispatch_com)\ncomment_cat = pd.pivot_table(df,index='comment_cat',values='video_id',aggfunc='count')\nplt.figure(figsize=[15,8])\nplt.plot(comment_cat.index, comment_cat.values)\n\n\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Number of appearances per multiple of 10 comments',fontsize=15)\nplt.xlabel('Comments per multiple of 10 comments')\nplt.ylabel('Number of appearances')\n\nplt.show()","7b0db05b":"\ndf['comment_cat'] = df.comment_count.apply(dispatch_com)\ncomment_cat = pd.pivot_table(df,index='comment_cat',values='video_id',aggfunc='count')\nplt.figure(figsize=[15,8])\nplt.plot(comment_cat.index, comment_cat.values)\n\nplt.axvline(100,color='#fc4f30',label='1000 comments')\nplt.xlim(0,2000)\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Number of appearances per multiple of 10 comments',fontsize=15)\nplt.xlabel('Comments per multiple of 10 comments')\nplt.ylabel('Number of appearances')\n\nplt.show()","d4489ece":"hour_cat = pd.pivot_table(df,index='published_hour',values='video_id',aggfunc='count')\nplt.figure(figsize=[15,8])\nplt.plot(hour_cat.index, hour_cat.values)\n\nplt.axvline(16,color='#fc4f30',label='16h')\n\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Probability of apparition as a function of hour of publication',fontsize=15)\nplt.xlabel('hour of publication')\nplt.ylabel('Number of appearance')\n\nplt.show()","2654318e":"day_cat = df.groupby('published_day').size().reset_index(name='counts').sort_values(by='counts', ascending=True)\nsorter = ['Monday','Tueday','Wednesday','Thursday','Friday','Saturday','Sunday']\nsorterIndex = dict(zip(sorter, range(len(sorter))))\nday_cat['rank'] = day_cat['published_day'].map(sorterIndex)\nday_cat = day_cat.sort_values(by='rank')\nday_cat.drop(['rank'], axis=1, inplace=True)","970f9467":"plt.figure(figsize=[15,8])\nplt.bar(day_cat.published_day, day_cat.counts)\n\nplt.legend()\n\nplt.title('Probability of apparition as a function of the day of publication',fontsize=15)\nplt.xlabel('Day of publication')\nplt.ylabel('Number of appearance')\n\nplt.show()","1e0f5540":"pivot = pd.pivot_table(df,index='published_hour',columns='published_day',values='video_id',aggfunc='count')\n\nplt.figure(figsize=[15,8])\nplt.plot(pivot.index, pivot.Sunday,label='Sunday')\nplt.plot(pivot.index, pivot.Friday,label='Friday')\nplt.plot(pivot.index, pivot.Wednesday,label='Wednesday')\n\nplt.axvline(16,color='#fc4f30',label='16h')\nplt.legend()\nplt.grid(axis='y', alpha=0.75)\nplt.grid(axis='x', alpha=0.75)\nplt.title('Probability of apparition as a function of best days and hour of publication',fontsize=15)\nplt.xlabel('hour of publication')\nplt.ylabel('Number of appearance')\n","06a9afc6":"## Does the number of comments endorse the probability of appearance?","8063cca1":"#### Analysis\nWe can see that the high number of comments is not correlated to the number of appearances. For that, we limit the graph (x-axis) to 20000 comments range in the next section","82e5c229":"Even though \"Pie Charts\" are not necessarly the best practice to visualize your Data ( check [article](https:\/\/bernardmarr.com\/why-you-shouldnt-use-pie-charts-in-your-dashboards-and-performance-reports\/) ) , I wanted to test the options offred by matplotlib library","d7bac55e":"#### Analysis & Conclusion:\n\nWe can conclude through this graph that making your video title with more CAPSLOCK will not help your video to appear on the trending page. \n\nCAPSLOCK titles may indeed be a trick for clickbait, but It seems that the YouTube algorithm is trying not to endorse this trend. \n\nAlso, Having a title with 40 characters on average may help your video.\n\n**PS: in this data set, all titles above 100 characters are truncated, so the information is not relevant**","dabe9b4a":"#### Analysis and conclusion\nHere we can see that 1000 comments are where we have a pic of appearance.  \n\nHowever, through this graph, we can not conclude that the more you have comments, the more likely you will appear on the trending page.","42fe942f":"#### Analysis & conclusion\nAs we can see, two categories outperform the others:\n* Between 100k and 250k views\n* Between 250k and 750k views\n\nHowever, it is interesting that all the categories are dispatched almost equally. It seems that the YouTube algorithm is not giving any huge advantage for videos depending on their number of views.\n\nWhat is also interesting is that we can find videos with less than 50k views on the trending page, offering tremendous visibility for these channels.","b9579222":"# What is the best day to post your video to appear on the trending page?","335eed42":"#### Analysis & conclusion\nThe scatter plot shows that the more the ratio of likes\/dislikes is between 95% and 100%, the more likely the video will appear on the trending page.\nWe can presume that the YouTube algorithm qualifies that these videos are suitable for a larger audience and can be endorsed on the trending page.\nIn fact, if the viewer is satisfied by his watch experience, naturally, he will press the like button. As a result, the video will be endorsed.\n\n**Reminder: This is a correlation and not a causation.**\n\n*On a side note, we can have another analysis on the impact of \"Call to action\" vs. This ratio*","37e88e11":"### Analysis and conclusion\nThere are no changes concerning the hours of publication except for Sunday, where you can publish the video slightly earlier (9 a.m) \n\nWednesday and Friday appear close to each other, so if you have a rhythm of 2 videos per week, it's good to choose these two days at 4 p.m time frame.","8b97d651":"## General inspections","7141bd19":"### Analysis and conclusion\nEven though we observe that all the days seem close to each other, but we can say that\n* Wednesday, Friday, and Sunday are the best days to post your video to appear on the trending page\n* Saturday is the worst day to post your video\n\nIn fact, this can also be explained by the french user's behavior. \n\nSaturday is usually dedicated to going out, and users are not likely to use the YouTube website. That's why it has the lowest reach.\n\nSunday marks the start of the working week, Wednesday is mid of the working week, and Friday is the end of the working week users tend to consume more entertainment content, thus, the high number of appearances.","0fb9a47d":"## Does the number of views boost the probability of appearance?","6f78d7c6":"## The 20 Top performing channels ordered by their appearance ","2ddb1d36":"### Analysis and conclusion\n\nIt seems that the best timing to publish your video is either at 10 a.m or 4 p.m \n\nThis may be linked to French behavior habits. French workers and students tend to have small pauses during these two-time frames throughout the day. As a result, this behavior and these two pics can be correlated.\n\nAlso, The video posted at 4 p.m have a longer time to be digested after working hours, as well it can be linked.","2272956b":"## Does the ratio of likes\/dislikes boost the probability of appearance?","890ae831":"# Combining the best days vs. hours of publication","66ed2c95":"#### Analysis\n\nThrough this table, we retreive that trending videos have in average, \n* 1 099 571 views\n* 78 819.7 likes\n*  1 310.24 dislike\n* ratio likes\/dislikes = 97%\n*  7 305 comments\n\nHowever, this calculation doesn't help us conclude since it's an average between all the DATA, and it can be misleading.","405de4c8":"> Notice:\n**I used this case study to train myself using my new skills in Data analysis, so please do not take this work as a guide for your next video creation** ","1ced7e56":"## What is the best hour to post your video to appear on the trending page?","0441bb50":"# General conclusions\n\n1. Writing the title of your videos in CAPSLOCK does not increase the probability of your video appearing on the trending page\n2. The number of views is not highly related to the probability of appearance\n3. The best days to publish your videos are Wednesday, Friday, and Sunday\n4. The best time frames to publish your videos are 10 a.m and 4 p.m\n5. The higher your likes \/ dislikes ratio, the more likely you can appear on the trending page\n\nAs a result, to appear on the trending page, you can follow this strategy\n* Write a self-descriptive title without forcing on CAPSLOCK\n* Try to post twice a week at 4 p.m to increase your chances to appear on the trending page\n* Give genuine and attractive content to assure a positive likes\/dislikes ratio of up to 90% or more\n\n# Limitataions\nIn these studies, there are few limitations\n* All these conclusions are based on correlations, not on causation\n* There is missing information on viewer retention per video \n* There is missing information on click-through rate per video\n* There is missing information on the impact of the Thumbnail if there is any trend.\n* There is missing information on video length in the data set that can complement this study","a6b9fbdb":"#### Analysis \nWe can observe that there is a noticeable presence of Football youtube channels, especially those related to local TV.\n\nAs for full time dedicated YouTubers, we can rank them as follows:\n1. Michou\n2. SQUEEZIE\n3. HugoD\u00e9crypte\n4. Amixem\n5. Fuze III","e3ae47e2":"## Does the title written in CAPSLOCK affect your visibility?","7075cc5c":"# Patterns in French YouTube Trending page\n\nAfter getting my professional google certificate in Data Analytics, I tried to use my new skills to solve a problem I encountered when I was a content creator on YouTube.\n\nWe usually tend to see patterns for the successful videos that find themselves on the YouTube trending page, such as:\n* Should we write our titles in CAPSLOCK\n* Is the number of views boost the probability of appearance on the trending page?\n* Is the number of comments boost the probability of appearance on the trending page?\n* Should you have a ratio of more than 95% for your video success?\n* What is the best day to post your video to appear on the trending page?\n* What is the best time frame to post your video to appear on the trending page?\n\nI will try through the data available in [Rishav Sharma Dataset](https:\/\/www.kaggle.com\/rsrishav\/youtube-trending-video-dataset?select=FR_youtube_trending_data.csv) to find any correlation or patterns"}}