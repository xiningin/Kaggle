{"cell_type":{"e453898b":"code","851fb4fa":"code","c83a2cb7":"code","bb2f6214":"code","a5e56c5b":"code","53e56163":"code","f7afb618":"code","3dcca3a2":"code","78b3835a":"code","8d3faf1c":"code","df50d332":"code","ff844a21":"code","670f2a98":"code","ee454cbc":"code","783067a4":"code","43188f3f":"code","9315af69":"code","29bba91f":"code","8f202f9d":"code","b7525ab5":"code","f47cfcdb":"code","57588ad5":"code","52dd3dba":"code","d7f6d920":"code","a756d4ba":"code","4e627b95":"code","9df31465":"code","c910014a":"code","1b6fc26b":"code","e1e876e9":"code","6acdd956":"code","7bd32e27":"code","ce49733f":"code","06f13094":"code","8aa9f17c":"code","e42e5ec7":"markdown","da9e58ad":"markdown","7e9669f9":"markdown","8202b388":"markdown","0aebd70c":"markdown","71c10544":"markdown","03cc84a1":"markdown","82bba4c1":"markdown","c638d506":"markdown","ce6c351f":"markdown","77b295bb":"markdown","b8c6e06a":"markdown"},"source":{"e453898b":"import pandas as pd","851fb4fa":"titanic_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntitanic_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntitanic_gen = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\n","c83a2cb7":"titanic_train.info()\nprint('****' * 20)\ntitanic_train.info()\n","bb2f6214":"print(titanic_train.head())\n\nprint('***'*20)\ntitanic_test.head()","a5e56c5b":"print(titanic_train.shape)\nprint('***'*10)\ntitanic_test.shape","53e56163":"print(titanic_train.describe())\nprint('***'*20)\ntitanic_train.describe()","f7afb618":"#titanic_train['Cabin'].isnull().sum()\n#titanic_train['Cabin'].isnull().count()\n#titanic_train['Cabin'].count()\n","3dcca3a2":"def missing_data(dataset):\n    total = dataset.isnull().sum().sort_values(ascending = False)\n    percent = (dataset.isnull().sum()\/dataset.isnull().count()).sort_values(ascending = False)\n    missing_data = pd.concat([total,percent], axis=1, keys=['Total','Percent'])\n    return missing_data\n\nprint('#missing values from titanic_train dataset')\n#missing_data_train = missing_data(titanic_train[['Cabin']])\/['cabin']\nmissing_data_train = missing_data(titanic_train)\nprint(missing_data_train)\n\n                               ","78b3835a":"print('#missing values from titanic_train dataset')\nmissing_data_test = missing_data(titanic_test)\nprint(missing_data_test)\n","8d3faf1c":" def drop_missing(dataset, missing, values):\n    dataset = dataset.drop((missing[missing['Percent']> values]).index, axis=1)\n    print(dataset.isnull().sum().sort_values(ascending = False))\n    return dataset\ntitanic_train = drop_missing(titanic_train, missing_data_train, 0.60)\n","df50d332":"titanic_test = drop_missing(titanic_test, missing_data_test, 0.60)\n","ff844a21":"import numpy as np","670f2a98":"def numeric_features(dataset):\n    numeric_col = dataset.select_dtypes(include = np.number).columns.tolist()\n    return dataset[numeric_col].head() # important\nnumeric_col1 = numeric_features(titanic_train)\nprint('numeric_feature for train')\nprint(numeric_col1)","ee454cbc":"def categorial_features(dataset):\n    categorial_col = dataset.select_dtypes(exclude = np.number).columns.tolist()\n    return dataset[categorial_col].head() # important\ncategorial_col1 = categorial_features(titanic_train)\nprint('categorial_feature for train')\nprint(categorial_col1)","783067a4":"def check_datatypes(dataset):\n    return dataset.dtypes\ncheck_datatypes(titanic_train)\n\n","43188f3f":"check_datatypes(titanic_test)","9315af69":"# to impute null values\ntitanic_train['Age']=titanic_train['Age'].fillna(titanic_train['Age'].mean())\ntitanic_test['Age']=titanic_test['Age'].fillna(titanic_test['Age'].mean())\ntitanic_test['Fare']=titanic_test['Fare'].fillna(titanic_test['Fare'].mean())\n","29bba91f":"titanic_train['Embarked'].value_counts(normalize = True)\n\n","8f202f9d":"titanic_train['Embarked'].fillna('S', inplace = True)","b7525ab5":"import matplotlib.pyplot as plt\nimport seaborn as sns","f47cfcdb":"plt.figure(figsize = (15, 6))\nsns.heatmap(titanic_train.corr(), annot = True)","57588ad5":"sns.pairplot(titanic_train)","52dd3dba":"titanic_train.drop([\"Name\", \"Ticket\"], axis=1, inplace = True)\ntitanic_test.drop([\"Name\", \"Ticket\"], axis=1, inplace = True)","d7f6d920":"from sklearn import preprocessing\nlb = preprocessing.LabelEncoder()\ntitanic_train['Embarked'] = lb.fit_transform(titanic_train['Embarked'])\ntitanic_train['Sex'] = lb.fit_transform(titanic_train['Sex'])\ntitanic_train.head()\n","a756d4ba":"titanic_test['Embarked'] = lb.fit_transform(titanic_test['Embarked'])\ntitanic_test['Sex'] = lb.fit_transform(titanic_test['Sex'])\ntitanic_test.head()\n","4e627b95":" titanic_train = pd.DataFrame(titanic_train)\n titanic_test = pd.DataFrame(titanic_test)\n","9df31465":"#dependent and independent variable\nx_titanic_train = titanic_train.drop(['PassengerId', 'Survived'], axis = 1)\ny_titanic_train = titanic_train['Survived']\nx_titanic_test = titanic_test.drop(['PassengerId'], axis = 1)\ny_titanic_gen = titanic_gen.drop(['PassengerId'], axis = 1)\nx_titanic_train.shape, y_titanic_train.shape, x_titanic_test.shape, y_titanic_gen.shape","c910014a":"from sklearn.linear_model import LogisticRegression","1b6fc26b":"classifier = LogisticRegression(solver= 'liblinear', random_state = 0)\nclassifier.fit(x_titanic_train, y_titanic_train)\n","e1e876e9":"#accuracy rate of outer model\ny_pred = classifier.predict(x_titanic_test)\ny_pred\n","6acdd956":"from sklearn.metrics import accuracy_score","7bd32e27":"acc = accuracy_score(y_pred, y_titanic_gen)\nacc","ce49733f":"submission = titanic_gen[['PassengerId']]\nab = pd.DataFrame({'Survived':y_pred})\nsubmission['Survived'] = ab\nsub_file = submission\n\n                              ","06f13094":"submission.head()","8aa9f17c":"sub_file.to_csv('submission.csv', index = False)","e42e5ec7":"# identify numeric feature","da9e58ad":"# introduction","7e9669f9":"# identify categorial feature","8202b388":"# classification model","0aebd70c":"# correlation of features and feature selection","71c10544":"# load and prepare data","03cc84a1":"# dropping missing values","82bba4c1":"# Building Model\n","c638d506":"# identify missing value","ce6c351f":"# Change Categorial Features into Numeric Feature","77b295bb":"# fill null values in continuous features","b8c6e06a":"# check data type of features"}}