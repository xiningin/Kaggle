{"cell_type":{"28904f12":"code","1bab5583":"code","736dff9e":"code","ad5f1f03":"code","86141e50":"code","600036a3":"code","5a57a5fd":"code","eaad600a":"code","01397373":"code","5e7fe28e":"code","5692a986":"code","c42c3f6e":"code","ce65ce73":"code","9186e0cd":"code","8ba6e894":"code","28d989d0":"code","05894f27":"code","2272ebcc":"code","f3f4669b":"code","fe51b532":"code","844866a6":"code","e1465ee2":"code","de8a0715":"code","55fd1426":"code","767bec40":"code","0117f48c":"code","5feaba73":"code","856a13eb":"code","ce1cf224":"code","1e026355":"code","2dd603c4":"markdown","0e9a0b12":"markdown","8965a2db":"markdown","551571d7":"markdown","5c1d6c17":"markdown","9975370e":"markdown","4232f85f":"markdown","c4c65cb8":"markdown","3ae1ba8e":"markdown","3fd3cbc2":"markdown","c9f79f6e":"markdown","b0d85d1a":"markdown"},"source":{"28904f12":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.simplefilter(\"ignore\")","1bab5583":"data = pd.read_csv(\"..\/input\/fetal-health-classification\/fetal_health.csv\")\ndata.head()","736dff9e":"data.shape","ad5f1f03":"# Checking for missing values in the dataset\ndata.isna().sum()","86141e50":"data.describe().T","600036a3":"fig, ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.corr(), annot=True, fmt='.1g', cmap=\"Greens\", cbar=False);","5a57a5fd":"plt.style.use(\"seaborn\")\nplt.figure(figsize=(15,8))\nplt.title(\"Fetal Health\", fontsize=20, y=1.02)\nsns.countplot(x = data.fetal_health, palette=\"Greens\")\nplt.show()","eaad600a":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(3,1, figsize=(15,20)) \n\n\nsns.histplot(x = data[\"fetal_movement\"], kde=True, ax=ax[0], color=\"navy\", bins=20);\nax[0].set_xlabel(\"fetal_movement\",fontsize=15);\n\nsns.histplot(x = data[\"accelerations\"], kde=True, ax=ax[1], color=\"darkorange\");\nax[1].set_xlabel(\"accelerations\",fontsize=15);\n\nsns.histplot(x = data[\"uterine_contractions\"], kde=True, ax=ax[2], color=\"firebrick\");\nax[2].set_xlabel(\"uterine_contractions\",fontsize=15);","01397373":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(1,3, figsize=(20,7)) \n\n\nsns.histplot(x = data[\"light_decelerations\"], kde=True, ax=ax[0], color=\"navy\", bins=20);\n\nsns.histplot(x = data[\"severe_decelerations\"], kde=True, ax=ax[1], color=\"darkorange\");\n\nsns.histplot(x = data[\"prolongued_decelerations\"], kde=True, ax=ax[2], color=\"firebrick\");","5e7fe28e":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(3,1, figsize=(15,20)) \n\nsns.scatterplot(x = data['light_decelerations'], y = data['fetal_health'], hue = data['fetal_health'], ax=ax[0], palette='crest');\nax[0].set_xlabel(\"light_decelerations\",fontsize=15);\n\nsns.scatterplot(x = data['severe_decelerations'], y = data['fetal_health'], hue = data['fetal_health'], ax=ax[1], palette='crest');\nax[1].set_xlabel(\"severe_decelerations\",fontsize=15);\n\nsns.scatterplot(x = data['prolongued_decelerations'], y = data['fetal_health'], hue = data['fetal_health'], ax=ax[2], palette='crest');\nax[2].set_xlabel(\"prolongued_decelerations\",fontsize=15);","5692a986":"fig, ax = plt.subplots(figsize=(8,8))\nplt.pie(x=data[\"fetal_health\"].value_counts(), \n        colors=[\"limegreen\",\"green\",\"darkgreen\"], \n        labels=[\"1\",\"2\",\"3\"], \n        shadow = True, \n        autopct=\"%1.2f%%\", \n        explode = (0, 0.1,0.05)\n        )\nplt.show()","c42c3f6e":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(1,2, figsize=(20,7)) \n\n\nsns.histplot(x = data[\"baseline value\"], kde=True, ax=ax[0], color=\"navy\", bins=20);\n\nsns.histplot(x = data[\"abnormal_short_term_variability\"], kde=True, ax=ax[1], color=\"darkorange\");","ce65ce73":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(3,1, figsize=(15,20)) \n\nsns.histplot(x = data[\"mean_value_of_short_term_variability\"], ax=ax[0], color=\"forestgreen\",kde=True); \n\nsns.histplot(x = data[\"percentage_of_time_with_abnormal_long_term_variability\"], ax=ax[1], color=\"forestgreen\",kde=True); \n\nsns.histplot(x = data[\"mean_value_of_long_term_variability\"], ax=ax[2], color=\"forestgreen\",kde=True); ","9186e0cd":"# X data\nX = data.drop(\"fetal_health\", axis=1)\nX.head()","8ba6e894":"# y data\ny = data[\"fetal_health\"]\ny.head()","28d989d0":"# Splitting the data into X train, X test and y train, y test\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=42)","05894f27":"len(X_train), len(X_test)","2272ebcc":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)","f3f4669b":"RandomForestClassifierScore = rfc.score(X_test,y_test)\nprint(\"Accuracy obtained by Random Forest Classifier model:\",RandomForestClassifierScore*100)","fe51b532":"from sklearn import metrics\ny_pred_rfc = rfc.predict(X_test)\nprint(metrics.classification_report(y_test, y_pred_rfc))","844866a6":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(4)\nknn.fit(X_train,y_train)","e1465ee2":"KNeighborsClassifierScore = knn.score(X_test,y_test)\nprint(\"Accuracy obtained by K Neighbors Classifier model:\",KNeighborsClassifierScore*100)","de8a0715":"y_pred_knn = knn.predict(X_test)\nprint(metrics.classification_report(y_test, y_pred_knn))","55fd1426":"from sklearn.ensemble import GradientBoostingClassifier\nsgb = GradientBoostingClassifier(subsample = 0.90, max_features = 0.70)\nsgb.fit(X_train, y_train)","767bec40":"StochasticGradientBoostingScore = sgb.score(X_test,y_test)\nprint(\"Accuracy obtained by Stochastic Gradient Boosting model:\", StochasticGradientBoostingScore*100)","0117f48c":"y_pred_sgb = sgb.predict(X_test)\nprint(metrics.classification_report(y_test, y_pred_sgb))","5feaba73":"from xgboost import XGBClassifier\nxgb = XGBClassifier(booster = 'gbtree', learning_rate = 0.1, max_depth = 5, n_estimators = 180)\nxgb.fit(X_train, y_train);","856a13eb":"XGBClassifierScore = xgb.score(X_test,y_test)\nprint(\"Accuracy obtained by XGB Classifier model:\", XGBClassifierScore*100)","ce1cf224":"y_pred_xgb = xgb.predict(X_test)\nprint(metrics.classification_report(y_test, y_pred_xgb))","1e026355":"x = [\"K Neighbors Classifier\",\n     \"Random Forest Classifier\", \n     \"XGB Classifier\",\n     \"Stochastic Gradient Boosting\"]\n\ny = [KNeighborsClassifierScore,\n     RandomForestClassifierScore, \n     XGBClassifierScore,\n     StochasticGradientBoostingScore]\n\nfig, ax = plt.subplots(figsize=(12,7))\nsns.barplot(x=x,y=y, palette=\"Greens\");\nplt.ylabel(\"Model Accuracy\")\nplt.xticks(rotation=45, fontsize=12)\nplt.title(\"Model Comparison - Model Accuracy\", fontsize=15, fontname=\"Helvetica\", y=1.03)\nplt.show()","2dd603c4":"<div class=\"alert alert-success\">\n    <h1 align='center'>Stochastic Gradient Boosting<\/h1>\n<\/div>","0e9a0b12":"<div class=\"alert alert-success\">\n    <h1 align='center'>Splitting up the data into training and test sets<\/h1>\n<\/div>","8965a2db":"<div class=\"alert alert-success\">\n    <h1 align='center'>Fetal Health Classification<\/h1>\n<\/div>","551571d7":"<center>\n    <strong>Here, we are trying to predict the fetal health of the patient using the given data. Hence, the `fetal_health` will be the y label and rest of the data will be the X or the input data.<\/strong>\n<\/center>","5c1d6c17":"<div class=\"alert alert-success\">\n    <h1 align='center'>XGB Classifier<\/h1>\n<\/div>","9975370e":"<div class=\"alert alert-success\">\n    <h1 align='center'>Loading up the data<\/h1>\n<\/div>","4232f85f":"<div class=\"alert alert-success\">\n    <h1 align='center'>K Neighbors Classifier<\/h1>\n<\/div>","c4c65cb8":"<div class=\"alert alert-success\">\n    <h1 align='center'>Comparing Performance of the Models on the Test Set<\/h1>\n<\/div>","3ae1ba8e":"<div class=\"alert alert-success\">\n    <h1 align='center'>Random Forest Classifier<\/h1>\n<\/div>","3fd3cbc2":"#### If you like my work, It will be really great of you to upvote this notebook!\n#### If not then you leaving a comment on what do I need to work on and improve will be really helpful!","c9f79f6e":"## <span style=\"color:seagreen;\"> Heatmap Correlation <\/span>","b0d85d1a":"# <span style=\"color:seagreen;\"> Importing Libraries <\/span>"}}