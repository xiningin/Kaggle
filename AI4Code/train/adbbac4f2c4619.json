{"cell_type":{"08c64fd1":"code","46e8a67c":"code","091f1022":"code","a52ddfed":"code","8c039d8c":"code","a2928892":"code","e57ae1fa":"code","a7a727a7":"code","eeab22ab":"code","fb4c2f4a":"code","d3b9faa4":"code","98f1c308":"code","4df6b724":"code","5691f827":"code","7f011601":"code","9a6e0de5":"code","5de9116b":"code","685d0c86":"code","3a54568c":"markdown","dbed2e2a":"markdown","d1ba7e5e":"markdown","b7771809":"markdown","d5c98639":"markdown","e8f3e809":"markdown"},"source":{"08c64fd1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndf_train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")","46e8a67c":"df_train.head()","091f1022":"y = df_train[\"label\"]\ndf_train.drop([\"label\"], axis=1, inplace=True)","a52ddfed":"df_train.head()","8c039d8c":"df_train = df_train.values.reshape(-1, 28, 28, 1)\ndf_train.shape","a2928892":"df_train = df_train\/255.0","e57ae1fa":"sns.barplot(x = y.unique(), y = y.value_counts())\nplt.ylabel('Digit Frequency')\nplt.xlabel('Digit')","a7a727a7":"from sklearn.model_selection import train_test_split\n\nX_train, X_val, y_train, y_val = train_test_split(df_train, y, test_size=0.25, random_state=42)","eeab22ab":"from tensorflow import keras   \n\nm = keras.Sequential()\nm.add(keras.layers.Conv2D(32, (3, 3), activation=\"relu\", kernel_initializer='he_uniform', input_shape=(28, 28, 1)))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(32, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.20))\n\nm.add(keras.layers.Conv2D(64, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(64, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.2))\n\nm.add(keras.layers.Conv2D(128, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\n\nm.add(keras.layers.Conv2D(128, (3, 3), activation=\"relu\", padding='same', kernel_initializer='he_uniform'))\nm.add(keras.layers.BatchNormalization())\nm.add(keras.layers.MaxPool2D(2, 2))\nm.add(keras.layers.Dropout(0.2))\n\nm.add(keras.layers.Flatten())\nm.add(keras.layers.Dropout(0.2))\nm.add(keras.layers.Dense(128, activation=\"relu\"))\nm.add(keras.layers.Dense(10, activation=\"softmax\"))","fb4c2f4a":"m.compile(optimizer=keras.optimizers.RMSprop(), loss=\"sparse_categorical_crossentropy\", metrics=[\"acc\"])","d3b9faa4":"lr_reduce = keras.callbacks.ReduceLROnPlateau(monitor='val_acc', \n                                            patience=2, \n                                            verbose=1, \n                                            factor=0.1, \n                                            min_lr=0.003)","98f1c308":"history = m.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=30, batch_size=20, validation_batch_size=20, callbacks=[lr_reduce])","4df6b724":"import pandas as pd\n\npd.DataFrame(history.history).plot(figsize=(8, 5))\nplt.grid(True)\nplt.gca().set_ylim(0, 1)\nplt.show()","5691f827":"df_test = df_test.values.reshape(-1,28,28,1)\ndf_test = df_test\/255.0\npred = np.argmax(m.predict(df_test), axis = 1)","7f011601":"ans = pd.DataFrame({\"ImageId\" : range(1, 28001), \"Label\":pred})","9a6e0de5":"ans.head()","5de9116b":"ans.to_csv(\"official_submission.csv\", index=False)","685d0c86":"from matplotlib import pyplot as plt\n\n# Change \"cnt\" to any value between 0 and 28000 to see the prediction and the correct label\ncnt = 512\nprint(\"Image label is:| \", pred[cnt])\nplt.imshow(df_test[cnt][:,:,0])","3a54568c":"# Submitting Test Data","dbed2e2a":"## Checking your predictions","d1ba7e5e":"# Imports","b7771809":"# Preprocessing and Visualizing Data","d5c98639":"# Building a CNN","e8f3e809":"# Train_Test_Split"}}