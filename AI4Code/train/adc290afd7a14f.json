{"cell_type":{"0cc69f8f":"code","fd9f49ee":"code","12482b7b":"code","7a806c67":"code","d59c4a83":"code","abeae110":"code","a7cf219c":"code","24e38505":"code","1d2b870b":"code","3ce1b2f9":"code","be6bd687":"code","53365a99":"code","640cce79":"code","3d336ac9":"code","10abcab4":"code","83a657da":"code","915add4e":"code","791aa1db":"code","8d942051":"code","3b7c0002":"code","7261d242":"code","b64630b3":"code","ad271ba1":"code","c5db3921":"code","2c92fdd9":"code","4d1fab84":"code","002fd893":"code","b21d7e4f":"code","f3df3cd1":"code","5fcfe306":"code","6cc62bee":"code","d25745d4":"code","a0e4003f":"code","e9d80605":"code","fd595749":"code","1e29c1d8":"code","2453c2cf":"code","e28f8332":"code","c86f941f":"code","2ec516c2":"markdown","5e6ab39b":"markdown","a3324afc":"markdown","3a62e7eb":"markdown","dc4638c3":"markdown","e90b40cc":"markdown","962e93ff":"markdown","023cba1d":"markdown","dd96e881":"markdown","76e4c2fc":"markdown","e9da54c9":"markdown","d048c3e4":"markdown","2b9b3088":"markdown","c921becf":"markdown","247e0d0b":"markdown","48afb105":"markdown","2d56f9d0":"markdown","ebfd4f8d":"markdown"},"source":{"0cc69f8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd9f49ee":"#import libraries\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom sklearn.preprocessing import LabelEncoder\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom iso3166 import countries\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom sklearn.preprocessing import LabelEncoder\nimport warnings\nwarnings.filterwarnings(\"ignore\")","12482b7b":"data = pd.read_csv(\"\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv\")\ndata.head(10)\n#Unnamed:0 and Unnamed:0.1 are not necessary, probably they represent each index \n#so I need to drop these columns \n","7a806c67":"data = data.drop(['Unnamed: 0', 'Unnamed: 0.1'], axis = 1) # axis 1 means column\n","d59c4a83":"data.describe()","abeae110":"data.info()","a7cf219c":"data.columns","24e38505":"dataset0 = data[\"Company Name\"].value_counts().reset_index()\ndataset0","1d2b870b":"#To understand better, it should be visualized, bar plot.\nfig = go.Figure(go.Bar(x = dataset0[\"index\"],\n                       y = dataset0[\"Company Name\"],\n                       marker = dict(color = dataset0[\"Company Name\"],\n                                    colorscale = \"gray\")))\nfig.update_layout(title = \"Number of Launches by Every Company\", xaxis_title = \"Top 28 Country\", yaxis_title = \"count\", hovermode = \"x\")\nfig.show()","3ce1b2f9":"dataset4 = data[\"Status Rocket\"].value_counts().reset_index()[:3]\ndataset4","be6bd687":"fig = px.pie(dataset4, values = \"Status Rocket\", names = \"index\", title = \"Status Rocket\")\nfig.show()","53365a99":"dataset6 = data[\"Status Mission\"].value_counts().reset_index()\ndataset6","640cce79":"fig6 = px.bar(dataset6, x = \"index\", y = \"Status Mission\", title = \"Mission Status\")\nfig6.show()","3d336ac9":"np.sum(pd.isna(data.loc[:,\" Rocket\"]))\n","10abcab4":"data_ = data.dropna(subset=[\" Rocket\"], axis = \"rows\")\nlen(data_)","83a657da":"np.sum(pd.isna(data_.loc[:,\" Rocket\"]))\n","915add4e":"data_.loc[:, \" Rocket\"]","791aa1db":"data_.loc[:, \" Rocket\"] = data_.loc[:, \" Rocket\"].fillna(0.0).str.replace(\",\",\"\")\ndata_.loc[:, \" Rocket\"] = data_.loc[:, \" Rocket\"].astype(np.float64).fillna(0.0)","8d942051":"data_d = data_[data_.loc[:, \" Rocket\"]<1000]\nplt.figure(figsize = (22,6))\nsns.histplot(data = data_d, x = \" Rocket\", hue = \"Status Rocket\")\nplt.show()","3b7c0002":"np.sum(pd.isna(data.loc[:,\"Status Mission\"]))\n","7261d242":"plt.figure(figsize = (22,6))\nsns.histplot(data = data_d, x = \" Rocket\", hue = \"Status Mission\")\nplt.show()","b64630b3":"data_.head()","ad271ba1":"data_money = data_.groupby([\"Company Name\"])[\" Rocket\"].sum().reset_index()\ndata_money = data_money[data_money[\" Rocket\"] > 0]\ndata_money.head()","c5db3921":"data_money_ = data_money.sort_values(by = [\" Rocket\"], ascending = False)[:15]\ndata_money_.head()","2c92fdd9":"fig = px.bar(data_money_, x = \"Company Name\", y = \" Rocket\", title = \"Total Money Spent\")\nfig.show()","4d1fab84":"data[\"date\"] = pd.to_datetime(data[\"Datum\"])\ndata.head()","002fd893":"data[\"year\"] = data[\"date\"].apply(lambda datetime: datetime.year)\ndata.head()","b21d7e4f":"dataset2 = data[\"year\"].value_counts().reset_index()\ndataset2","f3df3cd1":"fig2 = px.bar(dataset2, x = \"index\", y = \"year\", title = \"Missions Number each Year\")\nfig2.show()","5fcfe306":"encoder = LabelEncoder()\nencoder.fit(data[\"Status Mission\"])\nencoder","6cc62bee":"colors = {0: \"red\", \n          1 : \"Orange\", \n          2 : \"Yellow\", \n          3 : \"Green\"}\ncolors","d25745d4":"countries_dict = {\n    'Russia' : 'Russian Federation',\n    'New Mexico' : 'USA',\n    \"Yellow Sea\": 'China',\n    \"Shahrud Missile Test Site\": \"Iran\",\n    \"Pacific Missile Range Facility\": 'USA',\n    \"Barents Sea\": 'Russian Federation',\n    \"Gran Canaria\": 'USA'\n}\ndata[\"country\"] = data[\"Location\"].str.split(\", \").str[-1].replace(countries_dict)\ndata.head()","a0e4003f":"fig1 = make_subplots(rows = 4, cols = 4, subplot_titles = data[\"country\"].unique())\nfor i, country in enumerate(data[\"country\"].unique()):\n    counts = data[data[\"country\"] == country][\"Status Mission\"].value_counts(normalize = True)*100\n    color = [colors[x] for x in encoder.transform(counts.index)]\n    trace = go.Bar(x = counts.index, y = counts.values, name = country, marker = {\"color\" : color}, showlegend = False)\n    fig1.add_trace(trace, row = (i\/\/4) + 1, col = (i%4)+1)\nfig1.update_layout(title = {\"text\":\"Countries and Mission Status\"}, height = 1000, width = 900)\nfor i in range(1,5):\n    fig1.update_yaxes(title_text = \"Percentage\", row = i, col = 1)\nfig1.show()","e9d80605":"sun = data.groupby([\"country\",\"Company Name\",\"Status Mission\"])[\"Datum\"].count().reset_index()\nsun.head(10)","fd595749":"sun = sun[(sun.country == \"USA\") | (sun.country == \"China\") | (sun.country == \"Russian Federation\") | (sun.country == \"France\")]\nsun.head(10)","1e29c1d8":"fig = px.sunburst(sun, path = [\"country\", \"Company Name\", \"Status Mission\"], values = \"Datum\", title = \"Sunburst Chart for some Countries\")\nfig.show()","2453c2cf":"country_dict = dict()\nfor c in countries:\n    country_dict[c.name] = c.alpha3\ndata[\"alpha3\"] = data[\"country\"]\ndata = data.replace({\n    \"alpha3\":country_dict\n})\ndata.loc[data[\"country\"]== \"North Korea\",\"alpha3\"] = \"PRK\"\ndata.loc[data[\"country\"]== \"South Korea\",\"alpha3\"] = \"KOR\"\ndata.head(10)","e28f8332":"mapdata = data.groupby([\"country\",\"alpha3\"])[\"Status Mission\"].count().reset_index()\nmapdata.head()","c86f941f":"fig = px.choropleth(mapdata, locations = \"alpha3\", hover_name = \"country\", color = \"Status Mission\", title =\"Status Mission by Countries\")\nfig.show()","2ec516c2":"<a id=\"7\"><\/a>\n## Cost Distribution of Rockets with Mission Status","5e6ab39b":"<a id=\"9\"><\/a>\n## Numbers of Mission each year\n","a3324afc":"### We should know what the colums of data is about. \n* Column at index 0 is company names which launched the rockets.\n* Column at index 1 is the locations of where they are launched.\n* Column at index 2 is the exact time when they are launched.\n* Column at index 3 is the detail information about rocket name, etc.\n* Column at index 4 is the status of rockets if they are still active or not.\n* Column at index 5 is the Cost of the mission in $ million.\n* Column at index 6 is the status of mission if they were success or not.","3a62e7eb":"# Space Mission from 1957 Exploratory Data Analysis","dc4638c3":"<a id=\"2\"><\/a>\n## Data Analysis","e90b40cc":"<a id=\"3\"><\/a>\n## How many launches have been done by the companies?\n","962e93ff":"<a id=\"6\"><\/a>\n## Rocket Cost Distribution with Rocket Status\n","023cba1d":"For examples, RVSN USSR have launched 1777 rockets that's why it is dominant in the bar plot which is red. And also, SpaceX has launched 100 rockets, NASA has 203, Boeing sent 136 rockets, etc.","dd96e881":"As shown above\n* 3534 rockets are not active anymore.\n* 790 rockets are still active.","76e4c2fc":"<a id=\"4\"><\/a>\n## Rocket Status: If they are active or deactive","e9da54c9":"<a id=\"11\"><\/a>\n## Sunburst Chart Analysis\n","d048c3e4":"As shown above\n* 3879 rockets have succesfully launched.\n* 339 rockets have failed to be launched.\n* 102 rockets have partially failed to be launched.\n* 4 rockets have failed before launching.","2b9b3088":"<a id=\"1\"><\/a>\n## Import Libraries\n\n\n","c921becf":"<a id=\"12\"><\/a>\n## Status Mission by Countries in World Map\n","247e0d0b":"* As shown above, you can see which countries, how many rockets, who and when is it happened.","48afb105":"<a id=\"5\"><\/a>\n## Analysis of Mission Status\n","2d56f9d0":"<a id=\"10\"><\/a>\n## Countries and Mission Status\n","ebfd4f8d":"<a id=\"8\"><\/a>\n## How much money have been spent for each company\n"}}