{"cell_type":{"b0611cdc":"code","a383e07b":"code","4612da35":"code","75373181":"code","131c8dbf":"code","8a9352a1":"code","21d38ec2":"code","88b6c4fc":"code","7c331dc9":"code","6560c67d":"code","dfcb4569":"code","b1d4d030":"code","f0edbe34":"code","e1536e82":"code","e7072d8a":"code","e29f4489":"code","e5149ff0":"code","52f17d77":"code","8c22144e":"code","11ec5d09":"code","b1b7507f":"code","e93efcde":"code","36e6b8a0":"code","4bcc120d":"code","ac13ee1d":"code","6e7dcbe6":"code","a4b6ec6f":"code","84318a9c":"code","a356f2cb":"code","e28d1131":"code","fe05c78e":"code","5ec9517a":"code","a659dd34":"markdown","4530f8c0":"markdown","e08ee9a1":"markdown","309c6eb8":"markdown","4febef31":"markdown","9ef99431":"markdown","d0c8056f":"markdown","30261607":"markdown","14998440":"markdown","3801e118":"markdown","aef0c1e5":"markdown","f658ce37":"markdown","adffc24b":"markdown"},"source":{"b0611cdc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-colorblind')\n# Which style do you want to use\n#plt.style.available\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a383e07b":"from pylab import rcParams\nrcParams['figure.figsize'] = 14,6","4612da35":"from sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.metrics import r2_score\n# number of last days for regression\nstart_point =  20","75373181":"def MA(df,col,N):\n    return df.iloc[:,col].rolling(window=N).mean()","131c8dbf":"data = pd.read_excel('\/kaggle\/input\/covid-19-turkey\/covid19.xlsx',index_col=\"Day\")\ncovid = data.drop([\"Intubated\",\"Intensive Care\"],axis=1)\nhospital = data.drop([\"Cases\",\"Deaths\",\"Recovered\",\"Test\"],axis=1)\ndata.head()","8a9352a1":"total_cases = np.array(covid.Cases).cumsum()\ntotal_recovered = np.array(covid.Recovered).cumsum()\ntotal_death = np.array(covid.Deaths).cumsum()\ntotal_test = np.array(covid.Test).cumsum()\nactive_cases = total_cases - total_recovered - total_death\ndaily_active_cases = np.array(covid.Cases - covid.Recovered - covid.Deaths)\ndeath_rate = total_death \/ total_cases\nrecovered_rate = total_recovered \/ total_cases","21d38ec2":"hospital[\"in Mild Condition\"] = active_cases - (np.array(hospital[\"Intubated\"])+np.array(hospital[\"Intensive Care\"]))","88b6c4fc":"hospital.dropna(inplace=True)\nhospital.tail().style.background_gradient(cmap='Reds')","7c331dc9":"covid.info()","6560c67d":"sns.heatmap(covid.drop(\"Test\",axis=1),yticklabels=False)\nplt.show()","dfcb4569":"sns.heatmap(hospital,yticklabels=False)\nplt.show()","b1d4d030":"sns.swarmplot(data=covid.drop([\"Test\",],axis=1))\nsns.boxplot(data=covid.drop([\"Test\",],axis=1),color=\"w\")\nplt.title(\"Swarm Plot for Covid Data\")\nplt.show()","f0edbe34":"covid.Cases.plot(label=\"Cases\")\nMA(covid,0,7).plot(label=\"7-Days Moving Average\")\nplt.title(\"Daily Cases\")\nplt.legend()\nplt.show()\n\ncovid.Recovered.plot(label=\"Recovered\")\nMA(covid,2,7).plot(label=\"7-Days Moving Average\")\nplt.title(\"Daily Recovered\")\nplt.legend()\nplt.show()\n\ncovid.Deaths.plot(label=\"Deaths\")\nMA(covid,1,7).plot(label=\"7-Days Moving Average\")\nplt.title(\"Daily Deaths\")\nplt.legend()\nplt.show()\n\nMA(covid,3,7).plot(label=\"7-Days Moving Average\")\nplt.bar(covid.index,covid.Test,label=\"Daily Test\",color=\"y\")\nplt.title(\"Daily Test\")\nplt.legend()\nplt.show()","e1536e82":"# pie chart of total\nlabels = ['Active Cases', 'Total Recovered', 'Total Death']\nsizes = [active_cases[len(active_cases)-1],covid.Recovered.sum(),covid.Deaths.sum()]\nexplode = (0, 0, 0.1)\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%', shadow=False,explode=explode, startangle=0)\nax1.axis('equal')\nplt.title(\"Pie Chart for Cases of Covid 19 in Turkey \")\nplt.show()","e7072d8a":"plt.bar(x=covid.index,height=total_cases,label=\"Total Cases\")\nplt.bar(x=covid.index,height=total_recovered,label=\"Total Recovered\")\nplt.bar(x=covid.index,height=total_death,label=\"Total Deaths\")\nplt.xticks(rotation=30)\nplt.title(\"Covid19 in Turkey\")\nplt.legend()\nplt.show()","e29f4489":"plt.plot(death_rate,'.-')\nplt.title(\"Death Rate\")\nplt.show()\n\nplt.plot(daily_active_cases)\nplt.plot([0,len(covid)],[0,len(covid)],c='r')\nplt.title(\"Daily Active Cases\")\nplt.show()","e5149ff0":"# pie chart of cases\nlabels = ['Intubated', 'Intensive Care', 'in Mild Condition']\nsizes = [hospital[\"Intubated\"][len(hospital)-1],\n         hospital[\"Intensive Care\"][len(hospital)-1],\n         hospital[\"in Mild Condition\"][len(hospital)-1]]\nexplode = (0, 0, 0.1)\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%', shadow=False,explode=explode, startangle=0)\nax1.axis('equal')\nplt.title(\"Pie Chart for Active Cases of Covid 19 in Turkey\")\nplt.show()","52f17d77":"plt.bar(x=hospital.index,height=active_cases[15:],label=\"Active Cases\")\nplt.bar(x=hospital.index,height=hospital[\"Intensive Care\"],label=\"Intensive Care\")\nplt.bar(x=hospital.index,height=hospital[\"Intubated\"],label=\"Intubated\")\nplt.legend()\nplt.show()","8c22144e":"plt.plot(hospital[\"Intensive Care\"],label=\"Intensive Care\")\nplt.plot(hospital.Intubated,label=\"Intubated\")\nplt.title(\"Hospital Data\")\nplt.legend()\nplt.show()","11ec5d09":"plt.plot(covid.Cases\/covid.Test,label=\"Case\/Test\")\nplt.plot((covid.Cases\/covid.Test).rolling(window=7).mean(),label=\"7-Days Moving Average\",alpha=0.3)\nplt.title(\"Cases \/ Test Rate\")\nplt.xlabel(\"Days\")\nplt.ylabel(\"Rate\")\nplt.xticks(rotation=20)\nplt.legend()\nplt.show()","b1b7507f":"class EWMA:\n    def fit(self,data,lamda,mean):\n        \n        self.X     = data\n        self.z     = np.zeros(len(data))\n        self.lamda = lamda\n        self.mean  = mean\n        self.z[0]  = self.mean\n        for i in range(1,len(self.z)):\n            self.z[i] = self.lamda*self.X[i] + (1-self.lamda)*self.z[i-1] \n \n    def  ControlChart(self,L,sigma):\n        # L     : Kontrol limitlerinin geni\u015fli\u011fi\n        ucl = np.zeros(len(self.X))\n        lcl = np.zeros(len(self.X))\n        I   = np.arange(1,len(self.X)+1)\n        \n        for i in range(len(self.X)):\n            ucl[i] = self.mean + L*sigma*np.sqrt((self.lamda \/ (2 - self.lamda))*(1-(1-self.lamda)**(I[i])))\n            lcl[i] = self.mean - L*sigma*np.sqrt((self.lamda \/ (2 - self.lamda))*(1-(1-self.lamda)**(I[i])))\n        \n        plt.figure(figsize=(15,4))\n        plt.plot(self.z,marker=\"o\",color=\"k\",label=\"$Z_i$\")\n        plt.plot([self.mean]*len(self.X),color=\"k\",alpha=0.35)\n        plt.plot(ucl,color=\"r\",label=\"UCL {}\".format(ucl[len(ucl)-1].round(2)))\n        plt.plot(lcl,color=\"r\",label=\"LCL {}\".format(lcl[len(lcl)-1].round(2)))\n        plt.title(\"EWMA Conrol Chart\")\n        plt.legend(loc=\"upper left\")\n        plt.show()","e93efcde":"data = covid.Cases\/covid.Test\ndata = data[len(data)-20:]","36e6b8a0":"chart = EWMA()\nchart.fit(data=data,lamda=0.1,mean=0.015)\nchart.ControlChart(L=2.7,sigma=0.009)\nprint(\"Figure:EWMA Control Chart for last 20 days cases\/test rate.\")","4bcc120d":"X = np.arange(0,len(covid)).reshape(-1,1)\ny = active_cases","ac13ee1d":"pip install pygrnn","6e7dcbe6":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nwarnings.simplefilter(action='ignore', category=RuntimeWarning)","a4b6ec6f":"from pyGRNN import GRNN\nfrom yellowbrick.regressor import PredictionError\nfrom yellowbrick.regressor import ResidualsPlot\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score,mean_absolute_error","84318a9c":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.35)\nnewgrnn = GRNN(calibration=\"None\")\nnewgrnn.fit(X_train, y_train.ravel())\nnewgrnn.sigma = 1.4\ny_pred = newgrnn.predict(X_test)\nr2_newgrnn = r2_score(y_test, y_pred)\nmae_newgrnn = mean_absolute_error(y_test, y_pred)\nprint(\"GRNN's R2 Score :\",r2_newgrnn)\nprint(\"GRNN's MAE      :\",mae_newgrnn)","a356f2cb":"visualizer = PredictionError(newgrnn)\nvisualizer.fit(X_train, y_train.ravel())  \nvisualizer.score(X_test, y_test.ravel())        \nvisualizer.show(); ","e28d1131":"plt.figure(figsize=(12,5))\nplt.plot(X, y,\"-.\",label=\"Actual\")\nplt.plot(X, newgrnn.predict(X),\".-\",label=\"GRNN\")\nplt.legend()\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.title(\"Actual value vs GRNN Output\")\nplt.show() ","fe05c78e":"plt.figure(figsize=(12,5))\nvisualizer = ResidualsPlot(newgrnn)\nvisualizer.fit(X_train, y_train.ravel())  \nvisualizer.score(X_test, y_test.ravel())  \nvisualizer.show();","5ec9517a":"xp = np.arange(len(covid),len(covid)+5).reshape(-1,1)\nforecast = newgrnn.predict(xp)\nfor i in range(len(forecast)):\n    forecast[i] = int(forecast[i])\nprint(\"Forecast:{}...\\n{}\".format(xp.ravel(),forecast))","a659dd34":"**On 14 April 2020, the head of the Turkish Ministry of Health Fahrettin Koca announced that the spread of the virus in Turkey has reached its peak in the fourth week and started to slow down. Graphics are confirming to this statement.**","4530f8c0":"**The disease was confirmed to have reached Turkey on 11 March 2020, after a man who had returned to Turkey from Europe, tested positive. The first death due to COVID-19 in the country occurred on 15 March 2020 and by 1 April, it was confirmed that COVID-19 had spread all over Turkey. On 14 April 2020, the head of the Turkish Ministry of Health Fahrettin Koca announced that the spread of the virus in Turkey has reached its peak in the fourth week and started to slow down.**","e08ee9a1":"**In Turkey, the majority of patients of Covid19 were recovered.However, the decrease in the number of active patients slowed down after the 60th day.This is because the decrease in the number of new cases is slow.**","309c6eb8":"**Coronavirus disease 2019 (COVID-19) is an infectious disease caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2).  It was first identified in December 2019 in Wuhan, Hubei, China, and has resulted in an ongoing pandemic. The first confirmed case has been traced back to 17 November 2019 in Hubei. As of 24 July 2020, more than 15.5 million cases have been reported across 188 countries and territories, resulting in more than 633,000 deaths. More than 8.81 million people have recovered.**","4febef31":"# Data set","9ef99431":"**The change in the amount of patients in critical condition over time is shown in the graph. It is very difficult to explain the reason for the recent increase with these data.**","d0c8056f":"**Turkey ranks 16th in Covid19 data from the World Health Organization. However, the death rate is quite low compared to the cases. We can see this from heat map and swarm plot**","30261607":"# General regression neural network (GRNN)","14998440":"Generalized regression neural network (GRNN) is a variation to radial basis neural networks. GRNN was suggested by D.F. Specht in 1991.\n\nGRNN can be used for regression, prediction, and classification. GRNN can also be a good solution for online dynamical systems.\n\nGRNN represents an improved technique in the neural networks based on the nonparametric regression. The idea is that every training sample will represent a mean to a radial basis neuron.","3801e118":"# Active Case Forecasting","aef0c1e5":"**Case and Test rate is an important data showing that the epidemic is under control.**","f658ce37":"# Data Visualization","adffc24b":"# Introduction"}}