{"cell_type":{"d03300d7":"code","a992742d":"code","01ffc57f":"code","3917f085":"code","99a1f61e":"code","bb6e524c":"code","3e5e0a60":"code","ccc1f812":"code","c700fe43":"code","b6932fa5":"code","535e623c":"code","0a2bda4e":"code","dab3ec97":"code","4b385f63":"code","d2902df4":"code","1fe70493":"code","f2df2361":"code","426c731e":"code","c3cb9e55":"code","952b81ce":"code","2989ef4d":"code","56755076":"code","09e3bfef":"code","114b97ca":"code","25299fec":"code","17a57078":"code","80f57c27":"code","a1b3f30e":"code","e7b22521":"code","b037c853":"code","16d512c2":"code","31776bad":"code","f613a97d":"code","d7831935":"code","316a4bf7":"code","c24632ec":"code","79e4079b":"code","97dea03a":"code","eb5aaabf":"code","11a748e7":"code","18785aa8":"code","8231c68e":"markdown","37382eb1":"markdown","0ec8a61a":"markdown","9bf7eef4":"markdown","491c8af0":"markdown","972917c1":"markdown"},"source":{"d03300d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a992742d":"import pandas as pd","01ffc57f":"data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')","3917f085":"data.head()","99a1f61e":"data.isnull().sum()","bb6e524c":"data.describe().transpose()","3e5e0a60":"x = data.loc[:,['age', 'bmi']]","ccc1f812":"y = data.charges","c700fe43":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2)","b6932fa5":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","535e623c":"from sklearn.linear_model import LinearRegression\n\nreg = LinearRegression()\nreg.fit(x_train,y_train)","0a2bda4e":"print(reg.intercept_)","dab3ec97":"print(reg.coef_)","4b385f63":"LR_train_y_pred = reg.predict(x_train)","d2902df4":"import numpy as np\nfrom sklearn import metrics\n\nprint(\"Training :- \")\nprint('MAE :- ', metrics.mean_absolute_error(y_train,LR_train_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_train,LR_train_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_train,LR_train_y_pred)))","1fe70493":"print('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_train,LR_train_y_pred))","f2df2361":"LR_test_y_pred = reg.predict(x_test)","426c731e":"print(\"Testing :- \")\nprint('MAE :- ', metrics.mean_absolute_error(y_test,LR_test_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_test,LR_test_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_test,LR_test_y_pred)))","c3cb9e55":"print('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_test,LR_test_y_pred))","952b81ce":"from sklearn.tree import DecisionTreeRegressor\n\nD_reg_model = DecisionTreeRegressor()\nD_reg_model.fit(x_train,y_train)","2989ef4d":"DTR_train_y_pred = D_reg_model.predict(x_train)","56755076":"print(\"Training :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_train,DTR_train_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_train,DTR_train_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_train,DTR_train_y_pred)))","09e3bfef":"print('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_train,DTR_train_y_pred))","114b97ca":"DTR_test_y_pred = D_reg_model.predict(x_test)","25299fec":"print(\"Testing :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_test,DTR_test_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_test,DTR_test_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_test,DTR_test_y_pred)))","17a57078":"print('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_test,DTR_test_y_pred))","80f57c27":"from sklearn.ensemble import RandomForestRegressor\n\nR_reg_model = RandomForestRegressor()\nR_reg_model.fit(x_train,y_train)","a1b3f30e":"RFR_train_y_pred = R_reg_model.predict(x_train)","e7b22521":"print(\"Training :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_train,RFR_train_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_train,RFR_train_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_train,RFR_train_y_pred)))","b037c853":"RFR_train_y_pred","16d512c2":"print('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_train,RFR_train_y_pred))","31776bad":"RFR_test_y_pred = R_reg_model.predict(x_test)","f613a97d":"print(\"Testing :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_test,RFR_test_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_test,RFR_test_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_test,RFR_test_y_pred)))\n\nprint('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_test,RFR_test_y_pred))","d7831935":"from sklearn.linear_model import Lasso","316a4bf7":"lasso_model = Lasso(alpha=0.1)\nlasso_model.fit(x_train, y_train)","c24632ec":"print(lasso_model.coef_)","79e4079b":"print(lasso_model.intercept_)","97dea03a":"lasso_train_y_pred = lasso_model.predict(x_train)","eb5aaabf":"print(\"Training :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_train,lasso_train_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_train,lasso_train_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_train,lasso_train_y_pred)))\n\nprint('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_train,lasso_train_y_pred))","11a748e7":"lasso_test_y_pred = lasso_model.predict(x_test)","18785aa8":"print(\"Training :- \")\n\nprint('MAE :- ', metrics.mean_absolute_error(y_test,lasso_test_y_pred))\nprint('MSE :- ', metrics.mean_squared_error(y_test,lasso_test_y_pred))\nprint('RMSE :- ', np.sqrt(metrics.mean_squared_error(y_test,lasso_test_y_pred)))\n\nprint('Coefficient of Determination')\nprint('R^2 :- ', metrics.r2_score(y_test,lasso_test_y_pred))","8231c68e":"Negative r^2 means that the choosen model fits the data very poorly.","37382eb1":"# **Linear Regression**","0ec8a61a":"Negative r^2 means that the choosen model fits the data very poorly.","9bf7eef4":"# **Decision Tree Regressor**","491c8af0":"# **Random Forest Regressor**","972917c1":"# **Lasso Regression**"}}