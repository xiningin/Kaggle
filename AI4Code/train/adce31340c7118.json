{"cell_type":{"86c45352":"code","d81c33bf":"code","dcfd0da1":"code","e79714bb":"code","1dc735d5":"code","3e693f79":"code","0179bed0":"code","84a2f5b8":"code","30201ef0":"code","4b8411ec":"code","fe4e9252":"code","fad7b3ef":"code","11ff4508":"code","3a5d6216":"code","0d87202e":"code","42f2a557":"code","768aba97":"code","c93dab11":"code","2419743a":"code","de42a658":"code","56da8b96":"code","c19a207d":"code","06b3be98":"code","a25f0872":"code","09f9cab2":"code","784da678":"code","5bc84611":"code","7bf96c57":"code","d8949d4b":"code","2029c3f6":"code","bb8c4677":"code","fc4130cb":"code","ad9bddc1":"markdown","bc2f0047":"markdown","8b9acd1a":"markdown","52aa794c":"markdown","b52f68a7":"markdown","21828afa":"markdown","deaa8325":"markdown","de531b00":"markdown","4f5a0b0e":"markdown","003eea06":"markdown","ce033911":"markdown","050c1728":"markdown"},"source":{"86c45352":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","d81c33bf":"# collecting the data to be trained in \"df\" variable\ndf = pd.read_csv('..\/input\/titanic\/train.csv')\nprint(df)","dcfd0da1":"df.head()","e79714bb":"print(\"The number of observations\/rows = \",df.shape[0])\nprint(\"The number of variables\/columns = \",df.shape[1])","1dc735d5":"df.info()","3e693f79":"# total number of null values in each column\ndf.isnull().sum()","0179bed0":"# dropping the \"Cabin\" column from the dataframe\ndf = df.drop(columns='Cabin', axis=1)","84a2f5b8":"# replacing the missing values in the \"Age\" column by the average value\ndf['Age'].fillna(df['Age'].mean(), inplace=True)","30201ef0":"# printing the mode of column \"Embarked\"\nprint(df['Embarked'].mode())","4b8411ec":"# replacing the missing values in column \"Embarked\" with its mode value\ndf['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)","fe4e9252":"df.isnull().sum()","fad7b3ef":"df.describe()","11ff4508":"# finding the count of people who survived and not survived\ndf['Survived'].value_counts()","3a5d6216":"# visulaizing the insight from the previous step for easy understanding\nsns.countplot('Survived', data=df)","0d87202e":"sns.countplot(x='Pclass', hue='Survived', data=df)","42f2a557":"df['Sex'].value_counts()","768aba97":"df['Embarked'].value_counts()","c93dab11":"df.replace({'Sex':{'male':0,'female':1},'Embarked':{'S':0,'C':1,'Q':2}}, inplace=True)","2419743a":"df.head()","de42a658":"X = df.drop(columns = ['PassengerId','Name','Ticket','Survived'], axis=1)\nY = df['Survived']","56da8b96":"print(X)","c19a207d":"print(Y)","06b3be98":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, random_state=2)","a25f0872":"print(X.shape, X_train.shape, X_test.shape)","09f9cab2":"model1 = LogisticRegression(solver='liblinear')","784da678":"# training the Logistic Regression model with training data\nmodel1.fit(X_train, Y_train)","5bc84611":"X_train_prediction = model1.predict(X_train)","7bf96c57":"print(X_train_prediction)","d8949d4b":"training_data_accuracy = accuracy_score(Y_train, X_train_prediction)\nprint('Accuracy score of training data',training_data_accuracy)","2029c3f6":"# accuracy on test data\nX_test_prediction = model1.predict(X_test)","bb8c4677":"print(X_test_prediction)","fc4130cb":"testing_data_accuracy = accuracy_score(Y_test, X_test_prediction)\nprint('Accuracy score of testing data',testing_data_accuracy)","ad9bddc1":"So after tackling with 177 and 2 missing values in columns \"Age\" and \"Embarked\" respectively the total number of missing values in each column is as follows:","bc2f0047":"### Splitting the Data into Training Data and Testing Data","8b9acd1a":"### Model Training\n#### Logistic Regression","52aa794c":"### Data Collection and Processing","b52f68a7":"### Model Evaluation","21828afa":"### Handling the missing values ","deaa8325":"### Analyzing the Data","de531b00":"#### Sampling Feature and Target","4f5a0b0e":"### Encoding the Categorical Values","003eea06":"Now the statistical measures ain't useful when we have categorical data.\nFor example, column \"Survived\" has been categorized into two categories '1' and '0' to indicate whether the person survived or not. Similarly, \"Pclass\" has also been categorized into '1', '2' and '3' to indicate first, second and third class passengers respectively.","ce033911":"### Importing the Dependencies","050c1728":"sns.countplot(x='Sex', hue='Survived', data=df)"}}