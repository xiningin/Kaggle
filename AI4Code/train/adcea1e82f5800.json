{"cell_type":{"f5cac853":"code","3de1da31":"code","cfbd3207":"code","7f54b3ba":"code","b6a9e0fa":"code","aba1b40b":"code","a76e6448":"code","e18c1565":"code","d83b3542":"code","db4fda04":"code","b05b11dc":"code","bd1ea9e8":"markdown"},"source":{"f5cac853":"#Loading libraries \/ methods:\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom keras.datasets import mnist\nfrom keras.utils import np_utils\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom keras.layers.normalization import BatchNormalization\n\n%matplotlib inline","3de1da31":"#train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")","cfbd3207":"#Loading and splitting the dataset:\n(x_train, y_train), (x_test, y_test) = mnist.load_data()","7f54b3ba":"#Visualizing the inputs:\nplt.imshow(x_train[2])","b6a9e0fa":"#Gray scale:\nplt.imshow(x_train[2], cmap='gray')","aba1b40b":"#Data preprocessing\n\npred_train = x_train.reshape(x_train.shape[0], 28, 28, 1)\npred_test = x_test.reshape(x_test.shape[0], 28, 28, 1)\n\npred_train = pred_train.astype('float32')\npred_test = pred_test.astype('float32')\n\n#Min-Max normalization:\npred_train \/=255\npred_test \/=255\n\n#One-hot Encoding:\nclass_train = np_utils.to_categorical(y_train, 10)\nclass_test = np_utils.to_categorical(y_test, 10)","a76e6448":"#Building the model\n\nclassifier = Sequential()\nclassifier.add(Conv2D(32, (3,3), input_shape = (28,28,1), activation = 'relu'))\nclassifier.add(BatchNormalization())\nclassifier.add(MaxPooling2D(pool_size = (2,2)))\nclassifier.add(Conv2D(32, (3,3), activation = 'relu'))\nclassifier.add(BatchNormalization())\nclassifier.add(MaxPooling2D(pool_size = (2,2)))\nclassifier.add(Flatten())\nclassifier.add(Dense(units = 128, activation = 'relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(Dense(units = 128, activation = 'relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(Dense(units = 10, activation = 'softmax'))\n\nclassifier.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics=['accuracy'])","e18c1565":"#Fit the model:\n\nclassifier.fit(pred_train,\n                class_train,\n                batch_size = 128,\n                epochs = 30,\n                validation_data = (pred_test, class_test))","d83b3542":"#Prediction\n\nX_test = test\/255\nX_test = X_test.values\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1).astype('float32')\n\npred = classifier.predict(X_test)\npred.shape","db4fda04":"#Submission\n\nsample_submit = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/sample_submission.csv\")\nsample_submit.head()","b05b11dc":"y_pred = pred.argmax(axis=1)\nImageID = np.arange(len(y_pred))+1\n\nsubmit = pd.DataFrame([ImageID,y_pred]).T\nsubmit.rename(columns = {0:'ImageId', 1:'Label'})\n\nsubmit.to_csv('submission.csv', header =  ['ImageId', 'Label' ], index = None) ","bd1ea9e8":"# Digit recognition with CNN using Keras\n\n<hr>"}}