{"cell_type":{"9630a610":"code","837e9a54":"code","a95796ee":"code","fd88d156":"code","92302505":"code","e7a3fed5":"code","dfe5f363":"code","496b5583":"code","e46f9693":"markdown","74e1e714":"markdown"},"source":{"9630a610":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #plotting\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","837e9a54":"players = pd.read_csv('..\/input\/FullData.csv',parse_dates=True)\nplayers['Height'] = players.Height.apply(lambda x: x.replace(' cm', '')).astype('int')\nplayers['Weight'] = players.Weight.apply(lambda x: x.replace(' kg', '')).astype('int')\nplayers = players.dropna(axis=1)","a95796ee":"y = players.Rating.values","fd88d156":"plt.rcParams[\"patch.force_edgecolor\"] = True\nplt.hist(players.Rating,bins=40)\nplt.xlabel('Rating')\nplt.ylabel('Counts')\nplt.title('Histogram of Football player Rating')\nplt.show()","92302505":"selected_features = ['Height', 'Weight','Ball_Control', 'Dribbling', 'Marking', 'Sliding_Tackle',\n       'Standing_Tackle', 'Aggression', 'Reactions', 'Attacking_Position',\n       'Interceptions', 'Vision', 'Composure', 'Crossing', 'Short_Pass',\n       'Long_Pass', 'Acceleration', 'Speed', 'Stamina', 'Strength', 'Balance',\n       'Agility', 'Jumping', 'Heading', 'Shot_Power', 'Finishing',\n       'Long_Shots', 'Curve', 'Freekick_Accuracy', 'Penalties', 'Volleys']","e7a3fed5":"players = pd.concat([players[selected_features],players.Rating],axis=1)","dfe5f363":"players['Rating_label'] = 0\nplayers['Rating_label'][players.Rating > 85] = 2\nplayers['Rating_label'][(players.Rating > 65) & (players.Rating <= 85)] = 1\nplayers['Rating_label'][(players.Rating <= 65)] = 0","496b5583":"from sklearn.decomposition import PCA\n\nmodel = PCA()\nmodel.fit(X)\ntransformed = model.transform(X)\n\nxs, ys = transformed[:,0], transformed[:,1]\nplt.scatter(xs, ys, c=players.Rating_label.values)\nplt.title('Principal Component Analysis features')\nplt.xlabel('$X_1$')\nplt.ylabel('$X_2$')\nplt.show()","e46f9693":"Now I will convert Rating column in some numerical labels. I can first use 3 categories of player, i.e. poor, intermediate and star.","74e1e714":"Hereby I will extract some info from the wide Fifa 2017 Dataset.\nI will select 31 features, X, and the player Rating as a target, y."}}