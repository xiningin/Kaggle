{"cell_type":{"bc3d9d99":"code","638621b3":"code","4cde54f8":"code","69c5385f":"code","03349065":"code","12c172f7":"code","09b6fd6d":"code","9d0f5c4b":"code","9cf49263":"code","f130b58c":"code","5f8b756a":"code","4ac094c3":"code","0490efe6":"code","fc161417":"code","063be0f0":"code","7f3f5106":"code","56ee4242":"code","583a3129":"code","a7614c9b":"code","4204d5ad":"code","2077c9bc":"code","6345d28d":"code","0680e21b":"code","7cbf6af9":"code","90a84c0d":"code","ec92c223":"code","408ca24b":"code","c751eba4":"code","31aa909c":"code","b01c95e2":"code","2d410d57":"code","f7960217":"code","e3461a7c":"code","a6e636a6":"markdown","00a5fbad":"markdown","879e6fca":"markdown","3aa0c419":"markdown","55c871a2":"markdown","dbe28ebc":"markdown","8673256f":"markdown","1e1df7ab":"markdown","e3b14eae":"markdown"},"source":{"bc3d9d99":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom pandas import plotting\nfrom scipy import stats\nplt.style.use(\"ggplot\")\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom scipy import stats\n\nsns.set(style=\"darkgrid\", color_codes = True)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","638621b3":"players = pd.read_csv('..\/input\/nba-players-stats\/Players.csv')\nplayers.drop(columns = ['Unnamed: 0'], axis = 'column', inplace = True)\nplayers.head()","4cde54f8":"players.describe()","69c5385f":"players_data = pd.read_csv('..\/input\/nba-players-stats\/player_data.csv')\nplayers_data.rename(columns={'name': 'Player'}, inplace=True)\nplayers_data.fillna('No College')\nplayers_data.head()","03349065":"players_data.describe()","12c172f7":"final_df = pd.read_csv('..\/input\/nba-players-stats\/Seasons_Stats.csv')\nfinal_df.drop(columns = ['Unnamed: 0'], axis = 'column', inplace = True)\nfinal_df.head()\nfinal_df.columns","09b6fd6d":"final_df.describe()","9d0f5c4b":"position = players_data.groupby('position')['Player'].count().sort_values(ascending=False)\nfig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=position.index, y=position.values)\n\nplt.title(\"Position Distribution\")\nplt.show()","9cf49263":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.distplot(final_df['Age']);\n\nplt.title(\"Age Distribution\")\nplt.show()","f130b58c":"import random\ndef random_colors(number_of_colors=1):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","5f8b756a":"final_df['ppg'] = final_df.PTS\/final_df.G","4ac094c3":"ppg = pd.DataFrame()\nppg['player'] = final_df.groupby('Player').mean()['ppg'].index\nppg['ppg'] = final_df.groupby('Player').mean()['ppg'].values\n\nppg = ppg.sort_values('ppg', ascending=False).head(10)\nppg","0490efe6":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"ppg\", y=\"player\", hue=\"player\", data=ppg, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest PPG\")\nplt.show()","fc161417":"fig, ax = plt.subplots(figsize=(14, 10))  \nfor key, val in ppg[['player']].iterrows():\n    sns.lineplot(x=\"Year\", y=\"ppg\", data=final_df[final_df['Player'] == val['player']])\n    \nplt.legend(ppg['player'], bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Highest PPG Trends\")","063be0f0":"starter = final_df[(final_df['GS'] > 50) & (final_df['2PA'] > 100)]\n\ntwo_P = pd.DataFrame()\ntwo_P['player'] = starter.groupby('Player').mean()['2P%'].index\ntwo_P['2P%'] = starter.groupby('Player').mean()['2P%'].values\n\ntwo_P = two_P.sort_values('2P%', ascending=False).head(10)\ntwo_P","7f3f5106":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"2P%\", y=\"player\", hue=\"player\", data=two_P, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest Two-Point %\")\nplt.show()","56ee4242":"fig, ax = plt.subplots(figsize=(14, 10))  \nfor key, val in two_P[['player']].iterrows():\n    sns.lineplot(x=\"Year\", y=\"2P%\", data=final_df[final_df['Player'] == val['player']])\n    \nplt.legend(two_P['player'], bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Highest 2PT % Trends\")","583a3129":"starter = final_df[(final_df['GS'] > 50) & (final_df['3PA'] > 100)]\n\nthree_P = pd.DataFrame()\nthree_P['player'] = starter.groupby('Player').mean()['3P%'].index\nthree_P['3P%'] = starter.groupby('Player').mean()['3P%'].values\n\nthree_P = three_P.sort_values('3P%', ascending=False).head(10)\nthree_P","a7614c9b":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"3P%\", y=\"player\", hue=\"player\", data=three_P, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest 3-Point %\")\nplt.show()","4204d5ad":"fig, ax = plt.subplots(figsize=(14, 10))  \nfor key, val in three_P[['player']].iterrows():\n    sns.lineplot(x=\"Year\", y=\"2P%\", data=final_df[final_df['Player'] == val['player']])\n    \nplt.legend(three_P['player'], bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Highest 3PT % Trends\")","2077c9bc":"starter = final_df[(final_df['GS'] > 50) & (final_df['FTA'] > 100)]\n\nft_P = pd.DataFrame()\nft_P['player'] = starter.groupby('Player').mean()['FT%'].index\nft_P['FT%'] = starter.groupby('Player').mean()['FT%'].values\n\nft_P = ft_P.sort_values('FT%', ascending=False).head(10)\nft_P","6345d28d":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"FT%\", y=\"player\", hue=\"player\", data=ft_P, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest FT %\")\nplt.show()","0680e21b":"final_df['apg'] = final_df.AST\/final_df.G","7cbf6af9":"apg = pd.DataFrame()\napg['player'] = final_df.groupby('Player').mean()['apg'].index\napg['apg'] = final_df.groupby('Player').mean()['apg'].values\n\napg = apg.sort_values('apg', ascending=False).head(10)\napg","90a84c0d":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"apg\", y=\"player\", hue=\"player\", data=apg, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest APG\")\nplt.show()","ec92c223":"fig, ax = plt.subplots(figsize=(14, 10))  \nfor key, val in apg[['player']].iterrows():\n    sns.lineplot(x=\"Year\", y=\"apg\", data=final_df[final_df['Player'] == val['player']])\n    \nplt.legend(apg['player'], bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Highest APG Trends\")","408ca24b":"final_df['rpg'] = final_df.TRB\/final_df.G","c751eba4":"rpg = pd.DataFrame()\nrpg['player'] = final_df.groupby('Player').mean()['rpg'].index\nrpg['rpg'] = final_df.groupby('Player').mean()['rpg'].values\n\nrpg = rpg.sort_values('rpg', ascending=False).head(10)\nrpg","31aa909c":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"rpg\", y=\"player\", hue=\"player\", data=rpg, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest RPG\")\nplt.show()","b01c95e2":"fig, ax = plt.subplots(figsize=(14, 10))  \nfor key, val in rpg[['player']].iterrows():\n    sns.lineplot(x=\"Year\", y=\"rpg\", data=final_df[final_df['Player'] == val['player']])\n    \nplt.legend(rpg['player'], bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\n\nplt.title(\"Highest RPG Trends\")","2d410d57":"final_df['tpg'] = final_df.TOV\/final_df.G","f7960217":"tpg = pd.DataFrame()\ntpg['player'] = final_df.groupby('Player').mean()['tpg'].index\ntpg['tpg'] = final_df.groupby('Player').mean()['tpg'].values\n\ntpg = tpg.sort_values('tpg', ascending=False).head(10)\ntpg\n","e3461a7c":"fig, ax = plt.subplots(figsize=(14, 10))\nsns.barplot(x=\"tpg\", y=\"player\", hue=\"player\", data=tpg, dodge=False)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.title(\"Top 10 Players with Highest TPG\")\nplt.show()","a6e636a6":"# Turnovers Per Game","00a5fbad":"# Rebounds Per Game","879e6fca":"# Highest FT%","3aa0c419":"# Assists Per Game","55c871a2":"# Player Position and Age Distribution","dbe28ebc":"# Highest 2P%","8673256f":"# Points Per Game","1e1df7ab":"Feature Selection for our Data and why?\nHow to come up with new features?\n\nFeature Engineering\n\n---\n\nClassification vs Regression problem\nClassification\n  - Linear Regression\n  - SVM \n  - Naive Bayes","e3b14eae":"# Highest 3P%"}}