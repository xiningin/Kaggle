{"cell_type":{"26de2d41":"code","1799c606":"code","654ac376":"code","66346ba3":"code","6e672746":"code","57bd78d9":"code","ba326e86":"code","f40356dd":"code","27da32b6":"code","cdc0202f":"code","4d661c8b":"code","c7cd3e07":"code","502729f0":"code","e84ca07e":"code","c6f5b111":"code","6f88c62d":"code","eedf0100":"code","f9cdc9a2":"code","a79a64cc":"code","0891fb62":"code","2f230587":"code","02c33aef":"code","a1c95f5d":"code","da3b3384":"code","5bfdebc5":"code","1f6b1b02":"code","29acf2e3":"code","ece2be66":"code","88e42f5a":"code","baff1bca":"code","9af2867e":"code","0e5ad89d":"code","68c79b71":"code","efe930fb":"code","76bd2ee4":"code","a6b85b75":"code","9a407088":"code","c985db14":"markdown","db3b65a8":"markdown","b2eea4ae":"markdown","d9871499":"markdown","3a50ee4b":"markdown","a724fa48":"markdown","e14cadfe":"markdown","d159946a":"markdown","5bc4e5e9":"markdown","2162fae4":"markdown","070dc27c":"markdown","45155b3f":"markdown","f3758eb9":"markdown","8dc8f4ae":"markdown","05d1abc5":"markdown","bd1c0a12":"markdown","0a999871":"markdown","99b69a64":"markdown","9eb31dcd":"markdown","05c3f799":"markdown","ad89a6b9":"markdown","25032bd7":"markdown"},"source":{"26de2d41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1799c606":"sspot=pd.read_csv('\/kaggle\/input\/daily-sun-spot-data-1818-to-2019\/sunspot_data.csv')","654ac376":"sspot","66346ba3":"sspot.drop(\"Unnamed: 0\", axis=1, inplace=True)","6e672746":"sspot.sample(5)","57bd78d9":"sspot.dtypes","ba326e86":"sspot[(sspot[\"Number of Sunspots\"]== -1 )]#3247 missing values in 73718 rows","f40356dd":"df=sspot.copy()","27da32b6":"nan_value = float(\"NaN\")\n\ndf.replace(-1,nan_value, inplace=True)\n\ndf","cdc0202f":"df = df.dropna()\ndf = df.reset_index(drop=True)","4d661c8b":"df","c7cd3e07":"df.isnull().sum()","502729f0":"df.groupby(\"Year\").agg([\"min\", \"max\", \"std\", \"mean\"])","e84ca07e":"a=df.groupby(['Year']).sum()\nt=a.sort_values(by='Number of Sunspots', ascending = False)\nt['Number of Sunspots']","c6f5b111":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","6f88c62d":"cmap = sns.cubehelix_palette(dark=.3, light=.9, as_cmap=True)\nplt.figure(figsize=(20,20))\nsns.scatterplot(data=df, x=\"Number of Sunspots\", y=\"Year\", hue=\"Observations\", palette=cmap)\nplt.show()","eedf0100":"t['Number of Sunspots'].head(5).plot(kind='barh', figsize=(10,10))\nyaxes=\"Number of Sunpots\"","f9cdc9a2":"dfcorr=df.corr()\ndfcorr","a79a64cc":"plt.figure(figsize=(15,15))\nsns.heatmap(dfcorr, cmap='coolwarm')","0891fb62":"df","2f230587":"x = df.drop([\"Number of Sunspots\",\"Month\",\"Day\"],axis=1)","02c33aef":"x","a1c95f5d":"y= df[\"Number of Sunspots\"]\ny=y.to_frame()\ny","da3b3384":"from sklearn.model_selection import train_test_split","5bfdebc5":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25, random_state=0)\nx_train.shape","1f6b1b02":"y_train.shape","29acf2e3":"from sklearn.neural_network import MLPRegressor\nneu = MLPRegressor(random_state=1, max_iter=450).fit(x_train, y_train)","ece2be66":"df_new=pd.DataFrame(neu.predict(x_test))\npred_val= df_new.rename(columns={0: 'Number of Sunspots'})\npred_val","88e42f5a":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score\nprint(\"MLPRegressor's R2 Score:\",r2_score(y_test, pred_val))","baff1bca":"from sklearn import tree\nclf = tree.DecisionTreeRegressor()\nclf = clf.fit(x_train, y_train)","9af2867e":"df_new=pd.DataFrame(clf.predict(x_test))\npred_val= df_new.rename(columns={0: 'Number of Sunspots'})\npred_val","0e5ad89d":"print(\"Decision Tree Regressor's R2 Score:\",r2_score(y_test, pred_val))","68c79b71":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score","efe930fb":"mean_absolute_error(y_test, pred_val)","76bd2ee4":"pred_val.head(5)","a6b85b75":"y_test.head(5)","9a407088":"pred_val.to_csv('sunspotprediction.csv', index=False)","c985db14":"After the cleaning:","db3b65a8":"**After trials I choosed Decision Tree.**","b2eea4ae":"Missing values in number of sunspots column are in minority so I decided to drop them.(3247 to 73718)","d9871499":"# Feature Engineering","3a50ee4b":"### Neural Network ","a724fa48":"**Which year was the most seen sunspot?**","e14cadfe":"# Data Visualization","d159946a":"# Data Analysis(EDA)","5bc4e5e9":"I analyzed the correlation matrix and after that I choosed most necessary columns for prediction to Sunspots num.","2162fae4":"# Performance Metrics","070dc27c":"It's interesting ,because while the nums of observation increasing, observation of sunpots decreased.","45155b3f":"Drop the unnecessary column ","f3758eb9":"> **Answer is 1957**","8dc8f4ae":"### Decision Trees","05d1abc5":"# Split Data","bd1c0a12":"# To_CSV","0a999871":"# Model Choosing","99b69a64":"Checking the Null Values","9eb31dcd":"If Number of Sunspots value is -1, it means the missing value.","05c3f799":"# Model Setup","ad89a6b9":"For the meaning of sunspot   [Click](https:\/\/en.wikipedia.org\/wiki\/Sunspot)\n\n![Sunspot](http:\/\/i2.wp.com\/thegrandsolarminimum.com\/wp-content\/uploads\/2019\/03\/Sun_sunspot.jpg?ssl=1)","25032bd7":"Increase in the Number of Obsevations"}}