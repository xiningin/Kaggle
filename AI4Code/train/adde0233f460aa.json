{"cell_type":{"99aa16a4":"code","bad882cb":"code","0c4324a3":"code","9306d95b":"code","337b568d":"code","52f663da":"code","c5f9f324":"code","b0f2b7d6":"markdown","a419fec6":"markdown","5eb212e8":"markdown","8e26629c":"markdown","a2b8c34b":"markdown"},"source":{"99aa16a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom yellowbrick.regressor import residuals_plot\nfrom yellowbrick.regressor import prediction_error\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bad882cb":"X_train=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-aug-2021\/train.csv\")\nX_test=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-aug-2021\/test.csv\")\nsub=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")\n\n","0c4324a3":"from sklearn.model_selection import train_test_split\ny_train = X_train.loss\n\nX_train.drop(labels=['id', 'loss'], axis=1, inplace=True)\n\nX_test.drop(labels=['id'], axis=1, inplace=True)","9306d95b":"import xgboost as xgb\nfrom xgboost import XGBRegressor\nmy_model_1 = XGBRegressor(n_estimators=1000, learning_rate=0.05, n_jobs=4)\nmy_model_1.fit(X_train, y_train, \n             \n             \n             verbose=False)","337b568d":"y_pred = my_model_1.predict(X_test)\n#my_model_1.predict(X_test)","52f663da":"sub.loss = y_pred","c5f9f324":"\n\nsub.to_csv('submission.csv', index=False)\n\n","b0f2b7d6":"Test","a419fec6":"Making of X and y of train","5eb212e8":"Using XGBoostRegressor","8e26629c":"Reading the files","a2b8c34b":"Get the RMSE"}}