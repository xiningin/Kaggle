{"cell_type":{"2e2f64f7":"code","3ae76318":"code","c6ca1473":"code","e59524fa":"code","cf63ea01":"code","7f4728a7":"code","99b0e966":"code","a615cd80":"code","91381f10":"code","1e2daa07":"code","1a4f9a84":"code","1eeed796":"code","efe34f72":"code","bb9c9a53":"code","8d55cd7b":"code","20afce2f":"code","392d9cb3":"code","b1dc6fd5":"code","2cd50943":"code","1056b33f":"code","b9c592f3":"code","48f05b93":"code","de4ad748":"code","da5011b7":"code","da7fac4d":"code","a960f6dc":"code","b31c7210":"code","fd474108":"code","d70b7f3e":"code","39ad3dd4":"code","d558cdce":"code","9f940f4e":"code","60bc833e":"code","3abf1961":"code","2604cac9":"code","6d20ee35":"code","a9020bde":"code","27e18e6e":"code","5bd6a7a4":"code","4206dabd":"code","7338b6b1":"code","b2692967":"code","ef78dc3f":"code","a99961b8":"code","39fb5aae":"code","a6ffa6fd":"code","80bc6e55":"code","164ffa16":"code","5fb6cb15":"code","870e6e70":"code","56a485fd":"code","70a63b96":"code","ad788ba2":"code","92ab819c":"code","3e276682":"code","6782b91e":"code","239ee5e4":"code","20cf35d1":"code","3787bb14":"code","b0d8ed01":"code","5c3adc06":"code","8160a6f4":"code","e4e978d5":"code","f5425e5b":"code","3f0611f3":"code","b0582116":"code","8db1791b":"code","d93baa6d":"code","26eb8fb0":"code","aab47bba":"code","d055217b":"code","887b1e9f":"code","82d50ec8":"code","7563b911":"code","a8736fc5":"code","2f3885de":"code","cdb705a3":"code","5b92365e":"code","4965a782":"code","ce1c9051":"code","bb856d3c":"code","a4f9fd83":"code","c6e8437b":"code","a146febc":"code","af0fe915":"code","d854c03f":"code","f4d98f48":"code","7ee80929":"code","b1420aba":"code","d6f7de57":"code","bb7ed19f":"code","18f47a23":"code","6eaf4256":"code","5f818c42":"code","1cccdaf1":"code","734aaf15":"code","d337ce3c":"code","5d738334":"code","184ac2b7":"code","dbb5d540":"code","c20bc93b":"code","a7ab97cf":"code","661b99d1":"code","f1ef052b":"code","e983b2b7":"code","22953725":"code","26432160":"code","a9649113":"code","031c17bb":"code","c84f5105":"code","b88e7fe2":"code","52262c12":"code","fbc43bf1":"code","df746f12":"code","6c22faf2":"code","0abd1f5f":"code","de888798":"code","31512c40":"code","dcd8f116":"code","4dd5a8e0":"code","95a1d7f2":"code","d45c1bfb":"code","1dbbdde6":"code","fbf641dd":"code","2300ef4b":"code","f3b74b5e":"code","b2f25ffa":"code","e8bfae4d":"code","2914ad60":"code","75bdaa08":"code","3f388585":"code","598d025d":"code","a2403ca7":"code","b574a273":"code","fd5a6038":"code","8ce3a723":"code","566784d9":"code","51bd3691":"code","519ba335":"code","a769f517":"code","d399e0e3":"code","1e1a0011":"markdown","497a95a7":"markdown","35fdbdb4":"markdown","a17cba3e":"markdown","8912d2e1":"markdown","c5125dff":"markdown","eded7fd6":"markdown","07fe7004":"markdown","13c78c7b":"markdown","e518da9b":"markdown","23678044":"markdown","dd8dafe0":"markdown","e09434de":"markdown","52cacb4d":"markdown","24249ac6":"markdown","626e41e3":"markdown","6e99d588":"markdown","3cacc0d7":"markdown","25659b67":"markdown","213740da":"markdown","96237c90":"markdown","a6e4401a":"markdown","26800a66":"markdown","a08738c2":"markdown","6347ab12":"markdown","632dd26b":"markdown","eebb386e":"markdown","016abe94":"markdown","15c8de45":"markdown","706e2bda":"markdown","51272998":"markdown","51c7a12a":"markdown","45e24f4f":"markdown","40beddbb":"markdown","b1cd4136":"markdown","7fdcd321":"markdown","4b8b6c48":"markdown","36578310":"markdown"},"source":{"2e2f64f7":"##importing libraries \nimport pandas as pd,numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt \nimport warnings\nwarnings.filterwarnings('ignore')","3ae76318":"!pip install openpyxl","c6ca1473":"## Reading data from Excel File \ndf=pd.read_excel('\/kaggle\/input\/usa-foreign-workers-salary\/USAforeignworkerssalarydata-1556559586172.xlsx')","e59524fa":"print(df.shape)\ndf.head().T","cf63ea01":"### Checking for missing data  and data types \ndf.info()","7f4728a7":"## Checking  for exact missing values  in each cols \ndf.isnull().sum()","99b0e966":"### Five  point summary for all the cols to understand the data distribution \ndf.describe(include='all')","a615cd80":"### Removing id cols : Case Number, Order\ndf.drop(\"order\",axis=1,inplace=True)\ndf.drop(\"CASE_NUMBER\",axis=1,inplace=True)\n","91381f10":"### Analysis of target variable CASE_STATUS\ndf[\"CASE_STATUS\"].unique()","1e2daa07":"### Checking the Value count of each class\ndf[\"CASE_STATUS\"].value_counts()","1a4f9a84":"sns.countplot(x=df[\"CASE_STATUS\"])","1eeed796":"### Converting target variable in binary classification \ndf[\"CASE_STATUS\"]=df['CASE_STATUS'].replace('certified',1)\ndf[\"CASE_STATUS\"]=df['CASE_STATUS'].replace('certified-withdrawn',1)\ndf[\"CASE_STATUS\"]=df['CASE_STATUS'].replace('certified-expired',1)\ndf[\"CASE_STATUS\"]=df['CASE_STATUS'].replace('denied',0)\ndf[\"CASE_STATUS\"]=df['CASE_STATUS'].replace('withdrawn',0)\n","efe34f72":"### Checking the Value count now\ndf[\"CASE_STATUS\"].value_counts()","bb9c9a53":"sns.countplot(x=df[\"CASE_STATUS\"])","8d55cd7b":"df.isna().sum()","20afce2f":"### Analysis of variable EXPERIENCE_REQUIRED_Y_N and EXPERIENCE_REQUIRED_NUM_MONTHS","392d9cb3":"## Action : Job where exepriance is not required ,  experience required should be 0. \nmask=df[\"EXPERIENCE_REQUIRED_Y_N\"]=='n'\ndf.loc[mask,\"EXPERIENCE_REQUIRED_NUM_MONTHS\"]=0.0","b1dc6fd5":"df[df[\"EXPERIENCE_REQUIRED_Y_N\"]=='n']['EXPERIENCE_REQUIRED_NUM_MONTHS'].value_counts()","2cd50943":"print(df[\"WORK_POSTAL_CODE\"].isnull().sum())\n\ndf.shape","1056b33f":"## There are 113k values are null in Workpostal code , we cannot impute these values.","b9c592f3":"### Dropping col WORK_POSTAL_CODE\ndf.drop(\"WORK_POSTAL_CODE\",axis=1,inplace=True)","48f05b93":"### Analysis of VISA_CLASS column \ndf[\"VISA_CLASS\"].unique()","de4ad748":"sns.countplot(x=df[\"VISA_CLASS\"],hue=df[\"CASE_STATUS\"])\n### Put the ratio ","da5011b7":"print(df.EDUCATION_LEVEL_REQUIRED.isnull().sum())\ndf[\"EDUCATION_LEVEL_REQUIRED\"].value_counts()","da7fac4d":"sns.countplot(data=df,x=\"EDUCATION_LEVEL_REQUIRED\")","a960f6dc":"sns.countplot(x=df['EDUCATION_LEVEL_REQUIRED'],hue=df[\"CASE_STATUS\"])","b31c7210":"df2=df\ndf2.loc[df2.EDUCATION_LEVEL_REQUIRED.isnull(),\"EDUCATION_LEVEL_REQUIRED\"]='Other'\ndf2.loc[df2.EDUCATION_LEVEL_REQUIRED=='None',\"EDUCATION_LEVEL_REQUIRED\"]='Other'\ndf2.loc[df2.EDUCATION_LEVEL_REQUIRED=='High School',\"EDUCATION_LEVEL_REQUIRED\"]='Other'\ndf2.loc[df2.EDUCATION_LEVEL_REQUIRED==\"Associate's\",\"EDUCATION_LEVEL_REQUIRED\"]='Other'","fd474108":"df2.EDUCATION_LEVEL_REQUIRED.value_counts()\ndf=df2","d70b7f3e":"sns.countplot(x=df['EDUCATION_LEVEL_REQUIRED'],hue=df[\"CASE_STATUS\"])","39ad3dd4":"df[\"COUNTRY_OF_CITIZENSHIP\"].value_counts()","d558cdce":"df[\"COUNTRY_OF_CITIZENSHIP\"].isna().sum()","9f940f4e":"sns.countplot(data=df,x=\"COUNTRY_OF_CITIZENSHIP\")","60bc833e":"df2=df.COUNTRY_OF_CITIZENSHIP.value_counts()\ndf2.head(15)","3abf1961":"## Taking top 10 countries where count is greater than 100 \n#### Mexico \ndf3=df\nmask=((df3.COUNTRY_OF_CITIZENSHIP=='Others')|(df3.COUNTRY_OF_CITIZENSHIP=='INDIA') | (df3.COUNTRY_OF_CITIZENSHIP=='CHINA')|(df3.COUNTRY_OF_CITIZENSHIP=='CANADA')|(df3.COUNTRY_OF_CITIZENSHIP=='PHILIPPINES')|(df3.COUNTRY_OF_CITIZENSHIP=='SOUTH KOREA')|(df3.COUNTRY_OF_CITIZENSHIP=='MEXICO')|(df3.COUNTRY_OF_CITIZENSHIP=='TAIWAN')|(df3.COUNTRY_OF_CITIZENSHIP=='RUSSIA')|(df3.COUNTRY_OF_CITIZENSHIP=='FRANCE'))\ndf.loc[~mask,\"COUNTRY_OF_CITIZENSHIP\"]=\"Others\"\n","2604cac9":"#### filling unknown values to Others \ndf3.COUNTRY_OF_CITIZENSHIP.fillna('Others',inplace=True)","6d20ee35":"df=df3","a9020bde":"sns.countplot(x=df['COUNTRY_OF_CITIZENSHIP'],hue=df[\"CASE_STATUS\"])","27e18e6e":"df.COUNTRY_OF_CITIZENSHIP.value_counts().head(20)","5bd6a7a4":"ndf=df[\"COLLEGE_MAJOR_REQUIRED\"].value_counts()\nndf.head(10)","4206dabd":"df.loc[(df[\"COLLEGE_MAJOR_REQUIRED\"].apply(lambda x: \"computer\" in str(x).lower())),\"COLLEGE_MAJOR_REQUIRED\"]=\"Computer Science\"","7338b6b1":"df.loc[(df[\"COLLEGE_MAJOR_REQUIRED\"].apply(lambda x: \"comp\" in str(x).lower())),\"COLLEGE_MAJOR_REQUIRED\"]=\"Computer Science\"","b2692967":"df[\"COLLEGE_MAJOR_REQUIRED\"]=df[\"COLLEGE_MAJOR_REQUIRED\"].fillna(\"none\")","ef78dc3f":"df.loc[~((df[\"COLLEGE_MAJOR_REQUIRED\"]==\"none\" ) |(df[\"COLLEGE_MAJOR_REQUIRED\"]==\"Computer Science\" ) |(df[\"COLLEGE_MAJOR_REQUIRED\"]==\"any field\" ) |(df[\"COLLEGE_MAJOR_REQUIRED\"]==\"education\" ) |(df[\"COLLEGE_MAJOR_REQUIRED\"]==\"engineering\" ) |(df[\"COLLEGE_MAJOR_REQUIRED\"]==\"medicine\" )),\"COLLEGE_MAJOR_REQUIRED\"]=\"any field\"","a99961b8":"df[\"COLLEGE_MAJOR_REQUIRED\"].value_counts()","39fb5aae":"sns.countplot(x=df['COLLEGE_MAJOR_REQUIRED'],hue=df[\"CASE_STATUS\"])","a6ffa6fd":"df.isnull().sum()","80bc6e55":"### Setting experiance required to n and correspondingly setting EXPERIENCE_REQUIRED_NUM_MONTHS=0\n### Experiance required  is important col , so we decieded to impute values. \ndf.loc[df[\"EXPERIENCE_REQUIRED_Y_N\"].isna(),\"EXPERIENCE_REQUIRED_Y_N\"]='n'","164ffa16":"df.loc[(df[\"EXPERIENCE_REQUIRED_Y_N\"]=='n'),\"EXPERIENCE_REQUIRED_NUM_MONTHS\"]=0.0","5fb6cb15":"sns.countplot(x=df['EXPERIENCE_REQUIRED_Y_N'],hue=df[\"CASE_STATUS\"])","870e6e70":"df.isna().sum()","56a485fd":"df[\"FULL_TIME_POSITION_Y_N\"].value_counts()","70a63b96":"sns.countplot(x=df['FULL_TIME_POSITION_Y_N'],hue=df[\"CASE_STATUS\"])","ad788ba2":"df[~df[\"FULL_TIME_POSITION_Y_N\"].isna()][\"CASE_STATUS\"].value_counts()","92ab819c":"####imputation  using n \ndf[\"FULL_TIME_POSITION_Y_N\"]=df[\"FULL_TIME_POSITION_Y_N\"].fillna('n')","3e276682":"df[\"FULL_TIME_POSITION_Y_N\"].value_counts()","6782b91e":"sns.countplot(x=df['FULL_TIME_POSITION_Y_N'],hue=df[\"CASE_STATUS\"])","239ee5e4":"### imblance data --> % analysis ","20cf35d1":"### Dropping record where PREVAILING_WAGE_PER_YEAR,WORK_CITY are  missing \ndf=df[~df[\"PREVAILING_WAGE_PER_YEAR\"].isna()]\ndf=df[~df[\"WORK_CITY\"].isna()]","3787bb14":"df.info()","b0d8ed01":"#### Converting into datetype \ndf[\"CASE_RECEIVED_DATE\"]=pd.to_datetime(df[\"CASE_RECEIVED_DATE\"],format=\"%m\/%d\/%Y\")","5c3adc06":"df[\"DECISION_DATE\"]=pd.to_datetime(df[\"DECISION_DATE\"],format=\"%m\/%d\/%Y\")","8160a6f4":"### New feature No_CASE_DAYS required for outcome \ndf[\"CASE_DAYS\"]=df[\"DECISION_DATE\"]- df[\"CASE_RECEIVED_DATE\"]","e4e978d5":"df[\"CASE_DAYS\"].shape","f5425e5b":"def replace_str(x):\n    x=str(x).strip()\n    return (x.replace(\"days\",\"\").replace(\"00:00:00\",\"\").strip())\n\n#replace_str(\" 100 days \")\n    \ndf[\"CASE_DAYS\"]=df[\"CASE_DAYS\"].apply(lambda x : replace_str(x))","3f0611f3":"df[\"CASE_DAYS\"]=df[\"CASE_DAYS\"].astype(int)","b0582116":"##extracting dayof month, day of week, month information\ndf[\"case_received_dayofmonth\"]=df[\"CASE_RECEIVED_DATE\"].dt.day\ndf[\"case_received_dayofweek\"]=df[\"CASE_RECEIVED_DATE\"].dt.dayofweek\ndf[\"case_received_month\"]=df[\"CASE_RECEIVED_DATE\"].dt.month","8db1791b":"sns.countplot(x=df['case_received_dayofmonth'],hue=df[\"CASE_STATUS\"])","d93baa6d":"sns.countplot(x=df['case_received_dayofmonth'])","26eb8fb0":"sns.countplot(x=df[\"case_received_dayofweek\"],hue=df[\"CASE_STATUS\"])","aab47bba":"sns.countplot(x=df[\"case_received_month\"])","d055217b":"sns.countplot(x=df[\"case_received_month\"],hue=df[\"CASE_STATUS\"])","887b1e9f":"df[[\"EMPLOYER_NAME\",\"WORK_CITY\",\"JOB_TITLE_SUBGROUP\",\"JOB_TITLE\",\"PREVAILING_WAGE_SOC_CODE\",\"PREVAILING_WAGE_SOC_TITLE\"]].describe()","82d50ec8":"df.info()","7563b911":"# Droppping JOB_TITLE as JOB_TITLE_SUBGROUP is giving high level of info\ndf[\"JOB_TITLE\"].describe()","a8736fc5":"df.drop(\"JOB_TITLE\",axis=1,inplace=True)","2f3885de":"df[\"EMPLOYER_NAME\"].value_counts()\n","cdb705a3":"df[\"EMPLOYER_NAME\"].describe()","5b92365e":"dfe=pd.DataFrame(df[\"EMPLOYER_NAME\"].unique(),columns=[\"Employer\"])","4965a782":"dfe","ce1c9051":"dfe[(dfe['Employer'].str.lower().str.contains(\"university\"))] #972\ndfe[(dfe['Employer'].str.lower().str.contains(\"school\"))]\ndfe[(dfe['Employer'].str.lower().str.contains(\"church\"))].shape\ndfe[(dfe['Employer'].str.lower().str.contains(\"inc.\"))]\ndfe[(dfe['Employer'].str.lower().str.contains(\"techno\"))]\ndfe[(dfe['Employer'].str.lower().str.contains(\"hospital\"))].shape","bb856d3c":"l = ['limited','inc','corp','llc','ltd']  \nregstr = '|'.join(l)\ndfe1=dfe[~(dfe['Employer'].str.lower().str.contains(regstr))]","a4f9fd83":"dfe1[(dfe1['Employer'].str.lower().str.contains(\"school\"))]","c6e8437b":"l = ['limited','inc','corp','llc','ltd','llp']  \nregstr = '|'.join(l)\n#dfe1=dfe[~(dfe['Employer'].str.lower().str.contains(regstr))]\ndf[\"EMPLOYER_TYPE\"]=df[\"EMPLOYER_NAME\"]","a146febc":"df.loc[(df['EMPLOYER_NAME'].str.lower().str.contains(regstr)),\"EMPLOYER_TYPE\"]=\"CORPORATION\"\ndf.loc[(df['EMPLOYER_NAME'].str.lower().str.contains('university')),\"EMPLOYER_TYPE\"]=\"UNIVERSITY\"\ndf.loc[(df['EMPLOYER_NAME'].str.lower().str.contains('school')),\"EMPLOYER_TYPE\"]=\"SCHOOL\"\nl = ['university','school','corporation']  \nregstr = '|'.join(l)\n#df['EMPLOYER_TYPE'].str.lower().str.contains(regstr).sum()\ndf.loc[~(df['EMPLOYER_TYPE'].str.lower().str.contains(regstr)),\"EMPLOYER_TYPE\"]=\"OTHERS\"","af0fe915":"## As we generated EMPLOYER_TYPE, dropping off EMPLYOYER_NAME col\ndf.drop(\"EMPLOYER_NAME\",axis=1,inplace=True)","d854c03f":"df[[\"WORK_CITY\",\"WORK_STATE\"]]","f4d98f48":"df[[\"WORK_CITY\",\"WORK_STATE\"]].describe()","7ee80929":"df[\"WORK_STATE\"].value_counts().head(10)","b1420aba":"sns.countplot(x=df[\"WORK_STATE\"],hue=df[\"CASE_STATUS\"])","d6f7de57":"df.loc[df[\"WORK_STATE\"]==\"CALIFORNIA\",\"WORK_STATE\"]=\"CA\"\ndf.loc[df[\"WORK_STATE\"]==\"TEXAS\",\"WORK_STATE\"]=\"TX\"\ndf.loc[df[\"WORK_STATE\"]==\"NEW YORK\",\"WORK_STATE\"]=\"NY\"\ndf.loc[df[\"WORK_STATE\"]==\"NEW JERSEY\",\"WORK_STATE\"]=\"NJ\"\ndf.loc[df[\"WORK_STATE\"]==\"ILLINOIS\",\"WORK_STATE\"]=\"IL\"\ndf.loc[df[\"WORK_STATE\"]==\"MASSACHUSETTS\",\"WORK_STATE\"]=\"MA\"\ndf.loc[df[\"WORK_STATE\"]==\"VIRGINIA\",\"WORK_STATE\"]=\"VA\"\ndf.loc[df[\"WORK_STATE\"]==\"GEORGIA\",\"WORK_STATE\"]=\"GA\"\ndf.loc[df[\"WORK_STATE\"]==\"PENNSYLVANIA\",\"WORK_STATE\"]=\"PA\"\ndf.loc[df[\"WORK_STATE\"]==\"WASHINGTON\",\"WORK_STATE\"]=\"WA\"\n\ndf[\"WORK_STATE\"].value_counts().head(10)","bb7ed19f":"mask=~((df[\"WORK_STATE\"]==\"CA\")|(df[\"WORK_STATE\"]==\"TX\")|(df[\"WORK_STATE\"]==\"NY\")|(df[\"WORK_STATE\"]==\"NJ\")|(df[\"WORK_STATE\"]==\"IL\")|(df[\"WORK_STATE\"]==\"MA\")|(df[\"WORK_STATE\"]==\"VA\")|(df[\"WORK_STATE\"]==\"GA\")|(df[\"WORK_STATE\"]==\"PA\")|(df[\"WORK_STATE\"]==\"WA\"))\ndf.loc[mask,\"WORK_STATE\"]=\"OTHERS\"","18f47a23":"### Dropping these two cols\ndf.drop([\"WORK_CITY\"],axis=1,inplace=True) ###  WORK STATE will matter\n#### WORK CITY  we can consider ","6eaf4256":"df.info()","5f818c42":"df[\"PREVAILING_WAGE_SUBMITTED_UNIT\"].value_counts()","1cccdaf1":"df[\"PREVAILING_WAGE_SUBMITTED\"]","734aaf15":"def sal_yearly(sal,unit):\n\n    if unit==\"year\":\n        return sal\n    elif unit==\"month\":\n        return (sal*12)\n    elif unit==\"hour\":\n        return (sal*8*365)\n    elif unit==\"week\":\n        return (sal\/7)*365\n    elif unit==\"bi-weekly\":\n        return (sal\/7)*365","d337ce3c":"df[\"PREVAILING_WAGE_YEARLY\"]=df.apply(lambda x : sal_yearly(x['PREVAILING_WAGE_SUBMITTED'],x['PREVAILING_WAGE_SUBMITTED_UNIT']),axis=1)","5d738334":"df[\"PAID_WAGE_YEARLY\"]=df.apply(lambda x : sal_yearly(x['PAID_WAGE_SUBMITTED'],x['PAID_WAGE_SUBMITTED_UNIT']),axis=1)","184ac2b7":"#sns.countplot(x=df[\"PREVAILING_WAGE_YEARLY\"],hue=df[\"CASE_STATUS\"])","dbb5d540":"#sns.countplot(x=df[\"PAID_WAGE_YEARLY\"],hue=df[\"CASE_STATUS\"])","c20bc93b":"\ndf[\"JOB_TITLE_SUBGROUP\"].value_counts()","a7ab97cf":"plt.figure(figsize=(16, 7))\n\nsns.countplot(x=df[\"JOB_TITLE_SUBGROUP\"],hue=df[\"CASE_STATUS\"])","661b99d1":"### Most of the applicants are Software Engineer. ","f1ef052b":"### extracting the high level code\ndf[\"PREVAILING_WAGE_SOC_DEPT_CODE\"]=df[\"PREVAILING_WAGE_SOC_CODE\"].apply(lambda x : x[:2])","e983b2b7":"df[\"PREVAILING_WAGE_SOC_SPEC_CODE\"]=df[\"PREVAILING_WAGE_SOC_CODE\"].apply(lambda x : x[3:])","22953725":"plt.figure(figsize=(16, 7))\nsns.countplot(x=df[\"PREVAILING_WAGE_SOC_DEPT_CODE\"],hue=df[\"CASE_STATUS\"])","26432160":"df[\"PREVAILING_WAGE_SOC_SPEC_CODE\"].value_counts()","a9649113":"##SPEC CODE has 251 unique values.","031c17bb":"benchmark_df=df","c84f5105":"benchmark_df=benchmark_df.drop(\"CASE_RECEIVED_DATE\",axis=1)\nbenchmark_df=benchmark_df.drop(\"DECISION_DATE\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SUBMITTED\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SUBMITTED_UNIT\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PAID_WAGE_SUBMITTED_UNIT\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PAID_WAGE_SUBMITTED\",axis=1)","b88e7fe2":"benchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SOC_TITLE\",axis=1)","52262c12":"\nbenchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SOC_SPEC_CODE\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_YEARLY\",axis=1)\nbenchmark_df=benchmark_df.drop(\"PAID_WAGE_YEARLY\",axis=1)","fbc43bf1":"benchmark_df.T","df746f12":"benchmark_df.describe(include=\"all\")","6c22faf2":"### Calculating sine cosine of cyclic cols \nimport numpy as np\nbenchmark_df['dayofweek_sin'] = np.sin(2 * np.pi * benchmark_df['case_received_dayofweek']\/6.0)\nbenchmark_df['dayofweek_cos'] = np.cos(2 * np.pi * benchmark_df['case_received_dayofweek']\/6.0)\nbenchmark_df['day_sin'] = np.sin(2 * np.pi * benchmark_df['case_received_dayofmonth']\/31.0)\nbenchmark_df['day_cos'] = np.cos(2 * np.pi * benchmark_df['case_received_dayofmonth']\/31.0)\nbenchmark_df['month_sin'] = np.sin(2 * np.pi * benchmark_df['case_received_month']\/12)\nbenchmark_df['month_cos'] = np.cos(2 * np.pi * benchmark_df['case_received_month']\/12) ","0abd1f5f":"benchmark_df.T","de888798":"benchmark_df=benchmark_df.drop(\"case_received_dayofmonth\",axis=1)\nbenchmark_df=benchmark_df.drop(\"case_received_dayofweek\",axis=1)\nbenchmark_df=benchmark_df.drop(\"case_received_month\",axis=1)\n\n\n","31512c40":"benchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SOC_CODE\",axis=1)","dcd8f116":"benchmark_df.info()","4dd5a8e0":"df_corrl = benchmark_df[[\"CASE_STATUS\",\"EXPERIENCE_REQUIRED_NUM_MONTHS\",\"PREVAILING_WAGE_PER_YEAR\",\"PAID_WAGE_PER_YEAR\",\"CASE_DAYS\",\"dayofweek_sin\",\"dayofweek_cos\",\"day_sin\",\"day_cos\",\"month_sin\",\"month_cos\"]]","95a1d7f2":"corr = df_corrl.corr()","d45c1bfb":"sns.heatmap(corr, \n        xticklabels=corr.columns,\n        yticklabels=corr.columns,cmap=\"Greens\")","1dbbdde6":"benchmark_df.describe(include=\"all\")","fbf641dd":"benchmark_df=pd.get_dummies(benchmark_df)","2300ef4b":"benchmark_df","f3b74b5e":"benchmark_df.info()","b2f25ffa":"benchmark_df=benchmark_df.drop(\"PREVAILING_WAGE_SOC_DEPT_CODE_43\",axis=1)\nbenchmark_df=benchmark_df.drop(\"EMPLOYER_TYPE_OTHERS\",axis=1)\nbenchmark_df=benchmark_df.drop(\"JOB_TITLE_SUBGROUP_teacher\",axis=1)\nbenchmark_df=benchmark_df.drop(\"VISA_CLASS_H-1B1 Chile\",axis=1)\nbenchmark_df=benchmark_df.drop(\"FULL_TIME_POSITION_Y_N_n\",axis=1)\nbenchmark_df=benchmark_df.drop(\"COUNTRY_OF_CITIZENSHIP_Others\",axis=1)\nbenchmark_df=benchmark_df.drop(\"COLLEGE_MAJOR_REQUIRED_none\",axis=1)\nbenchmark_df=benchmark_df.drop(\"EDUCATION_LEVEL_REQUIRED_Other\",axis=1)\nbenchmark_df=benchmark_df.drop(\"WORK_STATE_OTHERS\",axis=1)","e8bfae4d":"benchmark_df.info()","2914ad60":"benchmark_df=benchmark_df.drop(\"EXPERIENCE_REQUIRED_Y_N_n\",axis=1)","75bdaa08":"benchmark_df.info()","3f388585":"X=benchmark_df.loc[ : , benchmark_df.columns != 'CASE_STATUS']\nY=benchmark_df[\"CASE_STATUS\"]","598d025d":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X, Y, test_size = .2, random_state = 42)","a2403ca7":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(random_state=0) \nlr.fit(X_train, y_train)\ny_pred_rf = lr.predict(X_test)\n","b574a273":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred_rf)","fd5a6038":"from sklearn.metrics import f1_score\nf1_score(y_test, y_pred_rf)","8ce3a723":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, y_pred_rf)","566784d9":"from sklearn.metrics import precision_score\nprecision_score(y_test, y_pred_rf)","51bd3691":"from sklearn.metrics import recall_score\nrecall_score(y_test, y_pred_rf)","519ba335":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=300,random_state=0) \nrf.fit(X_train, y_train)\ny_pred_rf = rf.predict(X_test)","a769f517":"f1_score(y_test, y_pred_rf)","d399e0e3":"confusion_matrix(y_test, y_pred_rf)","1e1a0011":"##### Most of the Data in H-1B class and status is approved.","497a95a7":"#### Analyis of Employer Name column ","35fdbdb4":"There are following unique values in cols \n\n- Unique Companies : 23769  \n- \"JOB_TITLE\" : 12588 \n- \"WORK_CITY\" : 4887  \n- PREVAILING_WAGE_SOC_CODE : 410\n- \"PREVAILING_WAGE_SOC_TITLE\" : 561\n- \"WORK STATE\" : 56\n-  JOB_TITLE_SUBGROUP\" : 8 ","a17cba3e":"### Analysis of COUNTRY_OF_CITIZENSHIP","8912d2e1":"### Analysis of EDUCATION_LEVEL_REQUIRED","c5125dff":"### Load in Dataset","eded7fd6":"#### There are 134 unique countries  and 156K missing entries ","07fe7004":"-  There are Few Id cols like Case Number, Order \n-  There are few categorical cols where number of unique value is very large.","13c78c7b":"#### Converting Employer in four categories \nCORPORATION    \nUNIVERSITY      \nOTHERS          \nSCHOOL ","e518da9b":"- Now there are three cols has missing values as comapre to total number of data points these values are very less.\n- Also there is no clear cut way to imput the data","23678044":"#### Most of application submitted during  weekdays . Wednesday has highest approval rate. ","dd8dafe0":"#### Analysing  JOB_TITLE_SUBGROUP \n","e09434de":"## DOL (US Department of Labor) VISA STATUS \n\nTo work in the USA, a foreigner must complete several applications. An important one is to apply to\nthe Immigration service for the appropriate visa (green card, H1B, etc.). Before this can be done, the\ncompany that intends to hire him must have the candidate certified by the Department of Labor\n(DOL).\n\nSo dataset doesnt represent the Visa outcome, At the end of this application, the company\u2019s application will be \u2018certified\u2019 or \u2018denied\u2019 by the DOL. \nIf it is certified, the candidate can proceed to apply for his visa. \n\n\n\n### Data Set Description \n\nComplete details of different VISA applications received by the US government between the years 2008 to 2015. VISA class include E-3 Australia, Greencard, H-1B, H-1B1 Chile, and H-1B1 Singapore. Dataset also has various VISA applicant non-personal details like occupation, wages received, company sponsoring the VISA, VISA status, and many more.\n","52cacb4d":"- There are total 9 cols where few data values are null. \n- There are total  5 float, 1 int and 20 Object type cols. ","24249ac6":"### People Generally apply more in Month of March \nThat also resonates :  there is a specific window for applications, which usually starts on April 1st for the fiscal year starting October 1st of the following year.","626e41e3":"- There are total 5 visa class. ","6e99d588":"- There are five unique  values:  'denied', 'certified-withdrawn', 'withdrawn', 'certified', 'certified-expired'\n- Most of the  Records are Certified \n- 3 out of 5 are related to certified or approved.\n- rest 2 are  related to rejction where application is not succesful. \n- Actually  it is multi class classification problem. But at this point we can easily convert it to binary classification using above logic.\n","3cacc0d7":"#### Mid month around 18,19,20 Most of the application submitted  so approve rate is also highfor these dates.\n","25659b67":"#### Keeping only Master, Bachelor, Doctorate and keeping everything in other","213740da":"## ML Pipeline ","96237c90":"### Creating Random Forest Classifier ","a6e4401a":"- There are more than 22k unique value for employer col. \n- We can not ignore employer col for any Visa processing \n- We re-classified all the employer in four types : University, Corporate, School and Others ","26800a66":"### There are many unique values,putting everything in five categories and other items in none\nnone                \nComputer Science     \nany field            \neducation             \nengineering         \nmedicine","a08738c2":"#### Now others has high number of counts ","6347ab12":"- missing count for EXPERIENCE_REQUIRED_Y_N  and EXPERIENCE_REQUIRED_NUM_MONTHS is not matching\n- Job where exepriance is not required ,  experience required in months should be 0.\n- We identified that there are around 6k row which is not matching with above logic.","632dd26b":"### There is huge imbalance in data. ","eebb386e":"### Data Cleaning, Preparation & EDA","016abe94":"- There are  total 26 columns  and 167K data points. \n- Out of 26 columns, CASE_STATUS is target variable and rest other are features. ","15c8de45":"#### There are now five cols which has missing values. ","706e2bda":"##### Now there is no missing data ","51272998":"#### Most of the values are Other , Now. ","51c7a12a":"- Converting CASE_RECEIVED_DATE and DECISION_DATE as date cols\n- After how many days outcome recieved , would be interesting feature. ","45e24f4f":"#### Analysis of \"WORK_CITY\",\"WORK_STATE\"","40beddbb":"### Analysis of COLLEGE_MAJOR_REQUIRED","b1cd4136":"#### Analysing Wages cols  and Converting wages in yearly format\n","7fdcd321":"### Benchmarking ","4b8b6c48":"> \n## Problem Statement\n\nTo predict the  DOL applictaion outcome based  on Applicant Data  for Visa (DOL) applcation.\n\n","36578310":"# **Conclusion : **\n*     Due to imbalance in data, F1 Score is better for both Logistic  and Random Forest Classifier . \n*     Based on the requirement, we can make model more sensitive  for one kind of cases ( False Positive, False Negative)\n*     There are certain interesting exploration in data that we will update in sometime. "}}