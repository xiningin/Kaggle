{"cell_type":{"38316a2c":"code","cbed9c6b":"code","ee715676":"code","b1c4f1c7":"code","e1bfd0a9":"code","4e85ea96":"code","0c70a231":"code","819e8771":"code","3145cd7f":"code","fcccb182":"code","384ce9e6":"code","2619157f":"code","e2f7c896":"code","d6d74784":"code","a53e83aa":"code","db06fade":"code","e4760ff4":"code","a562c805":"code","6d5f1334":"code","07aa5832":"code","f8540561":"code","03f48902":"code","59562845":"code","e228818a":"code","4e72d388":"code","e2cf5a50":"code","47a1a81c":"code","ae5f2f8b":"code","1a19bb64":"code","22fa480d":"code","6f9e7de8":"code","86e57e75":"code","60912c52":"code","a0a1c90e":"code","4b467e85":"code","407f765a":"code","13d54e35":"code","a4ef1359":"code","15dfbb83":"code","b6c6ed03":"code","d07c915c":"code","72995579":"code","58318637":"code","e4d9f6f5":"code","d3998647":"code","a5233d19":"code","b821beef":"code","9adcb7a3":"code","e07cc41c":"code","0e7b88f4":"code","e901c081":"code","88d0843f":"code","516ea70f":"code","99509fbd":"code","f15987b7":"code","50032a41":"code","761c44b1":"code","f5ed0d6c":"code","9e0e67c6":"code","7ecbffb2":"code","22d1d3c8":"code","da0f224f":"code","33a7a872":"code","1a4c71c7":"code","f041fb8c":"code","c9a3bb14":"code","ed1cf124":"code","ff8d5f69":"code","a07fca2a":"code","ea0e3b2f":"code","21cb4be8":"code","f091f54a":"code","9e4c12af":"code","162b5ac1":"code","1cd70694":"code","0d3bc9cd":"code","b9a3978e":"code","d8d3abf4":"code","9dfed006":"code","4948ed61":"code","72d01a12":"code","c6d8578f":"code","fe33a90e":"code","1bc49955":"code","221611c0":"code","82b96e4f":"code","68c6d9ed":"code","bcea3a8e":"code","5a666255":"code","6d7f8941":"code","1020c4f4":"code","5fd41298":"code","8fb9fe83":"code","1ce245a7":"code","ad5109e6":"code","92eae669":"code","8590a0e5":"code","3dea5896":"code","594057bc":"code","21fc1035":"code","f6abc811":"code","50ddd4c8":"code","d3f3546e":"code","e48bd9a4":"code","ef9a2ae4":"code","9086a564":"markdown","d363f6f2":"markdown","4908999e":"markdown","d86df009":"markdown","f6f1f455":"markdown","45530ef0":"markdown","6936ea1d":"markdown","5440399b":"markdown","4371d941":"markdown","52d75616":"markdown","2782e76f":"markdown","56db7569":"markdown","6683e7b8":"markdown","08a254c3":"markdown","b9c5acc5":"markdown","ab093e39":"markdown","349b765a":"markdown","3f1b4428":"markdown","aa5d2053":"markdown","cd8af75d":"markdown","e5d939b4":"markdown","fa25ca6b":"markdown","e29c9abb":"markdown","63aa3fe5":"markdown","f476cb79":"markdown","715ed49a":"markdown","ddaad924":"markdown","03047eb1":"markdown","cef8d91c":"markdown","3e6c8441":"markdown","6fac52af":"markdown","0153eb44":"markdown","c1cef0f2":"markdown","1f1f1b79":"markdown","3d89aa6b":"markdown","76ae6fd8":"markdown","c25d6b69":"markdown","1927b505":"markdown","5cdb4189":"markdown"},"source":{"38316a2c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cbed9c6b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.ensemble import RandomForestRegressor","ee715676":"data = pd.read_csv(\"\/kaggle\/input\/insurance-premium-prediction\/insurance.csv\")","b1c4f1c7":"data","e1bfd0a9":"data.shape","4e85ea96":"data.info()","0c70a231":"data.describe()","819e8771":"data.columns","3145cd7f":"data.isnull().sum()","fcccb182":"sns.histplot(data.age)","384ce9e6":"sns.distplot(data.age)","2619157f":"sns.boxplot(data.age)","e2f7c896":"data.age","d6d74784":"data.age.unique()","a53e83aa":"data.age.value_counts()","db06fade":"sns.countplot(data.sex)","e4760ff4":"data['sex'].value_counts().plot(kind=\"pie\", autopct=\"%.2f\")","a562c805":"data.sex","6d5f1334":"data.sex.unique()","07aa5832":"data.sex.value_counts()","f8540561":"sns.histplot(data.bmi)","03f48902":"sns.distplot(data.bmi)","59562845":"sns.boxplot(data.bmi)","e228818a":"data.bmi","4e72d388":"sns.countplot(data.children)","e2cf5a50":"data.children.value_counts().plot(kind=\"pie\", autopct=\"%.2f\")","47a1a81c":"data.children","ae5f2f8b":"data.children.unique()","1a19bb64":"data.children.value_counts()","22fa480d":"sns.countplot(data.smoker)","6f9e7de8":"data['smoker'].value_counts().plot(kind=\"pie\", autopct=\"%.2f\")","86e57e75":"data.smoker","60912c52":"data.smoker.unique()","a0a1c90e":"data.smoker.value_counts()","4b467e85":"sns.countplot(data.region)","407f765a":"data['region'].value_counts().plot(kind=\"pie\", autopct=\"%.2f\")","13d54e35":"data.region","a4ef1359":"data.region.unique()","15dfbb83":"data.region.value_counts()","b6c6ed03":"sns.scatterplot(data[\"age\"], data[\"bmi\"])","d07c915c":"sns.regplot(data[\"age\"], data[\"bmi\"])","72995579":"sns.scatterplot(data.age,data.expenses)","58318637":"sns.regplot(data[\"age\"], data[\"expenses\"])","e4d9f6f5":"sns.scatterplot(data.bmi,data.expenses)","d3998647":"sns.regplot(data[\"bmi\"], data[\"expenses\"])","a5233d19":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"sex\"])","b821beef":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"sex\"])","9adcb7a3":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"sex\"])","e07cc41c":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"children\"])","0e7b88f4":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"children\"])","e901c081":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"])","88d0843f":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"smoker\"])","516ea70f":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"smoker\"])","99509fbd":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"smoker\"])","f15987b7":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"region\"])","50032a41":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"region\"])","761c44b1":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"region\"])","f5ed0d6c":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"sex\"], style=data['smoker'])","9e0e67c6":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"sex\"], style=data['region'])","7ecbffb2":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"sex\"], style=data['children'])","22d1d3c8":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"children\"], style=data['region'])","da0f224f":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"children\"], style=data['smoker'])","33a7a872":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"children\"], style=data['region'])","1a4c71c7":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"], style=data['region'])","f041fb8c":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"], style=data['smoker'])","c9a3bb14":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"], style=data['region'])","ed1cf124":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"], style=data['region'])","ff8d5f69":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"children\"], style=data['children'])","a07fca2a":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"smoker\"], style=data['smoker'])","ea0e3b2f":"sns.scatterplot(data[\"age\"], data[\"bmi\"], hue=data[\"region\"], style=data['region'])","21cb4be8":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"sex\"], style=data['sex'])","f091f54a":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"children\"], style=data['children'])","9e4c12af":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"smoker\"], style=data['smoker'])","162b5ac1":"sns.scatterplot(data[\"age\"], data[\"expenses\"], hue=data[\"region\"], style=data['region'])","1cd70694":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"sex\"], style=data['sex'])","0d3bc9cd":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"children\"], style=data['children'])","b9a3978e":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"smoker\"], style=data['smoker'])","d8d3abf4":"sns.scatterplot(data[\"bmi\"], data[\"expenses\"], hue=data[\"region\"], style=data['region'])","9dfed006":"le1 = LabelEncoder()\ndata[\"sex\"] = le1.fit_transform(data.sex)","4948ed61":"le2 = LabelEncoder()\ndata[\"smoker\"] = le2.fit_transform(data.smoker)","72d01a12":"ohe = OneHotEncoder()\nX = ohe.fit_transform(data.region.values.reshape(-1,1)).toarray()\nOHE = pd.DataFrame(X, columns = [\"northeast\",\"northwest\",\"southeast\",\"southwest\"])\ndf = pd.concat([data, OHE], axis=1)\ndf = df.drop(\"region\",axis = 1)","c6d8578f":"df","fe33a90e":"X = df.drop(\"expenses\",axis = 1)\ny = df.expenses","1bc49955":"X","221611c0":"y","82b96e4f":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state =0)","68c6d9ed":"X_train","bcea3a8e":"X_test","5a666255":"y_train","6d7f8941":"y_test","1020c4f4":"from sklearn.linear_model import LinearRegression\nreg1 = LinearRegression()\nreg1.fit(X_train,y_train)\ny_pred1 = reg1.predict(X_test)","5fd41298":"y_pred1","8fb9fe83":"print(\"MSE : \",mean_squared_error(y_pred1,y_test))\nprint(\"MAE : \",mean_absolute_error(y_pred1,y_test))\nprint(\"R Score :\",r2_score(y_pred1,y_test))","1ce245a7":"reg2 = SVR(kernel = \"linear\")\nreg2.fit(X_train,y_train)\ny_pred2 = reg2.predict(X_test)","ad5109e6":"y_pred2","92eae669":"print(\"MSE : \",mean_squared_error(y_pred2,y_test))\nprint(\"MAE : \",mean_absolute_error(y_pred2,y_test))\nprint(\"R Score :\",r2_score(y_pred2,y_test))","8590a0e5":"polynomial_features = PolynomialFeatures(degree=3)\nx_train_poly = polynomial_features.fit_transform(X_train)\nx_test_poly = polynomial_features.fit_transform(X_test)\npolynomial_reg = LinearRegression(fit_intercept=False) \npolynomial_reg.fit(x_train_poly, y_train)\ny_pred3 = polynomial_reg.predict(x_test_poly)","3dea5896":"y_pred3","594057bc":"print(\"MSE : \",mean_squared_error(y_pred3,y_test))\nprint(\"MAE : \",mean_absolute_error(y_pred3,y_test))\nprint(\"R Score :\",r2_score(y_pred3,y_test))","21fc1035":"decision_tree_reg = DecisionTreeRegressor(max_depth=5, random_state=13)\ndecision_tree_reg.fit(X_train, y_train)\ny_pred4 = decision_tree_reg.predict(X_test)","f6abc811":"y_pred4","50ddd4c8":"print(\"MSE : \",mean_squared_error(y_pred4,y_test))\nprint(\"MAE : \",mean_absolute_error(y_pred4,y_test))\nprint(\"R Score :\",r2_score(y_pred4,y_test))","d3f3546e":"random_forest_reg = RandomForestRegressor(n_estimators=400, max_depth=5, random_state=13)\nrandom_forest_reg.fit(X_train, y_train)\ny_pred5 = random_forest_reg.predict(X_test)","e48bd9a4":"y_pred5","ef9a2ae4":"print(\"MSE : \",mean_squared_error(y_pred5,y_test))\nprint(\"MAE : \",mean_absolute_error(y_pred5,y_test))\nprint(\"R Score :\",r2_score(y_pred5,y_test))","9086a564":"# ***Polynomial Linear Regression***","d363f6f2":"***age Vs expenses on smoker***","4908999e":"***Checking the sex Column***","d86df009":"# **Checking the Two Columns with eachother**","f6f1f455":"# ***Importing All Libraries***","45530ef0":"***age Vs expenses on sex***","6936ea1d":"# ***Here we will Check for Four Columns***","5440399b":"# ***Import Dataset***","4371d941":"# ***Shape of Dataset***","52d75616":"***bmi Vs expenses on sex***","2782e76f":"***bmi Vs expenses on children***","56db7569":"***age Vs bmi***","6683e7b8":"# **Dataset Column Names**","08a254c3":"***age Vs bmi on children***","b9c5acc5":"# ***Model Creation***","ab093e39":"***age Vs bmi on smoker***","349b765a":"***Checking the Age Column***","3f1b4428":"***Checking the region Column***","aa5d2053":"***age Vs bmi on region***","cd8af75d":"# ***Finding Missing Values***","e5d939b4":"***bmi Vs expenses***","fa25ca6b":"# ***Random Forest Regression***","e29c9abb":"# ***Comparing the Three Columns***","63aa3fe5":"# ***Linear Regression***","f476cb79":"# ***Describe Dataset***","715ed49a":"***Checking the smoker Column***","ddaad924":"# ***Support Vector Regression***","03047eb1":"# ***Information of Dataset***","cef8d91c":"***age vs expenses***","3e6c8441":"***age Vs bmi on sex***","6fac52af":"# ***Decision Tree Regression***","0153eb44":"***age Vs expenses on region***","c1cef0f2":"# ***Feature Engineering***","1f1f1b79":"***bmi Vs expenses on region***","3d89aa6b":"***age Vs expenses on children***","76ae6fd8":"# ***Exploratory Data Analysis***","c25d6b69":"***bmi Vs expenses on smoker***","1927b505":"***Checking the children Column***","5cdb4189":"***Checking the bmi Column***"}}