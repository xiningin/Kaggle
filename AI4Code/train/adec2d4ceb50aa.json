{"cell_type":{"e5fb9ee2":"code","af5df59c":"code","267c1fe9":"code","030a23f1":"code","6c3ffb24":"code","70631e32":"code","c1eed638":"code","484155fa":"code","b0bc843e":"code","3609c6aa":"code","a2fcc12d":"code","7f856728":"code","dabe6306":"code","dec4131e":"code","a8a88b87":"code","a8f06b53":"code","f311968c":"code","2d1c6102":"markdown","2da6417e":"markdown","a0963396":"markdown","8a654208":"markdown","b1d681b5":"markdown","6c4532e8":"markdown","32ddba59":"markdown","52eb32e2":"markdown","a510dd28":"markdown","51475a25":"markdown","f3c2a5f7":"markdown","93bf8b5f":"markdown","ed357366":"markdown","7216bbdb":"markdown","fd10828c":"markdown","b38f6051":"markdown","fc9ff953":"markdown","d681057a":"markdown","5e7e1094":"markdown","4c20c950":"markdown","ce48dbdc":"markdown","61bcc144":"markdown"},"source":{"e5fb9ee2":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.indexing_selecting_assigning import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","af5df59c":"reviews.head(10)","267c1fe9":"check_q1(pd.DataFrame())","030a23f1":"reviews['description']","6c3ffb24":"reviews.loc[0,'description']  # or\n#reviews['description'][0]","70631e32":"#reviews.iloc[0] # or\nreviews.loc[0,:]","c1eed638":"f = pd.Series(reviews['description'].head(10))\nf","484155fa":"reviews.iloc[[1,2,3,5,8]]","b0bc843e":"reviews[['country','province','region_1','region_2']].iloc[[0,1,10,100]]","3609c6aa":"#reviews[['country','variety']].iloc[0:100]  # or\nreviews[['country','variety']].loc[0:99]","a2fcc12d":"reviews[reviews['country'] == 'Italy']['winery']","7f856728":"reviews[reviews['region_2'].notnull()]['winery']","dabe6306":"reviews['points']","dec4131e":"reviews.iloc[:999]['points']","a8a88b87":"#reviews['points'].tail(1000)   # or\nreviews.iloc[-1000:]['points']","a8f06b53":"reviews.loc[reviews.country == 'Italy']['points']","f311968c":"reviews.loc[(reviews['points'] >= 90) & (reviews['country'].isin(['Italy','France']))]['country']","2d1c6102":"# Set Up\nRun the following cell to load your data and some utility functions","2da6417e":"**Exercise 10**: <!--What is the distribution of wine ratings assigned by Wine Magazine?--> Select the `points` column.","a0963396":"**Exercise 2**: Select the first value from the description column of `reviews`.","8a654208":"**Exercise 12**: <!--What is the distribution of reviews scores for the last 1000 wines in the dataset?--> Select the `points` column for the last 1000 wines.","b1d681b5":"**Exercise 13**: <!--What is the distribution of reviews scores for wines made in Italy?--> Select the `points` column, but only for wines made in Italy.","6c4532e8":"## Keep going\n\nMove on to the [**Summary functions and maps workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/595524).","32ddba59":"**Exercise 14**: Who produces more above-averagely good wines, France or Italy? Select the `country` column, but only  when said `country` is one of those two options, _and_ the `points` column is greater than or equal to 90.\n\nYour output should look roughly like this:\n```\n119       France\n120        Italy\n           ...  \n129969    France\n129970    France\nName: country, Length: 15840, dtype: object\n```","52eb32e2":"**Exercise 6**: Select the `country`, `province`, `region_1`, and `region_2` columns of the records with the `0`, `1`, `10`, and `100` index positions. In other words, generate the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","a510dd28":"**Exercise 1**: Select the `description` column from `reviews`.","51475a25":"For the first set of questions, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nFor the second set of questions, using this function to check a correct answer will present you will an informative graph!\n\nIf you get stuck, use `answer_qN` function to print the answer outright.","f3c2a5f7":"**Exercise 5**: Select the records with the `1`, `2`, `3`, `5`, and `8` row index positions. In other words, generate the following`DataFrame`:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","93bf8b5f":"**Exercise 3**: Select the first row of data (the first record) from `reviews`. Hint: from this exercise onwards I strongly recommend using `loc` or `iloc`.","ed357366":"**Exercise 8**: Select wines made in `Italy`. Hint: `reviews.country` equals what?","7216bbdb":"The remaining exercises are visual.","fd10828c":"# Introduction\n\nMost projects requiring selecting specific values from a `DataFrame` or `Series`. You will work on that skill here using the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). \n\n# Relevant Resources\n* **[Quickstart to indexing and selecting data](https:\/\/www.kaggle.com\/residentmario\/indexing-and-selecting-data\/)** \n* [Indexing and Selecting Data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/indexing.html) section of pandas documentation\n* [Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n\n","b38f6051":"**Exercise 7**: Select the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the [reference](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning-reference) for this tutorial section:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. So `0:10` will select entries `0,...,9`. `loc`, meanwhile, indexes inclusively. So `0:10` will select entries `0,...,10`.\n\n> [...]\n\n> ...[consider] when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 999 entries, while `df.loc[0:1000]` return 1000 of them! To get 1000 elements using `iloc`, you will need to go one higher and ask for `df.iloc[0:1001]`.","fc9ff953":"**Exercise 4**: Select the first 10 values from the `description` column in `reviews`. Hint: format your output as a `pandas` `Series`.","d681057a":"# Exercises","5e7e1094":"Look at an overview of your data by running the following line","4c20c950":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","ce48dbdc":"**Exercise 11**: <!--What is the distribution of reviews scores for the first 1000 wines in the dataset?--> Select the `points` column for the first 1000 wines.","61bcc144":"**Exercise 9**: Select wines whose `region_2` is not `NaN`."}}