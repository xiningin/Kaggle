{"cell_type":{"c0152652":"code","fea16452":"code","6f70d1e2":"code","7b3e8136":"code","27d927d0":"code","8c3f6719":"code","9525ef4a":"code","cc53cf0c":"code","552a2a26":"code","b8b701d6":"markdown","e75019b7":"markdown","036a7a9a":"markdown","e328236c":"markdown","908ed906":"markdown","7ea092f0":"markdown","20e4bbc4":"markdown","e6e97460":"markdown","5a974ba0":"markdown","a9251daf":"markdown"},"source":{"c0152652":"import csv\nimport pandas as pd\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\n\n# Reading a CSV file\ndf_sil = pd.read_csv('..\/input\/silver-assets\/silver_assets.csv')\n\n# Clean and Convert Data\ndf_sil = df_sil.dropna(axis=0)\n\n#Convert from Objects to Strings\ndf_sil = df_sil.convert_dtypes()\ndf_sil['Date'] = pd.to_datetime(df_sil['Date'])\n\n\n#Convert Strings to Float\ndf_sil['Open'] = df_sil['Open'].astype(float)\ndf_sil['High'] = df_sil['High'].astype(float)\ndf_sil['Low'] = df_sil['Low'].astype(float)\ndf_sil['Close'] = df_sil['Close'].astype(float)\ndf_sil['Adj Close'] = df_sil['Adj Close'].astype(float)\ndf_sil['Volume'] = df_sil['Volume'].astype(float)\ndf_sil['Year'] = df_sil['Date']\ndf_sil['Year'] = df_sil['Year'].dt.year\n\n\n#Show Data\nprint('First Five Lines of Data')\nprint(f'\\n{df_sil.head()}')\nprint('\\nLast Five Lines of Data')\nprint(f'\\n{df_sil.tail()}')","fea16452":"# Create Pivot Table\npivot_ = df_sil.pivot_table('Close', index=['Year', 'Date'], columns='Asset')\npivot_ = pivot_.dropna()\n\n\n# Get price to Silver and Drop Price Column \nprice_to_silver = pivot_.copy()\n\nprice_to_silver['HZD to Silver']  = price_to_silver['HZD']\/ price_to_silver['Silver']\nprice_to_silver['PSLV to Silver']  = price_to_silver['PSLV']\/ price_to_silver['Silver']\nprice_to_silver['SIL to Silver']  = price_to_silver['SIL']\/ price_to_silver['Silver']\n\nprice_to_silver = price_to_silver.drop(['HZD','SIL', 'PSLV', 'Silver'], axis=1)\nprice_to_silver\n\n\n","6f70d1e2":"price_to_silver_stats = price_to_silver.describe()\n\n\nhzd_mean = price_to_silver_stats['HZD to Silver']\nhzd_mean = hzd_mean.loc['mean']\n\nprice_to_silver_stats\n","7b3e8136":"def get_all_time_stats(asset):\n    stats_list = []\n    for i in price_to_silver_stats:\n        to_silver = price_to_silver_stats[asset]\n    return to_silver\n\nhzd_stats = get_all_time_stats('HZD to Silver')\nsil_stats = get_all_time_stats('SIL to Silver')\npslv_stats = get_all_time_stats('PSLV to Silver')","27d927d0":"def get_year(year):\n    return price_to_silver.filter(regex = year, axis=0)\n\n_2011 = get_year('2011')\n_2012 = get_year('2012')\n_2013 = get_year('2013')\n_2014 = get_year('2014')\n_2015 = get_year('2015')\n_2016 = get_year('2016')\n_2017 = get_year('2017')\n_2018 = get_year('2018')\n_2019 = get_year('2019')\n_2020 = get_year('2020')\n\nyears = (_2011, _2012, _2013, _2014,_2015, _2016, _2017, _2018, _2019, _2020)\nyears_ = (2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)\ndef get_year_stats(asset, row):\n    stats_list = []\n    for i in years:\n        year_stats = i.describe()\n        to_silver = year_stats[asset]\n        stat_years = to_silver.loc[row]\n        stats_list.append(stat_years)\n    return stats_list \n\n# Get Standard Deviation for Each Year for Each Asset\nhzd_std = get_year_stats('HZD to Silver', 'std')\nsil_std = get_year_stats('SIL to Silver', 'std')\npslv_std = get_year_stats('PSLV to Silver','std')\n\nhzd_std = dict(zip(years_,hzd_std))\nsil_std = dict(zip(years_,sil_std))\npslv_std = dict(zip(years_,pslv_std))\n     \nstd_list = [hzd_std, sil_std, pslv_std]\n    \n","8c3f6719":"hzd_mean = get_year_stats('HZD to Silver', 'mean')\nsil_mean= get_year_stats('SIL to Silver', 'mean')\npslv_mean = get_year_stats('PSLV to Silver','mean')\n\n\nhzd_means = (0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107,0.3743848592762107)\nsil_means = (1.898944,1.898944,1.898944,1.898944,1.898944,1.898944,1.898944,1.898944,1.898944,1.898944)\n\nhzd_mean = dict(zip(years_,hzd_mean))\nsil_mean = dict(zip(years_,sil_mean))\npslv_mean = dict(zip(years_,pslv_mean))\nhzd_means = dict(zip(years_,hzd_means))  \nsil_means = dict(zip(years_, sil_means))\n\nc = [hzd_mean, sil_mean, pslv_mean,hzd_means, sil_means] \nb = pd.DataFrame(c, index=['HZD', 'SIL', 'PSLV', 'AVG HZD', 'SIL AVG'])\n\nfig = px.line(b.T)\nfig\n","9525ef4a":"hzd_av","cc53cf0c":"# Create Pivot Table\npivot = pd.pivot_table(df_sil,columns=['Asset'], index=['Date'])\npivot =  pivot.dropna(axis=0)\n\n# Get Asset to Silver Price Ratio\n\n\n# Get Percent Change Data\n\npct_chg = pivot.pct_change()\n\n\n\n\n\n_2020 = set_range('2020-01-03','2020-12-31')\n_2019 = set_range('2019-01-01','2019-12-31')\n_2018 = set_range('2018-01-01','2018-12-31')\n_2017 = set_range('2017-01-01','2017-12-31')\n_2016 = set_range('2016-01-01','2016-12-31')\n_2015 = set_range('2015-01-01','2015-12-31')\n_2014 = set_range('2014-01-01','2014-12-31')\n_2013 = set_range('2013-01-01','2013-12-31')\n_2012 = set_range('2012-01-01','2012-12-31')\n_2011 = set_range('2011-01-01','2011-12-31')\n\nyears = [_2020, _2019, _2018,_2017, _2016, _2015, _2014, _2013, _2012, _2011]\n","552a2a26":"def get_corr(dataframe_list, symbol):\n    corr_list = []\n    \n    for i in dataframe_list:\n        corr_ = i.corr(method='pearson')\n        corr_ = corr_['Silver']\n        corr_ = corr_.loc[symbol]\n        corr_list.append(corr_)\n    return corr_list\n\nhzd_corr = get_corr(years,'HZD')\nsil_corr = get_corr(years, 'SIL')\npslv_corr = get_corr(years, 'PSLV')\n\navg_hzd_corr = (sum(hzd_corr)\/len(hzd_corr))\navg_sil_corr = (sum(sil_corr)\/len(sil_corr))\navg_pslv_corr = (sum(pslv_corr)\/len(pslv_corr))\n\ndf = pd.DataFrame([hzd_corr, sil_corr, pslv_corr], index=['HZD', 'SIL', 'PSLV'], columns=[2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011])\n\ndf = df.T\ndf.describe()\navg_hzd_corr, avg_sil_corr, avg_pslv_corr","b8b701d6":"\n## Annual Price Ratio Avg.","e75019b7":"# Purpose\n\nThe purpose of this excercise is examine the price relationships between:\n\n* Silver\n* Silver Minining Stocks (**SIL**)\n* Silver Income Trusts (**PSLV**)\n* Silver Inverse Funds (**HZD**)\n","036a7a9a":"## Correlations","e328236c":"## All Time Findings\n\nThe above table provides some statistical insight into the data. \n\n### Mean\nThe mean doesn't really provide us with too much information at this stage. It whill however be useful to review when we have the mean for each year tracked.\n\n### Standard Deviation\nThe low standard deviations show that prices are pretty consistent in terms of the relationship to the price of silver. \n\n### Min and Max\nThe range of the min and max for HZD and SIL show that there are cases where the price ratio can vary greatly. ","908ed906":"# Finding Correlations \n\nIn this section we are looking for the price correlation over a full year from 2010 - 2020.\n","7ea092f0":"## Volatility of Each Asset\n\n*Create lists of ","20e4bbc4":"## Price to Silver","e6e97460":"# Set Up\n\n* Get Data\n* Remove Empty\n* Convert Data Types\n* Show Data as Table (DataFrame)","5a974ba0":"## Price to Silver All Time Stats","a9251daf":"## Shaping the Data\n\nBecause of the way the CSV file is set up we need to first use a Pivot Table to shape the data so that it is ready for analysis.\n\n* Define Pivot Table\n* Remove Empty Data\n* Transfer Data to Percent Change\n* Select Date Ranges\n* Select Relevant Column\n"}}