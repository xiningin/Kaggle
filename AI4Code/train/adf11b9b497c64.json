{"cell_type":{"9040590b":"code","5a1f1357":"code","a4b49166":"code","06490706":"code","933a0fa3":"code","e0d58589":"code","99656afc":"code","d476bfed":"code","1b05a969":"code","bbc9043e":"code","9bfc3121":"code","697f84e0":"code","b1137f03":"code","737eba14":"code","e7479f50":"code","6b35bdf3":"markdown","3505698a":"markdown","a15d2017":"markdown","ae0fce4f":"markdown","75e6e597":"markdown","4ee5aa19":"markdown","3924b8fd":"markdown","46850f59":"markdown","c4ccf8b4":"markdown"},"source":{"9040590b":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","5a1f1357":"sonar_data = pd.read_csv(\"..\/input\/sonar-mine-dataset\/sonar data.csv\",header = None)","a4b49166":"sonar_data.head()","06490706":"sonar_data.shape","933a0fa3":"sonar_data.describe()","e0d58589":"sonar_data[60].value_counts()","99656afc":"sonar_data.groupby(60).mean()","d476bfed":"x = sonar_data.drop(columns = 60, axis =1)\ny = sonar_data[60]","1b05a969":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, stratify= y , random_state= 1)","bbc9043e":"print(x.shape, x_train.shape, x_test.shape)\nprint(y.shape, y_train.shape, y_test.shape)","9bfc3121":"model = LogisticRegression()","697f84e0":"model.fit(x_train, y_train)","b1137f03":"# accuracy on test data\nx_train_prediction = model.predict(x_train)\ntraining_data_accuracy = accuracy_score(x_train_prediction , y_train)\ntraining_data_accuracy","737eba14":"# accuracy on train data\nx_test_prediction = model.predict(x_test)\ntesting_data_accuracy = accuracy_score(x_test_prediction , y_test)\ntesting_data_accuracy","e7479f50":"## Making a Predictive System\ninput_data = (0.0335,0.0134,0.0696,0.1180,0.0348,0.1180,0.1948,0.1607,0.3036,0.4372,0.5533,0.5771,0.7022,0.7067,0.7367,0.7391,0.8622,0.9458,0.8782,0.7913,0.5760,0.3061,0.0563,0.0239,0.2554,0.4862,0.5027,0.4402,0.2847,0.1797,0.3560,0.3522,0.3321,0.3112,0.3638,0.0754,0.1834,0.1820,0.1815,0.1593,0.0576,0.0954,0.1086,0.0812,0.0784,0.0487,0.0439,0.0586,0.0370,0.0185,0.0302,0.0244,0.0232,0.0093,0.0159,0.0193,0.0032,0.0377,0.0126,0.0156)\n\n#changin the input_data to a numpy array\n\ninput_data_as_numpy_array = np.asarray(input_data)\n\n# reshape the numpy array as we predicting for one instance\n\ninput_data_reshape = input_data_as_numpy_array.reshape(1,-1)\n\nprediction = model.predict(input_data_reshape)\nprint(prediction)\n\nif (prediction[0]=='R'):\n    print('The object is a Rock.')\nelse:\n    print(\"The object is a Mine.\")","6b35bdf3":"# Thank you !!\nPlease upvote if you liked my work !!","3505698a":"# Data Exploration","a15d2017":"# Model Training","ae0fce4f":"# Importing Dependencies","75e6e597":"# M -> mine\n# R -> Rock","4ee5aa19":"# Example","3924b8fd":"# Load Data","46850f59":"# Training and Test Data","c4ccf8b4":"**Hi there, This notebook is simple and self explanatory. In this notebook I have used Logistic Regression to train model. If any question or suggestion please fill free to comment.**\n\n**Happy Learning  !!**"}}