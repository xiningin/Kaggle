{"cell_type":{"142d43b1":"code","cc2c359a":"code","05bd77fc":"code","666749e7":"code","5b5cb771":"code","e714c914":"code","671ee6cf":"code","74a811a7":"code","3c259d6b":"code","38af5e55":"code","b76ba0d9":"code","27b44af9":"markdown","63067184":"markdown","dceb3350":"markdown","4aa656f7":"markdown","d36512a9":"markdown","f319483f":"markdown","0199c3de":"markdown","29370cac":"markdown","bf49d1f9":"markdown","b639bd75":"markdown","4ee86746":"markdown"},"source":{"142d43b1":"import numpy as np # \u6570\u7ec4\u5e38\u7528\u5e93\nimport pandas as pd # \u8bfb\u5165csv\u5e38\u7528\u5e93\nimport matplotlib.pyplot as plt # \u753b\u56fe\u5e38\u7528\u5e93","cc2c359a":"data_dir = '..\/input\/'\n\ndef load_data(data_dir):\n    train_df = pd.read_csv(data_dir + 'train.csv')\n    test_df = pd.read_csv(data_dir + 'test.csv')\n    print('Train data shape: %s \\n Test data shape: %s' % (train_df.shape, test_df.shape))\n    \n    # dataframe to np.arrays\n    train_X = train_df.values[:, 1:]\n    train_y = train_df.values[:, 0]\n    test_X = test_df.values\n    \n    return train_X, train_y, test_X\n\ntrain_X_origin, train_y_origin, test_X = load_data(data_dir)\n    ","05bd77fc":"idx = 10\nprint('Label: %s' % (train_y_origin[idx]))\nplt.imshow(train_X_origin[idx].reshape(28, 28))\nplt.show()","666749e7":"nrows = 4\nclasses = range(0, 10)\n\nfor i in classes:\n    i_idx = np.nonzero(train_y_origin == i)\n    rand_idx = np.random.choice(i_idx[0], nrows)\n    for j in range(nrows):\n        plt_idx = j * len(classes) + i + 1\n        plt.subplot(nrows, len(classes), plt_idx)\n        plt.imshow(train_X_origin[rand_idx[j]].reshape(28, 28))\n        plt.axis('off')\n        if j == 0:\n            plt.title(i)\nplt.show()","5b5cb771":"from sklearn.model_selection import train_test_split\n\ntrain_X, valid_X, train_y, valid_y = train_test_split(train_X_origin, train_y_origin, \\\n                                                      test_size=0.2, random_state=0)","e714c914":"train_y.shape, valid_y.shape","671ee6cf":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nfrom sklearn.neighbors import KNeighborsClassifier\n\nk = range(1, 10)\naccuracy = []\n\nfor i in k:\n    print('k = %s begin,' % (i))\n    model = KNeighborsClassifier(n_neighbors=i)\n    model.fit(train_X, train_y)\n    pred_y = model.predict(valid_X)\n    accuracy.append(accuracy_score(valid_y, pred_y))\n    print(classification_report(valid_y, pred_y))\n    print(confusion_matrix(valid_y, pred_y))    \n    ","74a811a7":"plt.plot(k, accuracy)\nplt.xlabel('Value of k')\nplt.ylabel('Accuracy Score')","3c259d6b":"k = 1\nmodel = KNeighborsClassifier(n_neighbors=k)\nmodel.fit(train_X_origin, train_y_origin)\npred_y = model.predict(test_X)","38af5e55":"idx = 161\nprint('Predicted label: %s' % (pred_y[idx]))\nplt.imshow(test_X[idx].reshape(28, 28))\nplt.show()","b76ba0d9":"pd.DataFrame({'ImageId': list(range(1, len(pred_y)+1)), 'Label': pred_y}).to_csv(\n    'Digit_Recogniser_Result.csv', index=False, header=True)","27b44af9":"\n\u5c55\u793a\u90e8\u5206\u6570\u636e\u770b\u770b\u56fe\u7247\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002\uff08\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u5df1\u770b\uff09","63067184":"# \u9884\u6d4b\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u9884\u6d4b\u597d\u7684\u6570\u636e\u6253\u5370\u5230\u6587\u4ef6Digit_Recogniser_Result.csv\u91cc\u9762\u3002\n# \u6253\u5370\u7684\u683c\u5f0f\u662f\u5982\u4e0b\n\n* ImageId\tLabel\n* 1\t2\n* 2\t0\n* 3\t9\n* 4\t9","dceb3350":"# \u901a\u8fc7\u8bad\u7ec3\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6700\u597d\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u6253\u5370\u51faAccuracy\u7684\u56fe","4aa656f7":"# \u7528\u56fe\u50cf\u5c55\u793a\u4e00\u4e0b\u6570\u636e\u96c6","d36512a9":"# \u4e5d\u7ae0 KNN \u6559\u7a0b \n\nhttps:\/\/www.kaggle.com\/c\/digit-recognizer","f319483f":"# \u5bfc\u5165\u6570\u636e","0199c3de":"\n\u4e0b\u9762\u8fdb\u884cKNN\u6a21\u578b\u8bad\u7ec3\n\u5982\u679c\u662f\u5927\u6570\u636e\uff0c\u9700\u89811.5\u5c0f\u65f6\u8dd1\u5b8c","29370cac":"# \u9884\u6d4b\u6d4b\u8bd5\u6570\u636e\u96c6\u7684\u7ed3\u679c\n","bf49d1f9":"\u4ece `..\/train.csv` and `..\/test.csv` \u6587\u4ef6\u91cc\u9762\u8bfb\u5165 numpy arrays.\n\n\u5bfc\u5165\u6570\u636e\u540e\u6253\u5370shape\u67e5\u770b\u662f\u5426\u6570\u636e\u662f\u5426\u5b8c\u6574\n\n\u5bfc\u5165\u6570\u636e\u5dee\u4e0d\u591a10\u79d2","b639bd75":"# \u9a8c\u8bc1\u4e00\u4e0b\u7ed3\u679c","4ee86746":"\u628a\u539f\u672c\u7684\u8bad\u7ec3\u6570\u636e\u62c6\u5206\u6210\u4e3a20%\u6d4b\u8bd5\u96c6\uff088400\u4e2a\uff09\uff0c80%\u8bad\u7ec3\u96c6\uff0833600\u4e2a\uff09\n\n\u600e\u4e48\u68372\/8\u5206"}}