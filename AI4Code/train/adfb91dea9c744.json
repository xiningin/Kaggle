{"cell_type":{"432ad44f":"code","3739a317":"code","a3e38af0":"code","e3bb69a1":"code","17b53bb8":"markdown","90583377":"markdown","bfd0d404":"markdown","8870f6b2":"markdown","3d6d8d79":"markdown","afa40884":"markdown","0f7d2b2f":"markdown","6ca91066":"markdown","f64537c3":"markdown","ade2c8b9":"markdown"},"source":{"432ad44f":"# 5. Develop a set of models","3739a317":"# 6. Make an ensemble of models","a3e38af0":"# 7. Submit predictions","e3bb69a1":"# 8. After competition","17b53bb8":"### This pipeline is based on advices of proficient *kagglers*. Write your thoughts on the comments to complete the the list and help other participants.\n.\n.\n![pipeline](https:\/\/lingtra.in\/images\/other\/pipeline.jpg)\n\n\n### Sources:\n\n* Coursera course [How to Win a Data Science Competition: Learn from Top Kagglers](https:\/\/www.coursera.org\/learn\/competitive-data-science) \n* \u039c\u03b1\u03c1\u03b9\u03bf\u03c2 \u039c\u03b9\u03c7\u03b1\u03b7\u03bb\u03b9\u03b4\u03b7\u03c2 aka @kazanova\n* Dmitry Ulyanov aka @dulyanov\n* Mikhail Trofimov aka @mikhailtrofimov\n* Alexander Guschin aka @aguschin\n* Dmitry Altukhov aka @utility\n\n\/\/ _This notebook will be constantly updated. Stay tuned._\n\n### If you like it, please give it an upvote.","90583377":"# 1. Understand the problem","bfd0d404":"### Which kind of data you're dealing with?\n\n* Images\n* Sounds\n* Video\n* Tabular data\n* Optimization problem\n* Texts\n* Time series\n    \n    \n### Hardware needed\n\n* Do you need GPUs?\n* Can you manage to solve the problem with CPU only?\n* How much RAM and Disk space will you need?\n* Maybe rent a server?\n    \n    \n### Software needed\n\n* Choose a proper toolkit\n* Everybody love PyTorch\n* Main instruments are TensorFlow, Keras, PyTorch, sklearn, LightGBM, xgboost\n    \n    \n### What metric will be used during the test?\n\n* Find a similar competitions\n* Explore relevant kernels\n\n\n### Domain knowledge\n\n* Search articles and papers on the internet\n* Maybe you already know experts in this domain?","8870f6b2":"### Do visualizations\n\n* Plot features histogram\n* How much they are different? Scaling is needed? Get rid of some features?\n    * np.log()\n* Plot features versus target histograms\n    * Is there some date\/time variable?\n    * Will help during cross validation (CV) scheme considering\n* Binning\n    * Is distribution standard?","3d6d8d79":"* KFold scheme\n* Holdout scheme\n* LOO (Leave-One-Out) scheme","afa40884":"# Introduction","0f7d2b2f":"# 3. Define cross-validation strategy\n\n> Proper cross validation scheme lets you to be confident about your constructed features and models. It's super important. Sometimes competitions were won only because of the right CV scheme. It should correspond to the public\/test split. You should also consider the possibility of data leakage. Do the leaderboard testing, you can start from the simple KFold validation and see if the next CV scheme improves the score.\n\nThe main rule you should know \u2014 never use data you train on to measure the quality of your model.","6ca91066":"### Depends on the type of the problem\n\n* Often need to use your imagination\n  \n  \n### Image classification\n\n* Augmentations (scaling, rotation, mirroring, shifting)\n* Use Albumentation package\n* Convolutional neural networks (CNN)\n  \n  \n### Sound classification\n\n* Fourier\n* Mel-frequency cepstral coefficients (MFCCs)\n* Specgrams\n  \n  \n### Text classification\n\n* TF-IDF (term frequency - inverse document frequency)\n* SVD (singular value decomposition)\n* Stemming\n* Spell checking\n* Stop words removal\n* N-grams\n\n\n### TimeSeries\n\n  * Lags\n  * Weighted averaging\n  * Exponential smoothing\n  \n\n### Categorical\n\n* Target encoding\n* Frequency encoding\n* One-hot encoding\n* Ordinal encoding\n* Label encoding\n    \n    \n### Numerical\n\n* Scaling\n* Binning\n* Derivatives\n* Outlier removals\n* Dimensionality reduction\n       \n    \n### Recommenders\n\n* Features on transactional history\n* Item popularity\n* Frequency of purchase\n    \n\n### Feature interactions\n\n* Multiplications\n* Divisions\n* Group by\n* Concatenations\n    \n    \n### Process can be automated","f64537c3":"# 2. Do exploratory analysis","ade2c8b9":"# 4. Feature engineering"}}