{"cell_type":{"df92a324":"code","76b324ef":"code","3aef5ef0":"code","42ff6612":"code","d217577b":"code","b84ef694":"code","7b452d9f":"code","598bd026":"code","ad5144cd":"code","dc60f789":"code","efb653c0":"code","140d8619":"code","b1164261":"code","4a58129e":"code","692578e9":"code","f7091606":"code","42669362":"code","134c79c7":"code","5c2a4115":"code","cafa54c0":"code","5585d7dd":"code","e919bd18":"code","b8f5a805":"code","8b2015cf":"code","63671318":"code","ee823c91":"code","0049773b":"code","bc315e70":"code","1f005c0c":"code","2759fe7f":"code","6e30233e":"code","b658fb15":"code","bdfca2a6":"code","a5f6b0c6":"code","06f097c0":"code","49f5ee48":"code","9b1b9993":"code","6130fabc":"code","223a3e55":"code","57061374":"code","25e31a7b":"code","b7a78d9d":"code","ca6ffc69":"code","e28cdec7":"code","b1b9612d":"markdown","1eae5e24":"markdown","d85a19fa":"markdown","fedee009":"markdown","4938f31a":"markdown","2718a436":"markdown","7c225e13":"markdown","4001781b":"markdown","f4147ef2":"markdown","6df05c19":"markdown","cf24e8c5":"markdown"},"source":{"df92a324":"# The Iris Setosa\nfrom IPython.display import Image\nurl = 'http:\/\/upload.wikimedia.org\/wikipedia\/commons\/5\/56\/Kosaciec_szczecinkowaty_Iris_setosa.jpg'\nImage(url,width=300, height=300)","76b324ef":"# The Iris Versicolor\nfrom IPython.display import Image\nurl = 'http:\/\/upload.wikimedia.org\/wikipedia\/commons\/4\/41\/Iris_versicolor_3.jpg'\nImage(url,width=300, height=300)","3aef5ef0":"# The Iris Virginica\nfrom IPython.display import Image\nurl = 'http:\/\/upload.wikimedia.org\/wikipedia\/commons\/9\/9f\/Iris_virginica.jpg'\nImage(url,width=300, height=300)","42ff6612":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme(style=\"whitegrid\")\nsns.set_context('poster')\nfrom sklearn.datasets import load_iris\niris = load_iris()\ndir(iris)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d217577b":"df = pd.read_csv(\"\/kaggle\/input\/iris-flower-dataset\/IRIS.csv\")\ndf","b84ef694":"df.shape","7b452d9f":"df_setosa=df.loc[df['species']=='Iris-setosa']\ndf_virginica=df.loc[df['species']=='Iris-virginica']\ndf_versicolor=df.loc[df['species']=='Iris-versicolor']\n\nplt.plot(df_setosa['sepal_length'],np.zeros_like(df_setosa['sepal_length']),'o')\nplt.plot(df_virginica['sepal_length'],np.zeros_like(df_virginica['sepal_length']), 'o')\nplt.plot(df_versicolor['sepal_length'],np.zeros_like(df_versicolor['sepal_length']),'o') \nplt.xlabel('Sepal length')\nplt.show()","598bd026":"sns.histplot(data=df_setosa, x=\"sepal_length\")","ad5144cd":"sns.histplot(data=df_virginica, x=\"sepal_length\")","dc60f789":"sns.histplot(data=df_versicolor, x=\"sepal_length\")","efb653c0":"sns.FacetGrid(df,hue='species',height=5).map(plt.scatter,'petal_length','sepal_width').add_legend()\nplt.show()","140d8619":"sns.pairplot(df,hue='species',height=3)","b1164261":"import pandas as pd\ndf = pd.DataFrame(iris.data, columns=iris.feature_names)\ndf.head()","4a58129e":"df['target'] = iris.target\ndf.head()","692578e9":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df.drop(['target'],axis='columns'),iris.target,test_size=0.2)","f7091606":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)","42669362":"model.score(X_test,y_test)","134c79c7":"model = RandomForestClassifier(n_estimators=40)\nmodel.fit(X_train, y_train)\nmodel.score(X_test,y_test)","5c2a4115":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler","cafa54c0":"df = pd.DataFrame(iris.data, columns=iris.feature_names)\ndf.head()","5585d7dd":"df.drop(['sepal length (cm)','sepal width (cm)'],axis='columns',inplace=True)\ndf.head()","e919bd18":"scaler = MinMaxScaler()\n\n#scaler.fit(df[['petal length (cm)']])\ndf['petal length (cm)'] = scaler.fit_transform(df[['petal length (cm)']])\n\nscaler.fit(df[['petal width (cm)']])\ndf['petal width (cm)'] = scaler.transform(df[['petal width (cm)']])\ndf.head()","b8f5a805":"\nplt.scatter(df['petal length (cm)'],df['petal width (cm)'])","8b2015cf":"km = KMeans(n_clusters=3)\ny_predicted = km.fit_predict(df[['petal length (cm)','petal width (cm)']])\ny_predicted","63671318":"df['cluster']=y_predicted\ndf.head()","ee823c91":"sse = []\nk_rng = range(1,10)\nfor k in k_rng:\n    km_hypertuning = KMeans(n_clusters=k)\n    km_hypertuning.fit(df[['petal length (cm)','petal width (cm)']])\n    sse.append(km_hypertuning.inertia_)","0049773b":"plt.xlabel('K')\nplt.ylabel('Sum of squared error')\nplt.plot(k_rng,sse)","bc315e70":"df1 = df[df.cluster==0]\ndf2 = df[df.cluster==1]\ndf3 = df[df.cluster==2]\nplt.scatter(df1['petal length (cm)'],df1['petal width (cm)'],color='green')\nplt.scatter(df2['petal length (cm)'],df2['petal width (cm)'],color='red')\nplt.scatter(df3['petal length (cm)'],df3['petal width (cm)'],color='black')\nplt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')\nplt.legend()","1f005c0c":"km.cluster_centers_","2759fe7f":"from sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression()","6e30233e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test =train_test_split(iris.data,iris.target,test_size=0.2)\nmodel.fit(X_train,y_train)","b658fb15":"model.score(X_test, y_test)","bdfca2a6":"model.predict(iris.data[0:5])","a5f6b0c6":"iris.target[0:5]","06f097c0":"iris","49f5ee48":"y_predicted=model.predict(X_test)","9b1b9993":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_predicted)\ncm","6130fabc":"import seaborn as sn\nplt.figure(figsize = (10,7))\nsn.heatmap(cm, annot=True)\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","223a3e55":"from sklearn.svm import SVC","57061374":"svc_model = SVC()\nsvc_model.fit(X_train,y_train)","25e31a7b":"predictions = svc_model.predict(X_test)\n","b7a78d9d":"from sklearn.metrics import classification_report,confusion_matrix","ca6ffc69":"print(confusion_matrix(y_test,predictions))","e28cdec7":"print(classification_report(y_test,predictions))","b1b9612d":"# K-Means Clustering","1eae5e24":"# Support Vector Machine Classifier\n**Call the SVC() model from sklearn and fit the model to the training data**\n","d85a19fa":"## Here's a picture of the three different Iris types:","fedee009":"# Confusion Matrix","4938f31a":"# Random Forest Classifier","2718a436":"# Multivariate Analysis","7c225e13":"![iris](https:\/\/images.unsplash.com\/photo-1611427396096-660d74e1c318?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80)","4001781b":"# IRIS Flower Dataset Analysis","f4147ef2":"# Bivariate Analysis","6df05c19":"# Univariate Analysis","cf24e8c5":"# Logistic Regresion"}}