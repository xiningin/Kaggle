{"cell_type":{"e17e063a":"code","53f5f85e":"code","448fe93f":"code","66ecf297":"code","23a51b43":"code","2ae9aefd":"code","e823ba04":"code","5cfb2b06":"code","5d7387d3":"code","dae5e33f":"code","cec50f5b":"code","a1105eb6":"code","faa18f57":"code","6a955460":"code","604d8f17":"code","78d27102":"code","2b436dce":"code","ad7dccc7":"code","40410666":"code","4900b946":"code","88f85788":"code","0913f10a":"code","401f1b44":"code","7f0d2dff":"code","8da237d4":"markdown","189f05aa":"markdown","f7fd6bb5":"markdown","9d7aaeb1":"markdown","f33b02b0":"markdown","0603f274":"markdown","18238066":"markdown","ddc0560a":"markdown","1b229370":"markdown","6b86aaf0":"markdown","320068b5":"markdown","bde138ad":"markdown","fda12a20":"markdown","fe51c3f8":"markdown","9846daa1":"markdown","2ad6f154":"markdown","8383ca9b":"markdown","4897365c":"markdown","c234e422":"markdown","7a875aaa":"markdown","eecee3a1":"markdown","59372d9b":"markdown","c7f1a7fe":"markdown"},"source":{"e17e063a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53f5f85e":"# Importing related libaries\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport seaborn as sns","448fe93f":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","66ecf297":"#Show first five row of data\ndf.head()","23a51b43":"# Information about data\ndf.info()","2ae9aefd":"df.isnull().sum()","e823ba04":"px.pie(df,df['Genre'])","5cfb2b06":"#User rating \ng = sns.FacetGrid(df,col = 'Genre')\ng.map(sns.distplot,'User Rating',bins = 25)\ng.add_legend()","5d7387d3":"#Price\ng = sns.FacetGrid(df,col = 'Genre')\ng.map(sns.distplot,'Price',bins = 25)\ng.add_legend()","dae5e33f":"#Reviews\ng = sns.FacetGrid(df,col = 'Genre')\ng.map(sns.distplot,'Reviews',bins = 25)\nplt.show()","cec50f5b":"df1 = df[df['Genre']=='Fiction']\ndf2 = df[df['Genre']=='Non Fiction']\n\nrdf1 = df1['User Rating'].value_counts().reset_index()\nrdf2 = df2['User Rating'].value_counts().reset_index()\n\ntr1 = go.Bar(x = rdf1['index'],\n             y = rdf1['User Rating'],\n             name = 'Fiction',\n             marker = dict(color = 'LightSeaGreen')\n            \n            )\n\ntr2 = go.Bar(x = rdf2['index'],\n             y = rdf2['User Rating'],\n             name = 'Non Fiction',\n             marker = dict(color = 'RoyalBlue')\n            \n            )\n\ndata = [tr1,tr2]\nlayout = go.Layout(title = \"Fiction & Non Fiction\",\n                   title_x = 0.5,\n                   title_font = dict(size = 16, color = 'RoyalBlue'),\n                   xaxis = dict(title = 'Genre'),\n                   yaxis = dict(title = 'User Rating'),\n                   template = 'plotly_white'\n                  \n                  )\nfig = go.Figure(data = data, layout = layout)\nfig.show()","a1105eb6":"df1 = df[df['Genre']=='Fiction']\ndf2 = df[df['Genre']=='Non Fiction']\n\nrdf1 = df1['Year'].value_counts().reset_index()\nrdf2 = df2['Year'].value_counts().reset_index()\n\ntr1 = go.Bar(x = rdf1['index'],\n             y = rdf1['Year'],\n             name = 'Fiction',\n             marker = dict(color = 'LightSeaGreen')\n            \n            )\n\ntr2 = go.Bar(x = rdf2['index'],\n             y = rdf2['Year'],\n             name = 'Non Fiction',\n             marker = dict(color = 'RoyalBlue')\n            \n            )\n\ndata = [tr1,tr2]\nlayout = go.Layout(title = 'The number of Non Fiction and Fiction books by years',\n                   title_x = 0.5,\n                   title_font = dict(size = 16, color = 'RoyalBlue'),\n                   xaxis = dict(title = 'Year'),\n                   yaxis = dict(title = 'Count'),\n                   template = 'plotly_white'\n                  \n                  )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","faa18f57":"df1 = df[df['Genre']=='Fiction']\ndf2 = df[df['Genre']=='Non Fiction']\n\nrdf1 = df1.groupby(\"Year\").mean().reset_index()\nrdf2 = df2.groupby(\"Year\").mean().reset_index()\n\ntr1 = go.Scatter(x = rdf1['Year'],\n                 y = rdf1['User Rating'],\n                 name = 'Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'LightSeaGreen',line = dict(color = 'AliceBlue',width = 1.5))\n                \n                )\n\ntr2 = go.Scatter(x = rdf2['Year'],\n                 y = rdf2['User Rating'],\n                 name = 'Non Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'RoyalBlue', line = dict(color = 'AliceBlue',width = 1.5))\n                \n            )\ndata = [tr1,tr2]\nlayout = go.Layout(title = 'Average User Rating over the years',\n                   title_x = 0.5,\n                   title_font = dict(size = 16, color = 'RoyalBlue'),\n                   xaxis = dict(title = 'Year'),\n                   yaxis = dict(title = 'User Rating'),\n                   template = 'plotly_white'\n                  \n                  )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","6a955460":"df1 = df[df['Genre']=='Fiction']\ndf2 = df[df['Genre']=='Non Fiction']\n\nrdf1 = df1.groupby(\"Year\").mean().reset_index()\nrdf2 = df2.groupby(\"Year\").mean().reset_index()\n\ntr1 = go.Scatter(x = rdf1['Year'],\n                 y = rdf1['Reviews'],\n                 name = 'Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'LightSeaGreen',line = dict(color = 'AliceBlue',width = 1.5))\n                \n                )\n\ntr2 = go.Scatter(x = rdf2['Year'],\n                 y = rdf2['Reviews'],\n                 name = 'Non Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'RoyalBlue', line = dict(color = 'AliceBlue',width = 1.5))\n                \n            )\ndata = [tr1,tr2]\nlayout = go.Layout(title = 'Average Reviews over the years',\n                   title_x = 0.5,\n                   title_font = dict(size = 16, color = 'RoyalBlue'),\n                   xaxis = dict(title = 'Year'),\n                   yaxis = dict(title = 'Reviews'),\n                   template = 'plotly_white'\n                  \n                  )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","604d8f17":"df1 = df[df['Genre']=='Fiction']\ndf2 = df[df['Genre']=='Non Fiction']\n\nrdf1 = df1.groupby(\"Year\").mean().reset_index()\nrdf2 = df2.groupby(\"Year\").mean().reset_index()\n\ntr1 = go.Scatter(x = rdf1['Year'],\n                 y = rdf1['Price'],\n                 name = 'Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'LightSeaGreen',line = dict(color = 'AliceBlue',width = 1.5))\n                \n                )\n\ntr2 = go.Scatter(x = rdf2['Year'],\n                 y = rdf2['Price'],\n                 name = 'Non Fiction',\n                 mode = 'lines+markers',\n                 marker = dict(color = 'RoyalBlue', line = dict(color = 'AliceBlue',width = 1.5))\n                \n            )\ndata = [tr1,tr2]\nlayout = go.Layout(title = 'Average Price over the years',\n                   title_x = 0.5,\n                   title_font = dict(size = 16, color = 'RoyalBlue'),\n                   xaxis = dict(title = 'Year'),\n                   yaxis = dict(title = 'Price'),\n                   template = 'plotly_white'\n                  \n                  )\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","78d27102":"df1 =df['Author'].value_counts().reset_index().head(10)\nsns.set(font_scale = 1.5)\nplt.figure(figsize = [10,7])\nsns.barplot(x= df1['Author'], y = df1['index'],palette = 'GnBu')\nplt.title(\"Top 10 Authors\")\nplt.xlabel(\"Count\")\nplt.ylabel(\"Author's Name\")","2b436dce":"df1 = df.groupby(\"Author\")['User Rating'].sum().sort_values(ascending = False).reset_index().head(10)\n\nfig = px.bar(df1, y = 'User Rating', x = 'Author', color = 'Author')\nfig.update_layout(title = 'Top 10 Best Authors with the total values of User Rating',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'),\n                  xaxis = dict(title = 'Rating'),\n                  yaxis = dict(title = 'Author')\n                 \n                 \n                 )\nfig.show()","ad7dccc7":"df1 = df.groupby(\"Author\")['User Rating'].mean().sort_values(ascending = False).reset_index()\n\ndf1 = df1[df1['User Rating']== 4.9]\ndf1","40410666":"df1 = df.groupby('Author').mean().sort_values('Reviews',ascending = False).reset_index().head(10)\nfig = px.scatter(df1,\n                 x = 'User Rating',\n                 y = 'Reviews',\n                 color = 'Author')\n\nfig.update_traces(marker = dict(size = 25,\n                                line = dict(color = 'rgb(0, 0, 0)',width = 1.5)),\n                  selector = dict(mode = 'markers')) \n\nfig.update_layout(title = 'Top 10 Authors with the Highest Average Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\nfig.show()","4900b946":"df1 = df.groupby(['Author','Name']).mean().sort_values('Price',ascending = False).reset_index().head(10)\nfig = px.scatter(df1,\n                 x = 'User Rating',\n                 y = 'Price',\n                 color = 'Author',\n                 hover_data = ['Name']\n                \n                )\n\nfig.update_traces(marker = dict(size = 20,\n                                line = dict(color = 'rgb(0, 0, 0)', width = 1.5)),\n                  selector = dict(mode = 'markers'))\n\nfig.update_layout(title = 'Top 10 Authors with the Highest Average Price',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'))\n\nfig.show()","88f85788":"df1 = df.sort_values(by=['User Rating'],ascending = False).head(30)\n\nfig = px.bar(df1, x = 'Name', y = 'User Rating',color = 'Genre',\n            \n            )\n\nfig.update_layout(title = 'Top 30 books with the Highest User Rating',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'),\n                  xaxis = dict(title = 'book', tickangle = 45),\n                  yaxis = dict(title = 'Rating'))\n\n\nfig.show()","0913f10a":"df1 = df.sort_values(by=['Reviews'],ascending = False).head(30)\n\nfig = px.bar(df1, x = 'Name', y = 'Reviews',color = 'Genre',\n             hover_data = ['Price']\n            \n            )\n\nfig.update_layout(title = 'Top 30 books with the Highest Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue'),\n                  xaxis = dict(title = 'book', tickangle = 45),\n                  yaxis = dict(title = 'Reviews'))\n\n\nfig.show()","401f1b44":"# The Highest User rating(4.9) Books\ndf1 = df.groupby(\"Name\")['User Rating'].mean().sort_values(ascending = False).reset_index()\n\ndf1 = df1[df1['User Rating']== 4.9]\ndf1","7f0d2dff":"fig = px.scatter(df,\n                 x = 'Reviews',\n                 y = 'Price',\n                 color = 'User Rating')\n\nfig.update_traces(marker = dict(size = 12,\n                                line = dict(color = 'rgb(0, 0, 0)',width = 1.5)),\n                  selector = dict(mode = 'markers')) \nfig.show()","8da237d4":"* **Fiction books - The value(4.8) of user rating is the most than others.**\n* **Non Fiction books - The values(4.6 and 4.7) are the most than others.**","189f05aa":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","f7fd6bb5":"* **Fiction books is significantly increased in 2014 and then sharply decreased in 2015.**\n* **Non fiction books is significantly descreased in 2014, and then sharply increased in 2015.**\n* **The number of Non fiction books is more than Fiction books every year, except 2014.**\n* **Both Fiction and Non fiction books are inconsistent on their counts by years.**","9d7aaeb1":"* **Top Authors with the highest Reviews has the highest value of user rating, 4.8.**\n* **Top 3 Authors with the highest Average Reviews are Delia Owens,Paula Hawkins and Michelle Obama.**","f33b02b0":"* **The number of Fiction books is more than Non fiction books.**\n* **Several books have the most reviews from the readers.**\n* **Only two books from Non fiction genre in the top 30 highly rated book list.**\n* **The maximum price for the books in the top 30 list is $39.**\n","0603f274":"* **Fiction books is higher than Non Fiction books from 2009 to 2017, but Fiction books is lower than in 2018.**\n* **Fiction books is sharply descreased in 2016, and then sharply increased in 2019.**\n","18238066":"**Top 3 Authors are Jeff Kinney,Gary Chapman and Suzanne Collins.**","ddc0560a":"# **<font color = DarkSlateBlue>Thank you for reading!<\/font>**","1b229370":"**The reviews of most of books is between 0 and 30k and the price is between 0 and 20.**","6b86aaf0":"# **<font color = DarkSlateBlue>Summary<\/font>**","320068b5":"* **The number of Fiction books is more than Non fiction books.**\n* **Only three books from Non fiction genre in the top 30 highly rated book list.**\n* **The value of user rating in the top 30 highly rated books is 4.9.**","bde138ad":"* **Fiction books is sharply descreased in 2012, but then sharply increased from 2012.**\n* **Non fiction books is descreased in 2017, but then increased from 2018.**\n","fda12a20":"# **<font color = DarkSlateBlue>Importing data<\/font>**","fe51c3f8":"**There are no missing values.**","9846daa1":"**The book with the price of $105 is from American Psychiatric Association and the user rating of this book is 4.5, which is lower than some books.**","2ad6f154":"**The number of Non fiction books is more than Fiction.**","8383ca9b":"**Top 3 Authors are Jeff Kinney,Rick Riordan and Gary Chapman.**","4897365c":"**All 11 Authors have the highest value of user rating, 4.9.**","c234e422":"* **The number of Non fiction books is more than Fiction.**\n* **The number of Non fiction books is more than fiction books every year, except 2014.**\n* **The number of Fiction books is more than Non fiction books in the top 30 books with higest user rating and reviews.**\n* **The reviews of most of books is between 0 and 30k and the price is between 0 to 20.**","7a875aaa":"\n# **<font color = DarkSlateBlue>Check the null values<\/font>**","eecee3a1":"# **<font color = DarkSlateBlue>Data analysis<\/font>**","59372d9b":"[Link to my Kaggle](http:\/\/www.kaggle.com\/carriech)","c7f1a7fe":"* **Non fiction books is higher than Fiction books from 2010 to 2019.**\n* **Non fiction books is sharply descreased in 2015, and then sharply increased in 2016.**"}}