{"cell_type":{"7f0c4d63":"code","1654463c":"code","bdf5a027":"code","cddfbba4":"code","6cab1859":"code","55120c69":"code","9c498337":"code","2838e03c":"code","ffafa561":"code","c4b9388e":"code","b41cedfc":"code","e635538b":"code","1b48c0e1":"code","d9c15109":"code","0877d019":"code","b4dbcdfd":"code","74f2a271":"code","11766336":"code","95d03d20":"code","aa2713b4":"code","284a0850":"code","18687381":"code","455dec00":"code","91fc927a":"code","80a12d79":"markdown","39bd8afc":"markdown","c729701f":"markdown","ce3f581b":"markdown","aa57631d":"markdown","a05b935f":"markdown"},"source":{"7f0c4d63":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1654463c":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nfrom wordcloud import WordCloud\nimport re","bdf5a027":"Data=pd.read_csv('\/kaggle\/input\/golden-globe-awards\/golden_globe_awards.csv')\nData.info()","cddfbba4":"# checking why film column has some missing data and collecting other informations\nData.head(20)","6cab1859":"Data.describe()","55120c69":"Data.columns","9c498337":"# to rename the columns to a style that I find more aesthetic and readable\nData.rename(columns={'year_film':'YearFilm','year_award':'YearAward', 'ceremony':'Ceremony', 'category':'Category',\n                     'nominee':'Nominee', 'film':'Film','win':'Win'}, inplace=True)","2838e03c":"# as I said before, the firsts rows only show the winners, so we want to check when False start occuring \nData.loc[:,('YearAward','Win')].loc[Data.Win==False].head(10)","ffafa561":"# how many differents categories do we have?\nData.Category.unique()","c4b9388e":"#as we have a lot of categories, some with many similarities, I will group them\n#this function will be used to group them in three categories\ndef ActorActressDirector(x):\n    if 'Actor' in x:\n        return 'Actor\/Actress'\n    elif 'Actress' in x:\n        return 'Actor\/Actress'\n    elif 'New Star Of The Year' in x:\n        return 'Actor\/Actress'\n    elif 'Director' in x:\n        return 'Director'\n    else:\n        return 'Others'","b41cedfc":"Data['GroupedCategory']=Data.Category.apply(ActorActressDirector)","e635538b":"#My original idea was to bring the top 10, but we have to take care if there is someone tied in the last places\n#so I'll bring the 15 firsts to check this\nTopNominees=Data.Nominee.value_counts().reset_index()\nTopNominees.head(15)","1b48c0e1":"#as we saw above, there are five persons tied in total nominees around the 10th place, so I'll \n#change to a top 12 to keep them\nTop12Nominees=TopNominees.head(12)\nplt.figure(figsize=(12,5))\nplt.title('Top 12 Total Nominees')\nsns.barplot(y='index',x='Nominee', data=Top12Nominees, palette='summer')\nplt.xlabel('Count')\nplt.ylabel('Nominee')","d9c15109":"#now I want to show the top 5 winners\nTopWinners=Data.loc[Data.Win==True].Nominee.value_counts().reset_index()\nTopWinners.head(10)","0877d019":"#the same happens here, so I'll change to a top 7\nTop7Winners=TopWinners.head(7)\nplt.figure(figsize=(12,4))\nplt.title('Top 7 Winners')\nsns.barplot(y='index', x='Nominee', data=Top7Winners, palette='summer')\nplt.xlabel('Count')\nplt.ylabel('Nominee')","b4dbcdfd":"#films with 7 or more nominations in the same year\nFilms7=pd.DataFrame(Data.groupby('YearAward').Film.value_counts())\nFilms7.rename(columns={'Film':'Count'},inplace=True)\nFilms7=Films7.reset_index()\nFilms7=Films7.query('Count >= 7')\nFilms7.sort_values(by='Count',ascending=False,inplace=True)","74f2a271":"plt.figure(figsize=(12,7))\nplt.title('Films with 7 or more nominations in the same year')\nsns.barplot(y='Film',x='Count',data=Films7, palette='summer')","11766336":"#let's see if we have somebody nominated for Actor\/Actress and Director\nDirector=set(Data.loc[Data.GroupedCategory=='Director'].Nominee.unique())\nActorActress=set(Data.loc[Data.GroupedCategory=='Actor\/Actress'].Nominee.unique())\nBoth=Director.intersection(ActorActress)\nBoth","95d03d20":"len(Both)","aa2713b4":"for name in Both:\n    Names=Data.loc[Data.Nominee == name].YearAward.reset_index()\n    print(name,end=' ')\n    print(Names.iloc[0,1],end='-')\n    print(Names.iloc[-1,1])\n    print()","284a0850":"# starting a wordcloud\nNewList=list(Data.Nominee.loc[Data.GroupedCategory=='Actor\/Actress'])","18687381":"NomineeCloud=''\nfor name in NewList:\n    name=re.sub('\\s','',name)\n    NomineeCloud+=name+' '","455dec00":"wordcloud = WordCloud(width = 1000, height = 800, \n                background_color ='white').generate(NomineeCloud)","91fc927a":"plt.figure(figsize=(14,12))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","80a12d79":"### Transforming some data and visualizing","39bd8afc":"Appears that when the nominee is the film itself, the column film is empty. I Think there is no problem in that\n\nWe also saw that all the data in win columns is True, we gonna have to check this later","c729701f":"There are 17 persons that were nominated to Actor\/Actress and Director categories in Golden Globe Awards history\n\nLet's see the first and last year of their nominations","ce3f581b":"### Importing dataset and seeing general information","aa57631d":"### **Importing the libraries**","a05b935f":"### Hello everybody! This is my first EDA and I choose this simple dataset about something I like!\n### Hope you enjoy it, and if you have any tip, please let me know! Thank you!"}}