{"cell_type":{"6611f566":"code","a9c1079e":"code","a8cfbd7d":"code","2f7cbcf3":"code","c335c748":"code","36326031":"code","a6393188":"code","d406689b":"code","d7005f93":"code","2b6173cf":"code","86551d60":"code","8e9a0fbf":"code","d5979f6e":"code","f56f2895":"code","b8c140c8":"code","6257f67a":"markdown","15df2e33":"markdown","90f1fe11":"markdown"},"source":{"6611f566":"pip install pycountry_convert","a9c1079e":"#Libraries to import\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nimport requests\nimport sys\nfrom itertools import chain\nimport pycountry\nimport pycountry_convert as pc\nimport plotly_express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn import metrics\nimport xgboost as xgb\nfrom xgboost import XGBRegressor\nfrom xgboost import plot_importance, plot_tree\nfrom sklearn.model_selection import GridSearchCV","a8cfbd7d":"train = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/train.csv') \ntest= pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/test.csv')","2f7cbcf3":"train_india=train[train[\"Country_Region\"]==\"India\"]\ntrain_india.info()\ntrain_india.Province_State.fillna('NaN',inplace=True)\nplot=train_india.groupby([\"Date\",\"Country_Region\",\"Province_State\"],as_index=False)['ConfirmedCases','Fatalities'].sum()","c335c748":"tr_df=plot.query(\"Country_Region=='India'\")\n","36326031":"tr_df.reset_index(inplace=True)","a6393188":"tr_df","d406689b":"df_ind_cases = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv')\ndf_ind_cases.dropna(how='all',inplace=True)\ndf_ind_cases['DateTime'] = pd.to_datetime(df_ind_cases['Date'], format = '%d\/%m\/%y')\ndf_ind_cases.columns\ndf_ind_cases['State\/UnionTerritory']\n","d7005f93":"def change_state_name(state):\n    if state == 'Odisha':\n        return 'Orissa'\n    elif state == 'Telengana':\n        return 'Telangana'\n    return state\ndf_ind_cases['State\/UnionTerritory'] = df_ind_cases.apply(lambda x: change_state_name(x['State\/UnionTerritory']), axis=1)","2b6173cf":"Ts_Covid=df_ind_cases[df_ind_cases['State\/UnionTerritory']=='Telangana']","86551d60":"Ts_Covid","8e9a0fbf":"Ts_new = Ts_Covid.drop(columns=[\"Sno\",\"Date\",\"Time\",\"State\/UnionTerritory\",\"ConfirmedIndianNational\",\"ConfirmedForeignNational\"])","d5979f6e":"Ts_new.sort_values(\"Confirmed\",inplace=True,ascending=False)\nTs_new.reset_index(drop=True,inplace=True)\nTs_new.style.background_gradient(cmap=\"viridis\")","f56f2895":"r = requests.get(url='https:\/\/raw.githubusercontent.com\/geohacker\/india\/master\/state\/india_telengana.geojson')\ngeojson = r.json()","b8c140c8":"fig = px.choropleth(df_ind_cases, geojson=geojson, locations=\"State\/UnionTerritory\",color=\"Confirmed\", featureidkey=\"properties.NAME_1\",hover_data=[\"Cured\",\"Deaths\"], color_continuous_scale=px.colors.sequential.Viridis,)\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600,margin={\"r\":0,\"t\":30,\"l\":0,\"b\":30})\nfig.show()","6257f67a":"# <a id='exp'>Lets explore the Data<\/a>","15df2e33":"#  **Telangana State Covid Analysis **","90f1fe11":"For a more detailed analysis on India refer to [India vs Coronavirus \ud83e\udda0](https:\/\/www.kaggle.com\/anshuls235\/uncovering-covid19-india)"}}