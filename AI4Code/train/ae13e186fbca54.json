{"cell_type":{"42ee2aff":"code","97e1e9a9":"code","5cb53d13":"code","195d9b61":"code","6342b540":"code","4f41c2f9":"code","de9b86e5":"code","1932ae1a":"markdown","0a3cadf0":"markdown","681a2481":"markdown","57df75f9":"markdown"},"source":{"42ee2aff":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nfrom tqdm import tqdm_notebook as tqdm\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\n\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- setup ---\npd.set_option('max_columns', 50)","97e1e9a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5cb53d13":"%%time\ndatadir = Path('\/kaggle\/input\/bengaliai-cv19')\n\n# Read in the data CSV files\ntrain = pd.read_csv(datadir\/'train.csv')\ntest = pd.read_csv(datadir\/'test.csv')\nsample_submission = pd.read_csv(datadir\/'sample_submission.csv')\nclass_map = pd.read_csv(datadir\/'class_map.csv')","195d9b61":"%%time\ntrain_image_df0 = pd.read_parquet(datadir\/'train_image_data_0.parquet')","6342b540":"%%time\nfeatherdir = Path('\/kaggle\/input\/bengaliaicv19feather')\n\ntrain_image_df0 = pd.read_feather(featherdir\/'train_image_data_0.feather')\ntrain_image_df1 = pd.read_feather(featherdir\/'train_image_data_1.feather')\ntrain_image_df2 = pd.read_feather(featherdir\/'train_image_data_2.feather')\ntrain_image_df3 = pd.read_feather(featherdir\/'train_image_data_3.feather')","4f41c2f9":"%%time\n# Please change this to `True` when actual submission\nsubmission = False\n\nif submission:\n    test_image_df0 = pd.read_parquet(datadir\/'test_image_data_0.parquet')\n    test_image_df1 = pd.read_parquet(datadir\/'test_image_data_1.parquet')\n    test_image_df2 = pd.read_parquet(datadir\/'test_image_data_2.parquet')\n    test_image_df3 = pd.read_parquet(datadir\/'test_image_data_3.parquet')\nelse:\n    test_image_df0 = pd.read_feather(featherdir\/'test_image_data_0.feather')\n    test_image_df1 = pd.read_feather(featherdir\/'test_image_data_1.feather')\n    test_image_df2 = pd.read_feather(featherdir\/'test_image_data_2.feather')\n    test_image_df3 = pd.read_feather(featherdir\/'test_image_data_3.feather')","de9b86e5":"train_image_df0.head()","1932ae1a":"# Feather format for super fast data loading\n\nOriginal `panquet` format takes time to load data. Here I converted them and uploaded with `feather` format.<br\/>\nIt is about **30 times faster**.\n\nYou can see dataset here: [https:\/\/www.kaggle.com\/corochann\/bengaliaicv19feather](https:\/\/www.kaggle.com\/corochann\/bengaliaicv19feather)<br\/>\nPlease upvote both dataset and this kernel if you like it! :)\n\nThis kernel describes how to load this dataset.","0a3cadf0":"For test files, please be careful that this is **code competition** and **test data will change in the actual submission**. <br\/>\nSo I guess we need to load from original `parquet` format to load private test data when submission.","681a2481":"To load `feather` format, we just need to change `read_parquet` to `read_feather`.\n\nOriginal `parquet` format takes about 60 sec to load 1 data, while `feather` format takes about **2 sec to load 1 data!!!**","57df75f9":"# How to add dataset\n\nWhen you write kernel, click \"+ Add Data\" botton on right top.<br\/>\nThen inside window pop-up, you can see \"Search Datasets\" text box on right top.<br\/>\nYou can type \"bengaliai-cv19-feather\" to find this dataset and press \"Add\" botton to add the data."}}