{"cell_type":{"56d13a08":"code","9891cf71":"code","2bebff0d":"code","b63c4d2e":"code","b0f2d68c":"code","d481595e":"code","9331704b":"code","ef208032":"code","53d35a65":"code","7906096a":"code","0ad507e4":"code","ccc33962":"code","3113a814":"code","66cc6391":"code","cef4eeac":"code","6da9c0b6":"code","67d31006":"code","95063101":"code","df42221e":"code","9d89c1f8":"code","bacf24be":"code","4cf8b70a":"code","05384e6d":"code","f5803283":"code","799fb100":"code","9e915d8b":"code","b9e2e3ed":"code","be14b9a6":"code","21454800":"markdown","a93a8873":"markdown","02467710":"markdown","52bc600f":"markdown","e0ca3fb6":"markdown","5bed375e":"markdown","eb7a7a41":"markdown","252829a9":"markdown","6ffc8ac8":"markdown","f8489102":"markdown","fc9ccf76":"markdown","a29d53fa":"markdown","ef220e2b":"markdown","b6bcad19":"markdown","954ac094":"markdown"},"source":{"56d13a08":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9891cf71":"import datetime\nimport pandasql as psql\nimport sklearn\nimport statistics","2bebff0d":"import scipy","b63c4d2e":"query_data=pd.read_csv(\"..\/input\/comz-query-data\/query_data.csv\")\nquery_data[0:5]","b0f2d68c":"userdf=pd.read_csv(\"..\/input\/usertable\/userTable.csv\")","d481595e":"print(userdf[0:5])\nprint(userdf.info())","9331704b":"print(\"before imputation\",query_data.info())\nfor column in query_data.columns:\n    query_data[column].fillna(query_data[column].mode()[0], inplace=True)\nprint(\"after imputation\",query_data.info())\n","ef208032":"j=0\nfor i in query_data['VisitDateTime']:\n    #print(f'Going in :{i}')\n    if '-' not in i:\n        query_data['VisitDateTime'][j]=datetime.datetime.fromtimestamp(   int(i[0:10])   ).strftime('%Y-%m-%d %H:%M:%S')\n        #print('Goes in :' ,i,' and changes to ',query_data['VisitDateTime'][j])\n    j+=1\n   \nquery_data['VisitDateTime']=pd.to_datetime(query_data['VisitDateTime'])","53d35a65":"id_and_date=psql.sqldf(\" SELECT [UserID],[Signup Date] FROM userdf ORDER BY [UserID] ASC \")\nid_and_date['Signup Date']=pd.to_datetime(id_and_date['Signup Date'])\n","7906096a":"print(id_and_date[0:5])\nprint(id_and_date.info())","0ad507e4":"apperance=[] # the apperance \nindex=0\nbatchid=id_and_date[\"UserID\"][0:]\nfor user in batchid:\n    #print(\"======\")\n    #print(\".............. \",user,\".......................\")\n    temp=0\n    for i in range(index,len(query_data['UserID'])):\n        #print(\"comparing:\",user.lower(),\"with\",batch['UserID'][i])\n        if user==query_data['UserID'][i]:\n            temp+=1\n            index+=1\n            \n        else:\n            #print(\"comparison stoped\")\n            break\n        \n    #print(\"User\",user,\"appperance\",temp)\n    \n    apperance.append(temp)\n    \nprint(apperance[0:5])\nprint(len(apperance))\n","ccc33962":"scaler=[  ]\ntemp=0\nfor i in range(len(apperance)):\n    temp+=apperance[i]\n    scaler.append(temp)\nscaler=[0,*scaler]\n","3113a814":"last_date=max(query_data['VisitDateTime'])\ndays_7=datetime.timedelta(days=7)\n\ndays_7=(last_date-days_7)\nprint(days_7)\n\nvisit=[]\nfor i in range(len(scaler)-1):\n    visit_each=0\n    for dx in range(scaler[i],scaler[i+1]):\n        if query_data['VisitDateTime'][dx] >= days_7:\n            visit_each+=1\n    visit.append(visit_each)\n        \n            \n","66cc6391":"last_date=max(query_data['VisitDateTime'])\ndays_15=datetime.timedelta(days=15)\ndiff_15=last_date-days_15\nproducts_view=[]\n\nfor i in range(len(scaler)-1):\n    prod_list=[]\n    for dx in range(scaler[i],scaler[i+1]):\n        if  query_data['VisitDateTime'][dx] >= diff_15 and query_data['ProductID'][dx].upper() not in prod_list:\n            prod_list.append(query_data['ProductID'][dx])\n    products_view.append(len(prod_list))\nprint(len(products_view))","cef4eeac":"id_and_date['Signup Date']=pd.to_datetime(id_and_date['Signup Date'])","6da9c0b6":"\nlast_date=max(query_data['VisitDateTime'])\nvintage=[]\nfor i in id_and_date[\"Signup Date\"]:\n    vintage.append(       int (   str( last_date-i.tz_localize(tz=None)  ).split(' ')[0]    )    ) # tz_localise removes the UTC","67d31006":"from statistics import mode\nfrom scipy import stats as s\n\n\nlast_date=max(query_data['VisitDateTime'])\ndays_15=datetime.timedelta(days=15)\ndiff_15=last_date-days_15\nmost_products_view=[]\n\nfor i in range(len(scaler)-1):\n    most_prod_list=[]\n    for dx in range(scaler[i],scaler[i+1]):\n        if  query_data['VisitDateTime'][dx] >= diff_15 and query_data['Activity'][dx].upper()=='PAGELOAD':\n            most_prod_list.append(query_data['ProductID'][dx])\n    if len(most_prod_list) !=0:\n        most_products_view.append(s.mode(most_prod_list)[0])\n    else:\n        most_products_view.append('Product101')\n        \nprint(len(products_view))","95063101":"most_products_view[0:10]","df42221e":"converted_most_prod_view=most_products_view.tolist()\nprint(converted_most_prod_view[0:10])","9d89c1f8":"os=[]\nfor i in range(len(scaler)-1):\n    os_list=[]\n    for dx in range(scaler[i],scaler[i+1]):\n        os_list.append(query_data['OS'][dx])\n    os.append(s.mode(os_list)[0])\n    ","bacf24be":"# invloving fully imputed dataset\nmost_recent_product=[]\nfor i in range(len(scaler)-1):\n    recent_date=[]\n    recent_product=[]\n    for dx in range(scaler[i],scaler[i+1]):\n        recent_date.append(query_data['VisitDateTime'][dx])\n        recent_product.append(query_data['ProductID'][dx])\n    most_recent_product.append(recent_product[recent_date.index(max(recent_date))] )","4cf8b70a":"last_date=max(query_data['VisitDateTime'])\ndays_7=datetime.timedelta(days=7)\n\ndays_7=(last_date-days_7)\nprint(days_7)\n\npageloads_7=[]\nfor i in range(len(scaler)-1):\n    pageloads=0\n    for dx in range(scaler[i],scaler[i+1]):\n        if query_data[\"Activity\"][dx].upper()==\"PAGELOAD\":\n            pageloads+=1\n    pageloads_7.append(pageloads)","05384e6d":"last_date=max(query_data['VisitDateTime'])\ndays_7=datetime.timedelta(days=7)\n\ndays_7=(last_date-days_7)\nprint(days_7)\n\nclicks_7=[]\nfor i in range(len(scaler)-1):\n    clicks=0\n    for dx in range(scaler[i],scaler[i+1]):\n        if query_data[\"Activity\"][dx].upper()==\"CLICK\":\n            clicks+=1\n    clicks_7.append(clicks)","f5803283":"final_df=pd.DataFrame(list(zip(visit,products_view,vintage,most_products_view,os,most_recent_product,pageloads_7,clicks_7))\n                     ,columns=['No_of_days_Visited_7_Days','No_Of_Products_Viewed_15_Days','User_Vintage','Most_Viewed_product_15_Days','Most_Active_OS','Recently_Viewed_Product','Pageloads_last_7_days','Clicks_last_7_days'])","799fb100":"print(final_df[0:10])\nprint(final_df.info())","9e915d8b":"print(clicks_7[0:10])\nprint(pageloads_7[0:10])","b9e2e3ed":"# usefull :\nlast_date=max(query_data['VisitDateTime'])\nvintage=[]\nfor i in range(len(scaler)-1):\n    user_dates=[]\n    for dx in range(scaler[i],scaler[i+1]):\n        if query_data['VisitDateTime'][dx] not in user_dates:\n            user_dates.append(query_data['VisitDateTime'][dx])\n    vintage.append(   int ( str(last_date-min(user_dates)).split(' ')[0] )   ) \nprint(len(vintage))","be14b9a6":"\ndata = [5,1,5,3,4,4]\nfreq = Counter(data)\nmostfreq = freq.most_common()\nmostfreq[0][0]","21454800":"## Data load","a93a8873":"## Library loading","02467710":"# visit in 7 days :\n","52bc600f":"visit,products_view,vintage,most_products_view,os,most_recent_product,pageloads_7,clicks_7","e0ca3fb6":"# User Vintage","5bed375e":"### Data Look up","eb7a7a41":"# Most viewed products in 15 days","252829a9":"# Clicks last 7 days","6ffc8ac8":"# The bin >>>>>>>>>>>>>>","f8489102":"# ::::::: FINAL DATA FRAME STICH :::::::","fc9ccf76":"# Page loads in last 7 days","a29d53fa":"# Unique number of products in 15 days","ef220e2b":"## Unique Users","b6bcad19":"# Most Frequent OS","954ac094":"# Recently viewed products"}}