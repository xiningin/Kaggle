{"cell_type":{"e05566ba":"code","312035d7":"code","a8537525":"code","6e0ac7db":"code","c7467013":"code","218a654d":"code","d11cc0a9":"code","8370b12b":"code","4fb3ccc5":"code","504f00cc":"code","6536e05f":"code","f00fa272":"code","cd808820":"code","f94ab099":"code","8e044ba3":"code","caff6484":"code","1180d377":"code","6e6c023e":"code","30ff901d":"code","02aa66f2":"code","89d77821":"code","b31d69b1":"code","6955c3e4":"code","97e56d0d":"code","423e39ba":"code","03b27396":"code","6e15cc82":"code","557c675c":"markdown","3ca4585e":"markdown","62a7b1c4":"markdown"},"source":{"e05566ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","312035d7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB \nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nimport seaborn as sns\nimport xgboost as xgb\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import LabelEncoder\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix\n","a8537525":"df_tr=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf_tr","6e0ac7db":"df_tst = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf_tst","c7467013":"df_tr1=df_tr.drop(columns=['Name','Cabin','Embarked','Ticket'])\ndf_tr1","218a654d":"df_tr1.info()","d11cc0a9":"df_tr1.isnull().sum().sort_values(ascending=False,axis=0)","8370b12b":"#to fill the missing values\ndf_tr2=df_tr1.fillna(value=0,axis='columns')\ndf_tr2.shape","4fb3ccc5":"df_tr2.isnull().sum()\ndf_tr2","504f00cc":"df_tst1=df_tst.drop(columns=['Name','Cabin','Embarked','Ticket'])\ndf_tst1","6536e05f":"df_tst2=df_tst1.fillna(value=0,axis='columns')\ndf_tst2","f00fa272":"df_tst2.isnull().sum().sort_values(ascending=False,axis=0)\n","cd808820":"sns.kdeplot(x=\"Fare\",hue=\"Sex\",multiple=\"stack\",data=df_tr2)","f94ab099":"sns.barplot(x='Sex',y='Age',data=df_tr2,hue='Pclass')","8e044ba3":"sns.catplot(x='Survived',y='Age',data=df_tr2,hue='Sex')","caff6484":"df_new = pd.get_dummies(df_tr2, drop_first=False)\ndf_new.head()","1180d377":"df_new2=pd.get_dummies(df_tst2,drop_first=False)\ndf_new2.head()","6e6c023e":"y = df_new[\"Survived\"]\nx = pd.get_dummies(df_new.drop('Survived', axis=1))\nx\n\n#x = df_new.loc[:,df_new.columns!='Survived']","30ff901d":"x.shape,y.shape","02aa66f2":"df_new.info()\n","89d77821":"from sklearn.neighbors import KNeighborsClassifier","b31d69b1":"from sklearn.preprocessing import minmax_scale#scale the features\nminmax_scale(x)","6955c3e4":"x_scale=pd.DataFrame(minmax_scale(x),columns=x.columns)\nx_train,x_valid,y_train,y_valid=train_test_split(x_scale,y,random_state=10)\nknn=KNeighborsClassifier(n_neighbors=5,weights='uniform')\nknn.fit(x_train,y_train)\nprint(knn.score(x_valid,y_valid))\n\n","97e56d0d":"from sklearn.metrics import plot_confusion_matrix","423e39ba":"_ = plot_confusion_matrix(knn,x_valid,y_valid)","03b27396":"prediction_knn=knn.predict(x_valid)\nprint(len(prediction_knn))","6e15cc82":"submission=pd.DataFrame({\"PassengerId\":id,\"Survived\":prediction_knn})\nsubmission","557c675c":"### Model Classification","3ca4585e":"#### Visualization","62a7b1c4":"### Data Loading"}}