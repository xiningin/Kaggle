{"cell_type":{"fa04488a":"code","bc4d7cfb":"code","909fc627":"code","a4626365":"code","d8e1b563":"code","390c2c22":"code","97266c04":"code","6c22e590":"code","9846cba4":"code","0e180f63":"code","541e4bde":"code","db7881bc":"code","b8ed78f3":"code","ccbbd3e0":"code","d8864d42":"code","15973eba":"code","a544ece9":"code","41ac533e":"code","39a96f3a":"code","d0150094":"code","6a08a779":"code","e50a501f":"code","4a7156f3":"code","1d947ca1":"code","955a057d":"code","33e52b08":"markdown","5162c588":"markdown","9bf5c27a":"markdown","ecccf846":"markdown","44614da9":"markdown","998d6ede":"markdown","e0f6c0c3":"markdown","7f7dfb54":"markdown","a7e7e22b":"markdown","a7e4af2e":"markdown","165a8716":"markdown","a8e48f87":"markdown","52c6d3f7":"markdown","705f74c9":"markdown","8bf6e03a":"markdown","5e1fa9eb":"markdown","3a1317c3":"markdown","ed73e8a5":"markdown","d78e9fd8":"markdown","36dc0ab3":"markdown","8351b285":"markdown","24fe9f98":"markdown","afdafad0":"markdown"},"source":{"fa04488a":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%config InlineBackend.figure_format = 'svg'\n%matplotlib inline","bc4d7cfb":"dice = np.random.randint(1,7,200) + np.random.randint(1,7,200)  # 2d6 Dices roll 200 times\ndice","909fc627":"sns.distplot(dice)","a4626365":"sns.distplot(dice, kde = False, bins = 8, vertical = True, color = 'red')","d8e1b563":"tips = sns.load_dataset(\"tips\") # Load Tips dataset\ntips.head()","390c2c22":"sns.jointplot(x = tips.total_bill, y = tips.tip, kind='scatter') # kind - kind of plot","97266c04":"sns.jointplot(tips.total_bill, tips.tip, color = '#a631e7', kind = 'reg', space = 0) # regression plot","6c22e590":"iris = sns.load_dataset(\"iris\") # Load iris dataset\niris.head()","9846cba4":"sns.pairplot(iris, hue = 'species')","0e180f63":"# try with tips data\npalete = ['#E9473F', '#3FE1E9']\nsns.pairplot(tips, hue = 'sex', markers = 'X',corner = True, palette = sns.color_palette(palete))","541e4bde":"g = sns.FacetGrid(tips, col=\"time\", row=\"smoker\") # Only this line show us an empty graph\ng = g.map(plt.hist, \"total_bill\")","db7881bc":"g = sns.FacetGrid(tips, col  = 'time', hue = 'day')\ng = (g.map(plt.scatter, \"total_bill\", \"tip\", edgecolor=\"w\").add_legend())","b8ed78f3":"sns.barplot(x = 'sex', y = 'total_bill', data = tips)","ccbbd3e0":"sns.barplot(x = tips.time, y = tips.tip, hue = tips.sex)","d8864d42":"sns.barplot('size', y = 'total_bill', data = tips, palette = 'Blues_d')","15973eba":"palete = ['#001eff', '#f000ff']\nplt.style.use(\"dark_background\") # set black background\nsns.countplot(x = 'sex', data = tips, facecolor = (0,0,0,0),\n                                        linewidth=5,\n                                         edgecolor=sns.color_palette(palete))","a544ece9":"plt.style.available # All styles","41ac533e":"plt.style.use(\"Solarize_Light2\")\nsns.boxplot(x = tips.total_bill)","39a96f3a":"plt.style.use('grayscale')\nsns.boxplot(x=\"day\", y=\"total_bill\", data=tips)","d0150094":"plt.style.use(\"bmh\")\nsns.boxenplot(x=\"day\", y=\"total_bill\", hue=\"time\", data=tips, linewidth=2.5)","6a08a779":"sns.reset_orig() # reset style to original\nsns.violinplot(x = 'total_bill', y = 'day', hue = 'sex', data = tips, palete = 'rainbow')","e50a501f":"sns.violinplot(x=\"day\", y=\"total_bill\", hue=\"sex\",\n                    data=tips, palette=\"Set1\", split=True,\n                    scale=\"count\", inner=\"quartile\")","4a7156f3":"sns.swarmplot(x=\"time\", y=\"tip\", data=tips,\n              order=[\"Dinner\", \"Lunch\"],\n              color = 'green').set_title('Christmas trees') # Use to set tittle","1d947ca1":"ax = sns.violinplot(x='day', y = 'total_bill', data = tips, inner = None, color = '#a27250')\nax = sns.swarmplot(x='day', y = 'total_bill',\n                   data = tips, \n                   color = 'black',\n                   marker=\"h\").set_title('Cacao beans') # I know that my imagination is crazy","955a057d":"palette = ('#ea7643', '#a91b1b')\nsns.pointplot(x=\"day\", y=\"tip\", hue=\"sex\", data=tips,\n              capsize=.2, markers=[\"D\", \"x\"], palette = sns.color_palette(palette),\n             linestyles=[\"-\", \"--\"])","33e52b08":"# Categorical data visualization\nHere we will work with data such as gender, smoking addiction and others, which are divided into categories, unlike tips, which are described by the amount.","5162c588":"## Jointplot\n**The jointplot() function shows a joint distribution over two variables.**","9bf5c27a":"I hope this tutorial came in handy for someone. I hope even more that it encouraged you to go and play with various graphs and their parameters. This topic is quite extensive for one lesson, but the basics here should be enough for comfortable use.","ecccf846":"## Distplot\n\nShows a histogram and a graph of the distribution density.\n\n","44614da9":"## Barplot\nThe barplot aggregates the data according to the values of the categorical variable and applies a certain function to the values of the corresponding groups of the digital variable. By default, this function is average.","998d6ede":"## Countplot\nThe same as the barplot, only the function is already explicitly set, and it counts the number of values in each category.","e0f6c0c3":"## Pointplot\nShow point estimates and confidence intervals using scatter plot glyphs.\nA point plot represents an estimate of central tendency for a numeric variable by the position of scatter plot points and provides some indication of the uncertainty around that estimate using error bars.","7f7dfb54":"Swarmplot is a good complement to a box or violin plot in cases where you want to show all observations along with some representation of the underlying distribution.","a7e7e22b":"**You can change the color of the plot using the hex code.\nFor hex colours, you can use online palettes like: [www.color-hex.com](https:\/\/www.color-hex.com\/)**\n\n**space = 0 -  removes gaps between x data and y data. There is a gap in the previous chart, it will not be in this.**","a7e4af2e":"It seems like people like to dine in restaurants on Saturday and lunch on Thursday.","165a8716":"## Violinplot\nViolinplot performs the same function as boxplot. Represents 2 plots of distribution density.","a8e48f87":"> What can I say except you're welcome","52c6d3f7":"# Seaborn data visualization beginner's tutorial\n**Seaborn** This is a higher level matplotlib library API. It provides a high-level interface for drawing attractive and informative statistical graphics. More details can be found [here](https:\/\/seaborn.pydata.org\/)\nCreate your own notebook and try to play with the parameters of the plots by yourself.\n","705f74c9":"**Below we can see the relationships between the data columns.\nhue - chose variable in data to map plot aspects to different colors**","8bf6e03a":"* kde - allows you to leave only the histogram, bins - set the number of bars, vertical - determines an orientation.","5e1fa9eb":"A related function, boxenplot(), draws a plot that is similar to a box plot but optimized for showing more information about the shape of the distribution. It is best suited for larger datasets:","3a1317c3":"## Facet Grid\nThis class maps a dataset onto multiple axes arrayed in a grid of rows and columns that correspond to levels of variables in the dataset. The plots it produces are often called \u201clattice\u201d, \u201ctrellis\u201d, or \u201csmall-multiple\u201d graphics.","ed73e8a5":"## Swarmplot\nDraw a categorical scatterplot with non-overlapping points.","d78e9fd8":"**inner - lets us see quartiles as horizontal lines instead of a mini-box**\n\n**split - separates the density distribution graphs of mail and femail**\n\n**scale - used to scale the width of each violin**\n","36dc0ab3":"## Boxplot\nA box plot (or box-and-whisker plot) shows the distribution of quantitative data in a way that facilitates comparisons between variables or across levels of a categorical variable. The box shows the quartiles of the dataset while the whiskers extend to show the rest of the distribution, except for points that are determined to be \u201coutliers\u201d using a method that is a function of the inter-quartile range.","8351b285":"![Sea Born](https:\/\/mirage.mk.ua\/wp-content\/uploads\/2017\/03\/X-0-093-%D0%9C%D0%BE%D0%B0%D0%BD%D0%B0.-%D0%9C%D0%B0%D1%83%D0%B8.-%D0%A4%D0%B8%D0%BB%D1%8C%D0%BC%D1%8B-%D0%BC%D1%83%D0%BB%D1%8C%D1%82%D1%84%D0%B8%D0%BB%D1%8C%D0%BC%D1%8B-%D1%84%D0%BE%D1%82%D0%BE%D0%BE%D0%B1%D0%BE%D0%B8-%D0%BD%D0%B0-%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7-%D0%B2-%D0%9D%D0%B8%D0%BA%D0%BE%D0%BB%D0%B0%D0%B5%D0%B2%D0%B5..jpg)","24fe9f98":"**markers - allow you chose the marker style. Details can be found [here](https:\/\/matplotlib.org\/3.1.0\/api\/markers_api.html).**\n\n**palette - allows you to change colors. Read more [here](https:\/\/seaborn.pydata.org\/tutorial\/color_palettes.html).**\n\n**corner - removes upper plots**\n","afdafad0":"## Pairplot\nPlot pairwise relationships in a dataset.The diagonal Axes are treated differently, drawing a plot to show the univariate distribution of the data for the variable in that column."}}