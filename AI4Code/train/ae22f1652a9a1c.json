{"cell_type":{"e1e56d59":"code","1ae06fb0":"code","c56a7b58":"code","9cbd0670":"code","045fdb54":"code","810ee73a":"code","12559c69":"code","24a4ad4b":"code","b131bcea":"code","3f148d69":"code","2661f329":"code","501f86fe":"code","c07b1e55":"code","0a83e37e":"code","293868a9":"code","35dfa185":"code","7144546c":"code","71077e33":"code","ece0dd50":"code","d574c820":"code","34fdbdd7":"code","2a757bcd":"code","4016dc76":"code","3da5dd1d":"code","7a8b5aee":"code","f77cdff2":"code","0e00734f":"code","11f206df":"code","c30dde17":"code","9018136d":"code","e021e49c":"code","b0d6f3a4":"markdown","6ef774ed":"markdown","f29817a4":"markdown","bf30ad7c":"markdown","28794077":"markdown","91dc3369":"markdown","6c7da267":"markdown","5f928574":"markdown","f585e5af":"markdown","b3364262":"markdown"},"source":{"e1e56d59":"import pandas as pd\nfrom tqdm import tqdm\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.subplots as pxs\nimport skimage.io as ski\nimport plotly.graph_objects as pxg\nimport librosa as lr\nimport librosa.display as lrd\nimport tensorflow as tf\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n\nplt.rcParams['figure.figsize'] = [9, 9]","1ae06fb0":"# \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\niris_data = pd.read_csv(\"..\/input\/normal-iris\/iris.data\", names=[\"sepal len\", \"sepal wid\", \"petal len\", \"petal wid\", \"cls\"])","c56a7b58":"# \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\niris_data.shape","9cbd0670":"# \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \niris_train_x, iris_test_x, iris_train_y, iris_test_y = train_test_split(iris_data.iloc[:,:4], iris_data.cls)","045fdb54":"# random forest\niris_clsf = RandomForestClassifier(n_estimators=300, max_depth=100, random_state=3)\niris_clsf.fit(iris_train_x, iris_train_y)\niris_clsf_score = iris_clsf.score(iris_test_x, iris_test_y)\niris_clsf_score","810ee73a":"# fashion mnist\nfashion_mnist_data = pd.read_csv('\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv')","12559c69":"# \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\nfashion_mnist_data.shape","24a4ad4b":"# \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nfashion_train_x, fashion_test_x, fashion_train_y, fashion_test_y = train_test_split(fashion_mnist_data.iloc[:,1:], fashion_mnist_data.label)","b131bcea":"# random forest \nfashion_clsf = RandomForestClassifier(n_estimators=300, max_depth=100, random_state=3)\nfashion_clsf.fit(fashion_train_x, fashion_train_y)\nfashion_clsf_score = fashion_clsf.score(fashion_test_x, fashion_test_y)\nfashion_clsf_score","3f148d69":"# chinese mnist\nchinese_mnist_data = pd.read_csv(\"\/kaggle\/input\/chinese-mnist\/chinese_mnist.csv\")","2661f329":"# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438\ndef return_image(el):\n    return f\"input_{el[0]}_{el[1]}_{el[2]}.jpg\"","501f86fe":"# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\nchinese_mnist_data['image'] = chinese_mnist_data.apply(return_image, axis=1)","c07b1e55":"# \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\nchinese_mnist_data.shape","0a83e37e":"# \u0441\u043e\u0437\u0434\u0430\u0435\u043c dataframe \u0441 \u0447\u0435\u0442\u043a\u0438\u043c\u0438 \u043f\u0438\u043a\u0441\u0435\u043b\u044f\u043c\u0438\nchinese_mnist_clear_data = pd.DataFrame(columns=[[\"code\"] + [el for el in range(4096)]])","293868a9":"# \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u0447\u0435\u0442\u043a\u0438\u0435 \u043f\u0438\u043a\u0441\u0435\u043b\u0438\nfor inx, el in tqdm(enumerate(chinese_mnist_data.image)):\n    tmp = ski.imread(f\"\/kaggle\/input\/chinese-mnist\/data\/data\/{el}\")\n    tmp_arr = []\n    for el in tmp:\n        for le in el:\n            tmp_arr.append(le)\n    clear = [chinese_mnist_data.iat[inx,2]] + tmp_arr\n    clear_ser = pd.Series(clear, index=chinese_mnist_clear_data.columns)\n    chinese_mnist_clear_data = chinese_mnist_clear_data.append(clear_ser, ignore_index=True)\n    if inx == 2110:\n        break","35dfa185":"chinese_mnist_clear_data.shape","7144546c":"# \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nchinese_train_x, chinese_test_x, chinese_train_y, chinese_test_y = train_test_split(chinese_mnist_clear_data.iloc[:,1:],chinese_mnist_clear_data.code)","71077e33":"# convert data to a normal data type\nchinese_train_x = chinese_train_x.astype(np.int32)\nchinese_test_x = chinese_test_x.astype(np.int32)\nchinese_train_y = chinese_train_y.astype(np.int32)\nchinese_test_y = chinese_test_y.astype(np.int32)","ece0dd50":"# random forest\nchinese_clsf = RandomForestClassifier(n_estimators=300, max_depth=100, random_state=3)\nchinese_clsf.fit(chinese_train_x, chinese_train_y.values.ravel())\nchinese_clsf_score = chinese_clsf.score(chinese_test_x, chinese_test_y)\nchinese_clsf_score","d574c820":"#sign mnist dataset\nsign_mnist = pd.read_csv(\"\/kaggle\/input\/sign-language-mnist\/sign_mnist_test\/sign_mnist_test.csv\")","34fdbdd7":"# \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\nsign_mnist.shape","2a757bcd":"# \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nsign_train_x, sign_test_x, sign_train_y, sign_test_y = train_test_split(sign_mnist.iloc[:,1:], sign_mnist.label)","4016dc76":"# random forest \nsign_clsf = RandomForestClassifier(n_estimators=300, max_depth=100, random_state=3)\nsign_clsf.fit(sign_train_x, sign_train_y)\nsign_clsf_score = sign_clsf.score(sign_test_x, sign_test_y)\nsign_clsf_score","3da5dd1d":"# urban sound dataset\nsound_set = pd.read_csv(\"\/kaggle\/input\/urbansound8k\/UrbanSound8K.csv\")","7a8b5aee":"# \u043f\u0443\u0442\u044c \u043a\u043e \u0432\u0441\u0435\u043c \u0444\u0430\u0439\u043b\u0430\u043c\nsound_set['path'] = sound_set.apply(lambda el: f\"\/kaggle\/input\/urbansound8k\/fold{el.fold}\/{el.slice_file_name}\", axis=1)","f77cdff2":"# \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\nsound_set.shape","0e00734f":"# \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0447\u0435\u0442\u043a\u0438\u043c\u0438 \u0437\u0432\u0443\u043a\u043e\u0432\u044b\u043c\u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438\nsound_clear = pd.DataFrame(columns=[[\"code\"] + [el for el in range(128)]])","11f206df":"for inx, el in tqdm(enumerate(sound_set[\"class\"])):\n    tmp = np.mean(lr.feature.mfcc(lr.load(sound_set.iat[inx,8])[0], n_mfcc=128), axis=1)\n    clear = [el] + list(tmp)\n    clear_ser = pd.Series(clear, index=sound_clear.columns)\n    sound_clear =  sound_clear.append(clear_ser.to_frame().T, ignore_index=True)\n    if inx == 707:\n        break","c30dde17":"sound_clear.shape","9018136d":"# \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nsound_train_x, sound_test_x, sound_train_y, sound_test_y = train_test_split(sound_clear.iloc[:,1:],sound_clear.code)","e021e49c":"# random forest\nsound_clsf = RandomForestClassifier(n_estimators=300, max_depth=100, random_state=3)\nsound_clsf.fit(sound_train_x, sound_train_y)\nsound_clsf_score = sound_clsf.score(sound_test_x, sound_test_y)\nsound_clsf_score","b0d6f3a4":"**\u0412\u044b\u0432\u043e\u0434: \u044d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0444\u0430\u0439\u043b\u044b .wav \u0440\u0430\u0437\u043d\u044b\u0445 \u0437\u0432\u0443\u043a\u043e\u0432. \u041d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u0432\u0443\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u043b\u0430\u043d\u0430 \u0438 \u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0432\u0443\u043a\u0438. \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 10 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0430\u0443\u0434\u0438\u043e\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u043e\u0432 (\u0432\u044b\u0441\u0442\u0440\u0435\u043b, \u043b\u0430\u0439 \u0441\u043e\u0431\u0430\u043a\u0438, \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440, \u0441\u0438\u0440\u0435\u043d\u0430 \u0438 \u0442. \u0434.)**","6ef774ed":" **\u0412\u044b\u0432\u043e\u0434: mnist fashion dataset \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 10000 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043e\u0434\u0435\u0436\u0434\u044b. 10 \u0432\u0438\u0434\u043e\u0432 \u043e\u0434\u0435\u0436\u0434\u044b (\u0444\u0443\u0442\u0431\u043e\u043b\u043a\u0430 \/ \u0442\u043e\u043f, \u0431\u0440\u044e\u043a\u0438, \u043f\u0443\u043b\u043e\u0432\u0435\u0440, \u043f\u043b\u0430\u0442\u044c\u0435, \u043f\u0430\u043b\u044c\u0442\u043e, \u0441\u0430\u043d\u0434\u0430\u043b\u0438\u0438, \u0440\u0443\u0431\u0430\u0448\u043a\u0430, \u043a\u0440\u043e\u0441\u0441\u043e\u0432\u043a\u0438, \u0441\u0443\u043c\u043a\u0430, \u0431\u043e\u0442\u0438\u043b\u044c\u043e\u043d\u044b). \u042d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0434\u0435\u0436\u0434\u044b**","f29817a4":"**\u0412\u044b\u0432\u043e\u0434: \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 sign mnist \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f \u044f\u0437\u044b\u043a\u0430 \u0436\u0435\u0441\u0442\u043e\u0432.**","bf30ad7c":"# **Urban sound**","28794077":"**\u0412\u044b\u0432\u043e\u0434: \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0440\u0438\u0441 - \u044d\u0442\u043e \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0446\u0432\u0435\u0442\u0430\u0445 \u0438\u0440\u0438\u0441(\u043a\u0430\u0441\u0430\u0442\u0438\u043a \u0438\u043b\u0438 \u043f\u0435\u0442\u0443\u0448\u043e\u043a). \u042d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 5 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 (\u0432\u044b\u0441\u043e\u0442\u0430 \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u043b\u0438\u0441\u0442\u0430, \u0448\u0438\u0440\u0438\u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u043b\u0438\u0441\u0442\u0430, \u0432\u044b\u0441\u043e\u0442\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u043b\u0438\u0441\u0442\u0430, \u0448\u0438\u0440\u0438\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u043b\u0438\u0441\u0442\u0430, \u043a\u043b\u0430\u0441\u0441) \u0438 150 \u0441\u0442\u0440\u043e\u043a (150 \u0440\u0430\u0441\u0442\u0435\u043d\u0438\u0439). \u042d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0446\u0432\u0435\u0442\u0430\u0445 \u0438\u0440\u0438\u0441\u0430.**","91dc3369":" # **Iris Data**","6c7da267":"# Fashion mnist","5f928574":"# **Chinese mnist**","f585e5af":"# **Sign mnist**","b3364262":"**\u0412\u044b\u0432\u043e\u0434: \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 Chinese mnist \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u043c\u0438 \u0438\u0435\u0440\u043e\u0433\u043b\u0438\u0444\u0430\u043c\u0438. \u042d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432 \u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430.**"}}