{"cell_type":{"2bea04c6":"code","137e471d":"code","9fc1396e":"code","bb726b07":"code","6711c0d6":"code","05d655f1":"code","3e761ae5":"code","148c2ed4":"code","5c983656":"code","05f8e08a":"code","36abeeb1":"code","87cd448f":"code","521f2cd2":"code","88d2df01":"code","0ae3a0c7":"code","93751954":"code","16ecaa8c":"code","728f323f":"markdown","741bcab9":"markdown","3a4d46cf":"markdown","f23d9bbc":"markdown","64f67521":"markdown","f75366b9":"markdown","6b60bd92":"markdown"},"source":{"2bea04c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","137e471d":"data = pd.read_csv('..\/input\/2017.csv')\ndata2016 = pd.read_csv('..\/input\/2016.csv')","9fc1396e":"data.info()","bb726b07":"data.corr()","6711c0d6":"data.head(10)","05d655f1":"f,ax = plt.subplots(figsize=(12, 10)) \nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax) \nplt.show() ","3e761ae5":"data.columns","148c2ed4":"col_name =data.columns[1]  #fix for using\ndata=data.rename(columns = {col_name:'Happiness_Rank'})\ncol_name =data.columns[2]  #fix for using\ndata=data.rename(columns = {col_name:'Happiness_Score'})\ncol_name =data.columns[3]  #fix for using\ndata=data.rename(columns = {col_name:'Whisker_high'})\ncol_name =data.columns[4]  #fix for using\ndata=data.rename(columns = {col_name:'Whisker_low'})\ncol_name =data.columns[5]  #fix for using\ndata=data.rename(columns = {col_name:'Economy_GDP_per_Capita'})\ncol_name =data.columns[7]  #fix for using\ndata=data.rename(columns = {col_name:'Health_Life_Expectancy'})\ncol_name =data.columns[10]  #fix for using\ndata=data.rename(columns = {col_name:'Trust_Government_Corruption'})\ncol_name =data.columns[11]  #fix for using\ndata=data.rename(columns = {col_name:'Dystopia_Residual'})","5c983656":"data.columns","05f8e08a":"data.Health_Life_Expectancy.plot(kind='line', color ='r', label=\"Health Life Expectancy\",linewidth=1,grid = True, linestyle = '-.', figsize = (16,10),title='Health Life Expectancy - Freedom - Generosity')\ndata.Freedom.plot(kind='line', color ='b', label=\"Freedom\",linewidth=1,grid = True, linestyle = '-', figsize = (16,10))\ndata.Generosity.plot(kind='line', color ='g', label=\"Generosity\",linewidth=1,grid = True, linestyle = '-', figsize = (16,10))\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.legend(loc='upper center')\nplt.show()","36abeeb1":"series = data['Economy_GDP_per_Capita']        # data['Economy_GDP_per_Capita'] = series\nprint(type(series))\ndata_frame = data[['Economy_GDP_per_Capita']]  # data[['Economy_GDP_per_Capita']] = data frame\nprint(type(data_frame))","87cd448f":"x = data['Economy_GDP_per_Capita']>1.5     # filtering\ndata[x]","521f2cd2":"data[np.logical_and(data['Economy_GDP_per_Capita']>1.5, data['Happiness_Rank']<20 )]","88d2df01":"col_name =data2016.columns[1]  #fix for using\ndata2016=data.rename(columns = {col_name:'Happiness_Rank'})\ncol_name =data2016.columns[2]  #fix for using\ndata2016=data.rename(columns = {col_name:'Happiness_Score'})\ncol_name =data2016.columns[3]  #fix for using\ndata2016=data.rename(columns = {col_name:'Whisker_high'})\ncol_name =data2016.columns[4]  #fix for using\ndata2016=data.rename(columns = {col_name:'Whisker_low'})\ncol_name =data2016.columns[5]  #fix for using\ndata2016=data.rename(columns = {col_name:'Economy_GDP_per_Capita'})\ncol_name =data2016.columns[7]  #fix for using\ndata2016=data.rename(columns = {col_name:'Health_Life_Expectancy'})\ncol_name =data2016.columns[10]  #fix for using\ndata2016=data.rename(columns = {col_name:'Trust_Government_Corruption'})\ncol_name =data2016.columns[11]  #fix for using\ndata2016=data.rename(columns = {col_name:'Dystopia_Residual'})","0ae3a0c7":"plt.hist(data.Whisker_high,bins=50, label = 'Whisker high',)\nplt.hist(data.Whisker_low,bins=50,alpha = 0.5, label = 'Whisker low') \nplt.legend(loc='upper right') \nplt.xlabel(\"Whisker high & low values\")\nplt.ylabel(\"frekans\")\nplt.title(\"Histogram\")\nplt.show()","93751954":"plt.scatter(data.Happiness_Score,data.Economy_GDP_per_Capita, color=\"red\",linewidths=0.1)\nplt.title(\"data 2017 happines score & economoy gdp\")\n\n\n\n","16ecaa8c":"data.plot(grid=True,alpha=0.9,subplots=True, figsize= (12,12))\n\nplt.subplot(2,1,1)\nplt.plot(data.Happiness_Score ,data.Economy_GDP_per_Capita, color =\"red\")\nplt.ylabel(\"'data'-2017 happines score & economoy gdp\")\n\nplt.subplot(2,1,2)\nplt.plot(data2016.Happiness_Score ,data2016.Economy_GDP_per_Capita, color =\"blue\")\nplt.ylabel(\"'data2016'-2016 happines score & economoy gdp\")\nplt.show()","728f323f":"**I looked about correlation of features\nafter I looked first 10 data**\n","741bcab9":"I showed Health, Freedom, Generosity features with matplotlib library","3a4d46cf":"\n**I read datasheets with pandas**","f23d9bbc":"**I filtered some data and i took some interesting details.\nEconomy is not always proportional to happiness**","64f67521":"**I showed correlation of features with seaborn library**","f75366b9":"**Firstly i imported matplotlib.pyplot and seaborn libraries for analysis**","6b60bd92":"**When i try the plot of features.  Program gave an error. So i fix the features names\nProbably i chose hard way for the fixing. **"}}