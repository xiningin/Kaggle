{"cell_type":{"a620cd22":"code","05b27062":"code","acb81bea":"code","061462ad":"code","54d6420e":"code","f1d97258":"code","6872944e":"code","0f39b4a0":"code","67ff3869":"code","a313b32b":"code","0b5dcc67":"code","c0995c3b":"code","1a99ea3b":"code","9cd36b3e":"code","c33b82d7":"code","64e8101f":"code","52d21846":"code","c3e33268":"code","1f16de76":"code","05076f4e":"code","9d53df0c":"code","40f98e54":"code","251b4f13":"code","e5d1f742":"code","a8f7eb67":"code","15fc90b3":"code","0b20d655":"code","af2f5d04":"code","99752d96":"code","8f546220":"code","350addb6":"code","f7caff8a":"code","29bb70c9":"code","ed5fb5ee":"code","8d76f457":"code","3c1498ca":"code","d7706e6a":"code","cd2cf1dd":"code","9ad79bde":"code","5c81a4b9":"code","9472980b":"code","f1dc22b7":"code","23d613e9":"code","c7160784":"code","657b7037":"code","04fa3365":"code","e1140838":"code","e7b1bc6f":"markdown","6adb03e6":"markdown","5982ce22":"markdown","c60cc33e":"markdown","7f1b0806":"markdown","6a19f1c4":"markdown","70843c1a":"markdown","8f304398":"markdown","f895d83a":"markdown","483f9c4c":"markdown","56f74934":"markdown","e3ea567f":"markdown","52658bef":"markdown","1df5af84":"markdown","31b2c735":"markdown","31ba2ed8":"markdown","db52c22f":"markdown","4688b16b":"markdown","73c60c0c":"markdown","a59cf09d":"markdown","96398364":"markdown","5bd53178":"markdown","b2627afb":"markdown","34c7808b":"markdown","be9b80f3":"markdown","a9c25ca0":"markdown","65ca6d5a":"markdown"},"source":{"a620cd22":"%%time\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","05b27062":"df = pd.read_csv(\"..\/input\/AutoData.csv\")\ndf.head(3)","acb81bea":"df.isnull().sum()\n#No null values","061462ad":"df.columns","54d6420e":"for i in df.columns:\n    print(i)\n    print(df[i].unique())","f1d97258":"df[\"make\"].unique()\n#it has both brand name & model name","6872944e":"#seperating make name & model from data\nn= df[\"make\"].str.split(\" \",n = 1, expand = True)\nn.head(2)","0f39b4a0":"df[\"make\"]=n[0].str.upper()\ndf[\"model\"]=n[1]\ndf[\"make\"].unique()\n#df[\"model\"].unique()\n","67ff3869":"df[\"model\"].value_counts()\ndf.head()","a313b32b":"#maker is seperated \ndf1 = df.drop([\"model\"],axis=1)\ndf1.head()","0b5dcc67":"df1.info()","c0995c3b":"df1[\"make\"].unique()\ndf1[\"make\"]= df1[\"make\"].replace(to_replace='TOYOUTA',value='TOYOTA')\ndf1[\"make\"]= df1[\"make\"].replace(to_replace='VOKSWAGEN',value='VOLKSWAGEN')\n#volkswagen\ndf1[\"make\"].unique()","1a99ea3b":"make = df1[\"make\"].value_counts().reset_index()\nmake.head()","9cd36b3e":"make.head()","c33b82d7":"plt.figure(figsize=[20,10])\nsns.set(style=\"whitegrid\")\nchart=sns.barplot(\"index\",\"make\",data = make)\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45)\nplt.title(\"Number of vehicles by make\")\nplt.ylabel('Number of vehicles')\nplt.xlabel('Make');","64e8101f":"sns.distplot(df1[\"symboling\"]).set(xlim=(-3,3))","52d21846":"sns.countplot(df1[\"fueltype\"])","c3e33268":"#df1.dtypes(include=[object])\nobj_col = df1.select_dtypes(object).columns\nobj_col = obj_col.drop(\"make\")","1f16de76":"for i in obj_col:\n    #plt.figure(figsize=[8,8])\n    sns.set(style=\"whitegrid\")\n    sns.countplot(x = i,data=df1)\n    plt.show()","05076f4e":"int_col = df1.select_dtypes(exclude=object).columns\nint_col","9d53df0c":"for i in int_col:\n    plt.figure(figsize=[8,8])\n    sns.set(style=\"whitegrid\")\n    sns.distplot(df1[i])\n    plt.show()","40f98e54":"sns.pairplot(df1)","251b4f13":"corr = df1.corr()\nplt.figure(figsize = (20,15))\nsns.heatmap(corr,annot=True,linewidths=1)\n#plt.figure(figsize=[20,20])","e5d1f742":"corr[\"price\"].reset_index().sort_values([\"price\"], ascending=False)","a8f7eb67":"plt.figure(figsize=[15,10])\na=sns.boxplot(df1[\"make\"],df1[\"price\"])\nrotx = a.set_xticklabels(a.get_xticklabels(), rotation=90)","15fc90b3":"sns.regplot(df1[\"enginesize\"],df1[\"price\"])","0b20d655":"#plt.subplot(figsize=[5,5])\nsns.pairplot(data = df1,x_vars=df1.columns,y_vars=\"price\")","af2f5d04":"from sklearn import datasets, linear_model\nfrom sklearn.model_selection import train_test_split","99752d96":"df1.head(3)","8f546220":"# create training and testing vars\ny = df1[[\"price\"]]\nX = df1[[\"enginesize\"]]\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.40, random_state=100)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)\n#X.head()","350addb6":"model = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)","f7caff8a":"preds = model.predict(X_test)","29bb70c9":"from sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","ed5fb5ee":"#curbweight\ny = df1[[\"price\"]]\nX = df1[[\"curbweight\"]]\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.40, random_state=100)\n\nmodel = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","8d76f457":"#horsepower\n\ny = df1[[\"price\"]]\nX = df1[[\"horsepower\"]]\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.40, random_state=100)\n\nmodel = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","3c1498ca":"#symboling: -3, -2, -1, 0, 1, 2, 3\n#(Cars are initially assigned a risk factor symbol associated with its price. Then, if it is more risky (or less),\n# this symbol is adjusted by moving it up (or down) the scale. Actuarians call this process \"symboling\".\n# A value of +3 indicates that the auto is risky, -3 that it is probably pretty safe.)\n#rep_val = {3:\"Risky\",2:\"\",1:\"\",0:\"\",}\ndf1[\"symboling\"] = df1[\"symboling\"].astype(str)\ndf1.head()","d7706e6a":"df_dum = pd.get_dummies(df1)\ndf_dum.head()\n\ntest_dum = pd.get_dummies(df1)\ntest_dum.head(3)\n#test_dum.info()","cd2cf1dd":"y = test_dum[[\"price\"]]\nX = test_dum.drop(\"price\",axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.30, random_state=100)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)","9ad79bde":"#VIF\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","5c81a4b9":"[variance_inflation_factor(X_train.values, ind) for ind in range(3)]","9472980b":"vif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = True)\nvif[:12]","f1dc22b7":"vif_col = vif[:12]\ncol = list(vif_col[\"Features\"])\ncol","23d613e9":"y = test_dum[[\"price\"]]\nX = test_dum[col]\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.35, random_state=100)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)","c7160784":"model = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","657b7037":"vif_col = vif[:8]\ncol = list(vif_col[\"Features\"])\n\ny = test_dum[[\"price\"]]\nX = test_dum[col]\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.35, random_state=100)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)\nmodel = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","04fa3365":"y = test_dum[[\"price\"]]\nX = test_dum.drop(\"price\",axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.35, random_state=100)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)","e1140838":"model = linear_model.LinearRegression()\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nprint(\"R2 score : %.2f\" % r2_score(y_test,preds))","e7b1bc6f":"# Final Model to choose","6adb03e6":"#### By taking first 10 VIF values for MLR Prediction","5982ce22":"## EDA","c60cc33e":"Price based on Maker","7f1b0806":"With increase in engine size Price also increase","6a19f1c4":"#### When using all variables prediction of R2 value is 81","70843c1a":"### SLR Method","8f304398":"Findings: Below are our findings on the make and price of the car\n    \u25cb The most expensive car is manufacture by buick and the least expensive is Maxda\n    \u25cb The premium cars costing more than 20000 are BMW, Jaquar, Buick and Porsche\n    \u25cb Less expensive cars costing less than 10000 are Chevrolet, Dodge, Honda,Isuzu, Mitsubishi, Plymoth,Renault and Subaru\n    \u25cb Rest of the cars are in the midrange between 10000 and 20000 which has the highest number of cars","f895d83a":"In SLR model, Engine size attribute provide high r2 score of 0.75.\n\nIn MLR model, this 8 attributes with low vif value  ['peakrpm', 'carheight', 'stroke', 'carwidth', 'carlength', 'wheelbase', 'highwaympg', 'curbweight', 'citympg', 'horsepower', 'boreratio', 'compressionratio'] provide high R2 value of 0.73","483f9c4c":"From corr, Engine size is corelated with price of car highly @0.87","56f74934":"Hence, Toyota is the top car maker with many models","e3ea567f":"## MLR for all variables","52658bef":"## Creating Dummies","1df5af84":"### Correlation map","31b2c735":"Hence, price largely depends on Make & Engine Size.\n\nIncrease in Engine size also increase Price of car.\n\nThere are some standard prices among some brands. so, price also varies based on brands","31ba2ed8":"Predict automobile price using Machine Learning\nUse Machine learning to predict the price of a car based on several characteristics. The objective is to build a model to understand the factors that drive the car of the price. This will help your automobile company launch their new car in the market effectively by pricing it better.\nTasks:\n-\tPerform EDA on the data\n-\tPerform data cleanup as required\n-\tPick the best variable for making a simple linear regression model\n-\tPerform train test split\n-\tBuild model using best variable and report the R2\n-\tMake a multiple regression model\n-\tApply feature selection approaches discussed in the class\n-\tFinal model should be interpretable\n-\tWhat is your understanding of the factors that drive price? \n\nData description:\nAttribute: Attribute Range\n\n1. symboling: -3, -2, -1, 0, 1, 2, 3(Cars are initially assigned a risk factor symbol associated with its price. Then, if it is more risky (or less), this symbol is adjusted by moving it up (or down) the scale. Actuarians call this process \"symboling\". A value of +3 indicates that the auto is risky, -3 that it is probably pretty safe.)\n2. make: alfa-romero, audi, bmw, chevrolet, dodge, honda, isuzu, jaguar, mazda, mercedes-benz, mercury, mitsubishi, nissan, peugot, plymouth, porsche, renault, saab, subaru, toyota, volkswagen, volvo\n3. fuel-type: diesel, gas.\n4. aspiration: std, turbo.\n5. num-of-doors: four, two.\n6. body-style: hardtop, wagon, sedan, hatchback, convertible.\n7. drive-wheels: 4wd, fwd, rwd.\n8. engine-location: front, rear.\n9. wheel-base: continuous from 86.6 120.9.\n10. length: continuous from 141.1 to 208.1.\n11. width: continuous from 60.3 to 72.3.\n12. height: continuous from 47.8 to 59.8.\n13. curb-weight: continuous from 1488 to 4066.\n14. engine-type: dohc, dohcv, l, ohc, ohcf, ohcv, rotor.\n15. num-of-cylinders: eight, five, four, six, three, twelve, two.\n16. engine-size: continuous from 61 to 326.\n17. fuel-system: 1bbl, 2bbl, 4bbl, idi, mfi, mpfi, spdi, spfi.\n18. bore: continuous from 2.54 to 3.94.\n19. stroke: continuous from 2.07 to 4.17.\n20. compression-ratio: continuous from 7 to 23.\n21. horsepower: continuous from 48 to 288.\n22. peak-rpm: continuous from 4150 to 6600.\n23. city-mpg: continuous from 13 to 49.\n24. highway-mpg: continuous from 16 to 54.\n25. price: continuous from 5118 to 45400.","db52c22f":"### Best model based on SLR Method:","4688b16b":"From analysis, Engine size attribute mostly predicts the price at high r2 value ","73c60c0c":"## Data Importing & Exploring","a59cf09d":"Findings\nWe have taken some key features of the automobile dataset for this analysis and below are our findings.\n\n    1.Toyota is the make of the car which has most number of vehicles with more than 40% than the 2nd highest Nissan\n    2.Most preferred fuel type for the customer is standard vs trubo having more than 80% of the choice\n    3.For drive wheels, front wheel drive has most number of cars followed by rear wheel and four wheel. There are very less number of cars for four wheel drive.\n    4.Curb weight of the cars are distributed between 1500 and 4000 approximately\n    5.Symboling or the insurance risk rating have the ratings between -3 and 3 however for our dataset it starts from -2. There are more cars in the range of 0 and 1.\n    6.Normalized losses which is the average loss payment per insured vehicle year is has more number of cars in the range between 65 and 150.","96398364":"Ploting Graphs","5bd53178":"# Understanding in price model","b2627afb":"Data Cleaning","34c7808b":"### RFE &VIF Ranking","be9b80f3":"# Train test split","a9c25ca0":"##### I prefer to choose Engine size because it has high corr & the r2 score is high when compare to others","65ca6d5a":"## MLR Method"}}