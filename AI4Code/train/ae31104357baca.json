{"cell_type":{"488b7f1f":"code","b9140ad6":"code","184ee24c":"code","1591b1f0":"code","cefa64d9":"code","2a84877b":"code","88e455bd":"code","dafc27fa":"code","e39bd13a":"code","7816fd87":"code","945169a8":"code","b6daeb89":"code","bd98470b":"markdown","2675c82b":"markdown","0b805e86":"markdown","cd403bab":"markdown"},"source":{"488b7f1f":"import pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(10,6)})\nsns.set(font_scale=1.3)\nplt.style.use('fivethirtyeight')\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\n\nfrom sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier, ExtraTreesClassifier\nfrom sklearn.ensemble import BaggingClassifier, RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV, cross_validate\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\nfrom sklearn.metrics import accuracy_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","b9140ad6":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","184ee24c":"data.head()","1591b1f0":"data.info()","cefa64d9":"data_0 = data[(data['target'] == 0)]\ndata_1 = data[(data['target'] == 1)]","2a84877b":"ax = sns.countplot(data['target'])\nax.set_title('Count of Attack');\nax.set(xlabel='0 = Negative \/ 1 = Positive', ylabel='Count');","88e455bd":"data","dafc27fa":"columns = ['age','trestbps','chol','thalach','oldpeak']\n\nlength = len(columns)\nplt.subplots(figsize=(18,10))\n\nfor i, j in zip(columns, range(length)):\n    plt.subplot((length\/2), 3, j+1)\n    plt.subplots_adjust(wspace=.3, hspace=.5)\n    sns.distplot(x=data_0[i])\n    sns.distplot(x=data_1[i])    \n    plt.title(i);        ","e39bd13a":"plt.subplots(figsize=(18,12))\nlength = len(columns)\n\nfor i, j in zip(columns, range(length)):\n    plt.subplot((length\/2), 3, j+1)\n    sns.boxplot(y=data[i])\n    plt.title(i)","7816fd87":"plt.figure(figsize=(13,13))\nsns.heatmap(data.corr(), annot=True, cmap=plt.cm.Reds, cbar_kws={'shrink': .8}, square=True, fmt='.2f', \n            linewidths=.8);","945169a8":"x = data.drop(columns=['target'])\ny = data['target']\n\nscaler = MinMaxScaler()\nx = scaler.fit_transform(x)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, stratify=y)","b6daeb89":"colunas = ['Modelo','Acuracy']\nresultado = pd.DataFrame(columns=colunas)\n\nmodels = []\n\nmodels.append(('GradientBoostingClassifier', GradientBoostingClassifier()))\nmodels.append(('AdaBoostClassifier', AdaBoostClassifier()))\nmodels.append(('ExtraTreesClassifier', ExtraTreesClassifier()))\nmodels.append(('ElasticNet', BaggingClassifier()))\nmodels.append(('BaggingClassifier', RandomForestClassifier()))\nmodels.append(('DecisionTreeClassifier', DecisionTreeClassifier()))\nmodels.append(('ExtraTreeClassifier', ExtraTreeClassifier()))\nmodels.append((\"XGBClassifier\", XGBClassifier()))\n\nfor name, model in models:\n    model.fit(x_train,y_train)\n    y_pred=model.predict(x_test)\n    acc = accuracy_score(y_test, y_pred)\n    resultado = resultado.append(pd.DataFrame([[name, acc]], columns=colunas))\n    \nresultado.sort_values(by=['Acuracy'], ascending=False, inplace=True)\nresultado","bd98470b":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Input<\/p>","2675c82b":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">EDA<\/p>","0b805e86":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Heart Attack<\/p>","cd403bab":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Model<\/p>"}}