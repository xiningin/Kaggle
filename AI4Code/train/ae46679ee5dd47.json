{"cell_type":{"6eaddba0":"code","2fea4308":"code","3d0d4d07":"code","baaf752a":"code","f141a26e":"code","3f0d20f4":"code","be4539d2":"code","695de9ac":"code","e117b9ea":"code","3788dff3":"code","08d1378d":"code","4d8399fa":"code","970ad1f9":"code","3e19c88b":"code","85f89cd8":"code","0b2d7bcd":"code","9640bebb":"code","65ce1efc":"code","456ddbb7":"code","cf5f15f5":"code","18de721f":"markdown","b9ba5a03":"markdown","03ed9326":"markdown"},"source":{"6eaddba0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2fea4308":"import seaborn as sns\nimport matplotlib.pyplot as plt","3d0d4d07":"data = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")","baaf752a":"data.head()","f141a26e":"data.shape","3f0d20f4":"data.info()","be4539d2":"data.isnull().sum()","695de9ac":"print(\"Attribute Information: (classes: edible=e, poisonous=p)\")\nsns.countplot(data[\"class\"])","e117b9ea":"plt.figure(figsize=(14,6))\ng = sns.catplot(x =\"cap-shape\", hue=\"cap-color\", data=data, col=\"class\", kind=\"count\", height=8)\n","3788dff3":"plt.figure(figsize=(14,6))\nk = sns.catplot(x =\"odor\", hue=\"bruises\", data=data, col=\"class\", kind=\"count\", height=8)\n","08d1378d":"#Preprocessing\nfrom sklearn.preprocessing import LabelEncoder\nla = LabelEncoder()\ndata = data.apply(la.fit_transform)\ndata.head()\n","4d8399fa":"x = data.drop([\"class\"], axis=1)\ny = data[\"class\"]","970ad1f9":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, random_state=0, test_size=0.25)\n","3e19c88b":"\nfrom sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(random_state=0, max_depth=5)\nclassifier.fit(x_train, y_train)\n","85f89cd8":"print(classifier.score(x_train, y_train))","0b2d7bcd":"y_pred = classifier.predict(x_test)","9640bebb":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)\n","65ce1efc":"\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(max_depth=5)\nrf.fit(x_train,y_train)\nprint(rf.score(x_train,y_train))","456ddbb7":"y_pred_rf = rf.predict(x_test)","cf5f15f5":"accuracy_score(y_test, y_pred_rf)\n","18de721f":"1. Attribute Information: (classes: edible=e, poisonous=p)\n\n1. cap-shape: bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n \n1. cap-surface: fibrous=f,grooves=g,scaly=y,smooth=s\n \n1. cap-color: brown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y\n \n1. bruises: bruises=t,no=f\n \n1. odor: almond=a,anise=l,creosote=c,fishy=y,foul=f,musty=m,none=n,pungent=p,spicy=s\n \n1. gill-attachment: attached=a,descending=d,free=f,notched=n\n \n1. gill-spacing: close=c,crowded=w,distant=d\n \n1. gill-size: broad=b,narrow=n\n \n1. gill-color: black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e,white=w,yellow=y\n \n1. stalk-shape: enlarging=e,tapering=t\n \n1. stalk-root: bulbous=b,club=c,cup=u,equal=e,rhizomorphs=z,rooted=r,missing=?\n \n1. stalk-surface-above-ring: fibrous=f,scaly=y,silky=k,smooth=s\n \n1. stalk-surface-below-ring: fibrous=f,scaly=y,silky=k,smooth=s\n \n1. stalk-color-above-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n \n1. stalk-color-below-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n \n1. veil-type: partial=p,universal=u\n \n1. veil-color: brown=n,orange=o,white=w,yellow=y\n \n1. ring-number: none=n,one=o,two=t\n \n1. ring-type: cobwebby=c,evanescent=e,flaring=f,large=l,none=n,pendant=p,sheathing=s,zone=z\n \n1. spore-print-color: black=k,brown=n,buff=b,chocolate=h,green=r,orange=o,purple=u,white=w,yellow=y\n \n1. population: abundant=a,clustered=c,numerous=n,scattered=s,several=v,solitary=y\n \n1. habitat: grasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d\n ","b9ba5a03":"# ***RandomForestClassifier***","03ed9326":"# ***Decision Tree***"}}