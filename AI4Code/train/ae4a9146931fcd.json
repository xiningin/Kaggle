{"cell_type":{"88b2c9f6":"code","444ce0d5":"code","10c6a013":"code","8553a634":"code","9d6d0ec2":"code","45be32db":"code","053ddd41":"code","4c83c6bb":"code","566159e0":"code","29de6cf7":"code","52dcfa88":"code","b54419e0":"code","de7b9bca":"code","2c781ce9":"code","870afd93":"code","084778ae":"code","34c20974":"code","39f3a8c2":"code","ad219b41":"code","1a4e9687":"code","b31ac1af":"code","33448ab6":"code","1b8214e9":"code","cbd69d29":"code","3197e7dd":"code","cc2090a9":"code","1f038006":"code","145e0937":"code","0b493f69":"code","54d3777b":"code","7dff5a51":"code","ba9f032a":"code","d43d79d2":"code","e2bc45ec":"code","5435e8df":"code","521d837e":"code","ab91ca00":"code","242cf12a":"code","9b16a53d":"code","99602526":"code","1b66245c":"code","1170eb7c":"code","4d69c645":"code","9f27e82a":"code","8f26ad5e":"code","c6092d31":"code","4f5aa2bd":"code","1b283114":"code","bf6397a4":"code","5e1d0748":"code","fdb29092":"code","ccf4d1f6":"code","9830481e":"code","1a155b67":"code","9ceb28ca":"code","6570008c":"code","5eb970dd":"code","5de4e6ae":"code","34ab9b42":"code","b1cbc0fd":"code","e6e46981":"code","58d069e5":"code","e45255dd":"code","3c0ccf42":"code","9174305a":"code","ff6ceb96":"code","024f2420":"code","9a70abfe":"code","8f814e5b":"code","df924714":"code","f08f20b1":"code","596f64bd":"code","83e03ac5":"code","2240c48e":"code","d6a4aa7c":"code","35a478ca":"code","b3041cee":"code","d4796c2b":"code","fc9165e4":"code","cb366292":"code","c7762062":"code","53ff7b0b":"code","b82e95f0":"code","c8279676":"code","343d5aa5":"code","dad240e6":"code","7c115617":"code","85b29ffc":"code","ced714e6":"code","d361b5aa":"code","79bc33be":"code","c98d53df":"code","525ff0ca":"code","376145fd":"code","89f4440c":"code","428fc48c":"code","962a5873":"code","4d6dc722":"code","10bf8981":"code","3e452c6c":"code","ed3d78aa":"code","6e1d30b5":"code","ed058664":"code","395f40a5":"code","c84c8a54":"code","ff88fb2f":"code","0da08bf0":"code","7b299a68":"code","87ac78d9":"code","2038ffc3":"code","b2dca745":"code","770b485f":"code","8e3f4038":"code","6726bd6a":"code","5eb17809":"code","5708bbe0":"code","1fa18b75":"code","9450fdfc":"code","eea80467":"code","db18b0ac":"code","ac7271f6":"code","184a3c41":"code","26aa52d5":"code","fb9dd790":"code","62f5f76f":"code","357de2a7":"code","96fe72cc":"code","325e50ba":"code","3e1718fa":"code","f6097096":"code","2039ee33":"code","8635fae9":"code","bc166519":"code","decb82f8":"code","61ebf257":"code","31ce8ee0":"code","f3fc62ff":"code","8ea4a023":"code","74e72822":"code","7daf166d":"code","9947b114":"code","7ade0a45":"code","a72f4112":"markdown","503553a8":"markdown","07256d15":"markdown","81594b20":"markdown","f76f96cb":"markdown","8bffdda2":"markdown","14b2b220":"markdown","77c1a40d":"markdown","b1365f58":"markdown","313f0880":"markdown","8c4bff16":"markdown","de9cb018":"markdown","58946f37":"markdown","943019ba":"markdown","3d174040":"markdown","981e2f35":"markdown","d7ec6105":"markdown","926b1479":"markdown","80ab3ba5":"markdown","6c66dce2":"markdown","66f9baff":"markdown","9be7ec6d":"markdown","ddc55df3":"markdown"},"source":{"88b2c9f6":"import pandas as pd\nimport plotly.express as ply\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels import tsa\nimport numpy as np\nimport statistics\nimport plotly.express as px\nimport seaborn as sns","444ce0d5":"import datetime as datetime","10c6a013":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score","8553a634":"pip install pmdarima","9d6d0ec2":"from statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom math import  sqrt\nfrom sklearn.metrics import mean_squared_error","45be32db":"#pip install statsmodels --upgrade\n!pip install statsmodels\n!pip3 install --user scipy==1.2.0","053ddd41":"from pmdarima import auto_arima","4c83c6bb":"df=pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')","566159e0":"df.head(2)","29de6cf7":"df.tail(3)","52dcfa88":"df.info()","b54419e0":"df.isnull().sum()","de7b9bca":"df.shape","2c781ce9":"df['Date']=pd.to_datetime(df['Date'], format='%Y-%m-%d')","870afd93":"df.set_index('Date',inplace=True)","084778ae":"df['Confirmed'].resample(rule='M').sum().plot(figsize=(25,5))","34c20974":"df['Confirmed'].resample(rule='Q').sum().plot(figsize=(25,5))\nplt.xlabel('Date')\nplt.ylabel('count of Confirmed cases')\nplt.show()","39f3a8c2":"df1=pd.DataFrame()\ndf1=df.drop(columns=['Sno','Time','ConfirmedIndianNational','State\/UnionTerritory','ConfirmedForeignNational','Cured','Deaths'])","ad219b41":"df1['Confirmed'].plot(color='red')\nplt.title('Confirmed cases to analyze the trend')\nplt.show()","1a4e9687":"df.loc['2020-12-03']","b31ac1af":"df_day=df1.resample('D').sum()","33448ab6":"df_day.loc['2020-12-03']","1b8214e9":"from statsmodels.tsa.seasonal import seasonal_decompose\n\nresult = seasonal_decompose(df_day['Confirmed'])\nresult.plot()\nplt.show()","cbd69d29":"def test_stationarity(timeseries):\n    \n    rolmean = timeseries.rolling(12).mean()\n    rolstd = timeseries.rolling(12).std()\n    fig = plt.figure(figsize=(12, 8))\n    orig = plt.plot(timeseries, color='blue',label='Original')\n    mean = plt.plot(rolmean, color='red', label='Rolling Mean')\n    std = plt.plot(rolstd, color='black', label = 'Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show()\n\n    dftest = adfuller(timeseries, autolag='AIC')\n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n              dfoutput['Critical Value (%s)'%key] = value\n    print(dfoutput)","3197e7dd":"test_stationarity(df_day['Confirmed'])","cc2090a9":"df_day['diff1']=df_day['Confirmed']-df_day['Confirmed'].shift(1)\ntest_stationarity(df_day['diff1'].dropna())\n","1f038006":"df_day['diff2']=df_day['Confirmed']-df_day['Confirmed'].shift(2)\ntest_stationarity(df_day['diff2'].dropna())","145e0937":"plot_acf(df_day['diff2'].dropna(),lags=15)\nplt.show()","0b493f69":"plot_pacf(df_day['diff2'].dropna(),lags=15)\nplt.show()","54d3777b":"from statsmodels.tsa.arima.model import ARIMA","7dff5a51":"#Model 1 \narima_model_121 = ARIMA(df_day['Confirmed'].dropna(), order=(1,2,1)).fit()","ba9f032a":"arima_model_121.summary()\n","d43d79d2":"start = df_day.index.get_loc('2020-10-6')\nend = df_day.index.get_loc('2021-05-28')\nprint(start,'to',end)","e2bc45ec":" predict_121= arima_model_121.predict(start=start+1 ,end=end+1, dynamic= False)  \n    ","5435e8df":"#Trying to forecast future values\npred_future_121=arima_model_121.predict(start=len(df_day)+1,end=len(df_day)+(300),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_121))","521d837e":"plt.plot(df_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_121,color='green',label='Testing')\nplt.plot(pred_future_121,color='red',label='pink')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","ab91ca00":"train=df_day[:len(df_day)-(89)]\ntest=df_day[len(df_day)-89:]","242cf12a":" predict_121= arima_model_121.predict(start=len(train) ,end=len(df_day)-1, dynamic= False)  ","9b16a53d":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_121))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_121))\nr2=r2_score(test['Confirmed'],predict_121)\nmse=mean_squared_error(test['Confirmed'],predict_121)\nmae=mean_absolute_error(test['Confirmed'],predict_121)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","99602526":"#Model 2\narima_model_221 = ARIMA(df_day['Confirmed'].dropna(), order=(2,2,1)).fit()\n","1b66245c":"arima_model_221.summary()","1170eb7c":"start = df_day.index.get_loc('2020-10-6')\nend = df_day.index.get_loc('2021-05-28')\nprint(start,'to',end)","4d69c645":" predict_221= arima_model_221.predict(start=start+1 ,end=end+1, dynamic= False)  ","9f27e82a":"#Trying to forecast future values\npred_future_221=arima_model_221.predict(start=len(df_day)+1,end=len(df_day)+(300),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_221))\n","8f26ad5e":"plt.plot(df_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_221,color='green',label='Testing')\nplt.plot(pred_future_221,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","c6092d31":" predict_221= arima_model_221.predict(start=len(train) ,end=len(df_day)-1, dynamic= False)  ","4f5aa2bd":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_221))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_221))\nr2=r2_score(test['Confirmed'],predict_221)\nmse=mean_squared_error(test['Confirmed'],predict_221)\nmae=mean_absolute_error(test['Confirmed'],predict_221)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","1b283114":"# Identifying Best Suitable model \nauto_arima_model=auto_arima(df_day['Confirmed'],trace=True,Supress_warnings=True)","bf6397a4":"#Best Model \narima_model_122 = ARIMA(df_day['Confirmed'].dropna(), order=(1,2,2)).fit()","5e1d0748":"arima_model_122.summary()","fdb29092":"start = df_day.index.get_loc('2020-10-6')\nend = df_day.index.get_loc('2021-05-28')\nprint(start,'to',end)","ccf4d1f6":" predict_122= arima_model_122.predict(start=start+1 ,end=end+1, dynamic= False)  ","9830481e":"#Trying to forecast future values\npred_future_122=arima_model_122.predict(start=len(df_day)+1,end=len(df_day)+(200),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_122))","1a155b67":"plt.plot(df_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_122,color='green',label='Testing')\nplt.plot(pred_future_122,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","9ceb28ca":" predict_122= arima_model_122.predict(start=len(train) ,end=len(df_day)-1, dynamic= False)  ","6570008c":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nr2=r2_score(test['Confirmed'],predict_122)\nmse=mean_squared_error(test['Confirmed'],predict_122)\nmae=mean_absolute_error(test['Confirmed'],predict_122)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","5eb970dd":"df1=pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')","5de4e6ae":"df_developed_=df1.drop(columns=['ConfirmedIndianNational','ConfirmedForeignNational','Cured','Deaths','Time','Sno'])","34ab9b42":"df_developed_.head(3)","b1cbc0fd":"df_developed_.tail(3)","e6e46981":"Mh=df_developed_[df_developed_['State\/UnionTerritory']=='Maharashtra']\nTn=df_developed_[df_developed_['State\/UnionTerritory']=='Tamil Nadu']\nGj=df_developed_[df_developed_['State\/UnionTerritory']=='Gujarat']\nMp=df_developed_[df_developed_['State\/UnionTerritory']=='Madhya Pradesh']\nWb=df_developed_[df_developed_['State\/UnionTerritory']=='West Bengal']\nRj=df_developed_[df_developed_['State\/UnionTerritory']=='Rajasthan']\nAp=df_developed_[df_developed_['State\/UnionTerritory']=='Andhra Pradesh']\nKn=df_developed_[df_developed_['State\/UnionTerritory']=='Karnataka']\nTs=df_developed_[df_developed_['State\/UnionTerritory']=='Telengana']\nKl=df_developed_[df_developed_['State\/UnionTerritory']=='Kerala']\nHr=df_developed_[df_developed_['State\/UnionTerritory']=='Haryana']\nDl=df_developed_[df_developed_['State\/UnionTerritory']=='Delhi']\nUt=df_developed_[df_developed_['State\/UnionTerritory']=='Uttar Pradesh']\nGoa=df_developed_[df_developed_['State\/UnionTerritory']=='Goa']","58d069e5":"df['State\/UnionTerritory'].unique()","e45255dd":"with plt.xkcd():\n  fig, ax=plt.subplots(nrows=4, ncols=3, figsize=(8,8), squeeze=False, sharex=True, sharey=False, constrained_layout=True )\n  sns.kdeplot(data=Tn['Confirmed'],ax=ax[0,0],fill=True)\n  ax[0,0].set_title('Tamil Nadu')\n  sns.kdeplot(data=Mh['Confirmed'],ax=ax[0,1],fill=True)\n  ax[0,1].set_title('Maharashtra')\n  sns.kdeplot(data=Gj['Confirmed'],ax=ax[0,2],fill=True)\n  ax[0,2].set_title('Gujarat')\n\n  ax[1,0].set_title('Madhya pradesh')\n  sns.kdeplot(data=Mp['Confirmed'],ax=ax[1,0],fill=True)\n  ax[1,1].set_title('West Bengal')\n  sns.kdeplot(data=Wb['Confirmed'],ax=ax[1,1],fill=True)\n  ax[1,2].set_title('Rajasthan')\n  sns.kdeplot(data=Rj['Confirmed'],ax=ax[1,2],fill=True)\n\n  ax[2,0].set_title('Andhra Pradesh')\n  sns.kdeplot(data=Ap['Confirmed'],ax=ax[2,0],fill=True)\n  ax[2,1].set_title('Telengana')\n  sns.kdeplot(data=Ts['Confirmed'],ax=ax[2,1],fill=True)\n  ax[2,2].set_title('Karnataka')\n  sns.kdeplot(data=Kn['Confirmed'],ax=ax[2,2],fill=True)\n\n  \n  ax[3,0].set_title('Kerala')\n  sns.kdeplot(data=Kl['Confirmed'],ax=ax[3,0],fill=True)\n  ax[3,1].set_title('Haryana')\n  sns.kdeplot(data=Hr['Confirmed'],ax=ax[3,1],fill=True)\n  ax[3,2].set_title('Delhi')\n  sns.kdeplot(data=Dl['Confirmed'],ax=ax[3,2],fill=True)\n\n  plt.show()","3c0ccf42":"states=['Maharashtra','Tamil Nadu','Gujarat','Madhya Pradesh','West Bengal','Rajasthan','Andhra Pradesh','Karnataka','Telengana','Kerala','Haryana','Delhi','Uttar Pradesh','Goa']","9174305a":"df_developed_=df_developed_[df_developed_['State\/UnionTerritory'].isin(states)]","ff6ceb96":"df_developed_['State\/UnionTerritory'].unique()","024f2420":"df_developed_.head(3)","9a70abfe":"df_developed_.tail(3)","8f814e5b":"len(df_developed_)","df924714":"df_developed_.drop(columns=['State\/UnionTerritory'],inplace=True)","f08f20b1":"df_developed_['Date']=pd.to_datetime(df_developed_['Date'], format='%Y-%m-%d')","596f64bd":"df_developed_.set_index('Date',inplace=True)","83e03ac5":"df_developed_day=df_developed_.resample('D').sum()","2240c48e":"result = seasonal_decompose(df_developed_day['Confirmed'])\nresult.plot()\nplt.show()","d6a4aa7c":"test_stationarity(df_developed_day['Confirmed'])","35a478ca":"df_developed_day['diff1']=df_developed_day['Confirmed']-df_developed_day['Confirmed'].shift(1)\ntest_stationarity(df_developed_day['diff1'].dropna())\n","b3041cee":"df_developed_day['diff2']=df_developed_day['Confirmed']-df_day['Confirmed'].shift(2)\ntest_stationarity(df_developed_day['diff2'].dropna())","d4796c2b":"df_developed_day['diff3']=df_developed_day['Confirmed']-df_day['Confirmed'].shift(3)\ntest_stationarity(df_developed_day['diff3'].dropna())","fc9165e4":"df_developed_day['log_c']= df_developed_day['Confirmed'].apply(lambda x: np.log(x))  \ntest_stationarity(df_developed_day.log_c)","cb366292":"plot_acf(df_developed_day['log_c'].dropna(),lags=15)\nplt.show()","c7762062":"plot_pacf(df_developed_day['log_c'],lags=15)\nplt.show()","53ff7b0b":"train=df_developed_day[:len(df_day)-(89)]\ntest=df_developed_day[len(df_day)-89:]","b82e95f0":"len(df_developed_day)","c8279676":"#Model 1\narima_model_221 = ARIMA(df_developed_day['log_c'].dropna(), order=(2,2,1)).fit()","343d5aa5":"arima_model_221.summary()","dad240e6":"start = df_day.index.get_loc('2021-05-13')\nend = df_day.index.get_loc('2021-06-01')\nprint(start,'to',end)","7c115617":" predict_221= arima_model_221.predict(start=start+1 ,end=end+1, dynamic= False)  ","85b29ffc":"#Trying to forecast future values\npred_future_221=arima_model_221.predict(start=len(df_developed_day)+1,end=len(df_developed_day)+(300),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_221))","ced714e6":"plt.plot(df_developed_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_221,color='green',label='Testing')\nplt.plot(pred_future_221,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","d361b5aa":" predict_221= arima_model_221.predict(start=len(train) ,end=len(df_developed_day)-1, dynamic= False)  ","79bc33be":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_221))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_221))\nr2=r2_score(test['Confirmed'],predict_221)\nmse=mean_squared_error(test['Confirmed'],predict_221)\nmae=mean_absolute_error(test['Confirmed'],predict_221)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","c98d53df":"# Identifying Best Suitable model \nauto_arima_model=auto_arima(df_developed_day['log_c'],trace=True,Supress_warnings=True)","525ff0ca":"#Best Model \narima_model_321= ARIMA(df_developed_day['log_c'], order=(3,2,1)).fit()","376145fd":"arima_model_321.summary()","89f4440c":"start = df_day.index.get_loc('2021-05-13')\nend = df_day.index.get_loc('2021-06-01')\nprint(start,'to',end)","428fc48c":" predict_321= arima_model_321.predict(start=start+1 ,end=end+1, dynamic= False)  ","962a5873":"#Trying to forecast future values\npred_future_321=arima_model_321.predict(start=len(df_developed_day)+1,end=len(df_developed_day)+(250),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_321))\n","4d6dc722":"plt.plot(df_developed_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_321,color='yellow',label='Testing')\nplt.plot(pred_future_321,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","10bf8981":" predict_321= arima_model_321.predict(start=len(train) ,end=len(df_developed_day)-1, dynamic= False)  ","3e452c6c":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_321))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_321))\nr2=r2_score(test['Confirmed'],predict_321)\nmse=mean_squared_error(test['Confirmed'],predict_321)\nmae=mean_absolute_error(test['Confirmed'],predict_321)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","ed3d78aa":"# Identifying Best Suitable model \nauto_arima_model=auto_arima(df_developed_day['Confirmed'],trace=True,Supress_warnings=True)","6e1d30b5":"#Best Model \narima_model_122 = ARIMA(df_developed_day['Confirmed'], order=(1,2,2)).fit()","ed058664":"arima_model_122.summary()","395f40a5":"start = df_day.index.get_loc('2021-05-13')\nend = df_day.index.get_loc('2021-06-01')\nprint(start,'to',end)","c84c8a54":" predict_122= arima_model_122.predict(start=start+1 ,end=end+1, dynamic= False)  ","ff88fb2f":"#Trying to forecast future values\npred_future_122=arima_model_122.predict(start=len(df_developed_day)+1,end=len(df_developed_day)+(300),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_122))","0da08bf0":"plt.plot(df_day['Confirmed'],color='blue',label='Original')\nplt.plot(predict_122,color='yellow',label='Testing')\nplt.plot(pred_future_122,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","7b299a68":" predict_122= arima_model_122.predict(start=len(train) ,end=len(df_developed_day)-1, dynamic= False)  ","87ac78d9":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nr2=r2_score(test['Confirmed'],predict_122)\nmse=mean_squared_error(test['Confirmed'],predict_122)\nmae=mean_absolute_error(test['Confirmed'],predict_122)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","2038ffc3":"df2=pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')","b2dca745":"df_developing_=df2.drop(columns=['ConfirmedIndianNational','ConfirmedForeignNational','Cured','Deaths','Time','Sno'])","770b485f":"df_developing_.shape\n","8e3f4038":"Miz=df_developing_[df_developing_['State\/UnionTerritory']=='Mizoram']\nTirp=df_developing_[df_developing_['State\/UnionTerritory']=='Tripura']\nPj=df_developing_[df_developing_['State\/UnionTerritory']=='Punjab']\nOd=df_developing_[df_developing_['State\/UnionTerritory']=='Odisha']\nAsm=df_developing_[df_developing_['State\/UnionTerritory']=='Assam']\nMani=df_developing_[df_developing_['State\/UnionTerritory']=='Manipur']\n","6726bd6a":"\n\nwith plt.xkcd():\n  fig, ax=plt.subplots(nrows=3, ncols=2, figsize=(8,8), squeeze=False, sharex=True, sharey=False, constrained_layout=True )\n  sns.kdeplot(data=Miz['Confirmed'],ax=ax[0,0],fill=True)\n  ax[0,0].set_title('Mizoran')\n  sns.kdeplot(data=Tirp['Confirmed'],ax=ax[0,1],fill=True)\n  ax[0,1].set_title('Tripura')\n  sns.kdeplot(data=Pj['Confirmed'],ax=ax[1,0],fill=True)\n  ax[1,0].set_title('Punjab')\n\n  ax[1,1].set_title('Odisha')\n  sns.kdeplot(data=Od['Confirmed'],ax=ax[1,1],fill=True)\n  ax[2,0].set_title('Assam')\n  sns.kdeplot(data=Asm['Confirmed'],ax=ax[2,0],fill=True)\n  ax[2,1].set_title('Manipur')\n  sns.kdeplot(data=Mani['Confirmed'],ax=ax[2,1],fill=True)\n  plt.show()","5eb17809":"states=['Mizoram','Tripura','Punjab','Odisha','Assam','Manipur']","5708bbe0":"df_developing_=df_developing_[df_developing_['State\/UnionTerritory'].isin(states)]","1fa18b75":"df_developing_.shape","9450fdfc":"df_developing_['State\/UnionTerritory'].unique()","eea80467":"df_developing_.drop(columns=['State\/UnionTerritory'],inplace=True)","db18b0ac":"df_developing_['Date']=pd.to_datetime(df_developing_['Date'], format='%Y-%m-%d')","ac7271f6":"df_developing_.set_index('Date',inplace=True)","184a3c41":"df_developing_=df_developed_.resample('D').sum()","26aa52d5":"result = seasonal_decompose(df_developing_['Confirmed'])\nresult.plot()\nplt.show()","fb9dd790":"test_stationarity(df_developing_['Confirmed'])","62f5f76f":"df_developing_['diff1']=df_developing_['Confirmed']-df_developing_['Confirmed'].shift(1)\ntest_stationarity(df_developing_['diff1'].dropna())","357de2a7":"df_developing_['diff2']=df_developing_['Confirmed']-df_developing_['Confirmed'].shift(2)\ntest_stationarity(df_developing_['diff2'].dropna())","96fe72cc":"df_developing_['diff3']=df_developing_['Confirmed']-df_developing_['Confirmed'].shift(3)\ntest_stationarity(df_developing_['diff3'].dropna())","325e50ba":"plot_acf(df_developing_['diff2'].dropna(),lags=15)\nplt.show()","3e1718fa":"plot_pacf(df_developing_['diff2'].dropna(),lags=15)\nplt.show()","f6097096":"# Identifying Best Suitable model \nauto_arima_model=auto_arima(df_developing_['Confirmed'],trace=True,Supress_warnings=True)","2039ee33":"#Best Model \narima_model_122 = ARIMA(df_developing_['Confirmed'], order=(1,2,2)).fit()","8635fae9":"arima_model_122.summary()","bc166519":"start = df_day.index.get_loc('2021-05-13')\nend = df_day.index.get_loc('2021-06-01')\nprint(start,'to',end)","decb82f8":" predict_122= arima_model_122.predict(start=start+1 ,end=end+1, dynamic= False)  ","61ebf257":"#Trying to forecast future values\npred_future_122=arima_model_122.predict(start=len(df_developing_)+1,end=len(df_developing_)+(300),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_122))","31ce8ee0":"plt.plot(df_developing_['Confirmed'],color='blue',label='Original')\nplt.plot(predict_122,color='green',label='Testing')\nplt.plot(pred_future_122,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","f3fc62ff":"train=df_developed_day[:len(df_day)-(89)]\ntest=df_developed_day[len(df_day)-89:]","8ea4a023":"len(df_developing_)","74e72822":" predict_122= arima_model_122.predict(start=len(train) ,end=len(df_developing_)-1, dynamic= False)  ","7daf166d":"rmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nrmse=sqrt(mean_squared_error(test['Confirmed'],predict_122))\nr2=r2_score(test['Confirmed'],predict_122)\nmse=mean_squared_error(test['Confirmed'],predict_122)\nmae=mean_absolute_error(test['Confirmed'],predict_122)\nprint('rmse:',rmse)\nprint('r2_score:',r2)\nprint('Mean_absolute_error:',mae)\nprint('Mean squared error:',mse)","9947b114":"#Trying to forecast future values\npred_future_500=arima_model_122.predict(start=len(df_developing_)+1,end=len(df_developing_)+(500),dynamic=False)\nprint(\"The length of pred_future values :\",len(pred_future_500))","7ade0a45":"plt.plot(df_developing_['Confirmed'],color='blue',label='Original')\nplt.plot(predict_122,color='green',label='Testing')\nplt.plot(pred_future_500,color='red',label='Predicted')\nplt.xticks(rotation=45)\nplt.legend()\nplt.show()","a72f4112":"**Analyzing the raise of cases on monthly basis**\n\nTo analyze the confirmed cases on monthly basis we need to resample the data on monthly basis.\n\n\n","503553a8":"**Forcasting model for next 300 days i.e, approximately for next 8 months.**\n","07256d15":"By using seasonal decomposition we will be able to find the trend, Seasonal and Residual error components in data.","81594b20":"**Traing & Testing  the model**","f76f96cb":"Test Stationarity function helps us to stationarity in data by find the mean, standard deviation are constant or not over time. We will also adfuller test to check stationarity by using p-value if p-value is less 5% then it statisfies the null hypothesis and stationarity is present in data.\n\n---\n\n","8bffdda2":"**After resampling we will be able to the total number of confirmed cases in India**","14b2b220":"**Plotting acf and pacf**","77c1a40d":"**Plotting pacf and acf**","b1365f58":"**Fitting Approximate models**","313f0880":"**Seasonal Decomposition**","8c4bff16":"**Checking Stationarity**","de9cb018":"**Forecasting the impact of Covid-19 in developed states in India**","58946f37":"The Six most developing states in India are\n\nThey are\n*  Mizoram\n* Tripura\n* Punjab\n* Odisha\n* Assam\n*Manipur\n\n\nSo, initially we will be trying to study the impact of covid-19 cases in developed states of India. \n\nThe list was taken based on the data avilable in the link given below.\n\n\nhttps:\/\/statisticstimes.com\/economy\/india\/indian-states-gdp-growth.php","943019ba":"**Analyzing the confirmed cases on Quaterly basis**","3d174040":"**Seasonal Decomposition**","981e2f35":"**Pacf plot helps us to identify the approximate value of auto regressive model term used for the model. In some cases it can also be used to find the seasonality.**","d7ec6105":"After resmapling the data month wise we were able analyze the increase of covid 19 confirmed cases after the July 2020.","926b1479":"There is raise in covid 19 cases after third quater in 2020 and there is a huge raise after the first quater 2021. ","80ab3ba5":"****Forecasting the impact of Covid-19 in developing states in India****","6c66dce2":"After plotting seasonal decomposition plot we will be knowing data consist of trend component in it.\n","66f9baff":"**Dataset  consists of repeated number of tupes on a same date in different states. Our main objective is to analyze the confirmed cases in India so we will try to perform resampling on day wise sum (total number of confirmed cases)**","9be7ec6d":"Basing on the gdp per captia in there are 14 developed states.\n\n\nThey are\n*  Maharashtra\n*  Tamil Nadu\n*  Gujarat\n*  Karnataka\n*  Uttar Pradesh\n*  West Bengal\n* Delhi\n*  Rajasthan\n*  Andhra Pradesh\n* Telangana\n* Kerala\n* Haryana\n* Madhya Pradesh\n* Goa\n\nSo, initially we will be trying to study the impact of covid-19 cases in developed states of India. \n\nThe list was taken based on the data avilable in the link given below.\n\n\nhttps:\/\/www.innfinity.in\/limitless\/most-developed-state-in-india\/","ddc55df3":"**The acf helps us to identify the approximate values of moving average term used for the model.**"}}