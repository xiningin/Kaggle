{"cell_type":{"367e188a":"code","6c07e5f6":"code","214ce174":"code","ca4ed588":"code","f6a1893b":"code","5d2a8c52":"code","9f4f96cd":"code","abdf722e":"code","ea16e044":"code","fb2cc1e3":"code","f732d828":"code","7723f25f":"code","6016042e":"code","829ef73b":"code","22f11dcd":"code","ae288d9a":"markdown","67bd4b44":"markdown","86134cdd":"markdown","b0e735f4":"markdown","a5a1b286":"markdown","ef5e09cf":"markdown"},"source":{"367e188a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","6c07e5f6":"df = pd.read_csv(\"..\/input\/Wine.csv\")\ndf.sample(7)","214ce174":"df.columns","ca4ed588":"df.info()","f6a1893b":"df.describe()","5d2a8c52":"X = df.iloc[:,0:13].values\ny = df.iloc[:,13].values","9f4f96cd":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state=0)","abdf722e":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(x_train)\nX_test = sc.fit_transform(x_test)","ea16e044":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(random_state = 0)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)","fb2cc1e3":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)\nprint(\"This confusion matrix without PCA or LDA. \")\nprint(cm)","f732d828":"from sklearn.decomposition import PCA\npca = PCA(n_components = 2) # we are reducing, but to how many components? 2.\nX_trainPCA = pca.fit_transform(X_train)\nX_testPCA = pca.transform(X_test)","7723f25f":"model = LogisticRegression(random_state = 0)\nmodel.fit(X_trainPCA, y_train)\ny_predPCA = model.predict(X_testPCA)","6016042e":"cmPCA = confusion_matrix(y_test,y_predPCA)\nprint(\"This confusion matrix with PCA.\")\nprint(cmPCA)","829ef73b":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\nlda = LDA(n_components = 2) # Again choosed 2 component.\nX_train_LDA = lda.fit_transform(X_train, y_train)\nX_test_LDA = lda.transform(X_test)","22f11dcd":"modelLDA = LogisticRegression(random_state = 0)\nmodelLDA.fit(X_train_LDA, y_train)\ny_predLDA = modelLDA.predict(X_test_LDA)\ncmLDA = confusion_matrix(y_test, y_predLDA)\nprint(\"This confusion matrix with LDA.\")\nprint(cmLDA)","ae288d9a":"### 3- With PCA Logistic Regression Application","67bd4b44":"### 4- With LDA Logistic Regression Application","86134cdd":"### 2- Plain Logistic Regression Application","b0e735f4":"-------------------------------------------------------------------------------------------------------------------------------","a5a1b286":"## - Introduction\n### 1- Import and Meet Dataset\n### 2- Plain Logistic Regression Application\n### 3- With PCA Logistic Regression Application\n### 4- With LDA Logistic Regression Application","ef5e09cf":"## 1 - Import and Meet Dataset"}}