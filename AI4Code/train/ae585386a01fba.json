{"cell_type":{"86139925":"code","a1dc2a63":"code","decd0f34":"code","fecad71e":"code","1b2dc844":"code","7d0e9d28":"code","ac896098":"code","9963e91c":"code","ff6a26bc":"markdown","093d3846":"markdown","c4aec534":"markdown","948b27a3":"markdown","6489ee47":"markdown","59bb1f11":"markdown","6cd466f9":"markdown"},"source":{"86139925":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom pathlib import Path\n\n#ui\nimport matplotlib.pyplot as plt\n\n#gc\nimport gc \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a1dc2a63":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\nfrom IPython.display import clear_output\n!pip install keras-ocr --user\nclear_output()\n\nimport keras_ocr","decd0f34":"path = Path('..\/input\/fromages-images\/Caillebotte fromage')\nfilepaths = list(path.glob(r'**\/*.jpg'))\nfilepaths = filepaths[:20] # total data size only 38?? \ngc.collect()","fecad71e":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\ncolumn_filepath = pd.Series(filepaths, name='image_path').astype(str)\ntrain = pd.DataFrame(column_filepath)\ntrain= train.sample(frac = 1).reset_index(drop=True) # all shuffle \ntrain.head()","1b2dc844":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\nf,a = plt.subplots(nrows=2, ncols=3,figsize=(15, 10),\n                        subplot_kw={'xticks': [], 'yticks': []})\n\nfor i, ax in enumerate(a.flat):\n    path = train.iloc[i][\"image_path\"]\n    print(\"path=\",path)\n    ax.imshow(keras_ocr.tools.read(path))\n    ax.set_title(\"image\")\n    \nplt.tight_layout()\nplt.show()","7d0e9d28":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\nimage_path_list = train[:3][\"image_path\"]\nimages = [ keras_ocr.tools.read(image_path) for image_path in image_path_list]\n\ngc.collect() ","ac896098":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\npipeline = keras_ocr.pipeline.Pipeline() \nkeras_ocr_preds = pipeline.recognize(images)\n\ngc.collect()","9963e91c":"#Code by Blue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage\n\nfig,axs = plt.subplots(nrows = 3 , figsize = (10,10))\nfor ax , image,  pred in zip(axs , images , keras_ocr_preds):\n    keras_ocr.tools.drawAnnotations(image, pred, ax)\n    \ngc.collect()","ff6a26bc":"#Showing six images","093d3846":"#Your notebook tried to allocate more memory than is available. It has restarted.","c4aec534":"#Changed nrows to 3. the original was 6. ","948b27a3":"#Convert to dataframe and shuffle","6489ee47":"#I changed train :6 to :3 To avoid Error: \"Your notebook tried to allocate more memory than is available.\"","59bb1f11":"#Getting image data using keras_ocr","6cd466f9":"#Acknowledgement:\n\nBlue7Red https:\/\/www.kaggle.com\/rhythmcam\/ocr-basic-keras-ocr-usage"}}