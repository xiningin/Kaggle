{"cell_type":{"136679d8":"code","5e054558":"code","8a6d9413":"code","588f5a41":"code","e3774774":"code","3ee910c2":"code","855a8d49":"code","3533b4e4":"code","36899e70":"code","012addf6":"code","8772d246":"code","c577f116":"code","5397b476":"code","80284133":"code","150e37bc":"code","0c127e28":"code","df168744":"code","2981156b":"code","2ff5e7a1":"code","0c434b48":"code","a7951517":"code","49c5fe2f":"code","69ef172c":"code","b60dd2a6":"code","220d0252":"code","aa31e086":"code","bf539082":"code","5b642902":"code","7455e112":"code","5fe1623a":"markdown","82181b84":"markdown","425253bc":"markdown","366b4cc6":"markdown","7023256a":"markdown","43691f2e":"markdown","0f2cad25":"markdown","e8019f6a":"markdown","91030ca6":"markdown","2b1aa336":"markdown","cef176cf":"markdown","10d15a8c":"markdown","9ace7d33":"markdown","0f4abfa3":"markdown","65774779":"markdown","f1677077":"markdown","b7b112b1":"markdown","b65fa046":"markdown","033ffb1d":"markdown","c741ce12":"markdown","61382bdb":"markdown","3428450a":"markdown","53d95721":"markdown","5c2214db":"markdown","1b6f83a2":"markdown","46e298b1":"markdown","6d48cb7b":"markdown","9cae66b8":"markdown","5786fcb0":"markdown","c30bd149":"markdown"},"source":{"136679d8":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\ndf=pd.read_csv('..\/input\/usa-national-names\/NationalNames.csv')\n","5e054558":"df.drop_duplicates(\"Name\")\n","8a6d9413":"df.columns","588f5a41":"df.head","e3774774":"df.columns","3ee910c2":"print(df['Gender'])\nm=0\nf=0\nfor x in range(len(df['Gender'])):\n    if(df['Gender'][x]=='F'):\n        f+=1\n    else:\n        m+=1","855a8d49":"print(\"The number of females are \"+(str)(f))\nprint(\"The number of males are \"+(str)(m))","3533b4e4":"import matplotlib.pyplot as plt\nimport matplotlib as mp\n\nfig, ax = plt.subplots(figsize=(25,12))\nax.bar([\"Males\",\"Females\"],[m,f],color=['Brown','Pink'])\nplt.title(\"% of MALES vs FEMALES in our dataset\")\nplt.xticks(rotation=90)\nplt.show()\n\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['MALES','FEMALES']\nax1.pie([f,m], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=[\"blue\",\"pink\"])\nax1.set_title(\"% of MALES vs FEMALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","36899e70":"def checkVowelEnd(name):\n    if name[-1] in \"aeiou\":\n        return \"Vowel End\"\n    return \"Consonant End\"\ndf[\"Vowel\/Consonant End\"] = df[\"Name\"].apply(checkVowelEnd)\ndf.head()","012addf6":"vend=0\nmend=0\nfor x in range(len(df['Gender'])):\n                      \n    if(df['Gender'][x]=='F' and df['Vowel\/Consonant End'][x]=='Vowel End'):\n        vend+=1\n    if(df['Gender'][x]=='M' and df['Vowel\/Consonant End'][x]=='Vowel End'):\n        mend+=1\nimport matplotlib.pyplot as plt\nimport matplotlib as mp\n\n\nfig, ax = plt.subplots(figsize=(25,12))\nax.bar(['FEMALES WITH NAMES ENDING WITH VOWEL','FEMALES WITH NAMES ENDING WITH CONSONANT'],[vend,f-vend],color=['Red','Pink'])\nplt.title(\"Analysis of FEMALES in our dataset\")\nplt.xticks(rotation=90)\nplt.show()\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['FEMALES WITH NAMES ENDING WITH VOWEL','FEMALES WITH NAMES ENDING WITH CONSONANT']\nax1.pie([vend,f-vend], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=[\"blue\",\"pink\"])\nax1.set_title(\"Analysis of FEMALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n\n\n\nfig, ax = plt.subplots(figsize=(25,12))\nax.bar(['MALES WITH NAMES ENDING WITH VOWEL','MALES WITH NAMES ENDING WITH CONSONANT'],[mend,m-vend],color=['Orange','Yellow'])\nplt.title(\"Analysis of MALES in our dataset\")\nplt.xticks(rotation=90)\nplt.show()\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['MALES WITH NAMES ENDING WITH VOWEL','MALES WITH NAMES ENDING WITH CONSONANT']\nax1.pie([mend,m-mend], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=[\"blue\",\"Red\"])\nax1.set_title(\"Analysis of MALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","8772d246":"def vowelConsonantStart(name):\n    \n    if name[0] in \"aeiou\" or name[0] in \"AEIOU\":\n        return \"Vowel Start\"\n    return \"Consonant Start\"\n\ndf[\"Vowel\/Consonant Start\"] = df[\"Name\"].apply(vowelConsonantStart)\n\n\ndf.head()","c577f116":"fcnst=0\nfvst=0\nmvst=0\nmcnst=0\nfor x in range(len(df['Gender'])):\n                      \n    if(df['Gender'][x]=='F' and df['Vowel\/Consonant Start'][x]=='Consonant Start'):\n        fcnst+=1\n    if(df['Gender'][x]=='F' and df['Vowel\/Consonant Start'][x]=='Vowel Start'):\n        fvst+=1\n    if(df['Gender'][x]=='M' and df['Vowel\/Consonant Start'][x]=='Consonant Start'):\n        mcnst+=1\n    if(df['Gender'][x]=='M' and df['Vowel\/Consonant Start'][x]=='Vowel Start'):\n        mvst+=1\nprint(\"Males with names starting with vowels\"+(str)(mvst))\nprint(\"Males with names starting with consonant\"+(str)(mcnst))\nprint(\"Females with names starting with vowels\"+(str)(fvst))\nprint(\"Females with names starting with consonant\"+(str)(fcnst))\n\n\n\n\n    \n        \n    ","5397b476":"print(\"% Males with names starting with vowels    \"+(str)(mvst*100\/m))\nprint(\"% Males with names starting with consonant   \"+(str)(mcnst*100\/m))\nprint(\"% Females with names starting with vowels   \"+(str)(fvst*100\/f))\nprint(\"% Females with names starting with consonant   \"+(str)(fcnst*100\/f))","80284133":"fig, ax = plt.subplots(figsize=(25,12))\nax.bar(['FEMALES WITH NAMES STARTING WITH A VOWEL','FEMALES WITH NAMES STARTING WITH CONSONANT'],[fvst,f-fvst],color=['Red','Pink'])\nplt.title(\"Analysis of FEMALES in our dataset\")\nplt.xticks(rotation=90)\nplt.show()\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['FEMALES WITH NAMES STARTING WITH A VOWEL','FEMALES WITH NAMES STARTING WITH CONSONANT']\nax1.pie([fvst,f-fvst], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=[\"blue\",\"pink\"])\nax1.set_title(\"Analysis of FEMALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","150e37bc":"fig, ax = plt.subplots(figsize=(25,12))\nax.bar(['MALES WITH NAMES STARTING WITH A VOWEL','MALES WITH NAMES STARTING WITH CONSONANT'],[mvst,m-mvst],color=['Orange','Yellow'])\nplt.title(\"Analysis of MALES in our dataset\")\nplt.xticks(rotation=90)\nplt.show()\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['MALES WITH NAMES STARTING WITH A VOWEL','MALES WITH NAMES STARTING WITH CONSONANT']\nax1.pie([mvst,m-mvst], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=['Orange','Yellow'])\nax1.set_title(\"Analysis of MALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","0c127e28":"avg_length=0\nfor x in df['Name']:\n    avg_length=avg_length+len(x)\navg_length=avg_length\/len(df['Name'])\nprint(\" The average length of names for our dataset is:-\"+(str)(avg_length))","df168744":"vsl=0\nmsl=0\ndef shortLongName(name):\n    if len(name) < 7:\n        return \"Short\"\n    return \"Long\"\n\ndf[\"Short\/Long Name\"] = df[\"Name\"].apply(shortLongName)\n\n\n\n\n\n\n        ","2981156b":"df","2ff5e7a1":"for x in range(len(df['Gender'])):\n    if(df['Gender'][x]=='F' and df['Short\/Long Name'][x]==\"Short\" ):\n        vsl+=1\n    if(df['Gender'][x]=='M' and df['Short\/Long Name'][x]==\"Short\" ):\n        msl+=1\nprint(\"Males with length of name above 7 = \"+(str)(m-msl))\nprint(\"Males with length of name less than 7 = \"+(str)(msl))\nprint(\"FeMales with length of name above 7 = \"+(str)(f-vsl))\nprint(\"FeMales with length of name less than 7 = \"+(str)(vsl))\n","0c434b48":"fig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['MALES WITH NAMES WITH LENGTH LESS THAN 7','MALES WITH NAMES WITH LENGTH MORE THAN 7']\nax1.pie([msl,m-msl], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=['Orange','Yellow'])\nax1.set_title(\"Analysis of MALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n\n\n\nfig1, ax1 = plt.subplots(figsize=(20,10))\nnames=['FEMALES WITH NAMES WITH LENGTH LESS THAN 7','FEMALES WITH NAMES WITH LENGTH MORE THAN 7']\nax1.pie([vsl,f-vsl], labels=names, autopct='%1.1f%%',\n        shadow=True, startangle=90,frame=True,colors=['Pink','Red'])\nax1.set_title(\"Analysis of FeMALES in our dataset\")\n\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n\n\n\n\n","a7951517":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\ndf['Gender']=pd.get_dummies(df['Gender'])\n","49c5fe2f":"import pandas as pd\ndf['Vowel\/Consonant End']=pd.get_dummies(df['Vowel\/Consonant End'])\ndf['Short\/Long Name']=pd.get_dummies(df['Short\/Long Name'])\ndf['Vowel\/Consonant Start']=pd.get_dummies(df['Vowel\/Consonant Start'])","69ef172c":"df","b60dd2a6":"trains=df[['Gender','Vowel\/Consonant End','Short\/Long Name']]\ntrains.head\n\ntrain, test = train_test_split(trains, test_size = 0.20)","220d0252":"clf = DecisionTreeClassifier()\nclf.fit(train[['Vowel\/Consonant End','Short\/Long Name']],train[['Gender']])\nres=clf.predict(test[['Vowel\/Consonant End','Short\/Long Name']])\nprint(res)","aa31e086":"accuracy_score(test[\"Gender\"], res)","bf539082":"from sklearn import tree\nwith open(\"\/kaggle\/working\/decidenames.dot\", \"w\") as dot_file:\n    dot_file = tree.export_graphviz(clf,\n                            feature_names=[\"Vowel\/Consonant End\", \"Short\/Long Name\"], out_file=dot_file)","5b642902":"!dot -Tpng decidenames.dot -o tree_limited.png -Gdpi=600","7455e112":"from IPython.display import Image\nImage(filename = 'tree_limited.png')","5fe1623a":"# It\u2019s now time to visualize our decision tree. We open the decidenames.dot file as..","82181b84":"# We can clearly see that around 70% of females  have their names ending with a vowel and similarly 73% of males have their names ending with a consonant. So this classifying basis is quite appropriate for the analysis and predicting the gender , so we shall keep the column.","425253bc":"The % of consonant starting female names is quite high i.e. 82.4.","366b4cc6":"The dataframe would look something like this after this analysis. \nNow lets see whether this basis is appropriate for classification or not.","7023256a":"Femals names are mostly short in length as compared to male names. Lets check.","43691f2e":"# One last basis could be the length of the names.","0f2cad25":"This basis of classification may not be appropriate for the analysis but once we are done , we shall use this too cause it might shoot up the accuracy.\n# But currently we will not be using this basis for our classification","e8019f6a":"Data frame after getting categorical values as dummies.","91030ca6":"![](https:\/\/s3.ap-south-1.amazonaws.com\/techleer\/207.jpg)","2b1aa336":"The % of consonant starting male names is quite high i.e. 82.9  and that of females is also around 80% so we tend to drop this basis of classification.","cef176cf":"# In this classification we would be predicting the gender of a person on the basis of his\/her first name with the help of DecisionTreeClassifier.","10d15a8c":"Lest keep the markdown basis at 7.","9ace7d33":"The difference between the names with short and long lengths is quite high.\n# Thus this can be used as our basis of prediction of gender.","0f4abfa3":"**Currently we shall be using the length and vowel end basis of classification.**","65774779":"Dropping the duplicate names.","f1677077":"The dataFrame would look something like this.","b7b112b1":"# PREDICTION-With the help of *DecisionTreeClassifier.*","b65fa046":"# A decent trend in this analysis maybe this, the names of females often tend to end with a vowel. Lets analyse this\n.","033ffb1d":"Next, we'll select the information that we think is most relevant for our classification. What we want is to pick a column that best represents whether a name is male or female.\n\nUnfortunately, with the existing dataset, there\u2019s no definite way to determine whether a name is male or female, so we should go ahead and create a new column to better classify gender.\nSo lets look for ways on how could we diffrentiate names on basis of gender.","c741ce12":"The dataset basically contains the first names of babies born in USA from 1880 to 2016.","61382bdb":"# Dataset source-\n https:\/\/raw.githubusercontent.com\/andela-iamao\/ML-classifying-genders\/master\/dataset\/NationalNames.csv","3428450a":"# The new data set looks something Like this.","53d95721":"# Classification is a type of supervised learning. It specifies the class to which data elements belong to and is best used when the output has finite and discrete values. It predicts a class for an input variable as well.\n\nThere are 2 types of Classification: \n\n-Binomial\n-Multi-Class\n*Classification: Use Cases*\nSome of the key areas where classification cases are being used:\n\n1-To find whether an email received is a spam or ham\n\n\n2-To identify customer segments\n\n\n3-To find if a bank loan is granted\n\n\n4-To identify if a kid will pass or fail in an examination\n\n\n*Types of Classification Algorithms*\nLet\u2019s have a quick look into the types of Classification Algorithm below.\n\n1-Linear Models\n\n\n-`Logistic Regression\n\n\n-Support Vector Machines\n\n\n2-Nonlinear models\n\n\n-K-nearest Neighbors (KNN)\n\n\n-Kernel Support Vector Machines (SVM)\n\n\n-Na\u00efve Bayes\n\n\n-Decision Tree Classification\n\n\n-Random Forest Classification\n\n\n\n","5c2214db":"In a nutshell, the flow to building this model can be visualized as:\n\nA name => Classifier => Male\/Female","1b6f83a2":"# A quite acceptable accuracy of around 71% is achieved. ","46e298b1":"# *Suggest better classification model or criteria's which can enhance the accuracy in the comment section and do upvote.*","6d48cb7b":"# The accuracy of the model can be enhanced by using more classification techniques and defining more and more basis for the same.","9cae66b8":"# PLEASE UPVOTE AND COMMENT DOWN YOUR SUGGESTIONS. ","5786fcb0":"This dataset contains naming trends for babies born in the United States and is sanitized, but we do have to perform one more cleaning operation, which is what you see on the second line.","c30bd149":"# The next we move over to the analysis of names having a vowel at start."}}