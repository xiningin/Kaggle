{"cell_type":{"b306a8f7":"code","e2bfea71":"code","fcd17feb":"code","31d348a8":"code","6f519865":"code","76b90a1f":"code","68d4255b":"code","1e040d0f":"code","1750e094":"code","98cc96fb":"code","e9693f40":"code","d9a162f8":"code","c7c70d54":"code","c38afa64":"code","ebaea2e0":"code","0da83f96":"code","f78a0ec7":"code","ca8d3770":"code","0c9f9b52":"code","ef2f40b1":"code","92a9c8c5":"code","15609ad6":"code","d90258a5":"code","8aa0bfcb":"code","dbf0583c":"code","96fe70db":"markdown","5c6a92de":"markdown"},"source":{"b306a8f7":"import pandas as pd\nimport difflib\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity","e2bfea71":"movies = pd.read_csv('..\/input\/movie-dataset\/movie_dataset.csv')","fcd17feb":"movies.head()","31d348a8":"movies.shape","6f519865":"pd.set_option(\"Max_columns\",None)","76b90a1f":"movies.columns","68d4255b":"features = ['genres','keywords','tagline','cast','director']","1e040d0f":"movies[features] = movies[features].fillna('')","1750e094":"movies[features].isnull().sum()","98cc96fb":"concatenated_features = movies['genres']+' '+movies['keywords']+' '+movies['tagline']+' '+movies['cast']+' '+movies['director']","e9693f40":"concatenated_features","d9a162f8":"vectorizer = TfidfVectorizer()\nvector = vectorizer.fit_transform(concatenated_features)","c7c70d54":"print(vector)","c38afa64":"cosine = cosine_similarity(vector)","ebaea2e0":"print(cosine)","0da83f96":"cosine.shape","f78a0ec7":"movie_name = input(' Enter your favourite movie name : ')","ca8d3770":"titles = movies['title']\nprint(titles)","0c9f9b52":"nearest_match = difflib.get_close_matches(movie_name, titles)\nprint(nearest_match)","ef2f40b1":"nearest_match = nearest_match[0]\nprint(nearest_match)","92a9c8c5":"index_of_movie = movies[movies.title == nearest_match]['index'].values[0]\nprint(index_of_movie)","15609ad6":"similarity_score = list(enumerate(cosine[index_of_movie]))\nprint(similarity_score)","d90258a5":"sorted_similarity_score = sorted(similarity_score, key = lambda x:x[1], reverse = True) \nprint(sorted_similarity_score)","8aa0bfcb":"print('Top 10 Movie recommendations: \\n')\ni=1\nfor indexx in sorted_similarity_score:\n    indexx= indexx[0]\n    title_by_index=movies[movies.index==indexx]['title'].values[0]\n    if (i<11):\n        print(i,'-',title_by_index)\n        i+=1","dbf0583c":"movie_name = str.capitalize(input(' Enter your favourite movie name : '))\nprint(movie_name)\ntitles = movies['title']\nnearest_match = difflib.get_close_matches(movie_name, titles)\nnearest_match = nearest_match[0]\nindex_of_movie = movies[movies.title == nearest_match]['index'].values[0]\nsimilarity_score = list(enumerate(cosine[index_of_movie]))\nsorted_similarity_score = sorted(similarity_score, key = lambda x:x[1], reverse = True) \nprint('Top 10 Movie recommendations: \\n')\ni=1\nfor indexx in sorted_similarity_score:\n    indexx= indexx[0]\n    title_by_index=movies[movies.index==indexx]['title'].values[0]\n    if (i<11):\n        print(i,'-',title_by_index)\n        i+=1","96fe70db":"## Prediction System","5c6a92de":"# Importing Libraries"}}