{"cell_type":{"8398ceb3":"code","57733fb9":"code","c5b630ea":"code","7e41abe6":"code","f02e9a6c":"code","b8ac96bb":"code","1435f920":"code","3e9663d6":"code","a9dbb236":"code","3ccf1bd5":"code","0f974b71":"code","d6bdc2ee":"code","9e439501":"code","2acda2fe":"code","88aab6e1":"code","5cf76746":"code","dc996280":"code","45e5f273":"code","862ba100":"code","8a9db9e9":"code","68c2cfda":"code","556caaac":"code","7157904c":"code","41f2604f":"code","8e02ec0e":"code","1f486731":"code","37c23bc2":"code","391a3538":"code","57230b56":"code","89ea3727":"code","d9fa0dd1":"code","83de0cb0":"code","6e2d3435":"code","112c6a7f":"code","5b5d51a0":"code","b50916a8":"code","0f1d3c67":"code","9587cbc2":"code","2922670d":"code","e539f040":"code","9cd77610":"code","d9f8b19b":"markdown","e8d5ca9c":"markdown","3608ffcc":"markdown","7221dfe1":"markdown","5825c361":"markdown","4f077d97":"markdown","eb060a17":"markdown","5fd2dd3b":"markdown","d7b37cb4":"markdown","5a48efbb":"markdown","999150b5":"markdown","9f934abe":"markdown","83dd5902":"markdown","9afec98a":"markdown","45355711":"markdown","cd10f103":"markdown","8af5992c":"markdown","72ec1fcc":"markdown","572187ba":"markdown","b133eefb":"markdown","09059775":"markdown"},"source":{"8398ceb3":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\n\nimport warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')","57733fb9":"train = pd.read_csv(r\"S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\train_s3TEQDk.csv\")\ntest = pd.read_csv(r\"S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\test_mSzZ8RL.csv\")","c5b630ea":"train","7e41abe6":"test","f02e9a6c":"train.shape","b8ac96bb":"#ratio of null values\ntrain.isnull().sum()\/train.shape[0] *100","1435f920":"#ratio of null values\ntest.isnull().sum()\/test.shape[0] *100","3e9663d6":"#categorical features\ncategorical = train.select_dtypes(include =[np.object])\nprint(\"Categorical Features in Train Set:\",categorical.shape[1])\n\n#numerical features\nnumerical= train.select_dtypes(include =[np.float64,np.int64])\nprint(\"Numerical Features in Train Set:\",numerical.shape[1])","a9dbb236":"#categorical features\ncategorical = test.select_dtypes(include =[np.object])\nprint(\"Categorical Features in Test Set:\",categorical.shape[1])\n\n#numerical features\nnumerical= test.select_dtypes(include =[np.float64,np.int64])\nprint(\"Numerical Features in Test Set:\",numerical.shape[1])","3ccf1bd5":"train.isnull().sum()","0f974b71":"test.isnull().sum()","d6bdc2ee":"\ntrain['Is_Lead'].value_counts()\n","9e439501":"test['Credit_Product'].value_counts()","2acda2fe":"#Imputing with Mode\ntrain['Credit_Product']= train['Credit_Product'].fillna(train['Credit_Product'].mode()[0])\ntest['Credit_Product']= test['Credit_Product'].fillna(test['Credit_Product'].mode()[0])","88aab6e1":"train['Credit_Product'].isnull().sum(),test['Credit_Product'].isnull().sum()","5cf76746":"plt.figure(figsize=(8,5))\nsns.countplot('Credit_Product',data=train,palette='ocean')","dc996280":"train.columns","45e5f273":"train.head()","862ba100":"plt.figure(figsize=(8,5))\nsns.countplot('Is_Active',data=train,palette='twilight')","8a9db9e9":"plt.figure(figsize=(8,5))\nsns.countplot('Region_Code',data=train,palette='twilight')","68c2cfda":"cor=train.corr()\ncor","556caaac":"plt.figure(figsize=(10,10))\nsns.heatmap(cor,cbar=True,square=True, cmap= 'coolwarm', annot= True)\nplt.show()","7157904c":"train.head()","41f2604f":"# Labelencoding\nle = LabelEncoder()\nvar_mod = train.select_dtypes(include='object').columns\nfor i in var_mod:\n    train[i] = le.fit_transform(train[i])\nfor i in var_mod:\n    test[i] = le.fit_transform(test[i])","8e02ec0e":"\nprediction_var = ['Gender', 'Age', 'Region_Code', 'Occupation', 'Channel_Code',\n       'Vintage', 'Credit_Product', 'Avg_Account_Balance', 'Is_Active']\n\nprediction_var","1f486731":"# Seperate Features and Target\nX = train[prediction_var]\ny= train.Is_Lead","37c23bc2":"X","391a3538":"y","57230b56":"# 30% data as validation set\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=10)","89ea3727":"X.columns","d9fa0dd1":"cv = KFold(n_splits=10, random_state=1, shuffle=True)\n# create model\nmodel = RandomForestClassifier()\n# evaluate model\nscores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)","83de0cb0":"scores","6e2d3435":"model.fit(X,y)","112c6a7f":"y_pred = cross_val_predict(model, X, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)","5b5d51a0":"conf_mat ","b50916a8":"print(metrics.accuracy_score(y,y_pred)) # to check the accuracy","0f1d3c67":"df=pd.DataFrame({\"Actual Data:\":y,\"Predicted Data:\":y_pred})\ndf","9587cbc2":"from sklearn.metrics import roc_curve,auc\nimport matplotlib.pyplot as plt\nfpr,tpr,thresholds=roc_curve(y,y_pred)\nroc_auc=auc(fpr,tpr)\nprint(thresholds)\nprint(fpr)\nprint(tpr)\nplt.figure()\nplt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.show()","2922670d":"MSE= metrics.mean_squared_error(y,y_pred)\nprint(\"Mean Squared Error:\",MSE)\nfrom math import sqrt\nrmse = sqrt(MSE)\nprint(\"Root Mean Squared Error:\",rmse)","e539f040":"submission = pd.read_csv('S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\sample_submission_eyYijxG.csv')\nfinal_predictions = model.predict(test.iloc[:,[1,2,3,4,5,6,7,8,9]])\nsubmission['Is_Lead'] = final_predictions\n\n#submission['Is_Lead'] = submission['Is_Lead'].apply(lambda x: 1 if x>0 else 0)\n\nsubmission.to_csv('S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\shivasubmission.csv', index=False)","9cd77610":"df1 = pd.read_csv(\"S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\shivasubmission.csv\")\nsorted_df = df1.sort_values(by=[\"Is_Lead\"], ascending=False)\nsorted_df.to_csv('S:\\\\Edureka\\\\Other ML Projects\\\\New folder\\\\Finalsubmission.csv', index=False)","d9f8b19b":"#### MSE And RMSE","e8d5ca9c":"Why missing values treatment is required? Missing data in the training data set can reduce the power \/ fit of a model or can lead to a biased model because we have not analysed the behavior and relationship with other variables correctly. It can lead to wrong prediction.","3608ffcc":"Happy Customer Bank is a mid-sized private bank that deals in all kinds of banking products, like Savings accounts, Current accounts, investment products, credit products, among other offerings.\n\n\n\nThe bank also cross-sells products to its existing customers and to do so they use different kinds of communication like tele-calling, e-mails, recommendations on net banking, mobile banking, etc. \n\n\n\nIn this case, the Happy Customer Bank wants to cross sell its credit cards to its existing customers. The bank has identified a set of customers that are eligible for taking these credit cards.\n\n\n\nNow, the bank is looking for your help in identifying customers that could show higher intent towards a recommended credit card, given:\n\nCustomer details (gender, age, region etc.)\nDetails of his\/her relationship with the bank (Channel_Code,Vintage, 'Avg_Asset_Value etc.)","7221dfe1":"<b>We have 245725 rows and 11 columns in Train set whereas Test set has 105312 rows and 10 columns.","5825c361":"<b> We have 12% of missing values in Credit_Product column.","4f077d97":"#### Step 1: Importing the Relevant Libraries\n\n#### Step 2: Data Inspection\n\n#### Step 3: Data Cleaning\n\n#### Step 4: Exploratory Data Analysis\n\n#### Step 5: Building Model\n\n#### Step 6: Building ROC-AOC Curve","eb060a17":"<b>Since the Credit_Product is a categorical column, we can impute the missing values by \"Mode\"(Most Repeated Value) from the column","5fd2dd3b":"## Table Of Contents","d7b37cb4":"## Step.5 Building Model","5a48efbb":"### Step 1: Importing the Relevant Libraries","999150b5":"##### Accuracy of Model","9f934abe":"### First 12272 rows are positive predictions(Probability of Customer showing interest) for the target variable","83dd5902":"#  Problem Statement","9afec98a":"<b>We have succesfully imputed the missing values from the column Credit_product.","45355711":"## Step.3 Data Cleaning","cd10f103":"## Step 2: Data Inspection","8af5992c":"#### ROC-AUC Curve","72ec1fcc":"##### Confusion Matrix","572187ba":"### Final Submission","b133eefb":"#### Encoding the required columns from training and test dataset","09059775":"## Step 4: Exploratory Data Analysis"}}