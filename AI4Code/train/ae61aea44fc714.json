{"cell_type":{"8ad76425":"code","4ad736f6":"code","58a464de":"code","2e90e7ff":"code","307f82db":"code","af0b984e":"markdown","c0c0f43f":"markdown"},"source":{"8ad76425":"import numpy as np\nimport pandas as pd\nimport os\nimport folium\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\n\ndef plotPointsOnMap(dataframe,beginIndex,endIndex,latitudeColumn,latitudeValue,longitudeColumn,longitudeValue,zoom):\n    df = dataframe[beginIndex:endIndex]\n    location = [latitudeValue,longitudeValue]\n    plot = folium.Map(location=location,zoom_start=zoom)\n    for i in range(0,len(df)):\n        popup = folium.Popup(str(df.name[i:i+1]))\n        folium.Marker([df[latitudeColumn].iloc[i],df[longitudeColumn].iloc[i]],popup=popup).add_to(plot)\n    return(plot)\n\ndef color_coded_map(df, center_lat, center_lon, zoom,bubbleSize,latitudeColumn,longitudeColumn,coloredColumn,labeledColumn,fillBool,opacityValue):  \n    # Adapted from  https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n    m = folium.Map(location=[center_lat, center_lon],\n                   zoom_start = zoom)\n    for index, row in df.iterrows():\n        folium.CircleMarker([row[[latitudeColumn]], row[[longitudeColumn]]],radius=bubbleSize, \n                             color=custom_colormap(row[coloredColumn]), #\n                             fill_color=custom_colormap(row[coloredColumn]), #\n                             fill=fillBool, fill_opacity=opacityValue,             \n                             popup=row[[labeledColumn]]).add_to(m) \n    custom_colormap.add_to(m)\n    folium.TileLayer(tiles='Stamen Toner',name=\"Stamen Toner\").add_to(m)\n    folium.TileLayer(tiles='Stamen Terrain',name=\"Stamen Terrain\").add_to(m)\n    folium.TileLayer(tiles='cartodbpositron',name=\"cartodbpositron\").add_to(m)\n    folium.LayerControl().add_to(m)       \n    return m\n\ndef plotMultipleChoice(selectedColumn,data,title,yAxisTitle):\n    counts = data[selectedColumn].value_counts()\n    countsDf = pd.DataFrame(counts)\n    trace1 = go.Bar(\n                    x = countsDf.index,\n                    y = countsDf[selectedColumn],\n                    name = \"Kaggle\",\n                    marker = dict(color = 'rgba(0, 0, 255, 0.8)',\n                                 line=dict(color='rgb(0,0,0)',width=1.5)),\n                    text = countsDf.index)\n    data = [trace1]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=yAxisTitle),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n\nfourteeners = pd.read_csv('..\/input\/14er.csv',encoding='ISO-8859-1')\nfourteeners=fourteeners[['Mountain Peak','Mountain Range','Elevation_ft','Difficulty','Distance_mi','Elevation Gain_ft','Lat','Long']]\nfourteeners.columns = ['Peak','Range','Elevation','Difficulty','Distance (Miles)','Gain (Feet)','Latitude','Longitude']\n#fourteeners.head()","4ad736f6":"custom_colormap = folium.StepColormap(['yellow','orange','red','black'], \n                         vmin=0, vmax=24,\n                         index=[0,5,10,24],\n                        caption='Distance (Miles)')\nfourteeners = fourteeners.sort_values(by='Distance (Miles)', ascending=1)\nfourteeners = fourteeners.reset_index()\npd.set_option('display.max_colwidth', 400)\nfourteeners[['Peak','Elevation','Difficulty','Distance (Miles)','Gain (Feet)']].head(60)","58a464de":"temperature_map = color_coded_map(fourteeners, 39.965411,-105.293598,9,5,'Latitude','Longitude','Distance (Miles)','Peak',True,1,)\ntemperature_map","2e90e7ff":"data= fourteeners\nselectedColumn = 'Range'\ntitle='Locations of 14ers in Colorado'\nyAxisTitle = title\nplotMultipleChoice(selectedColumn,data,title,yAxisTitle)","307f82db":"data= fourteeners\nselectedColumn = 'Difficulty'\ntitle='Difficulty Class Ratings of 14ers in Colorado'\nyAxisTitle = title\nplotMultipleChoice(selectedColumn,data,title,yAxisTitle)","af0b984e":"**Map of 14ers in Colorado, sorted by distance** ","c0c0f43f":"**14ers in Colorado, sorted by distance**\n\nUsing data from various sources including [14ers.com](http:\/\/14ers.com)."}}