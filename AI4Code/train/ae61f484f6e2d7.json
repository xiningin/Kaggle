{"cell_type":{"2dcb25a7":"code","f2224a12":"code","3fe70686":"code","110c2426":"code","3bb7c6b5":"code","f6956199":"code","3ed77cfb":"code","ec247221":"code","63f4425d":"code","3dab7509":"code","694ace83":"code","b2aecb7d":"code","eefd6349":"code","97e38e3d":"code","b492d318":"code","00d53812":"code","2613db49":"code","fe58b6fe":"code","256c4473":"code","74ad48f7":"code","40921d8b":"code","ad3a83ce":"code","177b3949":"code","4bd459a0":"code","0a1101dd":"code","4f125f92":"code","5b2a326c":"code","f7689b5a":"code","f5516463":"code","22f939ba":"code","658baac9":"code","895795e8":"code","069d549f":"code","4ddc9dcf":"code","5455098d":"code","f484f688":"code","6daad38e":"code","b688f66f":"code","2dcbd273":"code","e541a5fd":"code","fecd46c2":"code","60a58507":"code","d336a46a":"code","e322e165":"code","d6470436":"code","8554e9b0":"code","8b75b9de":"code","ca983d09":"code","9413db49":"code","abcf0a55":"code","05d53f56":"code","90189bb8":"code","1fb27daa":"code","cb0aef84":"code","5812aeeb":"code","90245d20":"code","cb6b11b9":"code","1519f1f9":"code","8a5194a2":"code","5111cdb7":"code","a6306a14":"code","9d6938a8":"code","9e733ab5":"code","6a7b3115":"code","8eb453ca":"code","9c376b6f":"code","a4e6d882":"code","332dced7":"code","a5869ede":"code","fbadfb2b":"code","d838eefe":"code","e9034e79":"code","616f8326":"code","492d8f77":"code","ef0511cb":"code","269f4ee1":"code","11b35648":"code","c67211a9":"code","90e934c6":"code","453b8f04":"code","34a76fab":"code","dc01375a":"code","b3d461b9":"code","5bf4ba70":"code","ef63de75":"markdown","d4fb8ceb":"markdown","350512f1":"markdown","d6cf4872":"markdown","30e915a4":"markdown","9369548e":"markdown","656abb34":"markdown","97687b96":"markdown","92d3c3fc":"markdown","d6e9c685":"markdown","71185963":"markdown","dd51a01e":"markdown","4739a544":"markdown","0cfaf727":"markdown","6d1cc303":"markdown","e89b5dce":"markdown","b706bad4":"markdown","63a271b8":"markdown"},"source":{"2dcb25a7":"#import labraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sn","f2224a12":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndf=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')       ","3fe70686":"df.head()","110c2426":"df.shape","3bb7c6b5":"df.info()","f6956199":"df.select_dtypes(include='object').columns","3ed77cfb":"df.select_dtypes(include=['int','float64']).columns","ec247221":"#statical summery\ndf.describe()","63f4425d":"df.columns","3dab7509":"#dealing with missing values","694ace83":"df.isnull().values.any()","b2aecb7d":"df.isnull().values.sum()","eefd6349":"df.columns[df.isnull().any()]","97e38e3d":"df['Unnamed: 32'].count()","b492d318":"df=df.drop(columns='Unnamed: 32')","00d53812":"type(df)","2613db49":"df.head()","fe58b6fe":"df.shape","256c4473":"df.isnull().values.any()","74ad48f7":"#dealing with categoriacal values","40921d8b":"df.select_dtypes(include='object').columns","ad3a83ce":"df['diagnosis'].unique()","177b3949":"df['diagnosis'].nunique()","4bd459a0":"#one hot encoding\ndf=pd.get_dummies(df,drop_first=True)","0a1101dd":"df","4f125f92":"#plotting\nsn.countplot(df['diagnosis_M'])","5b2a326c":"#B(0) total values\n(df.diagnosis_M==0).sum()","f7689b5a":"#B(1) total values\n(df.diagnosis_M==1).sum()","f5516463":"corr=df.corr()","22f939ba":"plt.figure(figsize=(20,10))\nsn.heatmap(corr,annot=True)","658baac9":"df2=df.drop(columns='diagnosis_M')","895795e8":"df2.corrwith(df['diagnosis_M']).plot.bar(figsize=(20,8),title='correlation with diagnosis_M',)","069d549f":"# selecting feature\nX=df[['radius_mean','texture_mean','perimeter_mean','area_mean','smoothness_mean','compactness_mean','concavity_mean','concave points_mean','symmetry_mean','radius_se','perimeter_se','area_se','compactness_se','concavity_se','concave points_se','radius_worst','texture_worst','perimeter_worst','area_worst','smoothness_worst','compactness_worst','concavity_worst','concave points_worst','symmetry_worst','fractal_dimension_worst']].values","4ddc9dcf":"X.shape","5455098d":"#Traget\ny=df['diagnosis_M'].values","f484f688":"y.shape","6daad38e":"\nimport sklearn.model_selection as ms","b688f66f":"X_train,X_test,y_train,y_test=ms.train_test_split(X,y)","2dcbd273":"\nimport sklearn.preprocessing as ppr","e541a5fd":"sc=ppr.StandardScaler()","fecd46c2":"X_train=sc.fit_transform(X_train)","60a58507":"X_test=sc.transform(X_test)","d336a46a":"import sklearn.linear_model as lm","e322e165":"#logistIcRegression\nmodel=lm.LogisticRegression()","d6470436":"model.fit(X_train,y_train)","8554e9b0":"predict1=model.predict(X_test)","8b75b9de":"import sklearn.metrics as mt","ca983d09":"arc=mt.accuracy_score(y_test,predict1)*100\nf1=mt.f1_score(y_test,predict1)*100\npre=mt.precision_score(y_test,predict1)*100\nr=mt.recall_score(y_test,predict1)*100","9413db49":"model_report=pd.DataFrame([['logisticRegression',arc,f1,pre,r]],\n                         columns=['model','accuracy','f1_score','preision','recall_score'])","abcf0a55":"model_report","05d53f56":"mt.confusion_matrix(y_test,predict1)","90189bb8":"Lcr_val=ms.cross_val_score(estimator=model,X=X_train,y=y_train,cv=10)","1fb27daa":"Lcr_val.mean()*100","cb0aef84":"#Model2","5812aeeb":"import sklearn.ensemble as en","90245d20":"#RandomForest\nmodel2=en.RandomForestClassifier()","cb6b11b9":"model2.fit(X_train,y_train)","1519f1f9":"predict2=model2.predict(X_test)","8a5194a2":"arc=mt.accuracy_score(predict2,y_test)*100\nf1=mt.f1_score(y_test,predict2)*100\npre=mt.precision_score(y_test,predict2)*100\nr=mt.recall_score(y_test,predict2)*100","5111cdb7":"model2_result=pd.DataFrame([['RandomForest',arc,f1,pre,r]],\n                         columns=['model','accuracy','f1_score','preision','recall_score'])","a6306a14":"mt.confusion_matrix(y_test,predict2)","9d6938a8":"Rcr_val=ms.cross_val_score(estimator=model2,X=X_train,y=y_train,cv=10)","9e733ab5":"Rcr_val.mean()*100","6a7b3115":"model_report=model_report.append(model2_result,ignore_index=True)","8eb453ca":"model_report","9c376b6f":"import sklearn.tree as tr","a4e6d882":"k=ms.KFold()","332dced7":"ks=k.split(X,y)","a5869ede":"score=[]\nfor train,test in ks:\n    X_train,X_test,y_train,y_test=X[train],X[test],y[train],y[test]\n    kmodel=tr.DecisionTreeClassifier()\n    kmodel.fit(X_train,y_train)\n    p=kmodel.predict(X_test)\n    score.append(mt.accuracy_score(p,y_test))\n    ","fbadfb2b":"score","d838eefe":"\n\nparameters ={'penalty':['l1', 'l2', 'elasticnet', 'none'],\n            'C':[0.25,0.5,0.75,1.0,1.25,1.5,1.75,2.0],\n            'solver':['newton-cg' ,'lbfgs' ,'liblinear', 'sag', 'saga']}","e9034e79":"cs=ms.RandomizedSearchCV( estimator=model,param_distributions=parameters)","616f8326":"cs.fit(X_train,y_train)","492d8f77":"cs.best_estimator_","ef0511cb":"cs.best_score_*100","269f4ee1":"final=lm.LogisticRegression(C=1.5, solver='liblinear')","11b35648":"final.fit(X_train,y_train)","c67211a9":"y_pre=final.predict(X_test)","90e934c6":"arc=mt.accuracy_score(y_test,y_pre)*100\nf1=mt.f1_score(y_test,y_pre)*100\npre=mt.precision_score(y_test,y_pre)*100\nr=mt.recall_score(y_test,y_pre)*100","453b8f04":"final_result=pd.DataFrame([['FinalLogisticRegression',arc,f1,pre,r]],\n                         columns=['model','accuracy','f1_score','preision','recall_score'])","34a76fab":"model_report=model_report.append(final_result,ignore_index=True)","dc01375a":"model_report","b3d461b9":"final_val=ms.cross_val_score(estimator=final,X=X_train,y=y_train,cv=10)","5bf4ba70":"final_val.mean()*100","ef63de75":"# KFold","d4fb8ceb":"# Data preprocssing","350512f1":"# cross validation","d6cf4872":"# logistIcRegression","30e915a4":"# RandomForest","9369548e":"# Correlation matrix\nA correlation matrix is a table showing coefficients b\/n variables.the value in range of -1 to 1 .if two variables have high correlation , we can neglect one variable from those two.","656abb34":"# split data into train and test\nThe procedure involves taking a dataset and dividing it into two subsets. \nThe first subset is used to fit the model and is referred to as the training dataset. \nThe second subset is not used to train the model; instead, the input element of the dataset is provided to the \nmodel, then predictions are made and compared to the expected values. \nThis second dataset is referred to as the test dataset.\n\n    1.Train Dataset: Used to fit the machine learning model.\n    2.Test Dataset: Used to evaluate the fit machine learning model","97687b96":"# Dataset Information\nFeatures are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image. \n\nAttribute Information:\n\n1) ID number\n2) Diagnosis (M = malignant, B = benign)\n3-32) ","92d3c3fc":"# Load Dataset","d6e9c685":"# Data exploration","71185963":"# cross validation","dd51a01e":"# Confusion matrix","4739a544":"# RandomizedSearchCV","0cfaf727":"# feature scaling\nFeature Scaling is a technique to standardize the independent features present in the data in a fixed range. It is performed during the data pre-processing to handle highly varying magnitudes or values or units. If feature scaling is not done, then a machine learning algorithm tends to weigh greater values, higher and consider smaller values as the lower values, regardless of the unit of the values.\nTechniques to perform Feature Scaling\nConsider the two most important ones:\n\n1.Min-Max Normalization: This technique re-scales a feature or observation value with distribution value between 0 and 1.\n        \n    \n2.Standardization: It is a very effective technique which re-scales a feature value so that it has distribution with 0 mean value and variance equals to 1.\n","6d1cc303":"# Model Bulding","e89b5dce":"# Final model","b706bad4":"# confusion matrix\nA confusion matrix is a summary of prediction results on a classification problem.\n\nThe number of correct and incorrect predictions are summarized with count values and broken down by each class. This is the key to the confusion matrix.\n\nThe confusion matrix shows the ways in which your classification model\nis confused when it makes predictions.","63a271b8":"# Final Report"}}