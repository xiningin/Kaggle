{"cell_type":{"dedb0fb7":"code","ccb396af":"code","af13f3ed":"code","7c56efb7":"code","ad1f3cdd":"code","a45e5efe":"code","bf93a790":"code","f24ab7ef":"code","0fd880b8":"code","4b9abe52":"code","b2c690c1":"code","50eff31f":"code","842a0d6c":"code","50e752a6":"markdown","8dca4bd5":"markdown","a2100de5":"markdown","bc8db782":"markdown"},"source":{"dedb0fb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly library\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib library\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ccb396af":"timesData = pd.read_csv('..\/input\/timesData.csv')\ntimesData.info()","af13f3ed":"timesData.head()","7c56efb7":"df = timesData.iloc[:100, :]","ad1f3cdd":"trace1 = go.Scatter (x = df.world_rank,\n                     y = df.citations,\n                     mode = 'lines',\n                     name = 'citations',\n                     marker = dict(color = 'rgba(16, 122, 2, 0.8)'),\n                     text = df.university_name)","a45e5efe":"trace2 = go.Scatter (x = df.world_rank,\n                     y = df.teaching,\n                     mode = 'lines+markers',\n                     name = 'teaching',\n                     marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                     text = df.university_name)","bf93a790":"data = [trace1, trace2]\nlayout = dict(title = 'Citation and Teaching vs World Rank of top 100 Universities',\n              xaxis = dict(title = 'World Rank', ticklen = 5, zeroline = False)\n              )\n\nfig = dict(data = data, layout = layout)\niplot(fig)\nplt.savefig('line_plot_using_plotly.png')\nplt.show()","f24ab7ef":"timesData.columns","0fd880b8":"# data preparation\nx2015 = timesData[timesData.year == 2015]\n\ntrace0 = go.Box(\n    y=x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)\nplt.savefig('box-plot.png')","4b9abe52":"dataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\", \"total_score\"]]","b2c690c1":"# import figure factory\nimport plotly.figure_factory as ff\n\n# data\ndataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\", \"total_score\"]]\n\n# add index feauture in data2015\ndata2015 ['index'] = np.arange(1,len(data2015)+1)\n\n# figure\n# in parantesysis we have (our data, plot we want to see in the diagonal, index, color map,..)\nfig = ff.create_scatterplotmatrix (data2015, diag='box', index='index', colormap='Portland',\n                                  colormap_type='cat', height=700, width=700)\niplot(fig)\nplt.savefig('scatterplotmatrix.png')\nplt.show()","50eff31f":"dataframe.columns","842a0d6c":"# first plot\ntrace1 = go.Scatter (x = dataframe.world_rank,\n                     y = dataframe.teaching,\n                     name = 'teaching',\n                     marker = dict(color = 'rgba(16,112,2,0.8)'),\n                    )\n# second line\ntrace2 = go.Scatter (x = dataframe.world_rank,\n                     y = dataframe.income,\n                     xaxis = 'x2',\n                     yaxis = 'y2',\n                     name = 'income',\n                     marker = dict(color = 'rgba(160,112,20,0.8)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout (xaxis2 = dict(domain = [0.6, 0.95], anchor = 'y2'),\n                    yaxis2 = dict(domain = [0.6, 0.95], anchor = 'x2'),\n                    title = 'income and teaching vs world rank of universities')\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\nplt.savefig('inset-plot.png')","50e752a6":"**SCATTER MATRIX PLOT**\n\nit helps us to see covariance and relation between more than 2 features","8dca4bd5":"**PLOTLY: LINE PLOT**","a2100de5":"**PLOTLY: BOX PLOT**","bc8db782":"**INSET PLOTS**\n\n2 plots are in the same frame. The one that we want to emphasize is bigger as compared to the other."}}