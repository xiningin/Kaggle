{"cell_type":{"63973ef2":"code","a7f6f823":"code","88f6ab58":"code","eed6e748":"code","356b54d5":"code","2f9a1b3c":"code","270f3a9c":"code","8b9f6217":"code","101c213b":"code","e96bf2cd":"code","5a607a39":"code","12d9de87":"code","78d419bc":"code","77eb9c3b":"code","cc5b4b78":"code","a818c05b":"code","8e51a11d":"code","4f6c41ce":"code","caf4971f":"code","80cc9f9d":"code","02e9197f":"code","43182198":"code","ba023f93":"code","b1af9164":"code","1badb9cb":"code","78e9eead":"code","341f0b00":"code","a03227d0":"code","0c1bf8c3":"code","610365fa":"code","53a01458":"code","4b31385b":"code","24d378d1":"code","b46a5365":"code","a55547e3":"code","65ad5522":"code","acfe446c":"code","f21b84f6":"code","fdd3d308":"markdown","7adf4464":"markdown","39f06646":"markdown","8a07077e":"markdown","69218a65":"markdown","c4369400":"markdown","c0560737":"markdown","5620876f":"markdown","f90f8864":"markdown","b199bdd8":"markdown","8e2c9e69":"markdown","a3e95280":"markdown","9a1fde6a":"markdown","bd53c81b":"markdown","79ca507e":"markdown","05f8da2b":"markdown"},"source":{"63973ef2":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import LabelEncoder\nimport os\nimport time\nfrom itertools import product\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import KFold\nfrom sklearn import base","a7f6f823":"data=pd.read_csv('..\/input\/sales-forecasting\/train.csv')","88f6ab58":"data.head()","eed6e748":"data.shape","356b54d5":"data.columns","2f9a1b3c":"data.info","270f3a9c":"data.isnull().sum()","8b9f6217":"clean=data.dropna()","101c213b":"clean.shape","e96bf2cd":"clean.isnull().sum()","5a607a39":"clean.describe()","12d9de87":"from IPython.core.display import HTML\n\ndef multi_table(table_list):\n    ''' Accepts a list of IpyTable objects and returns a table which contains each IpyTable in a cell\n    '''\n    return HTML(\n        '<table><tr style=\"background-color:white;\">' + \n        ''.join(['<td>' + table._repr_html_() + '<\/td>' for table in table_list]) +\n        '<\/tr><\/table>')","78d419bc":"clean.columns","77eb9c3b":"clean_nunique = {var: pd.DataFrame(clean[var].value_counts()) \n              for var in {'Order ID', 'Order Date', 'Ship Date', 'Ship Mode',\n       'Customer ID', 'Customer Name', 'Segment', 'Country', 'City', 'State',\n       'Postal Code', 'Region', 'Product ID', 'Category', 'Sub-Category',\n       'Product Name', 'Sales'}}","cc5b4b78":"multi_table([clean_nunique['Order ID'],clean_nunique['Order Date'],clean_nunique['Ship Date'],\n            clean_nunique['Ship Mode'],clean_nunique['Customer ID'],clean_nunique['Customer Name'],clean_nunique['Segment'],\n            clean_nunique['Country'],clean_nunique['City'],clean_nunique['State'],clean_nunique['Postal Code'],clean_nunique['Region'],\n            clean_nunique['Product ID'],clean_nunique['Category'],clean_nunique['Sub-Category'],clean_nunique['Product Name'],clean_nunique['Sales']])","a818c05b":"clean.columns","8e51a11d":"clean['Order Date']","4f6c41ce":"clean['Order Date'].max()","caf4971f":"MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nLINEWIDTH=2\nALPHA=.6\n\ndfp = clean[['Order ID', 'Order Date', 'Ship Date', 'Ship Mode',\n       'Customer ID', 'Customer Name', 'Segment', 'Country', 'City', 'State',\n       'Postal Code', 'Region', 'Product ID', 'Category', 'Sub-Category',\n       'Product Name', 'Sales']].copy()\n\n# Extract the year and the month from the date column into indepedent columns\ndfp['Order Date']  = pd.to_datetime(dfp['Order Date'])\ndfp['year_month']  = dfp['Order Date'].apply(lambda x : x.strftime('%Y-%m'))\ndfp['year']  = dfp['Order Date'].dt.year\ndfp['month'] = dfp['Order Date'].dt.month\ndfp","80cc9f9d":"dfp_trend = dfp.groupby(['year','month']).sum()['Sales'].reset_index()","02e9197f":"dfp_trend.head()","43182198":"dfp_trend[dfp_trend.year==2015]","ba023f93":"plt.figure(figsize=(16,6))\n# Plot the sales of the year 2013\nplt.plot(MONTHS, dfp_trend[dfp_trend.year==2015].Sales, '-o', color='steelblue', linewidth=LINEWIDTH, alpha=ALPHA,label='2015')\nplt.plot(MONTHS, dfp_trend[dfp_trend.year==2016].Sales, '-o', color='seagreen', linewidth=LINEWIDTH, alpha=ALPHA,label='2016')\nplt.plot(MONTHS, dfp_trend[dfp_trend.year==2017].Sales, '-o', color='pink', linewidth=LINEWIDTH, alpha=ALPHA,label='2017')\nplt.plot(MONTHS, dfp_trend[dfp_trend.year==2018].Sales, '-o', color='blue', linewidth=LINEWIDTH, alpha=ALPHA,label='2018')\n\nax = plt.gca()\nax.set_title('Sales per month')\nax.set_ylabel('Sales in dollars')\nax.grid(axis='y', color='gray', alpha=.2)\n\nfor spine in plt.gca().spines.values():\n    spine.set_visible(False)\nplt.legend(loc=2, title='Legend')\nplt.show()\n","b1af9164":"Product_Sales=pd.DataFrame(dfp.groupby('Product Name').sum()['Sales'])","1badb9cb":"Product_Sales.head()","78e9eead":"Sorted_Prod=Product_Sales.sort_values('Sales',ascending=False)","341f0b00":"Sorted_Prod[:10].plot(kind='bar',figsize=(13,6),color='red')","a03227d0":"sns.countplot(dfp['Segment'])","0c1bf8c3":"sns.countplot(dfp['Ship Mode'])","610365fa":"STATE=pd.DataFrame(dfp.groupby(['State','Product Name']).sum()['Sales'])\n","53a01458":"STATE","4b31385b":"Sorted_STATE=STATE.sort_values('Sales',ascending=False)","24d378d1":"Sorted_STATE[:10].plot(kind='bar',figsize=(13,6),color='seagreen')","b46a5365":"Categ_and_Sub=pd.DataFrame(dfp.groupby(['Category','Sub-Category']).sum()['Sales'])","a55547e3":"Sorted_Categs=Categ_and_Sub.sort_values('Sales', ascending=False)\nSorted_Categs.plot(kind='bar',figsize=(13,6),color='purple')","65ad5522":"Categ_and_Sub2=pd.DataFrame(dfp.groupby(['Category','Sub-Category','State']).sum()['Sales'])","acfe446c":"Categ_and_Sub2","f21b84f6":"Sorted_Categs2=Categ_and_Sub2.sort_values('Sales', ascending=False)\nSorted_Categs2=Sorted_Categs2[:10]\nSorted_Categs2.plot(kind='bar',figsize=(13,6),color='thistle')","fdd3d308":"# MOST PREFFERED SHIP MODE ","7adf4464":"# Multi-Table analysis of the data to help summarize the data fast","39f06646":"# Grouping the data by months to get montly sales ","8a07077e":"# THE MOST PROFITABLE CATEGORIES AND SUB-CATEGORIES PER STATE ","69218a65":"# which are the top 10 products ","c4369400":"# INVESTIGATING THE TREND OF THE SALES ","c0560737":"# LIBRARIES","5620876f":"Columns\n","f90f8864":"# OBJECTIVES \n\nUPON INITIAL INSPECTION OF OUR DATA WE CAN IMMEDIATELY ASK A FEW QUESTIONS THAT ARE OF IMPORTANCE.\n\n* What is the overall trend of the sales?\n* What are the top 10 products by sales?\n* What are the most selling products?\n* Which is the most preferred Ship Mode?\n* Which are the most profitable category and Sub-category?\n\n","b199bdd8":"# THE MOST PROFITABLE CATEGORIES AND SUB-CATEGORIES \n","8e2c9e69":"# DATA CLEANING AND MANUPILATION ","a3e95280":"# SALES PER MONTH FOR EACH YEAR SINCE 2015 TILL 2018 ","9a1fde6a":"* HERE ARE THE MOST BOUGHT PRODUCTS PER STATE (TOP TEN PRODUCTS SOLD AND WHICH STATE THEY ARE SOLD) ","bd53c81b":"# MOST SOLD PRODUCTS PER STATE ","79ca507e":"# WHICH ARE THE MOST PERFORMING SEGMENTS \n","05f8da2b":"# TOP TEN PRODUCTS BY SALES "}}