{"cell_type":{"ad901101":"code","afb8c50a":"code","63a5980b":"code","f0a14af5":"code","06bddf5d":"code","01542ce0":"code","297350f6":"code","6c517754":"code","8b189a11":"code","75b3f4de":"code","1359a25c":"code","af9d1e1b":"markdown","8a48f9e4":"markdown","0340bc25":"markdown","8c6ec6fa":"markdown","02767385":"markdown","8d5ff7ae":"markdown","2b12e51f":"markdown"},"source":{"ad901101":"# Necessary libraries to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# plotly\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","afb8c50a":"train = pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')\ntest = pd.read_csv('..\/input\/petfinder-pawpularity-score\/test.csv')\ntrain_x = train[train.columns[:-1]]\ntrain_y = train[\"Pawpularity\"]","63a5980b":"train_x.head()","f0a14af5":"train_x.info()","06bddf5d":"train_x.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","01542ce0":"test.head()","297350f6":"test.info()","6c517754":"test.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","8b189a11":"train_binary_features = train.columns[1:-1]\nfor i in train_binary_features:\n    fig = px.pie(train, names=i, color_discrete_sequence=px.colors.sequential.RdBu)\n    fig.update_layout(\n    autosize=False,\n    width=300,\n    height=300,)\n    fig.show()","75b3f4de":"hist_data = [train[\"Pawpularity\"]]\ngroup_labels = ['Pawpularity']\n\nfig = ff.create_distplot(hist_data, group_labels)\nfig.show()","1359a25c":"fig, ax = plt.subplots(figsize=(18, 18))\ntrain_corr = train_x[train_x.columns[1:]].corr()\n\nmask = np.zeros_like(train_corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nsns.heatmap(train_corr, ax=ax,\n           square=True, center=0, linewidth=.2,\n           cmap=sns.diverging_palette(160, 10, as_cmap=True),\n           mask=mask,\n           annot=True,\n           annot_kws={'size':7}\n           )\nax.set_title(f'Correlation plot for all binary variables', fontweight='bold')\nfig.show()","af9d1e1b":"## Train and Test csv files","8a48f9e4":"> #### 2.  EDA","0340bc25":"Let's start observing the numerical data given to us as csv files for train and test dataset.\n\n> #### 1. Data Loading","8c6ec6fa":"references:\n* [categorical EDA 1](https:\/\/www.kaggle.com\/subinium\/tps-may-categorical-eda)\n* [categorical EDA 2](https:\/\/www.kaggle.com\/kimalpha\/petfinder-simple-t-sne-fireworks)\n","02767385":"#### Summary:\n* Features are binary variables consists of 0 and 1.\n* Test dataset contains only 8 variables, thus train and test data comparison is not very suitable for this.\n* There is no missing variables for any feature.\n* Eyes, Face and Near variables have higher mean values than the others.","8d5ff7ae":"> #### 4. Correlation check","2b12e51f":"> #### 3. Distribution Check"}}