{"cell_type":{"fe0dfafd":"code","0df4e7f6":"code","1c0a9a99":"code","0b7cf186":"code","71cf6149":"code","0e2562cd":"code","b9b37011":"code","3da3fda4":"code","4b2c350f":"code","cbb53bfb":"code","dfd2b0b7":"code","277febae":"code","7c774c9c":"code","0e59f3bf":"code","8c104c70":"code","a02f7f04":"markdown","e8c09747":"markdown","7ef11f48":"markdown","4798df36":"markdown","b77cb6f4":"markdown","0ab07e8b":"markdown"},"source":{"fe0dfafd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0df4e7f6":"from sklearn.preprocessing import MinMaxScaler,StandardScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\n\n%matplotlib inline\n\nsns.set_style('whitegrid')","1c0a9a99":"train=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\nsubm=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')","0b7cf186":"train.head(5)","71cf6149":"X_train=train.drop(['id','loss'],axis=1)\nX_subm=subm.drop(['id'],axis=1)\ny=train[['loss']]","0e2562cd":"x_train,x_test,y_train,y_test=train_test_split(X_train,y,random_state=42,test_size=0.2)\nx_train,x_val,y_train,y_val=train_test_split(x_train,y_train,random_state=42,test_size=0.2)","b9b37011":"# #MinMaxScaler\ns1=MinMaxScaler()\nx_train=s1.fit_transform(x_train)\nx_val=s1.transform(x_val)\nx_test=s1.transform(x_test)\nx_subm=s1.transform(X_subm)","3da3fda4":"#StandardScaler\n# s1=StandardScaler()\n# x_train=s1.fit_transform(x_train)\n# x_val=s1.transform(x_val)\n# x_test=s1.transform(x_test)\n# x_subm=s1.transform(X_subm)","4b2c350f":"model=Sequential()\n\nmodel.add(Dense(x_train.shape[1],activation='relu'))\nmodel.add(Dense(2*x_train.shape[1],activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(2*x_train.shape[1],activation='relu'))\nmodel.add(Dense(x_train.shape[1],activation='relu'))\n\nmodel.add(Dense(1,activation='relu'))\n\nmodel.compile(optimizer='adam',metrics=[tf.keras.metrics.RootMeanSquaredError()],loss='mse')\n","cbb53bfb":"from tensorflow.keras.callbacks import EarlyStopping\ne1=EarlyStopping(verbose=1)#restore_best_weights=True)","dfd2b0b7":"history=model.fit(x=x_train,y=y_train,epochs=50,callbacks=[e1],workers=5,validation_data=(x_val,y_val))\npred1=model.predict(x_test)","277febae":"d1=pd.DataFrame(history.history)\n# d1.iloc[:,[1,3]]\nd1.iloc[:,[1,3]].plot(figsize=(8,8))","7c774c9c":"from sklearn.metrics import mean_squared_error\n\nprint(f\"RMSE :{mean_squared_error(y_test,pred1,squared=False)}\")","0e59f3bf":"model.summary()","8c104c70":"prediction=model.predict(x_subm)\nsub=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')\nsub['loss']=prediction\nsub.to_csv(f'vote.csv',index=False)","a02f7f04":"**Regression Model (Tensorflow model)**","e8c09747":"# **Data Input**","7ef11f48":"**Checking the need to transform**","4798df36":"**We have imported models for regression**","b77cb6f4":"**Train Test split**","0ab07e8b":"**Output**"}}