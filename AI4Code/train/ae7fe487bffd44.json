{"cell_type":{"dd7b9a2b":"code","09111754":"code","20c69959":"code","25ee5704":"code","edc50dd2":"code","2a4117eb":"code","e7f36ed1":"code","c270b0a0":"code","c092f58c":"code","6458eb1d":"code","aced32c5":"code","8e1f3f40":"code","4c94102d":"code","3a812317":"code","defb91c6":"code","ec29d02c":"code","bca7c1fa":"code","a535c911":"code","4cd0213e":"code","59a7f54c":"code","1346e6ee":"code","38410340":"code","6e703d7c":"code","446a396f":"code","c742b87b":"code","5ab166d1":"code","a008fa6e":"code","db7da37b":"code","5da37e75":"code","a73fd18b":"code","10c4b8d5":"code","6dd7a22e":"code","994b7818":"code","8af07303":"code","9c07a57b":"code","48dfd73b":"code","4746d2e6":"markdown","f394888c":"markdown","8c77bce8":"markdown","46db4ca3":"markdown","6270cfd6":"markdown","c4b795be":"markdown","8f61ec03":"markdown","65773b97":"markdown","f52bdd1f":"markdown","1f3f7c63":"markdown","735c2da1":"markdown","8adcd27b":"markdown","16a96e89":"markdown","c0b19708":"markdown","121ef3e9":"markdown","1a930226":"markdown","14fbe9ec":"markdown","32d43be0":"markdown","f57ace34":"markdown","3d9540f8":"markdown","02e86eea":"markdown","13c9971e":"markdown","7e048c62":"markdown","3aed5494":"markdown","0ad2d20e":"markdown"},"source":{"dd7b9a2b":"# A Python comment starts with a # symbol\n# in this session we will examine the use of simple python operators and expression\n# An operator is a (mathematical) symbol that defines an operation between 2 bits of data eg \"+\" is the addition operator\n# An expression is another word for a calculation or set of operators that manipulate data to create a new result = 5 + 4 is an expression","09111754":"5 + 4","20c69959":"10 - 3.7","25ee5704":"10 \/ 3","edc50dd2":"45.3 - 45","2a4117eb":"round(45.3-45, 4)\n","e7f36ed1":"100 * 34","c270b0a0":"10 \/\/ 3","c092f58c":"10 % 3","6458eb1d":"10 #integer - whole number","aced32c5":"10.7 #Float (floating point number \/ real number)","8e1f3f40":"\"text\"  #called Strings","4c94102d":"'more text' #can use single quotes but can't mix and match","3a812317":"True  #Boolean - can only be True or False","defb91c6":"False","ec29d02c":"type(10)","bca7c1fa":"10 + 17.5","a535c911":"10 + 'text'  #creates an error","4cd0213e":"10 * \"hello\"","59a7f54c":"10 + 3 * 5\n","1346e6ee":"(10 + 3) * 5","38410340":"#round takes 2 arguments - the first is a float to round and \n#the 2nd is an integer that specifies how many decimal places to round to\n\nround(45.6667251, 2)","6e703d7c":"round(45.67874, 1.5)","446a396f":"import math #only need 1 import statement per session (not everytime you use it!)\n","c742b87b":"math.pow(3, 2) ","5ab166d1":"pow(3.14, 3)","a008fa6e":"pow(3.14, 1.5)","db7da37b":"math.sqrt(9) #the square root","5da37e75":"math.sin(90) #Should be 1","a73fd18b":"math.radians(90)","10c4b8d5":"math.sin(math.radians(90))\n","6dd7a22e":"math.atan(4\/7)","994b7818":"math.degrees(math.atan(4\/7))","8af07303":"import math\nround(math.degrees(math.atan(12.586\/15)), 4)\n\n","9c07a57b":"round(math.degrees(math.atan(15\/12.586)), 4)\n\n","48dfd73b":"math.sqrt(math.pow(12.586, 2)+ math.pow(15, 2))","4746d2e6":"Python has different types of data, integer, float, string & Boolean","f394888c":"Note the answer is not 0.3 - this is because for decimal fractions computers store approximations (as they work in base 2 not base 10)\n","8c77bce8":"Brackets (parantheses) used to change calculation order","46db4ca3":"# Further Work\n\nGiven the right angle triangle \n![image.png](attachment:image.png)\n\nCalculate the angles for theta and beta in degrees using the atan() (inverse tan function) in Python\n\nCalculate the length of the hypotenuse using pythagoras\n\nc= \u221a(a^2+b^2)\n\nShow you answers to 4 decimal places.","6270cfd6":"Notice that the answer is inexact.  This is because of the way all computers store numbers","c4b795be":"2nd argument is NOT an integer so function fails","8f61ec03":"Consider a right angled triangle with the length of the opposite side of 4 and the length of the adjacent side of 7\n![image.png](attachment:image.png)","65773b97":"Calculate angle B using atan(O\/A) - inverse tangent","f52bdd1f":"3 and 5 are multiplied and then 10 is added","1f3f7c63":"# Numbers work as you expect","735c2da1":"Integer divison - result is a whole number","8adcd27b":"Multiplication is done with a *","16a96e89":"Computer all use RADIANS for angles - degrees must be converted","c0b19708":"Embedding one function in another is very common practice.  The Inner ones are calculated first so we go from inside to outside.","121ef3e9":"raise 3 to the power 2.  First argument can be integer or float, 2nd usually an integer but can be float","1a930226":"Parantheses can be used to change the order of calculation.  Calcs use the normal maths rules - they divide and multiply first and then add and subtract - working left to right if all other things are equal","14fbe9ec":"We have looked at using operators (+, -), data types (float, int, string), parantheses, functions and importing libraries. ","32d43be0":"Can check the type of object by using type function type()","f57ace34":"Integer Remainder - Modulus","3d9540f8":"**The basic operators**","02e86eea":"# FUNCTIONS\nLots of built in functions to create expressions\nLooking here are at some common ones\n* round() we have used already\n* pow() raise to the power\n* sqrt() square root\n* sin, cos, tan, atan etc.\n* radians(), degrees() convert between radians and degrees\n\nFUNCTIONS always have brackets after them\nThey usually take some information (called ARGUMENTS) - there can be none, one, two, three or many arguments\nthe ORDER and TYPE of arguments is critical\nYou should use help and the web to find out about what type (number, text etc.) and the order of arguments a function uses - these will all use numbers\n\nFunctions are often stored in LIBRARIES that are sets of code.\nLibraries must be imported before use using the import statement\nA small number of functions (eg. round) are built-in so no import statement is needed for them\nMathematical functions are stored in the \"math\" library - a list of those and further reading here\nTake a moment to go and browse.\n\nhttps:\/\/www.tutorialgateway.org\/python-math-functions\/\n","13c9971e":"These error messages are FULL of information - they show the error and what caused it and the type of error and an \"explanation\".  Read them carefully as they provide clues as to what to fix.\n\nIn this case the error is caused as you cannot add a number to a string","7e048c62":"# Operators are affected by the TYPE of data (integer, float)","3aed5494":"Answers are:\n![image.png](attachment:image.png)\n","0ad2d20e":"Weirdly multiplication works with an integer and a string but the rest behave as you might expect!"}}