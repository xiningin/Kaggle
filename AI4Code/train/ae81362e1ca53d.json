{"cell_type":{"f65ab5a9":"code","d0527740":"code","018a2cd6":"code","168e759f":"code","a103abec":"code","58296d1d":"code","718552d0":"code","9e189ce2":"code","905cb038":"markdown","1374f0e8":"markdown","296bc0e3":"markdown"},"source":{"f65ab5a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d0527740":"data=pd.read_csv('..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')\ndata.sample(5)\n","018a2cd6":"unique_countries=data.country.unique()\nunique_countries","168e759f":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nsns.set(style='whitegrid')\nplt.figure(figsize=(20,20))\ncount=1\nfor country in unique_countries:\n    plt.subplot(5,3,count)\n    count+=1\n    col=\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n    sns.lineplot(data[data.country==country]['year'],\n                 data[data.country==country]['exch_usd'],\n                 label=country,\n                 color=col)\n    plt.scatter(data[data.country==country]['year'],\n                data[data.country==country]['exch_usd'],\n                color=col,\n                s=28)\n    plt.plot([np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n              np.min(data[np.logical_and(data.country==country,data.independence==1)]['year'])],\n             [0,\n              np.max(data[data.country==country]['exch_usd'])],\n             color='black',\n             linestyle='dotted',\n             alpha=0.8)\n    plt.text(np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n             np.max(data[data.country==country]['exch_usd'])\/2,\n             'Independence',\n             rotation=-90)\n    plt.scatter(x=np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n                y=0,\n                s=50)\n    plt.title(country)\nplt.tight_layout()\nplt.show()\n","a103abec":"data.info()","58296d1d":"sns.set(style='darkgrid')\ncols=['systemic_crisis','domestic_debt_in_default','sovereign_external_debt_default','currency_crises','inflation_crises','banking_crisis']\nplt.figure(figsize=(20,20))\ncount=1\nfor col in cols:\n    plt.subplot(3,2,count)\n    count+=1\n    sns.countplot(y=data.country,hue=data[col],palette='rocket')\n    plt.legend(loc=0)\n    plt.title(col)\nplt.tight_layout()\nplt.show()\n","718552d0":"sns.set(style='whitegrid')\nplt.figure(figsize=(20,20))\ncount=1\nfor country in unique_countries:\n    plt.subplot(5,3,count)\n    count+=1\n    col=\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n    sns.lineplot(data[data.country==country]['year'],\n                 data[data.country==country]['inflation_annual_cpi'],\n                 label=country,\n                 color=col)\n    plt.scatter(data[data.country==country]['year'],\n                data[data.country==country]['inflation_annual_cpi'],\n                color=col,\n                s=28)\n    plt.plot([np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n              np.min(data[np.logical_and(data.country==country,data.independence==1)]['year'])],\n             [np.min(data[data.country==country]['inflation_annual_cpi']),\n              np.max(data[data.country==country]['inflation_annual_cpi'])],\n             color='black',\n             linestyle='dotted',\n             alpha=0.8)\n    plt.text(np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n             np.max(data[data.country==country]['inflation_annual_cpi'])\/2,\n             'Independence',\n             rotation=-90)\n    plt.scatter(x=np.min(data[np.logical_and(data.country==country,data.independence==1)]['year']),\n                y=np.min(data[data.country==country]['inflation_annual_cpi']),\n                s=50)\n    plt.title(country)\nplt.tight_layout()\nplt.show()\n","9e189ce2":"sns.heatmap(data.corr())","905cb038":"* **Different debt count of each country**","1374f0e8":"* **Year wise average usd exchange rate of each country**","296bc0e3":"* **Average year wise inflation**"}}