{"cell_type":{"d79c62e3":"code","43cf31e7":"code","fc04ad0c":"code","543f5b25":"code","e6652448":"code","5316f33b":"code","2aef8b25":"code","b93c35c8":"code","a57ce910":"code","9a138186":"code","74731fbc":"code","aace1ddc":"code","a3c165b6":"code","1e95b880":"code","69d46982":"code","6c23c7f5":"code","270d70a8":"code","1b7ed2a2":"code","6707da13":"code","95f6d479":"code","ba3ec573":"code","3a691def":"code","72c21b1d":"code","d7452442":"code","aa6b15d7":"code","25f367ac":"code","07747baa":"code","4bc3b8c4":"code","cacb3b0c":"code","bff9dacc":"code","3c292b82":"code","12cd2d56":"code","0e150bf5":"code","d0f787c2":"code","70d5fc62":"code","c9a439df":"code","0acf9e3a":"code","1668b126":"code","eb5b085f":"code","309eb166":"code","dd41db11":"code","5c0f2a05":"code","f45b6f7a":"markdown","3d2fd381":"markdown","83fab459":"markdown","7463281f":"markdown","1674ef72":"markdown","4e63cb15":"markdown","8b5bd376":"markdown","a204f5f7":"markdown","48264f56":"markdown","d9101d15":"markdown","fe32db72":"markdown","5aab9613":"markdown","41b175cf":"markdown","e0d80f40":"markdown","31cabd0c":"markdown","b30ac6a8":"markdown","5f878c87":"markdown","cba0f69a":"markdown","9d43af02":"markdown","194e0b00":"markdown","ccde9515":"markdown","3a0bdf03":"markdown","bda04907":"markdown","9a9ba273":"markdown","33f3be09":"markdown","7b3b0a51":"markdown","89478696":"markdown","0fae38ce":"markdown","eafb7306":"markdown","26fbfd4d":"markdown","1668e45a":"markdown","eae31fb1":"markdown","53fe5247":"markdown","4afb6720":"markdown","5cc96a89":"markdown","defda948":"markdown","10b799c6":"markdown","184304a3":"markdown","bd7544cd":"markdown","e4ac2e54":"markdown"},"source":{"d79c62e3":"# Core\nimport pandas as pd\nimport numpy as np\n\n# Data Visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS\n%matplotlib inline","43cf31e7":"# Path of file to read Start from US\nfile_path = '..\/input\/youtube-new\/USvideos.csv'\n\n\n#Load data into panda Dataframe.\nus_yout = pd.read_csv(file_path)","fc04ad0c":"us_yout.head()","543f5b25":"print(us_yout.shape)\nprint(us_yout.nunique().sort_values(ascending=False))","e6652448":"# Look for info\nus_yout.info()","5316f33b":"# List of numerical attributes\nprint(us_yout.select_dtypes(exclude=['object']).columns)\nprint(len(us_yout.select_dtypes(exclude=['object']).columns))","2aef8b25":"us_yout.select_dtypes(exclude=['object']).describe().round(decimals=2)","b93c35c8":"print(us_yout.select_dtypes(include=['object']).columns)\nprint(len(us_yout.select_dtypes(include=['object']).columns))","a57ce910":"us_yout.select_dtypes(include=['object']).describe()","9a138186":"num_attributes = us_yout.select_dtypes(include='int64').drop('category_id', axis=1).copy()\n\nfig = plt.figure(figsize=(12,6))\nfor i in range(len(num_attributes.columns)):\n    fig.add_subplot(2,2,i+1)\n    sns.distplot(num_attributes.iloc[:,i].dropna())\n    sns.distplot(num_attributes.iloc[:,i].dropna()).set_title(num_attributes.columns[i].upper() + \" DISTRIBUITION\")\n    plt.xlabel(num_attributes.columns[i])\n    plt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n    \nplt.show()","74731fbc":"# Added + 1 as normal log cause density < 0\nlog_num_attributes = np.log(num_attributes + 1)\n\nfig = plt.figure(figsize=(12,6))\nfor i in range(len(log_num_attributes.columns)):\n    fig.add_subplot(2,2,i+1)\n    sns.distplot(log_num_attributes.iloc[:,i].dropna())\n    sns.distplot(log_num_attributes.iloc[:,i].dropna()).set_title(log_num_attributes.columns[i].upper() + \" LOG DISTRIBUITION\")\n    plt.xlabel(log_num_attributes.columns[i])\n    plt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n    \nplt.show()","aace1ddc":"print(\"Views quantiles\")\nprint(us_yout['views'].quantile([.01,.25,.5,.75,.99]))\nprint(\"\")\nprint(\"Likes quantiles\")\nprint(us_yout['likes'].quantile([.01,.25,.5,.75,.99]))\nprint(\"\")\nprint(\"Dislikes quantiles\")\nprint(us_yout['dislikes'].quantile([.01,.25,.5,.75,.99]))\nprint(\"\")\nprint(\"Comment quantiles\")\nprint(us_yout['comment_count'].quantile([.01,.25,.5,.75,.99]))","a3c165b6":"print('Numerical has a skew of ')\nprint(str(num_attributes.skew().round(decimals=2)))\nprint('Log-transformed improves the skew to ')\nprint(str(log_num_attributes.skew().round(decimals=2)))","1e95b880":"print(\"Top 5 Category ID count\")\nprint(us_yout.category_id.value_counts()[:5])\n\nfig = plt.figure(figsize=(12,9))\nfig.add_subplot(2,1,1)\nsns.countplot('category_id', data=us_yout, palette=\"Set1\")\nsns.countplot('category_id', data=us_yout, palette=\"Set1\").set_title(\"Counting the Video Category's \")\nplt.xlabel(\" \")\nplt.subplots_adjust(hspace = 0.9, top = 0.9)\n\nplt.show()\n\n#### No need for loop as only show 1 count\n# for i in range(len(num_attributes.columns)):\n#     fig.add_subplot(2,2,i+1)\n#     sns.countplot('category_id', data=us_yout, palette=\"Set1\")\n#     sns.countplot('category_id', data=us_yout, palette=\"Set1\").set_title(\"Counting the Video Category's \")\n#     plt.xlabel(num_attributes.columns[i])\n#     plt.subplots_adjust(hspace = 0.9, top = 0.9)\n    \n","69d46982":"fig = plt.figure(figsize=(12,6))\nfor i in range(len(log_num_attributes.columns)):\n    fig.add_subplot(2,2,i+1)\n    sns.boxplot(x='category_id', y=log_num_attributes.iloc[:,i], data=us_yout, palette=\"Set1\")\n    sns.boxplot(x='category_id', y=log_num_attributes.iloc[:,i], data=us_yout, palette=\"Set1\").set_title(log_num_attributes.columns[i].upper() + \" Log Distribuition by Category\")\n    plt.xlabel(\" \")\n    plt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\nplt.show()","6c23c7f5":"correlation = us_yout[['views', 'likes', 'dislikes', 'comment_count', 'category_id']].corr()\n\nf, ax = plt.subplots(figsize=(12,6))\nplt.title('Correlation of numerical attributes', size=16)\nsns.heatmap(correlation, annot=True)\nplt.show()","270d70a8":"correlation['views'].sort_values(ascending=False)","1b7ed2a2":"# Show columns with most null values:\nnum_attributes.isna().sum().sort_values(ascending=False).head()","6707da13":"plt.figure(figsize=(12,6))\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.subplot(2,2,1)\ng = sns.countplot(x='comments_disabled', data=us_yout)\ng.set_title(\"Comments Disabled\")\n\nplt.subplot(2,2,2)\ng1 = sns.countplot(x='ratings_disabled', data=us_yout)\ng1.set_title(\"Rating Disabled\")\n\nplt.subplot(2,2,3)\ng2 = sns.countplot(x='video_error_or_removed', data=us_yout)\ng2.set_title(\"Video Error or Removed\")\nplt.show()\n## Need to figure out how to loop bool?\n# bool_attributes = us_yout[['comments_disabled', 'ratings_disabled', 'video_error_or_removed']].copy()\n# for i in range(len(bool_attributes.columns)):\n#     fig.add_subplot(2,2,i+1)\n#     sns.countplot(x=bool_attributes.columns[i], data=us_yout)\n#     sns.countplot(x=bool_attributes.columns[i], data=us_yout).set_title(bool_attributes.columns[i].upper())\n#     plt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n# plt.show()","95f6d479":"correlation_disable = us_yout[['views', 'likes', 'dislikes', 'comment_count', 'category_id', 'comments_disabled', 'ratings_disabled']].corr()\n\nf, ax = plt.subplots(figsize=(12,6))\nplt.title('Correlation of numerical attributes and disable attribute', size=16)\nsns.heatmap(correlation_disable, annot=True)\nplt.show()","ba3ec573":"correlation_disable['views'].sort_values(ascending=False)","3a691def":"import matplotlib as mpl","72c21b1d":"mpl.rcParams['font.size']= 15              \nmpl.rcParams['savefig.dpi']= 100         \nmpl.rcParams['figure.subplot.bottom']= .1 ","d7452442":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=1000,\n                          max_font_size=120, \n                          random_state=42\n                         ).generate(str(us_yout['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\")\nplt.axis('off')\nplt.show()","aa6b15d7":"us_yout['publish_time'].head()","25f367ac":"## Convert format to Y\/M\/D\nus_yout['publish_time'] = pd.to_datetime(us_yout['publish_time'], format='%Y-%m-%dT%H:%M:%S.%fZ')","07747baa":"us_yout['month'] = us_yout['publish_time'].dt.month\n\nprint(\"Category Name count\")\nprint(us_yout['month'].value_counts()[:5])\n\nplt.figure(figsize = (14,10))\nplt.subplots_adjust(hspace = 1, top = 1)\n\nplt.subplot(3,1,1)\ng = sns.countplot('month', data=us_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting Months \")\ng.set_xlabel(\"Months\")\ng.set_ylabel(\"Count\")\n\nplt.subplot(3,1,2)\ng1 = sns.boxenplot(x='month', y='likes', data=us_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Like by Month\")\ng1.set_xlabel(\"Months\")\ng1.set_ylabel(\"Like\")\n\nplt.subplot(3,1,3)\ng2 = sns.boxenplot(x='month', y='views', data=us_yout, palette=\"Set1\")\ng2.set_xticklabels(g.get_xticklabels(),rotation=45)\ng2.set_title(\"View by Month\")\ng2.set_xlabel(\"Months\")\ng2.set_ylabel(\"Views\")\n\nplt.show()","4bc3b8c4":"# Path of file to read from other\nfile_path_RU = '..\/input\/youtube-new\/RUvideos.csv'\nfile_path_MX = '..\/input\/youtube-new\/MXvideos.csv'\nfile_path_KR = '..\/input\/youtube-new\/KRvideos.csv'\nfile_path_JP = '..\/input\/youtube-new\/JPvideos.csv'\nfile_path_IN = '..\/input\/youtube-new\/INvideos.csv'\nfile_path_GB = '..\/input\/youtube-new\/GBvideos.csv'\nfile_path_FR = '..\/input\/youtube-new\/FRvideos.csv'\nfile_path_DE = '..\/input\/youtube-new\/DEvideos.csv'\nfile_path_CA = '..\/input\/youtube-new\/CAvideos.csv'\n\n#Load data into panda Dataframe.\nru_yout = pd.read_csv(file_path_RU, encoding='ISO-8859-1')\nmx_yout = pd.read_csv(file_path_MX, encoding='ISO-8859-1')\nkr_yout = pd.read_csv(file_path_KR, encoding='ISO-8859-1')\njp_yout = pd.read_csv(file_path_JP, encoding='ISO-8859-1')\nin_yout = pd.read_csv(file_path_IN, encoding='ISO-8859-1')\ngb_yout = pd.read_csv(file_path_GB)\nfr_yout = pd.read_csv(file_path_FR, encoding='ISO-8859-1')\nde_yout = pd.read_csv(file_path_DE, encoding='ISO-8859-1')\nca_yout = pd.read_csv(file_path_CA)\n\n# Concat into 1 data\nglobal_yout = pd.concat([us_yout, ru_yout, mx_yout, kr_yout, jp_yout, in_yout, gb_yout, fr_yout, de_yout, ca_yout])","cacb3b0c":"global_yout.head()","bff9dacc":"print(global_yout.shape)\nprint(global_yout.nunique().sort_values(ascending=False))","3c292b82":"global_yout.info()","12cd2d56":"print(\"Top 5 Category ID count\")\nprint(global_yout.category_id.value_counts()[:5])\n\nfig = plt.figure(figsize=(12,9))\nfig.add_subplot(2,1,1)\nsns.countplot('category_id', data=global_yout, palette=\"Set1\")\nsns.countplot('category_id', data=global_yout, palette=\"Set1\").set_title(\"Counting the Video Category's \")\nplt.xlabel(\" \")\nplt.subplots_adjust(hspace = 0.9, top = 0.9)\n\nplt.show()","0e150bf5":"num_global = global_yout.select_dtypes(include='int64').drop('category_id', axis=1).copy()\nlog_num_global = np.log(num_global + 1)\n\nfig = plt.figure(figsize=(12,6))\nfor i in range(len(log_num_global.columns)):\n    fig.add_subplot(2,2,i+1)\n    sns.boxplot(x='category_id', y=log_num_global.iloc[:,i], data=global_yout, palette=\"Set1\")\n    sns.boxplot(x='category_id', y=log_num_global.iloc[:,i], data=global_yout, palette=\"Set1\").set_title(log_num_global.columns[i].upper() + \" Log Distribuition by Category\")\n    plt.xlabel(\" \")\n    plt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\nplt.show()","d0f787c2":"correlation_global = global_yout[['views', 'likes', 'dislikes', 'comment_count', 'category_id']].corr()\n\nf, ax = plt.subplots(figsize=(12,6))\nplt.title('Global Correlation of numerical attributes', size=16)\nsns.heatmap(correlation_global, annot=True)\nplt.show()","70d5fc62":"correlation_global['views'].sort_values(ascending=False)","c9a439df":"plt.figure(figsize=(12,6))\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.subplot(2,2,1)\ng = sns.countplot(x='comments_disabled', data=global_yout)\ng.set_title(\"Comments Disabled\")\n\nplt.subplot(2,2,2)\ng1 = sns.countplot(x='ratings_disabled', data=global_yout)\ng1.set_title(\"Rating Disabled\")\n\nplt.subplot(2,2,3)\ng2 = sns.countplot(x='video_error_or_removed', data=global_yout)\ng2.set_title(\"Video Error or Removed\")\nplt.show()","0acf9e3a":"correlation_global_disable = global_yout[['views', 'likes', 'dislikes', 'comment_count', 'category_id', 'comments_disabled', 'ratings_disabled']].corr()\n\nf, ax = plt.subplots(figsize=(12,6))\nplt.title('Global Correlation of numerical attributes and disable attribute', size=16)\nsns.heatmap(correlation_global_disable, annot=True)\nplt.show()","1668b126":"correlation_global_disable['views'].sort_values(ascending=False)","eb5b085f":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=1000,\n                          max_font_size=120, \n                          random_state=42\n                         ).generate(str(global_yout['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\")\nplt.axis('off')\nplt.show()","309eb166":"global_yout['publish_time'].head()","dd41db11":"## Convert format to Y\/M\/D\nglobal_yout['publish_time'] = pd.to_datetime(global_yout['publish_time'], format='%Y-%m-%d %H:%M:%S.%f')","5c0f2a05":"global_yout['month'] = global_yout['publish_time'].dt.month\n\nprint(\"Category Name count\")\nprint(global_yout['month'].value_counts()[:5])\n\nplt.figure(figsize = (14,10))\nplt.subplots_adjust(hspace = 1, top = 1)\n\nplt.subplot(3,1,1)\ng = sns.countplot('month', data=global_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting Months \")\ng.set_xlabel(\"Months\")\ng.set_ylabel(\"Count\")\n\nplt.subplot(3,1,2)\ng1 = sns.boxenplot(x='month', y='likes', data=global_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Like by Month\")\ng1.set_xlabel(\"Months\")\ng1.set_ylabel(\"Like\")\n\nplt.subplot(3,1,3)\ng2 = sns.boxenplot(x='month', y='views', data=global_yout, palette=\"Set1\")\ng2.set_xticklabels(g.get_xticklabels(),rotation=45)\ng2.set_title(\"View by Month\")\ng2.set_xlabel(\"Months\")\ng2.set_ylabel(\"Views\")\n\nplt.show()","f45b6f7a":"category_id 10 seem to be the most popular type.\n\n*NOTE:*\n* Find out what each number represent and replace them.","3d2fd381":"## 2. Exploring numerical columns\n[Back to contents](#top)","83fab459":"<a id='explore_num_columns'><\/a>","7463281f":"Find Skew of data of numerical.\nFrom total 5 numerical we will drop category_id as they are id data.","1674ef72":"### Import modules","4e63cb15":"What about bool variable?","8b5bd376":"### Categorical columns within the dataset","a204f5f7":"### Numerical columns within the dataset","48264f56":"Seem like there are a lot of similarity between global and US.","d9101d15":"## Missing\/null values","fe32db72":"<a id='top'><\/a>","5aab9613":"<a id='prelim_explore'><\/a>","41b175cf":"Seem like having disable rating and comment do not affect view and like.","e0d80f40":"### Looking the Views, likes, dislikes distribuition by category_id","31cabd0c":"Welcome to my first kennel. In this kennel I am trying to build my skill and make use of my knowledge to understanding data.\nThe goal is to:\n* What is the most frequent type of video.\n* What is the most popular.\n* What is most frequent for tag.\n* Do publish time and views\/like time relate.\n\nI will start with US first and compare globally.","b30ac6a8":"There are 5 numerical columns (3 bool)\nNotes:\n* Some anamolies may cause column to become object.\n* bool type data is include because we only exclude object. We can consider convert to 1\/0 for True\/False if needed.","5f878c87":"## Looking the Views, likes, dislikes distribuition by category_id","cba0f69a":"<a id='explore'><\/a>","9d43af02":"## Assess correlations","194e0b00":"## Assess correlations","ccde9515":"Analyze by date\/time","3a0bdf03":"[Explore the Data](#explore) <br>\n> [1. Prelim observations](#prelim_explore) <br>\n   [2. Exploring numerical columns](#explore_num_columns) <br>\n   [3. Exploring categorical columns](#explore_cat_columns)  <br>","bda04907":"* This data appear to be very clean with no null\/missing in numerical columns.","9a9ba273":"## 1. Prelim observations\nExamples from the dataset are shown below. <br><br>\n[Back to contents](#top)","33f3be09":"### Reading in input file","7b3b0a51":"The data is skew so we need to log- transform","89478696":"The shape of data has 40946 instances\/rows with 16 attributes\/columns","0fae38ce":"What about wordcloud?","eafb7306":"## Compare with Global","26fbfd4d":"Thank you very much for viewing my first kernel. Do let me know if there is any mistake or what shoud I do to improve.\n\nOverall I'm very happy of how it's turn out.","1668e45a":"## Attemping to exploring Youtube Trending to understand its correlation.","eae31fb1":"# Explore the Data\nWe first explore data to:\n1. Understanding of available data\n2. Check for missing or null\n3. Find potential outliers\n4. Find correlations\n5. Check for data skew\n\n[Back to contents](#top)","53fe5247":"Let see if correlation is similar with global.","4afb6720":"* The result show us that views and like have the highest correlation.","5cc96a89":"## Analyze by date\/time","defda948":"<a id='explore_cat_columns'><\/a>","10b799c6":"## Visualizing the Word Cloud of Tagged videos","184304a3":"Seem there are some video that have comment and rating disable.","bd7544cd":"Let's look at other bool variable:\n1. comments_disabled\n2. ratings_disabled\n3. video_error_or_removed","e4ac2e54":"## 3. Exploring categorical columns\n[Back to contents](#top)"}}