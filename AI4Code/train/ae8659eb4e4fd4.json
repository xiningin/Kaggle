{"cell_type":{"754a6779":"code","00c87d70":"code","ada1dd5e":"code","91039a5b":"code","aa1a9c9c":"code","4e48e750":"code","3227341a":"code","e5520b78":"code","7548e1d7":"code","72396cb4":"code","e2c15cd9":"code","a97805ff":"code","837f0268":"code","42a5df3f":"code","a3c507ac":"code","c62d610b":"code","0d9cac85":"code","90c0bdf0":"code","0ebe6b65":"code","5ecaaded":"code","1b3ec7d3":"code","dc19801f":"code","60c213dd":"code","31d8d992":"code","f344ddfd":"code","2a9193df":"markdown","29bf97e4":"markdown","c4770eb0":"markdown","a04ef9aa":"markdown","d7a21899":"markdown","6285d504":"markdown","10c1792a":"markdown","0fb40982":"markdown","b5c78373":"markdown","49568d02":"markdown","0b9cb884":"markdown","086b0478":"markdown","3bb35e3e":"markdown","483d2900":"markdown","bacb0919":"markdown","8482a616":"markdown","303f6187":"markdown","931758ef":"markdown","8a9d8ec8":"markdown","517599d2":"markdown","5d33aea8":"markdown","9ea146cc":"markdown","94b207f9":"markdown","33de1879":"markdown","d5a33f5b":"markdown","c363ac4e":"markdown","4cae7c3b":"markdown","c60db847":"markdown","9c5f3851":"markdown","41c5a03a":"markdown","ea71f805":"markdown","8d316e6e":"markdown","2871fccf":"markdown"},"source":{"754a6779":"import pandas as pd\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nwarnings.filterwarnings(\"ignore\")\ndf=pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","00c87d70":"df= df.drop('Serial No.',axis=1)\ndf.head()","ada1dd5e":"df.isnull().sum()\ndf.head()","91039a5b":"df['GRE Score']=pd.to_numeric(df['GRE Score'])\ndf['TOEFL Score']=pd.to_numeric(df['TOEFL Score'])\ndf['University Rating']=pd.to_numeric(df['University Rating'])\ndf['SOP']=pd.to_numeric(df['SOP'])\n\ndf['CGPA']=pd.to_numeric(df['CGPA'])\ndf['Research']=pd.to_numeric(df['Research'])\n","aa1a9c9c":"df['GRE Score'].describe()\n","4e48e750":"fig=sns.distplot(df['GRE Score'])\nplt.show()","3227341a":"df['TOEFL Score'].describe()","e5520b78":"fig=sns.distplot(df['TOEFL Score'])\nplt.show()","7548e1d7":"df['CGPA'].describe()","72396cb4":"fig=sns.distplot(df['CGPA'])\nplt.show()","e2c15cd9":"fig=sns.distplot(df['SOP'])\nplt.show()","a97805ff":"df['University Rating'].describe()","837f0268":"fig=sns.distplot(df['University Rating'])\nplt.show()","42a5df3f":"fig = sns.regplot(x=\"GRE Score\", y=\"TOEFL Score\", data=df)\nplt.title(\"GRE Score vs TOEFL Score\")\nplt.show()","a3c507ac":"fig = sns.regplot(x=\"GRE Score\", y=\"CGPA\", data=df)\nplt.title(\"GRE Score vs CGPA\")\nplt.show()","c62d610b":"\nfig = sns.regplot(x=\"GRE Score\", y=\"Chance of Admit \", data=df)\nplt.title(\"GRE Score vs Chance of Admit\")\nplt.show()\n","0d9cac85":"fig = sns.regplot(x=\"GRE Score\", y=\"LOR \", data=df)\nplt.title(\"GRE Score vs LOR\")\nplt.show()","90c0bdf0":"fig = sns.regplot(x=\"CGPA\", y=\"SOP\", data=df)\nplt.title(\"CGPA vs SOP\")\nplt.show()","0ebe6b65":"import numpy as np\ncorr=df.corr()\nfig, ax = plt.subplots(figsize=(8, 8))\ncolormap = sns.diverging_palette(220, 10, as_cmap=True)\ndropSelf = np.zeros_like(corr)\ndropSelf[np.triu_indices_from(dropSelf)] = True\ncolormap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, cmap=colormap, linewidths=.5, annot=True, fmt=\".2f\", mask=dropSelf)\nplt.show()","5ecaaded":"from sklearn.model_selection import train_test_split\n\nX = df.drop(['Chance of Admit '], axis=1)\ny= df['Chance of Admit ']\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20,shuffle=False)","1b3ec7d3":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nmodels=[[\"DecisionTree:\",DecisionTreeRegressor()],\n        [\"RandomForest:\",RandomForestRegressor()],\n        [\"KNeighbors:\",KNeighborsRegressor(n_neighbors=2)],\n        [\"LinearReg:\",LinearRegression()],\n          ]\n\nfor name,model in models:\n    model=model\n    model.fit(X_train,y_train)\n    predictions=model.predict(X_test)\n    \n    print(name, (np.sqrt(mean_squared_error(y_test, predictions))))","dc19801f":"classifier = LinearRegression()\nclassifier.fit(X,y)\nfeature_names = X.columns\nimportance_frame = pd.DataFrame()\nimportance_frame['Features'] = X.columns\nimportance_frame['Importance'] = classifier.coef_\nimportance_frame = importance_frame.sort_values(by=['Importance'], ascending=True)","60c213dd":"plt.barh([1,2,3,4,5,6,7], importance_frame['Importance'], align='center', alpha=0.5)\nplt.yticks([1,2,3,4,5,6,7], importance_frame['Features'])\nplt.xlabel('Importance')\nplt.title('Feature Importances')\nplt.show()","31d8d992":"classifier = DecisionTreeRegressor()\nclassifier.fit(X,y)\nfeature_names = X.columns\nimportance_frame = pd.DataFrame()\nimportance_frame['Features'] = X.columns\nimportance_frame['Importance'] = classifier.feature_importances_\nimportance_frame = importance_frame.sort_values(by=['Importance'], ascending=True)","f344ddfd":"plt.barh([1,2,3,4,5,6,7], importance_frame['Importance'], align='center', alpha=0.5)\nplt.yticks([1,2,3,4,5,6,7], importance_frame['Features'])\nplt.xlabel('Importance')\nplt.title('Feature Importances')\nplt.show()","2a9193df":"**GRE and TOEFL**","29bf97e4":"**Feature Importance**","c4770eb0":"# Distribution of the parameters","a04ef9aa":"**CGPA and SOP**","d7a21899":"**Once again, we see that students with higher CGPA tend to perform better on the GRE**","6285d504":"# Preparing the data to train and test","10c1792a":"**From the above plot it is evident that LOR does not vary in proportion to GRE like TOEFL or CGPA. This is a patent point which illustrates that a student with a high GRE score may lack good relationship with his\/her staff and thereby lacks in LOR and vice versa**","0fb40982":"**This plot provides a more realistic illustration of the actual process**","b5c78373":"**By taking a glance at the above data, it is evident that we have a diverse pool of students ranging from perfect scorers to students who secure minimum grade. It will now be interesting to determine correlation between our different parameters and see if top scorers in one test do well on the others as well.**","49568d02":"# Initialization","0b9cb884":"**GRE score distribution**","086b0478":"**The purpose of this analysis to take a deeper glance into grad school admissions with respect to students from India. We will consider all parameters like GRE score, GPA, SOP etc.**","3bb35e3e":"**CGPA**","483d2900":"**GRE Score and Chance of Admit**","bacb0919":"# Finding correlation between parameters","8482a616":"**Testing different algorithms to determine most efficicent**","303f6187":"**SOP**","931758ef":"**Checking for any NaN values**","8a9d8ec8":"**We can see that Linear Regression has the least mean square error. Thus it gives us the most accurate results(in this case)**","517599d2":"**Plotting the features**","5d33aea8":"**Lets try using Decision Tree Regressor**","9ea146cc":"**GRE and CGPA**","94b207f9":"**University Rating distribution**","33de1879":"**GRE Score and LOR**","d5a33f5b":"**Once again,not as correlated as the initally presented cases**","c363ac4e":"**We find that the \"Serial No.\" column is unnecessary and hence we drop it**","4cae7c3b":"**TOEFL Score Distribution**","c60db847":"**Till now we have seen data which tend to be positively correlated. Now lets look at some data which may not be**","9c5f3851":"**Lets illustrate another example of this case**","41c5a03a":"**Using the Linear Regression model, we find out that the admission is strongly dependent on CGPA of the student and decreases whereas SOP is the least priority. This information seems to be quite contradictory, because it is known that a strong SOP has a higher chance of acceptance than a higher GRE score**","ea71f805":"**Here we import the necessary packages and also read the file into a Data Frame**","8d316e6e":"# Converting all the data to its correct type","2871fccf":"**We see a positive correlation for the most part in this case.Students who perform well on the GRE also do so on the TOEFL(except for a few outliers)**"}}