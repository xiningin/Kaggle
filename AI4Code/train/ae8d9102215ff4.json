{"cell_type":{"dedfaa55":"code","b2c6c25f":"code","8953ce5c":"code","83d1e9fb":"code","3bf55c88":"code","a375005e":"code","6fca2fa9":"code","f9a7e098":"code","a91c18ff":"code","f8ea15d2":"code","45163238":"code","b7280e39":"code","4886f34b":"code","9b9a0143":"code","437371d9":"code","0701475e":"code","ab9e736a":"code","8803f094":"code","e79fb614":"markdown","8b9c78b8":"markdown","bd7fcb1e":"markdown","dcfcf0a7":"markdown","29c08fe9":"markdown","863c52db":"markdown","f260a747":"markdown","a38a1519":"markdown","feae100c":"markdown","2e566018":"markdown"},"source":{"dedfaa55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","b2c6c25f":"# As you can see from info method. There are 16598.\n# However, Year has 16327 entries. That means Year has NAN value.\n# Also Year should be integer but it is given as float. Therefore we will convert it.\n# In addition, publisher has NAN values.\ndata = pd.read_csv(\"..\/input\/vgsales.csv\")\ndata.info()","8953ce5c":"# Lets start with dropping nan values\ndata.dropna(how=\"any\",inplace = True)\ndata.info()","83d1e9fb":"# Then convert data from float to int\ndata.Year = data.Year.astype(int)\ndata.head()     # head method always gives you overview of data.","3bf55c88":"# bokeh packages\nfrom bokeh.io import output_file,show,output_notebook,push_notebook\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource,HoverTool,CategoricalColorMapper\nfrom bokeh.layouts import row,column,gridplot\nfrom bokeh.models.widgets import Tabs,Panel\noutput_notebook()","a375005e":"plot = figure(x_axis_label = \"x\",y_axis_label = \"y\",tools = \"pan,box_zoom\")\nplot.circle(x=[5,4,3,2,1],y=[1,2,3,4,5],size = 10,color = \"black\",alpha = 0.7)\noutput_file(\"my_first_bokeh_plot.html\")\nshow(plot)\n","6fca2fa9":"# There are other types of glyphs\nplot = figure()\nplot.diamond(x=[5,4,3,2,1],y=[1,2,3,4,5],size = 10,color = \"black\",alpha = 0.7)\nplot.cross(x=[1,2,3,4,5],y=[1,2,3,4,5],size = 10,color = \"red\",alpha = 0.7)\nshow(plot)","f9a7e098":"# line\nplot = figure()\nplot.line(x=[1,2,3,4,5,6,7],y = [1,2,3,4,5,5,5],line_width = 2)\nplot.circle(x=[1,2,3,4,5,6,7],y = [1,2,3,4,5,5,5],fill_color = \"white\",size = 10)\nshow(plot)","a91c18ff":"# patches\nplot = figure()\nplot.patches(xs = [[1,1,2,2],[2,2,3,3]],ys = [[1,2,1,2],[1,2,1,2]],fill_color = [\"purple\",\"red\"],line_color = [\"black\",\"black\"])\n#show(plot)","f8ea15d2":"# Lets use source in a basic example\n# As you know from info() method we have Year and  Global_Sales columns\n# Lets plot it to learn how to use ColumnDataSource\nsource = ColumnDataSource(data)\nplot = figure()\nplot.circle(x=\"Year\",y=\"Global_Sales\",source = source)\nshow(plot)\n# If you remember our column names are \"Year\" and \"Global_Sales\" in pandas data frame.\n# Nothing change when we convert pandas data frame to source.\n# You can think source is like pandas data frame at this point. Only for now :)\n","45163238":"# Selection appearance\nplot = figure(tools=\"box_select,lasso_select\")\nplot.circle(x= \"Year\",y = \"Global_Sales\",source=source,color = \"black\",\n            selection_color = \"orange\",\n            nonselection_fill_alpha = 0.2,\n           nonselection_fill_color = \"blue\")\nshow(plot)","b7280e39":"# Hover appearance\nhover = HoverTool(tooltips = [(\"Genre of game\",\"@Genre\"),(\"Publisher of game\",\"@Publisher\")], mode=\"hline\")\nplot = figure(tools=[hover,\"crosshair\"])\nplot.circle(x= \"Year\",y = \"Global_Sales\",source=source,color =\"black\",hover_color =\"red\")\nshow(plot)","4886f34b":"# Color mapping\nfactors = list(data.Genre.unique()) # what we want to color map. I choose genre of games\ncolors = [\"red\",\"green\",\"blue\",\"black\",\"orange\",\"brown\",\"grey\",\"purple\",\"yellow\",\"white\",\"pink\",\"peru\"]\nmapper = CategoricalColorMapper(factors = factors,palette = colors)\nplot =figure()\nplot.circle(x= \"Year\",y = \"Global_Sales\",source=source,color = {\"field\":\"Genre\",\"transform\":mapper})\nshow(plot)\n# plot looks like confusing but I think you got the idea of mapping ","9b9a0143":"# Row and column\np1 = figure()\np1.circle(x = \"Year\",y= \"Global_Sales\",source = source,color=\"red\")\np2 = figure()\np2.circle(x = \"Year\",y= \"EU_Sales\",source = source,color=\"black\")\np3 = figure()\np3.circle(x = \"Year\",y= \"NA_Sales\",source = source,color=\"blue\")\np4 = figure()\np4.circle(x = \"Year\",y= \"JP_Sales\",source = source,color=\"orange\")\nlayout1 = row(p1,p2)\nlayout2 = row(p3,p4)\nlayout3= column(layout1,layout2)\nshow(layout3)","437371d9":"#nested\n# I use p1, p2 and p3 that are created at above\nlayout = row(column(p1,p2),p3)\nshow(layout)","0701475e":"# Grid plot \nlayout = gridplot([[p1,p2],[p3,None]],toolbar_location=\"above\")\nshow(layout)\n","ab9e736a":"#Tabbed layout\n#I use p1 and p2 that are created at above\ntab1 = Panel(child = p1,title = \"Global_Sales\")\ntab2 = Panel(child = p2,title = \"EU_Sales\")\ntabs = Tabs(tabs=[tab1,tab2])\nshow(tabs)","8803f094":"# linking axis\n# We will use p1 and p2 that are created at above\np2.x_range = p1.x_range\np2.y_range = p1.y_range\nlayout4=column(p1,p2)\nshow(layout4)","e79fb614":"## Explanation of Bokeh Packages\nFor bokeh library, we will use some packages:\n* output_file: that save our figure with .html extension\n* show: show the figure\n* figure: creates empty figure\n* ColumnarDataSource: Data source of bokeh\n* HoverTool: like cursor\n* CategoricalColorMapper: Like a hue in seaborn. If you do not know it look at my seaborn tutorial\n    * https:\/\/www.kaggle.com\/kanncaa1\/seaborn-for-beginners\n* Row and column: puts plots in row order or column order in figure\n* gridplot\n* Tabs and Panel: Panel is figure for each plot and tab is like button\n    \n","8b9c78b8":"## Layouts\nArranging multiple plots like subplot in matplot library.\n* Row and columns: puts plots in row order or column order in figure\n* Grid arrangement: list of order for layout\n    * toolbar_location: location of tool bar that can be below above left right or none\n* Tabbed layout\n    * Panel: like a figure\n    * Tabs: like a button \n","bd7fcb1e":"# INTRODUCTION\nIn this tutorial, we are going to learn basics of bokeh library. Bokeh is interactive visualization library.\n<br> I divide bokeh tutorial into 2 parts. Because kaggle has problem while running bokeh that cause crash in browser.\n1. PART 1:\n    1. Basic Data Exploration with Pandas\n    1. Explanation of Bokeh Packages\n    1. Plotting with Glyphs\n    1. Additional Glyps\n    1. Data Formats\n    1. Customizing Glyphs\n    1. Layouts\n    1. Linking Plots\n1. PART 2: https:\/\/www.kaggle.com\/kanncaa1\/interactive-bokeh-tutorial-part-2\/editnb\n    1. Callbacks \n        * Slider\n        * dropdowns\n","dcfcf0a7":"##  Additional Glyps\n* line: line plot\n    * line_width: width of line\n    * fill_color: filling inside of circle with color\n* patches: multiple polynomial shapes at once on a plot\n    * fill_color: filling inside of patches\n    * line_color: color of line  around patches\n ","29c08fe9":"# CONCLUSION\nIf you like the bokeh library, I am going to dive deep into bokeh.\n<br> I divide bokeh tutorial into 2 parts. Because kaggle has problem while running bokeh that cause crash in browser.\n<br> Also look at Part 2: https:\/\/www.kaggle.com\/kanncaa1\/interactive-bokeh-tutorial-part-2\/editnb\n### If you have any question, I am happy to hear it. I thank c who is developer of Bokeh for this useful visualization library.\n","863c52db":"## Plotting with Glyphs\n* Glyphs: visual shapes like circle, square, rectangle or diamond\n* figure: creates figure\n    * x_axis_label: label of x axis\n    * y_axis_label: label of y axis\n    * tools: tools to move or zoom plot\n        * pan: slides the plot\n        * box_zoom: zoom in \n* circle: like scatter in matplotlib\n    * size: size of circles\n    * color: color\n    * alpha: opacity\n* output_file:  that save our figure with .html extension\n* show: show the figure\n","f260a747":"##  Basic Data Exploration with Pandas\n<br>Before everyting, we need to import data with read_csv().\n<br>In order to make visualization we need to understand data and look whether there are nan values in data or not.\n<br>We will use pandas library:\n    * read_csv()\n    * info()\n    * head()\n","a38a1519":"## Linking Plots\nLinks plot together. For example, there are two plots and we zoom in one of them. Other one is zoomed automatically. ","feae100c":"## Data Formats\nBokeh can use list, numpy arrays and pandas as a data source. We have pandas data frame in this tutorial.","2e566018":"## Customizing Glyphs\n* Selection appearance: when you select some point on data, that points shine and others burn out\n    * tools:\n        * box_select and lasso_select: selection tools\n    * selection_color: When you select point, it becomes selected color\n    * nonselection_fill_alpha: Other non selected points become non selected alpha\n    * nonselection_fill_color: Other non selected points become non selected color\n* HoverTool: cursor\n    * Crosshair: line cursor\n    * hover_color: Color of hover\n* Color mapping: color map of chose field. (like hue in seaborn)\n    * factors: names of variable to color map\n    * palette: color of chose factors\n\n"}}