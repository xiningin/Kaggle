{"cell_type":{"394714d6":"code","c5683547":"code","448aad90":"code","1b78f184":"code","9bd5895d":"code","b692d7da":"code","fc925bd2":"code","f47fdb9f":"code","08fc55a2":"code","19bf05c9":"code","eb1fd4cf":"code","7f058c49":"code","12f33c78":"code","d20fd986":"code","224c88d9":"code","98ffec82":"code","7ef8b743":"code","0de5492f":"code","014f4d6d":"code","18ae4bcd":"code","08736605":"code","87e0cc4b":"code","2d230b95":"code","e25ad37f":"code","e062383e":"code","1e6455d7":"code","d1d03304":"code","6895c269":"code","bc3363c0":"code","fefe0a3f":"code","77921163":"code","46f96036":"code","a67f7a29":"code","2bfd59da":"code","901592b7":"code","6bd50468":"code","1bc99adc":"code","7cc2356f":"code","2d891e1a":"code","10fcb186":"code","58852dab":"code","baa9bfcf":"code","9ede6ec0":"code","c9dccd61":"code","3ec0c9b5":"code","383863ab":"code","8e1f9ca2":"code","b3e5223c":"code","24987264":"code","11a268b4":"code","c447d3a3":"code","fcab1252":"markdown","d602f9d0":"markdown","30f6a587":"markdown","63c6cce9":"markdown","e44b0936":"markdown","67514f67":"markdown","47726456":"markdown","84945ef4":"markdown","d03d939a":"markdown","48986aab":"markdown","9ac0a0e9":"markdown","38102d55":"markdown","6a93adae":"markdown","c81a25fb":"markdown","7a0b5d21":"markdown","ebba78b8":"markdown","dd05e93a":"markdown","ab419193":"markdown","bcf87222":"markdown","50b76439":"markdown","15fd7275":"markdown","72aad87e":"markdown","ffb4f0cb":"markdown","99481142":"markdown","cd8ad981":"markdown","dc349de5":"markdown"},"source":{"394714d6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport fuzzywuzzy\nfrom fuzzywuzzy import process\nimport chardet\n\nfrom subprocess import check_output","c5683547":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.\n\nNA2 = pd.read_csv(\"..\/input\/National Assembly 2002 - Updated.csv\", encoding = \"ISO-8859-1\")\nNA8 = pd.read_csv(\"..\/input\/National Assembly 2008.csv\", encoding = \"ISO-8859-1\")\nNA13 = pd.read_csv(\"..\/input\/National Assembly 2013.csv\", encoding = \"ISO-8859-1\")\nprint(\"Data Dimensions are: \", NA2.shape)\nprint(\"Data Dimensions are: \", NA8.shape)\nprint(\"Data Dimensions are: \", NA13.shape)","448aad90":"print(\"NA 2002.csv\")\nNA2.info()\nprint(\"\\nNA 2008.csv\")\nNA8.info()\nprint(\"\\nNA 2013.csv\")\nNA13.info()","1b78f184":"print(NA2.head())\nprint(NA8.head())\nprint(NA13.head())\nprint(NA8.columns, \"\\n>>\\n\", NA13.columns)","9bd5895d":"\nNA8.rename(columns={'Unnamed: 0':'District'}, inplace=True)\nNA13.rename(columns={'Unnamed: 0':'District'}, inplace=True)\nprint(\"NA 8: \", NA8.columns, \"\\nNA 13: \", NA13.columns)\n#NA13 = NA13.drop('Unnamed: 11', axis=1)","b692d7da":"NA8.District = NA8.Seat#.str.split(\"-\", expand=True)[0]\n#Add District column\n#NA8['District'] = NA8['Seat']\nNA8['District'] = NA8['District'].str.replace(\".\",\" \") # to deal with D.I. Khan\n# remove all those substring with () \nNA8['District'] = NA8['District'].str.replace(r\"\\(.*\\)\",\"\")\n# remove numeric\nNA8['District']  = NA8['District'] .str.replace('[^a-zA-Z -]', '')\n#NA8['District'] = NA8['District'].str.replace(r\"Cum.*\",\"\")\n#NA8['District'] = NA8['District'].str.replace(r\"cum.*\",\"\")\n#na18['District'] = na18['District'].str.replace(r\"KUM.*\",\"\")\n# to convert Tribal Area III - Mohman into Tribal Area III\nNA8['District'] = NA8['District'].str.replace(r\"-.*\",\"\")\nNA8['District']  = NA8['District'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nNA8['District']  = NA8['District'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nNA8['District'].unique()","fc925bd2":"NA13.District = NA13.Seat #.str.split(\"-\", expand=True)[0]\n#Add District column\n#NA13['District'] = NA13['Seat']\nNA13['District'] = NA8['District'].str.replace(\".\",\" \") # to deal with D.I. Khan\n# remove all those substring with () \nNA13['District'] = NA13['District'].str.replace(r\"\\(.*\\)\",\"\")\n# remove numeric\nNA13['District']  = NA13['District'] .str.replace('[^a-zA-Z -]', '')\nNA13['District'] = NA13['District'].str.replace(r\"Cum.*\",\"\")\n#na18['District'] = na18['Distirct'].str.replace(r\"KUM.*\",\"\")\n# to convert Tribal Area III - Mohman into Tribal Area III\nNA13['District'] = NA13['District'].str.replace(r\"-.*\",\"\")\nNA13['District']  = NA13['District'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nNA13['District']  = NA13['District'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nNA13['District'].unique()","f47fdb9f":"NA13.head()","08fc55a2":"NA8['Turnout'] = NA8['Turnout'].str.rstrip('%').str.rstrip(' ')\nNA13['Turnout'] = NA13['Turnout'].str.rstrip('%').str.rstrip(' ')\nNA8['Turnout'] = pd.to_numeric(NA8['Turnout'], errors='coerce')\nNA13['Turnout'] = pd.to_numeric(NA13['Turnout'], errors='coerce')","19bf05c9":"NA2['Year'] = \"2002\"\nNA8['Year'] = \"2008\"\nNA13['Year'] = \"2013\"","eb1fd4cf":"print(NA2.head(), \"\\n\", NA8.head(), \"\\n\", NA13.head())","7f058c49":"print(\"NA2\", NA2.isnull().any(), \"\\nNA8: \", NA8.isnull().any(), \"\\nNA13:\", NA13.isnull().any())","12f33c78":"print(\"\\n NA2\", NA2.columns, \"\\n NA8\", NA8.columns, \"\\n NA13\", NA13.columns)","d20fd986":"NA2.rename(columns={'Constituency_title':'ConstituencyTitle', 'Candidate_Name':'CandidateName', 'Total_Valid_Votes':'TotalValidVotes', 'Total_Rejected_Votes':'TotalRejectedVotes', 'Total_Votes':'TotalVotes', 'Total_Registered_Voters':'TotalRegisteredVoters', }, inplace=True)\nNA2.columns","224c88d9":"df = pd.concat([NA2, NA8, NA13])\ndf.shape\ndf.head()","98ffec82":"df.isnull().any()","7ef8b743":"# get all the unique values in the 'District' column\n#df['District'] = df['District'].astype(str)\ndist = df['District'].unique()\n#dist.sort()\ndist","0de5492f":"# convert to lower case\ndf['District'] = df['District'].str.lower()\n# remove trailing white spaces\ndf['District'] = df['District'].str.strip()","014f4d6d":"dist = df['District'].unique()\n#dist.sort()\ndist","18ae4bcd":"# get the top 10 closest matches to \"charsadda\"\nmatches = fuzzywuzzy.process.extract(\"charsadda\", dist, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n\n# take a look at them\nmatches","08736605":"# function to replace rows in the provided column of the provided dataframe\n# that match the provided string above the provided ratio with the provided string\ndef replace_matches_in_column(df, column, string_to_match, min_ratio = 90):\n    # get a list of unique strings\n    strings = df[column].unique()\n    \n    # get the top 10 closest matches to our input string\n    matches = fuzzywuzzy.process.extract(string_to_match, strings, \n                                         limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n\n    # only get matches with a ratio > 90\n    close_matches = [matches[0] for matches in matches if matches[1] >= min_ratio]\n\n    # get the rows of all the close matches in our dataframe\n    rows_with_matches = df[column].isin(close_matches)\n\n    # replace all rows with close matches with the input matches \n    df.loc[rows_with_matches, column] = string_to_match\n    ","87e0cc4b":"# use the function we just wrote to replace close matches to \"charsadda\" \nreplace_matches_in_column(df=df, column='District', string_to_match=\"charsadda\")","2d230b95":"dist = df['District'].unique()\n#dist.sort()\ndist","e25ad37f":"replace_matches_in_column(df=df, column='District', string_to_match=\"nowshera\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"rawalpindi\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"sheikhupura\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"shikarpur\")\nreplace_matches_in_column(df=df, column='District', string_to_match=\"nankana sahib\")","e062383e":"del dist\n\npty = df['Party'].unique()\npty.sort()\npty","1e6455d7":"df['Party'] = df['Party'].replace(['MUTTHIDA\\xa0MAJLIS-E-AMAL\\xa0PAKISTAN'], 'Muttahidda Majlis-e-Amal Pakistan')\ndf['Party'] = df['Party'].replace(['Pakistan Muslim League'], 'Pakistan Muslim League (QA)')\n#converting text to lower case & removing white spaces\ndf['Party'] = df['Party'].str.lower()\ndf['Party'] = df['Party'].str.strip()","d1d03304":"# As I coded this earlier, I wouldn't change it due to lower case letters. \nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Balochistan National Movement\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Independent\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Istiqlal Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Jamote Qaumi Movement\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Labour Party Pakistan\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Mohib-e-Wattan Nowjawan Inqilabion Ki Anjuman (MNAKA)\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Muttahida Qaumi Movement\") # Muttahida Qaumi Movement Pakistan\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Muttahidda Majlis-e-Amal\") # Muttahidda Majlis-e-Amal Pakistan\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"National Peoples Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Nizam-e-Mustafa Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pak Muslim Alliance\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Awami Party\")\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Democratic Party\")\n# After analyzing each of the below strings.\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (QA)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (N)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (J)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Muslim League (F)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party Parliamentarians\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party(Shaheed Bhutto)\", min_ratio =95)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Peoples Party(Sherpao)\", min_ratio =97)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Pakistan Tehreek-e-Insaf\", min_ratio =95)\nreplace_matches_in_column(df=df, column='Party', string_to_match=\"Saraiki Sooba Movement Pakistan\", min_ratio =95)\n","6895c269":"#fuzzywuzzy.process.extract(\"Pakistan Muslim League (QA)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Muslim League (N)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Muslim League (J)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Muslim League (F)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Peoples Party Parliamentarians\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Peoples Party(Shaheed Bhutto)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >95\n#fuzzywuzzy.process.extract(\"Pakistan Peoples Party(Sherpao)\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >97\n#fuzzywuzzy.process.extract(\"Pakistan Tehreek-e-Insaf\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >95\n#fuzzywuzzy.process.extract(\"Saraiki Sooba Movement Pakistan\", pty, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >95\n","bc3363c0":"df['Party'] = df['Party'].str.lower()\n# few fixes taken from https:\/\/www.kaggle.com\/usman786\/exploratory-data-analysis-for-interesting-insights\/notebook\ndf['Party'].replace(['muttahida qaumi movement pakistan'], 'muttahida qaumi movement', inplace = True)\ndf['Party'].replace(['indeindependentdente','independent (retired)','indepndent'], 'independent',inplace = True)\ndf['Party'].replace(['indeindependentdente','independent (retired)','indepndent'], 'independent',inplace = True)\ndf['Party'].replace(['muttahidda majlis-e-amal pakistan','mutthida\\xa0majlis-e-amal\\xa0pakistan'\n                     ,'mutthida\u00ef\u00bf\u00bdmajlis-e-amal\u00ef\u00bf\u00bdpakistan'] \n                     ,'muttahidda majlis-e-amal' ,inplace = True)\ndf['Party'].replace(['nazim-e-mistafa'], 'nizam-e-mustafa party' ,inplace = True)\n\npty = df['Party'].unique()\npty.sort()\npty","fefe0a3f":"#del pty\n#convert textual content to lower case & remove trailing white spaces\ndf['CandidateName'] = df['CandidateName'].str.lower()\ndf['CandidateName'] = df['CandidateName'].str.strip()\ndf['CandidateName'].head(10)","77921163":"# remove mr at the beginning of names.\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mr \", value=\"\")\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mrs \", value=\"\")\ndf['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"miss \", value=\"\")\n#df['CandidateName'] = df.loc[:, 'CandidateName'].replace(regex=True, to_replace=\"mis \", value=\"\")\ndf['CandidateName'].head(10)","46f96036":"cn = df['CandidateName'].unique()\ncn.sort()\nprint(\"cn size: \", cn.shape, \"\\nValues: \", cn) ","a67f7a29":"df['CandidateName']","2bfd59da":"fuzzywuzzy.process.extract(\"zumurad khan\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\nfuzzywuzzy.process.extract(\"zobaida jalal\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >79\n#fuzzywuzzy.process.extract(\"barkat ali\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"sher muhammad baloch\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"gulab baloch\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90\n#fuzzywuzzy.process.extract(\"babu gulab\", cn, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio) # acceptance value >90","901592b7":"replace_matches_in_column(df=df, column='CandidateName', string_to_match=\"zumurad khan\", min_ratio=92)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"zobaida jalal\", min_ratio=80)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"barkat ali\", min_ratio=90)\nreplace_matches_in_column(df=df, column='CandidateName', string_to_match=\"muhammad yasin baloch\", min_ratio=90)\n\nfor candi in df['CandidateName'].unique(): # 7000\n    replace_matches_in_column(df=df, column='CandidateName', string_to_match=candi, min_ratio=90)\n\n# let us know the loop is completed\nprint(\"All done!\")","6bd50468":"#del NA2, NA8, NA13\ndf.to_csv('NA2002-18.csv', index=None) ","1bc99adc":"cc = pd.read_csv(\"..\/input\/National Assembly Candidates List - 2018 Updated.csv\", encoding = \"ISO-8859-1\")\nna18 = pd.read_csv(\"..\/input\/2013-2018 Seat Changes in NA.csv\", encoding = \"ISO-8859-1\") \npp = pd.read_csv(\"..\/input\/Political Parties in 2018 Elections - Updated.csv\", encoding = \"ISO-8859-1\")\nprint(cc.shape, na18.shape, pp.shape)","7cc2356f":"print(cc.columns, na18.columns)","2d891e1a":"cc['NA#'] = 'NA-' + cc['NA#'].astype(str)","10fcb186":"print(cc['NA#'].unique().shape) # 272\nprint(na18['2018 Seat Number'].unique().shape) # 273\nna18.rename(columns={'2018 Seat Number':'NA#'}, inplace=True)\nna18.rename(columns={'Seat Name':'Seat'}, inplace=True)\nna18[na18['NA#'] == \"Old Constituency Changed Considerably\"]","58852dab":"na18 = na18[na18['NA#'] != \"Old Constituency Changed Considerably\"]\nna18['NA#'] = na18.loc[:, 'NA#'].replace(regex=True, to_replace=\"NA-\", value=\"\")\nna18['NA#'] = pd.to_numeric(na18['NA#'])\nna18['NA#'] = na18['NA#'].astype(np.int64)\nna18['NA#'] = 'NA-' + na18['NA#'].astype(str)\n#na18['NA#'] = na18.loc[:, 'NA#'].replace(regex=True, to_replace=\".0\", value=\"\")\nna18['NA#'].head()","baa9bfcf":"#Add District column & its cleani\nna18['Distirct'] = na18['Seat']\n# remove all those substring with () \nna18['Distirct'] = na18['Distirct'].str.replace(r\"\\(.*\\)\",\"\")\n# remove numeric\nna18['Distirct']  = na18['Distirct'] .str.replace('[^a-zA-Z -]', '')\nna18['Distirct'] = na18['Distirct'].str.replace(r\"Cum.*\",\"\")\n#na18['Distirct'] = na18['Distirct'].str.replace(r\"KUM.*\",\"\")\n# to convert Tribal Area III - Mohman into Tribal Area III\nna18['Distirct'] = na18['Distirct'].str.replace(r\"-.*\",\"\")\nna18['Distirct']  = na18['Distirct'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nna18['Distirct']  = na18['Distirct'] .str.replace(r\" (XX|IX|X?I{0,3})(IX|IV|V?I{0,3})$\", '')\nna18['Distirct'].unique()","9ede6ec0":"cc = cc.join(na18.set_index('NA#'), on='NA#')\ncc.info()","c9dccd61":"print(pp.shape)\npp['Name of Political Party'].unique()","3ec0c9b5":"pp.rename(columns={'Acronym':'PartyAcro'}, inplace=True)\ncc.rename(columns={'Party':'PartyAcro'}, inplace=True)","383863ab":"cc[cc['PartyAcro']=='PTI'].head()\n#pp[pp['PartyAcro']=='PTEI']","8e1f9ca2":"#del cnd\ncnd = cc.join(pp.set_index('PartyAcro'), on='PartyAcro')","b3e5223c":"cnd[cnd['PartyAcro']==\"PTI\"].head()\n#remove non-aplhabetic characters from Name\ncnd['Name'] = cnd['Name'].str.replace('[^a-zA-Z ]', '')\ncnd['Name'] = cnd['Name'].str.lower()\ncnd['Name'] = cnd['Name'].str.strip()\n\ncnd['Name of Political Party'] = cnd['Name of Political Party'].str.lower()\ncnd['Name of Political Party'] = cnd['Name of Political Party'].str.strip()\n\ncnd[cnd['PartyAcro']==\"PTI\"].head()","24987264":"print(df.columns, cnd.columns)\ndf.info()\ncnd.info()","11a268b4":"cnd.rename(columns={'NA#':'ConstituencyTitle'}, inplace=True)\ncnd.rename(columns={'Name of Political Party':'Party'}, inplace=True)\ncnd.rename(columns={'Name':'CandidateName'}, inplace=True)","c447d3a3":"cnd.to_csv('Canditates2018.csv', index=None) ","fcab1252":"Just looking at this, We can see some problems due to inconsistent data entry: 'PESHAWAR' and Peshawar ', for example, or 'Charsadda' and 'Charsdda'.\n\nThe first thing we are going to do is make everything lower case (we can change it back at the end if need) and remove any white spaces at the beginning and end of cells. Inconsistencies in capitalizations and trailing white spaces are very common in text data and you can fix a good 80% of your text data entry inconsistencies by doing this.","d602f9d0":"<h3>Lets Clean data around Party & Candidates Name <\/h3>","30f6a587":"Merging .. ","63c6cce9":"We are all set with first issue. Turnout column has % symbol in it which makes it object datatype. We will remove non-numeric characters and change datatype.\n\n<b>Change the datatype of Turnout column <\/b>","e44b0936":"<h1> Data Wrangling of Electoral Data<\/h1>\n<h2>Get our environment set up<\/h2>\nThe first thing we'll need to do is load in the libraries we'll be using.","67514f67":"Lets add District column and do its cleaning","47726456":"To test the funtion","84945ef4":"All three files have 11 columns. Row details are as follow:\n\n* NA 2002: 1,792\n* NA 2008: 2,315\n* NA 2013: 4,541\n\nNA 2002.cv file has fine data types. \n\nIn NA 2008 & NA 2013 files:\n* 1st column name is missing and showing that it have int64 data type. \n* Turnout column has read as object.\n\n<h2>Data Wrangling <\/h2>\nLets observe the 1st file in order to fix next two and merge them all into one dataframe.","d03d939a":"So the first column should be District. We will extract district names from Seat column.\nWe will drop last column from NA13 because it contain no value..\n\n<b>Rename Column and Replace Values <\/b>","48986aab":"Adding \"NA-\" string in NA# column to merge it with na18 dataset.","9ac0a0e9":"<h3><u>Note: Both files can not is mergered easily as NA mapping is changed for current year.  <\/u><\/h3>\nI will use both files in EDA and Feature Engineering.","38102d55":"We will remove Mr Initial from the begining of names, But we will keep Dr Initial because it is worth gaining title. ","6a93adae":"There is no null record.\n\nFinal step before merging:\n\nJust to confirm that column names are similar in all files.","c81a25fb":"<h2>Use fuzzy matching to correct inconsistent data entry<\/h2>\nAlright, let's take another look at the district column and see if there's any more data cleaning we need to do.","7a0b5d21":"<h2>Load Data<\/h2>\n","ebba78b8":"Now our dataset is aligned and ready to merge. But before merging, lets add another column  'Year'. ","dd05e93a":"<h2>Candidate List & Parties of 2018 Election<\/h2>\nLets se if these 2 files need some cleaning as well. We will merge both files. ","ab419193":"Lets observe few to set the threshold for fuzzywuzzy","bcf87222":"<h2>NAN Values<\/h2>\nLets check the status of NA values","50b76439":"It does look like there are some remaining inconsistencies: 'charsadda' and 'charsdda' should probably be the same. \n\nWe are going to use the fuzzywuzzy package to help identify which string are closest to each other. \n> <b>Fuzzy matching:<\/b> The process of automatically finding text strings that are very similar to the target string. In general, a string is considered \"closer\" to another one the fewer characters you'd need to change if you were transforming one string into another. So \"apple\" and \"snapple\" are two changes away from each other (add \"s\" and \"n\") while \"in\" and \"on\" and one change away (rplace \"i\" with \"o\"). You won't always be able to rely on fuzzy matching 100%, but it will usually end up saving you at least a little time.\n\nFuzzywuzzy returns a ratio given two strings. The closer the ratio is to 100, the smaller the edit distance between the two strings. Here, we're going to get the ten strings from our list of districts that have the closest distance to \"charsadda\".","15fd7275":"<h2>Some Preliminary Text Pre-processing<\/h2>\nHere, I'm interested in cleaning up all Text columns to make sure there's no data entry inconsistencies in it. We could go through and check each row by hand, of course, and hand-correct inconsistencies when we find them. There's a more efficient way to do this though!","72aad87e":"<h2>Data Info<\/h2>\n\nLet's look into the info of provided dataset.","ffb4f0cb":"<h2>Concatenate All 3 Datasets <\/h3>","99481142":"That's all from me. I tried to clean maximum of the data inconsistency issues. So, I am saving this file for the audience for the seek a reusability. You can fork kernel and continue from here.\n\nWe are all set to move towards <b>Exploratory Data Analysis <\/b>. \n\nDo share your comments and if you find it helpful, <b>please upvote! <\/b>\n<h2> Happy Exploratory Analsysis :-) <\/h2>","cd8ad981":"Lets fix few more","dc349de5":"We can see that two of the items in the districts are very close to \"charsadda\": 'charsadda; and 'charsdda'.\n\nLet's replace all rows in our District column that have a ratio of > 90 with \"charsadda\".\n\nFor the reusability,  I'm going to write a function to fix all these challenges ASAP."}}