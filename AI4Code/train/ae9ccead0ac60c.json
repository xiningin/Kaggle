{"cell_type":{"453ff437":"code","90395022":"code","74b300a0":"code","5dccce96":"code","d2493232":"code","2a6c57b7":"code","e7119beb":"code","5240dd91":"code","c6a90976":"code","1e466e60":"code","191bafe2":"code","ac525e2f":"code","87fdd0bf":"code","22df405e":"code","11e1fc83":"code","62a7a483":"code","ad916342":"code","7b2442e9":"code","26d65c3c":"code","0c27cbfa":"code","b135ab65":"code","2ae1677a":"code","740fa350":"code","656d41cb":"code","c92c23a7":"code","b7247005":"code","6b0d4d97":"code","a1089e43":"code","d26bb23c":"code","6a52316c":"code","5eba915e":"code","48523cf6":"markdown","3dc36730":"markdown","1a402140":"markdown","9cf93408":"markdown","506c6ba6":"markdown","5429d261":"markdown","4c3469b2":"markdown","8d0563b9":"markdown","687ebcb1":"markdown","b602b0a6":"markdown","e0f18b7c":"markdown","62911039":"markdown","39e9df6a":"markdown","84b79cfc":"markdown","f4ea9d45":"markdown","06999bc3":"markdown","38cc6d4e":"markdown","fa2c4f73":"markdown","f9b389e2":"markdown","e3e7dd83":"markdown"},"source":{"453ff437":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90395022":"# for importing and descriping\nimport pandas as pd\nimport numpy as np\n\n# for visualization \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#for clustering \nfrom sklearn.cluster import AgglomerativeClustering , KMeans\nfrom sklearn.metrics import silhouette_score \n#for Dendogram\nimport scipy.cluster.hierarchy as sch ","74b300a0":"#Reading the mall dataset \ndf=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\n\n#Showing the first 10 rows  \ndf.head(10)","5dccce96":"#Showing the first 10 rows  \ndf.head(10)","d2493232":"#Describing the shape of the dataset and the Descriptive statistics\nprint(df.shape) \ndf.describe()","2a6c57b7":"print(df.median().astype(int))\nd1= df.mode().head(1).drop('CustomerID', axis=1)\nd1","e7119beb":"data = {\n        'Descriptions':  ['Avarge', 'Most apparent ','Maximum value','Minimum value'],\n        'Gender': [np.nan, d1['Gender'].values[0] , np.nan , np.nan] ,  \n        'Age': [df['Age'].mean(), d1['Age'].values[0] ,df['Age'].max() , df['Age'].min()] ,  \n        'Annual Income (k$)': [df['Annual Income (k$)'].mean(), d1['Annual Income (k$)'].values[0] ,df['Annual Income (k$)'].max() , df['Annual Income (k$)'].min()] ,\n        'Spending Score (1-100)': [df['Spending Score (1-100)'].mean(), d1['Spending Score (1-100)'].values[0] ,df['Spending Score (1-100)'].max() , df['Spending Score (1-100)'].min()] \n        }\ndescriping_data = pd.DataFrame (data, columns = ['Descriptions','Gender','Age' , 'Annual Income (k$)' , 'Spending Score (1-100)'])\ndescriping_data","5240dd91":"#Missing values\ndf.isna().sum()","c6a90976":"#Duplicated values(duplicated rows)\ndf.duplicated().sum()","1e466e60":"import warnings\nwarnings.filterwarnings('ignore')\n\nplt.figure(figsize=(25,10))\nfor i,col in enumerate(df.drop(columns=['CustomerID' , 'Gender']).columns):\n    plt.subplot(2,4,i+1)\n    sns.boxplot(df[col])","191bafe2":"def Outlier_Bounds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.25)\n    quartile3 = dataframe[variable].quantile(0.75)\n    #interquantile range \n    IQR = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * IQR\n    low_limit = quartile1 - 1.5 * IQR\n    return low_limit, up_limit\n\ndef has_Outliers(dataframe, variable):\n    lower_limit, upper_limit = Outlier_Bounds(dataframe, variable)\n    if dataframe[(dataframe[variable] < lower_limit) | (dataframe[variable] > upper_limit)].any(axis=None):\n        print(variable, \"yes\")\n    else :    \n        print(variable, \"no\")","ac525e2f":"for col in df.loc[:,df.columns!='Gender']:\n    has_Outliers(df, col)","87fdd0bf":"#if Outliers exist ,then :\ndef replace_with_Bounds(dataframe, variable) :\n    lower_limit, upper_limit = Outlier_Bounds(dataframe, variable)\n    dataframe.loc[(dataframe[variable])<lower_limit ,variable]=lower_limit\n    dataframe.loc[(dataframe[variable])>upper_limit ,variable]=upper_limit","22df405e":"#replace Outliers with upper&lower limits (maximum and minimum )of the interquantile range \nfor col in df.loc[:,df.columns!='Gender']:\n    replace_with_Bounds(df, col)\n    \nfor col in df.loc[:,df.columns!='Gender']:\n    has_Outliers(df, col)","11e1fc83":"plt.figure(figsize=(25,10))\nfor i,col in enumerate(df.drop(columns=['CustomerID' , 'Gender']).columns):\n    plt.subplot(2,4,i+1)\n    sns.boxplot(df[col])","62a7a483":"df1=df.drop(columns='CustomerID' ,axis=1)\ndf1","ad916342":"print(df1['Gender'].value_counts())\nplt.pie(df1['Gender'].value_counts() , autopct='%1.0f%%' , colors=['#d44000','#ff7a00'] , \n        labels=['Female','Male'] , explode =[0, 0.1] ,textprops=dict(color='w', fontsize=15 , fontweight='bold'))\nplt.title('Gender', fontsize = 25 , fontweight='bold' );","7b2442e9":"plt.rcParams['figure.figsize'] = (20, 8)\nplt.subplot(2,1,1)\nsns.countplot(df1['Age'].astype('int') ,palette='YlOrBr_d')\nplt.title('Age' , fontsize=20)\nplt.subplot(2,1,2)\nsns.distplot(df1['Age'].astype('int'), hist=False , color='#f9b208')\nplt.axvline(x=32 , c='red' )\n","26d65c3c":"plt.rcParams['figure.figsize'] = (20, 8)\nplt.subplot(2,1,1)\nsns.countplot(df1['Annual Income (k$)'].astype('int') , palette='YlOrBr_d')\nplt.title('Annual Income (k$)', fontsize=20)\nplt.subplot(2,1,2)\nsns.distplot(df1['Annual Income (k$)'], hist=False, color='#f9b208')\n\nplt.axvline(x=48 , c='r')\nplt.axvline(x=88 , c='r')","0c27cbfa":"plt.rcParams['figure.figsize'] = (20, 8)\nsns.countplot(df1['Spending Score (1-100)'].astype('int')  , palette='YlOrBr_d')\nplt.title('Spending Score (1-100)', fontsize=20)\n","b135ab65":"plt.subplot(2,1,1)\nsns.lineplot(x=\"Age\", y=\"Annual Income (k$)\" ,data=df1, hue='Gender'  , palette='YlOrBr_d')\nplt.subplot(2,1,2)\nsns.lineplot(x=\"Age\",y=\"Spending Score (1-100)\" ,data=df1, hue='Gender', palette='YlOrBr_d')","2ae1677a":"sns.pairplot(df1 ,hue=\"Gender\" , palette='YlOrBr_d')","740fa350":"sns.catplot(x='Gender' , y= 'Annual Income (k$)' , data=df1 , kind='violin' , palette='YlOrBr_d')\n#sns.catplot(x='Gender' , y= 'Annual Income (k$)' , data=df1 , kind='box' , palette='YlOrBr_d')\n\nsns.catplot(x='Gender' , y= 'Spending Score (1-100)' , data=df1 , kind='violin' , palette='YlOrBr_d')\n#sns.catplot(x='Gender' , y= 'Spending Score (1-100)' , data=df1 , kind='box' , palette='YlOrBr_d')\n","656d41cb":"plt.rcParams['figure.figsize'] = (18, 8)\nsns.heatmap(df1.corr(),annot=True ,cmap='YlOrBr_r' )","c92c23a7":"data=df1.drop(axis=1 ,columns= ['Gender','Age'])\ndata.head()","b7247005":"data2=df1.drop(axis=1 ,columns= ['Gender','Annual Income (k$)'])\ndata2.head()","6b0d4d97":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndendo=sch.dendrogram(sch.linkage(data,method='ward') , leaf_rotation=90 , leaf_font_size=5)\nplt.ylabel('Euclidean distanse')\nplt.xlabel('Customers')\nplt.title('Dendogram1')\nplt.axhline(y=200 , color='k')\n#number of clusters = 5\n\nplt.subplot(1,2,2)\ndendo=sch.dendrogram(sch.linkage(data2,method='ward') , leaf_rotation=90 , leaf_font_size=5)\nplt.ylabel('Euclidean distanse')\nplt.xlabel('Customers')\nplt.title('Dendogram2')\nplt.axhline(y=150 , color='k')\n#number of clusters = 4","a1089e43":"#from the dendogram ... the number of clusters = 5\ncluster1_1=AgglomerativeClustering(n_clusters=5 , affinity='euclidean' , linkage='ward')\ncluster1_1.fit_predict(data)\n\ncluster1_2=AgglomerativeClustering(n_clusters=4 , affinity='euclidean' , linkage='ward')\ncluster1_2.fit_predict(data2)\n\nplt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\nplt.scatter(data.loc[:,['Annual Income (k$)']], data.loc[:,['Spending Score (1-100)']], c=cluster1_1.labels_ )\nplt.title('Customer Segmentation 1' , fontsize=15 , fontweight='bold')\nplt.xlabel('Annual Income(k$)')\nplt.ylabel('Spending Score(1-100')\n\n\nplt.subplot(1,2,2)\nplt.scatter(data2.loc[:,['Age']], data2.loc[:,['Spending Score (1-100)']], c=cluster1_2.labels_ )\nplt.title('Customer Segmentation 2' , fontsize=15 , fontweight='bold')\nplt.xlabel('Age)')\nplt.ylabel('Spending Score(1-100')","d26bb23c":"# Elbow method in k_means to specify the number of clusters\nrange_of_clusters1=range(1,11) # or 10 ----> k in Elbow method\nwcss1=[]\nfor k in range_of_clusters1:\n    km1_1=KMeans(n_clusters= k ,init='k-means++')\n    km1_1.fit(data)\n    # inertia_ for return wcss for the model\n    wcss1.append(km1_1.inertia_)\n\nwcss2=[]\nfor k in range_of_clusters1:\n    km1_2=KMeans(n_clusters= k ,init='k-means++')\n    km1_2.fit(data2)\n    # inertia_ for return wcss for the model\n    wcss2.append(km1_2.inertia_)\n\n    \n# Silhouette method in k_means to specify the number of clusters\nrange_of_clusters2=range(2,11)\nscores1=[]\nfor k in range_of_clusters2 :\n    km2_1=KMeans(n_clusters=k , init='k-means++' )\n    km2_1.fit(data)\n    scores1.append(silhouette_score(data , km2_1.labels_))\n    \nscores2=[]\nfor k in range_of_clusters2 :\n    km2_2=KMeans(n_clusters=k , init='k-means++' )\n    km2_2.fit(data2)\n    scores2.append(silhouette_score(data2 , km2_2.labels_))\n    ","6a52316c":"#ploting\nplt.figure(figsize=(30,10)) \n\nplt.subplot(2,2,1)\nplt.plot(range_of_clusters1 , wcss1 , marker='o' )\nplt.axvline(x=5 , c='r')\nplt.title(\"Elbow method 1\" , fontweight='bold')\n\nplt.subplot(2,2,2)\nplt.plot(range_of_clusters2 , scores1 , marker='o' )\nplt.axvline(x=5 , c='r')\nplt.title(\"Silhouette method 1\" , fontweight='bold')\n\nplt.subplot(2,2,3)\nplt.plot(range_of_clusters1 , wcss2 , marker='o' )\nplt.axvline(x=4 , c='r')\nplt.title(\"Elbow method 2\" , fontweight='bold')\n\nplt.subplot(2,2,4)\nplt.plot(range_of_clusters2 , scores2 , marker='o' )\nplt.axvline(x=4 , c='r')\nplt.title(\"Silhouette method 2\" , fontweight='bold')\n","5eba915e":"#from the K-means methods (Elbow method ,Silhouette method) ... the number of clusters = 5\ncluster2_1=KMeans(n_clusters=5 , init='k-means++')\ncluster2_1.fit_predict(data)\n\ncluster2_2=KMeans(n_clusters=4 , init='k-means++')\ncluster2_2.fit_predict(data2)\n\nplt.figure(figsize=(20,5)) \nplt.subplot(1,2,1)\nplt.scatter(data.loc[:,['Annual Income (k$)']], data.loc[:,['Spending Score (1-100)']], c=cluster2_1.labels_  )\nplt.scatter(cluster2_1.cluster_centers_[:,0], cluster2_1.cluster_centers_[:,1], c='r' )\nplt.title('Customer Segmentation based on Annual Incomes' , fontsize=15 , fontweight='bold')\nplt.xlabel('Annual Income(k$)')\nplt.ylabel('Spending Score(1-100') \n\n\nplt.subplot(1,2,2)\nplt.scatter(data2.loc[:,['Age']], data2.loc[:,['Spending Score (1-100)']], c=cluster2_2.labels_  )\nplt.scatter(cluster2_2.cluster_centers_[:,0], cluster2_2.cluster_centers_[:,1], c='r' )\nplt.title('Customer Segmentation based on Ages' , fontsize=15 , fontweight='bold')\nplt.xlabel('Age')\nplt.ylabel('Spending Score(1-100') \n","48523cf6":" **More Analysis between Gender , Spending Score and the Income .**\n>     The most of males have an annual income between 45k Dollars to 80k Dollars while females have an \n>     annual income between 40k US Dollars to less than 80k US Dollars.     \n>     The most of males have a spending score between 25 to 70 while females have a spending score \n>     between 35 to 75.\n    \n***That again points to that women are Shopping Leaders .This confirms our saying that whatever the\n    increase in men's income, they are less to spend than women on shopping and buying***","3dc36730":"**Customer Segmentation 1 gives us a clear insight about the different groubs of the customers in the Mall based on their Annual Income. \nThere are Five groups of Customers namely Economizer (Purple), Careful (Yellow) ,\nGeneral (dark Green), Target (Blue),and Wasteful (light Green) based on their Annual Income and Spending Score which are the best features to determine the segments of a customer .**\n\n**Customer Segmentation 2 also tells us about the different groubs of the customers in the Mall but this time based on their Age. \nThere are Four different groups of Customers namely Usual (Green), Priority(Yellow) ,Target[Old] (Blue),and Target [Young] (Purple) based on their Age and Spending Score which are anther features to determine the segments of a customer.**","1a402140":"# Visualization","9cf93408":"**the distribution of each Age Group in the Mall for clarity about the Visitor's Age Group :**\n>         It can be seen that the number of visitors of the Mall is between the Age 18 and 67 . People \n>         at Age 32 are the Most \n>         Frequent Visitors , Ages from 23 to 40 are the most common age group for the mall . Older age \n>         groups have the lowest \n>         number of visitors, as people aged 55, 56, 69, and 64 are the least Presence in malls","506c6ba6":" **The Heat map shows the correlation between the different attributes of the Mall Customer \n    Segementation as the least correlated features is with the darker color.We can see that \n    attributes do not have good correlation among them**\n\n","5429d261":"**The distribution of each Income level :** \n>         customers in the mall have much similar frequency with their Annual Income ranging from 15k \n>          US Dollars to 137K US Dollars. There are Customers in the Mall who have the higher Annual \n>          Income with 54k US Dollars or 78k US Dollars.       ","4c3469b2":"**The curve graph shows that although the men's group has the highest income than the women's, the \n    women's spending score is higher than the men's and the Age rate of women is the highest .\n    A scatter chart showing the most targeted group for marketing, as we explained before.\n    The attention will be on age and annual income more than a particular gender** ","8d0563b9":"#### Importing the Libraries \n","687ebcb1":"# Clustering Analysis:","b602b0a6":"### K-means  Clustering :","e0f18b7c":"**By looking at the plots which explain the distribution of Gender :**\n>         we can see the rate of females shopping in the mall with a share of 56% is greater than\n        males 44%. \n>         This shows that females are in the lead of shopping ","62911039":"**The graph shows the relation between Age and Annual income and the relation between Age and \n    Spending scores according to the visitors Gender.\n         The income line shows that the Almost Age group between 25 to 40 for men and 27 to 45  have \n         the most annual income, and the scores line shows that the Almost Age group between 20 to 35\n         for men and 20 to 40 have the most scores.\n         Which means that the most targeted age group for promotions and marketing is between\n         the ages of 20 to 45 .**\n","39e9df6a":"> The table shows the statistical description of the dataset ( the average value of the numerical data like the income and the score of spending in the mall,  maximum values, minimum values, and the most apparent values for each feature(column))","84b79cfc":"### Heirarchical  Clustering :\n","f4ea9d45":"# **Insight** :\n\n### It is necessary to give more attention to the target groups of customers in the young age group and with higher incomes and then other groups with higher spending scores in any age group  through marketing and making offers  more according to each segment and its interest ","06999bc3":"**The distribution of Spending Score :**\n>     It is very Important to have a look and an idea about the Spending Score of the Customers  \n>     Visiting the Mall.\n>     Most of the customers Spending Scores range between 35 to 75. The mall provides most of the \n>     requirements of visitors as there are many customers having spending scores greater than 90.**","38cc6d4e":"**Again with anther Clustering analysis model.**\n \n  **The Five different segments of Customers : Economizer (Purple), Careful (dark Green) ,General\n  (Blue),Target (Yellow),Wasteful (light Green) ,and Cenetr points(Red) based on their Annual Income \n  and Spending Score .**\n \n\n  **The Four different segments of Customers namely Usual (Blue), Priority(Purple) ,Target[Old] \n  (Yellow),Target [Young] (Green) ,and Cenetr points(Red) based on their Age and Spending Score.**","fa2c4f73":"# Dealing with Outliers","f9b389e2":"# Dealing with missing values and duplication\n","e3e7dd83":"# Describing the dataset\n"}}