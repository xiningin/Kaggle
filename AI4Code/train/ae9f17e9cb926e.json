{"cell_type":{"546d9d8d":"code","9d4669fc":"code","d347d7f1":"code","3fb82051":"code","d9189b29":"code","ec7cdfb8":"code","4ac0b97d":"code","c222a004":"code","3581a11b":"code","e8e1ebcd":"code","aa430c02":"code","f5faf47f":"code","66072e9c":"code","b31964a7":"code","b518fbe2":"code","9f6f4bd2":"code","b4af9c11":"code","b4e703c9":"code","32417c53":"code","de13fcf3":"code","d1adcbf8":"code","55a0a722":"code","4f71907e":"code","b9ddf01f":"code","80274eea":"code","2ffc6364":"code","6a2595ca":"markdown","5f22a7f8":"markdown","f7ea140d":"markdown","f945b637":"markdown","18be2ad4":"markdown","4b313a24":"markdown","8cf7ea7c":"markdown","6fab8b96":"markdown","3a1a0a51":"markdown","be7c454e":"markdown","acdb2c16":"markdown","c568ffa6":"markdown","72f37227":"markdown","4e0c62af":"markdown"},"source":{"546d9d8d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d4669fc":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n%matplotlib inline\n\nplt.style.use('bmh')","d347d7f1":"df = pd.read_csv('..\/input\/campaign\/assign.csv')\ndf.head()","3fb82051":"df.shape\n","d9189b29":"df.info()\ndf.describe()","ec7cdfb8":"print(list(df.columns))","4ac0b97d":"# Counting the unique values of each column\nuniqueValues = df.nunique()\nprint('Count of unique value sin each column :')\nprint(uniqueValues)","c222a004":"df = df.drop(['product','phase'], axis=1)","3581a11b":"df1=df.copy()\ndf1.head()\n","e8e1ebcd":"for c in df.columns:\n    print(\"---- %s ---\" % c)\n    print(df[c].value_counts())","aa430c02":"\ngrouped_multiple = df.groupby(['campaign_platform','campaign_type','communication_medium']).agg({'age': ['count']})\ngrouped_multiple.columns = ['c']\ngrouped_multiple = grouped_multiple.reset_index()\nprint(grouped_multiple)\n","f5faf47f":"sns.countplot(df.age)","66072e9c":"df.isnull().any(axis = 1).sum()\n","b31964a7":"from sklearn.preprocessing import LabelEncoder\ndf['campaign_platform'] = LabelEncoder().fit_transform(df['campaign_platform'])\ndf['communication_medium'] = LabelEncoder().fit_transform(df['communication_medium'])\ndf['subchannel'] = LabelEncoder().fit_transform(df['subchannel'])\ndf['device'] = LabelEncoder().fit_transform(df['device'])\ndf['age'] = LabelEncoder().fit_transform(df['age'])\ndf['audience_type'] = LabelEncoder().fit_transform(df['audience_type'])\ndf['creative_type'] = LabelEncoder().fit_transform(df['creative_type'])\ndf['creative_name'] = LabelEncoder().fit_transform(df['creative_name'])\ndf['campaign_type'] = LabelEncoder().fit_transform(df['campaign_type'])\n\n\n\n\n\n","b518fbe2":"df=df.dropna()\ndf.shape\ndf.info()","9f6f4bd2":"'''\nfor c in df.columns:\n    print(\"---- %s ---\" % c)\n    print(df[c].value_counts())\n    from sklearn.linear_model import LinearRegression\n\ndata1=df[['campaign_platform','subchannel','audience_type','creative_type','creative_name','device','age','spends','impressions','clicks','link_clicks']]\ndata=data1.dropna()\nx=data.iloc[:,:10]\ny=data.iloc[:,10]\nmodel = LinearRegression()\ndf.isna().sum()\n\ndf['link_clicks']= df['link_clicks'].replace(r'^\\s+$', 'NULL', regex=True)\nDF_new_row=df.loc[df['link_clicks']== 'NULL']\nprint(df['link_clicks'].unique())\nDF_new_row\n'''","b4af9c11":"df.device.value_counts()\ndf.link_clicks.value_counts()\n''' device                16288 non-null  int64  \n 9   age                   16288 non-null  int64  \n 10  spends                16288 non-null  float64\n 11  impressions           16288 non-null  int64  \n 12  clicks                16288 non-null  int64  \n 13  link_clicks '''\nsns.countplot(df.age)\n\nsns.countplot(df.device)\n\nsns.countplot(df.subchannel)\n","b4e703c9":"sns.distplot(df.spends)","32417c53":"sns.distplot(df.clicks)","de13fcf3":"sns.distplot(df.impressions)","d1adcbf8":"sns.countplot(df.age)","55a0a722":"print('Campaign platform wise impressions total')\nprint((df1.groupby(['campaign_platform']).impressions.sum()))\nprint('Campaign platform wise total of clicks ')\nprint((df1.groupby(['campaign_platform'])).clicks.sum())\nprint('Amount of money spent by each platform  ')\nprint((df1.groupby(['campaign_platform'])).spends.count())\nprint('Sum of redirects to the ad page by each platform')\nprint((df1.groupby(['campaign_platform'])).link_clicks.sum())\n","4f71907e":"print('device wise impressions total')\nprint((df1.groupby(['device']).impressions.sum()))\nprint('device wise clicks total')\nprint((df1.groupby(['device']).clicks.sum()))\nprint('age wise impressions total')\nprint((df1.groupby(['age']).impressions.sum()))\nprint('age wise clicks total')\nprint((df1.groupby(['age']).clicks.sum()))\nprint('age wise link_clicks total')\nprint((df1.groupby(['age']).link_clicks.sum()))","b9ddf01f":"print('Subchannel wise sum of clicks')\nprint((df1.groupby(['subchannel']).clicks.sum()))\nprint('Campaign platform wise link total')\nprint((df1.groupby(['subchannel']).link_clicks.sum()))","80274eea":"from numpy import loadtxt\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\ndf=df.dropna()\ndf.info()\n\nX = df.iloc[:,0:13]\nY = df.iloc[:,13]\n\n# split data into train and test sets\nseed = 7\ntest_size = 0.25\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=test_size, random_state=seed)","2ffc6364":"model = XGBClassifier()\nmodel.fit(X_train, y_train)","6a2595ca":"So for a facebooks ad platform the campaign type is conversions and communication medium is always creative\nand for google ads the type is always search and medium search keywords","5f22a7f8":"Platform: Marketing platforms on which campaigns are running majorly: Google Ads and Facebook Ads \n                Type: Type of campaign, In this data only Gogole search and Facebook Conversion campaigns have boon considered\n                Medium: The way we are connecting to people in our Marketing campaigns either via some Keywords or Creatives.\n                Sub Channel: Sub channel is under Google Search which type of keywords have been targeted ot in Facebook which on subchannel we are                                  targeting\n                Audience: Multiple Type of audiences are getting targeted in different campaigns an dthose have been encrypted as Audience 1,2,3\n                Creative: This if for facebook what type of Image\/Video\/Carousel we are using in our Ads.","f7ea140d":"So, we are obtaining insights for a single product with the same phase in two different platforms.\n...(Feel free to remove it from our modelling)\n","f945b637":"From the analysis below\n# *Age group 25-34 and 35-44 are more interested in ads*\n# *Under devices mobile users are more interested and more impressions are made on the same *","18be2ad4":"# Lets get ML into modelling\n","4b313a24":"# *Data analysis*","8cf7ea7c":"# *Data outlook by visualization*","6fab8b96":"3.1 Number(count) of different values in each column","3a1a0a51":"3) ** Preliminary data exploration**","be7c454e":"Looks like campaign type and communication medium are same for the same campaign_platform\nlets check this out","acdb2c16":"# *Encoding categorical data*","c568ffa6":"Step 1 : Dataset description","72f37227":"Clearly All the ads of the platform 'GOOGLE ads' have 0 link_clicks \n# (ie) Users dont click on links inside ads when advertised in google platform\nlets dive in deeper","4e0c62af":"2)**Feature description **\n\n"}}