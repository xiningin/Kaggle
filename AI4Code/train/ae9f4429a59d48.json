{"cell_type":{"3c35b39b":"code","4a57eb55":"code","e4a31534":"code","7ca73220":"code","73076de1":"code","d130ad1c":"code","d6388f68":"code","33067bdc":"code","24668588":"code","bee93a97":"code","6233a576":"code","f3fceee0":"code","c926f6b7":"code","39611264":"code","e5964454":"code","c0ed46e0":"code","079adbaa":"code","a3ab5376":"markdown","5fb0f9e1":"markdown","df18ee7f":"markdown","0d4fe593":"markdown","e476fe8a":"markdown","3301f414":"markdown","58a5403d":"markdown","e3de8f6c":"markdown"},"source":{"3c35b39b":"import numpy as np #Algebra Linear\nimport pandas as pd #Analise de Dados\nimport matplotlib.pyplot as plt #Visualiza\u00e7\u00e3o dos Dados\nimport seaborn as sns #Visualiza\u00e7\u00e3o dos Dados\nimport plotly as py #Visualiza\u00e7\u00e3o dos Dados\nimport plotly.graph_objs as go #Visualiza\u00e7\u00e3o dos Dados\nfrom sklearn.cluster import KMeans #Algoritmo de Machine Learning\n\n#Conectar o Notebook a biblioteca Plotly\npy.offline.init_notebook_mode(connected = True)\n\n#Configurando tamanho padrao para o plot de figuras\n%config InlineBackend.rc={'figure.figsize': (15, 7)}","4a57eb55":"#Criando um Dataframe com Pandas\ndf = pd.read_csv(\"..\/input\/Mall_Customers.csv\")\n\n#Mostrando uma amostra de 10 linhas do Datafame\ndf.sample(10)","e4a31534":"#Analisando tamanho do Dataset\ndf.shape","7ca73220":"#Deletando a coluna CustomerID que n\u00e3o ser\u00e1 usada na an\u00e1lise\ndel df['CustomerID']","73076de1":"#Resumo de principais estat\u00edsticas sobre o Dataset\ndf.describe()","d130ad1c":"#Resumo das informa\u00e7\u00f5es do Dataset\ndf.info()","d6388f68":"#Analisando a Quantidade de Informa\u00e7\u00f5es Vazias\/Nulas por Coluna\ndf.isnull().sum()","33067bdc":"#Verificando a existencia de valores nulos (Mesma coisa que o anterior)\ndf.isnull().any()","24668588":"#Analisando as Distribui\u00e7\u00f5es dos Atributos\n\n#Mudando Layout de Visualiza\u00e7\u00e3o\nplt.style.use('dark_background')\n\nplt.figure(1 , figsize = (15 , 6))\n\nn = 0\n\nfor x in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n    \n    n += 1\n    plt.subplot(1 , 3 , n)\n    plt.subplots_adjust(hspace =0.5 , wspace = 0.5)\n    sns.distplot(df[x] , bins = 20)\n    \n    if x == 'Age':\n        w = 'Idade'\n    \n    elif x == 'Annual Income (k$)':\n        w = 'Renda Anual (k$)'\n    \n    else:\n        w = 'Pontua\u00e7\u00e3o de Gastos (0-100)'\n    \n    plt.title('Dist. da {}'.format(w))\n\nplt.show()","bee93a97":"#Propor\u00e7\u00e3o de Homem e Mulher no Dataset\n\nplt.figure(1 , figsize = (15 , 5))\nsns.countplot(y = 'Gender' , data = df)\nplt.show()","6233a576":"#Analisar Correla\u00e7\u00e3o entre as diferentes features\n\ndf.corr()\nsns.heatmap(df.corr(), annot=True)\n\nplt.show()","f3fceee0":"#Mudando Layout de Visualiza\u00e7\u00e3o\nplt.style.use('default')\n\n# Plotando as features Duas por vez:\nsns.pairplot(df)","c926f6b7":"#Mudando Layout de Visualiza\u00e7\u00e3o\nplt.style.use('dark_background')\n\n#Analisando mais especificamente Renda Anual x Pontua\u00e7\u00e3o de Gastos para Segmentar clientes, divididos por G\u00eanero\nplt.figure(1 , figsize = (15 , 6))\n\nfor gender in ['Male', 'Female']:\n    \n    if gender == 'Male':\n        gen = \"Homem\"\n    \n    else:\n        gen = \"Mulher\"\n\n    plt.scatter(x = 'Annual Income (k$)',y = 'Spending Score (1-100)' , \n                data = df[df['Gender'] == gender] ,s = 200 , alpha = 0.5 , label = gen)\n\nplt.xlabel('Renda Anual (k$)'), plt.ylabel('Pontua\u00e7\u00e3o de Gasto (1-100)')\nplt.title('Renda Anual x Pontua\u00e7\u00e3o de Gastos por G\u00eanero')\nplt.legend()\n\nplt.show()\n\n#Ao visualizar, nota-se que n\u00e3o h\u00e1 grande segmenta\u00e7\u00e3o por G\u00eanero nessa an\u00e1lise","39611264":"#Criando Boxplots e Swarmplots das Features\n\n#Mudando Layout de Visualiza\u00e7\u00e3o\nplt.style.use('bmh')\n\nplt.figure(1 , figsize = (15 , 7))\nn = 0\n\nfor cols in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n    \n    n += 1\n    plt.subplot(1 , 3 , n)\n    plt.subplots_adjust(hspace = 0.5 , wspace = 0.5)\n    sns.violinplot(x = cols , y = 'Gender' , data = df , palette = 'vlag')\n    sns.swarmplot(x = cols , y = 'Gender' , data = df)\n    plt.ylabel('G\u00eanero' if n == 1 else '')\n    plt.title('Boxplots & Swarmplots' if n == 2 else '')\n\nplt.show()\n\n#Analisamos algumas estat\u00edsticas, como m\u00e9dia, quartils e moda dos dados\n#Mulheres no Dataset que possuem alta renda anual est\u00e3o em menor quantidade comparando com Homens do Dataset\n#A pontua\u00e7\u00e3o de gastos \u00e9 bem distribu\u00edda entre os dois G\u00eaneros","e5964454":"#KMEANS - 2 Atributos (2D)\n\n#Segmenta\u00e7\u00e3o Usando Renda Anual e Pontuac\u00e3o de Gastos\n\n#Verificando o M\u00e9todo do Cotovelo para o n\u00famero k de clusters\n\n#Mudando Layout de Visualiza\u00e7\u00e3o\nplt.style.use('dark_background')\n\nX2 = df[['Annual Income (k$)' , 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\n\nfor n in range(1 , 11):\n    algorithm = (KMeans(n_clusters = n ,init='k-means++', n_init = 10 ,max_iter=300,\n    tol=0.0001, random_state= 111 , algorithm='elkan') )\n    algorithm.fit(X2)\n    inertia.append(algorithm.inertia_)\n\nplt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Numero de Clusters') , plt.ylabel('Inercia')\n\nplt.show()","c0ed46e0":"#Mudando Layout de Visualiza\u00e7\u00e3o\n#plt.style.use('fivethirtyeight')\n\n#Montando e configurando o Algoritmo para 5 clusters\nalgorithm = (KMeans(n_clusters = 5 ,init='k-means++', n_init = 10 ,max_iter=300, tol=0.0001, random_state= 111 , algorithm='elkan') )\nalgorithm.fit(X2)\n\nlabels2 = algorithm.labels_\ncentroids2 = algorithm.cluster_centers_\nh = 0.02\n\nx_min, x_max = X2[:, 0].min() - 1, X2[:, 0].max() + 1\ny_min, y_max = X2[:, 1].min() - 1, X2[:, 1].max() + 1\n\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n\nZ2 = algorithm.predict(np.c_[xx.ravel(), yy.ravel()])\n\nplt.figure(1 , figsize = (15 , 7) )\nplt.clf()\n\nZ2 = Z2.reshape(xx.shape)\n\nplt.imshow(Z2 , interpolation='nearest',\n           extent=(xx.min(), xx.max(), yy.min(), yy.max()), cmap = plt.cm.Pastel2, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Annual Income (k$)' ,y = 'Spending Score (1-100)' , data = df , c = labels2 ,s = 200 )\nplt.scatter(x = centroids2[: , 0] , y = centroids2[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.ylabel('Pontua\u00e7\u00e3o de Gastos (1-100)') , plt.xlabel('Renda Anual (k$)')\nplt.show()\n\n#Com isso obtemos uma boa segmenta\u00e7\u00e3o dos dados para nomear os tipos de clientes do Shopping","079adbaa":"# Plotando os Clusters (2D)\n\n#X pega apenas Renda e Gastos\nx = df.iloc[:, [2, 3]].values\n\n#Executando Algoritmo Novamente\nkm = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\ny_means = km.fit_predict(x)\n\n#Criando Figura e configurando tamanho\nplt.figure(figsize=(15, 8))\n\n#Nomeando os Clusters\nplt.scatter(x[y_means == 0, 0], x[y_means == 0, 1], s = 100, c = 'red', label = 'miser\u00e1vel')\nplt.scatter(x[y_means == 1, 0], x[y_means == 1, 1], s = 100, c = 'yellow', label = 'geral')\nplt.scatter(x[y_means == 2, 0], x[y_means == 2, 1], s = 100, c = 'green', label = 'alvo')\nplt.scatter(x[y_means == 3, 0], x[y_means == 3, 1], s = 100, c = 'magenta', label = 'consumista')\nplt.scatter(x[y_means == 4, 0], x[y_means == 4, 1], s = 100, c = 'orange', label = 'meticuloso')\nplt.scatter(km.cluster_centers_[:,0], km.cluster_centers_[:, 1], s = 50, c = 'blue' , label = 'centr\u00f3ide')\n\n\n#Plotando a An\u00e1lise Final\nplt.title('Clusteriza\u00e7\u00e3o - K Means')\nplt.xlabel('Renda Anual (k$)')\nplt.ylabel('Pontua\u00e7\u00e3o de Gastos (1-100)')\nplt.legend()\nplt.show()","a3ab5376":"Analisamos algumas estat\u00edsticas, como m\u00e9dia, quartils e moda dos dados.\n\nMulheres no Dataset que possuem alta renda anual est\u00e3o em menor quantidade comparando com Homens do Dataset.\n\nA pontua\u00e7\u00e3o de gastos \u00e9 bem distribu\u00edda entre os dois G\u00eaneros.","5fb0f9e1":"**Correla\u00e7\u00f5es entre features**","df18ee7f":"Ao Analisar, nota-se que n\u00e3o h\u00e1 grande correla\u00e7\u00e3o entre as features para aplicar redu\u00e7\u00e3o ou transforma\u00e7\u00e3o de atributos","0d4fe593":"**Importando as Bibliotecas Necess\u00e1rias**","e476fe8a":"Com isso obtemos uma boa segmenta\u00e7\u00e3o dos dados para nomear os tipos de clientes do Shopping.\n\n**Isso pode ser usado em campanhas de marketing**","3301f414":"**Importando os Dados**","58a5403d":"**Analisando os Dados do Dataframe\n**\n","e3de8f6c":"Ao analisar o gr\u00e1fico, nota-se que a partir de 5 clusters, a fun\u00e7\u00e3o de In\u00e9rcia se estabiliza.\n\nAssim, o n\u00famero ideal de clusters para esse caso \u00e9 5."}}