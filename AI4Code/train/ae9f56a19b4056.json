{"cell_type":{"18e65c4a":"code","42ccbc0a":"code","1b213310":"code","8fc360ee":"code","b6e75f18":"code","78ac3f89":"code","44cca5ad":"code","0638a6d0":"code","1cba012d":"code","f5d87e42":"code","394b4910":"code","a17974a8":"code","a8741862":"code","f0e2b8df":"code","d5f595c4":"code","3efbe473":"code","d9a6f917":"code","f3e7cff9":"code","5f633e60":"code","4160a409":"code","fd7e5dbb":"code","b0605f42":"code","82762651":"code","a4e2dacb":"code","5e7d08b6":"code","19ee61c9":"markdown","ecdfed47":"markdown","0e72ef19":"markdown","681af2aa":"markdown","ee59325b":"markdown","6182b69b":"markdown","f3168184":"markdown"},"source":{"18e65c4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42ccbc0a":"import seaborn as sn\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing","1b213310":"dataset = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndata = dataset.copy()","8fc360ee":"data.head()","b6e75f18":"data.info()","78ac3f89":"data.isnull().values.any()","44cca5ad":"#checking for duplicate rows as many wines are common\n\nduplicate_rows_df = data[data.duplicated()]\nprint(\" number of duplicate rows: \", duplicate_rows_df.shape )","0638a6d0":"data = data.drop_duplicates()\ndata.info()","1cba012d":"cols = data.columns.tolist()\n#Checking for Detecting Outliers\nplt.subplots(figsize=(20,15))\nboxplot = data.boxplot(column=cols)","f5d87e42":"Q1 = data.quantile(0.25)\nQ3 = data.quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","394b4910":"#removing Out liers \ndata = data[~((data < (Q1 - 1.5 * IQR)) |(data > (Q3 + 1.5 * IQR))).any(axis=1)]\ndata.shape","a17974a8":"# after removing out liers\nplt.subplots(figsize=(20,15))\nboxplot = data.boxplot(column=cols)","a8741862":"#normalising data\nd = preprocessing.normalize(data, axis = 0)\nscaled_df = pd.DataFrame(d, columns=cols)\nscaled_df['quality'] = data['quality'].values\nscaled_df.head(20)","f0e2b8df":"data = scaled_df","d5f595c4":"plt.subplots(figsize=(20,15))\nsn.heatmap(data.corr(), annot=True )","3efbe473":"dataset_knn = data.copy()","d9a6f917":"wine_cat=[]\nfor i in dataset_knn[\"quality\"]:\n    if i >=7:\n        wine_cat.append(1)\n    else:\n        wine_cat.append(0)\ndataset_knn[\"wine_cat\"]=wine_cat","f3e7cff9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import model_selection\nfrom sklearn import metrics\nfrom sklearn.model_selection import GridSearchCV","5f633e60":"df_Predictors=dataset_knn.drop([\"quality\",\"wine_cat\"],axis=1)\ndf_target=dataset_knn.wine_cat","4160a409":"Xtrain,Xtest,ytrain,ytest=train_test_split(df_Predictors,df_target,random_state=10,test_size=0.2)\nprint(\"Shape of Xtrain:{} and Shape of ytrain:{} \".format(Xtrain.shape,ytrain.shape))\nprint(\"Shape of Xtest:{} and Shape of ytest:{} \".format(Xtest.shape,ytest.shape))","fd7e5dbb":"\nKNN=KNeighborsClassifier(n_neighbors=4)\nKNN=KNN.fit(Xtrain,ytrain)\nKnn_predict=KNN.predict(Xtest)","b0605f42":"metrics.accuracy_score(ytest,Knn_predict)","82762651":"model = KNeighborsClassifier(n_jobs=-1)\n#Hyper Parameters Set\nparams = {'n_neighbors':[5,6,7,8,9,10],\n          'leaf_size':[1,2,3,5],\n          'weights':['uniform', 'distance'],\n          'algorithm':['auto', 'ball_tree','kd_tree','brute'],\n          'n_jobs':[-1]}\n#Making models with hyper parameters sets\nmodel1 = GridSearchCV(model, param_grid=params, n_jobs=1)\nmodel1.fit(Xtrain,ytrain)\n#The best hyper parameters set\nprint(\"Best Hyper Parameters:\",model1.best_params_)","a4e2dacb":"#The best hyper parameters set\nprint(\"Best Hyper Parameters:\\n\",model1.best_params_)\n#Prediction\nknn_hy=model1.predict(Xtest)","5e7d08b6":"metrics.accuracy_score(ytest,knn_hy)","19ee61c9":"AS quality is not obejective truth we can have something like quality >6 is good and less is bad","ecdfed47":"maybe the hypertune model is overfitting thats why it is producing worse results.\n","0e72ef19":"![image.png](attachment:image.png)\n> **In this note book i will explore the wine tasting data base and try to predict quality**","681af2aa":"**As we can see Volatile acidity, alchol, citric acid etc seem to play a lot of role in determining quality**","ee59325b":"I am using KNN as to me it makes the most sense.","6182b69b":"We can see we have 240 rows that are duplicate","f3168184":"Trying hypertuning"}}