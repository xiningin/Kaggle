{"cell_type":{"9e888453":"code","26966222":"code","053887a4":"code","f0904ace":"code","cf676647":"code","1dbcc378":"code","9f67f704":"code","fbd12ba4":"code","31e4c361":"code","a6fbf390":"code","8d68b4d0":"code","6c102e61":"code","1a0600e8":"code","114d075d":"code","ef2bfffd":"code","b170ed6e":"code","fea1ab93":"code","7b8cee3e":"code","44985843":"code","27549bc0":"code","d61a0113":"code","25d813da":"code","4c69fe20":"code","7d98b626":"code","f07b62ed":"code","54f1e95a":"code","e9cd1c08":"code","de6c5b9f":"markdown"},"source":{"9e888453":"import warnings\nimport numpy as np\nimport pandas as pd\nfrom pathlib import Path\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom catboost import CatBoostClassifier","26966222":"PATH_TO_DATA = Path('..\/input\/cat-in-the-dat\/')","053887a4":"train_df = pd.read_csv(PATH_TO_DATA \/ 'train.csv')","f0904ace":"train_df.head()","cf676647":"test_df = pd.read_csv(PATH_TO_DATA \/ 'test.csv')","1dbcc378":"test_df.head()","9f67f704":"categ_feat_idx = np.where(train_df.drop('target', axis=1).dtypes == 'object')[0]\ncateg_feat_idx","fbd12ba4":"X_train = train_df.drop('target', axis=1).values\ny_train = train_df['target'].values\nX_test = test_df.values","31e4c361":"X_train_part, X_valid, y_train_part, y_valid = train_test_split(X_train, y_train, \n                                                                test_size=0.3, \n                                                                random_state=17)","a6fbf390":"SEED = 17\nparams = {'loss_function':'Logloss', # objective function\n          'eval_metric':'AUC', # metric\n          'verbose': 200, # output to stdout info about training process every 200 iterations\n          'early_stopping_rounds': 200,\n          'cat_features': categ_feat_idx,\n          #'task_type': 'GPU',\n          'random_seed': SEED\n         }\nctb = CatBoostClassifier(**params)","8d68b4d0":"%%time\nctb.fit(X_train_part, y_train_part,\n        eval_set=(X_valid, y_valid),\n        use_best_model=True,\n        plot=True);","6c102e61":"ctb_valid_pred = ctb.predict_proba(X_valid)[:, 1]","1a0600e8":"roc_auc_score(y_valid, ctb_valid_pred)","114d075d":"%%time\nctb.fit(X_train, y_train,\n        eval_set=(X_valid, y_valid),\n        use_best_model=True,\n        plot=True);","ef2bfffd":"ctb_test_pred = ctb.predict_proba(X_test)[:, 1]","b170ed6e":"with warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    sample_sub = pd.read_csv(PATH_TO_DATA \/ 'sample_submission.csv', \n                             index_col='id')\n    sample_sub['target'] = ctb_test_pred\n    sample_sub.to_csv('ctb_pred.csv')","fea1ab93":"!head ctb_pred.csv","7b8cee3e":"ctb2.get_feature_importance(prettified=True)","44985843":"train_df['nom_c1'] = train_df['nom_1'] + ' ' + train_df['nom_2']","27549bc0":"train_df.head()","d61a0113":"categ_feat_idx = np.where(train_df.drop('target', axis=1).dtypes == 'object')[0]\ncateg_feat_idx\n\nX_train = train_df.drop('target', axis=1).values\ny_train = train_df['target'].values\nX_test = test_df.values","25d813da":"X_train_part, X_valid, y_train_part, y_valid = train_test_split(X_train, y_train, \n                                                                test_size=0.3, \n                                                                random_state=17)","4c69fe20":"SEED = 17\nparams = {'loss_function':'Logloss', # objective function\n          'eval_metric':'AUC', # metric\n          'verbose': 200, # output to stdout info about training process every 200 iterations\n          'early_stopping_rounds': 200,\n          'cat_features': categ_feat_idx,\n          #'task_type': 'GPU',\n          'random_seed': SEED\n         }\nctb2 = CatBoostClassifier(**params)","7d98b626":"%%time\nctb2.fit(X_train_part, y_train_part,\n        eval_set=(X_valid, y_valid),\n        use_best_model=True,\n        plot=True);","f07b62ed":"%%time\nctb2.fit(X_train, y_train,\n        eval_set=(X_valid, y_valid),\n        use_best_model=True,\n        plot=True);","54f1e95a":"ctb2_test_pred = ctb2.predict_proba(X_test)[:, 1]","e9cd1c08":"with warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    sample_sub = pd.read_csv(PATH_TO_DATA \/ 'sample_submission.csv', \n                             index_col='id')\n    sample_sub['target'] = ctb2_test_pred\n    sample_sub.to_csv('ctb_pred2.csv')","de6c5b9f":"## V.20 - Feature engineering & tuning\n"}}