{"cell_type":{"91d56bf9":"code","20879af4":"code","21853ed3":"code","82a9850c":"code","2e70f4c4":"code","b5eac618":"code","ab54661d":"code","95d13370":"code","8605e71d":"code","3e211645":"markdown","a0badef5":"markdown","41319f97":"markdown","83d119e3":"markdown","fa59ee02":"markdown","d945efa7":"markdown"},"source":{"91d56bf9":"import os\nimport numpy as np\nimport pandas as pd\nimport cv2\nfrom tqdm.notebook import tqdm\nfrom scipy.stats import skew","20879af4":"train = pd.DataFrame(pd.read_csv(\"..\/input\/cassava-leaf-disease-classification\/train.csv\"))\n\nprint(\"Shape of train dataframe = \", train.shape)","21853ed3":"train.head()","82a9850c":"image_names = os.listdir(\"..\/input\/cassava-leaf-disease-classification\/train_images\")\n\nprint(\"###TRAIN###\")\nprint(len(image_names), type(image_names), image_names[0])","2e70f4c4":"TRAIN_DIRECTORY = \"..\/input\/cassava-leaf-disease-classification\/train_images\/\"","b5eac618":"def prepare_metadata(base_directory, image_names) : \n    image_statistics = pd.DataFrame(index = np.arange(len(image_names)), \n                                    columns = [\"image_name\", \"path\", \"rows\", \"columns\", \"image_mean\", \"image_sd\",\n                                               \"image_skewness\", \"mean_red_value\", \"mean_green_value\", \"mean_blue_value\"])\n    i = 0 \n    for name in tqdm(image_names) : \n        path = os.path.join(base_directory, name)\n        image = cv2.imread(path)\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n        \n        image_statistics.iloc[i][\"image_name\"] = name\n        image_statistics.iloc[i][\"path\"] = path\n        image_statistics.iloc[i][\"rows\"] = image.shape[0]\n        image_statistics.iloc[i][\"columns\"] = image.shape[1]\n        image_statistics.iloc[i][\"image_mean\"] = np.mean(image.flatten())\n        image_statistics.iloc[i][\"image_sd\"] = np.std(image.flatten())\n        image_statistics.iloc[i][\"image_skewness\"] = skew(image.flatten())\n        image_statistics.iloc[i][\"mean_red_value\"] = np.mean(image[:, :, 0])\n        image_statistics.iloc[i][\"mean_green_value\"] = np.mean(image[:, :, 1])\n        image_statistics.iloc[i][\"mean_blue_value\"] = np.mean(image[:, :, 2])\n        \n        i = i + 1\n        del image\n    return image_statistics","ab54661d":"train_image_statistics = prepare_metadata(TRAIN_DIRECTORY, image_names)","95d13370":"print(\"Shape of created metadata file = \", train_image_statistics.shape)\n\ntrain_image_statistics.head()","8605e71d":"train_image_statistics.to_csv(\"train_image_statistics.csv\", index = False)","3e211645":"Use the above function to create train and test image statistics file. Rest is pretty much intuitive :-)","a0badef5":"Let's store all the names of the image present in a list. We will extract names one by one from this list when we prepare the metadata down the line.","41319f97":"# Cassava Leaf Disease Identification - Metadata Preparation\n![image.png](attachment:image.png)\n\nThese **pre-EDA additional dataset** creation steps happen to take a lot of time. So, either you can manipulate and create your own, or you can use mine for your analysis. Although, this one didn't take long.\n\n\n## The entire dataset obtained as a result of this notebook is available at :\n\n## **https:\/\/www.kaggle.com\/fireheart7\/cassavaimagestatistics**\n\nThis notebook is the first one in my series of work, in this competition. As always, shout out to amazing notebook authors present here at kaggle!! I got loads of inspiration from them. I believe this is the best thing about the ML community. The extent of collaboration and guidance one can seek here is inexplicable!!","83d119e3":"**Thank you & all the best!**","fa59ee02":"**Export it for using it in other notebooks.**","d945efa7":"# 'Every image tells a story.'\n\n![image.png](attachment:image.png)\n\nHence, it is of paramount importance to understand the images in our dataset! By the end of this notebook :\n\n* We will **create a new csv file** encapsulating information about our cassava images in training set.\n* Features such as **Image mean, mean channel intensities, skewness**, ... are incorporated in the dataframe.\n* These csv can then be used as independent additional datasets for the cassava disease competition.\n\n# But What's The Need?\n\nIn the official dataset provided for this competiton, we are only given image_id and corresponding label associated with each image. **Features central to images** such as mean intensities, skewness, standard deviation are missing which heavily influences our analysis. \n\nSo, in order to analyze them, *it's better to record all the features we need(from the image) in one dataframe and store it as .csv file*."}}