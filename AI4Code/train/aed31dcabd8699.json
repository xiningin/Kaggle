{"cell_type":{"ef701228":"code","0cbb40dd":"code","89c3d532":"code","bdfb030a":"code","dc522aee":"code","9c635b4e":"code","8402c52a":"code","718aa609":"code","3de8865f":"code","93bb4f7f":"code","f4e90ac6":"code","66f08315":"code","735ebb20":"code","dc47d1ce":"code","57802516":"code","44363d25":"code","ee35fa5a":"code","75ed0f29":"code","b144a61f":"code","2dea513c":"code","736f3ae0":"code","216db210":"code","f96df6a2":"code","4000317b":"code","5d7906df":"code","2d4020a9":"code","330a978f":"code","7508faa0":"code","a83f76b9":"code","56c7148f":"code","f12b57d4":"code","7e545ef2":"code","c81b29ff":"code","11568b97":"code","0d9024b6":"code","ba7a2c78":"code","250a0792":"code","a21c9d49":"code","b03714ee":"code","32fa2e3d":"code","7b72d933":"code","0817a9d5":"code","f68048a1":"code","c8adafed":"code","2b564e2b":"code","467ded60":"code","19654a43":"code","e450063d":"code","6f18bf29":"code","34489536":"code","716532d3":"code","f3d94031":"code","bbf7bedd":"code","d03f2232":"code","a39755bb":"code","1648251d":"code","148044df":"code","a8d11cb9":"code","6c9342d2":"code","a0bc4515":"code","4a584ab0":"code","24c63d55":"code","25091a07":"code","d8e5f7f9":"code","4f12d368":"code","0a9bccec":"code","ac1a4345":"code","8a670f7d":"code","0c682675":"code","e42adfcb":"code","f67cee7b":"code","593e74a6":"code","9dec550e":"code","3a7408f7":"code","ec3acf48":"code","9c66c9c2":"code","3de3b2e1":"code","12e5870c":"code","1112da8c":"code","0047423b":"code","6dbb00a4":"code","0e8fd680":"code","317c993d":"code","79d98df1":"code","298cd9f2":"code","cf387066":"code","2edf6859":"code","ee79ae9e":"code","1a9e03f9":"code","61476a85":"code","18390d36":"code","f547d203":"code","bcf955bc":"code","d2b8b0da":"code","b2bdddf6":"code","e8da85cd":"code","17e1d51a":"code","405163b9":"code","ab384afd":"code","0968a950":"code","75219259":"code","c1b861a8":"code","54fc6c01":"code","98edabe2":"code","287de7b4":"code","3dae18de":"code","14dbd5a7":"code","d750e820":"code","e62a3aa8":"markdown","e072ed6a":"markdown","d0de97fd":"markdown","f96fa551":"markdown","dfd686cb":"markdown","a2423748":"markdown","f83074d7":"markdown","ab914af3":"markdown","60b2316b":"markdown","b4d45c28":"markdown","9e406593":"markdown","3d36811c":"markdown","37d71c64":"markdown","bf83af30":"markdown","f6ceed18":"markdown","ab1803e3":"markdown","05545c59":"markdown","1fe4cb33":"markdown","88834342":"markdown","64d37170":"markdown","14a0d7e2":"markdown","c4dc7d2b":"markdown","d4d3360b":"markdown","ad5551ae":"markdown","0477e323":"markdown","bf470aa9":"markdown","59331adf":"markdown","c548488d":"markdown","0c2bc155":"markdown","1d0b0fc0":"markdown","37aa2089":"markdown","b0683818":"markdown","b67dcba4":"markdown","3ff98b2d":"markdown","a5806cc0":"markdown","c216d269":"markdown","10e5e730":"markdown","186cbc28":"markdown","efc38398":"markdown","e35321d3":"markdown","a86eb355":"markdown","5b482b51":"markdown","6e90d6a7":"markdown","42c9a76f":"markdown","d7f619a1":"markdown","bc355bbe":"markdown","ac4a8c33":"markdown","e6c15631":"markdown","381e68bd":"markdown","5f134581":"markdown","3864e5b9":"markdown","87681ab1":"markdown","16c52fe8":"markdown","ae852cf1":"markdown","226aa023":"markdown","963d0241":"markdown","d3bfa2b5":"markdown","63d1423d":"markdown","6af3f7fc":"markdown","87c88504":"markdown","c61051fc":"markdown","c325edd7":"markdown","6310e4f6":"markdown","c437b5c4":"markdown","1b11144f":"markdown","6a5313c0":"markdown","e24dee92":"markdown","ddabd9a1":"markdown","ea360e5b":"markdown","e96cb51e":"markdown","2d8ea9e9":"markdown","c7b37c38":"markdown","f2d67601":"markdown","f600c55b":"markdown","5ae27052":"markdown","8cc3df65":"markdown","58561826":"markdown","cff26001":"markdown","155b7788":"markdown","ec828c6e":"markdown","ad09df7d":"markdown","787b5959":"markdown","e29adc68":"markdown","51ff6976":"markdown","2ed2e911":"markdown","d5e39522":"markdown","82307ad5":"markdown","ccc522ca":"markdown","96d9fec7":"markdown","c89cf4e9":"markdown","030aab6e":"markdown","dda3707d":"markdown","be33ef58":"markdown","7d47b037":"markdown","77137eb7":"markdown","463a8763":"markdown","200d122d":"markdown","04443642":"markdown","59f1b6e7":"markdown","0864288c":"markdown","20e150d6":"markdown","bbe5df16":"markdown","c11adaa0":"markdown","3b6f4082":"markdown","3bc2444f":"markdown","5fdd6e68":"markdown","674c0054":"markdown","9478645b":"markdown","b195ddd9":"markdown","bf936a5d":"markdown","fd53df99":"markdown","fd4cfdf8":"markdown","2f9034aa":"markdown","720961c5":"markdown","fa2f35f6":"markdown","56a900c2":"markdown"},"source":{"ef701228":"import pandas as pd\nimport numpy as np\n\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\ntrain_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\n\nprint(train_df.shape)\nprint(test_df.shape)","0cbb40dd":"train_df.head()","89c3d532":"test_df.head()","bdfb030a":"train_df.info()","dc522aee":"test_df.info()","9c635b4e":"sns.distplot(train_df[\"SalePrice\"])","8402c52a":"sns.boxplot(data = train_df, x = \"MSSubClass\", y = \"SalePrice\")","718aa609":"sns.boxplot(data = train_df, x = \"MSZoning\", y = \"SalePrice\")","3de8865f":"sns.scatterplot(data = train_df, x = \"LotFrontage\", y = \"SalePrice\")","93bb4f7f":"sns.scatterplot(data = train_df, x = \"LotArea\", y = \"SalePrice\")","f4e90ac6":"sns.boxplot(data = train_df, x = \"Street\", y = \"SalePrice\")","66f08315":"sns.boxplot(data = train_df, x = \"Alley\", y = \"SalePrice\")","735ebb20":"no_alley = train_df[train_df[\"Alley\"].isnull()]\nplt.xlabel(\"NA (No alley access)\")\nsns.boxplot(y = no_alley[\"SalePrice\"])","dc47d1ce":"sns.boxplot(data = train_df, x = \"LotShape\", y = \"SalePrice\")","57802516":"sns.boxplot(data = train_df, x = \"LandContour\", y = \"SalePrice\")","44363d25":"sns.boxplot(data = train_df, x = \"Utilities\", y = \"SalePrice\")","ee35fa5a":"train_df[\"Utilities\"].value_counts()","75ed0f29":"test_df[\"Utilities\"].describe()","b144a61f":"sns.boxplot(data = train_df, x = \"LotConfig\", y = \"SalePrice\")","2dea513c":"sns.boxplot(data = train_df, x = \"LandSlope\", y = \"SalePrice\")","736f3ae0":"plt.figure(figsize = (12, 6))\nplt.xticks(rotation = 45)\nsns.boxplot(data = train_df, x = \"Neighborhood\", y = \"SalePrice\")","216db210":"median_by_group = train_df.groupby(by = [\"Neighborhood\"])[\"SalePrice\"].median().sort_values(ascending = False).index\nplt.figure(figsize = (12, 6))\nplt.xticks(rotation = 45)\nsns.boxplot(data = train_df, x = \"Neighborhood\", y = \"SalePrice\", order = median_by_group)","f96df6a2":"sns.boxplot(data = train_df, x = \"Condition1\", y = \"SalePrice\")","4000317b":"sns.boxplot(data = train_df, x = \"Condition2\", y = \"SalePrice\")","5d7906df":"sns.boxplot(data = train_df, x = \"BldgType\", y = \"SalePrice\")","2d4020a9":"sns.boxplot(data = train_df, x = \"HouseStyle\", y = \"SalePrice\")","330a978f":"sns.boxplot(data = train_df, x = \"OverallQual\", y = \"SalePrice\")","7508faa0":"sns.boxplot(data = train_df, x = \"OverallCond\", y = \"SalePrice\")","a83f76b9":"sns.scatterplot(data = train_df, x = \"YearBuilt\", y = \"SalePrice\")","56c7148f":"sns.scatterplot(data = train_df, x = \"YearRemodAdd\", y = \"SalePrice\")","f12b57d4":"sns.boxplot(data = train_df, x = \"RoofStyle\", y = \"SalePrice\")","7e545ef2":"plt.xticks(rotation = 30)\nsns.boxplot(data = train_df, x = \"RoofMatl\", y = \"SalePrice\")","c81b29ff":"plt.xticks(rotation = 45)\nsns.boxplot(data = train_df, x = \"Exterior1st\", y = \"SalePrice\")","11568b97":"plt.xticks(rotation = 45)\nsns.boxplot(data = train_df, x = \"Exterior2nd\", y = \"SalePrice\")","0d9024b6":"sns.boxplot(data = train_df, x = \"MasVnrType\", y = \"SalePrice\")","ba7a2c78":"sns.scatterplot(data = train_df, x = \"MasVnrArea\", y = \"SalePrice\")","250a0792":"sns.boxplot(data = train_df, x = \"ExterQual\", y = \"SalePrice\")\ntrain_df[\"ExterQual\"].value_counts()","a21c9d49":"test_df.info()\ntest_df[\"ExterQual\"].value_counts()","b03714ee":"sns.boxplot(data = train_df, x = \"ExterCond\", y = \"SalePrice\")","32fa2e3d":"sns.boxplot(data = train_df, x = \"Foundation\", y = \"SalePrice\")","7b72d933":"sns.boxplot(data = train_df, x = \"BsmtQual\", y = \"SalePrice\")\ntrain_df[\"BsmtQual\"].value_counts()","0817a9d5":"sns.boxplot(data = train_df, x = \"BsmtCond\", y = \"SalePrice\")\ntrain_df[\"BsmtCond\"].value_counts()","f68048a1":"sns.boxplot(data = train_df, x = \"BsmtExposure\", y = \"SalePrice\")","c8adafed":"sns.boxplot(data = train_df, x = \"BsmtFinType1\", y = \"SalePrice\")","2b564e2b":"sns.scatterplot(data = train_df, x = \"BsmtFinSF1\", y = \"SalePrice\")","467ded60":"sns.boxplot(data = train_df, x = \"BsmtFinType2\", y = \"SalePrice\")","19654a43":"sns.scatterplot(data = train_df, x = \"BsmtFinSF2\", y = \"SalePrice\")","e450063d":"sns.scatterplot(data = train_df, x = \"BsmtUnfSF\", y = \"SalePrice\")","6f18bf29":"sns.scatterplot(data = train_df, x = \"TotalBsmtSF\", y = \"SalePrice\")","34489536":"sns.boxplot(data = train_df, x = \"Heating\", y = \"SalePrice\")","716532d3":"sns.boxplot(data = train_df, x = \"HeatingQC\", y = \"SalePrice\")","f3d94031":"sns.boxplot(data = train_df, x = \"CentralAir\", y = \"SalePrice\")","bbf7bedd":"sns.boxplot(data = train_df, x = \"Electrical\", y = \"SalePrice\")","d03f2232":"sns.scatterplot(data = train_df, x = \"1stFlrSF\", y = \"SalePrice\")","a39755bb":"sns.scatterplot(data = train_df, x = \"2ndFlrSF\", y = \"SalePrice\")","1648251d":"sns.scatterplot(data = train_df, x = \"LowQualFinSF\", y = \"SalePrice\")","148044df":"sns.scatterplot(data = train_df, x = \"GrLivArea\", y = \"SalePrice\")","a8d11cb9":"sns.scatterplot(data = train_df, x = \"BsmtFullBath\", y = \"SalePrice\")","6c9342d2":"sns.scatterplot(data = train_df, x = \"BsmtHalfBath\", y = \"SalePrice\")","a0bc4515":"sns.scatterplot(data = train_df, x = \"FullBath\", y = \"SalePrice\")","4a584ab0":"sns.scatterplot(data = train_df, x = \"HalfBath\", y = \"SalePrice\")","24c63d55":"sns.scatterplot(data = train_df, x = \"BedroomAbvGr\", y = \"SalePrice\")","25091a07":"sns.scatterplot(data = train_df, x = \"KitchenAbvGr\", y = \"SalePrice\")","d8e5f7f9":"sns.boxplot(data = train_df, x = \"KitchenQual\", y = \"SalePrice\")\ntrain_df[\"KitchenQual\"].value_counts()","4f12d368":"test_df[\"KitchenQual\"].value_counts()","0a9bccec":"sns.boxplot(data = train_df, x = \"TotRmsAbvGrd\", y = \"SalePrice\")","ac1a4345":"sns.boxplot(data = train_df, x = \"Functional\", y = \"SalePrice\")","8a670f7d":"sns.scatterplot(data = train_df, x = \"Fireplaces\", y = \"SalePrice\")","0c682675":"sns.boxplot(data = train_df, x = \"FireplaceQu\", y = \"SalePrice\")","e42adfcb":"sns.boxplot(data = train_df, x = \"GarageType\", y = \"SalePrice\")","f67cee7b":"sns.scatterplot(data = train_df, x = \"GarageYrBlt\", y = \"SalePrice\")","593e74a6":"sns.boxplot(data = train_df, x = \"GarageFinish\", y = \"SalePrice\")","9dec550e":"sns.scatterplot(data = train_df, x = \"GarageCars\", y = \"SalePrice\")","3a7408f7":"sns.scatterplot(data = train_df, x = \"GarageArea\", y = \"SalePrice\")","ec3acf48":"sns.boxplot(data = train_df, x = \"GarageQual\", y = \"SalePrice\")","9c66c9c2":"sns.boxplot(data = train_df, x = \"GarageCond\", y = \"SalePrice\")","3de3b2e1":"sns.boxplot(data = train_df, x = \"PavedDrive\", y = \"SalePrice\")","12e5870c":"sns.scatterplot(data = train_df, x = \"WoodDeckSF\", y = \"SalePrice\")","1112da8c":"sns.scatterplot(data = train_df, x = \"OpenPorchSF\", y = \"SalePrice\")","0047423b":"sns.scatterplot(data = train_df, x = \"EnclosedPorch\", y = \"SalePrice\")","6dbb00a4":"sns.scatterplot(data = train_df, x = \"3SsnPorch\", y = \"SalePrice\")","0e8fd680":"sns.scatterplot(data = train_df, x = \"ScreenPorch\", y = \"SalePrice\")","317c993d":"sns.scatterplot(data = train_df, x = \"PoolArea\", y = \"SalePrice\")","79d98df1":"sns.boxplot(data = train_df, x = \"PoolQC\", y = \"SalePrice\")","298cd9f2":"sns.boxplot(data = train_df, x = \"Fence\", y = \"SalePrice\")","cf387066":"sns.boxplot(data = train_df, x = \"MiscFeature\", y = \"SalePrice\")\ntrain_df[\"MiscFeature\"].value_counts()","2edf6859":"sns.scatterplot(data = train_df, x = \"MiscVal\", y = \"SalePrice\")","ee79ae9e":"sns.scatterplot(data = train_df, x = \"MoSold\", y = \"SalePrice\")","1a9e03f9":"sns.scatterplot(data = train_df, x = \"YrSold\", y = \"SalePrice\")","61476a85":"sns.boxplot(data = train_df, x = \"SaleType\", y = \"SalePrice\")","18390d36":"sns.boxplot(data = train_df, x = \"SaleCondition\", y = \"SalePrice\")","f547d203":"from sklearn import preprocessing\n\nvar_list = [\"Street\",\"Neighborhood\",\"ExterQual\",\"KitchenQual\",\"CentralAir\"]\n\nle = preprocessing.LabelEncoder()\n\ntrain_df1 = train_df.copy()\n\nfor column in var_list:\n    train_df1[column] = le.fit_transform(train_df1[column])\n\nvar_list = [\"LotFrontage\",\"OverallQual\",\"TotalBsmtSF\",\"GrLivArea\",\"YearBuilt\",\"Street\",\"Neighborhood\",\"ExterQual\",\"KitchenQual\",\"CentralAir\",\"SalePrice\"]\n\nplt.figure(figsize = (10, 10))\nsns.heatmap(train_df1[var_list].corr(), annot = True, cmap=\"binary\")","bcf955bc":"sns.distplot(train_df[\"LotFrontage\"])","d2b8b0da":"sns.distplot(test_df[\"LotFrontage\"])","b2bdddf6":"train_df[\"LotFrontage\"].fillna(train_df[\"LotFrontage\"].median(), inplace = True)\ntest_df[\"LotFrontage\"].fillna(test_df[\"LotFrontage\"].median(), inplace = True)","e8da85cd":"sns.distplot(test_df[\"TotalBsmtSF\"])","17e1d51a":"test_df[\"TotalBsmtSF\"].fillna(test_df[\"TotalBsmtSF\"].median(), inplace = True)","405163b9":"test_df[\"KitchenQual\"].value_counts()\ntest_df[\"KitchenQual\"].fillna(\"TA\", inplace = True)","ab384afd":"full = pd.concat([train_df, test_df], ignore_index = True)\nfull","0968a950":"from sklearn.preprocessing import OneHotEncoder\n\nencoder=OneHotEncoder(sparse = False)\n\nfull1 = full.copy()\n\ndef onehotencoding(df, column_name):\n    full1_encoded = pd.DataFrame(encoder.fit_transform(full1[[column_name]]))\n    full1_encoded.columns = encoder.get_feature_names([column_name])\n    full1.drop([column_name] ,axis=1, inplace=True)\n    final = pd.concat([full1, full1_encoded], axis=1)\n    return final\n\nfull1 = onehotencoding(full1, \"ExterQual\")\nfull1 = onehotencoding(full1, \"KitchenQual\")\nfull1","75219259":"final_train_df = full1[:len(train_df)]\nfinal_test_df = full1[len(train_df):]\ncolumn_list = [\"LotFrontage\",\"OverallQual\",\"TotalBsmtSF\",\"GrLivArea\",\"YearBuilt\",\n               \"ExterQual_Ex\",\"ExterQual_Fa\",\"ExterQual_Gd\",\"ExterQual_TA\",\n               \"KitchenQual_Ex\",\"KitchenQual_Fa\",\"KitchenQual_Gd\",\"KitchenQual_TA\"]\n\nX_train_final = final_train_df[column_list]\ny_train_final = final_train_df[\"SalePrice\"]","c1b861a8":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_train_final, y_train_final)","54fc6c01":"from sklearn.neighbors import KNeighborsRegressor\n\nknr = KNeighborsRegressor()\n\nknr.fit(X_train, y_train)\n\nprint(\"The R^2 for the training set is {}\".format(knr.score(X_train, y_train)))\nprint(\"The R^2 for the testing set is {}\".format(knr.score(X_test, y_test)))","98edabe2":"from sklearn.linear_model import LinearRegression\n\nlinreg = LinearRegression()\nlinreg.fit(X_train, y_train)\n\nprint(\"The R^2 for the training set is: {}\".format(linreg.score(X_train, y_train)))\nprint(\"The R^2 for the testing set is: {}\".format(linreg.score(X_test, y_test)))","287de7b4":"from sklearn.linear_model import Ridge\n\nridge = Ridge()\nridge.fit(X_train, y_train)\n\nprint(\"Training set score: {}\".format(ridge.score(X_train, y_train)))\nprint(\"Testing set score: {}\".format(ridge.score(X_test, y_test)))","3dae18de":"from sklearn.linear_model import Lasso\n\nlasso = Lasso()\nlasso.fit(X_train, y_train)\n\nprint(\"Training set score: {}\".format(lasso.score(X_train, y_train)))\nprint(\"Testing set score: {}\".format(lasso.score(X_test, y_test)))\nprint(\"Number of features used: {}\".format(np.sum(lasso.coef_ != 0)))","14dbd5a7":"prediction = ridge.predict(final_test_df[column_list])\nprediction = pd.DataFrame(prediction)\nfinal_table = pd.concat([test_df[\"Id\"], prediction], axis = 1)\nfinal_table.columns = [\"Id\", \"SalePrice\"]\nfinal_table","d750e820":"final_table.to_csv(\"submission.csv\", index = False)","e62a3aa8":"### 2.73 'Fence'","e072ed6a":"So in the training dataset almost every house has all the public utilities except one that has only electricity and gas! Very interesting variable. But how about the test dataset?","d0de97fd":"# 3. Examine Correlation\nAfter the exploratory data visualization, I chose a few variables that might be able to serve as powerful explanatory variables for predicting the sale prices in our testing set:\n* ***LotFrontage***: linear feet of street connected to property\n* ***Street***: type of road access\n* ***Neighborhood***: physical locations within Ames city limits\n* ***OverallQual***: overall material and finish quality\n* ***ExterQual***: exterior material quality\n* ***TotalBsmtSF***: total basement area in square feet\n* ***GrLivArea***: above grade (ground) living area in square feet\n* ***KitchenQual***: kitchen quality\n* ***YearBuilt***: original construction date\n* ***CentralAir***: has central AC or not\n\nHowever, eyeballing their distribution is not enough so examining the correlation coefficient between these variables would better capture the important ones.","f96fa551":"### 2.06 'Street'","dfd686cb":"### 2.43 'Electrical'","a2423748":"The linearity is even weaker here. I will not include this as a explanatory variable.","f83074d7":"### 2.63 'GarageArea'","ab914af3":"### 2.19 'OverallCond'","60b2316b":"### 2.28 'ExterQual'","b4d45c28":"### 5.3 Ridge Regression","9e406593":"The training dataset contains 1460 rows and 81 columns while the testing dataset contains 1459 rows and 80 columns. The missing column in the testing dataset is our outcome of interest as well as what we would be predicting, the house price.","3d36811c":"In the final 7 variables that I chose, the variable 'LotFrontage' has 259 missing values in the training set and 227 ones in the testing set. 'TotalBsmtSF' has 1 missing value in the testing set and 'KitchenQual' also has 1 in the testing set.","37d71c64":"Exhibits a similar pattern to that of a year a house is built.","bf83af30":"# 2. Understand the variables of interest","f6ceed18":"Again, with only 2 missing values and the vast majority having all public utilities, this might not have as much explanatory power in itself.","ab1803e3":"### 2.56 'Functional' ","05545c59":"The number of linear feet of street connected to the property has a relatively weak linear relationship with sale price. Keep it for now.","1fe4cb33":"Overall conditions on the other hand, however, do not exhibit a difference as strong.","88834342":"It turns out that the 'CentralAir', 'Street' and 'Neighborhood' variables do not have a very profound correlation with sale price, so I would drop these 3 variables.","64d37170":"We can see that 'LotFrontage' in both sets have really big values, so I would replace the missing values with their respective median values.","14a0d7e2":"### 2.25 'Exterior2nd'","c4dc7d2b":"### 2.37 'BsmtFinSF2'","d4d3360b":"### 2.64 'GarageQual'","ad5551ae":"### 2.75 'MoSold' & 'YrSold'","0477e323":"### 2.44 '1stFlrSF'","bf470aa9":"The median sale price for moderately irregular (IR2) houses is the highest, but slightly irregular (IR1) houses enjoy the absolute maximum sale price among all. Nothing particularly interesting here.","59331adf":"### 2.20 'YearBuilt'","c548488d":"### 2.05 'LotArea'","0c2bc155":"### 5.4 Lasso Regression","1d0b0fc0":"### 2.03 'MSZoning'","37aa2089":"### 2.65 'GarageCond'","b0683818":"### 2.01 'SalePrice'","b67dcba4":"It seems that ridge regression outputs the best testing set score, as reflected in the R^2. Now use the model to output our actual prediction before saving and uploading it as a CSV file.","3ff98b2d":"### 2.61 'GarageFinish'","a5806cc0":"# Project Overview\nThe aim of this project is to predict the prices for residential houses in Ames, Iowa in the testing dataset by using the given training dataset. I plan to work through this project in this order: \n\nFirst, I would be loading all the tools I need for analyzing the datasets. Secondly, I would be going through all the variables using the order in the given data dictionary to examine their relationships with the sale price variable, after which I would conduct some data cleaning and possibly recoding to handle special cases (missing values, abnormal values, etc). In the end, I would be I would be loading the algorithms from **Scikit-Learn** to train and predict the datasets and output the results.","c216d269":"### 2.72 'PoolArea' & 'PoolQC'","10e5e730":"A slightly better way to show this distribution might be to sort the median sale prices in each group.","186cbc28":"### 5.1 KNN Regression","efc38398":"### 2.27 'MasVnrArea'","e35321d3":"### 2.51 'HalfBath'","a86eb355":"### 5.5 Random Forest","5b482b51":"### 2.47 'GrLivArea'","6e90d6a7":"### 2.08 'LotShape'","42c9a76f":"### 2.33 'BsmtExposure'","d7f619a1":"### 2.30 'Foundation'","bc355bbe":"### 2.23 'RoofMatl'","ac4a8c33":"### 5.2 Linear Regression (OLS)","e6c15631":"### 2.13 'Neighborhood'","381e68bd":"### 2.76 'SaleType' & 'SaleCondition'","5f134581":"### 2.52 'Bedroom'","3864e5b9":"Before applying the models, we need to recode the categorical variables into dummy variables.","87681ab1":"### 2.09 'LandContour'","16c52fe8":"### 2.18 'OverallQual'","ae852cf1":"### 2.46 'LowQualFinSF'","226aa023":"### 2.02 'MSSubClass'","963d0241":"The same applies to the testing set.","d3bfa2b5":"### 2.31 'BsmtQual'","63d1423d":"The result shows that the majority of our variables have complete records, with certain variables that represent distinctive features missing values. However, certain features (fireplace, fence, basement, etc.) are not available in every house and since we would probably not be using every single variable to predict the sale price, we can deal with the missing values after deep diving into the important ones.","6af3f7fc":"### 2.29 'ExterCond'","87c88504":"### 2.55 'TotRmsAbvGrd'","c61051fc":"### 2.59 'GarageType'","c325edd7":"### 2.10 'Utilities'","6310e4f6":"### 2.71 'ScreenPorch'","c437b5c4":"### 2.74 'MiscFeature' & 'MiscVal'","1b11144f":"# 4. Deal with missing and categorical values","6a5313c0":"Since there are so few houses that have pools, we dont need to consider this variable.","e24dee92":"### 2.12 'LandSlope'","ddabd9a1":"### 2.35 'BsmtFinSF1'","ea360e5b":"There seems to be a positive non-linear relationship between the year a house was built and its sale price, which gets stronger as the time stamp progresses.","e96cb51e":"### 2.54 'KitchenQual'","2d8ea9e9":"### 2.16 'BldgType'","c7b37c38":"'TotalBsmtSF' also contains extremely high values in the testing set so again, use the median value to replace the missing record.","f2d67601":"### 2.53 'Kitchen'","f600c55b":"Whether a house has gravel or paved road access shows a median difference of about $50k in sale price. I will keep it for now.","5ae27052":"### 2.50 'FullBath'","8cc3df65":"### 2.40 'Heating'","58561826":"### 2.58 'FireplaceQu'","cff26001":"### 2.70 '3SsnPorch'","155b7788":"It seems that being in different neighborhoods do have a effect on the houses' sale prices, as shown by each neighborhood's median sale price.","ec828c6e":"We can see that almost all variables related to floor size has a positive relationship with sale price. For now I would be using the above grade ground living area in sqaure feet.","ad09df7d":"# 5. Apply the machine learning models","787b5959":"Since 'KitchenQual' is a categorical variable, I would just replace the missing record with the most common category.","e29adc68":"### 2.17 'HouseStyle'","51ff6976":"So it turns out that not a single house's exterior material quality is rated as 'Poor' in our training set.","2ed2e911":"### 2.39 'TotalBsmtSF'","d5e39522":"### 2.62 'GarageCars'","82307ad5":"### 2.11 'LotConfig'","ccc522ca":"The median sale price difference between houses that have central AC and those that do not is relatively big. We can keep it for now.","96d9fec7":"### 2.36 'BsmtFinType2'","c89cf4e9":"### 2.15 'Condition2' ","030aab6e":"### 2.07 'Alley'","dda3707d":"### 2.66 'PavedDrive'","be33ef58":"### 2.41 'HeatingQC'","7d47b037":"### 2.14 'Condition1'","77137eb7":"### 2.68 'OpenPorchSF'","463a8763":"### 2.21 'YearRemodAdd'","200d122d":"### 2.67 'WoodDeckSF'","04443642":"### 2.42 'CentralAir'","59f1b6e7":"The median difference for alley's material is now even bigger. However, the first grpah above only represents about 6% (n = 91) of all the records, so it is not at all representative. Moreover, the distribution for houses without an alley access, the distribution is more spread out compared to the ones with gravel or paved roads.","0864288c":"With both training and testing sets have the same factor levels and only 1 missing value in the testing set, we can use this as one of the explanatory variables for now.","20e150d6":"### 2.69 'EnclosedPorch'","bbe5df16":"### 2.22 'RoofStyle'","c11adaa0":"### 2.60 'GarageYrBlt'","3b6f4082":"### 2.38 'BsmtUnfSF'","3bc2444f":"### 2.45 '2ndFlrSF'","5fdd6e68":"### 2.24 'Exterior1st'","674c0054":"### 2.04 'LotFrontage'","9478645b":"### 2.49 'BsmtHalfBath' ","b195ddd9":"So in the training dataset, not a single house is rated 'Po' (poor) and not every contains a basement.","bf936a5d":"# 1. Load the datasets and the packages for data wrangling & visualization","fd53df99":"### 2.26 'MasVnrType'","fd4cfdf8":"This graph exhibits a drastic difference for each group's distribution of overall material and finish with regard to sale prices.","2f9034aa":"### 2.57 'Fireplaces'","720961c5":"### 2.34 'BsmtFinType1'","fa2f35f6":"### 2.32 'BsmtCond'","56a900c2":"### 2.48 'BsmtFullBath'"}}