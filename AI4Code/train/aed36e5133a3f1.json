{"cell_type":{"256d2cb8":"code","fb84b8e8":"code","8088062b":"code","053a6218":"code","4032e384":"code","fc783766":"code","c3d46512":"code","309d63b3":"code","4b018c33":"code","fe56fec6":"code","1c5d4966":"code","9eda59e2":"code","79fad597":"code","6d057fcc":"code","59421bc9":"code","7e01a0fc":"code","f86d06f1":"code","efbab265":"code","e647eced":"code","cd99847b":"code","6afd2cca":"code","e896c092":"code","95f5a2e0":"code","50aea003":"code","4dd8d3cc":"code","af880e16":"code","384f248c":"code","a493d0c3":"code","cb7a8852":"code","aed702ce":"code","7b4dda17":"code","13dbf288":"markdown","0eb2e769":"markdown","c92a1785":"markdown","4c7f04af":"markdown","4b1863c1":"markdown","ee274d83":"markdown","a20b7ea3":"markdown","37b8f1f9":"markdown","084a6107":"markdown","2e62dfd7":"markdown","408bc4fb":"markdown"},"source":{"256d2cb8":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns","fb84b8e8":"tips = sns.load_dataset(\"tips\") # get the tips dataset from the internet\ntips # A small dataset compared to our Lending Club dataset :)","8088062b":"# Here we will plot tip against total_bill \nsns.relplot(x=\"total_bill\", y=\"tip\", data=tips); # Note here x=\"\" and y=\"\" corresponds to the column names in the tips dataset ","053a6218":"# Method 1. \nfig, ax = plt.subplots()\nsns.scatterplot(x=\"total_bill\", y=\"tip\", data=tips)\nax.set_xlabel(\"Total Bill\")\nax.set_ylabel(\"Tip\")\nax.set_title(\"Tip vs Total Bill\");","4032e384":"#Method 2. \ng = sns.relplot(x=\"total_bill\", y=\"tip\", data=tips)\ng.set_axis_labels(\"Total Bill\", \"Tip\")\ng.ax.set_title(\"Tip vs Total Bill\");","fc783766":"sns.relplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips);","c3d46512":"# Categorical scatterplots\n# Here we show how to plot total_bill within each day \n# To prevent from overlapping try kind=\"swarm\"\nsns.catplot(x=\"day\", y=\"total_bill\", data=tips);","309d63b3":"# Categorical distribution plots (distributions of observations within categories)\nsns.catplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", kind=\"box\", data=tips);","4b018c33":"# Categorical estimate plots\n# Here the height of the bars represent the mean (by default) and the error bars represent a confidence interval around the estimate\nsns.catplot(x=\"day\", y=\"tip\", hue=\"sex\", kind=\"bar\", data=tips);","fe56fec6":"# Here we examine the univariate distribution of tip using histograms\nsns.distplot(tips[\"tip\"], kde=False);","1c5d4966":"# Here we add a kernel density estimate (KDE) on top of the histogram.\nsns.distplot(tips[\"tip\"]);","9eda59e2":"# Load in the data \ntrain = pd.read_csv(\"..\/input\/ucfai-dsg-fa19-default\/train.csv\") #we could set low_memory=True but it's useful to see that column numbers for exploration\ntest = pd.read_csv(\"..\/input\/ucfai-dsg-fa19-default\/test.csv\")","79fad597":"# Take a look at the data with describe \n# YOUR CODE HERE\nraise NotImplementedError()","6d057fcc":"# Take a look at the categorical data\n# YOUR CODE HERE\nraise NotImplementedError()","59421bc9":"# Count number of columns with at least one missing value\n# YOUR CODE HERE\nraise NotImplementedError()","7e01a0fc":"# Percent columns that contain at least one missing value\n# YOUR CODE HERE\nraise NotImplementedError()","f86d06f1":"# Count number of row with at least one missing value\n# YOUR CODE HERE\nraise NotImplementedError()","efbab265":"# Calculate the percentage of rows that contain at least one missing value\n# YOUR CODE HERE\nraise NotImplementedError()","e647eced":"# Count number of columns with at least one missing value\n# YOUR CODE HERE\nraise NotImplementedError()","cd99847b":"# Calculate the percentage of nulls in each column \n# YOUR CODE HERE\nraise NotImplementedError()","6afd2cca":"# Find the number of columns that have over 90% nulls in them \n# YOUR CODE HERE\nraise NotImplementedError()","e896c092":"#visualize loan_amnt, funded_amnt, and funded_amnt_inv for the train dataset \n# YOUR CODE HERE\nraise NotImplementedError()","95f5a2e0":"#visualize loan_amnt, funded_amnt, and funded_amnt_inv for the test dataset \n# YOUR CODE HERE\nraise NotImplementedError()","50aea003":"# Plot the number of loans issued per month\n# YOUR CODE HERE\nraise NotImplementedError()","4dd8d3cc":"# Convert \"issue_d\" to pandas datetime format for the train set and then plot the number of loans issued per year \n# YOUR CODE HERE\nraise NotImplementedError()","af880e16":"# Convert \"issue_d\" to pandas datetime format for the test set and then plot the number of loans issued per year \n# YOUR CODE HERE\nraise NotImplementedError()","384f248c":"# Plot the number of loans within each grade category for the train set\n# YOUR CODE HERE\nraise NotImplementedError()","a493d0c3":"# Plot the number of loans within each grade category for the test set\n# YOUR CODE HERE\nraise NotImplementedError()","cb7a8852":"# Plot the number of loans within each grade category with hue train. \n# YOUR CODE HERE\nraise NotImplementedError()","aed702ce":"# Plot the number of loans within each subgrade with hue GOOD_STANDING\n# YOUR CODE HERE\nraise NotImplementedError()","7b4dda17":"# import pandas_profiling\n\n# train.profile_report()","13dbf288":"# Exploratory Data Analysis with the Lending Club Dataset ","0eb2e769":"Lets add a third dimension to the plot above by coloring in the points according to the categorical variable `sex`. We can achieve this by adding the attribute `hue` to our plot.","c92a1785":" ## Missing Value Analysis","4c7f04af":"<img src=\"https:\/\/ucfai.org\/data-science\/fa19\/2019-10-03-loan-defaults\/loan-defaults\/banner.png\">\n\n<div class=\"col-12\">\n    <span class=\"btn btn-success btn-block\">\n        Meeting in-person? Have you signed in?\n    <\/span>\n<\/div>\n\n<div class=\"col-12\">\n    <h1> Answering the Important Question: Where's My Money? <\/h1>\n    <hr>\n<\/div>\n\n<div style=\"line-height: 2em;\">\n    <p>by: \n        <strong> Steve<\/strong>\n        (<a href=\"https:\/\/github.com\/causallycausal\">@causallycausal<\/a>)\n     on 2019-10-03<\/p>\n<\/div>","4b1863c1":"## Scatter Plots \nRemember that scatter plots plot a cloud of points representing the joint distribution of two variables. In Seaborn we can use either `sns.scatterplot()` or `sns.relplot()` and note that the default `kind` of `sns.relplot()` is scatter (think of `kind` as the type of plot you want to create). Also, `sns.relplot()` is considered a `Figure-level` interface, more on that later. ","ee274d83":"Lets say we want to rename our x and y-axis to Total Bill and Tip, respectively and add a title to our plot. There are two possible ways to do this: \n1. Modifying the axes labels by calling `plt.subplots()` and use `sns.scatterplot()` to plot the data. \n2. Modifying the axes labels returned when calling a figure level function in Seaborn*. \n\nBoth ways are illustrated below, feel free to choose whatever style you prefer. Additionally, I've found the first way is helpful when you want to plot multiple plots in a grid. (Remember that Seaborn is built on Matplotlib.) \n\n\\* With every `Figure-Level` interface, a `FacetGrid` object is returned which you can access to make edits to your plot. Learn more about `FacetGrid` [here](http:\/\/seaborn.pydata.org\/generated\/seaborn.FacetGrid.html), building structured multi-plot grids in Seaborn [here](https:\/\/seaborn.pydata.org\/tutorial\/axis_grids.html) and ","a20b7ea3":"# Seaborn Basics\n- *If you are already familiar with Seaborn, feel free to skip this.*","37b8f1f9":"## Visualizing the Distributions of Loan Amount, Funded Amount, and Funded Amount by Investors","084a6107":"Illustrating Seaborn through the visualization of the tips datasets. For more information, please visit the Seaborn documentation [here](https:\/\/seaborn.pydata.org\/).","2e62dfd7":"# Visualizing the Distribution of a Dataset\n\nWe end this mini-tutorial with an example of how to visualize a univariate distribution.","408bc4fb":"## Plotting Categorical Variables \nThe figure level interface for plotting categorical variables is `sns.catplot()`. We can think of different categorical plot kinds as belonging to three different families: \n1. Categorical scatterplots:\n    *     `sns.stripplot()` (with `kind=\"strip\"`; the default)\n    *     `sns.swarmplot()` (with `kind=\"swarm\"`)\n\n2. Categorical distribution plots:\n    \n    *     `sns.boxplot()` (with `kind=\"box\"`)\n    *     `sns.violinplot()` (with `kind=\"violin\"`)\n    *     `sns.boxenplot()` (with `kind=\"boxen\"`)\n\n3. Categorical estimate plots:\n    *      `sns.pointplot()` (with `kind=\"point\"`)\n    *      `sns.barplot()` (with `kind=\"bar\"`)\n    *      `sns.countplot()` (with `kind=\"count\"`)\n \n Below are some examples of each categorical plot."}}