{"cell_type":{"b8ddd829":"code","e59907da":"code","b67a3d1e":"code","5c2efd61":"code","72c1cc18":"code","5153282f":"code","8c068b28":"code","b4dee50c":"code","47d198a1":"code","c446a5c8":"code","824128df":"code","e9c60026":"code","b44fd8dc":"code","17b60fc4":"code","19eb4e9f":"code","559d4584":"code","811131cf":"code","1dd2ed39":"code","88201f55":"code","285b3c65":"code","0cd3d885":"code","0c504416":"code","a60686b0":"code","694698ee":"code","ee5ce077":"markdown","a0171ee7":"markdown","87dbeb8c":"markdown","c33d4eb8":"markdown","45a37e6d":"markdown","a5f802eb":"markdown","d788bd0d":"markdown","08130e24":"markdown","c90bc484":"markdown"},"source":{"b8ddd829":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error \nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nimport matplotlib .pyplot as plt\nimport warnings\n%matplotlib inline\nfrom sklearn.feature_selection import SelectFromModel","e59907da":"cols=['A','B','C','D','E','F','G','H','I','J',\n      'K','L','M','N','O','P','Q','R','S','T',\n      'U','V','W','X','Y','Z','AA','AB','AC','AD',\n     'AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN']","b67a3d1e":"train_data = pd.read_csv('..\/input\/data-science-london-scikit-learn\/train.csv',names = cols)\ntest_data = pd.read_csv('..\/input\/data-science-london-scikit-learn\/test.csv',names = cols)\ny = pd.read_csv('..\/input\/data-science-london-scikit-learn\/trainLabels.csv',names = ['result'])","5c2efd61":"print('TrainDataShape is : ',train_data.shape)\nprint('TestDataShape is : ',test_data.shape)\nprint('YDataShape is : ',y.shape)","72c1cc18":"train_data.head()","5153282f":"train_data.describe()","8c068b28":"train_data.info()","b4dee50c":"y.head()","47d198a1":"y = np.ravel(y)\nX_train, X_test, y_train, y_test = train_test_split(train_data, y)\n","c446a5c8":"print('X_trainShape is :',X_train.shape)\nprint('y_trainShape is :',y_train.shape)\nprint('X_testShape is :',X_test.shape)\nprint('y_testShape is :',y_test.shape)\n","824128df":"RandomForestClassifierModel = RandomForestClassifier(n_estimators = 1000,max_depth = 4 , \n                                                     min_samples_split = 7 ,n_jobs = -1 )\nRandomForestClassifierModel.fit(train_data,y)\n\n","e9c60026":"#Calculating Details\nprint('RandomForestClassifierModel Train Score is : ' , RandomForestClassifierModel.score(X_train, y_train))\nprint('RandomForestClassifierModel Test Score is : ' , RandomForestClassifierModel.score(X_test, y_test))\n\n","b44fd8dc":"#Calculating Prediction\ny_pred = RandomForestClassifierModel.predict(X_test)\ny_pred_prob = RandomForestClassifierModel.predict_proba(X_test)\nprint('Predicted Value for RandomForestClassifierModel is : ' , y_pred[:10])\nprint('Prediction Probabilities Value for RandomForestClassifierModel is : ' , y_pred_prob[:10])\n","17b60fc4":"MAEValue = mean_absolute_error(y_test, y_pred, multioutput='uniform_average')\nprint(\"MAEValue is :\" ,MAEValue)","19eb4e9f":"MSEValue= mean_squared_error(y_test, y_pred, multioutput='raw_values')\nprint(\"MSEValue is : \" , MSEValue)","559d4584":"AccuracyScore = accuracy_score(y_test,y_pred)\nprint('AccuracyScore is : ',AccuracyScore)","811131cf":"confusionMatrix = confusion_matrix(y_test,y_pred)\nprint('confusionMatrix is : ',confusionMatrix)\n# drawing confusion matrix\nsns.heatmap(confusionMatrix, center = True)\nplt.show()","1dd2ed39":"##Knowning the best feature\nprint('RandomForestClassifierModel features importances are : ' , RandomForestClassifierModel.feature_importances_)","88201f55":"## Knowing the best features \nsel = SelectFromModel(RandomForestClassifier( )) \nsel.fit(train_data,y)\nselected_features = sel.transform(train_data)\nsel.get_support()","285b3c65":"#test_preds = RandomForestClassifierModel.predict(test_data,)\ntest_preds = pd.DataFrame(RandomForestClassifierModel.predict(test_data),columns=['Solution'])\ntest_preds","0cd3d885":"print(test_preds.shape)","0c504416":"submission = pd.DataFrame(np.arange(1,len(X_test)+1),columns=['id'])\nsubmission=pd.concat([submission['id'],test_preds['Solution']], axis=1)\nsubmission.head(100)","a60686b0":"submission['Solution'] = test_preds","694698ee":"#submission.to_csv('submission.csv', index=False)","ee5ce077":"# ****Submission","a0171ee7":"# ****import library","87dbeb8c":"# ****Make Predictions For test_data","c33d4eb8":"# ****Apply the RandomForestClassifier Algorithm","45a37e6d":"# ****Read Data ","a5f802eb":"# ****Spliting Data To X_train , y_train , X_test,y_test","d788bd0d":"# ****Calculate Accuracy","08130e24":"# ****knowing the best features","c90bc484":"# ****Make Predictions For Train_data"}}