{"cell_type":{"47a1baa0":"code","bdb783da":"code","e2f91aa5":"code","8458f871":"code","37ab1e5f":"code","503c4193":"code","e6b66357":"code","46d59c87":"code","2424c442":"code","86847775":"code","605d8887":"code","14da7e1e":"code","1f5b8c4f":"code","7323ed81":"code","6e4b1f5d":"code","521bad75":"code","3d16bf35":"code","c90a7adb":"code","072d1abe":"code","5a08b383":"code","54847a97":"code","f86b1648":"code","59e3c17f":"code","7b26141d":"code","46e25b0d":"code","1527d04d":"code","29641e9b":"code","e82f59cd":"code","022449f9":"code","4e8115b0":"code","23d7af75":"code","e3ec3675":"code","bcecaaef":"code","ebf8b02b":"code","7e01d1b1":"code","349d595e":"code","f959c341":"code","cd3d3646":"code","7884fb05":"code","f431d303":"code","1745972d":"code","d80b2ed6":"code","5b7574d2":"code","2076269a":"code","3b59ccb7":"code","f29290c8":"code","6c53e2a5":"code","fc6d61f9":"code","7d36e832":"code","b426d5e2":"code","c4dee408":"code","28962a02":"code","2e4f721c":"code","29174a24":"code","88661f4f":"code","90dbf8c9":"code","8c4e70d3":"code","412fdb45":"code","6c5c8fb1":"code","364d5a7c":"code","0a3112a9":"code","8b2736d4":"code","7469af97":"code","6ef921dc":"code","12255c24":"code","0d450818":"code","16cab2f6":"code","33c915e7":"code","e50d2cd3":"code","f629dc4d":"code","bfe4846c":"code","e2c860a0":"markdown","c664da6c":"markdown","344ffed7":"markdown","9923666c":"markdown","6fd2b72d":"markdown","0f5fd912":"markdown","fd12a582":"markdown","fcf47cab":"markdown","15532661":"markdown","7415a17e":"markdown","ea32c69e":"markdown","1e806b1e":"markdown","96dac060":"markdown","2a38b60d":"markdown","b2c8be8e":"markdown","638ae871":"markdown","fcf83cea":"markdown","7953604a":"markdown","d40a379f":"markdown","03e76ac3":"markdown","10bbf854":"markdown","70ecef2d":"markdown","687c5076":"markdown","518f5566":"markdown","dfde0318":"markdown","c82deb39":"markdown","527cf1ca":"markdown","b7f53e05":"markdown"},"source":{"47a1baa0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bdb783da":"os.chdir('..\/input')\ndf = pd.read_csv('2004-2019.tsv', sep='\\t',parse_dates=[1,2])\ndf.head()","e2f91aa5":"df.info()","8458f871":"df.columns","37ab1e5f":"df = df.drop(\"Unnamed: 0\", axis=1)","503c4193":"df.rename(columns={'DATA INICIAL':'date_first', \n                     'DATA FINAL':'date_last',\n                     'REGI\u00c3O':'macro_region',\n                     'ESTADO':'state',\n                     'PRODUTO':'product',\n                     'N\u00daMERO DE POSTOS PESQUISADOS':'num_gas_station', \n                     'UNIDADE DE MEDIDA':'unit',\n                     'PRE\u00c7O M\u00c9DIO REVENDA':'mean_market_value',\n                     'DESVIO PADR\u00c3O REVENDA':'standard_deviation',\n                     'PRE\u00c7O M\u00cdNIMO REVENDA':'min_price',\n                     'PRE\u00c7O M\u00c1XIMO REVENDA':'max_price',\n                     'MARGEM M\u00c9DIA REVENDA':'mean_price_margin',\n                     'COEF DE VARIA\u00c7\u00c3O REVENDA':'coefficient_variation',\n                     'PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O':'mean_dist_price',\n                     'DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O':'dist_standard_deviation',\n                     'PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O':'dist_min_price',\n                     'PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O':'dist_max_price',\n                     'COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O':'dist_coefficient_variation',\n                     'M\u00caS':'month',\n                     'ANO':'year'}\n            , inplace=True)\ndf.dtypes","e6b66357":"for col in ['mean_price_margin','mean_dist_price','dist_standard_deviation',\n            'dist_min_price','dist_max_price','dist_coefficient_variation']:\n    df[col]=pd.to_numeric(df[col],errors='coerce')","46d59c87":"df.head()","2424c442":"df['macro_region']=pd.Categorical(df['macro_region'])\ndf['state']=pd.Categorical(df['state'])\ndf['product']=pd.Categorical(df['product'])\ndf['unit']=pd.Categorical(df['unit'])","86847775":"data=df.copy()\ndata.head()","605d8887":"data.shape","14da7e1e":"data.describe().T","1f5b8c4f":"data.isnull().values.any()","7323ed81":"data.isnull().sum().sort_values(ascending=False)","6e4b1f5d":"cat_df=data.select_dtypes(include=[\"category\"])\ncat_df.head()","521bad75":"cat_df[\"macro_region\"].unique()","3d16bf35":"cat_df[\"state\"].unique()","c90a7adb":"cat_df[\"product\"].unique()","072d1abe":"cat_df[\"unit\"].unique()","5a08b383":"cat_df[\"unit\"].value_counts()","54847a97":"plt.figure(figsize=(15,4))\nsns.barplot(x='product',y=data['mean_market_value'],hue='unit', data=data);","f86b1648":"data1=data.loc[(data['unit'] == 'R$\/l')]\ndata2=data.loc[(data['unit'] == 'R$\/13Kg')]\ndata3=data.loc[(data['unit'] == 'R$\/m3')]","59e3c17f":"data1[\"unit\"].value_counts()","7b26141d":"data1[\"macro_region\"].value_counts().plot.barh();","46e25b0d":"plt.figure(figsize=(15,4))\nsns.barplot(x='product',y=data1['product'].index, data=data1);","1527d04d":"g = sns.catplot(data=data1, x='product', y='mean_market_value')\ng.fig.set_figwidth(11)\ng.fig.set_figheight(10)","29641e9b":"plt.figure(figsize=(15,4))\nsns.barplot(x='product',y=data['mean_market_value'],hue='macro_region', data=data);","e82f59cd":"plt.figure(figsize=(15,4))\nsns.barplot(x='product',y=data1['mean_market_value'],hue='macro_region', data=data1);","022449f9":"sns.kdeplot(data.mean_market_value, shade=True);","4e8115b0":"(sns\n.FacetGrid(data,\n          hue=\"product\",\n          height=5,\n          xlim=(0,10))\n.map(sns.kdeplot, \"mean_market_value\", shade=True)\n.add_legend()\n);","23d7af75":"(sns\n.FacetGrid(data1,\n          hue=\"product\",\n          height=5,\n          xlim=(0,10))\n.map(sns.kdeplot, \"mean_market_value\", shade=True)\n.add_legend()\n);","e3ec3675":"(sns\n.FacetGrid(data2,\n          hue=\"product\",\n          height=5,\n          xlim=(25,90))\n.map(sns.kdeplot, \"mean_market_value\", shade=True)\n.add_legend()\n);","bcecaaef":"sns.catplot(x=\"product\", y=\"num_gas_station\", hue=\"macro_region\",\n           kind=\"point\", height=5, aspect=3,data=data);","ebf8b02b":"data.pivot_table('mean_market_value','state','product')","7e01d1b1":"sns.catplot(x=\"product\", y=\"mean_market_value\", hue=\"state\",\n           kind=\"point\", height=10, aspect=2, data=data);","349d595e":"sns.catplot(x=\"product\", y=\"mean_market_value\", hue=\"state\",\n           kind=\"point\", height=10, aspect=2, data=data1);","f959c341":"sns.boxplot(x=\"month\",y='mean_market_value',data=data1);","cd3d3646":"sns.boxplot(x=\"month\",y='mean_market_value',data=data2);","7884fb05":"sns.boxplot(x=\"month\",y='mean_market_value',data=data3);","f431d303":"plt.figure(figsize=(15,4))\nsns.boxplot(x=\"year\",y='mean_market_value',data=data1);","1745972d":"plt.figure(figsize=(15,4))\nsns.boxplot(x=\"year\",y='mean_market_value',data=data3);","d80b2ed6":"plt.figure(figsize=(15,8))\nsns.scatterplot(x='mean_market_value', y='standard_deviation',\n                hue='product',style='macro_region',data=data1);","5b7574d2":"num_gas=pd.cut(data1['num_gas_station'],[0,300,600,900,2000,3000,4000,5000])","2076269a":"data1.pivot_table('mean_market_value',['macro_region', num_gas],'product')","3b59ccb7":"plt.figure(figsize=(15,8))\nsns.scatterplot(x='mean_market_value', y='num_gas_station',\n                hue='macro_region',style='product', data=data1);","f29290c8":"#correlation map\nf,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()","6c53e2a5":"data['date_diff']=data['date_last']-data['date_first']\ndata.groupby(\"date_diff\")[\"mean_market_value\"].count()","fc6d61f9":"#Line Plot\n\ndata.max_price.plot(kind='line',color='g',label='Max Price',linewidth=1.5,alpha=0.5,grid=True,linestyle='-')\ndata.min_price.plot(kind='line',color='b',label='Min Price',linewidth=0.75,alpha=0.5,grid=True,linestyle=':')\n\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","7d36e832":"data_a=data1.sort_values(by=['date_first'])","b426d5e2":"sns.lineplot(x=\"date_first\",y=\"mean_market_value\",data=data_a);","c4dee408":"data_a.head()","28962a02":"data_a.drop(['date_first', 'date_last','state','unit','month','year'], axis=1, inplace=True)","2e4f721c":"data_a.dropna(inplace=True)","29174a24":"#High Correlation between features\ncorr_matrix = data_a.corr().abs()\nhigh_corr_var=np.where(corr_matrix>=0.8)\nhigh_corr_var=[(corr_matrix.columns[x],corr_matrix.columns[y]) for x,y in zip(*high_corr_var) if x!=y and x<y]","88661f4f":"high_corr_var","90dbf8c9":"corr = data_a.corr()\nk = 15 #number of variables for heatmap\ncols = corr.nlargest(k, 'mean_market_value')['mean_market_value'].index\ncm = np.corrcoef(data_a[cols].values.T)\nsns.set(font_scale=1.25)\nfig, ax = plt.subplots(figsize=(10,10))       \nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10},\n                 yticklabels=cols.values, xticklabels=cols.values,cmap='RdYlGn')\nplt.show()","8c4e70d3":"data_a.isnull().sum().sort_values(ascending=False)","412fdb45":"#Normalization\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\n\n# get numeric data\nnum_d = data_a.select_dtypes(exclude=['category'])\n\n# update the cols with their normalized values\ndata_a[num_d.columns] = sc.fit_transform(num_d)\n\n# convert string variable to One Hot Encoding\nohe_data = pd.get_dummies(data_a[\"macro_region\"])","6c5c8fb1":"ohe_data.head()","364d5a7c":"data_a.head()","0a3112a9":"result = pd.concat([data_a, ohe_data], axis=1)\nresult.drop(['macro_region'], axis=1, inplace=True)\nresult.head()","8b2736d4":"X=result.drop(['product','min_price','dist_max_price','mean_dist_price','dist_min_price','dist_standard_deviation'], axis=1)\nY=result['product']","7469af97":"Y=pd.DataFrame(Y)\n\nfrom sklearn.preprocessing import LabelEncoder\n\n# LabelEncoder\nle = LabelEncoder()\n\n# apply \"le.fit_transform\"\nY_encoded = Y.apply(le.fit_transform)\nY_encoded=pd.DataFrame(Y_encoded)\nY_encoded.head()","6ef921dc":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import f1_score, confusion_matrix\nfrom sklearn.metrics import accuracy_score\n\n#split data\nx_train, x_test, y_train, y_test =train_test_split(X,Y_encoded, test_size=0.3, random_state=42)\n\n#random forest classifiers\nrf=RandomForestClassifier(random_state=42)\nab=rf.fit(x_train,y_train)\ny_pred=rf.predict(x_test)\n\nacc=accuracy_score(y_test,y_pred)\nprint('Accuracy is: ', acc)\n\ncm=confusion_matrix(y_test,y_pred)\nsns.heatmap(cm,annot=True, fmt=\"d\")\n","12255c24":"from sklearn.feature_selection import SelectKBest, chi2 # for chi-squared feature selection\nfrom sklearn import feature_selection\n\nsf = SelectKBest(score_func=feature_selection.f_regression, k='all')\nsf_fit = sf.fit(x_train,y_train)\n# print feature scores\nfor i in range(len(sf_fit.scores_)):\n    print(' %s: %f' % (x_train.columns[i], sf_fit.scores_[i]))","0d450818":"datset = pd.DataFrame()\ndatset['feature'] = x_train.columns[ range(len(sf_fit.scores_))]\ndatset['scores'] = sf_fit.scores_\ndatset = datset.sort_values(by='scores', ascending=False)\ndatset","16cab2f6":"x_train_2=sf_fit.transform(x_train)\nx_test_2=sf_fit.transform(x_test)\n\n#RandomForestClassifier\nrf2=RandomForestClassifier()\n\nxy=rf2.fit(x_train_2,y_train)\ny_pred_2=rf2.predict(x_test_2)\n\nac_2=accuracy_score(y_test, y_pred_2)\nprint('Accuracy is: ', ac_2)\n\ncm_2=confusion_matrix(y_test, y_pred_2)\nsns.heatmap(cm_2, annot=True, fmt=\"d\")","33c915e7":"#Recursive feature elimination with cross validation and random forest classification.\n\nfrom sklearn.feature_selection import RFECV\n\nrf_4= RandomForestClassifier()\nrfecv = RFECV (estimator=rf_4, step=1, cv=5, scoring='accuracy')  #5- fold cross validation\n\nrfecv=rfecv.fit(x_train, y_train)","e50d2cd3":"#Plot number of features with cross-validation scores\n\nimport matplotlib.pyplot as plt\nplt.figure()\n\nplt.xlabel(\"number of features selected\")\nplt.ylabel(\"cross validation score of number of selected features\")\n\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\nplt.show()","f629dc4d":"# In random forest classification has a featureImportances.(The higher, the more important the feature) \n#To use feature_importance method, in training data there should not be correlated features.\n\nrf_5=RandomForestClassifier()\nrfc_5=rf_5.fit(x_train,y_train)\nimportances=rfc_5.feature_importances_\n\nstd=np.std([tree.feature_importances_ for tree in rfc_5.estimators_], axis=0)\nindices=np.argsort(importances)[::-1]\n\n#Print the feature ranking\nprint(\"Feature ranking: \")\n\nfor f in range(x_train.shape[1]):\n    print(\"%d.feature %d (%f) \" % (f+1, indices[f], importances[indices[f]]))\n    \n#plot the feature importances\nplt.figure(1, figsize=(14,13))\nplt.title(\"Feature \u0130mportance\")\nplt.bar(range(x_train.shape[1]),importances[indices], color=\"b\", yerr=std[indices], align=\"center\")\nplt.xticks(range(x_train.shape[1]), x_train.columns[indices], rotation=90)\nplt.xlim([-1, x_train.shape[1]])\nplt.show()","bfe4846c":"#Feature Extraction\n\n\nfrom sklearn.decomposition import PCA\npca=PCA()\npca.fit(x_train)\n\nplt.figure(1, figsize=(14,13))\nplt.clf()\nplt.axes([.2, .2, .7, .7])\nplt.plot(pca.explained_variance_ratio_, linewidth=2)\nplt.axis('tight')\nplt.xlabel('n_components')\nplt.ylabel('explained_variance_ratio_')","e2c860a0":"An equal number of counting operations were performed for each time point. The data set can be a mechanical data set.","c664da6c":"Centro oeste and norte macro regions are higher mean market value in both graphs.","344ffed7":"* It is observed that there is a decrease in the number of gas stations in the GNV product compared to all other products.\n* According to the macro-regions, there is no problem in finding gas stations in the SUDESTE:)\n* Especially in CENTRO OESTE and NORDESTE macro regions, there is no difference in the number of gas stations in almost all products.","9923666c":"* The market price is quite cheap, especially in SUDESTE, since the number of gas stations is high.\n* However, I do not recommend purchasing GASOLINE COMUM from NORTE. Due to the less number of gas stations, it is quite expensive compared to other macro-regions.\n","6fd2b72d":"Accuracy is almost %92 and as it can be seen in confusion matrix. Now lets see other feature selection methods to find better results.","0f5fd912":"Summary of Categoric Variables","fd12a582":"* There is an increase over the years in products sold using R $ \/ L unit it is include \u00d3LEO DIESEL, \nGASOLINA COMUM, ETANOL HIDRATADO, \u00d3LEO DIESEL S10. However, the mean market price range has decreased in 2019 compared to 2018.\n* There is a sharp increase after 2013.","fcf47cab":"# After all that we selected first 7 features that is \n* dist_coefficient_variation\n* mean_market_value\n* num_gas_station\n* mean_price_margin\n* max_price\n* coefficient_variation\n* standard_deviation","15532661":"\nAmong the products sold with R $ \/ L, GASOLINA COMUM has the highest mean market value.","7415a17e":"Data Set Structural Information","ea32c69e":"As you can see, there are unit differences here. So I'll split according to unit.","1e806b1e":"Cat Plot","96dac060":"Accessing the classes and class number of the categorical variable","2a38b60d":"* As can be seen, the standard deviation range of the GASOLINA COMUM is the most varies product.\n* In OLEO DIESEL, although the mean market value increases, the standard deviation range does not increase much.","b2c8be8e":"It is seen that as the number of gas stations increases, the mean market value decreases.","638ae871":"Best 7 feature to classify is that dist_coefficient_variation, coefficient_variation, mean_market_value, standard_deviation, max_price, num_gas_station, mean_price_margin","fcf83cea":"Distribution Graph","7953604a":"\nIt is seen that GLP prices are the highest in MATO GROSSO.","d40a379f":"\nGLP product is sold at dolar\/13Kg , while GNV product is sold at dolar\/m3. Other products are sold at dolar\/L.","03e76ac3":"The mean market value of GNV has been increasing year by year.","10bbf854":"As can be seen, while the mean market value of GLP is the highest, GNV's mean market value is the lowest.","70ecef2d":"Are there any missing observations?","687c5076":"How many missing values a variable has?","518f5566":"When we examine the 3 box plots that differ according to the unit feature used, it is seen that the mean market price decreased in July and August. Summer months the value is generally lower.","dfde0318":"Bar Plot","c82deb39":"Histogram and Density Charts","527cf1ca":"* Summary of Categoric Variables\n* Summary of Numeric Variables\n* Distribution Graph\n* Correlation Graph\n* Line Graph\n* Featue Selection","b7f53e05":"ACRE state has the highest mean market values for products sold with R $ \/ L."}}