{"cell_type":{"b2eac3ca":"code","c3444c8b":"code","ff66fabf":"code","41413812":"code","7285be8f":"code","f4ff3aa3":"code","3b81cb4a":"code","2d106b26":"code","20ee5db7":"code","152e4384":"code","ee3a9c97":"code","5caf943f":"code","6e4e719b":"code","44b688e5":"code","5167c62e":"code","28997be0":"code","af86a696":"code","084f728e":"code","75fc564c":"code","0bb83a11":"code","e4c1caa4":"markdown","73f0d939":"markdown","01edde95":"markdown","b77e8141":"markdown","489c5aaa":"markdown","3e9b9d01":"markdown","b2746221":"markdown"},"source":{"b2eac3ca":"#import basic libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n#import the dataset\nvideoGames = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')\nvideoGames.info()\nvideoGames.head(10)","c3444c8b":"videoGames.describe()","ff66fabf":"videoGames.shape","41413812":"#import plotly features\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected = True)\nimport plotly.graph_objs as go\nfrom plotly import tools\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","7285be8f":"#scatterplot showing Other Sales and Global Sales vs Ranking for top 100 video games\n\ndf = videoGames.iloc[:100,:]\n\ntrace1 = go.Scatter(\n    x = df.Rank,\n    y = df.Other_Sales,\n    mode = \"lines\",\n    name = \"Other Sales\",\n    marker = dict(color = 'rgb(255, 173, 222)'),\n    text = df.Name\n)\ntrace2 = go.Scatter(\n    x = df.Rank,\n    y = df.Global_Sales,\n    mode = \"lines\",\n    name = 'Global Sales',\n    marker = dict(color = 'rgb(191, 141, 240)'),\n    text = df.Name\n)\n\ndata = [trace1, trace2]\nlayout = dict(title = \"Other Sales, and Global Sales vs Ranking of top 100 video games\",\n             xaxis = dict(title='Ranking', ticklen = 25, zeroline = False)\n             )\nfig = dict(data=data, layout=layout)\niplot(fig)","f4ff3aa3":"#scatterplots with four subplots showing sales in North America, Europe, Japan, and Global Sales vs Ranking \n#for video games in 2014\n\ndf2014 = videoGames[videoGames.Year == 2014]\n\ntrace1 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.NA_Sales,\n    name = 'Sales in North America',\n    marker = dict(color = 'rgb(98, 179, 117)')\n)\n\ntrace2 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.EU_Sales,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    name = 'Sales in Europe',\n    marker = dict(color = 'rgb(164, 222, 245)')\n)\n\ntrace3 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.JP_Sales,\n    xaxis = 'x3',\n    yaxis = 'y3',\n    name = 'Sales in Japan',\n    marker = dict(color = 'rgb(212, 172, 250)')\n)\n\ntrace4 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.Global_Sales,\n    xaxis = 'x4',\n    yaxis = 'y4',\n    name = 'Global Sales',\n    marker = dict(color = 'rgb(255, 173, 222)')\n)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.48]\n    ),\n    yaxis=dict(\n        domain=[0, 0.48]\n    ),\n    xaxis2=dict(\n        domain=[0.52, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.48],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.52, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.48],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.52, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.52, 1],\n        anchor='x4'\n    ),\n    title = 'Sales in North America, Europe, Japan,and Global Sales vs Rank of video games in 2014'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\n","3b81cb4a":"#scatterplots showing the name of video games vs their rank in 2013, 2014,and 2015\n\ndf2013 = videoGames[videoGames.Year == 2013]\ndf2014 = videoGames[videoGames.Year == 2014]\ndf2015 = videoGames[videoGames.Year == 2015]\n\ntrace1 = go.Scatter(\n    x = df2013.Rank,\n    y = df2013.Name,\n    mode = \"markers\",\n    name = \"2013\",\n    marker = dict(color = 'rgb(255, 224, 150)'),\n    text = df2013.Name\n)\ntrace2 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.Name,\n    mode = \"markers\",\n    name = \"2014\",\n    marker = dict(color = 'rgb(161, 255, 206)'),\n    text = df2014.Name\n)\ntrace3 = go.Scatter(\n    x = df2015.Rank,\n    y = df2015.Name,\n    mode = \"markers\",\n    name = \"2015\",\n    marker = dict(color = 'rgb(247, 182, 250)'),\n    text = df2014.Name\n)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = \"Name vs Ranking of top 100 video games in 2013, 2014, and 2015\",\n             xaxis = dict(title = 'Ranking', ticklen = 10, zeroline = False),\n             yaxis = dict(title = 'Name', ticklen = 10, zeroline = False)\n             )\nfig = dict(data=data, layout=layout)\niplot(fig)","2d106b26":"#scatterplots showing the global sales of top 100 video games vs their rank in 2013, 2014, 2015\n\ndf2013 = videoGames[videoGames.Year == 2013]\ndf2014 = videoGames[videoGames.Year == 2014]\ndf2015 = videoGames[videoGames.Year == 2015]\n\ntrace1 = go.Scatter(\n    x = df2013.Rank,\n    y = df2013.Publisher,\n    mode = \"markers\",\n    name = \"2013\",\n    marker = dict(color = 'rgb(255, 224, 150)'),\n    text = df2013.Name\n)\ntrace2 = go.Scatter(\n    x = df2014.Rank,\n    y = df2014.Publisher,\n    mode = \"markers\",\n    name = \"2014\",\n    marker = dict(color = 'rgb(113, 201, 134)'),\n    text = df2014.Name\n)\ntrace3 = go.Scatter(\n    x = df2015.Rank,\n    y = df2015.Publisher,\n    mode = \"markers\",\n    name = \"2015\",\n    marker = dict(color = 'rgb(247, 182, 250)'),\n    text = df2014.Name\n)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = \"Global Sales vs Rank of top 100 video games in 2013, 2014, and 2015\",\n             xaxis = dict(title = 'Ranking', ticklen = 10, zeroline = False),\n             yaxis = dict(title = 'Global Sales', ticklen = 10, zeroline = False)\n             )\nfig = dict(data=data, layout=layout)\niplot(fig)","20ee5db7":"#Bar plots showing the sales in North America, Europe, Japan, Other Sales, and Global Salesn of\n#top 3 video games\n\ndf2014 = videoGames[videoGames.Year == 2014].iloc[:3,:]\n\ntrace1 = go.Bar(\n    x = df2014.Name,\n    y = df2014.NA_Sales,\n    name = 'Sales in North America',\n    marker = dict(color = 'rgb(252, 151, 226)'),\n    text = df2014.Genre\n)\ntrace2 = go.Bar(\n    x = df2014.Name,\n    y = df2014.EU_Sales,\n    name = 'Sales in Europe',\n    marker = dict(color = 'rgb(126, 205, 217)'),\n    text = df2014.Genre\n)\ntrace3 = go.Bar(\n    x = df2014.Name,\n    y = df2014.Global_Sales,\n    name = 'Global Sales',\n    marker = dict(color = 'rgb(188, 217, 126)'),                \n    text = df2014.Genre\n)\ntrace4 = go.Bar(\n    x = df2014.Name,\n    y = df2014.Other_Sales,\n    name = 'Other Sales',\n    marker = dict(color = 'rgb(151, 169, 240)'),                \n    text = df2014.Genre\n)\ntrace5 = go.Bar(\n    x = df2014.Name,\n    y = df2014.JP_Sales,\n    name = 'Sales in Japan',\n    marker = dict(color = 'rgb(227, 164, 245)'),                \n    text = df2014.Genre\n)\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","152e4384":"#unique bar plots showing sales in North America, Europe, Japan, Other Sales, and Global Sales \n#for top 3 video games\n\ndf2014 = videoGames[videoGames.Year == 2014].iloc[:5,:]\nx = df2014.Name\n\ntrace1 = {\n  'x': x,\n  'y': df2014.NA_Sales,\n  'name': 'Sales in North America',\n  'marker' : dict(color = 'rgb(252, 151, 226)'),\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df2014.EU_Sales,\n  'name': 'Sales in Europe',\n  'marker' : dict(color = 'rgb(126, 205, 217)'),\n  'type': 'bar'\n};\ntrace3 = {\n  'x': x,\n  'y': df2014.JP_Sales,\n  'name': 'Sales in Japan',\n  'marker' : dict(color = 'rgb(188, 217, 126)'),\n  'type': 'bar'\n};\ntrace5 = {\n  'x': x,\n  'y': df2014.Global_Sales,\n  'name': 'Global Sales',\n  'marker' : dict(color = 'rgb(227, 164, 245)'),\n  'type': 'bar'\n};\ntrace4 = {\n  'x': x,\n  'y': df2014.Other_Sales,\n  'name': 'Other Sales',\n  'marker' : dict(color = 'rgb(151, 169, 240)'),\n  'type': 'bar'\n};\n\ndata = [trace1, trace2, trace3, trace5, trace4];\nlayout = {\n  'xaxis': {'title': 'Top 3 video games'},\n  'barmode': 'relative',\n  'title': 'Sales in North America, Europe, Japan, Other Sales, Global Sales for first  video games in 2014'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","ee3a9c97":"#bar plots showing Other Sales, and scatterplots showing Global Sales for top 7 video games\n\ndf2014 = videoGames[videoGames.Year == 2014].iloc[:7,:]\n\ny_otherSales = [each for each in df2014.Other_Sales]\ny_globalSales = [float(each) for each in df2014.Global_Sales]\nx_otherSales = [each for each in df2014.Name]\nx_globalSales = [each for each in df2014.Name]\ntrace0 = go.Bar(\n                x=y_otherSales,\n                y=x_otherSales,\n                marker=dict(color='rgb(247, 182, 250)',line=dict(color='rgb(255, 255, 255)',width=1.2)),\n                name='Other Sales',\n                orientation='h',   \n)\ntrace1 = go.Scatter(\n                x=y_globalSales,\n                y=x_globalSales,\n                mode='lines+markers',\n                line=dict(color='rgb(138, 103, 245)'),\n                name='Global Sales',\n)\nlayout = dict(\n                title='Other Sales and Global Sales of top 7 video games',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(255, 255, 255)',\n                plot_bgcolor='rgb(255, 255, 255)',\n)\nannotations = []\ny_s = np.round(y_otherSales, decimals=2)\ny_nw = np.rint(y_globalSales)\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x_otherSales):\n    # labeling the scatter savings\n    annotations.append(dict(xref='x2', yref='y2', y=xd, x=ydn - 4,text='{:,}'.format(ydn),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=yd + 3,text=str(yd),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\n\nlayout['annotations'] = annotations\n\n# Creating two subplots\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","5caf943f":"#pieplots showing sales in North America, Europe, Japan, and Global Sales\n#for top 8 video games in 2014\n\ndf2014 = videoGames[videoGames.Year == 2014].iloc[:8,:]\n\nmyColor = ['rgb(235, 140, 129)','rgb(235, 214, 138)','rgb(193, 207, 128)','rgb(153, 247, 161)','rgb(138, 235, 237)','rgb(140, 172, 237)','rgb(220, 184, 252)','rgb(148, 189, 134)']\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\nfig = make_subplots(rows=2, cols=2, specs=specs, subplot_titles = ['Sales in NA','Sales in Europe','Sales in Japan','Global Sales'])\n\n# Define pie charts\nfig.add_trace(go.Pie(labels=df2014.Name, values=df2014.NA_Sales,pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1],\n                     marker_colors=myColor), 1, 1)\nfig.add_trace(go.Pie(labels=df2014.Name, values=df2014.EU_Sales,pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1],\n                     marker_colors=myColor), 1, 2)\nfig.add_trace(go.Pie(labels=df2014.Name, values=df2014.JP_Sales,pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1],\n                     marker_colors=myColor), 2, 1)\nfig.add_trace(go.Pie(labels=df2014.Name, values=df2014.Global_Sales,pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1],\n                     marker_colors=myColor), 2, 2)\n\n# Tune layout and hover info\nfig.update_traces(hoverinfo='label+percent+name', textinfo='none')\nfig.update(layout_title_text='Game Sales')\nfig.update_layout()\n\nfig = go.Figure(fig)\nfig.show()","6e4e719b":"#pieplots showing Other Sales and Global Sales for top 8 video games \n#in 2014\n\nlabels = df2014.Name\n\nfig = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['Other Sales', 'Global Sales'])\nfig.add_trace(go.Pie(labels=labels, values=df2014.Other_Sales, scalegroup='one',\n                     name=\"Other Sales\",pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1], marker_colors = ['rgb(235, 140, 129)','rgb(235, 214, 138)','rgb(193, 207, 128)','rgb(153, 247, 161)','rgb(138, 235, 237)','rgb(140, 172, 237)','rgb(220, 184, 252)','rgb(148, 189, 134)']), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=df2014.Global_Sales, scalegroup='one',\n                     name=\"Global Sales\",pull=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1]), 1, 2)\n\nfig.update_layout(title_text='Game Sales')\nfig.show()","44b688e5":"#barplots showing count of genres in 2014, 2015\n\ndf2015 = videoGames.Genre[videoGames.Year == 2015]\ndf2014 = videoGames.Genre[videoGames.Year == 2014]\n\ntrace1 = go.Histogram(\n    x=df2014,\n    opacity=0.50,\n    name = \"2014\",\n    marker=dict(color='rgb(115, 195, 222)'))\ntrace2 = go.Histogram(\n    x=df2015,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    opacity=0.50,\n    name = \"2015\",\n    marker=dict(color='rgb(217, 153, 242)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title=' Count of genres in 2014, and 2015',\n                   xaxis2=dict(title='Genre',domain=[0.6, 0.95],anchor='y2'),\n                   yaxis2=dict( title='Count',domain=[0.6, 0.95],anchor='y2'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","5167c62e":"#bar plots showing count of publishers in 2014, 2015\n\ndf2015 = videoGames.Publisher[videoGames.Year == 2015]\ndf2014 = videoGames.Publisher[videoGames.Year == 2014]\n\ntrace1 = go.Histogram(\n    x=df2014,\n    opacity=0.50,\n    name = \"2014\",\n    marker=dict(color='rgb(115, 195, 222)'))\ntrace2 = go.Histogram(\n    x=df2015,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    opacity=0.50,\n    name = \"2015\",\n    marker=dict(color='rgb(217, 153, 242)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title=' Count of publishers in 2014, and 2015',\n                   xaxis2=dict(title='Publisher',domain=[0.6, 0.95],anchor='y2'),\n                   yaxis2=dict( title='Count',domain=[0.6, 0.95],anchor='y2'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","28997be0":"#bar plots shwoing count of platforms in 2014, 2015\n\ndf2015 = videoGames.Platform[videoGames.Year == 2015]\ndf2014 = videoGames.Platform[videoGames.Year == 2014]\n\ntrace1 = go.Histogram(\n    x=df2014,\n    opacity=0.50,\n    name = \"2014\",\n    marker=dict(color='rgb(115, 195, 222)'))\ntrace2 = go.Histogram(\n    x=df2015,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    opacity=0.50,\n    name = \"2015\",\n    marker=dict(color='rgb(217, 153, 242)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title=' Count of publishers in 2014, and 2015',\n                   xaxis2=dict(title='Platform',domain=[0.6, 0.95],anchor='y2'),\n                   yaxis2=dict( title='Count',domain=[0.6, 0.95],anchor='y2'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","af86a696":"#wordcloud showing the names of video games\n\nfrom wordcloud import WordCloud\n\ndf2014 = videoGames.Name[videoGames.Year == 2014]\nplt.subplots(figsize = (8,8))\nwordcloud = WordCloud(\n    background_color = 'white',\n    width = 1000,\n    height = 1000\n).generate(\" \".join(df2014))\nplt.imshow(wordcloud)\nplt.axis('Off')\nplt.show()","084f728e":"#boxplots showing sales in North America, Europe, Japan, Other Sales and Global Sales in 2014\n\ndf2014 = videoGames[videoGames.Year == 2014]\nfig = make_subplots(\n    rows=3, cols=2,\n    specs=[[{}, {}],[{}, {}],\n           [{\"colspan\": 2}, None]],\n    subplot_titles=(\"Sales in NA in 2014\",\"Sales in Europe in 2014\", \"Sales in Japan in 2014\",\"Other Sales\",\"Global Sales\"))\n\nfig.add_trace(go.Box(\n    x = df2014.NA_Sales,\n    name = 'Sales in NA in 2014',\n    marker = dict(\n        color = 'rgb(145, 209, 111)',\n    )\n),row=1, col=1)\nfig.add_trace(go.Box(\n    x = df2014.EU_Sales,\n    name = 'Sales in Europe in 2014',\n    marker = dict(\n        color = 'rgb(145, 209, 111)',\n    )\n),row=1, col=2)\nfig.add_trace(go.Box(\n    x = df2014.JP_Sales,\n    name = 'Sales in Japan in 2014',\n    marker = dict(\n        color = 'rgb(145, 209, 111)',\n    )\n),row=2, col=1)\nfig.add_trace(go.Box(\n    x = df2014.Other_Sales,\n    name = 'Other Sales',\n    marker = dict(\n        color = 'rgb(145, 209, 111)',\n    )\n),row=2, col=2)\nfig.add_trace(go.Box(\n    x = df2014.Global_Sales,\n    name = 'Global Sales',\n    marker = dict(\n        color = 'rgb(145, 209, 111)',\n    )\n),row=3, col=1)\nfig.update_layout(height=1000, width=2000,showlegend=False, title_text=\"Game Sales\")\nfig.show()","75fc564c":"#scatterplot matrix to express relation between sales in North America, Europe, Japan, Other Sales,and Global Sales\n#using scatterplots and boxplots\n\ndf2014 = videoGames[videoGames.Year == 2014].loc[:,[\"NA_Sales\",\"EU_Sales\",\"JP_Sales\",\"Other_Sales\",\"Global_Sales\"]]\ndf2014[\"index\"] = np.arange(1, len(df2014) + 1)\n\nfig = ff.create_scatterplotmatrix(df2014, diag='box', index='index',\n                                 colormap='Portland', colormap_type='cat',\n                                 height=1500, width=1500)\niplot(fig)","0bb83a11":"#3-d plot with Rank, Publisher, and Global Sales representing the 3 axes\n\ndf2014 = videoGames[videoGames.Year == 2014]\n\ntrace1 = go.Scatter3d(\n    x = df2014.Rank,\n    y = df2014.Publisher,\n    z = df2014.Global_Sales,\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgb(141, 175, 227)',\n    )\n)\ndata = [trace1]\nlayout = go.Layout(\n    margin = dict(\n        l = 0,\n        r = 0,\n        b = 0,\n        t = 0\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","e4c1caa4":"**Introduction**\n\nIn this kernel I have used plotly library for data visualization on Video Game Sales dataset 'vgsales.csv' and have referred to the notebook 'Plotly Tutorial For Beginners' by 'DATAI' for some plotly concepts.","73f0d939":"![image.png](attachment:9c940069-a5f8-451e-8801-7225bf4d19d4.png)","01edde95":"![image.png](attachment:a33c9437-3799-42fb-a048-4de5e3c09da8.png)","b77e8141":"**About the Dataset**\n\nThis dataset contains data regarding the sales of different video games. It consist of 11 columns, 4 of which contain string type values: Name, Genre, Platform and Publisher and other columns include Rank of video games, Year, Sales in North America, Europe, Japan, Other Sales, and Global Sales\n","489c5aaa":"Any suggestions are welcomed\nThanks","3e9b9d01":"![image.png](attachment:1640a889-688f-40a1-a265-9dbc4bd134e1.png)","b2746221":"**CONTENTS:-**\n\n    1. Importing Basic Libraries, dataset, and plotly features\n    2. Scatterplot showing Other Sales and Global Sales vs Ranking for top 100 video games\n    3. Scatterplots with four subplots showing sales in North America, Europe, Japan, and Global Sales vs Ranking \n       for video games in 2014\n    4. Scatterplots showing the name of video games vs their rank in 2013, 2014,and 2015\n    5. Scatterplots showing the global sales of top 100 video games vs their rank in 2013, 2014, 2015\n    6. Bar plots showing the sales in North America, Europe, Japan, Other Sales, and Global Salesn of\n       top 3 video games\n    7. Unique bar plots showing sales in North America, Europe, Japan, Other Sales, and Global Sales \n       for top 3 video games\n    8. Bar plots showing Other Sales, and Scatterplots showing Global Sales for top 7 video games\n    9. Pieplots showing sales in North America, Europe, Japan, and Global Sales\n       for top 8 video games in 2014\n    10. Barplots showing global sales for each genre in 2014, 2015\n    11. Displaying a Wordcloud\n    12. Boxplots showing sales in North America, Europe, Japan, Other Sales and Global Sales in 2014\n    13. Scatterplot matrix to express relation between sales in North America, Europe, Japan, Other Sales,and Global Sales\n        using scatterplots and boxplots\n    14. 3-d plot with Rank, Publisher, and Global Sales representing the 3 axes\n\n\n\n\n\n\n\n "}}