{"cell_type":{"8deedf67":"code","ef678a6f":"code","a0a218a9":"code","853dc06d":"code","a3e2adcc":"code","a4dbb317":"code","ce841c1f":"code","1fff10e6":"code","52918e63":"code","d677b06b":"code","67b3b2ef":"code","b4ba7166":"markdown","4cf154c8":"markdown","f5b42422":"markdown","82beb6b5":"markdown","b9b11888":"markdown","6d00f37b":"markdown","2d7df3e4":"markdown","282f831d":"markdown","d5576633":"markdown","01478220":"markdown","00e29484":"markdown","24c50744":"markdown","be145ade":"markdown","a7c8cf24":"markdown","90a4b8e8":"markdown","011ab0cd":"markdown","8ee2c085":"markdown"},"source":{"8deedf67":"# \u5404\u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nimport numpy as np\nimport pandas as pd\nimport openpyxl","ef678a6f":"# \u30d8\u30c3\u30c0\u304c\u3042\u308b\u5834\u5408\ndf = pd.read_excel(\"..\/input\/mlsinput\/ch5-1.xlsx\", \"inforce\")\ndf","a0a218a9":"# \u30d8\u30c3\u30c0\u304c\u7121\u3044\u5834\u5408\ndf = pd.read_excel(\"..\/input\/mlsinput\/ch5-1.xlsx\", \"inforce2\", header=None, names=[\"ID\", \"plan\", \"x\", \"n\", \"m\", \"S\"])\ndf","853dc06d":"# \u30c6\u30fc\u30d6\u30eb\u306e\u5916\u5074\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u8a18\u8ff0\u3057\u305f\u30bb\u30eb\u304c\u3042\u308b\u5834\u5408\ndf = pd.read_excel(\"..\/input\/mlsinput\/ch5-1.xlsx\", \"inforce3\", header=None)\ndf","a3e2adcc":"# https:\/\/openpyxl.readthedocs.io\/en\/stable\/tutorial.html\n\nfrom openpyxl import load_workbook\n\n# \u30ef\u30fc\u30af\u30b7\u30fc\u30c8\u306e\u53d6\u5f97\n# \u7b97\u5f0f\u3067\u306a\u304f\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u3001data_only=True\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\nwb = load_workbook(filename = \"..\/input\/mlsinput\/ch5-1.xlsx\", data_only=True)\n\n# \u30b7\u30fc\u30c8\u540d\u4e00\u89a7\u306e\u53d6\u5f97\nprint (\"\u30b7\u30fc\u30c8\", wb.sheetnames)\n\n# \u30b7\u30fc\u30c8\u306e\u53d6\u5f97\nws = wb['inforce']\n\n# \u30bb\u30eb\u306e\u5024\u306e\u53d6\u5f97\uff08\u7bc4\u56f2\u306e\u540d\u524d\uff09\nvalue = ws['A4'].value\nprint(\"value A4 -\", value)\n\n# \u30bb\u30eb\u306e\u5024\u306e\u53d6\u5f97\uff08\u884c\u6570\u30fb\u5217\u6570\u306f1\u59cb\u307e\u308a\uff09\nvalue = ws.cell(row=4, column=1).value\nprint(\"value A4 -\", value)\n\n# \u4f7f\u7528\u3057\u3066\u3044\u308b\u884c\u6570\u30fb\u5217\u6570\u306e\u53d6\u5f97\nprint(\"rows: {}, columns: {}\".format(ws.max_row, ws.max_column))\n\n# \u30b7\u30fc\u30c8\u306e\u5168\u4f53\u306e\u5024\u3092\u53d6\u5f97\ndata = list(ws.values)\ncols = data[0]\nvalues = data[1:]\nprint(cols)\nprint(values)\n\n# pandas\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3078\u306e\u5909\u63db\ndf = pd.DataFrame(values, columns=cols)\ndf","a4dbb317":"ary = np.arange(24).reshape(4, 6)\ndf = pd.DataFrame(ary)","ce841c1f":"df.to_excel(\"out5-1.xlsx\")","1fff10e6":"df.to_csv(\"out5-1.txt\", index=False, sep=\"\\t\")","52918e63":"from openpyxl.styles import Font, Border, Side, Alignment, PatternFill\nfrom openpyxl.utils import get_column_letter\nfrom openpyxl.utils.dataframe import dataframe_to_rows\n\nclass ExcelUtil(object):\n\n    @classmethod\n    def add_sheet(cls, _wb, _df, sheet_name, index_cols_count, \n                  value_fmt=\"#,##0\", value_centered=False, index_width=7, value_width=11):\n        \"\"\"\n        \u30ef\u30fc\u30af\u30d6\u30c3\u30af\u306b\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30c7\u30fc\u30bf\u304b\u3089\u4f5c\u6210\u3057\u305f\u30ef\u30fc\u30af\u30b7\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\n        \u66f8\u5f0f\u3082\u8a2d\u5b9a\u3059\u308b\n        \"\"\"\n        ws = _wb.create_sheet(sheet_name)\n        for r in dataframe_to_rows(_df, index=False, header=True):\n            ws.append(r)\n        cls.set_style_worksheet(ws, index_cols_count, value_fmt, value_centered, index_width, value_width)\n            \n        # \u4e00\u5fdcworkbook\u3068worksheet\u3092\u8fd4\u308a\u5024\u3068\u3057\u3066\u8fd4\u3057\u3066\u304a\u304f\n        return wb, ws\n\n    @classmethod\n    def set_style_worksheet(cls, ws, icols, value_fmt, value_centered, index_width, value_width):\n        \"\"\"\n        \u30ef\u30fc\u30af\u30b7\u30fc\u30c8\u306b\u66f8\u5f0f\u3092\u8a2d\u5b9a\u3059\u308b\n        \"\"\"\n        cs = len(list(ws.columns))\n        rs = len(list(ws.rows))\n\n        font = Font(name='\u30e1\u30a4\u30ea\u30aa', bold=False, size=11)\n        bd = Side(style='thin', color=\"000000\")\n        border = Border(left=bd, top=bd, right=bd, bottom=bd)\n        alignment = Alignment(horizontal='center', vertical='center')\n        fill = PatternFill(\"solid\", fgColor=\"D8E4BC\")\n        if value_centered:\n            value_alignment = Alignment(horizontal='center') \n        else:\n            value_alignment = None\n        \n        # index\u306e\u66f8\u5f0f\n        if icols > 0:\n            cls.set_style_range(ws, 1, rs, 1, icols, \n                                font=font, border=border, alignment=alignment, fill=fill, format=\"General\")\n        \n        # header\u306e\u66f8\u5f0f\n        cls.set_style_range(ws, 1, 1, 1, cs, \n                            font=font, border=border, alignment=alignment, fill=fill, format=\"General\")\n        \n        # value\u306e\u66f8\u5f0f\n        cls.set_style_range(ws, 2, rs, icols+1, cs,\n                            font=font, border=border, alignment=value_alignment, fill=None, format=value_fmt)\n        \n        # \u5217\u306e\u5e45\n        cls.set_column_width(ws, 1, icols, index_width)\n        cls.set_column_width(ws, icols+1, cs, value_width)\n    \n    @classmethod\n    def set_style_range(cls, ws, r_start, r_last, c_start, c_last, font=None, border=None, alignment=None, fill=None, format=None):\n        \"\"\"\n        \u7bc4\u56f2\u306b\u66f8\u5f0f\u3092\u8a2d\u5b9a\u3059\u308b\n        \"\"\"\n\n        cs = len(list(ws.columns))\n        rs = len(list(ws.rows))\n        for r in range(rs):\n            for c in range(cs):\n                rr = r + 1\n                cc = c + 1\n                if r_start <= rr <= r_last and c_start <= cc <= c_last:\n                    cell = ws.cell(column=c + 1, row=r + 1)\n                    if font is not None: cell.font = font\n                    if border is not None: cell.border = border\n                    if alignment is not None: cell.alignment = alignment\n                    if fill is not None: cell.fill = fill\n                    if format is not None: cell.number_format = format\n        return ws\n\n    @classmethod\n    def set_column_width(cls, ws, c_start, c_last, width):\n        \"\"\"\n        \u5217\u306e\u5e45\u3092\u6307\u5b9a\u3059\u308b\n        \"\"\"\n        for c in range(c_start, c_last+1):\n            ws.column_dimensions[get_column_letter(c)].width = width\n    ","d677b06b":"df_inforce = pd.read_csv(\"..\/input\/mlsinput\/insurance_inforce.csv\")\ndf_summary = pd.read_csv(\"..\/input\/mlsinput\/insurance_sensitivity.csv\") \nwb = openpyxl.Workbook()\nwb, ws = ExcelUtil.add_sheet(wb, df_inforce, \"inforce\", 1, \"General\", value_centered=True, index_width=10)\nwb, ws = ExcelUtil.add_sheet(wb, df_summary, \"summary\", 3, \"0.00%\", index_width=10)\nwb.remove_sheet(wb.get_sheet_by_name(wb.sheetnames[0]))\nwb.save(\"out5-2.xlsx\")","67b3b2ef":"# \uff08Excel\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u74b0\u5883\u3067\u306f\u52d5\u304d\u307e\u305b\u3093\uff09\nimport xlwings as xw\nwb = xw.Book(r'..\\input\\mlsinput\\ch5-2.xlsm')\napp = xw.apps.active    \nmacro = wb.macro('Run')\nresult = macro() # VBA\u306e\u8fd4\u308a\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\nprint(result)\nwb.save()\nwb.close()\napp.kill() ","b4ba7166":"### openpyxl\u306b\u3088\u308b\u8aad\u307f\u8fbc\u307f","4cf154c8":"\u5024\u306e\u5165\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u307e\u3067\u306e\u56db\u89d2\u5f62\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3067\u3001\u8aad\u307f\u8fbc\u307e\u308c\u308b\u30c7\u30fc\u30bf\u306f\u3061\u3083\u3093\u3068\u30c6\u30fc\u30d6\u30eb\u306e\u5f62\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002  \n\u9006\u306b\u3044\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u5f62\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u7c21\u5358\u306b\u51e6\u7406\u304c\u3067\u304d\u307e\u3059\u3002","f5b42422":"\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001python\u304b\u3089Excel\u306eVBA\u3092\u5b9f\u884c\u3057\u3001\u305d\u308c\u304c\u7d42\u4e86\u3059\u308b\u3068Excel\u3092\u9589\u3058\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u308b  \n\uff08\u4f7f\u3063\u3066\u3044\u304f\u3068\u56f0\u3063\u305f\u70b9\u304c\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u304c\uff09","82beb6b5":"\u307e\u305f\u3001xlwings\u3067\u306f\u3001Excel\u304b\u3089Python\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002  \n\u305f\u3060\u3001Excel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b -> Python\u3067\u51e6\u7406\u3059\u308b -> \u30c7\u30fc\u30bf\u3092Excel\u306b\u623b\u3059 \u3068\u3044\u3063\u305f\u51e6\u7406\u306e\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u51e6\u7406\u3067\u5bfe\u5fdc\u3059\u308b\u65b9\u3092\u304a\u52e7\u3081","b9b11888":"openpyxl\u3092\u4f7f\u3046\u3068\u3001\u6bd4\u8f03\u7684\u30b7\u30f3\u30d7\u30eb\u306b\u898b\u305f\u76ee\u3082\u7dba\u9e97\u306aExcel\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n\u3042\u304f\u307e\u3067\u4f8b\u3067\u3001\u5b9f\u969b\u306b\u306f\u9069\u5b9c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3092\u4f5c\u3063\u305f\u308a\u4fee\u6b63\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u3088\u308a\u4fbf\u5229\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ed5\u69d8\uff1a\n* \u3042\u308b\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092Excel\u306b\u51fa\u529b\u3057\u305f\u3044\n* \u30d5\u30a9\u30f3\u30c8\u3092\u30e1\u30a4\u30ea\u30aa\u3068\u3057\u305f\u3044\n* \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u5de6\u304b\u3089index_cols_count\u500b\u306e\u5217\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3042\u308a\u3001\u4e2d\u592e\u63c3\u3048\u3067\u8272\u3092\u4ed8\u3051\u305f\u3044\n* \u30d8\u30c3\u30c0\u884c\u306b\u306f\u4e2d\u592e\u63c3\u3048\u3067\u8272\u3092\u4ed8\u3051\u305f\u3044\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30fb\u30d8\u30c3\u30c0\u3067\u306a\u3044\u90e8\u5206\u306f\u5024\u3067\u3001format\u3092\u6307\u5b9a\u3057\u305f\u3044","6d00f37b":"### pandas\u306b\u3088\u308bExcel\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f","2d7df3e4":"### pandas\u306b\u3088\u308bExcel\u306e\u51fa\u529b","282f831d":"## Excel\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f","d5576633":"### openpyxl\u306b\u3088\u308b\u898b\u305f\u76ee\u3092\u7dba\u9e97\u306b\u3057\u305fExcel\u306e\u4f5c\u6210","01478220":"### Python\u304b\u3089Excel\u3092\u6271\u3046","00e29484":"pandas\u306eread_excel\u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u4e3b\u306a\u5f15\u6570:  \n* \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u30fb\u30b7\u30fc\u30c8\u540d\n* header - \u30d8\u30c3\u30c0\u884c\u306e\u6307\u5b9a\u30010\u59cb\u307e\u308a\u306e\u884c\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3002\u30d8\u30c3\u30c0\u3092\u53d6\u5f97\u3057\u306a\u3044\u5834\u5408\u306fNone  \n  \u30c7\u30d5\u30a9\u30eb\u30c8\u306f0\uff08\uff1d\u6700\u521d\u306e\u884c\u304c\u30d8\u30c3\u30c0\u884c\uff09\n* index_col - \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5217\u306e\u6307\u5b9a\u30010\u59cb\u307e\u308a\u306e\u5217\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3057\u306a\u3044\u5834\u5408\u306fNone  \n  \u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\n* names - \u5217\u540d\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u5217\u540d\u306e\u30ea\u30b9\u30c8\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002","24c50744":"openpyxl\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b7\u30fc\u30c8\u3084\u30bb\u30eb\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","be145ade":"## Excel\u30d5\u30a1\u30a4\u30eb\uff08\u306a\u3069\uff09\u306e\u66f8\u304d\u8fbc\u307f","a7c8cf24":"python\u3067Excel\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u304c\u3042\u308a\u307e\u3059\u3002\n\n* openpyxl - .xlsx\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u3053\u3068\u3067\u3001Excel\u304c\u7121\u304f\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3002\n* xlwings - Excel\u3092\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3046\u3002VBA\u3068\u9023\u643a\u3067\u304d\u308b\u306a\u3069\u306e\u5229\u70b9\u306f\u3042\u308b\u3002\n* xlrd, xlwt, xlutil - \u3061\u3087\u3063\u3068\u53e4\u304f\u306a\u308a\u3001openpyxl\u306e\u65b9\u304c\u4f7f\u308f\u308c\u3066\u304d\u3066\u3044\u308b\u3002\n\n\u304a\u52e7\u3081\u306fopenpyxl\u3067\u3059\u3002  \n\u307e\u305f\u3001pandas\u306eread_excel\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3082\u4fbf\u5229\u3067\u3059\u3002","90a4b8e8":"## \u305d\u306e\u4ed6","011ab0cd":"### xlwings\u306b\u3088\u308b\u30de\u30af\u30ed\u306e\u5b9f\u884c","8ee2c085":"pandas\u306eto_excel\u306f\u898b\u305f\u76ee\u304c\u3044\u307e\u3044\u3061\u3002  \n\u3053\u308c\u306a\u3089\u3001to_csv(sep=\"\\t\")\u3067\u30bf\u30d6\u533a\u5207\u308a\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u51fa\u529b\u3057\u305f\u65b9\u304c\u4f7f\u3044\u3084\u3059\u3044\u304b\u3002  \n\uff08\u30bf\u30d6\u533a\u5207\u308a\u3060\u3068\u3001\u30b3\u30d4\u30fc\u30da\u30fc\u30b9\u30c8\u3067Excel\u306b\u5f35\u308a\u4ed8\u3051\u3089\u308c\u308b\u3001\u5024\u306b\u30ab\u30f3\u30de\u304c\u3042\u308b\u3068\u304d\u306b\u304a\u304b\u3057\u306a\u3053\u3068\u306b\u306a\u3089\u306a\u3044\u3001\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\uff09"}}