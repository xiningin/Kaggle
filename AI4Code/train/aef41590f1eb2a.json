{"cell_type":{"3d300f98":"code","3cd5b706":"code","d860e2df":"code","df49bcee":"code","46a513b4":"markdown","df45509e":"markdown","621da9fc":"markdown"},"source":{"3d300f98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3cd5b706":"import numpy as np\nimport matplotlib.image as img\nimport matplotlib.pyplot as plt\n\n#RGB to gray conversion \ndef rgb2gray(rgb):\n    return np.dot(rgb[...,:3], [0.2989, 0.5870, 0.1140])\n\n#East China March week 4 \nEast_china_March_week4 = img.imread('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/tif\/East_China-S20200322-E20200331.tif')\ngray=rgb2gray(East_china_March_week4)\n\n#East China April week 1 \nEast_china_April_week1 = img.imread('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/tif\/East_China-S20200401-E20200410.tif')\ngray1=rgb2gray(East_china_April_week1)\n\n\n#East China May week 1 \nEast_china_May_week1 = img.imread('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/tif\/East_China-S20200501-E20200510.tif')\ngray2=rgb2gray(East_china_May_week1)\n\n\n\n# Read East china March Week_4\nfig = plt.figure()\nax1 = fig.add_subplot(2,3,1)\nax1.imshow(East_china_March_week4)\nax2 = fig.add_subplot(2,3,2)\nax2.imshow(gray)\nax3 = fig.add_subplot(2,3,3)\nax3.imshow(gray, cmap=plt.get_cmap('gray'), vmin=0, vmax=1)\n\n\n# Read East china March Week_4\nfig = plt.figure()\nax1 = fig.add_subplot(2,3,1)\nax1.imshow(East_china_April_week1)\nax2 = fig.add_subplot(2,3,2)\nax2.imshow(gray1)\nax3 = fig.add_subplot(2,3,3)\nax3.imshow(gray1, cmap=plt.get_cmap('gray'), vmin=0, vmax=1)\n\n\n# Read East china March Week_4\nfig = plt.figure()\nax1 = fig.add_subplot(2,3,1)\nax1.imshow(East_china_May_week1)\nax2 = fig.add_subplot(2,3,2)\nax2.imshow(gray2)\nax3 = fig.add_subplot(2,3,3)\nax3.imshow(gray2, cmap=plt.get_cmap('gray'), vmin=0, vmax=1)\n\n","d860e2df":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nfrom skimage import color\nfrom skimage import io\n\n\n# Read Numpy Files\neast_china_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/East_China.npy')\nfrance_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/France.npy')\nitaly_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/Italy.npy')\nusa_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/USA.npy')\nwest_china_npy=np.load('..\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/npy\/West_China.npy')\n\n# Each country have different image size, hence store image size as a variable\neast_china_image_size=east_china_npy.shape\nfrance_image_size=france_npy.shape\nitaly_image_size=italy_npy.shape\nusa_image_size=usa_npy.shape\nwest_china_image_size=west_china_npy.shape\n\n# 1. Raw image to gray conversion\n# 2. Load output images into plot figure (5 X 3)\n\nfig = plt.figure(figsize=(50, 50))  # width, height in inches   \nfor i in range(15):\n    sub = fig.add_subplot(5,3, i + 1)\n    #sub.imshow(east_china_npy[i,:,:], interpolation='nearest')\n    #sub.imshow(gray[i,:,:], interpolation='nearest')\n    #gray=rgb2gray(east_china_npy[i])\n    gray = color.rgb2gray(usa_npy[i])\n    sub.imshow(gray,interpolation='nearest')\n    ","df49bcee":"\nfig = plt.figure(figsize=(50, 50))  # width, height in inches   \nfor i in range(15):\n    sub = fig.add_subplot(5,3, i + 1)\n    gray = color.rgb2gray(usa_npy[i])\n    sub.imshow(gray, cmap=plt.get_cmap('gray'), vmin=0, vmax=1,interpolation='nearest')","46a513b4":"**Above images has been processed from Numpy folder. **\n\nStep1. Read it as raw images \nStep2. Covert into gray scale format\nStep3. Load into designated plot figure. \nStep4. Restrict pixel values between 0 to 1\n\n**USA map in gray scale format**, but pixel values between 0 to 1 (from same numpy folder)","df45509e":"**Above images has been processed from Numpy folder. **\n\nStep1. Read it as raw images \nStep2. Covert into gray scale format\nStep3. Load into designated plot figure. \n\nUSA map in gray scale format, pixel values between 0 to 255","621da9fc":"**Above images has been processed from tif folder. **\n\n1. Column1- Raw imag \n2. Column2- 3 dimensional gray image\n3. Column3- Binary Gray image (Pixel values between 0 to 1)"}}