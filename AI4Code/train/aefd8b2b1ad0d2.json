{"cell_type":{"c267d10b":"code","275ca0c1":"code","37d7c949":"code","f8f9c25b":"code","49bb4278":"code","3ec207e7":"code","c894c695":"code","f8836450":"code","f02b33fc":"code","7293b348":"code","2b3dcd45":"code","80dc721b":"code","e83bbc88":"code","dc93a746":"code","809ff8d6":"code","c5bf460a":"code","37265c6b":"markdown","5cf3785f":"markdown","2b2fdd6d":"markdown"},"source":{"c267d10b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","275ca0c1":"pd.set_option('max_columns', None)\npd.set_option('max_rows', None)\n\n%matplotlib inline\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","37d7c949":"# Load data\ntrain = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv\", index_col='id'\n#                     , nrows=5000\n                   )\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/test.csv\", index_col='id'\n#                     , nrows=2500\n                   )\nprint(train.shape)\nprint(test.shape)","f8f9c25b":"# General info\ntrain.info()","49bb4278":"train.head()","3ec207e7":"train.describe()","c894c695":"train.target.hist()","f8836450":"features = list(train.select_dtypes('float').columns)","f02b33fc":"train.iloc[:, :20].hist(bins=100, figsize = (15,20))","7293b348":"train.iloc[:, 20:40].hist(bins=100, figsize = (15,20))","2b3dcd45":"train.iloc[:, 40:80].hist(bins=100, figsize = (20,20))","80dc721b":"train.iloc[:, 80:100].hist(bins=100, figsize = (15,20))","e83bbc88":"#train.f58.hist(bins=200) #, alpha=0.5)","dc93a746":"#train.f58.describe()","809ff8d6":"#train[['f58']].boxplot(vert=0, figsize=(15, 10), notch=True, meanline=True, showmeans=True, patch_artist=True)","c5bf460a":"corr = train[['target'] + features].corr()\ncorr.style.background_gradient(cmap='coolwarm').format(precision = 3)","37265c6b":"There are some features with bimodal distribution without left\/right tails. \\\nMost other features have one mode distribution near the Zero value. \\\nThere are some interesting exclusions: f21, f36 and maybe f39.\n","5cf3785f":"Features data are distributed in a different ranges. So, we need scaling.","2b2fdd6d":"Target data is not skewed"}}