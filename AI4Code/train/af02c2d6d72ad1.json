{"cell_type":{"eeb4e2fc":"code","ee960e25":"code","619ddcd2":"code","bdc6c936":"code","26c63fb0":"code","59bba029":"code","f27f6b61":"code","01497a7a":"code","435072c0":"code","208e265b":"code","8568664a":"code","56722121":"code","740624eb":"code","5a7dd115":"code","9c9948d8":"code","2653e315":"code","feb7b268":"code","b7a8038d":"code","e1d6a31a":"code","204e0ca4":"code","214c923b":"code","6325bd45":"code","3884b4e9":"code","f9cd1a7a":"code","6ab72160":"code","d7473f5d":"code","20d8aa82":"code","0f42eaea":"code","73259b49":"code","bd26c8ca":"code","59127bb2":"code","e60be034":"code","c15db940":"code","1c991d4e":"code","4fee1638":"code","080c773b":"code","9d86542b":"code","68a4935d":"code","c2a4a3a3":"markdown","c051ed32":"markdown","aba426b0":"markdown","142259f8":"markdown","47c800c1":"markdown","752128bb":"markdown","e88fefb5":"markdown","a12c8253":"markdown","2c095597":"markdown","fa2324d3":"markdown","8cd8d254":"markdown","6dca5e89":"markdown","d0eda8d0":"markdown","7da842e3":"markdown","acc674b2":"markdown","09c93c5a":"markdown","be6670b4":"markdown","45ce43e1":"markdown","3e33f591":"markdown","03632e9a":"markdown","82f69406":"markdown","d42be7d5":"markdown","ee01540d":"markdown","07f84965":"markdown","db66b64d":"markdown","a6001653":"markdown","c5591556":"markdown","656d87e2":"markdown"},"source":{"eeb4e2fc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\ndf = pd.read_csv(\"..\/input\/hotel-booking-demand\/hotel_bookings.csv\")\npd.set_option('display.max_rows',20000, 'display.max_columns',100)\ndf.head()","ee960e25":"(df.isnull().sum()\/len(df))*100","619ddcd2":"df = df.drop(['company'],axis=1)","bdc6c936":"df.isnull().sum()","26c63fb0":"sns.heatmap(df.isnull())\nplt.title('NA Values in Heatmap')","59bba029":"df['country'] = df['country'].fillna (value='No Info')\ndf['agent'] = df['agent'].fillna (value=0.0)\ndf['children'] = df['children'].fillna (value=0.0)","f27f6b61":"sns.countplot(x='hotel',hue='is_canceled',data=df)\nplt.title('Checking Booking of Hotels if canceled or not')","01497a7a":"df['children'].value_counts()","435072c0":"df['children'] = df['children'].astype(int)","208e265b":"#Adding a New Column\ndf['Guests'] = df['adults'] + df['children'] + df['babies']","8568664a":"#Generally Family Member will be above 3\nsns.countplot(x='Guests',hue='is_canceled',data=df)\nplt.title('Family Member Should Be Above 3')","56722121":"df['meal'].nunique()","740624eb":"#Calculating the value Percentage in a column.\n(df['is_canceled'].value_counts()\/len(df['is_canceled']))*100","5a7dd115":"#Pie Chart for is_canceled\nplt.rcParams['figure.figsize'] = (10,8)\nlabels = 'Not Cancelled', 'Cancelled'\nsizes = [63,38]\nexplode = (0, 0.1)  \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%0.0f%%',\n        shadow=True, startangle=90,center=(0, 0))\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title('Reservation In Hotel Cancelled or Not')\nplt.show()","9c9948d8":"print(df['arrival_date_month'].nunique(),df['arrival_date_month'].unique())","2653e315":"#Monthly Arrival of People\nplt.figure(figsize=(10,8))\nsns.countplot(x='hotel',hue='arrival_date_month',data=df,)","feb7b268":"#Yearly Arrival of People\nplt.figure(figsize=(10,8))\nsns.countplot(x='hotel',hue='arrival_date_year',data=df)","b7a8038d":"print(df['country'].nunique(),df['country'].unique())","e1d6a31a":"df.head()","204e0ca4":"carona_data = df.groupby(['hotel'])['meal'].sum().reset_index().sort_values('meal',ascending = True)","214c923b":"df['Holiday Destination'] = df['country']\n((df['country'].value_counts()\/len(df['country']))*100)","6325bd45":"#Taking all the values in dictionary to divide the countries in Destination mostly preferred \nx=((df['country'].value_counts()\/len(df['country']))*100).to_dict()\nx","3884b4e9":"#In this Function I am converting Countries on the basis of most visited and favour destination.\nfor i in x:\n    z = x.get(i,0)\n    key= str(i)\n    if z >= 10:\n        df.loc[df['Holiday Destination'] == i, 'Holiday Destination'] = 'Excellent Destination'\n    elif z >=1 and z<10:\n        df.loc[df['Holiday Destination'] == i, 'Holiday Destination'] ='Famous Destination'\n    elif z >=0.01 and z<1:\n        df.loc[df['Holiday Destination'] == i, 'Holiday Destination'] ='Best Destination'\n    elif z>=0.001 and z<0.01:\n        df.loc[df['Holiday Destination'] == i, 'Holiday Destination'] ='Good Destination'\n    else:\n        df.loc[df['Holiday Destination'] == i, 'Holiday Destination']='Considerable Destination'","f9cd1a7a":"df.head()","6ab72160":"#Holiday Destination and preferred Hotels.\nplt.figure(figsize=(10,8))\nsns.countplot(x='hotel',hue='Holiday Destination',data=df)","d7473f5d":"#Market Segment and their preferred Holiday Destination\nplt.figure(figsize=(10,8))\nsns.countplot(x='market_segment',hue='Holiday Destination',data=df)","20d8aa82":"#Checking for repeated guest preferring Holiday Destination.\nplt.figure(figsize=(10,8))\nsns.countplot(x='is_repeated_guest',hue='Holiday Destination',data=df)","0f42eaea":"#Reserved Room Type during Holiday Destination\nplt.figure(figsize=(10,8))\nsns.countplot(x='reserved_room_type',hue='Holiday Destination',data=df)","73259b49":"#Guests preferring Holiday Destination\nplt.figure(figsize=(10,8))\nsns.countplot(x='Guests',hue='Holiday Destination',data=df)","bd26c8ca":"df_Zero = df[df['is_canceled']==0]\ndf_One = df[df['is_canceled']==1]","59127bb2":"#Checking For Imbalanced Dataset\nprint(len(df),len(df_Zero),((len(df_Zero)\/len(df))*100),len(df_One),((len(df_One)\/len(df))*100),len(df_Zero)+len(df_One))","e60be034":"from sklearn.preprocessing import LabelEncoder\nlabelEncoder_X = LabelEncoder()\ndf['hotel'] = labelEncoder_X.fit_transform(df['hotel'])\ndf['meal'] = labelEncoder_X.fit_transform(df['meal'])\ndf['country'] = labelEncoder_X.fit_transform(df['country'])\ndf['arrival_date_month'] = labelEncoder_X.fit_transform(df['arrival_date_month'])\ndf['market_segment'] = labelEncoder_X.fit_transform(df['market_segment'])\ndf['distribution_channel'] = labelEncoder_X.fit_transform(df['distribution_channel'])\ndf['reserved_room_type'] = labelEncoder_X.fit_transform(df['reserved_room_type'])\ndf['assigned_room_type'] = labelEncoder_X.fit_transform(df['assigned_room_type'])\ndf['deposit_type'] = labelEncoder_X.fit_transform(df['deposit_type'])\ndf['customer_type'] = labelEncoder_X.fit_transform(df['customer_type'])\ndf['reservation_status'] = labelEncoder_X.fit_transform(df['reservation_status'])\ndf['reservation_status_date'] = labelEncoder_X.fit_transform(df['reservation_status_date'])\ndf['Holiday Destination'] = labelEncoder_X.fit_transform(df['Holiday Destination'])","c15db940":"y=df['is_canceled']\nX=df.drop(['is_canceled','reservation_status','adults','children','babies','previous_cancellations','previous_bookings_not_canceled'],axis=1)","1c991d4e":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)","4fee1638":"#Scaling X_test and X_train\nfrom sklearn.preprocessing import StandardScaler\nScaler_X = StandardScaler()\nX_train = Scaler_X.fit_transform(X_train)\nX_test = Scaler_X.transform(X_test)","080c773b":"#Using Logistic Regression \nfrom sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score\nfrom sklearn.metrics import f1_score\nfrom sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(X_train,y_train)\ny_pred = lr.predict(X_test)\n\nprint(confusion_matrix(y_test,y_pred))\nprint(\"Accuracy =\",accuracy_score(y_test,y_pred))\nprint(\"Precision =\",precision_score(y_test,y_pred))\nprint(\"Recall =\",recall_score(y_test,y_pred))\nprint(\"F1 Score =\",f1_score(y_test,y_pred))","9d86542b":"#Using Decison Tree \nfrom sklearn.tree import DecisionTreeClassifier\ndtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)\npredictions = dtree.predict(X_test)\n\nprint(confusion_matrix(y_test,predictions))\nprint(\"Accuracy =\",accuracy_score(y_test,predictions))\nprint(\"Precision =\",precision_score(y_test,predictions))\nprint(\"Recall =\",recall_score(y_test,predictions))\nprint(\"F1 Score =\",f1_score(y_test,predictions))","68a4935d":"#Using Random Forest \nfrom sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=200)\nrfc.fit(X_train,y_train)\nrfc__pred = rfc.predict(X_test)\n\nprint(confusion_matrix(y_test,rfc__pred))\nprint(\"Accuracy =\",accuracy_score(y_test,rfc__pred))\nprint(\"Precision =\",precision_score(y_test,rfc__pred))\nprint(\"Recall =\",recall_score(y_test,rfc__pred))\nprint(\"F1 Score =\",f1_score(y_test,rfc__pred))","c2a4a3a3":"Checking Percentage of NA Values","c051ed32":"Taking all the values in dictionary to divide the countries in Destination mostly preferred ","aba426b0":"So You worked Hard whole year and kept your leaves to enjoy 15 days of your vacation in any destination. And found out it was your mistake as the hotels are pre booked or you have lot of crowd at the place you want to visit. Let us find out about it!!!","142259f8":"Changing dataype of children float column to int","47c800c1":"![keem-ibarra-I2Dz5Hljm9g-unsplash.jpg](attachment:keem-ibarra-I2Dz5Hljm9g-unsplash.jpg)","752128bb":"## Logistic Regression ","e88fefb5":"## Trainig","a12c8253":"Guests preferring Holiday Destination","2c095597":"## **Decision Forest**","fa2324d3":"## LabelEncoder","8cd8d254":"Checking Value in Children Column","6dca5e89":"In this Function I am converting Countries on the basis of most visited and favour destination.","d0eda8d0":"Checking for repeated guest preferring Holiday Destination","7da842e3":"Reserved Room Type during Holiday Destination","acc674b2":"Checking Booking of Hotels if canceled or not","09c93c5a":"Market Segment and their preferred Holiday Destination","be6670b4":"As we can see 94.30% of Company column is null. So we are dropping it","45ce43e1":"## **__Data Treatment__**\n1. Checking NA Values\n2. Dropping Tables with less Information\n3. Filling NA Values","3e33f591":"__IF ANY SUGGESTION.Kindly Let Me Know__","03632e9a":"Holiday Destination and preferred Hotels","82f69406":"## **Libraries and Data**","d42be7d5":"## **Random Forest**","ee01540d":"Filling NA values","07f84965":"Scaling X_test and X_train","db66b64d":"Monthly Arrival of People","a6001653":"Yearly Arrival of People","c5591556":"Adding a New Column","656d87e2":"Checking Unique Countries Name"}}