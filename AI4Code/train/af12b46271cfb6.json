{"cell_type":{"b11c4387":"code","7524bbe4":"code","5d36921c":"code","241cfd75":"code","17818abc":"code","f25683f3":"code","33d86271":"code","8ec4375b":"code","c2d1a631":"code","79154359":"code","990b4b39":"code","d414f24a":"code","94a61f5e":"code","c7b31637":"code","ff07da30":"code","6ccae9ce":"code","40889e65":"code","aedf81ae":"code","d331b3fa":"code","405587db":"code","10780157":"code","7e25ef8d":"code","29736a9e":"code","3cf4544c":"code","4e0da024":"code","c608aa45":"code","523f2c0a":"code","582a61c2":"code","8e56a11e":"code","58279956":"markdown","04515779":"markdown","947319e3":"markdown","85dd1e8d":"markdown","7153c156":"markdown","939da79e":"markdown","6dd47ff0":"markdown","263fc39a":"markdown","abea5723":"markdown","c1e01960":"markdown","b4ab06ae":"markdown","362455e8":"markdown","e2b62c85":"markdown","5aa2e593":"markdown","4f40140d":"markdown","67eb925a":"markdown","b878990c":"markdown","9c31f94d":"markdown","dd7830a1":"markdown"},"source":{"b11c4387":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7524bbe4":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","5d36921c":"# \u307e\u305a\u6700\u521d\u306b\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u884c\u6570\u3001\u5217\u6570\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\n","241cfd75":"# 1-1) \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5148\u982d5\u4ef6\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","17818abc":"# 1-2) \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5148\u982d5\u4ef6\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046 \n","f25683f3":"# 2-1) info\u30e1\u30bd\u30c3\u30c9\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","33d86271":"# 2-2) \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u6b20\u640d\u5024\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\n","8ec4375b":"# 2-3) \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6b20\u640d\u5024\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\n","c2d1a631":"# 2-4) \u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570 Survived \u306e\u5024\u6bce\u306e\u4ef6\u6570\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","79154359":"# 2-5) \u5909\u6570 Pclass \u306b\u306f\u3069\u3093\u306a\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","990b4b39":"# 2-6) \u5909\u6570 Age \u306e\u5206\u5e03\u3092\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","d414f24a":"# 2-7) \u5909\u6570 Age \u306e\u6700\u5927\u5024\u3001\u5e73\u5747\u5024\u3001\u4e2d\u592e\u5024\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","94a61f5e":"# 2-8) \u5909\u6570 Sex \u306e\u5206\u5e03\u3092value_counts\uff0b\u68d2\u30b0\u30e9\u30d5\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","c7b31637":"# 2-9) pd.crosstab\u3092\u4f7f\u3063\u3066\u3001\u3010Survived\u6bce\u3011\u306e \u5909\u6570 Sex \u306e\u4ef6\u6570\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n","ff07da30":"# 3-1) \u3010Survived\u6bce\u3011\u306e \u5909\u6570 Sex \u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n# \u76f8\u95a2\u95a2\u4fc2\u306f\u3042\u308a\u305d\u3046\u3067\u3059\u304b\uff1f\u3042\u308b\u3068\u3057\u305f\u3089\u3069\u306e\u3088\u3046\u306a\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u304b\uff1f\n","6ccae9ce":"# 3-2) \u3010Survived\u6bce\u3011\u306e \u5909\u6570 Pclass \u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n# \u76f8\u95a2\u95a2\u4fc2\u306f\u3042\u308a\u305d\u3046\u3067\u3059\u304b\uff1f\u3042\u308b\u3068\u3057\u305f\u3089\u3069\u306e\u3088\u3046\u306a\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u304b\uff1f\n","40889e65":"# \u6b20\u640d\u5024\u3092\u57cb\u3081\u308b\ntrain['Age'].fillna(0, inplace=True)\ntest['Age'].fillna(0, inplace=True)","aedf81ae":"from sklearn.preprocessing import LabelEncoder\n\n'''\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304c\u540c\u3058\u5024\u306e\u5206\u5e03\u3067\u3042\u308c\u3070\u3001\u76f4\u63a5One-Hot\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002  \n\u7570\u306a\u308b\u5024\u306e\u5206\u5e03\u3067\u3042\u308c\u3070\u3001\u5171\u901a\u306eLabelEncoder\u3092\u4f7f\u7528\u3057\u3066\u6570\u5024\u5316\u3057\u307e\u3057\u3087\u3046\u3002  \n\u4ed6\u306eNotebook\u3067\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3057\u305f\u3082\u306e\u306bOne-Hot\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n'''\n\n_='''\nfor f in ['XXX']:\n    le = LabelEncoder()\n    le.fit(pd.concat([train[f], test[f]]))\n    train[f] = le.transform(train[f])\n    test[f] = le.transform(test[f])\n'''","d331b3fa":"# \u6587\u5b57\u5217\u9805\u76ee --> One-Hot\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\ntrain = pd.get_dummies(train, columns=['Sex','Embarked'])\ntest = pd.get_dummies(test, columns=['Sex','Embarked'])","405587db":"# \u4e0d\u8981\u306a\u5217\u306e\u524a\u9664\ndrop_columns = ['PassengerId','Name','Ticket','Cabin','Parch','SibSp','Fare','Age']\n\ntrain.drop(drop_columns, axis=1, inplace=True)\ntest.drop(drop_columns, axis=1, inplace=True)","10780157":"# \u7de8\u96c6\u5f8c\u306e\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\ntrain.head()","7e25ef8d":"# \u6b20\u640d\u5024\u304c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\nprint(train.isna().any())\nprint()\nprint(test.isna().any())","29736a9e":"X_train = train.drop(['Survived'], axis=1)\nY_train = train['Survived']\nX_test = test","3cf4544c":"from sklearn.dummy import DummyClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nimport graphviz","4e0da024":"_='''\n'''\n# \u30e2\u30c7\u30eb\u69cb\u7bc9\uff08\u30e9\u30f3\u30c0\u30e0\u5206\u985e\u300150%\/50%\uff09\nclf = DummyClassifier(strategy='uniform', random_state=42)\n\n# \u5b66\u7fd2\nclf.fit(X_train, Y_train)\n\n# \u4e88\u6e2c\nresult = clf.predict(X_test)\n\n# \u7d50\u679c\u8868\u793a\nprint(pd.Series(result).value_counts())","c608aa45":"_='''\n# \u30e2\u30c7\u30eb\u69cb\u7bc9\uff08\u6c7a\u5b9a\u6728\uff09\nclf = DecisionTreeClassifier(max_leaf_nodes=6)\n\n# \u5b66\u7fd2\nclf.fit(X_train, Y_train)\n\n# \u4e88\u6e2c\nresult = clf.predict(X_test)\n\n# \u7d50\u679c\u8868\u793a\nprint(pd.Series(result).value_counts())\n\n# \u7d50\u679c\u8868\u793a - \u6c7a\u5b9a\u6728\u306e\u69cb\u9020\u8868\u793a\ntree_graph = tree.export_graphviz(clf, out_file=None, max_depth=10,\n    impurity=False, feature_names=X_train.columns, class_names=['0', '1'],\n    rounded=True, filled=True )\ngraphviz.Source(tree_graph)\n'''","523f2c0a":"_='''\n# \u30e2\u30c7\u30eb\u69cb\u7bc9\uff08\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\uff09\nclf = RandomForestClassifier(n_estimators=10, random_state=42)\n\nclf.fit(X_train, Y_train)\n\nresult = clf.predict(X_test)\n\npd.Series(result).value_counts()\n'''","582a61c2":"_='''\n'''\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# X_train\u3068Y_train\u3092train\u3068valid\u306b\u5206\u5272\ntrain_x, valid_x, train_y, valid_y = train_test_split(X_train, Y_train, test_size=0.2, random_state=0)\n\n''' \u524d\u306e\u51e6\u7406\u3067\u5ba3\u8a00\u3057\u305fclf\u306e\u30e2\u30c7\u30eb\u3092\u4f7f\u3044\u307e\u3059 '''\nclf.fit(train_x, train_y)\n\n# valid_x\u306b\u3064\u3044\u3066\u63a8\u8ad6\noof = clf.predict(valid_x)\n\n# \u6b63\u89e3\u7387\u3092\u8868\u793a\nprint('score', round(accuracy_score(valid_y, oof), 3)) ","8e56a11e":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e PassengerId \u3092\u6368\u3066\u3066\u3044\u305f\u306e\u3067\u8aad\u307f\u8fbc\u307f\u76f4\u3059\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n\n# \u6307\u5b9a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b5\u30d6\u30df\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\nsubmission = pd.DataFrame({\n    \"PassengerId\": test[\"PassengerId\"],\n    \"Survived\": result\n})\nsubmission.to_csv(\"submission.csv\", index=False)","58279956":"- One-Hot\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0","04515779":"### DecisionTreeClassifier\uff08\u6c7a\u5b9a\u6728\uff09","947319e3":"## \u30e2\u30c7\u30eb\u4f5c\u6210\u3001\u5b66\u7fd2\u3001\u4e88\u6e2c","85dd1e8d":"- \u6b20\u640d\u5024\u306e\u88dc\u5b8c","7153c156":"> ### Sorry it's in Japanese.\n> \u5f53Notebook\u306f\u793e\u5185\u52c9\u5f37\u4f1a\u306e\u8cc7\u6599\u3068\u3057\u3066\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002","939da79e":"## \u30c7\u30fc\u30bf\u8aad\u8fbc","6dd47ff0":"- \u4e0d\u8981\u5217\u306e\u524a\u9664","263fc39a":"- \u6570\u5024\u5909\u63db","abea5723":"\u30c7\u30fc\u30bf\u5206\u6790\u306e\u6f14\u7fd2\u3067\u3059\u3002  \n\u4ee5\u4e0b\u306e\u30bb\u30eb\u306b\u3064\u3044\u3066\u3001\u30b3\u30e1\u30f3\u30c8\u306e\u6307\u793a\u306b\u5f93\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002","c1e01960":"- \u7279\u5fb4\u91cf\u3092\u4f5c\u6210","b4ab06ae":"### DummyClassifier\uff08\u30e9\u30f3\u30c0\u30e0\u5206\u985e\uff09","362455e8":"- \u76f8\u95a2\u95a2\u4fc2\u304c\u3042\u308b\u306e\u304b\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046","e2b62c85":"## \u4e88\u6e2c\u7d50\u679c\u63d0\u51fa","5aa2e593":"## \u30c7\u30fc\u30bf\u5206\u6790","4f40140d":"## \u524d\u51e6\u7406","67eb925a":"### \u4e88\u6e2c\u7cbe\u5ea6\u5411\u4e0a\u306e\u8ab2\u984c\n\n1. Age \u306e\u6b20\u640d\u5024\u3092\u4e2d\u592e\u5024\u3067\u57cb\u3081\u3066\u307f\u307e\u3057\u3087\u3046\n1. Fare \u3092\u4e88\u6e2c\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n1. Embarked \u3092\u4e88\u6e2c\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n1. SibSp+Parch+1 \u3092 FamilySize \u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n1. SibSp+Parch<=1 \u3092 IsAlone \u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n1. Cabin \u306e\uff11\u6587\u5b57\u76ee\u3092\u7279\u5fb4\u91cf\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n### \u7d42\u308f\u3063\u305f\u3089\n\n1. \u516c\u958b\u3055\u308c\u3066\u3044\u308bNotebook\u3092\u53c2\u8003\u306b\u7cbe\u5ea6\u3092\u5411\u4e0a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n1. \u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u691c\u8a3c\u3092\u4ea4\u5dee\u691c\u8a3c\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\n1. LightGBM\u3092\u4f7f\u3046\u3088\u3046\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046","b878990c":"### RandomForestClassifier\uff08\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\uff09","9c31f94d":"### \u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u691c\u8a3c","dd7830a1":"- \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u9055\u3044\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\n- \u6a5f\u68b0\u5b66\u7fd2\u3067\u751f\u5b58\u8005\u3092\u4e88\u6e2c\u3059\u308b\u3068\u306f\u3001\u5177\u4f53\u7684\u306b\u3069\u306e\u3088\u3046\u306a\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f"}}