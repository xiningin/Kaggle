{"cell_type":{"824dbd33":"code","9a9a4b37":"code","b339d0eb":"code","a09d53bc":"code","47b93bf3":"code","3dd87a4c":"code","8394dd05":"code","86709a86":"code","c69135b4":"code","a004bbb6":"code","950cd51f":"code","88d52ded":"code","4f5ca612":"code","cbfcd439":"code","402bebcb":"code","69bed29d":"markdown","fe9b14b1":"markdown","0c7f0a33":"markdown","5c4873d3":"markdown","f9ccd71f":"markdown","e5a50aa6":"markdown","036d7feb":"markdown","fbc60d4a":"markdown","90af2a09":"markdown","4dc0efe8":"markdown","d7b60ce6":"markdown","2289956e":"markdown","6047ae70":"markdown","6aeae272":"markdown","958614b1":"markdown"},"source":{"824dbd33":"import pandas as pd\nimport numpy as np\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.style as style\nstyle.use('fivethirtyeight')","9a9a4b37":"# Read hourlySteps_merged.csv\nsteps_hourly = pd.read_csv(r'..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv',\n                           parse_dates=['ActivityHour'])\nsteps_daily = pd.read_csv(r'..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv',\n                          parse_dates=['ActivityDate'])","b339d0eb":"# Groupby steps_hourly to get percent of users with steps reported for each hour.\nsteps_hourly_id_per = steps_hourly.groupby('ActivityHour').agg({'Id':'count'})\nsteps_hourly_id_per = steps_hourly_id_per.reset_index()\nsteps_hourly_id_per.loc[:,'IdPer'] = steps_hourly_id_per.loc[:,'Id']\/steps_hourly_id_per.Id.max()","a09d53bc":"# Create viz\nfig, ax = plt.subplots(figsize=(10,7))\ng = sns.lineplot(x=\"ActivityHour\", y='IdPer', \n                    data=steps_hourly_id_per,ax = ax)\nax.set_ylim(-0.01, None)\n# Make labels\nax.set_xticks([dt.datetime(2016, 4, 12),\n               dt.datetime(2016, 4, 19),\n               dt.datetime(2016, 4, 26),\n               dt.datetime(2016, 5, 3),\n               dt.datetime(2016, 5, 10)])\nax.set_xticklabels(['Apr. 12','Apr. 19','Apr. 26','May 3','May 10'])\nax.yaxis.set_major_formatter('{x:.0%}')\nax.set(xlabel='', ylabel='% of Fitbits reporting data',\n       title='% of Survey Respondents Reporting Data vs. Time')\n# Highlighting overlay\nax.axvspan(dt.datetime(2016, 5, 10), dt.datetime(2016, 5, 13), alpha=0.5, color='red')\n# Annotation\nplt.annotate(text=\"Participants stopped reporting data\\nin the last few days of the survey.\\n\\nOutlier data $\\mathbf{{removed}}$ from analysis.\", \n             xy=(dt.datetime(2016, 5, 10), 0.65), xycoords='data',alpha=1,\n             xytext=(dt.datetime(2016, 4, 15),0.32), textcoords='data',\n             arrowprops=dict(arrowstyle=\"->\",\n                             color='red',\n                             lw=2,\n                             alpha = .65,\n                             connectionstyle=\"angle3,angleA=90,angleB=0\"),\n            )\nplt.show()","47b93bf3":"# Clean and trim steps_hourly. Add date and hour columns.\nfor row in range(len(steps_hourly)):\n    steps_hourly.loc[row,'date'] = steps_hourly.loc[row,'ActivityHour'].date()\n    steps_hourly.loc[row,'hour'] = int(steps_hourly.loc[row,'ActivityHour'].hour)\nsteps_hourly['date'] = pd.to_datetime(steps_hourly['date'])\nsteps_hourly = steps_hourly[steps_hourly['date']<=dt.datetime(2016, 5, 9)]\nsteps_hourly = steps_hourly.reset_index(drop=True)\n# Rename to 'date' column for merging.\nsteps_daily = steps_daily.rename(columns={\"ActivityDate\": \"date\"})\n# Trim steps_daily. \nsteps_daily = steps_daily[steps_daily['date']<=dt.datetime(2016, 5, 9)]\nsteps_daily = steps_daily.reset_index(drop=True)\n","3dd87a4c":"# Creating a df, id_date_all, of all possible date and Id combinations.\ncolumn=['Id','date']\nid_date_all=pd.DataFrame(columns=column)\nid_all = list(steps_daily.Id.unique())\ndate_all = list(steps_daily.date.unique())\nfor id_i in id_all:\n    for date_i in date_all:\n        new_row = {'Id':id_i,\n                   'date':date_i}\n        id_date_all = id_date_all.append(new_row, ignore_index=True)\n# merge id_date_all and steps_daily to find dates that a user did not report their steps. \n# Label these as days that fitbits were not worn. Or 'fitbit_worn' = 0.\nsteps_daily = pd.merge(id_date_all, steps_daily,  how='left', left_on=['Id','date'], right_on = ['Id','date'])\nfor day in steps_daily.index:\n    if np.isnan(steps_daily.loc[day, 'TotalSteps']):\n        steps_daily.loc[day, 'fitbit_worn'] = 0\n# Fill out the remainder of the 'fitbit_worn' column based on if users stepped more than 100 each day.\nfor day in steps_daily.index:\n    if np.isnan(steps_daily.loc[day, 'fitbit_worn']):\n        if steps_daily.loc[day, 'TotalSteps'] < 100:\n            steps_daily.loc[day, 'fitbit_worn'] = 0\n        else:\n            steps_daily.loc[day, 'fitbit_worn'] = 1","8394dd05":"# Sort users based on # number of days fitbit_worn. \n# Then split into groups. \ngroups = steps_daily.set_index(['Id','date']).groupby('Id').agg({'fitbit_worn':'sum'}).sort_values(['fitbit_worn'])\navid_group = groups[16:].index # group where no dates were missed\nforgetful_group = groups[0:16].index # group where at least one date was missed\nall_groups = [avid_group, forgetful_group]\n# Adding group label to each user.\nfor row in range(len(steps_daily)):\n    for i, group in enumerate(all_groups):\n        for Id in group:\n            if steps_daily.loc[row,'Id'] == Id:\n                steps_daily.loc[row,'group_id'] = int(i)","86709a86":"# Limit analysis to when fitbits are in use.\nsteps_daily_graph_box = steps_daily[steps_daily['fitbit_worn']==1]\n# Iterate through variables to plot.\nboxplot_list = ['TotalSteps', \n                'VeryActiveMinutes', 'FairlyActiveMinutes',\n                'LightlyActiveMinutes', 'SedentaryMinutes']\nfor graph_x in boxplot_list:\n    # Add spaces to Variable names to put into the title\n    graph_x_title = ''.join([' '+ s if s.isupper()  else s for s in graph_x]).lstrip()\n    # Create viz.\n    g = sns.catplot(x=graph_x, y='group_id',kind= 'box',\n                    data=steps_daily_graph_box,orient='h',\n                    showfliers=False)\n    # Make labels\n    g.set(xlabel='%s'%graph_x_title, ylabel='',\n       title='%s by User Group'%graph_x_title)\n    g.set(yticklabels=['Avid\\nUsers','Forgetful\\nUsers'])\n    plt.show()","c69135b4":"#Adding weekday column.\nfor day in range(len(steps_daily)):\n    steps_daily.loc[day,'weekday']=steps_daily.loc[day,'date'].weekday()\n# Bar colors\nweekdays_sort = [6.,0.,1.,2.,3.,4.,5.]\nclrs = ['#6a6a6a' if (steps_daily[(steps_daily['group_id']==1)&\n                                  (steps_daily['weekday']==x)].fitbit_worn.mean() > \n                      .7) else '#30a2da' for x in weekdays_sort ]\n# Creating viz\ng = sns.catplot(y=\"weekday\", x='fitbit_worn', kind='bar', ci=None, \n                data=steps_daily[steps_daily['group_id']==1],\n                palette=clrs,height=7, aspect=2,orient='h',\n                order=[6.,0.,1.,2.,3.,4.,5.])\n# Labels\ng.set(xticklabels=[])\ng.set(yticklabels=[])\ng.set(xlabel='', ylabel='',title='% of Forgetful Users Wearing their Fitbit by Weekday')\n# Bar annotations.\nbar_order=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\nbars = zip(g.ax.patches,bar_order)\nfor bar in bars:\n    g.ax.text(x=bar[0].get_width()-.005, y=bar[0].get_y()+bar[0].get_height()\/2.0, \n              s=\"{:.0%}\".format(bar[0].get_width()),\n              color = '#f0f0f0', weight = 'bold',ha='right',va='center')\n    g.ax.text(x=.005, y=bar[0].get_y()+bar[0].get_height()\/2.0, s=bar[1],\n          color = '#f0f0f0', weight = 'bold',ha='left',va='center')","a004bbb6":"for row in range(len(steps_daily)):\n    try:\n        if steps_daily.loc[row,'Id'] == steps_daily.loc[row+1,'Id']:\n            if ((steps_daily.loc[row,'fitbit_worn'] == 1) & \n                (steps_daily.loc[row+1,'fitbit_worn'] == 0)):\n                steps_daily.loc[row,'fitbit_last_day_worn'] = 1\n            else:\n                steps_daily.loc[row,'fitbit_last_day_worn'] = 0\n        else:\n            steps_daily.loc[row,'fitbit_last_day_worn'] = 0   \n    except KeyError:\n        steps_daily.loc[row,'fitbit_last_day_worn'] = 0   \n               \n    try:\n        if steps_daily.loc[row,'Id'] == steps_daily.loc[row-1,'Id']:\n            if ((steps_daily.loc[row,'fitbit_worn'] == 1) & \n                (steps_daily.loc[row-1,'fitbit_worn'] == 0)):\n                steps_daily.loc[row,'fitbit_first_day_worn'] = 1\n            else:\n                steps_daily.loc[row,'fitbit_first_day_worn'] = 0   \n        else:\n            steps_daily.loc[row,'fitbit_first_day_worn'] = 0   \n    except KeyError:\n        steps_daily.loc[row,'fitbit_first_day_worn'] = 0   \n\nsteps_hourly = pd.merge(steps_hourly, steps_daily,  how='left', left_on=['Id','date'], right_on = ['Id','date'])\n\n## make last hour worn\n\n#addint the last hour the fitbit was worn\nsteps_hourly_last = steps_hourly[steps_hourly['fitbit_last_day_worn']==1]\nsteps_hourly_last = steps_hourly_last.reindex(index=steps_hourly_last.index[::-1])\nsteps_hourly_last = steps_hourly_last.reset_index(drop=True)\n\n#to quick refference\nid_date_unique = steps_hourly_last.drop_duplicates(subset=['Id','date'])\nid_date_unique = id_date_unique[['Id','date']]\nid_date_unique = id_date_unique.groupby(by=['Id','date'], as_index=False).first()\n\nsteps_hourly['fitbit_last_hour_worn'] = 0\nsteps_hourly = steps_hourly.set_index(['Id', 'ActivityHour'])\n\nfor i in id_date_unique.index:\n    current_id = id_date_unique.loc[i,'Id']\n    current_day = id_date_unique.loc[i,'date']\n    temp_df = steps_hourly_last[(steps_hourly_last['Id']==current_id)&\n                                (steps_hourly_last['date']==current_day)]\n    temp_df = temp_df[['Id', 'ActivityHour', 'StepTotal']]\n    temp_df = temp_df.reset_index(drop=True)\n    res = [next(((j, i) for i, j in enumerate(temp_df[col]) if j != 0), (0, 0)) for col in temp_df]\n    df_res = pd.DataFrame(res, columns=['value', 'position'], index=temp_df.columns)\n    last_id = temp_df.loc[df_res.loc['StepTotal','position'],:'Id']\n    last_hour = temp_df.loc[df_res.loc['StepTotal','position'],:'ActivityHour']\n    steps_hourly.loc[(last_id,last_hour),'fitbit_last_hour_worn'] = 1\n    \nsteps_hourly = steps_hourly.reset_index()\n\n## make first hour worn\n\n#addint the first hour the fitbit was worn\nsteps_hourly_first = steps_hourly[steps_hourly['fitbit_first_day_worn']==1]\nsteps_hourly_first = steps_hourly_first.reset_index(drop=True)\n\n#to quick refference\nid_date_unique = steps_hourly_first.drop_duplicates(subset=['Id','date'])\nid_date_unique = id_date_unique[['Id','date']]\nid_date_unique = id_date_unique.groupby(by=['Id','date'], as_index=False).first()\n\nsteps_hourly['fitbit_first_hour_worn'] = 0\nsteps_hourly = steps_hourly.set_index(['Id', 'ActivityHour'])\nfor i in id_date_unique.index:\n    current_id = id_date_unique.loc[i,'Id']\n    current_day = id_date_unique.loc[i,'date']\n    temp_df = steps_hourly_first[(steps_hourly_first['Id']==current_id)&\n                                (steps_hourly_first['date']==current_day)]\n    temp_df = temp_df[['Id', 'ActivityHour', 'StepTotal']]\n    temp_df = temp_df.reset_index(drop=True)\n    res = [next(((j, i) for i, j in enumerate(temp_df[col]) if j != 0), (0, 0)) for col in temp_df]\n    df_res = pd.DataFrame(res, columns=['value', 'position'], index=temp_df.columns)\n    # print(df_res)\n    first_id = temp_df.loc[df_res.loc['StepTotal','position'],:'Id']\n    first_hour = temp_df.loc[df_res.loc['StepTotal','position'],:'ActivityHour']\n    steps_hourly.loc[(first_id,first_hour),'fitbit_first_hour_worn'] = 1\n    \n    \nsteps_hourly = steps_hourly.reset_index()\n","950cd51f":"# Bar colors\nweekdays_sort = [6.,0.,1.,2.,3.,4.,5.]\nclrs = ['#6a6a6a' if (steps_daily[(steps_daily['group_id']==1)&\n                                  (steps_daily['weekday']==x)].fitbit_last_day_worn.mean() < \n                      .09) else '#30a2da' for x in weekdays_sort ]\n# Creating viz\ng = sns.catplot(y=\"weekday\", x='fitbit_last_day_worn', kind='bar', ci=None, \n                data=steps_daily[steps_daily['group_id']==1],\n                palette=clrs,height=7, aspect=2,orient='h',\n                order=[6.,0.,1.,2.,3.,4.,5.])\n\n# Labels\ng.set(xticklabels=[])\ng.set(yticklabels=[])\ng.set(xlabel='', ylabel='',title='% of Forgetful Users Who Took Off their Fitbit by Weekday')\n# Bar annotations.\nbar_order=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\nbars = zip(g.ax.patches,bar_order)\nfor bar in bars:\n    g.ax.text(x=bar[0].get_width()-.001, y=bar[0].get_y()+bar[0].get_height()\/2.0, \n              s=\"{:.0%}\".format(bar[0].get_width()),\n              color = '#f0f0f0', weight = 'bold',ha='right',va='center')\n    g.ax.text(x=.001, y=bar[0].get_y()+bar[0].get_height()\/2.0, s=bar[1],\n          color = '#f0f0f0', weight = 'bold',ha='left',va='center')\nplt.show()","88d52ded":"steps_hourly_last_graph = steps_hourly[(steps_hourly['fitbit_last_hour_worn']==1)]\nsteps_hourly_last_graph = steps_hourly_last_graph.append(pd.Series(-100, index=steps_hourly_last_graph.columns), ignore_index=True)\nsteps_hourly_last_graph['dummy'] = 1\ng= sns.catplot(hue=\"fitbit_last_hour_worn\",y='dummy', x=\"hour\",\n            kind= 'violin',data=steps_hourly_last_graph,orient=\"h\",\n            split=True,bw =.2,inner=None,scale=\"area\",legend=False,\n            height=5, aspect=2.3,hue_order= [1, 0],cut=True)\nplt.tick_params(axis=\"x\", bottom=False, top=True, \n                labelbottom=False, labeltop=True)\ng.set(xticks=[0,3,6,9,12,15,18,21,24])\ng.set(xticklabels=['Midnight','','6 a.m.','','Noon','',\n                   '6 p.m.','','Midnight'])\ng.set(yticklabels=[])\ng.set(xlabel='', ylabel='',title='Distribution of When Forgetful Users Took Off their Fitbit by Hour')\nplt.xlim([-.5,24.5])\nplt.ylim([0.025,-.45])\nplt.show()","4f5ca612":"weekdays_sort = [6.,0.,1.,2.,3.,4.,5.]\nclrs = ['#6a6a6a' if (steps_daily[(steps_daily['group_id']==1)&\n                                  (steps_daily['weekday']==x)].fitbit_first_day_worn.mean() < \n                      .07) else '#30a2da' for x in weekdays_sort ]\n# Creating viz\ng = sns.catplot(y=\"weekday\", x='fitbit_first_day_worn', kind='bar', ci=None, \n                data=steps_daily[steps_daily['group_id']==1],\n                palette=clrs,height=7, aspect=2,orient='h',\n                order=[6.,0.,1.,2.,3.,4.,5.])\n\n# Labels\ng.set(xticklabels=[])\ng.set(yticklabels=[])\ng.set(xlabel='', ylabel='',title='% of Forgetful Users Who Put On their Fitbit by Weekday')\n# Bar annotations.\nbar_order=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\nbars = zip(g.ax.patches,bar_order)\nfor bar in bars:\n    g.ax.text(x=bar[0].get_width()-.001, y=bar[0].get_y()+bar[0].get_height()\/2.0, \n              s=\"{:.0%}\".format(bar[0].get_width()),\n              color = '#f0f0f0', weight = 'bold',ha='right',va='center')\n    g.ax.text(x=.001, y=bar[0].get_y()+bar[0].get_height()\/2.0, s=bar[1],\n          color = '#f0f0f0', weight = 'bold',ha='left',va='center')\nplt.show()","cbfcd439":"steps_daily[(steps_daily['fitbit_first_day_worn']==1)&(steps_daily['fitbit_last_day_worn']==1)&(steps_daily['weekday']==4)]","402bebcb":"steps_hourly_first_graph = steps_hourly[(steps_hourly['fitbit_first_hour_worn']==1)]\nsteps_hourly_first_graph = steps_hourly_first_graph.append(pd.Series(-100, index=steps_hourly_first_graph.columns), ignore_index=True)\nsteps_hourly_first_graph['dummy'] = 1\ng= sns.catplot(hue=\"fitbit_first_hour_worn\",y='dummy', x=\"hour\",\n            kind= 'violin',data=steps_hourly_first_graph,orient=\"h\",\n            split=True,bw =.2,inner=None,scale=\"area\",legend=False,\n            height=5, aspect=2.3,hue_order= [1, 0])\nplt.tick_params(axis=\"x\", bottom=False, top=True, \n                labelbottom=False, labeltop=True)\ng.set(xticks=[0,3,6,9,12,15,18,21,24])\ng.set(xticklabels=['Midnight','','6 a.m.','','Noon','',\n                   '6 p.m.','','Midnight'])\ng.set(yticklabels=[])\ng.set(xlabel='', ylabel='',title='Distribution of When Forgetful Users Put On their Fitbit by Hour')\nplt.xlim([-.5,24.5])\nplt.ylim([0.025,-.45])\nplt.show()","69bed29d":"# Forget Me Not: an Analysis of Forgetful Fitbit Fans\n<div style=\"font-family:ArnhemPro; font-size:17px; line-height:26px; color:#222;\">\n\n<img src=\"https:\/\/i.imgur.com\/275RXlb.png\" align=\"center\" style=\"width:600px;\"\/>\n\n    \nThis is a case study for Bellabeat, a manufacturer of fitness trackers designed for women. Our goal of is to form recommendations for Bellabeat marketing strategies informed by how people are using fitness trackers.\n    \nMy analysis will be affected by my own experience with fitness trackers. I've always been the unhealthy type. I prefer pizza to leafy greens, I prefer watching the Tour de France to ever going on an actual bike ride. As I creeped toward being 30, I had a real job, with cash to burn, and a slowing metabolism. So I bought a Fitbit with a modest goal of going on some walks and being mildly active.\n   \nThe Fitbit data was interesting and motivating! But I couldn't keep the Fitbit on!! If I went on a date or to a party and I wanted to look cool, I'd take it off. If it started irritating my wrist, I'd take it off. If the battery was low, I'd take it off. Once I took the fitbit off I'd forget to put it back on for days or weeks. Until it finally ended up in my junk drawer. \n \n    \n<img src=\"https:\/\/i.imgur.com\/VHDLxo2.png\" align=\"center\" style=\"width:300px;\"\/>\n    \n<\/div>","fe9b14b1":"## Data Cleaning\n\nI now need to find the times that people aren't wearing their Fitbits. The most obvious way is to look at missing hours for each user during the run of the survey. There is a **huge** drop off in the percent of users wearing their Fitbit a few days before the end of the survey. This is explained by respondents knowing that the survey was wrapping up soon and that changed their behavior.\n\nI'm going to trim the dates for my analysis to April 12th to May 9th. It happens before the cliff in the graph, and gives us an even four weeks of data. *This is a clear place where future analysis would benefit from a dataset with a larger date range.*   \n \n    \n","0c7f0a33":"    \nThe vast majority of people put on their Fitbit before noon. The first spike right as people wake up around 7 a.m. Then a second spike around 11 a.m. I'm not sure if that is a group of late risers or people going on runs during their lunch break or what. Then there is a much smaller peak after work at around 6\/7 p.m. this makes sense for people who forgot to put it on before work or people that didn't want to wear their Fitbit at work. But again these night owls are living the best lives. I cannot imagine what is happening that someone is putting on their Fitbit at 2 a.m. but whatever the reasoning it is hilarious to me. \n    ","5c4873d3":"## When are forgetful users not wearing their Fitbits?\n    \nI want to see if there is a pattern of when users aren't wearing their Fitbit. Are there days people are avoiding wearing their Fitbits? What are the reasons people aren't wearing their Fitbits on those days?\n    ","f9ccd71f":"## Package and Data Loading\n\n    \nThis analysis will be looking at users, like myself, that can't keep their fitness trackers on all the time. We'll look at when they take their Fitbits off, how they use their Fitbits, and make recommendations to Bellabeat to market for this segment of users.\n    \n","e5a50aa6":"## Avid vs. Forgetful Fitbit Users\n\n    \nI want to analyze more forgetful users, like myself, that don't wear their Fitbits everyday. That requires me to identify when people don't wear their Fitbits. The obvious case is when there is no data reported at all for a user on a given day. The other time I will define users not wearing their Fitbit, is if there are less than 100 steps reported in a day.\n   \nWhen I wore my fitbit I noticed that almost anything registered as a step. If you clap your hands, swat at a fly, or shake someone's hand, then that will likely count as a step. That made me confident that if someone reported <100 steps in a day then they did not actually wear their Fitbit. \n \n","036d7feb":"    \nThis weekend's socializing explanation is making the most sense. Otherwise, people are taking off their Fitbits pretty evenly throughout the week.\n\nI now want to see what is the hour that people are actually taking off their Fitbits. Are people taking off their Fitbits right after work? \n    ","fbc60d4a":"    \nThis is mostly what we would have expected. Weekdays are when people are putting the Fitbits back on. People are having too much fun to put their Fitbit back on on Saturday. The two surprises are Tuesday being so low at 5% and Friday being the highest at 11% considering that we saw previously that 13% of people took off on Friday. There were three Fridays that someone put on their Fitbit at the start of the day but then took it off again by the end of the day. But that doesn't explain why it was the most common day to both put on AND take off your Fitbit. It could be that some people have some exercising plans for the weekend that they want to put on their Fitbit for or that people don't want to wear their Fitbit at work\/school so they put it on after it is over on Friday.\n   \nAnd finally I'll look at what time people are putting on their Fitbit. Are most people putting their Fitbit on when they wake up? Are people putting it on after school\/work?\n\n    ","90af2a09":"    \nNow that I have a sense of when people are wearing their Fitbits or not, I want to look at the days that people took off their Fitbit. Are people taking their Fitbits off before the weekend? Are people taking off their Fitbits throughout the weekend or just at the start of it?\n    \n","4dc0efe8":"## Conclusion\n<div style=\"font-family:ArnhemPro; font-size:17px; line-height:26px; color:#222;\">\n<img src=\"https:\/\/i.imgur.com\/275RXlb.png\" align=\"center\" style=\"width:600px;\"\/>\n    \n\nThese more aspirational but forgetful users of fitness trackers should not be ignored as prospective demographics to target for advertising. Bellabeat is uniquely positioned to market their more stylish fitness trackers as a brand that people won't feel the need to take off before a date because they are embarrassed. Bellabeat can use the fact that there are more ways to wear their tracker. I personally hate to wear anything on my wrists, if I knew there were other fitness trackers that weren't exclusively wrist bands then I might have worn them and my Fitbit wouldn't be left in the junk drawer.\n\n    \n<\/div>","d7b60ce6":"    \nThe biggest spike is at 5 p.m. after people are getting off work. The rest of the evening is still a very popular time. People could take them off before late plans on the weekend or take them off before they go to sleep. Two other notable spikes are the 9 a.m. folks who are presumably taking them off before work\/school, and my favorite spike the 1 a.m. night owls, I hope that these folks are coming home from a club and they are taking off their jewelry\/wristbands and in a blurry eyed confusion take off their Fitbit.\n    \n    \n    \nNow that we have seen that people are mostly taking off their Fitbit before the weekend, I want to see when people are putting these Fitbits back on. Are people putting their Fitbits back on immediately during the work week? \n\n    ","2289956e":"\n    \nThese forgetful users are much more active than I am! I had expected the forgetful users to be much more lethargic than the avid users. But I was wrong! The behavior between the two groups are fairly similar. The most prominent difference is that avid users are averaging more steps and less very active minutes. This makes sense if we are thinking of forgetful users as more aspirational users of Fitbit. They bought their fitness tracker to encourage themselves to break their habits of a more sedentary lifestyle.\n    \n","6047ae70":"\n    \nHaving split the users into **forgetful users**, people who forgot to wear their Fitbit for at least one day of the study, and **avid users**, people who wore their Fitbit for everyday of the study. I want to do a quick analysis of the users to see if there is a difference in forgetful vs avid users activity.\n    \n","6aeae272":"**Reading data**: hourlySteps_merged.csv, dailyActivity_merged\n    \nI care less about what features the Fitbit tracks (steps, heart rate, sleep, calories, or intensity) and care more about if the Fitbit is being worn. The only feature that all users had data on was steps count ([Suong Fiori](http:\/\/www.kaggle.com\/mimosabella) has a great visualization showing this in their [Data Exploration](https:\/\/www.kaggle.com\/mimosabella\/fitness-tracker-a-usage-trends-analysis-with-r\/notebook#heading4)) so I performed all my analysis using the daily and hourly steps data. \n","958614b1":"\n    \nPeople are wearing their Fitbits throughout the work week. Then taking off their Fitbits for the weekend. This might be because they are embarrassed to wear a Fitbit on their date or weekend socializing. Monday being so low is surprising to me. It might just be that people are forgetting to put it back on as their work week starts? Or are people taking them off specifically for some Monday reason?\n    \n"}}