{"cell_type":{"a86a2684":"code","213c586d":"code","b67a6482":"code","0b82ad7e":"code","8c2045ef":"code","f1d123ab":"code","65ba401b":"code","bb28cbdb":"code","50083a86":"code","711e2d52":"code","84d1615b":"code","ea9348ab":"code","6790a5c6":"code","04ef396b":"markdown","ac934e9a":"markdown","b8845867":"markdown","c7bb6908":"markdown","f00840f5":"markdown","e8ef0ad1":"markdown","23f5613e":"markdown"},"source":{"a86a2684":"import os\nimport zipfile\nimport numpy as np\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm_notebook\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\n\nfrom tensorflow.keras.layers import Dense,Layer,Lambda,Add,Multiply,Input,Conv2D,MaxPool2D,Flatten,Conv2DTranspose,Reshape,Dropout,GlobalAveragePooling2D\nfrom tensorflow.keras.models import Sequential,Model\nimport pandas as pd\nfrom tensorflow.keras.wrappers.scikit_learn import KerasClassifier\nfrom tensorflow.keras.applications.resnet50 import ResNet50,preprocess_input\n\n%matplotlib inline","213c586d":"dataset_path_new = \"..\/input\/dance-form-8-class-dataset\/danceDS\/dataset\/\"\ntrain_dir = os.path.join(dataset_path_new, \"train\/\")\ntest_dir = os.path.join(dataset_path_new, \"test\/\")","b67a6482":"train_label = pd.read_csv('..\/input\/dance-form-8-class-dataset\/danceDS\/dataset\/train.csv')\ntest_label = pd.read_csv('..\/input\/dance-form-8-class-dataset\/danceDS\/dataset\/test.csv')","0b82ad7e":"train_label.info()","8c2045ef":"test_label.info()","f1d123ab":"train_dict = {str(x):y for x,y in zip(train_label['Image'],train_label['target'])}","65ba401b":"names = os.listdir(train_dir)\nX_train = np.zeros((1,224,224,3))\ny_train = []\nfor i,x in enumerate(names):\n    #print(i)\n    im = load_img(train_dir + x,target_size=(224,224))\n    arr = np.asarray(im)\n    arr = arr.reshape(1,224,224,3)\n    X_train = np.concatenate((X_train,arr),axis=0)\n    y_train.append(train_dict[x])\n    \nX_train = preprocess_input(X_train[1:])","bb28cbdb":"X_test = np.zeros((1,224,224,3))\nfor i,x in enumerate(test_label['Image']):\n    #print(i)\n    im = load_img(test_dir + x,target_size=(224,224))\n    arr = np.asarray(im)\n    arr = arr.reshape(1,224,224,3)\n    X_test = np.concatenate((X_test,arr),axis=0)\nX_test = preprocess_input(X_test[1:])","50083a86":"from sklearn.preprocessing import LabelEncoder\nLE = LabelEncoder()\ny_tr = LE.fit_transform(y_train)","711e2d52":"def create_model():\n    IMG_SHAPE = (224, 224, 3)\n    fine_tune_at = 160\n    base_model = ResNet50(include_top=False,weights='imagenet',input_shape=IMG_SHAPE)\n    base_model.trainable = True\n    for layer in base_model.layers[:fine_tune_at]:\n        layer.trainable = False\n    glob_layer = tf.keras.layers.GlobalAveragePooling2D()(base_model.output)\n    d1 = tf.keras.layers.Dense(units=256,activation='relu')(glob_layer)\n    t1 = tf.keras.layers.Dropout(0.3)(d1)\n    d2 = tf.keras.layers.Dense(units=128,activation='relu')(t1)\n    t2 = tf.keras.layers.Dropout(0.3)(d2)\n    prediction_layer = tf.keras.layers.Dense(units=8, activation='softmax')(t2)\n    model = tf.keras.models.Model(inputs=base_model.input, outputs=prediction_layer)\n    model.compile(optimizer=tf.keras.optimizers.Adam(lr=0.0001), loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"])\n    return model","84d1615b":"model = KerasClassifier(build_fn=create_model,epochs=20,batch_size=64,validation_split=0.2)\nfrom sklearn.model_selection import cross_val_score\nkfold = cross_val_score(model,X_train,y_tr,cv=5,verbose=1)","ea9348ab":"fig = plt.figure(figsize=(10,10))\nx = np.arange(1,6)\nplt.bar(x,kfold)\nplt.ylabel('validation accuracy')\nplt.xlabel('5 fold CV')\nplt.show()","6790a5c6":"print(f'scores list is  = {kfold}')\nprint(f'mean of the scores is = {kfold.mean()}')\nprint(f'std dev of score is = {kfold.std()}')","04ef396b":"# Loading Data and Essential Libraries.","ac934e9a":"# Transfer Learning ResNet50 Model deployment","b8845867":"# Label encoding the dance form names\n```\ne.g\nManipuri - 0,\nBharatanatyam - 1,\nOdissi - 2,\nKathakali - 3,\nKathak - 4,\nSattriya - 5,\nKuchipudi - 6,\nMohiniyattam - 7\n```","c7bb6908":"# Traning Model","f00840f5":"# Preparing Validation Tensor","e8ef0ad1":"# Final Accuracies","23f5613e":"# Preparing Traning Tensor"}}