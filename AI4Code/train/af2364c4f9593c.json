{"cell_type":{"ed946f15":"code","a96ab84e":"code","168b2467":"code","6c77a5c8":"code","d3dfac82":"code","0deeb272":"code","c2f3a052":"code","e9830f46":"code","3e9588cb":"code","102fa5e4":"code","9077701c":"code","81fb65b9":"code","240a519f":"code","7dcb1635":"code","80f5164f":"code","b10f5c0b":"code","725e2a94":"code","9d21d849":"code","de3d6028":"code","aee5008a":"code","ec55b617":"code","3d5e2849":"code","3679b43c":"code","9cd424bd":"code","49e1479c":"code","dce01f51":"code","66c9dce2":"code","b6769f4e":"code","3c00226c":"code","6b1c091c":"code","7126972b":"code","be4e22aa":"code","7fd29029":"code","3de3dd5e":"code","6058e59e":"code","edf42afb":"code","895c4522":"code","a0a92d86":"code","436a02d0":"code","a9f6e199":"code","5e510d45":"code","d58a4a4b":"code","fac2b4fc":"code","6228f6c2":"code","1f02b6a0":"code","5599cb13":"code","7c4c54ad":"code","9b7bc36c":"code","e53fd600":"code","c00f69fc":"code","f93c5acb":"code","628529b9":"code","176fcb75":"code","bf929870":"code","e14b217e":"markdown","68019a11":"markdown","1f6bddfa":"markdown","c270151f":"markdown","b40342a9":"markdown","35060744":"markdown","ea7981fa":"markdown","ff0f4a5a":"markdown","b97158d4":"markdown","38490782":"markdown","79c242db":"markdown","5a1f8cda":"markdown","fb88e81b":"markdown","bbdd48ae":"markdown","7f076edd":"markdown","ecf0d272":"markdown","f138146f":"markdown","3acb0e73":"markdown","1419b338":"markdown","a6f81632":"markdown","e97b024b":"markdown","8a21b1b6":"markdown","22a7dae9":"markdown","684f0c2e":"markdown","fae1f68d":"markdown","8964fe88":"markdown","a260dca3":"markdown","2df4f44a":"markdown","3687f453":"markdown","a4d1da36":"markdown","c544edbc":"markdown","20a9380c":"markdown","3446bacf":"markdown","5b472481":"markdown","b18dd6e5":"markdown","f71b78bd":"markdown"},"source":{"ed946f15":"print('Hello Python!')","a96ab84e":"Print('Hello Python!')","168b2467":"p = 'hello python'\nprint(p)","6c77a5c8":"a = 1 + 1\nprint(a)","d3dfac82":"b = '1' + '1'\nprint(b)","0deeb272":"c = b*2  # equal \"11\" * 2\nprint(c)\n","c2f3a052":"print('abc'*2)","e9830f46":"d = 'hello'\ne = 'python'\nprint((d+e+'\\n')*2)","3e9588cb":"with open('..\/input\/WeatherAnimalsSports.csv', 'rb') as file:\n    f = file.read().decode('utf8','ignore')\nprint(f)","102fa5e4":"print(\"The type of f is: \",type(f))\nprint(\"The length of f is: \", len(f) )","9077701c":"print(type(1))\nprint(type(1.1))\nprint(type('abc'))\nprint(type([1,2,3]))\nprint(type({\"name\":\"Jack\"}))\nprint(type(print))","81fb65b9":"import pandas as pd\ndata=pd.read_csv('..\/input\/WeatherAnimalsSports.csv')\ndata.head()","240a519f":"data['Target_Subject']","7dcb1635":"data[0:5]","80f5164f":"data.loc[0,'TextField']","b10f5c0b":"data.iloc[0,1]","725e2a94":"j = 0\nfor i in range(3):\n    print(j)\n    j += 1","9d21d849":"for i in data['TextField'][:3]:\n    print(i)","de3d6028":"subtext = [i for i in data['TextField'][:3]]\nprint(subtext)","aee5008a":"text1 = data.loc[0,'TextField']\nprint(text1)","ec55b617":"token1 = text1.split(' ')  # split text by spaces\nprint(token1)","3d5e2849":"tokens = [tx.split(' ') for tx in data.loc[:, 'TextField']]  # use for-loop to tokenize every text in the file\nprint(tokens[:5])  # print the first 5 tokens","3679b43c":"from nltk.corpus import stopwords  # use stop words from nltk library\nstopword = stopwords.words(['english'])  # define stopword","9cd424bd":"cleaned_tokens = []  # create a new list to store result\nfor token in tokens:  # look through all the element in tokens\n    cleaned_token = [word.lower() for word in token]  # lowercase\n    cleaned_token = [word for word in cleaned_token if word not in stopword]  # delete stopword in each token\n    cleaned_token = [word for word in cleaned_token if word.isalpha()]  # delte non alphabet word\n    cleaned_tokens.append(cleaned_token)  # put each result into new list\nprint(cleaned_tokens[:5]) # check first 5 result","49e1479c":"wordlists = []  # creat a empty list for storing the result\nfor t in cleaned_tokens:  # look through all the element in tokens\n    wordlists += t  # add every token into list\nprint(wordlists)","dce01f51":"print(len(wordlists))  # check how many words in total, we have duplicates in the list which need to be deleted","66c9dce2":"wordlist = list(set(wordlists))  # remove duplicate words from wordlist\nprint(len(wordlist))  # check words number after removing duplicate","b6769f4e":"wordcounts = []  # creat a empty list for storing the whole result\nfor token in cleaned_tokens:  # look through all the element in tokens\n    wordcount = []  # creat a empty list for storing each result temparorily, notice every loop, this list will be emptified\n    for word in wordlist: # look through all the element in wordlist\n        count = token.count(word)\n        wordcount.append(count)\n    wordcounts.append(wordcount)\nprint(len(wordcounts))\nprint(len(wordcounts[0]))\nprint(len(cleaned_tokens))\nprint(count)\nprint(wordlist)\nprint(wordcount)\nprint(cleaned_tokens[-1])\n","3c00226c":"wordmatrix = pd.DataFrame(data=wordcounts, columns=wordlist)  # creat a dataframe to help you look the result\nwordmatrix.head()  # show first 5 documents","6b1c091c":"wordmatrix['row_total'] = wordmatrix.aggregate('sum',axis=1) # add a sum column (total number of words in each document)\nwordmatrix.head()","7126972b":"N = len(wordmatrix)\nn = wordmatrix.astype('bool').sum()  \nprint(n)","be4e22aa":"import math\n\nfor row in range(len(wordmatrix)):  # go through every row\n    for col in wordmatrix.columns[:-1]:  # go through every column exclude 'row_total'\n        wordmatrix.loc[row,col] = wordmatrix.loc[row,col]\/wordmatrix.loc[row,'row_total']*math.log10(N\/n[col])\n        \nwordmatrix.head()","7fd29029":"from sklearn.decomposition import TruncatedSVD\n\nsvd = TruncatedSVD(n_components=15, n_iter=30, random_state=0)\nX = svd.fit_transform(wordmatrix.drop('row_total',axis=1))\nprint(X)","3de3dd5e":"from sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=3)\ngmm.fit(X)\nresult = gmm.predict(X)\nprint(result)","6058e59e":"from sklearn.cluster import SpectralClustering\nclustering = SpectralClustering(n_clusters=3, random_state=0)\nclustering.fit(X)\nresult0 = clustering.labels_\nprint(result0)","edf42afb":"data['cluster'] = result\ndata['cluster0'] = result0\ndata","895c4522":"docmatrix = wordmatrix.drop('row_total',axis=1).transpose()\ndocmatrix.head(20)","a0a92d86":"svdT = TruncatedSVD(n_components=5, n_iter=30, random_state=0)\nXT = svd.fit_transform(docmatrix)\nprint(XT)","436a02d0":"print(X.shape)\nprint(XT.shape)","a9f6e199":"topic = GaussianMixture(n_components=6)\ntopic.fit(XT)\ntopic_label = topic.predict(XT)\nprint(topic_label)","5e510d45":"topic_table = pd.DataFrame([topic_label], columns=docmatrix.index)\ntopic_table.index = ['topic']\ntopic_table = topic_table.sort_values(by='topic',axis=1)\ntopic_table","d58a4a4b":"from sklearn.manifold import TSNE\ntsne = TSNE(n_components=2, n_iter=300)\ncoordinates = tsne.fit_transform(docmatrix)\nprint(coordinates)","fac2b4fc":"wordmap = pd.DataFrame(coordinates, columns=['x','y'])\nwordmap.head()","6228f6c2":"from sklearn.cluster import KMeans\nword_label = KMeans(n_clusters=3).fit(wordmap).labels_","1f02b6a0":"wordmap['word'] = docmatrix.index\nwordmap['cluster'] = word_label\nwordmap.head()","5599cb13":"import seaborn as sns \nfrom matplotlib import pyplot as plt\nplt.figure(figsize=(20, 20))\nsns.scatterplot('x','y',hue='cluster',palette=\"Set1\",s=150, data=wordmap)\nfor n in range(len(wordmap)):\n        plt.annotate(wordmap['word'][n],\n                     xy=(wordmap['x'][n],wordmap['y'][n]),\n                     xytext=(2,5), textcoords='offset points', fontsize=16)","7c4c54ad":"import pandas as pd\n\ntrain_data = pd.read_csv('..\/input\/WeatherAnimalsSports.csv')\nscore_data = pd.read_csv('..\/input\/Score_WeatherAnimalSports.csv')\ntrain_data.head()","9b7bc36c":"score_data.head()","e53fd600":"train_blob = list(zip(train_data['TextField'],train_data['Target_Subject']))  # transform format\ntrain_blob[:5]  # check format","c00f69fc":"from textblob.classifiers import NaiveBayesClassifier\ncl = NaiveBayesClassifier(train_blob)","f93c5acb":"score0 = cl.classify(score_data['TextField'][0])\nprint(score_data['TextField'][0])\nprint(score0)","628529b9":"scores = [cl.classify(sentence) for sentence in score_data['TextField']]\nscore_data['prediction'] = scores\nscore_data","176fcb75":"text0 = score_data['TextField'][1]\nprint(text0)","bf929870":"from textblob import TextBlob\nblob0 = TextBlob(text0)\nblob0.sentiment.polarity","e14b217e":"## Pandas\n<p style=\"color:red\">The most important data management library in python!<p>\n    see: Pandas official [tutorial](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/getting_started\/tutorials.html)","68019a11":"## Sentiment Analysis","1f6bddfa":"![](https:\/\/www.python.org\/static\/img\/python-logo@2x.png)   ![](https:\/\/brocku.ca\/goodman\/wp-content\/uploads\/primary-site\/sites\/6\/centre-for-business-analytics-logo.png?x59852) \n\n# How to get this file\n1. Go to [https:\/\/www.kaggle.com](https:\/\/www.kaggle.com) , Search my name \"Zack Dai\".\n2. Find \"Brock University Tutorial: Textmining with Python\"\n3. Or you can go to [https:\/\/www.kaggle.com\/diezerg\/brock-university-tutorial-textmining-with-python\/](https:\/\/www.kaggle.com\/diezerg\/brock-university-tutorial-textmining-with-python\/) directly\n4. On the top-right, find download code. You will get the file \"Brock-University-Tutorial: Textmining-with-Python.ipynb\"\n5. Start JupyterNotebook from Anaconda. Open the file you downloaded.","c270151f":"# SVD decomposition\n![](https:\/\/intoli.com\/blog\/pca-and-svd\/img\/svd-matrices.png)\n\nSee details [here](https:\/\/intoli.com\/blog\/pca-and-svd\/)\n","b40342a9":"# List Comprehensions\nAdvanced loop syntax with a list","35060744":"## Read data","ea7981fa":"# Auto Text Mining with TextBlob\nWith professional textmining Python library, we don't have to create each step manually.\n\nThe reason why I create detailed steps is to help you get better understanding of the machanism behind the Textmining Technology.\n\nIn the production environment, it is better to use the tools to simplify you analysis\n\n### For your convinience, I restart from scrach.\n\nSee more on textblob official [website](https:\/\/textblob.readthedocs.io\/en\/dev\/classifiers.html)\n\n<p style='color:red'> To use textblob you need to install it first, in command line, run \"pip install textblob\", or check the ofiicial website for help <p>","ff0f4a5a":"## Topic Creating","b97158d4":"Now we get words inside the first record.\nWe need do the same thing for all the records.","38490782":"sentiments = []\nfor statement in score_data['TextField']:\n    blob = TextBlob(statement)\n    sentiment = blob.sentiment.polarity\n    sentiments.append(sentiment)\nscore_data['sentiment'] = sentiments\nscore_data","79c242db":"# Data cleaning\nWe need to clean the text data before the text mining.\n1. Unify the cases (Turn Capitals into lowercase)\n2. Delete stopwords\n3. Delete punctuations and numbers\n4. Stemming and lemmatization (not for here)","5a1f8cda":"# Data Type\nHere variable \"f\" is a \"string\", we can check its data type and length (how many letters in the variable) \n\nPython have many differnt data types, I will show some common ones below:","fb88e81b":"## Scoring","bbdd48ae":"## Draw map","7f076edd":"## Create wordlist","ecf0d272":"# First Code \"Hello Python!\"\nJupyter notebook or Syder provide \"console\" to run your python code, witch means you can run your code line py line or model by model (You do not have to run you whole script one time)\nOnce you run part of your code, your defined variables are stored in the console (memory) and can be refered in the later codes.\n\nLets run our first code:\n\n","f138146f":"# Word Topics\nSimply speaking, word topic is to tanspose your text matrix, and generate cluster for keywords (orignally clusering works on docments)\nHere we use Transposed SVD to make word topics.\n1. Transpose the SVD data\n2. Clustering on transposed matrix\n3. Refer the keywords\nLet's do it step by step:","3acb0e73":"## Count frequency of each word in each document","1419b338":"## Mark keywords","a6f81632":"# Clustering\nBecause everyone learned clustering from 5P11 and 5P2, I won't explain clustering here.\n\nComparing different algorism of clustering, [link](https:\/\/scikit-learn.org\/stable\/auto_examples\/cluster\/plot_cluster_comparison.html)\n\n## You can also watch\n\n<a style='color:blue'  href='http:\/\/www.rel8ed.to\/2019\/coldest_capital_hottest_women_owned_business\/'>My Tabluea Clustering Tutorial<a>","e97b024b":"## Transform data into textblob required format","8a21b1b6":"When using pandas read files, we get a DataDrame variable, it manages data by columns and rows, quite similiar as excel sheet and SQL table.\nWe can select columns or rows from pandas DataFrame.\n<p style=\"color:red\"> In python, index starts from 0, so first row is row 0, second row is row 1....<p>","22a7dae9":"Sentiment analysis for the whole score data","684f0c2e":"Good lubck on your study!\n\n![](https:\/\/www.calliopegifts.co.uk\/img\/product\/new-job-good-luck-in-your-new-job-flittered-3004553-0.jpg)","fae1f68d":"# \u00a0Brock University Tutorial: Textmining with Python by Zack Dai\n# Introduction\nThis is an entry-level tutorial of TextMining With Python Created for Brock University [Goodman business school](https:\/\/brocku.ca\/goodman\/) Business analysis students. This tutorial teaches you the basic idea about python (Anocanda), how to run python code, data operation with python, and how to use python for Text Mining. ( I assume the reader of the audience have 0 knowledge about any programming language)\n\nThanks, professor [Anteneh Ayanso](https:\/\/www.linkedin.com\/in\/aayanso\/) for giving me this chance to create this tutorial.\n\nIf you have any concern about this tutorial, you can reach me at my LinkedIn.([click here](https:\/\/www.linkedin.com\/in\/zhengang-dai\/))\n\n# About Python\nPython is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides constructs that enable clear programming on both small and large scales.[26] Van Rossum led the language community until stepping down as the leader in July 2018. --wikipedia.\n\n# Why Python\n<img src=\"https:\/\/cdn-images-1.medium.com\/max\/1000\/1*CExT2OJfdOpfI72dEYX6Mg.jpeg\" height=400 width=400>\n\n## Rank of program languages \n[tiobe.com](https:\/\/www.tiobe.com\/tiobe-index\/) \n\n### 1.  Beginner Friendliness\nPython was designed to be easy to understand and fun to use (its name came from Monty Python so a lot of its beginner tutorials reference it). Fun is a great motivator, and since you'll be able to build prototypes and tools quickly with Python, many find coding in Python a satisfying experience. Thus, Python has gained popularity for being a beginner-friendly language, and it has replaced Java as the most popular introductory language at Top U.S. Universities.\n\n### 2.  Easy to Understand\nBeing a very high-level language, Python reads like English, which takes a lot of syntax-learning stress off coding beginners. Python handles a lot of complexity for you, so it is very beginner-friendly in that it allows beginners to focus on learning programming concepts and not have to worry about too many details.\n\n### 3. Very Flexible\nAs a dynamically typed language, Python is really flexible. This means there are no hard rules on how to build features, and you'll have more flexibility solving problems using different methods (though the Python philosophy encourages using the obvious way to solve things). Furthermore, Python is also more forgiving of errors, so you'll still be able to compile and run your program until you hit the problematic part.\n\n### 4. Community\nAs you step into the programming world, you'll soon understand how vital support is, as the developer community is all about giving and receiving help. The larger a community, the more likely you'd get help and the more people will be building useful tools to ease the process of development.\n\n### 5. Multifunction\nWith Python, you can do almost anything you want. Web design, database operation(all databases), game design, commercial applications, information system, machine learning, text mining, and deep learning......\n\nIf you only want to learn one programming language, no doubt, you should choose python!\n\n# Python 2 vs Python 3\nPython 3.x is the future, and with Python 2.x support dwindling, you should put your time into learning the version that will help you into the future. So python 3 please, I am not offering you an option, just let you know, avoid python 2. (Though they are all named python, the syntax is a little different.)\n\n# Install python\n<img src=\"https:\/\/www.anaconda.com\/wp-content\/uploads\/2018\/06\/cropped-Anaconda_horizontal_RGB-1-600x102.png\" height=200>\nIn Brock University's labs, they have python(anaconda both 2 and 3) installed. I will skip this process in the class. Just introduce some software here.\n### If you want to install Python on your machine, my recommendation is to install anaconda 3. GO to https:\/\/www.anaconda.com\/distribution\/ [Anaconda official website](https:\/\/www.anaconda.com\/distribution\/) download python 3.x **distribution** version choose your machine type. (Suggest you select the environment option.)\n<img src=\"https:\/\/cdn-images-1.medium.com\/max\/1250\/1*7a9zVyGP3iMXu9aB4e_Vhw.png\" height=500 width=500>\n\n## Additional options\n### Jupyter Notebook\n<img src=\"https:\/\/jupyter.org\/assets\/main-logo.svg\" height=200, width=200>\nMost popular IDE for Python. If you are using anaconda, this package is already included.\n\n### Pycharm\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/a\/a1\/PyCharm_Logo.svg\/192px-PyCharm_Logo.svg.png)\nInstall Pycharm form [Pycharm website](https:\/\/www.jetbrains.com\/pycharm\/download\/#section=windows) dowload community version (Free!) Install on your machine\n### PS:how to fix Interpreter field is empty in pycharm \n[Youtobe Vedio](https:\/\/www.youtube.com\/watch?v=ypSSGgKAjhc)\n\n### Kaggle\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/7\/7c\/Kaggle_logo.png\/200px-Kaggle_logo.png)\nYou can run your script from the kaggle website by creating a kernel (Jupyter Notebook environment). [Kaggle Website](https:\/\/www.kaggle.com\/)\n\n### Colab\n![](https:\/\/cdn-images-1.medium.com\/max\/1100\/1*g_x1-5iYRn-SmdVucceiWw.png)\nA wonderful python runtime platform on web, it provides free python environment (you don't need python installed on your machine), even free GPU and TPU.\nps: don't forget save your result to local machine or Gdrive, otherwise it will gone for ever.\n\n### PyPI\n![](https:\/\/pypi.org\/static\/images\/logo-large.72ad8bf1.svg)\nThe official place to find python libraries. [Pypi website](https:\/\/pypi.org\/)\n\n### Github\n![](https:\/\/avatars1.githubusercontent.com\/u\/9919?s=200&v=4)\nThe world's leading software development platform. [Github website](https:\/\/github.com\/)\n\n### Stack Overflow\n<img src=\"https:\/\/i0.wp.com\/wptavern.com\/wp-content\/uploads\/2016\/07\/stack-overflow.png?resize=768%2C301&ssl=1\"  height=200 width=500>\nStack Overflow is a question and answer site for professional and enthusiast programmers.The biggest community. [Stack Overflow website](https:\/\/stackoverflow.com\/) \n\n### Spyder\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/7\/7e\/Spyder_logo.svg\/1024px-Spyder_logo.svg.png\"  width=\"200\" height=\"200\">\nAnother IDE inside anaconda package.\n\n### VScode\n![](https:\/\/res.cloudinary.com\/duninnjce\/image\/upload\/w_600,q_auto,f_auto\/vs-code-icon.png)\nFree IDE provided by microsoft, can run most programming languages. Lite and powerful","8964fe88":"# Operator\nDifferent data types have different meanings on operators.\nMore infomation about operators can be found [here](https:\/\/www.w3schools.com\/python\/python_operators.asp)","a260dca3":"## Transpose SVDs","2df4f44a":"# Variable\nYou can temporarily store you data in variables and use them later.\n###    Variable Names\n*     A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume). Rules for Python variables:\n*     A variable name must start with a letter or the underscore character\n*     A variable name cannot start with a number\n*     A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )\n*     Variable names are case-sensitive (age, Age and AGE are three different variables)","3687f453":"<h3 style=\"color:red;\">Notice that python is case sensitive, which means upercase and lowercase are different!<br>\"print\" is different from \"Print\"<p>\n   Try the following code, you will get an error.","a4d1da36":"# Vectorization (Manually way)\nThis step is to convert the tokens into numeric numbers.\n\nfirst, we need create a list contains every word in every document.\n\nthen, we count the frequency of the appearance of each in document. (Or use binary exist or not)\n\nlast, we use TF-IDF technique to convert the matrix. (See the notes from your 5P12 class)\n\n","c544edbc":"# Open data\nWith python you can easily read a file as a variable.\n\nAs I am using kaggle server, the file 'WeatherAnimalsSports.csv' is stored at '..\/input\/' folder\n\n### On your computer you can use a path like \"c:\/files\/data.csv\" to open your local data.","20a9380c":"\n# Visualization T-SNE\nWe can transform the topicmatrix into a two dimension matrix(by T-SNE), so we can use visualization to see the distribution of the words\n\n### For more about visualization check [here](https:\/\/seaborn.pydata.org\/examples\/index.html)","3446bacf":"# For loop\nA for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).\n\nThis is less like the for keyword in other programming language, and works more like an iterator method as found in other object-orientated programming languages.\n\nWith the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.\n\n<p style=\"color:red\">Automatic do same thing many times on different target<p>","5b472481":"# Text Parsing\nBreaking texts into small component, eg. words, sentences.\nHere I only show you one word parsing, not cover sentence parsing or big-gram parsing (multipe-words)","b18dd6e5":"# Python Library\nPython\u2019s standard library is very extensive, offering a wide range of facilities as indicated by the long table of contents listed below. The library contains built-in modules (written in C) that provide access to system functionality such as file I\/O that would otherwise be inaccessible to Python programmers, as well as modules written in Python that provide standardized solutions for many problems that occur in everyday programming. Some of these modules are explicitly designed to encourage and enhance the portability of Python programs by abstracting away platform-specifics into platform-neutral APIs.","f71b78bd":"## Calculae TF-IDF\n\nDetailed explaination see [wikipeida](https:\/\/en.wikipedia.org\/wiki\/Tf%E2%80%93idf)\n\n![](https:\/\/www.researchgate.net\/profile\/Heloisa_Rocha\/publication\/221228354\/figure\/fig2\/AS:650816818003985@1532178229971\/TF-IDF-formula-2.png)"}}