{"cell_type":{"1d8bb385":"code","a399d910":"code","62649d8c":"code","f0d702bc":"code","2dde1cc2":"code","42d31349":"code","4bb131bb":"code","ba5fe232":"code","00b77990":"code","884b52e3":"code","b37fa8d2":"code","49a1bc3d":"code","7b530c3a":"code","f6a81b93":"code","32f6b4e7":"code","05439560":"code","28383e51":"code","75e341d6":"code","e5a63636":"code","076de687":"code","36e8450a":"code","9968cf5a":"code","e0c25d6b":"code","aae20eb3":"code","f281be05":"code","48a74831":"code","104fa02a":"code","73d24022":"code","e0077df0":"code","0fb742e8":"code","cf6113e8":"code","1da3e232":"code","b52a71c0":"code","05f7026c":"code","de5108c5":"code","7a199a05":"code","2cf2a151":"code","1945c593":"code","24c24c13":"code","15ca8675":"code","12ccbc70":"code","05811cac":"code","06eda409":"code","5ba75a28":"code","84a061a1":"code","9d77e812":"code","4f37f995":"code","e2ec745b":"code","94b91eb6":"code","e788b588":"code","e2565067":"code","146dec1d":"code","4bece077":"code","fbe8f88a":"code","532a483c":"code","55d2b775":"code","bf3b3577":"code","92b3b699":"code","1a8dc0ff":"code","e366bdf9":"code","d4bdb38c":"code","77b507f1":"code","859a07c6":"code","61b5401c":"code","c2404759":"code","dafeef3e":"code","a2e91bba":"code","e9e561d2":"code","d00fd3d0":"code","71744e18":"code","80bd9eb7":"code","f4194798":"code","4ce1eaa9":"code","4f83726b":"code","ae11b7de":"code","d8e5a6a0":"code","e05171d5":"code","1d8444ba":"code","184015ca":"code","0b153857":"code","e66fd0c3":"code","e2b9daa3":"code","ed3e3f27":"code","367b9e04":"code","647776db":"code","ff291a1b":"code","caa7f19b":"code","0b993cf4":"code","fa72d1b4":"code","a65e726c":"code","a40a854b":"code","f3ffd1c3":"code","59e90497":"code","7b21cd32":"code","550c0305":"code","5d88ae2e":"code","4ca1014f":"code","351019fa":"code","2d94d5be":"code","1e693a45":"code","d25cb9c2":"code","2371e0fb":"code","3dc5f8ac":"code","ad371a92":"code","6b8c4126":"code","77d0e843":"code","c742b207":"code","14776a08":"code","c5bb9233":"code","7a7e470a":"code","560a57d7":"code","110911c8":"code","36991bb6":"code","b5f60df9":"code","08ac8428":"code","fcd77c35":"code","8e9fe4b5":"code","a9cc224e":"code","1540635d":"code","4b795316":"code","dda21710":"code","8c3e2f20":"code","772cf7e2":"code","26dfe00d":"code","6bde6906":"code","87c9acf8":"code","432f6a3f":"code","d3a3c8b9":"code","934e0a25":"code","debd659e":"code","24c78b25":"code","e774b713":"code","59a4e209":"code","feda5198":"code","cab8dd9d":"code","781edcfb":"code","c8587ef7":"code","f6c1aeca":"code","ca8b2ad6":"code","375d50d7":"code","c304c4a1":"code","32c75141":"code","8b96475d":"code","47450753":"markdown","7e9e4df0":"markdown","eb685b50":"markdown","4a7a72a3":"markdown","87d8f2fd":"markdown","f1495429":"markdown","d9aa52aa":"markdown","04213267":"markdown","350e2ba3":"markdown","5f51d285":"markdown","44158255":"markdown","a5fcfbf6":"markdown","938454f4":"markdown","9f1be1eb":"markdown","5bb01772":"markdown","709536e0":"markdown","bca38dda":"markdown","810b552b":"markdown","ecb5b661":"markdown","1d6d2014":"markdown","fecac7a2":"markdown","ddc7d0ab":"markdown","d7cc4ddc":"markdown","db261a9f":"markdown","f7377c40":"markdown","0e9ef2f9":"markdown","66ab4a0c":"markdown","d2e8c11e":"markdown","a729f0f6":"markdown","87bc2258":"markdown","ba831f03":"markdown","0d30e588":"markdown","b771cec9":"markdown","789def2b":"markdown","5c8b7b1e":"markdown","4d8b6f84":"markdown","d25651d3":"markdown","3179312d":"markdown","29b46f23":"markdown","c6df1129":"markdown","060c3b51":"markdown","98f6879b":"markdown","9732d337":"markdown","f7ba576a":"markdown","fce657aa":"markdown","50400923":"markdown","f44de261":"markdown","68aa8015":"markdown","2dc38f2a":"markdown","fdea9a80":"markdown","45a7c6a5":"markdown","65f0ffbf":"markdown","a84df1b5":"markdown","856abdef":"markdown","11e4db7a":"markdown"},"source":{"1d8bb385":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns \nsns.set(color_codes=True)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.feature_selection import mutual_info_classif\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier \n\nfrom sklearn.preprocessing import StandardScaler\nfrom imblearn.over_sampling import SMOTE\n","a399d910":"Bank  = pd.read_csv(\"..\/input\/bank-personal-loan-modelling\/Bank_Personal_Loan_Modelling.csv\")\nBank2 = pd.read_csv(\"..\/input\/bank-personal-loan-modelling\/Bank_Personal_Loan_Modelling.csv\")\nBank3 = pd.read_csv(\"..\/input\/bank-personal-loan-modelling\/Bank_Personal_Loan_Modelling.csv\")","62649d8c":"Bank.head()","f0d702bc":"Bank.describe()","2dde1cc2":"Target= [\"Personal Loan\"]\nt= Bank[Target]\nt.head()","42d31349":"Bank['Personal Loan'].describe()","4bb131bb":"Bank.nunique()","ba5fe232":"rows_count, columns_count = Bank.shape\nprint(\"Number of rows :\", rows_count)\nprint(\"Number of columns :\", columns_count)","00b77990":"Bank.isnull()","884b52e3":"Bank.duplicated()","b37fa8d2":"plt.figure(figsize=(15,7))\nplt.title('Correlation of Attributes', size=15)\nsns.heatmap(Bank.corr(), annot=True, linewidths=3, fmt='.3f', center=1);","49a1bc3d":"sns.distplot(Bank['Income'])\nplt.title('Income Distribution with KDE');","7b530c3a":"sns.distplot(Bank['Family'])\nplt.title('Family Distribution with KDE');","f6a81b93":"sns.distplot(Bank['CCAvg'])\nplt.title('Avg spending of credit cards Distribution with KDE');","32f6b4e7":"sns.distplot(Bank['Education'])\nplt.title('Education Distribution with KDE');","05439560":"sns.distplot(Bank['Mortgage'])\nplt.title('Mortgage Distribution with KDE');","28383e51":"sns.kdeplot(\n   data=Bank, x='Income', hue=\"Personal Loan\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n)","75e341d6":"sns.kdeplot(\n   data=Bank, x='Family', hue=\"Personal Loan\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n)","e5a63636":"sns.kdeplot(\n   data=Bank, x='CCAvg', hue=\"Personal Loan\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n)","076de687":"sns.kdeplot(\n   data=Bank, x='Education', hue=\"Personal Loan\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n)","36e8450a":"sns.kdeplot(\n   data=Bank, x='Mortgage', hue=\"Personal Loan\",\n   fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, linewidth=0,\n) ","9968cf5a":"loan_acceptance_count = pd.DataFrame(Bank['Personal Loan'].value_counts()).reset_index()\nloan_acceptance_count.columns = ['Labels', 'Personal Loan']\nloan_acceptance_count","e0c25d6b":"pie_labels = loan_acceptance_count['Labels']\npie_labels = ['Not Accepted' if x == 0 else 'Accepted' for x in pie_labels]\npie_data = loan_acceptance_count['Personal Loan'] \nexplode = (0, 0.15) \nwp = { 'linewidth' : 1, 'edgecolor' : '#000000' }\n\ndef func(pct, allvalues): \n    absolute = int(np.round(pct \/ 100.*np.sum(allvalues)))\n    return \"{:.1f}%\\n({:d})\".format(pct, absolute)\n\nfig, ax = plt.subplots(figsize =(10, 6))\n\nax.pie(pie_data,  \n       autopct = lambda pct: func(pct, pie_data), \n       explode = explode,  \n       labels = pie_labels, \n       shadow = True, \n       startangle = 70, \n       wedgeprops = wp)\n\nax.axis('equal') \nplt.title('Personal Loan Acceptance Percentage', size=22)\nplt.show();","aae20eb3":"fig = px.bar(Bank, x='Experience', y='Income', title='...', color='Experience')\nfig.show()","f281be05":"categorical_variables= [col for col in Bank.columns if Bank[col].nunique()<=5]\nprint(categorical_variables)","48a74831":"categorical_variables.remove(\"Personal Loan\")\nprint(categorical_variables)","104fa02a":"fig=plt.figure(figsize=(15,10))\nfor i,col in enumerate(categorical_variables):\n    ax=fig.add_subplot(2,3,i+1)\n    sns.barplot(x=col,y='Personal Loan',data=Bank,ci=None)","73d24022":"X = Bank.drop('Personal Loan', axis = 1)    #set X with all feature except Personal Loan\nY = Bank[['Personal Loan']]                 #set y with our target feature Personal Loan","e0077df0":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=1, stratify = Y)","0fb742e8":"mutual_information = mutual_info_classif(X_train, y_train, n_neighbors=5, copy = True)\n\nplt.subplots(1, figsize=(26, 1))\nsns.heatmap(mutual_information[:, np.newaxis].T, cmap='Blues', cbar=False, linewidths=1, annot=True, annot_kws={\"size\": 20})\nplt.yticks([], [])\nplt.gca().set_xticklabels(X_train.columns, rotation=45, ha='right', fontsize=16)\nplt.suptitle(\"Variable Importance (mutual_info_classif)\", fontsize=22, y=1.2)\nplt.gcf().subplots_adjust(wspace=0.2)","cf6113e8":"rf_clf = RandomForestClassifier(n_estimators=500, n_jobs=-1, random_state=42)\nrf_clf.fit(X_train, y_train)\n\nfeatures = list(X_train.columns)\nimportances = rf_clf.feature_importances_\nindices = np.argsort(importances)\n\nfig, ax = plt.subplots(figsize=(10, 7))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nax.tick_params(axis=\"x\", labelsize=12)\nax.tick_params(axis=\"y\", labelsize=14)\nplt.yticks(range(len(indices)), [features[i] for i in indices])\nplt.xlabel('Feature Importance', fontsize = 18)","1da3e232":"Bank = Bank.drop(['ID','ZIP Code'], axis=1) #dropped not important feaures","b52a71c0":"Bank.head(3)","05f7026c":"scaler=StandardScaler()\nscaled_df=scaler.fit_transform(Bank.drop('Personal Loan',axis=1))","de5108c5":"scaled_df=pd.DataFrame(scaled_df)","7a199a05":"scaled_df.columns=Bank.drop('Personal Loan',axis=1).columns\nscaled_df.head()","2cf2a151":"DT = DecisionTreeClassifier(max_depth=2)\n# max_depth is maximum number of levels in the tree \nDT.fit(X_train,y_train)","1945c593":"y_pred_DT= DT.predict(X_test)","24c24c13":"print(accuracy_score(y_test,y_pred_DT))","15ca8675":"cm_DT = confusion_matrix(y_test, y_pred_DT)\nprint(cm_DT)","12ccbc70":"y_pred_DT= DT.predict(X_test)\nprint(classification_report(y_test, y_pred_DT))","05811cac":"sns.heatmap(confusion_matrix(y_test,y_pred_DT),annot=True,fmt='',cmap='YlGnBu')","06eda409":"SVM = SVC(kernel='linear',C=1.0, gamma='scale')\nSVM.fit(X_train,y_train)","5ba75a28":"y_pred_SVM = SVM.predict(X_test)","84a061a1":"print(accuracy_score(y_test,y_pred_SVM))","9d77e812":"cm_SVM = confusion_matrix(y_test, y_pred_SVM)\nprint(cm_SVM)","4f37f995":"y_pred_SVM= SVM.predict(X_test)\nprint(classification_report(y_test, y_pred_SVM))","e2ec745b":"sns.heatmap(confusion_matrix(y_test,y_pred_SVM),annot=True,fmt='',cmap='YlGnBu')","94b91eb6":"kclf = KNeighborsClassifier(n_neighbors=5)","e788b588":"kclf.fit(X_train,y_train)","e2565067":"y_pred_KNN= kclf.predict(X_test)","146dec1d":"print(metrics.accuracy_score(y_test, y_pred_KNN))","4bece077":"cm_KNN = confusion_matrix(y_test, y_pred_KNN)\nprint(cm_KNN)","fbe8f88a":"y_pred_KNN= kclf.predict(X_test)\nprint(classification_report(y_test, y_pred_KNN))","532a483c":"sns.heatmap(confusion_matrix(y_test,y_pred_KNN),annot=True,fmt='',cmap='YlGnBu')","55d2b775":"LR= LogisticRegression()\nLR.fit(X_train, y_train)","bf3b3577":"y_pred_LR= LR.predict(X_test)","92b3b699":"print(metrics.accuracy_score(y_test, y_pred_LR))","1a8dc0ff":"cm_LR = confusion_matrix(y_test, y_pred_LR)\nprint(cm_LR)","e366bdf9":"y_pred_LR= LR.predict(X_test)\nprint(classification_report(y_test, y_pred_LR))","d4bdb38c":"sns.heatmap(confusion_matrix(y_test,y_pred_LR),annot=True,fmt='',cmap='YlGnBu')","77b507f1":"GNB = GaussianNB()","859a07c6":"GNB.fit(X_train,y_train)","61b5401c":"y_pred_GNB= GNB.predict(X_test)","c2404759":"print(metrics.accuracy_score(y_test, y_pred_GNB))","dafeef3e":"cm_GNB = confusion_matrix(y_test, y_pred_GNB)\nprint(cm_GNB)","a2e91bba":"y_pred_GNB= GNB.predict(X_test)\nprint(classification_report(y_test, y_pred_GNB))","e9e561d2":"sns.heatmap(confusion_matrix(y_test,y_pred_GNB),annot=True,fmt='',cmap='YlGnBu')","d00fd3d0":"RF= RandomForestClassifier(n_estimators=500, random_state=0)","71744e18":"RF.fit(X_train,y_train)","80bd9eb7":"y_pred_RF= RF.predict(X_test)","f4194798":"print(metrics.accuracy_score(y_test, y_pred_RF))","4ce1eaa9":"cm_RF = confusion_matrix(y_test, y_pred_RF)\nprint(cm_RF)","4f83726b":"y_pred_RF= RF.predict(X_test)\nprint(classification_report(y_test, y_pred_RF))","ae11b7de":"sns.heatmap(confusion_matrix(y_test,y_pred_RF),annot=True,fmt='',cmap='YlGnBu')\n","d8e5a6a0":"Selected= Bank2[['Income','Family','CCAvg']].corr()\nSelected ","e05171d5":"plt.figure(figsize=(15,7))\nplt.title('Correlation of Attributes', size=15)\nsns.heatmap(Selected.corr(), annot=True, linewidths=3, fmt='.3f', center=1);","1d8444ba":"corr_PL= Bank2[['Age','Experience','Personal Loan']].corr()\ncorr_PL","184015ca":"plt.figure(figsize=(15,7))\nplt.title('Correlation of Attributes', size=15)\nsns.heatmap(corr_PL.corr(), annot=True, linewidths=3, fmt='.3f', center=1);","0b153857":"Bank2.drop('Experience',axis=1)","e66fd0c3":"smote = SMOTE(sampling_strategy='minority')\nX_sm, y_sm = smote.fit_resample(X, Y)","e2b9daa3":"X_train, X_test, y_train, y_test = train_test_split(X_sm, y_sm, test_size=0.2, random_state=42, stratify=y_sm) ","ed3e3f27":"Bank2 = Bank2.drop(['ID','ZIP Code','Securities Account','CreditCard','Online','Experience'], axis=1)","367b9e04":"Bank2.head() #dataset after dropping unwanted attributes","647776db":"dt2 = DecisionTreeClassifier(max_depth=2)\n# max_depth is maximum number of levels in the tree \ndt2.fit(X_train,y_train)","ff291a1b":"y_pred_DT2= dt2.predict(X_test)","caa7f19b":"print(accuracy_score(y_test,y_pred_DT2))","0b993cf4":"cm_DT2 = confusion_matrix(y_test, y_pred_DT2)\nprint(cm_DT2)","fa72d1b4":"y_pred_DT2= dt2.predict(X_test)\nprint(classification_report(y_test, y_pred_DT2))\n","a65e726c":"sns.heatmap(confusion_matrix(y_test,y_pred_DT2),annot=True,fmt='',cmap='YlGnBu')","a40a854b":"SVM2 = SVC(kernel='linear',C=1.0, gamma='scale')\nSVM2.fit(X_train,y_train)","f3ffd1c3":"y_pred_SVM2 = SVM2.predict(X_test)","59e90497":"print(accuracy_score(y_test,y_pred_SVM2))","7b21cd32":"cm_SVM2 = confusion_matrix(y_test, y_pred_SVM2)\nprint(cm_SVM2)","550c0305":"y_pred_SVM2= SVM2.predict(X_test)\nprint(classification_report(y_test, y_pred_SVM2))","5d88ae2e":"sns.heatmap(confusion_matrix(y_test,y_pred_SVM2),annot=True,fmt='',cmap='YlGnBu')","4ca1014f":"kclf2 = KNeighborsClassifier(n_neighbors=5)","351019fa":"kclf2.fit(X_train,y_train)","2d94d5be":"y_pred_KNN2= kclf2.predict(X_test)","1e693a45":"print(metrics.accuracy_score(y_test, y_pred_KNN2))","d25cb9c2":"cm_KNN2 = confusion_matrix(y_test, y_pred_KNN2)\nprint(cm_KNN2)","2371e0fb":"y_pred_KNN2= kclf2.predict(X_test)\nprint(classification_report(y_test, y_pred_KNN2))","3dc5f8ac":"sns.heatmap(confusion_matrix(y_test,y_pred_KNN2),annot=True,fmt='',cmap='YlGnBu')","ad371a92":"LR2= LogisticRegression()\nLR2.fit(X_train, y_train)","6b8c4126":"y_pred_LR2= LR2.predict(X_test)","77d0e843":"print(metrics.accuracy_score(y_test, y_pred_LR2))","c742b207":"cm_LR2 = confusion_matrix(y_test, y_pred_LR2)\nprint(cm_LR2)","14776a08":"y_pred_LR2= LR2.predict(X_test)\nprint(classification_report(y_test, y_pred_LR2))","c5bb9233":"sns.heatmap(confusion_matrix(y_test,y_pred_LR2),annot=True,fmt='',cmap='YlGnBu')","7a7e470a":"GNB2 = GaussianNB()","560a57d7":"GNB2.fit(X_train,y_train)","110911c8":"y_pred_GNB2= GNB2.predict(X_test)","36991bb6":"print(metrics.accuracy_score(y_test, y_pred_GNB2))","b5f60df9":"cm_GNB2 = confusion_matrix(y_test, y_pred_GNB2)\nprint(cm_GNB2)","08ac8428":"y_pred_GNB2= GNB2.predict(X_test)\nprint(classification_report(y_test, y_pred_GNB2))","fcd77c35":"sns.heatmap(confusion_matrix(y_test,y_pred_GNB2),annot=True,fmt='',cmap='YlGnBu')","8e9fe4b5":"RF2= RandomForestClassifier(n_estimators=500, random_state=0)","a9cc224e":"RF2.fit(X_train,y_train)","1540635d":"y_pred_RF2= RF2.predict(X_test)","4b795316":"print(metrics.accuracy_score(y_test, y_pred_RF2))","dda21710":"cm_RF2 = confusion_matrix(y_test, y_pred_RF2)\nprint(cm_RF2)","8c3e2f20":"y_pred_RF2= RF2.predict(X_test)\nprint(classification_report(y_test, y_pred_RF2))","772cf7e2":"sns.heatmap(confusion_matrix(y_test,y_pred_RF2),annot=True,fmt='',cmap='YlGnBu')\n","26dfe00d":"sns.kdeplot(data=Bank, x=\"Income\", hue=\"Personal Loan\", multiple=\"stack\")","6bde6906":"sns.kdeplot(data=Bank, x=\"Family\", hue=\"Personal Loan\", multiple=\"stack\")","87c9acf8":"sns.kdeplot(data=Bank, x=\"CCAvg\", hue=\"Personal Loan\", multiple=\"stack\") ","432f6a3f":"sns.kdeplot(data=Bank, x=\"Education\", hue=\"Personal Loan\", multiple=\"stack\")","d3a3c8b9":"sns.kdeplot(data=Bank, x=\"Mortgage\", hue=\"Personal Loan\", multiple=\"stack\") ","934e0a25":"X = Bank3[['CCAvg','Family','Income']]\nY = Bank3[['Personal Loan']] ","debd659e":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=1, stratify = Y) ","24c78b25":"dt3 = DecisionTreeClassifier(max_depth=2)\n# max_depth is maximum number of levels in the tree \ndt3.fit(X_train,y_train)","e774b713":"y_pred_DT3= dt3.predict(X_test)","59a4e209":"print(accuracy_score(y_test,y_pred_DT3))","feda5198":"cm_DT3 = confusion_matrix(y_test, y_pred_DT3)\nprint(cm_DT3)","cab8dd9d":"y_pred_DT3= dt3.predict(X_test)\nprint(classification_report(y_test, y_pred_DT3))","781edcfb":"sns.heatmap(confusion_matrix(y_test,y_pred_DT3),annot=True,fmt='',cmap='YlGnBu')","c8587ef7":"RF3= RandomForestClassifier(n_estimators=500, random_state=0)","f6c1aeca":"RF3.fit(X_train,y_train)","ca8b2ad6":"y_pred_RF3= RF3.predict(X_test)","375d50d7":"print(metrics.accuracy_score(y_test, y_pred_RF3))","c304c4a1":"cm_RF3 = confusion_matrix(y_test, y_pred_RF3)\nprint(cm_RF3)","32c75141":"y_pred_RF3= RF3.predict(X_test)\nprint(classification_report(y_test, y_pred_RF3))","8b96475d":"sns.heatmap(confusion_matrix(y_test,y_pred_RF3),annot=True,fmt='',cmap='YlGnBu')","47450753":"End of work before trying to enhance the results of models.","7e9e4df0":"# **Data Visualization After Enhancing**","eb685b50":"**Observation:**\n1. Customers with family size equal to 3 have more chances of having Personal Loan.\n2. Customers with Undergraduate degree have less chances of having Personal Loan as compaired to other customers having Graduate or Advanced\/Professional degree.\n3. Customers with CD Account and Securities Account have more chances of having Personal Loan.\n4. Customers with Online & Credit Card is more likely to have Personal Loan than others don't have a one. ","4a7a72a3":"# **Check Null Values**","87d8f2fd":"**Observation:** found that the probabilty of Income to be at its highest point when the experience years are 20.","f1495429":"# Support Vector Machine (SVM) After Enhance","d9aa52aa":"\n\n* We had to do scaling to enhance results & reduce miss classifications. \n* After doing scaling saw that accuracy & recall got higher with much accurate results.\n\n\n\n","04213267":"# Logistic Regression (LR)","350e2ba3":"**Description:** Showing distribution of bunch of features:","5f51d285":"# **Data Visualization**","44158255":"# Random Forest 3 (Try)","a5fcfbf6":"**Observation:** most Imortant features on dataset (Income, CCAvg, CD Account)","938454f4":"# Decision Tree 3 (Try)","9f1be1eb":"# **Model Building**","5bb01772":"**Description:** We did another try to enhance the model by giving it the most important features & selected three of them:\n1.   Income\n2.   Family \n3. CCAvg\n\n","709536e0":"# Decision Tree (DT) After Enhance","bca38dda":"# **Importing Libraries**","810b552b":"**Observation:** found that the most correlated features on Personal Loan is: \n\n1.   Income\n2.   CCAvg\n3.   CD Account","ecb5b661":"**Observation:** Ranking most Imortant features on dataset by using Random Forest **feature_importances_** and the most effective feature are:\n\n\n1. Income\n2. Education\n3. CCAvg\n\n","1d6d2014":"# **Dataset Shape**","fecac7a2":"**Observation:** Using standard scaling to scale unbalanced ranges in values","ddc7d0ab":"## Gaussian Naive Bayes After Enhancing","d7cc4ddc":"# **Model Building After Try to Enhance**","db261a9f":"# Random Forest (RF)","f7377c40":"# K-Nearest Neighbors After Enhance","0e9ef2f9":"# **Explorate Dataset**","66ab4a0c":"**Data Description:** This dataset contains 5000 customers. The data include customer demographic information (age, income, etc.), the customer's relationship with the bank (mortgage, securities account, etc.), and the customer response to the last personal loan campaign (Personal Loan). Among these 5000 customers, only 480 (= 9.6%) accepted the personal loan that was offered to them in the earlier campaign.","d2e8c11e":"**Observation:** found that Personal Loan is more likely to happend when the Credit Card Average of spending is higher. ","a729f0f6":"\n# **Attributes Information:**","87bc2258":"**Observation:** Percentage of Personal Loan Acceptance catogories:\n\n1.   Accepted\n2.   Not Accepted\n\n","ba831f03":"# Logistic Regression After Enhance","0d30e588":"# **Understanding Relations Between Features**","b771cec9":"**Observation:** dropped Experience over Age because we found it slightly better on correlation with Personal Loan, and dropped Securities Account, CreditCard, Online becuse they didn't show any influence change.","789def2b":"**Observation:** found that Personal Loan is more likely to happend when the Mortagage equal 0 ","5c8b7b1e":"# **Feature Selection**","4d8b6f84":"# **Scaling Dataset**","d25651d3":"# **Train Test Split**","3179312d":"# **Show Unique Values on dataset**","29b46f23":"**Observation:** Choosed most important features and highly ones  (Income, Family, CCAvg) ","c6df1129":"# **Finally Thank You!**","060c3b51":"**Observation:** found that Personal Loan is  more likely to happend when the Income increases.","98f6879b":"#K-Nearest Neighbors (KNN)","9732d337":"# **Heat map Correlation of Attributes**","f7ba576a":"\n1. ID: Customer ID\n2. Age: Customer's age in completed years\n3. Experience: #years of professional experience\n4. Income: Annual income of the customer\n5. ZIP Code: Home Address ZIP code.\n6. Family: Family size of the customer\n7. CCAvg: Avg. spending on credit cards per month\n8. Education: Education Level. 1: Undergrad  2: Graduate  3:Advanced\/Professional\n9. Mortgage: Value of house mortgage if any.\n10. Personal Loan: Did this customer accept the personal loan offered in the last campaign?\n11. Securities Account: Does the customer have a securities account with the bank?\n12. CD Account: Does the customer have a certificate of deposit (CD) account with the bank?\n13. Online: Does the customer use internet banking facilities?\n14. Credit card: Does the customer use a credit card issued by the bank?","fce657aa":"**Observation:** found that Personal Loan is  more likely to happend when the Eduacation level is higher. ","50400923":"# Gaussian Naive Bayes (GNB)","f44de261":"# Random Forest After Enhance","68aa8015":"# The Target of dataset is **\"Personal Loan\"**","2dc38f2a":"# Decision Tree (DT)","fdea9a80":"**Observation:** found that Personal Loan is more likely to be achieved when the Family members are bigger.","45a7c6a5":"# Support Vector Machine (SVM)","65f0ffbf":"# **Import Dataset**","a84df1b5":"# **Check Duplicates**","856abdef":"**Observation:** since Age shows a little better correlation with Personal loan we will drop the Experience attribute\n\n","11e4db7a":"**Overview:** This dataset is about a bank (Thera Bank) whose management wants to explore ways of converting its liability customers to personal loan customers."}}