{"cell_type":{"f09a527d":"code","86802985":"code","3b53354f":"code","d671844f":"code","cd66ec66":"code","df8e54f1":"code","da7f65ac":"code","f73b9251":"code","ec35bc51":"code","0fd80dde":"code","1ddf13b8":"code","20beea75":"code","5bada56e":"code","796620b4":"code","45874c4b":"code","e30af1e6":"code","d72741c5":"code","9bd4dc1b":"code","2d1d63f9":"code","e560d573":"code","fa10982c":"code","53ff8735":"code","cebf4ebd":"code","f5a921c0":"code","9858c2d7":"markdown","5c306403":"markdown","93055f97":"markdown"},"source":{"f09a527d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86802985":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3b53354f":"train_pd = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest_pd = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')","d671844f":"#checking Null values\ntrain_pd.isna().sum()","cd66ec66":"train_pd.head()","df8e54f1":"fig = plt.subplots(figsize = (15,5))\nsns.countplot(x='target_carbon_monoxide',data=train_pd)","da7f65ac":"fig = plt.subplots(figsize = (15,2))\nsns.countplot(x='target_benzene',data=train_pd)","f73b9251":"fig = plt.subplots(figsize = (15,5))\nsns.countplot(x='target_nitrogen_oxides',data=train_pd)","ec35bc51":"#import packages\nimport numpy as np\nimport pandas as pd \n#import matplotlib as mpl\nimport h2o\nfrom h2o.automl import H2OAutoML\nimport seaborn as sns\nimport matplotlib.pyplot as plt","0fd80dde":"h2o.init()","1ddf13b8":"#import train test files\ntrain = h2o.import_file('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = h2o.import_file('..\/input\/tabular-playground-series-jul-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","20beea75":"print(train.shape)\nprint(test.shape)","5bada56e":"train.describe()","796620b4":"x = train.columns\ny1 = 'target_carbon_monoxide'\ny2 ='target_benzene'\ny3 ='target_nitrogen_oxides'\nx.remove(y1)\nx.remove(y2)\nx.remove(y3)\nx.remove('date_time') #removing id  ","45874c4b":"for col in x:train[col].hist()","e30af1e6":"plt.figure(figsize=(15,15))\ncorr = train[:,0:10].cor().as_data_frame()\ncorr.index = train.columns[0:10]\nsns.heatmap(corr, annot = True, cmap='RdYlGn', vmin=-1, vmax=1)\nplt.title(\"Correlation Heatmap\", fontsize=16)\nplt.show()\n\n#variables are multi collinear,means no need to remove any varibale ","d72741c5":"aml_y1 = H2OAutoML(max_runtime_secs=200, seed=1)\naml_y1.train(x=x, y=y1, training_frame=train)","9bd4dc1b":"preds_y1 = aml_y1.predict(test)","2d1d63f9":"aml_y2 = H2OAutoML(max_runtime_secs=200, seed=1)\naml_y2.train(x=x, y=y2, training_frame=train)","e560d573":"preds_y2 = aml_y2.predict(test)","fa10982c":"aml_y3 = H2OAutoML(max_runtime_secs=200, seed=1)\naml_y3.train(x=x, y=y3, training_frame=train)","53ff8735":"preds_y3 = aml_y3.predict(test)","cebf4ebd":"## create submission\nsubmission = pd.concat([\n    pd.DataFrame({'date_time': test_pd['date_time']}),\n    pd.DataFrame({'target_carbon_monoxide': preds_y1.as_data_frame().predict}),\n    pd.DataFrame({'target_benzene': preds_y2.as_data_frame().predict}),\n    pd.DataFrame({'target_nitrogen_oxides': preds_y3.as_data_frame().predict})], axis=1)\n\nsubmission.head()\n\n","f5a921c0":"submission.to_csv('submission.csv', index=False)","9858c2d7":"Now let us also look at the correlation of the individual features. We can use the cor() function in H2OFrame for the same","5c306403":"![image.png](attachment:b17732f0-d438-42a5-9a4d-411465ee7104.png)","93055f97":"**AutoML H2o Code**"}}