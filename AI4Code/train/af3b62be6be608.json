{"cell_type":{"3761b764":"code","86d064d6":"code","adf2792e":"code","e72b8646":"code","dc22ae6e":"code","e53222f0":"code","94cfe221":"code","4f7184bd":"code","85466777":"code","ac23d76c":"code","476e8c70":"code","4c057913":"code","1a33220b":"code","8c772257":"code","6b0a87d3":"code","889c781e":"code","e70545c0":"code","83ffca4f":"code","987d9f42":"code","bb0021bc":"code","ae3f79c7":"code","46323c58":"code","1cb0ad17":"code","c8d0fd01":"code","ecafff2b":"markdown","b8248b66":"markdown","35f0611c":"markdown","eac11def":"markdown","0df178cb":"markdown","e0efe00a":"markdown","16c80654":"markdown","09a3fc77":"markdown","59c981f2":"markdown","a7c952e2":"markdown","697c6c66":"markdown","aae0f968":"markdown","a6f275a3":"markdown","6b1fcdf4":"markdown"},"source":{"3761b764":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86d064d6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","adf2792e":"def plot_bar(group, title):\n    plt.figure(figsize=(6,4))\n    sns.barplot(x=group.index,y=group.values)     \n    plt.title(title)\n    plt.xticks(rotation=45)\n    plt.show()\n\ndef company_analysis(dataset):\n    columns_company = ['price_rupiah', 'diameter', 'topping', 'variant', 'size', 'extra_sauce', 'extra_cheese']\n    for i in range(len(columns_company)):\n        counts = dataset.groupby([columns_company[i]]).price_rupiah.mean()\n        plot_bar(counts, 'Mean Price with respective factor')\n","e72b8646":"pizza = pd.read_csv('\/kaggle\/input\/pizza-price-prediction\/pizza_v1.csv')\npizza.head()","dc22ae6e":"pizza.shape","e53222f0":"pizza.isnull().sum()","94cfe221":"pizza.info()","4f7184bd":"pizza.columns","85466777":"\nprice = []\nfor item in pizza['price_rupiah']:\n    price += [float(item.replace('Rp', '').replace(',', ''))]\npizza['price_rupiah'] = price\n","ac23d76c":"import plotly.express as px\nplt.figure(figsize=(6,6))\nplt.pie(pizza['company'].value_counts(),autopct='%.1f', labels= pizza['company'].unique())\nplt.title('Companies Weigtage')\nplt.show()\n\nplt.figure(figsize=(6,6))\nplt.pie(pizza['diameter'].value_counts(),autopct='%.1f', labels= pizza['diameter'].unique())\nplt.title('diameter Weigtage')\nplt.show()\n\nplt.figure(figsize=(6,6))\nplt.pie(pizza['topping'].value_counts(),autopct='%.1f', labels= pizza['topping'].unique())\nplt.title('topping Weigtage')\nplt.show()\n\nplt.figure(figsize=(7,7))\nplt.pie(pizza['variant'].value_counts(),autopct='%.1f', labels= pizza['variant'].unique())\nplt.title('variant Weigtage')\nplt.show()\n\nplt.figure(figsize=(6,6))\nplt.pie(pizza['size'].value_counts(),autopct='%.1f', labels= pizza['size'].unique())\nplt.title('size Weigtage')\nplt.show()\n\nplt.figure(figsize=(6,6))\nplt.pie(pizza['extra_sauce'].value_counts(),autopct='%.1f', labels= pizza['extra_sauce'].unique())\nplt.title('extra_sauce Weigtage')\nplt.show()\n\nplt.figure(figsize=(6,6))\nplt.pie(pizza['extra_cheese'].value_counts(),autopct='%.1f', labels= pizza['extra_cheese'].unique())\nplt.title('extra_cheese Weigtage')\nplt.show()\n\n\n","476e8c70":"company_a = pizza[pizza.company.isin(['A'])]\ncompany_b = pizza[pizza.company.isin(['B'])]\ncompany_c = pizza[pizza.company.isin(['C'])]\ncompany_d = pizza[pizza.company.isin(['D'])]\ncompany_e = pizza[pizza.company.isin(['E'])]\n","4c057913":"company_analysis(company_a)","1a33220b":"company_analysis(company_b)","8c772257":"company_analysis(company_c)","6b0a87d3":"company_analysis(company_d)","889c781e":"company_analysis(company_e)","e70545c0":"pizza.head()","83ffca4f":"#defining one hot encoder functions\nfrom sklearn.preprocessing import LabelEncoder\nimport category_encoders as ce\ndef one_hot_encoding(df,col):\n    one_hot_encoder=ce.OneHotEncoder(cols=col,return_df=True,use_cat_names=True)\n    df_final = one_hot_encoder.fit_transform(df)\n    return df_final\ndef one_hot(df, column):\n    df = one_hot_encoding(df,column)\n    return df","987d9f42":"pizza = one_hot(pizza, 'company')\npizza = one_hot(pizza, 'topping')\npizza = one_hot(pizza, 'variant')\npizza = one_hot(pizza, 'size')\npizza = one_hot(pizza, 'extra_sauce')\npizza = one_hot(pizza, 'extra_cheese')","bb0021bc":"pizza.head()","ae3f79c7":"pizza.dtypes","46323c58":"from sklearn.model_selection import train_test_split\nx = pizza.drop(\"price_rupiah\",axis = 1)\nY = pizza[\"price_rupiah\"]\nX_train,X_test,Y_train,Y_test = train_test_split(x,Y,random_state = 27,test_size = 0.2)\nfrom sklearn.preprocessing import MinMaxScaler\nX_scaler = MinMaxScaler()\nY_scaler = MinMaxScaler()","1cb0ad17":"from sklearn.preprocessing import MinMaxScaler\nX_train = X_scaler.fit_transform(X_train)\nX_test = X_scaler.transform(np.array(X_test))\n\n#Fitting and tranforimg the dependent variables\nY_train = Y_scaler.fit_transform(np.array(Y_train).reshape(-1, 1))\nY_test = Y_scaler.transform(np.array(Y_test).reshape(-1,1))","c8d0fd01":"import catboost as cb\ntrain_dataset = cb.Pool(X_train, Y_train) \ntest_dataset = cb.Pool(X_test, Y_test)\nmodel = cb.CatBoostRegressor(loss_function=\"RMSE\")\ngrid = {'iterations': [100, 150, 200],\n        'learning_rate': [0.03, 0.1],\n        'depth': [2, 4, 6, 8],\n        'l2_leaf_reg': [0.2, 0.5, 1, 3]}\nmodel.grid_search(grid, train_dataset)\nY_pred = model.predict(X_test)\nprint('done')\n","ecafff2b":"<a id='eda_ford'><\/a>\n<h1 style=\"color:#004d4d\"><center>(Company D) Exploratory Data Analysis <\/center><\/h1>\n\n* [back to Index](#tc)","b8248b66":"<a id='tc'><\/a>\n* [Introduction](#introduction)\n* [Data Exploration](#data_exploration)\n* [Exploratory data analysis](#eda)\n  * [For Comapny A](#eda_fora)\n  * [For Comapny B](#eda_forb)\n  * [For Comapny C](#eda_forc)\n  * [For Comapny D](#eda_ford)\n  * [For Comapny E](#eda_fore)\n* [Building a Model and Predicting Prices](#prediction)\n  * [Transforming Data](#transforming)\n  * [Train Test Split](#tts)","35f0611c":"<a id='introduction'><\/a>\n<h1 style=\"background:#e6ffff;color:#004d4d\"><center>Introduction<\/center><\/h1>\n\n* [back to Index](#tc)","eac11def":"<a id='transforming'><\/a>\n<h1 style=\"color:#004d4d\"><center>Transforming Data<\/center><\/h1>\n\n* [back to Index](#tc)","0df178cb":"<a id='eda'><\/a>\n<h1 style=\"background:#e6ffff;color:#004d4d\"><center>Exploratory Data Analysis<\/center><\/h1>\n\n* [back to Index](#tc)","e0efe00a":"<a id='prediction'><\/a>\n<h1 style=\"background:#e6ffff;color:#004d4d\"><center>Price Prediction<\/center><\/h1>\n\n* [back to Index](#tc)","16c80654":"<a id='eda_forc'><\/a>\n<h1 style=\"color:#004d4d\"><center>(Company C) Exploratory Data Analysis <\/center><\/h1>\n\n* [back to Index](#tc)","09a3fc77":"<a id='eda_forb'><\/a>\n<h1 style=\"color:#004d4d\"><center>(Company B) Exploratory Data Analysis <\/center><\/h1>\n\n* [back to Index](#tc)","59c981f2":"<a id='data_exploration'><\/a>\n<h1 style=\"background:#e6ffff;color:#004d4d\"><center>Exploring the Dtata<\/center><\/h1>\n\n* [back to Index](#tc)","a7c952e2":"<a id='tts'><\/a>\n<h1 style=\"color:#004d4d\"><center>Train Test Split<\/center><\/h1>\n\n* [back to Index](#tc)","697c6c66":"<a id='eda_fore'><\/a>\n<h1 style=\"color:#004d4d\"><center>(Company E) Exploratory Data Analysis <\/center><\/h1>\n\n* [back to Index](#tc)","aae0f968":"<h1 style=\"background:#e6ffff;color:#004d4d\"><center>Please Upvote to Support<\/center><\/h1>","a6f275a3":"<a id='eda_fora'><\/a>\n<h1 style=\"color:#004d4d\"><center>(Company A) Exploratory Data Analysis <\/center><\/h1>\n\n* [back to Index](#tc)","6b1fcdf4":"![](https:\/\/images.unsplash.com\/photo-1588315029754-2dd089d39a1a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80)"}}