{"cell_type":{"d65a9a7b":"code","f51007ea":"code","fee67a31":"code","b0df640a":"code","39923dad":"code","2035bf6e":"code","4257ab51":"code","54c58c59":"code","edeacc93":"code","0b2f5754":"code","02b6b33d":"code","a4cd749c":"code","c7edad29":"code","4df83811":"code","91938356":"code","e82e6506":"code","10204e8d":"code","3e7117f7":"code","542d2caf":"code","5991ec00":"code","2478d61b":"code","544582bc":"code","8b1857a2":"code","d3127274":"code","a5c0c0e2":"code","6794b6cb":"code","bbfd6668":"code","0e929c9d":"code","aa7af5a5":"code","2b129115":"code","e17c9846":"code","dfe3a2b1":"code","ba691ee3":"code","1aeca32b":"code","01938ade":"code","af94a3d6":"code","5dc27918":"code","5d450862":"code","146b0f69":"code","c2c582c2":"code","6aac8aea":"code","a05d4824":"code","913f0586":"code","1ac276ef":"code","71cacade":"code","9c088383":"code","e5ebab55":"code","44ef470d":"code","8e48d233":"code","4d5b8417":"code","97f71f1e":"code","5fa3a5e0":"code","389b7366":"markdown","e12d6f44":"markdown","327c76ad":"markdown","0641cc50":"markdown","a5d5d830":"markdown","97196df6":"markdown","4ca7df3c":"markdown","baf4d5c4":"markdown","11fde095":"markdown","93d515a2":"markdown","ea37fbaa":"markdown","4c1d6386":"markdown","42f0f7a2":"markdown","2726ee55":"markdown","eb87627c":"markdown","81f5a3d7":"markdown","35242d45":"markdown","bdcfb40b":"markdown","20116f76":"markdown","feadd2ea":"markdown","b60858e8":"markdown","d82707ce":"markdown","20499b14":"markdown","9c4935bb":"markdown","a85d3088":"markdown","354c0e52":"markdown","0cccb08a":"markdown","fe2af466":"markdown","76c53245":"markdown","19527adb":"markdown","7884353c":"markdown","85c40d63":"markdown","4cb781ed":"markdown","c2c35205":"markdown","67a0a747":"markdown","9e2dce9f":"markdown","e527b3b7":"markdown","d389ed99":"markdown"},"source":{"d65a9a7b":"#import basic libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport plotly.plotly as py\nfrom plotly import tools\nimport plotly.figure_factory as ff\ninit_notebook_mode(connected=True)\n\nplt.style.use('fivethirtyeight')\n","f51007ea":"#import the dataset\ndata = pd.read_csv('..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\n#snapshot of data\ndata.head()","fee67a31":"#column datatypes\ndata.info()","b0df640a":"#counts of customer churn cases vs not churn in dataset\ntarget= data['Churn'].value_counts()\nlevels = ['No','Yes']\ntrace = go.Pie(labels=target.index,values=target.values,\n               marker=dict(colors=('orange','green')))\nlayout = dict(title=\"Telco Customer Churn Ratio\", margin=dict(l=150), width=500, height=500)\nfigdata = [trace]\nfig = go.Figure(data=figdata, layout=layout)\niplot(fig)\n#print target class counts\nprint(target)\n","39923dad":"#Let's visualize the churn on the basis of Gender\ndef bar_plot(col,data,barmode='group',width=800,height=600,color1='orange',color2='purple'):\n    values = list(data[col].value_counts().keys())\n    if values ==[0,1]:\n        data[col].replace(0,'No',inplace=True)\n        data[col].replace(1,'Yes',inplace=True)\n        values = list(data[col].value_counts().keys())\n    tr1 = data[data[col]==values[0]]['Churn'].value_counts().to_dict()\n    tr2 = data[data[col]==values[1]]['Churn'].value_counts().to_dict()\n    xx = ['Male', 'Female']\n    trace1 = go.Bar(y=[tr1['No'], tr2['No']], name=\"Not Churn\", x=values, marker=dict(color=color1))\n    trace2 = go.Bar(y=[tr1['Yes'], tr2['Yes']], name=\"Churn\", x=values, marker=dict(color=color2))\n    data = [trace1, trace2]\n    layout = go.Layout(\n        barmode=barmode,xaxis = dict(title=col),yaxis=dict(title='Count'),\n    title='Effect of '+ col + ' on Customer Churn',width=width,height=height)\n    fig = go.Figure(data=data, layout=layout)\n    iplot(fig)\n","2035bf6e":"#Comparison of churn between male and female\nbar_plot('gender',data)","4257ab51":"#Let's visualize the churn ratio for senior citizens\nbar_plot('SeniorCitizen',data,barmode='stack',width=600,height=400,color1='orange',color2='green')","54c58c59":"#let's visualize the impact of having partner on customer churn\nbar_plot('Partner',data,barmode='stack',width=600,height=400,color1='blue',color2='pink')","edeacc93":"#effect of having dependents on churn\nbar_plot('Dependents',data,barmode='stack',width=600,height=400)","0b2f5754":"#effect of phone service on churn\nbar_plot('PhoneService',data)","02b6b33d":"#let's check effect of PaperlessBilling\nbar_plot('PaperlessBilling',data)","a4cd749c":"# values = list(data['gender'].value_counts().keys())\n# tr1 = data[data['gender']==values[0]]['Churn'].value_counts().to_dict()\n# tr1['No']","c7edad29":"#counts of billing frequency or contacts\nfig = plt.gcf()\nfig.set_size_inches( 7, 5)\nplt.title('Counts of billing frequencies')\nsns.countplot(data['Contract'])\n","4df83811":"#Use of differnt Internet service lines\nfig = plt.gcf()\nfig.set_size_inches( 7, 5)\nplt.title('Counts of different interent service lines')\nsns.countplot(data['InternetService'])","91938356":"#Churn ratio with respect to internet service type\nfig = plt.gcf()\nplt.title('Churn ratio with respect to internet service type')\nfig.set_size_inches( 8, 6)\nsns.countplot(data['InternetService'],hue=data['Churn'])","e82e6506":"#counts of different bill payment methods using pie chart\ntarget= data['PaymentMethod'].value_counts()\nlevels = ['Electronic check','Mailed check','Bank transfer','Credit card']\ntrace = go.Pie(labels=target.index,values=target.values\n               )\nlayout = dict(title=\"Telco Customer Payment Method\", margin=dict(l=50), width=800, height=500)\nfigdata = [trace]\nfig = go.Figure(data=figdata, layout=layout)\niplot(fig)","10204e8d":"#Churn ratio analysis for different bill payment method\nfig = plt.gcf()\nfig.set_size_inches( 12, 8)\nplt.title('Churn ratio analysis for different bill payment method')\nsns.countplot(data['PaymentMethod'],hue=data['Churn'])","3e7117f7":"data['OnlineSecurity'].value_counts()","542d2caf":"internet_features = ['OnlineSecurity','OnlineBackup' ,'DeviceProtection' ,\n                     'TechSupport' ,'StreamingTV' ,'StreamingMovies','InternetService']","5991ec00":"#replace No internet service with No\ndata[internet_features]=data[internet_features].replace('No internet service','No')","2478d61b":"#let's verify it\ndata['OnlineSecurity'].value_counts()","544582bc":"#churn ratio for column Online security\nbar_plot('OnlineSecurity',data)","8b1857a2":"#Churn ratio for StreamingTV\nbar_plot('StreamingTV',data)","d3127274":"#churn ratio for people having StreamingMovie service\nbar_plot('StreamingMovies',data)","a5c0c0e2":"#Churn ratio for feature tech support\nbar_plot('TechSupport',data)","6794b6cb":"#churn ratio for column onlinebackup\nbar_plot('OnlineBackup',data)","bbfd6668":"plt.figure(figsize=(10,6))\nax = sns.boxplot(x='Churn', y = 'tenure', data=data)\nax.set_title('Effect of Tenure length on Churn', fontsize=18)\nax.set_ylabel('Tenure', fontsize = 15)\nax.set_xlabel('Churn', fontsize = 15)","0e929c9d":"plt.figure(figsize=(10,6))\nax = sns.boxplot(x='Churn', y = 'MonthlyCharges', data=data)\nax.set_title('Effect of Monthly Charges on Churn', fontsize=18)\nax.set_ylabel('Charges', fontsize = 15)\nax.set_xlabel('Churn', fontsize = 15)","aa7af5a5":"# Converting Total Charges to a numerical data type.\ndata.TotalCharges = pd.to_numeric(data.TotalCharges, errors='coerce')","2b129115":"#Let's check for nulls first\nnulls = data.isnull().sum()\nnulls[nulls > 0]","e17c9846":"#impute missing values with 0\ndata.fillna(0,inplace=True)","dfe3a2b1":"#new feature - Internet(Yes- have internet service, No- do not have internet service)\ndata['Internet'] = data['InternetService'].apply(lambda x : x if x=='No' else 'Yes')","ba691ee3":"data['Internet'].value_counts()","1aeca32b":"data['MultipleLines'].value_counts()","01938ade":"#replace No phone service with No\ndata['MultipleLines'].replace('No phone service','No',inplace=True)","af94a3d6":"#train and target\ny = data['Churn'].map({'Yes':1,'No':0})\nX = data.drop(labels=['Churn','customerID'],axis=1).copy()","5dc27918":"#find list of categorical columns for encoding\ncat_cols = []\nfor column in X.columns:\n    if column not in ['tenure','MonthlyCharges','TotalCharges']:\n        cat_cols.append(column)","5d450862":"#Convert categorical columns to binary\nX= pd.get_dummies(X,columns=cat_cols)\n","146b0f69":"#shape after conversion of categorical features\nX.head()","c2c582c2":"#import ML models and metrics\nfrom sklearn.metrics import f1_score,roc_curve\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC","6aac8aea":"#create seperate train and test splits for validation\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","a05d4824":"#create function for validation and return accuracy and roc-auc score\ndef evaluate_model(model):\n    model.fit(X_train,y_train)\n    prediction_test = model.predict(X_test)\n    accuracy = metrics.accuracy_score(y_test, prediction_test)\n    rocauc = metrics.roc_auc_score(y_test, prediction_test)\n    return accuracy,rocauc,prediction_test","913f0586":"# Running logistic regression model\nfrom sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(C=0.1)\nacc,rocauc,testpred_lr  = evaluate_model(lr)\nprint('Logistic Regression...')\nprint('Accuracy score :',acc)\nprint('ROC-AUC score :',rocauc)","1ac276ef":"rf =RandomForestClassifier()\nrf.fit(X_train,y_train)\nacc,rocauc,testpred_rf  = evaluate_model(rf)\nprint('Random Forest...')\nprint('Accuracy score :',acc)\nprint('ROC-AUC score :',rocauc)","71cacade":"#set up search grid\n#Number of search trees\nn_estimators=range(50,100)\n# Number of features to consider at every split\nmax_features = ['auto', 'sqrt']\n# Maximum number of levels in tree\nmax_depth = range(4,8)\n# Minimum number of samples required to split a node\nmin_samples_split = range(2,6)\n# Minimum number of samples required at each leaf node\nmin_samples_leaf = range(1,5)\n# Method of selecting samples for training each tree\nbootstrap = [True, False]\n#criterion\ncriterion=['gini','entropy']\n#create the random grid\nrandom_grid = {'n_estimators':n_estimators,\n              'max_features':max_features,\n              'max_depth':max_depth,\n              'min_samples_split':min_samples_split,\n              'min_samples_leaf':min_samples_leaf,\n              'bootstrap':bootstrap,\n              'criterion':criterion}\nprint(random_grid)","9c088383":"# Use the random grid to search for best hyperparameters\n# First create the base model to tune\nrf = RandomForestClassifier(random_state=2018)\n\n# Random search of parameters, using 3 fold cross validation, \n# search across 100 different combinations, and use all available cores\nrf_random = RandomizedSearchCV(estimator = rf, param_distributions = random_grid, cv = 3, verbose=2, n_iter=100,random_state=42, n_jobs = -1)\n\n# Fit the random search model\nrf_random.fit(X_train,y_train)","e5ebab55":"#best params\nparams = rf_random.best_params_\nparams","44ef470d":"rfc = RandomForestClassifier(**params,random_state=42)\nrfc.fit(X_train,y_train)\nacc,rocauc,testpred_rfc  = evaluate_model(rfc)\nprint('Random Forest Optimized...')\nprint('Accuracy score :',acc)\nprint('ROC-AUC score :',rocauc)","8e48d233":"indices = np.argsort(rfc.feature_importances_)[::-1]\nindices = indices[:45]\n\n# Visualise these with a barplot\nplt.subplots(figsize=(20, 15))\ng = sns.barplot(y=X.columns[indices], x = rfc.feature_importances_[indices], orient='h')\ng.set_xlabel(\"Relative importance\",fontsize=12)\ng.set_ylabel(\"Features\",fontsize=12)\ng.tick_params(labelsize=9)\ng.set_title(\"RandomForest feature importance\");","4d5b8417":"#we define a plot_multiple_roc to visualise all the model curves together\n\ndef plot_multiple_roc(y_preds, y_test, model_names):\n    \n    fig, ax = plt.subplots(figsize=(8, 8))\n    \n    \n    for i in range (0, len(y_preds)):\n        false_positive_rate, true_positive_rate, threshold = roc_curve(y_test, y_preds[i])\n        label = \"\"\n        if len(model_names) > i:\n            label = model_names[i]\n        ax.plot(false_positive_rate, true_positive_rate, label=label)\n    ax.plot([0, 1], [0, 1], 'k--', linewidth=.5)\n    ax.grid(True)\n    \n    ax.set(title='ROC Curves for telecom customer churn problem',\n           xlabel = 'False positive Rate', ylabel = 'True positive rate')\n        \n    if len(model_names) > 0:\n        plt.legend(loc=4)","97f71f1e":"validation_probs_fs = []\nvalidation_probs_fs.append(testpred_lr)\nvalidation_probs_fs.append(testpred_rfc)","5fa3a5e0":"all_models_names = ['logistic reg', 'Random_forest']\nplot_multiple_roc(validation_probs_fs, y_test, all_models_names)","389b7366":"Churn rate for senior citizens is significanlty higher as compared to non-senior citizens.","e12d6f44":"People not haivng paperless billing have higher churn ratio as compared to having paperless billing. Also, more people have paperless billing. It's good that people prefer eco-friendly bills!","327c76ad":"People not having tech support have higher churn ratio as compared to having it. May be telecom company can provide some discount on tech support charges so that more customer can avail it.","0641cc50":"Clearly churn ratio for customers not having online security feature is higher in comparison to those having it.","a5d5d830":"Around one third customer use Electronic check to pay their telecom bills.","97196df6":"### Modelling","4ca7df3c":"Most of the people have monthly billing cycle.","baf4d5c4":"We can see that ROC AUC for logistic regression is more than random forest. So , __Logistic regression__ is winner here!","11fde095":"Here in above column OnlineSecurity, we can replace No internet service with No .Similar is the case with other columns like OnlineBackup ,DeviceProtection ,TechSupport ,StreamingTV ,StreamingMovies.","93d515a2":"#### Here till now, Logistic regression is performing better than RandomForest(with default parameters). Let's try tuning parameters for random forest using Random search.","ea37fbaa":"In pie-chart, we can see from data we have, 26.5% of total customers in dataset churn. ","4c1d6386":"### Telco Customer Churn Analysis ","42f0f7a2":"#### Random forest Classifier","2726ee55":"Customer churning are paying more monthly charges as compared to non-churn customers.","eb87627c":"### Exploratory Data Analysis","81f5a3d7":"#### ROC curve for both models","35242d45":"It is clear that churn ratio for people paying bill using Electronic check is much higher as compared to other payment methods.","bdcfb40b":"### Conclusion","20116f76":"People using Fiber optic line for internet have higher churn ratio as compared to having DSL line internet.","feadd2ea":"##### Parameter Tuning for random Forest","b60858e8":"There is almost no difference in churn ratio for male and female.","d82707ce":"Most of the people who have internet service uses fiber optic lines.","20499b14":"Churn ratio for people having Streaming TV servie is higher as compared to those not having it.","9c4935bb":"Customer churn - or attrition - measures the number of clients who discontinue a service (cellphone plan, bank account, SaaS application...) or stop buying products (retail, e-commerce...) in a given time period. This dataset for Telecom customer churn is picked up from [IBM Watson Sample datasets](https:\/\/www.ibm.com\/communities\/analytics\/watson-analytics-blog\/guide-to-sample-datasets\/). \n\nThis dataset contains total 7043 records. Each record is unique for a customer identified using feature customerID. Here the target column on which we will peform classification is Churn which tells whether customer churn or not. Dataset contain total 21 columns whose details are below: \n\n__customerID__ - Customer ID uniquly identifying record of a customer\n\n__gender__ - Customer gender (female, male)\n\n__SeniorCitizen__ - Whether the customer is a senior citizen or not (1, 0)\n\n__Partner__ - Whether the customer has a partner or not (Yes, No)\n\n__Dependents__ - Whether the customer has dependents or not (Yes, No)\n\n__tenure__ - Number of months the customer has stayed with the company\n\n__PhoneService__ - Whether the customer has a phone service or not (Yes, No)\n\n__MultipleLines__ - Whether the customer has multiple lines or not (Yes, No, No phone service)\n\n__InternetService__ - Customer\u2019s internet service provider (DSL, Fiber optic, No)\n\n__OnlineSecurity__ - Whether the customer has online security or not (Yes, No, No internet service)\n\n__OnlineBackup__ - Whether the customer has online backup or not (Yes, No, No internet service)\n\n__DeviceProtection__ - Whether the customer has device protection or not (Yes, No, No internet service)\n\n__TechSupport__ - Whether the customer has tech support or not (Yes, No, No internet service)\n\n__StreamingTV__ - Whether the customer has streaming TV or not (Yes, No, No internet service)\n\n__StreamingMovies__ - Whether the customer has streaming movies or not (Yes, No, No internet service)\n\n__Contract__ -The contract term of the customer (Month-to-month, One year, Two year)\n\n__PaperlessBilling__ - Whether the customer has paperless billing or not (Yes, No)\n\n__PaymentMethod__ - The customer\u2019s payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))\n\n__MonthlyCharges__ - The amount charged to the customer monthly\n\n__TotalCharges__ - The total amount charged to the customer\n\n__Churn__ -Whether the customer churned or not (Yes or No)\n","a85d3088":"People who don't have online backup service have higher churn ratio as compared to people having it.","354c0e52":"##### Feature Importance - random forest","0cccb08a":"### Import libraries and dataset","fe2af466":"First observation from above graph is most of the people have Phone Service.Those who don't have may be are only using Internet service of the telecom company.Also, people having phone service have higher churn ratio.","76c53245":"#### Updates","19527adb":"Like StreamingTV, Churn ratio for people having StreamingMovies service is higher.It seems these two online services are major factor for churn.","7884353c":"From accuracy scores of all 2 models, we can see that __Logistic regression__\noutperforms other models.Some of the key takeaways from EDA and data analysis are :\n1. There is no difference in churn ratio for male and female.\n2. Churn ratio for senior citizens is significantly higher. Company must focus on some specific needs of senior citizens.\n3. People with paperless billing have higher churn ratio! May be the people having their bills deliverd in hard copy(paper)are loyal customers of the company.\n4. People paying bills via Electronic check have higher churn ratio. Company must focus on them and ask them if they are facing any difficulties in paying bills via electronic check or not?\n5. People not having TechSupport from the telecom company have higher churn rate. If company is charging high rates for TechSupport, then they must consider giving some discounts on them so that customers can avail the service.","85c40d63":"From above bar chart, we can see that churn ratio for people having partners is lower than that of the one not having a partner.","4cb781ed":"People without any dependent have higher churn ratio as compared to one's having dependents.","c2c35205":"1. Updated with common function for model evaluation and changed parameter grid for random forest.","67a0a747":"#### Here by going through data description, we have 4 numeric variables and 17 categorical variables(including target).","9e2dce9f":"#### Logistic regression","e527b3b7":"It seems that customer churn in initial period more(over 10 months). Company must put some extra focus on new customers having tenure over 10 months.","d389ed99":"### Feature engineering"}}