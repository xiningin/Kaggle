{"cell_type":{"910557ac":"code","59fd9c54":"code","5c449927":"code","d7db8161":"code","0699b251":"code","f700bea6":"code","fc939386":"code","e3a6cbc8":"code","64b3840a":"code","8f39d637":"code","ed47ea1d":"code","4c95ab1d":"code","43b7908b":"code","57bb62ae":"code","352e63ff":"code","e2a2a10f":"code","ed4b4cba":"code","1496ac1a":"markdown","95a33695":"markdown","a11e3117":"markdown","ff4600f7":"markdown","dcaa1fa8":"markdown","82c532e4":"markdown","10b35c7e":"markdown","d27031cb":"markdown","36154e44":"markdown","505dbb64":"markdown","1cec0c9b":"markdown","e2d8fd88":"markdown","9c553793":"markdown","1428ce13":"markdown","6f326d6a":"markdown","e8ffa2dd":"markdown","2feb23a6":"markdown","41a640f2":"markdown","3811ae92":"markdown","02f02f86":"markdown","d7434b0b":"markdown","1e9d5443":"markdown"},"source":{"910557ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59fd9c54":"creditCard_csv = '\/kaggle\/input\/default-of-credit-card-clients-dataset\/UCI_Credit_Card.csv'\n\ncreditCard_df = pd.read_csv(creditCard_csv)\ntarget = 'default.payment.next.month'\ncreditCard_df.head()\n","5c449927":"creditCard_df.info()","d7db8161":"creditCard_df.describe()","0699b251":"def drawCountOnBar(axes, orient = \"v\"):\n    for p in axes.patches:\n        if orient == \"v\":\n            height = p.get_height()\n            axes.text(x = p.get_x()+p.get_width()\/2., y = height + 1 ,s = height ,ha=\"center\")\n        else:\n            width = p.get_width()\n            axes.text(x = p.get_x() + width, y = p.get_y() + p.get_height()\/2 ,s = width ,ha=\"left\")","f700bea6":"defaultPaymentsCount = creditCard_df[target].value_counts()\ndefaultPaymentsCount = defaultPaymentsCount.rename(index = {0: \"Non - Default\", 1: \"Default\"})\naxes = defaultPaymentsCount.nlargest().plot(kind='bar', title='default payment distribution')\naxes.set_xlabel('default payment')\naxes.set_ylabel('Count')\ndrawCountOnBar(axes)\n\nprint(defaultPaymentsCount.nlargest())\nprint(\"default.payment.next.month is {}%\".format(100 * defaultPaymentsCount[1]\/sum(defaultPaymentsCount)))","fc939386":"fig=plt.figure(figsize=(20,15))\naxes=fig.add_axes([0,0,0.8,0.8])\nsns.heatmap(creditCard_df.corr(),annot=True,cmap=\"viridis\")","e3a6cbc8":"column = 'LIMIT_BAL'\nlimitBalanceCounts = creditCard_df[column].value_counts()\n\naxes = limitBalanceCounts.nlargest(n=10).plot(kind='barh', title='Credit limit issued to Customers (Top 10)')\naxes.set_xlabel('Count')\naxes.set_ylabel('Credit limit')\ndrawCountOnBar(axes, orient = \"h\")","64b3840a":"print(\"Correlation of LIMIT BAL: {}\".format(creditCard_df.corr()[target][column]))","8f39d637":"axes = limitBalanceCounts.nsmallest(n=10).plot(kind='barh', title='Credit limit issued to Customers (Bottom 10)')\naxes.set_xlabel('Count')\naxes.set_ylabel('Credit limit')\ndrawCountOnBar(axes, orient = \"h\")","ed47ea1d":"sns.boxplot(x = target, y= column, data = creditCard_df)","4c95ab1d":"column = 'SEX'\ngenderCounts = creditCard_df[column].value_counts()\ngenderCounts = genderCounts.rename(index = {1: \"Male\", 2: \"Female\"})\n\naxes = genderCounts.nlargest().plot(kind='barh', title='Gender distribution')\naxes.set_xlabel('Count')\naxes.set_ylabel('Gender')\n\ndrawCountOnBar(axes, orient = \"h\")","43b7908b":"axes = sns.countplot(x=target, data=creditCard_df, hue='SEX');\n\naxes.set_title(\"Gender - Default Payment Next month\")\naxes.set_ylabel(\"Count\")\naxes.set_xlabel(\"Default Payment Next month\")\naxes.set_xticklabels(['Yes','No'])\ndrawCountOnBar(axes, orient = \"v\")\n","57bb62ae":"column = 'EDUCATION'\neducationCounts = creditCard_df[column].value_counts()\n\neducationCounts = educationCounts.rename(index = {1 : \"graduate school\", 2 : \"university\", 3 : \"high school\", 4 : \"others\", 5 : \"unknown\", 6 : \"unknown\"})\naxes = educationCounts.nlargest(n=10).plot(kind='bar', title='Stats of Education Categories')\naxes.set_xlabel('Count')\naxes.set_ylabel('Education')\ndrawCountOnBar(axes, orient = \"v\")\nplt.show()\n\n\naxes = sns.countplot(x=column, data=creditCard_df, hue='SEX');\naxes.set_title('Stats of Education Categories by Sex')\ndrawCountOnBar(axes, orient = \"v\")","352e63ff":"column = 'MARRIAGE'\neducationCounts = creditCard_df[column].value_counts()\n\neducationCounts = educationCounts.rename(index = {1 : \"Married\", 2 : \"Single\", 3 : \"Others\"})\naxes = educationCounts.nlargest(n=10).plot(kind='barh', title='Stats of categories in Marital Status')\naxes.set_xlabel('Count')\naxes.set_ylabel('Marriage')\ndrawCountOnBar(axes, orient = \"h\")\nplt.show()","e2a2a10f":"column = 'AGE'\nprint(creditCard_df[column].describe())\n\neducationCounts = creditCard_df[column].value_counts()\n\naxes = educationCounts.nlargest(n=10).plot(kind='barh', title='Stats of Clients by Age (Top 10)')\naxes.set_xlabel('Count')\naxes.set_ylabel('Age')\ndrawCountOnBar(axes, orient = \"h\")\nplt.show()\n\naxes = educationCounts.nsmallest(n=10).plot(kind='barh', title='Stats of Clients by Age (Lower 10)')\naxes.set_xlabel('Count')\naxes.set_ylabel('Age')\ndrawCountOnBar(axes, orient = \"h\")\nplt.show()","ed4b4cba":"Pay = [\"PAY_0\"] + [\"PAY_{}\".format(index) for index in range(2, 7)]\n\nfor pay in Pay:\n    plot_graph = sns.FacetGrid(creditCard_df, col=target)\n    plot_graph.map(sns.countplot, pay)\n    plt.show()","1496ac1a":"It appears like people had higher limit tends to not pay their due next month","95a33695":"### Sex \n\nGender (1=male, 2=female)","a11e3117":"1. 22.12% of Payment Default (1) and 78.88% of Payment Non-Default (0) is definitely and imbalanced dataset. Before going for training, this issue has to be addressed","ff4600f7":"Gender doesn't seems to have much impact to next payment","dcaa1fa8":"## Read","82c532e4":"### LIMIT_BAL","10b35c7e":"# Questions\n1. How does the probability of default payment vary by categories of different demographic variables?\n2. Which variables are the strongest predictors of default payment?","d27031cb":"LIMIT BAL appears to have lesser impact on Default","36154e44":"Surely, we have a category (0) that wasn't described in dataset source","505dbb64":"## Glance","1cec0c9b":"So, there are more female lenders in our data","e2d8fd88":"### Marriage\nMarital status (1=married, 2=single, 3=others)","9c553793":"## Obseravtions\n\n1) More female lenders\n\n2) More Single and young lenders\n","1428ce13":"### AGE\nAge in years","6f326d6a":"## Queries\n\n1) what is value 0 in Education?","e8ffa2dd":"There are more customer who has 50000NT dollars as the limit which is almost twice than the number of customers having limit as 20000 dollars","2feb23a6":"## Data Source\nhttps:\/\/www.kaggle.com\/uciml\/default-of-credit-card-clients-dataset","41a640f2":"### Education\n(1=graduate school, 2=university, 3=high school, 4=others, 5=unknown, 6=unknown)","3811ae92":"### PAY\nPAY_X: Repayment status in September, 2005 (-1=pay duly, 1=payment delay for one month, 2=payment delay for two months, \u2026 8=payment delay for eight months, 9=payment delay for nine months and above\n\n* PAY_2: Repayment status in August, 2005 (scale same as above)\n* PAY_3: Repayment status in July, 2005 (scale same as above)\n* PAY_4: Repayment status in June, 2005 (scale same as above)\n* PAY_5: Repayment status in May, 2005 (scale same as above)\n* PAY_6: Repayment status in April, 2005 (scale same as above)","02f02f86":"NT Dollars - The New Taiwan dollar is the official currency used in Taiwan","d7434b0b":"creditCard_df.info() says we don't have any null values and there's no non-numerical datas","1e9d5443":"Can see that youngsters are the major lenders"}}