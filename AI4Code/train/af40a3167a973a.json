{"cell_type":{"98afd807":"code","f85081f7":"code","cc8d5192":"code","910f6515":"code","417d5fb4":"code","0d3b5126":"code","3ea2cabb":"code","98811d14":"code","bf38a046":"code","9dae457e":"code","cd79ea6a":"code","08750b8d":"code","e644f74a":"code","07947e24":"code","1140318b":"markdown","a6180c2c":"markdown","545806af":"markdown","a4b7934c":"markdown","708eb0e3":"markdown","22c5ce7f":"markdown","b58d72ef":"markdown","2a6b43a5":"markdown","dc9e0f20":"markdown","677975f7":"markdown","37233369":"markdown","140d1d5d":"markdown","97fb2bdc":"markdown","8d5da72b":"markdown"},"source":{"98afd807":"import numpy as np\nimport pandas as pd\nimport plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","f85081f7":"data = pd.read_csv(\"..\/input\/Iris.csv\")","cc8d5192":"data.info()","910f6515":"data.head()","417d5fb4":"data_sorted_bySW = data.sort_values('SepalWidthCm')\ndata_sorted_byPL = data.sort_values('PetalLengthCm')\ndata_sorted_byPW = data.sort_values('PetalWidthCm')","0d3b5126":"df = data.iloc[:100, :]\n\nbySW = go.Scatter(\n                    x = data_sorted_bySW.SepalWidthCm,\n                    y = data_sorted_bySW.SepalLengthCm,\n                    mode = \"markers\",\n                    name = \"Sepal Width (cm)\",\n                    marker = dict(color = 'rgba(255, 0, 0, 0.9)'),\n                    text = data_sorted_bySW.Species\n)\n\nbyPL = go.Scatter(\n                    x = data_sorted_byPL.PetalLengthCm,\n                    y = data_sorted_byPL.SepalLengthCm,\n                    mode = \"markers\",\n                    name = \"Petal Length (cm)\",\n                    marker = dict(color = 'rgba(0, 255, 0, 0.9)'),\n                    text = data_sorted_byPL.Species\n)\n\nbyPW = go.Scatter(\n                    x = data_sorted_byPW.PetalWidthCm,\n                    y = data_sorted_byPW.PetalWidthCm,\n                    mode = \"markers\",\n                    name = \"Petal Width (cm)\",\n                    marker = dict(color = 'rgba(0, 0, 255, 0.9)'),\n                    text = data_sorted_byPW.Species\n)\n\nlayout = dict(title = 'Change of Sepal Length by Other Properties',\n              xaxis= dict(title= 'centimeters',ticklen= 5,zeroline= False)\n             )\nu = [bySW, byPL, byPW]\nfig = dict(data = u)\niplot(fig)\n","3ea2cabb":"data1 = data.groupby(data.Species).mean()\ndata1['Species'] = data1.index\n\nt1 = go.Bar(\n            x = data1.Species,\n            y = data1.SepalLengthCm,\n            name = \"Sepal Length (cm)\",\n            marker = dict(color = 'rgba(160, 55, 0, 0.8)', line = dict(color = 'rgb(0,0,0)', width = 1.5)),\n            text = data1.Species\n)\n\nt2 = go.Bar(\n            x = data1.Species,\n            y = data1.SepalWidthCm,\n            name = \"Sepal Width (cm)\",\n            marker = dict(color = 'rgba(0, 55, 160, 0.8)', line = dict(color = 'rgb(0,0,0)', width = 1.5)),\n            text = data1.Species\n)\n\nt3 = go.Bar(\n            x = data1.Species,\n            y = data1.PetalLengthCm,\n            name = \"Petal Length (cm)\",\n            marker = dict(color = 'rgba(20, 55, 30, 0.8)', line = dict(color = 'rgb(0,0,0)', width = 1.5)),\n            text = data1.Species\n)\n\nt4 = go.Bar(\n            x = data1.Species,\n            y = data1.PetalWidthCm,\n            name = \"Petal Width (cm)\",\n            marker = dict(color = 'rgba(70, 55, 160, 0.8)', line = dict(color = 'rgb(0,0,0)', width = 1.5)),\n            text = data1.Species\n)\n\nb = [t1,t2,t3,t4]\nlayout_bar = go.Layout(barmode = \"group\")\nfig_bar = go.Figure(data = b, layout = layout_bar)\niplot(fig_bar)","98811d14":"fig_bubble = [\n    {\n        'x' : data.PetalLengthCm,\n        'y' : data.PetalWidthCm,\n        'mode' : 'markers',\n        'marker' : {\n            'color' : data.SepalWidthCm,\n            'size' : data.SepalLengthCm,\n            'showscale' : True\n        },\n        'text' : data.Species\n    }\n]\niplot(fig_bubble)","bf38a046":"t1_box = go.Box(\n                name = 'Sepal Length (cm)',\n                y = data.SepalLengthCm,\n                marker = dict(color = 'rgba(160,160,50,0.7)')\n)\n\nt2_box = go.Box(\n                name = 'Sepal Width (cm)',\n                y = data.PetalWidthCm,\n                marker = dict(color = 'rgba(50,160,150,0.7)')\n)\n\nt3_box = go.Box(\n                name = 'Petal Length (cm)',\n                y = data.PetalLengthCm,\n                marker = dict(color = 'rgba(160,60,150,0.7)')\n)\n\nt4_box = go.Box(\n                name = 'Petal Width (cm)',\n                y = data.SepalWidthCm,\n                marker = dict(color = 'rgba(150,160,150,0.7)')\n)\n\nfig_box = [t1_box, t2_box, t3_box, t4_box]\n\niplot(fig_box)","9dae457e":"import plotly.figure_factory as ff\ndata_ff = data.loc[:, ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\ndata_ff['index'] = np.arange(1, len(data_ff)+1)\n\nfig_ff = ff.create_scatterplotmatrix(data_ff, diag = 'box', index = 'index', colormap = 'Blues', colormap_type = 'cat', height = 800, width = 800)\niplot(fig_ff)","cd79ea6a":"trace_3d = go.Scatter3d(\n                        x = data.SepalLengthCm,\n                        y = data.SepalWidthCm,\n                        z = data.PetalLengthCm,\n                        mode = 'markers',\n                        opacity = 0.7,\n                        #name = data.Species,\n                        marker = dict(\n                                    size = 5,\n                                    color = data.PetalWidthCm\n                        )\n)\n\nlist_3d = [trace_3d]\n\nfig_3d = go.Figure(data = list_3d)\niplot(fig_3d)","08750b8d":"i_setosa = data[data['Species']  == 'Iris-setosa']\ni_versicolor = data[data['Species']  == 'Iris-versicolor']\ni_virginica = data[data['Species']  == 'Iris-virginica']","e644f74a":"# Iris-setosa\ntrace_setosa = go.Scatter3d(\n                        x = i_setosa.SepalLengthCm,\n                        y = i_setosa.SepalWidthCm,\n                        z = i_setosa.PetalLengthCm,\n                        mode = 'markers',\n                        opacity = 0.7,\n                        name = \"Iris-setosa\",\n                        marker = dict(\n                                    size = 5,\n                                    color = 'rgba(255,102, 255,0.8)'\n                        )\n)\n\n# Iris-versicolor\ntrace_versicolor = go.Scatter3d(\n                        x = i_versicolor.SepalLengthCm,\n                        y = i_versicolor.SepalWidthCm,\n                        z = i_versicolor.PetalLengthCm,\n                        mode = 'markers',\n                        opacity = 0.7,\n                        name = \"Iris-versicolor\",\n                        marker = dict(\n                                    size = 5,\n                                    color = 'rgba(102, 255, 51, 0.8)'\n                        )\n)\n\n# Iris-virginica\ntrace_virginica = go.Scatter3d(\n                        x = i_virginica.SepalLengthCm,\n                        y = i_virginica.SepalWidthCm,\n                        z = i_virginica.PetalLengthCm,\n                        mode = 'markers',\n                        opacity = 0.7,\n                        name = \"Iris-virginica\",\n                        marker = dict(\n                                    size = 5,\n                                    color = 'rgba(51, 102, 255, 0.8)'\n                        )\n)\n\nlist_3d = [trace_setosa, trace_versicolor, trace_virginica]\n\nfig_3d = go.Figure(data = list_3d)\niplot(fig_3d)","07947e24":"data.head()","1140318b":"## Boxplot\nBoxplot is always the best choice, if we want to get some statistical information from the data.","a6180c2c":"## Scatterplot Matrix\nNow let's examine the relations by crosschecking each feature by scatterplot matrix.","545806af":"As we can clearly observe from the barplot above; Sepal Length, Petal Length and Petal Width features grow as we walk in species Iris-setosa, Iris-versicolor and Iris-virginica, respectively.","a4b7934c":"As we can conclude from the graph above, clustering flowers due to their features would make sense at its finest!","708eb0e3":"Dataframe contains 150 rows and 6 columns. Seems like each row corresponds to an individual flower. The columns in this dataset are:  \n\n* `Id`\n* `SepalLengthCm`\n* `SepalWidthCm`\n* `PetalLengthCm`\n* `PetalWidthCm`\n* `Species`","22c5ce7f":"## Bar Plot\nLet's visualize each species' average lengths, so we will be able to see how features change as genre of the flower changes.","b58d72ef":"* Petal Width has a short range from 2 to 4.4, with some outliers.\n* Petal Length has a wide range between 1 cm and 6.9 cm, but without outliers.","2a6b43a5":"Let's take a glimpse at the samples in this dataset:","dc9e0f20":" ## Scatter Plot\nScatter plot is a good way to visualize the correlations among features. I will be examining the correlation of `SepalLengthCm` with other features. So Sepal Length will be our y-axis, others will be laying on the x-axis. And I sorted and kept them in distinct dataframes to see correlations clearly.","677975f7":"# Visualization of the Iris Species via plotly\n\nIris Species is a simple and beautiful dataset which can be easily visualized with a strong visualization library, **plotly**.  \n\nI will be using plotly's appropriate functions to visualize the iris species data, and then make some conclusions.","37233369":"## Bubble Chart\nNow I want to visualize all four attributes in one chart. Bubble chart is an appropriate way of visualization for this kind of purposes.  \nLet's decide what each parameter corresponds to:  \n`x` : `PetalLengthCm`  \n`y` : `PetalWidthCm`  \n`color` : `SepalWidthCm`  \n`size` : `SepalLengthCm`","140d1d5d":"* Seems like Petal Width and Sepal Length has a very strong correlation.  \n* We can say there is a correlation between Petal Length and Sepal Length, but not like the one above.  \n* There is no correlation between the Sepal Length and Sepal Width.","97fb2bdc":"Since trying to use `name` parameter with `data.Species` giving `ValueError`, I decided to eliminate the color part of 3D graph, and plot them as different traces.  \n\n`Iris-setosa` : pink  \n`Iris-versicolor` : lime  \n`Iris-virginica` : blue","8d5da72b":"## 3D Scatter\nLet's jump into third dimension, and decide what each variable correspond to:  \n`x` : `SepalLengthCm`  \n`y` : `SepalWidthCm`  \n`z` : `PetalLengthCm`  \n`color` : `PetalWidthCm`"}}