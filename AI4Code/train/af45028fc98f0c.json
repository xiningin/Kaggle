{"cell_type":{"8dad164d":"code","ce42c417":"code","151af94a":"code","74dc6558":"code","56fabd90":"code","b0e1d983":"code","6cf5c713":"code","b0fd123f":"code","baee6784":"code","6fd18a0f":"code","d538a444":"markdown","1bd60542":"markdown","803c01e8":"markdown","28116c0b":"markdown","e8f40255":"markdown"},"source":{"8dad164d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\/\"))","ce42c417":"child=pd.read_csv('..\/input\/child_wishlist_v2.csv',header=None,index_col=0)\nchildArray=child.values\n#childArray=np.fliplr(childArray)","151af94a":"gift=pd.read_csv('..\/input\/gift_goodkids_v2.csv',header=None,index_col=0)\ngiftArray=gift.values\n#giftArray=np.fliplr(giftArray)","74dc6558":"submitReader=pd.read_csv('..\/input\/sample_submission_random_v2.csv')\n#submitReader=pd.read_csv('..\/input\/santa-gift-matching\/sample_submission_random_v2.csv')\nsubmit=submitReader","56fabd90":"def childListPosition(whichChild,whichGift):\n    temp=np.argwhere(childArray[whichChild]==whichGift)\n    if temp.size>0:\n        return temp[0][0]+1\n    else:\n        return 0\n\ndef giftListPosition(whichGift,whichChild):\n    temp=np.argwhere(giftArray[whichGift]==whichChild)\n    if temp.size>0:\n        return temp[0][0]+1\n    else:\n        return 0\n    \n    \n    \ndef childScore(whichChild,whichGift):\n    position=childListPosition(whichChild,whichGift)\n    if position>0:\n        return (100-position-1)*2\n    else:\n        return -1\n\ndef giftScore(whichGift,whichChild):\n    position=childListPosition(whichGift,whichChild)\n    if position>0:\n        return (1000-position-1)*2\n    else:\n        return -1    \n\n\ndef score(whichChild,whichGift):\n    tempa=childScore(whichChild,whichGift)\n    tempb=giftScore(whichGift,whichChild)\n    return tempa*1+tempb*1 #replace 1 to weights","b0e1d983":"def changePosition(positionA,positionB):\n    tempa=submit.iloc[positionA][1]\n    tempb=submit.iloc[positionB][1]\n    submit.iloc[positionA][1]=tempb\n    submit.iloc[positionB][1]=tempa\n    return     ","6cf5c713":"def currentScore(childA,childB):\n    giftA=submit.iloc[childA][1]\n    giftB=submit.iloc[childB][1]\n    scoreA=score(childA,giftA)\n    scoreB=score(childB,giftB)\n    return scoreA+scoreB\n\ndef predictScore(childA,childB):\n    giftA=submit.iloc[childA][1]\n    giftB=submit.iloc[childB][1]\n    scoreA=score(childA,giftB)\n    scoreB=score(childB,giftA)\n    return scoreA+scoreB   ","b0fd123f":"def agent(childA,childB):\n    tempA=currentScore(childA,childB)\n    tempB=predictScore(childA,childB)\n    if tempA>tempB:\n        return 0\n    elif tempA==tempB:\n        changePosition(childA,childB)\n    elif tempA<tempB:\n        changePosition(childA,childB)\n        print('childA:'+str(childA)\n              +' childB:'+str(childB)\n              +' currentScore:'+str(tempA)\n              +' predictScore:'+str(tempB)\n              +' improved:'+str(tempB-tempA)\n             )\n    else:\n        return 1\n        ","baee6784":"for i in range(1000000):  # make the number biger \n    dice=np.random.randint(45001,1000000,2)\n    agent(dice[0],dice[1])","6fd18a0f":"submit.to_csv('submit.csv',index=None)","d538a444":"Strategy is very easy:\nProduce 2 random number represent 2 kids.\nCalculate current score.\nCalculate if change 2 kid\u2019s gifts, what score will show up.\nIf score shows we could get some good result, then do it, or do nothing. ","1bd60542":"---------------------------------------------------------------------","803c01e8":"-------------------------------------------","28116c0b":"--------------------------------------------------------------------","e8f40255":"    -----------------------------------"}}