{"cell_type":{"4653446d":"code","a1fabf7f":"code","7a190a40":"code","6b83bd49":"code","a1b26ad6":"code","629855c5":"code","61c25383":"code","a555580c":"code","d0a3bbb8":"code","2156682f":"code","da777314":"code","1bea7146":"code","3852cdf0":"code","d52d6f68":"code","3ddb36b4":"code","2a678725":"code","23eb4fb3":"markdown","911fe766":"markdown","07a94ac2":"markdown","a3d65356":"markdown","78d49f28":"markdown"},"source":{"4653446d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output\n\n# Try prophet as seen in https:\/\/www.kaggle.com\/samuelbelko\/predicting-prices-of-avocados\nfrom fbprophet import Prophet\n# Not sure what this does - show graphs in line?\n%matplotlib inline\n\n","a1fabf7f":"# From the above, I have the data for this dataset. Read it in, and do some simple examinations\ndata = pd.read_csv('..\/input\/Jan20_NDXT.csv')\n\n# First 10 records\ndata.head()\n\n\n\n","7a190a40":"# Info on the columns - For some reason if I do this in the above, I only see output for one of them so \n# I do separately\ndata.info()\n\n#Desc","6b83bd49":"# Not alot of data, but we are just playing around for now, let's look at max\/min and if there are any \n# null values\ndata.describe()","a1b26ad6":"data['DailyDif'] = data['NDXT Close'] - data['NDXT Open']\ndata['DailyRange'] = data['NDXT High'] - data['NDXT Low']\ndata.drop(columns=['NDXT Volume','NDXT Close','NDXT High','NDXT Low','NDXT Adj Close'], inplace=True)\ndata.head()","629855c5":"#I want to convert the date to something Pandas likes\ndata['Date'] = pd.to_datetime(data['Date'], format='%m\/%d\/%Y')\ndata.head()","61c25383":" #Plot theh open price versus time\ndata.plot(x='Date', y='NDXT Open', kind=\"line\")","a555580c":"#Next I want to create a column called month. So I tried this\n# data['Month'] = data['Date'].month\n# But that didn't work, even though I looked up python datetime and it supports that property\n# The error I got said that 'object' did not have the property 'month' so i guess i need some kind of\n# cast. So i try\n# data['Data'].astype(datetime) but that doesn't work, it says it doesn't recognize datetime\n# Finally I use data.info() to dump the columns and their types and i see that Date is of type\n# datetime64. But no matter what I did, I couldn't get it ti work. Finally I found some example where\n# I see someone refer to a dt property. Now it works - see below\ndata.info()","d0a3bbb8":"# Use dt property to access the actual date time properties\ndata['Month'] = data['Date'].dt.month\ndata.head()","2156682f":"pdata = data[['Date', 'NDXT Open']].reset_index(drop=True)\npdata = pdata.rename(columns={'Date':'ds', 'NDXT Open':'y'})\npdata.head()\n","da777314":"m = Prophet()\nm.fit(pdata)\nfuture = m.make_future_dataframe(periods=365)\nforecast = m.predict(future)","1bea7146":"fig1 = m.plot(forecast)","3852cdf0":"pdata = pdata[pdata.ds.dt.year < 2017]\npdata.tail()","d52d6f68":"m = Prophet()\nm.fit(pdata)\nfuture = m.make_future_dataframe(periods=365)\nforecast = m.predict(future)\nfig1 = m.plot(forecast)","3ddb36b4":"data.describe(include='all')\n#I can see that I have unique dates (good) but not values for every row. So let's look at those.\n\n\n","2a678725":"data.loc[data['NDXT Open'].isnull()]\ndata = data.loc[data['NDXT Open'].isnull()==False]\ndata.describe(include='all')","23eb4fb3":"Hey look at my prediction!!! It says the nasdaq is going to keep going up! Buy! Buy! Buy!\nOkay, I just sunk all our savings into Nasdaq. Now is a good time to try the prediction again starting at 2017\n\n","911fe766":"This is an introduction to machine learning, python and pandas. Outline is as follows:\n* Examine the columns and range of the data\n* Visualize some data\n* Brainstorm  some ideas for machine learning as applied to this data\n* Manipulate the data (create new columns, massage data) toward that end.\n*  Apply some machine learning algrorithms and evaulate effectiveness if any","07a94ac2":"Volume is all 0 so might as well drop that.\nI don't know the difference between close and adjusted close so I will drop adjusted close too.\nVolatility might be a predictor so I want to calculate the daily max-min and also the close-open (signed)\nWondering if certain months are important so also want to add a column which is the month \nTODO - drop unneeded columns, add new calculated columns","a3d65356":"I want to try this Prophet which I saw in the avocado price kernal","78d49f28":"Well this was fun. Not sure what I learned. But it was easy to run Prophet and maybe it would be more interesting to try over a longer date range. But next time I want to go back to my dataframe and try some of the standard ML algorithms\nI want to manipulate the data into the following:\n\nOne row per month (summarize over days):\nDate\nMonth (1-12)\nMonth closing price\nGain\/loss for the month\nMaximum max-min\nAverage max-min\nSame for the previous month\nSame for the previous previous month\nSo I guess I need to look at how pandas does grouping!!"}}