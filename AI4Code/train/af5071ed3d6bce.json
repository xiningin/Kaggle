{"cell_type":{"af8ac9aa":"code","16fdfa16":"code","51f5de6c":"code","2b3a5c3b":"code","034cb9c6":"code","d751d0a0":"code","52ae6a33":"code","0757af59":"code","eaf2372e":"code","7f9aeeee":"code","2cdcc825":"code","3ab2c8c6":"code","36bad7c7":"code","06c02b00":"code","1cb6ec43":"code","1dd03fbf":"code","05b0669d":"code","996ff65d":"code","ac1e61c6":"code","0bc454cc":"code","dfe3211a":"code","f71ad8fe":"markdown","24f9e5e2":"markdown","9c6fe5f9":"markdown","842d116c":"markdown","836630cc":"markdown","2e7842e1":"markdown","4475fb24":"markdown","43663381":"markdown","e370ae64":"markdown","d357cb8e":"markdown","41a6b6ed":"markdown","5570c17b":"markdown","9ccf9aee":"markdown","663c0ad3":"markdown","e0894380":"markdown","85366bf2":"markdown","f558c7f6":"markdown","b828ffee":"markdown","ef5fe87a":"markdown","d8ede60b":"markdown","22858e01":"markdown","b8a00ad7":"markdown","87bd38c8":"markdown","271a6b40":"markdown","f3c7d27a":"markdown","74222a0c":"markdown","81da3086":"markdown"},"source":{"af8ac9aa":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\n\nfrom sklearn.cluster import DBSCAN, KMeans\nfrom sklearn.compose import ColumnTransformer, make_column_transformer\nfrom sklearn.pipeline import Pipeline, make_pipeline\nfrom sklearn.preprocessing import OneHotEncoder, OrdinalEncoder, StandardScaler\nfrom sklearn.decomposition import PCA\n\nimport statsmodels.stats.proportion as sm","16fdfa16":"#read\ndata = pd.read_csv(\"..\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/Supermarket_CustomerMembers.csv\")\n\n#rename columns for ease of use\ndata = data.rename(columns={\"CustomerID\" : \"customerid\", \n                            \"Genre\": \"gender\", \n                            \"Age\" : \"age\", \n                            \"Annual Income (k$)\": \"income\", \n                            \"Spending Score (1-100)\" : \"spending_score\"}\n                  ).drop(columns = [\"customerid\"])\n\n\ndata.head()","51f5de6c":"#check for missing data \ndata.info()","2b3a5c3b":"# violin plot for spending score\nfig = px.violin(data, y=\"spending_score\", box=True, \n                width = 350, height = 500, title = 'Distribution of spending score',\n               labels = {\"spending_score\" : \"Spending score\"})\nfig.show()","034cb9c6":"# violin plot for spending score and gender \nfig = px.violin(data, y=\"spending_score\", x = 'gender', box=True, \n                width = 700, height = 500, color = \"gender\",\n                title = 'Distribution of spending score based on gender',\n                labels = {\"spending_score\" : \"Spending score\"}\n                \n               )\nfig.update_layout(showlegend=False)\nfig.show()","d751d0a0":"# scatter plot for spending score and age\nfig = px.scatter(data, x=\"age\", y=\"spending_score\",\n                width = 800, height = 600, color = \"gender\", \n                title = 'Relationship of Age and Spending score',\n                labels = {\"spending_score\" : \"Spending score\",\n                         \"age\": \"Age\"}\n                )\nfig.update_traces(marker_size=15, opacity = 0.8)\nfig.show()","52ae6a33":"# scatter plot for spending score and income \nfig = px.scatter(data, x=\"income\", y=\"spending_score\",\n                width = 600, height = 600, color = \"gender\",\n                title = 'Relationship of Income and Spending score',\n                labels = {\"spending_score\" : \"Spending score\",\n                         \"income\": \"Income (thousands)\"}\n                )\nfig.update_traces(marker_size=15, opacity = 0.8)\nfig.show()","0757af59":"# pipeline to preprocess and scale data\nnumeric_features = [\"age\", \"income\", \"spending_score\"]\nbinary_features = [\"gender\"]\n\nnumeric_transformer = make_pipeline(\n    StandardScaler(),\n)\n\nbinary_transformer = make_pipeline(\n    OneHotEncoder(drop=\"if_binary\"), \n)\n\n# preprocessor \npreprocessor = make_column_transformer(\n    (numeric_transformer, numeric_features),\n    (binary_transformer, binary_features),\n)","eaf2372e":"# transform data\ndata_pro = preprocessor.fit_transform(data)\n\n# scaled features\ncol_names = numeric_features + binary_features\ndata_pro = pd.DataFrame(data_pro, columns = col_names)\ndata_pro.head()","7f9aeeee":"from yellowbrick.cluster import KElbowVisualizer\n# Elbow method to determine # of clusters\nmodel = KMeans()\nvisualizer = KElbowVisualizer(model, k=(1, 10))\n\nvisualizer.fit(data_pro)  # Fit the data to the visualizer\nvisualizer.show();","2cdcc825":"# fit and predict k-means clustering with 4 clusters \nkmeans = KMeans(n_clusters=4, random_state=123)\nkmeans.fit(data_pro)\ndata_pro[\"cluster\"] = kmeans.predict(data_pro)\n\n# move clusters to original non-scaled data\ndf_cluster = data.copy()\ndf_cluster[\"cluster\"] = data_pro[\"cluster\"]\ndf_cluster['gender'] = df_cluster['gender'].apply(lambda x: 1 if x == \"Male\" else 0)\ndf_cluster.head()","3ab2c8c6":"# my custom function to reduce dimensionality for specific features using PCA\ndef dimensionality_reduce_cols(table, col_names, n_component):\n    \"\"\"\n    Takes desired columns from a dataframe and applies PCA\n    dimensionality-reduction.\n\n    Parameters\n    ----------\n    table : pd.DataFrame\n        The DataFrame desired to visualize\n    col_names : list\n        A list of columns names in the DataFrame\n    n_component : int\n        number of components to reduce to\n    Returns\n    -------\n    pd.DataFrame :\n        The original Dataframe with specified columns reduced to n_component\n        columns\n    Examples\n    -------\n    >>> from sklearn.decomposition import PCA\n    >>> dimensionality_reduce_cols(X_train, [\"MFCC1\", \"MFCC2\", \"MFCC3\"], 1)\n\n    \"\"\"\n    if not isinstance(n_component, int):\n        raise TypeError(\"n_components must be an integer\")\n\n    if not isinstance(table, pd.DataFrame):\n        raise TypeError(\"table must be a pandas DataFrame\")\n\n    for i in col_names:\n        if i not in table.columns:\n            raise TypeError(\n                \"\"\"\n                One or more of the specified column\n                names are not in the table\n                \"\"\"\n            )\n\n    pca = make_pipeline(StandardScaler(), PCA(n_components=n_component))\n    pca_cols = [col for col in table if col in col_names]\n    pca_table = pd.DataFrame(pca.fit_transform(table[pca_cols]),\n                             index=table.index)\n    non_pca_cols = [col for col in table if col not in col_names]\n    non_pca_table = table[non_pca_cols]\n    full_table_with_pca = pd.concat([pca_table, non_pca_table], axis=1)\n\n    return full_table_with_pca","36bad7c7":"# call function to reduce features from 4 to 3 for visualization\npca_reduced_df = dimensionality_reduce_cols(data_pro, ['gender', 'age', 'income', 'spending_score'], 3)\n\n# 3d scatterplot for cluster viz\npx.scatter_3d(pca_reduced_df, x=0, y=1, z=2,\n                    color = 'cluster', title=\"3D Visualization of clusters\",\n             height = 500, width = 500)","06c02b00":"fig = px.bar(df_cluster['cluster'].value_counts(), \n             y = \"cluster\",\n            width = 400, height = 450, \n            labels={\"cluster\": \"Count (# of customers)\",\n                     \"index\": \"Clusters\"\n                 },\n                title=\"Distribution of customers clusters\")\nfig.show()","1cb6ec43":"def violin_plot(y_col:str, title): \n    \"\"\"\n    violin plots for showing features for each cluster\n    \"\"\"\n    fig = px.violin(df_cluster, x = \"cluster\",  y = y_col, box=True,\n             width = 800, height = 500, color = \"cluster\",\n                title = str(title),\n                labels = {\"income\" : \"Income (thousands)\",\n                          \"spending_score\": \"Spending score\"}\n                )\n    fig.update_layout(showlegend=False)\n    fig.show()","1dd03fbf":"violin_plot(\"income\", 'Income distribution of Clusters')","05b0669d":"violin_plot(\"spending_score\", \"Spending score distribution of clusters\")","996ff65d":"violin_plot(\"age\", 'Age distribution of clusters')","ac1e61c6":"#read in data \nad_data = pd.read_csv(\"..\/input\/marketing-data-for-a-supermarket-in-united-states\/supermarket_marketing\/Ads_CTR_Optimisation.csv\")\nad_data.head()","0bc454cc":"#helper function to get ci\ndef get_ci(click, impression):\n    \"\"\"\n    Function gets the 95% confidence interval for a binomial proportion \n    \"\"\"\n    lower, upper = sm.proportion_confint(click, impression, alpha=0.05, method='normal')\n    return lower, upper\n\n#click through rate\nctr = (np.sum(ad_data)\/ad_data.shape[0])\n\n#get ctr, clicks, impressions, and ci in dataframe\nad_df = pd.DataFrame(ctr, columns = [\"ctr\"])\nad_df[\"clicks\"] = np.sum(ad_data)\nad_df[\"impressions\"] = ad_data.shape[0]\nad_df = ad_df.reset_index().rename(columns={\"index\": \"ad_variant\"})\nad_df[\"ci\"] = ad_df.apply(lambda x: get_ci(x['clicks'], x['impressions']), axis=1)\nad_df[\"lower_ci\"], ad_df[\"upper_ci\"] = zip(*ad_df[\"ci\"])\nad_df = ad_df.drop(columns = [\"ci\"])\nad_df","dfe3211a":"# plot\nfig = px.scatter(ad_df, x=\"ad_variant\", y=\"ctr\", color=\"ad_variant\",\n                 error_y= ad_df[\"upper_ci\"] - ad_df[\"ctr\"], \n                 error_y_minus= ad_df[\"ctr\"] - ad_df[\"lower_ci\"],\n                width = 800, height=600)\nfig.show()","f71ad8fe":"# Customer Segmentation","24f9e5e2":"> Observations: \n> * The median spending score is 50 with a score of 40-60 being the most common. \n> * There seems to be a fairly even split between customers with a spending score above 60 and below 40.","9c6fe5f9":"# Customer Cluster Interpretation <a name=\"4\"><\/a>\n<hr>","842d116c":"![](https:\/\/aeroleads.com\/blog\/wp-content\/uploads\/2017\/07\/Aeroleads-customer-Segmentation.png)","836630cc":"> Observation: \n> * We can see that ad variants 5 has the highest click-through rate followed by 8 and 1. As the confidence intervals do not overlap, they are statistically significant. \n\n> Recommendations: \n> * Having more context on the advertisement content would be more informative when making improvement suggestions. Additionally, having advertisements differ by only 1 factor (such as caption, header, picture, or wording) will allow us to determine which specific factor variants have statistically significant improvement results. If possible, a full factorial experimental design would be the best (experimental units take on all possible combinations of levels across all factors). \n","2e7842e1":"### Check if clusters are separable","4475fb24":"The elbow method looks at tradeoff between the sum of **intra-cluster distances** vs **k-clusters**. As *k* increases, the intra-cluster distances decreases so we want to find an optimal point with small *k* and small intra-cluster distances.","43663381":"Customer segmentation is the process of dividing up customers to form groups of customers who share similar preferences and behaviors. Some possible similarities can be in terms of demographics, loyalty, spending power, or a combination of various features. While traditional mass marketing techniques work and are still effective, it is inefficient and costly compared to targeted advertisements when we can correctly identify our customers. That is, if we can cluster our customers effectively, then we can create customized advertisements and offers to increase engagement cost-effectively. \n\nOnce clusters are identified, possible courses of action include: offers to keep loyal customers loyal, incentives for new growth-worthy customers to try our product\/service, or customized offers for one-time shoppers to revisit. In addition, new market opportunities for products\/services can be explored to complement existing ones once we've learned more about our core customers. ","e370ae64":"> Observations:\n> * There doesn't seem to be any difference in spending score when comparing the gender of a customer.","d357cb8e":"# Customer Segmentation with K-means Clustering <a name=\"3\"><\/a>\n<hr>","41a6b6ed":"# Advertisement Performance Analysis <a name=\"5\"><\/a>\n<hr>","5570c17b":"> Observations: \n> * Clusters 1 and 2 make up around 61% of the customer base\n> * No individual group seem make up a majority of the customer base","9ccf9aee":"In addition to customer data, the supermarket also has data collected on the advertisements they ran online. There are 10 different advertisement variants and each have 10000 impressions. In the data below, a 1 represent a click on the ad and 0 represent no action. ","663c0ad3":"**Interpretation of clusters in words:**\\\nNote: As we are only working with very few features, it is difficult to take into account other aspects such as family size, discount items, frequency, etc. \n\n* Cluster 0 consists of young adults with low-medium income and mid-high spending score\n* Cluster 1 consists of adults with high income and high spending score \n* Cluster 2 consists of older individuals near retirement with medium income and medium spending score\n* Cluster 3 consists of a wide range of age individuals who have high income and low spending score\n\n**Some potential strategies include:**\n* For those with high spending scores: These customers may potentially be impulsive buyers (cluster 0) that purchase based on what looks fresh or special discounts. Management could consider having daily\/weekly sale items or limited-time new items for sale to keep these customers excited and coming back.  \n\n* For those with lower spending scores: These customers may potentially be discount\/value buyers (clusters 2 and 3) that purchase based on prices and discounts. As these customers may easily move their shopping experience to another supermarket if our prices are more expensive, management could consider creating value on top of competitive prices. Value can be created through excellent customer service, point reward programs, or have an essential item always priced lower than competitors. \n","e0894380":"> Observations: \n> * Customers in the age range of 15-40 years old make up most the the customers with a spending score of above 60\n> * Customers above 40 years old does not seem to have a spending score of above 60\n> * gender (differentiated by the color of the points) does not seem to play a role in the pattern of the scatterplot ","85366bf2":"> Observations: \n> * There seem to be a cluster-like pattern when looking at income and spending score: high income individuals with high spending score, high income individuals with a low spending score, etc.\n> * again, gender does not contribute to the observed pattern","f558c7f6":"> Observation:\n> * The clusters seem to be separable ","b828ffee":"> The elbow method argues that 4 clusters is enough for the customers, k=4 will be used in the next steps.","ef5fe87a":"### Get click through rate and confidence intervals","d8ede60b":"# EDA <a name=\"2\"><\/a>\n<hr>","22858e01":"### Elbow method to determine optimal number of clusters","b8a00ad7":"The data contains the following features about the customers shopping at a Supermarket: \n* `gender`: gender of the customer (male or female)\n* `age`: age of the customer (in years)\n* `income`: income of the customer (in thousands)\n* `spending_score`: spending score of the customer from a scale of 0 - 100","87bd38c8":"<br>\n<br>","271a6b40":"### Creating the pipeline","f3c7d27a":"# Table of contents\n\n- [Read in Data](#1) \n- [EDA](#2) \n- [K-means Clustering pipeline](#3) \n- [Customer Cluster interpretation](#4) \n- [Advertisement Performance Analysis](#5)","74222a0c":"### Fit and Predict clusters","81da3086":"# Read in Data <a name=\"1\"><\/a>\n<hr>\n"}}