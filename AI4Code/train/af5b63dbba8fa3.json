{"cell_type":{"9fe02b49":"code","a8721a69":"code","56c6fd02":"code","8949674b":"code","b34d92d8":"code","0b4dcd71":"code","be15e781":"code","c494a0e1":"code","17936dac":"code","32334033":"code","5232432b":"code","d6fea569":"code","541e5f3d":"code","4561b836":"code","20107077":"markdown","82609718":"markdown","306eed0c":"markdown","70ec9fba":"markdown","423e70eb":"markdown","49ac4e30":"markdown","cbf8963c":"markdown","1aba8f5c":"markdown","70c56c17":"markdown","3f1a2e22":"markdown","546f67db":"markdown","8e8498e3":"markdown"},"source":{"9fe02b49":"import os\nimport sys\nimport time\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns\nfrom math import sqrt\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error","a8721a69":"df1 = pd.read_csv(\"..\/input\/elo-blending\/3.695.csv\")\ndf2 = pd.read_csv(\"..\/input\/elo-blending\/3.696.csv\")\ndf3 = pd.read_csv(\"..\/input\/submit\/submit.csv\")\ndf4 = pd.read_csv(\"..\/input\/combined\/combining_submission.csv\")","56c6fd02":"df_base0  = pd.read_csv('..\/input\/elo-blending\/3.695.csv',      names=[\"card_id\",\"target0\"],  skiprows=[0],header=None)\ndf_base1  = pd.read_csv('..\/input\/elo-blending\/3.696.csv',      names=[\"card_id\",\"target1\"],  skiprows=[0],header=None)\ndf_base2  = pd.read_csv('..\/input\/elo-blending\/3.6999.csv',     names=[\"card_id\",\"target2\"],  skiprows=[0],header=None)\ndf_base3  = pd.read_csv('..\/input\/elo-blending\/3.69991.csv',    names=[\"card_id\",\"target3\"],  skiprows=[0],header=None)\ndf_base4  = pd.read_csv('..\/input\/elo-blending\/3.699992.csv',   names=[\"card_id\",\"target4\"],  skiprows=[0],header=None)\ndf_base5  = pd.read_csv('..\/input\/elo-blending\/3.70.csv',       names=[\"card_id\",\"target5\"],  skiprows=[0],header=None)\ndf_base6  = pd.read_csv('..\/input\/elo-blending\/3.701.csv',      names=[\"card_id\",\"target6\"],  skiprows=[0],header=None)\ndf_base7  = pd.read_csv('..\/input\/elo-blending\/3.702.csv',      names=[\"card_id\",\"target7\"],  skiprows=[0],header=None)\ndf_base8  = pd.read_csv('..\/input\/elo-blending\/3.703.csv',      names=[\"card_id\",\"target8\"],  skiprows=[0],header=None)\ndf_base9  = pd.read_csv('..\/input\/elo-blending\/3.704.csv',      names=[\"card_id\",\"target9\"],  skiprows=[0],header=None)\ndf_base10 = pd.read_csv('..\/input\/elo-blending\/Blending.csv',   names=[\"card_id\",\"target10\"], skiprows=[0],header=None)\ndf_base11 = pd.read_csv('..\/input\/elo-blending\/BlendingRLS.csv',names=[\"card_id\",\"target11\"], skiprows=[0],header=None)","8949674b":"df_base = pd.merge(df_base0,df_base1,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base2,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base3,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base4,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base5,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base6,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base7,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base8,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base9,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base10,how='inner',on='card_id')\ndf_base = pd.merge(df_base,df_base11,how='inner',on='card_id')","b34d92d8":"plt.figure(figsize=(16,12))\nsns.heatmap(df_base.iloc[:,1:].corr(),annot=True,fmt=\".2f\")","0b4dcd71":"M = np.zeros([df_base.iloc[:,1:].shape[1],df_base.iloc[:,1:].shape[1]])\nfor i in np.arange(M.shape[1]):\n    for j in np.arange(M.shape[1]):\n        M[i,j] = sqrt(metrics.mean_squared_error(df_base.iloc[:,i+1], df_base.iloc[:,j+1]))","be15e781":"df_base_median = df_base.iloc[:,1:].median(axis=1)","c494a0e1":"df_base0  = pd.read_csv('..\/input\/elo-blending\/3.695.csv',      names=[\"card_id\",\"target0\"],  skiprows=[0],header=None)\ndf_base1  = pd.read_csv('..\/input\/elo-blending\/3.696.csv',      names=[\"card_id\",\"target1\"],  skiprows=[0],header=None)\ndf_base10 = pd.read_csv('..\/input\/elo-blending\/Blending.csv',   names=[\"card_id\",\"target10\"], skiprows=[0],header=None)\ndf_base11 = pd.read_csv('..\/input\/elo-blending\/BlendingRLS.csv',names=[\"card_id\",\"target11\"], skiprows=[0],header=None)\n\ndf_base = pd.merge(df_base0,df_base1,how='inner',on='card_id')\ndf_base = pd.merge(df_base0,df_base10,how='inner',on='card_id')\ndf_base = pd.merge(df_base0,df_base11,how='inner',on='card_id')\n\nplt.figure(figsize=(12,8))\nsns.heatmap(df_base.iloc[:,1:].corr(),annot=True,fmt=\".2f\")","17936dac":"M = np.zeros([df_base.iloc[:,1:].shape[1],df_base.iloc[:,1:].shape[1]])\nfor i in np.arange(M.shape[1]):\n    for j in np.arange(M.shape[1]):\n        M[i,j] = sqrt(metrics.mean_squared_error(df_base.iloc[:,i+1], df_base.iloc[:,j+1]))","32334033":"df_base['target'] = df_base_median\ndf_base['target4'] = df4['target']","5232432b":"df_final = np.zeros(len(df_base))\na=-10*np.log2(10)\nthresh = -14\n\nfor i in range(len(df3)-1):\n    if df3['target'][i]< thresh:\n        df_final[i]=a\n    else:\n        df_final[i]=df_base['target'][i]\npd.Series(df_final).value_counts().head(1)","d6fea569":"magic = np.median(df_final) - df_final.std()","541e5f3d":"for i in range(len(df_final)-1):\n    if df_final[i] > magic:\n        df_final[i] =  df_final[i] - abs(np.median(df_final))\/8 +0.001","4561b836":"df_finall=pd.DataFrame(df_base['card_id'])\ndf_finall['target'] = df_final\ndf_finall[['card_id','target']].to_csv(\"good_output.csv\",index=False)","20107077":"## kinda normalizing","82609718":"# An easy and generic method to blend kernels\n\n## planning to provide a more thorough approach soon!","306eed0c":"## creating a heatmap to understand easier","70ec9fba":"## reading several high scores","423e70eb":"## getting the data","49ac4e30":"## imports","cbf8963c":"## a tiny post-process trick\n## checking the outliers in train and comparing to test\/","1aba8f5c":"## and submission","70c56c17":"## our metric is mse","3f1a2e22":"## thank you very much, please upvote if you find it useful!","546f67db":"## merging all the solutions into one","8e8498e3":"## let's find the median"}}