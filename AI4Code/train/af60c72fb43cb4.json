{"cell_type":{"6e950cc6":"code","d7e29883":"code","0feaf7b5":"code","34b9c5f1":"code","f85818fa":"code","54e7c638":"code","f766f5d5":"code","3ecb27e4":"code","fdd1bef4":"code","a990899a":"code","6c3a12a6":"code","d6285bc5":"code","026f649c":"code","d34a9f07":"code","c153ede5":"code","0e957de8":"code","c5f394f7":"code","aaa87cce":"code","8d012bd9":"code","ba20b2f3":"markdown","1c3baa2d":"markdown","91cb69f6":"markdown","4afab69e":"markdown"},"source":{"6e950cc6":"import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nimport json\nimport random","d7e29883":"# Paths to data\nBASE_PATH = '..\/input\/shopee-product-matching'","0feaf7b5":"# Load train csv\ntrain_df= pd.read_csv(BASE_PATH + \"\/train.csv\")","34b9c5f1":"train_df.head()","f85818fa":"TOTAL_ENTRIES = train_df['posting_id'].count()","54e7c638":"# Creating a dictionary, label_group is key and list containing posting_id, image, and image_phase will be value\ntrain_dict = {}\nfor ind in tqdm(range(TOTAL_ENTRIES)):\n    label = train_df.iloc[ind, 4]\n    if label in train_dict:\n        train_dict[label].append([train_df.iloc[ind, 0], train_df.iloc[ind, 1], train_df.iloc[ind, 2], train_df.iloc[ind, 3]])\n    else:\n        train_dict[label] = []\n        train_dict[label].append([train_df.iloc[ind, 0], train_df.iloc[ind, 1], train_df.iloc[ind, 2], train_df.iloc[ind, 3]])","f766f5d5":"train_dict[249114794]","3ecb27e4":"# Convert data to pairs for positive\npos_pair_dict = {'image_1': [], 'phash_1': [], 'title_1': [], 'label_1': [],\n        'image_2': [], 'phash_2': [], 'title_2': [], 'label_2': [],\n        'similar': []}\n\nfor label, data in tqdm(train_dict.items()):\n    for fInd in range(len(data)):\n        for sInd in range(len(data)):\n            pos_pair_dict['image_1'].append(data[fInd][1])\n            pos_pair_dict['phash_1'].append(data[fInd][2])\n            pos_pair_dict['title_1'].append(data[fInd][3])\n            pos_pair_dict['label_1'].append(label)\n            \n            pos_pair_dict['image_2'].append(data[sInd][1])\n            pos_pair_dict['phash_2'].append(data[sInd][2])\n            pos_pair_dict['title_2'].append(data[sInd][3])\n            pos_pair_dict['label_2'].append(label)\n            \n            pos_pair_dict['similar'].append(1) # 1 for positive pair\n            \n        \npos_pair_df = pd.DataFrame(data=pos_pair_dict)","fdd1bef4":"# Check created data\npos_pair_df.head(2)","a990899a":"# Total entries in csv\nprint(\"TOTAL ENTRIES\")\nprint(pos_pair_df['image_1'].count(), \"\\n\\n\")\n\n# Unique values per column\nprint(\"UNIQUE VALUES:\")\nprint(pos_pair_df.nunique())","6c3a12a6":"pos_pair_df = pos_pair_df.sample(frac=1).reset_index(drop=True)\npos_pair_df.head(2)","d6285bc5":"# Save data to the csv file\npos_pair_df.to_csv('pos_pair.csv', index=False)","026f649c":"# Create a partial dataframe to shuffle second pair of images so that we can create negative pairs\npartial_pair_df = pd.DataFrame()\npartial_pair_df['image_2'] = pos_pair_df['image_2']\npartial_pair_df['phash_2'] = pos_pair_df['phash_2']\npartial_pair_df['title_2'] = pos_pair_df['title_2']\npartial_pair_df['label_2'] = pos_pair_df['label_2']\npartial_pair_df.head(2)","d34a9f07":"# Now shuffle the partial dataframe\npartial_pair_df = partial_pair_df.sample(frac=1).reset_index(drop=True)\npartial_pair_df.head(2)","c153ede5":"# Create new dataframe for negative pairs of images\nneg_pair_df = pos_pair_df.copy() # create copy\n\n# modify second image in pair with parital_df data\nneg_pair_df['image_2'] = partial_pair_df['image_2']\nneg_pair_df['phash_2'] = partial_pair_df['phash_2']\nneg_pair_df['title_2'] = partial_pair_df['title_2']\nneg_pair_df['label_2'] = partial_pair_df['label_2']\n\n# Change similar to 0 for negative pairs\nneg_pair_df['similar'] = [0] * neg_pair_df['image_1'].count()\nneg_pair_df.head(2)","0e957de8":"# Checking how many similar pairs found in negative pair dataframe\nsimilar_counts = 0\nfor ind in range(neg_pair_df['image_1'].count()):\n    if neg_pair_df.iloc[ind, 3] == neg_pair_df.iloc[ind, 7]:\n        similar_counts += 1\nprint(\"Similar Pairs Found:\", similar_counts)","c5f394f7":"# Re-shuffle data to remove similar pairs\nTOTAL_NEG_COUNTS = neg_pair_df['image_1'].count()\nprint(\"Total Negative Pairs:\", TOTAL_NEG_COUNTS)\nfor ind in tqdm(range(TOTAL_NEG_COUNTS)):\n    if neg_pair_df.iloc[ind, 3] == neg_pair_df.iloc[ind, 7]:\n        while True:\n            # Create a random index to generate negative pair\n            randInd = random.randint(0, TOTAL_NEG_COUNTS)\n            if neg_pair_df.iloc[ind, 3] != neg_pair_df.iloc[randInd, 7]:\n                # replace second image with randomly selected image\n                neg_pair_df.iloc[ind, 4] = neg_pair_df.iloc[randInd, 4]\n                neg_pair_df.iloc[ind, 5] = neg_pair_df.iloc[randInd, 5]\n                neg_pair_df.iloc[ind, 6] = neg_pair_df.iloc[randInd, 6]\n                neg_pair_df.iloc[ind, 7] = neg_pair_df.iloc[randInd, 7]\n                \n                break\n\nneg_pair_df.head(2)","aaa87cce":"# Checking how many similar pairs found in negative pair dataframe\nsimilar_counts = 0\nfor ind in range(neg_pair_df['image_1'].count()):\n    if neg_pair_df.iloc[ind, 3] == neg_pair_df.iloc[ind, 7]:\n        similar_counts += 1\nprint(\"Similar Pairs Found:\", similar_counts)","8d012bd9":"# Save data to the csv file\nneg_pair_df.to_csv('neg_pair.csv', index=False)","ba20b2f3":"# Create Positive Data Pair","1c3baa2d":"# Data Preparation for Siemese Network\n\nThese notebook prepares data for training siemese network on shopee product matching compition data.\n\nIt prepares two types of image pairs:\n1. Positive Image Pair (Both the images are similar or contain same products)\n2. Negative Image Pair (Both the images are different or contain different products)","91cb69f6":"# Create Negative Data Pair","4afab69e":"# Train Dict\n\nThis dictionary grouped data using group label. Now It will be easy to make pos and neg pairs\n\n## Pairs\nPair data will be saved into csv where first three columns will first image's data and second three columns will show second image's data.\n1. First Column - Image Name\n2. Second Column - Image Phash\n3. Third Column - Title or text\n4. Fourth Column - Label group\n\nSo pair in single row will be look like this:\n\n[(Name, Phash, Title, Label), (Name, Phash, Title, Label)]\n\ncsv file will have one another column named 'similar'. 1 in similar represents both pair has similar label group while 0 represents different label group"}}