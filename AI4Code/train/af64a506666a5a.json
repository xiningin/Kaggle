{"cell_type":{"206eda4a":"code","fdae1c1e":"code","07192d9a":"code","b391e0cc":"code","214f162c":"code","80fbddda":"code","9d5a26c1":"code","32bfae30":"code","ed5253a1":"code","c68c26a0":"code","22f85f7e":"code","98c6448b":"code","9d29b280":"code","1fa2e2fe":"code","e07439ca":"code","33e3698c":"code","c7234cb0":"code","5b528a3b":"code","f2868618":"code","12601535":"code","0e914bc7":"code","9cdc742b":"code","6bd8c176":"code","a9358093":"code","adcd4a75":"code","1f855d22":"code","2047ec8e":"code","14fd2a63":"code","7646de06":"code","81770898":"code","5ff0d76c":"code","06b4a524":"markdown","60c56ab8":"markdown","53d8202d":"markdown","889d82d9":"markdown","bb8531d5":"markdown","cb8726f0":"markdown","09a6bb60":"markdown","2f2d7061":"markdown","604e1e1c":"markdown"},"source":{"206eda4a":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","fdae1c1e":"train = pd.read_csv(\"..\/input\/train.csv\")\ntrain.head()","07192d9a":"test = pd.read_csv(\"..\/input\/test.csv\")\ntest.head()","b391e0cc":"train.info()","214f162c":"test.info()","80fbddda":"all = pd.concat([train, test], sort = False)\nall.info()","9d5a26c1":"#Fill Missing numbers with median\nall['Age'] = all['Age'].fillna(value=all['Age'].median())\nall['Fare'] = all['Fare'].fillna(value=all['Fare'].median())","32bfae30":"all.info()","ed5253a1":"sns.catplot(x = 'Embarked', kind = 'count', data = all) #or all['Embarked'].value_counts()","c68c26a0":"all['Embarked'] = all['Embarked'].fillna('S')\nall.info()","22f85f7e":"#Age\nall.loc[ all['Age'] <= 16, 'Age'] = 0\nall.loc[(all['Age'] > 16) & (all['Age'] <= 32), 'Age'] = 1\nall.loc[(all['Age'] > 32) & (all['Age'] <= 48), 'Age'] = 2\nall.loc[(all['Age'] > 48) & (all['Age'] <= 64), 'Age'] = 3\nall.loc[ all['Age'] > 64, 'Age'] = 4 ","98c6448b":"#Title\nimport re\ndef get_title(name):\n    title_search = re.search(' ([A-Za-z]+\\.)', name)\n    \n    if title_search:\n        return title_search.group(1)\n    return \"\"","9d29b280":"all['Title'] = all['Name'].apply(get_title)\nall['Title'].value_counts()","1fa2e2fe":"all['Title'] = all['Title'].replace(['Capt.', 'Dr.', 'Major.', 'Rev.'], 'Officer.')\nall['Title'] = all['Title'].replace(['Lady.', 'Countess.', 'Don.', 'Sir.', 'Jonkheer.', 'Dona.'], 'Royal.')\nall['Title'] = all['Title'].replace(['Mlle.', 'Ms.'], 'Miss.')\nall['Title'] = all['Title'].replace(['Mme.'], 'Mrs.')\nall['Title'].value_counts()","e07439ca":"#Cabin\nall['Cabin'] = all['Cabin'].fillna('Missing')\nall['Cabin'] = all['Cabin'].str[0]\nall['Cabin'].value_counts()","33e3698c":"#Family Size & Alone \nall['Family_Size'] = all['SibSp'] + all['Parch'] + 1\nall['IsAlone'] = 0\nall.loc[all['Family_Size']==1, 'IsAlone'] = 1\nall.head()","c7234cb0":"#Drop unwanted variables\nall_1 = all.drop(['Name', 'Ticket'], axis = 1)\nall_1.head()","5b528a3b":"all_dummies = pd.get_dummies(all_1, drop_first = True)\nall_dummies.head()","f2868618":"all_train = all_dummies[all_dummies['Survived'].notna()]\nall_train.info()","12601535":"all_test = all_dummies[all_dummies['Survived'].isna()]\nall_test.info()","0e914bc7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(all_train.drop(['PassengerId','Survived'],axis=1), \n                                                    all_train['Survived'], test_size=0.30, \n                                                    random_state=101, stratify = all_train['Survived'])","9cdc742b":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier","6bd8c176":"ada = AdaBoostClassifier(DecisionTreeClassifier(),n_estimators=100, random_state=0)\nada.fit(X_train,y_train)","a9358093":"predictions = ada.predict(X_test)","adcd4a75":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","1f855d22":"print (f'Train Accuracy - : {ada.score(X_train,y_train):.3f}')\nprint (f'Test Accuracy - : {ada.score(X_test,y_test):.3f}')","2047ec8e":"TestForPred = all_test.drop(['PassengerId', 'Survived'], axis = 1)","14fd2a63":"t_pred = ada.predict(TestForPred).astype(int)","7646de06":"PassengerId = all_test['PassengerId']","81770898":"adaSub = pd.DataFrame({'PassengerId': PassengerId, 'Survived':t_pred })\nadaSub.head()","5ff0d76c":"adaSub.to_csv(\"1_Ada_Submission.csv\", index = False)","06b4a524":"## Combine train and test","60c56ab8":"# Import Data","53d8202d":"# Import Libraries","889d82d9":"****Check Accuracy","bb8531d5":"****Check Accuracy","cb8726f0":"****Final Predictions","09a6bb60":"****Train\/Test Split","2f2d7061":"****Build AdaBoost","604e1e1c":"****Extra Features:"}}