{"cell_type":{"f9588d32":"code","cc70e545":"code","291232f8":"code","9bb40968":"code","f2c188f6":"code","05ed5b0c":"code","28a337e8":"code","e403c530":"code","cf90b692":"code","939cc1dd":"code","c0848f02":"code","c1507b46":"code","aa2ebdca":"code","4739147d":"code","9d48c38b":"code","76692d58":"markdown","e7e735e0":"markdown","60d1048c":"markdown","088089ae":"markdown","b71b2998":"markdown","f9ae9649":"markdown","418a8c18":"markdown","f7fb533c":"markdown","7af4b6ac":"markdown","8437853f":"markdown","a4a2f6a0":"markdown"},"source":{"f9588d32":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cc70e545":"df=pd.read_csv('\/kaggle\/input\/fivethirtyeight-comic-characters-dataset\/dc-wikia-data.csv')\nprint(\"Records: \",df.shape[0], \"Columns:\", df.shape[1])\ndf.head()\n","291232f8":"df['EYE'].value_counts(dropna=False)","9bb40968":"df.describe()","f2c188f6":"df.boxplot(column=\"YEAR\", by=\"APPEARANCES\")\nplt.show()","05ed5b0c":"#value_vars are melted values\n#melted accordint to id_vars \ntidy_data=pd.melt(frame=df, id_vars=\"name\", value_vars=['EYE', 'HAIR'])\ntidy_data","28a337e8":"tidy_data.pivot(index='name', columns='variable', values='value')","e403c530":"#learn types of attributes\ndf.dtypes","cf90b692":"#convert object to category for sex\ndf['SEX']=df['SEX'].astype('category')\ndf.dtypes","939cc1dd":"df.info()","c0848f02":"for each in df:\n    print(each, \": \",df[each].isnull().sum(), \"\/\", df.shape[0])","c1507b46":"#copy df \ndata1=df.copy()\n#drop nan values\ndata1['ALIVE'].dropna(inplace=True)","aa2ebdca":"#filling nan values to 'empty'\ndata1['EYE'].fillna('empty', inplace=True)\ndata1['EYE'].value_counts()","4739147d":"df2=df.loc[:,[\"YEAR\",\"APPEARANCES\", \"page_id\"]]\ndf2.plot()\nplt.show()","9d48c38b":"#we can use subplot o clear the confusion\ndf2.plot(subplots=True)\nplt.show()\n","76692d58":"***Plotting data***","e7e735e0":"***Visualize outliers***\n   * For visulize to outliers, we use box plot \n   * Outliers is circle shapes in plot","60d1048c":"***Converting data types***\n* We have 5 data types: **int**,**float**,**boolean**,**object**,**category**\n* Category is important for machine learning\n\n* We can convert data types using **astype()** function","088089ae":"***Missing value***\n* We can **drop** missing\/nan values using **dropna()**\n* We can **filling** with mean or most using value ","b71b2998":"# **Comic Characters Analysis**","f9ae9649":"**This dataset contains Comic Characters od DC and Marvel.**\n\n> The data comes from Marvel Wikia and DC Wikia. Characters were scraped on August 24. Appearance counts were scraped on September 2. The month and year of the first issue each character appeared in was pulled on October 6.","418a8c18":"***Look count,mean,std,min,quartiles***\n   * We use **describe()** for look this values. **describe()** shows only numeric values \n   * We find outliers with looking quartiles (25%,50%,75%)\n   \n   Outliers: Data that is out of range. (higher or lower)      ","f7fb533c":"***Frequency Data***\n\n   * We look frequency of attributes using **value_counts()**","7af4b6ac":"***Look missing value***\n    * data.info gives data type and non null values\n    * also we find number of missing values using isnull() function   ","8437853f":"***Read data***","a4a2f6a0":"***Tidy Data***\n        \n   * We get tidy data using **melt()** function. \n   * In other words, to shape it according to the features I want\n   * Why we use melt()?\n    \n        Because it is necessary to use the predecessor melt () function to visualize it with seaborn.  \n   * If we want to reverse of melting, we get pivoting data using **pivot()** function\n        \n        "}}