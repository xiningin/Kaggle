{"cell_type":{"fbe72d68":"code","c0030920":"code","2f590fa0":"code","f19f4fc9":"code","1832069f":"code","e8e7f524":"code","2c347788":"code","7ada0733":"code","03062b78":"code","8a8866d4":"code","f379b509":"code","940e96a7":"code","96f0d0a5":"code","2b19f635":"code","04c99326":"code","0dd24e6e":"code","67fe70a8":"code","70d227fa":"code","777ed7a4":"code","8843a5df":"code","5004c813":"code","b67fd3e3":"code","622b2937":"code","5edb0b69":"code","96f1c7f5":"code","0cdd40b4":"code","aeeb5ddb":"code","bc0f62ce":"code","4b54f1bd":"code","5b648abc":"code","1be973da":"code","252c3c09":"markdown","277e0313":"markdown","a61cab47":"markdown","d798a687":"markdown","c8fa9abd":"markdown","e285f615":"markdown","4d21aca0":"markdown","f257f8fd":"markdown","8df444a6":"markdown","c223cfb5":"markdown","7a23aeb2":"markdown","26e71f43":"markdown","0531f315":"markdown","21bff8b6":"markdown","02560a92":"markdown","0876ef8c":"markdown","b8703385":"markdown","15e6231a":"markdown","a5d80815":"markdown"},"source":{"fbe72d68":"#importing libraries\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport plotly.graph_objs as go\n\nimport os\nprint(os.listdir(\"..\/input\"))","c0030920":"data1=pd.read_csv(\"..\/input\/nba-players-stats\/Seasons_Stats.csv\")\ndata2=pd.read_csv(\"..\/input\/nba17-18\/nba.csv\")\ndata3=pd.read_csv(\"..\/input\/nba17-18\/nba_extra.csv\")\ndata4=pd.read_csv(\"..\/input\/nba-players-stats\/player_data.csv\")\n#I created and added data3 in order to complete data2's missing columns.","2f590fa0":"data1.head()","f19f4fc9":"data2.tail()","1832069f":"#Dropping Uncommon and empty ones so that columns are equal.\ndata2.drop(data2.iloc[:,[19,24,0]],axis=1,inplace=True)\ndata1.drop([\"GS\",\"blanl\",\"blank2\"],axis=1,inplace=True)\ndata1.drop(data1.iloc[:,[0]],axis=1,inplace=True)\ntype(data1)","e8e7f524":"#Editing names on data2\nnew=[]\nfor i in range(0,len(data2.Player)):\n    x=data2.Player[i].split(\"\\\\\")\n    new.append(x[0])\ndata2[\"Player\"]=new","2c347788":"#Creating a new column in a specific place\ndata2.insert(0,\"Year\",2018.0)","7ada0733":"#Concatenating datas\ndata2=pd.concat([data2,data3.loc[:,\"FG\":]],axis=1)","03062b78":"#Changing data types\ndata2.Age=data2.Age.astype(float)\nfor i in data3.loc[:,\"FG\":]:\n    data2[i]=data2[i].astype(float)","8a8866d4":"#Finally we can concatenate the data that we will work on it.\ndata=pd.concat([data1,data2],axis=0,ignore_index=True)","f379b509":"#There are some mistakes in name of players.\nnew_names=[]\nfor i in data.Player:\n    i=str(i)\n    if (i[-1]==\"*\"):\n        i=i[:-1]\n    new_names.append(i)\ndata[\"Player\"]=new_names    ","940e96a7":"#TOT is total value of season if the player plays for more than 1 team in a season.I don't need it.Therefore,I am dropping the values.\ndata=data[data.Tm!=\"TOT\"]","96f0d0a5":"#Content of columns\ndata.info()","2b19f635":"#As we can guess,there are many players who share same name;therefore, i need to seperate them according to their first and last year in NBA.\nplayer_name=list(data4.name) \n\nplayer_points=[]\nplayer_assists=[]\nplayer_rebounds=[]\nplayer_blocks=[]\n\n\nplayer_year_start=list(data4.year_start)\nplayer_year_end=list(data4.year_end)\n\nfor i in range(0,len(player_name)):\n    first_year=player_year_start[i]\n    last_year=player_year_end[i]\n    seperated_data=data[(data.Player==player_name[i]) & (data.Year>=first_year) & (data.Year<=last_year)]  \n    player_points.append(seperated_data.PTS.sum())\n    player_assists.append(seperated_data.AST.sum())\n    player_rebounds.append(seperated_data.TRB.sum())\n    player_blocks.append(seperated_data.BLK.sum())\n    \n\n","04c99326":"#correlation map\nf,ax=plt.subplots(figsize=(25, 25))\nsns.heatmap(data.corr(), annot=True, linewidths=.4, fmt= '.1f',ax=ax)\nplt.show()","0dd24e6e":"#Visualization \ndictionary={\"Player\":player_name,\"Points\":player_points}\nplayerpoints=pd.DataFrame(dictionary)\nplayerpoints=playerpoints.sort_values(\"Points\",ascending=False)\n\npointsforbar=playerpoints.head(20)\n\nplt.figure(figsize=(20,13))\nsns.barplot(x=pointsforbar.Player,y=pointsforbar.Points)\nplt.xticks(rotation=60)\nplt.ylabel(\"Points\")\nplt.xlabel(\"Player Name\")\nplt.title(\"NBA All Times Points Leaders\")\nplt.show()","67fe70a8":"#Visualization \ndictionary={\"Player\":player_name,\"Assists\":player_assists}\nplayerassists=pd.DataFrame(dictionary)\nplayerassists=playerassists.sort_values(\"Assists\",ascending=False)\n\nassistforbar=playerassists.head(20)\n\nplt.figure(figsize=(18,12))\nsns.barplot(x=assistforbar.Player, y=assistforbar.Assists,palette =sns.cubehelix_palette(len(assistforbar)))\nplt.xticks(rotation=60)\nplt.xlabel(\"Player Names\")\nplt.ylabel(\"Assists\")\nplt.title(\"NBA All-Time Assists Leaders\")\nplt.show()","70d227fa":"#Visualization \ndictionary={\"Player\":player_name,\"Rebounds\":player_rebounds}\nplayerrebounds=pd.DataFrame(dictionary)\nplayerrebounds=playerrebounds.sort_values(\"Rebounds\",ascending=False)\n\nreboundsforbar=playerrebounds.head(20)\n\nplt.figure(figsize=(20,13))\nsns.barplot(x=reboundsforbar.Player,y=reboundsforbar.Rebounds,palette=sns.cubehelix_palette(len(reboundsforbar),rot=-.5))\nplt.xticks(rotation=60)\nplt.ylabel(\"Rebounds\")\nplt.xlabel(\"Player Name\")\nplt.title(\"NBA All Times Rebounds Leaders\")\nplt.show()","777ed7a4":"#Visualization \ndictionary={\"Player\":player_name,\"Blocks\":player_blocks}\nplayerblocks=pd.DataFrame(dictionary)\nplayerblocks=playerblocks.sort_values(\"Blocks\",ascending=False)\n\nblocksforbar=playerblocks.head(20)\n\nplt.figure(figsize=(18,12))\nsns.barplot(x=blocksforbar.Player, y=blocksforbar.Blocks,palette =sns.color_palette(\"Reds_d\",len(blocksforbar)))\nplt.xticks(rotation=60)\nplt.xlabel(\"Player Names\")\nplt.ylabel(\"Blocks\")\nplt.title(\"NBA All-Time Blocks Leaders\")\nplt.show()","8843a5df":"#Creating data for visualization\nyear=[]\ntotalpoints=[]\nfor i in data.Year.unique():\n    year.append(i)\n    total=0\n    x=data[data.Year==i]\n    for j in x.PTS:\n        total+=int(j)\n    totalpoints.append(total)  \ndata_2=pd.DataFrame({\"Year\":year,\"Point\":totalpoints})    ","5004c813":"#Visualization\nplt.subplots(figsize =(20,10))\nsns.pointplot(x=\"Year\",y=\"Point\",data=data_2,color=\"red\",alpha=1.2)\nplt.xlabel(\"Years\",fontsize = 25)\nplt.ylabel(\"Total Points\",fontsize = 25)\nplt.xticks(rotation=70)\nplt.title(\"Total Points According To Years\",fontsize = 30,color='blue')\nplt.grid()","b67fd3e3":"#Creating data for visualization\nplayer_3ptp=[]\nmade3pt=[]\nfor i in range(0,len(player_name)):\n    x=0\n    y=0\n    first_year=player_year_start[i]\n    last_year=player_year_end[i]\n    x+=data[(data.Player==player_name[i]) & (data.Year>=first_year) & (data.Year<=last_year)][\"3P\"].sum()   \n    y+=data[(data.Player==player_name[i]) & (data.Year>=first_year) & (data.Year<=last_year)][\"3PA\"].sum()   \n    player_3ptp.append(x\/y)\n    made3pt.append(x)\n    \nplayer3pt=pd.DataFrame({\"Player\":player_name,\"3P%\":player_3ptp,\"3P\":made3pt})\nplayer3pt=player3pt[player3pt[\"3P\"]>250]\nplayer3pt=player3pt.sort_values(\"3P%\",ascending=False)","622b2937":"#Visualization\nfirst_15=player3pt.head(15)\nplt.figure(figsize=(15,16))\nplt.bar(first_15.Player,first_15[\"3P%\"])\nplt.xticks(rotation=65)\nplt.xlabel(\"Player Names\")\nplt.ylabel(\"3P%\")\nplt.title(\"3-Pt Field Goal Percentage\")\nplt.ylim(0,0.5)\nplt.grid()\nplt.show()","5edb0b69":"#Creating data for visualization\nplayer_fg=[]\nfieldgoaltotal=[]\nfor i in range(0,len(player_name)):\n    x=0\n    y=0\n    first_year=player_year_start[i]\n    last_year=player_year_end[i]\n    x+=data[(data.Player==player_name[i]) & (data.Year>=first_year) & (data.Year<=last_year)][\"FG\"].sum()   \n    y+=data[(data.Player==player_name[i]) & (data.Year>=first_year) & (data.Year<=last_year)][\"FGA\"].sum()   \n    player_fg.append(x\/y)\n    fieldgoaltotal.append(x)\n    \nplayerfgp=pd.DataFrame({\"Player\":player_name,\"FG%\":player_fg,\"FG\":fieldgoaltotal})\nplayerfgp=playerfgp[playerfgp[\"FG\"]>2000]\nplayerfgp=playerfgp.sort_values(\"FG%\",ascending=False)","96f1c7f5":"#Visualization \nfgp_bar=playerfgp.head(20)\nplt.figure(figsize=(18,12))\nsns.barplot(x=fgp_bar.Player, y=fgp_bar[\"FG%\"],palette =sns.cubehelix_palette(len(fgp_bar)))\nplt.xticks(rotation=60)\nplt.xlabel(\"Player Names\")\nplt.ylabel(\"FG%\")\nplt.title(\"NBA Leaders for Field Goal Percentage\")","0cdd40b4":"#Detecting how many teams are there in NBA history.\ndata.Tm.unique()","aeeb5ddb":"#Adding datas whether teams play in East or West\nconferences={\"NYK\":\"East\",\"PHW\":\"East\",\"ROC\":\"East\",\"BLB\":\"East\",\"SYR\":\"East\",\"WSC\":\"East\",\"BOS\":\"East\",\"PHI\":\"East\",\"CLE\":\"East\",\n             \"BUF\":\"East\",\"CAP\":\"East\",\"NOJ\":\"East\",\"WSB\":\"East\",\"NYN\":\"East\",\"NJN\":\"East\",\"CHH\":\"East\",\"MIA\":\"East\",\n             \"ORL\":\"East\",\"TOR\":\"East\",\"WAS\":\"East\",\"CHA\":\"East\",\"BRK\":\"East\",\"NOP\":\"East\",\"CHO\":\"East\",\n             \"FTW\":\"West\",\"INO\":\"West\",\"CHS\":\"West\",\"DNN\":\"West\",\"TRI\":\"West\",\"AND\":\"West\",\"WAT\":\"West\",\n             \"SHE\":\"West\",\"MNL\":\"West\",\"STB\":\"West\",\"MLH\":\"West\",\"STL\":\"West\",\"DET\":\"West\",\"CIN\":\"West\",\n             \"LAL\":\"West\",\"CHP\":\"West\",\"SFW\":\"West\",\"CHZ\":\"West\",\"BAL\":\"West\",\"SDR\":\"West\",\"SEA\":\"West\",\"PHO\":\"West\",\"POR\":\"West\",\"KCO\":\"West\",\n             \"KCK\":\"West\",\"DEN\":\"West\",\"SDC\":\"West\",\"UTA\":\"West\",\"DAL\":\"West\",\"LAC\":\"West\",\"SAC\":\"West\",\"MIN\":\"West\",\"VAN\":\"West\",\"MEM\":\"West\",\n             \"OKC\":\"West\",\"GSW\":\"West\"}","bc0f62ce":"#Creating new column.\ndata[\"Conferences\"]=data[\"Tm\"].map(conferences)","4b54f1bd":"#There are some NBA teams that have played in east and west conference.\n\n#For Chicago Bulls\nfor i in data[(data.Tm==\"CHI\") & (data.Year>=1981)].index:\n    data.set_value(i,\"Conferences\",\"East\")\nfor i in data[(data.Tm==\"CHI\") & (data.Year<1981)].index:\n    data.set_value(i,\"Conferences\",\"West\")\n#For Milwaukee Bucks\nfor i in data[(data.Tm==\"MIL\") & (data.Year>=1981)].index:\n    data.set_value(i,\"Conferences\",\"East\")\nfor i in data[(data.Tm==\"MIL\") & (data.Year<1981)].index:\n    data.set_value(i,\"Conferences\",\"West\")\n#For Atlanta Hawks\nfor i in data[(data.Tm==\"ATL\") & (data.Year>=1971)].index:\n    data.set_value(i,\"Conferences\",\"East\")\nfor i in data[(data.Tm==\"ATL\") & (data.Year<1971)].index:\n    data.set_value(i,\"Conferences\",\"West\")\n#For Houston Rockets\nfor i in data[(data.Tm==\"HOU\") & (data.Year==1972)].index:\n    data.set_value(i,\"Conferences\",\"West\")\nfor i in data[(data.Tm==\"HOU\") & (data.Year>=1981)].index:\n    data.set_value(i,\"Conferences\",\"West\")\nfor i in data[(data.Tm==\"HOU\") & (data.Year<1981) & (data.Year>1972)].index:\n    data.set_value(i,\"Conferences\",\"East\")\n#For Indiana Pacers\nfor i in data[(data.Tm==\"IND\") & (data.Year>=1980)].index:\n    data.set_value(i,\"Conferences\",\"East\")\nfor i in data[(data.Tm==\"IND\") & (data.Year<1980)].index:\n    data.set_value(i,\"Conferences\",\"West\")\n#For San Antonio Spurs\nfor i in data[(data.Tm==\"SAS\") & (data.Year>=1981)].index:\n    data.set_value(i,\"Conferences\",\"West\")\nfor i in data[(data.Tm==\"SAS\") & (data.Year<1981)].index:\n    data.set_value(i,\"Conferences\",\"East\")\n#For New Orleans Hornets\nfor i in data[(data.Tm==\"NOH\") & (data.Year>=2005)].index:\n    data.set_value(i,\"Conferences\",\"West\")\nfor i in data[(data.Tm==\"NOH\") & (data.Year<2005)].index:\n    data.set_value(i,\"Conferences\",\"East\")\n","5b648abc":"#Creating data for visualization\ndataforsub2=data[data.Conferences==\"West\"].groupby(\"Year\").sum()\ndataforsub=data[data.Conferences==\"East\"].groupby(\"Year\").sum()","1be973da":"#Visualization\nplt.subplots(figsize =(20,10))\nplot1=sns.pointplot(x=dataforsub.index,y=\"PTS\",data=dataforsub,color=\"blue\",alpha=1.0,label=\"East\")\nplot2=sns.pointplot(x=dataforsub2.index,y=\"PTS\",data=dataforsub2,color=\"red\",alpha=1.0,label=\"West\")\n\nplt.xlabel(\"Years\",fontsize = 25)\nplt.ylabel(\"Total Points\",fontsize = 25)\nplt.xticks(rotation=70)\nplt.title(\"Total Points According To Conferences\",fontsize = 30,color='blue')\nplt.text(55,42000,\"East\",color=\"blue\",fontsize =20)\nplt.text(55,32000,\"West\",color=\"red\",fontsize=20)\nplt.grid()","252c3c09":"# 2. Preparation","277e0313":"**3.8 Total Points According To Conferences**","a61cab47":"** 3.6 NBA Leaders for 3-Pt Field Goal Percentage**","d798a687":"*Extra information about the graph*\n\nThe 1998\u201399 NBA lockout, which lasted for more than six months and forced the 1998\u201399 season to be shortened to 50 regular season games per team.\n\nThe 2011-2012 NBA lockout, which lasted for over eight months and forced the 2011\u201312 season to be shortened to 66 regular season games per team.","c8fa9abd":"**2.3 Data Cleaning **\n\nLet's do some action to make each columns equal for each data.","e285f615":"It was my first kernel and i selected NBA data because basketball is my favourite sport.While i was writing the codes,i tried purely to explain their purposes to be written.I'm glad for any feedback.","4d21aca0":"A quick view","f257f8fd":"**2.1 Required Libraries **","8df444a6":"**2.4 Lists For Visualization **","c223cfb5":"# 1. Introduction","7a23aeb2":"** 3.1 All Times Points**\n\n","26e71f43":"** 3.4 All Times Blocks**","0531f315":"**2.2 Data Preparation**","21bff8b6":"**2.5 Correlation Map**","02560a92":"** 3.7 NBA Leaders for Field Goal Percentage **","0876ef8c":" # 3. Visualizing Records","b8703385":"** 3.5 Total Points According To Years**","15e6231a":"** 3.2 All Times Assists**","a5d80815":"** 3.3 All Times Rebounds**"}}