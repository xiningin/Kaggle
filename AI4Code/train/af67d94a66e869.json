{"cell_type":{"7cae4700":"code","b07a3bf9":"code","53d2d756":"code","67667255":"code","dac0727a":"code","508fb443":"code","c4ac264b":"code","30cf1b48":"code","f22edede":"code","e68d3624":"code","79071ff2":"code","7b4630b6":"code","dee09045":"code","89424492":"code","c40a22c1":"code","e4b6c6c9":"code","4c16b303":"code","483b890f":"code","1d1b1840":"code","d8b7f96a":"code","c1405e3e":"code","318a8bc1":"code","d4ec81da":"code","17312c40":"code","a2bdaf60":"code","10e8ba38":"code","0c4ec210":"code","834cdf77":"code","197de9bc":"code","a60bcf67":"markdown","11e82e0c":"markdown","242703b6":"markdown","a641fdcf":"markdown","95dc6150":"markdown","8eb1c6cf":"markdown","29b66952":"markdown","bc4b0ad9":"markdown","5e7b9931":"markdown","f1b44fec":"markdown","8e9cb0cf":"markdown","e471b02d":"markdown","4b8e780c":"markdown","9fed5c00":"markdown","f3f0b8eb":"markdown","49ea93b2":"markdown","b5b6d2f1":"markdown","0236856b":"markdown","fa82a6ac":"markdown","36e43e55":"markdown","dffab5ab":"markdown"},"source":{"7cae4700":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline","b07a3bf9":"df = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")\nprint(df.shape)\ndf.head(10)","53d2d756":"print(df['HeartDisease'].value_counts())\nprint(df['HeartDisease'].value_counts(normalize=True))","67667255":"df[df.duplicated()]","dac0727a":"df.info()","508fb443":"df.describe()","c4ac264b":"for c in df.columns:\n    if ((c != 'HeartDisease') and (df[c].dtype == 'object' or df[c].nunique()<=10)):\n        plt.figure(figsize=(15,5))\n        ax = sns.countplot(df[c])\n        ax.set_title(f\"\\n\\nCountplt for '{c}' column showing count and percentage data for every category.\\n\\n\\n\", size=14, fontweight='bold')\n        for p in ax.patches:\n            ax.text(p.get_x() + p.get_width()\/2, p.get_height(), str(p.get_height()) +'\\n'+ str(round(p.get_height()\/len(df), 2)) +' %\\n')\n        ax.spines['top'].set_visible(False)\n        plt.show()","30cf1b48":"for c in df.columns:\n    if (df[c].dtype != 'object' and df[c].nunique()>10):\n        plt.figure(figsize=(15,5))\n        ax = sns.distplot(df[c])\n        ax.set_title(f\"\\n\\nDistribution plot for '{c}' column with kde having skewness: {round(df[c].skew(),1)}\\n\", size=14, fontweight='bold')\n        plt.show()","f22edede":"df[df['RestingBP']<80]","e68d3624":"print(df[df['Cholesterol']<70]['Cholesterol'].nunique())\nprint(len(df[df['Cholesterol']<70])\/len(df))\ndf[df['Cholesterol']<70]","79071ff2":"print(len(df[df['Oldpeak']<0]))\nprint(len(df[df['Oldpeak']<0])\/len(df))\ndf[df['Oldpeak']<0]","7b4630b6":"df = df.drop(df[df['Oldpeak']<0].index)","dee09045":"df[df['RestingBP']<80]","89424492":"df = df.drop(df[df.RestingBP<80].index)","c40a22c1":"df.shape","e4b6c6c9":"df.columns","4c16b303":"for c in df.columns:\n    if (c != 'HeartDisease' and df[c].nunique()<10):\n        fig, ax = plt.subplots(ncols=df[c].nunique(), figsize=(15,5))\n        p = 0\n        for i in df[c].unique():\n            ax[p].set_title('-'*150+'\\n'+str(c) +' : '+ str(i), size=14, fontweight='heavy')\n            patches, texts, pcts = ax[p].pie(df[df[c]==i]['HeartDisease'].value_counts().values,\n                   labels=df[df[c]==i]['HeartDisease'].value_counts().index,\n                     autopct=\"%1.2f%%\", startangle=90, colors=['crimson', 'blue'],\n                     wedgeprops={\"edgecolor\":\"black\"})\n            plt.setp(pcts, **{'color':'white','weight':'heavy','size':16})\n            p += 1 \n        fig.show()","483b890f":"for c in df.columns:\n    if (df[c].nunique()>10):\n        plt.figure(figsize=(15,5))\n        sns.kdeplot(df[c], hue=df['HeartDisease'])\n        plt.title(f\"\\n\\nKDE plot for '{c}' column \\n\", size=14, fontweight='bold')\n        plt.show()","1d1b1840":"plt.figure(figsize=(15,5))\nsns.kdeplot(df[df['Cholesterol']!=0]['Cholesterol'], hue=df['HeartDisease'])\nplt.title(f\"KDE plot for 'Cholesterol' column after deleting rows of zero\\n\", size=14, fontweight='bold')\nplt.show()","d8b7f96a":"for c in df.columns:\n    if (df[c].dtype == 'object'):\n        print(c,df[c].unique())","c1405e3e":"df['Sex_num'] = df['Sex'].apply(lambda x:0 if x is 'F' else 1)\ndf['ExerciseAngina_num'] = df['ExerciseAngina'].apply(lambda x:1 if x=='Y' else 0)\ndf.head(10)","318a8bc1":"for c in df.columns:\n    if (df[c].dtype == 'object' and df[c].nunique()>2):\n        for i in df[c].unique()[:-1]:\n            df[c+'_'+i] = df[c].apply(lambda x : 1 if x is i else 0)\n            \ndf.head(10)","d4ec81da":"col = []\nobj = []\nfor c in df.columns:\n    if (df[c].dtype != 'object'):\n        col.append(c)\n    else :\n        obj.append(c)\n\nprint(df.columns)\nprint(col)\nprint(obj)","17312c40":"from sklearn.model_selection import train_test_split\nxtn, xts, ytn, yts = train_test_split(df[col].drop('HeartDisease', axis=1), df['HeartDisease'], test_size=0.18, random_state=8)","a2bdaf60":"xtn.head()","10e8ba38":"ytn.head()","0c4ec210":"from sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier, VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score","834cdf77":"sc, model = 0,[]\n\nm = [RandomForestClassifier(random_state=8), LogisticRegression(solver='sag', random_state=8),\n     KNeighborsClassifier(n_neighbors=2), SVC(random_state=8), DecisionTreeClassifier(random_state=8)]\nfor mod in m:\n#     print(mod)\n    mod.fit(xtn, ytn)\n    pred = mod.predict(xts)\n    print(mod)\n    print(confusion_matrix(yts, pred))\n    print(accuracy_score(yts, pred))\n    if (sc < accuracy_score(yts, pred)):\n        sc = accuracy_score(yts, pred)\n        model.append(mod)","197de9bc":"print(sc, model)","a60bcf67":"### Observations :\n1. Gender ratio for observation is nealy 80:20.\n2. Data for TA (ChestTyoePain) and Down (ST_slope) is less than 10%.","11e82e0c":"### Observations : \n1. Heart Disease is major problem for male as 63% male affected by it, whereas only 26% female affected by heart disease.\n2. When person have Asymptomatic (ASY) chest pain and \/or FastingBS is 1 then there's nearly 80% chances of person is affected by heart diseasee.\n3. For RestingECG is ST there's 66% chances of heart disease.\n4. Person having ExserciseAngina as Y has very high risk (85%) of heart disease.\n5. For ST_Slpoe of Flat and Down have high risk (i.e. 83% and 77% respectively) of heart disease whereas for ST_Slope of Up affection risk is low (20%)","242703b6":"### Observations :\n1. In 'RestingBP' column there's only one observation having zero value. Also in 'Oldpeak' column 1.5% values are below zero. These values must outliers in dataset and cab deleted as number of observation are very less.\n2. In 'Cholesterol' column nearly 20% data has zero value which looks very disticnt from other values of dataset.\n3. Oldpeak and Cholesterol column shows some skewness which can be ignore.","a641fdcf":"### Steps : \n1. Sex and ExerciseAngina are binary categorical variable, so they can easily encoded in 0 and 1.\n2. All other are nominal categorical variable needs to encode using one hot encoding technique.","95dc6150":"## Importing dataset","8eb1c6cf":"Dataset do not have any duplicate values.","29b66952":"## Importing libraries","bc4b0ad9":"## Model Selection","5e7b9931":"Datasert is balanced.","f1b44fec":"### Observatios :\n1. As age increases risk of heart disease also increases and for age range of 55-65.\n2. Higher value of MaxHR shows sign of healthy heart.\n3. With increse in Oldpeak risk of heart disease also increses.\n4. Cholesterol having value near 200 is good for heart otherwise low and high cholesterol can cause heart disease. ","8e9cb0cf":"## Bivariate Analysis (Comparing with target column)","e471b02d":"## Checking duplicate values","4b8e780c":"Previously there are 918 ovservaton and now 904, so 14 observations (appx. 1.5 %) data is deleted.  ","9fed5c00":"# Heart Failure Prediction (supervised classification problem)","f3f0b8eb":"## Checking the dataset is balanced or not","49ea93b2":"### Observations :\n1. Dataset do not have any null values.\n2. Dataset may not have an outliers as all numeric column values range seems acceptable.\n3. Dataset has 5 categorical and 6 numerical features and one binary categorical taget. ","b5b6d2f1":"## Here RandomForest gives best result with accuracy of 84%","0236856b":"Attribute Information\n\nAge: age of the patient [years]\n\nSex: sex of the patient [M: Male, F: Female]\n\nChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\n\nRestingBP: resting blood pressure [mm Hg]\n\nCholesterol: serum cholesterol [mm\/dl]\n\nFastingBS: fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\n\nRestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\n\nMaxHR: maximum heart rate achieved [Numeric value between 60 and 202]\n\nExerciseAngina: exercise-induced angina [Y: Yes, N: No]\n\nOldpeak: oldpeak = ST [Numeric value measured in depression]\n\nST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n\nHeartDisease: output class [1: heart disease, 0: Normal]","fa82a6ac":"## Train test splitting","36e43e55":"## Univariate analysis","dffab5ab":"## Handling categorical variable"}}