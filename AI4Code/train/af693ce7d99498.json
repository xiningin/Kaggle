{"cell_type":{"cc94ac28":"code","76fb0ac0":"code","2e53487d":"code","9a96480e":"code","c823d92c":"code","3a61c55a":"code","97065fee":"code","8640cd36":"code","a777a1f0":"code","6a03e20a":"code","8409fd90":"code","02792c22":"code","a575e7dc":"code","2d1c387c":"code","c59c22a4":"markdown"},"source":{"cc94ac28":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76fb0ac0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","2e53487d":"data=pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndata.shape","9a96480e":"data.head()","c823d92c":"X=data.iloc[:,1:].values\nX.shape","3a61c55a":"y=data.iloc[:,0].values\ny.shape","97065fee":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=9)","8640cd36":"X_train.shape","a777a1f0":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier()","6a03e20a":"classifier.fit(X_train,y_train)","8409fd90":"y_test[555]","02792c22":"plt.imshow(X_test[555].reshape(28,28))","a575e7dc":"classifier.predict(X_test[555].reshape(1,784))","2d1c387c":"classifier.predict(X_test[100].reshape(1,784))","c59c22a4":"### Let check the same from our model"}}