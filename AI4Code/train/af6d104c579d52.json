{"cell_type":{"10c56037":"code","a57da738":"code","2e430fdf":"code","33954d69":"code","6918e23a":"code","c4af528c":"code","a24e4bc7":"code","0bf44b10":"code","b491e673":"code","4b204a02":"code","b1d67325":"code","eb8f1c55":"code","768a5208":"code","5646ea25":"code","df4d9317":"code","1dc47755":"code","552e9820":"code","35ae8961":"code","da353613":"code","37c80214":"code","347863d0":"code","b3554202":"code","c232b92c":"code","ab63beb7":"code","5e85441c":"code","0297f25a":"code","775c6115":"code","e2da4519":"code","7da26bdd":"code","d3134c0a":"code","a5033276":"code","0befd00b":"code","a6cbf329":"code","272fdaa5":"code","f0c5fc7f":"markdown","fddb1cac":"markdown","111e3140":"markdown","76d9611f":"markdown"},"source":{"10c56037":"%reset -sf","a57da738":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport functools, collections\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2e430fdf":"from tqdm.notebook import tqdm\ntqdm.pandas()","33954d69":"df = pd.read_csv(\"\/kaggle\/input\/logistics-shopee-code-league\/delivery_orders_march.csv\")","6918e23a":"# Pick Up Time 1583137548 (Converted to 2020-03-02 4:25:48 PM Local Time)\n(1583137548%(24*60*60))\/(60*60), ((1583137548+(8*60*60))%(24*60*60))\/(60*60)","c4af528c":"df[\"pick\"] = df[\"pick\"]+(8*60*60)\ndf[\"1st_deliver_attempt\"] = df[\"1st_deliver_attempt\"]+(8*60*60)\ndf[\"2nd_deliver_attempt\"] = df[\"2nd_deliver_attempt\"]+(8*60*60)","a24e4bc7":"df[\"t1\"] = df[\"pick\"]\/\/(24*60*60)\ndf[\"t2\"] = df[\"1st_deliver_attempt\"].astype(int)\/\/(24*60*60)\ndf[\"t3\"] = df[\"2nd_deliver_attempt\"]\/\/(24*60*60)","0bf44b10":"# assuming same day delivery for t3 if NaN (i.e. succesful first delivery)\ndf.loc[df[\"t3\"] != df[\"t3\"], \"t3\"] = df.loc[df[\"t3\"] != df[\"t3\"], \"t2\"]\ndf[\"t3\"] = df[\"t3\"].astype(int)","b491e673":"@functools.lru_cache(maxsize=None)\ndef get_sla(x,y):\n    if x == y == 0:\n        return 3\n    if x <= 1 and y <= 1:\n        return 5\n    return 7","4b204a02":"df[\"buyeraddress\"] = df[\"buyeraddress\"].str.lower()\ndf[\"selleraddress\"] = df[\"selleraddress\"].str.lower()\n\ndf[\"buyer_region\"] = -1\ndf[\"seller_region\"] = -1","b1d67325":"addresses = [\"metro manila\", \"luzon\", \"visayas\", \"mindanao\"]\nfor i,address in enumerate(addresses):\n    df.loc[df[\"buyeraddress\"].str.endswith(address, na=False), \"buyer_region\"] = i\n    df.loc[df[\"selleraddress\"].str.endswith(address, na=False), \"seller_region\"] = i","eb8f1c55":"collections.Counter(df[\"buyer_region\"])","768a5208":"collections.Counter(df[\"seller_region\"])","5646ea25":"df[\"sla\"] = df[['buyer_region','seller_region']].progress_apply(lambda x: get_sla(*x), axis=1)\ncollections.Counter(df[\"sla\"])","df4d9317":"import time\npattern = '%Y-%m-%d'\npublic_holidays = [int(time.mktime(time.strptime('2020-03-08', pattern)))\/\/(24*60*60),\n                   int(time.mktime(time.strptime('2020-03-25', pattern)))\/\/(24*60*60),\n                   int(time.mktime(time.strptime('2020-03-30', pattern)))\/\/(24*60*60),\n                   int(time.mktime(time.strptime('2020-03-31', pattern)))\/\/(24*60*60)]\npublic_holidays = set(public_holidays)\npublic_holidays","1dc47755":"(18329-3)%7   # '2020-03-08' is a Sunday","552e9820":"import functools\n\n@functools.lru_cache(maxsize=None)\ndef working(epoch_day):\n    epoch_day = int(epoch_day)\n    if (epoch_day-3)%7 == 0:\n        return False\n    if (epoch_day) in public_holidays:\n        return False\n    return True","35ae8961":"min_date, max_date = min(min(df[\"t1\"]), min(df[\"t2\"]), min(df[\"t3\"])), max(max(df[\"t1\"]), max(df[\"t2\"]), max(df[\"t3\"]))\nnon_working_days = set()\nfor date in range(int(min_date), int(max_date)+20):\n    if not(working(date)):\n        non_working_days.add(date)\nnon_working_days","da353613":"@functools.lru_cache(maxsize=None)\ndef required(start, sla):\n    start = int(start)\n    while sla:\n        if not start in non_working_days:\n            sla -= 1\n        start += 1\n    while start in non_working_days:\n        start += 1\n    return start","37c80214":"[required(x,3) for x in range(18345,18355)]","347863d0":"[required(x,3) for x in range(18345,18355)]","b3554202":"df[\"t2_required\"] = df[['t1','sla']].progress_apply(lambda x: required(*x), axis=1)\ncollections.Counter(df[\"t2_required\"] - df[\"t1\"])","c232b92c":"df[\"t3_required\"] = df['t2'].progress_apply(lambda x: required(x, 3))\ncollections.Counter(df[\"t3_required\"] - df[\"t2\"])","ab63beb7":"df[\"t2_fail\"] = df[\"t2\"] > df[\"t2_required\"]\ncollections.Counter(df[\"t2_fail\"])","5e85441c":"df[\"t3_fail\"] = df[\"t3\"] > df[\"t3_required\"]\ncollections.Counter(df[\"t3_fail\"])","0297f25a":"df[\"result\"] = df[\"t2_fail\"] | df[\"t3_fail\"]\ndf[\"is_late\"] = df[\"result\"].astype(int)\ncollections.Counter(df[\"is_late\"])","775c6115":"df[[\"orderid\", \"is_late\"]].to_csv(\"submission.csv\", index=False)","e2da4519":"df.head(5)","7da26bdd":"!head submission.csv","d3134c0a":"df.to_csv(\"not_the_submission.csv\", index=False)","a5033276":"# on why our old submission failed to get 1.0 (version 16)","0befd00b":"@functools.lru_cache(maxsize=None)\ndef g(xx):\n    xx = xx.lower()\n    for x in xx.split(\",\")[::-1]:\n        res = \"\"\n        if 'metro manila' in x:\n            res += \"0\"\n        if \"luzon\" in x:\n            res += \"1\"\n        if \"visayas\" in x:\n            res += \"2\"\n        if \"mindanao\" in x:\n            res += \"3\"\n        if res == \"\":\n            continue\n        return res\n    return -1","a6cbf329":"df[\"bb\"] = df[\"buyeraddress\"].progress_apply(g)  # assume all this place first\ncollections.Counter(df[\"bb\"])","272fdaa5":"df[\"ss\"] = df[\"selleraddress\"].progress_apply(g)  # assume all this place first\ncollections.Counter(df[\"ss\"])","f0c5fc7f":"# Get required deadline","fddb1cac":"# Adhoc","111e3140":"# Get SLA","76d9611f":"# Combine judgement"}}