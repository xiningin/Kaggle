{"cell_type":{"2efe5b62":"code","e4f53aab":"code","fd54a55a":"code","6ec3d05c":"code","8300fa9e":"code","f3d746b2":"code","49a0ebcf":"code","8e1f7af7":"code","c7dc358c":"code","6af6bfd0":"code","d64c2719":"code","f6e0b2cf":"code","4a743538":"code","eec93ffe":"code","3f55fe28":"code","5f88b0d1":"code","3e80a241":"code","8b699a5b":"code","d8d20f7f":"code","cf6a1511":"code","9c17d998":"code","e7f30613":"code","58c9ec8d":"code","42e19143":"code","be46a9dd":"code","4eb0d255":"code","82dfa219":"code","cc8b5b9e":"code","e07f736d":"code","66dd263c":"code","bbb70cd4":"code","ce0964f9":"markdown","0bf0dce2":"markdown","32b03f2a":"markdown","7ded7c18":"markdown","f5540f99":"markdown","973b2111":"markdown","e68d1fb3":"markdown","19bfd6a0":"markdown","24e90f31":"markdown","64cd4cbd":"markdown","b14b4a58":"markdown","e9278dde":"markdown","16bbad83":"markdown","540aff49":"markdown","4fc20ee4":"markdown","e64b6dee":"markdown","a9d46115":"markdown","45c74d8e":"markdown","b8e2f321":"markdown","9c4e4b2c":"markdown","ee555de5":"markdown","63749765":"markdown","4de554b9":"markdown","ca7b932c":"markdown","19f650b5":"markdown","89adbd08":"markdown","944f6376":"markdown","a171bf8a":"markdown","41db9eb8":"markdown","57afe157":"markdown","2ff2b90c":"markdown","3d897833":"markdown"},"source":{"2efe5b62":"import numpy as np \nimport pandas as pd\nimport operator\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# colorines\nsns.set_style(\"darkgrid\")\n#sns.set(rc={'axes.facecolor':'cornflowerblue', 'figure.facecolor':'orange'})\nsns.set(rc={'axes.facecolor':'#f4cb0b', 'figure.facecolor':'#f8f285'})\nSpain_color = 'Red'\nROW_color = 'Grey'\n\nkaggle_survey_2021 = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\", low_memory=False)\n\n# Traducir\n# Global replace\nkaggle_survey_2021 = kaggle_survey_2021.replace({'Other': 'Otro'}, regex=True)\nkaggle_survey_2021 = kaggle_survey_2021.replace({'None' : 'Ninguno'}, regex=True)\n\n# preguntas individuales\nkaggle_survey_2021[\"Q2\"] = kaggle_survey_2021[\"Q2\"].str.replace('Man','Hombre')\nkaggle_survey_2021[\"Q2\"] = kaggle_survey_2021[\"Q2\"].str.replace('Woman','Mujer')\norder_Q2 = ['Hombre','Mujer']\n\nkaggle_survey_2021[\"Q4\"] = kaggle_survey_2021[\"Q4\"].str.replace('No formal education past high school','Sin estudios')\nkaggle_survey_2021[\"Q4\"] = kaggle_survey_2021[\"Q4\"].str.replace('Bachelor\u2019s degree','Grado')\nkaggle_survey_2021[\"Q4\"] = kaggle_survey_2021[\"Q4\"].str.replace('Master\u2019s degree','M\u00e1ster')\nkaggle_survey_2021[\"Q4\"] = kaggle_survey_2021[\"Q4\"].str.replace('Doctoral degree','Doctorado')\n#order = [\"No formal education past high school\",\"Bachelor\u2019s degree\",\"Master\u2019s degree\",\"Doctoral degree\"]\norder_Q4 = ['Sin estudios','Grado','M\u00e1ster','Doctorado']\n\nkaggle_survey_2021[\"Q5\"] = kaggle_survey_2021[\"Q5\"].str.replace('Student','Estudiante')\nkaggle_survey_2021[\"Q5\"] = kaggle_survey_2021[\"Q5\"].str.replace('Currently not employed','Sin empleo')\n\n\nkaggle_survey_2021[\"Q6\"] = kaggle_survey_2021[\"Q6\"].str.replace('years','a\u00f1os')\nkaggle_survey_2021[\"Q6\"] = kaggle_survey_2021[\"Q6\"].str.replace('I have never written code','Nunca')\norder_Q6 = ['Nunca',\n         '< 1 a\u00f1os',\n         '1-3 a\u00f1os',\n         '3-5 a\u00f1os',\n         '5-10 a\u00f1os',\n         '10-20 a\u00f1os',\n         '20+ a\u00f1os']\n\nkaggle_survey_2021[\"Q15\"] = kaggle_survey_2021[\"Q15\"].str.replace('I do not use machine learning methods','No uso ML')\nkaggle_survey_2021[\"Q15\"] = kaggle_survey_2021[\"Q15\"].str.replace('Under 1 year','< 1 a\u00f1o')\nkaggle_survey_2021[\"Q15\"] = kaggle_survey_2021[\"Q15\"].str.replace('20 or more years','> 20 a\u00f1os')\nkaggle_survey_2021[\"Q15\"] = kaggle_survey_2021[\"Q15\"].str.replace('years','a\u00f1os')\norder_Q15 = ['No uso ML',\n         '< 1 a\u00f1o',\n         '1-2 a\u00f1os',\n         '2-3 a\u00f1os',\n         '3-4 a\u00f1os',\n         '5-10 a\u00f1os',\n         '10-20 a\u00f1os',\n         '> 20 a\u00f1os']\n\nkaggle_survey_2021[\"Q18_Part_1\"] = kaggle_survey_2021[\"Q18_Part_1\"].str.replace('General purpose image\/video tools \\(PIL, cv2, skimage, etc\\)',\n                                                                                'Herramientas generales', regex=True)\nkaggle_survey_2021[\"Q18_Part_2\"] = kaggle_survey_2021[\"Q18_Part_2\"].str.replace('Image segmentation methods \\(U-Net, Mask R-CNN, etc\\)',\n                                                                                'Segmentaci\u00f3n', regex=True)\nkaggle_survey_2021[\"Q18_Part_3\"] = kaggle_survey_2021[\"Q18_Part_3\"].str.replace('Object detection methods \\(YOLOv3, RetinaNet, etc\\)',\n                                                                                'Detecci\u00f3n de objetos', regex=True)\nkaggle_survey_2021[\"Q18_Part_4\"] = kaggle_survey_2021[\"Q18_Part_4\"].str.replace('Image classification and other general purpose networks \\(VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc\\)',\n                                                                                'Clasificaci\u00f3n de im\u00e1genes', regex=True)\nkaggle_survey_2021[\"Q18_Part_5\"] = kaggle_survey_2021[\"Q18_Part_5\"].str.replace('Generative Networks \\(GAN, VAE, etc\\)','Redes generativas', regex=True)    \n    \n\nkaggle_survey_2021[\"Q19_Part_1\"] = kaggle_survey_2021[\"Q19_Part_1\"].str.replace('Word embeddings\/vectors \\(GLoVe, fastText, word2vec\\)',\n                                                                                'Word embeddings\/vectors', regex=True)\nkaggle_survey_2021[\"Q19_Part_2\"] = kaggle_survey_2021[\"Q19_Part_2\"].str.replace('Encoder-decorder models \\(seq2seq, vanilla transformers\\)',\n                                                                                'modelos Encoder-decorder', regex=True)\nkaggle_survey_2021[\"Q19_Part_3\"] = kaggle_survey_2021[\"Q19_Part_3\"].str.replace('Contextualized embeddings \\(ELMo, CoVe\\)',\n                                                                                'Contextualized embeddings', regex=True)\nkaggle_survey_2021[\"Q19_Part_4\"] = kaggle_survey_2021[\"Q19_Part_4\"].str.replace('Transformer language models \\(GPT-3, BERT, XLnet, etc\\)',\n                                                                                'modelos Transformer',  regex=True)\n    \nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Computers\/Technology',\n                                                                  'Ordenadores\/Tecnolog\u00eda',regex=True) \nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Academics\/Education',\n                                                                  'Academia\/Educaci\u00f3n', regex=True) \nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Accounting\/Finance',\n                                                                  'Contabilidad\/Finanzas', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Manufacturing\/Fabrication',\n                                                                  'Fabricaci\u00f3n', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Medical\/Pharmaceutical',\n                                                                  'Medica\/Farmac\u00e9utico', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Government\/Public Service',\n                                                                  'Estatal', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Online Service\/Internet-based Services',\n                                                                  'Online\/Internet', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Energy\/Mining',\n                                                                  'Energ\u00eda\/Miner\u00eda', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Retail\/Sales',\n                                                                  'Ventas', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Insurance\/Risk Assessment',\n                                                                  'Seguros\/Asesoramiento de riesgo', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Marketing\/CRM',\n                                                                  'Marketing', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Broadcasting\/Communications',\n                                                                  'Media\/Comunicaciones', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Shipping\/Transportation',\n                                                                  'Transportaci\u00f3n', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Non-profit\/Service',\n                                                                  'NGO', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Online Business\/Internet-based Sales',\n                                                                  'Ventas online', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Military\/Security\/Defense',\n                                                                  'Defensa\/Seguridad', regex=True)\nkaggle_survey_2021[\"Q20\"] = kaggle_survey_2021[\"Q20\"].str.replace('Hospitality\/Entertainment\/Sports',\n                                                                  'Deportes\/Ocio', regex=True)\n\nkaggle_survey_2021[\"Q21\"] = kaggle_survey_2021[\"Q21\"].str.replace('10,000 or more employees','> 10,000 empleados')\nkaggle_survey_2021[\"Q21\"] = kaggle_survey_2021[\"Q21\"].str.replace('employees','empleados')\norder_Q21 = ['0-49 empleados',\n         '50-249 empleados',\n         '250-999 empleados',\n         '1000-9,999 empleados',\n         '> 10,000 empleados']\n\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('We are exploring ML methods \\(and may one day put a model into production\\)',\n                                                                  'No, pero lo estamos considerando', regex=True)\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('No \\(we do not use ML methods\\)',\n                                                                  'No usamos ML', regex=True)\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('I do not know',\n                                                                  'No s\u00e9', regex=True)\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('We have well established ML methods \\(i.e., models in production for more than 2 years\\)',\n                                                                  'Si (> de 2 a\u00f1os)', regex=True)\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('We recently started using ML methods \\(i.e., models in production for less than 2 years\\)',\n                                                                  'Estamos empezando (< de 2 a\u00f1os)', regex=True)\nkaggle_survey_2021[\"Q23\"] = kaggle_survey_2021[\"Q23\"].str.replace('We use ML methods for generating insights \\(but do not put working models into production\\)',\n                                                                  'Lo usamos solo para generar insights', regex=True)\n\nkaggle_survey_2021[\"Q24_Part_1\"] = kaggle_survey_2021[\"Q24_Part_1\"].str.replace('Analyze and understand data to influence product or business decisions',\n                                                                                'An\u00e1lisis para tomar decisiones')\nkaggle_survey_2021[\"Q24_Part_2\"] = kaggle_survey_2021[\"Q24_Part_2\"].str.replace('Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data',\n                                                                                'Construir y\/o mantener la infraestructura de datos', regex=True)\nkaggle_survey_2021[\"Q24_Part_3\"] = kaggle_survey_2021[\"Q24_Part_3\"].str.replace('Build prototypes to explore applying machine learning to new areas',\n                                                                                'Construir prototipos', regex=True)\nkaggle_survey_2021[\"Q24_Part_4\"] = kaggle_survey_2021[\"Q24_Part_4\"].str.replace('Build and\/or run a machine learning service that operationally improves my product or workflows',\n                                                                                'Construir y\/o mantener un servicio de ML', regex=True)\nkaggle_survey_2021[\"Q24_Part_5\"] = kaggle_survey_2021[\"Q24_Part_5\"].str.replace('Experimentation and iteration to improve existing ML models',\n                                                                                'Experimentaci\u00f3n con, y mejora de modelos ML ya existentes', regex=True)\nkaggle_survey_2021[\"Q24_Part_6\"] = kaggle_survey_2021[\"Q24_Part_6\"].str.replace('Do research that advances the state of the art of machine learning',\n                                                                                'Investigaci\u00f3n\/estado del arte de ML', regex=True)\nkaggle_survey_2021[\"Q24_Part_7\"] = kaggle_survey_2021[\"Q24_Part_7\"].str.replace('Ninguno of these activities are an important part of my role at work',\n                                                                                'Ninguno de estos actividades', regex=True)\n                                                                                \n\nkaggle_survey_2021[\"Q26\"] = kaggle_survey_2021[\"Q26\"].str.replace('\\$100,000 or more \\($USD\\)','> $100,000', regex=True)\norder_26 = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999', '$10,000-$99,999', '> $100,000']\n\nkaggle_survey_2021[\"Q36_A_Part_1\"] = kaggle_survey_2021[\"Q36_A_Part_1\"].str.replace('Automated data augmentation \\(e.g. imgaug, albumentations\\)',\n                                                                                    'Automated data augmentation', regex=True)\nkaggle_survey_2021[\"Q36_A_Part_2\"] = kaggle_survey_2021[\"Q36_A_Part_2\"].str.replace('Automated feature engineering\/selection \\(e.g. tpot, boruta_py\\)',\n                                                                                    'Automated feature engineering\/selection', regex=True)\nkaggle_survey_2021[\"Q36_A_Part_3\"] = kaggle_survey_2021[\"Q36_A_Part_3\"].str.replace('Automated model selection \\(e.g. auto-sklearn, xcessiv\\)',\n                                                                                    'Automated model selection',regex=True)\nkaggle_survey_2021[\"Q36_A_Part_4\"] = kaggle_survey_2021[\"Q36_A_Part_4\"].str.replace('Automated model architecture searches \\(e.g. darts, enas\\)',\n                                                                                    'Automated model architecture searches',regex=True)\nkaggle_survey_2021[\"Q36_A_Part_5\"] = kaggle_survey_2021[\"Q36_A_Part_5\"].str.replace('Automated hyperparameter tuning \\(e.g. hyperopt, ray.tune, Vizier\\)',\n                                                                                    'Automated hyperparameter tuning',regex=True)\nkaggle_survey_2021[\"Q36_A_Part_6\"] = kaggle_survey_2021[\"Q36_A_Part_6\"].str.replace('Automation of full ML pipelines \\(e.g. Google AutoML, H2O Driverless AI\\)',\n                                                                                    'Automation of full ML pipelines',regex=True)\n    \n    \nkaggle_survey_2021[\"Q40_Part_9\"] = kaggle_survey_2021[\"Q40_Part_9\"].str.replace('Cloud-certification programs \\(direct from AWS, Azure, GCP, or similar\\)',\n                                                                                  'Cloud-certification programs', regex=True)\n\nkaggle_survey_2021[\"Q40_Part_10\"] = kaggle_survey_2021[\"Q40_Part_10\"].str.replace('University Courses \\(resulting in a university degree\\)',\n                                                                                  'Asignaturas universitarios', regex=True)\n\nkaggle_survey_2021[\"Q41\"] = kaggle_survey_2021[\"Q41\"].str.replace('Basic statistical software \\(Microsoft Excel, Google Sheets, etc.\\)',\n                                                                  'Programas de estad\u00edstica b\u00e1sica', regex=True)\nkaggle_survey_2021[\"Q41\"] = kaggle_survey_2021[\"Q41\"].str.replace('Local development environments \\(RStudio, JupyterLab, etc.\\)',\n                                                                  'Entornos de desarrollo local', regex=True)\nkaggle_survey_2021[\"Q41\"] = kaggle_survey_2021[\"Q41\"].str.replace('Business intelligence software \\(Salesforce, Tableau, Spotfire, etc.\\)',\n                                                                  'Business intelligence software', regex=True)\nkaggle_survey_2021[\"Q41\"] = kaggle_survey_2021[\"Q41\"].str.replace('Cloud-based data software & APIs \\(AWS, GCP, Azure, etc.\\)',\n                                                                  'Cloud-based data software & APIs', regex=True)\nkaggle_survey_2021[\"Q41\"] = kaggle_survey_2021[\"Q41\"].str.replace('Advanced statistical software \\(SPSS, SAS, etc.\\)',\n                                                                  'Programas de estad\u00edstica avanzada', regex=True)\n\n# split\nkaggle_Spain = kaggle_survey_2021.query(\"Q3 == 'Spain'\").reset_index(drop = True)\nkaggle_ROW   = kaggle_survey_2021.query(\"Q3 != 'Spain'\").reset_index(drop = True)\n#kaggle_ROW   = kaggle_survey_2021.query(\"Q3 == 'France'\").reset_index(drop = True)\n\n#  delete the questions in row 0\nkaggle_ROW   = kaggle_ROW.drop(0)","e4f53aab":"order = kaggle_Spain[\"Q1\"].value_counts().index.sort_values()\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Edad', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=\"Q1\", data=kaggle_Spain, order=order, color=Spain_color)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=\"Q1\", data=kaggle_ROW, order=order, color=ROW_color)\nplt.xlabel(\"\")\nplt.show()","fd54a55a":"plt.figure(figsize=(15, 5))\nplt.suptitle('G\u00e9nero', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nax1 = sns.countplot(x=\"Q2\", data=kaggle_Spain, order=order_Q2, color=Spain_color)\nplt.tick_params(axis='x', rotation=10)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nax2 = sns.countplot(x=\"Q2\", data=kaggle_ROW, order=order_Q2, color=ROW_color)\nplt.tick_params(axis='x', rotation=10)\nplt.xlabel(\"\")\nfor p in ax1.patches:\n    ax1.annotate(f'\\n{p.get_height()}', (p.get_x()+0.2, p.get_height()), ha='center', va='top', color='white', size=14)\nfor p in ax2.patches:\n    ax2.annotate(f'\\n{p.get_height()}', (p.get_x()+0.2, p.get_height()), ha='center', va='top', color='white', size=14)\nplt.show()","6ec3d05c":"plt.figure(figsize=(15, 5))\nplt.suptitle('Nivel educativo', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=\"Q4\", data=kaggle_Spain, order=order_Q4, color=Spain_color)\nplt.tick_params(axis='x', rotation=10)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=\"Q4\", data=kaggle_ROW, order=order_Q4, color=ROW_color)\nplt.tick_params(axis='x', rotation=10)\nplt.xlabel(\"\")\nplt.show()","8300fa9e":"plt.figure(figsize=(15, 5))\nplt.suptitle('Descripci\u00f3n del puesto de trabajo', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=\"Q5\", data=kaggle_Spain,  color=\"Red\", order = kaggle_Spain['Q5'].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=\"Q5\", data=kaggle_ROW,  color=ROW_color, order = kaggle_ROW['Q5'].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","f3d746b2":"plt.figure(figsize=(15, 5))\nplt.suptitle('\u00bfCuantos a\u00f1os llevas programando?', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.countplot(x=\"Q6\", data=kaggle_Spain,order=order_Q6, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.countplot(x=\"Q6\", data=kaggle_ROW,order=order_Q6, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","49a0ebcf":"n_parts = 13\nfirst_col = 7\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split()[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Lenguajes de programaci\u00f3n m\u00e1s usados', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","8e1f7af7":"n_parts = 13\nfirst_col = 21\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split('-')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('IDE usada con frecuencia', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","c7dc358c":"first_col = 59\nn_parts = 12\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split('-')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Librer\u00edas de visualizaci\u00f3n de datos', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","6af6bfd0":"plt.figure(figsize=(15, 5))\nplt.suptitle('\u00bfCu\u00e1ntos a\u00f1os llevas con ML?', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.countplot(x=\"Q15\", data=kaggle_Spain,order=order_Q15, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.countplot(x=\"Q15\", data=kaggle_ROW,order=order_Q15, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","d64c2719":"first_col = 72\nn_parts = 18\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('ML\/DL Frameworks', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","f6e0b2cf":"first_col = 90\nn_parts = 12\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Algoritmos', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","4a743538":"first_col = 102\nn_parts = 7\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Visi\u00f3n artificial', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","eec93ffe":"first_col = 109\nn_parts = 6\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('NLP Frameworks', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","3f55fe28":"question_num = 'Q20'\nplt.figure(figsize=(15, 5))\nplt.suptitle('Industria', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = kaggle_Spain[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_ROW,  color=ROW_color, order = kaggle_ROW[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","5f88b0d1":"question_num = 'Q21'\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Tama\u00f1o de empresa', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = order_Q21)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_ROW,  color=ROW_color, order = order_Q21)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","3e80a241":"question_num = 'Q22'\n\norder = ['0',\n         '1-2',\n         '3-4',\n         '5-9',\n         '10-14',\n        '15-19',\n        '20+']\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Numero de gente en DS', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = order)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_ROW,  color=ROW_color, order = order)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","8b699a5b":"question_num = 'Q23'\nplt.figure(figsize=(15, 5))\nplt.suptitle('Uso de modelos de ML en tu empresa', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = kaggle_Spain[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_ROW,  color=ROW_color, order = kaggle_ROW[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","d8d20f7f":"n_parts = 8\nfirst_col = 119\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split('-')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Tu actividad en tu empresa', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","cf6a1511":"question_num = 'Q25'\n\norder = [#'$0-999',\n         '1,000-1,999','2,000-2,999','3,000-3,999','4,000-4,999','5,000-7,499',\n         '7,500-9,999','10,000-14,999','15,000-19,999','20,000-24,999','25,000-29,999',\n         '30,000-39,999','40,000-49,999','50,000-59,999','60,000-69,999','70,000-79,999',\n         '80,000-89,999', '90,000-99,999','100,000-124,999','125,000-149,999','150,000-199,999',\n         '200,000-249,999']\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Salario (USD)', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = order)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_survey_2021,  color=ROW_color, order = order)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","9c17d998":"question_num = 'Q26'\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Dinero gastado en servicios', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = order_26)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_survey_2021,  color=ROW_color, order = order_26)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","e7f30613":"first_col = 129\nn_parts = 12\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle(\"Servicios 'Cloud'\", fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","58c9ec8d":"first_col = 147\nn_parts = 8\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle(\"Almacenamiento 'Cloud'\", fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","42e19143":"first_col = 155\nn_parts = 10\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Cloud ML', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","be46a9dd":"first_col = 165\nn_parts = 21\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Big data services', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","4eb0d255":"first_col = 187\nn_parts = 17\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Business Intelligence', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","82dfa219":"first_col = 205\nn_parts = 8\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('AutoML', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","cc8b5b9e":"first_col = 213\nn_parts = 8\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Full AutoML', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","e07f736d":"first_col = 221\nn_parts = 12\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Logging de experimentos', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","66dd263c":"first_col = 243\nn_parts = 12\n\nROW_list   =[]\nSpain_list =[]\nQ7_list    =[]\n\nfor n in range(first_col,first_col+n_parts):\n    ROW_list.append(kaggle_ROW.iloc[:,n].count() )\n    Spain_list.append(kaggle_Spain.iloc[:,n].count() )\n    Q7_list.append(kaggle_survey_2021.iloc[0,n].split(' -')[-1])\n    \nSpain_dictionary = dict(zip(Q7_list, Spain_list))\nROW_dictionary = dict(zip(Q7_list, ROW_list))\n\nSpain_dictionary_sorted = sorted(Spain_dictionary.items(), key=operator.itemgetter(1), reverse = True)\nROW_dictionary_sorted   = sorted(ROW_dictionary.items(), key=operator.itemgetter(1), reverse = True)\n\nSpain_df = pd.DataFrame(Spain_dictionary_sorted, columns=['Language', 'count'])\nROW_df = pd.DataFrame(ROW_dictionary_sorted, columns=['Language', 'count'])\n\nplt.figure(figsize=(15, 5))\nplt.suptitle('Microaprendizaje', fontsize=20)\nplt.subplot(1, 2, 1)\nsns.barplot(x=\"Language\", y=\"count\", data=Spain_df, color=Spain_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nsns.barplot(x=\"Language\", y=\"count\", data=ROW_df, color=ROW_color)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","bbb70cd4":"question_num = 'Q41'\nplt.figure(figsize=(15, 5))\nplt.suptitle('Programas de an\u00e1lisis', fontsize=22)\nplt.subplot(1, 2, 1)\nplt.title('Espa\u00f1a', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_Spain,  color=Spain_color, order = kaggle_Spain[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.subplot(1, 2, 2)\nplt.title('El resto del mundo', fontsize=14)\nsns.countplot(x=question_num, data=kaggle_ROW,  color=ROW_color, order = kaggle_ROW[question_num].value_counts().index)\nplt.tick_params(axis='x', rotation=90)\nplt.xlabel(\"\")\nplt.show()","ce0964f9":"Los dos servicios de almacenamiento cloud m\u00e1s populares son\n* [Amazon Simple Storage Service (Amazon S3)](https:\/\/aws.amazon.com\/s3\/)\n* [Google Cloud Storage (GCS)](https:\/\/cloud.google.com\/storage\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">'Cloud' ML services<\/center>","0bf0dce2":"Las rutinas de [scikit-learn](https:\/\/scikit-learn.org\/stable\/index.html) de machine learning son los m\u00e1s populares, tanto en Espa\u00f1a como en el resto del mundo, seguidos por las librer\u00edas de deep learning [TensorFlow](https:\/\/www.tensorflow.org\/), [Keras](https:\/\/keras.io\/) y [PyTorch](https:\/\/pytorch.org\/) para redes neuronales.\nPara gradient boosting lo m\u00e1s popular es [XGBoost](https:\/\/xgboost.ai\/), por encima de [LightGBM](https:\/\/github.com\/Microsoft\/LightGBM) y [CatBoost](https:\/\/catboost.ai\/).\n# <center style=\"background-color:Gainsboro; width:40%;\">ML Algoritmos<\/center>","32b03f2a":"En Espa\u00f1a vemos una gran presencia de programadores \"veteranos\", siendo el pico m\u00e1s alto el que corresponde a los *senior*, con m\u00e1s de 20 a\u00f1os de experiencia programando.\n# <center style=\"background-color:Gainsboro; width:60%;\">Lenguajes de programaci\u00f3n<\/center>","7ded7c18":"Vemos que tanto en Espa\u00f1a como en el resto del mundo el lenguaje preferido es [python](https:\/\/www.python.org\/), seguido por SQL. En Espa\u00f1a tambi\u00e9n es muy popular el lenguaje estad\u00edstico [R](https:\/\/www.r-project.org\/about.html).\n# <center style=\"background-color:Gainsboro; width:80%;\">\u00bfQu\u00e9 integrated development environments (IDE's) usas con frecuencia?<\/center>","f5540f99":"# <center style=\"background-color:Gainsboro; width:60%;\">'Big Data' services<\/center>","973b2111":"En Espa\u00f1a podemos ver claramente dos picos; el de 25-29 a\u00f1os, que probablemente corresponde a reci\u00e9n graduados de la universidad en las nuevas carreras que incorporan \"data science\", \"big data\", etc. y otro pico a los 45-49 a\u00f1os, correspondiente a gente '*senior*'. En cambio, en el resto del mundo la gran mayor\u00eda de los encuestados son menores de 30 a\u00f1os, en concreto destaca el gran n\u00famero de j\u00f3venes entre 18-21 a\u00f1os.\n# <center style=\"background-color:Gainsboro; width:40%;\">G\u00e9nero<\/center>","e68d1fb3":"Vemos aqu\u00ed que Espa\u00f1a es por delante del resto del mundo en que muchos empresas est\u00e1n empezando a incorporar ML como parte de su infraestructura.\n\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Tu actividad en tu empresa<\/center>","19bfd6a0":"La mayor\u00eda de gente no usa un sistema formal de anotar sus experimentos, pero entre los que s\u00ed, los m\u00e1s populares son:\n\n* [TensorBoard](https:\/\/www.tensorflow.org\/tensorboard\/)\n* [MLflow](https:\/\/mlflow.org\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Cursos de Data Science<\/center>","24e90f31":"* Word embeddings\/vectors: [GLoVe](https:\/\/nlp.stanford.edu\/projects\/glove\/), [fastText](https:\/\/fasttext.cc\/), [word2vec](https:\/\/en.wikipedia.org\/wiki\/Word2vec) *etc.*\n* Encoder-decoder models: [seq2seq](https:\/\/google.github.io\/seq2seq\/), vanilla transformers, *etc*.\n* Contextualized embeddings: [ELMo](https:\/\/github.com\/HIT-SCIR\/ELMoForManyLangs), CoVe\n* Transformer language models: [GPT-3](https:\/\/es.wikipedia.org\/wiki\/GPT-3), [BERT](https:\/\/arxiv.org\/pdf\/1810.04805.pdf), [XLnet](https:\/\/github.com\/zihangdai\/xlnet), *etc*.\n\nVemos que apenas hay diferencia entre Espa\u00f1a y el resto del mundo en las aplicaciones de NLP.\n\n# <center style=\"background-color:Gainsboro; width:60%;\">\u00bfEn qu\u00e9 industria trabajas?<\/center>","64cd4cbd":"# <center style=\"background-color:Gainsboro; width:20%;\">Edad<\/center>\nPrimero empezamos por las edades de los encuestados:","b14b4a58":"Podemos ver que en Espa\u00f1a el grupo de gente m\u00e1s numeroso que usan kaggle son acad\u00e9micos o universitarios, seguido por inform\u00e1ticos. En tercer lugar es la industria financiera. En el resto del mundo el primer lugar est\u00e1 tomado por el sector inform\u00e1tico y los acad\u00e9micos\/universitarios ocupan el segundo lugar.\n# <center style=\"background-color:Gainsboro; width:60%;\">Tama\u00f1o de empresa<\/center>","e9278dde":"* Herramientas generales: [PIL (pillow)](https:\/\/python-pillow.org\/), [cv2 (OpenCV)](https:\/\/github.com\/opencv\/opencv-python), [skimage (scikit-image)](https:\/\/scikit-image.org\/docs\/stable\/api\/skimage.html), *etc*.\n* Segmentacion: [U-Net](https:\/\/arxiv.org\/pdf\/1505.04597v1.pdf), [Mask R-CNN](https:\/\/arxiv.org\/pdf\/1703.06870.pdf), *etc.*\n* Detecci\u00f3n de objetos: [YOLOv3](https:\/\/github.com\/ultralytics\/yolov3), [RetinaNet](https:\/\/arxiv.org\/pdf\/1708.02002v2.pdf), *etc.*\n* Clasificaci\u00f3n de im\u00e1genes: [VGG](https:\/\/keras.io\/api\/applications\/vgg\/), [Inception](https:\/\/keras.io\/api\/applications\/inceptionv3\/), [ResNet](https:\/\/github.com\/pskrunner14\/resnet-classifier), [ResNeXt](https:\/\/arxiv.org\/pdf\/1611.05431v2.pdf), [NASNet](https:\/\/arxiv.org\/pdf\/1912.03151v1.pdf), [EfficientNet](https:\/\/ai.googleblog.com\/2019\/05\/efficientnet-improving-accuracy-and.html), *etc.*\n* Redes generativas: [GAN](https:\/\/es.wikipedia.org\/wiki\/Red_generativa_antag%C3%B3nica), [VAE](https:\/\/en.wikipedia.org\/wiki\/Variational_autoencoder), *etc.*\n\nAqu\u00ed vemos que la aplicaci\u00f3n m\u00e1s habitual de visi\u00f3n artificial es la clasificaci\u00f3n de im\u00e1genes.\n\n# <center style=\"background-color:Gainsboro; width:80%;\">Frameworks de procesamiento de lenguaje natural (NLP)<\/center>","16bbad83":"* Automated data augmentation (p.ej. [imgaug](https:\/\/imgaug.readthedocs.io\/en\/latest\/), [albumentations](https:\/\/albumentations.ai\/))\n* Automated feature engineering\/selection (p.eg. [tpot](https:\/\/epistasislab.github.io\/tpot\/), [boruta_py](https:\/\/github.com\/scikit-learn-contrib\/boruta_py))\n* Automated model selection (e.g. [auto-sklearn](https:\/\/automl.github.io\/auto-sklearn\/master\/), [xcessiv](https:\/\/github.com\/reiinakano\/xcessiv))\n* Automated model architecture searches (e.g. [darts](https:\/\/github.com\/quark0\/darts), [enas](https:\/\/github.com\/melodyguan\/enas))\n* Automated hyperparameter tuning (e.g. [hyperopt](https:\/\/hyperopt.github.io\/hyperopt\/), [ray.tune](https:\/\/www.ray.io\/ray-tune), [Vizier](https:\/\/cloud.google.com\/ai-platform\/optimizer\/docs\/overview))\n* Automation of full ML pipelines: ver el siguiente grafico\n\nSe puede ver, por lo menos entre gente que usa kaggle, que AutoML tiene poco uso.\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Full AutoML<\/center>","540aff49":"# <center style=\"background-color:Gainsboro; width:80%;\">\u00bfTu empresa usa modelos de ML?<\/center>","4fc20ee4":"Cuando llega al momento de plotear resultados la librer\u00eda m\u00e1s popular es [matplotlib](https:\/\/matplotlib.org\/) para Python, seguido por [seaborn](https:\/\/seaborn.pydata.org\/) (basado en matplotlib). En Espa\u00f1a la siguiente librer\u00eda es [ggplot2](https:\/\/ggplot2.tidyverse.org\/), parte de los paquetes de tidyverse para R. \n# <center style=\"background-color:Gainsboro; width:40%;\">ML \u00bfCu\u00e1ntos a\u00f1os?<\/center>","e64b6dee":"Las tres m\u00e1s populares son:\n* [Coursera](https:\/\/www.coursera.org\/)\n* [Kaggle learn courses](https:\/\/www.kaggle.com\/learn)\n* [Udemy](https:\/\/www.udemy.com\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Programas de an\u00e1lisis <\/center>","a9d46115":"Podemos ver que los algoritmos m\u00e1s b\u00e1sicos; regresi\u00f3n lineal, y regresi\u00f3n log\u00edstica para problemas de clasificaci\u00f3n, son las m\u00e1s populares, seguido por \u00e1rboles de decisi\u00f3n, y despu\u00e9s por los algoritmos de gradient boosting. Los redes neuronales ocupan los cuarto y quinto lugares.\n# <center style=\"background-color:Gainsboro; width:60%;\">T\u00e9cnicas de visi\u00f3n artificial<\/center>","45c74d8e":"Podemos ver que un gran numero de los encuestados trabajan en PYMES.\n\n# <center style=\"background-color:Gainsboro; width:80%;\">N\u00famero de gente responsable de Data Science<\/center>","b8e2f321":"Es interesante ver que en Espa\u00f1a la mayor parte de las personas involucradas actualmente en la ciencia de datos han realizado un m\u00e1ster, mientras que en el resto del mundo ya desde el grado acceden a esta rama de conocimiento.\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Descripci\u00f3n del puesto de trabajo<\/center>","9c4e4b2c":"Podemos ver que principalmente ML est\u00e1 aplicado a la toma de decisiones.\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Salario (USD)<\/center>","ee555de5":"* Programas de estad\u00edstica b\u00e1sica. p.ej. [Microsoft Excel](https:\/\/www.microsoft.com\/en-us\/microsoft-365\/excel), [Google Sheets](https:\/\/www.google.com\/sheets\/about\/), *etc*.\n* Programas de estad\u00edstica avanzada, p.ej. [SPSS](https:\/\/www.ibm.com\/analytics\/spss-statistics-software), [SAS](https:\/\/www.sas.com\/), *etc*.\n* Business intelligence software, p.ej. [Salesforce](https:\/\/www.salesforce.com), [Tableau](https:\/\/www.tableau.com\/), [Spotfire](https:\/\/www.tibco.com\/products\/tibco-spotfire), *etc*.\n* Entornos de desarrollo local, p.ej. [RStudio](https:\/\/www.rstudio.com\/products\/rstudio\/), [JupyterLab](https:\/\/jupyter.org\/), *etc*.\n* Cloud-based data software & APIs, p.ej. [AWS](https:\/\/aws.amazon.com\/), [GCP](https:\/\/console.cloud.google.com\/getting-started), [Azure](https:\/\/azure.microsoft.com\/), *etc*.","63749765":"Los tres servicios cloud m\u00e1s populares son\n* [Amazon AWS](https:\/\/aws.amazon.com\/)\n* [Microsoft Azure](https:\/\/azure.microsoft.com\/)\n* [Google Cloud Platform](https:\/\/cloud.google.com\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">Almacenamiento 'Cloud'<\/center>","4de554b9":"Basta decir que en kaggle el entorno de desarrollo interactivo (IDE) m\u00e1s popular es el [Jupyter Notebook](https:\/\/jupyter.org\/) que forma parte del entorno de kaggle. El segundo IDE m\u00e1s popular \nes el [Visual Studio Code](https:\/\/code.visualstudio.com\/) de Microsoft. En tercer lugar mundial lo ocupa [PyCharm](https:\/\/www.jetbrains.com\/pycharm\/), en cambio [RStudio](https:\/\/www.rstudio.com\/) tiene mucho m\u00e1s protagonismo en Espa\u00f1a.\n# <center style=\"background-color:Gainsboro; width:80%;\">Librer\u00edas de visualizaci\u00f3n de datos<\/center>","ca7b932c":"Es interesante que mucha gente en kaggle es nueva en el mundo de machine learning. Eso implica que el pico *senior* en Espa\u00f1a corresponde a gente que ha hecho un 'reskilling'.\n# <center style=\"background-color:Gainsboro; width:40%;\">ML\/DL Frameworks<\/center>\nYa miramos a los machine learning (ML) y deep learning (DL) frameworks","19f650b5":"Cuando trata de Big Data [MySQL](https:\/\/www.mysql.com\/) es lo m\u00e1s popular.\n# <center style=\"background-color:Gainsboro; width:60%;\">Business Intelligence (BI)<\/center>","89adbd08":"Entre la gente dedicado a Business Intelligence los herramientas m\u00e1s populares son\n* [Microsoft Power BI](https:\/\/powerbi.microsoft.com\/)\n* [Tableau](https:\/\/www.tableau.com\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">AutoML: Herramientas<\/center>","944f6376":"Queda muy evidente el desequilibrio entre hombres y mujeres, que es muy significativo en el mundo (1:4,2)\npero peor a\u00fan en Espa\u00f1a, con una relaci\u00f3n de 1:6,8\n# <center style=\"background-color:Gainsboro; width:40%;\">Nivel educativo<\/center>","a171bf8a":"# Encuesta kaggle 2021: \u00bfEspa\u00f1a es diferente?\nCada a\u00f1o kaggle hace una encuesta para sondear el estado de Data Science y Machine Learning en todo el mundo. Aqu\u00ed recogemos los datos principales del [\"2021 Kaggle Machine Learning & Data Science Survey\"](https:\/\/www.kaggle.com\/c\/kaggle-survey-2021) con el objeto de comparar la situaci\u00f3n de Espa\u00f1a frente al resto del mundo. Los gr\u00e1ficos de la izquierda corresponden a los datos de Espa\u00f1a y los de la derecha a los del resto del mundo. Se ha recogido un total 25.973 respuestas, de las cuales 454 (1,75%) corresponden a Espa\u00f1a.\n\n## Resumen\nEn Espa\u00f1a \n* la proporci\u00f3n de mujeres es a\u00fan menor que en el resto del mundo\n* es m\u00e1s habitual acceder al entorno de data science despu\u00e9s de un m\u00e1ster, mientras que en el resto del mundo se accede en igual proporci\u00f3n desde grado y desde m\u00e1ster\n* respecto a la edad de la gente, el pico de edad m\u00e1s alto corresponde a la franja 45-49 a\u00f1os, en clara oposici\u00f3n a la tendencia del resto del mundo, donde este pico ocupa el 7\u00ba lugar\n* las personas con m\u00e1s de 20 a\u00f1os de experiencia en programaci\u00f3n ocupan el pico m\u00e1s alto, en claro contraste con el resto del mundo donde el pico dominante es el de gente que lleva entre 1 y 3 a\u00f1os programando\n\nPor lo tanto, los datos demogr\u00e1ficos de Espa\u00f1a son muy diferentes a los del resto del mundo. \u00bfEspa\u00f1a es diferente?: SI","41db9eb8":"* [Amazon SageMaker Autopilot](https:\/\/aws.amazon.com\/sagemaker\/autopilot\/)\n* [Databricks AutoML](https:\/\/databricks.com\/product\/automl)\n* [H2O Driverless AI](https:\/\/www.h2o.ai\/products\/h2o-driverless-ai\/)\n* [Google Cloud AutoML](https:\/\/cloud.google.com\/automl\/)\n* [Microsoft Azure Automated machine learning](https:\/\/azure.microsoft.com\/en-us\/services\/machine-learning\/automatedml\/)\n* [DataRobot Automated Machine Learning](https:\/\/www.datarobot.com\/platform\/automated-machine-learning\/)\n\n# <center style=\"background-color:Gainsboro; width:60%;\">ML experiment logging<\/center>","57afe157":"Se puede ver en Espa\u00f1a un pico en el rango de \\\\$40-50k anuales.\n(Nota: He omitido ingresos de menos de \\$1k para claridad).\n\n# <center style=\"background-color:Gainsboro; width:80%;\">Dinero gastado en los \u00faltimos 5 a\u00f1os (USD)<\/center>\nEn ML o servicios de cloud computing","2ff2b90c":"# <center style=\"background-color:Gainsboro; width:60%;\">Servicios 'Cloud'<\/center>","3d897833":"Es interesante ver que en el resto del mundo el n\u00famero de estudianteses casi el doble que el de profesionales, mientras que en Espa\u00f1a los estudiantes ocupan el tercer puesto en la tabla. \n\n# <center style=\"background-color:Gainsboro; width:80%;\">\u00bfCuantos a\u00f1os llevas programando?<\/center>"}}