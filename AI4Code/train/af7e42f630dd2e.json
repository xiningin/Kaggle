{"cell_type":{"7095e2ca":"code","a44c8d68":"code","eb375c4c":"code","4cdd0f14":"code","a8f045d2":"code","0ab0e80f":"code","f2aa603e":"code","d896bd99":"code","0536cd61":"code","3932403e":"code","e50e72ec":"code","90bf93cf":"code","de84a8ce":"code","99530c92":"code","14daa26b":"code","385aa9fc":"code","18d8532d":"code","197d2933":"code","84de8283":"code","5869621f":"code","279238cf":"code","ceb6ac6d":"code","789a0c6a":"markdown","7997d4e0":"markdown","761474d6":"markdown","d0085208":"markdown","ea64976f":"markdown","baade19c":"markdown","28c15b0b":"markdown","820bd40d":"markdown","7c338e16":"markdown","0476150b":"markdown","d0f88ba5":"markdown","5acca116":"markdown","3ac9df0e":"markdown","cf376753":"markdown","85c2c456":"markdown","2a45fa2e":"markdown"},"source":{"7095e2ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a44c8d68":"# read data into pd.DataFrame\nstud_data_filepath = \"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\"\nstud_data = pd.read_csv(stud_data_filepath)","eb375c4c":"stud_data.info()","4cdd0f14":"# check for missing values\nstud_data.isna().sum(axis = 0)","a8f045d2":"# overview over last three columns\nstud_data.describe()","0ab0e80f":"# unique values for all columns\nfor label, content in stud_data.items():\n    print(\"Column name: \", label)\n    print(content.unique())\n","f2aa603e":"# gender distribution\nfig1 = px.pie(stud_data, names = 'gender', title = \"Overall gender distribution\")\nfig1.show()","d896bd99":"stud_data_race_gender = stud_data.groupby([\"race\/ethnicity\", 'gender']).count().reset_index()\nstud_data_race_gender = stud_data_race_gender.rename(\n    columns = {'parental level of education': 'counter'} )\nstud_data_race_gender = stud_data_race_gender.drop(['lunch', 'test preparation course', 'math score',\n                            'reading score', 'writing score'], axis = 1)\n#stud_data_race_gender.head(10)\nfig2 = px.bar(stud_data_race_gender, x = 'race\/ethnicity', y = \"counter\", color = 'gender',\n             barmode = 'group', title = \"Gender distribution between different ethnicities\")\nfig2.show()","0536cd61":"stud_data_education = stud_data.groupby(['parental level of education', 'gender']).count().reset_index()\nstud_data_education = stud_data_education.rename(columns = {'race\/ethnicity': 'counter'})\nstud_data_education = stud_data_education.drop(['lunch','test preparation course', 'math score',\n                            'reading score', 'writing score'], axis = 1)\nstud_data_education.head(30)\n\neducation_ascending = {'some high school': 0, 'high school': 1, 'some college': 2, 'college': 3,\n               \"'associate's degree'\":4, \"'bachelor's degree'\": 5, \"'master's degree'\": 6}\n               \nstud_data_education = stud_data_education.sort_values(by=['parental level of education'],\n                                                      key=lambda x: x.map(education_ascending))\n\nfig3 = px.bar(stud_data_education, x = 'parental level of education', y = \"counter\", color = 'gender',\n             barmode = 'group', title = \"Gender distribution between different education levels\")\nfig3.show()","3932403e":"stud_data_race_educ = stud_data.groupby(['parental level of education',\n                                         'race\/ethnicity']).count().reset_index()\nstud_data_race_educ = stud_data_race_educ.rename(columns = {'gender': 'counter'})\nstud_data_race_educ = stud_data_race_educ.drop(['lunch','test preparation course', 'math score',\n                                                'reading score', 'writing score'], axis = 1)\n#stud_data_race_educ.head(10)\neducation_ascending = {'some high school': 0, 'high school': 1, 'some college': 2, 'college': 3,\n               \"'associate's degree'\":4, \"'bachelor's degree'\": 5, \"'master's degree'\": 6}\n               \nstud_data_race_educ = stud_data_race_educ.sort_values(by=['parental level of education'],\n                                                      key=lambda x: x.map(education_ascending))\nfig4 = px.bar(stud_data_race_educ,\n              x = 'parental level of education', y = \"counter\",color = 'race\/ethnicity',\n             barmode = 'group', title = \"Education distribution between different ethnicities\")\nfig4.show()","e50e72ec":"stud_data_gender_lunch = stud_data.groupby(['gender', 'lunch']).count().reset_index()\nstud_data_gender_lunch = stud_data_gender_lunch.rename(columns = {'race\/ethnicity': 'counter'})\nstud_data_gender_lunch = stud_data_gender_lunch.drop(['parental level of education',\n                                                'test preparation course', 'math score',\n                                                'reading score', 'writing score'], axis = 1)\n#stud_data_gender_lunch.head(10)\nfig5 = px.bar(stud_data_gender_lunch,\n              x = 'gender', y = \"counter\",color = 'lunch',\n             barmode = 'group', title = \"Lunch properties between genders\")\nfig5.show()","90bf93cf":"stud_data_educ_lunch = stud_data.groupby(['parental level of education',\n                                            'lunch']).count().reset_index()\nstud_data_educ_lunch = stud_data_educ_lunch.rename(columns = {'race\/ethnicity': 'counter'})\nstud_data_educ_lunch = stud_data_educ_lunch.drop(['gender', 'test preparation course',\n                                                      'math score', 'reading score',\n                                                      'writing score'], axis = 1)\n#stud_data_educ_lunch.head(10)\n\neducation_ascending = {'some high school': 0, 'high school': 1, 'some college': 2, 'college': 3,\n               \"'associate's degree'\":4, \"'bachelor's degree'\": 5, \"'master's degree'\": 6}\n               \nstud_data_educ_lunch = stud_data_educ_lunch.sort_values(by=['parental level of education'],\n                                                      key=lambda x: x.map(education_ascending))\nfig6 = px.bar(stud_data_educ_lunch,\n              x = 'parental level of education', y = \"counter\",color = 'lunch',\n             barmode = 'group', title = \"Lunch properties between education levels\")\nfig6.show()","de84a8ce":"stud_data_race_lunch = stud_data.groupby(['race\/ethnicity',\n                                            'lunch']).count().reset_index()\nstud_data_race_lunch = stud_data_race_lunch.rename(columns = {'parental level of education': 'counter'})\nstud_data_race_lunch = stud_data_race_lunch.drop(['gender', 'test preparation course', 'math score',\n                                                  'reading score', 'writing score'], axis = 1)\nstud_data_race_lunch.head(10)\nfig7 = px.bar(stud_data_race_lunch,\n              x = 'race\/ethnicity', y = \"counter\",color = 'lunch',\n             barmode = 'group', title = \"Lunch properties between ethnicities\")\nfig7.show()","99530c92":"stud_data_gender_test = stud_data.groupby(['gender',\n                                          'test preparation course']\n                                        ).count().reset_index()\nstud_data_gender_test = stud_data_gender_test.rename(\n    columns = {'parental level of education': 'counter'})\nstud_data_gender_test = stud_data_gender_test.drop(['lunch','race\/ethnicity', \n                                                    'math score',\n                                                  'reading score', 'writing score'],\n                                                   axis = 1)\nstud_data_gender_test.head(10)\nfig8 = px.bar(stud_data_gender_test,\n              x = 'gender', y = \"counter\",color = 'test preparation course',\n              barmode = 'group', title = \"Participants of test courses by gender\")\nfig8.show()","14daa26b":"stud_data_race_test = stud_data.groupby(['race\/ethnicity',\n                                          'test preparation course']\n                                        ).count().reset_index()\nstud_data_race_test = stud_data_race_test.rename(\n    columns = {'parental level of education': 'counter'})\nstud_data_race_test = stud_data_race_test.drop(['lunch', 'gender', \n                                                    'math score',\n                                                  'reading score', 'writing score'],\n                                                   axis = 1)\nstud_data_race_test.head(10)\nfig9 = px.bar(stud_data_race_test,\n              x = 'race\/ethnicity', y = \"counter\",color = 'test preparation course',\n              barmode = 'group', title = \"Participants of test courses by race\")\nfig9.show()","385aa9fc":"stud_data_lunch_test = stud_data.groupby(['lunch',\n                                          'test preparation course']\n                                        ).count().reset_index()\nstud_data_lunch_test = stud_data_lunch_test.rename(\n    columns = {'parental level of education': 'counter'})\nstud_data_lunch_test = stud_data_lunch_test.drop(['race\/ethnicity', 'gender',\n                                                    'math score',\n                                                  'reading score', 'writing score'],\n                                                   axis = 1)\nstud_data_lunch_test.head(10)\nfig10 = px.bar(stud_data_lunch_test,\n              x = 'lunch', y = \"counter\",color = 'test preparation course',\n              barmode = 'group', title = \"Participants of test courses by race\")\nfig10.show()","18d8532d":"fig11 = px.scatter_3d(stud_data, x='math score', y='reading score', z='writing score')\nfig11.show()\nfig12 = px.scatter_3d(stud_data, x='math score', y='reading score', z='writing score', color = 'gender')\nfig12.show()\n","197d2933":"score_educ = stud_data.groupby('parental level of education').mean().reset_index()\n\neducation_ascending = {'some high school': 0, 'high school': 1, 'some college': 2, 'college': 3,\n               \"'associate's degree'\":4, \"'bachelor's degree'\": 5, \"'master's degree'\": 6}\n               \nscore_educ = score_educ.sort_values(by=['parental level of education'],\n                                                      key=lambda x: x.map(education_ascending))\nfig13 = px.bar(score_educ, x = \"parental level of education\",\n               y = [\"math score\", \"reading score\", \"writing score\"], barmode = \"group\")\nfig13.show()","84de8283":"score_race = stud_data.groupby('race\/ethnicity').mean().reset_index()\nscore_race\nfig14 = px.bar(score_race, x = \"race\/ethnicity\",\n               y = [\"math score\", \"reading score\", \"writing score\"], barmode = \"group\")\nfig14.show()\n","5869621f":"score_gender = stud_data.groupby('gender').mean().reset_index()\nscore_gender\nfig15 = px.bar(score_gender, x = \"gender\",\n               y = [\"math score\", \"reading score\", \"writing score\"], barmode = \"group\")\nfig15.show()\n","279238cf":"score_lunch = stud_data.groupby('lunch').mean().reset_index()\nscore_lunch\nfig16 = px.bar(score_lunch, x = \"lunch\",\n               y = [\"math score\", \"reading score\", \"writing score\"], barmode = \"group\")\nfig16.show()","ceb6ac6d":"score_test = stud_data.groupby('test preparation course').mean().reset_index()\nscore_test\nfig17 = px.bar(score_test, x = \"test preparation course\",\n               y = [\"math score\", \"reading score\", \"writing score\"], barmode = \"group\")\nfig17.show()\n","789a0c6a":"=> student who completed the test preparation course have a higher score in any category than those who did't complete the test preparation course","7997d4e0":" => more female students than male students","761474d6":"=> for bachelorand master students the percentage of students who get free\/reduced lunch is increased compared to the other education levels.","d0085208":"# Data Visualization","ea64976f":"=> females are more and more overrepresented as the education level increases","baade19c":"=> percentage of students who get free\/reduced lunch decreases from A to E.","28c15b0b":"=> reading, writing and writing scores increase from Group A to Group E","820bd40d":"=> males have a higher average math score, females have a higher average writing\/reading score","7c338e16":"=> pupils of Group D tend to do more higher education than other pupils of Groups\n=> pupils of Group tend to do less higher education than other pupils of Groups","0476150b":"=> reading, writing and math score correlate with eachother\n=> females tend to have a better writing score than males\n=> males tend to have a better math score than females","d0f88ba5":" => more males in group A, but more females in group B and group C","5acca116":"# Data Preparation","3ac9df0e":"=> student who get free\/reduced lunch tend to be worser at any score","cf376753":"=> students who get free\/reduced lunnch are more likely to complete test preparation","85c2c456":"=> group D has a very low percentage of students who did test preparation\n=> group A and group E have a high percentage of students who completed test preparation","2a45fa2e":"=> reading, writing and writing scores increase with higher levels of education"}}