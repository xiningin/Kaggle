{"cell_type":{"a2082509":"code","17d16b3a":"code","3ec9a2a4":"code","4b5e1198":"code","f2e1c57c":"code","6ec362aa":"code","e06fc878":"code","3ee9b5a1":"code","a1bd3704":"code","1670466f":"code","13023381":"code","0f1e7fbe":"code","9bf99cf6":"code","de361a92":"code","8e7ff6c4":"code","2ecb1a0e":"code","89dc7182":"code","d09a872c":"code","39db4858":"code","cb081332":"code","fa7e52ff":"code","78540ea7":"code","36a2d0f3":"code","0df7a9a7":"markdown"},"source":{"a2082509":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math","17d16b3a":"#our dataset\ndf=pd.read_table('..\/input\/fruits-with-colors-dataset\/fruit_data_with_colors.txt')","3ec9a2a4":"df.head()","4b5e1198":"type(df)","f2e1c57c":"df.shape","6ec362aa":"df.describe()","e06fc878":"df.head()","3ee9b5a1":"labels = dict(zip(df.fruit_label.unique(), df.fruit_name.unique()))   ","a1bd3704":"df['fruit_name'].value_counts()","1670466f":"#taking random record and storing in xq\nxq = df.sample()","13023381":"# droping the xq from data using index value\ndf.drop(xq.index, inplace=True)","0f1e7fbe":"df.shape","9bf99cf6":"xq_final = pd.DataFrame(xq[['mass', 'width', 'height', 'color_score']])","de361a92":"xq_final","8e7ff6c4":"# calculating ecludian distance\ndef cal_distance(x):      \n    a = x.to_numpy()\n    b = xq_final.to_numpy()    \n    distance = math.sqrt(sum([(a - b) ** 2 for a, b in zip(a, b[0])]))\n    return distance","2ecb1a0e":"# calculating distance\ndf['distance'] = df[['mass', 'width', 'height', 'color_score']].apply(cal_distance, axis=1)","89dc7182":"#sorting the values based on distance\ndf_sort = df.sort_values('distance',ascending=True)","d09a872c":"# taking top 3 records because k is 3\ndf_after_sort = df_sort.head(3)","39db4858":"df_after_sort.reset_index()","cb081332":"df_after_sort.iloc[0]","fa7e52ff":"count = [0 for i in range(0, len(df['fruit_label'].unique()))]\nfor xi in range(0, len(df_after_sort)):       \n    if df_after_sort.iloc[xi]['fruit_label'] == 1:        \n        count[0] = count[0]+1\n    elif df_after_sort.iloc[xi]['fruit_label'] == 2:        \n        count[1] = count[1]+1\n    elif df_after_sort.iloc[xi]['fruit_label'] == 3:        \n        count[2] = count[2]+1\n    elif df_after_sort.iloc[xi]['fruit_label'] == 4:        \n        count[3] = count[3]+1","78540ea7":"def max_num_in_list_label(list):\n    maxpos = list.index(max(list)) +1\n    return labels[maxpos]","36a2d0f3":"#getting the label and verifying with the class label in xq\nif max_num_in_list_label(count) in xq.values:\n    print(\"success\")\nelse:\n    print(\"not success\")","0df7a9a7":"**Steps for KNN**\n1. Take a random record and remove from data.\n2. For each record in data: compute the distance between xq and the point,store the distance \n3. Take the 3 smallest distances bcoz k=3\n4. Take majority out of 3"}}