{"cell_type":{"c7d8bdd3":"code","8ea7f925":"code","f8cb0124":"code","80a75942":"code","59ecda15":"code","4d1a48e2":"code","6c52ddd2":"code","07371d6d":"code","b57c6e07":"code","434d0139":"code","359ed54e":"code","3b081ae7":"code","fa71e1eb":"code","8ccb37cc":"code","2367165f":"code","f63d057c":"code","5b197d18":"code","03573fc1":"code","64284c44":"code","b0928eb8":"markdown","235627f7":"markdown","104c2733":"markdown","01203dd1":"markdown","60340922":"markdown","ce5ca506":"markdown","8b633883":"markdown","f9166ff0":"markdown","69a5828e":"markdown","16313882":"markdown","83ab98f9":"markdown","b290ff6e":"markdown","7b18a209":"markdown","b5397118":"markdown","3cb77508":"markdown"},"source":{"c7d8bdd3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import BaggingRegressor","8ea7f925":"url = (\"https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/abalone\/abalone.data\")\nabalone = pd.read_csv(url, header=None)","f8cb0124":"abalone.columns = [\"Sex\", \"Length\", \"Diameter\", \"Height\", \"Whole weight\", \"Shucked weight\", \"Viscera weight\", \"Shell weight\", \"Rings\"]","80a75942":"abalone.shape","59ecda15":"abalone.head()","4d1a48e2":"sns.pairplot(abalone, height=1.5)","6c52ddd2":"abalone.Sex.unique()","07371d6d":"abalone.Sex = abalone.Sex.map({'M':0, 'F':1, 'I':2})","b57c6e07":"abalone.info()","434d0139":"abalone.describe()","359ed54e":"abalone['Rings'].value_counts().plot(kind='bar')","3b081ae7":"abalone.corr()['Rings'].sort_values()","fa71e1eb":"# remove features \"Sex\" (it isn't a physical measurement) and \"Shucked weight\" (correlation under an arbitrary threshold of 0.5)\n\nabalone = abalone.drop([\"Sex\", \"Shucked weight\"], axis=1)","8ccb37cc":"X = abalone.drop('Rings', axis=1).values\ny = abalone['Rings'].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","2367165f":"knn_model = KNeighborsRegressor()\n\nparameters = {\"n_neighbors\": range(2, 40),\n              \"weights\": [\"uniform\", \"distance\"]}\n\ngridsearch_knn = GridSearchCV(KNeighborsRegressor(), parameters, cv=10)\ngridsearch_knn.fit(X_train, y_train)","f63d057c":"gridsearch_knn.best_params_","5b197d18":"best_k = gridsearch_knn.best_params_[\"n_neighbors\"]\nbest_weights = gridsearch_knn.best_params_[\"weights\"]\n\nbagged_knn = KNeighborsRegressor(n_neighbors=best_k, weights=best_weights)","03573fc1":"bagging_model = BaggingRegressor(bagged_knn, n_estimators=100)\nbagging_model.fit(X_train, y_train)","64284c44":"test_preds_bagg = bagging_model.predict(X_test)\nrmse = np.sqrt(mean_squared_error(y_test, test_preds_bagg))\nrmse","b0928eb8":"### <a id=\"intro\" style='background:#bfe6ff'>Introduction<\/a>","235627f7":"The Abalone Problem\n\nThe age of an Abalone can be found by counting the number of rings on its cutted shell.\nIn the <a href=\"http:\/\/archive.ics.uci.edu\/ml\/datasets\/Abalone\" target=\"_blank\">Abalone Dataset<\/a>, there are age measurements of Abalones, along with some physical measurements.\n\nThe project goal is to apply a model to predict an Abalone's age based purely on its physical measurements.\nThis would allow Abalone\u2019s age estimation without having to cut its shell.\n\nA typical Abalone looks like this:","104c2733":"### <a id=\"eda\" style='background:#bfe6ff'>Exploratory Data Analysis<\/a>","01203dd1":"<img width=\"500\" src=\"http:\/\/blog.rosavalverde.com.br\/wp-content\/uploads\/2020\/08\/concha-de-abalone-natural-polida-17cm-grande-decoracao-D_NQ_NP_742257-MLB29970553058_042019-F.jpg\">","60340922":"As ensemble methods are often better than single models, let's try Bagging (an ensemble method that fits a large number of the models with slight fit variations) with 100 estimators.","ce5ca506":"To find the best value for k, let's use GridSearchCV from scikit-learn, a tool for tuning hyperparameters of machine learning models.\n\nAlso, maybe the performance can be better by using a weighted average instead of a regular average over the k neighbors. i.e., more distant neighbors will influence the prediction less than nearest ones. \n\nWe can do this by setting \"distance\" as weights parameter value. So, let's add this option to GridSearchCV, and for the cross validation scheme, we are going to set 10 folds.","8b633883":"### <a id=prep style='background:#bfe6ff'>Pre-processing<\/a>","f9166ff0":"1. <a href=#intro>Introduction<\/a>\n2. <a href=#load>Loading data<\/a>\n3. <a href=#eda>Exploratory Data Analysis<\/a>\n4. <a href=#prep>Pre-processing<\/a>\n5. <a href=#knn>Build KNN Regression model<\/a>\n    * <a href=#grid>Grid Search and Cross Validation<\/a>\n    * <a href=#bagg>Bagging<\/a>","69a5828e":"Finally, lets check the root-mean-square error on test data:","16313882":"although feature \"Sex\" is not a physical measure, let's take a look at it:","83ab98f9":"### <a id=knn style='background:#bfe6ff'>Build KNN Regression model<\/a>","b290ff6e":"The barplot shows us that most Abalones here are amongst 7 and 11 rings, with high predominance of 9 rings.\n\nAnother clear conclusion is that older Abalones are underrepresented in this dataset. \n\nLet's now check correlation between all features and \"Rings\", to get an intuition of features that can help us predicting \"Rings\":","7b18a209":"##### <a id=\"bagg\">BAGGING (Ensemble method that fits a large number of models with slight variations in each fit)<\/a>","b5397118":"### <a id=\"load\" style='background:#bfe6ff'>Loading data<\/a>","3cb77508":"##### <a id=\"grid\">GRID SEARCH AND CROSS VALIDATION<\/a>"}}