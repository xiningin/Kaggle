{"cell_type":{"df52de7a":"code","fe325c9c":"code","9361d361":"code","a53c618f":"code","67d21ce7":"code","bc55e5e1":"code","505b3ecf":"code","3e86f70c":"code","917d9cfa":"code","b242e573":"code","c746ebbf":"code","a1afb2c8":"code","47223d07":"code","f05a6d03":"code","5dee491a":"code","ea8bad8a":"code","a8684c40":"code","7ddcdb2c":"code","c8e1e634":"code","a1c1cffc":"code","c6f86b59":"code","efa9b6eb":"code","736b9a39":"code","15c1bd3e":"code","f1ae72b7":"code","9ded00c9":"code","a3448254":"code","5d881eb9":"code","04e08538":"code","36590e54":"code","25be2570":"code","b57a4835":"code","21e10767":"code","71a21486":"code","2ecd9f32":"code","97f8ce05":"code","9368dda3":"code","c3647e9f":"code","2a3edff6":"code","5b7e334e":"code","8f029dcc":"code","56d8b7de":"code","5970e41c":"code","ac4e9910":"code","8f51dfad":"code","f04e696d":"code","a507b6d7":"code","dda6b089":"code","b36b50f1":"code","ae9d422b":"markdown","dbbc046a":"markdown","d528b4e3":"markdown","6a0a5e74":"markdown","b798d3da":"markdown","98c9e60c":"markdown","dbd270b3":"markdown","36c054f8":"markdown","0319d674":"markdown","08e96900":"markdown","52c7e9ab":"markdown","104349bc":"markdown","217a7263":"markdown","63521819":"markdown","83aa18b0":"markdown","94dab007":"markdown","368a1828":"markdown","290d4ce3":"markdown","350b8613":"markdown","c1277ccc":"markdown","25ce45ab":"markdown","a423dfa1":"markdown","d431045e":"markdown","6dbe13d8":"markdown","f6857cfc":"markdown","0e2d2a27":"markdown","846eaf7c":"markdown","c8635250":"markdown","549a02c1":"markdown"},"source":{"df52de7a":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","fe325c9c":"df = pd.read_csv('..\/input\/fifaeda\/data.csv')","9361d361":"df.head()","a53c618f":"df.shape\n","67d21ce7":"df.shape[0]","bc55e5e1":"df.shape[1]","505b3ecf":"# Rows and columns have switched \n\ndf.head().T","3e86f70c":"df.describe()","917d9cfa":"# Rows and columns have switched \n\ndf.describe().T","b242e573":"df.info()\n","c746ebbf":"df['Age'].describe()","a1afb2c8":"df['Age'].max()","47223d07":"df['Age'].min()","f05a6d03":"df['Age'].mean()","5dee491a":"df.columns","ea8bad8a":"df['Body Type'].count","a8684c40":"df.groupby(['Body Type','Position']).describe().head(50)","7ddcdb2c":"df.groupby(['Nationality','Position']).describe().tail(50)","c8e1e634":"\ndf.unstack().describe().reset_index()","a1c1cffc":"# Here sequence of commands is important, describe() should be before unstack()\n\ndf.groupby('Nationality').describe().unstack().reset_index()","c6f86b59":"Nationality_summery_df = df.groupby('Nationality').describe().unstack().reset_index()","efa9b6eb":"renaming_dict = {'level_0':'variable',\n                'level_1':'statistic',\n                0:'value'}\nNationality_summery_df.rename(columns= renaming_dict,inplace=True)","736b9a39":"Nationality_summery_df.head()","15c1bd3e":"Nationality_summery_df.groupby('statistic').mean()","f1ae72b7":"df.columns","9ded00c9":"df.head()","a3448254":"df.drop(['Unnamed: 0','Photo','Flag','Club Logo'],axis = 1,inplace=True)","5d881eb9":"df.set_index('ID',inplace=True)","04e08538":"df.head()","36590e54":"df.isnull().sum()","25be2570":"df.columns","b57a4835":"sns.relplot(x= 'Potential',y='Wage',data=df, hue='Position').fig.set_size_inches(15,15)","21e10767":"sns.displot(data=df, x='Age',col='Release Clause',kind='kde')","71a21486":"sns.displot(data=df, x=\"Age\", hue=\"Position\", col=\"Wage\", kind=\"kde\")","2ecd9f32":"sns.displot(data=df, x=\"Age\", hue=\"Position\")","97f8ce05":"sns.displot(data=df, x=\"Age\", hue=\"Position\", kind=\"kde\")","9368dda3":"sns.displot(data=df, x= \"Age\", hue=\"Position\", multiple=\"stack\")","c3647e9f":"sns.relplot(\n    data=df, x=\"Age\", y=\"Wage\", col=\"Position\", kind=\"line\",\n)","2a3edff6":"categorical = ['Nationality', 'Club', 'Preferred Foot', 'Work Rate', 'Body Type', 'Position']","5b7e334e":"import plotly.graph_objs as go","8f029dcc":"from plotly.offline import init_notebook_mode, iplot","56d8b7de":"plot_pie_count(df, 'Nationality')\nplot_pie_count(df, 'Preferred Foot')\nplot_pie_count(df, 'Work Rate', 0.1)\nplot_pie_count(df, 'Body Type', 0.1)","5970e41c":"df.sort_values(\"Value\", ascending=False)[['Name', \"Age\", \"Value\", \"Overall\"]].head(20)","ac4e9910":"fig = px.scatter(\n    df, \n    x='Age', \n    y='Overall', \n    height=700,\n    width=700,\n    title='Scatter plot for Age and Overall' \n)\nfig.show()","8f51dfad":"fig = px.scatter(\n    df, \n    x='Age', \n    y='Potential', \n    height=700,\n    width=700,\n    title='Scatter plot for Age and Potential' \n)\nfig.show()","f04e696d":"fig = px.scatter(\n    df, \n    x='Potential', \n    y='Overall', \n    height=700,\n    width=700,\n    title='Scatter plot for Potential and Overall' \n)\nfig.show()","a507b6d7":"df.sort_values(\"Potential\", ascending=False)[['Name', \"Age\", \"Value\", \"Overall\", 'Potential']].head(20)","dda6b089":"fig = px.histogram(\n    df, \n    \"Value\", \n    nbins=100, \n    title='Value distribution',\n    width=800\n)\nfig.show()","b36b50f1":"sns.jointplot(x=df['Age'],y=df['Potential'],\n              joint_kws={'alpha':0.1,'s':5,'color':'red'},\n              marginal_kws={'color':'red'})","ae9d422b":"* Group the data by two categorical variables and display a table of one summary statistic","dbbc046a":"Potential tends to fall as you grow old","d528b4e3":"* Display two individual summary statistics for one variable","6a0a5e74":"### Dataframe shape","b798d3da":"**Minimum age between players**","98c9e60c":"**Top 20 players by potential**","dbd270b3":"Return a boolean same-sized object indicating if the values are NA. NA values, such as None or numpy.NaN, gets mapped to True values. Everything else gets mapped to False values. ","36c054f8":"### Description of one attribute","0319d674":"we can assign players' ID as the index for our dataframe","08e96900":"**Now we will define categorical features that can be used in supervised modeling**","52c7e9ab":"**Scatter plot for age and potential**","104349bc":"**Average age of players**\n","217a7263":"Some columns are images and unnecessary for our analysis, so we can drop them","63521819":"**Top 20 players with the highest Value**","83aa18b0":"### Statistical description of all attributes","94dab007":"# Summary of Notebook\n\n* Display two individual summary statistics for one variable\n\n* Group the data by two categorical variables and display a table of one summary statistic\n\n* Use a seaborn plotting function with the col parameter or a FacetGrid to make a plot that shows something informative about this data, using both categorical variables and at least one numerical value. Describe what this tells you about the data.\n\n* Produce one additional plot of a different plot type that shows something about this data.","368a1828":"we can check which columns do not have a value","290d4ce3":"## Data cleaning","350b8613":"**Scatter plot for age and potential**","c1277ccc":"**Maximum age between players**","25ce45ab":"### Exploratory Data Analysis","a423dfa1":"### Listing name of columns in the dataframe","d431045e":"**Scatter plot for Age and Overal**","6dbe13d8":"**Number of players for each categorical variable**","f6857cfc":"### Raw data format","0e2d2a27":"**Let's check the Value columns distribution. As we can see the majority of players value is less than 5M euro.**","846eaf7c":"we can see the number of players at different ages, distinguished with their positions","c8635250":"**Drawing Wage vs Age for different possitions**","549a02c1":"### Importing data"}}