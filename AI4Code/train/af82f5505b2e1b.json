{"cell_type":{"34bcbb8e":"code","7e5e0198":"code","7ecc31f3":"code","b7924abe":"code","e01153a5":"code","ebb4ef4c":"code","a5a96d39":"code","461de1cc":"code","c2537705":"code","dffa361b":"code","1eddebb8":"code","4c1306dd":"code","4926669e":"code","38b1f5f7":"code","690426f3":"code","93bb2799":"code","15f1fc7f":"code","3cb9d8cb":"code","31e135a5":"code","ad24ca2c":"code","9ba3e238":"code","09803306":"code","3399c6c8":"code","0837146a":"code","1e8fc2d9":"code","f7237028":"code","aa08f7ad":"code","632d2114":"code","81a8f44a":"code","32476c4c":"code","28b04d0d":"code","390b40b6":"code","ce14a4e0":"code","cbc89d03":"code","d9400407":"code","8a4c52f6":"code","8c43c1a3":"code","86401125":"code","553c0c8a":"code","4e3943b4":"code","ffb7bb83":"code","ace761b5":"markdown","92990945":"markdown","18a6f5f7":"markdown","26c03d0a":"markdown","f94a848b":"markdown","3aa75a78":"markdown","0e7057ca":"markdown","de9a8b08":"markdown","dd636cc2":"markdown","b195cfef":"markdown","3f2ddf6a":"markdown","fb2a8e9c":"markdown","53aaab6c":"markdown","b5a4a77b":"markdown","16c9f3b9":"markdown","f939a21f":"markdown","fbfb9336":"markdown","257a03e7":"markdown","d1947e0f":"markdown","92995229":"markdown","d6f9a1be":"markdown","fff8cebd":"markdown","638475b2":"markdown","410bea5b":"markdown","3fad6121":"markdown","1b264181":"markdown","fa6de04e":"markdown"},"source":{"34bcbb8e":"import numpy as np\nimport pandas as pd","7e5e0198":"# visualization\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","7ecc31f3":"def bar_chart(list1, list2):\n    objects = list1\n    y_pos = np.arange(len(objects))\n    performance = list2\n \n    plt.figure(figsize=(20,10))    \n    plt.bar(y_pos, performance, align='center', alpha=0.5)\n    plt.xticks(y_pos, objects)\n    plt.ylabel('Number') \n    plt.show()\n    \n    return 0","b7924abe":"df = pd.read_csv('..\/input\/data.csv')","e01153a5":"df = df.drop('Unnamed: 0',1)\ndf = df.drop('Unnamed: 0.1',1)","ebb4ef4c":"df.head()","a5a96d39":"df.columns","461de1cc":"day_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')","c2537705":"i = 0\nday_number = list()\n\nwhile i < 7:\n    day_number.append(len(df.loc[df['DAY_OF_WEEK'] == day_of_week[i]]))\n    \n    i +=1\n","dffa361b":"bar_chart(day_of_week, day_number)","1eddebb8":"plt.figure(figsize=(20,10))\ndf['DISTRICT'].value_counts().plot.bar()\nplt.show()","4c1306dd":"i = 0\nhour_number = list()\n\nwhile i < 24:\n    hour_number.append(len(df.loc[df['HOUR'] == i]))\n    i +=1","4926669e":"bar_chart(list(range(0,24)), hour_number)","38b1f5f7":"i = 1\nlist_month = list()\n\nwhile i <= 12:\n    list_month.append(len(df.loc[df['MONTH'] == i]))\n    i+=1","690426f3":"bar_chart(list(range(1,13)), list_month)","93bb2799":"len(df.REPORTING_AREA.unique())","15f1fc7f":"df.SHOOTING.value_counts()","3cb9d8cb":"plt.figure(figsize=(20,10))\ndf.OFFENSE_CODE_GROUP.value_counts().plot.bar()\nplt.show()","31e135a5":"df.OCCURRED_ON_DATE = pd.to_datetime(df.OCCURRED_ON_DATE)","ad24ca2c":"df.OCCURRED_ON_DATE.describe()","9ba3e238":"location = df[['Lat','Long']]\nlocation = location.dropna()\n\nlocation = location.loc[(location['Lat']>40) & (location['Long'] < -60)]","09803306":"x = location['Long']\ny = location['Lat']","3399c6c8":"# Custom the inside plot: options are: \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d\n\nsns.jointplot(x, y, kind='scatter')\nsns.jointplot(x, y, kind='hex')\nsns.jointplot(x, y, kind='kde')","0837146a":"plt.figure(figsize=(20,10))\ndf.UCR_PART.value_counts().plot.bar()\nplt.show()","1e8fc2d9":"(101023*100)\/87052 - 100","f7237028":"df.YEAR.value_counts()","aa08f7ad":"plt.figure(figsize=(20,10))\ndf.YEAR.value_counts().plot.bar()\nplt.show()","632d2114":"df_year = df.loc[\n    (df.YEAR == 2013) | (df.YEAR == 2014) | (df.YEAR == 2015) | (df.YEAR == 2016) | (df.YEAR == 2017)\n]","81a8f44a":"plt.figure(figsize=(20,10))\nsns.barplot(x=df_year.YEAR.value_counts().index, y=df_year.YEAR.value_counts())","32476c4c":"i = 1\nday_number = list()\n\nwhile i <= 31:\n    day_number.append(len(df.loc[df['DAY'] == i]))\n    i +=1","28b04d0d":"bar_chart(list(range(1,32)), day_number)","390b40b6":"plt.figure(figsize=(20,10))\ndf.Day.value_counts().plot.bar()\nplt.show()","ce14a4e0":"plt.figure(figsize=(20,10))\nsns.barplot(x=df.Day.value_counts().index, y=df.Day.value_counts())","cbc89d03":"plt.figure(figsize=(20,10))\ndf.Night.value_counts().plot.bar()\nplt.show()","d9400407":"plt.figure(figsize=(20,10))\ndf.ToNight.value_counts().plot.bar()\nplt.show()","8a4c52f6":"plt.figure(figsize=(20,10))\ndf.ToDay.value_counts().plot.bar()\nplt.show()","8c43c1a3":"df.temperatureMin.describe()","86401125":"df.temperatureMax.describe()","553c0c8a":"df.temperatureDifference.describe()","4e3943b4":"df.precipitation.describe()","ffb7bb83":"df.snow.describe()","ace761b5":"# OFFENSE_CODE_GROUP","92990945":"# YEAR","18a6f5f7":"# ToDay ","26c03d0a":"# UCR_PART","f94a848b":"# temperatureMin","3aa75a78":"# Night","0e7057ca":"# Import","de9a8b08":"# Function","dd636cc2":"# SHOOTING","b195cfef":"# DAY","3f2ddf6a":"# precipitation","fb2a8e9c":"###### It is difficult for visualization","53aaab6c":"# ToNight","b5a4a77b":"# OCCURRED_ON_DATE","16c9f3b9":"# Lat & Long","f939a21f":"# HOUR","fbfb9336":"###### Not enough data for visualization","257a03e7":"# snow","d1947e0f":"# REPORTING_AREA","92995229":"# DAY_OF_WEEK","d6f9a1be":"# temperatureDifference","fff8cebd":"# DISTRICT","638475b2":"# MONTH","410bea5b":"# Day","3fad6121":"# temperatureMax","1b264181":"# Data","fa6de04e":"### More information. My [GitHub](https:\/\/github.com\/OleksandrKosovan\/predicting-boston-offense)"}}