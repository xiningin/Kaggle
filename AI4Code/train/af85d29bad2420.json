{"cell_type":{"1400323d":"code","1ca2224a":"code","003587e4":"code","40478591":"code","0d263c9d":"code","65e6674a":"code","e61493e4":"code","2a9fe0dd":"code","6f1cd092":"code","f2d74cfc":"code","6e833c3d":"code","790f6343":"code","5f9ca789":"code","a639e1c9":"code","624375fb":"code","2d3e2fde":"code","15bd85fb":"code","702b9a0f":"markdown","3ca15e95":"markdown","ed7fd279":"markdown","5ca58e5c":"markdown","e75f06d6":"markdown","879798d1":"markdown"},"source":{"1400323d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport sys\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1ca2224a":"data = pd.read_csv('..\/input\/perseverance-land-on-mars-youtube-live-comments\/Perseverance_Landing.csv', index_col=0)","003587e4":"data.shape","40478591":"data.head()","0d263c9d":"def ytb_duration_timestamp(ytb_duration):\n    #\u00a0Clean white spaces\n    ytb_duration = ytb_duration.replace(' ', '')\n    \n    # Get length\n    length = len(ytb_duration)\n    \n    #\u00a0Add spaces\n    ytb_duration = ytb_duration.rjust(8)\n    \n    # Add colons\n    ytb_duration = list(ytb_duration)\n    ytb_duration[2] = ':'\n    ytb_duration = ''.join(ytb_duration)\n    \n    # Add zeros\n    if length <= 7:\n        ytb_duration = list(ytb_duration)\n        ytb_duration[0] = '0'\n        ytb_duration = ''.join(ytb_duration)\n        \n    if length <= 5:\n        ytb_duration = list(ytb_duration)\n        ytb_duration[1] = '0'\n        ytb_duration = ''.join(ytb_duration)\n        \n    if length <= 4:\n        ytb_duration = list(ytb_duration)\n        ytb_duration[3] = '0'\n        ytb_duration = ''.join(ytb_duration)\n        \n    return ytb_duration","65e6674a":"!pip install spacytextblob\n!pip install geograpy3\n!python3 -m textblob.download_corpora","e61493e4":"import spacy\nfrom spacytextblob.spacytextblob import SpacyTextBlob\nimport geograpy\nimport nltk\n\nnltk.download('punkt')\nnltk.download('averaged_perceptron_tagger')\nnltk.download('maxent_ne_chunker')\nnltk.download('words')\nnlp = spacy.load('en_core_web_sm')\nspacy_text_blob = SpacyTextBlob()\nnlp.add_pipe(spacy_text_blob)","2a9fe0dd":"import datetime\n\n#\u00a0Miscellaneous string variables\ndata['length'] = data['comment'].apply(len) # Length of the comment\ndata['n_words'] = data['comment'].apply(lambda x: len(x.split(' '))) # Length of the comment\ndata['upper'] = data['comment'].apply(lambda x: sum(map(str.isupper, x)))\ndata['polarity'] = data['comment'].apply(lambda x: nlp(x)._.sentiment.polarity) # Negative - Positive comment\n\n#\u00a0Time variable\ndata['timestamp'] = data['time'].apply(lambda x: datetime.datetime.strptime(ytb_duration_timestamp(x), '%H:%M:%S'))","6f1cd092":"data.head()","f2d74cfc":"no_comments = data.groupby('timestamp')['comment'].count()\nno_words = data.groupby('timestamp')['n_words'].sum()\nno_uppers = data.groupby('timestamp')['upper'].sum()\nsum_polarity = data.groupby('timestamp')['polarity'].sum()\nmean_polarity = data.groupby('timestamp')['polarity'].mean()\nmean_length = data.groupby('timestamp')['length'].mean()","6e833c3d":"milestone1 = {\n    'timestamp':datetime.datetime.strptime(ytb_duration_timestamp('1:40'), '%H:%M:%S'),\n    'label':'Live started'\n}\n\nmilestone2 = {\n    'timestamp':datetime.datetime.strptime(ytb_duration_timestamp('1:40:43'), '%H:%M:%S'),\n    'label':'Landing'\n}","790f6343":"def plot_milestone(milestone, frame, color='r'):\n    plt.plot([milestone['timestamp'], milestone['timestamp']], [frame.min(), frame.max()], color=color)\n    plt.text(milestone['timestamp'], frame.min(), milestone['label'], color=color)","5f9ca789":"plt.figure(figsize=(20, 6))\nsns.lineplot(x=no_words.index, y=no_words.values, color='teal', alpha=.3)\nplt.title('No. words')\nplot_milestone(milestone1, no_words)\nplot_milestone(milestone2, no_words)\nplt.show()","a639e1c9":"plt.figure(figsize=(20, 6))\nsns.lineplot(x=mean_length.index, y=mean_length.values, color='steelblue', alpha=.6)\nplt.title('Mean length comments')\nplot_milestone(milestone1, mean_length)\nplot_milestone(milestone2, mean_length)\nplt.show()","624375fb":"plt.figure(figsize=(20, 6))\nsns.lineplot(x=no_comments.index, y=no_comments.values, color='navy', alpha=.6)\nplt.title('No. comments')\nplot_milestone(milestone1, no_comments, color='black')\nplot_milestone(milestone2, no_comments, color='black')\nplt.show()","2d3e2fde":"plt.figure(figsize=(20, 6))\nsns.lineplot(x=no_uppers.index, y=no_uppers.values, color='purple', alpha=.4)\nplt.title('No. uppercase words')\nplot_milestone(milestone1, no_uppers, color='black')\nplot_milestone(milestone2, no_uppers, color='black')\nplt.show()","15bd85fb":"plt.figure(figsize=(20, 6))\nsns.lineplot(x=sum_polarity.index, y=sum_polarity.apply(lambda x: x if x > 0 else 0).values, label='Positive comments', color='darkblue', alpha=.6)\nsns.lineplot(x=sum_polarity.index, y=sum_polarity.apply(lambda x: x if x < 0 else 0).values, label='Negative comments', color='red', alpha=.8)\nsns.scatterplot(x=mean_polarity.index, y=mean_polarity.values, label='Mean polarity', color='black', alpha=0.4)\nplot_milestone(milestone1, sum_polarity, color='seagreen')\nplot_milestone(milestone2, sum_polarity, color='seagreen')\nplt.title('Polarity')\nplt.show()","702b9a0f":"# Load the data","3ca15e95":"> We can see that most of the comment are defined as being positive or neutral comments! So the overall sentiment here is positive, most likely because of the joyful event :)","ed7fd279":"> We can suppose that people were casually exchanging during most of the live, but during events they mostly focused on cheering without writing lots of words.","5ca58e5c":"# Perseverance Land on Mars YouTube Live Comments\n## English Comments Posted During Nasa's Live Stream on YouTube\n\n<div>\n    <img src=\"https:\/\/storage.googleapis.com\/kaggle-datasets-images\/1177049\/1970679\/d7acecdc6bb8c0555f746fa078399180\/dataset-cover.jpg?t=2021-02-23-15-41-02\">\n<\/div>\n\n<br>\n\n## Content\n\nThe dataset contains two basic attributes from which you can extract an arrangement of exciting features, starting from DateTime-based features up to text-based features.\n- The first is the time in the video in which the comment was posted; it is important to note that the EST time the live stream started is 2:15.\n- The second is the comment that was posted; here, it is important to note that non-english comments were removed.\n\n## Inspiration\n\nI think it might be interesting to get a better understanding of how people around the world reacted to the rover landing on Mars and the content shown in the video. There were many points where the video lagged, or the site crashed.","e75f06d6":"# Analysis","879798d1":"# Conclusion\n\nPlease don't hesitate to help me improve this notebook :)"}}