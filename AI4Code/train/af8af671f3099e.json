{"cell_type":{"20f5c0dd":"code","62f64aec":"code","3bce3476":"code","ea6433be":"code","bf3324d7":"code","8c4f71e7":"code","2f68df94":"code","6afe94f6":"code","9d17c2a9":"code","3b3bacf7":"code","8b9c18b5":"code","4567cba7":"code","be2bf15f":"markdown","1997ac81":"markdown","02f30658":"markdown","712a0b17":"markdown","6b64d41d":"markdown","1d596696":"markdown"},"source":{"20f5c0dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom sklearn.metrics import mean_absolute_error, r2_score, explained_variance_score\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import GridSearchCV, StratifiedKFold\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","62f64aec":"airbnb_dataframe = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\nairbnb_dataframe.head(5)","3bce3476":"airbnb_dataframe = airbnb_dataframe.drop(columns=['id', 'name', 'host_id', 'host_name','last_review'])\n","ea6433be":"airbnb_dataframe.dtypes","bf3324d7":"\nairbnb_dataframe[\"neighbourhood\"] = pd.Categorical(airbnb_dataframe[\"neighbourhood\"])\nairbnb_dataframe[\"neighbourhood_group\"] = pd.Categorical(airbnb_dataframe[\"neighbourhood_group\"])\nairbnb_dataframe[\"room_type\"] = pd.Categorical(airbnb_dataframe[\"room_type\"])\nairbnb_dataframe = pd.concat([airbnb_dataframe, pd.get_dummies(airbnb_dataframe[\"neighbourhood\"], prefix=\"neighborhood\"),\n                              pd.get_dummies(airbnb_dataframe[\"neighbourhood_group\"], prefix =\"neigh_group\"),\n                             pd.get_dummies(airbnb_dataframe[\"room_type\"], prefix =\"room_type\")], axis=1)\n","8c4f71e7":"\nairbnb_dataframe = airbnb_dataframe.drop(columns=[\"neighbourhood\",\"neighbourhood_group\",\"room_type\"])\nairbnb_dataframe = airbnb_dataframe.dropna()\n","2f68df94":"Y = airbnb_dataframe[\"price\"]\nX = airbnb_dataframe.drop(columns=[\"price\"])","6afe94f6":"from sklearn import preprocessing\ncols = X.columns\nX_scaled = preprocessing.scale(X)\nX_scaled = pd.DataFrame(X_scaled, columns=cols)\n\n## note that scaled data has 0 mean and 1 variance\nX_train, X_test, Y_train, Y_test = train_test_split(X_scaled, Y, test_size = 0.1, random_state = 1)","9d17c2a9":"X_train.head(10)","3b3bacf7":"xgb_model = xgb.XGBRegressor(n_estimators=100, learning_rate=0.08, gamma=0, subsample=0.75, colsample_bytree=1, max_depth=7)\nxgb_model.fit(X_train, Y_train)\n","8b9c18b5":"predictions = xgb_model.predict(X_test)\nprint(explained_variance_score(predictions,Y_test))","4567cba7":"plt.scatter(predictions, Y_test, marker=\"o\")","be2bf15f":"Lets see the output in the test data","1997ac81":"Drop the columns that have been converted into the One-hot vectors","02f30658":"Lets initialize xgb booster for the Regression problem","712a0b17":"Lets split the data into training and test set","6b64d41d":"Now lets us create predictor variables and the dependant variables","1d596696":"Convert the categorical variables into One-hot encoding using pandas"}}