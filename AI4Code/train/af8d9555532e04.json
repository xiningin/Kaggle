{"cell_type":{"31b9c11f":"code","6de607bb":"code","c4629e49":"code","41a15b13":"code","68b8157e":"code","ff7d5b9c":"code","bdb046bc":"code","dcef0ae0":"code","12025764":"code","c9c6c2b0":"code","ff0c0f3c":"code","1dd47f2d":"code","3cd8088f":"code","7cb5e5e7":"code","0ede2860":"code","12a15343":"code","e361d3a4":"code","8906d7ac":"code","18a12430":"code","631a38b9":"code","56d1051f":"code","34e2f18a":"code","2e79bb44":"code","f8741901":"code","619ab95a":"code","115e7a1e":"code","61079345":"markdown","70871bee":"markdown","53e66044":"markdown","5ac6b446":"markdown","4ed409aa":"markdown","f157cb19":"markdown","22ea2f8c":"markdown","dd452033":"markdown","c238bbca":"markdown","37bb656e":"markdown","75ada81b":"markdown","40e61709":"markdown","1eece869":"markdown","3e0dd579":"markdown","979583c1":"markdown"},"source":{"31b9c11f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6de607bb":"df = pd.read_csv('\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv')","c4629e49":"df.head()","41a15b13":"df.info()","68b8157e":"df.describe().T","ff7d5b9c":"df.shape","bdb046bc":"df.isnull().sum()","dcef0ae0":"pd.DataFrame(df.corr())","12025764":"plt.figure(figsize=(15, 8))\nsns.heatmap(df.corr(),annot = True)","c9c6c2b0":"qualitative = df.select_dtypes('object')\nquantitive = df._get_numeric_data()\nquantitive.drop(['price','car_ID'], axis=1)","ff0c0f3c":"y = df['price']\nplt.figure(1); plt.title('Normal')\nsns.distplot(y, kde=True)","1dd47f2d":"numeric = pd.melt(df, value_vars=quantitive)\np = sns.FacetGrid(numeric, col='variable', col_wrap=2, sharex=False, sharey=False, size=5)\np = p.map(sns.distplot, \"value\")","3cd8088f":"categ = pd.melt(df, id_vars=['price'], value_vars=qualitative)","7cb5e5e7":"def boxplot(x, y, **kwargs):\n    sns.boxplot(x=x, y=y)\n    x=plt.xticks(rotation=90)\n    \np = sns.FacetGrid(categ, col=\"variable\",  col_wrap=2, sharex=False, sharey=False, size=5)\np = p.map(boxplot, \"value\", \"price\")","0ede2860":"df2 = df._get_numeric_data()\ndf2.drop(['price','car_ID'], axis=1)","12a15343":"from sklearn.feature_selection import VarianceThreshold\n\nthresholder = VarianceThreshold(threshold=0)\nthresholder.fit(df2)\n\npd.DataFrame( {'Feature': df2.columns,'Variance': thresholder.variances_,}).sort_values('Variance', ascending=True)","e361d3a4":"sum(thresholder.get_support())","8906d7ac":"len(df2.columns[thresholder.get_support()])","18a12430":"df3 = thresholder.transform(df2)","631a38b9":"df.shape, df3.shape","56d1051f":"from sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest, chi2,f_classif,f_regression\n\nX = df2.drop(['price','car_ID','symboling'], axis=1)\nX","34e2f18a":"y = df['price']","2e79bb44":"y","f8741901":"X.shape","619ab95a":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=.30)\n\nKbest_reg = SelectKBest(score_func=f_regression, k=4)\nKbest_reg.fit(X_train, y_train)\n\n\nfor i in range(len(Kbest_reg.scores_)):\n    print(f'Feature {i} : {round(Kbest_reg.scores_[i],3)}')\n\nprint()\n\n\nplt.bar([X_train.columns[i] for i in range(len(Kbest_reg.scores_))], Kbest_reg.scores_)\nplt.xticks(rotation=90)","115e7a1e":"X_train_reg = Kbest_reg.transform(X_train)\nprint(\"X_train.shape: {}\".format(X_train.shape))\nprint()\nprint(\"X_train_selected.shape: {}\".format(X_train_reg.shape))\nprint()\nX_test_reg = Kbest_reg.transform(X_test)","61079345":"# Univariate selection methods ","70871bee":"# Remove constant features","53e66044":"There is no missing data","5ac6b446":"# Price Distribution ","4ed409aa":"## Numerical features","f157cb19":"Based on the SelectKBest, ['carwidth', 'curbweight', 'enginesize', 'horsepower'] are selected.","22ea2f8c":"### SelectKBest","dd452033":"### Using variance threshold from sklearn\n","c238bbca":"The most correlated features are **carlength-wheelbase**, **carwidth-whellbase**, **curbweight-carlength**, **curbweight-wheelbase**, **citympg-highwaympg**, **carwidth-price**, **curbweight-price**, **enginesize-price**, **horsepower-price**","37bb656e":"The distribution is not normal is a little bit skewed to the right ","75ada81b":"## Categorical features","40e61709":"There is no feature have zero variance.","1eece869":"The target is Price","3e0dd579":"By removing constant features the features dropped from 26 to 16 features.","979583c1":"As we can see here there are outliers in graphs for some features"}}