{"cell_type":{"8c7b38eb":"code","1a642765":"code","d0fa501f":"code","f77c78b0":"code","3d1a4577":"code","f1c88ac1":"code","52bfc76d":"code","e7c07cc0":"code","2a48fee0":"code","f5095b4d":"code","9138e9a0":"code","6f2b3a9b":"code","c41ec862":"code","2819dfc9":"code","2eaa9255":"code","86ce6715":"code","cd1ba89c":"code","904a80b1":"code","852958af":"code","eab5077d":"code","fe0e5457":"code","015bbcec":"code","921f4c43":"code","d5c1246f":"code","cd2485ca":"code","a0cf46a1":"code","e98853f4":"code","43968386":"code","d4382ea3":"code","cd95c43a":"code","cb392181":"code","d61a5292":"code","d56448c9":"code","876329c0":"code","dbaf50ac":"code","51e999e8":"code","1bfe9b76":"code","64a39ff9":"code","8c425510":"code","b7542414":"code","32199e36":"code","ba5dca81":"code","8bbb36c5":"code","565d6b85":"code","d8c23ef4":"code","0010aeee":"code","185b694d":"code","d781611e":"code","bd251940":"code","07cb2f9c":"code","03e9e2b2":"code","cd9372cd":"code","538362e7":"code","436db9f9":"code","a027c78a":"code","ac60c789":"code","405bdef7":"code","7f653a57":"code","152b2e31":"code","516ba420":"code","94c99954":"markdown","73b9443f":"markdown","7e09494d":"markdown","7b7f0d9d":"markdown","d99a54c6":"markdown","9f082441":"markdown","0d102057":"markdown","a0154172":"markdown","9e29d376":"markdown","0c35dcc2":"markdown","c1adff7a":"markdown","038eff16":"markdown","eeea3d40":"markdown","4e52279f":"markdown","054cbf2e":"markdown","78bc139d":"markdown","7cc436d9":"markdown","93bec04f":"markdown","12ce60d9":"markdown","be0a7e89":"markdown","ea285221":"markdown","11f76fd8":"markdown","24e9dfb9":"markdown","ab9bbea1":"markdown","3087605d":"markdown","3a7e95e7":"markdown","b621a0db":"markdown","c065c813":"markdown","bf6f662e":"markdown"},"source":{"8c7b38eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a642765":"# Abrir los archivos .csv como un DataFrame\n# Importar pandas y numpy para usarlos como pd y np respectivamente\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import pyplot\nimport seaborn as sns\nfrom pandas.plotting import scatter_matrix\nimport scikitplot as skplt","d0fa501f":"#importing the data\ndata = pd.read_csv(\"..\/input\/spotify-dataset-19212020-160k-tracks\/tracks.csv\")\ndata","f77c78b0":"data.tail()","3d1a4577":"### 1) Pre-Procesado","f1c88ac1":"# muestra la informacion que contiene nuestro dataset\nprint(data.info())","52bfc76d":"#Limp\u00eceza : Busqueda de valores vacios\ndata.isnull().any()","e7c07cc0":"#limpieza : Suma de valores vacios\ndata.isnull().sum()","2a48fee0":"data.duplicated().sum()\n","f5095b4d":"nan_rows = data[data.isnull().any(1)]\nprint(nan_rows)","9138e9a0":"data.drop(data[data.name.isnull()].index, inplace = True)","6f2b3a9b":"data.isnull().sum()","c41ec862":"#Hay ciertas columnas que no necesitamops ya que no aportan informaci\u00f3n relevante para este proyecto\ndata.drop(columns=['id_artists','id','time_signature'], inplace=True)","2819dfc9":"data.shape","2eaa9255":"data['release_date'] = pd.to_datetime(data['release_date'])","86ce6715":"data.describe()","cd1ba89c":"#Vamos a crear una nueva columna de a\u00f1o para facilitar las visualizaciones\ndata['year'] = data.apply(lambda row: row.release_date.year, axis = 1)","904a80b1":"a\u00f1os = data[[\"acousticness\",\"danceability\",\"energy\", \"instrumentalness\", \n               \"liveness\",\"tempo\", \"valence\", \"loudness\", \"speechiness\", \"year\",\"popularity\"]].\\\ngroupby(\"year\").mean().sort_values(by=\"year\").reset_index()\n\n# year_avg.head()\nplt.figure(figsize=(14,8))\nplt.title(\"Tendencia de popularidad de canciones a lo largo del tiempo\", fontdict={\"fontsize\": 15})\n\nlines = [\"popularity\"]\n\nfor line in lines:\n    ax = sns.lineplot(x='year', y=line, data=a\u00f1os)\n    \n    \nplt.ylabel(\"Popularity\")\nplt.legend(lines)","852958af":"data['explicit'].corr(data['popularity'])","eab5077d":"exp_data = sns.catplot(data=data, kind=\"bar\",\n                        x=\"explicit\", y=\"popularity\",\n                        ci=\"sd\", palette='Accent',\n                        height=6)\nexp_data.fig.suptitle('Popularity vs. Explicit', y=1.05, c='r')\nexp_data.set_axis_labels(\"\", \"Popularity\")\nexp_data.set_xticklabels(['No Explicit\\nContent', 'Explicit\\nContent'])\nplt.show()","fe0e5457":"data['key'].corr(data['popularity'])","015bbcec":"exp_data = sns.catplot(data=data, kind=\"bar\",\n                        x=\"key\", y=\"popularity\",\n                        palette='pastel',\n                        ci = 'sd',\n                        height=5, aspect = 3)\nexp_data.fig.suptitle('Popularity by Key Category', y=1.05, c='r', weight='bold')\nexp_data.set_axis_labels(\"key\", \"Popularity\")\nplt.show()","921f4c43":"data['mode'].corr(data['popularity'])","d5c1246f":"exp_data = sns.catplot(data=data, kind=\"bar\",\n                        x=\"mode\", y=\"popularity\",\n                        ci=\"sd\", palette='Accent',\n                        height=4)\nexp_data.fig.suptitle('Popularity vs. Mode', y=1.05, c='r')\nexp_data.set_axis_labels(\"\", \"Popularity\")\nexp_data.set_xticklabels(['Minor (0)', 'Major(1)'])\nplt.show()","cd2485ca":"data['acousticness'].corr(data['popularity'])","a0cf46a1":"fig, ax = plt.subplots(figsize=(15, 6))\nax1_data =  data.groupby('acousticness')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x = ax1_data['acousticness'], y = ax1_data['popularity'], color='blue', ax=ax)\nax.set_title('Acousticness vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","e98853f4":"data['danceability'].corr(data['popularity'])","43968386":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('danceability')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='danceability', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('Danceability vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","d4382ea3":"data['energy'].corr(data['popularity'])","cd95c43a":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('energy')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='energy', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('Energy vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","cb392181":"data['instrumentalness'].corr(data['popularity'])","d61a5292":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('instrumentalness')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='instrumentalness', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('Instrumentalness vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","d56448c9":"data['liveness'].corr(data['popularity'])","876329c0":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('liveness')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='liveness', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('Liveness vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","dbaf50ac":"data['loudness'].corr(data['popularity'])","51e999e8":"fig, ax = plt.subplots(figsize = (15, 6))\nsns.scatterplot(x='loudness', y='popularity', data=data, color='blue', alpha=0.3)\nplt.show()","1bfe9b76":"data['speechiness'].corr(data['popularity'])","64a39ff9":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('speechiness')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='speechiness', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('speechiness vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","8c425510":"data['tempo'].corr(data['popularity'])","b7542414":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('tempo')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='tempo', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('tempo vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","32199e36":"data['valence'].corr(data['popularity'])","ba5dca81":"fig, ax = plt.subplots(1, figsize=(15, 6), sharey=True, sharex = True)\nax_data =  data.groupby('valence')['popularity'].mean().to_frame().reset_index()\nax = sns.scatterplot(x='valence', y='popularity', data=ax_data, color='blue', ax=ax)\nax.set_title('valence vs. Mean Popularity')\nax.set_ylabel('Mean Popularity', fontsize=12)\nplt.tight_layout()\nplt.show()","8bbb36c5":"fig, ax = plt.subplots(figsize = (15, 6))\nsns.scatterplot(x='valence', y='popularity', data=data, color='blue', alpha=0.3)\nplt.show()","565d6b85":"#Histogramas\ndata.hist(figsize=(20, 20))\nplt.show()","d8c23ef4":"plt.figure(figsize = (40, 20))\nplt.subplot(331)\nsns.boxplot(data['danceability'])\nplt.subplot(332)\nsns.boxplot(data['duration_ms'])\nplt.subplot(333)\nsns.boxplot(data['energy'])\nplt.subplot(334)\nsns.boxplot(data['liveness'])\nplt.subplot(335)\nsns.boxplot(data['loudness'])\nplt.subplot(336)\nsns.boxplot(data['instrumentalness'])\nplt.show()","0010aeee":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncorr = data.corr()\nsns.heatmap(corr,annot=True)","185b694d":"# # Plotting\nfig, ax = plt.subplots(figsize = (12, 10))\nlead_artists = data.groupby('artists')['popularity'].sum().sort_values(ascending=False).head(20)\nax = sns.barplot(x=lead_artists.values, y=lead_artists.index, palette=\"Blues\", orient=\"h\", edgecolor='black', ax=ax)\nax.set_xlabel('Sum of Popularity', c='r', fontsize=12)\nax.set_ylabel('Artist', c='r', fontsize=12)\nax.set_title('20 Most Popular Artists in Dataset', c='r', fontsize=14, weight = 'bold')\nplt.show()","d781611e":"# find out artists with more than 100 tracks\ndata['popular_artist'] = data['artists'].map(data['artists'].value_counts()>100)\npop_arts  = data.groupby(['artists', 'popular_artist'])['popularity'].mean().sort_values(ascending=False).reset_index(1)\ndf_pop_arts = pop_arts.loc[pop_arts['popular_artist'] == True,['popularity']]\n\n# # Plotting\nfig, ax = plt.subplots(figsize = (12, 10))\nlead_artists = df_pop_arts.groupby('artists')['popularity'].mean().sort_values(ascending=False).head(20)\nax = sns.barplot(x=lead_artists.values, y=lead_artists.index, palette=\"Blues\", orient=\"h\", edgecolor='black', ax=ax)\nax.set_xlabel('Mean of Popularity', c='r', fontsize=12)\nax.set_ylabel('Artist', c='r', fontsize=12)\nax.set_title('20 Most Popular Artists in Dataset with > 100 tracks', c='r', fontsize=14, weight = 'bold')\nplt.show()\n","bd251940":"plt.figure(figsize=(16, 4))\nsns.set(style=\"whitegrid\")\nx = data.groupby(\"name\")[\"popularity\"].mean().sort_values(ascending=False).head(20)\naxis = sns.barplot(x.index, x)\naxis.set_title('Top Tracks with Popularity')\naxis.set_ylabel('Popularity')\naxis.set_xlabel('Tracks')\nplt.xticks(rotation = 90)\n","07cb2f9c":"plt.figure(figsize=(16, 4))\nsns.set(style=\"whitegrid\")\nx = data.groupby(\"artists\")[\"popularity\"].sum().sort_values(ascending=False).head(20)\nax = sns.barplot(x.index, x)\nax.set_title('Top Artists with Popularity')\nax.set_ylabel('Popularity')\nax.set_xlabel('Artists')\nplt.xticks(rotation = 90)","03e9e2b2":"data.value_counts('popularity')","cd9372cd":"data.loc[data['popularity'] < 30, 'popularity'] = 0 \ndata.loc[data['popularity'] >= 30, 'popularity'] = 1\ndata.loc[data['popularity'] == 1]","538362e7":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC, LinearSVC\n\n\nfrom sklearn.metrics import make_scorer, accuracy_score, roc_auc_score \nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import train_test_split\n\nfeatures = [\"acousticness\",\"danceability\",\"duration_ms\",\"energy\",\"explicit\",\"instrumentalness\"\n            ,'key','liveness','loudness','mode','speechiness','tempo','valence','year']\ntraining = data.sample(frac = 0.8,random_state = 420)\nX_train = training[features]\ny_train = training['popularity']\nX_test = data.drop(training.index)[features]","436db9f9":"X_train, X_valid, y_train, y_valid = train_test_split(X_train, y_train, test_size = 0.2, random_state = 420)","a027c78a":"RFC_Model = RandomForestClassifier()\nRFC_Model.fit(X_train, y_train)\nRFC_Predict = RFC_Model.predict(X_valid)\nRFC_Accuracy = accuracy_score(y_valid, RFC_Predict)\nprint(\"Accuracy: \" + str(RFC_Accuracy))\n\nRFC_AUC = roc_auc_score(y_valid, RFC_Predict) \nprint(\"AUC: \" + str(RFC_AUC))","ac60c789":"LR_Model = LogisticRegression()\nLR_Model.fit(X_train, y_train)\nLR_Predict = LR_Model.predict(X_valid)\nLR_Accuracy = accuracy_score(y_valid, LR_Predict)\nprint(\"Accuracy: \" + str(LR_Accuracy))\n\nLR_AUC = roc_auc_score(y_valid, LR_Predict) \nprint(\"AUC: \" + str(LR_AUC))","405bdef7":"# AdaBoost Algorithm\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = AdaBoostClassifier()\n# n_estimators = 50 (default value) \n# base_estimator = DecisionTreeClassifier (default value)\nmodel.fit(X_train,y_train)\npreds = model.predict(X_valid)\nprediccion=accuracy_score(y_valid, preds)\n\nprint(\"Accuracy: \" + str(prediccion))\nADA_AUC = roc_auc_score(y_valid, preds) \nprint(\"AUC: \" + str(ADA_AUC))from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)\npreds = model.predict(X_valid)\nprediccion=accuracy_score(y_valid, preds)\n\nprint(\"Accuracy: \" + str(prediccion))\nXG_AUC = roc_auc_score(y_valid, preds) \nprint(\"AUC: \" + str(XG_AUC))","7f653a57":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)\npreds = model.predict(X_valid)\nprediccion=accuracy_score(y_valid, preds)\n\nprint(\"Accuracy: \" + str(prediccion))\nXG_AUC = roc_auc_score(y_valid, preds) \nprint(\"AUC: \" + str(XG_AUC))","152b2e31":"from sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(y_valid,preds))","516ba420":"matrix=confusion_matrix(y_valid,preds)\nprint(matrix)","94c99954":"Detecta la presencia de p\u00fablico en la grabaci\u00f3n. Los valores m\u00e1s altos de liveness representan una mayor probabilidad de que la pista haya sido interpretada en directo.\n\nUn valor superior a 0,8 proporciona una fuerte probabilidad de que la pista sea en directo","73b9443f":"# Speechiness","7e09494d":"# 3) Modelado","7b7f0d9d":"Una medida de 0,0 a 1,0 que describe la positividad musical que transmite una pista.\n\nLas pistas con alta valencia suenan m\u00e1s positivas (por ejemplo, felices, alegres, euf\u00f3ricas), mientras que las pistas con baja valencia suenan m\u00e1s negativas (por ejemplo, tristes, deprimidas, enfadadas).","d99a54c6":"La expresividad detecta la presencia de palabras habladas en una pista. Cuanto m\u00e1s exclusivamente hablada sea la grabaci\u00f3n (por ejemplo, un programa de entrevistas, un audiolibro o una poes\u00eda), m\u00e1s se acercar\u00e1 a 1,0 el valor del atributo.\n\nLos valores superiores a 0,66 describen pistas que probablemente est\u00e9n compuestas exclusivamente por palabras habladas.\n\nLos valores entre 0,33 y 0,66 describen pistas que pueden contener tanto m\u00fasica como voz, ya sea en secciones o en capas, incluyendo casos como la m\u00fasica rap. Los valores inferiores a 0,33 representan probablemente m\u00fasica y otras pistas no habladas.\n\n","9f082441":"El modo indica la modalidad (mayor o menor) de una pista, el tipo de escala del que se deriva su contenido mel\u00f3dico.\n\nEl mayor se representa con 1 y el menor con 0.","0d102057":"#mean_df = data['popularity'].mean()->27.5732124561666967","a0154172":"# Instrumentalness","9e29d376":"Predice si una pista no contiene voces. Los sonidos \"Ooh\" y \"aah\" se consideran instrumentales en este contexto. Las pistas de rap o de palabras habladas son claramente \"vocales\".\n\nCuanto m\u00e1s se acerque el valor de instrumentalizaci\u00f3n a 1,0, mayor ser\u00e1 la probabilidad de que la pista no tenga contenido vocal. Los valores superiores a 0,5 representan pistas instrumentales, pero la confianza es mayor a medida que el valor se acerca a 1,0","0c35dcc2":"# Mode","c1adff7a":"Una medida de confianza de 0,0 a 1,0 sobre si la pista es ac\u00fastica. 1,0 representa una alta confianza en que la pista es ac\u00fastica.\n\nLa ac\u00fastica de la mayor\u00eda de las pistas es cercana a 0 o 1\n\nCuanto m\u00e1s se conf\u00ede en que un tema es ac\u00fastico, menor ser\u00e1 su popularidad media (se aplica para acousitcness > 0,1)","038eff16":"# 2) EDA","eeea3d40":"Explicit :\nLos contenidos expl\u00edcitos suelen llevar la etiqueta Parental Advisory (abreviada PAL), que es una etiqueta de advertencia.\n\nSe coloca en las grabaciones de audio en reconocimiento de blasfemias o referencias inapropiadas, con la intenci\u00f3n de alertar a los padres sobre el material potencialmente inadecuado para los ni\u00f1os.\n\nLa etiqueta se ha incluido en las listas digitales que ofrecen las tiendas de m\u00fasica en l\u00ednea (como Spotify).\n\nLos valores de la caracteristica 'Explicit' van entre 0 si no es explicito y 1 en el caso de que lo sea\n\nLa correlaci\u00f3n lineal con la popularidad es de 0.2117","4e52279f":"# Explicit","054cbf2e":"# Acousticness","78bc139d":"El tempo global estimado de una pista en pulsaciones por minuto (BPM).\n\nEn la terminolog\u00eda musical, el tempo es la velocidad o el ritmo de una pieza determinada y se deriva directamente de la duraci\u00f3n media de los tiempos.","7cc436d9":"# Danceabilitiy","93bec04f":"# Loudness","12ce60d9":"Popularity:\nLa popularidad de las canciones. El valor estar\u00e1 entre 0 y 100, siendo 100 el m\u00e1s popular.\n\nLa popularidad se calcula a partir de la popularidad de las pistas individuales del \u00e1lbum.\n\nEl desarrollo de este proyecto se va a enfocar en la popularidad de las canciones a partir de las caracteristicas de estas.\n\nLa popularidad se calcula mediante un algoritmo y se basa, en su mayor parte, en el n\u00famero total de reproducciones que ha tenido la pista y lo recientes que son esas reproducciones.","be0a7e89":"# Popularity","ea285221":"## 3) Visualizaci\u00f3n ","11f76fd8":"# Energy","24e9dfb9":"La sonoridad general de una pista en decibelios (dB). Los valores de sonoridad se promedian en toda la pista y son \u00fatiles para comparar la sonoridad relativa de las pistas.\n\nLa sonoridad es la cualidad de un sonido que es el principal correlato psicol\u00f3gico de la fuerza f\u00edsica (amplitud). Los valores suelen oscilar entre -60 y 0 db.","ab9bbea1":"# Key","3087605d":"La energ\u00eda es una medida de 0,0 a 1,0 y representa una medida perceptiva de intensidad y actividad. Por lo general, las pistas energ\u00e9ticas se sienten r\u00e1pidas, ruidosas y con mucho ruido. Por ejemplo, el death metal tiene mucha energ\u00eda, mientras que un preludio de Bach tiene una puntuaci\u00f3n baja en la escala.\n\nEntre las caracter\u00edsticas perceptivas que contribuyen a este atributo se encuentran el rango din\u00e1mico, el volumen percibido, el timbre, la velocidad de aparici\u00f3n y la entrop\u00eda general","3a7e95e7":"# Tempo","b621a0db":"# Valence","c065c813":"# Liveness","bf6f662e":"La bailabilidad describe la idoneidad de una pista para el baile bas\u00e1ndose en una combinaci\u00f3n de elementos musicales como el tempo, la estabilidad del ritmo, la fuerza del comp\u00e1s y la regularidad general. Un valor de 0,0 es el menos bailable y 1,0 el m\u00e1s bailable."}}