{"cell_type":{"f22ec0cd":"code","193f1c7d":"code","057463cb":"code","b82d8057":"code","d34a2ee3":"code","9b4ea030":"code","24f388e2":"code","654fd1eb":"code","764745ad":"code","f2d429e3":"code","d9dbb750":"code","c75dc3d8":"code","1056fc42":"code","32c994ce":"code","acb8d3e5":"code","8eec7fe3":"code","eeac71ee":"code","68784902":"code","678bf4d3":"code","d6ebde01":"code","8a7e9839":"code","353dc3e9":"code","5f3a098e":"code","76f2ee1b":"code","c280469f":"code","beed45f2":"code","ea2e3905":"code","6d0c4447":"code","20de5820":"code","487b10ca":"code","3e073b92":"code","98416952":"code","4bda574a":"code","41915727":"code","7a0fb576":"code","65a99e46":"code","a407e904":"code","093a1723":"code","178d407f":"code","699746db":"code","7c42a92c":"code","b3170d99":"code","f5c27d81":"code","9b9eec98":"code","762aa13b":"code","497f7317":"code","c6ebdff3":"markdown","e734a5f5":"markdown","bfb04e25":"markdown","ae7df0a9":"markdown","383c1323":"markdown","fa2f9ded":"markdown","182d0ad6":"markdown","6f32acfc":"markdown","51627d24":"markdown","636515a9":"markdown"},"source":{"f22ec0cd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","193f1c7d":"my_data = pd.read_csv('..\/input\/zameencom-property-data-pakistan\/Property_with_Feature_Engineering.csv')","057463cb":"my_frame = pd.DataFrame(my_data)\nmy_frame.head()","b82d8057":"my_frame.shape","d34a2ee3":"my_frame.info()","9b4ea030":"my_frame.describe()","24f388e2":"my_frame.dtypes","654fd1eb":"my_frame.isnull().sum()","764745ad":"my_frame.columns.unique()","f2d429e3":"my_frame.nunique()","d9dbb750":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(my_frame.isnull())","c75dc3d8":"my_frame.count()","1056fc42":"my_frame.corr()","32c994ce":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(my_frame.corr(), xticklabels = my_frame.corr().columns.values, yticklabels = my_frame.corr().columns.values)","acb8d3e5":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(my_frame.corr(), xticklabels = my_frame.corr().columns.values, yticklabels = my_frame.corr().columns.values, annot = True)","8eec7fe3":"my_frame.columns.unique()","eeac71ee":"# visualise the count of each category in categorical columns\n\ncategorical_features = ['property_type', 'city', 'province_name', 'purpose', 'bedrooms']\n\nfor i, cat_feature in enumerate(my_frame[categorical_features]):\n    my_frame[cat_feature].value_counts().plot(kind = 'bar', color = 'purple')\n    plt.show()","68784902":"# seeing distribution of price in the dataset\n\nfig, ax = plt.subplots(figsize = (12, 8))\nsns.histplot(my_frame['price'], color = 'green')\nplt.ylim(0, 7500)\nplt.xlim(-25000000, 100000000)\nplt.show()","678bf4d3":"# visualizing price column with a box plot\n\nfig = plt.figure(figsize = (12, 8))\nmy_frame.boxplot(column = 'price')","d6ebde01":"# visualizing price vs property type\n\nfig = plt.figure(figsize = (12, 8))\nmy_frame.plot.scatter(x = 'price', y = 'property_type', color = 'purple')","8a7e9839":"my_frame = my_frame.fillna('NA')","353dc3e9":"my_frame.head()","5f3a098e":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(my_frame.isnull())","76f2ee1b":"my_frame.columns.unique()","c280469f":"my_frame = my_frame.drop(\n    ['property_id','location_id','page_url','location','latitude','longitude','area',\n     'date_added','agency','agent', 'price_bin', 'locality'], axis = 1)","beed45f2":"my_frame.head()","ea2e3905":"my_frame['property_type'] = my_frame['property_type'].astype('category').cat.codes\nmy_frame['city'] = my_frame['city'].astype('category').cat.codes\nmy_frame['province_name'] = my_frame['province_name'].astype('category').cat.codes\nmy_frame['purpose'] = my_frame['purpose'].astype('category').cat.codes","6d0c4447":"my_frame.head()","20de5820":"x = my_frame[['property_type', 'city', 'province_name', 'baths', 'purpose', 'bedrooms', 'area_sqft']]\n# x = my_frame.drop('price', axis = 1)\ny = my_frame['price']","487b10ca":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 35)","3e073b92":"from sklearn.linear_model import LinearRegression","98416952":"reg_model = LinearRegression()","4bda574a":"reg_model.fit(x_train, y_train)","41915727":"lin_y_pred = reg_model.predict(x_test)","7a0fb576":"lr_data = pd.DataFrame({'Actual' : y_test, 'Predicted' : lin_y_pred})\nlr_data","65a99e46":"from sklearn.ensemble import RandomForestRegressor","a407e904":"forest_model = RandomForestRegressor()","093a1723":"forest_model.fit(x_train, y_train)","178d407f":"forest_y_pred = forest_model.predict(x_test)","699746db":"forest_data = pd.DataFrame({'Actual' : y_test, 'Predicted' : forest_y_pred})\nforest_data","7c42a92c":"from sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error","b3170d99":"print('Linear Regression Mean Square Error:', mean_squared_error(y_test, lin_y_pred))\nprint('Linear Regression R2 Score:', r2_score(y_test, lin_y_pred))\n\nprint('Random Forest Regressor Mean Square Error:', mean_squared_error(y_test, forest_y_pred))\nprint('Random Forest Regressor R2 Score:', r2_score(y_test, forest_y_pred))","f5c27d81":"import pickle","9b9eec98":"pickle_out = open(\"regression_model.pkl\", \"wb\")\npickle.dump(reg_model, pickle_out)\npickle_out.close()","762aa13b":"pickle_out1 = open(\"forest_model.pkl\", \"wb\")\npickle.dump(forest_model, pickle_out1)\npickle_out1.close()","497f7317":"x_train.head()","c6ebdff3":"## Linear Regression","e734a5f5":"# THE END..!!","bfb04e25":"## Read dataset from csv file","ae7df0a9":"## Exploratory Data Analysis (EDA)","383c1323":"## train test split","fa2f9ded":"## Apply Pickle","182d0ad6":"## Data Cleaning \/ Data Wrangling","6f32acfc":"## Random Forest Regressor","51627d24":"## R2_Score, Mean_Squared_Error","636515a9":"## Import Libraries"}}