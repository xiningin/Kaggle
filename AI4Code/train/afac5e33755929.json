{"cell_type":{"653f8a13":"code","b2f4ce51":"code","aca00239":"code","2b264260":"code","3c725451":"code","81b6bd3c":"code","acd31c35":"markdown","e6c3ac0d":"markdown"},"source":{"653f8a13":"import keras\nfrom keras.applications import ResNet50\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Flatten, GlobalAveragePooling2D\nfrom keras.callbacks import TensorBoard\nimport time\n\nNAME = 'board {}'.format(time.time())\ntensorboard = TensorBoard(log_dir='..\/input\/photos\/{}'.format(NAME))\n\nnum_classes = 2\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg', weights=resnet_weights_path))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\n# Say not to train first layer (ResNet) model. It is already trained\nmy_new_model.layers[0].trainable = False","b2f4ce51":"my_new_model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","aca00239":"from keras.applications.resnet50 import preprocess_input\nfrom keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\ndata_generator = ImageDataGenerator(preprocessing_function=preprocess_input)\n\n\ntrain_generator = data_generator.flow_from_directory(\n        '..\/input\/photos\/photos\/train\/',\n        target_size=(image_size, image_size),\n        batch_size=12,\n        class_mode='categorical')\n\nvalidation_generator = data_generator.flow_from_directory(\n            '..\/input\/photos\/photos\/val\/',\n        target_size=(image_size, image_size),\n        class_mode='categorical')\n\nmy_new_model.fit_generator(\n        train_generator,\n        steps_per_epoch=50,\n        epochs = 3,\n        validation_data=validation_generator,\n        validation_steps=1,\n)","2b264260":"import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport glob as glob\n\np = 1\ndef find(path):\n    plt.figure(figsize=(15,10))\n    p = 1\n    for im in glob.glob(path):\n        plt.subplot(5,5,p)\n        p = p + 1\n        im = cv2.imread(im)\n        im = cv2.resize(im,(224,224))\n        x = preprocess_input(np.expand_dims(im.copy(), axis=0))\n        if (my_new_model.predict_classes(x) == 0):\n            txt = \"Modiji\"\n        else :\n            txt = \"Rahul\"\n        plt.title(txt)\n        plt.imshow(im)","3c725451":"find('..\/input\/photos\/photos\/val\/rural\/*.jpg')","81b6bd3c":"find('..\/input\/photos\/photos\/val\/urban\/\/*.jpg')","acd31c35":"### Compile Model","e6c3ac0d":"### Fit Model"}}