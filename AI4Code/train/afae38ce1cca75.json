{"cell_type":{"c7ec586a":"code","caf1f52e":"code","a1693476":"code","99d38fd0":"code","993c6a7f":"code","a3f373e2":"code","40c9e7cd":"code","f8890f84":"code","2a480c23":"code","b28775ed":"code","b2300afe":"code","8e329919":"code","bf94dc1e":"code","3ee8d569":"code","53e5e5c8":"code","a77e94f5":"code","7d9ce695":"markdown","ab999b4b":"markdown","db0ce4e2":"markdown","e788b71b":"markdown","6de0db4c":"markdown","caa04127":"markdown","33c0fa61":"markdown","27de22d5":"markdown"},"source":{"c7ec586a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport plotly.graph_objs as go\nfrom wordcloud import WordCloud,STOPWORDS \nimport spacy\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\nstopWords = stopwords.words('english')\nRE_EMOJI = re.compile('[\\U00010000-\\U0010ffff]', flags=re.UNICODE)\n%matplotlib inline\nstopwords = set(STOPWORDS)\n!pip install spacy-langdetect\nfrom spacy_langdetect import LanguageDetector\nnlp = spacy.load('en_core_web_lg', parse=True, tag=True, entity=True)\nlanguage_detector = LanguageDetector()\nnlp.add_pipe(LanguageDetector(), name='language_detector', last=True)\nimport plotly.express as px","caf1f52e":"tseries = pd.read_csv('..\/input\/pewdiepie-vs-tseries\/tseries_ytstats.csv')\ntseries.head()","a1693476":"tseries.isnull().sum()","99d38fd0":"tseries.dropna(inplace=True)\ntseries.reset_index(drop=True)\ntseries['durationSec'] = tseries['durationSec'].astype(int)\ntseries['publishedAtSQL'] = tseries['publishedAtSQL'].apply(lambda x:x[:10])","993c6a7f":"tseries.loc[tseries['viewCount'].nlargest(10).index][['videoTitle','viewCount']]","a3f373e2":"tseries.loc[tseries['likeCount'].nlargest(10).index][['videoTitle','likeCount']]","40c9e7cd":"tseries.loc[tseries['dislikeCount'].nlargest(10).index][['videoTitle','dislikeCount']]","f8890f84":"tseries.loc[tseries['commentCount'].nlargest(10).index][['videoTitle','commentCount']]","2a480c23":"tseries.loc[tseries['durationSec'].nlargest(10).index][['videoTitle','durationSec']]","b28775ed":"title_wc = ' '.join(titles for titles in tseries['videoTitle'].tolist())\nwordcloud = WordCloud(background_color='white',stopwords=stopwords).generate(title_wc)\nfigure(figsize=(20, 10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","b2300afe":"stopWords = stopWords + ['tseries', 'song', 'songs', 'video', 'lyrical', 'music', 'remix', 'hai']","8e329919":"def clean_text(text):\n    text = re.sub('#', '', text)  # remove hashtags\n    text = re.sub('@\\S+', '', text)  # remove mentions\n    text = re.sub('[%s]' % re.escape(\"\"\"!\"#$%&'()*+,-\/:;<=>?@[\\]^_`{|}~\"\"\"), '', text)  # remove punctuations\n    text = re.sub('\\s+', ' ', text)  # remove extra whitespace\n    text = RE_EMOJI.sub('',text)\n    words = word_tokenize(text)\n    clean_text = []\n    for word in words:\n        if word not in stopWords:\n            clean_text.append(word)\n    cln_txt = ' '.join(clean_text)\n    return cln_txt.lower()\n\ntseries['Clean Title'] = tseries['videoTitle'].apply(clean_text)\ntseries.head()","bf94dc1e":"def find_persons(text):\n    doc = nlp(text)\n    return [ent.text for ent in doc.ents if ent.label_ == 'PERSON']\n\ntseries['Personalities'] = tseries['Clean Title'].apply(find_persons)\ntseries.head()","3ee8d569":"dishes = ' '.join(dish for dish_list in tseries['Personalities'].tolist() for dish in dish_list)\nwordcloud = WordCloud(background_color='white',stopwords=stopWords).generate(dishes)\nfigure(figsize=(20, 10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","53e5e5c8":"fig = px.histogram(tseries, x=\"publishedAtSQL\")\nfig.show()","a77e94f5":"fig = go.Figure(data=[go.Bar(\n                x = tseries['videoCategoryLabel'].value_counts()[:10].index.tolist(),\n                y = tseries['videoCategoryLabel'].value_counts()[:10].values.tolist())])\n\nfig.show()","7d9ce695":"### **Stop words particular to T-Series Context**\n'tseries', 'song', 'songs', 'video', 'lyrical', 'music', 'remix', 'hai'","ab999b4b":"# Top 10 Disliked Videos","db0ce4e2":"# Number of null values","e788b71b":"# Top 10 Liked Videos","6de0db4c":"# Top 10 longest videos","caa04127":"# **Numerical Features Ranking of the T-Series Video Library**\n## Note - as of May 17th 2020\n### 1. Views\n### 2. Likes\n### 3. Dislikes\n### 4. Comments\n### 5. Duration of the Video","33c0fa61":"# Top 10 Most Viewed Videos","27de22d5":"# Top 10 most commented videos"}}