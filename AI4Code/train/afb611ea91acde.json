{"cell_type":{"9df32024":"code","7efa2f2d":"code","7b0015ce":"code","5f2c7dac":"code","1f12e515":"code","7f5518cc":"code","400c1585":"code","4eff2c79":"code","7ac1aacd":"code","ccd00cfd":"code","b347f7d8":"code","87a90acc":"code","0d3088bc":"code","13cb792f":"code","5feccb32":"code","8185630d":"code","f31ec044":"code","18463566":"code","5f4afb14":"code","4fb08b48":"code","316e7cc3":"code","16f272be":"code","d331b1e6":"code","2d5d22b0":"code","bdc21232":"code","ab4a335f":"code","dfe2849d":"code","e0744640":"code","49812809":"code","0cf928d3":"code","5be96434":"code","759bfe84":"code","801e4d52":"code","439e1318":"code","286ccd4b":"markdown","baf3cc54":"markdown","a90e970d":"markdown","9fa1c939":"markdown","9c6825ba":"markdown"},"source":{"9df32024":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","7efa2f2d":"# lets start by reading the csv file and then we will take a peek into it data\n\ndata=pd.read_csv('\/kaggle\/input\/mars-weather-data\/mars-weather.csv')\n\ndata.sample(5)","7b0015ce":"data.describe()","5f2c7dac":"data.info()","1f12e515":"# as we can see some of the columns have lot's of missing values i.e precipm( probably windspeed )\n\n# let's look at the non numeric columns and see what we have \n\nobj_cols=data.select_dtypes(include='object')\n\nobj_cols.sample(5)","7f5518cc":"data.head()","400c1585":"# looks as if the terrestrial columns is present in the stirng format let's convert it to datetime \n\ndata['terrestrial_date']=pd.to_datetime(data['terrestrial_date'])\n\ndata.terrestrial_date.sample(5)","4eff2c79":"# in this notebook is for learning univariate predicitons so for that reason we will try to predict temprature\n\n# let's take a deepr look at the temperature feature\n\ndata.columns","7ac1aacd":"import matplotlib.pyplot as plt\nplt.figure(figsize=(20,10))\ndata.iloc[:,6].value_counts(normalize=True,sort=True).plot(kind='bar')\nplt.xlabel('Max Temperature in degree Celsuis')\nplt.ylabel('% percentage')\nplt.show()","ccd00cfd":"# So we can see that most of the time the temperature lies in the range (-35-11 )\n\n#'lets check if we have any missing values in our target column'\n\ndata.iloc[:,6].isna().sum()\n\n# As we can see that there are 27 rows which have missing values for temperature feature","b347f7d8":"import datetime as dt\n# let's impute the misisng values by the mean of the month\n\ndata['month']=pd.to_datetime(data.terrestrial_date).dt.to_period('M')\n\ndata.month.value_counts()","87a90acc":"aa=data.iloc[:,6].name\nac=data.groupby(by='month')[aa].mean()\nab=data['max_temp'].isna()\ndata.loc[ab,['max_temp']]=data.loc[ab,'month'].apply(lambda x:ac[x])\ndata['max_temp'].isna().sum()","0d3088bc":"new_df=pd.DataFrame(list(data['max_temp']),index=data.terrestrial_date,columns=['Maxtemperature'])","13cb792f":"new_df=new_df.resample('D').mean()","5feccb32":"new_df","8185630d":"month_df=new_df.resample('M').mean()\nmonth_df","f31ec044":"year_df=new_df.resample('Y').mean()\nyear_df","18463566":"plt.figure(figsize=(20,10))\nplt.plot(new_df)\nplt.show()","5f4afb14":"from keras.layers import Bidirectional,LSTM,Dense,Flatten,Conv1D,MaxPooling1D,Dropout,RepeatVector\nfrom keras.models import Sequential\nfrom keras.callbacks import EarlyStopping,ReduceLROnPlateau\n\nearly_stop=EarlyStopping(monitor='loss',patience=5)","4fb08b48":"model=Sequential([Conv1D(100,kernel_size=3,input_shape=(30,1),activation='relu'),\n                  Conv1D(100,kernel_size=3),\n                  Conv1D(100,kernel_size=3),\n                  MaxPooling1D(2),\n                 Flatten(),\n                  RepeatVector(30),\n                 LSTM(128,activation='relu',return_sequences=True),\n                 LSTM(128,activation='relu',return_sequences=True),\n                  Bidirectional(LSTM(64,activation='relu')),\n                 Dense(128,activation='relu'),\n                 Dense(1)])\n\nmodel.compile(optimizer='adam',loss='mse',metrics=['accuracy'])","316e7cc3":"new_df1=pd.DataFrame(list(data['max_temp']), index=data['terrestrial_date'], columns=['temp'])","16f272be":"new_df1","d331b1e6":"new_df1=new_df1.resample('D').mean()\nnew_df1.temp.isna().sum()","2d5d22b0":"new_df1.fillna(data['max_temp'].mean(),inplace=True)\nnew_df1.temp.isna().sum()","bdc21232":"from sklearn.preprocessing import MinMaxScaler\n\nscaler=MinMaxScaler(feature_range=(-1,1))","ab4a335f":"scaled_data=scaler.fit_transform(new_df1)\nscaled_data[:5]","dfe2849d":"steps=30\ninp1=[]\nout1=[]\n\nfor i in range(len(scaled_data)-steps):\n    inp1.append(scaled_data[i:i+steps])\n    out1.append(scaled_data[i+steps])","e0744640":"inp1=np.asanyarray(inp1)\nout1=np.asanyarray(out1)\nx_train1=inp1[:500,:,:]\nx_test1=inp1[500:,:,:]\ny_train1=out1[:500]\ny_test1=out1[500:]","49812809":"model.fit(x_train1,y_train1,epochs=20)","0cf928d3":"predicted=model.predict(x_test1)","5be96434":"predicted1=scaler.inverse_transform(predicted)","759bfe84":"y_test2=scaler.inverse_transform(y_test1)","801e4d52":"plt.figure(figsize=(20,5))\nplt.plot(predicted1,'r',label='predicted')\nplt.plot(y_test2,'g',label='actual')\nplt.legend()\nplt.show()","439e1318":"AT THE END PREDICTED AND ACTUAL HAVE NEARLY EQUAL","286ccd4b":"**As we can see the average temperature has been increasing over the years**","baf3cc54":"# INTRODUCTION","a90e970d":"**Attributes Description**\n\n<br\/>\u2022id - The identification number of a single transmission\n\n<br\/>\u2022terrestrial_date - The date on Earth (formatted as month\/day\/year or m\/dd\/yy).\n\n<br\/>\u2022ls - The solar longitude or the Mars-Sun angle, measured from the Northern Hemisphere. In the Northern Hemisphere, the spring equinox is when ls = 0. Since Curiosity is in the Southern Hemisphere, the following ls values are of importance: <br\/>\u2022 ls = 0: autumnal equinox <br\/>\u2022 ls = 90 : winter solstice <br\/>\u2022 ls = 180 : spring equinox <br\/>\u2022 ls = 270 : summer solstice\n\n<br\/>\u2022month -\tThe Martian Month. Similarly to Earth, Martian time can be divided into 12 months.\n\n<br\/>\u2022min_temp -\tThe minimum temperature (in \u00b0C) observed during a single Martian sol.\n\n<br\/>\u2022max_temp -\tThe maximum temperature (in \u00b0C) observed during a single Martian sol.\t\n\n<br\/>\u2022pressure -\tThe atmospheric pressure (Pa) in Curiosity's location on Mars.\n\n<br\/>\u2022wind_speed - The average wind speed (m\/s) measured in a single sol. Note: Wind Speed data has not be transmitted to Earth since Sol 1485. Missing values are coded as NaN.\t\n\n<br\/>\u2022atmo_opacity - Description of the overall weather conditions on Mars for a given sol based on atmospheric opacity (e.g., Sunny).","9fa1c939":"**In this notebook is for learning univariate predicitons so for that reason we will try to predict temprature**\n\n**let's take a deeper look at the temperature feature**","9c6825ba":"**Before Entering Into Notebook ,I am going to give brief introduction about Data used,**\n\n**What is this?:** Data representing the weather conditions on Mars from Sol 1 (August 7, 2012 on Earth) to Sol 1895 (February 27, 2018 on Earth).\n\n**Source(s) & Methodology:** This data was measured and transmitted via the Rover Environmental Monitoring Station (REMS) on-board the Curiosity Rover. The data was made publicly available by NASA\u2019s Mars Science Laboratory and the Centro de Astrobiolog\u00eda (CSIC-INTA). The Centro de Astrobiolog\u00eda offers a widget and a disclaimer regarding the data collected by Curiosity here. \n"}}