{"cell_type":{"45982029":"code","18d9df5e":"code","59f830e7":"code","f106bd0c":"code","8f318c4e":"code","94d15d3c":"markdown","739460b6":"markdown","2b382e50":"markdown","2bec5de1":"markdown","3535bb37":"markdown"},"source":{"45982029":"import numpy as np\nimport pandas as pd\n\nimport numpy as np\nimport pandas as pd \nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\nfrom sklearn.ensemble import GradientBoostingRegressor\n\nimport xgboost","18d9df5e":"DATA_PATH = \"..\/input\/regression-sample-dataset\/regression_sample_data.csv\"\n\nID = \"id\"\nTARGET = \"target\"\nSEED = 2022\nEARLY_STOP_NUM = 5 ","59f830e7":"df = pd.read_csv(DATA_PATH)\ndf.head()","f106bd0c":"X = df.drop([ID,TARGET],axis=1)\ny = df[TARGET]\n\nX_train_val, X_test, y_train_val, y_test = train_test_split(X, y, random_state=SEED)\nX_train, X_val, y_train, y_val = train_test_split(X_train_val, y_train_val, random_state=SEED)\n\nxgb_reg = xgboost.XGBRegressor(random_state=SEED)\nxgb_reg.fit(X_train, y_train,eval_set=[(X_val, y_val)], early_stopping_rounds=EARLY_STOP_NUM)\ny_pred = xgb_reg.predict(X_val)\nval_error = mean_squared_error(y_val, y_pred,squared=False)  \nprint(\"Validation RMSE:\", val_error)   ","8f318c4e":"pred_test = xgb_reg.predict(X_test)\npred_test[:5]","94d15d3c":"# build model","739460b6":"# predict","2b382e50":"# variables","2bec5de1":"# imports","3535bb37":"# load"}}