{"cell_type":{"79004b4a":"code","e8f37722":"code","5a1dc0c5":"code","281288a6":"code","6e95a397":"code","e7a73bd8":"code","12d288e5":"code","7e5e1da3":"code","9bc53869":"code","a0c72214":"code","10fbd3ad":"code","3f2925a2":"code","42962d77":"code","8d2d3e9c":"code","1fb11252":"code","d2d9efad":"code","b3ee6d62":"code","fd2e8328":"code","94f2dd72":"code","15f9dfa1":"markdown","63a3100c":"markdown","db1bd02f":"markdown","fa1c9bb3":"markdown","d2280bdd":"markdown","47e950bb":"markdown","89085fd6":"markdown","f9ddb88f":"markdown"},"source":{"79004b4a":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt","e8f37722":"## loading datasets\nanime_df = pd.read_csv('..\/input\/anime-recommendations-database\/anime.csv')\nanime_df.head()","5a1dc0c5":"rating_df = pd.read_csv('..\/input\/anime-recommendations-database\/rating.csv')","281288a6":"rating_df.head()","6e95a397":"anime_df.describe()","e7a73bd8":"times_rated = rating_df.groupby(['anime_id'])['rating'].count()\ntimes_rated = times_rated.rename('times_rated')","12d288e5":"times_rated.describe()","7e5e1da3":"rating_df = rating_df.merge(times_rated,on='anime_id')","9bc53869":"## selecting top 50% rated animes\nrating_df_top50 = rating_df[rating_df['times_rated']>51]","a0c72214":"rating_df_top50[['rating','times_rated']].describe()","10fbd3ad":"anime_rating_df = anime_df.merge(rating_df_top50,on='anime_id')","3f2925a2":"anime_rating_df.head()","42962d77":"anime_pivot_df = pd.pivot_table(index='name',columns='user_id',values='rating_y', data=anime_rating_df)\n\nanime_pivot_df.fillna(value=0,inplace=True)","8d2d3e9c":"anime_pivot_df.head()","1fb11252":"from scipy.sparse import csr_matrix\nanime_mat = csr_matrix(anime_pivot_df.values)","d2d9efad":"from sklearn.neighbors import NearestNeighbors\nanime_nbrs = NearestNeighbors(metric='cosine', algorithm='auto').fit(anime_mat)\ndistances, indices = anime_nbrs.kneighbors(anime_mat)","b3ee6d62":"## creating list for anime names\nanime_names = list(anime_pivot_df.index)","fd2e8328":"kimi_no_nawa_index = anime_names.index('Kimi no Na wa.')\ndistances, indices = anime_nbrs.kneighbors(anime_pivot_df.iloc[kimi_no_nawa_index,:].values.reshape(1,-1),n_neighbors=6)","94f2dd72":"indices_flat, distances_flat = indices.flatten(),distances.flatten()\nfor index,anime_index in enumerate(indices_flat):\n    anime_name = anime_names[anime_index]\n    if(index == 0): \n        print(f'Animes similar to {anime_name}:')\n    else:\n        print(f'\\t {anime_name} with score ---> {distances_flat[index]}')","15f9dfa1":"## Selecting my favorite Anime *'Kimi no Na wa.'*","63a3100c":"## Computing the number of times each anime was rated","db1bd02f":"## Converting the dataframe to sparse matrix for modelling","fa1c9bb3":"## Getting know the dataset better","d2280bdd":"So every anime was rated atleast one time, or it could be a placeholder as well, and on average an anime is rated around 700 times","47e950bb":"## Adding the times rated info to rating dataframe & combining with anime dataframe","89085fd6":"So we have around 13K animes that are part of the dataset, however it seems like there are couple hundred animes that went unrated, and we have a average rating around ~6.5","f9ddb88f":"## Using Cosine Similarity Nearest Neighbors for Clustering Similar Animes\n![Screenshot%202020-01-03%20at%204.48.14%20PM.png](attachment:Screenshot%202020-01-03%20at%204.48.14%20PM.png)\n\nHere each movie is a vector, and we find the similarity between each movies then cluster the similar together for \nrecommendations"}}