{"cell_type":{"d75eb747":"code","6c750394":"code","bfd022cd":"code","34207699":"code","c51c500f":"code","858e00e3":"code","fefd6c74":"code","f2f56206":"code","fb072edf":"code","ad07439d":"code","b712e729":"markdown","c9e90449":"markdown","e13240de":"markdown","7def454f":"markdown","42dc72aa":"markdown","90f9e617":"markdown","2e16329a":"markdown","5a80dceb":"markdown","5dbd8c5d":"markdown","e0f0a50f":"markdown","266db618":"markdown"},"source":{"d75eb747":"from scipy.stats import ttest_ind\nimport numpy as np\n\ndf1 = np.random.normal(20, 1, 23)\ndf2 = np.random.normal(20.8, 1, 23)\n\nstat, p = ttest_ind(df1, df2)\n\nprint(f\"T-Statistic: {stat:.2f}\\np-value: {p:.3f}\")","6c750394":"pooled_std = np.sqrt((df1.std()**2 + df2.std()**2)\/2)\ncohens = (np.mean(df2) - np.mean(df1)) \/ pooled_std\nprint(f\"Cohen's d: {cohens}\")","bfd022cd":"from statsmodels.stats.power import TTestIndPower\n\nsolver = TTestIndPower()\n\npower = 0.8\nalpha = 0.05\n\nmin_effect_size = solver.solve_power(effect_size=None, power=power, alpha=alpha, nobs1=23, ratio=1)\nprint(f\"Minimum effect size detectable at a = {alpha}, power = {power}, 23 observations: {min_effect_size:.4f}\")","34207699":"min_samples = solver.solve_power(effect_size=cohens, nobs1=None, alpha=alpha, power=power, ratio=1)\n\nprint(f\"Minimum number of observations per sample: {np.ceil(min_samples):.0f}\")","c51c500f":"df1 = np.random.normal(20, 1, 30)\ndf2 = np.random.normal(20.8, 1, 30)\n\nstat, p = ttest_ind(df1, df2)\nprint(f\"T-Statistic: {stat:.2f}\\np-value: {p:.3f}\")\n\npooled_std = np.sqrt((df1.std()**2 + df2.std()**2)\/2)\ncohens = (np.mean(df2) - np.mean(df1)) \/ pooled_std\nprint(f\"Cohen's d: {cohens}\")\n\nmin_effect_size = solver.solve_power(effect_size=None, power=power, alpha=alpha, nobs1=len(df1), ratio=1)\nprint(f\"Minimum effect size detectable at a = {alpha}, power = {power}, {len(df1)} observations: {min_effect_size:.4f}\")","858e00e3":"from scipy.stats import ttest_rel\nfrom statsmodels.stats.power import TTestPower\n\nsolver = TTestPower()\n\n# Draw initial sample of size 18\ndf1 = np.random.normal(20, 1, 18)\ndf2 = df1 + np.random.normal(0.6, 0.7, 18)\n\n# decide type 1 and 2 error tolerances\npower = 0.9\nalpha = 0.05\n\n# calculate difference of two initial samples, calculate minimum samples\npooled_std = np.sqrt((df1.std()**2 + df2.std()**2)\/2)\ncohens = (np.mean(df2) - np.mean(df1)) \/ pooled_std\nmin_samples = int(np.ceil(solver.solve_power(effect_size=cohens, nobs=None, alpha=alpha, power=power))) + 1\n\n# draw number of samples required for the ttest\n# this might be p-hacking,\ndf1 = np.random.normal(20, 1, min_samples)\ndf2 = df1 + np.random.normal(0.6, 0.7, min_samples)\n\n# calculate the new cohens\npooled_std = np.sqrt((df1.std()**2 + df2.std()**2)\/2)\ncohens = (np.mean(df2) - np.mean(df1)) \/ pooled_std\n\n# do the test\nstat, p = ttest_rel(df1, df2)\nmin_effect_size = solver.solve_power(effect_size=None, power=power, alpha=alpha, nobs=len(df1))\nprint(f\"Minimum effect size detectable at a = {alpha}, power = {power}, {len(df1)} observations: {min_effect_size:.4f}\")\nprint(f\"Cohen's d: {cohens}\")\nprint(f\"T-Statistic: {stat:.2f}\\np-value: {p:.3f}\")","fefd6c74":"from scipy.stats import ttest_1samp\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nstat, p = ttest_1samp(np.random.normal(3.1, 1, 8), 3)\n\nprint(f\"T-Statistic: {stat:.2f}\\np-value: {p:.3f}\")","f2f56206":"from scipy.stats import f_oneway\n\ndf1 = np.random.normal(20, 1, 23)\ndf2 = np.random.normal(20.2, 1, 23)\ndf3 = np.random.normal(19.8, 1, 23)\ndf4 = np.random.normal(20.3, 1, 23)\n\nstat, p = f_oneway(df1, df2, df3, df4)\n\nprint(f\"Statistic: {stat:.2f}\\np-value: {p:.3f}\")","fb072edf":"from statsmodels.stats.anova import AnovaRM\nimport pandas as pd\n\ndf1 = np.random.normal(20, 1, 23)\ndf2 = df1 + np.random.normal(0.6, 0.7, 23)\ndf3 = df1 + np.random.normal(0.1, 0.3, 23)\n\ntogether = np.concatenate([df1, df2, df3])\nd_from = [[i]*23 for i in range(3)]\nd_from = d_from[0] + d_from[1] + d_from[2]\npatient = list(range(23)) * 3\n\ndf = pd.DataFrame({\"drug\":d_from, \"patient\":patient, \"effect\":together})\ndf","ad07439d":"print(AnovaRM(df, \"effect\", \"patient\", within=[\"drug\"]).fit())","b712e729":"One-sample","c9e90449":"Redoing experiment with new samples, n = 30","e13240de":"### Analysis of Variance Test (ANOVA)  \n\nAssumptions:\n- Normally distributed\n- Homogeneous variance\n\nNull hypothesis: The means of samples are equal  ","7def454f":"Paired","42dc72aa":"Unpaired","90f9e617":"Minimum sample size","2e16329a":"### Student's t-test  \n\nAssumptions:\n- Normally distributed\n- Homogeneous variance\n\nNull hypothesis: The means of two samples are equal  ","5a80dceb":"Calculating effect size","5dbd8c5d":"Paired","e0f0a50f":"Minimum detectable effect size","266db618":"Unpaired"}}