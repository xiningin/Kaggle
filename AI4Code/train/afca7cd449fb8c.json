{"cell_type":{"ec428967":"code","a0810069":"code","5d080fa0":"code","7beb81d9":"code","bc2473fc":"code","c9fa9542":"code","879cd419":"code","d8b3a8a5":"code","a9e57118":"markdown"},"source":{"ec428967":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0810069":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\nf64 = train.query('date==0')['feature_64'].values","5d080fa0":"def utility_score_bincount(date, weight, resp, action):\n    count_i = len(np.unique(date))\n    Pi = np.bincount(date, weight * resp * action)\n    t = np.sum(Pi) \/ np.sqrt(np.sum(Pi ** 2)) * np.sqrt(250 \/ count_i)\n    u = np.clip(t, 0, 6) * np.sum(Pi)\n    return u","7beb81d9":"from sklearn.preprocessing import MinMaxScaler","bc2473fc":"f64_scaler = MinMaxScaler((0,1)).fit(f64.reshape((-1,1)))","c9fa9542":"def predict(f0,f64,th=0.2):\n    f64 = f64_scaler.transform(f64).ravel()\n    return np.where(f64 < th,1,0) * np.where(f0 < 0,1,0) + np.where(f64 > 1-th,1,0) * np.where(f0 > 0,1,0)","879cd419":"#tuning threshold\nbest_th = 0.5\nbest_us = 0\nfor th in np.linspace(0,1,100):\n    action = predict(train['feature_0'].values,train['feature_64'].values.reshape((-1,1)),th)\n    us = utility_score_bincount(train['date'].values,train['weight'].values,train['resp'].values,action)\n    if us > best_us:\n        best_us = us\n        best_th = th\nbest_th, best_us","d8b3a8a5":"import janestreet\nfrom tqdm import tqdm\njanestreet.competition.make_env.__called__ = False\nenv = janestreet.make_env()\nfor (test_df, pred_df) in tqdm(env.iter_test()):\n    \n    f64 = test_df['feature_64'].item()\n    f0 = test_df['feature_0'].item()\n    \n    f64 = np.asarray([[f64]])\n    pred_df.action = predict(f0,f64,best_th)\n    \n    env.predict(pred_df)","a9e57118":"See https:\/\/www.cnbc.com\/2015\/10\/14\/want-to-beat-the-market-sell-at-10-am-play-golf.html"}}