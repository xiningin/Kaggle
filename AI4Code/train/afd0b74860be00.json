{"cell_type":{"692adf11":"code","a0297fc8":"code","3586f9ef":"code","b9831891":"code","488a35ae":"code","938947d5":"code","74d07d3e":"code","218022cc":"code","31d4097c":"code","429156ad":"code","f2be0ff3":"code","218dfa11":"code","ca071cc6":"code","cf3d525b":"code","95873c58":"code","9ef4e7db":"code","494704e9":"code","a994b7e8":"code","e97aa7d1":"code","d0155ee9":"code","048db211":"code","c4e7c002":"code","c68a291f":"code","d43574fa":"code","79e96630":"code","18704a9a":"code","354635bc":"code","bac76803":"code","8175dbe9":"code","65ad0eaa":"code","814c0633":"code","228a01aa":"code","a53b4f3c":"code","3e47ab3e":"code","90107ef2":"code","301dc203":"markdown","f694dfdf":"markdown","43fa5663":"markdown","e9f861aa":"markdown","cf4fc023":"markdown","455c9533":"markdown","936d7a53":"markdown","4037f1b2":"markdown","71a513a4":"markdown","7f31c291":"markdown","8505352e":"markdown","ac2f5973":"markdown","72ad6123":"markdown","9fc21b5a":"markdown","c7295ebb":"markdown","148ce6bb":"markdown","dc987181":"markdown","86b51afa":"markdown","eb529fd5":"markdown","9edac13b":"markdown","54e93912":"markdown","1e725c8a":"markdown","d5d47275":"markdown","8c792def":"markdown","7d5643dc":"markdown","a4c417cf":"markdown","28930675":"markdown","03aacd6a":"markdown","aff25c75":"markdown","2990bcfb":"markdown","d1f42ef4":"markdown","2e23dc53":"markdown","909017d8":"markdown"},"source":{"692adf11":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0297fc8":"#Installing required libraries\n!pip install jupyterthemes==0.16.1","3586f9ef":"#Library\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n# !pip install jupyterthemes==0.16.1 Install this before runing this cell\nfrom jupyterthemes import jtplot\njtplot.style(theme='onedork')\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\n\n%matplotlib inline","b9831891":"#Load haberman.csv into pandas dataframe\ndf = pd.read_csv('\/kaggle\/input\/habermans-survival-data-set\/haberman.csv')\ndf.head(8)","488a35ae":"#ref: https:\/\/stackoverflow.com\/questions\/31645466\/give-column-name-when-read-csv-file-pandas\n#Naming the Columns according to given description\ncol_names = [\"age\",\"Operating_year\",\"axillary_nodes\",\"Survival_status\"]\nhaberman = pd.read_csv('\/kaggle\/input\/habermans-survival-data-set\/haberman.csv', names = col_names, header = None)\nhaberman.head(8)","938947d5":"#Cross Checking the Column names in dataset\nhaberman.columns","74d07d3e":"#Data points and Features \nhaberman.shape","218022cc":"#Concise Summary of the DataFrame\nhaberman.info()","31d4097c":"#Statistical Summary of DataFrame\nhaberman.describe()","429156ad":"#Missing Values\nhaberman.isna().sum()","f2be0ff3":"#Checking Wheather this dataset has Duplicate Values or not\nsum(haberman.duplicated())","218dfa11":"#Replacing 1 and 2 by Yes and No\nhaberman['Survival_status'].replace(to_replace = [1,2], value = ['Yes', 'No'], inplace=True)\nhaberman.sample(8)","ca071cc6":"#Number of patient survived after 5 years\nhaberman['Survival_status'].value_counts()","cf3d525b":"#Number of Distinct Observation \nhaberman.nunique()","95873c58":"#DataFrame for Duplicate Values\nhaberman_duplicated = haberman[haberman.duplicated()]\nhaberman_duplicated","9ef4e7db":"#Cross Checking\nhaberman[haberman['axillary_nodes'] == 11]","494704e9":"#Droping Duplicates\nhaberman_cleaned = haberman.drop_duplicates()\nhaberman_cleaned.sample(3)","a994b7e8":"sum(haberman_cleaned.duplicated())","e97aa7d1":"#Statistical Summary of Cleaned DataFrame\nhaberman_cleaned.describe()","d0155ee9":"#Number of patient survived after 5 years in cleaned dataset\nhaberman_cleaned['Survival_status'].value_counts()","048db211":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'age');\nplt.title('Age');","c4e7c002":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'Operating_year');\nplt.title('Patient\\'s year of operation');","c68a291f":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'axillary_nodes');\nplt.title('Number of positive axillary nodes detected');","d43574fa":"plt.subplots(figsize = (10,5));\nsns.countplot(data = haberman_cleaned, x = 'Survival_status');\nplt.title('Survival status');","79e96630":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'age', hue = 'Survival_status');\nplt.legend(loc='upper right');\nplt.title('Age Vs Survival status');","18704a9a":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'Operating_year', hue = 'Survival_status');\nplt.legend(loc='upper right');\nplt.title('Patient\\'s year of operation Vs Survival status');","354635bc":"plt.subplots(figsize = (14,7));\nplt.xticks(rotation=90);\nsns.countplot(data = haberman_cleaned, x = 'axillary_nodes', hue = 'Survival_status');\nplt.legend(loc='upper right');\nplt.title('Number of positive axillary nodes detected Vs Survival status');","bac76803":"sns.pairplot(haberman_cleaned, hue = 'Survival_status', markers=[\"D\", \"o\"], height=4);\nplt.show()","8175dbe9":"sns.FacetGrid(haberman_cleaned, hue=\"Survival_status\", height = 8).map(sns.distplot, \"age\");\nplt.legend(loc='upper right');\nplt.show();","65ad0eaa":"sns.FacetGrid(haberman_cleaned, hue=\"Survival_status\", height = 8).map(sns.distplot, \"Operating_year\");\nplt.legend(loc='upper right');\nplt.show();","814c0633":"sns.FacetGrid(haberman_cleaned, hue=\"Survival_status\", height = 8).map(sns.distplot, \"axillary_nodes\");\nplt.legend(loc='upper right');\nplt.show();","228a01aa":"#creating cdf and pdf\nhaberman_cleaned_yes = haberman_cleaned.loc[haberman_cleaned['Survival_status'] == 'Yes']\nhaberman_cleaned_no = haberman_cleaned.loc[haberman_cleaned['Survival_status'] == 'No']","a53b4f3c":"counts, bin_edges = np.histogram(haberman_cleaned_yes['age'], bins=10, density = True)\npdf = counts\/(sum(counts))\n#print(pdf);\n#print(bin_edges);\ncdf = np.cumsum(pdf)\nplt.subplots(figsize = (14,7));\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(haberman_cleaned_no['age'], bins=10, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\nlabel = ['PDF for Yes', 'CDF for No', 'PDF for No', 'CDF for NO']\nplt.legend(label);\n\nplt.xlabel('Age');\nplt.ylabel('Percentage of People');\nplt.title(label = 'PDF and CDF for Age', fontsize=18);","3e47ab3e":"counts, bin_edges = np.histogram(haberman_cleaned_yes['Operating_year'], bins=10, density = True)\npdf = counts\/(sum(counts))\n#print(pdf);\n#print(bin_edges);\ncdf = np.cumsum(pdf)\nplt.subplots(figsize = (14,7));\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(haberman_cleaned_no['Operating_year'], bins=10, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\nlabel = ['PDF for Yes', 'CDF for No', 'PDF for No', 'CDF for NO']\nplt.legend(label);\n\nplt.xlabel('Patient\\'s year of operation');\nplt.ylabel('Percentage of People');\nplt.title(label = 'PDF and CDF for Patient\\'s year of operation', fontsize=18);","90107ef2":"counts, bin_edges = np.histogram(haberman_cleaned_yes['axillary_nodes'], bins=10, density = True)\npdf = counts\/(sum(counts))\n#print(pdf);\n#print(bin_edges);\ncdf = np.cumsum(pdf)\nplt.subplots(figsize = (14,7));\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(haberman_cleaned_no['axillary_nodes'], bins=10, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf);\n\nlabel = ['PDF for Yes', 'CDF for No', 'PDF for No', 'CDF for NO']\nplt.legend(label);\n\nplt.xlabel('Patient\\'s year of operation');\nplt.ylabel('Number of positive axillary nodes detected');\nplt.title(label = 'PDF and CDF for Number of positive axillary nodes detected', fontsize=18);","301dc203":"#### **Number of positive axillary nodes detected Vs Survival status**","f694dfdf":"#### **Patient\\'s year of operation Vs Survival status**","43fa5663":"# **Data Cleaning:**","e9f861aa":"#### **Observation:**\n* There are around 80% of data point have age value less than 70 years.","cf4fc023":"## **Objective** - Survival of Patients who had undergone Surgery for Breast Cancer","455c9533":"#### **Observation:**\n* There are more number of patients who survived than not survived. ","936d7a53":"#### **Observation:**\n* The Dataset is still imbalanced after Data Cleaning.\n* In this dataset the main features are **'age'** and **'axillary nodes'** by defintion.","4037f1b2":"#### **Observation:**\n* There are no missing values.\n* The Data is Imbalanced Dataset.\n* There are 17 duplicated values.","71a513a4":"#### **Observation:**\n* There are around 80% of data point have operation year value less than 66 years.","7f31c291":"#### **Age Vs Survival status**","8505352e":"#### **Observation:**\n* Maximum time we don't find any positive axillary node.\n* If we find any positive axillary node maximum number of them are 1.\n* The Maximmu Number of axillary node we find is 52.","ac2f5973":"#### **Pair Plot**","72ad6123":"#### **Observation:**\n* Before starting we have to add Column names to this data because we have only numericals.","9fc21b5a":"# **Data Wrangling:**\n#### **General Properties**","c7295ebb":"#### **Observation:**\n* The Patients who don't have any positive axillary node are the maximum number patients who are survived.","148ce6bb":"#### **Observation:**\n* Major overlapping is present, so we cannot say about dependency of Patient's year of operation on survival.","dc987181":"## **PDF and CDF**","86b51afa":"#### **Age**","eb529fd5":"### **Haberman Dataset**\n\n* Number of Instances: 306\n* Number of Attributes: 4 \n    * Age of patient at time of operation (numerical)\n    * Patient's year of operation (year - 1900, numerical)\n    * Number of positive axillary nodes detected (numerical)\n    * Survival status (class attribute)\n      * 1 = the patient survived 5 years or longer\n      * 2 = the patient died within 5 year","9edac13b":"#### **Observation:**\n* Number of Patients survived more in 38 - 70 age group.  \n* The maximum patients are not survived are from 53 age group after that 46, 52, 54 and 66 age group peoples.","54e93912":"#### **Survival status**","1e725c8a":"### **Plot PDF and CDF for Patient's year of operation**","d5d47275":"## **Univariate Exploration**","8c792def":"#### **Observation:**\n* The Age is between 30 to 83.\n* There are maximum of people from 52 age group.\n* There are only 1 person from 75,76,77,78 and 83.\n* In this the patients are majorly from 40 to 65.","7d5643dc":"#### **Observation:**\n* Major overlapping is present, so we cannot say about dependency of age on survival.\n* Patients age 20\u201350 have a slightly higher rate of survival and patients age 75\u201390 have a lower rate of survival.","a4c417cf":"### **Plot PDF and CDF for Age**","28930675":"### **Plot PDF and CDF for Number of positive axillary nodes detected**","03aacd6a":"## **Bivariate Exploration**","aff25c75":"#### **Patient's year of operation**","2990bcfb":"#### **Number of positive axillary nodes detected**","d1f42ef4":"# **Exploratory Data Analysis**","2e23dc53":"#### **Observation:**\n* There are more than 90% data point have axillary nodes value less than 10 axillary nodes.","909017d8":"#### **Observation:**\n* Patients with 0 nodes have a high probability of survival than with nodes."}}