{"cell_type":{"d13e6501":"code","4bd26b08":"code","5fc4db7e":"code","2cf4304d":"code","1ce1b9b4":"code","98eeab70":"code","d427604e":"code","dcfc2945":"code","5b8e4732":"code","63407abd":"code","4ca32131":"code","d33183c5":"code","3fec4f65":"code","da8ee95e":"code","f119f176":"code","511181c3":"code","028b3697":"markdown","4242728d":"markdown","89cd8f68":"markdown","4999e0c0":"markdown","42dc3fae":"markdown","3b213e1a":"markdown","f59a26ba":"markdown","8a887f56":"markdown"},"source":{"d13e6501":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4bd26b08":"import os\nimport matplotlib.pyplot as plt\nfrom IPython.display import Image, display\nimport random\nimport math\n\nimport tensorflow as tf\nfrom keras.preprocessing.image import load_img,img_to_array,ImageDataGenerator\nfrom tensorflow.keras.models import Model, Sequential\nfrom tensorflow.keras.utils import plot_model \nfrom tensorflow.keras.layers import Input, Dense, Dropout, Flatten, Activation,Concatenate\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, AveragePooling2D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.utils import to_categorical \nfrom tensorflow.keras.optimizers import Adam, SGD\nfrom tensorflow.keras.callbacks import EarlyStopping, LearningRateScheduler, ReduceLROnPlateau\nfrom tensorflow.keras import backend, models\nfrom sklearn.metrics import confusion_matrix\n\nfrom tensorflow.keras.applications import VGG16, MobileNet\nfrom keras.applications.vgg16 import preprocess_input","5fc4db7e":"image_size = (224, 224)\n\ntrain_path = '..\/input\/100-bird-species\/birds\/train'\nvalid_path = '..\/input\/100-bird-species\/birds\/valid'\ntest_path = '..\/input\/100-bird-species\/birds\/test'","2cf4304d":"default_datagen = ImageDataGenerator(rescale=1.\/255)","1ce1b9b4":"augmentation_datagen = ImageDataGenerator(rescale=1.\/255, \n                                          rotation_range=20,\n                                          width_shift_range=0.2,\n                                          height_shift_range=0.2,\n                                          zoom_range=0.2,\n                                          horizontal_flip=True,\n                                          fill_mode='nearest') ","98eeab70":"train_data = augmentation_datagen.flow_from_directory(train_path,\n                                                      target_size=image_size)","d427604e":"validation_data = default_datagen.flow_from_directory(valid_path,\n                                                      target_size=image_size)","dcfc2945":"test_data = default_datagen.flow_from_directory(test_path, \n                                                target_size=image_size)","5b8e4732":"train_dataset = tf.keras.preprocessing.image_dataset_from_directory(train_path)\nclass_names = train_dataset.class_names\n\nplt.figure(figsize=(12, 12))\nfor images, labels in train_dataset.take(1):\n  for i in range(9):\n    ax = plt.subplot(3, 3, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(class_names[labels[i]])\n    plt.axis(\"off\")","63407abd":"base_mobilenet = MobileNet(weights = 'imagenet',\n                           include_top = False,\n                           input_shape = (224,224,3))","4ca32131":"base_mobilenet.trainable = False ","d33183c5":"model = Sequential()\n# We add the base model as a new layer\nmodel.add(base_mobilenet)\nmodel.add(Flatten()) \nmodel.add(Activation('relu'))\n# 275 - number of classes\nmodel.add(Dense(275)) \nmodel.add(Activation('softmax'))","3fec4f65":"model.summary()","da8ee95e":"# we want our learning rate to be adaptive\nopt = tf.keras.optimizers.SGD(lr=0.001,\n                              momentum=0.6,\n                              nesterov=True)\n\nmodel.compile(optimizer = opt,\n              loss = 'categorical_crossentropy',\n              metrics = ['accuracy'])","f119f176":"history = model.fit(\n    train_data, \n    steps_per_epoch = 600, \n    epochs = 12,\n    validation_data = validation_data,\n    validation_steps = 32,\n    verbose = 1,\n    callbacks=[EarlyStopping(monitor='val_accuracy',\n                             patience=3,\n                             restore_best_weights=True),\n               ReduceLROnPlateau(monitor='val_loss',\n                                 factor=0.7,\n                                 patience=2,\n                                 verbose=1)]\n) ","511181c3":"model.evaluate(test_data)","028b3697":"****Now we will use a base model with weights pretrained on Imagenet****","4242728d":"The time of fiting was long enough but the validation accuracy was worth it","89cd8f68":"****Let's create Tenosrflow datasets****","4999e0c0":"We will use diffirent Image Generators because we want to apply Data Augmentation techniques only to training dataset. This techniques are used in order to decrease overfiting of neural networks","42dc3fae":"Accuracy **94.4%** on test data is a high result. Given the fact that this neural network is the first in my life, I guess I've got the right be glad. If someone has feedback or some pieces of advice I'll be glad to hear from you","3b213e1a":"Now let's check the updated model summary. You can see the new layers from below. This layers add 13.8 million of new parametrs to train.","f59a26ba":"Let's freeze the weights of our base model","8a887f56":"Let's have a look at and some random bird's species and their bird species bird species photos"}}