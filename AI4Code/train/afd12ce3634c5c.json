{"cell_type":{"b29f2630":"code","4316bf25":"code","f53938bf":"code","29c70945":"code","e0f9d707":"code","6690635d":"code","90db52e8":"markdown","f3312287":"markdown"},"source":{"b29f2630":"%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\nfrom pathlib import Path\nfrom skimage.io import imread\nfrom skimage.color import label2rgb\nplt.rcParams[\"figure.figsize\"] = (8, 8)\nplt.rcParams[\"figure.dpi\"] = 125\nplt.rcParams[\"font.size\"] = 14\nplt.rcParams['font.family'] = ['sans-serif']\nplt.rcParams['font.sans-serif'] = ['DejaVu Sans']\nplt.style.use('ggplot')\nsns.set_style(\"whitegrid\", {'axes.grid': False})\nmalaria_dir = Path('..\/input\/malaria\/malaria\/')","4316bf25":"train_df = pd.read_json(malaria_dir \/ 'training.json')\ntrain_df['path'] = train_df['image'].map(lambda x: malaria_dir \/ x['pathname'][1:])\ntrain_df['image_available'] = train_df['path'].map(lambda x: x.exists())\nprint(train_df.shape[0], 'images')\ntrain_df = train_df.query('image_available')\nprint(train_df.shape[0], 'images available')\ntrain_df.sample(5)","f53938bf":"object_df = pd.DataFrame([dict(image=c_row['path'], **c_item) for _, c_row in train_df.iterrows() for c_item in c_row['objects']])\ncat_dict = {v:k for k,v in enumerate(object_df['category'].value_counts().index, 1)}\nprint(object_df['category'].value_counts())\nobject_df.sample(3)","29c70945":"test_row = train_df.iloc[0]\ndef show_image_boxes(in_row, ax=None):\n    \"\"\"Show a row with bounding boxes\"\"\"\n    if ax is None:\n        fig, ax = plt.subplots(1, 1, figsize=(10, 10))\n    c_img = imread(in_row['path'])\n    lab_img = np.zeros((c_img.shape[0], c_img.shape[1]), dtype='int')\n    for c_obj in in_row['objects']:\n        min_val = c_obj['bounding_box']['minimum']\n        max_val = c_obj['bounding_box']['maximum']\n        lab_id = cat_dict.get(c_obj['category'], 20)\n        lab_img[slice(min_val['r'], max_val['r']), slice(min_val['c'], max_val['c'])] = lab_id\n    ax.imshow(label2rgb(label=lab_img, image=c_img, bg_label=0))\nshow_image_boxes(test_row)","e0f9d707":"fig, m_axs = plt.subplots(3, 3, figsize=(30, 30))\nvalid_img_list = object_df.groupby('category').apply(lambda x: x.sample(2)).reset_index(drop=True)['image'].values.tolist()\nfor c_ax, (_, c_row) in zip(m_axs.flatten(), train_df[train_df['path'].isin(valid_img_list)].iterrows()):\n    show_image_boxes(c_row, ax=c_ax)","6690635d":"fig.savefig('overlay_figure.png')","90db52e8":"# Load and Preview\nHere we can load and preview a single row","f3312287":"### Object Breakdown\nWe can breakdown by the counts of various objects"}}