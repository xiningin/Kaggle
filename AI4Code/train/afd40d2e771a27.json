{"cell_type":{"555b19af":"code","972cedd3":"code","8da048f1":"code","11e5c65f":"code","44d40b23":"code","b549563a":"code","d737bf39":"code","38018e92":"code","842383f7":"code","9f6f8e88":"code","975a6501":"code","1b1db3e3":"code","3310dde8":"code","a3c9a4c2":"code","40f9d75a":"code","98fdc42b":"code","1135a1de":"code","3d4494fb":"code","ba6c70c3":"code","4bcc5785":"code","74c9914a":"code","c6811736":"code","7740ce47":"code","36a17281":"markdown","04daf3fc":"markdown","0a096322":"markdown","5ef9c683":"markdown","cbcbe25b":"markdown","3b250873":"markdown","1a374c74":"markdown","39f1cd47":"markdown","dd9e4ce4":"markdown","267eea03":"markdown","da72e958":"markdown","6309d2e1":"markdown","4c52fa28":"markdown","ceaf687a":"markdown","17ec4cce":"markdown","38f18f2a":"markdown","9db0cab3":"markdown","b32674b8":"markdown","d26da512":"markdown","a55f4d8e":"markdown","2fd34df7":"markdown","61001a8e":"markdown","e5ccafc0":"markdown","5dcdd5c5":"markdown"},"source":{"555b19af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nimport itertools\nimport matplotlib.pyplot as plt\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')\nimport statsmodels.api as sm\nimport matplotlib\nimport datetime\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","972cedd3":"## Data Loading\nfile_path = '..\/input\/iowa-liquor-sales\/Iowa_Liquor_Sales.csv'\ndf = pd.read_csv(file_path)","8da048f1":"print(df.shape)\nprint(df.columns)\ndf.head()","11e5c65f":"df['Sale (Dollars)'] = df['Sale (Dollars)'].str.replace('$', '')\ndf['Sale (Dollars)'] = df['Sale (Dollars)'].astype('float')\ndf['Date'] = pd.to_datetime(df['Date'])\ndf['Date'].head(), df['Sale (Dollars)'].head()","44d40b23":"## Data Preprocessing\nJBB = df.loc[df['Vendor Name'] == 'Jim Beam Brands']\ncols = ['Invoice\/Item Number', 'Store Number', 'Store Name', 'Address', 'City', 'Zip Code',\n       'Store Location', 'County Number', 'County', 'Category', 'Category Name', 'Vendor Number',\n       'Vendor Name', 'Item Number', 'Item Description', 'Pack', 'Bottle Volume (ml)', 'State Bottle Cost',\n        'State Bottle Retail', 'Bottles Sold', 'Volume Sold (Liters)', 'Volume Sold (Gallons)']\nJBB.drop(cols, axis = 1, inplace = True)\nJBB.isnull().sum()\n\nJBB = JBB.groupby('Date')['Sale (Dollars)'].sum().reset_index()\nJBB = JBB.set_index('Date')\nJBB.index\n","b549563a":"## Time Series Analysis\nJBB.head()\ny = JBB['Sale (Dollars)'].resample('MS').mean()\ny['2016':].describe()\ny.plot()","d737bf39":"from pylab import rcParams\nrcParams['figure.figsize'] = 18,8\ndecomposition = sm.tsa.seasonal_decompose(y, model = 'additive')\nfig = decomposition.plot()\n","38018e92":"# Parameter Tuning\np = d = q = range(0, 2)\npdq = list(itertools.product(p, d, q))\nseasonal_pdq = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]\n\n\nfor param in pdq:\n    for param_seasonal in seasonal_pdq:\n        try:\n            mod = sm.tsa.statespace.SARIMAX(y,\n                                            order=param,\n                                            seasonal_order=param_seasonal,\n                                            enforce_stationarity=False,\n                                            enforce_invertibility=False)\n            results = mod.fit()\n            print('ARIMA{}x{}12 - AIC:{}'.format(param, param_seasonal, results.aic))\n\n        except:\n            continue\n","842383f7":"# Fitting Model\nmod = sm.tsa.statespace.SARIMAX(y,\n                                order = (0,1,1),\n                                seasonal_order = (0,1,1,12),\n                                enforce_stationarity = False,\n                                enforce_invertibility = False)\n\nresults = mod.fit()\nprint(results.summary().tables[1])\n\nresults.plot_diagnostics(figsize = (16,8))","9f6f8e88":"# Validation\npred = results.get_prediction(start=pd.to_datetime('2016-11-01'), dynamic=False)\npred_ci = pred.conf_int()\nax = y['2014':].plot(label='observed')\npred.predicted_mean.plot(ax=ax, label='One-step ahead Forecast', alpha=.7, figsize=(14, 7))\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.2)\n\n\nax.set_xlabel('Date')\nax.set_ylabel('Sales')\nplt.legend()","975a6501":"y_forecasted = pred.predicted_mean\ny_truth = y['2014-01-01':]\nmse = ((y_forecasted - y_truth) ** 2).mean()\nprint('The Mean Squared Error of our forecasts is {}'.format(round(mse, 2)))\nprint('The Root Mean Squared Error of our forecasts is {}'.format(round(np.sqrt(mse), 2)))","1b1db3e3":"# Forecasting\npred_uc = results.get_forecast(steps=30)\npred_ci = pred_uc.conf_int()\nax = y.plot(label='observed', figsize=(14, 7))\npred_uc.predicted_mean.plot(ax=ax, label='Forecast')\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.25)\n\nax.set_xlabel('Date')\nax.set_ylabel('Sales ($)')\nax.set_title('Jim Beam')\nplt.legend()","3310dde8":"## Comparing Vendor\/Brands\ndf['Vendor Name'].drop_duplicates().values\nWDL = df.loc[df['Vendor Name'] == 'Wilson Daniels Ltd.']\nJBB = df.loc[df['Vendor Name'] == 'Jim Beam Brands']\n\nJBB.drop(cols, axis = 1, inplace = True)\nWDL.drop(cols, axis = 1, inplace = True)\nJBB.isnull().sum()\nWDL.isnull().sum()\n\nJBB = JBB.groupby('Date')['Sale (Dollars)'].sum().reset_index()\nWDL = WDL.groupby('Date')['Sale (Dollars)'].sum().reset_index()\nJBB = JBB.set_index('Date')\nWDL = WDL.set_index('Date')\nJBB.index\nWDL.index","a3c9a4c2":"y_JBB = JBB['Sale (Dollars)'].resample('MS').mean()\ny_WDL = WDL['Sale (Dollars)'].resample('MS').mean()\nJBB = pd.DataFrame({'Date': y_JBB.index, 'Sale (Dollars)': y_JBB.values})\nWDL = pd.DataFrame({'Date': y_WDL.index, 'Sale (Dollars)': y_WDL.values})\n\nvendor = JBB.merge(WDL, how = 'inner', on = 'Date')\nvendor.rename(columns = {'Sale (Dollars)_x': 'Jim Beam Sales', 'Sale (Dollars)_y': 'Wilson Daniels Ltd Sales'}, inplace = True)\nvendor.head()","40f9d75a":"plt.figure(figsize=(20,8))\nplt.plot(vendor['Date'], vendor['Jim Beam Sales'], 'b-', label = 'Jim Beam')\nplt.plot(vendor['Date'], vendor['Wilson Daniels Ltd Sales'], 'r-', label = 'Wilson Daniels')\nplt.xlabel('Date')\nplt.ylabel('Sales')\nplt.title('Sales of Jim Beam and Wilson Daniels')\nplt.legend()","98fdc42b":"## Forecasting with Prophet\nfrom fbprophet import Prophet\n\nJBB = JBB.rename(columns = {'Date': 'ds', 'Sale (Dollars)': 'y'})\nJBB_model = Prophet(interval_width = 0.95)\nJBB_model.fit(JBB)\n\nWDL = WDL.rename(columns = {'Date': 'ds', 'Sale (Dollars)': 'y'})\nWDL_model = Prophet(interval_width = 0.95)\nWDL_model.fit(WDL)\n\nJBB_forecast = JBB_model.make_future_dataframe(periods=36, freq = 'MS')\nJBB_forecast = JBB_model.predict(JBB_forecast)\n\nWDL_forecast = WDL_model.make_future_dataframe(periods = 36, freq = 'MS')\nWDL_forecast = WDL_model.predict(WDL_forecast)","1135a1de":"plt.figure(figsize=(18,6))\nJBB_model.plot(JBB_forecast, xlabel = 'Date', ylabel = 'Sales')\nplt.title('Jim Beam Sales with Forecasts')","3d4494fb":"plt.figure(figsize=(18,6))\nWDL_model.plot(WDL_forecast, xlabel = 'Date', ylabel = 'Sales')\nplt.title('Wilson Daniels Sales with Forecasts')","ba6c70c3":"JBB_names = ['JBB_%s' % column for column in JBB_forecast.columns]\nWDL_names = ['WDL_%s' % column for column in WDL_forecast.columns]\n\nmerge_JBB_forecast = JBB_forecast.copy()\nmerge_WDL_forecast = WDL_forecast.copy()\nmerge_JBB_forecast.columns = JBB_names\nmerge_WDL_forecast.columns = WDL_names\n\nforecast = pd.merge(merge_JBB_forecast, merge_WDL_forecast, how = 'inner', left_on = 'JBB_ds', right_on = 'WDL_ds')\nforecast = forecast.rename(columns = {'JBB_ds': 'Date'}).drop('WDL_ds', axis = 1)\nforecast.head()","4bcc5785":"plt.figure(figsize = (10,7))\nplt.plot(forecast['Date'], forecast['JBB_trend'], 'b-')\nplt.plot(forecast['Date'], forecast['WDL_trend'], 'r-')\nplt.xlabel('Date')\nplt.ylabel('Sales')\nplt.title('Jim Beam vs Wilson Daniels Trend')\nplt.legend()","74c9914a":"plt.figure(figsize=(10,7))\nplt.plot(forecast['Date'], forecast['JBB_yhat'], 'b-')\nplt.plot(forecast['Date'], forecast['WDL_yhat'], 'r-')\nplt.xlabel('Date')\nplt.ylabel('Sales')\nplt.title('Jim Beam vs Wilson Daniels Estimate')\nplt.legend()","c6811736":"df1 =df.copy()\ndf1.drop(cols, axis = 1, inplace = True)\ndf1 = df1.groupby('Date')['Sale (Dollars)'].sum().reset_index()\ndf1 = df1.set_index('Date')\ny = df1['Sale (Dollars)'].resample('MS').mean()\n\ndf1 = pd.DataFrame({'Date': y.index, 'Sale (Dollars)': y.values})\ndf1 = df1.rename(columns ={'Date': 'ds', 'Sale (Dollars)': 'y'} )\ndf1_model = Prophet(interval_width = 0.95)\ndf1_model.fit(df1)\n\ndf1_forecast = df1_model.make_future_dataframe(periods = 36, freq = 'MS')\ndf1_forecast = df1_model.predict(df1_forecast)","7740ce47":"plt.figure(figsize = (18,6))\ndf1_model.plot(df1_forecast, xlabel = 'Date', ylabel = 'Sales ($)')\nplt.title('Liquor Market')\n","36a17281":"## Forecasting with Prophet\n\nUsing the package Prophet, we are able to generate more accurate forecasts without going through the hassle of manually building the ARIMA model.","04daf3fc":"Both forecasts suggest that sales will continue to decline into the ensuing years. \nSo lets take a closer look at the trends for Jim Beam and wilson Daniels.\nBelow, we see that Jim Beam Brands, trading as Suntory Beverage & Food Ltd seems to confirm our predictions. ","0a096322":"## ARIMA modelling\n\nBefore we begin building the ARIMA model, we must select the optimal parameters (p, d, q, t).\nSince we have already established that the periodicity is 12 months, we can let t = 12. \nIn order to determine the estimates for p, d & q, we will simulate all combinations of the parameters and select the model with the lowest AIC score. ","5ef9c683":"## Concluding Remarks: \nThe market forecasts predict a steady decline in sales which are in line with trends shown for Jim Beam and Wilson Daniels.\nFortunately, we have the luxury to validate our predictions and can see that they show a similar behaviour to the observations. \n\nThis notebook was a prooof-of-concept that demonstrates the power of time-series analysis in anlaysis of data and how it can be used to inform our decisions about the future. \nSo please feel free to UPVOTE if you liked this notebook and any feedback would be appreciated\n\n","cbcbe25b":"The dataset consists of 24 columns and 12,591,077 rows.\nThe only columns we are interested in are; 'Date', 'Vendor Name' and 'Sale (Dollars)'. ","3b250873":"##  Data Preparation","1a374c74":"Based on the forecast produced by the model, we can expect to see the sales for Jim  Beam Brands to steadily decline\nwith minor boosts due to seasonality. ","39f1cd47":"At first glance, the sales for Jim Beam Brands appear to have high variability and difficult to interpret. ","dd9e4ce4":"Note that the Jim Beam Sales forecast produced by our ARIMA model and the model using Prophet are remarkably similar. ","267eea03":"This confirm our initial suspicion and may be indicative of the market forces. ","da72e958":"![image.png](attachment:image.png)\nSource: https:\/\/www.marketwatch.com\/investing\/stock\/stbfy","6309d2e1":"## Market Trend\nAlthough we may not have access to liquor sales access all of America, we will use the Iowa liquor sales dataset as a representative sample of the American liquor market.  ","4c52fa28":"## 5. Comparing Brands","ceaf687a":"![image.png](attachment:image.png)","17ec4cce":"THe RMSE, 15621, is a bit high for our model which suggests that it is not the best fit for the data.  ","38f18f2a":"## Validation\n\nTo validate the we will generate prediction for the final year (2016-Oct - 2017-Oct) and compare it to the observed values over the same time period. ","9db0cab3":"Wilson Daniels Ltd is a marketing & sales company that represents a variety of smaller wineries and distilleries thats only been around in the last decade.\nWe will now compare the sales of Jim Beam Brands and Wilson Daniels Ltd.","b32674b8":"The optimal model has p = 0, d = q = 1.","d26da512":" ## Trend Extraction\n","a55f4d8e":"## 4. Forecasting\n","2fd34df7":"# Time Series Analysis and Forecasting of Liquor Sales in Iowa\n\n## Content:\n* Introduction\n* Data Preparation\n* Trend Extraction\n* ARIMA modelling\n* Validation\n* Forecasting\n* Compare brands\n* Forecasting with Prophet\n* Market Trend\n* Concluding Remarks","61001a8e":"Now that our datset has been properly processed and formatted. \nWe are going focus on Jim Beam Brands, which has been producing bourbon for over 200 years out of Kentucky, America\nwith market capital of approximately $11.5 billion. ","e5ccafc0":"The trend reveals that sales have been only slightly increasing before 2016. \nDuring 2016 sales have been dropping and then seems to have flattended in 2017. \nIt also appears that the sales have a periodicty of 12 months, which may explain the variability. ","5dcdd5c5":"## Introduction\nThis notebook analyses the trends that affect liqour sales in the state of Iowa, America and aims to forecast the compare the performace of competing brands. \n\nWe will be utilising \"Time Series Analysis\" to extract trends and build \"Auto Regressive Integrated Moving Average\" (ARIMA) models to produce forecasts.  "}}