{"cell_type":{"2e788a73":"code","1af7f3a7":"code","d7d62881":"code","68dad892":"code","c8e517eb":"code","39120a54":"code","b245e994":"code","8a403491":"code","916a1ad3":"code","6c18b5f1":"code","8d84048f":"code","789d7b67":"code","0257c4ce":"code","cdb6dc27":"code","3c0c039b":"code","18dc09fe":"code","8cde6bda":"code","3cc8379c":"code","fe477e5b":"code","d6c74304":"code","bcefe2fe":"code","27f56e86":"code","04b99f33":"code","ba3f9166":"markdown","9b3e8880":"markdown","13ab6969":"markdown","7978febd":"markdown"},"source":{"2e788a73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1af7f3a7":"from fastai.vision.all import *","d7d62881":"path = Path('\/kaggle\/input\/fashionmnist\/')\n# path.ls()","68dad892":"train = pd.read_csv(path\/'fashion-mnist_train.csv')\ntest = pd.read_csv(path\/'fashion-mnist_test.csv')","c8e517eb":"train.head()","39120a54":"data_X, data_y = train.iloc[:, 1:], train.iloc[:,1]\ndata_X.head()","b245e994":"data_y","8a403491":"for i in set(list(data_y)):\n    count = 0\n    for j in range(len(data_y)):\n        if (data_y.iloc[j] == i):\n            count = count + 1\n    print(i, \" : \", count)","916a1ad3":"import imageio","6c18b5f1":"def to_img_shape(data_X, data_y=[]):\n    data_X = np.array(data_X).reshape(-1,28,28)\n    data_X = np.stack((data_X,)*3, axis=-1)\n    data_y = np.array(data_y)\n    return data_X,data_y","8d84048f":"def save_imgs(path:Path, data, labels):\n    path.mkdir(parents=True,exist_ok=True)\n    for label in np.unique(labels):\n        (path\/str(label)).mkdir(parents=True,exist_ok=True)\n    for i in range(len(data)):\n        if(len(labels)!=0):\n#             print(str( path\/str(labels[i])\/(str(i)+'.jpg')))\n            imageio.imsave( str( path\/str(labels[i])\/(str(i)+'.jpg') ), data[i] )\n        else:\n            imageio.imsave( str( path\/(str(i)+'.jpg') ), data[i] )","789d7b67":"# from sklearn.model_selection import train_test_split\n\n# train_X, val_X, train_y, val_y = train_test_split(data_X, data_y)","0257c4ce":"# val_X","cdb6dc27":"# val_y","3c0c039b":"train_X, train_y =  to_img_shape(data_X, data_y)\n# val_X, val_y = to_img_shape(val_X, val_y)","18dc09fe":"save_imgs(Path('\/data\/train'), train_X, train_y)\n# save_imgs(Path('\/data\/valid'),val_X,val_y)","8cde6bda":"!dir {Path('\/data\/train')}","3cc8379c":"#!dir {Path('\/data\/train\/0')}","fe477e5b":"path_to_data = '\/data\/train'","d6c74304":"plt.imshow(train_X[6,:]), train_y[6]","bcefe2fe":"plt.imshow(train_X[9,:]), train_y[9]","27f56e86":"def get_dls(bs=64):\n    return DataBlock(\n        blocks=(ImageBlock(cls=PILImageBW), CategoryBlock), \n        get_items=get_image_files, \n        get_y=parent_label,\n        splitter=RandomSplitter(valid_pct=0.2, seed=None),\n        batch_tfms=Normalize()\n    ).dataloaders(path_to_data, bs=bs)\n\ndls = get_dls()","04b99f33":"dls.show_batch(max_n=9, figsize=(4,4))","ba3f9166":"WHAT A LOPSIDED or am i doing something wrong here?","9b3e8880":"these two images should not have the same label!","13ab6969":"from:  https:\/\/www.kaggle.com\/faizu07\/kannada-mnist-with-fastai","7978febd":"AS EXPECTED ALL LABELS ARE ZERO. IS THIS DATABASE PROBLEM OR MY PROBLEM. PLEASE TELL. FORGIVE THE CAPITALISATIONS."}}