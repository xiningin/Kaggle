{"cell_type":{"f8c58c9c":"code","fac44218":"code","d8372585":"code","f5df66d9":"code","44500dd9":"code","2329001c":"code","ba272377":"code","a627aca1":"code","9c0dddd9":"code","f56ada1e":"code","7feb2b11":"code","124a6499":"code","a9c6c5b7":"code","45fb7ed8":"code","977688e0":"code","4245b6ee":"code","76962985":"code","9a849c44":"code","80a9b7fb":"code","5885392f":"code","c528f124":"code","aa197ec7":"code","3b05ba6c":"code","b47be4bb":"code","4eca6453":"code","b8128d5c":"code","d961e3cf":"code","e5b38520":"code","65225af0":"code","d53c3521":"code","02592104":"code","7b2a85f8":"code","5b18b9c9":"code","e6817339":"code","1f216e24":"code","8c29b129":"markdown","3d2b1313":"markdown","5a955fcd":"markdown","b67861fb":"markdown","f8d63b38":"markdown","88e834c3":"markdown","c6c81610":"markdown","6344cb05":"markdown","23c91b9e":"markdown","79bd309f":"markdown","40e77f3a":"markdown","cf4d564e":"markdown","c9482242":"markdown","a7238619":"markdown","8ae67697":"markdown","ede357e1":"markdown","b5520c2a":"markdown","4795add6":"markdown","297ee5fb":"markdown","c3968b91":"markdown","accb7e1a":"markdown","dc6f744b":"markdown","5eb6e19b":"markdown","01470600":"markdown","239044ed":"markdown","a779ac84":"markdown","d70aec8d":"markdown","1e3733fe":"markdown","0a4c93fe":"markdown","d4dd6ebe":"markdown","af71f841":"markdown","b3fececb":"markdown","635fc51e":"markdown","fb39b0f6":"markdown","c2904f74":"markdown","3bfa53ab":"markdown","26a57a17":"markdown","80023505":"markdown","ee245448":"markdown"},"source":{"f8c58c9c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n%matplotlib inline","fac44218":"# Loading data\n\nDataExpo2006 = pd.read_csv('\/kaggle\/input\/group-1\/dataset\/2006.csv')\nDataExpo2007 = pd.read_csv('\/kaggle\/input\/group-1\/dataset\/2007.csv')","d8372585":"# Separate cancelled or diverted flights\n\nDataExpo_cancelled_or_diverted_2006 = DataExpo2006.query('Cancelled == 1 | Diverted == 1')\nDataExpo_cancelled_or_diverted_2007 = DataExpo2007.query('Cancelled == 1 | Diverted == 1')\nDataExpo_cancelled_or_diverted = pd.concat([DataExpo_cancelled_or_diverted_2006, DataExpo_cancelled_or_diverted_2007])\n\nDataExpo2006 = DataExpo2006.query('Cancelled == 0 & Diverted == 0')\nDataExpo2007 = DataExpo2007.query('Cancelled == 0 & Diverted == 0')","f5df66d9":"# Flights from 12:00 pm to 12:00 am only\n\nDataExpo2006 = DataExpo2006.query('DepTime > 1200.0 & CRSDepTime > 1200 & ArrTime > 1200.0 & CRSArrTime > 1200')\nDataExpo2006 = DataExpo2006.query('DepTime < 2400.0 & CRSArrTime < 2400 & ArrTime < 2400.0 & CRSDepTime < 2400')\n\nDataExpo2007 = DataExpo2007.query('DepTime > 1200.0 & CRSDepTime > 1200 & ArrTime > 1200.0 & CRSArrTime > 1200')\nDataExpo2007 = DataExpo2007.query('DepTime < 2400.0 & CRSArrTime < 2400 & ArrTime < 2400.0 & CRSDepTime < 2400')","44500dd9":"# DepTime 2006\n\nDataExpo2006['DepTime'] = DataExpo2006['DepTime'].astype('int64').astype('str')\nDepTime = DataExpo2006['DepTime'].tolist()\nDpTime = []\n\nimport datetime\nfor t in DepTime:\n     DpTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n        \nDataExpo2006['DepTime'] = DpTime\n\n# DepTime 2007\n\nDataExpo2007['DepTime'] = DataExpo2007['DepTime'].astype('int64').astype('str')\nDepTime = DataExpo2007['DepTime'].tolist()\nDpTime = []\n\nimport datetime\nfor t in DepTime:\n     DpTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n        \nDataExpo2007['DepTime'] = DpTime\n\n# ArrTime 2006\n\nDataExpo2006['ArrTime'] = DataExpo2006['ArrTime'].astype('int64').astype('str')\nArrTime = DataExpo2006['ArrTime'].tolist()\nArTime = []\n\nimport datetime\nfor t in ArrTime:\n     ArTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2006['ArrTime'] = ArTime\n\n# ArrTime 2007\n\nDataExpo2007['ArrTime'] = DataExpo2007['ArrTime'].astype('int64').astype('str')\nArrTime = DataExpo2007['ArrTime'].tolist()\nArTime = []\n\nimport datetime\nfor t in ArrTime:\n     ArTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2007['ArrTime'] = ArTime","2329001c":"# CRSDepTime 2006\n\nDataExpo2006['CRSDepTime'] = DataExpo2006['CRSDepTime'].astype('int64').astype('str')\nCRSDepTime = DataExpo2006['CRSDepTime'].tolist()\nCRSDpTime = []\n\nimport datetime\nfor t in CRSDepTime:\n     CRSDpTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2006['CRSDepTime'] = CRSDpTime\n\n# CRSDepTime 2007\n\nDataExpo2007['CRSDepTime'] = DataExpo2007['CRSDepTime'].astype('int64').astype('str')\nCRSDepTime = DataExpo2007['CRSDepTime'].tolist()\nCRSDpTime = []\n\nimport datetime\nfor t in CRSDepTime:\n     CRSDpTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2007['CRSDepTime'] = CRSDpTime\n\n# CRSArrTime 2006\n\nDataExpo2006['CRSArrTime'] = DataExpo2006['CRSArrTime'].astype('int64').astype('str')\nCRSArrTime = DataExpo2006['CRSArrTime'].tolist()\nCRSArTime = []\n\nimport datetime\nfor t in CRSArrTime:\n     CRSArTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2006['CRSArrTime'] = CRSArTime\n\n# CRSArrTime 2007\n\nDataExpo2007['CRSArrTime'] = DataExpo2007['CRSArrTime'].astype('int64').astype('str')\nCRSArrTime = DataExpo2007['CRSArrTime'].tolist()\nCRSArTime = []\n\nimport datetime\nfor t in CRSArrTime:\n     CRSArTime.append(datetime.datetime.strptime(t,'%H%M').strftime('%H:%M'))\n\nDataExpo2007['CRSArrTime'] = CRSArTime","ba272377":"# ActualElapsedTime\n\nDataExpo2006['ActualElapsedTime'] = DataExpo2006['ArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2006['DepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2006['ActualElapsedTime'] = DataExpo2006['ActualElapsedTime'].astype('int64')\n\nDataExpo2007['ActualElapsedTime'] = DataExpo2007['ArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2007['DepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2007['ActualElapsedTime'] = DataExpo2007['ActualElapsedTime'].astype('int64')\n\n# CRSElapsedTime\n\nDataExpo2006['CRSElapsedTime'] = DataExpo2006['CRSArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2006['CRSDepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2006['CRSElapsedTime'] = DataExpo2006['CRSElapsedTime'].astype('int64')\n\nDataExpo2007['CRSElapsedTime'] = DataExpo2007['CRSArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2007['CRSDepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2007['CRSElapsedTime'] = DataExpo2007['CRSElapsedTime'].astype('int64')\n\n# ArrDelay and DepDelay\n\nDataExpo2006['ArrDelay'] = DataExpo2006['ArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2006['CRSArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2006['DepDelay'] = DataExpo2006['DepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2006['CRSDepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\n\nDataExpo2007['ArrDelay'] = DataExpo2007['ArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2007['CRSArrTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\nDataExpo2007['DepDelay'] = DataExpo2007['DepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1])) - DataExpo2007['CRSDepTime'].str.split(':').apply(lambda x: int(x[0]) * 60 + int(x[1]))\n","a627aca1":"# Exclude rows whose ActualElapsedTime not equal (AirTime + TaxiIn + TaxiOut)\n\nDataExpo2006['AirTime'] = DataExpo2006['AirTime'].astype('int64')\nDataExpo2006 = DataExpo2006.query('AirTime + TaxiIn + TaxiOut == ActualElapsedTime')\n\nDataExpo2007['AirTime'] = DataExpo2007['AirTime'].astype('int64')\nDataExpo2007 = DataExpo2007.query('AirTime + TaxiIn + TaxiOut == ActualElapsedTime')","9c0dddd9":"# Exclude the existence of the five delays (CarrierDelay, WeatherDelay, ...) whose sum is more than the actual delay (DepDelay)\n\nDataExpo2006 = pd.concat([DataExpo2006.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay <= DepDelay & DepDelay > 0') \n                           , DataExpo2006.query('DepDelay <= 0')])\n\nDataExpo2007 = pd.concat([DataExpo2007.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay <= DepDelay & DepDelay > 0') \n                           , DataExpo2007.query('DepDelay <= 0')])\n\n# Exclude the existence of the five delays (CarrierDelay, WeatherDelay, ...) while there is no actual delay (DepDelay)\n\nDataExpo2006 = pd.concat([DataExpo2006.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay == 0') \n                         , DataExpo2006.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay < 0')\n                         , DataExpo2006.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay > 0 & DepDelay > 0')\n                         , DataExpo2006.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay > 0')])\n\nDataExpo2007 = pd.concat([DataExpo2007.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay == 0') \n                         , DataExpo2007.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay < 0')\n                         , DataExpo2007.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay > 0 & DepDelay > 0')\n                         , DataExpo2007.query('CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay == 0 & DepDelay > 0')])","f56ada1e":"# Dropping duplicates\nDataExpo2006.drop_duplicates(inplace=True)\nDataExpo2007.drop_duplicates(inplace=True)\n\n# Concatinating the two dataframes 2006, 2007 into one dataframe\nDataExpo = pd.concat([DataExpo2006, DataExpo2007])","7feb2b11":"# Cleaning DayOfWeek column\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('1','Mon')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('2','Tue')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('3','Wed')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('4','Thu')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('5','Fri')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('6','Sat')\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(str).str.replace('7','Sun')\n\n# Cleaning DayOfWeek column\nweek_classes = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\nwclasses = pd.api.types.CategoricalDtype(ordered=True, categories=week_classes)\nDataExpo['DayOfWeek'] = DataExpo['DayOfWeek'].astype(wclasses);","124a6499":"# Flights with delays\nDataExpo_Delay = DataExpo.query('ArrDelay +  DepDelay > 0')\n\n# Flights with no delays\nDataExpo_no_Delay = DataExpo.query('ArrDelay +  DepDelay <= 0')\n\n# resetting index\n\nDataExpo = DataExpo.reset_index(drop=True)\nDataExpo_Delay = DataExpo_Delay.reset_index(drop=True) ","a9c6c5b7":"# Percentage of the flights have either departure or arrival delays and Percentage of those that have both departure and arrival delays\n100 * (DataExpo.query('DepDelay > 0 | ArrDelay > 0').shape[0]\/DataExpo.shape[0]), 100 * (DataExpo.query('DepDelay > 0').query('ArrDelay > 0').shape[0]\/DataExpo.shape[0])","45fb7ed8":"# mean Distance and mean AirTime for the delayed flights\nDataExpo_Delay['Distance'].mean(), DataExpo_Delay['AirTime'].mean()\n","977688e0":"# Distance and AirTime histograms\n\nplt.figure(figsize= (14, 8))\n\nplt.subplot(1,2,1)\nbins = np.arange(0,DataExpo_Delay['Distance'].max()+75,75)\nplt.hist(data = DataExpo_Delay, x= 'Distance',bins = bins);\nplt.title('histograms of Distance', fontsize=18, pad=20)\nplt.xlabel('Distance', fontsize=18)\nplt.ylabel('Number of delayed flights', fontsize=18)\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=18)\n\nplt.subplot(1,2,2)\nbins = np.arange(0,DataExpo_Delay['AirTime'].max()+10,10)\nplt.hist(data = DataExpo_Delay, x= 'AirTime',bins = bins)\nplt.title('histograms of AirTime', fontsize=18, pad=20)\nplt.xlabel('AirTime', fontsize=18)\nplt.ylabel('Number of delayed flights', fontsize=18)\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=18)\n\nplt.tight_layout\nplt.subplots_adjust(left=0.1,right=1.3,  wspace=0.4, hspace=0.4);","4245b6ee":"# The top 5 Origin that have the most delayed flights\n\nOrigin = DataExpo_Delay['Origin'].value_counts().nlargest(5).index.tolist()\nOrigin_top_5_late = DataExpo_Delay[DataExpo_Delay['Origin'].isin (Origin)]\nOrigin_top_5_late['Origin'].value_counts()\n","76962985":"# The top 5 Destinations that have the most delayed flights\n\nDest = DataExpo_Delay['Dest'].value_counts().nlargest(5).index.tolist()\nDest_top_5_late = DataExpo_Delay[DataExpo_Delay['Dest'].isin (Dest)]\nDest_top_5_late['Dest'].value_counts()","9a849c44":"# Plots for top 5 destinations that have the most delayed flights\nplt.figure(figsize=(14,8))\n\n# Origin count\nplt.subplot(1,2,1)\nax = sb.countplot(data=Origin_top_5_late, x='Origin', color =sb.color_palette()[0], order = Origin_top_5_late['Origin'].value_counts().index)\nax.axes.set_title(\"Origin count for top 5 most delayed flights Origin\",fontsize=18, pad=20)\nax.set_ylabel(\"Number of delayed flights\",fontsize=18);\nax.set_xlabel(\"Origin\",fontsize=18);\nax.tick_params(labelsize=18)\n\n# Destination count\n\nplt.subplot(1,2,2)\nax1 = sb.countplot(data=Dest_top_5_late, x='Dest', color =sb.color_palette()[0], order = Dest_top_5_late['Dest'].value_counts().index)\nplt.ylim(ax.get_ylim()) # set y-axis limits to be same as left plot\nax1.axes.set_title(\"Destination count for top 5 most delayed flights Destinations\",fontsize=18, pad=20)\nax1.set_ylabel(\"Number of delayed flights\",fontsize=18);\nax1.set_xlabel(\"Dest\",fontsize=18);\nax1.tick_params(labelsize=18)\n\nplt.subplots_adjust(left=0.1,right=1.2, wspace=0.4, hspace=0.4 );","80a9b7fb":"# Five types of delays in 2006 and 2007 Pointplot\n\nplt.figure(figsize= (14, 8))\n\nplt.subplot(2,3,1)\nb1 = sb.pointplot(data=DataExpo_Delay, x='Month', y='LateAircraftDelay',dodge = 0.3)\nplt.ylim(0,14)\nb1.axes.set_title(\"Pointplot of the Late aircraft delays in 2006 and 2007\",fontsize=18, pad=20)\nb1.set_ylabel(\"LateAircraftDelay\",fontsize=18);\nb1.set_xlabel(\"Month\",fontsize=18);\nb1.tick_params(labelsize=18)\n\nplt.subplot(2,3,2)\nb2 = sb.pointplot(data=DataExpo_Delay, x='Month', y='CarrierDelay',dodge = 0.3)\nplt.ylim(0,14)\nb2.axes.set_title(\"Pointplot of the Carrier delays in 2006 and 2007\",fontsize=18, pad=20)\nb2.set_ylabel(\"CarrierDelay\",fontsize=18);\nb2.set_xlabel(\"Month\",fontsize=18);\nb2.tick_params(labelsize=18)\n\nplt.subplot(2,3,3)\nb3 = sb.pointplot(data=DataExpo_Delay, x='Month', y='NASDelay',dodge = 0.3)\nplt.ylim(0,14)\nb3.axes.set_title(\"Pointplot of the NAS delays in 2006 and 2007\",fontsize=18, pad=20)\nb3.set_ylabel(\"NASDelay\",fontsize=18);\nb3.set_xlabel(\"Month\",fontsize=18);\nb3.tick_params(labelsize=18)\n\nplt.subplot(2,3,4)\nb4 = sb.pointplot(data=DataExpo_Delay, x='Month', y='WeatherDelay',dodge = 0.3)\nplt.ylim(0,14)\nb4.axes.set_title(\"Pointplot of the Weather delays in 2006 and 2007\",fontsize=18, pad=20)\nb4.set_ylabel(\"WeatherDelay\",fontsize=18);\nb4.set_xlabel(\"Month\",fontsize=18);\nb4.tick_params(labelsize=18)\n\nplt.subplot(2,3,5)\nb5 = sb.pointplot(data=DataExpo_Delay, x='Month', y='SecurityDelay',dodge = 0.3)\nplt.ylim(0,14)\nplt.title('Pointplot of the Security delays in 2006 and 2007');\nb5.axes.set_title(\"Pointplot of the Security delays in 2006 and 2007\",fontsize=18, pad=20)\nb5.set_ylabel(\"SecurityDelay\",fontsize=18);\nb5.set_xlabel(\"Month\",fontsize=18);\nb5.tick_params(labelsize=18);\n\nplt.subplots_adjust(left=0.1,bottom=0.1, right=1.5, top=1.1, wspace=0.4, hspace=0.4);","5885392f":"# Top 5 Origin that have the most delayed flights ordered by the mean of DepDelay\nOrigin_top_5_late.groupby('Origin')['DepDelay'].mean()","c528f124":"# Top 5 Destination that have the most delayed flights ordered by the mean of ArrDelay\nDest_top_5_late.groupby('Dest')['ArrDelay'].mean()","aa197ec7":"# Plots for Origin vs DepDelay and Destination vs ArrDelay for top 5 Origin and Destination that have the most delayed flights\n\nplt.figure(figsize= (14, 8))\n\n# Origin vs DepDelay \nplt.subplot(2,2,1)\ng1 = sb.barplot(data=Origin_top_5_late, x='Origin', y = 'DepDelay', color =sb.color_palette()[0],order = Origin_top_5_late.groupby('Origin')['DepDelay'].mean().sort_values(ascending = False).index)\ng1.axes.set_title(\"Origin vs DepDelay\",fontsize=18, pad=20)\ng1.set_ylabel(\"DepDelay\",fontsize=18);\ng1.set_xlabel(\"Origin\",fontsize=18);\ng1.tick_params(labelsize=18)\n\n# Destination vs ArrDelay \nplt.subplot(2,2,2)\ng2 = sb.barplot(data=Dest_top_5_late, x='Dest', y = 'ArrDelay', color =sb.color_palette()[0],order = Dest_top_5_late.groupby('Dest')['ArrDelay'].mean().sort_values(ascending = False).index)\nplt.ylim(g1.get_ylim()) # set y-axis limits to be same as left plot\ng2.axes.set_title(\"Destination vs ArrDelay\",fontsize=18, pad=20)\ng2.set_ylabel(\"ArrDelay\",fontsize=18);\ng2.set_xlabel(\"Dest\",fontsize=18);\ng2.tick_params(labelsize=18)\nplt.subplots_adjust(left=0.1,right=1.2,top=1.9,bottom=0.1,  wspace=0.4, hspace=0.4);","3b05ba6c":"# Delayed aircrafts due to only Late Aircraft Delay with delayed flights more than 200\n\nLateAircraftDelay_only= DataExpo_Delay.query('CarrierDelay ==0 & WeatherDelay ==0 & NASDelay ==0 & SecurityDelay ==0 &LateAircraftDelay !=0')\nplane_list = LateAircraftDelay_only['TailNum'].value_counts().loc[lambda x:x>200].index.tolist()\naircrafts_morethan_200 = LateAircraftDelay_only[LateAircraftDelay_only['TailNum'].isin (plane_list)]\naircrafts_morethan_200['TailNum'].value_counts()","b47be4bb":"# Total delayed flights due to aircrafts with delayed flights more than 200\naircrafts_morethan_200.shape[0]","4eca6453":"# percentage of The most delayed aircrafts due to only Late Aircraft Delay made flights less than the mean airtime\n100 * aircrafts_morethan_200.query('AirTime < 70.95805724195651').shape[0]\/aircrafts_morethan_200.shape[0]","b8128d5c":"# percentage of The most delayed aircrafts due to only Late Aircraft Delay made flights less than the mean distance\n100 * aircrafts_morethan_200.query('Distance < 459.5472694786602').shape[0]\/aircrafts_morethan_200.shape[0]","d961e3cf":"# Aircrafts vs Late Aircraft Delay bar plot ordered by late aircraft delay\n\nplt.figure(figsize= (14, 8));\n\ng2 = sb.barplot(data = aircrafts_morethan_200, x='TailNum',y = 'LateAircraftDelay',order = aircrafts_morethan_200.groupby('TailNum')['LateAircraftDelay'].mean().sort_values(ascending = False).index,hue = 'Year')\ng2.axes.set_title(\"Bar plot of Aircrafts vs Late Aircraft Delay\",fontsize=18, pad=20)\ng2.set_ylabel(\"LateAircraftDelay\",fontsize=18);\ng2.set_xlabel(\"TailNum\",fontsize=18);\ng2.tick_params(labelsize=18)\nplt.setp(g2.get_legend().get_texts(), fontsize='18')\nplt.setp(g2.get_legend().get_title(), fontsize='18');","e5b38520":"# Distance versus airtime of The most delayed aircrafts due to only Late Aircraft Delay ordered by number of delayed flights\n\nh = sb.FacetGrid(data = aircrafts_morethan_200,  margin_titles = True, col = 'TailNum', col_order = aircrafts_morethan_200['TailNum'].value_counts().index,col_wrap = 4)\nh.map(plt.scatter, 'Distance' ,  'AirTime')\nh.fig.suptitle('Distance versus airtime of The top 5 most delayed aircrafts due to only Late Aircraft Delay', fontsize=18);\nh.fig.set_size_inches(20, 8);\nh.set_titles(col_template=\"TailNum = {col_name}\", fontweight='bold')\nh.fig.subplots_adjust(left=0.1,right=0.9,top=0.85,  wspace=0.3, hspace=0.3);","65225af0":"# Mean of AirTime and mean of Distance for aircraft N75994 which is at the top of the mean of the Late Aircraft Delay\n\naircrafts_morethan_200.query('TailNum == \"N75994\"')['AirTime'].mean(), aircrafts_morethan_200.query('TailNum == \"N75994\"')['Distance'].mean()","d53c3521":"# Mean of AirTime and mean of Distance for aircraft N455YV which is at the top of the number of late flights\n\naircrafts_morethan_200.query('TailNum == \"N455YV\"')['AirTime'].mean(), aircrafts_morethan_200.query('TailNum == \"N455YV\"')['Distance'].mean()","02592104":"# Top 5 aircrafts with Cancelled flight \n\nDataExpo_cancelled = DataExpo_cancelled_or_diverted.query('Cancelled == 1 & Diverted == 0& TailNum!=\"0\" &TailNum !=\"000000\"')\n\nDataExpo_cancelled_list = DataExpo_cancelled['TailNum'].value_counts().nlargest(5).index.tolist()\nDataExpo_top_5_cancelled = DataExpo_cancelled[DataExpo_cancelled['TailNum'].isin (DataExpo_cancelled_list)]","7b2a85f8":"# Aircrafts with Cancelled flight counts\n\nplt.figure(figsize= (14, 8))\n\ng3 = sb.countplot(data = DataExpo_top_5_cancelled, x='TailNum', hue = 'Year', order = DataExpo_top_5_cancelled['TailNum'].value_counts().index)\ng3.axes.set_title(\"Bar plot of Aircrafts with Cancelled flight\",fontsize=18, pad=20)\ng3.set_ylabel(\"Number of cancelled flights\",fontsize=18);\ng3.set_xlabel(\"TailNum\",fontsize=18);\ng3.tick_params(labelsize=18)\nplt.setp(g3.get_legend().get_texts(), fontsize='18')\nplt.setp(g3.get_legend().get_title(), fontsize='18');","5b18b9c9":"# Number of delayed flights and mean of Late Aircraft Delay for aircraft N715SF which is at the top of cancelled flights\nLateAircraftDelay_only.query('TailNum == \"N715SF\"').shape[0],LateAircraftDelay_only.query('TailNum == \"N715SF\"')['LateAircraftDelay'].mean()","e6817339":"# Number of delayed flights and mean of Late Aircraft Delay for aircraft N455YV which is at the top of the number of late flights\nLateAircraftDelay_only.query('TailNum == \"N455YV\"').shape[0],LateAircraftDelay_only.query('TailNum == \"N455YV\"')['LateAircraftDelay'].mean()","1f216e24":"# Number of delayed flights and mean of Late Aircraft Delay for aircraft N75994 which is at the top of the mean of the Late Aircraft Delay\nLateAircraftDelay_only.query('TailNum == \"N75994\"').shape[0],LateAircraftDelay_only.query('TailNum == \"N75994\"')['LateAircraftDelay'].mean()","8c29b129":"Aircraft N715SF **(the top of cancelled flights)** has 180 delayed flights with a mean of Late Aircraft Delay equals 84.91.\n\nAircraft N455YV **(the top of the number of late flights)** has 252 delayed flights and 65.39 is the value of the mean of Late Aircraft Delay.\n\nAircraft N75994 **(the top of the Late Aircraft Delay mean)** has 209 delayed flights and 83.33 is the value of the mean of Late Aircraft Delay.\n\nThis means that the Aircraft with the most cancelled flights has a mean of Late Aircraft Delay higher than that of the highest mean of Late Aircraft Delay from the list of the highest delayed flights.\n\nKeep in mind that the Aircraft N715SF made fewer Number of delayed flights 180 flight verses 209 flight by N75994.","3d2b1313":"The top 5 Origins that have the most delayed flights.","5a955fcd":"## Q2 Is there a relation between ArrDelay at certain Dest and DepDelay from certain Origin if the Dest and the Origin are the same?","b67861fb":"In this project, we focus only on flights from 12:00 pm to 12:00 am. ","f8d63b38":"The top 5 Destinations that have the most delayed flights.","88e834c3":"51.37% of the flights have either departure or arrival delays, while 29.84% of the flights have both departure and arrival delays.","c6c81610":"From the plot, we can deduce that Late aircraft delay is the most significant cause for flight delays.","6344cb05":"This lead to the conclusion that there is a strong relation between ArrDelay at certain Dest and DepDelay from certain Origin if the Dest and the Origin are the same.","23c91b9e":"The distribution of Distance and AirTime shows skewness toward the right.","79bd309f":"# Univariate exploratory analysis","40e77f3a":"Let's explore the most delayed aircrafts ","cf4d564e":"So we can conclude that long-distance flights and long-time flights have no significant impact on the delays.","c9482242":"Now let us explore the distribution of Distance and AirTime.","a7238619":"ATL clearly has the most number of delayed flights as Destination or as Origin.","8ae67697":"#### 01\/04\/2021\n<a id='intro'><\/a>\n# Introduction\n\nThis is a communicate data findings project. We will use Python visualization libraries to systematically explore commercial flights dataset, starting from plots of single variables and building up to plots of multiple variables.\nYou can see **a short presentation** of that illustrates interesting trends and relationships that we discovered in the dataset [here](https:\/\/drive.google.com\/uc?id=1zmA0yS-mwTdK2NcLclrxpurR9E0Ye5EB&export=download).\n\n### Dataset Description \n\nThis dataset consists of flight arrival and departure details for all commercial flights within the USA.\nThe flight data is [here](https:\/\/community.amstat.org\/jointscsg-section\/dataexpo\/dataexpo2009). \nThe data contains more than one CSV file, Each file includes a year of data, The 2 files used in this project include the years 2006 and 2007. Each file contains 29 columns and 3946349 rows after cleaning including departure and arrival times, departure and arrival CRS times, arrival and departure delays, tail number, unique carrier, and if the flight is cancelled or diverted and the reasons for the delay.\n\n\n## Questions for Analysis\n\n* Q1 What are the most significant types of delays?\n* Q2 Is there a relation between ArrDelay at certain Dest and DepDelay from certain Origin if the Dest and the Origin are the same?\n* Q3 Does the Airtime and Distance affect the number of delayed flights?\n* Q4 Is there a sign that the Cancelled flights are related to the Aircraft itself?","ede357e1":"It is clear that the top 2 Aircrafts show a huge increase in cancelled flights in 2007 versus 2006.","b5520c2a":"Cleaning the columns DepTime, ArrTime, CRSDepTime, and CRSDepTime and changing them to be suitable for calculating time delays for both 2006 and 2007.","4795add6":"Dropping duplicates and merging the two data frames into one.","297ee5fb":"* Q4 Is there a sign that the Cancelled flights are related to the Aircraft itself?","c3968b91":"Cleaning the columns ActualElapsedTime, CRSElapsedTime, ArrDelay, and DepDelay for both 2006 and 2007. Because much of it contains erroneous data.","accb7e1a":"\n# Cleaning and processing data\n\nFirst, separate cancelled or diverted flights from the two data frames.","dc6f744b":"# Multivariate exploratory analysis","5eb6e19b":"### Q1 What are the most significant types of delays?","01470600":"# Limitations\n\n* The absence of determining the reason for cancelling the flights.\n* The existence of a column containing CRS of the Airtime could have given a boost in determining the overall delay of the flights.\n* There is a huge number of different aircrafts, so the data about each aircraft is really small.","239044ed":"After that, we exclude the existence of the five delay columns which do not match with the actual delay.","a779ac84":"We can deduce from the bar plot and the scatter plot above that:\n\nAircraft N455YV **(the top of the number of late flights)** is the fifth according to the mean of Late Aircraft Delay\n\nAircraft N75994 **(the top of the mean of Late Aircraft Delay)** is the fifth according to the number of late flights.","d70aec8d":"Both of the two Aircraft made flights **less than** the mean of Airtime and **less than** the mean of Distance of the delayed flights.\n\nAircraft N75994 has a mean value of Airtime equals 52.74 and a mean value of Distance equals 321.67.\n\nAircraft N455YV has a mean value of Airtime equals 45.17 and a mean value of Distance equals 181.63.","1e3733fe":"# Analysis","0a4c93fe":"# Set up the environment","d4dd6ebe":"Now we exclude rows whose ActualElapsedTime not equal (AirTime + TaxiIn + TaxiOut).","af71f841":"It is obvious from the plots that most of the delayed Aircrafts made short-distance short-timed flights.\n\n91.62% of the most delayed aircrafts made flights less than the mean distance of the delayed flights.\n\n85.01% of them made flights less than the mean airtime of the delayed flights.\n\nKeep in mind that the total delayed flights due to aircrafts with delayed flights of more than 200 are only 1755 late flights.","b3fececb":"### Q3 Does the Airtime and Distance affect the number of delayed flights?\n","635fc51e":"The two plots above show a similar pattern in which each of ATL and LAX **has the same Time delay** (ArrDelay and DepDelay) as Destination and as Origin, And each of ORD and DFW **has approximately the same Time delay** (ArrDelay and DepDelay) as Destination and as Origin.","fb39b0f6":"###  So to conclude:\n\n* Late aircraft delay is the most significant cause of flight delays.\n* There is a strong relation between ArrDelay at certain Dest and DepDelay from certain Origin if the Destination and the Origin are the same.\n* Long-distance flights and long-time flights have no significant impact on the delays.\n* The Aircraft itself has an impact on the cancelled flights.","c2904f74":"Since we reached the point that the aircraft which is at the top of cancelled flights has other flights delayed with a significant average delay, This lead us to affirm that the Aircraft itself has an impact on cancelled flights.","3bfa53ab":"# bivariate exploratory analysis","26a57a17":"Separate cancelled and diverted from the data frame, Then separate the data frame into delayed flights and flights with no delays, and reset the index.","80023505":"# Loading our data","ee245448":"Renaming DayOfWeek column with words rather than numbers."}}