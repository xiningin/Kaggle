{"cell_type":{"4f50808a":"code","5f37a013":"code","a0907859":"code","291556e9":"code","2fd41ff3":"code","8b56ad9a":"code","6f710ac8":"code","fcbe986d":"code","59ae57bc":"code","b09a94f7":"code","3a7b829b":"code","135b8d14":"code","8a4a9e18":"code","feccfba7":"code","f004a085":"code","58315dcb":"code","6f0e1dc2":"code","1a16f08c":"code","3938dc16":"code","f27fa4c7":"code","bf5bf2af":"code","8eb38627":"code","5597d218":"code","6ba5e888":"code","e2dfdb89":"code","7321938e":"code","7da498e6":"code","c344a98e":"code","ab475a7e":"code","0ec37f0b":"code","81e4c1c5":"code","c3102346":"code","15d26d28":"code","1aec5769":"code","1fa7a31d":"code","709730a8":"code","6f26931e":"code","d40f636c":"code","4cd7e75f":"code","c24e6121":"code","78b6bd19":"code","6ee38cf2":"code","dcd382a8":"code","1a2ead26":"code","10c82079":"code","41d82e25":"code","bead6e7f":"code","21209250":"markdown","18a6e6b3":"markdown","f478309b":"markdown","01b79396":"markdown","ac4fdd4c":"markdown"},"source":{"4f50808a":"import numpy as np\nimport pandas as pd\nimport os\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import  LogisticRegressionCV, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier ,XGBRFClassifier\nfrom sklearn.svm import SVC","5f37a013":"train_set = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_set = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain_set.head()","a0907859":"train_set.isnull().values.any()","291556e9":"train_set.isnull().sum()","2fd41ff3":"train_set.describe()","8b56ad9a":"train_set['Sex'].value_counts()","6f710ac8":"train_set['Embarked'].value_counts()","fcbe986d":"train_set.head()","59ae57bc":"train_set.drop(['PassengerId','Name','Cabin','Ticket','Embarked'],axis=1 ,inplace=True),\ntest_set.drop(['PassengerId','Name','Cabin','Ticket','Embarked'],axis=1, inplace=True)","b09a94f7":"train_set.head()","3a7b829b":"test_set.head()","135b8d14":"train_set = pd.get_dummies(data= train_set , dummy_na = True,columns =['Sex'])\ntest_set = pd.get_dummies(data= test_set , dummy_na = True,columns =['Sex'])","8a4a9e18":"train_set.head()","feccfba7":"train_set.drop(['Sex_male','Sex_nan'],axis=1 ,inplace=True)\ntest_set.drop(['Sex_male','Sex_nan'],axis=1 ,inplace=True)","f004a085":"train_set.head()","58315dcb":"train_set.isnull().sum()","6f0e1dc2":"train_set.fillna(train_set.mean(),inplace=True)","1a16f08c":"train_set.isnull().sum()","3938dc16":"test_set.isnull().sum()","f27fa4c7":"test_set.fillna(test_set.mean(),inplace=True)","bf5bf2af":"test_set.isnull().sum()","8eb38627":"X_train = train_set.drop(['Survived'],axis=1)\nX_train.head()","5597d218":"X_train.corr()","6ba5e888":"y_train = train_set.pop('Survived')\ny_train","e2dfdb89":"X_test = test_set\nX_test.head()","7321938e":"X_train.head()","7da498e6":"sc_X = MinMaxScaler()\nX_train_sc = sc_X.fit_transform(X_train)\nX_validate = sc_X.transform(X_train_sc)\n","c344a98e":"X_validate","ab475a7e":"sc_X = MinMaxScaler()\nX_test_sc = sc_X.fit_transform(X_test)\nX_test_validate = sc_X.transform(X_test_sc)\nX_test_validate","0ec37f0b":"models = [ LogisticRegressionCV(), SVC(), XGBClassifier() ,  XGBRFClassifier(), KNeighborsClassifier(), RandomForestClassifier()]\nfor clf in models:\n    clf.fit(X_validate,y_train)\n    y_pred = clf.predict(X_validate)\n    cnf = confusion_matrix(y_train,y_pred)\n    print(cnf)\n    print(accuracy_score(y_train,y_pred)*100)\n","81e4c1c5":"clf","c3102346":"from pprint import pprint\n# Look at parameters used by our current forest\nprint('Parameters currently in use:\\n')\npprint(clf.get_params())","15d26d28":"from sklearn.model_selection import GridSearchCV\n# Create the parameter grid based on the results of random search \n\ngrid_parameter = {\n    'n_estimators' : [ 100,500,1000, 10000],\n    'max_features' : ['auto', 'sqrt', 'log2'],\n    'max_depth' : [10,20,30],\n    'min_samples_split' : [2,5,10],\n    'min_samples_leaf' : [1,2,3,4,5]\n}","1aec5769":"\nclf = RandomForestClassifier( random_state= 0 )\ngrid_search = GridSearchCV(estimator=clf, param_grid=grid_parameter, cv=5, verbose=2, n_jobs=-1)\n#grid_search.fit(X_validate,y_train)\n","1fa7a31d":"grid_search.get_params","709730a8":"clf = RandomForestClassifier(bootstrap=True, class_weight=None,\n                                              criterion='gini', \n                                              max_features='auto',\n                                              min_impurity_decrease=0.0,\n                                              min_samples_leaf=50,                           \n                                              min_weight_fraction_leaf=0.0,\n                                              n_estimators=100000, n_jobs=None,\n                                              oob_score=True, random_state=50,\n                                              verbose=0, warm_start=False)\nclf.fit(X_validate,y_train)\ny_pred = clf.predict(X_validate)\ncnf = confusion_matrix(y_train,y_pred)\nprint(cnf)\nprint(accuracy_score(y_train,y_pred)*100)","6f26931e":"'''\nclf = RandomForestClassifier()\nclf.fit(X_validate,y_train)\ny_pred = clf.predict(X_validate)\ncnf = confusion_matrix(y_train,y_pred)\nprint(cnf)\nprint(accuracy_score(y_train,y_pred)*100)\n'''","d40f636c":"'''\nclf  = LogisticRegression(solver='lbfgs')\nclf.fit(X_validate,y_train)\ny_pred = clf.predict(X_validate)\ncnf = confusion_matrix(y_train,y_pred)\nprint(cnf)\nprint(accuracy_score(y_train,y_pred)*100)\n'''","4cd7e75f":"X_test_validate","c24e6121":"clf","78b6bd19":"y_submission = clf.predict(X_test_validate)","6ee38cf2":"y_submission","dcd382a8":"sub = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nsub['Survived']=y_submission\nsub.head()","1a2ead26":"sub.to_csv('submission.csv',index=False)","10c82079":"!ls -lart #\/kaggle\/working\/submissions.csv","41d82e25":"final = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nfinal['Survived'].value_counts()","bead6e7f":"submitted = pd.read_csv('submission.csv')\nsubmitted['Survived'].value_counts()","21209250":"### Splitting Lables and Features to apply for model","18a6e6b3":"### Checking NULL values in train_set","f478309b":"> Applying MINMAX scaler ","01b79396":"### Encoding categorical data ","ac4fdd4c":"Drop columns which will not be useful for classification from train and test dataset "}}