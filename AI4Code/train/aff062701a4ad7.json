{"cell_type":{"33bbbdb2":"code","40ff6223":"code","10388773":"code","2c58fd28":"code","b28d8290":"code","49d68618":"code","6d03ba1f":"code","f5523a90":"code","01a58b17":"code","3c9aeb92":"code","23c220fe":"code","f983f69d":"code","c074418a":"code","5572eccd":"code","438d71ef":"code","0be5b760":"code","5e556f7d":"code","41c349cf":"code","d54b272f":"code","d56c9f06":"code","5cb851f6":"code","a1f401b9":"code","398e7a6b":"code","2cf1ab73":"code","411437d3":"code","08dd8c87":"code","c037981f":"code","7c5e9c29":"code","5a438484":"code","6a33c564":"code","992e5999":"code","ed922ab3":"code","a59955a2":"code","a3385175":"code","54696f9f":"code","50dc2615":"code","06db624d":"code","6660697c":"code","677a5106":"code","2ea5212f":"code","f0404246":"code","ce7ea5aa":"code","eb06332e":"code","5cecf833":"code","12c86c17":"code","f2c011c4":"code","43a8e6e5":"code","6e219f52":"code","cc03a863":"code","40c7169f":"code","66d14c11":"code","ede24971":"code","ac4ef7bf":"code","8e2cbd2d":"code","0ed9a15e":"code","e8688706":"code","6c8b43df":"code","1c7b172b":"code","9933f89a":"code","101f9f6b":"markdown","369022d3":"markdown","0e1aac88":"markdown","d69d964a":"markdown","4dd6b654":"markdown","38425daf":"markdown","47b5a42b":"markdown","e8b86068":"markdown","b9a1906e":"markdown","64c493b7":"markdown","a1468efa":"markdown","2ba0adaf":"markdown"},"source":{"33bbbdb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40ff6223":"data=pd.read_csv('\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv')\ndata","10388773":"data.info()","2c58fd28":"data.columns","b28d8290":"data=data.drop(['area_type','availability','balcony','society'],axis=1)\ndata","49d68618":"data.isna().sum()","6d03ba1f":"data=data.dropna()","f5523a90":"data.isna().sum()","01a58b17":"data.shape","3c9aeb92":"data['size'].unique()","23c220fe":"data['BHK']=data['size'].apply(lambda x: int(x.split(' ')[0]))","f983f69d":"data.head()","c074418a":"data['BHK'].unique()","5572eccd":"data[data.BHK>20]","438d71ef":"data.total_sqft.unique()","0be5b760":"def isfloat(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","5e556f7d":"data[~data['total_sqft'].apply(isfloat)].head(10)","41c349cf":"def convert_sqft_tonum(x):\n    token=x.split('-')\n    if len(token)==2:\n        return (float(token[0])+float(token[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None","d54b272f":"data=data.copy()\ndata['total_sqft']=data['total_sqft'].apply(convert_sqft_tonum)","d56c9f06":"data.head(10)","5cb851f6":"data.loc[30]","a1f401b9":"data1=data.copy()\ndata1['price_per_sqft']=data1['price']*1000000\/data1['total_sqft']\ndata1.head()","398e7a6b":"len(data1.location.unique())","2cf1ab73":"data1.location=data1.location.apply(lambda x: x.strip())\nlocation_stats=data1.groupby('location')['location'].agg('count').sort_values(ascending=False)\nlocation_stats","411437d3":"len(location_stats[location_stats<=10])","08dd8c87":"locationlessthan10=location_stats[location_stats<=10]\nlocationlessthan10","c037981f":"len(data1.location.unique())","7c5e9c29":"data1.location=data1.location.apply(lambda x: 'other' if x in locationlessthan10 else x)\nlen(data1.location.unique())","5a438484":"data1.head(10)","6a33c564":"data1[data1.total_sqft\/data1.BHK<300].head()","992e5999":"data2=data1[~(data1.total_sqft\/data1.BHK<300)]\ndata2.head(10)","ed922ab3":"data2.shape","a59955a2":"data2[\"price_per_sqft\"].describe().apply(lambda x:format(x,'f'))","a3385175":"def remove_pps_outliers(df):\n    df_out=pd.DataFrame()\n    for key,subdf in df.groupby('location'):\n        m=np.mean(subdf.price_per_sqft)\n        st=np.std(subdf.price_per_sqft)\n        reduced_df=subdf[(subdf.price_per_sqft>(m-st))& (subdf.price_per_sqft<(m+st))]\n        df_out=pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\ndata3=remove_pps_outliers(data2)\ndata3.shape","54696f9f":"import matplotlib.pyplot as plt\ndef plot_scatter_chart(df,location):\n    bhk2=df[(df.location==location)&(df.BHK==2)]\n    bhk3=df[(df.location==location)&(df.BHK==3)]\n    plt.rcParams['figure.figsize']=(15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='Blue',label='2 BHK',s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,color='green',marker='+',label='3 BHK',s=50)\n    plt.xlabel('Total Square Foot')\n    plt.ylabel('Price')\n    plt.title(location)\n    plt.legend()\nplot_scatter_chart(data3,\"Rajaji Nagar\")","50dc2615":"def remove_bhk_outliers(df):\n    exclude_indices=np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_sats={}\n        for BHK,BHK_df in location_df.groupby('BHK'):\n            bhk_sats[BHK]={\n                'mean':np.mean(BHK_df.price_per_sqft),\n                'std':np.std(BHK_df.price_per_sqft),\n                'count':BHK_df.shape[0]\n            }\n        for BHK,BHK_df in location_df.groupby('BHK'):\n            stats=bhk_sats.get(BHK-1)\n            if stats and stats['count']>5:\n                exclude_indices=np.append(exclude_indices,BHK_df[BHK_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\n\ndata4=remove_bhk_outliers(data3)\ndata4.shape","06db624d":"plot_scatter_chart(data4,\"Rajaji Nagar\")","6660697c":"plt.rcParams['figure.figsize']=(20,15)\nplt.hist(data4.price_per_sqft,rwidth=0.6)\nplt.xlabel(\"Price Per Square Foor\")\nplt.ylabel(\"Count\")","677a5106":"data4.bath.unique()","2ea5212f":"data4[data4.bath>10]","f0404246":"plt.rcParams['figure.figsize']=(20,15)\nplt.hist(data4.bath,rwidth=0.6)\nplt.xlabel(\"Number Of Bathroom\")\nplt.ylabel(\"Count\")","ce7ea5aa":"data4[data4.bath>data4.BHK+2]","eb06332e":"data5=data4[data4.bath<data4.BHK+2]\ndata5.shape","5cecf833":"data6=data5.drop(['size','price_per_sqft'],axis='columns')\ndata6","12c86c17":"dummies=pd.get_dummies(data6.location)\ndummies.head(10)","f2c011c4":"data7=pd.concat([data6,dummies.drop('other',axis='columns')],axis='columns')\ndata7.head()","43a8e6e5":"data8=data7.drop('location',axis='columns')\ndata8.head()","6e219f52":"data8.shape","cc03a863":"X=data8.drop('price',axis='columns')\nX.head()","40c7169f":"y=data8.price","66d14c11":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","ede24971":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","ac4ef7bf":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X, y, cv=cv)","8e2cbd2d":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model_using_gridsearchcv(X,y):\n    algos = {\n        'linear_regression' : {\n            'model': LinearRegression(),\n            'params': {\n                'normalize': [True, False]\n            }\n        },\n        'lasso': {\n            'model': Lasso(),\n            'params': {\n                'alpha': [1,2],\n                'selection': ['random', 'cyclic']\n            }\n        },\n        'decision_tree': {\n            'model': DecisionTreeRegressor(),\n            'params': {\n                'criterion' : ['mse','friedman_mse'],\n                'splitter': ['best','random']\n            }\n        }\n    }\n    scores = []\n    cv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n    for algo_name, config in algos.items():\n        gs =  GridSearchCV(config['model'], config['params'], cv=cv, return_train_score=False)\n        gs.fit(X,y)\n        scores.append({\n            'model': algo_name,\n            'best_score': gs.best_score_,\n            'best_params': gs.best_params_\n        })\n\n    return pd.DataFrame(scores,columns=['model','best_score','best_params'])\n\nfind_best_model_using_gridsearchcv(X,y)","0ed9a15e":"def price_predict(location,sqft,bath,BHK):\n    loc_index=np.where(X.columns==location)[0][0]\n    x=np.zeros(len(X.columns))\n    x[0]=sqft\n    x[1]=bath\n    x[2]=BHK\n    if loc_index >=0:\n        x[loc_index]=1\n    return model.predict([x])[0]","e8688706":"price_predict('1st Phase JP Nagar',1000,2,2)","6c8b43df":"price_predict('1st Phase JP Nagar',1000,2,3)","1c7b172b":"price_predict('5th Phase JP Nagar',1000,2,2)","9933f89a":"price_predict('Indira Nagar',1000,2,2)","101f9f6b":"\n# Outlier Removal Using Bathrooms Feature","369022d3":"# Feature Engineering\n**Add new feature called price per square feet**","0e1aac88":"\n# Feature Engineering\n**Add new feature(integer) for bhk (Bedrooms Hall Kitchen)**","d69d964a":"# Data Loading","4dd6b654":"# Data Cleaning","38425daf":"# Outlier Removal Using Standard Deviation and Mean","47b5a42b":"<img src=\"https:\/\/images.pexels.com\/photos\/106399\/pexels-photo-106399.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" style='width:1000px'>","e8b86068":"\n**Based on above results we can say that LinearRegression gives the best score. Hence we will use that.**","b9a1906e":"\n# Find best model using GridSearchCV\n","64c493b7":"\n# Test the model for few properties","a1468efa":"# Use K Fold cross validation to measure accuracy of our LinearRegression model","2ba0adaf":"\n# Build a Model Now..."}}