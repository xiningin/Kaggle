{"cell_type":{"bf250870":"code","a073e441":"code","a7473a21":"code","83671f85":"code","d6f2dd48":"code","9baba16c":"code","4470a5c3":"code","57ef2819":"code","db5a01a6":"code","7eb490a4":"code","7b786062":"code","15d3d2e9":"code","608d75b5":"code","f4c282ec":"code","b2c6bd73":"code","0c8e1ed5":"code","2bbc824b":"code","35dbffae":"code","de39ed5e":"code","d4194df1":"code","2b3d4d4e":"code","0a7a5271":"code","36be0aa2":"code","7b6685bb":"code","1dbf9ebf":"code","0944de42":"code","1ed79fa7":"code","88fbcd7a":"code","da11f640":"code","7be0be86":"code","c220c9ce":"code","35c50e18":"code","ba8a0bbb":"code","89503804":"code","817b38c8":"code","1b6ca8b1":"code","3d096008":"code","4c41579c":"code","fbd2b8e0":"code","144f2e4a":"code","b1be58ea":"code","690a99e9":"code","8595ec25":"code","83101015":"code","eef06648":"code","ce39664d":"code","350ebe66":"code","774394e6":"markdown","25ec8ac3":"markdown","696f6f14":"markdown","9b80070d":"markdown","9e0a7990":"markdown"},"source":{"bf250870":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","a073e441":"from fastai.vision import *\nfrom fastai.metrics import error_rate","a7473a21":"bs = 64\n# bs = 16","83671f85":"help(untar_data)","d6f2dd48":"path = untar_data(URLs.PETS); path","9baba16c":"path.ls()","4470a5c3":"path_anno = path\/'annotations'\npath_img = path\/'images'","57ef2819":"fnames = get_image_files(path_img)\nfnames[:5]","db5a01a6":"np.random.seed(2)\npat = r'\/([^\/]+)_\\d+.jpg$'","7eb490a4":"data = ImageDataBunch.from_name_re(path_img, fnames, pat, ds_tfms=get_transforms(), size=224, bs=bs).normalize(imagenet_stats)","7b786062":"data.show_batch(rows=3, figsize=(7, 6))","15d3d2e9":"print(data.classes)\nlen(data.classes), data.c","608d75b5":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)","f4c282ec":"learn.model","b2c6bd73":"learn.fit_one_cycle(4)","0c8e1ed5":"learn.save('stage-1')","2bbc824b":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses, idxs = interp.top_losses()\n\nlen(data.valid_ds) == len(losses) == len(idxs)","35dbffae":"interp.plot_top_losses(9, figsize=(15,11))","de39ed5e":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","d4194df1":"interp.most_confused(min_val=2)","2b3d4d4e":"learn.unfreeze()","0a7a5271":"learn.fit_one_cycle(1)","36be0aa2":"learn.load('stage-1');","7b6685bb":"learn.lr_find()","1dbf9ebf":"learn.recorder.plot()","0944de42":"learn.unfreeze()\nlearn.fit_one_cycle(2, max_lr=slice(1e-6, 1e-4))","1ed79fa7":"data = ImageDataBunch.from_name_re(path_img, fnames, pat, ds_tfms=get_transforms(), size=299, bs=bs\/\/2).normalize(imagenet_stats)","88fbcd7a":"learn = cnn_learner(data, models.resnet50, metrics=error_rate)","da11f640":"learn.lr_find()\nlearn.recorder.plot()","7be0be86":"learn.fit_one_cycle(8)","c220c9ce":"learn.save('stage-1-50')","35c50e18":"learn.unfreeze()\nlearn.fit_one_cycle(3, max_lr=slice(1e-6, 1e-4))","ba8a0bbb":"interp = ClassificationInterpretation.from_learner(learn)","89503804":"interp.most_confused(min_val=2)","817b38c8":"path = untar_data(URLs.MNIST_SAMPLE); path","1b6ca8b1":"tfms = get_transforms(do_flip=False)\ndata = ImageDataBunch.from_folder(path, ds_tfms=tfms, size=26)","3d096008":"data.show_batch(rows=3, figsize=(5,5))","4c41579c":"learn = cnn_learner(data, models.resnet18, metrics=accuracy)\nlearn.fit(2)","fbd2b8e0":"df = pd.read_csv(path\/'labels.csv')\ndf.head()","144f2e4a":"data = ImageDataBunch.from_csv(path, ds_tfms=tfms, size=28)","b1be58ea":"data.show_batch(rows=3, figsize=(5,5))\ndata.classes","690a99e9":"data = ImageDataBunch.from_df(path, df, ds_tfms=tfms, size=24)\ndata.classes","8595ec25":"fn_paths = [path\/name for name in df['name']]; fn_paths[:2]","83101015":"pat = r\"\/(\\d)\/\\d+\\.png$\"\ndata = ImageDataBunch.from_name_re(path, fn_paths, pat=pat, ds_tfms=tfms, size=24)\ndata.classes","eef06648":"data = ImageDataBunch.from_name_func(path, fn_paths, ds_tfms=tfms, size=24,\n                label_func = lambda x: '3' if '\/3\/' in str(x) else '7')\ndata.classes","ce39664d":"labels = [('3' if '\/3\/' in str(x) else '7') for x in fn_paths]\nlabels[:5]","350ebe66":"data = ImageDataBunch.from_lists(path, fn_paths, labels=labels, ds_tfms=tfms, size=24)\ndata.classes","774394e6":"# Training: resnet34","25ec8ac3":"# Unfreezing, fine-tuning and learning rates","696f6f14":"# Results","9b80070d":"# Other data formats","9e0a7990":"# Looking at data"}}