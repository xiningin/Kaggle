{"cell_type":{"9ee66fc0":"code","7cf61794":"code","dd7167c8":"code","10097858":"code","95cc2922":"code","03083ee4":"code","b637a2e5":"code","1fa066f7":"code","007c7e11":"code","c51fbe69":"code","d038b168":"code","ce542191":"code","1d6c6baa":"code","2e668036":"code","f94b73a0":"code","8ae63d21":"markdown","c4739a53":"markdown","043e2d73":"markdown","2aa498d6":"markdown"},"source":{"9ee66fc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7cf61794":"df = pd.read_csv('\/kaggle\/input\/mortaliy-moscow-20102020\/moscow_stats.csv')","dd7167c8":"df.info()","10097858":"df.head(5)","95cc2922":"df.describe()","03083ee4":"df.plot.scatter(x =\"Year\", y = \"StateRegistrationOfDeath\")","b637a2e5":"df.plot.line(x =\"ID\", y = \"StateRegistrationOfDeath\") #what happend in 2010?","1fa066f7":"trans={\"January\":1,\"February\":2,\"March\":3,\"April\":4,\"May\":5,\"June\":6,\"July\":7,\"August\":8,\"September\":9,\"October\":10, \"November\":11,\"December\":12}\ndef getdatetime(df):\n    month = df['Month']\n    year = df['Year']\n    \n    return str(year)+\".\"+str(trans.get(month))\n    ","007c7e11":"df['time'] = df.apply(getdatetime, axis=1)","c51fbe69":"df['time'] = pd.to_datetime(df['time'])","d038b168":"df2 = df[['StateRegistrationOfDeath', 'time']]\nfrom statsmodels.tsa.seasonal import seasonal_decompose","ce542191":"df2 = df2.set_index('time')","1d6c6baa":"decomposed = seasonal_decompose(df2['StateRegistrationOfDeath'])","2e668036":"decomposed.trend.plot() # global trend","f94b73a0":"decomposed.seasonal.plot() #seasonal data","8ae63d21":"## Lets make a quick look into this data set.","c4739a53":"## What can you do with this data?\nIf you liked pls upvote this dataset and notebook).","043e2d73":"## Time series. Trend and seasonal component","2aa498d6":"## Mortality plot"}}