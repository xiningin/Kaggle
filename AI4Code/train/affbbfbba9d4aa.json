{"cell_type":{"a4f03fcf":"code","336ed518":"code","3d043a96":"code","470e9b7f":"code","ace7f57d":"code","f669f28a":"code","6a4f4196":"code","8f212b57":"code","20af3c01":"code","397d63c0":"code","dee26b6d":"code","18ea53f0":"code","1a8172b9":"code","32082a27":"code","43fdf48f":"code","222fb692":"code","ce8d5aa6":"code","d0feeebe":"code","35e668c9":"markdown","cccc94b0":"markdown","fb771dec":"markdown"},"source":{"a4f03fcf":"# Data Analysis Libraries\nimport numpy as np\nimport pandas as pd\n\n# For Reading data from the web\nfrom pandas_datareader import data, wb\nimport datetime\n\n# Visualization Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Avoiding Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","336ed518":"# Start and End date for the data\nstart = datetime.datetime(2006, 1, 1)\nend = datetime.datetime(2016, 1, 1)\n\n# Retrieving datga from 'yahoo'\nBAC = data.DataReader(\"BAC\", \"yahoo\", start, end)\nC = data.DataReader(\"C\", \"yahoo\", start, end)\nGS = data.DataReader(\"GS\", \"yahoo\", start, end)\nJPM = data.DataReader(\"JPM\", \"yahoo\", start, end)\nMS = data.DataReader(\"MS\", \"yahoo\", start, end)\nWFC = data.DataReader(\"WFC\", \"yahoo\", start, end)\n\n# Creating a dataframe for all the banks\ntickers = ['BAC', 'C', 'GS', 'JPM', 'MS', 'WFC']\nbank_stocks = pd.concat([BAC, C, GS, JPM, MS, WFC],axis=1, keys=tickers)\nbank_stocks.columns.names = ['Bank Tickers', 'Stock info']\nbank_stocks.head()","3d043a96":"df = bank_stocks.copy()","470e9b7f":"# Highest closing for every banks\ndf.xs(key='Close', level='Stock info', axis=1).max()","ace7f57d":"# Return from the banks\nreturns = pd.DataFrame()\nfor tick in tickers:\n    returns[tick+' return'] = df[tick]['Close'].pct_change()\n\nreturns.head()","f669f28a":"# Check the returns of all banks\nreturns.hist(bins=30, edgecolor='black', figsize=(15,8))\nplt.show()","6a4f4196":"# Wrost drop day\nprint('Wrost day: \\n{}'.format(returns.idxmin()))\n# Best day\nprint('\\nBest Day: \\n{}'.format(returns.idxmax()))","8f212b57":"# Standard deviation to show the riskest bank\nreturns.std()","20af3c01":"returns.loc['2015-01-01':'2015-12-31'].std()","397d63c0":"sns.set_style('whitegrid')\nfig, axs = plt.subplots(ncols=2, figsize=(15,5))\n\nsns.distplot(returns.loc['2015-01-01':'2015-12-31']['MS return'], bins=100, color='green', ax=axs[0])\nsns.distplot(returns.loc['2015-01-01':'2015-12-31']['C return'], bins=100, color='red', ax=axs[1])\nplt.show()","dee26b6d":"import plotly\nimport cufflinks as cf\ncf.go_offline()","18ea53f0":"df.xs(key='Close', axis=1, level='Stock info').plot(figsize=(20,5))\nplt.show()","1a8172b9":"df.xs(key='Close', axis=1, level='Stock info').iplot()","32082a27":"plt.figure(figsize=(15,5))\nBAC['Close'].loc['2008-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='30 days AVG')\nBAC['Close'].loc['2008-01-01':'2009-01-01'].plot(label='BAC Close')\nplt.legend()\nplt.show()","43fdf48f":"close_corr = df.xs(key='Close', axis=1, level='Stock info').corr()\nclose_corr.iplot(kind='heatmap', colorscale='rdylbu')","222fb692":"BAC[['Open', 'High', 'Low', 'Close']].loc['2015-01-01':'2016-01-01'].iplot(kind='candle')","ce8d5aa6":"MS['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='sma',periods=[13,21,55],title='Simple Moving Averages')","d0feeebe":"BAC['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='boll')","35e668c9":"# Basic Imports","cccc94b0":"# EDA","fb771dec":"# Data Import"}}