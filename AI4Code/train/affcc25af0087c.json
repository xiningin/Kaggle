{"cell_type":{"7b3d6366":"code","0af94f2d":"code","42fe6ec9":"code","16ab928e":"code","fa2698a3":"code","855758f6":"code","51ffce19":"code","6f510a2c":"code","a3dd4f0b":"code","75945614":"code","31bce745":"code","5369e104":"code","7b149a68":"code","b4cbb7fb":"code","6ca88926":"code","70ef2a6e":"code","711ba6da":"code","dd9d149b":"code","228b7acd":"code","c5e8f666":"code","3fdfdb05":"code","faa826a3":"code","ca5344fb":"code","8b83ba51":"code","136597bc":"code","73892a8e":"code","aa642b9b":"code","e148a4b4":"code","0d2e0ad1":"code","88a5bdaa":"code","4d8aef35":"code","7d18a654":"code","6c2bcfde":"code","bbc4374d":"code","bc54817f":"code","7af07d80":"code","94e9637c":"code","c44cafd2":"code","4f2e3395":"code","e19e5bf8":"code","2499fdcb":"code","8536f072":"code","aca285f0":"markdown","37f284ef":"markdown","16b35cf8":"markdown","9c7d1cad":"markdown","d72a9099":"markdown","0d944d28":"markdown","8409c791":"markdown","47191c0a":"markdown","eb46fda1":"markdown","7d68c60c":"markdown","35ef9336":"markdown","276d7126":"markdown","30ef35eb":"markdown","0f4f90df":"markdown"},"source":{"7b3d6366":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt","0af94f2d":"data = pd.DataFrame(pd.read_csv(\"..\/input\/world-happiness-data\/world_happiness.csv\"))\ndata.head()","42fe6ec9":"data.columns = data.columns.str.strip().str.lower().str.replace('.', '_')\ndata.head(2)","16ab928e":"data.shape","fa2698a3":"data.columns = ['continent','country', 'happiness_rank', 'happiness_score', 'whisker_high', 'whisker_low', 'economy','family','health','freedom','generosity','trust','dystopia_residual'] \ndata.head(2)","855758f6":"data.drop(data.columns[[4,5]], axis = 1, inplace = True)\ndata.head(2)","51ffce19":"data.shape","6f510a2c":"data.columns","a3dd4f0b":"data.describe()","75945614":"data.info()","31bce745":"print('Number of Null values in Columns')\ndata.isnull().sum()","5369e104":"corrMatrix = data.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","7b149a68":"data.drop(data.columns[[2]], axis = 1, inplace = True)\ndata.head(2)","b4cbb7fb":"corrMatrix = data.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","6ca88926":"data.head(2)","70ef2a6e":"#asia\nasia = data[\"continent\"] == \"Asia\"\nasia_df = data[asia]\nasia_data = asia_df.mean()\nasia_mean = asia_data['happiness_score']\nprint(\"Mean of happiness score -\", asia_mean)\nasia_df.head(2)","711ba6da":"#africa\nafrica = data[\"continent\"] == \"Africa\"\nafrica_df = data[africa]\nafrica_data = africa_df.mean()\nafrica_mean = africa_data['happiness_score']\nprint(\"Mean of happiness score -\", africa_mean)\nafrica_df.head(2)","dd9d149b":"#europe\neurope = data[\"continent\"] == \"Europe\"\neurope_df = data[europe]\neurope_data = europe_df.mean()\neurope_mean = europe_data['happiness_score']\nprint(\"Mean of happiness score -\", europe_mean)\neurope_df.head(2)","228b7acd":"#north america\nnm = data[\"continent\"] == \"North America\"\nnm_df = data[nm]\nnm_data = nm_df.mean()\nnm_mean = nm_data['happiness_score']\nprint(\"Mean of happiness score -\", nm_mean)\nnm_df.head(2)","c5e8f666":"#south america\nsm = data[\"continent\"] == \"South America\"\nsm_df = data[sm]\nsm_data = sm_df.mean()\nsm_mean = sm_data['happiness_score']\nprint(\"Mean of happiness score -\", sm_mean)\nsm_df.head(2)","3fdfdb05":"#Australia\naus = data[\"continent\"] == \"Australia\"\naus_df = data[aus]\naus_data = aus_df.mean()\naus_mean = aus_data['happiness_score']\nprint(\"Mean of happiness score -\", aus_mean)\naus_df.head(2)","faa826a3":"corr_asia = asia_df.corr()\n\nmask = np.zeros_like(corr_asia)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_asia, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for Asia')","ca5344fb":"corr_africa = africa_df.corr()\n\nmask = np.zeros_like(corr_africa)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_africa, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for Africa')","8b83ba51":"corr_europe = europe_df.corr()\n\nmask = np.zeros_like(corr_europe)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_europe, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for Europe')","136597bc":"corr_nm = nm_df.corr()\n\nmask = np.zeros_like(corr_nm)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_nm, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for North America')","73892a8e":"corr_sm = sm_df.corr()\n\nmask = np.zeros_like(corr_sm)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_sm, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for South America')","aa642b9b":"corr_aus = aus_df.corr()\n\nmask = np.zeros_like(corr_aus)\nmask[np.triu_indices_from(mask)] = True\nax = plt.axes()\nwith sns.axes_style(\"white\"):\n    p2 = sns.heatmap(corr_aus, mask=mask, square=True, annot = True, ax=ax)\nax.set_title('Happiness Matrix for Australia')","e148a4b4":"clr = {\"Europe\": \"b\", \"North America\": \"g\", \"Australia\":\"r\", \"Asia\": \"c\", \"South America\": \"m\", \"Africa\":\"y\"}","0d2e0ad1":"plt.scatter(data[\"continent\"], data[\"happiness_score\"], cmap=clr )\nplt.xticks(rotation=15)","88a5bdaa":"sns.boxplot( x=data[\"continent\"], y=data[\"happiness_score\"], palette=clr )\nplt.xticks(rotation=15)","4d8aef35":"sns.violinplot( x=data[\"continent\"], y=data[\"happiness_score\"], width=25, palette=clr )\nplt.xticks(rotation=15)","7d18a654":"grid = sns.pairplot(data, hue = 'continent', diag_kind = 'kde',\n             plot_kws = {'alpha': 0.6, 's': 80, 'edgecolor': 'k'},\n             size = 4)\ngrid\ngrid.savefig('PairPlot.png')","6c2bcfde":"data.head(2)","bbc4374d":"#ENCODING \nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\ndata[data.columns[0]] = labelencoder.fit_transform(data[data.columns[0]])\ndata[data.columns[1]] = labelencoder.fit_transform(data[data.columns[1]])","bc54817f":"data.head(2)","7af07d80":"X = data[data.columns[[0,1,3,4,5,6,7,8,9]]]\ny = data[data.columns[2]]","94e9637c":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)\n\nreg=LinearRegression()","c44cafd2":"reg.fit(X_train,y_train)","4f2e3395":"reg.score(X_train,y_train)","e19e5bf8":"pdt = reg.predict(X_test)\npdt","2499fdcb":"from sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\nrms = sqrt(mean_squared_error(y_test,pdt))\nrms","8536f072":"plt.scatter(pdt, y_test, color = 'red') \n\n# plot predicted data \nplt.plot(pdt, y_test, color = 'blue') ","aca285f0":"3. Correlation plot for each continent:","37f284ef":"This notebook is inspired from the Kaggle kernel: https:\/\/www.kaggle.com\/javadzabihi\/happiness-2017-visualization-prediction in which Visualization + Prediction is done using R language. In this notebook Visualization + Prediction is done using Python language. Dataset is taken from https:\/\/www.kaggle.com\/unsdsn\/world-happiness but updated with a column named \"Continent\".","16b35cf8":".","9c7d1cad":"No null values in the entire data set","d72a9099":"## Obtaining Data","0d944d28":"2. Creating separate dataframe for each continent:","8409c791":"2. Removing unnecessary columns: ","47191c0a":".","eb46fda1":"## Cleaning the data\n1. Renaming some of the columns","7d68c60c":".","35ef9336":"## Importing Libraries","276d7126":"## Visualisation\n1. Correlation plot:","30ef35eb":"1. Multiple Linear Regression:","0f4f90df":"##  Regresssion"}}