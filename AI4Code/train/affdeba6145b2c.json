{"cell_type":{"4ba18054":"code","85e66d64":"code","63cfb2d9":"code","5fb60780":"code","ac66e345":"code","63e7a657":"code","6eaf604d":"code","1e9a126e":"code","266fd74c":"code","957e32b5":"code","8f73f52a":"code","e4832062":"code","23fa28c0":"code","2ba74d39":"code","c38643b5":"code","2fd78787":"code","a58d780f":"code","e4e0d84c":"code","c5fda7e6":"code","21bf6773":"code","09ce8936":"code","d3f26fc4":"code","3346b911":"code","238e66ca":"code","2aad55e5":"code","0d750f36":"code","7d0afdfe":"code","f089f3e1":"code","0dffee48":"code","4e9b256d":"code","18f3cc76":"code","4d16343c":"code","201392c5":"code","8a1c85a2":"code","4a2b75d7":"code","046ca998":"code","c9f16b61":"markdown","2c80dc3a":"markdown","42065cf6":"markdown","a3a0f261":"markdown","ee1837a6":"markdown"},"source":{"4ba18054":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","85e66d64":"data = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\")","63cfb2d9":"data.head()","5fb60780":"data.tail()","ac66e345":"data.columns","63e7a657":"data.info()","6eaf604d":"data.dropna(inplace=True)","1e9a126e":"data.Year=data.Year.astype(int)","266fd74c":"data.head()","957e32b5":"#sales figures in america by years histogram\ndata.groupby(\"NA_Sales\")[\"Year\"].mean().plot(kind=\"hist\",color=\"r\", alpha=0.5,grid=True,figsize=(8,5))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES(millions)\")\nplt.title(\"sales figures in america by years\")\n\n","8f73f52a":"#NA_Sales EU_Sales Scatter Plot\ndata.plot(kind=\"scatter\",x=\"NA_Sales\",y=\"EU_Sales\",grid=True,marker=\"x\",figsize=(8,5))\nplt.xlabel('NA_Sales')              # label = name of label\nplt.ylabel('EU_Sales')\nplt.title('NA_Sales EU_Sales Scatter Plot') ","e4832062":"#NA_Sales JP_Sales Scatter Plot\ndata.plot(kind=\"scatter\",color='g',x=\"NA_Sales\",y=\"JP_Sales\",grid=True,marker=\"o\",figsize=(8,5))\nplt.xlabel('NA_Sales')              # label = name of label\nplt.ylabel('JP_Sales')\nplt.title('NA_Sales JP_Sales Scatter Plot') ","23fa28c0":"#NA_Sales Global_Sales Scatter Plot\ndata.plot(kind=\"scatter\",color='b',x=\"NA_Sales\",y=\"Global_Sales\",grid=True,marker=\"<\",figsize=(8,5))\nplt.xlabel('NA_Sales')              # label = name of label\nplt.ylabel('Global_Sales')\nplt.title('NA_Sales Global_Sales Scatter Plot') ","2ba74d39":"#popular game types in america by years\ndata.groupby([\"Genre\",\"Year\"])[\"NA_Sales\"].mean().plot(kind=\"line\",color=\"r\", alpha=0.5,grid=True,figsize=(15,10))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES\")\nplt.title(\"\")\n","c38643b5":"#sales figures in europe by years histogram\ndata.groupby(\"EU_Sales\")[\"Year\"].mean().plot(kind=\"hist\",alpha=1,grid=True,figsize=(8,5))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES(millions)\")\nplt.title(\"sales figures in europe by years\")","2fd78787":"#EU_Sales NA_Sales Scatter Plot\ndata.plot(kind=\"scatter\",x=\"EU_Sales\",y=\"NA_Sales\",grid=True,marker=\"x\",figsize=(8,5))\nplt.xlabel('EU_Sales')              # label = name of label\nplt.ylabel('NA_Sales')\nplt.title('EU_Sales NA_Sales Scatter Plot') ","a58d780f":"#EU_Sales JP_Sales Scatter Plot\ndata.plot(kind=\"scatter\",x=\"EU_Sales\",y=\"JP_Sales\",grid=True,marker=\"o\",figsize=(8,5))\nplt.xlabel('EU_Sales')              # label = name of label\nplt.ylabel('JP_Sales')\nplt.title('EU_Sales JP_Sales Scatter Plot') ","e4e0d84c":"#EU_Sales Global_Sales Scatter Plot\ndata.plot(kind=\"scatter\",color='b',x=\"EU_Sales\",y=\"Global_Sales\",grid=True,marker=\"<\",figsize=(8,5))\nplt.xlabel('EU_Sales')              # label = name of label\nplt.ylabel('Global_Sales')\nplt.title('EU_Sales Global_Sales Scatter Plot') ","c5fda7e6":"data.groupby([\"Genre\",\"Year\"])[\"EU_Sales\"].mean().plot(kind=\"line\",color=\"r\", alpha=0.5,grid=True,figsize=(15,10))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES\")\nplt.title(\"\")\n","21bf6773":"#sales figures in japan by years histogram\ndata.groupby(\"JP_Sales\")[\"Year\"].mean().plot(kind=\"hist\",alpha=1,grid=True,figsize=(8,5))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES(millions)\")\nplt.title(\"sales figures in japan by years\")","09ce8936":"#JP_Sales NA_Sales Scatter Plot\ndata.plot(kind=\"scatter\",x=\"JP_Sales\",y=\"NA_Sales\",grid=True,marker=\"x\",figsize=(8,5))\nplt.xlabel('JP_Sales')              # label = name of label\nplt.ylabel('EU_Sales')\nplt.title('JP_Sales NA_Sales Scatter Plot') ","d3f26fc4":"#JP_Sales EU_Sales Scatter Plot\ndata.plot(kind=\"scatter\",x=\"JP_Sales\",y=\"EU_Sales\",grid=True,marker=\"o\",figsize=(8,5))\nplt.xlabel('JP_Sales')              \nplt.ylabel('EU_Sales')\nplt.title('JP_Sales EU_Sales Scatter Plot') ","3346b911":"#JP_Sales Global_Sales Scatter Plot\ndata.plot(kind=\"scatter\",color='b',x=\"JP_Sales\",y=\"Global_Sales\",grid=True,marker=\"<\",figsize=(8,5))\nplt.xlabel('JP_Sales')              \nplt.ylabel('Global_Sales')\nplt.title('JP_Sales Global_Sales Scatter Plot') ","238e66ca":"data.groupby([\"Genre\",\"Year\"])[\"JP_Sales\"].mean().plot(kind=\"line\",color=\"r\", alpha=0.5,grid=True,figsize=(15,10))\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES\")\nplt.title(\"\")","2aad55e5":"data","0d750f36":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","7d0afdfe":"data.plot(kind=\"scatter\", x=\"Year\" , y=\"Global_Sales\",alpha=1,grid=True ,marker=\"o\",figsize=(8,5))","f089f3e1":"#Histogram showing global game sales by years \ndata.groupby(\"Global_Sales\")[\"Year\"].mean().plot(kind=\"hist\",color='g',figsize=(8,5),grid=True)\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"GAMES\")\nplt.title(\"showing global game sales by years \")","0dffee48":"#games released by years\ndata.plot(kind=\"scatter\", x=\"Genre\",y=\"Year\",alpha=1,marker=\"o\",grid=True,figsize=(15,8))\nplt.xlabel(\"GENRE\")\nplt.ylabel(\"YEAR\")","4e9b256d":"data","18f3cc76":"data_up_z=data[\"Global_Sales\"]>=20\ndata[data_up_z]","4d16343c":"selam=data_up_z.mean()","201392c5":"data[\"Global_Sales_an\"]=[\"high_sale\" if i>selam else \"low\" for i in data_up_z]\ndata.loc[:20,[\"Global_Sales_an\",\"Global_Sales\"]]","8a1c85a2":"data[\"Year\"].mean()","4a2b75d7":"data=data.drop(columns=\"Year_an\")","046ca998":"data","c9f16b61":"<a id=\"2\"><\/a> <br>\n# EU_Sales  analysis","2c80dc3a":"<a id=\"4\"><\/a> <br>\n# Global_Sales  analysis","42065cf6":"# [NA_Sales Analysis](#1)<br>\n# [EU_Sales Analysis](#2)<br>\n# [JP_Sales Analysis](#3)<br>\n# [Gobal_Sales Analysis](#4)<br>\n","a3a0f261":"<a id=\"3\"><\/a> <br>\n# JP_Sales  analysis","ee1837a6":"<a id=\"1\"><\/a> \n# NA_Sales Analaysis"}}