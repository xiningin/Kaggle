{"cell_type":{"9786ca6f":"code","d0260c96":"code","5d741e4f":"code","5d29caf1":"code","f60c2e5f":"code","b843d30f":"code","6aa11abc":"code","0c520f15":"code","013074d4":"code","97159ae7":"code","0afab27b":"code","8287e7df":"code","15de6733":"code","23b41643":"code","45cefc53":"code","05673d11":"code","1cfc3b79":"code","4ab8d173":"code","e4a1fe28":"code","6fbf26c2":"code","c715e64e":"code","b6082b56":"code","11e38e95":"code","de641cbc":"code","370653f5":"code","7a398761":"code","1276f8f9":"code","73cf7049":"markdown","a83fe28b":"markdown","1545f73f":"markdown","3f9c007a":"markdown","bd6bdb25":"markdown","58474b1d":"markdown"},"source":{"9786ca6f":"import numpy as np \nimport pandas as pd \nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras import layers\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow import keras\nfrom collections import Counter\nfrom sklearn.svm import SVC\nimport seaborn as sns\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.model_selection import GridSearchCV","d0260c96":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5d741e4f":"common_path='\/kaggle\/input\/fashionmnist'\ntrain_df=pd.read_csv(os.path.join(common_path,'fashion-mnist_train.csv'))\ntest_df=pd.read_csv(os.path.join(common_path,'fashion-mnist_test.csv'))","5d29caf1":"print('train dataframe shape:',train_df.shape)\nprint('test dataframe shape:',test_df.shape)","f60c2e5f":"y_train=np.array(train_df['label'])\ntrain_df.drop('label',axis=1,inplace=True)","b843d30f":"y_test=np.array(test_df['label'])\ntest_df.drop('label',axis=1,inplace=True)","6aa11abc":"def getLabels(num):\n    if (num==0):\n        return 'T-shirt\/top'\n    elif (num==1):\n        return 'Trouser'\n    elif(num==2):\n        return 'Pullover'\n    elif(num==3):\n        return 'Dress'\n    elif(num==4):\n        return 'Coat'\n    elif(num==5):\n        return 'Sandal'\n    elif(num==6):\n        return 'Shirt'\n    elif(num==7):\n        return 'Sneaker'\n    elif(num==8):\n        return 'Bag'\n    else:\n        return 'Ankle boot'\n\ntrain_labels=[]\ntest_labels=[]\nfor elem in y_train:\n    train_labels.append(getLabels(elem))\n    \nfor elem in y_test:\n    test_labels.append(getLabels(elem))","0c520f15":"plt.figure(figsize=(10,10))\n\nplt.subplot(2,2,1)\nclass_wise_freq=Counter(train_labels)\nsns.barplot(x=list(class_wise_freq.keys()),y=list(class_wise_freq.values()))\nplt.xticks(rotation=40)\nplt.xlabel('Classes')\nplt.ylabel('Counts')\nplt.title('Train Data Class Wise Counts')\n\nplt.subplot(2,2,2)\nclass_wise_freq=Counter(test_labels)\nsns.barplot(x=list(class_wise_freq.keys()),y=list(class_wise_freq.values()))\nplt.xticks(rotation=40)\nplt.xlabel('Classes')\nplt.ylabel('Counts')\nplt.title('Test Data Class Wise Counts')\nplt.show()","013074d4":"x_train=train_df.values\nx_test=test_df.values","97159ae7":"x_train=x_train\/255\nx_test=x_test\/255","0afab27b":"x_train_small,x_validate,y_train_small,y_validate=train_test_split(x_train,y_train)","8287e7df":"fig,axis=plt.subplots(4,4)\ncount=0\nfor row in range(4):\n    for col in range(4):\n        axis[row][col].imshow(x_train_small[count].reshape(28,28))\n        axis[row][col].set_title(train_labels[count])\n        count+=1\nplt.show()","15de6733":"num_classes=10\nimg_width=28\nimg_height=28\nnum_channels=1\n\nimg_shape=(img_width,img_height,num_channels)\n\n# convert class vectors to binary class matrices\ny_train_small_categorical = keras.utils.to_categorical(y_train_small, num_classes)\ny_validate_categorical = keras.utils.to_categorical(y_validate, num_classes)\ny_test_categorical=keras.utils.to_categorical(y_test,num_classes)","23b41643":"fig,axis=plt.subplots(4,4)\ncount=0\nfor row in range(4):\n    for col in range(4):\n        axis[row][col].imshow(x_train_small[count].reshape(28,28))\n        axis[row][col].set_title(train_labels[count])\n        count+=1\nplt.show()","45cefc53":"x_train_small.shape,x_validate.shape","05673d11":"x_train_small=x_train_small.reshape(-1,img_width,img_height,num_channels)\nx_validate=x_validate.reshape(-1,img_width,img_height,num_channels)\nx_test=x_test.reshape(-1,img_width,img_height,num_channels)","1cfc3b79":"x_train_small.shape,x_validate.shape,x_test.shape","4ab8d173":"cnn_model = keras.Sequential(\n    [\n        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\",input_shape=img_shape),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Flatten(),\n        layers.Dropout(0.5),\n        layers.Dense(32,activation=\"relu\"),\n        layers.Dense(num_classes, activation=\"softmax\"),\n    ]\n)","e4a1fe28":"cnn_model.summary()","6fbf26c2":"cnn_model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])","c715e64e":"history=cnn_model.fit(x_train_small, y_train_small_categorical,epochs=40,validation_data=(x_validate,y_validate_categorical))","b6082b56":"plt.figure(figsize=(10,10))\n\nplt.subplot(2,2,1)\nplt.plot(history.history['loss'],label='Train Loss')\nplt.plot(history.history['val_loss'],label='Validation Loss')\nplt.legend()\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.title('Loss Vs Epochs')\n\nplt.subplot(2,2,2)\n\nplt.plot(history.history['accuracy'],label='Train Accuracy')\nplt.plot(history.history['val_accuracy'],label='Validation Accuracy')\nplt.legend()\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.title('Accuracy Vs Epochs')\n\nplt.show()","11e38e95":"x_test.shape,y_test.shape","de641cbc":"score=cnn_model.evaluate(x_test,y_test_categorical)\nprint('Test Loss:',round(score[0],2))\nprint('Test Accuracy:',round(score[1],2))","370653f5":"y_test_predicted=cnn_model.predict_classes(x_test)","7a398761":"print(classification_report(y_test,y_test_predicted))","1276f8f9":"print(confusion_matrix(y_test,y_test_predicted))","73cf7049":"## CNN","a83fe28b":"## Training and Validation Loss And Accuracy Vs Epochs","1545f73f":"## Machine Learning","3f9c007a":"## So we can see from the above metrics that class 6 is underperforming in terms precision and Recall","bd6bdb25":"## Converting the train test and validate set into the format which keras expects i.e (width,height,num_channels)","58474b1d":"## Rescaling the pixel values to be between 0 and 1 only"}}