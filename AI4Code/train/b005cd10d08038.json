{"cell_type":{"dfcd2dfd":"code","4fa0d233":"code","254c6df3":"code","e7b27709":"code","423b2823":"code","74fd7828":"code","53050b88":"code","e4a11a7f":"code","8da500bb":"code","d8d2220c":"code","4a1c63e9":"code","05f4d059":"code","85879ec0":"code","2db30cf7":"code","543a0b99":"code","9b3a2a5a":"code","40c77af2":"code","e71220d6":"code","1483045d":"markdown","a986f638":"markdown","747d19af":"markdown","acbfd432":"markdown","8fc26988":"markdown","90aa08be":"markdown","4a485c71":"markdown","80589949":"markdown","7c3a277c":"markdown","b2a9577c":"markdown","21bf763a":"markdown","d99778a8":"markdown"},"source":{"dfcd2dfd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n","4fa0d233":"data = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")","254c6df3":"name = [\"Gorulmeyenler\", \"Eastern Turkey\"]\nauthor = [\"Roy Jacobsen\", \"Sevan Nisanyan\"]\npages = [179,195]\nListLabel = [\"name\",\"author\",\"pages\"]\nListColumn = [name,author,pages]\nzipp = dict(zip(ListLabel,ListColumn))\ndf = pd.DataFrame(zipp)\ndf","e7b27709":"df[\"type\"] = [\"Novel\",\"Travel\"] #add new column\ndf[\"year\"] = 0 #broadcasting\ndf\n","423b2823":"#before plotting examine data set.\ndata.info()","74fd7828":"#change and organize column names.\ndata.columns = [each.split()[0]+\"_\"+each.split()[1] if (len(each.split()) > 1) else each for each in data.columns]\ndata.rename(columns = {\"race\/ethnicity\" : \"race_ethnicity\"}, inplace = True)\ndata.columns","53050b88":"#line plot\ndata2 = data.loc[:,[\"writing_score\",\"math_score\",\"reading_score\"]]\ndata2.plot()\nplt.show()","e4a11a7f":"#subplots\ndata2.plot(subplots = True)\nplt.show()","8da500bb":"#scatter plot\ndata2.plot(kind = \"scatter\", x = \"reading_score\", y = \"writing_score\")\nplt.xlabel(\"Reading Score\")\nplt.ylabel(\"Writing Score\")\nplt.title(\"Correlation Between Writing and Reading Scores\")\nplt.show()","d8d2220c":"#histogram\ndata2.plot(kind = \"hist\", y = \"math_score\", alpha = 0.7, color = \"r\", range = (0,45), density = False)\ndata2.plot(kind = \"hist\", y = \"math_score\", alpha = 0.7, color = \"r\", density = False,cumulative = True)\nplt.show()","4a1c63e9":"time_list = [\"1994-09-07\",\"1986-01-06\"]\nprint(time_list)\nprint(type(time_list[1]))\ntime_list = pd.to_datetime(time_list)\nprint(time_list)\nprint(type(time_list))\n","05f4d059":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata1 = data.head()\ndate_list = [\"2000-01-10\",\"2000-01-02\",\"2000-03-11\",\"2000-04-05\",\"2001-07-08\"]\ndate_list = pd.to_datetime(date_list)\ndata1[\"date\"] = date_list\ndata1 = data1.set_index(\"date\")\ndata1","85879ec0":"print(data1.loc[\"2000-01-10\"])","2db30cf7":"print(data1.loc[\"2000-01-01\" : \"2000-03-03\"])","543a0b99":"data1.resample(\"A\").mean()","9b3a2a5a":"data1.resample(\"M\").mean()","40c77af2":"data1.resample(\"M\").first().interpolate(\"linear\")","e71220d6":"data1.resample(\"M\").mean().interpolate(\"linear\")","1483045d":"# **VISUAL EXPLORATORY DATA ANALYSIS**\n\nBelow, you can find some codes for basic visualization.\n    * Line Plot\n    * Subplot\n    * Scatter Plot\n    * Histogram","a986f638":"# **RESAMPLING PANDAS TIME SERIES**","747d19af":"You can add a new column which includes different or same values to data frame. \nIf you apply this with different values, you should write all rows one by one. \nIf you give same value to entire column, create a column and just type the value. It is called as broadcasting.","acbfd432":"# **INDEXING PANDAS TIME SERIES**\n","8fc26988":"# **BUILDING DATA FRAMES FROM SCRATCH**","90aa08be":"If you want to add a date column to your data set, you may create a date's list. Of course, these dates type will be object(string). So, you must convert their types to  \"datetime\" with Pandas's **to_datetime()** method. ","4a485c71":"Now, you can filter your data set according to date value.","80589949":"Here, your data set turned into a time series.","7c3a277c":"For building a new data frame:\n*     I create four different lists(1st one is for the name of books, 2nd one is for the author's names, 3rd one is for the number of pages and 4th one is for the label of columns).\n*     Using first three lists i create a new list which includes this lists values. This list would be data frame's columns.\n*     With **zip()** i zipped the label list and the column list. And assigned the result to a dictionary.\n*     Then, i turned this dictionary to a data frame with Pandas's **DataFrame()** method.","b2a9577c":"With **resample()** you can create a new sample from your data set. ","21bf763a":"In this example we resampled our data set by year. And then, calculated the average of each year.\n\nYou can use \"M\" parameter for resample by month:","d99778a8":"With interpolation, you can fill the missing values. But of course, just numeric values."}}