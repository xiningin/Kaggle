{"cell_type":{"7969240b":"code","f67bdc3d":"code","fa2819fb":"code","ff3af230":"code","d4e50ee3":"code","e4ca77cd":"code","05ecfb2e":"code","5c5840a5":"code","1e89837e":"code","07c06006":"code","7b6cdb28":"code","a77eb05c":"code","112e0fa7":"code","0325ee9b":"code","2dcb67be":"code","4f3e5fef":"code","ae068bbb":"code","50b99f96":"code","c7a07b99":"code","7aa698ec":"code","453fce69":"code","7a652a0e":"code","5a794878":"code","866fd308":"code","0bbbff4f":"code","f2dcd979":"code","e8a6a0a9":"code","51a7dc6b":"markdown","9bca6e8a":"markdown","907b5536":"markdown","cd965cfd":"markdown","49e8d1e5":"markdown","c75209bc":"markdown","7d8086aa":"markdown","36bd7201":"markdown","d2b05ab7":"markdown","14fcd11f":"markdown","5689dcc8":"markdown","a5706cf1":"markdown","2818fc58":"markdown","d44dd935":"markdown","b1091cb1":"markdown","4fa7ede7":"markdown","131225e1":"markdown","4e1de18c":"markdown","cc519b90":"markdown","eefee762":"markdown","05ca0742":"markdown","6248d68f":"markdown","790a8244":"markdown","b8e45ef6":"markdown","60fac3bd":"markdown","7b3c1e97":"markdown","d92dfa9d":"markdown","96a7bd97":"markdown","63cb0bb6":"markdown","134a5a64":"markdown","1f390f1a":"markdown","6dc1ac7b":"markdown"},"source":{"7969240b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\n\nimport os\nfrom matplotlib import rcParams\n\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f67bdc3d":"data = pd.read_csv('..\/input\/googleplaystore.csv')\ndata2 = pd.read_csv('..\/input\/googleplaystore_user_reviews.csv')\n\ndata.head()","fa2819fb":"print(\"Shape of the dataframe is\",data.shape)\nprint(\"The number of nulls in each column are \\n\", data.isna().sum())","ff3af230":"print(\"Percentage null or na values in df\")\n((data.isnull() | data.isna()).sum() * 100 \/ data.index.size).round(2)","d4e50ee3":"data.head()\n# data.Installs.unique()\n# data.Size.unique()","e4ca77cd":"df=data\ndf.Installs = df.Installs.replace(\"Free\", np.nan)\ndf.dropna(how ='any', inplace = True)\ndf.Installs = df.Installs.astype(str)\ndf.Installs = df.Installs.apply(lambda x: x.replace(',',''))\ndf.Installs = df.Installs.apply(lambda x: x.replace('+',''))\ndf.Installs = df.Installs.apply(lambda x: int(x))\ndf.head()","05ecfb2e":"df['Size'].replace('Varies with device', np.nan, inplace = True ) \ndf.Size = (df.Size.replace(r'[kM]+$', '', regex=True).astype(float) * \\\ndf.Size.str.extract(r'[\\d\\.]+([KM]+)', expand=False)\n            .fillna(1)\n            .replace(['k','M'], [10**3, 10**6]).astype(int))\ndf.Size = df.Size.apply(lambda x: x\/(10**6))\ndf.rename(columns={'Size': 'Size(in MB)'}, inplace=True)\n# df.Size.unique()\n# df.head()","5c5840a5":"df.Category = df.Category.apply(lambda x: x.replace('_',' '))\ndf.Price = df.Price.apply(lambda x: x.replace('$',''))\ndf.rename(columns={'Price': 'Price(in $)'}, inplace=True)","1e89837e":"rcParams['figure.figsize'] = 15,7\ncategory_plot = sns.countplot(x=\"Category\",data=df, palette = \"spring\")\ncategory_plot.set_xticklabels(category_plot.get_xticklabels(), rotation=90, ha=\"right\")\ncategory_plot \nplt.title('TOTAL apps in each category',size = 20)","07c06006":"# X['Content Rating'].value_counts()\nrcParams['figure.figsize'] = 15,7\ncontent_plot = sns.countplot(x=\"Content Rating\",data=df, palette = \"pink\")\ncontent_plot.set_xticklabels(content_plot.get_xticklabels(), rotation=90, ha=\"right\")\ncontent_plot \nplt.title('Content Rating distribution',size = 20)","7b6cdb28":"# # X['Type'].value_counts()\nrcParams['figure.figsize'] = 10,7\ntype_plot = sns.countplot(x=\"Type\", data=df, palette = \"twilight\")\ntype_plot.set_xticklabels(type_plot.get_xticklabels(), rotation=90, ha=\"right\")\ntype_plot \nplt.title('Number of Free Apps vs Paid Apps',size = 20)\n","a77eb05c":"rcParams['figure.figsize'] = 10,7\ntype_size = sns.boxplot(x=\"Type\",y=\"Size(in MB)\", data=df, palette = \"rainbow\")\ntype_size.set_xticklabels(type_size.get_xticklabels(), rotation=90, ha=\"right\")\ntype_size \nplt.title('Size Range for free and paid Apps',size = 20)","112e0fa7":"rcParams['figure.figsize'] = 15,10\ncontent_price = sns.stripplot(y=\"Content Rating\",x=\"Price(in $)\", data=df, palette = \"Set1\")\ncontent_price.set_xticklabels(content_price.get_xticklabels(), rotation=90, ha=\"right\")\ncontent_price \nplt.title('Content Rating vs Price',size = 20)","0325ee9b":"df['Price(in $)'] = df['Price(in $)'].apply(lambda x: float(x))\nrcParams['figure.figsize'] = 15,7\npriced_apps=df[df['Price(in $)'] != 0.0]\nprice_plot = sns.countplot(priced_apps['Price(in $)'], palette = \"inferno\")\nprice_plot.set_xticklabels(price_plot.get_xticklabels(), rotation=90, ha=\"right\")\nprice_plot \nplt.title('Number of apps for every price',size = 20)","2dcb67be":"# X['Installs'].value_counts()\nrcParams['figure.figsize'] = 15,7\ninstall_plot = sns.countplot(y=\"Installs\",data=df, palette = \"PuBu\")\ninstall_plot.set_xticklabels(install_plot.get_xticklabels(), rotation=90, ha=\"right\")\ninstall_plot \nplt.title('Installs count distribution',size = 20)","4f3e5fef":"rcParams['figure.figsize'] = 15,7\nratings_plot = sns.countplot(x=\"Rating\",data=df, palette = \"inferno\")\nratings_plot.set_xticklabels(ratings_plot.get_xticklabels(), rotation=90, ha=\"right\")\nratings_plot \nplt.title('Rating Distribution',size = 20)","ae068bbb":"content_ratings = sns.violinplot(x=\"Content Rating\",y=\"Rating\",data=df, kind=\"box\", height = 10 ,palette = \"Set3\")\ncontent_ratings.set_xlabel(xlabel = 'Content Rating', fontsize = 9)\ncontent_ratings.set_ylabel(ylabel = 'Rating', fontsize = 9)\ncontent_ratings.set_title(label = 'Rating vs Content Rating', fontsize = 20)\nplt.show()\n","50b99f96":"# X.Installs.mean()\n# X.Installs.median()\ndf= df.drop_duplicates(subset='App',keep='first')\ndf['Installs'] = df['Installs'].apply(lambda x: int(x))\ndf[['App','Installs','Category','Content Rating','Price(in $)']].head()\nnewdf=df[['App','Installs','Category','Content Rating','Price(in $)','Reviews','Genres']].groupby(['Installs'], sort = True)\nnewdf=newdf.filter(lambda x: x['Installs'].mean() >= 1000000000)\nnewdf=newdf.sort_values(by=['Installs'])\nnewdf\n","c7a07b99":"rcParams['figure.figsize'] = 15,7\nfree_categories = sns.countplot(x=\"Category\",data=newdf, palette = \"bone\")\nfree_categories.set_xticklabels(free_categories.get_xticklabels(), rotation=90, ha=\"right\")\nfree_categories \nplt.title('Top Categories for Free Apps',size = 20)","7aa698ec":"rcParams['figure.figsize'] = 15,7\nfree_genres = sns.countplot(y=\"Genres\",data=newdf, palette = \"spring\")\nfree_genres.set_xticklabels(free_genres.get_xticklabels(), rotation=90, ha=\"right\")\nfree_genres \nplt.title('Top Genres for Free Apps',size = 20)","453fce69":"new=df[['App','Category','Content Rating','Price(in $)','Reviews']].groupby(['Price(in $)'], sort = True)\nnew=new.filter(lambda x: x['Price(in $)'].mean() != 0)\nnew=new.sort_values(by=['Price(in $)'])\nnew\nnewdf2=df[['App','Installs','Genres']].groupby(['Installs'], sort = True)\nnewdf2=newdf2.filter(lambda x: x['Installs'].mean() >= 1000000)\nnewdf2=newdf2.sort_values(by=['Installs'])\nnewdf2\n\ns1 = pd.merge(new, newdf2, how='inner', on=['App'])\ns1\n","7a652a0e":"rcParams['figure.figsize'] = 15,7\npaid_categories = sns.countplot(x=\"Category\",data=s1, palette = \"bone\")\npaid_categories.set_xticklabels(paid_categories.get_xticklabels(), rotation=90, ha=\"right\")\npaid_categories \nplt.title('Top Categories for PAID APPS',size = 20)","5a794878":"rcParams['figure.figsize'] = 15,7\npaid_genres = sns.countplot(y=\"Genres\",data=s1, palette = \"spring\")\npaid_genres.set_xticklabels(paid_genres.get_xticklabels(), rotation=90, ha=\"right\")\npaid_genres \nplt.title('Top Genres for PAID APPS',size = 20)","866fd308":"df['new'] = pd.to_datetime(df['Last Updated'])\ndf.drop(labels = ['Last Updated'], axis = 1, inplace = True)\ndf.rename(columns={'new': 'Last Updated'}, inplace=True)","0bbbff4f":"freq= pd.Series()\nfreq=df['Last Updated'].value_counts()\nnewfreq=freq[freq>50]\nnewfreq.plot()\nplt.xlabel(\"Dates\")\nplt.ylabel(\"Number of updates\")\nplt.title(\"Time series plot of Last Updates\")","f2dcd979":"df['Rating'] = df['Rating'].apply(lambda x: float(x))\ndf['Reviews'] = df['Reviews'].apply(lambda x: int(x))\n\nnewdf_rate=df[['App','Rating','Category','Content Rating']].groupby(['Rating'], sort = True)\nnewdf_rate=newdf_rate.filter(lambda x: x['Rating'].mean() >= 4.5)\nnewdf_rate=newdf_rate.sort_values(by=['Rating'])\n\nnewdf_reviews=df[['App','Reviews']].groupby(['Reviews'], sort = True)\nnewdf_reviews=newdf_reviews.filter(lambda x: x['Reviews'].mean() >= 255435)\nnewdf_reviews=newdf_reviews.sort_values(by=['Reviews'])\n\nnewdf_installs=df[['App','Installs']].groupby(['Installs'], sort = True)\nnewdf_installs=newdf_installs.filter(lambda x: x['Installs'].mean() >= 10000000)\nnewdf_installs=newdf_installs.sort_values(by=['Installs'])\n\ns1 = pd.merge(newdf_reviews, newdf_rate, how='inner', on=['App'])\ns2 = pd.merge(s1, newdf_installs, how='inner', on=['App'])\ns2","e8a6a0a9":"rcParams['figure.figsize'] = 15,7\nlikeable_apps = sns.countplot(y=\"Category\",data=s2, palette = \"Set3\")\nlikeable_apps.set_xticklabels(likeable_apps.get_xticklabels(), rotation=90, ha=\"right\")\nlikeable_apps \nplt.title('CATEGORIES OF MOST LIKEABLE APPS ON THE ANDROID APP STORE',size = 20)","51a7dc6b":"### Now, lets get the TOP GENRES out of all the highest installed PAID APPS","9bca6e8a":"# Breakdown of this notebook:\n\n1. **Data Cleaning**:\n              Removing redundant data\n              Dropping NA,nulls\n              Making new features\n              Renaming columns\n1. **Data Visualization**:\n              Visualizing Distribution of the useful features\n              Visualizing relation between different features\n1. **How much do Free Apps and Paid Apps differ?**\n1. **Is there a relation between the Android Update Dates of all the Apps?**\n1. **Which are the best Apps on App Store?**\n1. **Which Category has more likeable Apps?**\n","907b5536":"# Summary for Free vs Paid Apps:-","cd965cfd":"### First step is to find the highest installed paid Apps","49e8d1e5":" # Which Category has more likeable Apps?","c75209bc":"* The number of **FREE APPS**=7588\n* The number of **PAID APPS**=602\n\nMost of the Apps in the App Store are **Free apps**.We will visualize both the Types in detail later in the kernel.","7d8086aa":"As you can see only **359** apps make it to this list from all categories.The apps you see in this list are well known and famous and best in their respective category.\nTo name a few, apps like **Google Photos, Instagram, Subway surfers,Clash of Clans, Shareit, Dictionary** etc are part of this list.\n\n","36bd7201":"## RATINGS","d2b05ab7":"1. The Ratings distribution is **left skewed.**\n2. Most of the apps are rated **between 4.0 and 4.7.**","14fcd11f":"## PRICE DISTRIBUTION","5689dcc8":"## Please upvote and feel free to give any feedback\/comment below!!","a5706cf1":"**I think an App which has large number of reviews , high rating on App store and large number of installs can be deemed to be likeable for any new user * i.e * *any new user is more likely to like the App experience if these criteria are met.***\n\n*From the dataframe obtained above we'll plot and see which categories make up most of the likeable apps.*","2818fc58":"### First step is to get the most installed free apps.","d44dd935":"# How much do Free Apps and Paid Apps differ?","b1091cb1":"## Exploring Paid Apps","4fa7ede7":"Most of the apps in the dataframe have **1 million** installs followed by **10 million** and **100k**.","131225e1":"# Is there a relation between the Android Update Dates of all the Apps?","4e1de18c":" **Gaming Apps** outruns other categories by huge margin in the criteria of our most LIKEABLE category.\n\n**Does this mean people tend to give reviews and ratings whenever they play a game?** I think yes! **The graph above suggests that you are more likely to give a rating or review for a gaming app then any other app.** Games like **Subway surfer,8ballpool, Clash royale, Clash of Clans** have millions of reviews,high rating and millions of installs.\n\nPlease note that Communication Apps like **Instagram** etc individually have more number of installs, reviews and higher rating but more Gaming Apps make it to this list than Communication Apps as is evident by the plot above.","cc519b90":"1. **People tend to spend their money on games and Personalization but when it comes to Social Networking and Communication they tend to install the free Apps on the Android Store**.\n1.  The **2 most installed Paid Apps** are both **games(Minecraft and Hitman:Sniper)**\n1.  The majority of most installed **free** Apps lie in the **Communication** Category.\n1.  The majority of most installed **Paid** Apps lie in the **Gaming** Category.\n1. The **Content Rating** for Free apps is mostly for Everyone or Teen , but for Paid Apps 6 out of 22 apps are not for users under 10 years of age.","eefee762":"1. We have filtered only the priced apps from the Price column to see the price distributution of priced apps.\n2. Most paid apps are priced **3.02 Dollars** interestingly.\n3. Paid apps mostly cost **3.02 dollars, 0.99 dollars ,5.49 dollars ,2.00 dollars or 4.29 dollars** \n","05ca0742":"* Most of the Apps with Content Rating EVERYONE lie below 50 dollars. However there are some apps that lie in the 350-400 dollars bracket!!\n* The mature rated apps(10+, 17+, 18+) are mosty free or cheap.","6248d68f":"# Data Visualization","790a8244":"\n**Family,Game and Tools** are the most downloaded categories.\n\n\n","b8e45ef6":"### The criteria I have selected are:\n1. High **rating**\n1. Large number of **reviews**\n1. Large number of **installs**\n\n\n* I haven't taken **Price** as a parameter for this selection because I believe an expensive app can be perceived to be better than a similar free app if it has high rating,reviews and installs.\n* I think features like **Content Rating, Android Version, Last Update time, Size of the App, Current version of the App** are irrelevant in this selection as well for obvious reasons.","60fac3bd":"### Next step is to visualize the TOP CATEGORIES out of most installed PAID APPS in the dataframe obtained above.","7b3c1e97":"* I have filtered and selected the dates on which most number of Apps were last updated.\n* The above plot shows that between **July 15,2018** and **August 1,2018** majority of the Apps were updated as is clear by the upward trend in the graph above.","d92dfa9d":"### Next step is to visualize the TOP CATEGORIES out of most installed FREE APPS in the dataframe obtained above.","96a7bd97":"## INSTALLS DISTRIBUTION","63cb0bb6":"### Now, lets get the TOP GENRES out of all the highest installed FREE APPS","134a5a64":"### Exploring Free Apps","1f390f1a":"* **Everyone , Teen** constitute the majority Content Rating of all the apps.\n* **Unrated and Adults ony 18+** have count less then 10.","6dc1ac7b":"# Which are the best Apps on App Store?"}}