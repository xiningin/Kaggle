{"cell_type":{"1709ee97":"code","6538ec16":"code","607691f2":"code","6cafaef7":"code","30eeb5c2":"code","3e78634c":"code","2a86ff1b":"code","2eeb1691":"code","230ae182":"code","216e4b63":"code","18b7c076":"code","c801fe95":"code","010db4a1":"code","6c6b62ef":"code","ccaf94fd":"code","c02a4cba":"markdown"},"source":{"1709ee97":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6538ec16":"df= pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf","607691f2":"y= df.output\ny","6cafaef7":"from sklearn import svm","30eeb5c2":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom mpl_toolkits.mplot3d import Axes3D","3e78634c":"df.output.unique()","2a86ff1b":"sns.countplot(x='sex',hue='output',data=df)","2eeb1691":"df=df.drop('output',axis=1)\ndf","230ae182":"df.isnull().sum()","216e4b63":"from sklearn import decomposition","18b7c076":"pca = decomposition.PCA(n_components=3)","c801fe95":"pca.fit(df)\nX = pca.transform(df)\nX","010db4a1":"clf = svm.SVC()\nclf.fit(X, y)","6c6b62ef":"clf.support_vectors_","ccaf94fd":"from mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure(1, figsize=(4, 3))\nplt.clf()\nax = Axes3D(fig, rect=[0, 0, .95, 1], elev=48, azim=134)\nax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y, cmap=plt.cm.nipy_spectral,edgecolor='k')\n\nax.w_xaxis.set_ticklabels([])\nax.w_yaxis.set_ticklabels([])\nax.w_zaxis.set_ticklabels([])","c02a4cba":"biased distribution "}}