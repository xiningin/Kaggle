{"cell_type":{"7c382e3f":"code","d5cae443":"code","96eb4478":"code","1e719450":"code","a6862c75":"code","87d0df41":"code","599f3b0f":"code","ca82855a":"code","9bf2d25c":"code","55d07896":"code","cd0d5e45":"code","76b1d468":"code","7cc315d3":"code","bba5afe4":"code","57486ce9":"code","f0683459":"code","3b0dd772":"markdown","88b98331":"markdown","6539cb91":"markdown","0f594016":"markdown","4f72db27":"markdown","7552c22f":"markdown","81251b65":"markdown"},"source":{"7c382e3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5cae443":"df_andriod = pd.read_csv('\/kaggle\/input\/android-phones\/Android Phones.csv')\ndf_andriod.head()","96eb4478":"df_andriod.isna().sum()","1e719450":"df_andriod['Release'].replace(np.nan, 'UNKNOWN', inplace=True)","a6862c75":"df_andriod.dtypes","87d0df41":"year = []\nmonth = []\ndef get_date(x):\n    x = x.split('\/')\n    year.append(x[0])\n    try:\n        month.append(x[1])\n    except:\n        month.append('Unreleased')\ndf_andriod['Release'].apply(lambda x : get_date(x) )","599f3b0f":"df_andriod['Year'] = year\ndf_andriod['Month'] = month","ca82855a":"df_andriod.drop('Release', inplace=True, axis=1)\ndf_andriod.drop_duplicates()","9bf2d25c":"\nsns.displot(data=df_andriod, x='Year', height=8)\nplt.xticks(rotation=90, fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.show();","55d07896":"plt.figure(figsize=(15,8))\nsns.histplot(data = df_andriod, x='Version')\nplt.xticks(rotation=90, fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.show();","cd0d5e45":"df_andriod.Version.value_counts()['Android 11']","76b1d468":"# 2022 phones\n\ndf_andriod[['Name', 'Year']].groupby('Year').agg(['unique'])['Name']['unique']['2022'].item()","7cc315d3":"# 2021 phones\n\ndf_andriod[['Name', 'Year']].groupby('Year').agg(['unique'])['Name']['unique']['2021']","bba5afe4":"Brands = df_andriod[['Name', 'Brand']].groupby('Brand').agg(['count'])['Name']['count'].sort_values(ascending=False)\n\nplt.figure(figsize=(15,8))\nsns.barplot(x=Brands.index, y=Brands.values)\nplt.xticks(rotation=90, fontsize=13)\nplt.title('Brands', fontsize=15)\nplt.xlabel('Brand Name', fontsize=14)\nplt.ylabel('Number Of Phones', fontsize=14)\nplt.show();","57486ce9":"#brands name\n\ndf_andriod.Brand.unique()","f0683459":"#number of brands\n\ndf_andriod.Brand.unique().__len__()","3b0dd772":"### How many phones use Android 11 ?","88b98331":"### How many brands are there?","6539cb91":"### Which phones were released the latest ?","0f594016":"## Data Cleaning","4f72db27":"## Data Visulatization","7552c22f":"### Which brand has the most phones released ?","81251b65":"## Data Processing"}}