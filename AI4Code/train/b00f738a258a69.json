{"cell_type":{"db5dbb20":"code","2999f406":"code","467ce599":"code","1aca892f":"code","c856d1fc":"code","2f0f16e4":"code","48e25dca":"code","672c2c4f":"code","d20a51e4":"code","54f8ab73":"code","a214053a":"markdown","a22275a6":"markdown","b5b70e9a":"markdown","ccc3a31f":"markdown","fb88b3d0":"markdown","c30e0ca3":"markdown","be68478e":"markdown","8201ec55":"markdown","62ada25f":"markdown","ded1b579":"markdown"},"source":{"db5dbb20":"!pip install deepface","2999f406":"import re\nimport traceback\nfrom deepface import DeepFace\nimport random \nrandom.seed(3)\nimport cv2 \nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom PIL import Image\nimport matplotlib.image as mpimg\nimport os\nimport glob\nimport pandas as pd\nimport numpy as np","467ce599":"os.getcwd()\n","1aca892f":"## Total images in the folder\nimg_len=len(glob.glob('\/kaggle\/input\/human-faces\/Humans\/*'))","c856d1fc":"print(img_len)\n## 7219 total images","2f0f16e4":"## Get the gender from the loop\n## The functio iterates over the images and uses the deepface age and gender pre trained weights to predict the age and gender.\n## Dict is storing Gender,Age and agebucket with key as image name\ndef calculate_gender(image,img_name):\n    name={}\n    gender=[]\n    age=[]\n    agebucket=[]\n    try:\n        img_arr=cv2.imread(image)\n        ## get gender\n        response=DeepFace.analyze(img_arr,actions=[\"gender\",\"age\"],enforce_detection=False)\n        gender.append(response['gender'])\n        age.append(response['age'])\n        ## Bucket the age\n        if int(age[0])>=13 and int(age[0])<=17:\n            agebucket.append('13-17years')\n        elif int(age[0])>17 and int(age[0])<=24:\n            agebucket.append('18-24years')\n        elif int(age[0])>24 and int(age[0])<=34:\n            agebucket.append('25-34years')\n        elif int(age[0])>34 and int(age[0])<=44:\n            agebucket.append('35-44years')\n        elif int(age[0])>44 and int(age[0])<=54:\n            agebucket.append('45-54years')\n        elif int(age[0])>54 and int(age[0])<=64:\n            agebucket.append('55-64years')\n        elif int(age[0])>64:\n            agebucket.append('above 65years')\n        else:\n            agebucket.append('NA')\n        ## store in dictionary\n        name[img_name]=(gender[0],age[0],agebucket[0])\n    except:\n        name[img_name]='NA' ## If the image is not a front facing image\n        traceback.print_exc()\n    return name","48e25dca":"## Iterate through the image to calculate the gender: Pick only 50 \ncount=0\nimg_list=[]\nfor i in range(img_len):\n    image=glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i]\n    print(str(image[7:]))\n    count+=1\n    img_list.append(calculate_gender(image,str(glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i][7:])))\n    if count<50:\n        continue\n    else:\n        break","672c2c4f":"img_list[:10]","d20a51e4":"# create figure\nfig = plt.figure(figsize=(15, 15))\n\n# setting values to rows and column variables\nrows = 6\ncolumns = 3\n\n\nfor i in range(18):\n    image=glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i]\n    img_arr=cv2.imread(image)\n    # Adds a subplot at the 1st position\n    fig.add_subplot(rows, columns, i+1)\n    # showing image\n    plt.imshow(cv2.cvtColor(img_arr, cv2.COLOR_BGR2RGB))\n    plt.axis('off')\n    plt.title(\"Image:\"+glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i][7:]+\"\\n\"+\"Gender:\"\n                      +img_list[i][glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i][7:]][0]+\" \"\n                      +\"Age:\"+str(img_list[i][glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i][7:]][1])+\" \"\n                      +\"Age Bucket:\"+img_list[i][glob.glob(\"\/kaggle\/input\/human-faces\/Humans\/*\")[i][7:]][2])","54f8ab73":"### There are certian images of older generation humans whcich the model fails to predict the Gender and Age.For example Image (0,0), Image(0,2).","a214053a":"### Iterate through the sample images to predict the gender and age","a22275a6":"Deep Face is a facial recognition library used for detecting features like Age,Gender,Race and Emotion wrapping the state of the art like VGG-Face,Googel Facenet,Openface and many others","b5b70e9a":"Learn more on DeepFace:\n* https:\/\/pypi.org\/project\/deepface\/","ccc3a31f":"### Introduction","fb88b3d0":"This library is build on the top of tensorflow and Keras and easy to install using pip command.\n\n**pip install deepface**","c30e0ca3":"### Import Required Libraries","be68478e":"### Load the image","8201ec55":"### Define a function for Age and Gender Prediction\n#### Deepface uses separate pretrained weight for Age and Gender. Define the objective in the action argument of DeepFace.analyze() methos","62ada25f":"This note book will cover the 2 aspects of deepface library.\n1. Identifying Gender\n2. Identifying Age and bucketing them. Deepface predicts the numerical age. Usually discrete age prediction is difficult to verify and hence we will project the age groups rather.","ded1b579":"### Deep Face Architecture\n![df.png](attachment:df.png)"}}