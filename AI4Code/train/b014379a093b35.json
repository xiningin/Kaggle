{"cell_type":{"d04cc43f":"code","d04955c9":"code","a405ce4b":"code","34705dee":"code","ae252aa1":"code","4aa30a16":"code","09c68c46":"code","2bb4c19a":"code","db5863bd":"code","50bd53e3":"markdown","8e9b6eb5":"markdown"},"source":{"d04cc43f":"import torch\nimport pandas as pd\nimport numpy as np\nimport random","d04955c9":"device = torch.device('cuda') # \ub514\ubc14\uc774\uc2a4 GPU \uc124\uc815\ntorch.manual_seed(777)\nrandom.seed(777)\ntorch.cuda.manual_seed_all(777)\nscaler = preprocessing.StandardScaler()","a405ce4b":"train = pd.read_csv('..input\/predict-numdeath\/numDeath_train.csv', header=None, skiprows=1, usecols=range(2,7))\ntrain = train.dropna()\ntest = pd.read_csv('..input\/predict-numdeath\/numDeath_test.csv', header = None, skiprows=1,usecols=range(1,5))\ntest = test.dropna()","34705dee":"xdata = train.loc[0:,1:5]\nydata = train.loc[:,6]\n\nx_train_data = np.array(xdata)\ny_train_data = np.array(ydata)\n\nx_train = torch.FloatTensor(x_train_data).to(device)\ny_train = torch.FloatTensor(y_train_data).to(device)\n\ntest_data = test.loc[0:,1:4] \nx_test = np.array(test_data)\nx_test = torch.FloatTensor(x_test).to(device)","ae252aa1":"linear1 = torch.nn.Linear(4, 1)\ntorch.nn.init.xavier_normal_(linear1.weight)\nmodel = torch.nn.Sequential(linear1).to(device)","4aa30a16":"loss = torch.nn.MSELoss().to(device)\noptimizer = torch.optim.SGD(model.parameters(), lr = 1e-6)\n\nnb_epochs = 105000\n\nfor epoch in range(nb_epochs + 1):\n\n  hypothesis = model(x_train)\n  cost = loss(hypothesis, y_train)\n\n  optimizer.zero_grad()\n  cost.backward()\n  optimizer.step()\n\n\n  if epoch % 100== 0:\n      print('Epoch {:4d}\/{} Cost: {:.6f}'.format(\n          epoch, nb_epochs, cost.item()\n      ))","09c68c46":"prediction = model(x_test)","2bb4c19a":"submit = pd.read_csv('..input\/predict-numdeath\/submit.csv')\n\nfor i in range(len(prediction)) :\n  submit['Expected'][i] = prediction[i].item()\nsubmit.to_csv('submit.csv' , mode = 'w' , index = False)\nsubmit","db5863bd":"!kaggle competitions submit -c predict-numdeath -f submit.csv -m \"18011817 \ud64d\uc8fc\uc601\"","50bd53e3":"# **\uae30\uc0c1\ud604\uc0c1(\ud3c9\uade0\uae30\uc628 ,\ucd5c\ub300\uae30\uc628,\ucd5c\uc18c\uae30\uc628,\uac15\uc218\ub7c9)\uc5d0 \ub530\ub978 \uc6d4\ubcc4 \uc0ac\ub9dd\uc790 \uc218**\n## **\uae30\uc874 \ucf54\ub4dc\uc640\uc758 \ucc28\uc774\uc810**\n- xavier \ucd08\uae30\ud654 \uc0ac\uc6a9\n- lr, epoch \uc870\uc808 (lr: 1e-5 -> 1e-6, epoch: 10,000 -> 105,000)\n\n**\uc131\ub2a5 : 0.57903 -> 0.44057**\n","8e9b6eb5":"## \ucc28\uc774\uc810: xavier initialization \uc0ac\uc6a9"}}