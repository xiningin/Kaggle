{"cell_type":{"0258a7bc":"code","4429b3b7":"code","b7a662c0":"code","079da360":"code","b289700b":"code","126d04f3":"code","c55703ad":"code","81738ea2":"code","76f14283":"code","455ef2d1":"code","7a976d1c":"code","f5916769":"code","08795300":"code","2a8c71a1":"code","4421507a":"code","69371e77":"code","30cdaf52":"code","ecdf76b6":"code","f039ccfb":"code","d75ed726":"code","122ec6e4":"code","0254a58f":"code","4e0b3944":"code","e59fdb20":"code","6ff119a5":"code","ae6c2e2b":"code","20e8dad0":"code","5f177ba5":"markdown","82960b7f":"markdown"},"source":{"0258a7bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4429b3b7":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","b7a662c0":"train.shape","079da360":"test.shape","b289700b":"train.head()","126d04f3":"train.isnull().sum()*100\/len(train)","c55703ad":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nsns.distplot(train['Age'])\nplt.show()","81738ea2":"train['Age']= train['Age'].fillna(train.Age.median())","76f14283":"train['Embarked']=train['Embarked'].fillna(train.Embarked.mode()[0])","455ef2d1":"# Lets drop cabin since it has missing values >50%\ntrain.drop(columns=[\"PassengerId\",\"Cabin\",\"Name\",\"Ticket\"], inplace=True)","7a976d1c":"train.isnull().sum()*100\/len(train)","f5916769":"sns.countplot(train['Survived'])","08795300":"train[train['Sex']=='male']['Survived'].value_counts().plot.pie()\nplt.show()","2a8c71a1":"train[train['Sex']=='female']['Survived'].value_counts().plot.pie()\nplt.show()","4421507a":"train['Sex']= train.Sex.replace({\"female\":0,\"male\":1})","69371e77":"sns.pairplot(data=train, vars=[\"Pclass\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Sex\"], hue='Survived')\nplt.show()","30cdaf52":"data=pd.get_dummies(train,drop_first=True)\ndata.head(10)","ecdf76b6":"pd.get_dummies(train,drop_first=True)","f039ccfb":"plt.figure(figsize=(14,12))\nsns.heatmap(data.corr(), annot=True)","d75ed726":"data.drop([\"Fare\",\"Embarked_Q\",\"SibSp\"],inplace=True,axis=1)\ndata.head()","122ec6e4":"x=data.drop(columns=['Survived'])\ny=data['Survived']\nfrom sklearn.model_selection import train_test_split  \nx_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.20, random_state=0)","0254a58f":"from sklearn.preprocessing import MinMaxScaler\n\nScaler=MinMaxScaler()\nx_train=Scaler.fit_transform(x_train)\nx_test=Scaler.fit_transform(x_test)","4e0b3944":"x_train","e59fdb20":"from sklearn.linear_model import LogisticRegression  \nclassifier= LogisticRegression(random_state=0)  \nclassifier.fit(x_train, y_train)  ","6ff119a5":"y_pred= classifier.predict(x_test)  ","ae6c2e2b":"from sklearn.metrics import confusion_matrix  \ncm= confusion_matrix(y_test,y_pred) \ncm","20e8dad0":"from sklearn.metrics import confusion_matrix  \nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)*100\n","5f177ba5":"**More number of females Survived**","82960b7f":"**Less number of male Survived**"}}