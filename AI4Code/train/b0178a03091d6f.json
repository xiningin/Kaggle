{"cell_type":{"dc7835fd":"code","e7b410e0":"code","f9b133b7":"code","bf751a2d":"code","a1f8aa31":"code","1b978395":"code","3703650b":"code","7937d1b7":"code","72743757":"code","b2d7306a":"code","6217ad2c":"code","bf809fbe":"code","7518ef64":"code","c79e57fd":"code","f83196de":"code","922bd78b":"code","f3f2fd2e":"code","1b30d209":"code","09196123":"code","5efea151":"code","395d637d":"code","f0aa31bd":"code","fc58e2ed":"code","3139bff0":"code","392555b4":"code","aac8e7d4":"code","1e20c2ab":"code","f4ae2003":"code","220eab97":"code","d4a76415":"code","0f2ee355":"code","292fc9f7":"code","0fb917fe":"code","8338f4dd":"code","6c1b7f77":"code","095c6524":"code","672a43d7":"code","f83671b5":"code","2fe67787":"code","33eeece2":"code","55e0a619":"code","fa4db690":"code","45fa208c":"code","f0e7b7b3":"code","1304ef15":"code","c955c72e":"code","969ce7c7":"code","6a344b2a":"code","fa52de17":"code","68680e49":"code","8869a709":"code","d1581be4":"markdown","1b4f6fe9":"markdown","64ebc1b5":"markdown","061dbd78":"markdown","753b81dc":"markdown","82785264":"markdown","44e25cbe":"markdown","9a611d1c":"markdown","a48419bd":"markdown","86b6940b":"markdown","edbaff92":"markdown","b1a151e0":"markdown","3a74efb0":"markdown","eaa8f8cb":"markdown","d4090860":"markdown","bff26e6e":"markdown","1985fc52":"markdown","232ec148":"markdown"},"source":{"dc7835fd":"\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import Ridge\n\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestRegressor\nimport xgboost\nfrom xgboost.sklearn import XGBRegressor\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import VotingRegressor\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e7b410e0":"\n \ndf_test=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ndf_train=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\n\nprint(\"\\t null values in train data:\\n\",df_train.isnull().sum()[df_train.isnull().sum()>0])\nprint(\"\\n \\t null values in test data:\\n\",df_test.isnull().sum()[df_test.isnull().sum()>0])","f9b133b7":"df_train.describe(include=\"all\")\n","bf751a2d":"df_train.head(10)","a1f8aa31":"for column in [\"Alley\",\"BsmtQual\",\"BsmtCond\",\"BsmtExposure\",\"BsmtFinType1\",\"BsmtFinType2\",\"FireplaceQu\",\"GarageType\",\"GarageFinish\",\"GarageQual\",\"GarageCond\",\"PoolQC\",\"Fence\",\"MiscFeature\"]:\n    df_train[column].replace(np.nan,\"NA\",inplace = True)\n    df_test[column].replace(np.nan,\"NA\",inplace = True)\ndf_train.describe(include=\"all\")\n","1b978395":"df_train.dtypes","3703650b":"\ndf_train[[\"MSSubClass\"]] = df_train[[\"MSSubClass\"]].astype(\"object\")\n\ndf_test[[\"MSSubClass\"]] = df_test[[\"MSSubClass\"]].astype(\"object\")\n\n","7937d1b7":"plt.figure(figsize=[23,11])\nsns.heatmap(df_train.corr(),annot=True)\nplt.show()","72743757":"df_train.drop(\"Id\",axis=1,inplace=True)\ndf_test.drop(\"Id\",axis=1,inplace=True)\n","b2d7306a":"df_test[\"GarageCars\"].replace(np.nan,df_test[\"GarageCars\"].value_counts().idxmax(),inplace=True)\ndf_test[\"GarageArea\"].replace(np.nan,df_test[\"GarageArea\"].mean(),inplace=True)","6217ad2c":"Lotfront=RandomForestRegressor(n_jobs=-1,criterion='mse')\nLotfront.fit(df_train[[\"GarageArea\",\"GarageCars\",\"LotArea\",\"OverallQual\",\"TotalBsmtSF\",\"1stFlrSF\",\"GrLivArea\"]][df_train[\"LotFrontage\"].isnull()==False],\n                                                                                                                df_train[\"LotFrontage\"][df_train[\"LotFrontage\"].isnull()==False])","bf809fbe":"df_train[\"LotFrontage\"][df_train[\"LotFrontage\"].isnull()]=Lotfront.predict(df_train[[\"GarageArea\",\"GarageCars\",\"LotArea\",\"OverallQual\",\"TotalBsmtSF\",\"1stFlrSF\",\"GrLivArea\"]][df_train[\"LotFrontage\"].isnull()])\ndf_test[\"LotFrontage\"][df_test[\"LotFrontage\"].isnull()]=Lotfront.predict(df_test[[\"GarageArea\",\"GarageCars\",\"LotArea\",\"OverallQual\",\"TotalBsmtSF\",\"1stFlrSF\",\"GrLivArea\"]][df_test[\"LotFrontage\"].isnull()])","7518ef64":"plt.figure(figsize=[7,15])\nsns.relplot(data=df_train, x=\"GarageYrBlt\",y=\"YearBuilt\",hue=\"SalePrice\",\n            col=\"BldgType\",kind=\"scatter\",alpha=0.5)\nplt.show()","c79e57fd":"df_train.drop(\"GarageYrBlt\",axis=1,inplace=True)\ndf_test.drop(\"GarageYrBlt\",axis=1,inplace=True)","f83196de":"df_train[df_train[\"MasVnrType\"].isnull()]","922bd78b":"plt.figure(figsize=[7,15])\nsns.relplot(data=df_train, x=\"MasVnrArea\",y=\"SalePrice\",hue=\"MasVnrType\",\n            col=\"ExterQual\",kind=\"scatter\",alpha=0.3)\nplt.show()","f3f2fd2e":"for the_column in df_train.columns:\n    if df_train[the_column].dtype==int:\n        df_train[the_column].replace(np.nan,df_train[the_column].astype('int').mean(axis=0),inplace=True)\n    elif df_train[the_column].dtype==float:\n        df_train[the_column].replace(np.nan,df_train[the_column].astype('float').mean(axis=0),inplace=True)\n    else:\n        df_train[the_column].replace(np.nan,df_train[the_column].value_counts().idxmax(),inplace=True)\nfor the_column in df_test.columns:\n    if df_test[the_column].dtype==int:\n        df_test[the_column].replace(np.nan,df_test[the_column].astype('int').mean(axis=0),inplace=True)\n    elif df_test[the_column].dtype==float:\n        df_test[the_column].replace(np.nan,df_test[the_column].astype('float').mean(axis=0),inplace=True)\n    else:\n        df_test[the_column].replace(np.nan,df_test[the_column].value_counts().idxmax(),inplace=True)\nprint(\"\\t null values in train data:\\n\",df_train.isnull().sum()[df_train.isnull().sum()>0])\nprint(\"\\n \\t null values in test data:\\n\",df_test.isnull().sum()[df_test.isnull().sum()>0])\ndf_train.describe(include=\"all\")","1b30d209":"plt.figure(figsize=[23,11])\nsns.heatmap(df_train.corr(),annot=True)\nplt.show()","09196123":"obj_cols = df_train.columns[df_train.dtypes == object]\nmultipleV = [] # 3 or more than 3\nBinary = [] # 2 values\nfor c in obj_cols :\n    if df_train[c].nunique() > 2 :\n        multipleV.append(c)\n    else :\n        Binary.append(c)","5efea151":"print(\"Multiple categories: \",multipleV,\"\\n Binary categories: \",Binary)","395d637d":"for c in Binary :\n    le = LabelEncoder()\n    df_train[c] = le.fit_transform(df_train[c])\n    df_test[c] = le.transform(df_test[c]) ","f0aa31bd":"df_train = pd.get_dummies(data = df_train , columns = multipleV)\ndf_test = pd.get_dummies(data = df_test , columns = multipleV)\ndf_train.columns","fc58e2ed":"df_train.head()","3139bff0":"y = df_train['SalePrice']\nX=df_train.drop('SalePrice',axis=1)\nX.shape,y.shape","392555b4":"RR=GridSearchCV(estimator=Ridge(random_state=251),cv=10,n_jobs=-1,scoring= 'neg_root_mean_squared_error',param_grid=[{'alpha':np.linspace(0, 100, 300)}])","aac8e7d4":"RR.fit(X, y)","1e20c2ab":"RR.best_score_,RR.best_params_","f4ae2003":"pd.DataFrame(RR.cv_results_)[pd.DataFrame(RR.cv_results_)['rank_test_score']<5]","220eab97":"sns.scatterplot(data=df_train, x=\"SalePrice\",y=RR.predict(X),alpha=0.5)\nplt.show()","d4a76415":"RF=GridSearchCV(estimator=RandomForestRegressor(n_jobs=-1,criterion='mse',random_state=151),cv=7,n_jobs=-1,verbose=10,scoring='neg_mean_squared_log_error',\n                param_grid=[{'max_depth':[9,12,15],\n                             'n_estimators':[350,750,1000],\n                             'max_features':['sqrt',\"auto\"]}])","0f2ee355":"RF.fit(X, y)","292fc9f7":"RF.best_score_,RF.best_params_","0fb917fe":"pd.DataFrame(RF.cv_results_)[pd.DataFrame(RF.cv_results_)['rank_test_score']<7]","8338f4dd":"sns.scatterplot(data=df_train, x=\"SalePrice\",y=RF.predict(X),alpha=0.5)\nplt.show()","6c1b7f77":"columns_not_in_test = set( X.columns ) - set( df_test.columns )\nfor i in columns_not_in_test:\n    df_test[i] = 0\ndf_test = df_test[X.columns]\ncolumns_not_in_test","095c6524":"RF_pred=RF.predict(df_test)\nRF_pred","672a43d7":"id=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")[\"Id\"]\nmy_submission = pd.DataFrame({'Id': id, 'SalePrice': RF_pred})\nmy_submission.to_csv('submission1b.csv', index=False)","f83671b5":"XGB=GridSearchCV(estimator=XGBRegressor(seed=101,tree_method='gpu_hist',predictor= 'gpu_predictor'),\n                 cv=5,n_jobs=-1,scoring='neg_root_mean_squared_error',verbose=2,\n                 param_grid=[{'max_depth':[3,4],'eta':[0.1,0.05],'gamma':[0],'n_estimators':[450],\n                              'subsample':[0.90],'colsample_bytree':[0.3,0.4]}])","2fe67787":"XGB.fit(X, y)","33eeece2":"XGB.best_score_,XGB.best_params_","55e0a619":"pd.DataFrame(XGB.cv_results_)[pd.DataFrame(XGB.cv_results_)['rank_test_score']<6]","fa4db690":"sns.set_style(\"whitegrid\")\nsns.scatterplot(data=df_train, x=\"SalePrice\",y=XGB.predict(X),alpha=0.5)\nplt.show()","45fa208c":"XGB_pred=XGB.predict(df_test)\nXGB_pred","f0e7b7b3":"id=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")[\"Id\"]\nmy_submission2 = pd.DataFrame({'Id': id, 'SalePrice': XGB_pred})\nmy_submission2.to_csv('submissionXGB.csv', index=False)","1304ef15":"Features=list(X.columns)","c955c72e":"X1=X.copy()\n","969ce7c7":"FI=pd.DataFrame(list(zip(list(XGB.best_estimator_.feature_importances_),Features)),columns=[\"Feature_Imp\",\"Feature\"]).sort_values(by=\"Feature_Imp\",ascending=False)\nprint(FI.head(10))\nprint(FI.tail(10))","6a344b2a":"X1.drop(FI[\"Feature\"][FI[\"Feature_Imp\"]<0.00001],axis=1,inplace=True)","fa52de17":"X1.shape","68680e49":"RR2=GridSearchCV(estimator=Ridge(random_state=51),cv=10,n_jobs=-1,scoring= 'neg_root_mean_squared_error',param_grid=[{'alpha':np.linspace(0, 30, 100)}])\nRR2.fit(X1, y)\nRR2.best_score_,RR2.best_params_","8869a709":"sns.scatterplot(data=df_train, x=\"SalePrice\",y=RR2.predict(X1),alpha=0.5)\nplt.show()","d1581be4":"# Preparing data for fitting in model.","1b4f6fe9":"**It can be observed that this Ridge Regression model has generated much better prediction than previous Ridge regression model with all features.**","64ebc1b5":"**It can be observed that many categories which have missing data are actually not available so it needs to be replaced with \"NA\"**","061dbd78":"**It can be observed that Random forest has much better fit as compared to Ridge Regression.**","753b81dc":"Predicting Lotfront by Random Forest Regressor using variables which are highly correlated with it. ","82785264":"**XGBoost Regressor**","44e25cbe":"**Printing most important and least Important features:**","9a611d1c":"**Preparing the Test data to generate predictions on It**","a48419bd":"It can be observed that XG Boost Regressor has made better prediction than Random Forest and Ridge Regression. ","86b6940b":"**Making predictions by using Ridge Regression after Dropping features with importance of less than 0.00001**","edbaff92":"# House Prices Prediction","b1a151e0":"# **Feature Importance**","3a74efb0":"It can be observed that there are some predicted values which are causing huge errors. ","eaa8f8cb":"**Random Forest**","d4090860":"**Imputing all remaing missing values**","bff26e6e":"# Fitting the models and tuning its hyperparameters.","1985fc52":"**Ridge Regression**","232ec148":"Since Garage Year built is highly correlated with year built and it has many missing values It is better to drop it."}}