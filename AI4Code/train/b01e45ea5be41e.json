{"cell_type":{"da3e5c0a":"code","37b020d4":"code","bdea2f74":"code","476e6cd9":"code","0dcf1811":"code","d7600b61":"code","e21fcf56":"code","9def2cef":"code","4f70be8e":"code","e30e74db":"code","d28e1de2":"code","ad3c2fc4":"code","3144faae":"code","16126b9d":"code","21253104":"code","d7fcfa96":"code","21c67b97":"code","e59e0651":"code","0787ba83":"code","b63b80da":"markdown","e278fcdd":"markdown","43e51e5a":"markdown","74b6a77d":"markdown","b8569e43":"markdown","5b0f918b":"markdown"},"source":{"da3e5c0a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37b020d4":"ftbl = pd.read_csv('..\/input\/the-most-expensive-football-transfers\/football_players.csv')","bdea2f74":"ftbl.info()","476e6cd9":"ftbl.head()","0dcf1811":"ftbl.tail()","d7600b61":"ftbl.describe().T","e21fcf56":"ftbl.columns","9def2cef":"ftbl.isna().sum()","4f70be8e":"import seaborn as sns\nimport matplotlib.pyplot as plt","e30e74db":"ftbl1 = ftbl.groupby('From(Club)', as_index=False,sort=True)['Fee(\u20ac mln)'].sum()\nftbl1 = ftbl1.sort_values('Fee(\u20ac mln)', ascending=False)\nftbl1.head()","d28e1de2":"ftbl1 = ftbl1[0:10]\nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\np = sns.barplot(x='From(Club)',y='Fee(\u20ac mln)',data=ftbl1)\np.set( xlabel = \"Name of the club\", ylabel = \"sum of money earned in transfers\")\np.set_title(\"10 clubs with the highest transfer revenues\")","ad3c2fc4":"ftbl2 = ftbl.groupby('To(Club)', as_index=False,sort=True)['Fee(\u20ac mln)'].sum()\nftbl2 = ftbl2.sort_values('Fee(\u20ac mln)', ascending=False)\nftbl2.head()","3144faae":"ftbl2 = ftbl2[0:10]\nplt.figure(figsize=(18,15))\nsns.set_style('darkgrid')\np = sns.barplot(x='To(Club)',y='Fee(\u20ac mln)',data=ftbl2)\np.set( xlabel = \"Name of the club\", ylabel = \"sum of money spent in transfers\")\np.set_title(\"top 10 clubs that spent the most on footballers\")","16126b9d":"ftbl3 = ftbl.groupby('Origin', as_index=False,sort=True)['Fee(\u20ac mln)'].sum()\nftbl3 = ftbl3.sort_values('Fee(\u20ac mln)', ascending=False)\nftbl3.head()","21253104":"ftbl3 = ftbl3[0:5]\nplt.figure(figsize=(18,15))\nsns.set_style('darkgrid')\np = sns.barplot(x='Origin',y='Fee(\u20ac mln)',data=ftbl3)\np.set( xlabel = \"Name of the Country\", ylabel = \"sum of money\")\np.set_title(\"top 5 countries where the most expensive players come from\")","d7fcfa96":"ftbl4 = ftbl.groupby('Position', as_index=False,sort=True)['Fee(\u20ac mln)'].sum()\nftbl4 = ftbl4.sort_values('Fee(\u20ac mln)', ascending=False)\nftbl4.head()","21c67b97":"ftbl5 = ftbl['Position'].value_counts()\nftbl5 = pd.DataFrame(ftbl5)\nftbl5.columns =[ 'Count']\nftbl5","e59e0651":"ftbl4['Count'] = ftbl5['Count'].values\nftbl4['Average_price'] = ftbl4['Fee(\u20ac mln)']\/ftbl4['Count']\nftbl4","0787ba83":"import matplotlib.pyplot as plt\ndef make_autopct(values):\n    def my_autopct(pct):\n        total = sum(values)\n        val = int(round(pct*total\/100.0))\n        return '{p:.2f}%  ({v:d})'.format(p=pct,v=val)\n    return my_autopct\nmlabels=['Midfielder','Forward','Striker','Defender','Goalkeeper']\nplt.pie(ftbl4['Average_price'],labels=mlabels,autopct=make_autopct(ftbl4['Average_price']))\nplt.title('Comparison of average earnings by position of the player')\nfig = plt.gcf()\nfig.set_size_inches(12,12)\nplt.show()","b63b80da":"# Let's check the average price of a player depending on his position","e278fcdd":"# EDA","43e51e5a":"# If you have any comments or questions, please write in the comment","74b6a77d":"# let's see information about our data","b8569e43":"# Chart instruction: percentage% (average price in \u20ac mln)","5b0f918b":"# check for empty records using .isna().sum()"}}