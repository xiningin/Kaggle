{"cell_type":{"ecbc9347":"code","e265a8e3":"code","f6ffcaff":"code","9699eb67":"code","3ada5a40":"code","fa102db9":"code","3e0c1c61":"code","9c59d12b":"code","4d5fd076":"code","24608bb0":"code","1c621e59":"markdown","c249f684":"markdown","2632b653":"markdown","ab284583":"markdown","a2b8052e":"markdown","07c9f0d8":"markdown","87fc9168":"markdown","02569361":"markdown","8bae9a3f":"markdown"},"source":{"ecbc9347":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","e265a8e3":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = dataset.iloc[:, [2,3]].values\ny = dataset.iloc[:, 4].values","f6ffcaff":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","9699eb67":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","3ada5a40":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(n_estimators=1000,criterion='entropy',random_state=0)\nclassifier.fit(X_train,y_train)","fa102db9":"y_pred=classifier.predict(X_test)\nprint(y_pred)","3e0c1c61":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","9c59d12b":"from sklearn.metrics import accuracy_score\nacc=accuracy_score(y_test, y_pred)\nprint(acc)","4d5fd076":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","24608bb0":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()\n\n","1c621e59":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","c249f684":"Splitting the dataset into the Training set and Test set","2632b653":" Visualising the Training set results\n","ab284583":"importing dataset to x and y","a2b8052e":" Feature Scaling","07c9f0d8":" Visualising the Test set results\n","87fc9168":"Predicting a new result","02569361":"confusion_matrix","8bae9a3f":"fitting model"}}