{"cell_type":{"7c76011b":"code","325bcd57":"code","9c9e5740":"code","3ad1fa37":"code","0356f23b":"code","35ad90c5":"code","fddbc517":"code","779447d1":"code","22db252b":"code","79215d4f":"code","4050d37c":"code","a322bc71":"code","96c9d3ed":"code","223cae37":"code","cc8cd743":"markdown","bdb21a2d":"markdown","87500f97":"markdown","0ce5b791":"markdown","047bde1b":"markdown","397cb670":"markdown","dfd8ebdc":"markdown","a08888f9":"markdown"},"source":{"7c76011b":"# In this code, we will examine the detailed information of Fifa 19 players\n\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","325bcd57":"myDataFrame=pd.read_csv(\"..\/input\/data.csv\")   # import file","9c9e5740":"myDataFrame.info()   # to see how many string-float-int-etc","3ad1fa37":"myDataFrame.columns  # to see columns","0356f23b":"myDataFrame.head(10)  # to show first 10 row","35ad90c5":"myDataFrame.corr()  # correlation","fddbc517":"f,ax = plt.subplots(figsize=(20, 20))\nsns.heatmap(myDataFrame.corr(), annot=True, linewidths=.8, fmt= '.01f',ax=ax)\nplt.show()","779447d1":"myDataFrame.Finishing.plot(kind=\"line\" , color =\"blue\" , label = \"Finishing\" , alpha=0.5 , grid=True)\nmyDataFrame.Crossing.plot(kind=\"line\" , color =\"green\" , label = \"Crossing\" , alpha=0.5, grid=True)\nplt.xlabel(\"x\")     # two different feature is shown in the graph\nplt.ylabel(\"y\")\nplt.title(\"line graph\")\nplt.show()","22db252b":"myDataFrame.plot(kind=\"scatter\" , x=\"Age\", y =\"Overall\", color=\"red\", alpha=0.8)\nplt.xlabel(\"Age\")      #Age-Overall graph\nplt.ylabel(\"Overall\")\nplt.title(\"Scatter plot\")\nplt.show()","79215d4f":"myDataFrame.Age.plot(kind=\"hist\" , bins=50 , figsize=(15,15)) #histogram graph\n","4050d37c":"filter1=myDataFrame[\"Age\"]<20   # first filter\nfilter2=myDataFrame[\"Overall\"]>80  # second filter\nyoungPlayerData= myDataFrame[filter1 & filter2]  # create a new dataframe\nyoungPlayerData.head()\n","a322bc71":"youngPlayerData.Age.plot(kind=\"hist\",bins=10 , figsize=(8,8) ) #newdataframe's histogram graph","96c9d3ed":"\nmyDataFrame[myDataFrame[\"Club\"]==\"FC Barcelona\"]  #another example of filtering","223cae37":"myDataFrame[myDataFrame[\"Club\"]==\"FC Barcelona\"].Vision .plot(kind=\"line\" , color =\"blue\" , label = \"Vision \" , alpha=0.5 , grid=True)\nmyDataFrame[myDataFrame[\"Club\"]==\"FC Barcelona\"].Marking.plot(kind=\"line\" , color =\"green\" , label = \"Marking\" , alpha=0.5, grid=True)\nplt.xlabel(\"x\")     \nplt.ylabel(\"y\")\nplt.title(\"line graph\")\nplt.show()","cc8cd743":"Now we can go through to the details of the dataset, so we can look at the first 10 rows to figure out what is our dataset about.\n","bdb21a2d":"Also we can understand the frequency of data with using histogram plot.\n","87500f97":"Also with filtering we can find the spesific players from the table, for example we can find the barcelona squad from the dataset.","0ce5b791":"In the upper picture we can see the correlation between the datas.","047bde1b":"As we can see from the upper table, there are 3 player who suit our criteria. Also we can show these information in the histogram.\n","397cb670":"Now we can make a visualization by using matplotlib to understand data better.","dfd8ebdc":"Firstly we can look basic information and columns of dataset","a08888f9":"After these plots, we can filter the data to get a detail information about data, for example we can find players with young age and high overall."}}