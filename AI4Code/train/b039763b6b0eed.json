{"cell_type":{"c3c5d994":"code","8e1787c1":"code","e626f160":"code","0f5b832e":"code","bab22348":"code","b93d3525":"code","fc1b8063":"code","db7ee01a":"code","21b58030":"code","3437b852":"code","8291415e":"code","f55f748d":"code","ce34b66a":"code","c07bfe68":"code","2b36d6a1":"code","e6e6d75b":"code","96a84e62":"code","830a6f58":"code","91d62934":"code","a49eb536":"code","ae4d9c60":"code","517e7f95":"code","60af2fef":"code","54e2804e":"code","c74d51e8":"code","c462768e":"code","1f9ea16a":"code","4a295ef4":"code","54c0e72a":"code","fd93014a":"code","a0840832":"code","f6b3a4c6":"code","5447d883":"code","f1f2c0b7":"code","84aee543":"code","766830bd":"code","bc0804a3":"code","9edba4a7":"code","71a17cd9":"code","5b067f4e":"code","bd9005dd":"code","0e4ae6b1":"code","383d157b":"code","54623a7a":"code","448722e3":"code","3524b301":"code","91e40876":"code","439cf224":"code","637002a2":"code","1b15974a":"code","9aeb1044":"code","52ca373a":"code","f838f717":"code","5a8de4e2":"code","e2e6764f":"code","ef8222cc":"code","fc87ec25":"code","b2de2a0b":"code","1c0a928f":"code","53f2ee46":"code","6294f12d":"code","fccc9516":"code","a0839886":"code","2bec1442":"code","44cf5b71":"code","4b5cb71a":"code","5a6e0022":"code","150c6e67":"code","e6b3a068":"code","e520e341":"code","975ab471":"code","e43d72f3":"code","c8455dd4":"code","0d6dd67e":"code","051f51b7":"code","5f0b96f3":"code","af39bb13":"code","7a2cad5d":"code","21dcaefa":"code","655e45f5":"code","7ae0d8d4":"code","2d0141e3":"code","69511af9":"code","b3fbf22d":"code","9578e2d6":"code","022a9245":"code","bf9c9ddd":"code","b0a3cb30":"code","2834838c":"code","079fd17f":"code","9bf80dbf":"code","ec4414ec":"code","82a2d37a":"code","1c917c42":"code","6346b8cb":"code","661fe3d4":"code","8da63aa8":"code","9fbba732":"code","1429c3b1":"code","96e3f788":"code","9e737cac":"code","0ac56de0":"code","06fdd778":"code","6de8c72d":"code","17e05c90":"code","73666aa6":"code","846be119":"code","41685c6f":"code","ee3502aa":"code","66c78078":"code","4ced04fb":"code","15c6919a":"code","94d12431":"code","77cd1f83":"code","f20798af":"code","ff75d04c":"code","e09ae932":"code","5f9e97ce":"code","84464ab5":"code","8a8ae0ee":"code","ae74f5bc":"markdown","f9a48dc7":"markdown","5c6e0c1f":"markdown","8ad17db2":"markdown","c7ee3a98":"markdown","c2a16090":"markdown","2bfc4aea":"markdown","9676da7e":"markdown","840e6f35":"markdown","40f14a0e":"markdown","79821b4b":"markdown","bde95ef6":"markdown","70220eb3":"markdown","7b4c7ded":"markdown","41ffa88c":"markdown","eb228643":"markdown","93772a2e":"markdown","1fc5298c":"markdown","eb56dde9":"markdown","5265a949":"markdown","8701c49d":"markdown","994c1107":"markdown","30591dc5":"markdown","74b49e3d":"markdown","32d8e65a":"markdown","1ea68691":"markdown","c017652f":"markdown","170ceb2a":"markdown","858b3bd7":"markdown","8136e02a":"markdown","0604b163":"markdown","92fa0af9":"markdown","81ebfe3f":"markdown","bf6a3d2b":"markdown","9ee540a3":"markdown","c6a7b9b0":"markdown","64134633":"markdown","a496a5ba":"markdown","aff1e9e0":"markdown","22c5fb4d":"markdown","a34bed63":"markdown","0080ad63":"markdown","30f2f720":"markdown","ab556290":"markdown","dbd8c895":"markdown","214ec9a5":"markdown","e97c5c9c":"markdown","b2ca1703":"markdown","69417dc1":"markdown","24bac45d":"markdown","f91448d1":"markdown","51bc23a7":"markdown","9a86fb5f":"markdown","5cfb5dae":"markdown","8635d477":"markdown","425a55ca":"markdown","8805002e":"markdown","d44cc885":"markdown","9229021e":"markdown"},"source":{"c3c5d994":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom scipy import stats\nfrom scipy.integrate import trapz\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e1787c1":"sns.set(style='darkgrid')\ntips = sns.load_dataset('tips')","e626f160":"tips.head()","0f5b832e":"sns.relplot(x='total_bill', y='tip',hue='smoker',style='time', data=tips);","bab22348":"sns.relplot(x='total_bill', y='tip', hue='size', data=tips);","b93d3525":"sns.relplot(x='total_bill', y='tip', hue='smoker', style='time', size='size',sizes=(15, 200), data=tips);","fc1b8063":"df = pd.DataFrame(dict(time=np.arange(500),\n                       value=np.random.randn(500).cumsum()))\nsns.relplot(x='time', y='value', data=df, kind='line').fig.autofmt_xdate();","db7ee01a":"df = pd.DataFrame(np.random.randn(500, 2).cumsum(axis=0), columns=[\"x\", \"y\"])\nsns.relplot(x=\"x\", y=\"y\", sort=False, kind=\"line\", data=df);","21b58030":"sns.relplot(x=\"x\", y=\"y\", sort=True, kind=\"line\", data=df);","3437b852":"fmri = sns.load_dataset('fmri')\nfmri.head()","8291415e":"sns.relplot(x='timepoint', y='signal', data=fmri, kind='line');","f55f748d":"sns.relplot(x='timepoint', y='signal', data=fmri, kind='line', ci=None); # ci=None can also be ci=False","ce34b66a":"sns.relplot(x='timepoint', y='signal', data=fmri, kind='line', ci='sd'); # sd stand for - standard devieation","c07bfe68":"sns.relplot(x='timepoint', y='signal', data=fmri, kind='line', estimator=None); # CANNOT  use estimator=False; only None.","2b36d6a1":"sns.relplot(x='timepoint', y='signal', data=fmri, hue='event', kind='line');","e6e6d75b":"sns.relplot(x='timepoint', y='signal', data=fmri, hue='region', style='event', kind='line');","96a84e62":"sns.relplot(x='timepoint', y='signal', data=fmri, kind='line', hue='region', style='event', dashes=False, markers=True);","830a6f58":"sns.relplot(x='timepoint', y='signal', data=fmri.query(\"event=='cue'\"), kind='line', estimator=None, units='subject', hue='region');","91d62934":"dots = sns.load_dataset('dots').query(\"align=='dots'\")\ndots","a49eb536":"sns.relplot(x='time', y='firing_rate', data=dots, hue='coherence', style='choice', kind='line');","ae4d9c60":"sns.relplot(x='time', y='firing_rate', data=dots, style='choice', kind='line', hue_norm=LogNorm(), size='coherence');","517e7f95":"df = pd.DataFrame(dict(time=pd.date_range(\"2017-1-1\", periods=500),\n                       value=np.random.randn(500).cumsum()))\ng = sns.relplot(x=\"time\", y=\"value\", kind=\"line\", data=df)\ng.fig.autofmt_xdate()","60af2fef":"sns.relplot(x='total_bill', y='tip', data=tips, col='time', hue='smoker');","54e2804e":"sns.relplot(x='timepoint', y='signal', data=fmri, hue='subject', col='region', row='event', height=5, kind='line');","c74d51e8":"sns.relplot(x='timepoint', y='signal', data=fmri.query(\"region=='frontal'\"),\n            hue='event', style='event', col='subject',\n            col_wrap=4, kind='line', estimator=None,\n            height=3, aspect=.75, linewidth=2.5,);","c462768e":"sns.set(style='ticks', color_codes=True)","1f9ea16a":"sns.catplot(x='day', y='total_bill', data=tips);","4a295ef4":"sns.catplot(x='day', y='total_bill', data=tips, jitter=False);","54c0e72a":"sns.swarmplot(x='day', y='total_bill', data=tips);","fd93014a":"sns.catplot(x='day', y='total_bill', data=tips, hue='sex');","a0840832":"sns.catplot(x='size', y='total_bill', data=tips, kind='swarm');","f6b3a4c6":"sns.catplot(x='smoker', y='tip', data=tips, order=['No', 'Yes']);","5447d883":"sns.catplot(x='total_bill', y='day', data=tips, kind='swarm', hue='time');","f1f2c0b7":"sns.catplot(x='day', y='total_bill', data=tips, kind='box', palette='magma');","84aee543":"sns.catplot(x='day', y='total_bill', data=tips, kind='box', hue='smoker');","766830bd":"tips['weekend'] = tips['day'].isin(['Sat', 'Sun'])\nsns.catplot(x='day', y='total_bill', data=tips, kind='box', hue='weekend', dodge=False);","bc0804a3":"sns.catplot(x='day', y='total_bill', data=tips, kind='box', hue='weekend');","9edba4a7":"diamonds = sns.load_dataset('diamonds')\ndiamonds.head()","71a17cd9":"sns.catplot(x='color', y='price',data=diamonds.sort_values('color'), kind='boxen');","5b067f4e":"sns.catplot(x='total_bill', y='day', data=tips, kind='violin', hue='sex');","bd9005dd":"sns.catplot(x=\"total_bill\", y=\"day\", hue=\"sex\",\n            kind=\"violin\", bw=.15, cut=0,\n            data=tips);","0e4ae6b1":"sns.catplot(x='day', y='total_bill', data=tips, kind='violin', split=True, hue='sex');","383d157b":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"sex\",\n            kind=\"violin\", inner=\"stick\", split=True,\n            palette=\"pastel\", data=tips);","54623a7a":"g = sns.catplot(x=\"day\", y=\"total_bill\", kind=\"violin\", inner=None, data=tips, palette='pastel')\nsns.swarmplot(x=\"day\", y=\"total_bill\", color=\"k\", size=3, data=tips, ax=g.ax); # we used swarmplot instead of catlpot as\n# catplot is a figure level function.","448722e3":"titanic = sns.load_dataset('titanic')\ntitanic.head()","3524b301":"sns.catplot(x='sex', y='survived', hue='class', kind='bar', data=titanic, palette='pastel');","91e40876":"sns.countplot(x='deck', palette='pastel', data=titanic, hue='class');","439cf224":"sns.catplot(x='sex', y='survived', data=titanic, kind='point', hue='class');","637002a2":"sns.catplot(x='class', y='survived', data=titanic, kind='point', hue='sex', linestyles=['-', '-.'], markers=['^', 'o']);","1b15974a":"iris = sns.load_dataset('iris')\niris.head()","9aeb1044":"sns.boxplot(data=iris, orient='h');","52ca373a":"iris['petal_length'].describe()","f838f717":"sns.violinplot(x='species', y='sepal_length', data=iris);","5a8de4e2":"tips","e2e6764f":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"smoker\",\n            col=\"time\", aspect=.6,\n            kind=\"swarm\", data=tips);","ef8222cc":"g = sns.catplot(x=\"fare\", y=\"survived\", row=\"class\",\n                kind=\"box\", orient=\"h\", height=1.5, aspect=4,\n                data=titanic.query(\"fare > 0\"))\ng.set(xscale=\"log\");","fc87ec25":"sns.set(color_codes=True)","b2de2a0b":"x = np.random.normal(size=100);","1c0a928f":"sns.distplot(x);","53f2ee46":"sns.distplot(x, rug=True, kde=False);","6294f12d":"sns.distplot(x, rug=True, kde=False, bins=20); # bins=20 => 20 categories","fccc9516":"sns.distplot(x, hist=False, rug=True);","a0839886":"x = np.random.normal(0, 1, size=30)\nbandwidth = 1.06 * x.std() * x.size ** (-1 \/ 5.)\nsupport = np.linspace(-4, 4, 200)\n\nkernels = []\nfor x_i in x:\n\n    kernel = stats.norm(x_i, bandwidth).pdf(support)\n    kernels.append(kernel)\n    plt.plot(support, kernel, color=\"r\")\n\nsns.rugplot(x, color=\".2\", linewidth=3);","2bec1442":"density = np.sum(kernels, axis=0)\ndensity \/= trapz(density, support)\nplt.plot(support, density);","44cf5b71":"sns.kdeplot(x, shade=True);","4b5cb71a":"sns.kdeplot(x, shade=True);\nsns.kdeplot(x, bw=.2, label='bw:0.2');\nsns.kdeplot(x, bw=2, label='bw:2');","5a6e0022":"sns.kdeplot(x, cut=0, shade=True);  # cut=0 implies the curve stops with the curve.\nsns.kdeplot(x, cut=1);              # positive value of cut implies the curve extends past the actual observations.\nsns.kdeplot(x, cut=2);      \nsns.kdeplot(x, cut=-1);             # negative value of cut implies the curve stops before the actual farthest observations.\nsns.rugplot(x);","150c6e67":"x = np.random.gamma(6, size=200)\nsns.distplot(x, fit=stats.gamma);","e6b3a068":"mean, cov = [0, 1], [(1, .5), (.5, 1)]\ndata = np.random.multivariate_normal(mean, cov, 200)\ndf = pd.DataFrame(data, columns=[\"x\", \"y\"])\ndf.head()","e520e341":"sns.jointplot(x='x', y='y', data=df);","975ab471":"x, y = np.random.multivariate_normal(mean, cov, 1000).T\nwith sns.axes_style(\"white\"):\n    sns.jointplot(x=x, y=y, kind=\"hex\", color=\"k\");","e43d72f3":"sns.jointplot(x='x', y='y', data=df, kind='kde');","c8455dd4":"f, ax = plt.subplots(figsize=(6, 6))\nsns.kdeplot(df.x, df.y, ax=ax)\nsns.rugplot(df.x, color=\"g\", ax=ax)\nsns.rugplot(df.y, vertical=True, ax=ax);","0d6dd67e":"f, ax = plt.subplots(figsize=(6, 6))\nsns.kdeplot(df.x, df.y, ax=ax, shade=True)\nsns.rugplot(df.x, ax=ax)\nsns.rugplot(df.y, vertical=True, ax=ax);","051f51b7":"f, ax = plt.subplots(figsize=(6, 6))\ncmap = sns.cubehelix_palette(as_cmap=True, dark=0, light=1, reverse=True)\nsns.kdeplot(df.x, df.y, cmap=cmap, n_levels=60, shade=True);","5f0b96f3":"g = sns.jointplot(x=\"x\", y=\"y\", data=df, kind=\"kde\", color=\"m\")\ng.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\ng.ax_joint.collections[0].set_alpha(0)\ng.set_axis_labels(\"$X$\", \"$Y$\");","af39bb13":"sns.pairplot(iris);","7a2cad5d":"sns.pairplot(iris, hue='species');","21dcaefa":"g = sns.PairGrid(iris)\ng.map_diag(sns.kdeplot)\ng.map_offdiag(sns.kdeplot, n_levels=6, shade=True);","655e45f5":"sns.set(color_codes=True)","7ae0d8d4":"sns.regplot(x='total_bill', y='tip', data=tips);","2d0141e3":"sns.lmplot(x='total_bill', y='tip', data=tips);","69511af9":"sns.lmplot(x='size', y='tip', data=tips);","b3fbf22d":"sns.lmplot(x='size', y='tip', data=tips, x_jitter=0.05);","9578e2d6":"sns.lmplot(x='size', y='tip', data=tips, x_estimator=np.mean);","022a9245":"anscombe = sns.load_dataset('anscombe')\nanscombe","bf9c9ddd":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='I'\"));","b0a3cb30":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='I'\"),\n           ci=None);","2834838c":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='II'\"),\n          ci=None, scatter_kws={'s':80});","079fd17f":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='II'\"),\n           order=2, ci=None);","9bf80dbf":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='III'\"),\n           ci=None);","ec4414ec":"sns.lmplot(x='x', y='y', data=anscombe.query(\"dataset=='III'\"),\n          robust=True, ci=None);","82a2d37a":"tips[\"big_tip\"] = (tips.tip \/ tips.total_bill) > .15\nsns.lmplot(x='total_bill', y='big_tip', data=tips,\n          y_jitter=0.03);","1c917c42":"sns.lmplot(x='total_bill', y='big_tip', data=tips,\n          logistic=True, y_jitter=0.03);","6346b8cb":"sns.lmplot(x='total_bill', y='big_tip', data=tips, lowess=True, y_jitter=0.03);","661fe3d4":"sns.residplot(x=\"x\", y=\"y\", data=anscombe.query(\"dataset == 'I'\"),\n              scatter_kws={\"s\": 80});","8da63aa8":"sns.residplot(x=\"x\", y=\"y\", data=anscombe.query(\"dataset == 'II'\"),\n              scatter_kws={\"s\": 80});","9fbba732":"sns.lmplot(x='total_bill', y='tip', data=tips, hue='smoker');","1429c3b1":"sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips,\n           markers=[\"o\", \"x\"], palette=\"magma\");","96e3f788":"sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", col=\"time\", data=tips);","9e737cac":"sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\",\n           col=\"time\", row=\"sex\", data=tips);","0ac56de0":"f, ax = plt.subplots(figsize=(5, 6))\nsns.regplot(x=\"total_bill\", y=\"tip\", data=tips, ax=ax);","06fdd778":"sns.lmplot(x=\"total_bill\", y=\"tip\", col=\"day\", data=tips,\n           col_wrap=2, height=3);","6de8c72d":"sns.lmplot(x=\"total_bill\", y=\"tip\", col=\"day\", data=tips,\n           aspect=.5);","17e05c90":"sns.jointplot(x=\"total_bill\", y=\"tip\", data=tips, kind=\"reg\");","73666aa6":"sns.pairplot(tips, x_vars=[\"total_bill\", \"size\"], y_vars=[\"tip\"],\n             height=5, aspect=.8, kind=\"reg\");","846be119":"sns.pairplot(tips, x_vars=[\"total_bill\", \"size\"], y_vars=[\"tip\"],\n             hue=\"smoker\", height=5, aspect=.8, kind=\"reg\");","41685c6f":"sns.set(style='ticks')","ee3502aa":"g = sns.FacetGrid(tips, col='time');","66c78078":"g = sns.FacetGrid(tips, col='time')\ng.map(plt.hist, 'tip');","4ced04fb":"sns.FacetGrid(tips, col='time').map(plt.hist, 'tip');","15c6919a":"sns.FacetGrid(tips, col='sex',\n              hue='smoker').map(plt.scatter, 'total_bill',\n              'tip', alpha=0.7).add_legend();","94d12431":"sns.FacetGrid(tips, row='smoker',\n              col='time', margin_titles=True).map(sns.regplot, 'size', 'total_bill', \n                                                 fit_reg=False, x_jitter=.1, color='.3');","77cd1f83":"sns.FacetGrid(tips, col='day', height=4, aspect=.5).map(sns.barplot, 'sex', 'total_bill', palette='magma');","f20798af":"ordered_days = tips['day'].value_counts().index\nordered_days","ff75d04c":"sns.FacetGrid(tips, row='day', row_order=ordered_days,\n             height=1.7, aspect=4).map(sns.distplot, 'total_bill', hist=False, rug=True);","e09ae932":"sns.FacetGrid(tips, hue='time', palette='magma', height=7).map(plt.scatter, 'total_bill', 'tip').add_legend();","5f9e97ce":"sns.FacetGrid(tips, hue='sex', palette='Set1', height=5.5, \n              hue_kws={'marker':['^', 'v']}).map(plt.scatter, 'total_bill', 'tip').add_legend();","84464ab5":"attend = sns.load_dataset('attention', index_col=0).query(\"subject <= 12\")\nattend","8a8ae0ee":"sns.FacetGrid(attend, col='subject', col_wrap=4, \n              height=2, ylim=(0, 10)).map(sns.pointplot, 'solutions', 'score', \n                                         order=[1,2,3], color='.3', ci=None);","ae74f5bc":"It\u2019s possible to fit a linear regression when one of the variables takes discrete(categories) values, however, the simple scatterplot produced by this kind of dataset is often not optimal:","f9a48dc7":"The number of bins is automatically chosen; the below plot shows that.","5c6e0c1f":"#### Violinplot\n","8ad17db2":"With y variable binary simple linear regression returns implausible predictions.","c7ee3a98":"The **bandwidth('bw')** parameter controls how to **tightly the estimation is to fit the data** , pretty much like bin size in histogram. It corresponds to the width of the kernel we plot. The default behaviour tries to guess a good value using a common reference rule.","c2a16090":"### Plotting wide-form data","2bfc4aea":"The solution in this case is to fit a **logistic regression**, such that the regression line shows the estimated **probability of y = 1 for a given value of x**.","9676da7e":"An altogether different approach is to fit a nonparametric regression using a lowess smoother. This approach has the fewest assumptions, although it is computationally intensive and so currently confidence intervals are not computed at all.","840e6f35":"* ### Histograms","40f14a0e":"Similar to how the jointplot is built on top jointgrid; pairplot is built on top of PairGrid.","79821b4b":"##### To plot: \nProvide the FaceGrid object with the names of variables and plotting function.\nExample: comparison of tips given during lunch and dinner.","bde95ef6":"#### Boxenplot\nThese also show the shape of distribution.\n","70220eb3":"### Agregation and representing uncertainity.","7b4c7ded":"In presence of higher-order correlated data, **regplot() and lmplot()** can fit a polynomialk regression model, to explore non-linear trends in data.","41ffa88c":"Adding the hue semantic changes histogram to kde for comparison between multiple distributions.","eb228643":"The sns.kdeplot function gives a more direct interface with easier access to more kde-related functions.","93772a2e":"## PLotting a regression in other context","1fc5298c":"## Conditioning on other variables","eb56dde9":"The residplot() function can be a useful tool for checking whether the simple regression model is appropriate for a dataset. It fits and removes a simple linear regression and then plots the residual values for each observation. Ideally, these values should be randomly scattered around y = 0:","5265a949":"## Conditional small multiples","8701c49d":"In contrast, the size and shape of the lmplot() figure is controlled through the FacetGrid interface using the height and aspect parameters, which apply to each facet in the plot, not to the overall figure itself:","994c1107":"### Visualising Pairwise Relationships\nTo visualise multiple pairwise bivariate distribution we can use the pairplot function","30591dc5":"In presence of outliers we use **robust regression** which has a different weight loss function that downweights relatively large residuals.","74b49e3d":"## Functions to draw linear regression models\nTwo main functions in seaborn are used to visualize a linear relationship as determined through regression. These functions, regplot() and lmplot() are closely related, and share much of their core functionality. It is important to understand the ways they differ, however, so that you can quickly choose the correct tool for particular job.","32d8e65a":"To show bivariate density more continously we can increase the number of contour levels.","1ea68691":"### Hexbin plot\nIt is to bivariate data what histogram is to univariate data. \n","c017652f":"## Visualising Linear Relationships\n","170ceb2a":"The kernel density estimate first replaces each observation with a normal Gaussian curve.","858b3bd7":"Before we noted that the default plots made by regplot() and lmplot() look the same but on axes that have a different size and shape. This is because regplot() is an \u201caxes-level\u201d function draws onto a specific axes. This means that you can make multi-panel figures yourself and control exactly where the regression plot goes. If no axes object is explicitly provided, it simply uses the \u201ccurrently active\u201d axes, which is why the default plot has the same size and shape as most other matplotlib functions. To control the size, you need to create a figure object yourself.","8136e02a":"We can also draw a two dimensional KDE plot.","0604b163":"## Fitting Various types of Models","92fa0af9":"Jointplot returns a JointGrid after plotting,for more flexibilty we can use the Jointgrid directly.","81ebfe3f":"The FacetGrid class is useful when you want to visualize the distribution of a variable or the relationship between multiple variables separately within subsets of your dataset. A FacetGrid can be drawn with up to three dimensions: row, col, and hue. The first two have obvious correspondence with the resulting array of axes; think of the hue variable as a third dimension along a depth axis, where different levels are plotted with different colors.","bf6a3d2b":"### Plotting uni-variate distributions","9ee540a3":"### Categorical Scatterplots - Swarmplots","c6a7b9b0":"## Visualising statistical relationships.","64134633":"Next these curves are summed up to compute the value of density at each point in the support grid; the resulting curve is then normalised so as to give 1 as the area under the curve. ","a496a5ba":"## Plotting categorical data.","aff1e9e0":"## Controlling the size and shape of plot","22c5fb4d":"As you can see above, the nature of the Gaussian KDE(green) process means that estimation extends past the largest and smallest values in the dataset. It\u2019s possible to control how far past the extreme values the curve is drawn with the **cut parameter**; however, this only influences **how the curve is drawn and not how it is fit**:","a34bed63":"## Building Structured multi-plots grids\n* Tidy dataframe is required\n* Useful for huge data intake\n","0080ad63":"### Plotting subsets of data with semantic mapping.","30f2f720":"A second option is to collapse over the observations in each discrete bin to plot an estimate of central tendency along with a confidence interval:","ab556290":"* ###  Kernel Density Estimation\nKDE plots encode the density of observation on one axis with height on representing density.","dbd8c895":"One option is to add some random noise (\u201cjitter\u201d) to the discrete values to make the distribution of those values more clear. Note that jitter is applied only to the scatterplot data and does not influence the regression line fit itself:","214ec9a5":"## Statistical estimation within categories.","e97c5c9c":"* ### Fitting parametric distributions","b2ca1703":" **regplot()** accepts the x and y variables in a variety of formats including simple numpy arrays, pandas Series objects, or as references to variables in a pandas DataFrame object passed to data. In contrast, **lmplot()** has data as a required parameter and the x and y variables must be specified as strings.(Tidy data)","69417dc1":"# Data Exploration and Insights","24bac45d":"### Visualising distribution of observations within categories.\n#### Boxplots","f91448d1":"### Barplots","51bc23a7":"sns.jointplot() plots the variables on multiple panels showing its distribution as well as correlation.","9a86fb5f":"### Emphasising continuity with lineplots.","5cfb5dae":"While having variables with multiple level; we can plot it along columns but will have to **wrap** so as to span multiple columns. **ROWS keyword** cannot be usedto do the same.","8635d477":"## Visualising Distribution of Data","425a55ca":"### Scatterplots\nPlotting 2 different variables on separate axes can be done easily with this; its similar to a rug plot on two dimensions.","8805002e":"### Kernal Density Estimation\n","d44cc885":"## Plotting Bivariate Distributions","9229021e":"A different problem is posed by outliers that deviate for some reason other than the main relationship in study."}}