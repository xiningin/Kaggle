{"cell_type":{"03349cb6":"code","9c6c5571":"code","0bd08ce3":"code","47711621":"code","3194c291":"code","5585a60f":"code","8949f936":"code","ea205e19":"code","55606350":"code","90f08d30":"code","5c71d941":"code","925ffe7f":"code","3ab1ed75":"code","0345257f":"code","9f7427a4":"code","16f9d4dc":"code","451c93bf":"code","a4cb9d9e":"code","051bdd46":"code","12147eea":"code","0542e7b8":"code","dfb91486":"code","3c351a57":"code","ed56794e":"code","e4595621":"code","e2d643f9":"code","4bbc0e13":"markdown","6347836f":"markdown","6e873b4e":"markdown","712496f7":"markdown"},"source":{"03349cb6":"!pip install git+https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp","9c6c5571":"from feature_eng import lowcols2","0bd08ce3":"%matplotlib inline\nfrom IPython.display import SVG, Image\nfrom keras.utils.vis_utils import model_to_dot\n\nimport os.path\nimport sys\nimport re\nimport itertools\nimport csv\nimport datetime\nimport pickle\nimport random\nfrom collections import defaultdict, Counter\nimport gc\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import NullFormatter\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport scipy\nimport gensim\nfrom sklearn.metrics import f1_score, classification_report, confusion_matrix, log_loss\nfrom sklearn.model_selection import train_test_split\nimport gensim\nfrom keras.preprocessing.sequence import skipgrams\nimport tensorflow as tf","47711621":"def hexbin(x, y, color, **kwargs):\n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, cmap=cmap, **kwargs)\ndef scatter(x, y, color, **kwargs):\n    plt.scatter(x, y, marker='.')","3194c291":"img_cnt = 0\ndef save_img():\n    global img_cnt\n    img_cnt += 1\n    img_name = 'img_{0:03}.jpeg'.format(img_cnt)\n    print(img_name)\n    plt.savefig(img_name, pil_kwargs={'quality': 100})","5585a60f":"X_df = pd.read_csv('..\/input\/sample-data-wordanddoc2vec\/sample010.csv', index_col=0)\nX_df_user_group = pd.read_csv('..\/input\/sample-data-wordanddoc2vec\/sample010_user_group.csv', index_col=0)\nX_df_brand_group = pd.read_csv('..\/input\/sample-data-wordanddoc2vec\/sample010_brand_group.csv', index_col=0)\nX_df","8949f936":"plt.figure(figsize=(15, 15))\nplt.imshow(X_df.values.T)\nsave_img()","ea205e19":"wd2v = lowcols2.WD2vec(X_df)\nwd2v","55606350":"num_features = 2\n\nmodels = wd2v.make_model(num_features=num_features, seed=101)\n\nprint('\\n\\n##################### model_gk1 >>>')\nmodels['model_gk1'].summary()\nprint('\\n\\n##################### model_user >>>')\nmodels['model_user'].summary()\nprint('\\n\\n##################### model >>>')\nmodel = models['model']\nmodel.summary()","90f08d30":"# num_features = 2\n\n# from sklearn import decomposition\n# pca = decomposition.PCA(n_components=num_features)\n# pca.fit(X_df)\n# rscore = pca.transform(X_df) \/ 5\n# print(rscore.shape)\n\n# #cscore = pca.components_.T \/ 3\n# cscore = np.zeros((0,num_features))\n# for icol in X_df:\n#     v = X_df[icol]\n#     tmp = rscore[v==1].mean(axis=0, keepdims=True)\n#     cscore = np.r_[cscore, tmp]\n# print(cscore.shape)\n\n# models = wd2v.make_model(num_features=num_features, rscore=rscore, cscore=cscore)\n\n# print('\\n\\n##################### model_gk1 >>>')\n# models['model_gk1'].summary()\n# print('\\n\\n##################### model_user >>>')\n# models['model_user'].summary()\n# print('\\n\\n##################### model >>>')\n# model = models['model']\n# model.summary()","5c71d941":"wgt_lm = wd2v.get_wgt_bycol()\nprint(wgt_lm.shape)\ndf = pd.DataFrame(wgt_lm[:,:5])\nsns.set_context('paper')\ng = sns.PairGrid(df, height=3.5)\ng.map_diag(plt.hist, edgecolor=\"w\")\ng.map_lower(scatter)\ng.map_upper(hexbin)\nsave_img()","925ffe7f":"wgt_user = wd2v.get_wgt_byrow()\n# wgt_user = model.get_layer('user_embedding').get_weights()[0]\nprint(wgt_user.shape)\ndf = pd.DataFrame(wgt_user[:,:5])\nsns.set_context('paper')\ng = sns.PairGrid(df, height=3.5)\ng.map_diag(plt.hist, edgecolor=\"w\")\ng.map_lower(scatter)\ng.map_upper(hexbin)\nsave_img()","3ab1ed75":"%%time\nhst, hst2 = wd2v.train(epochs=512, batch_size=32, verbose=0, lr0=0.005)\nhst_history = hst.history","0345257f":"hst_history = hst.history\n# fig, ax = plt.subplots(1, 3, figsize=(20,5))\n# ax[0].set_title('loss')\n# ax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"loss\"], label=\"Train loss\")\n# ax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_loss\"], label=\"Train y loss\")\n# ax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_neg_user_loss\"], label=\"Train y neg_user loss\")\n# ax[1].set_title('acc')\n# ax[1].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_binary_accuracy\"], label=\"y accuracy\")\n# ax[1].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_neg_user_binary_accuracy\"], label=\"y neg_user accuracy\")\n# ax[2].set_title('learning rate')\n# ax[2].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"lr\"], label=\"learning rate\")\n# ax[0].legend()\n# ax[1].legend()\n# ax[2].legend()\nfig, ax = plt.subplots(1, 3, figsize=(20,5))\nax[0].set_title('loss')\nax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"loss\"], label=\"Train loss\")\nax[1].set_title('acc')\nax[1].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"binary_accuracy\"], label=\"accuracy\")\nax[2].set_title('learning rate')\nax[2].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"lr\"], label=\"learning rate\")\nax[0].legend()\nax[1].legend()\nax[2].legend()","9f7427a4":"hst_history = hst2.history\n\nfig, ax = plt.subplots(1, 3, figsize=(20,5))\nax[0].set_title('loss')\nax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"loss\"], label=\"Train loss\")\nax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_loss\"], label=\"Train y loss\")\nax[0].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_neg_user_loss\"], label=\"Train y neg_user loss\")\nax[1].set_title('acc')\nax[1].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_binary_accuracy\"], label=\"y accuracy\")\nax[1].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"y_neg_user_binary_accuracy\"], label=\"y neg_user accuracy\")\nax[2].set_title('learning rate')\nax[2].plot(list(range(len(hst_history[\"loss\"]))), hst_history[\"lr\"], label=\"learning rate\")\nax[0].legend()\nax[1].legend()\nax[2].legend()","16f9d4dc":"wgt_prod = wd2v.get_wgt_bycol()\nprint(wgt_prod.shape)\ndf = pd.DataFrame(wgt_prod[:,:5])\ndf['brand_group'] = ['brand_group'+str(ii) for ii in X_df_brand_group['0'].values]\nsns.pairplot(df, markers='o', height=3.5, diag_kind='hist', hue='brand_group')\nsave_img()","451c93bf":"wgt_user = wd2v.get_wgt_byrow()\nprint(wgt_user.shape)\ndf = pd.DataFrame(wgt_user[:,:5])\ndf['brand_user_group'] = ['group' + str(ee) for ee in X_df_user_group['0'].values]\nsns.pairplot(df, markers='o', hue='brand_user_group', height=3.5, diag_kind='hist',\n             hue_order=['group'+str(ii) for ii in np.unique(X_df_user_group['0'].values)])\nsave_img()","a4cb9d9e":"df1 = pd.DataFrame(wgt_prod)\ndf1['brand_group'] = X_df_brand_group['0'].values\ndf2 = pd.DataFrame(wgt_user)\ndf2['brand_group'] = ['user_group 1 and 7' if ee=='user_group1' or ee=='user_group7' else 'others' for ee in X_df_user_group['0'].values]\ndf = pd.concat([df2, df1])\n\nplt.figure(figsize=(15,15))\nax = sns.kdeplot(data=df2, x=0, y=1,\n                 levels=5, thresh=.1, hue='brand_group',\n                 hue_order=['user_group 1 and 7', 'others'])\nfor ee in df1.iterrows():\n    ax.scatter(ee[1][0], ee[1][1], s=200, marker='X', c='darkblue')\nax\nsave_img()","051bdd46":"df1 = pd.DataFrame(wgt_prod)\ndf1['brand_group'] = X_df_brand_group['0'].values\ndf2 = pd.DataFrame(wgt_user)\ndf2['brand_group'] = ['user_group 2 and 7' if ee=='user_group2' or ee=='user_group7' else 'others' for ee in X_df_user_group['0'].values]\ndf = pd.concat([df2, df1])\n\nplt.figure(figsize=(15,15))\nax = sns.kdeplot(data=df2, x=0, y=1,\n                 levels=5, thresh=.1, hue='brand_group',\n                 hue_order=['user_group 2 and 7', 'others'])\nfor ee in df1.iterrows():\n    ax.scatter(ee[1][0], ee[1][1], s=200, marker='X', c='darkblue')\nax\nsave_img()","12147eea":"df1 = pd.DataFrame(wgt_prod)\ndf1['brand_group'] = X_df_brand_group['0'].values\ndf2 = pd.DataFrame(wgt_user)\ndf2['brand_group'] = ['user_group 1 and 7' if ee=='user_group1' or ee=='user_group7' else 'others' for ee in X_df_user_group['0'].values]\ndf = pd.concat([df2, df1])\n\nplt.figure(figsize=(10,10))\nax = sns.kdeplot(data=df2, x=0, y=1,\n                 levels=5, thresh=.1, hue='brand_group',\n                 hue_order=['user_group 1 and 7', 'others'])\nfor ee in df1.iterrows():\n    ax.scatter(ee[1][0], ee[1][1], s=200, marker='X', c='darkblue')\nax\nsave_img()","0542e7b8":"df1 = pd.DataFrame(wgt_prod)\ndf1['brand_group'] = X_df_brand_group['0'].values\ndf2 = pd.DataFrame(wgt_user)\ndf2['brand_group'] = ['user_group 2 and 7' if ee=='user_group2' or ee=='user_group7' else 'others' for ee in X_df_user_group['0'].values]\ndf = pd.concat([df2, df1])\n\nplt.figure(figsize=(10,10))\nax = sns.kdeplot(data=df2, x=0, y=1,\n                 levels=5, thresh=.1, hue='brand_group',\n                 hue_order=['user_group 2 and 7', 'others'])\nfor ee in df1.iterrows():\n    ax.scatter(ee[1][0], ee[1][1], s=200, marker='X', c='darkblue')\nax\nsave_img()","dfb91486":"df_out_wgt_user = pd.DataFrame(wgt_user, index=X_df.index)\ndf_out_wgt_user.head()","3c351a57":"df_out_wgt_col = pd.DataFrame(wgt_prod, index=X_df.columns)\ndf_out_wgt_col.head()","ed56794e":"df_out_wgt_user.to_csv('out_user.csv')\ndf_out_wgt_col.to_csv('out_col.csv')","e4595621":"gamma = wd2v.get_gamma()\ngamma, np.sqrt((1\/gamma) \/ 2)","e2d643f9":"np.save('out_gamma', gamma)","4bbc0e13":"# WordAndDoc2vec","6347836f":"### train","6e873b4e":"# load sample data","712496f7":"[WordAndDoc2vec](https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp\/wiki\/WordAndDoc2vec)"}}