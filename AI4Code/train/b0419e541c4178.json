{"cell_type":{"baf9e6aa":"code","4941cb1c":"code","3ade2382":"code","e67ba87a":"code","cd56af6d":"code","b24e603d":"code","8c9a5f51":"code","49d3b4ca":"code","2db36f0b":"code","de9b2105":"code","dc5ec747":"code","13089c7e":"code","9ecdc7fd":"code","a15ba2b4":"code","4febd065":"code","c9135b15":"code","b931db63":"code","a9e1661e":"code","851b813b":"code","ef646ebc":"code","6fa5e0d6":"code","e389a9fa":"code","7fa78b4a":"code","cf49af8e":"code","8148aa82":"code","f5c01bba":"code","469ee8ba":"code","5ebe7c54":"code","f1ffb3b2":"code","21318a02":"code","ca4675fe":"code","bae51ad8":"code","4ad13330":"code","a2e585c3":"code","7242ff07":"code","84f647a2":"code","a56fe269":"code","7912af67":"code","7572e1b2":"code","b9f1ec78":"code","d592114f":"code","0176afc0":"code","2f6f941f":"code","1d329b79":"code","761a1b35":"code","e8265125":"code","a22e957e":"code","cc062cde":"code","0a05e073":"code","e2d56b3a":"code","1f7caa68":"code","11e44173":"code","f4d17450":"code","11f84137":"code","a241b380":"code","02e7db5b":"code","654a0d9a":"code","fdaab774":"markdown","e241d11c":"markdown","be8f9329":"markdown","0340e1fe":"markdown","f0b997be":"markdown","3a272cc0":"markdown","a9fa5f0a":"markdown","199253c9":"markdown","47728b31":"markdown","9e07e41d":"markdown","eb7856d4":"markdown","6019264a":"markdown","1662443c":"markdown","6ac92167":"markdown","386dfe96":"markdown","76bd7e1d":"markdown","75a40666":"markdown","964e27c0":"markdown","c1a9e3d3":"markdown","89486290":"markdown","ada6cc01":"markdown","1f4c24f7":"markdown"},"source":{"baf9e6aa":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sea\nsea.set_style('whitegrid')","4941cb1c":"from sklearn.preprocessing import LabelEncoder,PowerTransformer","3ade2382":"df_train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\nID_test=df_test['PassengerId']","e67ba87a":"df_train.head()","cd56af6d":"sea.countplot(df_train['SibSp'])","b24e603d":"df_train['SibSp'].value_counts()","8c9a5f51":"df_train.sort_values(by=['SibSp'],ascending=False).head(10)","49d3b4ca":"outliner_SibSp=df_train.loc[df_train['SibSp']==8]\noutliner_SibSp","2db36f0b":"df_train=df_train.drop(outliner_SibSp.index,axis=0)","de9b2105":"df_train.loc[df_train['SibSp']==8]","dc5ec747":"sea.boxplot(df_train['Fare'],orient='v')","13089c7e":"df_train.sort_values(by=['Fare','Pclass'],ascending=False).head(10)","9ecdc7fd":"outliner_Fare=df_train.loc[df_train['Fare']>500]\noutliner_Fare","a15ba2b4":"df_train=df_train.drop(outliner_Fare.index,axis=0)","4febd065":"df_train.shape","c9135b15":"df_test.shape","b931db63":"dataset=pd.concat([df_train,df_test],ignore_index=True)","a9e1661e":"dataset.head()","851b813b":"dataset.shape","ef646ebc":"dataset=dataset.fillna(np.nan)\ndataset.isnull().sum()","6fa5e0d6":"dataset.loc[dataset['Embarked'].isnull()]","e389a9fa":"sea.countplot(dataset['Embarked'])","7fa78b4a":"dataset['Embarked']=dataset['Embarked'].fillna('S')","cf49af8e":"dataset.loc[dataset['Fare'].isnull()]","8148aa82":"dataset.loc[(dataset['Pclass']==3)].sort_values(by=['Fare'],ascending=False).head(15)","f5c01bba":"temp=dataset.loc[(dataset['Pclass']==3) & (dataset['Parch']==0) & (dataset['SibSp']==0) & (dataset['Fare']>0)].sort_values(by=['Fare'],ascending=False)\ntemp.head()","469ee8ba":"dataset['Fare']=dataset['Fare'].fillna(temp['Fare'].mean())","5ebe7c54":"g= sea.FacetGrid(df_train,col='Survived')\ng= g.map(sea.distplot,'Age')","f1ffb3b2":"nullAgeSubset=dataset.loc[dataset['Age'].isnull()]\nnullAgeSubset.shape","21318a02":"for index in nullAgeSubset.index:\n    ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])&(dataset['Embarked']==nullAgeSubset.loc[index]['Embarked'])&(dataset['Sex']==nullAgeSubset.loc[index]['Sex'])].mean()\n    if(ageSubsetMean>0):\n        dataset['Age'].loc[index]=ageSubsetMean\n    else:\n        ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])&(dataset['Embarked']==nullAgeSubset.loc[index]['Embarked'])].mean()\n        if(ageSubsetMean>0):\n            dataset['Age'].loc[index]=ageSubsetMean\n        else:\n            ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])].mean()\n            if(ageSubsetMean>0):\n                dataset['Age'].loc[index]=ageSubsetMean\n            else:\n                dataset['Age'].loc[index]=dataset['Age'].mean()\n                ","ca4675fe":"dataset['Age'].isnull().sum()","bae51ad8":"sea.heatmap(df_train.corr(),cmap='BrBG',annot=True)","4ad13330":"sea.countplot(dataset['Sex'],hue=dataset['Survived'])","a2e585c3":"sea.catplot(data=dataset,x='Pclass',y='Survived',kind='bar')","7242ff07":"g=sea.FacetGrid(data=dataset.loc[dataset['Survived']==1],col='Pclass')\ng=g.map(sea.countplot,'Sex')","84f647a2":"dataset.head()","a56fe269":"sea.distplot(np.array(dataset['Fare']).reshape(-1,1),axlabel='Fare')","7912af67":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Fare']).reshape(-1,1)),axlabel='Fare')","7572e1b2":"sea.distplot(np.array(dataset['Age']).reshape(-1,1),axlabel='Age')","b9f1ec78":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Age']).reshape(-1,1)),axlabel='Age')","d592114f":"sea.distplot(np.array(dataset['SibSp']).reshape(-1,1),axlabel='SibSp')","0176afc0":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['SibSp']).reshape(-1,1)),axlabel='SibSp')","2f6f941f":"sea.distplot(np.array(dataset['Parch']).reshape(-1,1),axlabel='Parch')","1d329b79":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Parch']).reshape(-1,1)),axlabel='Parch')","761a1b35":"X=dataset.drop(['Cabin','Name','PassengerId','Survived','Ticket'],axis=1)\nY=dataset['Survived']","e8265125":"X.head(10)","a22e957e":"X['Age']=PowerTransformer().fit_transform(np.array(X['Age']).reshape(-1,1))\nX['Fare']=PowerTransformer().fit_transform(np.array(X['Fare']).reshape(-1,1))\nX['Parch']=PowerTransformer().fit_transform(np.array(X['Parch']).reshape(-1,1))\nX['Sex']=LabelEncoder().fit_transform(X['Sex'])\nX['SibSp']=PowerTransformer().fit_transform(np.array(X['SibSp']).reshape(-1,1))\ndummyPclass=pd.get_dummies(X['Pclass'],prefix='Pclass')\ndummyEmbarked=pd.get_dummies(X['Embarked'],prefix='Embarked')\nX=pd.concat([X.drop(['Pclass','Embarked'],axis=1),dummyPclass,dummyEmbarked],axis=1)","cc062cde":"X.head(15)","0a05e073":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier","e2d56b3a":"X_pro=PolynomialFeatures(degree=2).fit_transform(X)","1f7caa68":"trainDataX=X_pro[:df_train.shape[0]]\ntrainDataY=Y[:df_train.shape[0]].astype('int32')\ntestDataX=X_pro[df_train.shape[0]:]","11e44173":"X_train,X_test,Y_train,Y_test=train_test_split(trainDataX,trainDataY,test_size=0.1,random_state=47)","f4d17450":"model=XGBClassifier(learning_rate=0.001,n_estimators=300,max_depth=30)\n#model=SVC(kernel='poly',C=100,gamma=0.1)\nmodel.fit(X_train,Y_train)\naccuracy_score(Y_train,model.predict(X_train))","11f84137":"accuracy_score(Y_test,model.predict(X_test))","a241b380":"submission=pd.DataFrame(columns=['PassengerId','Survived'])\nsubmission['PassengerId']=ID_test\nsubmission['Survived']=model.predict(testDataX)","02e7db5b":"submission.head()","654a0d9a":"filename='submission.csv'\nsubmission.to_csv(filename,index=False)\nfrom IPython.display import FileLink\nFileLink(filename)","fdaab774":"**7 entries have abnormally high SibSp value**","e241d11c":"** Fare have no relation with age,sex but varies with number of passengers with same same ticket number **","be8f9329":"** Get data of Passengers with Pclass=3 having 0 Parch and 0 SibSp, simliar to the requirement(fare null value) **","0340e1fe":"**Above analysis shows that survival count of female is more the male irrespective of class **","f0b997be":"**Removal Of Outliners**","3a272cc0":"**Finally do all the transformation needed**\n\nNormally ditribute the Age,Fare,Parch,SibSp\n\nLabel Encode the Sex\n\nCreate dummy columns for values for Embarked and Pclass","a9fa5f0a":"Now it looks normalized.","199253c9":"Similarly for SibSp column","47728b31":"** 2 Entries of Emabarked Column have Null Value **","9e07e41d":"** Check if any remaining null value for age **","eb7856d4":"** Age is the not very much determining factor for Survival prediction.**\n\n** But it seems that passengers with young age have more chance of survival **\n\n** Age data is also skewed so need logarithmic transformation **\n","6019264a":"Similarly for Age column","1662443c":"Lets see distribution of Fare","6ac92167":"** Replace the missing values of Age column with entries with similar other parameters Else replace with mean age of dataset **","386dfe96":"** Now lets analyze the available \"Age\" data**","76bd7e1d":"** Replace Fare null value with mean value of above subset **","75a40666":"** After removal of outliners now we can merge the train and test dataset to fill the missing values**","964e27c0":"** 3 entries have very high Fare **","c1a9e3d3":"** Fill the missing Embarked Value with the most frequent one i.e 'S' **","89486290":"Its hightly skewed so we will apply normal distribution to it.","ada6cc01":"Similarly for Parch column","1f4c24f7":"** First class people have more count of survival **"}}