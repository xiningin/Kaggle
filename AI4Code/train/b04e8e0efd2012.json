{"cell_type":{"27cd7984":"code","8035e61a":"code","0f81f749":"code","4331ca96":"code","f0b1ad2d":"code","13ec1134":"code","643d1529":"code","5c6159c8":"code","ff2ca0b0":"code","77d29251":"code","15b05cb1":"code","83da2a13":"code","b4fb7e6f":"code","2453a9c7":"code","dc370ecd":"code","f7e74f66":"code","78b5d520":"code","c1f1556c":"code","50c8810e":"code","e199696a":"code","8045210e":"code","cab9d568":"code","bb3c76c3":"code","f4c3b19b":"code","ffd240ee":"code","81e817b3":"code","d1ade547":"code","bd79c238":"code","2be1045e":"code","fa1818e4":"code","350c9742":"code","0e84d303":"code","7813b5fa":"code","6e5ac79e":"code","3d761e1f":"code","15882502":"code","f9b72ce2":"code","9a38f217":"code","8f1e6393":"code","225787a4":"code","57dd6981":"code","70473018":"code","46a1670a":"code","eb86018e":"code","8693f7cc":"code","6bd5dde5":"code","9d8d45ce":"code","34899c7c":"code","513a5d1c":"code","ad1b1415":"code","7d4f706a":"code","e9001ded":"code","62f67a43":"code","1cc87ed2":"code","24474fb8":"code","603bc62c":"code","089acdc6":"code","ad0d0f42":"code","26df29a5":"code","9b871300":"code","50eceb4a":"code","bbc921c8":"code","80ea412c":"code","6ea253bd":"code","e773f579":"code","f15bc197":"code","afa239fe":"code","af496eda":"code","13b04b1a":"code","4380607d":"code","2fe7a952":"code","81d337a8":"code","49f7aee5":"code","09a2dddd":"code","c5efb7e1":"code","b8f3a977":"code","5c80c3d6":"code","b5ac0b27":"code","d5fc26cc":"code","ff801827":"code","d6ee101c":"code","481bd432":"code","001a1bce":"code","470d1e1a":"code","9f3a6b00":"code","1d9b4cd3":"code","a5101607":"code","f1f50a77":"code","df69ee75":"code","519880ee":"markdown","4de4300f":"markdown","e1fbabcc":"markdown","3e7bc2bf":"markdown","3cb31aa0":"markdown","9178e254":"markdown","097b6976":"markdown","ceeee5ea":"markdown","66530085":"markdown","3bb23c49":"markdown","9be0e172":"markdown","051ecc21":"markdown","3de82d70":"markdown"},"source":{"27cd7984":"# import libraries\n#!pip install turicreate\nimport numpy as np\nimport pandas as pd\n#import turicreate\nfrom sklearn.preprocessing import OneHotEncoder","8035e61a":"# libraries used\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\n\n# Encoders\nfrom category_encoders import TargetEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\n# Strategic imports\nfrom sklearn.preprocessing import PolynomialFeatures, StandardScaler, MinMaxScaler, RobustScaler\nfrom sklearn.base import BaseEstimator, TransformerMixin\nfrom sklearn.model_selection import GridSearchCV, train_test_split, RepeatedStratifiedKFold, cross_val_score\nfrom sklearn.model_selection import StratifiedKFold, StratifiedShuffleSplit\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import accuracy_score\n\n# Machine learning Models\nfrom sklearn.linear_model import LogisticRegression, RidgeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, ExtraTreesClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import StackingClassifier, VotingClassifier\n\nfrom tensorflow import keras\nimport tensorflow as tf\n\n# imports to mute warnings\npd.options.display.max_rows=200\npd.set_option('mode.chained_assignment', None)\n\nfrom warnings import simplefilter\nfrom sklearn.exceptions import ConvergenceWarning\nsimplefilter(\"ignore\", category=ConvergenceWarning)\nsimplefilter(\"ignore\", category=RuntimeWarning)\n\nprint(\"sns.__version__\", sns.__version__)\n#print(\"sklearn.__version__\", sklearn.__version__)","0f81f749":"train = pd.read_csv('..\/input\/alc-datathon-2021\/covid_mental_health_train.csv')\ntest = pd.read_csv('..\/input\/alc-datathon-2021\/covid_mental_health_test.csv')","4331ca96":"print(len(train))","f0b1ad2d":"# summary stats\ntrain.describe()","13ec1134":"train.columns.tolist()","643d1529":"plt.figure(figsize=(40, 8))\nsns.set(font_scale=1.5)\nsns.heatmap(train.corr(), cmap='coolwarm', annot=True, annot_kws={'size':15})\nplt.show()","5c6159c8":"cat = pd.cut(train.income_group,bins=[1, 3, 6, 10],labels=['low','mid','high'])\ntrain.insert(2, \"income_group_binning\", cat)\ntrain.head()","ff2ca0b0":"cat = pd.cut(train.income_group,bins=[1, 3, 6, 10],labels=['low','mid','high'])\ntest.insert(2, \"income_group_binning\", cat)\ntest.head()","77d29251":"cat = pd.cut(train.exercise,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"exercise_binning\", cat)\ntrain.head()","15b05cb1":"cat = pd.cut(train.exercise,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"exercise_binning\", cat)\ntest.head()","83da2a13":"cat = pd.cut(train.healthy_diet,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2,\"healthy_diet_binning\", cat)\ntrain.head()","b4fb7e6f":"cat = pd.cut(train.healthy_diet,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2,\"healthy_diet_binning\", cat)\ntest.head()","2453a9c7":"cat = pd.cut(train.healthy_sleep,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"healthy_sleep_binning\", cat)\ntrain.head()","dc370ecd":"cat = pd.cut(train.healthy_sleep,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"healthy_sleep_binning\", cat)\ntest.head()","f7e74f66":"cat = pd.cut(train.activity,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"activity_binning\", cat)\ntrain.head()","78b5d520":"cat = pd.cut(train.activity,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"activity_binning\", cat)\ntest.head()","c1f1556c":"cat = pd.cut(train.interaction_offline,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"interaction_offline_binning\", cat)\ntrain.head()","50c8810e":"cat = pd.cut(train.interaction_offline,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"interaction_offline_binning\", cat)\ntest.head()","e199696a":"cat = pd.cut(train.interaction_online,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"interaction_online_binning\", cat)\ntrain.head()","8045210e":"cat = pd.cut(train.interaction_online,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"interaction_online_binning\", cat)\ntest.head()","cab9d568":"cat = pd.cut(train.preventive_behaviors,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"preventive_behaviors_binning\", cat)\ntrain.head()","bb3c76c3":"cat = pd.cut(train.preventive_behaviors,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"preventive_behaviors_binning\", cat)\ntest.head()","f4c3b19b":"cat = pd.cut(train.optimism,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"optimism_binning\", cat)\ntrain.head()","ffd240ee":"cat = pd.cut(train.optimism,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"optimism_binning\", cat)\ntest.head()","81e817b3":"cat = pd.cut(train.deterioration_economy,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"deterioration_economy_binning\", cat)\ntrain.head()","d1ade547":"cat = pd.cut(train.deterioration_economy,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"deterioration_economy_binning\", cat)\ntest.head()","bd79c238":"cat = pd.cut(train.deterioration_interact,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"deterioration_interact_binning\", cat)\ntrain.head()","2be1045e":"cat = pd.cut(train.deterioration_interact,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"deterioration_interact_binning\", cat)\ntest.head()","fa1818e4":"cat = pd.cut(train.frustration,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"frustration_binning\", cat)\ntrain.head()","350c9742":"cat = pd.cut(train.frustration,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"frustration_binning\", cat)\ntest.head()","0e84d303":"cat = pd.cut(train.covid_anxiety,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"covid_anxiety_binning\", cat)\ntrain.head()","7813b5fa":"cat = pd.cut(train.covid_anxiety,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"covid_anxiety_binning\", cat)\ntest.head()","6e5ac79e":"cat = pd.cut(train.covid_sleepless,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"covid_sleepless_binning\", cat)\ntrain.head()","3d761e1f":"cat = pd.cut(train.covid_sleepless,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"covid_sleepless_binning\", cat)\ntest.head()","15882502":"cat = pd.cut(train.difficulty_living,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"difficulty_living_binning\", cat)\ntrain.head()","f9b72ce2":"cat = pd.cut(train.difficulty_living,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"difficulty_living_binning\", cat)\ntest.head()","9a38f217":"cat = pd.cut(train.difficulty_work,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntrain.insert(2, \"difficulty_work_binning\", cat)\ntrain.head()","8f1e6393":"cat = pd.cut(train.difficulty_work,bins=[1, 3, 6, 7],labels=['low','mid','high'])\ntest.insert(2, \"difficulty_work_binning\", cat)\ntest.head()","225787a4":"train.to_csv(\"binning_all_train.csv\")\n\ntest.to_csv(\"binning_all_test.csv\")","57dd6981":"train.id.value_counts()","70473018":"train.city.value_counts()","46a1670a":"train.gender.value_counts()","eb86018e":"train.age.value_counts()","8693f7cc":"train.job.value_counts()","6bd5dde5":"train.health_worker_self.value_counts()","9d8d45ce":"train.health_worker_family.value_counts()","34899c7c":"train.family_status.value_counts()","513a5d1c":"train.income_group.value_counts()","ad1b1415":"train.current_physical.value_counts()","7d4f706a":"train.past_physical.value_counts()","e9001ded":"train.current_mental.value_counts()","62f67a43":"train.past_mental.value_counts()","1cc87ed2":"train.exercise.value_counts()","24474fb8":"train.healthy_diet.value_counts()","603bc62c":"train.healthy_sleep.value_counts()","089acdc6":"train.activity.value_counts()","ad0d0f42":"train.interaction_offline.value_counts()","26df29a5":"train.interaction_online.value_counts()","9b871300":"train.preventive_behaviors.value_counts()","50eceb4a":"train.optimism.value_counts()","bbc921c8":"train.deterioration_economy.value_counts()","80ea412c":"train.deterioration_interact.value_counts()","6ea253bd":"train.frustration.value_counts()","e773f579":"train.covid_anxiety.value_counts()","f15bc197":"train.covid_sleepless.value_counts()","afa239fe":"train.difficulty_living.value_counts()","af496eda":"train.difficulty_work.value_counts()","13b04b1a":"train.depression.value_counts()","4380607d":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"id\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    ","2fe7a952":"category1 = [\"depression\",\"id\",\"city\",\"gender\",\"age\",\"job\", \"health_worker_self\",\"health_worker_family\",\"family_status\",\"current_physical\",\"past_physical\",\"current_mental\",\"past_mental\",]\nfor c in category1:\n    bar_plot(c)","81d337a8":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","49f7aee5":"numericVar = [\"income_group\", \"exercise\",\"healthy_diet\",\"healthy_sleep\",\"activity\",\"interaction_offline\",\"interaction_online\",\"preventive_behaviors\",\"optimism\",\"deterioration_interact\",\"frustration\",\"covid_anxiety\",\"covid_sleepless\",\"difficulty_living\",\"difficulty_work\"]\nfor n in numericVar:\n    plot_hist(n)","09a2dddd":"import scipy.stats as stats\nplt.figure(figsize=(10,5))\n\ndensity = stats.gaussian_kde(train[\"optimism\"])\nn, x, _ = plt.hist(train[\"optimism\"], bins = 50, histtype = u\"step\", density = True)\nplt.plot(x, density(x))\n\nplt.show()","c5efb7e1":"#2-ok, #1-not_ok\nnew_train = pd.DataFrame()\nnew_train[\"current_mental\"] = train[\"current_mental\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_train[\"past_mental\"] = train[\"past_mental\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_train[\"past_physical\"] = train[\"past_physical\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_train[\"current_physical\"] = train[\"current_physical\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_train[\"optimism\"] = train[\"optimism\"]\nnew_train[\"deterioration_interact_binning\"]=train[\"deterioration_interact_binning\"]\nnew_train[\"frustration_binning\"]=train[\"frustration_binning\"]\nnew_train[\"difficulty_work_binning\"]=train[\"difficulty_work_binning\"]\nnew_train[\"difficulty_living_binning\"]=train[\"difficulty_living_binning\"]\nnew_train[\"deterioration_economy_binning\"]=train[\"deterioration_economy_binning\"]\nnew_train[\"healthy_sleep_binning\"]=train[\"healthy_sleep_binning\"]\nnew_train[\"depression\"] = train[\"depression\"]\nnew_train[\"id\"] = train[\"id\"]\nnew_train.head()","b8f3a977":"one_hot_encoded_training_predictors = pd.get_dummies(new_train)\none_hot_encoded_training_predictors.head()","5c80c3d6":"new_test = pd.DataFrame()\nnew_test[\"current_mental\"] = test[\"current_mental\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_test[\"past_mental\"] = test[\"past_mental\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_test[\"past_physical\"] = test[\"past_physical\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_test[\"current_physical\"] = test[\"current_physical\"].replace([2,1], [\"ok\",\"not_ok\"])\nnew_test[\"optimism\"] = test[\"optimism\"]\nnew_test[\"deterioration_interact_binning\"]=test[\"deterioration_interact_binning\"]\nnew_test[\"frustration_binning\"]=test[\"frustration_binning\"]\nnew_test[\"difficulty_work_binning\"]=test[\"difficulty_work_binning\"]\nnew_test[\"difficulty_living_binning\"]=test[\"difficulty_living_binning\"]\nnew_test[\"deterioration_economy_binning\"]=test[\"deterioration_economy_binning\"]\nnew_test[\"healthy_sleep_binning\"]=test[\"healthy_sleep_binning\"]\nnew_test[\"id\"] = test[\"id\"]\nnew_test.head()","b5ac0b27":"one_hot_encoded_test = pd.get_dummies(new_test)\none_hot_encoded_test.head()","d5fc26cc":"\narr = train[\"deterioration_interact\"]\narr = np.array(arr)\n\nsqrt_arr = np.sqrt(arr)\ntrain[\"deterioration_interact_sqrt\"] = sqrt_arr\n\ncbrt_arr = np.cbrt(arr)\ntrain[\"deterioration_interact_cbrt\"] = cbrt_arr\n\nlog_arr = np.log(arr)\ntrain[\"deterioration_interact_log\"] = log_arr","ff801827":"import scipy.stats as stats\nplt.figure(figsize=(10,5))\n\ndensity = stats.gaussian_kde(train[\"deterioration_interact\"])\nn, x, _ = plt.hist(train[\"deterioration_interact\"], bins = 50, histtype = u\"step\", density = True)\nplt.plot(x, density(x))\n\nplt.show()","d6ee101c":"\ndensity = stats.gaussian_kde(train[\"deterioration_interact_sqrt\"])\nn, x, _ = plt.hist(train[\"deterioration_interact\"], bins = 50, histtype = u\"step\", density = True)\nplt.plot(x, density(x))\n\nplt.show()","481bd432":"density = stats.gaussian_kde(train[\"deterioration_interact_cbrt\"])\nn, x, _ = plt.hist(train[\"deterioration_interact\"], bins = 50, histtype = u\"step\", density = True)\nplt.plot(x, density(x))\n\nplt.show()","001a1bce":"density = stats.gaussian_kde(train[\"deterioration_interact_log\"])\nn, x, _ = plt.hist(train[\"deterioration_interact_log\"], bins = 50, histtype = u\"step\", density = True)\nplt.plot(x, density(x))\n\nplt.show()","470d1e1a":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15, 8))\nsns.violinplot(data=train, x='frustration', y='depression', inner='box')\nplt.show()","9f3a6b00":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15, 8))\nsns.violinplot(data=train, x='exercise', y='depression', inner='box')\nplt.show()","1d9b4cd3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15, 8))\nsns.violinplot(data=train, x='healthy_sleep', y='depression', inner='box')\nplt.show()","a5101607":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15, 8))\nsns.violinplot(data=train, x='optimism', y='depression', inner='box')\nplt.show()","f1f50a77":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15, 8))\nsns.violinplot(data=train, x='activity', y='depression', inner='box')\nplt.show()","df69ee75":"temp = train.copy()\n\nsns.set(font_scale=1.1)\nfig, ax = plt.subplots(4, 4, figsize=(16, 17))\n\nsns.barplot(data=temp, x='income_group', y='depression', ax=ax[0, 0])\nax[0, 0].set_title('Income group rate', x=0.3, y=1.02, size=27)\nax[0, 0].set_xlabel('income group', size=18)\n\nsns.barplot(data=temp, x='exercise', y='exercise', ax=ax[0, 1])\nax[0, 1].set_title('exercise rate', x=0.3, y=1.02, size=27)\nax[0, 1].set_xlabel('exercise', size=18)\n\n\nsns.barplot(data=temp, x='healthy_diet', y='depression', ax=ax[0, 2])\nax[0, 2].set_title('healthy_diet rate', x=0.3, y=1.02, size=27)\nax[0, 2].set_xlabel('heathy_diet', size=18)\n\n\nsns.barplot(data=temp, x='healthy_sleep', y='depression', ax=ax[0, 3])\nax[0, 3].set_title('healthy_sleep rate', x=0.3, y=1.02, size=27)\nax[0, 3].set_xlabel('heathy_sleep', size=18)\n\nsns.barplot(data=temp, x='activity', y='depression', ax=ax[1, 0])\nax[1, 0]\n\nsns.barplot(data=temp, x='interaction_offline', y='depression', ax=ax[1, 1])\nax[1, 1]\n\nsns.barplot(data=temp, x='interaction_online', y='depression', ax=ax[1, 2])\nax[1, 2]\n\nsns.barplot(data=temp, x='preventive_behaviors', y='depression', ax=ax[1, 3])\nax[1, 3]\n\nsns.barplot(data=temp, x='optimism', y='depression', ax=ax[2, 0])\nax[2, 0]\n\nsns.barplot(data=temp, x='deterioration_interact', y='depression', ax=ax[2, 1])\nax[2, 1]\n\nsns.barplot(data=temp, x='frustration', y='depression', ax=ax[2, 2])\nax[2, 2]\n\n\nsns.barplot(data=temp, x='covid_anxiety', y='depression', ax=ax[2, 3])\nax[2, 3]\n\nsns.barplot(data=temp, x='covid_sleepless', y='depression', ax=ax[3, 0])\nax[3, 0]\n\nsns.barplot(data=temp, x='difficulty_living', y='depression', ax=ax[3, 1])\nax[3, 1]\n\nsns.barplot(data=temp, x='difficulty_work', y='depression', ax=ax[3, 2])\nax[3, 2]\n\nsns.barplot(data=temp, x='age', y='depression', ax=ax[3, 3])\nax[3, 3]","519880ee":"Our initial assumption to thing it to be a positively skewed data and to fix it failed","4de4300f":"# Binning\nFrom the keys file provided we are assuming the datas in the rang of 1-10\/1-7 and also the continuous datas can be binned, we bin them in general into 3 category that we later have used for one hot encoding purppose","e1fbabcc":"We have participated in the competition Ada Lovelace Datathon 2021, we managed to score 11 th position in the leaderboard, we are publishing our attempts in the series of notebooks, rest of the notebook links are-\n\n* [Handling_data_imbalance](https:\/\/www.kaggle.com\/erabaka\/classifier-experiments-with-resample)\n* [Hardcoding Logistic_regression & DecisionTree](https:\/\/www.kaggle.com\/nabilatasnim\/hardcode-logisticregression-decisiontree)\n* [Classification using prebuilt models](https:\/\/www.kaggle.com\/tasnimnishatislam\/26-na-experimentwithclassifiers?fbclid=IwAR15jk4-zEoAPXxQXXgMun-8Ne--LGk5gMalllyGjpcC9BNY_vMFWKR-0Qo)\n\n\n\n","3e7bc2bf":"## Prepare Train, test","3cb31aa0":"# Checking tha data disrtibution and plotting","9178e254":"# Plotting Important Features","097b6976":"We see the correlation analysis of each feature with one another, we took the feature of current mental, past mental, past physical, current physical, optimism, deterioration interact, frustration, difficulty_work, difficulty_living, deteriation, healthy_sleep to be mostly co-related to the depression column","ceeee5ea":"We consider current mental, past mental, past physical, current physical, optimism, deterioration interact, frustration, difficulty_work, difficulty_living, deteriation, healthy_sleep, age to be important feature by seeing the correlation score\n\ncurrent mental, past mental, past physical, current physical = categorical heaviliy imbalanced optimism, deterioration interact, frustration, difficulty_work, difficulty_living, deteriation, healthy_sleep, age = continuous data unequality in it.","66530085":"# Optimism","3bb23c49":"We used this binning dataset later making it as our private dataset, we have kept our dataset private but can be seen by the supervisors","9be0e172":"# Findings","051ecc21":"Optimism is a normally distrributed data roughly, we can show it by plotting bell curve","3de82d70":"From EDA analysis we come to know that  current mental, past mental, past physical, current physical is heavily unbalanced"}}