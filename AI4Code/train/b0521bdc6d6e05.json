{"cell_type":{"31a6eaff":"code","4abc2fce":"code","43f5b857":"code","c020e974":"code","3727022a":"code","3642b64c":"code","64129926":"code","ac299585":"code","f501ddb0":"code","b5a8db05":"code","7b2dc71b":"code","83fac14a":"code","e48570ff":"code","30fdda9b":"code","3373b139":"code","5b8fcaa0":"code","ea5edacf":"code","0c63eae4":"code","50b901cb":"code","e0356bd2":"code","85277554":"code","dbf739a8":"code","81daeef7":"code","294ca759":"markdown","539f3991":"markdown","a1c3ef0d":"markdown","763bb7d8":"markdown","e683ba5d":"markdown"},"source":{"31a6eaff":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","4abc2fce":"plus_minus = pd.read_csv(\"..\/input\/nba_2017_real_plus_minus.csv\")\nwiki = pd.read_csv(\"..\/input\/nba_2017_player_wikipedia.csv\")\ntwitter = pd.read_csv(\"..\/input\/nba_2017_twitter_players.csv\")","43f5b857":"plus_minus['Player'] = plus_minus['NAME'].apply(lambda x: x.split(',')[0])\nplus_minus.head()","c020e974":"new_wiki = wiki[['names','pageviews']].groupby(by='names', as_index=False).mean()\nnew_wiki.head()","3727022a":"twitter.head()","3642b64c":"data = pd.merge(twitter, new_wiki, how='inner', left_on='PLAYER', right_on='names')\ndata = pd.merge(data, plus_minus, how='inner', left_on='PLAYER', right_on='Player')\n\ndata2 = data[['TWITTER_FAVORITE_COUNT','pageviews','WINS']]\ndata2 = data2.dropna(how='any')","64129926":"sns.distplot(data2['TWITTER_FAVORITE_COUNT'],hist=False)","ac299585":"sns.distplot((data2['TWITTER_FAVORITE_COUNT']**(1\/3)),hist=False)","f501ddb0":"sns.distplot(data2['pageviews'],hist=False)","b5a8db05":"sns.distplot(np.log(data2['pageviews']),hist=False)","7b2dc71b":"sns.distplot(data2['WINS'],hist=False)","83fac14a":"data2['log_pv'] = np.log(data2['pageviews'])\ndata2['new_twitter'] = data2['TWITTER_FAVORITE_COUNT']**(1\/3)\nfinal_data = data2[['log_pv','WINS','new_twitter']]","e48570ff":"X = final_data.iloc[:,:2].as_matrix()\ny = final_data.iloc[:,2:].as_matrix()\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=666)","30fdda9b":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import mean_squared_error","3373b139":"from sklearn.svm import SVR\n\nsvr = SVR()","5b8fcaa0":"kernel = ['poly','rbf','linear']\nepsilon = [0.1,0.2,0.3]\n\nparam_grid = dict(kernel=kernel, epsilon=epsilon)\n\ngrid_search = GridSearchCV(svr, param_grid, scoring='neg_mean_squared_error', cv=5)\ngrid_result = grid_search.fit(X_train, y_train)\n\nresult_svr = pd.DataFrame(grid_result.cv_results_)\nresult_svr.sort_values(by='mean_test_score', ascending=False)","ea5edacf":"best_svr = grid_search.best_estimator_\ny_pred = best_svr.predict(X_test)\nprint(mean_squared_error(y_test,y_pred))","0c63eae4":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor()","50b901cb":"n_estimators = [i for i in range(50,350,10)]\nmax_depth = [i for i in range(4,10,1)]\n\nparam_grid = dict(max_depth=max_depth, n_estimators=n_estimators)\n\ngrid_search = GridSearchCV(rfr, param_grid, scoring='neg_mean_squared_error', cv=5)\ngrid_result = grid_search.fit(X_train, y_train)\n\nresult_rfr = pd.DataFrame(grid_result.cv_results_)\nresult_rfr.sort_values(by='mean_test_score', ascending=False)","e0356bd2":"best_rfr = grid_search.best_estimator_\ny_pred = best_rfr.predict(X_test)\nprint(mean_squared_error(y_test,y_pred))","85277554":"from sklearn.neighbors import KNeighborsRegressor\n\nknn = KNeighborsRegressor()","dbf739a8":"p = [i for i in range(1,6)]\nn_neighbors = [i for i in range(2,11)]\n\nparam_grid = dict(p=p, n_neighbors=n_neighbors)\n\ngrid_search = GridSearchCV(knn, param_grid, scoring='neg_mean_squared_error', cv=5)\ngrid_result = grid_search.fit(X_train, y_train)\n\nresult_knn = pd.DataFrame(grid_result.cv_results_)\nresult_knn.sort_values(by='mean_test_score', ascending=False)","81daeef7":"best_knn = grid_search.best_estimator_\ny_pred = best_knn.predict(X_test)\nprint(mean_squared_error(y_test,y_pred))","294ca759":"### SVM","539f3991":"## Data Preprocessing","a1c3ef0d":"### KNN","763bb7d8":"### Random Forest","e683ba5d":"## Model Training"}}