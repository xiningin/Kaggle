{"cell_type":{"1707169e":"code","063a5c52":"code","8283e71f":"code","b98e9344":"code","ef794665":"code","c1f4a5fa":"code","ba835e1d":"code","5cd07e7d":"code","3a050c99":"code","c2e9f044":"code","4021c180":"code","0bb2f606":"markdown","a2cade9f":"markdown","abf4e4e6":"markdown"},"source":{"1707169e":"import numpy as np\nimport pandas as pd\nimport os\nimport glob\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Model\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","063a5c52":"image_dir = Path('..\/input\/dockship-boat-type-classification\/Train')\n\nimage_files = list(image_dir.glob(r'**\/*.jpg'))\nlabels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1], image_files))\n\nimage_df = pd.DataFrame({'Filepath': image_files, 'Label': labels}).astype(str).sample(frac=1.0, random_state=1).reset_index(drop=True)\nimage_df","8283e71f":"train_df, test_df = train_test_split(image_df, train_size=0.7, shuffle=True, random_state=1)","b98e9344":"train_gen=ImageDataGenerator(rescale=1.\/255,\n                             width_shift_range=0.1,\n                             height_shift_range=0.1,\n                             zoom_range=0.2,\n                             shear_range=0.2,\n                             horizontal_flip=True,\n                             validation_split=0.2)\n\ntest_gen=ImageDataGenerator(rescale=1.\/255)","ef794665":"train_images = train_gen.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='training'\n)\n\nval_images = train_gen.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='validation'\n)\n\ntest_images = test_gen.flow_from_dataframe(\n    dataframe=test_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=False\n)","c1f4a5fa":"inception = tf.keras.applications.InceptionResNetV2(weights='imagenet', input_shape=(224,224,3), include_top=False)\n\ninception.trainable = False\n\nmodel = tf.keras.models.Sequential([\n                             mobilenet,\n                             layers.GlobalAveragePooling2D(),\n                             layers.Dropout(0.2),\n                             layers.Dense(256, activation='relu'),\n                             layers.BatchNormalization(),\n                             layers.Dropout(0.1),\n                             layers.Dense(128, activation='relu'),\n                             layers.BatchNormalization(),\n                             layers.Dropout(0.1),\n                             layers.Dense(9, activation='softmax')\n])\nprint(model.summary())","ba835e1d":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","5cd07e7d":"history=model.fit(train_images,validation_data=val_images,epochs=50,callbacks=[tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=5,\n            restore_best_weights=True)\n        \n    ])","3a050c99":"import plotly.express as px\nfig = px.line(\n    history.history,\n    y=['loss', 'val_loss'],\n    labels={'index': \"Epoch\", 'value': \"Loss\"},\n    title=\"Model\"\n)\n\nfig.show()","c2e9f044":"fig = px.line(\n    history.history,\n    y=['accuracy', 'val_accuracy'],\n    labels={'index': \"Epoch\", 'value': \"acc\"},\n    title=\"Model\"\n)\n\nfig.show()","4021c180":"model.evaluate(test_images)","0bb2f606":"# Create Network","a2cade9f":"# Import necessary libraries","abf4e4e6":"# Create datagenerator"}}