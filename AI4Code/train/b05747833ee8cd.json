{"cell_type":{"121583e1":"code","e1827dd9":"code","2b655ba7":"code","f5c8793e":"markdown","a17d67aa":"markdown"},"source":{"121583e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1827dd9":"# lightgbm for classification\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.datasets import make_classification\nfrom lightgbm import LGBMClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom matplotlib import pyplot\n\n# define dataset\nimport numpy as np\n# loading the iris dataset \nX_test = np.load('\/kaggle\/input\/aicore-classification\/X_test.npy', mmap_mode='r')\nX_train = np.load('\/kaggle\/input\/aicore-classification\/X_train.npy', mmap_mode='r')\ny_train = np.load('\/kaggle\/input\/aicore-classification\/y_train.npy', mmap_mode='r')\n\nX=X_train\ny=y_train\n\nimport lightgbm as lgb\n\n# fit the model on the whole dataset\nmodel=LGBMClassifier(multiclass='softmax',max_bin=200,num_leaves=35,max_depth=22,objective='multiclass',num_class=10, random_state=500, silent=True, metric='None', n_jobs=4, n_estimators=7000)\nmodel.fit(X, y)\n\n# make prediction\ny_pred=model.predict(X_test)","2b655ba7":"pd.DataFrame({\"Id\": np.arange(len(y_pred)), \"Category\": y_pred}).astype(int).to_csv(\"Submission_LightGBM.csv\", index=False)","f5c8793e":"# AiCore classification 1\n10 class \"simple\" classification.\n\n\n\nFollowing is the code which our team (Dr. Srinivas Narasegouda and Dr. Ummesalma M) used to build the classification model for the competetion organized by Ai-Core.\n\nThe details of the competetion can be found in https:\/\/www.kaggle.com\/c\/aicore-classification\/overview","a17d67aa":"<h2>Submission<\/h2>\nOur model got the accuracy of 0.49260 on the public leaderboard and 0.48400 on the private leaderboard."}}