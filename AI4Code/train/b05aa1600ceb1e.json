{"cell_type":{"888688c1":"code","0d221c58":"code","1d9bf25f":"code","aefff4a9":"code","528e6345":"code","985f880b":"code","a46ddff7":"code","d35a5694":"code","335beb01":"code","4edc9232":"code","6f4691de":"code","ea994878":"code","a9cbea65":"code","7456bccf":"code","9f9e4a54":"markdown","d3fb6e51":"markdown","084d31e5":"markdown","cb21a229":"markdown","aa992c9d":"markdown","264c8272":"markdown","f781f9ec":"markdown","b0147fa8":"markdown"},"source":{"888688c1":"import pandas as pd\nimport numpy as np","0d221c58":"Path = '..\/input\/pima-indians-diabetes-database\/diabetes.csv'\ntrain_df = pd.read_csv(Path)","1d9bf25f":"train_df.head()","aefff4a9":"train_df.info()","528e6345":"train_df.describe()","985f880b":"#only iterates through feature columns leaving the label (Outcome)\n#features = train_df.drop('Outcome', axis=1)\n#for cols in features:\n#    train_df[cols] = train_df[cols].replace(0,train_df[cols].mean())\ntrain_df['Glucose'] = train_df['Glucose'].replace(0, train_df['Glucose'].mean())\ntrain_df['BloodPressure'] = train_df['BloodPressure'].replace(0, train_df['BloodPressure'].mean())\ntrain_df['SkinThickness'] = train_df['SkinThickness'].replace(0, train_df['SkinThickness'].mean())\ntrain_df['Insulin'] = train_df['Insulin'].replace(0, train_df['Insulin'].mean())\ntrain_df['BMI'] = train_df['BMI'].replace(0, train_df['BMI'].mean())","a46ddff7":"train_df.describe()","d35a5694":"import seaborn as sb\nimport matplotlib.pyplot as plt","335beb01":"#Correlation matrix\n# help from: https:\/\/www.kaggle.com\/zacharywyman\/titanic-top-10-beginner-tutorial\/data?select=train.csv","4edc9232":"corr_matrix = train_df.corr()\nfig, ax = plt.subplots(figsize = (10,8))\nsb.heatmap(corr_matrix, annot = True, fmt='.2g', vmin = -1,\n            vmax = 1, center = 0, cmap = 'coolwarm')","6f4691de":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score","ea994878":"x_train, x_test, y_train, y_test = train_test_split(train_df.drop('Outcome', axis=1), train_df['Outcome'], \n                                                  test_size = 0.2)","a9cbea65":"print(x_train.shape, y_train.shape)\nprint(x_test.shape, y_test.shape)","7456bccf":"model = RandomForestClassifier(n_estimators=250, max_features='auto',\n                              max_depth = 6, criterion='entropy')\nmodel.fit(x_train, y_train)\ny_pred = model.predict(x_test)\nprint(\"Accuracy score of Random Forest: \", (accuracy_score(y_pred, y_test))*100)","9f9e4a54":"Simple RandomForestClassifier of Pima Indians Diabetes Data","d3fb6e51":"Training the model","084d31e5":"Importing Libraries for getting and cleaning data","cb21a229":"minimum value will not be shown as 0 anymore using describe function","aa992c9d":"Retrieving training data","264c8272":"Plotting data","f781f9ec":"x_train is the training features, 613 instances, 8 columns#\ny_train is training labels, 613 instances of the one column (diabetes)\nx and y test are the same but test data","b0147fa8":"Removing 0 values"}}