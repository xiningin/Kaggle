{"cell_type":{"b59ab661":"code","91efd855":"code","d975db9c":"code","e40c0985":"code","9bdd56ec":"code","11a75d35":"code","912df872":"code","cdbc44ca":"code","9728a1fb":"code","21b05d91":"code","3282138e":"code","b0dab401":"code","3c8d6b8a":"code","eed80617":"code","96829ed8":"code","b50bc2f0":"code","b3a59997":"code","d8ecdfb1":"markdown","8ce3be84":"markdown","cc08e715":"markdown","d45a4e32":"markdown","b27fba59":"markdown","91f4b8bc":"markdown","db822727":"markdown","0cfecb58":"markdown"},"source":{"b59ab661":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling as pp\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport plotly.express as px","91efd855":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d975db9c":"df_train = pd.read_csv(\"\/kaggle\/input\/learn-together\/train.csv\", index_col='Id')\ndf_test = pd.read_csv(\"\/kaggle\/input\/learn-together\/test.csv\", index_col='Id')\nprint(df_train.head())","e40c0985":"df_sub = pd.read_csv(\"\/kaggle\/input\/learn-together\/sample_submission.csv\")\nprint(df_sub.head())","9bdd56ec":"print(\"Train dataset shape: \"+ str(df_train.shape))\nprint(\"Test dataset shape:  \"+ str(df_test.shape))","11a75d35":"print(df_train.info())","912df872":"df_train.describe().T","cdbc44ca":"print(df_train.iloc[:,10:-1].columns)","9728a1fb":"pd.unique(df_train.iloc[:,10:-1].values.ravel())","21b05d91":"df_train.iloc[:,10:-1] = df_train.iloc[:,10:-1].astype(\"category\")\ndf_test.iloc[:,10:-1] = df_test.iloc[:,10:-1]. astype(\"category\")","3282138e":"f, ax = plt.subplots(figsize=(8,6))\nsns.heatmap(df_train.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()","b0dab401":"df_train.plot(kind='scatter', x='Vertical_Distance_To_Hydrology', y='Horizontal_Distance_To_Hydrology', alpha=0.5, color='darkblue', figsize=(12,9))\nplt.title('Vertical And Horizontal Distance To Hydrology')\nplt.xlabel(\"Vertical Distance\")\nplt.ylabel(\"Horizontal Distance\")\nplt.show()","3c8d6b8a":"df_train.plot(kind='scatter', x='Aspect', y='Hillshade_3pm', alpha=0.5, color='maroon', figsize=(12,9))\nplt.title('Aspect and Hillshade 3pm Relation')\nplt.xlabel(\"Aspect\")\nplt.ylabel(\"Hillshade 3pm\")\nplt.show()","eed80617":"df_train.plot(kind='scatter', x='Hillshade_Noon', y='Hillshade_3pm', alpha=0.5, color='purple', figsize = (12,9))\nplt.title('Hillshade Noon and Hillshade 3pm Relation')\nplt.xlabel(\"Hillshade_Noon\")\nplt.ylabel(\"Hillshade 3pm\")\nplt.show()","96829ed8":"trace1 = go.Box(\n    y = df_train[\"Vertical_Distance_To_Hydrology\"],\n    name = 'Vertical Distance',\n    marker = dict(color = 'rgb(0,145,119)')\n)\n\ntrace2 = go.Box(\n    y=df_train[\"Horizontal_Distance_To_Hydrology\"],\n    name = 'Horizontal Distance',\n    marker = dict(color = 'rgb(5, 79, 174)')\n)\n\ndata = [trace1, trace2]\n\nlayout = dict(autosize=False, width=700, height=500, title='Distance To Hydrology', paper_bgcolor='rgb(243, 243, 243)',\n             plot_bgcolor='rgb(243, 243, 243)', margin=dict(l=40,r=30,b=80,t=100,))\n\nfig = dict(data=data, layout=layout)\niplot(fig)","b50bc2f0":"trace1 = go.Box(\n    y=df_train[\"Hillshade_Noon\"],\n    name = 'Hillshade Noon',\n    marker = dict(color = 'rgb(255,111,145)')\n)\ntrace2 = go.Box(\n    y=df_train[\"Hillshade_3pm\"],\n    name = 'Hillshade 3pm',\n    marker = dict(color = 'rgb(132,94,194)')\n)\n\ndata = [trace1, trace2]\nlayout = dict(autosize=False, width=700,height=500, title='Hillshade 3pm and Noon', paper_bgcolor='rgb(243, 243, 243)', \n              plot_bgcolor='rgb(243, 243, 243)', margin=dict(l=40,r=30,b=80,t=100,))\nfig = dict(data=data, layout=layout)\niplot(fig)","b3a59997":"f,ax=plt.subplots(1,2,figsize=(15,7))\ndf_train.Vertical_Distance_To_Hydrology.plot.hist(ax=ax[0],bins=30,edgecolor='black',color='crimson')\nax[0].set_title('Vertical Distance To Hydrology')\nx1=list(range(-150,350,50))\nax[0].set_xticks(x1)\ndf_train.Horizontal_Distance_To_Hydrology.plot.hist(ax=ax[1],bins=30,edgecolor='black',color='darkmagenta')\nax[1].set_title('Horizontal Distance To Hydrology')\nx2=list(range(0,1000,100))\nax[1].set_xticks(x2)","d8ecdfb1":"### Exploratory Data Analysis","8ce3be84":"It seems the most important correlations are between \"Horizontal Distance To Hydrology\" and \"Vertical Distance To Hydrology\" with 70%; between \"Aspect\" and \"Hillshade 3pm\" with 60%; between \"Hillshade Noon\" and \"Hillshade 3pm\" with %60; between \"Elevation\" and \"Horizontal Distance To Roadways\" with %60. Let's see how they are looking.","cc08e715":"To be continued...","d45a4e32":"I took help from Fatih Bilgin's kernel. Thanks a lot to show us new ways for data analysis.","b27fba59":"### Data Visualization","91f4b8bc":"I will take a look our categorical categorical variables soil types and wilderness areas.","db822727":"Boxplot can use to see outliers. For a better visualization i will use plotly this time.","0cfecb58":"This time i'll compare vertical and horizontal distance to hydrology with histogram."}}