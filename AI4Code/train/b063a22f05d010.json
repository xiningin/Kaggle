{"cell_type":{"becf3928":"code","7ea728f5":"code","91d371b7":"code","b5a6f3be":"code","e3a9b955":"code","cccab8f5":"code","645c5d2c":"code","1825eb8f":"code","59b36337":"code","32d54ce7":"code","7c742181":"code","61f39950":"code","f67fccb4":"code","15f82072":"code","2d04d39b":"code","5534c61e":"markdown","ef4820e4":"markdown","30de2045":"markdown","3be407f4":"markdown","a6c11ac6":"markdown","26691f0e":"markdown","5e4928fa":"markdown","552c0b0f":"markdown","072fbd1e":"markdown","e6ac356c":"markdown","940b6ee3":"markdown","ab0b6f21":"markdown","0590d773":"markdown","f21d72dc":"markdown","f06e0c28":"markdown"},"source":{"becf3928":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('fivethirtyeight')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n        for filename in filenames:\n            print(os.path.join(dirname, filename))\n\n","7ea728f5":"cols = [\n    'tourney_id', # Id of Tournament\n    'tourney_name', # Name of the Tournament\n    'surface', # Surface of the Court (Hard, Clay, Grass)\n    'draw_size', # Number of people in the tournament\n    'tourney_level', # Level of the tournament (A=ATP Tour, D=Davis Cup, G=Grand Slam, M=Masters)\n    'tourney_date', # Start date of tournament\n    'match_num', # Match number\n    'winner_id', # Id of winner\n    'winner_seed', # Seed of winner\n    'winner_entry', # How the winner entered the tournament\n    'winner_name', # Name of winner\n    'winner_hand', # Dominant hand of winner (L=Left, R=Right, U=Unknown?)\n    'winner_ht', # Height in cm of winner\n    'winner_ioc', # Country of winner\n    'winner_age', # Age of winner\n    'winner_rank', # Rank of winner\n    'winner_rank_points', # Rank points of winner\n    'loser_id',\n    'loser_seed',\n    'loser_entry',\n    'loser_name',\n    'loser_hand',\n    'loser_ht',\n    'loser_ioc',\n    'loser_age',\n    'loser_rank',\n    'loser_rank_points',\n    'score', # Score\n    'best_of', # Best of X number of sets\n    'round', # Round\n    'minutes', # Match length in minutes\n    'w_ace', # Number of aces for winner\n    'w_df', # Number of double faults for winner\n    'w_svpt', # Number of service points played by winner\n    'w_1stIn', # Number of first serves in for winner\n    'w_1stWon', # Number of first serve points won for winner\n    'w_2ndWon', # Number of second serve points won for winner\n    'w_SvGms', # Number of service games played by winner\n    'w_bpSaved', # Number of break points saved by winner\n    'w_bpFaced', # Number of break points faced by winner\n    'l_ace',\n    'l_df',\n    'l_svpt',\n    'l_1stIn',\n    'l_1stWon',\n    'l_2ndWon',\n    'l_SvGms',\n    'l_bpSaved',\n    'l_bpFaced'\n]\n\ndf = pd.concat([\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2000.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2001.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2002.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2003.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2004.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2005.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2006.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2007.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2008.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2009.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2010.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2011.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2012.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2013.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2014.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2015.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2016.csv', usecols=cols),\n    pd.read_csv('\/kaggle\/input\/atp-matches-dataset\/atp_matches_2017.csv', usecols=cols),\n],ignore_index=True) #have to make sure that the index will not be duplicated\n\ndf.tail()","91d371b7":"roger = df.loc[(df['winner_name'] == 'Roger Federer') | (df['loser_name'] == 'Roger Federer')].copy()\n#we want to analyze his performance over time but date is not float 64, so let's change it to datettime datatype.\nroger.tourney_date.apply(lambda x: '%.0f' % round(x,0))\nroger.loc[:,'tourney_date'] = pd.to_datetime(roger['tourney_date'], format='%Y%m%d')","b5a6f3be":"# Let's look at his serve performance over the time. However, we have to look at the number of serve whether it is winner or loser based on loser or winner\n# how important is the serve\n# let's define variable that we will use a lot\nrogerwin = roger.loc[roger['winner_name'] == 'Roger Federer'].copy()\nrogerloss = roger.loc[roger['loser_name'] == 'Roger Federer'].copy()\n# print(f'Number of wins: {rogerwin.count()[0]}')\n# print(f'Number of losses: {rogerloss.count()[0]}')\n    \n    #let's plot the number of wins and losses from 2000 to \nfig = plt.figure(figsize=(5,5)) \nimport matplotlib as mpl\n\nplt.title(\"No. of Roger's Wins and Losses throughout his careers\")\nplt.pie([rogerwin.count()[0],rogerloss.count()[0]],labels = [f'{rogerwin.count()[0]} matches won',f'{rogerloss.count()[0]} matches lost'],textprops={'fontsize': 20})","e3a9b955":"years = []\nfor i in range(0,18):\n    years.append(i+2000)\n\nannualwin = rogerwin.groupby(rogerwin.tourney_date.dt.year).count().tourney_id\nannualloss = rogerloss.groupby(rogerloss.tourney_date.dt.year).count().tourney_id\n\nplt.xticks(np.arange(2000,2017,2), rotation=45)\nplt.plot(years,annualwin,label='Win')\nplt.plot(years[:-1],annualloss,label='Loss')\nplt.legend()\n# plt.subplot(2,2,1)\n# plt.bar(years[:],annualwin)\n\n# plt.subplot(2,2,2)\n# plt.bar(years[:-1],annualloss)\n","cccab8f5":"# Group by the tour_id where level == Grandslam\n# However,l this is until 2017\ntour = rogerwin.loc[rogerwin.tourney_level == 'G'].groupby(rogerwin.tourney_id).count()\nchampionship = tour.loc[tour.tourney_id == 7]\nplt.title('No. of Grandslam Championships')\nplt.yticks([1,2,3])\ngrandslams = championship.groupby(championship.index.map(lambda x: x[0:4])).count()\nplt.bar(grandslams.index,grandslams.tourney_id)\n\n","645c5d2c":"# Will do this later\n\n# let's look at whether he has finished a match with fewer number of matches or not the time by looking at the number of sets overall, only when he won.\n# On the other hand, did he lose more difficult? meaning does it require more sets for opponents to win over him?\n# This is difficult because for grandslam, you need 3 sets to win while you only need two for mormal matches\nrogerwin['No. of sets'] = rogerwin.score.map(lambda x: len(x.split(' ')) if (len(x.split(' ')) <= 5) else 5)\nroger.head()\n# roger.score.str.split(' ')\n# roger.drop('No. of sets', axis = 1)\n\n\n# average game when roger win through each year\n# this number is kinda difficult to see because grand slams require 3 sets while normal tournament would be 2\n# averageNoSets = roger.loc[roger.winner_name == 'Roger Federer'].groupby(roger.tourney_date.dt.year).mean()['No. of sets']\naverageNoSets = roger.loc[roger.winner_name == 'Roger Federer'].groupby(roger.tourney_date.dt.year).mean()\naverageNoSets.head()\n# plt.plot(years,averageNoSets)\n\n\n\n","1825eb8f":"#let's look at his serve performance by\n# 1) number of his aces\/servepoints, average percentage of ace per match!\n# 2) number of his double faults\/servepoints\n# 3) 1stin = 1st serve in\n\ndef get_aces_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        val = row.w_ace\/row.w_svpt\n    elif row['loser_name'] == 'Roger Federer':\n        val = row.l_ace\/row.l_svpt\n    return val\n\ndef get_double_faults_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        val = row.w_df\/row.w_svpt\n    elif row['loser_name'] == 'Roger Federer':\n        val = row.l_df\/row.l_svpt\n    return val\n\ndef get_1st_serve_in_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        val = row.w_1stIn\/row.w_svpt\n    elif row['loser_name'] == 'Roger Federer':\n        val = row.l_1stIn\/row.l_svpt\n    return val\n\ndef get_first_serve_win_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        val = row.w_1stWon\/row.w_svpt\n    elif row['loser_name'] == 'Roger Federer':\n        val = row.l_1stWon\/row.l_svpt\n    return val\n\ndef get_second_serve_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        val = row.w_2ndWon\/row.w_svpt\n    elif row['loser_name'] == 'Roger Federer':\n        val = row.l_2ndWon\/row.l_svpt\n    return val\n\n\n\nroger['roger_aces_percentage'] = roger.apply(get_aces_percent, axis=1)\nroger['roger_double_faults_percentage'] = roger.apply(get_double_faults_percent, axis=1)\nroger['roger_1st_serve_in_percent'] = roger.apply(get_1st_serve_in_percent, axis=1)\nroger['roger_first_serve_win_percentage'] = roger.apply(get_first_serve_win_percent, axis=1)\nroger['roger_second_serve_win_percentage'] = roger.apply(get_second_serve_percent, axis=1)\n\n#group by year\ngroupbyyear = roger.groupby(roger.tourney_date.dt.year).mean()\n\n\nfig = plt.figure()\nfig, (ax1,ax2) = plt.subplots(\n    nrows=2,\n    ncols=1,\n    sharex=True\n)\n\nfig.set_size_inches(15,10)\nfig.subplots_adjust(wspace=0.5)\n\nax1.set_title('Percentage of Aces and Double Faults')\n\nax1.set_ylabel('percentage')\nax1.set_xticks(np.arange(2000,2017,2))\nax1.plot(groupbyyear.index,groupbyyear['roger_aces_percentage'], label='Ace')\nax1.plot(groupbyyear.index,groupbyyear['roger_double_faults_percentage'],label='Double Faults')\nax1.legend()\n\nax2.plot(groupbyyear.index,groupbyyear['roger_1st_serve_in_percent'])\nax2.set_ylabel('percentage')\nax2.set_title('Percentage of First Serve In')\nax2.set_xlabel('year')\n\n# groupbyyear = roger.groupby(roger.tourney_date.dt.year).sum()\n# groupbyyear\n","59b36337":"# Now I jsut realized that I should make a new variable that has all the info when Roger won and when he lost.\nroger_win = roger.loc[roger.winner_name == 'Roger Federer', :]\nroger_loss = roger.loc[roger.loser_name == 'Roger Federer', :]","32d54ce7":"def get_breakpoint_saved_percent(row):\n    if row['winner_name'] == 'Roger Federer':\n        if row.w_bpFaced != 0:\n            val = row.w_bpSaved\/row.w_bpFaced\n        else:\n            val = 0\n    elif row['loser_name'] == 'Roger Federer':\n        if row.l_bpFaced != 0:\n            val = row.l_bpSaved\/row.l_bpFaced\n        else:\n            val = 0\n    return val\n\nroger['roger_breakpoint_saved_percent'] = roger.apply(get_breakpoint_saved_percent, axis=1)\n\nmental_level = roger.groupby(roger['tourney_date'].dt.year).mean().roger_breakpoint_saved_percent\nmental_level\n\n\nplt.title(\"Roger' Saved break Points\")\nplt.xlabel('years')\nplt.ylabel('percentage')\nplt.xticks(np.arange(2000,2017,2))\n# plt.plot(np.arange(2000,2018),mental_level)\nplt.plot(years,mental_level)","7c742181":"loss = roger.loc[roger.winner_name != 'Roger Federer', ['winner_name']]\n# loss.rename(r={'winner_name': 'name'})\nloss.columns = ['name']\nloss['status'] = 'loss'\nwin = roger.loc[roger.winner_name == 'Roger Federer', ['loser_name']]\nwin.columns = ['name']\nwin['status'] = 'win'\nopponents = pd.concat([win,loss])\n# opponents\nopponents.groupby('name').count().sort_values('status', ascending = False)","61f39950":"numberofmatches = opponents.groupby('name').count().sort_values('status', ascending = False)\n\nnumberoflosses = opponents.loc[opponents.status == 'loss', :].groupby('name').count().sort_values('status', ascending = False)\n\nfig = plt.figure(figsize=(10,5))\n\nplt.xticks(rotation=45)\nplt.xlabel('opponents')\nplt.ylabel('Number of Matches')\n\n\nplt.bar(numberofmatches.index[0:10],numberofmatches.status[0:10], label='win')\nplt.bar(numberoflosses.index[0:10],numberoflosses.status[0:10], label='loss')\nplt.legend()\nplt.title(\"Roger's head-to-head against his opponents\")","f67fccb4":"opponents_grouped = pd.DataFrame()\nopponents_grouped['No. of matches'] = numberofmatches.status\nopponents_grouped['No. of winning'] = opponents.loc[opponents.status=='win'].groupby('name').count().status\nopponents_grouped['percentage'] = opponents_grouped['No. of winning']\/opponents_grouped['No. of matches']\nopponents_grouped.loc[opponents_grouped['No. of matches'] > 10].sort_values('percentage',ascending = True).head()","15f82072":"opponents.loc[opponents.status=='win'].groupby('name').count()\nplt.xlabel('opponent name')\nplt.ylabel(\"Percentage of Roger's winning\")\nplt.xticks(rotation='vertical')\n# plt.bar(opponents_grouped.sort_values('percentage',ascending = True).index[0:10], opponents_grouped.sort_values('percentage',ascending = True).percentage[0:10])\n\nplt.bar(opponents_grouped.loc[opponents_grouped['No. of matches'] > 10].sort_values('percentage',ascending = True).index[0:10], opponents_grouped.sort_values('percentage',ascending = True).percentage[0:10])\nplt.title(\"Roger's Strongest Opponents\")","2d04d39b":"# # let see the number of matches roger participated in each year and the number of matches he won!\n# # Number of matches roger participated\n# numberOfMatchEachYear = roger.groupby(roger.tourney_date.dt.year).count()['tourney_id']\n\n# rogerWin = roger.loc[roger.winner_name == 'Roger Federer',:].groupby(roger.tourney_date.dt.year).count()['tourney_id']\n# rogerLoss = roger.loc[roger.loser_name == 'Roger Federer',:].groupby(roger.tourney_date.dt.year).count()['tourney_id']\n\n# fig = plt.figure()\n# fig, ax = plt.subplots(\n#     nrows=2,\n#     ncols=1\n# )\n\n# fig.set_size_inches(15,10)\n# fig.subplots_adjust(wspace=0.5)\n\n\n# plt.ylabel('number of matches participated')\n# plt.xticks(np.arange(2000,2017,2))\n# plt.ttle('Number of matches')\n# plt.bar(years, numberOfMatchEachYear)\n# plt.bar(years, rogerWin)\n\n\n\n\n\n","5534c61e":"# To Do\n1. Grass Court Analysis. As we all know that Roger is the King of grass court due to his offensive playing style. Let's ensure this by looking at the statistics.\n2. See whether he has finished matched with fewer number of sets or not.","ef4820e4":"**Until now we just foxused on Grand Slam**\nNext, let's look at the number of matches(plays, nor tournament) he participated in each year.","30de2045":"## Overall Performance","3be407f4":"## Roger's opponents throughout the year\n\nWe always pay attention when Roger compete against major players such as Nadal and Djokovic. However, let's see whether who did roger win against the most, and who did he lose again the most. In terms of both percenrage as well as absolute numbers.","a6c11ac6":"## Roger's Mentality over the time\nRoger Feder has been known as one of the calmest players in the world. In the past, he used to be really outrageous. However, he has developed a strong mentality and would really really rarely act aggressively during a match. However, let's see whether that could benefit him in a match or not by looking at the number of breakpoint saved\/breakpoint saved.","26691f0e":"# Setting up","5e4928fa":"## Serve Performance","552c0b0f":"Not only that he has higher number of aces over the year, he also has a smaller number of double faults as well. This indicates that the serve has been stronger as well as more consistent. ","072fbd1e":"Since we are doing solely an analysis of Roger Federer, we only need the rows with roger federer in it. We can filter this by looking at the name of the winner or loser. It has to be 'Roger Federer'","e6ac356c":"It looks like his performance peaked in around 2005-2006, when he was around 24 years old (he was born in August 8, 1981). Of course this doesn't mean that he played batter at that time since all the players improved themselves as well. It just means that he won the most and lost really few compared to other time.","940b6ee3":"# Data Cleaning","ab0b6f21":"**What about the trend of win and loss in each year?**","0590d773":"Let's Look at the number of grandslam. Since there are always 128 players in Grandslam, we have to look at the tournament that roger won for 7 times. Moreover, it has to be level G tournament as well, Grandslam.","f21d72dc":"# Conclusion\nAs expected, Roger Federer's overall performance has been improving over the time. Moreover, his first serve and second serve became stronger and stronger.\n\nLooking head-to-head, Rafael Nadal is Roger's strongest opponent which is not that surprising. \n\nHowever, one surprising fact is that his mentality, according to the number of break poitns saved, remained unstable and did not show a significant improvement. \n\n","f06e0c28":"# A complete analysis of Roger Federer\n\n\nRoger Federer is undeniably one of the greatest tennis players of all time, if not the best. At the point of 2020 May, he holds the highest number of grandslam titles, 20. I, myself, as a tennis player and a data scientist, would like to analyze his performance throughout his career from year 2000-2017 using the data from this file.\n\n\nI personally has been watching his play since 15 years ago and I have noticed a noticable improvement in his playing styles, including his serve, his forehand, his backhand, and his volley etc. However, most players have been probably improving themselves as well so this does not mean that Roger will remain the strongest of all time. We will look at the statistics to answer the following points.\n\n### Outline \n\n1. **Roger's Overall Performance**\n    We will also look whether he finishes the matches with fewere number of games or not.\n\n2. **Roger's Serve Performance**\n    We will see whether his serve improves overall by looking at his number of aces throughout the years. It is true that this might not accurately indicate his performance as most players are getting better and better all the time due to various reasons such as the advancement in technology, sport science, as well as food. However, we could see whether Roger has improved beyond other players or not.\n\n3. **Roger's Mentality**\n    We will look at his mentality according to the number of breakpoints he accomplised overtime.\n4. **Roger's Opponenets** \n    Here we will see who did Roger win and loss against the most.\n\n**Timeline**\nThis data in this data set includes all the matches from 2000 to 2017 (until January). Therefore, the information in 2017 might not well represent the entire year's data.\n\n"}}