{"cell_type":{"87166232":"code","0af30b6a":"code","608d973a":"code","8c8a3d13":"code","eb42c6c2":"code","75fd0524":"code","ab45ddc6":"code","b210e825":"code","b9f144b3":"code","b102242c":"code","1d271d57":"code","e485a1ce":"code","d1e7b9ae":"code","c023f6e4":"code","c97d79fa":"code","db2423f8":"code","79354d0c":"code","1e75d098":"code","90c1f30d":"markdown"},"source":{"87166232":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0af30b6a":"# Importing libaries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","608d973a":"# loading dataset\n\ndf = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf.head()","8c8a3d13":"# showing number of rows and columns\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows',None)","eb42c6c2":"df.head()","75fd0524":"df.info()","ab45ddc6":"df.isnull().sum() ","b210e825":"# ploting heatmap\n\nplt.figure(figsize=(20,20))\nsns.heatmap(df.isnull())","b9f144b3":"null_var=df.isnull().sum()\/df.shape[0]*100\nnull_var","b102242c":"drop_columns = null_var[null_var>17].keys() # more than 17% of data is missing\ndrop_columns","1d271d57":"df1_drop_clm=df.drop(columns = drop_columns) # drop colums\ndf1_drop_clm.shape","e485a1ce":"sns.heatmap(df1_drop_clm.isnull()) # heatmap","d1e7b9ae":"df2_drop_rows = df1_drop_clm.dropna()\ndf2_drop_rows.shape","c023f6e4":"sns.heatmap(df2_drop_rows.isnull()) # now their is no missing value showing in the form of heatmap","c97d79fa":"df2_drop_rows.isnull().sum() # now their is no missing value showing in the form of numbers","db2423f8":"df2_drop_rows.select_dtypes(include=['int64','float64']).columns # showing int and float columns names in the given dataset","79354d0c":"sns.displot(df['MSSubClass'])\nsns.displot(df2_drop_rows['MSSubClass'])","1e75d098":"# displot\n\nnum_var=['MSSubClass', 'LotArea', 'OverallQual', 'OverallCond',\n       'YearBuilt', 'YearRemodAdd', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2',\n       'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF',\n       'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath',\n       'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',\n       'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF',\n       'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal',\n       'MoSold', 'YrSold', 'SalePrice']\nplt.figure(figsize=(20,20))\nfor i, var in enumerate (num_var):\n    plt.subplot(9,4,i+1)\n    sns.displot(df[var],bins=20)\n    sns.displot(df2_drop_rows[var],bins=20)","90c1f30d":"# Data Distribution"}}