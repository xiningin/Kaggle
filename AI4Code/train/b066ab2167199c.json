{"cell_type":{"41fea96d":"code","d2e6c729":"code","d2a6bb4b":"code","f39b3c11":"code","a945fa91":"code","1e2441ba":"code","760d019c":"code","0a07bde3":"code","784ac6b6":"code","779fb9cf":"code","495f74c0":"code","523d648b":"markdown","f96fc955":"markdown","5dc9dcea":"markdown","d7e58353":"markdown","f4726f59":"markdown","0e29bf61":"markdown","bc0830d6":"markdown","b35661d3":"markdown","362c35f8":"markdown","3196e82d":"markdown","bd3569dc":"markdown"},"source":{"41fea96d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2e6c729":"# Read Data\nimport numpy as np     # Linear Algebra (calculate the mean and standard deviation)\nimport pandas as pd    # manipulate data, data processing, load csv file I\/O (e.g. pd.read_csv)\n\n# Visualization\nimport seaborn as sns                  # Visualization using seaborn\nimport matplotlib.pyplot as plt        # Visualization using matplotlib\n%matplotlib inline\nimport plotly                          # Visualization using Plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n# style\nplt.style.use(\"fivethirtyeight\")       # Set Graphs Background style using matplotlib\nsns.set_style(\"darkgrid\")              # Set Graphs Background style using seaborn\n\n# ML model building; Pre Processing & Evaluation\nfrom sklearn.model_selection import train_test_split                     # split  data into training and testing sets\nfrom sklearn.linear_model import LinearRegression, Lasso, Ridge          # Linear Regression, Lasso and Ridge\nfrom sklearn.tree import DecisionTreeRegressor                           # Decision tree Regression\nfrom sklearn.ensemble import RandomForestRegressor                       # this will make a Random Forest Regression\nfrom sklearn import svm                                                  # this will make a SVM classificaiton\nfrom sklearn.svm import SVC                                              # import SVC from SVM\nfrom sklearn.metrics import confusion_matrix, classification_report      # this creates a confusion matrix\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\nfrom sklearn.metrics import roc_curve,auc                                # ROC\nfrom sklearn.preprocessing import StandardScaler                         # Standard Scalar\nfrom sklearn.model_selection import GridSearchCV                         # this will do cross validation\nfrom sklearn.decomposition import PCA                                    # to perform PCA to plot the data\n\nimport warnings                                                          # Ignore Warnings\nwarnings.filterwarnings(\"ignore\")","d2a6bb4b":"# Import first 5 rows\ndf = pd.read_csv(\"\/kaggle\/input\/concrete-compressive-strength-data-set\/compresive_strength_concrete.csv\")\ndf.head()","f39b3c11":"# checking dimension (num of rows and columns) of dataset\ndf.shape","a945fa91":"# check dataframe structure like columns and its counts, datatypes & Null Values\ndf.info()","1e2441ba":"# check the datatypes\ndf.dtypes","760d019c":"# Gives number of data points in each variable\ndf.count()","0a07bde3":"# isnull() check null value\ndf.isnull()","784ac6b6":"# Listing Number of missing values by feature column wise.\ndf.isnull().sum()","779fb9cf":"# any() check null values by columns\ndf.isnull().any()","495f74c0":"# Missing value representation by Heatmap\nplt.figure(figsize=(12,10))\nsns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='viridis')\nplt.xticks(fontsize=14)\nplt.title('Count of Missing Values by Heat Map', fontsize=20, fontweight = 'bold')\nplt.show()","523d648b":"#### Mising Value Checking\n- I use five function for mising value checking\n   - insull()\n      - If any value is null return True\n      - Otherewise return False\n      \n   - isnull().any()\n      - If any columns have null value return True\n      - Otherewise return False\n      \n   - isnull().sum()\n      - If any columns have null value return how many null values have\n      - If no null value present return 0\n      \n   - missingno()\n      - Showing values by bar graph\n      \n   - Heatmap()\n      - Showing values by graph","f96fc955":"- From graph understood that there is **no missing values** in this dataset.","5dc9dcea":"<h2 style=\"color:blue\" align=\"left\"> 2. Load data <\/h2>","d7e58353":"- Observed that **there is no categorical features** in this dataset. Only have **numerical features of int64 & float64**.","f4726f59":"- There is no unwanted column present in given dataset to remove.\n\n     EX: ID, S.No etc","0e29bf61":"#### Checking for Numerical and Categorical features","bc0830d6":"<h2 style=\"color:blue\" align=\"left\"> 3. EDA (Exploratory Data Analysis) <\/h2>\n\n- EDA is a way of **Visualizing, Summarizing and interpreting** the information that is **hidden in rows and column** format.\n\n- Find Unwanted Columns\n- Find Missing Values\n- Find Features with one value\n- Explore the Categorical Features\n- Find Categorical Feature Distribution\n- Relationship between Categorical Features and Label\n- Explore the Numerical Features\n- Find Discrete Numerical Features\n- Relation between Discrete numerical Features and Labels\n- Find Continous Numerical Features\n- Distribution of Continous Numerical Features\n- Relation between Continous numerical Features and Labels\n- Find Outliers in numerical features\n- Explore the Correlation between numerical features","b35661d3":"### 2. Find Missing Values","362c35f8":"- It shows all columns as False means no NULL Values present in dataset.","3196e82d":"### 1. Find Unwanted Columns","bd3569dc":"<h2 style=\"color:blue\" align=\"left\"> 1. Import necessary Libraries <\/h2>"}}