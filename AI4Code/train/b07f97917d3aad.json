{"cell_type":{"eb9d04d0":"code","8d164616":"code","492ea7a7":"code","c41529a7":"code","cd19b08d":"code","048a4359":"code","7969e885":"code","647c27fa":"code","61455306":"code","68bf318b":"code","17fe5618":"code","9b30fe73":"code","b1556c5d":"code","86dd16d6":"code","4dc6df12":"code","dfb75229":"code","0105b5d0":"code","0ec166e0":"code","4cc7aac5":"code","3f0f689f":"code","6a9800d1":"code","3c818c88":"code","1882de3b":"code","dc50b888":"code","b03492f6":"code","2ea074eb":"code","bcf6724c":"code","b15b1fcf":"code","fa21d42a":"code","d186c78e":"code","e8237054":"code","da843a1a":"code","8e27c290":"code","a480eb08":"code","30aa1648":"code","138677b7":"code","cca950ad":"code","4280e8fe":"code","8f995997":"code","84deaead":"code","a1099981":"markdown","d170d110":"markdown","f17ece8d":"markdown","664c4d0a":"markdown","a7ea0a14":"markdown","c2459d1e":"markdown","510507cf":"markdown","2f8a2ce8":"markdown","b385237c":"markdown","f3dc676a":"markdown","2c7c89fe":"markdown","10646992":"markdown","1c8277e6":"markdown","05078759":"markdown","36626d41":"markdown","4a81db92":"markdown","4464f9a8":"markdown","7fd97541":"markdown","d7791a39":"markdown","feac1f91":"markdown","3f080753":"markdown","34d76a8d":"markdown","b3e6a684":"markdown"},"source":{"eb9d04d0":"#Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import r2_score\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8d164616":"#reading the dataset\nzomato_real = pd.read_csv('\/kaggle\/input\/zomato-bangalore-restaurants\/zomato.csv')\nzomato_real.head()","492ea7a7":"# Looking at the information about the dataset, datatypes of the coresponding columns and missing values\nzomato_real.info() ","c41529a7":"#Deleting Unnnecessary Columns\nzomato=zomato_real.drop(['url','dish_liked','phone'],axis=1) #Dropping the column \"dish_liked\", \"phone\", \"url\" and saving the new dataset as \"zomato\"","cd19b08d":"zomato_real.head() # looking at the dataset after transformation ","048a4359":"#Removing the Duplicates\nzomato.duplicated().sum()\nzomato.drop_duplicates(inplace=True)\nzomato_real.head() # looking at the dataset after transformation","7969e885":"#Remove the NaN values from the dataset\nzomato.isnull().sum()\nzomato.dropna(how='any',inplace=True)\nzomato.info() #.info() function is used to get a concise summary of the dataframe","647c27fa":"#Reading Column Names\nzomato.columns","61455306":"#Changing the column names\nzomato = zomato.rename(columns={'approx_cost(for two people)':'cost','listed_in(type)':'type',\n                                  'listed_in(city)':'city'})\nzomato.columns","68bf318b":"#Some Transformations\nzomato['cost'] = zomato['cost'].astype(str) #Changing the cost to string\nzomato['cost'] = zomato['cost'].apply(lambda x: x.replace(',','.')) #Using lambda function to replace ',' from cost\nzomato['cost'] = zomato['cost'].astype(float) # Changing the cost to Float\nzomato.info() # looking at the dataset information after transformation","17fe5618":"#Reading uninque values from the Rate column\nzomato['rate'].unique()","9b30fe73":"#Removing '\/5' from Rates\nzomato = zomato.loc[zomato.rate !='NEW']\nzomato = zomato.loc[zomato.rate !='-'].reset_index(drop=True)\nremove_slash = lambda x: x.replace('\/5', '') if type(x) == np.str else x\nzomato.rate = zomato.rate.apply(remove_slash).str.strip().astype('float')\nzomato['rate'].head() # looking at the dataset after transformation","b1556c5d":"# Adjust the column names\nzomato.name = zomato.name.apply(lambda x:x.title())\nzomato.online_order.replace(('Yes','No'),(True, False),inplace=True)\nzomato.book_table.replace(('Yes','No'),(True, False),inplace=True)\nzomato_real.head() # looking at the dataset after transformation","86dd16d6":"zomato.cost.unique() # cheking the unique costs","4dc6df12":"#Encode the input Variables\ndef Encode(zomato):\n    for column in zomato.columns[~zomato.columns.isin(['rate', 'cost', 'votes'])]:\n        zomato[column] = zomato[column].factorize()[0]\n    return zomato\n\nzomato_en = Encode(zomato.copy())\nzomato_en.head() # looking at the dataset after transformation","dfb75229":"#Get Correlation between different variables\ncorr = zomato_en.corr(method='kendall')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nzomato_en.columns","0105b5d0":"#Defining the independent variables and dependent variables\nx = zomato_en.iloc[:,[2,3,5,6,7,8,9,11]]\ny = zomato_en['rate']\n#Getting Test and Training Set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)\nx_train.head()\n","0ec166e0":"y_train.head()","4cc7aac5":"zomato_en['menu_item'].unique() # seeing the unique values in 'menu_item'","3f0f689f":"zomato_en['location'].unique() # seeing the unique values in 'location'","6a9800d1":"zomato_en['cuisines'].unique() # seeing the unique values in 'cusines'","3c818c88":"zomato_en['rest_type'].unique() # seeing the unique values in 'rest_type'","1882de3b":"x.head()","dc50b888":"y.head()","b03492f6":"#Restaurants delivering Online or not\nsns.countplot(zomato['online_order'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants delivering online or Not')","2ea074eb":"sns.countplot(zomato['book_table'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants allowing table booking or not')","bcf6724c":"plt.rcParams['figure.figsize'] = (13, 9)\nY = pd.crosstab(zomato['rate'], zomato['book_table'])\nY.div(Y.sum(1).astype(float), axis = 0).plot(kind = 'bar', stacked = True,color=['red','yellow'])\nplt.title('table booking vs Normal rate', fontweight = 30, fontsize = 20)\nplt.legend(loc=\"upper right\")\nplt.show()","b15b1fcf":"sns.countplot(zomato['city'])\nsns.countplot(zomato['city']).set_xticklabels(sns.countplot(zomato['city']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(13,13)\nplt.title('Location wise count for restaurants')","fa21d42a":"loc_plt=pd.crosstab(zomato['rate'],zomato['city'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Locationwise Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Location',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend();","d186c78e":"sns.countplot(zomato['rest_type'])\nsns.countplot(zomato['rest_type']).set_xticklabels(sns.countplot(zomato['rest_type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Restuarant Type')","e8237054":"loc_plt=pd.crosstab(zomato['rate'],zomato['rest_type'])\nloc_plt.plot(kind='bar',stacked=True);\nplt.title('Rest type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Rest type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');\nplt.legend().remove();","da843a1a":"sns.countplot(zomato['type'])\nsns.countplot(zomato['type']).set_xticklabels(sns.countplot(zomato['type']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Type of Service')","8e27c290":"type_plt=pd.crosstab(zomato['rate'],zomato['type'])\ntype_plt.plot(kind='bar',stacked=True);\nplt.title('Type - Rating',fontsize=15,fontweight='bold')\nplt.ylabel('Type',fontsize=10,fontweight='bold')\nplt.xlabel('Rating',fontsize=10,fontweight='bold')\nplt.xticks(fontsize=10,fontweight='bold')\nplt.yticks(fontsize=10,fontweight='bold');","a480eb08":"sns.countplot(zomato['cost'])\nsns.countplot(zomato['cost']).set_xticklabels(sns.countplot(zomato['cost']).get_xticklabels(), rotation=90, ha=\"right\")\nfig = plt.gcf()\nfig.set_size_inches(15,15)\nplt.title('Cost of Restuarant')","30aa1648":"fig = plt.figure(figsize=(20,7))\nloc = sns.countplot(x=\"location\",data=zomato_real, palette = \"Set1\")\nloc.set_xticklabels(loc.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Location\",size=18)\nloc\nplt.title('NO. of restaurants in a Location',size = 20,pad=20)","138677b7":"fig = plt.figure(figsize=(17,5))\nrest = sns.countplot(x=\"rest_type\",data=zomato_real, palette = \"Set1\")\nrest.set_xticklabels(rest.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Restaurant type\",size=15)\nrest \nplt.title('Restaurant types',fontsize = 20 ,pad=20)","cca950ad":"plt.figure(figsize=(15,7))\nchains=zomato_real['name'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most famous restaurant chains in Bangaluru\",size=20,pad=20)\nplt.xlabel(\"Number of outlets\",size=15)","4280e8fe":"#Prepairng a Decision Tree Regression\nfrom sklearn.tree import DecisionTreeRegressor\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","8f995997":"#Preparing Random Forest REgression\nfrom sklearn.ensemble import RandomForestRegressor\nRForest=RandomForestRegressor(n_estimators=500,random_state=329,min_samples_leaf=.0001)\nRForest.fit(x_train,y_train)\ny_predict=RForest.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","84deaead":"#Preparing Extra Tree Regression\nfrom sklearn.ensemble import  ExtraTreesRegressor\nETree=ExtraTreesRegressor(n_estimators = 100)\nETree.fit(x_train,y_train)\ny_predict=ETree.predict(x_test)\n\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","a1099981":"#### Restaurants delivering Online or not","d170d110":"The basic idea is analyzing the Buisness Problem of Zomato to get a fair idea about the factors affecting the establishment of different types of restaurant at different places in Bengaluru, aggregate rating of each restaurant and many more. I am using the dataset zomato-bangalore-restaurants.","f17ece8d":"It can be observed that we have got the best accuracy for Extra tree regressor","664c4d0a":"# Regression Analysis","a7ea0a14":"#### Restaurants allowing table booking or not\n","c2459d1e":"### Decision Tree Regression ","510507cf":"#### Restaurant Type","2f8a2ce8":"#### Type and Rating","b385237c":"#### Gaussian Rest type and Rating","f3dc676a":"#### Types of Services","2c7c89fe":"#### The highest correlation is between name and address which is 0.62 which is \n\n---\n\nnot of very much concern \n\n---","10646992":"#### Cost of Restuarant","1c8277e6":"### Splitting the Dataset","05078759":"# Data Visualization","36626d41":"#### Location","4a81db92":"#### No. of Restaurants in a Location","4464f9a8":"#### Location and Rating","7fd97541":"### Random Forest Regression","d7791a39":"# Breakdown of this notebook:\n1. **Loading the dataset:** Load the data and import the libraries. <br>\n2. **Data Cleaning:** <br>\n - Deleting redundant columns.\n - Renaming the columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - #Some Transformations\n3. **Regression Analysis**\n - Linear Regression\n - Decision Tree Regression\n - Random Forest Regression\n4. **Data Visualization:** Using plots to find relations between the features.\n - Restaurants delivering Online or not\n - Restaurants allowing table booking or not\n - Table booking Rate vs Rate\n - Best Location\n - Relation between Location and Rating\n - Restaurant Type\n - Gaussian Rest type and Rating\n - Types of Services\n - Relation between Type and Rating\n - Cost of Restuarant\n - No. of restaurants in a Location\n - Restaurant type\n - Most famous restaurant chains in Bengaluru ","feac1f91":"#### Most famous Restaurant chains in Bengaluru","3f080753":"#### Restaurant type","34d76a8d":"### Extra Tree Regressor","b3e6a684":"#### Table booking Rate vs Normal Rate"}}