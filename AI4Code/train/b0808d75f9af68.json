{"cell_type":{"f3744f71":"code","ba253755":"code","221fcb0a":"code","2fcfa795":"code","bd7d0bdf":"code","cca44bee":"code","2adce5cc":"code","a22cc56a":"code","85c08270":"code","ba9db93b":"code","f2e9bcd7":"code","3f91efd2":"code","97121495":"code","90f9f067":"code","15919689":"code","4c4d32d0":"code","9aee4ff6":"code","4b61aa83":"code","19985cc2":"code","0be57cbf":"code","57dc4b4a":"code","2d724347":"code","28331e70":"code","34b311a8":"code","9824db1f":"code","80f35282":"code","4d021e87":"code","5f673f66":"code","436a34d4":"code","b9e341b7":"code","a92c4c36":"code","de19b429":"code","a63c18fa":"code","0fcc4ebf":"code","beb8d724":"code","ab2fc17d":"code","9e2521d8":"code","46f2efa2":"code","eac1adad":"code","bb7d68f8":"code","b56dbc68":"markdown","b3469356":"markdown","53cfa173":"markdown","38fd65a1":"markdown","bc75fbf0":"markdown","4985e8fa":"markdown","080ba472":"markdown"},"source":{"f3744f71":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression ","ba253755":"import os\nprint(os.listdir(\"..\/input\/graduate-admissions\"))","221fcb0a":"UCLA_data = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")","2fcfa795":"UCLA_data.head(2)","bd7d0bdf":"UCLA_data.info()","cca44bee":"UCLA_data.describe()","2adce5cc":"data = pd.DataFrame(UCLA_data)\ndata.columns = data.columns.str.strip().str.lower().str.replace(' ', '_')","a22cc56a":"data.head(2)","85c08270":"data['chance_of_admit']=data[\"chance_of_admit\"]*100\ndel data[\"serial_no.\"]","ba9db93b":"data.head(2)","f2e9bcd7":"data.columns","3f91efd2":"x=data[\"gre_score\"]\ny=data[\"research\"]\nplt.xlabel(\"GRE Scores\")\nplt.ylabel(\"Research\")\nplt.scatter(x,y)","97121495":"x=data[\"gre_score\"]\ny=data[\"chance_of_admit\"]\nplt.xlabel(\"GRE Scores\")\nplt.ylabel(\"Chance Of Admit\")\nplt.bar(x,y)","90f9f067":"labels = 'gre_score', 'toefl_score', 'university_rating', 'sop', 'lor', 'cgpa','research'\nsizes = [10,10,10,10,10,10,10]\nexplode = (0.1, 0, 0, 0, 0, 0, 0)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","15919689":"sns.distplot(x);","4c4d32d0":"fig,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), ax=ax, annot=True, linewidths=0.05, fmt= '.2f',cmap=\"magma\")\nplt.show()","9aee4ff6":"grid = sns.pairplot(data)\ngrid","4b61aa83":"grid.savefig('PairPlot.png')","19985cc2":"grid.savefig('PairPlot.pdf')","0be57cbf":"high = pd.DataFrame(data[data['chance_of_admit'] > 90])","57dc4b4a":"high.head()","2d724347":"sns.pairplot(high)","28331e70":"x=data[\"research\"]\ny=data[\"chance_of_admit\"]\nplt.xlabel(\"Research\")\nplt.ylabel(\"Chance Of Admit\")\nplt.scatter(x,y)","34b311a8":"x=high[\"research\"]\ny=high[\"chance_of_admit\"]\nplt.xlabel(\"Research\")\nplt.ylabel(\"Chance Of Admit\")\nplt.scatter(x,y)","9824db1f":"print(\"Not Having Research:\",len(data[data.research == 0]))\nprint(\"Having Research:\",len(data[data.research == 1]))\ny = np.array([len(data[data.research == 0]),len(data[data.research == 1])])\nx = [\"Not Having Research\",\"Having Research\"]\nplt.bar(x,y)\nplt.title(\"Research Experience\")\nplt.xlabel(\"Canditates\")\nplt.ylabel(\"Frequency\")\nplt.show()","80f35282":"y = np.array([data[\"toefl_score\"].min(),data[\"toefl_score\"].mean(),data[\"toefl_score\"].max()])\nx = [\"Worst\",\"Average\",\"Best\"]\nplt.bar(x,y)\nplt.title(\"TOEFL Scores\")\nplt.xlabel(\"Level\")\nplt.ylabel(\"TOEFL Score\")\nplt.show()","4d021e87":"x = data[['gre_score', 'toefl_score', 'university_rating', 'sop', 'lor', 'cgpa','research']]\ny = data[['chance_of_admit']]","5f673f66":"x.head(2)","436a34d4":"y.head(2)","b9e341b7":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2)\n\nreg=LinearRegression()","a92c4c36":"reg.fit(X_train,y_train)","de19b429":"reg.score(X_train,y_train)","a63c18fa":"pdt = reg.predict(X_test)\npredicted = pd.DataFrame(pdt, columns = [\"chance_of_admit\"])\npredicted\nX_test","0fcc4ebf":"pdt_custom = reg.predict([[330,120,4,4,4,9,0]])\npredicted = pd.DataFrame(pdt, columns = [\"chance_of_admit\"])\npredicted\npdt_custom","beb8d724":"pdt","ab2fc17d":"actual = y_test\nactual","9e2521d8":"plt.scatter( predicted, actual, color='red')","46f2efa2":"reg.score(X_test, y_test)","eac1adad":"from sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\nrms = sqrt(mean_squared_error(y_test,pdt))\nrms","bb7d68f8":"import tkinter as tk\nfrom tkinter import *\nfrom tkinter import messagebox\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\ndef entry():\n    window = tk.Tk()\n    window.title(\"Admission Predictor\")\n    window.geometry('350x400')\n    \n    Label(window,label=\"MTech Admission Predictor\", font='arial 14 bold').grid(row=0, columnspan=2)\n    Label(window,label=\"\").grid(row=1,column=0)\n    Label(window,label=\"GRE Score\").grid(row=2,column=0)\n    Label(window,label=\"\").grid(row=3,column=0)\n    Label(window,label=\"TOEFEL Score\").grid(row=4,column=0)\n    Label(window,label=\"\").grid(row=5,column=0)\n    Label(window,label=\"University Rating\").grid(row=6,column=0)\n    Label(window,label=\"\").grid(row=7,column=0)\n    Label(window,label=\"SOP Strength\").grid(row=8,column=0)\n    Label(window,label=\"\").grid(row=9,column=0)\n    Label(window,label=\"LOR Strength\").grid(row=10,column=0)\n    Label(window,label=\"\").grid(row=11,column=0)\n    Label(window,label=\"CGPA\").grid(row=12,column=0)\n    Label(window,label=\"\").grid(row=13,column=0)\n    Label(window,label=\"Research Experience\").grid(row=14,column=0)\n    \n    v1=IntVar()\n    v2=IntVar()\n    v3=IntVar()\n    v4=IntVar()\n    v5=IntVar()\n    v6=IntVar()\n    v7=IntVar()\n    \n    v1.set('')\n    v2.set('')\n    v3.set('')\n    v4.set('')\n    v5.set('')\n    v6.set('')\n    v7.set('')\n    \n    \n    e1=Entry(window, textvariable=v1).grid(row=2,column=1)\n    e2=Entry(window, textvariable=v2).grid(row=4,column=1)\n    e3=Entry(window, textvariable=v3).grid(row=6,column=1)\n    e4=Entry(window, textvariable=v4).grid(row=8,column=1)\n    e5=Entry(window, textvariable=v5).grid(row=10,column=1)\n    e6=Entry(window, textvariable=v6).grid(row=12,column=1)\n    e7=Entry(window, textvariable=v7).grid(row=14,column=1)\n    \n    Label(window,label=\"\").grid(row=15,column=0)\n    \n    \n    def insert():\n        newlist=[]\n        gre_score=v1.get()\n        toefl_score=v2.get()\n        university_rating=v3.get()\n        sop=v4.get()\n        lor=v5.get()\n        cgpa=v6.get()\n        research=v7.get()\n        \n        newlist.append(gre_score)\n        newlist.append(toefl_score)\n        newlist.append(university_rating)\n        newlist.append(sop)\n        newlist.append(lor)\n        newlist.append(cgpa)\n        newlist.append(research)\n        \n        newlist_nn=[newlist]\n        print(newlist_nn)\n        \n        \n        pdt = reg.predict(newlist_nn)\n        \n        result = pdt.flatten()\n        messagebox.showinfo(\"% Chance \", \"Your Chance of Admission is %.2f %%\" %(result) )\n        \n        print(\"Your Chance of Admission is %.2f %%\" %(result) )\n        print(\"\\n\")\n        \n        v1.set('')\n        v2.set('')\n        v3.set('')\n        v4.set('')\n        v5.set('')\n        v6.set('')\n        v7.set('')\n        \n        \n    def clear():\n        v1.set('')\n        v2.set('')\n        v3.set('')\n        v4.set('')\n        v5.set('')\n        v6.set('')\n        v7.set('')\n        \n    def close():\n        window.destroy()\n        \n    Button(window, label=\"RESET\", command=clear).grid(row=16,column=0)\n    Button(window, label=\"SUBMIT\", command=insert).grid(row=16,column=1)\n    Button(window, label=\"EXIT\", command=close).grid(row=16,column=2)\n    \n    window.mainloop()\n    \nentry()\n","b56dbc68":"## Get the Data","b3469356":"#### Clearing the Data","53cfa173":"## Import Libraries","38fd65a1":"This part of the Code works fine with Jupyter notebook, or else change 'text' to 'label' in the code to resolve the TCL error which shows up!\n(TCL error is due to the use of tkinter GUI)","bc75fbf0":"## Final GUI Evaluation\n ","4985e8fa":"## Exploratory Data Analysis (EDA)","080ba472":"## Regression"}}