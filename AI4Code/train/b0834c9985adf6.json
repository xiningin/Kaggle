{"cell_type":{"74d91879":"code","8d131a2e":"code","216b90f4":"code","3ad9db17":"code","caa75056":"code","e3908c2d":"code","774e072e":"code","66e5a67c":"code","f126d18e":"code","bb358821":"code","571ac15a":"code","f77aa987":"code","a765b6b8":"code","6b285396":"code","980d5965":"code","85610d91":"code","27411379":"code","f63bcfe1":"code","96af6294":"code","1a6052a0":"code","91e2f2a2":"code","7c5c6ade":"code","6419b3cb":"code","2a5a9dd0":"code","821fcf51":"code","ceed4b47":"code","b6b77b32":"code","30007b94":"code","af12e8f3":"markdown","2ec2c4e9":"markdown","05deea56":"markdown","6e712d9a":"markdown","89623503":"markdown","16c8cdec":"markdown","9e8781c6":"markdown","0e8cb7e1":"markdown","090dd926":"markdown","6211edc5":"markdown","a91d6e1a":"markdown","304c3f23":"markdown","639126e2":"markdown","a0c76f33":"markdown","fa711b2a":"markdown","b4147c52":"markdown","3267869c":"markdown","fb689640":"markdown","67eed24e":"markdown","d5056b10":"markdown","9d166313":"markdown"},"source":{"74d91879":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8d131a2e":"# Library imports\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly as py\nimport numpy as np\nimport plotly.graph_objs as go\nfrom matplotlib import rcParams\nimport plotly.offline as py\nfrom plotly import tools\npy.init_notebook_mode(connected=True)\nplt.figure(figsize=(16, 10))","216b90f4":"data = pd.read_csv(\"..\/input\/zomato.csv\")\nprint(\"************************ Data Shape *************************\")\nprint(data.shape)\nprint(\"************************ Data Size *************************\")\nprint(data.size)\nprint(\"************************ Data Sample *************************\")\ndata.head(2)","3ad9db17":"# get the percentage of nulls in each columns\ndata.isnull().sum()\/len(data)*100","caa75056":"data.columns","e3908c2d":"# Change the confusing columns name to understandable and usable one.\ndata = data.rename(columns = {'approx_cost(for two people)':'average_cost','listed_in(type)':'hotel_type','listed_in(city)':'place'})","774e072e":"data.columns","66e5a67c":"# removing unuseful columns like url, address, phone\ndata = data.drop(['url','address','phone','location'], axis = 1)","f126d18e":"# Rate and average_cost\n\ndata.rate = data.rate.replace(\"NEW\", '0')\ndata.rate = data.rate.replace(\"-\", '0')\n#data.dropna(how ='any', inplace = True)\ndata.rate = data.rate.astype(str)\ndata.rate = data.rate.apply(lambda x: x.replace('\/5',''))\ndata.rate = data.rate.apply(lambda x: float(x))\ndata.average_cost = data.iloc[:,8].str.replace(',', '').astype(float)","bb358821":"data.dish_liked = data.dish_liked.replace(np.nan, 'No Dish', regex=True)","571ac15a":"# to remove the space from the list of liked dishes\nmain_list = []\nseparator = ','\nfor item in data.dish_liked:\n    item_list = item.split(',')\n    new_list = []\n    for it in item_list:        \n        str_content = it.strip()\n        new_list.append(str_content)        \n    main_list.append(separator.join(sorted(new_list)))\ndata['new_dish'] = main_list\ndata['new_dish'][0]","f77aa987":"# to remove the space from the list of liked dishes\ndata.cuisines = data.cuisines.replace(np.nan, 'No Cuisines', regex=True)\nmain_list = []\nseparator = ','\nfor item in data.cuisines:\n    item_list = item.split(',')\n    new_list = []\n    for it in item_list:        \n        str_content = it.strip()\n        new_list.append(str_content)        \n    main_list.append(separator.join(sorted(new_list)))\ndata['new_cuisines'] = main_list\ndata['new_cuisines'][0]","a765b6b8":"# Visualization\nlocation_count = data.groupby(['place']).size().reset_index(name=\"count\")\nlocation_count = location_count.sort_values('count',ascending = True)\nlocation_count.head()","6b285396":"inputdata = [go.Bar(\n            x=location_count['place'],\n            y=location_count['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","980d5965":"rate_group_count = data.groupby(['rate']).size().reset_index(name=\"count\")\nrate_group_count = rate_group_count.sort_values('count',ascending = True)\nrate_group_count.head()","85610d91":"inputdata = [go.Bar(\n            x=rate_group_count['rate'],\n            y=rate_group_count['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","27411379":"name_group_count = data.groupby(['name']).size().reset_index(name=\"count\")\nname_group_count = name_group_count.sort_values('count',ascending = False)\n#name_group_count.head()\ntop20 = name_group_count[0:20]\ntop20","f63bcfe1":"inputdata = [go.Bar(\n            x=top20['name'],\n            y=top20['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","96af6294":"# Online Order availability\nonline_group_count = data.groupby(['online_order']).size().reset_index(name=\"count\")\ntrace = go.Pie(labels=online_group_count['online_order'], values=online_group_count['count'])\npy.iplot([trace], filename='basic_pie_chart')","1a6052a0":"# Table Booking availability\nonline_group_count = data.groupby(['book_table']).size().reset_index(name=\"count\")\ntrace = go.Pie(labels=online_group_count['book_table'], values=online_group_count['count'])\npy.iplot([trace], filename='basic_pie_chart')","91e2f2a2":"votes_group_count = data.groupby(['new_dish']).size().reset_index(name=\"count\")\nvotes_group_count = votes_group_count.sort_values('count',ascending = False)\ntop20 = votes_group_count[1:50]\ninputdata = [go.Bar(\n            x=top20['new_dish'],\n            y=top20['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","7c5c6ade":"cuisines_group_count = data.groupby(['new_cuisines']).size().reset_index(name=\"count\")\ncuisines_group_count = cuisines_group_count.sort_values('count',ascending = False)\ntop20 = cuisines_group_count[0:10]\ninputdata = [go.Bar(\n            x=top20['new_cuisines'],\n            y=top20['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","6419b3cb":"#average_cost\naverage_cost_group_count = data.groupby(['average_cost']).size().reset_index(name=\"count\")\naverage_cost_group_count = average_cost_group_count.sort_values('average_cost',ascending = False)\ntop20 = average_cost_group_count[0:50]\ninputdata = [go.Bar(\n            x=top20['average_cost'],\n            y=top20['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","2a5a9dd0":"hotel_type_group_count = data.groupby(['hotel_type']).size().reset_index(name=\"count\")\nhotel_type_group_count = hotel_type_group_count.sort_values('count',ascending = True)\ntop20 = hotel_type_group_count[:]\ninputdata = [go.Bar(\n            x=top20['hotel_type'],\n            y=top20['count']\n    )]\npy.iplot(inputdata, filename='basic-bar')\nplt.show()","821fcf51":"hotel_type_group_count = data.groupby(['hotel_type']).size().reset_index(name=\"count\")\nhotel_type_group_count = hotel_type_group_count.sort_values('count',ascending = True)\ntrace = go.Pie(labels=hotel_type_group_count['hotel_type'], values=hotel_type_group_count['count'])\npy.iplot([trace], filename='basic_pie_chart')","ceed4b47":"# Create a trace\ntrace = go.Scatter(\n    x = data.rate,\n    y = data.average_cost,\n    mode = 'markers'\n)\ndata = [trace]\n# Plot and embed in ipython notebook!\npy.iplot(data, filename='basic-scatter')","b6b77b32":"data['online_encode'] = data.online_order.map({'Yes':1,'No':0})","30007b94":"trace0 = go.Scatter(\n    x=data.online_encode,\n    y=data.average_cost,\n    mode='markers',\n    marker=dict(color=['rgb(93, 164, 214)', 'rgb(255, 144, 14)',\n               'rgb(44, 160, 101)', 'rgb(255, 65, 54)'],\n        opacity=[1, 0.8, 0.6, 0.4],\n        size=[40, 60, 80, 100],\n    )\n)\n\nin_data = [trace0]\npy.iplot(in_data, filename='bubblechart-color')","af12e8f3":"**list of original columns**","2ec2c4e9":"# Top 20 Brand names of Restaurants\n## Cafe coffee day tops in the list. almost all the top 20 brands are chit chat items. basically **bengaluru is a busy bees home**.","05deea56":"## Higher number of North indian and Chinese Restauranst then followed by South Indian.","6e712d9a":"## The average price range is **200 to 600**. 300 is the highest ever. Good for middle class foodies few hotels are having the prices in the 1000s :)","89623503":"# Most people rated 3.9\n## the range of good rating is starts from 3.0 to 4.4 (atleast above 1000 members voted)\n## 2277 is 0 voted. it might be newly opened hotel or data missing\n## so the **food quality, service, location of the restaurants** are good.","16c8cdec":"## Booking table option is very low. only 12.5% of hotels are allowing the Table booking.\n## The real scenario is, that 12.5% hotels are comes under the luxury category. will explore further.","9e8781c6":"Welcome to Zomato Bengaluru Restaurants EDA.\n\n![image.png](attachment:image.png) \n\nWe are going to see things like good quality restaurants, which food is available at minimum rate, the hotels best food items, where we can go for corporate parties and etc.\n\n\n","0e8cb7e1":"## 50% of people Sitting at home and ordered the food from Hotel. very few people only going for Pubs and Bars :)","090dd926":"# Basically Zomato is an online order platform. out of this, 59% of hotels having the direct online order options.","6211edc5":"##  Core city areas like *BTM, Koramangala, Jaya Nagar, JP Nagar* are having the higher number of restaurants. the one good thing is almost through out the city, there are good number of restaurants. whcih means, **bengaluru is best for Foodies.**","a91d6e1a":"# Content\n![image.png](attachment:image.png)\n1. basic exploration about each category : based on rating, price, food items, place of the hotel, branded restaurants, online order and etc.\n2. relationship between the rate and cost\n\nyet to come\n1. where we can have quality food item with optimal price\n2. where we can go for corporate parties\n3. finding the nearest resataurant with good food.\nand more things come soon..\n","304c3f23":"# Visualization with Story","639126e2":"**Data Quality Check**","a0c76f33":"## More to taste......","fa711b2a":"# Correlation between the features","b4147c52":"# Data Cleaning","3267869c":"**list of modified columns**","fb689640":"## Wow...\n\n## **Briyani** tops in the list. almost all south indian, north indian restaurants default items is briyani","67eed24e":"## If you like it plz ***Upvote***\n## If you have suggestions, Plz ***Comment***\n\n# Happy Learning :)","d5056b10":"## Most of the highly rating food items priced in the range of 100 to 2000 INR. few costliest food items with the price range of 3000 to 6000 INR have good ratings of above 4","9d166313":"# Data Loading\n## Basics about dataset"}}