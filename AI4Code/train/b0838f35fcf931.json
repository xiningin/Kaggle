{"cell_type":{"79974f4e":"code","67611fb0":"code","81e5faa9":"code","7c321352":"code","817b7431":"code","4c88b571":"code","914b3761":"code","18703cff":"code","b22cb64a":"code","19846ce4":"code","fab9d86b":"code","0c7dd897":"code","5086d785":"code","86bbad19":"code","051b4af3":"code","7648bebd":"code","15ee003d":"code","c11d9325":"code","04264005":"code","a76919dc":"code","495dfac2":"code","baa48333":"code","30ef44b0":"markdown","36250342":"markdown","848365a8":"markdown"},"source":{"79974f4e":"import numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","67611fb0":"train_titanic = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_titanic = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n\ntrain_titanic.head()","81e5faa9":"train_titanic.info()","7c321352":"test_titanic.info()","817b7431":"train_titanic['Embarked'].value_counts()","4c88b571":"train_titanic.describe()","914b3761":"%matplotlib inline\nimport matplotlib.pyplot as plt\ntrain_titanic.hist(bins=50, figsize=(20,15))\nplt.show()","18703cff":"train_titanic['Pclass'].value_counts()","b22cb64a":"freq_port = train_titanic.Embarked.dropna().mode()[0]\nfreq_port","19846ce4":"train_titanic['Embarked'] = train_titanic['Embarked'].fillna(freq_port)\n\ntrain_titanic[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","fab9d86b":"train_titanic['Embarked'] = train_titanic['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)\ntest_titanic['Embarked'] = test_titanic['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)","0c7dd897":"train_titanic[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","5086d785":"train_titanic['Sex'] = train_titanic['Sex'].map({'female': 0, 'male': 1}).astype(int)\ntest_titanic['Sex'] = test_titanic['Sex'].map({'female': 0, 'male': 1}).astype(int)","86bbad19":"from sklearn.model_selection import StratifiedShuffleSplit\n\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\nfor train_index, test_index in split.split(train_titanic, train_titanic['Pclass']):\n    strat_train_set = train_titanic.loc[train_index] \n    strat_test_set = train_titanic.loc[test_index]\n\nstrat_test_set['Pclass'].value_counts() \/ len(strat_test_set)","051b4af3":"train_titanic['Pclass'].value_counts() \/ len(train_titanic)","7648bebd":"def income_cat_proportions(data):\n    return data[\"Pclass\"].value_counts() \/ len(data)\n\ntrain_set, test_set = train_test_split(train_titanic, test_size=0.2, random_state=42)\n\ncompare_props = pd.DataFrame({\n    \"Overall\": income_cat_proportions(train_titanic),\n    \"Stratified\": income_cat_proportions(strat_test_set),\n    \"Random\": income_cat_proportions(test_set),\n}).sort_index()\ncompare_props[\"Rand. %error\"] = 100 * compare_props[\"Random\"] \/ compare_props[\"Overall\"] - 100\ncompare_props[\"Strat. %error\"] = 100 * compare_props[\"Stratified\"] \/ compare_props[\"Overall\"] - 100\ncompare_props","15ee003d":"titanic = strat_train_set.copy()","c11d9325":"corr_matrix = titanic.corr()\ncorr_matrix['Survived'].sort_values(ascending=False)","04264005":"titanic = strat_train_set.drop('Survived', axis=1).drop('Ticket', axis=1).drop('Cabin', axis=1).drop('Name', axis=1).drop('Fare', axis=1)\ntitanic_labels = strat_train_set['Survived'].copy()\n\ntitanic_test = strat_test_set.drop('Survived', axis=1).drop('Ticket', axis=1).drop('Cabin', axis=1).drop('Name', axis=1).drop('Fare', axis=1)\ntitanic_test_labels = strat_test_set[\"Survived\"].copy()\n\ntest_titanic = test_titanic.drop('Ticket', axis=1).drop('Cabin', axis=1).drop('Name', axis=1).drop('Fare', axis=1)","a76919dc":"median = titanic[\"Age\"].median()\n\ntitanic['Age'].fillna(median, inplace=True)\ntitanic_test['Age'].fillna(median, inplace=True)\ntest_titanic['Age'].fillna(median, inplace=True)","495dfac2":"from sklearn.ensemble import RandomForestClassifier\n\nrfc = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nrfc.fit(titanic, titanic_labels)\n\npredictions = rfc.predict(titanic_test)\npredictions_mae = mean_absolute_error(predictions, titanic_test_labels)\npredictions_mae","baa48333":"frames = [titanic, titanic_test]\nframes_labels = [titanic_labels, titanic_test_labels]\n\ntitanic = pd.concat(frames)\ntitanic_labels = pd.concat(frames_labels)\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(titanic, titanic_labels)\npreds = model.predict(test_titanic)\n\noutput = pd.DataFrame({'PassengerId': test_titanic.PassengerId, 'Survived': preds})\noutput.to_csv('my_submission.csv', index=False)\nprint('Submission successfully saved!')","30ef44b0":"# Training and Evaluating on the Training Set","36250342":"# Data Cleaning","848365a8":"# Making prediction in the whole training data and make a submission"}}