{"cell_type":{"04712dbd":"code","546bea77":"code","d3f27713":"code","c9dbf714":"code","52241fe9":"code","dfa3fa90":"code","351b3d89":"code","f8040d29":"code","4bffbef8":"code","2e5674d9":"code","690eef75":"code","bac92e0d":"code","1679a93f":"markdown","187b9980":"markdown","cba637a0":"markdown"},"source":{"04712dbd":"# \u3053\u306ePython3\u74b0\u5883\u306b\u306f\u3001\u591a\u304f\u306e\u5f79\u7acb\u3064\u5206\u6790\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n# \u3053\u308c\u306f\u3001kaggle \/ python Docker\u30a4\u30e1\u30fc\u30b8\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff1ahttps\uff1a\/\/github.com\/kaggle\/docker-python\n# \u305f\u3068\u3048\u3070\u3001\u30ed\u30fc\u30c9\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# \u5165\u529b\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u300c..\/input\/\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308a\u307e\u3059\u3002\n# \u305f\u3068\u3048\u3070\u3001\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\uff08[\u5b9f\u884c]\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u304b\u3001Shift + Enter\u30ad\u30fc\u3092\u62bc\u3057\u3066\uff09\u3001\n# \u5165\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u3042\u308b\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4e00\u89a7\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# \u300cSave\uff06Run All\u300d\u3092\u4f7f\u7528\u3057\u3066\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u51fa\u529b\u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u308b\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08\/ kaggle \/ working \/\uff09\u306b\n# \u6700\u592720GB\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\/ kaggle \/ temp \/\u306b\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u3089\u306f\u73fe\u5728\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u5916\u3067\u306f\u4fdd\u5b58\u3055\u308c\u307e\u305b\u3093","546bea77":"# \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3001input\u30d5\u30a1\u30a4\u30eb\u306f\u3001+add data\u304b\u3089\u691c\u7d22\u3059\u308b\u3002\n# \u304a\u306e\u304a\u306e\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u63db\u3048\u308b\n# .csv.zip\u3068\u304b\u5727\u7e2e\u3055\u308c\u3066\u308b\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3082\u5909\u3048\u308b\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n\nsample_submit = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","d3f27713":"train","c9dbf714":"# \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u306e\u3092\u4e00\u901a\u308a\u3084\u3063\u3066\u307f\u3066\u3001\u4e2d\u8eab\u3092\u63b4\u3080\ntrain.head()\ntrain.describe()\ntest.head()\ntest.describe()\nsample_submit.head(10)","52241fe9":"# train\u30c7\u30fc\u30bf\u306e\u306a\u304b\u3067\u3001\u76ee\u7684\u5909\u6570\u3068\u8aac\u660e\u5909\u6570\u3092\u5206\u96e2\u3057\u3066\u3001train_x train_y\u306b\u5206\u3051\u308b\u3001ID\u306f\u843d\u3068\u3059\n# test\u30c7\u30fc\u30bf\u306f\u305d\u306e\u307e\u307e\u4f7f\u3046\u3001ID\u3060\u3051\u843d\u3068\u3059\ntrain_x = train.drop([\"y\",\"ID\"], axis =1)\ntrain_y = train[\"y\"]\ntest_x = test.drop([\"ID\"], axis=1)\n\n# \u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u3092\u304b\u3051\u308b\u3068\u304d\u306f\u3001\u30c7\u30fc\u30bf\u30de\u30fc\u30b8\u3057\u3066\u304a\u304f\ndata_merge = pd.merge(train_x,test_x, how=\"outer\")","dfa3fa90":"# \u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u3001\u6570\u5024\u30c7\u30fc\u30bf\u4ee5\u5916\u3092\u62bd\u51fa\u3059\u308b\n# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u304a\u304f\nCateg_var = [feat for feat in train if train[feat].dtype == np.object]\nprint(len(Categ_var))\nprint(Categ_var)","351b3d89":"# \u30de\u30fc\u30b8\u3057\u305f\u5168\u30c7\u30fc\u30bf\u3067\u3001\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u65bd\u3057\u3066\n# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3066\u304a\u304f\n# \u65e2\u306b\u4e00\u5ea6\u5b9f\u65bd\u3057\u305f\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u518d\u5ea6\u304b\u3051\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\n\nfrom sklearn.preprocessing import LabelEncoder #Library for LabelEncoding\nle = LabelEncoder()\n\nfor col in Categ_var:\n    le.fit(data_merge[col])\n    train_x[col] = le.transform(train_x[col])\n    test_x[col] = le.transform(test_x[col])","f8040d29":"train[\"Age_Fare\"] = train[\"Age\"] * train[\"Fare\"]\ntrain[[\"Age\",\"Fare\",\"Age_Fare\"]].head()","4bffbef8":"from xgboost import XGBClassifier as XGB\n\nmodel = XGB(n_estimators=20, random_satate=71)\nmodel.fit(train_x, train_y)","2e5674d9":"# \u5024\u3092\u4e88\u6e2c\u3059\u308b\npred = model.predict(test_x)","690eef75":"# \u63d0\u51fa\u3059\u308b\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\nsubmission = pd.DataFrame({\"ID\":test[\"ID\"], \"y\": pred})\nsubmission.to_csv(\"submission_first.csv\", index=False)","bac92e0d":"# \u63d0\u51fa\u3059\u308b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u78ba\u8a8d\u3057\u3066\u307f\u308b\nsub = pd.read_csv(\".\/submission_first.csv\")","1679a93f":"# \u7279\u5fb4\u91cf\u3092\u639b\u3051\u7b97\u3057\u3066\u30c7\u30fc\u30bf\u5217\u3092\u4f5c\u308b","187b9980":"\u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u3092\u6271\u3046\u306b\u3042\u305f\u3063\u3066\u3001\n\u5b9a\u756a\u306e\u30e0\u30fc\u30d6\u3092\u8a18\u8f09\u3057\u3066\u304a\u304f","cba637a0":"\u57fa\u672c\u7684\u306aBasic Data Exploration\u3068\u5909\u6570\u5b9a\u7fa9"}}