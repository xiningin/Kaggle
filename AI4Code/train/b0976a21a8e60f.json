{"cell_type":{"d1d1040c":"code","b03bf6e2":"code","f7101f96":"code","3aca8b54":"code","6473034c":"code","e6135e32":"code","0e3113e3":"code","e806f5e3":"code","0e473de1":"code","8b6269aa":"code","18926fce":"code","571e7aeb":"code","9a7fd70c":"code","63830644":"code","756b24e5":"code","3f3e9166":"code","4701d603":"code","5ce5f673":"code","a8c2e747":"code","0f2733df":"code","13bd1aca":"markdown","a55f864d":"markdown"},"source":{"d1d1040c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b03bf6e2":"import numpy as np\nimport pandas as pd\nimport seaborn as sn","f7101f96":"from sklearn.datasets import load_digits\ndigits = load_digits()","3aca8b54":"dir(digits)","6473034c":"%matplotlib inline\nimport matplotlib.pyplot as plt","e6135e32":"plt.gray()\nfor i in range(3):\n    plt.matshow(digits.images[i])","0e3113e3":"digits.data[:5]","e806f5e3":"df = pd.DataFrame(digits.data)\ndf.head()","0e473de1":"df['target'] = digits.target","8b6269aa":"df.head()","18926fce":"X = df.drop('target',axis='columns')\ny = df.target","571e7aeb":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)","9a7fd70c":"len(X_train)","63830644":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()","756b24e5":"model.fit(X_train,y_train)","3f3e9166":"model.score(X_test,y_test)","4701d603":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=80)\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","5ce5f673":"y_predicted = model.predict(X_test)","a8c2e747":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_predicted)\ncm","0f2733df":"plt.figure(figsize=(10,6))\nsn.heatmap(cm,annot=True)\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","13bd1aca":"#### Let's change the n_estimators","a55f864d":"#### customize the matrix"}}