{"cell_type":{"3d2c69c7":"code","eb752407":"code","bf174461":"code","fae1e239":"code","eaf134de":"code","64ddef36":"code","cab42573":"code","798798ae":"code","015721bb":"code","be2ff489":"code","b12caee9":"code","9d163482":"code","00e123b5":"code","8026fe6e":"code","e7f6c5fe":"code","92ac2fb6":"code","c56dc312":"code","36841c6b":"code","d9534ad3":"code","5c126505":"code","e45f3585":"code","620149f0":"code","92466d4b":"code","f5a7a51e":"code","bfa29ba6":"markdown","f9f4c113":"markdown","e6998fed":"markdown","0f6ff921":"markdown","8b8253e0":"markdown","1fd1d007":"markdown","3897e648":"markdown","fbe0fed9":"markdown","b7a73191":"markdown","b1e8704e":"markdown","448b3b58":"markdown","356558ed":"markdown","33e35fbe":"markdown","f91456a8":"markdown","399deee6":"markdown","9fd3b58e":"markdown","77c51358":"markdown"},"source":{"3d2c69c7":"import pandas as pd\nimport numpy as np\nimport urllib\nfrom colorama import Fore, Back, Style\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.image as mpimg\n\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA","eb752407":"df_full = pd.read_csv('..\/input\/pokemon\/Pokemon.csv')\ndf_full.drop(columns=['#'],axis=1, inplace=True)","bf174461":"df_full.head(8).T","fae1e239":"df_full.describe().T","eaf134de":"df_full.info()","64ddef36":"cols = df_full.columns\nfor col in cols: \n    print(f'{y_}Unique values in    {r_}{col} : {r_}{df_full[col].nunique()}')","cab42573":"print(f'{y_}Shape of dataframe: {b_}{df_full.shape} {y_}and total null values: {b_}{df_full.isna().sum().sum()}')","798798ae":"import missingno as msno\nmsno.bar(df_full,(8,6),color='red')\nplt.title('MISSING VALUES',fontsize=14)","015721bb":"df_full['Legendary_map'] = df_full[\"Legendary\"].astype(int)\ndf = df_full.copy()\ndf.drop(columns = ['Type 2'], axis=1, inplace=True)","be2ff489":"df_full.info()","b12caee9":"cols = [ 'Total', 'HP', 'Attack', 'Defense', 'Sp. Atk', 'Sp. Def', 'Speed', 'Generation']\nsns.pairplot(df,hue='Legendary_map',vars=cols,corner=True,plot_kws=dict(linewidth=0, alpha=1),height=4)","9d163482":"corr = df.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nwith sns.axes_style(\"white\"):\n    f, ax = plt.subplots(figsize=(10, 10))\n    ax = sns.heatmap(corr,mask=mask,square=True,linewidths=.8,cmap=\"viridis\",annot=True)","00e123b5":"sns.set_style('dark')\nplt.figure(figsize=(16,6))\nsns.countplot(df_full['Type 1'],\n             palette=['#7ec63c','#f0560f','#3ba7fa','#aab31f','#d5cec8','#9e58a0','#f8bc16','#dabe6a','#f9bef8','#944526','#ef4681','#c1a961','#6f72bd','#7ddbf7','#7059d8','#584537','#9ea0af','#8fa3ec'])","8026fe6e":"sns.set_style('dark')\nplt.figure(figsize=(16,12))\nplt.subplot(211)\nsns.countplot(df_full['Type 1'], hue=df_full['Generation'],palette='hot',linewidth=0,alpha=1)\nplt.subplot(212)\nsns.countplot(df_full['Type 1'], hue= df_full['Legendary'], palette='hot_r', linewidth=0, alpha=1)","e7f6c5fe":"plt.figure(figsize=(12,6))\nsns.distplot(df_full['Total'],color='red',hist_kws={'alpha':1,\"linewidth\": 4}, kde_kws={\"color\": \"black\", \"lw\": 2, \"label\": \"KDE\"})\nplt.title('Distribution of Total', fontdict = {'size': 12})\n# plt.xlabel('Percentage of correct answers', size = 12)","92ac2fb6":"print(f\"{y_}The Pokemons with highest TOTAL are \\n{r_}{df.loc[df['Total'] == df_full['Total'].max()]['Name']}\")","c56dc312":"print(f\"{y_}The Pokemon with lowest TOTAL is \\n{b_}{df.loc[df['Total'] == df_full['Total'].min()]['Name']}\")","36841c6b":"cols = ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed']\nfor i,c in enumerate(cols): \n\n    sns.set_style('whitegrid')\n    g = sns.FacetGrid(df_full, col=\"Generation\", hue='Legendary_map', height=2.5, aspect=0.8,palette=['red','black'])\n    g.set_axis_labels(\"Total\", c)\n    g.map(sns.scatterplot, 'Total', c)\n","d9534ad3":"print(f\"{y_}The Pokemon with highest HP is \\n{b_}{df.loc[df['HP'] == df_full['HP'].max()]['Name']}\")\nprint(f\"\\n{y_}The Pokemon with lowest HP is \\n{b_}{df.loc[df['HP'] == df_full['HP'].min()]['Name']}\")","5c126505":"f = urllib.request.urlopen(\"https:\/\/pokestop.io\/img\/pokemon\/blissey-256x256.png\")\nf1 = urllib.request.urlopen(\"https:\/\/img.rankedboost.com\/wp-content\/plugins\/pokemon-sword-shield\/assets\/pokemon-images-regular\/Shedinja.png\")\nimg = mpimg.imread(f)\nimg1 = mpimg.imread(f1)\n\nplt.figure(figsize=(10,10))\nplt.subplot(121)\nimgplot = plt.imshow(img)\nplt.title('Highest HP')\nplt.axis('off')\n\n\nplt.subplot(122)\nimgplot1 = plt.imshow(img1)\nplt.axis('off')\nplt.title('Lowest HP')\n\nplt.show()","e45f3585":"print(f\"{y_}The Pokemon with highest Attack is \\n{b_}{df.loc[df['Attack'] == df_full['Attack'].max()]['Name']}\")\nprint(f\"\\n{y_}The Pokemon with lowest Attack is \\n{b_}{df.loc[df['Attack'] == df_full['Attack'].min()]['Name']}\")","620149f0":"f = urllib.request.urlopen(\"https:\/\/in.portal-pokemon.com\/play\/resources\/pokedex\/img\/pm\/dc96945bf5cb7f776f0272bf17ebf0d4593a5849.png\")\nf1 = urllib.request.urlopen(\"https:\/\/www.serebii.net\/swordshield\/pokemon\/113.png\")\nf2 = urllib.request.urlopen(\"https:\/\/www.serebii.net\/swordshield\/pokemon\/440.png\")\n\nimg = mpimg.imread(f)\nimg1 = mpimg.imread(f1)\nimg2 = mpimg.imread(f2)\n\nplt.figure(figsize=(15,15))\nplt.subplot(131)\nimgplot = plt.imshow(img)\nplt.title('Highest Attack')\nplt.axis('off')\n\n\nplt.subplot(132)\nimgplot1 = plt.imshow(img1)\nplt.axis('off')\nplt.title('Lowest Attack')\n\nplt.subplot(133)\nimgplot1 = plt.imshow(img2)\nplt.axis('off')\nplt.title('Lowest Attack')\n\nplt.show()","92466d4b":"print(f\"{y_}The Pokemon with highest Defense is \\n{b_}{df.loc[df['Defense'] == df_full['Defense'].max()]['Name']}\")\nprint(f\"\\n{y_}The Pokemon with lowest Defense is \\n{b_}{df.loc[df['Defense'] == df_full['Defense'].min()]['Name']}\")","f5a7a51e":"f = urllib.request.urlopen(\"https:\/\/sg.portal-pokemon.com\/play\/resources\/pokedex\/img\/pm\/f6e89e59cf6c2de593179ff7c2825403fdd494e7.png\")\nf1 = urllib.request.urlopen(\"https:\/\/www.serebii.net\/swordshield\/pokemon\/213.png\")\nf2 = urllib.request.urlopen(\"https:\/\/i.pinimg.com\/originals\/a6\/72\/1e\/a6721e086b20846b79050bff722a56c5.png\")\n\nimg = mpimg.imread(f)\nimg1 = mpimg.imread(f1)\nimg2 = mpimg.imread(f2)\n\nplt.figure(figsize=(15,15))\nplt.subplot(131)\nimgplot = plt.imshow(img)\nplt.title('Highest Defense')\nplt.axis('off')\n\n\nplt.subplot(132)\nimgplot1 = plt.imshow(img1)\nplt.axis('off')\nplt.title('Highest Defense')\n\nplt.subplot(133)\nimgplot1 = plt.imshow(img2)\nplt.axis('off')\nplt.title('Highest Defense')\n\nplt.show()","bfa29ba6":"We can see a few linear correlations. We will dwelve deeper into individual columns later. \nAlso we can see that Legendary Pokemons have everything on the upper end which proves why they are Legendary.","f9f4c113":"We have so many plots and we can infer a lot of things from it. \n* Most of the legendary pokemons (black points) are on the right side and around top for each plot which shows why they are legendary\n* As we move over generations the plots look more organized for each column.","e6998fed":"Now let us start looking at individual columns.\n\nLet us start with the column Type-1","0f6ff921":"* I know the above plot looks somewhat like Germany Flag. However,lot of Gen-1 pokemons in first 5 types and then other Gen pokemons are higher at the near end.\n* Also most of the legendary pokemons are psychic or dragon type. ","8b8253e0":"<font color=\"chocolate\" size=+2.5><b>My Other Kernels<\/b><\/font>\n\nClick on the button to view kernel...\n\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/fifa-in-depth-analysis-with-linear-regression\" class=\"btn btn-success\" style=\"color:white;\">FIFA In-Depth Analysis<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/storytelling-with-gwd-pre-print-data\" class=\"btn btn-success\" style=\"color:white;\">Storytelling with GWD pre_print data<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/ensemble-learning-part-1\" class=\"btn btn-success\" style=\"color:white;\">Ensemble Learning Part 1<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/ensemble-learning-part-2\" class=\"btn btn-success\" style=\"color:white;\">Ensemble Learning Part 2<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/students-performance-in-exams-eda-in-depth\" class=\"btn btn-success\" style=\"color:white;\">Students performance in Exams- EDA in depth \ud83d\udcca\ud83d\udcc8<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/pulmonary-embolism-dicom-preprocessing-eda\" class=\"btn btn-success\" style=\"color:white;\">\ud83e\ude7aPulmonary Embolism Dicom preprocessing & EDA\ud83e\ude7a<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/first-kaggle-submission\" class=\"btn btn-success\" style=\"color:white;\">Titanic: Machine Learning from Disaster<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/graduate-admission-chances\" class=\"btn btn-success\" style=\"color:white;\">\ud83d\udcd6 Graduate Admission Chances \ud83d\udcd5 \ud83d\udcd4<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/flower-classification-augmentations-eda\" class=\"btn btn-success\" style=\"color:white;\">Flower_Classification+Augmentations+EDA<\/a><br><br>\n\n<a href=\"https:\/\/www.kaggle.com\/nitindatta\/storytelling-with-gwd-pre-print-data\" class=\"btn btn-success\" style=\"color:white;\">Storytelling with GWD pre_print data<\/a><br><br>\n\n\n### If these kernels impress you,give them an <font size=\"+2\" color=\"red\"><b>Upvote<\/b><\/font>.<br>\n\n<a href=\"#toc\" class=\"btn btn-primary\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOP<\/a>","1fd1d007":"<center><img src=data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAMcAAAD9CAMAAAA\/OpM\/AAAB3VBMVEX\/\/\/\/\/5Q9po0dVSULepw0yLCotNDVBdyjC5PJDVVb\/5w\/\/6Q\/\/7A\/\/6w\/\/7g9sqUnmrQ1tq0pCeyncow3\/8g\/nrg1VSURhmkH\/9A9fkEBTR0Pqvw5ooUZDWyxJdijhrQ363g9IPT8AAADg3d9OcTQ3QyNkmkRcij5SeDfmtw7m5emJYxFNQUFANTtGOjQoLzA\/T1AsIR0uKCYzOiFAVipHYy\/Au73y8PGyrK\/V0dNWjjh9bhPvyA5yalvEkQ25qxGsfxDm1BA8LycvJDLI7PswJCobDwo7PiqgmZ1UhjM9XR87SyaNhInIw8Z6cnVCayEtKRwkTwATMgAfTiLLlgBwamn42Q9uTgC2pACGdwAYQyBoXhRRRxQsXSTRwRGjdw9HOxRgRxOilRKOZxAoHCvayQx2aBQXISJURhQ1JhQaIzKXhRNRRBTEtABnXV9AQDAjLwAnPAAqQwAbHQAnLAxhVFtPPksUJwAaQAAiMRwtPBsvXxFdXFeCf3xiTS1SQi93bEpuYzA9IgRJOwBpUipJPS42MEhDMxRuUhl6d4VfQBJ5aypQMxA4LhU0HhMpQCglLho7KgAZCSIAAB0GFhiSrLcACiqDlZ0SGy6vy9eLn6cmNUQrPUsVACgaFR79x1vOAAAgAElEQVR4nM2d+0MTx77ACSFgd7ObQB4EBAzyFDCYgHmAJQQkBkgAK0gwyCMYwMZgtcd7qkL1HNsL5Wrx2Jf23vK33pmdfT+S2Wwofn+oWsLufOb7nO\/MbqqqPmfpS4UTc3tu8+NbQB6b3XvJRDASOu9R6ZKOcHLgm6fz0yPVtnpebI0jbTNPJubCHec9PCwJBZcWnrY12upttmq52ABWY9vTiWTkvEdZQkLh5idtjWoIEpiRmYVE33mPVVuCz560VdcXYxBYpp\/sfZ5K6Uvemm8pqggZSuPMQPC8B62QjrnZaR0QiKR6ZuDz0knH3PBICQro4raW7u4mIC38\/2x5mjzvsQsSghTFEOpt3T2drV1DQ12zw62trcM9wqfr256d9\/A5SXRNa1PY6lt6OruGZq\/3NnUDnSCRfGB677wBGIm42zQtqr666fpQ1\/UehkCLtH4mdd4MwKSSrS3qIwSK6J3tau1pqS7p\/eevkIhZw6Rs1T2zXdebSjNAhTw+b4zEsKoybLamVlwIyDF0vhShpXlViureruEeXAjIYT5XjA5Vm7K1XB+63q0rIbbMnSdGqqtRpZ7tbu3q1XB8LbHNn2e8Cg+rjAhQ6DEo9rcWzhEjMaMYLrCorh69JRZUR\/hzwrBVd3b16qcA3jHwWWH0DnXqtigo9U\/Or+JVYNi6Z7XSegmxTZ9fvRtWaON6V1N9ORRAfOeGkRqWYth6ujrLcQwo52hVHV2ysVyf1Zf2xFPQdm5WFTI3SkbSBKJUmRTV1Y3u88KoWpKs\/GydXWUrA\/z20Ln1fhKS0rBl9nr5FNW2mXNrl0h83NY01GME4xyd47F4HL1GbKq6esTIMjAU6oikgsFwOBhMRTpCOrvfc9MijNZhIxTVjb6yWu+hSDh5sP+468nM\/HwbI\/PzM0+7Hu8fJMK4zfygKAG2zHYawqge0t11D0USc4+fzLSNNMIuPtt4gf+Fzfxq2Myf3T\/AaOaLrMrWbcg1wAVmdS46Ion9rplp2MUvctF6W2PbzK25cPEwmOStCnh4kzGMVl3FevDg1sw0XgO8Gm5MPNkv0s2P8P5g6xnqNkIBIq4OjNTc0HwjHgPPUj39dD+s4S1uLpEDDEMUACOBC9GXfKwXgkNp+2ZOrXgLchkQxNu\/CyO193S6HAh0m\/rGmWZlpvWx16vv7TIWqLAxwr75lnKXA+xYbfMTMgsOt6HR2wxjPMXDCC9o94113K2+bUFC8pjF6DGGYWv8BsvFK0PBkvgF62LVAVzc2NUbvsXJG5H2eSwKNgeKtrbVfs1WP3+Vy44LCKNpwRDFyEsLRhYP7T0tRQHH3NLU09t5vXW2a2iBlaGu4dbrnb1N3ZBOyvsU9SzDKFh1G8IYabi9h1EBhf8xou3dNrS3NQzGPjQMxtzT1N1dzRw2AKqAu3aArbUL\/LC1t6laBFM\/8i00rnY0PwsGCtyRuoavMAr10LN5LQqA0NTbOrQA97ZamApLrdNkQxuR6JOdTTxL\/cyzUIQpEOsN1FQjdXV132IsmyILqjuNYGzdPa3v3w\/DWcYMAFBzvcMLXb3dKAXZGm\/9F0zl9bNlrsRtLYCi4XYzxiI2\/ETVT1vgeK73VJfRdQUsswvXmxgUG9SDrbPMNWzjNKCo+ydO1kjOqNhUz\/X3XZ1NRTYYS7P0DEOUasYMy4q4NuDcdYwycFYbc2qu0TNcjh7kJLae2fe9cNvedr2l5McVAlUBKF7+AyuFJ9U9vDL5EEQzYJjV1fqb0AgCmNRXc1jrzbCaUVVSytkMYCEAxXf7eK3Pjm8qU4dUTFoaGZ9gKBq+M+P2qHx\/x9gaG0YacfxDxMDowo3daUtOl766YRlB45ouAgMIphsEBqCKl1\/t4\/cSOp6csXNAma4TScP09AiQRk7A36enG+qk0lB3eyipp7Gz11h6GBXFKC1AKy+\/WdJa5atL39MzV0dLAxqcfMo1IOrm7zx\/gxdoRZI4c+9oRKN78WJmvjgM\/OH9Oycbo2lvTHcDeu+sYy7j4Q3z72fmZ16Ybz25\/fIlHLBC6urm798bejSazhFWK0HoPuJ264zNCmEMvwAaabgdDPUFEwf7\/3hxcu\/enTv3X0K5ffv2d09ePN4\/eLY55rhE0yRhMpmcP+rl6DpTDsY1gDJamT+\/Q3l5bqwmlisUotvJcCIcDgdTkb6+UFXf93Z7jeMupDCZPG8+K30g15h5P488HXGk+u2OuxRF0bED0Tj6XjlqgFyhGA7ntl4\/P0v\/gDbV8PLWFOvcDV\/BfBAyw+HCaadHhfwQMi\/aIYfDyyjEuaK6ZArOvX6tUfhy3bHKS8s0Ux7thea4eMRwJMfBgBn7IXNCVNobYzA4hdB5ldIw\/GU2RlJ5jUJl4Yw4GpEywiC0vxRxRJaZATMKoba5WZ8bZzFqahi7smYVHMEvswRNmMiYxpmx1JkkQkYZdbMH0MzDHMdTwLG\/yIyWUQhVYBWSWHdxGI4bJCTMygqrjqW8l4bsRGxJnUPtIJRhgW2BujsP0TCDt5F\/2ABHYp2zHzhc8l+MO4f7eQwgDEdaYj2h5HaMRpGM0NIHczCtsiRAGYBiI+3NM\/fs+I6Jui31Mx2hY85+kEKi0GuDy2IM9AMJR+pVlCZNSKiCdnc38rjIsWz9FFAZ94eyJppwFtzAA0L\/bIAY1baZDpA6OIEKIYjXoarIpr1GLJeAp5NpYbShgxXCauJENQIIepstekxej4BlEKBgrdka2wC3\/bYBYlTbOpNbdum80+lw3\/c1UoE\/IKM8R+rVmJXgMThT1JKOEgf+caURTP39of7Fi15kCCT5JlK10NDANEx6\/y2ZdxMBFGJmE4dIQOgVOJLLwPUFDm0350mS+h8jUVCA5RCgcLhg3CGYuxPUmz43gwE41sVDdlwkoULG5BgwF3IcEfO4C32Qd4\/SDaC+xK228s7WcRR1L58GthzIax2XkEoI0vyMXctKOWCIJYkrcgogFymWI7HssNdIOOgVnDViKGyeaSxTKcCibr+YS30pGSdUCRm73K3KAQZ496JDhcOB4lVoacuFriPYFfkas\/CKzM2WoZSWkYaXT9yJvqrQD6KhOq4wKnGu9KBP9WzJbMihRgH5aMAR+XHMxdmZ4B74J8BD4b3hNj2PjQFVvHzyOMHEww5JSqupgSqh0r0aHFriINKp4HENlzIFdVjTug5c9YX3ZudHcBrUNltjw+0XzQkuqAflpnMFhKxCJ\/pwUz8mR82V9DN+Qrg1CcOxrff8WyiYfDw8P1ItfxhJjGBr6bk\/65sLiq6dGFOM6a51jd0vaFrG5ahZHxf0KiQPgvhSJwZSSzC5N9Q63zbCP17FP2bV0tR7fXhoN58dkE5QUsnhuJJjz5U0HmFz2PlPosKR9fI1JuqGy3lMoiMVTu41P+6aHZ5hpHV4dmho42glXYiRHtrpzUhaG0uLKoNaHEYldcsuNodIBC9nipJQYiP9r3K0wgo8BwekoyN06Lpo9TgpEuU5T+FHUY39pdpIHCfsEYB3+inEyQNG3cRGwWl9bYBDkB9dMKJS3DRR1Aq\/GRx6rTrjJ0gf9SfqcbYoh0gdVOy\/X0WdFOGtzONpA9AFHVfuktxMOWNv2Goh9INLZSz29yzH8KLd7nK57DWOxcUxIIuLDvRvbbnCqwNUz4dpmpKuh43IHjtTNTdMrFJIZ7qdibx9R2ocrgXEYevtX+8\/frjw\/vnJPSQnz98vvF1eH7Or\/ZpUHc7Y6tFdGtVYlXluhY+tDqAUAqHQxPZPkGNZleMhu3Tuft4zPa3sJN6\/t3M8LkSoGvsifxXOO6zUyttFtoamlYv3skSc6xw1EAW4POFcOwxW9fXLOYDdLK77WY76IaZibJT13yHMnQV+je76d+bYJVEH4Yk+HHdxqiH\/pzKHwWWTDlBueAELReefpbZcUgjH+PHCcA\/Xk7H1ckddGxX7HQ132DWv6+2ap\/BvVCEidQCT6rfbOYwyk6GK+OST7oAsd710LLMpOC2AWH970tldb6tf4Foytvf8dpRcKWAVyWjB1Z91mugocjQTwcTDt2CtxTtKpdwcJG21ZOcAMJeujL9ji1SXffztSS9qYNQLPbIe0ZGGRjnIPeB49rGMBwzWMzpuZ1I5yE+HsEYRwm+l3AMsmbXrVnvN0SZY+7gc\/Qud\/FOOIg5JsdYyLVMIdLyHaDVOg5x5iTTR3swyuOglURYpsULXI4daYRIqYuxwffHoufg5QJvkXEm96PymdN\/wzrjddbxGsdZzbPeCeH4I9OuAS3k+jehYgpSSn9QMiwdx\/Px8Xtq0EP2jvvfkRHTqR8Lx3mEfX3Fy+WK74ImtbsHNBDEGWIJU7qnHiCK8CoZl34LbBFqbp7bhvDeWP+FBRsTqAMHuHd+pIojV7DHspUgxTFSFoi4jvnGHejVhHzu8D7JBgxZGZ95JkM4Cf2RU8PWG+5t21yZrVcifmZglwyjd+NEjr6IZSQbmbWr8eR3MDJqbpxtMlUynW20yDohhHx91imd+o4ZZUIoxKmpWVVUZDxXL7\/YvyszLvn6C8tuIljqyyG7oFTYhNnBZ8B5Y89oPCfGYrdEtu+OK5H+J9xoqIH0rtIm0koXM5pjYvOxjz9lxaejDNsROLkFlmJOK3Jme++9BurD3R2nJmOkNBUZlzSqStzKDoXIrYvOyb\/JWoo7Rk+fcmIxtNNrY4qSh7oTpty2uSjFMVHTdKsWosFlFsqw7knQsv7nONWgWX\/BVk6ph1Z\/E+GFRa11oS7ph\/t4m0xu1H+VI6aBN9CNSxlHRaCVwAKXQ3ixHIuJQDbxNo6IJp7P3QFxruH9yNMZo1D4mcXJ29oUbnYFZsXbFk5g4kkeirKbUSP09yYTTo\/fr7gz1L7J2aT+OyeYe6nuVlEWrij742CHmYEmAn9jHTsTnR0ZkOmnZlf4Wsbo57uCcyz6el3kHUlpUohBjZtURTCTnlr6EsjSXTCaCqRXZPRnrAtXR+PN58cKiYVo4ZjUyckc6JhOV2xTF7UeEUh0mwpsR\/44Rs+pLvl5Jr8ViMcLr9YI\/YrlCOp9RzB0BPX7MtXh0736dxqGed3KnpaN8fWNfz6qoA1ZZayJbNBKt9tIkPLwiCElZPY9UbgpIRo8WXWP9GwCljlt7o5gE5U7WKv8VepTfN38kj1WcBiQcBpJgakURRkzODcWQoJD0WqYf1LtjW0cbL+7duQ9kHgj88869F6cmheEQxO5iUXXAjTkxlJEVbbKgGLRnVzkmRigqurkOHN5eszg2vr7V378MpH9rfX18bHxUZaTARZBCduU2pybGom7I7JXfwzma07qtlcijtAYqeNhjYwT+VZnloNBZ6CLa6pB9etTIiywj2\/KbWLMFdXM2MW6y3e9QlsLyooO71Dak3lRMlaqQa4ZaDIm0bAxkQZZnpT+lC7uy7Zwa+1ZU\/TeI2K54FVgKxNjafC8mnX4ipmbsglBkflO6Le461HIAqnAEbA5LHYbLxL5dSnojcre4PRN0LrMlXmeNyTOnIHR+K4OpDhBdjPXggjLFe1Szr4TUmj0Wtvg1vByNjTyMqoZxNaHzxl51JQu+IGBpjou\/ZSwj9Lk2isw4lVMEEk0x3PVxS1yESqeLODp3T2f6LfIS+3ixuAAmOYoNYnRd2\/dGfCsiN4pjCjRsQEGzels0rhLkKl7cNeEdMCkqUhehSjg6N0Jn9i3MJavFHZlaU66htIR8bYyj6iexizhxZ5DOHY671jWSh\/Cp0bWS\/sZ9VH50Ube0ixZsVLbU0Dgh6e3+41LQRKyAebkKLG3FLkLk0rgTaPJEi0Ur9npYGARsn1hHjbYaUiIrJrFDPrizjs+qCpeFiZUYZdzTQRaRF1p\/j1BZdoeTyvhztIk0vq\/2LIdrxpUU8t27GDouvnL1QYE2mtOhTFG4gb5yQhCHA1APsEy86v4QdeZ+MszR9x\/sQF85Du+PbveHghNuUj0wg795KrCzlmK2If9ejtiE2+z+K+tk\/\/YgF61AkzecNxp99HNY3Gaz+cOKkyB3m83m5oexChyUSRUt+c5CyLUpM5TJDOUcbQd\/ad\/GOv1aXH5SacOeMUdhkuEwX30EHB3+xZIxblgPkX\/g9Gk0xIpXCTi50EhxHOb2wzSjGrff8GsTO9AClcjpUwspGCMVLb0GA0Ifpb0eBoVVApTmUwvzpy9u1LASqOODsyAUiTMvNKjo1eJNCg638MuDTJTwkKDC5TkAAfojbrQ2eYYW5s4NXd5Onv7FcYPo48fSpTM\/OTDp3y6QnryIg8Mx+u7gN4x7EF5lx72IWNOTze9YcwdWMolXpjlXB8zugcmJfGZAwWH2GzOsFGqaF2\/EMaTinzsX3OarbLHszAwMrGIpk4ydwrzhbrcoMcwTxgwriTpm9Epx9yDX3uWEAoYqPIB5jFlPMin5AZ5z0elJFQLO5Q1xDKBkXqp\/RcT+msrzz2Z5HjXDeZ2CLRcKju2q2h6aijgz7ZocE0YMK4SqK8JUqs1AvnNP7rIqIXIfUPSHPuWExt68gZd+yNiUW5PDSCpkixJirVSRZQXDHZjKMirxcH46maUZszKbH2C2FZxZZajixEgqZN2j2L4By7ECLMI9uRqjoY1xd\/6Qc0YZk8c1LII6bNZUiIFlejPrHiW7PhSayHZ\/mnau8HM6cOjcZnSDa1iimkTJYWArHWUPE71Rajq5+7snM7EPwr2vjv6IDB4zYoFbabq6r\/z+D5s9Sm1\/mKCHcqNv9\/tEN59i\/4FrWGAJqOnq5b1+F0oCuScVLdmlJrwPtOwBWdgqbnnmHJW5+oTf1+zzg9mZKPv86x7apqUxikRyQjNiIsXg1stEzC++0kQ80RcKhfqC+\/7yUzrbF\/Qclp5M6yPNQMPIZBp3eSyKE2aff\/AaN5iUr9yU3odKJILYLd00sW6rFHciad\/G5WBTDoMRqB0UvDt8ucyIFUxjZkETm0CKiPuw1M4cL06ubgcYtYPCSzZSv8bL8xA2C1LZKIZdqSwaJIKb0gWFQAyxPiK\/DvrLyoV7aAadGQwfpYpUFIxcxTvCwNwQeYi\/FnLU8tE2+Gvt4H45HJybv8MYAVWs5oYygO0gQCEBoBD\/IOSo3eGd4mCntrYcF+Hc3Iuz3S0vKJp9E0B8Qk50v8PeEzTBthVjVVAh11iFhCDXoEU\/B+vm5FoeYzlHrYkSoW\/CHxhkZOcyn9+xSxMmqSOrYhTC7jzP7cB\/\/apfIVw2x3FzpqXMUQCIWm4yU6GOA8sE\/N+Yq3RG6MzVQC0Pci0YCkWWdtAV9XvIHHJvLDcXFVh+YQSD+4xNhA78IEm2Y7V\/kFCFD4M8huWP3377I\/4r+8+47irLjO6L5ebAiz6wyuAHADi4e0YGfObmXfxOHkG84y6zs3\/hJpALrD5Efo8r7I4BTjbnC0WfoAxwS6EgCll87gB+S5LInfKWeQHJzX02fh0UGbKa9KGDAERO++iOgkOCUbsjMoGDy75J7EwIKuyP7DX8n26yIJ\/iCKxdJ0cQrc2pNI6bg8J4So4hlHhAUjuBSfxMSOe\/Zq+xxGFcuPkTsiy\/Tg42XNHaZxMlHARY\/\/hrJRziBVzHTu0pvqM7R1mO+G8Cx2\/xshw9icy59NErxEH63VIMBccg9loKxN2vObO6IAjLobPGWmIXUQ\/xNghJv29QxiEO9RFgFL9gnx+jM9y1RBgXkNXq3UJAYRevKmE4ZOoAIKKrhQHH4AZu7V5JjjfM+EmcxQfzwYeDcg5xDcFEzd9xF4XO7SJ2pc8\/QqhKxAxX0D\/k2tiJCyEyxcSaQbzGO1xKqfg5G3jj+tTRgTo1mOEKVBK\/SyniX\/zx25\/cgYpQLVLWR8xakU6z+WNnTuD4A8VdnRVvClW7IFxh3dnKRUokl5dQNXETzck11uY+YqYQck3IgzKzGtS5lx5G9uR5iOXmBLkgwfhTmMZIeO5Xvv7FNCwixl1ucJ+90k22wNrR2Xdn0yC5gRV2yZjYrOJ\/8BhAaneEnyxg1lhcAhmsjS8BtQLlzsXZa+vsNaAmA0ZLlBEqKuIYbBdjXPgkigC4DmKF1xusvXbt2he1gT8\/ffrTwk2G3gUhWn2U3hhk75v9KAw2\/psY48LNOUEhHzHPJTKF+7UvkNQGhAvs6G0qonSOtxiEbR+Rm8cl6uArVYYDd1FI5\/\/3C6mgkKe7hbWPqpI8Xti1rggcgwNyDqEMxg1YoI5YkHF8AYPeYFzv2bgvmdTr3MZzTAnHvozjgqCqr7Frdzr9tQIEhGHduznfMzf0HOLZs9iulBwW\/fqAGfj\/FCABn34OJm84Matda1bkHxa5XQkB6yPGeX9WCHJVDnJtQv\/uGlqVY6YPUIaJ4tVlKQa3AGI48Ne2JtL7SApyzV\/G9jPDgV+150T5Y0eSBi\/cvCZUwjp6DfDM17bYR2phG6w8fYA0iMdBmD4IHLVxLXXgr0DQVen8Bz6JoL6kbg5GEWD1gemX1oy4b3VNUMjNTwHhJ1\/r6MVBIXMPfAEYtQMBtrtaJkcU95SlJKHX7ly7cFMFAzudc4K2Qpp9wp7dhN78wdgVlcV9zMCa\/YVTBgPi\/+MTrNs\/LcXFy0TcMpEXclW27ah705blKHUgg+fIsw5yjRVQLYL\/+EW1LkDUOBlH0k4nrXrigR6VbdfpPvbzg5MZHW6ctI5eDQAGWf6VLdkDqhxW4IXb2\/k1wqm8Fy3f5tK9s8bkQXoF+8nLzIBfSsFWEmJ1TKjsopN0eje\/FosV8pnRHC13H8V5E7\/edvsrGFnoUVyDpjbc5oCCQ0riN08ppoWO7WYJ+Nw+RZNro5koQUs+QcSmpBy696P2ST0csJ1o9tUWBQGhU85B0NlMjB85SceymWxMTCJspk+gwKv7LMASzFg0ZrnLtttVLEsAGQTpWMZBkqN5yWlroI10ZiXGnxAE88Oek\/BNoD90P94559XDwW5HFQEZDJjlHFRsNSovFwgrWdjeXrNyjkKxh+v87J6d7jMmzPocm4Pb5lQF4TGkp2WsuUc5tfROWXOjmQJ7spwNvP7mMtM56pfgc3Db534VHwEKCTBmIdmSogu7MY3sDl8jlFljrItmzknwZ7r0H0cOw0yO7efCsYyJgFIlbI1ndk8Il6PTGVI7N8GXisAwTNDw0L5wNE3\/9jlzFg63KwrSIJ93m\/21snQ4yB2QFjgIa36FLnppgl7bHi3EqOjkhF+oTfTvOjPbg7htBhMlroN8ExYe5VqtZYKfTfePMe69XiulC2mSzmW3t3enROcE9bs52q7FrUsI+XE430TAAiUwIT6t6H6Flh9ggZTF2gSmaWtuUnSBco72wX0c3PZVqeOJnMmhZRTpzSjirZaQsQeiGdJdlVShBIK7\/iDX8DiYowBUbHdNx4sNxIVJOceWEsA1yALeepCKTmqNXSwDuxRMG7uqaQODo6wz7uE0Ba6yjWUAJU\/DsRwZa7G0oc7hF5lVOc8cwONXhGkXq+9DqT1Co5T2bRqkDULPk1aiU5dgHsrAqKp65MTedSYPi5\/e5ThWPKXSRjGOMg\/w7oHg4sQ4uosdrsxX83jxVoOjzGekYIWFV5hghiuz7x1+oOI5hOPVZR2yhG8bpDETiDU7iYXxi24Mcbwq+8EJ4OMg8GJs3WscQvZJ\/tXs903pepiS5eBVbSn3eYMlE\/CQRxiOTu2qHm73iR+h8Pmb3Rb9zxwL5x7LP6YPt549P5d2TMKr9czGBEfCIDW\/KnH0VaWQ513Pp\/ecjyDwaTWcDSnRWVEVnfgnJvwIp7nEwSW6oEz0fOPHb+DFS88IAqfCKuHmvM21F39flHXtr98VL2KysgtNi5EnnsMFkvCWzuhWefNSQ4o\/XEQQp27z77I3unENRYsRdVSF3nhMnoclHzWjNoo\/w8JzFN109qy2wwpM9hGaCYWWgLEH0J95wQK0VKtaFBqLS9EDo+zDtX\/JFMJUbhZLXO9pV6mk4BOZpbbWMIt2c9GwSxAf3Mj2pC+7hX04sK4sZwEllglnacOyrmAV7dxqUF0828jHmh9JwgooryCG4dcBJKIUlS2xV4zrHgMZ7euQa9zx+A8SpYGQDlf5Rt8GUFX1H4+JKP46K2z3KBaunO+4uZiUbL3R0Q9QHcZfVJRcI52ZomWRFdM9zJPax15pIQNJHIS6239q2MkZCf3HQ+Q4TydIiqJIUmrmuNmjyIMsnJNDEVkfQVys2ZyyBMouEMWSLJCeR4zNEsTdi1euXLl4466XoHgWgniHtRYs9mCRRzQVbv7NHKT3ksPxEKijMu8MP3SSa3Dbm4CXhW95ZL5Q5oaXRGGsWHElEW03J3N\/CR9z+9nvLCJvwPeUnlbEqqCEszRSyCXxC10By427BEBR7ERqibabeyTPtH5gMiHpveKALxw+DbRX6mtlrhIk8BDyhvzL0hyOSxfvErT62kMpk1pnAKioRKPwgUmSuIFe43s0VeYznCoS2XY6M2v0pRqlAJQrU1oDl4r24zhWyQPOIKzR5N1L7KQ9NJwBRfJTwep9RKtgMC8+PrX4tMYuFs3Fh9wwJ9NejsI+drmi32\/gI+hsVv0rcuzHTGO9NIqWexDi9yAwHxTeEe3aulqx71yCEsnQ9Kr6dxYtnlqQ+EqgaLmHc1uSfnyWU+EtvvZD4+8hk0gi64wdq33RDzQrXoqhiLfUxCKJuYDCYjnlv2XVtVzRb5uAsrfmyat+q9dGwCIRn0b00soetBBzfegKUxyHa6uCPs5Jc+zGsfIrpmGeUoiqWjQe27ZyMdfH\/zrH4Vqv1PfDiaVv9a7jUPF1m\/Z+FQ7EItOLenFFEH7mnJj4V6fQt966xiv3fWRiiWRcY5sKhTxUx+BgeBrZC2WY77EAhQ21MumT\/xbSx1lhVFUFl13rsi8Ito9rqEOBc3WFZIfP4Hi9d+\/euHjl0uIvyo8zHK71s8JgQPqlvm7fDCjHoSqnwLcu8VLDfH2hg0s+so\/Cb8g6QwxQMS67jhs5DFwAAAHASURBVMbFIGperi4PVUIdUKeKOmD+sG+dhYsLEjyyb4pA7MtTuOpQ\/+Ztv+pn1+3LZxBwJZL6wbEpRN9F1XGojk0lZGsFu9P1H4wvx0tJx6sxHkSSy4tK4FDNqsbUrAos\/9yV\/AovLQntr3MgjqJBVzLFaqWA\/VAtSAQqtfwrKclllNjx1WE5Vakx7esfVT7pt1S8pNKU4Pc\/Q2fHV0dAmT9FhbJEGUsVrdNLSN\/S5XG7S6skUcrHcSWHfXNK8bn436gMJOHTdfxgpZY87OsKJ\/fHE3+nMpD0Lf2Mm8pVvVxhVf74UoXXTJiSGohjkqh4udyq\/PG9irVFdEvYgkUytaxQhyxWnSsFNsnpmAJDXJcF4udlUWIJNsdL+PuUStB9x9P745Zz8G41iRz4iyrlF0VpZT865SDiS2dfSmFLKLgX19SKUh2urY8sxF7w81CFIKHgUjyuqhaFOlxg0QEYLAefkSYkEgnvxy\/H\/VKYqSPRcgV+sZ9j\/PLlwFLw\/D27qHQEkwDmMjCzQIABOq1hv5KwxjE2vrV87JtLpD43Y9KSUEcqnDjYcw\/4LIGHmz\/88P2rV+69uWQiGKncwuL\/Ae\/dxWkHKqTvAAAAAElFTkSuQmCC><\/center>","3897e648":"**OBSERVATIONS** :\n\n* Attack, Special Attack, Special Defence have high correlation on Total Rating of the Pokemon.. \n* Speed and Defence do not have any correlation but speed has good correlation with Special Defence","fbe0fed9":"Okay `Type-2` has all the missing values we will deal with this later","b7a73191":"Let us check the null value columns","b1e8704e":"Now let us directly move to Total column as there are few missing values in Type-2 which we will deal with later","448b3b58":"We can see a spike near 300 and 500","356558ed":"<center><img src=https:\/\/i.ytimg.com\/vi\/u1ohf43prpo\/maxresdefault.jpg> <\/center>","33e35fbe":"Both Chansey and Happiny have least defense so we will not see them again","f91456a8":"<center><img src=https:\/\/pokemegas.weebly.com\/uploads\/5\/1\/0\/6\/51066141\/3684104_orig.jpg><\/center>\n<center><img src=https:\/\/i.pinimg.com\/originals\/a4\/07\/8d\/a4078df3838c597973949c27d0b526c7.jpg><\/center>","399deee6":"In the above figure we can see Water and Normal Pokemon types are in high number. \n\n**FUN FACT**: Pokemon types are represented with the same color as they are represented above.","9fd3b58e":"<font color=\"red\" size=5><center>\ud83d\udea7WORK UNDER PROGRESS\ud83d\udea7<\/center><\/font>","77c51358":"<font color=\"red\" size=5><center>\ud83d\udd34POKEMON Deep Analysis\ud83d\udd34<\/center><\/font>"}}