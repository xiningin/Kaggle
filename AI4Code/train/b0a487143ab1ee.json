{"cell_type":{"c82c6ae6":"code","0415204a":"code","037940fb":"code","ab8fef9e":"code","7556fe27":"code","a17c75b8":"code","390bfb25":"code","17b38d20":"code","232a571e":"code","70c2ffb5":"code","f60d2c28":"code","8c46c9be":"code","c45749c3":"code","662e204f":"code","49dc7f45":"code","ecfbdc17":"code","40b044e5":"markdown","a07a9bcf":"markdown","63d2eb36":"markdown","f604410f":"markdown","d86eec3e":"markdown","30d2fea4":"markdown","6d2df459":"markdown","167b19e9":"markdown","6c23ff82":"markdown","c5f90bbc":"markdown"},"source":{"c82c6ae6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0415204a":"# Reading the csv file and creating a dataframe object\ndf = pd.read_csv('..\/input\/IMDB-Movie-Data.csv')","037940fb":"df.describe()","ab8fef9e":"##Removing all space and brackets in the column names\ndf.columns = df.columns.str.strip().str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')","7556fe27":"df.describe()","a17c75b8":"##Dropping NaN columns from the below columns as i will be doing analysis on these columns\ndf.dropna(subset=['rating', 'director','year','director'],inplace=True)","390bfb25":"##creating a sorted array for unique number of years\nnp1=df.year.unique()\nlist1=np.sort(np1)\n\ncount=[]\n##Iterating through numpy array using nditer to fetch movies more than 300 million dollars revenue each year\nfor i in np.nditer(list1):\n    j = len(df.loc[(df.revenue_millions>300) & (df.year==i)])\n    count.append(j)\n    \n    \nprint(count)","17b38d20":"index=np.arange(len(list1))\n\n#Defining a function to plot a bar chart for number of movies having more than $300 million revenue each year.\ndef plot_bar_x():\n    # this is for plotting purpose\n    #index = np.arange(len(label))\n    plt.bar(index,count)\n    plt.xlabel('Year', fontsize=10)\n    plt.ylabel('No of Movies', fontsize=10)\n    plt.xticks(index, list1, fontsize=10, rotation=30)\n    plt.title('Number of movies having revenue greater than 300 each year')\n    plt.show()\n    \nplot_bar_x()","232a571e":"rating=[]\n##Iterating through numpy array using nditer to fetch movies more than rating 8 each year\nfor i in np.nditer(list1):\n    j = len(df.loc[(df.rating>8) & (df.year==i)])\n    rating.append(j)\n    \nindex=np.arange(len(list1))\n\n#Defining a function to plot a bar chart for number of movies having more than $300 million revenue each year.\ndef plot_bar_x():\n    # this is for plotting purpose\n    #index = np.arange(len(label))\n    plt.bar(index,rating,color='green')\n    plt.xlabel('Year', fontsize=10)\n    plt.ylabel('No of Movies', fontsize=10)\n    plt.xticks(index, list1, fontsize=10, rotation=30)\n    plt.title('Counting number of movies having rating greater than 8 each year')\n    plt.show()\n    \nplot_bar_x()","70c2ffb5":"## Fetching top 5 highest rated movie title and its director\ndf.nlargest(5,'rating')[['title','director','rating','revenue_millions']].set_index('title')","f60d2c28":"## Fetching top 5 highest revenue movie title and its director\ndf.nlargest(5,'revenue_millions')[['title','director','rating','revenue_millions']].set_index('title')","8c46c9be":"## Fetching top 5 lengthy movies title and its director\ndf.nlargest(5,'runtime_minutes')[['title','director','rating','runtime_minutes']].set_index('title')","c45749c3":"##Top 10 directors based on IMDB rated movies who has directed more than 1 movie\n##df.groupby('director').count()['rank'] >1 --> returns a series object where it tells whether the director has more than 1 movie \n##in the list. It is being converted to lost using tolist() method to use it as boolean indexer\ndf.loc[(df.groupby('director').count()['rank'] >1).tolist()].groupby('director').mean()[['rating']].nlargest(10,'rating')","662e204f":"##Average rating of movies yearwise\ndf.groupby('year').mean()[['rating']].nlargest(10,'rating')","49dc7f45":"##Violin plot of yearwise rating distribution using seaborn\ndf_yearwise_rating=df[['year','rating']]\nax = sns.violinplot(x=\"year\", y=\"rating\", data=df_yearwise_rating)","ecfbdc17":"##Violin plot of yearwise revenue distribution using seaborn\ndf_yearwise_revenue=df[['year','revenue_millions']]\nax = sns.violinplot(x=\"year\", y=\"revenue_millions\", data=df_yearwise_revenue)","40b044e5":"In terms of average rating of all movies, **2007** was the best year.","a07a9bcf":"The above violin plot shows the distribution of rating in a given year. 2008 sees the maximum number variance. It has seen best rated movie and poor rated movie in the same year.","63d2eb36":"**2014** the best year in terms of number of movies greater than **rating 8**.","f604410f":"In the violin plot above **2015** saw the maximum variance in terms of revenue collection.","d86eec3e":"**2016** was the best year in terms of number of movies which grossed more than **$300 million.**","30d2fea4":"In terms of top 5 rated movies ** Christoper Nolan** has 3 entries. We have 1 entryfrom India in terms of Nitesh Tiwari for Dangal.","6d2df459":"**Grindhouse** is the movie with maximum run time of more than 3 hours","167b19e9":"IMDB Basic Movie analysis\n=========================\nThis is just a basic analysis on the dataset of IMDB movies from 2006-2016. The analysis is mostly done on Revenue,Rating,DIrector of the movies.  Hope you will like it. If you like it please upvote it.","6c23ff82":"**Star Wars : Episode VII** tops the list in terms of revenue collection with whopping $936.63 millions.","c5f90bbc":"Once again **Christoper Nolan** tops the list in terms of average rating. The position is shared by **Damien Chazelle**. The analysis has been done for the directors who has directed at least 2 movies."}}