{"cell_type":{"77635aa2":"code","c3abd5ff":"code","b511fcf7":"code","74ff0719":"code","608b8d5c":"code","b5ef3604":"code","77b89b35":"code","2412e018":"code","a2c807fb":"code","06e66777":"code","1fc90cde":"code","ee190f0e":"code","d7519546":"code","256180b7":"code","b4975251":"code","e3ef6806":"code","8142cba7":"markdown","5471a1df":"markdown","f9fb2bd7":"markdown","a087be59":"markdown","ea1b0a1a":"markdown","c1c70068":"markdown","fc4156af":"markdown","59600a7f":"markdown","3a5d591b":"markdown"},"source":{"77635aa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c3abd5ff":"data=pd.read_csv('..\/input\/data(2).csv')\ndata['from_date']=pd.to_datetime(data['from_date'])\ndata['to_date']=pd.to_datetime(data['to_date'])\ndata['booking_created']=pd.to_datetime(data['booking_created'])\ndata.set_index('booking_created')\ndata.sample(5)\n","b511fcf7":"data.info()","74ff0719":"import folium\nfrom folium.plugins import HeatMap,HeatMapWithTime\nm=folium.Map([12.9,77.6],zoom_start=11)\nHeatMap(data[['from_lat','from_long']].dropna().groupby(['from_lat', 'from_long']).sum().reset_index().values.tolist(),radius=8,gradient={0.2:'blue',0.4:'purple',0.6:'orange',1.0:'red'}).add_to(m)\ndisplay(m)\n","608b8d5c":"plt.figure(figsize=(40,40))\nplt.subplot(2,2,1)\nsns.countplot(data.package_id);plt.xticks(fontsize=18);plt.yticks(fontsize=18);plt.xlabel('Package type',fontsize=18)\nplt.subplot(2,2,2)\nsns.countplot(data.travel_type_id);plt.xticks(fontsize=18);plt.yticks(fontsize=18);plt.xlabel('Travel type',fontsize=18)\nplt.subplot(2,2,3)\nsns.countplot(data.Car_Cancellation);plt.xticks(fontsize=18);plt.yticks(fontsize=18);plt.xlabel('Cancellation',fontsize=18)\nplt.subplot(2,2,4)\nsns.countplot(data.vehicle_model_id);plt.xticks(fontsize=18);plt.yticks(fontsize=18);plt.xlabel('Vehicle model',fontsize=18)\nplt.show()\n","b5ef3604":"data['booking_monthly']=data['booking_created'].dt.to_period('M')\ndata['booking_daily']=data['booking_created'].dt.to_period('D')\ndata.head()\n","77b89b35":"plt.figure(figsize=(18,10))\nsns.countplot(data.sort_values('booking_monthly').booking_monthly,\n              hue=data.sort_values('booking_monthly').Car_Cancellation,\n              palette='Set2')\nplt.xlabel('Month')\nplt.ylabel('Bookings done')\nplt.title('Monthly demand of cabs')\nplt.legend(['Completed','Cancelled'],loc='best')\nplt.show()\n","2412e018":"data['booking_daily']=data['booking_daily'].astype(str)\nnew=data['booking_daily'].str.split('-',n=2,expand=True)\n#data['booking_daily']=new[2]\n#data['booking_daily']\n","a2c807fb":"plt.figure(figsize=(18,10))\nsns.countplot(new[2])\nplt.title('Daily demand of cabs')\nplt.xlabel('Day of the month')\nplt.ylabel('Bookings done')\nplt.show()\n","06e66777":"data['booking_daily']=pd.to_datetime(data['booking_daily'])\ndata['booking_daily'].sample(5)\n","1fc90cde":"plt.figure(figsize=(18,10))\nsns.countplot(data['booking_daily'].dt.day_name(),hue=data['Car_Cancellation'])\nplt.title('Day wise demand of cabs')\nplt.xlabel('Day of the week')\nplt.ylabel('Bookings done')\nplt.legend(['Completed','Cancelled'],loc='best')\nplt.show()\n","ee190f0e":"new2=data['booking_created'].astype(str)\nnew2=new2.str.extract(pat='(..:..:..)')\nnew2=new2[0].str.split(':',n=3,expand=True)\n","d7519546":"plt.figure(figsize=(18,10))\nsns.countplot(new2[0])\nplt.xlabel('Hour')\nplt.ylabel('Bookings done')\nplt.title('Hourly demand of cabs')\nplt.show()\n","256180b7":"m=folium.Map([12.9,77.6],zoom_start=11)\ndata['hour']=new2[0]\nhour_list=[]\nfor hour in data.hour.sort_values().unique():\n    hour_list.append(data.loc[data.hour==hour,['from_lat','from_long']].groupby(['from_lat','from_long']).sum().reset_index().values.tolist())\nHeatMapWithTime(hour_list,radius=5,gradient={0.2: 'blue', 0.4: 'purple', 0.6: 'orange', 1: 'red'},\n                min_opacity=0.5,max_opacity=0.8,use_local_extrema=True).add_to(m)\ndisplay(m)\n","b4975251":"x=pd.DataFrame(data.from_area_id.value_counts())\n#data[data.from_area_id==393]\nx=x.index[:20]\nx\n","e3ef6806":"map=folium.Map([12.9,77.6],zoom_start=11)\nfor loc in x:\n    folium.Marker([data[data.from_area_id==loc]['from_lat'].head(1).item(),\n                   data[data.from_area_id==loc]['from_long'].head(1).item()],\n                  popup='Area id: '+str(loc)).add_to(map)\ndisplay(map)\n","8142cba7":"**<center>Heatmap of cab's traffic in Bengaluru<\/center>**","5471a1df":"**<center>Hour of the day wise demand of cabs<\/center>**","f9fb2bd7":"**<center>Hour wise heatmap<\/center>**\n* Click on play button(third button from the top on the bottom left panel) too see animation","a087be59":"**<center>Daily demand of cabs<\/center>**","ea1b0a1a":"**<center>Top 20 hotspots in the city with highest cab demands<\/center>**","c1c70068":"**Data info**","fc4156af":"**<center>Monthly demand of cabs<\/center>**","59600a7f":"**<center>Day wise demand of cabs<\/center>**","3a5d591b":"**<center>A little visual insight<\/center>**"}}