{"cell_type":{"4cb61505":"code","b4c30a14":"code","9880b1d4":"code","25312229":"code","93050cd4":"code","bb2a521b":"code","2a5a47e7":"code","aa41a6f4":"code","c414182b":"code","454c3501":"code","c2040a68":"code","e9d2dd3f":"code","283da8bc":"code","a38fafa7":"code","c0b89715":"code","97666229":"code","345b14a8":"code","b62622f9":"code","6d4a1d56":"code","660f5021":"code","b3c33b57":"code","cae60688":"code","9ed82708":"code","f519739d":"code","927292a1":"code","efc96686":"code","3ff47e3d":"code","1ba53bee":"code","c293ebde":"markdown","d1fb350c":"markdown","326dffe9":"markdown","1bbf123c":"markdown","65d4e00c":"markdown","618086ea":"markdown","220d67e0":"markdown"},"source":{"4cb61505":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcS1kmnHeENx_mKm6kGdy7s6WOdXMX4_Ug11WVerQbX2pUqa4jQ7',width=400,height=400)","b4c30a14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9880b1d4":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# MapData-Evans-GP-Flatten.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('\/kaggle\/input\/surviving-mars-maps\/MapData-Evans-GP-Flatten.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'MapData-Evans-GP-Flatten.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","25312229":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRdB3_0PRQUfwtMUJSle2hAP8cz74UfY9PwExOns9uHLcjGhbKS',width=400,height=400)","93050cd4":"df.head()","bb2a521b":"df.dtypes","2a5a47e7":"df[\"Latitude \u00b0\"].plot.hist()\nplt.show()","aa41a6f4":"df[\"Longitude \u00b0\"].plot.hist()\nplt.show()","c414182b":"df[\"Latitude \u00b0\"].plot.box()\nplt.show()","454c3501":"df[\"Longitude \u00b0\"].plot.box()\nplt.show()","c2040a68":"sns.pairplot(df, x_vars=['Latitude \u00b0'], y_vars='Longitude \u00b0', markers=\"+\", size=4)\nplt.show()","e9d2dd3f":"dfcorr=df.corr()\ndfcorr","283da8bc":"sns.heatmap(dfcorr,annot=True,cmap='winter')\nplt.show()","a38fafa7":"fig, axes = plt.subplots(1, 1, figsize=(14, 6))\nsns.boxplot(x='Latitude \u00b0', y='Longitude \u00b0', data=df, showfliers=False);","c0b89715":"import matplotlib.style\n\nimport matplotlib as mpl\n\nmpl.style.use('classic')","97666229":"sns.jointplot(df['Latitude \u00b0'],df['Longitude \u00b0'],data=df,kind='scatter')","345b14a8":"sns.jointplot(df['Latitude \u00b0'],df['Longitude \u00b0'],data=df,kind='kde',space=0,color='g')","b62622f9":"fig=sns.jointplot(x='Latitude \u00b0',y='Longitude \u00b0',kind='hex',data=df)","6d4a1d56":"g = (sns.jointplot(\"Latitude \u00b0\", \"Longitude \u00b0\",data=df, color=\"r\").plot_joint(sns.kdeplot, zorder=0, n_levels=6))","660f5021":"fig=plt.gcf()\nfig.set_size_inches(10,7)\nfig=sns.violinplot(x='Latitude \u00b0',y='Longitude \u00b0',data=df)\n","b3c33b57":"sns.set(style=\"darkgrid\")\nfig=plt.gcf()\nfig.set_size_inches(10,7)\nfig = sns.swarmplot(x=\"Latitude \u00b0\", y=\"Longitude \u00b0\", data=df)","cae60688":"fig=sns.lmplot(x=\"Longitude \u00b0\", y=\"Latitude \u00b0\",data=df)","9ed82708":"df.plot.area(y=['Longitude \u00b0','Latitude \u00b0'],alpha=0.4,figsize=(12, 6));","f519739d":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Topography)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","927292a1":"sns.countplot(df[\"Vector Pump\"])\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","efc96686":"sns.countplot(df[\"The Positronic Brain\"])\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.show()","3ff47e3d":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQYehh4hos4EtKa5j7O1oIXBwm2c0Vs41upknr8D7NQoPEJQAXA',width=400,height=400)","1ba53bee":"sub = pd.read_csv('\/kaggle\/input\/surviving-mars-maps\/MapData-Evans-GP-Flatten.csv', delimiter=',', nrows = nRowsRead)\nsub.to_csv('sub.csv', index = False)","c293ebde":"Image sharespace.com","d1fb350c":"Surviving Mars is a sci-fi city builder all about colonizing Mars and surviving the process. Choose a space agency for resources and financial support before determining a location for your colony. Build domes and infrastructure, research new possibilities and utilize drones to unlock more elaborate ways to shape and expand your settlement. Cultivate your own food, mine minerals or just relax by the bar after a hard day\u2019s work. Most important of all, though, is keeping your colonists alive. Not an easy task on a strange new planet.","326dffe9":"Image steamcommunity.com","1bbf123c":"Image youtube.com","65d4e00c":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","618086ea":"#The original map file was created by ChoGGi and Peijen Lin transformed it into a searchable format.","220d67e0":"That data will be in front of the world's largest data science community. What questions do you want to see answered? Better don't ask me since I just reproduce (run cells) the few blocks of codes that I copied from other users."}}