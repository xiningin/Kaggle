{"cell_type":{"216b0021":"code","ad041c1b":"code","a88b4eec":"code","3bc7ec6f":"code","e82c207c":"code","1839a990":"code","fbb89489":"code","a4f5d9f7":"code","387ba771":"code","024dc0b8":"code","10c4c682":"code","5101d546":"code","40f2aa46":"code","774f1234":"code","5122d998":"code","bb84160a":"code","0929e426":"code","56cd34b3":"code","a93b81bc":"code","b8fcdfab":"code","2ef377d9":"code","ed9945c7":"code","546abf00":"code","8922379a":"code","91831041":"code","60fbda92":"markdown","35df7937":"markdown","73ff862f":"markdown","fbb6b389":"markdown","b96bc6e0":"markdown","e41218b6":"markdown","074db056":"markdown","ba2ee0bf":"markdown","c2f7e5dd":"markdown","c7eabf45":"markdown","e3b4ac93":"markdown"},"source":{"216b0021":"import pydicom, collections, cv2\nimport random, os, time, json, glob\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn import model_selection as sk_model_selection\nfrom tensorflow.keras import layers\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, LSTM, BatchNormalization\nfrom keras.callbacks import TensorBoard\nfrom keras.callbacks import ModelCheckpoint\nfrom tensorflow.keras.optimizers import Adam\n\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow_datasets as tfds\n\nimport PIL\n# import PIL.Image\nfrom PIL import Image","ad041c1b":"train_df = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\")\ntrain_df","a88b4eec":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(5, 5))\nsns.countplot(data=train_df, x=\"MGMT_value\");","3bc7ec6f":"def load_dicom(path):\n    dicom = pydicom.read_file(path)\n    data = dicom.pixel_array\n    data = data - np.min(data)\n    if np.max(data) != 0:\n        data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n    return data\n\n\ndef visualize_sample(\n    brats21id, \n    slice_i,\n    mgmt_value,\n    types=(\"FLAIR\", \"T1w\", \"T1wCE\", \"T2w\")\n):\n    plt.figure(figsize=(16, 5))\n    patient_path = os.path.join(\n        \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/\", \n        str(brats21id).zfill(5),\n    )\n    for i, t in enumerate(types, 1):\n        t_paths = sorted(\n            glob.glob(os.path.join(patient_path, t, \"*\")), \n            key=lambda x: int(x[:-4].split(\"-\")[-1]),\n        )\n        data = load_dicom(t_paths[int(len(t_paths) * slice_i)])\n        plt.subplot(1, 4, i)\n        plt.imshow(data, cmap=\"gray\")\n        plt.title(f\"{t}\", fontsize=16)\n        plt.axis(\"off\")\n\n    plt.suptitle(f\"MGMT_value: {mgmt_value}\", fontsize=16)\n    plt.show()","e82c207c":"submission = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv\")\n# submission.to_csv(\"submission.csv\", index=False)\nsubmission","1839a990":"import pathlib\npath ='..\/input\/rsna-miccai-png\/train'\ntrain_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  path,\n  labels='inferred',\n  validation_split=0.2,\n  subset=\"training\",\n  seed=123,\n  # image_size=(img_height, img_width),\n  # batch_size=batch_size,\n)\n","fbb89489":"class_names = train_ds.class_names\nprint(class_names)","a4f5d9f7":"plt.figure(figsize=(10, 10))\nfor images, labels in train_ds.take(1):\n  for i in range(9):\n    ax = plt.subplot(3, 3, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(class_names[labels[i]])\n    plt.axis(\"off\")","387ba771":"path2 ='..\/input\/rsna-miccai-png\/train\/00000'\nimg_type = tf.keras.preprocessing.image_dataset_from_directory(\n  path2,\n  labels='inferred',\n  validation_split=0.2,\n  subset=\"training\",\n  seed=123,\n  # image_size=(img_height, img_width),\n  # batch_size=batch_size,\n)","024dc0b8":"plt.figure(figsize=(10, 10))\nfor images, labels in img_type.take(1):\n  for i in range(9):\n    ax = plt.subplot(3, 3, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(class_names[labels[i]])\n    plt.axis(\"off\")","10c4c682":"root_dir = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/\"\ntypes = [\"FLAIR\",\"T1w\",\"T1wCE\",\"T2w\"]\n_new = []\n\nfor index, num in enumerate(train_df[\"BraTS21ID\"]):\n    a = []\n    for i in range(len(types)):\n        _path = root_dir + str(num).zfill(5)\n        tpath = os.path.join(_path, types[i])\n        lists = os.listdir(tpath)\n        a.append(len(lists))\n    \n    _new.append([train_df[\"BraTS21ID\"].iloc[index],train_df[\"MGMT_value\"].iloc[index],a[0], a[1], a[2], a[3]])\n\nnew_df = pd.DataFrame(_new)\nnew_df.columns = [\"BraTS21Id\", \"MGMT_value\",\"FLAIR\", \"T1w\", \"T1wCE\", \"T2w\"]\n\nnew_df","5101d546":"img_1_png = Image.open(\"..\/input\/rsna-miccai-png\/train\/00000\/FLAIR\/Image-100.png\")\nimg_1_png.size","40f2aa46":"img_2_png = Image.open(\"..\/input\/rsna-miccai-png\/train\/00137\/T1wCE\/Image-29.png\")\nimg_2_png.size","774f1234":"path = \"..\/input\/rsna-miccai-png\/train\/00000\"\nsizes = []\nfolders = os.listdir(path)\nfor folder in folders:\n    folder_path = os.path.join(path, folder)\n    names = os.listdir(folder_path)\n    \n    for name in names:\n        png_path = os.path.join(folder_path, name)\n        \n        im_size = Image.open(png_path).size\n        sizes.append(im_size)\nprint(names)\n\nprint(set(sizes))","5122d998":"path = \"..\/input\/rsna-miccai-png\/train\/00137\"\nsizes = []\nfolders = os.listdir(path)\nfor folder in folders:\n    folder_path = os.path.join(path, folder)\n    names = os.listdir(folder_path)\n    \n    for name in names:\n        png_path = os.path.join(folder_path, name)\n        \n        im_size = Image.open(png_path).size\n        sizes.append(im_size)\nprint(names)\n\nprint(set(sizes))","bb84160a":"root_dir = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/\"\ntypes = [\"FLAIR\",\"T1w\",\"T1wCE\",\"T2w\"]\n_new = []\n\nfor index, num in enumerate(train_df[\"BraTS21ID\"]):\n    a = []\n    for i in range(len(types)):\n        _path = root_dir + str(num).zfill(5)\n        tpath = os.path.join(_path, types[i])\n        lists = os.listdir(tpath)\n        a.append(len(lists))\n    \n    _new.append([train_df[\"BraTS21ID\"].iloc[index],train_df[\"MGMT_value\"].iloc[index],a[0], a[1], a[2], a[3]])\n\nnew_df = pd.DataFrame(_new)\nnew_df.columns = [\"BraTS21Id\", \"MGMT_value\",\"FLAIR\", \"T1w\", \"T1wCE\", \"T2w\"]\n\nnew_df\n","0929e426":" if __name__ == \"__main__\":\n    root_dir = \"..\/input\/rsna-miccai-png\/train\"\n    sizes = []\n    csv_path = \"imagetype.csv\"\n    with open(csv_path, 'w') as f: \n        f.write('path,height,width,size\\n') \n    for (root, dirs, files) in os.walk(root_dir):\n        print(\"# root : \" + root)\n        \n        if len(files) > 0:\n            for file_name in files:\n                png_path = os.path.join(root, file_name)\n                # print(\"file: \" + file_name)\n                \n                im_size = Image.open(png_path).size\n                with open(csv_path, 'a+') as f:  \n                    f.write(f'{png_path},{im_size[0]},{im_size[1]},({im_size[0]}x{im_size[1]})\\n')\n\n","56cd34b3":"imagetype_csv = pd.read_csv('.\/imagetype.csv')\nimagetype_csv.shape","a93b81bc":"image_df = pd.read_csv('.\/imagetype.csv',index_col = False)\nimage_df","b8fcdfab":"image_df['height'].value_counts()","2ef377d9":"image_df['width'].value_counts() ","ed9945c7":"image_df['size'].value_counts()","546abf00":" if __name__ == \"__main__\":\n    root_dir = \"..\/input\/rsna-miccai-png\/test\"\n    sizes = []\n    csv_path = \"imagetype_test.csv\"\n    with open(csv_path, 'w') as f: \n        f.write('path,height,width,size\\n') \n    for (root, dirs, files) in os.walk(root_dir):\n        print(\"# root : \" + root)\n        \n        if len(files) > 0:\n            for file_name in files:\n                png_path = os.path.join(root, file_name)\n                # print(\"file: \" + file_name)\n                \n                im_size = Image.open(png_path).size\n                with open(csv_path, 'a+') as f:  \n                    f.write(f'{png_path},{im_size[0]},{im_size[1]},({im_size[0]}x{im_size[1]})\\n')\n\n","8922379a":"image_test_df = pd.read_csv('.\/imagetype_test.csv',index_col = False)\nimage_test_df","91831041":"image_test_df['size'].value_counts()","60fbda92":"## 00137 shape is (256,256)","35df7937":"## \u270b I found that sizes are different per patients \u270b","73ff862f":"## \u26a0 Due to quantities of files, I spent time too much to load \ud83d\udcca\n## images are over 250k, so I decided to make a csv file \ud83d\udcbe ","fbb6b389":"## Check files shape per patients \u2714","b96bc6e0":"# Data preparation and preprocessing \ud83d\udc4a","e41218b6":"## Change CSV file into DataFrame ","074db056":"### 50% is (512,512) 20% is (192,256), and about 20% is (256,256)","ba2ee0bf":"## Check height and width image sizes","c2f7e5dd":"## 00000 shape is (512,512)","c7eabf45":"## ONGOING image resize~","e3b4ac93":"## I need to confirm what sizes are the best for getting features from images"}}