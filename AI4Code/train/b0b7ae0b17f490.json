{"cell_type":{"6cc23099":"code","43dc0c7d":"code","754a1316":"code","663dab06":"code","9b50e703":"code","2c0e78da":"code","df7128d2":"code","6d29015a":"code","972a840f":"code","7749ad62":"code","785ee420":"code","b41ebb4e":"code","261d4d96":"code","f22145db":"code","34e56b07":"code","6b5f771a":"code","abf88f61":"code","dbc27262":"code","2c7d846e":"code","78a77329":"code","38da5073":"code","a6f78ded":"code","60c3e6c4":"code","fe4506c8":"code","c9c62a96":"code","de7eda0a":"code","b6fcce87":"code","888cc2c6":"code","f0bd67ab":"code","f35b2cc9":"code","239bac45":"code","1176014b":"code","d1b6e07e":"code","9c2399fc":"code","35b12666":"code","4db39527":"code","df7d93ef":"code","fd8a354a":"code","bd9bb390":"code","c769fe82":"code","77571611":"code","65bc0d13":"code","6f89abcb":"code","fde6ab6d":"code","8b793ade":"code","fe89d05d":"code","af11b135":"code","d678cc73":"code","88624dc8":"code","f9cb24a0":"code","5c174e63":"code","f4e36042":"code","ea20acde":"code","e61a5c2a":"code","41e5591e":"code","c92fba56":"code","027fbffb":"markdown","5123a516":"markdown"},"source":{"6cc23099":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","43dc0c7d":"df=pd.read_csv('..\/input\/bank-loan2\/madfhantr.csv')#load dataset","754a1316":"df.head(10)#to see first 10 rows","663dab06":"df.info()","9b50e703":"df.shape","2c0e78da":"# let's describe the data\ndf.describe().T","df7128d2":"# Let's check for null values\ndf.isnull().sum()","6d29015a":"# let's deal with the null values\ndf['Gender'].fillna((df['Gender'].mode()[0]),inplace=True)","972a840f":"sns.heatmap(df.isnull())","7749ad62":"df['Married'].fillna((df['Married'].mode()[0]),inplace=True)","785ee420":"df['Dependents'].value_counts()","b41ebb4e":"df['Dependents'].fillna((df['Dependents'].mode()[0]),inplace=True)","261d4d96":"# replacing '+' from Dependent column\ndf['Dependents']=df['Dependents'].apply(lambda x:str(x).replace('+','')if '+' in str(x) else str(x))\ndf['Dependents']=df['Dependents'].apply(lambda x:int(x))","f22145db":"\ndf.isnull().sum()","34e56b07":"df['Self_Employed'].fillna((df['Self_Employed'].mode()[0]),inplace=True)","6b5f771a":"df['LoanAmount'].fillna((df['LoanAmount'].median()),inplace=True)","abf88f61":"df['Loan_Amount_Term'].fillna((df['Loan_Amount_Term'].median()),inplace=True)","dbc27262":"df['Credit_History'].fillna((df['Credit_History'].median()),inplace=True)","2c7d846e":"# Let's check onece again if any column left with the null values\ndf.isnull().sum()","78a77329":"df.info()","38da5073":"df['Gender'].value_counts()","a6f78ded":"df['Gender']=df['Gender'].replace({'Male':0,'Female':1})","60c3e6c4":"df.head()","fe4506c8":"df['Gender'].value_counts()","c9c62a96":"df['Education'].value_counts()","de7eda0a":"df['Education']=df['Education'].replace({'Graduate':0,'Not Graduate':1})","b6fcce87":"df.head()","888cc2c6":"df['Self_Employed'].value_counts()","f0bd67ab":"df['Self_Employed']=df['Self_Employed'].replace({'No':0,'Yes':1})","f35b2cc9":"df['Married'].value_counts()","239bac45":"df['Married']=df['Married'].replace({'Yes':0,'No':1})","1176014b":"df.head()","d1b6e07e":"df['Loan_Status']=df['Loan_Status'].replace({'N':0,'Y':1})","9c2399fc":"df.head()","35b12666":"df1=pd.get_dummies(df,drop_first=True)","4db39527":"df1.head()","df7d93ef":"df1.columns","fd8a354a":"df1['Loan_Status'].value_counts()","bd9bb390":"X=df1.drop('Loan_Status',axis=1)","c769fe82":"y=df1['Loan_Status']","77571611":"X.shape,y.shape","65bc0d13":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)","6f89abcb":"X_train.shape,y_train.shape","fde6ab6d":"from sklearn.linear_model import LogisticRegression\nlog=LogisticRegression()","8b793ade":"log.fit(X_train,y_train)","fe89d05d":"pred=log.predict(X_test)","af11b135":"from sklearn.metrics import r2_score\nprint('the score is',log.score(X_test,y_test))","d678cc73":"print('the r2score is ',r2_score(y_test,pred))","88624dc8":"from sklearn.metrics import accuracy_score\nprint('the model accuracy is',accuracy_score(y_test,pred))","f9cb24a0":"log.intercept_","5c174e63":"from sklearn.metrics import confusion_matrix","f4e36042":"confusion_matrix(y_test,pred)","ea20acde":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,pred))","e61a5c2a":"from sklearn import metrics","41e5591e":"def draw_roc( actual, probs ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, probs,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, probs )\n    plt.figure(figsize=(6, 4))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return fpr, tpr, thresholds","c92fba56":"draw_roc(y_test,pred)","027fbffb":" ROC summarizes the predictive power for all possible values of p > 0.5.Higher the area under curve, better the prediction power of the model.","5123a516":"* from this statistical analysis we can say the applicants income varies from min(150) to max(81000).\n* where as the coapplicant income varies from min(0) to max(41667)."}}