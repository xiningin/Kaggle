{"cell_type":{"bd4bf554":"code","82ef838d":"code","97a5ba92":"code","b2902a15":"code","1340f2eb":"code","eb7d0f4c":"code","220b2d15":"code","888382f5":"code","8ab1303e":"code","775c6056":"code","ec2ca5a2":"code","56e1f40a":"code","a3cbdda3":"code","7c158e78":"code","e47fd48f":"code","bed5fa57":"code","48539769":"code","d9e85a2b":"markdown","26299325":"markdown","2b09dd91":"markdown","79ae38dd":"markdown","46a8c8e5":"markdown","94e21b43":"markdown"},"source":{"bd4bf554":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","82ef838d":"data = pd.read_csv('\/kaggle\/input\/forest-fires-in-brazil\/amazon.csv', encoding = \"latin1\")\n","97a5ba92":"data.head(20)","b2902a15":"def explore(data):\n    summaryDF = pd.DataFrame(data.dtypes, columns=['dtypes'])\n    summaryDF = summaryDF.reset_index()\n    summaryDF['Name'] = summaryDF['index']\n    summaryDF['Missing'] = data.isnull().sum().values\n    summaryDF['Total'] = data.count().values\n    summaryDF['MissPerc'] = (summaryDF['Missing']\/data.shape[0])*100\n    summaryDF['NumUnique'] = data.nunique().values\n    summaryDF['UniqueVals'] = [data[col].unique() for col in data.columns]\n    \n    \n\n\n    print(summaryDF.head(30))","1340f2eb":"explore(data)","eb7d0f4c":"latitude={'Acre':-9.02,'Alagoas':-9.57,'Amapa':02.05,'Amazonas':-5.00,'Bahia':-12.00,'Ceara':-5.00,\n          \n          'Distrito Federal':-15.45,'Espirito Santo':-20.00,'Goias':-15.55,'Maranhao':-5.00,'Mato Grosso':-14.00\n          \n          ,'Minas Gerais':-18.50,'Par\u00e1':-3.20,'Paraiba':-7.00,'Pernambuco':-8.00,'Piau':-7.00,'Rio':-22.90,\n          \n          'Rondonia':-11.00,'Roraima':-2.00,'Santa Catarina':-27.25,'Sao Paulo':-23.32,'Sergipe':-10.30,\n         \n         'Tocantins':-10.00\n         }\n\n\nlongitude={\n    'Acre':-70.8120,'Alagoas':-36.7820,'Amapa':-50.50,'Amazonas':-65.00,'Bahia':-42.00,'Ceara':-40.00,\n    \n    'Distrito Federal':-47.45,'Espirito Santo':-40.45,'Goias':-50.10,'Maranhao':-46.00,'Mato Grosso':-55.00,\n    \n    'Minas Gerais':-46.00,'Par\u00e1':-52.00,'Paraiba':-36.00,'Pernambuco':-37.00,'Piau':-73.00, 'Rio':-43.17,\n    \n    'Rondonia':-63.00,'Roraima':-61.30,'Santa Catarina':-48.30,'Sao Paulo':-46.37,'Sergipe':-37.30,\n    \n    'Tocantins':-48.00\n}","220b2d15":"data['Latitude']=data['state'].map(latitude)\ndata['Longitude']=data['state'].map(longitude)\ndata = gpd.GeoDataFrame(data, geometry=gpd.points_from_xy(data.Longitude, data.Latitude))\ndata.crs = {'init': 'epsg:4326'}\ndata.head(50)","888382f5":"ax = data.plot(figsize=(20,8), color='whitesmoke', linestyle=':', edgecolor='black')\ndata.to_crs(epsg=32630).plot(markersize=1, ax=ax)","8ab1303e":"data['date'] = data['date'].astype('datetime64[ns]')\ndata['number'] = data['number'].astype(int)","775c6056":"plt.figure(figsize=(20,10))\nsns.countplot(data.state)\nplt.xticks(rotation=90)\n\n","ec2ca5a2":"state_fire = data.groupby(['state'])['number'].sum().reset_index(name='counts')\n\nstate_fire.sort_values(by='counts',ascending=False)\n","56e1f40a":"plt.figure(figsize=(20,5))\nsns.barplot(data=state_fire, x=\"state\", y=\"counts\")\nplt.ylabel('Count')\nplt.xlabel('State')\nplt.title('Total Fire Count By State')\nplt.xticks(rotation=90)","a3cbdda3":"year_df = data.groupby(['year'])['number'].sum().reset_index(name='sum')\nplt.figure(figsize=(20,10))\nsns.barplot(data=year_df, x='year', y='sum')\npx.line(year_df,x='year',y='sum')\n\n","7c158e78":"year_df['sum'].describe()","e47fd48f":"mato_g = data.loc[data['state']==\"Mato Grosso\"]\nmato_g_data = mato_g.groupby(['year'])['number'].sum().reset_index(name='number')\n\nplt.figure(figsize=(10,5))\nsns.lineplot(data=mato_g_data, x='year', y='number')\n\nplt.figure(figsize=(20,10))\nsns.barplot(data=mato_g_data, x='year',y='number')","bed5fa57":"month_mont = mato_g.groupby(['month'])['number'].sum().reset_index(name='number')\nplt.figure(figsize=(20,10))\nsns.barplot(data=month_mont, x='month', y='number')","48539769":"pct_change = pd.DataFrame(data.groupby(['year'])['number'].sum())\npct_change['pct_change'] = data.groupby(['year'])['number'].sum().pct_change()*100\npct_change","d9e85a2b":"It looks like the amount of fires are pretty evenly distributed. Lets find see by just how much.","26299325":"The bar chart above is just a visual representation of what we already know.","2b09dd91":"The above geo is giving me an understanding of where each state is in relation to one another. I could go ahead and add the map of brazil as an underlay but I think I will wait to do that because I can imagine the shape myself right now.\n","79ae38dd":"Looks Like the top 5 states in terms of largest fire amount is Mato Grosso, Paraiba, Sao Paolo, Rio and Bahia (Mato Grosso being the hights and Bahia Being the lowest of the top 5 states). The fire amount repersents the aggregate of all years in the Dataset. \n","46a8c8e5":"The bar graph above is showing me how many rows of each state is showing in my dataframe. ","94e21b43":"For 20 straight years we are looking at a std of 5893, with a high of 42737 and a low of 19999. This is pretty steady. I wounder however if there was a reason for the heighest year of 42737 fires in 2003. Also I wounder why Mato Grasso has so may fires year of year. "}}