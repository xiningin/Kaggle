{"cell_type":{"f75027ac":"code","49fb80c4":"code","8731781d":"code","754c2381":"code","978fa2ee":"code","33d95a90":"code","94c99fbb":"code","72d3d5ea":"code","0952cb6e":"code","6361f4ce":"code","6b6cb9e2":"code","2137af88":"code","93f23a51":"code","ab709454":"code","0cf1d997":"code","31b4cc66":"code","848d4e1f":"code","39e8c0b8":"code","8381982a":"code","b9926872":"code","e78c8467":"code","8b130ace":"code","d75ce250":"code","62daf18f":"code","34825b9a":"code","7657b5ac":"code","e25c149a":"code","6d0e9e83":"code","397117e1":"code","cd6144aa":"code","6682b067":"code","edfb0761":"code","7358482b":"code","1d33aa0d":"code","7f1f0439":"code","818b4f7a":"code","4932165a":"code","0e890cfe":"code","4d63d667":"code","f8f90ef2":"code","3010ccf4":"code","2e0cc2a5":"code","d907c279":"code","f6bc57a3":"code","dc1a2c53":"code","6a81c35a":"code","825ece49":"code","75ff7af4":"code","efb8dad7":"code","dc5ce48b":"code","5a3d9ad6":"code","d65f9892":"code","91be125d":"code","d70242ab":"code","a0d6deff":"code","7a154a24":"code","795b89fa":"code","615c3f54":"code","55f3a7b0":"code","fc869538":"code","644ce511":"code","94fb72e8":"code","942cb577":"code","af2d4799":"code","570de47c":"code","cbdb242b":"code","7cea5d7f":"code","23b64c9b":"code","0a2c0600":"code","66924173":"code","416c4831":"code","68c125fd":"code","a0be6738":"markdown","db4895c8":"markdown","9103b6b8":"markdown","372c4736":"markdown","de196834":"markdown","b60c30bc":"markdown","591d4db0":"markdown","f27c7288":"markdown","90e704f6":"markdown","1bcfdf3f":"markdown","242369a7":"markdown","69a42d7c":"markdown","c047acf8":"markdown","a9d91dd6":"markdown","efdcccdb":"markdown","bf2d8bf1":"markdown","df9f0602":"markdown","571d7f38":"markdown","150779b5":"markdown","3c804c2b":"markdown","25a3f409":"markdown","7de20914":"markdown","62d5ba73":"markdown","3a985cb1":"markdown","45b66ac7":"markdown","8c896d04":"markdown","a8b03368":"markdown","ae315fb9":"markdown","10fe1f7f":"markdown","59606ae3":"markdown","c2f77ff2":"markdown","597a02c7":"markdown","e042656f":"markdown","73f6f66b":"markdown","087f370a":"markdown","ee7e7750":"markdown","6fe54bfa":"markdown","572f5b93":"markdown","972e8dc3":"markdown","019d11e8":"markdown","71454c81":"markdown","4392c90c":"markdown","7b21da8a":"markdown","6d5a96e3":"markdown","da66f368":"markdown","017b4c80":"markdown","05b96e03":"markdown","d99adc81":"markdown","a429c389":"markdown","4713c719":"markdown","601ea203":"markdown","dcf01dca":"markdown"},"source":{"f75027ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49fb80c4":"import re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nfrom IPython.display import HTML\nimport plotly as py\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\npy.offline.init_notebook_mode(connected = True)","8731781d":"HTML('''\n<script>\n  function code_toggle() {\n    if (code_shown){\n      $('div.input').hide('500');\n      $('#toggleButton').val('Show Code')\n    } else {\n      $('div.input').show('500');\n      $('#toggleButton').val('Hide Code')\n    }\n    code_shown = !code_shown\n  }\n\n  $( document ).ready(function(){\n    code_shown=false;\n    $('div.input').hide()\n  });\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" id=\"toggleButton\" value=\"Show Code\"><\/form>''')","754c2381":"df=pd.read_csv('\/kaggle\/input\/22000-scotch-whisky-reviews\/scotch_review.csv')","978fa2ee":"df","33d95a90":"df.shape","94c99fbb":"df.isnull().sum()","72d3d5ea":"col=df.columns\nnunique=df.nunique()\nnul = df.isnull().sum()\ntyp = df.dtypes\nnuniq = pd.DataFrame({'column_name':col,'no. of Unique Values':nunique,'Missing Values':nul,'Class Type':df.dtypes})\nnuniq.reset_index(drop=True)","0952cb6e":"print(df['Unnamed: 0'])\n# These all are the unique numbers \n#so let us rename this column\ndf=df.rename(columns={'Unnamed: 0':'ID'})\ndf","6361f4ce":"df['currency']","6b6cb9e2":"df = df.drop(['currency'],axis=1)","2137af88":"df.head()","93f23a51":"print(df['category'].head())\nprint('\\n\\n Type of class of this feature is :',df.category.dtype)\nprint('\\n\\n number of unique category : ',df.category.nunique())\ndf.category.unique()","ab709454":"plt.figure(figsize=(10,7))\na=sns.countplot(df['category'],palette='rocket_r')\n_=plt.xticks(rotation=70)\nplt.show()","0cf1d997":"print('Class type of the column \\t',df['review.point'].dtype)\nprint('number of the unique values : ',df['review.point'].nunique())\nprint(\"\\n Let's check out the range of points given\\t\",df['review.point'].min(),\"-\",df['review.point'].max())\n","31b4cc66":"def fig(length,width):\n    plt.figure(figsize=(length,width))\n\ndef setit(x):\n    _=plt.xticks(rotation=x)\n    plt.show()","848d4e1f":"fig(10,5)\nsns.catplot('category','review.point',data=df,palette='Oranges_r')\nsetit(70)","39e8c0b8":"fig(12,5)\nsns.swarmplot(x=df['category'],y=df['review.point'])\nsetit(70)","8381982a":"fig(12,7)\nsns.boxplot(x=df['category'],y=df['review.point'],data=df,palette='Purples_r',saturation=.6,fliersize=8,whis=2)\nsetit(70)","b9926872":"sns.lineplot('category','review.point',data=df)\nsetit(30)","e78c8467":"fig(7,5)\nsns.scatterplot('category','review.point',data=df)\nplt.ylim(90,98)\nsetit(30)","8b130ace":"#take the isight of price cloumn\n#df['price'].unique()","d75ce250":"int_price=[]\n\n# finding out the complications in the column\nfor i in df['price']:\n    #removing $ and , so that we can convert this feature price into integer type\n    _=re.sub(r'[$,]+','',i)\n    #converting float integrs\n    x=re.sub(r'\\W\\d\\d','',_)\n    z=0\n    #converting liter into one botle price\n    if (\"\/l\" in x):\n        l=re.sub(r'[\/l]\\w+','',x)\n        \n        z=int(l)\n        z=z*.75\n        int_price.append(z)\n        \n    # if any of the alphanumeric value like space like we encountered the case : ('$15,000 or $60,000\/set')     \n    elif(\" \" in  x):\n        l= re.sub(r'[ ]\\w+\\W+\\w+','',x)\n        z=int(l)\n        int_price.append(z)\n            \n    elif (\"set\" in x):\n        l=re.sub(r'[\/]\\w+','',x)\n        \n        z= int(l)\n        z=z\/4\n        int_price.append(z)\n    else :\n        z=int(x)\n        int_price.append(z)\n#print(int_price)             ","62daf18f":"df['price'] = int_price","34825b9a":"df['price'].dtype","7657b5ac":"fig(10,5)\nsns.set(color_codes=True)\nsns.lineplot(df['category'],df['price'],data=df)\nsetit(10)","e25c149a":"sns.set(color_codes=True)\nsns.lineplot(y=df.price, x=df.index , data=df)\nplt.xlabel('Frequency');","6d0e9e83":"sns.lineplot(df['review.point'],df['price'],data=df)\nplt.xlim(60,100)\nplt.ylim(0,15000)","397117e1":"fig(12,7)\nsns.lmplot('review.point','price',data=df,hue='category')\n_=plt.xlim(65,100)\n_=plt.ylim(0,18000)","cd6144aa":"df.sort_values(by = 'review.point' , ascending = False)[['name','category','review.point','price' ]].head(15)","6682b067":"avp=df['price'].mean()\navr=df['review.point'].mean()\nprint('Average price of all the scotch in data set is: \\t',avp)\nprint('Average review point of all the scotch in data set is: \\t',avr)","edfb0761":"# scotch under $50 with review point above 90\n_50=df[(df['review.point'] > 90) & (df['price'] < 50)]\n_50","7358482b":"#scotch under $100 with rating above 95\n_100=df[(df['review.point'] > 95) & (df['price'] < 100)]\n_100","1d33aa0d":"#scotch above $100 but review point below 76\n#worst scotch in the list\n_100_=df[(df['review.point'] < 76) & (df['price'] > 100)]\n_100_","7f1f0439":"# avp\/avr ratio\n# df['ratio'] will show us the\nratio = df['price']\/df['review.point']\nz=pd.DataFrame({'name':df['name'],'marks':df['review.point'],'price':df['price'],'category':df['category'],'ratio':ratio})\n","818b4f7a":"#price efficient scotch\nz[z['ratio']<.2]","4932165a":"sns.distplot(z['ratio'])\nplt.ylim(0,0.00115)","0e890cfe":"df['name'].head(5)","4d63d667":"#clearing the unwanted string present in ()\nclean = []\nfor i in df.name:\n    if (\"(\" in i):\n        x  =re.sub( r'\\([^)]*\\)','',i )\n        clean.append(x)\n    else : \n        clean.append(i)\n\n    \n      \n        ","f8f90ef2":"df['name'] = clean\n#remove head() and take the insight of name\ndf['name'].head()\nreview=df.copy()","3010ccf4":"# finding the alchohol content percentage of each of the bottle of scotch\nalc=[]\nfor i in df['name']:\n    per = re.findall(r'(\\d\\d\\W?\\d?%)',i)\n    if (len(per) == 0):\n        _ = float('NaN')\n        alc.append(_)\n    else:\n        if(len(per)==2):\n            __=re.sub('%','',per[1])\n            _=float(__)\n            alc.append(_)\n        else:\n            __ = re.sub('%','',per[0])\n            _ = float(__)\n            alc.append(_)","2e0cc2a5":"df['percentage']=alc","d907c279":"clean =[]\n# removing the alchohol percentage from name\nfor i in df['name']:\n    _ = re.sub(r'(\\d\\d\\W?\\d?%)','',i)\n    clean.append(_)\ndf['name']=clean","f6bc57a3":"# finding the age of the bottle\nage=[]\nfor i in df['name']:\n    yod = re.findall('\\d\\d? year old',i)\n    if (len(yod) == 1):\n        __ = re.findall('\\d\\d?',yod[0])\n        ag=int(__[0])\n        age.append(ag)\n    else:\n        __ = re.findall(' \\d\\d\\d\\d ',i)\n        if (len(__)== 1):\n            _=int(__[0])\n            ag=2020-_\n            if (ag>200):\n                ag=float(\"NaN\")\n                age.append(ag)\n            else :\n                age.append(ag)\n        else:\n            ag=float('NaN')\n            age.append(ag)\n    ","dc1a2c53":"df['age'] = age\n","6a81c35a":"clean=[]\n#removing the age\nfor i in df['name']:\n    _ = re.sub(' \\d\\d? year old','',i)\n    clean.append(_)\ndf['name'] = clean    ","825ece49":"#final cleaning of df['name']\nclean=[]\nfor i in df['name']:\n    i=re.sub(r'[,]+','',i)\n    i=re.sub(r'  ',' ',i)\n    clean.append(i)\ndf['name'] = clean","75ff7af4":"df","efb8dad7":"df.sort_values(by = 'percentage' , ascending = False)[['name','category','review.point','price','age','percentage' ]].head(5)","dc5ce48b":"df.sort_values(by = 'price' , ascending = False)[['name','category','review.point','price','age','percentage' ]].tail(5)","5a3d9ad6":"df.sort_values(by = 'price' , ascending = False)[['name','category','review.point','price','age','percentage' ]].head(5)","d65f9892":"fig(12,7)\nsns.pointplot(x='marks',y='ratio',data=z,join=False,dodge=True,palette='inferno',hue='category',markers='x')\n","91be125d":"fig, ax = plt.subplots(figsize=(16,10), facecolor='white', dpi= 80)\nax.vlines(x=z.index, ymin=0, ymax=z.ratio, color='firebrick', alpha=0.7, linewidth=20)\n\np1 = patches.Rectangle((.57, -0.005), width=.33, height=.13, alpha=.1, facecolor='green', transform=fig.transFigure)\np2 = patches.Rectangle((.124, -0.005), width=.446, height=.13, alpha=.1, facecolor='red', transform=fig.transFigure)\nfig.add_artist(p1)\nfig.add_artist(p2)\nplt.show()","d70242ab":"#grouping\nx_var = 'ratio'\ngroupby_var = 'category'\nz_agg = z.loc[:, [x_var, groupby_var]].groupby(groupby_var)\nvals = [z[x_var].values.tolist() for i, z in z_agg]\n\n#draw\nplt.figure(figsize=(16,9), dpi= 80)\ncolors = [plt.cm.Spectral(i\/float(len(vals)-1)) for i in range(len(vals))]\nn, bins, patches = plt.hist(vals, 30, stacked=True, density=False, color=colors[:len(vals)])\n\n# Decoration\nplt.legend({group:col for group, col in zip(np.unique(df[groupby_var]).tolist(), colors[:len(vals)])})\nplt.xlabel(x_var)\nplt.ylabel(\"Frequency\")\nplt.ylim(0, 20)\nplt.xticks(ticks=bins[::3], labels=[round(b,1) for b in bins[::3]])\nplt.show()\n","a0d6deff":"corr = df.corr()\nplt.subplots(figsize=(15,12))\nsns.heatmap(corr, vmax=0.9, cmap=\"Greens\", square=True)","7a154a24":"#most comon brands\nfigure = plt.figure(figsize=(14,12))\nsns.barplot(y=df['name'].value_counts().index[:20], x=df['name'].value_counts()[:20])","795b89fa":"fig = plt.figure(figsize=(8, 6))\nax = fig.add_subplot(111, projection='3d')\n\nxs=df['review.point'].where(df['review.point']>90)\nys=df['age'].where(df['age']>45)\nzs=df['price'].where(df['price'] < 1000)\n                            \nax.scatter(xs, ys, zs, s=50, alpha=0.6, edgecolors='w')\n\nax.set_xlabel('review points')\nax.set_ylabel('age')\nax.set_zlabel('Price')\n\n\n                            ","615c3f54":"SMS=review[review.category==\"Single Grain Whisky\"]['description'].values\nBSW=review[review.category=='Blended Scotch Whisky']['description'].values\nBMSW=review[review.category=='Blended Malt Scotch Whisky']['description'].values\nSGW=review[review.category=='Single Grain Whisky']['description'].values\nGSW=review[review.category=='Grain Scotch Whisky']['description'].values","55f3a7b0":"#Code inspiration:https:\/\/www.kaggle.com\/duttadebadri\/analysing-the-olympics-for-last-120-yrs\/notebook & Nick Brooks from comments ..\n\nfrom wordcloud import WordCloud,STOPWORDS\nstopwords=set(STOPWORDS)\ndef show_wordcloud(data,title=None):\n    wc=WordCloud(background_color=\"black\", max_words=10000,stopwords=STOPWORDS, max_font_size= 40)\n    wc.generate(\" \".join(data))\n    fig=fig = plt.figure(figsize=[8,5], dpi=80)\n    plt.axis('off')\n    if title:\n        fig.suptitle(title,fontsize=16)\n        fig.subplots_adjust(top=1)\n        plt.imshow(wc.recolor( colormap= 'Pastel2' , random_state=17), alpha=1,interpolation='bilinear')\n        plt.show()\n        ","fc869538":"show_wordcloud(SMS,title=\"Wordcloud for Single Grain Whisky\")","644ce511":"show_wordcloud(BSW,title=\"Wordcloud for Blended Scotch Whisky\")","94fb72e8":"show_wordcloud(BMSW,title=\"Wordcloud for Blended Malt Scotch Whisky\")","942cb577":"show_wordcloud(SGW,title=\"Wordcloud for Single Grain Whisky\")","af2d4799":"\nshow_wordcloud(GSW,title=\"Wordcloud for Grain Scotch Whisky\")","570de47c":"df['description'].describe","cbdb242b":"import nltk\nimport string\n\n!pip install nlppreprocess\nfrom nlppreprocess import NLP\n","7cea5d7f":"from nltk.stem.snowball import SnowballStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer","23b64c9b":"#Converting reviews into lowercase\ndef lowercase_text(text):\n    text = text.lower()\n    return text\ndf['description'] = df['description'].apply(lambda x :lowercase_text(x))","0a2c0600":"# removing all the unwanted noise (if any)\ndef remove_noise(text):\n    # Dealing with Punctuation\n    text = re.sub('\\[.*?\\]', '', text)\n    text = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    text = re.sub('<.*?>+', '', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    return text\ndf['description'] = df['description'].apply(lambda x :remove_noise(x))","66924173":"# removing the stop words\nnlp = NLP()\ndf['description'] = df['description'].apply(nlp.process)","416c4831":"#stemming \n\nstemmer = SnowballStemmer(\"english\")\n \ndef stemming(text):\n    text = [stemmer.stem(word) for word in text.split()]\n    return ' '.join(text)\ndf['description']=df['description'].apply(stemming)","68c125fd":"# vectorization\ncount_vectorizer = CountVectorizer(analyzer='word', binary=True)\ncount_vectorizer.fit(df['description'])\ncv = count_vectorizer.fit_transform(df['description'])","a0be6738":"# ------------------------------------------------------------------King-----------------------------------------------------------------\n<center>\n    <img src = \"https:\/\/img.thewhiskyexchange.com\/900\/abgob.non7.jpg\" width = 500 height = 700 >\n    <h3>Ardbeg Corryvreckan<\/h3>\n<\/center>","db4895c8":"Remove alphanumeric digit , price per bottle , convert into float ( \" , \"   \" $ \"  \"set\",\"litre\" nad many more)","9103b6b8":"#### **Blended Malt have highest average points and Single Grain have lowest average reivews**","372c4736":"<center>\n    <img src = \"https:\/\/media.giphy.com\/media\/XE7UOgkoRDxT9taNBW\/giphy.gif\" width = 300 height = 500 >\n <\/center>","de196834":"# ---------------------------------------------------------------------------------------------------------------------------------------------","b60c30bc":"### Scotch with lowest price","591d4db0":"## best scotchs\n","f27c7288":"## king of scotch\n","90e704f6":"## Scotch that gives good value for money","1bcfdf3f":"## *Catergory Column*","242369a7":"### Scotch with highest alchohol content","69a42d7c":"## Lets Explore what does Our data says:\n 1. unaned 0 : unique no. for each scotch (rename it)\n 2. name : some name are matching look out for those names\n 3. category : type of the scotch\n 4. review.point : Actually it is integer data so we'll deal this later on\n 5. price : We''ll check out the variability in price later on\n 6. Currency : This have only one unique value therefore it is not a very usefull column for us\n 7. Description : This is the review given by the experts to each bottle of the scotch.\n\nLet's have a look at each of the featue closely\n\n","c047acf8":"<center>\n    <img src = \"https:\/\/www.johnniewalker.com\/media\/1634\/02-john-walker-and-sons-diamond-jubilee.jpg?quality=75&format=webp&width=1920&upscale=false\" width = 700 height = 900 >\n    <h3>Diamond Jubilee by John Walker & Sons<\/h3>\n<\/center>","a9d91dd6":"## top 20 best reviewed \n","efdcccdb":"### review vs price\nLet's check out what they depict\n","bf2d8bf1":"### We can clearly see the range of review points for all the categories","df9f0602":"extracting out features from metadata\n1. Alchol content\n2. year of manufacturing","571d7f38":"Text Preprocessing :\n 1. Lower Case\n 2. Stemming\/Lemmitization\n 3. Tokenization\n 4. Removing all the noise\n","150779b5":"from name column we get different features , i.e Name column have metadata ion it\n1. Name of product\n3. alchohol content\n4. Year of distilization","3c804c2b":"## *Price*","25a3f409":"### Let's go\n[](http:\/\/)\n!.[me](https:\/\/media.giphy.com\/media\/29NvI4SG9Zr2M\/source.gif)","7de20914":"![](http:\/\/)","62d5ba73":"## Tada! we have a new data set","3a985cb1":"removinng description and the keeping the price and point as target valies .\n","45b66ac7":"Blend Scotch are indeed expensive","8c896d04":"Lets find out the highest review of each categry with help of a chart","a8b03368":"# ---------------------------------------------------------------------------------------------------------------------------------------------","ae315fb9":"<center>\n    <img src = \"https:\/\/img.thewhiskyexchange.com\/900\/blend_joh84.jpg\" width = 300 height = 500 >\n    <h3>Johnnie Walker Blue Labe<\/h3>\n    <img src = \"https:\/\/img.thewhiskyexchange.com\/900\/bowob.1964v30.jpg\" width = 300 height = 500>\n    <h3> Bownmore(distilled 1964 <\/h3>\n    <img src = \"https:\/\/img.thewhiskyexchange.com\/900\/bowob.1964v22.jpg\" width = 300 height= 500 >\n    <h3>Black Bownmore<\/h3>\n    <img src = \"https:\/\/img.thewhiskyexchange.com\/900\/dlmob.50yo.jpg\" width = 300 height = 500>\n    <h3>The Dalmore 50 year old<\/h3>\n    <img src = \"https:\/\/d2ph7mtwix1r5n.cloudfront.net\/s3fs-public\/styles\/whisky_sliders\/public\/IMG_0535_9.jpg?itok=nZhs5PsQ\" width = 300 height = 500>\n    <h3>Macallan 1976 vintage<\/h3>\n<\/center>","10fe1f7f":"### Scotch with highest price","59606ae3":"# This version is for- Preprocessing,EDA,Visualization","c2f77ff2":"<center>\n    <img src = \"https:\/\/media.giphy.com\/media\/3oEduJ323JmMXE4Yxi\/giphy.gif\" width = 300 height = 500 >\n <\/center>","597a02c7":"Moving on to the reviews\n\n1. Finding the keywords\n2. finding the common relation between different reviews(common keywords)\n3. text mining preprocessing","e042656f":"We can clearly see that Single Malt is the most common one","73f6f66b":"## ***First lets understand our data*** ","087f370a":"# Only for 18+ kagglers.","ee7e7750":"### The average review point for different categories","6fe54bfa":"## Over ratted scotch","572f5b93":"<center>\n    <img src = \"https:\/\/www.thespruceeats.com\/thmb\/UlfHIJuwVZqFni47Njcu__0Rl9o=\/960x0\/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)\/GettyImages-682151574-5a7a1b8eba617700368c53ff.jpg\" width = 1000 height = 1200 >\n <\/center>","972e8dc3":"#### **Wow not a single missing data**\n","019d11e8":"Clustering of data","71454c81":"**Let's find out the missing values**\n","4392c90c":"# Name","7b21da8a":"### This gives us the frequency plot of different kinds of scotches","6d5a96e3":"# Now working over the text data","da66f368":"Creating a model for it","017b4c80":"**Exploring the unnmaed 0 column**","05b96e03":"## divide the category into different data frames","d99adc81":"Can tell the brand of the scotch with a given description\nPrice can be the target value\npoints can be the target value\n","a429c389":"### This clearly shows the trend of average review points ","4713c719":"Since it have only  a single value we will drop this column","601ea203":"> ### we have some issue with the prices , some prices are given in form of sets or dozens ,we have to clean this colummn","dcf01dca":"### The highest review point awarded to each type of scotch"}}