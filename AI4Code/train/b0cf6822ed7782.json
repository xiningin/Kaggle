{"cell_type":{"428e10ce":"code","763c1a30":"code","04d705d8":"code","9254a1cf":"code","e0a8716f":"code","702f1d29":"code","43cc9894":"code","167cc38f":"code","b17658c8":"code","1ae47c5f":"code","ffb396eb":"code","71c16d44":"code","02a2c1d2":"code","0ab88439":"code","dfa3fff2":"code","2b32ffcf":"code","aa021f6f":"code","ff69168a":"code","608157c3":"code","d802d47f":"code","95d7f264":"code","ef4ef4ac":"code","d24b502f":"code","ad30ca81":"code","ccee2deb":"code","c0ef1770":"code","babce542":"code","9d9992c9":"code","285e1020":"code","b6d14414":"code","f4b7135d":"code","65a2170b":"code","bf4bc323":"code","65de884f":"code","8788634b":"code","7a7b15a6":"code","3680bad6":"code","2c6d941e":"code","2a00c2b6":"code","79512653":"code","8461a558":"code","e9e23372":"code","9d0d2170":"code","f1e3f1c6":"code","854e65f0":"code","bcd6b09e":"code","e6fc784a":"code","d7d18456":"code","46823aa2":"code","80e0e65b":"code","a417570d":"code","b36a5a0e":"code","de163522":"markdown","e8e15d66":"markdown","db482cf2":"markdown","3b7d6b2d":"markdown","f8cf189d":"markdown","4868509e":"markdown"},"source":{"428e10ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","763c1a30":"!pip install weightedstats","04d705d8":"from scipy.stats import trim_mean, norm, probplot\nfrom sklearn.utils import resample\nimport weightedstats as ws\nimport seaborn as sns\nsns.set_style('dark')\nimport matplotlib.pyplot as plt","9254a1cf":"df = pd.read_csv('..\/input\/loan-csv\/data\/state.csv')\ndf.head()","e0a8716f":"df.Population.mean()","702f1d29":"df.Population.median()","43cc9894":"trim_mean(df.Population,.1)","167cc38f":"np.average(df['Murder.Rate'],weights=df.Population)","b17658c8":"ws.weighted_median(df['Murder.Rate'], df.Population)","1ae47c5f":"df.Population.std()","ffb396eb":"iqr = df.Population.quantile(.75) - df.Population.quantile(.25)# inter quantile range","71c16d44":"iqr ","02a2c1d2":"outliers = [-iqr*1.5 + df.Population.quantile(.25), df.Population.quantile(.75) + iqr*1.5]\noutliers","0ab88439":"sns.boxplot(x = df['Population'])\nsns.scatterplot(x=[df.Population.quantile(.75) + iqr*1.5], y=[0])\nsns.scatterplot(x=[df.Population.quantile(.5)], y=[0])\nsns.scatterplot(x=[df.Population.quantile(.25) - iqr*1.5], y=[0])\nsns.scatterplot(x=[df.Population.quantile(.75)], y=[0])\nsns.scatterplot(x=[df.Population.quantile(.25)], y=[0])","dfa3fff2":"df['Murder.Rate'].quantile([0.05, 0.25, 0.5, 0.75, 0.95])","2b32ffcf":"binnedPopulation = pd.cut(df['Population'], 10)\nbinnedPopulation.value_counts()","aa021f6f":"ax = (df['Population'] \/ 1_000_000).plot.hist(figsize=(4, 4))\nax.set_xlabel('Population (millions)')\n","ff69168a":"ax = df['Murder.Rate'].plot.hist(density=True, xlim=[0,12], bins=range(1,12))\ndf['Murder.Rate'].plot.density(ax=ax)\nax.set_xlabel('Murder Rate (per 100,000)')","608157c3":"dfw = pd.read_csv('..\/input\/loan-csv\/data\/dfw_airline.csv')\ndfw","d802d47f":"sns.barplot(x=dfw.columns, y=dfw.iloc[0])\nplt.xlabel('Cause of delay')\nplt.ylabel('Count')","95d7f264":"plt.pie(dfw.iloc[0], labels=dfw.columns)","ef4ef4ac":"stocks = pd.read_csv('..\/input\/loan-csv\/data\/sp500_data.csv')\nstocks.head()","d24b502f":"corr = stocks.iloc[:,:10].corr()\nplt.figure(figsize=(13,10))\nsns.heatmap(corr, annot=True)","ad30ca81":"stocks.describe().T","ccee2deb":"ax = stocks.loc[:,[\"T\",\"VZ\"]].plot.scatter(x='T', y='VZ', figsize=(14, 14), marker='$\\u25EF$')\nax.set_xlabel('ATT (T)')\nax.set_ylabel('Verizon (VZ)')\nax.set_title('Scatterplot of correlation between returns for ATT and Verizon')\nax.axhline(0, color='grey', lw=1)\nax.axvline(0, color='grey', lw=1)","c0ef1770":"tax = pd.read_csv('..\/input\/loan-csv\/data\/kc_tax.csv')\ntax.head()","babce542":"tax0 = tax.loc[(tax.TaxAssessedValue < 750000) & \n                     (tax.SqFtTotLiving > 100) & (tax.SqFtTotLiving < 3500), :]\ntax0.shape","9d9992c9":"ax = tax0.plot.hexbin(x='SqFtTotLiving', y='TaxAssessedValue',\n                         gridsize=30, sharex=False, figsize=(12, 12))\nax.set_xlabel('Finished Square Feet')\nax.set_ylabel('Tax-Assessed Value')","285e1020":"ax = tax0.plot.scatter(x='SqFtTotLiving', y='TaxAssessedValue',\n                       figsize=(12, 12))\nax.set_xlabel('Finished Square Feet')\nax.set_ylabel('Tax-Assessed Value')","b6d14414":"ax = sns.kdeplot(x=tax0.iloc[:10000,:].SqFtTotLiving, y=tax0.iloc[:10000,:].TaxAssessedValue)\nax.set_xlabel('Finished Square Feet')\nax.set_ylabel('Tax-Assessed Value')","f4b7135d":"lc_loans = pd.read_csv('..\/input\/loan-csv\/data\/lc_loans.csv')\nlc_loans.head()","65a2170b":"lc_loans.shape","bf4bc323":"crosstab = lc_loans.pivot_table(index='grade', columns='status',\n                                aggfunc=lambda x: len(x), margins=True)","65de884f":"df = crosstab.loc['A':'G',:].copy()","8788634b":"df.loc[:,'Charged Off':'Late'] = df.loc[:,'Charged Off':'Late'].div(df['All'],axis=0)","7a7b15a6":"df['All'] = df['All'] \/ sum(df['All'])\nperc_crosstab = df","3680bad6":"df","2c6d941e":"airline_stat = pd.read_csv('..\/input\/loan-csv\/data\/airline_stats.csv')\nairline_stat.head()","2a00c2b6":"plt.figure(figsize=(10,10))\nsns.boxplot(y=airline_stat.pct_carrier_delay, x=airline_stat.airline)","79512653":"plt.figure(figsize=(10,10))\nax = sns.violinplot(x=airline_stat.airline, y=airline_stat.pct_carrier_delay,\n                    inner='quartile', color='white')\nax.set_xlabel('')\nax.set_ylabel('Daily % of Delayed Flights')","8461a558":"zip_codes = [98188, 98105, 98108, 98126]\nkc_tax_zip = tax0.loc[tax0.ZipCode.isin(zip_codes),:]\nkc_tax_zip\ndef hexbin(x, y, color, **kwargs):\n    \n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, gridsize=25, cmap=cmap, **kwargs)\nplt.figure(figsize=(10,10))\ng = sns.FacetGrid(kc_tax_zip, col='ZipCode', col_wrap=2, height=5)\ng.map(hexbin, 'SqFtTotLiving', 'TaxAssessedValue',\n      extent=[0, 3500, 0, 700000])\ng.set_axis_labels('Finished Square Feet', 'Tax-Assessed Value')\ng.set_titles('Zip code {col_name:.0f}')","e9e23372":"lc_loans.columns","9d0d2170":"loans_income = pd.read_csv('..\/input\/loan-csv\/data\/loans_income.csv')\nloans_income.head()","f1e3f1c6":"loans_income.sample(10)","854e65f0":"sample_data = pd.DataFrame(loans_income.sample(1000))\nsns.histplot(sample_data)","bcd6b09e":"sample_mean_05 = pd.DataFrame([loans_income.sample(5).mean() for _ in range(1000)])\nsns.histplot(sample_mean_05)","e6fc784a":"sample_mean_20 = pd.DataFrame([loans_income.sample(20).mean() for _ in range(1000)])\nsns.histplot(sample_mean_20)","d7d18456":"loans_income.isnull().sum()","46823aa2":"results = []\nfor nrepeat in range(1000):\n    sample = resample(loans_income)\n    results.append(sample.median())\n    results = pd.Series(results)\nprint('Bootstrap Statistics:')\nprint(f'original: {loans_income.median()}')\nprint(f'bias: {results.mean() - loans_income.median()}')\nprint(f'std. error: {np.std(results)}')","80e0e65b":"fig, ax = plt.subplots(figsize=(4, 4))\nnorm_sample = norm.rvs(size=100)\nprobplot(norm_sample, plot=ax)","a417570d":"'NFLX' in stocks.columns","b36a5a0e":"nflx = stocks.NFLX\nnflx = np.diff(np.log(nflx[nflx>0]))\nfig, ax = plt.subplots(figsize=(4, 4))\nprobplot(nflx, plot=ax)","de163522":"# Normal distribution\nA QQ-Plot is used to visually determine how close a sample is to a specified distribu\u2010\ntion\u2014in this case, the normal distribution. The QQ-Plot orders the z-scores from low\nto high and plots each value\u2019s z-score on the y-axis; the x-axis is the corresponding\nquantile of a normal distribution for that value\u2019s rank. Since the data is normalized,\nthe units correspond to the number of standard deviations away from the mean. If\nthe points roughly fall on the diagonal line, then the sample distribution can be con\u2010\nsidered close to normal.\n","e8e15d66":"# Correlation\n","db482cf2":"# Hexagonal plots\nFor data sets with hun\u2010\ndreds of thousands or millions of records, a scatterplot will be too dense, so we need a\ndifferent way to visualize the relationship.","3b7d6b2d":"As you see next, scatterplot does not communicated properly.","f8cf189d":"# Bar plots","4868509e":"Aim is to study wonderful book, which has repo\nhttps:\/\/github.com\/gedeck\/practical-statistics-for-data-scientists"}}