{"cell_type":{"38b53bee":"code","4a3871a7":"code","83abe182":"code","1f81ff70":"code","196aec4b":"code","5aa62c6c":"code","feb12cb2":"code","c9683520":"code","2a853fdb":"code","840afbbb":"code","e862e241":"code","d8a8304b":"code","58a9075e":"code","c1388199":"code","74186f0a":"code","a453e8f3":"markdown","fe2f63a4":"markdown","b6670558":"markdown","9364b510":"markdown","c9d76d7f":"markdown","34029702":"markdown","83bc3e27":"markdown","4a336feb":"markdown","f22da77c":"markdown","cacb9961":"markdown"},"source":{"38b53bee":"import numpy as np\nimport pandas as pd\n\nfrom sklearn import *\nimport nltk, datetime\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ntrain = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nsubmission = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_cats = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n\ntrain.head()\ntrain.shape","4a3871a7":"test.shape","83abe182":"# date sutununu, datetime formatina cevir.\n# daha sonra date sutunundan month alinacak.\ntrain['date'] = pd.to_datetime(train['date'], format = '%d.%m.%Y')\n# date time'den aylari al.\ntrain['month'] = train['date'].dt.month\n# date time'den yillari al.\ntrain['year'] = train['date'].dt.year\n\n# aylik tahmin yapilacagi icin, ilgili df'lere parse edildi. daha sonra bu sutun, drop edilir.\ntrain = train.drop(['date', 'item_price'], axis = 1)","1f81ff70":"# her bir item'a ait gunluk satislari gruplayarak ayl\u0131k satis sayilarini elde ediyoruz.\ntrain = train.groupby([column for column in train.columns if column not in ['item_cnt_day']], as_index=False)[['item_cnt_day']].sum()\n# gunluk satisi yapilan item sayaci, aya gore gruplandigindan sutun ismi degistirildi.\ntrain = train.rename(columns={'item_cnt_day' : 'item_count_monthly'})\n","196aec4b":"train.head(10)","5aa62c6c":"# itemlerin aylik satis adetlerine gore ortalamasinin alinmasi\nshop_item_ort = train[['shop_id', 'item_id', 'item_count_monthly']].groupby(['shop_id', 'item_id'], as_index=False)[['item_count_monthly']].mean()\n#aylik sat\u0131s sayaci sutunu, aylik ortalama satis adedi olacak sekilde degisir (sutun adi)\nshop_item_ort = shop_item_ort.rename(columns={'item_count_monthly' : 'item_count_monthly_mean'})","feb12cb2":"# Elde ettigimiz ortalama ozelligini (shop_item_ort), train verimize ekliyoruz.\ntrain = pd.merge(train, shop_item_ort, how='left', on=['shop_id', 'item_id'])","c9683520":"# goruldugu uzere, olusturdugumuz item_count_monthly_mean sutunu, train verimize eklendi.\ntrain.head(9)","2a853fdb":"# veri setindeki en son ay icerisinde satisi yapilan urunleri aliyoruz. shop_son_ay = shop_prev_month\n# 2013-2015 arasi satis bilgileri mevcuttur. 2013 ocak'ta date_block_num -> 0'd\u0131r. en son 2015 Ekim icin ilgili deger 33'tur.\nshop_son_ay = train[train['date_block_num'] == 33][['shop_id', 'item_id', 'item_count_monthly']]\nshop_son_ay = shop_son_ay.rename(columns={'item_count_monthly' : 'item_count_son_ay'})\nshop_son_ay.head()","840afbbb":"# elde edilen son ay satis adetlerini de train verimize ekliyoruz.\ntrain = pd.merge(train, shop_son_ay, how='left', on=['shop_id', 'item_id']).fillna(0.)\n# train verisine item ozelliklerini ekliyoruz.\ntrain = pd.merge(train, items, how='left', on='item_id')\n# train verisine item kategorilerini ekliyoruz.\ntrain = pd.merge(train, item_cats, how='left', on='item_category_id')\n# train verisine dukkanlari (shop) ekliyoruz.\ntrain = pd.merge(train, shops, how='left', on='shop_id')\n\n# random forest ile predict yapilacagindan, train verisine tum featureler eklenmektedir.\n# RF, tum bu featurelerden random secim yaparak egitimi gerceklestirecek\ntrain.head()","e862e241":"# Test verisinin ayarlanmasi\n# Uygulama icerisinde, 2015 Kas\u0131m'daki aylik satislari predict etmek istiyoruz.\n# 2015 kasim bilgilerini ekliyoruz.\n# train data'da 2015 ekimin date_block_number say\u0131s\u0131 33 oldugundan, 2015 kasim icin date_block_number'a 34 set ettik.\ntest['month'] = 11\ntest['year'] = 2015\ntest['date_block_num'] = 34\n# ayrica RF ile train ve prediction islemleri yapilacagindan\n# train verisine ekledigimiz tum ozellikleri test veri setine de ekleyecegiz (aylik ortalama satis, shop ve item bilgileri).\n\n# Elde edilen ortalama ozelligini (shop_item_ort), test verimize ekliyoruz.\ntest = pd.merge(test, shop_item_ort, how='left', on=['shop_id', 'item_id']).fillna(0.)\n# elde edilen son ay satis adetlerini de train verimize ekliyoruz.\ntest = pd.merge(test, shop_son_ay, how='left', on=['shop_id', 'item_id']).fillna(0.)\n# test verisine item ozelliklerini ekliyoruz.\ntest = pd.merge(test, items, how='left', on='item_id')\n# test verisine item kategorilerini ekliyoruz.\ntest = pd.merge(test, item_cats, how='left', on='item_category_id')\n# test verisine dukkanlari (shop) ekliyoruz.\ntest = pd.merge(test, shops, how='left', on='shop_id')\n# predict edilecek aylik satis sayisi sutunu degerlerini 0 olarak init. ediyoruz.\ntest['item_count_monthly'] = 0.\n\ntest.head()","d8a8304b":"# RF Modeli kurulmadan once label encoding islemi\nfor column in ['shop_name', 'item_name', 'item_category_name']:\n    label = preprocessing.LabelEncoder()\n    label.fit(list(train[column].unique()) + list(test[column].unique()))\n    train[column] = label.transform(train[column].astype(str))\n    test[column] = label.transform(test[column].astype(str))\n    print(column)","58a9075e":"# Random Forest Alg. (RF) ile train ve prediction islemleri\ncolumn = [col for col in train.columns if col not in ['item_count_monthly']]\nx1 = train[train['date_block_num'] < 33]\ny1 = np.log1p(x1['item_count_monthly'].clip(0., 30.))\nx1 = x1[column]\n\nx2 = train[train['date_block_num'] == 33]\ny2 = np.log1p(x2['item_count_monthly'].clip(0., 30.))\nx2 = x2[column]\n\n# RF bir ensemble modeldir. ensmble modeller, \u00e7oklu ogrenme algoritmalari kullanarak daha iyi prediction yapmayi amaclar.\n# \u00e7oklu ogrenme alg. kullanarak daha iyi bir model egitmeyi amaclamaktadir.\nrf_model = ensemble.ExtraTreesRegressor(n_estimators=25, n_jobs=-1, max_depth=25, random_state=18)\nrf_model.fit(x1, y1)\n\nprint('RMSE degeri: ', np.sqrt(metrics.mean_squared_error(y2.clip(0., 30.), rf_model.predict(x2).clip(0., 30.))))\n\n","c1388199":"print(test.columns.tolist())","74186f0a":"# modeli train verisi icin fit edelim ve comp.ta istenen predictionlari hesaplayalim.\nrf_model.fit(train[column], train['item_count_monthly'].clip(0., 30.))\n# test verisinde daha oncesinde 0 olarak init ettigimiz kas\u0131m 2015 aylik satislari icin prediction islemi yapiyoruz.\ntest['item_count_monthly'] = rf_model.predict(test[column]).clip(0., 30.)\ntest['item_count_monthly'] = np.expm1(test['item_count_monthly'])\n\n# predict edilen aylik satis adedini csv'ye yaziyoruz.\ntest[['ID', 'item_count_monthly']].to_csv('submission.csv', index=False)","a453e8f3":"### 2.1. Modelin train verisi i\u00e7in fit edilmesi ve tahmin i\u015fleminin tamamlanmas\u0131\n>RF modeli, veri setinin k\u0131rp\u0131lan bir b\u00f6l\u00fcm\u00fcnde geli\u015ftirilir.<br>\n>Prediction i\u015fleminden sonra submission.csv dosyas\u0131, ID ve item_count_monthly s\u00fctunlar\u0131 i\u00e7erecek \u015fekilde olu\u015fturulur.","fe2f63a4":"### 1.1. G\u00fcnl\u00fck sat\u0131\u015f verilerinin parse edilmesi\n> Train veri setinde 'date' s\u00fctunu bulunur. Burada sat\u0131\u015f g\u00fcn\u00fc bilgisi, d.m.yyyy format\u0131nda verilmi\u015ftir. <br>\n> Prediction i\u015flemi ayl\u0131k olarak yap\u0131lmas\u0131 beklendi\u011finden, ilgili s\u00fctun datetime format\u0131na \u00e7evrilerek i\u00e7erisinden ay ve y\u0131l bilgisi \u00e7\u0131kar\u0131lm\u0131\u015ft\u0131r.\n","b6670558":"### 1.5. Test verisinin ayarlanmas\u0131\n>Test verisinde \u00f6ncelikle 2015 Kas\u0131m i\u00e7in prediction yapmak istedi\u011fimiz i\u00e7in, test verisinde ay, y\u0131l ve ay\u0131 i\u015faret eden date_block_num de\u011fi\u015fkenlerini, kas\u0131m i\u00e7in ayarl\u0131yoruz.<br>\n>Train verisine yap\u0131lan t\u00fcm veri \u00f6n i\u015fleme a\u015famalar\u0131 test verisine de yap\u0131l\u0131r.<br>\n>\u0130lgili feature s\u00fctunlar\u0131, train verisine de eklenir.<br>\n>Son olarak test verisinde item_count_monthly s\u00fctunu, prediciton yap\u0131lacak s\u00fctundur. Burada s\u00fctunu init. etmek ad\u0131na t\u00fcm sat\u0131rlara 0 de\u011feri atan\u0131r.","9364b510":"## 1. Veri \u00d6n \u0130\u015fleme A\u015famalar\u0131, Sa\u011flanan CSV Dosyalar\u0131n\u0131n Okunmas\u0131","c9d76d7f":"* Veri seti i\u00e7erisinde bir \u015firketin Ocak 2013 - Ekim 2015 tarihleri aras\u0131nda ger\u00e7ekle\u015ftirdi\u011fi g\u00fcnl\u00fck \u00fcr\u00fcn sat\u0131\u015f\u0131 say\u0131s\u0131n\u0131 i\u00e7ermektedir.\n* \u0130lgili zaman serisindeki (time-series) sa\u011flanan \u00fcr\u00fcn, ma\u011faza, e\u015fya ve g\u00fcnl\u00fck sat\u0131\u015f bilgilerini kullanarak 2015 Kas\u0131m ay\u0131nda e\u015fyalar i\u00e7in **ayl\u0131k sat\u0131\u015f say\u0131s\u0131n\u0131n** tahmin edilmesi beklenmektedir.\n* Sat\u0131\u015f say\u0131s\u0131 bilgileri g\u00fcnl\u00fck olarak verilmi\u015ftir. Ayl\u0131k tahmin istendi\u011fi i\u00e7in ilgili train ve test veri seti i\u00e7erisinde birtak\u0131m veri \u00f6n i\u015fleme teknikleri icra edilmelidir.\n* Kas\u0131m 2015 i\u00e7in yap\u0131lan tahmin i\u015flemlerinin **ID** ve **item_count_monthly** ad\u0131nda iki s\u00fctundan olu\u015fan bir *submission.csv* dosyas\u0131 i\u00e7erisine kaydedilerek submit edilmesi istenmi\u015ftir.\n","34029702":"## 2. Random Forest Modelinin Kurulmas\u0131 ve RMSE Hesab\u0131\n>RF, bir ensemble modeldir. \u00c7oklu \u00f6\u011frenme algoritmalar\u0131n\u0131 kullanarak daha iyi bir prediction modeli olu\u015fturmay\u0131 ama\u00e7lamaktad\u0131r.<br>\n>RF a\u011fa\u00e7 yap\u0131s\u0131 i\u00e7in maksimum diyerar\u015fik derinlik 25 olarak ayarlanm\u0131\u015ft\u0131r.","83bc3e27":"### 1.4. Train verisine di\u011fer CSV'lerdeki t\u00fcm \u00f6zelliklerin eklenmesi\n> Daha \u00f6nce de bahsedildi\u011fi gibi, RF algoritmas\u0131nda feature selection i\u015flemi yap\u0131lmamaktad\u0131r.<br>\nA\u015fa\u011f\u0131da verilen kodlarda, 2015 Ekim ay\u0131ndaki her bir e\u015fya i\u00e7in sat\u0131\u015f adedi, itemleri tutan dataframe, item kategorileri ve ma\u011fazalar, k\u0131sacas\u0131 t\u00fcm featureler, train verisine eklenmektedir.<br>\nRF, t\u00fcm bu \u00f6zellikleri kullanarak bir model olu\u015fturacakt\u0131r.","4a336feb":"### 1.3. Train verisi i\u00e7in ekstra bir feature: Ayl\u0131k ortalama sat\u0131\u015f adedi\n>Uygulama i\u00e7erisinde prediction i\u015flemi i\u00e7in **Random Forest (RF) algoritmas\u0131** kullan\u0131lacakt\u0131r.<br>\nRF algoritmas\u0131nda Big Data dersinde kullan\u0131lan daha \u00f6nceki modellerden farkl\u0131 olarak, **feature selection i\u015flemi yap\u0131lmaz.**<br>\nRF algoritmas\u0131na t\u00fcm s\u00fctunlar verilir. RF, bu feature s\u00fctunlar\u0131ndan rastgele feature se\u00e7imi yapar.<br>\nBu hususta prediction kalitesini art\u0131rmak amac\u0131yla, her bir e\u015fya i\u00e7in bulunan ayl\u0131k ortalama sat\u0131\u015f adedi s\u00fctununun ortalamas\u0131n\u0131 alarak **item_count_monthly_mean** ad\u0131nda bir feature s\u00fctunu olu\u015fturuyoruz.","f22da77c":"# BLM442 B\u00fcy\u00fck Veri Final Projesi K\u0131s\u0131m 2\n* 170201088 - M. M. Enes YURTSEVER\n","cacb9961":"### 1.2. G\u00fcnl\u00fck sat\u0131\u015f adetlerinin gruplanarak ayl\u0131k sat\u0131\u015f adetlerinin elde edilmesi\n> Burada da train verisini, her bir e\u015fya i\u00e7in g\u00fcnl\u00fck sat\u0131\u015f adetlerini toplayarak ayl\u0131k olarak grupland\u0131r\u0131yoruz.<br>\nVeri setinde halihaz\u0131rda item_cnt_day olarak isimlendirilmi\u015f g\u00fcnl\u00fck sat\u0131\u015f adetleri, her bir e\u015fya i\u00e7in ayl\u0131k sat\u0131\u015f adedini belirten grupland\u0131rma neticesinde item_count_monthly olarak de\u011fi\u015ftirilmi\u015ftir."}}