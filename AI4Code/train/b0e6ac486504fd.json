{"cell_type":{"f9aff4cd":"code","f9e22a92":"code","050fa612":"code","0aef474b":"code","3c13a426":"code","8900c15f":"code","d686b9f3":"code","e5f38be1":"code","b32a47a3":"code","42605710":"code","30cd1bd3":"code","365b0d71":"code","aa518a41":"code","9cf1433f":"code","291c15d3":"code","bf1cebcb":"code","55f29e50":"code","eea2ca1b":"code","10d6d264":"code","abec7c23":"code","a8c1cb37":"code","0a3c6a18":"code","374938a3":"code","1d029869":"code","cc588d3c":"code","e5bc0906":"code","c17986ab":"code","738dc175":"code","e4ade684":"code","9c0f6775":"code","d18626a0":"code","a4074387":"code","ce909761":"code","0a122472":"code","0008461c":"code","0b48f5cf":"code","45bc45f6":"code","c582e54a":"code","86eb77ae":"code","c37272cf":"code","8faeb082":"code","8e56a64d":"code","648883c8":"markdown","cd54dbf9":"markdown","6bc9503d":"markdown","4f17de5f":"markdown","72f08689":"markdown","84edb4bf":"markdown","f4d65236":"markdown","f755356f":"markdown","5b51e9e3":"markdown"},"source":{"f9aff4cd":"import pandas as pd\nfrom pandas import Series,DataFrame\nimport numpy as np","f9e22a92":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')","050fa612":"import pandas_datareader as pdr\nfrom pandas_datareader import DataReader","0aef474b":"from datetime import datetime ","3c13a426":"life_sci_list = ['TMO','ABT','GRMN','DHR','MDT']","8900c15f":"end = datetime.now()\n\nstart = datetime(end.year-2,end.month, end.day)","d686b9f3":"for stock in life_sci_list:\n    globals()[stock] = DataReader(stock,'yahoo', start, end)","e5f38be1":"TMO.head(10)","b32a47a3":"TMO.tail(10)","42605710":"TMO.describe()","30cd1bd3":"TMO['Adj Close'].plot(legend=True,figsize=(10,4),title='Thermo Fisher Stock`s Adjustment Close last 2 years')","365b0d71":"TMO['Volume'].plot(legend=True,figsize=(10,4),title='Thermo Fisher Stock`s Volume last 2 years')","aa518a41":"## Moving Average - MA\n\nma_days = [10,50,100]\n\nfor ma in ma_days:\n    column_name = 'MA for %s days' %(str(ma))\n    TMO[column_name]= TMO['Adj Close'].rolling(ma).mean()","9cf1433f":"#TMO.drop(['columns_name','column_name'],axis=1)","291c15d3":"TMO[['Adj Close', 'MA for 10 days','MA for 50 days', 'MA for 100 days']].plot(subplots=False, legend=True, title= 'Thermo Fisher Moving Average', figsize=(10,4))","bf1cebcb":"TMO[\"Daily Return\"] = TMO[\"Adj Close\"].pct_change()\n\nTMO[\"Daily Return\"].plot(figsize=(18,4),legend=True,linestyle='--', marker='o')","55f29e50":"sns.distplot(TMO[\"Daily Return\"].dropna(), bins=100, color='purple')","eea2ca1b":"## Comparing every stock \n\nclosing_df = DataReader(life_sci_list,'yahoo',start,end)[\"Adj Close\"]","10d6d264":"closing_df","abec7c23":"## Making a new Dataframe which returns the daily return of the stocks\n\nlife_rets = closing_df.pct_change()","a8c1cb37":"life_rets.plot(subplots=False,legend=True, title= \"Life Science Companies Daily Return Comparison\",figsize=(20,4))","0a3c6a18":"import scipy.stats as stat","374938a3":"## Comparing TMO with ABT\n\nsns.jointplot(data =life_rets, x='TMO',y=\"ABT\", kind='scatter', color = 'teal')","1d029869":"## Comparing every company in our example with each other\n\nsns.pairplot(life_rets.dropna())","cc588d3c":"# Same as above but different visualization\n\nreturns_fig = sns.PairGrid(life_rets.dropna())\n\nreturns_fig.map_upper(plt.scatter,color='teal')\n\nreturns_fig.map_lower(sns.kdeplot, cmap='cool_d')\n\nreturns_fig.map_diag(plt.hist, bins=20)","e5bc0906":"life_closing = sns.PairGrid(closing_df)\n\nlife_closing.map_upper(plt.scatter, color= 'seagreen')\n\nlife_closing.map_lower(sns.kdeplot,cmap='PuBuGn_r')\n\nlife_closing.map_diag(plt.hist, bins =50)","c17986ab":"# quick correlation plot for the daily returns\n\nsns.heatmap(data=life_rets.corr(),annot=True)","738dc175":"sns.heatmap(data=closing_df.dropna().corr(), annot=True)","e4ade684":"rets = life_rets.dropna()\n\narea = np.pi*10\n\nplt.scatter(rets.mean(),rets.std(), alpha=0.5, s=area)\n\nplt.xlim([-0.01,0.02])\nplt.ylim([-0.0002,0.05])\nplt.xlabel('Expected Returns')\nplt.ylabel('Risk')\n\nfor label,x,y in zip(rets.columns, rets.mean(), rets.std()):\n    plt.annotate(\n        label,\n        xy=(x,y), xytext = (100,100),\n        textcoords='offset points', ha= 'right', va='bottom',\n        arrowprops = dict(arrowstyle='-', connectionstyle='arc3,rad=-0.2',color='black'))","9c0f6775":"sns. distplot(TMO[\"Daily Return\"].dropna(), bins=100, color='purple')","d18626a0":"rets[\"TMO\"].quantile(0.05)","a4074387":"rets['ABT'].quantile(0.05)","ce909761":"rets['GRMN'].quantile(0.05)","0a122472":"rets['DHR'].quantile(0.05)","0008461c":"rets['MDT'].quantile(0.05)","0b48f5cf":"# Set up out time horizon\n\ndays = 365*2\n\n# Delta\ndt = 1\/days\n\n# Drift (average daily return multipled by the change of the time)\nmu= rets.mean()['TMO']\n\n# Shock (for each time period the stock will \"drift\" and then experience a \"shock\" which will randomly push the stock price up or down.)\nsigma = rets.std()['TMO']","45bc45f6":"def stock_monte_carlo(start_price,days,mu,sigma):\n    price = np.zeros(days)\n    price[0] = start_price\n    \n    shock = np.zeros(days)\n    drift = np.zeros(days)\n    \n    for x in range(1,days):\n        ## choosing epsilon value with random, epsilon can change from case to case\n        shock[x] = np.random.normal(loc=mu*dt,scale=sigma*np.sqrt(dt))\n        \n        drift[x] = mu*dt\n        \n        price[x] = price[x-1] + (price[x-1]* (drift[x] + shock[x]))\n        \n    return price","c582e54a":"## Get start price from TMO\nstart_price = TMO['Open'][0]","86eb77ae":"start_price","c37272cf":"for run in range(100):\n    plt.plot(stock_monte_carlo(start_price,days,mu,sigma))\n\nplt.xlabel('Days')\nplt.ylabel('Price')\nplt.title('Monte Carlo Anlaysis for Thermo Fisher')","8faeb082":"# Set a large numebr of runs\nruns = 10000\n\n# Create an empty matrix to hold the end price data\nsimulations = np.zeros(runs)\n\n# Set the print options of numpy to only display 0-5 points from an array to suppress output\nnp.set_printoptions(threshold=5)\n\nfor run in range(runs):    \n    # Set the simulation data point as the last stock price for that run\n    simulations[run] = stock_monte_carlo(start_price,days,mu,sigma)[days-1];","8e56a64d":"# Now we'lll define q as the 1% empirical qunatile, this basically means that 99% of the values should fall between here\nq = np.percentile(simulations, 1)\n    \n# Now let's plot the distribution of the end prices\nplt.hist(simulations,bins=200)\n\n# Using plt.figtext to fill in some additional information onto the plot\n\n# Starting Price\nplt.figtext(0.6, 0.8, s=\"Start price: $%.2f\" %start_price)\n# Mean ending price\nplt.figtext(0.6, 0.7, \"Mean final price: $%.2f\" % simulations.mean())\n\n# Variance of the price (within 99% confidence interval)\nplt.figtext(0.6, 0.6, \"VaR(0.99): $%.2f\" % (start_price - q,))\n\n# Display 1% quantile\nplt.figtext(0.15, 0.6, \"q(0.99): $%.2f\" % q)\n\n# Plot a line at the 1% quantile result\nplt.axvline(x=q, linewidth=4, color='r')\n\n# Title\nplt.title(u\"Final price distribution for Thermo Fisher Stock after %s days\" % days, weight='bold');","648883c8":"The 0.05 empirical quantile of daily returns is at -0.03. That means that with 95% confidence, our worst daily loss will not exceed 3%. If we have a 1 million dollar investment, our one-day 5% VaR is 0.03 * 1,000,000 = $30,000.","cd54dbf9":"Using the Monte Carlo to run many trials with random market conditions, then we'll calculate portfolio losses for each trial. After this, we'll use the aggregation of all these simulations to establish how risky the stock is.\n\n\nWhere S is the stock price, mu is the expected return (which we calculated earlier),sigma is the standard deviation of the returns, t is time, and epsilon is the random variable.\n\nWe can mulitply both sides by the stock price (S) to rearrange the formula and solve for the stock price.\n\n$$ \\Delta S = S(\\mu\\Delta t + \\sigma \\epsilon \\sqrt{\\Delta t}) $$","6bc9503d":"TMO - Thermo Fisher Scientific\n\nABT - Abbott Laboratories\n\nGRMN - Garmin LTD\n\nDHR - Danaher Corp\n\nMDT - Medtronic Plc","4f17de5f":"#### Daily Return Analysis","72f08689":"#### Basic Analysis for Stock Information","84edb4bf":"#### Risk Analysis","f4d65236":"we have looked at the 1% empirical quantile of the final price distribution to estimate the Value at Risk for  the Thermo Fisher stock, which looks to be $12.30 for every investment of $266.87 (the price of one initial thermo fisher stock).\n\nThis basically means for every initial stock you purchase your putting about  $12.3 at risk 99% of the time from our Monte Carlo Simulation.","f755356f":"#### Value at Risk - Bootstrap Method","5b51e9e3":"#### Value at Risk - Monte Carlo Method"}}