{"cell_type":{"c2d6bf79":"code","e4ed1f58":"code","55f4f006":"code","610583a8":"code","888b894b":"code","651900ba":"code","23b82cc3":"code","2f5fe7d4":"code","dffeac75":"code","113b4e2d":"code","3a7c5ab9":"code","80283d1d":"code","886997a8":"code","4261167c":"markdown","c9620343":"markdown","02936d00":"markdown","a5c11893":"markdown","b8130a21":"markdown","7ce9334d":"markdown","bd95661e":"markdown","6790aaef":"markdown","4a829af9":"markdown"},"source":{"c2d6bf79":"import numpy as np\nimport pandas as pd","e4ed1f58":"train = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/train.csv\")\ntest = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/test.csv\")\nsample_submission = pd.read_csv(\"..\/input\/petfinder-pawpularity-score\/sample_submission.csv\")","55f4f006":"train.head()","610583a8":"train[\"file_path\"] = train[\"Id\"].apply(lambda identifier: \"..\/input\/petfinder-pawpularity-score\/train\/\" + identifier + \".jpg\")\ntest[\"file_path\"] = test[\"Id\"].apply(lambda identifier: \"..\/input\/petfinder-pawpularity-score\/test\/\" + identifier + \".jpg\")","888b894b":"train.head()","651900ba":"def submit(model, name):\n    sample_submission[\"Pawpularity\"] =  model.predict(test[tabular_columns + statistic_columns])\n    sample_submission.to_csv(name, index=False)","23b82cc3":"tabular_columns = ['Subject Focus', 'Eyes', 'Face', 'Near', 'Action', 'Accessory', 'Group', 'Collage', 'Human', 'Occlusion', 'Info', 'Blur']","2f5fe7d4":"train.corr()[\"Pawpularity\"]","dffeac75":"for data in [train, test]:\n    data[\"row_mean\"] = data[tabular_columns].mean(axis=1)\n    data[\"row_std\"] = data[tabular_columns].std(axis=1)\n    data[\"row_num_ones\"] = data[tabular_columns].sum(axis=1)\n    data[\"row_num_zeros\"] = data[\"row_num_ones\"].apply(lambda item: len(tabular_columns) - item)","113b4e2d":"train.head()","3a7c5ab9":"statistic_columns = [\"row_mean\", \"row_std\", \"row_num_ones\", \"row_num_zeros\"]","80283d1d":"import sklearn\nimport catboost\nfrom sklearn.model_selection import KFold\nkfold = KFold(n_splits=10)\nmodels = []\nindex = 0\nfor trian_indices, val_indices in kfold.split(train):\n    X_train = train.loc[trian_indices, tabular_columns + statistic_columns]\n    y_train = train.loc[trian_indices, \"Pawpularity\"]\n    X_val = train.loc[val_indices, tabular_columns + statistic_columns]\n    y_val = train.loc[val_indices, \"Pawpularity\"]\n    print(len(trian_indices), len(val_indices))\n    cat = catboost.CatBoostRegressor(\n        iterations = 10000, \n        learning_rate = 0.03,\n        depth = 5,\n        verbose=500,\n        early_stopping_rounds=1000,\n        eval_metric=\"RMSE\"\n    )\n    cat.fit(X_train, y_train, eval_set=(X_val, y_val), verbose=100)\n    submit(cat, \"submission_fold_%d.csv\"%(index+1))\n    models.append(cat)","886997a8":"sample_submission[\"Pawpularity\"] =  np.mean([model.predict(test[tabular_columns + statistic_columns]) for model in models], axis=0)\nsample_submission.to_csv(\"submission.csv\", index=False)","4261167c":"## Model Development","c9620343":"## Import datasets","02936d00":"## Todos\n- Develop Image Regression Model\n- Combine results of Image Regression Model and Tabular Prediction Model","a5c11893":"# PetFinder Pawpularity Prediction\n## Table of Contents\n- Set up\n- Import datasets\n- Data Preprocessing\n- Model Development\n    - Tabular Regression Model\n- Model Evaluation\n- Submission\n- Todos\n\n## Set up","b8130a21":"## Data Preprocessing","7ce9334d":"I will add file_path feature for future use.","bd95661e":"## Submission","6790aaef":"## Tabular Regression Model","4a829af9":"## Submit function"}}