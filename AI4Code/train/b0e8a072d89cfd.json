{"cell_type":{"980c2e52":"code","9019f991":"code","d91417f7":"code","f6f18eb7":"code","69237373":"code","646ea78b":"code","c6c76494":"code","4994f29b":"code","33695782":"code","b7835b31":"code","3ca42e7f":"code","589b89f7":"code","e5ddca49":"code","df4a27ec":"code","8bcc451a":"code","10043eea":"code","88da4c98":"code","d8e98629":"code","1749675a":"code","7e164744":"code","1312e1c4":"markdown","6c05f956":"markdown","5f9a4ebf":"markdown","fd55d6d7":"markdown","8dc6c70b":"markdown","c07f55f4":"markdown","fd106f57":"markdown","5b56ec98":"markdown","ca8752cb":"markdown","c76d7160":"markdown","6a942785":"markdown","352fecdb":"markdown","deee0aa2":"markdown","bf20809c":"markdown","0dff84fb":"markdown","983bb420":"markdown","77075089":"markdown","14df7307":"markdown"},"source":{"980c2e52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9019f991":"player_df = pd.read_csv(\"\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv\")\nplayer_df.info()","d91417f7":"player_df.head()","f6f18eb7":"player_df.sample(3).T","69237373":"features = np.array(player_df.columns)\nprint(features)","646ea78b":"player_df.drop(['sofifa_id','player_url'], axis=1, inplace=True)\nplayer_df.head()","c6c76494":"features = np.array(player_df.columns)\nnan_quantity = player_df.isnull().sum()\nnan_check = nan_quantity>0\nnan_features = np.array([[features[i],nan_quantity[i]] for i in range(len(features)) if nan_check[i]])\nnan_features_df = pd.DataFrame(nan_features, columns=['column','sum'])\nnan_features_df['sum'] = pd.to_numeric(nan_features_df['sum'], errors='raise', downcast=None)\nnan_features_df.sample(8)","4994f29b":"nan_check_5k = nan_quantity>=5000\nnan_features_5k = np.array([[features[i],nan_quantity[i]] for i in range(len(features)) if nan_check_5k[i]])\nnan_features_df_5k = pd.DataFrame(nan_features_5k, columns=['column','sum'])\nnan_features_df_5k['sum'] = pd.to_numeric(nan_features_df_5k['sum'], errors='raise', downcast=None)\n\nnan_check_1k = (nan_quantity>1000) & (nan_quantity<5000)\nnan_features_1k = np.array([[features[i],nan_quantity[i]] for i in range(len(features)) if nan_check_1k[i]])\nnan_features_df_1k = pd.DataFrame(nan_features_1k, columns=['column','sum'])\nnan_features_df_1k['sum'] = pd.to_numeric(nan_features_df_1k['sum'], errors='raise', downcast=None)\n\nnan_check_s = (nan_quantity<=1000) & (nan_quantity>0)\nnan_features_s = np.array([[features[i],nan_quantity[i]] for i in range(len(features)) if nan_check_s[i]])\nnan_features_df_s = pd.DataFrame(nan_features_s, columns=['column','sum'])\nnan_features_df_s['sum'] = pd.to_numeric(nan_features_df_s['sum'], errors='raise', downcast=None)","33695782":"plt.figure(figsize=(12,8))\nax = sns.barplot(x=\"column\", y=\"sum\", data=nan_features_df_s).set_title(\"NaN Values lesser than 1k (and greater than 0)\")\nplt.figure(figsize=(40,8))\nax = sns.barplot(x=\"column\", y=\"sum\", data=nan_features_df_1k).set_title(\"NaN Values greater than 1k and lesser than 5k\")\nplt.figure(figsize=(20,8))\nax = sns.barplot(x=\"column\", y=\"sum\", data=nan_features_df_5k).set_title(\"NaN Values greater than 5k\")","b7835b31":"no_nan_check = nan_quantity==0\nno_nan_features = np.array([[features[i]] for i in range(len(features)) if no_nan_check[i]])\nno_nan_features_df = pd.DataFrame(no_nan_features, columns=['columns'])\nno_nan_features_df","3ca42e7f":"fig, axes = plt.subplots(1, 3, figsize=(15, 5), sharey=True)\nsns.histplot(player_df,ax=axes[0], x=\"height_cm\")\nsns.histplot(player_df,ax=axes[1], x=\"weight_kg\")\nsns.histplot(player_df,ax=axes[2], x=\"age\")","589b89f7":"plt.figure(figsize=(10, 10))\nsns.scatterplot(data=player_df, x=\"age\", y=\"wage_eur\").set_title(\"Wage vs age\")","e5ddca49":"sns.countplot(x='preferred_foot',data=player_df)","df4a27ec":"import plotly.graph_objs as go \nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)","8bcc451a":"nations = player_df[\"nationality\"].value_counts().reset_index()\nnations.columns = ['nationality','num_of_players']\nnations['nationality'] = nations['nationality'].replace(['England'],'United Kingdom')\nnations = nations.sort_values(by=\"num_of_players\",ascending=False)\nnations.head()","10043eea":"data = dict(\n        type = 'choropleth',\n        colorscale = 'thermal',\n        locations = nations['nationality'],\n        locationmode = \"country names\",\n        z = nations['num_of_players'],\n        text = nations['nationality'],\n        colorbar = {'title' : 'Number of players'})","88da4c98":"layout = dict(title = 'Nationality Distribution',\n              geo = dict(projection = {'type':'mercator'}))","d8e98629":"choromap = go.Figure(data = [data],layout = layout)\niplot(choromap,validate=False)","1749675a":"fig, axes = plt.subplots(1, 2, figsize=(15, 8), sharey=False)\nsns.countplot(x='international_reputation',ax=axes[0],data=player_df).set(yscale=\"linear\")\naxes[0].set_title(\"Linear\")\nsns.countplot(x='international_reputation',ax=axes[1],data=player_df).set(yscale=\"log\")\naxes[1].set_title(\"Logrithmic\")","7e164744":"player_df['month_of_birth'] = pd.to_datetime(player_df['dob']).dt.month\nsns.countplot(x='month_of_birth', data= player_df)","1312e1c4":"Consider upvoting :)","6c05f956":"Most of the players are the UK.","5f9a4ebf":"# Country of Origin","fd55d6d7":"We can see that most of the players are around 180cm tall, 75kgs heavy and 23 years old.","8dc6c70b":"# Height, Weight and Age Trends","c07f55f4":"# International Reputation","fd106f57":"# Discarding useless columns","5b56ec98":"# Setting up the environment","ca8752cb":"Most of the players prefer right foot.","c76d7160":"1. Most of the players were born in February.\n2. Most of the players are born in the starting of the year.","6a942785":"# Importing the data","352fecdb":"# Exploring the NaN values","deee0aa2":"As some of the columns like, 'player_tags', 'loaned_from', etc have a lot of NaN values, it will be wise to drop those columns.","bf20809c":"# Age vs Wage","0dff84fb":"# Preferred Foot","983bb420":"The number of players at each reputation level differ almost by the factor of 10.","77075089":"# Month of Birth","14df7307":"Players are paid the highest between the age of 24 and 34."}}