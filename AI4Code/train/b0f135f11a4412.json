{"cell_type":{"ecc1c50f":"code","24ee5cce":"code","c1b6cb1d":"code","3f28e2a9":"code","c2eca95d":"code","04536179":"code","20071d32":"code","0c2311ba":"code","427b6c8c":"code","fa9a0b24":"code","68856f5c":"code","6ad8fc96":"code","153c3993":"code","7ec83157":"code","b5d7a2d6":"code","571103f7":"code","9c742975":"code","2ba41120":"code","a87d2053":"code","43c5a71a":"code","43ce4e93":"code","b6e389cc":"code","1cf00041":"markdown","380a8362":"markdown","28ee72d3":"markdown","f2171bf2":"markdown","bdaaabe4":"markdown","72daf07e":"markdown","2ec777a0":"markdown","a7849887":"markdown","bc428663":"markdown","8f98cb41":"markdown"},"source":{"ecc1c50f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","24ee5cce":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","c1b6cb1d":"data = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")","3f28e2a9":"data.head()","c2eca95d":"data.columns","04536179":"data.corr()","20071d32":"data.shape","0c2311ba":"#Using Pearson Correlation\nplt.figure(figsize=(25,25))\ncor = data.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show()","427b6c8c":"X = data.drop(\"Overall\",1)   #Feature Matrix\ny = data[\"Overall\"]          #Target Variable","fa9a0b24":"cor_target = abs(cor[\"Overall\"])","68856f5c":"relevant_features = cor_target[cor_target>0.2]","6ad8fc96":"relevant_features","153c3993":"X = data[['Potential', 'Special', 'ShortPassing', 'Reactions', 'Composure', 'Unnamed: 0', 'International Reputation', 'Vision', 'Age', 'LongPassing', 'Skill Moves', 'Curve', 'BallControl', 'ShotPower', 'LongShots', 'Crossing', 'Finishing', 'HeadingAccuracy', 'Volleys', 'Dribbling', 'FKAccuracy', 'Stamina', 'Strength', 'Aggression', 'Interceptions', 'Positioning', 'Penalties', 'Jumping', 'Marking', 'StandingTackle', 'Weak Foot', 'SprintSpeed', 'Agility', 'SlidingTackle']]","7ec83157":"X.isnull().sum()","b5d7a2d6":"X['ShortPassing'].unique","571103f7":"X['Reactions'].unique","9c742975":"X['ShortPassing'].fillna((X['ShortPassing'].median()), inplace=True)\nX['Reactions'].fillna((X['Reactions'].median()), inplace=True)\nX['Composure'].fillna((X['Composure'].median()), inplace=True)\nX['International Reputation'].fillna((X['International Reputation'].median()), inplace=True)\nX['Vision'].fillna((X['Vision'].median()), inplace=True)\nX['Age'].fillna((X['Age'].median()), inplace=True)\nX['LongPassing'].fillna((X['LongPassing'].median()), inplace=True)\nX['Skill Moves'].fillna((X['Skill Moves'].median()), inplace=True)\nX['Curve'].fillna((X['Curve'].median()), inplace=True)\nX['BallControl'].fillna((X['BallControl'].median()), inplace=True)\nX['ShotPower'].fillna((X['ShotPower'].median()), inplace=True)\nX['LongShots'].fillna((X['LongShots'].median()), inplace=True)\nX['Crossing'].fillna((X['Crossing'].median()), inplace=True)\nX['Dribbling'].fillna((X['Dribbling'].median()), inplace=True)\nX['Finishing'].fillna((X['Finishing'].median()), inplace=True)\nX['Positioning'].fillna((X['Positioning'].median()), inplace=True)\nX['Interceptions'].fillna((X['Interceptions'].median()), inplace=True)\nX['FKAccuracy'].fillna((X['FKAccuracy'].median()), inplace=True)\nX['Strength'].fillna((X['Strength'].median()), inplace=True)\nX['Aggression'].fillna((X['Aggression'].median()), inplace=True)\nX['Stamina'].fillna((X['Stamina'].median()), inplace=True)\nX['HeadingAccuracy'].fillna((X['HeadingAccuracy'].median()), inplace=True)\nX['Volleys'].fillna((X['Volleys'].median()), inplace=True)\nX['Penalties'].fillna((X['Penalties'].median()), inplace=True)\nX['Jumping'].fillna((X['Jumping'].median()), inplace=True)\nX['StandingTackle'].fillna((X['StandingTackle'].median()), inplace=True)\nX['SprintSpeed'].fillna((X['SprintSpeed'].median()), inplace=True)\nX['Marking'].fillna((X['Marking'].median()), inplace=True)\nX['Weak Foot'].fillna((X['Weak Foot'].median()), inplace=True)\nX['Agility'].fillna((X['Agility'].median()), inplace=True)\nX['SlidingTackle'].fillna((X['SlidingTackle'].median()), inplace=True)","2ba41120":"X.shape","a87d2053":"from sklearn import datasets, linear_model, metrics\n# splitting X and y into training and testing sets \nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1) ","43c5a71a":"reg = linear_model.LinearRegression() \nreg.fit(X_train, y_train) ","43ce4e93":"y_pred = reg.predict(X_test)","b6e389cc":"print(\"MAE : \" + str(metrics.mean_absolute_error(y_test, y_pred)))\nprint(\"MSE : \", str(metrics.mean_squared_error(y_test, y_pred)))\nprint(\"Final rmse value is =\", str(np.sqrt(np.mean((y_test-y_pred)**2))))","1cf00041":"> **Detect the missing values**","380a8362":"**OVERALL RATING PREDICTION**\n> *FIFA DATASET*","28ee72d3":"> **Split the data in to features and target. Here the target is the Overall rating.**","f2171bf2":"> **Replace the missing values with the median of values in that column**","bdaaabe4":"> **FIFA DATA **","72daf07e":"> **Model Evaluation**","2ec777a0":"> **Understand the correlation of each column with the overall rating**","a7849887":"> **Most correlated features with Overall rating**","bc428663":"> **Split the features and labels in to train and test data**","8f98cb41":"> **Linear Regression is used here for modelling**"}}