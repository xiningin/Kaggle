{"cell_type":{"c1fc5653":"code","98451e1f":"code","d6dddb7d":"code","faae2191":"code","c691325f":"code","ef72fd8b":"code","faf9f79d":"code","8d67f28c":"code","fd4e7d27":"code","d91f990a":"code","734fe9a2":"code","69ec4469":"code","4da6ae1b":"code","051fbbe3":"code","546bf722":"code","13322bd9":"code","5266e89b":"code","fe854fb5":"code","594f2aba":"code","c3ef54e3":"code","d86bf0d7":"code","4907917f":"code","a813f2e3":"code","b879f2d8":"code","02a0ebca":"code","fed91155":"code","f1315261":"code","5a2d5320":"code","f8f02d4b":"code","d295fc7b":"code","e38adcb5":"code","38dc9975":"code","30c8969a":"code","a7bdadcc":"code","bf9be189":"code","aa3c3a7b":"code","2b9b12c5":"code","921363d4":"code","89a296d8":"code","8f8fd85c":"code","9603bf34":"code","53743878":"code","824e0e01":"code","a267d4a3":"code","8443d103":"code","2514eed1":"code","6be598fc":"code","a659a551":"code","8977a539":"code","143e4fcf":"code","66713c9d":"code","bebdd943":"code","65ce28cc":"code","f4819bd6":"markdown","660456d2":"markdown","bc2c6ac6":"markdown"},"source":{"c1fc5653":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","98451e1f":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.io as pio\npio.templates.default=\"plotly_dark\"\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nfrom plotly.offline import init_notebook_mode,iplot\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\nimport warnings\nwarnings.filterwarnings('ignore')","d6dddb7d":"testinglab=pd.read_csv('\/kaggle\/input\/covid19-in-india\/ICMRTestingLabs.csv',encoding='utf-8')\ntestinglab.head()","faae2191":"India_coor=pd.read_csv('\/kaggle\/input\/indian-coordinates\/Indian Coordinates.csv')\nIndia_coor.head()","c691325f":"testinglab.type.unique()","ef72fd8b":"testinglab['type'].count()","faf9f79d":"testinglab.info()","8d67f28c":"sns.countplot(x=testinglab['type'],data=testinglab)","fd4e7d27":"dbd_India=pd.read_excel('\/kaggle\/input\/per-day-cases\/per_day_cases.xlsx',sheet_name='India')\ndbd_India.head()\ndbd_Italy=pd.read_excel('\/kaggle\/input\/per-day-cases\/per_day_cases.xlsx',sheet_name='Italy')\ndbd_Italy.head()\ndbd_Korea=pd.read_excel('\/kaggle\/input\/per-day-cases\/per_day_cases.xlsx',sheet_name='Korea')\n\ndbd_Korea.head()","d91f990a":"India_coor.rename(columns={\n    'Name of State \/ UT':'state',\n    'Latitude':'lat',\n    'Longitude':'long'\n},inplace=True)","734fe9a2":"testinglab_full=pd.merge(testinglab,India_coor,on='state')\ntestinglab_full","69ec4469":"train=pd.read_csv('\/kaggle\/input\/covid19-in-india\/AgeGroupDetails.csv')\ntrain.head()","4da6ae1b":"train.info()","051fbbe3":"x=train.groupby('AgeGroup')['TotalCases'].sum().sort_values(ascending=False).to_frame()\nx.style.background_gradient(cmap='Blues')","546bf722":"fig=px.bar(train[['AgeGroup','TotalCases']].sort_values('TotalCases',ascending=False),y='TotalCases',x='AgeGroup',color='TotalCases',log_y=False,template='ggplot2',title='AgeGroup vs total cases')\nfig.show()","13322bd9":"import seaborn as sns\nf, ax = plt.subplots(figsize=(100, 30))\nax=sns.scatterplot(x=\"AgeGroup\", y=\"Percentage\", data=train,\n             color=\"blue\")\nplt.plot(train.AgeGroup,train.Percentage,zorder=1)\nplt.xticks(fontsize=50)\nplt.yticks(fontsize=50)\nplt.title('Screening in train',fontsize=70)\nplt.show()\n","5266e89b":"plt.figure(figsize=(100,30))\nplt.bar(train.AgeGroup, train.Percentage,label=\"Train\")\nplt.xlabel('AgeGroup')\nplt.ylabel(\"Percentage\")\nplt.xticks(fontsize=50)\nplt.yticks(fontsize=50)\nplt.title('Screening in train',fontsize=70)\nplt.legend(frameon=True, fontsize=12)\nplt.show()","fe854fb5":"plt.figure(figsize=(15,15))\nplt.title('AgeGroup details by percentage',fontsize=20)\nplt.pie(train['TotalCases'],autopct='%1.1f%%')\nplt.legend(train['TotalCases'],loc='best')\nplt.show()","594f2aba":"f, ax = plt.subplots(figsize=(100, 30))\nax=sns.scatterplot(x=\"AgeGroup\", y=\"TotalCases\", data=train,\n             color=\"blue\")\nplt.plot(train.AgeGroup,train.TotalCases,zorder=1)\nplt.xticks(fontsize=50)\nplt.yticks(fontsize=50)\nplt.title('Screening in train',fontsize=70)\nplt.show()\n","c3ef54e3":"plt.figure(figsize=(100,30))\nplt.bar(train.AgeGroup, train.TotalCases,label=\"Train\")\nplt.xlabel('AgeGroup')\nplt.ylabel(\"TotalCases\")\nplt.xticks(fontsize=50)\nplt.yticks(fontsize=50)\nplt.title('Screening in train',fontsize=70)\nplt.legend(frameon=True, fontsize=12)\nplt.show()","d86bf0d7":"data=pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv',parse_dates=['Date'])\ndata.head()","4907917f":"data.tail(10)","a813f2e3":"data.info()","b879f2d8":"print(f\"Earliest Entry:{data['Date'].min()}\")\nprint(f\"Last Entry:{data['Date'].max()}\")\nprint(f\"Total Days: {data['Date'].max()-data['Date'].min()}\")","02a0ebca":"data.rename(columns={'Date':'date',\n                    'Sno':'sno',\n                     'State\/UnionTerritory':'state',\n                     'ConfirmedIndianNational':'CIN',\n                     'ConfirmedForeignNational':'CFN',\n                     'Cured':'cured',\n                     'Deaths':'deaths'\n                    },inplace=True)\ndata.head()  ","fed91155":"data.drop(columns=['sno'],axis=1,inplace=True)","f1315261":"\ndata['Cases']=data['cured']+data['deaths']\ndata['Active Cases']=data['Confirmed']-data['Cases']\n\n","5a2d5320":"data.head(20)\n","f8f02d4b":"data.tail(20)","d295fc7b":"data['Confirmed'].sum()","e38adcb5":"data['deaths'].sum()","38dc9975":"data['cured'].sum()","30c8969a":"x=data.groupby('state')['Active Cases'].sum().sort_values(ascending=False).to_frame()\nx.style.background_gradient(cmap='Blues')","a7bdadcc":"x=data.groupby('state')['deaths'].sum().sort_values(ascending=False).to_frame()\nx.style.background_gradient(cmap='Blues')","bf9be189":"fig=px.bar(data.sort_values('deaths',ascending=False).sort_values('deaths',ascending=True),x=\"deaths\",y=\"state\",title='Total Deaths Cases',text='deaths',orientation='h',width=1000,height=700,range_x=[0,max(data['deaths'])])\nfig.update_traces(marker_color='#55ff45',opacity=0.8,textposition='inside')\nfig.update_layout(plot_bgcolor='rgb(245,242,242)')\nfig.show()","aa3c3a7b":"fig=px.bar(data.sort_values('Active Cases',ascending=False).sort_values('Active Cases',ascending=True),x=\"deaths\",y=\"state\",title='Total Active Cases',text='deaths',orientation='h',width=1000,height=700,range_x=[0,max(data['Active Cases'])])\nfig.update_traces(marker_color='#55ff45',opacity=0.8,textposition='inside')\nfig.update_layout(plot_bgcolor='rgb(245,242,242)')\nfig.show()","2b9b12c5":"fig=px.bar(data.sort_values('cured',ascending=False).sort_values('cured',ascending=True),x=\"cured\",y=\"state\",title='Total cured Cases',text='cured',orientation='h',width=1000,height=700,range_x=[0,max(data['deaths'])])\nfig.update_traces(marker_color='#55ff45',opacity=0.8,textposition='inside')\nfig.update_layout(plot_bgcolor='rgb(245,242,242)')\nfig.show()","921363d4":"#latest\nlatest=data[data['date']==max(data['date'])].reset_index()\nKerala_latest=latest[latest['state']=='Kerala']\nrow_latest=latest[latest['state']!='Kerala']\n#latest condensed\nlatest_grouped=latest.groupby('state')['cured','deaths','Confirmed','Active Cases'].sum().reset_index()\nKerala_latest_grouped=Kerala_latest.groupby('state')['cured','deaths','Confirmed','Active Cases'].sum().reset_index()\nrow_latest_grouped=row_latest.groupby('state')['cured','deaths','Confirmed','Active Cases'].sum().reset_index()\n#latest Complete Data\ntemp=data.groupby(['state'])['cured','deaths','Confirmed','Active Cases'].max()\ntemp=data.groupby('date')['cured','deaths','Confirmed','Active Cases'].sum().reset_index()\ntemp=temp[temp['date']==max(temp['date'])].reset_index(drop=True)\ntemp.style.background_gradient(cmap='Pastel1')\n\n","89a296d8":"temp=data.groupby(['state'])['cured','deaths','Active Cases'].max()\ntemp=data.groupby('date')['cured','deaths','Active Cases'].sum().reset_index()\ntemp=temp[temp['date']==min(temp['date'])].reset_index(drop=True)\ntemp.style.background_gradient(cmap='Pastel1')","8f8fd85c":"temp_1=latest_grouped.sort_values(by='deaths',ascending=False)\ntemp_1=temp_1.reset_index(drop=True)\ntemp_1.style.background_gradient(cmap='Blues')","9603bf34":"India_coor.head()","53743878":"data_full=pd.merge(data,India_coor,on='state')\ndata_full","824e0e01":"temp=data_full.groupby('date')['cured','deaths','Active Cases'].sum().reset_index()\ntemp=temp.melt(id_vars='date',value_vars=['cured','deaths','Active Cases'],var_name='Case',value_name='Count')\n\ntemp.head()\nfig=px.area(temp,x=\"date\",y=\"Count\",color=\"Case\",title=\"Cases Over Time\",color_discrete_sequence=['#ffeebb',\"#2367ff\",\"#556677\"])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","a267d4a3":"import folium\ndata_full=pd.merge(India_coor,data,on='state')\nmap=folium.Map(locations=[20,80],zoom_start=3.5,tiles='Stamen Toner')\nfor lat,lon,value,name in zip (data_full['lat'],data_full['long'],data_full['Active Cases'],data_full['state']):\n    folium.CircleMarker([lat,lon],radius=value*0.3,popup=('<strong>State<\/strong>:'+str(name).capitalize() + '<br>''<strong>Active Cases<\/strong>:'+str(value)+'<br>'),color='blue',fill_color='blue',fill_opacity=0.3).add_to(map)\nmap\n","8443d103":"import seaborn as sns\nf,ax=plt.subplots(figsize=(12,8))\ndata=data_full[['state','Confirmed','cured','deaths']]\ndata.sort_values('Confirmed',ascending=False,inplace=True)\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Confirmed\",y=\"state\",data=data,label=\"Confirmed\",color=\"r\")\nsns.set_color_codes(\"muted\")\nsns.barplot(x='cured',y='state',data=data,label=\"Recovered\",color=\"g\")\nax.legend(ncol=2,loc=\"lower right\",frameon=True)\nax.set(xlim=(0,35),ylabel=\"\",xlabel=\"cases\")\nsns.despine(left=True,bottom=True)","2514eed1":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=dbd_India['Date'],y=dbd_India['Total Cases'],mode='lines+markers',name='Total Cases'))\nfig.add_trace(go.Scatter(x=dbd_India['Date'],y=dbd_India['Recovered'],mode='lines',name='Recovered'))\nfig.add_trace(go.Scatter(x=dbd_India['Date'],y=dbd_India['Active'],mode='lines',name='Active'))\nfig.add_trace(go.Scatter(x=dbd_India['Date'],y=dbd_India['Deaths'],mode='lines',name='Deaths'))\nfig.update_layout(title_text=\"Trend of Coronavirus Cases in India(Cumulative cases)\",plot_bgcolor='rgb(250,242,242)')\nfig.show()\nfig=px.bar(dbd_India,x=\"Date\",y=\"New Cases\",barmode='group',height=400)\nfig.update_layout(title_text='New Coronavirus Cases in India per day',plot_bgcolor='rgb(250,242,242)')\nfig.show()\n","6be598fc":"fig=px.bar(dbd_Italy,x=\"Date\",y=\"Total Cases\",color='Total Cases',orientation='v',height=600,title='Confirmed Cases in Italy',color_discrete_sequence=px.colors.cyclical.mygbm)\nfig.update_layout(plot_bgcolor='rgb(250,242,242)') \nfig.show()\nfig=px.bar(dbd_Korea,x=\"Date\",y=\"Total Cases\",color='Total Cases',orientation='v',height=600,title='Confirmed Cases in Korea',color_discrete_sequence=px.colors.cyclical.mygbm)\n                                      \n                                                                                            \n\nfig.update_layout(plot_bgcolor='rgb(250,242,242)')\nfig.show()\nfig=px.bar(dbd_India,x=\"Date\",y=\"Total Cases\",color='Total Cases',orientation='v',height=600,title='Confirmed Cases in India',color_discrete_sequence=px.colors.cyclical.mygbm)\n\nfig.update_layout(plot_bgcolor='rgb(250,242,242)')\nfig.show()\n","a659a551":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfig=make_subplots(\n    rows=2,cols=2,specs=[[{},{}],[{\"colspan\":2},None]],subplot_titles=(\"S.Korea\",\"Italy\",\"India\"))\nfig.add_trace(go.Bar(x=dbd_Korea['Date'],y=dbd_Korea['Total Cases'],marker=dict(color=dbd_Korea['Total Cases'],coloraxis=\"coloraxis\")),1,1)\nfig.add_trace(go.Bar(x=dbd_India['Date'],y=dbd_India['Total Cases'],marker=dict(color=dbd_India['Total Cases'],coloraxis=\"coloraxis\")),1,2)\nfig.add_trace(go.Bar(x=dbd_Italy['Date'],y=dbd_Italy['Total Cases'],marker=dict(color=dbd_Italy['Total Cases'],coloraxis=\"coloraxis\")),2,1)\nfig.update_layout(coloraxis=dict(colorscale=\"Bluered_r\"),showlegend=False,title_text=\"Total Confirmed cases(Cumulative)\")\nfig.update_layout(plot_bgcolor='rgb(250,242,242)')\nfig.show()\n\n","8977a539":"title='Main Source for News'\nlabels=['Korea','Italy','India']\ncolors=['rgb(0,128,0)','rgb(255,0,0)','rgb(49,130,189)']\nmode_size=[8,8,12]\nline_size=[2,2,4]\nfig=go.Figure()\nfig.add_trace(go.Scatter(x=dbd_Korea['Days after surpassing 100 cases'],y=dbd_Korea['Total Cases'],mode='lines',name=labels[0],line=dict(color=colors[0],width=line_size[0]),connectgaps=True))\nfig.add_trace(go.Scatter(x=dbd_India['Days after surpassing 100 cases'],y=dbd_India['Total Cases'],mode='lines',name=labels[2],line=dict(color=colors[2],width=line_size[0]),connectgaps=True))\nfig.add_trace(go.Scatter(x=dbd_Italy['Days after surpassing 100 cases'],y=dbd_Italy['Total Cases'],mode='lines',name=labels[1],line=dict(color=colors[1],width=line_size[0]),connectgaps=True))\nannotations=[]\nannotations.append(dict(xref='paper',yref='paper',x=0.5,y=-0.1,xanchor='center',yanchor='top',text='Days after surpassing 100 cases',font=dict(family='Arial',size=12,color='rgb(150,150,150)'),showarrow=False))\nfig.update_layout(annotations=annotations,plot_bgcolor='white',yaxis_title='Cummulative cases')\nfig.show()\n\n","143e4fcf":"fig=px.bar(data.sort_values('deaths',ascending=False).head(25).sort_values('deaths',ascending=True),x=\"deaths\",y=\"state\",title=\"Deaths\",text='deaths',orientation='h',width=700,height=700,range_x=[0,max(data['deaths'])+500])\nfig.update_traces(marker_color='#ff1e56',opacity=0.8,textposition='outside')\nfig.show()","66713c9d":"fig=px.bar(data.sort_values('cured',ascending=False).head(25).sort_values('cured',ascending=True),x=\"cured\",y=\"state\",title=\"cured\",text='cured',orientation='h',width=700,height=700,range_x=[0,max(data['cured'])+500])\nfig.update_traces(marker_color='#ff1e56',opacity=0.8,textposition='outside')\nfig.show()","bebdd943":"fig=px.bar(data.sort_values('Confirmed',ascending=False).head(25).sort_values('Confirmed',ascending=True),x=\"Confirmed\",y=\"state\",title=\"Confirmed\",text='Confirmed',orientation='h',width=700,height=700,range_x=[0,max(data['Confirmed'])+500])\nfig.update_traces(marker_color='#ff1e56',opacity=0.8,textposition='outside')\nfig.show()","65ce28cc":"fig=px.bar(data_full.sort_values('Active Cases',ascending=False).head(25).sort_values('Active Cases',ascending=True),x=\"Active Cases\",y=\"state\",title=\"Active Cases\",text='Active Cases',orientation='h',width=700,height=700,range_x=[0,max(data_full['Active Cases'])+500])\nfig.update_traces(marker_color='#ff1e56',opacity=0.8,textposition='outside')\nfig.show()","f4819bd6":"**COVID-19 is wreaking havoc across the india!!!\n","660456d2":"**Visualization of AgeGroup with Total cases and Percentage**","bc2c6ac6":"**Introduction(Although it doesn't need any)**\n  \n  (**The Visualization are updated every 24 Hours**)\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQkE_N7Ke9m5cfVtXExfh9t0EEcQqOl4sHAMKYtcUZzr8Pb_k3g)  \n"}}