{"cell_type":{"39947ccb":"code","4eb0eb78":"code","6a12277c":"code","f8055563":"code","5b7fd8fb":"code","78bfabf7":"code","9ae40178":"code","5334a2f0":"code","95d51693":"code","3076d2da":"code","43c3d241":"code","380a104c":"code","cfbb9d6f":"code","b5e803e2":"code","72688915":"code","a8b72098":"code","066d2b05":"code","bd6d675b":"code","e052d044":"code","6e8af1ea":"code","af0f02b1":"code","68157775":"code","aafc32f2":"code","3ecf218b":"code","b526bc5f":"code","c9a44453":"code","c83ed494":"code","9eb7456f":"code","61d0a22d":"code","bfceeb5d":"code","cb0a212e":"code","6f9b1f23":"code","3dfb954d":"code","bf53358b":"code","f2333915":"code","59091be4":"markdown","8a7e2e77":"markdown","8373bb4e":"markdown","76df1e70":"markdown","f7b40d05":"markdown","05f613f7":"markdown","8ceedc65":"markdown","67160286":"markdown","b2ea7c0e":"markdown","b76fc2c7":"markdown","19ae77ea":"markdown","b891a4fc":"markdown","d32b2feb":"markdown","df8b2ce6":"markdown","85e6450c":"markdown","78915b3a":"markdown","146385c5":"markdown","a53abd2b":"markdown","f36b54f4":"markdown","4655dc63":"markdown"},"source":{"39947ccb":"from IPython.display import Image\nImage(\"..\/input\/amer_sign2.png\")","4eb0eb78":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6a12277c":"train = pd.read_csv('..\/input\/sign_mnist_train.csv')\ntest = pd.read_csv('..\/input\/sign_mnist_test.csv')","f8055563":"train.head()","5b7fd8fb":"train.shape","78bfabf7":"Image(\"..\/input\/american_sign_language.PNG\")","9ae40178":"labels = train['label'].values","5334a2f0":"unique_val = np.array(labels)\nnp.unique(unique_val)","95d51693":"plt.figure(figsize = (18,8))\nsns.countplot(x =labels)","3076d2da":"train.drop('label', axis = 1, inplace = True)","43c3d241":"images = train.values\nimages = np.array([np.reshape(i, (28, 28)) for i in images])\nimages = np.array([i.flatten() for i in images])","380a104c":"from sklearn.preprocessing import LabelBinarizer\nlabel_binrizer = LabelBinarizer()\nlabels = label_binrizer.fit_transform(labels)","cfbb9d6f":"labels","b5e803e2":"plt.imshow(images[0].reshape(28,28))","72688915":"from sklearn.model_selection import train_test_split","a8b72098":"x_train, x_test, y_train, y_test = train_test_split(images, labels, test_size = 0.3, random_state = 101)","066d2b05":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, Dropout","bd6d675b":"batch_size = 128\nnum_classes = 24\nepochs = 50","e052d044":"x_train = x_train \/ 255\nx_test = x_test \/ 255","6e8af1ea":"x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)","af0f02b1":"x_test = x_test.reshape(x_test.shape[0], 28, 28, 1)","68157775":"plt.imshow(x_train[0].reshape(28,28))","aafc32f2":"model = Sequential()\nmodel.add(Conv2D(64, kernel_size=(3,3), activation = 'relu', input_shape=(28, 28 ,1) ))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Conv2D(64, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Conv2D(64, kernel_size = (3, 3), activation = 'relu'))\nmodel.add(MaxPooling2D(pool_size = (2, 2)))\n\nmodel.add(Flatten())\nmodel.add(Dense(128, activation = 'relu'))\nmodel.add(Dropout(0.20))\n\nmodel.add(Dense(num_classes, activation = 'softmax'))","3ecf218b":"model.compile(loss = keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adam(),\n              metrics=['accuracy'])","b526bc5f":"history = model.fit(x_train, y_train, validation_data = (x_test, y_test), epochs=epochs, batch_size=batch_size)","c9a44453":"plt.plot(history.history['acc'])\nplt.plot(history.history['val_acc'])\nplt.title(\"Accuracy\")\nplt.xlabel('epoch')\nplt.ylabel('accuracy')\nplt.legend(['train','test'])\n\nplt.show()","c83ed494":"test_labels = test['label']","9eb7456f":"test.drop('label', axis = 1, inplace = True)","61d0a22d":"test_images = test.values\ntest_images = np.array([np.reshape(i, (28, 28)) for i in test_images])\ntest_images = np.array([i.flatten() for i in test_images])","bfceeb5d":"test_labels = label_binrizer.fit_transform(test_labels)","cb0a212e":"test_images = test_images.reshape(test_images.shape[0], 28, 28, 1)","6f9b1f23":"test_images.shape","3dfb954d":"y_pred = model.predict(test_images)","bf53358b":"from sklearn.metrics import accuracy_score","f2333915":"accuracy_score(test_labels, y_pred.round())","59091be4":"Since our target variable are in categorical(nomial) so we are using label binarizer","8a7e2e77":"Visualizing the image after normalizing","8373bb4e":"Load the dataset","76df1e70":"Re shaping the images","f7b40d05":"For deep learning i am using keras library","05f613f7":"As you can see each one is almost equally distributed","8ceedc65":"Let's see what does each sign means","67160286":"Creating the batch size to 128 and using 50 epochs","b2ea7c0e":"As you can see, the number of epochs increase the accuracy also increases.","b76fc2c7":"We are droping the label coloumn from the training set","19ae77ea":"Let's validate with the test data","b891a4fc":"Lets see how the images look","d32b2feb":"# Sign Language","df8b2ce6":"The data set is given in the form of labels and pixel value ranging from pixel 1 to pixel 784 which is 28 * 28 image.","85e6450c":"Each letter indicates a sign produced by our fingers. We will apply deep learning to these images to make sure our model can understand what sign indicated what letter","78915b3a":"# Data exploration","146385c5":"Normalizing the training and test data","a53abd2b":"Spliting the dataset into train(70%) and test(30%)","f36b54f4":"Predecting with test images","4655dc63":"# CNN Model"}}