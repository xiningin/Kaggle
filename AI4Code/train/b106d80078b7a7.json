{"cell_type":{"1b206f19":"code","88c8e586":"code","db560aa2":"code","f18bf890":"code","95d18758":"code","8b1ad999":"code","e6ac6dbb":"code","99800497":"code","0fa7b07a":"code","531f3794":"code","c09152cf":"code","5864c196":"code","37a74b70":"code","64b3ad67":"code","d2d48c20":"code","299b80b6":"code","d6dc3b6f":"code","1630fa26":"code","8528ca4a":"code","77c68212":"code","6c4cb966":"code","58bead6e":"code","ba36bc3f":"code","abc501dc":"code","c541559c":"code","951c8ddc":"code","914c6d35":"code","df580b66":"code","b92a79ec":"code","0c96fa66":"code","ae5840c9":"code","b153aa95":"code","5c2c0153":"code","04951357":"code","f31f38bf":"code","5bec252b":"code","5283943a":"code","db5b6ba1":"code","bab403c8":"code","94371663":"code","bbbcf6b0":"code","5c96668a":"code","7416a025":"code","b5ac0efd":"code","5f3e9393":"code","e2c931b2":"code","b7126604":"code","35820856":"code","1fe2e77b":"code","661dec3e":"code","ae1b6a3a":"code","3f336e69":"code","d54beaf2":"code","12212673":"code","92976cfd":"code","58578ee4":"code","56df7f7e":"code","f67b6fb8":"code","56162069":"code","90a16574":"code","f7e7ccd5":"code","ec8da203":"code","8a49b201":"code","3b9fd9ae":"code","f6196edb":"code","4f81c62f":"code","699933bf":"code","b194d724":"code","9fca5731":"code","1010d01f":"code","63080010":"code","12a546b2":"code","37024add":"code","4d1236cc":"code","1ad2a5b5":"code","b3614116":"code","4b50f018":"code","498dc2ad":"code","e3bd2156":"code","2a6f9903":"code","43a5166f":"code","5d2071db":"code","7258a6b0":"code","5d315c93":"code","ce3af793":"code","e28db189":"code","488ff795":"code","0b720741":"code","28088525":"code","12bae937":"code","b6786c22":"code","6593136b":"code","a9b24a36":"code","b3df0378":"code","9afe1470":"code","1c952429":"code","7832886d":"code","0da41635":"code","4798b08c":"code","c1bfdbe3":"code","ba57bd87":"code","30454382":"code","81dc9dce":"code","62b166b6":"code","4e57d3f8":"code","2665fcfc":"code","ecaee9db":"code","358af208":"code","52e9b52c":"code","10fcdf8e":"code","fe73ffbc":"code","6f0a09a1":"code","c62d03c9":"code","e5097036":"code","0eebbd41":"code","c3dcf4ce":"code","5392d0de":"code","ebbced88":"code","3b1036d9":"code","8a770297":"code","ecd5ff3d":"code","11e82d49":"code","21a0a475":"code","5ba4e9a7":"code","724ace3f":"code","96a72a9b":"code","700f6ef5":"code","b6f5489d":"code","603a2e1b":"code","0694b13b":"code","5ef90c01":"code","bcdc24a6":"code","80ae5dc7":"code","9207cbbb":"code","7e4739aa":"code","3938b13c":"code","9fd9825a":"code","5fb49f55":"code","b50d1f52":"code","ea88dd25":"code","b270e8c5":"code","ec7aad5c":"code","9dec2443":"code","57034dda":"code","c4e3b214":"code","c3ca11a5":"code","65f2a65e":"code","cf3012e9":"code","bcad4989":"code","dc570cac":"code","43954d89":"code","31758735":"code","838ee187":"code","a8774621":"code","cb4845d5":"code","42e023c9":"code","74bf888a":"code","825601bc":"code","7ac5c1de":"code","6787a97d":"code","3e52409f":"code","2cd88710":"code","41895683":"code","133111a7":"code","67d5d3e9":"code","950d0020":"code","c44ea3f4":"code","644fd811":"code","0db0333b":"markdown","2c5c4c44":"markdown","5ae79550":"markdown","326242f5":"markdown","13c76d7d":"markdown","ce12a227":"markdown","4a440fa9":"markdown","d74d4b58":"markdown","11024248":"markdown","9ddcd107":"markdown","42922e10":"markdown","150e64a0":"markdown","107573f9":"markdown","70eaeac4":"markdown","24008814":"markdown","f80f6ada":"markdown","7eebcab9":"markdown","a22f969a":"markdown","47a5f736":"markdown","c757d45e":"markdown","512725b3":"markdown","ec91194b":"markdown","97a6ccab":"markdown","1297413c":"markdown","35c2e516":"markdown"},"source":{"1b206f19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","88c8e586":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob # for assembling multipe csvs\n\n\n#for visualization\nimport seaborn as sns \nimport matplotlib as mpl\n\nimport datetime\n# Format & locate ticks for dates\nfrom matplotlib.dates import DateFormatter, DayLocator\n# general plot formatting\nimport matplotlib.pyplot as plt\n#format plot x\/y tick labels\nfrom matplotlib.ticker import FuncFormatter\n%matplotlib inline \n#inline plots\n\n#for Ignoring the warnings and errors\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","db560aa2":"# importing dataset\ndistricts_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\n","f18bf890":"districts_df.head(10)","95d18758":"districts_df.info()","8b1ad999":"districts_df.describe()","e6ac6dbb":"# Get info, if null values exist, or duplicate entries\n\n#It's necessary to know if there are empty values or duplicate values in Pandas.\n\n#Empty values need to be handled by dropping them, or applying algorithms such as Encoder, Mean or so on. Same for duplicates","99800497":"districts_df.isnull().sum()","0fa7b07a":"percent_missing = districts_df.isnull().sum() * 100 \/ len(districts_df)\npercent_missing","531f3794":"# Must dropna before analysing\n## Drop the col with more than 30% missing value\ndistricts_df=districts_df.drop([\"pct_free\/reduced\",\"pp_total_raw\"], axis=1)\n","c09152cf":"# Pandas Fillna of the Columns with Mode\ncols = [\"state\",\"locale\"]\ndistricts_df[cols]=districts_df[cols].fillna(districts_df.mode().iloc[0])","5864c196":"# Convert pct_black\/hispanic from str to numeric","37a74b70":"# process and separate pct_black\/hispanic\npct_black_hispanic = districts_df['pct_black\/hispanic'].str.split(\",\",n=1,expand=True)\n# extract pct_black and pct_hispanic\ndistricts_df['pct_black']=pct_black_hispanic[0].str.replace('[','',regex=True)\ndistricts_df['pct_hispanic']= pct_black_hispanic[1].str.replace('[','',regex=True)\n# convert pct_black and pct_hispanic to numeric\ndistricts_df['pct_black']=pd.to_numeric(districts_df['pct_black'])\ndistricts_df['pct_hispanic']=pd.to_numeric(districts_df['pct_hispanic'])\n# combine with mean value\ndistricts_df['pct_black_and_hispanic']=(districts_df['pct_black'] + districts_df['pct_hispanic'])\/2","64b3ad67":"# Drop column\ndistricts_df=districts_df.drop(columns=['pct_black\/hispanic','pct_black','pct_hispanic'])","d2d48c20":"# Pandas Fillna of the Columns with Mode\ncols = [\"pct_black_and_hispanic\"]\ndistricts_df[cols]=districts_df[cols].fillna(districts_df.median().iloc[0])","299b80b6":"# Convert county_connections_ratio from str to numeric","d6dc3b6f":"# process and separate county_connections_ratio\ncounty_connections_ratio = districts_df['county_connections_ratio'].str.split(\",\",n=1,expand=True)\n#extract county and connections value\ndistricts_df['county']=county_connections_ratio[0].str.replace('[','',regex=True)\ndistricts_df['connections']= county_connections_ratio[1].str.replace('[','',regex=True)\n# convert county and connections to numeric\ndistricts_df['county']=pd.to_numeric(districts_df['county'])\ndistricts_df['connections']=pd.to_numeric(districts_df['connections'])","1630fa26":"# Pandas Fillna of the Columns with Median\n# populate missing value for county and connections with median\ndistricts_df['county'].fillna(districts_df['county'].median(), inplace=True)\ndistricts_df['connections'].fillna(districts_df['connections'].median(), inplace=True)\n#combine county and connections with mean value\ndistricts_df['cc_ratio'] = (districts_df['county'] + districts_df['connections'])\/2","8528ca4a":"# Drop column\ndistricts_df=districts_df.drop(columns=['county_connections_ratio','county','connections'])","77c68212":"# Now data has been cleaned. Lets do basic visualization","6c4cb966":"fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.countplot(x=districts_df[\"state\"], hue=districts_df[\"locale\"], palette=\"Paired\",\n                 order=pd.value_counts(districts_df[\"state\"]).iloc[:5].index)\nax.set_title('Top 5 State with The Locale Classification')\nax.set_ylabel('No. of District')\nax.set_xlabel('The State Where the District Resides in')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')","58bead6e":"fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.countplot(x=districts_df[\"state\"],\n              hue=districts_df[\"pct_black_and_hispanic\"],\n             palette=\"Paired\",\n            order=pd.value_counts(districts_df[\"state\"]).iloc[:5].index)\nax.set_title(\"Top 5 State Have The Highest Percentage of students in the districts identified as Black or Hispanic\")\nax.set_xlabel('The State Where the District Resides in')\nax.set_ylabel('No. of District')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')","ba36bc3f":"# County Connection Ratio by State","abc501dc":"fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.countplot(x=districts_df[\"cc_ratio\"],\n              hue=districts_df[\"state\"],\n                 palette=\"Paired\"\n            )\nax.set_title(\"County Connection Ratio by State\")\nax.set_xlabel('County Connection Ratio')\nax.set_ylabel('No. of District')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')","c541559c":"# County Connection Ratio by Locale","951c8ddc":"fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.countplot(x=districts_df[\"cc_ratio\"],\n              hue=districts_df[\"locale\"],\n             palette=\"Paired\",\n            order=pd.value_counts(districts_df[\"cc_ratio\"]).iloc[:2].index)\nax.set_title(\"County Connection Ratio by Locale\")\nax.set_xlabel('County Connection Ratio')\nax.set_ylabel('No. of District')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')","914c6d35":"# importing dataset\nproducts_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\n","df580b66":"products_df.head()","b92a79ec":"products_df.info()","0c96fa66":"products_df.describe()","ae5840c9":"# Change LP ID","b153aa95":"# rename LP ID column to lp_id for it to match as in engagement_data\nproducts_df.rename(columns={'LP ID':'lp_id'}, inplace=True)\nproducts_df.rename(columns={'Product Name':'product_name'}, inplace=True)\nproducts_df.rename(columns={'Provider\/Company Name':'company_provider'}, inplace=True)\nproducts_df.rename(columns={'Sector(s)':'sector'}, inplace=True)","5c2c0153":"# Extract Sector(s) & Primary Essential Function\nproducts_df['main_product_function'] = products_df['Primary Essential Function'].apply(lambda x: x.split(' - ')[0] if x == x else x)\nproducts_df['sub_product_function'] = products_df['Primary Essential Function'].apply(lambda x: x.split(' - ')[1] if x == x else x)\n","04951357":"# Synchronize similar values\nproducts_df['sub_product_function'] = products_df['sub_product_function'].replace({'Sites, Resources & References' : 'Sites, Resources & Reference'})\nproducts_df.drop(\"Primary Essential Function\", axis=1, inplace=True)\n","f31f38bf":"# Get info, if null values exist, or duplicate entries\n\n#It's necessary to know if there are empty values or duplicate values in Pandas.\n\n#Empty values need to be handled by dropping them, or applying algorithms such as Encoder, Mean or so on. Same for duplicates","5bec252b":"per_col = products_df.isnull().sum()\nper_col\n","5283943a":"whole_df = products_df.isnull().sum().sum()\nwhole_df","db5b6ba1":"percent_missing = products_df.isnull().sum() * 100 \/ len(products_df)\npercent_missing","bab403c8":"# Pandas Fillna of Multiple Columns with Mode of Each Column\ncols = [\"company_provider\",\"sector\",\"main_product_function\",\"sub_product_function\"]\nproducts_df[cols]=products_df[cols].fillna(products_df.mode().iloc[0])","94371663":"# DV OF PRODUCTS","bbbcf6b0":"sector_main_product=products_df.groupby(['sector','main_product_function']).count()[['lp_id']]\nsector_main_product.reset_index(inplace=True)\nsector_main_product.value_counts()","5c96668a":"sector_main_product=sector_main_product.nlargest(50, columns=['lp_id'])","7416a025":"sector_main_product['percent'] = (sector_main_product['lp_id']\/sector_main_product['lp_id'].sum() *100)\nx=list(sector_main_product['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nsector_main_product","b5ac0efd":"fig, ax = plt.subplots(1,1, figsize=(12, 5))\n\nsns.barplot(data=sector_main_product,x='main_product_function',y='percent',hue='sector',\n              order=sector_main_product['main_product_function'].value_counts().index[:10],\n              palette='Paired')\nplt.title(\"The Proportion of Main Product Function by Different Education Sector\")\nplt.legend(title=\"Sector(s):\")\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')\nplt.tight_layout()\nplt.show()","5f3e9393":"sector_sub_product=products_df.groupby(['sector','sub_product_function']).count()[['lp_id']]\nsector_sub_product.reset_index(inplace=True)\nsector_sub_product.value_counts()","e2c931b2":"sector_sub_product=sector_sub_product.nlargest(50, columns=['lp_id'])","b7126604":"sector_sub_product['percent'] = (sector_sub_product['lp_id']\/sector_sub_product['lp_id'].sum() *100)\nx=list(sector_sub_product['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nsector_sub_product","35820856":"#Top Sub Product Function by Sector\nfig, ax = plt.subplots(1,1, figsize=(17, 6))\n\nsns.barplot(data=sector_sub_product,\n           y='percent', x='sub_product_function', hue='sector',\n           order=sector_sub_product['sub_product_function'].value_counts().index[:5], palette='Paired')\nplt.title(\"Proportion of Top 5 Sub Product Function by Different Education Sector\")\nplt.legend(title=\"Sector(s):\")\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')\nplt.tight_layout()\nplt.show()","1fe2e77b":"company_sector=products_df.groupby(['company_provider','sector']).count()[['lp_id']]\ncompany_sector.reset_index(inplace=True)\ncompany_sector.value_counts()","661dec3e":"company_sector=company_sector.nlargest(50, columns=['lp_id'])","ae1b6a3a":"company_sector['percent'] = (company_sector['lp_id']\/company_sector['lp_id'].sum() *100)\nx=list(company_sector['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\ncompany_sector","3f336e69":"fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.barplot(data=company_sector,\n            x='company_provider',\n            y='percent',\n            hue='sector', \n            palette='Paired',\n            order=pd.value_counts(company_sector['company_provider']).iloc[:5].index)\nplt.title(\"Proportion of Top 5 Company Product Provider by Different Education Sector\")\nplt.legend(title=\"Sector(s):\")\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')\nplt.tight_layout()\nplt.show()","d54beaf2":"path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \nengagement_df = pd.concat(li)\nengagement_df = engagement_df.reset_index(drop=True)\nengagement_df.head()","12212673":"engagement_df.head()","92976cfd":"engagement_df.info()","58578ee4":"engagement_df.describe()","56df7f7e":"# Rename time to date","f67b6fb8":"engagement_df.rename(columns={'time':'date'}, inplace=True)\n","56162069":"# Change object to datetime format","90a16574":"pd.to_datetime(engagement_df['date'])\n","f7e7ccd5":"per_col = engagement_df.isnull().sum()\nper_col","ec8da203":"whole_df = engagement_df.isnull().sum().sum()\nwhole_df","8a49b201":"percent_missing = engagement_df.isnull().sum() * 100 \/ len(engagement_df)\npercent_missing","3b9fd9ae":"# Fillna with mean","f6196edb":"# Pandas Fillna of Multiple Columns with Mean of Each Column\ncols = [\"pct_access\", \"engagement_index\"]\nengagement_df[cols]=engagement_df[cols].fillna(engagement_df.median().iloc[0])","4f81c62f":"# Convert date to day and month","699933bf":"# Convert date to day, month, year\nengagement_df['month'] = pd.to_datetime(engagement_df['date']).dt.month_name()\nengagement_df['day'] = pd.to_datetime(engagement_df['date']).dt.day_name()\n","b194d724":"# Time vs Percentage of students access in the district\n# pct_access : Percentage of students in the district have at least one page-load event of a given product and on a given day\n# engagement_index : Total page-load events per one thousand students of a given product and on a given day","9fca5731":"month_district=engagement_df.groupby(['month'], as_index=False,sort=False)[['engagement_index']].median()\nmonth_district.reset_index(inplace=True)\nmonth_district.value_counts()\n","1010d01f":"month_district['percent'] = (month_district['engagement_index']\/month_district['engagement_index'].sum() *100)\nx=list(month_district['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nmonth_district","63080010":"fig, ax = plt.subplots(1,1, figsize=(15, 6))\n\nsns.lineplot(data=month_district,\n                x='month',y='percent',\n                palette='Paired')\nax.set_title(\"Percentage of Student Engagement by Month\")\nax.set_xlabel('Month')\nax.set_ylabel('Percentage of Student Engagement')\n\n","12a546b2":"day_district=engagement_df.groupby(['day'], as_index=False,sort=False)[['engagement_index']].median()\nday_district.reset_index(inplace=True)\nday_district.value_counts()\n","37024add":"day_district['percent'] = (day_district['engagement_index']\/day_district['engagement_index'].sum() *100)\nx=list(day_district['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nday_district","4d1236cc":"fig, ax = plt.subplots(1,1, figsize=(15, 6))\n\nsns.lineplot(data=day_district,\n                x='day',y='percent',\n                palette='Paired')\nax.set_title(\"Percentage of Student Engagement by Day\")\nax.set_xlabel('Day')\nax.set_ylabel('Percentage of Student Engagement')\n","1ad2a5b5":"print(districts_df[\"district_id\"].nunique())\nprint(engagement_df[\"district_id\"].nunique())","b3614116":"# merge dataframe using district_id as key\nengagement_df[\"district_id\"] = engagement_df[\"district_id\"].astype(str).astype(int)\ndistricts_engagement_data = pd.merge(districts_df, engagement_df, left_on='district_id', right_on='district_id')\ndistricts_engagement_data.head()","4b50f018":"districts_engagement_data.info()","498dc2ad":"districts_engagement_data.describe()","e3bd2156":"per_col = districts_engagement_data.isnull().sum()\nper_col","2a6f9903":"whole_df = districts_engagement_data.isnull().sum().sum()\nwhole_df","43a5166f":"percent_missing = districts_engagement_data.isnull().sum() * 100 \/ len(districts_engagement_data)\npercent_missing","5d2071db":"month_locale=districts_engagement_data.groupby(['month','locale'], as_index=False, sort=False)[['pct_access']].median()\nmonth_locale.reset_index(inplace=True)\nmonth_locale.value_counts()","7258a6b0":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\nsns.relplot(data=month_locale,\n                x='month',y='pct_access',hue='locale',style='locale',kind='line',\n                palette='Paired',height=5,aspect=2)\nax.set_title(\"Percentage of Student Access in the Locale District by Month\")\nax.set_xlabel('Month')\nax.set_ylabel('Percentage of Student Access')","5d315c93":"day_locale=districts_engagement_data.groupby(['day','locale'], as_index=False, sort=False)[['pct_access']].median()\nday_locale.reset_index(inplace=True)\nday_locale.value_counts()","ce3af793":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\nsns.relplot(data=day_locale,\n                x='day',y='pct_access',hue='locale',style='locale',kind='line',\n                palette='Paired',height=5,aspect=2)\nax.set_title(\"Percentage of Student Access in the Locale District by Day\")\nax.set_xlabel('Day')\nax.set_ylabel('Percentage of Student Access')","e28db189":"state_engage=districts_engagement_data.groupby(['state'])[['engagement_index']].median()\nstate_engage.reset_index(inplace=True)\nstate_engage.value_counts()","488ff795":"state_engage=state_engage.nlargest(50, columns=['engagement_index'])","0b720741":"state_engage['percent'] = (state_engage['engagement_index']\/state_engage['engagement_index'].sum() *100)\nx=list(state_engage['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nstate_engage","28088525":"fig, ax = plt.subplots(1,1, figsize=(17, 6))\nsns.barplot(data=state_engage,\n                x='percent',y='state',\n                palette='Paired')\nplt.title(\"Percentage of Student Engagement by State\")\nplt.ylabel('State')\nplt.xlabel('Percntage')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')\nplt.tight_layout()\nplt.show()","12bae937":"locale_engage=districts_engagement_data.groupby(['locale'])[['engagement_index']].median()\nlocale_engage.reset_index(inplace=True)\nlocale_engage.value_counts()","b6786c22":"locale_engage=locale_engage.nlargest(50, columns=['engagement_index'])","6593136b":"locale_engage['percent'] = (locale_engage['engagement_index']\/locale_engage['engagement_index'].sum() *100)\nx=list(locale_engage['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nlocale_engage","a9b24a36":"fig, ax = plt.subplots(1,1, figsize=(12, 6))\nsns.barplot(data=locale_engage,\n                y='percent',x='locale',\n                palette='Set3')\nplt.title(\"Percentage of Student Engagement by Locale\")\nplt.ylabel('Locale')\nplt.xlabel('Percntage')\nfor bars in ax.containers:\n        ax.bar_label(bars, fmt='%.1f')\nplt.tight_layout()\nplt.show()","b3df0378":"locale_day_month=districts_engagement_data.groupby(['locale','day','month'],as_index=False,sort=False)[['engagement_index']].median()\nlocale_day_month.reset_index(inplace=True)\nlocale_day_month.value_counts()","9afe1470":"locale_day_month=locale_day_month.nlargest(336, columns=['engagement_index'])","1c952429":"locale_day_month['percent'] = (locale_day_month['engagement_index']\/locale_day_month['engagement_index'].sum() *100)\nx=list(locale_day_month['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nlocale_day_month","7832886d":"# Percentage of Student Engagement by Locale, Day and Month","0da41635":"#fig, ax = plt.subplots(1,1, figsize=(12, 6))\nsns.catplot(data=locale_day_month,\n                y='day',x='percent',hue='month',col='locale',sharex=False,sharey=False,\n                palette='hls',height=7,aspect=.7)\n","4798b08c":"locale_time_access=districts_engagement_data.groupby(['locale','day','month'],as_index=False,sort=False)[['pct_access']].median()\nlocale_time_access.reset_index(inplace=True)\nlocale_time_access.value_counts()","c1bfdbe3":"locale_time_access=locale_time_access.nlargest(336, columns=['pct_access'])","ba57bd87":"locale_time_access['percent'] = (locale_time_access['pct_access']\/locale_time_access['pct_access'].sum() *100)\nx=list(locale_time_access['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nlocale_time_access","30454382":"# Percentage of Student Access by Locale, Day and Month","81dc9dce":"#fig, ax = plt.subplots(1,1, figsize=(12, 6))\nsns.catplot(data=locale_time_access,\n                y='day',x='pct_access',hue='month',col='locale',sharex=False,sharey=False,\n                palette='hls',height=7,aspect=.7)\n\n","62b166b6":"locale_engagement=districts_engagement_data.groupby(['locale','day'],as_index=False,sort=False)[['engagement_index']].median()\nlocale_engagement.reset_index(inplace=True)\nlocale_engagement.value_counts()","4e57d3f8":"locale_engagement=locale_engagement.nlargest(50, columns=['engagement_index'])","2665fcfc":"# Univariate Conditional Distributions\nfig, ax = plt.subplots(1,1, figsize=(15, 7))\nsns.kdeplot(data=locale_engagement,\n            x='engagement_index',\n            hue='locale',hue_order=['Town','Rural','City','Suburb'],\n            fill=True,palette='Paired',\n            alpha=.5,linewidth=0)\nax.set_title(\"Distribution of Daily Student Engagement by Locale Classification\")\nax.set_xlabel('Student Engagement')\n","ecaee9db":"locale_access=districts_engagement_data.groupby(['locale','month'],as_index=False,sort=False)[['pct_access']].median()\nlocale_access.reset_index(inplace=True)\nlocale_access.value_counts()","358af208":"locale_access=locale_access.nlargest(50, columns=['pct_access'])","52e9b52c":"# Univariate Conditional Distributions\nfig, ax = plt.subplots(1,1, figsize=(15, 7))\nsns.kdeplot(data=locale_access,\n            x='pct_access',\n            hue='locale',hue_order=['Town','Rural','City','Suburb'],\n            alpha=.5,fill=True,palette='Paired',linewidth=0)\n\n\n\nax.set_title(\"Distribution of Monthly Student Access by Locale Classification\")\nax.set_xlabel('Student Access')\n# Rajin nanti try explore how to edit legend in seaborn\n# month day state locale cc_ratio pct_access engagement_index","10fcdf8e":"locale_ratio=districts_engagement_data.groupby(['locale','day','month'],as_index=False,sort=False)[['cc_ratio']].median()\nlocale_ratio.reset_index(inplace=True)\nlocale_ratio.value_counts()","fe73ffbc":"locale_ratio=locale_ratio.nlargest(336, columns=['cc_ratio'])","6f0a09a1":"locale_ratio['percent'] = (locale_ratio['cc_ratio']\/locale_ratio['cc_ratio'].sum() *100)\nx=list(locale_ratio['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nlocale_ratio","c62d03c9":"# Percentage of County Connection Ratio by Locale, Day and Month","e5097036":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=locale_ratio,\n            y='month',x='percent',hue='day', col='locale', palette='Paired',\n            height=5, aspect=.8)\n","0eebbd41":"products_engagement_data = pd.merge(products_df, districts_engagement_data, left_on='lp_id', right_on='lp_id')\nproducts_engagement_data.head()","c3dcf4ce":"products_engagement_data['cc_ratio'].value_counts()","5392d0de":"products_engagement_data.info()","ebbced88":"products_engagement_data.describe()","3b1036d9":"per_col = products_engagement_data.isnull().sum()\nper_col","8a770297":"sector_locale_day=products_engagement_data.groupby(['locale','sector','day','sub_product_function'],as_index=False,sort=False)[['engagement_index']].median()\nsector_locale_day.reset_index(inplace=True)\nsector_locale_day.value_counts()","ecd5ff3d":"sector_locale_day=sector_locale_day.nlargest(1287, columns=['engagement_index'])","11e82d49":"sector_locale_day['percent'] = (sector_locale_day['engagement_index']\/sector_locale_day['engagement_index'].sum() *100)\nx=list(sector_locale_day['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nsector_locale_day","21a0a475":"# Percentage of Daily Student Engagement by Locale, Sector and Sub Product Function","5ba4e9a7":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=sector_locale_day, x='percent', y='sub_product_function',\n              hue='sector', col='locale', kind='strip',\n              palette=\"Paired\", height=6, aspect=.8)\n","724ace3f":"day_main=products_engagement_data.groupby(['day','main_product_function'],as_index=False,sort=False)[['engagement_index']].median()\nday_main.reset_index(inplace=True)\nday_main.value_counts()","96a72a9b":"day_main=day_main.nlargest(50, columns=['engagement_index'])","700f6ef5":"day_main['percent'] = (day_main['engagement_index']\/day_main['engagement_index'].sum() *100)\nx=list(day_main['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nday_main","b6f5489d":"# Percentage of Daily Student Engagement by Main Product Function","603a2e1b":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=day_main, x='percent', y='main_product_function', \n              hue='day', size='day', sizes=(200,500), alpha=.5, ci=None,\n               height=6, aspect=2)","0694b13b":"product_day=products_engagement_data.nlargest(50000, columns=['engagement_index'])\n#product_day.reset_index(inplace=True)\nproduct_day.value_counts()","5ef90c01":"product_day['percent'] = (product_day['engagement_index']\/product_day['engagement_index'].sum() *100)\nx=list(product_day['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nproduct_day","bcdc24a6":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=product_day, x='percent', y='product_name',kind='bar',\n             palette='Set3',height=6, aspect=2, ci=None)\n","80ae5dc7":"sector_locale_day=products_engagement_data.groupby(['sector','locale','product_name'],as_index=False,sort=False)[['engagement_index']].mean()\nsector_locale_day.reset_index(inplace=True)\nsector_locale_day.value_counts()","9207cbbb":"sector_locale_day=sector_locale_day.nlargest(80, columns=['engagement_index'])","7e4739aa":"sector_locale_day['percent'] = (sector_locale_day['engagement_index']\/sector_locale_day['engagement_index'].sum() *100)\nx=list(sector_locale_day['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nsector_locale_day","3938b13c":"# Top Product Engagement by Locale and Education Sector","9fd9825a":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=sector_locale_day, x='percent', y='product_name',\n              hue='sector',size='locale', sizes=(100,500), ci=None, alpha=.5,\n              palette=\"Set1\", height=8, aspect=1.2)\n","5fb49f55":"sector_locale_day=products_engagement_data.groupby(['sector','main_product_function','product_name'],as_index=False,sort=False)[['engagement_index']].mean()\nsector_locale_day.reset_index(inplace=True)\nsector_locale_day.value_counts()","b50d1f52":"sector_locale_day=sector_locale_day.nlargest(20, columns=['engagement_index'])","ea88dd25":"sector_locale_day['percent'] = (sector_locale_day['engagement_index']\/sector_locale_day['engagement_index'].sum() *100)\nx=list(sector_locale_day['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\nsector_locale_day","b270e8c5":"# Top Product Engagement by Education Sector and Main Product Function","ec7aad5c":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=sector_locale_day, x='percent', y='product_name',\n              hue='sector',size='main_product_function', sizes=(100,500), ci=None, alpha=.5,\n              palette=\"Set1\", height=8, aspect=1.2)\n","9dec2443":"product_access=products_engagement_data.groupby(['product_name'],as_index=False,sort=False)[['pct_access']].median()\nproduct_access.reset_index(inplace=True)\nproduct_access.value_counts()","57034dda":"product_access=product_access.nlargest(20, columns=['pct_access'])","c4e3b214":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=product_access, x='pct_access', y='product_name',kind='bar',\n             palette='Set3',height=6, aspect=2, ci=None)","c3ca11a5":"product_access=products_engagement_data.groupby(['locale','product_name'],as_index=False,sort=False)[['pct_access']].median()\nproduct_access.reset_index(inplace=True)\nproduct_access.value_counts()","65f2a65e":"product_access=product_access.nlargest(20, columns=['pct_access'])","cf3012e9":"# Top Product Access by Locale","bcad4989":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=product_access, x='pct_access', y='product_name',\n              hue='locale',size='locale', sizes=(100,500), ci=None, alpha=.5,\n              palette=\"Set1\", height=8, aspect=1.2)\n","dc570cac":"product_access=products_engagement_data.groupby(['locale','sector','product_name'],as_index=False,sort=False)[['pct_access']].median()\nproduct_access.reset_index(inplace=True)\nproduct_access.value_counts()","43954d89":"product_access=product_access.nlargest(20, columns=['pct_access'])","31758735":"# Top Product Access by Locale and Sector","838ee187":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=product_access, x='pct_access', y='product_name',\n              hue='locale',size='sector', sizes=(100,500), ci=None, alpha=.5,\n              palette=\"Set1\", height=8, aspect=1.2)\n","a8774621":"product_access=products_engagement_data.groupby(['main_product_function','sector','product_name'],as_index=False,sort=False)[['pct_access']].median()\nproduct_access.reset_index(inplace=True)\nproduct_access.value_counts()","cb4845d5":"product_access=product_access.nlargest(20, columns=['pct_access'])","42e023c9":"# Top Product Access by Main Product Function and Sector","74bf888a":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.relplot(data=product_access, x='pct_access', y='product_name',\n              hue='main_product_function',size='sector', sizes=(160,500), ci=None, alpha=.5,\n              palette=\"Set1\", height=8, aspect=1.2)\n","825601bc":"locale_ratio=products_engagement_data.groupby(['locale'],as_index=False,sort=False)[['cc_ratio']].count()\nlocale_ratio.reset_index(inplace=True)\nlocale_ratio.value_counts()","7ac5c1de":"locale_ratio=locale_ratio.nlargest(4, columns=['cc_ratio'])","6787a97d":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=locale_ratio, x='locale', y='cc_ratio',kind='bar',\n             palette='Set3',height=6, aspect=2, ci=None)","3e52409f":"locale_ratio=products_engagement_data.groupby(['locale','sector'],as_index=False,sort=False)[['cc_ratio']].count()\nlocale_ratio.reset_index(inplace=True)\nlocale_ratio.value_counts()","2cd88710":"locale_ratio=locale_ratio.nlargest(20, columns=['cc_ratio'])","41895683":"# Top Locale County Connections by Education Sector","133111a7":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=locale_ratio, x='locale', y='cc_ratio', hue='sector', kind='bar',\n             palette='Set3',height=7, aspect=2.6, ci=None)","67d5d3e9":"locale_ratio=products_engagement_data.groupby(['locale','sector','main_product_function'],as_index=False,sort=False)[['cc_ratio']].count()\nlocale_ratio.reset_index(inplace=True)\nlocale_ratio.value_counts()","950d0020":"locale_ratio=locale_ratio.nlargest(20, columns=['cc_ratio'])","c44ea3f4":"# Top Locale County Connections By Education Sector and Main Product Function","644fd811":"#fig, ax = plt.subplots(1,1, figsize=(15, 7))\n\nsns.catplot(data=locale_ratio, x='main_product_function', y='cc_ratio', hue='sector', col='locale', kind='bar',\n             palette='Set2',height=6, aspect=.6, ci=None)","0db0333b":"# Top Product Access","2c5c4c44":"# ENGAGEMENT\n\n#### The engagement_ data folder is based on LearnPlatform\u2019s Student Chrome Extension. The extension collects page load events of over 10K education technology products in our product library, including websites, apps, web apps, software programs, extensions, ebooks, hardwares, and services used in educational institutions. The engagement data have been aggregated at school district level, and each file represents data from one school district.\n\n#### The engagement data are aggregated at school district level, and each file in the folder engagement_data represents data from one school district. The 4-digit file name represents district_id which can be used to link to district information in district_info.csv. The lp_id can be used to link to product information in product_info.csv.\n\n#### time : date in \"YYYY-MM-DD\"\n#### lp_id : The unique identifier of the product. can be used to link to product information in product_info.csv\n#### pct_access : Percentage of students in the district have at least one page-load event of a given product and on a given day\n#### engagement_index : Total page-load events per one thousand students of a given product and on a given day\n#### district_id : can be used to link to district information in district_info.csv","5ae79550":"# The Relationship\n1. Optimization of `engagement index` using state, locale, cc_ratio, pct_access\n2. Top 5 state with the highest engagement\n3. Digital conectivity cc_ratio and pct_access influence the engagement\n4. Effectiveness of `education technology` in `education sector`\n","326242f5":"# Percentage of Student Engagement by Day","13c76d7d":"## Top 5 State Have The Highest Percentage of Students in the Districts Identified as Black or Hispanic","ce12a227":"## Top 5 State with Locale Classification","4a440fa9":"# Percentage of Student Access in the Locale District by Day","d74d4b58":"# Percentage of Student Access in the Locale District by Month","11024248":"1. Connecticut only have 3 `locale classification` with the highest no. of district in `Suburb`, 75 and less in `City`, 2.\n2. Utah have all the `locale classification` with highest district in `Suburb`, 18 and less in `Rural`, 2.\n3. The highest no. of district is in `Suburb` for Massachusetts that is 20.","9ddcd107":"# Distribution of Daily Student Engagement by Locale","42922e10":"# Proportion of Top 5 Sub Product Function by Different Education Sector","150e64a0":"# Challenge\n\nWe challenge the Kaggle community to explore \n\n(1) the `state of digital learning` in 2020 and \n\n(2) how the `engagement of digital learning` relates to `factors` such as `district demographics`, `broadband access`, and `state\/national level policies and events`.\n\nWe encourage you to guide the analysis with questions that are related to the themes that are described above (in bold font). Below are some examples of questions that relate to our problem statement:\n\nWhat is the `picture of digital connectivity and engagement` in 2020?\n\nWhat is the `effect of the COVID-19 pandemic on online and distance learning`, and how might this also `evolve` in the future?\n\nHow does `student engagement with different types of education technology` change over the course of the pandemic?\n\nHow does `student engagement with online learning platforms` relate to different geography? Demographic context (e.g., race\/ethnicity, ESL, learning disability)? Learning context? Socioeconomic status?\n\nDo certain `state interventions, practices or policies` (e.g., stimulus, reopening, eviction moratorium) correlate with the increase or decrease online engagement?","107573f9":"# Percentage of Student Engagement by State","70eaeac4":"# Top Product Engagement","24008814":"# Challenge\n\nWe challenge the Kaggle community to explore \n\n(1) the `state of digital learning` in 2020 and \n\n(2) how the `engagement of digital learning` relates to `factors` such as `district demographics`, `broadband access`, and `state\/national level policies and events`.\n\nWe encourage you to guide the analysis with questions that are related to the themes that are described above (in bold font). Below are some examples of questions that relate to our problem statement:\n\nWhat is the `picture of digital connectivity and engagement` in 2020?\n\nWhat is the `effect of the COVID-19 pandemic on online and distance learning`, and how might this also `evolve` in the future?\n\nHow does `student engagement with different types of education technology` change over the course of the pandemic?\n\nHow does `student engagement with online learning platforms` relate to different geography? Demographic context (e.g., race\/ethnicity, ESL, learning disability)? Learning context? Socioeconomic status?\n\nDo certain `state interventions, practices or policies` (e.g., stimulus, reopening, eviction moratorium) correlate with the increase or decrease online engagement?","f80f6ada":"# Percentage of Student Engagement by Locale","7eebcab9":"# The Proportion of Main Product Function by Different Education Sector","a22f969a":"* The product file `products_info.csv` includes information about the characteristics of the `top 372 products with most users in 2020`.\n\n* LP ID - The unique identifier of the product\n* URL - Web Link to the specific product\n* Product Name - Name of the specific product\n* Provider\/Company Name - Name of the product provider\n\n* Sector(s) - `Sector of education` where the product is used\n\n*  Primary Essential Function - The `basic function` of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = `Learning & Curriculum`, CM = `Classroom Management`, and SDO = `School & District Operations`. Each of these categories have multiple sub-categories with which the products were labeled\n\n* Effectiveness of `education technology` in `education sector`\n","47a5f736":"# COMBINE ENGAGEMENT, DISTRICT AND PRODUCT\n\n* How does `student engagement` with `online learning platforms` relate to different `geography`? Demographic context (e.g., `race\/ethnicity`, ESL, `learning disability`)? Learning context? Socioeconomic status?","c757d45e":"# Proportion of Top 5 Company Product Provider by Different Education Sector","512725b3":"# Percentage of Student Engagement by Month","ec91194b":"# Distribution of Monthly Student Access by Locale ","97a6ccab":"# Top Locale County Connections","1297413c":"# PRODUCTS DATA\n\n#### The product file products_info.csv includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n#### LP ID - The unique identifier of the product\n\n#### URL - Web Link to the specific product\n\n#### Product Name - Name of the specific product\n\n#### Provider\/Company Name - Name of the product provider\n\n","35c2e516":"# DISTRICTS DATA\n\n#### The district file districts_info.csv includes information about the characteristics of school districts, including data from NCES (2018-19), FCC (Dec 2018), and Edunomics Lab. In this data set, we removed the identifiable information about the school districts. We also used an open source tool ARX (Prasser et al. 2020) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset.\n\n#### district_id - The unique identifier of the school district\n\n\n#### state\t- The state where the district resides in\n\n\n#### locale - NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See Locale Boundaries User's Manual for more information.\n\n#### pct_black\/hispanic\t - Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n\n#### pct_free\/reduced\t- Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n\n#### county_connections_ratio - ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See FCC data for more information.\n\n#### pp_total_raw - Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district.\n"}}