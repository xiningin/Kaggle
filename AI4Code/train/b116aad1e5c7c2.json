{"cell_type":{"bb7b62df":"code","21f36fbd":"code","60626888":"code","644e8993":"code","7c07091f":"code","f98101ba":"code","2ab08497":"code","ec7aabb7":"code","4f941306":"code","cba931d9":"code","c9b59f49":"code","7096a652":"code","45ca6acc":"code","28edafc6":"code","4cfdf2d1":"code","00754750":"code","6069f6b5":"code","c0bf8e27":"code","42b0a298":"code","5e6ffab3":"code","346760d5":"code","6876563c":"code","de56d058":"code","caa0a4c7":"code","50281dfc":"code","55d98fff":"markdown","6b847506":"markdown","aa28d3cd":"markdown","e77e8eeb":"markdown","2f07712e":"markdown","5f7cb5d0":"markdown","daa1aeac":"markdown","66a355c3":"markdown","68b3e869":"markdown","d9ed9da5":"markdown","9747f12f":"markdown","ce869299":"markdown","6bfda00f":"markdown"},"source":{"bb7b62df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nimport itertools\n%matplotlib inline\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","21f36fbd":"df=pd.read_csv('..\/input\/Concrete_Data_Yeh.csv')","60626888":"df.head()","644e8993":"df.info()","7c07091f":"df.corr()","f98101ba":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","2ab08497":"data=df.copy()\ndata['cement']=data['cement']\/max(data['cement'])\ndata['csMPa']=data['csMPa']\/max(data['csMPa'])\n                  ","ec7aabb7":"data.head()","4f941306":"g=sns.jointplot(data.cement,data.csMPa,kind=\"kde\",size=7)\nplt.savefig('graph.png')\nplt.show()","cba931d9":"g=sns.jointplot(\"cement\",\"csMPa\",data=data,size=5,color=\"r\")","c9b59f49":"df.cement.mean()","7096a652":"cols=[i for i in data.columns if i not in \"csMPa\"]\nlength=len(cols)\ncs = [\"b\",\"r\",\"g\",\"c\",\"m\",\"k\",\"lime\",\"c\"]\nfig = plt.figure(figsize=(13,25))\nfor i,j,k in itertools.zip_longest(cols,range(length),cs):\n    plt.subplot(4,2,j+1)\n    ax=sns.distplot(df[i],color=k,rug=True)\n    ax.set_facecolor(\"w\")\n    plt.legend(loc=\"best\")\n    plt.axvline(df[i].mean(),linestyle=\"dashed\",label=\"mean\",color=\"k\")\n\n    plt.title(i,color=\"navy\")\n    plt.xlabel(\"\")","45ca6acc":"plt.figure(figsize=(13,6))\nsns.distplot(df[\"csMPa\"],color=\"b\",rug=True)\nplt.axvline(df[\"csMPa\"].mean(),\n            linestyle=\"dashed\",color=\"k\",\n            label=\"mean\",linewidth=2)\nplt.legend(loc=\"best\",prop={\"size\":14})\nplt.title(\"Compressive strength distription\")\nplt.show()","28edafc6":"sns.pairplot(df,markers=\"h\")\nplt.show()","4cfdf2d1":"data.columns.value_counts().index","00754750":"sns.lmplot(x=\"cement\",y=\"water\",data=df)\nplt.show()","6069f6b5":"cols=[i for i in df.columns if i not in 'csMPa']\nlength=len(cols)\nplt.figure(figsize=(13,27))\nfor i,j in itertools.zip_longest(cols,range(length)):\n    plt.subplot(4,2,j+1)\n    sns.kdeplot(df[i],\n               df[\"csMPa\"],\n               cmap=\"hot\",\n               shade=True)\n    plt.title(i+\" & compressive_strength\",color=\"navy\")","c0bf8e27":"cols = ['cement', 'slag', 'flyash', 'water', 'superplasticizer',\n       'coarseaggregate', 'fineaggregate', 'age', 'csMPa'] \n\n\n\nlength = len(cols)\n\nplt.figure(figsize=(12,25))\n\nfor i,j in itertools.zip_longest(cols,range(length)):\n    \n    plt.subplot(3,3,j+1)\n    ax = sns.swarmplot( y = df[i],color=\"blue\")\n    ax.set_facecolor(\"w\")\n    ax.set_ylabel(\"\")\n    ax.set_title(i,color=\"navy\")\n    plt.subplots_adjust(wspace = .3)","42b0a298":"def label(df):\n    if df[\"age\"] <= 30:\n        return \"1 month\"\n    if df[\"age\"] > 30 and df[\"age\"] <= 60 :\n        return \"2 months\"\n    if df[\"age\"] > 60 and df[\"age\"] <= 90 :\n        return \"3 months\"\n    if df[\"age\"] > 90 and df[\"age\"] <= 120 :\n        return \"4 months\"\n    if df[\"age\"] > 120 and df[\"age\"] <= 150 :\n        return \"5 months\"\n    if df[\"age\"] > 150 and df[\"age\"] <= 180 :\n        return \"6 months\"\n    if df[\"age\"] > 180 and df[\"age\"] <= 210 :\n        return \"7 months\"\n    if df[\"age\"] > 210 and df[\"age\"] <= 240 :\n        return \"8 months\"\n    if df[\"age\"] > 240 and df[\"age\"] <= 270 :\n        return \"9 months\"\n    if df[\"age\"] > 270 and df[\"age\"] <= 300 :\n        return \"10 months\"\n    if df[\"age\"] > 300 and df[\"age\"] <= 330 :\n        return \"11 months\"\n    if df[\"age\"] > 330 :\n        return \"12 months\"\ndf[\"age_months\"] = df.apply(lambda df:label(df) , axis=1)","5e6ffab3":"plt.figure(figsize=(12,5))\norder = ['1 month','2 months', '3 months','4 months','6 months','9 months', '12 months']\nax = sns.countplot(df[\"age_months\"],\n                   order=order,linewidth=2,\n                   edgecolor = \"k\"*len(order),\n                   palette=[\"w\"])\nax.set_facecolor(\"royalblue\")\nplt.title(\"age distribution in months\")\nplt.grid(True,alpha=.3)\nplt.show()","346760d5":"age_mon=df.groupby(\"age_months\")[\"csMPa\"].describe().reset_index()\nage_mon","6876563c":"age_mon=df.groupby(\"age_months\")[\"csMPa\"].describe().reset_index()\n\norder  = ['1 month','2 months', '3 months','4 months','6 months','9 months', '12 months']\ncols   = [ 'mean', 'std' , 'min' , 'max']\nlength=len(cols)\ncs     = [\"b\",\"orange\",\"white\",\"r\"] \n\nfig=plt.figure(figsize=(13,15))\nfor i,j,k in itertools.zip_longest(cols,range(length),cs):\n    plt.subplot(4,1,j+1)\n    ax=sns.pointplot(\"age_months\",i,data=age_mon,\n                    order=order,\n                    markers=\"H\",\n                    linestyles=\"dotted\",color=k)\n    plt.subplots_adjust(hspace=.5)\n    ax.set_facecolor(\"k\")\n    plt.title(i+\"-compressive strength by months\",color=\"navy\")","de56d058":"fig=plt.figure(figsize=(13,8))\nax=fig.add_subplot(111)\nplt.scatter(df[\"water\"],df[\"cement\"],\n           c=df[\"csMPa\"],s=df[\"csMPa\"]*3,\n           linewidth=1,edgecolor=\"k\",cmap=\"viridis\")\nax.set_facecolor(\"w\")\nax.set_xlabel(\"water\")\nax.set_ylabel(\"cement\")\nlab=plt.colorbar()\nplt.title(\"scatter plot between cement and water\")\nplt.grid(True,alpha=.3)\nplt.show()","caa0a4c7":"df.head()","50281dfc":"fig=plt.figure(figsize=(13,8))\nax=fig.add_subplot(111)\nplt.scatter(df[\"coarseaggregate\"],df[\"fineaggregate\"],c=df[\"csMPa\"],s=df[\"csMPa\"]*3,\n           linewidth=1,edgecolor=\"k\",cmap=\"viridis_r\")\nax.set_facecolor(\"w\")\nax.set_xlabel(\"coarseaggregate\")\nax.set_ylabel(\"fineaggregate\")\nlab = plt.colorbar()\nlab.set_label(\"compressive_strength\")\nplt.title(\"scatter plot between fine_agg and coarse_agg\")\nplt.grid(True,alpha=.3)\nplt.show()","55d98fff":"<a id=\"8\"><\/a> \n## Bar Plot \n    Bar chart by concrete age","6b847506":"<a id=\"3\"><\/a> \n## Dist Plot\n    Distribution graph of each data","aa28d3cd":"   Compressive strength distribution","e77e8eeb":"<a id=\"10\"><\/a> \n## Scatter Plot","2f07712e":"<a id=\"7\"><\/a> \n## Swarm Plot for variables","5f7cb5d0":"<a id=\"2\"><\/a> \n## Joint Plot\n    Compressive strength vs cement","daa1aeac":"<a id=\"5\"><\/a> \n## Lm Plot of water and cement","66a355c3":"<a id=\"6\"><\/a> \n## Kde Plot\n    Contour plot between ingredients and compressive strength","68b3e869":"<a id=\"1\"><\/a> \n## Heatmap according to each metarial","d9ed9da5":"<a id=\"4\"><\/a> \n##  Pair plot between variables","9747f12f":"# INTRODUCTION\n1. Read datas\n1. Concrete design \n1. Materials ,strength and age\n    <br>\n    <br>\n    Plot Contents:\n* [Heatmap](#1)\n* [Joint Plot](#2)\n* [Dist Plot](#3)\n* [Pair Plot](#4)\n* [Lm Plot](#5)\n* [Kde Plot](#6)\n* [Swarm Plot](#7)\n* [Bar Plot](#8)\n* [Point Plot](#9)\n* [Scatter Plot](#10)\n","ce869299":"## Datas property\n<br> \n  ### Components of concrete:\n        * Cement (component 1) -- quantitative -- kg in a m3 mixture -- Input Variable    \n        * Blast Furnace Slag (component 2) -- quantitative -- kg in a m3 mixture -- Input Variable    \n        * Fly Ash (component 3) -- quantitative -- kg in a m3 mixture -- Input Variable\n        * Water (component 4) -- quantitative -- kg in a m3 mixture -- Input Variable\n        * Superplasticizer (component 5) -- quantitative -- kg in a m3 mixture -- Input Variable\n        * Coarse Aggregate (component 6) -- quantitative -- kg in a m3 mixture -- Input Variable\n        * Fine Aggregate (component 7) -- quantitative -- kg in a m3 mixture -- Input Variable\n        * Age -- quantitative -- Day (1~365) -- Input Variable\n        * Concrete compressive strength -- quantitative -- MPa(megapascals) -- Output Variable","6bfda00f":"<a id=\"9\"><\/a> \n## Point Plot\n    Graphs by statistics"}}