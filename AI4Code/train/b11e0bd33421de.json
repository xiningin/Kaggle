{"cell_type":{"6f7437ac":"code","7c5400ac":"code","99dda841":"code","7df51706":"code","090e4314":"code","66cb33b1":"code","fc349b10":"code","a35cd34a":"code","4779d75f":"code","993a2bf4":"code","a578186f":"code","8884e2d7":"code","4d138b03":"code","254c0e1d":"code","6b0d90b5":"code","0ff255d9":"code","3eb8b092":"code","35edaa69":"code","2af05b9c":"code","67a14a2d":"code","010b64cf":"code","d456550c":"code","613b9911":"code","2cbc767b":"code","a057d523":"code","e75d22d6":"code","b1c645d2":"code","5ff70018":"code","a4035eca":"code","e783b729":"code","20d4f2e8":"code","110e5f9a":"code","d18ff47e":"code","3857824b":"code","f3c0cbf9":"code","f8952026":"code","b8a84fa4":"code","57c8355e":"code","80ecfc21":"code","31b61782":"code","e17d4945":"code","1a63fe49":"code","bfbdfc50":"code","d1bf0ece":"code","43532022":"code","345b0367":"code","b59e2ec5":"code","f4b03044":"code","b6a2a6c4":"code","7b6ba052":"code","94193705":"code","4851baa9":"code","dafbd73a":"code","bc7f9535":"code","4ccca70e":"code","f3d700a1":"code","8bffc06a":"code","5eb4267a":"code","82fa0a67":"code","a107417c":"code","0f64a45e":"code","405a0647":"code","2dbbe848":"code","38a14114":"code","8fea06f3":"code","1ff08a52":"code","16d45501":"code","ddebcac4":"code","ef98fbeb":"code","12c5b9b8":"code","1b179553":"code","3ec5233e":"code","831855f4":"code","35630560":"code","b3f449df":"code","0087cb82":"code","88453c38":"code","2453fbc8":"code","484cf514":"code","d23b780e":"code","0bf3ec62":"code","bf4653d5":"code","7832926a":"code","609bf708":"code","53178853":"markdown","92bc0414":"markdown","71991c5c":"markdown","b679e8af":"markdown","ce8a3bcd":"markdown","bab6d77c":"markdown","fa316e98":"markdown","af2a64bf":"markdown","707b0cd7":"markdown","b226274b":"markdown","3dd3ddcf":"markdown","8409af22":"markdown","8e3d5876":"markdown","cc3e6546":"markdown","5e4a9f38":"markdown","040b7a51":"markdown","2022cde0":"markdown","f038c9ec":"markdown","2e15f9f9":"markdown","87e4d5fa":"markdown","9ef6fe74":"markdown","a55c6778":"markdown","7bdb6c6b":"markdown","69af8d3a":"markdown","3f4ba2b8":"markdown","e8a2df0e":"markdown","70f0412c":"markdown","7ea5ffc1":"markdown","ee656079":"markdown","ac3ab579":"markdown","07d06d28":"markdown","1306e081":"markdown","3ea69e72":"markdown","940263a1":"markdown","f3cc8899":"markdown","b9fdbe18":"markdown"},"source":{"6f7437ac":"# Importing packages\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7c5400ac":"# Loading data\ndf_coffee = pd.read_csv(\"..\/input\/coffee-quality-database-from-cqi\/merged_data_cleaned.csv\")","99dda841":"# Checking the size of dataset\ndf_coffee.shape","7df51706":"# There are 44 variables, not all of them are useful.\ndf_coffee.columns","090e4314":"# Selecting the useful variables.\ncolumn_names = ['Species', 'Country.of.Origin', 'Region', 'Harvest.Year', 'Grading.Date','Variety', 'Processing.Method', \n                'Aroma', 'Flavor','Aftertaste', 'Acidity', 'Body', 'Balance', 'Uniformity', 'Clean.Cup', 'Sweetness', \n                'Cupper.Points','Total.Cup.Points', 'Moisture', 'Category.One.Defects', 'Quakers','Color', \n                'Category.Two.Defects', 'altitude_low_meters', 'altitude_high_meters', 'altitude_mean_meters']","66cb33b1":"# Filtering the dataset.\ndf = df_coffee[column_names]\ndf.shape","fc349b10":"# Checking the new dataset.\ndf.head(10)","a35cd34a":"# Checking datatype.\ndf.info()","4779d75f":"# In order to analyze the dataset better, it'll be splitted in measures, beans and origin.\nmeasures = ['Aroma', 'Flavor','Aftertaste', 'Acidity', 'Body', 'Balance', 'Uniformity', 'Clean.Cup', 'Sweetness', \n             'Cupper.Points','Total.Cup.Points']\n\nbeans = ['Species', 'Harvest.Year', 'Grading.Date','Variety', 'Processing.Method', 'Moisture', 'Category.One.Defects', \n        'Quakers','Color', 'Category.Two.Defects']\n\norigin = ['Country.of.Origin', 'Region', 'altitude_low_meters', 'altitude_high_meters', 'altitude_mean_meters']","993a2bf4":"# Checkin the dataset filtered by measures.\ndf[measures].head(20)","a578186f":"# Checking missing values. \ndf[measures].isna().sum()","8884e2d7":"# Checking the distribution of each one.\nsns.set(style=\"darkgrid\")\n\nfig,axs = plt.subplots(5, 2, figsize=(15, 20))\n\nsns.histplot(data=df, x=\"Aroma\", kde=True, color=\"skyblue\", ax=axs[0, 0])\nsns.histplot(data=df, x=\"Flavor\", kde=True, color=\"olive\", ax=axs[0, 1])\nsns.histplot(data=df, x=\"Aftertaste\", kde=True, color=\"gold\", ax=axs[1, 0])\nsns.histplot(data=df, x=\"Acidity\", kde=True, color=\"teal\", ax=axs[1, 1])\nsns.histplot(data=df, x=\"Body\", kde=True, color=\"skyblue\", ax=axs[2, 0])\nsns.histplot(data=df, x=\"Balance\", kde=True, color=\"olive\", ax=axs[2, 1])\nsns.histplot(data=df, x=\"Uniformity\", kde=True, color=\"gold\", ax=axs[3, 0])\nsns.histplot(data=df, x=\"Clean.Cup\", kde=True, color=\"teal\", ax=axs[3, 1])\nsns.histplot(data=df, x=\"Sweetness\", kde=True, color=\"gold\", ax=axs[4, 0])\nsns.histplot(data=df, x=\"Cupper.Points\", kde=True, color=\"teal\", ax=axs[4, 1])\n\nplt.show()","4d138b03":"# Checing correlation\ncorr = df[measures[0:-1]].corr()\n\n# Set up the matplotlib figure\nax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(250, 20, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap=cmap, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","254c0e1d":"# Checkin the relation throughout Scatterplots.\n\nsns.set(style=\"darkgrid\")\n\nfig, axs = plt.subplots(3, 3, figsize=(15, 20))\n\nsns.scatterplot(data=df, y=\"Aroma\", x = \"Cupper.Points\", color=\"skyblue\", ax=axs[0, 0])\nsns.scatterplot(data=df, y=\"Flavor\", x = \"Cupper.Points\", color=\"olive\", ax=axs[0, 1])\nsns.scatterplot(data=df, y=\"Aftertaste\", x = \"Cupper.Points\", color=\"gold\", ax=axs[0, 2])\nsns.scatterplot(data=df, y=\"Acidity\", x = \"Cupper.Points\", color=\"teal\", ax=axs[1, 0])\nsns.scatterplot(data=df, y=\"Body\", x = \"Cupper.Points\", color=\"skyblue\", ax=axs[1, 1])\nsns.scatterplot(data=df, y=\"Balance\", x = \"Cupper.Points\",  color=\"olive\", ax=axs[1, 2])\nsns.scatterplot(data=df, y=\"Uniformity\", x = \"Cupper.Points\", color=\"gold\", ax=axs[2, 0])\nsns.scatterplot(data=df, y=\"Clean.Cup\", x = \"Cupper.Points\", color=\"teal\", ax=axs[2, 1])\nsns.scatterplot(data=df, y=\"Sweetness\", x = \"Cupper.Points\", color=\"gold\", ax=axs[2, 2])\n\nplt.show()","6b0d90b5":"# Checking the dataset filtered by origin.\ndf[origin].head(20)","0ff255d9":"# Checking missing data\ndf[origin].isna().sum()","3eb8b092":"# Checkin missing data in variable Country.of.Origin\ndf[df['Country.of.Origin'].isna()]","35edaa69":"# There are a lot of missing values in this observation, it'll be dropped. \ndf.drop(index = 1197, inplace = True)","2af05b9c":"# Checking the regions \ndf.Region.unique()","67a14a2d":"# It's a huge list!\nlen(df.Region.unique())","010b64cf":"# Checking missing values\ndf[origin][df['Region'].isna()]","d456550c":"# These NaN will be replaced by Unknown.\ndf['Region'][df['Region'].isna()] = 'Unknown'","613b9911":"# Checking the variable Country.of.Origin.\ndf['Country.of.Origin'].value_counts()","2cbc767b":"# Replacing 'Tanzania, United Republic Of' by Tanzania.\ndf['Country.of.Origin'][df['Country.of.Origin'] == 'Tanzania, United Republic Of'] = 'Tanzania'","a057d523":"#Replacing 'Cote d?Ivoire' by Cote d'Ivoire.\ndf['Country.of.Origin'][df['Country.of.Origin'] == 'Cote d?Ivoire'] = \"Cote d'Ivoire\"","e75d22d6":"# Checking the variable of altitude grouping by Country of origin.\ndf[origin].groupby('Country.of.Origin').mean()","b1c645d2":"# Checking the altitude in Nicaragua\ndf[origin][df['Country.of.Origin'] == 'Nicaragua']","5ff70018":"# Checking higher altitudes.\ndf[origin][(df.altitude_mean_meters > 2000) | (df.altitude_high_meters > 2000)]","a4035eca":"# Checking altitude from Brasil, cerrado region.\ndf[origin][(df['Country.of.Origin'] == 'Brazil') & (df['Region'] == 'cerrado')]","e783b729":"# Replacing values.\ndf['altitude_low_meters'][df['altitude_low_meters'] == 11000] = 1100\ndf['altitude_high_meters'][df['altitude_high_meters'] == 11000] = 1100\ndf['altitude_mean_meters'][df['altitude_mean_meters'] == 11000] = 1100","20d4f2e8":"# Checking altitude from Guatemala, region huehuetenango.\ndf[origin][(df['Country.of.Origin'] == 'Guatemala') & (df['Region'] == 'huehuetenango')]","110e5f9a":"# Filtering the dataset by region and value 190164 and then replacing the value altitude_low_meters by the region's average.\ndf['altitude_low_meters'][(df.altitude_low_meters == 190164) &\n                         (df.Region == 'huehuetenango')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'huehuetenango')\n                                                                                        & (df['altitude_low_meters'] < 10000)].mean()\n\n# Filtering the dataset by region and value 190164 and then replacing the value altitude_high_meters by the region's average.\ndf['altitude_high_meters'][(df.altitude_high_meters == 190164) &\n                         (df.Region == 'huehuetenango')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'huehuetenango')\n                                                                                        & (df['altitude_high_meters'] < 10000)].mean()\n\n# Filtering the dataset by region and value 190164 and then replacing the value altitude_mean_meters by the region's average.\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 190164) &\n                         (df.Region == 'huehuetenango')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'huehuetenango')\n                                                                                        & (df['altitude_mean_meters'] < 10000)].mean()","d18ff47e":"# Checking altitude from Guatemala, region oriente.\ndf[origin][(df['Country.of.Origin'] == 'Guatemala') & (df['Region'] == 'oriente')].tail(30)","3857824b":"# Filtering the dataset by region and value 190164 and then replacing the value altitude_low_meters by the region's average.\ndf['altitude_low_meters'][(df.altitude_low_meters == 190164) &\n                         (df.Region == 'oriente')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')\n                                                                                        & (df['altitude_low_meters'] < 10000)].mean()\n\n# Filtering the dataset by region and value 190164 and then replacing the value altitude_high_meters by the region's average.\ndf['altitude_high_meters'][(df.altitude_high_meters == 190164) &\n                         (df.Region == 'oriente')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')\n                                                                                        & (df['altitude_high_meters'] < 10000)].mean()\n\n# Filtering the dataset by region and value 190164 and then replacing the value altitude_mean_meters by the region's average.\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 190164) &\n                         (df.Region == 'oriente')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')\n                                                                                        & (df['altitude_mean_meters'] < 10000)].mean()","f3c0cbf9":"# Checking altitude from Nicaragua, region jinotega.\ndf[origin][(df['Country.of.Origin'] == 'Nicaragua') & (df['Region'] == 'jinotega')]","f8952026":"# Filtering the dataset where the altitude value is equal to 110000 and replacing by 1100. \ndf['altitude_low_meters'][df['altitude_low_meters'] == 110000] = 1100\ndf['altitude_high_meters'][df['altitude_high_meters'] == 110000] = 1100\ndf['altitude_mean_meters'][df['altitude_mean_meters'] == 110000] = 1100","b8a84fa4":"# Checking the lower altitudes. \ndf[origin][(df.altitude_mean_meters < 300) | (df.altitude_high_meters < 300)]","57c8355e":"# Checking the altitude from south of minas \ndf[origin][(df['Country.of.Origin'] == 'Brazil') & (df['Region'] == 'south of minas')]","80ecfc21":"# Filtering the dataset by region and altitude value = 1, and then replacing the value altitude_low_meters by the region's average.\ndf['altitude_low_meters'][(df.altitude_low_meters == 1) &\n                         (df.Region == 'south of minas')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Brazil')\n                                                                                        & (df['Region'] == 'south of minas')\n                                                                                        & (df['altitude_low_meters'] > 1)].mean()\n\n# Filtering the dataset by region and altitude value = 1, and then replacing the value altitude_high_meters by the region's average.\ndf['altitude_high_meters'][(df.altitude_high_meters == 1) &\n                         (df.Region == 'south of minas')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Brazil')\n                                                                                        & (df['Region'] == 'south of minas')\n                                                                                        & (df['altitude_high_meters'] > 1)].mean()\n\n# Filtering the dataset by region and altitude value = 1, and then replacing the value altitude_mean_meters by the region's average.\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 1) &\n                         (df.Region == 'south of minas')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Brazil')\n                                                                                        & (df['Region'] == 'south of minas')\n                                                                                        & (df['altitude_mean_meters'] > 1)].mean()","31b61782":"# Checking the region sul de minas - carmo de minas\ndf[origin][(df['Country.of.Origin'] == 'Brazil') & (df['Region'] == 'sul de minas - carmo de minas')]","e17d4945":"# Checking the region \"carmo de minas\" \ndf[origin][(df['Country.of.Origin'] == 'Brazil') & (df['Region'] == 'carmo de minas')]","1a63fe49":"# Replacing the altitude values\ndf['altitude_low_meters'][df.Region == 'sul de minas - carmo de minas'] = 1250\ndf['altitude_high_meters'][df.Region == 'sul de minas - carmo de minas'] = 1250\ndf['altitude_mean_meters'][df.Region == 'sul de minas - carmo de minas'] = 1250\n\n# Replacing region\ndf['Region'][df['Region'] == 'sul de minas - carmo de minas'] = 'carmo de minas'","bfbdfc50":"# Checking the altitude from Kenya\ndf[origin][df['Country.of.Origin'] == 'Kenya']","d1bf0ece":"# Replacing altitude values\ndf['altitude_high_meters'][(df.altitude_high_meters == 1) &(df['Country.of.Origin'] == 'Kenya')] = 500\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 1) &(df['Country.of.Origin'] == 'Kenya')] = 250.5\n\n# Replacing region from Unknow to Kenya\ndf['Region'][(df['Region'] == 'Unknown') &\n            (df['Country.of.Origin'] == 'Kenya') &\n          (df['altitude_low_meters'].isna() == False)] = 'Kenya'","43532022":"# Checking region oriente from Guatemala\ndf[origin][(df['Country.of.Origin'] == 'Guatemala') & (df['Region'] == 'oriente')].head(40)","345b0367":"# Replacing 157.8864 by the average of the region\ndf['altitude_low_meters'][(df.altitude_low_meters == 157.8864) &\n                         (df.Region == 'oriente')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')].mean()\n# Replacing 157.8864 by the average of the region\ndf['altitude_high_meters'][(df.altitude_high_meters == 157.8864) &\n                         (df.Region == 'oriente')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')].mean()\n# Replacing 157.8864 by the average of the region\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 157.8864) &\n                         (df.Region == 'oriente')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Guatemala')\n                                                                                        & (df['Region'] == 'oriente')].mean()","b59e2ec5":"# Checking the altitude of region sul de minas\ndf[origin][(df['Country.of.Origin'] == 'Brazil') & (df['Region'] == 'sul de minas')]","f4b03044":"# Replacing value 125 by 1250 \ndf['altitude_low_meters'][(df['Region'] == 'sul de minas') & (df['altitude_low_meters'] == 125)] = 1250\ndf['altitude_high_meters'][(df['Region'] == 'sul de minas') & (df['altitude_high_meters'] == 125)] = 1250\ndf['altitude_mean_meters'][(df['Region'] == 'sul de minas') & (df['altitude_mean_meters'] == 125)] = 1250","b6a2a6c4":"# Checking the region veracruz\ndf[origin][(df['Country.of.Origin'] == 'Mexico') & (df['Region'] == 'veracruz')]","7b6ba052":"# Replacing 100 by the average of the region\ndf['altitude_low_meters'][(df.altitude_low_meters == 100) &\n                         (df.Region == 'veracruz')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Mexico')\n                                                                                        & (df['Region'] == 'veracruz')].mean()\n# Replacing 100 by the average of the region\ndf['altitude_high_meters'][(df.altitude_high_meters == 100) &\n                         (df.Region == 'veracruz')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Mexico')\n                                                                                        & (df['Region'] == 'veracruz')].mean()\n# Replacing 100 by the average of the region\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 100) &\n                         (df.Region == 'veracruz')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Mexico')\n                                                                                        & (df['Region'] == 'veracruz')].mean()","94193705":"# Checking the region amatenango de la frontera\ndf[origin][df['Region'] == 'amatenango de la frontera']","4851baa9":"# Replacing the value 12 by 1600\ndf['altitude_low_meters'][(df.altitude_low_meters == 12) & (df['Region'] == 'amatenango de la frontera')] = 1600\ndf['altitude_high_meters'][(df.altitude_high_meters == 12) &(df['Region'] == 'amatenango de la frontera')] = 1600\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 12) &(df['Region'] == 'amatenango de la frontera')] = 1600","dafbd73a":"# Checking the region turrialba\ndf[origin][df['Region'] == 'turrialba']","bc7f9535":"# Replacing 13 by 650\ndf['altitude_low_meters'][(df.altitude_low_meters == 13) & (df['Region'] == 'turrialba')] = 650\ndf['altitude_high_meters'][(df.altitude_high_meters == 13) &(df['Region'] == 'turrialba')] = 650\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 13) &(df['Region'] == 'turrialba')] = 650","4ccca70e":"# Verificando a regi\u00e3o amatenango de terrazul\ndf[origin][df['Region'] == 'tarrazu']","f3d700a1":"# Replacing the value 185 by the average of the region.\n\ndf['altitude_low_meters'][(df.altitude_low_meters == 185) &\n                         (df.Region == 'tarrazu')] = df['altitude_low_meters'][(df['Country.of.Origin'] == 'Costa Rica')\n                                                                                        & (df['Region'] == 'tarrazu')].mean()\n\ndf['altitude_high_meters'][(df.altitude_high_meters == 185) &\n                         (df.Region == 'tarrazu')] = df['altitude_high_meters'][(df['Country.of.Origin'] == 'Costa Rica')\n                                                                                        & (df['Region'] == 'tarrazu')].mean()\n\ndf['altitude_mean_meters'][(df.altitude_mean_meters == 185) &\n                         (df.Region == 'tarrazu')] = df['altitude_mean_meters'][(df['Country.of.Origin'] == 'Costa Rica')\n                                                                                        & (df['Region'] == 'tarrazu')].mean()","8bffc06a":"# Selecting Country of origin and region\ncountry = df['Country.of.Origin'].unique()\nregion = df['Region'].unique()","5eb4267a":"# Replacing missing values\n# For each country it's gonna check each region\nfor c in country: \n    for r in region:\n        # If it is a \"Unknown\" region the NaN will be replaced by the average of the country of origin\n        if r == 'Unknown': \n            high = df['altitude_high_meters'][df['Country.of.Origin'] == c].mean()\n            low = df['altitude_low_meters'][(df['Country.of.Origin'] == c)].mean()\n            mean = df['altitude_mean_meters'][(df['Country.of.Origin'] == c)].mean()\n        # If there are only NaN in altitude values, the NaN will be replaced by the average of the country of origin\n        else:\n            if df['altitude_high_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean() > 1:\n                high = df['altitude_high_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean()\n            else:\n                high = df['altitude_high_meters'][df['Country.of.Origin'] == c].mean()\n            \n            if df['altitude_low_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean() > 1: \n                low = df['altitude_low_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean()\n            else:\n                low = df['altitude_low_meters'][df['Country.of.Origin'] == c].mean()            \n            \n            if df['altitude_mean_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean() > 1:\n                mean = df['altitude_mean_meters'][(df['Country.of.Origin'] == c) & (df['Region'] == r)].mean()\n            else:\n                mean = df['altitude_mean_meters'][df['Country.of.Origin'] == c].mean()                    \n\n        # Replacing NaN by average        \n        df['altitude_low_meters'][(df['altitude_low_meters'].isna()) & \n                                  (df['Country.of.Origin'] == c) & \n                                  (df['Region'] == r)] = low\n        df['altitude_high_meters'][(df['altitude_high_meters'].isna()) &\n                                   (df['Country.of.Origin'] == c) &\n                                   (df['Region'] == r)] = high\n        df['altitude_mean_meters'][(df['altitude_mean_meters'].isna()) & \n                                   (df['Country.of.Origin'] == c) & \n                                   (df['Region'] == r)] = mean\n            \n        ","82fa0a67":"# Checking the altitude grouping by country of origin after modifications\ndf[origin].groupby('Country.of.Origin').mean()","a107417c":"# Checking statistics data.\ndf[origin].describe()","0f64a45e":"# Creating groups based on distribution: 0-1000, 1000-1300, 1300-1600, > 1600\ngroups = []\n\nfor i in df.altitude_mean_meters:\n    if i <= 1000:\n        groups.append(\"0 - 1000\")\n    elif i > 1000 and i <= 1300:\n        groups.append(\"1000 - 1300\")\n    elif i > 1300 and i <= 1600:\n        groups.append(\"1300 - 1600\")\n    elif i > 1600:\n        groups.append(\"> 1600\")\n\n# Adding this new variable to dataset\ndf['groups'] = groups","405a0647":"# Checking the groups distribution.\nsns.set(style=\"darkgrid\")\nsns.histplot(data=df, y=\"groups\", kde=True, color=\"skyblue\")\nplt.show()","2dbbe848":"# Creating groups: 0-500, 500-1000, 1000-1200, 1200-1400, 1400-1600, 1600-1800, > 1800\ngroups = []\n\nfor i in df.altitude_mean_meters:\n    if i <= 500:\n        groups.append(\"0 - 500\")\n    elif i > 500 and i <= 1000:\n        groups.append(\"500 - 1000\")\n    elif i > 1000 and i <= 1200:\n        groups.append(\"1000 - 1200\")\n    elif i > 1200 and i <= 1400:\n        groups.append(\"1200 - 1400\")\n    elif i > 1400 and i <= 1600:\n        groups.append(\"1400 - 1600\")\n    elif i > 1600 and i <= 1800:\n        groups.append(\"1600 - 1800\")\n    elif i > 1800:\n        groups.append(\"> 1800\")\n\n# Adding this variable to dataset\ndf['groups'] = groups","38a14114":"# Checking the groups distribution.\nsns.set(style=\"darkgrid\")\nsns.histplot(data=df, y=\"groups\", kde=True, color=\"skyblue\")\nplt.show()","8fea06f3":"# Checking the dataset, filtering by beans.\ndf[beans].head(20)","1ff08a52":"# Checking missing values\ndf[beans].isna().sum()","16d45501":"# Checking species\ndf.Species.value_counts()","ddebcac4":"# Replacing NaN values by Unknown\ndf['Harvest.Year'][df['Harvest.Year'].isna()] = 'Unknown'","ef98fbeb":"# Checking Harvest year\ndf['Harvest.Year'].value_counts()","12c5b9b8":"# Replacing values\nharvest = []\nfor i in df['Harvest.Year']:\n    if re.search(\"[2][0]\\d\\d\", i):\n        year = re.search(\"[2][0]\\d\\d\", i).group()\n        harvest.append(year)\n    elif re.search(\"\\d\\d\", i):\n        aux = re.search('\\d\\d', i).group()\n        year = '20'+aux\n        harvest.append(year)\n    else:\n        harvest.append('Unknown')\n\ndf['Harvest.Year'] = harvest","1b179553":"# Checking Harvest year after modifications\ndf['Harvest.Year'].value_counts()","3ec5233e":"# Checking Variety\ndf.Variety.value_counts()","831855f4":"# Replacing NaN\ndf['Variety'][df.Variety.isna()] = 'Other'","35630560":"# Checking processing method\ndf['Processing.Method'].value_counts()","b3f449df":"# Replacing values\ndf['Processing.Method'][df['Processing.Method'].isna()] = 'Other'","0087cb82":"# Checking Color\ndf['Color'].value_counts()","88453c38":"# Replacing values\ndf['Color'][df['Color'].isna()] = 'None'","2453fbc8":"# Checking missing value in Quakers\ndf[df.Quakers.isna()]","484cf514":"# Checking Quakers\ndf['Quakers'].value_counts()","d23b780e":"# Replacing NaN by 0, the mode of the variable. \ndf['Quakers'][df.Quakers.isna()] = 0","0bf3ec62":"# Checking the average points grouping by country of origin\ndf[['Total.Cup.Points', 'Country.of.Origin']].groupby('Country.of.Origin').mean().sort_values(by = 'Total.Cup.Points', \n                                                                                              ascending =False)","bf4653d5":"# Filtering the dataset by country of origin \ndf[df['Country.of.Origin'] == 'United States']","7832926a":"# Replacing the country of origin\ndf['Country.of.Origin'][df['Region'] == 'antioquia'] = 'Colombia'\ndf['Country.of.Origin'][df['Region'] == 'berastagi'] = 'Indonesia'\ndf['Country.of.Origin'][df['Region'] == 'chikmagalur'] = 'India'\ndf['Country.of.Origin'][df['Region'] == 'kwanza norte province, angola'] = 'Angola'","609bf708":"# Outputing the dataset cleaned.\n# df.to_csv(\"coffee.csv\")","53178853":"In order to create a visualization, the altitude values will be splitted in groups.","92bc0414":"There are only two observations from turrialba and the altitude values are the same, 13 meters. Throughout a quick research on Google it's possible to find the mean elevation of this region, 650 meters. These values will be replaced by 650.","71991c5c":"### Measures\n\nThese variables contain data from grades received for each one.","b679e8af":"After the checking in small groups, Measure, Beans and Origin, it's time to check the dataset complete. ","ce8a3bcd":"### Beans\nThese variables contain information regarding the beans, such as Harvest year or Processing method.","bab6d77c":"There is something strange regarding these values. The average altitude in Nicar\u00e1gua is not 7142, definitely not!","fa316e98":"There are other regions with close values (1100 meters) of altitude and more real. This value is not far from the mean as well.\n\nThe wrong value will be replaced by them.","af2a64bf":"# Coffee Quality database from CQI\n\n### A database scrapped from Coffee Quality Institute\n\n\n\n\n\nThis Dataset was gathered from [here](https:\/\/www.kaggle.com\/volpatto\/coffee-quality-database-from-cqi).\nThere's also a [GitHub's repo](https:\/\/github.com\/jldbc\/coffee-quality-database), see there for further details.\n\n","707b0cd7":"There is only one observation to compare, in this case the value 12 will be replaced by the  only one it lasts, 1600.","b226274b":"There are 225 missing values in Variety. Since this variable already has a value \"Other\", the missing values will be replaced by Other.","3dd3ddcf":"### Origin\n\nThese variables contain information from the origin of the coffee, such as Country and Region.**","8409af22":"Just like the variable Variety, Processing Method also has a lot of missing values, and also has a category Other. The NaN will be replaced by Other as well.","8e3d5876":"Next step: Make predictions.","cc3e6546":"The 4th highest punctuation is United States, which is strange, because the United States has never been a reference in this field.","5e4a9f38":"These values, around 1200 meters, are more appropriate to that region. The region \"sul de minas - carmo de minas\" will be replaced by \"carmo de minas\", as well as the altitude value.","040b7a51":"### DataViz\n\nThat's enough for a while. With this dataset cleaned will be created a Data Viz, which can be seen right here: [Tableau](https:\/\/public.tableau.com\/app\/profile\/thiago.loiola.de.souza\/viz\/CoffeeQuality_16433844642990\/Dashboard1)\n\n","2022cde0":"The variable \"Total.Cup.Points\" was not considered since it is the result of adding all measure values. The idea here is to check the correlation among coffee characteristics and Cupper point. The same idea will be done with Scatterplot below.","f038c9ec":"In lower altitudes there are also some wrong values of altitude, for example, 1 meter of altitude for south of minas does not seem right. These values will be checked below.","2e15f9f9":"There are various formats in this variable, it'll be adopted the format 'yyyy', for example, 2012. The other values, which are impossible to identify, for example, mmm or TEST, will be replaced by Unknown.","87e4d5fa":"The groups will be splitted in small ones in order to get more detailed impressions.","9ef6fe74":"There are 357 unique values and some of them, with different names, actually are the same place, for example:\n - sul de minas\n - south of minas\n - sul de minas - carmo de minas\n - carmo de minas\n\nThose are the same place! \n\nI know it because this is the state where I was born and raised, but it was just a coincidence. To analyze all of them and searching for duplicates, it'll be necessary check one by one at Google maps, for example this one:\n - \u53e4\u5751\u9109\u8377\u5305\u6751\u5c16\u5c71\u575160\u865f \n \nor this:\n - \u96f2\u6797\u7e23\u53e4\u5751\u9109\u8377\u82de\u6751\n \nFor a while it'll be left as it came, but still need to check missing values.","a55c6778":"There are another observations with anormal values, such as:\n - Brazil: 11000 meters\n - Guatemala: 190164 meters\n - Nicaragua: 110000 meters","7bdb6c6b":"The region which the value is 1, is an Unknown, that means it was a NaN before. There is no way to replace by the average of the region, since there is no other. There are two other regions called Kenya and the low altitude is 1, but the high altitude is a considerable value. This one will be used as a model.","69af8d3a":"There are some mistakes in this dataset.\n - Antioquia is not a region from United States, it is from Colombia\n - Berastagi is not a region from United States, it id from Indonesia\n - Chikmagalur is a region from India\n - kwanza norte province, angola is, as the name already said, from Angola","3f4ba2b8":"#### Adressing the altitude NaN values ","e8a2df0e":"There is another region in dataset called \"carmo de minas\". This is one of those cases, explored before, which same regions has different names, for example:\n - sul de minas - carmo de minas\n - carmo de minas","70f0412c":"The altitude values in veracruz vary a lot. The value 100 will be replaced by the average of region.","7ea5ffc1":"Since this dataset had some mistakes on higher altitudes, it is prudent to check the lower altitudes.","ee656079":"There is a place with 110000 meters of elevation! \n\nIt looks like a misspelling, thus, it'll be checking the altitude above 2000 meters. This value of altitude, 2000 meters, seems to be an acceptable value, since coffee used to be cultivated in high altitudes.","ac3ab579":"This variable has 217 NaN, which will be replaced by None, a category already exists.","07d06d28":"It seems a misspelling, it's missing a 0. ","1306e081":"At index 833, there is an observation with 157 meters of altitude, this value does not seem right to this region. The altitude in oriente is very variable, around 250 and 1400 meters, even that, 157 is too low. it'll be replaced by the average of the region oriente.","3ea69e72":"Just like before, this region of Guatemala has various different values of altitude. The wrong value, 190164 will be replaced by the average of the region.","940263a1":"This region of Guatemala has various different values of altitude. The wrong value, 190164 will be replaced by the average of the region.","f3cc8899":"These statistics data help to understand how the data is distributed on the dataset, where is the median, the minimum value, the maximum value, etc. ","b9fdbe18":"Just like region of cerrado in Brazil, there are other regions with close values, 1100 meters. This value is not far from the mean as well.\n\nThe wrong value, 110000 meters, will be replaced by them."}}