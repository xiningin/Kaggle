{"cell_type":{"c75daa7c":"code","9a7753cc":"code","962c32f6":"code","680fa051":"code","c43178a0":"code","1dfded27":"code","440a2c3e":"code","08bba29a":"code","e5082c19":"code","4b588490":"code","eb1443e6":"code","f488f5b7":"code","79e18fab":"code","03174aab":"code","5cb579c9":"code","bcde5f1d":"code","2f295e0f":"code","77967f83":"code","43385729":"code","c20887ba":"code","48464361":"code","f40409bf":"code","bc23cc2a":"code","0cb9f6c5":"code","38b43166":"code","13dac303":"code","85c1c820":"markdown","a9ddbf53":"markdown","3810be4e":"markdown","2f13814a":"markdown","5ed40936":"markdown","f495728e":"markdown","05f870ad":"markdown","8046f3cd":"markdown","f0724657":"markdown","87109c0e":"markdown","b1fc8f2f":"markdown","25fb269e":"markdown"},"source":{"c75daa7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#impoting other useful libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\nimport datetime as dt\nfrom matplotlib.dates import DateFormatter\nimport scipy.stats\nfrom sklearn import linear_model\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestClassifier\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a7753cc":"accepted = pd.read_csv('\/kaggle\/input\/lending-club\/accepted_2007_to_2018q4.csv\/accepted_2007_to_2018Q4.csv')\naccepted.info()\naccepted.head()","962c32f6":"a = list(accepted.columns)\na.sort()\n\ndesc = ['The number of accounts on which the borrower is now delinquent.',\n        'Number of trades opened in past 24 months.',\n        'The state provided by the borrower in the loan application',\n        'Balance to credit limit on all trades',\n        'The self-reported annual income provided by the borrower during registration',\n        'The combined self-reported annual income provided by the co-borrowers during registration',\n        'Indicates whether the loan is an individual application or a joint application with two co-borrowers',\n        'Average current balance of all accounts',\n        'Total open to buy on revolving bankcards',\n        'Ratio of total current balance to high credit\/credit limit for all bankcard accounts',\n        'Number of charge-offs within 12 months',\n        'The collection fee incurred in loan recovery',\n        'Number of collections in 12 months excluding medical collections',\n        'Y if the borrower is working with debt-settlement company',\n        'Most recent date when debt settlement flag is set',\n        'Argeed-upon time, till which borrower does not have to pay the lender principal or interest on the loan',\n        'The number of 30+ days past-due incidences of delinquency in the borrower\\'s credit file for the past 2 years',\n        'The past-due amount owed for the accounts on which the borrower is now delinquent',\n        'Loan description provided by the borrower',\n        'Cash or directpay method of disbursement',\n        'A ratio calculated using the borrower\u2019s total monthly debt payments on the total debt obligations, excluding mortgage and the requested LC loan, divided by the borrower\u2019s self-reported monthly income',\n        'A ratio calculated using the co-borrowers\\' total monthly payments on the total debt obligations, excluding mortgages and the requested LC loan, divided by the co-borrowers\\' combined self-reported monthly income',\n        'The date the borrower\\'s earliest reported credit line was opened',\n        'Employment length in years. Possible values are between 0 and 10 where 0 means less than one year and 10 means ten or more years',\n        'The job title supplied by the Borrower when applying for the loan (compulsory)',\n        'The upper boundary range the borrower\u2019s FICO at loan origination belongs to',\n        'The lower boundary range the borrower\u2019s FICO at loan origination belongs to',\n        'The total amount committed to that loan at that point in time',\n        'The total amount committed by investors to that loan at that point in time',\n        'LC assigned loan grade', \n        'The interest payment that the borrower has committed to make each month while they are on a hardship plan',\n        'Account days past due as of the hardship plan start date',\n        'The end date of the hardship plan period',\n        'Flags whether or not the borrower is on a hardship plan',\n        'The last payment amount as of the hardship plan start date',\n        'The number of months the borrower will make smaller payments than normally obligated due to a hardship plan',\n        'Loan Status as of the hardship plan start date',\n        'The payoff balance amount as of the hardship plan start date',\n        'Describes the reason the hardship plan was offered',\n        'The start date of the hardship plan period',\n        'Describes if the hardship plan is active, pending, canceled, completed, or broken',\n        'Describes the hardship plan offering',\n        'The home ownership status provided by the borrower during registration. Our values are: RENT, OWN, MORTGAGE, OTHER',\n        'A unique LC assigned ID for the loan listing',\n        'Ratio of total current balance to high credit\/credit limit on all install acct',\n        'The initial listing status of the loan. Possible values are \u2013 W, F',\n        'Number of personal finance inquiries',\n        'Number of credit inquiries in past 12 months',\n        'The number of inquiries in past 6 months (excluding auto and mortgage inquiries)',\n        'The monthly payment owed by the borrower if the loan originates',\n        'Interest Rate on the loan',\n        'Loan issue date',\n        'Date when last credit inquiry was made',\n        'The upper boundary range the borrower\u2019s last FICO pulled belongs to',\n        'The lower boundary range the borrower\u2019s last FICO pulled belongs to',\n        'Last total payment amount received',\n        'Last month payment was received',\n        'The listed amount of the loan applied for by the borrower. If at some point in time, the credit department reduces the loan amount, then it will be reflected in this value.',\n        'Current status of the loan',\n        'Maximum current balance owed on all revolving accounts',\n        'A unique LC assigned Id for the borrower member',\n        'Months since oldest bank installment account opened', \n        'Months since oldest revolving account opened',\n        'Months since most recent revolving account opened',\n        'Months since most recent account opened',\n        'Number of mortgage accounts',\n        'The number of months since the borrower\u2019s last delinquency',\n        'Months since most recent 90-day or worse rating',\n        'The number of months since the last public record',\n        'Months since most recent installment accounts opened',\n        'Months since most recent bankcard account opened',\n        'Months since most recent bankcard delinquency',\n        'Months since most recent inquiry',\n        'Months since most recent revolving delinquency',\n        'Next scheduled payment date',\n        'Number of accounts ever 120 or more days past due',\n        'Number of currently active bankcard accounts',\n        'Number of currently active revolving trades',\n        'Number of satisfactory bankcard accounts',\n        'Number of bankcard accounts',\n        'Number of installment accounts',\n        'Number of open revolving accounts',\n        'Number of revolving accounts',\n        'Number of revolving trades with balance >0',\n        'Number of satisfactory accounts',\n        'Number of accounts currently 120 days past due (updated in past 2 months)',\n        'Number of accounts currently 30 days past due (updated in past 2 months)',\n        'Number of accounts 90 or more days past due in last 24 months',\n        'Number of accounts opened in past 12 months',\n        'The number of open credit lines in the borrower\u2019s credit file',\n        'Number of open trades in last 6 months',\n        'Number of currently active installment trades',\n        'Number of installment accounts opened in past 12 months',\n        'Number of installment accounts opened in past 24 months',\n        'Number of revolving trades opened in past 12 months',\n        'Number of revolving trades opened in past 24 months',\n        'The original projected additional interest amount that will accrue for the given hardship payment plan as of the Hardship Start Date',\n        'Remaining outstanding principal for total amount funded',\n        'Remaining outstanding principal for portion of total amount funded by investors',\n        'The day the first hardship plan payment is due',\n        'Percent of trades never delinquent',\n        'Percentage of all bankcard accounts > 75% of limit.',\n        'publicly available policy_code=1',\n        'Number of derogatory public records',\n        'Number of public record bankruptcies',\n        'A category provided by the borrower for the loan request.',\n        'Indicates if a payment plan has been put in place for the loan',\n        'post charge off gross recovery',\n        'Total credit revolving balance',\n        'Sum of revolving credit balance of the co-borrowers, net of duplicate balances',\n        'Revolving line utilization rate, or the amount of credit the borrower is using relative to all available revolving credit',\n        'Number of charge-offs within last 12 months at time of application for the secondary applicant',\n        'Number of collections within last 12 months excluding medical collections at time of application for the secondary applicant',\n        'Earliest credit line at time of application for the secondary applicant',\n        'FICO range (high) for the secondary applicant',\n        'FICO range (low) for the secondary applicant',\n        'Credit inquiries in the last 6 months at time of application for the secondary applicant',\n        'Number of mortgage accounts at time of application for the secondary applicant',\n        'Months since most recent 90-day or worse rating at time of application for the secondary applicant',\n        'Number of revolving accounts at time of application for the secondary applicant',\n        'Number of open trades at time of application for the secondary applicant',\n        'Number of currently active installment trades at time of application for the secondary applicant',\n        'Ratio of total current balance to high credit\/credit limit for all revolving accounts',\n        'The loan amount that the borrower has agreed to settle for',\n        'The date that the borrower agrees to the settlement plan',\n        'The settlement amount as a percentage of the payoff balance amount on the loan',\n        'The status of the borrower\u2019s settlement plan. Possible values are: COMPLETE, ACTIVE, BROKEN',\n        'The number of months that the borrower will be on the settlement plan',\n        'LC assigned loan subgrade',\n        'Number of tax liens',\n        'The number of payments on the loan. Values are in months and can be either 36 or 60',\n        'The loan title provided by the borrower',\n        'Total collection amounts ever owed',\n        'Total current balance of all accounts',\n        'Total high credit\/credit limit',\n        'The total number of credit lines currently in the borrower\u2019s credit file',\n        'Total credit balance excluding mortgage',\n        'Total current balance of all installment accounts',\n        'Total bankcard high credit\/credit limit',\n        'Number of finance trades',\n        'Total installment high credit\/credit limit',\n        'Payments received to date for total amount funded',\n        'Payments received to date for portion of total amount funded by investors',\n        'Interest received to date',\n        'Late fees received to date',\n        'Principal received to date',\n        'Total revolving high credit\/credit limit',\n        'URL for the LC page with listing data',\n        'Indicates if income was verified by LC, not verified, or if the income source was verified',\n        'Indicates if the co-borrowers\u2019 joint income was verified by LC, not verified, or if the income source was verified',\n        'The first 3 numbers of the zip code provided by the borrower in the loan application',\n       ]\n\nuse =  [0.0, 0.0,-1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\n       -1.0, 0.0, 0.0,-1.0, 0.0, 1.0, 1.0,-1.0, 1.0,-1.0, 1.0, 0.0,-1.0, 0.0,-1.0,\n        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n        0.0, 1.0, 0.0, 0.0, 1.0, 1.0,-1.0,-1.0, 0.0, 0.0, 0.0,-1.0, 1.0, 1.0, 0.0,\n       -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,-1.0,\n        0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,-1.0, 0.0, 0.0,-1.0, 1.0, 1.0,\n       -1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n        0.0, 0.0, 0.0, 1.0,-1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0,-1.0, 0.0, 1.0, 0.0,\n        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,-1.0, 0.0, 0.0,-1.0,\n       ]\n\ndata = {'Variables' : a,\n        'Description' : desc,\n        'Usefulness' : use}\ndf = pd.DataFrame(data)\nunq = []\ncnt = []\nfor i in df['Variables']:\n    unq.append(len(accepted[i].unique()))\n    cnt.append(accepted[i].count())\ndf['Uniqueness'] = unq\ndf['Count'] = cnt\ndf.to_csv('MetaData.csv')\ndf","680fa051":"for col in accepted:\n    print(col, len(accepted[col].unique()))","c43178a0":"accepted['term'].unique()\naccepted['member_id'].unique()\naccepted['int_rate'].mean()\nlen(accepted['sub_grade'].unique())\naccepted['emp_length'].unique()\naccepted['home_ownership'].unique()\naccepted.loc[accepted['home_ownership'] == 'ANY']\naccepted['annual_inc'].mean()\naccepted['verification_status'].unique()\naccepted.loc[accepted['issue_d'] == 'Dec-2015']\naccepted['loan_status'].unique()\naccepted['pymnt_plan'].unique()\naccepted['url'][0]\naccepted['desc'].unique()\naccepted['purpose'].unique()\naccepted['title'].count()\naccepted['dti'].mean()\na = accepted['delinq_2yrs'].unique()\na.sort()\naccepted['earliest_cr_line']\naccepted['fico_range_low'].unique()\naccepted['fico_range_high'].unique()\nb = accepted['inq_last_6mths'].unique()\nb.sort()\naccepted['mths_since_last_delinq'].min()\naccepted['mths_since_last_record'].max()\naccepted['open_acc'].count()\naccepted['pub_rec'].max()\naccepted['revol_bal']\naccepted['revol_util']\naccepted['total_acc']\naccepted['initial_list_status'].unique()\naccepted['out_prncp'].max()\nc = 0\nfor i in range(len(accepted['out_prncp_inv'])):\n    if(accepted['out_prncp'][i] == accepted['out_prncp_inv'][i]):\n        c = c + 1\nfor i in range(5):\n    print(accepted['total_pymnt'][i],accepted['total_pymnt_inv'][i], accepted['total_rec_prncp'][i],accepted['total_rec_int'][i],accepted['total_rec_late_fee'][i]) \naccepted['recoveries'].mean()\naccepted['collection_recovery_fee'].mean()\nfor i in range(5):\n    print(accepted['last_pymnt_d'][i], accepted['last_pymnt_amnt'][i], accepted['next_pymnt_d'][i], accepted['last_credit_pull_d'][i])\nfor i in range(5):\n    print(accepted['last_fico_range_high'][i], accepted['last_fico_range_low'][i], accepted['fico_range_high'][i], accepted['fico_range_low'][i])\naccepted['collections_12_mths_ex_med'].unique()\naccepted['mths_since_last_major_derog'].max()\naccepted['policy_code'].unique()\naccepted['application_type'].unique()\naccepted['annual_inc_joint'].mean()\naccepted['dti_joint'].unique()[1:10]\naccepted['dti_joint'].mean()\naccepted['verification_status_joint'].unique()\naccepted['acc_now_delinq'].unique()\naccepted['tot_coll_amt']\nc = 0\nfor i in accepted['debt_settlement_flag']:\n    if i == 'Y':\n        c = c + 1\n\naccepted['disbursement_method'].unique()\naccepted['issue_d'].unique()\nlen(accepted.loc[accepted['loan_status'] == 'Fully Paid'])\naccepted['loan_status'].count()\nc = 0\nfor i in range(len(accepted['loan_amnt'])):\n    if(accepted['loan_amnt'][i] != accepted['funded_amnt'][i]):\n        c = c + 1\n        \nprint(c)\n","1dfded27":"unnecessary = []\nfor i in range(len(df['Variables'])):\n    if df['Usefulness'][i] == -1.0 or df['Usefulness'][i] == 0.0 :\n        unnecessary.append(df['Variables'][i])\nacc = accepted.drop(unnecessary, axis=1)\nacc.info()\nacc.head()","440a2c3e":"#removing the columns filled with more than 50% Nan values\nacc.isnull().sum()\/len(acc)\nnanfil = []\nfor i in acc.columns:\n    if acc[i].isnull().sum()\/len(acc) > 0.5:\n        nanfil.append(i)\n\nacc = acc.drop(nanfil, axis = 1)\nacc.info()","08bba29a":"fig, ax = plt.subplots(figsize=(10, 10))\nsns.scatterplot(x = 'emp_length', y = 'loan_status', sizes = (100, 100), data = acc)","e5082c19":"fig, ax = plt.subplots(figsize=(40, 15))\nsns.countplot(x = 'loan_status', data = acc, ax = ax)","4b588490":"fig, ax = plt.subplots(figsize=(20, 20))\nsns.countplot(x = 'sub_grade', data = acc, hue = 'loan_status', ax = ax)","eb1443e6":"fig, ax = plt.subplots(figsize=(10,10))\nsns.distplot(acc['loan_amnt'], bins = 15, ax = ax)","f488f5b7":"acc['application_type'].unique()\ncleaner_app_type = {\"application_type\": {\"Individual\": 1.0, \"Joint App\": 2.0},\n                    \"term\": {\" 36 months\": 1.0, \" 60 months\": 2.0},\n                    \"sub_grade\": {\"A1\": 1.0, \"A2\": 2.0, \"A3\": 3.0, \"A4\": 4.0, \"A5\": 5.0,\n                                  \"B1\": 11.0, \"B2\": 12.0, \"B3\": 13.0, \"B4\": 14.0, \"B5\": 15.0,\n                                  \"C1\": 21.0, \"C2\": 22.0, \"C3\": 23.0, \"C4\": 24.0, \"C5\": 25.0,\n                                  \"D1\": 31.0, \"D2\": 32.0, \"D3\": 33.0, \"D4\": 34.0, \"D5\": 35.0,\n                                  \"E1\": 41.0, \"E2\": 42.0, \"E3\": 43.0, \"E4\": 44.0, \"E5\": 45.0,\n                                  \"F1\": 51.0, \"F2\": 52.0, \"F3\": 53.0, \"F4\": 54.0, \"F5\": 55.0,\n                                  \"G1\": 61.0, \"G2\": 62.0, \"G3\": 63.0, \"G4\": 64.0, \"G5\": 65.0,\n                                    },\n                    \"emp_length\": {\"< 1 year\": 0.0, '1 year': 1.0, '2 years': 2.0, '3 years': 3.0, '4 years': 4.0, \n                                   '5 years': 5.0, '6 years': 6.0, '7 years': 7.0, '8 years': 8.0, '9 years': 9.0,\n                                   '10+ years': 10.0 },\n                    \"loan_status\": { \"Fully Paid\": 1.0, \"Current\": 0.0, \"Charged Off\": -1.0, \"In Grace Period\": -2.0,\n                                     \"Late (31-120 days)\": -3.0, \"Late (16-30 days)\": -4.0, \"Default\": -5.0,\n                                     \"Does not meet the credit policy. Status:Fully Paid\" : 2.0,\n                                     \"Does not meet the credit policy. Status:Charged Off\" : 3.0},\n                    \"home_ownership\": {\"MORTGAGE\": 1.0, \"RENT\": 2.0, \"OWN\": 3.0, \"ANY\": 4.0, \"NONE\": 5.0, \"OTHER\": 6.0}\n                   }\nacc = acc.replace(cleaner_app_type)\nacc.info()","79e18fab":"corel = acc.corr()\nfig, ax = plt.subplots(figsize=(30,30))\nsns.heatmap(corel, xticklabels = corel.columns, yticklabels = corel.columns, annot = True)","03174aab":"acc = acc.fillna(0.0)\nacc.isnull().sum().sum()","5cb579c9":"nanfil = []\nfor i in acc.columns:\n    if abs(corel['loan_status'][i]) < 0.01:\n        nanfil.append(i)\n\nacc = acc.drop(nanfil, axis = 1)\nacc.info()       ","bcde5f1d":"corel = acc.corr()\ncorel['loan_status']","2f295e0f":"#sns.lineplot(data = acc, x = \"total_rec_prncp\", y = \"loan_status\") too long ","77967f83":"f_col = []\nfor i in acc.columns:\n    if i != 'loan_status':\n        f_col.append(i)\n        \nX = acc[f_col]\nY = acc.loan_status","43385729":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.25,random_state=0)\n\nfrom sklearn.linear_model import LogisticRegression\n\n# instantiate the model (using the default parameters)\nlogreg = LogisticRegression(solver = \"lbfgs\", max_iter = 1000)\n\n# fit the model with data\nlogreg.fit(X_train,Y_train)\nY_pred=logreg.predict(X_test)","c20887ba":"from sklearn import metrics\ncnf_matrix = metrics.confusion_matrix(Y_test, Y_pred)\ncnf_matrix","48464361":"rejected = pd.read_csv('\/kaggle\/input\/lending-club\/rejected_2007_to_2018q4.csv\/rejected_2007_to_2018Q4.csv')\nrejected","f40409bf":"rejected.info()","bc23cc2a":"corel = rejected.corr()\nfig, ax = plt.subplots(figsize=(3,3))\nsns.heatmap(corel, xticklabels = corel.columns, yticklabels = corel.columns, annot = True)","0cb9f6c5":"rejected.isnull().sum()","38b43166":"rejected['Employment Length']\n#for i in range(len(rejected['Debt-To-Income Ratio'])):\n    #rejected['Debt-To-Income Ratio'][i] = (rejected['Debt-To-Income Ratio'][i].replace('%', ''))\n\n#rejected['Debt-To-Income Ratio']","13dac303":"fig,ax = plt.subplots(figsize = (20,10))\ng = sns.histplot(ax = ax,x = 'loan_amnt', data = acc,bins = 45)","85c1c820":"Creating new dataset acc by deleting all the unnecessary columns - the ones that can't\/shouldn't be used(including the date related ones)","a9ddbf53":"Filling the Nan values with 0.0 as it doesn't seem to affect data negtively","3810be4e":"Till here for logistic regression ","2f13814a":"removing columns with correlation < 0.01","5ed40936":"converting the object type data to float for better analysis","f495728e":"# Lending Club Loan Data\n\nExtracting the accepted data","05f870ad":"Analysing various features to get more information about each column by checking the min, max, count, printing values, etc.","8046f3cd":"seeing the correlation between columns","f0724657":"Checking for and handling Nan values","87109c0e":"Analysing uniue values in each column","b1fc8f2f":"make plots here now","25fb269e":"Creating a metadata csv file containing information of all the columns given in accepted data"}}