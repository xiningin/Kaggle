{"cell_type":{"b37a8c90":"code","bc103208":"code","e4586bec":"code","47f00ddd":"code","18a81fd9":"code","07e46303":"code","1e588c54":"code","13676473":"code","1f8da31c":"code","1cdc76f6":"code","de75be75":"code","2302c409":"code","a4f7e604":"code","e1c359b9":"code","74d63054":"code","55bfea11":"code","7e0a53a8":"code","9bc7a54f":"code","c03d5c7b":"code","7bcc038f":"code","1668e8e3":"code","ccefaa13":"code","095bd0cf":"code","bf0b20a4":"code","5aa0ad2c":"code","42c915cd":"code","02c7f82e":"code","7afd96dc":"code","adba5faa":"code","3b9c5373":"code","1b171544":"code","7f5ae281":"code","7f218abe":"code","47597724":"code","0f90a996":"code","5f927a29":"code","494e149d":"code","8b51dc69":"code","6e459a24":"code","6dc2aa76":"code","324954ef":"code","dbb51bc3":"code","14368370":"code","7ace4019":"code","fc39a852":"code","e61774c1":"markdown","c61e6f8b":"markdown","1502c5d6":"markdown","b2791284":"markdown","d6d86bdb":"markdown","090ae6d5":"markdown","7e8f3e3f":"markdown","0f74e65b":"markdown","a28509d6":"markdown","f5ef2e60":"markdown","ea9c3ca8":"markdown","d23a042d":"markdown","6f794fee":"markdown","2a3e006b":"markdown","ddf4df2c":"markdown","2c59785b":"markdown","6bf9fb8c":"markdown","e80b3924":"markdown","9e4801cf":"markdown","1f9529e6":"markdown","8c60ef53":"markdown","da247856":"markdown","45678905":"markdown","8475eac4":"markdown","143e0123":"markdown","389a25a1":"markdown"},"source":{"b37a8c90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport seaborn as sns\nimport matplotlib.pyplot as plt","bc103208":"df=pd.read_csv(\"\/kaggle\/input\/indian-food-101\/indian_food.csv\")","e4586bec":"df.head()","47f00ddd":"df.info()","18a81fd9":"df.describe()","07e46303":"df.isna().sum()","1e588c54":"df.loc[df[\"state\"]==\"-1\"]","13676473":"\nlen(df.loc[df[\"state\"]==\"-1\"])","1f8da31c":"\ndf.iloc[7:8,7:8]= df.iloc[7:8,7:8].replace('-1','Delhi') #Kaju katli\ndf.iloc[9:10,7:8]=df.iloc[9:10,7:8].replace('-1','Uttar Pradesh') #Kheer\ndf.iloc[10:11,7:8]=df.iloc[10:11,7:8].replace('-1','Andhra Pradesh') #Laddu\ndf.iloc[12:13,7:8]=df.iloc[12:13,7:8].replace('-1','Gujarat') # Nankhatai\n\ndf.iloc[94:95,7:8]= df.iloc[94:95,7:8].replace('-1','Delhi') # Khichdi\ndf.iloc[96:97,7:8] = df.iloc[96:97,7:8].replace('-1','Andhra Pradesh') # Falooda\ndf.iloc[98:99,7:8]= df.iloc[98:99,7:8].replace('-1','Gujrat') # Lauki ki subji\ndf.iloc[109:110,7:8]= df.iloc[109:110,7:8].replace('-1','Delhi') # Pani Puri\n\ndf.iloc[111:112,7:8]=df.iloc[111:112,7:8].replace('-1','Tamil Nadu') # Pappad\ndf.iloc[117:118,7:8]=df.iloc[117:118,7:8].replace('-1','Uttar Pradesh') #samosa\ndf.iloc[164:165,7:8]=df.iloc[164:165,7:8].replace('-1','Andhra Pradesh') #Upma\ndf.iloc[231:232,7:8]=df.iloc[231:232,7:8].replace('-1','Tamil Nadu') # Brown Rice\ndf.iloc[248:249,7:8]=df.iloc[248:249,7:8].replace('-1','Tamil Nadu') # Red Rice\ndf.iloc[115:116,7:8] =df.iloc[115:116,7:8].replace('-1','Delhi') #rajma\ndf.iloc[128:129,7:8]= df.iloc[128:129,7:8].replace('-1','Tamil Nadu') #dosa\ndf.iloc[130:131,7:8]= df.iloc[130:131,7:8].replace('-1','Andhra Pradesh') #idli\n\ndf.iloc[144:145,7:8]= df.iloc[144:145,7:8].replace('-1','Andhra Pradesh') #masala dosa\ndf.iloc[145:146,7:8]= df.iloc[145:146,7:8].replace('-1','Andhra Pradesh') #pachadi \ndf.iloc[149:150,7:8] =df.iloc[149:150,7:8].replace('-1','Andhra Pradesh') #payasam\n\ndf.iloc[154:155,7:8]= df.iloc[154:155,7:8].replace('-1','Andhra Pradesh') #rasam\ndf.iloc[156:157,7:8]= df.iloc[156:157,7:8].replace('-1','Tamil Nadu') #sambar\ndf.iloc[158:159,7:8]= df.iloc[158:159,7:8].replace('-1','Andhra Pradesh') #sevai\ndf.iloc[161:162,7:8]= df.iloc[161:162,7:8].replace('-1','Tamil Nadu') #Uttapam\ndf.iloc[162:163,7:8]= df.iloc[162:163,7:8].replace('-1','Tamil Nadu') #Vada","1cdc76f6":"df.loc[df[\"region\"]==\"-1\"]","de75be75":"len(df.loc[df[\"region\"]==\"-1\"])","2302c409":"df.iloc[7:8,8:9]= df.iloc[7:8,8:9].replace('-1','North')\ndf.iloc[9:10,8:9]=df.iloc[9:10,8:9].replace('-1','North') \ndf.iloc[10:11,8:9]=df.iloc[10:11,8:9].replace('-1','South') \ndf.iloc[12:13,8:9]=df.iloc[12:13,8:9].replace('-1','West') # Nankhatai\n\ndf.iloc[94:95,8:9]= df.iloc[94:95,8:9].replace('-1','North') # Khichdi\ndf.iloc[96:97,8:9] = df.iloc[96:97,8:9].replace('-1','South') # Falooda\ndf.iloc[98:99,8:9]= df.iloc[98:99,8:9].replace('-1','West') # Lauki ki subji\ndf.iloc[109:110,8:9]= df.iloc[109:110,8:9].replace('-1','North') # Pani Puri\n\ndf.iloc[111:112,8:9]=df.iloc[111:112,8:9].replace('-1','South') # Pappad\ndf.iloc[117:118,8:9]=df.iloc[117:118,8:9].replace('-1','North') #samosa\ndf.iloc[164:165,8:9]=df.iloc[164:165,8:9].replace('-1','South') #Upma\ndf.iloc[231:232,8:9]=df.iloc[231:232,8:9].replace('-1','South') # Brown Rice\ndf.iloc[248:249,8:9]=df.iloc[248:249,8:9].replace('-1','South') # Red Rice","a4f7e604":"len(df.loc[df[\"region\"]==\"-1\"])","e1c359b9":"df[\"region\"].isna().sum()","74d63054":"df[\"region\"]=df[\"region\"].fillna(df[\"region\"].mode()[0])","55bfea11":"df.isna().sum()","7e0a53a8":"df.loc[df[\"flavor_profile\"]==\"-1\"]","9bc7a54f":"len(df.loc[df[\"flavor_profile\"]==\"-1\"])","c03d5c7b":"df[\"flavor_profile\"].value_counts()","7bcc038f":"df[\"flavor_profile\"]=df[\"flavor_profile\"].replace(\"-1\",\"spicy\")","1668e8e3":"len(df.loc[df[\"flavor_profile\"]==\"-1\"])","ccefaa13":"df.loc[np.where(df[\"prep_time\"]==-1)]","095bd0cf":"len(df.loc[np.where(df[\"prep_time\"]==-1)])","bf0b20a4":"df[\"prep_time\"].mean()","5aa0ad2c":"df[\"prep_time\"]=df[\"prep_time\"].replace(-1,31)\n","42c915cd":"len(df.loc[df[\"prep_time\"]==-1])","02c7f82e":"df.loc[df[\"cook_time\"]==-1]","7afd96dc":"len(df.loc[df[\"cook_time\"]==-1])","adba5faa":"df[\"cook_time\"].mean()","3b9c5373":"df[\"cook_time\"]=df[\"cook_time\"].replace(-1,34)","1b171544":"len(df.loc[df[\"cook_time\"]==1])","7f5ae281":"print(\"STATES WITH NUMBER OF DISHES\")\npd.crosstab(df[\"state\"],[\"name\"])","7f218abe":"top_5=pd.crosstab(df[\"state\"],[\"name\"]).sort_values(by=[\"name\",\"state\"],ascending=False)\ntop_5.head(5).plot(kind=\"bar\",color=\"pink\",figsize=(8,8))\nplt.title(\"TOP 5 STATES WITH MAX NUMBER OF DISHES\")\nplt.show()","47597724":"\npd.crosstab(df[\"state\"],df[\"diet\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"STATE WISE MOST PREFFERD TYPE OF DIET\")\nplt.show()","0f90a996":"pd.crosstab(df[\"state\"],df[\"course\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"STATE WISE MOST PREFFERD COURSE\")\nplt.show()","5f927a29":"pd.crosstab(df[\"state\"],df[\"flavor_profile\"]).plot(kind=\"barh\",figsize=(8,8))\nplt.title(\"STATE WISE MOST PREFFERD FLAVOR\")\nplt.show()","494e149d":"sns.countplot(df[\"diet\"])\nplt.title(\"WHAT DIET IS BEING MORE PREFFERED\")\nplt.show()","8b51dc69":"sns.boxplot(x=\"diet\",y=\"cook_time\",data=df)","6e459a24":"df.groupby(df[\"diet\"])[\"cook_time\"].mean().plot(kind=\"bar\",color=\"orange\",figsize=(8,8))\nplt.title(\"AVERAGE TIME TO COOK THE DIET\")\nplt.show()","6dc2aa76":"df.groupby(df[\"diet\"])[\"prep_time\"].mean().plot(kind=\"bar\",color=\"blue\",figsize=(8,8))\nplt.title(\"AVERAGE TIME TO PREPARE DIET\")\nplt.show()","324954ef":"pd.crosstab(df[\"diet\"],df[\"flavor_profile\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"NUMBER OF FLAVOR-PROFILE IN DIET\")\nplt.show()","dbb51bc3":"pd.crosstab(df[\"diet\"],df[\"course\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"NUMBER OF COURSES IN DIET\")\nplt.show()","14368370":"pd.crosstab(df[\"region\"],df[\"diet\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"DIET BASED ON REGION\")\nplt.show()","7ace4019":"pd.crosstab(df[\"region\"],df[\"course\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"COURSE BASED ON REGION\")\nplt.show()","fc39a852":"pd.crosstab(df[\"region\"],df[\"flavor_profile\"]).plot(kind=\"bar\",figsize=(8,8))\nplt.title(\"FLAVOR-PROFILE BASED ON REGION\")\nplt.show()","e61774c1":"### There is also a missing value present in the region column:","c61e6f8b":"### THANKS FOR READING MY NOTEBOOK!","1502c5d6":"## lets replace it with the value which have been occured with max. number of times:","b2791284":"### iv). Prep-Time","d6d86bdb":"### iii). Flavor-Profile Column:","090ae6d5":"### i). State Column","7e8f3e3f":"#### let's impute it","0f74e65b":"## DIET","a28509d6":"### ii). Region column:","f5ef2e60":"## 04. Let's do some Analysis:","ea9c3ca8":"### i) As we get the information From the data-set user that Presence of -1 in any of the columns indicates NaN value.\n### So first we will remove those and replace them.","d23a042d":"This data set has 255 rows and 9 columns:\n  - Name: Name of the dish.\n  - Ingredients: Main Ingredients used for making Dish.\n  - Diet: Vegiterian or Non-Vegiterian.\n  - Prep-Time: Preparing Time.\n  - Cook-Time: Cooking Time.\n  - Flavour-Profile: Sweet,Salty,Bitter,Spicy.\n  - Course: Course of meal - starter, main course, dessert, etc.\n  - State: State where the dish is famous or is originated.\n  - Region: region where the state belongs.\n  ","6f794fee":"## IMPORT LIBRARIES","2a3e006b":"### 01. STATE","ddf4df2c":"### now our data is clean there is  no null values nor the -1 values present in it:","2c59785b":"## 01. QUICK LOOK AT THE DATA-SET","6bf9fb8c":"### There are 13 (-1) values in the Region Column:\n### Lets impute them\n  - we will take information from the google & replace the -1 values:","e80b3924":"### There are 28 (-1)values in cook time:\n### lets replace with them with mean value of cook time","9e4801cf":"## 02. Check Missing Values:","1f9529e6":"## There are 29 (-1)Values present in Flavor-Profile Column:\n## Lets Impute them\n  - THERE ARE ONLY 4 UNIQUE VALUES IN FLAVOR COLUMN:","8c60ef53":"## IMPORT DATA-SET","da247856":"## 03. Clean data","45678905":"### There are 30 (-1)values present in the prep-time Column:\n### lets replace -1 with mean value of prep_time:","8475eac4":"### There are 24 (-1) values in state column:\n### lets replace them\n   - we take the info. from the google nd replace the missing values","143e0123":"### v). Cook time","389a25a1":"## 03. REGION"}}