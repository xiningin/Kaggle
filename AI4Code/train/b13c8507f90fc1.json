{"cell_type":{"9f95d453":"code","a94a9d19":"code","14773247":"code","d702d265":"code","53e4f19b":"code","64ec6373":"code","ef530b10":"code","f1562b38":"code","59956aee":"code","c5b2dd1f":"code","82b1d1f7":"code","7c9b21d3":"code","fbedeae6":"code","bddc821d":"code","7380acc4":"code","3182b31e":"code","38b485fa":"code","4cad2f57":"code","4237f3f9":"code","317fa36d":"code","75d5f7ac":"code","cf14e9e2":"code","b499c703":"code","0414d8a0":"code","22063b9e":"code","209ba087":"code","5a0fa0f0":"code","1036c43f":"code","2f053452":"code","27a21ed8":"markdown","15bfef39":"markdown","69bed255":"markdown","468bef87":"markdown","1e2d3f68":"markdown","3b3cacd7":"markdown","a4a2d8cf":"markdown","8c7a9656":"markdown","e1db2b26":"markdown","e1f8d59f":"markdown","63916dfa":"markdown","a1d4e6f5":"markdown","7eac37fd":"markdown","d5e2f90e":"markdown","6134c796":"markdown"},"source":{"9f95d453":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a94a9d19":"df = pd.read_csv('\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv', sep='\\t')\ndf.head()","14773247":"df.info()","d702d265":"df.describe()","53e4f19b":"import datetime\nnow = datetime.datetime.now()\ndf['Age'] = now.year - df['Year_Birth']\nplt.figure(figsize=(16,6))\nplt.title('Age Customer Distribution')\nsns.histplot(df['Age'] , kde=True)","64ec6373":"sns.jointplot(data=df, x=\"Age\", y=\"Recency\")","ef530b10":"figure, axes = plt.subplots(1, 2, sharex=True, figsize=(18,6))\nfigure.suptitle('Education Level Customer With Complaint Comparison')\nsns.countplot(x='Education',data=df,palette='pastel', ax=axes[0])\nsns.countplot(x='Education',data=df,hue='Complain',palette='pastel', ax=axes[1])","f1562b38":"education_data = df.groupby(['Education']).mean()\neducation_data.reset_index(inplace=True)\nplt.figure(figsize=(16,6))\nplt.title('Education Level Compare with Mean of Recency')\nsns.barplot(x='Education', y='Recency', data=education_data,palette='pastel')","59956aee":"figure, axes = plt.subplots(1, 2, sharex=True, figsize=(18,6))\nfigure.suptitle('Martial Status Customer With Complaint Comparison')\nsns.countplot(x='Marital_Status',data=df,palette='pastel', ax=axes[0])\nsns.countplot(x='Marital_Status',data=df,hue='Complain',palette='pastel', ax=axes[1])","c5b2dd1f":"martial_status_data = df.groupby(['Marital_Status']).mean()\nmartial_status_data.reset_index(inplace=True)\nplt.figure(figsize=(16,6))\nplt.title('Marital Status Cusomer Compare with Mean of Recency')\nsns.barplot(x='Marital_Status', y='Recency', data=martial_status_data,palette='pastel')","82b1d1f7":"plt.figure(figsize=(16,6))\nplt.title('Income Customer Distribution')\nsns.histplot(df['Income'] , kde=True)","7c9b21d3":"sns.jointplot(data=df, x=\"Income\", y=\"Recency\")","fbedeae6":"figure, axes = plt.subplots(1, 2, sharex=True, figsize=(18,6))\nfigure.suptitle('Customer Kidhome With Complaint Comparison')\nsns.countplot(x='Kidhome',data=df,palette='pastel', ax=axes[0])\nsns.countplot(x='Kidhome',data=df,hue='Complain',palette='pastel', ax=axes[1])","bddc821d":"kidhome_data = df.groupby(['Kidhome']).mean()\nkidhome_data.reset_index(inplace=True)\nplt.figure(figsize=(16,6))\nplt.title('Customer Kidhome Compare with Mean of Recency')\nsns.barplot(x='Kidhome', y='Recency', data=kidhome_data,palette='pastel')","7380acc4":"figure, axes = plt.subplots(1, 2, sharex=True, figsize=(18,6))\nfigure.suptitle('Customer Teenhome With Complaint Comparison')\nsns.countplot(x='Teenhome',data=df,palette='pastel', ax=axes[0])\nsns.countplot(x='Teenhome',data=df,hue='Complain',palette='pastel', ax=axes[1])","3182b31e":"teenhome_data = df.groupby(['Teenhome']).mean()\nteenhome_data.reset_index(inplace=True)\nplt.figure(figsize=(16,6))\nplt.title('Customer Teenhome Compare with Mean of Recency')\nsns.barplot(x='Teenhome', y='Recency', data=teenhome_data,palette='pastel')","38b485fa":"df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'],dayfirst=True)\ndf['Month'] = df['Dt_Customer'].apply(lambda time: time.month)\ndf['Day'] = df['Dt_Customer'].apply(lambda time: time.dayofweek)\ndf['Year'] = df['Dt_Customer'].apply(lambda time: time.year)\ndf['Date']=df['Dt_Customer'].apply(lambda t: t.date())\ndayMap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\nmonthMap = {1:'Jan',2:'Feb',3:'Mar',4:'Apr',5:'Mei',6:'Jun',7:'Jul', 8:'Aug', 9:'Sep', 10:'Okt', 11:'Nov', 12:'Des'}\ndf['Month'] = df['Month'].map(monthMap)\ndf['Day'] = df['Day'].map(dayMap)","4cad2f57":"plt.figure(figsize=(16,6))\nplt.title('Day of Customer Enroll With Company')\nsns.countplot(x='Day',data=df,palette='pastel')","4237f3f9":"plt.figure(figsize=(16,6))\nplt.title('Month of Customer Enroll With Company')\nsns.countplot(x='Month',data=df,palette='pastel')","317fa36d":"plt.figure(figsize=(16,6))\nplt.title('Year of Customer Enroll With Company')\nsns.countplot(x='Year',data=df,palette='pastel')","75d5f7ac":"temp = df['Complain'].value_counts()\ntemp","cf14e9e2":"plt.figure(figsize=(16,6))\nplt.title('Customer Complain count')\nsns.countplot(x='Complain',data=df,palette='pastel')","b499c703":"complain_counts = df['Complain'].value_counts()\ncolors = ['#ff9999','#66b3ff']\nlabels = ['Complain', 'Not Complain']\nvalues = [complain_counts[1] ,complain_counts[0]]\nexplode = (0.05,0.05)\n\nfig = plt.gcf()\nfig.set_size_inches(8,8)\nplt.pie(values, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.65, explode = explode)\ncentre_circle = plt.Circle((0,0),0.50,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.tight_layout()\nplt.title(\"Complain Customer Percantage\")\nplt.show()","0414d8a0":"product_columns = ['MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts', 'MntGoldProds']\n\nproduct_mean = []\n\nfor product in product_columns:\n    value = df[product].mean()\n    product_mean.append(value)\n    \n\nproduct_data = {\n    'mean' : product_mean,\n    'type' : product_columns,\n}\n\nproduct_df = pd.DataFrame(product_data) \nplt.figure(figsize=(16,6))\nplt.title('Product Type Customer spent in last 2 years Mean')\nsns.barplot(x='type', y='mean', data=product_df,palette='pastel')","22063b9e":"figure, axes = plt.subplots(3, 2, sharex=True, figsize=(18,14))\nfigure.suptitle('Customer accepted the offer in Campaign Comparison')\nsns.countplot(x='AcceptedCmp1',data=df,palette='pastel', ax=axes[0][0])\nsns.countplot(x='AcceptedCmp2',data=df,palette='pastel', ax=axes[0][1])\nsns.countplot(x='AcceptedCmp3',data=df,palette='pastel', ax=axes[1][0])\nsns.countplot(x='AcceptedCmp4',data=df,palette='pastel', ax=axes[1][1])\nsns.countplot(x='AcceptedCmp5',data=df,palette='pastel', ax=axes[2][0])","209ba087":"promotion_columns = ['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Response']\n\npromotion_succes = []\npromotion_failed = []\n\nfor promotion in promotion_columns:\n    value = df[promotion].value_counts()\n    promotion_succes.append(value[1])\n    promotion_failed.append(value[0])\n    \n\npromotion_data = {\n    'succes' : promotion_succes,\n    'failed' : promotion_failed,\n    'type' : promotion_columns,\n}\n\npromotion_df = pd.DataFrame(promotion_data) \nplt.figure(figsize=(16,6))\nplt.title('Promotion Campaign Succes Count')\nsns.barplot(x='type', y='succes', data=promotion_df,palette='pastel')","5a0fa0f0":"succes_total = 0\n\nfor x in range(6):\n    succes_total = succes_total + promotion_df['succes'].iloc[x]\n    \ntotal_customer = len(df)\ncolors = ['#ff9999','#66b3ff']\nlabels = ['Succes', 'Failed']\nvalues = [succes_total,total_customer]\nexplode = (0.05,0.05)\n\nfig = plt.gcf()\nfig.set_size_inches(8,8)\nplt.pie(values, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.65, explode = explode)\ncentre_circle = plt.Circle((0,0),0.50,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.tight_layout()\nplt.title(\"Promotion Succes with every campaign percentage\")\nplt.show()","1036c43f":"plt.figure(figsize=(16,6))\nplt.title('Number of Customer who made purchase with discount Distribution')\nsns.histplot(df['NumDealsPurchases'] , kde=True)","2f053452":"place_columns = ['NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth']\n\nplace_mean = []\nplace_total = []\n\nfor place in place_columns:\n    count = df[place].sum()\n    mean = df[place].mean()\n    place_mean.append(mean)\n    place_total.append(count)\n    \n\nplace_data = {\n    'mean' : place_mean,\n    'count' : place_total,\n    'type' : place_columns,\n}\n\nplace_df = pd.DataFrame(place_data) \nfigure, axes = plt.subplots(1, 2, sharex=True, figsize=(18,6))\nfigure.suptitle('Number of Purchase place Customer using')\nsns.barplot(x='type', y='mean', data=place_df,palette='pastel', ax=axes[0])\nsns.barplot(x='type', y='count', data=place_df,palette='pastel', ax=axes[1])","27a21ed8":"### **Thank You for Viewing my Notebook**","15bfef39":"## Income Analysis","69bed255":"## Education Level Analysis","468bef87":"# Promotion Analysis","1e2d3f68":"# Place Analysis","3b3cacd7":"# **Customer, Product, Promotion, Place Analysis and Clustering**","a4a2d8cf":"# Data Explanation\n\n## People\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\n## Products\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\n## Promotion\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n## Place\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month","8c7a9656":"## Kidhome Analysis","e1db2b26":"# Customer Analysis","e1f8d59f":"# Products Analysis","63916dfa":"## Age Analysis","a1d4e6f5":"## Complain Analysis","7eac37fd":"## Date Customer Enroll With Company Analysis","d5e2f90e":"## Teenhome Analysis","6134c796":"## Marital Status Analysis"}}