{"cell_type":{"7af386f5":"code","07e75a7d":"code","4ea81945":"code","e5ff7d31":"code","0e3ed12a":"code","a9a8e317":"code","b4f12709":"code","3f71bd78":"code","d9797fac":"code","01124e1a":"code","3d7ef86a":"code","c599321c":"code","d617cb45":"code","ec6c0fa1":"markdown","33c450df":"markdown","e315c46d":"markdown","34d1118f":"markdown","afd120a4":"markdown","3311db85":"markdown","1b3a40bc":"markdown","c07011b0":"markdown","41ea8152":"markdown","482393ae":"markdown","5e996024":"markdown","fe3f95ac":"markdown","bda06467":"markdown","7c89bf62":"markdown","6ad2a3f0":"markdown","88b30310":"markdown"},"source":{"7af386f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","07e75a7d":"#This will help us keep track of the submissions\nsub_name_list = ['dummy', 'mdabbert', 'BossaNostra 1', 'BossaNostra 2']\nscore_list = [] #We can keep the scores here\n\n#Put the submissions in dataframe form and add to a list.\nsub_list = []\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-fight-night-edgar-vs-munhoz-dummy-task-sub\/task-dummy.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-fight-night-82220-contest-submission\/ufc-8-22-20-sub.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/edgar-vs-munhoz-contest-submission-1\/edgar_vs_munhoz_Submission_1.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/edgar-vs-munhoz-contest-submission-2\/edgar_vs_munhoz_Submission_2.csv\")\nsub_list.append(temp_df)","4ea81945":"results_df = pd.read_csv(\"\/kaggle\/input\/ultimate-ufc-dataset\/most-recent-event.csv\")\n\n#We only need the fighter names, odds, and winner\n\nresults_df = results_df[['R_fighter', 'B_fighter', 'R_ev', 'B_ev', 'Winner']]\ndisplay(results_df)","e5ff7d31":"df = pd.read_csv('\/kaggle\/input\/ultimate-ufc-dataset\/ufc-master.csv')\ndf['date'] = pd.to_datetime(df['date'])\n\ndf['underdog'] = ''\n\nred_underdog_mask = df['R_odds'] > df['B_odds']\n#print(red_underdog_mask)\n#print()\n\nblue_underdog_mask = df['B_odds'] > df['R_odds']\n#print(blue_underdog_mask)\n#print()\n\neven_mask = (df['B_odds'] == df['R_odds'])\n#print(even_mask)\n#print()\n\ndf['underdog'][red_underdog_mask] = 'Red'\ndf['underdog'][blue_underdog_mask] = 'Blue'\ndf['underdog'][even_mask] = 'Even'\n\n","0e3ed12a":"underdog_win_df = df[(df['Winner'] == df['underdog'])].copy()\nunderdog_win_df['winner_odds'] = underdog_win_df[['B_odds', 'R_odds']].values.max(1)\nunderdog_win_df = underdog_win_df.sort_values(by=['winner_odds'], ascending=False)\nunderdog_display = underdog_win_df[['R_fighter', 'B_fighter', 'weight_class', 'date', 'Winner', 'winner_odds']]\n\ndisplay(underdog_display.head(10))","a9a8e317":"#Returns a specific bet EV based on winning_ev and probability.\ndef get_bet_ev(ev, prob):\n    \n    return(ev*prob - (1-prob)*100)","b4f12709":"#Used to determine the bet of each fight.  We will use probabilities and the ev to \n#determine profitable bets\ndef get_bet(R_prob, B_prob, R_ev, B_ev):\n    red_ev = get_bet_ev(R_ev, R_prob)\n    blue_ev = get_bet_ev(B_ev, B_prob)\n    if red_ev > 0:\n        return('Red')\n    if blue_ev > 0:\n        return('Blue')\n    \n    return 'None'","3f71bd78":"def get_profit(winner, bet, R_ev, B_ev):\n    if bet == 'None':\n        return 0\n    if (bet == 'Blue' and winner == 'Blue'):\n        return B_ev\n    if (bet == 'Red' and winner == 'Red'):\n        return R_ev\n    else:\n        return (-100)","d9797fac":"#Let's make a helper function to make this easier\n\ndef get_score(sub, results):\n#    display(sub)\n#    display(results)\n    #Let's merge the two dataframes\n    merge_df = pd.merge(sub, results)\n    #display(merge_df)\n    #We can get the proper bet by using a lambda function\n    merge_df['Bet'] = merge_df.apply(lambda x: get_bet(x['R_prob'],x['B_prob'],x['R_ev'],x['B_ev']), axis=1)\n    merge_df['Profit'] = merge_df.apply(lambda x: get_profit(x['Winner'], x['Bet'], x['R_ev'], x['B_ev']), axis=1)\n    display(merge_df)\n    return(sum(merge_df['Profit']))","01124e1a":"z = 0\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","3d7ef86a":"z = 1\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","c599321c":"z = 2\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","d617cb45":"z = 3\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","ec6c0fa1":"# Iterate the submissions and see how everyone did!","33c450df":"BossaNostra's 2nd submission did much better returning a profit of 350 units.  The odd thing about this submission is that he only won 1 bet out of 5 placed!  But it was the correct bet.  He was able to predict Shana Dobson's win over Mariya Agapova.","e315c46d":"Since dummy always and only picks underdogs to win he had a historic night.  Winning four of seven bets for a profit of 1172 units on 700 units bet.  A very nice profit indeed!","34d1118f":"# Submission #2: mdabbert's Submission","afd120a4":"# Submission #1: Dummy Submission\n\nThese are the results of the dummy submission.","3311db85":"## First let's add an underdog column to the original data.","1b3a40bc":"BossaNostra's 1st submission saw a loss of 490.00 units.  His trouble came from it being another week where `blue` won more than normal.  `blue` won seven of nine fights.  A much higher rate that can be expected.","c07011b0":"# Open All Submissions and add to a list","41ea8152":"# Purpose\n\nI am going to go through the task submissions for [Contest #8: UFC Fight Night: Edgar vs. Munhoz Bet Contest](https:\/\/www.kaggle.com\/mdabbert\/ultimate-ufc-dataset\/tasks?taskId=1775)  and see what set of predictions was the most profitable (if any!)\n","482393ae":"# Submission #4: BossaNostra's 2st Submission","5e996024":"Shana Dobson's win over Mariya Agapova is the largest upset in the UFC to occur since 2010. This leads to something interesting when it comes to the trained models.  Since no one with odds worse than +735 had ever won, models that rely heavily on odds could have a hard time predicting this result.\n\nThat said, let's see how everyone did!\n\n`Bonus fact`:  2 of the top ten upsets occurred in women's flyweight bouts.  They both have happened since January....","fe3f95ac":"# Submissions\n\nThere are 4 submissions.\n\n1. The dummy file (gives each fighter a .5 probability of winning. Therefore will bet every underdog with greater than +100 odds.)\n2. mdabbert's (my!) submission. A GaussianNB Classifier using the following features: ['R_Reach_cms', 'total_round_dif', 'R_Height_cms', 'R_avg_SIG_STR_pct', 'B_age', 'R_longest_win_streak', 'lose_streak_dif', 'ko_dif', 'R_win_by_Decision_Majority', 'longest_win_streak_dif', 'avg_sub_att_dif', 'R_Weight_lbs', 'sig_str_dif', 'B_Height_cms', 'B_avg_SUB_ATT', 'R_win_by_TKO_Doctor_Stoppage', 'B_draw', 'avg_td_dif', 'R_win_by_Decision_Split', 'age_dif', 'B_current_win_streak', 'R_odds']\n2. BossaNostra's submission #1\n3. BossaNostra's submission #2","bda06467":"mdabbert's model returned a profit of 459.81 units.  He won 5 of 10 bets including two underdog bets.  His big miss was not being able to predict the Shana Dobson upset.","7c89bf62":"# Submission #3: BossaNostra's 1st Submission","6ad2a3f0":"# Final Results\n\n* `dummy`: +1172.00 units\n* `mdabbert`: +459.81 units\n* `BossaNostra 1`: -490.00 units\n* `BossaNostra 2`: +350.00 units\n\n`dummy` is the winner","88b30310":"Crazy night!  We had a +750 fighter and a +387 fighter win.  How unusual is this?  Let's take a quick look."}}