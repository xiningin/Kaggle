{"cell_type":{"8e2aa3bc":"code","e9c01789":"code","18f8defb":"code","e6ad8e1f":"code","92da91e6":"code","39f2c0c1":"code","a865ab10":"code","a891baf8":"code","e05393eb":"code","5a2072ed":"code","76a84cc1":"code","6a084730":"code","dfe51f21":"markdown","7dfbd959":"markdown","d0a9d9d7":"markdown"},"source":{"8e2aa3bc":"# Code to import libraries \nimport sys # import sys library to check the python version\nprint (sys.version_info)","e9c01789":"import pandas as pd # import pandas library","18f8defb":"import numpy as np # import numpy library","e6ad8e1f":"# Read excel file \ndf = pd.read_excel('basic_indicators.xlsx')\ndf.head(20)","92da91e6":"# Drop the unused columns that contains only 'NaN'\ndf.drop(df.columns.to_series()[17:24], axis=1, inplace=True)  # This column contains only 'NaN'\ndf.drop(df.columns[0], axis=1, inplace=True) # This column contains only 'NaN'\ndf.drop(df.columns[14], axis=1, inplace=True)  # This column contains 'NaN' and 'x', no actual meaning\ndf.head(20)","39f2c0c1":"# Drop the first 3 rows \ndf.drop(df.index[:4], inplace=True)\ndf.head(20)","a865ab10":"# Drop the rows in the end of the file which is not needed in the output file\ndf.drop(df.index.to_series()[202:], inplace=True)   # From row 202 to the end of the file","a891baf8":"# Rename the column names\nfor i in range(1, len(df.columns)):\n    df.columns.values[i] = str(i-1)\n\ndf.columns.values[0] = 'Country Name'\ndf.head(20)","e05393eb":"# Replace 'NaN' and '-' with a '-1', this helps to convert the strings to integer otherwise will triger errors\ndf = df.replace({np.nan: '-1', '\u2013': '-1'}, regex=True)\ndf.head(20)","5a2072ed":"# Converting data type and round it to the nearest integer\ndata = df.copy()      # Make a copy of the dataframe before converting all the data\ndata.iloc[:,1:] = np.around(data.iloc[:,1:].astype(np.double)) # Rounding and converting, must use pn.around and np.double\ndata.head(20)","76a84cc1":"# Replace -1 with empty string \ndata = data.replace(-1, '', regex=True)\n# data = data.replace({-1: '', '-1':''}, regex=True)\ndata.head(20)","6a084730":"# Save dataframe to csv file\ndata.to_csv('basic_indicators.csv', sep='\\t', encoding='utf-32', index=False)","dfe51f21":"## 2. Parse basic_indicators.xlsx File","7dfbd959":"# 1.  Import libraries ","d0a9d9d7":"# Parsing Excels\n\nDate: 17\/03\/2018\n\nVersion: 1.0\n\nEnvironment: Python 3.6.2 and Jupyter notebook\n\nLibraries used:\n* pandas (for dataframe, included in Anaconda Python 3.6)  \n* numpy (for numpy array, included in Anaconda Python 3.6) "}}