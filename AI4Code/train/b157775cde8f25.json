{"cell_type":{"2aad5ac4":"code","5f9b646c":"code","a3076269":"code","4e171e51":"code","c19d51ea":"code","82e56e62":"code","39ac42b3":"code","3876b970":"code","20f94a2b":"code","af3e08f6":"code","c9567c34":"code","6be87009":"code","d5c6ff17":"code","2c8586e5":"code","a8d821bc":"code","9b221ce2":"code","ddbd08f2":"code","d5d5a3a7":"code","5f278439":"code","413be28d":"code","2f68c0fa":"code","66f05f9e":"code","abc6f879":"code","cd2b3edf":"code","34cf787e":"code","ef38095d":"code","55133a02":"code","95b32508":"code","3058424e":"code","cf032a84":"code","e8c92fbc":"code","6da940bd":"code","445f397f":"code","0b49e14a":"code","e0c8364b":"code","d6c51f4f":"code","008a5341":"code","9124f247":"code","760085f7":"code","d1a0e060":"code","648bb1bf":"code","bffab0d3":"code","3cdaf45c":"code","a0f30fc5":"code","2f87572b":"code","7b272772":"code","ccc12795":"code","618e6699":"code","c02857a1":"code","5c1f3b2a":"code","9ac134f3":"code","ea12ac90":"code","eea4516f":"code","a619e95f":"code","f692306f":"code","3c516e7c":"code","16c5bc30":"code","b5086ef8":"code","68cf5d85":"code","c941b92f":"code","21c75e28":"code","c53449f6":"code","a97fca0f":"code","9dd19626":"code","38716d62":"code","cbafad5d":"code","8f21582e":"code","0ad5f92e":"code","1327277d":"markdown","1f08326b":"markdown","7c20ad0f":"markdown","807e3f6d":"markdown","be28cba3":"markdown","e463f77a":"markdown"},"source":{"2aad5ac4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f9b646c":"data=pd.read_csv('\/kaggle\/input\/fraudulent-claim-on-cars-physical-damage\/training data\/training data.csv')","a3076269":"data","4e171e51":"data.isnull().sum()","c19d51ea":"data.claim_est_payout=data.claim_est_payout.fillna(0)\ndata.witness_present_ind=data.witness_present_ind.fillna(0)\ndata.age_of_vehicle=data.age_of_vehicle.fillna(0)\ndata.marital_status=data.marital_status.fillna(0)","82e56e62":"data.isnull().sum()","39ac42b3":"data[['claim_day_of_week','accident_site']]","3876b970":"data.dtypes","20f94a2b":"data.accident_site.unique()","af3e08f6":"data.channel.dtypes","c9567c34":"data.head()","6be87009":"data[(data.channel==\"Online\")&(data.age_of_driver >40)& (data.gender==\"F\")&(data.fraud==1)].groupby(\"accident_site\").count().iloc[:,0].sort_values(ascending=False)","d5c6ff17":"y = data.fraud\n\ny.head()","2c8586e5":"x = data.iloc[:,:-1]\nx.head()","a8d821bc":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","9b221ce2":"x.head()","ddbd08f2":"data.iloc[:,10:-10]","d5d5a3a7":"nom =[2,8,11,12,16,22]\nord = [20]","5f278439":"from sklearn.preprocessing import OneHotEncoder, OrdinalEncoder\nfrom sklearn.compose import make_column_transformer\n\ntrans = make_column_transformer((OneHotEncoder(sparse=False),nom),\n                               (OrdinalEncoder(), ord),\n                               remainder= 'passthrough')\n                                  \n","413be28d":"import pandas as pd","2f68c0fa":"data.columns","66f05f9e":"x = data.drop(columns = ['policy_report_filed_ind'])","abc6f879":"x.claim_date=pd.to_datetime(x.claim_date,dayfirst=False)","cd2b3edf":"x[['month']] = pd.DataFrame(x.claim_date.dt.month)\nx[['day']] = pd.DataFrame(x.claim_date.dt.day)\nx[['year']] = pd.DataFrame(x.claim_date.dt.year)","34cf787e":"x.head()","ef38095d":"x = data.drop(columns = ['claim_date'])\n\nx.head()","55133a02":"y = data[['policy_report_filed_ind']]\n\ny.head()","95b32508":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","3058424e":"x.head()","cf032a84":"x = data.drop(columns = ['claim_date'])\n\nx.head()","e8c92fbc":"y = data[['policy_report_filed_ind']]\n\ny.head()","6da940bd":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","445f397f":"x.head()","0b49e14a":"nom_cols =[2,8,10,11,15,21]\nord_cols = [19]\nnum_cols=[0,3,4,5,6,7,9,12,13,14,16,17,18,20,22]\n#Kbin_cols=[0,1,4]\nbinarizer_cols=[1]","e0c8364b":"from sklearn.preprocessing import OneHotEncoder, OrdinalEncoder,KBinsDiscretizer,Binarizer\nfrom sklearn.compose import make_column_transformer\nfrom sklearn import set_config\nfrom sklearn.preprocessing import StandardScaler\n\ntrans = make_column_transformer((OneHotEncoder(sparse=False),nom_cols),\n                                 (OrdinalEncoder(), ord_cols),(StandardScaler(),num_cols)\n                                 ,(Binarizer(threshold=55),binarizer_cols),remainder= 'passthrough')\nset_config(display= 'diagram')\ntrans","d6c51f4f":"from sklearn.neighbors import KNeighborsClassifier\nalgorithm = KNeighborsClassifier(5) #\nalgorithm","008a5341":"from sklearn.pipeline import make_pipeline\npipe = make_pipeline(trans,algorithm)\npipe","9124f247":"pipe.fit(x_train,y_train)","760085f7":"pred = pipe.predict(x_test)\npred","d1a0e060":"from sklearn.metrics import accuracy_score\naccuracy_score(pred,y_test)*100","648bb1bf":"from sklearn.svm import SVC\nmodel1=SVC(kernel='linear')\npipe_1 = make_pipeline(trans,algorithm)\npipe_1\npipe_1.fit(x_train,y_train)\npred_1=pipe.predict(x_test)\naccuracy_score(pred_1,y_test)*100","bffab0d3":"from imblearn.over_sampling import RandomOverSampler\nover= RandomOverSampler()\no_x , o_y = over.fit_resample(x,y)\no_y.value_counts()","3cdaf45c":"from imblearn.over_sampling import SMOTE\nover= RandomOverSampler()\no_x , o_y = over.fit_resample(x,y)\no_y.value_counts()","a0f30fc5":"from imblearn.pipeline import make_pipeline\ns = SMOTE()\nn_pipe = make_pipeline(trans,s,algorithm)\nn_pipe","2f87572b":"accuracy_score(pred,y_test)*100","7b272772":"from sklearn.linear_model import LogisticRegression as lr\nalgorithm_2 = lr(solver='liblinear')\npipe_2 = make_pipeline(trans,algorithm_2)\npipe_2","ccc12795":"pipe_2.fit(x_train,y_train)","618e6699":"pred_2 = pipe_2.predict(x_test)\npred_2","c02857a1":"accuracy_score(pred_1,y_test)*100","5c1f3b2a":"x.head()","9ac134f3":"from sklearn.preprocessing import StandardScaler                   #For one column only \nimport seaborn as sns\ns=StandardScaler()\nx.vehicle_price=pd.DataFrame(s.fit_transform(x[['vehicle_price']]))\nsns.distplot(x.vehicle_price)","ea12ac90":"data.annual_income.min()","eea4516f":"data.annual_income.max()","a619e95f":"from sklearn.preprocessing import MinMaxScaler\nm= MinMaxScaler()\ndata['annual_income']=m.fit_transform(data[['annual_income']])","f692306f":"data.annual_income.min()","3c516e7c":"data.annual_income.max()","16c5bc30":"x.head()","b5086ef8":"x[(x.gender=='M')&(x.channel=='Online')&(x.living_status=='Rent')].count()[1]","68cf5d85":"x[(x.gender=='M')&(x.channel=='Online')&(x.living_status=='Rent')].count()","c941b92f":"x[(x.fraud==1)].mean()[4]","21c75e28":"x[(x.gender=='F')&(x.fraud==1)].count()","c53449f6":"data[(data.fraud==1)].groupby('gender').count().iloc[:,0]","a97fca0f":"data[(data.fraud==1)].groupby('marital_status').count()","9dd19626":"x.head(2)","38716d62":"data[data.channel==\"Broker\"].groupby('vehicle_category').mean()[[\"claim_est_payout\"]]>4999","cbafad5d":"data[data.fraud==1].gender.value_counts(normalize=True)[0]","8f21582e":"data.head(2)","0ad5f92e":"data[data.fraud==1].groupby('gender').count().iloc[:1,0]","1327277d":"**Married or unmarried fraud more ?**","1f08326b":"**2.What is the average annual income of fraudsters?**","7c20ad0f":"**How many males who prderd online live on rent?**","807e3f6d":"**3.which gender has done most fraud?**","be28cba3":"**What percentage of men and women are fraud?**","e463f77a":"**Which vehicle category taken from broker have average claim estimate payout more than 7000?**"}}