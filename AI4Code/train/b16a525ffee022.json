{"cell_type":{"aeb42117":"code","7fbc26a3":"code","28119c49":"code","c86c4fa6":"code","9edff773":"code","70ee8bd0":"code","0b950be3":"code","3000636b":"code","ebc4016b":"code","680b4200":"code","d028539d":"code","bbb83622":"code","f1c5aa42":"code","5e80b4ec":"code","390b3801":"code","e5337e67":"code","1bacc80e":"code","b5b16316":"code","0e7e0121":"code","90811350":"code","167acee6":"code","bc8fe4b0":"code","d88a1ff2":"code","7c65c675":"code","1dd89dfb":"code","6e7c68aa":"code","e396d1eb":"code","fc701fac":"code","ba810db4":"code","f600f3f0":"code","2f01b2c8":"code","505e46fe":"code","3614fd30":"code","949376c0":"code","9e08cf46":"code","e3e9afc1":"code","1540d885":"code","7eef5f1d":"code","a5416f09":"code","56ccbba3":"code","487bcbe2":"markdown","3dee8221":"markdown","0cc3a1b0":"markdown","fa4268d1":"markdown","61ec229a":"markdown","2b70b707":"markdown","399080a1":"markdown","b78772b9":"markdown","14deee61":"markdown"},"source":{"aeb42117":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7fbc26a3":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport datetime as dt\n\npd.set_option(\"display.max_columns\", 500) \npd.set_option(\"display.max_rows\", 200)\nplt.rcParams['figure.figsize'] = [15, 6]\nsns.set_style(\"darkgrid\")","28119c49":"!pip install pandas-profiling","c86c4fa6":"# Load data to pandas\n\nonline_sales = pd.read_csv('\/kaggle\/input\/uisummerschool\/Online_sales.csv', sep=',')\nonline_sales.head()","9edff773":"# Menampilkan beberapa kolom\nonline_sales [['Date', 'Product SKU', 'Quantity', 'Revenue', 'Tax']]","70ee8bd0":"# Menyimpan data ke variabel baru\ntest = online_sales [['Date', 'Product SKU', 'Quantity', 'Revenue', 'Tax']]\n\n# Tidak menampilkan output\n","0b950be3":"# Jika setelah disimpan divariabel lalu ingin ditampilkan \ntest.head(10)\n# head bagian atas, tail bagian bawah data (sesuai kolom di csv)","3000636b":"# Melakukan filter berdasarkan nilai suatu kolom\n# Misal ambil data dengan Product SKU bernilai GGOENEBQ079099\n# Cara 1\ncondition1= online_sales['Product SKU'] == 'GGOENEBQ079099'\n\nonline_sales[ (condition1) ]\n# online_sales[online_sales['Product SKU'] == 'GGOENEBQ079099']\n\n\ncondition2= online_sales['Quantity'] > 2\nonline_sales[ (condition1) & (condition2)]","ebc4016b":"# Cara 2\n# Ingin mengambil data \nonline_sales.query('Quantity > 10').head(5)","680b4200":"test = online_sales [['Date', 'Product SKU', 'Quantity', 'Revenue', 'Tax', 'Delivery']]\n## Kolom baru\ntest['Net_Income'] = test['Revenue'] - test['Tax'] - test['Delivery']\ntest.head()","d028539d":"## Update kolom yg ada berdasar kondisi\n\nkondisi = test['Tax'].isnull() \n# bisa juga menggunakan >, <, == nilai tertentu \n# kondisi= test['Quantity'] > 2\n\ntest.loc[kondisi, ['Tax']] = 1","bbb83622":"# Group by untuk aggregasi\n\ntest = online_sales.groupby(['Date'])['Quantity'].sum().reset_index()\ntest.head()","f1c5aa42":"#Group by multiple kolom\ntest = online_sales.groupby(['Date', 'Product SKU'])['Quantity'].sum().reset_index()\ntest.head()","5e80b4ec":"online_sales.head(3)","390b3801":"# Agregasi beberapa tipe\ntest = online_sales.groupby(['Date']).agg({'Quantity': 'sum',\n                                                      'Revenue': 'sum',\n                                                      'Tax': 'sum',\n                                                      'Product SKU': 'count',\n                                                      'Transaction ID': 'count',\n                                                     }).reset_index()\ntest.head()","e5337e67":"#Sort data berdasar quantity descending\nonline_sales.sort_values(by=['Quantity'], ascending = False).head(15)","1bacc80e":"test.head(3)","b5b16316":"test.rename(index=str, columns={\"Quantity\": \"Total Quantity\", \"Revenue\": \"Total Revenue\"}, inplace = True)\n\ntest.drop(columns=['Product SKU', 'Transaction ID'], inplace = True)\ntest.head()","0e7e0121":"## Tahap 1 Olah data hingga mendapat total revenue per hari\nonline_sales = online_sales = pd.read_csv('\/kaggle\/input\/uisummerschool\/Online_sales.csv')\nbackup = online_sales.copy() ##untuk debugging pengajar, tak usah dihiraukan\n\ndaily_online_revenue = online_sales.groupby(['Date'])['Revenue'].sum().reset_index()\ndaily_online_revenue.tail()","90811350":"## Plot\n\ng = sns.lineplot(data = daily_online_revenue, x= 'Date', y = 'Revenue')     ","167acee6":"daily_online_revenue.info()","bc8fe4b0":"daily_online_revenue['Date'] = daily_online_revenue['Date'].astype(str)\ndaily_online_revenue['Date'] = pd.to_datetime(daily_online_revenue['Date'])\ng = sns.lineplot(data = daily_online_revenue, x= 'Date', y = 'Revenue')     ","d88a1ff2":"## Tahap 2 Tambahkan data yang akan diprediksi\nadd_data = [['2017-12-01', 0], ['2017-12-02', 0], ['2017-12-03', 0],\n            ['2017-12-04', 0], ['2017-12-05', 0], ['2017-12-06', 0],\n            ['2017-12-07', 0], ['2017-12-08', 0], ['2017-12-09', 0],\n            ['2017-12-10', 0], ['2017-12-11', 0], ['2017-12-10', 0],\n            ['2017-12-13', 0], ['2017-12-14', 0]\n           ] \n  \n# Create the pandas DataFrame \nadd_data_df = pd.DataFrame(add_data, columns = ['Date', 'Revenue']) \nadd_data_df['Date'] = add_data_df['Date'].astype(str)\nadd_data_df['Date'] = pd.to_datetime(add_data_df['Date'])\n\n\ndaily_online_revenue = daily_online_revenue.append(add_data_df)\ndf_rev = daily_online_revenue.copy()  ##untuk evaluasi pemateri\n\ndaily_online_revenue.tail(20)","7c65c675":"## 3 Persiapan data prediksi dan training\n\n## Add feature \ndaily_online_revenue = 'Edit this part'","1dd89dfb":"#noorellg\n## 3 Persiapan data prediksi dan training\n\n## Add feature \n\n\ndaily_online_revenue = online_sales.groupby(['Date'])['Revenue'].sum().reset_index()\ndaily_online_revenue['Date'] = daily_online_revenue['Date'].astype(str)\ndaily_online_revenue['Date'] = pd.to_datetime(daily_online_revenue['Date'])\ndaily_online_revenue['Revenue-1'] = daily_online_revenue ['Revenue'].shift(1)\ndaily_online_revenue['Revenue-2'] = daily_online_revenue ['Revenue'].shift(2)\ndaily_online_revenue['Revenue-3'] = daily_online_revenue ['Revenue'].shift(3)\ndaily_online_revenue['Revenue-4'] = daily_online_revenue ['Revenue'].shift(4)\ndaily_online_revenue['Revenue-5'] = daily_online_revenue ['Revenue'].shift(5)\ndates=pd.date_range('2017-11-26',periods=5)\ndaily_online_revenue[daily_online_revenue['Date'].isin(dates)]\n\n","6e7c68aa":"#noorellg\n\ndef preprocess (dataset):\n    preprocess_dataset=dataset.copy()\n\n    preprocess_dataset['Revenue-1']=preprocess_dataset['Revenue'].shift(1)\n    preprocess_dataset['Revenue-2']=preprocess_dataset['Revenue'].shift(2)\n    preprocess_dataset['Revenue-3']=preprocess_dataset['Revenue'].shift(3)\n    preprocess_dataset['Revenue-4']=preprocess_dataset['Revenue'].shift(4)\n    preprocess_dataset['Revenue-5']=preprocess_dataset['Revenue'].shift(5)\n    preprocess_dataset = preprocess_dataset.dropna()\n\n    return preprocess_dataset","e396d1eb":"#noorellg\n# If you want to submit, please change the value to \"2017-11-30\"\n\nend_of_training_date = \"2017-11-16\"\ntrain_data = daily_online_revenue[daily_online_revenue.Date<=end_of_training_date]\ntrain_data\n","fc701fac":"#noorellg\ntest_data = daily_online_revenue[daily_online_revenue.Date>=end_of_training_date]\ntest_data","ba810db4":"#noorellg\n# Pisahkan kolom yang ingin diprediksi (biasa disebut label menjadi y), dan variabel lain menjadi x\nx_train = train_data[[\"Revenue-1\",\"Revenue-2\", \"Revenue-3\", \"Revenue-4\", \"Revenue-5\"]].fillna(0)\nx_train","f600f3f0":"#noorellg\n# Pisahkan kolom yang ingin diprediksi (biasa disebut label menjadi y), dan variabel lain menjadi x\ny_train = train_data[[\"Revenue\"]]\ny_train","2f01b2c8":"#noorellg\n# Pisahkan kolom yang ingin diprediksi (biasa disebut label menjadi y), dan variabel lain menjadi x\n\nx_test = test_data[[\"Revenue-1\",\"Revenue-2\", \"Revenue-3\", \"Revenue-4\", \"Revenue-5\"]].fillna(0)\nx_test","505e46fe":"#noorellg\n# Pisahkan kolom yang ingin diprediksi (biasa disebut label menjadi y), dan variabel lain menjadi x\n\ny_test = test_data[\"Revenue\"]\ny_test ","3614fd30":"#noorellg","949376c0":"\n# # If you want to submit, please change the value to \"2017-11-30\"\n# end_of_training_date = \"2017-11-16\" \n\n# train_data = 'Edit this part'\n# test_data = 'Edit this part'","9e08cf46":"# # Pisahkan kolom yang ingin diprediksi (biasa disebut label menjadi y), dan variabel lain menjadi x\n\n# x_train = 'Edit this part'\n# y_train = 'Edit this part'\n\n# x_test = 'Edit this part'\n# y_test = 'Edit this part'","e3e9afc1":"from sklearn.ensemble import RandomForestRegressor\n\ndef fit(x_train, y_train):\n    model = RandomForestRegressor(random_state=1)  #14045\n    model.fit(x_train, y_train)\n    return model\n\ndef predict(model, x_test):\n    y_pred = model.predict(x_test)\n    return y_pred\n\nmodel = fit(x_train, y_train)\n\n","1540d885":"# Predict the model\ndf_rev2 = df_rev.copy()\nn_iteration = len(x_test)\nresult = []\nfor i in range(n_iteration):\n    y_pred = predict(model, pd.DataFrame(x_test.iloc[i]).transpose())\n    result.append(y_pred[0])\n    df_rev2.loc[df_rev2[\"Date\"]==x_test.index[i],\"Revenue\"] = y_pred\n    \n    # Repeat the whole process, except for model fitting\n    daily_online_revenue = preprocess(df_rev2).set_index('Date')\n    _, testing_data = split_train_test(daily_online_revenue,end_of_training_date)\n    x_test, _ = split_label_and_predictor(testing_data)\nresult","7eef5f1d":"y_test","a5416f09":"# THIS IS FOR VALIDATION PURPOSE\n# Prediction vs Actual\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\ncomparison = pd.DataFrame({\"Prediction\":result,\"Actual\":y_test['Revenue']})\ncomparison.index = y_test.index\nerror = sqrt(mean_squared_error(comparison[\"Actual\"], comparison[\"Prediction\"]))\nprint(\"Error Score (RMSE) = {}\".format(round(error,2)))\n\nhistorical = pd.DataFrame(y_train).rename(columns={\"Revenue\":\"Actual\"}).tail(14)\n\npd.concat([historical,comparison],sort=True).plot();","56ccbba3":"# Save the result to CSV for submission\nformatted_result = pd.DataFrame(result).reset_index().rename(columns={\"index\":\"Id\",0:\"Revenue\"})\ndisplay(formatted_result)\n\n# Uncomment the code below if you want to save the result\nformatted_result[['Id', 'Revenue']].to_csv(\"result.csv\",index=False)","487bcbe2":"### 1.1 Show and assigning value","3dee8221":"# 2. Our Challenge","0cc3a1b0":"### 1.3 Create or update colomn","fa4268d1":"### 1.2 Filter and selection","61ec229a":"### 1.4 Group by Data","2b70b707":"### 1.5 Sorting Data","399080a1":"### 1.6 Mengganti nama kolom atau mendelete kolom","b78772b9":"# 1. Basic Pandas","14deee61":"Kita memiliki data penjualan online hingga 30 november 2017, Pak Bos meminta untuk melakukan prediksi \nberapa penjualan kita untuk 2 minggu ke depan (1 Desember -14 Desember)\nDari data penjualan online :\n1. Olah data hingga mendapat total revenue per hari [sudah]\n2. Tambahkan data yang akan diprediksi [sudah]\n3. Persiapan data prediksi dan training\n4. Training dan testing (modelling)\n"}}