{"cell_type":{"d7aa093d":"code","44418849":"code","74ddc3fa":"code","16742235":"code","b50545eb":"code","e8157a07":"code","d71cf344":"code","ce90ab27":"code","555739d3":"code","096c53ed":"code","fa3e140d":"code","fb4f95fe":"code","4db052e7":"code","3e668d73":"code","dd1b904d":"code","34c5b160":"code","d7681063":"code","900e0d4d":"code","8aa6b8af":"code","26ee6eee":"code","ad5ada2a":"code","8857de54":"code","2e6dfff2":"code","0a042f7f":"code","9db0d116":"code","8d4f1f47":"code","74d71f56":"code","56dee713":"code","de29efcf":"code","16b4c687":"code","232c4d42":"code","60128cd8":"code","cb809864":"code","13b87b60":"code","0fd170be":"code","6fee6510":"code","bcc4f762":"code","4e90066a":"code","1ca8aa45":"code","7c5c5424":"code","37822716":"code","2b012161":"code","201493aa":"code","df396e72":"code","96c32181":"code","a060a773":"code","1b2b0261":"code","7cedac9b":"code","5fce591c":"markdown","96591bda":"markdown","d222843f":"markdown","41492d0c":"markdown","11160961":"markdown","e55b6b88":"markdown","7e7cf9e7":"markdown","1c59551d":"markdown","54488623":"markdown","fa7255f1":"markdown","a11d8135":"markdown","2f38598b":"markdown","fe758d1d":"markdown","428d7059":"markdown"},"source":{"d7aa093d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nfrom datetime import datetime\n%matplotlib inline","44418849":"df=pd.read_csv(\"..\/input\/hcl-stock-price\/HCLTECH.csv\")","74ddc3fa":"df","16742235":"df.describe()","b50545eb":"df.info()","e8157a07":"df.columns","d71cf344":"columns=['Date','Open', 'High', 'Low','Close',]\ndf=df[columns]","ce90ab27":"df","555739d3":"df.insert(5,'5-DAY_SMA',0)\n\ndf.insert(6,'14-DAY_WMA',0)\ndf.insert(7,'Momentum',0)\ndf.insert(8,'Stochastic K%',0)\ndf.insert(9,'Stochastic D%',0)\ndf.insert(10,'Relative_strength_index',0)\ndf.insert(11,'Signal(10)',0)\ndf.insert(12,'Larry_William_R%',0)\ndf.insert(13,'ADO',0)\ndf.insert(14,'CCI',0)\n\n\n","096c53ed":"df","fa3e140d":"\nTech_Indicators=['5-DAY_SMA','14-DAY_WMA','Momentum','Stochastic K%','Stochastic D%','Relative_strength_index','Signal(10)','Larry_William_R%','ADO','CCI']\n\nfor i in Tech_Indicators:\n    df[i]=df[i].astype(float)\n   \n\n","fb4f95fe":"df1=df.copy()","4db052e7":"df1.insert(15,'200-DAY_SMA',0)\nn=0\nsum=0\nwhile(n!=5081):\n    sum=0\n    for i in range(n,n+200):\n        sum=sum+df['Close'][i]\n        \n    df1['200-DAY_SMA'][n+199]=sum\/200\n    n=n+1","3e668d73":"n=0\nsum=0\nwhile(n!=5277):\n    sum=0\n    for i in range(n,n+5):\n        sum=sum+df['Close'][i]\n        \n    df['5-DAY_SMA'][n+4]=sum\/5\n    n=n+1","dd1b904d":"fig = go.Figure(data=[go.Candlestick(x=df['Date'],\n                open=df['Open'],\n                high=df['High'],\n                low=df['Low'],\n                close=df['Close'])])\nfig.add_trace(\n    go.Scatter(name=\"5-DAY_SMA\",\n        x=df['Date'],\n        y=df['5-DAY_SMA'],\n        mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True,)\n)\nfig.add_trace(\n    go.Scatter(name=\"200-DAY_SMA\",\n        x=df['Date'],\n        y=df1['200-DAY_SMA'],\n        mode=\"lines\",\n        line=go.scatter.Line(color=\"saddlebrown\",width=0.5),\n        showlegend=True)\n)\n\nfig.show()","34c5b160":"n=0\nsum=0\nk=1\nwhile(n!=5268):\n    sum=0\n    k=1\n    for i in range(n,n+14):\n        sum=sum+k*df['Close'][i]\n        k=k+1\n    df['14-DAY_WMA'][n+13]=sum\/105\n    n=n+1","d7681063":"fig = go.Figure(data=[go.Candlestick(x=df['Date'],\n                open=df['Open'],\n                high=df['High'],\n                low=df['Low'],\n                close=df['Close'])])\nfig.add_trace(\n    go.Scatter(name=\"14-DAY_WMA\",\n        x=df['Date'],\n        y=df['14-DAY_WMA'],\n        mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True)\n)","900e0d4d":" for i in range(0,5272):\n     df['Momentum'][i+9]=df['Close'][i+9]-df['Close'][i]\n    ","8aa6b8af":"plt.figure(figsize=(25,10))\nplt.plot(df['Date'],df['Momentum'],lw=0.80)\nplt.plot(df['Date'],[0]*df['Date'].shape[0],c='black',lw=0.75)\nplt.title(\"MOMENTUM\")","26ee6eee":"for i in range(0,5271):\n    \n    df['Stochastic K%'][i+9]=((df['Close'][i+9]-df.Low[i+0:i+10].min())\/(df['High'][i+0:i+10].max()-df.Low[i+0:i+10].min()))*100\n        \n\ndf['Stochastic K%'][5280]=((df['Close'][5280]-df.Low[5270:5280].min())\/(df['High'][5270:5280].max()-df.Low[5270:5280].min()))*100  ","ad5ada2a":"n=0\nsum=0\nwhile(n!=5279):\n    sum=0\n    for i in range(n,n+3):\n        sum=sum+df['Stochastic K%'][i]\n        \n    df['Stochastic D%'][n+2]=(sum\/3)\n    n=n+1","8857de54":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df.Date, y=df['Stochastic K%'], name='K stochastic'))\nfig.add_trace(go.Scatter(x=df.Date, y=df['Stochastic D%'], name='D stochastic'))\nfig.add_trace(go.Scatter(x=df.Date, y=[80]*5281,line=go.scatter.Line(color=\"black\",width=0.5),name='Overbought'))\nfig.add_trace(go.Scatter(x=df.Date, y=[20]*5281,line=go.scatter.Line(color=\"black\",width=0.5),name='Oversold'))\nfig.show()","2e6dfff2":"for i in range(0,5271):\n    df['Larry_William_R%'][i+9]=((df.High[i+0:i+10].max()-df['Close'][i+9])\/(df['High'][i+0:i+10].max()-df.Low[i+0:i+10].min()))*100\n        \ndf['Larry_William_R%'][5280]=((df.High[5270:5280].max()-df['Close'][5280])\/(df['High'][5270:5280].max()-df.Low[5270:5280].min()))*100","0a042f7f":"fig = go.Figure().set_subplots(2,1, horizontal_spacing=0.1,subplot_titles=(\"Candle stick\", \"14-DAY_WMA\"))\n\nfig.add_trace(go.Candlestick(x=df['Date'],open=df['Open'],\n                high=df['High'],\n                low=df['Low'],\n                close=df['Close']),row=1,col=1)\nfig.update_layout(xaxis_rangeslider_visible=False)\nfig.add_trace(go.Scatter(name=\"14-DAY_WMA\",x=df['Date'],y=df['14-DAY_WMA'],mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True),row=2,col=1)","9db0d116":"fig = go.Figure().set_subplots(2,1, horizontal_spacing=0.1,subplot_titles=(\"Candle stick(365 days)\", \"14-DAY_WMA(365 days)\"))\n\nfig.add_trace(go.Candlestick(x=df['Date'].tail(365),open=df['Open'].tail(365),\n                high=df['High'].tail(365),\n                low=df['Low'].tail(365),\n                close=df['Close'].tail(365)),row=1,col=1)\nfig.update_layout(xaxis_rangeslider_visible=False)\nfig.add_trace(go.Scatter(name=\"14-DAY_WMA\",x=df['Date'].tail(365),y=df['14-DAY_WMA'].tail(365),mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True),row=2,col=1\n)","8d4f1f47":"for i in range(0,5281):\n    df['ADO'][i]=(df['High'][i]-df['Close'][i])\/(df['High'][i]-df['Low'][i])\n\n","74d71f56":"fig = go.Figure().set_subplots(2,1, horizontal_spacing=0.1,subplot_titles=(\"Candle stick(365 days)\", \"A\/D(365 days)\"))\n\nfig.add_trace(go.Candlestick(x=df['Date'].tail(365),open=df['Open'].tail(365),\n                high=df['High'].tail(365),\n                low=df['Low'].tail(365),\n                close=df['Close'].tail(365)),row=1,col=1)\nfig.update_layout(xaxis_rangeslider_visible=False)\nfig.add_trace(go.Scatter(name=\"ADO\",x=df['Date'].tail(365),y=df['ADO'].tail(365),mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True),row=2,col=1\n)","56dee713":"fig = go.Figure().set_subplots(2,1, horizontal_spacing=0.1,subplot_titles=(\"Candle stick\", \"A\/D\"))\n\nfig.add_trace(go.Candlestick(x=df['Date'],open=df['Open'],\n                high=df['High'],\n                low=df['Low'],\n                close=df['Close']),row=1,col=1)\nfig.update_layout(xaxis_rangeslider_visible=False)\nfig.add_trace(go.Scatter(name=\"ADO\",x=df['Date'],y=df['ADO'],mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True),row=2,col=1\n)","de29efcf":"df.insert(10,'U',0.000)\ndf.insert(11,'D',0.000)\ndf['D']=df['Close'].diff()\ndf['U']=df['Close'].diff()","16b4c687":"def positive_U(val):\n    if val<0:\n        return 0\n    \n    return val\ndef positive_d(val):\n    if val>0:\n        return 0\n    \n    return -1*val","232c4d42":"df['U']=df['U'].apply(positive_U)\ndf['D']=df['D'].apply(positive_d)","60128cd8":"df['Relative_strength_index']=(100)-(100\/(1+(df['U'].rolling(window=10).mean()\/df['D'].rolling(window=10).mean())))\n","cb809864":"df.drop(columns=['U','D'],inplace=True)","13b87b60":"fig = go.Figure().set_subplots(2,1, horizontal_spacing=0.1,subplot_titles=(\"Candle stick(365)\", \"Relative_strength_index(365)\"))\n\nfig.add_trace(go.Candlestick(x=df['Date'].tail(365),open=df['Open'],\n                high=df['High'].tail(365),\n                low=df['Low'].tail(365),\n                close=df['Close'].tail(365)),row=1,col=1)\nfig.update_layout(xaxis_rangeslider_visible=False)\nfig.add_trace(go.Scatter(name=\"Relative_strength_index\",x=df['Date'].tail(365),y=df['Relative_strength_index'].tail(365),mode=\"lines\",line=go.scatter.Line(color=\"black\",width=0.5),showlegend=True),row=2,col=1\n)","0fd170be":"macd=(df['Close'].ewm(span=12,adjust=False).mean()- df['Close'].ewm(span=26,adjust=False).mean())\ndf['Signal(10)']=macd.ewm(span=9, adjust=False).mean()\ndf['TP'] = (df['High'] + df['Low'] + df['Close']) \/ 3 \ndf['sma'] = df['TP'].rolling(10).mean()\ndf['mad'] = df['TP'].rolling(10).apply(lambda x: pd.Series(x).mad())\ndf['CCI'] = (df['TP'] - df['sma']) \/ (0.015 * df['mad'])","6fee6510":"df.drop(columns=['TP','sma','mad'],inplace=True)\ndf=df.fillna(0)\ndf.insert(15,'UP\/DOWN',0)","bcc4f762":"def up(val):\n    if val>0:\n        return 1\n    else:\n        return -1","4e90066a":"df['UP\/DOWN']=df['Close'].diff()\n","1ca8aa45":"for i in range(0,5280):\n    df['UP\/DOWN'][i]=df['UP\/DOWN'][i+1]\n","7c5c5424":"df['UP\/DOWN']=df['UP\/DOWN'].apply(up)","37822716":"li=['5-DAY_SMA', '14-DAY_WMA',\n       'Momentum', 'Stochastic K%', 'Stochastic D%',\n       'Relative_strength_index', 'Signal(10)', 'Larry_William_R%', 'ADO',\n       'CCI']","2b012161":"for i in li:\n    df[i]=(df[i]-df[i].min())\/(df[i].max()-df[i].min())\n \n\n","201493aa":"df['UP\/DOWN'][5280]=1","df396e72":"y=df['UP\/DOWN']","96c32181":"df.drop(columns=['Open','High','Low','Close','Date','UP\/DOWN'],inplace=True)","a060a773":"X=df","1b2b0261":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)","7cedac9b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import f1_score\nmodel=LogisticRegression()\nmodel.fit(X_train,y_train)\npredicted_LogisticRegression= model.predict(X_test)\nprint ('F1 score:', f1_score(y_test, predicted_LogisticRegression))\n\n\n","5fce591c":"CALCULATING 14 DAY WEIGHTED MOVING AVERAGE","96591bda":"calculating stochastic D%","d222843f":"CALCULATING MOMENTUM(10 DAY)","41492d0c":"After plotting the graphs of low adnd high(each day) we can see that the graphs are almost same. This is because there is a asmall d","11160961":"CALCULATING SIGNAL","e55b6b88":"CALCULATING 5 DAY MOVING AVERAGE","7e7cf9e7":"LogisticRegression","1c59551d":"CALCULATING RELATIVE STRENGTH INDEX(RSI)","54488623":"LARRY WILLIAM R%","fa7255f1":"Calculating ADO","a11d8135":"calculating Stochastic K%","2f38598b":"CLOSING PRICE VARIATION OVER EACH DAY","fe758d1d":"We will be only using Date,Opening price of the stock,Closing price of the stock,Highest price of the stock,Lowest price of the stock to calculate the technical indicators.","428d7059":"INSERTNG TECHNICAL INDICATORS"}}