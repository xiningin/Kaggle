{"cell_type":{"00ad3661":"code","5c614651":"code","5b77d3e8":"code","1d8ef051":"code","b2430b28":"code","563d44bf":"code","37426a14":"code","a6173c29":"code","915e5157":"code","c14cf918":"code","f240ba7e":"code","ffd46e65":"code","803cacfb":"markdown","2c0d0e02":"markdown","c8cc2bb0":"markdown","4432cb7c":"markdown","cf72ba39":"markdown","2f6a84f6":"markdown"},"source":{"00ad3661":"!\/opt\/conda\/bin\/python3.7 -m pip install --upgrade pip","5c614651":"!pip install pytorch-tabnet","5b77d3e8":"import numpy  as np\nimport pandas as pd\n\ntrain_data = pd.read_csv('..\/input\/santander-customer-satisfaction\/train.csv',index_col=0)\ntest_data  = pd.read_csv('..\/input\/santander-customer-satisfaction\/test.csv', index_col=0)\nsample     = pd.read_csv('..\/input\/santander-customer-satisfaction\/sample_submission.csv')","1d8ef051":"train_data.shape","b2430b28":"train_data.info()","563d44bf":"test_data.info()","37426a14":"sample.info()","a6173c29":"X_train = train_data.iloc[:,:-1].to_numpy()\ny_train = train_data['TARGET'].to_numpy().squeeze()\nX_test  = test_data.to_numpy()","915e5157":"from pytorch_tabnet.tab_model import TabNetClassifier","c14cf918":"classifier = TabNetClassifier(verbose=0,seed=42)\nclassifier.fit(X_train= X_train, y_train=y_train,\n               patience=5, max_epochs=100,\n               eval_metric=['auc'], num_workers= 10)\n\npredictions = classifier.predict_proba(X_test)[:,1]","f240ba7e":"predictions[1:5]","ffd46e65":"sample.iloc[:,1:] = predictions\nsample.to_csv('submission.csv',index=False)","803cacfb":"First, read in the data","2c0d0e02":"# TabNet: A very simple binary classification example using the [Santander Customer Satisfaction](https:\/\/www.kaggle.com\/c\/santander-customer-satisfaction) data\n[**TabNet**](https:\/\/arxiv.org\/pdf\/1908.07442.pdf) brings deep learning to tabular data. TabNet has been developed by researchers at Google Cloud AI and achieves SOTA performance on a number of test cases.\nThis notebook is a simple example of performing a binary classification using the [pyTorch implementation](https:\/\/pypi.org\/project\/pytorch-tabnet\/). \n\nThe winning Private Score for this competition was `0.82907` which was achieved using an ensemble solution. Here we obtain a Private Score of `0.81478` with TabNet, right out of the box...\n\n#### Install TabNet:","c8cc2bb0":"run the TabNet deep neural network","4432cb7c":"and write out a `submission.csv` file","cf72ba39":"then prepare the data","2f6a84f6":"# Related links\n* [Sercan O. Arik and Tomas Pfister \"TabNet: Attentive Interpretable Tabular Learning\", arXiv:1908.07442 (2019)](https:\/\/arxiv.org\/pdf\/1908.07442.pdf)\n* [TabNet on AI Platform: High-performance, Explainable Tabular Learning](https:\/\/cloud.google.com\/blog\/products\/ai-machine-learning\/ml-model-tabnet-is-easy-to-use-on-cloud-ai-platform) (Google Cloud)\n* [pytorch-tabnet](https:\/\/github.com\/dreamquark-ai\/tabnet) (GitHub)\n* [TabNet: A very simple regression example](https:\/\/www.kaggle.com\/carlmcbrideellis\/tabnet-a-very-simple-regression-example) (kaggle notebook)"}}