{"cell_type":{"b236accc":"code","ed7d477e":"code","21e8add6":"code","c5d2b9a7":"code","7f8f2370":"code","dcfc2842":"code","209ddfb0":"code","d6209151":"code","ee0be2df":"code","c0311c9d":"code","7f2ae6af":"code","5968cedf":"code","318b0e4c":"code","f6618c3f":"code","d7f1a135":"code","e4c93dd9":"code","da2057d5":"code","246846f6":"code","7fdf076f":"code","6adb45f2":"code","a95c4901":"code","2c6faf7e":"code","bbb946dc":"markdown"},"source":{"b236accc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom fastai.tabular import *\nfrom fastai.callbacks import ReduceLROnPlateauCallback,EarlyStoppingCallback\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.metrics import roc_auc_score\nimport os\nprint(os.listdir(\"..\/input\"))","ed7d477e":"class roc(Callback):\n    \n    def on_epoch_begin(self, **kwargs):\n        self.total = 0\n        self.batch_count = 0\n    \n    def on_batch_end(self, last_output, last_target, **kwargs):\n        preds = F.softmax(last_output, dim=1)\n        roc_score = roc_auc_score(to_np(last_target), to_np(preds[:,1]))\n        self.total += roc_score\n        self.batch_count += 1\n    \n    def on_epoch_end(self, num_batch, **kwargs):\n        self.metric = self.total\/self.batch_count","21e8add6":"train = pd.read_csv(\"..\/input\/train.csv\").drop('ID_code',axis=1)\ntest = pd.read_csv(\"..\/input\/test.csv\")","c5d2b9a7":"sm = SMOTE(random_state = 21)\nx_res, y_res = sm.fit_resample(train.iloc[:,1:], train['target'])","7f8f2370":"dep_var = 'target'\ncont_names = train.iloc[:,1:].columns.tolist()","dcfc2842":"train_res = pd.DataFrame(data = x_res,columns = cont_names)\ntrain_res['target'] = y_res","209ddfb0":"sns.set(style=\"darkgrid\")\nax =  sns.countplot(x=\"target\", data=train_res)","d6209151":"procs = [Normalize]","ee0be2df":"test = TabularList.from_df(test,cont_names=cont_names)","c0311c9d":"data = (TabularList.from_df(train_res,cont_names=cont_names, procs=procs)\n                           .random_split_by_pct(0.15)\n                           .label_from_df(cols=dep_var)\n                           .add_test(test)\n                           .databunch(bs=32))","7f2ae6af":"learn = tabular_learner(data, \n                        layers=[200,100], \n                        metrics=[accuracy,roc()]\n                       )","5968cedf":"learn.lr_find()","318b0e4c":"learn.recorder.plot()","f6618c3f":"##ES = EarlyStoppingCallback(learn, monitor='roc',patience = 5)\n##RLR = ReduceLROnPlateauCallback(learn, monitor='roc',patience = 2)","d7f1a135":"learn.fit(1, .01,)","e4c93dd9":"preds,_ = learn.get_preds(DatasetType.Test)","da2057d5":"preds = preds.tolist()","246846f6":"preds_nn = []\nfor i in range(len(preds)):\n    preds_nn.append(preds[i][0])","7fdf076f":"subby = pd.read_csv(\"..\/input\/test.csv\")\nsubby['target'] = preds_nn\n","6adb45f2":"subby = subby[['ID_code','target']]","a95c4901":"subby.to_csv('subby.csv',index=False)","2c6faf7e":"subby.head()","bbb946dc":"## Load Data"}}