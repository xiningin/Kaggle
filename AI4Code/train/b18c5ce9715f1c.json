{"cell_type":{"51a20236":"code","0c377a53":"code","d9c27093":"code","cd34e57d":"code","ff139d25":"code","d9dad859":"code","f1bb9766":"code","22fad1b1":"code","1158cd78":"code","59e93655":"code","c0a5f68a":"code","8b19dbed":"markdown","022b55f2":"markdown","9f61c4aa":"markdown","94cf272c":"markdown","8dca2da4":"markdown","a79626c8":"markdown","5acd54da":"markdown","d853095f":"markdown","2276b895":"markdown","4650d93b":"markdown","04839084":"markdown","918a67cd":"markdown","666fcdb7":"markdown"},"source":{"51a20236":"from IPython.display import HTML\nHTML('<iframe width=\"1221\" height=\"687\" src=\"https:\/\/www.youtube.com\/embed\/0ALKGR0I5MA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>')","0c377a53":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d9c27093":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting","cd34e57d":"print(os.listdir('..\/input\/speech-recognition-and-speaker-diarization'))","ff139d25":"import IPython.display as ipd  # To play sound in the notebook\nfname1 = '..\/input\/speech-recognition-and-speaker-diarization\/' + 'meeting-clip2.wav'   # Hi-hat\nipd.Audio(fname1)","d9dad859":"import IPython.display as ipd  # To play sound in the notebook\nfname2 = '..\/input\/speech-recognition-and-speaker-diarization\/' + 'meeting-clip1.mp3'   # Hi-hat\nipd.Audio(fname2)","f1bb9766":"# Using wave library\nimport wave\nwav = wave.open(fname1)\nprint(\"Sampling (frame) rate = \", wav.getframerate())\nprint(\"Total samples (frames) = \", wav.getnframes())\nprint(\"Duration = \", wav.getnframes()\/wav.getframerate())","22fad1b1":"# Using scipy\nfrom scipy.io import wavfile\nrate, data = wavfile.read(fname1)\nprint(\"Sampling (frame) rate = \", rate)\nprint(\"Total samples (frames) = \", data.shape)","1158cd78":"print(data)","59e93655":"plt.plot(data, '-', );","c0a5f68a":"plt.figure(figsize=(16, 4))\nplt.plot(data[:500], '.'); plt.plot(data[:500], '-');","8b19dbed":"### See the data","022b55f2":"## Read data","9f61c4aa":"\n<html>\n<body>\n\n<p><font size=\"5\" color=\"gren\">If you like my kernel please consider upvoting it<\/font><\/p>\n<p><font size=\"4\" color=\"blue\">Don't hesitate to give your suggestions in the comment section<\/font><\/p>\n\n<\/body>\n<\/html>\n","94cf272c":"## Speech recognition and Speaker Diarization\n### Audio files containing voice data from mulitple speakers in a meeting","8dca2da4":"### Context\n- Audio files containing voice data from mulitple speakers in a meeting\n\n### Content\n- This is an audio conversation of multiple people in a meeting. This data has been converted from YouTube video titled 'Charing the meeting'\n\n### Inspiration\n- Speech recognition & Speaker diarization to provide suggestions for minutes of the meeting\n\n<html>\n<body>\n\n<p><font size=\"4\" color=\"Blue\">\nIf you find this kernel useful or interesting, please don't forget to upvote the kernel =)\n<\/font><\/p>\n\n<\/body>\n<\/html>\n","a79626c8":"# Using wave library","5acd54da":"### Basic Sound Processing in Python ","d853095f":"#### Let's zoom in on first 1000 frames","2276b895":"# Speech recognition and Speaker Diarization\n[Crisl\u00e2nio Mac\u00eado](https:\/\/medium.com\/sapere-aude-tech) -  January, 08th, 2019\n\n\ud83c\udfb6 Speech Recognition: [ \ud83c\udfb6 Speech Recognition-TimeAlignedSpectrogramsn ](https:\/\/www.kaggle.com\/caesarlupum\/speech-recognition-timealignedspectrogramsn)\n\n\n- [**Github**](https:\/\/github.com\/crislanio)\n- [**Linkedin**](https:\/\/www.linkedin.com\/in\/crislanio\/)\n- [**Medium**](https:\/\/medium.com\/sapere-aude-tech)\n- [**Quora**](https:\/\/www.quora.com\/profile\/Crislanio)\n- [**Ensina.AI**](https:\/\/medium.com\/ensina-ai\/an%C3%A1lise-dos-dados-abertos-do-governo-federal-ba65af8c421c)\n- [**Hackerrank**](https:\/\/www.hackerrank.com\/crislanio_ufc?hr_r=1)\n- [**Blog**](https:\/\/medium.com\/@crislanio.ufc)\n- [**Personal Page**](https:\/\/crislanio.wordpress.com\/about)\n- [**Twitter**](https:\/\/twitter.com\/crs_macedo)\n\n----------\n----------","4650d93b":"# Let's plot the audio frames","04839084":"# Final","918a67cd":"> Let's listen to an audio file in our dataset and load it to a numpy array","666fcdb7":"![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAYAAAACDCAMAAACz+jyXAAAAwFBMVEX\/\/\/8AAACSh\/+He\/+Ngv+Qhf+Lf\/+IfP+Ngf\/p6P7Gwf7Hx8f\/\/\/3z8v7KxfzIw\/3a1vy6tP36+f2\/ufrh3vqzq\/7w7\/yhmPynn\/7W0v3Tz\/6Ddv+dlP\/f3P7Mx\/qAcv+tpf6Uif2zrPutra3y8vLj4+NHR0ednZ3Dw8Pm5P7r6ftqamq6urpTU1PQ0NBzc3Pc3NyHh4csLCwYGBhcXFyelf6Yjv43NzeSkpJ\/f38jIyMRERFJSUkyMjKysrIXFxfaAnTTAAAOeElEQVR4nO2dfX+aPBfHEUiCLj4Aoigiwtqu0rXrdk32vPv9v6s7CaiAoIHQsk\/l98+2dgY4X5Kcc3ISJalTp06dOnXq1KlTp7ehmb5s+xauW30naPsWrlt9RW\/7Fq5bHYCW1QFoWX20mYZt30Qbuv34+fFnj+nn448PT7ct3UcfAmXQ0rXb09Pn\/3onevh708Kt9KGsjlu4bou6+fDr1Pqxvr579bu5OgC3n8qsz\/Tl\/pXv58oA3H49a36qu9edDa4KwO3DRfNTfXjNe7omAOcHn5QeX\/GmrgfAE6\/5qV7PH7oaAJ+r2L\/Xe52JIDCvBgDf6P\/afcCJrgXAZefnRA1efWnNin+hrK4EAPf0m1KDM7HubIt\/cS0A3tewf5PeqK5cN4DbWvZvcCK+dgA\/awL41tQNXAIwaupC\/6a+17R\/r\/e3oTs4ByCEsiyDRUNX+hd1U9v+jXlC5QCipakSAPAtA6gcAaT0XuzSQzM2bCkAJGvU\/rL2hgGIdIDef2LXnjkW+\/MMgFhvGUD9GYDqSejaMxTX\/FwGMBG6zj8tIfv3PgldmwJwV4vLAIC96QtdqUTG8CVaraRnMQBi0zAFMFHWBECJefcAZICmQlcqkem5L9FsFX0QBFB\/DAp0PIMAqhoBgKZG4f85AJDhiwAYKK0D+C0I4HONay500vMxkgkAOr4TAKrmFQ4GVwBA0P69uxrXDBwy4mDNjwGo+nYDZHilAIScUKYaF2VD\/gGArEIgpwCEg+OMXB+AK\/NUtVMAY6t4+HsdVVqHLFSNhZkDgCE8GngobSxMfztxjrm3+gDo3H6i0aov2Qq1d2LzAVqHc6dNAPfCAGqUaiUAZDMAaQBQiwEox9xbDQDr+M0vBGA60xiA4c3ZDwYq6X6wMoCR1Zj7+lEYQI2E3B6AerQ\/BaCqWAqHDMDS7ktrsxYABUrGNCwAQMxsKgQAogAUm\/1sQBMd2rZq8a\/llKzgVZc4gBrpIF0JGYC0YgBDb8MA0Fd152QAlIRqJ9KANGOt5ABMvEEJAFlzMF\/bM2sp9dehZKHGAIgPQRXXxfqjvqRrgW5IhQAUKwZAQuO5kgZAQjG+hyYAaCvuCQDS7IA0SwEYM5QGIENOAH1Hl9bOEjcI4N1rA1g61O0HSmUAMuQHgCLLhmtp7LNug22acZpA3\/fV0XaODOxBUA+AQgAoCwKgsTmg7mpkfQDKkgCQUR6AttiqIAcA44oA9B1tdrvQZACAtdiQEQdjCTsr8juXXU+FMjRIswRAX59UBBBOUAJAs6xqj10uYQAV54AjAFXOEoByDgDQMow4AGwc0o9kGH8MaIBMHCtHwspKmgWb\/Yy\/B+A65h4AmNscCIaOpiYAAFCqPXapxAOxil5QAkA1x0DOKw8g+1seAMowwxWygQwrOylUDq0dACiDPQAZ+DwAkHwAICPOUeuSxL2gCtm4ob6UljBY2sQYaq4D5ABotuXnfnsBwAhNygAgeb5K\/TABME0BkPkBLGMAmptNYiwG9cK5L8IAKkTCoWNJS40MDae2jwEMp4j6LwSACk7+k7o+uyw2Vs4ASDfGALAGqwOg0hgA6rsa+tHTsuvF0+Id4FeFq4VKgNfZuTf3kmuyv4s0CqDgt+r+GWcjEpVlLDY0EgAGLgSQuQguATBcnw\/29gAmmEXwJOBzYl9qaW+TDEdlCdu\/91DhaiEJ+8\/Zf2\/oEgAyC6H0EZs+R3LKWlNPJwBcaQPUTPvaxJgjnAMAdsnsoo6lcRrA1Dm\/IzkBAIIla0Bj4dw0omGjWxOASEFEIl4nCNtWXOIjCsCZx9NnOpG8VUxpjEahnR+3iGslw\/xVD6ObHx3mmYgCIK2s\/fL8dAJATsZQjcxYdConvhRxdzcorB6ciQ9A\/FMAViJpxgnADIPCaWKfRKDT5zgBsCKjgOEiAkBlae2a8gdrBoAOZJcAHG4Hgg1mUzm0zEiGXlXHSNwFrbAeg2G0XXKMP4xAiSWp62eg1VJXd9Yuyc4hX5oR\/5yMSYWdhlvanPWj0ZkVGgOdfIoMqeoAD1TAqseqArhrAMBHfgAyz\/h\/VqppUivQWi1Ag6eZZEgwkgwSwllucafhFrDxFEZ2pOrreDB3czMyHgyKEasw+XlVAPVq0nMqaNdlT3C8GbwHIC41nZ2g2TkfJUN6uW\/LK4A0ypXYc8OWyLyVZMxSKR\/sXOpi5P3AUs49O6cm7F8UBsfJcn+evEIjnyb\/05GQiFbpdqJdM43mRDOFLHyeemZseyzhFccDqNSX2vojzMVAtB6F6stps4tghYaS60KAbMmYEncGRJGBI9EX9DWlTci7o8xxH\/p0ZRlvHHd4GhgWyB8tpS1UTxfjngoSBt8aAPCcb9QNdioJWV3q\/oH5dKCwbgv86IVN1rA0ZUkchojcNYh2y+EGaJwDqLZyyUwB7CC3fFS0maUB+5\/WJa7jMod9OlLMMWlTx0Qs0FCV3sueGaCsM\/vAxurf2ZjpURzA6QC0ZklHmISMaP8URZm3f1s0elOT2T2fFTyn+JnVbDTxxDY0fu59z9jqRphAQR40dDcIwBAj6p1s8IR46MRhhPq4ykO0L80ZDlE0DgDQNqMZtjSf8\/7RHE81oOmTzIrZHR2Annt\/yF\/vMxDu\/4jY\/8ep\/SmCqU3cQ0ycNmVO5q+tPkfBwJB80RggUaYvvVTHggamk7DUR7ZJXbnxxsBc1\/JnMxJP74JsMPfExupvlMJNftiosz84UWkadONRN9QcJ86Ya9J\/jkuimIpSx6kskUo6FpAzxS0iOvg5qjOM3dCtnJyVRp6kLAxLC8rkP87MfCz9QE3\/jr2wd2zYSK\/i1q\/NLV2IKa65byQQo\/Ujh0BMdUJpMwe+TmNgFYkC9klbNJzTnNGEBWJRNqbCXlkn3oPTtsWlMyxf85Vmzd6x5PFDupit9kRQPACViwBAogy06VYyEE1pE0up5mJIhjoYsZUqEwvmgugqPdosLbgsK3gItwUESLfZWUk8WJKKuKd1CzdsHn6kFJ56X8lfn+IsZv0hqKL9JYwizJmOlkHJqIIkmg2dGwtoTaxkx4biS8PVTjOPqf16QnOWDT2XjMtnQ4nxo8DWaDKOpQ9Llok\/0xHonubtb5jp7yiF53ghpX46qHI9HHZ87vWANS4ecPfpaDeVjh6MSNt9mkjWSoLV8hg2Bdrv9+N0tMOdjga2rSbpaDTqz8GqZFnzkb6s32nQek\/DgRtmejYlC+SjqyxEJlovKACeCfP8goyXLMg4qVc1zuRP8QaA7AejlQwsK3fRvUMD7PFhBcdPFmSmZnmd6B5Aki3XMFaS4haFroiVfezb\/yQ67t8cKLC+wILYV+wATCGK7Is5LRWcBSBN+5LrmcS5Sllq64\/jNWEt0DPr7\/2T8i66FJxMF+ogtyTpcS1Jqmtjk6wJEwAhcXrOL0l+oSc6sG7ABqP3dAp+F1uwfllcLfvTRXlpcS4g8H2wGwWwBAD0kmc0wvzD4n1VhFFcFZFpJv4BAZ2vihieX9Ydxh\/TFpKVAEiK3Ldk4i4H8OenRJ0gBuCZLkN+pFNAEpA911uUqbk5NfRoWUr5yiHAhrIvS1FPQMHzReR09C4tS0mHUXFZSqRvYI2ylJ1uw7gsBRGXeHrc3Dn3ygDcUdv\/oC\/\/3949tT3dVvcrfoeff5SekXtW3OtgWdG6\/SUaGdRxL8ovpgqz4GCSH6wuFGa5Qb+0Mi4a6ccfN1OYBXNJ\/1np6\/GJDv\/v4\/eeOu\/M9h\/ZVFx7EhY4KCgpTdSms9NRJl+amPVf6pUm7uLa0PC4nlVUmqjJL1eayGx\/y0aNnz32b9oFPgh5QQIH9pUW50KUB6AGmXVeDgC2RwEkAR\/dfLSVTIsBMCaHl\/0AwDsU56ojnhOJhsA\/ANAc7ieOPZ4vse0\/sL8e1lHqbpMX7wEn5elwiMXL0ydj0ixpBQJNVceG7rAKOuxEEi1Pp24\/JIG0gRVAAAyns4rl6Tjc7w+AywrbW79R2\/9ltv9F392br8cXuOb+DIEjOtYe25ftVN8ho3Bv0Jih+cSE6yQPSKDT4GoCbXMOt9hGBo52quAGjSpFWLHtmev4xHLSadULBQROUDdmhqQj8gIV7xErBQA2Ad+ulNItSs6YlbDRLUoshKJKAPAO6FsvkEZe5S1KveO0+z1\/1mS9fcKC5zSd2aSnBgwAHTxWXqOb9Ka7ZdkmPe4eYEy2LNlbEUA87T4W1ZDUHILqHBCR0n6barpSK9mmiuPddDS0Cbe1tqk6cU7gdJsqTm9TdVIA8h7lReF4yYNff9i0W2C2uvvkq5REF2i\/U76\/UNMAEGpio\/YwHqmKN2p7U4ltjDd2cdZhQPchVN+ovV1U+8htWfKsbnGi4HmVJUcVLBYxAK+RowqcAs9yOp5J4yBlPDIpYLs0hm1O70umzYJv6uGT2O3kDuvQ6GrW8bAOIzzOtvUB9E2eD9A85vY1jkMrcdxr16eLHZ0eeGkA2hLTjcPXeVzNu3Qu6PfDJ94yiZOSuEqabVnxpUoBAMAObJrvrhMAmYe\/P3yh39T2PrYpZ8VozWxcRq5LAETWHNIz48JiR+QKAOTFVybR0MHp7NA+MltePDVRVpUXAbD2X6RZEfFNC2KnVR5EAdADsi4CUHO1Zm9YfPm5hs5N5z+49Q2fnJsTZ4q6mYvNvO7o4hPxAWjmK3yM5KyqMwDidEUHIC8xPzSvM98fYNBjZgDqAOQkdmh3Xhe+QQPYOm8u9A2ID4BgQjqnK\/8Kk6z4AFStzT2va\/8Sn4z4AHxt9JodgJT4ADT2BUpMgdcBOOj+HY+anYRLFziuEcA\/Je9qvszzH5U77QC0rQ5Ay+oAtKwOQMvqALSsDkDL6gC0rA5Ay+pD4AzavolrVl\/RqxbPdmpSdFNEpxbVAWhZHYCWRbcFdWpRhlv1a9Y6derUqVOnTp06derUqVOnTp06derUqVOnTp3erv4P1YAvv75DJvcAAAAASUVORK5CYII=)"}}