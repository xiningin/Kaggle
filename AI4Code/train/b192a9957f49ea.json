{"cell_type":{"39ba35b1":"code","46523666":"code","59a88943":"code","2ab2a6ae":"code","9a2d99ba":"code","339ba145":"code","b15800be":"code","9cb39266":"code","31480561":"code","a6930507":"code","1ef08f6e":"code","d468829d":"code","b6e581b1":"code","c1cd30b3":"code","3bbb032f":"code","951ac039":"code","e339aef3":"code","42a617f0":"code","e20c5ad5":"code","3924ca29":"code","7ca58061":"code","2230c245":"code","9c650255":"code","5061db02":"markdown","3ab157ef":"markdown","a8e7a149":"markdown","ae67b173":"markdown","5c6dc03f":"markdown","58da2b85":"markdown","0a9fbfbc":"markdown","72bbcab6":"markdown","24d34c60":"markdown","b214f94f":"markdown","5db3af41":"markdown","6f20b823":"markdown","3689323a":"markdown","9b7370e2":"markdown"},"source":{"39ba35b1":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns #seaborn library\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","46523666":"# Load data that we will use.\ntimesData = pd.read_csv(\"..\/input\/world-university-rankings\/timesData.csv\")","59a88943":"timesData.info()","2ab2a6ae":"timesData.head()","9a2d99ba":"Worlddf = timesData.iloc[:100,:]\nTurkeydf = timesData[timesData.country == 'Turkey']\nTurkeydf2011 = Turkeydf[Turkeydf.year == 2011]\nTurkeydf2012 = Turkeydf[Turkeydf.year == 2012]\nTurkeydf2013 = Turkeydf[Turkeydf.year == 2013]\nTurkeydf2014 = Turkeydf[Turkeydf.year == 2014]\nTurkeydf2015 = Turkeydf[Turkeydf.year == 2015]\nTurkeydf2016 = Turkeydf[Turkeydf.year == 2016]","339ba145":"#now we will visualize Turkey's unviersities' yearly citations and teaching values\n#first we will import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n#secondly we need to define traces\ntrace1 = go.Scatter(\n                    x = Turkeydf.year,\n                    y = Turkeydf.citations,\n                    mode = \"lines\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text = Turkeydf.university_name)\n\ntrace2 = go.Scatter(\n                    x = Turkeydf.year,\n                    y = Turkeydf.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\n#thirdly we will make a list by combining both traces\ndata = [trace1, trace2]\n\n#then we will make a layout for what we want to see outside of figure\nlayout = dict(title = \"Citation and Teaching by year of Turkey's Universities\",\n             xaxis = dict(title = 'World Rank', ticklen = 5, zeroline = False))\n\n#now we will make our figure\nfig = dict(data = data, layout = layout)\n\n#lastly we will plot our figure\niplot(fig)\n","b15800be":"#now we will visualize Turkey's unviersities' yearly citations values\n#first we will import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n#secondly we need to define traces\ntrace1 = go.Scatter(\n                    x = Turkeydf.year,\n                    y = Turkeydf2011.citations,\n                    mode = \"lines\",\n                    name = \"citations2011\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text = Turkeydf.university_name)\n\ntrace2 = go.Scatter(\n                    x = Turkeydf2012.year,\n                    y = Turkeydf2012.citations,\n                    mode = \"lines+markers\",\n                    name = \"citations2012\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\ntrace3 = go.Scatter(\n                    x = Turkeydf2013.year,\n                    y = Turkeydf2013.citations,\n                    mode = \"lines+markers\",\n                    name = \"citations2013\",\n                    marker = dict(color = 'rgba(150, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace4 = go.Scatter(\n                    x = Turkeydf2014.year,\n                    y = Turkeydf2014.citations,\n                    mode = \"lines+markers\",\n                    name = \"citations2014\",\n                    marker = dict(color = 'rgba(200, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace5 = go.Scatter(\n                    x = Turkeydf2015.year,\n                    y = Turkeydf2015.citations,\n                    mode = \"lines+markers\",\n                    name = \"citations2015\",\n                    marker = dict(color = 'rgba(255, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace6 = go.Scatter(\n                    x = Turkeydf2016.year,\n                    y = Turkeydf2016.citations,\n                    mode = \"lines+markers\",\n                    name = \"citations2016\",\n                    marker = dict(color = 'rgba(80,255, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\n\n#thirdly we will make a list by combining both traces\ndata = [trace1, trace2, trace3, trace4, trace5, trace6]\n\n#then we will make a layout for what we want to see outside of figure\nlayout = dict(title = \"Citations by year of Turkey's Universities\",\n             xaxis = dict(title = 'World Rank', ticklen = 5, zeroline = False))\n\n#now we will make our figure\nfig = dict(data = data, layout = layout)\n\n#lastly we will plot our figure\niplot(fig)","9cb39266":"#now we will visualize Turkey's unviersities' yearly teaching values\n#first we will import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n#secondly we need to define traces\ntrace1 = go.Scatter(\n                    x = Turkeydf.year,\n                    y = Turkeydf2011.teaching,\n                    mode = \"lines\",\n                    name = \"teaching2011\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text = Turkeydf.university_name)\n\ntrace2 = go.Scatter(\n                    x = Turkeydf2012.year,\n                    y = Turkeydf2012.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching2012\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\ntrace3 = go.Scatter(\n                    x = Turkeydf2013.year,\n                    y = Turkeydf2013.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching2013\",\n                    marker = dict(color = 'rgba(150, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace4 = go.Scatter(\n                    x = Turkeydf2014.year,\n                    y = Turkeydf2014.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching2014\",\n                    marker = dict(color = 'rgba(200, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace5 = go.Scatter(\n                    x = Turkeydf2015.year,\n                    y = Turkeydf2015.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching2015\",\n                    marker = dict(color = 'rgba(255, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace6 = go.Scatter(\n                    x = Turkeydf2016.year,\n                    y = Turkeydf2016.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching2016\",\n                    marker = dict(color = 'rgba(80,255, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\n\n#thirdly we will make a list by combining both traces\ndata = [trace1, trace2, trace3, trace4, trace5, trace6]\n\n#then we will make a layout for what we want to see outside of figure\nlayout = dict(title = \"Citations by year of Turkey's Universities\",\n             xaxis = dict(title = 'World Rank', ticklen = 5, zeroline = False))\n\n#now we will make our figure\nfig = dict(data = data, layout = layout)\n\n#lastly we will plot our figure\niplot(fig)","31480561":"#now we will visualize Turkey's unviersities' yearly income values\n#first we will import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n#secondly we need to define traces\ntrace1 = go.Scatter(\n                    x = Turkeydf.year,\n                    y = Turkeydf2011.income,\n                    mode = \"lines\",\n                    name = \"income2011\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text = Turkeydf.university_name)\n\ntrace2 = go.Scatter(\n                    x = Turkeydf2012.year,\n                    y = Turkeydf2012.income,\n                    mode = \"lines+markers\",\n                    name = \"income2012\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\ntrace3 = go.Scatter(\n                    x = Turkeydf2013.year,\n                    y = Turkeydf2013.income,\n                    mode = \"lines+markers\",\n                    name = \"income2013\",\n                    marker = dict(color = 'rgba(150, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace4 = go.Scatter(\n                    x = Turkeydf2014.year,\n                    y = Turkeydf2014.income,\n                    mode = \"lines+markers\",\n                    name = \"income2014\",\n                    marker = dict(color = 'rgba(200, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace5 = go.Scatter(\n                    x = Turkeydf2015.year,\n                    y = Turkeydf2015.income,\n                    mode = \"lines+markers\",\n                    name = \"income2015\",\n                    marker = dict(color = 'rgba(255, 26, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\ntrace6 = go.Scatter(\n                    x = Turkeydf2016.year,\n                    y = Turkeydf2016.income,\n                    mode = \"lines+markers\",\n                    name = \"income2016\",\n                    marker = dict(color = 'rgba(80,255, 80, 0.8)'),\n                    text= Turkeydf.university_name)\n\n\n#thirdly we will make a list by combining both traces\ndata = [trace1, trace2, trace3, trace4, trace5, trace6]\n\n#then we will make a layout for what we want to see outside of figure\nlayout = dict(title = \"Citations by year of Turkey's Universities\",\n             xaxis = dict(title = 'World Rank', ticklen = 5, zeroline = False))\n\n#now we will make our figure\nfig = dict(data = data, layout = layout)\n\n#lastly we will plot our figure\niplot(fig)","a6930507":"trace1 = go.Scatter(\n    x=Turkeydf.year,\n    y=Turkeydf.research,\n    name = \"research\",\n    marker = dict(color = 'rgba(255, 112, 0, 0.8)'),\n    text = Turkeydf.university_name   \n)\ntrace2 = go.Scatter(\n    x=Turkeydf.year,\n    y=Turkeydf.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\",\n    marker = dict(color = 'rgba(0, 255, 122, 0.8)'),\n    text = Turkeydf.university_name   \n)\ntrace3 = go.Scatter(\n    x=Turkeydf.year,\n    y=Turkeydf.income,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\",\n    marker = dict(color = 'rgba(122, 0, 122, 0.8)'),\n    text = Turkeydf.university_name\n)\ntrace4 = go.Scatter(\n    x=Turkeydf.year,\n    y=Turkeydf.total_score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\",\n    marker = dict(color = 'rgba(0, 122, 255, 0.8)'),\n    text = Turkeydf.university_name\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1],\n        anchor='x2'\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='x3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='y2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1],\n        anchor='y3'\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    title = \"Research, citation, income and total score by year of Turkey's Universities\"\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","1ef08f6e":"# data prepararion\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(Turkeydf.university_name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","d468829d":"# data preparation\n\ntrace0 = go.Box(\n    y=Turkeydf2015.citations,\n    name = 'citations of Turkey universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=Turkeydf2016.citations,\n    name = 'research of Turkey universities in 2016',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)","b6e581b1":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size  = [float(each.replace(',', '.')) for each in df2016.num_students]\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'y': df2016.teaching,\n        'x': df2016.world_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True   \n        },\n        \"text\" :  df2016.university_name    \n    }\n]\niplot(data)\n# in here we see that if bubbles are bigger that means num_students are bigger, if colos are more yellow means international score is higher","c1cd30b3":"langs = ['C', 'C++', 'Java', 'Python', 'PHP']\nstudents = [23,17,35,29,12]\ntrace = go.Pie(\n            labels = langs, \n            values = students,         \n            textinfo='label+percent',   #in here we write label and percent on it together\n            hoverinfo='label+percent',   #in here we see what it will be seen when we move mouse on\n            hole = .3,                   #in here we make a hole and .3 hole, .7 graphic\n            pull = [0, 0, 0.2, 0, 0],     #in here we take out the 3rd value means Java\n            )\ndata = [trace]\n\nlayout = dict(title = \"Languages vs Student\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","3bbb032f":"# import figure factory\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\", \"total_score\"]]\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","951ac039":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\ndf2015 = timesData[timesData.year == 2015].iloc[:100,:]\ndf2016 = timesData[timesData.year == 2016].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.world_rank,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"2014\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\ntrace2 = go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.citations,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2015.university_name)\n\ntrace3 =go.Scatter(\n                    x = df2016.world_rank,\n                    y = df2016.citations,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2016.university_name)\n\ndata = [trace1, trace2, trace3]\n\nlayout = dict(title = 'Citation vs world rank of top 100 universities with 2014, 2015 and 2016 years',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Citation', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","e339aef3":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\ntrace2 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.teaching,\n                    mode = \"markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2014.university_name)\n\ntrace3 =go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.research,\n                    mode = \"markers\",\n                    name = \"research\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2014.university_name)\n\ntrace4 =go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.income,\n                    mode = \"markers\",\n                    name = \"income\",\n                    marker = dict(color = 'rgba(20, 100, 200, 0.8)'),\n                    text= df2014.university_name)\n\ndata = [trace1, trace2, trace3, trace4]\n\nlayout = dict(title = 'Citation, teaching and research, income vs total score of top 100 universities with 2014',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Citation, teaching, research, income', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","42a617f0":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Citation vs total score of top 100 universities with 2014',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Citation', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","e20c5ad5":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.teaching,\n                    mode = \"markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Teaching vs total score of top 100 universities with 2014',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Teaching', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","3924ca29":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\ndf2014.income = [float(each.replace('-','0.0')) for each in df2014.income]\n\ntrace1 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.income,\n                    mode = \"markers\",\n                    name = \"income\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Income vs total score of top 100 universities with 2014',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Income', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","7ca58061":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.total_score,\n                    y = df2014.research,\n                    mode = \"markers\",\n                    name = \"research\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Research vs total score of top 100 universities with 2014',\n             xaxis = dict(title = 'Total Score', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Research', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","2230c245":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.teaching,\n                    y = df2014.research,\n                    mode = \"markers\",\n                    name = \"research\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Research vs teaching of top 100 universities with 2014',\n             xaxis = dict(title = 'Teaching', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Research', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","9c650255":"#lets visualize\nimport plotly.graph_objs as go\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df2014.teaching,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"research\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name)\n\n\n\ndata = [trace1]\n\nlayout = dict(title = 'Citation vs teaching of top 100 universities with 2014',\n             xaxis = dict(title = 'Teaching', ticklen = 5, zeroline = False),\n             yaxis = dict(title = 'Citation', ticklen = 5, zeroline = False)\n             )\n\nfig = dict(data = data, layout = layout)\n\niplot(fig)","5061db02":"as we see there is a significant effect between research and teaching","3ab157ef":"# BOX PLOT","a8e7a149":"# WORLD CLOUD","ae67b173":"as a summary we can say that teaching is most valuable matter for the total score and secondly researches effect total score. Citation vs teaching only matter if teaching is higher. Income doesnt effect total score much.","5c6dc03f":"# SCATTER PLOT MATRIX","58da2b85":"we can say citation effect total score","0a9fbfbc":"# LINE PLOT","72bbcab6":"# PIE PLOT","24d34c60":"# SUBPLOTS","b214f94f":"as we see that there is a significant effect between research and total score","5db3af41":"as we see that there is no spesific effect between income and total socre","6f20b823":"# BUBBLE PLOT","3689323a":"there is no significant effect between citation and teaching until teaching point gets higher","9b7370e2":"as we see there is a significant effect between teaching and total score"}}