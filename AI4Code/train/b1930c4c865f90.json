{"cell_type":{"43aa3a39":"code","997e951a":"code","2437ad45":"code","3b0d55ce":"code","2a5fd2fe":"code","53cc96a5":"code","08d71d21":"code","1260f41a":"code","41acae33":"code","add2440a":"code","5f26b2c2":"code","35476281":"code","299de2b0":"code","1f36d63d":"code","1cb91580":"code","e25bf9fd":"code","7f4629aa":"code","b8abdfe1":"code","75e1829a":"code","3cfad924":"code","34bdd481":"code","7e5d9005":"code","fe86f753":"code","995e51db":"code","43f12342":"code","283a6639":"code","fd09daaf":"code","6c42660c":"code","e664da8e":"code","6644aad8":"code","9bb26672":"code","595f6686":"code","e054b3aa":"code","d14006e2":"markdown","4c0ec107":"markdown","74c3d786":"markdown","5da194e8":"markdown","71963a47":"markdown","7b5d0414":"markdown","e84d1590":"markdown","3306558a":"markdown","a897d928":"markdown","1eac9b33":"markdown","95214854":"markdown","6bfb572d":"markdown"},"source":{"43aa3a39":"import os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('max_rows', 200)\n\nsns.set()\n#sns.set(style=\"ticks\", context=\"talk\")\n#plt.style.use(\"dark_background\")","997e951a":"meta = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/features.csv')\nprint(meta.shape)\nmeta.head(2)","2437ad45":"# plot boolean matrix (true\/false)\nplt.figure(figsize=(10, 8))\nmeta_int = meta[[f for f in meta.columns if f != \"feature\"]].astype('int8')\np = sns.heatmap(meta_int, cbar=False)","3b0d55ce":"train = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/train.csv')\nprint(train.info())\ndisplay(train.head())","2a5fd2fe":"daily_count = train.groupby('date')['resp'].count()\ndaily_count = daily_count.to_frame().reset_index().rename({'resp': 'count_'}, axis=1)\n\nfig, ax = plt.subplots(1,2, figsize=(16, 6))\nsns.distplot(daily_count.count_, kde=False, ax=ax[0])\nsns.lineplot(x='date', y='count_', data=daily_count, ax=ax[1])","53cc96a5":"dcount = train.groupby(['date', 'feature_0'])['resp'].count()\ndcount = dcount.to_frame().reset_index().rename({'resp': 'count_'}, axis=1)\n\nfig, ax = plt.subplots(1,2, figsize=(16, 6))\nsns.distplot(dcount[dcount.feature_0 == -1].count_, hist=False, ax=ax[0])\nsns.distplot(dcount[dcount.feature_0 == +1].count_, hist=False, ax=ax[0])\nsns.lineplot(x='date', y='count_', data=dcount[dcount.feature_0 == -1], ax=ax[1])\nsns.lineplot(x='date', y='count_', data=dcount[dcount.feature_0 == +1], ax=ax[1])","08d71d21":"train.feature_0.value_counts(dropna=False)","1260f41a":"f = ['resp', 'resp_1', 'resp_2', 'resp_3', 'resp_4', 'feature_0']\ng = sns.PairGrid(train[f], hue='feature_0')\ng.map_offdiag(sns.scatterplot)\ng.map_diag(sns.kdeplot)","41acae33":"fig, ax = plt.subplots(1,2, figsize=(16, 6))\nsns.distplot(train.weight, ax=ax[0])\nsns.distplot(train[train.weight < 10].weight, ax=ax[1])","add2440a":"plt.figure(figsize=(10, 5))\nsns.lineplot(x=range(500), y=train.groupby('date')['weight'].mean())","5f26b2c2":"plt.figure(figsize=(10, 5))\nsns.lineplot(x=range(500), y=train[train.feature_0 == -1].groupby('date')['resp'].mean())\nsns.lineplot(x=range(500), y=train[train.feature_0 == 1].groupby('date')['resp'].mean())","35476281":"def plot_missing_pattern(start_day, end_day, size=(14, 6)):\n    sample = train[(train.date >= start_day) & (train.date <= end_day)]\n    sample = sample[[f'feature_{i}' for i in range(130)]]\n    sample = sample.apply(lambda x: x.isna()).astype('int8')\n\n    plt.figure(figsize=size)\n    plt.title(\"Missing pattern - day {} to {}\".format(start_day, end_day))\n    p = sns.heatmap(sample, cbar=False)\n               \nplot_missing_pattern(0, 0)\nplot_missing_pattern(320, 320)","299de2b0":"plot_missing_pattern(100, 108, size=(14, 8))","1f36d63d":"train.feature_0.value_counts(dropna=False)","1cb91580":"def plot_feat(feature, day=0, line=True, use_sample=False):\n    sample = train[train.date == day] if use_sample else train\n    fig, ax = plt.subplots(1,2, figsize=(12, 3))\n    sns.distplot(sample[feature], kde=False, ax=ax[0])\n    if line:\n        sns.lineplot(x=sample.ts_id, y=sample[feature], ax=ax[1])\n    else:\n        sns.scatterplot(x=sample.ts_id, y=sample[feature], ax=ax[1])","e25bf9fd":"plot_feat('feature_1')\nplot_feat('feature_2')\nplot_feat('feature_3')","7f4629aa":"plot_feat('feature_4')\nplot_feat('feature_5')\nplot_feat('feature_6')","b8abdfe1":"plot_feat('feature_7')\nplot_feat('feature_8')\nplot_feat('feature_9')","75e1829a":"plot_feat('feature_10')\nplot_feat('feature_11')\nplot_feat('feature_12')","3cfad924":"plot_feat('feature_13')\nplot_feat('feature_14')\nplot_feat('feature_15')","34bdd481":"plot_feat('feature_16')\nplot_feat('feature_17')\nplot_feat('feature_18')","7e5d9005":"plot_feat('feature_10')\nplot_feat('feature_20')\nplot_feat('feature_21')","fe86f753":"plot_feat('feature_22')\nplot_feat('feature_23')\nplot_feat('feature_24')","995e51db":"plot_feat('feature_25')\nplot_feat('feature_26')\nplot_feat('feature_27')","43f12342":"plot_feat('feature_28')\nplot_feat('feature_29')\nplot_feat('feature_30')","283a6639":"plot_feat('feature_31')\nplot_feat('feature_32')\nplot_feat('feature_33')","fd09daaf":"plot_feat('feature_34')\nplot_feat('feature_35')\nplot_feat('feature_36')","6c42660c":"plot_feat('feature_37')\nplot_feat('feature_38')\nplot_feat('feature_39')","e664da8e":"plot_feat('feature_40')\nplot_feat('feature_41')\nplot_feat('feature_42')","6644aad8":"plot_feat('feature_43')\nplot_feat('feature_44')\nplot_feat('feature_45')","9bb26672":"plot_feat('feature_46')\nplot_feat('feature_47')\nplot_feat('feature_48')","595f6686":"plot_feat('feature_49')\nplot_feat('feature_50')\nplot_feat('feature_51')","e054b3aa":"p = sns.distplot(train[[f'feature_{i}' for i in range(130)]].mean())","d14006e2":"# 2. Training data","4c0ec107":"## Number of trades per day according to feature_0\n\nThe column feature_0 is the only one with a binary\/categorical value. Maybe it is a buy\/sell order or a long\/short position","74c3d786":"# Mean values","5da194e8":"# 1. Metadata - features.csv\n\nThere are 130 features in the training dataset; metadata is a 130 features x 30 tags boolean matrix","71963a47":"## Work in progress...","7b5d0414":"# 2.3 Missing pattern analysis","e84d1590":"# 2.2 Returns (resp) and weights","3306558a":"# 2.4 Plot each feature (histogram + timeserie)","a897d928":"## Average return (resp) per day","1eac9b33":"# 2.1 Number of trades per day","95214854":"# Jane St. Market Prediction Competition\n\n## A brief exploratory data analysis","6bfb572d":"## Average weight per day\n\n\nThe average weight (grouped by day) is slightly increasing"}}