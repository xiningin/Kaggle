{"cell_type":{"4d54d0fa":"code","1bd5114b":"code","91149b1f":"code","aa337c22":"code","fe6fa8bd":"code","32705a18":"code","f91eac9a":"code","cf904ed3":"code","b127a50e":"code","e0d7b4ce":"code","436ec8ba":"code","477a4ce0":"code","cd591d4b":"code","b1e5b9d7":"code","0340be4a":"code","c4b6c7b1":"code","9cc5d5d6":"code","d6792496":"code","0f3326f2":"markdown"},"source":{"4d54d0fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom tqdm import tqdm_notebook\nimport datetime\nimport time\nimport random\nfrom joblib import Parallel, delayed\n\n\nimport lightgbm as lgb\nfrom tensorflow import keras\nfrom gplearn.genetic import SymbolicRegressor\nfrom catboost import Pool, CatBoostRegressor\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV, KFold, RandomizedSearchCV\nfrom sklearn.feature_selection import RFECV, SelectFromModel\n\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import NuSVR, SVR\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor","1bd5114b":"train_X_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_X_features_865.csv\")\ntrain_X_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_X_features_865.csv\")\ny_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_y.csv\", index_col=False,  header=None)\ny_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_y.csv\", index_col=False,  header=None)","91149b1f":"train_X = pd.concat([train_X_0, train_X_1], axis=0)\ntrain_X = train_X.reset_index(drop=True)\nprint(train_X.shape)\ntrain_X.head()","aa337c22":"train_y = pd.concat([y_0, y_1], axis=0)\ntrain_y = train_y.reset_index(drop=True)\ntrain_y.columns = ['time_to_failure']\ntrain_y['time_to_failure'].shape","fe6fa8bd":"test_X = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/test_X_features_10.csv\")","32705a18":"scaler = StandardScaler()\ntrain_columns = train_X.columns\n\ntrain_X[train_columns] = scaler.fit_transform(train_X[train_columns])\ntest_X[train_columns] = scaler.transform(test_X[train_columns])","f91eac9a":"import h2o\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","cf904ed3":"train = h2o.H2OFrame(train_X)\ntest = h2o.H2OFrame(test_X)\ny_train = h2o.H2OFrame(train_y)","b127a50e":"train['time_to_failure'] = y_train['time_to_failure']\nx = list(train_X.columns)\ny = train_y.columns[0]","e0d7b4ce":"%%time\nnfolds=0\naml = H2OAutoML(max_models=500, seed=555, max_runtime_secs=6000,nfolds=nfolds,sort_metric=\"MAE\")\naml.train(x=x, y=y, training_frame=train)","436ec8ba":"lb = aml.leaderboard\nlb.head(rows=lb.nrows)","477a4ce0":"aml.leader","cd591d4b":"preds = aml.predict(test)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.as_data_frame().values.flatten()\nsample_submission.to_csv('h2o_submission_fold0.csv', index=False)","b1e5b9d7":"%%time\nnfolds=5\naml = H2OAutoML(max_models=500, seed=554, max_runtime_secs=8000,nfolds=nfolds,sort_metric=\"MAE\")\naml.train(x=x, y=y, training_frame=train)","0340be4a":"lb = aml.leaderboard\nlb.head(rows=lb.nrows)","c4b6c7b1":"aml.leader","9cc5d5d6":"preds = aml.predict(test)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.as_data_frame().values.flatten()\nsample_submission.to_csv('h2o_submission_fold5.csv', index=False)","d6792496":"sample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = (pd.read_csv('h2o_submission_fold0.csv')['time_to_failure']+pd.read_csv('h2o_submission_fold5.csv')['time_to_failure'])\/2\nsample_submission.to_csv('h2o_submission_blend.csv', index=False)","0f3326f2":"# H2O AutoML"}}