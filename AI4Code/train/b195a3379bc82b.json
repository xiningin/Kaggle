{"cell_type":{"636cf2e6":"code","8aaea2a7":"code","d5dab222":"code","871bc3d7":"code","539d1d88":"code","1beb25b1":"code","c23290f1":"code","990ee1f8":"code","2c80f8b1":"code","58749d76":"code","7052c28f":"code","60e3dbe5":"code","57e38c34":"code","e214b253":"code","f2e5a50a":"code","73905a35":"code","504b058d":"code","507c439d":"markdown","a2a3789f":"markdown","e9e9fb32":"markdown","6ec0f3ea":"markdown","869ed842":"markdown","391945cf":"markdown","65c3fd3c":"markdown","62175e5a":"markdown","b3d502cd":"markdown","3506b972":"markdown"},"source":{"636cf2e6":"!pip install git+https:\/\/github.com\/fastai\/fastcore > \/dev\/null\n!pip install git+https:\/\/github.com\/fastai\/fastai2 > \/dev\/null\n!pip install iterative-stratification > \/dev\/null","8aaea2a7":"%load_ext autoreload\n%autoreload 2\n\nimport os\nimport pandas as pd\nimport sys\nfrom collections import Counter\nfrom pathlib import Path\n\nfrom iterstrat.ml_stratifiers import MultilabelStratifiedKFold\nfrom tqdm.notebook import tqdm\nfrom torchvision.models import densenet121\nfrom sklearn.metrics import roc_auc_score\nfrom torch.utils.data.sampler import WeightedRandomSampler\n\nfrom fastai2.basics import *\nfrom fastai2.callback.all import *\nfrom fastai2.vision.all import *\n\n\ndef seed_everything(seed):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed_all(seed)\n    torch.cuda.manual_seed(seed)\n    torch.backends.cudnn.deterministic = True","d5dab222":"DATA_PATH = Path('..\/input\/plant-pathology-2020-fgvc7')\nIMG_PATH = DATA_PATH \/ 'images'\nLABEL_COLS = ['healthy', 'multiple_diseases', 'rust', 'scab']\n\nIMG_SIZE = 448\nSEED = 420\nN_FOLDS = 5\nBS = 16\nN_FOLDS = 5\n\nARCH = densenet121","871bc3d7":"seed_everything(SEED)","539d1d88":"train_df = pd.read_csv('..\/input\/plant-pathology-2020-fgvc7\/train.csv')\ntest_df = pd.read_csv('..\/input\/plant-pathology-2020-fgvc7\/test.csv')","1beb25b1":"train_df['label'] = train_df[['healthy', 'multiple_diseases', 'rust', 'scab']].idxmax(1)","c23290f1":"submission_csv = pd.read_csv('..\/input\/ensemble-top-kernels\/submission.csv')\nsubmission_csv['label'] = submission_csv[['healthy', 'multiple_diseases', 'rust', 'scab']].idxmax(1)","990ee1f8":"_, axes = plt.subplots(1, 2, figsize=(12, 4))\naxes = axes.flatten()\ntrain_df.label.value_counts().plot.bar(ax=axes[0], title='Train')\nsubmission_csv.label.value_counts().plot.bar(ax=axes[1], title='Test')\nplt.show()","2c80f8b1":"train_df['is_test'] = False\ntest_df['is_test'] = True\n\nall_df = pd.concat([\n    train_df[['image_id', 'is_test']], test_df[['image_id', 'is_test']]]\n).reset_index(drop=True).sample(frac=1., random_state=SEED)","58749d76":"all_df.is_test.value_counts()","7052c28f":"datablock = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    getters=[\n        ColReader('image_id', pref=IMG_PATH, suff='.jpg'), ColReader('is_test')\n    ],\n    splitter=RandomSplitter(seed=SEED),\n    item_tfms=Resize(IMG_SIZE),\n    batch_tfms=aug_transforms(size=IMG_SIZE, max_rotate=30., min_scale=0.75, flip_vert=True, do_flip=True)\n)","60e3dbe5":"dls = datablock.dataloaders(source=all_df, bs=BS)","57e38c34":"dls.show_batch()","e214b253":"def get_learner(dls, lr=1e-3):\n    opt_func = partial(Adam, lr=lr, wd=0.01, eps=1e-8)\n\n    learn = cnn_learner(\n        dls, ARCH, opt_func=opt_func,\n        metrics=[RocAuc()]).to_fp16()\n\n    return learn","f2e5a50a":"learn = get_learner(dls)\nlearn.fit_one_cycle(1)\nlearn.unfreeze()\nlearn.fit_one_cycle(4, slice(1e-4, 1e-3))","73905a35":"loss, metric = learn.validate()","504b058d":"metric","507c439d":"Firstly let's understand how the test set distribution compares to the train distribution. I'll use the predictions from the current [highest scoring kernel](https:\/\/www.kaggle.com\/seefun\/ensemble-top-kernels).","a2a3789f":"## Adversarial Validation","e9e9fb32":"## Final score","6ec0f3ea":"# Plant Pathology 2020\n\n## Adversial Validation\n\nSince it appears quite common to find leaderboard scores that are significantly lower than validation, this notebook explores the test set, trying to understand what makes it different from the training set.\n\nI use fastai2 for the model training again, forking the notebook from my [initial fastai2 experiment](https:\/\/www.kaggle.com\/lextoumbourou\/plant-pathology-2020-eda-training-fastai2).","869ed842":"## Training","391945cf":"So the major difference seems to be a higher frequency of `healthy` occurances in the train set.","65c3fd3c":"## Explore the test set","62175e5a":"## Params","b3d502cd":"The AUC is pretty average - that's a good sign. It indicates the train and test set are pretty similar. However, it's not 0.5, so there does appear to be some distribution difference between the 2 sets.","3506b972":"I'm going to train a model to classify whether the example came from the train or test set. If the distribution in the train and test set is exactly the same, we expect an ROC of about 0.5. Any higher than that suggests that there is something quite different about the test set."}}