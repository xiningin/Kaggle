{"cell_type":{"92351852":"code","852c73af":"code","0156add8":"code","b980a777":"code","c84e3e4b":"code","2407d603":"code","dc382d3b":"code","62372729":"code","8a7864f5":"code","db9a6078":"code","bb227c89":"code","8017ed0f":"code","a880538b":"code","3f250d01":"code","62ab017d":"code","c04149c3":"code","0330f6f2":"code","d23ee15a":"code","5a2434c1":"code","48124269":"code","7404ecaf":"code","bfa8f8ce":"code","18d43fbb":"code","3b1f9f89":"code","b63b87cb":"code","bc4649ad":"code","c571ef61":"code","e251fca1":"code","17f29864":"code","cf219f56":"code","6e743ff8":"code","aedeb273":"code","6d1d0b15":"code","36da675a":"code","5d198dca":"code","1efbcaab":"code","9f195aa7":"code","e81f4275":"code","0d2a3f70":"code","ebb24d70":"code","6a89c8a4":"code","de6a2de0":"code","21063e0b":"code","db728d9b":"code","71024cbd":"code","9130e1d3":"code","d6a6c76d":"code","c870cace":"code","6543ea54":"code","bd6ad1ca":"code","8462a48c":"code","e547993c":"code","a2d78a7b":"code","b8bfaad3":"code","0693ba66":"code","b90d833f":"code","efe4bf9e":"code","3a56fc54":"code","3f29f0d8":"code","86d54405":"code","8d6b5d92":"code","7d14f6b0":"markdown","3430c6bd":"markdown","0b06ef08":"markdown","d95438de":"markdown","e33f93e9":"markdown","48c10f1f":"markdown","51226b34":"markdown","f3cac55d":"markdown","f64f0705":"markdown","087fe723":"markdown","321313f5":"markdown","bf7b9600":"markdown","89acae36":"markdown","e2ba8548":"markdown","f23c12c9":"markdown","f0240dd6":"markdown","169b5226":"markdown","39e18688":"markdown","cd5c9697":"markdown","d2776030":"markdown","67a302c2":"markdown","4bcdf8d3":"markdown","f0a01de5":"markdown","3b2f2bac":"markdown","dc3b2f7d":"markdown","cab7bd06":"markdown","10a9a3ba":"markdown","26d444b4":"markdown","fbae24e6":"markdown","c64bf6d5":"markdown","28266078":"markdown","776d1c6e":"markdown","5c01a4a9":"markdown","c6b199f9":"markdown","d1da6e6e":"markdown","1cae3c6f":"markdown"},"source":{"92351852":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom glob import glob\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n##Import any other packages you may need here\nimport matplotlib.image as image\nimport os\nimport glob\n\nimport pydicom","852c73af":"def show_dcm_info(dataset):\n    storage_type = dataset.SOPClassUID\n    \n    pat_name = dataset.PatientName\n    display_name = pat_name.family_name + \", \" + pat_name.given_name\n    \n    pat_id = dataset.PatientID\n    pat_age = dataset.PatientAge\n    pat_sex = dataset.PatientSex\n    modality = dataset.Modality\n    body_part_examined = dataset.BodyPartExamined\n    view_position = dataset.ViewPosition\n    rows = None\n    cols = None\n    pixel_spacing = None\n    \n    if 'PixelData' in dataset:\n        rows = int(dataset.Rows)\n        cols = int(dataset.Columns)\n        if 'PixelSpacing' in dataset:\n            pixel_spacing = dataset.PixelSpacing\n    \n    meta_data = {\n        \"storage_type\": storage_type,\n        \"display_name\": display_name,\n        \"pat_age\": pat_age,\n        \"pat_sex\": pat_sex,\n        \"modality\": modality,\n        \"body_part_examined\": body_part_examined,\n        \"view_position\": view_position,\n        \"rows\": rows,\n        \"cols\": cols,\n        \"pixel_spacing_x\": pixel_spacing[0],\n        \"pixel_spacing_y\": pixel_spacing[1]\n    }\n    \n    return meta_data \n\ndef plot_pixel_array(dataset, figsize=(10,10)):\n    plt.figure(figsize=figsize)\n    plt.imshow(dataset.pixel_array, cmap=plt.cm.bone)\n    plt.show()","0156add8":"path_csv = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/train-rle.csv\"\ndf = pd.read_csv(path_csv)\ndf.head()","b980a777":"file_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/dicom-images-test\/1.2.276.0.7230010.3.1.2.8323329.5797.1517875190.762693\/1.2.276.0.7230010.3.1.3.8323329.5797.1517875190.762692\/1.2.276.0.7230010.3.1.4.8323329.5797.1517875190.762694.dcm\"\ndataset = pydicom.dcmread(file_path)\nmeta_data = show_dcm_info(dataset)\nmeta_data","c84e3e4b":"# from tqdm.notebook import tqdm\n\n# new_df = pd.DataFrame({\n#     \"ImageId\": [],\n#     \"EncodedPixels\": [],\n#     \"storage_type\": [],\n#     \"display_name\": [],\n#     \"pat_age\": [],\n#     \"pat_sex\": [],\n#     \"modality\": [],\n#     \"body_part_examined\": [],\n#     \"view_position\": [],\n#     \"rows\": [],\n#     \"cols\": [],\n#     \"pixel_spacing_x\": [],\n#     \"pixel_spacing_y\": []\n# })\n\n# file_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/dicom-images-train\/*\/*\/*.dcm\"\n\n# file_paths = glob.glob(file_path)\n\n# for index, row in tqdm(df.iterrows()):\n    \n#     index_ = list(filter(lambda x: row[0] in file_paths[x], range(len(file_paths))))\n#     dataset = pydicom.dcmread(file_paths[index_[0]])\n#     meta_data = show_dcm_info(dataset)\n\n#     data = {\n#         \"ImageId\": file_paths[index_[0]].split(\"\/\")[4],\n#         \"EncodedPixels\": row[1],\n#         \"storage_type\": meta_data[\"storage_type\"],\n#         \"display_name\": meta_data[\"display_name\"],\n#         \"pat_age\": meta_data[\"pat_age\"],\n#         \"pat_sex\": meta_data[\"pat_sex\"],\n#         \"modality\": meta_data[\"modality\"],\n#         \"body_part_examined\": meta_data[\"body_part_examined\"],\n#         \"view_position\": meta_data[\"view_position\"],\n#         \"rows\": meta_data[\"rows\"],\n#         \"cols\": meta_data[\"cols\"],\n#         \"pixel_spacing_x\": meta_data[\"pixel_spacing_x\"],\n#         \"pixel_spacing_y\": meta_data[\"pixel_spacing_y\"]\n#     }\n    \n#     new_df = new_df.append(data, ignore_index=True)\n    ","2407d603":"# new_df.to_csv('train_info.csv', header=True, index=False)","dc382d3b":"all_xray_df = pd.read_csv('..\/input\/segment-data\/train_info.csv')\nall_xray_df.sample(3)","62372729":"all_xray_df.info()","8a7864f5":"h = all_xray_df['pat_age'].hist(bins=100)","db9a6078":"over100 = all_xray_df[all_xray_df['pat_age'] > 100]\nprint(len(over100))\nover100","bb227c89":"all_xray_df['pat_age'] = all_xray_df.apply(lambda x: 101 if x['pat_age'] > 100 else x['pat_age'], axis=1)","8017ed0f":"over100 = all_xray_df[all_xray_df['pat_age'] > 100]\nprint(len(over100))\nover100","a880538b":"h = all_xray_df['pat_age'].hist(bins=100)","3f250d01":"all_xray_df[all_xray_df['pat_age'] <= 100][['pat_age']].describe()","62ab017d":"gender_m = all_xray_df[all_xray_df['pat_sex'] == 'M']\ngender_f = all_xray_df[all_xray_df['pat_sex'] == 'F']","c04149c3":"plt.bar(['Male','Female'], [len(gender_m), len(gender_f)])","0330f6f2":"print(f'Patien Gender distribution\\nMale: {len(gender_m)} ({100.0*len(gender_m)\/len(all_xray_df):.2f}%), Female: {len(gender_f)} ({100.0*len(gender_f)\/len(all_xray_df):.2f}%)')","d23ee15a":"all_xray_df['view_position'].unique()","5a2434c1":"\npos_pa = all_xray_df[all_xray_df['view_position'] == 'PA']\npos_ap = all_xray_df[all_xray_df['view_position'] == 'AP']\nplt.bar(['PA','AP'], [len(pos_pa), len(pos_ap)])\n","48124269":"print(f'View position value distribution\\nPA: {len(pos_pa)} ({100.0*len(pos_pa)\/len(all_xray_df):.2f}%), AP: {len(pos_ap)} ({100.0*len(pos_ap)\/len(all_xray_df):.2f}%)')","7404ecaf":"finding = all_xray_df[all_xray_df['EncodedPixels'] != ' -1']\nno_finding = all_xray_df[all_xray_df['EncodedPixels'] == ' -1']","bfa8f8ce":"print(f'Number of sick value distribution\\nfinding: {len(finding)} ({100.0*len(finding)\/len(all_xray_df):.2f}%), no finding: {len(no_finding)} ({100.0*len(no_finding)\/len(all_xray_df):.2f}%)')","18d43fbb":"plt.bar(['finding','no finding'], [len(finding), len(no_finding)])","3b1f9f89":"unique_patients_num = all_xray_df['display_name'].nunique()\nprint(f'Total unique patients: {unique_patients_num}, average number records per patient: {len(all_xray_df)\/unique_patients_num :.2f}')","b63b87cb":"records_per_patient = []\nfor pid in all_xray_df['display_name'].unique():\n    records_per_patient.append(len(all_xray_df[all_xray_df['display_name'] == pid]))","bc4649ad":"unique, counts = np.unique(np.array(records_per_patient), return_counts=True)\nplt.bar(unique, counts)","c571ef61":"def num_patients_with_records(num):\n    return (np.array(records_per_patient) == num*np.ones(len(records_per_patient))).sum()","e251fca1":"for i in range(1,11):\n    print(f'Number of patients with {i} records in the dataset: {num_patients_with_records(i)} ({100.0*num_patients_with_records(i)\/unique_patients_num :.2f})')","17f29864":"desc = all_xray_df.describe()\ndesc","cf219f56":"def show_min_max_values(col, name):\n    print(f'{name} range: [{desc[col][\"min\"]}, {desc[col][\"max\"]}]')","6e743ff8":"show_min_max_values('rows', 'Image Width')\nshow_min_max_values('cols', 'Image Height')","aedeb273":"show_min_max_values('pixel_spacing_x', 'Pixel Spacing over X')\nshow_min_max_values('pixel_spacing_y', 'Pixel Spacing over Y')","6d1d0b15":"finding = all_xray_df[all_xray_df['EncodedPixels'] != ' -1']\nno_finding = all_xray_df[all_xray_df['EncodedPixels'] == ' -1']","36da675a":"finding[finding['pat_age'] <= 100][['pat_age']].describe()","5d198dca":"no_finding[no_finding['pat_age'] <= 100][['pat_age']].describe()","1efbcaab":"fig, (ax1, ax2) = plt.subplots(1, 2)\nfig.set_figheight(5)\nfig.set_figwidth(10)\nax1.title.set_text(\"Range Age For Finding\")\nax1.hist(finding['pat_age'], bins = 100)\nax2.title.set_text(\"Range Age For No Finding\")\nax2.hist(no_finding['pat_age'], bins = 100)\nplt.show()","9f195aa7":"gender_m = finding[finding['pat_sex'] == 'M']\ngender_f = finding[finding['pat_sex'] == 'F']\nplt.bar(['M','F'], [len(gender_m), len(gender_f)])\nprint(f'Patien Gender distribution\\nMale: {len(gender_m)} ({100.0*len(gender_m)\/len(all_xray_df):.2f}%), Female: {len(gender_f)} ({100.0*len(gender_f)\/len(all_xray_df):.2f}%)')","e81f4275":"gender_m = no_finding[no_finding['pat_sex'] == 'M']\ngender_f = no_finding[no_finding['pat_sex'] == 'F']\nplt.bar(['M','F'], [len(gender_m), len(gender_f)])\nprint(f'Patien Gender distribution\\nMale: {len(gender_m)} ({100.0*len(gender_m)\/len(all_xray_df):.2f}%), Female: {len(gender_f)} ({100.0*len(gender_f)\/len(all_xray_df):.2f}%)')","0d2a3f70":"pos_pa = finding[finding['view_position'] == 'PA']\npos_ap = finding[finding['view_position'] == 'AP']\nplt.bar(['PA','AP'], [len(pos_pa), len(pos_ap)])\nprint(f'View position value distribution\\nPA: {len(pos_pa)} ({100.0*len(pos_pa)\/len(finding):.2f}%), AP: {len(pos_ap)} ({100.0*len(pos_ap)\/len(finding):.2f}%)')","ebb24d70":"\npos_pa = no_finding[no_finding['view_position'] == 'PA']\npos_ap = no_finding[no_finding['view_position'] == 'AP']\nplt.bar(['PA','AP'], [len(pos_pa), len(pos_ap)])\nprint(f'View position value distribution\\nPA: {len(pos_pa)} ({100.0*len(pos_pa)\/len(no_finding):.2f}%), AP: {len(pos_ap)} ({100.0*len(pos_ap)\/len(no_finding):.2f}%)')","6a89c8a4":"sample_df = all_xray_df.sample(1000)\nsample_df.head(3)","de6a2de0":"finding_sample = sample_df[sample_df['EncodedPixels'] != ' -1']\nno_finding_sample = sample_df[sample_df['EncodedPixels'] == ' -1']","21063e0b":"finding_sample_1 = finding_sample.iloc[0]\nfinding_sample_1","db728d9b":"fordel_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/dicom-images-train\/\"\nfile_path = os.path.join(fordel_path, finding_sample_1.ImageId) + \"\/*\/*.dcm\"\nimage_path = glob.glob(file_path)[0]","71024cbd":"def show_image_distr(data):\n    data = data\/255.\n    f = plt.figure()\n    f.set_figwidth(10)\n\n    s1 = f.add_subplot(1, 2, 1)\n    s1.set_title('Image')\n    plt.imshow(data, cmap='gray')\n\n\n    s2 = f.add_subplot(1, 2, 2)\n    s2.set_title('Intensity Distribution')\n    plt.hist(data.ravel(), bins = 256)\n\n    plt.show()","9130e1d3":"dataset = pydicom.dcmread(image_path)\nimg_data = dataset.pixel_array\nshow_image_distr(img_data)","d6a6c76d":"def get_image_data(row):\n    fordel_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/dicom-images-train\/\"\n    file_path = os.path.join(fordel_path, row[\"ImageId\"]) + \"\/*\/*.dcm\"\n    image_path = glob.glob(file_path)[0]\n    if image_path is not None:\n        dataset = pydicom.dcmread(image_path)\n        img_data = dataset.pixel_array\n        img_data = img_data\/255.\n        return img_data\n    else:\n        return None","c870cace":"finding_sample['image_data'] = finding_sample.apply(get_image_data, axis=1)\nfinding_sample.head(2)","6543ea54":"finding_data = finding_sample[finding_sample['image_data'].notna()]['image_data'].values\nfinding_data.shape","bd6ad1ca":"finding_intensities = []\nfor data in finding_data:\n    finding_intensities.extend(data.flatten().tolist())","8462a48c":"plt.hist(finding_intensities[:1000000],bins=256)\nplt.show()","e547993c":"for data in finding_data[:10]:\n    show_image_distr(data)","a2d78a7b":"def show_image_mask(img_data, th):\n    img_data = img_data\/255.\n    f = plt.figure()\n    f.set_figwidth(15)\n\n    s1 = f.add_subplot(1, 3, 1)\n    s1.set_title('Image')\n    plt.imshow(img_data, cmap='gray')\n\n    mask = data > th\n\n    s2 = f.add_subplot(1, 3, 2)\n    s2.set_title('Mask')\n    plt.imshow(mask.astype(int)*255, cmap='gray')\n    \n    s3 = f.add_subplot(1, 3, 3)\n    s3.set_title('Intensity Distribution')\n    plt.hist(img_data[mask], bins = 256)\n\n    plt.show()","b8bfaad3":"background_threshold = 0.1\n\nfor data in finding_data[:10]:\n    show_image_mask(data, background_threshold)","0693ba66":"foreground_threshold = 0.9","b90d833f":"def get_intensities(option=\"finding\"):\n    fordel_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/dicom-images-train\/\"\n    \n    intensities = []\n    if option == \"finding\":\n        image_ids = sample_df[sample_df['EncodedPixels'] != ' -1'][:100].ImageId\n    else:\n        image_ids = sample_df[sample_df['EncodedPixels'] == ' -1'][:100].ImageId\n    for image_id in image_ids:\n        file_path = os.path.join(fordel_path, image_id) + \"\/*\/*.dcm\"\n        image_path = glob.glob(file_path)[0]\n        dataset = pydicom.dcmread(image_path)\n        data = dataset.pixel_array \/ 255.\n        mask = (data > background_threshold) & (data < foreground_threshold)\n        intensities.extend(data[mask].flatten().tolist())\n    return intensities\n    \nplt.hist(get_intensities(\"finding\"), bins = 256)\nplt.show()","efe4bf9e":"f = plt.figure()\nf.set_figwidth(20)\nf.set_figheight(20)\n\ns1 = f.add_subplot(1, 2, 1)\ns1.set_title('Image Finding')\nplt.hist(get_intensities(\"finding\"), bins = 256)\nplt.show()\n\ns2 = f.add_subplot(1, 2, 2)\ns2.set_title('Image No Finding')\nplt.hist(get_intensities(\"no_finding\"), bins = 256)\nplt.show()\n","3a56fc54":"# Read Origin Image\nall_xray_df = pd.read_csv('..\/input\/segment-data\/train_info.csv')\nall_xray_df.sample(3)","3f29f0d8":"finding = all_xray_df[all_xray_df['EncodedPixels'] != ' -1']\nno_finding = all_xray_df[all_xray_df['EncodedPixels'] == ' -1'].sample(len(finding))","86d54405":"number_train = int(0.9 * len(finding))\ntraining_df = finding.sample(number_train)\nvalidation_df = finding.drop(training_df.index)\n","8d6b5d92":"training_df.to_csv('train_info_split.csv', header=True, index=False)\nvalidation_df.to_csv('val_info_split.csv', header=True, index=False)","7d14f6b0":"#### Gender","3430c6bd":"C\u00f3 th\u1ec3 th\u1ea5y kho\u1ea3ng \u0111\u1ed9 tu\u1ed5i m\u1eafc tr\u00e0n kh\u00ed ph\u1ed5i tr\u1ea3i g\u1ea7n \u0111\u1ec1u t\u1eeb 19 cho \u0111\u1ebfn 63 tu\u1ed5i, trong khi \u0111\u1ed1i v\u1edbi nh\u1eefng tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng b\u1ecb m\u1eafc th\u00ec l\u1ea1i t\u1eadp trung v\u00e0o kho\u1ea3ng 58 tu\u1ed5i.","0b06ef08":"#### K\u1ebft lu\u1eadn\n\n* H\u00ecnh \u1ea3nh trong t\u1eadp d\u1eef li\u1ec7u c\u1ea7n ph\u1ea3i chu\u1ea9n h\u00f3a v\u1ec1 \u0111o\u1ea1n t\u1eeb 0 \u0111\u1ebfn 1\n* Background c\u1ea7n ph\u1ea3i \u0111\u01b0\u1ee3c lo\u1ea1i b\u1ecf v\u1edbi ng\u01b0\u1ee1ng l\u00e0 > 0.1\n* Foreground m\u00e0 c\u00f3 gi\u00e1 tr\u1ecb qu\u00e1 s\u00e1ng c\u0169ng c\u1ea7n ph\u1ea3i lo\u1ea1i b\u1ecf, ng\u01b0\u1ee1ng g\u1ee3i \u00fd l\u00e0 < 0.9. \u0110\u00e2y c\u00f3 th\u1ec3 l\u00e0 nh\u1eefng th\u1ef1c th\u1ec3 b\u00ean ngo\u00e0i, h\u1ea5p th\u1ee5 tia X t\u1ed1t, v\u00ed d\u1ee5 nh\u01b0 m\u1ea3nh nh\u1ef1a, ... )\n* Ph\u00e2n b\u1ed1 h\u00ecnh \u1ea3nh li\u00ean quan \u0111\u1ebfn \u0111\u1ed9 tu\u1ed5i v\u00e0 gi\u1edbi t\u00ednh t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ed3ng \u0111\u1ec1u, kh\u00f4ng qu\u00e1 b\u1ecb bias v\u1ec1 l\u1edbp \u0111\u1ed1i t\u01b0\u1ee3ng n\u00e0o c\u1ea3.\n* Bias v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng h\u00ecnh \u1ea3nh finding v\u00e0 non-finding, v\u1edbi tr\u01b0\u1eddng h\u1ee3p non-finding c\u00f3 r\u1ea5t nhi\u1ec1u h\u00ecnh \u1ea3nh:\n    * Lo\u1ea1i b\u1ecf c\u00e1c h\u00ecnh \u1ea3nh non-finding sao cho g\u1ea7n b\u1eb1ng v\u1edbi s\u1ed1 l\u01b0\u1ee3ng h\u00ecnh \u1ea3nh finding:\n        * finding: 3286 (28.37%), no finding: 8296 (71.63%)\n    * T\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u \u0111\u1ed1i v\u1edbi h\u00ecnh \u1ea3nh finding\n* View position \u0111\u1ed1i v\u1edbi finding c\u0169ng b\u1ecb bias nh\u1eb9 (c\u00f3 th\u1ec3 x\u1eed l\u00fd sau):\n    * PA: 2131 (64.85%), AP: 1155 (35.15%)\n* Ngo\u00e0i ra c\u00f2n c\u00f3 m\u1ed9t s\u1ed1 nhi\u1ec5u trong h\u00ecnh \u1ea3nh c\u0169ng c\u1ea7n ph\u1ea3i x\u1eed l\u00fd tr\u01b0\u1edbc (x\u1eed l\u00fd sau - sau khi c\u00f3 base model)","d95438de":"K\u00edch th\u01b0\u1edbc h\u00ecnh \u1ea3nh c\u0169ng nh\u01b0 pixel spacing \u0111\u1ed1i v\u1edbi c\u00e1c h\u00ecnh \u1ea3nh kh\u00e1c nhau kh\u00f4ng kh\u00e1c bi\u1ec7t, n\u00ean ph\u1ea7n n\u00e0y kh\u00f4ng c\u1ea7n x\u1eed l\u00fd tr\u01b0\u1edbc.","e33f93e9":"#### Ph\u00e2n t\u00edch theo m\u1ee9c pixel","48c10f1f":"#### Patient ID","51226b34":"#### Ki\u1ec3m tra ph\u00e2n b\u1ed1 gi\u1edbi t\u00ednh v\u1edbi b\u1ecb b\u1ec7nh\/ko b\u1ecb b\u1ec7nh","f3cac55d":"Ph\u00e2n b\u1ed1 theo gi\u1edbi t\u00ednh c\u00f3 v\u1ebb kh\u00e1 \u0111\u1ed3ng \u0111\u1ec1u, kh\u00f4ng b\u1ecb bias qu\u00e1 v\u1ec1 l\u1edbp n\u00e0o c\u1ea3.","f64f0705":"# Ph\u00e2n \u0111o\u1ea1n Pneumothorax (tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i)","087fe723":"Trong d\u1ef1 \u00e1n n\u00e0y, s\u1ebd ph\u1ea3i ph\u00e2n \u0111o\u1ea1n \u0111\u01b0\u1ee3c \u0111\u00e2u l\u00e0 ph\u1ea7n tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i t\u1eeb h\u00ecnh \u1ea3nh X-quang \u0111\u00e3 \u0111\u01b0\u1ee3c g\u00e1n nh\u00e3n tr\u01b0\u1edbc.\n\nD\u1eef li\u1ec7u bao g\u1ed3m c\u00f3 12955 h\u00ecnh X-quang t\u1eeb 12047 b\u1ec7nh nh\u00e2n v\u00e0 nh\u00e3n t\u01b0\u01a1ng \u1ee9ng (c\u00f3 nh\u1eefng h\u00ecnh \u1ea3nh c\u00f3 nh\u00e3n, c\u00f3 nh\u1eefng h\u00ecnh \u1ea3nh kh\u00f4ng c\u00f3 nh\u00e3n t\u1ee9c l\u00e0 kh\u00f4ng b\u1ecb ch\u1ee9ng tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i).","321313f5":"C\u1ea3m gi\u00e1c hai l\u1edbp n\u00e0y c\u00f3 s\u1ef1 bias nh\u1eb9! Thi\u00ean v\u1ec1 l\u1edbp PA","bf7b9600":"# Th\u1ef1c hi\u1ec7n d\u1ef1 \u00e1n","89acae36":"#### Ki\u1ec3m tra ph\u00e2n b\u1ed1 theo view position v\u1edbi b\u1ecb b\u1ec7nh\/ko b\u1ecb b\u1ec7nh","e2ba8548":"#### View Position","f23c12c9":"C\u00f3 th\u1ec3 th\u1ea5y \u0111\u00e3 xu\u1ea5t hi\u1ec7n hi\u1ec7n t\u01b0\u1ee3ng b\u1ecb bias. S\u1ed1 l\u01b0\u1ee3ng no finding nhi\u1ec1u h\u01a1n r\u1ea5t nhi\u1ec1u so v\u1edbi s\u1ed1 l\u01b0\u1ee3ng finding. C\u1ea7n ph\u1ea3i gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 m\u1ea5t c\u00e2n b\u1eb1ng n\u00e0y. M\u1ed9t trong nh\u01b0ng c\u00e1ch \u0111\u00f3 l\u00e0:\n* Gi\u1ea3m b\u1edbt s\u1ed1 l\u01b0\u1ee3ng no-finding v\u1ec1 g\u1ea7n v\u1edbi finding\n* \u00c1p d\u1ee5ng c\u00e1c k\u0129 thu\u1eadt t\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u \u0111\u1ed1i v\u1edbi l\u1edbp finding","f0240dd6":"## C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n d\u1ef1 \u00e1n\n\n### 1. Ph\u00e2n t\u00edch v\u00e0 kh\u00e1m ph\u00e1 d\u1eef li\u1ec7u (EDA)\n\nPh\u1ea7n \u0111\u1ea7u t\u1eadp trung v\u00e0o vi\u1ec7c ph\u00e2n t\u00edch v\u00e0 kh\u00e1m ph\u00e1 d\u1eef li\u1ec7u \u0111\u1ec3 c\u00f3 th\u1ec3 hi\u1ec3u v\u00e0 m\u00f4 t\u1ea3 \u0111\u01b0\u1ee3c n\u1ed9i dung v\u00e0 b\u1ea3n ch\u1ea5t c\u1ee7a d\u1eef li\u1ec7u.\n\nEDA r\u1ea5t quan tr\u1ecdng khi n\u00f3 c\u00f3 th\u1ec3 gi\u00fap t\u0103ng \u0111\u1ed9 ch\u00ednh x\u00e1c m\u00f4 h\u00ecnh n\u1ebfu ph\u00e2n t\u00edch d\u1eef li\u1ec7u t\u1ed1t v\u00e0 c\u00f3 th\u1ec3 l\u00e0m b\u00e1o c\u00e1o v\u1ec1 sau. M\u1ed9t s\u1ed1 th\u00f4ng tin m\u00e0 l\u00fac l\u00e0m EDA c\u00f3 th\u1ec3 l\u00e0m \u0111\u00f3 l\u00e0:\n* D\u1eef li\u1ec7u nh\u00e2n kh\u1ea9u h\u1ecdc c\u1ee7a b\u1ec7nh nh\u00e2n:\n        * Gi\u1edbi t\u00ednh\n        * Tu\u1ed5i\n        * ... c\u00e1c th\u00f4ng tin n\u00e0y l\u00e0 c\u00f3 s\u1eb5n\n* X-ray view (g\u00f3c ch\u1ee5p c\u1ee7a h\u00ecnh \u1ea3nh X-quang)\n* C\u00e1c th\u00f4ng tin:\n        * S\u1ed1 l\u01b0\u1ee3ng c\u00e1c ca b\u1ec7nh m\u1eafc tr\u00e0n kh\u00ed ph\u1ed5i\n        * S\u1ed1 l\u01b0\u1ee3ng c\u00e1c ca b\u1ec7nh kh\u00f4ng b\u1ecb m\u1eafc tr\u00e0n kh\u00ed ph\u1ed5i\n* S\u1ef1 ph\u00e2n b\u1ed1 c\u00e1c ca b\u1ec7nh theo:\n        * \u0110\u1ed9 tu\u1ed5i\n        * Gi\u1edbi t\u00ednh\n        * ...\n* \u0110\u00e1nh gi\u00e1 m\u1ee9c pixel gi\u1eefa tr\u1ea1ng th\u00e1i kh\u1ecfe m\u1ea1nh v\u00e0 tr\u1ea1ng th\u00e1i b\u1ecb b\u1ec7nh trong b\u1ed9 d\u1eef li\u1ec7u (v\u00ed d\u1ee5: bi\u1ec3u \u0111\u1ed3 c\u00e1c gi\u00e1 tr\u1ecb c\u01b0\u1eddng \u0111\u1ed9) v\u00e0 so s\u00e1nh ph\u00e2n b\u1ed1 gi\u1eefa c\u00e1c lo\u1ea1i n\u00e0y\n\n### 2. X\u00e2y d\u1ef1ng v\u00e0 \u0111\u00e0o t\u1ea1o m\u00f4 h\u00ecnh\n\n**Training and Validation Datasets**\n\nT\u1eeb c\u00e1c ph\u00e1t hi\u1ec7n trong ph\u1ea7n EDA, h\u00e3y s\u1eafp x\u1ebfp c\u00e1c t\u1eadp train v\u00e0 validation sao cho ph\u00f9 h\u1ee3p \u0111\u1ec3 c\u00f3 th\u1ec3 ph\u00e2n \u0111o\u1ea1n \u0111\u01b0\u1ee3c b\u1ec7nh. H\u00e3y ch\u1eafc ch\u1eafn xem x\u00e9t c\u00e1c \u0111i\u1ec1u ki\u1ec7n sau:\n* Th\u00f4ng tin nh\u00e2n kh\u1ea9u h\u1ecdc, v\u1ecb tr\u00ed ch\u1ee5p h\u00ecnh \u1ea3nh, v\u00e0 s\u1ed1 l\u01b0\u1ee3ng h\u00ecnh \u1ea3nh theo \u0111\u1ed9 tu\u1ed5i v\u00e0 gi\u1edbi t\u00ednh, ...\n* Ph\u00e2n b\u1ed1 gi\u1eefa c\u00e1c tr\u01b0\u1eddng h\u1ee3p d\u01b0\u01a1ng t\u00ednh v\u00e0 \u00e2m t\u00ednh trong m\u1ed7i t\u1eadp d\u1eef li\u1ec7u\n\n**Ki\u1ebfn tr\u00fac m\u00f4 h\u00ecnh**:\n\nTrong d\u1ef1 \u00e1n n\u00e0y, c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng vi\u1ec7c tinh ch\u1ec9nh ki\u1ebfn tr\u00fac Unet3D \u0111\u1ec3 c\u00f3 th\u1ec3 ph\u00e2n \u0111o\u1ea1n \u0111\u01b0\u1ee3c v\u1ecb tr\u00ed tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i. Vi\u1ec7c tinh ch\u1ec9nh c\u00f3 th\u1ec3 \u0111\u1ebfn t\u1eeb vi\u1ec7c \u0111\u00f3ng b\u0103ng m\u1ed9t s\u1ed1 l\u1edbp \u0111\u1ea7u v\u00e0 \u0111\u00e0o t\u1ea1o c\u00e1c l\u1edbp ph\u00eda sau.\n\n**X\u1eed l\u00fd tr\u01b0\u1edbc v\u00e0 t\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u**:\n\nTi\u1ec1n x\u1eed l\u00fd tr\u01b0\u1edbc d\u1eef li\u1ec7u tr\u01b0\u1edbc khi \u0111\u01b0a v\u00e0o m\u1ea1ng \u0111\u1ec3 \u0111\u00e0o t\u1ea1o v\u00e0 x\u00e1c th\u1ef1c. \u0110i\u1ec1u n\u00e0y c\u00f3 t\u00e1c d\u1ee5ng gi\u00fap ph\u00f9 h\u1ee3p v\u1edbi ki\u1ebfn tr\u00fac m\u00f4 h\u00ecnh h\u01a1n, d\u1ec5 \u0111\u00e0o t\u1ea1o h\u01a1n \u0111\u1ec3 c\u00f3 th\u1ec3 t\u0103ng \u0111\u01b0\u1ee3c hi\u1ec7u su\u1ea5t c\u1ee7a m\u00f4 h\u00ecnh. Ngo\u00e0i ra, c\u00f3 th\u1ec3 t\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u v\u00e0 ph\u1ea3i ch\u00fa \u00fd \u0111\u1ebfn c\u00e1c th\u00f4ng s\u1ed1 ph\u1ea3n \u00e1nh \u0111\u01b0\u1ee3c s\u1ef1 kh\u00e1c bi\u1ec7t c\u00f3 th\u1ec3 \u0111\u1ebfn t\u1eeb th\u1ebf gi\u1edbi th\u1ef1c c\u00f3 th\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c khi ch\u1ee5p h\u00ecnh \u1ea3nh X-Quang.\n\n**\u0110\u00e0o t\u1ea1o**:\n\nTrong qu\u00e1 tr\u00ecnh \u0111\u00e0o t\u1ea1o, c\u00f3 nhi\u1ec1u tham s\u1ed1 c\u1ea7n tinh ch\u1ec9nh bao g\u1ed3m:\n* C\u00e1c tham s\u1ed1 trong qu\u00e1 tr\u00ecnh t\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u\n* Batch_size\n* Learning rate\n* C\u00e1c tham s\u1ed1 c\u1ee7a t\u1eebng l\u1edbp c\u1ee5 th\u1ec3 trong m\u1ea1ng\n\nC\u1ea7n ph\u1ea3i m\u00f4 t\u1ea3 \u0111\u01b0\u1ee3c c\u00e1c ph\u01b0\u01a1ng ph\u00e1p v\u00e0 tham s\u1ed1 \u0111\u00e3 s\u1eed d\u1ee5ng sau khi \u0111\u00e1nh gi\u00e1 hi\u1ec7u su\u1ea5t c\u1ee7a m\u00f4 h\u00ecnh.\n\n### 3. T\u00edch h\u1ee3p quy tr\u00ecnh l\u00e0m vi\u1ec7c l\u00e2m s\u00e0ng\n\nD\u1eef li\u1ec7u h\u00ecnh \u1ea3nh \u0111\u01b0\u1ee3c cung c\u1ea5p \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u00e0o t\u1ea1o m\u00f4 h\u00ecnh \u0111ang trong d\u1ea1ng DICOM. Trong d\u1ef1 \u00e1n n\u00e0y, h\u00e3y t\u1ea1o m\u1ed9t DICOM wrapper c\u00f3 th\u1ec3 nh\u1eadn c\u00e1c t\u1ec7p DICOM chu\u1ea9n, v\u00e0 xu\u1ea5t d\u1eef li\u1ec7u \u1edf \u0111\u1ecbnh d\u1ea1ng m\u00e0 m\u00f4 h\u00ecnh c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn \u0111\u01b0\u1ee3c.","169b5226":"#### So s\u00e1nh ph\u00e2n ph\u1ed1i h\u00ecnh \u1ea3nh b\u1ecb tr\u00e0n kh\u00ed ph\u1ed5i vs h\u00ecnh \u1ea3nh kh\u00f4ng b\u1ecb tr\u00e0n kh\u00ed ph\u1ed5i","39e18688":"#### Ki\u1ec3m tra rage age n\u1eb1m trong kho\u1ea3ng n\u00e0o \u0111\u1ed1i v\u1edbi b\u1ec7nh nh\u00e2n b\u1ecb b\u1ec7nh","cd5c9697":"#### C\u1ea7n lo\u1ea1i b\u1ecf c\u00e1c v\u00f9ng tr\u1eafng qu\u00e1 m\u1ee9c","d2776030":"C\u00f3 2 records ch\u1ee9a gi\u00e1 tr\u1ecb tu\u1ed5i tr\u00ean 100. \u0110\u00e2y r\u00f5 r\u00e0ng l\u00e0 nh\u1ea7m l\u1eabn, c\u00e1ch \u0111\u01a1n gi\u1ea3n l\u00e0 \u0111\u1eb7t n\u00f3 v\u1ec1 gi\u00e1 tr\u1ecb 100, v\u00ec \u0111i\u1ec1u n\u00e0y \u00edt nh\u1ea5t c\u0169ng cho hai b\u1ea3n ghi n\u00e0y n\u1eb1m v\u1ec1 c\u00f9ng m\u1ed9t gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3.","67a302c2":"S\u1ed1 l\u01b0\u1ee3ng v\u1ec1 gi\u1edbi t\u00ednh c\u1ee7a b\u1ec7nh nh\u00e2n c\u0169ng kh\u00f4ng b\u1ecb bias qu\u00e1 nhi\u1ec1u v\u1ec1 l\u1edbp n\u00e0o c\u1ea3, c\u1ea3 hai l\u1edbp n\u00e0y kh\u00e1 \u0111\u1ed3ng \u0111\u1ec1u (t\u01b0\u01a1ng \u0111\u1ed1i).","4bcdf8d3":"Ph\u00e2n ph\u1ed1i tu\u1ed5i c\u1ee7a b\u1ec7nh nh\u00e2n g\u1ea7n gi\u1ed1ng ph\u00e2n ph\u1ed1i chu\u1ea9n v\u1edbi vi\u1ec7c h\u01a1i l\u1ec7ch ph\u1ea3i m\u1ed9t ch\u00fat, \u0111\u1ec9nh c\u1ee7a ph\u00e2n ph\u1ed1i cao nh\u1ea5t l\u00e0 t\u1ea7m 58 tu\u1ed5i.","f0a01de5":"Ti\u00eau ch\u00ed chia t\u1eadp d\u1eef li\u1ec7u:\n* Chia theo s\u1ed1 l\u01b0\u1ee3ng finding:\n    * L\u1ea5y kho\u1ea3ng 3286 finding v\u00e0 ch\u1ecdn random 3286 non-finding\n    * \u00c1p d\u1ee5ng c\u00e1c k\u0129 thu\u1eadt t\u0103ng c\u01b0\u1eddng d\u1eef li\u1ec7u cho finding v\u00e0 non-finding\n* \u0110\u1ed1i v\u1edbi vi\u1ec7c b\u1ecb thi\u00ean l\u1ec7ch v\u1ec1 view-position c\u00f3 th\u1ec3 t\u00ednh sau","3b2f2bac":"Kho\u1ea3ng dao \u0111\u1ed9ng c\u1ee7a tu\u1ed5i b\u1ec7nh nh\u00e2n n\u1eb1m trong kho\u1ea3ng t\u1eeb 1 cho \u0111\u1ebfn 94.","dc3b2f7d":"## Kh\u00e1m ph\u00e1 v\u00e0 ph\u00e2n t\u00edch d\u1eef li\u1ec7u (EDA)\n\nEDA l\u00e0 m\u1ed9t b\u01b0\u1edbc r\u1ea5t quan tr\u1ecdng gi\u00fap hi\u1ec3u \u0111\u01b0\u1ee3c b\u1ea3n ch\u1ea5t c\u1ee7a d\u1eef li\u1ec7u t\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 gi\u00fap qu\u00e1 tr\u00ecnh ti\u1ebfp c\u1eadn v\u1ea5n \u0111\u1ec1 v\u00e0 \u0111\u01b0a ra h\u01b0\u1edbng gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c \u0111\u00fang v\u00e0 ch\u00ednh x\u00e1c. V\u00ed d\u1ee5, EDA trong d\u1ef1 \u00e1n n\u00e0y c\u00f3 th\u1ec3 gi\u00fap ph\u00e1t hi\u1ec7n ra \u0111\u01b0\u1ee3c c\u00e1c bi\u1ec3u hi\u1ec7n c\u1ee7a tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i trong t\u1ef1 nhi\u00ean. V\u00ed d\u1ee5 nh\u01b0: t\u1ea7n su\u1ea5t xu\u1ea5t hi\u1ec7n l\u00e0 bao nhi\u00eau, \u0111\u1ed9 tu\u1ed5i ch\u1ecbu \u1ea3nh h\u01b0\u1edfng c\u1ee7a lo\u1ea1i b\u1ec7nh n\u00e0y, ... \n\nC\u00e1c vi\u1ec7c c\u1ea7n EDA tr\u00ean t\u1eadp d\u1eef li\u1ec7u n\u00e0y bao g\u1ed3m c\u00f3:\n* D\u1eef li\u1ec7u v\u1ec1 nh\u00e2n kh\u1ea9u h\u1ecdc nh\u01b0 gi\u1edbi t\u00ednh, tu\u1ed5i, v\u1ecb tr\u00ed \u0111\u1eb7t b\u1ec7nh nh\u00e2n, ...\n* C\u00e1c ch\u1ebf \u0111\u1ed9 khi ch\u1ee5p \u1ea3nh X-Quang (v\u1ecb tr\u00ed ch\u1ee5p, ... )\n* S\u1ed1 tr\u01b0\u1eddng h\u1ee3p:\n    * S\u1ed1 l\u01b0\u1ee3ng tr\u01b0\u1eddng h\u1ee3p b\u1ecb tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i\n    * S\u1ed1 l\u01b0\u1ee3ng tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng b\u1ecb tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i\n* S\u1ef1 ph\u00e2n b\u1ed1 c\u1ee7a c\u00e1c tr\u01b0\u1eddng h\u1ee3p tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i \u0111\u1ed1i v\u1edbi \u0111\u1ed9 tu\u1ed5i\n* S\u1ef1 ph\u00e2n b\u1ed1 c\u1ee7a c\u00e1c tr\u01b0\u1eddng h\u1ee3p tr\u00e0n kh\u00ed m\u00e0ng ph\u1ed5i \u0111\u1ed1i v\u1edbi gi\u1edbi t\u00ednh\n* \u0110\u00e1nh gi\u00e1 m\u1ee9c pixel c\u1ee7a d\u1eef li\u1ec7u h\u00ecnh \u1ea3nh cho c\u00e1c tr\u1ea1ng th\u00e1i kh\u1ecfe m\u1ea1nh v\u00e0 b\u1ec7nh t\u1eadt c\u1ea7n quan t\u00e2m (v\u00ed d\u1ee5 nh\u01b0 bi\u1ec3u \u0111\u1ed3 v\u1ec1 c\u00e1c gi\u00e1 tr\u1ecb c\u01b0\u1eddng \u0111\u1ed9 v\u00e0 so s\u00e1nh s\u1ef1 ph\u00e2n b\u1ed1 n\u00e0y).\n\nNgo\u00e0i ra, sau khi \u0111\u00e3 th\u1ef1c hi\u1ec7n EDA, h\u00e3y m\u00f4 t\u1ea3 c\u00e1ch thi\u1ebft l\u1eadp t\u1eadp training v\u00e0 testing cho b\u1ed9 d\u1eef li\u1ec7u.","cab7bd06":"#### Image width & Height, pixel spacing","10a9a3ba":"#### S\u1ed1 l\u01b0\u1ee3ng b\u1ec7nh\/kh\u00f4ng b\u1ecb b\u1ec7nh","26d444b4":"### Ph\u00e2n t\u00edch ph\u00e2n ph\u1ed1i c\u1ee7a c\u00e1c tr\u01b0\u1eddng thu\u1ed9c t\u00ednh","fbae24e6":"#### Sample finding distribution with background","c64bf6d5":"H\u00ecnh \u1ea3nh g\u1ed1c \u0111ang b\u1ecb \u1ea3nh h\u01b0\u1edfng b\u1edfi 2 y\u1ebfu t\u1ed1:\n* Qu\u00e1 nhi\u1ec1u n\u1ec1n\n* Qu\u00e1 nhi\u1ec1u ph\u1ea7n h\u00ecnh \u1ea3nh b\u1ecb ch\u1eb7n b\u1edfi c\u00e1c v\u1eadt th\u1ec3 kh\u00e1c (x\u01b0\u01a1ng, nh\u1ef1a, ... ) d\u1eabn \u0111\u1ebfn c\u01b0\u1eddng \u0111\u1ed9 m\u00e0u r\u1ea5t s\u00e1ng","28266078":"#### Age","776d1c6e":"S\u1ed1 l\u01b0\u1ee3ng 1 b\u1ec7nh nh\u00e2n ch\u1ec9 c\u00f3 m\u1ed9t records t\u01b0\u01a1ng \u1ee9ng v\u1edbi vi\u1ec7c m\u1ed9t b\u1ec7nh nh\u00e2n ch\u1ec9 c\u00f3 1 ph\u00e1t hi\u1ec7n segment l\u00e0 nhi\u1ec1u nh\u1ea5t. C\u00f2n l\u1ea1i, s\u1ed1 l\u01b0\u1ee3ng 2, 3, ...  ph\u00e2n \u0111o\u1ea1n segment th\u00ec \u00edt h\u01a1n v\u00e0 c\u00f3 tr\u01b0\u1eddng h\u1ee3p outline l\u00e0 c\u00f3 10 ph\u00e2n \u0111o\u1ea1n segment cho m\u1ed9t b\u1ec7nh  Tuy nhi\u00ean t\u1eadp trung nhi\u1ec1u v\u00e0o tr\u01b0\u1eddng h\u1ee3p 1 n\u00ean c\u0169ng kh\u00f4ng c\u1ea7n qu\u00e1 quan t\u00e2m \u0111\u1ebfn hi\u1ec7n t\u01b0\u1ee3ng bias \u1edf \u0111\u00e2y, ho\u1eb7c n\u1ebfu mu\u1ed1n x\u1eed l\u00fd th\u00ec ch\u1ec9 n\u00ean x\u1eed l\u00fd ph\u1ea7n c\u00f3 2 segment.","5c01a4a9":"#### Remove Background","c6b199f9":"# Chia d\u1eef li\u1ec7u th\u00e0nh t\u1eadp train v\u00e0 t\u1eadp test","d1da6e6e":"\u0110\u1ed1i v\u1edbi tr\u01b0\u1eddng h\u1ee3p c\u00f3 b\u1ec7nh, view position c\u00f3 v\u1ebb h\u01a1i b\u1ecb bias m\u1ed9t ch\u00fat v\u1ec1 l\u1edbp PA, trong khi \u0111\u00f3, nh\u1eefng tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng b\u1ecb b\u1ec7nh, vi\u1ec7c bias n\u00e0y kh\u00f4ng \u0111\u00e1ng k\u1ec3.","1cae3c6f":"## T\u1ed5ng quan b\u00e0i to\u00e1n"}}