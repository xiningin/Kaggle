{"cell_type":{"7d31745a":"code","7f41d6e2":"code","e8082e8c":"code","8c0396ad":"code","b185b498":"code","677cb8cf":"code","2d9f7583":"code","7f2eec77":"code","40ad65c1":"code","a3b9dc25":"code","e44cbf3a":"markdown","56f9f886":"markdown","0dba841d":"markdown","0f4c7621":"markdown","079ea764":"markdown","c22fe90a":"markdown"},"source":{"7d31745a":"import numpy as np \nimport pandas as pd\nimport os\nimport datetime\nimport folium\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\nimport plotly.express as px\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","7f41d6e2":"train = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-4\/test.csv')\ncountries = pd.read_csv('\/kaggle\/input\/countries\/countries.csv')","e8082e8c":"\ncolumns =['Latitude','Longitude']\nfor col in columns:\n  train[col]=0.\n  test[col]=0.\n\nfor index, row in countries.iterrows():  \n  test.loc[test.Country_Region==row['Country'],[\"Latitude\"]] = row['Latitude'] \n  test.loc[test.Country_Region==row['Country'],[\"Longitude\"]] = row['Longitude']\n  train.loc[train.Country_Region==row['Country'],[\"Longitude\"]] = row['Longitude']\n  train.loc[train.Country_Region==row['Country'],[\"Latitude\"]] = row['Latitude'] \n\ntrain.Date = train.Date.apply(pd.to_datetime)\n\ntrain.info()","8c0396ad":"train.Date.min(),train.Date.max()","b185b498":"import folium\ngroupByConfirmed = train.groupby([\"Country_Region\"])[\"Fatalities\",\"ConfirmedCases\"].sum()\ngroupByConfirmed = groupByConfirmed.reset_index()\ngrouped = groupByConfirmed.sort_values(\"ConfirmedCases\",ascending=False).copy()\ngrouped.head(30)","677cb8cf":"\ngrpConfirmedCases = train.groupby(['Date', 'Country_Region'])['ConfirmedCases'].max()\ngrpConfirmedCases = grpConfirmedCases.reset_index()\ngrpConfirmedCases.Date = grpConfirmedCases.Date.dt.strftime('%m\/%d\/%Y')\ngrpConfirmedCases.Country  =  grpConfirmedCases.Country_Region\nfig = px.choropleth(grpConfirmedCases,\n                    locations=\"Country_Region\",\n                    locationmode='country names',\n                    color=\"ConfirmedCases\",\n                    hover_name=\"Country_Region\",\n                    hover_data = [grpConfirmedCases.ConfirmedCases],\n                    projection=\"mercator\",\n                    animation_frame=\"Date\",\n                    width=1000, \n                    height=700,\n                    color_continuous_scale='Reds')\n\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)","2d9f7583":"lat_lon = train[train.Country_Region=='Brazil'][[\"Latitude\",\"Longitude\"]].values[0]\nmap = folium.Map(location=lat_lon, tiles=\"Stamen Toner\", zoom_start=3)\n\nfor index, row in grouped.iterrows():\n  lat_lont = train[train.Country_Region==row.Country_Region][[\"Latitude\",\"Longitude\"]].values[0]\n  folium.CircleMarker(lat_lont,\n                      radius= (int((np.log(row.Fatalities+1.00001))))*1,\n                      popup = ('<strong>Mortes<\/strong>: ' + str(row.Fatalities) + '<br><strong>Confirmado<\/strong>: ' + str(row.ConfirmedCases-row.Fatalities)),\n                      color='#1a1a1a',\n                      fill_color='#660000',\n                      fill_opacity=0.9 ).add_to(map)\n  folium.CircleMarker(lat_lont,\n                      radius= (int((np.log((row.ConfirmedCases-row.Fatalities)+1.00001))))*1,\n                      popup = ('<strong>Mortes<\/strong>: ' + str(row.Fatalities) + '<br><strong>Confirmado<\/strong>: ' + str(row.ConfirmedCases-row.Fatalities) + '<br>'),\n                      color='#1a1a1a',\n                      fill_color='#b38f00',\n                      fill_opacity=0.1 ).add_to(map)\nmap","7f2eec77":"confirmedCases = train.groupby(['Date']).agg({'ConfirmedCases':['sum']})\nfatalities =train.groupby(['Date']).agg({'Fatalities':['sum']})\n#total = confirmedCases.join(fatalities)\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(17,4))\nconfirmedCases.plot(ax=ax1)\nax1.set_title(\"Global: Casos confirmados\", size=13)\nax1.set_ylabel(\"N\u00famero de casos\", size=13)\nax1.set_xlabel(\"Periodo\", size=13)\nfatalities.plot(ax=ax2, color='red')\nax2.set_title(\"Global: Mortos\", size=13)\nax2.set_ylabel(\"N\u00famero de casos\", size=13)\nax2.set_xlabel(\"Periodo\", size=13)","40ad65c1":"top30 =  grouped[:30].copy()\ncount = 0\nfor index, row in top30.iterrows():\n    country_Region =row.Country_Region\n    confirmed = train[train.Country_Region==country_Region].groupby(['Date']).agg({'ConfirmedCases':['sum']})\n    fatal = train[train.Country_Region==country_Region].groupby(['Date']).agg({'Fatalities':['sum']})\n    total_date  = confirmed.join(fatal)\n    plt.figure(figsize=(17,10))\n    plt.subplot(2, 2,1)\n    total_date.plot(ax=plt.gca(), title= country_Region)\n    plt.ylabel(\"Casos\", size=13)\nplt.show()  \n  ","a3b9dc25":"corr = train.corr()\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(corr,  annot=True, fmt=\".3f\")\nplt.xticks(range(len(corr.columns)), corr.columns);\nplt.yticks(range(len(corr.columns)), corr.columns)\nplt.show()","e44cbf3a":"## Countries\/Pa\u00edses","56f9f886":"Mapa com uma vis\u00e3o macro.","0dba841d":"## Mapa de calor\nEsta \u00e9 basicamente uma an\u00e1lise estat\u00edstica de cada dado em rela\u00e7\u00e3o um ao outro para encontrar a depend\u00eancia intar e a import\u00e2ncia dos dados\n","0f4c7621":"Casos confirmados ao longo do tempo.","079ea764":"### COVID19 Week 4 - Previs\u00e3o da dissemina\u00e7\u00e3o di\u00e1ria do COVID-19 em regi\u00f5es do mundo\n**DESAFIO:** Envolve prever casos confirmados e fatalidades entre *15 de abril *e *14 de maio* por regi\u00e3o, o objetivo principal n\u00e3o \u00e9 apenas produzir previs\u00f5es precisas. \n\u00c9 tamb\u00e9m para identificar fatores que parecem impactar a taxa de transmiss\u00e3o do [COVID-19](https:\/\/www.kaggle.com\/c\/covid19-global-forecasting-week-4\/overview\/description).","c22fe90a":"## TOP 30 Casos Confirmados vs Mortos \/ Por Pa\u00eds"}}