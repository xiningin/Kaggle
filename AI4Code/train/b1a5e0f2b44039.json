{"cell_type":{"39a1b37d":"code","dde0738d":"code","89d741c4":"code","407b5bdf":"code","c724fcd0":"code","d2a89da0":"code","e66af21d":"code","41a6b9cb":"code","7d268a9a":"code","5e4d7f00":"code","79cd4ace":"code","5febad19":"code","968aee06":"code","ef1a2c36":"code","a60d3560":"code","dd0e3b9e":"code","baf9b894":"code","791f4a75":"code","ec07ccda":"code","6426077d":"code","e8f92843":"code","9c17f24a":"code","c96e9fbd":"code","a47775b6":"code","b86abe5c":"code","ae69e333":"code","f6b76926":"code","79b4a05e":"code","97e78520":"markdown","75af46a1":"markdown","d072fbe0":"markdown","337fbf7c":"markdown","69772552":"markdown","afcdc247":"markdown","0578479c":"markdown","831bab6d":"markdown","c20e27e7":"markdown","cf6bb42f":"markdown","b2e432c5":"markdown","3f17751c":"markdown","2002e4cb":"markdown","f01f2655":"markdown","66394872":"markdown","ad7d074a":"markdown","4f2d843e":"markdown","05f269e9":"markdown","82b17297":"markdown","dcc0642f":"markdown"},"source":{"39a1b37d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualsion\nimport seaborn as sns # data visualsion\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dde0738d":"#Impot the dataset\ndf = pd.read_csv('..\/input\/Mall_Customers.csv')","89d741c4":"#Lets a quick look of our dataset\ndf.info()","407b5bdf":"#Lets check the statistical inference of the dataset\ndf.describe()","c724fcd0":"#Lets check if any missing value in our dataset\ndf.isnull().sum()","d2a89da0":"#Count Plot of Gender\nplt.figure(1 , figsize = (10 , 5))\nsns.countplot(x = 'Gender' , data = df)\nplt.show()","e66af21d":"#Lets look the distribution of the Annual Income\nsns.set(style = 'whitegrid')\nsns.distplot(df['Annual Income (k$)'], color = 'blue')\nplt.title('Distribution of Annual Income', fontsize = 20)\nplt.xlabel('Range of Annual Income')\nplt.ylabel('Count')","41a6b9cb":"#Now look the distribution of Age\nsns.set(style = 'whitegrid')\nsns.distplot(df['Age'], color = 'red')\nplt.title('Distribution of Age', fontsize = 20)\nplt.xlabel('Range of Age')\nplt.ylabel('Count')\nplt.show()","7d268a9a":"#Now look the distribution of Spending Score\nsns.set(style = 'whitegrid')\nsns.distplot(df['Spending Score (1-100)'], color = 'green')\nplt.title('Spending Score (1-100)', fontsize = 20)\nplt.xlabel('Range of Spending Score (1-100)')\nplt.ylabel('Count')\nplt.show()","5e4d7f00":"#Now look the correlation by ploting heatmap\ncorr = df.corr()\ncolormap = sns.diverging_palette(220, 10, as_cmap = True)\nplt.figure(figsize = (8,6))\nsns.heatmap(corr,\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values,\n            annot=True,fmt='.2f',linewidths=0.30,\n            cmap = colormap, linecolor='white')\nplt.title('Correlation of df Features', y = 1.05, size=10)","79cd4ace":"#now look the pariplot of the dataset\nsns.pairplot(df)\nplt.title('Pairplot for the Data', fontsize = 20)\nplt.show()","5febad19":"#Lets look the Age vs Annual Income\nplt.scatter(x = 'Age' , y = 'Annual Income (k$)' , data = df) \nplt.xlabel('Age')\nplt.ylabel('Annual Income (k$)')\nplt.title('Age vs Annual Income w.r.t Gender')\nplt.legend()\nplt.show()\n","968aee06":"#Now look Age Vs Spending Score\nplt.scatter(x = 'Age' , y = 'Spending Score (1-100)' , data = df) \nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.title('Age vs Spending Score (1-100)')\nplt.legend()\nplt.show()","ef1a2c36":"#Lets look the Annual Income vs Spending Score\nplt.scatter(x = 'Annual Income (k$)' , y = 'Spending Score (1-100)' , data = df) \nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.title('Age vs Annual Income w.r.t Gender')\nplt.legend()\nplt.show()","a60d3560":"#Lets take our matrice of features for ml model\nx = df.iloc[:, [3, 4]].values","dd0e3b9e":"#Using the Elbow Method to find Optimal Number of Cluster\nfrom sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    Kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    Kmeans.fit(x)\n    wcss.append(Kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of Cluster')\nplt.ylabel('WCSS')\nplt.show() ","baf9b894":"#Appling K-Means to the Mall Dataset\nKmeans = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init =10, random_state = 0)\ny_Kmeans = Kmeans.fit_predict(x)  ","791f4a75":"#Visualsing the Cluster\nplt.scatter(x[y_Kmeans == 0, 0], x[y_Kmeans == 0, 1], s = 50, c = 'red', label = 'Careful Customers group')\nplt.scatter(x[y_Kmeans == 1, 0], x[y_Kmeans == 1, 1], s = 50, c = 'blue', label = 'Standard Customers group')\nplt.scatter(x[y_Kmeans == 2, 0], x[y_Kmeans == 2, 1], s = 50, c = 'green', label = 'Target Customers group')\nplt.scatter(x[y_Kmeans == 3, 0], x[y_Kmeans == 3, 1], s = 50, c = 'cyan', label = 'Careless Customers group')\nplt.scatter(x[y_Kmeans == 4, 0], x[y_Kmeans == 4, 1], s = 50, c = 'magenta', label = 'Sensible Customers group')\nplt.scatter(Kmeans.cluster_centers_[:, 0], Kmeans.cluster_centers_[:, 1], s = 100, c = 'Yellow', label = 'Centroid')\nplt.title('Cluster of the Clients')\nplt.xlabel('Annual Income(K$)')\nplt.ylabel('Spending Scores(1-100)')\nplt.legend()\nplt.show()\n\n","ec07ccda":"#Using the Dendrogram to find optimal number of cluster\nimport scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(x, method = 'ward'))\nplt.title('Dendogram')\nplt.xlabel('Customers')\nplt.ylabel('Euclidean Distance')\nplt.show()\n","6426077d":"#Fitting Hierarchical Clustering to the Dataset\nfrom sklearn.cluster import AgglomerativeClustering\nhc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')\ny_hc = hc.fit_predict(x)","e8f92843":"#Visualising the Cluster\nplt.scatter(x[y_hc == 0, 0], x[y_hc == 0, 1], s = 50, c = 'red', label = 'Careful Customers group')\nplt.scatter(x[y_hc == 1, 0], x[y_hc == 1, 1], s = 50, c = 'blue', label = 'Standard Customers group')\nplt.scatter(x[y_hc == 2, 0], x[y_hc == 2, 1], s = 50, c = 'green', label = 'Target Customers group')\nplt.scatter(x[y_hc == 3, 0], x[y_hc == 3, 1], s = 50, c = 'cyan', label = 'Careless Customers group')\nplt.scatter(x[y_hc == 4, 0], x[y_hc == 4, 1], s = 50, c = 'magenta', label = 'Sensible Customers group')\nplt.title('Cluster of Customers')\nplt.xlabel('Ananul Income(k$)')\nplt.ylabel('Spending Score(1-100)')\nplt.legend()\nplt.show()","9c17f24a":"#Lets take our matrices of features\nX = df.iloc[:, [2,4]].values ","c96e9fbd":"#Using the Elbow Method to find Optimal Number of Cluster\nfrom sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    Kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    Kmeans.fit(X)\n    wcss.append(Kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of Cluster')\nplt.ylabel('WCSS')\nplt.show() ","a47775b6":"#Appling K-Means to the Mall Dataset\nKmeans = KMeans(n_clusters = 4, init = 'k-means++', max_iter = 300, n_init =10, random_state = 0)\ny_Kmeans = Kmeans.fit_predict(X)  ","b86abe5c":"#Visualsing the Cluster\nplt.scatter(X[y_Kmeans == 0, 0], X[y_Kmeans == 0, 1], s = 100, c = 'red', label = 'Customers should be paid more attention')\nplt.scatter(X[y_Kmeans == 1, 0], X[y_Kmeans == 1, 1], s = 100, c = 'blue', label = 'Premium Customers group')\nplt.scatter(X[y_Kmeans == 2, 0], X[y_Kmeans == 2, 1], s = 100, c = 'green', label = 'Customers have Potential ')\nplt.scatter(X[y_Kmeans == 3, 0], X[y_Kmeans == 3, 1], s = 100, c = 'cyan', label = 'Customers should be treated carefully')\nplt.scatter(Kmeans.cluster_centers_[:, 0], Kmeans.cluster_centers_[:, 1], s = 100, c = 'Yellow', label = 'Centroid')\nplt.title('Cluster of the Clients')\nplt.xlabel('Age')\nplt.ylabel('Spending Scores(1-100)')\nplt.legend()\nplt.show()","ae69e333":"#Using the Dendrogram to find optimal number of cluster\nimport scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(X, method = 'ward'))\nplt.title('Dendogram')\nplt.xlabel('Customers')\nplt.ylabel('Euclidean Distance')\nplt.show()","f6b76926":"#Fitting Hierarchical Clustering to the Dataset\nfrom sklearn.cluster import AgglomerativeClustering\nhc = AgglomerativeClustering(n_clusters = 4, affinity = 'euclidean', linkage = 'ward')\ny_hc = hc.fit_predict(X)","79b4a05e":"#Visualising the Cluster\nplt.scatter(X[y_hc == 0, 0], X[y_hc == 0, 1], s = 100, c = 'red', label = 'Customers should be treated carefully')\nplt.scatter(X[y_hc == 1, 0], X[y_hc == 1, 1], s = 100, c = 'blue', label = 'Customers have Potential')\nplt.scatter(X[y_hc == 2, 0], X[y_hc == 2, 1], s = 100, c = 'green', label = 'Customers should be paid more attention')\nplt.scatter(X[y_hc == 3, 0], X[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Premium Customers group')\nplt.title('Cluster of Customers')\nplt.xlabel('Age')\nplt.ylabel('Spending Score(1-100)')\nplt.legend(loc='upper right')\nplt.show()","97e78520":"Now we apply the same thing between Age and Spending Score","75af46a1":"At first we build K-means clustering model","d072fbe0":"From above graph we can see our optimal number of cluster is 4","337fbf7c":"From above graph we can conclued that customers have age around 30-40 have more speding score than others.\nSo they are most valueable customer of the Mall.","69772552":"We use both k-means and Hierarchical Clustering fro this problem.","afcdc247":"We notice that most of regular customers have age around 30-40 i.e middle age. On the other hand elder and youngstres are not regular customers.\n","0578479c":"From above graph we also get the same result","831bab6d":"Now we build our mechine learning model and lets check our predicting is correct or not.\n","c20e27e7":"From above graph we note middle age customers are most valuable for Mall, which is also previously preidcted.","cf6bb42f":"From above graph we can see our optimal number of cluser is 4.","b2e432c5":"We first apply cluster solution between Annual income and Speding score","3f17751c":"From Dendogram we can see our optimal number cluster is 5","2002e4cb":"From above graph we note that our optimal number of culster is 5","f01f2655":"From above graph we can conclude that customers have 75k-100k have more spending score than others.\nAnd also we can say that they are most valueable customer of mall without any mechine learning model.","66394872":"Form above graph we can see our previous prediction is also right. Mall has customers whoes income around 75k-100k they are most valueable customer.","ad7d074a":"Now we apply Hierarchical Clustering to the dataset","4f2d843e":"Clearly we see the features are not well correlated with each other","05f269e9":"From above graph we get diffierent segments of age group of customers. From this graph we can see most valuable age group of customers of Mall.","82b17297":"We note that most of Mall Customers have Annual Income around 50k-75k doller.","dcc0642f":"Now we apply Hierarchical Clustering to the dataset"}}