{"cell_type":{"62f4ef74":"code","abc7597a":"code","10066800":"code","b94f7be7":"code","4b53dd27":"code","f735198f":"code","ccd02786":"code","e5a2b591":"code","e71d86a5":"code","cc7929bc":"code","6f6fe520":"code","2b79f168":"code","fb6651d8":"code","57d777fc":"code","a44e71e8":"code","0676a629":"code","9b547a1c":"code","07767a02":"code","1b4bed89":"code","22c009db":"code","157b4478":"code","9795e24a":"code","0e56a2e7":"code","c834a51d":"code","b51be19d":"code","627d1cc0":"code","53cf380b":"code","3a99c7f8":"code","d015862c":"code","75cc37e9":"code","c088ab14":"markdown","2e002872":"markdown","2046b615":"markdown","252e5401":"markdown","93e61b1a":"markdown","b269c0d7":"markdown","427f307e":"markdown","11fcc768":"markdown","a97fe5a0":"markdown","2b613bcc":"markdown","8c13125c":"markdown","9fbeec9f":"markdown","c7f9a86b":"markdown","41823bd2":"markdown","3b277ced":"markdown","03feac9a":"markdown","096751d8":"markdown","852ebd89":"markdown","a71fb423":"markdown","349736e6":"markdown","c33d76bb":"markdown","645489bd":"markdown","02a48cdf":"markdown","2b7867d7":"markdown","784a4cd0":"markdown","4205f30b":"markdown","7da6d935":"markdown","67c00416":"markdown"},"source":{"62f4ef74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","abc7597a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom matplotlib.pyplot import figure\nimport statistics","10066800":"injuryrec = pd.read_csv('\/kaggle\/input\/nfl-playing-surface-analytics\/InjuryRecord.csv')\ninjuryrec.head()","b94f7be7":"plt.figure(figsize=(8,8))\ninjuries = sns.countplot(x = 'BodyPart', data = injuryrec)\nplt.title('Injured Body Parts')\nplt.show()","4b53dd27":"# plot of FieldTyp per Indoor & Outdoor Game \nplt.figure(figsize=(15,5))\nsns.countplot(x = 'BodyPart', data = injuryrec, hue = 'Surface')\nplt.title('Injured Body Parts by Surfaces')\nplt.xlabel('Injured Body Parts')\nplt.ylabel('Number of Injuries')\nplt.show()","f735198f":"l = [injuryrec['DM_M1'].count()]  # list of the player unjured per time point\nl.append(injuryrec['DM_M7'].value_counts()[1])\nl.append(injuryrec['DM_M28'].value_counts()[1])\nl.append(injuryrec['DM_M42'].value_counts()[1])\n\n\nl2 = []\nfor i in range(0, len(l)-1):\n        l2.append(l[i] - l[i+1])\nl2.append(injuryrec['DM_M42'].value_counts()[1])\n#-----------------------------------------------------for the graphic -----------------------------------------------------\nl3 = ['1 day', '7 days', '28 days', '42 days'] # label\nplt.figure(figsize=(10,5))\nplt.title('How many players are unable to play for how long?') #title\nplt.ylabel('Numbers of players')\nplt.bar(l3, l2)\nplt.show()","ccd02786":"playlist = pd.read_csv('\/kaggle\/input\/nfl-playing-surface-analytics\/PlayList.csv')\nplaylist.head()","e5a2b591":"plt.figure(figsize=(18,5))\nsns.countplot(x = 'Temperature', data = playlist)\nplt.xlabel('Temperature in \u00b0F')\nplt.ylabel('Number of Games')\nplt.show()","e71d86a5":"#stadium = playlist.groupby('StadiumType').count()\nplt.figure(figsize=(10,10))\nsns.countplot(y = 'StadiumType', data = playlist) # the plot is better visible when turned! \nplt.xlabel('Number of Games')\nplt.ylabel('Types of Stadium')\nplt.show()","cc7929bc":"# cleaning the StadiumType column:\nd = {'Oudoor': 'Outdoor', 'Outdoors': 'Outdoor', 'Ourdoor': 'Outdoor', 'Outdor': 'Outdoor', 'Outside': 'Outdoor', 'Indoors' : 'Indoor', 'Outddors' : 'Outdoor', \\\n     'Domed, closed': 'Closed Dome', 'Domed': 'Dome', 'Domed, Open':'Open Dome', 'Dome, closed' : 'Closed Dome', 'Retr. Roof-Closed' : 'Retr. Roof Closed',\\\n     'Retr. Roof - Closed': 'Retr. Roof Closed', 'Outdoor Retr Roof-Open': 'Retr. Roof-Open', 'Indoor, Open Roof' : 'Retr. Roof-Open', 'Indoor, Roof Closed': 'Retr. Roof Closed',\\\n     'Retr. Roof - Open': 'Retr. Roof-Open','Heinz Field' : 'Outdoor'}\nplaylist_mod = playlist.replace(d)\n\nplaylist_mod['StadiumType'].unique() #checking for unique categories","6f6fe520":"plt.figure(figsize=(10,10))\nsns.countplot(y = 'StadiumType', data = playlist_mod) # the plot is better visible when turned! \nplt.xlabel('Number of Games')\nplt.ylabel('Types of Stadium')\nplt.show()","2b79f168":"d2 = {'Open' : 'Outdoor', 'Closed Dome' : 'Indoor', 'Dome' : 'Indoor', 'Retr. Roof Closed' : 'Indoor', 'Retr. Roof-Open' : 'Outdoor', 'Retractable Roof' : 'Indoor', 'Open Dome' : 'Outdoor', 'Domed, open' : 'Outdoor' }\nplaylist_mod2 = playlist_mod.replace(d2)","fb6651d8":"# drop lines with a certain content from a column\nindexNames = playlist_mod2[playlist_mod2['StadiumType'] == 'Bowl'].index\nplaylist_mod2.drop(indexNames, inplace = True)\nindexNames = playlist_mod2[playlist_mod2['StadiumType'] == 'Cloudy'].index\nplaylist_mod2.drop(indexNames, inplace = True)\nplaylist_mod2['StadiumType'].unique()","57d777fc":"plt.figure(figsize=(8,8))\nsns.countplot(x = 'StadiumType', data = playlist_mod2) # the plot is better visible when turned! \nplt.ylabel('Number of Games')\nplt.xlabel('Types of Stadium')\nplt.show()","a44e71e8":"# plot of FieldTyp per Indoor & Outdoor Game \nplt.figure(figsize=(20,8))\nsns.countplot(x = 'StadiumType', data = playlist_mod2, hue = 'FieldType')\nplt.title('Distribution of Synthetic and Natural turf in games played indoor or outdoor')\nplt.xlabel('Field types')\nplt.ylabel('Number of Games')\nplt.show()","0676a629":"plt.figure(figsize=(15,15))\nsns.countplot(y = 'Weather', data = playlist) # the plot is better visible when turned! \nplt.title('Recorded weather categories ')\nplt.xlabel('Number of Games')\nplt.ylabel('Weather conditions')\nplt.show()","9b547a1c":"plt.figure(figsize=(20,5))\nsns.countplot(x = 'RosterPosition', data = playlist) # the plot is better visible when turned! \nplt.title('Player Positions')\nplt.xlabel('Positions')\nplt.ylabel('Number of records')\nplt.show()","07767a02":"injuryrec.head()","1b4bed89":"playlist_mod.head()","22c009db":"inplay = pd.merge(injuryrec, playlist_mod, on = 'PlayKey')\n","157b4478":"inplay.info()","9795e24a":"inplay.tail()","0e56a2e7":"plt.figure(figsize=(15,5))\nsns.countplot(x = 'PlayType', data = inplay, hue = 'BodyPart') \nplt.title('Injuries per Play Type')\nplt.xlabel('Play Type')\nplt.ylabel('Number of injuries')\nplt.show()","c834a51d":"plt.figure(figsize=(15,5))\nsns.countplot(x = 'PositionGroup', data = inplay, hue = 'BodyPart') \nplt.title('Injuries per Position Group')\nplt.xlabel('Position')\nplt.ylabel('Number of injuries')\nplt.show()","b51be19d":"plt.figure(figsize=(15,8))\nsns.countplot(x = 'Position', data = inplay, hue = 'BodyPart') \nplt.title('Injuries per Position Group')\nplt.xlabel('Position')\nplt.ylabel('Number of injuries')\nplt.show()","627d1cc0":"plt.figure(figsize=(15,5))\nsns.countplot(x = 'PositionGroup', data = inplay, hue = 'Surface') \nplt.title('Injuries per Position Group')\nplt.xlabel('Position Group')\nplt.ylabel('Number of injuries')\nplt.figure(figsize=(15,5))\nsns.countplot(x = 'Position', data = inplay, hue = 'Surface') \nplt.title('Injuries per Position')\nplt.xlabel('Position')\nplt.ylabel('Number of injuries')\nplt.show()","53cf380b":"plt.figure(figsize=(15,6))\nsns.countplot(x = 'BodyPart', data = inplay, hue = 'Weather') \nplt.title('Injuried Body Part')\nplt.xlabel('Body Part')\nplt.ylabel('Number of injuries')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.) # putting the legend outside of the figure\nplt.figure(figsize=(15,10))\nsns.countplot(x = 'BodyPart', data = inplay, hue = 'Temperature') \nplt.title('Injuried Body Part by Temperature')\nplt.xlabel('Body Part')\nplt.ylabel('Number of injuries')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.) # putting the legend outside of the figure\nplt.figure(figsize=(15,10))\nsns.countplot(x = 'Surface', data = inplay, hue = 'Temperature') \nplt.title('Surface by Temperature')\nplt.xlabel('Surface')\nplt.ylabel('Number of injuries')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.) # putting the legend outside of the figure\nplt.show()","3a99c7f8":"player = pd.read_csv('\/kaggle\/input\/nfl-playing-surface-analytics\/PlayerTrackData.csv')\nplayer.head()","d015862c":"total = pd.merge(inplay, player, on = 'PlayKey')\ntotal.head()","75cc37e9":"fig = px.scatter_matrix(total,\n    dimensions=['Surface', 's'],\n    color=\"BodyPart\")\nfig.show()","c088ab14":"# My imported packages","2e002872":"When we look at the content of the 'StadiumType' column we see that there are a lot of redundant categories.\nSome with spelling mistakes (Ourdoor) or variances of the same category ( Outdoor & Outdoors)\nThis has to be cleaned.\nThere are some strange categories like: Dome, Domed, Retractable Roof, Bowl and Cloudy which don't give much insight into the StadiumType or the status of Indoor or Outdoor.","2046b615":"Injuries occur on synthetic surface throughout the whole recorded temperature range. But mostly around 65\u00b0F. On natural turf however there are more injuries at higher temperatures. The Knee injuries occur mostly at temperatures of 65\u00b0F and higher and during cloudy, sunny or partially sunny weather, whereas ankle injuries are occuring during all kind of temperatures but as well during cloudy, sunny or partially sunny weather. ","252e5401":"**The most injuries occur in Knees and Ankles. Heel injuries have the least part in the over all injuries**\n\nHow are the injuries distributed when we look at the Surface?","93e61b1a":"There is a large amount of ,,nonsese\" values, saying there were -999\u00b0F (-572\u00b0C) in the stadium.\n- Not sure how to proceed with this values. \n    - change them to zero is not possible because in history there were games where the temperature was below 0\u00b0F!\n    - dropping them would mean huge data loss!\n        \n- a reasonable value would be -9\u00b0F but can't be sure that this is the true value and therefore would corrupt the data\n\n**I left this problem up to now because I could not find a good solution**","b269c0d7":"I simplified the categories of the StadiumType Column by exchanging the Data","427f307e":"**There are in general more games played outdoor than indoor**","11fcc768":"* same which holds true for the 'Weather' Category\n    * spelling mistakes, redundant categories (Clear and Sunny & Clear and sunny)\n    * the same ,,cleaning of categories\" should be done, but could lead do corruption of the data.\n    \n** during most of the games the weather was cloudy **\n\n\nLet's have a look at the players positions:","a97fe5a0":"The most knee injuries occur during Pass plays and the most Ankle injuries during Passes & Rushes. But in general Knee and Ankle injuries are occuring throughout all the plays exept for 'Punt Not Returned'. Plays with high amount of movement like passes and rushes seem to cause more injuries than static plays as 'Punt Not Returned'.","2b613bcc":"# Note regarding this analysis:\n\n**Welcome to my Notebook!**\n**I'm just getting started in Data Analysis & working with Dataframes. Therefore my target is not to make a full analysis, but getting comfortable with Dataframes & data visualisation**\n\n**I'm thankful for any helpful comments and input, so that I can improve my skill.**","8c13125c":"And I droped ,,Bowl\" & \"Cloudy\" from the StadiumType column","9fbeec9f":"loading the dataset","c7f9a86b":"There is no difference in the number of knee injuries on different surfaces. \nThere are more ankle and toe injuries when played on synthetic surface.\nGeneral food injuries seem to occur more often on natural turf.\n\nHow long are players ,,out of the game\" with those injuries?","41823bd2":"**-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n**\n# 3rd Dataset (player)","3b277ced":"The weather and the surface together could have an impact on the injuries. For example could rain make the natural surface more slippery which could lead to more injuries.","03feac9a":"I cleaned the category as careful as possible. \nIn my opinion the two categories 'Bowl' & 'Cloudy' could be droped when there is a focus on StadiumType and FieldType because they do not contribute to the analysis here.\n\nIn the following I combined all the StadiumTypes to two categories: ,,Indoor\" & \"Outdoor\":","096751d8":"# Merging Dataframes","852ebd89":"# How is generally the weather during the recorded games?","a71fb423":"# Inspection of 1st Dataset (InjuryRecord)","349736e6":"** Outdoor games are played more on natural turf that synthetic one. Indoor games however are played on a synthetic field**","c33d76bb":"In general D-line & O-line show the majority of injuries on a natural surface (upper plot). \nTight ends however injur themself equally no matter what the surface is. :D \nFor OLB the most injuries occur on natural turf whereas for ther wide recievers most of the injuies occur on a synthetic surface. For corner backs (CB) the majority of injuries occur on synthetic surfaces.\n\nWhen we look under which weather conditions this injuries occur:  \n\n**NOTE: I did not clear redundant categories of the weather column!**","645489bd":"Visualisation of the injured Body Parts","02a48cdf":"* It's clear that the 'StadiumType' category has to be cleaned thoroughly\n* there are redundant categories and misspelling.... (Outddors, Oudoor) which have to be corrected & combined\n* what does ,,Open\" mean? (Open Dome maybe?)\n\n**most of the games were played outdoor**","2b7867d7":"**After merging the Dataframes we can look more deeply into the conections of Injuries and the other categories**","784a4cd0":"**----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**\n# 2nd Dataset (PlayList)","4205f30b":"# In what kind of Stadiums did the games take place?","7da6d935":"Linebackers, defensive backs, wide reciever and running backs have high values of knee and ankle injuries. In general the offensive line shows more ankle injuries and the defensive line more Knee injuries.\n\nBut we can see that quaterbacks are not mentioned in this plot. So they seem to have few injuries of the lower body region.\n\nWe can go more into detail of the injuries of the different players position:","67c00416":"Outside Linebackers (OLB) are part of the defense line and as already seen in the previous plot they show twice as much knee injuries than ankle injuries. This might be due to their static position in defending pass play or running play. Same can be seen for an other position of the defensive line like Inside linebackers (ILB).\n\nWide recievers are running down the field as part of the offensive team and show knee injuries as well as ankle injuries in nearly the same amounts. They are fast sprinters so who accalerate fastly and stopp abruptly. \n\nIn general OLB & WR ,,get hurt\" according to this data. "}}