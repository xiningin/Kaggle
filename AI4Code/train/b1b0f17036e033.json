{"cell_type":{"bee462da":"code","ebfcd081":"code","2a142069":"code","a16f8e0d":"code","835f4ad3":"code","e5b1b1c5":"code","f042e1e8":"code","6df94bba":"code","1054b5d8":"code","96d34bee":"code","f105efcc":"code","5b158773":"code","1a4ffca8":"code","9ce38264":"code","622a7e58":"code","92f28c46":"code","fa60d0c1":"code","8e133ad0":"code","c9dbb854":"code","cdad4be8":"code","002d4719":"code","b0e32e7f":"code","dc40dac0":"code","be5e7a3f":"code","be470717":"code","12354e99":"code","30c1ba3b":"code","5f6a6984":"code","1c2329ef":"code","b232dab5":"code","0eb7dc7c":"code","59abd434":"code","6ca5a769":"code","ae6d53f8":"code","00acedfc":"code","b7b6fcd7":"code","8ce1fb01":"code","a685263c":"code","787944b7":"code","6d0b54c8":"code","757fe060":"code","b576ee33":"code","ec110aa1":"code","a11e0b8d":"code","d732434a":"code","7d642b20":"code","f551feda":"markdown","a2c215c3":"markdown","bd76bb33":"markdown","93d840bb":"markdown","963630c8":"markdown","76396a6a":"markdown","ce69b3d1":"markdown","1386c2f3":"markdown","ff3eb571":"markdown","da26bfe5":"markdown","de5ef98e":"markdown","d83114fb":"markdown","0cbe27cc":"markdown","bb86dd4d":"markdown","80820795":"markdown","cdbb8558":"markdown","47bd30e0":"markdown","c7115b2a":"markdown","2444e936":"markdown","1607415c":"markdown","f26a10e3":"markdown"},"source":{"bee462da":"#import basic libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nsns.set_theme(style=\"whitegrid\")\nfrom statsmodels.formula.api import ols","ebfcd081":"#import the files\n\ntop50 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Future50.csv')\nothers100 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Independence100.csv')\ntop250 = pd.read_csv('..\/input\/restaurant-business-rankings-2020\/Top250.csv')","2a142069":"top50.columns\ntop50.dtypes","a16f8e0d":"top50.Franchising.unique()","835f4ad3":"top50[\"YOY_Sales\"] = top50[\"YOY_Sales\"].apply(lambda x: x.replace('%', ''))\ntop50[\"YOY_Units\"] = top50[\"YOY_Units\"].apply(lambda x: x.replace('%', ''))\n\n#top50[\"YOY_Sales\"] = top50[\"YOY_Sales\"].astype('float')\/100\n#top50[\"YOY_Units\"] = top50[\"YOY_Units\"].astype('float')\/100\ntop50[\"YOY_Sales\"] = (pd.to_numeric(top50[\"YOY_Sales\"]))\/100\ntop50[\"YOY_Units\"] = (pd.to_numeric(top50[\"YOY_Units\"]))\/100\n\ntop50","e5b1b1c5":"top50[\"Franchising\"] = top50[\"Franchising\"].apply(lambda x: x.replace('Yes', '1'))\ntop50[\"Franchising\"] = top50[\"Franchising\"].apply(lambda x: x.replace('No', '0'))\n\ntop50[\"Franchising\"] = (pd.to_numeric(top50[\"Franchising\"]))","f042e1e8":"sns.set(font_scale=1.8)\nplt.figure(figsize=(20,10))\ndf_50=top50[['Sales','YOY_Sales','Units','YOY_Units','Unit_Volume','Franchising']]\nsns.heatmap(df_50.corr(),annot=True,cmap=\"viridis\")","6df94bba":"sns.pairplot(df_50,height=2, hue = \"Franchising\")\n# YES = 1 and NO = 0","1054b5d8":"sns.set(font_scale=1)\nfig = sns.PairGrid(df_50, hue = \"Franchising\")\n\nfig.map_lower(sns.kdeplot, cmap='YlOrBr')\nfig.map_upper(sns.scatterplot, color = 'green')\nfig.map_diag(sns.histplot, bins=10, color = 'red')\nfig.add_legend()\n\n# YES = 1 and NO = 0","96d34bee":"#plot data UNITS VS UNITS_VOLUME\n\nplt.figure(figsize=[15,10])\ng = sns.scatterplot(data=top50, x = \"Units\"  , y = \"Unit_Volume\",  alpha = 0.7, hue=\"Franchising\")\n#g. despine(left=True)\n#g.set_axis_labels(\"YOY Units in percents\", \" YOY Sales in percents\")\ndata, labels = plt.xticks()\nplt.setp(labels, rotation=90)\nplt.title(\"Units vs Unit_Volume\")\n","f105efcc":"#the graph shown can be modeled using a power function\n#modifying both x and y axis into a logarithmic scale\n\nlog_units = np.log(top50[['Units']])\nlog_unitvolume = np.log(top50[['Unit_Volume']])\nlog_unitvolume\n\nplt.figure(figsize=[15,10])\ng = sns.scatterplot(data=top50, x = np.log(top50['Units']) , y = np.log(top50['Unit_Volume']))\ng.set_title('Log Unit Volume vs Units')\ng.set_ylabel('Unit_Volume')\ng.set_xlabel('Unit')","5b158773":"#Let us use ordinary least squares :\n# first, let us transform the data frame into its log value\n# get only the unit and the unit volume\ndflog = np.log(top50[['Units', 'Unit_Volume']])\n#dflog\nmodel = ols('Units ~ Unit_Volume', data = dflog).fit()\nmodel.summary()","1a4ffca8":"#The intercept and time are significant\n#Let us now convert it into a model that will fit the data\n\n# log(Unit_Volume) = 11.2105 - 1.0976 * log (Units)\n# e^ (log(Unit_Volume)) = e^(11.2105-1.0976 * log (Units))\n# Unit_Volume = e^(11.2105) * Units^(-1.0976)\n# Unit_Volume = 73,902.356934992675941518885203091 * Units^(-1.0976)\n\n#Get the predicted data using the equation above\nUnitVolume_hat = 73902.356934992675941518885203091 * top50[['Units']]**(-1.0976)\n\n#plot the data :\n#change plotting parameters\nmatplotlib.rcParams.update({'font.size' : 18, 'font.family' : 'serif'})\n\nfig, me = plt.subplots(figsize = (10 , 6))\n\nme.scatter(top50[['Units']], top50[['Unit_Volume']], s = 50, color = 'red', label = 'Units')\n#me.plot(top50[['Units']], UnitVolume_hat, lw = 3, color = 'blue', label = 'UnitVolume_hat')\nme.plot(top50[['Units']], UnitVolume_hat, r'g*', markersize = 10, label = 'UnitVolume_hat')\nme.legend(loc = 1)\nme.grid(True)\nme.set_title('Actual Unit vs Predicted')\nme.set_ylabel('Unit')\nme.set_xlabel('Unit Volume')","9ce38264":"others100.columns","622a7e58":"others100.head()","92f28c46":"others100.City.unique()","fa60d0c1":"others_max_100_count = others100.groupby('City').count()\nothers_max_100_count = others_max_100_count.sort_values(by=['Sales'], ascending=False)\nothers_max_100_count.reset_index(inplace=True)\nothers_max_100_count = others_max_100_count.drop(columns=['Rank','Restaurant','State'])\nothers_max_100_count.head(15)\n","8e133ad0":"others_max_100_state = others100.groupby('State').max()\nothers_max_100_state = others_max_100_state.sort_values(by=['Sales'], ascending=False)\nothers_max_100_state.reset_index(inplace=True)\nothers_max_100_state = others_max_100_state.drop(columns=['Rank','Restaurant'])\n#others_max_100_state.head(10)\nothers_max_100_state","c9dbb854":"others_max_100_Sales = others100.groupby('City').max()\nothers_max_100_Sales = others_max_100_Sales.sort_values(by=['Sales'], ascending=False)\nothers_max_100_Sales.reset_index(inplace=True)\nothers_max_100_Sales = others_max_100_Sales.drop(columns=['Rank','Restaurant'])\nothers_max_100_Sales.head(10)","cdad4be8":"others_max_100_Meals = others100.groupby('City').max()\nothers_max_100_Meals = others_max_100_Meals.sort_values(by=['Meals Served'], ascending=False)\nothers_max_100_Meals.reset_index(inplace=True)\nothers_max_100_Meals = others_max_100_Meals.drop(columns=['Rank','Restaurant'])\nothers_max_100_Meals.head(10)","002d4719":"others_max_100_Check = others100.groupby('City').max()\nothers_max_100_Check = others_max_100_Check.sort_values(by=['Average Check'], ascending=False)\nothers_max_100_Check.reset_index(inplace=True)\nothers_max_100_Check = others_max_100_Check.drop(columns=['Rank','Restaurant'])\nothers_max_100_Check.head(10)","b0e32e7f":"others_100 = others100.drop(columns = ['Restaurant','City','State'])\nothers_100","dc40dac0":"df_100 = others_100[['Sales','Average Check','Meals Served']]","be5e7a3f":"sns.set(font_scale=1)\nplt.figure(figsize=(10,7))\nsns.heatmap(df_100.corr(),annot=True,cmap=\"rocket_r\")","be470717":"sns.set(font_scale=1)\nsns.pairplot(df_100,height=3)","12354e99":"x = 'New York'\nz = 'Frankenmuth'\ncitix = others100[others100['City'] == x]\ncitix","30c1ba3b":"y = len(others100[others100['City'] == x])\ns = len(others100[others100['City'] == z])\nprint('The amount of the restaurants in', x, 'are ', y)\nprint('The amount of the restaurants in', z, 'are ', s)","5f6a6984":"citix = citix.drop(columns = 'Rank')\nsns.set(font_scale=1)\nsns.pairplot(citix,height=3)","1c2329ef":"top250.columns","b232dab5":"top250.head()","0eb7dc7c":"top250.Headquarters.unique()","59abd434":"headquarter = top250.Headquarters.count()\ntotal_restaurant = top250.Restaurant.count()\nprint('Total amount of restaurant headquarter is',headquarter)\nprint('Total amount of restaurant is',total_restaurant)","6ca5a769":"top_250 = top250.drop(columns=['Rank','Restaurant','Content','Headquarters'])\ntop_250\n","ae6d53f8":"top_250['YOY_Sales'] = top_250['YOY_Sales'].apply(lambda x: x.replace('%', ''))\ntop_250['YOY_Units'] = top_250['YOY_Units'].apply(lambda x: x.replace('%', ''))\n\n#top250[\"YOY_Sales\"] = top250[\"YOY_Sales\"].astype('float')\/100\n#top250[\"YOY_Units\"] = top250[\"YOY_Units\"].astype('float')\/100\ntop_250[\"YOY_Sales\"] = (pd.to_numeric(top_250[\"YOY_Sales\"]))\/100\ntop_250[\"YOY_Units\"] = (pd.to_numeric(top_250[\"YOY_Units\"]))\/100\n\ntop_250","00acedfc":"import re\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\n\ncorpus = []\na = top250[\"Segment_Category\"]\nrmv = ['Quick', 'Service','&','Fast','Casual','Casual','Dining']\n\n\nfor i in a:\n       \n    b = i.split()\n    #ps = PorterStemmer()\n    all_stopwords = stopwords.words('english')\n    all_stopwords.extend(rmv)\n    \n    \n    b = [word for word in b if not word in all_stopwords]\n    \n    b = ' '.join(b)\n    corpus.append(b)   \n   \n    \ncorpus\n    ","b7b6fcd7":"top_250.insert(0,\"Category\",corpus)\n#del top_250[\"Sub Category\"]\ntop_250","8ce1fb01":"top_250[\"Category\"] = top_250[\"Category\"].apply(lambda x: x.replace('Family Family Style', 'Family'))\ntop_250[\"Category\"] = top_250[\"Category\"].apply(lambda x: x.replace('Family Style', 'Family'))\ntop_250","a685263c":"df = top_250.groupby('Category')['Sales'].count()\ndf = df.sort_values(ascending=False)\ndf.head(5)","787944b7":"df.tail(5)","6d0b54c8":"means = top_250.groupby('Category').mean().reset_index(drop=False)\ncounts = top_250.groupby('Category').count().reset_index(drop=False)","757fe060":"fig_dims = (20, 7)\nfig, ax = plt.subplots(figsize=fig_dims)\n\nsns.set_theme(style=\"whitegrid\")\nmeans.reset_index(inplace = True)\nplt.xticks(rotation=90)\nsns.barplot(x = \"Category\", y = \"Sales\" , data=counts, palette = \"YlOrBr\")\n","b576ee33":"The restaurant category which has the largest occurrence is Varied Menu. This things may be happen while most people usually get confused when choosing what menu they want to eat. Otherwise, different type of people has their own tastes. So, they will choose the one that suit their tastes. \n\nWhile the smallest amount of restaurant category are Healty, Fine Steak and Ethic. The reason may be :\n\n1. Not anyone like the plain salad, nor dietery food. It tastes plain\n2. Fine steak is too fancy for most people, or they were vegan, or might not suitable for certain people.\n3. Ethic food usually has a strong or plain tastes that might not suit their taste.","ec110aa1":"import plotly.express as px\n\n\n#shows The most common restaurant in top 250 restaurant ranking\n\ndatas = \"Units\"\nfig = px.pie(means, values=datas, names='Category',title= datas +' Averaging')\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.show()","a11e0b8d":"import plotly.express as px\n\n\n#shows The most common restaurant in top 250 restaurant ranking\n\ndatas = \"Sales\"\nfig = px.pie(means, values=datas, names='Category',title= datas +' Averaging')\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.show()","d732434a":"import plotly.express as px\n\n\n#shows The most common restaurant in top 250 restaurant ranking\ndatas = \"YOY_Units\"\nfig = px.pie(means, values=datas, names='Category',title= datas +' Averaging')\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.show()","7d642b20":"import plotly.express as px\n\n\n#shows The most common restaurant in top 250 restaurant ranking\n\ndatas = \"YOY_Sales\"\nfig = px.pie(means, values=datas , names='Category',title= datas +' Averaging')\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.show()","f551feda":"> # Analysis has shown below","a2c215c3":"> **Situation :**\n> \n> Restaurant business has been rapidly evolving in United States. How much restaurant business can evolve may be depend on which category they have choose. Restaurant business category consist of franchise type, food type, service type, or restaurant location. To determined the most economical category, three dataset is used to determined which categories shows the most profitable sales.\n> \n> \n> \n> **Problem : **\n\n> The first dataset (future50) depend on frachising and non-franchising category.\n> The second dataset (independence100) depend on restaurant location.\n> The third dataset (top250) depend on food and restaurant service type.\n> \n> To defined the most profitable categories should combined many categories. Although, we can approach it from the three dataset.\n> \n> \n> **Solution :**\n> Solution for each dataset represent in the end of dataset analysis\n> \n> \n> \n> **Summary : **\n> \n>  Franchising and non-franchising has been used by several restaurant(Future50). While several restaurant dominantly established and evolved in Big City (Independence 100). Therefore, restaurant categories based on the food and service type can be the most effected factors to defining restaurant type (top250).","bd76bb33":"# INDEPENDENCE 100 ANALYSIS","93d840bb":"New York is the first position of City which has the highest amount of restaurant business.","963630c8":"Frankenmuth is the first position of City which has the highest meals served. While New York is in the second position.","76396a6a":"The restaurant category which has the higher rank of YOY_Sales is Healthy, Beverages, and Ethnic","ce69b3d1":"# TOP 250 RESTAURANT ANALYSIS","1386c2f3":"> # Let's see if we grouped these restaurant based on **their location**","ff3eb571":"The good correlation between Unit volume and Units has been shown in Power Law correlation. This correlation can predict Unit Volume that can be produced by selling product in several Unit.","da26bfe5":"Otherwise, when we analyzed the Year of Yied (YOY) Sales\/Units, the mostly picked restaurant is Healty Food. Despite of its taste, people still refer the healthy food restaurant as the restaurant which makes their body healthy when they have no time to cook vegetables or slice fruits.\n\n\nThe restaurant category which has the higher rank of YOY_Units is Healthy, Beverages, and Ethnic","de5ef98e":"> Overall, The highest restaurant occurrence in independence 100 dataset are located in New York city, due to Sales and Average Check. Frankenmuth is the second highest Meals Served due to their facility included Inn. If hospitality such as Inn in Frankenmuth is not counted, New York will be the most location which food and beverage business thrive. Do not forget the high maintenance cost :) ","d83114fb":"The restaurant category which has the higher rank of Units is Coffee Cafe, Sandwich, and Burger ","0cbe27cc":"Total restaurants amount are 250, but the restaurant who had a headquarters are only 52. This parameter can not be analyzed. So, we dropped it down","bb86dd4d":"The restaurant category which has the higher rank of Sales is Coffee Cafe, Burger, and Chicken ","80820795":"> New York is the first position of City which has the highest sales.","cdbb8558":"YES = 1\nNO = 0","47bd30e0":"# FUTURE 50 ANALYSIS","c7115b2a":"New York is the first position of City which has the highest average check.","2444e936":"# Restaurant Business Analysis","1607415c":"There are two types of restaurant categories, consisting of franchising (1 = orange) and non-franchising (0 = blue). YOY units and YOY Sales has a good correlation, outliers were found in < 10 Restaurant. Franchising is one of important factor in Food and Beverage Industry. Although, first rank restaurant can be an exceptional, but overall, the franchising restaurant has a positive correlation with YOY Sales and YOY Sales do not have any good correlation. It looks erratic. The similiar things happened to Units and YOY Units which do not have any good correlation either. Otherwise, Units and Volume Units has a good correlation based on Power Law. Let's check it out!","f26a10e3":"> If we correlate each columns throughout the City, they have a poor correlation shown in heat map and pair plot. Let's try to seperate them."}}