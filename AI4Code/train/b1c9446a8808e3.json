{"cell_type":{"eabdad52":"code","d52ee3e2":"code","b51b2f37":"code","0890b2b0":"code","dcbae5be":"code","fcae87ad":"code","826bdfa1":"markdown","f645440d":"markdown"},"source":{"eabdad52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d52ee3e2":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain_data.head()","b51b2f37":"test_data=  pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_data.head()","0890b2b0":"# rate of women survived\nwomen = train_data[train_data[\"Sex\"]=='female'][\"Survived\"]\nrate_women  = (sum(women)\/len(women))*100\nprint(\"Survival rate of women is {0}%\".format(round(rate_women),1))","dcbae5be":"#survival rate of men\nmen = train_data[train_data[\"Sex\"]=='male'][\"Survived\"]\nrate_men  = (sum(men)\/len(men))*100\nprint(\"Survival rate of men is {0}%\".format(round(rate_men),2))","fcae87ad":"from sklearn.ensemble import RandomForestClassifier\ny = train_data[\"Survived\"]\nfeatures = [\"Pclass\",\"Sex\",\"SibSp\",\"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"MY SUBMISSION IS SAVED SUCESSFULLY\")","826bdfa1":"### Loading the dataset\n","f645440d":"### Loading the test dataset"}}