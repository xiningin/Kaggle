{"cell_type":{"9170d96b":"code","d5e7eb58":"code","890c5407":"code","902c4845":"code","5d9b7021":"code","1a6523a7":"code","a146d39c":"code","9e3ca7b0":"code","ec08e737":"code","06f84270":"code","bb6df50c":"code","0c26b165":"code","dfbd3caa":"markdown","1baaf234":"markdown"},"source":{"9170d96b":"import gc\nfrom tqdm import tqdm\n#from tqdm._tqdm import trange\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\n\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d5e7eb58":"data = pd.read_csv(\"https:\/\/covid19-osaka.info\/data\/summary.csv\", encoding=\"SHIFT-JIS\")\ndata[-1:]","890c5407":"data['date']=data['\u65e5\u4ed8']\ndata['examined positives']=data['\u967d\u6027\u4eba\u6570']\ndata['examined']=data['\u691c\u67fb\u4ef6\u6570']\ndata0=data[['date','examined positives']]\ndata0","902c4845":"data0['date']=pd.to_datetime(data0['date'])","5d9b7021":"item1=data0\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20, 5\nplt.plot(item1.ds, item1.y)","1a6523a7":"ph = Prophet()\nph.fit(item1)\nforecast1=ph.predict(item1)\nfigure = ph.plot(forecast1)\nfigure.show()","a146d39c":"from datetime import timedelta\nstart0 = dt.datetime.strptime('2021-01-01', '%Y-%m-%d').date()\nend0   = dt.datetime.strptime('2022-12-31', '%Y-%m-%d').date()\nprint((end0-start0).days)","9e3ca7b0":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","ec08e737":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0)","06f84270":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","bb6df50c":"ph = Prophet()\nph.fit(item1)\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","0c26b165":"forecast3[['ds','yhat','yhat_lower','yhat_upper']].tail()","dfbd3caa":"# fit past and predict past+future","1baaf234":"# fit past and predict past"}}