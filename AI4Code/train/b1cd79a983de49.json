{"cell_type":{"d8f81370":"code","8c978092":"code","8a380c33":"code","359ec355":"code","d23a04ac":"code","095fe8f9":"code","8072ed1a":"code","6b4f4bc7":"code","61067ff7":"code","604b6ba6":"code","1a05ad20":"code","a4da85c1":"code","445377a7":"code","1a9add08":"markdown","398bed73":"markdown","ba6609d0":"markdown","cf0a081c":"markdown","d1351562":"markdown","3341e2a4":"markdown","66ec355f":"markdown","3ce47076":"markdown"},"source":{"d8f81370":"import numpy as np\nimport pandas as pd\npd.set_option('max_columns', None)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nfrom sklearn.decomposition import PCA\n\nfrom sklearn.linear_model import LogisticRegression\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","8c978092":"train_df = pd.read_csv('..\/input\/aps-failure-at-scania-trucks-data-set\/aps_failure_training_set_processed_8bit.csv')\ntrain_labels = pd.read_csv('..\/input\/aps-failure-at-scania-trucks-data-set\/aps_failure_training_set.csv')['class']\n\ntest_df = pd.read_csv('..\/input\/aps-failure-at-scania-trucks-data-set\/aps_failure_test_set_processed_8bit.csv')\ntest_labels = pd.read_csv('..\/input\/aps-failure-at-scania-trucks-data-set\/aps_failure_test_set.csv')['class']","8a380c33":"train_df['class'] = train_labels\ntest_df['class'] = test_labels","359ec355":"train_df","d23a04ac":"test_df","095fe8f9":"y_train = train_df['class'].copy()\nX_train = train_df.drop('class', axis=1).copy()\n\ny_test = test_df['class'].copy()\nX_test = test_df.drop('class', axis=1).copy()","8072ed1a":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\n\nprint(\"Test Accuracy: {:.4f}%\".format(model.score(X_test, y_test) * 100))","6b4f4bc7":"X_train","61067ff7":"n_components = 10\n\npca = PCA(n_components=n_components)\npca.fit(X_train)\n\nX_train_reduced = pd.DataFrame(pca.transform(X_train), index=X_train.index, columns=[\"PC\" + str(i + 1) for i in range(n_components)])\nX_test_reduced = pd.DataFrame(pca.transform(X_test), index=X_test.index, columns=[\"PC\" + str(i + 1) for i in range(n_components)])","604b6ba6":"X_train_reduced","1a05ad20":"plt.figure(figsize=(16, 10))\nsns.barplot(x=pca.explained_variance_ratio_, y=[\"PC\" + str(i + 1) for i in range(n_components)], orient='h', palette='husl')\nplt.show()","a4da85c1":"reduced_model = LogisticRegression()\nreduced_model.fit(X_train_reduced, y_train)\n\nprint(\"Test Accuracy (Original Data): {:.4f}%\".format(model.score(X_test, y_test) * 100))\nprint(\" Test Accuracy (Reduced Data): {:.4f}%\".format(reduced_model.score(X_test_reduced, y_test) * 100))","445377a7":"print(\"Ratio of memory usage in bytes (original to reduced): {:.5f}\".format(X_train.memory_usage().sum() \/ X_train_reduced.memory_usage().sum()))","1a9add08":"# Training (With Dimensionality Reduction)","398bed73":"# Dimensionality Reduction With PCA","ba6609d0":"# Preprocessing","cf0a081c":"# Task for Today  \n\n***\n\n## Air Pressure System Failure Prediction  \n\nGiven *data about air pressure systems in trucks*, let's try to predict whether a given system will be **fail** or not.\n\nWe will use a logistic regression model to make our predictions.  \nWe will reduce the dimensionality of the data using principal component analysis.","d1351562":"# Getting Started","3341e2a4":"We can see that we lose a small amount of accuracy (\\~1%) in exchange for a large increase in space-efficiency (\\~1\/17th as much space required).","66ec355f":"# Training (Without Dimensionality Reduction)","3ce47076":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/gIqWzPRkrOk"}}