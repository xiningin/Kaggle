{"cell_type":{"ce607b26":"code","5b5698ab":"code","71efe574":"markdown"},"source":{"ce607b26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n!pip install transformers\n!wget -O scibert_uncased.tar https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-research\/scibert\/huggingface_pytorch\/scibert_scivocab_uncased.tar\n!tar -xvf scibert_uncased.tar\nimport torch\nfrom transformers import BertTokenizer, BertModel\n\n\ndf_clean_pmc = pd.read_csv(\"..\/input\/cord-19-eda-parse-json-and-generate-clean-csv\/clean_pmc.csv\")\nprint(df_clean_pmc.head())\ndf_clean_pmc.to_excel('df_clean_pmc.xlsx')\n","5b5698ab":"def word_window(word_loc, text_split, window_size, window_type):\n    if(window type='word'):\n        if(word_loc-window_size>=0):\n            if(word_loc+window_size<=len(text_split)):\n                return ' '.join(text_split[word_loc-window_size:word_loc+window_size])\n            else:\n                ' '.join(text_split[word_loc-window_size:])\n        else:\n            return ' '.join(text_split[0:word_loc+window_size])\n    else:\n        \n\n    \n\ndef word_existence(text):\n    text_split=text.split()\n    if(word in text_split):\n        return\n    ","71efe574":"function that checks existence of an exact query word in an article or similar words from the SciBERT model:"}}