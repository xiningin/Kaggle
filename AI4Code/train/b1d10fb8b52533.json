{"cell_type":{"3eb21ac3":"code","72b82af6":"code","8e258295":"code","392b3a5a":"code","2a1eb4a1":"code","93d915aa":"code","a71f1823":"code","0b1296a0":"code","185f3f6c":"code","223eea99":"code","3c530c78":"code","05ef356a":"code","3211478b":"code","d2723cef":"code","e539afc9":"code","3e02e003":"code","ea9aae4f":"code","ef29b309":"code","dc01b707":"code","d5715889":"code","a31a1b12":"code","f31aefee":"code","92849d30":"code","ae4078b7":"code","f30436df":"code","961a5a34":"code","56192c14":"code","31385a22":"code","bfdae031":"code","149a13c8":"code","db266af4":"code","7af52803":"code","aa831200":"code","04cd1125":"code","41060207":"code","288662f2":"code","196d3242":"code","27f8e8d4":"code","a510de9a":"code","9cb14371":"code","70b3a04f":"code","172b5215":"code","a8930897":"code","588a4846":"code","c1525b59":"code","1ec69b3b":"code","8e94f9fc":"code","ff0336f5":"code","2b3e6722":"code","f863224e":"code","58899df1":"code","cdf10c2d":"code","d2eb7e53":"code","e86b3cd1":"code","9045fa15":"code","a05572d9":"code","b7e05833":"code","7d11fa53":"code","525e9ed7":"code","6bbb3c81":"code","5f1dd025":"code","8a1fe950":"code","bd5f2212":"code","3bece9a0":"code","ac3637f0":"code","0826138a":"code","4a2d55a8":"code","e5e1ce46":"code","df98baf4":"code","ab581dca":"code","3f3a8a66":"code","caaac7e4":"code","b8870625":"code","acf5b5b7":"code","8b9eed50":"code","8c6e7343":"code","ec2def90":"code","9468f07d":"code","d3781241":"code","c9084f4b":"code","9377c55c":"code","725fe309":"code","31e68cba":"code","73eafb3c":"code","dc22fed0":"code","421e4422":"code","ba195925":"code","137e5032":"code","4dd3c5b7":"code","77fbbe0d":"code","42c45903":"code","8bac23bc":"code","eb321578":"code","dcfb210e":"code","9dad6ade":"code","d335e044":"code","2dbad93e":"code","0ef72e7e":"code","1a094178":"code","2edb453a":"code","9ddc74b0":"code","e19a702e":"code","ee1e1d88":"code","eebc1d63":"code","f8c909d5":"code","4b5d9252":"code","124753f1":"code","69a2ba2b":"code","ec95eb73":"code","5220a35b":"code","ae4aa560":"code","177c3efc":"code","a3c1e3f4":"code","28004b9c":"code","28e5797e":"code","8c7d4fde":"code","6e62df52":"code","fdb8df42":"code","dc227a96":"code","8ebe6f3d":"code","7fc61836":"code","bbeb939d":"code","bf1b0ec1":"code","c15e1150":"code","b13fe4e8":"code","559c466f":"code","638a4737":"code","c0d3d7ed":"code","854d14aa":"code","9a5ea550":"code","7095ab59":"code","3761e304":"code","78e867ee":"code","79652705":"code","743a3b2f":"code","f1073710":"code","c55d3224":"code","474875f2":"code","7593ee3d":"code","f4a932a3":"code","0afbd701":"code","9467afd2":"code","178ce7a7":"code","7ab37f85":"code","29b7729b":"code","c52c4cde":"code","cf68cfcd":"code","e126d79f":"code","e139219a":"code","42894698":"code","c0c907c7":"code","e20d2b09":"code","d42c0c91":"code","23b6589c":"code","4744c96e":"code","205a3960":"code","2ca03c9f":"code","c46d7b06":"code","58a0cd23":"code","d63ad0ea":"code","b21b6fc6":"code","ae8a2394":"code","a76d4125":"code","4f40d319":"code","a2a93685":"code","649f482c":"code","8b2032f1":"code","1ce819b2":"code","d4e7e508":"code","8b64a368":"code","790ba10f":"code","9be2fd02":"code","c11bd108":"code","c4db01b7":"code","b80683ed":"code","f7716559":"code","5984f322":"code","8028b418":"code","f333130a":"code","755b5175":"code","75e700b5":"code","0ba17504":"code","0d0f0340":"code","c26a924d":"code","3c90476d":"code","e900e11a":"code","0aaee2f9":"code","da22c2d4":"code","19829f8e":"code","12e6fbd7":"code","aaffeddd":"code","e22e735b":"code","bc0fc733":"code","84bf5068":"code","21ff71ab":"code","27d6959a":"code","d0af0475":"code","b72498bf":"code","683b6a6d":"code","6bd91e83":"code","3ef8825c":"code","6b5a1dfb":"code","c3772e07":"code","9e7fc0ea":"code","035a84ab":"code","73bf9aa1":"code","337b0109":"code","e5669ac6":"code","ed601dd9":"code","80e069a4":"code","44633d58":"code","25bb0344":"code","330754cc":"code","526630a7":"code","892d8ed7":"code","b6ef8c49":"code","f07f130a":"code","9be584bc":"code","e1c2afb2":"code","4100cf8a":"code","6ae32486":"code","0ad5e6e0":"code","094e3c9a":"code","c082764b":"code","48670d0b":"code","1d3fe9e4":"code","8545494f":"code","60d80591":"code","20da4323":"code","05152912":"code","6fbdc5fe":"code","594d038b":"code","59fa956c":"code","c27ebeef":"code","6021146c":"code","154b3b74":"code","f88ffd23":"code","0f10658c":"code","02d57853":"code","29978c91":"code","a9c0d0d7":"code","69ed34bf":"code","12fcc264":"code","50274e2a":"code","c4981401":"code","27005fe2":"code","dc46d096":"code","e60a2467":"code","970faa73":"code","9ce4a305":"code","df0f7a60":"code","2bad9d5a":"code","d1cfbf6f":"code","5fc3ec67":"code","496a6f95":"code","99089b43":"code","b9eb176c":"code","d8cfcc5c":"code","f4da0bef":"code","85b09bdc":"code","6d26b770":"code","cedc862d":"code","4078729f":"code","b162bcd8":"code","b1a58f29":"code","e28d63e3":"code","8462b58b":"code","9d8a823f":"code","4cf3cb5e":"code","88897090":"code","cf04bbb0":"code","18fab37b":"code","27579ccd":"code","f545eb04":"code","940953d4":"code","38d6ac6e":"code","44f516af":"code","f6cdda67":"code","548fa4c2":"code","a0cc4a04":"code","2f892414":"code","74956e2b":"code","9ef08af7":"code","6f860d70":"code","99884e58":"code","335002ba":"code","de363bfc":"code","0b65a564":"code","95d9e3c6":"code","a75d2633":"code","c56f0493":"code","00e8f168":"code","b5cdcd4c":"code","01dc1edd":"code","de0e6189":"code","91b5d1b0":"code","b548d929":"code","4f172c5d":"code","5c698597":"code","4c980e79":"code","377a88ce":"code","291430f4":"code","dbfe595f":"code","104d6d1a":"code","0e0cf6ce":"code","79f0bad0":"code","5fca8d16":"code","00076783":"code","f81825b1":"code","f494dc60":"code","dc396c91":"code","e9d5be47":"code","97a3b8a5":"code","665de317":"code","aac6a7ba":"code","29f3d515":"code","4c81dd77":"code","1dce417b":"code","1bdc482d":"code","b74263ce":"code","93b91c5d":"code","2b29c6bb":"code","adad438a":"code","af4afccf":"code","9a85fd3a":"code","f66f0e84":"code","6d1babee":"code","0252cadb":"code","0426bc46":"code","77d7d8df":"code","b42b4e0b":"code","0dfc51f1":"code","5cfb96d9":"code","253712f3":"code","c910bef1":"code","d7bbce67":"code","53bcdf9e":"code","cd081043":"code","b0aa33e4":"code","13aa3f59":"code","bc7bdb59":"code","e5daa3d0":"code","7ea6b9c6":"code","9ad31aef":"code","32398777":"code","b8fe2922":"code","18e9acfc":"code","27827e44":"code","4c0d608e":"code","aa3a4de2":"code","0f7b35f0":"code","1578d49c":"code","0455a68b":"code","c86b3601":"code","97dee1c8":"code","4097a84d":"code","a2fd4400":"code","e5d72ac3":"code","6e5b671b":"code","04a17b86":"code","d303da2b":"code","285169d9":"code","a82b237b":"code","ed876712":"code","b99e4191":"code","82eb607a":"code","88343afa":"code","fe1856e2":"code","4763b80e":"code","7a2baa8c":"code","c3d7e977":"code","0efdd84d":"code","9b6126cd":"code","e0405a47":"code","3bcea67f":"code","509693ae":"code","889363d2":"code","07661489":"code","4d609f0d":"code","bfdc8ea5":"code","48fc687d":"code","53203386":"code","c990449b":"code","adb9e251":"code","e20d6772":"code","ca867c8b":"code","5d9a0e29":"code","3590c439":"code","c9c1a6b9":"code","dbf72e81":"code","5775d895":"code","84b98252":"code","fb114c81":"code","c1ce609c":"code","6f99faf5":"code","c6cbb6a5":"code","94ee94fc":"code","78c01170":"code","3e42f293":"code","4dba7fbb":"code","ba5c11a6":"code","63265f06":"code","96f653ea":"code","c750d66d":"code","f9dae3fe":"code","1478de8b":"code","97e89df0":"code","7aa205cf":"code","5a2a3d26":"code","69bbe3ca":"code","bf6c1342":"code","a072af42":"code","631797c2":"code","af3918ca":"code","7da6056e":"code","f3bfbc56":"code","502bb06b":"code","88bac211":"code","d6636686":"code","6f8faf09":"code","ab704bf8":"code","3aa58507":"code","e2e4dec0":"code","6b26c0d6":"code","349888fb":"code","b0304f5a":"code","07a3d7ac":"code","78e4290e":"code","526c70ae":"code","6343e693":"code","4c457752":"code","56bd2c22":"code","e8f333fa":"code","c9aa06bb":"code","02eb6ead":"code","aae24c8f":"code","7744c097":"code","f64f162f":"code","62f77544":"code","331d4e43":"code","e6bfe18a":"code","11d4d85e":"code","716adb48":"code","d54286a2":"code","c7e41502":"code","61531dab":"code","11318bd1":"code","83dbd8f3":"code","116a45ae":"code","533f02a8":"markdown","1c86f9c1":"markdown","d40e276c":"markdown","b77fcd21":"markdown","f6a33c4c":"markdown","ded717dd":"markdown","4b779da5":"markdown","47b6e3ed":"markdown","cba83506":"markdown","8770bb2c":"markdown","76093ad6":"markdown","aa573041":"markdown","659dcbdf":"markdown","7a074d5f":"markdown","687aad16":"markdown","04811334":"markdown","c0d79b78":"markdown","71fb3437":"markdown","8fe14f2d":"markdown","c647214c":"markdown","9b0aae10":"markdown","52a7d403":"markdown","ed4b2d20":"markdown","85a4f882":"markdown","a7401a11":"markdown","4ab298c8":"markdown","2afbb24b":"markdown","4d2d2c59":"markdown","1f818743":"markdown","c5a3b87e":"markdown","e06e6e8b":"markdown","d996955f":"markdown","7eb81e7b":"markdown","c9ce3faf":"markdown","046be53c":"markdown","86d78d09":"markdown","34d062c6":"markdown","7040b71a":"markdown","987e7d15":"markdown","37f03d47":"markdown","1e46051a":"markdown","6a1ce047":"markdown","ec517338":"markdown","a735af62":"markdown","5723edf8":"markdown","d2809741":"markdown","0d4ab966":"markdown","f301a7df":"markdown","2018fa1d":"markdown","6cfa4774":"markdown","863f82eb":"markdown","c60d1552":"markdown","05c0bf86":"markdown","6d7ad5ca":"markdown","1ed32165":"markdown","3667b8d8":"markdown","d496e334":"markdown","305efcb5":"markdown","82756026":"markdown","ff6c1d1f":"markdown","bee5ec4b":"markdown","5a4bc3b3":"markdown","c734e2cb":"markdown","cefecc4b":"markdown","e18ac7ad":"markdown","b28b90ae":"markdown","11b53cea":"markdown","52784ef5":"markdown","09178c75":"markdown","06e2d5f4":"markdown","744027c3":"markdown","c45042f4":"markdown","20f51317":"markdown","f3de0e9a":"markdown","28480cf2":"markdown","f4e9f385":"markdown","87cbd080":"markdown","cf639905":"markdown","e21ee5c0":"markdown","375af8b5":"markdown","96768cf0":"markdown","2badf7f6":"markdown","db178cc0":"markdown","2e7af042":"markdown","b0aca3d4":"markdown","082fa8a8":"markdown","37f80cc5":"markdown","ff4f6f70":"markdown","11db5839":"markdown","acf2f266":"markdown","3a692075":"markdown","e6a2ad01":"markdown","1bbb2930":"markdown","13ded602":"markdown","acc6607c":"markdown","bee16ba6":"markdown","97a20349":"markdown","128e4d93":"markdown","36eb0c43":"markdown","73ffeb52":"markdown","5ed0a043":"markdown","ac49a848":"markdown","bed12287":"markdown","0b30dd85":"markdown","ab2db222":"markdown","e061a0f8":"markdown","48069172":"markdown","9042027a":"markdown","0966ed54":"markdown","00527185":"markdown","1c0dae14":"markdown","7a003dd6":"markdown","404c6a64":"markdown"},"source":{"3eb21ac3":"# Veriye \u0130lk Bak\u0131\u015f","72b82af6":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")  #veri setimizi yukledik\nplanets.head()","8e258295":"#veri setinin hikayesi nedir? ","392b3a5a":"df = planets.copy() #burda df uzerine ustteki veriyi kopyaladik yani df ustunde yaptigimiz degisiklikler ana veri kumesini\n                    #etkilesin istemedik kisaca yedek aldik","2a1eb4a1":"df.head()","93d915aa":"df.tail()","a71f1823":"#veri seti yap\u0131sal bilgileri","0b1296a0":"df.info()","185f3f6c":"df.dtypes","223eea99":"import pandas as pd \ndf.method = pd.Categorical(df.method) #burda df.methodu objectten categoric nesneye cevirdik","3c530c78":"df.dtypes","05ef356a":"df.head()","3211478b":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()","d2723cef":"df.head()","e539afc9":"df.shape  #boyut bilgileri","3e02e003":"df.columns #sadece degisken isimlerine erismek ister isek","ea9aae4f":"df.describe().T    #betimsel istatistiklere erisme  .T de transpoze aliyoruz daha net gosteriyor \n                    \n                   #bu cok onemli --->\n                   #eksik degerleri goz ardi eder ve kategorik degiskenleri disari birakir tum degiskenler sayisaldir","ef29b309":"df.describe(include = \"all\").T #include all ile tum degiskenleri barindirmasini isteriz ama bu cok anlamsiz olur gerek yok\n                               #kategorik degiskenleri ayri sekilde ele almak lazim","dc01b707":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","d5715889":"#hi\u00e7 eksik g\u00f6zlem(de\u011fer) var m\u0131\ndf.isnull().values.any()   #true dondugu icin var cikarimini yapabiliriz","a31a1b12":"#hangi de\u011fi\u015fkende ka\u00e7ar tane var","f31aefee":"df.isnull().sum()    #isnull toplamini aldik yani kimde ne kadar var bulduk","92849d30":"# ONEMLI BIR YONTEM--------->\ndf[\"orbital_period\"].fillna(0, inplace = True)  #bu bir yontemdir null degerlere 0 degerini atiyoruz\n                                                #orbital period degerlerine bosluklari 0 la doldur dedik \n                                                #inplace i true yapmazsak islem kalici olmaz ","ae4078b7":"df.isnull().sum()                              #goruldugu uzere orbital periodda null deger kalmadi","f30436df":"# ONEMLI BIR YONTEM--------->\ndf[\"mass\"].fillna(df.mass.mean(), inplace = True)   #burdada yaptigimiz sey ortalama degerle doldurduk genel olarak buda\n                                                    #tercih edilebilir sorun cozme konusunda ise yarar train kisiminda","961a5a34":"df.isnull().sum()                      #goruldugu uzere kutlede doldu","56192c14":"df.fillna(df.mean(), inplace = True) #burda ise df verisinde eksik degerlerin tumune ortalama degerleri atadik \n                                     #ama bu islemleri yaparken dikkat etmeliyiz cunku bunlar veri yapisina dogrudan etki\n                                     #eden islemlerdir","31385a22":"df.isnull().sum()","bfdae031":"df = planets.copy()   #yedekleme yaptigimiz icin gordugunuz uzere burda tekrar kopyalayarak devam edebildik 0 dan\ndf.head()             #goruldugu uzere yedeklemek bu yuzden onemli","149a13c8":"df.isnull().sum()","db266af4":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","7af52803":"kat_df = df.select_dtypes(include = [\"object\"]) #sadece kategorik degiskenleri secmek ister isek include=[\"object\"] \n                                                #kullaniyoruz\n                                                #select_dtypes ile istedigimiz veritipine gore secebiliriz bu onemli","aa831200":"kat_df.head(5)","04cd1125":"kat_df.method.unique() #burda yaptigimiz tek sefer (unique) goruntulemek oldu kategorik degerleri","41060207":"kat_df[\"method\"].value_counts().count()","288662f2":"kat_df[\"method\"].value_counts()","196d3242":"df[\"method\"].value_counts().plot.barh(); #burda ilk defa graph cizdirdik veriyi ilk defa temsil ettik\n                                         # .plot.barh() seklinde elimizdeki kategorik verilerin frekansini gorsellestirdik","27f8e8d4":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","a510de9a":"df_num = df.select_dtypes(include = [\"float64\", \"int64\"]) #burda float64 ve int64 tipindeki verileri al dedik ve sadece\n                                                          #sayisal(surekli) degiskenleri secmis olduk","9cb14371":"df_num.head()","70b3a04f":"df_num.describe().T","172b5215":"df_num[\"distance\"].describe()       #burda sadece distance kisminin ozelliklerine goz attik bunun elle yazilmis seklide\n                                    #altta mevcut onuda kendimiz tanimlayarak yazdik print kullanarak","a8930897":"print(\"Ortalama: \" + str(df_num[\"distance\"].mean()))      #burda kendimiz yazdik yukardaki gibi elle yazim sekli kisaca\nprint(\"Dolu G\u00f6zlem Say\u0131s\u0131: \" + str(df_num[\"distance\"].count())) \nprint(\"Maksimum De\u011fer: \" + str(df_num[\"distance\"].max()))\nprint(\"Minimum De\u011fer: \" + str(df_num[\"distance\"].min()))\nprint(\"Medyan: \" + str(df_num[\"distance\"].median()))\nprint(\"Standart Sapma: \" + str(df_num[\"distance\"].std()))","588a4846":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","c1525b59":"df.info()","1ec69b3b":"df.shape","8e94f9fc":"df.describe().T","ff0336f5":"df.head()","2b3e6722":" df[\"cut\"].value_counts() #cut kategorik degiskeninin icindeki degerlerin frekansina eristik","f863224e":"df[\"color\"].value_counts() #ayni seyi color icin yaptik kategorik degisken gene frekansina eristik","58899df1":"#ordinal tan\u0131mlama \nfrom pandas.api.types import CategoricalDtype","cdf10c2d":"df.cut.head()","d2eb7e53":"df.cut = df.cut.astype(CategoricalDtype(ordered = True)) #cut degiskenini burda siraliyoruz ordered(sirali) bir sekilde\n                                                        # bu kod onemli","e86b3cd1":"df.dtypes","9045fa15":"df.cut.head(1) #goruldugu uzere siralanmis ama tam istedigimiz sirada degil onun ayarini altta yaptik","a05572d9":"cut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"] #categori adlarini duzenlemek icin atama yapmamiz lazim\n                                                                #dogru sirada yapmak icin bunlari cut_kategoriler\n                                                    #adli degiskene attik altta ise duzeltme islemini yaptik","b7e05833":"df.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))","7d11fa53":"df.cut.head(1) #burda gorulecegi uzere ustteki fonksiyon ile siraladik","525e9ed7":"#barplot","6bbb3c81":"df[\"cut\"].value_counts().plot.barh().set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"); \n\n#sinif frekanslarini cizmek icin tek kullandigimiz fonksiyon .plot.barh() oldu diger kisim baslik eklemek icin\n                                                                                            ","5f1dd025":"(df[\"cut\"]              #buda bir diger sekilde ifade etme ama genelde usttekini kullanmak daha makul\n .value_counts()\n .plot.barh()\n .set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"));","8a1fe950":"sns.barplot(x = df.cut, y = df.cut.index);  #seaborn kullanarak yapicaz bu gorsellestirmeyi\n\n#x eksenine cut degiskenini koy y degiskeninede df.cut.index ile bu degiskenin indekslerini al koy dedik\n","bd5f2212":"import seaborn as sns\nfrom pandas.api.types import CategoricalDtype \ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ncut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"]\ndf.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))\ndf.head()","3bece9a0":"sns.catplot(x = \"cut\", y = \"price\", data = df);","ac3637f0":"sns.barplot(x = \"cut\", y = \"price\", hue = \"color\", data = df);","0826138a":"df.groupby([\"cut\",\"color\"])[\"price\"].mean()","4a2d55a8":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","e5e1ce46":"sns.distplot(df.price, kde = False);","df98baf4":"df[\"price\"].describe()","ab581dca":"?sns.distplot","3f3a8a66":"sns.distplot(df.price, bins = 10, kde = False);","caaac7e4":"sns.distplot(df.price);","b8870625":"sns.distplot(df.price, hist = False);","acf5b5b7":"sns.kdeplot(df.price, shade = True);","8b9eed50":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","8c6e7343":"sns.kdeplot(df.price, shade = True);","ec2def90":"(sns\n .FacetGrid(df,\n              hue = \"cut\",\n              height = 5,\n              xlim = (0, 10000))\n .map(sns.kdeplot, \"price\", shade= True)\n .add_legend()\n);","9468f07d":"sns.catplot(x = \"cut\", y = \"price\", hue = \"color\", kind = \"point\", data = df);","d3781241":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","c9084f4b":"df.describe().T","9377c55c":"df[\"sex\"].value_counts()","725fe309":"df[\"smoker\"].value_counts()","31e68cba":"df[\"day\"].value_counts()","73eafb3c":"df[\"time\"].value_counts()","dc22fed0":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","421e4422":"sns.boxplot(x = df[\"total_bill\"]);","ba195925":"sns.boxplot(x = df[\"total_bill\"], orient = \"v\");","137e5032":"df.describe().T","4dd3c5b7":"#Hangi gunler daha fazla kazan\u0131yoruz?","77fbbe0d":"sns.boxplot(x = \"day\", y = \"total_bill\", data = df);","42c45903":"#sabah m\u0131 ak\u015fam m\u0131 daha \u00e7ok kazan\u0131yoruz?","8bac23bc":"sns.boxplot(x = \"time\", y = \"total_bill\", data = df);","eb321578":"#kisi say\u0131s\u0131 kazanc","dcfb210e":"sns.boxplot(x = \"size\", y = \"total_bill\", data = df);","9dad6ade":"sns.boxplot(x = \"day\", y = \"total_bill\", hue = \"sex\", data = df);","d335e044":"df.head()","2dbad93e":"sns.catplot(y = \"total_bill\", kind = \"violin\", data = df);","0ef72e7e":"sns.catplot(x= \"day\", y = \"total_bill\", kind = \"violin\", data = df);","1a094178":"sns.catplot(x= \"day\", y = \"total_bill\", hue = \"sex\",kind = \"violin\", data = df);","2edb453a":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","9ddc74b0":"sns.scatterplot(x = \"total_bill\", y = \"tip\", data = df);","e19a702e":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\",data = df);","ee1e1d88":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\", style = \"time\", data = df);","eebc1d63":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"day\", style = \"day\", data = df);","f8c909d5":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue= \"size\", size = \"size\", data = df);","4b5d9252":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","124753f1":"import matplotlib.pyplot as plt","69a2ba2b":"sns.lmplot(x = \"total_bill\", y = \"tip\", data = df);","ec95eb73":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", data = df);","5220a35b":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", data = df);","ae4aa560":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", row = \"sex\", data = df);","177c3efc":"import seaborn as sns; \niris = sns.load_dataset(\"iris\")\ndf = iris.copy()\ndf.head()","a3c1e3f4":"df.dtypes","28004b9c":"df.shape","28e5797e":"sns.pairplot(df);","8c7d4fde":"sns.pairplot(df, hue = \"species\");","6e62df52":"sns.pairplot(df, hue = \"species\", markers = [\"o\",\"s\",\"D\"]);","fdb8df42":"sns.pairplot(df, kind = \"reg\", hue = \"species\");","dc227a96":"import seaborn as sns\nflights = sns.load_dataset('flights')\ndf = flights.copy()\ndf.head()","8ebe6f3d":"df.shape","7fc61836":"df[\"passengers\"].describe()","bbeb939d":"df = df.pivot(\"month\", \"year\", \"passengers\");","bf1b0ec1":"df","c15e1150":"sns.heatmap(df);","b13fe4e8":"sns.heatmap(df, annot = True, fmt = \"d\");","559c466f":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5);","638a4737":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5, cbar = False);","c0d3d7ed":"import seaborn as sns\nfmri = sns.load_dataset(\"fmri\")\ndf = fmri.copy()\ndf.head()","854d14aa":"df.shape","9a5ea550":"df[\"timepoint\"].describe()","7095ab59":"df[\"signal\"].describe()","3761e304":"df.groupby(\"timepoint\")[\"signal\"].count()","78e867ee":"df.groupby(\"signal\").count()","79652705":"df.groupby(\"timepoint\")[\"signal\"].describe()","743a3b2f":"sns.lineplot(x = \"timepoint\", y = \"signal\", data = df);","f1073710":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", data = df);","c55d3224":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", style = \"event\", data = df);","474875f2":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"event\", \n             style = \"event\", \n             markers = True,  dashes = False, data = df);","7593ee3d":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"region\", \n             style = \"event\", \n             data = df);","f4a932a3":"!pip install pandas_datareader\nimport pandas_datareader as pr","0afbd701":"df = pr.get_data_yahoo(\"AAPL\", start = \"2016-01-01\", end = \"2019-08-25\")","9467afd2":"df.head()","178ce7a7":"df.shape","7ab37f85":"kapanis = df[\"Close\"]","29b7729b":"kapanis.head()","c52c4cde":"kapanis.plot();","cf68cfcd":"kapanis.index","e126d79f":"kapanis.index = pd.DatetimeIndex(kapanis.index)","e139219a":"kapanis.head()","42894698":"kapanis.plot();","c0c907c7":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")  #veri setimizi yukledik\nplanets.head()","e20d2b09":"#veri setinin hikayesi nedir? ","d42c0c91":"df = planets.copy() #burda df uzerine ustteki veriyi kopyaladik yani df ustunde yaptigimiz degisiklikler ana veri kumesini\n                    #etkilesin istemedik kisaca yedek aldik","23b6589c":"df.head()","4744c96e":"df.tail()","205a3960":"#veri seti yap\u0131sal bilgileri","2ca03c9f":"df.info()","c46d7b06":"df.dtypes","58a0cd23":"import pandas as pd \ndf.method = pd.Categorical(df.method) #burda df.methodu objectten categoric nesneye cevirdik","d63ad0ea":"df.dtypes","b21b6fc6":"df.head()","ae8a2394":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()","a76d4125":"df.head()","4f40d319":"df.shape  #boyut bilgileri","a2a93685":"df.columns #sadece degisken isimlerine erismek ister isek","649f482c":"df.describe().T    #betimsel istatistiklere erisme  .T de transpoze aliyoruz daha net gosteriyor \n                    \n                   #bu cok onemli --->\n                   #eksik degerleri goz ardi eder ve kategorik degiskenleri disari birakir tum degiskenler sayisaldir","8b2032f1":"df.describe(include = \"all\").T #include all ile tum degiskenleri barindirmasini isteriz ama bu cok anlamsiz olur gerek yok\n                               #kategorik degiskenleri ayri sekilde ele almak lazim","1ce819b2":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","d4e7e508":"#hi\u00e7 eksik g\u00f6zlem(de\u011fer) var m\u0131\ndf.isnull().values.any()   #true dondugu icin var cikarimini yapabiliriz","8b64a368":"#hangi de\u011fi\u015fkende ka\u00e7ar tane var","790ba10f":"df.isnull().sum()    #isnull toplamini aldik yani kimde ne kadar var bulduk","9be2fd02":"# ONEMLI BIR YONTEM--------->\ndf[\"orbital_period\"].fillna(0, inplace = True)  #bu bir yontemdir null degerlere 0 degerini atiyoruz\n                                                #orbital period degerlerine bosluklari 0 la doldur dedik \n                                                #inplace i true yapmazsak islem kalici olmaz ","c11bd108":"df.isnull().sum()                              #goruldugu uzere orbital periodda null deger kalmadi","c4db01b7":"# ONEMLI BIR YONTEM--------->\ndf[\"mass\"].fillna(df.mass.mean(), inplace = True)   #burdada yaptigimiz sey ortalama degerle doldurduk genel olarak buda\n                                                    #tercih edilebilir sorun cozme konusunda ise yarar train kisiminda","b80683ed":"df.isnull().sum()                      #goruldugu uzere kutlede doldu","f7716559":"df.fillna(df.mean(), inplace = True) #burda ise df verisinde eksik degerlerin tumune ortalama degerleri atadik \n                                     #ama bu islemleri yaparken dikkat etmeliyiz cunku bunlar veri yapisina dogrudan etki\n                                     #eden islemlerdir","5984f322":"df.isnull().sum()","8028b418":"df = planets.copy()   #yedekleme yaptigimiz icin gordugunuz uzere burda tekrar kopyalayarak devam edebildik 0 dan\ndf.head()             #goruldugu uzere yedeklemek bu yuzden onemli","f333130a":"df.isnull().sum()","755b5175":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","75e700b5":"kat_df = df.select_dtypes(include = [\"object\"]) #sadece kategorik degiskenleri secmek ister isek include=[\"object\"] \n                                                #kullaniyoruz\n                                                #select_dtypes ile istedigimiz veritipine gore secebiliriz bu onemli","0ba17504":"kat_df.head(5)","0d0f0340":"kat_df.method.unique() #burda yaptigimiz tek sefer (unique) goruntulemek oldu kategorik degerleri","c26a924d":"kat_df[\"method\"].value_counts().count()","3c90476d":"kat_df[\"method\"].value_counts()","e900e11a":"df[\"method\"].value_counts().plot.barh(); #burda ilk defa graph cizdirdik veriyi ilk defa temsil ettik\n                                         # .plot.barh() seklinde elimizdeki kategorik verilerin frekansini gorsellestirdik","0aaee2f9":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","da22c2d4":"df_num = df.select_dtypes(include = [\"float64\", \"int64\"]) #burda float64 ve int64 tipindeki verileri al dedik ve sadece\n                                                          #sayisal(surekli) degiskenleri secmis olduk","19829f8e":"df_num.head()","12e6fbd7":"df_num.describe().T","aaffeddd":"df_num[\"distance\"].describe()       #burda sadece distance kisminin ozelliklerine goz attik bunun elle yazilmis seklide\n                                    #altta mevcut onuda kendimiz tanimlayarak yazdik print kullanarak","e22e735b":"print(\"Ortalama: \" + str(df_num[\"distance\"].mean()))      #burda kendimiz yazdik yukardaki gibi elle yazim sekli kisaca\nprint(\"Dolu G\u00f6zlem Say\u0131s\u0131: \" + str(df_num[\"distance\"].count())) \nprint(\"Maksimum De\u011fer: \" + str(df_num[\"distance\"].max()))\nprint(\"Minimum De\u011fer: \" + str(df_num[\"distance\"].min()))\nprint(\"Medyan: \" + str(df_num[\"distance\"].median()))\nprint(\"Standart Sapma: \" + str(df_num[\"distance\"].std()))","bc0fc733":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","84bf5068":"df.info()","21ff71ab":"df.shape","27d6959a":"df.describe().T","d0af0475":"df.head()","b72498bf":" df[\"cut\"].value_counts() #cut kategorik degiskeninin icindeki degerlerin frekansina eristik","683b6a6d":"df[\"color\"].value_counts() #ayni seyi color icin yaptik kategorik degisken gene frekansina eristik","6bd91e83":"#ordinal tan\u0131mlama \nfrom pandas.api.types import CategoricalDtype","3ef8825c":"df.cut.head()","6b5a1dfb":"df.cut = df.cut.astype(CategoricalDtype(ordered = True)) #cut degiskenini burda siraliyoruz ordered(sirali) bir sekilde\n                                                        # bu kod onemli","c3772e07":"df.dtypes","9e7fc0ea":"df.cut.head(1) #goruldugu uzere siralanmis ama tam istedigimiz sirada degil onun ayarini altta yaptik","035a84ab":"cut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"] #categori adlarini duzenlemek icin atama yapmamiz lazim\n                                                                #dogru sirada yapmak icin bunlari cut_kategoriler\n                                                    #adli degiskene attik altta ise duzeltme islemini yaptik","73bf9aa1":"df.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))","337b0109":"df.cut.head(1) #burda gorulecegi uzere ustteki fonksiyon ile siraladik","e5669ac6":"#barplot","ed601dd9":"df[\"cut\"].value_counts().plot.barh().set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"); \n\n#sinif frekanslarini cizmek icin tek kullandigimiz fonksiyon .plot.barh() oldu diger kisim baslik eklemek icin\n                                                                                            ","80e069a4":"(df[\"cut\"]              #buda bir diger sekilde ifade etme ama genelde usttekini kullanmak daha makul\n .value_counts()\n .plot.barh()\n .set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"));","44633d58":"sns.barplot(x = df.cut, y = df.cut.index);  #seaborn kullanarak yapicaz bu gorsellestirmeyi\n\n#x eksenine cut degiskenini koy y degiskeninede df.cut.index ile bu degiskenin indekslerini al koy dedik\n","25bb0344":"import seaborn as sns\nfrom pandas.api.types import CategoricalDtype \ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ncut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"]\ndf.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))\ndf.head()","330754cc":"sns.catplot(x = \"cut\", y = \"price\", data = df);","526630a7":"sns.barplot(x = \"cut\", y = \"price\", hue = \"color\", data = df);","892d8ed7":"df.groupby([\"cut\",\"color\"])[\"price\"].mean()","b6ef8c49":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","f07f130a":"sns.distplot(df.price, kde = False);","9be584bc":"df[\"price\"].describe()","e1c2afb2":"?sns.distplot","4100cf8a":"sns.distplot(df.price, bins = 10, kde = False);","6ae32486":"sns.distplot(df.price);","0ad5e6e0":"sns.distplot(df.price, hist = False);","094e3c9a":"sns.kdeplot(df.price, shade = True);","c082764b":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","48670d0b":"sns.kdeplot(df.price, shade = True);","1d3fe9e4":"(sns\n .FacetGrid(df,\n              hue = \"cut\",\n              height = 5,\n              xlim = (0, 10000))\n .map(sns.kdeplot, \"price\", shade= True)\n .add_legend()\n);","8545494f":"sns.catplot(x = \"cut\", y = \"price\", hue = \"color\", kind = \"point\", data = df);","60d80591":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","20da4323":"df.describe().T","05152912":"df[\"sex\"].value_counts()","6fbdc5fe":"df[\"smoker\"].value_counts()","594d038b":"df[\"day\"].value_counts()","59fa956c":"df[\"time\"].value_counts()","c27ebeef":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","6021146c":"sns.boxplot(x = df[\"total_bill\"]);","154b3b74":"sns.boxplot(x = df[\"total_bill\"], orient = \"v\");","f88ffd23":"df.describe().T","0f10658c":"#Hangi gunler daha fazla kazan\u0131yoruz?","02d57853":"sns.boxplot(x = \"day\", y = \"total_bill\", data = df);","29978c91":"#sabah m\u0131 ak\u015fam m\u0131 daha \u00e7ok kazan\u0131yoruz?","a9c0d0d7":"sns.boxplot(x = \"time\", y = \"total_bill\", data = df);","69ed34bf":"#kisi say\u0131s\u0131 kazanc","12fcc264":"sns.boxplot(x = \"size\", y = \"total_bill\", data = df);","50274e2a":"sns.boxplot(x = \"day\", y = \"total_bill\", hue = \"sex\", data = df);","c4981401":"df.head()","27005fe2":"sns.catplot(y = \"total_bill\", kind = \"violin\", data = df);","dc46d096":"sns.catplot(x= \"day\", y = \"total_bill\", kind = \"violin\", data = df);","e60a2467":"sns.catplot(x= \"day\", y = \"total_bill\", hue = \"sex\",kind = \"violin\", data = df);","970faa73":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","9ce4a305":"sns.scatterplot(x = \"total_bill\", y = \"tip\", data = df);","df0f7a60":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\",data = df);","2bad9d5a":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\", style = \"time\", data = df);","d1cfbf6f":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"day\", style = \"day\", data = df);","5fc3ec67":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue= \"size\", size = \"size\", data = df);","496a6f95":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","99089b43":"import matplotlib.pyplot as plt","b9eb176c":"sns.lmplot(x = \"total_bill\", y = \"tip\", data = df);","d8cfcc5c":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", data = df);","f4da0bef":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", data = df);","85b09bdc":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", row = \"sex\", data = df);","6d26b770":"import seaborn as sns; \niris = sns.load_dataset(\"iris\")\ndf = iris.copy()\ndf.head()","cedc862d":"df.dtypes","4078729f":"df.shape","b162bcd8":"sns.pairplot(df);","b1a58f29":"sns.pairplot(df, hue = \"species\");","e28d63e3":"sns.pairplot(df, hue = \"species\", markers = [\"o\",\"s\",\"D\"]);","8462b58b":"sns.pairplot(df, kind = \"reg\", hue = \"species\");","9d8a823f":"import seaborn as sns\nflights = sns.load_dataset('flights')\ndf = flights.copy()\ndf.head()","4cf3cb5e":"df.shape","88897090":"df[\"passengers\"].describe()","cf04bbb0":"df = df.pivot(\"month\", \"year\", \"passengers\");","18fab37b":"df","27579ccd":"sns.heatmap(df);","f545eb04":"sns.heatmap(df, annot = True, fmt = \"d\");","940953d4":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5);","38d6ac6e":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5, cbar = False);","44f516af":"import seaborn as sns\nfmri = sns.load_dataset(\"fmri\")\ndf = fmri.copy()\ndf.head()","f6cdda67":"df.shape","548fa4c2":"df[\"timepoint\"].describe()","a0cc4a04":"df[\"signal\"].describe()","2f892414":"df.groupby(\"timepoint\")[\"signal\"].count()","74956e2b":"df.groupby(\"signal\").count()","9ef08af7":"df.groupby(\"timepoint\")[\"signal\"].describe()","6f860d70":"sns.lineplot(x = \"timepoint\", y = \"signal\", data = df);","99884e58":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", data = df);","335002ba":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", style = \"event\", data = df);","de363bfc":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"event\", \n             style = \"event\", \n             markers = True,  dashes = False, data = df);","0b65a564":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"region\", \n             style = \"event\", \n             data = df);","95d9e3c6":"!pip install pandas_datareader\nimport pandas_datareader as pr","a75d2633":"df = pr.get_data_yahoo(\"AAPL\", start = \"2016-01-01\", end = \"2019-08-25\")","c56f0493":"df.head()","00e8f168":"df.shape","b5cdcd4c":"kapanis = df[\"Close\"]","01dc1edd":"kapanis.head()","de0e6189":"kapanis.plot();","91b5d1b0":"kapanis.index","b548d929":"kapanis.index = pd.DatetimeIndex(kapanis.index)","4f172c5d":"kapanis.head()","5c698597":"kapanis.plot();","4c980e79":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")  #veri setimizi yukledik\nplanets.head()","377a88ce":"#veri setinin hikayesi nedir? ","291430f4":"df = planets.copy() #burda df uzerine ustteki veriyi kopyaladik yani df ustunde yaptigimiz degisiklikler ana veri kumesini\n                    #etkilesin istemedik kisaca yedek aldik","dbfe595f":"df.head()","104d6d1a":"df.tail()","0e0cf6ce":"#veri seti yap\u0131sal bilgileri","79f0bad0":"df.info()","5fca8d16":"df.dtypes","00076783":"import pandas as pd \ndf.method = pd.Categorical(df.method) #burda df.methodu objectten categoric nesneye cevirdik","f81825b1":"df.dtypes","f494dc60":"df.head()","dc396c91":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()","e9d5be47":"df.head()","97a3b8a5":"df.shape  #boyut bilgileri","665de317":"df.columns #sadece degisken isimlerine erismek ister isek","aac6a7ba":"df.describe().T    #betimsel istatistiklere erisme  .T de transpoze aliyoruz daha net gosteriyor \n                    \n                   #bu cok onemli --->\n                   #eksik degerleri goz ardi eder ve kategorik degiskenleri disari birakir tum degiskenler sayisaldir","29f3d515":"df.describe(include = \"all\").T #include all ile tum degiskenleri barindirmasini isteriz ama bu cok anlamsiz olur gerek yok\n                               #kategorik degiskenleri ayri sekilde ele almak lazim","4c81dd77":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","1dce417b":"#hi\u00e7 eksik g\u00f6zlem(de\u011fer) var m\u0131\ndf.isnull().values.any()   #true dondugu icin var cikarimini yapabiliriz","1bdc482d":"#hangi de\u011fi\u015fkende ka\u00e7ar tane var","b74263ce":"df.isnull().sum()    #isnull toplamini aldik yani kimde ne kadar var bulduk","93b91c5d":"# ONEMLI BIR YONTEM--------->\ndf[\"orbital_period\"].fillna(0, inplace = True)  #bu bir yontemdir null degerlere 0 degerini atiyoruz\n                                                #orbital period degerlerine bosluklari 0 la doldur dedik \n                                                #inplace i true yapmazsak islem kalici olmaz ","2b29c6bb":"df.isnull().sum()                              #goruldugu uzere orbital periodda null deger kalmadi","adad438a":"# ONEMLI BIR YONTEM--------->\ndf[\"mass\"].fillna(df.mass.mean(), inplace = True)   #burdada yaptigimiz sey ortalama degerle doldurduk genel olarak buda\n                                                    #tercih edilebilir sorun cozme konusunda ise yarar train kisiminda","af4afccf":"df.isnull().sum()                      #goruldugu uzere kutlede doldu","9a85fd3a":"df.fillna(df.mean(), inplace = True) #burda ise df verisinde eksik degerlerin tumune ortalama degerleri atadik \n                                     #ama bu islemleri yaparken dikkat etmeliyiz cunku bunlar veri yapisina dogrudan etki\n                                     #eden islemlerdir","f66f0e84":"df.isnull().sum()","6d1babee":"df = planets.copy()   #yedekleme yaptigimiz icin gordugunuz uzere burda tekrar kopyalayarak devam edebildik 0 dan\ndf.head()             #goruldugu uzere yedeklemek bu yuzden onemli","0252cadb":"df.isnull().sum()","0426bc46":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","77d7d8df":"kat_df = df.select_dtypes(include = [\"object\"]) #sadece kategorik degiskenleri secmek ister isek include=[\"object\"] \n                                                #kullaniyoruz\n                                                #select_dtypes ile istedigimiz veritipine gore secebiliriz bu onemli","b42b4e0b":"kat_df.head(5)","0dfc51f1":"kat_df.method.unique() #burda yaptigimiz tek sefer (unique) goruntulemek oldu kategorik degerleri","5cfb96d9":"kat_df[\"method\"].value_counts().count()","253712f3":"kat_df[\"method\"].value_counts()","c910bef1":"df[\"method\"].value_counts().plot.barh(); #burda ilk defa graph cizdirdik veriyi ilk defa temsil ettik\n                                         # .plot.barh() seklinde elimizdeki kategorik verilerin frekansini gorsellestirdik","d7bbce67":"import seaborn as sns \nplanets = sns.load_dataset(\"planets\")\ndf = planets.copy()\ndf.head()","53bcdf9e":"df_num = df.select_dtypes(include = [\"float64\", \"int64\"]) #burda float64 ve int64 tipindeki verileri al dedik ve sadece\n                                                          #sayisal(surekli) degiskenleri secmis olduk","cd081043":"df_num.head()","b0aa33e4":"df_num.describe().T","13aa3f59":"df_num[\"distance\"].describe()       #burda sadece distance kisminin ozelliklerine goz attik bunun elle yazilmis seklide\n                                    #altta mevcut onuda kendimiz tanimlayarak yazdik print kullanarak","bc7bdb59":"print(\"Ortalama: \" + str(df_num[\"distance\"].mean()))      #burda kendimiz yazdik yukardaki gibi elle yazim sekli kisaca\nprint(\"Dolu G\u00f6zlem Say\u0131s\u0131: \" + str(df_num[\"distance\"].count())) \nprint(\"Maksimum De\u011fer: \" + str(df_num[\"distance\"].max()))\nprint(\"Minimum De\u011fer: \" + str(df_num[\"distance\"].min()))\nprint(\"Medyan: \" + str(df_num[\"distance\"].median()))\nprint(\"Standart Sapma: \" + str(df_num[\"distance\"].std()))","e5daa3d0":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","7ea6b9c6":"df.info()","9ad31aef":"df.shape","32398777":"df.describe().T","b8fe2922":"df.head()","18e9acfc":" df[\"cut\"].value_counts() #cut kategorik degiskeninin icindeki degerlerin frekansina eristik","27827e44":"df[\"color\"].value_counts() #ayni seyi color icin yaptik kategorik degisken gene frekansina eristik","4c0d608e":"#ordinal tan\u0131mlama \nfrom pandas.api.types import CategoricalDtype","aa3a4de2":"df.cut.head()","0f7b35f0":"df.cut = df.cut.astype(CategoricalDtype(ordered = True)) #cut degiskenini burda siraliyoruz ordered(sirali) bir sekilde\n                                                        # bu kod onemli","1578d49c":"df.dtypes","0455a68b":"df.cut.head(1) #goruldugu uzere siralanmis ama tam istedigimiz sirada degil onun ayarini altta yaptik","c86b3601":"cut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"] #categori adlarini duzenlemek icin atama yapmamiz lazim\n                                                                #dogru sirada yapmak icin bunlari cut_kategoriler\n                                                    #adli degiskene attik altta ise duzeltme islemini yaptik","97dee1c8":"df.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))","4097a84d":"df.cut.head(1) #burda gorulecegi uzere ustteki fonksiyon ile siraladik","a2fd4400":"#barplot","e5d72ac3":"df[\"cut\"].value_counts().plot.barh().set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"); \n\n#sinif frekanslarini cizmek icin tek kullandigimiz fonksiyon .plot.barh() oldu diger kisim baslik eklemek icin\n                                                                                            ","6e5b671b":"(df[\"cut\"]              #buda bir diger sekilde ifade etme ama genelde usttekini kullanmak daha makul\n .value_counts()\n .plot.barh()\n .set_title(\"Cut De\u011fi\u015fkeninin S\u0131n\u0131f Frekanslar\u0131\"));","04a17b86":"sns.barplot(x = df.cut, y = df.cut.index);  #seaborn kullanarak yapicaz bu gorsellestirmeyi\n\n#x eksenine cut degiskenini koy y degiskeninede df.cut.index ile bu degiskenin indekslerini al koy dedik\n","d303da2b":"import seaborn as sns\nfrom pandas.api.types import CategoricalDtype \ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ncut_kategoriler = [\"Fair\",\"Good\",\"Very Good\",\"Premium\",\"Ideal\"]\ndf.cut = df.cut.astype(CategoricalDtype(categories = cut_kategoriler, ordered = True))\ndf.head()","285169d9":"sns.catplot(x = \"cut\", y = \"price\", data = df);    #catplot ile cizdirdigimiz bir grafik nasil cizilir onu gosterdim\n                                                    #kategorik degiskenleri genelde gostermek icin kullanilir","a82b237b":"sns.barplot(x = \"cut\", y = \"price\", hue = \"color\", data = df); #burda bu sefer price bazinda parcalara ayirdik \n                                                                #colori dahil ederek isin icine\n                                                                #altta bu grafigin dogrulamasini yaptim sayisal olarak","ed876712":"df.groupby([\"cut\",\"color\"])[\"price\"].mean() #burdaki islem dogrulama gibi dusunulur\n                                        #cift gruplama yapiyoruz cut ve color ile gruplamayi yaptik price'in ortalamsini \n#burda groupby da siralama onemli once cut a gore sonra colora gore gruplama yapiyoruz ilk hangisini gonderdigimiz onemli","b99e4191":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","82eb607a":"sns.distplot(df.price, kde = False); #sayisal degiskenelr icin kullanilan (dagilimi ifade etmek icin) kullanilan\n                                     #veri gorsellestirme teknikleridir histogram ve yogunluk grafikleri\n                                    #sadece df.price vermemiz yeterli price ile ilgili histogram yapmak istiyorsak\n                                    #kde=false sadece histogram istedigimiz icin yaptik\n        ","88343afa":"df[\"price\"].describe()","fe1856e2":"?sns.distplot","4763b80e":"sns.distplot(df.price, bins = 10, kde = False); #grafigin bins ayariyla oynadik kisaca grafik uzerinde ozellikleri denedik","7a2baa8c":"sns.distplot(df.price);","c3d7e977":"sns.distplot(df.price, hist = False); #histogram ozelligini kapadik grafigin ","0efdd84d":"sns.kdeplot(df.price, shade = True); #buda bir baska grafik fonksiyonu shade ile oynuyoruz ve grafigin altini boyayarak\n                                     #yogunluk grafigi olusturduk bu sefer","9b6126cd":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndf = diamonds.copy()\ndf.head()","e0405a47":"sns.kdeplot(df.price, shade = True);","3bcea67f":"(sns.FacetGrid(df,                #bu biraz anlasilmasi zor (Ders 165)\n              hue = \"cut\",\n              height = 5,\n              xlim = (0, 10000))   #x eksenini ayarlayabiliyoruz 0 ile 10000 arasinda olsun istedik ondan xlim kullandik\n .map(sns.kdeplot, \"price\", shade= True) #bir yogunluk grafigi daha olusturucaz\n .add_legend()\n);","509693ae":"sns.catplot(x = \"cut\", y = \"price\", hue = \"color\", kind = \"point\", data = df); #burda rengin etkisini gormek icim\n                                    #hue ye color i atayip bir catplot fonksiyonu ile grafik cizdirdik\n            #bu grafikten colorun cut ile incelendiginde etkili oldugunu yani fiyata etki edebilecegini cikarabiliriz","889363d2":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","07661489":"df.describe().T","4d609f0d":"df[\"sex\"].value_counts()  #veri setini tanimak cok onemli ondan once degiskenlerin frekansini buluyorum hepsi icin\n                          #cunku eger frekanslari bilirsem yorum yapmak, islem uygulamak daha kolay olur","bfdc8ea5":"df[\"smoker\"].value_counts()","48fc687d":"df[\"day\"].value_counts()","53203386":"df[\"time\"].value_counts()","c990449b":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","adb9e251":"sns.boxplot(x = df[\"total_bill\"]); # kutu grafigi ","e20d6772":"df.describe().T       #kutu grafiginin caprazlamalarini yapicaz\n                     #nasil kullanabiliriz ona goz aticaz","ca867c8b":"#Hangi gunler daha fazla kazan\u0131yoruz?","5d9a0e29":"sns.boxplot(x = \"day\", y = \"total_bill\", data = df); #x eksenini gunler y eksenini faturanin olusturdugu bir box graph","3590c439":"#sabah m\u0131 ak\u015fam m\u0131 daha \u00e7ok kazan\u0131yoruz?","c9c1a6b9":"sns.boxplot(x = \"time\", y = \"total_bill\", data = df); #graphdan gorulecegi uzere aksamlari daha cok kazaniyoruz\n#box graph sayesinde kolayca hangi gun ne kadar para birakilmis gorebiliyoruz sadece x ve y eksenlerini ayarlamamiz gerekli","dbf72e81":"#kisi say\u0131s\u0131 kazanc","5775d895":"sns.boxplot(x = \"size\", y = \"total_bill\", data = df); #mantiken kisi sayisi arttikca genel olarak kazancda artiyoro","84b98252":"sns.boxplot(x = \"time\", y = \"total_bill\", hue = \"sex\", data = df); #burda yaptigim geceleri ve odenen tutari hesaba katmak\n\n#ama ayni anda odenen tutarlari (hue ile 3. bir boyut katarak) kadin mi erkek mi daha cok oduyor onu gosterdim","fb114c81":"sns.boxplot(x = \"day\", y = \"total_bill\", hue = \"sex\", data = df); \n#yukardakinin aynisinin gun versiyonu\n#hesap odemede kadin mi erkek mi daha baskin gorulebiliyor","c1ce609c":"df.head() ","6f99faf5":"sns.catplot(y = \"total_bill\", kind = \"violin\", data = df);\n#box grafigine benzerdir violin graph dagilim anlaminda bize bilgi sunar (yogunluk ve kutu graphinin kesisimi diyebiliriz)","c6cbb6a5":"sns.catplot(x= \"day\", y = \"total_bill\", kind = \"violin\", data = df);","94ee94fc":"sns.catplot(x= \"day\", y = \"total_bill\", hue = \"sex\",kind = \"violin\", data = df);\n#burda kirilim yaptik yani boyut ekleme cinsiyet boyutu ekleyerek (3. bir boyut) oyle gozlemledik","78c01170":"import seaborn as sns              #korelasyon degiskenler arasindaki iliskiyi ifade eden istatistiksel terimdir\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","3e42f293":"sns.scatterplot(x = \"total_bill\", y = \"tip\", data = df); #burda faturayla bahsis arasindaki bagi gormus olduk \n                                                    #oldukca guzel yorumlanabilecek bir grafik olusmus oldu gozlem icin\n#2 degisken arasindaki iliskiyi ifade etmede en cok kullanilanlardan scatter plot dir  ","4dba7fbb":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\",data = df); #burda kirilim ekledik 3. bir boyut oda zaman","ba5c11a6":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"time\", style = \"time\", data = df); #burda style belirtiyoruz\n                                                                 #ozel olarak hue ya atadigimiz kirilim durumuna gore","63265f06":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue = \"day\", style = \"day\", data = df); #burda kirilim day\n                                                                #style ise day oldu bu sefer stili degissin diye","96f653ea":"sns.scatterplot(x = \"total_bill\", y = \"tip\", hue= \"size\", size = \"size\", data = df); #burda kirilimi size yaptik\n                                                                    #size=\"size\" yaptik buyukluk kucukluk belirtti\n                                                                    #burdaki size argumani onemli bir gorsel destek oldu","c750d66d":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","f9dae3fe":"import matplotlib.pyplot as plt","1478de8b":"sns.lmplot(x = \"total_bill\", y = \"tip\", data = df); #2 degisken arasindaki dogrusal iliski kolayca gosterildi bu sekilde","97e89df0":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", data = df); #3. bir boyut(kirilim) ekledik sigara icme durumu \n\n#kisaca bu dogrulari olustururken baska bir kategoriyide goz onunde bulundur dedik","7aa205cf":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", data = df); \n#burdada col argumani ile 2 farkli grafige bolduk cunku time dan 2 tane var ()","5a2a3d26":"sns.lmplot(x = \"total_bill\", y = \"tip\", hue = \"smoker\", col = \"time\", row = \"sex\", data = df); \n#burdada row ile 2 cinsiyet oldugu icin tablolar kadin ve erkek icin bakildi yeni bir boyut ekledik kisaca gene\n#burada satirlara gore cinsiyeti, sutunlara g\u00f6rede time i okumamiz gerekiyor\n#oldukca onemli bu yeni boyutlar","69bbe3ca":"import seaborn as sns; \niris = sns.load_dataset(\"iris\") #cicek turleriyle ilgili veri seti\ndf = iris.copy()\ndf.head()","bf6c1342":"df.dtypes","a072af42":"df.shape","631797c2":"sns.pairplot(df);       #pairplot tum degiskenlerin(4 tane var burada) birbirleri arasindaki iliskileri gorsellestirir\n                        #ise yarar bir graph yontemi","af3918ca":"sns.pairplot(df, hue = \"species\"); #kategorik bir degiskeni boyut olarak ekledik buraya \n                                   #turler degiskenini boyut olarak ekledik","7da6056e":"df.species.value_counts()   #burdan gorulecegi uzere 3 tip degisken turu var assagida markers atarken 3 tane atamam lazim\n                            #yoska hata verir","f3bfbc56":"sns.pairplot(df, hue = \"species\", markers = [\"o\",\"s\",\"D\"]); #burdada tek yaptigimiz her tur icin isaretci ekliyoruz\n","502bb06b":"sns.pairplot(df, kind = \"reg\", hue = \"species\"); #burda grafige dogru ekleme islemi her birisine bir dogru ekledik\n                                                # kind=\"reg\" ile dogru ekleyebiliriz","88bac211":"import seaborn as sns\nflights = sns.load_dataset('flights') #yillara gore yolcu sayilarinin verildigi bir veri seti\ndf = flights.copy()\ndf.head()","d6636686":"df.shape","6f8faf09":"df[\"passengers\"].describe()","ab704bf8":"df = df.pivot(\"month\", \"year\", \"passengers\"); #bu islemi yapmadan heatmap hata verir daha yapisal bir forma getirmemiz\n                                              #lazim (pivot tablo islemi)\n    #burada x=month y=year degisken ise passengers haline getirilmis oldu","3aa58507":"df","e2e4dec0":"sns.heatmap(df);         #sag taraftaki renkler yolcu sayisini gosteriyor goruldugu uzere yillar gectikce yolcu sayisi\n                        #artmis ucak daha fazla tercih edilmeye baslanmis, en cok uculan ayda July(temmuz)","6b26c0d6":"sns.heatmap(df, annot = True, fmt = \"d\"); #bu sekilde annot=true fmt=\"d\" ile sayilari getirebiliriz istersek","349888fb":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5); #linewidths argumani ise kutular arasina cizgi ceker","b0304f5a":"sns.heatmap(df, annot = True, fmt = \"d\", linewidths = .5, cbar = False); \n\n                                #cbari(color bar,renk paleti) acip kapatma islemide cbar=True,False\n                                #ile yapilir genelde kaldirilmaz,kaldirilmasi dogru degil okunma acisindan gerekli","07a3d7ac":"import seaborn as sns\nfmri = sns.load_dataset(\"fmri\")\ndf = fmri.copy()\ndf.head()","78e4290e":"df.shape #1064 gozlem birimi, 5 tane gozel turu var","526c70ae":"df[\"timepoint\"].describe()","6343e693":"df[\"signal\"].describe()","4c457752":"df.groupby(\"timepoint\")[\"signal\"].count() \n                                        #burda yapilan gelen sinyallar ayni zaman noktalarindami gelmis onu gozlemliyoruz\n                                    #gorulecegi uzere her bir zaman noktasinda esit sinyal alinmistir","56bd2c22":"df.groupby(\"signal\").count()","e8f333fa":"df.groupby(\"timepoint\")[\"signal\"].describe() #timepointe gore gruplandirilmis sinyal degerlerinin describe ile \n                    #genel bilgilerine goz attik kisaca grafik olusturmadan once bir veri setini tanimaya calistik","c9aa06bb":"sns.lineplot(x = \"timepoint\", y = \"signal\", data = df);","02eb6ead":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", data = df); #caprazlama islemi yapiyoruz 3. boyut olarak eventi\n                                                                       #ekledik","aae24c8f":"sns.lineplot(x = \"timepoint\", y = \"signal\", hue = \"event\", style = \"event\", data = df); #burda style argumani ile ozellik\n                                                                        #ekledik cizik cizik oldu ayrim yaptigi icin","7744c097":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"event\", \n             style = \"event\", \n             markers = True,  dashes = False, data = df); #markers ekledik ve dashes argumani ekledik","f64f162f":"sns.lineplot(x = \"timepoint\", \n             y = \"signal\", \n             hue = \"region\",  #1 boyut daha ekledik, region boyutu ekledik\n             style = \"event\",  \n             data = df);","62f77544":"!pip install pandas_datareader\nimport pandas_datareader as pr","331d4e43":"df = pr.get_data_yahoo(\"AAPL\", start = \"2016-01-01\", end = \"2019-08-25\")","e6bfe18a":"df.head()","11d4d85e":"df.shape","716adb48":"kapanis = df[\"Close\"]","d54286a2":"kapanis.head()","c7e41502":"kapanis.plot();","61531dab":"kapanis.index","11318bd1":"kapanis.index = pd.DatetimeIndex(kapanis.index)","83dbd8f3":"kapanis.head()","116a45ae":"kapanis.plot();","533f02a8":"**Veri Setine H\u0131zl\u0131 Bak\u0131\u015f**","1c86f9c1":"## \u00c7aprazlamalar","d40e276c":"## Histogram ve Yo\u011funluk","b77fcd21":"# Korelasyon Grafikleri","f6a33c4c":"**Veri Setine H\u0131zl\u0131 Bak\u0131\u015f**","ded717dd":"## Boxplot","4b779da5":"## Barplot","47b6e3ed":"# Korelasyon Grafikleri","cba83506":"## \u00c7aprazlamalar","8770bb2c":"# Da\u011f\u0131l\u0131m Grafikleri","76093ad6":"### Sadece Kategorik De\u011fi\u015fkenler ve \u00d6zetleri","aa573041":"# Heatmap","659dcbdf":"## Boxplot","7a074d5f":"# Ilk Grafik Olusturma","687aad16":"## S\u00fcrekli De\u011fi\u015fken \u00d6zetleri","04811334":"## \u00c7aprazlamalar","c0d79b78":"# Basit Zaman Serisi Grafi\u011fi","71fb3437":"## Veri Seti Hikayesi ve Yap\u0131s\u0131n\u0131n \u0130ncelenmesi","8fe14f2d":"## S\u00fcrekli De\u011fi\u015fken \u00d6zetleri","c647214c":"# B\u00f6l\u00fcm Sonu De\u011ferlendirmesi","9b0aae10":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131na ve S\u0131n\u0131f Say\u0131s\u0131na Eri\u015fmek","52a7d403":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","ed4b2d20":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","85a4f882":"# Ilk Grafik Olusturma","a7401a11":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","4ab298c8":"## \u00c7aprazlamalar","2afbb24b":"## Violin","4d2d2c59":"## Eksik De\u011ferlerin \u0130ncelenmesi","1f818743":"## Violin","c5a3b87e":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131n\u0131n Frekanslar\u0131na Eri\u015fmek","e06e6e8b":"# Da\u011f\u0131l\u0131m Grafikleri","d996955f":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131na ve S\u0131n\u0131f Say\u0131s\u0131na Eri\u015fmek","7eb81e7b":"# Heatmap","c9ce3faf":"## Veri Setinin Betimlenmesi","046be53c":"Da\u011f\u0131l\u0131m Grafikleri\n\nKorelasyon Grafikleri\n\n\u00c7izgi Grafik\n\nBasit Zaman Serisi ","86d78d09":"# Heatmap","34d062c6":"## \u00c7aprazlamalar","7040b71a":"Da\u011f\u0131l\u0131m Grafikleri\n\nKorelasyon Grafikleri\n\n\u00c7izgi Grafik\n\nBasit Zaman Serisi ","987e7d15":"## \u00c7izgi Grafik ve \u00c7aprazlamalar","37f03d47":"## \u00c7aprazlamalar","1e46051a":"## Barplot","6a1ce047":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131n\u0131n Frekanslar\u0131na Eri\u015fmek","ec517338":"## \u00c7aprazlamalar","a735af62":"# Ilk Grafik Olusturma","5723edf8":"## \u00c7aprazlamalar","d2809741":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131n\u0131n Frekanslar\u0131na Eri\u015fmek","0d4ab966":"## Veri Seti Hikayesi ve Yap\u0131s\u0131n\u0131n \u0130ncelenmesi","f301a7df":"### Veri Seti Hikayesi","2018fa1d":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","6cfa4774":"## Do\u011frusal \u0130li\u015fkinin G\u00f6sterilmesi","863f82eb":"## Kategorik De\u011fi\u015fken \u00d6zetleri","c60d1552":"## Barplot","05c0bf86":"## Veri Seti Hikayesi ve Yap\u0131s\u0131n\u0131n \u0130ncelenmesi","6d7ad5ca":"## Eksik De\u011ferlerin \u0130ncelenmesi","1ed32165":"## Boxplot","3667b8d8":"### Veri Seti Hikayesi","d496e334":"# Veriye \u0130lk Bak\u0131\u015f","305efcb5":"# Basit Zaman Serisi Grafi\u011fi","82756026":"# Veriye \u0130lk Bak\u0131\u015f","ff6c1d1f":"## Kategorik De\u011fi\u015fken \u00d6zetleri","bee5ec4b":"## Scatterplot Matrisi","5a4bc3b3":"## Do\u011frusal \u0130li\u015fkinin G\u00f6sterilmesi","c734e2cb":"## \u00c7aprazlamalar","cefecc4b":"## \u00c7aprazlamalar","e18ac7ad":"**Veri Seti Hikayesi** Burda yap\u0131lan veri setini tanimadir isleme baslamadan once veri setini taniyoruz\n\nprice: dolar cinsinde fiyat ($326\u2013$18,823)\n\ncarat: a\u011f\u0131rl\u0131k (0.2\u20135.01)\n\ncut: kalite (Fair, Good, Very Good, Premium, Ideal)\n\ncolor: renk (from J (worst) to D (best))\n\nclarity: temizli\u011fi, berrakl\u0131\u011f\u0131 (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))\n\nx: length in mm (0\u201310.74)\n\ny: width in mm (0\u201358.9)\n\nz: depth in mm (0\u201331.8)\n\ndepth: toplam derinlik y\u00fczdesi = z \/ mean(x, y) = 2 * z \/ (x + y) (43\u201379)\n\ntable: elmas\u0131n en geni\u015f noktas\u0131na g\u00f6re geni\u015fli\u011fi (43\u201395)","b28b90ae":"### Sadece Kategorik De\u011fi\u015fkenler ve \u00d6zetleri","11b53cea":"### Veri Seti Hikayesi","52784ef5":"## Histogram ve Yo\u011funluk","09178c75":"## \u00c7izgi Grafik ve \u00c7aprazlamalar","06e2d5f4":"## Veri Setinin Betimlenmesi","744027c3":"**Veri Seti Hikayesi** Burda yap\u0131lan veri setini tanimadir isleme baslamadan once veri setini taniyoruz\n\nprice: dolar cinsinde fiyat ($326\u2013$18,823)\n\ncarat: a\u011f\u0131rl\u0131k (0.2\u20135.01)\n\ncut: kalite (Fair, Good, Very Good, Premium, Ideal)\n\ncolor: renk (from J (worst) to D (best))\n\nclarity: temizli\u011fi, berrakl\u0131\u011f\u0131 (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))\n\nx: length in mm (0\u201310.74)\n\ny: width in mm (0\u201358.9)\n\nz: depth in mm (0\u201331.8)\n\ndepth: toplam derinlik y\u00fczdesi = z \/ mean(x, y) = 2 * z \/ (x + y) (43\u201379)\n\ntable: elmas\u0131n en geni\u015f noktas\u0131na g\u00f6re geni\u015fli\u011fi (43\u201395)","c45042f4":"## Scatterplot","20f51317":"## Violin","f3de0e9a":"# B\u00f6l\u00fcm Sonu De\u011ferlendirmesi","28480cf2":"## Veri Seti Hikayesi","f4e9f385":"# \u00c7izgi Grafik","87cbd080":"## \u00c7aprazlamalar","cf639905":"Da\u011f\u0131l\u0131m Grafikleri\n\nKorelasyon Grafikleri\n\n\u00c7izgi Grafik\n\nBasit Zaman Serisi ","e21ee5c0":"## Scatterplot","375af8b5":"## \u00c7aprazlamalar","96768cf0":"# Korelasyon Grafikleri","2badf7f6":"## Veri Seti Hikayesi","db178cc0":"## Scatterplot Matrisi","2e7af042":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","b0aca3d4":"## \u00c7aprazlamalar","082fa8a8":"# \u00c7izgi Grafik","37f80cc5":"## Veri Seti Hikayesi","ff4f6f70":"## Histogram ve Yo\u011funluk","11db5839":"## Boxplot","acf2f266":"total_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","3a692075":"## Eksik De\u011ferlerin \u0130ncelenmesi","e6a2ad01":"## S\u00fcrekli De\u011fi\u015fken \u00d6zetleri","1bbb2930":"## \u00c7aprazlamalar","13ded602":"## Boxplot","acc6607c":"# \u00c7izgi Grafik","bee16ba6":"## Scatterplot Matrisi","97a20349":"## Do\u011frusal \u0130li\u015fkinin G\u00f6sterilmesi","128e4d93":"# B\u00f6l\u00fcm Sonu De\u011ferlendirmesi","36eb0c43":"## \u00c7izgi Grafik ve \u00c7aprazlamalar","73ffeb52":"## Veri Seti Hikayesi","5ed0a043":"## Scatterplot","ac49a848":"## \u00c7aprazlamalar","bed12287":"**Veri Setine H\u0131zl\u0131 Bak\u0131\u015f**","0b30dd85":"## Veri Seti Hikayesi","ab2db222":"**Veri Seti Hikayesi** Burda yap\u0131lan veri setini tanimadir isleme baslamadan once veri setini taniyoruz\n\nprice: dolar cinsinde fiyat ($326\u2013$18,823)\n\ncarat: a\u011f\u0131rl\u0131k (0.2\u20135.01)\n\ncut: kalite (Fair, Good, Very Good, Premium, Ideal)\n\ncolor: renk (from J (worst) to D (best))\n\nclarity: temizli\u011fi, berrakl\u0131\u011f\u0131 (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))\n\nx: length in mm (0\u201310.74)\n\ny: width in mm (0\u201358.9)\n\nz: depth in mm (0\u201331.8)\n\ndepth: toplam derinlik y\u00fczdesi = z \/ mean(x, y) = 2 * z \/ (x + y) (43\u201379)\n\ntable: elmas\u0131n en geni\u015f noktas\u0131na g\u00f6re geni\u015fli\u011fi (43\u201395)","e061a0f8":"### Kategorik De\u011fi\u015fkenin S\u0131n\u0131flar\u0131na ve S\u0131n\u0131f Say\u0131s\u0131na Eri\u015fmek","48069172":"# Basit Zaman Serisi Grafi\u011fi","9042027a":"# Da\u011f\u0131l\u0131m Grafikleri","0966ed54":"## Kategorik De\u011fi\u015fken \u00d6zetleri","00527185":"## Boxplot","1c0dae14":"### Sadece Kategorik De\u011fi\u015fkenler ve \u00d6zetleri","7a003dd6":"## Veri Setinin Betimlenmesi","404c6a64":"## Veri Seti Hikayesi"}}