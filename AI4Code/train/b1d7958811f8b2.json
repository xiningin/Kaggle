{"cell_type":{"25c83964":"code","5aade994":"code","9aff6168":"code","fe2f4b24":"code","484d3b38":"code","cdde9a68":"code","edbc33d3":"code","f9f438a5":"code","d5473c9a":"code","ada8336e":"code","193f02f9":"code","3d6cb4b5":"code","b4680fde":"code","6dd9bae5":"code","ee3a6cc9":"code","4479c0bc":"code","b3172e60":"code","fc2460dc":"code","03f4e932":"code","0b18e011":"code","032ffe36":"code","d9f0126b":"markdown","fe5c8097":"markdown","4be7e81b":"markdown","a8f99cb1":"markdown","da6cb203":"markdown","170e2cbe":"markdown","fae9043a":"markdown","39a0ba6f":"markdown","2c9a8267":"markdown","efc60305":"markdown","2d02cf44":"markdown","85db21c2":"markdown","efb1d72a":"markdown","68b38da4":"markdown","93d77be2":"markdown","d79d8ef9":"markdown"},"source":{"25c83964":"import numpy as np   #Linear algera Library\nimport pandas as pd\nimport matplotlib.pyplot as plt  #to plot graphs\nimport seaborn as sns  #to plot graphs\nfrom sklearn.linear_model import LinearRegression   #for linear regression model\nsns.set()  #setting seaborn as default \nimport math\n\nimport warnings\nwarnings.filterwarnings('ignore')","5aade994":"data=pd.read_csv(\"..\/input\/nsetatadataset\/NSE-Tata-Global-Beverages-Limited.csv\")   #reads the input data\ndata.head()   #displays the first five rows","9aff6168":"data.info()","fe2f4b24":"data.describe(include ='all')   #parameter include=all will display NaN values as well","484d3b38":"data.isnull().sum() # No null values","cdde9a68":"data.head()","edbc33d3":"sns.pairplot(data)\nplt.show()","f9f438a5":"#  we use open,high,low,last to predict  close price\nx=data[['High','Low','Last','Open','Total Trade Quantity','Turnover (Lacs)']].values   #input\ny=data[['Close']].values   #output","d5473c9a":"\nfrom sklearn.model_selection import train_test_split \n#split to train and test data\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2,random_state=0)","ada8336e":"#using linear regression\nlm=LinearRegression()\nlm.fit(x_train,y_train)","193f02f9":"lm.coef_","3d6cb4b5":"#values from 0 to 1\n#0 model explain None of the variability\n#1 model explain Entire of the variability\nlm.score(x_train,y_train)","b4680fde":"#predict the output(predictions) using the test data\npredictions = lm.predict(x_test)","6dd9bae5":"from sklearn.metrics import r2_score \nr2_score(y_test, predictions)","ee3a6cc9":"#load actual and predecited values side by side\ndframe=pd.DataFrame({'actual':y_test.flatten(),'Predicted':predictions.flatten()}) \n#flatten toget single axis of data (1 dimension only)","4479c0bc":"dframe.head(15)","b3172e60":"graph =dframe.head(10)\ngraph.plot(kind='bar')\nplt.title('Actual vs Predicted')\nplt.ylabel('Closing price')","fc2460dc":"#using scatter plot compare the actual and predicted data\nfig = plt.figure()\nplt.scatter(y_test,predictions)\nplt.title('Actual versus Prediction ')\nplt.xlabel('Actual', fontsize=20)                         \nplt.ylabel('Predicted', fontsize=20)                         ","03f4e932":"#trying the same with a reg plot(optonal)\nsns.regplot(y_test,predictions)\nplt.title('Actual versus Prediction ')\nplt.xlabel('Actual', fontsize=20)                         \nplt.ylabel('Predicted', fontsize=20)   ","0b18e011":"import math\nfrom sklearn import metrics","032ffe36":"\n#metrics to find accuracy of continous variables\nprint('Mean Abs value:' ,metrics.mean_absolute_error(y_test,predictions))\nprint('Mean squared value:',metrics.mean_squared_error(y_test,predictions))\nprint('root mean squared error value:',math.sqrt(metrics.mean_squared_error(y_test,predictions)))","d9f0126b":"## 11. Plot Graph","fe5c8097":"## 2. Read the input data","4be7e81b":"# Predict the stock Price using Linear Regression","a8f99cb1":"## 9. check R squared value","da6cb203":"The root-mean-square deviation (RMSD) or root-mean-square error (RMSE) is a frequently used measure of the differences between values (sample or population values) predicted by a model or an estimator and the values observed\nRMSD is always non-negative, and a value of 0 (almost never achieved in practice) would indicate a perfect fit to the data. In general, a lower RMSD is better than a higher one.\n\nmean_squared_error measures the average squared difference between the estimated values and the actual value.The fact that MSE is almost always strictly positive (and not zero) and values closer to zero are better.","170e2cbe":"## 10. Compare the actual and predicted values","fae9043a":"## 5. Data Preparation","39a0ba6f":"## 6. See the plots on a graph ","2c9a8267":"#### This is a simple approach where we are trying to predict the stock prices (output\/target) based on different features. I am not taking date into consideration. we will be predicting the closing price and comparing it with actual results and then plot the same on a graph","efc60305":"## 8. Run model using Test data","2d02cf44":"## 1. Import the required libraries","85db21c2":"## 7. Split data into Training and Testing data","efb1d72a":"It is seen that there are no categorical or dummy values present","68b38da4":"## 4. Check for NULL values","93d77be2":"## 12. Metrics to test accuracy","d79d8ef9":"## 3. Understand your data"}}