{"cell_type":{"38919ca6":"code","b0b26340":"code","ec5e4abc":"code","21b4d98b":"code","69994a36":"code","412d73dd":"code","87fa80f7":"code","17e6627b":"code","3eff8157":"code","5a565427":"code","05e7c3cc":"code","62e623ed":"code","893cb5af":"code","6cfd92c9":"code","36488a5e":"code","f1cb88e4":"code","9e443434":"code","86359a1e":"code","4baf18f3":"code","dca9b85f":"markdown","dcd0d135":"markdown","efc54085":"markdown","b1e743d9":"markdown","b7956e15":"markdown","d37c2e50":"markdown","a504e3b7":"markdown","fb861706":"markdown","39ed86e1":"markdown","8a90a537":"markdown","680f2b09":"markdown"},"source":{"38919ca6":"import pandas as pd\nimport numpy as np","b0b26340":"movies = pd.read_csv(\"\/kaggle\/input\/tmdb-movie-metadata\/tmdb_5000_movies.csv\")\nmovies.head()","ec5e4abc":"credits = pd.read_csv(\"\/kaggle\/input\/tmdb-movie-metadata\/tmdb_5000_credits.csv\")\ncredits.head()","21b4d98b":"movies.shape, credits.shape","69994a36":"credits_renamed = credits.rename(index = str, columns = {\"movie_id\":\"id\"})\nmerged_dataframe = pd.merge(movies,credits_renamed, on = \"id\")\nmerged_dataframe.head()","412d73dd":"merged_dataframe.shape","87fa80f7":"merged_dataframe_cleaned = merged_dataframe.drop([\"homepage\",\"title_x\",\"title_y\",\"status\",\"production_countries\"], axis=1)","17e6627b":"merged_dataframe_cleaned.info()","3eff8157":"merged_dataframe_cleaned.head()","5a565427":"merged_dataframe_cleaned.head(1)","05e7c3cc":"merged_dataframe_cleaned[\"overview\"]","62e623ed":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfy = TfidfVectorizer(min_df=3, max_features = None, strip_accents=\"unicode\",\n                      analyzer=\"word\", token_pattern=r\"\\w{1,}\", ngram_range=(1,3), stop_words = \"english\")\ntfv_matrix = tfy.fit_transform(merged_dataframe_cleaned[\"overview\"].values.astype(str))\nprint(tfv_matrix)\nprint(tfv_matrix.shape)","893cb5af":"from sklearn.metrics.pairwise import sigmoid_kernel\nsig_ker = sigmoid_kernel(tfv_matrix, tfv_matrix)\nsig_ker","6cfd92c9":"indices = pd.Series(merged_dataframe_cleaned.index, merged_dataframe_cleaned[\"original_title\"]).drop_duplicates(keep=\"first\",inplace = False)\nindices","36488a5e":"indices.shape","f1cb88e4":"indices[\"John Carter\"], sig_ker[indices[\"John Carter\"]]","9e443434":" len(sig_ker[indices[\"John Carter\"]])","86359a1e":"def recommend_movie(title, sig=sig_ker):\n    index = indices[title]\n    sig_scores = list(enumerate(sig[index]))\n    sig_scores = sorted(sig_scores, key = lambda x: x[1],reverse=True)\n    movie_indices = [i[0] for i in sig_scores]\n    sig_scores = sig_scores[1:11]\n    return merged_dataframe_cleaned[\"original_title\"].iloc[movie_indices]","4baf18f3":"recommend_movie(\"Avatar\")","dca9b85f":"#### Building a series reversing indices and movie titles","dcd0d135":"<div style = \"text-align:center;\">\n    <img style = \"width:70%;\"  src = \"https:\/\/lh3.googleusercontent.com\/proxy\/n8SXNVIZEaY35qrZsELDJUKUgo4im-2NAkj7nVV0Wb_2qAZ1UIivF9Yc_mBiXbK0TDgUGkROFQdw7OMOocBhFBCZTIbKNpIN4olH_P1ERjgkn9A0vO5Ng58\"\/>\n    <\/div>","efc54085":"<p style=\"font-weight:bold;font-size:20px;\"> Thank you for looking my notebook, see you later \ud83d\udc4b  <\/p>","b1e743d9":"#### Overview column","b7956e15":"#### Shape of dataset","d37c2e50":"#### Using sigmoid kernel function on tfidf vectorization ","a504e3b7":"#### Shape of merged dataset","fb861706":"#### Merging dataframe","39ed86e1":"#### Defining function for recomendation","8a90a537":"#### import Tfidf vectorization","680f2b09":"#### Droping the columns  \"homepage\",\"title_x\",\"title_y\",\"status\",\"productions_countries\""}}