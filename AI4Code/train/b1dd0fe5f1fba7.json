{"cell_type":{"aff6b070":"code","82233ea3":"code","eabb8ed5":"code","ab637e56":"code","77e7a492":"code","27d0ee04":"code","55392ab5":"code","ff971a0f":"markdown","a056636b":"markdown","09264e2e":"markdown","b1d70649":"markdown","b844dd59":"markdown","38845024":"markdown"},"source":{"aff6b070":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","82233ea3":"cal = pd.read_csv(\"..\/input\/m5-forecasting-accuracy\/calendar.csv\")\nstv = pd.read_csv(\"..\/input\/m5-forecasting-accuracy\/sales_train_validation.csv\")","eabb8ed5":"# sales_train_validation\u306e\u884c\u3092\u65e5\u7cfb\u5217\u306b\u3059\u308b\nTMP_stv = stv.set_index(\"id\")\nTMP_stv = TMP_stv.iloc[:, 5:].T\nTMP_stv.reset_index(inplace=True)\nTMP_stv.rename(columns={\"index\":\"d\"}, inplace=True)\nprint(TMP_stv.shape)\nTMP_stv.head()","ab637e56":"# \u30ab\u30ec\u30f3\u30c0\u30fc\u60c5\u5831cal\u3068\u8ca9\u58f2\u6570\u60c5\u5831TMP_stv\u3092\u30de\u30fc\u30b8\u3057\u3066\u3072\u3068\u3064\u306eDF\u306b\u3059\u308b\ncal_stv = pd.merge(cal, TMP_stv, on=\"d\")\nprint(cal_stv.shape)\ncal_stv.head()","77e7a492":"# California\u306e\u307f\u306eDF \"CAdf\"\nCAcol = cal_stv.loc[:, cal_stv.columns.str.contains(\"CA\")]\n\ndf = cal_stv.loc[:, \n                 [\"date\", \"wm_yr_wk\", \"weekday\", \"wday\", \"month\", \"year\", \"d\", \"event_name_1\", \"event_type_1\"]]\n\nCAdf = pd.concat([df, CAcol], axis=1)\nCAdf.head()","27d0ee04":"from datetime import datetime as dt\n\n# \"date\"\u5217\u3092\u5e74\u6708\u65e5\u3067\u8aad\u307f\u8fbc\u3080\nCAdf[\"date\"] = pd.to_datetime(CAdf[\"date\"])\n\n# State holiday\u306e\u65e5\u306e\"wday\"\u30920\u306b\u3059\u308b\nCAdf.loc[CAdf[\"date\"].apply(lambda x: x in [dt(2011,3,31), dt(2012,3,31), dt(2013,3,31), dt(2014,3,31), \n                                        dt(2015,3,31), dt(2016,3,31), dt(2015,11,27), dt(2011,11,25)]), \n       \"wday\"] = 0\n\nCAdf[CAdf[\"date\"] == dt(2011,3,31)]","55392ab5":"CAdf.loc[(~CAdf[\"event_name_1\"].isnull()), \"wday\"] = 0\nCAdf[CAdf[\"wday\"] == 0]","ff971a0f":"### Wisconsin\u5dde\u306e\u795d\u65e5\n* Christmas Eve\uff1a12\/24?\n* New Year's Eve\uff1a12\/31","a056636b":"### California\u5dde\u306e\u795d\u65e5\n* Cesar Chavez Day\uff1a3\/31\n* Day after Thanksgiving\uff1a15\/11\/27\n* Day after Thanksgiving\uff1a11&16\/11\/25","09264e2e":"## **\u30a2\u30e1\u30ea\u30ab\u306b\u306f\u9023\u90a6\u653f\u5e9c\u306e\u795d\u65e5\u306e\u4ed6\u306b\u5dde\u653f\u5e9c\u72ec\u81ea\u306e\u795d\u65e5\u304c\u3042\u308b\u306e\u3067\u6d17\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u305f**\n\u9023\u90a6\u653f\u5e9c\u306e\u795d\u65e5(Federal Holidays)\u306f \"event_name_1\" \u3068 \"event_name_2\" \u306b\u7db2\u7f85\u3055\u308c\u3066\u308b\u306e\u3067  \n\u5f53\u6295\u7a3f\u306f**\u5dde\u653f\u5e9c\u306e\u795d\u65e5\uff08State Holidays\uff09\u306e\u307f\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u307e\u3059**  \n!!ATTN!!  \n\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u305f\u3082\u306e\u3067\u3042\u3063\u3066\u6b63\u78ba\u3055\u306e\u4fdd\u8a3c\u306f\u81f4\u3057\u304b\u306d\u307e\u3059","b1d70649":"### Texas\u5dde\u306e\u795d\u65e5\n* Confederate Heroes' Day\uff1a1\/19\n* Texas Independence Day\uff1a3\/2\n* Cesar Chavez Day\uff1a3\/31?\n* San Jacinto Day\uff1a4\/21\n* Emancipation Day\uff1a6\/19\n* Lyndon Baines Johnson Day\uff1a8\/27\n* Day after Thanksgiving\uff1a11\/27?\n* Christmas Eve\uff1a12\/24?\n* Boxing Day\uff1a15\u301c16\/12\/26","b844dd59":"### California\u5dde\u306eDF\u306bStateHolidays\u3092\u53cd\u6620","38845024":"### \u3064\u3044\u3067\u306b \"event_name_1\"\u2260NaN \u306e\u65e5\u306e \"wday\" \u3082\uff10\u306b\u3057\u3066\u304a\u304f\n\u5e73\u65e5\u3068\u4f11\u65e5\u3067\u4ed5\u5206\u3051\u308b\u3068\u304d\u3001\"wday\">=3\uff1a\u5e73\u65e5\uff5c\"wday\"<=2\uff1a\u4f11\u65e5 \u3067\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b  \n\u203b \"event_name_2\" \u306f \"event_name_1\" \u306b\u5168\u3066\u5185\u5305\u3055\u308c\u3066\u3044\u308b"}}