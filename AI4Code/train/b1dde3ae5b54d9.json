{"cell_type":{"47eb6398":"code","06635826":"code","e3e7a3d3":"code","47767356":"code","5470a32e":"code","fc8a6570":"code","75f329b7":"code","a89866bd":"code","6053edfe":"code","f48bf5e9":"code","a7daade8":"code","fcda29e3":"code","2a400649":"code","2eee13d7":"code","1bb45183":"code","c12cac69":"code","19ea8b5c":"code","8ec5647e":"code","5c071ab0":"code","3bdb6857":"code","a4b04c59":"code","90ae08a9":"code","54219a2b":"code","8fe07fd3":"code","38347a58":"code","21c3c96b":"code","d5a87c79":"code","63590138":"code","3654b423":"code","86b6890f":"code","dca11952":"code","ffa3934c":"code","f3608ca8":"code","5cdfc984":"code","d053cc66":"code","c44937c7":"code","56a77734":"code","32b5402d":"code","eb78ae29":"code","9c3a8ac4":"code","f0966a72":"code","b846c792":"code","a1fede6f":"code","cee7adb6":"code","b46cd09b":"code","d4736d2f":"code","51e07516":"code","d93486ea":"code","524a8461":"code","de577449":"code","562387d5":"code","e9c0d492":"code","79ac865e":"code","284b2a0e":"code","46363e35":"code","1d3ecc03":"code","90dc7499":"code","b1ff219e":"code","9ca910da":"code","e5413d30":"code","10c20c46":"code","f93a735c":"code","dadeba72":"code","59b6d0c6":"code","ea7cfb27":"code","523f3bc7":"code","0fe174bf":"code","25c4cdae":"markdown","78cebea8":"markdown","275a165e":"markdown","5ee8957c":"markdown","9fed9765":"markdown","9e450023":"markdown","3287b49f":"markdown","c4a4f689":"markdown","2017c629":"markdown","dd28f0a8":"markdown","46db19a9":"markdown","bc43bc47":"markdown","b5864e8c":"markdown","e0b7f633":"markdown","d32b48f9":"markdown","2adb841a":"markdown","8ff0cd49":"markdown","25021eab":"markdown","4d10025a":"markdown","c5ac1be5":"markdown","d728c3e4":"markdown","d067887a":"markdown","577daae9":"markdown","73b6d401":"markdown","6a91bd2d":"markdown","c592c729":"markdown","a486ebd9":"markdown","aec9e2dc":"markdown","c4634049":"markdown","57cd369c":"markdown","bc697ad0":"markdown","a3066360":"markdown","86d0244d":"markdown","900bfb79":"markdown","6b0c5f15":"markdown","328489fb":"markdown","721f71bf":"markdown","a811b682":"markdown","6887b940":"markdown","0af1ab7a":"markdown","067aba60":"markdown","d52c176a":"markdown","d653fcdf":"markdown","bb8f53a0":"markdown","5ea1253c":"markdown","fde5c73f":"markdown","772d97cc":"markdown"},"source":{"47eb6398":"import os","06635826":"train_img_dir = '..\/input\/train\/images\/'\ntrain_mask_dir = '..\/input\/train\/masks\/'\ntest_img_dir = '..\/input\/test\/images\/'","e3e7a3d3":"train_img_names = [x.split('.')[0] for x in os.listdir(train_img_dir)]","47767356":"train_img_names[:5],len(train_img_names)","5470a32e":"train_img_dict_i_to_names = dict()\ntrain_img_dict_names_to_i = dict()\nfor i in range(len(train_img_names)):\n    train_img_dict_i_to_names[i] = train_img_names[i]\n    train_img_dict_names_to_i[train_img_names[i]] = i","fc8a6570":"from skimage.data import imread","75f329b7":"train_img_shape = imread(train_img_dir + train_img_names[0]+'.png').shape\ntrain_mask_shape = imread(train_mask_dir + train_img_names[0]+'.png').shape","a89866bd":"import numpy as np","6053edfe":"train_img = np.zeros((len(train_img_names), train_img_shape[0], train_img_shape[1], train_img_shape[2]))\ntrain_mask = np.zeros((len(train_img_names), train_mask_shape[0], train_mask_shape[1]))","f48bf5e9":"for i in range(len(train_img_names)):\n    train_img[i] = i\n    train_mask[i] = i\n    train_img[i,:,:,:] = imread(train_img_dir + train_img_names[i]+'.png')\n    train_mask[i,:,:] = imread(train_mask_dir + train_img_names[i]+'.png')","a7daade8":"train_img.shape,train_mask.shape","fcda29e3":"train_img[50,:,:,0],train_mask[50,:,:]","2a400649":"train_img_mono = np.zeros((len(train_img_names), train_img_shape[0], train_img_shape[1]))","2eee13d7":"train_img_mono = train_img[:,:,:,0]","1bb45183":"train_img_mono.shape","c12cac69":"train_mask_8bit = np.zeros((train_mask.shape[0],train_mask.shape[1],train_mask.shape[1]))","19ea8b5c":"for i in range(len(train_img_names)):\n    train_mask_8bit[i,:,:]= np.maximum(train_mask[i,:,:]\/255-2,0)","8ec5647e":"train_mask_8bit[50,:,:]","5c071ab0":"import pandas as pd","3bdb6857":"train_dir = '..\/input\/'","a4b04c59":"train = pd.read_csv(train_dir + 'train.csv')","90ae08a9":"train.head(3)","54219a2b":"train.shape","8fe07fd3":"depths = pd.read_csv(train_dir + 'depths.csv')","38347a58":"depths.head(3)","21c3c96b":"depths.shape","d5a87c79":"train = pd.merge(train, depths, on='id',how='left')","63590138":"train.head(3)","3654b423":"train.shape","86b6890f":"def rle_to_mask(rle_list, SHAPE):\n    tmp_flat = np.zeros(SHAPE[0]*SHAPE[1])\n    if len(rle_list) == 1:\n        mask = np.reshape(tmp_flat, SHAPE).T\n    else:\n        strt = rle_list[::2]\n        length = rle_list[1::2]\n        for i,v in zip(strt,length):\n            tmp_flat[(int(i)-1):(int(i)-1)+int(v)] = 255\n        mask = np.reshape(tmp_flat, SHAPE).T\n    return mask","dca11952":"def calc_area_for_rle(rle_str):\n    rle_list = str(rle_str).split()\n    mask = rle_to_mask(rle_list, (101,101))\n    area = mask.sum()\/255.0\n    return area","ffa3934c":"train['area'] = train['rle_mask'].apply(calc_area_for_rle)","f3608ca8":"train.head(3)","5cdfc984":"def calc_mean_img(name):\n    i = train_img_dict_names_to_i[name]\n    img = train_img_mono[i]\n    mean = img.mean()\n    return mean","d053cc66":"train['mean'] = train['id'].apply(calc_mean_img)","c44937c7":"train.head(3)","56a77734":"def calc_std_img(name):\n    i = train_img_dict_names_to_i[name]\n    img = train_img_mono[i]\n    std = img.std()\n    return std","32b5402d":"train['std'] = train['id'].apply(calc_std_img)","eb78ae29":"train.head(3)","9c3a8ac4":"train_issalt = train[train['rle_mask'].notnull()]","f0966a72":"train_nosalt = train[train['rle_mask'].isnull()]","b846c792":"train.shape,train_issalt.shape,train_nosalt.shape","a1fede6f":"train_nosalt.shape[0]\/train.shape[0]","cee7adb6":"import matplotlib.pyplot as plt\n%matplotlib inline","b46cd09b":"fig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].hist(train['area'], bins=20)\naxes[0].set_title('train')\naxes[0].set_xlabel('area')\naxes[0].set_ylabel('frequency')\naxes[1].hist(train_issalt['area'], bins=20)\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel('area')\naxes[1].set_ylabel('frequency')\naxes[2].hist(train_nosalt['area'], bins=20)\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel('area')\naxes[2].set_ylabel('frequency')","d4736d2f":"small_area_image_list = train_issalt[train_issalt['area'] < 101*101*0.01]['id'].tolist()","51e07516":"small_area_image_list[:5],len(small_area_image_list)","d93486ea":"image_list = small_area_image_list[:5]\nfig, axes = plt.subplots(len(image_list), 2, figsize=(5,5*len(image_list)))\nfig.subplots_adjust(left=0.075,right=0.95,bottom=0.05,top=0.52,wspace=0.2,hspace=0.10)\nfor i in range(len(image_list)):\n    img = imread(train_img_dir + image_list[i] +'.png')\n    mask = imread(train_mask_dir + image_list[i] +'.png')\n    axes[i, 0].imshow(img)\n    axes[i, 1].imshow(mask)","524a8461":"large_area_image_list = train_issalt[train_issalt['area'] > 101*101*0.99]['id'].tolist()","de577449":"large_area_image_list[:5],len(large_area_image_list)","562387d5":"image_list = large_area_image_list[:5]\nfig, axes = plt.subplots(len(image_list), 2, figsize=(5,5*len(image_list)))\nfig.subplots_adjust(left=0.075,right=0.95,bottom=0.05,top=0.52,wspace=0.2,hspace=0.10)\nfor i in range(len(image_list)):\n    img = imread(train_img_dir + image_list[i] +'.png')\n    mask = imread(train_mask_dir + image_list[i] +'.png')\n    axes[i, 0].imshow(img)\n    axes[i, 1].imshow(mask)","e9c0d492":"fig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].hist(train['z'], bins=20)\naxes[0].set_title('train')\naxes[0].set_xlabel('depth')\naxes[0].set_ylabel('frequency')\naxes[0].set_ylim(0,350)\naxes[1].hist(train_issalt['z'], bins=20)\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel('depth')\naxes[1].set_ylabel('frequency')\naxes[1].set_ylim(0,350)\naxes[2].hist(train_nosalt['z'], bins=20)\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel('depth')\naxes[2].set_ylabel('frequency')\naxes[2].set_ylim(0,350)","79ac865e":"fig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].hist(train['mean'], bins=20)\naxes[0].set_title('train')\naxes[0].set_xlabel('brightness mean')\naxes[0].set_ylabel('frequency')\naxes[0].set_ylim(0,1000)\naxes[1].hist(train_issalt['mean'], bins=20)\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel('brightness mean')\naxes[1].set_ylabel('frequency')\naxes[1].set_ylim(0,1000)\naxes[2].hist(train_nosalt['mean'], bins=20)\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel('brightness mean')\naxes[2].set_ylabel('frequency')\naxes[2].set_ylim(0,1000)","284b2a0e":"fig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].hist(train['std'], bins=20)\naxes[0].set_title('train')\naxes[0].set_xlabel('brightness std')\naxes[0].set_ylabel('frequency')\naxes[0].set_ylim(0,500)\naxes[1].hist(train_issalt['std'], bins=20)\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel('brightness std')\naxes[1].set_ylabel('frequency')\naxes[1].set_ylim(0,500)\naxes[2].hist(train_nosalt['std'], bins=20)\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel('brightness std')\naxes[2].set_ylabel('frequency')\naxes[2].set_ylim(0,500)","46363e35":"xlabel = 'depth'\nylabel = 'area'\nx = 'z'\ny = 'area'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)","1d3ecc03":"xlabel = 'depth'\nylabel = 'brightness mean'\nx = 'z'\ny = 'mean'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[0].set_ylim(0,260)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[1].set_ylim(0,260)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)\naxes[2].set_ylim(0,260)","90dc7499":"xlabel = 'depth'\nylabel = 'brightness std'\nx = 'z'\ny = 'std'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[0].set_ylim(0,80)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[1].set_ylim(0,80)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)\naxes[2].set_ylim(0,80)","b1ff219e":"xlabel = 'area'\nylabel = 'brightness mean'\nx = 'area'\ny = 'mean'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[0].set_ylim(0,300)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[1].set_ylim(0,300)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)\naxes[2].set_ylim(0,300)","9ca910da":"xlabel = 'area'\nylabel = 'brightness std'\nx = 'area'\ny = 'std'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[0].set_ylim(0,80)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[1].set_ylim(0,80)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)\naxes[2].set_ylim(0,80)","e5413d30":"xlabel = 'brightness mean'\nylabel = 'brightness std'\nx = 'mean'\ny = 'std'\nfig, axes = plt.subplots(1, 3, figsize=(7*3,5))\naxes[0].scatter(train[x], train[y])\naxes[0].set_title('train')\naxes[0].set_xlabel(xlabel)\naxes[0].set_ylabel(ylabel)\naxes[0].set_ylim(0,80)\naxes[1].scatter(train_issalt[x], train_issalt[y])\naxes[1].set_title('train_issalt')\naxes[1].set_xlabel(xlabel)\naxes[1].set_ylabel(ylabel)\naxes[1].set_ylim(0,80)\naxes[2].scatter(train_nosalt[x], train_nosalt[y])\naxes[2].set_title('train_nosalt')\naxes[2].set_xlabel(xlabel)\naxes[2].set_ylabel(ylabel)\naxes[2].set_ylim(0,80)","10c20c46":"def suspicious_img_c(ids):\n    mask = imread(train_mask_dir + ids +'.png')\n    if len(np.unique(mask.sum(axis=1)))==1:\n        if mask.sum() == 101*101*65535:\n            return 0\n        elif mask.sum() == 0:\n            return 0\n        else:\n            return 1\n    else:\n        return 0","f93a735c":"def suspicious_img_r(ids):\n    mask = imread(train_mask_dir + ids +'.png')\n    if len(np.unique(mask.sum(axis=0)))==1:\n        if mask.sum() == 101*101*65535:\n            return 0\n        elif mask.sum() == 0:\n            return 0\n        else:\n            return 1\n    else:\n        return 0","dadeba72":"train['suspicious_c'] = train['id'].map(suspicious_img_c)\ntrain['suspicious_r'] = train['id'].map(suspicious_img_r)","59b6d0c6":"train_suspicious_c = train[train['suspicious_c']==1]\ntrain_suspicious_r = train[train['suspicious_r']==1]","ea7cfb27":"train_suspicious_c.shape[0], train_suspicious_r.shape[0]","523f3bc7":"train_suspicious_list = train_suspicious_c['id'].tolist()","0fe174bf":"image_list = train_suspicious_list[:30]\nfig, axes = plt.subplots(len(image_list), 2, figsize=(5,5*len(image_list)))\nfig.subplots_adjust(left=0.075,right=0.95,bottom=0.05,top=0.52,wspace=0.2,hspace=0.10)\nfor i in range(len(image_list)):\n    img = imread(train_img_dir + image_list[i] +'.png')\n    mask = imread(train_mask_dir + image_list[i] +'.png')\n    axes[i, 0].imshow(img)\n    axes[i, 1].imshow(mask)","25c4cdae":"comment\n- the depth distribution of is-salt is normal.\n- the depth distribution of no-salt is uniform.","78cebea8":"### load train.csv","275a165e":"create rle_decode (rle to mask) function\n- input: rle_list  [start, length, start, length, ...]\n- input: SHAPE (101,101)","5ee8957c":"### calculate color brightness mean and std","9fed9765":"display image and mask ( 5 examples of 56 images)","9e450023":"### visualize depth vs area","3287b49f":"### check almost salt images","c4a4f689":"comment\n- \ud83e\udd14","2017c629":"### calculate area","dd28f0a8":"create function","46db19a9":"### calculate no-salt ratio","bc43bc47":"comment\n- \ud83e\udd14\ud83e\udd14","b5864e8c":"### visualize color brightness mean histgram","e0b7f633":"comment\n- the brightness mean distribution of no-salt is very skewed.","d32b48f9":"display image and mask ( 5 examples of 171 images)","2adb841a":"### visualize brightness mean vs brightness std","8ff0cd49":"comment\n- \ud83e\udd14\ud83e\udd14\ud83e\udd14\ud83e\udd14\ud83e\udd14\ud83e\udd14","25021eab":"### set directory path","4d10025a":"comment\n- no-salt ratio is large","c5ac1be5":"# EDA! EDA!","d728c3e4":"### split train to is-salt or no-salt","d067887a":"### find suspicious images","577daae9":"### visualize area vs brightness mean","73b6d401":"### visualize depth vs brightness mean","6a91bd2d":"create function of brightness std per image\n- input:  file name of image","c592c729":"### change 16bit to 8bit for train_mask","a486ebd9":"### get train_image name list","aec9e2dc":"### merge","c4634049":"### visualize depth vs brightness std","57cd369c":"### load depths.csv","bc697ad0":"calculate brightness mean","a3066360":"### change color image to monochrome image","86d0244d":"calculate area","900bfb79":"comment\n- Can you predict a small area well?\n- How do you predict almost salt images?","6b0c5f15":"comment\n- no-salt image is more complicated than is-salt image.","328489fb":"get image list of small(<1%) area","721f71bf":"create function of area calculation per image\n- input: rle_str    'start lengh start length ...'\n- use rle_decode (rle to mask) function","a811b682":"### visualize color brightness std histgram","6887b940":"### create dict of  filename to number and number to filename  from train_image name list","0af1ab7a":"### visualize depth histgram","067aba60":"get image list of large(>99%) area","d52c176a":"### check small area images","d653fcdf":"create function of brightness mean per image\n- input:  file name of image","bb8f53a0":"# Preparation","5ea1253c":"### load train images and masks","fde5c73f":"### visualize area vs brightness std","772d97cc":"### visualize area histgram"}}