{"cell_type":{"30225b88":"code","4b9ba58e":"code","5005848b":"code","8309479f":"code","432e60a0":"code","6e755df8":"code","35e990c0":"code","ec98864e":"code","9644a109":"code","8e255610":"code","d32e12b1":"code","592e34a3":"code","aab22e23":"code","3cae5bcd":"code","96b215ee":"code","b7a9aad5":"code","8da4b970":"code","848c2fad":"code","7878ef58":"markdown","bf15c948":"markdown","6ade5175":"markdown","698aec97":"markdown","20aa813c":"markdown","a60e101c":"markdown","e2d92d02":"markdown","85e10d78":"markdown","00efa2c7":"markdown","4c632628":"markdown","4a1d90a5":"markdown","433a0b19":"markdown","38e954ef":"markdown","8f14b5d7":"markdown","6fd8ef2f":"markdown","c420794e":"markdown"},"source":{"30225b88":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","4b9ba58e":"df = pd.read_csv('..\/input\/basketball\/basketball_stat.csv')","5005848b":"df.head()","8309479f":"# check how many position there is\ndf.Pos.value_counts()","432e60a0":"sns.lmplot('STL', '2P', data=df, fit_reg=False, # x, y, data, line\n          scatter_kws={\"s\":150}, # size of dot\n          markers=[\"o\",\"x\"],\n          hue=\"Pos\") # prediction\n\nplt.title(\"SLT and 2P in 2d plane\") # title","6e755df8":"sns.lmplot('AST', '2P', data=df, fit_reg=False, # x, y, data, line\n          scatter_kws={\"s\":150}, # size of dot\n          markers=[\"o\",\"x\"],\n          hue=\"Pos\") # prediction\n\nplt.title(\"AST and 2P in 2d plane\") # title","35e990c0":"sns.lmplot('BLK', '3P', data=df, fit_reg=False, # x, y, data, line\n          scatter_kws={\"s\":150}, # size of dot\n          markers=[\"o\",\"x\"],\n          hue=\"Pos\") # prediction\n\nplt.title(\"BLT and #3P in 2d plane\") # title","ec98864e":"df.drop(['2P','AST','STL'], axis=1, inplace =True)","9644a109":"df.head()","8e255610":"from sklearn.model_selection import train_test_split","d32e12b1":"train, test = train_test_split(df,test_size=0.2) # data, 20% for test","592e34a3":"print(train.shape[0])\nprint(test.shape[0])","aab22e23":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\n# to find best k parameter, we will do cross validation \nmax_k_range = train.shape[0]\/\/2\nk_list = []\nfor i in range(3,max_k_range,2) : # range of k\n    k_list.append(i)\n\ncross_validation_scores = []\nx_train = train[['3P','BLK','TRB']]\ny_train = train[['Pos']]\n\nfor k in k_list :\n    knn = KNeighborsClassifier(n_neighbors=k)\n    scores = cross_val_score(knn,x_train,y_train.values.ravel(),cv=10,scoring='accuracy')\n    cross_validation_scores.append(scores.mean())\ncross_validation_scores","3cae5bcd":"plt.plot(k_list, cross_validation_scores)\nplt.xlabel('the number of k')\nplt.ylabel('Accuracy')\nplt.show()","96b215ee":"k = k_list[cross_validation_scores.index(max(cross_validation_scores))]\nprint('The best number of k : '+str(k))","b7a9aad5":"knn = KNeighborsClassifier(n_neighbors=3)\n\nx_train = train[['3P','BLK','TRB']]\ny_train = train[['Pos']]","8da4b970":"# training\nknn.fit(x_train, y_train.values.ravel())\nx_test = test[['3P','BLK','TRB']]\ny_test = test[['Pos']]","848c2fad":"pred = knn.predict(x_test)\ncomparison = pd.DataFrame({'prediction':pred,'ground_truth':y_test.values.ravel()})\ncomparison","7878ef58":"<a id=\"four\"><\/a>\n\n# 4. Model Test\n\n<hr>","bf15c948":"delete something useless","6ade5175":"<a id=\"two\"><\/a>\n\n# 2. Preprocessing\n\n<hr>","698aec97":"we can find out that these features cant classify \nbecause boundary is too close","20aa813c":"<a id=\"one\"><\/a>\n\n# 1. Data Exploration\n\n<hr>","a60e101c":"## Split data for train and test","e2d92d02":"## Content\n1. [Data Exploration](#one)\n2. [Preprocessing](#two)\n3. [Modeling](#three)\n4. [Model Test](#four)\n\n<hr>\n","85e10d78":"we can find out that this is useful","00efa2c7":"## Check data with visualization","4c632628":"## Feature explanation\n* Player = name\n* Pos = Position\n* 3p = 3 point\n* 2p = 2 point\n* TRB = Rebound\n* AST = Assist\n* STL = Steal\n* BLK = Block","4a1d90a5":"# K-Nearest_Neighbor\n\n* Supervised learning\n* To classify new data, check k closest training examples from new data in data set\n* If k=3, new data = Class B, if k=7, new data = Class A\n\n![14641.png](attachment:14641.png)","433a0b19":"<a id=\"three\"><\/a>\n\n# 3. Modeling\n\n<hr>","38e954ef":"Let's see with visualization","8f14b5d7":"We can find out when k is under 5, Accuracy is highest","6fd8ef2f":"we can find out that these features cant classify \nbecause boundary is too close","c420794e":"## Reference\n\n[My first machine-learning\/deep-learning by Minsuk Heo](https:\/\/github.com\/wikibook\/machine-learning\/tree\/master\/data)\n\n[Wikipedia](https:\/\/en.wikipedia.org\/wiki\/K-nearest_neighbors_algorithm)"}}