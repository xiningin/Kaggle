{"cell_type":{"7213ca7b":"code","7c3dd2fb":"code","09640dac":"code","44a58950":"code","9f112041":"code","01a916fa":"code","9367391d":"code","b8772f8f":"code","d2367ee7":"code","0e99371d":"code","4a5c1dda":"code","9c5f6d9c":"code","99f883ca":"code","cc167677":"code","d61b428a":"code","16630c19":"code","bf87ffde":"code","0761ce36":"code","899f5ce1":"code","f3094661":"code","4c3fa7b8":"code","e079f11e":"code","a6ca9abc":"code","db9e68da":"code","608d64bb":"code","285dd6a8":"code","95f45007":"markdown","c08f353f":"markdown","6885c26d":"markdown"},"source":{"7213ca7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7c3dd2fb":"#plotly\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px","09640dac":"file = \"..\/input\/coronavirus-covid19-dataset\/corona_latest.csv\"","44a58950":"df = pd.read_csv(file)","9f112041":"df","01a916fa":"df = pd.read_csv(file,index_col=[0])","9367391d":"df.head()","b8772f8f":"df.tail()","d2367ee7":"df.describe()","0e99371d":"pd.isnull(df)","4a5c1dda":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][df.TotalCases>=10000],\n    y=df.TotalCases[df.TotalCases>=10000],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[df.TotalCases>=10000],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][df.TotalCases>=10000],\n    y=df[\"TotalRecovered\"][df.TotalCases>=10000],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[df.TotalCases>=10000],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][df.TotalCases>=10000],\n    y=df.TotalDeaths[df.TotalCases>=10000],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[df.TotalCases>=10000],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 10,000\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","9c5f6d9c":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    y=df.TotalCases[((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    y=df.TotalDeaths[((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<10000 )&(df.TotalCases>5000))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 5000 and less than 10000\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","99f883ca":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    y=df.TotalCases[((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    y=df.TotalDeaths[((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<5000 )&(df.TotalCases>1000))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 1000 and less than 5000\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","cc167677":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<1000 )&(df.TotalCases>500))],\n    y=df.TotalCases[((df.TotalCases<1000 )&(df.TotalCases>500))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<1000 )&(df.TotalCases>500))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<1000 )&(df.TotalCases>500))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<1000 )&(df.TotalCases>500))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<1000 )&(df.TotalCases>500))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<1000 )&(df.TotalCases>500))],\n    y=df.TotalDeaths[((df.TotalCases<1000 )&(df.TotalCases>500))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<1000 )&(df.TotalCases>500))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 500 and less than 1000\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","d61b428a":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<500 )&(df.TotalCases>250))],\n    y=df.TotalCases[((df.TotalCases<500 )&(df.TotalCases>250))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<500 )&(df.TotalCases>250))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<500 )&(df.TotalCases>250))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<500 )&(df.TotalCases>250))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<500 )&(df.TotalCases>2500))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<500 )&(df.TotalCases>250))],\n    y=df.TotalDeaths[((df.TotalCases<500 )&(df.TotalCases>0))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<500 )&(df.TotalCases>250))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 250 and less than 500\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","16630c19":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<250 )&(df.TotalCases>100))],\n    y=df.TotalCases[((df.TotalCases<250 )&(df.TotalCases>100))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<250 )&(df.TotalCases>100))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<250 )&(df.TotalCases>100))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<250 )&(df.TotalCases>100))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<250 )&(df.TotalCases>100))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<250 )&(df.TotalCases>100))],\n    y=df.TotalDeaths[((df.TotalCases<250 )&(df.TotalCases>100))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<250 )&(df.TotalCases>100))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 100 and less than 250\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","bf87ffde":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<100 )&(df.TotalCases>50))],\n    y=df.TotalCases[((df.TotalCases<100 )&(df.TotalCases>50))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<100 )&(df.TotalCases>50))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<100 )&(df.TotalCases>50))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<100 )&(df.TotalCases>50))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<100 )&(df.TotalCases>50))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<100 )&(df.TotalCases>50))],\n    y=df.TotalDeaths[((df.TotalCases<100 )&(df.TotalCases>50))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<100 )&(df.TotalCases>50))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 50 and less than 100\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","0761ce36":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<50 )&(df.TotalCases>0))],\n    y=df.TotalCases[((df.TotalCases<50 )&(df.TotalCases>0))],\n    name='TotalCases',\n    marker_color='#1b81c2',\n    text=df.TotalCases[((df.TotalCases<50 )&(df.TotalCases>0))],\n    textposition='auto'\n))\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<50 )&(df.TotalCases>0))],\n    y=df[\"TotalRecovered\"][((df.TotalCases<50 )&(df.TotalCases>0))],\n    name='TotalRecovered',\n    marker_color='#2ca02c',\n    text=df.TotalRecovered[((df.TotalCases<50 )&(df.TotalCases>0))],\n    textposition='auto'\n))\n\nfig.add_trace(go.Bar(\n    x=df[\"Country,Other\"][((df.TotalCases<50 )&(df.TotalCases>0))],\n    y=df.TotalDeaths[((df.TotalCases<50 )&(df.TotalCases>0))],\n    name='TotalDeaths',\n    marker_color='red',\n    text=df.TotalDeaths[((df.TotalCases<50 )&(df.TotalCases>0))],\n    textposition='auto'\n))\nfig.update_layout(\n    title={\n        'text': \"Corona virus TotalCase greater than 0 and less than 50\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","899f5ce1":"top_deaths = df.nlargest(5, ['TotalDeaths'])","f3094661":"top_deaths","4c3fa7b8":"fig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=top_deaths[\"Country,Other\"],\n    y=top_deaths.TotalDeaths,\n    name='TotalDeaths',\n    marker_color='#1b81c2',\n    text=top_deaths.TotalDeaths,\n    textposition='auto'\n))\n\nfig.update_layout(\n    title={\n        'text': \"Deaths by Country(Top 5)\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","e079f11e":"zero_death = df[df[\"TotalDeaths\"] == 0]","a6ca9abc":"pd.set_option('display.max_rows', None)","db9e68da":"def highlight_col(x):\n    r = 'background-color: red'\n    df1 = pd.DataFrame('', index=x.index, columns=x.columns)\n    df1.iloc[:, 3] = r\n    return df1    \nzero_death.style.apply(highlight_col, axis=None)","608d64bb":"val = len(zero_death.index)","285dd6a8":"print(\"There are\",val, \"countries with no death\")","95f45007":"### There are no missing values","c08f353f":"### Find missing values","6885c26d":"### delete duplicate index"}}