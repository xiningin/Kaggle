{"cell_type":{"e77f8498":"code","2d3e6b1d":"code","21ce264c":"code","34f60fdb":"code","c1ee5722":"code","b9f692df":"code","3ecec081":"code","0bb44d9d":"code","5418bdac":"code","467bd82c":"code","ef647b59":"code","eb3a9362":"code","f836d28e":"code","ec4ddc7f":"code","3bf89a79":"code","301366e8":"code","99f557f5":"code","d88b5486":"code","9f9540b3":"code","b8e94caa":"markdown","017644fd":"markdown","4cd7cbe2":"markdown"},"source":{"e77f8498":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2d3e6b1d":"df=pd.read_csv('\/kaggle\/input\/credit-card-risk-assessment\/Credit_default_dataset.csv')\ndf.head(5)","21ce264c":"df.drop(['ID'],axis=1,inplace=True)","34f60fdb":"df.head()","c1ee5722":"df.rename(columns={'PAY_0':'PAY_1'},inplace=True)","b9f692df":"df['EDUCATION']=df['EDUCATION'].map({0:4,1:1,2:2,3:3,4:4,5:4,6:4,7:4})\ndf['MARRIAGE']=df['MARRIAGE'].map({0:3,1:1,2:2,3:3})","3ecec081":"df['EDUCATION'].value_counts()","0bb44d9d":"from sklearn.preprocessing import StandardScaler\nscale=StandardScaler()\nX=df.drop(['default.payment.next.month'],axis=1)\nX=scale.fit_transform(X)","5418bdac":"y=df['default.payment.next.month']","467bd82c":"params={'learning_rate':[0.05,0.1,0.15,0.2,0.25,0.3],\n       'max_depth':[2,3,5,6,8,9],\n       'min_child_weight':[1,2,3,5,7],\n       'gamma':[0.1,0.2,0.3,0.4]}","ef647b59":"from sklearn.model_selection import RandomizedSearchCV\nimport xgboost","eb3a9362":"classifier=xgboost.XGBClassifier()","f836d28e":"random_search=RandomizedSearchCV(classifier,params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","ec4ddc7f":"random_search.fit(X,y)","3bf89a79":"random_search.best_estimator_","301366e8":"classifier=xgboost.XGBClassifier(base_score=0.5, booster=None, colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=0.4, gpu_id=-1,\n              importance_type='gain', interaction_constraints=None,\n              learning_rate=0.2, max_delta_step=0, max_depth=3,\n              min_child_weight=3, missing=None, monotone_constraints=None,\n              n_estimators=100, n_jobs=0, num_parallel_tree=1,\n              objective='binary:logistic', random_state=0, reg_alpha=0,\n              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method=None,\n              validate_parameters=False, verbosity=None)","99f557f5":"from sklearn.model_selection import cross_val_score\nscore=cross_val_score(classifier,X,y,cv=5)","d88b5486":"score","9f9540b3":"score.mean()","b8e94caa":"REMEBER THE GOLDEN RULE:-\n        WHENEVER DISTANCE IS COMPUTED IN ANY ALGO STANDARD SCALING SHOULD BE DONE TO REVISE ITS MAGNITUDE\n        \n    we will be using XGBoost so distance is compiuted so we will be using standard scaling\n    ","017644fd":"**IF YOU LIKE IT PLAESE UPVOTE IT**","4cd7cbe2":"**WE WILL BE SCALING OUR VALUES IN GIVEN DATASET AS IT CAN BE SEEN VALUES IN COLUMNS LIKE BILL_AMT PAY_AMT ARE VERY LARGE AND DISTINGUIVE IN COMPARISON TO OTHERS SO WE WILL BE SACLING THEM DOWN **"}}