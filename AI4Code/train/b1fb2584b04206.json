{"cell_type":{"3b86b9e2":"code","80e534d1":"code","030e1ca0":"code","0a28b439":"code","f7e494d6":"code","4e35d911":"code","e7793d3e":"code","db74102d":"code","6b5eda83":"code","182f9e79":"code","17f791d8":"code","caeebb75":"code","555b6b6c":"code","15e6a44f":"markdown","0e17a6c5":"markdown","5bf9c343":"markdown","5bec129f":"markdown","324f7db4":"markdown","3dc30f21":"markdown"},"source":{"3b86b9e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","80e534d1":"data=pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")","030e1ca0":"data.head()","0a28b439":"data_new=data.drop([\"Id\",\"PetalLengthCm\",\"PetalWidthCm\",\"Species\"],axis=1)\n\ndata_new2=data.drop([\"Id\",\"SepalLengthCm\",\"SepalWidthCm\",\"Species\"],axis=1)","f7e494d6":"data.Species.unique()","4e35d911":"plt.scatter(data.SepalLengthCm[data.Species==\"Iris-setosa\"],data.SepalWidthCm[data.Species==\"Iris-setosa\"],color=(\"red\"))\nplt.scatter(data.SepalLengthCm[data.Species==\"Iris-versicolor\"],data.SepalWidthCm[data.Species==\"Iris-versicolor\"],color=(\"blue\"))\nplt.scatter(data.SepalLengthCm[data.Species==\"Iris-virginica\"],data.SepalWidthCm[data.Species==\"Iris-virginica\"],color=(\"yellow\"))\nplt.show()","e7793d3e":"plt.scatter(data.PetalLengthCm[data.Species==\"Iris-setosa\"],data.PetalWidthCm[data.Species==\"Iris-setosa\"],color=(\"red\"))\nplt.scatter(data.PetalLengthCm[data.Species==\"Iris-versicolor\"],data.PetalWidthCm[data.Species==\"Iris-versicolor\"],color=(\"blue\"))\nplt.scatter(data.PetalLengthCm[data.Species==\"Iris-virginica\"],data.PetalWidthCm[data.Species==\"Iris-virginica\"],color=(\"yellow\"))\nplt.show()","db74102d":"\n\nplt.scatter(data_new.SepalLengthCm,data_new.SepalWidthCm,color=\"black\")\nplt.show()","6b5eda83":"plt.scatter(data_new2.PetalLengthCm,data_new2.PetalWidthCm,color=\"black\")\nplt.show()","182f9e79":"from sklearn.cluster import KMeans\n\nwcss=[]\n\nfor k in range(1,15):\n    kmeans= KMeans(n_clusters=k)\n    kmeans.fit(data_new)\n    wcss.append(kmeans.inertia_)\n    \nplt.plot(range(1,15),wcss)\nplt.xlabel(\"k Values\")\nplt.ylabel(\"wcss\")\nplt.show()","17f791d8":"kmeans2=KMeans(n_clusters=3)\nClusters=kmeans2.fit_predict(data_new)\ndata_new[\"label\"]=Clusters\n\nplt.scatter(data_new.SepalLengthCm[data_new.label==0],data_new.SepalWidthCm[data_new.label==0],color=(\"brown\"))\nplt.scatter(data_new.SepalLengthCm[data_new.label==1],data_new.SepalWidthCm[data_new.label==1],color=(\"blue\"))\nplt.scatter(data_new.SepalLengthCm[data_new.label==2],data_new.SepalWidthCm[data_new.label==2],color=(\"cyan\"))\nplt.scatter(kmeans2.cluster_centers_[:,0],kmeans2.cluster_centers_[:,1],color=\"yellow\")\nplt.show()","caeebb75":"from scipy.cluster.hierarchy import linkage, dendrogram\n\nmerg=linkage(data_new2,method=\"ward\")\ndendrogram(merg,leaf_rotation=90)\nplt.xlabel(\"data points\")\nplt.ylabel(\"euclidean distance\")\nplt.show()","555b6b6c":"from sklearn.cluster import AgglomerativeClustering\n\nhc=AgglomerativeClustering(n_clusters=3,affinity=\"euclidean\",linkage=\"ward\")\ncluster=hc.fit_predict(data_new2)\ndata_new2[\"label\"]=cluster\n\nplt.scatter(data_new2.PetalLengthCm[data_new2.label==0],data_new2.PetalWidthCm[data_new2.label==0],color=(\"brown\"))\nplt.scatter(data_new2.PetalLengthCm[data_new2.label==1],data_new2.PetalWidthCm[data_new2.label==1],color=(\"blue\"))\nplt.scatter(data_new2.PetalLengthCm[data_new2.label==2],data_new2.PetalWidthCm[data_new2.label==2],color=(\"cyan\"))\n\nplt.show()","15e6a44f":"# Introduction\nIn this notebook I tried to practice unsupervised learning.\n\n1. [Entering Data and Preparing Data](#1)\n1. [Real Data](#2)\n1. [Unsupervised Data Appearance](#3)\n1. [K-means Clustering](#4)\n1. [Hierarchycal Clustering](#5)","0e17a6c5":"<a id=\"5\"><\/a><br>\n# Hierarchycal Clustering","5bf9c343":"<a id=\"1\"><\/a><br>\n# Entering Data and Preparing Data","5bec129f":"<a id=\"4\"><\/a><br>\n# K-means Clustering","324f7db4":"<a id = \"3\"><\/a><br>\n# Unsupervised Data Appearance","3dc30f21":"<a id=\"2\"><\/a><br>\n# Real Data"}}