{"cell_type":{"613bc7f2":"code","505fb506":"code","97f664a5":"code","3081cd63":"code","8eef0931":"code","9be9349e":"code","c0067043":"code","ef604ead":"code","dac14b52":"code","48507ef3":"code","ea9e5614":"code","795f4fb6":"code","aeb00464":"code","1dbefb0f":"code","96b8dbe9":"markdown","91f1d83f":"markdown","43357a01":"markdown","a6061444":"markdown","2417f593":"markdown","f8ebb916":"markdown","267b9c2a":"markdown","eff3202f":"markdown","e14053dc":"markdown","40dbe9a9":"markdown","94cb62bc":"markdown","bfb81bc1":"markdown","efe8268c":"markdown","9631ba71":"markdown","49a9e4dc":"markdown","1a2e72ee":"markdown","2392abc1":"markdown","67de5b1a":"markdown"},"source":{"613bc7f2":"# importing necessary libaries.\nimport os\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","505fb506":"data = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndata.head() # getting a glimpse of the dataset\n# data.shape","97f664a5":"data = data.drop(\"Id\", axis = 1)\ndata.head()","3081cd63":"data.info()\n#checking if there is any inconsistency in the dataset\n#as we see there are no null values in the dataset, so the data can be processed","8eef0931":"f, ax = plt.subplots(figsize=(10, 8))\nsns.countplot(x=\"Species\", data=data,palette=\"Set3\")","9be9349e":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='SepalLengthCm',data=data,palette=\"rainbow\")\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='SepalWidthCm',data=data,palette=\"rainbow\")\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='PetalLengthCm',data=data,palette=\"rainbow\")\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='PetalWidthCm',data=data,palette=\"rainbow\")","c0067043":"plt.figure(figsize=(7,4)) \nsns.heatmap(data.corr(),annot=True,cmap='cubehelix_r') \nplt.show()","ef604ead":"data.info()\n#checking if there is any inconsistency in the dataset\n#as we see there are no null values in the dataset, so the data can be processed","dac14b52":"## split train and test data\nfrom sklearn.model_selection import train_test_split\nx=data.iloc[:,:-1]\ny=data.iloc[:,-1]\n# train - 70%, test - 30%\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)","48507ef3":"from sklearn.neighbors import KNeighborsClassifier\nmodel=KNeighborsClassifier(n_neighbors=5)\nmodel.fit(x_train,y_train)","ea9e5614":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_predict=model.predict(x_test)\nacc = accuracy_score(y_test, y_predict) * 100\nacc = round(acc,2)\nprint(\"Accuracy of the KNN model is {} %\".format(acc))","795f4fb6":"set(y)","aeb00464":"from sklearn.metrics import plot_confusion_matrix\nclass_names =set(y)\ndisp = plot_confusion_matrix(model, x_test, y_test,\n                             display_labels=class_names,\n                             cmap=plt.cm.Blues)\n\nplt.show()","1dbefb0f":"print(\"Enter Sepal length, Sepal width, Petal length and Petal width seperated by a space\")\nprint(\"Sample input ---> 6.0 2.2 4.0 1.0\")\n# inp_data = list(map(float,input().split()))\ninp_data = \"6.0 2.2 4.0 1.0\"\ninp_data = list(map(float,inp_data.split()))\ninp_df = pd.DataFrame(inp_data)\ninp_df = inp_df.T\ninp_df.columns = data.columns[:-1]\nclasses, indices = model.kneighbors(inp_df, n_neighbors=10)\n\nprint()\nprint(\"RESULTS!!!\")\nprint(\"*\"*80)\nprint(\"The 10 most nearest rows are\")\nresult = [data.iloc[i,:] for i in indices[0]]\nprint(pd.DataFrame(result))\nprint(\"*\"*80)\n","96b8dbe9":" ### Petal and sepal","91f1d83f":"## Obsevations:\n    1.The class \"Iris-sentosa\" seems to have less petal,sepal length and petal width.\n    However it has higher sepal width or in other words it's width is varied from low \n    to high but majority on the higher side\n    2.The class \"Iris-virginica\"  has high sepal length, petal length, petal width  but medium ranged sepal width.\n    3. From the above two observations it is understood that \"Iris-sentosa\"  and \"Iris-virginica\" is linearly \n    seperable.\n    4.The class \"Iris-versicolor\" lies in the mid range for all the attributes.'''","43357a01":"## Classification of Iris plant flower species","a6061444":"## Let's do some EDA","2417f593":"### 1. Checking class distribution","f8ebb916":"## Let's understand the dataset before digging into the details","267b9c2a":"# <font size=4 color='blue'>Upvote if you find this notebook useful<\/font>","eff3202f":"    1.Sepal width and sepal length have no correlation.\n    2.Petal length and petal width are highly correlated.","e14053dc":"### 3. Let's see how the variables are correlated to each other","40dbe9a9":"### Let's see how these three flower species look like","94cb62bc":"## Query to get similar flowers","bfb81bc1":"\n## KNN intuition\n\n - KNN stands for **K-Nearest Neighbors**. K here denotes the number of neighbors to be considered \nwhile making a decision. Note k is a user defined constant.\n - KNN can be used for classification as well as regression. Output is a class membership for classification \n and output is a value in case of regression.\n - KNN is a non parametric algorithm. It doesn't care about mean and variance which is not the case \n in other ML algorithms. It is purely based on similarity (distance) function.\n \n## When should we use KNN Algorithm?\n - KNN is widely used for its **interpretability** and **less calculative time**\n - It should not be used or data pre-processing is required if the data is class imbalanced.\n In such cases results will be skewed towards the class with more data.\n - KNN is called **Lazy Learner** as it doesn't learn anything from the training. Instead carries\n the whole training data to take a decision based on distance function.\n - Normalization\/feature-scaling is required if features contains nominal and categorical variable or they \n have difference measurement scales.\n\n## KNN Working\n\n 1. Select the value of k. Based on findings from historical models anywhere between 3-10 is an optimal value for k.\n 2. Calculate the distance between the K nearest neighbors.\n 3. Count the number of data points belonging to each class.\n 4. When a new data point comes in assign a class label by choosing the label with majority data points.\n    \n","efe8268c":"## KNN Classifier","9631ba71":"## Loading the dataset into Pandas Dataframe","49a9e4dc":"### 2. Now, Lets see how length and width varies according to the species","1a2e72ee":"### As seen from the above plot the dataset has 3 equally distributed classes.","2392abc1":"<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/7\/78\/Petal-sepal.jpg\/220px-Petal-sepal.jpg\" width=\"400\" height=\"400\" style=\"float:left\" alt = \"petal and sepal image\"> <\/br>","67de5b1a":"<img src=\"https:\/\/miro.medium.com\/fit\/c\/1838\/551\/0*Uw37vrrKzeEWahdB\" width=\"400\" height=\"400\" style=\"float:left\">"}}