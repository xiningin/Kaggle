{"cell_type":{"f16d7875":"code","9b44d9e9":"code","b00bc838":"code","8ed14343":"code","e3a82ea1":"code","8abcebbd":"code","89431d9f":"code","cb1054bd":"code","64aac043":"code","2e84671b":"code","81c3795e":"code","b73cb3ec":"markdown","e5ff0033":"markdown","a9856b1d":"markdown","14b161ab":"markdown","8ab8304f":"markdown","8ada91b4":"markdown","219efae2":"markdown","73e077c0":"markdown"},"source":{"f16d7875":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nfrom collections import OrderedDict\nfrom sklearn.datasets import make_classification\nfrom sklearn.ensemble import RandomForestClassifier","9b44d9e9":"X, y = make_classification(\n    n_samples=1000,  # row number\n    n_features=10, # feature numbers\n    n_informative=6, # The number of informative features\n    n_redundant = 2, # The number of redundant features\n    n_repeated = 2, # The number of duplicated features\n    n_classes = 2, # The number of classes \n    n_clusters_per_class=1,#The number of clusters per class\n    random_state = 42 # random seed \n)","b00bc838":"X[:3]","8ed14343":"y[:3]","e3a82ea1":"X_data = np.array(X)\ny_data = np.array(y)\nnew_data = np.append(X_data ,y_data.reshape(-1,1),axis=1)\n\nnew_data [:3]","8abcebbd":"new_data.shape","89431d9f":"df = pd.DataFrame(new_data)\ndf.head()","cb1054bd":"new_col = []\ni = 0\nfor col in df.columns:\n    if i ==  len(df.columns) - 1:\n        new_col.append(\"target\")\n    else :\n        new_col.append(\"f\" + str(i))\n        \n    i += 1\n    \ndf.columns = new_col","64aac043":"df.columns","2e84671b":"df.head()","81c3795e":"df.to_csv(\"ml_binary_classification_data.csv\",index=False)","b73cb3ec":"# make data using make_classification","e5ff0033":"# convert numpy array to dataframe","a9856b1d":"# feature data ","14b161ab":"# add feature data and target data","8ab8304f":"# target data ","8ada91b4":"### Generate a random n-class classification problem.","219efae2":"# rename column names","73e077c0":"# save dataframe to csv file "}}