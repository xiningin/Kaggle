{"cell_type":{"2c2a6144":"code","893f516a":"code","c822e507":"code","f65dece0":"code","b4027d4f":"code","a0109c24":"code","1803cb05":"code","749f8428":"code","6d458cb9":"code","e7a6181e":"code","e4416553":"code","6189f0f4":"markdown","17274294":"markdown","deb8830d":"markdown","94a44160":"markdown","bb27a03c":"markdown","bceed6b9":"markdown","61c44038":"markdown","142651d0":"markdown","71fd07c5":"markdown","1880e5ec":"markdown","16c82d47":"markdown"},"source":{"2c2a6144":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","893f516a":"allgames = pd.read_csv(\"..\/input\/michael-jordan-kobe-bryant-and-lebron-james-stats\/allgames_stats.csv\")\n\nKobe = allgames[allgames[\"Player\"] == \"Kobe Bryant\"]\nLebron = allgames[allgames[\"Player\"] == \"Lebron James\"]\nMichael = allgames[allgames[\"Player\"] == \"Michael Jordan\"]\n\nKobe.reset_index(inplace=True, drop=True)\nLebron.reset_index(inplace=True, drop=True)\nMichael.reset_index(inplace=True, drop=True)","c822e507":"fig = plt.figure(constrained_layout=True, figsize=[11, 6])\nax = fig.add_subplot()\n\nlabels = [\"FG\", \"FGA\", \"3P\", \"3PA\", \"FT\", \"FTA\", \"ORB\", \"DRB\", \"TRB\", \"AST\", \"STL\", \"BLK\", \"TOV\", \"PF\", \"PTS\", \"GmSc\"]\nKobeMeans = np.array([Kobe[i].mean() for i in labels])\nLebronMeans = np.array([Lebron[i].mean() for i in labels])\nMichaelMeans = np.array([Michael[i].mean() for i in labels])\ntotal = KobeMeans + LebronMeans + MichaelMeans\n\nax.barh(y=labels, width=KobeMeans\/total, alpha=0.9, label=\"Kobe Bryant\")\nax.barh(y=labels, width=LebronMeans\/total, alpha=0.9, label=\"Lebron James\", left=KobeMeans\/total)\nax.barh(y=labels, width=MichaelMeans\/total, alpha=0.9, label=\"Michael Jordan\", left=(KobeMeans + LebronMeans)\/total)\n\nax.vlines(x=[0.25, 0.5, 0.75], ymin=-1, ymax=16, linestyles='--', linewidth=1, alpha=0.2)\n\nfor i in range(len(labels)):\n    ax.text(x=KobeMeans[i]\/(total[i]*2), y=i, s=KobeMeans[i].round(1), fontsize=12, horizontalalignment=\"center\", verticalalignment=\"center\")\n    ax.text(x=KobeMeans[i]\/total[i] + LebronMeans[i]\/(total[i]*2), y=i, s=LebronMeans[i].round(1), fontsize=12, horizontalalignment=\"center\", verticalalignment=\"center\")\n    ax.text(x=(KobeMeans[i] + LebronMeans[i])\/total[i] + MichaelMeans[i]\/(total[i]*2), y=i, s=MichaelMeans[i].round(1), fontsize=12, horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"right\"].set_position((\"data\", 1))\nax.set_xticks([])\n\nplt.legend(bbox_to_anchor=(0.245, 0.97), ncol=3)\nplt.show()","f65dece0":"fig = plt.figure(constrained_layout=True, figsize=[13, 9])\nax = fig.add_subplot()\n\nopponents = Kobe[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Kobe[Kobe[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nax.barh(y=opponents, width=wins, color=\"green\", alpha=0.8, label=\"wins\")\nax.barh(y=opponents, width=[-x for x in loses], color=\"red\", alpha=0.8, label=\"loses\")\nax.hlines(y=opponents, xmin=-55, xmax=[-x-0.5 for x in loses], linestyles='--', linewidth=1, alpha=0.2)\n    \nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=wins[i]+1.5, s=wins[i], fontsize=12, color=\"green\", horizontalalignment=\"center\", verticalalignment=\"center\")\n    ax.text(y=opponents[i], x=0-(loses[i]+1.5), s=loses[i], fontsize=12, color=\"red\", horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_position((\"data\", 0))\nax.spines[\"right\"].set_linewidth(2)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.legend()\nplt.show()","b4027d4f":"fig = plt.figure(constrained_layout=True, figsize=[11, 8])\nax = fig.add_subplot()\n\nopponents = Kobe[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Kobe[Kobe[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nwidths = np.array(wins) - np.array(loses)\ncolors = [\"red\" if width < 0 else \"green\" for width in widths]\n\nax.hlines(y=opponents, xmin=0, xmax=widths, color=colors , alpha=0.8)\nax.hlines(y=opponents, xmin=-20, xmax=np.minimum(widths, 0)-0.5, alpha=0.2, linestyles=\"--\")\nax.vlines(x=0, ymin=-1, ymax=len(opponents), alpha=0.3, linestyles=\"--\")\nax.scatter(y=opponents, x=widths, color=colors)\n\nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=widths[i] + (1 if widths[i] > 0 else -1), s=widths[i], fontsize=12, color=colors[i], horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.show()","a0109c24":"fig = plt.figure(constrained_layout=True, figsize=[13, 9])\nax = fig.add_subplot()\n\nopponents = Lebron[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Lebron[Lebron[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nax.barh(y=opponents, width=wins, color=\"green\", alpha=0.8, label=\"wins\")\nax.barh(y=opponents, width=[-x for x in loses], color=\"red\", alpha=0.8, label=\"loses\")\nax.hlines(y=opponents, xmin=-55, xmax=[-x-0.5 for x in loses], linestyles='--', linewidth=1, alpha=0.2)\n    \nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=wins[i]+1.5, s=wins[i], fontsize=12, color=\"green\", horizontalalignment=\"center\", verticalalignment=\"center\")\n    ax.text(y=opponents[i], x=0-(loses[i]+1.5), s=loses[i], fontsize=12, color=\"red\", horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_position((\"data\", 0))\nax.spines[\"right\"].set_linewidth(2)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.legend()\nplt.show()","1803cb05":"fig = plt.figure(constrained_layout=True, figsize=[11, 8])\nax = fig.add_subplot()\n\nopponents = Lebron[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Lebron[Lebron[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nwidths = np.array(wins) - np.array(loses)\ncolors = [\"red\" if width < 0 else \"green\" for width in widths]\n\nax.hlines(y=opponents, xmin=0, xmax=widths, color=colors , alpha=0.8)\nax.hlines(y=opponents, xmin=-20, xmax=np.minimum(widths, 0)-0.5, alpha=0.2, linestyles=\"--\")\nax.vlines(x=0, ymin=-1, ymax=len(opponents), alpha=0.3, linestyles=\"--\")\nax.scatter(y=opponents, x=widths, color=colors)\n\nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=widths[i] + (1 if widths[i] > 0 else -1), s=widths[i], fontsize=12, color=colors[i], horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.show()","749f8428":"fig = plt.figure(constrained_layout=True, figsize=[13, 9])\nax = fig.add_subplot()\n\nopponents = Michael[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Michael[Michael[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nax.barh(y=opponents, width=wins, color=\"green\", alpha=0.8, label=\"wins\")\nax.barh(y=opponents, width=[-x for x in loses], color=\"red\", alpha=0.8, label=\"loses\")\nax.hlines(y=opponents, xmin=-55, xmax=[-x-0.5 for x in loses], linestyles='--', linewidth=1, alpha=0.2)\n    \nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=wins[i]+1.5, s=wins[i], fontsize=12, color=\"green\", horizontalalignment=\"center\", verticalalignment=\"center\")\n    ax.text(y=opponents[i], x=0-(loses[i]+1.5), s=loses[i], fontsize=12, color=\"red\", horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_position((\"data\", 0))\nax.spines[\"right\"].set_linewidth(2)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.legend()\nplt.show()","6d458cb9":"fig = plt.figure(constrained_layout=True, figsize=[11, 8])\nax = fig.add_subplot()\n\nopponents = Michael[\"Opp\"].unique()\nwins, loses = list(), list()\nfor opponent in opponents:\n    mapped = Michael[Michael[\"Opp\"] == opponent][\"Result\"].map({\"W\":1, \"L\":0})\n    wins.append(mapped.sum())\n    loses.append(len(mapped) - mapped.sum())\n\nwidths = np.array(wins) - np.array(loses)\ncolors = [\"red\" if width < 0 else \"green\" for width in widths]\n\nax.hlines(y=opponents, xmin=0, xmax=widths, color=colors , alpha=0.8)\nax.hlines(y=opponents, xmin=-20, xmax=np.minimum(widths, 0)-0.5, alpha=0.2, linestyles=\"--\")\nax.vlines(x=0, ymin=-1, ymax=len(opponents), alpha=0.3, linestyles=\"--\")\nax.scatter(y=opponents, x=widths, color=colors)\n\nfor i in range(len(opponents)):\n    ax.text(y=opponents[i], x=widths[i] + (1 if widths[i] > 0 else -1), s=widths[i], fontsize=12, color=colors[i], horizontalalignment=\"center\", verticalalignment=\"center\")\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"bottom\"].set_visible(False)\nax.spines[\"left\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)\nax.set_xticks([])\nax.set_yticklabels(opponents, fontsize=13)\n\nplt.show()","e7a6181e":"minutes = Kobe[\"MP\"].str.split(\":\", expand=True)\nKobe[\"MP\"] = pd.to_numeric(minutes[0])\n    \nminutes = Lebron[\"MP\"].str.split(\":\", expand=True)\nLebron[\"MP\"] = pd.to_numeric(minutes[0])\n\nminutes = Michael[\"MP\"].str.split(\":\", expand=True)\nMichael[\"MP\"] = pd.to_numeric(minutes[0])","e4416553":"fig = plt.figure(constrained_layout=True, figsize=[15, 7])\nspec = fig.add_gridspec(15, 8)\n\nax1 = fig.add_subplot(spec[1:14, 0:5])\n\nax1.scatter(Kobe[\"MP\"], Kobe[\"GmSc\"], label=\"Kobe Bryant\", alpha=0.8, s=16, color=\"blue\")\nax1.scatter(Lebron[\"MP\"], Lebron[\"GmSc\"], label=\"Lebron James\", alpha=0.8, s=16, color=\"red\")\nax1.scatter(Michael[\"MP\"], Michael[\"GmSc\"], label=\"Michael Jordan\", alpha=0.8, s=16, color=\"green\")\n\nax1.set_xticks(np.arange(0, 61, 3))\nax1.set_xlabel(\"Minutes Played\", fontsize=14)\nax1.set_ylabel(\"Game Score\", fontsize=14)\n\nax1.grid(linestyle=\"--\", linewidth=1, alpha=0.3)\nax1.legend()\n\n\nax2 = fig.add_subplot(spec[0:5, 5:7])\n\nax2.scatter(Kobe[\"MP\"], Kobe[\"GmSc\"], label=\"Kobe Bryant\", alpha=0.8, s=9, color=\"blue\")\n\nax2.set_xticks(np.arange(0, 61, 6))\nax2.set_yticks(np.arange(0, 61, 10))\n\nax2.grid(linestyle=\"--\", linewidth=1, alpha=0.3)\n\n\nax3 = fig.add_subplot(spec[5:10, 5:7])\n\nax3.scatter(Lebron[\"MP\"], Lebron[\"GmSc\"], label=\"Lebron James\", alpha=0.8, s=9, color=\"red\")\n\nax3.set_xticks(np.arange(0, 61, 6))\nax3.set_yticks(np.arange(0, 61, 10))\n\nax3.grid(linestyle=\"--\", linewidth=1, alpha=0.3)\n\n\nax4 = fig.add_subplot(spec[10:15, 5:7])\n\nax4.scatter(Michael[\"MP\"], Michael[\"GmSc\"], label=\"Michael Jordan\", alpha=0.8, s=9, color=\"green\")\n\nax4.set_xticks(np.arange(0, 61, 6))\nax4.set_yticks(np.arange(0, 61, 10))\n\nax4.grid(linestyle=\"--\", linewidth=1, alpha=0.3)\n\n\nplt.show()","6189f0f4":"## Michael Jordan","17274294":"# **3. Average Features**","deb8830d":"# **2. Data**","94a44160":"# **4. All the wins and losses against opponents**","bb27a03c":"## Michael Jordan 2","bceed6b9":"# 5. Scatter Plot of Minutes Played and Game Score","61c44038":"## Kobe Bryant 2","142651d0":"# **1. Packages**","71fd07c5":"## Kobe Bryant","1880e5ec":"## Lebron James 2","16c82d47":"## Lebron James"}}