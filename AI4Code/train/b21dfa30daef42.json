{"cell_type":{"07629c40":"code","80e64cbf":"code","48d93e0d":"code","59afdf84":"code","b7095c76":"code","eacbc356":"code","ca09ad92":"code","a32ed15c":"code","5e2b35fd":"code","b8fe0ca5":"code","9aefea01":"code","6c7fe21f":"code","0326d46e":"code","80bb7963":"code","ae77dcb0":"code","13c4a6e7":"code","ee14b88e":"code","2a54f8fa":"code","e9512387":"code","27476cbb":"code","bcb78f63":"code","a5f8c75f":"code","6ee0de76":"code","d05f60e8":"code","86848cc0":"code","23a88891":"code","cbcb72f4":"code","06f95746":"code","f11260c8":"code","8cf9b048":"code","44275702":"code","ffc208b9":"code","2e60506b":"code","2aea884c":"code","5c51f201":"code","da451452":"code","ecf443b0":"code","e5b37fa5":"code","b32ae042":"code","6eaa85af":"code","219869b7":"code","b5339c8e":"code","83d57ffc":"code","ed66f5d8":"code","5ec547ab":"code","be5a4842":"code","f053b41b":"code","5c540814":"code","281e8c4f":"code","f91fe84e":"code","0685e862":"code","faef2c00":"code","f6fa8466":"markdown","b2a72b5f":"markdown","99a64cb6":"markdown","c3548e02":"markdown","5d4c1f5d":"markdown","f30d5d9b":"markdown","17682351":"markdown","b9820018":"markdown","fd1374ee":"markdown","63c8cdec":"markdown","90813642":"markdown","e5c68bac":"markdown","f84484e9":"markdown","d57fa773":"markdown","a80eddd8":"markdown","763a7aa1":"markdown","e8568e97":"markdown","4d839769":"markdown","caa61913":"markdown","f726f966":"markdown","23e25c6e":"markdown","caa9551d":"markdown","da345c95":"markdown","4a0fba0f":"markdown","732bf870":"markdown","a87ca47a":"markdown","94628d54":"markdown","c62639ac":"markdown","498c9206":"markdown"},"source":{"07629c40":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","80e64cbf":"df=pd.read_csv('..\/input\/heart.csv')","48d93e0d":"df.head()","59afdf84":"df.describe()","b7095c76":"df.info()","eacbc356":"df.isnull().any()","ca09ad92":"df['age_cat']=pd.cut(df['age'], 5)","a32ed15c":"sns.barplot(x=df.groupby(by=\"age_cat\").target.sum().index,y=df.groupby(by=\"age_cat\").target.sum())","5e2b35fd":"sns.catplot(data = df, y =\"age\", x = \"target\", hue = 'sex', sharex=False)","b8fe0ca5":"sns.countplot(x=df['target'],hue=df['sex'])","9aefea01":"df['cp'].unique()","6c7fe21f":"df['cp'] = df['cp'].replace(0, 'typical angina')\ndf['cp'] = df['cp'].replace(1, 'atypical angina')\ndf['cp'] = df['cp'].replace(2, 'non-anginal pain')\ndf['cp'] = df['cp'].replace(3, 'asymptomatic')","0326d46e":"sns.barplot(x=df.groupby(by=\"cp\").target.sum().index,y=df.groupby(by=\"cp\").target.sum())","80bb7963":"df['trestbps'].unique()","ae77dcb0":"df['bps_cat']=pd.cut(df['trestbps'], 5)","13c4a6e7":"sns.barplot(x=df.groupby(by=\"bps_cat\").target.sum().index,y=df.groupby(by=\"bps_cat\").target.sum())","ee14b88e":"sns.catplot(data = df, y =\"trestbps\", x = \"target\", hue='sex' ,sharex=False)","2a54f8fa":"df['chol_cat']=pd.cut(df['chol'], 5)","e9512387":"sns.barplot(x=df.groupby(by=\"chol_cat\").target.sum().index,y=df.groupby(by=\"chol_cat\").target.sum())","27476cbb":"sns.catplot(data = df, y =\"chol\", x = \"target\", hue='sex' ,sharex=False)","bcb78f63":"sns.countplot(data = df, x = \"target\", hue='fbs')","a5f8c75f":"sns.countplot(data = df, x = \"target\", hue='restecg')","6ee0de76":"sns.catplot(data = df, y =\"restecg\", x = \"target\" ,sharex=False)","d05f60e8":"df['thalach_cat']=pd.cut(df['thalach'], 5)","86848cc0":"sns.barplot(x=df.groupby(by=\"thalach_cat\").target.sum().index,y=df.groupby(by=\"thalach_cat\").target.sum())","23a88891":"sns.catplot(data = df, y =\"thalach\", x = \"target\" ,sharex=False)","cbcb72f4":"sns.countplot(data = df, x = \"target\", hue='exang')","06f95746":"df['oldpeak_cat']=pd.cut(df['oldpeak'], 5)","f11260c8":"sns.barplot(x=df.groupby(by=\"oldpeak_cat\").target.sum().index,y=df.groupby(by=\"oldpeak_cat\").target.sum())","8cf9b048":"sns.catplot(data = df, y =\"oldpeak\", x = \"target\" ,sharex=False)","44275702":"df['slope'] = df['slope'].replace(0,'upslope')\ndf['slope'] = df['slope'].replace(1,'flatslope')\ndf['slope'] = df['slope'].replace(2,'downslope')","ffc208b9":"sns.countplot(data = df, x = \"target\", hue='slope')","2e60506b":"sns.catplot(data = df, x =\"slope\", y = \"target\" ,sharex=False)","2aea884c":"sns.countplot(data = df, x = \"target\", hue='ca')","5c51f201":"df['thal'].unique()","da451452":"sns.countplot(data = df, x = \"target\", hue='thal')","ecf443b0":"slope = pd.get_dummies(df['slope'])\nslope.drop(slope.columns[[0]],axis=1,inplace=True)\ndf = pd.concat([df,slope],axis=1)","e5b37fa5":"thal = pd.get_dummies(df['thal'],prefix='thal')\nthal.drop(thal.columns[[0]],axis=1,inplace=True)\ndf = pd.concat([df,thal],axis=1)","b32ae042":"del df['age_cat']\ndel df['bps_cat']\ndel df['chol_cat']\ndel df['thalach_cat']\ndel df['oldpeak_cat']","6eaa85af":"df.head()","219869b7":"plt.figure(figsize=(15,15))\nsns.heatmap(df.corr(),annot=True,cmap='Blues')","b5339c8e":"features = ['thal_3','thal_3','thal_1','flatslope','ca','oldpeak','exang','thalach','restecg','trestbps','sex','age']\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics","83d57ffc":"def conflog(features):\n    X = df[features]\n    y = df.target\n    X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=125)\n    log = LogisticRegression(multi_class='auto')\n    log.fit(X_train,y_train)\n    y_train_pred = log.predict(X_train)   \n    y_test_pred = log.predict(X_test)   \n    print('for train')\n    print(metrics.classification_report(y_train,y_train_pred))\n    print(metrics.accuracy_score(y_train,y_train_pred))\n    print('for test')\n    print(metrics.classification_report(y_test,y_test_pred))\n    print(metrics.accuracy_score(y_test,y_test_pred))","ed66f5d8":"conflog(features)","5ec547ab":"def confNB(features):\n    X = df[features]\n    y = df.target\n    X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=125)\n    nb = GaussianNB()\n    nb.fit(X_train,y_train)\n    y_train_pred = nb.predict(X_train)   \n    y_test_pred = nb.predict(X_test)   \n    print('for train')\n    print(metrics.classification_report(y_train,y_train_pred))\n    print(metrics.accuracy_score(y_train,y_train_pred))\n    print('for test')\n    print(metrics.classification_report(y_test,y_test_pred))\n    print(metrics.accuracy_score(y_test,y_test_pred))","be5a4842":"confNB(features)","f053b41b":"def confDT(features):\n    X = df[features]\n    y = df.target\n    X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=125)\n    dt = DecisionTreeClassifier()\n    dt.fit(X_train,y_train)\n    y_train_pred = dt.predict(X_train)   \n    y_test_pred = dt.predict(X_test)   \n    print('for train')\n    print(metrics.classification_report(y_train,y_train_pred))\n    print(metrics.accuracy_score(y_train,y_train_pred))\n    print('for test')\n    print(metrics.classification_report(y_test,y_test_pred))\n    print(metrics.accuracy_score(y_test,y_test_pred))","5c540814":"confDT(features)","281e8c4f":"def confSVM(features):\n    X = df[features]\n    y = df.target\n    X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=125)\n    svm = SVC(gamma='scale')\n    svm.fit(X_train,y_train)\n    y_train_pred = svm.predict(X_train)   \n    y_test_pred = svm.predict(X_test)   \n    print('for train')\n    print(metrics.classification_report(y_train,y_train_pred))\n    print(metrics.accuracy_score(y_train,y_train_pred))\n    print('for test')\n    print(metrics.classification_report(y_test,y_test_pred))\n    print(metrics.accuracy_score(y_test,y_test_pred))","f91fe84e":"confSVM(features)","0685e862":"def confRF(features):\n    X = df[features]\n    y = df.target\n    X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=125)\n    rf = RandomForestClassifier(n_estimators=100, max_depth=2,random_state=0)\n    rf.fit(X_train,y_train)\n    y_train_pred = rf.predict(X_train)   \n    y_test_pred = rf.predict(X_test)   \n    print('for train')\n    print(metrics.classification_report(y_train,y_train_pred))\n    print(metrics.accuracy_score(y_train,y_train_pred))\n    print('for test')\n    print(metrics.classification_report(y_test,y_test_pred))\n    print(metrics.accuracy_score(y_test,y_test_pred))","faef2c00":"confRF(features)","f6fa8466":"person with hishest bp of 200 dont have heart disease","b2a72b5f":"thal vs heart disese","99a64cb6":"people with old peak less than 5 have suffered if thet have less than 1.25, the probability is high","c3548e02":"sex vs disease","5d4c1f5d":"only 4-5 are showing probable or definite left ventricular hypertrophy by Estes' criteria from which only one person is suffering\n\nnormal ecg have few patients when compared to people with having ST-T wave abnormality","f30d5d9b":"most of the patients are in range 48-59","17682351":"restecg vs disease","b9820018":"blood pressure at rest vs disease","fd1374ee":"cholestrol vs disease","63c8cdec":"there are few people with 0(upslope) slope, the chances are almost equal\n\npeople with 1 flatslope suffer more\n\npeople with downslope have less probability","90813642":"disease more observed in patients with non-anginal pain","e5c68bac":"persons with heart rate maximum at 149 - 176 are having heart disease","f84484e9":"slope of ecg vs heart disease","d57fa773":"patients with no enigma are more probably having heart disease","a80eddd8":"diseased is occurance is more in patients with rest bp at 115 - 137","763a7aa1":"age of the people is normal in distribution","e8568e97":"person with 0 zeromajor vessels have high chances of heart disese","4d839769":"there are more males in the data similarly there more males that have heart disease.\n\nBut if we see proportionately, females are more suffering from heart disease","caa61913":"highest heart rate reached vs disease","f726f966":"heart disease doesnot really depend upon fasting blood sugar","23e25c6e":"fbs vs heart disease","caa9551d":"old peak vs heart disease","da345c95":"this model may not be appropriate with decision tree","4a0fba0f":"exang vs disease","732bf870":"there are very less people with high colestrols \n\npatients with cholestrol levels of 213-301 have more heart disease","a87ca47a":"when thal = 0 , the person is more probobly having heart disease","94628d54":"ca vs heart disese","c62639ac":"chestpain vs heart disease","498c9206":"age vs disease"}}