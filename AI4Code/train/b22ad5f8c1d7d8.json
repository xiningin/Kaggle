{"cell_type":{"1295f52a":"code","387fa33e":"code","8bc61fb3":"code","76044051":"code","6ec98675":"code","6240bad6":"code","9e5b9a02":"code","1e993977":"code","b1edc951":"code","4407dc6b":"code","3f70d669":"markdown"},"source":{"1295f52a":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\n\n","387fa33e":"def label_encoder(c):\n    lc = LabelEncoder()\n    return lc.fit_transform(c)\n","8bc61fb3":"train_df = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv')\ntest_df = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')\n\nall_df = pd.concat([train_df, test_df])","76044051":"# Age fillna with mean age for each class\nage_map = all_df[['Age', 'Pclass']].dropna().groupby('Pclass').mean().to_dict()\nall_df.Age = all_df.Age.fillna(all_df.Pclass.map(age_map['Age']))\n\n# Cabin, fillna with 'X' and take first letter\nall_df.Cabin = all_df.Cabin.fillna('X').map(lambda x: x[0].strip())\n\n# Ticket, fillna with 'X', split string and take first split \nall_df.Ticket = all_df.Ticket.fillna('X').map(lambda x:str(x).split()[0] if len(str(x).split()) > 1 else 'X')\n\n# Fare, fillna with mean value\nall_df.Fare = all_df.Fare.fillna(all_df.Fare.mean())\n\n# Embarked, fillna with 'X' value\nall_df.Embarked = all_df.Embarked.fillna('X')\n\n# Name, take only surnames\nall_df.Name = all_df.Name.map(lambda x: x.split(',')[0])","6ec98675":"label_cols = ['Name', 'Ticket']\nonehot_cols = ['Pclass', 'Sex', 'Cabin', 'Embarked']\nnumerical_cols = ['Age', 'SibSp', 'Parch', 'Fare', 'Survived']","6240bad6":"onehot_encoded_df = pd.get_dummies(all_df[onehot_cols])\nlabel_encoded_df = all_df[label_cols].apply(label_encoder)\nnumerical_df = all_df[numerical_cols]\n\nall_df = pd.concat([numerical_df, label_encoded_df, onehot_encoded_df], axis=1)","9e5b9a02":"# Re-split all data\ntrain = all_df[:train_df.shape[0]]\n\ntest = all_df[train_df.shape[0]:].drop(columns=['Survived'])","1e993977":"train.head()","b1edc951":"test.head()","4407dc6b":"train.to_csv('train.csv')\ntest.to_csv('test.csv')","3f70d669":"The features for this notebook have been taken from here: https:\/\/www.kaggle.com\/jmargni\/tps-apr-2021-lightgbm-cv\n\n"}}