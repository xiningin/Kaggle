{"cell_type":{"44fe1777":"code","af905ae4":"code","4d94b8d8":"code","bb56be74":"code","b70ca13d":"code","a1d56f02":"code","b563ed67":"markdown","4b80d7af":"markdown","d2232414":"markdown"},"source":{"44fe1777":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output. ","af905ae4":"df=pd.read_csv('..\/input\/\/USD_PKR Historical Data (1999-2019) - USD_PKR Historical Data (1).csv')\ndf['Date']=pd.to_datetime(df['Date'], errors='coerce')#some pandas miracle here\ndf['Price']=pd.to_numeric(df['Price'], errors='coerce')# The \u015eimdi column look as object so i turned it to numeric\nprint(df.head(2), df.tail(2))\nprint(df.info())","4d94b8d8":"print(df.describe()) ","bb56be74":"X=df['Price']\nY=df['Date']\nX=np.array(X).reshape((len(X), 1))#i got some issues with shapes but i found this solution on stackoverflow\nY=np.array(Y).reshape((len(Y), 1))\nfig=plt.figure()\nax=fig.add_subplot(111)\nax.plot_date(Y, X, '.')\nplt.show()\n\n","b70ca13d":"sns.distplot(df['Price'])","a1d56f02":"Y=Y.astype('float64')\nx_train, x_test, y_train, y_test=train_test_split(X, Y, test_size=0.2)\n\n#firstly let's try linear regression\nlin_reg=LinearRegression()\nlin_reg.fit(x_train, y_train)\nco=lin_reg.score(X, Y)\n\n#now we will try KNeighborsRegressor\nknr=KNeighborsRegressor()\nknr.fit(X, Y)\nco2=knr.score(X, Y)\nX2=knr.predict(X)\nX2.astype('float64')\n\nprint(\"linear regsession: \", co)\nprint(\"KNeighbors Regressor: \", co2)#we have 89 precent accuracy with knr\nprint(\"prediction: \", X2)\n\nplt.scatter(X, Y, color='red')#let's plot the normal values and predicted values\nplt.plot(X, X2, color='blue')\nplt.show","b563ed67":"INTRODUCTION\n\nHey! this is my first public kernel so I am trying to upload data and see how it can be processed!","4b80d7af":"Lets see the graph of Pakistani currency with Dollar.\n\n","d2232414":"We are going to use some regression model to see which one is a good accuracy\n\n\n"}}