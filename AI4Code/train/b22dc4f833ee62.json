{"cell_type":{"6c6ec097":"code","62af34c8":"code","d8b1e507":"code","b91c7578":"code","d21e89a6":"code","b422cf61":"code","6c8a20d2":"code","3c36da59":"code","5a32d250":"code","3d3c9020":"code","8e2eccab":"code","7c9ac072":"code","170139d7":"code","50f828d9":"code","a33c9d27":"code","138f2ca3":"code","f962ed17":"code","bc7148fd":"code","83957417":"code","285785ca":"code","5add4278":"code","1df28f46":"code","4c2eef4e":"code","97398da7":"markdown","fbcffbf4":"markdown"},"source":{"6c6ec097":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","62af34c8":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks as cf\nimport plotly.express as px\ninit_notebook_mode(connected=True)\ncf.go_offline()","d8b1e507":"df1=pd.read_csv(\"..\/input\/premier-league\/stats.csv\")","b91c7578":"df1.head()","d21e89a6":"df2=pd.read_csv(\"..\/input\/premier-league\/results.csv\")","b422cf61":"df1.columns","6c8a20d2":"df2.head()","3c36da59":"df1.describe()","5a32d250":"class Table:\n    def __init__(self,data1,data2):\n        self.data1=data1\n        self.data2=data2\n    def dictionary(self,season):\n        teams=list(self.data1[self.data1[\"season\"]==season][\"team\"])\n        dict1={}\n        for i in teams:\n            team=i\n            \n            W=int(list(self.data1[(self.data1[\"team\"]==team)&(self.data1[\"season\"]==season)][\"wins\"])[0])\n            L=int(list(self.data1[(self.data1[\"team\"]==team)&(self.data1[\"season\"]==season)][\"losses\"])[0])\n            D=list((self.data2[((self.data2[\"home_team\"]==team)|(self.data2[\"away_team\"]==team))&(self.data2[\"season\"]==season)&(self.data2[\"result\"]==\"D\")][\"result\"]).value_counts())[0]\n            Pid=W+L+D\n            GA=int((np.array(self.data2[(df2[\"home_team\"]==team)&(self.data2[\"season\"]==season)][\"away_goals\"]).sum())+(np.array(self.data2[(self.data2[\"away_team\"]==team)&(self.data2[\"season\"]==season)][\"home_goals\"]).sum()))\n            GF=int((np.array(self.data2[(df2[\"home_team\"]==team)&(self.data2[\"season\"]==season)][\"home_goals\"]).sum())+(np.array(self.data2[(self.data2[\"away_team\"]==team)&(self.data2[\"season\"]==season)][\"away_goals\"]).sum()))\n            GD=int(GF-GA)\n            Pts=(W*3)+D\n            dict1[team]={\"Pid\":Pid,\"W\":W,\"D\":D,\"L\":L,\"GF\":GF,\"GA\":GA,\"GD\":GD,\"Pts\":Pts}\n        return dict1\n    def Table_for_Particular_Season(self,season):\n        t=self.dictionary(season)\n        index=np.array(list(t.keys()))\n        colmns=[\"Pid\",\"W\",\"D\",\"L\",\"GF\",\"GA\",\"GD\",\"Pts\"]\n        df=pd.DataFrame(data=t.values(),index=index,columns=[\"Pid\",\"W\",\"D\",\"L\",\"GF\",\"GA\",\"GD\",\"Pts\"])\n        return df\n    def number_of_goals(self,season):\n        #g=self.dictionary(season)\n        plt.figure(figsize=(10,10))\n        goals=self.data1[self.data1[\"season\"]==season][\"goals\"]\n        teams=self.data1[self.data1[\"season\"]==season][\"team\"]\n        fig=sns.barplot(y=teams,x=goals,orient='h',errwidth=0.55,saturation=.98)\n    def away_wins_vs_home_wins(self,season):\n        teams=list(self.data1[self.data1[\"season\"]==season][\"team\"])\n        dict1={}\n        away_win_list=[]\n        away_loss_list=[]\n        home_win_list=[]\n        home_loss_list=[]\n        labels=[]\n        for i in teams:\n            liv=self.data2[((self.data2[\"home_team\"]==i)|(self.data2[\"away_team\"]==i))&(self.data2[\"season\"]==season)][[\"home_team\",\"away_team\",\"home_goals\",\"away_goals\"]]\n            away_loss=liv[liv[\"away_team\"]==i][liv[\"home_goals\"]>liv[\"away_goals\"]].count()[\"home_team\"]\n            away_win=liv[liv[\"away_team\"]==i][liv[\"home_goals\"]<liv[\"away_goals\"]].count()[\"home_team\"]\n            home_loss=liv[liv[\"home_team\"]==i][liv[\"home_goals\"]<liv[\"away_goals\"]].count()[\"home_team\"]\n            home_win=liv[liv[\"home_team\"]==i][liv[\"home_goals\"]>liv[\"away_goals\"]].count()[\"home_team\"]\n            away_win_list.append(away_win)\n            away_loss_list.append(away_loss)\n            home_win_list.append(home_win)\n            home_loss_list.append(home_loss)\n            labels.append(i)\n            dict1[i]={\"home_win\":home_win,\"home_loss\":home_loss,\"away_win\":away_win,\"away_loss\":away_loss}\n        labels=list(dict1.keys())\n        fig, axs=plt.subplots(4,1,figsize=(10,20))\n        sns.barplot(y=labels,x=away_win_list,orient=\"h\",ax=axs[2],errwidth=0.55,saturation=.98)\n        sns.barplot(y=labels,x=away_loss_list,orient=\"h\",ax=axs[3],errwidth=0.55,saturation=.98)\n        sns.barplot(y=labels,x=home_win_list,orient=\"h\",ax=axs[0],errwidth=0.55,saturation=.98)\n        sns.barplot(y=labels,x=home_loss_list,orient=\"h\",ax=axs[1],errwidth=0.55,saturation=.98)\n        axs[0].set_title(\"home_wins\")\n        axs[1].set_title(\"home_loss\")\n        axs[2].set_title(\"away_wins\")\n        axs[3].set_title(\"away_loss\")\n        return dict1","3d3c9020":"t=Table(df1,df2)","8e2eccab":"# you can use season=input() instaed\nseason=\"2016-2017\"","7c9ac072":"df=t.Table_for_Particular_Season(season)","170139d7":"print(\"Premier league Table of {} season\".format(season))\ndf","50f828d9":"print(\"relegated teams in {} season were\".format(season))\nlist(df[-3:].index)","a33c9d27":"print(\"number of goals in {} season by each team\".format(season))\nt.number_of_goals(season)","138f2ca3":"print(\"analysis of home-away wins and losses in {} season\".format(season))\nt.away_wins_vs_home_wins(season)","f962ed17":"class Team:\n    def __init__(self,data1,data2):\n        self.data1=data1\n        self.data2=data2\n    def performance_throgh_years(self,team):\n        season=self.data1[self.data1[\"team\"]==team][\"season\"]\n        wins=self.data1[self.data1[\"team\"]==team][\"wins\"]\n        losses=self.data1[self.data1[\"team\"]==team][\"losses\"]\n        plt.figure(figsize=(10,7))\n        plt.grid()\n        plt.plot(season,wins,'red',label=\"WINS\",marker=\"o\")\n        plt.plot(season,losses,\"yellow\",label=\"LOSS\",marker=\"o\")\n        plt.xticks(rotation=60,fontsize=14)\n        plt.yticks(fontsize=14)\n        plt.legend(fontsize=14)\n        plt.show()\n    def home_away_record(self,team):\n        ars=self.data2[self.data2[\"away_team\"]==team][[\"home_goals\",\"away_goals\"]]\n        ars1=self.data2[self.data2[\"home_team\"]==team][[\"home_goals\",\"away_goals\"]]\n        away_wins=ars[ars[\"home_goals\"]<ars[\"away_goals\"]].count()[\"home_goals\"]\n        away_losses=ars[ars[\"home_goals\"]>ars[\"away_goals\"]].count()[\"home_goals\"]\n        home_wins=ars1[ars1[\"home_goals\"]>ars1[\"away_goals\"]].count()[\"home_goals\"]\n        home_losses=ars1[ars1[\"home_goals\"]<ars1[\"away_goals\"]].count()[\"home_goals\"]\n        return (away_wins,away_losses,home_wins,home_losses)\n    ","bc7148fd":"t1=Team(df1,df2)","83957417":"#team=input()\nteam=\"Arsenal\"","285785ca":"t1.performance_throgh_years(team)","5add4278":"print(\"FROM 2006-2018 {}\".format(team))\nprint(\"home wins=\",t1.home_away_record(team)[2])\nprint(\"home_losses=\",t1.home_away_record(team)[3])\nprint(\"away_wins=\",t1.home_away_record(team)[0])\nprint(\"away_losses=\",t1.home_away_record(team)[1])","1df28f46":"print(\"goals from oustide-Inside box\")\nm=df1[df1[\"team\"]==\"Manchester United\"][\"att_obox_goal\"].sum()\nc=df1[df1[\"team\"]==\"Chelsea\"][\"att_obox_goal\"].sum()\na=df1[df1[\"team\"]==\"Arsenal\"][\"att_obox_goal\"].sum()\nmc=df1[df1[\"team\"]==\"Manchester City\"][\"att_obox_goal\"].sum()\nliv=df1[df1[\"team\"]==\"Liverpool\"][\"att_obox_goal\"].sum()\ntot=df1[df1[\"team\"]==\"Tottenham Hotspur\"][\"att_obox_goal\"].sum()\nm1=df1[df1[\"team\"]==\"Manchester United\"][\"att_ibox_goal\"].sum()\nc1=df1[df1[\"team\"]==\"Chelsea\"][\"att_ibox_goal\"].sum()\na1=df1[df1[\"team\"]==\"Arsenal\"][\"att_ibox_goal\"].sum()\nmc1=df1[df1[\"team\"]==\"Manchester City\"][\"att_ibox_goal\"].sum()\nliv1=df1[df1[\"team\"]==\"Liverpool\"][\"att_ibox_goal\"].sum()\ntot1=df1[df1[\"team\"]==\"Tottenham Hotspur\"][\"att_ibox_goal\"].sum()\ndata1=pd.DataFrame({\"outside_box\":[m,c,a,mc,liv,tot],\"inside_box\":[m1,c1,a1,mc1,liv1,tot1],\"columns\":\"Man Chelsea Ars Manc Liv TOt\".split()})\ndata1.iplot(kind=\"bar\",x=\"columns\",y=[\"outside_box\",\"inside_box\"],subplots=True,shape=(1,2),subplot_titles=True,colors=[\"red\",\"blue\"])","4c2eef4e":"print(\"defensive record\")\nm=df1[df1[\"team\"]==\"Manchester United\"][\"clean_sheet\"].sum()\nc=df1[df1[\"team\"]==\"Chelsea\"][\"clean_sheet\"].sum()\na=df1[df1[\"team\"]==\"Arsenal\"][\"clean_sheet\"].sum()\nmc=df1[df1[\"team\"]==\"Manchester City\"][\"clean_sheet\"].sum()\nliv=df1[df1[\"team\"]==\"Liverpool\"][\"clean_sheet\"].sum()\ntot=df1[df1[\"team\"]==\"Tottenham Hotspur\"][\"clean_sheet\"].sum()\ndata1=pd.DataFrame({\"defensive record\":[m,c,a,mc,liv,tot],\"columns\":\"Man Chelsea Ars Manc Liv TOt\".split()})\npx.pie(data1,values=\"defensive record\",names=\"columns\")","97398da7":"# Now the stats for big six","fbcffbf4":"# analysis for a particular team from 2006-2017"}}