{"cell_type":{"d249a7d5":"code","e1c87da5":"code","e0646f42":"code","40908a35":"code","f05c2f3f":"code","3e7c49d1":"code","07d7e8b9":"code","25bc4e90":"code","205315bd":"code","9f2c32ed":"code","7f43bf51":"code","5555d233":"markdown","706e52db":"markdown","24dc746b":"markdown","83b978f9":"markdown","6df4a260":"markdown","c7ac4165":"markdown","d678cad4":"markdown","7d74b8c0":"markdown","09d94fe1":"markdown","e9b7c84c":"markdown"},"source":{"d249a7d5":"import numpy as np\nimport pandas as pd\nimport cv2\nimport os\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport json\nfrom sklearn import preprocessing\n\nIMAGE_DIR_TRAIN = '\/kaggle\/input\/ranzcr-clip-catheter-line-classification\/train\/'\nIMAGE_DIR_TEST = '\/kaggle\/input\/ranzcr-clip-catheter-line-classification\/test\/'","e1c87da5":"images = []\n\nfor filename in tqdm(os.listdir(IMAGE_DIR_TRAIN)):\n    file = IMAGE_DIR_TRAIN + filename\n    img = cv2.imread(file)\n    UID = os.path.splitext(filename)[0]\n    images.append([UID, 'steelblue', filename, img.shape[0], img.shape[1], img.shape[2]])\n\nfor filename in tqdm(os.listdir(IMAGE_DIR_TEST)):\n    file = IMAGE_DIR_TEST + filename\n    img = cv2.imread(file)\n    UID = os.path.splitext(filename)[0]\n    images.append([UID, 'blue', filename, img.shape[0], img.shape[1], img.shape[2]])\n\ndf_files = pd.DataFrame(images, columns=['UID','set','filename','h', 'w', 'c'])","e0646f42":"le = preprocessing.LabelEncoder()\nle.fit([\n    'CVC - Abnormal',\n    'CVC - Borderline',\n    'CVC - Normal',\n    'ETT - Abnormal',\n    'ETT - Borderline',\n    'ETT - Normal',\n    'NGT - Abnormal',\n    'NGT - Borderline',\n    'NGT - Incompletely Imaged',\n    'NGT - Normal',\n    'Swan Ganz Catheter Present'\n])\n\nce = preprocessing.LabelEncoder()\nce.fit([\n    '.01',\n    '.02',\n    '.03',\n    '.101',\n    '.102',\n    '.103',\n    '.501',\n    '.502',\n    '.503',\n    '.504',\n    '.911'\n])\n\ndf_train = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train.csv')\ndf_train.columns = ['UID','ETTA','ETTB','ETTN','NGTA','NGTB','NGTI','NGTN','CVCA','CVCB','CVCN','SGCP','PID']\ndf_annotations = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train_annotations.csv')\ndf_annotations.columns = ['UID','label','data']\ndf_annotations = df_annotations.join(df_files.set_index('UID'),how='inner',on='UID')\n\ndf_annotations['c'] = ce.inverse_transform(le.transform(df_annotations.label))","40908a35":"df = pd.DataFrame()\nfor i, ann in tqdm(df_annotations.iterrows(), total=len(df_annotations)):\n    row_df = pd.DataFrame(json.loads(ann.data),columns=['x1', 'y1'])\n    row_df['c'] = ann.c\n    row_df['label'] = ann.label\n    row_df['x'] = row_df.x1\/ann.w\n    row_df['y'] = row_df.y1\/ann.h\n    df = df.append(row_df)","f05c2f3f":"df_files[['h','w','set','filename']].groupby(by=['h','w','set'], as_index=False).count().plot(figsize=(20, 10), kind='scatter', x='w', y='h', s='filename', c='set', alpha=0.2)\nplt.show()","3e7c49d1":"plt.figure(figsize=(16, 16))\nimg = plt.imread(\"..\/input\/ranzcr-jpgs\/Mediastinal_structures_on_chest_X-ray_annotated-1536x1245.jpg\")\nplt.imshow(img)\nplt.show()","07d7e8b9":"df.plot(figsize=(16, 16), kind='scatter', x='x', y='y', c='c', s=100, alpha=.1)\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.gca().invert_yaxis()\nplt.show()","25bc4e90":"df.query(\"label in('CVC - Abnormal','CVC - Borderline', 'CVC - Normal')\").plot(figsize=(16, 16), kind='scatter', x='x', y='y', s=100, alpha=.1)\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.gca().invert_yaxis()\nplt.show()","205315bd":"df.query(\"label in('ETT - Abnormal','ETT - Borderline', 'ETT - Normal')\").plot(figsize=(16, 16), kind='scatter', x='x', y='y', s=100, alpha=.1)\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.gca().invert_yaxis()\nplt.show()","9f2c32ed":"df.query(\"label in('NGT - Abnormal','NGT - Borderline', 'NGT - Incompletely Imaged', 'NGT - Normal')\").plot(figsize=(16, 16), kind='scatter', x='x', y='y', s=100, alpha=.1)\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.gca().invert_yaxis()\nplt.show()","7f43bf51":"df.query(\"label in('Swan Ganz Catheter Present')\").plot(figsize=(16, 16), kind='scatter', x='x', y='y', s=100, alpha=.1)\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.gca().invert_yaxis()\nplt.show()","5555d233":"## EDA","706e52db":"(image credits https:\/\/www.radiologia2cero.com\/dispositivos-en-la-rx-de-torax\/)\n\nNow, try to make an imaginative effort and suppose the following images over the previous one.","24dc746b":"## About this Notebook\n\nThere are good EDA Notebooks published to understand data of competition. Here there are any nice examples:\n\n* [Detailed resource notebook & EDA for beginners](https:\/\/www.kaggle.com\/bipinkrishnan\/detailed-resource-notebook-eda-for-beginners) by [Bipin Krishnan P](https:\/\/www.kaggle.com\/bipinkrishnan). A good intro to understand basic concepts about the competition.\n* [RANZCR - Exploratory Data Analysis](https:\/\/www.kaggle.com\/ihelon\/ranzcr-exploratory-data-analysis) by [Yaroslav Isaienkov](https:\/\/www.kaggle.com\/ihelon). Good annotations examples.\n* [RANZCR-CLiP : One Stop For All EDA Needs](https:\/\/www.kaggle.com\/foolofatook\/ranzcr-clip-one-stop-for-all-eda-needs) by [Aayush Jain](https:\/\/www.kaggle.com\/foolofatook). Nice EDA. See category overlap section.\n\nHowever, we think that there are a couple of data that may be of interest to the competition.","83b978f9":"#### CVC annotations","6df4a260":"#### All annotations","c7ac4165":"### Annotations\n\nWe want to show the areas in which the annotations are placed on average on an ideal x-ray. Below is an x-ray with some interesting anatomical elements.","d678cad4":"#### NGT annotations","7d74b8c0":"#### ETT annotations","09d94fe1":"#### Swan Ganz catheter annotations","e9b7c84c":"### Image Sizes\n"}}