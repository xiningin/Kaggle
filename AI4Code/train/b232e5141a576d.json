{"cell_type":{"db923cfc":"code","40d1d37a":"code","617dad6b":"code","b33961eb":"code","b7a669fb":"code","64edaedf":"code","9f40ab1a":"code","0fb7a6a7":"code","07d30695":"code","7c081820":"code","cba8e77a":"code","125ce92d":"code","c769c2ce":"code","bff87c77":"code","58005f21":"code","ede0fdc0":"code","8fe8bceb":"code","bd538a98":"code","9d9079df":"code","b4471e48":"code","a6272da8":"code","6c9b6b5c":"code","1f5d4cbe":"code","16d623b7":"code","33c9f87d":"markdown","abf9a674":"markdown","bdc0ed7a":"markdown","1ad67bbc":"markdown","3967d015":"markdown","04657d9d":"markdown","6e999c03":"markdown","90d18580":"markdown","ae235607":"markdown","35d96f03":"markdown","ebdbb176":"markdown","99e7a13a":"markdown","08ae50b7":"markdown","98d371bf":"markdown","4d88f34b":"markdown","bfbfa5ef":"markdown","c0b4e5de":"markdown","e241cc63":"markdown","517e19b2":"markdown","f59a8960":"markdown","52b6ec5b":"markdown","7904d573":"markdown","9ffbea69":"markdown"},"source":{"db923cfc":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport requests\nimport seaborn as sns\n\nfrom joblib import Parallel, delayed\nfrom lxml import html\nfrom sklearn.linear_model import Lasso\nfrom tqdm import tqdm","40d1d37a":"sns.set(style=\"whitegrid\")\nsns.set_color_codes(\"pastel\")","617dad6b":"r = requests.get('https:\/\/ctflearn.com\/challenge\/1\/browse')\ntree = html.fromstring(r.content)\n\ntitles = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/h3\/text()')\npoints = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/p[contains(text(), \"points\")]\/text()')\nsolves = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/p[contains(text(), \"solve\")]\/text()')\nauthors = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/a[contains(@href, \"user\")]\/text()')\nlinks = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/a[contains(text(), \"View\")]\/@href')\ncategories = tree.xpath('\/\/div[contains(@class, \"uk-card\")]\/p[contains(@class, \"uk-margin-remove-top\")]\/text()')","b33961eb":"def scrap_challenge(link):\n    r = requests.get(f'https:\/\/ctflearn.com\/{link}')\n    tree = html.fromstring(r.content)\n    date = str(tree.xpath('\/\/span\/@data-timestamp')[0])\n    rating = str(tree.xpath('\/\/p[contains(text(), \"Community Rating\")]\/b\/text()')[0])\n    rating = -1 if rating == 'Unrated' else float(rating.split()[0])\n    return date, rating","b7a669fb":"challenge_data = Parallel(n_jobs=8)(\n    delayed(scrap_challenge)(link)\n    for link in tqdm(links)\n)","64edaedf":"creation_dates, ratings = zip(*challenge_data)","9f40ab1a":"df = pd.DataFrame.from_dict({\n    'title': titles,\n    'point': [int(p.split()[0]) for p in points],\n    'solve': [int(p.split()[0]) for p in solves],\n    'author': authors,\n    'link': links,\n    'category': categories,\n    'creation': pd.to_datetime(creation_dates, format='%Y-%m-%dT%H:%M:%S'),\n    'rating': ratings,\n})","0fb7a6a7":"df","07d30695":"categories = df.groupby('category').category.count().sort_values(ascending=False)\nsns.barplot(x=categories.values, y=categories.index, color=\"b\")\nsns.despine(left=True, bottom=True)","7c081820":"categories = df.groupby('category').rating.mean().sort_values(ascending=False)\nsns.barplot(x=categories.values, y=categories.index, color=\"b\")\nsns.despine(left=True, bottom=True)","cba8e77a":"categories = df.groupby('category').solve.mean().sort_values(ascending=False)\nsns.barplot(x=categories.values, y=categories.index, color=\"b\")\nsns.despine(left=True, bottom=True)","125ce92d":"df[df.rating >= 0].rating.mean()","c769c2ce":"sns.distplot(df[df.rating >= 0].rating);","bff87c77":"df[df.rating >= 0].sort_values(['rating', 'solve'], ascending=False)[:20]","58005f21":"df[df.rating >= 0].sort_values('rating')[:20]","ede0fdc0":"df.groupby('author').title.count().sort_values(ascending=False)[:10]","8fe8bceb":"df.groupby('author').rating.mean().sort_values(ascending=False)[:10]","bd538a98":"for c in df.category.unique():\n    df[f'is_{c}'] = df.category == c","9d9079df":"df.corr()[['rating']].sort_values('rating')","b4471e48":"df['lifetime'] = (df.creation.max() - df.creation).dt.days\ndf['log_lifetime'] = np.log1p(df['lifetime'])","a6272da8":"df['solve_per_day'] = df['solve'] \/ (df['lifetime']+1)\ndf['log_solve'] = np.log1p(df['solve'])","6c9b6b5c":"df.corr()[['point']].sort_values('point')","1f5d4cbe":"X = df[[\n    'rating',\n    'log_solve',\n    'log_lifetime',\n    'solve_per_day',\n    'is_Web',\n    'is_Programming',\n    'is_Forensics',\n    'is_Miscellaneous',\n    'is_Cryptography',\n    'is_Reverse Engineering',\n    'is_Binary',\n]]\nm = Lasso()\nm.fit(X, df.point)\nm.score(X, df.point)","16d623b7":"pred = m.predict(X)\ndf['predicted_points'] = pred\ndf['delta'] = np.abs(df.point - pred)\ndf.sort_values('delta', ascending=False)[:20][['title', 'point', 'predicted_points']]","33c9f87d":"### 4.7 Top 10 Authors - Number of Challenges","abf9a674":"### 5.3 Top 20 Challenges Award Outliers\n\nIf the number of points awarded for each challenge need to be reviewed, then the following 20 challenges are the first to review according to our basic model. :)","bdc0ed7a":"# 3. Put all data into a DataFrame\n\nAll data are put into a two-dimensional tabular data.\n\nMore info on dataframe: https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/dsintro.html#dataframe","1ad67bbc":"# 6. Final Notes\n\nThank you for reading this notebook!\n\nI also want to thank @intelagent the admin and maintainer of the [ctflearn.com](ctflearn.com) website for his support, as well as the website community members.\n\nIf you are interested in hacking challenges please visit [ctflearn.com](ctflearn.com) or drop a line on the [discord server](https:\/\/discord.gg\/yNHUQfJ).\n\nIf you like this work, add a comment below, share this notebook or upvote it!","3967d015":"### 4.3 Average Solve per Categories","04657d9d":"How many times the challenge is solve each day?","6e999c03":"Here is the distribution of ratings on challenges:","90d18580":"Correlation between number of point awarded to a challenge and features:","ae235607":"### 4.5 Top 20 Challenges - Best Rating","35d96f03":"### 4.2 Categories Rating","ebdbb176":"### 5.1 Basic feature engineering\n\nHow long the challenge is present on the website:","99e7a13a":"Challenge creation date and rating are not present on the challenges page. we have to visit each challenge page to get this piece of information.\n\nWe speed up this step by requesting 8 pages in parallel using `joblib`.","08ae50b7":"Columns meaning:\n\n - **title** : Challenge title\n - **point** : Number of points awarded to solver\n - **author** : Challenge creator\n - **link** : Challenge URI\n - **category** : Category of challenge\n - **creation** : Submission date of the challenge\n - **rating** : Average solvers' rating, scoring is between 1 and 5 stars","98d371bf":"### 5.2 Baseline model\n\nLet's use a very basic model expecting linear relation between features and number of points awarded.","4d88f34b":"### 4.6 Bottom 20 Challenges - Worst Rating","bfbfa5ef":"# 2. Scrap data from ctflearn.com\n\nWe are going to use the python `requests` and `lxml` modules to scrap information from the website.","c0b4e5de":"# 5. Analysis of Challenge Points\n\nEach challenge is given a certain amount of points. For challenge creators, it is difficult to evaluate how many points a challenge worth. Let see if we can guess number of points based on some challenge data.","e241cc63":"### 4.8 Top 10 Authors - Average Challenge Rating","517e19b2":"# 4. Data Analysis\n\n### 4.1 How Categories are represented on the website?\n\n`Forensics` and `Cryptography` are the most reprensented categories.\n\n`Web` and `Binary` are the least common categories.","f59a8960":"# Ethical Hacking Platform - Web Scraping & EDA\n\n\n![image](https:\/\/source.unsplash.com\/UVMPVIRCF5w\/)\n\nIn this notebook I will mix two things I like: data-science and hacking challenges.\n\n[CTFlearn.com](CTFlearn.com) is an ethical hacking platform that enables tens of thousands to learn, practice, and compete. It offers user-submitted and community-verified challenges in a wide range of topics.\n\nIn this notebook, I will scrap the website information on the hacking challenges and we are going to visualise data about them.\n\n\n# 1. import python modules","52b6ec5b":"### 4.4 Challenges Rating\n\nOverall challenges are well rated with a mean of 4.4 \/ 5 stars.","7904d573":"Let's discuss these numbers:\n - For a challenge, more `solves` means a worse rating. More `points` awarded by a challenge also mean a better rating. Maybe a hacker gives a better rating when solving a hard challenge? \n - Categories are important in hackers' rating: `Cryptography` is by far the worst-rated category, but `reverse engineering` and `forensics` are the best-rated categories.","9ffbea69":"### 4.9 Correlation of Challenge Properties and Hackers Rating?"}}