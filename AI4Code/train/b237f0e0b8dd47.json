{"cell_type":{"b7973d51":"code","87ac1f3e":"code","5f6ec57f":"code","f46caa9d":"code","97fdced0":"code","c2cd9360":"markdown","ac10cbd4":"markdown","66a6fea6":"markdown","36559045":"markdown","f9f9dbe0":"markdown"},"source":{"b7973d51":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87ac1f3e":"import keras  as keras\nimport tensorflow as tensorflow\nimport matplotlib.pyplot as plt\nfrom keras import models\nfrom keras import layers\n\n\nfrom keras.datasets import mnist\nfrom keras.utils import to_categorical","5f6ec57f":"(train_images, train_labels), (test_images, test_labels) = mnist.load_data();\ntrain_images = train_images.reshape((60000, 28 * 28))\ntrain_images = train_images.astype('float32') \/ 255\ntest_images = test_images.reshape((10000, 28 * 28))\ntest_images = test_images.astype('float32') \/ 255\n\ntrain_labels = to_categorical(train_labels)\ntest_labels = to_categorical(test_labels)","f46caa9d":"network = models.Sequential()\n# Add the layers for the deep neural network\nnetwork.add(layers.Dense(512, activation='relu', input_shape=(28 * 28,)))\nnetwork.add(layers.Dense(10, activation='softmax'))\n\n# compile the model\nnetwork.compile(optimizer='rmsprop',\n                loss='categorical_crossentropy',\n                metrics=['accuracy'])","97fdced0":"network.fit(train_images, train_labels, epochs=5, batch_size=128)\n\ntest_loss, test_acc = network.evaluate(test_images, test_labels)\nprint('test_acc:', test_acc)\n\n","c2cd9360":"Now let us split the dataset with train , test","ac10cbd4":"Fit the model","66a6fea6":"Go ahead and create the model","36559045":"First load the deep learning libraries and famous mnist dataset fo keras","f9f9dbe0":"# Deep Learning Tutoiral - Hello World\n\nIn this tutorial we will learn how to create a model and fit the model to a test datset . This tutorial is\nfor beginners who are looking for how to create a basic deep learning model "}}