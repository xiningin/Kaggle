{"cell_type":{"1770dc1e":"code","ce10460f":"code","93b26631":"code","a4bf33b2":"code","7fcc7b20":"code","a0a15ee9":"code","4eb62dde":"code","6e20055e":"code","2e25694a":"code","b1949c11":"code","ca3d0cf4":"code","0ba4fb41":"code","459859f7":"code","901d7ea4":"code","09c1a04d":"code","5f60ba0a":"code","219ae58f":"code","b3a7a62d":"code","f3a06a23":"code","77ff9e7c":"code","6426c632":"code","fd6254d3":"code","36ef1341":"code","f138caf2":"code","e5d23a85":"code","edeb1274":"code","f3ddc380":"code","ab01223d":"code","aa631cd9":"code","32c51275":"code","66c823d1":"code","b4024573":"code","6c791b25":"code","a8a3d6c3":"code","aa6701bc":"code","7cd0ec32":"code","0d3e8f02":"code","8a47c71b":"markdown","0cb51f62":"markdown","72714157":"markdown","d4e8d846":"markdown","a364b71e":"markdown","a4a4c20f":"markdown","d74fe16f":"markdown","4e9a5d73":"markdown","52116023":"markdown","edd91f0f":"markdown","ea4bcf05":"markdown","b5eb091a":"markdown","4bb311e9":"markdown","df73394e":"markdown","c1927c8f":"markdown","04fdb620":"markdown","c5418748":"markdown","b675cd29":"markdown","1a07a8fb":"markdown","f44021f1":"markdown","36e9a96e":"markdown"},"source":{"1770dc1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd \nimport numpy as np \nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_columns', None)\nimport scipy.stats\n\n# visuals\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce10460f":"market = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', delimiter=\"\\t\")\nmarket = market.drop(['ID','Dt_Customer'], axis=1)","93b26631":"market.head(n=10)","a4bf33b2":"market.shape","7fcc7b20":"market.info()","a0a15ee9":"market.describe()","4eb62dde":"# total number of children\nmarket['no_children'] = market['Kidhome'] + market['Teenhome']\n# total items bought\nmarket['total_items_bought'] = market['MntWines'] + market['MntFruits'] + market['MntMeatProducts'] + market['MntFishProducts'] + market['MntSweetProducts'] + market['MntGoldProds']\n# total number of purchases\nmarket['total_nbr_purchases'] = market['NumDealsPurchases'] + market['NumWebPurchases'] + market['NumCatalogPurchases'] + market['NumStorePurchases']\n#customer age\nmarket['age'] = 2021 - market['Year_Birth']\n\nmarket = market.drop(['Year_Birth'], axis=1)","6e20055e":"market.describe()","2e25694a":"market[market['Income']>600000]","b1949c11":"market[market['age']>90]","ca3d0cf4":"market = market[market['Income']<600000]\nmarket = market[market['age']<90]","0ba4fb41":"def hist_with_vline(data, column):\n    \"\"\"This function gets data and column name.\n    Plots a histogram with 100 bins, draws a Vline of the column mean and median\"\"\"\n   \n    plt.figure(figsize=(12,6))\n    _ = sns.histplot(market[column], bins= 100)\n    plt.title('Histogram of ' + column)\n    miny, y_lim = plt.ylim()\n    plt.text(s = f\"Mean  {column} : {market[column].mean():.2f}\", x =market[column].mean() * 1.1,  y = y_lim * 0.95, color = 'r')\n    _ =plt.axvline(market[column].mean(), color = 'r')\n    _ = plt.axvline(market[column].median())\n    plt.text(s = f\"Median {column} : {market[column].median():.2f}\", x= market[column].median() * 1.1, y= y_lim * 0.90, color = 'b')","459859f7":"hist_with_vline(market, 'Income')","901d7ea4":"market = market[market['Income']<120000]","09c1a04d":"hist_with_vline(market, 'Income')","5f60ba0a":"hist_with_vline(market, 'total_items_bought')","219ae58f":"columns = ['MntWines', 'MntFruits', 'MntMeatProducts','MntFishProducts', 'MntSweetProducts','MntGoldProds']\ntitles = ['Wines Sold', 'Fruits Sold', 'Meat Products Sold', 'Fish Products Sold', 'Sweets Sold', 'Gold Sold']\ncolors = ['blue', 'green', 'darkblue','red','orange','yellow']\n\nfig, ax = plt.subplots(2,3, figsize=(16,10))\nfor i in range(len(columns)):\n    sns.histplot(market[columns[i]], bins= 100, ax = ax[i\/\/3, i%3],color=colors[i])\n    ax[i\/\/3, i%3].set_title('Distribution of ' + titles[i])\n    ax[i\/\/3, i%3].set_xlabel(titles[i])\n    ax[i\/\/3, i%3].text(s = f\"Total number of \\n{columns[i]} sold are {market[columns[i]].sum()} \",\n                       x = market[columns[i]].max()\/3.5, y = 200)\n    ","b3a7a62d":"plt.figure(figsize=(12,6))\n\n_ = sns.scatterplot(x ='Income',y = 'total_items_bought', data = market)\n_ = plt.title('Income vs Total Items Bought')\n_ = plt.ylabel('Total Items Bought')","f3a06a23":"px.scatter(market, \n           x = 'Income', \n           y= 'total_items_bought', \n           color = 'Education', \n           title = 'Income According to Educational Status', )","77ff9e7c":"market.Education.value_counts()","6426c632":"fig, (ax0, ax1 )= plt.subplots(1,2 , figsize=(12,6))\n_= sns.barplot(x = 'Education', y = 'Income', data = market, ax = ax0)\nax0.set_title('Income According to Education')\n_ = sns.barplot(x = 'Education', y = 'total_items_bought', data = market, ax=ax1)\nax1.set_title('Total Items Bought By Custormers by Their Educational Status')\n\n_ = ax0.text(s = f\"n :{market.Education.value_counts()[0]}\", x = -0.35, y = 10000)\n_ = ax0.text(s = f\"n :{market.Education.value_counts()[1]}\", x = 0.75, y = 10000)\n_ = ax0.text(s = f\"n :{market.Education.value_counts()[2]}\", x = 1.75, y = 10000)\n_ = ax0.text(s = f\"n :{market.Education.value_counts()[3]}\", x = 2.75, y = 10000)\n_ = ax0.text(s = f\"n :{market.Education.value_counts()[4]}\", x = 3.75, y = 10000)","fd6254d3":"px.scatter(market, \n           x = 'Income', \n           y= 'total_items_bought', \n           color = 'Marital_Status', \n           title = 'Income According to Marital Status', )\n","36ef1341":"fig, (ax0, ax1 )= plt.subplots(1,2 , figsize=(15,6))\n_ = sns.barplot(x = 'Marital_Status', y = 'Income', data = market, ax = ax0)\n_ = ax0.set_title('Income According to Marital Status')\n_ = sns.barplot(x = 'Marital_Status', y = 'total_items_bought', data = market, ax=ax1)\n_ = ax1.set_title('Total Items Bought By Custormers by Their Marital Status')\n\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[0]}\", x = -0.35, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[1]}\", x = 0.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[2]}\", x = 1.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[3]}\", x = 2.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[4]}\", x = 3.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[5]}\", x = 4.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[6]}\", x = 5.75, y = 10000)\n_ = ax0.text(s = f\"n = \\n{market.Marital_Status.value_counts()[7]}\", x = 6.75, y = 10000)\n","f138caf2":"market.groupby(['Education']).agg(['mean','sum'])","e5d23a85":"fig, (ax0,ax1) = plt.subplots(1,2,figsize=(12,6), sharex=True)\n_ = sns.barplot(x= market.no_children, y= market.Income, ax=ax0)\n_ = sns.barplot(x= market.no_children, y= market.total_items_bought, ax=ax1)\nax0.text(s= f\"n:{market[market['no_children']==0]['no_children'].count()}\", x = -0.25, y = 20000)\nax0.text(s= f\"n:{market[market['no_children']==1]['no_children'].count()}\", x = 0.75, y = 20000)\nax0.text(s= f\"n:{market[market['no_children']==2]['no_children'].count()}\", x = 1.75, y = 20000)\nax0.text(s= f\"n:{market[market['no_children']==3]['no_children'].count()}\", x = 2.75, y = 20000)\n\nax1.text(s = f\"Mean Sales: \\n{market[market['no_children']==0]['total_items_bought'].mean():.2f}\", x = -0.35, y = 50)\nax1.text(s = f\"Mean Sales: \\n{market[market['no_children']==1]['total_items_bought'].mean():.2f}\", x = 0.65, y = 50)\nax1.text(s = f\"Mean Sales: \\n{market[market['no_children']==2]['total_items_bought'].mean():.2f}\", x = 1.65, y = 50)\nax1.text(s = f\"Mean Sales: \\n{market[market['no_children']==3]['total_items_bought'].mean():.2f}\", x = 2.65, y = 50)","edeb1274":"from sklearn.preprocessing import StandardScaler, LabelEncoder\nle = LabelEncoder()\nss = StandardScaler()","f3ddc380":"ss_market = market.copy()\n\ncols = ss_market.select_dtypes(exclude='object').columns\nss_market[cols] = ss.fit_transform(ss_market[cols])","ab01223d":"# getting categorical columns and their indices.\ncatColumnsPos = [ss_market.columns.get_loc(col) for col in list(ss_market.select_dtypes('object').columns)]\nprint('Categorical columns           : {}'.format(list(ss_market.select_dtypes('object').columns)))\nprint('Categorical columns position  : {}'.format(catColumnsPos))","aa631cd9":"from kmodes.kprototypes import KPrototypes\n\ndfMatrix = ss_market.to_numpy()","32c51275":"cost = []\nfor x in range(2,6):\n    kprototype = KPrototypes(n_jobs = -1, n_clusters = x, init = 'Huang', random_state = 0)\n    clusters = kprototype.fit_predict(dfMatrix, categorical = catColumnsPos)\n    cost.append(kprototype.cost_)\n    print('Cluster initiation: {}'.format(clusters))","66c823d1":"# Converting the results into a dataframe and plotting them\ndf_cost = pd.DataFrame()\ndf_cost['clusters'] = range(2,6)\ndf_cost['cost'] = cost","b4024573":"# elbow method for number of clusters\nsns.lineplot(x='clusters', y= 'cost', data=df_cost)","6c791b25":"# Kmeans tuned\nkprototype = KPrototypes(n_jobs = -1, n_clusters = 4, init = 'Huang', random_state = 0)\nclusters = kprototype.fit_predict(dfMatrix, categorical = catColumnsPos)","a8a3d6c3":"market['clusters'] = clusters","aa6701bc":"plt.figure(figsize=(12,6))\n\n_ = sns.scatterplot(x ='Income',\n                    y = 'total_items_bought',\n                    data = market,\n                    hue='clusters',\n                   palette = 'Set2')\n_ = plt.title('Income vs Total Items Bought')\n_ = plt.ylabel('Total Items Bought')","7cd0ec32":"market.groupby(['clusters']).agg(['mean','sum'])","0d3e8f02":"fig, ax = plt.subplots(2,3, figsize = (24,12))\n_ =  sns.scatterplot(x ='Income',y = 'MntWines', data = market, hue= 'clusters', palette = 'Set2', ax = ax[0,0])\n_ =  sns.scatterplot(x ='Income',y = 'MntFruits', data = market, hue= 'clusters', palette = 'Set2', ax = ax[0,1])\n_ =  sns.scatterplot(x ='Income',y = 'MntMeatProducts', data = market, hue= 'clusters', palette = 'Set2', ax = ax[0,2])\n_ =  sns.scatterplot(x ='Income',y = 'MntFishProducts', data = market, hue= 'clusters', palette = 'Set2',ax= ax[1,0])\n_ =  sns.scatterplot(x ='Income',y = 'MntSweetProducts', data = market, hue= 'clusters', palette = 'Set2', ax= ax[1,1])\n_ =  sns.scatterplot(x ='Income',y = 'MntGoldProds', data = market, hue= 'clusters', palette = 'Set2', ax = ax[1,2])\n\n_ = ax[0,0].set_title('Amount of Wine Products Bought by Clusters')\n_ = ax[0,1].set_title('Amount of Fruits Bought by Clusters')\n_ = ax[0,2].set_title('Amount of Meat Products Bought by Clusters')\n_ = ax[1,0].set_title('Amount of Fish Products Bought by Clusters')\n_ = ax[1,1].set_title('Amount of Sweet Products Bought by Clusters')\n_ = ax[1,2].set_title('Amount of Gold Products Bought by Clusters')","8a47c71b":"## How things sell?\n\nLet's see how the items sold; by deals, web, catalog or store? And who visited the web site the most?\n\n### Deals are for : \n    Customers with a masters degree (probably doing their PhD's) puchasing via deals; however the amount that graduates and PhD's buy via deals also. \n    \n### Online Shopping:\n    PhD's and Graduates used online shopping more than other ( slightly higher than master's)\n    \n### Catalog Buyers :\n    And again PhD's and Graduates are more likely to buy from catalogs. \n    \n### Who Visits the Store:\n    It seems like PhD's love that store. Also, masters and graduates visit the store a lot. \n    \n### Web page Visits:\n    Basic level educated customers visit the web page more than anyone. This can be a good outcome; they follow the store's deals etc but probably struggling with purchasing items. Maybe shop owners could come up with a special deal to make these customers buy some stuff.\n   \n\n","0cb51f62":"## Analysis of Product Sales\n\nAlright, Education is highly related with Wine consumption; PhD's buy more wine and Basic's (not so sure about the terms here, I think basic is the ones that not finished 2nd Cycle- upto middle school maybe? )bought the least amount. Additionally, others are nearly similar (A\/B test might be good here - Kruskal Wallis test followed by Mann Whitney U). \nWe can see graduates bought more fruits, meat, and gold products; 2nd cycles bought more Fish and Sweet products.","72714157":"## Descriptive Statistics","d4e8d846":"128 years old, earns 666666k money. The first one is not likely to occur, second one is outlier. Lets see who is earning 66666k money.","a364b71e":"Customers with a PhD earn and spend more than any other customers with different educational background. And, not so surprisingly Basic level educated customers earn and spend the least amount of money. \n\nAnd when we investigate the number of customers in each group, it is wise to investigate what customers buy with different educational backgrounds.","a4a4c20f":"Now our clusters are set, we need to visualize and get descriptives of the data according to clusters.\n\nHowever, from what I got we can conclude that; there are 4 clusters of the customers. \n\nRegular (cluster2), Bronze (cluster 1), Premium (cluster 0),and Gold Customers (cluster 3) (couldn't come up with a better idea)\n\n\n\nLet's see specifications of these clusters:","d74fe16f":"There is a linear relation with income and number of items bought.","4e9a5d73":"#### Creating New Columns","52116023":"### Introduction to Data\n\nThe customer data has 2240 rows and 28 columns. I checked and deleted the  cell after, each row is for a different customer, there are no duplicates in the data.\n\nFrom the descriptives table, we see none of the columns have missings, and no values below 0.\n\nHowever, we might need a deeper knowledge about what the columns are ; such as AcceptedCmp, Recency, Z_CostContact and Response. We don't know what these columns are.\n\nQuick insights : \nIncome column's higher value is 6666666, and percentiles are in between 35k to 68k. The highest value is a possible outlier.\n\nMean Web site visits per month is 5 for 2k customers. The max value is 20. \n\nAcceptedCmp columns are binomial, 0 and 1.\n\n","edd91f0f":"# Market Customer Personality Analysis\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\nSteps followed in this notebook:\n\n1. Detailed descriptions of customers\n2. CLustering \n3. Descriptives among clusters\n","ea4bcf05":"### Observation\n\nMost of the customers earn between 40k to 70k. ","b5eb091a":"First Income:","4bb311e9":"## Clustering\n\n### Scaling the data","df73394e":"All the sold products histograms are right skewed. Majority of the customers buys items lower than certain amounts. \n\nOn the other hand, Wines are the most sold items (675k) and Meat producs follow with 364k, while the Fruit and Sweet products are the least sold items (58k and 59k respectively). ","c1927c8f":"## Visuals","04fdb620":"The families with no children earn and spend more than families with children. ","c5418748":"I'll go with 4 clusters. Let's see how their purchasing behaviours are.","b675cd29":"## Observation\n\n### Scatters\n\nCluster 3 (gold customers) obviously earn the biggest amount among other clusters yet they are not the highest buyers of some items such as Fruits, Gold products.\n\nAlmost for any product, the highest buyers are Gold or Premium custormers. I think there are 2 ways for this shop;\n    the first one is to keep current gold and premium customers buy their products, and make some exclusive deals for them - For example some deals for high \/ moderate quality wine and cheese with it. \n    The second one is to attract customers in lower clusters (regular and bronze). I don't know the product range of this shop, maybe all items are more expensive than other shops or the items are high quality items which cost more. Without proper knowledge, it can be suggested that one of both wheter increase the product range (low- medium and high quality) for anyone can purchase; or create deals to attract low-middle incomed customers. \n    \n    \n\n### Grouped table - number of purchases\n\n1. It is obvious that Cluster 1 follows deals. I suggest, keep track of their purchasing behaviours, and react with deals according to change.\n2. Bronze, gold and premium customers choose online shopping. Let's create e-mail subscriptions, instagram accounts (if not present) etc to reach potential customers in these clusters. Also, be sure current customers know about deals, discounts etc.\n3. Premium and gold customers make catalog buying. Catalog buying means buying with e-mail order and requires shipping to the adress. Shipping deals or free shipping would be a good idea. And make sure if the items received in time!.\n4. Store purchases are similar, the above mentioned suggestions would be good for this also.\n5. Number of web visits and online shopping give good results: Regular customers visit web page a lot, but they aren't buying stuff. However premium and gold customers visit web page less. I am thinking that these premium and gold customers know what they are buying, won't spend too much time online. Regular customers can be a good online shoppers. They mostly buy wine and meat products.\n\n","1a07a8fb":"I don't know what these labels are :) YOLO, absurd as marital status? \n\nAbsurds earn more money, and widows follow them as a 2nd in the list; IF we see only the total amount they earn. However we can ignore Alone, absurd and YOLO ones. It's better to see what the other ones bought.\n\nIf we think about the number differences of each group, getting sum of Wine, Meat etc would not be a good idea. I'd prefer means here. First, see table by grouby function.","f44021f1":"### Does Children effect market shopping?","36e9a96e":"The customers earn more than 120k; these ones are outliers also. I'll remove these too.\n\nPS: I can remove outliers by Z score method or Tukey's IQR method; however, I wanted to remove the outliers by certain columns (the ones seemed important to me such as age, income)"}}