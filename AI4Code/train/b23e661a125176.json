{"cell_type":{"cc52e0cd":"code","9d08ccc8":"code","758e9563":"code","2b644873":"code","5d0c97ae":"code","b4e46eed":"code","6575690f":"code","1cdfab9e":"code","7eef6fbd":"code","8e628eff":"code","a44aabec":"code","1b2fa0e2":"code","e02656ff":"code","6411febf":"code","02069c2c":"markdown","492c6cff":"markdown","36cdc5eb":"markdown","7cb49acf":"markdown","e32777fc":"markdown","282bf443":"markdown"},"source":{"cc52e0cd":"import numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import confusion_matrix\n\nimport tensorflow as tf","9d08ccc8":"train_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/train'\nval_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/val'\ntest_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/test'","758e9563":"IMG_HEIGHT = 224\nIMG_WIDTH = 224\n\nBATCH_SIZE = 32","2b644873":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255,\n    rotation_range=20,\n    brightness_range=(1.2, 1.5),\n    horizontal_flip=True\n)\n\nval_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255\n)\n\ntest_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255\n)","5d0c97ae":"train_data = train_datagen.flow_from_directory(\n    train_dir,\n    target_size=(IMG_HEIGHT, IMG_WIDTH),\n    class_mode='binary',\n    batch_size=BATCH_SIZE\n)\n\nval_data = train_datagen.flow_from_directory(\n    val_dir,\n    target_size=(IMG_HEIGHT, IMG_WIDTH),\n    class_mode='binary',\n    batch_size=BATCH_SIZE\n)\n\ntest_data = train_datagen.flow_from_directory(\n    test_dir,\n    target_size=(IMG_HEIGHT, IMG_WIDTH),\n    class_mode='binary',\n    batch_size=BATCH_SIZE\n)","b4e46eed":"mobilenet = tf.keras.applications.MobileNetV2(\n    input_shape=(IMG_HEIGHT, IMG_WIDTH, 3),\n    include_top=False,\n    weights='imagenet',\n    pooling='avg'\n)\n\nmobilenet.trainable = False","6575690f":"inputs = tf.keras.Input(shape=(IMG_HEIGHT, IMG_WIDTH, 3))\n\npretrained_model = mobilenet(inputs, training=False)\n\ndense = tf.keras.layers.Dense(1024, activation='relu')(pretrained_model)\n\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(dense)\n\n\nmodel = tf.keras.Model(inputs, outputs)\n\n\nprint(model.summary())","1cdfab9e":"EPOCHS = 50\n\nmodel.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\nhistory = model.fit(\n    train_data,\n    validation_data=val_data,\n    batch_size=BATCH_SIZE,\n    epochs=EPOCHS,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=3,\n            restore_best_weights=True\n        )\n    ]\n)","7eef6fbd":"true_labels = test_data.labels\npred_labels = np.squeeze(np.array(model.predict(test_data) >= 0.5, dtype=np.int))\n\ncm = confusion_matrix(true_labels, pred_labels)","8e628eff":"test_data.class_indices","a44aabec":"plt.figure(figsize=(6, 6))\nsns.heatmap(cm, annot=True, fmt='g', vmin=0, cmap='mako', cbar=False)\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Actual\")\nplt.xticks(np.arange(2) + 0.5, ['Normal', 'Pneumonia'], fontsize=16)\nplt.yticks(np.arange(2) + 0.5, ['Normal', 'Pneumonia'], fontsize=16)\nplt.show()","1b2fa0e2":"results = model.evaluate(test_data, verbose=0)\n\naccuracy = results[1]\nauc = results[2]","e02656ff":"tn, fp, fn, tp = cm.ravel()\n\nprecision = tp \/ (tp + fp)\nrecall = tp \/ (tp + fn)","6411febf":"print(\"Accuracy: {:.2f}\".format(accuracy))\nprint(\"AUC: {:.2f}\".format(auc))\nprint(\"Precision: {:.2f}\".format(precision))\nprint(\"Recall: {:.2f}\".format(recall))","02069c2c":"# Getting Started","492c6cff":"# Creating Data Generators","36cdc5eb":"# Building the Model","7cb49acf":"# Results","e32777fc":"# Task for Today  \n\n***\n\n## Chest X-Ray Pneumonia Classification  \n\nGiven *images of chest X-rays*, let's try to predict whether **pneumonia is present** in a given image.  \n  \nWe will use a pre-trained TensorFlow CNN to make our predictions.","282bf443":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/xgRxO9iqITI"}}