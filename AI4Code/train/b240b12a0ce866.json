{"cell_type":{"e40d70ab":"code","f6adab1b":"code","cad9f677":"code","271ff56d":"code","96b11520":"code","89a28d93":"code","74f92801":"code","4416420e":"code","a68c99ff":"code","0306dfd6":"code","946715af":"code","bf481fea":"code","948a9f84":"code","5de00e67":"code","7221041b":"code","bd2a493d":"code","cffa9194":"code","1d49d421":"code","d0da9129":"code","dcf30c64":"code","26d3f929":"code","84cc100e":"code","5e95d5ab":"code","300b8659":"code","4394f6d4":"code","6bd1fd5b":"code","3c1f7e48":"code","57006204":"code","d326785b":"code","55beddd7":"code","d657bbd0":"code","29373da2":"code","a33df460":"markdown","2bdd6d1f":"markdown","63b22f8e":"markdown","1f8c5f33":"markdown","08c6f01e":"markdown","29913417":"markdown","948b5582":"markdown","014cd1a2":"markdown","0cd7272b":"markdown","8b2120b1":"markdown","040a1102":"markdown"},"source":{"e40d70ab":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model\nfrom sklearn import metrics\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings('ignore')","f6adab1b":"df = pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","cad9f677":"df.head()\n#df.describe()\n#df.info()","271ff56d":"df1 = df[['price', 'bedrooms', 'bathrooms', 'sqft_living',\n       'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade',\n       'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode',\n       'lat', 'long', 'sqft_living15', 'sqft_lot15']]\nh = df1.hist(bins = 25,figsize = (16,16),xlabelsize = 10,ylabelsize = 10,xrot=-15)\nsns.despine(left = True,bottom=True)\n[x.title.set_size(12) for x in h.ravel()];\n[x.yaxis.tick_left() for x in h.ravel()];","96b11520":"sns.set(style=\"whitegrid\", font_scale=1)","89a28d93":"f, axes = plt.subplots(1,2,figsize = (15,5))\nsns.boxplot(x = 'bedrooms',y = 'price',data = df,ax = axes[0]);\nsns.boxplot(x = 'floors', y = 'price',data = df,ax = axes[1]);\nsns.despine(left=True, bottom=True)\naxes[0].set(xlabel = 'Bedrooms',ylabel = 'Price')\naxes[0].yaxis.tick_left()\n\naxes[1].set(xlabel = 'Floors',ylabel = 'Price')\naxes[1].yaxis.set_label_position('right')\naxes[1].yaxis.tick_right()\n\nf, axe = plt.subplots(1,1,figsize = (15,5))\nsns.boxplot(x = 'bathrooms' , y = 'price',data = df,ax = axe);\naxe.set(xlabel = 'Bathrooms', ylabel = 'Price');","74f92801":"f, axes = plt.subplots(1, 2,figsize=(15,5))\nsns.boxplot(x=df['waterfront'],y=df['price'], ax=axes[0])\nsns.boxplot(x=df['view'],y=df['price'], ax=axes[1])\nsns.despine(left=True, bottom=True)\naxes[0].set(xlabel='Waterfront', ylabel='Price')\naxes[0].yaxis.tick_left()\naxes[1].yaxis.set_label_position(\"right\")\naxes[1].yaxis.tick_right()\naxes[1].set(xlabel='View', ylabel='Price')\n\nf, axe = plt.subplots(1, 1,figsize=(12.18,5))\nsns.boxplot(x=df['grade'],y=df['price'], ax=axe)\nsns.despine(left=True, bottom=True)\naxe.yaxis.tick_left()\naxe.set(xlabel='Grade', ylabel='Price');","4416420e":"df.corr()['price'].sort_values()","a68c99ff":"plt.figure(figsize = (10,6))\nsns.scatterplot(x = 'sqft_living',y = 'price', data = df);","0306dfd6":"df.head()","946715af":"df = df.drop('id',axis = 1)","bf481fea":"df['date'] = pd.to_datetime(df['date'])","948a9f84":"df['year'] = df['date'].apply(lambda date: date.year)\ndf['month'] = df['date'].apply(lambda date: date.month)","5de00e67":"df.groupby('month').mean()['price'].plot();","7221041b":"df = df.drop('date',axis = 1)","bd2a493d":"#df = df.drop('zipcode',axis =1)","cffa9194":"df['yr_renovated'].value_counts()","1d49d421":"df['sqft_basement'].value_counts()","d0da9129":"X = df.drop('price', axis = 1).values\ny = df['price'].values","dcf30c64":"X.shape,y.shape","26d3f929":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.8, random_state = 42)","84cc100e":"mm_scaler = MinMaxScaler()\nX_train = mm_scaler.fit_transform(X_train)\nX_test = mm_scaler.transform(X_test)","5e95d5ab":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras import optimizers","300b8659":"model = Sequential()\n\nmodel.add(Dense(units = 6,activation = 'relu',input_dim = X.shape[1]))\nmodel.add(Dense(units = 6,activation = 'relu'))\nmodel.add(Dense(units = 6,activation = 'relu'))\nmodel.add(Dense(units = 6,activation = 'relu'))\n\nmodel.add(Dense(units = 1,activation = 'linear'))\n\nadam = optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999, amsgrad=False)\nmodel.compile(optimizer = adam,loss = 'mse')","4394f6d4":"model.fit(x = X_train, y = y_train,epochs = 1000,validation_data = (X_test,y_test), batch_size = 128,verbose = 1)","6bd1fd5b":"losses = pd.DataFrame(model.history.history)","3c1f7e48":"losses.plot()","57006204":"y_pred = model.predict(X_test)","d326785b":"np.sqrt(metrics.mean_squared_error(y_test,y_pred))","55beddd7":"metrics.mean_absolute_error(y_test,y_pred)","d657bbd0":"df['price'].describe()","29373da2":"plt.figure(figsize = (12,8))\nplt.scatter(y_test, y_pred)\nplt.plot(y_test, y_test,'r')","a33df460":"## <span id=\"7\"><\/span> Checking Out the Correlation Among Explanatory Variables","2bdd6d1f":"# 1. Overview\n**Feature Columns**\n* id - Unique ID for each home sold\n* date - Date of the home sale\n* price - Price of each home sold\n* bedrooms - Number of bedrooms\n* bathrooms - Number of bathrooms, where .5 accounts for a room with a toilet but no shower\n* sqft_living - Square footage of the apartments interior living space\n* sqft_lot - Square footage of the land space\n* floors - Number of floors\n* waterfront - A dummy variable for whether the apartment was overlooking the waterfront or not\n* view - An index from 0 to 4 of how good the view of the property was\n* condition - An index from 1 to 5 on the condition of the apartment,\n* grade - An index from 1 to 13, where 1-3 falls short of building construction and design, 7 has an average level of construction and design, and 11-13 have a high quality level of construction and design.\n* sqft_above - The square footage of the interior housing space that is above ground level\n* sqft_basement - The square footage of the interior housing space that is below ground level\n* yr_built - The year the house was initially built\n* yr_renovated - The year of the house\u2019s last renovation\n* zipcode - What zipcode area the house is in\n* lat - Lattitude\n* long - Longitude\n* sqft_living15 - The square footage of interior housing living space for the nearest 15 neighbors\n* sqft_lot15 - The square footage of the land lots of the nearest 15 neighbors","63b22f8e":"# <span id=\"6\"><\/span> Neural Network Model\n#### [Return Contents](#0)\n<hr\/>","1f8c5f33":"# <span id=\"2\"><\/span> Importing Modules, Reading the Dataset and Defining an Evaluation Table\n#### [Return Contents](#0)\n<hr\/>\n\n\n\n\n","08c6f01e":"Having too many features in a model is not always a good thing because it might cause overfitting and worser results when we want to predict values for a new dataset. Thus, if a feature does not improve your model a lot, not adding it may be a better choice.","29913417":"This is not a very big data and we do not have too many features. Thus, we have chance to plot most of them and reach some useful analytical results. Drawing charts and examining the data before applying a model is a very good practice because we may detect some possible outliers or decide to do normalization. This is not a must but get know the data is always good. Then, I started with the histograms of dataframe.","948b5582":"To determine bedrooms, floors or bathrooms\/bedrooms vs price, I preferred boxplot because we have numerical data but they are not continuous as 1,2,... bedrooms, 2.5, 3,... floors (probably 0.5 stands for the penthouse).\n\nFrom the below charts, it can be seen that there are very few houses which have some features or price appears far from others like 33 bedrooms or price around 7000000. However, determining their possible negative effect will be time consuming and in the real data sets there will always be some outliers like some luxury house prices in this dataset. That's why I am not planning to remove outliers.","014cd1a2":"# <span id=\"4\"><\/span> Data Preprocessing\n#### [Return Contents](#0)\n<hr\/>","0cd7272b":"# <span id=\"3\"><\/span> Visualizing and Examining Data\n#### [Return Contents](#0)\n<hr\/>","8b2120b1":"<hr\/>\n# **Predicting House Prices**\n<span id=\"0\"><\/span>\n[**Chi Le**](https:\/\/www.kaggle.com\/anphawolf)\n<hr\/>\n<font color=green>\n1. [Overview](#1)\n1. [Importing Modules, Reading the Dataset](#2)\n1. [Visualizing and Examining Data](#3)\n1. [Data Preprocessing](#4)\n1. [Neural Network Model](#6)\n1. [Conclusion](#7)","040a1102":"Let's visualize more features. When we look at the below boxplots, grade and waterfront effect price visibly. On the other hand, view seem to effect less but it also has an effect on price."}}