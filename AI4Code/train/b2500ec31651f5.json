{"cell_type":{"385a93b1":"code","74d0fa40":"code","93232aef":"code","2f451ebb":"code","83238f91":"code","fb155252":"code","b2810c92":"code","8afc141e":"code","fc429ac3":"code","bf299167":"code","c8b27e1b":"code","f0f47a1b":"code","df9d9a99":"code","da8672b4":"code","34185ae2":"markdown","87148f14":"markdown","2a64befc":"markdown","491e9b56":"markdown","13f3f656":"markdown","94b7a90f":"markdown","ef92e48e":"markdown","550975ac":"markdown","2d6c2001":"markdown","614d8be8":"markdown","6ded4656":"markdown","721a6f96":"markdown","54179fb6":"markdown","b56cd225":"markdown","2c328cca":"markdown","4923a8f2":"markdown"},"source":{"385a93b1":"!pip install --upgrade wandb","74d0fa40":"import os\nfrom kaggle_secrets import UserSecretsClient\nimport wandb\n\nimport numpy as np\nimport ast\n\nimport pandas as pd\nfrom pandas_profiling import ProfileReport\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import  rc\nfrom matplotlib.animation import FuncAnimation\nimport matplotlib.animation as animation\nimport seaborn as sns\n\nimport cv2\nfrom IPython.display import Video\n\nfrom tqdm import tqdm\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set()\n%matplotlib inline","93232aef":"TRAIN_PATH = \"..\/input\/tensorflow-great-barrier-reef\/train_images\"\nHEIGHT, WIDTH = 720, 1280\n\nvid0_path = \"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_0\"\nvid1_path = \"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_1\"\nvid2_path = \"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_2\"\nvid_paths = [vid0_path, vid1_path, vid2_path]\n\nvid0_ls = [os.path.join(vid0_path,f) for f in os.listdir(vid0_path)]\nvid0_ls = sorted(vid0_ls, key=lambda x: int(\"\".join([i for i in x if i.isdigit()])))\n\nvid1_ls = [os.path.join(vid1_path,f) for f in os.listdir(vid1_path)]\nvid1_ls = sorted(vid1_ls, key=lambda x: int(\"\".join([i for i in x if i.isdigit()])))\n\nvid2_ls = [os.path.join(vid2_path,f) for f in os.listdir(vid2_path)]\nvid2_ls = sorted(vid2_ls, key=lambda x: int(\"\".join([i for i in x if i.isdigit()])))\nfiles_ls = [vid0_ls, vid1_ls, vid2_ls]\n\ntrain_df = pd.read_csv(\"..\/input\/tensorflow-great-barrier-reef\/train.csv\")\n\nprint(f\"Number of images in First Video : {len(vid0_ls)}\\nNumber of images in Second Video : {len(vid1_ls)}\\nNumber of images in Third Video : {len(vid2_ls)} \\n\\n\")\ntrain_df.head()","2f451ebb":"video = cv2.VideoWriter(f\".\/video_0.avi\",0,1,(WIDTH, HEIGHT))\nfor f in tqdm(files_ls[0]):\n    video.write(cv2.imread(f))","83238f91":"width, height = [], []\nxloc, yloc = [], []\ncount_fish = []\nannot, paths = [], []\n\nfor i in range(3):\n    w,h,x,y = [], [], [], []\n    c = []\n    for f in tqdm(files_ls[i]):\n        name = str(i)+\"-\" + str(f.split(\"\/\")[-1].split(\".\")[0])\n        ls = list(train_df[train_df[\"image_id\"] == name][\"annotations\"])[0]\n        ls = ast.literal_eval(ls)\n        c.append(len(ls))\n        if len(ls) != 0:\n            for l in ls:\n                w.append(l[\"width\"]); h.append(l[\"height\"]); x.append(l[\"x\"]); y.append(l[\"y\"])\n                if i == 0 and len(ls)==1:\n                    paths.append(f)\n                    annot.append([l[\"x\"],l[\"y\"],l[\"x\"]+l[\"width\"],l[\"y\"]+l[\"height\"],])\n    width.append(w);height.append(h);xloc.append(x);yloc.append(y)\n    count_fish.append(c)","fb155252":"# Check https:\/\/www.kaggle.com\/debarshichanda\/pytorch-w-b-pawpularity-training for more details\ntry:\n    user_secrets = UserSecretsClient()\n    api_key = user_secrets.get_secret(\"wandb_api\")\n    wandb.login(key=api_key)\n    anony = None\nexcept:\n    anony = \"must\"\n    print('''If you want to use your W&B account, Follow these steps :\n            -> go to Add-ons {Below name of notebook} -> Secrets -> Add a new Secret\n            -> Label = wandb_api\n            -> Value = W&B access token from https:\/\/wandb.ai\/authorize \n         ''')","b2810c92":"PROJECT_NAME = \"Protect Great Barrier Reef\"\nRAW_LOCATION = \"display_data\"\n\nrun = wandb.init(project=PROJECT_NAME, job_type=\"Sample of 1000 images\", group=\"Data Visualization\")\n\nartifact = wandb.Artifact(RAW_LOCATION, type=\"raw_data\")\nartifact.add_file(\"..\/input\/tensorflow-great-barrier-reef\/train.csv\")\n\nwb_table = wandb.Table(columns=[\"Video Id\",\"Image Name\",\"Image\",\"Annotations\"])\n\ntmp_df = train_df.sample(1000, random_state=2021).reset_index(drop=True)\nfor i in range(len(tmp_df)):\n    im_id = tmp_df.iloc[i][\"image_id\"]\n    loc_fish = tmp_df.iloc[i][\"annotations\"]\n    video = int(im_id.split(\"-\")[0])\n    count = im_id.split(\"-\")[1]\n    impath = os.path.join(vid_paths[video],count+\".jpg\")\n    \n    wb_table.add_data(video, int(count), wandb.Image(impath), loc_fish)\n    \nartifact.add(wb_table, \"Table of 1000 images\")\nrun.log_artifact(artifact)\nrun.finish()","8afc141e":"from IPython import display\nframe = display.IFrame(run.url, width=1280, height=720)\n''' \nFollow this steps to view Table created\n    Artifacts : left side bottom button   -> raw_data -> v0 -> Table of 1000 images\n'''\nframe","fc429ac3":"train_report = ProfileReport(train_df,title=\"Metadata of Training images\")\ntrain_report.to_file(\".\/train_metadata.html\")\ntrain_report","bf299167":"rc('animation', html='jshtml') \n\ndef get_animation(paths, annot):\n    fig = plt.figure(figsize=(8,8))\n    arr  = cv2.imread(paths[0],cv2.COLOR_BGR2RGB)\n    cv2.rectangle(arr, (annot[0][0],annot[0][1]), (annot[0][2],annot[0][3]),(255,0,0),2)\n    im_arr = plt.imshow(arr, cmap=\"gray\")\n    plt.axis(\"off\")\n    plt.title(\"FLAIR\")\n    def update(i):\n        arr = cv2.imread(paths[i], cv2.COLOR_BGR2RGB)\n        cv2.rectangle(arr, (annot[i][0],annot[i][1]), (annot[i][2],annot[i][3]),(255,0,0),2)\n        im_arr.set_array(arr)\n        return [im_arr]\n    anim  = animation.FuncAnimation(fig,update,frames=len(paths),interval=50)\n    anim.save(\".\/video_0.mp4\")\n    return anim\n\nget_animation(paths[::20], annot[::20])","c8b27e1b":"fig, axes = plt.subplots(3,2, figsize=(18, 12))\nfig.suptitle(\"Location of Star Fish in 3 videos\")\n\naxes[0,0].hist(xloc[0])\naxes[0,0].set_title(\"X : Video 0\")\naxes[0,1].hist(yloc[0])\naxes[0,1].set_title(\"Y : Video 0\")\n\naxes[1,0].hist(xloc[1])\naxes[1,0].set_title(\"X : Video 1\")\naxes[1,1].hist(yloc[1])\naxes[1,1].set_title(\"Y : Video 1\")\n\naxes[2,0].hist(xloc[2])\naxes[2,0].set_title(\"X : Video 2\")\naxes[2,1].hist(yloc[2])\naxes[2,1].set_title(\"Y : Video 2\")","f0f47a1b":"fig, axes = plt.subplots(3,2, figsize=(18, 12))\nfig.suptitle(\"Size of Star Fish in 3 videos\")\n\naxes[0,0].hist(width[0])\naxes[0,0].set_title(\"Width : Video 0\")\naxes[0,1].hist(height[0])\naxes[0,1].set_title(\"Height : Video 0\")\n\naxes[1,0].hist(width[1])\naxes[1,0].set_title(\"Width : Video 1\")\naxes[1,1].hist(height[1])\naxes[1,1].set_title(\"Height : Video 1\")\n\naxes[2,0].hist(width[2])\naxes[2,0].set_title(\"Width : Video 2\")\naxes[2,1].hist(height[2])\naxes[2,1].set_title(\"Height : Video 2\")","df9d9a99":"fig, axes = plt.subplots(1,3, figsize=(18, 6))\nfig.suptitle(\"Count of Star Fish in 3 videos\")\n\naxes[0].hist(count_fish[0])\naxes[0].set_title(\"Video 0\")\naxes[1].hist(count_fish[1])\naxes[1].set_title(\"Video 1\")\naxes[2].hist(count_fish[2])\naxes[2].set_title(\"Video 2\")","da8672b4":"fig, axes = plt.subplots(3,3, figsize=(18,12))\nimage_ids = [\"0-16\",\"0-17\",\"0-18\",\"0-19\",\"0-20\",\"0-21\",\"0-22\",\"0-23\",\"0-24\"]\n\nfor i in range(9):\n    r,c = i\/\/3, i%3\n    name = image_ids[i]\n    im_path = os.path.join(vid0_path,name.split(\"-\")[1]+\".jpg\")\n    ls = list(train_df[train_df[\"image_id\"]==name][\"annotations\"])[0]\n    ls = ast.literal_eval(ls)\n    img = cv2.imread(im_path, cv2.COLOR_BGR2RGB)\n    for box in ls:\n        x1 = box[\"x\"]\n        y1 = box[\"y\"]\n        x2 = x1 + box[\"width\"]\n        y2 = y1 + box[\"height\"]\n        cv2.rectangle(img, (x1,y1), (x2,y2),(255,0,0),2)\n    axes[r,c].imshow(img)\n    axes[r,c].axis(\"off\")\n    axes[r,c].set_title(f\"Image : {image_ids[i]}\",fontsize=15, weight='bold')","34185ae2":"<div style = \"font-family : Lucida Sans Typewriter;background: rgb(224,224,224);border-radius: 25px;\">\n    <h2 style = \"font-family: 'Lucida Console', 'Courier New', monospace; border-radius: 20px; font-size:30px; text-align:center; ; color:#FF69B4\">Pandas Profiling<\/h2>\n    <center><img src = \"https:\/\/pandas-profiling.github.io\/pandas-profiling\/docs\/assets\/logo_header.png\" width=200 height = 200><\/center>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    Pandas profiling is an open source Python module with which we can quickly do an exploratory data analysis with just a few lines of code. Besides, if this is not enough to convince us to use this tool, it also generates interactive reports in web format that can be presented to any person, even if they don\u2019t know programming.\n    <\/p>  \n    <a href = \"https:\/\/pandas-profiling.github.io\/pandas-profiling\/\">Go to offocial website for documentation<\/a>\n<\/div>","87148f14":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Bounding box Metadata<\/h2>","2a64befc":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Size of Star Fish<\/h2>","491e9b56":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Count of Star Fish<\/h2>","13f3f656":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Convert Images to Video<\/h2>","94b7a90f":"<div style = \"font-family : Lucida Sans Typewriter;background: rgb(224,224,224);border-radius: 25px;\">\n    <h2 style = \"font-family: 'Lucida Console', 'Courier New', monospace; border-radius: 20px; font-size:30px; text-align:center; ; color:#FF69B4\">Weights and Biases<\/h2>\n    <center><img src = \"https:\/\/i.imgur.com\/KISYcqD.png\" width=200 height = 200><\/center>\n    <a href = \"https:\/\/wandb.ai\/shanmukh\/Protect%20Great%20Barrier%20Reef\/runs\/2eywhb67\"; style = \"font-family: 'Lucida Console', 'Courier New', monospace; border-radius: 20px; text-align:center; font-size:25px\">Checkout Dashboard created for this notebook<\/a>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    Weights and Biases is a set of Machine Learning tools used for experiment tracking, dataset versioning, and collaborating on ML projects. Weights and Biases is useful in many applications such as\n    <\/p>  \n    <ul>\n          <li>Experiment Tracking<\/li>\n          <li>Hyperparameter Tuning<\/li>\n          <li>Data Visualization<\/li>\n          <li>Data and model Versioning<\/li>\n          <li>Collaborative Reports<\/li>\n    <\/ul>\n    <a href = \"https:\/\/wandb.ai\/site\">Go to offocial website for more tutorials and Documentation<\/a>\n<\/div>","ef92e48e":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Visualize video frame by frame<\/h2>","550975ac":"<h1 style = \"font-family: 'Lucida Console', 'Courier New', monospace; background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%); border-radius: 20px; font-size:30px; text-align:center; \">Data Visualization \ud83d\udcca\ud83d\udcb9<\/h1>","2d6c2001":"<h1 style = \"font-family: 'Lucida Console', 'Courier New', monospace; background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%); border-radius: 20px; font-size:30px; text-align:center; \">Install Libraries \u23ec<\/h1>","614d8be8":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Location of Star Fish<\/h2>","6ded4656":"<h1 style = \"font-family: 'Lucida Console', 'Courier New', monospace; background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%); border-radius: 20px; font-size:30px; text-align:center; \"> Data Preprocessing \u2692\ufe0f\ud83d\udd2c<\/h1>","721a6f96":"<h1 style = \"font-family: 'Lucida Console', 'Courier New', monospace; background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%); border-radius: 20px; font-size:30px; text-align:center; \">Import Libraries \ud83d\udcda<\/h1>","54179fb6":"<center style = \"font-family: 'Lucida Console', 'Courier New', monospace;\">\n    <img src = \"https:\/\/blogger.googleusercontent.com\/img\/a\/AVvXsEj6-rQw5r22Bt47BUTtW5bn_dcWT7zMeADwtvsAHS3kBt6w8eWTmCM649ZcJcvosIMup6flKFIaI8p4M9ZzH1yXpEaMRjvwwfVZ_hMqgXCxtwNzEK25vTa-J2ly20by3M1zx7rTymo-tBI6Fq-mj1SJfCOXsOz0Ou1Esi4h2omvQSW98AjsONsVS-EA\" width=600 height = 400>\n    <h1 style = \"background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%);border-radius: 20px; font-size:30px\">Tensorflow - Help Protect the Great Barrier Reef \ud83c\udf1f\ud83d\udc20<\/h1>\n<\/center>\n\n<div style = \"background: rgb(224,224,224);border-radius: 42px;\">\n    <h1 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Introduction<\/h1>\n    <h2 style = \"font-family: Consolas; text-align:center\">Why this Competition \u2753<\/h2>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    Australia's stunningly beautiful Great Barrier Reef is the world\u2019s largest coral reef and home to 1,500 species of fish, 400 species of corals, 130 species of sharks, rays, and a massive variety of other sea life.Unfortunately, the reef is under threat, in part because of the overpopulation of one particular starfish \u2013 the coral-eating crown-of-thorns starfish (or COTS for short).\n    <\/p>\n    <h2 style = \"font-family: Consolas; text-align:center\">Goal of Competition \ud83e\udd45<\/h2>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    The goal of this competition is to accurately identify starfish in real-time by building an object detection model trained on underwater videos of coral reefs.\n    <\/p>\n<\/div>\n\n<div style = \"background: rgb(224,224,224);border-radius: 42px;\">\n    <h1 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Sponsors \ud83d\udcb0<\/h1>\n    <h2 style = \"font-family: Consolas; text-align:center\">TensorFlow<\/h2>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    TensorFlow is a free and open-source software library for machine learning and artificial intelligence. It can be used across a range of tasks but has a particular focus on training and inference of deep neural networks.\n    <\/p>\n    <h2 style = \"font-family: Consolas; text-align:center\">CSIRO<\/h2>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    The Commonwealth Scientific and Industrial Research Organisation is an Australian Government agency responsible for scientific research. CSIRO works with leading organisations around the world.\n    <\/p>\n    <h2 style = \"font-family: Consolas; text-align:center\">GBRF<\/h2>\n    <p style = \"font-family : Lucida Sans Typewriter\">\n    The Great Barrier Reef Foundation is an Australian non-profit organisation established in 1999 to help protect and preserve the Great Barrier Reef. \n    <\/p>\n<\/div>\n\n<h2 style = \"font-family: Consolas\">More Details<\/h2>\n<p style = \"font-family : Lucida Sans Typewriter\">Check <a href = \"https:\/\/www.kaggle.com\/c\/petfinder-pawpularity-score\/data\">competition page<\/a> for details<\/p>\n<h2 style = \"font-family : Comic Sans MS\">Let's dive in \u2b07\ufe0f<\/h2>\n\n<center><img src = \"https:\/\/img.shields.io\/badge\/Upvote-If%20you%20found%20this%20notebook%20useful-blue\" width=400 height = 400><\/center>","b56cd225":"<h2 style = \"font-family: Consolas; text-align:center; color:#FF69B4\">Sample Images with Bounding Boxes<\/h2>","2c328cca":"<h1 style = \"font-family: 'Lucida Console', 'Courier New', monospace; background: rgb(44,169,201);\nbackground: linear-gradient(180deg, rgba(44,169,201,1) 0%, rgba(1,94,125,1) 100%); border-radius: 20px; font-size:30px; text-align:center; \">Initialize Constants \ud83d\udd30<\/h1>","4923a8f2":"<br>\n<h3 style = \"font-family: Consolas; text-align:center; color:#FF0000\">If you come this far, you could've got some insights from this notebook. An upvote would be very helpful :). Kindly comment if there are any doubts or mistakes<\/h3>\n\n<center><img src = \"https:\/\/img.shields.io\/badge\/Completed-The%20End-brightgreen\" width=400 height = 400><\/center>"}}