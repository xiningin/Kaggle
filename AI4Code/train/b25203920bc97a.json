{"cell_type":{"5b669035":"code","1879e677":"code","2c3b0b87":"code","de3a337a":"code","6c4c08e4":"code","a1bb262a":"code","e23a7fa0":"code","58e247d8":"code","f71af30a":"code","7b3dcad2":"code","3f65d473":"code","565b1b49":"code","bdb6634b":"code","a1d9fe66":"code","54eefa92":"code","c78f0a63":"code","731bcdd1":"code","edfab7af":"code","59c72adb":"code","3d4b0b30":"code","85e4cb0b":"markdown","67d45500":"markdown"},"source":{"5b669035":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\npd.set_option('display.max_columns', None)\n","1879e677":"train=pd.read_csv(\"..\/input\/dsc-psut-continued\/train.csv\")\ntest=pd.read_csv(\"..\/input\/dsc-psut-continued\/test.csv\")\ntarget=train[\"SalePrice\"]","2c3b0b87":"del train[\"Id\"]\ndel test[\"Id\"]","de3a337a":"train.select_dtypes([np.number]).isna().sum(0)","6c4c08e4":"\ntrain['LotFrontage'] = train.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.median()))\n#train.LotFrontage.fillna(train.LotFrontage.mean(),inplace=True)\ntrain.GarageYrBlt.fillna(0,inplace=True)\ntrain.MasVnrArea.fillna(0,inplace=True)\n","a1bb262a":"test.select_dtypes(exclude=[np.number]).isna().sum()","e23a7fa0":"test['LotFrontage'] = test.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.median()))\n#test.LotFrontage.fillna(test.LotFrontage.mean(),inplace=True)\nfor i in test.select_dtypes([np.number]).isna().sum()[test.select_dtypes([np.number]).isna().sum()>0].keys():\n       test[i].fillna(0,inplace=True)\n       \n","58e247d8":"df=pd.concat([train,test],ignore_index=True).drop(\"SalePrice\",axis=1)\ndf.info()","f71af30a":"plt.figure(figsize=(30,15))\nsns.heatmap(train.corr(),annot=True,linewidth=2,cmap=\"YlGnBu\")","7b3dcad2":"df.MSZoning.fillna(df.MSZoning.mode()[0],inplace=True)\ndf.Utilities.fillna(df.Utilities.mode()[0],inplace=True)\ndf.Exterior1st.fillna(df.Exterior1st.mode()[0],inplace=True)\ndf.Exterior2nd.fillna(df.Exterior2nd.mode()[0],inplace=True)\ndf.KitchenQual.fillna(df.KitchenQual.mode()[0],inplace=True)\ndf.Functional.fillna(df.Functional.mode()[0],inplace=True)\ndf.SaleType.fillna(df.SaleType.mode()[0],inplace=True)\ndf.Electrical.fillna(df.Electrical.mode()[0],inplace=True)\ndf.MasVnrType.fillna(df.MasVnrType.mode()[0],inplace=True)","3f65d473":"nulls=df.select_dtypes(exclude=[np.number]).isna().sum()\nnulls","565b1b49":"for i in nulls.keys():\n    df[i].fillna(\"None\",inplace=True)","bdb6634b":"mapping={\"None\":0,\"Po\":1,\"Fa\":2,\"TA\":3,\"Gd\":4,\"Ex\":5}\ndf[\"PoolQC\"]=df[\"PoolQC\"].map(mapping)\ndf[\"GarageCond\"]=df[\"GarageCond\"].map(mapping)\ndf[\"GarageQual\"]=df[\"GarageQual\"].map(mapping)\ndf[\"KitchenQual\"]=df[\"KitchenQual\"].map(mapping)\ndf[\"HeatingQC\"]=df[\"HeatingQC\"].map(mapping)\ndf[\"BsmtCond\"]=df[\"BsmtCond\"].map(mapping)\ndf[\"BsmtQual\"]=df[\"BsmtQual\"].map(mapping)\ndf[\"ExterCond\"]=df[\"ExterCond\"].map(mapping)\ndf[\"ExterQual\"]=df[\"ExterQual\"].map(mapping)","a1d9fe66":"# feature Eng\n\n\ndf['YrBltAndRemod'] = df['YearBuilt'] + df['YearRemodAdd']\n\ndf[\"QualityxSpace\"]=df[\"LotArea\"]*df[\"OverallQual\"]\n\ndf[\"QXC\"] = df[\"OverallQual\"] * df[\"OverallCond\"]\n\ndf[\"MSZoning\"].replace([\"RM\",\"FV\",\"RH\",\"C (all)\",\"None\"],\"other\",inplace=True)\n\ndf[\"MSSubClass\"]=df[\"MSSubClass\"].astype(\"str\")\n\n\ndf['TotalBathrooms'] = (df['FullBath'] + (0.5 * df['HalfBath']) +\n                         df['BsmtFullBath'] + (0.5 * df['BsmtHalfBath']))\n\ndf[\"KitchenQual1\"]=df[\"KitchenQual\"].map({'TA': 2, 'Gd': 3, 'Ex': 4, 'Fa': 1})\ndf[\"KitchenQual1\"]=df[\"KitchenQual1\"]*df[\"KitchenAbvGr\"]\n\ndf[\"BsmtQXAr\"]=(df[\"BsmtQual\"]+df[\"BsmtCond\"])*df[\"TotalBsmtSF\"]\n\n\n\ndf[\"Exterior1st\"].replace([\"ImStucc\",\"Stone\"],\"CemntBd\",inplace=True)\ndf[\"Exterior1st\"].replace([\"Stucco\"],\"HdBoard\",inplace=True)\ndf[\"Exterior1st\"].replace([\"WdShing\"],\"Wd Sdng\",inplace=True)\ndf[\"Exterior1st\"].replace([\"WdShing\",\"MetalSd\"],\"Wd Sdng\",inplace=True)\ndf[\"Exterior1st\"].replace([\"AsbShng\",\"CBlock\",\"AsphShn\",\"BrkComm\"],\"Wd Sdng\",inplace=True)\n\ndf[\"Exterior2nd\"].replace([\"ImStucc\",\"Stone\",\"Other\"],\"CemntBd\",inplace=True)\ndf[\"Exterior2nd\"].replace([\"Stucco\",\"Plywood\"],\"HdBoard\",inplace=True)\ndf[\"Exterior2nd\"].replace([\"WdShing\"],\"Wd Sdng\",inplace=True)\ndf[\"Exterior2nd\"].replace([\"WdShing\",\"MetalSd\"],\"Wd Sdng\",inplace=True)\ndf[\"Exterior2nd\"].replace([\"AsbShng\",\"CBlock\",\"AsphShn\",\"Brk Cmn\",\"BrkFace\"],\"Wd Sdng\",inplace=True)\n\ndf['has2ndfloor'] = df['2ndFlrSF'].apply(lambda x: 1 if x > 0 else 0)\n\n","54eefa92":"df","c78f0a63":"df4=df.copy()\n\ndf4=pd.get_dummies(df4)","731bcdd1":"#training data\ntraining=df4.loc[:1459]\n\n#testing data\ntesting=df4.loc[1460:]","edfab7af":"df4","59c72adb":"a=pd.read_csv(\"..\/input\/dsc-psut-continued\/sample_submission.csv\")\nfrom xgboost import XGBRegressor\npars = {'max_depth': 6,\n 'learning_rate': 0.002483868626800697,\n 'n_estimators': 7989,\n 'min_child_weight': 1,\n 'colsample_bytree': 0.5030185650975951,\n 'subsample': 0.44705436353703526,\n 'reg_alpha': 0.007053643198184307,\n 'reg_lambda': 0.03677328533642659}\n\n\n\nmodel0 = XGBRegressor(**pars)\nmodel0.fit(np.sqrt(training),target**(1\/10))\npredictions0=model0.predict(np.sqrt(testing))\n\nfrom catboost import CatBoostRegressor\nmodel1 = CatBoostRegressor(verbose=0)\nmodel1.fit(np.sqrt(training),target**(1\/10))\npredictions1 = model1.predict(np.sqrt(testing))\n\n\n\n","3d4b0b30":"a.SalePrice=((predictions0**(10)) + (predictions1**(10))) \/ 2\na.to_csv(\"submission.csv\",index=False)","85e4cb0b":"learning_rate=0.008,\n                     n_estimators=6000,\n                     max_depth=4,\n                     min_child_weight=0,\n                     gamma=0.6,\n                     subsample=0.7,\n                     colsample_bytree=0.7,\n                     objective='reg:squarederror',\n                     nthread=-1,\n                     scale_pos_weight=1,\n                     seed=27,\n                     reg_alpha=0.00006,\n                     random_state=42","67d45500":"# New Section"}}