{"cell_type":{"89560abf":"code","6c05a173":"code","5fcb8ab9":"code","9f64ea2b":"code","b404f237":"code","3a08181d":"code","967bc043":"code","fb32db41":"code","aaf494c8":"code","e056ee1d":"code","53cabaed":"code","73ac14d2":"code","ce42e000":"code","bb6d23dc":"code","3173549e":"code","82ae2df7":"code","c2ae99fe":"code","9b361b46":"code","028bb99f":"code","31d1331b":"code","570fa0f1":"code","c5c81d87":"code","2c32fbc4":"code","d760f239":"code","84d97ada":"code","8f6162cd":"code","b47d0de2":"code","cff97d67":"code","f85d318b":"code","fcf68bd2":"code","47d70cc6":"code","54362aa9":"code","4ac2382d":"code","8ec55a4d":"code","53e39805":"code","d7f665b5":"code","14f12c26":"markdown","17569edc":"markdown","3996a660":"markdown","30021b41":"markdown","438cff3f":"markdown","125c8060":"markdown","bf69c9bf":"markdown","d4126712":"markdown","b3e51c37":"markdown","96621171":"markdown","6bfa6c2f":"markdown","12373b05":"markdown","571d667d":"markdown","d6ecebbb":"markdown","88ee77ce":"markdown","3c71eb6c":"markdown","6b5e3fcb":"markdown","8e3319d7":"markdown","4e75d767":"markdown","fe300778":"markdown","69d4e366":"markdown","84d014e8":"markdown","6c3fc475":"markdown","28d4f34e":"markdown","55aa18ec":"markdown","202fb4f1":"markdown","b1e9dd68":"markdown","942ca0b7":"markdown","13552dac":"markdown","e09e796e":"markdown","78940f91":"markdown","f457bbce":"markdown","8a25471f":"markdown","135c1f06":"markdown","e5766a4a":"markdown","98fbae63":"markdown","98778542":"markdown","225a4cbb":"markdown","702df126":"markdown","f189a54f":"markdown","a9aaef11":"markdown","affcbe1e":"markdown","3d7be881":"markdown","1ebb59cf":"markdown","420330d3":"markdown","6d821b84":"markdown","57800ce6":"markdown","c2b7a34d":"markdown","08622a98":"markdown","f44b0df2":"markdown","5d135c01":"markdown","3be0113b":"markdown","ec16a2d8":"markdown","68132929":"markdown","a652561d":"markdown","3f5a1fe0":"markdown","9e2940e7":"markdown","f1779076":"markdown","59fd33de":"markdown","6b207fbc":"markdown","8c6a1de9":"markdown","2d7123ad":"markdown","aeaad9cd":"markdown","264cfb3f":"markdown"},"source":{"89560abf":"import numpy as np \nimport pandas as pd \nimport warnings\nwarnings.filterwarnings(\"ignore\")","6c05a173":"!pip install pycaret","5fcb8ab9":"df = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\ndf.head()","9f64ea2b":"df['HeartDisease'].value_counts(normalize=True)","b404f237":"numerical= df.drop(['HeartDisease'], axis=1).select_dtypes('number').columns\n\ncategorical = df.select_dtypes('object').columns","3a08181d":"from pycaret.classification import *","967bc043":"clf1 = setup(data = df, \n             target = 'HeartDisease',\n             categorical_features = ['Sex', 'ChestPainType', 'RestingECG', 'ExerciseAngina', 'ST_Slope'], \n             silent = True)","fb32db41":"models()","aaf494c8":"top3 = compare_models(sort='Recall',n_select = 3)","e056ee1d":"top3","53cabaed":"catboost = create_model('catboost')","73ac14d2":"\ntuned_catboost = tune_model(catboost, optimize = 'Recall')","ce42e000":"evaluate_model(tuned_catboost)","bb6d23dc":"plot_model(tuned_catboost, plot = 'auc')\n","3173549e":"plot_model(tuned_catboost, plot = 'pr')\n","82ae2df7":"plot_model(tuned_catboost, plot='feature')\n","c2ae99fe":"plot_model(tuned_catboost, plot = 'confusion_matrix')\n","9b361b46":"predict_model(tuned_catboost);\n","028bb99f":"# blend top3 models from compare_models\nblender_top3 = blend_models(top3, method = 'soft', optimize = 'Recall')","31d1331b":"# stack top3 models from compare_models\nstack_soft = stack_models(top3,optimize = 'Recall')\n","570fa0f1":"df_car = pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')\ndf_car.head()","c5c81d87":"df_car['model'] = [x.split()[0] for x in df_car['CarName']]\ndf_car['model'] = df_car['model'].replace({'maxda': 'Mazda','mazda': 'Mazda', \n                                     'nissan': 'Nissan', \n                                     'porcshce': 'Porsche','porsche':'Porsche', \n                                     'toyouta': 'Toyota', 'toyota':'Toyota',\n                            'vokswagen': 'Volkswagen', 'vw': 'Volkswagen', 'volkswagen':'Volkswagen'})\n","2c32fbc4":"from pycaret.regression import *","d760f239":"categorical = df_car.select_dtypes('object').columns\n\nprint(f'Categorical Columns: {df_car[categorical].columns}')","84d97ada":"reg = setup(data = df_car, \n             target = 'price',\n             categorical_features = ['CarName', 'fueltype', 'aspiration', 'doornumber', 'carbody',\n       'drivewheel', 'enginelocation', 'enginetype', 'cylindernumber',\n       'fuelsystem', 'model']  , \n             ignore_features = ['car_ID','CarName'],\n             normalize = True,\n             silent = True)","8f6162cd":"models()","b47d0de2":"top_3 = compare_models(sort='RMSE',include=['lightgbm','catboost','xgboost','rf','mlp','gbr','lasso','ridge','et','ada'], n_select = 3)","cff97d67":"cat = create_model('catboost')","f85d318b":"tuned_cat = tune_model(cat,optimize = 'RMSE')","fcf68bd2":"evaluate_model(tuned_cat)","47d70cc6":"plot_model(tuned_cat)","54362aa9":"plot_model(tuned_cat, plot = 'error')\n","4ac2382d":"plot_model(tuned_cat, plot='feature')\n","8ec55a4d":"predict_model(tuned_cat);\n","53e39805":"# blend top3 models from compare_models\nblender_top3 = blend_models(top_3, optimize = 'RMSE')\n","d7f665b5":"# stack top3 models from compare_models\nstack_soft = stack_models(top_3,optimize = 'RMSE')","14f12c26":"- 20 different algo are used in the model comparison.","17569edc":"> ### PyCaret is an **`open-source`**, **`low-code`** machine learning library in Python that automates machine learning workflows. ","3996a660":"<a id=\"3\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Setup<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","30021b41":"- Our Target variable has almost balance data for two class.","438cff3f":"<a id=\"14\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Tune a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","125c8060":"- It gives us overall picture of our data.","bf69c9bf":"<a id=\"6\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Tune a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","d4126712":"<a id=\"10\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Data<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","b3e51c37":"> This function initializes the training environment and creates the transformation pipeline. Setup function must be called before executing any other function. It takes two mandatory parameters: `data` and `target`. All the other parameters are optional.","96621171":"<a id=\"11\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Setup<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","6bfa6c2f":"<a id=\"1\"><\/a>\n<font color=\"lightseagreen\" size=+3.5><b>Classification<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","12373b05":"### AUC Plot","571d667d":"#### Hi all.  \ud83d\ude4b\n#### In this notebook we will make a gentle intro to **PYCARET**\n#### **Enjoy** \ud83e\udd18","d6ecebbb":" * **`include`**: list of str or scikit-learn compatible object, default = None --> To train and evaluate select models, list containing model ID or scikit-learn compatible object can be passed in include param\n * **`exclude`**:  list of str, default = None --> To omit certain models from training and evaluation, pass a list containing model id in the exclude parameter.\n * **`cross_validation`**: bool, default = True\n * **`sort`**: str, default = \u2018Accuracy\u2019\n * **`n_select`**: int, default = 1 --> Number of top_n models to return. For example, to select top 3 models use n_select = 3.\n \n Reference: https:\/\/pycaret.readthedocs.io\/en\/latest\/api\/classification.html#pycaret.classification.setup\n ","88ee77ce":"- First see which models are included in the regression part of the Pycaret.","3c71eb6c":"### Confusion Matrix","6b5e3fcb":"<a id=\"0\"><\/a>\n<font color=\"lightseagreen\" size=+2.5><b>What is PYCARET?<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","8e3319d7":"- Model comparison is done by using deafult parameters of the algorithms.\n- For classification problems, 'Accuracy' is the default metric for sorting. But for our data, we chose **`Recall`** to s0rt the models.\n- Both Catboost and Random Forest are very close with regard to **`Recall`** score","4e75d767":"- Model comparison is done by using deafult parameters of the algorithms.\n- For regression problems, **`R2`** is the default metric for sorting. But for our data, we chose **`RMSE`** to sort the models.\n- Both Gradient Boosting and Catboost are very close with regard to **`RMSE`** score","fe300778":"<a id=\"5\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Create a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","69d4e366":"<a id=\"12\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Compare Models<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","84d014e8":"<a id=\"toc\"><\/a>\n\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" role=\"tab\" aria-controls=\"home\">Table of Contents<\/h3>\n    \n* [What is PYCARET?](#0)\n\n* [Classification](#1)\n    * [Data](#2)\n    * [Setup](#3)\n    * [Compare Models](#4)\n    * [Create a Model](#5) \n    * [Tune a Model](#6)\n    * [Evaluate a Model](#7)\n    * [Blending & Stacking](#8)    \n    \n* [Regression](#9)    \n    * [Data](#10)\n    * [Setup](#11)\n    * [Compare Models](#12)\n    * [Create a Model](#13) \n    * [Tune a Model](#14)\n    * [Evaluate a Model](#15)\n    * [Blending & Stacking](#16)\n    \n* [Conclusion](#17) \n* [References & Further Reading](#18)","6c3fc475":"> This function trains and evaluates performance of all estimators available in the model library using cross validation. \n\n> The output of this function is a score grid with average cross validated scores. \nMetrics evaluated during CV can be accessed using the get_metrics function. ","28d4f34e":"- Let's see some of the deafult parametrs of **`compare_models`**","55aa18ec":"- Let's see some of the deafult parametrs of **`compare_models`**","202fb4f1":"<a id=\"18\"><\/a>\n<font color=\"darkblue\" size=+1.5><b>References & Further Reading<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n\n\n[Machine Learning - Beginner &Intermediate-Friendly BOOKS](https:\/\/www.kaggle.com\/general\/255972)\n\n[PyCaret Website](https:\/\/pycaret.readthedocs.io\/en\/latest\/index.html)","b1e9dd68":"## Residual Plot","942ca0b7":" * **`train_size`**: float = 0.7\n * **`preprocess`**: bool, default = True\n * **`imputation_type`**: str, default = \u2018simple\u2019\n * **`normalize`**: bool, default = False\n * **`fix_imbalance`**: bool, default = False   --> When set to True, SMOTE (Synthetic Minority Over-sampling Technique) is applied by default to create synthetic datapoints for minority class.(Since we don't have any imbalance problem, didn't change it)\n * **`fix_imbalance_method`**: obj, default = None --> When `fix_imbalance` is True, \u2018imblearn\u2019 compatible object with \u2018fit_resample\u2019 method can be passed. When set to None, \u2018imblearn.over_sampling.SMOTE\u2019 is used.\n * **`fold_strategy`**: str or sklearn CV generator object, default = \u2018stratifiedkfold\u2019\n * **`transformation`**: bool = False, transformation_method: str = 'yeo-johnson',\n * **`remove_outliers`**: bool = False, outliers_threshold: float = 0.05\n * **`remove_multicollinearity`**: bool = False, multicollinearity_threshold: float = 0.9,\n * **`polynomial_features`**: bool = False, polynomial_degree: int = 2\n \n Reference: https:\/\/pycaret.readthedocs.io\/en\/latest\/api\/classification.html#pycaret.classification.setup\n ","13552dac":"Image credit: https:\/\/i2.wp.com\/pycaret.org\/","e09e796e":"<a id=\"15\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Evaluate a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","78940f91":"## Feature Importance Plot","f457bbce":"gif credit: https:\/\/media.giphy.com\/","8a25471f":"### Precision-Recall Curve","135c1f06":"- First, let's install the pycaret.","e5766a4a":"In this notebook, we have made a gentle intro to Pycaret library.\n\n- Pycaret is **`open-source`**, **`low-code`** machine learning library \n\n- PyCaret is essentially a **`Python wrapper`** around several machine learning libraries and frameworks\n- I liked to use just one line code to get results and a very user-friendly website of Pycaret.\n- I will continue to use different Automated ML libraries, whenever is necessary.\n- On the other hand, I will continue to focus on what is going on under the hood and get deep knowledge on the data and problem on the hand.\n- If you are looking for a deeper discussion on the automated libraries, please [look at the article by GM @tunguz](https:\/\/medium.com\/@tunguz\/six-levels-of-auto-ml-a277aa1f0f38)\n","98fbae63":"> This function trains and evaluates performance of all estimators available in the model library using cross validation. \n\n> The output of this function is a score grid with average cross validated scores. \nMetrics evaluated during CV can be accessed using the get_metrics function. ","98778542":" * **`include`**: list of str or scikit-learn compatible object, default = None --> To train and evaluate select models, list containing model ID or scikit-learn compatible object can be passed in include param\n * **`exclude`**:  list of str, default = None --> To omit certain models from training and evaluation, pass a list containing model id in the exclude parameter.\n * **`cross_validation`**: bool, default = True\n * **`sort`**: str, default = \u2018Accuracy\u2019\n * **`n_select`**: int, default = 1 --> Number of top_n models to return. For example, to select top 3 models use n_select = 3.\n \n Reference: https:\/\/pycaret.readthedocs.io\/en\/latest\/api\/classification.html#pycaret.classification.setup\n ","225a4cbb":"\n> ### PyCaret is essentially a **`Python wrapper`** around several machine learning libraries and frameworks\n> ### such as scikit-learn, XGBoost, LightGBM, CatBoost, spaCy, Optuna, Hyperopt, Ray, and many more.","702df126":"<a id=\"8\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Blending & Stacking <\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","f189a54f":"- Let's see some of the default parametrs of the setup","a9aaef11":"- Let's compare the models","affcbe1e":"<a id=\"13\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Create a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","3d7be881":"- Install the libraries","1ebb59cf":"![](https:\/\/media.giphy.com\/media\/3o7TKUM3IgJBX2as9O\/giphy.gif)","420330d3":"- First we will import all of the classification library","6d821b84":"![](https:\/\/i2.wp.com\/pycaret.org\/wp-content\/uploads\/2020\/07\/pycaret2-features.png?fit=1033%2C613&ssl=1)","57800ce6":"- First see which models are included in the classification part of the Pycaret.","c2b7a34d":"#### By the way, when you like the topic, you can show it by supporting \ud83d\udc4d\n\n####  **Feel free to leave a comment**. \n\n#### All the best \ud83e\udd18","08622a98":"DATA DICTONARY\t\t\t\t\t\t\n\t\t\t\t\t\t\n1\t**Car_ID**: \t\t\tUnique id of each observation \t\t\n2\t**Symboling**:  \t\t\tIts assigned insurance risk rating, A value of +3 indicates that the auto is risky, -3 that it is probably pretty safe. \t\t\n3\t**carCompany**: \t\t\tName of car company \t\t\n4\t**fueltype**:\t\t\tCar fuel type i.e gas or diesel \t\t\n5\t**aspiration**:\t\t\tAspiration used in a car \t\t\n6\t**doornumber**:\t\t\tNumber of doors in a car\t\t\n7\t**carbody**:\t\t\tbody of car \t\t\n8\t**drivewheel**:\t\t\ttype of drive wheel\t\t\n9\t**enginelocation**:\t\t\tLocation of car engine\t\t\n10\t**wheelbase**:\t\t\tWeelbase of car (\t\t\n11\t**carlength**:\t\t\tLength of car \t\t\n12\t**carwidth**:\t\t\tWidth of car \t\t\n13\t**carheight**:\t\t\theight of car\t\t\n14\t**curbweight**:\t\t\tThe weight of a car without occupants or baggage. \t\t\n15\t**enginetype**:\t\t\tType of engine. \t\t\n16\t**cylindernumber**:\t\t\tcylinder placed in the car \t\t\n17\t**enginesize**:\t\t\tSize of car \t\t\n18\t**fuelsystem**:\t\t\tFuel system of car \t\t\n19\t**boreratio**:\t\t\tBoreratio of car \t\t\n20\t**stroke**:\t\t\tStroke or volume inside the engine \t\t\n21\t**compressionratio**:\t\t\tcompression ratio of car \t\t\n22\t**horsepower**:\t\t\tHorsepower \t\t\n23\t**peakrpm**:\t\t\tcar peak rpm \t\n24\t**citympg**:\t\t\tMileage in city \t\t\n25\t**highwaympg**:\t\t\tMileage on highway \t\t\n26\t**price**: \t\t\tPrice of car \t\t\n\nReference: https:\/\/www.kaggle.com\/hellbuoy\/car-price-prediction","f44b0df2":"## Prediction Error Plot","5d135c01":"<a id=\"2\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Data<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","3be0113b":"- 25 different regression algo are available to compare.","ec16a2d8":"### Feature Importance","68132929":"<a id=\"17\"><\/a>\n<font color=\"darkblue\" size=+2.5><b>Conclusion<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","a652561d":"<a id=\"16\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Blending & Stacking <\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","3f5a1fe0":"### Predict the Test","9e2940e7":"<a id=\"9\"><\/a>\n<font color=\"lightseagreen\" size=+3.5><b>Regression<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","f1779076":"<a id=\"4\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Compare Models<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>","59fd33de":"image credit: https:\/\/i1.wp.com\/pycaret.org\/","6b207fbc":"- Let's compare the models","8c6a1de9":"DATA DICTONARY\t\t\t\t\t\t\n\t\t\t\t\t\t\n1\t**Age**: \t\t\tAge of the patient [years] \t\t\n2\t**Sex**:  \t\t\t Sex of the patient [M: Male, F: Female] \t\t\n3\t**ChestPainType**: \t\t\t[TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic] \t\t\n4\t**RestingBP**:\t\t\tResting blood pressure [mm Hg] \t\t\n5\t**Cholesterol**:\t\t\tSerum cholesterol [mm\/dl] \t\t\n6\t**FastingBS**:\t\t\t Fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\t\t\n7\t**RestingECG**:\t\t\t Resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria] \t\t\n8\t**MaxHR**:\t\t\tMaximum heart rate achieved [Numeric value between 60 and 202]\t\t\n9\t**ExerciseAngina**:\t\t\tExercise-induced angina [Y: Yes, N: No]\t\t\n10\t**Oldpeak**:\t\t\t ST [Numeric value measured in depression] (\t\t\n11\t**ST_Slope**:\t\t\t The slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping] \t\t\n12\t**HeartDisease**:\t\t\t Output class [1: heart disease, 0: Normal] \t\t\n\nReference: https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction","2d7123ad":"![](https:\/\/i1.wp.com\/pycaret.org\/wp-content\/uploads\/2020\/04\/thumbnail.png?fit=1166%2C656&ssl=1)","aeaad9cd":"<a id=\"7\"><\/a>\n<font color=\"lightseagreen\" size=+1.5><b>Evaluate a Model<\/b><\/font>\n\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Table of Contents<\/a>\n","264cfb3f":"## Predict on Test"}}