{"cell_type":{"bb9de128":"code","300a793e":"code","e0bf9346":"code","b5a11ce9":"code","11b3a981":"code","7c71f13a":"code","13561a62":"code","8dd9d1d0":"code","be45d46a":"code","7a200741":"code","b5e3f1be":"code","3764265b":"code","5400bfba":"code","f6b3dff7":"code","cfbf9c04":"markdown","81809214":"markdown","0066225d":"markdown","d5e2191c":"markdown","80ca9b7e":"markdown","9b760b49":"markdown","fc4a1c63":"markdown","3fffeec9":"markdown","5dfe4308":"markdown","adc0790d":"markdown","04caecb6":"markdown","a3474147":"markdown","98f0f68d":"markdown","5736036a":"markdown","18c0158e":"markdown","97a0b8b9":"markdown","d1665199":"markdown"},"source":{"bb9de128":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","300a793e":"mushrooms_df = pd.read_csv(\"\/kaggle\/input\/mushroom-classification\/mushrooms.csv\")","e0bf9346":"# rows and columns\nprint(mushrooms_df.shape)\n\n# check first 5 rows\nmushrooms_df.head()","b5a11ce9":"# check all features as well as how many non-null values have and their type\nmushrooms_df.info()","11b3a981":"mushrooms_df['class'].value_counts(normalize=True)","7c71f13a":"for column in mushrooms_df.columns[1:]:\n  sns.countplot(x=column, hue=\"class\", data=mushrooms_df)\n  plt.title('Edible and Poisonous based on ' + column)\n  plt.show()\n  plt.clf()","13561a62":"mushrooms_df.groupby('odor')['class'].unique()","8dd9d1d0":"mushrooms_df.nunique()","be45d46a":"mushrooms_df.drop(columns=['veil-type'], axis=1, inplace=True)","7a200741":"from sklearn.preprocessing import OrdinalEncoder\n\nmushrooms_df = pd.DataFrame(OrdinalEncoder().fit_transform(mushrooms_df), columns=mushrooms_df.columns)\nmushrooms_df.head()","b5e3f1be":"X = mushrooms_df.drop(columns=['class'], axis=1)\ny = mushrooms_df['class']","3764265b":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","5400bfba":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\n\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)\ny_predict = model.predict(X_test)\n\nprint(classification_report(y_test, y_predict))","f6b3dff7":"fi_df = pd.DataFrame({\n    \"feature_importances\" : model.feature_importances_,\n    \"features\" : X.columns\n})\n\nfi_df.sort_values(by=\"feature_importances\", ascending=False, inplace=True)\n\nsns.barplot(x=\"feature_importances\", y=\"features\", data=fi_df)","cfbf9c04":"## Data Check","81809214":"We can find some features which are helpful for classification. For example, let's see `odor`. We can see that all types except none (n) have only one class of either edible or poisonous mushrooms: almond (a) and anise (l) have only edible ones, and creosote (c),fishy (y), foul (f), musty (m), pungent (p), and spicy (s) have only  poisonous ones.","0066225d":"## Convert Values to Integers\n\nOur values have to be converted to integers to be able to work with them. To do so we'll be using Ordinal encoding.","d5e2191c":"## Split Data into Train and Test","80ca9b7e":"## Model Building and Prediction","9b760b49":"The data is balanced.","fc4a1c63":"## Distribution of Each Feature\n\nWe are going to plot the distribution of each feature to explore and understand better our data.\n","3fffeec9":"All features are categorical and have no null values.","5dfe4308":"# Loading Data","adc0790d":"## Feature Importances","04caecb6":"Some ideas in this analysis was sourced from [this notebook](https:\/\/www.kaggle.com\/origraupera\/mushroom-classification-comparing-ml-models), [this notebook](https:\/\/www.kaggle.com\/vishalyo990\/random-forest-classifier-100-accuracy) and [this notebook](https:\/\/www.kaggle.com\/gpreda\/model-comparison-for-mushrooms-classification).","a3474147":"# Data Preparation\n\n## Drop Unnecessary Columns\n\nFirst, the columns which only take one value can be dropped.","98f0f68d":"# Exploratory Data Analysis (EDA)","5736036a":"There are 8,124 rows and 23 columns.The first column `class` indicates whether each mushroom is edible (e) or poisonous (p).\n\nAlso we check all features as well as how many non-null values have and their type.","18c0158e":"# Prediction with Random Forest","97a0b8b9":"# Conclusion\n\nA Random Forest model works quite good for classifying. As we expected in EDA some features like `odor` seem to be helpful.","d1665199":"## Label Imbalance\n\nHere we check if there is an imbalance in `class`, our target variable."}}