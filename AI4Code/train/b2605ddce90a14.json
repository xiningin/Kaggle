{"cell_type":{"28c64399":"code","40902a20":"code","25f24fa2":"code","988eaed8":"code","d4ddb3ae":"code","a5d86d83":"code","60845b7c":"code","092ec5fe":"code","bf219499":"code","caa3eb75":"code","ba4cc463":"code","90893f15":"code","d6d80975":"code","bec281a3":"markdown","465ba394":"markdown","7a7e14a0":"markdown","f830d29f":"markdown"},"source":{"28c64399":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.metrics import mean_squared_error as mse\nfilterwarnings(\"ignore\")","40902a20":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","25f24fa2":"df = pd.read_excel ('\/kaggle\/input\/return-predication\/return_prediction.xlsx',index_col='Date')\nstock_price = df[::-1].squeeze()\nprint(stock_price.head())\nstock_price=stock_price.drop(['Adj. close**','Unnamed: 3','Unnamed: 5','Unnamed: 6','date'],axis=1)\nprint(stock_price.head())\nplt.figure(figsize=(17,5))\nplt.plot(stock_price)\nplt.title(\"Returns\",fontsize=20)\nplt.show()","988eaed8":"y_train = stock_price.iloc[:400]\ny_test = stock_price.iloc[400:]\n\ndef plot_pred(pred,title):\n    plt.figure(figsize=(17,5))\n    plt.plot(y_train,label='Train')\n    plt.plot(y_test,label='Actual')\n    plt.plot(pred,label='Predicted')\n    plt.ylabel(\"returns\")\n    plt.title(title,fontsize=20)\n    plt.legend()\n    plt.show()","d4ddb3ae":"print(\"start:\",y_test.index.min())\nprint(\"end:\",y_test.index.max())","a5d86d83":"y_test.shape","60845b7c":"from statsmodels.tsa.ar_model import AR\nar_model = AR(y_train).fit()\ny_ar = ar_model.predict(400,531)\ny_ar = y_ar.reset_index(drop=True)\ny_ar.index = y_test.index\nmse(y_ar,y_test)","092ec5fe":"plot_pred(y_ar,\"Autoregression\")","bf219499":"from statsmodels.tsa.arima_model import ARMA\nma = ARMA(y_train, order=(0, 20)).fit()\ny_mam = ma.predict(400,531)\ny_mam.index = y_test.index\nmse(y_mam,y_test)\n","caa3eb75":"plot_pred(y_mam,\"Moving Average(MA)\")","ba4cc463":"from statsmodels.tsa.arima_model import ARIMA\narima = ARIMA(y_train,order=(1,0,0)).fit(disp=False)\ny_arima = arima.predict(400,531)\ny_arima.index = y_test.index\nprint(mse(y_arima,y_test))\nprint(arima.summary())\n\n\n","90893f15":"print(y_arima)\n","d6d80975":"plot_pred(y_arima,\"ARIMA Model\")","bec281a3":"Ref: https:\/\/machinelearningmastery.com\/time-series-forecasting-methods-in-python-cheat-sheet\/","465ba394":"# Moving Average\n  Moving Average is not the predictions based on the moving average of the previous values, instead it is the moving average of the residuals of the previous values.\n","7a7e14a0":"# ARIMA\nBut this unsuitable for Series with Seasonality. We have a seasonality in our data, but we do not have a trend. Lets construct an ARIMA model for this.","f830d29f":"# Auto Regression\nThe prediction will be a linear combination of the past values. "}}