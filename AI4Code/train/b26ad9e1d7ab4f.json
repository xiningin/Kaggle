{"cell_type":{"6fd5b480":"code","dfd23858":"code","4e58b8ac":"code","69227b55":"code","bafd289a":"code","72101533":"code","3ce2a773":"code","821ea086":"code","be75ad21":"code","d1e6bcbc":"code","cdbab189":"code","579f1864":"code","fe3a38b8":"code","db836676":"code","ac51e111":"code","8182f922":"code","627a1ead":"code","021b9333":"code","9fac21d9":"code","6faa678d":"code","a37f5a94":"code","3c787b05":"code","8047c5c1":"code","64af7bca":"code","6fcdb111":"code","c87f1afb":"code","8bcbb488":"code","025ca226":"code","b19d23b1":"code","2d8458c4":"code","49a64a35":"code","62bdcae2":"code","6045d5d7":"code","67c66b34":"code","3f30bbdd":"code","7f4da4dd":"code","b4be2fa3":"code","88c84980":"code","b5f8a9e3":"code","5640f9a0":"markdown","702f6ac9":"markdown","86ea29e6":"markdown","f83cd4f0":"markdown","d4d7d407":"markdown","47ca769e":"markdown","80b44942":"markdown","fb9ef035":"markdown","5c1f89a9":"markdown","1326d20a":"markdown","9f774498":"markdown","2eb4232a":"markdown","32683947":"markdown"},"source":{"6fd5b480":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport numpy as np\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport statistics as stats\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import linear_model","dfd23858":"tit1 = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntit2 = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntit3 = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","4e58b8ac":"tit1","69227b55":"tit3.head()","bafd289a":"tit3.shape","72101533":"tit3.isnull().sum()","3ce2a773":"agebins = [0,2,4,12,21,30,60,100]\nagebinlabels = [\"Infant\",\"Toddler\",\"Child\",\"Teeneager\",\"Young Adult\",\"Middle Aged\",\"Elderly\"]\ntit3[\"Age_Cat\"] = pd.cut(tit3.Age,agebins,labels=agebinlabels)","821ea086":"msv = tit3[(tit3.Sex == \"male\")& (tit3.Survived == 1)]\nfsv = tit3[(tit3.Sex == \"female\")& (tit3.Survived == 1)]\nmd = tit3[(tit3.Sex == \"male\") & (tit3.Survived == 0)]\nfd = tit3[(tit3.Sex == \"female\") & (tit3.Survived == 0)]","be75ad21":"msv.head()","d1e6bcbc":"tit3.isnull().sum()","cdbab189":"msv.Survived.sum()","579f1864":"rcParams[\"figure.figsize\"] = 10,8\nlabels = (\"Male\",\"Female\")\nsplits = [msv.Survived.sum(), fsv.Survived.sum()]\nexplode = (0, 0.1)\nplt.style.use(\"fivethirtyeight\")\nplt.title(\"Male and Female Survivors\")\nplt.pie(splits,  labels=labels,explode=explode, autopct='%1.1f%%', shadow=True, startangle=300);\n","fe3a38b8":"labels = (\"Male\",\"Female\")\nsplits = [md.Survived.value_counts().sum(), fd.Survived.value_counts().sum()]\nexplode = (0, 0.1)\nplt.style.use(\"fivethirtyeight\")\nplt.title(\"Male and Female Fatalitites\")\nplt.pie(splits,  labels=labels,explode=explode, autopct='%1.1f%%', shadow=True, startangle=30);","db836676":"sns.set_style(\"white\")\ng = sns.FacetGrid(tit3, col=\"Age_Cat\")\ng.map(sns.histplot, \"Pclass\");","ac51e111":"agebinlabels = [\"Infant\",\"Toddler\",\"Child\",\"Teeneager\",\"Young Adult\",\"Middle Aged\",\"Elderly\"]\ninfs = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Infant\")]\ntodds = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Toddler\")]\nchis = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Child\")]\nteens = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Teeneager\")]\nyas = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Young Adult\")]\nmas = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Middle Aged\")]\nes = tit3[(tit3.Survived == 1) & (tit3.Age_Cat == \"Elderly\")]\nnoncat = tit3.Age_Cat.isna().sum()","8182f922":"agerangecomp = [infs.Survived.sum(), todds.Survived.sum(),chis.Survived.sum(),teens.Survived.sum(),yas.Survived.sum(),mas.Survived.sum(),es.Survived.sum()]\nexplode = (0, 0.1,0,0.2,0,0,0.2)\nplt.title(\"Survivor Age Categories\")\nplt.pie(agerangecomp, labels=agebinlabels, explode = explode, autopct='%1.1f%%', shadow=True, startangle=70);","627a1ead":"#Males\ninfsm = infs[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\ntoddsm = todds[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\nchism = chis[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\nteensm = teens[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\nyasm = yas[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\nmasm = mas[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\nesm = es[(tit3.Survived == 1) & (tit3.Sex == \"male\")]\n#Females\ninfsf = infs[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\ntoddsf = todds[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\nchisf = chis[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\nteensf = teens[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\nyasf = yas[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\nmasf = mas[(tit3.Survived == 1) & (tit3.Sex == \"female\")]\nesf = es[(tit3.Survived == 1) & (tit3.Sex == \"female\")];","021b9333":"f, axs = plt.subplots(1,1,figsize=(15,15))\nplt.tight_layout(pad=0.4, h_pad=0.5, w_pad= 1.0)\nexplode = (0, 0.1,0,0,0,0,0.2)\n\n\n\nplt.subplot(1,2,1)\nmalesurv = [infsm.Survived.sum(), toddsm.Survived.sum(), chism.Survived.sum() , teensm.Survived.sum() , yasm.Survived.sum() ,masm.Survived.sum() , esm.Survived.sum()]\nplt.title(\"Males\")\nplt.pie(malesurv,  labels=agebinlabels,explode = explode, autopct='%1.1f%%', shadow=True, startangle=11)\n\nplt.subplot(1,2,2)\nfemsurv = [infsf.Survived.sum(), toddsf.Survived.sum(), chisf.Survived.sum() , teensf.Survived.sum() , yasf.Survived.sum() ,masf.Survived.sum() , esf.Survived.sum()]\nplt.title(\"Females\")\nplt.pie(femsurv,  labels=agebinlabels,explode = explode, autopct='%1.1f%%', shadow=True, startangle=0)\n;","9fac21d9":"sns.set_theme(style=\"dark\")\n\nSorD = sns.catplot(x=\"Pclass\", y=\"Survived\",hue=\"Sex\",\n                data=tit3, saturation=.5,\n                kind=\"bar\", ci=None, aspect=.8, palette=\"turbo\", height=6)\nSorD.fig.set_figwidth(5)\nSorD.fig.set_figheight(8)\n#SorD.despine(left=True, bottom=True)\nSorD.set_axis_labels(\"Survivor By Class\",\"Proprtion of survivors\")\nsns.plotting_context();","6faa678d":"rcParams[\"figure.figsize\"] = 2,5\n\nplt.axvline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.axhline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.title(\"Price paid by gender\")\nplt.ylabel(\"Ticket Price\")\nplt.xlabel(\"Gender\")\nplt.style.use(\"fivethirtyeight\")\n\nplt.scatter(tit3.Sex, tit3.Fare, edgecolor=\"k\")\nplt.xticks(rotation= 0);","a37f5a94":"rcParams[\"figure.figsize\"] = 8,8\n#plt.xlim(0.5,3.5)\nplt.axvline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.axhline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.title(\"Price paid by Age\")\nplt.ylabel(\"Ticket Price\")\nplt.xlabel(\"Age\")\nplt.style.use(\"fivethirtyeight\")\n\nplt.scatter(tit3.Age, tit3.Fare, edgecolor=\"k\")\nplt.xticks(rotation= 90);","3c787b05":"(tit3.Embarked == \"C\").sum()","8047c5c1":"departlabels = [\"Southampton\", \"Queenstown\", \"Cherbourg\"]\ndeparturesurv = [(tit3.Embarked == \"S\").sum(),(tit3.Embarked == \"Q\").sum(),(tit3.Embarked == \"C\").sum()]\nplt.title(\"All passenger Embarkments\")\nplt.pie(departuresurv,  labels=departlabels, autopct='%1.1f%%', shadow=True, startangle= 90);","64af7bca":"f, axs = plt.subplots(1,1,figsize=(15,15))\nplt.tight_layout(pad=0.4, h_pad=0.5, w_pad= 1.0)\nexplode = (0, 0.1,0,0,0,0,0.2)\n\n\n\nplt.subplot(1,2,1)\nsurvdepart = [((tit3.Embarked == \"S\") & (tit3.Survived == 1)).sum(), ((tit3.Embarked == \"Q\") & (tit3.Survived == 1)).sum(), ((tit3.Embarked == \"C\") & (tit3.Survived == 1)).sum()]\nplt.title(\"Survivor By depature\")\nplt.pie(survdepart,  labels=departlabels, autopct='%1.1f%%', shadow=True, startangle=11)\n\nplt.subplot(1,2,2)\ndieddepart = [((tit3.Embarked == \"S\") & (tit3.Survived == 0)).sum(),((tit3.Embarked == \"Q\") & (tit3.Survived == 0)).sum(),((tit3.Embarked == \"C\") & (tit3.Survived == 0)).sum()]\nplt.title(\"Fatality By departure\")\nplt.pie(dieddepart,  labels=departlabels, autopct='%1.1f%%', shadow=True, startangle=0)\n;","6fcdb111":"(tit2.Age.isnull().sum()\/tit2.shape[0])*100","c87f1afb":"(tit2.Cabin.isnull().sum()\/tit2.shape[0])*100","8bcbb488":"titheat = tit2\ntit2.head(10)","025ca226":"titheat.columns","b19d23b1":"titheat.isnull().sum()","2d8458c4":"titheat.dropna(axis=0,inplace=True)","49a64a35":" sns.heatmap(titheat[[\"Sex\", \"Pclass\", \"Age\", \"SibSp\", \"Fare\", \"Embarked\",\"Parch\",]].corr(),cmap=\"coolwarm\",vmax=0.3, center=0,square=True,linewidth=0.5);","62bdcae2":"x = titheat.Pclass\ny = titheat.Fare\n\nplt.hist2d(x, y, bins=(20, 20), cmap=plt.cm.jet)\nplt.colorbar()\nplt.show();","6045d5d7":"titheat = titheat[titheat.Fare < 500]\ntitheat.Fare.max()","67c66b34":"rcParams[\"figure.figsize\"] = 8,8\n#plt.xlim(0.5,3.5)\nplt.axvline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.axhline(0, c=(0.5,0.5,0.5), ls=\"\")\nplt.title(\"Price paid by Age\")\nplt.ylabel(\"Ticket Price\")\nplt.xlabel(\"Age\")\nplt.style.use(\"fivethirtyeight\")\n\nplt.scatter(titheat.Age, titheat.Fare, edgecolor=\"k\")\nplt.xticks(rotation= 90);","3f30bbdd":"x = titheat.Pclass\ny = titheat.Fare\n\nplt.hist2d(x, y, bins=(5, 5), cmap=plt.cm.jet)\nplt.colorbar()\nplt.show();","7f4da4dd":"titmess = titheat.replace(\"male\",1)\ntitmess = titmess.replace(\"female\",0)\ntitmess = titmess.replace({\"Q\":1,\"S\":2,\"C\":3})\ntitmess","b4be2fa3":" sns.heatmap(titmess[[\"Sex\", \"Pclass\", \"Age\", \"SibSp\", \"Fare\", \"Embarked\",\"Parch\",]].corr(),cmap=\"coolwarm\",vmax=0.3, center=0,square=True,linewidth=0.5);","88c84980":"titmess = titmess.drop(columns=[\"Name\", \"Ticket\"])\ntitmess","b5f8a9e3":"import numpy as np\nimport pandas as pd\n\n\nfrom sklearn.tree import DecisionTreeClassifier\n\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n\ncombine = [train, test]\n\n# Convert string values 'male' and 'female' to int values\nsex_mapping = {'male': 0, 'female': 1}\ntrain['Sex'] = train['Sex'].map(sex_mapping)\ntest['Sex'] = test['Sex'].map(sex_mapping)\n\n# Manage missing age data\n\n# We try to guess missing age data using the correlation among Age, Gender, and Pclass.\n# Guess Age values using median values for Age across sets of Pclass and Gender feature combinations.\n# So, median Age for Pclass=1 and Gender=0, Pclass=1 and Gender=1, and so on...\nguess_ages = np.zeros((2,3))\n\nfor dataset in combine:\n\n    for sex in range(0, 2):\n        for pclass in range(0, 3):\n            guess_df = dataset[\n                (dataset['Sex'] == sex) &\n                (dataset['Pclass'] == pclass+1)\n            ]['Age'].dropna()\n            age_guess = guess_df.median()\n            guess_ages[sex, pclass] = int(age_guess\/0.5 + 0.5) * 0.5\n    \n    for sex in range(0, 2):\n        for pclass in range(0, 3):\n            dataset.loc[\n                (dataset.Age.isnull()) &\n                (dataset.Sex == sex) &\n                (dataset.Pclass == pclass+1),\n                'Age'\n            ] = guess_ages[sex, pclass]\n\n#fill in missing Fare value in test set based on mean fare for that Pclass \nfor x in range(len(test[\"Fare\"])):\n    if pd.isnull(test[\"Fare\"][x]):\n        pclass = test[\"Pclass\"][x] #Pclass = 3\n        test[\"Fare\"][x] = round(train[train[\"Pclass\"] == pclass][\"Fare\"].mean(), 4)\n\ntrain = train.drop(['Ticket', 'Cabin', 'Name', 'PassengerId', 'SibSp', 'Parch', 'Embarked'], axis=1)\ntest = test.drop(['Ticket', 'Cabin', 'Name', 'SibSp', 'Parch', 'Embarked'], axis=1)\n\nX_train = train.drop('Survived', axis=1)\nY_train = train['Survived']\nX_test  = test.drop(\"PassengerId\", axis=1)\n\ndecision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train, Y_train)\n\nY_pred = decision_tree.predict(X_test)\n\n# Any results you write to the current directory are saved as output.\n\nsubmission = pd.DataFrame({\n    'PassengerId': test['PassengerId'],\n    'Survived': Y_pred\n})\n\nsubmission.to_csv('titanic_using_DTC.csv', index=False)","5640f9a0":"# Takeaways From Generated Visualisations\n\nFrom the graphs and charts I have constructed there are some really clear takeaways:\n* 70% of all survivors were Female\n* Of the female survivors the top 3 most likely to survive were:\n            1 Middle-Aged\n            2 Young Adults\n            3 Teenagers\n* If you had a 1st Class Ticket your chances of survival were significantly higher for both males and females. Substantially higher for females across all Classes.\n* One couple in their mid 30's paid 5 x more than any other passenger for some reason. This could be a mistake in the data entry.\n* Survivng passngers embarking from Cherbourg vastly outnumbered the fatalities that embarked from Cherbourg.\n\nFrom the takeaways a Middleaged female from Cherbourg with a 1st Class ticket was the most likely type of passenger to survive.","702f6ac9":"There is an overwhelmin majority of females that survived. On the other side an even larger population of the male passengers perished. I could drill down a bit more and create some buckets to define the age ranges. I can do two seperate charts for male and female so not clutter up the information too much.","86ea29e6":"Since I have removed the outlier for the price paid by the couple in their mid 30's the graph looks much more readable.","f83cd4f0":"I could break it down even further and categorise the Age_Cat by Gender and see Which age Range fares better by gender.","d4d7d407":"I'll lok at the survivors and compare them in various charts to see if there are any correlations about who survived etc\n* Gender of Survivors\n* Passenger Class of Survivors\n* Age of Survivors\n* Boarding Location\n* Parents\/Children\n* Cost of ticket","47ca769e":"20-21% of the age data is missing, i think its probably worthwhile to try and find a solution to plug those gaps rather than to just drop all the columns with NaN values.","80b44942":"I think I'm at a fairly good point to decide what features to use for my models. As I am one at Lvl1 of Machine Learning I'm going to use a descison tree classifier. I'll quickly drop all Na's and make a heat map to see if theres any correlation worth looking into.","fb9ef035":"78% of the cabin data is missing. I dont think theres any meaningful way of making this column worth filling up, it's useless so I'll drop it.","5c1f89a9":"From the heatmap I can see that there are some really strong correlations for a few of the columns.\n* Positive Correlations\n    1. Age - Fare\n    2. SibSp - Pclass\n    3. Parch - Fare\n* Negative correlations\n    1. Pclass - Fare\n    2. Pclass - Age\nSex and Embarked dont seem to be on the matrix though. I should really put them into numerical bins so that they can be calculated too.","1326d20a":"I'd like to explore the train data set and see if i can pick out any correlations before I make a start on cleaning. Get a better feel of what lies underneath.","9f774498":"After removing the previously noted Outliers in fare the 2D heat matrix becomes a little more readable. The negative correlation stands out much better. ","2eb4232a":"Creating some Age bins to categorise the ages a bit better.","32683947":"Aftre reassigning the categorial values in the dataframe to numericals and passing it through into the heat map, i find that there are slightly positive correlations between Sex and Passenger Class and some negative correlations between Sex and Fare. Embarked has a positive correlation between Fare and Age, with negative correlation for Pclass. These will be two extra features I can use in my model.\n\nI'll drop the rest of the useless data like Name and Ticket number as these wouldnt have had any bearing on whether or not they survived."}}