{"cell_type":{"78bd4f5e":"code","aeb41c51":"code","7633fbb2":"code","ed97725e":"code","3aafbfc6":"code","966c23fe":"code","e4c8e45c":"code","33da9e66":"code","8622d999":"code","b17005b8":"code","1b82ac1d":"code","893c030b":"code","782891de":"code","7aa583ee":"markdown","98db37bb":"markdown","13282edc":"markdown","2a5d5e5b":"markdown","f10e68ae":"markdown","8fb96615":"markdown","fc82e416":"markdown","eee84af7":"markdown","b43689c9":"markdown"},"source":{"78bd4f5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aeb41c51":"import pandas as pd \n\ndf = pd.read_csv('..\/input\/fertility-data-set\/fertility.csv')\ndf.head()","7633fbb2":"# get some information about data \ndf.info()","ed97725e":"# data transformation and replacement from string to integer\nfertility = df\n\nfertility['Season'].replace({\"winter\":1, \"spring\":2, \"summer\":3, \"fall\":4 }, inplace= True)\nfertility['Childish diseases'].replace({\"yes\":1, \"no\":0}, inplace= True)\nfertility['Accident or serious trauma'].replace({\"yes\":1, \"no\":0}, inplace= True)\nfertility['Surgical intervention'].replace({\"yes\":1,\"no\":0}, inplace= True)\nfertility['High fevers in the last year'].replace({\"more than 3 months ago\":2,\"less than 3 months ago\":1,\"no\":0}, inplace= True)\nfertility['Frequency of alcohol consumption'].replace({\"once a week\":1,\"hardly ever or never\":0,\"several times a week\":2 , \"every day\":3 , \"several times a day\" : 4}, inplace= True)\nfertility['Smoking habit'].replace({\"daily\":2, \"occasional\":1,\"never\":0}, inplace= True)\nfertility['Diagnosis'].replace({\"Normal\":1,\"Altered\":0}, inplace= True)\n\nfertility.head()","3aafbfc6":"fertility.describe()\n# to make some statistical calculations for the data to understand it more ","966c23fe":"fertility[\"Number of hours spent sitting per day\"].hist(bins=100)\nfertility[\"Number of hours spent sitting per day\"].value_counts()\n# from the histogram and the value counts functions we can find that we have an outlire with 342, so we can delete this row","e4c8e45c":"fertility.loc[fertility['Number of hours spent sitting per day'] == 342]\n# and then delete this row","33da9e66":"fertility.drop([50],axis=0, inplace =True)","8622d999":"fertility.isnull().sum()\n# there is no any missing values in our data set and now we are ready to go and explore our data ","b17005b8":"# to visualize the correlatin between the data \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np \n\ncorr = fertility.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nf, ax = plt.subplots(figsize = (10,7))\nsns.heatmap(corr,annot=True ,linewidths=.5,mask = mask,square=True)","1b82ac1d":"fertility.hist(bins = 30 , figsize=(15,10))\nplt.show()","893c030b":"# split our data to features and output \n\nX = fertility.drop(\"Diagnosis\" , axis = 1 )\ny = fertility[\"Diagnosis\"]","782891de":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression\n\n# split the data to train and test model\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.35, random_state=0)\n\ndec = DecisionTreeClassifier(max_depth=3)\nran = RandomForestClassifier(n_estimators=100)\nknn = KNeighborsClassifier()\nsvm = SVC(random_state=1)\nnaive = GaussianNB()\nlogReg = LogisticRegression()\n\nmodels = {\"Decision tree\" : dec,\n          \"Random forest\" : ran,\n          \"KNN\" : knn,\n          \"SVM\" : svm,\n          \"Naive bayes\" : naive,\n          \"Logistics regression\": logReg}\nscores= { }\n\nfor key, value in models.items():    \n    model = value\n    model.fit(X_train, y_train)\n    scores[key] = model.score(X_test, y_test)\n    \nscores_frame = pd.DataFrame(scores, index=[\"Accuracy Score\"]).T\nscores_frame.sort_values(by=[\"Accuracy Score\"], axis=0 ,ascending=False, inplace=True)\nscores_frame","7aa583ee":"# 3) Explore\n\nfind significant patterns and trends using statistical methods and visulization\n\n### Correlation","98db37bb":"# Modelling\n\nconstruct models to predict and forecast ","13282edc":"### Load and investigating the data\n\nload data as datafram from pandas and see what the data look like","2a5d5e5b":"### Test to find any missing values","f10e68ae":"# Scrub the data\nThis process is for cleaning and filtering our data. \n\nThis process is so important and critical, referring to **\u201cgarbage in, garbage out\u201d** philosophy, if the data is unfiltered and irrelevant, the results of the analysis will not mean anything, Think of this process as organizing and tidying up the data","8fb96615":"### Preprocessing \n\nwe will be able to deal with numbers better than strings so we will convert all discrete string values to integer values to easy our statistical calculations\n\n| Column        | 0             | 1     |  2  |  3  |  4  |\n| :------------- |:-------------:|:-------------:|   :-------------:| :-------------:  |  :-------------:  |\n| Season     | **null** |     winter |   spring |  summer  |  fall  |\n| Childish diseases      | no      |   yes |   **null** |  **null**  |  **null**  |\n| Accident or serious trauma | no      |   yes |   **null** |  **null**  |  **null**  |\n| Surgical intervention | no      |   yes |   **null** |  **null**  |  **null**  |\n| High fevers in the last year | no      |   less than 3 months ago |   more than 3 months ago |  **null**  |  **null**  |\n| Frequency of alcohol consumption | hardly ever or never      |   once a week |   several times a week | every day |  several times a day |\n| Smoking habit | never |  occasional |   daily |  **null**  |  **null**  |\n| Diagnosis | Altered |  Normal |    **null** |  **null**  |  **null**  |","fc82e416":"using this histogram we can tell that the diagnosis have soem relationship with the childish diseases","eee84af7":"we can see here tha the  `Number of hours spent sitting per day` have some outlire from the huge standard deviation and the maximum value (342), so to make sure we can do some histogram","b43689c9":"# Obtain the data \nGather data and understand it"}}