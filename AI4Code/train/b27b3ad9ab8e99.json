{"cell_type":{"f713f251":"code","70c346af":"code","2d703a88":"code","09d0d045":"code","0e24bc7a":"code","d9d7b003":"code","ac9cef85":"code","3420e80c":"code","23853224":"code","de29d3bf":"code","568ca531":"code","270314e4":"code","3903acd5":"code","1499b8c4":"code","42cf9d3b":"code","d9271916":"code","16c55864":"code","cc292359":"code","6957dec8":"code","29dc0c45":"code","0890c6a5":"code","45acfae5":"code","72a655a5":"code","7432f1c0":"code","1f3bf7f3":"code","b2a3e2e8":"code","f81876aa":"code","43ff8561":"code","5c388d81":"code","ebe900e2":"code","be14c1bf":"code","46b45f06":"code","27d0609f":"code","6a617e8e":"code","8ebfa476":"code","7a6741d0":"code","8e28f59f":"code","f9383916":"code","1bece92a":"code","2021216b":"code","3f07c71f":"code","f55b2518":"code","d7e7da03":"code","101b24e8":"code","e728eca7":"code","23166a22":"code","e55071f4":"code","d644841c":"code","5a3382a0":"code","77f1c237":"code","d291da24":"code","1f0097f6":"code","84ca4a22":"code","b6b6a195":"code","ee538210":"code","f75d6a56":"code","f2464871":"code","b734e384":"code","d6f57108":"code","6193e883":"markdown","c47bb530":"markdown","eb1d38a6":"markdown","dcd1979f":"markdown","f9fa79b6":"markdown","13f9ba38":"markdown"},"source":{"f713f251":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport torch","70c346af":"# Define a scaler\nx = torch.tensor(1, dtype = torch.float32)\nx","2d703a88":"# Vector\ny = torch.tensor([1, 2, 3], dtype = torch.float32)\ny","09d0d045":"# Matrix\nz = torch.tensor([[1, 2, 3, 5.5], \n                  [5.4, 2, 3, 4], \n                  [6, 5, 4, 2],\n                  [6.2, 3.2, 2, 1246]], dtype = torch.float32)\nz","0e24bc7a":"# Tensor \nTensor_ = torch.tensor([[[1, 2, 5], \n                    [5, 4, 3], \n                    [8, 7, 4]], \n                   [[6, 5, 4], \n                    [2, 1, 5], \n                    [8, 7, 4]], \n                   [[0, 3, 10], \n                    [7, .5, 3], \n                    [3, 2, 0.]]], dtype = torch.float64)\nTensor_","d9d7b003":"# change data type of a tensor \nTensor_ = Tensor_.type(torch.float32)\nTensor_.dtype","ac9cef85":"# examine that our device is cpu or gpu\nTensor_.device","3420e80c":"Tensor_.min()","23853224":"Tensor_.min(1)","de29d3bf":"Tensor_.min(2)","568ca531":"Tensor_.min(0)","270314e4":"# What's mean? Tensor_.min(1)\n\n# please think about this question and answer in comment.","3903acd5":"Tensor_.mean()","1499b8c4":"Tensor_.numel()","42cf9d3b":"Tensor_.size()","d9271916":"Tensor_ = Tensor_.float()\nTensor_.dtype","16c55864":"y[0:2]","cc292359":"y[0:-1] # last element will drop","6957dec8":"z[1, 3]","29dc0c45":"z[0, :] # get first row","0890c6a5":"z[:, 0] # get first column","45acfae5":"z[:2, :] # get 1th & 2th row","72a655a5":"Tensor_","7432f1c0":"Tensor_[0, 2, 1]","1f3bf7f3":"Tensor_[0]","b2a3e2e8":"Tensor_[0, ...]","f81876aa":"Tensor_[1, :2, :2]","43ff8561":"Tensor_zero = torch.zeros(200, 100, 20)\nTensor_zero","5c388d81":"Tensor_zero.size()","ebe900e2":"torch.eye(5)","be14c1bf":"torch.eye(4, 3)","46b45f06":"torch.rand(60) # uniform distribution [0, 1]","27d0609f":"torch.randn(50) # normal distribution N ~ (mean: 0, sd: 1)","6a617e8e":"torch.randn(2, 3)","8ebfa476":"torch.randperm(3)# shuffleing our vector","7a6741d0":"torch.ones(10, 3, 2)","8e28f59f":"torch.full((10, 10, 4), 6)","f9383916":"torch.zeros_like(Tensor_)","1bece92a":"torch.ones_like(Tensor_)","2021216b":"torch.empty(10, 20, 3)","3f07c71f":"torch.empty_like(Tensor_)","f55b2518":"torch.range(5, 10)","d7e7da03":"torch.range(start = 0, end = 50, step = 4)","101b24e8":"torch.linspace(start = 0, end = 5)","e728eca7":"torch.linspace(1, 10, 30)","23166a22":"torch.abs(y)","e55071f4":"torch.norm(y)","d644841c":"torch.tensor([3, 4])","5a3382a0":"torch.norm(torch.tensor([3., 4]))","77f1c237":"torch.ceil(Tensor_)","d291da24":"torch.floor(Tensor_) # not inplace","1f0097f6":"torch.floor_(Tensor_) # inplace ","84ca4a22":"torch.argmax(Tensor_)","b6b6a195":"torch.argmin(Tensor_)","ee538210":"x = torch.tensor([1, 2., 3])\ny = torch.tensor([1, 2., 3])","f75d6a56":"torch.dist(x, y, p = 2)# distance between to vector","f2464871":"z","b734e384":"z.reshape(8, -1)","d6f57108":"z. ","6193e883":"# Tensor","c47bb530":"![image.png](attachment:fe725ddb-e4c8-4cd4-8f26-e5c810d1e091.png)","eb1d38a6":"# indexing and slicing","dcd1979f":"![image.png](attachment:fb2e4f7f-b5d8-451b-bb88-18f95a702e41.png)","f9fa79b6":"![image.png](attachment:b098f58f-1110-4bab-9159-adac0449b49a.png)","13f9ba38":"# some useful function"}}