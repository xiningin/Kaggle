{"cell_type":{"5a579a03":"code","4e265eda":"code","87f966a3":"code","f45927fd":"code","40f414fb":"code","164f365d":"code","d7adc304":"code","bb60286c":"code","28d41c26":"code","c878c01c":"markdown","038da8c1":"markdown","f81119d5":"markdown","5cbaa6c4":"markdown"},"source":{"5a579a03":"! pip install -U lightautoml","4e265eda":"import gc\nimport pickle\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom sklearn.metrics import log_loss\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.preprocessing import QuantileTransformer\n\nfrom lightautoml.tasks import Task\nfrom lightautoml.automl.presets.tabular_presets import TabularUtilizedAutoML","87f966a3":"with open(\"..\/input\/tps-june-data-preprocess\/TPS_June_Dataset_Set1.txt\", 'rb') as handle: \n    data = handle.read()\n\nprocessed_data = pickle.loads(data)\ntrain_df = processed_data['train_df']\ntest_df = processed_data['test_df']\n\nYtrain_oh = pd.get_dummies(train_df['target']).values\n\ndel processed_data\ngc.collect()","f45927fd":"FOLD = 5\nN_THREADS = 4\nTIMEOUT = 60 * 60 * 3\n\nmodel = TabularUtilizedAutoML(\n    task = Task('multiclass',), \n    timeout = TIMEOUT,\n    cpu_limit = N_THREADS,\n    general_params = {'use_algos': [['lgb', 'cb', 'cb_tuned'], ['linear_l2', 'cb']]},\n    reader_params = {'n_jobs': N_THREADS, 'cv': FOLD},\n)\n\ny_pred_meta_lama = model.fit_predict(train_df, roles={'target':'target'})\nprint(\"\\n\\ny_pred_meta_lama: {}\".format(y_pred_meta_lama.shape))","40f414fb":"oof_score = log_loss(Ytrain_oh, y_pred_meta_lama.data)\nprint(\"Aggregate OOF Score: {}\".format(oof_score))","164f365d":"y_pred_final_lama = model.predict(test_df)","d7adc304":"np.savez_compressed('.\/LAMA_Meta_Features.npz',\n                    y_pred_meta_lama=y_pred_meta_lama.data, \n                    oof_score=oof_score,\n                    y_pred_final_lama=y_pred_final_lama.data)","bb60286c":"p_min = 0.025\np_max = 1 - p_min\n\n#y_pred_final_lama = np.clip(y_pred_final_lama.data, p_min, p_max)\ny_pred_final_lama = y_pred_final_lama.data\n\ntest_df = pd.read_csv(\"..\/input\/tabular-playground-series-jun-2021\/test.csv\")\nsubmit_df = pd.DataFrame()\nsubmit_df['id'] = test_df['id']\nsubmit_df['Class_1'] = y_pred_final_lama[:,1]\nsubmit_df['Class_2'] = y_pred_final_lama[:,2]\nsubmit_df['Class_3'] = y_pred_final_lama[:,3]\nsubmit_df['Class_4'] = y_pred_final_lama[:,4]\nsubmit_df['Class_5'] = y_pred_final_lama[:,5]\nsubmit_df['Class_6'] = y_pred_final_lama[:,6]\nsubmit_df['Class_7'] = y_pred_final_lama[:,7]\nsubmit_df['Class_8'] = y_pred_final_lama[:,8]\nsubmit_df['Class_9'] = y_pred_final_lama[:,0]\nsubmit_df.head()","28d41c26":"submit_df.to_csv(\".\/LAMA_submission.csv\", index=False)","c878c01c":"## Create submission file","038da8c1":"## Prepare data for model training","f81119d5":"## Import libraries","5cbaa6c4":"## Build and validate the model"}}