{"cell_type":{"c3eaaca0":"code","7142af70":"code","2dbc88a3":"code","0d306faa":"code","d5394f71":"code","f7afae0d":"code","d1d1d83e":"code","ffdedf17":"code","7511b47a":"code","19a86415":"code","f9f00a33":"code","0d49af6b":"code","a4499266":"code","20ee89ab":"code","f8cfc4f5":"code","f13fe13f":"code","69972e3a":"code","79c7189b":"code","a331323d":"code","99233312":"code","7da238d7":"code","58af54cb":"code","3773235f":"markdown","add0846c":"markdown","abe7955a":"markdown","b078f90a":"markdown","e98f97f3":"markdown","8746549d":"markdown","2b8f97ad":"markdown","444998d6":"markdown","8d451c57":"markdown","07a568df":"markdown","abc6cae5":"markdown","8ece79d4":"markdown","ab217b6e":"markdown","a33e856d":"markdown","c3ddcfcc":"markdown","3e4a0270":"markdown","40485421":"markdown","3e333c4e":"markdown","7d96619a":"markdown","11262ccd":"markdown","fe13637a":"markdown","901642af":"markdown","9fa533f7":"markdown","f3fb4808":"markdown","6eb40682":"markdown","c9760fbb":"markdown","87ba2681":"markdown","f5acc1a4":"markdown","55ac6a0b":"markdown","e7cac30d":"markdown","e12bc55e":"markdown"},"source":{"c3eaaca0":"import pandas as pd\nimport itertools\nimport statsmodels.stats.api as sms\nfrom scipy.stats import shapiro\nimport scipy.stats as stats\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7142af70":"df = pd.read_csv(\"..\/input\/pricing\/pricing.csv\", sep=\";\")\npd.set_option('display.max_columns', None)","2dbc88a3":"df.head()","0d306faa":"def data_analysis(dataframe):\n    print(f'Data: {dataframe.head(5)} \\n')\n    print(f'Shape:{dataframe.shape} \\n')\n    print(f'Number of unique categories: {dataframe[\"category_id\"].nunique()} \\n')\n    print(f'Name of categories: {dataframe.category_id.unique()} \\n')\n    print(f'Null value: {dataframe.isnull().sum()} \\n')\n    print(dataframe.describe([0.01, 0.05, 0.50, 0.95, 0.99]).T)","d5394f71":"data_analysis(df)","f7afae0d":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.05)\n    quartile3 = dataframe[variable].quantile(0.95)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit","d1d1d83e":"low, up = outlier_thresholds(df, variable=\"price\")\nprint(f'Low Limit: {low}  Up Limit: {up}')","ffdedf17":"def has_outliers(dataframe, numeric_columns):\n    for col in numeric_columns:\n        low_limit, up_limit = outlier_thresholds(dataframe, col)\n        if dataframe[(dataframe[col] > up_limit) | (dataframe[col] < low_limit)].any(axis=None):\n            number_of_outliers = dataframe[(dataframe[col] > up_limit) | (dataframe[col] < low_limit)].shape[0]\n            print(col, \":\", number_of_outliers, \"outliers\")","7511b47a":"has_outliers(df, ['price'])","19a86415":"def remove_outliers(dataframe, numeric_columns):\n    for variable in numeric_columns:\n        low_limit, up_limit = outlier_thresholds(dataframe, variable)\n        dataframe_without_outliers = dataframe[~((dataframe[variable] < low_limit) | (dataframe[variable] > up_limit))]\n    return dataframe_without_outliers","f9f00a33":"df = remove_outliers(df, [\"price\"])\ndata_analysis(df)","0d49af6b":"# When the average price by categories is analyzed, we can make comparisons for groups, but we need to prove this statistically\ndf.groupby(\"category_id\").agg({\"price\": \"mean\"}).reset_index()","a4499266":"\nprint(\"Shapiro Wilks Test Result \\n\")\nfor x in df[\"category_id\"].unique():\n    test_statistic, pvalue = shapiro(df.loc[df[\"category_id\"] == x, \"price\"])\n    if (pvalue<0.05):\n        print(f'{x}:')\n        print('Test statistic = %.4f, p-value = %.4f' % (test_statistic, pvalue), \"H0 is rejected\")\n    else:\n        print(f'{x}:')\n        print('Test statistic = %.4f, p-value = %.4f' % (test_statistic, pvalue), \"H0 is not rejected\")","20ee89ab":"groups = []\nfor x in itertools.combinations(df[\"category_id\"].unique(),2):\n    groups.append(x)\n\nresult = []\nprint(\"Mann-Whitney U Test Result \")\nfor x in groups:\n    test_statistic, pvalue = stats.stats.mannwhitneyu(df.loc[df[\"category_id\"] == x[0], \"price\"],\n                                                      df.loc[df[\"category_id\"] == x[1], \"price\"])\n    if (pvalue<0.05):\n        result.append((x[0], x[1], \"H0 is rejected\"))\n        print('\\n', \"{0} - {1} \".format(x[0], x[1]))\n        print('Test statistic= %.4f, p-value= %.4f' % (test_statistic, pvalue), \"H0 is rejected\")\n    else:\n        result.append((x[0], x[1], \"H0 is not rejected\"))\n        print('\\n', \"{0} - {1} \".format(x[0], x[1]))\n        print('Test statistic= %.4f, p-value= %.4f' % (test_statistic, pvalue), \"H0 is not rejected\")","f8cfc4f5":"result_df = pd.DataFrame()\nresult_df[\"Category 1\"] = [x[0] for x in result]\nresult_df[\"Category 2\"] = [x[1] for x in result]\nresult_df[\"H0\"] = [x[2] for x in result]\nresult_df","f13fe13f":"result_df[result_df[\"H0\"] == \"H0 is not rejected\"]","69972e3a":"result_df[result_df[\"H0\"] == \"H0 is rejected\"]","79c7189b":"not_rejected = [361254, 874521, 675201, 201436]\nsum = 0\nfor i in not_rejected:\n    sum += df.loc[df[\"category_id\"] == i,  \"price\"].mean()\nPRICE = sum \/ 4\n\nprint(\"PRICE : %.4f\" % PRICE)","a331323d":"prices = []\nfor category in not_rejected:\n    for i in df.loc[df[\"category_id\"] == category, \"price\"]:\n        prices.append(i)\n\nprint(f'Flexible Price Range: {sms.DescrStatsW(prices).tconfint_mean()}')","99233312":"# for minimum price in confidence interval\nfreq = len(df[df[\"price\"] >= 36.7109597897918])\n# number of sales equal to or greater than this price\nincome = freq * 36.7109597897918\nprint(f'Income: {income}')","7da238d7":"freq = len(df[df[\"price\"] >= 37.0924])\n# number of sales equal to or greater than this price\nincome = freq * 37.0924\nprint(f'Income: {income}')","58af54cb":"# for maximum price in confidence interval\nfreq = len(df[df[\"price\"] >= 38.17576299427283])\n# number of sales equal to or greater than this price\nincome = freq * 38.17576299427283\nprint(f'Income: {income}')","3773235f":"### Threshold values are determined for the price variable.\n","add0846c":"### Outlier values need to remove.","abe7955a":"### There is no statistically significant difference average price between 6 categorical groups\n","b078f90a":"2.  ##  Price:37.0924","e98f97f3":"<font color = '#000'>\n    <a id = \"6\"><\/a><br>\n    \n ## Data Analysis","8746549d":"<font color = '#000'>\n    <a id = \"7\"><\/a><br>\n    \n## Outlier Values","2b8f97ad":"### When we look at the average of the categories, we can observe. But these observations are not statistically significant results. So, we will test all hypotheses of categories in pairs and obtain statistical results.\n","444998d6":"<font color = '#000'>\n    <a id = \"1\"><\/a><br>\n    \n# *PRICING*\n\nA game company gave gift coins to its users for purchasing items in a game. Using these virtual coins, users buy various vehicles for their characters. The game company did not specify a price for an item and provided users to buy this item at the price they wanted. For example, for the item named shield, users will buy this shield by paying the amounts they see fit. For example, a user can pay with 30 units of virtual money given to him, while the other user can pay with 45 units. Therefore, users can buy this item with the amounts they can afford to pay.\n","8d451c57":"<font color = '#000'>\n    <a id = \"3\"><\/a><br>\n    \n# Data Preparing","07a568df":"<font color = '#BB6688'>\n    \n   \nContent:\n    \n1.[Pricing](#1) \n    \n* [Problem to be solved](#2)\n    \n2.[Data Preparing](#3)\n    \n* [Import Libraries](#4)\n    \n* [Load Data](#5)\n    \n* [Data Analysis](#6)\n    \n* [Outlier Values](#7)\n   \n3.[AB Testing](#8)\n    \n* [Checking Assumptions](#9)   \n * [Normal Distribution](#10)\n * [Homogeneity of Variance](#11)\n    \n    \n* [Implementing Hypothesis](#12)\n    \n4.[Problems](#13)","abc6cae5":"<font color = '#000'>\n    <a id = \"2\"><\/a><br>\n    \n## *Problems to be solved*\n1.\tDoes the price of the item differ by category? Express it statistically.\n2.\tDepending on the first question, what should the item cost? Explain why?\n3.\tIt is desirable to be flexible in terms of price. Create a decision support system for the price strategy.\n4.\tSimulate item purchases and income for possible price changes.\n","8ece79d4":"## *Flexible Price Range*","ab217b6e":"<font color = '#000'>\n    <a id = \"9\"><\/a><br>\n    \n### 1.Checking Assumptions\n    \n<font color = '#000'>\n    <a id = \"10\"><\/a><br>\n    \n> ### 1.1 Normal Distribution\n    \n<font color = '#000'>\n    <a id = \"11\"><\/a><br>  \n    \n> ### 1.2 Homogeneity of Variance\n\n<font color = '#000'>\n<a id = \"12\"><\/a><br>\n    \n### 2.Implementing Hypothesis\n","a33e856d":"3.  ##  Price:38.17576299427283","c3ddcfcc":"## *Does the price of the item differ by category?*","3e4a0270":"### *1.1 Normal Distribution*\n### *H0: There is no statistically significant difference between sample distribution and* *theoretical normal distribution*\n### *H1: There is statistically significant difference between sample distribution and* *theoretical normal distribution*","40485421":"### The average of 4 statistically identical categories will be the price we will determine.\n","3e333c4e":"![](http:\/\/visionedgemarketing.com\/wp-content\/uploads\/2014\/11\/pricing-model.gif)","7d96619a":"<font color = '#000'>\n    <a id = \"4\"><\/a><br>\n    \n## Import Libraries ","11262ccd":"## *Income Simulation*","fe13637a":"### There is a statistically significant difference average price between 9 categorical groups\n","901642af":"<font color = '#000'>\n    <a id = \"5\"><\/a><br>\n    \n## Load Data","9fa533f7":"### We list the prices of the 4 categories that selected for pricing\n","f3fb4808":"## *What should the item cost?*","6eb40682":"### *2.Implementing Hypothesis*","c9760fbb":"<font color = '#000'>\n    <a id = \"8\"><\/a><br>\n\n# AB Testing","87ba2681":"<font color = '#000'>\n    <a id = \"13\"><\/a><br>\n\n# Problems","f5acc1a4":"### We will calculate the incomes that can be obtained from the minimum, maximum values of the\n### confidence interval and the prices we set.","55ac6a0b":"1.  ##  Price:36.7109597897918\n","e7cac30d":"### Normal distribution is not provided,so we can apply a non-parametric method.\n","e12bc55e":"### There is a difference between 95% and 99% values "}}