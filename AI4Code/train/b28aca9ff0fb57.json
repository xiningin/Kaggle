{"cell_type":{"765941d8":"code","dfdb3174":"code","801fab92":"code","3c12216a":"code","c1d10878":"code","6b2382e7":"code","f025a27b":"code","ea162899":"code","43050413":"code","ada9406f":"code","b8dbc336":"code","77ffab70":"code","51d96194":"code","dbb17d9a":"code","e05c3b68":"code","044b8850":"code","dd12e256":"code","43e45593":"code","259904d5":"code","0bd91338":"code","f33ca9fb":"code","3eebc12d":"markdown","0aa73599":"markdown","051c0ce6":"markdown","270afc54":"markdown","88b7f5ee":"markdown","b805a3d8":"markdown"},"source":{"765941d8":"!pip install -U git+https:\/\/github.com\/paoloripamonti\/face-recognition.git","dfdb3174":"from face_recognition import FaceRecognition\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, roc_curve, precision_recall_curve, roc_auc_score, accuracy_score\n\nimport matplotlib.pyplot as plt\nimport os\nimport glob\nimport pandas as pd\nimport random\nimport numpy as np\nimport cv2\nimport base64\nfrom tqdm import tqdm\nimport requests\nfrom pprint import pprint","801fab92":"ROOT_FOLDER =\"\/kaggle\/input\/trainface\/train_imgs\/\"\nMODEL_PATH = \"my_lfw_model.pkl\"","3c12216a":"dataset = []\nfor path in glob.iglob(os.path.join(ROOT_FOLDER, \"**\", \"*.jpg\")):\n    person = path.split(\"\/\")[-2]\n    dataset.append({\"person\":person, \"path\": path})\n    \ndataset = pd.DataFrame(dataset)\n##dataset = dataset.groupby(\"person\").filter(lambda x: len(x) > 10)\n##test difference without groupby\ndataset.head(10)","c1d10878":"dataset.groupby(\"person\").count()[:200].plot(kind='bar', figsize=(20,5))","6b2382e7":"plt.figure(figsize=(20,10))\nfor i in range(20):\n    idx = random.randint(0, len(dataset))\n    img = plt.imread(dataset.path.iloc[idx])\n    plt.subplot(4, 5, i+1)\n    plt.imshow(img)\n    plt.title(dataset.person.iloc[idx])\n    plt.xticks([])\n    plt.yticks([])\nplt.tight_layout()\nplt.show()","f025a27b":"train, test = train_test_split(dataset, test_size=0.1, random_state=10)\nprint(\"Train:\",len(train))\nprint(\"Test:\",len(test))","ea162899":"%%time\nfr = FaceRecognition()","43050413":"#%%time\n#fr.fit_from_dataframe(train)","ada9406f":"%%time\nfr.fit('\/kaggle\/input\/trainface\/train_imgs\/')","b8dbc336":"fr.save(MODEL_PATH)","77ffab70":"%%time\ny_test, y_pred, y_scores = [],[],[]\nfor idx in tqdm(range(len(test))):\n    path = test.path.iloc[idx]\n    result = fr.predict(path)\n    for prediction in result[\"predictions\"]:\n        y_pred.append(prediction[\"person\"])\n        y_scores.append(prediction[\"confidence\"])\n        y_test.append(test.person.iloc[idx])","51d96194":"print(classification_report(y_test, y_pred))","dbb17d9a":"print(\"Accuracy: %f\" % accuracy_score(y_test, y_pred))","e05c3b68":"!cp -rf \/kaggle\/input\/test-face\/test \/kaggle\/working\/","044b8850":"import os\nimgs=sorted(os.listdir(\"\/kaggle\/input\/test-face\/test\"))\nprint(imgs)","dd12e256":"cd \/kaggle\/working\/test\/","43e45593":"sub=[]\npred=[]\nimport pandas as pd\n\nfor imgname in imgs:\n    path = imgname\n    print(path[:-4])\n    img = cv2.imread(path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\n    result = fr.predict(path, threshold=0.3)\n    #sub.append([path[:-4],result[\"predictions\"][0]['person'].strip(\"'\")])\n    print(result[\"predictions\"])\n    sorted_result=sorted(result[\"predictions\"], key=lambda k: k['confidence'],reverse=True) \n    print(sorted_result)\n    sub.append([path[:-4],sorted_result[0]['person'].strip(\"'\")])\n    pred.append([path[:-4],sorted_result])\n\n    \ndf=pd.DataFrame(sub)\ndf.to_csv(\"facerecognition83_submission.csv\",index=None,header=None)\n\np=pd.DataFrame(pred)\np.to_csv(\"rawfaces_predictions.csv\",index=None,header=None)\n","259904d5":"!cp *.csv \/kaggle\/working\/","0bd91338":"path = \"1.jpg\"\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\nresult = fr.predict(path, threshold=0.3)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\n\nplt.figure(figsize=(20,20))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(\"Source Image\")\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"Output Image\")\nplt.tight_layout()\nplt.show()\n\n\npprint(result[\"predictions\"])","f33ca9fb":"path = \"2.jpg\"\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\nresult = fr.predict(path, threshold=0.3)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\n\nplt.figure(figsize=(20,20))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(\"Source Image\")\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"Output Image\")\nplt.tight_layout()\nplt.show()\n\n\npprint(result[\"predictions\"])","3eebc12d":"# Face Recognition\n\nSee: https:\/\/github.com\/paoloripamonti\/face-recognition.git","0aa73599":"### Fit Face Recognition","051c0ce6":"### Evaluate","270afc54":"### Settings","88b7f5ee":"### Split train & test","b805a3d8":"### Read dataset"}}