{"cell_type":{"f72bc1bb":"code","66805c7d":"code","04e122f0":"code","56eddb97":"code","06fd25c4":"code","975b8de3":"markdown","2c43928d":"markdown","458aa046":"markdown"},"source":{"f72bc1bb":"# Modules\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\npd.set_option('precision', 7)","66805c7d":"# Load Data & Display\ncsv = '..\/input\/statewise-rainfall-1901-to-2015\/Statewise_Rainfall_1901-2015.csv'\ndf = pd.read_csv(csv)\n\n# Display Dataframe\ndf.head()","04e122f0":"# Standard Stats Function\ndef stdStats (subDiv):\n  df_sub = df.loc[(df['STATES'] == subDiv) & (df['Parameter'] == 'Actual')]\n  df_sub.reset_index(drop=True, inplace=True)\n\n  # Adding Mean, Median, Max & Min Columns\n  df_sub['MEAN'] = df_sub.iloc[:, 3:-1].mean(axis=1)\n  df_sub['MEDIAN'] = df_sub.iloc[:, 3:-1].median(axis=1)\n  df_sub['MAX'] = df_sub.iloc[:, 3:-1].max(axis=1)\n  df_sub['MIN'] = df_sub.iloc[:, 3:-1].min(axis=1)    \n  \n  # high rainfall\n  high = df_sub.max()\n  # low rainfall\n  low = df_sub.min()\n  # mean annual rainfall - subdivision\n  avg_sub = df_sub['ANNUAL'].mean()\n  # mean annual rainfall - overall\n  avg = df['ANNUAL'].mean()\n\n  ## Output\n  print('--------------------------- Standard Stats for {} --------------------------- \\n'.format(subDiv))\n  print('# - {} had the highest annual rainfall of {} mm \\n'.format(high[1],high[15]) )\n  print('# - In {}, {} had the highest rainfall of {} mm while {} had the lowest rainfall of {} mm \\n'.format( high[1],\n                                                                                                           high[high==high[3:-1].max()].index[0],\n                                                                                                           high[3:-1].max(),\n                                                                                                           high[high==high[3:-1].min()].index[0],\n                                                                                                           high[3:-1].min() ))\n\n  print('# - {} had the lowest annual rainfall of {} mm \\n'.format(low[1],low[15]) )\n  print('# - In {}, {} had the highest rainfall of {} mm while {} had the lowest rainfall of {} mm \\n'.format( low[1],\n                                                                                                           low[low==low[3:-1].max()].index[0],\n                                                                                                           low[3:-1].max(),\n                                                                                                           low[low==low[3:-1].min()].index[0],\n                                                                                                           low[3:-1].min() ))\n\n\n  print('# - The average annual rainfall is {:.2f} mm, while the national average is {:.2f} mm \\n'.format(avg_sub,avg))\n\n  ## Visualisation\n  fig = go.Figure()\n  fig.add_trace(go.Scatter(x=df_sub['YEAR'], y=df_sub['ANNUAL'], mode='lines', name='Annual' ))\n  fig.add_trace(go.Scatter(x=df_sub['YEAR'], y=df_sub['MEAN'], mode='lines', name='Mean' ))\n  fig.add_trace(go.Scatter(x=df_sub['YEAR'], y=df_sub['MEDIAN'], mode='lines', name='Median' ))\n  fig.add_trace(go.Scatter(x=df_sub['YEAR'], y=df_sub['MAX'], mode='lines', name='Max' ))\n  fig.add_trace(go.Scatter(x=df_sub['YEAR'], y=df_sub['MIN'], mode='lines', name='Min' ))  \n  fig.update_layout(showlegend=True,\n                      xaxis_title = 'Years',\n                      yaxis_title = 'Annual Rainfall (mm)',\n                      title = 'Annual Rainfall (mm) for '+subDiv+' Sub Division',\n                      title_x=0.5);\n  fig.show()","56eddb97":"stdStats('BIHAR')","06fd25c4":"stdStats('KERALA')","975b8de3":"## Indian Sub Division Rainfall Data Analysis & Visualisation\n\nStandard Stats & Data Visualisation of Actual Rainfall from 1901 - 2015 for Indian Sub-Divisions","2c43928d":"### Bihar Sub Division","458aa046":"### Kerala Sub Division"}}