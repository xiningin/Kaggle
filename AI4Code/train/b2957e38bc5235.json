{"cell_type":{"88135de5":"code","7a1ba714":"code","5fa9bc9b":"code","d527659a":"code","cbc6c549":"code","a718aa88":"code","d00746d7":"code","bbd7cbb4":"code","745e1980":"code","8ba1a6f1":"code","dc626521":"code","b0b48265":"code","f777aaf3":"code","75cd3782":"code","41b96250":"code","5521954e":"code","b48ca1c4":"code","960f034e":"code","ca6dc8a3":"code","a4ada95d":"code","a115425a":"code","8c7ed486":"code","223b43e5":"code","135b4327":"code","7a56e5b6":"markdown","094ef6db":"markdown","cb37a030":"markdown","9c4a92df":"markdown","4a1306bd":"markdown","a834653c":"markdown","9ce4057c":"markdown","3d1bdfbd":"markdown","ffe8e9f5":"markdown","dfb86d3b":"markdown","08dc9391":"markdown","1c9add72":"markdown","b1f11d41":"markdown","03cf2746":"markdown","dfffee44":"markdown","e4f73d1f":"markdown","829db8c6":"markdown","0d737670":"markdown","133368ed":"markdown","55638711":"markdown","69d0f0a2":"markdown","49a7880d":"markdown"},"source":{"88135de5":"%matplotlib inline\n\n# Data Processing and Visualization Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7a1ba714":"# load the datasets using pandas's read_csv method\ndf = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","5fa9bc9b":"# View the training data\ndf.head()","d527659a":"print(df.shape)   #shows datapoints and features in train dataset                   \nprint(df.columns) #displays column names in our train dataset","cbc6c549":"# Different data types in the dataset\ndf.dtypes","a718aa88":"df.isnull().sum()","d00746d7":"# Replace null values\ndf['country'].replace(np.nan, 'No Data',inplace  = True)\ndf['cast'].replace(np.nan, 'No Data',inplace  = True)\ndf['director'].replace(np.nan, 'No Data',inplace  = True)\n\n# Drops\ndf.dropna(subset=[\"date_added\", \"rating\"], inplace=True)","bbd7cbb4":"df.isnull().sum()","745e1980":"sns.countplot(x='type', data= df, palette=\"YlGnBu\")\nprint(df.type.value_counts())","8ba1a6f1":"df[\"date_added\"] = pd.to_datetime(df['date_added'])\ndf['year_added'] = df['date_added'].dt.year\ndf[\"year_added\"].value_counts()","dc626521":"df['month_added']=df['date_added'].dt.month\ndf[\"month_added\"].value_counts()","b0b48265":"month_vs_year = df.groupby('year_added')['month_added'].value_counts().unstack().fillna(0)\nax=sns.heatmap(month_vs_year,cmap=\"YlGnBu\")\nax.set_xlabel('Year_added').set_size(20)\nax.set_ylabel('Month_added').set_size(20)","f777aaf3":"print(df.rating.value_counts())","75cd3782":"plt.figure(figsize=(10,4))\nsns.countplot(x='rating', hue= 'type', data= df, palette=\"YlGnBu\")","41b96250":"print(df.country.value_counts())","5521954e":"from collections import Counter\ncountry = df['country']\nfiltered_countries = country[country != 'No Data']\ncountry_count = pd.Series(dict(Counter(','.join(filtered_countries).split(',')))).sort_values(ascending=False)\ntop20 = country_count.head(20)\n\nplt.figure(figsize=(15,5))\nsns.barplot(x= top20.index, y=top20)\nplt.xticks(rotation=60)\nplt.title('Top 20 countries with most contents', fontsize=15, fontweight='bold')\nplt.xlabel('Country')\nplt.show()","b48ca1c4":"movies_df = df[df.type == \"Movie\"]\ntvshows_df = df[df.type == \"TV Show\"]","960f034e":"movies_df['duration']=movies_df['duration'].str.extract('(\\d+)')\nmovies_df['duration']=movies_df['duration'].astype(str).astype(int)\n\n# movie duration distribution\nplt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.kdeplot(data=movies_df[\"duration\"], shade=True)\nplt.title('kdeplot of duration of Movies',fontweight=\"bold\")\n","ca6dc8a3":"tvshows_df['duration']=tvshows_df['duration'].str.extract('(\\d+)')\ntvshows_df['duration']=tvshows_df['duration'].astype(str).astype(int)\n\n# movie duration distribution\nplt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.countplot(x=tvshows_df['duration'], data=tvshows_df, palette=\"hls\");\nplt.title('countplot of TV shows seasons',fontweight=\"bold\")","a4ada95d":"from collections import Counter\nlisted_in = df['listed_in']\ngenre_count = pd.Series(dict(Counter(','.join(listed_in).split(',')))).sort_values(ascending=False)\ntop20genre = genre_count.head(20)\n\nplt.figure(figsize=(15,5))\nsns.barplot(x= top20genre.index, y=top20genre)\nplt.xticks(rotation=60)\nplt.title('Top 20 genre with most contents', fontsize=15, fontweight='bold')\nplt.xlabel('genre')\nplt.show()","a115425a":"plt.figure(figsize=(15,5))\nsns.barplot(x = tvshows_df[\"listed_in\"].value_counts().head(10).index,\n            y = tvshows_df[\"listed_in\"].value_counts().head(10).values, palette=\"YlGnBu\")\nplt.xticks(rotation=60)\nplt.title(\"Top10 Genre in TV shows\", fontsize=15, fontweight=\"bold\")\nplt.show()","8c7ed486":"plt.figure(figsize=(15,5))\nsns.barplot(x = movies_df[\"listed_in\"].value_counts().head(10).index,\n            y = movies_df[\"listed_in\"].value_counts().head(10).values, palette=\"YlGnBu\")\nplt.xticks(rotation=60)\nplt.title(\"Top10 Genre in Movies\", fontsize=15, fontweight=\"bold\")\nplt.show()","223b43e5":"director = df['director']\nfiltered_director = director[director != 'No Data']\ndirector_count = pd.Series(dict(Counter(','.join(filtered_director).split(',')))).sort_values(ascending=False)\ntop20director = director_count.head(20)\n\n\nplt.figure(figsize=(15,6))\nsns.barplot(x= top20director.index, y=top20director)\nplt.xticks(rotation=60)\nplt.title('Top 20 director with most contents', fontsize=15, fontweight='bold')\nplt.xlabel('director')\nplt.show()","135b4327":"actor = df['cast']\nfiltered_actor = actor[actor != 'No Data']\nactor_count = pd.Series(dict(Counter(','.join(filtered_actor).split(',')))).sort_values(ascending=False)\ntop20actor = actor_count.head(20)\n\n\nplt.figure(figsize=(15,5))\nsns.barplot(x= top20actor.index, y=top20actor)\nplt.xticks(rotation=60)\nplt.title('Top 20 actor with most contents', fontsize=15, fontweight='bold')\nplt.xlabel('actor')\nplt.show()","7a56e5b6":"More contents were added in the year 2019 while only 1 content was added in 2010.","094ef6db":"The different ratings means:\n\nTV-MA: This program is intended to be viewed by adults and therefore may be unsuitable for children under 17.\n\nTV-14: This program contains some material that many parents would find unsuitable for children under 14 years of age.\n\nTV-PG: Parental guidance is recommended; these programs may be unsuitable for younger children.\n\nR: Restricted, Children Under 17 Require Accompanying Parent or Adult Guardian. This rating means the film contains adult material such as adult activity, harsh language, intense graphic violence, drug abuse and nudity. \n\nPG-13: This rating is a stronger caution for parents that content included may not be appropriate for children under 13 (pre-teen ages).\n\nTV-Y: This program is aimed at a very young audience, including children from ages 2\u20136.\n\nTV-Y7: This program is designed for children age 7 and above.\n\nPG: Parents urged to give 'parental guidance.' May contain some material parents might not like for their young children.\n\nTV-G: Most parents would find this program suitable for all ages. Programs rated TV-G are generally suitable for all ages.      \n\nNR: Not rated, If a film has not been submitted for a rating or is an uncut version of a film that was submitted\n\nG: General Audiences - All Ages Admitted. It is a rating of the Motion Picture Association in which the organization believes is suitable for everyone\n\nTV-Y7-FV: TV shows for Children Seven Years of Age or Older that may contain Fantasy Violence    \n\nUR: Unrated, It means that the film hasn\u2019t been submitted to the MPAA for a rating. There\u2019s no law that says a film has to have a rating. \n\nNC-17: No One 17 and Under Admitted. These films are too adult for children. The rating doesn\u2019t mean that they are obscene or pornographic, but that the content is only appropriate for adult audiences.","cb37a030":"# More Movies or TV shows?","9c4a92df":"Most contents were produced on USA, followed by India, United Kingdom and canada.","4a1306bd":"Most movies on netflix have a duration of 80-120 minutes.","a834653c":"on Netflix there are more movies than Tv shows.","9ce4057c":"# Duration of contents \n\nTotal Duration is given in minutes or number of seasons. \n\nDuration of Movies is given in minutes. Duration of TV shows are given in seasons.","3d1bdfbd":"More contents were added in the month of December while less contents were added in February.","ffe8e9f5":"# Importing Libraries","dfb86d3b":"Most TV shows have only 1 season.","08dc9391":"# Top 20 Actors","1c9add72":"# Data Overview","b1f11d41":"# EDA- Exploratory Data Analysis","03cf2746":"# Handling missing data","dfffee44":"# Top 20 Genres","e4f73d1f":"There are 12 columns","829db8c6":"TV-MA has the highest count of contents while NC-17 has lowest.","0d737670":"'director', 'cast', and 'country' contains significant portion of null values. So we cant simply delete the rows. We can replace it with 'No Data'.\n\n'date_added' and 'rating' contains only small number of null values. So we can delete that rows.","133368ed":"# Countries with most content","55638711":"# Lets analyse content rating","69d0f0a2":"In 2020, January was the month were most contents were released and February was themonth were least contents were released.","49a7880d":"# Find out the month and year where highest and least amount of content is added?"}}