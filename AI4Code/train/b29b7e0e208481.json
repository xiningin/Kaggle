{"cell_type":{"07508a2d":"code","babee3ac":"code","5c1bcc5a":"code","b803751f":"code","cc2f0772":"code","fa366594":"code","af950feb":"code","f5c11c05":"code","a3003736":"code","4f6ccbda":"code","5517d73a":"code","1605195d":"code","3f115f88":"code","7a8a37e1":"code","126fa5af":"code","87599e36":"code","c9b0ad59":"markdown","e8803825":"markdown","2a3d838c":"markdown","dd9a9300":"markdown","d3009946":"markdown","92d2452e":"markdown","51cd6f89":"markdown","20ec96ae":"markdown","346451f8":"markdown","15175830":"markdown"},"source":{"07508a2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport math\n\nimport geopandas as gpd\nimport geoplot.crs as gcrs\nimport geoplot as gplt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","babee3ac":"# Adjust display settings\npd.set_option('display.max_rows', 500)","5c1bcc5a":"df = pd.read_csv('..\/input\/DV_lottery_dataset.csv', sep=';')\ndf.fillna(0, inplace = True)\n#print(df.info())","b803751f":"path = gpd.datasets.get_path('naturalearth_lowres')\ngdf = gpd.read_file(path)\ngdf = gdf[gdf.name!=\"Antarctica\"]\n# print(gdf.info())","cc2f0772":"# We will merge it on 'name' column\ndf['name'] = df['Foreign State']\n\n# Fixing discrepancy in the country names\ndf.loc[df['Foreign State']== 'French Southern and Antarctic Lands', ['name']] = 'Fr. S. Antarctic Lands'\ndf.loc[df['Foreign State']== 'Bosnia and Herzegovina', ['name']] = 'Bosnia and Herz.'\ndf.loc[df['Foreign State']== 'Cote d\\'Ivoire', ['name']] = 'C\u00f4te d\\'Ivoire'\ndf.loc[df['Foreign State']== 'Congo, Democratic Republic of The', ['name']] = 'Dem. Rep. Congo'\ndf.loc[df['Foreign State']== 'Congo, Republic of The', ['name']] = 'Congo'\ndf.loc[df['Foreign State']== 'Czech Republic', ['name']] = 'Czech Rep.'\ndf.loc[df['Foreign State']== 'Equatorial Guinea', ['name']] = 'Eq. Guinea'\ndf.loc[df['Foreign State']== 'North Korea', ['name']] = 'Dem. Rep. Korea'\ndf.loc[df['Foreign State']== 'Western Sahara', ['name']] = 'W. Sahara'\ndf.loc[df['Foreign State']== 'South Sudan', ['name']] = 'S. Sudan'\ndf.loc[df['Foreign State']== 'Solomon Islands', ['name']] = 'Solomon Is.'\ndf.loc[df['Foreign State']== 'Laos', ['name']] = 'Lao PDR'\ndf.loc[df['Foreign State']== 'Central African Republic', ['name']] = 'Central African Rep.'\ndf.loc[df['Foreign State']== 'Solomon Islands', ['name']] = 'Solomon Is.'\n","fa366594":"gdf = gdf.merge(df, on='name', how=\"left\")\n#print(gdf.info())","af950feb":"print(sorted([c for c in gdf.columns if c.endswith('visas')]))","f5c11c05":"from matplotlib.animation import FuncAnimation\nfrom IPython.display import HTML\n\nfor year in range(2008, 2017+1):\n    gdf[f'{year}_p'] = gdf[f'{year}_visas'] \/ gdf[f'{year}_Entrants'] * 100\n    gdf[f'{year}_p'].fillna(0, inplace=True)\n    gdf.loc[np.isinf(gdf[f'{year}_p']), f'{year}_p'] = 0\n\n    \n# fig, gax = plt.subplots(figsize=(20,10))\ngax = gplt.choropleth(gdf, hue=gdf[f'{year}_p'], projection=gcrs.Robinson(),\n                    cmap='Purples', linewidth=0.5, edgecolor='gray', \n                    vmin=0, vmax=3,\n                    k=None, legend=True, legend_kwargs={'label':'Winning Rate (%)'},\n                    figsize=(20,10))\n\ndef update(year, gax):\n    gplt.choropleth(gdf, hue=gdf[f'{year}_p'], projection=gcrs.Robinson(),\n                    cmap='Purples', linewidth=0.5, edgecolor='gray', \n                    vmin=0, vmax=3,\n                    k=None, #legend=True, legend_kwargs={'label':'Winning Rate (%)'},\n                    ax=gax)\n    gax.set_title(f\"Probability of winning in {year}\");\n\nanim = FuncAnimation(gax.get_figure(), update, frames=range(2008, 2017+1), interval=1000, fargs=[gax])","a3003736":"HTML(anim.to_jshtml())","4f6ccbda":"p_cols = [c for c in gdf.columns if c.endswith('_p')]\ngdf[p_cols].quantile(0.98).rename('98 percentile of probabilities')","5517d73a":"data = gdf[['name','Region'] + p_cols].rename(columns={k:int(k[:-2]) for k in p_cols})\ndata.head()","1605195d":"prob_data = data.melt(id_vars=['name','Region'], value_vars=list(range(2008,2017+1)), var_name='year', value_name='Winning Rate')\nprob_data.head()","3f115f88":"import seaborn as sns\nplt.figure(figsize=(20,10))\nsns.lineplot(data=prob_data, x=\"year\", y=\"Winning Rate\",\n            hue=\"Region\", #units='name', estimator=None,\n#             legend=\"full\"\n);\n","7a8a37e1":"prob_data.groupby('Region')['Winning Rate'].mean().sort_values()","126fa5af":"plt.figure(figsize=(20,10))\nsns.lineplot(data=prob_data, x=\"year\", y=\"Winning Rate\",\n            hue=\"Region\", units='name', estimator=None,\n);\nplt.ylim([0,10]);","87599e36":"Country1 = 'Germany'\nsns.lineplot(data=prob_data.query(f\"name == '{Country1}'\"), x='year', y='Winning Rate');\nCountry2 = 'France'\nsns.lineplot(data=prob_data.query(f\"name == '{Country2}'\"), x='year', y='Winning Rate');\nplt.legend([Country1, Country2]);","c9b0ad59":"### Read geospatial data (we will use it later for data visualization)","e8803825":"# Winning Probability Changes for Countries","2a3d838c":"**In General the probability of winning the Lottory Visa is higher in Oceania, then comes Europe, Africa, South America, Asia, and North America.**","dd9a9300":"## Probability of winning in US green card lottery\n### This is a fork of the [https:\/\/www.kaggle.com\/bezrukov\/probability-of-winning-in-us-green-card-lottery] kernel, focusing only on probabilities","d3009946":"Let's reformat the data for seaborn","92d2452e":"### Merge the geospatial data and lottery data","51cd6f89":"# Winning Probability Changes Over Time","20ec96ae":"# Winning Probability Changes for Regions","346451f8":"## Probability of winning\n### The probability for each country will be the number of winners divided by the number of \"Entrants\"","15175830":"## Data preparation\n### Read the lottery data"}}