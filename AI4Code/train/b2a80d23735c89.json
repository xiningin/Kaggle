{"cell_type":{"5f4800d4":"code","4a9b3047":"code","4501220f":"code","1c54eb0a":"code","1b9f7b05":"code","56f38269":"code","3fd8dad0":"code","a622c9c5":"code","9f4b7157":"code","5a729493":"code","52fd3494":"code","07fbfd65":"code","82dcf270":"code","f638c246":"code","5dc126c9":"code","7c844ef4":"code","6929bc0b":"code","6d46c05d":"code","7696a240":"code","bdf38724":"code","29c3cc4b":"code","082b8949":"code","00ecae03":"code","a5943cb1":"code","bac01e11":"code","57954ba1":"code","7c048195":"code","e9a98ccc":"code","0ed65cdf":"code","bf8f3020":"code","58b182f1":"code","e3659c82":"code","d3064cac":"code","fe51643f":"code","d8ea304e":"code","62acb267":"markdown","6c1a3008":"markdown","3199ee5f":"markdown","8da5d226":"markdown","0a061f16":"markdown","e65e2a80":"markdown","f2b5d5d4":"markdown","aac67a38":"markdown","65444985":"markdown","77a62bf2":"markdown","6e87156f":"markdown","51938e1f":"markdown","e8a987a8":"markdown","a51fc1ff":"markdown","3fcaa0f5":"markdown","0beac6a9":"markdown","ce28bbd9":"markdown","c46ca46a":"markdown","737e92f8":"markdown","46a3d460":"markdown","ada92e3a":"markdown","eb3716bf":"markdown","9b36a2ab":"markdown","ca270a72":"markdown","f05f18bc":"markdown","b3388c40":"markdown"},"source":{"5f4800d4":"import numpy as np \nimport pandas as pd \nimport sklearn\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\n\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.datasets import load_digits\nfrom sklearn import metrics\n%matplotlib inline\n\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n","4a9b3047":"cancer = load_breast_cancer()\ndigits = load_digits()\n\ndata = cancer","4501220f":"data","1c54eb0a":"df = pd.DataFrame(data= np.c_[data['data'], data['target']],\n                     columns= list(data['feature_names']) + ['target'])\ndf['target'] = df['target'].astype('uint16')","1b9f7b05":"df","56f38269":"df.head()","3fd8dad0":"import pandas_profiling as pp\nprofile = pp.ProfileReport(df) \nprofile.to_file(\"EDA.html\")","a622c9c5":"\n# create x and y train\nX = df.drop('target', axis=1)\ny = df[['target']]\n\n# split data into train and test\/validation sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","9f4b7157":"# check the average cancer occurence rates in train and test data, should be comparable\ny_train.mean(),y_test.mean()","5a729493":"X_train.info()","52fd3494":"from catboost import CatBoostClassifier\nmodel=CatBoostClassifier()\ncategorical_features_indices = np.where(X_train.dtypes != np.float)[0]\ncategorical_features_indices","07fbfd65":"model.fit(X_train,y_train,cat_features=([]))\n\n# test error\ny_pred = model.predict(X_test)\n","82dcf270":"score = metrics.accuracy_score(y_test, y_pred)\nscore","f638c246":"import sklearn.metrics\n\nsklearn.metrics.accuracy_score(y_test,model.predict(X_test))","5dc126c9":"fpr, tpr, thresholds = sklearn.metrics.roc_curve(y_test,model.predict(X_test))\nsklearn.metrics.auc(fpr, tpr)","7c844ef4":"sklearn.metrics.average_precision_score(y_test,model.predict(X_test))","6929bc0b":"sklearn.metrics.balanced_accuracy_score(y_test,model.predict(X_test))","6d46c05d":"sklearn.metrics.brier_score_loss(y_test,model.predict(X_test))","7696a240":"print(sklearn.metrics.classification_report(y_test,model.predict(X_test)))\n","bdf38724":"sklearn.metrics.cohen_kappa_score(y_test,model.predict(X_test))","29c3cc4b":"print(sklearn.metrics.confusion_matrix(y_test,model.predict(X_test)))","082b8949":"sklearn.metrics.f1_score(y_test,model.predict(X_test))","00ecae03":"sklearn.metrics.fbeta_score(y_test,model.predict(X_test),beta=.5)","a5943cb1":"sklearn.metrics.hamming_loss(y_test,model.predict(X_test))","bac01e11":"sklearn.metrics.hinge_loss(y_test,model.predict(X_test))","57954ba1":"sklearn.metrics.jaccard_score(y_test,model.predict(X_test))","7c048195":"sklearn.metrics.log_loss(y_test,model.predict(X_test))","e9a98ccc":"sklearn.metrics.matthews_corrcoef(y_test,model.predict(X_test))","0ed65cdf":"sklearn.metrics.precision_recall_curve(y_test,model.predict(X_test))","bf8f3020":"sklearn.metrics.precision_recall_fscore_support(y_test,model.predict(X_test))","58b182f1":"sklearn.metrics.precision_score(y_test,model.predict(X_test))","e3659c82":"sklearn.metrics.recall_score(y_test,model.predict(X_test))","d3064cac":"sklearn.metrics.roc_auc_score(y_test,model.predict(X_test))","fe51643f":"sklearn.metrics.roc_curve(y_test,model.predict(X_test))","d8ea304e":"sklearn.metrics.zero_one_loss(y_test,model.predict(X_test))","62acb267":"# Matthews correlation coefficient (MCC)","6c1a3008":"# Precision-Recall pairs for different probability thresholds","3199ee5f":"# Accuracy classification score.","8da5d226":"# Cohen\u2019s kappa","0a061f16":"# **Evaluation Matrix**","e65e2a80":"# Receiver operating Characteristic (ROC)","f2b5d5d4":"# Confusion matrix","aac67a38":"# Jaccard similarity coefficient score","65444985":"# Balanced accuracy","77a62bf2":"# Recall","6e87156f":"# Zero-one classification loss","51938e1f":"# Area Under the Curve (AUC) using the trapezoidal rule","e8a987a8":"# Average hinge loss","a51fc1ff":"We will use the breast cancer dataset in which the target variable has 1 if the person has cancer and 0 otherwise. Let's load the data.","3fcaa0f5":"# Precision, Recall, F-measure and Support","0beac6a9":"# **This Notebook contains all evaluation matrixes available in Scikit-learn python library for a Binary Classification & algorithm as CatBoostClassifier**","ce28bbd9":"# Brier score","c46ca46a":"# Hamming loss","737e92f8":"# F1 score \/ Balanced F-score or F-measure","46a3d460":"# Precision","ada92e3a":"# Average precision (AP) from prediction scores","eb3716bf":"# Classification Report","9b36a2ab":"# Log loss \/ logistic Loss \/ Cross-Entropy Loss.","ca270a72":"#  Area Under the Receiver Operating Characteristic Curve (ROC AUC) ","f05f18bc":"# F-beta score","b3388c40":"# Score"}}