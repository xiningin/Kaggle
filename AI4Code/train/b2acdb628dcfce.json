{"cell_type":{"b9d7010b":"code","dc62b32a":"code","da90ad49":"code","36b2b6ca":"code","882c004d":"code","8a2d525b":"code","3e602f83":"code","c98e8dbb":"code","e226c841":"code","912210e4":"code","882d62e0":"code","f960be9d":"code","54e4019a":"code","9a9353d5":"code","15c31f8b":"code","d3a16f8c":"code","cc0c0c9a":"code","ae373aac":"code","71886de0":"code","bbd53ee7":"code","8b7b02aa":"code","1a326d0b":"code","db2efd20":"code","e3542ed8":"markdown","96013ead":"markdown","12bf0353":"markdown","7a1c8ead":"markdown"},"source":{"b9d7010b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc62b32a":"# import libraries\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","da90ad49":"train_data = pd.read_csv('..\/input\/nicht-mnist\/train.csv',header=None, index_col =0)\ntest_data = pd.read_csv('..\/input\/nicht-mnist\/test.csv',header=None , index_col = 0)","36b2b6ca":"train_data.head()","882c004d":"y = train_data.pop(1)\nx = train_data","8a2d525b":"x = x \/ 255.0\ntest_data = test_data \/ 255.0","3e602f83":"x = x.values.reshape(-1,28,28,1)\ntest_data = test_data.values.reshape(-1,28,28,1)","c98e8dbb":"y = y.values","e226c841":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder=LabelEncoder()\ny = pd.DataFrame(label_encoder.fit_transform(y))","912210e4":"from sklearn.model_selection import train_test_split\nx_train, x_val, y_train, y_val = train_test_split(x, y, test_size = 0.1, random_state=1)","882d62e0":"from keras.layers import Dense, Dropout","f960be9d":"cnn = keras.models.Sequential()\ncnn.add(keras.layers.Conv2D(filters=32, kernel_size=3, padding='same', activation='relu', input_shape=(28,28,1))) \ncnn.add(keras.layers.MaxPool2D(pool_size = 2, strides=2))\ncnn.add(keras.layers.Flatten())\ncnn.add(keras.layers.Dense(128, activation='relu'))\ncnn.add(keras.layers.Dense(10,activation='softmax'))","54e4019a":"cnn.compile(  optimizer= 'Adam', loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n              metrics=['accuracy'])","9a9353d5":"history = cnn.fit(x_train, y_train,epochs=20)","15c31f8b":"test_loss, test_acc = cnn.evaluate(x_val,  y_val, verbose=2)\nprint('\\nTest accuracy:', test_acc)","d3a16f8c":"probability_model = tf.keras.Sequential([cnn, \n                                         tf.keras.layers.Softmax()])","cc0c0c9a":"predictions = probability_model.predict(test_data)","ae373aac":"results = np.argmax(predictions,axis = 1)","71886de0":"results = pd.Series(results,name=\"target\")","bbd53ee7":"submission = pd.concat([pd.Series(range(0,9364),name = \"Id\"),results],axis = 1)","8b7b02aa":"submission['target'] = label_encoder.inverse_transform(submission['target'])","1a326d0b":"submission.head()","db2efd20":"submission.to_csv('sub_ensemble_10_cnn.csv', index=False)","e3542ed8":"# Part 1: Data preparation","96013ead":"# Part 3: Training the CNN","12bf0353":"# Part 2: Buiding a model","7a1c8ead":"# Part 4: Making prediction"}}