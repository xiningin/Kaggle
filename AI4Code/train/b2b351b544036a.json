{"cell_type":{"348a706a":"code","c429f7fe":"code","cf185d99":"code","2f9c8a8c":"code","ce6cad70":"code","90668ce4":"code","e60fc57a":"code","0c220728":"code","a18ebc52":"code","a5c70e6e":"markdown","91a558c6":"markdown","c1c708d8":"markdown","e2f4abba":"markdown","67ce6b9d":"markdown","5227bcc8":"markdown","d9e9985b":"markdown"},"source":{"348a706a":"!pip install -qq ..\/input\/efficientnetrepo110\/efficientnet-1.1.0-py3-none-any.whl","c429f7fe":"import os\nimport cv2\nimport skimage.io\nimport numpy as np\nimport pandas as pd\nimport math\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\nfrom matplotlib import pyplot as plt\nimport efficientnet.tfkeras as efn\n\nprint(tf.__version__)\nprint(tf.keras.__version__)","cf185d99":"img_size = 512\nnb_classes = 6","2f9c8a8c":"def get_model():\n    base_model =  efn.EfficientNetB7(weights = None, include_top=False, pooling='avg', input_shape=(img_size, img_size, 3))\n    x = base_model.output\n    predictions = Dense(nb_classes, activation=\"softmax\")(x)\n    return Model(inputs=base_model.input, outputs=predictions)\n\nmodel = get_model()\nmodel.load_weights('..\/input\/model-efn-tpu-2\/model.h5')","ce6cad70":"def get_image(img_name, data_dir='..\/input\/prostate-cancer-grade-assessment\/test_images'):\n    img_path = os.path.join(data_dir, f'{img_name}.tiff')\n    img = skimage.io.MultiImage(img_path)\n    img = cv2.resize(img[-1], (img_size,img_size))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img = img\/255.0\n    return img","90668ce4":"def TTA(img):\n    img1 = img\n    img2 = cv2.rotate(img, cv2.ROTATE_90_CLOCKWISE)\n    img3 = cv2.rotate(img, cv2.ROTATE_90_COUNTERCLOCKWISE)\n    img4 = cv2.rotate(img, cv2.ROTATE_180)\n    images = [img1, img2, img3, img4]\n    \n    return model.predict(np.array(images), batch_size=4)","e60fc57a":"def post_process(preds):\n    avg = np.sum(preds,axis = 0)\n    label = np.argmax(avg)\n    return label","0c220728":"from tqdm import tqdm","a18ebc52":"data_dir = '..\/input\/prostate-cancer-grade-assessment\/test_images'\nsample_submission = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/sample_submission.csv')\n# data_dir = '..\/input\/prostate-cancer-grade-assessment\/train_images'\n# sample_submission = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/train.csv').head(1000)\n\ntest_images = sample_submission.image_id.values\nlabels = []\n\ntry:    \n    for image in tqdm(test_images):\n        img = get_image(image, data_dir)\n        preds = TTA(img)\n        label = post_process(preds)\n        labels.append(label)\n    sample_submission['isup_grade'] = labels\nexcept:\n    print('Test dir not found')\n    \nsample_submission['isup_grade'] = sample_submission['isup_grade'].astype(int)\nsample_submission.to_csv('submission.csv', index=False)\nsample_submission.head()","a5c70e6e":"Click [here](https:\/\/www.kaggle.com\/prateekagnihotri\/image-augmentation-on-tpu) for Training kernel.","91a558c6":"Thanks for reading. Please upvote if you like it.\n\nFor QWK metric, TTA, image augmentations, Transfer learning.. visit my kernels [1](https:\/\/www.kaggle.com\/prateekagnihotri\/efficientnet-keras-train-qwk-loss-augmentation), [2](https:\/\/www.kaggle.com\/prateekagnihotri\/efficientnet-keras-infernce-tta), and [3](https:\/\/www.kaggle.com\/prateekagnihotri\/transfer-learning-starter-kernel).","c1c708d8":"# TTA\n\nFunction to generate different images from given image and do predictions on them","e2f4abba":"# Post-process TTA predictions","67ce6b9d":"# Predicting on test images","5227bcc8":"# Load Model","d9e9985b":"# Get image from image name"}}