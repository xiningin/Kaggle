{"cell_type":{"49fbe3f7":"code","a79cc99d":"code","3913547f":"code","43b94c4e":"code","c25837ff":"code","4bf7cebe":"code","f9e560d2":"code","3b3296fb":"code","903c092d":"code","53a17d0d":"code","31720ce0":"code","9f7b6762":"code","af436c5e":"code","7528cc29":"code","0b361942":"code","f8ec2e74":"code","c9493e04":"code","9e918dbd":"code","2fe7a3f0":"code","16c6757e":"code","00c0d628":"code","f00ca006":"code","55cef372":"code","67a60b00":"code","6e2d6439":"markdown","1b624b03":"markdown","8394f907":"markdown","071eada9":"markdown","b91b6f2f":"markdown","65320cce":"markdown","bab4c891":"markdown","cc816198":"markdown","28b30885":"markdown","61584d09":"markdown","859928f3":"markdown","971bc91b":"markdown","cf50f29a":"markdown","fce6a60c":"markdown","6e40d2c2":"markdown","6f6b2c66":"markdown","b3746739":"markdown"},"source":{"49fbe3f7":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom wordcloud import WordCloud, STOPWORDS\n\n%matplotlib inline","a79cc99d":"df = pd.read_csv('..\/input\/windows-store\/msft.csv')","3913547f":"df.info()","43b94c4e":"df.head()","c25837ff":"def findNull(dataFrame):\n    for col in dataFrame.columns:\n        null_sum = df[col].isna().sum()\n        print(f'\"{col}\": {null_sum} null values')","4bf7cebe":"findNull(df)","f9e560d2":"mask=df.isna().any(axis=1)==True\ndf[mask]","3b3296fb":"df = df.drop(index=5321)","903c092d":"findNull(df)","53a17d0d":"# check the Price data\ndf['Price'].unique()","31720ce0":"# delete ','\ndf['Price'] = df['Price'].str.replace(',','')\n\n# replace'Free' with 0\ndf.loc[df['Price']=='Free','Price']=0\n\n# delete '\u20b9 ' \ndf.loc[df['Price']!=0,'Price']=df['Price'].str[2:]\n\n# convert string to float\ndf['Price'] = df['Price'].astype(float)\n\n#result\ndf['Price'].unique()","9f7b6762":"df['year'] = df['Date'].str[6:10]\ndf['month'] = df['Date'].str[3:5]\ndf['year_month'] = df['Date'].str[6:10]+'-'+df['Date'].str[3:5]","af436c5e":"df['Price'].unique()","7528cc29":"Ccount = df['Category']\nCcount = Ccount.reset_index()\nCcount = Ccount.groupby(['Category']).count()\nCcount = Ccount.sort_values('index',ascending=False)\n\n\ncolor = (\"#55efc4\",\"#81ecec\",\"#74b9ff\",\"#a29bfe\",\"#dfe6e9\",\n         \"#ffeaa7\",\"#e17055\",\"#d63031\",\"#e84393\",\"#2d3436\",\n         \"#00b894\",\"#0984e3\",\"#ffeaa7\",\"#fab1a0\",\"#fd79a8\")\n\nlabel = Ccount.index\n\nplt.figure(figsize=(15,10))\nplt.title(\"App category ratio\",fontsize=20)\n\nplt.pie(Ccount, labels=label,colors=color,counterclock=False, startangle=90,autopct=\"%1.1f%%\", pctdistance=0.7)\nplt.show()","0b361942":"tmp1 = df[['Price']]\ntmp1 = tmp1.reset_index()\ntmp1 = tmp1.groupby(['Price']).count()\ntmp1 = tmp1.reset_index()\ntmp1 = tmp1.rename(columns={'index': 'count'})\n# Pcount\n\ntmp2 = tmp1[tmp1[\"Price\"]!=0]\ntmp2 = tmp2.reset_index()\ntmp2 = tmp2.groupby(['Price']).count()\ntmp2 = tmp2.reset_index()\nsum_not_free = tmp2['count'].sum()\n\ntmp1 = tmp1[:1]\nPcount = tmp1.append({'Price': 'Not Free Apps', 'count':sum_not_free }, ignore_index=True)\nPcount.loc[Pcount['Price']==0, 'Price'] = \"Free Apps\"\n\nlabel = Pcount['Price']\ncolor = (\"#4bcffa\",\"#ff5e57\")\n\nplt.figure(figsize=(15,10))\nplt.title(\"Free apps ratio\",fontsize=20)\n\nplt.pie(Pcount['count'],labels=label,colors=color,counterclock=False, startangle=90,autopct=\"%1.1f%%\", pctdistance=0.7)\nplt.show()","f8ec2e74":"plt.subplots(figsize=(12,6))\nplt.hist(df['Rating'],color=\"#ff6b6b\")\n\nplt.title(\"Rating distribution\",fontsize=20)\nplt.xlabel(\"Rating\", fontsize=15)\nplt.ylabel(\"Count\", fontsize=15)\nplt.show()","c9493e04":"fig = px.scatter(df, x='Price', y='Rating')\nfig.update_layout(title_text=\"Relationship between Rating and Price\")\nfig.show()","9e918dbd":"fig = px.scatter(df, x='year_month', y='Rating',color='No of people Rated')\nfig.update_layout(title_text=\"Relationship among year_month, Rating and No of people Rated\")\nfig.show()","2fe7a3f0":"Ycount = df[['year']]\nYcount = Ycount.reset_index()\nYcount = Ycount.groupby(['year']).count()\nYcount = Ycount.reset_index()\nYcount = Ycount.rename(columns={'index': 'count'})\n\nplt.subplots(figsize=(10,5))\nplt.title('Release Year distribution',fontsize=20)\nplt.xlabel('Year',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.bar(Ycount['year'], Ycount['count'],color=\"#808e9b\")\nplt.show()","16c6757e":"sample1 = df[['year','Rating']]\nsample1 = sample1.groupby(['year'])['Rating'].mean()\nsample1 = sample1.reset_index()\n\nplt.subplots(figsize=(10,5))\nplt.title('Avg. rating by release year',fontsize=20)\nplt.xlabel('Year',fontsize=15)\nplt.ylabel('Avg. rating',fontsize=15)\nplt.plot(sample1['year'],sample1['Rating'],color=\"#3c40c6\")\nplt.show()","00c0d628":"sample2 = df[['month','Rating']]\nsample2 = sample2.groupby(['month'])['Rating'].mean()\nsample2 = sample2.reset_index()\n\nplt.subplots(figsize=(10,5))\nplt.title('Avg. rating by release month',fontsize=20)\nplt.xlabel('Month',fontsize=15)\nplt.ylabel('Avg. rating',fontsize=15)\n\nplt.plot(sample2['month'],sample2['Rating'],color=\"#05c46b\")\nplt.title\nplt.show()","f00ca006":"sample3 = df[['year_month','Rating']]\nsample3 = sample3.groupby(['year_month'])['Rating'].mean()\nsample3 = sample3.reset_index()\n\nplt.subplots(figsize=(20,10))\nplt.title('Avg. rating by release year_month',fontsize=20)\nplt.xlabel('Year_Month',fontsize=15)\nplt.ylabel('Avg. rating',fontsize=15)\n\nplt.plot(sample3['year_month'],sample3['Rating'],color=\"#ffa801\")\nplt.xticks(rotation=90)\n\nplt.tight_layout()\nplt.show()","55cef372":"plt.subplots(figsize=(10,5))\nplt.title('Number of Apps by category',fontsize=20)\nplt.xlabel('Category',fontsize=15)\nplt.ylabel('count',fontsize=15)\ndf['Category'].value_counts().plot(kind=\"bar\",color=\"#ff6d69\")","67a60b00":"stopwords = set(STOPWORDS)\nwordcloud = WordCloud(\n                          background_color='#c8d6e5',\n                          stopwords=stopwords,\n                          max_words=200,\n                          max_font_size=50, \n                          random_state=42\n                         ).generate(str(df['Name']))\n\nplt.subplots(figsize=(12,6))\nplt.axis('off')\nplt.imshow(wordcloud)","6e2d6439":"# Data visualization\n\n* Apps category ratio\n* Price distribution****\n* Rating distribution\n* Relationship between Rating and Price\n* Relationship among year_month, Rating and No of people Rated\n* Year distribution\n* Average Rating by year\n* Average Rating by Month\n* Average Rating by Year","1b624b03":"## Information about Dataset","8394f907":"# Preprocessing","071eada9":"### Average Rating by Release Year","b91b6f2f":"### Average rating by release month\n\n* Highest average rating was recorded in September\n* Lowest average rating was recorded in May","65320cce":"## WordCloud","bab4c891":"## Price data preprocessing\n\n* delete ','\n* replace'Free' with 0\n* delete '\u20b9 ' \n* convert String to float","cc816198":"## Date data preprocessing","28b30885":"### Average Rating by release year\n\n* Highest average rating was recorded in 2019\n* On the other hand, Lowest average rating was recorded in 2020 (Jan 2020 ~ Jul 2020 )","61584d09":"## Number of Apps by Category","859928f3":"### Released Year distribution","971bc91b":"## Null values in dataset","cf50f29a":"### Price distribution\n* More than 99% of apps are free","fce6a60c":"### Relationship among release year_month, Rating and No of people Rated","6e40d2c2":"### Apps category ratio\n* \"Music\" is the the most common category\n* Top4 categories (\"Music\", \"Books\", \"Business\" and \"Health and Fitness\") accounts for a half of the total Apps","6f6b2c66":"### Relationship between Rating and Price","b3746739":"### Rating distribution"}}