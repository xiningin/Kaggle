{"cell_type":{"d9deb8ff":"code","9a3ceff9":"code","e8f1376f":"code","b04b61eb":"code","30f2f8fa":"code","f72c5bda":"code","df1cb19a":"code","145e047f":"code","c14d4f88":"code","1efd408b":"code","f9d8a09e":"code","2a1797a1":"code","dcd519e9":"code","736aa2b3":"code","b0add9fe":"code","88955d63":"code","9bbac5c2":"code","00cd798a":"code","2d6b1d65":"code","cf360a4c":"code","2d2c66c9":"code","4b67561c":"code","05c25993":"code","0ba316d7":"code","69196ff0":"code","7a311335":"code","e1e5e2d3":"code","968e9275":"code","1d18bd0a":"code","57cbfcc0":"code","e3b6b051":"code","d3017c1d":"code","13a7bbb9":"code","dd7a9691":"markdown","63e12089":"markdown","1511d2c1":"markdown","c0dc87d1":"markdown","b5cad0ee":"markdown","393fa33d":"markdown","e89441f9":"markdown","1d029c04":"markdown","0b2bb298":"markdown","0b33ec2f":"markdown","4bdb7415":"markdown","d3416416":"markdown","e6715fbb":"markdown","164e8ec6":"markdown","fc2124e1":"markdown","ec330080":"markdown"},"source":{"d9deb8ff":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport nltk\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.stem import PorterStemmer\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Bidirectional","9a3ceff9":"true_data = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/True.csv')\nfake_data = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/Fake.csv')","e8f1376f":"print(true_data.shape)","b04b61eb":"print(fake_data.shape)","30f2f8fa":"fake_data['label'] = 1\ntrue_data['label'] = 0","f72c5bda":"plt.figure(figsize = (8, 8))\nsns.countplot(y = \"subject\", data = data)","df1cb19a":"!pip install WordCloud","145e047f":"from wordcloud import WordCloud, STOPWORDS","c14d4f88":"nltk.download(\"stopwords\")","1efd408b":"data = pd.concat([true_data,fake_data],axis=0,ignore_index=True)","f9d8a09e":"data.shape","2a1797a1":"data.isnull().sum()","dcd519e9":"x = data.drop('label',axis = 1)\ny = data['label']","736aa2b3":"ps = PorterStemmer()\ncorpus = []\nfor i in range(len(x['title'])):\n    review = re.sub('[^a-zA-Z]', ' ', x['title'][i])\n    review = review.lower()\n    review = review.split()\n    review = [ps.stem(word) for word in review if not word in set(stopwords.words('english'))]\n    review = ' '.join(review)\n    corpus.append(review)","b0add9fe":"voc_size = 10000\nonehot_repr = [one_hot(word,voc_size) for word in corpus]\nonehot_repr","88955d63":"sentlen = 20\nembedding_doc = pad_sequences(onehot_repr,padding = 'pre',maxlen=sentlen)\nembedding_doc","9bbac5c2":"embedding_feature = 60\nmodel = Sequential()\nmodel.add(Embedding(voc_size,embedding_feature,input_length=sentlen))\nmodel.add(LSTM(64,return_sequences=True))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.5))\nmodel.add(LSTM(32))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.5))\nmodel.add(Dense(1,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","00cd798a":"x_final = np.array(embedding_doc)\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x_final,y,test_size=0.3,random_state=1)","2d6b1d65":"early_stopping = tf.keras.callbacks.EarlyStopping(patience=5,min_delta=0.001,restore_best_weights=True)","cf360a4c":"history = model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=10,\n                    batch_size=128,\n                    callbacks=[early_stopping])","2d2c66c9":"history_df = pd.DataFrame(history.history)\nhistory_df.loc[:, ['loss', 'val_loss']].plot(title = 'validation curve')","4b67561c":"result = model.evaluate(x_test, y_test)\n\nloss = result[0]\naccuracy = result[1]\nprint(f\"[+] Accuracy: {accuracy*100:.2f}%\")","05c25993":"pred = model.predict(x_test)","0ba316d7":"prediction = []\nfor i in range(len(pred)):\n    if pred[i].item() > 0.5:\n        prediction.append(1)\n    else:\n        prediction.append(0)","69196ff0":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(list(y_test), prediction)\ncm","7a311335":"embedding_feature = 60\nmodel = Sequential()\nmodel.add(Embedding(voc_size,embedding_feature,input_length=sentlen))\nmodel.add(Bidirectional(LSTM(64 ,return_sequences=True)))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.5))\nmodel.add(Bidirectional(LSTM(32)))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.5))\nmodel.add(Dense(1,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","e1e5e2d3":"early_stopping = tf.keras.callbacks.EarlyStopping(patience=5,min_delta=0.001,restore_best_weights=True)","968e9275":"history = model.fit(x_train,y_train,validation_data=(x_test,y_test),\n                    epochs=10,batch_size=128,\n                    callbacks=[early_stopping])","1d18bd0a":"history_df = pd.DataFrame(history.history)\nhistory_df.loc[:, ['loss', 'val_loss']].plot(title = 'validation curve')","57cbfcc0":"result = model.evaluate(x_test, y_test)\n\nloss = result[0]\naccuracy = result[1]\nprint(f\"[+] Accuracy: {accuracy*100:.2f}%\")","e3b6b051":"pred = model.predict(x_test)","d3017c1d":"prediction = []\nfor i in range(len(pred)):\n    if pred[i].item() > 0.5:\n        prediction.append(1)\n    else:\n        prediction.append(0)","13a7bbb9":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(list(y_test), prediction)\ncm","dd7a9691":"# LSTM Model","63e12089":"**Dataset Link - https:\/\/www.kaggle.com\/clmentbisaillon\/fake-and-real-news-dataset**","1511d2c1":"**The dataset has 44898 observations and 5 features**","c0dc87d1":"**VALIDATION CURVE FOR BIDIRECTIONAL LSTM MODEL BETWEEN NUMBER OF EPOCHS ON X-AXIS AND ACCURACY ON Y-AXIS**","b5cad0ee":"# Can you use this data set to make an algorithm able to determine if an article is fake news or not?","393fa33d":"# **12450 records are correctly classfied out of 13470. (obtained from confusion matrix of Birectional LSTM model.**","e89441f9":"**FITTING THE MODEL**","1d029c04":"**Cleaning the review feature with different transformations and stemming using Porter Stemmer**","0b2bb298":"# We have applied two models for this dataset LSTM and Birectional LSTM, and Birectional LSTM is giving us a better accuracy of 92.43% as compared to LSTM model which was giving us an accuracy of 89.84%.","0b33ec2f":"***PROBLEM STATEMENT***","4bdb7415":"**SPLITTING THE DATASET INTO 70% TRAIN SET AND 30% VALIDATION SET**","d3416416":"> # **Predicted class distribution(True Positive and True Negative)**","e6715fbb":"**EARLY STOPPING AFTER REACHING THE OPTIMUM EPOCH WHILE FITTING WHERE BOTH THE TRAINING SET AND VALIDATION SET GENERALIZES TOGETHER AND RESTORING THE WEIGHTS FROM THAT EPOCH.**","164e8ec6":"**Padding the document using pre and applying one hot encoding to the dataset**","fc2124e1":"# **Birectional LSTM Model**","ec330080":"**VALIDATION CURVE FOR LSTM MODEL BETWEEN NUMBER OF EPOCHS ON X-AXIS AND ACCURACY ON Y-AXIS**"}}