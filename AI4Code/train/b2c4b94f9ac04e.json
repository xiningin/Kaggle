{"cell_type":{"b28a4768":"code","007eceab":"code","387e0e0a":"code","57a7a93d":"code","6ccd33ec":"code","5e53e6f2":"code","bc90c258":"code","58613c65":"code","1620ccfb":"code","04dcaa4e":"code","929b8e23":"code","1d3ad2a4":"code","6c94e1f5":"code","e577dd1a":"code","789c221f":"code","283e865d":"code","8d88545e":"code","9ab0d613":"code","07488838":"markdown","183a0d8c":"markdown","ea4c8b62":"markdown","6addfb02":"markdown","92b35ce5":"markdown","cc366d2d":"markdown","04fd3df2":"markdown","30139d87":"markdown"},"source":{"b28a4768":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.svm import SVC,LinearSVC\nfrom sklearn import metrics\n\npd.set_option('display.max_columns', None)","007eceab":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndata.info()\ndata.head()","387e0e0a":"data.keys()","57a7a93d":"data.drop('id',axis = 1,inplace=True)","6ccd33ec":"data['diagnosis'] = data['diagnosis'].map({'M':1,'B':0})","5e53e6f2":"features_mean,features_se,features_worst =[],[],[]\nfor feat in data.columns:\n    if \"mean\" in feat:\n        features_mean.append(feat)\n    elif \"se\" in feat:\n        features_se.append(feat)\n    elif \"worst\" in feat:\n        features_worst.append(feat)","bc90c258":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.countplot(data['diagnosis'],label = 'Count')","58613c65":"mean_corr = data[features_mean].corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(mean_corr,annot=True)\nplt.show()","1620ccfb":"se_corr = data[features_se].corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(se_corr,annot=True)\nplt.show()","04dcaa4e":"worst_corr = data[features_worst].corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(worst_corr,annot=True)\nplt.show()","929b8e23":"features_remain = ['radius_mean','texture_mean', 'smoothness_mean','compactness_mean','symmetry_mean', 'fractal_dimension_mean'] ","1d3ad2a4":"from sklearn.model_selection import train_test_split\ntrain,test = train_test_split(data,test_size = 0.3)  #\u62bd\u53d630%\u7684\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u5176\u4f59\u4f5c\u4e3a\u8bad\u7ec3\u96c6\ntrain_X = train[features_remain]   #\u62bd\u53d6\u7279\u5f81\u9009\u62e9\u7684\u6570\u503c\u4f5c\u4e3a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\ntrain_y = train['diagnosis']\ntest_X = test[features_remain]\ntest_y = test['diagnosis']","6c94e1f5":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()               #\u91c7\u7528Z-Score\u6807\u51c6\u5316\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u7279\u5f81\u7ef4\u5ea6\u7684\u6570\u636e\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\ntrain_X = ss.fit_transform(train_X)\ntest_X = ss.transform(test_X)","e577dd1a":"from sklearn import svm\nfrom sklearn import metrics\nmodel1 = svm.SVC(kernel='linear')    #\u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel1.fit(train_X,train_y)          #\u7528\u8bad\u7ec3\u96c6\u505a\u8bad\u7ec3\nprediction = model1.predict(test_X)  #\u7528\u6d4b\u8bd5\u96c6\u505a\u9884\u6d4b\nprint('Accurancy:',metrics.accuracy_score(prediction,test_y))\nprint(metrics.classification_report(model1.predict(test_X),test_y))","789c221f":"from sklearn import svm\nfrom sklearn import metrics\nmodel2 = svm.SVC(kernel='sigmoid')   #\u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel2.fit(train_X,train_y)          #\u7528\u8bad\u7ec3\u96c6\u505a\u8bad\u7ec3\nprediction = model2.predict(test_X)  #\u7528\u6d4b\u8bd5\u96c6\u505a\u9884\u6d4b\nprint('Accurancy:',metrics.accuracy_score(prediction,test_y))\nprint(metrics.classification_report(model2.predict(test_X),test_y))","283e865d":"from sklearn import svm\nfrom sklearn import metrics\nmodel3 = svm.SVC(kernel='rbf',C=1)       #\u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel3.fit(train_X,train_y)          #\u7528\u8bad\u7ec3\u96c6\u505a\u8bad\u7ec3\nprediction = model3.predict(test_X)  #\u7528\u6d4b\u8bd5\u96c6\u505a\u9884\u6d4b\nprint('Accurancy:',metrics.accuracy_score(prediction,test_y))\nprint(metrics.classification_report(model3.predict(test_X),test_y))","8d88545e":"from sklearn import svm\nfrom sklearn import metrics\nmodel3 = svm.SVC(kernel='rbf',C=0.1)       #\u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel3.fit(train_X,train_y)          #\u7528\u8bad\u7ec3\u96c6\u505a\u8bad\u7ec3\nprediction = model3.predict(test_X)  #\u7528\u6d4b\u8bd5\u96c6\u505a\u9884\u6d4b\nprint('Accurancy:',metrics.accuracy_score(prediction,test_y))\nprint(metrics.classification_report(model3.predict(test_X),test_y))","9ab0d613":"from sklearn import svm\nfrom sklearn import metrics\nmodel3 = svm.SVC(kernel='rbf',C=10)       #\u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel3.fit(train_X,train_y)          #\u7528\u8bad\u7ec3\u96c6\u505a\u8bad\u7ec3\nprediction = model3.predict(test_X)  #\u7528\u6d4b\u8bd5\u96c6\u505a\u9884\u6d4b\nprint('Accurancy:',metrics.accuracy_score(prediction,test_y))\nprint(metrics.classification_report(model3.predict(test_X),test_y))","07488838":"\u5bf9\u4e09\u7c7b\u7279\u5f81\u5206\u7ec4\uff08_mean\u3001_se\u3001_wrost\uff09\uff1a\n\u5bf9\u4e09\u7ec4\u7279\u5f81\u5206\u522b\u53ef\u89c6\u5316\u76f8\u5173\u7cfb\u6570\uff08\u70ed\u529b\u56fe\uff09\uff1a","183a0d8c":"\u67e5\u770b\u6570\u636e\u7684\u57fa\u672c\u60c5\u51b5\uff1a\u53ef\u4ee5\u770b\u5230\u5404\u5b57\u6bb5\u6570\u636e\u6ca1\u6709\u7f3a\u5931","ea4c8b62":"\u201cdiagnosis\u201d\u5b57\u6bb5\u7684\u53d6\u503c\u5373\u5206\u7c7b\u7ed3\u679c\u4e3aB\u6216M\uff0c\u53ef\u4ee5\u75280\u548c1\u6765\u66ff\u4ee3","6addfb02":"\u201cid\u201d\u6ca1\u6709\u5b9e\u9645\u610f\u601d\uff0c\u53ef\u4ee5\u53bb\u6389","92b35ce5":"mean \u4ee3\u8868\u5e73\u5747\u503c\uff0cse \u4ee3\u8868\u6807\u51c6\u5dee\uff0cworst \u4ee3\u8868\u6700\u5927\u503c\uff0c\u540e30\u4e2a\u7279\u5f81\u503c\u5b9e\u9645\u662f10\u4e2a\u7279\u5f81\u503c\uff08radius\u3001texture\u3001perimeter\u3001area\u3001smoothness\u3001compactness\u3001concavity\u3001concave points\u3001symmetry\u548cfractal_dimension_mean\uff09\u7684\u5e73\u5747\u503c\u3001\u6807\u51c6\u5dee\u548c\u6700\u5927\u503c\u3002","cc366d2d":"\u6a21\u578b\u8bad\u7ec3\u548c\u8bc4\u4f30\uff0c\u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\uff0c\u6bd4\u4f8b\u4e3a7:3","04fd3df2":"\u63d0\u53d6\u76ee\u6807\u53d8\u91cf\u5e76\u7f16\u7801","30139d87":"\u7279\u5f81\u9009\u62e9\uff1a\n\u901a\u8fc7\u70ed\u529b\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e09\u7ec4\u53d8\u91cf\u7684\u6a21\u5f0f\/\u5173\u7cfb\u5b9e\u9645\u4e0a\u662f\u5f88\u63a5\u8fd1\u7684\uff0c\u6211\u4eec\u5c31\u9009\u53d6\u7b2c\u4e00\u7ec4mean\u7684\u7279\u5f81\u8fdb\u884c\u5206\u6790\uff0c\u6839\u636e\u76f8\u5173\u7cfb\u6570\u4ece10\u4e2a\u7279\u5f81\u4e2d\u53c8\u53ef\u4ee5\u7b5b\u9009\u51fa\u5176\u4e2d\u6ca1\u90a3\u4e48\u76f8\u5173\u76846\u4e2a\u7279\u5f81\uff0c\u4ee5\u5b9e\u73b0\u7ef4\u5ea6\u89c4\u7ea6\u3002"}}