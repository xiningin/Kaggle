{"cell_type":{"29266dd3":"code","f6f21269":"code","75b70d8b":"code","22aac886":"code","109e2a3b":"code","10123add":"code","4c953149":"code","7ecc6697":"code","54a918d9":"code","6d50e1b7":"code","ea434cb0":"code","da1e75b1":"code","7cb587f7":"code","73b1d3e0":"code","85c4dcc4":"code","1403875a":"code","d022eff1":"code","93577ca9":"code","8850efbd":"code","015c6d72":"code","dfba6a94":"code","095cac03":"code","1226eb87":"code","98c0402f":"code","2242a63b":"code","cefcd481":"code","881faffa":"code","9baafbb2":"code","65230c21":"code","5062c4ae":"code","cac99b1c":"code","736232ef":"code","c7ceef1e":"code","27340396":"code","1e8f80e9":"code","20079415":"code","d7540cfd":"code","ae8ddbfd":"code","e3b6afbf":"markdown","bcfea814":"markdown","10f243da":"markdown","397bc254":"markdown","cb93abe3":"markdown","430f0bbd":"markdown","934ca6d5":"markdown","40fe9fec":"markdown","2b8d8378":"markdown","3b411d05":"markdown","6d8f0fba":"markdown","1655b8d2":"markdown","0b55bdc3":"markdown","f5000254":"markdown","45262385":"markdown","199294f6":"markdown"},"source":{"29266dd3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6f21269":"# Update pandas to display all columns in the output\npd.options.display.max_columns = None","75b70d8b":"data_path = '\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv'","22aac886":"df = pd.read_csv(data_path)","109e2a3b":"df.head()","10123add":"df.shape","4c953149":"# Check column names and data types in the dataset\ndf.info()","7ecc6697":"# Let's see unique values in each columns\ndf.nunique()","54a918d9":"# Let's describe the data for numerical columns\ndf.describe()","6d50e1b7":"# Describe data for categorical columns\ndf.describe(include='object')","ea434cb0":"# Check for duplicates\ndf.duplicated().sum()","da1e75b1":"df.drop('car_ID', axis=1, inplace=True)","7cb587f7":"df.shape","73b1d3e0":"df['CarName'].head(10)","85c4dcc4":"df['CarBrand'] = df.CarName.apply(lambda s: s.split()[0])","1403875a":"df[\"CarBrand\"].value_counts()","d022eff1":"brand_map = {\n    'toyouta':'toyota',\n    'Nissan':'nissan',\n    'maxda':'mazda',\n    'vokswagen':'volkswagen',\n    'vw':'volkswagen',\n    'porcshce':'porsche'\n}","93577ca9":"df['CarBrand'] = df.CarBrand.apply(lambda s: brand_map[s] if s in brand_map else s)","8850efbd":"df['CarBrand'].value_counts()","015c6d72":"df.drop('CarName', axis=1, inplace=True)","dfba6a94":"df.head()","095cac03":"# Check if there are any missing values\ndf.isna().sum()","1226eb87":"df.loc[:,df.dtypes=='object'].head()","98c0402f":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","2242a63b":"sns.histplot(df['price'])","cefcd481":"sns.boxplot(x=df['price'])","881faffa":"df['price'].describe()","9baafbb2":"df.columns","65230c21":"sns.countplot(df['symboling'])","5062c4ae":"sns.boxplot(y='price', x='symboling', data=df)","cac99b1c":"sns.boxplot(y='price', x='fueltype', data=df)","736232ef":"sns.boxplot(y='price', x='aspiration', data=df)","c7ceef1e":"plt.figure(figsize=(12,8))\ncorr = df.corr()\nsns.heatmap(corr, annot=True)","27340396":"cat_cols = df.columns[df.dtypes.isin(['object', 'int64'])]\ncat_cols","1e8f80e9":"numerical_cols = df.columns[df.dtypes == 'float64']\nnumerical_cols","20079415":"print(f'Total categorical columns: {len(cat_cols)}')","d7540cfd":"ncols = 4\nnrows = int(np.ceil(len(cat_cols) \/ ncols))\ntotal_cols = len(cat_cols)\nprint(total_cols, nrows, ncols)","ae8ddbfd":"# plt.figure(figsize=(20,20))\nfig, axs = plt.subplots(ncols=ncols, nrows=nrows, sharey = True, figsize=(20,20))\nfor i, col in enumerate(cat_cols):\n    row_index = i \/\/ ncols\n    col_index = i % ncols\n#     print(col_index)\n    sns.boxplot(y='price', x=col, data=df, ax=axs[row_index, col_index])\nplt.tight_layout()\nplt.show()","e3b6afbf":"Now, let's drop first 'car_ID' column.","bcfea814":"## Plots for columns","10f243da":"From above, it is clear that 'car_ID' column can be dropped, because having unique value for each row doesn't help in inferences.","397bc254":"No row is duplicated in the dataset.","cb93abe3":"It can be observed from plot that Car price varies on different values of symboling.","430f0bbd":"Let's split the CarName values on space and take first word as brand name.","934ca6d5":"From above, it is clear that there is no missing value in any column. ","40fe9fec":"There are 205 rows and 26 columns in the dataset.","2b8d8378":"As above plots and description shows that Mean > Median, it is right skewed and there are few outliers because of which it is right skewed.","3b411d05":"From above, we can hint that few columns have outliers in it.","6d8f0fba":"# Load data into DataFrame","1655b8d2":"From above we can see that we have mixed data types for columns.\n\n| DataType | Count\n| :--- | ---:\n| Numerical - Int | 8\n| Numerical - Float | 8\n| Categorical | 10","0b55bdc3":"Now, we can remove column 'CarName'","f5000254":"## Plots for categorical features","45262385":"Let's check 'carname' column and see if we can fetch brand name from the name.","199294f6":"Car prices of fuel type 'gas' has lower prices compared to 'diesel' types."}}