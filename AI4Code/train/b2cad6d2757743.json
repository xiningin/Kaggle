{"cell_type":{"067c7ccd":"code","9da32948":"code","aca78f1b":"code","bc937976":"code","88d9e1ff":"code","eb8ce5b7":"code","9735fc5e":"code","23c35ee4":"code","d12ad9d7":"code","b443e55e":"code","b179fa03":"code","22237c87":"code","a7adeeba":"code","e81726e7":"code","4502218a":"code","8680f7b7":"code","5d71f4be":"code","d6d9d420":"code","7e99dd5c":"code","ef55e95e":"code","30391199":"code","1df2de74":"code","cb80115e":"code","86434ee6":"code","42ce002e":"code","d9a7d0b9":"code","6afdbe32":"code","6bc0a132":"code","c423d6db":"code","dcea4dfa":"code","904f0eb1":"code","ddf426bb":"code","ca7d9662":"code","a6eff3e2":"code","aab6db3f":"code","acbc9f28":"code","1840c1ef":"code","44fec4fa":"code","9c2c45cb":"code","d000541b":"code","21f76980":"code","35e8c22f":"code","c5b5b5ab":"code","dbaa5474":"code","65b6fdee":"code","e0b159b2":"code","55c23a81":"markdown","e0881b5f":"markdown","2103e2d8":"markdown","69cf480b":"markdown","67da1a9f":"markdown","9d351465":"markdown"},"source":{"067c7ccd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n","9da32948":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import average_precision_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import auc\nfrom sklearn.svm import SVC\n%matplotlib inline","aca78f1b":"#let's import each datasets with the below codes\ndf_death = pd.read_excel(r\"..\/input\/breast-cancer-datasets\/death.xlsx\")\ndf_recovered = pd.read_excel(r\"..\/input\/breast-cancer-datasets\/recovered.xlsx\")\ndf_under_treatment = pd.read_excel(r\"..\/input\/breast-cancer-datasets\/under treatment.xlsx\")","bc937976":"df_death.shape, df_recovered.shape, df_under_treatment.shape","88d9e1ff":"#let's concat the three different excel files into one file by executing of the below codes\n\n# filenames\nexcel_names = [\"..\/input\/breast-cancer-datasets\/death.xlsx\", \"..\/input\/breast-cancer-datasets\/recovered.xlsx\", \"..\/input\/breast-cancer-datasets\/under treatment.xlsx\"]\n\n# read them in\nexcels = [pd.ExcelFile(name) for name in excel_names]\n\n# turn them into dataframes\nframes = [x.parse(x.sheet_names[0], header=0,index_col=None) for x in excels]\n\n# delete the first row for all frames except the first\n# i.e. remove the header row -- assumes it's the first\nframes[1:] = [df[1:] for df in frames[1:]]\n\n# concatenate them..\ndf = pd.concat(frames)","eb8ce5b7":"df.shape","9735fc5e":"df.head()","23c35ee4":"df[\"treatment_data\"]","d12ad9d7":"patient_id = df['patient_id']\ndf= df.drop(df[['patient_id','treatment_data','id_healthcenter','id_treatment_region','birth_date']],axis = True)\ndf.head()","b443e55e":"df.describe()","b179fa03":"df.info()","22237c87":"#let's look at the columns of the datasets\ndf.columns","a7adeeba":"categorical = len(df.select_dtypes(include = [\"object\"]).columns)\nnumerical = len(df.select_dtypes(include=[\"int\", \"float64\"]).columns)\n\nprint('Total Features: ', categorical, 'categorical', '+',\n      numerical, 'numerical', '=', categorical+numerical, 'features')","e81726e7":"plt.figure(figsize=(14,10))\nsns.heatmap(df.corr(),annot=True,cmap='hsv',fmt='.3f',linewidths=2)\nplt.show()","4502218a":"\ndf.groupby('\\nBenign_malignant_cancer').mean()","8680f7b7":"sns.distplot(df['\\nBenign_malignant_cancer'],rug=True)\nplt.show()","5d71f4be":"pd.crosstab(df.age,df['\\nBenign_malignant_cancer']).plot(kind=\"bar\",figsize=(25,8),color=['gold','brown' ])\nplt.title('Benign_malignant_cancer for Ages')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.show()","d6d9d420":"pd.crosstab(df['gender '],df['\\nBenign_malignant_cancer']).plot(kind=\"bar\",figsize=(10,5),color=['cyan','coral' ])\nplt.xlabel('gender (0 = Female, 1 = Male)')\nplt.xticks(rotation=0)\nplt.legend([\"Benign_Tumor\", \"maligant_tumor\"])\nplt.ylabel('Frequency')\nplt.show()","7e99dd5c":"#correlation matrix to find out the most related features to the \"Benign_malignant_cancer\" \ncorrmat = df.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, cmap=\"coolwarm\", vmax=.8, square=True);","ef55e95e":"#it is too much features to look at, let's look at the top 10 features related to the \\nBenign_malignant_cancer\n# Top 10 Heatmap\nk = 10 #number of variables for heatmap\ncols = corrmat.nlargest(k, '\\nBenign_malignant_cancer')['\\nBenign_malignant_cancer'].index\ncm = np.corrcoef(df[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","30391199":"#let's look at the distribution vatiables of the target\nsns.countplot(df['\\nBenign_malignant_cancer'], label = \"Count\")","1df2de74":"df.select_dtypes(include=[\"int\", \"float64\"]).columns","cb80115e":"sns.pairplot(df, hue='\\nBenign_malignant_cancer', vars=['age','weight', 'thickness_tumor','blood', 'taking_heartMedicine', 'taking_gallbladder_disease_medicine',\n                                                        'smoking', 'alcohol','breast_pain','radiation_history', 'Birth_control(Contraception)',\n                                                        '\\nmenstrual_age'])\nplt.show()","86434ee6":"#for checking the categorical variable, we would execute the below code\ndf.select_dtypes(include = [\"object\"]).columns","42ce002e":"#categorical features of the datasets\ndf_cat = df[[ 'marital_length', 'pregnency_experience', 'giving_birth',\n       'age_FirstGivingBirth  ', '\\nabortion', 'condition']]","d9a7d0b9":"#numerical variables of the datasets\ndf_num = df[['gender ', 'education','hereditary_history', 'age',\n       'weight', 'thickness_tumor', 'marital_status', 'blood',\n       'taking_heartMedicine', 'taking_blood_pressure_medicine',\n       'taking_gallbladder_disease_medicine', 'smoking', 'alcohol',\n       'breast_pain', 'radiation_history', 'Birth_control(Contraception)',\n       '\\nmenstrual_age', '\\nmenopausal_age', '\\nBenign_malignant_cancer']]","6afdbe32":"#Distribution for all numeric variables \n#As we can see the Age Distribution is Normal and the others are not\n\nfor i in df_num.columns:\n    plt.hist(df_num[i])\n    plt.title(i)\n    plt.show()","6bc0a132":"for i in df_cat.columns:\n    sns.barplot(df_cat[i].value_counts().index, df_cat[i].value_counts()).set_title(i)\n    plt.show()","c423d6db":"#missing data\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(25)\n","dcea4dfa":"df['\\nmenopausal_age'] = df['\\nmenopausal_age'].fillna(df['\\nmenopausal_age'].median())","904f0eb1":"df.isnull().sum()","ddf426bb":"df.info()","ca7d9662":"df.head()","a6eff3e2":"pd.get_dummies(df)\n","aab6db3f":"df.info()","acbc9f28":"(df.select_dtypes(include = [\"object\"]).columns)\n","1840c1ef":"df = df.drop(df[['marital_length', 'pregnency_experience', 'giving_birth',\n       'age_FirstGivingBirth  ', '\\nabortion', 'condition']],axis = True)\n","44fec4fa":"df.columns","9c2c45cb":"df.info()","d000541b":"y = df['\\nBenign_malignant_cancer']\nX = df.drop('\\nBenign_malignant_cancer', axis=1)","21f76980":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","35e8c22f":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","c5b5b5ab":"from keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras.layers import Activation, Dropout, Flatten, Dense\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nimport warnings\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","dbaa5474":"model = keras.Sequential()\nmodel.add(layers.Dense(16, activation=\"relu\"))\nmodel.add(layers.Dense(32, activation=\"relu\"))\nmodel.add(layers.Dense(64, activation = 'relu'))\n\n\nmodel.add(layers.Dense(1,activation = 'sigmoid'))","65b6fdee":"# Compiling the ANN\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","e0b159b2":"model.fit(X_train, y_train, batch_size = 10, epochs = 100)","55c23a81":"# Importing the Keras libraries and packages\n","e0881b5f":"# Data Understanding:\nBefore dive into the machine learning processes, let\u2019s describe what the features of the datasets stand for and how some of them are categorized. \n\nWe have three datasets with the same features and target, but for three categories such as \n* The patients who are under treatment\n* The patients who are recovered \n* The patients who died \n\n# The features could be described as bellow:\n* patient_id: the id of the patient \n* gender: the gender of the patient which \u201cFemale\u201d is 0 and \u201cMale\u201d is 1\n* education: the education level of the patient which Illiterate=0, Elementary= 1, Middle School =2 , High School =3 , Diploma = 4, Associate =5 , Bachelor =6 , Master = 7\n* treatment_date = the date(year) which the patient would receive the treatment\n* id_healthcenter:: is the id for the healthcare center\n* id_treatment_region: the region which the patient would receive the treatment\n* hereditary_history: the patient has the hereditary history of disease which 1 means \u201cYes\u201d and 0 means \u201cNo\u201d\n* birth_date: birth date (year) of the patient\n* age: the age of the patient\n* weight: the weight of the patient\n* thickness_tumor: the thickness of the tumor detected in the patient body\n* marital_status: the marital status of the patient includes : 1 means married and 0 means single\n* marital_length: the age of the martial status includes 0 means under 10 years, 1 means above 10 years\n* pregnency_experience: the patient has the pregnancy experience which 0 means has not experience and 1 means has experience\n* giving_birth: the patient has experienced giving the birth. Each number means the number of giving birth\n* age_FirstGivingBirth : in which age the patient has the first experience of giving a birth, which before age 30 equals 0 and after age 30 equals 1\n* abortion: the patient has experience of abortion which 0 means has not and 1 means has\n* blood: the type of bloods A+ =0, A- = 1, AB+ = 2, AB- = 3, B+ = 4, B- = 5, O+ = 6, O- = 7\n* taking_heartMedicine: it says if the patient takes the heart medicine or not which 0 means does not and 1 means does\n* taking_blood_pressure_medicine: it says if the patient takes the blood pressure or not which 0 means does not and 1 means does\n* taking_gallbladder_disease_medicine: it says the patient takes the gallbladder medicine or not which 0 means does not and 1 means does\n* smoking: it says if the patient smokes or not which 0 means does not and 1 means does\n* alcohol: it says if the patient drinks alcohol or not which 0 means does not and 1 means does\n* breast_pain: if the patient has pain in breast part which 0 means has not and 1 means has\n* radiation_history: if the patient has experience with radiation in breast area which 0 means has not and 1 means has\n* Birth_control(Contraception): the patient takes actions for birth control which 0 means does not and 1 means does \n* menstrual_age: at which age the patient starts natural menstrual which 0 means the patient does not start menstrual, 1 means under age 12, and 2 means above age 12\n* menopausal_age: at which age the patient starts natural menopausal which 0 means does not starts, 1 means at under age 50, and 2 means above age 50\n* tumor: if the patient has the tumor which 0 means No and 1 means 1\n* condition: the condition of the patient which categorized into different categories such as under treatment, recovered, death\n* Benign_malignant_tumor: is the target of our model which Benign is 0 and malignant is 1","2103e2d8":"we do not need some features as long as they just only for indentification such as patient_id, id_healthcenter, id_treatment_region\n\nwe also do not need the treatment date because the data gathered in only for 2019\n\nwe also do not need the birth data as long as we have the age column","69cf480b":"# Corelation","67da1a9f":"I want to show how a Data Scientist would address a technical problem by analyzing the breast cancer datasets from three excel files such as (Death, Recovered, Under Treatment) through conducting some technical activities such as:\n* The preparation of the breast cancer for support vector machine algorithm\n* Visualization and data exploratory of the dataset to know better the data and feature engineering steps\n* Neural Networks\n* Conducting the hyperparameter tuning\n* The goal is to correctly predict if someone weather would have Benign or malignant tumor\n\nMy overview of my implementation in this notebook would be described as below:\n* Understand the shape of the data\n* Data Cleaning\n* Data Visualization\n* Data Exploration\n* Feature Engineering\n* Data Preprocessing for Model\n* Basic Model Building Neural Network\n\n","9d351465":"# Loading appropriate libraries"}}