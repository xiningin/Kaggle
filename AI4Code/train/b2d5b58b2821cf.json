{"cell_type":{"f59ba57d":"code","c8d397be":"code","14314d50":"code","1363757e":"code","342e71f4":"code","ae3a200c":"code","2fae5761":"code","b831fa4a":"code","4c730734":"code","eef8aad6":"code","ffaeabb1":"code","c72f8080":"code","ee5d6c3e":"code","c6556c22":"code","9d7de22e":"code","1cbf00cd":"code","4e379fac":"code","fed028c5":"markdown","bc76c5bb":"markdown"},"source":{"f59ba57d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport matplotlib as mpl\nfrom matplotlib.colors import LinearSegmentedColormap\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8d397be":"# Saved dataset on Github\n# url = 'https:\/\/raw.githubusercontent.com\/ttran293\/Vietnam-Happiness-Score\/main\/world-happiness-report.csv'\n# url2= 'https:\/\/raw.githubusercontent.com\/ttran293\/Vietnam-Happiness-Score\/main\/world-happiness-report-2021.csv'\ndata = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv')\ndata_2021 = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')","14314d50":"pd.set_option('display.max_rows', None)\ndata_2021.head()","1363757e":"data_2021.describe()","342e71f4":"data_2021.info()","ae3a200c":"colors_blue = [\"#132C33\", \"#264D58\", '#17869E', '#51C4D3', '#B4DBE9']\ncolors_dark = [\"#1F1F1F\", \"#313131\", '#636363', '#AEAEAE', '#DADADA']\ncolors_red = [\"#331313\", \"#582626\", '#9E1717', '#D35151', '#E9B4B4']\ncolors_mix = [\"#17869E\", '#264D58', '#179E66', '#D35151', '#E9DAB4', '#E9B4B4', '#D3B651', '#6351D3']\ncolors_div = [\"#132C33\", '#17869E', '#DADADA', '#D35151', '#331313']\n\nsns.palplot(colors_blue)\nsns.palplot(colors_dark)\nsns.palplot(colors_red)\nsns.palplot(colors_mix)\nsns.palplot(colors_div)","2fae5761":"#@title\nSEA = data_2021[data_2021['Regional indicator'] == \"Southeast Asia\"]['Country name'].to_list()\nEA = data_2021[data_2021['Regional indicator'] == \"East Asia\"]['Country name'].to_list()\nSA = data_2021[data_2021['Regional indicator'] == \"South Asia\"]['Country name'].to_list()\nASIA = SEA + EA + SA\n\n#@title\ndef getSea(row) : \n    if row['Country name'] == \"Vietnam\" : \n        return \"Vietnam\"\n    elif row['Country name'] in SEA : \n        return \"SEA\"\n    else : \n        return \"Other\"\n    \n#@title\ndef getA(row) : \n    if row['Country name'] == \"Vietnam\" : \n        return \"Vietnam\"\n    elif row['Country name'] in ASIA : \n        return \"SEA\"\n    else : \n        return \"Other\"\n    \nsns.set(style=\"darkgrid\", context=\"talk\")\nplt.style.use(\"dark_background\")\nplt.rcParams.update({\"grid.linewidth\":0.5, \"grid.alpha\":0.5})","b831fa4a":"#@title\ndf = data_2021[data_2021['Country name'].isin(SEA)]\ndata_2021_top = data_2021.iloc[0:1]\ndata_2021_bot = data_2021.iloc[-1]\nmean_score = data_2021['Ladder score'].mean()\nsea_idx = list(df.index + 1)\n\nfig, ax = plt.subplots(figsize=(25, 8))\n\nbars0 = ax.bar(data_2021_top['Country name'], data_2021_top['Ladder score'], color=colors_blue[0], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.bar(df['Country name'], df['Ladder score'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.bar(data_2021_bot['Country name'], data_2021_bot['Ladder score'], color=colors_red[0], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[3])\n\nax.legend([\"Average\", \"Happiest\", \"SEA Countries\", \"Unhappiest\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Ladder Score\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Global\\nAverage: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n# Vietnam settings\nbars1[3].set_alpha(1)\nbars1[3].set_color(colors_red[3])\nbars1[3].set_edgecolor(colors_dark[0])\n\nfor i, bar in enumerate(bars1) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i != 3 : \n        ax.text(\n            s=f\"{sea_idx[i]}th\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    else : \n        ax.text(\n        s=f\"{sea_idx[i]}th\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=14,\n        fontweight='bold'\n    )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=\"149th\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n\nplt.text(s=\"How Happy is Vietnam Among its Neighbors?\", ha='left', x=xmin, y=ymax*1.12, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Among SEA countries, Vietnam ranks 4th in the happiness index.\\nIn a world context, Vietnam ranks 79th, below average.\", loc='left', fontsize=18, color=colors_dark[4])  \n\nplt.show()","4c730734":"##### @title\ndf_glob = data_2021.sort_values(\"Logged GDP per capita\", ascending=False).reset_index(drop=True)\ndf = df_glob[df_glob['Country name'].isin(SEA)]\ndata_2021_top = df_glob.iloc[0:1]\ndata_2021_bot = df_glob.iloc[-1]\nmean_score = df_glob['Logged GDP per capita'].mean()\nsea_idx = list(df.index + 1)\n\nfig, ax = plt.subplots(figsize=(25, 10))\n\nbars0 = ax.bar(data_2021_top['Country name'], data_2021_top['Logged GDP per capita'], color=colors_blue[0], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.bar(df['Country name'], df['Logged GDP per capita'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.bar(data_2021_bot['Country name'], data_2021_bot['Logged GDP per capita'], color=colors_red[0], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[3])\n\nax.legend([\"Average\", \"Happiest\", \"SEA Countries\", \"Unhappiest\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Log GDP per Capita\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Global\\nAverage: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n# Vietnam settings\nbars1[5].set_alpha(1)\nbars1[5].set_color(colors_red[3])\nbars1[5].set_edgecolor(colors_dark[0])\n\nfor i, bar in enumerate(bars1) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i == 0 : \n        ax.text(\n            s=f\"{sea_idx[i]}nd\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    elif i != 5 : \n        ax.text(\n            s=f\"{sea_idx[i]}th\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    else : \n        ax.text(\n        s=f\"{sea_idx[i]}th\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=14,\n        fontweight='bold'\n    )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=\"149th\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Where does Vietnam's Log GDP Ranks?\\n\", ha='left', x=xmin, y=ymax*1.12, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Among SEA countries, Vietnam ranks 6th in Log GDP per Capita scores.\\nIn a world context, Vietnam ranks 102th. Check out Singapore is in 2nd place!\\n\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","eef8aad6":"#@title\ndf_glob = data_2021.sort_values(\"Social support\", ascending=False).reset_index(drop=True)\ndf = df_glob[df_glob['Country name'].isin(SEA)]\ndata_2021_top = df_glob.iloc[0:1]\ndata_2021_bot = df_glob.iloc[-1]\nmean_score = df_glob['Social support'].mean()\nsea_idx = list(df.index + 1)\n\nfig, ax = plt.subplots(figsize=(25, 10))\n\nbars0 = ax.bar(data_2021_top['Country name'], data_2021_top['Social support'], color=colors_blue[0], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.bar(df['Country name'], df['Social support'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.bar(data_2021_bot['Country name'], data_2021_bot['Social support'], color=colors_red[0], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[3])\n\nax.legend([\"Average\", \"Happiest\", \"SEA Countries\", \"Unhappiest\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Social support\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Global\\nAverage: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n# Vietnam settings\nbars1[2].set_alpha(1)\nbars1[2].set_color(colors_red[3])\nbars1[2].set_edgecolor(colors_dark[0])\n\nfor i, bar in enumerate(bars1) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i != 2 : \n        ax.text(\n            s=f\"{sea_idx[i]}th\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    else : \n        ax.text(\n        s=f\"{sea_idx[i]}th\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=14,\n        fontweight='bold'\n    )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=\"149th\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Where does Vietnam's Social support Ranks?\", ha='left', x=xmin, y=ymax*1.12, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Among SEA countries, Vietnam ranks 3th in Social support scores.\\nAnd, rank 67th in world.\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","ffaeabb1":"#@title\nSEA = data_2021[data_2021['Regional indicator'] == \"Southeast Asia\"]['Country name'].to_list()\n\n#to remove singapore since it's 1st in the graph below and mess up the data\nSEA.pop(0)\n","c72f8080":"#@title\ndf_glob = data_2021.sort_values(\"Healthy life expectancy\", ascending=False).reset_index(drop=True)\ndf = df_glob[df_glob['Country name'].isin(SEA)]\ndata_2021_top = df_glob.iloc[0:1]\ndata_2021_bot = df_glob.iloc[-1]\nmean_score = df_glob['Healthy life expectancy'].mean()\nsea_idx = list(df.index + 1)\n\nfig, ax = plt.subplots(figsize=(25, 10))\n\nbars0 = ax.bar(data_2021_top['Country name'], data_2021_top['Healthy life expectancy'], color=colors_blue[0], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.bar(df['Country name'], df['Healthy life expectancy'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.bar(data_2021_bot['Country name'], data_2021_bot['Healthy life expectancy'], color=colors_red[0], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[3])\n\nax.legend([\"Average\", \"Highest\", \"SEA Countries\", \"Lowest\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Healthy life expectancy\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Global\\nAverage: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n# Vietnam settings\nbars1[1].set_alpha(1)\nbars1[1].set_color(colors_red[3])\nbars1[1].set_edgecolor(colors_dark[0])\n\nfor i, bar in enumerate(bars1) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i != 1: \n        ax.text(\n            s=f\"{sea_idx[i]}th\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    else : \n        ax.text(\n        s=f\"{sea_idx[i]}th\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=14,\n        fontweight='bold'\n    )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=\"149th\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Where does Vietnam's Healthy Life Expectancy Ranks?\", ha='left', x=xmin, y=ymax*1.17, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Among SEA countries, Vietnam ranks 2nd in Healthy life expectancy scores.\\nIn a world context, Vietnam ranks 53th.\\nUnsurprisingly, Singapore is on the 1st place\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","ee5d6c3e":"#@title\ndf_glob = data_2021.sort_values(\"Freedom to make life choices\", ascending=False).reset_index(drop=True)\ndf = df_glob[df_glob['Country name'].isin(SEA)]\ndata_2021_top = df_glob.iloc[0:1]\ndata_2021_bot = df_glob.iloc[-1]\nmean_score = df_glob['Freedom to make life choices'].mean()\nsea_idx = list(df.index + 1)\n\nfig, ax = plt.subplots(figsize=(25, 10))\n\nbars0 = ax.bar(data_2021_top['Country name'], data_2021_top['Freedom to make life choices'], color=colors_blue[0], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.bar(df['Country name'], df['Freedom to make life choices'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.bar(data_2021_bot['Country name'], data_2021_bot['Freedom to make life choices'], color=colors_red[0], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[3])\n\nax.legend([\"Average\", \"Highest\", \"SEA Countries\", \"Lowest\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Freedom to make life choices\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Global\\nAverage: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n# Vietnam settings\nbars1[1].set_alpha(1)\nbars1[1].set_color(colors_red[3])\nbars1[1].set_edgecolor(colors_dark[0])\n\nfor i, bar in enumerate(bars1) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i != 1 : \n        ax.text(\n            s=f\"{sea_idx[i]}th\",\n            va='center', ha='center', \n            x=x+0.38, y=y\/2,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n    else : \n        ax.text(\n        s=f\"{sea_idx[i]}th\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=14,\n        fontweight='bold'\n    )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_x(),\n    y=bar.get_height(),\n\n    ax.text(\n        s=\"149th\",\n        va='center', ha='center', \n        x=x[0]+0.38, y=y[0]\/2,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Where does Vietnam's Freedom to Make Life Choices Ranks?\", ha='left', x=xmin, y=ymax*1.17, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Among SEA countries, Vietnam ranks 2th in Freedom to make life choices scores.\\nIn a world context, Vietnam ranks 9th.\\n\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","c6556c22":"#@title\ncomponents = list(data_2021.columns[-7:-1])\ndf = data_2021[data_2021['Country name'].isin(SEA)]\ndf = df[[\"Country name\"] + components].set_index(\"Country name\")\ndf_idn = df.loc['Vietnam']\n\nfig, ax = plt.subplots(figsize=(25, 10), dpi=75)\n\npie = ax.pie(\n    df_idn, \n    colors=colors_mix[0:7],\n    wedgeprops=dict(width=0.5, alpha=0.9),\n    autopct='%1.0f%%',\n    pctdistance=1.12, \n    textprops={\n        'fontsize': 18, \n        'color': colors_dark[4],\n        'fontweight': 'bold'\n    }, \n)\n\nax.legend(df_idn.index, loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=2, borderpad=1, frameon=False, fontsize=15)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.suptitle(t=\"Vietnam's Score Breakdown\", fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"Vietnam needs to improve in generosity and lower down corruption\", fontsize=18, color=colors_dark[4])\nplt.tight_layout()\nplt.show()","9d7de22e":"SEA = data_2021[data_2021['Regional indicator'] == \"Southeast Asia\"]['Country name'].to_list()\ndf = data[data['Country name'].isin(SEA)].set_index('Country name')\ndf_idn = df.loc['Vietnam']\ndf = df.reset_index()\ndf = df[df['Country name'] != \"Vietnam\"]\nmean_idn = df_idn['Life Ladder'].mean()\n\nfig, ax = plt.subplots(figsize=(25, 10), dpi=75)\n\nline0 = sns.lineplot(data=df, x='year', y='Life Ladder', hue='Country name', alpha=0.2, ax=ax, palette=colors_mix[:8])\nline1 = ax.plot(df_idn.year, df_idn['Life Ladder'], alpha=1, marker='o', color=colors_red[3], linewidth=3, label='Vietnam')\nline2 = ax.axhline(mean_idn, linestyle='--', alpha=1, color=colors_dark[4])\n\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=14)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Score\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Vietnam's\\nAverage\\nScore: {:.2f}\".format(mean_idn),\n    x=xmax+0.5,\n    y=mean_idn,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\n\nplt.text(s=\"Vietnam's Ladder Score Since 2006\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"It has been a roller coaster for Vietnam since 2010\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","1cbf00cd":"components = list(data_2021.columns[-7:-1])\ndf = data_2021[data_2021['Country name'].isin(SEA)]\ndf = df[[\"Country name\"] + components].set_index(\"Country name\")\n\nfig, ax = plt.subplots(figsize=(25, 10), dpi=75)\n\nbars = df.plot(kind='bar', stacked=True, ax=ax, color=colors_mix[0:7], alpha=0.8, edgecolor=colors_dark[0], rot=0)\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=3, borderpad=1, frameon=False, fontsize=15)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Countries\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Score\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.text(s=\"SEA Score Breakdown\", ha='left', x=xmin, y=ymax*1.18, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"GDP per capita plays a big role in the improvement in hapiness score\\nmost unhappy country have low GDP but does not necessarily the first factor\\nwe can also see that Singapore, the most happy country in SEA has low corruption\", loc='left', fontsize=18, color=colors_dark[4])  \nplt.tight_layout()\nplt.show()","4e379fac":"df = data_2021\ndf['Countries'] = df.apply(lambda x: getA(x), axis=1)\nmeanx=df['Ladder score'].mean()\nmeany=df['Perceptions of corruption'].mean()\nsingx=df[df['Country name'] == 'Vietnam']['Ladder score']\nsingy=df[df['Country name'] == 'Vietnam']['Perceptions of corruption']\n\nfig, ax = plt.subplots(figsize=(25, 15), dpi=75)\n\nsns.scatterplot(\n    data=df, \n    x='Ladder score', \n    y='Perceptions of corruption', \n    size='Logged GDP per capita', \n    ax=ax, sizes=(5, 1000),\n    alpha=0.9,\n    hue='Countries',\n    palette=[colors_dark[2], colors_blue[3], colors_red[3]]\n)\nlinex = ax.axvline(meanx, linestyle='dotted', color=colors_dark[3], alpha=0.8, label='Average')\nliney = ax.axhline(meany, linestyle='dotted', color=colors_dark[3], alpha=0.8)\n\n\nax.legend(bbox_to_anchor=(1.05, 1), ncol=1, borderpad=1, frameon=False, fontsize=15)\nax.grid(alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Ladder score\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nax.set_ylabel(\"Perceptions of corruption\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[3])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\n\nplt.text(s=\"ASIA: Ladder score, Perceptions of corruption and GDP per Capita\\n\", ha='left', x=xmin, y=ymax*1.04, fontsize=24, fontweight='bold', color=colors_dark[4])\nplt.title(\"It seems that 2\/3 of the Asian countries including Vietnam suffered from Perceptions of corruption. \\nThis somewhat contribute to the overall happiness ladderscore as those countries most likely to fall below average\", loc='left', fontsize=18, color=colors_dark[4])  \n\nplt.show()","fed028c5":"# Introduction\n\n**Dataset Author**: Ajaypal Singh\n\n**Context**: The World Happiness Report is a landmark survey of the state of global happiness . The report continues to gain global recognition as governments, organizations and civil society increasingly use happiness indicators to inform their policy-making decisions. Leading experts across fields \u2013 economics, psychology, survey analysis, national statistics, health, public policy and more \u2013 describe how measurements of well-being can be used effectively to assess the progress of nations. The reports review the state of happiness in the world today and show how the new science of happiness explains personal and national variations in happiness.\n\n**Content**: The happiness scores and rankings use data from the Gallup World Poll . The columns following the happiness score estimate the extent to which each of six factors \u2013 economic production, social support, life expectancy, freedom, absence of corruption, and generosity \u2013 contribute to making life evaluations higher in each country than they are in Dystopia, a hypothetical country that has values equal to the world\u2019s lowest national averages for each of the six factors. They have no impact on the total score reported for each country, but they do explain why some countries rank higher than others.\n\nMy work is referenced of Dimitri Irfan, Indonesia Happiness Report. It is such an eye opening visualization. ","bc76c5bb":"# Vietnam's happiness rank among the Southeast Asia countries"}}