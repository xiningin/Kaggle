{"cell_type":{"4cc2470d":"code","b79f462b":"code","143dad5b":"code","9689ff2c":"code","9d0cc686":"code","924e3b06":"markdown","2aa94800":"markdown","fea7be58":"markdown","a95c4bc2":"markdown","a0108748":"markdown","443cb76b":"markdown","e6de21df":"markdown"},"source":{"4cc2470d":"# Very few imports... pure pytorch!\nimport numpy as np\nfrom albumentations.pytorch.transforms import ToTensorV2\n\nimport torch\nimport torchvision\nfrom torchvision.models.detection.faster_rcnn import FastRCNNPredictor","b79f462b":"DEVICE = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')\n\nWEIGHTS_FILE = \"..\/input\/reef-starter-torch-fasterrcnn-12e-v2\/fasterrcnn_resnet50_fpn-e7.bin\"\n\nDETECTION_THRESHOLD = 0.66","143dad5b":"def get_model():\n    model = torchvision.models.detection.fasterrcnn_resnet50_fpn(pretrained=False, pretrained_backbone=False)\n    num_classes = 2  # 1 class (starfish) + background\n\n    # get number of input features for the classifier\n    in_features = model.roi_heads.box_predictor.cls_score.in_features\n\n    # replace the pre-trained head with a new one\n    model.roi_heads.box_predictor = FastRCNNPredictor(in_features, num_classes)\n\n    # Load the trained weights\n    model.load_state_dict(torch.load(WEIGHTS_FILE, map_location=DEVICE))\n    model.eval()\n\n    model = model.to(DEVICE)\n    return model\n\nmodel = get_model()","9689ff2c":"def format_prediction_string(boxes, scores):\n    # Format as specified in the evaluation page\n    pred_strings = []\n    for j in zip(scores, boxes):\n        pred_strings.append(\"{0:.10f} {1} {2} {3} {4}\".format(j[0], j[1][0], j[1][1], j[1][2], j[1][3]))\n    return \" \".join(pred_strings)\n\n\ndef predict(model, pixel_array):\n    # Predictions for a single image\n    \n    # Apply all the transformations that are required\n    pixel_array = pixel_array.astype(np.float32) \/ 255.\n    tensor_img = ToTensorV2(p=1.0)(image=pixel_array)['image'].unsqueeze(0)\n    \n    # Get predictions\n    with torch.no_grad():\n        outputs = model(tensor_img.to(DEVICE))[0]\n    \n    # Move predictions to cpu and numpy\n    boxes = outputs['boxes'].data.cpu().numpy()\n    scores = outputs['scores'].data.cpu().numpy()\n    \n    # Filter predictions with low score\n    boxes = boxes[scores >= DETECTION_THRESHOLD].astype(np.int32)\n    scores = scores[scores >= DETECTION_THRESHOLD]\n    \n    # Go back from x_min, y_min, x_max, y_max to x_min, y_min, w, h\n    boxes[:, 2] = boxes[:, 2] - boxes[:, 0]\n    boxes[:, 3] = boxes[:, 3] - boxes[:, 1]\n  \n    # Format results as requested in the Evaluation tab\n    return format_prediction_string(boxes, scores)","9d0cc686":"import greatbarrierreef\nenv = greatbarrierreef.make_env()\niter_test = env.iter_test() \nfor (pixel_array, df_pred) in iter_test:\n    # Predictions\n    df_pred['annotations'] = predict(model, pixel_array)\n    env.predict(df_pred)","924e3b06":"# Model","2aa94800":"# Predict functions","fea7be58":"# Please, _DO_ upvote if you find it useful or interesting!!","a95c4bc2":"# Submit\n\n(See: [Great Barrier Reef API Tutorial](https:\/\/www.kaggle.com\/sohier\/great-barrier-reef-api-tutorial))","a0108748":"# \ud83d\udc20 Reef - Pytorch FasterRCNN Infer\n\n## A self-contained, simple, pure pytorch \ud83d\udd25 FasterR-CNN implementation with `LB=0.416`\n\n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/31703\/logos\/header.png)\n\n#### FasterR-CNN is one of the SOTA models for Object detection.\n\n#### In this notebook we present a simple solution using a pure pytorch Faster R-CNN with pretrained weights, and finetuning it for few epochs.\n\n\nIs is an adapted version of [this notebook](https:\/\/www.kaggle.com\/pestipeti\/pytorch-starter-fasterrcnn-inference) mentioned in [this comment](https:\/\/www.kaggle.com\/c\/tensorflow-great-barrier-reef\/discussion\/290016)\n\n## You can find the [training notebook here](https:\/\/www.kaggle.com\/julian3833\/coral-reef-pytorch-starter-fasterrcnn-train)\n\n\n# Please, _DO_ upvote if you find it useful or interesting!!\n\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n---\n\n### Changelog\n\n\n|Best| Version | Description|  Weights| LB |\n|---| --- | ----| --- | --- |\n|| [**V5**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-293?scriptVersionId=80517131)  | 2 epochs. `detection_threshold=0.5` | [coral-reef-pytorch-starter-fasterrcnn-weights](https:\/\/www.kaggle.com\/julian3833\/coral-reef-pytorch-starter-fasterrcnn-weights) | `0.201`|\n|| [**V6**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-293?scriptVersionId=80518365)  | `detection_threshold=0.66` | [coral-reef-pytorch-starter-fasterrcnn-weights](https:\/\/www.kaggle.com\/julian3833\/coral-reef-pytorch-starter-fasterrcnn-weights) |`0.243`|\n|| [**V7**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-293?scriptVersionId=80520095)  | `detection_threshold=0.85` |[coral-reef-pytorch-starter-fasterrcnn-weights](https:\/\/www.kaggle.com\/julian3833\/coral-reef-pytorch-starter-fasterrcnn-weights) | `0.292`|\n|| [**V8**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-293?scriptVersionId=80534807)  | `detection_threshold=0.9` |  [coral-reef-pytorch-starter-fasterrcnn-weights](https:\/\/www.kaggle.com\/julian3833\/coral-reef-pytorch-starter-fasterrcnn-weights)|`0.293`|\n|| [**V10**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-293)  | V8 + 4 epochs | [reef-starter-torch-fasterrcnn-4e](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-4e) | `0.361`|\n|| [**V11**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-361?scriptVersionId=80610091)  | Train 8 epochs with validation. Pick best epoch (6th epoch ) | [reef-starter-torch-fasterrcnn-8e](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-8e) |`0.343`|\n|| [**V12**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-361?scriptVersionId=80622626)  | V11 + `detection_threshold=0.66` | [reef-starter-torch-fasterrcnn-8e](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-8e) |  `0.369`|\n|| [**V13**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-413?scriptVersionId=80624811)  |Best of 12 epochs, lower LR (epoch=5th) + `detection_threshold=0.66` | [reef-starter-torch-fasterrcnn-12e](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-12e) |  `0.413` |\n|_Best_| [**V14**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-416?scriptVersionId=80690903)  | Best of 12 epochs. Split 90-10. Augmentations.  (epoch=8th) + `detection_threshold=0.66` | [reef-starter-torch-fasterrcnn-12e-v2](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-12e-v2) |  `0.416` |\n|| [**V18**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-416?scriptVersionId=80783030)  | V14 + `DETECTION_THRESHOLD=0.35`. Tidy-up. | [reef-starter-torch-fasterrcnn-12e-v2](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-12e-v2) |  `0.384` |\n|| [**V28**](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-infer-lb-0-416?scriptVersionId=80783030)  | V14's train with last epoch (12th) | [reef-starter-torch-fasterrcnn-12e-v2](https:\/\/www.kaggle.com\/julian3833\/reef-starter-torch-fasterrcnn-12e-v2) |  `??` |\n\n\n---","443cb76b":"# Constants","e6de21df":"# Imports"}}