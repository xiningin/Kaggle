{"cell_type":{"bb475fe0":"code","0f9a45cd":"code","f4b23440":"code","49198323":"code","a2132705":"code","01361790":"code","d1314b14":"code","2a874125":"code","028621a6":"code","f53ac840":"code","3cadc8af":"code","08354d98":"code","1ea15108":"code","94be7d78":"markdown","3cc4cc70":"markdown","0639f656":"markdown","634fae72":"markdown","314c2467":"markdown","33db574e":"markdown","de02ad89":"markdown","48c7f350":"markdown","bdfca0a3":"markdown"},"source":{"bb475fe0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0f9a45cd":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')","f4b23440":"# from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n# import plotly as py\n# import plotly.graph_objs as go\n\n# init_notebook_mode(connected=True) #do not miss this line\n\n# data = [go.Bar(\n#         x=[\"Monday\", \"Tuesday\"],\n#         y=[55,100]  )]\n# fig = go.Figure(data=data)\n\n# py.offline.iplot(fig)","49198323":"ts19confirmed = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\nts19recover = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv')\nts19deaths = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')","a2132705":"# confirmed = pd.melt(ts19confirmed, id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], var_name='Date', value_name='Confirmed')\n# recovered = pd.melt(ts19recover, id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], var_name='Date', value_name='Recovered')\n# deaths = pd.melt(ts19deaths, id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], var_name='Date', value_name='Deaths')\n\n# result = confirmed\n# result['Deaths'] = deaths['Deaths'].values\n# result['Recovered'] = recovered['Recovered'].values\n\n# new_data = result\n# new_data['Date'] = pd.to_datetime(new_data['Date'])\n# new_data = new_data.reset_index(drop=True)\n# new_data['Active'] = new_data['Confirmed'] - (new_data['Deaths'] + new_data['Recovered'])\n# data = new_data","01361790":"data = pd.read_csv('\/kaggle\/input\/corona-report\/covid19_clean_complete.csv', parse_dates=['Date'])\ndata['Active'] = data['Confirmed'] - (data['Deaths'] + data['Recovered'])\ndata = data\nwithout_china = data[data['Country\/Region'] != 'China']","d1314b14":"last_max_data = data.groupby(['Date'])['Confirmed', 'Deaths', 'Recovered', 'Active'].sum()\nlast_max_data = last_max_data.reset_index()\nlast_max_data = last_max_data[last_max_data['Date'] == max(last_max_data['Date'])]\nlast_max_data = last_max_data.reset_index(drop=True)\nlast_max_data['Deaths %'] = round(100 * last_max_data['Deaths'] \/ last_max_data['Confirmed'], 2)\nlast_max_data['Recovered %'] = round(100 * last_max_data['Recovered'] \/ last_max_data['Confirmed'], 2)\nlast_max_data['Active %'] = round(100 * last_max_data['Active'] \/ last_max_data['Confirmed'], 2)\nlast_max_data.style.background_gradient(cmap='Pastel1')","2a874125":"wc_last_max_data = without_china.groupby(['Date'])['Confirmed', 'Deaths', 'Recovered', 'Active'].sum()\nwc_last_max_data = wc_last_max_data.reset_index()\nwc_last_max_data = wc_last_max_data[wc_last_max_data['Date'] == max(wc_last_max_data['Date'])]\nwc_last_max_data = wc_last_max_data.reset_index(drop=True)\nwc_last_max_data['Deaths %'] = round(100 * wc_last_max_data['Deaths'] \/ wc_last_max_data['Confirmed'], 2)\nwc_last_max_data['Recovered %'] = round(100 * wc_last_max_data['Recovered'] \/ wc_last_max_data['Confirmed'], 2)\nwc_last_max_data['Active %'] = round(100 * wc_last_max_data['Active'] \/ wc_last_max_data['Confirmed'], 2)\nwc_last_max_data.style.background_gradient(cmap='Pastel1')","028621a6":"# color pallette\ncnf = '#67000d' # confirmed - dark brown\ndth = '#ff2e63' # death - red\nrec = '#21bf73' # recovered - cyan\nact = '#636efa' # active case - yellow","f53ac840":"pi_data = last_max_data.melt(id_vars=\"Date\", value_vars=['Active', 'Deaths', 'Recovered'], var_name='Case', value_name='Count')\nfig = px.pie(pi_data, values='Count', names='Case', color_discrete_sequence=[act, rec, dth])\nfig.show()","3cadc8af":"pi_data = wc_last_max_data.melt(id_vars=\"Date\", value_vars=['Active', 'Deaths', 'Recovered'], var_name='Case', value_name='Count')\n# df = px.pi_data.tips()\nfig = px.pie(pi_data, values='Count', names='Case', color_discrete_sequence=[act, rec, dth])\nfig.show()","08354d98":"area_data = data.groupby(['Date'])['Deaths', 'Recovered', 'Active'].sum().reset_index()\narea_data = area_data.melt(id_vars=\"Date\", value_vars=['Deaths', 'Recovered', 'Active'], var_name='Case', value_name='Count')\nfig = px.area(area_data, x=\"Date\", y=\"Count\", color='Case',\n             title='Cases over time', color_discrete_sequence = [dth, rec, act])\nfig.show()","1ea15108":"wc_area_data = without_china.groupby(['Date'])['Deaths', 'Recovered', 'Active'].sum().reset_index()\nwc_area_data = wc_area_data.melt(id_vars=\"Date\", value_vars=['Deaths', 'Recovered', 'Active'], var_name='Case', value_name='Count')\nfig = px.area(wc_area_data, x=\"Date\", y=\"Count\", color='Case',\n             title='Outside China Cases over time', color_discrete_sequence = [dth, rec, act])\nfig.show()","94be7d78":"![](http:\/\/i.imgur.com\/9uXdpfl.jpg)","3cc4cc70":"### Recommendations\n + Standard recommendations to prevent infection spread include regular hand washing, covering mouth and nose when coughing and sneezing, thoroughly cooking meat and eggs. Avoid close contact with anyone showing symptoms of respiratory illness such as coughing and sneezing. \n \n+ After these analyzes, I expect that the home stone comes first in terms of other preventive measures such as sterilization and others. The home stone is the most effective recommendation, so everyone in the world should feel a sense responsibility and not leave the house except for the extreme necessity as happened in China, for the public interest and raise the ratio of recovery to Vulnerability and reduce the spread of the virus.\n\n+ To reduce the spread of the virus, you must deal as if you were infected with it, and avoid transportation, offices, crowded places and gatherings, thus reducing the chance of you getting the virus and its spread as well.  This is called \"social distance.\" If implemented by a number of us, the virus will remain circulating but much slower and over time, others will become infected, but the number of critical cases that need hospitals will decrease daily, and thus there will be no pressure on the health system, thus stabilizing the curve of those cases.  , And these people receive treatment and the number of deaths decreases accordingly.  Those are the ways the epidemic will go, but this way will only happen when we each do his own part.  Therefore, experts and officials strongly recommend \"flattening the curve\" by move away from gatherings and stay at home as much as possible, and for this reason, the Kingdom of Saudi Arabia obliged its employees to work remotely from home, canceled sports matches, universities, schools and completed distance education at the present time.","0639f656":"**Outside China, active, recovered, deaths Percentage**","634fae72":"### ***The Analytics***\n+ As we see that the death rate worldwide was 4.15%, which is much lower than the world death rate excluding China, which is 4.21%. While the worldwide recovery rate is 32.1%, it is three times the worldwide recovery rate excluding China, which is 8.38%. This means that its recovery rate in China is 23.72%. This is because China is taking effective precautionary decisions to overcome this crisis, including local quarantine and non-roaming.","314c2467":"### INTRODUCTION\n+ In Janary of 2020 initial report came about posible outbreak within China provincy of Hubei. Since then outbreak has developed through other Chinas provenices and now through most of the continents. We will try to describe and analyze data to reveal mortality and recovery rates and how to reduce mortality.","33db574e":"**Outside China, Rest of the World**","de02ad89":"Prepare Data","48c7f350":"**active, recovered, deaths Percentage**","bdfca0a3":"### Total confirmed, deaths, recovered, active With Percentage"}}