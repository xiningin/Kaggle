{"cell_type":{"2367e8dd":"code","b52029d9":"code","7ac169a8":"code","55dd5e94":"code","a2c00739":"code","23ba6fd1":"code","e458e40b":"code","d280c6a5":"code","63268b0f":"code","ebb55f28":"code","bbac94e6":"code","7051c3b6":"code","0d7312ed":"code","b38d60e7":"code","102c04ac":"code","843951a2":"code","7e806697":"code","21771ae6":"code","6f3b2810":"code","3384bc0f":"code","ac9d099c":"code","ccaf1ddb":"code","f6d334e5":"code","aa23a0f8":"code","0e549a86":"code","48164466":"code","ecd20b58":"code","b82ca4e3":"code","75cf5bae":"code","e023c284":"code","d1cd167d":"markdown","de10ff0e":"markdown","990e34fc":"markdown","068988f8":"markdown","308c45df":"markdown","691af882":"markdown"},"source":{"2367e8dd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go","b52029d9":"root = '..\/input\/m5-forecasting-accuracy'\n\ncalendar = pd.read_csv(root + '\/calendar.csv')\nsales_train_valid = pd.read_csv(root + '\/sales_train_validation.csv')\nsell_prices = pd.read_csv(root + '\/sell_prices.csv')\n\nsubmission = pd.read_csv(root + '\/sample_submission.csv')\n\nprint('Size of calendar', calendar.shape)\nprint('Size of sales_train_valid', sales_train_valid.shape)\nprint('Size of sell_prices', sell_prices.shape)","7ac169a8":"calendar.head()","55dd5e94":"sales_train_valid.head()","a2c00739":"sell_prices.head()","23ba6fd1":"submission.head()","e458e40b":"# Missing data\ndef missing_data(data):\n    total = data.isnull().sum()\n    percent = (total\/data.isnull().count()*100)\n    tp = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'], sort=True)\n    \n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tp['Types'] = types\n    \n    return tp","d280c6a5":"missing_data(calendar).head(8)","63268b0f":"sales_train_valid['state_id'].unique()","ebb55f28":"sales_train_valid['cat_id'].unique()","bbac94e6":"sales_train_valid['item_id'].unique()","7051c3b6":"def most_frequent_values(col):\n    total = col.count()\n    itm = col.value_counts().index[0]\n    val = col.value_counts().values[0]\n    percent = np.round(val \/ total * 100, 3)\n    dic = {'Total': total, 'Most Frequent Item': itm, 'Value': val, 'Percent': percent}\n    return dic","0d7312ed":"col = sales_train_valid['cat_id']\nmost_frequent_values(col)","b38d60e7":"col = sales_train_valid['state_id']\nmost_frequent_values(col)","102c04ac":"sell_prices['store_id'].unique()","843951a2":"sell_prices['item_id'].unique()","7e806697":"sell_prices.loc[sell_prices['item_id'] == 'FOODS_3_827']","21771ae6":"# view a single item states\nsales_region = sales_train_valid.loc[sales_train_valid['item_id'] == 'FOODS_3_827']","6f3b2810":"pd.crosstab(sales_region['state_id'], sales_region['store_id'])","3384bc0f":"sales_region.head()","ac9d099c":"fig = go.Figure()\nfor i in range(10):\n    fig.add_trace(go.Scatter(x=None, y=sales_region.iloc[i, 6:].values,\n                        mode='lines',\n                        name=sales_region.iloc[i, 5]))\nfig.update_layout(title=\"FOODS_3_827 sales\")\nfig.show()","ccaf1ddb":"fig = go.Figure()\nfor i in range(10):\n    fig.add_trace(go.Scatter(x=None, y=sales_region.iloc[i, 6:].rolling(30).mean().values,\n                        mode='lines',\n                        name=sales_region.iloc[i, 5]))\nfig.update_layout(title=\"FOODS_3_827 sales, rolling mean 30 days\")\nfig.show()","f6d334e5":"fig = go.Figure()\nfor i in range(10):\n    fig.add_trace(go.Scatter(x=None, y=sales_region.iloc[i, 6:].rolling(100).mean().values,\n                        mode='lines',\n                        name=sales_region.iloc[i, 5]))\nfig.update_layout(title=\"FOODS_3_827 sales, rolling mean 100 days\")\nfig.show()","aa23a0f8":"sell_prices.loc[sell_prices['store_id'] == 'CA_1']","0e549a86":"sales_train_valid.loc[sales_train_valid['store_id'] == 'CA_1']","48164466":"ca_1_sales = sales_train_valid.loc[sales_train_valid['store_id'] == 'CA_1']\npd.crosstab(ca_1_sales['cat_id'], ca_1_sales['dept_id'])","ecd20b58":"ca_1_sales['dept_id'].unique()","b82ca4e3":"fig = go.Figure()\nfor dep in ca_1_sales['dept_id'].unique():\n    fig.add_trace(go.Scatter(x=None, y=ca_1_sales.loc[ca_1_sales['dept_id'] == dep].rolling(30).mean().values,\n                        mode='lines',\n                        name=dep))\nfig.update_layout(title=\"CA_1 sales of dep, rolling mean 30 days\")\nfig.show()","75cf5bae":"ca_1_sales['cat_id'].unique()","e023c284":"fig = go.Figure()\nfor cat in ca_1_sales['cat_id'].unique():\n    fig.add_trace(go.Scatter(x=None, y=ca_1_sales.loc[ca_1_sales['cat_id'] == cat].rolling(30).mean().values,\n                        mode='lines',\n                        name=cat))\nfig.update_layout(title=\"CA_1 sales of cat, rolling mean 30 days\")\nfig.show()","d1cd167d":"So, FOODS_3_827 is sold in 3 states and 10 stores","de10ff0e":"Now looking at store_id, CA_1 sales","990e34fc":"Sell price for 10 stores in 3 states for FOODS_3_827","068988f8":"Now plotting d_1, d_2,..... columns with state_id as label (for given rows)","308c45df":"# Basic visualization and data exploration ","691af882":"Submission file should have forecast for the next 28 days"}}