{"cell_type":{"13701e96":"code","90a432d6":"code","424d3bff":"code","0fecf98d":"code","ef637514":"code","c400410a":"code","8d1eb746":"code","c8206863":"code","cf2d977e":"code","40beffc4":"code","585e7ed0":"markdown","23647bdd":"markdown","9916526d":"markdown","1367071c":"markdown","7d3c45b0":"markdown"},"source":{"13701e96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90a432d6":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","424d3bff":"#importing the datset\nds = pd.read_csv('..\/input\/positionsalaries-data\/position-salaries data.csv')\nx = ds.iloc[:, 1:-1].values\ny = ds.iloc[:, -1].values","0fecf98d":"ds.head()","ef637514":"ds.info()","c400410a":"x = ds.iloc[:, 1:-1].values\ny = ds.iloc[:, -1].values\nprint(x)\nprint(y)","8d1eb746":"#applying feature  scaling\nfrom sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\nx = sc_x.fit_transform(x)\nsc_y = StandardScaler()\ny = sc_y.fit_transform(y.reshape(-1,1))\nprint(x)\nprint(y)","c8206863":"#training the model\nfrom sklearn.svm import SVR\nsvr = SVR(kernel ='rbf')\nsvr.fit(x, y.flatten())","cf2d977e":"#visualising prediction results\nplt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y), c = 'red')\nplt.plot(sc_x.inverse_transform(x), sc_y.inverse_transform(svr.predict(x)))","40beffc4":"#checking accuracy\nfrom sklearn.metrics import r2_score\nr2_score(y, svr.predict(x))","585e7ed0":"Position and Level column, both show the position of the individual's previous job, so to avoid categorical data in position column, we use only Level column as the independent variable.","23647bdd":"We do not split the data since in the dataset there are only 10 values. So, splitting the data further into test and train would decrease the accuracy.","9916526d":"**SVR (To predict salaries based on previous job position)** -\nTo check if the person is speaking the truth or bluffing.","1367071c":"**Accuracy = 75.16%**","7d3c45b0":"*Feature Scaling*\nIt is necessary in SVR since the it has an implicit equation for dependent and independent variables.\n**Standardization** is done."}}