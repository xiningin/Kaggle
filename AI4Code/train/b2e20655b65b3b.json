{"cell_type":{"824cd0aa":"code","16b969fa":"code","9cadbcf0":"code","f0b267f0":"code","7ed55ef2":"code","2c9786fd":"code","400dfebc":"code","07ae3c3e":"code","74e3050d":"code","8117434d":"code","bd554716":"code","8a7ff4f5":"code","8b092ef9":"code","4d15a831":"code","f2fa8a4d":"markdown","13a43e60":"markdown","e0155562":"markdown"},"source":{"824cd0aa":"import numpy as np\nimport pandas as pd\nfrom pathlib import Path\nimport os.path\nimport tensorflow as tf\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.layers import Conv2D, Flatten, MaxPooling2D, Dense, Dropout, BatchNormalization, LeakyReLU\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.optimizers.schedules import ExponentialDecay\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import classification_report\n","16b969fa":"image_dir=Path('..\/input\/basicshapes\/shapes')","9cadbcf0":"file_path=list(image_dir.glob(r'**\/*.png'))\nlabels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1], file_path))\nfile_path=pd.Series(file_path,name='Filepath').astype(str)\nlabels = pd.Series(labels, name='Label')\nimage_df = pd.concat([file_path, labels], axis=1)\ntrain_df, test_df = train_test_split(image_df, train_size=0.7, shuffle=True, random_state=1)","f0b267f0":"train_df.shape","7ed55ef2":"test_df.shape","2c9786fd":"train_generator = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255,\n    validation_split=0.2\n)\n\ntest_generator = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255\n)","400dfebc":"train_images = train_generator.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(28, 28),\n    color_mode='grayscale',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='training'\n)","07ae3c3e":"val_images = train_generator.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(28, 28),\n    color_mode='grayscale',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='validation'\n)\n\ntest_images = test_generator.flow_from_dataframe(\n    dataframe=test_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(28, 28),\n    color_mode='grayscale',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=False\n)\n","74e3050d":"fig, ax = plt.subplots(4,4,figsize=(16,16))\nfor i in range(16):\n    ind = np.random.randint(32)\n    image = train_images[0][0][ind]\n    ax[i\/\/4][i%4].imshow(image, cmap='gray')\n    ","8117434d":"model = Sequential([\n    Conv2D(16,(3,3), input_shape=(28,28,1)),\n    LeakyReLU(),\n    MaxPooling2D((2,2)),\n    Conv2D(32, (3,3)),\n    LeakyReLU(),\n    MaxPooling2D((2,2)),\n    Dropout(0.5),\n    Flatten(),\n    Dense(512),\n    Dropout(0.5),\n    LeakyReLU(),\n    Dense(256),\n    LeakyReLU(),\n    Dropout(0.5),\n    Dense(3, activation = 'softmax')\n])","bd554716":"model.summary()","8a7ff4f5":"\n# model = tf.keras.Model(inputs=model, outputs=outputs)\n\nmodel.compile(\n    optimizer='adam',\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)\n\nhistory = model.fit(\n    train_images,\n    validation_data=val_images,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.ModelCheckpoint('.\/model.h5', save_best_only=True, save_weights_only=True)\n    ]\n)","8b092ef9":"model.load_weights('.\/model.h5')","4d15a831":"results = model.evaluate(test_images, verbose=0)\n\nprint(\"    Loss: {:.4f}\".format(results[0]))\nprint(\"Accuracy: {:.2f}%\".format(results[1] * 100))","f2fa8a4d":"# Importing required Libraries","13a43e60":"# Creating File DataFrame","e0155562":"# Shape Image Classification "}}