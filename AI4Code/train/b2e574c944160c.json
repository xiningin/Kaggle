{"cell_type":{"43965795":"code","b776a110":"code","b610addc":"code","5a2a6f50":"code","97a53b12":"code","f4b5eb4c":"code","55e163b0":"code","1aaa035e":"code","fa6daf84":"code","54996789":"code","e927dce4":"markdown","fc2ecf6f":"markdown","4340471b":"markdown"},"source":{"43965795":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n# visualize\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nfrom matplotlib import pyplot\nfrom matplotlib.ticker import ScalarFormatter\nsns.set_context(\"talk\")\nstyle.use('seaborn-colorblind')\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b776a110":"INPUT_DIR = '..\/input\/numerai-train-validation-with-kazutsugi-nomi\/numerai_training_validation_target_nomi.csv'","b610addc":"%%time\n\ndef read_data(input_dir='..\/input'):\n    # read data\n    df = pd.read_csv(input_dir)\n    \n    # map features to int to reduce memory requirements\n    feature_cols = df.columns[df.columns.str.startswith('feature')]\n    mapping = {0.0 : 0, 0.25 : 1, 0.5 : 2, 0.75 : 3, 1.0 : 4}\n    for c in feature_cols:\n        df[c] = df[c].map(mapping).astype(np.uint8)\n    return df\n\ndf = read_data(INPUT_DIR)","5a2a6f50":"print(df.shape)\ndf.head()","97a53b12":"# save as feather for later use\ndf.to_feather('train_validation_two_targets.feather')\nprint('saved in the feather format!')","f4b5eb4c":"# features\nfeatures = df.columns[df.columns.str.startswith('feature')].values.tolist()\nprint('{:,} features'.format(len(features)))","55e163b0":"# data_type\ndf['data_type'].value_counts()","1aaa035e":"# era\nfor d in df['data_type'].unique():\n    print('{:,} eras for data type = {}'.format(df.query(f'data_type == \"{d}\"')['era'].nunique(), d))","fa6daf84":"# targets\ntargets = [f for f in df.columns.values.tolist() if 'target' in f]\ntargets","54996789":"sns.jointplot(data=df, x=\"target_kazutsugi\", y=\"target_nomi\")","e927dce4":"# Read data","fc2ecf6f":"# Config","4340471b":"# EDA (Exploratory Data Analysis)"}}