{"cell_type":{"80c2f1da":"code","39ecda78":"code","d0c25160":"code","30e03d5b":"code","ccb8db3f":"code","c347cf7e":"code","6d753a15":"code","79f80878":"code","57ed4430":"code","437db197":"code","123c7bd6":"code","b8a49e9f":"code","6f41061d":"code","674d3538":"markdown"},"source":{"80c2f1da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39ecda78":"import numpy as np\nfrom sklearn import preprocessing\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.metrics import mean_squared_error","d0c25160":"df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","30e03d5b":"continuous_vars = ['GRE Score', 'TOEFL Score', 'CGPA']\ncategorical_vars = ['University Rating', 'SOP', 'LOR ', 'Research']\ntarget = 'Chance of Admit '","ccb8db3f":"continuous_df = df[continuous_vars]\ncontinuous_df = preprocessing.StandardScaler().fit_transform(continuous_df)\ncontinuous_df","c347cf7e":"categorical_df = df[categorical_vars]\nenc = preprocessing.OneHotEncoder(drop='first').fit(categorical_df)\nenc_categorical_df = enc.transform(categorical_df).toarray()\nenc_categorical_df","6d753a15":"print(continuous_df.shape, enc_categorical_df.shape)","79f80878":"processed_data = np.concatenate((continuous_df, enc_categorical_df), axis=1)\nprocessed_data.shape","57ed4430":"y = df[target]","437db197":"X_train = processed_data[0:400]\nX_test = processed_data[400:500]\ny_train = y.iloc[0:400]\ny_test = y.iloc[400:500]\nprint(X_train.shape, y_train.shape, X_test.shape, y_test.shape)","123c7bd6":"reg = MLPRegressor(max_iter=1000).fit(X_train, y_train)","b8a49e9f":"y_pred = reg.predict(X_test)","6f41061d":"mean_squared_error(y_test, y_pred)","674d3538":"Seperate out different types of various for preprocessing"}}