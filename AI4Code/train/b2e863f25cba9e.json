{"cell_type":{"36f0ae73":"code","f920a284":"code","5a15dd51":"code","801fe280":"code","d8001d28":"code","72f5c0f0":"code","158d26ba":"code","a8ca5b81":"code","f25a781f":"code","7cce7cd7":"code","628b6dff":"code","b351a920":"code","edf79142":"code","107e4c75":"code","d7f0fd5b":"code","ff6d4e2c":"code","0f2585b8":"code","cf66452e":"code","4fba0964":"code","86d4064d":"code","4595e027":"code","ca7b733f":"code","b0f1d1f4":"code","6c9fadd7":"code","591a8e31":"code","f59883f1":"code","693eaf5e":"code","51571dbe":"code","5d0e79d0":"code","1a654931":"code","78e8f90a":"code","b2c8e9c8":"code","18f5d4f5":"code","f8fc8f0e":"code","8a9e7038":"code","2efea691":"code","948555d5":"code","770e68a8":"code","dda01a6b":"code","113cbc80":"code","ecd5c2db":"code","0cfb9c48":"markdown","f7df1713":"markdown","55e1e778":"markdown","8f20c10b":"markdown","3f68b67c":"markdown","56d081b4":"markdown","81fbc2ff":"markdown","db383618":"markdown","fb0bb1b5":"markdown","42581bbd":"markdown","15e5d114":"markdown","ec580c90":"markdown","21ad7c52":"markdown","e59847a2":"markdown","e779df04":"markdown","f6de071f":"markdown","043dbb66":"markdown","c03ec100":"markdown","2b389f87":"markdown","6f51a3e9":"markdown","557f43e4":"markdown","af1a0f67":"markdown","22858295":"markdown","67718600":"markdown","d18f7b7f":"markdown","440f6897":"markdown","7ea8db8e":"markdown","85490d98":"markdown","dd28f088":"markdown","949dc8bf":"markdown","f7f1fae8":"markdown","cf62a362":"markdown","8e5fd7f6":"markdown","77501d4d":"markdown","b84e7b42":"markdown","f1ccc926":"markdown","382c60d7":"markdown","d3a29644":"markdown","86a17325":"markdown","07c5634e":"markdown","cd48c159":"markdown","502842bb":"markdown","3e655460":"markdown","399a7a7d":"markdown","672d71bb":"markdown","074168c8":"markdown"},"source":{"36f0ae73":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.pyplot import figure\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport numpy as np\nimport plotly.figure_factory as ff","f920a284":"df = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\nprint(df.shape)\ndf.head()","5a15dd51":"df[['age','avg_glucose_level','bmi']].describe()","801fe280":"counts = df['stroke'].value_counts().reset_index()\ncounts['index'] = np.where(counts['index'] == 0, 'No stroke','stroke')\n\nfig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"xy\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"Personas con ACV vs las que no\", \"Porcentaje de v\u00edctimas\"))\n\n\nfig.add_trace(go.Bar(x=counts['index'], y=counts['stroke']),\n              row=1, col=1)\n\nfig.update_xaxes(title_text=\"Sufrio ACV\", row=1, col=1)\nfig.update_yaxes(title_text=\"Cantidad\", row=1, col=1)\n\n\n\nfig.add_trace(go.Pie(values=counts['stroke'], labels=counts['index'], textinfo='label+percent'),\n              row=1, col=2)\n\n\nfig.update_layout(title='Distribucion de la variable objetivo', height=500, showlegend=False)\n\nfig.show()","d8001d28":"df_no_stroke = df[df['stroke'] == 0]\ndf_stroke = df[df['stroke'] == 1]","72f5c0f0":"df_no_stroke[['age','avg_glucose_level','bmi']].describe()","158d26ba":"df_stroke[['age','avg_glucose_level','bmi']].describe()","a8ca5b81":"hist_data = [df_stroke['age'], df_no_stroke['age']]\n\ngroup_labels = ['stroke age', 'no stroke age']\ncolors = ['#A56CC1', '#63F5EF']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=2, colors=colors, show_rug=False)\nfig.update_layout(title_text='Edades de v\u00edctimas y no v\u00edctimas')\n\nfig.show()","f25a781f":"hist_data = [df_stroke['avg_glucose_level'], df_no_stroke['avg_glucose_level']]\n\ngroup_labels = ['stroke avg_glucose_level', 'no stroke avg_glucose_level']\ncolors = ['#A56CC1', '#63F5EF']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=10, colors=colors, show_rug=False)\nfig.update_layout(title_text='Niveles de glucosa de de v\u00edctimas y no v\u00edctimas')\n\nfig.show()","7cce7cd7":"hist_data = [df_stroke['bmi'].dropna(), df_no_stroke['bmi'].dropna()]\n\ngroup_labels = ['stroke bmi', 'no stroke bmi']\ncolors = ['#A56CC1', '#63F5EF']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=2, colors=colors, show_rug=False)\nfig.update_layout(title_text='Bmi de v\u00edctimas y no v\u00edctimas')\n\nfig.show()","628b6dff":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_gender = df_stroke.groupby(['gender'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_gender['stroke'], labels=group_gender['gender'], textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_gender = df_no_stroke.groupby(['gender'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_gender['stroke'], labels=group_gender['gender'], textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Generos en', height=500)\n\nfig.show()","b351a920":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\",\n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_hypertension = df_stroke.groupby(['hypertension'])['stroke'].count().reset_index()\ngroup_hypertension['hypertension'] = np.where(group_hypertension['hypertension'] == 1, 'Hypertension', 'without hypertension')\nfig.add_trace(go.Pie(values=group_hypertension['stroke'], labels=group_hypertension['hypertension'], hole=.3, textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_hypertension = df_no_stroke.groupby(['hypertension'])['stroke'].count().reset_index()\ngroup_hypertension['hypertension'] = np.where(group_hypertension['hypertension'] == 1, 'Hypertension', 'without hypertension')\nfig.add_trace(go.Pie(values=group_hypertension['stroke'], labels=group_hypertension['hypertension'], hole=.3, textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Hiptertensi\u00f3n en', height=500)\n\nfig.show()","edf79142":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"Con hipertensi\u00f3n\", \n                    \"Sin hipertensi\u00f3n\")\n)\n\ndf_ht = df[df['hypertension'] == 1]\ndf_no_ht = df[df['hypertension'] == 0]\n\n\ngroup_hypertension = df_ht.groupby('stroke').agg({'stroke':'count'}).rename(columns={'stroke':'count'}).reset_index()\ngroup_hypertension['stroke'] = np.where(group_hypertension['stroke'] == 1, 'Stroke', 'No stroke')\nfig.add_trace(go.Pie(values=group_hypertension['count'], labels=group_hypertension['stroke'], hole=0.3),\n              row=1, col=1)\n\ngroup_hypertension = df_no_ht.groupby('stroke').agg({'stroke':'count'}).rename(columns={'stroke':'count'}).reset_index()\ngroup_hypertension['stroke'] = np.where(group_hypertension['stroke'] == 1, 'Stroke', 'No stroke')\nfig.add_trace(go.Pie(values=group_hypertension['count'], labels=group_hypertension['stroke'], hole=0.3),\n              row=1, col=2)\n\nfig.update_layout(title='ACV en personas', height=500)\n\nfig.show()","107e4c75":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_heart_disease = df_stroke.groupby(['heart_disease'])['stroke'].count().reset_index()\ngroup_heart_disease['heart_disease'] = np.where(group_heart_disease['heart_disease'] == 1,'heart disease','without heart disease')\nfig.add_trace(go.Pie(values=group_heart_disease['stroke'], labels=group_heart_disease['heart_disease']),\n              row=1, col=1)\n\ngroup_heart_disease = df_no_stroke.groupby(['heart_disease'])['stroke'].count().reset_index()\ngroup_heart_disease['heart_disease'] = np.where(group_heart_disease['heart_disease'] == 1,'heart disease','without heart disease')\nfig.add_trace(go.Pie(values=group_heart_disease['stroke'], labels=group_heart_disease['heart_disease']),\n              row=1, col=2)\n\nfig.update_layout(title='Enfermedades card\u00edacas en', height=500)\n\nfig.show()","d7f0fd5b":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"Con enfermedades card\u00edcacas\", \n                    \"Sin enfermedades card\u00edcacas\")\n)\n\ndf_hd = df[df['heart_disease'] == 1]\ndf_no_hd = df[df['heart_disease'] == 0]\n\n\ngroup_heart = df_hd.groupby('stroke').agg({'stroke':'count'}).rename(columns={'stroke':'count'}).reset_index()\ngroup_heart['stroke'] = np.where(group_heart['stroke'] == 1, 'Stroke', 'No stroke')\nfig.add_trace(go.Pie(values=group_heart['count'], labels=group_heart['stroke'], hole=0.3),\n              row=1, col=1)\n\ngroup_heart = df_no_ht.groupby('stroke').agg({'stroke':'count'}).rename(columns={'stroke':'count'}).reset_index()\ngroup_heart['stroke'] = np.where(group_heart['stroke'] == 1, 'Stroke', 'No stroke')\nfig.add_trace(go.Pie(values=group_heart['count'], labels=group_heart['stroke'], hole=0.3),\n              row=1, col=2)\n\nfig.update_layout(title='ACV en personas', height=500)\n\nfig.show()","ff6d4e2c":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_ever_married = df_stroke.groupby(['ever_married'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_ever_married['stroke'], labels=group_ever_married['ever_married'], textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_ever_married = df_no_stroke.groupby(['ever_married'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_ever_married['stroke'], labels=group_ever_married['ever_married'], textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Matrimonio en', height=500)\n\nfig.show()","0f2585b8":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_work_type = df_stroke.groupby(['work_type'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_work_type['stroke'], labels=group_work_type['work_type'], textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_work_type = df_no_stroke.groupby(['work_type'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_work_type['stroke'], labels=group_work_type['work_type'], textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Tipo de trabajo en', height=500)\n\nfig.show()","cf66452e":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_smoking_status = df_stroke.groupby(['smoking_status'])['stroke'].count().reset_index()\ngroup_smoking_status = group_smoking_status[group_smoking_status['smoking_status'] != 'Unknown']\nfig.add_trace(go.Pie(values=group_smoking_status['stroke'], labels=group_smoking_status['smoking_status'], textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_smoking_status = df_no_stroke.groupby(['smoking_status'])['stroke'].count().reset_index()\ngroup_smoking_status = group_smoking_status[group_smoking_status['smoking_status'] != 'Unknown']\nfig.add_trace(go.Pie(values=group_smoking_status['stroke'], labels=group_smoking_status['smoking_status'], textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Tabaquismo en ', height=500)\n\nfig.show()","4fba0964":"fig = make_subplots(\n    rows=1, cols=2,\n    specs=[[{\"type\": \"domain\"}, {\"type\": \"domain\"}]],\n    subplot_titles=(\"V\u00edctimas de ACV\", \n                    \"No v\u00edctimas de ACV\")\n)\n\ngroup_residence = df_stroke.groupby(['Residence_type'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_residence['stroke'], labels=group_residence['Residence_type'], hole=0.3, textinfo='label+percent'),\n              row=1, col=1)\n\ngroup_residence = df_no_stroke.groupby(['Residence_type'])['stroke'].count().reset_index()\nfig.add_trace(go.Pie(values=group_residence['stroke'], labels=group_residence['Residence_type'], hole=0.3, textinfo='label+percent'),\n              row=1, col=2)\n\nfig.update_layout(title='Residencia en', height=500)\n\nfig.show()","86d4064d":"print(df_stroke.shape)\nprint(df_no_stroke.shape)\n\ndf_no_stroke = df_no_stroke.sample(df_stroke.shape[0])\ndf = df_stroke.append(df_no_stroke)\n\nprint(df.shape)","4595e027":"df.isna().sum()","ca7b733f":"df = df.dropna()","b0f1d1f4":"fig = px.scatter(df, x=\"age\", y=\"avg_glucose_level\", color=\"avg_glucose_level\", color_continuous_scale='bluered',\n                 size='age', hover_data=['bmi'])\nfig.show()","6c9fadd7":"fig = px.scatter(df, x=\"avg_glucose_level\", y=\"bmi\", color=\"bmi\", color_continuous_scale='bluered',\n                 size='bmi', hover_data=['bmi'])\nfig.show()","591a8e31":"fig = px.scatter(df, x=\"age\", y=\"bmi\", color=\"bmi\", color_continuous_scale='bluered',\n                 size='avg_glucose_level', hover_data=['bmi'])\nfig.show()","f59883f1":"fig = px.scatter_3d(df, x='age', y='avg_glucose_level', z='bmi',\n              color='stroke', color_continuous_scale='bluered', opacity=0.5)\nfig.show()","693eaf5e":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler\nimport tensorflow as tf","51571dbe":"df['ever_married'] = np.where(df['ever_married'] == 'Yes', 1, 0)\ndf['Residence_type'] = np.where(df['Residence_type'] == 'Urban', 1, 0)\n\nwork_type_map = {\n    'Private': 1,\n    'Self-employed': 2,\n    'Govt_job': 3,\n    'children': 4, \n    'Never_worked': 5, \n}\n\ndf['work_type'] = df['work_type'].map(work_type_map)\n\nsmoking_status_map = {\n    'formerly smoked': 1,\n    'never smoked': 2,\n    'smokes': 3,\n    'Unknown': 4,\n}\n\ndf['smoking_status'] = df['smoking_status'].map(smoking_status_map)\n\ngender_map = {\n    'Male': 1,\n    'Female': 2\n}\n\ndf['gender'] = df['gender'].map(gender_map)\n\ndf.head()","5d0e79d0":"print(df['gender'].value_counts())\nprint('='*63)\n\ndf = df[df['gender'] != 'Other']\n\nprint(df['gender'].value_counts())\nprint('='*63)\n\nprint(df.shape)\n","1a654931":"x_train, x_test, y_train, y_test = train_test_split(df.drop(['stroke','id'], axis=1), \n                                                    df['stroke'], \n                                                    test_size=0.3,\n                                                   random_state=42)","78e8f90a":"print(x_train.shape)\nprint(x_test.shape)","b2c8e9c8":"scaler = StandardScaler()\nscaler.fit(x_train)\nx_train = scaler.transform(x_train)\nx_train","18f5d4f5":"x_test = scaler.transform(x_test)\nx_test","f8fc8f0e":"model = tf.keras.models.Sequential()\n\nmodel.add(tf.keras.layers.Dense(32, input_dim = x_train.shape[1], activation=\"relu\"))\nmodel.add(tf.keras.layers.Dropout(0.2))\n\nmodel.add(tf.keras.layers.Dense(16,activation=\"relu\"))\nmodel.add(tf.keras.layers.Dropout(0.2))\n\nmodel.add(tf.keras.layers.Dense(8,activation=\"relu\"))\nmodel.add(tf.keras.layers.Dropout(0.2))\n\nmodel.add(tf.keras.layers.Dense(1, activation = \"sigmoid\")) \n\nmodel.compile(optimizer='sgd',loss=\"binary_crossentropy\",metrics=[tf.keras.metrics.Recall(), tf.keras.metrics.Precision()])\n\nprint(model.summary())","8a9e7038":"model.fit(x_train, y_train, validation_data=(x_test, y_test), \n          epochs=400, batch_size=32)","2efea691":"df_metrics = pd.DataFrame(model.history.history).reset_index().rename(columns={'index':'epoch'})\ndf_metrics","948555d5":"df_metrics = pd.DataFrame(model.history.history)\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['recall'],\n                    mode='lines',\n                    name='recall'))\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['val_recall'],\n                    mode='lines',\n                    name='val_recall'))\n\nfig.update_layout(title='Recall',\n                   xaxis_title='Epoch',\n                   yaxis_title='Recall')\n\nfig.show()","770e68a8":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['precision'],\n                    mode='lines',\n                    name='precision'))\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['val_precision'],\n                    mode='lines',\n                    name='val_precision'))\n\nfig.update_layout(title='Precision',\n                   xaxis_title='Epoch',\n                   yaxis_title='Precision')\nfig.show()","dda01a6b":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['loss'],\n                    mode='lines',\n                    name='loss'))\nfig.add_trace(go.Scatter(x=df_metrics.index, y=df_metrics['val_loss'],\n                    mode='lines',\n                    name='val_loss'))\n\nfig.update_layout(title='Loss',\n                   xaxis_title='Epoch',\n                   yaxis_title='Loss')\n\nfig.show()","113cbc80":"from sklearn.metrics import confusion_matrix\nimport itertools\nimport matplotlib.pyplot as plt\n\ndef plot_confusion_matrix(cm, classes,\n                        normalize=False,\n                        title='Confusion matrix',\n                        cmap=plt.cm.Blues):\n    \"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, cm[i, j],\n            horizontalalignment=\"center\",\n            color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')","ecd5c2db":"y_pred = model.predict(x_test)\ny_pred = np.round(y_pred).astype(int)\n\ncm = confusion_matrix(y_test, y_pred)\nplot_confusion_matrix(cm=cm, classes=['stroke', 'no stroke'], title='Confusion Matrix')\n","0cfb9c48":"### Relaciones entre las variables continuas","f7df1713":"#### Promedio de glucosa en funcion de la edad","55e1e778":"Por \u00faltimo en el gr\u00e1fico 3D podemos observar como se relacionan estas tres variables entre si desde distintas perspectivas. Los puntos rojos representan a personas que tuvieron ACV mientras que los azules representan a las que no.","8f20c10b":"### Nivel promedio de glucosa en sangre","3f68b67c":"Por \u00faltimo se escalar\u00e1n las variables del dataset para que el modelo las aprenda mas facilmente: \nhttps:\/\/towardsdatascience.com\/scale-standardize-or-normalize-with-scikit-learn-6ccc7d176a02","56d081b4":"### \u00bfQu\u00e9 porcentaje de las personas sufrieron un ACV?","81fbc2ff":"Visto desde otro \u00e1ngulo, el porcentaje de victimas de accidente cerebrovascular es mayor (13%) en las personas que padecen hipertensi\u00f3n que en las que no (3%).","db383618":"De igual manera, seg\u00fan este gr\u00e1fico pareciera no haber una clara relacion entre el fumar\/no fumar con el accidente cerebrovascular.","fb0bb1b5":"## Pre-procesado de datos, entrenamiento y predicci\u00f3n","42581bbd":"Por otra parte, el \u00edndice de masa corporal pareciera distribuirse casi de igual manera en ambos grupos.","15e5d114":"Podemos observar que el porcentaje de personas casadas es notablemete superior entre las v\u00edctimas de ACV (aproximadamente en un 20%). As\u00ed mismo, no se tiene informaci\u00f3n suficiente para asegurar que ambas variables guardan alg\u00fan tipo de relaci\u00f3n.","ec580c90":"## Entrenamiento","21ad7c52":"En las enfermedades card\u00edacas vemos el mismo escenario que en la hipertensi\u00f3n. El conjunto de personas v\u00edctimas de ACV contiene un mayor porcentaje con problemas card\u00edacos que las personas que no, lo que verifica una de nuestras hip\u00f3tesis iniciales: \"Las enfermedades card\u00edacas guardan estrecha relacion con el ACV\"","e59847a2":"Convierto a numeros cada una de las features categoricas que estaban en formato de texto","e779df04":"Elimino nulos para poder graficar:)","f6de071f":"A simple vista puede notarse que las personas que sufrieron un ACV tienen una mayor media y mediana de edades que las que no.\nLo mismo se cumple, en menor medida, para el promedio de glucosa en sangre.","043dbb66":"Los tipos de trabajos se distribuyen de igual manera en ambos grupos, por lo que no pareciera ser una variable relevante a tener en cuenta.","c03ec100":"## Curvas de aprendizaje","2b389f87":"Notamos que el porcentaje de personas que padecen hipertensi\u00f3n es mayor en aquellas que tuvieron un accidente cerebrovascular que en las que nunca tuvieron este tipo de problema. Seg\u00fan \n[[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.) \"La presi\u00f3n arterial alta es el principal factor de riesgo para los accidentes cerebrovasculares.\".","6f51a3e9":"Nuevamente, al observar los datos desde otro punto de vista, el porcentaje de personas que padecieron un acv es mayor en aquellas que tienen algun tipo de problema card\u00edaco que en las que no.","557f43e4":"Al graficar el \u00edndice de masa corporal en funcion del promedio de glucosa en sangre vemos las mismas nubes de puntos del gr\u00e1fico anterior. A su vez, vemos tambien que las personas que tienen mayor un promedio de glucosa en sangre tienden, ligeramente, a tener un mayor indice de masa corporal.","af1a0f67":"Nuevamente, tampoco pareciera haber una relaci\u00f3n clara entre la residencia de la persona (urbana o rural) y la posibilidad de tener un ACV.","22858295":"En el anterior gr\u00e1fico puede apreciarse el nivel promedio de glucosa en sangre en funci\u00f3n de la edad. No pareciera haber muchas personas menores a 35 a\u00f1os con niveles de glucosa superiores a 150 mg\/dl. As\u00ed mismo, para edades superiores a 35 a\u00f1os se observan dos nubes de puntos, ubicandose una por encima de los 150 mg\/dl llegando hasta los 250 mg\/dl y otra por debajo ubicandose cerca de los 100 mg\/dl\n\n*Nota: En la info del dataset no explicita la unidad de medida del promedio de glucosa en sangre, por lo que me base en lo leido en este [art\u00edculo](https:\/\/medlineplus.gov\/spanish\/ency\/patientinstructions\/000966.htm) para colocar la unidad mg\/dl.*","67718600":"### Genero","d18f7b7f":"# Stroke dataset prediction\n\n## Contexto:\n\nSeg\u00fan la Organizaci\u00f3n Mundial de la Salud (OMS), el accidente cerebrovascular es la segunda causa principal de muerte a nivel mundial, responsable de aproximadamente el 11% del total de muertes.\nEste conjunto de datos se utiliza para predecir si es probable que un paciente sufra un accidente cerebrovascular en funci\u00f3n de los par\u00e1metros de entrada como el sexo, la edad, diversas enfermedades y el tabaquismo. Cada fila de los datos proporciona informaci\u00f3n relevante sobre el paciente.\n\nInformacion de los atributos\n* id: identificador unico\n* gender: \"Male\", \"Female\" o \"Other\"\n* age: Edad del paciente\n* hypertension: 0 si el paciente no tiene hipertension, 1 si el paciente tiene hipertension\n* heart_disease:0 si el paciente no tiene ninguna enfermedad card\u00edaca, 1 si el paciente tiene una enfermedad card\u00edaca\n* ever_married: \"No\" o \"Yes\"\n* work_type: \"children\", \"Govt_jov\", \"Never_worked\", \"Private\" or \"Self-employed\"\n* Residence_type: \"Rural\" or \"Urban\"\n* avg_glucose_level: nivel medio de glucosa en sangre\n* bmi: indice de masa corporal\n* smoking_status: \"formerly smoked\", \"never smoked\", \"smokes\" o \"Unknown\"*\n* stroke: accidente cerebrovascular: 1 si el paciente tuvo un accidente cerebrovascular o 0 si no\n\n*Note: \"Unknown\" en smoking_status significa que la informaci\u00f3n no est\u00e1 disponible para este paciente.\n\nhttps:\/\/www.kaggle.com\/fedesoriano\/stroke-prediction-dataset\n\nAntes de continuar con el an\u00e1lisis se recomienda leer el art\u00edculo [[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.) sobre Accidente Cerebrovascular con objetivo de familiarizarse con el problema y entender las hip\u00f3tesis que se plantearan a continuaci\u00f3n:\n\nSegun [[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.), \"La presi\u00f3n arterial alta es el principal factor de riesgo para los accidentes cerebrovasculares\". Entre otros factores de riesgo de nuestro interes se mencionan los siguientes:\n\n* Diabetes\n* Ser hombre\n* Aumento de la edad, especialmente despu\u00e9s de los 55 a\u00f1os\n\nEn [[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.) tambien se denota que el riesgo de accidente cerebrovascular es tambi\u00e9n mayor en:\n\n* Personas que tienen una enfermedad card\u00edaca o mala circulaci\u00f3n en las piernas causada por estrechamiento de las arterias\n* Personas que tienen h\u00e1bitos de un estilo de vida malsano tales como el tabaquismo, consumo excesivo de alcohol, consumo de drogas, una dieta rica en grasa y falta de ejercicio\n* Mujeres que toman p\u00edldoras anticonceptivas (especialmente las que fuman y son mayores de 35 a\u00f1os)\n\n## Hip\u00f3tesis principales\nEn este documento buscaremos comprobar las siguientes hipotesis:\n1. El ACV es mas frecuente en personas mayores a 55 a\u00f1os\n2. Los niveles de glucosa son mas altos en personas que padecieron un ACV\n3. Los hombres son mas propensos a padecer accidente cerebrovascular\n4. La hipertensi\u00f3n esta guarda una estrecha relaci\u00f3n con el ACV\n5. Las enfermedades card\u00edacas guardan estrecha relaci\u00f3n con el ACV\n\n\nAs\u00ed mismo se analizar\u00e1n otras variables de inter\u00e9s dadas por el dataset de manera complementaria.","440f6897":"### \u00bfQue diferencias hay entre las victimas y las personas sanas?","7ea8db8e":"## Conclusiones\nLuego de completar nuestro an\u00e1lisis exploratorio del conjunto de datos, podemos concluir que la edad es una variable altamente relacionada con la posibilidad de padecer un accidente cerbrovascular, puesto que la distribuci\u00f3n de edades de las v\u00edctimas, se agrupa en torno a los 50-80 a\u00f1os de edad, contrariamente a la del resto de personas en las que se distribuye de manera uniforme. As\u00ed mismo, el nivel promedio de glucosa en sangre pareceria ser una variable de inter\u00e9s, ya que en las v\u00edctimas adopta valores superiores o inferiores al del resto de personas.\n\nPor otra parte, tanto la hipertensi\u00f3n como las enfermedades card\u00edacas son signos de alerta en la predicci\u00f3n de un posible ACV, puesto que el porcentaje de victimas es mayor en las personas que padecen alguno de estos factores. Por \u00faltimo, los datos indican que no existe una predominancia sobre alguno de los sexos dentro del conjunto de personas v\u00edctimas de ACV.","85490d98":"## Otras variables de interes:\n\n### Matrimonio","dd28f088":"### Edad, \u00edndice de masa corporal y promedio de glucosa en sangre","949dc8bf":"### La residencia","f7f1fae8":"#### \u00cdndice de masa corporal en funcion del promedio de glucosa","cf62a362":"El grafico muestra la distribucion de edades de las personas que padecieron un ACV y de las que no. Vemos que la mayoria de personas que padecieron un accidente cerebrovascular tienen edades mayores a 55 a\u00f1os, tal y como se menciona en [[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.) lo cual valida nuestra primer hipotesis (el ACV es mas frecuente en personas mayores a 55 a\u00f1os).","8e5fd7f6":"Para solucionar el desbalance del dataset opt\u00e9 por balancearlo hacia la clase con menor cantidad de ocurrencias (stroke = 1), esto har\u00e1 que se descarten la mayor\u00eda de los ejemplos, pero al menos nos quedar\u00e1n aproximadamente 500 datos para entrenar, testear y graficar de manera mas simple.\n\nRecomiendo ver el siguiente link para explorar y experimentar con otras posibles soluciones: https:\/\/www.machinecurve.com\/index.php\/2020\/11\/10\/working-with-imbalanced-datasets-with-tensorflow-and-keras\/","77501d4d":"Seg\u00fan [[1]](https:\/\/medlineplus.gov\/spanish\/ency\/article\/000726.htm#:~:text=La%20presi%C3%B3n%20arterial%20muy%20alta,en%20un%20accidente%20cerebrovascular%20hemorr%C3%A1gico.), la diabetes es un factor de riesgo importante para el accidente cerebrovascular. Aqu\u00ed vemos que las personas v\u00edctimas de ACV tienen niveles de glucosa mas altos que las personas que no, lo cual valida nuestra segunda hip\u00f3tesis.","b84e7b42":"Debido a que en la columna \"gender\" hay un solo registro con el tipo \"others\" se eliminar\u00e1 dicho ejemplo.","f1ccc926":"### Hipertensi\u00f3n","382c60d7":"#### \u00cdndice de masa corporal en funcion de la edad","d3a29644":"Al observar como se distribuye el BMI en funci\u00f3n de la edad, vemos que a partir de los 20 a\u00f1os (aproximadamente) la gran mayoria de ejemplos se encuentran entre 20 y 40, mientras que algunos outliers se encuentran por encima o por debajo.","86a17325":"Segun el gr\u00e1fico, no pareciera haber una predominancia de algun g\u00e9nero entre las personas que sufrieron un ACV y las que no. Lo cual se contradice con nuestra tercer hipotesis: \"los hombres son mas propensos a padecer accidente cerebrovascular\". De hecho el porcentaje de mujeres es mayor entre las v\u00edctimas.","07c5634e":"### Enfermedades card\u00edacas","cd48c159":"Luego de entrenar al modelo por 400 \u00e9pocas, notamos que los valores de validaci\u00f3n de precision y recall se encuentran por encima del 70%. Teniendo en cuenta que este modelo no se utilizar\u00e1 de manera productiva, considero que son niveles aceptables.","502842bb":"### Tipo de trabajo","3e655460":"### Fumar influye?","399a7a7d":"Se construy\u00f3 una red neuronal de tipo MLP como modelo predictivo. La misma cuenta con cuatro capas de 32, 16, 8 y 1 neuronas respectivamente. Todas las neuronas cuentan con funci\u00f3n de activaci\u00f3n relu, exceptuando la de la \u00faltima capa, en la cual se utiliz\u00f3 funci\u00f3n de activacion sigmoide para realizar la predicci\u00f3n final. Dada la naturaleza del problema, tambi\u00e9n se utilizaron las m\u00e9tricas Precision y Recall para evaluar la performance del modelo. Recomiendo ver el siguiente [art\u00edculo](https:\/\/www.tutorialspoint.com\/machine_learning_with_python\/machine_learning_algorithms_performance_metrics.htm) si se desea profundizar mas en el criterio de selecci\u00f3n de m\u00e9tricas.","672d71bb":"### Edad","074168c8":"## An\u00e1lisis"}}