{"cell_type":{"ce6e7635":"code","e3b5476e":"code","c9728f83":"code","d6b68bb3":"code","678543b8":"code","f5f39936":"code","133bccff":"code","cff78e6a":"code","0efe9c63":"code","54d76ff4":"code","a576446e":"code","51c76ff9":"code","397a5cb6":"code","261db54b":"code","ca928645":"code","8c25e1e4":"code","90bf7bca":"code","947cd726":"code","fa6a3a52":"code","627f41fd":"code","763745c7":"code","d7e80127":"code","b85ccc8a":"markdown","9fca9c6e":"markdown","bc805254":"markdown","5faa261a":"markdown","0ec34ab4":"markdown","29dc6507":"markdown"},"source":{"ce6e7635":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport seaborn as sb\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e3b5476e":"# Reading csv using pandas\nimport pandas as pd \n\nadf = pd.read_csv('..\/input\/avocado.csv')\nprint(adf.head())","c9728f83":"adf.info()","d6b68bb3":"adf.describe()","678543b8":"#First column uncertain: No column name given, repeatin after 0-51 counts! strange!\nadf.drop(['Unnamed: 0'],axis=1,inplace=True)\nadf.head()","f5f39936":"#null check \n#adf.isnull() --> only gives binary mask \nadf.isnull().sum()","133bccff":"\nadf_US = adf[adf['region']=='TotalUS']\nadf_US_organic = adf_US[adf_US['type']=='organic']\nadf_US_organic.head()","cff78e6a":"plt.figure(figsize=(12,5))\nplt.title(\"Distribution of Avg Price\")\n#average_price_fit = stats.norm.pdf(adf['AveragePrice'],np.mean(adf['AveragePrice']),np.std(adf['AveragePrice']))\nplt.xlabel('Average Price')\nplt.ylabel('Probability')\n#plt.hist(adf['AveragePrice'],bins=40,color='g')\n#plt.plot(adf['AveragePrice'],average_price_fit)\nsb.distplot(adf_US_organic[\"AveragePrice\"],hist=True,kde=True,rug=True,bins=100, color = 'b')\n","0efe9c63":"#creating month column\nadf['Date'] = pd.to_datetime(adf['Date'], format='%Y-%m-%d')\nadf['Month']=adf['Date'].map(lambda x: x.month)\nadf = adf.sort_values(by='Date')","54d76ff4":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"AveragePrice\",hue='year',data=adf_US_organic,palette='magma')","a576446e":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"Total Volume\",hue='year',data=adf_US_organic,palette='magma',)","51c76ff9":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"Total Bags\",hue='year',data=adf_US_organic,palette='magma')\n#sb.lineplot(x=\"Month\", y=\"Total Volume\",hue='year',data=adf_US_organic,palette='copper')","397a5cb6":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"4046\",hue='year',data=adf_US_organic,palette='magma',)","261db54b":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"4225\",hue='year',data=adf_US_organic,palette='magma')","ca928645":"plt.figure(figsize=(12,3))\nsb.lineplot(x=\"Date\", y=\"4770\",hue='year',data=adf_US_organic,palette='magma')","8c25e1e4":"adf_US_organic = adf_US_organic.sort_values(by='Date')\n# Valid = adf[(adf['year'] == 2017) | (adf['year'] == 2018)]\n# Train = adf[(adf['year'] != 2017) & (adf['year'] != 2018)]\nTrain = adf_US_organic.sort_values(by='Date')\n","90bf7bca":"from fbprophet import Prophet","947cd726":"m = Prophet()\ndate_volume = Train.rename(columns={'Date':'ds', 'Total Volume':'y'})\nm.fit(date_volume)\nfuture = m.make_future_dataframe(periods=365)\nforecast = m.predict(future)","fa6a3a52":"fig1 = m.plot(forecast)","627f41fd":"fig2 = m.plot_components(forecast)","763745c7":"n = Prophet()\ndate_bags = Train.rename(columns={'Date':'ds', 'Total Bags':'y'})\nn.fit(date_bags)\nfuture = m.make_future_dataframe(periods=365)\nforecast = m.predict(future)\nfig2 = m.plot(forecast)","d7e80127":"fig2 = m.plot_components(forecast)","b85ccc8a":"# Trying to train network\n","9fca9c6e":"### Observation 1 : \nAverage price is more between 1 to 1.5, but sometimes it went to 3 also.\n","bc805254":"# Thanks for reading my notebook!","5faa261a":"### Total Volume","0ec34ab4":"## Total Bags","29dc6507":"### Observation 2 :\nFrom month 6 to 11, average prices are increasing in 2017 and 2016.\nAnd there is definetly a pattern."}}