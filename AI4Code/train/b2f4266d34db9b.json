{"cell_type":{"6bf23b72":"code","94e5320c":"code","86dbae2c":"code","c5d85b8c":"code","8b8be643":"code","7aa94292":"code","13cf6317":"code","9c84c348":"code","bd3fd628":"code","b7167703":"code","9ac1b36c":"code","e69d2a87":"code","035da55a":"code","37dbc288":"code","adbd0110":"code","d42e9c0d":"markdown","ad925f18":"markdown","1ec4ec15":"markdown","29a26742":"markdown","f8b2d220":"markdown","ef7f40ca":"markdown","cbede8bf":"markdown","1cfc31aa":"markdown","e286227c":"markdown","66842d41":"markdown","e59c63b5":"markdown","49182c32":"markdown","c4a267b5":"markdown"},"source":{"6bf23b72":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom keras.models import Model\nfrom keras.layers import LSTM, Activation, Dense, Dropout, Input, Embedding\nfrom keras.optimizers import RMSprop\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing import sequence\nfrom keras.utils import to_categorical\nfrom keras.callbacks import EarlyStopping\n%matplotlib inline","94e5320c":"df = pd.read_csv('..\/input\/spam.csv',delimiter=',',encoding='latin-1')\ndf.head()","86dbae2c":"df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'],axis=1,inplace=True)\ndf.info()","c5d85b8c":"sns.countplot(df.v1)\nplt.xlabel('Label')\nplt.title('Number of ham and spam messages')","8b8be643":"X = df.v2\nY = df.v1\nle = LabelEncoder()\nY = le.fit_transform(Y)\nY = Y.reshape(-1,1)","7aa94292":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.15)","13cf6317":"X_test[0]","9c84c348":"max_words = 1000\nmax_len = 150\ntok = Tokenizer(num_words=max_words)\ntok.fit_on_texts(X_train)\nsequences = tok.texts_to_sequences(X_train)\nsequences_matrix = sequence.pad_sequences(sequences,maxlen=max_len)","bd3fd628":"def RNN():\n    inputs = Input(name='inputs',shape=[max_len])\n    layer = Embedding(max_words,50,input_length=max_len)(inputs)\n    layer = LSTM(64)(layer)\n    layer = Dense(256,name='FC1')(layer)\n    layer = Activation('relu')(layer)\n    layer = Dropout(0.5)(layer)\n    layer = Dense(1,name='out_layer')(layer)\n    layer = Activation('sigmoid')(layer)\n    model = Model(inputs=inputs,outputs=layer)\n    return model","b7167703":"model = RNN()\nmodel.summary()\nmodel.compile(loss='binary_crossentropy',optimizer=RMSprop(),metrics=['accuracy'])","9ac1b36c":"model.fit(sequences_matrix,Y_train,batch_size=128,epochs=10,\n          validation_split=0.2,callbacks=[EarlyStopping(monitor='val_loss',min_delta=0.0001)])","e69d2a87":"test_sequences = tok.texts_to_sequences(X_test)\ntest_sequences_matrix = sequence.pad_sequences(test_sequences,maxlen=max_len)","035da55a":"accr = model.evaluate(test_sequences_matrix,Y_test)","37dbc288":"print('Test set\\n  Loss: {:0.3f}\\n  Accuracy: {:0.3f}'.format(accr[0],accr[1]))","adbd0110":"test_sequences = tok.texts_to_sequences(\"Ffffffffff. Alright no way I can meet up with you sooner?\")\ntest_sequences_matrix = sequence.pad_sequences(test_sequences,maxlen=max_len)\n\nprediction = model.predict(test_sequences_matrix)\nprint(prediction)\nif prediction < 0 :\n    print(\"ok\") \nelse:    \n    print(\"Not OK\")","d42e9c0d":"The model performs well on the validation set and this configuration is chosen as the final model.","ad925f18":"Fit on the training data.","1ec4ec15":"* Create input and output vectors.\n* Process the labels.","29a26742":"Call the function and compile the model.","f8b2d220":"Drop the columns that are not required for the neural network.","ef7f40ca":"### Load the data into Pandas dataframe","cbede8bf":"### Process the data\n* Tokenize the data and convert the text to sequences.\n* Add padding to ensure that all the sequences have the same shape.\n* There are many ways of taking the *max_len* and here an arbitrary length of 150 is chosen.","1cfc31aa":"Split into training and test data.","e286227c":"Process the test set data.","66842d41":"# Import the necessary libraries","e59c63b5":"Evaluate the model on the test set.","49182c32":"### RNN\nDefine the RNN structure.","c4a267b5":"Understand the distribution better."}}