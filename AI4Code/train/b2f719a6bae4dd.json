{"cell_type":{"6a395f5a":"code","5858e93d":"code","4f5513f6":"code","a0ecd6bb":"code","8423135e":"code","2cea17fb":"code","f0111382":"code","061e10a9":"code","aa430b02":"code","347efc3a":"code","72ad3d95":"code","2e79bd9d":"code","d3f20ef6":"code","3ccb08b9":"code","ad5b93c5":"markdown","7f10466e":"markdown","f842376c":"markdown","941db480":"markdown","1c4393d5":"markdown"},"source":{"6a395f5a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5858e93d":"# Reading CSV Files\ntrain = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/train.csv')\ntest  = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/test.csv')","4f5513f6":"print(test.shape)\ntest","a0ecd6bb":"print(train.shape)\ntrain[:3]","8423135e":"print('Total samples       :',train.shape[0])\nfor i in train.columns:\n  print(\"Total No. of Unique values in Column {}  : {}\".format(i,len(train[i].unique())))\n  if len(train[i].unique()) <20:\n    print(train[i].unique())","2cea17fb":"def gleason_to_grade(score):\n  if score == 'negative' :\n    return 0\n  elif score in ['0+0','3+3']:\n    return 1\n  elif score in ['3+4']:\n    return 2\n  elif score in ['4+3']:\n    return 3\n  elif score in ['4+4', '5+3', '3+5']:\n    return 4\n  elif score in ['4+5', '5+5', '5+4']:\n    return 5","f0111382":"def risk_level(gleason_grade):\n  if gleason_grade in [1]:\n    return \"Low\"\n  elif gleason_grade in [2]:\n    return \"Intermediate Favourable\"\n  elif gleason_grade in [3]:\n    return \"Intermediate Unfavourable\"\n  elif gleason_grade in [4,5]:\n    return \"High\"  ","061e10a9":"train['gleason_score_grade'] = train['gleason_score'].apply(lambda x: gleason_to_grade(x))\ntrain['gleason_Risk_Level'] = train['gleason_score_grade'].apply(lambda x: risk_level(x))","aa430b02":"train_k = train[train['data_provider']== 'karolinska']\ntrain_r = train[train['data_provider']== 'radboud']","347efc3a":"sns.countplot(train['data_provider'])","72ad3d95":"sns.distplot(train['isup_grade'])","2e79bd9d":"sns.distplot(train['gleason_score_grade'])","d3f20ef6":"sns.countplot(train['gleason_score'])","3ccb08b9":"sns.countplot(train['gleason_Risk_Level'])","ad5b93c5":"![glean.JPG](attachment:glean.JPG)![](http:\/\/)","7f10466e":"From Above Image Gleason Score is seperated based in its score level.\n\nThe score below 6 is low --> Grade Group 1 & so on","f842376c":"![gleason.jpeg](attachment:gleason.jpeg)","941db480":"# Visualization","1c4393d5":"# Importing Packages"}}