{"cell_type":{"72db3b21":"code","1ad431fd":"code","e06c2887":"code","5f406e07":"code","42c9aef9":"code","86f14cb5":"code","4bbec631":"code","7ea3e22d":"code","31a94d56":"code","fe702773":"code","5aac7b9d":"code","4a3f216e":"code","7f938d90":"code","848f18c4":"code","e59e35b7":"code","0624581f":"code","7fcc7f2e":"code","eab59970":"code","42bd0a44":"code","a414ab33":"code","8cb18c72":"code","103dcba3":"code","79244313":"code","4f9fe746":"code","cda137c8":"code","5b96cb90":"code","2d1adde8":"code","3923e33b":"code","df8612ed":"code","b2443da8":"code","0aee9e6a":"code","320100f4":"code","0a80b15a":"code","1c6bd145":"code","a36ee9a6":"code","aa33de26":"code","4ee3956f":"markdown","8090985f":"markdown","7f20ebcf":"markdown","69f03d79":"markdown","792b32b1":"markdown","a6fe7098":"markdown","7c359627":"markdown","69500f61":"markdown","02d3ed85":"markdown","1bf1d99b":"markdown","9f4ae5d3":"markdown","1ed8fa90":"markdown","4bce71f9":"markdown","dc71a7b2":"markdown","30853ef1":"markdown","e84d13ed":"markdown","c7704aa9":"markdown","1ab0ce16":"markdown"},"source":{"72db3b21":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\n\nsns.set_style('whitegrid')\nplt.style.use('seaborn-notebook')\n\nimport warnings\nwarnings.filterwarnings('ignore')","1ad431fd":"df = pd.read_csv('..\/input\/disney-movies-and-tv-shows\/disney_plus_titles.csv')\ndf.head()","e06c2887":"df = df.iloc[:,1:]","5f406e07":"df.info()","42c9aef9":"df.isnull().sum()","86f14cb5":"data = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndata.head()","4bbec631":"data = data.iloc[:,1:]","7ea3e22d":"data.info()","31a94d56":"data.isnull().sum()","fe702773":"df_d = df['type'].value_counts()\n\nfig = px.pie(df_d,\n       names = df_d.index,\n       values = df_d.values,\n       hole = 0.4,\n       title = 'Data Ratio for Movies and TV Shows for Disney',\n       color_discrete_sequence = ['#ffa500', 'green'])\n\n\nfig.show()","5aac7b9d":"data_d = data['type'].value_counts()\n\nfig = px.pie(data_d,\n       names = data_d.index,\n       values = data_d.values,\n       hole = 0.4,\n       title = 'Data Ratio for Movies and TV Shows for Netflix',\n       color_discrete_sequence = ['#ffa500', 'green'])\n\n\nfig.show()","4a3f216e":"df_d = df.dropna(subset = ['date_added'])\ndf_d.date_added = pd.to_datetime(df_d.date_added)","7f938d90":"threshold = 2000\nnew_content = df_d[df_d.release_year > threshold]\nold_content = df_d[df_d.release_year < threshold]\n\ndf_x = pd.DataFrame()\ndf_x['New-Old'] = ['new_content','old_content']\ndf_x['Number_of_Content'] = [len(new_content), len(old_content)]\n\nfig = px.pie(df_x, names = ['New Content', 'Old Content'],\n       values = 'Number_of_Content',\n       color_discrete_sequence = ['#ffa500','green'],\n       )\n\nfig.update_layout(title = 'The Ratio of New Content to Old Content for Disney')\nfig.show()\n","848f18c4":"data_d = data.dropna(subset = ['date_added'])\ndata_d.date_added = pd.to_datetime(data_d.date_added)\n\nthreshold = 2000\nnew_content = data_d[data_d.release_year > threshold]\nold_content = data_d[data_d.release_year < threshold]\n\ndf_x = pd.DataFrame()\ndf_x['New-Old'] = ['new_content','old_content']\ndf_x['Number_of_Content'] = [len(new_content), len(old_content)]\n\nfig = px.pie(df_x, names = ['New Content', 'Old Content'],\n       values = 'Number_of_Content',\n       color_discrete_sequence = ['#ffa500','green'],\n       )\n\nfig.update_layout(title = 'The Ratio of New Content to Old Content for Netflix')\nfig.show()","e59e35b7":"df_d['year_added'] = df_d.date_added.apply(lambda x: x.year)","0624581f":"colors = {'Movie' : 'Green',\n          'TV Show': '#ffa500'}\ncolors","7fcc7f2e":"plt.figure(figsize = (10,5))\nsns.countplot(df_d['year_added'], \n              hue = df_d['type'],\n              palette = colors)\nplt.xlabel('Year Added to Platform')\nplt.ylabel('Number of Content')\nplt.show()","eab59970":"data_d['year_added'] = data_d.date_added.apply(lambda x: x.year)\nplt.figure(figsize = (10,5))\ndata_dx = data_d[data_d.year_added >= 2015]\nsns.countplot(data_dx['year_added'], \n              hue = data_dx['type'],\n              palette = colors)\nplt.xlabel('Year Added to Platform')\nplt.ylabel('Number of Content')\nplt.show()","42bd0a44":"country_list = df_d.country[df_d.country.notnull()].tolist()\n\nunique_countries = []\n\nfor i in country_list:\n  country = i.split(', ')\n  for j in country:\n    if j not in unique_countries:\n      unique_countries.append(j)\n\nfor i in unique_countries:\n  df_d[str(i)] = df_d.country.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_countries:\n  df_d[i] = df_d[i].fillna(0)","a414ab33":"count_dict = dict()\nfor i in unique_countries:\n  count_dict[i] = df_d[i].sum(axis = 0)\n\ncount_dict","8cb18c72":"countries = [country for country in count_dict.keys()]\nvals = [values for values in count_dict.values()]\n\ndf_ = pd.DataFrame()\ndf_['Country'] = countries\ndf_['Values'] = vals\ndf_ = df_.sort_values(by = 'Values',ascending = False)[:10]\n\nfig = px.bar(df_,\n            x = 'Country',\n            y = 'Values',\n             color = 'Values',\n             color_continuous_scale = px.colors.diverging.Earth\n            )\nfig.update_layout(title = 'Top 10 Countries Having the Most Content for Disney')\nfig.show()","103dcba3":"country_list = data_d.country[data_d.country.notnull()].tolist()\n\nunique_countries = []\n\nfor i in country_list:\n  country = i.split(', ')\n  for j in country:\n    if j not in unique_countries:\n      unique_countries.append(j)\n\nfor i in unique_countries:\n  data_d[str(i)] = data_d.country.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_countries:\n  data_d[i] = data_d[i].fillna(0)\n\ncount_dict = dict()\nfor i in unique_countries:\n  count_dict[i] = data_d[i].sum(axis = 0)\n\ncount_dict.pop('')","79244313":"count_dict","4f9fe746":"countries = [country for country in count_dict.keys()]\nvals = [values for values in count_dict.values()]\n\ndf_ = pd.DataFrame()\ndf_['Country'] = countries\ndf_['Values'] = vals\ndf_ = df_.sort_values(by = 'Values',ascending = False)[:10]\n\nfig = px.bar(df_,\n            x = 'Country',\n            y = 'Values',\n             color = 'Values',\n             color_continuous_scale = px.colors.diverging.Earth\n            )\nfig.update_layout(title = 'Top 10 Countries Having the Most Content for Netflix')\nfig.show()","cda137c8":"content_type_list = df_d.listed_in[df_d.listed_in.notnull()].tolist()\n\nunique_type = []\n\nfor i in content_type_list:\n  content = i.split(', ')\n  for j in content:\n    if j not in unique_type:\n      unique_type.append(j)\n\nfor i in unique_type:\n  df_d[str(i)] = df_d.listed_in.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_type:\n  df_d[i] = df_d[i].fillna(0)","5b96cb90":"count_type_dict = dict()\nfor i in unique_type:\n  count_type_dict[i] = df_d[i].sum(axis = 0)\n\ncount_type_dict","2d1adde8":"df_ = pd.DataFrame()\ndf_['Content'] = list(count_type_dict.keys())\ndf_['Values'] = list(count_type_dict.values())\ndf_ = df_.sort_values(by = 'Values',ascending = False)[:10]\n\nfig = px.bar(df_,\n            x = 'Content',\n            y = 'Values',\n             color = 'Values',\n             color_continuous_scale = px.colors.diverging.Earth\n            )\nfig.update_layout(title = 'Top 10 Types of Content in Disney Platform')\nfig.show()","3923e33b":"data_d.head(2)","df8612ed":"content_type_list = data_d.listed_in[data_d.listed_in.notnull()].tolist()\n\nunique_type = []\n\nfor i in content_type_list:\n  content = i.split(', ')\n  for j in content:\n    if j not in unique_type:\n      unique_type.append(j)\n\nfor i in unique_type:\n  data_d[str(i)] = data_d.listed_in.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_type:\n  data_d[i] = data_d[i].fillna(0)","b2443da8":"count_type_dict = dict()\nfor i in unique_type:\n  count_type_dict[i] = data_d[i].sum(axis = 0)\n\ncount_type_dict","0aee9e6a":"df_ = pd.DataFrame()\ndf_['Content'] = list(count_type_dict.keys())\ndf_['Values'] = list(count_type_dict.values())\ndf_ = df_.sort_values(by = 'Values',ascending = False)[:10]\n\nfig = px.bar(df_,\n            x = 'Content',\n            y = 'Values',\n             color = 'Values',\n             color_continuous_scale = px.colors.diverging.Earth\n            )\nfig.update_layout(title = 'Top 10 Types of Content in Disney Platform')\nfig.show()","320100f4":"country_list = df_d.country[df_d.country.notnull()].tolist()\n\nunique_countries = []\n\nfor i in country_list:\n  country = i.split(', ')\n  for j in country:\n    if j not in unique_countries:\n      unique_countries.append(j)\n\nfor i in unique_countries:\n  df_d[str(i)] = df_d.country.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_countries:\n  df_d[i] = df_d[i].fillna(0)","0a80b15a":"count_dict = dict()\nfor i in unique_countries:\n  count_dict[i] = df_d[i].sum(axis = 0)\n\ncountries = [country for country in count_dict.keys()]\nvals = [values for values in count_dict.values()]\n\ndf_ = pd.DataFrame()\ndf_['Country'] = countries\ndf_['Values'] = vals\ndf_ = df_.sort_values(by = 'Values',ascending = False)","1c6bd145":"fig = px.choropleth(df_,\n                    locations = unique_countries,\n              locationmode = 'country names',\n              color = 'Values',\n              color_continuous_scale = px.colors.sequential.Burgyl)\n\nfig.update_layout(title = 'Disney Plus Content Availability in Countries')\n\nfig.show()","a36ee9a6":"country_list = data_d.country[data_d.country.notnull()].tolist()\n\nunique_countries = []\n\nfor i in country_list:\n  country = i.split(', ')\n  for j in country:\n    if j not in unique_countries:\n      unique_countries.append(j)\n\nfor i in unique_countries:\n  data_d[str(i)] = data_d.country.dropna().apply(lambda x: 1 if str(i) in ' '.join(x.split()) else 0)\n\nfor i in unique_countries:\n  data_d[i] = data_d[i].fillna(0)\n\ncount_dict = dict()\nfor i in unique_countries:\n  count_dict[i] = data_d[i].sum(axis = 0)\n\ncount_dict.pop('')","aa33de26":"countries = [country for country in count_dict.keys()]\nvals = [values for values in count_dict.values()]\n\ndf_ = pd.DataFrame()\ndf_['Country'] = countries\ndf_['Values'] = vals\ndf_ = df_.sort_values(by = 'Values',ascending = False)\n\nfig = px.choropleth(df_,\n                    locations = 'Country',\n              locationmode = 'country names',\n              color = 'Values',\n              color_continuous_scale = px.colors.sequential.Burgyl)\n\nfig.update_layout(title = 'Netflix Content Availability in Countries')\n\nfig.show()","4ee3956f":"<a id='2'><\/a>\n## EDA Using Pie Chart","8090985f":"<a id='1'><\/a>\n## Analyzing the Data","7f20ebcf":"### Are the Content are New?","69f03d79":"<a id='5'><\/a>\n# Conclusion\n\nNetflix and Disney Plus are two competitve companies in entertainment industry.\nThis work shows that:\n\n1. Netflix has more content and the content is more available in non US countries.\n\n2. If we consider the content which was released after 2000 as \"new\", Netflix has more uptodate content compared to the Disney Plus.\n\n3. Both platforms have similar ratios of Movies to TV Shows.\n\n4. Netflix relies more on Movies and Disney Plus relies more on Family Content.","792b32b1":"# Introduction\n\n**Netflix**\n\nNetflix is one of the world's leading entertainment services with 214 million paid memberships in over 190 countries enjoying TV series, documentaries and feature films across a wide variety of genres and languages. Members can watch as much as they want, anytime, anywhere, on any internet-connected screen. Members can play, pause and resume watching, all without commercials or commitments. [(1)](https:\/\/ir.netflix.net\/ir-overview\/profile\/default.aspx)\n\n**Disney Plus**\n\nDisney Plus is an on-demand, ad-free streaming service created by The Walt Disney Company.\n\nWith Disney Plus, subscribers can watch thousands of Disney movies and series on their devices (smart TVs, phones, laptops, tablets, and gaming consoles). The service includes unlimited downloads so you can watch anywhere, anytime. \n\nDisney Plus content comes from Walt Disney Studios' and Walt Disney Television's biggest names: Disney, Pixar, Marvel, Star Wars, National Geographic, and 20th Century Fox. [(2)](https:\/\/www.businessinsider.com\/disney-plus)\n","a6fe7098":"<a id='4'><\/a>\n## Where it's available? EDA using Maps ","7c359627":"----------------------------------------------------------","69500f61":"#Contents of This Notebook\n\n1. [Analysing the Data](#1)\n1. [EDA Using Pie Chart](#2)\n1. [EDA Using Barplot](#3)\n1. [Where it's available? EDA using Maps](#4)\n1. [Conclusion](#5)\n","02d3ed85":"### Content Added to Platform in Years","1bf1d99b":"-----------------------------------------------","9f4ae5d3":"------------------------------------------------","1ed8fa90":"--------------------------------------","4bce71f9":"-------------------------------------------------","dc71a7b2":"### The Ratio of Movie to the TV Shows","30853ef1":"### Content Availability for Different Countries","e84d13ed":"<a id='3'><\/a>\n## EDA Using Barplots","c7704aa9":"### Types of Content in Platforms","1ab0ce16":"------------------------------"}}