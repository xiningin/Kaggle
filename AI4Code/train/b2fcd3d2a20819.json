{"cell_type":{"c9a12ced":"code","0973e334":"code","aa083bab":"code","1dfa69bb":"code","8a182ea7":"code","121ab3ad":"code","18b7012f":"code","ea8f7705":"code","34564a00":"code","0fbc895f":"code","8c81afce":"code","80299fa5":"code","81f85426":"code","acaedf80":"code","a129cc0c":"markdown","88d17920":"markdown","5fef9569":"markdown","18fc2004":"markdown","27731223":"markdown","adff0080":"markdown","808df275":"markdown","19322ea5":"markdown","6f3969de":"markdown","4b262ff7":"markdown","bf233078":"markdown","3306ce42":"markdown","a66bc28c":"markdown","e5985550":"markdown","d375e578":"markdown"},"source":{"c9a12ced":"import numpy as np # linear algebra\nimport pandas as pd # data processing, \n\ndf = pd.read_csv('..\/input\/train.csv')\ndf = df.drop(columns=['Ticket', 'Cabin', 'PassengerId', 'SibSp', 'Parch'])","0973e334":"print(len(df))\ndf.head()","aa083bab":"class Q1:\n    @staticmethod\n    def hint():\n        print('HINT: You can compute the survival rate by taking the average of the `Survived` column')\n    @staticmethod\n    def answer():\n        print('ANSWER: male: 0.188908, female: 0.742038')\n    @staticmethod\n    def solution():\n        print('SOLUTION: df.groupby(\\'Sex\\').Survived.mean()')","1dfa69bb":"# write your solution here...","8a182ea7":"#Q1.hint()\n#Q1.answer()\n#Q1.solution()","121ab3ad":"class Q2:\n    @staticmethod\n    def hint():\n        print('HINT: You can sort a series by using the `sort_values()` function!')\n    @staticmethod\n    def answer():\n        print('''\nANSWER: \nPclass\n1    0.629630\n2    0.472826\n3    0.242363\\n''')\n    @staticmethod\n    def solution():\n        print('SOLUTION: df.groupby(\\'Pclass\\').Survived.mean().sort_values(ascending=False)')","18b7012f":"# write your solution here...","ea8f7705":"#Q2.hint()\n#Q2.answer()\n#Q2.solution()","34564a00":"class Q3:\n    @staticmethod\n    def hint():\n        print('HINT: Don\\'t forget about the `max` and `min`  aggregators!')\n    @staticmethod\n    def answer():\n        print('''\nANSWER: \nPclass\n1    512.3292\n2     73.5000\n3     69.5500\\n''')\n    @staticmethod\n    def solution():\n        print('SOLUTION: df.groupby(\\'Pclass\\').Fare.max()')","0fbc895f":"# write your solution here...","8c81afce":"#Q3.hint()\n#Q3.answer()\n#Q3.solution()","80299fa5":"class Q4:\n    @staticmethod\n    def hint():\n        print('HINT: `groupby` can also take a list!')\n    @staticmethod\n    def answer():\n        print('''\nANSWER: \nEmbarked  Pclass\nC         1         0.694118\nQ         2         0.666667\nS         1         0.582677\nC         2         0.529412\nQ         1         0.500000\nS         2         0.463415\nC         3         0.378788\nQ         3         0.375000\nS         3         0.189802\\n''')\n    @staticmethod\n    def solution():\n        print('SOLUTION: df.groupby([\\'Embarked\\', \\'Pclass\\']).Survived.mean().sort_values(ascending=False)')","81f85426":"# write your solution here...","acaedf80":"#Q4.hint()\n#Q4.answer()\n#Q4.solution()","a129cc0c":"# Split-Apply-Combine\nA series of short exercises to flex your Pandas split-apply-combine skills.","88d17920":"Get a hint or check your answers by uncommenting the lines below!","5fef9569":"**Nice work! Now we are really getting somewhere with unpicking (and even predicting!) survival rates across the different passengers of the Titanic.**","18fc2004":"Get a hint or check your answers by uncommenting the lines below!","27731223":"## How the exercises work\nThe following exercises all rely on using all or some the split-apply-combine method.  \nFor each exercise, you can uncomment and run the `Q1.hint()` line to get a hint if you're stuck, and uncomment and run `Q1.answer()`, and `Q1.solution()` for the final answer and a solution for getting there.  \nSo let's jump right in!","adff0080":"Each row is a passenger. The columns mean as follows:\n* `Survived`: `1` = Yes (Passenger did survive), `0` = No\n* `Pclass`: Passenger Classs - `1` = 1st, `2` = 2nd, `3` = 3rd\n* `Name`: Passenger Name (not really needed, just for curiosity)\n* `Sex`: Sex the passenger\n* `Age`: Age of the passenger\n* `Fare`: The price of the passengers ticket\n* `Embarked`: Location that passenger embarked from - `C` = Cherbourg, `Q` = Queenstown, `S` = Southampton","808df275":"How did you do?","19322ea5":"### Q1. What was the survival rate of women, compared to that of men? ","6f3969de":"### Q4. Which combination of embarkment location and passenger class had the highest survival rate?","4b262ff7":"## The Data - Titanic Passenger Survival\nThis a (classic) data set on the passengers of the Titanic. ","bf233078":"Did you expect those results?","3306ce42":"Get a hint or check your answers by uncommenting the lines below!","a66bc28c":"### Q2. Output a ranking of the passenger classes by survival rate from best to worst? \nThere are the 3 passenger classes, specified in the Pclass column. Your output should show the classes, with the highest survival rate first. ","e5985550":"### Q3. What was the most expensive fare (ticket price) for each passenger class? ","d375e578":"Get a hint or check your answers by uncommenting the lines below!"}}