{"cell_type":{"a3ab9507":"code","82553fe8":"code","a37637b2":"code","8ea30e1a":"code","c797c1c6":"code","aa097bc0":"code","68f4db13":"code","e91475b3":"code","cf7437a1":"code","99c093a3":"code","47696141":"code","3d9b298f":"code","283410cd":"code","24118f62":"code","ced03298":"code","5d8e4495":"code","3c203ea6":"code","49f0abeb":"code","6e825e97":"markdown","0c1fe63f":"markdown","6814010b":"markdown","fe66f4bf":"markdown","3a3ed0f0":"markdown","74e00149":"markdown","3d8d9ce0":"markdown","72872305":"markdown","558b0084":"markdown"},"source":{"a3ab9507":"import os\nimport pandas as pd\nimport numpy as np\nimport sklearn\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, f1_score\n\nfrom sklearn.svm import SVC","82553fe8":"dataset_path = '\/kaggle\/input\/pima-indians-diabetes-database\/'","a37637b2":"data = pd.read_csv(os.path.join(dataset_path, 'diabetes.csv'))\n","8ea30e1a":"print(\"shape\",data.shape)\ndata.head(5)","c797c1c6":"data.info()","aa097bc0":"data.describe()","68f4db13":"data_null=data.isnull().sum()\nprint(data_null)","e91475b3":"data.hist(bins=20, figsize=(15,10))\nplt.show()","cf7437a1":"sns.countplot(x='Outcome', data=data)","99c093a3":"#Plotting the Correlation\nf, ax = plt.subplots(figsize=(10, 10))\ncorr = data.corr()\nmp = sns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax, annot = True)\nmp.set_title(label='dataset correlation', fontsize=20)","47696141":"sns.pairplot(data, hue = 'Outcome')","3d9b298f":"for col in data.columns:\n    print(\"The minimum value for the {} column is {}\".format(col, data[col].min()))","283410cd":"data[['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']] = data[['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']].replace(0, np.nan)","24118f62":"data['Insulin'] = data['Insulin'].fillna(data['Insulin'].median())\nfor col in ['Glucose', 'BloodPressure', 'SkinThickness', 'BMI']:\n    data[col] = data[col].fillna(data[col].mean())","ced03298":"train, test = train_test_split(data, test_size=0.3, random_state=50)\nx_train = train.drop(columns='Outcome')\ny_train = train['Outcome']\n\nx_val = test.drop(columns='Outcome')\ny_val = test['Outcome']\n\nscaler = StandardScaler().fit(x_train)\nx_train = scaler.transform(x_train)\nx_val = scaler.transform(x_val)","5d8e4495":"l = LogisticRegression(solver='liblinear', max_iter=100, C=0.25).fit(x_train, np.ravel(y_train))\ny_pred_log= l.predict(x_val)\nprint('Classification report:\\n\\n{}'.format(classification_report(y_val, y_pred_log)))\nprint('The accuracy of the Logistic Regression is', accuracy_score(y_val, y_pred_log))","3c203ea6":"knn = KNeighborsClassifier(n_neighbors = 9).fit(x_train, y_train)\ny_pred_knn = knn.predict(x_val)\nprint('Classification Report:\\n\\n{}'.format(classification_report(y_val, y_pred_knn)))\nprint('The accuracy of the KNN is', accuracy_score(y_val, y_pred_knn))","49f0abeb":"svm = SVC(kernel='rbf', degree=4, C=0.7, probability=True).fit(x_train, np.ravel(y_train))\ny_pred_svm = svm.predict(x_val)\nprint('Classification Report:\\n\\n{}'.format(classification_report(y_val, y_pred_svm)))\nprint('The accuracy of the SVM is', accuracy_score(y_val, y_pred_svm))","6e825e97":"# Data Preprocessing","0c1fe63f":"# Splitting Data","6814010b":"# Model","fe66f4bf":"# Reading Data\n","3a3ed0f0":"## KNNeighbors ","74e00149":"## SVM","3d8d9ce0":"# Exploring Data","72872305":"# Import Libraries \n","558b0084":"## Logistic Regression "}}