{"cell_type":{"e4813cb2":"code","8ed9ff85":"code","2bf46cd6":"code","d5bc3f52":"code","98a66135":"code","8a3c1fc5":"code","4f7e4fd6":"code","61fa39c2":"code","43913826":"code","c9e9509f":"code","bf6b9514":"code","e3754d3b":"code","e0a23078":"markdown","71e49302":"markdown","ad2b41b8":"markdown","a0957f5c":"markdown","8c0ffd31":"markdown","05716fc1":"markdown","131274a0":"markdown","769c41b2":"markdown","ce648f59":"markdown","95c30cfc":"markdown","bb59c454":"markdown","229183e9":"markdown","04b97e8d":"markdown","2a962148":"markdown","465a9beb":"markdown","0334a344":"markdown"},"source":{"e4813cb2":"# import the required libraries\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# some editing on the display form \nplt.style.use('seaborn-notebook')\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","8ed9ff85":"df = pd.read_csv('..\/input\/top-10-highest-grossing-films-19752018\/blockbusters.csv')\nprint(df.head())","2bf46cd6":"null = pd.DataFrame(df.isnull().sum() \/ len(df) * 100).transpose()\nprint(null)\n","d5bc3f52":"df.fillna('None', axis=0, inplace=True)","98a66135":"\n\nstudio = [stu for stu, df in df.groupby('studio')] # to extrat studios' names\n\n# plot studio by rating\nplt.barh(studio, df.groupby('studio').mean()['imdb_rating'], label='mean rating (imdb)')\n\n# plot studio by rank\nplt.barh(studio, df.groupby('studio').mean()['rank_in_year'], alpha=0.8, label='mean rank')\nplt.legend()\nplt.title('Rating of Holywood films between (1975-2018)')\nplt.xlabel('Rating')\nplt.ylabel('Studio name')\nplt.show()","8a3c1fc5":"# First let's add the year that the film was made to every title for better look (:\ndf[\"title\"] = df[\"title\"] + ' (' + df[\"year\"].astype(str) + ')'\n\ntop_10 = df[['title', 'imdb_rating', 'year', 'length', 'worldwide_gross']].sort_values(by='imdb_rating', ascending=False)\nprint(top_10.head())","4f7e4fd6":"name = [name for name in top_10.iloc[:, 0]] # to extract the names\n\nplt.barh(name[:10], top_10['imdb_rating'][:10], color='lightblue', label='ratings')\n","61fa39c2":"plt.barh(name[:10], top_10['length'][:10], color='darkgray', alpha=0.8, label='length(hours)')\nplt.title('Length of the TOP 10 films')\nplt.xlabel('length(minutes)')\nplt.ylabel('names of the films')","43913826":"top_10['length'] \/= 60 \nplt.barh(name[:10], top_10['length'][:10], color='darkgray', alpha=0.8, label='length(hours)')\nplt.title('Length of the TOP 10 films')\nplt.xlabel('length(hours)')\nplt.ylabel('names of the films')","c9e9509f":"plt.barh(name[:10], top_10['imdb_rating'][:10], color='lightblue', label='ratings')\nplt.barh(name[:10], top_10['length'][:10], color='darkgray', alpha=0.8, label='length(hours)')\n\nplt.legend()\nplt.title('Top 10 films')\nplt.xlabel('Rating')\nplt.ylabel('Film name')\n","bf6b9514":"# preprocessing the feature \ntop_10['worldwide_gross'] = top_10['worldwide_gross'].str.replace('$', '')\ntop_10['worldwide_gross'] = top_10['worldwide_gross'].str.replace(',', '')\n# convert it to numeric\ntop_10['worldwide_gross'] = top_10['worldwide_gross'].astype(float)\n\nplt.barh(name[:10], top_10['worldwide_gross'][:10], color='lightblue', label='worldwide_gross')\nplt.title('The worldwide gross of the top 10 films')\nplt.xlabel('Worldwide_gross')\nplt.ylabel('Top 10 films')\nplt.show()","e3754d3b":"\n# plot the main genres\nmain_genre = df.groupby('Main_Genre').mean()\nmain_genre_names = [gnr for gnr, df in df.groupby('Main_Genre')]\nimport seaborn as sns\nplt.barh(main_genre_names[:10], main_genre['rank_in_year'][:10],alpha=0.8, label='first genre')\n######################\n# plot the second genres\n\ngenre_2 = df.groupby('Genre_2').mean()\ngenre_names_2 = [gnr for gnr, df in df.groupby('Genre_2')]\n\nplt.barh(genre_names_2[:10], genre_2['rank_in_year'][:10], alpha=0.7, label='second genre')\n######################\n# plot the third genres\n\ngenre_3 = df.groupby('Genre_3').mean()\ngenre_names_3 = [gnr for gnr, df in df.groupby('Genre_3')]\nplt.barh(genre_names_3[:10], genre_3['rank_in_year'][:10], alpha=0.6, label='third genre')\n\nplt.title('Most rated films by genres')\nplt.xlabel('Rate')\nplt.ylabel('Genres')\nplt.legend()\nplt.show()","e0a23078":"now let's plot the worldwide gross of the top 10 films:","71e49302":"let's plot the 'imdb_rating' and 'length' together.","ad2b41b8":"Now let's make some analysis!\n\n**Who are the leading studios(those who most of the films they made were successful)?**\n\nTo know this let's run the following code\n","a0957f5c":"That's cool!\nBut it will make more sense when we turn these minutes to hours:","8c0ffd31":"The **orange color** is the 'mean rank' of the films that were made by the studio during the years(1975-2018).\n\nThe **blue color** is the 'mean rating' of the films that were made by the studio during the years(1975-2018).\n\nAs you can see, the films that were made by 'Embassy Pictures' studio are the highest ranks (10).\nAnd the films that were made by Pixar studio are the highest rate by imdb.\n","05716fc1":"Let's plot it","131274a0":"Now let's take insight about genres.\nThere are three genres,\nlet's see what are the most rated genres","769c41b2":"**I think there is no important analysis to do with this data more then what we did above.\nI hope this notebook was helpful and useful for you.**\n\nPlease upvote this notebook if you fou6nd it useful or important ","ce648f59":"Hi we will do some basic plotting with this dataset.\nFirst thing: We need to import the dataset and the required libraries. ","95c30cfc":"Now let's look at the top 10 movies.","bb59c454":"Second: We will read the data and take a look at it","229183e9":"As you can see only 'Genre_2' and 'Genre_3' are missing.\nThis is maybe because the films with these missing features actually don't have more then one or to genres\nso we will fill these missing values with 'None' .","04b97e8d":"that's awesome!","2a962148":"As you can see the films with genres that contain 'Action' genre have more chance to be successful.\nAnd the films contain 'Documentary' genre have less chance  to be successful.","465a9beb":"first let's check the missing values ","0334a344":"That is cool!\n\nNow let's plot the length of the TOP 10 films"}}