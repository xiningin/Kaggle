{"cell_type":{"4a495263":"code","84486ef5":"code","de7a8081":"code","cf262035":"code","e8dba43b":"code","4869c394":"code","0d3d068e":"code","5554d569":"code","c6a00edb":"code","5078026d":"code","0140e707":"code","d3db10e1":"code","48abae7e":"code","dfd01103":"code","f76633ad":"code","267a870b":"code","2e2809f8":"code","6bd8139d":"code","966c9ac9":"code","4f2ef0f3":"code","3386535e":"code","f34a9f94":"code","0e41f4da":"markdown","9cef6725":"markdown","1726671c":"markdown"},"source":{"4a495263":"!pip install asari","84486ef5":"#\u4f7f\u3044\u305d\u3046\u306a\u3084\u3064\u3068\u308a\u3042\u3048\u305a\nimport pandas as pd\nimport matplotlib\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n\n%matplotlib inline\nfont = {\"family\": \"Arial\"}\nmatplotlib.rc('font', **font)\n\n#\u65e5\u672c\u8a9e\u306e\u611f\u60c5\u5206\u6790\u7528\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\n#https:\/\/github.com\/Hironsan\/asari\uff09\nimport asari\nfrom asari.api import Sonar","de7a8081":"df = pd.read_csv(\"..\/input\/shinzo-abe-japanese-prime-minister-twitter-nlp\/Shinzo Abe Tweet 20171024 - Tweet.csv\")","cf262035":"df.columns","e8dba43b":"df.head()","4869c394":"#\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u5217\u540d\u3092\u4e00\u90e8\u5909\u3048\u307e\u3059\ndf.rename(columns= lambda x : str(x).replace(\" \",\"_\"),inplace=True)\n\n#Profile_Tweet_1\uff08\uff1dreplies\uff09\u306e\u5217\u3092\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u52a0\u5de5\ndf.Profile_Tweet_1 = df.Profile_Tweet_1.map(lambda x :str(x).replace(\" replies\",\"\"))\ndf.Profile_Tweet_1 = df.Profile_Tweet_1.map(lambda x :str(x).replace(\",\",\"\"))\ndf.Profile_Tweet_1 = df.Profile_Tweet_1.astype(\"int\")\n\n#Profile_Tweet_2\uff08\uff1dretweets\uff09\u306e\u5217\u3092\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u52a0\u5de5\ndf.Profile_Tweet_2 = df.Profile_Tweet_2.map(lambda x :str(x).replace(\" retweets\",\"\"))\ndf.Profile_Tweet_2 = df.Profile_Tweet_2.map(lambda x :str(x).replace(\",\",\"\"))\ndf.Profile_Tweet_2 = df.Profile_Tweet_2.astype(\"int\")\n\n#Profile_Tweet_3\uff08\uff1dlikes\uff09\u306e\u5217\u3092\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u52a0\u5de5\ndf.Profile_Tweet_3 = df.Profile_Tweet_3.map(lambda x :str(x).replace(\" likes\",\"\"))\ndf.Profile_Tweet_3 = df.Profile_Tweet_3.map(lambda x :str(x).replace(\",\",\"\"))\ndf.Profile_Tweet_3 = df.Profile_Tweet_3.astype(\"int\")\n\n#\u5217\u540d\u3092\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u5909\u66f4\ndf.rename(columns={\n   \"Profile_Tweet_1\":\"replies\",\n   \"Profile_Tweet_2\":\"retweets\",\n   \"Profile_Tweet_3\":\"likes\"\n}, inplace = True)\n\n#\u4e0d\u8981\u306b\u306a\u3063\u305f\u5217\u3092\u524a\u9664\n#\"Reply\", \"Re_Tweet\",\"Like\"\u5217\u306f\u610f\u5473\u304c\u91cd\u8907\u3059\u308b\u306e\u3067\u524a\u9664\ndf.drop([\"Reply\", \"Re_Tweet\",\"Like\"], axis=1, inplace=True)","0d3d068e":"#\u4e0d\u8981\u306a\u30c7\u30fc\u30bf\u304c\u306a\u3044\u304b\u78ba\u8a8d\ndf.Full_Name_Show.unique()","5554d569":"#\u5b89\u500d\u9996\u76f8\u306e\u30c4\u30a4\u30fc\u30c8\u306e\u307f\u62bd\u51fa\ndf = df[df.Full_Name_Show == \"\u5b89\u500d\u664b\u4e09\"]\n#Tweet_Nav\u5217\u3092date\u5217\u306b\u5909\u66f4\ntweet_date = df.Tweet_Nav.str.split(\" \",expand=True)\ntweet_date.columns = [\"month\",\"day\",\"year\"]\ntweet_date.head()","c6a00edb":"#\u78ba\u8a8d\nfor i in tweet_date.columns:\n   print(i)\n   print(tweet_date[i].unique())","5078026d":"#\u2460year\u5217\u306b2016\u3057\u304b\u306a\u304f\u30012017\u306e\u6587\u5b57\u5217\u3092\u8ffd\u52a0\u3057\u307e\u3059\ntweet_date.year.fillna(\"2017\", inplace=True)\n#\u24612016\u5e74\u30682017\u5e74\u3067month\u3068day\u304c\u305a\u308c\u3066\u308b\uff082016\u5e74\u5206\u304c\u305a\u308c\u3066\u308b\uff09\u306e\u3067\u52a0\u5de5\n\n#\u307e\u305a\u3001\u4e00\u65e62016\u30682017\u306b\u305d\u308c\u305e\u308c\u5206\u3051\u307e\u3059\nyear_2016 = tweet_date[tweet_date.year == \"2016\"]\nyear_2017 =  tweet_date[tweet_date.year == \"2017\"]\n\n#2016\u5e74\u306e\u65b9\u3092month\u3068day\u306e\u5217\u540d\u3092\u5909\u66f4\nyear_2016.rename(columns={\n   \"month\":\"day\",\n   \"day\":\"month\"},inplace = True)\n\n##2017\u306e\u30c7\u30fc\u30bf\u306b2016\u3092\u7e26\u306b\u3064\u306a\u3052\u308b\ntweet_date = pd.concat([year_2017,year_2016],axis=0)\n\n#\u5143\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u304f\u3063\u3064\u3051\u308b\ndf = pd.concat([df,tweet_date],axis=1)\n\n#\u78ba\u8a8d\ndf.head()","0140e707":"#\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u6708\u540d\u3092\u6570\u5b57\u306b\u5909\u66f4\ndf[\"month_int\"] = df.month.replace({\n   'Oct':10,\n   'Sep':9,\n   'Feb':2,\n   'Dec':12,\n   'Nov':11,\n   'Jul':7,\n   'Jun':6,\n   'Apr':4,\n   'Mar':3})\n\n#\u5e74\u6708\u65e5\u306b\ndf[\"tweet_date\"] = df.day + \"\/\" + df.month + \"\/\" + df.year\n\n#datetime\u306e\u578b\u306b\ndf.tweet_date = pd.to_datetime(df.tweet_date)\n\n#\u3044\u3089\u306a\u3044\u5217\u3092\u6c7a\u3057\u3066\u304a\u304f\ndf.drop([\"day\",\"month\",\"year\",\"month_int\"], axis=1, inplace=True)","d3db10e1":"#\u30c7\u30fc\u30bf\u306e\u578b\u306e\u78ba\u8a8d\ndf.dtypes\n#\u300ctweet_date\u300d\u306e\u5217\u304cdatetime64\u306b\u306a\u3063\u3066\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059","48abae7e":"#index\u5217\u3092\u6307\u5b9a\ndf = df.set_index(\"tweet_date\")","dfd01103":"#\u30de\u30eb\u30c1\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067df\u306b\u8907\u6570\u306eindex\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3068\u8272\u3005\u96c6\u8a08\u3057\u3084\u3059\u3044\n#\u5e74\u6708\u5225\u30c4\u30a4\u30fc\u30c8\u6570\ndf_yqmd = df.set_index([\n   df.index.year,\n   df.index.quarter,\n   df.index.month,\n   df.index.day,\n   df.index.weekday_name])\n\n#index\u540d\u3092\u8a2d\u5b9a\ndf_yqmd.index.names = [\"year\",\"quarter\",\"month\",\"day\",\"day_of_week\"]","f76633ad":"round(df_yqmd.mean(level=[\"year\",\"quarter\",\"month\"]))","267a870b":"#\u6642\u7cfb\u5217\u306emultiindex\u3067\u5e74\u6708\u5225\u306e\u30c4\u30a4\u30fc\u30c8\u6570\u306e\u30ab\u30a6\u30f3\u30c8(groupby()\u3068size()\u3092\u4f7f\u3046\uff09\ndf_yqmd.groupby(level=[\"year\",'month']).size().plot(kind=\"bar\", colormap='Pastel2', figsize=[10,5])\n","2e2809f8":"#\u4f55\u66dc\u65e5\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u591a\u3044\u306e\u3060\u308d\u3046\ndf_yqmd.groupby(level=\"day_of_week\").size().sort_values(ascending=False).plot(kind=\"bar\", colormap='Pastel1', figsize=[10,5])","6bd8139d":"sns.pairplot(df_yqmd[['replies',\"retweets\",\"likes\"]]\n            # , hue=\"Day_of_the_week\"\n             ,markers='+'\n            )","966c9ac9":"sonar = Sonar()\n\n#\u30c6\u30ad\u30b9\u30c8\u306e\u611f\u60c5\u5206\u6790\u7d50\u679c\u306e\"positive\"\u5074\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\ndef get_positive_power(text):\n    info = sonar.ping(text= text)\n    posi_vector = info[\"classes\"][1][\"confidence\"]\n    return posi_vector\n\n#\u30c6\u30ad\u30b9\u30c8\u306e\u611f\u60c5\u5206\u6790\u7d50\u679c\u306e\"negative\"\u5074\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\ndef get_negative_power(text):\n    info = sonar.ping(text= text)\n    nega_vector = info[\"classes\"][0][\"confidence\"]\n    return nega_vector\n\n#\u30c6\u30ad\u30b9\u30c8\u306etop_sentiment(\u3069\u3063\u3061\u306e\u611f\u60c5\u304c\u5f37\u3044\u304b)\u3092\u53d6\u5f97\u3059\u308b\ndef which_sentiment(text):\n    info = sonar.ping(text= text)\n    sentiment = info[\"top_class\"]\n    return sentiment","4f2ef0f3":"#\u30dd\u30b8\u30cd\u30ac\u5206\u6790\u3057\u3066\u307f\u308b\n#asari\u3092\u4f7f\u3063\u3066\u3001\u30c4\u30a4\u30fc\u30c8\u306e\u611f\u60c5\u5024\u3092\u53d6\u5f97\n\n#\u307e\u305a\u3001\u30d7\u30e9\u30b9\ndf_yqmd[\"sentiment_positive\"] = df_yqmd.Tweet_Text_Size_Block.map(lambda x : get_positive_power(x))\n\n#\u30cd\u30ac\u30c6\u30a3\u30d6\ndf_yqmd[\"sentiment_negative\"] = df_yqmd.Tweet_Text_Size_Block.map(lambda x : get_negative_power(x))\n\n#\u30dd\u30b8\u30cd\u30ac\ndf_yqmd[\"sentiment\"] = df_yqmd.Tweet_Text_Size_Block.map(lambda x : which_sentiment(x))\n\n#sentiment\u306e\u5dee\u3057\u5f15\u304d\ndf_yqmd[\"sentiment_net\"] = df_yqmd.sentiment_positive - df_yqmd.sentiment_negative","3386535e":"df_yqmd[[\"Tweet_Text_Size_Block\",\"sentiment_positive\",\"sentiment_negative\",\"sentiment\",\"sentiment_net\"]].head()","f34a9f94":"#\u30dd\u30b8\u30cd\u30ac\u306e\u5272\u5408\nplt.pie(df_yqmd.groupby(by=\"sentiment\").size()\/len(df_yqmd), labels=[\"negative\",\"positive\"], autopct=\"%1.1f%%\")\nplt.axis('equal')\n\n#\u307b\u3068\u3093\u3069\u304c\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u30c4\u30a4\u30fc\u30c8","0e41f4da":"**Data review and preprocessing**","9cef6725":"more detail\nhttps:\/\/note.mu\/natto_nebaneba\/n\/nbb55e19f2b97","1726671c":"Copyright 2019 Hiroki Nakayama\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}}