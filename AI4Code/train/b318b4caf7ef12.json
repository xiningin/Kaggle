{"cell_type":{"9b1a5590":"code","4a4bd01a":"code","1144a282":"code","37263c8e":"code","4132a7a4":"code","9741a83f":"code","c42a8003":"code","0233f47a":"code","b811ba90":"code","4f162b68":"code","9a2dd5b7":"code","6a1f1551":"code","26f4a7c5":"code","6ede122f":"code","ddda43f0":"code","8c6e10a3":"code","93733035":"code","9e8193d1":"code","bb17d674":"code","6118815c":"code","a1d9646f":"code","8abd38dd":"code","f8c8ad6e":"code","1a66acaa":"code","04b6ecce":"code","83ff189b":"code","89a5c265":"code","c13feb27":"code","d7ee937e":"code","72a2696c":"code","7132836e":"code","8f9538bd":"code","7f8c0854":"code","c6d49b3c":"code","6f3675a3":"code","0fb38de7":"code","ab6e6e6c":"code","c5325097":"code","4fe5d21e":"code","6402a57b":"code","7d632df0":"code","d5a50ef1":"code","b839b3ed":"code","3756cb02":"code","88f68f5d":"code","1a6fbc96":"code","a7317124":"code","4e7cc6cd":"code","86ba36ae":"code","fd6010d7":"code","d7be6194":"code","b152891c":"code","d05359ef":"code","0decf0ed":"code","30d06709":"code","6d179a87":"code","41660351":"code","d9272a24":"code","5b736ade":"code","8776a2c1":"code","ccab21f2":"code","5d43936e":"code","6f468734":"code","596d7e68":"code","0143427e":"code","3181d5f1":"code","78d08e0f":"code","c4100215":"markdown","882189f3":"markdown","3784e080":"markdown","14667b79":"markdown","61707877":"markdown","0e67c7eb":"markdown","13f1b521":"markdown","63574848":"markdown","09087127":"markdown","2409c634":"markdown","da2a9d75":"markdown","24120cf9":"markdown","f7984178":"markdown","f0c4ac4e":"markdown","28270100":"markdown","5d62d0b6":"markdown","f0eb4ae2":"markdown","bcaee26d":"markdown","2e8110b9":"markdown","2c5feb28":"markdown","cc81c8d5":"markdown","9f27499f":"markdown","f8bf3699":"markdown","3170011f":"markdown","9e7ea7e7":"markdown","4f34a6be":"markdown","e4b8b621":"markdown","1fe9eed3":"markdown","309bd9c3":"markdown","ca831a3c":"markdown","2771b0ea":"markdown","71896e1e":"markdown","f453d529":"markdown","33f6df58":"markdown","ddca24cb":"markdown","7672cd8d":"markdown","eb3e283b":"markdown","207832c7":"markdown","7dcda698":"markdown","1a6c831b":"markdown","4b37275a":"markdown","ca784c2d":"markdown","953b43fb":"markdown","ea12109c":"markdown","e2f93f12":"markdown","8a038ca6":"markdown","b95cd70b":"markdown"},"source":{"9b1a5590":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a4bd01a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport plotly.express as px\nwarnings.filterwarnings(action=\"ignore\")\nplt.style.use([\"seaborn-bright\",\"dark_background\"])","1144a282":"data = pd.read_csv(\"\/kaggle\/input\/ipl-dataset-20082020\/ipl_matches.csv\")\ndata.head()","37263c8e":"np.random.seed(7)\ndata.shape","4132a7a4":"data = data.drop(columns=[\"match_id\"])","9741a83f":"data[\"venue_id\"].unique()","c42a8003":"data[\"team1\"].unique()","0233f47a":"df = pd.DataFrame(data=data[\"player_of_match\"].value_counts()).head(20)\ndf.sort_values(by=\"player_of_match\",inplace=True)\nfig = px.bar(df,color=\"value\",orientation=\"h\",labels={\"index\":\"Players\",\"value\":\"No of Player of the Match Awards\"},\n            title=\"Players With Maximum Player of the match Awards\")\nfig.show()","b811ba90":"df = np.concatenate((data[\"umpire1\"],data[\"umpire2\"]),axis=0)","4f162b68":"df = pd.DataFrame(df,columns=[\"Umpire\"])","9a2dd5b7":"df[\"Umpire\"]","6a1f1551":"df = pd.DataFrame(data=df[\"Umpire\"].value_counts()).head(20)\ndf.sort_values(by=\"Umpire\",inplace=True)\nfig = px.bar(df,color=\"value\",orientation=\"h\",labels={\"index\":\"Umpire\",\"value\":\"No of Matches\"},\n            title=\"Most Matches as Umpire\")\nfig.show()","26f4a7c5":"df = pd.read_csv(\"\/kaggle\/input\/ipl-dataset-20082020\/ipl_venue.csv\")","6ede122f":"mapping = {1:'Visakhapatnam',2: 'Sharjah',3:'Ranchi',4: 'Rajkot',5: 'Raipur',6: 'Pune',7:'Pune',\n           8:'Port Elizabeth',9:'Nagpur',12: 'Mumbai',13:'Mumbai',14:'Mumbai',15:'Kolkata',\n           16: 'Kochi',17: 'Kimberley',18:'Kanpur',19:'Johannesburg',20: 'Jaipur',21: 'Indore',\n           22: 'Hyderabad',23: 'East London',24: 'Durban',25: 'Dubai',26:'Dharamsala',27: 'Delhi',\n           28: 'Cuttack',29: 'Chennai',30: 'Chandigarh',31:'Chandigarh',32 :'Centurion',33: 'Cape Town',\n           34: 'Bloemfontein',35 :'Bengaluru',37:'Ahmedabad',38 :'Abu Dhabi'}","ddda43f0":"mapping1 = {1:'Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium',2: 'Sharjah Cricket Stadium',3:'JSCA International Stadium Complex',\n            4:'Saurashtra Cricket Association Stadium',5:'Shaheed Veer Narayan Singh International Stadium',6:'Maharashtra Cricket Association Stadium',\n            7: 'Subrata Roy Sahara Stadium',8:\"St George's Park\",9:'Vidarbha Cricket Association Stadium Jamtha',\n            12:'Brabourne Stadium',13:'Dr DY Patil Sports Academy',14:'Wankhede Stadium',15: 'Eden Gardens',\n            16: 'Nehru Stadium',17:'De Beers Diamond Oval',18:'Green Park',19:'New Wanderers Stadium',20:'Sawai Mansingh Stadium',\n            21:'Holkar Cricket Stadium',22:'Rajiv Gandhi International Stadium, Uppal',23:'Buffalo Park',24:'Kingsmead',\n            25:'Dubai International Cricket Stadium',26:'Himachal Pradesh Cricket Association Stadium',27:'Feroz Shah Kotla',\n            28:'Barabati Stadium',29:'MA Chidambaram Stadium, Chepauk',30:'Punjab Cricket Association IS Bindra Stadium, Mohali',\n            31:'Punjab Cricket Association Stadium, Mohali',32:'SuperSport Park',33:'Newlands',34:'OUTsurance Oval',\n            35:'M.Chinnaswamy Stadium',37:'Sardar Patel Stadium, Motera',38:'Sheikh Zayed Stadium'}","8c6e10a3":"data[\"city\"] = data[\"venue_id\"].map(mapping)\ndata[\"venue\"] = data[\"venue_id\"].map(mapping1)","93733035":"data[\"city\"].unique()","9e8193d1":"df = pd.DataFrame(data=data[\"city\"].value_counts()).head(15)\ndf.sort_values(by=\"city\",inplace=True)\nfig = px.bar(df,color=\"value\",orientation=\"h\",labels={\"index\":\"City\",\"value\":\"No of Matches Hosted\"},\n            title=\"Cities with maximum matches hosted\")\nfig.show()","bb17d674":"df = pd.DataFrame(data=data[\"venue\"].value_counts()).head(15)\ndf.sort_values(by=\"venue\",inplace=True)\nfig = px.bar(df,color=\"value\",orientation=\"h\",labels={\"index\":\"Venue\",\"value\":\"No of Matches Hosted\"},\n            title=\"Venues with maximum matches hosted\")\nfig.show()","6118815c":"mapping = {'Sunrisers Hyderabad':\"SRH\", 'Mumbai Indians':\"MI\", 'Gujarat Lions':\"GL\",\n       'Rising Pune Supergiant':\"RPS\", 'Royal Challengers Bangalore':\"RCB\",\n       'Kolkata Knight Riders':\"KKR\", 'Delhi Daredevils':\"DC\", 'Kings XI Punjab':\"KXIP\",\n       'Chennai Super Kings':\"CSK\", 'Rajasthan Royals':\"RR\", 'Deccan Chargers':\"SRH\",\n       'Kochi Tuskers Kerala':\"KTK\", 'Pune Warriors':\"PW\", 'Rising Pune Supergiants':\"RPS\",\n       'Delhi Capitals':\"DC\"}","a1d9646f":"data[\"team1\"] = data[\"team1\"].map(mapping)\ndata[\"team2\"] = data[\"team2\"].map(mapping)\ndata[\"toss_winner\"] = data[\"toss_winner\"].map(mapping)\ndata[\"winner\"] = data[\"winner\"].map(mapping)","8abd38dd":"data[\"date\"] = pd.to_datetime(data[\"date\"])","f8c8ad6e":"data[\"year\"] = data[\"date\"].dt.year\ndata = data.drop(columns=[\"date\"])","1a66acaa":"# Total no of matches per year.\nplt.figure(figsize=(10,4))\nsns.countplot(data[\"year\"])\nplt.title(\"Total no. of matches per year\")\nplt.show()","04b6ecce":"data[\"winner\"].value_counts().plot(kind = \"pie\",title=\"Winning Percentage\",\n                                   colors=[\"blue\",\"gold\",\"rebeccapurple\",\"darkorange\",\"red\",\"darkred\",\"dodgerblue\",\n                                           \"orchid\",\"purple\",\"peru\",\"grey\",\"silver\"],\n                                   autopct='%1.0f%%',figsize=(6,6))\nplt.show()\n","83ff189b":"# Toss winners\nplt.figure(figsize=(15,4))\ndata[\"toss_winner\"].value_counts().plot(kind = \"bar\",title=\"Toss Winners\",\n                                        color=[\"blue\",\"darkorange\",\"dodgerblue\",\"rebeccapurple\",\"gold\",\n                                               \"orchid\",\"red\",\"darkred\",\"grey\",\"peru\",\"purple\",\"silver\"])\n\nplt.show()","89a5c265":"year_2008 = data[data[\"year\"]==2008]\nyear_2009 = data[data[\"year\"]==2009]\nyear_2010 = data[data[\"year\"]==2010]\nyear_2011 = data[data[\"year\"]==2011]\nyear_2012 = data[data[\"year\"]==2012]\nyear_2013 = data[data[\"year\"]==2013]\nyear_2014 = data[data[\"year\"]==2014]\nyear_2015 = data[data[\"year\"]==2015]\nyear_2016 = data[data[\"year\"]==2016]\nyear_2017 = data[data[\"year\"]==2017]\nyear_2018 = data[data[\"year\"]==2018]\nyear_2019 = data[data[\"year\"]==2019]\nyear_2020 = data[data[\"year\"]==2020]","c13feb27":"# Wins by teams each year.\nplt.figure(figsize=(15,4))\nyear_2008[\"winner\"].value_counts().plot(kind=\"bar\",title=2008,color=[\"orchid\",\"darkred\",\"gold\",\"dodgerblue\",\"b\",\"rebeccapurple\",\"r\",\"darkorange\"])\nplt.show()","d7ee937e":"plt.figure(figsize=(15,4))\nyear_2009[\"winner\"].value_counts().plot(kind=\"bar\",title=2009,color=[\"dodgerblue\",\"darkorange\",\"r\",\"gold\",\"darkred\",\"orchid\",\"b\",\"rebeccapurple\"])\nplt.show()","72a2696c":"plt.figure(figsize=(15,4))\nyear_2010[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2010\",color=[\"b\",\"gold\",\"darkorange\",\"r\",\"rebeccapurple\",\"dodgerblue\",\"orchid\",\"darkred\"])\nplt.show()","7132836e":"plt.figure(figsize=(15,4))\nyear_2011[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2011\",\n                                        color=[\"gold\",\"b\",\"r\",\"rebeccapurple\",\"darkred\",\"orchid\",\"darkorange\",\"salmon\",\"dodgerblue\",\"grey\"])\nplt.show()","8f9538bd":"plt.figure(figsize=(15,4))\nyear_2012[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2012\",\n                                        color=[\"rebeccapurple\",\"dodgerblue\",\"b\",\"gold\",\"darkred\",\"r\",\"orchid\",\"darkorange\",\"grey\"])\nplt.show()","7f8c0854":"plt.figure(figsize=(15,4))\nyear_2013[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2013\",\n                                        color=[\"b\",\"gold\",\"orchid\",\"darkorange\",\"r\",\"darkred\",\"rebeccapurple\",\"grey\",\"dodgerblue\"])\nplt.show()","c6d49b3c":"plt.figure(figsize=(15,4))\nyear_2014[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2014\",color=[\"darkred\",\"rebeccapurple\",\"gold\",\"orchid\",\"b\",\"darkorange\",\"r\",\"dodgerblue\"])\nplt.show()","6f3675a3":"plt.figure(figsize=(15,4))\nyear_2015[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2015\",color=[\"gold\",\"b\",\"r\",\"rebeccapurple\",\"orchid\",\"darkorange\",\"dodgerblue\",\"darkred\"])\nplt.show()","0fb38de7":"plt.figure(figsize=(15,4))\nyear_2016[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2016\",color=[\"darkorange\",\"sandybrown\",\"r\",\"rebeccapurple\",\"b\",\"dodgerblue\",\"purple\",\"darkred\"])\nplt.show()","ab6e6e6c":"plt.figure(figsize=(15,4))\nyear_2017[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2017\",color=[\"b\",\"purple\",\"rebeccapurple\",\"darkorange\",\"darkred\",\"dodgerblue\",\"peru\",\"r\"])\nplt.show()","c5325097":"plt.figure(figsize=(15,4))\nyear_2018[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2018\",color=[\"gold\",\"darkorange\",\"rebeccapurple\",\"orchid\",\"darkred\",\"b\",\"r\",\"dodgerblue\"])\nplt.show()","4fe5d21e":"plt.figure(figsize=(15,4))\nyear_2019[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2019\",color=[\"b\",\"dodgerblue\",\"gold\",\"rebeccapurple\",\"darkorange\",\"darkred\",\"orchid\",\"r\"])\nplt.show()","6402a57b":"plt.figure(figsize=(15,4))\nyear_2020[\"winner\"].value_counts().plot(kind=\"bar\",title=\"2020\",color=[\"b\",\"dodgerblue\",\"darkorange\",\"rebeccapurple\",\"r\",\"orchid\",\"darkred\",\"gold\"])\nplt.show()","7d632df0":"data[\"toss_decision\"].value_counts().plot(kind=\"pie\",cmap=\"rainbow\",autopct='%1.0f%%',title=\"Pie chart for toss decision\",figsize=(5,5))\nplt.show()","d5a50ef1":"data[\"win_toss_to_game\"] = (data[\"toss_winner\"]==data[\"winner\"])","b839b3ed":"data[\"win_toss_to_game\"] = np.where(data[\"win_toss_to_game\"]==True,\"Win\",\"Lose\")","3756cb02":"# Plotting bar graph for teams which wins toss and wins match or not.\ndata[\"win_toss_to_game\"].value_counts().plot(kind=\"bar\",color=[\"g\",\"r\"])\nplt.show()","88f68f5d":"df = data.copy()\ndf = df.replace([\"wickets\",\"runs\"],[\"Defended\",\"Chased\"])\ndf[\"result\"].value_counts().plot(kind=\"bar\",title=\"Counts Of Result Of Match\",color=[\"r\",\"gold\",\"c\"],figsize=(7,7))\nplt.show()","1a6fbc96":"data[\"win_by_run\"] = np.where(data[\"result\"]==\"runs\",1,0)\ndata[\"win_by_wicket\"] = np.where(data[\"result\"]==\"wickets\",1,0)","a7317124":"data[\"win_by_run\"].value_counts()","4e7cc6cd":"team = data[\"team1\"].unique().tolist()","86ba36ae":"teams1 = []\nwins1 = []\nfor t in team:\n    rs_df = data.loc[data['winner'] == t] \n    wins1.append(rs_df[\"win_by_run\"].value_counts())\n    teams1.append(t)","fd6010d7":"teams2 = []\nwins2 = []\nfor t in team:\n    rs_df = data.loc[data['winner'] == t] \n    wins2.append(rs_df[\"win_by_wicket\"].value_counts())\n    teams2.append(t)","d7be6194":"wins_by_runs = []\nfor i in range(len(wins1)):\n    wins_by_runs.append(wins1[i][1])","b152891c":"wins_by_wickets = []\nfor i in range(len(wins2)):\n    wins_by_wickets.append(wins2[i][1])","d05359ef":"#Plotting bar chart for number of matches succesfully defended by team\nplt.figure(figsize=(10,7))\nplt.title(\"Wins while Defending\",fontsize=20)\nplt.bar(teams1,wins_by_runs,color=[\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"])\nplt.xlabel(\"Teams\",fontsize=15)\nplt.ylabel(\"No of wins\",fontsize=15)\nplt.show()\n","0decf0ed":"#Plotting bar chart for number of matches succesfully chased by team.\nplt.figure(figsize=(10,7))\nplt.title(\"Wins while Chasing\",fontsize=20)\nplt.bar(teams2,wins_by_wickets,color=[\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"])\nplt.xlabel(\"Teams\",fontsize=15)\nplt.ylabel(\"No of wins\",fontsize=15)\nplt.show()\n","30d06709":"tt = data[\"team1\"].unique().tolist()","6d179a87":"#CSK\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"salmon\",\"grey\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"CSK\":\n        inx = data.loc[((data[\"team1\"] == \"CSK\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"CSK\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"CSK\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"yellow\"\n                b = colors[x%10]\n                labels = [\"CSK\",y]\n            else:\n                a,b = colors[x%10],\"yellow\"\n                labels = [y,\"CSK\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",autopct='%1.0f%%',colors = [a,b],labels=labels)\n            plt.title(\"CSK VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n                #plt.show()\n            z = z+1\n            c = c+1\n            x = x+1    ","41660351":"# MI\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"MI\":\n        inx = data.loc[((data[\"team1\"] == \"MI\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"MI\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"MI\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"b\"\n                b = colors[x%11]\n                labels = [\"MI\",y]\n            else:\n                a,b = colors[x%11],\"b\"\n                labels = [y,\"MI\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",autopct='%1.0f%%',labels=labels,colors = [a,b])\n            plt.title(\"MI VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","d9272a24":"#RCB\nz = 1\nc = 1\ncolors = [\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"RCB\":\n        inx = data.loc[((data[\"team1\"] == \"RCB\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"RCB\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"RCB\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"r\"\n                b = colors[x%11]\n                labels = [\"RCB\",y]\n            else:\n                a,b = colors[x%9],\"r\"\n                labels = [y,\"RCB\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"RCB VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","5b736ade":"#KKR\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"KKR\":\n        inx = data.loc[((data[\"team1\"] == \"KKR\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"KKR\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"KKR\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"indigo\"\n                b = colors[x%11]\n                labels = [\"KKR\",y]\n            else:\n                a,b = colors[x%9],\"indigo\"\n                labels = [y,\"KKR\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"KKR VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","8776a2c1":"# SRH\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"SRH\":\n        inx = data.loc[((data[\"team1\"] == \"SRH\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"SRH\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"SRH\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"darkorange\"\n                b = colors[x%11]\n                labels = [\"SRH\",y]\n            else:\n                a,b = colors[x%11],\"darkorange\"\n                labels = [y,\"SRH\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"SRH VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","ccab21f2":"# GL\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"darkorange\",\"salmon\",\"grey\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"GL\":\n        inx = data.loc[((data[\"team1\"] == \"GL\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"GL\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"GL\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"sandybrown\"\n                b = colors[x%10]\n                labels = [\"GL\",y]\n            else:\n                a,b = colors[x%9],\"sandybrown\"\n                labels = [y,\"GL\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"GL VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","5d43936e":"# RPS\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"darkorange\",\"salmon\",\"grey\",\"peru\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"RPS\":\n        inx = data.loc[((data[\"team1\"] == \"RPS\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"RPS\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"RPS\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"purple\"\n                b = colors[x%10]\n                labels = [\"RPS\",y]\n            else:\n                a,b = colors[x%9],\"purple\"\n                labels = [y,\"RPS\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"RPS VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","6f468734":"# DC\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"DC\":\n        inx = data.loc[((data[\"team1\"] == \"DC\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"DC\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"DC\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"dodgerblue\"\n                b = colors[x%11]\n                labels = [\"DC\",y]\n            else:\n                a,b = colors[x%9],\"dodgerblue\"\n                labels = [y,\"DC\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"DC VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","596d7e68":"# KXIP\nz = 1\nc = 1\ncolors = [\"r\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\",\"grey\",\"peru\",\"purple\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"KXIP\":\n        inx = data.loc[((data[\"team1\"] == \"KXIP\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"KXIP\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"KXIP\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"darkred\"\n                b = colors[x%11]\n                labels = [\"KXIP\",y]\n            else:\n                a,b = colors[x%9],\"darkred\"\n                labels = [y,\"KXIP\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"KXIP VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","0143427e":"# RR\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"darkorange\",\"gold\",\"salmon\",\"grey\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"RR\":\n        inx = data.loc[((data[\"team1\"] == \"RR\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"RR\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"RR\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"orchid\"\n                b = colors[x%10]\n                labels = [\"RR\",y]\n            else:\n                a,b = colors[x%9],\"orchid\"\n                labels = [y,\"RR\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",autopct='%1.0f%%',colors = [a,b],labels=labels)\n            plt.title(\"RR VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","3181d5f1":"# KTK\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"grey\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"KTK\":\n        inx = data.loc[((data[\"team1\"] == \"KTK\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"KTK\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"KTK\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"salmon\"\n                b = colors[x%9]\n                labels = [\"KTK\",y]\n            else:\n                a,b = colors[x%8],\"salmon\"\n                labels = [y,\"KTK\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"KTK VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","78d08e0f":"#PW\nz = 1\nc = 1\ncolors = [\"r\",\"darkred\",\"dodgerblue\",\"b\",\"indigo\",\"orchid\",\"darkorange\",\"gold\",\"salmon\"]\nx = 0\nplt.figure(figsize=(20,12))\nfor y in tt:\n    if y!=\"PW\":\n        inx = data.loc[((data[\"team1\"] == \"PW\") & (data[\"team2\"] == y)) | ((data[\"team1\"] == y) & (data[\"team2\"] == \"PW\")),\"winner\"]\n        if len(inx) > 0:\n            a = 0\n            b = 0\n            for i in inx.values:\n                if i == \"PW\":\n                    a = a+1\n                else:\n                    b = b+1\n            if a>=b:\n                a = \"grey\"\n                b = colors[x%9]\n                labels = [\"PW\",y]\n            else:\n                a,b = colors[x%8],\"grey\"\n                labels = [y,\"PW\"]\n            ax1 = plt.subplot(3,5,c)\n            inx.value_counts().plot(kind=\"pie\",labels=labels,autopct='%1.0f%%',colors = [a,b])\n            plt.title(\"PW VS {}\".format(y))\n            centre_circle = plt.Circle((0,0),0.70,fc='black')\n            fig = plt.gcf()\n            fig.gca().add_artist(centre_circle)\n            ax1.axis('equal')  \n            plt.tight_layout()\n            z = z+1\n            c = c+1\n            x = x+1    ","c4100215":"# MI","882189f3":"## Most Matches As Umpire","3784e080":"### 2010","14667b79":"## Toss Winners.","61707877":"# CSK","0e67c7eb":"# KXIP","13f1b521":"#### MI , CSK and SRH defended their targets which means they have good bowling attack.","63574848":"# KKR","09087127":"### 2019","2409c634":"# SRH","da2a9d75":"### 2017","24120cf9":"# THANK YOU","f7984178":"# RPS","f0c4ac4e":"### 2016","28270100":"### 2011","5d62d0b6":"#### On other hand KKR and MI chased the targets most.","f0eb4ae2":"### Total number of matches per year.","bcaee26d":"#### However the toss did not impact on the result that much. The win and loss of match  percent after winning the toss in close enough.","2e8110b9":"### 2014","2c5feb28":"### 2008","cc81c8d5":"# KTK","9f27499f":"### 2012","f8bf3699":"## Top 15 IPL match venues","3170011f":"# RCB","9e7ea7e7":"## Wins while Chasing.","4f34a6be":"# GL","e4b8b621":"### Importing all required libraries and dataset.","1fe9eed3":"## Top 15 ipl match cities.","309bd9c3":"### Win or loss after winning toss.","ca831a3c":"## Most times player of the match winners.","2771b0ea":"# RR","71896e1e":"#### Most of the teams loves to chase the target and choose to field after winning toss.","f453d529":"#### More than 95% matches are ended through the normal way.","33f6df58":"### 2018","ddca24cb":"### 2009","7672cd8d":"## 2020","eb3e283b":"### Descision after winning toss.","207832c7":"## Plotting pie chart for head to head win % by each team.","7dcda698":"## Wins while Defending.","1a6c831b":"# DC","4b37275a":"### Win percentage of each team.","ca784c2d":"# PW","953b43fb":"#### Here it is clear that CSK and MI are dominating over others.","ea12109c":"### 2015","e2f93f12":"## Total wins by each team from 2008-2019.","8a038ca6":"#### 2011,2012 and 2013 were the years with more matches than other years, just because there were more than 8 IPL teams from year 2011-13 and only 8 IPL teams for other years.","b95cd70b":"### 2013"}}