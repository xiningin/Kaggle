{"cell_type":{"91ec1846":"code","3ac181a9":"code","091d9b65":"code","4c3056ed":"code","eec222bd":"code","1ee47a64":"code","9f940b20":"code","73210488":"code","0bc73907":"code","82b8effa":"code","7880390d":"code","aeb2553c":"code","79a8233e":"code","8164f245":"code","e4b61dd7":"code","9de71140":"code","7a432045":"code","8d6794ec":"code","e0a7dca0":"code","fbdd4f66":"code","26b34910":"markdown","b7db78fc":"markdown","9ec6116e":"markdown","938ea35c":"markdown","39ee17b8":"markdown","17fe403f":"markdown","89888ca6":"markdown","2b118e6a":"markdown","94d110bf":"markdown","c25712ff":"markdown","58476025":"markdown","c9f31f0d":"markdown","441f4e5d":"markdown","ef2001ed":"markdown","d1266409":"markdown","efbeb6be":"markdown","4afd48fe":"markdown","d080b932":"markdown","853c4f83":"markdown"},"source":{"91ec1846":"# importing two basic libraries\nimport pandas as pd\nimport os","3ac181a9":"# Print list of available files\nprint(os.listdir(\"..\/input\"))","091d9b65":"# Import train.csv file in df_train dataframe\ndf_train = pd.read_csv(\"..\/input\/train.csv\")\n\n# Print all the columns available from file:\ndf_train.columns","4c3056ed":"# How to calculate total missing values\ntotal = df_train.isnull().sum().sort_values(ascending=False)\n\n# Calculate percentage of missing values\npercent = ((df_train.isnull().sum()\/df_train.isnull().count())*100).sort_values(ascending=False)\n\n# Presenting in tabular form by concatinating both values and create a seperate data set\nmissing_data = pd.concat([total,percent],axis=1,keys=['Total','Percent'])\n\n# Now check top results of missing_data\nmissing_data.head(20)","eec222bd":"# Copying data frame\ndf_train_delrows = df_train","1ee47a64":"# All rows with less than 5% and greater than 0% of missing data\nmissing_data[(missing_data['Percent']<5) & (missing_data['Percent']>0)]","9f940b20":"# We can select rows by using below statement and then use it seperatly for each feature rows:\ndf_train_delrows[df_train_delrows['Electrical'].isnull()]","73210488":"# Deleting rows based on our above statement:\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['BsmtExposure'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['BsmtFinType2'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['BsmtFinType1'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['BsmtCond'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['BsmtQual'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['MasVnrArea'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['MasVnrType'].isnull()]).index,0)\ndf_train_delrows = df_train_delrows.drop((df_train_delrows[df_train_delrows['Electrical'].isnull()]).index,0)","0bc73907":"# Now verify if there is any missing data left for any of these columns\ndf_train_delrows['BsmtQual'].isnull().sum()\ndf_train_delrows['MasVnrArea'].isnull().sum()","82b8effa":"# Let's see missing_data dataset\nmissing_data.head(20)","7880390d":"# Loading a seperate dataset for mean\ndf_train_men = df_train","aeb2553c":"# Calculate Mean\ndf_train_men['MasVnrArea'].mean()","79a8233e":"df_train_men[df_train_men['MasVnrArea'].isnull()]","8164f245":"# now we can fill NaN records with Mean values\ndf_train_men['MasVnrArea'].fillna(df_train_men['MasVnrArea'].mean(), inplace=True)","e4b61dd7":"# Verify if NaN records still exists or not\ndf_train_men[df_train_men['MasVnrArea'].isnull()]","9de71140":"# Load df_train in seperate dataframe\ndf_train_null = df_train","7a432045":"df_train_null[df_train_null['MasVnrType'].isnull()]","8d6794ec":"# Percentage of missing values:\nmissing_data.head(20)","e0a7dca0":"# Dropping entire feature\ndf_train_null = df_train_null.drop((missing_data[missing_data['Percent']>15]).index,axis=1)","fbdd4f66":"# Verify if columns exist or not\ndf_train_null.isnull().sum().sort_values(ascending=False).head(20)","26b34910":"<h1>Ways to handle missing data in a data set<\/h1>\n\nThere can be multiple ways to handle missing data and this notebook I have mentioned below 5 best methods. Any method can be choosen depending upon the application. you can also think of any other method also depending upon the project requirement you have.\n\n<b>when missing data is small:<\/b>\n1. Deleting Rows\n2. Replacing with Mean\/Median\/Mode values\n3. Predicting the missing value\n4. Using algorithm which support missing values\n\n<b>When missing data is too large:<\/b>\n5. Dropping the entire column\n\nOur primary data set will remain **df_train** and dataframe having missing data will be **missing_data**. For simplicity I will be creating a seperate dataframe.","b7db78fc":"Now We can predict values of 'MasVnrType' by analysing other features like SalePrice and Basement area. This depends entirely on what feature we choose based on requirement.\n\nOne Buyer gives priority to Basement are and other buyer giver priority to location. Values will change accordingly.","9ec6116e":"<h1>Introduction<\/h1>","938ea35c":"Similarly, we can replace missing values with Mean\/Midean\/Mode.","39ee17b8":"<h2>Handling Missing Data Approach<\/h2>","17fe403f":"<h1>Checking Null values in our data set<\/h1>\n\nData is missing randomly so it becomes really important to visualize missing data in a tabular form. Here we will be presenting missing data in terms of \"Total\" missing values and \"Percent\" of missing values.","89888ca6":"In this exercise we are going to use train.csv and try to handle missing values in this data set.","2b118e6a":"<b>Pros: <\/b>\n\n1. No rows are deleted using this method\n2. God approach when missing data is small\n\n<b>Pros: <\/b>\n\n1. Imputing values creates variance in data set and may cause incorrect analysis.","94d110bf":"In Data Science problems there are many instances where the data provided will have missing values. Reason for missing values can be anything like data curropt while processing, connection timeout\/break during transfer of data or someone can willfully provide incomplete information(like in survey forms).\n\nIf missing data is not handled properly then it can cause incorrect results of our Data Science model resulting in inaccurate predictions.\n\nIn this notebook I have used House Prices training data set. You can access this data from kaggle from this [LINK](https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/data)\n","c25712ff":"Since we are taking action based on percentage of missing data, we are going to use **missing_date** to filter df_train_delrows data.","58476025":"According to me, there are two basic approach to handle missing data:\n1. When missing data too large\n2. When missing data is small\n\nWhen missing data is too large, more then 80% or more than 90% (As per requirement) then it is advisable to drop entire columna nd not consider that particular column for further analysis. This is because the missing data is too large that predecting values can be tough and too risky. If values are predected wrong then it can also cause errors in our analysis.\n\nWhen missing data is small we can do two things. First we can remove only those **rows** which have missing values, secondly we can try to **impute or replace those missing values** be certain analysis of already available values in our data set.\n\nLet's import and look at our data.","c9f31f0d":"<h3>2. Relacing with Mean\/Median\/Mode values<\/h3>\nThe method is also used when missing data is small and we do not want to drop entire column. This is a statistical approach to replace misssing data and sometimes this approximation causes variance in our data set.\n\nThis method can only be applied where missing data is numeric like HousePrice or Airline Fares.","441f4e5d":"<h3>1. Deleting Rows<\/h3>\nThis method should be used only when missing values are small. Applications where data is present in lakhs and crores, this method will only create positive impact in our further analysis.\n\nFor this step, let's create a different dataframe using **df_train** say **df_train_delrows**","ef2001ed":"<h3>4. Using algorithm which support missing values<\/h3>\n\nKNN is a machine learning algorithm which works on the principle of distance measure. We can use this algorithm when there are null data present s the daa set. When the algorithm is applied, KNN considers the missing values by taking the majority of the K nearest values\n\nAnother algorithm which can be used is Random Forest. It adapts to the data structure taking into consideration of the high variance or the bias, producing better results on large datasets.","d1266409":"Now consider we have decided to drop all those features for which values are missing more than 15%","efbeb6be":"Say for our analysis we consider **'MasVnrArea' feature** and we will try to replace it's missing values.\n\nPredefined methods for **Mean is df_train.mean()**, for **median is df_train.median** and for **mode is df_train.mode()**","4afd48fe":"<h3>5. Dropping the entire Columns<\/h3>\n\nWe choose to drop entire column only when missing values are too large(say more than 15%). It becomes almost impossible to replace these values by any other values because it will only create variation and incorrect analysis.\n\nIn our notebook we will use missing_data dataframe and see what are the large values which are missing.","d080b932":"<b>Pros:<\/b>\n1. Complete removal of missing rows helps develop highly accurate model\n2. Deleting less number of rows doesn't impact our data set and can be used effectively\n\n<b>Cons:<\/b>\n1. Mojour loss will be there in case this method is used where data missing is too large(say 50%)","853c4f83":"<h3>3. Predicting the mising values<\/h3>\n\nUsing features which don't have missing values we can predict the null values. This can be done by choosing the best possible values by analyzing other available features."}}