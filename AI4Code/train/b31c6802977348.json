{"cell_type":{"f89e3ff0":"code","0dc9bebf":"code","ff2f80aa":"code","f0cf2021":"code","d5e96254":"code","f7407c41":"code","c01ea79f":"code","1067b913":"code","e6dc3165":"code","a91b2984":"code","47a8ef82":"code","eebf330a":"code","afa9a4b2":"code","f2756d1e":"code","a9328e73":"code","d6147e96":"code","48815bd8":"markdown"},"source":{"f89e3ff0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0dc9bebf":"from PIL import Image","ff2f80aa":"image = Image.open(\"..\/input\/11111\/data\/pic\/framework.jpg\")\nimage","f0cf2021":"df2 = pd.read_csv(\"\/kaggle\/input\/11111\/data\/valid\/standard.csv\", delimiter=',', encoding='utf8')\ndf2.head()","d5e96254":"pip install xlrd","f7407c41":"!pip install openpyxl","c01ea79f":"df4 = pd.read_excel('\/kaggle\/input\/11111\/data\/official\/-train.xls')\ndf4.head()","1067b913":"df = pd.read_csv(\"\/kaggle\/input\/11111\/data\/invalid\/baidu_extract.csv\", delimiter=',', encoding='ISO-8859-2')\ndf.head()","e6dc3165":"df1 = pd.read_csv(\"\/kaggle\/input\/11111\/data\/invalid\/baidu.csv\", delimiter=',', encoding='ISO-8859-2')\ndf1.head()","a91b2984":"df3 = pd.read_csv(\"\/kaggle\/input\/11111\/data\/invalid\/zhidao.csv\", delimiter=',', encoding='ISO-8859-2')\ndf3.head()","47a8ef82":"df5 = pd.read_csv(\"\/kaggle\/input\/11111\/data\/invalid\/sogou.csv\", delimiter=',', encoding='ISO-8859-2')\ndf5.head()","eebf330a":"df4[\"\u5ba2\u6237\u63d0\u95ee\"].value_counts()","afa9a4b2":"df4[\"\u77e5\u8bc6\u5e93\u6807\u51c6\u95ee\"].value_counts()","f2756d1e":"df6 = pd.read_csv(\"\/kaggle\/input\/11111\/data\/valid\/final_shuffle.csv\", delimiter=',', encoding='ISO-8859-2')\ndf6.head()","a9328e73":"idea_file = !ls \/kaggle\/input\/11111\/.idea\/workspace.xml","d6147e96":"import lxml.etree as le\nimport lxml.html, lxml.html.clean\n\ncleaner = lxml.html.clean.Cleaner(allow_tags=[], remove_unknown_tags=False)\n\nfor xml_file in idea_file:\n    with open(xml_file,'r') as f:\n        doc=le.parse(f)\n        body = doc.xpath(\".\/body\")[4]\n        for elem in body.xpath(\".\/\/xref\") + body.xpath(\".\/\/disp-formula\") + body.xpath(\".\/\/inline-formula\") + body.xpath(\".\/\/fig\") + body.xpath(\".\/\/title\") + body.xpath(\".\/\/sub\") + body.xpath(\".\/\/sup\") + body.xpath(\".\/\/italic\"):\n            parent=elem.getparent()\n            parent.remove(elem)\n        lxml.etree.strip_tags(body, \"*\")\n        with open(xml_file.split(\"\/\")[-1].replace(\".xml\", \".txt\"),'w') as f_out:\n            f_out.write(body.text)","48815bd8":"Since I got  IndexError: list index out of range above and have No ideas left to work. I'll stop now. "}}