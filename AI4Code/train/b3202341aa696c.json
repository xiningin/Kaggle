{"cell_type":{"5276d4ef":"code","a7dc551d":"code","adee866c":"code","af914835":"code","8e9c165c":"code","cbc6da75":"code","b5f25bda":"code","4310d3b3":"code","7a7144e6":"code","a993e869":"code","a823e7ab":"code","231708fd":"code","ceac25bf":"code","6a75f6b8":"code","9bc83de7":"code","67fc8691":"code","8ab6dbad":"code","e1c6f6ad":"code","b01a0378":"code","50cb0283":"code","ad65f7a6":"code","5675ec43":"code","36c70816":"code","f3184dc5":"code","a0767375":"code","b46e91f5":"code","d1be842f":"code","09d4172d":"code","70040d3e":"code","6949e44f":"code","147fa253":"code","6d2f2d4e":"code","bf4fe39f":"code","69e6f1bb":"code","692c0aea":"code","d917b05c":"code","8778009a":"code","18451342":"code","260af18d":"code","9d5d69d3":"code","bed9ece0":"code","541c3434":"code","a1268e25":"code","7f5a2846":"code","d8c3650e":"code","422fa118":"code","677be38f":"code","1569e5a1":"code","1bb03ba9":"code","958b4040":"code","6cae6e87":"code","a99cc972":"markdown","60000a48":"markdown","200da270":"markdown","8692b443":"markdown","6eb0b1e0":"markdown","e4a4f98d":"markdown","acd023cc":"markdown","a2626b21":"markdown","05e7c8bf":"markdown","13952880":"markdown","87a48c73":"markdown","047fe872":"markdown","f6115e65":"markdown","a0d5a520":"markdown","ade97bb6":"markdown","3c15b2b1":"markdown","acf452e7":"markdown","3a68be58":"markdown","320544b5":"markdown","08bca2ff":"markdown","e222988f":"markdown","aa766ded":"markdown","3a66bd65":"markdown","c7d53a0c":"markdown","b38d7876":"markdown","2adce7bb":"markdown","a4d1750d":"markdown","d0becb6f":"markdown","7dae9852":"markdown","6483f8ec":"markdown","ed4d5e58":"markdown","f5cedbf9":"markdown","d000d8d8":"markdown","473547db":"markdown","4a2249c9":"markdown","21917bc8":"markdown"},"source":{"5276d4ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a7dc551d":"#importing packages we will need:\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_theme()\n","adee866c":"#loading data and checking for first 4 rows\n\ndf=pd.read_csv(\"\/kaggle\/input\/noshowappointments\/KaggleV2-May-2016.csv\")\ndf.head(4)","af914835":"#number of Appointment for patients [rows] and their characteristics [coloumns]\ndf.shape","8e9c165c":"#inspectng data type and missing values\ndf.info()","cbc6da75":"df.describe() #descibe short statistics for datatset","b5f25bda":"#looking for duplicate data \ndf.AppointmentID.duplicated().sum()\n\n","4310d3b3":"#detecting outliers using box plot\n\ndf.Age.plot(kind='box',)","7a7144e6":"#detecting outliers using interquantile\nq_1=df.Age.quantile(.25)\nq_3=df.Age.quantile(.75)\niqr=q_3-q_1\nlower_limit=q_1-1.5*iqr\nupper_limit=q_3+1.5*iqr\nlower_limit,upper_limit\ndf.Age[(df.Age<lower_limit)|(df.Age>upper_limit)]\n","a993e869":"#selecting age (0)years old \nage_0=df[df.Age==0]\nage_0[['AppointmentID','PatientId','Gender']]","a823e7ab":"df.drop(['AppointmentID','PatientId','ScheduledDay','AppointmentDay'],axis=1,inplace=True)","231708fd":"df.columns= df.columns.str.lower()\ndf.columns","ceac25bf":"df.rename(columns={'no-show':'no_show'},inplace=True)","6a75f6b8":"df.head() #showing 5th rows to make sure changes has happened","9bc83de7":"#pd.plotting.scatter_matrix(df,figsize=(15,15));","67fc8691":"df.hist(figsize=(18,18));","8ab6dbad":"#use attend\/not_attend to make it easy for recall and comparison\nattend=df['no_show']=='No'\nnot_attend=df['no_show']=='Yes'","e1c6f6ad":"#number of attendence , not attendenence ,total\nn_att=df[attend]['gender'].count()\nn_not_att=df[not_attend]['gender'].count()\ntotal=df.shape[0]","b01a0378":"print('percentage of attendence',((n_att\/total)*100).round(),'%')\nprint('percentage of not attendence',((n_not_att\/total)*100).round(),'%')","50cb0283":"df['no_show'].value_counts().plot(kind='pie',autopct='%.0f%%',labels=['show','not show'],shadow=True,radius=3,explode=[0,.2],fontsize=20)\nplt.axis('equal')\nplt.show()","ad65f7a6":"#define function that make histogram\ndef column_histogram(col_name = \"\"):\n    \"\"\" this function take coloumn name and make histogram that compare between  those who shown and whose not depending on that coloum  \"\"\"\n    df[col_name][attend].hist(alpha=.5,label='show')\n    df[col_name][not_attend].hist(alpha=.5,label='no show')\n    plt.title('comparison between  those who shown and whose not depending on {}'.format(col_name))\n    plt.xlabel('{}'.format(col_name))\n    plt.ylabel('number of patients')\n    plt.legend()\n    plt.show()","5675ec43":"gender_counts = df.groupby(['gender', 'no_show']).count()['age']\ngender_counts","36c70816":"gender_totals = df.groupby('gender').count()['age']\ngender_totals","f3184dc5":"female_proportions = gender_counts['F'] \/ gender_totals['F']\nfemale_proportions","a0767375":"male_proportions = gender_counts['M'] \/ gender_totals['M']\nmale_proportions","b46e91f5":"ind = np.arange(len(male_proportions)) # the x locations for the groups\nwidth = 0.35       # the width of the bars\n# plot bars\nfemale_bars = plt.bar(ind, female_proportions, width, color='r', alpha=.7, label='femal')\nmale_bars = plt.bar(ind + width, male_proportions, width, color='b', alpha=.7, label='male')\n\n# title and labels\nplt.ylabel('Proportion')\nplt.xlabel('show')\nplt.title('Proportion by gender and show')\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['show', 'not show']  # xtick labels\nplt.xticks(locations, labels)\n\n# legend\nplt.legend()","d1be842f":"df['scholarship'] = df['scholarship'].astype(str)","09d4172d":"scolarship_counts = df.groupby(['scholarship', 'no_show']).count()['age']\n\n","70040d3e":"scholarship_totals = df.groupby('scholarship').count()['age']\n","6949e44f":"no_schol_proportions = scolarship_counts['1'] \/ scholarship_totals['1']\n","147fa253":"schol_proportions = scolarship_counts['0'] \/ scholarship_totals['0']\n","6d2f2d4e":"ind = np.arange(len(schol_proportions)) # the x locations for the groups\nwidth = 0.35       # the width of the bars\n# plot bars\nno_schol_proportions_bars = plt.bar(ind, no_schol_proportions, width, color='r', alpha=.7, label='no_scholalship')\nschol_proportions_bars = plt.bar(ind + width, male_proportions, width, color='g', alpha=.7, label='scholalship')\n\n# title and labels\nplt.ylabel('Proportion')\nplt.xlabel('show')\nplt.title('Proportion by scholarship and show')\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['show', 'not show']  # xtick labels\nplt.xticks(locations, labels)\n\n# legend\nplt.legend()","bf4fe39f":"#use attend\/not_attend to make it easy for recall and comparison\nattend=df['no_show']=='No'\nnot_attend=df['no_show']=='Yes'","69e6f1bb":"column_histogram(col_name = \"hipertension\")","692c0aea":"column_histogram(col_name = \"diabetes\")","d917b05c":"column_histogram(col_name = \"alcoholism\")\n","8778009a":"column_histogram(col_name = \"handcap\")\n","18451342":"column_histogram(col_name = \"sms_received\")\n","260af18d":"df['sms_received'] = df['sms_received'].astype(str)","9d5d69d3":"df.groupby(['sms_received', 'no_show']).count()['age']","bed9ece0":"sms_received_counts = df.groupby(['sms_received', 'no_show']).count()['age']\n\n\nsms_received_totals = df.groupby('sms_received').count()['age']\n\n\nnot_received_proportions =sms_received_counts['0'] \/ sms_received_totals['0']\n\n\nreceived_proportions = sms_received_counts['1'] \/ sms_received_totals['1']\n\n\nind = np.arange(len(not_received_proportions)) # the x locations for the groups\nwidth = 0.35       # the width of the bars\n# plot bars\nnot_received_bars = plt.bar(ind, not_received_proportions, width, color='r', alpha=.7, label='not_received')\nreceived_bars = plt.bar(ind + width, received_proportions, width, color='b', alpha=.7, label='received')\n\n# title and labels\nplt.ylabel('Proportion')\nplt.xlabel('show')\nplt.title('Proportion by receiving sms and show')\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['show', 'not show']  # xtick labels\nplt.xticks(locations, labels)\n# legend\nplt.legend()\nplt.show()","541c3434":"df.shape","a1268e25":"df=df[df['age']>-1] #drop age(-1)years old  since it may be wrong entering \n                    #but it could be someone who don't to reveal his age\n                     #however  it still one row so it doesn't have great significan't on our analysis\n","7f5a2846":"df.shape","d8c3650e":"df.age.describe()","422fa118":"\nplt.figure(figsize=[14,8])\ndf.age[attend].hist(alpha=.5,label='show',bins=[  0, 29, 58,87, 116])\ndf.age[not_attend].hist(alpha=.5,label='no show', bins=[ 0, 29, 58,87, 116 ])\nplt.title('comparison between  those who shown and whose not depending on age')\nplt.xlabel('age')\nplt.ylabel('number of patients')\n\nplt.legend()\nplt.show()\n","677be38f":"bin_edges=[0, 29, 58,87, 116]\nbin_names=['1','2','3','4']\ndf['age_level']=pd.cut(df['age'],bin_edges,labels=bin_names)\n\nplt.figure(figsize=[14,8])\n\nage_level_counts = df.groupby(['age_level', 'no_show']).count()['age']\n\n\nage_level_totals = df.groupby('age_level').count()['age']\n\n\n\nproportions1 = age_level_counts['1'] \/ age_level_totals['1']\n\nproportions2 = age_level_counts['2'] \/ age_level_totals['2']\n\nproportions3 = age_level_counts['3'] \/ age_level_totals['3']\n\nproportions4 = age_level_counts['4'] \/ age_level_totals['4']\n#proportions5 = age_level_counts['5'] \/ age_level_totals['5']\n\nind = np.arange(len(proportions1)) # the x locations for the groups\nwidth = 0.10       # the width of the bars\n# plot bars\nbars1 = plt.bar(ind , proportions1, width, color='k', alpha=.7, label='0:29')\nbars2 = plt.bar(ind + width, proportions2, width, color='y', alpha=.7, label='29:58')\nbars3= plt.bar(ind + width*2, proportions3, width, color='b', alpha=.7, label='57:87')\nbars4 = plt.bar(ind + width*3, proportions4, width, color='r', alpha=.7, label='87:115')\n#bars5 = plt.bar(ind + width*4, proportions5, width, color='w', alpha=.7, label='5')\n\n# title and labels\n\nplt.ylabel('Proportion')\nplt.xlabel('show')\nplt.title('Proportion by age_level and show')\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['show', 'not show']  # xtick labels\nplt.xticks(locations, labels)\n\n# legend\nplt.legend(title=\"age segments\")","1569e5a1":"plt.figure(figsize=[14,8])\n\ndf.neighbourhood[attend].value_counts().plot(kind='bar',alpha=.7,color='b',label='show') \ndf.neighbourhood[not_attend].value_counts().plot(kind='bar',alpha=.7,color='r',label='no show')\n\nplt.title('comparison between  those who shown and whose not depending on neighbourhood  ')\nplt.xlabel('neighbourhood  ')\nplt.ylabel('number of patients')\n\nplt.legend()\nplt.show()","1bb03ba9":"#tring to know the most neighbourhood attendence and the lowest one\n\nne_att=df.neighbourhood[attend].value_counts()#neighbourhood show value counts\nne_no_att=df.neighbourhood[not_attend].value_counts()#neighbourhood no show value counts\ntotal=df.neighbourhood.value_counts()\n\npct_ne_att=ne_att\/total#percentage of neighbourhood show\npct_ne_no_att=ne_no_att\/total#percentage of neighbourhood no show\n\nplt.figure(figsize=[18,18])\n\npct_ne_att.plot(kind='bar',alpha=.7,color='b',label=' show\/total ')\npct_ne_no_att.plot(kind='bar',alpha=.7,color='r',label='no show\/total')\n\nplt.title('comparison between  those who shown and whose not depending on neighbourhood  ')\nplt.xlabel('neighbourhood  ')\nplt.ylabel('number of patients')\n\nplt.legend()\n\nplt.show()\n","958b4040":"#checking values for PARQUE INDUSTRIAL\ndf[df.neighbourhood=='PARQUE INDUSTRIAL']","6cae6e87":"#checking values for ILHAS OCE\u00c2NICAS DE TRINDADE\ndf[df.neighbourhood=='ILHAS OCE\u00c2NICAS DE TRINDADE']","a99cc972":"\n### Research Question 7  <br>(could $\\color{red}{\\text{handcap}}$ affect on the attendeence!)","60000a48":"\n\n## Data Cleaning ","200da270":"**gender has no effect on attendence as shown above**","8692b443":"\n### Research Question 3  <br>(could $\\color{red}{\\text{scolarship}}$ affect on the attendeence!)","6eb0b1e0":"> <u>*age*<\/u> :- <br> average(37)years <br>maximum(115)years<br>50% Appointment for patients below 37 years old<br>75% Appointment for patient below 55 years old <br>minimum(-1)years\n <br> there is a mistake while entering data no one has *negative* 1 year                                                                      \n","e4a4f98d":"**oh it is one value but show so it is look the heighest show**","acd023cc":"<a id='conclusions'><\/a>\n## Conclusions\n\n\n\n> **we could say neighboor strongly affect on the patient show**\n<br> **also as age increase the patient show increase then decrease like  from 87 :116 as we saw in the graph above**\n\n### limitations\n=we can't find direct relationship between patients show\/no show and many charcteristics\n<br>= also there is many patients with age zero which i want to ask about is it wrong entering or babies  less than year\n\n","a2626b21":"**we won't  (AppointmentID,PatientId,schedule day,appointment day) in our data analysis so we drop them**","05e7c8bf":"**converting column names to lower case**","13952880":"**we see strange action here patient who didn't receive message show more than who received sms and vice versa**","87a48c73":"**There is no clear relation ship between who is( handcap or  not ) and attendence**","047fe872":"\n### Research Question 8  <br>(could $\\color{red}{\\text{sms_received}}$ affect on the attendeence!)","f6115e65":"<a id='intro'><\/a>\n## Introduction\n\n>This dataset collects information\nfrom 100k medical appointments in\n Brazil and is focused on **the question\n of whether or not patients show up\nfor their appointment.**\n<br>-could  Gender  affect on the attendeence\n<br>-could  scolarship  affect on the attendeence!\n<br>-could  hipertension  affect on the attendeence!\n<br>-could  diabetes  affect on the attendeence\n<br>-could  alcoholism  affect on the attendeence!\n<br>-could  handcap  affect on the attendeence!\n<br>-could  sms_received  affect on the attendeence!\n<br>-could  age  affect on the attendeence!\n<br>-could  neighbourhood  affect on the attendeence!\n\n>A number of\n characteristics about the patient are\n included in each row :-\n<br>-\u2018ScheduledDay\u2019 tells us on\nwhat day the patient set up their\nappointment.\n<br>-\u2018Neighborhood\u2019 indicates the\nlocation of the hospital.\n<br>-\u2018Scholarship\u2019 indicates\nwhether or not the patient is\nenrolled in Brasilian welfare\nprogram Bolsa Fam\u00edlia.","a0d5a520":"\n### Research Question 10 <br>(could $\\color{red}{\\text{neighbourhood}}$ affect on the attendeence!)","ade97bb6":"most of parient do not suffer from hypertention,alcoholism,diabetes\n<br> most of parient is not handcap \n<br>most of people isn't enrolled in scholarship and don't receive sms ","3c15b2b1":"> there are **no** missing values \n\n> we have :-\n **(110527)** Appointments \n **(14)** Appointment's characteristics","acf452e7":"**it seems like attendence increase while increse patient got older to a level and then decrease**\n<br> **may be patient need some one help him to transport and attend** ","3a68be58":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n\n### General look to data ","320544b5":"**There is no clear relation ship between who has( alcoholism or  not ) and attendence**","08bca2ff":"\n### Research Question 4  <br>(could $\\color{red}{\\text{hipertension}}$ affect on the attendence!)","e222988f":"may be good idea to use histagram","aa766ded":"age (115) not outliers some people have this age","3a66bd65":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n\n### General Properties","c7d53a0c":"**oh it is two value but no one show so it is look the heighest show**","b38d7876":"\n### Research Question 9  <br>(could $\\color{red}{\\text{age}}$ affect on the attendeence!)","2adce7bb":"\n### Research Question 6  <br>(could $\\color{red}{\\text{alcoholism}}$ affect on the attendeence!)","a4d1750d":"\n\n# Project: Investigate a Dataset (No-show appointments)\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","d0becb6f":"**There is no clear relation ship between who has( hipertension or not ) and attendence**","7dae9852":"\n### Research Question 5  <br>(could $\\color{red}{\\text{diabetes}}$ affect on the attendeence!)","6483f8ec":"there is no duplicate data","ed4d5e58":"**it seem neighbourhood affect the showing patients**","f5cedbf9":"**There is no clear relation ship between who has( daibetes or  not ) and attendence**","d000d8d8":"**changing name of column no-show to no_show**","473547db":"**it seem PARQUE INDUSTRIA has the heighest show** *but* **ILHAS OCE\u00c2NICAS DE TRINDADE has the lowest show**","4a2249c9":"**Also patients who have sholarship attend slightly more than those who didn't have**\n<br>**And absentlittle bit less than who didn't have the scolarship**\n<br>**But there is no clear relationship between scolarship and no show**\n","21917bc8":"### Research Question 2  <br>(could $\\color{red}{\\text{Gender}}$ affect on the attendeence!)"}}