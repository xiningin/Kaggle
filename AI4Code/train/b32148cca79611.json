{"cell_type":{"01975af5":"code","3241d735":"code","f3222914":"code","8001a1b1":"code","6cd41624":"code","e1386383":"code","7baf3514":"code","90885595":"code","54bd577c":"code","1a2f706e":"code","87517208":"code","c8ffc8e0":"code","89eba92a":"code","cf6a35ef":"code","9320994d":"code","f99d6a51":"code","6d738a38":"code","7e5d41ee":"code","13246a7c":"code","9b46d163":"code","a2f2a2b7":"code","1bb19a87":"code","e9e87ba0":"code","4fad630f":"code","df3cbbc6":"code","ad6b0af4":"code","6997585c":"code","f9b9cb27":"code","dfc9adcf":"code","5f303af5":"code","ab494127":"code","1366cf5a":"code","48007c86":"markdown","717ee8db":"markdown","d7affd74":"markdown","d1c4f205":"markdown","c3ac175b":"markdown","c68d0371":"markdown","b3d4ab8d":"markdown","96e5743e":"markdown","dc78cfcf":"markdown","7487c650":"markdown","c0d1e974":"markdown","2aa9db66":"markdown","de300f68":"markdown","98598b7e":"markdown","d310f1cf":"markdown","2c6a6123":"markdown","37aff92f":"markdown","9cd6f53d":"markdown","7c34b67d":"markdown","2e769067":"markdown","9fc23d85":"markdown","865350ee":"markdown","e365ae50":"markdown","97537905":"markdown","6c468aca":"markdown","911ec4e9":"markdown","41c59533":"markdown","aeea427e":"markdown","392828eb":"markdown","9fd7cb44":"markdown","f3d8ca11":"markdown"},"source":{"01975af5":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nimport numpy as np","3241d735":"trainAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n                   na_values=\"?\")\n\ntrainAdult = trainAdult.drop(columns = [\"Id\", \"fnlwgt\"])\ntrainAdult.head(2)","f3222914":"testAdult = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\",\n                        na_values=\"?\")\n\ntestAdult = testAdult.drop(columns = [\"Id\", \"fnlwgt\"])\ntestAdult.head(2)","8001a1b1":"for col in testAdult.columns:\n    trainAdult[col].fillna(trainAdult[col].mode()[0], inplace=True)\n    testAdult[col].fillna(testAdult[col].mode()[0], inplace=True)","6cd41624":"analise = trainAdult.copy()\n\nanalise[\"capital\"] = analise[\"capital.gain\"] - analise[\"capital.loss\"]\nanalise.drop(columns=[\"capital.gain\", \"capital.loss\"])\nanalise.head(1)","e1386383":"num_cols = [\"age\", \"education.num\", \"hours.per.week\"]\n\nfor n in num_cols:\n    plt.figure(figsize=(6,3))\n    analise[analise['income']=='<=50K'][n].hist()\n    analise[analise['income']=='>50K'][n].hist(color='red')\n    plt.title(n)\n    plt.show()","7baf3514":"plt.figure(figsize=(6,3))\nanalise[analise['income']=='<=50K'][\"capital\"].hist()\nanalise[analise['income']=='>50K'][\"capital\"].hist(color='red')\nplt.title(\"Capital\")\nplt.show()","90885595":"analise[\"income\"] = LabelEncoder().fit_transform(analise['income'])","54bd577c":"sns.catplot(y=\"workclass\", x=\"income\", kind=\"bar\", data=analise)","1a2f706e":"trainAdult[\"workclass\"].value_counts(normalize=True)","87517208":"sns.catplot(y=\"education\", x=\"income\", kind=\"bar\", data=analise)","c8ffc8e0":"sns.catplot(y=\"marital.status\", x=\"income\", kind=\"bar\", data=analise)","89eba92a":"sns.catplot(y=\"relationship\", x=\"income\", kind=\"bar\", data=analise)","cf6a35ef":"sns.catplot(y=\"occupation\", x=\"income\", kind=\"bar\", data=analise)","9320994d":"sns.catplot(y=\"race\", x=\"income\", kind=\"bar\", data=analise)\ntrainAdult[\"race\"].value_counts(normalize=True)","f99d6a51":"sns.catplot(y=\"sex\", x=\"income\", kind=\"bar\", data=analise)","6d738a38":"sns.catplot(y=\"native.country\", x=\"income\", kind=\"bar\", data=analise)","7e5d41ee":"analise[\"native.country\"].value_counts()","13246a7c":"trainAdult[\"income\"] = LabelEncoder().fit_transform(trainAdult['income'])","9b46d163":"xTrain = trainAdult.drop(columns=[\"income\"])\nyTrain = trainAdult[\"income\"]","a2f2a2b7":"xTrain = xTrain.drop(columns=[\"education\", \"native.country\"])","1bb19a87":"naoPrivado = [\"Self-emp-not-inc\", \"Local-gov\", \"State-gov\", \"Self-emp-inc\", \"Federal-gov\", \"Without-pay\", \"Never-worked\"]\n\nxTrain.replace(naoPrivado,'N\u00e3o-privado',inplace=True)","e9e87ba0":"naoBranco = [\"Black\", \"Asian-Pac-Islander\", \"Amer-Indian-Eskimo\", \"Other\"]\n\nxTrain.replace(naoBranco,'N\u00e3o branco',inplace=True)","4fad630f":"casado = [\"Married-civ-spouse\", \"Married-AF-spouse\"]\nsolteiro = [\"Divorced\", \"Separated\", \"Widowed\", \"Married-spouse-absent\", \"Never-married\"]\nxTrain.replace(casado,'Casado',inplace=True)\nxTrain.replace(solteiro,'Solteiro',inplace=True)\nxTrain[\"marital.status\"] = LabelEncoder().fit_transform(xTrain['marital.status'])","df3cbbc6":"relacionamento = [\"Husband\", \"Wife\"]\nforaRelacionamento = [\"Own-child\", \"Not-in-family\", \"Unmarried\", \"Other-relative\"]\n\nxTrain.replace(relacionamento,'Em-relacionamento',inplace=True)\nxTrain.replace(foraRelacionamento,'Foral-relacionamento',inplace=True)","ad6b0af4":"xTrain[\"workclass\"] = LabelEncoder().fit_transform(xTrain['workclass'])\nxTrain[\"race\"] = LabelEncoder().fit_transform(xTrain['race'])\nxTrain[\"occupation\"] = LabelEncoder().fit_transform(xTrain['occupation'])\nxTrain[\"relationship\"] = LabelEncoder().fit_transform(xTrain['relationship'])\nxTrain[\"sex\"] = LabelEncoder().fit_transform(xTrain['sex'])","6997585c":"sc = StandardScaler()\n\nxTrain[[\"age\", \"education.num\", \"hours.per.week\"]] = sc.fit_transform(xTrain[[\"age\", \"education.num\", \"hours.per.week\"]])\nxTrain[['capital.gain', 'capital.loss']] = RobustScaler().fit_transform(xTrain[['capital.gain', 'capital.loss']])","f9b9cb27":"xTrain.head(2)","dfc9adcf":"xTest = testAdult\n\nxTest = xTest.drop(columns=[\"native.country\", \"education\"])\n\nnaoPrivado = [\"Self-emp-not-inc\", \"Local-gov\", \"State-gov\", \"Self-emp-inc\", \"Federal-gov\", \"Without-pay\", \"Never-worked\"]\n\nxTest.replace(naoPrivado,'N\u00e3o-privado',inplace=True)\nxTest[\"workclass\"] = LabelEncoder().fit_transform(xTest['workclass'])\n\nnaoBranco = [\"Black\", \"Asian-Pac-Islander\", \"Amer-Indian-Eskimo\", \"Other\"]\n\nxTest.replace(naoBranco,'N\u00e3o branco',inplace=True)\nxTest[\"race\"] = LabelEncoder().fit_transform(xTest['race'])\n\ncasado = [\"Married-civ-spouse\", \"Married-AF-spouse\"]\nsolteiro = [\"Divorced\", \"Separated\", \"Widowed\", \"Married-spouse-absent\", \"Never-married\"]\nxTest.replace(casado,'Casado',inplace=True)\nxTest.replace(solteiro,'Solteiro',inplace=True)\nxTest[\"marital.status\"] = LabelEncoder().fit_transform(xTest['marital.status'])\n\nrelacionamento = [\"Husband\", \"Wife\"]\nforaRelacionamento = [\"Own-child\", \"Not-in-family\", \"Unmarried\", \"Other-relative\"]\n\nxTest.replace(relacionamento,'Em-relacionamento',inplace=True)\nxTest.replace(foraRelacionamento,'Foral-relacionamento',inplace=True)\nxTest[\"relationship\"] = LabelEncoder().fit_transform(xTest['relationship'])\n\nxTest[\"occupation\"] = LabelEncoder().fit_transform(xTest['occupation'])\n#xTest[\"relationship\"] = LabelEncoder().fit_transform(xTest['relationship'])\nxTest[\"sex\"] = LabelEncoder().fit_transform(xTest['sex'])\n\nsc = StandardScaler()\n\nxTest[[\"age\", \"education.num\", \"hours.per.week\"]] = sc.fit_transform(xTest[[\"age\", \"education.num\", \"hours.per.week\"]])\nxTest[['capital.gain', 'capital.loss']] = RobustScaler().fit_transform(xTest[['capital.gain', 'capital.loss']])","5f303af5":"n = np.arange(1, 41, 1)\nmaior = [0, 0]\n\nfor k in n:\n    score = cross_val_score(KNeighborsClassifier(n_neighbors=k), xTrain, yTrain, cv = 10, scoring = 'accuracy').mean()\n    if score > maior[1]:\n        maior[0] = k\n        maior[1] = score\n\nprint(\"Melhor K = \" + str(maior[0]) + \" e acur\u00e1cia = \" + str(maior[1]*100) + \" %\")","ab494127":"knn = KNeighborsClassifier(n_neighbors=maior[0])\nknn.fit(xTrain,yTrain)\n\nY = knn.predict(xTest)","1366cf5a":"resultados = []\n\nfor resultado in Y:\n    if resultado == 0:\n        resultados.append('<=50K')\n    else:\n        resultados.append('>50K')\n\narquivo = pd.DataFrame()\narquivo[0] = testAdult.index\narquivo[1] = resultados\narquivo.columns = ['Id', 'income']\narquivo.head()\narquivo.to_csv('submission.csv', index = False)","48007c86":"Escolaridade:","717ee8db":"Iremos fazer o mesmo com a feature \"race\", da maneira que foi explicada na an\u00e1lise explorat\u00f3ria.","d7affd74":"Em seguida, dividir o dataframe em duas partes. A primeira dever\u00e1 conter as features e a segunda a vari\u00e1vel que desejamos estimar.","d1c4f205":"## Tratamento de dados\n\nAntes de utilizar os dados no modelo, \u00e9 necess\u00e1rio realizar um tratamento de dados com o que descobrimos na an\u00e1lise explorat\u00f3ria.\n\nPrimeiramente, iremos transformar a vari\u00e1vel income em um label, assim como fizemos na an\u00e1lise de dados.","c3ac175b":"Resultado final:","c68d0371":"Como a maioria da popula\u00e7\u00e3o trabalha no setor privado, podemos dividir as pessoas entre setor privado e n\u00e3o privado.","b3d4ab8d":"\u00c9 evidente que, devido a quest\u00f5es hist\u00f3ricas e sociais, que existe uma desigualdade entre os brancos e outros. Tamb\u00e9m, em alguns casos, o n\u00famero de indiv\u00edduos amostrados \u00e9 baixo. Por essas duas quest\u00f5es, iremos dividir essa categoria em brancos e n\u00e3o brancos como forma de quantificar essa desigualdade.","96e5743e":"As pessoas ser\u00e3o divididas entre \"em relacionamento\" e \"fora de relacionamento\".","dc78cfcf":"## Incluindo os dados faltantes\n\nPara melhorar a acur\u00e1cia do nosso modelo, iremos substituir os dados faltantes pela moda de sua respectiva categoria.","7487c650":"Por fim, podemos verificar que o pa\u00eds de origem da pessoa possui impacto em sua renda. Pessoas de pa\u00edses desenvolvidos como Inglaterra, Fran\u00e7a e Taiwan possuem uma densidade maior de indiv\u00edduos com renda acima de 50 mil d\u00f3lares do que imigrantes do M\u00e9xico e Guatemala, pa\u00edses mais pobres. Entretanto, isso n\u00e3o \u00e9 uma regra universal.\n\nPara a maior parte dos casos, o n\u00famero de amostras para cada pa\u00eds \u00e9 menor que 100, enquanto existem quase 30 mil americanos na nossa base de dados. Por esse motivo, iremos retirar essa categoria.","c0d1e974":"Agora, basta salvarmos os resultados obtidos para que possamos submeter o csv final.","2aa9db66":"Nesses tr\u00eas gr\u00e1ficos acima, podemos ver claramente que nas idades mais altas e entre as pessoas com mais anos de educa\u00e7\u00e3o a densidade de indiv\u00edduos com renda acima de 50 mil d\u00f3lares \u00e9 maior. A quantidade de horas trabalhadas tamb\u00e9m influencia positivamente na renda.","de300f68":"Os tr\u00eas primeiros atributos que iremos analisar ser\u00e3o a idade, anos de estudo e quantidade de horas trabalhadas por semana:","98598b7e":"As \u00faltimas duas tarefas consistem em normalizar a escala das vari\u00e1veis num\u00e9ricas e retirar os outliers das categorias \"capital.gain\" e \"capital.loss\".","d310f1cf":"## Leitura de Dados\n\nA primeira parte da tarefa consiste em ler e armazenar os dados de treino e de teste. Isso ser\u00e1 feito utilizando a biblioteca Pandas.","2c6a6123":"Podemos ver que o tipo de trabalho do indiv\u00edduo altera a probabilidade dele receber mais ou menos que o valor limite. Dois casos interessantes s\u00e3o os dos trabalhadores sem rendimento e as pessoas que nunca trabalharam. Evidentemente, a probabilidade dessas duas categorias possuir renda superior a cinquenta mil \u00e9 zero.\n\nAlgo que devemos nos atentar \u00e9 que a maioria absoluta das pessoas trabalham no setor privador. Por isso, precisaremos fornecer um tratamento especial para essa feature.","37aff92f":"Sabendo que o melhor K, podemos utilizar o modelo para estimar o valor de Y para a base de teste.","9cd6f53d":"Valores positivos de saldo de capital contribuem para renda da pessoa analisada. Entretanto, podemos verificar que existem alguns valores muito distantes da m\u00e9dia, por isso, precisaremos retirar esses outliers.\n\nEm seguida, iremos utilizar um label na coluna \"income\". Caso a amostra possua renda inferior ou igual a cinquenta mil d\u00f3lares receber\u00e1 o label 0, caso contr\u00e1rio 1. Isso facilitar\u00e1 nossa an\u00e1lise gr\u00e1fica dos valores n\u00e3o num\u00e9ricos.","7c34b67d":"## An\u00e1lise de Dados\n\nNessa terceira etapa, iremos utilizar as bibliotecas MatPlotLib e Seaborn para realizar uma an\u00e1lise dos dados dispon\u00edveis. Assim, poderemos saber como cada uma das vari\u00e1veis pode impactar na renda do indiv\u00edduo. Essa an\u00e1lise tamb\u00e9m \u00e9 importante para identificar quais vari\u00e1veis utilizaremos e como devemos trat\u00e1-las.\n\nTamb\u00e9m, iremos unir as colunas \"capital.gain\" e \"capital.loss\" em uma que represente o saldo. Dessa forma, a an\u00e1lise num\u00e9rica se torna mais f\u00e1cil.","2e769067":"Por fim, no gr\u00e1fico acima tamb\u00e9m fica evidente a desigualdade entre homens e mulheres na sociedade.","9fc23d85":"A an\u00e1lise dos relacionamentos corrobora as afirma\u00e7\u00f5es feitas acima. Pessoas casadas tendem a ganhar mais. Assim como na situa\u00e7\u00e3o anterior, iremos dividir em dois grupos: \"em um relacionamento\" e \"fora de um relacionamento\".\n\nOcupa\u00e7\u00e3o:","865350ee":"Podemos dividir o estado civil em \"casado\" e \"solteiro\"","e365ae50":"Agora, iremos retirar as features \"Education\", \"Native country\" pelos motivos expostos na se\u00e7\u00e3o anterior. Tamb\u00e9m retiraremos \"income\" j\u00e1 que agora faz parte de outro dataframe.","97537905":"# PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es\n\nNesse Jupyter iremos utilizar o Classificador K-Nearest Neighbors para estimar a renda de um indiv\u00edduo baseado em um conjunto de atributos da base de dados Adult.\n\n## Bibliotecas","6c468aca":"Em seguida, devemos transformar as vari\u00e1veis categ\u00f3ricas em labels.","911ec4e9":"O gr\u00e1fico acima nos mostra que a propor\u00e7\u00e3o de pessoas com renda acima de 50 mil d\u00f3lares \u00e9 maior entre as pessoas que mant\u00eam uma uni\u00e3o. Posteriormente, iremos dividir esse grupo em duas categorias: casados e solteiros. Como, na divis\u00e3o atual, mais de uma categoria pode representar uma situa\u00e7\u00e3o parecida, a nossa nova divis\u00e3o favorece a nossa an\u00e1lise.","41c59533":"Workclass:","aeea427e":"## K-Nearest Neighbors\n\nEm primeiro lugar, precisamos encontrar o k \u00f3timo para nosso modelo.","392828eb":"Tamb\u00e9m, \u00e9 poss\u00edvel visualizar que o n\u00edvel de escolaridade do indiv\u00edduo possui enorme impacto na sua renda. Quase 80% das pessoas com doutorado est\u00e3o na faixa de renda mais elevada. Como essa \u00e9 uma vari\u00e1vel n\u00e3o num\u00e9rica e n\u00f3s possu\u00edmos outra que representa a mesma coisa (\"education.num\"), iremos descart\u00e1-la.\n\nEstado civil:","9fd7cb44":"Agora, devemos realizar o mesmo processo para base de teste.","f3d8ca11":"A ocupa\u00e7\u00e3o do indiv\u00edduo tamb\u00e9m parece impactar de maneira significativa a renda do indiv\u00edduo. Enquanto metade das amostras com cargos executivos recebem mais que o valor limite estabelecido, praticamente ningu\u00e9m que trabalha com servi\u00e7os dom\u00e9sticos est\u00e1 nessa categoria."}}