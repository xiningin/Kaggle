{"cell_type":{"c6caae8a":"code","09c5e3c8":"code","9e7c88fe":"code","b0f1ebde":"code","15bcfdcc":"code","90c1e067":"code","7f8ab72c":"code","a5d70b10":"code","cee57ea9":"code","c3abda74":"code","8cdc70d6":"code","fa311281":"code","5c459dff":"code","8d06e838":"code","67bf6172":"code","4ed30db6":"code","640cfe7e":"code","1802c818":"code","b4a46684":"code","f3d6843c":"code","d1114875":"code","c59ffe00":"code","c3227a60":"code","1a7d34c6":"code","d519b8bb":"code","9b70b080":"code","aadb3eba":"code","adf8bb6c":"code","01163b41":"code","2a96fc68":"code","6eec7d7c":"code","5368b2c1":"code","8d7aff36":"code","afbd8842":"code","294a5a1f":"code","5a61d481":"code","a0bc8d50":"code","abea1bf6":"code","fe66be97":"code","8f010b46":"code","5a24a9f4":"code","a33cbdbc":"code","84c8c3e6":"code","ba4841fc":"code","6d352f7b":"code","a7135aa6":"code","c3474bb0":"code","f9b9ef80":"code","c432f650":"code","2d772757":"code","bc810da1":"code","eb67df1c":"markdown","585f007c":"markdown","42200457":"markdown","003677c7":"markdown"},"source":{"c6caae8a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge, ElasticNet, Lasso\nfrom sklearn.linear_model import RidgeCV, ElasticNetCV, LassoCV\nfrom sklearn.metrics import accuracy_score, r2_score, mean_squared_error\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09c5e3c8":"data = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\ndf = data.copy()\ndf.head() # first 5 row","9e7c88fe":"df.isna().sum() # what is sum of null?","b0f1ebde":"df.describe().T","15bcfdcc":"df.info()","90c1e067":"df.head()","7f8ab72c":"le = LabelEncoder()\ndf['sex'] = le.fit_transform(df['sex'])\ndf.head()  # sex; female = 0, male = 1","a5d70b10":"df['smoker'] = le.fit_transform(df['smoker'])\ndf.head() # smoker ; yes = 1 , no = 0","cee57ea9":"df.region.value_counts()","c3abda74":"?pd.get_dummies","8cdc70d6":"df = pd.get_dummies(df, columns= ['region'], drop_first = True)","fa311281":"df.head()","5c459dff":"sns.boxplot(y=\"bmi\", x=\"sex\", hue = 'smoker', data=df)\nplt.show()","8d06e838":"df.head()","67bf6172":"y = df[['charges']]\nX = df.drop('charges', axis=1)","4ed30db6":"X.head()","640cfe7e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\nprint(\"X_train: \", X_train.shape, \"X_test: \", X_test.shape, \"y_train: \", y_train.shape, \"y_test: \", y_test.shape)","1802c818":"linreg = LinearRegression()\nlinreg.fit(X_train, y_train)","b4a46684":"y_pred_linreg = linreg.predict(X_test)","f3d6843c":"linreg_error = np.sqrt(mean_squared_error(y_test, y_pred_linreg))\nlinreg_error","d1114875":"r2_score(y_test, y_pred_linreg)","c59ffe00":"ridge = Ridge()\nridge.fit(X_train, y_train)","c3227a60":"y_pred_ridge = ridge.predict(X_test)","1a7d34c6":"ridge_error = np.sqrt(mean_squared_error(y_test, y_pred_ridge))\nridge_error","d519b8bb":"r2_score(y_test, y_pred_ridge)","9b70b080":"ridge.alpha","aadb3eba":"alphas = [0.01, 0.001, 0.1, 1, 2, 1.1]","adf8bb6c":"tuned_ridge = RidgeCV(alphas=alphas).fit(X_train, y_train)","01163b41":"tuned_ridge.alpha_","2a96fc68":"y_pred_t_ridge = tuned_ridge.predict(X_test)","6eec7d7c":"tuned_ridge_error = np.sqrt(mean_squared_error(y_test, y_pred_t_ridge))\ntuned_ridge_error","5368b2c1":"r2_score(y_test, y_pred_t_ridge)","8d7aff36":"lasso = Lasso()\nlasso.fit(X_train, y_train)","afbd8842":"y_pred_lasso = lasso.predict(X_test)","294a5a1f":"lasso_error = np.sqrt(mean_squared_error(y_test, y_pred_lasso))\nlasso_error","5a61d481":"r2_score(y_test, y_pred_lasso)","a0bc8d50":"lasso.alpha","abea1bf6":"tuned_lasso = LassoCV(alphas=alphas).fit(X_train, y_train)\ntuned_lasso.alpha_","fe66be97":"y_pred_t_lasso = tuned_lasso.predict(X_test)","8f010b46":"tuned_lasso_error = np.sqrt(mean_squared_error(y_test, y_pred_t_lasso))\ntuned_lasso_error","5a24a9f4":"r2_score(y_test, y_pred_t_lasso)","a33cbdbc":"enet = ElasticNet()\nenet.fit(X_train, y_train)","84c8c3e6":"y_pred_enet = enet.predict(X_test)","ba4841fc":"enet_error = np.sqrt(mean_squared_error(y_test, y_pred_enet))\nenet_error","6d352f7b":"r2_score(y_test, y_pred_enet)","a7135aa6":"ratios = [.1, .5, .7, .9, .95, .99, 1]","c3474bb0":"tuned_enet = ElasticNetCV(alphas=alphas, l1_ratio=ratios).fit(X_train, y_train)","f9b9ef80":"y_pred_t_enet = tuned_enet.predict(X_test)","c432f650":"tuned_enet_error = np.sqrt(mean_squared_error(y_test, y_pred_t_enet))\ntuned_enet_error","2d772757":"r2_score(y_test, y_pred_t_enet)","bc810da1":"# plot\nscores = [linreg_error, tuned_ridge_error, tuned_lasso_error, tuned_enet_error]\nplt.plot(scores, marker=\"o\" ) \nplt.legend()\nplt.show()","eb67df1c":"# Ridge","585f007c":"# Linear Regression","42200457":"# Lasso","003677c7":"# ElasticNet"}}