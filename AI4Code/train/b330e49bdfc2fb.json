{"cell_type":{"03ffec0e":"code","68cbd474":"markdown"},"source":{"03ffec0e":"## import required module\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport matplotlib\nfrom matplotlib.ticker import MaxNLocator\nimport matplotlib.ticker as ticker\nimport matplotlib.colors as mcolors\nimport matplotlib.animation as animation\n\n\n## Reading data from Excel file\ndata = pd.read_csv(\"..\/input\/covid-19-india-bar-race\/covid_19_india.csv\")\n\ndf = pd.DataFrame(data, columns= ['Date','State\/UnionTerritory','Confirmed'])\n\n\n#print(df.Date)\n## dict of colors for each state\ncolors = dict(zip(['Kerala', 'Telengana', 'Delhi', 'Rajasthan', 'Uttar Pradesh', 'Haryana', 'Ladakh', 'Tamil Nadu',\n                   'Karnataka', 'Maharashtra', 'Punjab', 'Jammu and Kashmir', 'Andhra Pradesh', 'Uttarakhand', 'Odisha',\n                   'Puducherry', 'West Bengal', 'Chhattisgarh', 'Chandigarh', 'Gujarat', 'Himachal Pradesh',\n                   'Madhya Pradesh', 'Bihar', 'Manipur', 'Mizoram', 'Andaman and Nicobar Islands', 'Goa',\n                   'Unassigned', 'Assam', 'Jharkhand', 'Arunachal Pradesh', 'Tripura', 'Nagaland', 'Meghalaya',\n                   'Dadar Nagar Haveli', 'Cases being reassigned to states', 'Sikkim', 'Daman & Diu',\n                   'Dadra and Nagar Haveli and Daman and Diu', 'Telangana'],\n                  ['#adb0ff', '#ffb3ff','#ffe6e6','#f9e6ff','#ffecb3','#ffccff','#ffccdd','#ff0055','#9fdf9f',\n                   '#99b3e6','#99b3e6','#d9d9d9','#000000','#ffffe6','#666600','#ff9999','#e6e600','#ffd11a', \n                   '#90d595', '#e48381','#aafbff', '#f7bb5f', '#eafb50',\"#8a4500\",\"#8a8a00\",\"#008a8a\",\"#00458a\",\n                   \"#45008a\",\"#8b008b\",\"#8a0045\",\"#8a0000\",\"#ffb3ff\",\"#000000\",\"#4d004d\",\"#008a8a\",\"#ffb3ff\",\"#ffff33\",\n                   \"#cccc00\",\"#b3ffec\",\"#008060\"]))\n\n\ndf_unq_date=(df.Date).unique()\ndf_unq_date = pd.DataFrame(df_unq_date,columns= ['Date'])\n\n### creating bar chart race\nfig, ax = plt.subplots(figsize=(15,8))\n\ndef racing_barchart(j):\n    \n    dff = df[((df.Date)).eq(df_unq_date.Date[j])].sort_values(by='Confirmed',ascending=True).tail(10)    \n    ax.clear()\n    ax.barh(dff['State\/UnionTerritory'],dff['Confirmed'],color= [colors[x] for x in dff['State\/UnionTerritory']])\n    dx = dff['Confirmed'].max()\/200\n    for i, (Confirmed , State_UnionTerritory) in enumerate(zip(dff['Confirmed'],dff['State\/UnionTerritory'])):\n        ax.text(Confirmed-dx,i,  State_UnionTerritory,size=10,weight=600,ha = 'right',va='center')\n        ax.text(Confirmed+dx,i,  f'{Confirmed:,.0f}',size =14,  ha = 'left',va= 'center')\n        \n    ax.text(1, 0.4, df_unq_date.Date[j], transform=ax.transAxes, color='#777777', size=46, ha='right', weight=800)\n    \n    ax.text(0, 1.06, 'Number of Cases', transform=ax.transAxes, size=12, color='#777777')\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors='#777777', labelsize=12)\n    ax.set_yticks([])\n    ax.margins(0, 0.01)\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_axisbelow(True)\n    ax.text(0,1.10,'The most COVID_19 affected STATES  in INDIA',transform=ax.transAxes, size=20, weight=600, ha='left')\n    plt.box(False)\n    \nanimator = animation.FuncAnimation(fig=fig,func=racing_barchart,frames=range(len(df_unq_date.Date)))\nanimator.save(\".\/Most_affected_states.mp4\")\n\n","68cbd474":"[Output:  Most_affected_cities.mp4](https:\/\/www.youtube.com\/watch?v=uNSRAml61Yw)"}}