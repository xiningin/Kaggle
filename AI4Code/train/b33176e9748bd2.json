{"cell_type":{"265e2954":"code","700b4a4d":"code","86724120":"code","6dfbd00b":"code","8f26759c":"code","e55d52f6":"code","0d7393d7":"code","7529287f":"code","16062363":"code","b4f7e606":"code","bf7dea11":"code","3339925b":"code","e5abc272":"code","f8502d19":"code","8661835d":"code","c250a883":"code","5da54bc8":"code","230a5d8a":"code","06ed8e4d":"code","31441d2d":"code","033c79d9":"code","b28c41e8":"code","bf3fe687":"code","26857e38":"code","f404c561":"markdown","91c5ec3b":"markdown","b3f64848":"markdown","0a63cb1e":"markdown","6cf7117a":"markdown","55a6f362":"markdown","b31eb155":"markdown","dc515337":"markdown"},"source":{"265e2954":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression","700b4a4d":"data = pd.read_csv(\"..\/input\/student-alcohol-consumption\/student-mat.csv\")","86724120":"data","6dfbd00b":"plt.figure(figsize=(14, 12))\nsns.heatmap(data.corr(), annot=True)\nplt.show()","8f26759c":"data.isnull().sum()","e55d52f6":"data.dtypes","0d7393d7":"nonnumeric_columns = [data.columns[index] for index, dtype in enumerate(data.dtypes) if dtype == 'object']\nnonnumeric_columns","7529287f":"for column in nonnumeric_columns:\n    print(f\"{column}: {data[column].unique()}\")","16062363":"data['Mjob'] = data['Mjob'].apply(lambda x: \"m_\" + x)\ndata['Fjob'] = data['Fjob'].apply(lambda x: \"f_\" + x)\ndata['reason'] = data['reason'].apply(lambda x: \"r_\" + x)\ndata['guardian'] = data['guardian'].apply(lambda x: \"g_\" + x)","b4f7e606":"data","bf7dea11":"dummies = pd.concat([pd.get_dummies(data['Mjob']),\n                     pd.get_dummies(data['Fjob']),\n                     pd.get_dummies(data['reason']),\n                     pd.get_dummies(data['guardian'])],\n                     axis=1)","3339925b":"dummies","e5abc272":"data = pd.concat([data, dummies], axis=1)\n\ndata.drop(['Mjob', 'Fjob', 'reason', 'guardian'], axis=1, inplace=True)","f8502d19":"data","8661835d":"nonnumeric_columns = [data.columns[index] for index, dtype in enumerate(data.dtypes) if dtype == 'object']\n\nfor column in nonnumeric_columns:\n    print(f\"{column}: {data[column].unique()}\")","c250a883":"encoder = LabelEncoder()\n\nfor column in nonnumeric_columns:\n    data[column] = encoder.fit_transform(data[column])","5da54bc8":"for dtype in data.dtypes:\n    print(dtype)","230a5d8a":"y = data['G3']\nX = data.drop('G3', axis=1)","06ed8e4d":"X","31441d2d":"scaler = StandardScaler()\n\nX = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)","033c79d9":"X","b28c41e8":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7)","bf3fe687":"model = LinearRegression()\nmodel.fit(X_train, y_train)","26857e38":"print(f\"Model R2: {model.score(X_test, y_test)}\")","f404c561":"# Results","91c5ec3b":"# Getting Started","b3f64848":"# Data Visualization","0a63cb1e":"## Scaling","6cf7117a":"## Encoding","55a6f362":"# Preprocessing","b31eb155":"# Training","dc515337":"## Checking for Missing Values"}}