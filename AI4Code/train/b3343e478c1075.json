{"cell_type":{"1176f277":"code","a45282c9":"code","4a333fc5":"code","09fa28fb":"code","0c6c68c8":"code","a6caba91":"code","68ab58bc":"code","70ab12e6":"code","dcb65c12":"code","ed1c616e":"code","daea33ca":"code","737fc0d3":"code","0e6c937a":"code","dc7834c6":"code","c943f634":"code","3fb6ccdb":"code","fa38e9b2":"code","8f4a2872":"code","3b496dc9":"code","89a22de3":"code","b5ad1d32":"code","87e84518":"code","1f1bbad2":"code","9bddc71d":"code","bbc4dc6f":"markdown","8100fc66":"markdown","97d2a582":"markdown","25c2ec85":"markdown","585e6fd0":"markdown","40bc26c3":"markdown","6fe59c52":"markdown","20b12f8d":"markdown","ed38f7f2":"markdown","6ae33fc9":"markdown","80e603cb":"markdown","7f0576e9":"markdown","866f2cc6":"markdown","600d1ee5":"markdown"},"source":{"1176f277":"# Author: Anna Durbanova\n# Date: 28.09.2020\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nimport os\n\n%matplotlib inline","a45282c9":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndata=pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')","4a333fc5":"#data=pd.read_csv(\"netflix_titles.csv\")\ndata[\"date_added\"]=data[\"date_added\"].str.replace(\",\", \"\").str.strip() ## Strip removes spaces front and back\ndata[\"date_added\"]=pd.to_datetime(data[\"date_added\"], format=\"%B %d %Y\")\n\ndata[\"director\"]=data[\"director\"].fillna(\"Unknown\")\ndata[\"cast\"]=data[\"cast\"].fillna(\"Unknown\")\ndata[\"country\"]=data[\"country\"].fillna(\"Unknown\")\n\n\ndata[\"Season\"]=\"\"\n\ncolumns_name=[\"show_id\", \"type\", \"title\", \n              \"director\", \"cast\", \"country\",\n              \"date_added\", \"release_year\", \"rating\",\n              \"duration\", \"Season\", \"listed_in\", \"description\"]\ndata=data.reindex(columns=columns_name)\n\ndata[\"Season\"] = data[data[\"duration\"].str.contains(\"Season\")][\"duration\"] ## Separating Season from duration\n\n## Make a Season Column an Integer\n\ndata[\"Season\"]=data[\"Season\"].fillna(\"0\")\ndata[\"Season\"]=data[\"Season\"].str.replace(\"Season\", \"\").str.replace(\"s\", \"\")\ndata[\"Season\"]=data[\"Season\"].astype(str).astype(int)\n\n## Make a duration column an Integer\ndata[\"duration\"]=data.duration.str.replace('^(\\d+)(.Seasons*)$', \"0\") ## Remove The Season from the column\ndata[\"duration\"]=data[\"duration\"].str.replace(\" min\", \"\") ## Remove min\ndata[\"duration\"]=data[\"duration\"].astype(int) ## Convert to Integer\n\n\n\ndata","09fa28fb":"def missing_values(n):\n    df=pd.DataFrame()\n    df[\"missing_values, %\"]=data.isnull().sum()*100\/len(data.isnull())\n    df[\"missing_values, sum\"]=data.isnull().sum()\n    return df.sort_values(by=\"missing_values, %\", ascending=False)\nmissing_values(data)","0c6c68c8":"## After all cleaning, there is not so much of left NAs. ","a6caba91":"data[\"type\"].value_counts()","68ab58bc":"(data[\"listed_in\"].str.contains(\"Horror\")).sum() # 316 horror Movies & TV -shows\n((data[\"listed_in\"].str.contains(\"Horror\"))[(data[\"type\"]==\"Movie\")]).sum()","70ab12e6":"((data[\"listed_in\"].str.contains(\"Horror\"))[(data[\"type\"]==\"TV Show\")]).sum()","dcb65c12":"data[data[\"listed_in\"].str.contains(\"Horror\")][data[\"type\"]==\"TV Show\"].head(5) ## The list of 5 TV Shows","ed1c616e":"mask = data[\"listed_in\"].str.contains(\"Horror\")\n(data[mask]\n.groupby(\"title\")\n [['type', 'title', 'country','description']]\n.sum()\n.head(10)\n) \n\n## First 10 horror movies","daea33ca":"sort= data[\"duration\"]!=0\ndata[sort][\"duration\"].median()\n\n## On average 98 minutes","737fc0d3":"data[\"duration\"].max() # Min","0e6c937a":"data[data[\"duration\"]==312]\n\n## The longest Movie was Black Mirror Bandersnatch","dc7834c6":"data[\"Season\"].max()","c943f634":"data[data[\"Season\"]==15]\n\n## Two movies: Grey's Anatomy and NCIS, one is romantic, another one is a crime TV","3fb6ccdb":"sort_s= data[\"Season\"]!=0\ndata[sort_s][\"Season\"].median() ## -- On average 1 Season","fa38e9b2":"mask=data['type']==\"Movie\"\ndata[mask].sort_values(by=\"release_year\", ascending= True).head(5)\n## And two from 1942 : Prelude to War and The Battle of Midway -- all documentaries","8f4a2872":"## What is the oldest TV-Show on Netflix\n","3b496dc9":"mask2=data['type']==\"TV Show\"\ndata[mask2].sort_values(by=\"release_year\", ascending=True).head(5)\n\n## The oldest TV Show was from 1925, called \"PioneerS: First Women Filmmakers\"\n","89a22de3":"(data[data[\"type\"]==\"Movie\"]\n.groupby(\"country\")\n[[\"show_id\"]]\n.count()\n.sort_values(by=\"show_id\", ascending=False)\n.head(10)\n)\n## Most of the movies are made by America, Then India","b5ad1d32":"## Countries and Tv-Show releases \n(data[data[\"type\"]==\"TV Show\"]\n.groupby(\"country\")\n[[\"show_id\"]]\n.count()\n.sort_values(by=\"show_id\", ascending=False)\n.head(10)\n)\n## Most of the TV Shows are made by USA","87e84518":"data[\"rating\"].value_counts()\n## Most of the movies are # TV-MA\tSuitable for Mature Audiences Only  and Good for 14 years old kids.\n\n","1f1bbad2":"# TV-MA\tSuitable for Mature Audiences Only \n# TV-14 Programs rated TV-14 contains material that parents or adult guardians may find unsuitable for children under the age of 14\n# TV - PG This program is intended to be viewed by mature, adult audiences and may be unsuitable for children under 17.\n# R - Restricted, Children Under 17 Require Accompanying Parent or Adult Guardian. \n# PG-13 -  Parents Strongly Cautioned. Some Material May Be Inappropriate For Children Under 13\n# NR - Not Rated\n# PG - Parental Guidance General viewing\n# TV-Y7 - This program is most appropriate for children age 7 and up.\n#TV - G - This program is suitable for all ages.\n# TV-Y  - this program is aimed at a very young audience, including children from ages 2-6\n# fantasy violence may be more\n# TV-Y7-FV  - directed to older children with intense or more combative than other programs\n# G - General audiences \u2013 All ages admitted.\n# UR - Under Rated\n# NC-17 - No One 17 and Under Admitted.","9bddc71d":"(data[\"cast\"].str.contains(\"Tom Cruise\")).sum()\ndata[data[\"cast\"].str.contains(\"Tom Cruise\")]\n\n## One of my favorite actors are listed too, Rain Main and Magnolia with Tom Cruise :)","bbc4dc6f":"## How many Horror Movies and Tv Shows on Netflix?","8100fc66":"## Countries and Movie releases \n","97d2a582":"## What is the maximum duration of the movie?","25c2ec85":"## Cleaning Data","585e6fd0":"## IS there Tom Cruise there in the database?\n","40bc26c3":"## Which Tv Show had the maximum of seasons?","6fe59c52":"## What is the average duration of the movie\n","20b12f8d":"## Ratings","ed38f7f2":"There are 4 times more movies than TV-Shows","6ae33fc9":"## What is the oldest movie on Netflix\n","80e603cb":"This notebook is mostly about the cleaning the data, that has lots of String type in the database. \n\n    - The Date_Added was a string, shall be the date-time format\n    - Lots of NA in the director column, I changed for \"Unknown\". It does not make sense to delete all rows, as for most of the movies, directors were not mentioned\n    - I did not like the Duration column, as it contained Seasons and min, so I separated the season and min and deleted season from duration, using regex for the first time.\n    \n    ","7f0576e9":"## How many TV-Shows and Movies in this database?","866f2cc6":"## Conclusion\n\n    - Movies: 4265, TV Shows: 1969\n    - Horror Movies: 262, Horrow TV Shows - 52\n    - On average the movie lasts 98 minutes\n    - On Average every tV-Show has 1 season\n    - Mostly movies and TV-shows are made in America\n    - TV-MA and TV-14 are the most common type of rating","600d1ee5":"## How many seasons are on Netflix on average per Tv-show\n"}}