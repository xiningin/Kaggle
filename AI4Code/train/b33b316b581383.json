{"cell_type":{"901fdabe":"code","e18414f3":"code","aa539dbb":"code","5d35ef61":"code","d47f64df":"code","cb205636":"code","53de6f53":"code","a7f95071":"code","9b47a7a0":"code","d5ece2ed":"code","9a667d22":"code","cdb9e26c":"code","fc88c5c9":"code","58106ce7":"code","d39a5e7f":"code","4b0b6b53":"code","612b39f4":"code","adb42148":"code","6434bd2c":"code","7ea63778":"code","d96e4542":"code","33a55455":"code","53579418":"code","2e52d14b":"code","5d2c39b3":"code","e780e998":"code","fbb40158":"code","9cc0542e":"code","1c78c68a":"code","50a6084f":"code","2de57620":"code","23da3ac7":"code","6dbbc596":"code","73b09c04":"code","2f3dc169":"code","e9181071":"code","ca0db292":"code","f36afa64":"code","e05ec330":"code","460611b9":"code","080b4a15":"code","e23105df":"code","bd3d5b08":"code","00fb8bb7":"code","c57f0a24":"code","7cb3ce3b":"code","f5cbb169":"code","98b16590":"code","efbdcea0":"code","c2457add":"code","49ce50c6":"code","6b4475f5":"code","bb33061b":"code","b49f52f8":"code","8b2842cb":"code","ca09bd6d":"code","9d6da95f":"code","0f98caff":"code","cfb9bfbf":"code","8c4a50c2":"code","9d75a3bd":"code","6b7466b1":"code","ef011d8d":"code","215521ba":"code","9e6dc445":"code","2c9aa34d":"code","df2e8305":"code","21afdee0":"code","c0af73a4":"code","e44ecbb1":"code","786701f2":"code","5cc89dc5":"code","220ec370":"code","4695a8f6":"code","8c01c92d":"code","b84e104b":"code","f7bcc257":"code","14d8c6ce":"markdown","d67944f4":"markdown","fc7254b6":"markdown","40a7ea4d":"markdown","a9511a8f":"markdown","a8cca881":"markdown","e6d00fc5":"markdown","e72d5bf0":"markdown","268ed491":"markdown","823426b6":"markdown","322dbc5d":"markdown","cd5d4e5b":"markdown","5318ee23":"markdown","ab151d4f":"markdown","d258491e":"markdown","111f932c":"markdown","b21204eb":"markdown","f8bc512d":"markdown","7a1382d9":"markdown","2125bb53":"markdown","44148ccd":"markdown","04731476":"markdown","17057b81":"markdown","de937e7a":"markdown","2c0039ca":"markdown","f042cf2e":"markdown","f5d463b7":"markdown","1d426b82":"markdown","20a60bf3":"markdown","0317f9d1":"markdown","8188e4c6":"markdown","576f8d3a":"markdown","3fc5c27f":"markdown","a0660f96":"markdown","b111d46c":"markdown","ebf9692b":"markdown","06e9015b":"markdown","9f2653e9":"markdown","e3ef6f95":"markdown","58cb21a7":"markdown","fbcc7cfc":"markdown","b177ec9e":"markdown","7876fc34":"markdown"},"source":{"901fdabe":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e18414f3":"data_df = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ndata_df = data_df[0:1000].copy()\ndata = data_df.copy()","aa539dbb":"data.shape","5d35ef61":"display(data_df.head())","d47f64df":"data.drop(['enrollee_id'],axis=1,inplace=True)\npred = data_df['target']","cb205636":"data.isnull().sum()","53de6f53":"print(\"The number of missing values for this feature is\",data[\"city\"].isnull().sum())","a7f95071":"print(\"The number of unique values for this feature is:\",len(data[\"city\"].unique()))","9b47a7a0":"data.drop(['city'],axis=1,inplace=True) ","d5ece2ed":"print(\"The number of missing values for this feature is\",data[\"city_development_index\"].isnull().sum())","9a667d22":"print(\"Value for City Development Index ranges from:\",data_df[\"city_development_index\"].describe()[3],\"to\",data_df[\"city_development_index\"].describe()[7])","cdb9e26c":"plt.figure(figsize=(12, 5))\nsns.kdeplot(data=data, x=\"city_development_index\", hue=\"target\",cut = 0,palette='Set1')","fc88c5c9":"print(\"The number of missing values for this feature is\",data[\"gender\"].isnull().sum())","58106ce7":"print(\"The number of unique values for this feature is:\",len(data[\"gender\"].unique())-1)","d39a5e7f":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'gender',hue='target',data=data,palette='rainbow')","4b0b6b53":"data[\"gender\"].fillna(\"Male\", inplace = True)\n\n\ngen = pd.get_dummies(data['gender'])\ndata.drop(['gender'],axis=1,inplace=True)\ndata = pd.concat([data,gen],axis=1)\n\n\ndata.drop(['Other'],axis=1,inplace=True) ","612b39f4":"print(\"The number of missing values for this feature is\",data[\"relevent_experience\"].isnull().sum())","adb42148":"print(\"The number of unique values for this feature is:\",len(data[\"relevent_experience\"].unique()))","6434bd2c":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'relevent_experience',hue='target',data=data,palette='deep')","7ea63778":"rel = pd.get_dummies(data['relevent_experience'])\ndata.drop(['relevent_experience'],axis=1,inplace=True)\ndata = pd.concat([data,rel],axis=1)\n\n\ndata.drop(['No relevent experience'],axis=1,inplace=True) ","d96e4542":"print(\"The number of missing values for this feature is\",data[\"enrolled_university\"].isnull().sum())","33a55455":"print(\"The number of unique values for this feature is:\",len(data[\"enrolled_university\"].unique())-1)","53579418":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'enrolled_university',hue='target',data=data,palette='Set2')","2e52d14b":"data[\"enrolled_university\"].fillna(\"no_enrollment\", inplace = True)\n\n\nenr = pd.get_dummies(data['enrolled_university'])\ndata.drop(['enrolled_university'],axis=1,inplace=True)\ndata = pd.concat([data,enr],axis=1)\n\n\ndata.drop(['Part time course'],axis=1,inplace=True) ","5d2c39b3":"print(\"The number of missing values for this feature is\",data[\"education_level\"].isnull().sum())","e780e998":"print(\"The number of unique values for this feature is:\",len(data[\"education_level\"].unique())-1)","fbb40158":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'education_level',hue='target',data=data,palette='cool')","9cc0542e":"data[\"education_level\"].fillna(\"Graduate\", inplace = True)\n\n\nedu = pd.get_dummies(data['education_level'])\ndata.drop(['education_level'],axis=1,inplace=True)\ndata = pd.concat([data,edu],axis=1)\n\n\ndata.drop(['Phd','Primary School'],axis=1,inplace=True) ","1c78c68a":"print(\"The number of missing values for this feature is\",data[\"major_discipline\"].isnull().sum())","50a6084f":"print(\"The number of unique values for this feature is:\",len(data[\"major_discipline\"].unique())-1)","2de57620":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'major_discipline',hue='target',data=data,palette='YlGn')","23da3ac7":"data[\"major_discipline\"].fillna(\"STEM\", inplace = True)\n\n\nmd = pd.get_dummies(data['major_discipline'])\ndata.drop(['major_discipline'],axis=1,inplace=True)\ndata = pd.concat([data,md],axis=1)\n\n\ndata.drop(['Business Degree','Arts','Humanities','No Major','Other'],axis=1,inplace=True) ","6dbbc596":"print(\"The number of missing values for this feature is\",data[\"experience\"].isnull().sum())","73b09c04":"print(\"The number of unique values for this feature is:\",len(data[\"experience\"].unique())-1)","2f3dc169":"data[\"experience\"].value_counts()","e9181071":"data[\"experience\"].fillna(\"20\", inplace = True)\n\ndata.replace({\"experience\":{\">20\":20,\"<1\":1}},inplace = True)\n\ndata[\"experience\"] = data[\"experience\"].astype(\"int64\")","ca0db292":"plt.figure(figsize=(16, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'experience',hue=\"target\",data=data,palette='turbo')","f36afa64":"def yearexp(x):\n    if  (x['experience'])  >= 1 and (x['experience'])  <= 5 :\n        return 1\n    elif  (x['experience'])  >= 6 and (x['experience'])  <= 10 :\n        return 2\n    elif  (x['experience'])  >= 11 and (x['experience'])  <= 15 :\n        return 3\n    else :\n        return 4\n\ndata['exp_count'] = data.apply(yearexp, axis = 1)","e05ec330":"plt.figure(figsize=(10, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'exp_count',hue=\"target\",data=data,palette='rocket')","460611b9":"data.drop(['experience'],axis=1,inplace=True) ","080b4a15":"data.drop(['exp_count'],axis=1,inplace=True) ","e23105df":"print(\"The number of missing values for this feature is\",data[\"company_size\"].isnull().sum())","bd3d5b08":"print(\"The number of unique values for this feature is:\",len(data[\"company_size\"].unique())-1)","00fb8bb7":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'company_size',hue='target',data=data_df,palette='spring')","c57f0a24":"data.drop(['company_size'],axis=1,inplace=True) ","7cb3ce3b":"print(\"The number of missing values for this feature is\",data[\"company_type\"].isnull().sum())","f5cbb169":"print(\"The number of unique values for this feature is:\",len(data[\"company_type\"].unique())-1)","98b16590":"plt.figure(figsize=(10, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'company_type',hue='target',data=data_df,palette='winter_r')","efbdcea0":"data[\"company_type\"].fillna(\"Pvt Ltd\", inplace = True)\n\n\nct = pd.get_dummies(data['company_type'])\ndata.drop(['company_type'],axis=1,inplace=True)\ndata = pd.concat([data,ct],axis=1)\n\n\ndata.drop(['Funded Startup','Early Stage Startup','NGO','Other'],axis=1,inplace=True) ","c2457add":"print(\"The number of missing values for this feature is\",data[\"last_new_job\"].isnull().sum())","49ce50c6":"print(\"The number of unique values for this feature is:\",len(data[\"last_new_job\"].unique())-1)","6b4475f5":"plt.figure(figsize=(10, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'last_new_job',hue='target',data=data_df,palette='bwr')","bb33061b":"data.drop(['last_new_job'],axis=1,inplace=True) ","b49f52f8":"print(\"The number of missing values for this feature is\",data[\"training_hours\"].isnull().sum())","8b2842cb":"print(\"The number of unique values for this feature is:\",len(data[\"training_hours\"].unique())-1)","ca09bd6d":"plt.figure(figsize=(12, 5))\nsns.set_style('whitegrid')\nsns.kdeplot(data=data, x=\"training_hours\", hue=\"target\",cut = 0,palette='Set1')","9d6da95f":"plt.figure(figsize=(12, 5))\nsns.kdeplot(data=data_df, x=\"training_hours\", hue=\"relevent_experience\",cut = 0,palette='Set2')","0f98caff":"plt.figure(figsize=(8, 6))\nsns.set_style('whitegrid')\nsns.countplot(x = 'education_level',hue='relevent_experience',data=data_df,palette='PuRd')","cfb9bfbf":"data.head()","8c4a50c2":"data.drop(['target'],axis=1,inplace=True)","9d75a3bd":"data.isnull().sum()","6b7466b1":"from sklearn.preprocessing import MinMaxScaler\ndata[\"training_hours\"] = MinMaxScaler().fit_transform(np.array(data[\"training_hours\"]).reshape(-1,1))","ef011d8d":"data.head()","215521ba":"from sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.metrics import confusion_matrix\n\nclassifiers = ['LinearSVM', 'RadialSVM', \n               'Logistic',  'RandomForest', \n               'KNeighbors','DecisionTree', \n               'GradientBoosting']\n\nmodels = [svm.SVC(kernel='linear'),\n          svm.SVC(kernel='rbf'),\n          LogisticRegression(max_iter = 1000),\n          RandomForestClassifier(n_estimators=200, random_state=0),\n          DecisionTreeClassifier(random_state=0),\n          KNeighborsClassifier(),\n          GradientBoostingClassifier(random_state=0)]\n","9e6dc445":"from sklearn.model_selection import train_test_split\ndef split(df,label):\n    X_tr, X_te, Y_tr, Y_te = train_test_split(df, label, test_size=0.25, random_state=42)\n    return X_tr, X_te, Y_tr, Y_te\n\ndef acc_score(df,label):\n    Score = pd.DataFrame({\"Classifier\":classifiers})\n    j = 0\n    acc = []\n    X_train,X_test,Y_train,Y_test = split(df,label)\n    for i in models:\n        model = i\n        model.fit(X_train,Y_train)\n        predictions = model.predict(X_test)\n        acc.append(accuracy_score(Y_test,predictions))\n        j = j+1     \n    Score[\"Accuracy\"] = acc\n    Score.sort_values(by=\"Accuracy\", ascending=False,inplace = True)\n    Score.reset_index(drop=True, inplace=True)\n    return Score","2c9aa34d":"rf = RandomForestClassifier(n_estimators=200, random_state=0)\nX_tr, X_te, Y_tr, Y_te = train_test_split(data, pred, test_size=0.25, random_state=42)\nrf.fit(X_tr, Y_tr)\nsorted_idx = rf.feature_importances_.argsort()\nplt.barh(data.columns[sorted_idx], rf.feature_importances_[sorted_idx],color = 'orange')\nplt.xlabel(\"Random Forest Feature Importance\")","df2e8305":"new_data = data[[\"training_hours\",\"city_development_index\"]]","21afdee0":"acc_score(new_data,pred)","c0af73a4":"from sklearn.ensemble import VotingClassifier\n\nX_tr, X_te, Y_tr, Y_te = train_test_split(new_data, pred, test_size=0.25, random_state=42)\nestimator = []\nestimator.append(('GB', GradientBoostingClassifier(random_state=0)))\nestimator.append(('SVC',svm.SVC(kernel='rbf')))\nestimator.append(('RF',RandomForestClassifier(n_estimators=200, random_state=0)))\n\nvoting = VotingClassifier(estimators = estimator)\nvoting.fit(X_tr, Y_tr)\nY_pred1 = voting.predict(X_te)\n  \nscore = accuracy_score(Y_te, Y_pred1)\nprint(\"Voting Score :\",score)","e44ecbb1":"gbc = GradientBoostingClassifier(random_state=0)\n\nparam_grid = { \n    'learning_rate':[0.01,0.001],\n    'n_estimators': [600,750,800],\n    'max_features': [ 'sqrt'],\n    'max_depth' : [8,9,10]\n}","786701f2":"from sklearn.model_selection import GridSearchCV\nX_tr, X_te, Y_tr, Y_te = train_test_split(new_data, pred, test_size=0.25, random_state=42)\nCV_gbc = GridSearchCV(estimator=gbc, param_grid=param_grid, cv= 5,n_jobs = 1)\nCV_gbc.fit(X_tr,Y_tr)","5cc89dc5":"CV_gbc.best_params_","220ec370":"tuned_gbc = GradientBoostingClassifier(learning_rate= 0.001,\n                                       max_depth= 9,\n                                       max_features= 'sqrt',\n                                       n_estimators= 750,\n                                       random_state=0)","4695a8f6":"tuned_gbc.fit(X_tr,Y_tr)\nY_pred = tuned_gbc.predict(X_te)\n\nprint(\"Accuracy after optimization :\",accuracy_score(Y_te, Y_pred))","8c01c92d":"cm = confusion_matrix(Y_te, Y_pred)\nprint(cm)\n\nplt.figure(figsize = (8,6))\nsns.heatmap(cm, annot=True, cmap = 'YlOrBr_r')\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","b84e104b":"from sklearn.metrics import classification_report\nprint(classification_report(Y_te, Y_pred))","f7bcc257":"tuned_gbc.fit(X_tr,Y_tr)\nprobs = tuned_gbc.predict_proba(X_te)\npreds = probs[:,1]\nfpr, tpr, threshold = metrics.roc_curve(Y_te, preds)\nroc_auc = metrics.auc(fpr, tpr)\n\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","14d8c6ce":"### 3. Gender\n#### This feature has the gender of candidate.","d67944f4":"## Applying Normalization","fc7254b6":"## Ensembling Model","40a7ea4d":"#### Applying GradientBoostingClassifier with hyperparameter tuning","a9511a8f":"#### Here we can see that graduates had more relevant experience compared to others.","a8cca881":"### Classification Report","e6d00fc5":"## Feature Importance\n#### Checking the feature importance using 'Random Forest Feature Importance'.","e72d5bf0":"#### Normalization only needs to be applied to the \"training_hours\" feature, as all the rest of the features are already scaled and preprocessed.","268ed491":"### 11. Last New Job\n#### This feature mentions the difference in years between previous job and current job.","823426b6":"### 6. Education Level\n#### This feature mentions the education level of the candidate.","322dbc5d":"### 7. Major Discipline\n#### This feature mentions the education major discipline of the candidate.","cd5d4e5b":"#### Gradient boosting gives the maximum accuracy among all the classifiers.","5318ee23":"### 5. Enrolled University\n#### This feature mentions the type of university course enrolled if any.","ab151d4f":"#### Here we can see that employees with fewer training hours have a lower probability of switching their jobs.","d258491e":"#### A company which is active in Big Data and Data Science wants to hire data scientists among people who successfully pass some courses which conduct by the company. Many people signup for their training. Company wants to know which of these candidates are really wants to work for the company after training or looking for a new employment because it helps to reduce the cost and time as well as the quality of training or planning the courses and categorization of candidates. Information related to demographics, education, experience are in hands from candidates signup and enrollment.\n\n#### Features\n- enrollee_id : Unique ID for candidate\n- city: City code\n- city_ development _index : Development index of the city (scaled)\n- gender: Gender of candidate\n- relevent_experience: Relevant experience of candidate\n- enrolled_university: Type of University course enrolled if any\n- education_level: Education level of candidate\n- major_discipline :Education major discipline of candidate\n- experience: Candidate total experience in years\n- company_size: No of employees in current employer's company\n- company_type : Type of current employer\n- lastnewjob: Difference in years between previous job and current job\n- training_hours: training hours completed\n- target: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","111f932c":"# Plan of Action\n#### We will be looking at the following things:\n* Data visualization\n* Filling in missing values\n* Data Preprocessing\n* Encoding\n\n**Missing values are filled with the maximum value for that feature.**                                        \n**For encoding, '.get_dummies()' is used.**                                                                    \n**Features with less or negligible influence are dropped.**                                         ","b21204eb":"### Missing values\n","f8bc512d":"#### We drop this feature because it does not provide any useful insight.","7a1382d9":"# Model Training","2125bb53":"**Taking the first 1000 values from the dataset.**","44148ccd":"# Hyperparameter Tuning","04731476":"### 2. City Development Index\n#### This feature has the developement index of the city (scaled).","17057b81":"### 8. Experience\n#### This feature mentions the candidate's total experience in years.","de937e7a":"### Additional EDA","2c0039ca":"# Features","f042cf2e":"### 1. City\n#### This feature has details about the city code.","f5d463b7":"### 4. Relevant Experience\n#### This feature tells whether the candidate has some relevant experience or not.","1d426b82":"#### Here the label is target where, 0 \u2013 Not looking for a job change and, 1 \u2013 Looking for a job change.","20a60bf3":"#### We drop the 'city' attribute because it has too many unique values and does not contribute in any way.","0317f9d1":"<div style=\"width:100%;text-align: center;\"> <img align=middle src=\"https:\/\/www.clipartkey.com\/mpngs\/m\/200-2006710_processmaker-alternative-cflow-cavintek-data-analysis-vector.png\" alt=\"HR\" style=\"height:450px;margin-top:3rem;\"> <\/div>","8188e4c6":"### 10. Company Type\n#### This feature mentions the company type of the employer that wishes to hire.","576f8d3a":"#### We will also observe the results given by the Voting Classifier.","3fc5c27f":"#### Here we can see that training hours and city development index are the most significant features in this dataset, therefore we will be selecting them for model training.","a0660f96":"#### Here we can see an improvement of 3.6% after hyperparameter tuning.","b111d46c":"### ROC Curve","ebf9692b":"#### Here we can see that people living in developed cities have a lesser probability of switching their jobs.","06e9015b":"### Looking at data after preprocessing ","9f2653e9":"### Confusion Matrix","e3ef6f95":"#### These are the best paramters after hyperparamter tuning.","58cb21a7":"### 12. Training Hours\n#### This features mentions the training hours completed by the candidate.","fbcc7cfc":"## HR Analytics: Job Change of Data Scientists","b177ec9e":"#### The above visualization shows that there are a greater number of employees with relevant experience with lower training hours.","7876fc34":"### 9. Company Size\n#### This feature mentions the number of employees in the current employer's company."}}