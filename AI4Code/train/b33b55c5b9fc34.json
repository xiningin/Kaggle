{"cell_type":{"4358fb81":"code","cd058aec":"code","8cce7970":"code","bc5d3445":"code","297235fc":"code","e4523d1e":"code","4a33160f":"code","3df8c26c":"code","a8a48292":"code","fbe8d776":"code","93ad62f3":"code","6a3d492e":"code","c66e00fa":"code","9d64e5e4":"code","12b9e75c":"code","a804ab83":"code","2353ac8f":"code","3db3a6fd":"code","b5d249be":"code","b9d29792":"code","01bd35b8":"code","c6d79aa5":"code","334234e0":"markdown","b7b89201":"markdown","df53e40e":"markdown","7cb48fd2":"markdown"},"source":{"4358fb81":"from sklearn.metrics import silhouette_score # \uad70\uc9d1 \ub0b4 \uac70\ub9ac\uc640 \uad70\uc9d1\uac04 \uac70\ub9ac\ub97c \ube44\uad50\ud558\ub294 \ud074\ub7ec\uc2a4\ud130 \uc131\ub2a5 \ube44\uad50 \uc9c0\ud45c","cd058aec":"import pandas as pd\ndf = pd.read_csv(r'..\/input\/ysp-koreauniv-tutorial\/shopping-data.csv')\n# \uce90\uae00 add data, Mall_customers \uac80\uc0c9","8cce7970":"df","bc5d3445":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler() # default \uac12\uc73c\ub85c \ud560 \uacbd\uc6b0 \ud3c9\uade0 0, \ubd84\uc0b0 1\uc774 \ub418\ub3c4\ub85d \ubaa8\ub4e0 \uceec\ub7fc\uc744 \uc815\uaddc\ud654 \uc2a4\ucf00\uc77c\ub9c1\ud574\uc90c\nscaled_data = scaler.fit_transform(df.iloc[:,3:5])# 3\ubc88\uc9f8, 4\ubc88\uc9f8 \uceec\ub7fc\uc5d0 \ub300\ud574\uc11c\ub9cc \uc2dc\ud589(\uc18c\ub4dd, \uc1fc\ud551\uc9c0\ucd9c)\ndf.iloc[:,3:5] = scaled_data","297235fc":"df","e4523d1e":"import matplotlib.pyplot as plt","4a33160f":"plt.scatter(df.iloc[:,3], df.iloc[:,4])\nplt.show()","3df8c26c":"from scipy.cluster.hierarchy import linkage\n# https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.cluster.hierarchy.linkage.html\n#scipy.cluster.hierarchy.linkage","a8a48292":"hiera = linkage(df.iloc[:,3:5]\n                , method = 'centroid' # \uad50\uc7ac 92p\ubd80\ud130 \ucc38\uace0 \/ custom function\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5\n               ) # \uacc4\uce35\uc801 \ud074\ub7ec\uc2a4\ud130\ub9c1 \uc9c4\ud589\ud558\uba70 \ubaa8\ub4e0 \uac70\ub9ac\ub97c method\uc5d0 \ub530\ub77c \uce21\uc815","fbe8d776":"from scipy.cluster.hierarchy import dendrogram","93ad62f3":"dend = dendrogram(hiera, color_threshold=0.7) # linkage \uacb0\uacfc\uc5d0 \ub530\ub77c \ub304\ub4dc\ub85c\uadf8\ub7a8 \uc2dc\uac01\ud654","6a3d492e":"from scipy.cluster.hierarchy import cut_tree\n# https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.cluster.hierarchy.cut_tree.html\nnum_of_cluster = 7\ncluster_info = cut_tree(hiera, num_of_cluster) # \uc124\uc815\ud55c \ud074\ub7ec\uc2a4\ud130 \uac1c\uc218\uc5d0 \ub530\ub77c linkage \uacb0\uacfc\uc5d0 \ub300\ud55c \uad70\uc9d1 \uacb0\uacfc\ub97c \ucd9c\ub825\ncluster_info","c66e00fa":"plt.scatter(df.iloc[:,3], df.iloc[:,4], c = cluster_info, cmap = plt.cm.rainbow)\nplt.show()\nprint('silhouette_score: {}'.format(silhouette_score(df.iloc[:,3:5], cluster_info)))","9d64e5e4":"hiera = linkage(df.iloc[:,3:5], method = 'ward')\n\ndend = dendrogram(hiera)\nplt.show()","12b9e75c":"from scipy.cluster.hierarchy import cut_tree\n# https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.cluster.hierarchy.cut_tree.html\nnum_of_cluster = 5\ncluster_info = cut_tree(hiera, num_of_cluster)\n\nplt.scatter(df.iloc[:,3], df.iloc[:,4], c = cluster_info, cmap = plt.cm.rainbow)\nplt.show()\nprint('silhouette_score: {}'.format(silhouette_score(df.iloc[:,3:5], cluster_info)))\nkmeans = KMeans(n_clusters = 5, random_state = 42)\ncluster = kmeans.fit_predict(df.iloc[:,3:5])\nplt.scatter(df.iloc[:,3], df.iloc[:,4], c = cluster, cmap = plt.cm.rainbow)\nplt.show()\nprint('silhouette_score: {}'.format(silhouette_score(df.iloc[:,3:5], cluster)))","a804ab83":"from sklearn.cluster import KMeans\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html","2353ac8f":"tmp = []\nfor i in range(1, 11): # for\ubb38\uc744 \ud65c\uc6a9\ud574 \ub2e4\uc591\ud55c \ud074\ub7ec\uc2a4\ud130 \uac1c\uc218\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130 \uc131\ub2a5 \ube44\uad50\n    kmeans = KMeans(n_clusters = i, init = 'k-means++') # kmeans cluster \ubaa8\ub378 \uc815\uc758 (\ud074\ub7ec\uc2a4\ud130 \uac1c\uc218\uc640 initiation \uc54c\uace0\ub9ac\uc998\uc774 \uc911\uc694\ud55c\ub370, initiation \uc54c\uace0\ub9ac\uc998\uc740 \ubcf4\ud1b5 \ub514\ud3f4\ud2b8\uc778 \"k-means++\"\ub85c \ud558\ub294 \uac83\uc774 \uc88b\uc74c)\n    kmeans.fit(df.iloc[:,3:5])\n    tmp.append(kmeans.inertia_) # inertia\ub97c \uc800\uc7a5\ud574 inertia\ub97c \uae30\uc900\uc73c\ub85c \uc131\ub2a5 \ube44\uad50","3db3a6fd":"# \uc801\ub2f9\ud55c elbow point\ub294 \uc8fc\uad00\uc801\uc73c\ub85c \uc120\ud0dd\nplt.plot(range(1, 11), tmp)\nplt.show()","b5d249be":"kmeans = KMeans(n_clusters = 5, random_state = 42)\ncluster = kmeans.fit_predict(df.iloc[:,3:5])\nplt.scatter(df.iloc[:,3], df.iloc[:,4], c = cluster, cmap = plt.cm.rainbow)\nplt.show()\nprint('silhouette_score: {}'.format(silhouette_score(df.iloc[:,3:5], cluster)))","b9d29792":"from sklearn.metrics import silhouette_score","01bd35b8":"silhouette_score(df.iloc[:,3:5], cluster_info)","c6d79aa5":"silhouette_score(df.iloc[:,3:5], cluster)","334234e0":"![1_2_2.PNG](attachment:c97e830d-f7a8-4171-b9f2-71ab91d31dad.PNG)","b7b89201":"## \uacc4\uce35\uc801 \ud074\ub7ec\uc2a4\ud130\ub9c1","df53e40e":"## K-Means \ud074\ub7ec\uc2a4\ud130\ub9c1","7cb48fd2":"## 1. \uc720\uc0ac\ub3c4 \ucc99\ub3c4(distance(or similarity) metric \uc815\ud558\uae30)\n### \uc720\ud074\ub9ac\ub514\uc548 \uac70\ub9ac, \ub9e8\ud558\ud0c4 \uac70\ub9ac, \ub9c8\ud560\ub77c\ub178\ube44\uc2a4 \uac70\ub9ac, \uc0c1\uad00\uacc4\uc218 \uac70\ub9ac, dtw \ub4f1\n\n## 2. \ub450 \uad70\uc9d1 \uc0ac\uc774\uc758 \uac70\ub9ac \uce21\uc815 \ubc29\ubc95 \uc815\ud558\uae30 (Min, max, group average, between centroid \ub4f1)\n\n![1_2_1.PNG](attachment:6e0112d0-16a8-4a1a-a5a6-950d701884d2.PNG)"}}