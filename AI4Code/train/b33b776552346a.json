{"cell_type":{"e183e636":"code","cac23ce6":"code","8d0aa802":"code","2d4505c4":"code","83b6fe5c":"code","a4bcd04b":"code","4eca4370":"code","60438f54":"code","1585bac4":"code","d953b699":"code","36aa48c6":"code","8aec09af":"code","90122109":"code","db998b07":"code","09276745":"code","aef3b931":"markdown","efdb1ad1":"markdown","d3b4554b":"markdown","57f4585f":"markdown","09e1b595":"markdown","88bdc740":"markdown","0ad59d71":"markdown","241aea7a":"markdown","19c8a3bb":"markdown","18f79836":"markdown","e581de2b":"markdown"},"source":{"e183e636":"import pandas as pd\nimport re\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer","cac23ce6":"df = pd.read_csv('..\/input\/sms-spam-collection-dataset\/spam.csv',encoding='ISO-8859-1')\ndf.head()","8d0aa802":"df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'],axis='columns',inplace=True)\ndf.columns = ['label', 'message']\ndf.head()","2d4505c4":"ps = PorterStemmer()","83b6fe5c":"corpus = []\nfor i in range(0, len(df)):\n    review = re.sub('[^a-zA-Z]', ' ', df['message'][i])\n    review = review.lower()\n    review = nltk.word_tokenize(review)\n    \n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    corpus.append(review)\n    \n    ","a4bcd04b":"from sklearn.feature_extraction.text import CountVectorizer","4eca4370":"cv = CountVectorizer(max_features = 5000)\nX = cv.fit_transform(corpus).toarray()","60438f54":"y = pd.get_dummies(df['label'])\ny = y.iloc[:,1].values","1585bac4":"print(df['label'].head(),\"\\n y = \",y)","d953b699":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=0)","36aa48c6":"from sklearn.naive_bayes import MultinomialNB","8aec09af":"spam_detect_model = MultinomialNB()\nspam_detect_model.fit(X_train,y_train)","90122109":"y_pred = spam_detect_model.predict(X_test)","db998b07":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm = confusion_matrix(y_test,y_pred)\ncm","09276745":"acc_score = accuracy_score(y_test,y_pred)\nacc_score","aef3b931":"# Importing Libraries","efdb1ad1":"# Dropping Unnecessary Columns","d3b4554b":"# Naive Bayes Model","57f4585f":"# Implement Bag Of Words","09e1b595":"# Tokenization & Stemming","88bdc740":"# Conclusion\n\nThe accuracy is pretty good. So, this model can be a good SMS Spam Classifier. ","0ad59d71":"# Accuracy & Result","241aea7a":"This shows that **0 indicates ham** and **1 indicates spam**","19c8a3bb":"# Introduction\n\nIn this notebook, I will be showing you how to build a SMS Spam Classifier, which will be able to predict whether an SMS (English) is **ham** or **spam**. I will be using the UCI Machine Leaning Repository's [SMS Spam Colletion Dataset](https:\/\/www.kaggle.com\/uciml\/sms-spam-collection-dataset). So, lets have a look on how to build a SMS spam classifier using NLP.\n\n![Spam](https:\/\/zpllp.com\/wp-content\/uploads\/2018\/04\/no-spam-300x296.jpg)","18f79836":"# Train Test Split","e581de2b":"# Importing Dataset"}}