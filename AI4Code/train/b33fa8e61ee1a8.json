{"cell_type":{"a2d1628b":"code","dd2bacf7":"code","23b004bd":"code","9c5bbabc":"code","239e50f8":"code","aee05190":"code","ace7121b":"code","7b9c58f0":"code","bdf74f5f":"code","3d5f55a2":"code","efa603a5":"code","4eebbb82":"code","f75c2d86":"code","3fd74a49":"code","87804150":"markdown","a08e01d8":"markdown","d3b023b7":"markdown","6fdaeb46":"markdown","d415d2f0":"markdown","4600a263":"markdown","e3f91fb8":"markdown","10cc7b4b":"markdown","6572f9b9":"markdown","8087400b":"markdown","ac452057":"markdown","2b9e1c28":"markdown","6f7f5f08":"markdown","35172fb7":"markdown","e5f7c712":"markdown","b26a8032":"markdown"},"source":{"a2d1628b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import jaccard_similarity_score\n\n# importando dados\ndataset = pd.read_csv('..\/input\/agrupamento-de-dados-ufv-crp\/dados.csv')\n# importando dados p\/ valida\u00e7\u00e3o\ny_true = pd.read_csv('..\/input\/marketingdatatrain\/train.csv',sep=';')\n\ndataset.head()\n#y_true.head()","dd2bacf7":"plt.figure(figsize=(12,6))\nplt.xlabel(\"Estado Civil\")\nplt.ylabel(\"Quantidade\")\nplt.title(\"Distribui\u00e7\u00e3o n\u00famerica por estado civil\")\nplt.bar(dataset['marital'].value_counts().keys(), dataset['marital'].value_counts().values,color=\"#B0E0E6\")\nplt.tight_layout()\nplt.show()","23b004bd":"enc = LabelEncoder()\ndataset.poutcome = enc.fit_transform(dataset['poutcome'])\ndataset.day_of_week = enc.fit_transform(dataset['day_of_week'])\ndataset.month = enc.fit_transform(dataset['month'])\ndataset.contact = enc.fit_transform(dataset['contact'])\ndataset.housing = enc.fit_transform(dataset['housing'])\ndataset.loan = enc.fit_transform(dataset['loan'])\ndataset.marital = enc.fit_transform(dataset['marital'])\ndataset.default = enc.fit_transform(dataset['default'])\ndataset.education = enc.fit_transform(dataset['education'])\ndataset.job = enc.fit_transform(dataset['job'])\ndel dataset['emp.var.rate']\ndel dataset['cons.price.idx']\ndel dataset['cons.conf.idx']\ndel dataset['euribor3m']\ndel dataset['nr.employed']\ndel dataset['duration']\n#del dataset['age']\n#del dataset['job']\n#del dataset['education']\n#del dataset['month']\n#del dataset['day_of_week']\n#del dataset['contact']","9c5bbabc":"display(dataset.head())","239e50f8":"f, ax = plt.subplots(1,2, figsize=(16,8))\n\ncolors = [\"#FA5858\", \"#64FE2E\", '#66b3ff']\nlabels =\"N\u00e3o tem Empr\u00e9stimo\", \"Empr\u00e9stimo\", \"N\u00e3o se sabe\"\n\nplt.title('Aluguel X Cr\u00e9dito', fontsize=16)\n\ndataset[\"loan\"].value_counts().plot.pie(explode=[0,0.15,0], autopct='%1.2f%%', ax=ax[0], shadow=True, colors=colors,labels=labels, fontsize=12, startangle=25)\n\nax[0].set_title('Empr\u00e9stimo', fontsize=16)\nax[0].set_xlabel('% de empr\u00e9stimos', fontsize=14)\n\n#palette = [\"#64FE2E\", \"#FA5858\"]\nsns.barplot(x=\"housing\", y=\"month\", hue='default' ,data=dataset, palette='Set2', estimator=lambda x: len(x) \/ len(dataset) * 100,dodge=True)\nax[1].set_xlabel('(%) aluguel', fontsize=14)\nax[1].set(ylabel=\"(%) quantidade\")\nax[1].set_xticklabels(dataset[\"loan\"].unique(), rotation=0, rotation_mode=\"anchor\")\nplt.tight_layout()\nplt.show()","aee05190":"kmeans = KMeans(n_clusters=2, random_state=0)\nmodel = kmeans.fit(dataset)","ace7121b":"display(model.labels_)","7b9c58f0":"plt.figure(figsize=(12,6))\nplt.title('Distribui\u00e7\u00e3o r\u00f3tulos k means')\nplt.hist(model.labels_,color='#66b3ff')\nplt.show()","bdf74f5f":"print('Tamanho -> ',len(model.labels_))","3d5f55a2":"display(y_true.head())","efa603a5":"y_true.y = enc.fit_transform(y_true['y'])","4eebbb82":"y_true['y'].value_counts()","f75c2d86":"print('Score -> ',jaccard_similarity_score(y_true.y,model.labels_))","3fd74a49":"previsao = pd.DataFrame()\nprevisao[\"Predicted\"] = model.labels_\nprevisao.to_csv('prediction.csv',index=True,index_label=\"Id\")","87804150":"# \u2192 **Algumas infer\u00eancias sobre a base de dados** \ud83d\udd0e\n<div align=\"center\">\n    <h1> \ud83d\udce2 Toda campanha de *marketing* possui:<\/h1>\n1. **P\u00fablico alvo**: segmento da popula\u00e7\u00e3o ela est\u00e1 interessada;<br\/>\n2. **Meio de transmiss\u00e3o**: m\u00e9todo de abordagem ao consumidor;<br\/>\n3. **Estrat\u00e9gia**: contexto p\/ contato com cliente.<br\/>\n<\/div>","a08e01d8":"# \u2192 **Num primeiro momento, conseguimos visualizar muitos atributos categ\u00f3ricos** \ud83d\udd0e\ud83d\udc40\ne isto n\u00e3o \u00e9 interessante p\/ o nosso prop\u00f3sito.. ainda mais para algoritmos de agrupamento.","d3b023b7":"# \u2192 **Contando os valores** \ud83e\uddd0\n***\nse tem 0's e 1's est\u00e1 certo e dentro do padr\u00e3o esperado entre as duas bases \ud83d\ude01","6fdaeb46":"# \u2192 **Avaliando o agrupamento com [\u00edndice *Jaccard* ](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.jaccard_similarity_score.html)** \ud83d\udcc9","d415d2f0":"## \u2192 **Verificar corretude (tamanho) da sa\u00edda do *k means*** \ud83d\udccf","4600a263":" # \u2192 **Agrupamento por [*k means*](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html) **\ud83e\udd16","e3f91fb8":"# \u2192 **Aplicando `LabelEncoder()` na classe preditora** \ud83d\udcdd\n***\n*'yes'* e *'no'* n\u00e3o \u00e9 nem um pouco \u00fatil para n\u00f3s, at\u00e9 porque devemos seguir um padr\u00e3o.","10cc7b4b":"# \u2192 **Visualizando histograma para ver a rela\u00e7\u00e3o dos r\u00f3tulos** \ud83d\udcca","6572f9b9":"## \ud83d\udcb0 Dados pessoais (e banc\u00e1rios) do cliente:\n\n1 - age (numeric)\n\n2 - job : type of job (categorical: 'admin.','blue-collar','entrepreneur','housemaid','management','retired','self-employed','services','student','technician','unemployed','unknown')\n\n3 - marital : marital status (categorical: 'divorced','married','single','unknown'; note: 'divorced' means divorced or widowed)\n\n4 - education (categorical: 'basic.4y','basic.6y','basic.9y','high.school','illiterate','professional.course','university.degree','unknown')\n\n5 - default: has credit in default? (categorical: 'no','yes','unknown')\n\n6 - housing: has housing loan? (categorical: 'no','yes','unknown')\n\n7 - loan: has personal loan? (categorical: 'no','yes','unknown')\n\n## \ud83d\udcde \u00daltimo contato da campanha atual:\n\n8 - contact: contact communication type (categorical: 'cellular','telephone')\n\n9 - month: last contact month of year (categorical: 'jan', 'feb', 'mar', ..., 'nov', 'dec')\n\n10 - day_of_week: last contact day of the week (categorical: 'mon','tue','wed','thu','fri')\n\n11 - duration: last contact duration, in seconds (numeric).\nImportant note: this attribute highly affects the output target (e.g., if duration=0 then y='no'). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.\n\n\n## \ud83d\udcd1 Outros atributos:\n\n12 - campaign: number of contacts performed during this campaign and for this client (numeric, includes last contact)\n\n13 - pdays: number of days that passed by after the client was last contacted from a previous campaign (numeric; 999 means client was not previously contacted)\n\n14 - previous: number of contacts performed before this campaign and for this client (numeric)\n\n15 - poutcome: outcome of the previous marketing campaign (categorical: 'failure','nonexistent','success')\n\n\n## \ud83d\udcca Contexto socioecon\u00f4mico:\n\n16 - emp.var.rate: employment variation rate - quarterly indicator (numeric)\n\n17 - cons.price.idx: consumer price index - monthly indicator (numeric)\n\n18 - cons.conf.idx: consumer confidence index - monthly indicator (numeric)\n\n19 - euribor3m: euribor 3 month rate - daily indicator (numeric)\n\n20 - nr.employed: number of employees - quarterly indicator (numeric)\n","8087400b":"# \u2192 **Pr\u00e9-processamento** \ud83d\udcdd\n<ul>\n    <li>Todos atributos categ\u00f3ricos foram pr\u00e9-processados usando `LabelEncoder()`<\/li>\n    <li>Fora eliminados todos os atributos do contexto socioecon\u00f4mico por n\u00e3o servirem ao nosso prop\u00f3sito (pelo menos por hora)<\/li>\n<\/ul>","ac452057":"# \u2192 **Gerando tabela nos padr\u00f5es para submiss\u00e3o** \ud83d\udcbe","2b9e1c28":"# \u2192 **Verificar como ficou nossos dados ap\u00f3s pr\u00e9-processamento** \ud83d\udc40","6f7f5f08":"# \u2192 **Verificar o padr\u00e3o dos r\u00f3tulos que foram agrupados**","35172fb7":"# \u2192 **Importando os dados e bibliotecas necess\u00e1rias** \ud83d\udcc2","e5f7c712":"# \u2192 **Verificando base de treino**\n***\ndados de treino localizado em: `..\/input\/marketing-data-train\/train.csv`","b26a8032":" <p align=\"center\"><img width=\"500px\" heigh=\"400px\" src=\"https:\/\/3.bp.blogspot.com\/-Q36L5pl3l1s\/VydxpWEJMTI\/AAAAAAAABEk\/Xhd3_3vgTwMU2fi1PNWxNCi6444aq9uvwCPcBGAYYCw\/s1600\/ufv.gif\"><\/p>\n <p align=\"center\"><img src=\"https:\/\/i.ibb.co\/XpJypVY\/xurupitaslogo.png\"><\/p>\n\n***\n## \u2192 **Alunos** \ud83d\udc65: **[Igor Alves 3902](https:\/\/github.com\/iguit0) -- [Jo\u00e3o Marcos 4853](https:\/\/www.facebook.com\/joaomarcosaraujosantos) -- [Nalbert Wattam 4856](https:\/\/www.facebook.com\/wattamnalbert) -- [Sheila M. de Paula 4881](https:\/\/www.facebook.com\/sheilap04)**"}}