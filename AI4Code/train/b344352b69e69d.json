{"cell_type":{"f5ce37ac":"code","593a9cfb":"code","9bcffdfd":"code","829dc216":"code","b5054f6f":"code","80f25718":"code","5f271036":"code","05864b62":"code","7d9deff6":"code","138e45f5":"code","ad178541":"code","2cd60ec4":"code","013d69de":"code","323e1ea5":"code","38deb403":"code","9610ac26":"code","dd803b36":"code","7a50c571":"code","1308d469":"code","8e58c200":"code","ddfc1dbb":"code","18c59b85":"code","f6da53da":"markdown","4a802238":"markdown","22d7eb2a":"markdown","c770364c":"markdown","22dd74ae":"markdown","d3804fc4":"markdown","285e48e8":"markdown","ed2907c0":"markdown","351c95f7":"markdown","0caeba8b":"markdown"},"source":{"f5ce37ac":"import pandas as pd \nfrom sklearn.preprocessing import MinMaxScaler\nimport numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score","593a9cfb":"car_data=pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv')","9bcffdfd":"car_data.head()","829dc216":"car_data.info()","b5054f6f":"car_data['Transmission']=[ 0 if i=='Manual'  else 1  for i in car_data['Transmission']] #manuel 0 # auto 1 \ncar_data['Fuel_Type']=[ 0 if i=='Petrol'  else 1  for i in car_data['Fuel_Type']] #manuel 0 # auto 1 ","80f25718":"car_data.head()","5f271036":"x=car_data.loc[:,['Year','Selling_Price','Kms_Driven','Fuel_Type','Transmission']].values\ny=car_data['Present_Price'].values.reshape(-1,1)","05864b62":"# scaling \nscaler = MinMaxScaler(feature_range=(0, 1))\nx = scaler.fit_transform(x)","7d9deff6":"# Train Test Split \nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.10,random_state=42)","138e45f5":"# multiple linear regression\nmlr=LinearRegression()\nmlr.fit(x_train,y_train)","ad178541":"print('b0',mlr.intercept_)\nprint('b1,b2,b3,b4,b5',mlr.coef_)","2cd60ec4":"# prediction\ny_head=mlr.predict(x_test) ","013d69de":"# r square with linear regression\n\nfrom sklearn.metrics import r2_score\n\nprint('r2 score:',r2_score(y_test,y_head))","323e1ea5":"# k kold cross validation \nscores = cross_val_score(mlr, x_train, y_train, scoring='r2', cv=5)\nprint('avarage accuracy:',np.mean(scores))","38deb403":"from sklearn.ensemble import RandomForestRegressor\nrandom_forest_reg=RandomForestRegressor(n_estimators=100,random_state=42)\nrandom_forest_reg.fit(x_train,y_train)","9610ac26":"# Predict  \ny_head=random_forest_reg.predict(x_test)","dd803b36":"# r square\nfrom sklearn.metrics import r2_score\n\nprint('r2 score:',r2_score(y_test,y_head))","7a50c571":"random_forest_reg.predict([x[40]])","1308d469":"y[40]","8e58c200":"from sklearn.tree import DecisionTreeRegressor\ntree_reg=DecisionTreeRegressor(random_state=42) # random state\ntree_reg.fit(x_train,y_train)","ddfc1dbb":"# Prediction\ny_head=tree_reg.predict(x_test)","18c59b85":"# r square\nfrom sklearn.metrics import r2_score\n\nprint('r2 score:',r2_score(y_test,y_head))","f6da53da":"<a id='1'><\/a><br>\n# 1.Exploring Data","4a802238":"<a id='6'><\/a><br>\n# 6.Multiple Linear Regression 83% accuracy\ny=b0+b1*x1+b2*x2+b3*x3+b4*x4+b5*x5","22d7eb2a":"<a id='3'><\/a><br>\n# 3.Prepare Data","c770364c":"# for example we predict 40th car and we get near value of real value.","22dd74ae":"<a id='5'><\/a><br>\n# 5.Train-Test Split","d3804fc4":"<a id='4'><\/a><br>\n# 4.Normalization","285e48e8":"# Introduction\nThis dataset contains information about used cars listed on www.cardekho.com\nThis data can be used for a lot of purposes such as price prediction to exemplify the use of linear regression in Machine Learning.\n\nColumns=name,year,selling price,present price,fuel_type,transmission,owner,kms driven\n\n<font color = 'blue'>\nContent: \n\n1. [Exploring Data](#1)\n1. [Feature Engineering](#2)\n1. [Prepare Data](#3)\n1. [Normalization](#4)\n1. [Train-Test Split](#5)\n1. [Multiple Linear Regression](#6)\n1. [Random Forest Regression](#7)\n1. [Decision Tree Regression](#8)","ed2907c0":"<a id='7'><\/a><br>\n# 7.Random Forest Regression 95% ","351c95f7":"<a id='8'><\/a><br>\n# 8.Decision Tree Regression 91%","0caeba8b":"<a id='2'><\/a><br>\n# 2.Feature Engineering"}}