{"cell_type":{"7d3f77ce":"code","86238678":"code","3960e26a":"code","6e4659de":"code","b69a5dd5":"code","35a5b1ce":"code","e88a6a05":"markdown","3f7ccdea":"markdown","e7fc5fa2":"markdown","c244e636":"markdown","ba456095":"markdown"},"source":{"7d3f77ce":"# Read in the data\n\nimport numpy as np\nimport pandas as pd\n\ntrain = pd.read_csv(\"..\/input\/covid19-global-forecasting-challenge-week-1\/train.csv\")\ntest  = pd.read_csv(\"..\/input\/covid19-global-forecasting-challenge-week-1\/test.csv\")","86238678":"submission = test[[\"ForecastId\"]]\nsubmission.insert(1, \"ConfirmedCases\", 0)\nsubmission.insert(2, \"Fatalities\", 0)","3960e26a":"locations = list(set([(test.loc[i, \"Province\/State\"], test.loc[i, \"Country\/Region\"]) for i in test.index]))\nlocations","6e4659de":"public_leaderboard_start_date = \"2020-03-12\"\nlast_public_leaderboard_train_date = \"2020-03-11\"\npublic_leaderboard_end_date  = \"2020-03-26\"\n\nfor loc in locations:\n    if type(loc[0]) is float and np.isnan(loc[0]):\n        confirmed=train[((train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_public_leaderboard_train_date))][\"ConfirmedCases\"].values[0]\n        deaths=train[((train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_public_leaderboard_train_date))][\"Fatalities\"].values[0]\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]<=public_leaderboard_end_date)), \"ConfirmedCases\"] = confirmed\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]<=public_leaderboard_end_date)), \"Fatalities\"] = deaths\n    else:\n        confirmed=train[((train[\"Province\/State\"]==loc[0]) & (train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_public_leaderboard_train_date))][\"ConfirmedCases\"].values[0]\n        deaths=train[((train[\"Province\/State\"]==loc[0]) & (train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_public_leaderboard_train_date))][\"Fatalities\"].values[0]\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]<=public_leaderboard_end_date)), \"ConfirmedCases\"] = confirmed\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]<=public_leaderboard_end_date)), \"Fatalities\"] = deaths\n\nsubmission","b69a5dd5":"last_train_date = max(train[\"Date\"])\n\nfor loc in locations:\n    if type(loc[0]) is float and np.isnan(loc[0]):\n        confirmed=train[((train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_train_date))][\"ConfirmedCases\"].values[0]\n        deaths=train[((train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_train_date))][\"Fatalities\"].values[0]\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]>public_leaderboard_end_date)), \"ConfirmedCases\"] = confirmed\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]>public_leaderboard_end_date)), \"Fatalities\"] = deaths\n    else:\n        confirmed=train[((train[\"Province\/State\"]==loc[0]) & (train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_train_date))][\"ConfirmedCases\"].values[0]\n        deaths=train[((train[\"Province\/State\"]==loc[0]) & (train[\"Country\/Region\"]==loc[1]) & (train[\"Date\"]==last_train_date))][\"Fatalities\"].values[0]\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]>public_leaderboard_end_date)), \"ConfirmedCases\"] = confirmed\n        submission.loc[((test[\"Country\/Region\"]==loc[1]) & (test[\"Date\"]>public_leaderboard_end_date)), \"Fatalities\"] = deaths\n\nsubmission","35a5b1ce":"submission.to_csv(\"submission.csv\", index=False)","e88a6a05":"# Public Leaderboard Predictions\n\nWe should be only using data up until 2020-03-11 for the public leaderboard.","3f7ccdea":"# Pull List of Locations We're Predicting","e7fc5fa2":"# Setup Submission File","c244e636":"# Final Evaluation Prediction\n\nFor this, we'll use the most recent data point to predict forward into the future period (corresponding to after submissions close for this competition).","ba456095":"# Sample Submission: No New Cases Baseline\n\nThis is for the COVID-19 forecasting challenge, Global Week 1 edition.\n\nThis will walk through making a sample submission based on the dataset.\n\nIt makes the obviously flawed assumption that there's no subsequent spread of COVID-19 or cases\/fatalities reported based on it.\n\nIt will apply the most recent data point (prior to each of the public\/private evaluation windows), and propagate those forward through time."}}