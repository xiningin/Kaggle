{"cell_type":{"8dc949fc":"code","63f19b92":"code","c557a1e3":"code","591c3346":"code","64a7d695":"code","8a47a442":"code","33673e43":"code","e4f1ca4c":"code","7b39dd2d":"code","b1d6f921":"code","9be5bf32":"code","65548d12":"code","f408aa9a":"code","372f9f1f":"code","2a5c6b73":"code","d1e8cfd5":"code","ae6e26e4":"code","7970c3c3":"code","64713ace":"code","afae5be1":"code","f1460cf4":"code","33c68e1a":"code","76f3de86":"code","a9b1ca44":"code","cac81d60":"code","c0d4a585":"code","7bc80b43":"code","81f6dc30":"code","9808617a":"code","e57052ac":"code","bb64e846":"code","c7a9a095":"markdown","c6059610":"markdown","45f694ff":"markdown","bfd17fe7":"markdown","c3d3be5d":"markdown","673d8063":"markdown","51d3731d":"markdown","482fbb90":"markdown","9a42794e":"markdown","00d5563e":"markdown","fa75fab0":"markdown","7d533fce":"markdown","85bbd184":"markdown","add41d34":"markdown","e13963d1":"markdown","564fd25b":"markdown","0217b529":"markdown","76fe34ca":"markdown","dfe5a1b3":"markdown","7117d7b7":"markdown"},"source":{"8dc949fc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import QuantileTransformer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.feature_selection import mutual_info_regression\nfrom sklearn.pipeline import Pipeline\n\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nfrom imblearn.over_sampling import SMOTE\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","63f19b92":"pd.set_option('display.width', 150)\npd.set_option('display.max_columns', 12)\n\nplt.style.use(\"seaborn-whitegrid\")\n\nsns.set_theme(\n    color_codes=True, \n    style='darkgrid', \n    palette='deep', \n    font='sans-serif'\n)","c557a1e3":"water_data = pd.read_csv('..\/input\/water-potability\/water_potability.csv')","591c3346":"# Checking the first 5 rows of data\nwater_data.head()","64a7d695":"# Checking the last 5 rows of data\nwater_data.tail()","8a47a442":"# Getting the statistical measure info\nwater_data.describe()","33673e43":"# Getting the information about the dataset\nwater_data.info()","e4f1ca4c":"# Chechking the null data\nwater_data.isnull().sum()","7b39dd2d":"# Checking the shape of data\nwater_data.shape","b1d6f921":"# Create a new variable named meanPh to hold the value of mean in ph\nmeanPh = water_data['ph'].mean()\n\n# Fill the blank\/null data ph with value of meanPh\nwater_data['ph'] = water_data['ph'].fillna(meanPh)\n\n# Check the null value and print\nprint(f'Null Value : {water_data.ph.isnull().sum()}\\n')\n\n# Check the data ph\nwater_data['ph']","9be5bf32":"# Created a new variable named waterSulfate tohold the value\nwaterSulfate = (water_data.Sulfate.mean() - water_data.Sulfate.min())\n\n# Fill the blank\/null dataSulfate with the value of waterSulfate\nwater_data['Sulfate'] = water_data['Sulfate'].fillna(waterSulfate)\n\n# Check the null value and print\nprint(f'Null Value : {water_data.Sulfate.isnull().sum()}')\n\n# Check the data Sulfate\nwater_data['Sulfate']","65548d12":"# Created a new variable named waterTrihalomethanes to hold the value\nwaterTrihalomethanes = water_data.Trihalomethanes.mean()\n\n# Fill the blank\/null data Trihalomethanes with the value of waterTrihalomethanes\nwater_data['Trihalomethanes'] = water_data['Trihalomethanes'].fillna(waterTrihalomethanes)\n\n# Check the null value and print\nprint(f'Null Value : {water_data.Trihalomethanes.isnull().sum()}')\n\n# Check the data Sulfate\nwater_data['Trihalomethanes']","f408aa9a":"# Checking data and print\nprint(f'Isnull ? :\\n{water_data.isnull().sum()}\\n')\n\n# Checking data and print\nprint(f'Is all the data is True ? :\\n{water_data.any()}\\n')\n\n# Count the value and print\nprint(f'Potability :\\n{water_data.Potability.value_counts()}\\n')\n\n# Check the shape and print\nprint(f'Data Shape : {water_data.shape}')","372f9f1f":"# Getting the statistical measure info\nwater_data.describe()","2a5c6b73":"# Make a correlation data to knowing Value Strength and Direction of Linear Relationship\ncorr = water_data.corr()\ncorr","d1e8cfd5":"# Checking the structure of the data\nsample = water_data.sample(11, random_state=42).T\nsample","ae6e26e4":"# Constructing a heatmap to understand the correlation\nplt.figure(figsize=(12, 10))\n\nsns.heatmap(\n    corr, \n    cbar=True, \n    square=True, \n    fmt='.1f', \n    annot=True,\n    annot_kws={'size': 8},\n    cmap='YlGnBu'\n)\n\nplt.plot()","7970c3c3":"# Create Regression Plot\nsns.regplot(\n    x=water_data.Hardness, \n    y=water_data.Potability, \n    data=water_data\n)\n\nplt.show()","64713ace":"# Create a histogram plot\nwater_data.hist(figsize=(12,12))\nplt.show()","afae5be1":"# Coefficient of Potability\ncovPota = ((water_data['Potability'].std()\/water_data['Potability'].mean()) * 100)\nprint(f'Coefficient Of Variation Potability : {covPota}%')","f1460cf4":"# Getting the Mutual Information about the data\nX = water_data.copy()\ny = X.pop('Potability')\n\n# All discrete features should now have integer dtypes\ndiscreateFeatures = X.dtypes == int","33c68e1a":"# Make a function\ndef makeMiScores(X, y, discreateFeatures):\n    miScores = mutual_info_regression(X, y, discrete_features=discreateFeatures)\n    miScores = pd.Series(miScores, name='MI Scores', index=X.columns)\n    miScores = miScores.sort_values(ascending=False)\n    return miScores\n\nmiScores = makeMiScores(X, y, discreateFeatures)\nmiScores # show a features with their MI scores","76f3de86":"# And now bar plot to make comparisons easier\ndef plotMiScores(scores):\n    scores = scores.sort_values(ascending=True)\n    width = np.arange(len(scores))\n    ticks = list(scores.index)\n    plt.barh(width, scores)\n    plt.yticks(width, ticks)\n    plt.title(\"Mutual Information Scores\")\n\n# Figuring the plot and plotting\nplt.figure(dpi=100, figsize=(6, 3))\nplotMiScores(miScores)","a9b1ca44":"# Divide the data\nX = water_data.drop(['Potability'], axis=1)\ny = water_data['Potability']","cac81d60":"# Splitting Data\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=.3, random_state=42\n)","c0d4a585":"# Checking the Target\ny_train.value_counts()","7bc80b43":"# Checking the Target\ny_test.value_counts()","81f6dc30":"sm = SMOTE(random_state=42)\nX_train_res, Y_train_res = sm.fit_resample(X_train, y_train)","9808617a":"pipe = Pipeline([\n    ('scaler', StandardScaler()),\n    ('transformer', QuantileTransformer(\n        random_state=42)\n    ),\n    ('model', RandomForestClassifier(\n        n_estimators=620, \n        min_samples_leaf=1, \n        random_state=42))\n])\n\npipe.fit(X_train_res, Y_train_res)","e57052ac":"# Train Predict\npred_train = pipe.predict(X_train_res)\nprint(metrics.classification_report(Y_train_res, pred_train))","bb64e846":"# Test Predict\npred_test = pipe.predict(X_test)\nprint(metrics.classification_report(y_test, pred_test))","c7a9a095":"**Checking again**","c6059610":"**And last**, we deal with Trihalomethanes, what are Trihalomethanes ? **Trihalomethanes (THMs) are among the most dangerous chemical compounds** that find their way into the water supply. The concentration of THM in drinking water varies according to the level of organic matter in the water, the amount of chlorine required to treat the water, and the temperature of the treated water. **THM levels up to 80 ppm are considered safe** in drinking water. and if we see the statistical measure above, we can see the max value of thm is so high almost doubled value of thm, which that means is bad for consume.\n","45f694ff":"# **Load The Dataset**\n\nLoad the dataset that we want to research","bfd17fe7":"# **Train and Fit the model**\n\nTrain and fit the model using **RandomForestClassifier** Algorithm. and **Pipelines** are a simple way to keep your data preprocessing and modeling code organized. Specifically, a pipeline bundles preprocessing and modeling steps so you can use the whole bundle as if it were a single step.","c3d3be5d":"### **Setup Libraries**","673d8063":"Data visualization is a great follow-up to a utility ranking. as we can see the **Hardness, Conductivity, Organic, Turbidity, Solids, and ph have a mutual information** with Potability.","51d3731d":"You see that? that's terrible, there's no one data that have a good correlation with the Potability.","482fbb90":"**First**, we overcome the null values in the ph column first, and we know that the **ph values less than 6.5 and more than 8.5 are not suitable** for consumption, and the **range of pH that is within the WHO standard is 6.52 - 6.83** , and also we have obtained statistical info from the data above, that the **mean value at pH is 7** which is still within the scope of water that is safe for drinking by humans, so we will fill this empty ph value with the mean value of this ph to improve our model","9a42794e":"# **Workflow**\n\n1. Data Collection\n2. Data Cleaning & Checking\n3. EDA\n4. Splitting Data\n5. Oversampling model\n6. Modeling\n7. Prediction Score\n\n\nnote : Sorry if my english is bad, and sorry if i had a mistake. thanks in advance!","00d5563e":"# **Clean and Checking the Data**\n\nwe must check the data every time we want to make a model, because this is the important thing, if you suddenly meet a bad dataset, wether you want it or not, you must clean the data.","fa75fab0":"# **Splitting the Data**\n\ndivide the data and split it using train test split module from sklearn.","7d533fce":"# **Import Libraries**\n\nimport the module that we want to use for this research.","85bbd184":"**Coefficient of Variation**\n\nThe coefficient of variation is a measure of variance that can be used to compare a data distribution that has different units.\n\n* **The higher the Coefficient of Variation** = the wider the data you have compared to the average data (more difficult to predict)\n* **The Lower Coefficient of Variation** = The narrower the data you have compared to the Average data (Easier to predict)","add41d34":"# **Water Quality using Random Forest Classification - Knightbearr**","e13963d1":"# **EDA**\n\nanalyze and investigate data sets and summarize their main characteristics, often employing data visualization methods.","564fd25b":"> # **That's it! don't forget to give me feedback and upvote if you like it! thanks in advance!**","0217b529":"**Now**, we overcome the null value in sulfate, and we know that **Sulfate is one of the important ions in the availability of water** because of its important effect for humans when it is available in large quantities. **The maximum sulfate limit in water is about 250 mg\/L** for water for human consumption. if we see the statistics info above, **the mean of the Sulfate is 333mg\/L**, which mean, that's not good for consumption, and we know that, why the mean value is 333ml\/L? this happens because there are so many null values.","76fe34ca":"as you can see the output above, the coefficient of variation is so high, which mean, is so difficult to predict ","dfe5a1b3":"## **Here's my another notebook that i made:**\n\n**Data Analysist and Visualization:**\n\n- [World Covid Vaccination](https:\/\/www.kaggle.com\/knightbearr\/data-visualization-world-vaccination-knightbearr)\n- [Netflix Time Series Visualization](https:\/\/www.kaggle.com\/knightbearr\/netflix-visualization-time-series-knightbearr)\n- [Taiwan Weight Stock Analysist](https:\/\/www.kaggle.com\/knightbearr\/taiwan-weight-stock-index-analysis-knightbearr)\n\n**Regression and Classification:**\n\n- [S&P 500 Companies](https:\/\/www.kaggle.com\/knightbearr\/pricesales-eda-rfr-knightbearr)\n- [Credit Card Fraud Detection](https:\/\/www.kaggle.com\/knightbearr\/credit-card-fraud-detection-knightbearr)\n- [Car Price V3](https:\/\/www.kaggle.com\/knightbearr\/car-price-v3-xgbregressor-knightbearr)\n- [House Price Iran](https:\/\/www.kaggle.com\/knightbearr\/house-price-iran-knightbearr)\n\n**Deep Learning:**\n\n- [Rock Paper Scissors](https:\/\/www.kaggle.com\/knightbearr\/rock-paper-scissors-knightbearr)\n\n**Some Python Code:**\n\n- [Python Cheat Sheet](https:\/\/www.kaggle.com\/knightbearr\/python-cheat-sheet-knightbearr)\n- [22 Python Progam](https:\/\/www.kaggle.com\/knightbearr\/22-simple-python-program-knightbearr)","7117d7b7":"# **Upsampling the Target**\n\nupsampling the target using SMOTE, upsampling the target, because we can see the portability and not portability data is have a  huge difference."}}