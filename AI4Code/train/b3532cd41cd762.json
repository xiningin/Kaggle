{"cell_type":{"1ff97492":"code","84c9aed2":"code","5fd1d886":"code","1d74825a":"code","cf11f7f1":"code","7509532d":"code","6f793d0b":"code","d970771c":"code","c3853064":"code","c3fd425a":"code","220d4c9c":"code","cb9cfa87":"code","e346c217":"code","d54441d1":"code","283583bf":"code","38c3cc85":"code","99fce6ac":"code","35576aa2":"code","6d4116f1":"code","50e9b9be":"code","3bfd8d43":"code","5234f887":"code","8c9575da":"code","4e7c3a8a":"code","787987b0":"code","860f742a":"code","99d01d18":"code","719c082e":"code","47a75c1f":"code","3c1dd5e7":"markdown","6708dc05":"markdown","3943f1d0":"markdown","3c173bef":"markdown","01507f1c":"markdown","3dae6c38":"markdown","750008a0":"markdown","49a5c78e":"markdown","919d23cf":"markdown","3b25f619":"markdown","3a0f8b65":"markdown"},"source":{"1ff97492":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","84c9aed2":"df1=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf2=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf3=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\n","5fd1d886":"df1.head()","1d74825a":"df2.head()","cf11f7f1":"print(\"Train shape\",df1.shape)\nprint(\"Test shape\",df2.shape)","7509532d":"df1.info()","6f793d0b":"print(df1.nunique())\nprint(df2.nunique())","d970771c":"df1.columns","c3853064":"df1.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\ndf2.drop(['Name','Ticket'],axis=1,inplace=True)","c3fd425a":"print(df1.isnull().sum())\nprint((df1.isnull().sum()\/len(df1))*100)","220d4c9c":"df1.drop(['Cabin'],axis=1,inplace=True)\ndf2.drop(['Cabin'],axis=1,inplace=True)","cb9cfa87":"df1.isnull().sum()","e346c217":"df1['Age']=df1['Age'].fillna(method='ffill')\ndf1['Embarked']=df1['Embarked'].fillna(method='ffill')\ndf2['Age']=df1['Age'].fillna(method='ffill')\ndf2['Embarked']=df1['Embarked'].fillna(method='ffill')","d54441d1":"df2['Fare']=df1['Fare'].fillna(method='ffill')","283583bf":"print(df1.isnull().sum())\nprint(df2.isnull().sum())","38c3cc85":"df1.head()","99fce6ac":"df11=pd.get_dummies(data=df1,columns=['Sex','Embarked'],drop_first=True)\ndf12=pd.get_dummies(data=df2,columns=['Sex','Embarked'],drop_first=True)","35576aa2":"df11.head()","6d4116f1":"df12.head()","50e9b9be":"sns.scatterplot(df11['Age'],df11['Fare'],hue=df11['Pclass'])\nplt.show()","3bfd8d43":"sns.scatterplot(df11['Age'],df11['Pclass'],hue=df11['Survived'])\nplt.show()","5234f887":"plt.figure(figsize=(10,7))\nsns.heatmap(df11.corr(),annot=True)\nplt.show()","8c9575da":"from sklearn.linear_model import LogisticRegression","4e7c3a8a":"y=df11['Survived']\nX=df11.drop(['Survived'],axis=1)\n","787987b0":"cols=[]\nfor i in df11.columns:\n    cols.append(i)\ncols.pop(0)\ncols","860f742a":"X_test=df12[cols]\nX_test.head()","99d01d18":"from sklearn.ensemble import RandomForestClassifier","719c082e":"## Fit the model\nmodel=RF=RandomForestClassifier(max_depth=5,criterion='entropy',n_estimators=83)\nmodel.fit(X,y)","47a75c1f":"predictions=model.predict(X_test)\noutput = pd.DataFrame({'PassengerId': df12.PassengerId, 'Survived': predictions})\noutput.to_csv('first_submission.csv', index=False)\nprint(\"First model submission done\")","3c1dd5e7":"Looks like the people from the PClass=1 had the most survivors in terms of the percentage population.It looks like they were the most privileged passengers!!","6708dc05":"### Check shapes of train and test data ","3943f1d0":"The heatmap gives a great correlation web.Lets make some observations here-\n\n1) Fare and Pclass are highly correlated\n2)Sex and Survived are highly correlated","3c173bef":"For modelling purpose we can see that PassengerID,Name,Ticket(No.) does not add much value to our modelling part.Hence we shall discard it","01507f1c":"We can observe that Pclass=3 has the least fare among all.Means it might be passengers belonging to the lowest strata of the society.","3dae6c38":"### Hence we have made a label encoding done for the 2 columns","750008a0":"## Base Model","49a5c78e":"### Encoding","919d23cf":"## EDA Part","3b25f619":"Here we see that cabin has 77% null values.Hence we have to drop it.","3a0f8b65":"### Null value treatment"}}