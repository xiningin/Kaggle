{"cell_type":{"1bf5e3e7":"code","234315c6":"code","4c3c5a43":"code","ed5a89e2":"code","b7ae126d":"code","73e6a606":"code","60aade24":"code","41c5c196":"code","f96c3563":"code","e62dbf4d":"code","2c4818e2":"code","ec8150f1":"code","5ce8395d":"code","6233ae81":"code","950c2d4f":"code","8c51af90":"code","6b615fd6":"code","4cd0f4ea":"code","19156472":"code","f7bd1932":"code","0a3efbb9":"code","70b350c0":"code","67faef61":"code","c9896075":"code","0dd43b63":"markdown","77149a42":"markdown","f00008c8":"markdown","2c2d6dfe":"markdown","d4d82344":"markdown","6c9032c4":"markdown","ca82452f":"markdown","ea057fbd":"markdown","fb905e86":"markdown","75a976dc":"markdown","4be61b4a":"markdown","e273d14a":"markdown"},"source":{"1bf5e3e7":"import pandas as pd\nimport numpy as np","234315c6":"sample_submission = pd.read_csv('..\/input\/mts-ml-summer-school\/sample_submission.csv')\ninteractions = pd.read_csv('..\/input\/mts-ml-summer-school\/interactions.csv')\nitems = pd.read_csv('..\/input\/mts-ml-summer-school\/items.csv')\nusers = pd.read_csv('..\/input\/mts-ml-summer-school\/users.csv')","4c3c5a43":"duplicates = interactions.duplicated(subset=['user_id', 'item_id'], keep=False)\ninteractions_duplicates = interactions[duplicates].sort_values(by=['user_id', 'start_date'])\ninteractions = interactions[~duplicates]\n\ninteractions_duplicates = interactions_duplicates.groupby(['user_id', 'item_id']).agg({\n    'progress': 'max',\n    'rating': 'max',\n    'start_date': 'min'})\n\ninteractions = interactions.append(interactions_duplicates.reset_index(), ignore_index=True)","ed5a89e2":"interactions","b7ae126d":"diff = np.setdiff1d(users['user_id'], interactions['user_id'].unique())\nnum_users = len(users['user_id'])\nfor i, user_id in enumerate(users['user_id']):\n    if user_id in diff:\n        users = users.drop(i)","73e6a606":"diff = np.setdiff1d(interactions['user_id'].unique(), users['user_id'])\nunknowns = ['unknown' for _ in range(len(diff))]\nusers_with_interactions = pd.DataFrame(list(zip(diff, unknowns, unknowns)),\n                                       columns=users.columns)\nusers = users.append(users_with_interactions)","60aade24":"num_interactions = []\nfor user in users['user_id']:\n    num_interactions.append(len(interactions[interactions['user_id'] == user]))\nusers['num_its'] = num_interactions","41c5c196":"users","f96c3563":"items","e62dbf4d":"class Popular_Recommender():\n    def __init__(self, max_K=100, days=30, item_column='item_id', dt_column='date'):\n        self.max_K = max_K\n        self.days = days\n        self.item_column = item_column\n        self.dt_column = dt_column\n        self.recommendations = []\n        \n    def fit(self, df):\n        min_date = pd.to_datetime(df[self.dt_column]).max().normalize() - pd.DateOffset(days=self.days)\n        self.recommendations = df.loc[pd.to_datetime(df[self.dt_column]) > min_date, self.item_column].value_counts().head(self.max_K).index.values","2c4818e2":"pop_rec = Popular_Recommender(days=10, dt_column='start_date')\npop_rec.fit(interactions)\npopulars = list(pop_rec.recommendations[:10])","ec8150f1":"from implicit.nearest_neighbours import BM25Recommender\nimport scipy.sparse as sp","5ce8395d":"dropped_users = []\nn_interactions = 4\n\nfor user in sample_submission['Id']:\n    if user not in users['user_id'].unique():\n        dropped_users.append(user)\n    elif users[users['user_id'] == user]['num_its'].item() < n_interactions:\n        dropped_users.append(user)","6233ae81":"remained_users = users[users['user_id'].isin(np.setdiff1d(sample_submission['Id'], dropped_users))]","950c2d4f":"len(remained_users), len(dropped_users)","8c51af90":"def get_coo_matrix(interactions, \n                   users_mapping, \n                   items_mapping,\n                   user_col='user_id', \n                   item_col='item_id', \n                   weight_col=None):\n    if weight_col is None:\n        weights = np.ones(len(interactions), dtype=np.float32)\n    else:\n        weights = interactions[weight_col].astype(np.float32)\n\n    interaction_matrix = sp.coo_matrix((\n        weights, \n        (\n            interactions[user_col].map(users_mapping.get), \n            interactions[item_col].map(items_mapping.get)\n        )\n    ))\n    return interaction_matrix\n\ndef make_mapping(data):\n    return dict([(v, k) for k, v in enumerate(data)])","6b615fd6":"items_mapping = make_mapping(items['id'].unique())\nusers_mapping = make_mapping(interactions['user_id'].unique())\n\nitems_inv_mapping = dict({(v, k) for k, v in items_mapping.items()})","4cd0f4ea":"interactions_matrix = get_coo_matrix(interactions, \n                                     users_mapping=users_mapping, \n                                     items_mapping=items_mapping).tocsr()","19156472":"imp_model = BM25Recommender(K=10)\nimp_model.fit(interactions_matrix.T) ","f7bd1932":"top_n = 10\n\ntotal_preds = {}\nfor user in remained_users['user_id']:\n    preds = imp_model.recommend(users_mapping[user], interactions_matrix, \n                               N=top_n, filter_already_liked_items=True)\n    preds = [items_inv_mapping[pred[0]] for pred in preds]\n    \n    total_preds[user] = preds","0a3efbb9":"for user in dropped_users:\n    total_preds[user] = populars","70b350c0":"submission = pd.DataFrame({'Id': sample_submission['Id']})\nsubmission['Predicted'] = [total_preds[user] for user in submission['Id']]\nsubmission['Predicted'] = submission['Predicted'].apply(lambda x: ' '.join(map(str, x)))","67faef61":"submission","c9896075":"submission.to_csv('submission.csv', index=False)","0dd43b63":"\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f.","77149a42":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430. \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u0430\u0436\u0435 \u043d\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u0430.","f00008c8":"\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043d\u043e \u0440\u0435\u0448\u0438\u043b \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0444\u0440\u0435\u0439\u043c users.","2c2d6dfe":"# Popular Recommender + BM25Recommender ensemble","d4d82344":"\u041b\u0443\u0447\u0448\u0435\u0439 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 Popular Recommender (\u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435, \u0443 \u043c\u0435\u043d\u044f) \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u043b \u043f\u0440\u0438 days=10. \u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.","6c9032c4":"\u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435.","ca82452f":"\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0432 \u043c\u043e\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0435 \u0441\u0430\u043c\u043e\u043c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u043c). \u041f\u043e\u0441\u043b\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u043e\u0432 \u0441 \u0433\u043b\u0443\u0431\u043e\u043a\u0438\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u043b\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u043a\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u044b\u043b\u043e \u043f\u043b\u043e\u0445\u043e\u0439 \u0438\u0434\u0435\u0435\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0440\u0435\u0448\u0438\u043b \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043f\u0440\u043e\u0449\u0435. \u0412\u043c\u0435\u0441\u0442\u043e LightFM \u0441\u0442\u0430\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0441 BM25, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u0441\u0435\u0431\u044f \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u0435\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0439. \n\n\u0410\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 Popular Recommender (\u0434\u043b\u044f \u044e\u0437\u0435\u0440\u043e\u0432, \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0430\u043b\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438) \u0438 BM25recommender (\u0434\u043b\u044f \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f).\n\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043f\u043e\u043b\u0430\u0433\u0430\u044e, \u0442\u0430\u043a\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043d\u043e\u0439 (\u043f\u043e\u043a\u0430 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438, \u043f\u0440\u043e \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u0443\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0432 discussions). \n\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u043a\u0440\u0443\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u043e\u0439\u0442\u0438 \u0432 \u0442\u043e\u043f-50 \u0438 \u0432\u044b\u0448\u0435 \u0432 Public Leaderboard.","ea057fbd":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0430\u0431\u043c\u0438\u0442\u0430.","fb905e86":"\u041a\u043e\u0434, \u0432\u0437\u044f\u0442\u044b\u0439 \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u0430... \n\u0412 \u044d\u0442\u043e\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043d\u0435 \u0434\u0435\u043b\u044e \u043d\u0430 train\/test \u0438 \u0441\u043a\u0430\u0440\u043c\u043b\u0438\u0432\u0430\u044e \u0441\u0440\u0430\u0437\u0443 \u0432\u0435\u0441\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442.","75a976dc":"\u0412\u0435\u0441\u044c \u043a\u043e\u0434, \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0432\u0437\u044f\u0442 \u0438\u0437 \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d\u0430 \u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 - \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u044e\u0437\u0435\u0440\u043e\u0432.","4be61b4a":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432.","e273d14a":"\u042d\u0442\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c, \u043a\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u044e\u0437\u0435\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u0434\u0432\u0435 \u0433\u0440\u0443\u043f\u043f\u044b. \u0422\u0435\u043c, \u0443 \u043a\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0446\u0438\u0439 (\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043e \u043d\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438), \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f BM25Recommender. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0435.\n\n\u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f."}}