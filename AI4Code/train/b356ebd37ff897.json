{"cell_type":{"5409d812":"code","59d23a39":"code","35106190":"code","890b27ba":"code","a4abb3ac":"code","b4b6b391":"code","03bd25a6":"code","97c1c0dc":"markdown","99eb2d63":"markdown","9e6a621c":"markdown","f9b12ce2":"markdown","834d1057":"markdown"},"source":{"5409d812":"import PIL","59d23a39":"ASCII_CHARS = [\"@\", \"#\", \"S\", \"%\", \"?\", \"*\", \"+\", \";\", \":\", \",\", \".\"]","35106190":"def resize_image(image, new_width=100):\n    width, height = image.size\n    ratio = height\/width\n    new_height = int(new_width * ratio)\n    resized_image = image.resize((new_width, new_height))\n    return(resized_image)","890b27ba":"def grayify(image):\n    grayscale_image = image.convert(\"L\")\n    return(grayscale_image)","a4abb3ac":"def pixels_to_ascii(image):\n    pixels = image.getdata()\n    characters = \"\".join([ASCII_CHARS[pixel\/\/25] for pixel in pixels])\n    return(characters)  ","b4b6b391":"def main(path, new_width=100):\n    # attempt to open image from user-input\n    try:\n        image = PIL.Image.open(path)\n    except:\n        print(path, \" is not a valid pathname to an image.\")\n        return\n  \n    # convert image to ascii    \n    new_image_data = pixels_to_ascii(grayify(resize_image(image)))\n    \n    # format\n    pixel_count = len(new_image_data)  \n    ascii_image = \"\\n\".join([new_image_data[index:(index+new_width)] for index in range(0, pixel_count, new_width)])\n    \n    # print result\n    print(ascii_image)\n    \n    # save result to \"ascii_image.txt\"\n    with open(\"ascii_image.txt\", \"w\") as f:\n        f.write(ascii_image)","03bd25a6":"path = '..\/input\/pokemon-images-and-types\/images\/images\/blaziken.png'\nmain(path)","97c1c0dc":"# Converting images to ASCII artwork\nIn this notebook, I use the [Pillow Library](https:\/\/python-pillow.org\/) to convert normal images to ASCII artwork.","99eb2d63":"## Convert each pixel to grayscale","9e6a621c":"## Resize image according to a new width","f9b12ce2":"## ASCII characters used to build the output text","834d1057":"## Convert pixels to a string of ascii characters"}}