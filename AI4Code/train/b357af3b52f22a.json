{"cell_type":{"3f3aa4fb":"code","a1537ea3":"code","75c26f3e":"code","0c6a809c":"code","d6660b74":"code","ba014c0c":"code","0e5e2ac9":"code","0fe0f6bf":"code","0f868fc6":"code","e685037b":"code","030b1454":"code","1be797d2":"code","23c253f1":"code","9c7ef92f":"code","7648131e":"code","13680ed8":"code","2f8f204b":"code","bd59d18e":"code","5536b253":"code","bdd24a34":"code","2772d33b":"code","424de7e3":"code","8938b229":"code","4cee3f03":"code","fe2aa9de":"code","2ee6eb8d":"code","7e8e8fc3":"markdown","ce14bae2":"markdown","3111a21a":"markdown","34b6f2ae":"markdown","dbb18765":"markdown","23bfdd76":"markdown","0a55f5e6":"markdown","02ca1d98":"markdown","92aa985b":"markdown","a18161ed":"markdown","338cdb5b":"markdown","1ce20b6b":"markdown","8ec9ecd2":"markdown","45c580f8":"markdown","4331ae65":"markdown","d3708a34":"markdown","bb275be7":"markdown","d814a22d":"markdown","8f2f131e":"markdown","b0b69f51":"markdown","170eb8cb":"markdown","b78e59e7":"markdown","786cad0e":"markdown","1bb8235c":"markdown","e0542af8":"markdown","084ee9a7":"markdown"},"source":{"3f3aa4fb":"! pip install calmap","a1537ea3":"# storing and anaysis\nimport numpy as np\nimport pandas as pd\n\n# visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport seaborn as sns\n\nfrom plotnine import *\nimport calmap\n\nimport plotly.express as px\nimport folium\nimport plotly.graph_objs as go\nfrom fbprophet import Prophet\n\n# color pallettes\nrbg = ['#ff0000','#000000', '#00ff00']\nbg = ['#000000', '#00ff00']\ngrb = ['#393e46', '#ff2e63', '#30e3ca'] # grey - red - blue\nyrb = ['#f8b400', '#ff2e63', '#30e3ca'] # yellow - red - blue","75c26f3e":"novel_corona_cleaned_latest = pd.read_csv(\"..\/input\/corona-virus-dataset-2019-covid19-latest\/novel_corona_cleaned_latest.csv\")\ntime_series_confirmed = pd.read_csv(\"..\/input\/corona-virus-dataset-2019-covid19-latest\/time_series_confirmed.csv\")\ntime_series_deaths = pd.read_csv(\"..\/input\/corona-virus-dataset-2019-covid19-latest\/time_series_deaths.csv\")\ntime_series_recovered = pd.read_csv(\"..\/input\/corona-virus-dataset-2019-covid19-latest\/time_series_recovered.csv\")","0c6a809c":"# importing datasets\nfull_table = pd.read_csv('..\/input\/corona-virus-dataset-2019-covid19-latest\/novel_corona_cleaned_latest.csv', \n                         parse_dates=['Last Update'])\nfull_table.head()","d6660b74":"# checking for missing value\n# full_table.isna().sum()","ba014c0c":"# replacing Mainland china with just China\nfull_table['Country\/Region'] = full_table['Country\/Region'].replace('Mainland China', 'China')\n\n# filling missing values with NA\n# full_table[['Province\/State']] = full_table[['Province\/State']].fillna('NA')","0e5e2ac9":"dpc_ship = full_table[full_table['Province\/State']=='Diamond Princess cruise ship']\nfull_table = full_table[full_table['Province\/State']!='Diamond Princess cruise ship']\nchina = full_table[full_table['Country\/Region']=='China']\ngermany = full_table[full_table['Country\/Region']=='Germany']\negypt = full_table[full_table['Country\/Region']=='Egypt']\nother_countries = full_table[full_table['Country\/Region']!='China']\n\nfull_latest = full_table[full_table['Last Update'] == max(full_table['Last Update'])].reset_index()\nchina_latest = full_latest[full_latest['Country\/Region']=='China']\ngermany_latest = full_latest[full_latest['Country\/Region']=='Germany']\negypt_latest = full_latest[full_latest['Country\/Region']=='Egypt']\nother_countries_latest = full_latest[full_latest['Country\/Region']!='China']\n\nfull_latest_grouped = full_latest.groupby('Country\/Region')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\nchina_latest_grouped = china_latest.groupby('Province\/State')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ngermany_latest_grouped = germany_latest.groupby('Province\/State')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\negypt_latest_grouped = egypt_latest.groupby('Province\/State')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\nother_countries_latest_grouped = other_countries_latest.groupby('Country\/Region')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()","0fe0f6bf":"# All countries with sorted by Confirmed cases\ntemp_full_confirmed = full_latest_grouped[['Country\/Region', 'Confirmed']]\ntemp_full_confirmed = temp_full_confirmed.sort_values(by='Confirmed', ascending=False)\ntemp_full_confirmed = temp_full_confirmed.reset_index(drop=True)\ntemp_full_confirmed.style.background_gradient(cmap='Oranges')","0f868fc6":"# All countries with sorted by Deaths cases\ntemp_full_deaths = full_latest_grouped[['Country\/Region', 'Deaths']]\ntemp_full_deaths = temp_full_deaths.sort_values(by='Deaths', ascending=False)\ntemp_full_deaths = temp_full_deaths.reset_index(drop=True)\ntemp_full_deaths = temp_full_deaths[temp_full_deaths['Deaths']>0]\ntemp_full_deaths.style.background_gradient(cmap='Greys')","e685037b":"# All countries with sorted by Recovered cases\ntemp_full_recovered = full_latest_grouped[['Country\/Region','Recovered']]\ntemp_full_recovered = temp_full_recovered.sort_values(by='Recovered', ascending=False)\ntemp_full_recovered = temp_full_recovered.reset_index(drop=True)\ntemp_full_recovered = temp_full_recovered[temp_full_recovered['Recovered']>0]\ntemp_full_recovered.style.background_gradient(cmap='Greens')","030b1454":"# All countries with sorted by Confirmed cases outside china\ntemp_full_confirmed_outside_china = other_countries_latest_grouped[['Country\/Region', 'Confirmed']]\ntemp_full_confirmed_outside_china = temp_full_confirmed_outside_china.sort_values(by='Confirmed', ascending=False)\ntemp_full_confirmed_outside_china = temp_full_confirmed_outside_china.reset_index(drop=True)\ntemp_full_confirmed_outside_china.style.background_gradient(cmap='Oranges')","1be797d2":"# All countries with sorted by Deaths cases outside china\ntemp_full_deaths_outside_china = other_countries_latest_grouped[['Country\/Region', 'Deaths']]\ntemp_full_deaths_outside_china = temp_full_deaths_outside_china.sort_values(by='Deaths', ascending=False)\ntemp_full_deaths_outside_china = temp_full_deaths_outside_china.reset_index(drop=True)\ntemp_full_deaths_outside_china = temp_full_deaths_outside_china[temp_full_deaths_outside_china['Deaths']>0]\ntemp_full_deaths_outside_china.style.background_gradient(cmap='Greys')","23c253f1":"# All countries with sorted by Recovered cases outside china\ntemp_full_recovered_outside_china = other_countries_latest_grouped[['Country\/Region','Recovered']]\ntemp_full_recovered_outside_china = temp_full_recovered_outside_china.sort_values(by='Recovered', ascending=False)\ntemp_full_recovered_outside_china = temp_full_recovered_outside_china.reset_index(drop=True)\ntemp_full_recovered_outside_china.style.background_gradient(cmap='Greens')","9c7ef92f":"temp_all_recovered = full_latest_grouped[full_latest_grouped['Confirmed'] == full_latest_grouped['Recovered']]\ntemp_all_recovered = temp_all_recovered[['Country\/Region', 'Confirmed', 'Recovered']]\ntemp_all_recovered = temp_all_recovered.sort_values('Confirmed', ascending=False)\ntemp_all_recovered = temp_all_recovered.reset_index(drop=True)\ntemp_all_recovered.style.background_gradient(cmap='Greens')","7648131e":"temp_cleared = full_latest_grouped[full_latest_grouped['Confirmed']== full_latest_grouped['Deaths']+ full_latest_grouped['Recovered']]\ntemp_cleared = temp_cleared[['Country\/Region', 'Confirmed', 'Deaths', 'Recovered']]\ntemp_cleared = temp_cleared.sort_values('Confirmed', ascending=False)\ntemp_cleared = temp_cleared.reset_index(drop=True)\ntemp_cleared.style.background_gradient(cmap='Greens')","13680ed8":"temp_daily_all = full_table.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().diff()\ntemp_daily_all = temp_daily_all.reset_index()\ntemp_daily_all = temp_daily_all.melt(id_vars=\"Last Update\", value_vars=['Confirmed', 'Deaths', 'Recovered'])\n\nfig = px.bar(temp_daily_all, x=\"Last Update\", y=\"value\", color='variable', title='Daily Status - All Countries',\n             color_discrete_sequence=grb)\nfig.update_layout(barmode='group')\nfig.show()","2f8f204b":"temp_daily_outside_china = other_countries.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().diff()\ntemp_daily_outside_china = temp_daily_outside_china.reset_index()\ntemp_daily_outside_china = temp_daily_outside_china.melt(id_vars=\"Last Update\", value_vars=['Confirmed', 'Deaths', 'Recovered'])\n\nfig = px.bar(temp_daily_outside_china, x=\"Last Update\", y=\"value\", color='variable', title='Daily Status - outside China',\n             color_discrete_sequence=grb)\nfig.update_layout(barmode='group')\nfig.show()","bd59d18e":"temp_daily_germany = germany.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().diff()\ntemp_daily_germany = temp_daily_germany.reset_index()\ntemp_daily_germany = temp_daily_germany.melt(id_vars=\"Last Update\", value_vars=['Confirmed', 'Deaths', 'Recovered'])\n\nfig = px.bar(temp_daily_germany, x=\"Last Update\", y=\"value\", color='variable', title='Daily Status - Germany',\n             color_discrete_sequence=grb)\nfig.update_layout(barmode='group')\nfig.show()","5536b253":"temp_daily_egypt = egypt.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().diff()\ntemp_daily_egypt = temp_daily_egypt.reset_index()\ntemp_daily_egypt = temp_daily_egypt.melt(id_vars=\"Last Update\", value_vars=['Confirmed', 'Deaths', 'Recovered'])\n\nfig = px.bar(temp_daily_egypt, x=\"Last Update\", y=\"value\", color='variable', title='Daily Status - Egypt',\n             color_discrete_sequence=grb)\nfig.update_layout(barmode='group')\nfig.show()","bdd24a34":"temp_confirmed_by_time_all = full_table.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ntemp_confirmed_by_time_all.head()\ntemp_confirmed_by_time_all = temp_confirmed_by_time_all.melt(id_vars='Last Update', \n                                                                        value_vars=['Confirmed', 'Deaths', 'Recovered'],\n                                                             var_name='Confirmed', value_name='Value')\nfig = px.line(temp_confirmed_by_time_all, x=\"Last Update\", y=\"Value\", color='Confirmed', \n              title='Status by time - All Countries',color_discrete_sequence=rbg)\nfig.show()","2772d33b":"temp_confirmed_by_time_germany = germany.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ntemp_confirmed_by_time_germany.head()\ntemp_confirmed_by_time_germany = temp_confirmed_by_time_germany.melt(id_vars='Last Update', \n                                                                        value_vars=['Confirmed', 'Deaths', 'Recovered'],\n                                                             var_name='Confirmed', value_name='Value')\nfig = px.line(temp_confirmed_by_time_germany, x=\"Last Update\", y=\"Value\", color='Confirmed', \n              title='Status by time - Germany',color_discrete_sequence=rbg)\nfig.show()","424de7e3":"temp_confirmed_by_time_egypt = egypt.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ntemp_confirmed_by_time_egypt.head()\ntemp_confirmed_by_time_egypt = temp_confirmed_by_time_egypt.melt(id_vars='Last Update', \n                                                                        value_vars=['Confirmed', 'Deaths', 'Recovered'],\n                                                             var_name='Confirmed', value_name='Value')\nfig = px.line(temp_confirmed_by_time_egypt, x=\"Last Update\", y=\"Value\", color='Confirmed', \n              title='Status by time - Egypt',color_discrete_sequence=rbg)\nfig.show()","8938b229":"temp_infection_recovery_by_time_all = full_table.groupby('Last Update').sum().reset_index()\ntemp_infection_recovery_by_time_all.head()\n\n# adding two more columns\ntemp_infection_recovery_by_time_all['No. of Deaths to 100 Confirmed Cases'] = round(temp_infection_recovery_by_time_all['Deaths'] \/ temp_infection_recovery_by_time_all['Confirmed'], 3) * 100\ntemp_infection_recovery_by_time_all['No. of Recovered to 100 Confirmed Cases'] = round(temp_infection_recovery_by_time_all['Recovered'] \/ temp_infection_recovery_by_time_all['Confirmed'], 3) * 100\n\ntemp_infection_recovery_by_time_all = temp_infection_recovery_by_time_all.melt(id_vars='Last Update', value_vars=['No. of Deaths to 100 Confirmed Cases', \n                                                                                   'No. of Recovered to 100 Confirmed Cases'], \n                                                                                   var_name='Ratio', value_name='Value')\n\nfig = px.line(temp_infection_recovery_by_time_all, x=\"Last Update\", y=\"Value\", color='Ratio', \n              title='Death, Recovery Rate Over Time - All countries',color_discrete_sequence=bg)\nfig.show()","4cee3f03":"temp_infection_recovery_by_time_outside_china = other_countries.groupby('Last Update').sum().reset_index()\ntemp_infection_recovery_by_time_outside_china.head()\n\n# adding two more columns\ntemp_infection_recovery_by_time_outside_china['No. of Deaths to 100 Confirmed Cases'] = round(temp_infection_recovery_by_time_outside_china['Deaths'] \/ temp_infection_recovery_by_time_outside_china['Confirmed'], 3) * 100\ntemp_infection_recovery_by_time_outside_china['No. of Recovered to 100 Confirmed Cases'] = round(temp_infection_recovery_by_time_outside_china['Recovered'] \/ temp_infection_recovery_by_time_outside_china['Confirmed'], 3) * 100\n\ntemp_infection_recovery_by_time_outside_china = temp_infection_recovery_by_time_outside_china.melt(id_vars='Last Update', value_vars=['No. of Deaths to 100 Confirmed Cases', \n                                                                                   'No. of Recovered to 100 Confirmed Cases'], \n                                                                                   var_name='Ratio', value_name='Value')\n\nfig = px.line(temp_infection_recovery_by_time_outside_china, x=\"Last Update\", y=\"Value\", color='Ratio', \n              title='Death, Recovery Rate Over Time - Outside China',color_discrete_sequence=bg)\nfig.show()","fe2aa9de":"#Runing fbprophet algorythm on confirmed cases all countries. Forecasting 15 days - All Countries.\n#full_table_nc =  full_table.copy()\nall_df = full_table.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\nall_df = all_df[all_df['Last Update'] > '2020-01-22']\n\ndf_prophet = all_df.loc[:,[\"Last Update\", 'Confirmed']]\ndf_prophet.columns = ['ds','y']\nm_d = Prophet(\n    yearly_seasonality=False,\n    weekly_seasonality = False,\n    daily_seasonality = False,\n    seasonality_mode = 'additive')\nm_d.fit(df_prophet)\nfuture_d = m_d.make_future_dataframe(periods=15)\nfcst_daily = m_d.predict(future_d)\nfcst_daily[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\n\n# Plotting the predictions\nfig_prpht = go.Figure()\ntrace1 = {\n  \"fill\": None, \n  \"mode\": \"markers\",\n  \"marker_size\": 10,\n  \"name\": \"Confirmed\", \n  \"type\": \"scatter\", \n  \"x\": df_prophet.ds, \n  \"y\": df_prophet.y\n}\ntrace2 = {\n  \"fill\": \"tonexty\", \n  \"line\": {\"color\": \"red\"}, \n  \"mode\": \"lines\", \n  \"name\": \"upper_band\", \n  \"type\": \"scatter\", \n  \"x\": fcst_daily.ds, \n  \"y\": fcst_daily.yhat_upper\n}\ntrace3 = {\n  \"fill\": \"tonexty\", \n  \"line\": {\"color\": \"lightgreen\"}, \n  \"mode\": \"lines\", \n  \"name\": \"lower_band\", \n  \"type\": \"scatter\", \n  \"x\": fcst_daily.ds, \n  \"y\": fcst_daily.yhat_lower\n}\ntrace4 = {\n  \"line\": {\"color\": \"blue\"}, \n  \"mode\": \"lines+markers\",\n  \"marker_size\": 5,\n  \"name\": \"prediction\", \n  \"type\": \"scatter\", \n  \"x\": fcst_daily.ds, \n  \"y\": fcst_daily.yhat\n}\ndata = [trace1, trace2, trace3, trace4]\nlayout = {\n  \"title\": \"Confirmed Cases Time Series\", \n  \"xaxis\": {\n    \"title\": \"Date\", \n    \"ticklen\": 5, \n    \"gridcolor\": \"rgb(255, 255, 255)\", \n    \"gridwidth\": 2, \n    \"zerolinewidth\": 1\n  }, \n  \"yaxis\": {\n    \"title\": \"Confirmed Cases\", \n    \"ticklen\": 5, \n    \"gridcolor\": \"rgb(255, 255, 255)\", \n    \"gridwidth\": 2, \n    \"zerolinewidth\": 1\n  }, \n}\nfig_prpht = go.Figure(data=data, layout=layout)\nfig_prpht.update_layout(template=\"ggplot2\",title_text = '<b>Propagation Forecast - All Countries<\/b>',\n                  font=dict(family=\"Arial, Balto, Courier New, Droid Sans\",color='black'), showlegend=True)\nfig_prpht.update_layout(\n    legend=dict(\n        x=0.01,\n        y=.99,\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"Black\"\n        ),\n        bgcolor=\"LightSteelBlue\",\n        bordercolor=\"Orange\",\n        borderwidth=2\n    ))\nfig_prpht.show()","2ee6eb8d":"#Runing fbprophet algorythm on confirmed cases Germany. Forecasting 15 days - Germany.\n#full_table_nc =  full_table.copy()\ngermany_df = germany.groupby('Last Update')['Confirmed', 'Deaths', 'Recovered'].sum().reset_index()\ngermany_df = germany_df[germany_df['Last Update'] > '2020-01-22']\n\ngermany_df_prophet = germany_df.loc[:,[\"Last Update\", 'Confirmed']]\ngermany_df_prophet.columns = ['ds','y']\ngermany_m_d = Prophet(\n    yearly_seasonality=False,\n    weekly_seasonality = False,\n    daily_seasonality = False,\n    seasonality_mode = 'additive')\ngermany_m_d.fit(germany_df_prophet)\ngermany_future_d = germany_m_d.make_future_dataframe(periods=15)\ngermany_fcst_daily = germany_m_d.predict(germany_future_d)\ngermany_fcst_daily[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\n\n# Plotting the predictions\ngermany_fig_prpht = go.Figure()\ntrace1 = {\n  \"fill\": None, \n  \"mode\": \"markers\",\n  \"marker_size\": 10,\n  \"name\": \"Confirmed\", \n  \"type\": \"scatter\", \n  \"x\": germany_df_prophet.ds, \n  \"y\": germany_df_prophet.y\n}\ntrace2 = {\n  \"fill\": \"tonexty\", \n  \"line\": {\"color\": \"red\"}, \n  \"mode\": \"lines\", \n  \"name\": \"upper_band\", \n  \"type\": \"scatter\", \n  \"x\": germany_fcst_daily.ds, \n  \"y\": germany_fcst_daily.yhat_upper\n}\ntrace3 = {\n  \"fill\": \"tonexty\", \n  \"line\": {\"color\": \"lightgreen\"}, \n  \"mode\": \"lines\", \n  \"name\": \"lower_band\", \n  \"type\": \"scatter\", \n  \"x\": germany_fcst_daily.ds, \n  \"y\": germany_fcst_daily.yhat_lower\n}\ntrace4 = {\n  \"line\": {\"color\": \"blue\"}, \n  \"mode\": \"lines+markers\",\n  \"marker_size\": 5,\n  \"name\": \"prediction\", \n  \"type\": \"scatter\", \n  \"x\": germany_fcst_daily.ds, \n  \"y\": germany_fcst_daily.yhat\n}\ngermany_data = [trace1, trace2, trace3, trace4]\ngermany_layout = {\n  \"title\": \"Confirmed Cases Time Series\", \n  \"xaxis\": {\n    \"title\": \"Date\", \n    \"ticklen\": 5, \n    \"gridcolor\": \"rgb(255, 255, 255)\", \n    \"gridwidth\": 2, \n    \"zerolinewidth\": 1\n  }, \n  \"yaxis\": {\n    \"title\": \"Confirmed Cases\", \n    \"ticklen\": 5, \n    \"gridcolor\": \"rgb(255, 255, 255)\", \n    \"gridwidth\": 2, \n    \"zerolinewidth\": 1\n  }, \n}\ngermany_fig_prpht = go.Figure(data=germany_data, layout=germany_layout)\ngermany_fig_prpht.update_layout(template=\"ggplot2\",title_text = '<b>Propagation Forecast - Germany<\/b>',\n                  font=dict(family=\"Arial, Balto, Courier New, Droid Sans\",color='black'), showlegend=True)\ngermany_fig_prpht.update_layout(\n    legend=dict(\n        x=0.01,\n        y=.99,\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"Black\"\n        ),\n        bgcolor=\"LightSteelBlue\",\n        bordercolor=\"Orange\",\n        borderwidth=2\n    ))\ngermany_fig_prpht.show()","7e8e8fc3":"## Propagation Forecast next 15 days - Egypt","ce14bae2":"### Status by time - All Countries","3111a21a":"### Recovered cases outside china","34b6f2ae":"## Grouping and Classification","dbb18765":"## Cleaning Data","23bfdd76":"# Loading Dataset","0a55f5e6":"## KPI's","02ca1d98":"# Preprocessing","92aa985b":"### Daily Status - Germany","a18161ed":"### Death cases all countries","338cdb5b":"### Daily Status - Egypt","1ce20b6b":"## Propagation Forecast next 15 days - All Countries","8ec9ecd2":"### Status by time - Germany","45c580f8":"### Countries with all cases recovered","4331ae65":"## Propagation Forecast next 15 days - Germany","d3708a34":"### Death cases outside China","bb275be7":"## Death, Recovery Rate Over Time - Outside China","d814a22d":"### Daily Status - outside China","8f2f131e":"### Confirmed cases all countries","b0b69f51":"### Daily Status - All Countries","170eb8cb":"# Frocast","b78e59e7":"### Recovered cases all countries","786cad0e":"### Confirmed cases outside China","1bb8235c":"### Countries has no more cases","e0542af8":"### Status by time - Egypt","084ee9a7":"## Death, Recovery Rate Over Time - All countries"}}