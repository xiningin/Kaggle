{"cell_type":{"0be79eb3":"code","42abe6ba":"code","27e3c28d":"code","dae00015":"code","d2e24708":"code","24a49db9":"markdown","c74952cb":"markdown"},"source":{"0be79eb3":"import numpy as np\nfrom scipy.stats import beta\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nimport pandas as pd","42abe6ba":"group_size = 1000\n\nA_group, B_group = np.random.rand(2,group_size)\n\n# Success rate of A, B is 15%, 20% resp.(this is assumed here for the simulation. In practice, this will be found by AB Test)\nA_success, B_success = sum(A_group < .15), sum(A_group < .2) \nA_fails, B_fails = group_size - A_success, group_size - B_success\n\n# A_post = prior + A_data & B_post = prior + B_data\n\nA_posterior, B_posterior = beta(A_success + 8, A_fails + 42), beta(B_success + 8, B_fails + 42)\n","27e3c28d":"a, b = A_success + 8, A_fails + 42\nc, d = B_success + 8, B_fails + 42\n\nx = np.linspace(0,\n                1, group_size)\ny = np.linspace(0,\n                1, group_size)\nplt.figure(figsize=(25,10))\nplt.plot(y, B_posterior.pdf(y), label='B-variant')\nplt.plot(x, A_posterior.pdf(x), label='A-variant')\n\n\nplt.legend()","dae00015":"n_trials = 100_000\n\nA_sample = pd.Series([A_posterior.rvs() for _ in range(n_trials)]) # draw 100K samples from A\nB_sample = pd.Series([B_posterior.rvs() \\\n                      for _ in range(n_trials)])\n\n\nB_wins = sum(B_sample > A_sample) # No. of times B outperforms A\n\nB_wins \/ n_trials # Percentage of B_wins","d2e24708":"B_relative = B_sample \/ A_sample\nB_relative.hist()","24a49db9":"Thanks to an awesome video, https:\/\/www.youtube.com\/watch?v=nRLI_KbvZTQ, which is the source of the nb.","c74952cb":"SO B_wins \/ n_trials% B_wins. That means, very often B outperforms A."}}