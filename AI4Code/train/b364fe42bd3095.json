{"cell_type":{"67807e1a":"code","6f155302":"code","8d5148b9":"code","e1d97c43":"code","d0553a47":"code","64f12ea7":"code","3e900d94":"code","3ba8595d":"code","9e53cc8a":"code","3d08e5a7":"code","73fa85d5":"code","8e17037e":"code","efa17637":"code","c589d237":"code","9fbc5ac3":"code","bde0b4f6":"code","ddec030e":"markdown","9ed5070f":"markdown","be115bb6":"markdown","4794662a":"markdown","eb76f9e3":"markdown","20ba8870":"markdown","fcb62686":"markdown","e5dd5f1a":"markdown","aaa21eea":"markdown"},"source":{"67807e1a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams, pyplot as plt, style as style\nfrom scipy.optimize import curve_fit","6f155302":"path=\"..\/input\/covid19-global-forecasting-week-1\/train.csv\"\ntrain=pd.read_csv(path)","8d5148b9":"pd.set_option('display.max_rows',50)\npd.set_option('display.max_columns',None)\npd.set_option('display.width',None)\npd.set_option('display.max_colwidth',-1)","e1d97c43":" train.rename(columns={\"ConfirmedCases\":\"Confirm\",\"Fatalities\":\"Deaths\"},inplace=True)\n    ","d0553a47":"train.columns","64f12ea7":"country = train.fillna('N\/A').groupby(['Country\/Region'])['Confirm', 'Deaths'].sum().sort_values(by='Confirm', ascending=False)","3e900d94":"country['Country']=country.index","3ba8595d":"country['Active']=country['Confirm']-country['Deaths']\n","9e53cc8a":"country.head()","3d08e5a7":"top_10=country.index[:10]\ncountry_top=country[country['Country'].isin(top_10)]\ncountry_top.head()","73fa85d5":"country_melted = pd.melt(country_top, id_vars=['Country'] , value_vars=['Confirm','Deaths','Active'])","8e17037e":"country_melted","efa17637":"style.use('ggplot')\nrcParams['figure.figsize'] = 15,10\nax = sns.barplot(x = 'Country', hue=\"variable\", y=\"value\", data=country_melted)","c589d237":"date_wise=train.groupby([\"Date\"],as_index=False)[\"Confirm\",\"Deaths\"].max()\n\nno_days=len(np.array(date_wise['Date'].unique()))\ndays=np.arange(1,no_days+1)\n#d=sns.barplot(x='Date',y='Confirm',data=date_wise)\n\nconfirmed=np.array(date_wise['Confirm'])#converting the total deaths to an numpy array\ndeaths=np.array(date_wise['Deaths'])\nconfirmed.reshape(1,no_days)\ndeaths.reshape(1,no_days)\ndate_wise=train.groupby([\"Date\"],as_index=False)[\"Confirm\",\"Deaths\"].max()\n\nno_days=len(np.array(date_wise['Date'].unique()))\ndays=np.arange(1,no_days+1)\n#d=sns.barplot(x='Date',y='Confirm',data=date_wise)\n#print(days)\nconfirmed=np.array(date_wise['Confirm'])\ndeaths=np.array(date_wise['Deaths'])\nconfirmed.reshape(1,no_days)\ndeaths.reshape(1,no_days)","9fbc5ac3":"import numpy as np\nimport pylab\nfrom scipy.optimize import curve_fit\n\n\nydata = confirmed#np.array([400, 600, 800, 1000, 1200, 1400, 1600])\nxdata = days#np.array([0, 0, 0.13, 0.35, 0.75, 0.89, 0.91])\n\ndef sigmoid(x, L ,x0, k, b):\n    y = L \/ (1 + np.exp(-k*(x-x0)))+b\n    return (y)\n\np0 = [max(ydata), np.median(xdata),1,min(ydata)] # this is an mandatory initial guess\n\npopt, pcov = curve_fit(sigmoid, xdata, ydata,p0, method='dogbox')\n'''def sigmoid(x, L ,x0, k, b):\n    y = L \/ (1 + np.exp(-k*(x-x0)))+b\n    return (y)\n\np0 = [max(ydata), np.median(xdata),1,min(ydata)] # this is an mandatory initial guess\n\npopt, pcov = curve_fit(sigmoid, xdata, ydata,p0, method='dogbox')\n\n\npopt, pcov = curve_fit(fsigmoid, xdata, ydata, method='dogbox', bounds=([0., 600.],[0.01, 1200.]))'''\nplt.plot(xdata,ydata,'o')\n\nplt.plot(xdata,sigmoid(xdata,*popt))\n","bde0b4f6":"print(popt)","ddec030e":"### BAR GRAPH OF 10 COUNTRIES WITH MOST CONFIRMED CASES","9ed5070f":"### RENAMING COLUMNS","be115bb6":"### FITTING THE DATA TO SIGMOID CURVE","4794662a":"#### TOTAL ACTIVE CASES= CONFIRMED CASES-DEATHS","eb76f9e3":"# Importing basic libraries","20ba8870":"#### The growth of confirmed cases with increasing no of days.\nI plotted the curve for total number of confirmed cases per increasing days","fcb62686":"THE EQUATION THAT FITS THE CURVE IS:  $$Y=\\frac{6.81100908e+04}{(1+e^{(-2.31999685e-01(x-1.96462423e+01)-3.08015353e+02)})}$$","e5dd5f1a":"# DATE WISE GROUPING OF DATA","aaa21eea":"# COUNTRY WISE GROUPING"}}