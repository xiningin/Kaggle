{"cell_type":{"9e55fd86":"code","ff644b0a":"code","fbbd7a00":"code","0ad82615":"code","be6385d2":"code","4707ba70":"code","4bb98210":"code","e4459608":"code","b25e54dc":"code","561cd914":"code","8cd331a1":"code","d7ade47d":"code","83350197":"code","ecb78bb0":"code","3311601e":"code","5e6e5d01":"code","cbecc9ee":"code","2f7468a7":"code","b0aa04d0":"code","5174bbbf":"code","c5906993":"code","45fe918a":"code","775e98f3":"code","b009ba36":"code","9251a696":"code","3fba3b8c":"markdown","9470f5a3":"markdown","ab595941":"markdown","2c05d9ba":"markdown","2d2df148":"markdown","0bf86960":"markdown","0d010c1a":"markdown"},"source":{"9e55fd86":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff644b0a":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.metrics import roc_auc_score,roc_curve,auc\nfrom sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.impute import KNNImputer\n\nfrom sklearn.preprocessing import PowerTransformer","fbbd7a00":"train = pd.read_csv('\/kaggle\/input\/song-popularity-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/song-popularity-prediction\/test.csv')\ntest2 = test.copy()","0ad82615":"ignore_cols = ['id', 'song_popularity']\ncat_cols = ['key','audio_mode','time_signature']\nnum_cols = [i for i in train.columns.tolist() if i not in ignore_cols+cat_cols]","be6385d2":"imp_cat = IterativeImputer(estimator=RandomForestClassifier(), \n                            initial_strategy='most_frequent',\n                            max_iter=10, random_state=0)\n","4707ba70":"train[cat_cols] = imp_cat.fit_transform(train[cat_cols])","4bb98210":"train[cat_cols] = train[cat_cols].astype(int)","e4459608":"num_imputer  = KNNImputer(n_neighbors=5)","b25e54dc":"train[num_cols] = num_imputer.fit_transform(train[num_cols])","561cd914":"train.isnull().sum()","8cd331a1":"X = train[num_cols+cat_cols]\ny = train['song_popularity']","d7ade47d":"X = pd.get_dummies(X, columns = ['key'], prefix = 'key_')\nX = pd.get_dummies(X, columns = ['audio_mode'], prefix = 'audio_')\nX = pd.get_dummies(X, columns = ['time_signature'], prefix = 'time_signature_')","83350197":"pt = PowerTransformer(method = 'yeo-johnson')","ecb78bb0":"X[num_cols] = pt.fit_transform(X[num_cols])","3311601e":"X.head()","5e6e5d01":"X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    stratify=y, \n                                                test_size=0.2, random_state =42)","cbecc9ee":"from sklearn.linear_model import LogisticRegression","2f7468a7":"lr = LogisticRegression()","b0aa04d0":"lr.fit(X_train, y_train)","5174bbbf":"preds = lr.predict_proba(X_test)[:,1]\nfpr, tpr, _ = roc_curve(y_test, preds)\nscore = auc(fpr, tpr)","c5906993":"score","45fe918a":"submission = test.copy()","775e98f3":"submission.drop(labels = 'id', axis=1,inplace = True)","b009ba36":"submission[cat_cols] = imp_cat.fit_transform(submission[cat_cols])\nsubmission[cat_cols] = submission[cat_cols].astype(int)\nsubmission[num_cols] = num_imputer.fit_transform(submission[num_cols])\n\nsubmission = pd.get_dummies(submission, columns = ['key'], prefix = 'key_')\nsubmission = pd.get_dummies(submission, columns = ['audio_mode'], prefix = 'audio_')\nsubmission = pd.get_dummies(submission, columns = ['time_signature'], prefix = 'time_signature_')\nsubmission[num_cols] = pt.fit_transform(submission[num_cols])","9251a696":"finalsub = test[['id']]\npredict_final = lr.predict_proba(submission)\nfinalsub['song_popularity'] = predict_final[:,1]\nfinalsub.to_csv('submission.csv', index = False)","3fba3b8c":"Encoding Categorical Values","9470f5a3":"Creating X and y Datasets","ab595941":"Null Value Check","2c05d9ba":"Tranformation (Since Numerical Columns are skewed)","2d2df148":"Imputing Categorical Values","0bf86960":"Data Split","0d010c1a":"Imputing Numerical Values"}}