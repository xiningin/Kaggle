{"cell_type":{"b573c436":"code","71dfdc16":"code","f57d0433":"code","371d2554":"code","91529dab":"code","d80446a0":"code","9a01bc8a":"code","11e418e4":"code","13b19118":"code","c5859385":"code","7373ac99":"code","213e346c":"code","c20957a2":"markdown","3176d50d":"markdown","67a15d8d":"markdown","a10e5050":"markdown","ade0e149":"markdown","f1855bf9":"markdown","8c92f805":"markdown"},"source":{"b573c436":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize \nimport itertools  ","71dfdc16":"data=pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","f57d0433":"data.head()","371d2554":"description=np.load('..\/input\/book-description\/description.npy')","91529dab":"data['Description']=description","d80446a0":"data.head()","9a01bc8a":"plt.figure(figsize=(16,6))\nsns.countplot(data['Author'],order=data.Author.value_counts().iloc[:10].index)\nplt.xticks(rotation=90)\nplt.show()","11e418e4":"text = data.Description[0]\n\nwordcloud = WordCloud().generate(text)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","13b19118":"stopset = set(stopwords.words('english'))\n# Function to remove the puctuation marks from my string\npunctuations = '''!()-[]{};:'\"\\,<>.\/?@#$%^&*_~1234567890'''\ndef remove_punctuation(my_str):\n    no_punct = \"\"\n    for char in my_str:\n       if char not in punctuations:\n           no_punct = no_punct + char\n\n    # return the unpunctuated string\n    return no_punct","c5859385":"def find_words(number=10):\n    d=data['Description'].values\n    dic={}\n    sentences=[]\n    for i in d:\n        i=remove_punctuation(i)\n        tokens=word_tokenize(str(i))\n        tokens = [w for w in tokens if not w in stopset]\n        for j in tokens:\n            if j not in dic:\n                dic[j]=1\n            else:\n                dic[j]+=1\n    dic={k: v for k, v in sorted(dic.items(), key=lambda item: item[1],reverse=True)}\n    return dict(itertools.islice(dic.items(),18, number+18))","7373ac99":"find_words(12)","213e346c":"t = find_words(16).keys()\ntext=''\nfor i in t:\n    text+=i+' '\nwordcloud = WordCloud().generate(text)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","c20957a2":"### Authors who got the best sellers :)","3176d50d":"## Preprocessing the data description by removing the stopwords and punctuation ....","67a15d8d":"looks like jeff roll is on a roll haha :)","a10e5050":"## Let's look at a word cloud :)","ade0e149":"## Visualizing some Data","f1855bf9":"So guys i felt like adding description in this data so i added it :)","8c92f805":"## This is how my new data looks like :)"}}