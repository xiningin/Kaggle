{"cell_type":{"1ada7b1d":"code","3e65f8c8":"code","43c005e4":"code","33106968":"code","5ea0ed49":"code","1cc65c9e":"code","91437afb":"code","ea04e6bb":"code","8ad63e90":"code","a5f3aca0":"code","110b082e":"code","0fc5ef34":"code","fd3fa9c8":"code","dc73623e":"code","3376f012":"code","e9e67a2b":"code","aa5bc5fb":"code","c82ddab3":"code","887cc3f0":"code","13c4290a":"code","aea31461":"code","ca538960":"code","a562530d":"code","84b29313":"code","c73db9d3":"code","ad563c92":"code","00ab0d08":"code","0f4792c8":"code","64888902":"code","5b3d572d":"code","bcfe94fa":"code","57bdb44d":"code","f6fba047":"code","b1edddeb":"code","7dbfb57e":"code","c65bef33":"code","6566935e":"code","822d4122":"code","be6a5915":"code","6ef5003a":"code","5cb803c2":"code","a27ed2cc":"code","684a52f8":"code","0f366722":"code","aef99075":"code","68fbefdc":"code","7c682ed9":"code","9291cfc3":"code","e9553e88":"code","d89b03db":"code","cfed7f97":"code","34ec5868":"code","92ab3345":"code","be253009":"code","1e0060a4":"code","68ab8441":"code","b9625090":"code","e287d1ab":"code","1f20c70b":"code","ebede91c":"code","848205f9":"code","dd0b137b":"code","01186a5b":"code","1c7692ab":"code","19d9e91d":"code","cd7eae10":"code","4c377ada":"code","15e820a4":"code","92e5ceee":"code","df02f779":"code","b7d51f6d":"code","f42f4790":"code","805855b1":"code","f6d02224":"code","df6228c6":"code","f90c0c42":"code","3b424b81":"code","d979e577":"code","5956269a":"code","f33d45c5":"code","0bdc7d46":"markdown","952b73a5":"markdown","f85ff88c":"markdown","6416c9bb":"markdown","ea3547c0":"markdown","c16f18ac":"markdown","b576a11a":"markdown","0d0073c6":"markdown","471d2532":"markdown"},"source":{"1ada7b1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e65f8c8":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('seaborn-whitegrid')\nimport seaborn as sns\n\n# To ignore the warnings \nimport warnings as wg\nwg.filterwarnings(\"ignore\")","43c005e4":"df_train = pd.read_csv('..\/input\/ipl-2020-player-performance\/Training.csv')\nmatch2020 = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2020.csv')\nprev_match = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2008-2019.csv')\nplayers =  pd.read_csv('..\/input\/ipl-2020-player-performance\/IPL 2020 Squads.csv', encoding='windows-1254')\ndf_train.head()","33106968":"df_train.dtypes","5ea0ed49":"df_train['Id_player']=df_train['Id'].str.split('_').str[0]\ndf_train['Id_player']","1cc65c9e":"df_train['Name']=df_train['Id'].str.split('_').str[1]\ndf_train['Name']","91437afb":"df_train.head()","ea04e6bb":"df_train.columns","8ad63e90":"column_names = ['Id','Id_player','Name','Runs', 'Boundaries', 'Six', 'Fifty', 'Hundred', 'Duck',\n       'Batting_Points', 'Wickets', '4W_Haul', '5W_Haul', 'Maidens',\n       'Bowling_Points', 'Total Points']\n\ndf_train = df_train.reindex(columns=column_names)\ndf_train","a5f3aca0":"prev_match.head()","110b082e":"prev_match.isnull().sum()","0fc5ef34":"prev_match.dropna()","fd3fa9c8":"#checking for duplicates\nprev_match.duplicated()","dc73623e":"#lets take the look at the seasons\nprev_match['season'].unique()\n#we have the data from 2008 to 2019\n","3376f012":"import matplotlib.pyplot as plt\nplt.figure(figsize = (6,6))\ntextprops = {\"fontsize\":15}\nplt.title('Seasonal Distribution of matches')\nplt.pie(prev_match['season'].value_counts(), labels=prev_match['season'].value_counts().index,autopct='%1.1f%%',textprops = textprops)\nplt.show()\n#we can observe that in 2013 the percentage of matches played is highest","e9e67a2b":"plt.figure(figsize = (20,6))\nsns.countplot(x= prev_match['season'],data= prev_match)\nplt.show()\n#through bar plot depicted the no of matches played in 2013 were more","aa5bc5fb":"#now figuring out in which ciy maximum number of mathces were played\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (6,6))\ntextprops = {\"fontsize\":15}\nplt.title(' Distribution of matches based on cities')\nplt.pie(prev_match['city'].value_counts().iloc[:10], labels=prev_match['city'].value_counts().iloc[:10].index,autopct='%1.1f%%',textprops = textprops)\nplt.show()\n#we can see through the plot that maximum number of matches were player in mumbai and minimum matches found to be played in Durban","c82ddab3":"plt.figure(figsize = (20,6))\nsns.countplot(x=prev_match[\"winner\"],palette=\"rocket\", data= prev_match, order=prev_match.winner.value_counts().iloc[:5].index)\nplt.show()","887cc3f0":"plt.figure(figsize = (20,6))\nsns.countplot(x=prev_match[\"player_of_match\"],palette=\"mako\", data= prev_match, order=prev_match.player_of_match.value_counts().iloc[:5].index)\nplt.show()\n#Maximum number of the times CH_gayle was the player of the match","13c4290a":"plt.figure(figsize = (20,6))\nsns.countplot(x=prev_match[\"venue\"],palette=\"Paired\", data= prev_match, order=prev_match.venue.value_counts().iloc[:5].index)\nplt.show()\n#Most of the matches were played in eden garden,kolkata","aea31461":"match2020.head()","ca538960":"match2020['city'].value_counts()","a562530d":"plt.figure(figsize = (20,6))\nsns.countplot(x=match2020[\"city\"],palette=\"Paired\", data= match2020)\nplt.show()\n#maximum matches were played in Dubai in 2020","84b29313":"df_train.head()","c73db9d3":"df_train['Name'].value_counts()","ad563c92":"#les plot it\nplt.figure(figsize = (20,6))\nsns.countplot(x=df_train[\"Name\"],palette=\"mako\", data= df_train, order=df_train.Name.value_counts().iloc[:5].index)\nplt.show()\n#We can see SK raina was found to be there in most of the matches","00ab0d08":"Best_player = df_train.nlargest(8, ['Total Points'])\nplt.figure(figsize = (20,6))\nplt.bar(Best_player['Name'], Best_player['Total Points'],color=\"cyan\")\n#CH_Gayle scored maximum number of points as compared to others","0f4792c8":"#showing it through boxplot\nsns.boxplot(x=\"Name\",y=\"Total Points\",data=Best_player, palette=\"coolwarm\")\nplt.xticks(rotation=60)","64888902":"sns.violinplot(x=\"Name\", y=\"Total Points\", data=Best_player,palette='rainbow')\nplt.xticks(rotation=45)","5b3d572d":"# computing top names who scored more bowling points\nBowlingPoints= df_train.groupby(\"Name\").Bowling_Points.sum().nlargest(n=5)\nBowlingPoints.plot(kind = 'bar',figsize = (10,5),fontsize = 14,color='pink')\nplt.xlabel('Name',fontsize = 15)\nplt.ylabel('Total Bowling_points',fontsize = 15)\nplt.title(\"Top players who scored more bowling points\",fontsize = 15)\nplt.show()\n","bcfe94fa":"# computing top names who scored more batting points\nBattingPoints= df_train.groupby(\"Name\").Batting_Points.sum().nlargest(n=5)\nBattingPoints.plot(kind = 'bar',figsize = (10,5),fontsize = 14,color='red')\nplt.xlabel('Name',fontsize = 15)\nplt.ylabel('Total Batting _points',fontsize = 15)\nplt.title(\"Top players who scored more batting points\",fontsize = 15)\nplt.show()\n#virat kohli scored maximum batting points\n","57bdb44d":"players.head()","f6fba047":"df2 = pd.DataFrame()\ndf2['match_number'] = df_train['Id_player']\ndf2['player'] = df_train['Name']\ndf2['total_score'] = df_train['Total Points']\ndf2['Id']= df_train['Id']","b1edddeb":"df2.head()","7dbfb57e":"df2.groupby(['player','match_number']).sum()\n#this will group all the players and the matches they played individually","c65bef33":"df2.isna().sum()","6566935e":"df2.dtypes","822d4122":"df2.shape","be6a5915":"df2 = df2.drop(['player'],axis=1)\ndf2 = df2.iloc[:1283]\ndf2.shape#extracting 1283 rows as in submission we have 1283 rows,dropping the player column as we have to do submission wrt to id","6ef5003a":"df2.match_number=  df2.match_number.astype(int)","5cb803c2":"#now separating out the categorical columns and numerical columns\n#printing all the categorical columns\ncat_col=[col for col in df2.columns if df2[col].dtype=='O']\ncat_col\n","a27ed2cc":"categorical=df2[cat_col]\ncategorical.head()","684a52f8":"Id=pd.get_dummies(categorical['Id'],drop_first=True)\nId.head()#applying one hot encoding","0f366722":"cont_col=[col for col in df2.columns if df2[col].dtype!='O']\ncont_col","aef99075":"df2= pd.concat([Id,df2[cont_col]],axis = 1)\ndf2.head()","68fbefdc":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics","7c682ed9":"X=df2.drop(['total_score'],axis=1)\ny=df2['total_score']\n","9291cfc3":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","e9553e88":"scaler = StandardScaler()\nscaler.fit(X_train)","d89b03db":"X_train = scaler.transform(X_train)\nX_train.shape","cfed7f97":"X_test = scaler.transform(X_test)","34ec5868":"Regressor=LinearRegression()\nmodel=Regressor.fit(X_train,y_train)\n","92ab3345":"from sklearn import metrics\ny_pred= model.predict(X_test)\nprint(\"Predictions are:{}\".format(y_pred))\nprint(\"\\n \")","be253009":"print(\"MAE:\",metrics.mean_absolute_error(y_test,y_pred))\nprint(\"MSE:\",metrics.mean_squared_error(y_test,y_pred))\nprint(\"RMSE:\",np.sqrt(metrics.mean_absolute_error(y_test,y_pred)))\nsns.distplot(y_test-y_pred)","1e0060a4":"y_pred = np.round(y_pred)","68ab8441":"y_pred","b9625090":"y_pred_new = [0 if i < 0 else i for i in y_pred]#removing the neagtive values","e287d1ab":"y_pred_new","1f20c70b":"submission = pd.read_csv('\/kaggle\/input\/ipl-2020-player-performance\/sample_submission.csv')\nsubmission.head()","ebede91c":"submission.shape","848205f9":"submission['id']=submission['Id'].str.split('_').str[0]#splitting the names and id's","dd0b137b":"submission['Player']=submission['Id'].str.split('_').str[1]","01186a5b":"submission.head()","1c7692ab":"xs = submission.drop(['Total Points','Player'],axis=1)\nxs.id = xs.id.astype(int)\nxs.id.dtypes","19d9e91d":"#now separating out the categorical columns and numerical columns\n#printing all the categorical columns\ncat_col=[col for col in xs.columns if xs[col].dtype=='O']\ncat_col\n","cd7eae10":"cont_col=[col for col in xs.columns if xs[col].dtype!='O']\ncont_col\n","4c377ada":"categorical=xs[cat_col]\ncategorical.head()","15e820a4":"Id=pd.get_dummies(categorical['Id'],drop_first=True)\nId.head()","92e5ceee":"xs= pd.concat([Id,xs[cont_col]],axis = 1)\nxs.head()","df02f779":"scaler.fit(xs)\nxs = scaler.transform(xs)","b7d51f6d":"y2_pred=Regressor.predict(xs)\ny2_pred","f42f4790":"y2_pred = np.round(y2_pred)\nlen(y2_pred)","805855b1":"y3_pred = [0 if i < 0 else i for i in y2_pred]\nneg = []\nfor i in y2_pred:\n    if i <0:\n        neg.append(i)\ny2_pred","f6d02224":"y3_pred","df6228c6":"len(y3_pred)","f90c0c42":"submission.head()","3b424b81":"submission = submission.drop(['Player','id'],axis=1)","d979e577":"submission['Total Points'] = y3_pred","5956269a":"submission.head()#predictions made","f33d45c5":"submission.to_csv('ipl_predictions.csv',index=False)","0bdc7d46":"# Now lets take a look at the training data","952b73a5":"# creating new dataframe with the help of training dataset","f85ff88c":"performin eda","6416c9bb":"# lets take a look at matches 2020 dataset","ea3547c0":"# SL malinga scored more bowling points as compared to other players","c16f18ac":"Now lets take a look on the prev_matches dataset","b576a11a":"# lets look at IPL 2020 Squads","0d0073c6":"# we can observe most of the mathces were won by mumbai indians and second comes chennai super kings","471d2532":"Applying Data preprocessing on our own created dataset"}}