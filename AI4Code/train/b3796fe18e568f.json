{"cell_type":{"a8ec5536":"code","558b1ea0":"code","0f721dec":"code","b46d6b80":"code","b54ba814":"code","971a237a":"code","650d026c":"code","5d11e661":"code","3489475d":"code","df9ff7d8":"code","4087e9e0":"code","6edd1c11":"code","93ec9e9e":"code","cf02c782":"code","fd7179b3":"code","164972ec":"code","c2e1ec23":"code","28bca8b2":"code","dac80d51":"code","fc777dca":"code","5f55a119":"code","709c9662":"code","bea60c3f":"code","643ca121":"code","8cdb32a7":"code","070542ae":"code","dc43b1b1":"code","13a74418":"code","6da2ed90":"code","eba56415":"code","f8297818":"code","34d1782a":"code","3965d3be":"code","54f6ac5e":"code","43f98f56":"code","54be9e6c":"code","451949cc":"code","ec08bb19":"code","c5264987":"markdown","35f308c8":"markdown","6da381bf":"markdown","3477ad9f":"markdown","a3f377e9":"markdown","8927c8b2":"markdown","2ee6f61c":"markdown","25d62907":"markdown","eb4113fe":"markdown","9d467752":"markdown","6830c719":"markdown","7330a298":"markdown","915358d0":"markdown","aca4c47b":"markdown","d7621850":"markdown","54a87143":"markdown","2cf3833f":"markdown","67e47dc4":"markdown","7d70a838":"markdown","3bfbeca4":"markdown","321b5af2":"markdown","7fe664f7":"markdown","eb1cc85e":"markdown","f05e04f0":"markdown","e750de4b":"markdown","82a3954c":"markdown","711a30ea":"markdown","c9633204":"markdown","4f291e8f":"markdown","78d72686":"markdown","cc7edee1":"markdown","a60f55c5":"markdown"},"source":{"a8ec5536":"import pandas as pd ","558b1ea0":"df_train = pd.read_csv('..\/input\/shopee-product-matching\/train.csv')","0f721dec":"df_train","b46d6b80":"df_train.info()","b54ba814":"df_train.isna().sum()","971a237a":"df_train.columns","650d026c":"len(df_train.label_group.unique())","5d11e661":"products_by_label_group = df_train.label_group.value_counts()\nproducts_by_label_group ","3489475d":"products_by_label_group[:20].index.astype(str)","df9ff7d8":"import matplotlib.pyplot as plt\nplt.barh(products_by_label_group[:20].index.astype(str), products_by_label_group[:20].values)\n","4087e9e0":"import seaborn as sns\nsns.set_style('darkgrid')\nsns.histplot(df_train.label_group, log_scale=True)","6edd1c11":"sns.distplot(products_by_label_group)","93ec9e9e":"high_product_group = products_by_label_group[products_by_label_group >= 10]\nlen(high_product_group) \/ len(products_by_label_group)","cf02c782":"low_product_group = products_by_label_group[products_by_label_group < 10]\nlen(low_product_group) \/ len(products_by_label_group)","fd7179b3":"sns.histplot(high_product_group)","164972ec":"sns.histplot(low_product_group)","c2e1ec23":"products_by_label_group[products_by_label_group == 2]","28bca8b2":"df_train.title","dac80d51":"df_train['title'][df_train['label_group'] == 3627744656]","fc777dca":"df_train['word_count'] = df_train['title'].apply(lambda x: len(str(x).split(\" \")))\ndf_train[['title','word_count']].head()","5f55a119":"df_train['char_count'] = df_train['title'].str.len() ## this also includes spaces\ndf_train[['title','char_count']].head()","709c9662":"def avg_word(sentence):\n  words = sentence.split()\n  return (sum(len(word) for word in words)\/len(words))\n\ndf_train['avg_word'] = df_train['title'].apply(lambda x: avg_word(x))\ndf_train[['title','avg_word']].head()","bea60c3f":"from nltk.corpus import stopwords\nstop = stopwords.words('english')\n\ndf_train['stopwords'] = df_train['title'].apply(lambda x: len([x for x in x.split() if x in stop]))\ndf_train[['title','stopwords']].head()","643ca121":"df_train['hastags'] = df_train['title'].apply(lambda x: len([x for x in x.split() if x.startswith('#')]))\ndf_train[['title','hastags']].head()","8cdb32a7":"df_train['numerics'] = df_train['title'].apply(lambda x: len([x for x in x.split() if x.isdigit()]))\ndf_train[['title','numerics']].head()","070542ae":"df_train['upper'] = df_train['title'].apply(lambda x: len([x for x in x.split() if x.isupper()]))\ndf_train[['title','upper']].head()","dc43b1b1":"freq = pd.Series(' '.join(df_train['title']).split()).value_counts()[:10]\nfreq","13a74418":"freq = pd.Series(' '.join(df_train['title'][df_train['label_group'] == 3627744656]).split()).value_counts()[:10]\nfreq","6da2ed90":"freq = pd.Series(' '.join(df_train['title']).split()).value_counts()[-10:]\nfreq","eba56415":"freq = pd.Series(' '.join(df_train['title'][df_train['label_group'] == 3627744656]).split()).value_counts()[-10:]\nfreq","f8297818":"len(df_train.image.unique())","34d1782a":"import os\nfiles_train = os.listdir('..\/input\/shopee-product-matching\/train_images\/')\nprint(\"training images files: \", files_train[:5])\nprint(\"Number of images: \", len(files_train))","3965d3be":"import cv2\n\n\ndef show_image(files, nr, nc):\n    figure, ax = plt.subplots(nrows=nr,ncols=nc,figsize=(10, 10))\n    for i in range(0,nr*nc):\n        image = cv2.imread('..\/input\/shopee-product-matching\/train_images\/' + files[i])\n        ax.ravel()[i].imshow(image)\n        plt.xticks([])\n        plt.yticks([])\n        ax.ravel()[i].set_axis_off()\n    plt.show()\n    \n    ","54f6ac5e":"show_image(files_train, 6, 6)","43f98f56":"top_products = pd.Series(df_train['image'][df_train['label_group'] == 3627744656]).array\nlen(top_products)","54be9e6c":"show_image(top_products, 6, 6)","451949cc":"low_products = pd.Series(df_train['image'][df_train['label_group'] == 834066355]).array","ec08bb19":"show_image(low_products, 3, 3)","c5264987":"1. How many different type of products in the dataset?\n2. which catagory have the highest number of products?\n3. How many products in each catagory?\n4. How many images related to one products?\n5. What the titles for each product in the same label_group? and what is the common words (most frequent word) in product's title in the same label group?","35f308c8":"### During data exploration we will answer following Questions:","6da381bf":"## image","3477ad9f":"## Download the Data","a3f377e9":"### Label_group","8927c8b2":"* Information about shopee dataset","2ee6f61c":"## Data Preparation and Cleaning ","25d62907":"#### Average Word Length","eb4113fe":"# Shopee product matching Data analysis","9d467752":"### Low label_group product's images","6830c719":"- which catagory have the highest number of products?\n- How many products in each catagory?","7330a298":"In conclusion, we explore the dataset to help us understand it. thus, will make it easer for us to start the next step of the project. In this Dataset, less than 5% of label_group have more than 10 products. And over 6979 label_group have 2 image of product. This will make the analysis more challenging in way to build a good model.","915358d0":"#### Common word","aca4c47b":"### High label_group product's image","d7621850":"## Summary and Conclusion","54a87143":"Missing values per column","2cf3833f":"#### Number of stopwords","67e47dc4":"#### Number of characters","7d70a838":"- What the titles for each product in the same label_group?","3bfbeca4":"#### Rare words in same label_group","321b5af2":"## Exploratory Analysis and Visualization","7fe664f7":"- How many images related to one product?","eb1cc85e":"most label_group have less than 10 products","f05e04f0":"#### Number of numerics","e750de4b":"## Title","82a3954c":"- What is the common words (most frequent word) in product's title in the same label group?","711a30ea":"#### Number of Words","c9633204":"#### Rare words","4f291e8f":"- How many different type of products in the dataset?","78d72686":"#### Number of special characters","cc7edee1":"#### Number of Uppercase words","a60f55c5":"#### Common word in same label_group"}}