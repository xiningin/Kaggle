{"cell_type":{"331b215c":"code","4874d424":"code","f9d57984":"code","ade25b78":"code","08cb79ce":"code","d42e4c9d":"code","1cd8c860":"code","0cecb944":"code","965904b6":"code","fb3a71ee":"code","4bff2e25":"code","579b0f62":"code","ab14248d":"code","a99d451c":"code","182b058a":"code","9a7b3534":"code","f71adac8":"code","87c775a4":"code","38b94297":"code","c8c82b4c":"code","0031a046":"code","72d806ab":"code","0492c4c6":"code","68c45429":"code","fbecbd98":"code","0fa808f1":"code","b1a83b0f":"code","3d873a93":"code","85b23369":"code","6234f741":"code","80dea4ec":"code","00cf03f9":"code","d4cd16ed":"markdown","8bdf3423":"markdown","778204c6":"markdown","87656f51":"markdown","906d455d":"markdown","2825d00a":"markdown","7ec9fc12":"markdown","05fbf98c":"markdown","f748e0f5":"markdown","4240d5f7":"markdown","927195a4":"markdown","738836c2":"markdown"},"source":{"331b215c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sqlite3\nimport warnings \nwarnings.filterwarnings(\"ignore\")","4874d424":"pd.set_option(\"display.max_columns\", None)\nplt.style.use('seaborn-pastel')","f9d57984":"## HELPER FUNCTIONS ##\n\n#Connect to the database\ndef connect(path):\n    con=sqlite3.connect(path)\n    return con\n#Generate Schema for the table\ndef generateSchema(tableName,df):\n    schema=f'create table if not exists {tableName}('\n    cols=df.columns\n    dataType={'int64':'int','float64':'int','object':'varchar(100)','bool':'boolean'}\n    for i in range(len(cols)):\n        name=''.join(cols[i].split(' '))\n        if name.startswith('Date'):\n            definition=f'{name} DATE,'\n            schema+=definition\n            continue\n        if name.startswith('Yea'):\n            definition=f'{name} YEAR,'\n            schema+=definition\n            continue\n            \n        if i!=len(cols)-1:\n            definition=f'{name} {dataType[str(df[cols[i]].dtype)]}, '\n            schema+=definition\n        else:\n            definition=f'{name} {dataType[str(df[cols[i]].dtype)]})'\n            schema+=definition\n    return schema\n\n\n# Create Query function for tables\ndef createQuery(query,connection):\n    try:\n        connection.cursor().execute(query)\n        print('Table Created')\n    except Exception as e:\n        print('Exception',e)\n\n#Function to perform get queries\ndef getQuery(query,connection):\n    try:\n        result=connection.cursor().execute(query)\n        print('Query Executed')\n        return result.fetchall()\n    except Exception as e:\n        print('Exception',e)\n#Function to convert query(which comes in as a list of tuples to DataFrame)\ndef toDf(res,cols):\n    try:\n        return pd.DataFrame(res,columns=cols)\n    except Exception as e:\n        print(f'The DataFrame cannot be created because of this error: {e}')\n    \n    \n        ","ade25b78":"# The .db file is you onfile database as input folder is read only we move this file the working directory which has read and write perimissions.\n!sudo cp \/kaggle\/input\/testsqlitedatabase\/database.db \/kaggle\/working\/database.db","08cb79ce":"#Conncet to the database\ntry:\n    db=connect('database.db')\n    print('Connected to datbase',db)\nexcept Exception as e:\n    print('Exception',e)","d42e4c9d":"#Read Data\ncrime=pd.read_csv('\/kaggle\/input\/crimes-in-chicago\/Chicago_Crimes_2012_to_2017.csv')","1cd8c860":"crime.head()","0cecb944":"crime.drop('Unnamed: 0',inplace=True,axis=1)","965904b6":"crime.head()","fb3a71ee":"#Rename Columns to match coulmn names in sql schema\nnew_cols=list(map(lambda x:''.join(x.split(' ')),crime.columns))","4bff2e25":"crime.columns=new_cols","579b0f62":"crime.info()","ab14248d":"schema=generateSchema('crime',crime)\nprint(schema)","a99d451c":"#Create table\ncreateQuery(schema,db)","182b058a":"#Populating the Table\ncrime.to_sql('crime',db,if_exists='append',index=False,method=None)","9a7b3534":"## Query Equivalent to .head()\nres=getQuery('select * from crime limit 5',db)\nres=toDf(res,crime.columns)\nres","f71adac8":"res=getQuery('select PrimaryType, COUNT(*) from crime group by PrimaryType order by count(*) desc limit 10',db)\nres=toDf(res,['Crime','Count'])\nres","87c775a4":"#Pandas Equivalent\nres=crime.groupby('PrimaryType')['PrimaryType'].agg('count').sort_values(ascending=False).head(10)\nres","38b94297":"# getQuery('pragma table_info(\"crime\");',db)\nplt.rcParams['figure.figsize']=(8,8)\nres[::-1].plot(kind='barh')\nplt.xlabel('Frequency',fontsize=20)\nplt.ylabel('Crime',fontsize=20)\nplt.title('Crimes In Gotham',fontsize=20)\nplt.xticks(rotation=45,fontsize=15)\nplt.yticks(fontsize=15)\nplt.grid(True,alpha=0.3)\nplt.tight_layout()\n\n","c8c82b4c":"res=getQuery('select Arrest, COUNT(*) from crime group by Arrest order by count(*) desc',db)\nres=toDf(res,['Arrest','Count'])\nres","0031a046":"#pandas equivalent \nres=crime.groupby('Arrest')['Arrest'].agg('count').sort_values(ascending=False)\nres","72d806ab":"\nres.plot(kind='pie',figsize=(5,5),autopct=\"%3.0f%%\",colors=['red','green'],shadow=True,fontsize=25,explode=[0.05,.02])\n\nplt.title('Criminals Arrested ?',fontsize=25)\n\nplt.tight_layout()","0492c4c6":"res=getQuery('select COUNT(Distinct District) from crime where District is not NULL',db)\nres=toDf(res,['Count'])\nres","68c45429":"#Pandas Equivalent\nres=crime['District'].nunique()\nprint(f'The total number of districts present in the datasets are {res}')","fbecbd98":"res=getQuery('select Distinct District from crime where District is not NULL ORDER BY District',db)\nres=toDf(res,['Districts'])\nres","0fa808f1":"res=getQuery('select Distinct PrimaryType from crime where District=12',db)\nres=toDf(res,['Crimes'])\nres","b1a83b0f":"#Pandas Equivalent\nres=crime[crime['District']==12]['PrimaryType'].unique()\nprint(f'The different crimes happening at District 12')\nprint(res)","3d873a93":"res=getQuery(\"select * from crime where LocationDescription Like '%RESIDENCE%' OR LocationDescription LIKE '%APARTMENT%' OR LocationDescription LIKE '%ROOM%' OR LocationDescription LIKE '%HOUSE%' AND LocationDescription is not NULL ORDER by Date DESC LIMIT 500\",db)\nres=toDf(res,crime.columns)\nres","85b23369":"#Pandas Equivalent\ncrime1=crime[crime['LocationDescription'].notna()]\nres=crime1[crime1['LocationDescription'].str.contains(\"RESIDENCE|APARTMENT|HOUSE|ROOM\")].sort_values('Date',ascending='False')[:500]\nres","6234f741":"res=getQuery('select CommunityArea, COUNT(*) from crime where CommunityArea is not NULL group by CommunityArea ORDER by Count(*) ASC LIMIT 5',db)\nres=toDf(res,['CommunityArea','CrimeCount'])\nres","80dea4ec":"#Pandas Equivalent\ncrime1=crime[crime['CommunityArea'].notna()]\nres=crime1.groupby(by='CommunityArea')['CommunityArea'].agg('count').sort_values().head()\nres","00cf03f9":"plt.rcParams['figure.figsize']=(8,8)\nres[::-1].plot(kind='barh')\nplt.xlabel('Frequency',fontsize=20)\nplt.ylabel('Community Area',fontsize=20)\nplt.title('Safest Community Areas In Gotham',fontsize=20)\nplt.xticks(rotation=45,fontsize=15)\nplt.yticks(fontsize=15)\nplt.grid(True,alpha=0.3)\nplt.tight_layout()","d4cd16ed":"> # *Let's suppose this isn't Chicago but Gotham. Alfred was going through the old newspapers that were published before Bruce Wayne took the oath to protect Gotham. He wants to compare some statitics and as you and as his friend and a professional who has good grasp on the tools to extract knowledge from data, it's your task to provide the insights he requires.*","8bdf3423":"5) Alfred said the safest place should be home, he wants the details the most recent 500 cromes happended at or around civilians home in Gotham","778204c6":"1) What were the 10 most common crimes commited in Gotham?","87656f51":"2) Did the police find the criminals(batman always does, doesn't he?) ?","906d455d":"Doesn't look good, does it?\n\nPS: I mean the stats, not the graph!!","2825d00a":"# Exploratory Data Analysis on Chicago Crime Dataset Using Pandas and SQL","7ec9fc12":"### Simple analysis and queries to get you going!","05fbf98c":"Woa! Alfred's old but smart!!","f748e0f5":"4) Alfred and Bruce lives in district 12. What crimes use to happen there and if the data is there available for district 12","4240d5f7":"6) Alfred, wondered which were the safest areas back then and asks you to find them for him!","927195a4":"Commuinity 0 is the safest of all!!","738836c2":"3) Alfred asks if the data is complete, is for each disrtict in Gotham. Alfred Confirms Gotham has 25 of them. To cross-check, find out how many are in your data?"}}