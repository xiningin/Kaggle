{"cell_type":{"da61bb48":"code","e54d603b":"code","dbfaee64":"code","0fbc4aea":"code","be7adbb5":"code","bf261e08":"code","98765b3f":"code","ab47d349":"code","e56824cb":"code","030feda5":"code","aa5bb241":"code","e48cdc6f":"code","70fd48b8":"code","7b47ea89":"code","53832718":"code","9caa31b4":"code","c5bca349":"code","b41fe441":"code","090f9248":"code","9fded8c1":"code","44e4ddd4":"code","bf20aea9":"code","8470a7c7":"code","9a68fba7":"code","3c9dbb3c":"code","6c714a49":"code","15a68df2":"markdown","1c09c104":"markdown","ace3e676":"markdown","45ac7831":"markdown","bc9958b1":"markdown","29d431fb":"markdown","2ccd9962":"markdown","373aa57e":"markdown"},"source":{"da61bb48":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e54d603b":"heart = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')","dbfaee64":"heart.head()","0fbc4aea":"heart.describe()","be7adbb5":"heart.info()","bf261e08":"import seaborn as sns\nimport matplotlib.pyplot as plt","98765b3f":"heart_corr = heart.corr()\ntop_corr_features = heart_corr.index\nplt.figure(figsize=(20,20))\ng = sns.heatmap(heart[top_corr_features].corr(),annot=True, cmap=\"RdYlGn\")","ab47d349":"X = heart.drop('target', axis = 'columns')\ny = heart.target","e56824cb":"len(X), len(y)","030feda5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\nlen(X_train), len(X_test), len(y_train), len(y_test)","aa5bb241":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\npredict_y = model.predict(X_test)","e48cdc6f":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score, recall_score, f1_score,confusion_matrix\nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import roc_auc_score\nprint(\"Decision Tree Classifier Model Score is:\", accuracy_score(y_test, predict_y))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_y))\nprint(\"Precision Score is:\", precision_score(y_test, predict_y))\nprint(\"Recall Score is:\", recall_score(y_test, predict_y))\nprint(\"F1 Score is:\", f1_score(y_test, predict_y))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_y))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_y))","70fd48b8":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)\npredict_R = model.predict(X_test)","7b47ea89":"print(\"Random Forest Classifier Model Score is:\", accuracy_score(y_test, predict_R))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_R))\nprint(\"Precision Score is:\", precision_score(y_test, predict_R))\nprint(\"Recall Score is:\", recall_score(y_test, predict_R))\nprint(\"F1 Score is:\", f1_score(y_test, predict_R))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_R))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_R))","53832718":"import warnings\nwarnings.filterwarnings('ignore')","9caa31b4":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\npredict_L = model.predict(X_test)","c5bca349":"print(\"Logistic Regression Classifier Model Score is:\", accuracy_score(y_test, predict_L))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_L))\nprint(\"Precision Score is:\", precision_score(y_test, predict_L))\nprint(\"Recall Score is:\", recall_score(y_test, predict_L))\nprint(\"F1 Score is:\", f1_score(y_test, predict_L))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_L))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_L))","b41fe441":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier()\nmodel.fit(X_train, y_train)\npredict_K = model.predict(X_test)","090f9248":"print(\"KNN Classifier Model Score is:\", accuracy_score(y_test, predict_K))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_K))\nprint(\"Precision Score is:\", precision_score(y_test, predict_K))\nprint(\"Recall Score is:\", recall_score(y_test, predict_K))\nprint(\"F1 Score is:\", f1_score(y_test, predict_K))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_K))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_K))","9fded8c1":"from sklearn.ensemble import GradientBoostingClassifier\nmodel = GradientBoostingClassifier()\nmodel.fit(X_train, y_train)\npredict_G = model.predict(X_test)","44e4ddd4":"print(\"Gradient Boosting Classifier Model Score is:\", accuracy_score(y_test, predict_G))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_G))\nprint(\"Precision Score is:\", precision_score(y_test, predict_G))\nprint(\"Recall Score is:\", recall_score(y_test, predict_G))\nprint(\"F1 Score is:\", f1_score(y_test, predict_G))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_G))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_G))","bf20aea9":"from sklearn.neural_network import MLPClassifier\nmodel = MLPClassifier()\nmodel.fit(X_train, y_train)\npredict_A = model.predict(X_test)","8470a7c7":"print(\"ANN Model Score is:\", accuracy_score(y_test, predict_A))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_A))\nprint(\"Precision Score is:\", precision_score(y_test, predict_A))\nprint(\"Recall Score is:\", recall_score(y_test, predict_A))\nprint(\"F1 Score is:\", f1_score(y_test, predict_A))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_A))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_A))","9a68fba7":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nmodel.fit(X_train, y_train)\npredict_N = model.predict(X_test)","3c9dbb3c":"print(\"Na\u00efve Bayes Classifier Model Score is:\", accuracy_score(y_test, predict_N))\nprint(\"Confusion Matrix is:\", confusion_matrix(y_test, predict_N))\nprint(\"Precision Score is:\", precision_score(y_test, predict_N))\nprint(\"Recall Score is:\", recall_score(y_test, predict_N))\nprint(\"F1 Score is:\", f1_score(y_test, predict_N))\nprint(\"MCC Score is:\", matthews_corrcoef(y_test, predict_N))\nprint(\"ROC-AUC Score is:\", roc_auc_score(y_test, predict_N))","6c714a49":"print(\"Decision Tree Classifier Model Score is:\", accuracy_score(y_test, predict_y))\nprint(\"Random Forest Classifier Model Score is:\", accuracy_score(y_test, predict_R))\nprint(\"Logistic Regression Classifier Model Score is:\", accuracy_score(y_test, predict_L))\nprint(\"KNN Classifier Model Score is:\", accuracy_score(y_test, predict_K))\nprint(\"Gradient Boosting Classifier Model Score is:\", accuracy_score(y_test, predict_G))\nprint(\"ANN Model Score is:\", accuracy_score(y_test, predict_A))\nprint(\"Na\u00efve Bayes Classifier Model Score is:\", accuracy_score(y_test, predict_N))","15a68df2":"## Model Accuracy of all Classification Algorithms","1c09c104":"## Using K-Nearest Neighbors Classifier","ace3e676":"## Using Gradient Boosting Classifier","45ac7831":"## Using Logistic Regression Classifier","bc9958b1":"## Using Decision Tree Classifier","29d431fb":"## Using Random Forest Classifier","2ccd9962":"## Using ANN Classifier","373aa57e":"## Using Na\u00efve Bayes Classifier"}}