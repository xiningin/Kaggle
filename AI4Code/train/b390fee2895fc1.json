{"cell_type":{"1ff16f47":"code","52aed741":"code","572888a4":"code","afbf7dac":"code","5397b813":"code","94b1a104":"code","01456fb7":"code","4df96d19":"code","43f30364":"code","484ea6ec":"code","2d00aded":"code","126bb31e":"code","24fb6cd2":"code","50935be7":"code","0680855c":"code","ae671a92":"code","4ca6919c":"code","60d8f1bc":"code","bfd38d8c":"code","3bd42ca1":"code","c7932bb5":"code","f8af90dc":"code","0b21c391":"code","b253662f":"code","7dae0bd7":"code","a2f7f1c0":"code","74e17645":"code","a9d568d2":"code","ba391bf9":"code","6a79c03b":"code","f7bb2c90":"code","ffc6c9d2":"code","5fc02793":"code","7d6fff6f":"code","c8fe38b3":"markdown","57bb5d86":"markdown","da718864":"markdown","00c11df9":"markdown","8e6a8694":"markdown","c977ae70":"markdown","9edd9e9d":"markdown","d7ec4a2d":"markdown"},"source":{"1ff16f47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","52aed741":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsexpenditurecsv\/expenditure.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'expenditure.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","572888a4":"df.isnull().sum()","afbf7dac":"# categorical features\ncategorical_feat = [feature for feature in df.columns if df[feature].dtypes=='O']\nprint('Total categorical features: ', len(categorical_feat))\nprint('\\n',categorical_feat)","5397b813":"from sklearn.preprocessing import LabelEncoder\ncategorical_col = ('country', 'iso2', 'iso3', 'iso_numeric', 'g_whoregion', 'year')\n        \n        \nfor col in categorical_col:\n    label = LabelEncoder() \n    label.fit(list(df[col].values)) \n    df[col] = label.transform(list(df[col].values))\n\nprint('Shape all_data: {}'.format(df.shape))","94b1a104":"#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","01456fb7":"from sklearn.model_selection import train_test_split\n# Hot-Encode Categorical features\ndf = pd.get_dummies(df) \n\n# Splitting dataset back into X and test data\nX = df[:len(df)]\ntest = df[len(df):]\n\nX.shape","4df96d19":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\ndata = df.copy()\nX = data.iloc[:,0:13]  # independent columns\ny = data.iloc[:,-1]    # target column \n# apply SelectKBest class to extract top best features\nbestfeatures = SelectKBest(score_func=chi2, k=10)\nfit = bestfeatures.fit(X,y)\ndfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(X.columns)\n# concat two dataframes for better visualization \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Specs','Score']  # naming the dataframe columns\nprint(featureScores.nlargest(12,'Score'))  # print best features","43f30364":"from sklearn.ensemble import ExtraTreesClassifier\nmodel = ExtraTreesClassifier()\nmodel.fit(X,y)\nprint(model.feature_importances_) #use inbuilt class feature_importances of tree based classifiers\n# plot graph of feature importances for better visualization\nfeat_importances = pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(13).plot(kind='barh')\nplt.show()","484ea6ec":"plt.figure(figsize=(16,7))\nsns.distplot(df[df['rcvd_tot_domestic']==0]['exp_mdrmgt'],kde=False,bins=50)\nplt.title('Expenditure on programme to treat drug-resistant TB')","2d00aded":"plt.figure(figsize=(16,7))\nsns.distplot(df[df['hospd_mdr_dur']==0]['rcvd_patsup'],kde=False,bins=50)\nplt.title('Expenditure and Utilization Funding received for patient support')","126bb31e":"sns.clustermap(df.corr(),annot=True)","24fb6cd2":"# Classification of trees\nfrom sklearn.metrics import classification_report\nfrom sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier\nfrom sklearn.model_selection import train_test_split # Import train_test_split function\nfrom sklearn import metrics #Import scikit-learn metrics module for accuracy calculation\nX = df.iloc[:,0:13] # Features\ny = df.iloc[:,13] # Target variable\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1) # 70% training and 30% test\n# Create Decision Tree classifer object\nclf = DecisionTreeClassifier()\n# Train Decision Tree Classifer\nclf = clf.fit(X_train,y_train)\n#Predict the response for test dataset\ny_pred = clf.predict(X_test)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","50935be7":"# Decision Tree \nclf = DecisionTreeClassifier(criterion=\"entropy\", max_depth=3)\n# Train Decision Tree Classifer\nclf = clf.fit(X_train,y_train)\n#Predict the response for test dataset\ny_pred = clf.predict(X_test)\nprint(classification_report(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","0680855c":"# Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train,y_train)\ny_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train,y_train)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","ae671a92":"# K Nearest Neighbor\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train,y_train)\ny_pred = knn.predict(X_test)\nknn.score(X_train, y_train)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","4ca6919c":"# AdaBoost\nfrom sklearn.ensemble import AdaBoostClassifier\nAda = AdaBoostClassifier(random_state=1)\nAda.fit(X_train, y_train)\ny_pred = Ada.predict(X_test)\nacc_add = round(Ada.score(X_train, y_train) * 100, 2)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","60d8f1bc":"# XGBoost\nimport xgboost as xgb\nXGB = xgb.XGBClassifier(random_state=1)\nXGB.fit(X_train, y_train)\ny_pred = XGB.predict(X_test)\nacc_XGB = round(XGB.score(X_train, y_train) * 100, 2)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","bfd38d8c":"# # Gradient Boosting\nfrom sklearn.ensemble import GradientBoostingClassifier\nGradBoost = GradientBoostingClassifier(random_state=1)\nGradBoost.fit(X_train, y_train)\ny_pred = GradBoost.predict(X_test)\nacc_GradBoost = round(GradBoost.score(X_train, y_train) * 100, 2)\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","3bd42ca1":"# Support Vector Machines\nfrom sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train, y_train)\ny_pred = svc.predict(X_test)\nacc_svc = round(svc.score(X_train, y_train) * 100, 2)\nacc_svc\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","c7932bb5":"# Stochastic Gradient Descent\nfrom sklearn.linear_model import SGDClassifier\nsgd = SGDClassifier()\nsgd.fit(X_train, y_train)\ny_pred = sgd.predict(X_test)\nacc_sgd = round(sgd.score(X_train, y_train) * 100, 2)\nacc_sgd\nprint(classification_report(y_test, y_pred))\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","f8af90dc":"f= plt.figure(figsize=(12,5))\n\nax=f.add_subplot(121)\nsns.distplot(df[\"rcvd_sld\"],color='#333ed6',ax=ax)\nax.set_title('Expenditure Funding received to treat drug-resistant TB')\n\nax=f.add_subplot(122)\nsns.distplot(df[\"exp_fld\"],color='#fc038c',ax=ax)\nax.set_title('Expenditure on drugs to treat drug-susceptible TB')","0b21c391":"# Shap Values\nimport shap\nexplainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(X_test,check_additivity=False)\nshap.summary_plot(shap_values[1], X_test, plot_type=\"bar\")","b253662f":"# Shap value for Model Explaination\nshap.summary_plot(shap_values[1], X_test)","7dae0bd7":"def patient_analysis(model, patient):\n  explainer = shap.TreeExplainer(model)\n  shap_values = explainer.shap_values(patient)\n  shap.initjs()\n  return shap.force_plot(explainer.expected_value[1], shap_values[1], patient)","a2f7f1c0":"patients = X_test.iloc[33,:].astype(float)\npatients_target = y_test.iloc[33:34]\nprint('Target : ',int(patients_target))\npatient_analysis(model, patients)","74e17645":"shap_values = explainer.shap_values(X_train.iloc[:50],check_additivity=False)\nshap.initjs()\nshap.force_plot(explainer.expected_value[1], shap_values[1], X_test.iloc[:50])","a9d568d2":"df1 = pd.read_csv('..\/input\/hackathon\/task_2-Tuberculosis_infection_estimates_for_2018.csv', encoding='utf8')\ndf1.head()","ba391bf9":"togo = df1[(df1['country']=='Togo')].reset_index(drop=True)\ntogo.head()","6a79c03b":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/TG\/","f7bb2c90":"Togo = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/TG\/Togo-en-result-110-original.txt'","ffc6c9d2":"text = open(Togo, 'r',encoding='utf-8',\n                 errors='ignore').read()","5fc02793":"print(text[:2000])","7d6fff6f":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in togo.country)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","c8fe38b3":"![](https:\/\/image1.slideserve.com\/1892234\/financement-du-secteur-de-la-sant-au-togo-exp-rience-des-programmes-sida-tb-paludisme-n.jpg)https:\/\/www.slideserve.com\/denis\/financement-du-secteur-de-la-sant-au-togo-exp-rience-des-programmes-sida-tb-paludisme","57bb5d86":"Das War's, Kaggle Notebook  Runner: Mar\u00edlia Prata   @mpwolke","da718864":"#Codes from Artem Kostrikin  https:\/\/www.kaggle.com\/artemkostrikin\/heart-disease-uci-analysis\/notebook","00c11df9":"#Columns Names\n\nexp_cpp_dstb Expenditure and utilization\tAverage cost of drugs spent per patient starting first-line TB treatment, excluding buffer stock (US Dollars)\n\nexp_cpp_mdr\tExpenditure and utilization\t\tAverage cost of drugs spent per patient starting second-line treatment for MDR-TB, excluding buffer stock (US Dollars)\t\n\nexp_cpp_xdr\tExpenditure and utilization\t\tAverage cost of drugs spent per patient starting XDR-TB treatment, excluding buffer stock (US Dollars)\t\n\nexp_fld\tExpenditure and utilization\t\tActual expenditure on drugs to treat drug-susceptible TB (US Dollars)\t\n\nexp_lab\tExpenditure and utilization\t\tActual expenditure on laboratory infrastructure, equipment and supplies (US Dollars)\n\nexp_mdrmgt\tExpenditure and utilization\t\tActual expenditure on programme costs to treat drug-resistant TB (US Dollars)\n\nexp_orsrvy\tExpenditure and utilization\t\tActual expenditure on operational research and surveys (US Dollars)\t\n\nexp_oth\tExpenditure and utilization\t\tActual expenditure on all other budget line items (US Dollars)\n\nexp_patsup\tExpenditure and utilization\t\tActual expenditure on patient support (US Dollars)\n\nexp_prog\tExpenditure and utilization\t\tActual expenditure on programme costs to treat drug-susceptible TB (US Dollars)\t\n\nexp_sld\tExpenditure and utilization\t\tActual expenditure on drugs to treat drug-resistant TB (US Dollars)\n\nexp_staff\tExpenditure and utilization\t\tActual expenditure on National TB Programme staff (central unit staff and subnational TB staff)  (US Dollars)\n\nexp_tbhiv\tExpenditure and utilization\t\tActual expenditure on collaborative TB\/HIV activities (US Dollars)\t\n\nexp_tot\tExpenditure and utilization\t\tTotal actual expenditure (US Dollars)\n\nhcfvisit_dstb\tExpenditure and utilization\t\tTypical number of visits to a health facility after diagnosis for patients starting first-line TB treatment\t\n\nhcfvisit_mdr\tExpenditure and utilization\t\tTypical number of visits to a health facility after diagnosis for patients starting MDR-TB\/XDR-TB treatment\t\n\nhosp_type_mdr\tExpenditure and utilization\t2=Not applicable\t\n\nhospd_dstb_dur\tExpenditure and utilization\t\tEstimated average duration of stay if patients starting first-line TB treatment are hospitalized (days)\t\n\nhospd_dstb_prct\tExpenditure and utilization\t\tEstimated percentage of patients starting first-line TB treatment that are hospitalized (%)\t\n\nhospd_mdr_dur\tExpenditure and utilization\t\tEstimated average duration of stay if patients starting MDR-TB\/XDR-TB treatment are hospitalized (days)\t\n\nhospd_mdr_prct\tExpenditure and utilization\t\tEstimated percentage of patients starting MDR-TB\/XDR-TB treatment that are hospitalized (%)\t\t\n\nrcvd_fld\tExpenditure and utilization\t\tFunding received for drugs to treat drug-susceptible TB (US Dollars)\n\nrcvd_lab\tExpenditure and utilization\t\tFunding received for laboratory infrastructure, equipment and supplies (US Dollars)\t\t\t\nrcvd_mdrmgt\tExpenditure and utilization\t\tFunding received for programme costs to treat drug-resistant TB (US Dollars)\n\nrcvd_orsrvy\tExpenditure and utilization\t\tFunding received for operational research and surveys (US Dollars)\t\n\nrcvd_oth\tExpenditure and utilization\t\tFunding received for all other budget line items (US Dollars)\n\nrcvd_patsup\tExpenditure and utilization\t\tFunding received for patient support (US Dollars)\n\nrcvd_prog\tExpenditure and utilization\t\tFunding received for programme costs to treat drug-susceptible TB (US Dollars)\t\n\nrcvd_sld\tExpenditure and utilization\t\tFunding received for drugs to treat drug-resistant TB (US Dollars)\n\nrcvd_staff\tExpenditure and utilization\t\tFunding received for National TB Programme staff (central unit staff and subnational TB staff)  (US Dollars)\n\nrcvd_tbhiv\tExpenditure and utilization\t\tFunding received for collaborative TB\/HIV activities (US Dollars)\n\nrcvd_tot\tExpenditure and utilization\t\tTotal funding received for all budget line items (US Dollars)\n\nrcvd_tot_domestic\tExpenditure and utilization\t\tFunding received from domestic sources, including loans (US Dollars)\n\nrcvd_tot_gf\tExpenditure and utilization\t\tFunding received from the Global Fund to Fight AIDS, Tuberculosis and Malaria (US Dollars)\t\n\nrcvd_tot_grnt\tExpenditure and utilization\t\tFunding received from other sources (US Dollars)\t\n\nrcvd_tot_sources\tExpenditure and utilization\t\tTotal funding received from all sources (US Dollars)\n\nrcvd_tot_usaid\tExpenditure and utilization\t\tFunding received from USAID (US Dollars)\nhttps:\/\/www.who.int\/tb\/country\/data\/download\/en\/ TB Data Dictionary","8e6a8694":"#Authorities launch a fundraising campaign for citizens willing to help fight the coronavirus\n\n![](https:\/\/www.togofirst.com\/media\/k2\/items\/cache\/679c97570ef5b01b2bfe27cd1b0d9c76_L.jpg)togofirst.com","c977ae70":"#Shap Values","9edd9e9d":"#Tuberculosis in children in Togo: epidemiology, diagnosis, treatment, and outcome\n\nAuthors: K A R Segbedji , K E Djadou , O-B Tchagbele , M Kpegouni , L K Bessi Kama , K D Azoumah , A D Agb\u00e8r\u00e8\nPMID: 27694091 DOI: 10.1684\/mst.2016.0593 - Med Sante Trop - . 2016 Aug 1;26(3):318-322. doi: 10.1684\/mst.2016.0593.\n\nObjective: Describe the epidemiological and therapeutic aspects of tuberculosis in children in Togo.\n\nThis retrospective, multicenter, descriptive cross-sectional study examined the files of children younger than 15 years who were diagnosed with TB and treatment in the Maritime region from 2008 to 2011.\n\nThe study included 74 children aged 0-15 years, for an average of 18 cases of childhood tuberculosis annually. Pulmonary tuberculosis (38 cases) was the most common. TB-HIV co-infection was found in 14.9% of cases. Boys accounted for more than half of the patients. The age range of 11-15 years accounted for the highest proportion of cases (41.9%). The most common treatment was a combination of 2RHZE and 4RH (25 children, 33.8%). Laboratory monitoring was satisfactory. In all, 56 (75.7%) children were cured, and 14 (18.2%) lost to follow-up, while 3 (4%) died (all with TB\/HIV).\n\n#Active testing for HIV infection is essential in children with TB, because the combination of the two can be lethal.\nhttps:\/\/pubmed.ncbi.nlm.nih.gov\/27694091\/","d7ec4a2d":"#Togo: Art against Covid-19\n\nTogolese artists paint the streets of the capital Lom\u00e9 to make people aware of the prevention of the new coronavirus. The work also aims to honor doctors who are on the front lines against Covid-19.https:\/\/translate.google.com.br\/translate?hl=en&sl=pt&u=https:\/\/www.dw.com\/pt-002\/togo-arte-contra-a-covid-19\/av-54689517&prev=search&pto=aue\n\nWASHINGTON, April 29, 2020 \u2013 The World Bank approved $8.1 million in financing from the International Development Association (IDA) to help Togo combat COVID-19 (coronavirus) and better respond to public health emergencies.\n\nThe COVID-19 Emergency Response Project will help the Government of Togo strengthen epidemiological surveillance, early detection, and confirmation of cases. It has just stepped up the work underway in the context of the Regional Disease Surveillance Systems Enhancement (REDISSE) Project. The project will expand screening and patient care capacity by building the capacity of personnel involved in the response effort, strengthening the surveillance capacity of laboratories, and facilitating the procurement of personal protective equipment and medical equipment, including resuscitation equipment.\n\n\u201cCOVID-19 is placing a heavy burden on hospital and outpatient health services, which are on the front lines. The needs remain great, despite the work already done by the government and its partners. This operation will certainly bolster Togo\u2019s capacity to respond to this pandemic,\u201d https:\/\/www.worldbank.org\/en\/news\/press-release\/2020\/04\/29\/togo-receives-8-1-million-to-combat-the-coronavirus"}}