{"cell_type":{"dfb945ba":"code","47e17106":"code","74c5a403":"code","dc693708":"code","2a99be6b":"code","5aee1ee5":"code","2413d3dd":"code","604f8c8f":"code","71b76479":"code","fa266982":"code","5444af5d":"code","c03089b5":"code","e350bbbd":"code","f35b2e00":"code","33a92477":"code","ac1fc74a":"code","b1e6a937":"code","63640314":"code","d3db8aeb":"code","f8d2d328":"code","4659840b":"code","3b1d0c7f":"code","9eb5fedd":"code","dcde6e3c":"code","69795456":"code","ef12125d":"code","51c45f42":"code","74b3e6ac":"code","f5a49f95":"code","486408a6":"code","413373ff":"code","b236feaa":"code","8b84b364":"code","967ad8ca":"code","2a137711":"code","3b3847fc":"code","0983b1ea":"code","6269d5f5":"code","7cea594d":"code","9f210bb1":"code","2aca477e":"code","35ae4ff2":"code","6b19eb81":"code","87007ad0":"markdown","00974e6a":"markdown","f2b5d236":"markdown","14f8fc32":"markdown","5566d23e":"markdown","5d85550e":"markdown","6260b560":"markdown","4e137e72":"markdown","33590121":"markdown","bcbb4807":"markdown"},"source":{"dfb945ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","47e17106":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport re","74c5a403":"train_df = pd.read_csv(\"\/kaggle\/input\/tmdb-box-office-prediction\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/tmdb-box-office-prediction\/test.csv\")\ntrain_df.sample(5)","dc693708":"train_df.isna().sum()","2a99be6b":"train_df.shape","5aee1ee5":"train_df.budget[:10]","2413d3dd":"train_df.budget = train_df.budget.replace(0,train_df.budget.median())\ntrain_df.budget[:10]","604f8c8f":"train_df.budget.corr(train_df.revenue)","71b76479":"# lets get to know the distribution of the Age\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(24,6)\nsns.distplot(train_df.budget)","fa266982":"train_df.genres[0:10]","5444af5d":"def get_dictionary(s):\n    try:\n        d = eval(s)\n    except:\n        d = {}\n    return d\n\ntrain_df['genres_name'] = train_df['genres'].apply(lambda x: sorted([d['name'] for d in get_dictionary(x)])).apply(lambda x: ','.join(x))\n\ngenres = train_df.genres_name.str.get_dummies(sep=',')\ngenres.head()\n","c03089b5":"train_df = pd.concat([train_df, genres], axis =1)","e350bbbd":"train_df.original_title[:10]","f35b2e00":"train_df['original_title_len'] = train_df.original_title.apply(lambda x: len(x) )\ntrain_df.head(5)","33a92477":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(24,6)\nsns.distplot(train_df.original_title_len)","ac1fc74a":"train_df.release_date[:10]","b1e6a937":"train_df[\"Year\"] = train_df.release_date.apply(lambda x: int(x.split('\/')[2]))\ntrain_df.loc[((train_df[\"Year\"] <=19) & (train_df[\"Year\"] <100)), \"Year\"] += 2000\ntrain_df.loc[((train_df[\"Year\"] >19) & (train_df[\"Year\"] <100)), \"Year\"] += 1900\n\ntrain_df.sample(5)","63640314":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(24,6)\nsns.distplot(train_df.Year)","d3db8aeb":"train_df.runtime[:10]","f8d2d328":"train_df.runtime = train_df.runtime.fillna(train_df.runtime.mean())","4659840b":"\nsns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(24,6)\nsns.distplot(train_df.runtime)","3b1d0c7f":"set(train_df.status)","9eb5fedd":"objects = set(train_df.status)\ny_pos = np.arange(len(objects))\nperformance = [((train_df.status == 'Released').sum()), ((train_df.status == 'Rumored').sum())]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.ylabel('Count')\nplt.title('Genres')\n\nplt.show()","dcde6e3c":"train_df.tagline[:10]","69795456":"train_df['tagline_boolean'] = train_df.tagline.isna()","ef12125d":"set(train_df['tagline_boolean'])","51c45f42":"objects = set(train_df['tagline_boolean'])\ny_pos = np.arange(len(objects))\nperformance = [((train_df['tagline_boolean'] == False).sum()), ((train_df['tagline_boolean']).sum())]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.ylabel('Count')\nplt.title('Is There a tagline?')\n\nplt.show()","74b3e6ac":"train_df.title[:10]","f5a49f95":"train_df[\"sequel\"] = train_df.title.apply(lambda x: bool(re.search(r'\\d', x)) )","486408a6":"set(train_df['sequel'])","413373ff":"objects = set(train_df['sequel'])\ny_pos = np.arange(len(objects))\nperformance = [((train_df['sequel'] == False).sum()), ((train_df['sequel']).sum())]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.ylabel('Count')\nplt.title('Is it a sequel?')\n\nplt.show()","b236feaa":"from sklearn.preprocessing import LabelEncoder","8b84b364":"train_df.head(5)","967ad8ca":"train_df.columns","2a137711":"Selcol = ['budget', 'original_language', 'runtime', 'original_title_len', 'Action', 'Adventure', 'Animation', 'Comedy', 'Crime',\n       'Documentary', 'Drama', 'Family', 'Fantasy', 'Foreign', 'History',\n       'Horror', 'Music', 'Mystery', 'Romance', 'Science Fiction', 'TV Movie',\n       'Thriller', 'War', 'Western', 'tagline_boolean', 'sequel', 'Year']","3b3847fc":"# label encoder\nle = LabelEncoder()\nobj_columns = [col for col in train_df[Selcol].select_dtypes(include = ['object'])]","0983b1ea":"# applying label encoder\nfor col in obj_columns:\n    train_df[col] = le.fit_transform(train_df[col])\n","6269d5f5":"from sklearn.linear_model import LinearRegression","7cea594d":"model = LinearRegression()\nmodel = model.fit(train_df[Selcol], train_df[\"revenue\"])","9f210bb1":"train_df['predicted_revenue'] = pd.DataFrame(model.predict(train_df[Selcol]))","2aca477e":"train_df[\"error_square\"] = (  train_df[\"revenue\"] -   train_df['predicted_revenue'] )**2","35ae4ff2":"((train_df[\"error_square\"].mean())**0.5)","6b19eb81":"from sklearn import metrics\nmetrics.r2_score(train_df[\"revenue\"], train_df[\"predicted_revenue\"])","87007ad0":"# 8. Title","00974e6a":"# 3. Original_title","f2b5d236":"# 1. Budget","14f8fc32":"# 7. Tagline","5566d23e":"# Modelling","5d85550e":"# 4. Release Date","6260b560":"# 6. Status","4e137e72":"# Preprocessing","33590121":"# 2. Generes","bcbb4807":"# 5. Runtime"}}