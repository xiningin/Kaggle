{"cell_type":{"bbf2909c":"code","f35ee02f":"code","4b03da07":"code","01b278a6":"code","27349d47":"code","8e3aa692":"code","31666919":"code","c1301393":"code","6218ee8f":"code","18eebdbf":"code","42adbfa8":"code","a60fa0a9":"code","eb86a1a9":"code","350335af":"code","e99aae8f":"code","d7612754":"code","a1b188fc":"code","190f5ed6":"code","61c0fd45":"code","8fdbc0f9":"code","c0fddfa7":"code","21cfd092":"code","fc0eb459":"code","4503c509":"code","55421568":"code","d02bad4a":"code","97bc6ce1":"code","6f14c21b":"code","09c95187":"code","1672dd42":"code","86271541":"code","6845e421":"code","686951ce":"code","269721ac":"code","bbb72166":"code","f4fe74a3":"code","801912f1":"code","6a4db179":"markdown","5b3333d0":"markdown","1bd2cf36":"markdown","c3abca0c":"markdown","6ff52466":"markdown","aac45544":"markdown","a99242d9":"markdown","668de9cb":"markdown"},"source":{"bbf2909c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f35ee02f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt,matplotlib.image as mping\nimport seaborn as sns","4b03da07":"df_train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ndf_test =  pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","01b278a6":"df_train.info()","27349d47":"df_test.info()","8e3aa692":"df_train.iloc[:,0].unique()","31666919":"sns.countplot(df_train.iloc[:,0])","c1301393":"y = df_train.iloc[:,0]\nX = df_train.iloc[:,1:]","6218ee8f":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2 , random_state = 42)","18eebdbf":"y_train.value_counts(normalize=True)","42adbfa8":"y_test.value_counts(normalize=True)","a60fa0a9":"from sklearn.tree import DecisionTreeClassifier","eb86a1a9":"tree = DecisionTreeClassifier().fit(X_train,y_train)\ny_pred = tree.predict(X_test)","350335af":"from sklearn.metrics import accuracy_score,classification_report,plot_confusion_matrix,confusion_matrix","e99aae8f":"accuracy_score(y_test,y_pred)","d7612754":"from sklearn.ensemble import RandomForestClassifier","a1b188fc":"random_classifier =  RandomForestClassifier(random_state=42).fit(X_train,y_train)\nrandom_classifier.score(X_test,y_test)","190f5ed6":"from sklearn.ensemble import BaggingClassifier\nbagging_clf = BaggingClassifier(base_estimator=DecisionTreeClassifier(),n_estimators=100,oob_score=True,random_state=42).fit(X_train,y_train)","61c0fd45":"bagging_clf.score(X_test,y_test)","8fdbc0f9":"from sklearn.svm import SVC","c0fddfa7":"svm_parameter = SVC(C= 10,degree = 3,gamma = 'scale',random_state=42).fit(X_train,y_train)","21cfd092":"y_pred = svm_parameter.predict(X_test)","fc0eb459":"accuracy_score(y_test,y_pred)","4503c509":"confusion_matrix(y_test,y_pred)","55421568":"cm = confusion_matrix(y_test,y_pred)\nsns.heatmap(cm, annot=True)","d02bad4a":"print(classification_report(y_test,y_pred))","97bc6ce1":"## here we can see that the svm has get most accuracy\n## we are going to use svm model for predication","6f14c21b":"df_test","09c95187":"X_test_data = df_test.iloc[:,:]","1672dd42":"y_pred_data = svm_parameter.predict(X_test_data)","86271541":"y_pred_data = y_pred_data.reshape(-1,1)","6845e421":"df_sample_data = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","686951ce":"df_pred = pd.DataFrame(y_pred_data,columns=['Label'])","269721ac":"df_sample_data = df_sample_data.drop(columns=['Label'])","bbb72166":"sample_data = pd.concat([df_sample_data,df_pred],axis=1)","f4fe74a3":"sample_data.info()","801912f1":"sample_data.to_csv('result.csv')","6a4db179":"# Digit Recognizer","5b3333d0":"## Training the Random Forest Classifier on the Training set","1bd2cf36":"## Training Baggingclassifier on the Training set","c3abca0c":"## Importing the libraries","6ff52466":"## Training Decision Tree Classifier on the Training set","aac45544":"## Splitting the dataset into the Training set and Test set","a99242d9":"## Support Vector Machine","668de9cb":"## Importing the dataset"}}