{"cell_type":{"0969170a":"code","f94f2ad1":"code","fb037410":"code","3b11c237":"code","144ba3cf":"code","2c44321e":"code","d87f1d1d":"code","3754e524":"code","8aefa26e":"code","980a16a0":"code","4db6f6fc":"code","f808c16a":"code","42dce34d":"code","fba26726":"code","e0df18ea":"code","396b0e3e":"code","65de7210":"code","00b5abe1":"code","177c13aa":"code","b8a37a0d":"code","3c132942":"code","36861f19":"markdown","ff1a0233":"markdown","2f579fd8":"markdown","f3fb3c42":"markdown","75888efd":"markdown","c22b46e2":"markdown","cbc96a98":"markdown","d11af7e8":"markdown","bd414167":"markdown","ce9a666e":"markdown","833b73b1":"markdown","6e69cdc0":"markdown","6efb60f6":"markdown","f727bf04":"markdown","ae633b3b":"markdown","c86f23a3":"markdown","10b05a83":"markdown","d03c5903":"markdown","41a393c7":"markdown"},"source":{"0969170a":"# Importing necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nsns.set()","f94f2ad1":"# Reading the dataset\nchl_data = pd.read_csv('..\/input\/cholera-dataset\/data.csv')\nchl_data.head()","fb037410":"print(\"Shape of data: \",chl_data.shape)","3b11c237":"chl_data['Country'].value_counts()","144ba3cf":"chl_data['WHO Region'].value_counts()","2c44321e":"chl_data.columns","d87f1d1d":"# A Simple Column Names\nchl_data = chl_data.rename(columns={\"Number of reported cases of cholera\":\"Cases\",\n                                   \"Number of reported deaths from cholera\":\"Deaths\",\n                                   \"Cholera case fatality rate\":\"Fatality Rate\"})","3754e524":"# Count of Null Data\nchl_data.isnull().sum()","8aefa26e":"# Filling NULL with '0'\nchl_data['Cases'] = chl_data['Cases'].fillna('0')\nchl_data['Deaths'] = chl_data['Deaths'].fillna('0')\nchl_data['Fatality Rate'] = chl_data['Fatality Rate'].fillna('0')\n\n# Replacing 'Unknown' Values with '0'\nchl_data['Cases'] = chl_data['Cases'].replace('Unknown', '0')\nchl_data['Deaths'] = chl_data['Deaths'].replace('Unknown', '0')\nchl_data['Fatality Rate'] = chl_data['Fatality Rate'].replace('Unknown', '0')\n\n# Removing WhiteSpaces \nchl_data['Cases'] = chl_data['Cases'].str.replace(\" \",\"\")\nchl_data['Deaths'] = chl_data['Deaths'].str.replace(\" \",\"\")\nchl_data['Fatality Rate'] = chl_data['Fatality Rate'].str.replace(\" \",\"\")","980a16a0":"# Info about Dataframe\nchl_data.info()","4db6f6fc":"# Converting 'Cases' & 'Deaths' Dtype from Object to int\nchl_data['Cases'] = chl_data['Cases'].astype(int)\nchl_data['Deaths'] = chl_data['Deaths'].astype(int)","f808c16a":"# Creating Dataframe w.r.t. Countries\na = ['Country']\nb = ['Cases','Deaths']\ncountry_wise = chl_data.groupby(a)[b].sum()\n\n# Creating Dataframe w.r.t. Regions\na = ['WHO Region']\nb = ['Cases','Deaths']\nregion_wise = chl_data.groupby(a)[b].sum()","42dce34d":"# Creating New columns(Fatality Rate, Recovery, and Recvery Rate) for **Country DataFrame**\ncountry_wise[\"Fatality Rate\"] = np.round(100*country_wise[\"Deaths\"]\/country_wise[\"Cases\"],2)\ncountry_wise[\"Recovery\"] = country_wise[\"Cases\"] - country_wise[\"Deaths\"]\ncountry_wise[\"Recovery Rate\"] = np.round(100*(country_wise[\"Cases\"] - country_wise[\"Deaths\"])\/country_wise[\"Cases\"],2)\ncountry_wise = country_wise[[ 'Cases', 'Recovery', 'Deaths', 'Recovery Rate', 'Fatality Rate']]\n\n# Creating New columns(Fatality Rate, Recovery, and Recvery Rate) for **Region DataFrame**\nregion_wise[\"Fatality Rate\"] = np.round(100*region_wise[\"Deaths\"]\/region_wise[\"Cases\"],2)\nregion_wise[\"Recovery\"] = region_wise[\"Cases\"] - region_wise[\"Deaths\"]\nregion_wise[\"Recovery Rate\"] = np.round(100*(region_wise[\"Cases\"] - region_wise[\"Deaths\"])\/region_wise[\"Cases\"],2)\nregion_wise = region_wise[[ 'Cases', 'Recovery', 'Deaths', 'Recovery Rate', 'Fatality Rate']]\n\n# Sorting both DataFrames w.r.t **Cases**\ncountry_wise = country_wise.sort_values(by=['Cases'], ascending=False)\nregion_wise = region_wise.sort_values(by=['Cases'], ascending=False)","fba26726":"country_wise.style.background_gradient(cmap='Blues',subset=[\"Cases\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"Recovery\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"Deaths\"])\\\n                        .background_gradient(cmap='CMRmap',subset=[\"Recovery Rate\"])\\\n                        .background_gradient(cmap='Greys',subset=[\"Fatality Rate\"])\\\n                        .format(\"{:.0f}\",subset=[\"Cases\", \"Recovery\", \"Deaths\", \"Recovery Rate\", \"Fatality Rate\"])","e0df18ea":"region_wise.style.background_gradient(cmap='Blues',subset=[\"Cases\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"Recovery\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"Deaths\"])\\\n                        .background_gradient(cmap='CMRmap',subset=[\"Recovery Rate\"])\\\n                        .background_gradient(cmap='Greys',subset=[\"Fatality Rate\"])\\\n                        .format(\"{:.0f}\",subset=[\"Cases\", \"Recovery\", \"Deaths\", \"Recovery Rate\", \"Fatality Rate\"])","396b0e3e":"# Reseting Index for Countries DataFrames\ncountry_wise = country_wise.reset_index()\n\n# Plot for Number of Cases\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 5)\nplt.xticks(rotation=90);\nsns.barplot(y = country_wise.sort_values('Cases')[\"Country\"].values[-10:],\n            x = country_wise.sort_values('Cases')[\"Cases\"].values[-10:],\n           color=\"#8ABAD3FF\")\nax.set_xlabel('Cases', fontsize=15)\nax.set_ylabel('Country', fontsize=15)\nax.set_title('Top 10 Countries (Discovered Cases)', fontsize=15)\n\n# Plot for Number of Recoveries\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 5)\nplt.xticks(rotation=90);\nsns.barplot(y = country_wise.sort_values('Recovery')[\"Country\"].values[-10:],\n            x = country_wise.sort_values('Recovery')[\"Recovery\"].values[-10:],\n           color=\"#339E66FF\")\nax.set_xlabel('Recovery Cases', fontsize=15)\nax.set_ylabel('Country', fontsize=15)\nax.set_title('Top 10 Countries (Recovery)', fontsize=15)\n\n# Plot for Number of Deaths\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 5)\nplt.xticks(rotation=90);\nsns.barplot(y = country_wise.sort_values('Deaths')[\"Country\"].values[-10:],\n            x = country_wise.sort_values('Deaths')[\"Deaths\"].values[-10:],\n           color=\"#EE2737FF\")\nax.set_xlabel('Deaths Cases', fontsize=15)\nax.set_ylabel('Country', fontsize=15)\nax.set_title('Top 10 Countries (Deaths)', fontsize=15)","65de7210":"plt.figure(figsize=(9,9))\nsns.heatmap(country_wise.corr(),annot=True,cmap='RdYlGn')\nplt.tick_params(size=5,labelsize = 13,rotation=90)\nplt.show()","00b5abe1":"# Listing the Countries Names\ncountry_list = country_wise.sort_values('Cases')[\"Country\"].values[-10:]\n\n# Ploting with Some Preprocessing\nfor country_name in country_list:\n    df = chl_data[chl_data['Country'] == country_name]\n    df = df.sort_values('Year')\n    x = df['Cases']\n    y = df['Deaths']\n    x.reset_index(drop=True)\n    case = 0\n    death = 0\n    cases = []\n    deaths = []\n    for i in range(len(x)):\n        case = case + x.iloc[i]\n        death = death + y.iloc[i]\n        cases.append(case)\n        deaths.append(death)\n    df['Total Cases'] = cases\n    df['Total Deaths'] = deaths\n    max_total_cases_yr = df['Year'].max()\n    max_total_cases = float(df[df['Year'] == max_total_cases_yr]['Total Cases'])\n    max_total_deaths = float(df[df['Year'] == max_total_cases_yr]['Total Deaths'])\n    if df['Cases'].sum() >= 0 and df.shape[0] > 5:\n        fig, ax = plt.subplots()\n        df.plot(x='Year', y='Total Cases', ax=ax)\n        df.plot(x='Year', y='Total Deaths', ax=ax)\n        plt.scatter(x= [max_total_cases_yr], y=[max_total_cases], s=70, clip_on=False, linewidth=0)\n        plt.annotate(int(max_total_cases), xy=[max_total_cases_yr, max_total_cases], xytext=[7, -2], textcoords='offset points')\n        plt.scatter(x= [max_total_cases_yr], y=[max_total_deaths], s=70, clip_on=False, linewidth=0)\n        plt.annotate(int(max_total_deaths), xy=[max_total_cases_yr, max_total_deaths], xytext=[7, -2], textcoords='offset points')\n        ax.set_title(country_name)","177c13aa":"# Listing WHO Regions Names\nregion_wise = region_wise.reset_index()\nregion_list = region_wise.sort_values('Deaths')[\"WHO Region\"]\n\ndf_region = chl_data.groupby(['WHO Region', 'Year']).sum()\ndf_region = df_region.reset_index()\n\nfor region_name in region_list:\n    df = df_region[df_region['WHO Region'] == region_name]\n    df = df.sort_values('Year')\n    x = df['Cases']\n    y = df['Deaths']\n    x.reset_index(drop=True)\n    case = 0\n    death = 0\n    cases = []\n    deaths = []\n    for i in range(len(x)):\n        case = case + x.iloc[i]\n        death = death + y.iloc[i]\n        cases.append(case)\n        deaths.append(death)\n    df['Total Cases'] = cases\n    df['Total Deaths'] = deaths\n    max_total_cases_yr = df['Year'].max()\n    max_total_cases = float(df[df['Year'] == max_total_cases_yr]['Total Cases'])\n    max_total_deaths = float(df[df['Year'] == max_total_cases_yr]['Total Deaths'])\n    if df['Cases'].sum() >= 0:\n        fig, ax = plt.subplots()\n        df.plot(x='Year', y='Total Cases', ax=ax)\n        df.plot(x='Year', y='Total Deaths', ax=ax)\n        plt.scatter(x= [max_total_cases_yr], y=[max_total_cases], s=70, clip_on=False, linewidth=0)\n        plt.annotate(int(max_total_cases), xy=[max_total_cases_yr, max_total_cases], xytext=[7, -2], textcoords='offset points')\n        plt.scatter(x= [max_total_cases_yr], y=[max_total_deaths], s=70, clip_on=False, linewidth=0)\n        plt.annotate(int(max_total_deaths), xy=[max_total_cases_yr, max_total_deaths], xytext=[7, -2], textcoords='offset points')\n        ax.set_title(region_name)","b8a37a0d":"fig = px.scatter(\n    data_frame=chl_data, \n    x=\"Deaths\", \n    y=\"Cases\", \n    animation_frame=\"Year\", \n    animation_group=\"Country\", \n    color=\"Country\",\n    size = \"Cases\",\n    hover_name=\"Country\", \n    facet_col=\"WHO Region\",\n    size_max=45,\n    category_orders={'Year':list(range(1980,2010))}     \n)\nfig.show()","3c132942":"fig, ax = plt.subplots()\nchl_data[chl_data['Country'] == 'India'].plot(x='Year', y='Cases', ax=ax, legend=False)\nchl_data[chl_data['Country'] == 'India'].plot(x='Year', y='Deaths', ax=ax, legend=False)\nax.set_title(\"India\")","36861f19":"## <font style=\"color:#9e7fec\">Author:<\/font>\n<font style=\"color:red;font-size:20px\"><b>ABHISHEK<\/b><\/font>\n\n### Contact with me:\n* <font style=\"color:#7fecde; font-size:20px;line-height:24px;\">Follow me on <a href='https:\/\/www.linkedin.com\/in\/abhishek-5b642580\/'>LinkedIn<\/a>.<\/font>\n* <font style=\"color:#7fecde; font-size:20px;line-height:24px;\">Follow me on <a href='https:\/\/www.kaggle.com\/iabhishekmaurya'>Kaggle<\/a>.<\/font>\n* <font style=\"color:#7fecde; font-size:20px;line-height:24px;\">My other Work:<ul>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/used-car-price-prediction'>Used Car Price Pridiction <\/a><a href='https:\/\/used-car-price-pred.herokuapp.com\/'>  (Deployed Link)<\/a><\/li>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/exploration-placement-data'>Exploration Series<\/a><\/li>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/notebooks'>More NoteBooks<\/a><\/li>\n<\/ul> <\/font>\n<hr>\n\n<font style=\"color:orange;font-size:18px\"><b>A Humble Request: IF you liked my work <\/b><\/font>\n<font style=\"color:red;font-size:18px\"><b>DO GIVE UPVOTE<\/b><\/font>\n\n<font style=\"color:green;font-size:18px\">And Guess What, It won't cost any, instead Motivates ME<\/font>","ff1a0233":"## <font style=\"color:#9e7fec\">Upcoming More... Stay Connect:<\/font>\n\n<font style=\"color:orange;font-size:18px\"><b>A Humble Request: IF you liked my work <\/b><\/font>\n<font style=\"color:red;font-size:18px\"><b>DO GIVE UPVOTE<\/b><\/font>\n\n<font style=\"color:green;font-size:18px\">And Guess What, It won't cost any, instead Motivates ME<\/font>\n\n### Till then:\n <font style=\"color:#7fecde; font-size:20px;line-height:24px;\">My other Work:<ul>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/used-car-price-prediction'>Used Car Price Pridiction <\/a><a href='https:\/\/used-car-price-pred.herokuapp.com\/'>  (Deployed Link)<\/a><\/li>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/exploration-placement-data'>Exploration Series<\/a><\/li>\n  <li><a href='https:\/\/www.kaggle.com\/iabhishekmaurya\/notebooks'>More NoteBooks<\/a><\/li>\n<\/ul> <\/font>\n<hr>\n\n<font style=\"color:green;font-size:18px\">BE SAFE & HAPPY CODING \ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb<\/font>","2f579fd8":"# Cholera\n\n<hr>\n\n**Cholera** is a disease caused by bacteria that produce a watery **diarrhea** that can rapidly lead to **dehydration**.\n\nCholera is an **acute diarrhoeal disease** that can kill within hours if left untreated.\n\nA global strategy on cholera control with a target to reduce cholera deaths by 90% was launched in 2017.\n\nSafe oral cholera vaccines should be used in conjunction with improvements in water and sanitation to control cholera outbreaks and for prevention in areas known to be high risk for cholera.\n\n<div style=\"\">\n    <div style=\"width:70%\"><img src=\"https:\/\/images.medicinenet.com\/images\/article\/main_image\/cholera2.jpg\"\/><\/div>\n    \n<hr>\n\n## Overview:\nCholera is an acute diarrhoeal infection caused by eating or drinking food or water that is contaminated with the bacterium Vibrio cholerae. Cholera remains a global threat to public health and is an indicator of inequity and lack of social development. Researchers have estimated that every year, there are 1.3 to 4.0 million cases of cholera, and 21 000 to 143 000 deaths worldwide due to the infection.\n    \nCholera, caused by the bacteria Vibrio cholerae, is rare in the United States and other industrialized nations. However, globally, cholera cases have increased steadily since 2005 and the disease still occurs in many places including Africa, Southeast Asia, and Haiti. CDC responds to cholera outbreaks across the world using its Global Water, Sanitation and Hygiene (WASH) expertise.\n\nCholera can be life-threatening but it is easily prevented and treated. Travelers, public health and medical professionals and outbreak responders should be aware of areas with high rates of cholera, know how the disease spreads, and what to do to prevent it.\n    \n**Read More About it from Reference Links**    \n    \n## Illness and Symptoms (as per **CDC**):\nApproximately one in ten (5-10%) of infected persons will have severe cholera which in the early stages includes:\n* profuse watery diarrhea, sometimes described as \u201crice-water stools,\u201d\n* vomiting\n* rapid heart rate\n* loss of skin elasticity\n* dry mucous membranes\n* low blood pressure\n* thirst\n* muscle cramps\n* restlessness or irritability\n\n## Prevention:\n   \n* Most important prevention from **Cholera** is **Clean Water** and **Proper Sanitation**.\n\n* **Vacciantion** of Oral Cholera is other most effected prevention, according to **WHO**.\n    \n* Basic Hygienic Behaviours like **Washing Hand** with **Soap** frequently and mostly before and after food.\n    \n* Increasing your Immune Stanima also best for fighting Cholera (**YOGA** and **Meditation** are great way to have it)\n    \n## Vaccines:\nAccording to **WHO**, in year 2013 **OCV(Oral cholera vaccines)** creation took place and since than more than **50 Million** doses of these were given under different campaings.\n    \n <hr>  \n    \n### Dataset:\n**https:\/\/www.kaggle.com\/imdevskp\/cholera-dataset**<br>\nCholera Dataset by DevKumar KP\n\n<hr>\n    \n### Reference Sources:\n* [WHO](https:\/\/www.who.int\/news-room\/fact-sheets\/detail\/cholera)\n* [WHO](https:\/\/www.who.int\/health-topics\/cholera#tab=tab_1)\n* [CDC](https:\/\/www.cdc.gov\/cholera\/index.html)","f3fb3c42":"# Content :\n<hr>\n\n* [Cholera](#Cholera)\n* [Libraries\/Modules Imports](#Libraries\/Modules-Imports)\n* [Dataset and Some Basic Information of it](#Dataset-and-Some-Basic-Information-of-it)\n* [Some Preprocessing](#Some-Preprocessing)\n* [Basic Analysis](#Basic-Analysis)\n    * [Countries Record](#Countries-Record)\n    * [WHO Regions Report](#WHO-Regions-Report)\n* [Analysis With Visualization](#Analysis-With-Visualization)\n    * [Top 10 Countries](#Top-10-Countries)\n    * [Correlation](#Correlation)\n* [Time Graph](#Time-Graph)\n    * [Top 10 Countries](#Graphs-for-Top-10-Countries-w.r.t.-Cases)\n    * [WHO Regions](#Graphs-for-WHO-Regions-w.r.t.-Cases)\n* [Scatter plot: a stroll through time](#Scatter-plot-a-stroll-through-time)   \n* **[INDIA (MORE UPCOMING)](#INDIA)** ","75888efd":"# Dataset and Some Basic Information of it\n<hr>\n\nHere I worked on dataset of Cholera [Link](https:\/\/www.kaggle.com\/imdevskp\/cholera-dataset)","c22b46e2":"# INDIA \n## (more Upcoming)","cbc96a98":"# Analysis With Visualization\n<hr>\nNow, we will dive more in the data","d11af7e8":"# Basic Analysis\n<hr>\nRecord of Data w.r.t. Countries and WHO Regions","bd414167":"## Graphs for WHO Regions w.r.t. Cases\n<hr>","ce9a666e":"## Correlation \n<hr>\nI used **Heat Map** for it.","833b73b1":"# **Case Study: Cholera (Analysis, Comparison & Visualization)**","6e69cdc0":"## Scatter plot a stroll through time","6efb60f6":"## WHO Regions Report","f727bf04":"# Some Preprocessing \n<hr>\n\nIs Time for some **Data Preprocessing**","ae633b3b":"# Time Graph\n<hr>\n**Time Graphs** are best to understand the growth or decline in a long period.\n\nHere, I used **'Year'** column for that.","c86f23a3":"## Countries Record","10b05a83":"## Graphs for Top 10 Countries w.r.t. Cases\n<hr>","d03c5903":"## Top 10 Countries\n<hr>\nIt's better to find out **Top 10** Countries in terms of Numbers.","41a393c7":"# Libraries\/Modules Imports\n<hr>\n\n* **Numpy** - fundamental package for scientific computing (I would say Backbone)\n\n* **Pandas** - open source data analysis and manipulation tool\n\n* **Matplotlib** - Comprehensive library for interactive visualizations\n\n* **Seaborn** -  Python data visualization library based on matplotlib\n\n* **Plotly** - for interative plots"}}