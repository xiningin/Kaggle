{"cell_type":{"17a17eb8":"code","991c9f36":"code","bef17a87":"code","ffee394b":"code","2c9e1815":"code","d4d6316c":"code","299c23a7":"code","dd9ea9ad":"code","ac6b88b2":"code","a033901e":"code","a6a19fbc":"code","e034189b":"markdown","7d609a0a":"markdown","102c9739":"markdown","8aa86450":"markdown","018a93b6":"markdown","6e148f60":"markdown","7694e6de":"markdown","357e148d":"markdown","07dea46d":"markdown","275efcb0":"markdown","a4f62615":"markdown"},"source":{"17a17eb8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path=os.path.join(dirname, filename)\n        if 'train' in path:\n            __training_path=path\n        elif 'test' in path:\n            __test_path=path","991c9f36":"#loaded files\nprint(f'Training path:{__training_path}\\nTest path:{__test_path}')","bef17a87":"# Kaggle Environment Prepration\n#update kaggle env\nimport sys\n#you may update the environment that allow you to run the whole code\n!{sys.executable} -m pip install --upgrade scikit-learn==\"0.24.2\"","ffee394b":"#record this information if you need to run the Kernel internally\nimport sklearn; sklearn.show_versions()","2c9e1815":"def __load__data(__training_path, __test_path, concat=False):\n\t\"\"\"load data as input dataset\n\tparams: __training_path: the training path of input dataset\n\tparams: __test_path: the path of test dataset\n\tparams: if it is True, then it will concatinate the training and test dataset as output\n\treturns: generate final loaded dataset as dataset, input and test\n\t\"\"\"\n\t# LOAD DATA\n\timport pandas as pd\n\t__train_dataset = pd.read_csv(__training_path, delimiter=',')\n\t__test_dataset = pd.read_csv(__test_path, delimiter=',')\n\treturn __train_dataset, __test_dataset\n__train_dataset, __test_dataset = __load__data(__training_path, __test_path, concat=True)\n__train_dataset.head()","d4d6316c":"# STORE SUBMISSION RELEVANT COLUMNS\n__test_dataset_submission_columns = __test_dataset['id']","299c23a7":"# DISCARD IRRELEVANT COLUMNS\n__train_dataset.drop(['id'], axis=1, inplace=True)\n__test_dataset.drop(['id'], axis=1, inplace=True)","dd9ea9ad":"# DETACH TARGET\n__feature_train = __train_dataset.drop(['pressure'], axis=1)\n__target_train =__train_dataset['pressure']\n__feature_test = __test_dataset","ac6b88b2":"# MODEL\nimport numpy as np\nfrom lightgbm import LGBMRegressor\n__model = LGBMRegressor()\n__model.fit(__feature_train, __target_train) \n__y_pred = __model.predict(__feature_test)","a033901e":"# SUBMISSION\nsubmission = pd.DataFrame(columns=['id'], data=__test_dataset_submission_columns)\nsubmission['pressure'] = __y_pred\nsubmission.head()","a6a19fbc":"# save submission file\nsubmission.to_csv(\"kaggle_submission.csv\", index=False)","e034189b":"## LightGBM Regressor\nWe will use *LightGBM Regressor* which is constructing a gradient boosting model. We will use *lightgbm* package.\nMore detail about *LightGBM Regressor* can be found [here](https:\/\/lightgbm.readthedocs.io\/en\/latest\/pythonapi\/lightgbm.LGBMRegressor.html).","7d609a0a":"### Discard Irrelevant Columns\nIn the given input dataset there are <b>1<\/b> column that can be removed as follows:* id *.","102c9739":"# Submission File\nWe have to maintain the target columns in \"submission.csv\" which will be submitted as our prediction results.","8aa86450":"# About Competition\nMechanical ventilation is a clinician-intensive procedure that was prominently on display during the early days of the COVID-19 pandemic. Developing new methods for controlling mechanical ventilators is prohibitively expensive, even before reaching clinical trials. High-quality simulators could reduce this barrier.\n Current simulators are trained as an ensemble, where each model simulates a single lung setting. However, lungs and their attributes form a continuous space, so a parametric approach must be explored that would consider the differences in patient lungs.\n The team at Google Brain aims to grow the community around machine learning for mechanical ventilation control. They believe neural networks and deep learning can better generalize across lungs with varying characteristics.\n In this competition, you\u2019ll simulate a ventilator connected to a sedated patient's lung. The best submissions will take lung attributes compliance and resistance into account.Competition file is available [here](https:\/\/www.kaggle.com\/c\/ventilator-pressure-prediction).","018a93b6":"## Input Dataset","6e148f60":"# Load Competition Dataset","7694e6de":"<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/1\/16\/Closed_circuit_ventilators.gif\"\/>\n<center>Image Source: Tabletop Whale: Explaining ventilators for COVID-19 http:\/\/tabletopwhale.com\/2020\/04\/01\/explaining-ventilators-for-covid-19.html<\/center>","357e148d":"### Target Column\nThe target column is the value which we need to predict.\nTherefore, we need to detach the target columns in prediction.\nNote that if we don't drop this fields, it will generate a model with high accuracy on training and worst accuracy on test (because the value in test dataset is Null).\nHere is the list of *target column*: <b>pressure<\/b>","07dea46d":"Competition dataset located in \"\/kaggle\/input\"; This path defined by Kaggle to access the competition file. We will list two files from this path as input files.","275efcb0":"# Training Model and Prediction\nFirst, we will train a model based on preprocessed values of training data set.\nSecond, let's predict test values based on the trained model.","a4f62615":"# Input Dataset"}}