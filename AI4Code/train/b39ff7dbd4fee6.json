{"cell_type":{"87b21529":"code","a4af4cbc":"code","5e601856":"code","89a41297":"code","a114cf2a":"code","38d9a560":"code","c351aa9a":"code","acdf5d57":"code","4febe41b":"code","db650d61":"code","77c2c94d":"code","86d57f25":"code","0b0c802e":"code","80ea7167":"code","d21994ea":"code","a62b99b4":"code","adb183d8":"code","70948d4d":"code","d6f780db":"code","12ea8f48":"code","a9d1b990":"code","9b18ece3":"code","e7c89e6a":"code","09ce1a43":"code","fc277293":"markdown","30d3aef3":"markdown","a548d89e":"markdown","df7df6bf":"markdown","af37ebf9":"markdown","835110dc":"markdown"},"source":{"87b21529":"%%html\n<style> \n@import url('https:\/\/fonts.googleapis.com\/css?family=Monoton|Roboto&effect=3d-float|');\nbody {background-color:#f7e8e8;} \na,h4 {color:crimson; font-family:Roboto;}\nspan {color:black; text-shadow:4px 4px 4px #aaa;}\ndiv.output_prompt {color:crimson;} \ndiv.input_prompt {color:firebrick;} \ndiv.output_area pre,div.output_subarea {font-size:15px; color:crimson}\ndiv.output_stderr pre {background-color:#f7e8e8;}\n<\/style>","a4af4cbc":"import warnings; warnings.filterwarnings('ignore')\nimport scipy,h5py,pandas as pd,numpy as np,pylab as pl\nimport seaborn as sn,keras as ks,tensorflow as tf\nfrom scipy import misc\nfrom skimage.transform import resize\nfrom skimage import color,measure\nfrom IPython.core.magic import register_line_magic\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import OneHotEncoder\nnp.set_printoptions(precision=6)\npl.style.use('seaborn-whitegrid')\nfpath='..\/input\/traditional-decor-patterns\/'\nfw='weights.decor.hdf5'\nn=np.random.choice(484,size=6,replace=False)\nfrom keras.callbacks import ModelCheckpoint,EarlyStopping\nfrom keras.callbacks import ReduceLROnPlateau\nfrom keras.models import Sequential,load_model,Model\nfrom keras.layers import Input,Activation,Dense,LSTM\nfrom keras.layers import Flatten,Dropout,BatchNormalization\nfrom keras.layers import Conv2D,MaxPooling2D,GlobalMaxPooling2D\nfrom keras.layers import GlobalAveragePooling2D\nfrom keras.layers.advanced_activations import PReLU,LeakyReLU\nfrom keras.applications.resnet50 import \\\nResNet50,preprocess_input as rn50pi\nfrom keras.applications.inception_v3 import \\\nInceptionV3,preprocess_input as iv3pi\nfrom keras.applications.xception \\\nimport Xception,preprocess_input as xpi\nfrom keras.applications.inception_resnet_v2 import \\\nInceptionResNetV2,preprocess_input as iv2pi\nfrom keras import __version__\nprint('keras version:', __version__)\nprint('tensorflow version:',tf.__version__)","5e601856":"def ohe(x): \n    return OneHotEncoder(n_values='auto')\\\n           .fit(x.reshape(-1,1))\\\n           .transform(x.reshape(-1,1))\\\n           .toarray().astype('int64')\ndef tts(X,y): \n    x_train,x_test,y_train,y_test=\\\n    train_test_split(X,y,test_size=.2,random_state=1)\n    n=int(len(x_test)\/2)\n    x_valid,y_valid=x_test[:n],y_test[:n]\n    x_test,y_test=x_test[n:],y_test[n:]\n    return x_train,x_valid,x_test,y_train,y_valid,y_test\ndef history_plot(fit_history):\n    pl.figure(figsize=(12,10)); pl.subplot(211)\n    keys=list(fit_history.history.keys())[0:4]\n    pl.plot(fit_history.history[keys[0]],\n            color='crimson',label='train')\n    pl.plot(fit_history.history[keys[2]],\n            color='firebrick',label='valid')\n    pl.xlabel(\"Epochs\"); pl.ylabel(\"Loss\")\n    pl.legend(); pl.grid()\n    pl.title('Loss Function')     \n    pl.subplot(212)\n    pl.plot(fit_history.history[keys[1]],\n            color='crimson',label='train')\n    pl.plot(fit_history.history[keys[3]],\n            color='firebrick',label='valid')\n    pl.xlabel(\"Epochs\"); pl.ylabel(\"Accuracy\")    \n    pl.legend(); pl.grid()\n    pl.title('Accuracy'); pl.show()","89a41297":"data=pd.read_csv(fpath+'decor.csv')\nf=h5py.File(fpath+'DecorColorImages.h5','r')\nkeys=list(f.keys())\n[countries,decors,images,types]=\\\n[np.array(f[keys[i]]) for i in range(4)]\nsh=[el.shape for el in [countries,decors,images,types]]\ndata.loc[n]","a114cf2a":"images=images\/255\ngray_images=np.dot(images[...,:3],[.299,.587,.114])\nfig=pl.figure(figsize=(12,5))\nfor i,idx in enumerate(n):\n    ax=fig.add_subplot(2,3,i+1,xticks=[],yticks=[])\n    ax.imshow(gray_images[idx])\n    ax.set_title(data['country'][idx]+'; '+\\\n                 data['decor'][idx]+'; '+data['type'][idx])","38d9a560":"ccountries,cdecors,ctypes=\\\nohe(countries),ohe(decors),ohe(types)\nctargets=np.concatenate((ccountries,cdecors),axis=1)\nctargets=np.concatenate((ctargets,ctypes),axis=1)\npd.DataFrame([images.shape,gray_images.shape,\n              ccountries.shape,cdecors.shape,\n              ctypes.shape,ctargets.shape])","c351aa9a":"# spliting the data \n# Color Images \/ Countries \nx_train1,x_valid1,x_test1,\\\ny_train1,y_valid1,y_test1=tts(images,ccountries)\n# Grayscaled Images \/ Countries \nx_train2,x_valid2,x_test2,\\\ny_train2,y_valid2,y_test2=tts(gray_images,ccountries)\n# Color Images \/ Decors \nx_train3,x_valid3,x_test3,\\\ny_train3,y_valid3,y_test3=tts(images,cdecors)\n# Grayscaled Images \/ Decors \nx_train4,x_valid4,x_test4,\\\ny_train4,y_valid4,y_test4=tts(gray_images,cdecors)\n# Color Images \/ Multi-Label Targets\nx_train5,x_valid5,x_test5,\\\ny_train5,y_valid5,y_test5=tts(images,ctargets)\n# Grayscaled Images \/ Multi-Label Targets \nx_train6,x_valid6,x_test6,\\\ny_train6,y_valid6,y_test6=tts(gray_images,ctargets)\nsh=[el.shape for el in \\\n[x_train1,y_train1,x_valid1,y_valid1,x_test1,y_test1,\n x_train3,y_train3,x_valid3,y_valid3,x_test3,y_test3,\n x_train5,y_train5,x_valid5,y_valid5,x_test5,y_test5,\n x_train2,y_train2,x_valid2,y_valid2,x_test2,y_test2,\n x_train4,y_train4,x_valid4,y_valid4,x_test4,y_test4,\n x_train6,y_train6,x_valid6,y_valid6,x_test6,y_test6]]\npd.DataFrame(sh)","acdf5d57":"y_train5_list=[y_train5[:,:4],y_train5[:,4:11],y_train5[:,11:]]\ny_test5_list=[y_test5[:,:4],y_test5[:,4:11],y_test5[:,11:]]\ny_valid5_list=[y_valid5[:,:4],y_valid5[:,4:11],y_valid5[:,11:]]\ny_train6_list=[y_train6[:,:4],y_train6[:,4:11],y_train6[:,11:]]\ny_test6_list=[y_test6[:,:4],y_test6[:,4:11],y_test6[:,11:]]\ny_valid6_list=[y_valid6[:,:4],y_valid6[:,4:11],y_valid6[:,11:]]","4febe41b":"# creating bottleneck features\nresize_x_train3=np.array([scipy.misc.imresize(x_train3[i],(224,224,3)) \n                          for i in range(0,len(x_train3))]).astype('float32')\nresize_x_valid3=np.array([scipy.misc.imresize(x_valid3[i],(224,224,3)) \n                          for i in range(0,len(x_valid3))]).astype('float32')\nresize_x_test3=np.array([scipy.misc.imresize(x_test3[i],(224,224,3)) \n                          for i in range(0,len(x_test3))]).astype('float32')\nx_train_bn3=rn50pi(resize_x_train3)\nx_valid_bn3=rn50pi(resize_x_valid3)\nx_test_bn3=rn50pi(resize_x_test3)\nfn = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\nresnet50base_model=\\\nResNet50(weights=fn,include_top=False)\nx_train_bn3=resnet50base_model.predict(x_train_bn3)\nx_valid_bn3=resnet50base_model.predict(x_valid_bn3)\nx_test_bn3=resnet50base_model.predict(x_test_bn3)","db650d61":"sh=x_train_bn3.shape[1:]\ndef resnet50_model():\n    model=Sequential()\n    model.add(GlobalAveragePooling2D(input_shape=sh))    \n    model.add(Dense(2048))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))        \n    model.add(Dense(256))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))\n    model.add(Dense(7, activation='softmax'))   \n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',metrics=['accuracy'])\n    return model\nresnet50_model=resnet50_model()","77c2c94d":"checkpointer=ModelCheckpoint(filepath=fw,verbose=2,save_best_only=True)\nlr_reduction=ReduceLROnPlateau(monitor='val_loss',patience=10,\n                               verbose=2,factor=.5)\nestopping=EarlyStopping(monitor='val_loss',patience=16,verbose=2)\nhistory=\\\nresnet50_model.fit(x_train_bn3,y_train3,\n                   validation_data=(x_valid_bn3,y_valid3),\n                   epochs=100,batch_size=128,verbose=2,\n                   callbacks=[checkpointer,lr_reduction,estopping]);","86d57f25":"history_plot(history)\nresnet50_model.load_weights(fw)\nresnet50_scores=resnet50_model.evaluate(x_test_bn3,y_test3)\nprint(\"Accuracy: %.2f%%\"%(resnet50_scores[1]*100))\nresnet50_scores","0b0c802e":"resize_x_train1=np.array([scipy.misc.imresize(x_train1[i],(224,224,3)) \n                          for i in range(0,len(x_train1))]).astype('float32')\nresize_x_valid1=np.array([scipy.misc.imresize(x_valid1[i],(224,224,3)) \n                          for i in range(0,len(x_valid1))]).astype('float32')\nresize_x_test1=np.array([scipy.misc.imresize(x_test1[i],(224,224,3)) \n                         for i in range(0,len(x_test1))]).astype('float32')\nx_train_bn1=iv3pi(resize_x_train1)\nx_valid_bn1=iv3pi(resize_x_valid1)\nx_test_bn1=iv3pi(resize_x_test1)\nfn='..\/input\/inceptionv3\/inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5'\ninceptionv3base_model=\\\nInceptionV3(weights=fn,include_top=False)\nx_train_bn1=inceptionv3base_model.predict(x_train_bn1)\nx_valid_bn1=inceptionv3base_model.predict(x_valid_bn1)\nx_test_bn1=inceptionv3base_model.predict(x_test_bn1)","80ea7167":"sh=x_train_bn1.shape[1:]\ndef inception_v3_model():\n    model=Sequential()    \n    model.add(GlobalAveragePooling2D(input_shape=sh))    \n    model.add(Dense(2048))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.25))       \n    model.add(Dense(256))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.25))\n    model.add(Dense(4,activation='softmax'))    \n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',metrics=['accuracy'])\n    return model\ninception_v3_model=inception_v3_model()","d21994ea":"checkpointer=ModelCheckpoint(filepath=fw,verbose=2,save_best_only=True)\nlr_reduction=ReduceLROnPlateau(monitor='val_loss',patience=5,\n                               verbose=2,factor=.75)\nestopping=EarlyStopping(monitor='val_loss',patience=16,verbose=2)\nhistory=inception_v3_model.fit(x_train_bn1,y_train1,\n                               validation_data=(x_valid_bn1,y_valid1),\n                               epochs=100,batch_size=128,verbose=2,\n                               callbacks=[checkpointer,lr_reduction,estopping]);","a62b99b4":"history_plot(history)\ninception_v3_model.load_weights(fw)\ninception_v3_scores=inception_v3_model.evaluate(x_test_bn1,y_test1)\nprint(\"Accuracy: %.2f%%\" % (inception_v3_scores[1]*100))\ninception_v3_scores","adb183d8":"resize_x_train3=np.array([scipy.misc.imresize(x_train3[i],(71,71,3)) \n                         for i in range(0,len(x_train3))]).astype('float32')\nresize_x_valid3=np.array([scipy.misc.imresize(x_valid3[i],(71,71,3)) \n                           for i in range(0,len(x_valid3))]).astype('float32')\nresize_x_test3=np.array([scipy.misc.imresize(x_test3[i],(71,71,3)) \n                         for i in range(0,len(x_test3))]).astype('float32')\nx_train_bn3=xpi(resize_x_train3)\nx_valid_bn3=xpi(resize_x_valid3)\nx_test_bn3=xpi(resize_x_test3)\nfn='..\/input\/xception\/xception_weights_tf_dim_ordering_tf_kernels_notop.h5'\nxceptionbase_model=Xception(weights=fn,include_top=False)\nx_train_bn3=xceptionbase_model.predict(x_train_bn3)\nx_valid_bn3=xceptionbase_model.predict(x_valid_bn3)\nx_test_bn3=xceptionbase_model.predict(x_test_bn3)","70948d4d":"sh=x_train_bn3.shape[1:]\ndef xception_model():\n    model=Sequential()    \n    model.add(GlobalAveragePooling2D(input_shape=sh))   \n    model.add(Dense(2048))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))        \n    model.add(Dense(512))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))\n    model.add(Dense(7, activation='softmax'))    \n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',metrics=['accuracy'])\n    return model\nxception_model=xception_model()","d6f780db":"checkpointer=ModelCheckpoint(filepath=fw,verbose=2,save_best_only=True)\nlr_reduction=ReduceLROnPlateau(monitor='val_loss',patience=5,\n                               verbose=2,factor=.75)\nestopping=EarlyStopping(monitor='val_loss',patience=16,verbose=2)\nhistory=xception_model.fit(x_train_bn3,y_train3,\n                           validation_data=(x_valid_bn3,y_valid3),\n                           epochs=100,batch_size=128,verbose=2,\n                           callbacks=[checkpointer,lr_reduction,estopping]);","12ea8f48":"history_plot(history)\nxception_model.load_weights(fw)\nxception_scores=xception_model.evaluate(x_test_bn3,y_test3)\nprint(\"Accuracy: %.2f%%\"%(xception_scores[1]*100))\nxception_scores","a9d1b990":"resize_x_train1=np.array([scipy.misc.imresize(x_train1[i],(139,139,3)) \n                          for i in range(0,len(x_train1))]).astype('float32')\nresize_x_valid1=np.array([scipy.misc.imresize(x_valid1[i],(139,139,3)) \n                           for i in range(0,len(x_valid1))]).astype('float32')\nresize_x_test1=np.array([scipy.misc.imresize(x_test1[i],(139,139,3)) \n                         for i in range(0,len(x_test1))]).astype('float32')\nx_train_bn1=iv2pi(resize_x_train1)\nx_valid_bn1=iv2pi(resize_x_valid1)\nx_test_bn1=iv2pi(resize_x_test1)\nfn='..\/input\/inceptionresnetv2\/inception_resnet_v2_weights_tf_dim_ordering_tf_kernels_notop.h5'\ninceptionresnetv2base_model=\\\nInceptionResNetV2(weights=fn,include_top=False)\nx_train_bn1=inceptionresnetv2base_model.predict(x_train_bn1)\nx_valid_bn1=inceptionresnetv2base_model.predict(x_valid_bn1)\nx_test_bn1=inceptionresnetv2base_model.predict(x_test_bn1)","9b18ece3":"sh=x_train_bn1.shape[1:]\ndef inceptionresnetv2_model():\n    model=Sequential()   \n    model.add(GlobalAveragePooling2D(input_shape=sh))    \n    model.add(Dense(2048))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))        \n    model.add(Dense(256))\n    model.add(LeakyReLU(alpha=.02))\n    model.add(Dropout(.5))\n    model.add(Dense(4,activation='softmax'))     \n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',metrics=['accuracy'])\n    return model\ninceptionresnetv2_model=inceptionresnetv2_model()","e7c89e6a":"checkpointer=ModelCheckpoint(filepath=fw,verbose=2,save_best_only=True)\nlr_reduction=ReduceLROnPlateau(monitor='val_loss',patience=5,\n                               verbose=2,factor=.75)\nestopping=EarlyStopping(monitor='val_loss',patience=16,verbose=2)\nhistory=inceptionresnetv2_model\\\n.fit(x_train_bn1,y_train1,validation_data=(x_valid_bn1,y_valid1),\n     epochs=100,batch_size=128,verbose=2,\n     callbacks=[checkpointer,lr_reduction,estopping]);","09ce1a43":"history_plot(history)\ninceptionresnetv2_model.load_weights(fw)\ninceptionresnetv2_scores=\\\ninceptionresnetv2_model.evaluate(x_test_bn1,y_test1)\nprint(\"Accuracy: %.2f%%\"%(inceptionresnetv2_scores[1]*100))\ninceptionresnetv2_scores","fc277293":"<h1 class=\"font-effect-3d-float\" style=\"color:firebrick; font-family:'Monoton'; \">Data Preprocessing<\/h1>","30d3aef3":"## InceptionResNetV2","a548d89e":"<h1 class=\"font-effect-3d-float\" style=\"color:firebrick; font-family:'Monoton'; \">Classification Models<\/h1>\n## ResNet50","df7df6bf":"## Inception V3","af37ebf9":"## Xception","835110dc":"<h1 class=\"font-effect-3d-float\" style=\"color:firebrick; font-family:'Monoton'; \">Code Modules, Helpful Functions, Styling, and Links<\/h1>\n\n[GitHub Repository](https:\/\/github.com\/OlgaBelitskaya\/deep_learning_projects\/tree\/master\/DL_PP5) & [Colaboratory Version](https:\/\/colab.research.google.com\/drive\/1Tt3qZePsf2P6kNNao-hQ58DlG71Abj5a)"}}