{"cell_type":{"03dca643":"code","bb8f8a78":"code","ab6fc204":"code","71e92c43":"code","809129cf":"code","194701db":"code","4314f7b4":"code","8d4c2fc4":"code","e5559329":"code","c6197556":"code","19cf94cf":"code","b0a80494":"code","6355c117":"code","2a547df6":"code","1d21fc91":"code","9f221328":"code","ea2fc649":"code","98de8e9c":"code","ed3ffd59":"code","42193174":"code","84c4612a":"code","155b962d":"code","5cd4ae32":"markdown","d69b43d1":"markdown","7e7f7d91":"markdown","0e907db6":"markdown","09460fdd":"markdown","0f789bb4":"markdown"},"source":{"03dca643":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nimport os\nimport random","bb8f8a78":"# go to input dir of stocks and use one txt file for processing\n\nos.chdir('..\/input\/price-volume-data-for-all-us-stocks-etfs\/Stocks')","ab6fc204":"files=os.listdir()\nlen(files)","71e92c43":"\ndata=random.sample([x for x in files if x.endswith('txt') and x.startswith('cms')and os.path.getsize(x)>400000],1)","809129cf":"data","194701db":"for i in data:\n    df = pd.read_csv(i)\n","4314f7b4":"#set date column as index and drop from dataframe\ndf=df.set_index(df['Date'])\ndf.drop('Date',axis=1,inplace=True)\ndf.head()","8d4c2fc4":"df.shape","e5559329":"window_size=30\ntrain_data=df.iloc[:(7200+window_size), 0:1]\ntrain_data.shape","c6197556":"#preprocess data using Minmax sclaer\nscaler=preprocessing.MinMaxScaler()\ntrain_data_transform=scaler.fit_transform(np.array(train_data))","19cf94cf":"x_train,y_train=[],[]\nfor i in range(len(train_data_transform)-window_size):\n    x_train.append(train_data_transform[i:i+window_size])\n    y_train.append(train_data_transform[i+window_size])\n    ","b0a80494":"x_train=np.array(x_train)","6355c117":"y_train=np.array(y_train)\ny_train.shape","2a547df6":"model=tf.keras.models.Sequential(\n    [tf.keras.layers.LSTM(100,return_sequences=True,input_shape=(x_train.shape[1], x_train.shape[2])),\n     tf.keras.layers.Dropout(0.3),\n     tf.keras.layers.LSTM(50,return_sequences=True),\n     tf.keras.layers.Dropout(0.2),\n     tf.keras.layers.LSTM(50),\n     tf.keras.layers.Dropout(0.2),\n     tf.keras.layers.Dense(1)\n    ])\n\n\nmodel.summary()\nmodel.compile(optimizer='adam', loss='mean_squared_error',metrics=['accuracy'])","1d21fc91":"model.fit(x_train, y_train, epochs=13, batch_size=40)","9f221328":"train_data = df.iloc[ :int(7200)]\ntest_data = df.iloc[int(7200): ]\n        \n        # combining the dataset and taking final test_data shape.\ndata = pd.concat((train_data['Open'], test_data['Open']), axis=0)\n        # len(train_data) - window_size == 7242 - 10 == 7432.\n        # Hence, test_set starts from 7432 to take 7243 row as output.\ntest_input_shape = data[len(train_data) - window_size: ].values\ntest_input_shape = test_input_shape.reshape(-1,1)\ntest_input_shape = scaler.transform(test_input_shape) #only transforming the test data.\n        \nX_test = []\n        \nfor i in range(window_size, len(test_data)+window_size): \n    X_test.append(test_input_shape[i-window_size:i, 0])\n            \nX_test = np.array(X_test)","ea2fc649":"X_test.shape","98de8e9c":" #to make values compatible with lstm\nX_test = X_test.reshape(X_test.shape[0], X_test.shape[1], 1)","ed3ffd59":"prediction = model.predict(X_test)\n\nprediction_inverse = scaler.inverse_transform(prediction)","42193174":"prediction_inverse.shape","84c4612a":"\ny_test = df.iloc[int(7200): ,0:1].values\nplt.figure(figsize=(8,6))\nplt.plot(prediction_inverse, color='blue', label='Predicted value')\nplt.plot(y_test, color ='red', label='actual value')\nplt.legend()\nplt.show()\n\n","155b962d":"\nprint('Mean Absolute Error: ', mean_absolute_error(y_test, prediction_inverse))\nprint('Mean Squared Error: ', mean_squared_error(y_test, prediction_inverse))","5cd4ae32":"For timeseries prediction we need window size on which output will depend example if today's forecast depends on last ten days then window size will be 10","d69b43d1":"For train data we are only using open column and will predict future  stock open value","7e7f7d91":"#LSTM require data to be in 3d shape (samples,window_size,features)","0e907db6":"For predicting values for test data twe would need train input of  length =window size, so that we will able to predict first value of test data","09460fdd":"This note is all about univarient Time series prediction Using Tensorflow  framework and  LSTM ..Please upvote!","0f789bb4":"#data will be of type list , so we need to iterate thrpugh elements of data to read file"}}