{"cell_type":{"60d397fd":"code","ea532135":"code","0382d091":"code","d46f3414":"code","f0c9d874":"code","24c19b0d":"code","573b2519":"code","b3d582f9":"code","31a5dcc6":"code","fd432859":"code","463f4f78":"code","c6a7f21d":"code","ce5cf91f":"code","3c91c429":"code","5bbe58bc":"code","26b1eb31":"code","0798dd37":"code","e5d744ea":"code","e470f5da":"code","4a5fb34b":"code","fba08d83":"code","26e8795d":"code","20aa28f6":"code","120aa39c":"code","b1730f99":"code","1a8f7b2b":"code","bc500b8f":"code","428e3752":"code","6af15824":"code","144dcc5f":"code","19347215":"code","ed970f6a":"code","0ed967f7":"code","2ce40111":"code","e032cf4c":"code","176552d6":"code","44f6330b":"code","26dacb09":"code","890ee1da":"code","93148af1":"code","f306647e":"code","d4c1eeea":"code","4139701c":"code","6c3436b0":"code","d6815c3b":"code","6784c475":"code","82c5afa6":"code","33280414":"code","daee22ed":"code","796ce47a":"code","411f2478":"code","831ad6e2":"code","417065f4":"markdown","8159d2bf":"markdown","764c9a7a":"markdown","080233af":"markdown","3a805e72":"markdown","7521deac":"markdown","cc1bb1a3":"markdown","3e0d4fec":"markdown","1a213e7b":"markdown","169be44e":"markdown","84909017":"markdown","22e2a1bc":"markdown","837623b5":"markdown","a1a941c3":"markdown","e4def316":"markdown","42286ca5":"markdown","c515d614":"markdown","c0600997":"markdown","a1b4047c":"markdown","996ad122":"markdown","18d1a5bb":"markdown","e7f5b566":"markdown","7b8de071":"markdown","477c59f3":"markdown","4f9636cb":"markdown","354f1885":"markdown","bab23a36":"markdown","ed96c045":"markdown","bf28449f":"markdown","2aa66314":"markdown"},"source":{"60d397fd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\n%matplotlib inline\nparams={\"figure.facecolor\":(0.0,0.0,0.0,0),\n        \"axes.facecolor\":(1.0,1.0,1.0,1.0),\n        \"savefig.facecolor\":(0.0,0.0,0.0,0)}\nplt.rcParams.update(params)","ea532135":"df=pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\ndf.columns=df.columns.to_series().apply(lambda x:x.title() if x!=\"bmi\" else x.upper())\ndf.head()","0382d091":"df.shape","d46f3414":"df.info()","f0c9d874":"sns.scatterplot(x=df[\"Age\"],y=df[\"Charges\"],hue=df[\"Smoker\"],palette={\"yes\":\"salmon\",\"no\":\"skyblue\"})\nplt.legend(bbox_to_anchor=(1,0.5),loc=6)","24c19b0d":"sns.boxplot(x=df[\"Sex\"],y=df[\"Charges\"],palette={\"female\":\"lemonchiffon\",\"male\":\"lightgreen\"})","573b2519":"sns.scatterplot(x=df[\"BMI\"],y=df[\"Charges\"],hue=df[\"Smoker\"],palette={\"yes\":\"salmon\",\"no\":\"skyblue\"})\nplt.legend(bbox_to_anchor=(1,0.5),loc=6)","b3d582f9":"sns.boxplot(x=df[\"Children\"],y=df[\"Charges\"],palette=\"Set2\")","31a5dcc6":"sns.boxplot(x=df[\"Smoker\"],y=df[\"Charges\"],palette={\"yes\":\"salmon\",\"no\":\"skyblue\"})","fd432859":"sns.boxplot(x=df[\"Region\"],y=df[\"Charges\"],palette=\"Set3\")","463f4f78":"df[\"Sex\"]=pd.get_dummies(df[\"Sex\"],drop_first=True)\n#where 0=female and 1=male","c6a7f21d":"df[\"Smoker\"]=pd.get_dummies(df[\"Smoker\"],drop_first=True)\n#where 0=non-smoker and 1=smoker","ce5cf91f":"df_regions=pd.get_dummies(df[\"Region\"])\ndf=df.join(df_regions)\ndf.drop([\"Region\"],axis=1,inplace=True)","3c91c429":"df.head()","5bbe58bc":"sns.distplot(a=df[\"Charges\"],color=\"plum\",hist_kws=dict(edgecolor=\"black\",linewidth=2),bins=20,kde=False)","26b1eb31":"print(\"Charges have a skewness of {:.2f}.\".format(stats.skew(df[\"Charges\"])))","0798dd37":"df[\"Charges\"].describe()","e5d744ea":"plt.figure(figsize=(12,4))\nsns.boxplot(df[\"Charges\"],color=\"plum\")","e470f5da":"mask=np.zeros_like(df.corr(),dtype=np.bool)\nmask[np.triu_indices_from(mask)]=True\nsns.heatmap(df.corr(),annot=False,mask=mask,square=True,cmap=\"PuRd\",linewidths=1,linecolor=\"white\")","4a5fb34b":"df.corr()","fba08d83":"a=df[\"Charges\"].loc[df[\"Smoker\"]==1]\nb=df[\"Charges\"].loc[df[\"Smoker\"]==0]\n\nstats.ttest_ind(a,b)","26e8795d":"from sklearn.model_selection import train_test_split","20aa28f6":"x=df.drop([\"Charges\"],axis=1)\ny=df[\"Charges\"]","120aa39c":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=7)","b1730f99":"print(\"Training set x shape:\",x_train.shape,\"and y shape\",y_train.shape)\nprint(\"Testing set x shape:\",x_test.shape,\"and y shape\",y_test.shape)","1a8f7b2b":"from sklearn.preprocessing import StandardScaler","bc500b8f":"scaler=StandardScaler()","428e3752":"x_train=scaler.fit_transform(x_train)","6af15824":"x_test=scaler.transform(x_test)","144dcc5f":"from sklearn.feature_selection import SelectKBest,f_regression","19347215":"selector=SelectKBest(f_regression,k=\"all\")","ed970f6a":"x_selection=selector.fit(x_train,y_train)","0ed967f7":"x.columns","2ce40111":"x_selection.scores_","e032cf4c":"x_selection.pvalues_","176552d6":"from sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor","44f6330b":"from sklearn.model_selection import cross_val_score","26dacb09":"names=[\"LinearRegression\",\"kNN\",\"SVM\",\"RandomForest\"]\nmodels=[LinearRegression(),KNeighborsRegressor(),SVR(),RandomForestRegressor()]\nmeancross=[]\nstdcross=[]","890ee1da":"for model in models:\n    model=model\n    model.fit(x_train,y_train)\n    rcross=cross_val_score(model,x_train,y_train,cv=5)\n    meancross.append(rcross.mean())\n    stdcross.append(rcross.std())","93148af1":"results=pd.DataFrame({\"Name\":names,\"Model\":models,\"RCrossMean\":meancross,\"RCrossStd\":stdcross})\nresults.sort_values(\"RCrossMean\",ascending=False)","f306647e":"from sklearn.ensemble import BaggingRegressor,GradientBoostingRegressor,AdaBoostRegressor ","d4c1eeea":"names=[\"RandomForest\",\"Bagging\",\"GradientBoost\",\"AdaBoost\"]\nmodels=[RandomForestRegressor(),BaggingRegressor(),GradientBoostingRegressor(),AdaBoostRegressor()]\nmeancross=[]\nstdcross=[]","4139701c":"for model in models:\n    model=model\n    model.fit(x_train,y_train)\n    rcross=cross_val_score(model,x_train,y_train,cv=5)\n    meancross.append(rcross.mean())\n    stdcross.append(rcross.std())","6c3436b0":"results=pd.DataFrame({\"Name\":names,\"Model\":models,\"RCrossMean\":meancross,\"RCrossStd\":stdcross})\nresults.sort_values(\"RCrossMean\",ascending=False)","d6815c3b":"model=GradientBoostingRegressor()\nmodel.fit(x_train,y_train)\ny_predict=model.predict(x_test)","6784c475":"sns.distplot(y_test,color=\"yellowgreen\",label=\"Actual values\")\nsns.distplot(y_predict,color=\"lightcoral\",label=\"Predicted values\")\nplt.legend()\nplt.xlim([0,60000])","82c5afa6":"f,axes=plt.subplots(2,1,sharex=True)\nsns.boxplot(y_test,color=\"yellowgreen\",whis=5,ax=axes[0])\nsns.boxplot(y_predict,color=\"lightcoral\",whis=5,ax=axes[1])\naxes[0].set_xlabel(\"\")\nplt.xlabel(\"Charges\")\naxes[0].set_ylabel(\"Actual Price\")\naxes[1].set_ylabel(\"Predicted Price\")","33280414":"print(\"The model's score is {:.2f}.\".format(model.score(x_test,y_test)))","daee22ed":"a=y_test\nb=y_predict\n\nstats.ttest_ind(a,b)","796ce47a":"results=pd.DataFrame({\"Actual\":y_test,\"Predicted\":y_predict})\n\nsmin=[stats.tmin(results[i]) for i in results.columns]\nsmax=[stats.tmax(results[i]) for i in results.columns]\nsmean=[stats.tmean(results[i]) for i in results.columns]\nsstd=[stats.tstd(results[i]) for i in results.columns]\nsskew=[stats.skew(results[i]) for i in results.columns]\nskurtosis=[stats.kurtosis(results[i]) for i in results.columns]\n\nstable=pd.DataFrame({\"Min\":smin,\"Max\":smax,\"Mean\":smean,\"Standard Deviation\":sstd,\"Skew\":sskew,\"Kurtosis\":skurtosis},index=results.columns)\nstable","411f2478":"age=[0] # your age as a whole number\nsex=[0] # 0 if you are a female OR 1 if you are a male\nbmi=[0] # your calculated BMI as a whole or decimal number\nchildren=[0] # your number of children\/dependents as a whole number\nsmoker=[0] # 0 if you do not smoke OR 1 if you do smoke\nnortheast=[0] # 0 if you live in the northwest\/southeast\/southwest OR 1 if you live in the northeast\nnorthwest=[0] # 0 if you live in the northeast\/southeast\/southwest OR 1 if you live in the northwest\nsoutheast=[0] # 0 if you live in the northeast\/northwest\/southwest OR 1 if you live in the southeast\nsouthwest=[0] # 0 if you live in the northeast\/northwest\/southeast OR 1 if you live in the southwest","831ad6e2":"if (age==[0])&(sex==[0])&(bmi==[0])&(children==[0])&(smoker==[0])&(northeast==[0])&(northwest==[0])&(southeast==[0])&(southwest==[0]):\n    print(\"Your predicted medical costs is USD x.\")\nelse:\n    your_data=pd.DataFrame({\"Age\":age,\"Sex\":sex,\"BMI\":bmi,\"Children\":children,\"Smoker\":smoker,\"northeast\":northeast,\"northwest\":northwest,\"southeast\":southeast,\"southwest\":southwest})\n    your_data=scaler.transform(your_data)\n    your_costs=model.predict(your_data)\n    print(\"Your predicted medical costs is USD {:.2f}.\".format(your_costs[0]))","417065f4":"#### *Sex*","8159d2bf":"* Charges do not necessarily increase with BMI, it depends on if the individual smokes.","764c9a7a":"#### Number of *Children*","080233af":"* As discovered previously, smoking is a strong predictor with the largest score (1e+03) and smallest pvalue (8e-189). This is followed by age and BMI.\n* All of the nine variables are statistically significant with a pvalue of less than 0.05, so all the nine variables will be used in the model. Hence no need to transform the data.","3a805e72":"* On average there is no obvious relationship between the region and charges, but those in the southeast have a larger spread of higher charges.","7521deac":"* The charges can range from USD 1121 to USD 63770 with an average charge of USD 13270 and a right skewness of 1.51.\n* Charges are strongly correlated (0.79) and statistically significant (8e-283 pvalue) to whether the individual smokes or not.\n* Age and BMI are weakly correlated to charges; sex, number of children and region have almost no correlation with charges.","cc1bb1a3":"Does this value seem right to you?","3e0d4fec":"#### *Region*","1a213e7b":"Out of the ensemble models, GradientBoost performed the best even though - again - it has the second largest spread of cross validation scores.","169be44e":"Various regression models will be tested and evaluated based on their cross validated accuracy score:","84909017":"#### *Smoker* Status","22e2a1bc":"* Having more children may be more expensive than those with no or less children.","837623b5":"The dataset has 1338 observations\/individuals which can be described in the following seven features:\n\n* *Age*: the age of primary beneficiary\n\n* *Sex*: female or male\n\n* *BMI*: Body Mass Index (kg\/m^2), a BMI between 18.5 kg\/m^2 to 24.9 kg\/m^2 indicates a healthy individual while anything less indicates underweight and more indicates overweight\n\n* *Children*: the number of children\/dependents covered by insurance\n\n* *Smoker*: if the primary beneficiary smokes\n\n* *Region*: the beneficiary's residential area in the US (northeast, southeast, southwest, northwest)\n\n* *Charges*: medical costs billed by the insurance","a1a941c3":"The base model gave an accuracy score of almost 86% and can be improved by obtaining more data, conducting further feature selection (as we utilised all the features) and perfoming parameter tuning (we have only used the default parameters). Nevertheless the actual and predicted resulare not statistically different as while the minimum value is rather off, the maximum value, mean, standard deviation, skew and kurtosis of the actual and predicted values are still similar.","e4def316":"Try to predict your medical costs by inputting the relevant values in place for the '0's below:","42286ca5":"There are no null values, but there is a mixture of categorical and numerical features (the categorical features will later be changed into numerical format).","c515d614":"#### *Age*","c0600997":"There are nine independent variables that can predict the target variable, *Charges*, but not all nine will have the same predictive power. Based on their scores (larger is better) and pvalues (smaller is better) it can then be decided if all nine or a selection of the variables will be used in the model. If only a selection will be used - as with scaling - it is important to fit and transform the training set while only transforming the testing set to prevent any data leakage:","a1b4047c":"The data will be split into a training and a testing set to train the model:","996ad122":"The dataset now looks like this:","18d1a5bb":"Let's further examine each feature:","e7f5b566":"**Insurance companies can't predict the future, so how do they come up with such quote?**\n\nBy understanding the relationship between the demographics of primary beneficiaries (age, sex, BMI, number of children, smoker and location) and their medical costs, insurance companies will then (i) compare you to their data, (ii) predict your medical costs, and (iii) calculate a corresponding insurance quote. \n\nLet's take a look at the first two steps (grouping you and predicting your medical costs) with the following example:","7b8de071":"* There is a slight positive correlation between the age and charges.\n* The data can also be separated into three groupings (low, average and high charges) depending on if the individual was a smoker.","477c59f3":"* Including the \"outliers\", both females and males have similar range.\n* Excluding the \"outliers\", males have higher charges.","4f9636cb":"As the data includes a range of continuous and discrete variables, the data will need to be scaled to ensure those larger values to not give an inaccurate higher weighting. The training set will be fit to the scaler and transformed, while the testing set will only be transformed to avoid any data leakage:","354f1885":"Let us now change the categorical features into numerical format:","bab23a36":"Although the RandomForest model has the second largest spread of cross validation scores, the RandomForest performed the best so let's explore more ensemble models:","ed96c045":"#### *BMI*","bf28449f":"We shall continue exploring our target variable, *Charges*:","2aa66314":"* Smokers have a chargers than non-smokers."}}