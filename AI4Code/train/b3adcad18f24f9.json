{"cell_type":{"abd3017e":"code","a9f7e8c1":"code","d6c03066":"code","fd87ad49":"code","73117051":"code","a3ccdb74":"code","07693687":"code","fb75a9b9":"code","5f50a191":"code","2600c6ff":"code","4c8055ba":"code","4f901bf3":"code","4ce6cf50":"code","ae5229f6":"code","0ed211b4":"code","4ff14c7d":"code","4d158911":"code","6c173ec5":"code","f1738ce2":"code","377283d2":"code","6f4f970e":"code","9fdf37d6":"code","843521df":"code","11c47449":"markdown","c8e2ee2e":"markdown","6af7813a":"markdown","20e83046":"markdown","6ce41773":"markdown","5f9a8414":"markdown","2b5695f1":"markdown"},"source":{"abd3017e":"## Basic Imports\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nsns.set()","a9f7e8c1":"# NLP processing \nimport spacy\nnlp = spacy.load('en_core_web_sm')","d6c03066":"# sklearn models\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline","fd87ad49":"# File path\nSAMPLE_PATH = '..\/input\/amazon-reviews-2018-electronics\/electronics_sample.csv'\n\n# Dtypes and data column\nDTYPES = {\n    'overall':np.int16,\n    'vote':np.int64,\n    'verified':bool,\n    'reviewText':object,\n    'summary':object\n}","73117051":"# preprocessing text\ndef lemma(text):\n    doc = nlp(text)\n    return \" \".join([token.lemma_ for token in doc if token.is_alpha and token.lemma_ != '-PRON-'])","a3ccdb74":"## Loading Data\ndf = pd.read_csv(SAMPLE_PATH, dtype=DTYPES, parse_dates=[2]).dropna()\ndf.head()","07693687":"df.info()","fb75a9b9":"sns.countplot(x='overall', data=df)\nplt.show()","5f50a191":"# Getting read of reviews that include information about the number of stars or \n# those below 6 words\nwar_1 = df.reviewText.str.contains('one star')\nwar_2 = df.reviewText.str.contains('two star')\nwar_3 = df.reviewText.str.contains('three star')\nwar_4 = df.reviewText.str.contains('four star')\nwar_5 = df.reviewText.str.contains('five star')\nwar_6 = (df.reviewText.str.split().str.len() > 5)\n\nmask = (~war_1 & ~war_2 & ~war_3 & ~war_4 & ~war_5 & war_6)\ndf = df[mask]\ndf.info()","2600c6ff":"X = df['reviewText']\ny = df['overall']-1","4c8055ba":"X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    stratify=y,\n                                                    test_size=0.2,\n                                                    random_state=42)","4f901bf3":"# creating tfidf model\ntfidf = TfidfVectorizer(min_df=0.01, max_df=1., ngram_range=(1,1), stop_words='english')\nX_train_tfidf = tfidf.fit_transform(X_train)\nX_test_tfidf = tfidf.transform(X_test)","4ce6cf50":"print('Vocabulary Size: ', len(tfidf.get_feature_names()))","ae5229f6":"%%time\ngb = GradientBoostingClassifier(n_estimators=50, max_depth=20)\ngb.fit(X_train_tfidf, y_train)\ngb.score(X_test_tfidf, y_test)","0ed211b4":"y_test_pred_gb = gb.predict(X_test_tfidf)","4ff14c7d":"cl_report_gb = pd.DataFrame(classification_report(y_test, y_test_pred_gb, output_dict=True)).T\ndisplay(cl_report_gb)","4d158911":"cm_gb = confusion_matrix(y_test, y_test_pred_gb, normalize='true')\nsns.heatmap(cm_gb, cmap='Greens',\n                yticklabels=range(1,6),\n                xticklabels=range(1,6),\n                annot=True, \n                fmt='.2f'\n                )\nplt.show()","6c173ec5":"# Creating Pipeline\n\nsteps = [('vectorizer', TfidfVectorizer()),\n         ('classifier', GradientBoostingClassifier())]\n\npipe = Pipeline(steps)","f1738ce2":"params = {#'vectorizer': [TfidfVectorizer(), CountVectorizer()],\n          'vectorizer__max_df':[0.8,0.9,0.99,1.],\n          'vectorizer__min_df':[0.001, 0.01, 0.],\n          'vectorizer__max_features':[1_000, 10_000, None],\n          'vectorizer__ngram_range':[(1,1),(1,2)],\n          #'classifier': [RandomForestClassifier(), GradientBoostingClassifier()],\n          'classifier__n_estimators':[50,100,200],\n          'classifier__max_depth':[5,8,10,20,50,100],\n          'classifier__max_features':[0.4,0.6,0.8,1.],\n          'classifier__subsample':[0.4,0.6,0.8,1.]\n           }","377283d2":"search = RandomizedSearchCV(pipe, \n                            param_distributions=params,\n                            n_iter=50,\n                            cv=3)","6f4f970e":"search.fit(X_train[:2_000], y_train[:2_000])","9fdf37d6":"search.best_params_","843521df":"result = pd.DataFrame(search.cv_results_)\nresult.to_csv('rand_search_result.csv')","11c47449":"## Baseline Model","c8e2ee2e":"## Load data","6af7813a":"## Imports","20e83046":"## Constants","6ce41773":"## Hyperparameter Tuning\n## Informed Search - Coarse to Fine \n### Randomized Search to Grid Search","5f9a8414":"## Functions","2b5695f1":"# Ensemble Models\n## Hyperparameter Tuning"}}