{"cell_type":{"79b84af1":"code","57e22239":"code","b4ca9990":"code","5cee48a0":"code","56e37628":"code","3717eaeb":"code","a0be660d":"code","97527488":"code","9029b230":"code","8032bdba":"code","78531d28":"code","65f9c0f4":"code","82d3052a":"code","5b916948":"code","e7899ba8":"code","b6fe3895":"code","af636b7f":"code","852d8287":"code","d24253b3":"code","a197cd25":"code","5d9dfebc":"code","8979dcaf":"code","7715af6a":"code","d9d9ed48":"code","b805d7ce":"code","f0c926c9":"code","9499fede":"code","19a5fe5e":"code","2ccfc714":"code","b3e6b71c":"code","0d4f8fd0":"code","373fd049":"code","6b4fccad":"code","9452dc61":"code","d10da064":"code","1e22c8e8":"code","8ced4547":"code","93576afc":"markdown","ff874799":"markdown","3bf67bc6":"markdown","8ca631fb":"markdown","d9d4b952":"markdown","733f1d06":"markdown","3672e8e8":"markdown","e12378f8":"markdown","6cb4a7b7":"markdown","35a3808e":"markdown","9b9ade43":"markdown","a1e34223":"markdown","580b1627":"markdown","a560266c":"markdown","9017e959":"markdown","e98b4abd":"markdown","a81dd9f2":"markdown","1961d90e":"markdown","23664fb6":"markdown","6ef48a38":"markdown","a5ce1f67":"markdown","668541f8":"markdown","b53e64ae":"markdown","8d07b468":"markdown","6c0c6101":"markdown","1795a9e2":"markdown"},"source":{"79b84af1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","57e22239":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","b4ca9990":"df_listings = pd.read_csv('..\/input\/airbnb-santiago-chile\/listings.csv')\ndf_calendar = pd.read_csv('..\/input\/airbnb-santiago-chile\/calendar.csv')\ndf_reviews = pd.read_csv('..\/input\/airbnb-santiago-chile\/reviews.csv')","5cee48a0":"df_listings.describe()","56e37628":"df_listings.head(5)","3717eaeb":"print(df_listings.columns.tolist())\ndisplay(df_listings.dtypes)","a0be660d":"df_listings['price'].max(), df_listings['price'].min()","97527488":"# O pre\u00e7o \u00e9 uma string, necess\u00e1rio trat\u00e1-lo\ndf_listings['price_novo'] = df_listings['price'].str.replace('$', '', regex = 'true').str.replace(',', '', regex = 'true')\ndf_listings['price_novo'] = df_listings['price_novo'].astype(float)\ndf_listings['price_novo'].max(), df_listings['price_novo'].min()","9029b230":"## Como o m\u00ednimo \u00e9 zero (n\u00e3o fact\u00edvel, vamos remov\u00ea-lo)\nprecos = np.array(df_listings['price_novo'].loc[df_listings['price_novo'] > 0])\nprint('M\u00edn=%.2f \/ M\u00e1x=%.2f \/ M\u00e9dio=%.2f' % (precos.min(), precos.max(), precos.mean()))","8032bdba":"import matplotlib.pyplot as plt\n\nplt.hist(precos, [0, 5000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 60000, 70000, 80000, 90000, 100000])  # arguments are passed to np.histogram\n\nplt.title(\"Faixas dos pre\u00e7os\")\nplt.show()","78531d28":"## Retirando outlier\ndf_listings = df_listings[df_listings['price_novo'].between(df_listings['price_novo'].quantile(.15), df_listings['price_novo'].quantile(.85))]","65f9c0f4":"## Como o m\u00ednimo \u00e9 zero (n\u00e3o fact\u00edvel, vamos remov\u00ea-lo)\nprecos = np.array(df_listings['price_novo'].loc[df_listings['price_novo'] > 0])\nprint('M\u00edn=%.2f \/ M\u00e1x=%.2f \/ M\u00e9dio=%.2f' % (precos.min(), precos.max(), precos.mean()))","82d3052a":"import matplotlib.pyplot as plt\n\nplt.hist(precos)  # arguments are passed to np.histogram\n\nplt.title(\"Faixas dos pre\u00e7os\")\nplt.show()","5b916948":"#Fonte: https:\/\/python-visualization.github.io\/folium\/quickstart.html\n\nimport folium\n\nfrom folium.plugins import HeatMap\n\nmapa_santiago = folium.Map([-33.45037,-70.66074], zoom_start=10) ##, tiles='Stamen Terrain')\n\nHeatMap(df_listings[['latitude','longitude']].dropna(), radius=10, gradient={0.2:'blue',0.4:'purple',0.6:'orange',1.0:'red'}).add_to(mapa_santiago)\n\ndisplay(mapa_santiago)","e7899ba8":"## Mostar a localiza\u00e7\u00e3o dos 10 menores pre\u00e7os\nprecos = np.array(df_listings['price_novo'].loc[df_listings['price_novo'] > 0])\nprecos = np.sort(precos)\nmenores_precos = np.zeros(10)\nfor i in range(10) :\n    menores_precos[i] = precos[i]\n    print(precos[i])","b6fe3895":"## Mostar a localiza\u00e7\u00e3o dos 10 maiores pre\u00e7os\nprecos = np.flip(precos)\nmaiores_precos = np.zeros(10)\nfor i in range(10) :    \n    maiores_precos[i] = precos[i]\n    print(precos[i])","af636b7f":"mapa_santiago = folium.Map([-33.45037,-70.66074], zoom_start=12) ##, tiles='Stamen Terrain')\nfor i in range(10) :\n    # Menores pre\u00e7os\n    p = menores_precos[i]\n    for index, row in df_listings.loc[ df_listings['price_novo'] == p ].iterrows() :\n        \n        if(i < 5) :\n            cor = 'blue'\n        else :\n            cor = 'darkblue'\n        \n        folium.Marker(\n            location=[row['latitude'], row['longitude']],\n            popup=str('%s: $%.2f' % (row['name'], p) ),\n            icon=folium.Icon(icon=\"info-sign\", color=cor),\n        ).add_to(mapa_santiago)\n        \n    # Maiores pre\u00e7os\n    p = maiores_precos[i]\n    for index, row in df_listings.loc[ df_listings['price_novo'] == p ].iterrows() :\n                \n        if(i < 5) :\n            cor = 'red'\n        else :\n            cor = 'orange'\n        \n        folium.Marker(\n            location=[row['latitude'], row['longitude']],\n            popup=str('%s: $%.2f' % (row['name'], p) ),\n            icon=folium.Icon(icon=\"info-sign\", color=cor),\n        ).add_to(mapa_santiago)\n\ndisplay(mapa_santiago)","852d8287":"# Gr\u00e1fico de pizza \ntipos = df_listings.room_type.value_counts().index\ncores = ['blue','yellow','green','red']\nvalores = df_listings.room_type.value_counts().values\nplt.figure(figsize=(12,12))\nplt.pie(valores, explode=(0.1,0,0,0), labels=valores, colors=cores, autopct='%1.1f%%', startangle=90)\nplt.legend(tipos)\nplt.title('Tipos de Acomoda\u00e7\u00f5es')\nplt.show()","d24253b3":"# Gr\u00e1fico de pizza - quantidade de quartos para apartamentos \/ casas completas\n\nqte_quartos = df_listings.loc[df_listings['room_type']== 'Entire home\/apt']['bedrooms'].value_counts().index\ncores = ['blue','yellow','green','red']\nvalores = df_listings.loc[df_listings['room_type']== 'Entire home\/apt']['bedrooms'].value_counts()\nplt.figure(figsize=(12,12))\nplt.pie(valores, labels=valores, autopct='%1.1f%%', startangle=90)\nplt.legend(qte_quartos)\nplt.title('Tipos de Acomoda\u00e7\u00f5es')\nplt.show()","a197cd25":"df_calendar.describe()","5d9dfebc":"df_calendar.head(5)","8979dcaf":"print(df_calendar.columns.tolist())\ndisplay(df_calendar.dtypes)","7715af6a":"df_calendar.shape","d9d9ed48":"df_calendar.isnull().sum()","b805d7ce":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf_temp = df_calendar.loc[df_calendar['date'] == '2021-12-25']\ndf_temp['available'].value_counts().plot.pie(autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('available')\nax[0].set_ylabel('')\nsns.countplot('available',data=df_temp,ax=ax[1])\nax[1].set_title('available')\nplt.show()","f0c926c9":"# O pre\u00e7o \u00e9 uma string, necess\u00e1rio trat\u00e1-lo\ndf_calendar['adjusted_price_novo'] = df_calendar['adjusted_price'].str.replace('$', '', regex = 'true').str.replace(',', '', regex = 'true')\ndf_calendar['adjusted_price_novo'] = df_calendar['adjusted_price_novo'].astype(float)\ndf_calendar['adjusted_price_novo'].max(), df_calendar['adjusted_price_novo'].min()\n","9499fede":"## Como o m\u00ednimo \u00e9 zero (n\u00e3o fact\u00edvel, vamos remov\u00ea-lo)\nprecos = np.array(df_calendar['adjusted_price_novo'].loc[df_calendar['adjusted_price_novo'] > 0])\nprint('M\u00edn=%.2f \/ M\u00e1x=%.2f \/ M\u00e9dio=%.2f' % (precos.min(), precos.max(), precos.mean()))","19a5fe5e":"df_groupby = df_calendar[['date', 'adjusted_price_novo']]\ndf_groupby = df_groupby.groupby(by='date', as_index=False).mean()\nplt.figure(figsize=(10, 7))\nplt.title('M\u00e9dia do pre\u00e7o ajustado ao longo do tempo')\nplt.plot(df_groupby['date'], df_groupby['adjusted_price_novo'])\n\n","2ccfc714":"df_reviews.describe()","b3e6b71c":"df_reviews.head(5)","0d4f8fd0":"print(df_reviews.columns.tolist())\ndisplay(df_reviews.dtypes)","373fd049":"df_reviews_price = pd.merge(\n    df_reviews[['listing_id', 'date', 'comments']],\n    df_listings[['id', 'price', 'latitude', 'longitude', 'name']],\n    how=\"inner\",\n    on=None,\n    left_on='listing_id',\n    right_on='id',\n    left_index=False,\n    right_index=False,\n    sort=True,\n    suffixes=(\"_x\", \"_y\"),\n    copy=True,\n    indicator=False,\n    validate=None,\n)","6b4fccad":"df_groupby = df_reviews_price[['date', 'listing_id']]\ndf_groupby = df_groupby.groupby(by='date', as_index=False).count()\nplt.figure(figsize=(10, 7))\nplt.title('Quantidade de reviews ao longo do tempo')\nplt.plot(df_groupby['date'], df_groupby['listing_id'])","9452dc61":"df_groupby = df_reviews_price[['date', 'listing_id', 'latitude', 'longitude', 'name']]\ndf_groupby = df_groupby.groupby(by=['listing_id','latitude', 'longitude', 'name'], as_index=False).count()","d10da064":"df_groupby.head(5)","1e22c8e8":"qte_reviews = np.array(df_groupby['date'])\nqte_reviews = np.sort(qte_reviews)\nqte_reviews = np.flip(qte_reviews)\nmaiores_reviews = np.zeros(10)\nfor i in range(10) :    \n    maiores_reviews[i] = qte_reviews[i]\n    print(qte_reviews[i])","8ced4547":"mapa_santiago = folium.Map([-33.45037,-70.66074], zoom_start=12) ##, tiles='Stamen Terrain')\nfor i in range(10) :\n    # Menores pre\u00e7os\n    p = maiores_reviews[i]\n    for index, row in df_groupby.loc[ df_groupby['date'] == p ].iterrows() :\n        folium.Marker(\n            location=[row['latitude'], row['longitude']],\n            popup=str(row['name']),\n            icon=folium.Icon(icon=\"info-sign\", color='green'),\n        ).add_to(mapa_santiago)\n\ndisplay(mapa_santiago)","93576afc":"### Jun\u00e7\u00e3o das acomoda\u00e7\u00f5es com as avalia\u00e7\u00f5es","ff874799":"### Principais colunas\n#### listing_id:         Identificador da hospedagem\n#### date:               Data de refer\u00eancia\n#### available:          Disponibilidade\n#### price:              Pre\u00e7o\n#### adjusted_price:     Pre\u00e7o AJustado\n#### minimum_nights:    M\u00edn. de di\u00e1rias para alugar\n#### maximum_nights:    M\u00e1x. de di\u00e1rias para alugar","3bf67bc6":"## S\u00e9rie temporal do pre\u00e7o m\u00e9dio","8ca631fb":"### Analisando as colunas que possuem valores nulos","d9d4b952":"## Analisando a disponibilidade em datas espec\u00edficas - Exemplo Natal","733f1d06":"### Lista dos maiores pre\u00e7o e dos menores pre\u00e7os","3672e8e8":"### Colunas:\n#### listing_id:        Identifica\u00e7\u00e3o da acomoda\u00e7\u00e3o\n#### id:                Identificador \u00fanico\n#### date:             data \n#### reviewer_id:       Identifica\u00e7\u00e3o do revisor\n#### reviewer_name:    Nome do revisor\n#### comments:         Coment\u00e1rio","e12378f8":"## An\u00e1lise dos pre\u00e7os das acomoda\u00e7\u00f5es","6cb4a7b7":"# Entendo o arquivo \"listings.csv\"\n\n## Arquivo com a lista de acomoda\u00e7\u00f5es do Airbnb em Santiago no Chile","35a3808e":"### Quantidade de quartos para apartamentos \/ casas completas","9b9ade43":"### Pre\u00e7o \u00e9 string, \u00e9 preciso trat\u00e1-lo","a1e34223":"### Conforme dica do Rafael Paz, os pre\u00e7os possuem valores discrepantes e segui a recomenda\u00e7\u00e3o para tirar os outliers","580b1627":"### An\u00e1lise dos pre\u00e7os das di\u00e1rias","a560266c":"## Mostra as 10 acomoda\u00e7\u00f5es com mais reviews","9017e959":"### Agrupando para ter a quantidade de revi\u00f5es por acomoda\u00e7\u00e3o","e98b4abd":"### Colunas:","a81dd9f2":"## Vis\u00e3o no mapa das acomoda\u00e7\u00f5es\n\n### Mapa de calor da concentra\u00e7\u00e3o das acomoda\u00e7\u00f5es nas localidades","1961d90e":"## Tipos de acomoda\u00e7\u00f5es","23664fb6":"## Colunas:","6ef48a38":"### Vis\u00e3o no mapa dos menores (azul claro e azul escuro) e maiores pre\u00e7os (laranja e vermelho)\n#### ao clicar na localidade d\u00e1 para ver o nome e o pre\u00e7o.","a5ce1f67":"### Refazendo a lista de pre\u00e7os, m\u00ednimos, m\u00e1ximos, a m\u00e9dia e o Histograma","668541f8":"# Entendo o arquivo \"calendar.csv\"\n\n## Arquivo com a disponibilidade de acomoda\u00e7\u00f5es do Airbnb em Santiago no Chile","b53e64ae":"## Principais colunas identificadas\n#### id - identificador num\u00e9rico\n#### listing_url - URL da p\u00e1gina da acomoda\u00e7\u00e3o\n#### scrape_id - ???\n#### last_scraped - ???\n#### name - Nome\n#### description - Descri\u00e7\u00e3o\n#### neighborhood_overview - Descri\u00e7\u00e3o da vizinhan\u00e7a\n#### picture_url - FOto\n#### host_id - Identifica\u00e7\u00e3o do propriet\u00e1rico\n#### host_response_time - Tempo de resposta\n#### host_response_rate - Taxa de resposta\n#### host_acceptance_rate - Taxa de aceita\u00e7\u00e3o\n#### host_is_superhost - \u00c9 um super host?\n#### host_identity_verified - Identidade verificada?\n#### latitude - Localiza\u00e7\u00e3o\n#### longitude - Localiza\u00e7\u00e3o\n#### property_type - Tipo da propriedade\n#### room_type - Tipo\n#### accommodates\n#### bathrooms\n#### bathrooms_text\n#### bedrooms\n#### beds\n#### amenities\n#### price\n#### first_review\n#### last_review\n#### review_scores_rating\n#### review_scores_accuracy\n#### review_scores_cleanliness\n#### review_scores_checkin\n#### review_scores_communication\n#### review_scores_location\n#### review_scores_value","8d07b468":"# Abertura dos arquivos de dados do Airbnb em Santiago no Chile","6c0c6101":"\n## Entendo o arquivo \"reviews.csv\"\n### Arquivo com as avalia\u00e7\u00f5es das acomoda\u00e7\u00f5es","1795a9e2":"### Agrupando reviews por acomoda\u00e7\u00e3o\n### Quantidades de reviews ao longo do tempo"}}