{"cell_type":{"fcf609cb":"code","365ba391":"code","9387c27c":"code","351fcfef":"code","a1169a18":"code","5e93527c":"code","d6600a16":"code","49fe0adc":"code","d7adb94b":"code","faaa64b9":"code","0f165cbe":"code","0aa320ba":"code","ed65ea6a":"code","219a86b3":"code","c110e986":"code","685d2021":"markdown","c0af8028":"markdown"},"source":{"fcf609cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.preprocessing.image import array_to_img\n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nDATA_DIR = '\/kaggle\/input\/i2a2-brasil-pneumonia-classification'\nIMAGES_DIR = DATA_DIR + '\/images'","365ba391":"df_train = pd.read_csv(DATA_DIR + '\/train.csv')\ndf_train.head()","9387c27c":"def check_augmentation(img_generator):\n    generator = img_generator.flow_from_dataframe(df_train,\\\n                                     directory=IMAGES_DIR,\\\n                                     x_col='fileName',\\\n                                     y_col='pneumonia',\\\n                                     target_size=(244, 244),\\\n                                     color_mode=\"rgb\",\\\n                                     class_mode=\"raw\",\\\n                                     shuffle=False,\\\n                                     seed=0,\\\n                                     batch_size=8)\n\n    batch, _ = next(generator)\n\n    fig, ax = plt.subplots(1, 8, figsize=(20, 10))\n\n    i = 1\n    for img in batch:\n        plt.subplot(1, 8, i)\n        plt.imshow(array_to_img(img))\n        i += 1","351fcfef":"check_augmentation(ImageDataGenerator())","a1169a18":"check_augmentation(ImageDataGenerator(rotation_range=40))","5e93527c":"check_augmentation(ImageDataGenerator(width_shift_range=0.20))","d6600a16":"check_augmentation(ImageDataGenerator(height_shift_range=0.20))","49fe0adc":"# making images brighter\ncheck_augmentation(ImageDataGenerator(brightness_range=[1.0, 1.5]))","d7adb94b":"# making images darker\ncheck_augmentation(ImageDataGenerator(brightness_range=[0.0, 1.0]))","faaa64b9":"check_augmentation(ImageDataGenerator(shear_range=40.))","0f165cbe":"check_augmentation(ImageDataGenerator(zoom_range=[1.0, 1.2]))","0aa320ba":"check_augmentation(ImageDataGenerator(zoom_range=[0.8, 1.0]))","ed65ea6a":"check_augmentation(ImageDataGenerator(channel_shift_range=20.))","219a86b3":"check_augmentation(ImageDataGenerator(horizontal_flip=True))","c110e986":"check_augmentation(ImageDataGenerator(vertical_flip=True))","685d2021":"## Data Augmentation","c0af8028":"# Data Augmentation Tests\n\nUse this notebook to test and explore how the data augmentation parameters from Keras are transforming the input images."}}