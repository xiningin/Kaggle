{"cell_type":{"fa48bec7":"code","d6bfe06a":"code","0186998e":"code","ecb6680c":"code","9ca148e3":"code","ef0cf2f5":"code","28ed79b7":"code","db4e651f":"code","b7798f65":"code","e1b9dd1a":"code","b54bf8ad":"code","ed98db28":"code","3a5b55cf":"code","83af02c5":"code","7ef98e90":"code","23db748b":"code","d8300a05":"code","81cc4304":"code","c6863316":"code","51f5a6ac":"code","a73df57d":"code","bcca74a4":"code","1d119284":"code","0a5ce7f3":"code","37202d60":"code","7d8d910d":"code","181da5f0":"code","e28956e6":"markdown","90309337":"markdown","37fd0e32":"markdown"},"source":{"fa48bec7":"#Import all libraries packages\nimport seaborn as sns\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\nfrom matplotlib import pyplot as plt\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nfrom bokeh.sampledata.les_mis import data\nimport networkx as nx\nfrom mpl_toolkits.mplot3d import Axes3D","d6bfe06a":"train_data = pd.read_csv('..\/input\/titanic\/train.csv') # From a CSV file","0186998e":"train_data.head()","ecb6680c":"train_data.info() # Index, Datatype and Memory information","9ca148e3":"train_data.describe() # Summary statistics for numerical","ef0cf2f5":"train_data.duplicated().sum()","28ed79b7":"train_data.isnull().sum()","db4e651f":"train_data.isnull().sum()","b7798f65":"test_data = pd.read_csv('..\/input\/titanic\/test.csv') # From a CSV file","e1b9dd1a":"test_data.head()","b54bf8ad":"test_data.info() # Index, Datatype and Memory information","ed98db28":"test_data.describe() # Summary statistics for numerical","3a5b55cf":"test_data.duplicated().sum()","83af02c5":"df = pd.read_csv('..\/input\/titanic\/gender_submission.csv') # From a CSV file","7ef98e90":"df.head()","23db748b":"df.info() # Index, Datatype and Memory information","d8300a05":"df.describe() # Summary statistics for numerical","81cc4304":"df.duplicated().sum()","c6863316":"df.isnull().sum()","51f5a6ac":"women=train_data.loc[train_data.Sex=='female']['Survived']\nrate_women=sum(women)\/len(women) * 100\nprint(' % of women survivers : ', rate_women)","a73df57d":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train_data)","bcca74a4":"# set a grey background (use sns.set_theme() if seaborn version 0.11.0 or above) \nsns.set(style=\"darkgrid\")\ndf = sns.load_dataset('tips')\n \n# Grouped violinplot\nsns.violinplot(x=\"Survived\", y=\"Pclass\", hue=\"Sex\", data=train_data, palette=\"Pastel1\")\nplt.show()","1d119284":"# use the function regplot to make a scatterplot\nsns.regplot(x=train_data[\"Age\"], y=train_data[\"Survived\"])","0a5ce7f3":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train_data,palette='winter')","37202d60":"# Narrower bandwidth\nsns.kdeplot(train_data['Age'], shade=True, bw=0.05, color='olive') # if using seaborn < 0.11.0\nplt.show()","7d8d910d":"sns.countplot(x='SibSp',data=train_data)","181da5f0":"from sklearn.ensemble import RandomForestClassifier \ny = train_data[\"Survived\"] \nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"] \nX = pd.get_dummies(train_data[features]) \nX_test = pd.get_dummies(test_data[features]) \nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1) \nmodel.fit(X, y) \npredictions = model.predict(X_test) \noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions}) \noutput.to_csv('my_submission.csv', index=False) \nprint(\"Your submission was successfully saved!\")","e28956e6":"## Exploratory Data Analysis","90309337":"## \"Project: Titanic - Machine Learning from Disaster\",\n\nTable of Contents\n1. Introduction\n2. Data Wrangling\n3. Exploratory Data Analysis\n\n\"Description: i will anayziz dataset collects information from Titanic ML competition. to create a model that predicts which passengers survived the Titanic shipwreck.\"","37fd0e32":"## Data Wrangling"}}