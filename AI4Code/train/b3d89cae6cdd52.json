{"cell_type":{"d3796049":"code","dd9dd244":"code","ee66c25e":"code","67a15c70":"code","4a7819af":"code","55b6f8b7":"code","8739a51b":"code","1104d8cb":"code","96102c3a":"code","d7ee0f4c":"code","24e31708":"code","f8364d11":"code","bfd28906":"code","d942601b":"code","a73852cb":"markdown"},"source":{"d3796049":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dd9dd244":"data17=pd.read_csv('..\/input\/2017.csv')\ndata16=pd.read_csv('..\/input\/2016.csv')\ndata15=pd.read_csv('..\/input\/2015.csv')","ee66c25e":"data17.info()","67a15c70":"data17.corr()","4a7819af":"#correlation map\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data17.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","55b6f8b7":"data17.head(10)","8739a51b":"data17.tail(10)","1104d8cb":"data17.columns=[each.replace(\".\",\"\")  \nif(len(each.split(\".\"))>1)else each for each in data17.columns]\ndata17.columns=[each.replace(\"(\",\"\")  \nif(len(each.split(\"(\"))>1)else each for each in data17.columns]\ndata17.columns=[each.replace(\")\",\"\")  \nif(len(each.split(\")\"))>1)else each for each in data17.columns]\n\ndata17.columns","96102c3a":"data16.columns=[each.replace(\" \",\"\")  \nif(len(each.split(\" \"))>1)else each for each in data16.columns]\ndata16.columns=[each.replace(\"(\",\"\")  \nif(len(each.split(\"(\"))>1)else each for each in data16.columns]\ndata16.columns=[each.replace(\")\",\"\")  \nif(len(each.split(\")\"))>1)else each for each in data16.columns]\n\ndata16.columns","d7ee0f4c":"data15.columns=[each.replace(\" \",\"\")  \nif(len(each.split(\" \"))>1)else each for each in data15.columns]\ndata15.columns=[each.replace(\"(\",\"\")  \nif(len(each.split(\"(\"))>1)else each for each in data15.columns]\ndata15.columns=[each.replace(\")\",\"\")  \nif(len(each.split(\")\"))>1)else each for each in data15.columns]\n\ndata15.columns","24e31708":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata17.Family.plot(kind = 'line', color = 'g',label = 'Family',linewidth=3,alpha = 0.5,grid = True,linestyle = ':')\ndata17.HappinessScore.plot(color = 'r',label = 'Happiness Score',linewidth=3, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('Less Happy Country -->')              # label = name of label\nplt.ylabel('Happiness')\nplt.title('Line Plot')            \nplt.show()","f8364d11":" # Scatter Plot \n# x = HappinessScore, y = EconomyGDPperCapita\ndata17.plot(kind='scatter', x='HappinessScore', y='EconomyGDPperCapita',alpha = 0.5,color = 'red')\nplt.xlabel('HappinessScore')              # label = name of label\nplt.ylabel('EconomyGDPperCapita')\nplt.title('Happiness Score - Economy(GDPperCapita) Scatter Plot')            # title = title of plot","bfd28906":"# Histogram\ndata17.Generosity.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","d942601b":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata17.TrustGovernmentCorruption.plot(kind = 'line', color = 'g',label = '2017',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata16.TrustGovernmentCorruption.plot(color = 'r',label = '2016',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\ndata15.TrustGovernmentCorruption.plot(color = 'b',label = '2015',linewidth=1,grid = True,linestyle = '--')\nplt.legend()    # legend = puts label into plot\nplt.xlabel('Less Happy Country -->')              # label = name of label\nplt.ylabel('Trust (Government Corruption)')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n","a73852cb":"**Inroduction**\n\nThis is my first Kaggle. I started with World Happiness Report and applied basic tool in Phyton. I used this [kernel](http:\/\/) to proceed step by step"}}