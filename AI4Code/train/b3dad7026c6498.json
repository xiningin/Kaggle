{"cell_type":{"0cf4b625":"code","11b84011":"code","b6d43c6a":"code","34e9aab1":"code","9ad40e4c":"code","2ea83f12":"code","092033a0":"code","09925973":"code","91024af3":"code","ccf51e60":"code","40b68b07":"code","61b8e60b":"code","7090aa1f":"code","8c08644a":"code","8064ad4e":"code","1615f112":"code","2a869137":"code","7b052a2d":"code","1717ed26":"code","a58750ee":"code","49cf86d7":"code","c47e80f0":"code","b786c965":"code","8a0303bc":"code","6f2ab657":"code","a124a2d9":"markdown","1ca1d277":"markdown","a4f2b3f0":"markdown","9eeabd67":"markdown","cb82024f":"markdown"},"source":{"0cf4b625":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","11b84011":"datas = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')\n\ndatas.head()","b6d43c6a":"# cerate from scratch, dictionary:\ncity = [\"Istanbul\", \"Ankara\"]\nplate = [\"34\", \"06\"]\nlist_col = [city, plate]\n\nlist_label = [\"SEHIR:\", \"PLAKA\"]\n\n# zipleyelim, iki listeyi\nzipped = list(zip(list_label, list_col))\nprint(zipped)","34e9aab1":"# zipped to-> dic:\nddic = dict(zipped)\n\n# dic to->dataframe:\ndfrm = pd.DataFrame(ddic)\ndfrm","9ad40e4c":"# yeni kolon ekle, diziden de\u011fer ata:\ndfrm[\"BOLGE\"] = [\"marmara\", \"anadolu\"]\ndfrm","2ea83f12":"# yeni kolon ekle, tek de\u011fer ata\ndfrm[\"NUFUS\"] = 999\ndfrm","092033a0":"# let's retun to, get data set\ndatas.head()","09925973":"import matplotlib.pyplot as plt","91024af3":"# plot all data\n\ndatas1 = datas.loc[:,[\"Unit price\",\"Tax 5%\", \"Total\"] ]\ndatas1.plot()\nplt.show()","ccf51e60":"# subplots\ndatas1.plot(subplots=True)\nplt.show()","40b68b07":"# scatter plot\ndatas1.plot(kind=\"scatter\", x=\"Unit price\", y=\"Total\")\nplt.show()","61b8e60b":"# histogram plot:\ndatas1.plot(kind=\"hist\", y=\"Unit price\", bins=50, range=(0,250), normed=True)\nplt.show()","7090aa1f":"# histogram subplot, noncumul ve cumul.ile\n\nfig,axes= plt.subplots(nrows=2, ncols=1)\ndatas1.plot(kind=\"hist\", y=\"Unit price\", bins=50, range=(0,250), normed=True, ax=axes[1], cumulative=True)\nplt.show()","8c08644a":"datas.describe()","8064ad4e":"datas.head()","1615f112":"datas2 = datas.head()\ndatas2","2a869137":"# add date column with a list, lste stringdir.\ndatelist = [\"1992-01-10\", \"1992-02-10\", \"1992-03-10\", \"1993-03-15\", \"1993-03-16\"]\n\n# string liste-> datetime yapal\u0131m:\ndatetimeobj = pd.to_datetime(datelist)\n\n# kolonu ekleyelim:\ndatas2[\"mydate\"] = datetimeobj\n\ndatas2","7b052a2d":"# dataframe index ini, mydate yapal\u0131m:\ndatas2 = datas2.set_index(\"mydate\")\ndatas2","1717ed26":"datas2.head()","a58750ee":"# belli bir index li kayd\u0131 \u00e7ekelim,slice yapal\u0131m:\nprint(datas2.loc[\"1993-03-16\"])","49cf86d7":"# belli zaman aral\u0131\u011f\u0131ndaki index li, kayd\u0131 \u00e7ekelim,slice yapal\u0131m:\nprint(datas2.loc[\"1992-03-10\":\"1993-03-16\"])","c47e80f0":"datas2.head()","b786c965":"# y\u0131l:A a g\u00f6re, ort. resample yap:\ndatas2.resample(\"A\").mean()\n\n#resample periyodundaki(YIL) son tarihleri al\u0131r, yanlar\u0131na ort. de\u011ferleri yazar.","8a0303bc":"# aylara g\u00f6re resmple:\ndatas2.resample(\"M\").mean()\n\n# \n#resample periyodundaki(AY) son tarihleri al\u0131r, yanlar\u0131na ort. de\u011ferleri yazar.","6f2ab657":"# lineer interpolate, NaN values:\ndatas2.resample(\"M\").mean().interpolate(\"linear\")","a124a2d9":"* * **STATISTICAL EXPLORATORY DATA ANALYSIS**","1ca1d277":"VISUAL EXPLORATORY DATA ANALYSIS:","a4f2b3f0":"\u00d6DEV4- (**4. PANDAS FOUNDATION**)","9eeabd67":"RESAMPLING PANDAS TIME SERIES:","cb82024f":"*INDEXING PANDAS TIME SERIES*"}}