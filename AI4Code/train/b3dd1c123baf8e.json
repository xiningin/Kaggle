{"cell_type":{"67468b26":"code","09cf858b":"code","f47859d0":"code","14661f5e":"code","4d6abec9":"code","d2ddbb61":"code","0b88bc07":"code","c3b65ecc":"code","2ffd59f8":"code","152ee99c":"code","b785b3ce":"code","365074ab":"code","ddeff934":"code","dfe42262":"code","efc937e0":"code","f05d9b9b":"code","05e53711":"code","4ee9bc37":"code","d029dd51":"code","f976487e":"code","cd81ca80":"code","3e951915":"code","d2d67836":"markdown","7202635f":"markdown","80ad6289":"markdown","6a4b3efc":"markdown","a66aa510":"markdown"},"source":{"67468b26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","09cf858b":"#\n# Modified from KeithFish\n#\n# \u5bfc\u5165\u8ba1\u7b97\u6a21\u5757\uff0c\u5bf9\u6a21\u5757\u5927\u81f4\u529f\u80fd\u6ce8\u89e3\uff1a\n# numpy\u652f\u6301\u77e9\u9635\u8fd0\u7b97\n# pandas\u7528\u6765\u505a\u6570\u636e\u6e05\u6d17\uff0c\u50cf\u662fpython\u4e2d\u7684excel\uff08\u652f\u6301\u5c06\u6570\u636e\u4ee5.csv\u683c\u5f0f\u8f93\u51fa\u81f3\u672c\u5730\uff09\n# sklearn\u7528\u6765\u8fdb\u4e00\u6b65\u5236\u4f5c\u6570\u636e\u96c6\uff08\u652f\u6301\u6570\u636e\u7684\u5bfc\u5165\u548c\u6570\u636e\u7684\u5bfc\u51fa\uff09\uff0c\u542b\u6709SVM\u652f\u6301\u5411\u91cf\u673a\u3001DT\u51b3\u7b56\u6811\u3001KNN\u8fd1\u90bb\u3001LR\u903b\u8f91\u56de\u5f52\u7b49\u5c01\u88c5\u597d\u7684\u6a21\u578b\uff0c\u652f\u6301\u5bf9\u6570\u636e\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u4ee5\u8c03\u53c2\u3002\n# mlxtend\u7528\u6765\u5b9e\u73b0\u96c6\u6210\u5b66\u4e60\uff1abagging, boosting, stacking\n# lightgbm\u5185\u6709boosting tree\uff08\u76f8\u6bd4xgboost\uff0c\u6539\u8fdb\u4e86\u751f\u6210\u8282\u70b9\u7684\u65b9\u5f0f\uff09\n# xgboost\u5185\u6709boosting tree\n# os\u7528\u6765\u8bfb\u53d6\u6587\u4ef6\nimport numpy as np  # linear algebra\nimport pandas as pd  #\nfrom datetime import datetime\nfrom scipy.stats import skew  # for some statistics\nfrom scipy.special import boxcox1p\nfrom scipy.stats import boxcox_normmax\nfrom sklearn.linear_model import ElasticNetCV, LassoCV, RidgeCV\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.metrics import mean_squared_error\nfrom mlxtend.regressor import StackingCVRegressor\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nimport os\n","f47859d0":"\n#######################################################\u6570\u636e\u5bfc\u5165\u548c\u7279\u5f81\u63d0\u53d6-\u3010\u5f00\u59cb\u3011################################################################################\n#\u663e\u793a\u5f53\u524d\u7f16\u8bd1\u5668\u7684Draft Environment\u4e0b\u7684\u6587\u4ef6\uff1b\u5c06\u6587\u4ef6\u5939\u4e0b\u7684\u5bf9\u5e94\u540d\u79f0csv\u6587\u4ef6\u50a8\u5b58\u4e3a\u77e9\u9635\u5bf9\u8c61\u3002\nprint(os.listdir(\"..\/input\"))\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\n#\u663e\u793a\u77e9\u9635\u5bf9\u8c61\u7684\u7ef4\u6570\uff0c\u6838\u67e5\u662f\u5426\u5bfc\u5165\u6210\u529f\nprint(\"Train set size:\", train.shape)\nprint(\"Test set size:\", test.shape)\n\n#\u8bb0\u5f55\u8fd0\u7b97\u5f00\u59cb\u7684\u65f6\u95f4\nprint('START data processing', datetime.now(), )\n\n#\u53d6\u51fatrain\u77e9\u9635\uff08\u6216\u8005\u79f0\u4e4b\u4e3a\u201c\u6570\u636e\u5e27\u201ddataframe\uff09\u4e2dtitle\u4e3a'Id'\u7684\u5217\uff0c\u8d4b\u503c\u7ed9train_ID\u3002\u6240\u4ee5train_ID\u662f\u4e00\u7ef4\u5217\u5411\u91cf\u4e86\u3002test_ID\u7c7b\u4f3c\u3002\n#train_ID\u548ctest_ID\u6839\u672c\u5c31\u6ca1\u6709\u4f7f\u7528\uff0c\u5b8c\u5168\u53ef\u4ee5\u5220\u9664\u3002\n#train_ID = train['Id']\n#test_ID = test['Id']\n\n","14661f5e":"\n##################\u5220\u9664\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6807\u7b7e\u5217-\u3010\u5f00\u59cb\u3011#################\n#\u5c06train\u77e9\u9635\u4e2d\u7684'Id'\u5217\u5220\u9664\uff08\u539f\u5730\u5220\u9664\uff0c\u6545\u5c06inplace\u8bbe\u4e3atrue\uff09\uff0c\u56e0\u4e3a\u539f\u59cb\u6570\u636e\u4e2d\u7684\u6570\u636e\u7d22\u5f15\u548c\u9884\u6d4b\u6a21\u578b\u7684\u6784\u5efa\u6ca1\u6709\u5173\u7cfb\u3002\n#test\u77e9\u9635\u7c7b\u4f3c\u3002\ntrain.drop(['Id'], axis=1, inplace=True)\ntest.drop(['Id'], axis=1, inplace=True)\n##################\u5220\u9664\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6807\u7b7e\u5217-\u3010\u7ed3\u675f\u3011#################\n","4d6abec9":"\n###############\u5220\u9664\u8bad\u7ec3\u96c6\u4e2d\u7684\u6781\u7aef\u503c\u548c\u8fdb\u884c\u6570\u636eindex\u66f4\u65b0-\u3010\u5f00\u59cb\u3011#########\n#\u4f7f\u7528\u6761\u4ef6\u7b5b\u9009\u64cd\u4f5c\uff0c\u901a\u8fc7\u8986\u503c\u7684\u65b9\u5f0f\u5254\u9664\u539f\u59cb\u6570\u636etrain\u77e9\u9635\u4e2d\u7684\u6781\u7aef\u503c\uff08\u6781\u7aef\u503c\u4e5f\u88ab\u79f0\u4e3aoutliers\uff09\uff0c\u5e2e\u52a9\u9884\u9632\u623f\u4ef7\u9884\u6d4b\u6a21\u578b\u51fa\u73b0\u8fc7\u62df\u5408\u3002\u5254\u9664\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u524d\u526a\u679d\u3002\ntrain = train[train.GrLivArea < 4500]\n#\u7531\u4e8e\u5220\u53bb\u4e86\u90e8\u5206\u884c\uff0c\u6545\u6b64\u65f6train\u77e9\u9635\u4e2d\u7684index\u5217\u5e76\u4e0d\u8fde\u7eed\u3002\u4f7f\u7528reset_index\u547d\u4ee4\uff0c\u5728\u56fa\u5b9a\u975eindex\u6570\u636e\u7684\u987a\u5e8f\u7684\u524d\u63d0\u4e0b\uff08inplace=True\uff09\uff0c\u91cd\u65b0\u5bf9index\u7f16\u53f7\uff08drop=True\uff09\u3002\ntrain.reset_index(drop=True, inplace=True)\n###############\u5220\u9664\u8bad\u7ec3\u96c6\u4e2d\u7684\u6781\u7aef\u503c\u548c\u8fdb\u884c\u6570\u636eindex\u66f4\u65b0-\u3010\u7ed3\u675f\u3011#########\n\n","d2ddbb61":"\n##########\u5bf9\u9884\u6d4b\u76ee\u6807\u6570\u503c\u8fdb\u884c\u5bf9\u6570\u53d8\u6362\u548c\u7279\u5f81\u77e9\u9635\u5bf9\u8c61\u7684\u521b\u5efa-\u3010\u5f00\u59cb\u3011#######\n# log1p\u5c31\u662flog(1+x)\uff0c\u7528\u6765\u5bf9\u623f\u4ef7\u6570\u636e\u8fdb\u884c\u6570\u636e\u9884\u5904\u7406\uff0c\u5b83\u7684\u597d\u5904\u662f\u8f6c\u5316\u540e\u7684\u6570\u636e\u66f4\u52a0\u670d\u4ece\u9ad8\u65af\u5206\u5e03\uff0c\u6709\u5229\u4e8e\u540e\u7eed\u7684\u5206\u7c7b\u7ed3\u679c\u3002\n# \u9700\u8981\u6ce8\u610f\uff0c\u6700\u540e\u9700\u8981\u5c06\u9884\u6d4b\u51fa\u7684\u5e73\u6ed1\u6570\u636e\u8fd8\u539f\uff0c\u800c\u8fd8\u539f\u8fc7\u7a0b\u5c31\u662flog1p\u7684\u9006\u8fd0\u7b97expm1\u3002\ntrain[\"SalePrice\"] = np.log1p(train[\"SalePrice\"])\n#\u5355\u72ec\u53d6\u51fa\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u623f\u4ef7\u5217\u4fe1\u606f\uff0c\u5b58\u5165y\u5bf9\u8c61\u3002\n#y = train.SalePrice.reset_index(drop=True) #.reset_index(drop=True)\u65b9\u6cd5\uff1a\u5728\u539f\u6709\u7684\u7d22\u5f15\u5217\u91cd\u7f6e\u7d22\u5f15\uff0c\u4e0d\u518d\u53e6\u5916\u6dfb\u52a0\u65b0\u5217\u3002\u6709\u5fc5\u8981\u4f7f\u7528reset_index\u5417\uff1f\u6709\u5fc5\u8981\u7684\uff0c\u4e0d\u8fd9\u6837\u505ay\u5c06\u6709\u4e24\u5957index\uff0c\u4f5c\u4e3adf\u7684y\u5c06\u6709\u4e24\u5217\u3002\ny = train['SalePrice'].reset_index(drop=True) #\u5bf9\u4e0a\u5f0f\u7684\u6539\u5199\n#\u6cbf\u7740\u6c34\u5e73\u7684\u65b9\u5411\u5bfb\u627e\u5217\u540d\u4e3a'SalePrice'\u7684\u5217\uff08\u4eec\uff09\uff0c\u628a\u5b83\u4eec\u5bf9\u5e94\u7684\u5217\u7edf\u7edf\u5220\u6389\u3002\u5f97\u5230\u4e86\u5355\u7eaf\u7684\u7279\u5f81\u77e9\u9635\uff0c\u5b58\u5165train_features\u5bf9\u8c61\u4e2d\u3002\ntrain_features = train.drop(['SalePrice'], axis=1)\n#test\u672c\u6765\u5c31\u6ca1\u6709\u623f\u4ef7\u5217\uff0c\u6240\u4ee5\u5b83\u672c\u6765\u5c31\u662f\u5355\u7eaf\u7684\u7279\u5f81\u77e9\u9635\u3002\ntest_features = test\n##########\u5bf9\u9884\u6d4b\u76ee\u6807\u6570\u503c\u8fdb\u884c\u5bf9\u6570\u53d8\u6362\u548c\u7279\u5f81\u77e9\u9635\u5bf9\u8c61\u7684\u521b\u5efa-\u3010\u7ed3\u675f\u3011#######\n\n","0b88bc07":"\n##\u5408\u5e76\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635\u4e0e\u6d4b\u8bd5\u6570\u636e\u7279\u5f81\u77e9\u9635\uff0c\u4ee5\u4fbf\u7edf\u4e00\u8fdb\u884c\u7279\u5f81\u5904\u7406-\u3010\u5f00\u59cb\u3011##\n#\u5c06\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u7279\u5f81\u77e9\u9635\u548c\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u7279\u5f81\u77e9\u9635\u5408\u5e76\uff08.concat[\u77e9\u96351,\u77e9\u96352]\uff09\uff0c\u5e76\u5bf9\u5408\u5e76\u540e\u7684\u77e9\u9635index\u91cd\u65b0\u7f16\u53f7\uff08.reset_index(drop=True)\uff09\u3002\nfeatures = pd.concat([train_features, test_features]).reset_index(drop=True)\n#\u68c0\u67e5\u5408\u5e76\u540e\u7684\u77e9\u9635\u7684\u7ef4\u6570\uff0c\u6838\u67e5\u5408\u5e76\u7ed3\u679c\u3002\nprint(\"\u5254\u9664\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u6781\u7aef\u503c\u540e\uff0c\u5c06\u5176\u7279\u5f81\u77e9\u9635\u548c\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u7279\u5f81\u77e9\u9635\u5408\u5e76\uff0c\u7ef4\u5ea6\u4e3a:\",features.shape)\n##\u5408\u5e76\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635\u4e0e\u6d4b\u8bd5\u6570\u636e\u7279\u5f81\u77e9\u9635\uff0c\u4ee5\u4fbf\u7edf\u4e00\u8fdb\u884c\u7279\u5f81\u5904\u7406-\u3010\u7ed3\u675f\u3011##\n#######################################################\u6570\u636e\u5bfc\u5165\u548c\u7279\u5f81\u63d0\u53d6-\u3010\u7ed3\u675f\u3011################################################################################\n\n","c3b65ecc":"\n##############################################################\u7279\u5f81\u5904\u7406-\u3010\u5f00\u59cb\u3011###################################################################################\n#\u5bf9\u4e8e\u5217\u540d\u4e3a'MSSubClass'\u3001'YrSold'\u3001'MoSold'\u7684\u7279\u5f81\u5217\uff0c\u5c06\u5217\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u5316\u4e3astring\u683c\u5f0f\u3002\nfeatures['MSSubClass'] = features['MSSubClass'].apply(str)\nfeatures['YrSold'] = features['YrSold'].astype(str)\nfeatures['MoSold'] = features['MoSold'].astype(str)\n\n","2ffd59f8":"\n###############################\u586b\u5145\u7a7a\u503c-\u3010\u5f00\u59cb\u3011##########################\n#\u6309\u7167\u4ee5\u4e0b\u5404\u4e2a\u7279\u5f81\u5217\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u4f9d\u6b21\u5904\u7406\u5404\u4e2a\u7279\u5f81\u5217\u4e2d\u7684\u7a7a\u503c\uff08.fillna()\u65b9\u6cd5\uff09\nfeatures['Functional'] = features['Functional'].fillna('Typ') #\u7a7a\u503c\u586b\u5145\u4e3astr\u578b\u6570\u636e'Typ'\nfeatures['Electrical'] = features['Electrical'].fillna(\"SBrkr\") #\u7a7a\u503c\u586b\u5145\u4e3astr\u578b\u6570\u636e\"SBrkr\"\nfeatures['KitchenQual'] = features['KitchenQual'].fillna(\"TA\") #\u7a7a\u503c\u586b\u5145\u4e3astr\u578b\u6570\u636e\"TA\"\nfeatures[\"PoolQC\"] = features[\"PoolQC\"].fillna(\"None\") #\u7a7a\u503c\u586b\u5145\u4e3astr\u578b\u6570\u636e\"None\"\n\n#\u5bf9\u4e8e\u5217\u540d\u4e3a'Exterior1st'\u3001'Exterior2nd'\u3001'SaleType'\u7684\u7279\u5f81\u5217\uff0c\u4f7f\u7528\u5217\u4e2d\u7684\u4f17\u6570\u586b\u5145\u7a7a\u503c\u3002\n#\t1.\u5148\u67e5\u627e\u6570\u636e\u5217\u4e2d\u7684\u4f17\u6570\uff1a\u4f7f\u7528df.mode()[]\u65b9\u6cd5\n#\t  \u89e3\u91ca\uff1adf.mode(0\u62161,0\u8868\u793a\u5bf9\u5217\u67e5\u627e\uff0c1\u8868\u793a\u5bf9\u884c\u67e5\u627e)[\u9700\u8981\u67e5\u627e\u4f17\u6570\u7684df\u5217\u7684index\uff08\u5c31\u662fdf\u4e2d\u7684\u7b2c\u51e0\u5217\uff09]\uff0c\u5c06\u8fd4\u56de\u6570\u636e\u5217\u4e2d\u7684\u4f17\u6570\n#\t2.\u4f7f\u7528.fillna()\u65b9\u6cd5\u8fdb\u884c\u586b\u5145\nfeatures['Exterior1st'] = features['Exterior1st'].fillna(features['Exterior1st'].mode()[0]) \nfeatures['Exterior2nd'] = features['Exterior2nd'].fillna(features['Exterior2nd'].mode()[0])\nfeatures['SaleType'] = features['SaleType'].fillna(features['SaleType'].mode()[0])\n\n#\u5bf9\u4e8e\u5217\u540d\u4e3a'GarageYrBlt', 'GarageArea', 'GarageCars'\u7684\u7279\u5f81\u5217\uff0c\u4f7f\u75280\u586b\u5145\u7a7a\u503c\u3002\nfor col in ('GarageYrBlt', 'GarageArea', 'GarageCars'):\n    features[col] = features[col].fillna(0)\n\n#\u5bf9\u4e8e\u5217\u540d\u4e3a'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond'\u7684\u7279\u5f81\u5217\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32'None'\u586b\u5145\u7a7a\u503c\u3002\nfor col in ['GarageType', 'GarageFinish', 'GarageQual', 'GarageCond']:\n    features[col] = features[col].fillna('None')\n\n#\u5bf9\u4e8e\u5217\u540d\u4e3a'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2'\u7684\u7279\u5f81\u5217\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32'None'\u586b\u5145\u7a7a\u503c\u3002\nfor col in ('BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2'):\n    features[col] = features[col].fillna('None')\n\n#\u805a\u5408\u51fd\u6570\uff08\u6309\u67d0\u4e00\u5217\u5173\u952e\u5b57\u5206\u7ec4\uff09groupby\uff0c\u5b83\u7684\u7279\u70b9\u662f\uff1a\u5c06\u8fd4\u56de\u4e0e\u4f20\u5165\u65b9\u6cd5\u7684\u77e9\u9635\u7ef4\u5ea6\u76f8\u540c\u7684\u5355\u4e2a\u5e8f\u5217\u3002\n#transform\u662f\u4e0egroupby\uff08pandas\u4e2d\u6700\u6709\u7528\u7684\u64cd\u4f5c\u4e4b\u4e00\uff09\u901a\u5e38\u7ec4\u5408\u4f7f\u7528\uff0c\u5b83\u5bf9\u4f20\u5165\u65b9\u6cd5\u7684\u77e9\u9635\u8fdb\u884c\u7ef4\u5ea6\u4e0d\u53d8\u7684\u53d8\u6362\u3002\u5177\u4f53\u53d8\u6362\u65b9\u6cd5\u5199\u5728\u62ec\u53f7\u4e2d\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u533f\u540d\u51fd\u6570\uff0c\u5bf9\u4f20\u5165\u77e9\u9635\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u3002\n#\u5bf9\u4e8efeatures\u77e9\u9635\uff0c\u6309\u7167'MSSubClass'\u5217\u4e2d\u7684\u5143\u7d20\u5206\u5e03\u8fdb\u884c\u5206\u7ec4\uff0c\u88ab\u5206\u7ec4\u7684\u6570\u636e\u5217\u662f'MSZoning'\u5217\u3002feature.groupby(\u88ab\u4f5c\u4e3a\u7d22\u5f15\u7684\u5217\u7684\u540d\u79f0)[\u88ab\u5206\u7ec4\u7684\u6570\u636e\u5217\u7684\u540d\u79f0]\n#features.groupby('MSSubClass')['MSZoning']\u540e\uff0c\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u4ee5'MSSubClass'\u4e3a\u7d22\u5f15\uff0c\u4ee5'MSZoning'\u4e3a\u6570\u636e\u5217\u7684\u77e9\u9635\u3002\n#.transform()\u65b9\u6cd5\u5c06\u5bf9'MSZoning'\u6570\u636e\u5217\u8fdb\u884c()\u5185\u7684\u53d8\u6362\uff0c\u5b83\u5c06\u8fd4\u56de\u548c\u4f20\u5165\u77e9\u9635\u540c\u6837\u7ef4\u5ea6\u7684\u77e9\u9635\u3002\n#\u62ec\u53f7\u5185\u662f\u533f\u540d\u51fd\u6570\uff0c\u5c06\u5bf9\u4f20\u5165\u77e9\u9635\u4e2d\u7684\u7a7a\u503c\u8fdb\u884c\u586b\u5145\uff0c\u4f7f\u7528\u7684\u586b\u5145\u5143\u7d20\u662f\u4f20\u5165\u77e9\u9635\u4e2d\u7684\u4f17\u6570\u3002\nfeatures['MSZoning'] = features.groupby('MSSubClass')['MSZoning'].transform(lambda x: x.fillna(x.mode()[0]))\n\n\n#\u5224\u65ad\u51fafeatures\u77e9\u9635\u4e2d\u5217\u4e3a\u5bf9\u8c61\u7684\u5217\uff0c\u5c06\u5217\u540d\u5b58\u5165objects\u53d4\u7956\u3002\u5bf9\u4e8efeatures\u77e9\u9635\u4e2d\u7684\u5404\u4e2a\u5217\u5bf9\u8c61\uff0c\u5c06\u5176\u5217\u4e2d\u7684\u7a7a\u503c\u586b\u5145\u4e3a'None'\nobjects = []\nfor i in features.columns:\n    if features[i].dtype == object:\n        objects.append(i)\nfeatures.update(features[objects].fillna('None'))\n\n#\u4f7f\u7528\u4f20\u5165\u77e9\u9635\uff08'LotFrontage'\u5217\uff09\u7684\u4e2d\u4f4d\u6570\u5bf9\u4f20\u5165\u77e9\u9635\u4e2d\u7684\u7a7a\u503c\u8fdb\u884c\u586b\u5145\u3002\n#\u5148\u4ee5'Neighborhood'\u4e3a\u6807\u7b7e\uff0c\u4ee5'LotFrontage'\u4e3a\u88ab\u6c47\u603b\u5e8f\u5217\u3002\u7136\u540e\u4f7f\u7528\u88ab\u6c47\u603b\u5e8f\u5217\u4e2d\u7684\u4e2d\u4f4d\u6570\uff0c\u5bf9\u539f\u59cb\u77e9\u9635'LotFrontage'\u5217\u4e2d\u7684\u7a7a\u503c\u8fdb\u884c\u586b\u5145\u3002\n#transform\u7684\u7279\u6027\u662f\u540c\u7ef4\u64cd\u4f5c\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u548c\u539f\u59cb\u6570\u636e\u5728\u5e8f\u53f7\u4e0a\u5b8c\u5168\u5339\u914d\u3002\nfeatures['LotFrontage'] = features.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.median()))\n\n\n#\u5bf9\u4e8e\u6574\u578b\u548c\u6d6e\u70b9\u578b\u6570\u636e\u5217\uff0c\u4f7f\u75280\u586b\u5145\u5176\u4e2d\u7684\u7a7a\u503c\u3002\nnumeric_dtypes = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\nnumerics = []\nfor i in features.columns:\n    if features[i].dtype in numeric_dtypes:\n        numerics.append(i)\nfeatures.update(features[numerics].fillna(0))\n###############################\u586b\u5145\u7a7a\u503c-\u3010\u7ed3\u675f\u3011##########################\n","152ee99c":"\n######################\u6570\u5b57\u578b\u6570\u636e\u5217\u504f\u5ea6\u6821\u6b63-\u3010\u5f00\u59cb\u3011#######################\n#\u4f7f\u7528skew()\u65b9\u6cd5\uff0c\u8ba1\u7b97\u6240\u6709\u6574\u578b\u548c\u6d6e\u70b9\u578b\u6570\u636e\u5217\u4e2d\uff0c\u6570\u636e\u5206\u5e03\u7684\u504f\u5ea6\uff08skewness\uff09\u3002\n#\u504f\u5ea6\u662f\u7edf\u8ba1\u6570\u636e\u5206\u5e03\u504f\u659c\u65b9\u5411\u548c\u7a0b\u5ea6\u7684\u5ea6\u91cf\uff0c\u662f\u7edf\u8ba1\u6570\u636e\u5206\u5e03\u975e\u5bf9\u79f0\u7a0b\u5ea6\u7684\u6570\u5b57\u7279\u5f81\u3002\u4ea6\u79f0\u504f\u6001\u3001\u504f\u6001\u7cfb\u6570\u3002 \nnumeric_dtypes = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\nnumerics2 = []\nfor i in features.columns:\n    if features[i].dtype in numeric_dtypes:\n        numerics2.append(i)\nskew_features = features[numerics2].apply(lambda x: skew(x)).sort_values(ascending=False)\n\n#\u4ee50.5\u4f5c\u4e3a\u57fa\u51c6\uff0c\u7edf\u8ba1\u504f\u5ea6\u8d85\u8fc7\u6b64\u6570\u503c\u7684\u9ad8\u504f\u5ea6\u5206\u5e03\u6570\u636e\u5217\uff0c\u83b7\u53d6\u8fd9\u4e9b\u6570\u636e\u5217\u7684index\u3002\nhigh_skew = skew_features[skew_features > 0.5]\nskew_index = high_skew.index\n\n#\u5bf9\u9ad8\u504f\u5ea6\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u6b63\u6001\u5206\u5e03\u3002\n#Box\u548cCox\u63d0\u51fa\u7684\u53d8\u6362\u53ef\u4ee5\u4f7f\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6ee1\u8db3\u7ebf\u6027\u6027\u3001\u72ec\u7acb\u6027\u3001\u65b9\u5dee\u9f50\u6b21\u4ee5\u53ca\u6b63\u6001\u6027\u7684\u540c\u65f6\uff0c\u53c8\u4e0d\u4e22\u5931\u4fe1\u606f\u3002\nfor i in skew_index:\n    features[i] = boxcox1p(features[i], boxcox_normmax(features[i] + 1))#\u8fd9\u662fboxcox1p\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u53c2\u6570\u7684\u5177\u4f53\u610f\u4e49\u6682\u65f6\u4e0d\u89e3\u91ca\n######################\u6570\u5b57\u578b\u6570\u636e\u5217\u504f\u5ea6\u6821\u6b63-\u3010\u7ed3\u675f\u3011#######################\n","b785b3ce":"\n######################\u7279\u5f81\u5220\u9664\u548c\u878d\u5408\u521b\u5efa\u65b0\u7279\u5f81-\u3010\u5f00\u59cb\u3011###################\n#\u5220\u9664\u4e00\u4e9b\u7279\u5f81\u3002df.drop\uff08\u2018\u5217\u540d\u2019, axis=1\uff09\u4ee3\u8868\u5c06\u2018\u5217\u540d\u2019\u5bf9\u5e94\u7684\u5217\u6807\u7b7e\uff08\u4eec\uff09\u6cbf\u7740\u6c34\u5e73\u7684\u65b9\u5411\u4f9d\u6b21\u5220\u6389\u3002\nfeatures = features.drop(['Utilities', 'Street', 'PoolQC',], axis=1)\n\n#\u878d\u5408\u591a\u4e2a\u7279\u5f81\uff0c\u751f\u6210\u65b0\u7279\u5f81\u3002\nfeatures['YrBltAndRemod']=features['YearBuilt']+features['YearRemodAdd']\nfeatures['TotalSF']=features['TotalBsmtSF'] + features['1stFlrSF'] + features['2ndFlrSF']\n\nfeatures['Total_sqr_footage'] = (features['BsmtFinSF1'] + features['BsmtFinSF2'] +\n                                 features['1stFlrSF'] + features['2ndFlrSF'])\n\nfeatures['Total_Bathrooms'] = (features['FullBath'] + (0.5 * features['HalfBath']) +\n                               features['BsmtFullBath'] + (0.5 * features['BsmtHalfBath']))\n\nfeatures['Total_porch_sf'] = (features['OpenPorchSF'] + features['3SsnPorch'] +\n                              features['EnclosedPorch'] + features['ScreenPorch'] +\n                              features['WoodDeckSF'])\n\n#\u7b80\u5316\u7279\u5f81\u3002\u5bf9\u4e8e\u67d0\u4e9b\u5206\u5e03\u5355\u8c03\uff08\u6bd4\u5982100\u4e2a\u6570\u636e\u4e2d\u670999\u4e2a\u7684\u6570\u503c\u662f0.9\uff0c\u53e61\u4e2a\u662f0.1\uff09\u7684\u6570\u5b57\u578b\u6570\u636e\u5217\uff0c\u8fdb\u884c01\u53d6\u503c\u5904\u7406\u3002\nfeatures['haspool'] = features['PoolArea'].apply(lambda x: 1 if x > 0 else 0)\nfeatures['has2ndfloor'] = features['2ndFlrSF'].apply(lambda x: 1 if x > 0 else 0)\nfeatures['hasgarage'] = features['GarageArea'].apply(lambda x: 1 if x > 0 else 0)\nfeatures['hasbsmt'] = features['TotalBsmtSF'].apply(lambda x: 1 if x > 0 else 0)\nfeatures['hasfireplace'] = features['Fireplaces'].apply(lambda x: 1 if x > 0 else 0)\n\n#\u68c0\u67e5\u7279\u5f81\u5904\u7406\u540e\uff0c\u7279\u5f81\u77e9\u9635\u7684\u7ef4\u6570\uff0c\u6838\u67e5\u7279\u5f81\u5904\u7406\u7ed3\u679c\u3002\nprint(\"\u5220\u9664\u4e863\u4e2a\u7279\u5f81\uff0c\u53c8\u878d\u5408\u521b\u5efa\u4e8610\u4e2a\u65b0\u7279\u5f81\uff0c\u5904\u7406\u4e4b\u540e\u7684\u7279\u5f81\u77e9\u9635\u7ef4\u5ea6\u4e3a:\",features.shape)\n######################\u7279\u5f81\u5220\u9664\u548c\u878d\u5408\u521b\u5efa\u65b0\u7279\u5f81-\u3010\u7ed3\u675f\u3011###################\n\n####################\u7279\u5f81\u6295\u5f71\u3001\u7279\u5f81\u77e9\u9635\u62c6\u89e3\u548c\u622a\u53d6-\u3010\u5f00\u59cb\u3011#################\n#\u4f7f\u7528.get_dummies()\u65b9\u6cd5\u5bf9\u7279\u5f81\u77e9\u9635\u8fdb\u884c\u7c7b\u4f3c\u201c\u5750\u6807\u6295\u5f71\u201d\u64cd\u4f5c\u3002\u83b7\u5f97\u5728\u65b0\u7a7a\u95f4\u4e0b\u7684\u7279\u5f81\u8868\u8fbe\u3002\nfinal_features = pd.get_dummies(features).reset_index(drop=True)\n#\u6253\u5370\u65b0\u7a7a\u95f4\u4e0b\u7684\u7279\u5f81\u7ef4\u6570\uff0c\u4e5f\u662f\u65b0\u7a7a\u95f4\u7684\u7ef4\u6570\u3002\nprint(\"\u4f7f\u7528get_dummies()\u65b9\u6cd5\u201c\u6295\u5f71\u201d\u7279\u5f81\u77e9\u9635\uff0c\u5373\u5206\u89e3\u51fa\u66f4\u591a\u7279\u5f81\uff0c\u5f97\u5230\u66f4\u591a\u5217\u3002\u6295\u5f71\u540e\u7684\u7279\u5f81\u77e9\u9635\u7ef4\u5ea6\u4e3a:\",final_features.shape)\n\n#\u8fdb\u884c\u7279\u5f81\u7a7a\u95f4\u964d\u9636\u3002\u622a\u53d6\u524dlen(y)\u884c\uff0c\u5b58\u5165X\u9635\uff08\u56e0\u4e3a\u4e4b\u524d\u8fdb\u884c\u4e86\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\u7684\u5408\u5e76\uff0c\u6240\u4ee5\u4ece\u5408\u5e76\u77e9\u9635\u4e2d\u53d6\u51fa\u524dlen(y)\u884c\uff0c\u5c31\u5f97\u5230\u4e86\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5904\u7406\u540e\u7684\u7279\u5f81\u77e9\u9635\uff09\u3002\n#\u622a\u53d6\u5269\u4f59\u90e8\u5206\uff0c\u5373\u4ece\u5e8f\u53f7\u4e3alen(y)\u7684\u884c\u5f00\u59cb\uff0c\u81f3\u77e9\u9635\u7ed3\u5c3e\u7684\u5404\u884c\uff0c\u5b58\u5165X_sub\u9635\u3002\u6b64\u4e3a\u5b8c\u6210\u7279\u5f81\u53d8\u6362\u540e\u7684\u6d4b\u8bd5\u96c6\u7279\u5f81\u77e9\u9635\u3002\n#\u6ce8\uff1alen(df)\u662f\u884c\u8ba1\u6570\u65b9\u6cd5\nX = final_features.iloc[:len(y), :]\t#y\u662f\u5217\u5411\u91cf\uff0c\u5b58\u50a8\u4e86\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u623f\u4ef7\u5217\u4fe1\u606f\u3002\u622a\u53d6\u540e\u5f97\u5230\u7684X\u9635\u7684\u7ef4\u5ea6\u662flen(y)*(final_features\u7684\u5217\u6570)\u3002\nX_sub = final_features.iloc[len(y):, :]#\u4f7f\u7528len\u547d\u4ee4\uff0c\u6c42\u77e9\u9635X\u7684\u957f\u5ea6\uff0c\u5f97\u5230\u7684\u662f\u77e9\u9635\u5bf9\u8c61\u7684\u957f\u5ea6\uff0c\u5373\u6709\u77e9\u9635\u4e2d\u6709\u591a\u5c11\u5217\uff0c\u800c\u4e0d\u662f\u6bcf\u5217\u4e0a\u6709\u591a\u5c11\u884c\u3002\nprint(\"\u5220\u9664\u4e863\u4e2a\u7279\u5f81\uff0c\u53c8\u878d\u5408\u521b\u5efa\u4e8610\u4e2a\u65b0\u7279\u5f81\uff0c\u5904\u7406\u4e4b\u540e\u7684\u7279\u5f81\u77e9\u9635\u7ef4\u5ea6\u4e3a:\",'X', X.shape, 'y', y.shape, 'X_sub', X_sub.shape)\n\n#\u5728\u65b0\u751f\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5254\u9664X\u9635\u548cy\u9635\u4e2d\u6709\u7740\u6781\u7aef\u503c\u7684\u5404\u884c\u6570\u636e\uff08\u56e0\u4e3aX\u548cy\u9635\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u8981\u4e00\u8d77\u5220\u9664\u540c\u6837\u7684\u884c\uff09\u3002outliers\u6570\u503c\u4e2d\u7ed9\u51fa\u4e86\u6781\u7aef\u503c\u7684\u5217\u5e8f\u53f7\u3002\n#df.drop(df.index[\u5e8f\u53f7])\u5c06\u5220\u9664\u6307\u5b9a\u5e8f\u53f7\u7684\u5404\u884c\u3002\u518d\u4f7f\u7528=\u5bf9df\u8986\u503c\u3002\noutliers = [30, 88, 462, 631, 1322]\nX = X.drop(X.index[outliers])#\u56e0\u4e3aX\u9635\u662f\u7ecf\u8fc7\u5bf9\u7279\u5f81\u77e9\u9635\u8fdb\u884c\u7c7b\u4f3c\u201c\u5750\u6807\u6295\u5f71\u201d\u64cd\u4f5c\u540e\u5f97\u5230\u7684\uff0c\u5217\u5411\u91cfy\u4e2d\u7684\u884c\u53f7\u5bf9\u5e94\u7740X\u9635\u4e2d\u7684\u5217\u53f7\u3002\ny = y.drop(y.index[outliers])\n####################\u7279\u5f81\u6295\u5f71\u3001\u7279\u5f81\u77e9\u9635\u62c6\u89e3\u548c\u622a\u53d6-\u3010\u7ed3\u675f\u3011#################\n","365074ab":"\n######################\u6d88\u9664\u622a\u53d6\u540e\u7279\u5f81\u77e9\u9635\u7684\u8fc7\u62df\u5408-\u3010\u5f00\u59cb\u3011#######################  \u8fd9\u4e00\u6b65\u7684\u76ee\u7684\u662f\u5904\u7406X\u9635\u548cX_sub\u9635\u3002\n#\u5728\u65b0\u751f\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5220\u9664\u5c06\u4ea7\u751f\u8fc7\u62df\u5408\u7684\u6570\u636e\u5217\u3002\n\n#\u8fd9\u79cd\u6570\u636e\u5217\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a\noverfit = []#\u7528\u6765\u8bb0\u5f55\u4ea7\u751f\u8fc7\u62df\u5408\u7684\u6570\u636e\u5217\u7684\u5e8f\u53f7\nfor i in X.columns:#\u904d\u5386\u622a\u53d6\u540e\u7279\u5f81\u77e9\u9635\u7684\u6bcf\u4e00\u5217\n    counts = X[i].value_counts()#\u4f7f\u7528.value_counts()\u65b9\u6cd5\uff0c\u67e5\u770b\u5728X\u77e9\u9635\u7684\u7b2ci\u5217\u4e2d\uff0c\u4e0d\u540c\u7684\u53d6\u503c\u5206\u522b\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u9ed8\u8ba4\u6309\u6b21\u6570\u6700\u9ad8\u5230\u6700\u4f4e\u505a\u964d\u5e8f\u6392\u5217\u3002\u8fd4\u56de\u4e00\u4e2adf\u3002\n    zeros = counts.iloc[0]#\u901a\u8fc7\u884c\u53f7\u7d22\u5f15\u884c\u6570\u636e\uff0c\u53d6\u51facounts\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u53d6\u503c\u5230\u5e95\u662f\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5b58\u5165zeros\n    if zeros \/ len(X) * 100 > 99.94:\n#\u5224\u65ad\u67d0\u4e00\u5217\u662f\u5426\u5c06\u4ea7\u751f\u8fc7\u62df\u5408\u7684\u6761\u4ef6\uff1a\n#\u622a\u53d6\u540e\u7684\u7279\u5f81\u77e9\u9635\u6709len(X)\u5217\uff0c\u5982\u679c\u67d0\u4e00\u5217\u4e2d\u7684\u67d0\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\u9664\u4ee5\u7279\u5f81\u77e9\u9635\u7684\u5217\u6570\u8d85\u8fc799.94%\uff0c\u5373\u5176\u51e0\u4e4e\u5728\u88ab\u6295\u5f71\u7684\u5404\u4e2a\u7ef4\u5ea6\u4e0a\u90fd\u6709\u7740\u540c\u6837\u7684\u53d6\u503c\uff0c\u5e76\u4e0d\u5177\u6709\u201c\u4e3b\u6210\u5206\u201d\u7684\u6027\u8d28\uff0c\u5219\u8bb0\u4e3a\u8fc7\u62df\u5408\u5217\u3002\n        overfit.append(i)\n\n#\u627e\u5230\u5c06\u4ea7\u751f\u8fc7\u62df\u5408\u7684\u6570\u636e\u5217\u7684\u4f4d\u7f6e\u540e\uff0c\u5728\u7279\u5f81\u77e9\u9635\u4e2d\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u3002\noverfit = list(overfit)\n#overfit.append('MSZoning_C (all)')#\u8fd9\u6761\u8bed\u53e5\u6709\u7528\u5417\uff1f\u662f\u8981\u628a\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635X\u4e2d\u7684\u5217\u6807\u7b7e\u4e3a'MSZoning_C (all)'\u7684\u5217\u4e5f\u5220\u9664\u5417\uff1f\u4f46\u662f\u8bad\u7ec3\u6570\u636e\u4e2d\u5e76\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5217\u6807\u7b7e\u540d\u79f0\u4e3aMSZoning_C (all)\u3002\nX = X.drop(overfit, axis=1)#.copy()#\u5220\u9664\u622a\u53d6\u540e\u7279\u5f81\u77e9\u9635X\u4e2d\u7684\u8fc7\u62df\u5408\u5217\u3002\u56e0\u4e3adrop\u5e76\u4e0d\u5f71\u54cd\u539f\u6570\u636e\uff0c\u6240\u4ee5\u4f7f\u7528copy\u3002\u76f4\u63a5\u8986\u503c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u3002\nX_sub = X_sub.drop(overfit, axis=1)#.copy()\n######################\u6d88\u9664\u622a\u53d6\u540e\u7279\u5f81\u77e9\u9635\u7684\u8fc7\u62df\u5408-\u3010\u7ed3\u675f\u3011#######################\n","ddeff934":"\nprint(\"\u5220\u9664\u6781\u7aef\u503c\u53ca\u8fc7\u62df\u5408\u5217\u540e\uff0c\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635\u7684\u7ef4\u6570\u4e3a\uff0c\u7279\u5f81\uff1a\",'X', X.shape, '\u5bf9\u5e94\u4e8e\u7279\u5f81\u7684\u5bf9\u6570\u53d8\u6362\u540e\u7684\u623f\u4ef7y', y.shape, '\u6d4b\u8bd5\u6570\u636e\u7684\u7279\u5f81\u77e9\u9635\uff08\u5b83\u5e94\u8be5\u5728\u884c\u3001\u5217\u4e0a\u672a\u88ab\u5220\u51cf\uff09X_sub', X_sub.shape)\n##############################################################\u7279\u5f81\u5904\u7406-\u3010\u7ed3\u675f\u3011###################################################################################\n","dfe42262":"\n##############################################################\u673a\u5668\u5b66\u4e60-\u3010\u5f00\u59cb\u3011###################################################################################\nprint('\u7279\u5f81\u5904\u7406\u5df2\u7ecf\u5b8c\u6210\u3002\u5f00\u59cb\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u673a\u5668\u5b66\u4e60', datetime.now())\n\n#\u8bbe\u7f6ek\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u53c2\u6570\u3002\nkfolds = KFold(n_splits=10, shuffle=True, random_state=42)\n\n\n#\u5b9a\u4e49\u5747\u65b9\u6839\u5bf9\u6570\u8bef\u5dee\uff08Root Mean Squared Logarithmic Error \uff0cRMSLE\uff09\ndef rmsle(y, y_pred):\n    return np.sqrt(mean_squared_error(y, y_pred))\n\n\n#\u521b\u5efa\u6a21\u578b\u8bc4\u5206\u51fd\u6570\uff0c\u6839\u636e\u4e0d\u540c\u6a21\u578b\u7684\u8868\u73b0\u6253\u5206\n#cv\u8868\u793aCross-validation,\u4ea4\u53c9\u9a8c\u8bc1\u7684\u610f\u601d\u3002\ndef cv_rmse(model, X=X):\n    rmse = np.sqrt(-cross_val_score(model, X, y, scoring=\"neg_mean_squared_error\", cv=kfolds))\n    return (rmse)\n","efc937e0":"\n#############\u4e2a\u4f53\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u521b\u5efa\uff08\u5373\u6a21\u578b\u58f0\u660e\u548c\u53c2\u6570\u8bbe\u7f6e\uff09-\u3010\u5f00\u59cb\u3011############\nalphas_alt = [14.5, 14.6, 14.7, 14.8, 14.9, 15, 15.1, 15.2, 15.3, 15.4, 15.5]\nalphas2 = [5e-05, 0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0008]\ne_alphas = [0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007]\ne_l1ratio = [0.8, 0.85, 0.9, 0.95, 0.99, 1]\n\n#\u5b9a\u4e49ridge\u5cad\u56de\u5f52\u6a21\u578b\uff08\u4f7f\u7528\u4e8c\u8303\u6570\u4f5c\u4e3a\u6b63\u5219\u5316\u9879\u3002\u4e0d\u8bba\u662f\u4f7f\u7528\u4e00\u8303\u6570\u8fd8\u662f\u4e8c\u8303\u6570\uff0c\u6b63\u5219\u5316\u9879\u7684\u5f15\u5165\u5747\u662f\u4e3a\u4e86\u964d\u4f4e\u8fc7\u62df\u5408\u98ce\u9669\u3002\uff09\n#\u6ce8\uff1a\u6b63\u5219\u5316\u9879\u5982\u679c\u4f7f\u7528\u4e8c\u8303\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u4f55\u9700\u8981\u5bfb\u4f18\u7684\u53c2\u6570\u503c\uff0c\u5728\u5bfb\u4f18\u7ec8\u6b62\u65f6\uff0c\u5b83\u90fd\u65e0\u6cd5\u5c06\u67d0\u4e9b\u53c2\u6570\u503c\u53d8\u4e3a\u4e25\u683c\u76840\uff0c\u5c3d\u7ba1\u67d0\u4e9b\u53c2\u6570\u4f30\u8ba1\u503c\u53d8\u5f97\u975e\u5e38\u5c0f\u4ee5\u81f3\u4e8e\u53ef\u4ee5\u5ffd\u7565\u3002\u5373\u4f7f\u7528\u4e8c\u8303\u6570\u4f1a\u4fdd\u7559\u53d8\u91cf\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u4f3cPCA\u7684\u53d8\u91cf\u51f8\u663e\u3002\n#\u6ce8\uff1a\u6b63\u5219\u5316\u9879\u5982\u679c\u4f7f\u7528\u4e00\u8303\u6570\uff0c\u5b83\u6bd4L2\u8303\u6570\u66f4\u6613\u4e8e\u83b7\u5f97\u201c\u7a00\u758f(sparse)\u201d\u89e3\uff0c\u5373\u5b83\u7684\u6c42\u89e3\u7ed3\u679c\u4f1a\u6709\u66f4\u591a\u7684\u96f6\u5206\u91cf\u3002\nridge = make_pipeline(RobustScaler(), RidgeCV(alphas=alphas_alt, cv=kfolds))\n\n#\u5b9a\u4e49LASSO\u6536\u7f29\u6a21\u578b\uff08\u4f7f\u7528L1\u8303\u6570\u4f5c\u4e3a\u6b63\u5219\u5316\u9879\uff09\uff08\u7531\u4e8e\u5bf9\u76ee\u6807\u51fd\u6570\u7684\u6c42\u89e3\u7ed3\u679c\u4e2d\u5c06\u5f97\u5230\u5f88\u591a\u7684\u96f6\u5206\u91cf\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u6536\u7f29\u6a21\u578b\u3002\uff09\n#\u6ce8\uff1a\u6b63\u5219\u5316\u9879\u5982\u679c\u4f7f\u7528\u4e8c\u8303\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u4f55\u9700\u8981\u5bfb\u4f18\u7684\u53c2\u6570\u503c\uff0c\u5728\u5bfb\u4f18\u7ec8\u6b62\u65f6\uff0c\u5b83\u90fd\u65e0\u6cd5\u5c06\u67d0\u4e9b\u53c2\u6570\u503c\u53d8\u4e3a\u4e25\u683c\u76840\uff0c\u5c3d\u7ba1\u67d0\u4e9b\u53c2\u6570\u4f30\u8ba1\u503c\u53d8\u5f97\u975e\u5e38\u5c0f\u4ee5\u81f3\u4e8e\u53ef\u4ee5\u5ffd\u7565\u3002\u5373\u4f7f\u7528\u4e8c\u8303\u6570\u4f1a\u4fdd\u7559\u53d8\u91cf\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u4f3cPCA\u7684\u53d8\u91cf\u51f8\u663e\u3002\n#\u6ce8\uff1a\u6b63\u5219\u5316\u9879\u5982\u679c\u4f7f\u7528\u4e00\u8303\u6570\uff0c\u5b83\u6bd4L2\u8303\u6570\u66f4\u6613\u4e8e\u83b7\u5f97\u201c\u7a00\u758f(sparse)\u201d\u89e3\uff0c\u5373\u5b83\u7684\u6c42\u89e3\u7ed3\u679c\u4f1a\u6709\u66f4\u591a\u7684\u96f6\u5206\u91cf\u3002\t\t\t\t\t\t\t\t\t\t\nlasso = make_pipeline(RobustScaler(), LassoCV(max_iter=1e7, alphas=alphas2, random_state=42, cv=kfolds))\n\n#\u5b9a\u4e49elastic net\u5f39\u6027\u7f51\u7edc\u6a21\u578b\uff08\u5f39\u6027\u7f51\u7edc\u5b9e\u9645\u4e0a\u662f\u7ed3\u5408\u4e86\u5cad\u56de\u5f52\u548classo\u7684\u7279\u70b9\uff0c\u540c\u65f6\u4f7f\u7528\u4e86L1\u548cL2\u4f5c\u4e3a\u6b63\u5219\u5316\u9879\u3002\uff09\t\t\t\t\t\t\t\t\t\nelasticnet = make_pipeline(RobustScaler(), ElasticNetCV(max_iter=1e7, alphas=e_alphas, cv=kfolds, l1_ratio=e_l1ratio))\n\n#\u5b9a\u4e49SVM\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b                                     \nsvr = make_pipeline(RobustScaler(), SVR(C= 20, epsilon= 0.008, gamma=0.0003,))\n\n#\u5b9a\u4e49GB\u68af\u5ea6\u63d0\u5347\u6a21\u578b\uff08\u5c55\u5f00\u5230\u4e00\u9636\u5bfc\u6570\uff09\t\t\t\t\t\t\t\t\t\ngbr = GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05, max_depth=4, max_features='sqrt', min_samples_leaf=15, min_samples_split=10, loss='huber', random_state =42)                             \n\n#\u5b9a\u4e49lightgbm\u6a21\u578b\t\t\t\t\t\t\t\t\t\nlightgbm = LGBMRegressor(objective='regression', \n                                       num_leaves=4,\n                                       learning_rate=0.01, \n                                       n_estimators=5000,\n                                       max_bin=200, \n                                       bagging_fraction=0.75,\n                                       bagging_freq=5, \n                                       bagging_seed=7,\n                                       feature_fraction=0.2,\n                                       feature_fraction_seed=7,\n                                       verbose=-1,\n                                       #min_data_in_leaf=2,\n                                       #min_sum_hessian_in_leaf=11\n                                       )\n\n#\u5b9a\u4e49xgboost\u6a21\u578b\uff08\u5c55\u5f00\u5230\u4e8c\u9636\u5bfc\u6570\uff09                                      \nxgboost = XGBRegressor(learning_rate=0.01, n_estimators=3460,\n                                     max_depth=3, min_child_weight=0,\n                                     gamma=0, subsample=0.7,\n                                     colsample_bytree=0.7,\n                                     # objective='reg:linear', nthread=-1,\n                                     objective='reg:squarederror', nthread=-1,\n                                     scale_pos_weight=1, seed=27,\n                                     reg_alpha=0.00006)\n#############\u4e2a\u4f53\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u521b\u5efa\uff08\u5373\u6a21\u578b\u58f0\u660e\u548c\u53c2\u6570\u8bbe\u7f6e\uff09-\u3010\u7ed3\u675f\u3011############\n","f05d9b9b":"\n###########################\u96c6\u6210\u591a\u4e2a\u4e2a\u4f53\u5b66\u4e60\u5668-\u3010\u5f00\u59cb\u3011##########################\nstack_gen = StackingCVRegressor(regressors=(ridge, lasso, elasticnet, svr, gbr, xgboost, lightgbm),\n                                meta_regressor=xgboost,\n                                use_features_in_secondary=True)\n###########################\u96c6\u6210\u591a\u4e2a\u4e2a\u4f53\u5b66\u4e60\u5668-\u3010\u7ed3\u675f\u3011##########################                             \n","05e53711":"\n############################\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u6253\u5206-\u3010\u5f00\u59cb\u3011###########################\n#\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5e76\u5bf9\u4e0d\u540c\u6a21\u578b\u7684\u8868\u73b0\u6253\u5206\n#\uff08\u7531\u4e8e\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5c06\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u96c6\u5bf9\u540c\u4e00\u6a21\u578b\u8fdb\u884c\u8bc4\u5206\uff0c\u6545\u6bcf\u4e2a\u6a21\u578b\u5bf9\u5e94\u4e00\u4e2a\u5f97\u5206\u5e8f\u5217\u3002\u5c55\u793a\u6a21\u578b\u5f97\u5206\u5e8f\u5217\u7684\u5e73\u5747\u5206\u3001\u6807\u51c6\u5dee\uff09\nprint('\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u8ba1\u7b97\u4e0d\u540c\u6a21\u578b\u7684\u5f97\u5206TEST score on CV')\n\n#\u6253\u5370\u4e8c\u8303\u6570rideg\u5cad\u56de\u5f52\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(ridge)\nprint(\"\u4e8c\u8303\u6570rideg\u5cad\u56de\u5f52\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370\u4e00\u8303\u6570LASSO\u6536\u7f29\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(lasso)\nprint(\"\u4e00\u8303\u6570LASSO\u6536\u7f29\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370elastic net\u5f39\u6027\u7f51\u7edc\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(elasticnet)\nprint(\"elastic net\u5f39\u6027\u7f51\u7edc\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370SVR\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(svr)\nprint(\"SVR\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370lightgbm\u8f7b\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(lightgbm)\nprint(\"lightgbm\u8f7b\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370gbr\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(gbr)\nprint(\"gbr\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n\n#\u6253\u5370xgboost\u6a21\u578b\u7684\u5f97\u5206\nscore = cv_rmse(xgboost)\nprint(\"xgboost\u6a21\u578b\u7684\u5f97\u5206: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()), datetime.now(), )\n############################\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u6253\u5206-\u3010\u7ed3\u675f\u3011###########################\n","4ee9bc37":"\n#########\u4f7f\u7528\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635\u4f5c\u4e3a\u8f93\u5165\uff0c\u8bad\u7ec3\u6570\u636e\u5bf9\u6570\u5904\u7406\u540e\u7684\u9884\u6d4b\u623f\u4ef7\u4f5c\u4e3a\u8f93\u51fa\uff0c\u8fdb\u884c\u5404\u4e2a\u6a21\u578b\u7684\u8bad\u7ec3-\u3010\u5f00\u59cb\u3011#########\n#\u5f00\u59cb\u96c6\u5408\u6240\u6709\u6a21\u578b\uff0c\u4f7f\u7528stacking\u65b9\u6cd5\nprint('\u8fdb\u884c\u6a21\u578b\u53c2\u6570\u8bad\u7ec3 START Fit')\n\nprint(datetime.now(), '\u5bf9stack_gen\u96c6\u6210\u5668\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nstack_gen_model = stack_gen.fit(np.array(X), np.array(y))\n\nprint(datetime.now(), '\u5bf9elasticnet\u5f39\u6027\u7f51\u7edc\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nelastic_model_full_data = elasticnet.fit(X, y)\n\nprint(datetime.now(), '\u5bf9\u4e00\u8303\u6570lasso\u6536\u7f29\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nlasso_model_full_data = lasso.fit(X, y)\n\nprint(datetime.now(), '\u5bf9\u4e8c\u8303\u6570ridge\u5cad\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nridge_model_full_data = ridge.fit(X, y)\n\nprint(datetime.now(), '\u5bf9svr\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nsvr_model_full_data = svr.fit(X, y)\n\nprint(datetime.now(), '\u5bf9GradientBoosting\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\ngbr_model_full_data = gbr.fit(X, y)\n\nprint(datetime.now(), '\u5bf9xgboost\u4e8c\u9636\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nxgb_model_full_data = xgboost.fit(X, y)\n\nprint(datetime.now(), '\u5bf9lightgbm\u8f7b\u68af\u5ea6\u63d0\u5347\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u8bad\u7ec3')\nlgb_model_full_data = lightgbm.fit(X, y)\n#########\u4f7f\u7528\u8bad\u7ec3\u6570\u636e\u7279\u5f81\u77e9\u9635\u4f5c\u4e3a\u8f93\u5165\uff0c\u8bad\u7ec3\u6570\u636e\u5bf9\u6570\u5904\u7406\u540e\u7684\u9884\u6d4b\u623f\u4ef7\u4f5c\u4e3a\u8f93\u51fa\uff0c\u8fdb\u884c\u5404\u4e2a\u6a21\u578b\u7684\u8bad\u7ec3-\u3010\u7ed3\u675f\u3011#########\n\n############################\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u6253\u5206-\u3010\u7ed3\u675f\u3011###########################\n","d029dd51":"\n########\u5b9a\u4e49\u4e2a\u4f53\u5b66\u4e60\u5668\u7684\u9884\u6d4b\u503c\u878d\u5408\u51fd\u6570\uff0c\u68c0\u6d4b\u9884\u6d4b\u503c\u878d\u5408\u7b56\u7565\u7684\u6548\u679c-\u3010\u5f00\u59cb\u3011#######\n#\u7efc\u5408\u591a\u4e2a\u6a21\u578b\u4ea7\u751f\u7684\u9884\u6d4b\u503c\uff0c\u4f5c\u4e3a\u591a\u6a21\u578b\u7ec4\u5408\u5b66\u4e60\u5668\u7684\u9884\u6d4b\u503c\ndef blend_models_predict(X):\n    return ((0.1 * elastic_model_full_data.predict(X)) + \\\n            (0.05 * lasso_model_full_data.predict(X)) + \\\n            (0.1 * ridge_model_full_data.predict(X)) + \\\n            (0.1 * svr_model_full_data.predict(X)) + \\\n            (0.1 * gbr_model_full_data.predict(X)) + \\\n            (0.15 * xgb_model_full_data.predict(X)) + \\\n            (0.1 * lgb_model_full_data.predict(X)) + \\\n            (0.3 * stack_gen_model.predict(np.array(X))))\n\n#\u6253\u5370\u5728\u4e0a\u8ff0\u6a21\u578b\u914d\u6bd4\u4e0b\uff0c\u591a\u6a21\u578b\u7ec4\u5408\u5b66\u4e60\u5668\u7684\u5747\u65b9\u6839\u5bf9\u6570\u8bef\u5dee\uff08Root Mean Squared Logarithmic Error \uff0cRMSLE\uff09\n#\u4f7f\u7528\u8bad\u7ec3\u6570\u636e\u5bf9\u521b\u9020\u7684\u6a21\u578b\u8fdb\u884ck\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u4ee5\u8bad\u7ec3\u521b\u9020\u51fa\u7684\u6a21\u578b\u7684\u53c2\u6570\u914d\u7f6e\u3002\u4ea4\u53c9\u9a8c\u8bc1\u8bad\u7ec3\u8fc7\u7a0b\u7ed3\u675f\u540e\uff0c\u5c06\u5f97\u5230\u6a21\u578b\u7684\u53c2\u6570\u914d\u7f6e\u3002\u4f7f\u7528\u5f97\u51fa\u7684\u53c2\u6570\u914d\u7f6e\u4e0b\uff0c\u5728\u5168\u4f53\u8bad\u7ec3\u6570\u636e\u4e0a\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u6a21\u578b\u5bf9\u5168\u4f53\u8bad\u7ec3\u6570\u636e\u91cd\u6784\u7684\u8bef\u5dee\u3002\nprint('\u878d\u5408\u540e\u7684\u8bad\u7ec3\u6a21\u578b\u5bf9\u539f\u6570\u636e\u91cd\u6784\u65f6\u7684\u5747\u65b9\u6839\u5bf9\u6570\u8bef\u5deeRMSLE score on train data:')\nprint(rmsle(y, blend_models_predict(X)))\n########\u5b9a\u4e49\u4e2a\u4f53\u5b66\u4e60\u5668\u7684\u9884\u6d4b\u503c\u878d\u5408\u51fd\u6570\uff0c\u68c0\u6d4b\u9884\u6d4b\u503c\u878d\u5408\u7b56\u7565\u7684\u6548\u679c-\u3010\u7ed3\u675f\u3011#######\n","f976487e":"\n########\u5c06\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u77e9\u9635\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f20\u5165\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u5f97\u51fa\u7684\u8f93\u51fa\u5199\u5165.csv\u6587\u4ef6\u7684\u7b2c2\u5217-\u3010\u5f00\u59cb\u3011########\nprint('\u4f7f\u7528\u6d4b\u8bd5\u96c6\u7279\u5f81\u8fdb\u884c\u623f\u4ef7\u9884\u6d4b Predict submission', datetime.now(),)\nsubmission = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\n#\u51fd\u6570\u6ce8\u91ca\uff1a.iloc[:,1]\u662f\u57fa\u4e8e\u7d22\u5f15\u4f4d\u6765\u9009\u53d6\u6570\u636e\u96c6\uff0c[\u7d22\u5f151:\u7d22\u5f152]\uff0c\u5de6\u95ed\u53f3\u5f00\u3002\nsubmission.iloc[:,1] = np.floor(np.expm1(blend_models_predict(X_sub)))\n########\u5c06\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u77e9\u9635\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f20\u5165\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u5f97\u51fa\u7684\u8f93\u51fa\u5199\u5165.csv\u6587\u4ef6\u7684\u7b2c2\u5217-\u3010\u7ed3\u675f\u3011########\n\n# \u4ee5csv\u6587\u4ef6\u7684\u5f62\u5f0f\u8f93\u51fa\u9884\u6d4b\u503c, score=0.1164\n# submission.to_csv(\"House_price_submission.csv\", index=False)\n# print('\u878d\u5408\u7ed3\u679c.csv\u6587\u4ef6\u8f93\u51fa\u6210\u529f Save submission', datetime.now())","cd81ca80":"\n######################\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u878d\u5408-\u3010\u5f00\u59cb\u3011#############################\n#\u5728\u591a\u6a21\u578b\u96c6\u6210\u5b66\u4e60\u5668\u9884\u6d4b\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\uff0c\u878d\u5408\u5176\u4ed6\u4f18\u79c0\u6a21\u578b\uff08\u5373\u5e73\u53f0\u4e0a\u5176\u4ed6\u5747\u65b9\u6839\u5bf9\u6570\u8bef\u5dee\u5c0f\u7684\u6a21\u578b\uff09\u7684\u9884\u6d4b\u7ed3\u679c\u3002\n#\u8fd9\u6b65\u64cd\u4f5c\u662f\u4e3a\u4e86\u964d\u4f4e\u591a\u6a21\u578b\u96c6\u6210\u5b66\u4e60\u5668\u7684\u65b9\u5dee\u3002\nprint('\u878d\u5408\u5176\u4ed6\u4f18\u79c0\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c Blend with Top Kernals submissions', datetime.now(),)\nsub_1 = pd.read_csv('..\/input\/blending-high-scores-top-1-8th-place\/blend_submission.csv')\nsub_2 = pd.read_csv('..\/input\/1-house-prices-solution-top-1\/best_submission.csv')\nsub_3 = pd.read_csv('..\/input\/blend-stack-lr-gb-0-10649-house-prices-v57\/House_price_submission_v57.csv')\nsubmission.iloc[:,1] = np.floor((0.25 * np.floor(np.expm1(blend_models_predict(X_sub)))) + \n                                (0.25 * sub_1.iloc[:,1]) + \n                                (0.25 * sub_2.iloc[:,1]) + \n                                (0.25 * sub_3.iloc[:,1]))\n######################\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u878d\u5408-\u3010\u7ed3\u675f\u3011#############################      \n","3e951915":"\n####################\u878d\u5408\u7ed3\u679c\u7684\u6781\u7aef\u503c\u5254\u9664-\u3010\u5f00\u59cb\u3011###########################  \n#\u5904\u7406\u878d\u5408\u540e\u7ed3\u679c\u4e2d\u7684\u6781\u7aef\u503c\u3002\u628a\u592a\u5927\u7684\u6570\u503c\uff08\u964d\u5e8f\u6392\u5217\u65f6\uff0c\u4f4d\u4e8e\u9876\u90e8\u5f80\u4e0b0.005\u7684\u6570\u503c\uff0c\u5c31\u662f\u53ea\u67090.005\u7684\u6570\u6bd4\u5b83\u5927\uff09\u7f29\u5c0f\u4e00\u70b9\uff08\u4e58\u4ee50.77\uff09\uff0c\u628a\u592a\u5c0f\u7684\u6570\u503c\uff08\u964d\u5e8f\u6392\u5217\u65f6\uff0c\u4f4d\u4e8e\u9876\u90e8\u5f80\u4e0b0.99\u7684\u6570\u503c\uff09\u653e\u5927\u4e00\u70b9\uff08\u4e58\u4ee51.1\uff09\nq1 = submission['SalePrice'].quantile(0.005)\nq2 = submission['SalePrice'].quantile(0.995)\nsubmission['SalePrice'] = submission['SalePrice'].apply(lambda x: x if x > q1 else x*0.77)\nsubmission['SalePrice'] = submission['SalePrice'].apply(lambda x: x if x < q2 else x*1.1)\n####################\u878d\u5408\u7ed3\u679c\u7684\u6781\u7aef\u503c\u5254\u9664-\u3010\u7ed3\u675f\u3011###########################\n\n#\u4ee5csv\u6587\u4ef6\u7684\u5f62\u5f0f\u8f93\u51fa\u9884\u6d4b\u503c\nsubmission.to_csv(\"House_price_submission.csv\", index=False)\nprint('\u878d\u5408\u7ed3\u679c.csv\u6587\u4ef6\u8f93\u51fa\u6210\u529f Save submission', datetime.now())\n##############################################################\u673a\u5668\u5b66\u4e60-\u3010\u7ed3\u675f\u3011###################################################################################\n","d2d67836":"# \u6570\u636e\u5bfc\u5165\u548c\u7279\u5f81\u63d0\u53d6","7202635f":"# \u5bfc\u5165\u8ba1\u7b97\u6a21\u5757","80ad6289":"# \u673a\u5668\u5b66\u4e60","6a4b3efc":"# \u7279\u5f81\u5904\u7406","a66aa510":"\n#---------------------------------------------------------------------------------------------------------------------------#\n#---------------------------------------------------------------------------------------------------------------------------#\n#---------------------------------------------------------------------------------------------------------------------------#\n\n#\u5f53\u5bf9\u5e73\u53f0\u672a\u516c\u5f00\u7684\u6d4b\u8bd5\u96c6\u8fdb\u884c\u9884\u6d4b\u65f6\uff0c\u524d\u8ff0\u6a21\u578b\u7684\u8bef\u5dee\u662f0.114 this kernel gave a score 0.114\n#\u4e3a\u4e86\u63d0\u9ad8\u6a21\u578b\u7684\u5f97\u5206\uff0c\u5f15\u5165\u5176\u4ed6\u6a21\u578b\u7684\u4f18\u79c0\u9884\u6d4b\u7ed3\u679c\uff0c\u4e0e\u524d\u8ff0\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u6df7\u5408\uff08\u6709\u70b9\u7c7b\u4f3c\u6284\u522b\u4eba\u7684\u7b54\u6848\uff0c\u4f46\u5b9e\u8d28\u662f\u6269\u5927\u96c6\u6210\u6a21\u578b\u7684\u89c4\u6a21\uff0c\u5f15\u5165\u66f4\u591a\u7684\u6a21\u578b\uff09 let's up it by mixing with the top kernels\n"}}