{"cell_type":{"34f728bc":"code","ea21f410":"code","1d0ac822":"code","1ff50c6c":"code","4aef4707":"code","26627d36":"code","444725b1":"code","5f086546":"code","f9b4ddcb":"code","f13d55f4":"code","216604a8":"code","a6d24110":"code","41803f0c":"code","e7024f15":"code","52064a5b":"code","294ea432":"code","ba1fcb9e":"code","707fe327":"code","0228c1e5":"code","df4fb581":"code","152685ef":"markdown","62421d7b":"markdown","65638073":"markdown","4fb7bf9d":"markdown","4cd894f8":"markdown","953c72c7":"markdown","e7add81e":"markdown","a4d6a1c4":"markdown","89814f61":"markdown","e34eff7b":"markdown","91d132c0":"markdown","a81608fb":"markdown","69142090":"markdown","d0bb9779":"markdown","aa7cfdc7":"markdown","def95d03":"markdown"},"source":{"34f728bc":"pip install openpyxl","ea21f410":"pip install xlrd","1d0ac822":"# Loading the required libraries\nimport datetime as dt\nimport pandas as pd\nimport matplotlib.pyplot as plt","1ff50c6c":"# Reading the online retail dataset\ndf_ = pd.read_excel(\"..\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx\",sheet_name=\"Year 2010-2011\")\n\n# Copying the online retail dataset \ndf = df_.copy()\ndf.head()","4aef4707":"# Checking numerical variables\ndf.describe().T","26627d36":"# Checking null variables \ndf.isna().sum()","444725b1":"# Data preparation step 1: Removing null oberservations\ndf.dropna(inplace=True)\n\n# Data preparation step 1: Removing canceled orders \ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf = df[df[\"Quantity\"] > 0]\n\ndf.describe([0.01,0.25,0.50,0.75,0.99]).T","5f086546":"# Defining functions for outliers\ndef outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\n# Defining functions to replace outliers\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    # dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit","f9b4ddcb":"# Data preparation step 2: Replacing outliers in the Quantity and Price columns with the upper limit\nreplace_with_thresholds(df, \"Quantity\")\nreplace_with_thresholds(df, \"Price\")\n\ndf.describe([0.01,0.25,0.50,0.75,0.99]).T","f13d55f4":"# Data preparation step 3: Calculating total price per transaction \ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\ntoday_date = dt.datetime(2011, 12, 11)","216604a8":"# Defining today date as max(InvoiceDate) + 2 days\ntoday_date = dt.datetime(2011, 12, 11)\nprint(f\" Maximum invoice date: {df.InvoiceDate.max()} \\n Today date: {today_date}\")","a6d24110":"# Calculating recency, monetary, frequency and tenure metrics\nrfm = df.groupby(\"Customer ID\").agg({\"InvoiceDate\": [lambda date: (date.max() - date.min()).days,\n                                                     lambda date: (today_date - date.min()).days],\n                                     \"Invoice\": lambda num: num.nunique(),\n                                      \"TotalPrice\": lambda price: price.sum()}) #total price per customer\n\nrfm.columns = rfm.columns.droplevel(0)\nrfm.columns = ['Recency', \"T\", 'Frequency', \"Monetary\"]\n\n# Calculating average monetary values per order:\nrfm[\"Monetary\"] = rfm[\"Monetary\"] \/ rfm[\"Frequency\"]\n\nrfm.head()","41803f0c":"# Removing one-time purchases from dataset\nrfm = rfm[(rfm['Frequency'] > 1)]\n\n# Copying dataset\ncltv = rfm.copy()\nrfm.head()","e7024f15":"pip install lifetimes","52064a5b":"# Loading the required libraries\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_probability_alive_matrix","294ea432":"# Checking BG\/NBD model assumption and requirements\nprint(cltv[['Monetary', 'Recency']].corr())  # Correlation between monetary ve recency variables\ncltv[\"Frequency\"] = cltv[\"Frequency\"].astype(int) # Type of frequency variable should be integer for BG-NBD model","ba1fcb9e":"# Creating BG-NBD Model\nbgf = BetaGeoFitter(penalizer_coef=0.001) # model object\nbgf.fit(cltv['Frequency'], cltv['Recency'], cltv['T']) # model fitting\n\n# Prediction of expected number of transaction for each customer for one year (365 days)\ncltv['expctd_num_of_purch'] = bgf.predict(365, cltv['Frequency'], cltv['Recency'], cltv['T']) \ncltv.sort_values(\"expctd_num_of_purch\",ascending=False).head()","707fe327":"%matplotlib inline\n# set figure size\nplt.subplots(figsize=(10, 5))\nplot_probability_alive_matrix(bgf)\nplt.show()","0228c1e5":"# Creating Gamma-Gamma Model\nggf = GammaGammaFitter(penalizer_coef=0.01) # model object\nggf.fit(cltv['Frequency'], cltv['Monetary']) # model fitting\n\n# Prediction of expected amount of average profit\ncltv[\"expct_avg_spend\"] = ggf.conditional_expected_average_profit(cltv['Frequency'], cltv['Monetary'])\n\ncltv.head()","df4fb581":"# Calculating customer lifetime value by using BG-NBD and GammaGamma models: \n\ncltv[\"cltv_one_year\"] = ggf.customer_lifetime_value(bgf,\n                                   cltv['Frequency'],\n                                   cltv['Recency'],\n                                   cltv['T'],\n                                   cltv['Monetary'],\n                                   time=12,  # 12 month\n                                   freq=\"D\",  # frequency of T\n                                   discount_rate=0.01)\n\ncltv.sort_values(\"cltv_one_year\",ascending=False).head()","152685ef":"<p>Together, we get the most valuable five customers for a year! <\/p>\n<p>This model is capable of producing valuable information to be used for several purposes by various departments such as marketing, sales, and product development. By using it, we can simply create segments according to the CLTV. We can also extract the least valuable customers and send them to customer relationship management to increase customer engagement with the company.","62421d7b":"There are null observations in the dataset, especially in the Customer ID column. Since this analysis will be consumer-based, we need to remove these observations from the dataset. Therefore, we will  eliminate these observations in the next step (data preprocessing).","65638073":"## 3. Deriving the RFM Metrics\n\n<p><img style=\"float: right;margin:-10px 20px 20px 5px; max-width:380px\" src=\"https:\/\/www.retailreco.com\/blog\/wp-content\/uploads\/2018\/11\/RFM-Analytics.jpg\"><\/p>\n\nThe predictive CLTV models are built around 4 key metrics. These are:\n\n**<p>Recency:**  The age of the customer at the time of their last purchase.\n**<p>Monetary:** The average total sales of the customer.\n**<p>Frequency:** Number of purchases\/transactions.\n**<p>Age (T):** The age of the customer since the date of a customer's first purchase to the current date.","4fb7bf9d":"# **Buy Till You Die Models: Customer Lifetime Value**","4cd894f8":"<p>Check out descriptive statistics of numerical variables again! Look at 99% quantile of Quantity and Price columns and compare with the maximum values. We can say that there are some outliers.<\/p>\n<p>Let's find out these outliers and replace them with the highest limit.<\/p>","953c72c7":"## 1. Loading the Dataset & Checking Variables","e7add81e":"Thank you for making it to the very end of this notebook!\n\nPlease feel free to leave a comment to improve it together. ","a4d6a1c4":"<p> When we look at the descriptive statistics of numerical variables, we can see that there are negative values in the Quantity and Price columns. These transactions are canceled orders. In the next step (data preprocessing), we'll eliminate these observations.","89814f61":"## 6. Final: Calculate CLTV","e34eff7b":"# 5. Train Gamma Gamma Model (Expected average spending)\n\nNow, we will train the gamma-gamma model to estimate average spending for future transactional events. Then, it will be used for calculating the customer lifetime value. ","91d132c0":"\n### ****Content of Dataset****\n\nThis Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers.","a81608fb":"### ****Definiton of Variables****\n1. **Invoice:** Invoice number, unique identifier variable for each transaction. Refund invoice numbers starts with \"C\"\n2. **StockCode:** Unique product code\n3. **Description:** Product name\n4. **Quantity:** The number of product in the invoice\n5. **InvoiceDate:** Date and time of the purchase\n6. **Price:** Unit price of a product (in terms of Sterlin)\n7. **CustomerID:** Unique customer identifier\n8. **Country:** Residential country of customers","69142090":"<p><img style=\"float: left;margin:20px 10px 5px 1px; max-width:380px\" src=\"https:\/\/i.ytimg.com\/vi\/l_xwYM2KNX0\/maxresdefault.jpg\"><\/p>\n<p> The Buy Till You Die (BTYD) class of statistical models is designed to predict the behavioral characteristics of customers. The main purpose is to model and forecast customer lifetime value. <\/p>\n<p> Customer lifetime value (CLTV or CLV) can be defined as the present value of a customer for the company based on projected future cash flows from the customer relationship. CLTV represents the total amount of money spent on the business or products over lifetime of a customer.<\/p>\n<p> In this notebook, I'll try to apply a BTYD model on an online retail dataset to make a 1-year CLTV prediction.<\/p> ","d0bb9779":"## 2. Data Preprocessing","aa7cfdc7":"Look at the new columns that we estimate average spending for each customer in a year. By using this information, you can make many business decisions!\n\nThis model can also estimate the retention rate and the probability of the customer is alive. Let's plot the probability matrix together and see what will happen!","def95d03":"# 4. Train BG-NBD Model (Expected number of transaction)\n\nIn this step, we will train the BG\/NBD model to estimate the expected sales in a given period of time.\nAlso, the trained BG\/NBD model will be used in predicting customer lifetime value in the following steps. "}}