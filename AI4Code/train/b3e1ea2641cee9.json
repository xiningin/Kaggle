{"cell_type":{"ed575f9e":"code","3ec5dcd3":"code","e6d2c481":"code","f9a43887":"code","275fdf26":"code","49993e46":"code","61a2379c":"code","b3fb2f2c":"code","9ced5d22":"code","f0a5623e":"code","11cb8789":"code","9dbfc87c":"code","7174bc7b":"code","bb5bd1c9":"code","8b528c0b":"code","ec5db32a":"code","721a0116":"code","c96451c6":"code","00e6c13b":"code","a0cf65b0":"code","191fe0c4":"code","1e0a39d2":"code","117e72a4":"code","6aa63d80":"code","c36a2ef9":"code","c6100a73":"code","d97a5a81":"code","42c5b37e":"code","27ca9fa5":"code","70d95457":"code","d60e1199":"code","53be72af":"code","65c86953":"code","c53be662":"markdown","a668369b":"markdown","3030a1c7":"markdown","8a7327be":"markdown","bc07f257":"markdown","8e049b05":"markdown","cdcbf5b2":"markdown","3411377c":"markdown","595d766f":"markdown","c5d40162":"markdown","b927d11d":"markdown","8cd8e093":"markdown","79a7baa5":"markdown","27bac0ae":"markdown","ad11a945":"markdown","7fc5bd07":"markdown","0bf7b950":"markdown","14600628":"markdown","7102e468":"markdown","20b10e9d":"markdown","b52f233e":"markdown","668d332e":"markdown","e486344a":"markdown","f7c1f3d1":"markdown","b8f325d4":"markdown","64d6b1a4":"markdown","36e2e97f":"markdown","2a4abc1c":"markdown"},"source":{"ed575f9e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3ec5dcd3":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","e6d2c481":"test_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","f9a43887":"train_df.head()","275fdf26":"train_df.info()","49993e46":"test_df.info()","61a2379c":"test_df = test_df.select_dtypes(include=['int64'])","b3fb2f2c":"train_df.fillna(value = train_df.mean())","9ced5d22":"plt.figure(figsize=(16,8))\nsns.heatmap(train_df.corr())","f0a5623e":"test_df.columns","11cb8789":"X = train_df[['Id', 'MSSubClass', 'LotArea', 'OverallQual', 'OverallCond',\n       'YearBuilt', 'YearRemodAdd', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF',\n       'GrLivArea', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr',\n       'TotRmsAbvGrd', 'Fireplaces', 'WoodDeckSF', 'OpenPorchSF',\n       'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal',\n       'MoSold', 'YrSold']]","9dbfc87c":"y = train_df[['SalePrice']]","7174bc7b":"from sklearn.model_selection import train_test_split","bb5bd1c9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","8b528c0b":"from sklearn.linear_model import LinearRegression","ec5db32a":"simul_lm = LinearRegression()","721a0116":"simul_lm.fit(X_train, y_train)","c96451c6":"simul_predict = simul_lm.predict(X_test)","00e6c13b":"plt.scatter(y_test, simul_predict)","a0cf65b0":"from sklearn import metrics","191fe0c4":"print('MAE', metrics.mean_absolute_error(y_test,simul_predict))","1e0a39d2":"print('MSE', metrics.mean_squared_error(y_test,simul_predict))","117e72a4":"print('RMSE', np.sqrt(metrics.mean_squared_error(y_test,simul_predict)))","6aa63d80":"lm = LinearRegression()","c36a2ef9":"lm.fit(X, y)","c6100a73":"print(lm.intercept_)","d97a5a81":"print(lm.coef_)","42c5b37e":"predict = lm.predict(test_df)","27ca9fa5":"print(predict)","70d95457":"results = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","d60e1199":"submission = pd.DataFrame()\nsubmission['Id'] = results['Id']\nsubmission['SalePrice'] = predict","53be72af":"submission.head()","65c86953":"submission.to_csv('submission.csv', index=False)","c53be662":"We can see that it fits good","a668369b":"Checking the coefficients:","3030a1c7":"We can check that we have some high values of correlation in some atributes with the SalePrice, so we can conclude that the linear regression may fit.","8a7327be":"Checking some accuracy metrics:","bc07f257":"* Autor: Mateus Mendes Ramalho da Silva\n*        Bachelor in computer science\n*        Data scientist\n*        mateus.mendes.mmr@gmail.com\n       ","8e049b05":"It's always interesting to make a data visualization for checking if there are a good relation between the data and if it fits in a linear regression.","cdcbf5b2":"Importing library:","3411377c":"### Loading dataframes","595d766f":"Importing train_test_split for splitting the train data into test and train:","c5d40162":"Building the simulation model:","b927d11d":"Let's check some parameters:","8cd8e093":"I'm going to check which are the remaining columns on the test dataframe, since we are only using these columns for prediction i'm going to choose the same columns on the train dataframe.","79a7baa5":"Fitting model:","27bac0ae":"### Importing libraries","ad11a945":"As i am still a initiate, i decided that would also be interesting checking the data using the test data from the train dataframe, because in this way i can check the accuracy since i don't know many methods of checking it yet.","7fc5bd07":"We can notice that the train dataframe has 80 columns, but i've decided to use only the int64 format data. So i'm going to choose only these columns of the dataframe for training my model","0bf7b950":"### Making the submission:","14600628":"### Checking dataframe's informations","7102e468":"### Making the predict:","20b10e9d":"### Making a heatmap of the correlation","b52f233e":"### Building the model:","668d332e":"First i'm also clean the NaN numeric data with the mean of its column.","e486344a":"SalePrice it's what it's going to be predicted","f7c1f3d1":"Let's check which are the remaining columns on the test dataframe for making a selection of the same columns in the train dataframe.","b8f325d4":"Selecting predictors:","64d6b1a4":"Question: Where the data cross the y axis?","36e2e97f":"# House prices prediction using linear regression","2a4abc1c":"Checking the head of both dataframes:"}}