{"cell_type":{"8d90309d":"code","dbf7e58f":"code","728dcca3":"code","24b33fa4":"code","f232998f":"code","b352e569":"code","c674ca57":"code","446d9f90":"code","12852460":"code","dd8b6f25":"code","2226d4b7":"code","f5f4c538":"code","6838b3f4":"code","ef7035e4":"code","cdc633a5":"code","06103aa9":"code","2aec1c50":"code","7c1f43a9":"code","3442d491":"code","fd179f96":"code","70a3b8b0":"code","cec32c99":"code","594532da":"code","4e4c8d60":"code","aedf3cc7":"code","cc860005":"code","bc9622b6":"code","27b85f45":"code","068b97c4":"code","0b04ac48":"code","4ae05ba3":"code","0fb6d785":"code","7b5f5107":"code","994386aa":"code","57682cc1":"code","68378f20":"code","b7ab0bb2":"markdown","443967d7":"markdown","67697d09":"markdown","ac3c95ec":"markdown","750e5b15":"markdown","82eb78ed":"markdown","64a2da7d":"markdown","998a251e":"markdown","41b4254b":"markdown"},"source":{"8d90309d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dbf7e58f":"PATH = \"..\/input\/\"\nTMP_PATH = \"\/tmp\/tmp\"\nMODEL_PATH = \"\/tmp\/model\/\"\nsz=224","728dcca3":"fnames = np.array([f'train\/{f}' for f in sorted(os.listdir(f'{PATH}train'))])\nlabels = np.array([(0 if 'cat' in fname else 1) for fname in fnames])","24b33fa4":"print(fnames[-2],labels[-2])","f232998f":"from fastai.imports import *\nfrom fastai.transforms import *\nfrom fastai.conv_learner import *\nfrom fastai.model import *\nfrom fastai.dataset import *\nfrom fastai.sgdr import *\nfrom fastai.plots import *","b352e569":"arch=resnet50\n","c674ca57":"#lrf= learn.lr_find()","446d9f90":"#learn.sched.plot_lr()","12852460":"#learn.sched.plot()","dd8b6f25":"#learn.save('model1')","2226d4b7":"data = ImageClassifierData.from_names_and_array(\n    path=PATH, \n    fnames=fnames, \n    y=labels, \n    classes=['dogs', 'cats'], \n    test_name='test', \n    tfms= tfms_from_model(resnet34, sz, aug_tfms=transforms_side_on, max_zoom=1.1)   #data augmentation\n)\nlearn = ConvLearner.pretrained(arch, data, precompute=True, tmp_name=TMP_PATH, models_name=MODEL_PATH)","f5f4c538":"learn.fit(0.01,4)","6838b3f4":"learn.precompute=False\nlearn.fit(1e-2, 3, cycle_len=2)","ef7035e4":"#learn.sched.plot_lr()","cdc633a5":"#learn.save('model2')","06103aa9":"#learn.load('model2')","2aec1c50":"learn.unfreeze()","7c1f43a9":"lr=np.array([1e-4,1e-3,1e-2])","3442d491":"learn.fit(lr, 3, cycle_len=1, cycle_mult=2)","fd179f96":"#learn.sched.plot_lr()","70a3b8b0":"#learn.save('model3')","cec32c99":"??learn.TTA","594532da":"log_predictions,y = learn.TTA(is_test=True)\nprob_predictions = np.mean(np.exp(log_predictions),0)\nprobs = prob_predictions[:,1]","4e4c8d60":"valid_preds= np.argmax(prob_predictions, axis=1)","aedf3cc7":"#tmpk= log_preds\n#tmpk= log_preds[:,:,0]\n#tmpk=tmpk.reshape(tmpk.shape[1],tmpk.shape[0])","cc860005":"#tmpk= [np.mean(i) for i in tmpk]","bc9622b6":"#tmpk= [ np.exp(i) for i in tmpk]","27b85f45":"log_predictions.shape","068b97c4":"ids= fnames = np.array([f'{f}' for f in os.listdir(f'{PATH}test')])","0b04ac48":"ids= [i.replace(\".jpg\",\"\") for i in ids]\nids[0]","4ae05ba3":"ans= pd.DataFrame({\"id\":ids,\"label\":probs})\nans= ans.sort_values('id')\nans.head()","0fb6d785":"ans.describe()","7b5f5107":"cm = confusion_matrix(y, valid_preds)\nplot_confusion_matrix(cm, data.classes)","994386aa":"# model 2 mean 5.006981e-01   std  4.964828e-01    min  1.536870e-09   [0.025943222, 0.9912974683544303]","57682cc1":"#model 1 mean 5.014179e-01   std 4.955358e-01     min 2.701442e-08     [0.026336912, 0.991495253164557]","68378f20":"ans.to_csv('submission.csv', index=False)","b7ab0bb2":"This model got 0.06218 binary loss error on test set on Kaggle with resnet 34\nand 0.05806 with resnet 50 and 0.05876 with resnet101   and 0.06055 with TTA resnet50","443967d7":"**Model 1**","67697d09":"**Model 3**","ac3c95ec":"0.07477 log losss model 3","750e5b15":"**Model 2**","82eb78ed":"%%time\nlearn.fit(0.01, 2)","64a2da7d":"log_preds = learn.predict(is_test=True)\npreds = np.argmax(log_preds, axis=1) \nprobs = np.exp(log_preds[:,1])\n#probs= probs[:,1]\n#probs = [max(np.exp(i)[0],np.exp(i)[1]) for i in log_preds]","998a251e":"This model got  0.06917 log loss error on test set on Kaggle using resnet50  and 0.05605 with TTA resent50","41b4254b":"data = ImageClassifierData.from_names_and_array(\n    path=PATH, \n    fnames=fnames, \n    y=labels, \n    classes=['dogs', 'cats'], \n    test_name='test', \n    tfms= tfms_from_model(arch, sz)   \n)\nlearn = ConvLearner.pretrained(arch, data, precompute=True, tmp_name=TMP_PATH, models_name=MODEL_PATH)"}}