{"cell_type":{"02e3f97f":"code","dadf9552":"code","64173bba":"code","964e8a0e":"code","71ca7003":"code","52d2e6be":"code","0a0c451e":"code","d5fc5a0c":"code","c5d93bab":"markdown","3d8b20c9":"markdown","2ff835c5":"markdown","df3758fa":"markdown","33aa9bc2":"markdown","1c8e0987":"markdown","95834f69":"markdown","1359cbad":"markdown"},"source":{"02e3f97f":"import pandas as pd\nimport numpy as np\n\nimport sklearn\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score","dadf9552":"X_test = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/y_train.csv')\nX_train = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_train.csv')\ny_test = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/test_label\/y_test.csv')\n\nprint(X_train.head(3))\nprint(y_train.head(3))","64173bba":"X_train.info()\nprint('-----------------------------------------------')\nprint(X_train.describe())\n\n## \uc0ad\uc81c\n# CustomerId: KEY\uac12\uc774\uace0, y_train\uc758 id\uac12\uacfc \ub3d9\uc77c\ud558\uac8c \uc815\ub82c\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c \uc0ad\uc81c\ud574\ub3c4 \ubb34\ubc29\n# Surname: \uace0\uac1d\uc774\ud0c8 \uc608\uce21\uc5d0 \uc758\ubbf8\uc5c6\ub294 \ubcc0\uc218\uc774\ubbc0\ub85c \uc0ad\uc81c\ud574\ub3c4 \ubb34\ubc29\n\n## \ubcc0\ud658(\uc778\ucf54\ub529)\n# Geography, Gender: \ubd84\uc11d\uc5d0 \uc758\ubbf8\uc788\uc744 \uac83\uc73c\ub85c \uae30\ub300\ub418\ub294 \uba85\ubaa9\ud615 \ubcc0\uc218\ub85c, \uc218\uce58\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uc5ec \ubd84\uc11d\n\n## \uadf8\ub300\ub85c \uc0ac\uc6a9\n# CreditScore, Age, Tenure, Balance, NumOfProducts, HasCrCard, IsActiveMember, EstimatedSalary\ub294 \ubcc4\ub3c4 \ubcc0\ud658\uc5c6\uc774 \uc0ac\uc6a9\n# (Scaling & Treating Outlier \uc0dd\ub7b5)\n\nprint('-----------------------------------------------')\nprint('X_train \uacb0\uce21\uce58: ', X_train.isnull().sum())\nprint('X_test \uacb0\uce21\uce58: ', X_test.isnull().sum())\n# \uacb0\uce21\uce58 \uc5c6\uc73c\ubbc0\ub85c \ubcc4\ub3c4 \uacb0\uce21\uce58 \ucc98\ub9ac \uc791\uc5c5 \ubd88\ud544\uc694","964e8a0e":"print('Geography: ', X_train['Geography'].unique())\nprint('Gender: ', X_train['Gender'].unique()) # female, male -> Female, Male \ubcc0\ud658 \ud544\uc694\n\ndef deal_gender(x):\n    if x==\"female\": return \"Female\"\n    elif x==\" male\": return \"Male\"\n    else: return x\n\nX_train['Gender'] = X_train['Gender'].apply(deal_gender)\nprint('Gender(After):', X_train['Gender'].unique())\nX_test['Gender'] = X_test['Gender'].apply(deal_gender)","71ca7003":"# Label Encoding\n\nle_Geo = LabelEncoder()\nle_Gen = LabelEncoder()\n\nX_train['Geography'] = le_Geo.fit_transform(X_train['Geography'])\nX_train['Gender'] = le_Gen.fit_transform(X_train['Gender'])\n\nX_test['Geography'] = le_Geo.transform(X_test['Geography'])\nX_test['Gender'] = le_Gen.transform(X_test['Gender'])","52d2e6be":"X_train_val, X_test_val, y_train_val, y_test_val = train_test_split(X_train, y_train, test_size=0.33, random_state=0)\n\n\ndef deal_gender(x):\n    if x==\"female\": return \"Female\"\n    elif x==\" male\": return \"Male\"\n    else: return x\n\nX_train_val['Gender'] = X_train_val['Gender'].apply(deal_gender)\nX_test_val['Gender'] = X_test_val['Gender'].apply(deal_gender)\n\nle_Geo_val = LabelEncoder()\nle_Gen_val = LabelEncoder()\n\nX_train_val['Geography'] = le_Geo_val.fit_transform(X_train_val['Geography'])\nX_train_val['Gender'] = le_Gen_val.fit_transform(X_train_val['Gender'])\n\nX_test_val['Geography'] = le_Geo_val.transform(X_test_val['Geography'])\nX_test_val['Gender'] = le_Gen_val.transform(X_test_val['Gender'])\n\n\n\nrf_clf_val = RandomForestClassifier(random_state=1)\n\nrf_clf_val.fit(X_train_val.drop(['CustomerId', 'Surname'], axis=1), y_train_val[['Exited']])\n\npred_val = rf_clf_val.predict(X_test_val.drop(['CustomerId', 'Surname'], axis=1))\npred_prob_val = rf_clf_val.predict_proba(X_test_val.drop(['CustomerId', 'Surname'], axis=1))\n\nprint(\"AUROC: \", round(roc_auc_score(y_test_val[['Exited']], pred_prob_val[0:, 1]),4))","0a0c451e":"rf_clf = RandomForestClassifier(random_state=1)\n\nrf_clf.fit(X_train.drop(['CustomerId', 'Surname'], axis=1), y_train[['Exited']])\n\npred = rf_clf.predict(X_test.drop(['CustomerId', 'Surname'], axis=1))\npred_prob = rf_clf.predict_proba(X_test.drop(['CustomerId', 'Surname'], axis=1))\n\nprint(\"AUROC: \", round(roc_auc_score(y_test[['Exited']], pred_prob[0:, 1]),4))","d5fc5a0c":"pd.DataFrame({'CustomerId': y_test.CustomerId, 'pred':pred_prob[0:, 1]}).to_csv('20211201.csv', index=False)\n\ndf = pd.read_csv('20211201.csv')\ndf.head(3)","c5d93bab":"#### Train - Validation \uad6c\ubd84\ud574\uc11c \ubaa8\ub378\ub9c1 \ubc0f \uc608\uce21\uc131\ub2a5 \ud655\uc778","3d8b20c9":"## \uc81c\ucd9c","2ff835c5":"## \ub370\uc774\ud130 \uad6c\uc131 \ud655\uc778","df3758fa":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","33aa9bc2":"#### Training data \ubaa8\ub450 \uc774\uc6a9\ud558\uc5ec \ubaa8\ub378\ub9c1","1c8e0987":"## \uba85\ubaa9\ud615 \ubcc0\uc218 \uac12 \ud655\uc778 \ubc0f \ucc98\ub9ac","95834f69":"## \ubaa8\ub378\ub9c1 - Random Forest & \uc608\uce21\uc131\ub2a5 \uc0b0\ucd9c","1359cbad":"## \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30"}}