{"cell_type":{"a114aa59":"code","c4fa67f7":"code","a2d21d89":"code","3386c2e6":"code","85b34fba":"code","dda28f33":"code","09a63718":"code","b6401ca2":"code","83e544f6":"code","7236b10d":"code","e10d28b2":"code","4e53575a":"code","f6bf8f51":"code","e0df60d2":"code","a5347a44":"code","87fe8def":"code","5810a9b1":"code","ceb38a06":"code","4cb63458":"code","d365cd24":"code","f2090ea1":"code","32a0775b":"code","fb1cd5a1":"code","2e878281":"code","260325fb":"code","819a5369":"code","406aeb6e":"code","a5fe584b":"code","6d4d6bf3":"code","48b78d5c":"code","a03ca5a1":"code","ce10a85d":"code","69ed2928":"code","d75b95a8":"code","70484566":"code","55196f50":"code","9367be3f":"code","4c75817e":"code","f35e8f0b":"code","2767c5d7":"code","e3759b85":"code","62a4339f":"code","c0884ae1":"code","e052f7bf":"code","5e94c331":"code","ca6505a9":"code","80e6531b":"code","58b699fa":"code","b8c202d4":"code","fbb160db":"markdown","cbf3cea2":"markdown","2547ef37":"markdown","b9950499":"markdown","3987da34":"markdown","1279bf85":"markdown","8a154546":"markdown","6a8156d9":"markdown","a32c3ea0":"markdown","8e9fa70d":"markdown","ba24f8a3":"markdown","d566058f":"markdown","6289782f":"markdown","77517d06":"markdown","47a74588":"markdown","ab04af3b":"markdown","e6d52c03":"markdown","cb39ee0d":"markdown","0a6a202d":"markdown","d850c7ed":"markdown","e1d9b342":"markdown"},"source":{"a114aa59":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score, roc_curve\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c4fa67f7":"df=pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","a2d21d89":"df.head()","3386c2e6":"df.describe()","85b34fba":"df.info()","dda28f33":"df.isnull().sum()","09a63718":"df['sex'].value_counts().shape[0]","b6401ca2":"df.columns","83e544f6":"for i in list(df.columns):\n    print(\"{} -- {}\".format(i,df[i].value_counts().shape[0]))","7236b10d":"categorical_list=[\"sex\",\"cp\",\"fbs\",\"restecg\",\"exng\",\"slp\",\"caa\",\"thall\",\"output\"]","e10d28b2":"df_categoric=df.loc[:,categorical_list]\nfor i in categorical_list:\n    plt.figure()\n    sns.countplot(x=i, data=df_categoric, hue=\"output\")\n    plt.title(i)","4e53575a":"numeric_list=[\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\",\"output\"]","f6bf8f51":"df_numeric=df.loc[:,numeric_list]\nsns.pairplot(df_numeric, hue=\"output\", diag_kind=\"kde\")\nplt.show()","e0df60d2":"scaler=StandardScaler()\nscaler","a5347a44":"scaled_array=scaler.fit_transform(df[numeric_list[:-1]])","87fe8def":"scaled_array","5810a9b1":"pd.DataFrame(scaled_array).describe()","ceb38a06":"df_dummy=pd.DataFrame(scaled_array, columns=numeric_list[:-1])\ndf_dummy.head()","4cb63458":"df_dummy=pd.concat([df_dummy,df.loc[:, \"output\"]], axis=1)\ndf_dummy.head()","d365cd24":"data_melted=pd.melt(df_dummy,id_vars=\"output\", var_name=\"features\", value_name=\"value\")\ndata_melted.head(20)","f2090ea1":"plt.figure()\nsns.boxplot(x=\"features\", y=\"value\", hue=\"output\", data=data_melted)\nplt.show()\n           ","32a0775b":"plt.figure()\nsns.swarmplot(x=\"features\", y=\"value\", hue=\"output\", data=data_melted)\nplt.show()","fb1cd5a1":"sns.catplot(x=\"exng\", y=\"age\", hue=\"output\", col=\"sex\", kind=\"swarm\", data=df)\nplt.show()","2e878281":"df.corr()","260325fb":"plt.figure(figsize=(14,10))\nsns.heatmap(df.corr() , annot=True , fmt=\".1f\" , linewidths=0.7)\nplt.show()","819a5369":"numeric_list=[\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]\ndf_numeric=df.loc[:, numeric_list]\ndf_numeric.head()","406aeb6e":"df.describe()","a5fe584b":"# outlier detection\nfor i in numeric_list :\n    Q1=np.percentile(df.loc[:, i] , 25)\n    Q3=np.percentile(df.loc[:, i] , 75)\n    \n    IQR=Q3-Q1\n    print(\"Old shape:\", df.loc[:, i].shape)\n    \n    upper=np.where(df.loc[:, i] >=(Q3+2.5*IQR))\n    lower=np.where(df.loc[:, i] <=(Q1-2.5*IQR))\n    \n    print(\"{} -- {}\".format(upper,lower))\n    \n    try:\n        df.drop(upper[0] , inplace=True)\n    except:print(\"KeyError: {} not found in axis\".format(upper[0]))\n    \n    try:\n        df.drop(lower[0] , inplace=True)\n    except:print(\"KeyError: {} not found in axis\".format(lower[0]))\n        \n        \n    print(\"New shape: \", df.shape)\n","6d4d6bf3":"df1=df.copy()","48b78d5c":"df1=pd.get_dummies(df1, columns=categorical_list[:-1], drop_first=True)\ndf1.head()","a03ca5a1":"X=df1.drop([\"output\"] , axis=1)\ny=df1[[\"output\"]]","ce10a85d":"X.head()","69ed2928":"y.head()","d75b95a8":"scaler=StandardScaler()\nscaler","70484566":"X[numeric_list[:-1]]=scaler.fit_transform(X[numeric_list[:-1]])\nX.head()","55196f50":"X_train, X_test, y_train , y_test=train_test_split(X,y, test_size=0.1, random_state=3)\nprint(\"X_train: {}\".format(X_train.shape))\nprint(\"X_test: {}\".format(X_test.shape))\nprint(\"y_train: {}\".format(y_train.shape))\nprint(\"y_test: {}\".format(y_test.shape))","9367be3f":"logreg=LogisticRegression()\nlogreg","4c75817e":"logreg.fit(X_train,y_train)","f35e8f0b":"y_pred_prob=logreg.predict_proba(X_test)\ny_pred_prob","2767c5d7":"y_pred=np.argmax(y_pred_prob, axis=1)\ny_pred","e3759b85":"#dummy_=pd.DataFrame(y_pred_prob)\n#dummy_[\"y_pred\"]=y_pred\n#dummy_.head()","62a4339f":"print(\"Test accuracy: {}\".format(accuracy_score(y_pred,y_test)))","c0884ae1":"fpr,tpr,tresholds=roc_curve(y_test,y_pred_prob[:,1])","e052f7bf":"plt.plot([0,1],[0,1] ,\"k--\")\nplt.plot(fpr,tpr,label=\"Logistic Regression\")\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title(\"Logistic Regression ROC Curve\")\nplt.show()","5e94c331":"lr=LogisticRegression()\nlr","ca6505a9":"penalty=[\"l1\",\"l2\"]\nparameters={\"penalty\":penalty}","80e6531b":"lr_searcher=GridSearchCV(lr,parameters)","58b699fa":"lr_searcher.fit(X_train,y_train)","b8c202d4":"print(\"Best parameters: \",lr_searcher.best_params_ )","fbb160db":"<a id='3'><\/a>\n## Read and Analyse Data","cbf3cea2":"### Logistic Regression","2547ef37":"<a id='13'><\/a>\n## Outlier Detection","b9950499":"<a id='4'><\/a>\n## Missing Value Analysis","3987da34":"### Encoding Categorical Columns","1279bf85":"<a id='12'><\/a>\n## Correlation Analysis","8a154546":"<a id='14'><\/a>\n## Modelling","6a8156d9":"### Logisitic Regression Hyperparameter Tuning","a32c3ea0":"### Train\/Test Split","8e9fa70d":"<a id='1'><\/a>\n## Python Libraries","ba24f8a3":"<a id='11'><\/a>\n## Cat Plot Analysis","d566058f":"<a id='8'><\/a>\n## Standardization","6289782f":"### Scaling","77517d06":"<a id='5'><\/a>\n## Unique Value Analysis","47a74588":"<a id='9'><\/a>\n## Box Plot Analysis","ab04af3b":"<a id='7'><\/a>\n## Numeric Feature Analysis","e6d52c03":"# Heart Attack Analysis & Prediction","cb39ee0d":"<a id='6'><\/a>\n## Categorical Feature Analysis","0a6a202d":"<a id='2'><\/a>\n## Data Content","d850c7ed":"<a id='10'><\/a>\n## Swarm Plot Analysis","e1d9b342":"## Analysis Content\n* 1.[Python Libraries](#1)\n* 2.[Data Content](#2)\n* 3.[Read and Analyse Data](#3)\n* 4.[Missing Value Analysis](#4)\n* 5.[Unique Value Analysis](#5)\n* 6.[Categorical Feature Analysis](#6)\n* 7.[Numeric Feature Analysis](#7)\n* 8.[Standardization](#8)\n* 9.[Box Plot Analysis](#9)\n* 10.[Swarm Plot Analysis](#10)\n* 11.[Cat Plot Analysis](#11)\n* 12.[Correlation Analysis](#12)\n* 13.[Outlier Detection](#13)\n* 14.[Modelling](#14)"}}