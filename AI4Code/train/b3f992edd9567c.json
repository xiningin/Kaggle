{"cell_type":{"ffff331b":"code","603d2b36":"code","445f8b79":"code","65739cd9":"code","8faa20af":"code","9e4ac409":"code","ffa5efe8":"code","6351919c":"markdown"},"source":{"ffff331b":"import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm_notebook\nimport matplotlib.pyplot as plt\nfrom kaggle.competitions import nflrush","603d2b36":"train_df = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', low_memory=False)","445f8b79":"MEDIAN_YARDS = train_df[\"Yards\"].median()\nprint(f\"The median value of train target is {MEDIAN_YARDS} yards.\")","65739cd9":"def sigmoid(x):\n    return 1. \/ (1 + np.exp(-x))\n\nplt.plot(range(-99, 100), [1 if i >= 0 else 0 for i in range(-99, 100)], label=\"actual\")\nplt.plot(range(-99, 100), [sigmoid(i) for i in range(-99, 100)], label=\"predicted\")\nplt.legend();","8faa20af":"y_train = train_df.loc[range(0, 509762, 22), \"Yards\"]","9e4ac409":"y_pred, y_true = np.zeros((len(y_train), 199)), np.zeros((len(y_train), 199))\n\nfor i in range(len(y_train)):\n    # all predictions are the same :)\n    y_pred[i, :] = sigmoid(0.42 * (np.arange(-99, 100) - MEDIAN_YARDS))\n\nfor i, p in enumerate(y_train):\n    for j in range(-99, 100):\n        if j >= p:\n            y_true[i, j + 99] = 1\n\nprint(\"Validation score:\", np.sum(np.power(y_pred - y_true, 2)) \/ (199 * len(y_train)))","ffa5efe8":"env = nflrush.make_env()\n\nfor (test_df, sample_prediction_df) in tqdm_notebook(env.iter_test()):\n    \n    # all predictions are the same :)\n    y_test_pred = sigmoid(0.42 * (np.arange(-99, 100) - MEDIAN_YARDS))\n    \n    env.predict(pd.DataFrame(data=[y_test_pred], columns=sample_prediction_df.columns))\n    \nenv.write_submission_file()","6351919c":"**We are going to make a constant median prediction with sigmoidal post-processing. Inspired by [this Notebook](https:\/\/www.kaggle.com\/hukuda222\/nfl-simple-evluation-trick) by @hukuda222.**"}}