{"cell_type":{"a17a033d":"code","f191a496":"code","ed90518f":"code","abd75275":"code","582e53d1":"code","9f951e37":"code","decc433e":"code","a3b9f027":"code","b8847139":"code","a6123a81":"code","076fb58d":"code","e147c590":"code","9a678ad0":"code","dce696d9":"code","ec1f0cd2":"code","695ceb7d":"code","8e544147":"code","f5b785ba":"code","372e7e55":"code","590cbe60":"code","bf959292":"code","08efbec4":"code","0562cca1":"code","db7d6d33":"code","b6171d05":"code","cd8ea837":"code","e252b04d":"code","84d7d334":"code","663a1ef0":"code","6d2ee558":"code","864466cd":"code","22a92d13":"code","44968f2b":"code","f463009a":"markdown","6b7f1683":"markdown","f46a364e":"markdown","a7bd93d6":"markdown","4dc1d58c":"markdown","9e2ea94c":"markdown","2bc8d5ac":"markdown","ee44015f":"markdown","c19b5e3a":"markdown","42216e50":"markdown","7034fd55":"markdown","91c07a79":"markdown","c3667f2e":"markdown","e9462902":"markdown","031e814c":"markdown","8417fdf8":"markdown","f3f59fb1":"markdown","184e618d":"markdown","e811bfd9":"markdown","178b7486":"markdown","775e66cf":"markdown","b51245f3":"markdown","f9e7aad7":"markdown","bec82e4d":"markdown","e1e8e6de":"markdown","91e4449c":"markdown","4d92a0f4":"markdown","85841fe5":"markdown","fa43b847":"markdown","749fe5e8":"markdown","071a5782":"markdown","f1f67239":"markdown","8684ed9a":"markdown","cf1259ea":"markdown","96acbf7f":"markdown","0832b6a2":"markdown","9c00ba4e":"markdown","689d5796":"markdown","8dd63b3c":"markdown","fb6a9b57":"markdown","4a4e30b8":"markdown","6ca92930":"markdown","58611061":"markdown","24ac9cd1":"markdown","bd71ee63":"markdown","f41c8a0c":"markdown","4afc79ed":"markdown"},"source":{"a17a033d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport string\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\nimport warnings\nwarnings.simplefilter(\"ignore\")","f191a496":"#exclamatory mark runs the command in terminal\n!ls ..\/input\/","ed90518f":"#read_csv reads csv file as dataframe.\n#here files are tsv, so we use tab delimiter\/separator.\ntrain_df = pd.read_csv(\"..\/input\/train.tsv\",sep='\\t')\ntest_df = pd.read_csv(\"..\/input\/test.tsv\",sep='\\t')","abd75275":"#return 5 data points sampled randomly from dataset.\ntrain_df.sample(5)","582e53d1":"print(\"Length of Training Data: \" + str(len(train_df)\/100000) + \" lac.\")\nprint(\"Length of Testing Data: \" + str(len(test_df)\/100000)+ \" lac.\")","9f951e37":"train_df.train_id.nunique()\/len(train_df)","decc433e":"train_df.isnull().sum()","a3b9f027":"train_df.dtypes","b8847139":"plt.figure(figsize=(10,8))\nplt.hist((train_df['price']), bins=30, range=[0,250], label='price')\nplt.title('Price Distribution')\nplt.xlabel(\"Price\")\nplt.ylabel(\"Count\")\nplt.show()","a6123a81":"train_df.price.describe()","076fb58d":"len(train_df[train_df.price==0])","e147c590":"plt.figure(figsize=(10,8))\nplt.hist(np.log(train_df['price']), bins=30, range=[0,8], label='price')\nplt.title('Log Price Distribution')\nplt.xlabel(\"Log Price\")\nplt.ylabel(\"Count\")\nplt.show()","9a678ad0":"plt.figure(figsize=(10,8))\nsns.boxplot(x=train_df.price)\nplt.xlim(-10,100)\nplt.xlabel(\"Price\")\nplt.title(\"Box Plot of Price Variable\")\nplt.show()","dce696d9":"train_df.sample(5)","ec1f0cd2":"item_condn_percent = train_df.item_condition_id.value_counts()\/len(train_df)*100\nplt.figure(figsize=(10,8))\nsns.barplot(x=item_condn_percent.index,y=item_condn_percent.values)\nplt.xlabel(\"Item Condition ID\")\nplt.ylabel(\"Percentage of products\")\nplt.title(\"Bar Plot of Item Condition with Percentage of Products\")\nplt.show()\npd.concat([item_condn_percent],keys=[\"percentage\"],axis=1)","695ceb7d":"shipping_percent = train_df.shipping.value_counts()\/len(train_df)*100\nplt.figure(figsize=(5,8))\nsns.barplot(y=shipping_percent.values,x=shipping_percent.index)\nplt.title(\"Bar Plot of Shipping with Percentage of Products\")\nplt.xlabel(\"Shipping Variable\")\nplt.ylabel(\"Percentage\")\nplt.show()\npd.concat([shipping_percent],keys=[\"percentage\"],axis=1)","8e544147":"train_df.sample(5)","f5b785ba":"train_df = train_df[train_df.category_name.notnull()]\ntrain_df['general_cat'], train_df['sub_cat1'], train_df['sub_cat2'] = \\\nzip(*train_df.category_name.apply(lambda x: x.split('\/')))","372e7e55":"train_df.sample(5)","590cbe60":"train_df.general_cat.nunique()","bf959292":"general_cat_percent = train_df.general_cat.value_counts().sort_values(ascending=False)\/len(train_df)*100\nplt.figure(figsize=(15,8))\nsns.barplot(x=general_cat_percent.index,y=general_cat_percent.values)\nplt.show()\npd.concat([general_cat_percent],keys=[\"percent\"],axis=1)","08efbec4":"sub_cat1_percent = train_df[train_df.general_cat==\"Women\"]['sub_cat1'].value_counts().\\\n    sort_values(ascending=False)[:10]\/len(train_df[train_df.general_cat==\"Women\"])*100\nplt.figure(figsize=(20,10))\nsns.barplot(x=sub_cat1_percent.index,y=sub_cat1_percent.values)\nplt.title(\"Percentage of various sub-categories INSIDE the WOMEN category\")\nplt.xlabel(\"Sub-category Name\")\nplt.ylabel(\"Percentage\")\nplt.show()\npd.concat([sub_cat1_percent],keys=[\"percentage\"],axis=1)","0562cca1":"sub_cat1_percent = train_df[train_df.general_cat==\"Beauty\"]['sub_cat1'].value_counts().\\\n    sort_values(ascending=False)\/len(train_df[train_df.general_cat==\"Beauty\"])*100\nplt.figure(figsize=(20,10))\nsns.barplot(x=sub_cat1_percent.index,y=sub_cat1_percent.values)\nplt.title(\"Percentage of various sub-categories INSIDE the BEAUTY category\")\nplt.xlabel(\"Sub-category Name\")\nplt.ylabel(\"Percentage\")\nplt.show()\npd.concat([sub_cat1_percent],keys=[\"percentage\"],axis=1)","db7d6d33":"sub_cat1_percent = train_df[train_df.general_cat==\"Kids\"]['sub_cat1'].value_counts().\\\n    sort_values(ascending=False)[:10]\/len(train_df[train_df.general_cat==\"Kids\"])*100\nplt.figure(figsize=(20,10))\nsns.barplot(x=sub_cat1_percent.index,y=sub_cat1_percent.values)\nplt.title(\"Percentage of various sub-categories INSIDE the KIDS category\")\nplt.xlabel(\"Sub-category Name\")\nplt.ylabel(\"Percentage\")\nplt.show()\npd.concat([sub_cat1_percent],keys=[\"percentage\"],axis=1)","b6171d05":"train_df.sample(5)","cd8ea837":"import wordcloud as wc\ndesc_word_cloud = wc.WordCloud(width=1000,height=1000).generate(\" \".join(train_df.sample(10000).item_description.astype(str)))\nplt.figure(figsize = (20, 15))\nplt.imshow(desc_word_cloud)\nplt.show()","e252b04d":"brand_name_percent = train_df['brand_name'].value_counts().\\\n    sort_values(ascending=False)[:10]\/len(train_df)*100\nplt.figure(figsize=(20,10))\nsns.barplot(x=brand_name_percent.index,y=brand_name_percent.values)\nplt.title(\"Bar plot of Brand Name\")\nplt.xlabel(\"Brand Name\")\nplt.ylabel(\"Percentage of Products\")\nplt.show()\npd.concat([brand_name_percent],keys=[\"percentage\"],axis=1)","84d7d334":"train_df.sample(5)","663a1ef0":"plt.figure(figsize=(10,8))\nplt.hist(np.log(train_df[train_df.shipping==1]['price']), bins=30, range=[0,8],color='red',alpha=0.5,label=\"shipping=1\")\nplt.hist(np.log(train_df[train_df.shipping==0]['price']),bins=30,range=[0,8],color='blue',alpha=0.5,label=\"shipping=0\")\nplt.legend(loc='upper right')\nplt.title(\"Log Price Distribution for different shipping categories.\")\nplt.ylabel(\"Count\")\nplt.xlabel(\"Log Price\")\nplt.show()","6d2ee558":"plt.figure(figsize=(10,8))\ntrain_df['log_price'] = np.log(train_df['price'])\nsns.boxplot(x=\"shipping\",y=\"log_price\",data=train_df)\nplt.ylim(0,6)\nplt.title(\"Box Plot of Log Price for different shipping categories.\")\nplt.ylabel(\"Log Price\")\nplt.xlabel(\"Shipping\")\nplt.show()","864466cd":"train_df.sample(5)","22a92d13":"plt.figure(figsize=(20,10))\ntrain_df['log_price'] = np.log(train_df['price'])\nsns.boxplot(x=\"general_cat\",y=\"log_price\",data=train_df)\nplt.ylim(1,6)\nplt.show()","44968f2b":"plt.figure(figsize=(20,10))\nsns.boxplot(x=\"item_condition_id\",y=\"log_price\",data=train_df)\nplt.ylim(1,6)\nplt.show()","f463009a":"** Result: **\n- Item condition id doesn't seem to alter the distribution much except in the case of item_condition_id = 5","6b7f1683":"** Result: **\n- Most items are in condition 1: Around 43%\n- Only few items 2% are in condtion 4.\n- Even fewer 0.16% are in condition 5.","f46a364e":"**Result :**\n- Well, nicely balanced.","a7bd93d6":"Let's analyze category_name now. I'll engineer it first. This is what I'm going to do.\n- The category_name is in format word1\/word2\/word3.\n- word1 I'll call the \"general_cat\" variable.\n- word2 I'll call the \"sub_cat1\" variable.\n- word3 I'll call \"sub_cat2\" variable.\n- In above names \"cat\" means category.\n\nBut first, I'll remove the null values in the category variable","4dc1d58c":"Now, what are the other variables left to analyze? Let's take a look again the dataframe to refresh.","9e2ea94c":"**Result :**\n- item_description has only 4 of them. I can safely delete those points.\n- category_name has around 6000 of them. Still, doesn't matter in front of 1.5 million.\n- brand_name has a lot of missing data points. I'll handle them in the future.","2bc8d5ac":"**Next:** To create Tf-Idf vectors, and feed into machine learning algorithms","ee44015f":"**Result: **\n- shipping doesn't seem to have much effect on the value of price.\n- Let's see df again now to see what is left in bivariate analysis.","c19b5e3a":"Let's see the number of missing values in the dataset.","42216e50":"Let's analyse the item_condition_id variable. It's categorical. So, let's plot a bar plot!","7034fd55":"And Box Plot.","91c07a79":"** Result :**\n- Median is 17.\n- 25% data is less than 10.\n- 75% data is less than 29.\n- I read all the values from previous describe call on price variable.\n- I can see those values in the box plot too!","c3667f2e":"Now, the analysis of category_name is easier..!!\nLet's explore the new features!\n\nLet's see the number of unique values for general_cat variable","e9462902":"Let's see what Kids like to buy.","031e814c":"**Results :**\n- Toys. Huh!","8417fdf8":"Let's now visualize the relationship of price with item_condition!!","f3f59fb1":"**Result :**\n- 10? That's it? \n- Let's see the value counts and plot a bar plot","184e618d":"Let's do price vs general category!! I'll plot boxplot only as histogram won't be appropriate here.","e811bfd9":"** Result :** \n- Nice approximate normal distribution!\n- We can also use box plots to explore price variable.\n- Due to the highly skewed distribution of price variable, I set the limit of y from -10 to 100 to properly see the quantiles","178b7486":"**Result :** \n- There are only categorical variables to visualize the relationship of price with.\n- Let's first analyze shipping variable and price together.\n- I'll plot a box plot as well as a histogram of price variable for each of the two shipping categories.","775e66cf":"Let's see the size of datasets.","b51245f3":"**Result: **\n- Average price is around 27.\n- But the max price can be as high as 2009. \n- Minimum price = 0 exists. This raises a question. How many are those?\n\nLet's count.","f9e7aad7":"Let's explore the data at high level.","bec82e4d":"** Result :**\n- train_id = unique integer identifier.\n- shipping, item_condition_id = categorical variable.\n- price = numerical variable\n- category_name = requires feature engineering.\n- item_description = unstructured text data, will require engineering.","e1e8e6de":"** Result :** \n- A whooping 60% is just makeup.\n- Skin Care and Fragrance also matter a lot.","91e4449c":"**Result :** As you can see, you can get a general idea about what people usually write in their product descriptions!!","4d92a0f4":"Let's see how our dataframe looks like now!","85841fe5":"I assume all the train_id's are unique. Let's verify.","fa43b847":"What do women buy the most? Let's see.","749fe5e8":"**Result :**\nThis is what I've figured out from above output.\n\n- Well, observing from high level gives me a general understanding of the data I'm using.\n- train_id's are unique identifiers.\n- name is the title of the product. \n- item_condition_id is categorical variable.\n- category_name might require feature engineering to seperate the subcategories.\n- price is numerical variable. It's the target variable.\n- brand_name seems to have to a lot of NaN values. \n- shipping is categorical binary variable.\n- item_description is unstructured text data that will need data preprocessing.","071a5782":"**Result :** Around 1.5 million training data points and 0.7 million test data points. That feels huge. :-)","f1f67239":"**Result :** Indeed, they are.","8684ed9a":"**Results :**\nWe see that Nike, PINK, Apple etc. are the most sold product brands.!\n- By now, we have completed what is known as univariate analysis. That is, the analysis of variables one at a time.\n- Bivariate Analysis: In this we will now perform the relationship of each variable with our target: price.","cf1259ea":"Now, let's come to variable brand_name. We saw that it has a lot of missing values. Instead of throwing all that data, its better to replace it by \"Other\" category. But first, let's have another barplot of brand_name variable.","96acbf7f":"**Result :** A lot of cool information!.\n- 45% products are from Women Category! That's as much as half of the products!\n- 14% are from Beauty.","0832b6a2":"**Result :** \n- 874 products are free! Really? Strange.\n- Prices distribution was skewed, Let's plot log(prices) to see what it looks like.","9c00ba4e":"Let's have a new look at our dataframe to refresh about the column names and types and get ready for bivariate analysis.","689d5796":"We haven't analysed brand_name and item_description. Let's go with item_description first.\n- Since item_description is unstructured text data, the best way to analyze it, is WordClouds!!","8dd63b3c":"Which variables are left to analyze? Let's have a look at the dataframe again.!","fb6a9b57":"Let's analyze each variable one by one starting with the price. Since price is a numerical variable, I'll plot a histogram.","4a4e30b8":"What other variables are left? Let's see","6ca92930":"Let's see the different data types of columns.","58611061":"Let's describe the prices data with some data statistics.","24ac9cd1":"Let's now analyze our another categorical variable: Shipping\nAgain, let's plot bar plot.","bd71ee63":"** Result:**\n- Well, women seem to love Athletic Apparel, Tops and Blouses, Shoes and Jewelry!! Let's analyze the second major category: Beauty.","f41c8a0c":"**Result :** \n- That's highly skewed towards the left.\n- Most of the prices are in 0-50 range.","4afc79ed":"**Overview :**\n\nIn this kernel, I will perform Exploratory Data Analysis of Mercari's Price Sugesstion Challenge's Dataset.\n\nLet's start!\n- Challenge Description: https:\/\/www.kaggle.com\/c\/mercari-price-suggestion-challenge\n- Data Description: https:\/\/www.kaggle.com\/c\/mercari-price-suggestion-challenge\/data\n\n**About Mercari: **\n- Mercari is community powered shopping app. In this competition, Mercari\u2019s challenging you to build an algorithm that automatically suggests the right product prices. You\u2019ll be provided user-inputted text descriptions of their products, including details like product category name, brand name, and item condition.\n- train.tsv and test.tsv are training and test files respectively.\n\n**Data Fields :**\n- item_condition_id = the condition of the items provided by the seller\n- category_name = category of the listing\n- brand_name = name of the brand\n- price = the price that the item was sold for (in USD). This is the target variable .\n- shipping = 1 if shipping fee is paid by seller and 0 if paid by buyer\n- item_description - the full description of the item. Note that we have cleaned the data to remove text that look like prices (e.g. \\$20) to avoid leakage. These removed prices are represented as [rm]."}}