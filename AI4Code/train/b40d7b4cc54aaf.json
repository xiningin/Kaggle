{"cell_type":{"09acb40f":"code","6777a6f5":"code","ce428459":"code","c2c99936":"code","ede3ab6d":"code","a8470507":"code","f4fc99dd":"code","a37e14db":"code","f9905f14":"code","772953e8":"code","fc0d715b":"code","d25232c9":"code","59e523f5":"code","1f0cfab7":"code","4b61dcf2":"code","389e94eb":"code","9c0a61de":"code","623c8523":"code","2bffc4dc":"code","e5df1dc5":"code","62b9c8ae":"code","8bfd5b92":"code","ac2bb2dc":"code","b39d1db5":"markdown","0e24c700":"markdown","0cfdeb69":"markdown","461ef644":"markdown","a132f0ad":"markdown","661f41c1":"markdown","2e1d2274":"markdown"},"source":{"09acb40f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nimport os\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nprint(\"Data listing...\")\nprint(os.listdir('..\/input'))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n        print('Using bitstampUSD_1-min_data...')\n# Any results you write to the current directory are saved as output.","6777a6f5":"df = pd.read_csv(\"\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2019-08-12.csv\")\ndf.head()","ce428459":"print( df.isnull().sum())","c2c99936":"df['Volume_(BTC)'].fillna(value=0, inplace=True)\ndf['Volume_(Currency)'].fillna(value=0, inplace=True)\ndf['Weighted_Price'].fillna(value=0, inplace=True)\n\n\ndf['Open'].fillna(method='ffill', inplace=True)\ndf['High'].fillna(method='ffill', inplace=True)\ndf['Low'].fillna(method='ffill', inplace=True)\ndf['Close'].fillna(method='ffill', inplace=True)\n\nprint(df.tail())","ede3ab6d":"df.info()\n","a8470507":"df.corr()","f4fc99dd":"#correlation map\nf,ax = plt.subplots(figsize=(11, 11))\nsns.heatmap(df.corr(), annot=True, linewidths=.9, fmt= '.1f',ax=ax)\n","a37e14db":"df.head(15)","f9905f14":"df.columns","772953e8":"# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndf.Timestamp.plot(kind = 'line', color = 'g',label = 'Timestamp',linewidth=7,alpha = 1.0,grid = True,linestyle = ':')\ndf.Weighted_Price.plot(color = 'r',label = 'Weighted_Price',linewidth=6, alpha = 1.0,grid = True,linestyle = '-.')\nplt.legend(loc='center right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            \n","fc0d715b":"# Scatter Plot\n# x = Timestamp, y = Weighted_Price\ndf.plot(kind='scatter', x='Timestamp', y='Weighted_Price',alpha = 0.5,color = 'purple')\nplt.xlabel('Timestamp')              # label = name of label\nplt.ylabel('Weighted_Price')\nplt.title('Timestamp Weighted_Price Scatter Plot')            # title = title of plot","d25232c9":"# PLOTS\nfig = plt.figure(figsize=[15, 7])\nplt.suptitle('Bitcoin exchanges, mean USD', fontsize=22)\n\nplt.subplot(221)\nplt.plot(df.Weighted_Price, '-', label='By Days')\nplt.legend()\n\n","59e523f5":"dictionary = {'turkey' : 'sinop','russia' : 'moscow'}\nprint(dictionary.keys())\nprint(dictionary.values())","1f0cfab7":"dictionary['turkey'] = \"sinop\"    # update existing entry\nprint(dictionary)\ndictionary['russia'] = \"moscow\"       # Add new entry\nprint(dictionary)\n\ndel dictionary['russia']              # remove entry with key 'spain'\nprint(dictionary)\n\nprint('usa' in dictionary)   \n# check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","4b61dcf2":"print(dictionary)   ","389e94eb":"data = pd.read_csv('\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2019-08-12.csv')","9c0a61de":"series = data['Volume_(BTC)']        # data['Volume_(BTC)'] = series\nprint(type(series))\ndata_frame = data[['Volume_(BTC)']]  # data[['Volume_(BTC)']] = data frame\nprint(type(data_frame))","623c8523":"# Comparison operator\nprint(5 > 2)\nprint(4!=2)\n\n# Boolean operators\nprint(True and False)\nprint(True or False)","2bffc4dc":"x = data['Volume_(BTC)']>200     \ndata[x]","e5df1dc5":"data[np.logical_and(data['Volume_(BTC)']>200, data['Weighted_Price']>100 )]","62b9c8ae":"data[(data['Open']>200) & (data['Close']>100)]","8bfd5b92":"i = 0\nwhile i != 15 :\n    print('i is: ',i)\n    i +=1 \nprint(i,' is equal to 15')","ac2bb2dc":"# Stay in loop if condition( i is not equal 15) is true\nlis = [1,2,3,4,5,6,8,9,10,11,12,13,14,15]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\n\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'turkey':'sinop','russia':'moscow'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['Open']][0:1].iterrows():\n    print(index,\" : \",value)","b39d1db5":"**DICTIONARY**\n\n\n","0e24c700":"se\u00e7ti\u011fimiz data seti pop\u00fcler bir konu oldu\u011funudan dolay\u0131s\u0131yla datam\u0131z 4b kadar b\u00fcy\u00fck bir veriyi kaps\u0131yor. Ekrana gelen bu bilgidende anla\u015f\u0131laca\u011f\u0131 \u00fczere datam\u0131zda ki de\u011ferlerin \u00e7o\u011funlu\u011fu float(7), int(1) oldu\u011funu g\u00f6r\u00fcyoruz. ","0cfdeb69":"**WHILE and FOR LOOPS**\n","461ef644":"**PANDAS**","a132f0ad":"cvs dosyam\u0131z\u0131 impoert ediyoruz. Ve kar\u015f\u0131m\u0131za ilk 5 sat\u0131r datam\u0131z geliyor fakat yorumlamak i\u00e7in ekstra bir ka\u00e7 i\u015flem daha yapmam\u0131z gerekiyor.Baz\u0131 sat\u0131rlarda de\u011ferler NaN olarak geldi\u011finden.\n","661f41c1":"**in this chapter, I learned how to import the csv file, data visualization tools, how loops work, and how to use different source libraries.**","2e1d2274":" #Stay in loop if condition( i is not equal 15) is true"}}