{"cell_type":{"302d071e":"code","48b33805":"code","fbbab0be":"code","16a8efd0":"code","31b31cc1":"code","c5ba5729":"code","57f1ff8f":"code","fda2d2bd":"code","859cb20b":"code","8c854270":"code","d106b7ad":"code","93ff2a03":"code","ef5b8d84":"code","c24af4cf":"code","898c0025":"code","a1f0a6aa":"code","43c1ebf1":"code","b95d3f13":"code","28138470":"code","693afa69":"code","d8ba886d":"code","c5d94a70":"code","a8eb0902":"code","58b159a7":"code","b1799fa2":"code","5bdd30fd":"code","9f267d86":"code","655f2841":"code","0ce6a005":"code","8fc08682":"code","28223460":"code","7978cee9":"code","330e8a6a":"code","5975870f":"code","ddf91743":"code","d2112b97":"code","615a8449":"code","5b196efe":"code","4123c606":"code","49c2052c":"code","6d4acb5d":"code","73e79b7b":"code","78a5f7a3":"code","82889ca6":"code","fa35822a":"code","51f08276":"code","cf7bf07a":"code","8e8154d6":"code","cc1cf1ac":"code","3d4c290c":"code","073f416a":"code","fc6933f3":"code","46942e35":"code","41298d4b":"code","70e23e1e":"code","bc4f9bb7":"code","617ca314":"code","b456347c":"code","6b60d646":"code","1b5b09cb":"code","986cf1e2":"code","3363dfa6":"code","953dfccf":"code","473f1fdf":"code","a7869c39":"code","909189bb":"code","c54e1813":"code","3d8f4151":"code","60799b77":"code","c010ac2e":"code","d3334c60":"code","beee1f54":"code","d3664533":"code","f80c9ce6":"code","eaa72250":"code","84633432":"code","875b9152":"code","2a1f32f3":"code","38701e2a":"code","12208e27":"code","b953d204":"code","a903186e":"code","f013adfc":"code","9b052e23":"code","2d15e71d":"code","87dafaee":"code","51894394":"code","1478cc90":"markdown","4b830011":"markdown","f5af41af":"markdown","de8dcf83":"markdown","d7f6531e":"markdown","1a0dc352":"markdown","8edcac0b":"markdown","668f9139":"markdown","c2f62b47":"markdown","9579741a":"markdown","0ef7e70b":"markdown","83082314":"markdown","6b84bd65":"markdown","bca35eea":"markdown","da7669c0":"markdown","2978a57a":"markdown","27eafaf1":"markdown","8209db0e":"markdown","79c6b01b":"markdown","0d49e8eb":"markdown","b0bc91c5":"markdown","1b70925f":"markdown","75620c77":"markdown","48e9a836":"markdown","bbe2ee4c":"markdown","9404ef55":"markdown","96deb019":"markdown","d123780b":"markdown","0cd7b846":"markdown","fe40a7cb":"markdown","f8f5b68e":"markdown","32972203":"markdown","c7e4e5ac":"markdown","e59862f4":"markdown","d6237354":"markdown","152eaff1":"markdown","6ea6676c":"markdown","d3a8b5b4":"markdown","ecb5e354":"markdown","734a8fd0":"markdown","7087951a":"markdown","8ab6a1cc":"markdown","9d4d95bf":"markdown","0fd602d3":"markdown","0e4cbd2b":"markdown","0deb2e0e":"markdown","357ed4c2":"markdown","28eaca7c":"markdown","d501d5cb":"markdown","1dce6270":"markdown","27856e83":"markdown","5ccb7de2":"markdown"},"source":{"302d071e":"# importing libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport geopandas as gpd\nimport fiona\n\nplt.rcParams['savefig.facecolor'] = 'white'\n%matplotlib inline","48b33805":"print('listing files:\\n')\n%ls ..\/input\/","fbbab0be":"# reading in shape file\npath = '..\/input\/new-york-city-pfirm-data-01302015\/s_fld_haz_ar.shp'\npfirm_df = gpd.read_file(path)\n\n# previewing first five rorws of data\npfirm_df.head()","16a8efd0":"# previewing last five rorws of data\npfirm_df.tail()","31b31cc1":"print('dataframe shape:\\n')\n\nrows = pfirm_df.shape[0]\ncolumns = pfirm_df.shape[1]\n\nprint('number of rows: {:,}.\\nnumber of columns: {}.'.format(rows, columns))","c5ba5729":"print('type of python object:\\n\\n{}'.format(type(pfirm_df)))","57f1ff8f":"print('quickly inspecting our map.')\npfirm_df.plot()","fda2d2bd":"# summary of the data\npfirm_df.info()","859cb20b":"print('count of data types:')\npfirm_df.dtypes.value_counts()","8c854270":"print('summary statistics for numeric columns:')\npfirm_df.describe()","d106b7ad":"print('summary statistics for string\/object columns:')\npfirm_df.describe(include='object')","93ff2a03":"print('summary statistics for all column types:')\npfirm_df.drop(columns='geometry').describe(include='all').T","ef5b8d84":"s1 = pfirm_df.isnull().sum().sort_values(ascending=False)\ns2 = round(pfirm_df.isnull().sum().sort_values(ascending=False) \/ len(pfirm_df), 3)\n\nprint('null statistics of each column:')\npd.concat([s1.rename('count_null'), s2.rename('normalized')], axis=1)","c24af4cf":"print('total number of nulls in data: {:,}.'.format(pfirm_df.isnull().sum().sum()))","898c0025":"# previewing columns that are 100% null\npfirm_df[['VEL_UNIT', 'AR_REVERT']].head()","a1f0a6aa":"# inspecting items within these columns\nfor col in ['VEL_UNIT', 'AR_REVERT']:\n    print(pfirm_df[col].value_counts())","43c1ebf1":"print('number of columns: {}'.format(pfirm_df.shape[1]))\n\n# dropping 100% null columns\npfirm_df = pfirm_df.drop(columns=['VEL_UNIT', 'AR_REVERT'])\nprint('new number of columns: {}\\n'.format(pfirm_df.shape[1]))\n\npfirm_df.head()","b95d3f13":"# let's preview our null counts after droppping those columns\ns1 = pfirm_df.isnull().sum().sort_values(ascending=False)\ns2 = round(pfirm_df.isnull().sum().sort_values(ascending=False) \/ len(pfirm_df), 2)\n\nprint('null statistics:')\npd.concat([s1.rename('count_null'), s2.rename('normalized')], axis=1)","28138470":"print('reviewing items in FLOODWAY column that is almost 100% null')\npfirm_df['FLOODWAY'].value_counts(dropna=False)","693afa69":"# plotting histograms of numeric columns\npfirm_df.hist(figsize=(12,12))\nplt.tight_layout()","d8ba886d":"for col in pfirm_df.columns:\n    # geometry type does not have a .value_counts() method\n    if col == 'geometry':\n        continue\n    print(col, 'value counts:')    \n    print(pfirm_df[col].value_counts(dropna=False, normalize=True).head())\n    print()","c5d94a70":"pfirm_df.iloc[:, -5:-1].head()","a8eb0902":"# summary statistics of possible columns to drop\npfirm_df.iloc[:, -5:-1].describe()","58b159a7":"print('number of initial columns: {}'.format(pfirm_df.shape[1]))\n\ncol_drop = pfirm_df.iloc[:, -5:-1].columns\nprint('columns to drop:', col_drop.to_list())\n\npfirm_df = pfirm_df.drop(columns=col_drop)\nprint('number of new columns: {}'.format(pfirm_df.shape[1]))\n\npfirm_df.head()","b1799fa2":"# inspecting our data\npfirm_df.info()","5bdd30fd":"s1 = pfirm_df.isnull().sum().sort_values(ascending=False)\ns2 = round(pfirm_df.isnull().sum().sort_values(ascending=False) \/ len(pfirm_df), 2)\n\nprint('null statistics:')\npd.concat([s1.rename('count_null'), s2.rename('normalized')], axis=1)","9f267d86":"print('reviewing geometry column:')\npfirm_df[['geometry']].head()","655f2841":"pfirm_df[['geometry']].info()","0ce6a005":"print(\"reviewing the geometry's coordinate referance system (CRS).\")\npfirm_df = pfirm_df.set_crs(epsg=2263)\nprint(pfirm_df.crs)","8fc08682":"# looking at the values in the V_DATUM column\npfirm_df['V_DATUM'].value_counts()","28223460":"v_datum = pfirm_df['V_DATUM'].value_counts().index[0]\n\nprint('the vertical datum for this geometry is: {}.'.format(v_datum))","7978cee9":"print('reviewing items in the FLD_ZONE column:')\n\npfirm_df['FLD_ZONE'].value_counts()","330e8a6a":"zone_vals = pfirm_df['FLD_ZONE'].unique()\n\nprint('the unique values in our flood zone column are:\\n\\n{}'.format(zone_vals))","5975870f":"zone_checks = ['OPEN WATER', 'X']\n\nfig, axs = plt.subplots(1, 2, figsize=(10,10))\n\nfor zone, ax in zip(zone_checks, axs.flat):\n    \n    pfirm_df[pfirm_df['FLD_ZONE'].isin([zone])].plot(ax=ax)\n    ax.set_title('FLD_ZONE = {}.'.format(zone))\n    \nfig.tight_layout()","ddf91743":"print('reviewing summary statistics for base flood elevations by flood zone:')\n\npfirm_df.groupby(by=['FLD_ZONE'])['STATIC_BFE'].describe()","d2112b97":"# zones with base flood elevations\nbfe_df = pfirm_df.groupby(by=['FLD_ZONE'])['STATIC_BFE'].describe()\nbfe_df.loc[bfe_df['max'] > 0]","615a8449":"zones = bfe_df.loc[bfe_df['max'] > 0].index.to_list()\n\nprint('zones {} are the only zones that have static base flood elevations.'.format(zones))","5b196efe":"print('reviewing summary statistics for depth elevations by flood zone:')\n\npfirm_df.groupby(by=['FLD_ZONE'])['DEPTH'].describe()","4123c606":"# zones with base flood elevations\ndepths_df = pfirm_df.groupby(by=['FLD_ZONE'])['DEPTH'].describe()\ndepths_df.loc[depths_df['max'] > 0]","49c2052c":"depths = depths_df.loc[depths_df['max'] > 0].index.to_list()\n\nprint('zone {} is the only zone that has a depth elevation.'.format(depths))","6d4acb5d":"sfha_df = pfirm_df.groupby(by=['SFHA_TF', 'FLD_ZONE'])['STATIC_BFE'].describe()\n\nsfha_df.sort_values(by='SFHA_TF', ascending=False)","73e79b7b":"pfirm_df.loc[pfirm_df['STATIC_BFE'] > -9999][['STATIC_BFE']].describe()","78a5f7a3":"null_length = len(pfirm_df.loc[pfirm_df['STATIC_BFE'] <= -9999])\n\nprint('there are {:,} values with null placeholders of -9999 for STATIC_BFE that \\\nneed to be replaced with nulls.'.format(null_length))","82889ca6":"s1 = pfirm_df.isnull().sum().sort_values(ascending=False)\ns2 = round(pfirm_df.isnull().sum().sort_values(ascending=False) \/ len(pfirm_df), 3)\n\nprint('null statistics:')\nprint('total nulls in dataframe: {:,}.'.format(s1.sum()))\n\nbefore_replace_df = pd.concat([s1.rename('count_null'), s2.rename('normalized')], axis=1)\nbefore_replace_df.head(len(before_replace_df))","fa35822a":"print('replacing incorrectly inserted values (e.g. -9999) with nans.')\n\nfor col in ['STATIC_BFE', 'DEPTH']:\n    \n    # if our column value is less than -1, replace with nan, else keep column value\n    pfirm_df[col] = np.where(pfirm_df[col] < -1, np.nan, pfirm_df[col])\n    \npfirm_df.describe()    ","51f08276":"s1 = pfirm_df.isnull().sum().sort_values(ascending=False)\ns2 = round(pfirm_df.isnull().sum().sort_values(ascending=False) \/ len(pfirm_df), 3)\n\nprint('null statistics:')\nprint('total nulls in dataframe: {:,}.'.format(s1.sum()))\n\nafter_replace_df = pd.concat([s1.rename('count_null'), s2.rename('normalized')], axis=1)\nafter_replace_df.head(len(after_replace_df))","cf7bf07a":"pd.concat([before_replace_df, \n           after_replace_df.rename(columns={'count_null':'count_after', \n                                            'normalized':'normalized_after'})], axis=1)","8e8154d6":"print('reviewing summary statistics for static base flood elevations by flood zone:')\n\npfirm_df.groupby(by=['FLD_ZONE'])['STATIC_BFE'].describe()","cc1cf1ac":"sfha_df = pfirm_df.groupby(by=['SFHA_TF', 'FLD_ZONE'])['STATIC_BFE'].describe()\n\nsfha_df.sort_values(by='SFHA_TF', ascending=False)","3d4c290c":"hist = pfirm_df.hist(figsize=(12,6), bins=25)\n\nfor ax in hist.flatten():\n    ax.set_xlabel(\"feet\", fontsize=12)\n    ax.set_ylabel(\"Count\", fontsize=12)\n    \nplt.tight_layout()    ","073f416a":"fig, axs = plt.subplots(2, 1, figsize=(12,9))\n\nfor ax, col in zip(axs.flat, ['STATIC_BFE', 'DEPTH']):\n    \n    sns.boxplot(x=col, \n                y=\"FLD_ZONE\", \n                data=pfirm_df, \n                ax=ax)\n    \n    ax.set_xlabel(col + ' (ft.)')\n    plt.suptitle('Distribution of static base flood elevations and depths by flood zone\\n\\n', \n                 y=.94, \n                 fontsize=20)\n    \nfig.tight_layout()    ","fc6933f3":"# number of records in each flood zone\npfirm_df['FLD_ZONE'].value_counts()","46942e35":"# preview the dataframe where flood zones are open water and x\npfirm_df.loc[pfirm_df['FLD_ZONE'].isin(['OPEN WATER', 'X'])].head()","41298d4b":"# summary statistics where flood zones are open water and x\npfirm_df.loc[pfirm_df['FLD_ZONE'].isin(['OPEN WATER', 'X'])].iloc[:, :-1].describe(include='all')","70e23e1e":"# preview count of records grouped by flood zones are open water and x\nd1 = pfirm_df.loc[pfirm_df['FLD_ZONE'].isin(['OPEN WATER', 'X'])]\n\nd1.groupby(by=['FLD_ZONE', 'SFHA_TF']).count()","bc4f9bb7":"print('number of records in total data frame: {:,}'.format(pfirm_df.shape[0]))\n\nlength = pfirm_df.loc[pfirm_df['FLD_ZONE'].isin(['OPEN WATER', 'X'])].shape[0]\nprint('number of records to drop where flood zone is open water and x: {:,}'.format(length))\n\npfirm_df = pfirm_df.loc[~pfirm_df['FLD_ZONE'].isin(['OPEN WATER', 'X'])]\nprint('number of records in dataframe after dropping open water and x zones: {:,}'.format(pfirm_df.shape[0]))","617ca314":"# our dropped flood zones are no longer included in dataframe\npfirm_df.groupby(by=['SFHA_TF', 'FLD_ZONE']).count()","b456347c":"# number of records in each flood zone\npfirm_df['FLD_ZONE'].value_counts()","6b60d646":"# a quick preview of our map after dropping open water and x flood zones\npfirm_df.plot()","1b5b09cb":"# summary statistics of data\npfirm_df.iloc[:, :-1].describe(include='all')","986cf1e2":"# summary of data\npfirm_df.info()","3363dfa6":"fig, axs = plt.subplots(2, 3, figsize=(12, 8))\nzones = list(pfirm_df['FLD_ZONE'].unique())\n\nfor zone, ax in zip(zones, axs.flat):\n\n    sns.histplot(data=pfirm_df.loc[pfirm_df['FLD_ZONE'].isin([zone])], \n                 x='STATIC_BFE', \n                 ax=ax)\n\n    ax.set_title('{}'.format(zone))\n    \naxs[1, 2].axis('off')\n\nplt.suptitle('Distribution of static base flood elevations by flood zone\\n', fontsize=15)\nfig.tight_layout()","953dfccf":"# plotting static base flood elevations distribution by flood zone per plot\nzones = pfirm_df['FLD_ZONE'].unique()\n\nfor zone in zones:\n    plot_df = pfirm_df.loc[pfirm_df['FLD_ZONE'] == zone]\n    if plot_df['STATIC_BFE'].value_counts().sum() < 1:\n        continue\n        \n    plt.figure()    \n    sns.histplot(plot_df, x='STATIC_BFE')\n    plt.title('FLD_ZONE = {}'.format(zone))","473f1fdf":"fig, axs = plt.subplots(1, 2, figsize=(12, 5))\nzones = ['AE', 'VE']\n\nfor zone, ax in zip(zones, axs.flat):\n\n    sns.histplot(data=pfirm_df.loc[pfirm_df['FLD_ZONE'].isin([zone])], \n                 x='STATIC_BFE', \n                 ax=ax)\n\n    ax.set_title('{}'.format(zone))\n    \nplt.suptitle('Distribution of static base flood elevations by flood zones', fontsize=15)\nfig.tight_layout()","a7869c39":"fig, ax = plt.subplots(figsize=(10, 6))\n\nfor zone in ['AE', 'VE']:\n\n    sns.ecdfplot(data=pfirm_df.loc[pfirm_df['FLD_ZONE'].isin([zone])], \n                 x=\"STATIC_BFE\", \n                 ax=ax, \n                 label=zone)\n    \n    ax.legend(loc=2)\n    \nplt.suptitle('Empirical cumulative distributions of static base flood elevations (ft.) by flood zone', fontsize=13)    \nfig.tight_layout()    ","909189bb":"# previewing count of records by within special flood hazard area\npfirm_df['SFHA_TF'].value_counts()","c54e1813":"# summary statistics of static base flood elevations by special flood hazard area\npfirm_df.groupby(by=['SFHA_TF'])['STATIC_BFE'].describe()","3d8f4151":"fig, ax = plt.subplots(figsize=(8, 5))\n\nsns.countplot(x=\"SFHA_TF\", \n              data=pfirm_df, \n              ax=ax)\n\nplt.title('Number of records in (T) or out (F) of the Special Flood Hazard Area', fontsize=12)\nplt.tight_layout()","60799b77":"# importing borough boundaries for better aesthetics\npath = '..\/input\/nyc-borough-boundaries\/geo_export_f7b072b3-fac8-4684-8a20-ba4e290a1523.shp'\n\nborough_gdf = gpd.read_file(path)\nborough_gdf.head()","c010ac2e":"# quick plot of boroughs\nborough_gdf.plot()\nplt.title('nyc boroughs')","d3334c60":"# converting to the state plane crs of our floodzone dataframe\nborough_gdf = borough_gdf.to_crs(epsg=2263)\nprint(borough_gdf.crs)\n\nborough_gdf.plot()\nplt.title('nyc boroughs')","beee1f54":"fig, ax = plt.subplots(figsize=(10, 10))\n\npfirm_df.plot(ax=ax)\nborough_gdf.plot(ax=ax, \n                 facecolor='none', \n                 edgecolor='black', \n                 zorder=1)\n\nplt.axis('off')\nplt.title('Preliminary Flood Insurance Rate Map of New York City', fontsize=15)\nplt.tight_layout()","d3664533":"fig, ax = plt.subplots(figsize=(10, 10))\n\nsfha_true = pfirm_df.loc[~pfirm_df['FLD_ZONE'].isin(['0.2 PCT ANNUAL CHANCE FLOOD HAZARD'])]\nsfha_true.plot(color='C0', \n               ax=ax, \n               zorder=0)\n\nsfha_false = pfirm_df.loc[pfirm_df['FLD_ZONE'].isin(['0.2 PCT ANNUAL CHANCE FLOOD HAZARD'])]\nsfha_false.plot(color='orange', \n                ax=ax)\n\nborough_gdf.plot(ax=ax, \n                 facecolor='none', \n                 edgecolor='black', \n                 zorder=2)\n\nblue_patch = mpatches.Patch(color='C0', label='100-yr')\norange_patch = mpatches.Patch(color='orange', label='500-yr or 0.2%')\n\nplt.legend(title='Special Flood\\nHazard Area', \n           handles=[blue_patch, orange_patch], \n           fontsize='x-large', \n           title_fontsize='x-large',\n           loc=2)\n\nplt.axis('off')\nplt.title('Preliminary Flood Insurance Rate Map of New York City\\n', fontsize=18)\nplt.tight_layout()","f80c9ce6":"pfirm_df.crs","eaa72250":"# preview active crs\npfirm_df.crs","84633432":"# adding a column for our geometry converted to WGS84\npfirm_df['wgs84'] = pfirm_df.to_crs(epsg=4326)['geometry']\n\npfirm_df.head()","875b9152":"# make sure 2263 is still our active geometry\npfirm_df.crs","2a1f32f3":"fig, ax = plt.subplots(figsize=(10, 10))\n\n# plotting our map in WGS84\npfirm_df.set_geometry('wgs84').plot(ax=ax)\nborough_gdf.to_crs(epsg=4326).plot(ax=ax, \n                                   facecolor='none', \n                                   edgecolor='black', \n                                   zorder=1)\n\nplt.title('Preliminary Flood Insurance Rate Map of New York City', fontsize=15)\nplt.tight_layout()","38701e2a":"# previewing geometry's area in square ft.\npfirm_df.area.head()","12208e27":"# converting square feet to square miles\nsq_mi = pfirm_df.area \/ 5280**2\n\nsq_mi.head()","b953d204":"# summary statistics of area in sq mi\nsq_mi_df = sq_mi.to_frame().rename(columns={0:'area sq mi'})\n\nround(sq_mi_df.describe(), 4)","a903186e":"sq_mi_df.hist(bins=25, figsize=(10,6))\nplt.title(\"Distribution of Each Geometry's Area\", fontsize=15)\nplt.xlabel('sq mi')\nplt.ylabel('count')","f013adfc":"print('flood zone area statistics:\\n')\nprint('area in square feet: {:,.0f}'.format(pfirm_df.area.sum()))\nprint('area in square miles: {:,.0f}'.format(pfirm_df.area.sum() \/ 5280**2))","9b052e23":"# creating a dataframe of only flood zones in the special flood hazard area (sfha)\n# 0.2 pct chance is excluded from the sfha\nsfha_df = pfirm_df[~pfirm_df['FLD_ZONE'].isin(['0.2 PCT ANNUAL CHANCE FLOOD HAZARD'])]\n\nsfha_df['FLD_ZONE'].value_counts()","2d15e71d":"print('area statistics only of special flood hazard area zones:\\n')\nprint('area in square feet: {:,.0f}'.format(sfha_df.area.sum()))\nprint('area in square miles: {:,.0f}'.format(sfha_df.area.sum() \/ 5280**2))","87dafaee":"# retrieving area calculations by flood zone\nzones = pfirm_df['FLD_ZONE'].unique()\nempty_dict = {}\n\nfor zone in zones:\n    zone_df = pfirm_df.loc[pfirm_df['FLD_ZONE'] == zone]\n    zone_series = zone_df.area.sum() \/ 5280**2\n    \n    empty_dict.update({zone:zone_series})\n    \nempty_dict","51894394":"s1 = pd.Series(empty_dict).rename('area (sq mi)')\ns1 = s1.reset_index().rename(columns={'index': 'zone'})\ns1 = s1.sort_values(by='area (sq mi)', ascending=False)\n\n# plot of area by flood zone\nfig, ax = plt.subplots(figsize=(13, 8))\n\nsns.barplot(data=s1, \n            x='area (sq mi)', \n            y='zone')\n\nplt.title('Area by Flood Zone in NYC', fontsize=15)\nplt.tight_layout()","1478cc90":"Flood zones VE and AE are the only zones that have a static base flood elevation (BFE) value. Flood zone AO is the only zone with a depth elevation, although these depths are very small.","4b830011":"We notice that there are two columns that are completely null - `VEL_UNIT` and `AR_REVERT`. We may be able to safely drop them in the future.","f5af41af":"Brief definition of FEMA's flood zones:\n\n>Flood hazard areas identified on the Flood Insurance Rate Map are identified as a Special Flood Hazard Area (SFHA). SFHA are defined as the area that will be inundated by the flood event having a 1-percent chance of being equaled or exceeded in any given year. The 1-percent annual chance flood is also referred to as the base flood or 100-year flood. SFHAs are labeled as Zone A, Zone AO, Zone AH, Zones A1-A30, Zone AE, Zone A99, Zone AR, Zone AR\/AE, Zone AR\/AO, Zone AR\/A1-A30, Zone AR\/A, Zone V, Zone VE, and Zones V1-V30. Moderate flood hazard areas, labeled Zone B or Zone X (shaded) are also shown on the FIRM, and are the areas between the limits of the base flood and the 0.2-percent-annual-chance (or 500-year) flood. The areas of minimal flood hazard, which are the areas outside the SFHA and higher than the elevation of the 0.2-percent-annual-chance flood, are labeled Zone C or Zone X (unshaded).  \n\nSource: https:\/\/www.fema.gov\/glossary\/flood-zones","de8dcf83":"Let's continue inspecting our data.","d7f6531e":"General identification information about this dataset\n>Originator: Federal Emergency Management Agency  \nPublication_Date: 20150130  \nTitle: DIGITAL FLOOD INSURANCE RATE MAP DATABASE,  CITY OF NEW YORK, NEW YORK  \nGeospatial_Data_Presentation_Form: FEMA-DFIRM-Preliminary  \nPublication_Information:\n>Publication_Place: Washington, DC  \nPublisher: Federal Emergency Management Agency  \nOnline_Linkage: https:\/\/msc.fema.gov    ","1a0dc352":"# 3. Inspecting flood zones and static base flood elevation values","8edcac0b":"The null placeholder of -9999 will be problematic in the future. We will want to replace these with nulls.","668f9139":"Although zones A & AO don't have base flood elevations, they are inside the special flood hazard area (SFHA). Thus, we can not drop them. \n\n\n`T` stands for **True** and `F` stands for **False**.","c2f62b47":"# 1. Introduction <a class=\"anchor\" id = \"1\"><\/a>\n\nI've wanted to do this project for some time now, and I'm finally happy to share this open source project. This notebook demonstrates how to analyze FEMA's Preliminary Flood Insurance Rate Map (i.e. PFIRM), sometimes known as '*flood zone*.' The flood zone is for New York City (all five boroughs). Let's see what cool things we can discover about this dataset!","9579741a":"# 2. The files\n\nFor this analysis, we are interested in the special flood hazard area shapefile - `s_fld_haz_ar.shp`. This contains information about the flood zone. A shapefile is geospatial vector data for geographic information system software and stores geometric location and associated attribute information.","0ef7e70b":"Previewing items within each column. hopefully we'll find columns that are not 100% null but are still not useful for this analysis.","83082314":"There seems to be weird values of -9999 in the numeric columns. Possibly placeholders for null values. We will inspect these values later.","6b84bd65":"## 3.2 Reviewing summary statistics by flood zone after filling in nulls","bca35eea":"From the `.crs` attribute above, our geometry's CRS is *NAD83 \/ New York Long Island (ftUS)* - code 2263.\nOur units are in feet.","da7669c0":"## 3.1 Replacing -9999 values with null","2978a57a":"We read the shapefile into Python as a GeoDataFrame. This type is similar to a pandas dataframe, but includes additional spatial information - mainly, our `geometry` column. The geometry column contains polygons that represent the physical space of each flood zone.","27eafaf1":"It seems to be that this dataset represents null values for certain numeric columns as -9999 (refer to screenshot below). Let's see what the values are if we exclude these values.","8209db0e":"There are no values besides `None` in these columns, and we can safely drop these.","79c6b01b":"## 2.3 Inspecting our geometry column","0d49e8eb":"About the data: \n>The Digital Flood Insurance Rate Map (DFIRM) Database depicts flood risk information and supporting data used to develop the risk data. The primary risk classifications used are the 1-percent-annual-chance flood event, the 0.2-percent-annual-chance flood event, and areas of minimal flood risk. The DFIRM Database is derived from Flood Insurance Studies (FISs), previously published Flood Insurance Rate Maps (FIRMs), flood hazard analyses performed in support of the FISs and FIRMs, and new mapping data, where available. The FISs and FIRMs are published by the Federal Emergency Management Agency (FEMA). The file is georeferenced to earth's surface using the State Plane projection and coordinate system. The specifications for the horizontal control of DFIRM data files are consistent with those required for mapping at a scale of 1:12,000.","b0bc91c5":"Now that we have a better understanding of our data, let's come back to those 100% null value columns and see if we can safely drop them","1b70925f":"There are two flood zones in particular, X and OPEN WATER, that may be good candidates to drop. We don't want to drop any flood zones in the special flood hazard area (AE, VE, A, and AO), and we also don't want to drop the 0.2 % annual chance flood zone (although outside of the special flood hazard area, this information is still quite useful). Let's see if we can safely drop the previously mentioned values safely.","75620c77":"## 2.1 Inspecting the data","48e9a836":"# Libraries","bbe2ee4c":"Definitions from our data dictionary:\n\nVEL_UNIT\n>Velocity Unit Lookup Identification. A code that provides a link to a valid unit of velocity from the D_Vel_Units table. This unit indicates the measurement system for the velocity of the flood hazard area. The value is shown in the legend where alluvial fans are present. This field is only populated if the VELOCITY field is populated.\n\nAR_REVERT\n>If the area is Zone AR, this field would hold the zone that the area would revert to if the AR zone were removed. This field is only populated if the corresponding area is Zone AR. Acceptable values for this field are listed in the D_Zone table.","9404ef55":"Those values look much better and are probably the real statistics of our static base flood elevation column. For this analysis, we can safely replace the -9999.0 values with nulls. Let's first track our replacement process.","96deb019":"The count of records within or outside of our SFHA is similar - 1722 inside and 1726 outside.","d123780b":"Lastly, let's inspect our geometry column, which is a type provided by the shapefile (.shp) format.","0cd7b846":"Performing summary statistics of static base flood elevations grouped by Special Flood Hazard Area (True\/False) and Flood Zone. Zones AE and VE are the only ones with elevation values, and the remaining zones have null values.","fe40a7cb":"Reviewing possible columns to drop. After reviewing items within each column, there are a few columns that have only one value as well as values that look off (e.g. -9999.0.). Let's continue to inspect these columns.","f8f5b68e":"## 2.2 Dropping unnecessary columns","32972203":"We could potentially drop this column and just record the vertical datum on the page, but this does provide useful information. Let's keep it.","c7e4e5ac":"There seems to be some outliers in these columns. Let's inspect them.","e59862f4":"Data description from metadata:\n\n>Entity_Type_Label: s_fld_haz_ar  \nEntity_Type_Definition: Location and attributes for flood insurance risk zones on the DFIRM.\n\n\nFor more information about our columns and their descriptions, please find the [metadata files](https:\/\/github.com\/mebauer\/nyc-floodzone-analysis\/blob\/master\/pfirm-nyc\/360497_PRELIM_metadata.txt) located in the pfirm_nyc folder.","d6237354":"These columns don't appear to be useful in this analysis, so I'll drop them.","152eaff1":"Let's look at some summary statistics.","6ea6676c":"To read the full Preliminary Flood Insurance Study mentioned above:  \nhttps:\/\/msc.fema.gov\/portal\/downloadProduct?productID=360497V000B    ","d3a8b5b4":"NYC's Preliminary Flood Insurance Rate Map (PFIRM) data can be downloaded here:  \nhttp:\/\/www.region2coastal.com\/view-flood-maps-data\/view-preliminary-flood-map-data\/","ecb5e354":"# New York City's Flood Zone Exploratory Data Analysis\nAuthor: Mark Bauer","734a8fd0":"We've inspecting most of our columns, and even dropped some that didn't have any values stored in them. We did see wierd values such as -9999, but for now, let's turn our attention to our geometry column.","7087951a":"From a quick glance, we can probably drop the `OPEN WATER` value, as this is probably only the outline of a water boundary. Additionally, zone 'X' doesn't tell us any useul information about flood zones.","8ab6a1cc":"## 3.3 Dropping unnecessary flood zone values","9d4d95bf":"There's a lot of useful information stored in our geometry column, but for now, let's continue and inspect our flood zone values.","0fd602d3":"Definitions from our [data dictionary](https:\/\/github.com\/mebauer\/nyc-floodzone-analysis\/blob\/master\/data-dictionary.pdf):\n\nFLD_ZONE\n>Flood Zone Lookup Identification. This is a code that provides a link to a valid entry from the D_Zone table. This is the flood zone label\/abbreviation for the area.\n\nSTATIC_BFE\n>Static Base Flood Elevation. For areas of constant Base Flood Elevation (BFE), the BFE value is shown beneath the zone label rather than on a BFE line. In this situation the same BFE applies to the entire polygon. This is normally occurs in lakes or coastal zones. This field is only populated where a static BFE is shown on the FIRM.\n\nDEPTH\n>Depth Value for Zone AO Areas. This is shown beneath the zone label on the FIRM. This field is only populated if a depth is shown on the FIRM.\n\nSFHA_TF\n>Special Flood Hazard Area. If the area is within SFHA this field would be True. This field will be true for any area that is coded for any A or V zone flood areas. It should be false for any X or D zone flood areas. Enter \u201cT\u201d for true or \u201cF\u201d for false.","0e4cbd2b":"# 4. Inspect the geometry of the data","0deb2e0e":"## 4.2 Analyzing the flood zone's area","357ed4c2":"# Resources Before Getting Started","28eaca7c":"## 4.1 Mapping the flood zone","d501d5cb":"In this dataset, each row is a flood zone geometry. The type of flood zone can be inspected under the `FLD_ZONE` column. Additionally, there are 15 columns that contain information about each flood zone row.","1dce6270":"Although `FLOODWAY` is 99% null, it still has non-null values. Let's keep the column.","27856e83":"Unfortunately, there is no data dictionary provided in the download. To learn more about each column, the [metadata](https:\/\/github.com\/mebauer\/nyc-floodzone-analysis\/blob\/master\/pfirm-nyc\/360497_PRELIM_metadata.txt) points to **Guidelines and Specifications for Flood Hazard Mapping Partners: Appendix L: Guidance for Preparing Draft Digital Data and DFIRM Database.** You can find this resource at the Homeland Security Digital Library located here: https:\/\/www.hsdl.org\/?abstract&did=13285. I've also uploaded this resource for you with the title [data-dictionary.pdf](https:\/\/github.com\/mebauer\/nyc-floodzone-analysis\/blob\/master\/data-dictionary.pdf).","5ccb7de2":"You can see that both columns static_bfe and depth have a significant amount of null values after replacing -9999 with null."}}