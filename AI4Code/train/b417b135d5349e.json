{"cell_type":{"fc7f44d2":"code","6b2eb105":"code","815a8c10":"code","7b8cfacf":"code","2e372e62":"code","465646a7":"code","a1113a1d":"code","b2415fd6":"markdown","81806eb8":"markdown","8e8eac09":"markdown","9a6d1bf1":"markdown","94677590":"markdown","dc740fb8":"markdown","851fd1e1":"markdown","86c9c75a":"markdown","3acf83a7":"markdown","0f37b808":"markdown"},"source":{"fc7f44d2":"from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nimport pandas as pd\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\n\ndf_merge = pd.read_csv('..\/input\/graph-data\/graph_data_merged.csv')","6b2eb105":"fig = go.Figure(go.Scattermapbox(\n                name = 'Path Sailed',\n                mode = \"markers+lines\",\n                hoverinfo='all',\n                lon = [-1.4044, -1.6221, -8.2943, -49.9469],\n                lat = [50.9097, 49.6337, 51.8503, 41.7325],\n                 text = ['Southampton', 'Cherbourg', 'Queenstown', 'Point where Titanic sank'],\n#                 textposition = 'bottom right',\n                marker = {'size': 10}\n            )\n      )\n\nfig.add_trace(go.Scattermapbox(\n                name = 'Path Not Sailed',\n                mode = \"markers+lines\",\n                hoverinfo='all',\n                lon = [-49.9469, -74.0060],\n                lat = [41.7325, 40.7128],\n                text = ['Point where Titanic sank', 'New York'],\n                marker = {'size': 10}\n               )\n    \n)\nfig.update_layout(\n    title={\n        'text': 'Route of the RMS Titanic',\n        'y':0.9999,\n        'x':0.4},\n    margin ={'l':0,'t':35,'b':0,'r':0},\n    mapbox = {\n        'style': \"stamen-terrain\",\n        'center': {'lon': -40, 'lat': 40},\n        'zoom': 2},\n    width=800,\n    height=400\n)\nfig.show()","815a8c10":"port_fare = (df_merge\n             .groupby('Embarked')\n             .agg({'PerPersonFare': 'sum'})\n             .rename(columns={'PerPersonFare':'PortFare'})\n             .reset_index()\n            )\nembarked_details = (df_merge\n                    .groupby('Embarked')\n                    .agg({'PassengerId': 'count'})\n                    .rename(columns={'PassengerId':'PassengersEmbarked'})\n                    .reset_index()\n                   )\ntotals = pd.DataFrame([['Total', port_fare['PortFare'].sum()]], columns=['Embarked', 'PortFare'])\nport_fare = port_fare.append(totals)\ntotals = pd.DataFrame([['Total', embarked_details['PassengersEmbarked'].sum()]], columns=['Embarked', 'PassengersEmbarked'])\nembarked_details = embarked_details.append(totals)\n\nembarked_pclass = (df_merge.groupby(['Embarked','Pclass']).agg({'PassengerId': 'count'})\n                   .rename(columns={'PassengerId':'Count'})\n                   .reset_index()\n                  )\n\ncolor=px.colors.sequential.GnBu\npclass = embarked_pclass['Pclass'].unique()\n\nfig = make_subplots(\n    rows=2, cols=2,\n    specs=[[{'type':'domain'}, {'type':'domain'}],\n           [{\"colspan\": 2}, None]],\n    horizontal_spacing=0.10, \n    vertical_spacing=0.10,\n    subplot_titles=['Passengers embarked from each Port', \n                    'Revenue collected from each port',\n                    'Passengers embarked by class from each Port'\n                   ])\n\nfig1 = go.Sunburst(\n    labels= embarked_details['Embarked'],\n    parents=['Total', 'Total', 'Total', ''],\n    values= embarked_details['PassengersEmbarked'],\n    branchvalues='total',\n    hoverinfo='all',\n    marker=dict(\n        colors=[color[3], color[5], color[7], '#FFFFFF']\n    )\n)\n\nfig2 = go.Sunburst(\n    labels= port_fare['Embarked'],\n    parents=['Total', 'Total', 'Total', ''],\n    values= port_fare['PortFare'],\n    branchvalues='total',\n    hoverinfo='all',\n    marker=dict(\n        colors=[color[3], color[5], color[7], '#FFFFFF']\n    )\n)\n\nfig.add_trace(fig1, 1, 1)\nfig.add_trace(fig2, 1, 2)\n\nfig.add_trace(go.Bar(name='Cherbourg', \n                     x=pclass, \n                     y=embarked_pclass[embarked_pclass['Embarked']=='Cherbourg']['Count'], \n                     marker_color=color[3]),\n              2,1)\nfig.add_trace(go.Bar(name='Queenstown', \n                     x=pclass, \n                     y=embarked_pclass[embarked_pclass['Embarked']=='Queenstown']['Count'], \n                     marker_color=color[5]),\n              2,1)\nfig.add_trace(go.Bar(name='Southampton', \n                     x=pclass, \n                     y=embarked_pclass[embarked_pclass['Embarked']=='Southampton']['Count'], \n                     marker_color=color[7]),\n              2,1)\n\nfig.update_layout(margin = dict(t=40, l=0, r=0, b=0),\n                  autosize=False,\n                  width=800,\n                  height=500,\n                  xaxis_title='Pclass',\n                  yaxis_title='Number of Passengers'\n                 )\n\nfig.show()","7b8cfacf":"colors=px.colors.sequential.GnBu\n\nfig = go.Figure()\nfig = make_subplots(1,3,\n                    x_title='Pclass',\n                    y_title='Per Passenger Fare')\n\nfig.add_trace(go.Box(\n    y=df_merge[df_merge['Embarked']=='Cherbourg']['PerPersonFare'],\n    x=df_merge[df_merge['Embarked']=='Cherbourg']['Pclass'],\n    name='Cherbourg',\n    marker_color=colors[3]\n), 1, 1)\n\nfig.add_trace(go.Box(\n    y=df_merge[df_merge['Embarked']=='Queenstown']['PerPersonFare'],\n    x=df_merge[df_merge['Embarked']=='Queenstown']['Pclass'],\n    name='Queenstown',\n    marker_color=colors[5]\n), 1,2)\n\nfig.add_trace(go.Box(\n    y=df_merge[df_merge['Embarked']=='Southampton']['PerPersonFare'],\n    x=df_merge[df_merge['Embarked']=='Southampton']['Pclass'],\n    name='Southampton',\n    marker_color=colors[7]\n), 1, 3)\n\nfig.update_layout(\n    autosize=False,\n    width=800,\n    height=600,\n    title={\n        'text': 'Per Passenger Fare From Each Port By Class',\n        'y':0.9999,\n        'x':0.4,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    margin=dict(l=60, r=0, t=40, b=50)\n)\n\nfig.show()","2e372e62":"#data for single passengers on the ship\nsingles = (df_merge[((df_merge['SibSp']==0) & (df_merge['Parch']==0))]\n                  .groupby('Embarked')\n                  .agg({'PassengerId':'count'})\n                  .rename(columns={'PassengerId':'Count'})\n                  .reset_index()\n                 )\n#data for passengers with family on the ship\nwith_family = (df_merge[(~((df_merge['SibSp']==0) & (df_merge['Parch']==0)))]\n               .groupby('Embarked')\n               .agg({'PassengerId':'count'})\n               .rename(columns={'PassengerId':'Count'})\n               .reset_index()\n              )\n#data for passengers travelling on same ticket \non_same_ticket = (df_merge\n                  .groupby('Ticket')\n                  .agg({'PassengerId':'count'})\n                  .rename(columns={'PassengerId':'PeopleOnSameTicket'})\n                  .reset_index()\n                 )\nppl_same_ticket = df_merge.merge(on_same_ticket, on='Ticket')\nppl_same_ticket = (ppl_same_ticket[ppl_same_ticket['PeopleOnSameTicket']!=1]\n                   .groupby('Embarked')\n                   .agg({'PassengerId':'count'})\n                   .rename(columns={'PassengerId':'MultiplePeopleOnATicket'})\n                   .reset_index()\n)\n\n#plot graph\nnames = singles['Embarked']\ncolors = px.colors.sequential.GnBu\n\nfig = go.Figure(data=[\n    go.Bar(name='singles', x=names, y=singles['Count'], marker_color=colors[3]),\n    go.Bar(name='with family', x=names, y=with_family['Count'], marker_color=colors[5]),\n    go.Bar(name='Multiple people on same ticket', x=names, y=ppl_same_ticket['MultiplePeopleOnATicket'], marker_color=colors[7])\n])\n\n# Change the bar mode and set title\nfig.update_layout(barmode='group',\n                  margin=dict(l=0, r=0, t=40, b=0),\n                  width=800,\n                  height=400,\n                  yaxis_title='Number of Passengers',\n                  xaxis_title='Embarked Port',\n                  title={\n                      'text': 'Distribution of Singles\/People With Family',\n                      'y':0.9999,\n                      'x':0.4,\n                      'xanchor': 'center',\n                      'yanchor': 'top'},\n                 )\nfig.show()","465646a7":"#prepare dataset for graph\nchildren = df_merge.copy()\nchildren.loc[children['Age'] <= 14.0, ['Sex']] = 'child'\ngraph_data = (children\n              .groupby(['Sex', 'Survived'])\n              .agg({'PassengerId':'count'})\n              .rename(columns={'PassengerId':'PassengerCount'})\n              .reset_index()\n)\n\n#plot graph\ncolors = px.colors.sequential.GnBu\nx = graph_data['Sex'].unique()\n\nfig = go.Figure()\nfig = make_subplots(\n    rows=1, \n    cols=2,\n    specs=[[{'type': 'domain'}, {'type': 'xy'}]],\n    subplot_titles=['Passenger data by Sex', \n                    'Passenger Data by Age']\n)\n\n#add subplot at (1,1)\nfig.add_trace(go.Sunburst(\n    labels= ['Total','Females', 'Females Dead', 'Females Survived', 'Females In Test', 'Males', 'Males Dead', 'Males Survived', 'Males In Test'],\n    parents=['','Total', 'Females', 'Females', 'Females', 'Total', 'Males', 'Males', 'Males'],\n    values= [1309, 466, 81, 233, 152, 843, 468, 109, 266],\n    branchvalues='total',\n    hoverinfo='all',\n    opacity=1,\n    marker=dict(\n        colors=['#FFFFFF','#FD99C8','#f72346', '#4be36a', '#a3a0a0', '#25A9D1', '#f72346', '#4be36a', '#a3a0a0']\n    )\n),1,1)\n\n#add subplot at (1,2)\nfig.add_trace(go.Bar(x=x, y=graph_data[graph_data['Survived']==0]['PassengerCount'], name='Dead', marker_color='#F3526D'), 1,2)\nfig.add_trace(go.Bar(x=x, y=graph_data[graph_data['Survived']==1]['PassengerCount'], name='Survived', marker_color='#76E28C'), 1,2)\nfig.add_trace(go.Bar(x=x, y=graph_data[graph_data['Survived']==-1]['PassengerCount'], name='In Test', marker_color='#c2c0c0'),1,2)\n\nfig.update_layout(barmode='stack',\n                  xaxis={'categoryorder':'category ascending'},\n                  yaxis_title = 'Number of Passengers',\n                  margin = dict(t=40, l=0, r=0, b=0),\n                  autosize=False,\n                  width=800,\n                  height=400\n                 )\n\nfig.show()","a1113a1d":"#plot graph\nfig =go.Figure(go.Sunburst(\n    labels= ['Total','Singles', 'Singles Dead', 'Singles Survived', 'Singles In Test',\n             'Family Members', 'Family Members Dead', 'Family Members Survived', 'Family Members In Test'],\n    parents=['','Total', 'Singles', 'Singles', 'Singles', 'Total', 'Family Members', 'Family Members', 'Family Members'],\n    values= [1309, 692, 294, 234, 164, 617, 255, 108, 254],\n    branchvalues='total',\n    hoverinfo='all',\n    marker=dict(\n        colors=['#FFFFFF','rgb(8,104,172)','#f72346', '#4be36a', '#a3a0a0', \n                'rgb(78,179,211)', '#f72346', '#4be36a', '#a3a0a0']\n    ),\n))\n\nfig.update_layout(margin = dict(t=25, l=0, r=0, b=0),\n                  title={\n                      'text': 'Distribution of Singles\/People With Family',\n                      'y':0.9999,\n                      'x':0.5,\n                      'xanchor': 'center',\n                      'yanchor': 'top'},\n                  width=800\n                 )\n\nfig.show()","b2415fd6":"In the early 1900s, the transatlantic passenger trade was highly profitable and competitive. Ship lines were vying to transport wealthy travelers and immigrants. So J. Bruce Ismay and William Pirrie devised a plan to build a class of large liners that would be known for their comfort instead of their speed. One of them was the **RMS Titanic**(Royal Mail Ship Titanic in full). The Titanic featured an immense first-class dining saloon, elevators and swimming pool. Its second-class accommodations were comparable to first-class features on other ships. And its third-class offerings, although modest, were still noted for their relative comfort.","81806eb8":"By looking at the data, we can say that multiple passengers were booked on a single ticket. The booking of multiple passengers on the same ticket suggests that they were travelling together. But vice-a-versa is not true i.e all of family members may have travelled on multiple tickets. The below bar chart shows the same.","8e8eac09":"As the families were enjoying their luxurious travel to New York, there were a few incidents through the journey which they were unaware of. Amongst the messages received for the passengers on the wireless-radio, many were the iceberg warnings. These warnings were completely ignored by the crew members as they were trying to set a new record. They wanted to reduce the journey time by almost a day as taken normally by other liners.\n\nThe ocean was unusually calm that night making it difficult to spot an iceberg from the crow\u2019s nest of the *Titanic*. In addition, crow\u2019s nest\u2019s binoculars were missing. At approximately 11:40 PM, a huge iceberg was sighted and the bridge was notified. The *Titanic* began to turn but it was too close to avoid the collision. The vessel\u2019s starboard side scraped along the iceberg. At least five of its supposedly watertight compartments toward the bow were ruptured. After assessing the damage, it took seconds to realize that the unsinkable giant was going to sink. The crew started sending the distress signals. The vessels who received the signals were at least 100 miles from the ship, which would have taken a minimum of three hours to reach the Titanic. As attempts were made to contact nearby vessels, the lifeboats began to be launched. Women and children were sent first which is quite evident by the below graph of passengers survived vs dead (click on the pie chart in order to explore more).","9a6d1bf1":"The graph above clearly suggests that majority of the class-1 and class-2 passengers embarked from either Cherbourg or Southampton. The passengers who embarked from Queenstown mostly had class-3 tickets. Also, the lion's share of passengers on the ship embarked from Southampton.\n\nAs *Titanic* was one of the largest and most opulent ships of that period, let\u2019s take a glance at the fare of tickets.","94677590":"It is possible that the percentage of survived single passengers on the ship was greater than the percentage of passengers who were with family. A family is more likely to survive or die together. Also, a smaller family is more likely to survive. \n\nAs the percentage of women survived was way greater than men, did the survival also depend upon gender? Did the fare paid by passengers play a key role in the survival? Did all the babies survive? Did the size of the family affect survival? We will try to answer all these questions after we predict survival of the passengers present in test dataset. Will come back to you soon ! ","dc740fb8":"The incident caused a huge loss of life. Many family members had to board the lifeboats leaving their loved ones behind. Some were unable to do so and many families vanished. Below is a chart showing the stats for the passengers those were travelling with family versus those who were travelling alone.","851fd1e1":"The vessel carried around 2200 people, including crew members, of which approximately 1300 were passengers for New York. Using the data provided, below is a graph showcasing the distribution of passengers embarked from each port and the revenue collected from the respective ports. Hover on the graphs for more information.","86c9c75a":"On April 10, 1912, the *Titanic* raised anchor for her maiden voyage, a trip from Britain to America. The route was to be Southampton(England) - Cherbourg(France) - Queenstown(now Cobh in Ireland) - New York(USA). Below is a map plot showing the same.","3acf83a7":"**\"Every data has a story to tell. The numbers rely on you to give the story a clear and convincing voice\"** - Stephen Few. \n\nIn this notebook, we have tried to illustarate the story of the *Titanic*, along with statistical graphs, using the data provided by **Kaggle** competition - \"*Titanic: Machine Learning From Disaster*\". We have plotted interactive graphs using ***plotly*** for showing the facts and figures. \n\n*Please upvote if you find it interesting.*","0f37b808":"# **Visual Data Story of the Titanic**"}}