{"cell_type":{"f7087b6d":"code","6af38c39":"code","c3d26f42":"code","155b428d":"code","af3d4271":"code","cc6d6d97":"code","a0c26fd1":"code","e960614b":"code","edbb640b":"code","e1c50c32":"code","35e11403":"code","9b4ea434":"code","64c5d7cd":"code","8cc88006":"markdown","db15fb44":"markdown"},"source":{"f7087b6d":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport pandas as pd\nimport matplotlib\nmatplotlib.use(u'nbAgg')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom sklearn.manifold import TSNE\nfrom sklearn import preprocessing\nfrom tqdm import tqdm","6af38c39":"asm_reduced_final = pd.read_csv(\"..\/input\/asm_reduced_final.csv\")\nasm_reduced_final.head()","c3d26f42":"labels = pd.read_csv(\"..\/input\/trainLabels.csv\")","155b428d":"asm_data = asm_reduced_final.merge(labels, on = \"Id\")\nasm_data.head()","af3d4271":"asm_y = asm_data[\"Class\"]\nasm_x = asm_data.drop(\"Class\", axis=1)","cc6d6d97":"#Let's normalize the data.\ndef normalize(dataframe):\n    #print(\"Here\")\n    test = dataframe.copy()\n    for col in tqdm(test.columns):\n        if(col != \"Id\" and col !=\"Class\"):\n            max_val = max(dataframe[col])\n            min_val = min(dataframe[col])\n            test[col] = (dataframe[col] - min_val) \/ (max_val-min_val)\n    return test","a0c26fd1":"asm_x = normalize(asm_x)","e960614b":"xtsne=TSNE(perplexity=30)\nresults=xtsne.fit_transform(asm_x.drop(['Id'], axis=1))\nvis_x = results[:, 0]\nvis_y = results[:, 1]\nplt.scatter(vis_x, vis_y, c=asm_y, cmap=plt.cm.get_cmap(\"jet\", 9))\nplt.colorbar(ticks=range(10))\nplt.clim(0.5, 9)\nplt.show()","edbb640b":"data_asm_byte_final = pd.read_csv(\"..\/input\/data_asm_byte_final.csv\", index_col = 0)\ndata_asm_byte_final.head()","e1c50c32":"asm_byte_y = data_asm_byte_final[\"Class\"]\nasm_byte_x = data_asm_byte_final.drop(\"Class\", axis=1)","35e11403":"#Let's normalize the data.\ndef normalize(dataframe):\n    #print(\"Here\")\n    test = dataframe.copy()\n    for col in tqdm(test.columns):\n        if(col != \"Id\" and col !=\"Class\"):\n            max_val = max(dataframe[col])\n            min_val = min(dataframe[col])\n            test[col] = (dataframe[col] - min_val) \/ (max_val-min_val)\n    return test","9b4ea434":"asm_byte_x = normalize(asm_byte_x)","64c5d7cd":"xtsne=TSNE(perplexity=30)\nresults=xtsne.fit_transform(asm_byte_x.drop(['Id'], axis=1))\nvis_x = results[:, 0]\nvis_y = results[:, 1]\nplt.scatter(vis_x, vis_y, c=asm_byte_y, cmap=plt.cm.get_cmap(\"jet\", 9))\nplt.colorbar(ticks=range(10))\nplt.clim(0.5, 9)\nplt.show()","8cc88006":"# TSNE on asm_reduced_final","db15fb44":"# TSNE on data_asm_byte_final"}}