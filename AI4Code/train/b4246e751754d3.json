{"cell_type":{"c547f6bb":"code","fbbc59b1":"code","fef49b37":"code","7273c917":"code","bd320fad":"code","63c689d7":"code","1a8698eb":"code","2b586b1d":"code","5256b96c":"code","a7429c2a":"code","46325b69":"code","693c80d1":"code","e3198c36":"code","73befe08":"code","64fd6ed8":"code","191b7604":"code","0c416dac":"code","e1d0a47b":"code","1f22837f":"code","4f4b4f94":"code","4e0699a0":"code","52418100":"code","2b43b94f":"code","8e58716c":"code","00d49618":"code","33f02709":"code","fc7339e8":"code","d9ab9eb2":"code","eef57a8f":"code","14214a1f":"code","a2859662":"code","6f8329e1":"code","012ddd2a":"code","2059c20f":"code","4087a7e2":"code","9a35be65":"code","b1dbf49d":"code","f7d12777":"code","80187166":"code","9b97b66c":"code","25222f58":"code","6396e643":"code","c448fc44":"code","af3d1e41":"code","ec08b6e2":"code","5f82c20f":"code","b6928e37":"code","fc77e145":"code","c49d57db":"code","bfc26043":"code","46321e40":"code","16ea0c0a":"code","4a88da03":"code","2f554979":"code","8cf27f9f":"code","15fb230d":"code","a32fadf8":"code","d0cf5ad0":"code","27b7eb62":"code","a4b4b17e":"code","ec927d2a":"code","046fda8a":"code","38c49885":"code","4789d695":"code","73b9a743":"code","1ef776cc":"code","16102d79":"code","46f07928":"code","6aa44bfa":"code","9d684648":"code","38f2f0c6":"code","912183d9":"code","22dbd912":"code","48837291":"markdown","183b308a":"markdown","c3526389":"markdown","c97250df":"markdown","76af7522":"markdown","49edf1df":"markdown","bd1faa97":"markdown","fe11ded2":"markdown","647b574e":"markdown","8f3aa97b":"markdown"},"source":{"c547f6bb":"import pandas as pd\nimport numpy as np\nimport plotly.io as pio\npio.renderers.default = \"kaggle\"","fbbc59b1":"!pip install plotly\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly\nplotly.offline.init_notebook_mode (connected = True)","fef49b37":"dataset = pd.read_csv('..\/input\/stack-overflow-annual-developer-survey\/survey_results_public.csv')","7273c917":"dataset.head()","bd320fad":"dataset.isnull().sum()","63c689d7":"fig = px.pie(dataset, values=dataset['Gender'].value_counts().unique() , names=dataset['Gender'].value_counts().index,title = 'gender variation among developers in 2020')\nfig.show()","1a8698eb":"print(dataset['LanguageWorkedWith'])","2b586b1d":"lang_data = dataset['LanguageWorkedWith'].dropna()","5256b96c":"data = {}\nfor row in lang_data:\n    for lang in row.split(sep = \";\"):\n        if lang not in data.keys():\n            data[lang] = 1\n        else:\n            data[lang] = data[lang]+1\nprint(data)\n    ","a7429c2a":"datFrame_lang = pd.DataFrame(data.items(), columns =['language', 'counts'] )","46325b69":"fig = px.bar(datFrame_lang, x=datFrame_lang.index, y=\"counts\",color=\"language\",height = 700,\n                 hover_name=\"language\", title = \"languages most people know in 2020\")\nfig.show()","693c80d1":"langD_data = dataset['LanguageDesireNextYear'].dropna()","e3198c36":"data_lang_D = {}\nfor row in langD_data:\n    for lang in row.split(sep = \";\"):\n        if lang not in data_lang_D.keys():\n            data_lang_D[lang] = 1\n        else:\n            data_lang_D[lang] = data_lang_D[lang]+1\nprint(data_lang_D)  ","73befe08":"datFrame_langD = pd.DataFrame(data_lang_D.items(),columns = ['language', 'counts'])","64fd6ed8":"fig = px.bar(datFrame_langD, x = datFrame_langD.index, y ='counts',color = 'language',height = 700,hover_name = 'language',title = \"Languages people desire to learn in 2020\" )\nfig.show()","191b7604":"dataset['JobSat'].isnull().sum()\/len(dataset['JobSat'])","0c416dac":"data_jobsat = dataset['JobSat'].dropna()","e1d0a47b":"data_jobsat.value_counts()","1f22837f":"fig = px.bar(data_jobsat, x = data_jobsat.unique(), y = data_jobsat.value_counts().unique(), height=700,color = data_jobsat.unique(),title = 'Satisfaction of people with their job in 2020')\nfig.show()","4f4b4f94":"data_welcome = dataset['WelcomeChange'].dropna()","4e0699a0":"data_welcome.value_counts()","52418100":"fig = px.bar(data_welcome, x = data_welcome.unique(), y = data_welcome.value_counts().unique(), height=700,color = data_welcome.unique(),title = 'Satisfaction of people with Stackoverflow compared to 2019')\nfig.show()","2b43b94f":"dataset['Age1stCode'].isnull().sum()\/len(dataset['Age1stCode'])","8e58716c":"parallel_dataframe = pd.concat([dataset['Gender'],dataset['Country'],dataset['Hobbyist'],dataset['Age']],axis = 1)","00d49618":"parallel_dataframe_clean = parallel_dataframe.dropna()","33f02709":"parallel_dataframe_clean","fc7339e8":"fig = px.parallel_categories(parallel_dataframe_clean, title = 'hobbyist based on gender')\n\nfig.show()","d9ab9eb2":"fig = px.sunburst(parallel_dataframe_clean, path=['Hobbyist', 'Gender', 'Country'], values='Age',title = \"Hobbyist classification to gender and country\")\nfig.show()","eef57a8f":"data_comp_skill_exp = pd.concat([dataset['ConvertedComp'],dataset['DevType'],dataset['YearsCodePro'],dataset['Age']], axis = 1)","14214a1f":"data_comp_skill_exp_clean = data_comp_skill_exp.dropna()","a2859662":"print(len(data_comp_skill_exp), len(data_comp_skill_exp_clean))","6f8329e1":"skill_list = []\nmax_var = 0\nfor row in data_comp_skill_exp_clean['DevType']:\n        if len(row.split(sep = ';')) > max_var:\n            max_var = len(row.split(sep = \";\"))\n            print(row,\"\\n\")\nprint(max_var)","012ddd2a":"data_comp_skill_exp_clean['DevType'].iloc[[0]].to_list()[0].split(sep=\";\")[0]","2059c20f":"data_skill_c = {}\nfor row in data_comp_skill_exp_clean['DevType']:\n    for skill in row.split(sep = \";\"):\n        if skill not in data_skill_c.keys():\n            data_skill_c[skill] = 1\n        else:\n            data_skill_c[skill] = data_skill_c[skill]+1","4087a7e2":"data_skills_sum = pd.DataFrame(data_skill_c.items(),columns = ['skill', 'count'])","9a35be65":"fig = px.bar(data_skills_sum, x = 'skill', y = 'count', color = 'skill',title = 'Popular jobs among developers in 2020',height = 1000)\nfig.show()","b1dbf49d":"priority_skills = sorted(data_skill_c, key = lambda x: x[1],reverse = True)[:10]","f7d12777":"skill_list_total = []\nfor row in data_comp_skill_exp_clean['DevType']:\n    skill_list = row.split(sep= ';')\n    skills_priority = [skills for skills in skill_list if skills in priority_skills]\n    if not skills_priority:\n        skills_priority = skill_list[0]\n    else:\n        skills_priority = skills_priority[0]\n    skill_list_total.append(skills_priority)","80187166":"data_skill = pd.DataFrame(skill_list_total, columns = ['skills'])","9b97b66c":"data_comp_skill_exp_clean = data_comp_skill_exp_clean.reset_index().drop(['index'],axis = 1)","25222f58":"data_comp_skill_exp_clean = pd.concat([data_comp_skill_exp_clean,data_skill],axis = 1)","6396e643":"data_comp_skill_exp_clean['YearsCodePro'] = data_comp_skill_exp_clean['YearsCodePro'].replace(to_replace = 'Less than 1 year',value = 0)","c448fc44":"data_comp_skill_exp_clean=data_comp_skill_exp_clean.drop(['DevType'],axis = 1)","af3d1e41":"data_comp_skill_exp_clean['YearsCodePro'] = data_comp_skill_exp_clean['YearsCodePro'].replace(to_replace = 'More than 50 years',value = 50)","ec08b6e2":"data_comp_skill_exp_clean['YearsCodePro'] = data_comp_skill_exp_clean['YearsCodePro'].astype('float32')","5f82c20f":"data_comp_skill_exp_clean['Age'] = data_comp_skill_exp_clean['Age'].replace(to_replace = 279,value = 27)","b6928e37":"fig = px.scatter_3d(data_comp_skill_exp_clean, x='ConvertedComp', y='YearsCodePro', z='Age',height = 700,\n              color='skills')\nfig.show()","fc77e145":"fig = px.parallel_coordinates(data_comp_skill_exp_clean,dimensions=['ConvertedComp', 'Age', 'YearsCodePro'],\n                              color_continuous_scale=px.colors.diverging.Tealrose,\n                              color_continuous_midpoint=1)\nfig.show()","c49d57db":"fig = px.scatter(data_comp_skill_exp_clean, y = 'ConvertedComp',x = 'YearsCodePro',opacity = 0.65, trendline = 'ols',trendline_color_override='red')\nfig.show()","bfc26043":"data_skill_priority = pd.DataFrame([row for row in data_comp_skill_exp_clean.values if row[3] in priority_skills],columns = ['ConvertedComp','YearsCodePro','Age','skills'])","46321e40":"data_skill_priority","16ea0c0a":"fig = px.scatter(data_skill_priority, x = 'YearsCodePro', y= 'ConvertedComp', color = 'skills',title = 'salary Vs experience with top ten skills')\nfig.show()","4a88da03":"from sklearn.preprocessing import OneHotEncoder \nfrom sklearn.compose import ColumnTransformer","2f554979":"data_comp_skill_exp_clean","8cf27f9f":"x = data_comp_skill_exp_clean.iloc[:,3:].values\ny = data_comp_skill_exp_clean.iloc[:,0].values","15fb230d":"trans = ColumnTransformer(\n    transformers=[\n            (\"state\",\n             OneHotEncoder(),\n             [0])                \n            ],remainder = 'passthrough'\n    )\n\nx_encoded = trans.fit_transform(x).toarray()[:,1:]","a32fadf8":"x_encoded","d0cf5ad0":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x_encoded,y,test_size = 0.2,random_state = 177013)","27b7eb62":"from sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\nx_train = sc_x.fit_transform(x_train)\nx_test = sc_x.transform(x_test)\nsc_y = StandardScaler()\ny_train_fea = sc_y.fit_transform(y_train.reshape(-1,1))","a4b4b17e":"y_test_fea = sc_y.transform(y_test.reshape(-1,1))","ec927d2a":"from sklearn.linear_model import LinearRegression","046fda8a":"LR = LinearRegression()\nLR.fit(x_train,y_train_fea)\ny_pred_LR = LR.predict(x_test)","38c49885":"from sklearn.metrics import r2_score\nr2_score(y_test,y_pred_LR)","4789d695":"from sklearn.tree import DecisionTreeRegressor\nDTR = DecisionTreeRegressor(random_state = 0)\nDTR.fit(x_train, y_train_fea)\ny_pred_DTR = DTR.predict(x_test)\nr2_score(y_test,y_pred_DTR)","73b9a743":"from sklearn.ensemble import RandomForestRegressor\nRTR = RandomForestRegressor(n_estimators = 1000, random_state = 177013)\nRTR.fit(x_train, y_train_fea)\ny_pred_RTR = RTR.predict(x_test)\nr2_score(y_test_fea,y_pred_RTR)","1ef776cc":"from sklearn.svm import SVR\nSVR_ = SVR(kernel = 'rbf')\nSVR_.fit(x_train, y_train_fea)\ny_pred_SVR = SVR_.predict(x_test)\nr2_score(y_test_fea,y_pred_SVR)","16102d79":"!pip install xgboost","46f07928":"import xgboost as xg \nxgb_r = xg.XGBRegressor(objective ='reg:squarederror',n_estimators = 500, seed = 177013)\nxgb_r.fit(x_train,y_train_fea)\ny_pred_XGB = xgb_r.predict(x_test)\nr2_score(y_test_fea,y_pred_XGB)","6aa44bfa":"dataset['EdLevel'].value_counts().index","9d684648":"fig = px.bar(x = dataset['EdLevel'].value_counts().index ,y = dataset['EdLevel'].value_counts().unique(),height = 600,\n       color = dataset['EdLevel'].value_counts().index,title = 'education level among developers in 2020')\nfig.show()","38f2f0c6":"data_em = dataset['Employment'].dropna()","912183d9":"fig = px.bar(x = data_em.value_counts().index ,y = data_em.value_counts().unique(),height = 600,\n       color = data_em.value_counts().index,title = 'Job type among developers in 2020')\nfig.show()","22dbd912":"fig = px.bar(x = dataset['UndergradMajor'].value_counts().index ,y = dataset['UndergradMajor'].value_counts().unique(),height = 800,\n       color = dataset['UndergradMajor'].value_counts().index,title = 'Undergrad major among developers in 2020')\nfig.show()","48837291":"### RandomForestRegressor","183b308a":"### XG boost?","c3526389":"### model fits and handling categorical values","c97250df":"### linear regression","76af7522":"# STACKOVERFLOW survey 2020 analysis","49edf1df":"###  STACKOVERFLOW survey set 2020","bd1faa97":"## relation b\/w salary,experience and skills","fe11ded2":"### DecisionTreeRegressor","647b574e":"### SupportVectorRegression","8f3aa97b":"#####  salary does not trend with experience!"}}