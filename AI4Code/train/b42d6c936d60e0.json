{"cell_type":{"eb0d346d":"code","1efd3b20":"code","12e26489":"code","8a69a915":"code","b339a1e8":"code","b7b72c01":"code","f219a954":"code","6e1e3c51":"code","df987d62":"code","28bde613":"code","0bab6c16":"markdown","84fbcb95":"markdown","9a0e651b":"markdown","5c483424":"markdown"},"source":{"eb0d346d":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv',index_col=0)\ntest= pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv',index_col=0)","1efd3b20":"train.head(2)","12e26489":"test.head(2)","8a69a915":"train.info()","b339a1e8":"#\u53bb\u9664\u8bad\u7ec3\u96c6\u7f3a\u5931\u8fc7\u591a\u7684\u7279\u5f81\nTrain = train.dropna(thresh=1000,axis=1)\n\n#\u53bb\u9664\u91cd\u590d\u503c\nTrain = Train.drop_duplicates()\nTrain.info()","b7b72c01":"#\u5904\u7406\u6d4b\u8bd5\u96c6\nTest = test[Train.columns[:-1]]\nTest.info()","f219a954":"#\u5229\u7528\u6807\u7b7e\u7f16\u7801\u5c06\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684object\u5bf9\u8c61\u8f6c\u5316\u4e3a\u6570\u503c\u7c7b\u578b,\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.preprocessing import LabelEncoder\nlabel_encoder = LabelEncoder()\n\nfeature_all = pd.concat([Train.drop('SalePrice',axis=1),Test])\nfor i in feature_all.columns:\n    #\u7f3a\u5931\u503c\u7528\u4f17\u6570\u586b\u5145\n    feature_all[i].fillna(np.argmax(feature_all[i].value_counts()),inplace=True)\n    if feature_all[i].dtype == 'object':\n        feature_all[i] = pd.Series(label_encoder.fit_transform(feature_all[i].astype(str)),index=feature_all.index)","6e1e3c51":"x_train_all = feature_all.iloc[:Train.shape[0]]\nx_test = Train[['SalePrice']]\ny_train_all = feature_all.iloc[Train.shape[0]:]\nTrain.shape,x_train_all.shape,x_test.shape,Test.shape,y_train_all.shape","df987d62":"# from sklearn.model_selection import StratifiedKFold,GridSearchCV,cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor()\nrfr.fit(x_train_all,x_test)\nrfr.score(x_train_all,x_test)","28bde613":"SalePrice = rfr.predict(y_train_all)\ndf = pd.DataFrame({'Id':test.index,'SalePrice':SalePrice})\ndf.to_csv('submission.csv',index=False)\ndf.head()","0bab6c16":"\u7b2c\u4e00\u6b65\uff1a\u52a0\u8f7d\u6570\u636e","84fbcb95":"\u7b2c\u4e09\u6b65\uff1a\u6570\u636e\u5efa\u6a21","9a0e651b":"\u7b2c\u4e8c\u6b65\uff1a\u6570\u636e\u6e05\u7406","5c483424":"\u968f\u673a\u68ee\u6797\u56de\u5f52\u6a21\u578b"}}