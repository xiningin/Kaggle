{"cell_type":{"528db175":"code","fecefa80":"code","394a70e2":"code","3aa240e6":"code","050b79e1":"code","b264b02c":"code","34d5d08b":"code","a1aa60f1":"code","d4bdb4ec":"code","ea29dade":"code","8fa10cfa":"code","d88f8a37":"code","eafe3736":"code","42eb1f67":"code","f50fc52b":"code","2b296e87":"code","29be25a0":"code","7f68dc72":"code","4cd58e8a":"code","5d813087":"code","d9bca9ef":"code","4617b2e8":"code","c53880d2":"code","973a1177":"code","294f14ad":"code","061fe33e":"code","86822738":"code","431d663e":"code","0fa138f6":"code","ec6fa52a":"code","2b4d74d2":"code","ae00d9c9":"code","762229f4":"code","30917577":"code","18efdf64":"code","c8a33a88":"code","33a64027":"markdown","3c0cc49f":"markdown","8ec50f17":"markdown","30538711":"markdown","a7bf6846":"markdown","361d0c95":"markdown","2ba99183":"markdown","d070446f":"markdown","4cfa87df":"markdown","dbaddc30":"markdown","b9aab4c4":"markdown","031b833c":"markdown","06bb49e5":"markdown","e67892b1":"markdown","a742680a":"markdown","5c21b93e":"markdown","27092ac6":"markdown","75f33160":"markdown","cd953b8a":"markdown","cb4c8b02":"markdown","f194fd6e":"markdown"},"source":{"528db175":"import numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","fecefa80":"pd.read_excel('\/kaggle\/input\/healthcare-analytics\/Train\/Data_Dictionary.xlsx')","394a70e2":"patient_profiles=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/Patient_Profile.csv')\npatient_profiles=patient_profiles.dropna()\npatient_profiles.head()\npatient_profiles.info()","3aa240e6":"patient_profiles.head()","050b79e1":"plt.figure(figsize=(20,6))\nsns.countplot(patient_profiles.sort_values('Age').Age)","b264b02c":"sns.countplot(patient_profiles.sort_values('City_Type').City_Type)","34d5d08b":"first_camp=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/First_Health_Camp_Attended.csv')\nfirst_camp=first_camp.iloc[:,:4]\nfirst_camp=first_camp.dropna()\nfirst_camp.head()","a1aa60f1":"first_camp.info()","d4bdb4ec":"first_camp.corr()","ea29dade":"plt.scatter(first_camp['Donation'],first_camp['Health_Score'],color='red')\nplt.xlabel('Donation',fontsize=10)\nplt.ylabel('Health_Score',fontsize=10)","8fa10cfa":"second_camp=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/Second_Health_Camp_Attended.csv')\nsecond_camp=second_camp.dropna()\nsecond_camp.head()","d88f8a37":"sns.distplot(second_camp['Health Score'])","eafe3736":"third_camp=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/Third_Health_Camp_Attended.csv')\nthird_camp=third_camp.dropna()\nthird_camp.head()","42eb1f67":"train=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/Train.csv')\ntrain=train.dropna()\ntrain.head()","f50fc52b":"merged=pd.merge(patient_profiles,first_camp,how='inner',on='Patient_ID').set_index('Health_Camp_ID')\nmerged['City_Type']=merged['City_Type'].replace({'D':4,'A':1,'B':2,'C':3,'E':5,'F':6,'G':7,'H':8,'I':9})\nmerged['Employer_Category']=merged['Employer_Category'].replace({'BFSI':0,'Technology':1, 'Education':2, 'Consulting':3, 'Manufacturing':4,\n       'Software Industry':5, 'Others':6, 'Health':7, 'Retail':8, 'Transport':9,\n       'Broadcasting':10, 'Food':11, 'Telecom':12, 'Real Estate':13})\nmerged=merged.drop(merged.iloc[:,1:5],axis=1) \nmerged=merged[(merged['Income']!='None')&(merged['Age']!='None')&(merged['Education_Score']!='None')]\nmerged['Income']=merged['Income'].astype('float')\nmerged['Age']=merged['Age'].astype('float')\nmerged['Education_Score']=merged['Education_Score'].astype('float')\nmerged.head()\n","2b296e87":"def Agegroup(x):\n    if x<=35:\n        return 'Young Group'\n    if x<=50:\n        return 'Adult Group'\n    if x>50:\n        return 'Old Group'\nmerged['Age_Group']=merged['Age'].apply(Agegroup)\nmerged.head()","29be25a0":"merged.info()","7f68dc72":"merged.corr()","4cd58e8a":"sns.barplot(x='Age_Group',y='Health_Score',data=merged,estimator=np.median)\nplt.title('Comparision of Health Score and the Age_Group')","5d813087":"Train=pd.merge(train,merged,how='inner',on='Patient_ID')\nTrain=Train.drop(['Registration_Date','First_Interaction','Health_Camp_ID'],axis=1)\nTrain=Train.drop_duplicates()\ngrouped=Train.groupby(['Patient_ID'])['Var1','Var2','Var3','Var4','Var5','Income','Education_Score','Age','City_Type','Employer_Category','Donation','Health_Score'].mean()\ngrouped.head()","d9bca9ef":"grouped['Prediction']=np.where(grouped['Health_Score']>0.55,1,0)\ngrouped.head()","4617b2e8":"grouped['Range_for_Health_Score']=pd.cut(grouped.Health_Score,bins=10)\ngrouped.head()","c53880d2":"sns.countplot(grouped.sort_values('Range_for_Health_Score').Range_for_Health_Score)\nplt.xticks(rotation=90)","973a1177":"Group=grouped.reset_index()\nMerge=pd.merge(grouped,third_camp,how='inner',on='Patient_ID')\nMerge=Merge.drop(['Health_Camp_ID'],axis=1)\nMerge=Merge.drop_duplicates()\nMerge.head()","294f14ad":"Merge.corr()","061fe33e":"plt.figure(figsize=(7,7))\nsns.heatmap(Merge.corr(),vmin=-1,vmax=1,cmap=sns.diverging_palette(20,220,n=200))","86822738":"sns.pairplot(data=Merge,x_vars=['Health_Score'],y_vars=['Var1','Var2','Var5','City_Type','Age','Donation','Income'],hue='Range_for_Health_Score')","431d663e":"sns.barplot(x='Number_of_stall_visited',y='Last_Stall_Visited_Number',data=Merge,estimator=np.median)","0fa138f6":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nx=Merge[['Var1','Var2','Var5','City_Type','Age','Donation','Income','Number_of_stall_visited','Last_Stall_Visited_Number']]\ny=Merge[['Prediction']]\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)","ec6fa52a":"lr=LogisticRegression(solver='newton-cg',C=10,fit_intercept=True,intercept_scaling=10,dual=False,penalty='l2').fit(x_train,y_train)\npred=lr.predict(x_test)","2b4d74d2":"classification=metrics.classification_report(\n    digits=4,\n    y_true=y_test,\n    y_pred=pred)\nprint(classification)","ae00d9c9":"y_score_lr = lr.fit(x_train, y_train).decision_function(x_test)\nfpr_lr, tpr_lr, _ = metrics.roc_curve(y_test, y_score_lr)\nroc_auc_lr = metrics.auc(fpr_lr, tpr_lr)\nplt.figure(figsize=(10,10))\nplt.xlim([-0.01, 1.00])\nplt.ylim([-0.01, 1.01])\nplt.plot(fpr_lr, tpr_lr, lw=3, label='Area under ROC curve (area = {:0.2f})'.format(roc_auc_lr))\nplt.xlabel('False Positive Rate', fontsize=16)\nplt.ylabel('True Positive Rate', fontsize=16)\nplt.title('ROC curve', fontsize=16)\nplt.legend(loc='lower right', fontsize=13)\nplt.plot([0, 1], [0, 1], color='red', lw=3, linestyle='dashdot')\nplt.axes().set_aspect('equal')\nplt.show()","762229f4":"test=pd.read_csv('\/kaggle\/input\/healthcare-analytics\/Train\/test.csv')\ntest=test.dropna()\ntest.head()","30917577":"Test=pd.merge(test,merged,how='inner',on='Patient_ID')\nTest=Test.drop(['Registration_Date','First_Interaction','Health_Camp_ID'],axis=1)\nTest=Test.drop_duplicates()\ngroup_test=Test.groupby(['Patient_ID'])['Var1','Var2','Var5','Income','Age','City_Type','Donation'].mean()\ngroup_test=group_test.reset_index()\ngrouped_test=pd.merge(group_test,third_camp,how='inner',on='Patient_ID')\ngrouped_test=grouped_test.drop(['Health_Camp_ID'],axis=1)\ngrouped_test=grouped_test.drop_duplicates()\ngrouped_test.head()","18efdf64":"X=grouped_test[['Var1','Var2','Var5','Income','Age','City_Type','Donation','Number_of_stall_visited','Last_Stall_Visited_Number']]\ntest_predict=lr.predict(X)","c8a33a88":"df=pd.DataFrame(test_predict,columns=['Prediction'],index=grouped_test['Patient_ID'])\ntest_merge=pd.merge(grouped_test,df,how='inner',on='Patient_ID').drop_duplicates()\ntest_merge.head()","33a64027":"Merging again with the third camp dataframe","3c0cc49f":"![image.png](attachment:image.png)","8ec50f17":"Third Camp","30538711":"**People of Age group of 39-45 were the more ones to the health camps**","a7bf6846":"Details about First Camp Held","361d0c95":"**Shows all the Vars are  highly correlated to each other","2ba99183":"Merging Patient proflies and first Camp DataFrames","d070446f":"Show count of people in different Health_Score Range","4cfa87df":"Patient Profile","dbaddc30":"Working On HealthAnalytic Dataset","b9aab4c4":"**This Shows a good relation of Donation And Health Score**","031b833c":"Checking on Test Set","06bb49e5":"Creating column called prediction with Health Score >0.55 as 1 and less than it to 0","e67892b1":"Creating Age Groups","a742680a":"Training Set","5c21b93e":"**Variable Features of the datasets to be represented below**","27092ac6":"More Dominant features towrads good health Score are Donation,Age","75f33160":"Model Preparation","cd953b8a":"Details about the Second camp Held","cb4c8b02":"Merging Training Set with Above merged dataframes","f194fd6e":"Shows range of (0.41-0.5) for Health_Score is the most one"}}