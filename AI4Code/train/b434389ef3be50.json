{"cell_type":{"5ae42127":"code","4347ec87":"code","0441c054":"code","0f67920e":"code","c5c874f5":"code","b6f205e5":"code","7d30b505":"code","44322223":"code","76e44990":"code","2ae2b663":"code","89f33e04":"code","3b42e261":"code","9b0ccb3b":"code","70ec7a95":"code","a2849609":"code","e833bab4":"code","59956f0b":"code","04d7310f":"code","3c18db3a":"code","1f4d2875":"code","e3d5dc34":"code","48a86c91":"code","accd7f81":"code","6a9c4462":"code","ecca95d2":"code","a0e21634":"code","bb732ab7":"code","9303f5ba":"code","1fff79b5":"code","7a544541":"code","2d57e053":"code","a67fcbc1":"code","f0d19e41":"code","d4dff993":"code","0cc4539d":"code","4014c23c":"code","fc70befc":"code","3ae7de94":"code","3acc366b":"code","e0ea3777":"code","d16bc92a":"code","caa7b78f":"code","1b722a9e":"code","73b08a94":"code","04767379":"code","6a9dee9a":"code","88ce9791":"code","cbe4a7be":"code","5436d673":"code","3c9034c9":"code","edab1d47":"code","2762daad":"code","1a253027":"code","863ee3f5":"code","9aee6093":"markdown","3b23353f":"markdown","b7e63c8d":"markdown","0728ea6b":"markdown","03ce5469":"markdown","5afad07c":"markdown","bd4efefc":"markdown","1eb562d0":"markdown","1e1d8dfc":"markdown","4ae72a8e":"markdown","aa38dfb1":"markdown","dc27d538":"markdown","5702b74c":"markdown"},"source":{"5ae42127":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nsns.set_style('whitegrid')\nwarnings.filterwarnings('ignore')","4347ec87":"df = pd.read_csv('..\/input\/bigmart-sales-data\/Train.csv')\ndf.head()","0441c054":"df.shape","0f67920e":"df.info()","c5c874f5":"# checking for missing values\ndf.isnull().sum()","b6f205e5":"df['Item_Weight'].mean()","7d30b505":"# filling missing values in \"Item-Weight\" with MEAN VALUE\ndf['Item_Weight'].fillna(df['Item_Weight'].mean(), inplace=True)","44322223":"# Mode of \"Outlet_Size\" column\ndf['Outlet_Size'].mode()","76e44990":"# filling the missing values in \"Outlet_Size\" column with Mode\nmode_of_Outlet_size = df.pivot_table(values='Outlet_Size', columns='Outlet_Type', aggfunc=(lambda x: x.mode()[0]))","2ae2b663":"print(mode_of_Outlet_size)","89f33e04":"miss_values = df['Outlet_Size'].isnull()","3b42e261":"print(miss_values)","9b0ccb3b":"df.loc[miss_values, 'Outlet_Size'] = df.loc[miss_values, 'Outlet_Type'].apply(lambda x:mode_of_Outlet_size[x])","70ec7a95":"#checking for missing values\ndf.isnull().sum()","a2849609":"df.describe()","e833bab4":"# Item_Weight distribution\nplt.figure(figsize=(6,6))\nsns.distplot(df['Item_Weight'])\nplt.show()","59956f0b":"# Item Visibility distribution\nplt.figure(figsize=(6,6))\nsns.distplot(df['Item_Visibility'])\nplt.show()","04d7310f":"# Item MRP distribution\nplt.figure(figsize=(6,6))\nsns.distplot(df['Item_MRP'])\nplt.show()","3c18db3a":"# Item_Outlet_Sales distribution\nplt.figure(figsize=(6,6))\nsns.distplot(df['Item_Outlet_Sales'])\nplt.show()","1f4d2875":"# Outlet_Establishment_Year column\nplt.figure(figsize=(6,6))\nsns.countplot(x='Outlet_Establishment_Year', data=df)\nplt.show()","e3d5dc34":"# Item_Fat_Content column\nplt.figure(figsize=(6,6))\nsns.countplot(x='Item_Fat_Content', data=df)\nplt.show()","48a86c91":"# Item_Type column\nplt.figure(figsize=(30,6))\nsns.countplot(x='Item_Type', data=df)\nplt.show()","accd7f81":"# Outlet_Size column\nplt.figure(figsize=(6,6))\nsns.countplot(x='Outlet_Size', data=df)\nplt.show()","6a9c4462":"df.head()","ecca95d2":"df['Item_Fat_Content'].value_counts()","a0e21634":"df.replace({'Item_Fat_Content':{'low fat':'Low Fat', 'LF':'Low Fat', 'reg':'Regular'}},inplace=True)","bb732ab7":"df['Item_Fat_Content'].value_counts()","9303f5ba":"from sklearn.preprocessing import LabelEncoder","1fff79b5":"encoder = LabelEncoder()","7a544541":"df['Item_Identifier'] = encoder.fit_transform(df['Item_Identifier'])\n\ndf['Item_Fat_Content'] = encoder.fit_transform(df['Item_Fat_Content'])\n\ndf['Item_Type'] = encoder.fit_transform(df['Item_Type'])\n\ndf['Outlet_Identifier'] = encoder.fit_transform(df['Outlet_Identifier'])\n\ndf['Outlet_Size'] = encoder.fit_transform(df['Outlet_Size'])\n\ndf['Outlet_Location_Type'] = encoder.fit_transform(df['Outlet_Location_Type'])\n\ndf['Outlet_Type'] = encoder.fit_transform(df['Outlet_Type'])","2d57e053":"df.head()","a67fcbc1":"X = df.iloc[:,:-1].values\ny = df.iloc[:,-1].values","f0d19e41":"print(X)","d4dff993":"print(y)","0cc4539d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=0)","4014c23c":"print(X.shape, X_train.shape, X_test.shape)","fc70befc":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","3ae7de94":"model = Sequential()\n\nmodel.add(Dense(20, activation='relu'))\nmodel.add(Dense(10, activation='relu'))\nmodel.add(Dense(5, activation='relu'))\n\nmodel.add(Dense(1)) # output layer\n\nmodel.compile(optimizer='rmsprop', loss='mse')","3acc366b":"model.fit(x = X_train, y = y_train, epochs=50)","e0ea3777":"model.summary()","d16bc92a":"loss_df = pd.DataFrame(model.history.history)","caa7b78f":"loss_df","1b722a9e":"loss_df.plot()","73b08a94":"# Model evaluation on test data\ntest_eval = model.evaluate(X_test, y_test, verbose=0)\nprint(test_eval)","04767379":"# model evaluation on train set\ntrain_eval = model.evaluate(X_train, y_train, verbose=0)\nprint(train_eval)","6a9dee9a":"# Checking difference between train_eval and test_eval\nmodel_diff = train_eval - test_eval\nprint(model_diff)","88ce9791":"# Train prediction on test data\ntrain_prediction = model.predict(X_train)","cbe4a7be":"# Test prediction on test data\ntest_prediction = model.predict(X_test)","5436d673":"print(train_prediction)","3c9034c9":"print(test_prediction)","edab1d47":"# R Squared : R-squared measures the strength of the relationship between your model and the dependent variable on a convenient 0 \u2013 100% scale.\nfrom sklearn.metrics import r2_score\nr2_train = r2_score(y_train, train_prediction)","2762daad":"print('R squared value of train data:', r2_train)","1a253027":"r2_test = r2_score(y_test, test_prediction)","863ee3f5":"print('R squared value of test data:',r2_test)","9aee6093":"# Training Algortihm","3b23353f":"# Data Analysis and Collection","b7e63c8d":"# Data Analysis","0728ea6b":"Handling Missing Values\n\n- MEAN -> AVERAGE\n- MODE -> MORE REPEATED VALUE","03ce5469":"# Importing all essentials","5afad07c":"# Splitting into Train Test Split","bd4efefc":"### Label Encoding","1eb562d0":"# Splitting features and Target","1e1d8dfc":"# Big Market Sales Prediction","4ae72a8e":"From above graph we can say that loss of our model decreasing significantly.","aa38dfb1":"# Data Pre=Processing","dc27d538":"Categorical Features:\n- Item_Identifier\n- Item_Fat_Content\n- Item_Type\n- Outlet_Indentifier\n- Outlet_Size\n- Outlet_Location-Type\n- Outlet_Type","5702b74c":"# Model Evaluation"}}