{"cell_type":{"1ab3eda9":"code","20db33f8":"code","99a18a24":"code","46599e73":"code","ad441e7e":"code","91c00aff":"code","45f423df":"code","20dd482a":"code","6b3b02e8":"code","ec45f34d":"code","742b141c":"code","31e713e5":"code","c09ba222":"code","9dd02359":"code","1cfdfa3b":"code","2b03df71":"code","8f1f85bb":"code","e980ca97":"code","2d5e35ee":"code","0c3adc1e":"code","7975e08b":"code","481d1e08":"code","b42d2713":"code","0259baf9":"code","fc2a0075":"code","fe451395":"code","e70996ac":"code","a3e6ff04":"code","2c326911":"code","a602ba94":"code","76b2c031":"code","92757139":"code","85979cfe":"code","e3eb6f72":"code","10969a36":"code","db7c351a":"code","47a34170":"code","9f8bfd46":"code","151b1227":"code","87f00018":"code","dd35060d":"code","5c19dad6":"code","395a6423":"code","94b977bd":"code","3c75e62c":"code","d3ba6dc4":"code","6351c31d":"code","bdc9c96d":"code","bb6c36b3":"code","09088864":"code","057321ff":"code","ee003959":"code","dcaed304":"markdown","0be7fe22":"markdown","084f28ce":"markdown","64ba2f44":"markdown","4603bdc0":"markdown"},"source":{"1ab3eda9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nimport statsmodels.api as st\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\n\nnp.random.seed(42)","20db33f8":"df = pd.read_csv('\/kaggle\/input\/diamonds\/diamonds.csv')","99a18a24":"df.head()","46599e73":"df.drop('Unnamed: 0',inplace=True,axis=1)","ad441e7e":"df.isnull().sum()","91c00aff":"df.isna().sum()","45f423df":"df.shape","20dd482a":"df.info()","6b3b02e8":"(df.x == 0).sum()","ec45f34d":"(df.y == 0).sum()","742b141c":"(df.z == 0).sum()","31e713e5":"df[df.x == 0]","c09ba222":"df[['x','y','z']]=df[['x','y','z']].replace(0,np.NaN)\n","9dd02359":"df.describe()","1cfdfa3b":"df.plot(kind='box',figsize=(15,10),subplots=True,layout=(3,3))\nplt.show()","2b03df71":"\ndef outliers(var):\n    a = []\n    q1 = df[var].quantile(.25)\n    q2 = df[var].quantile(.5)\n    q3 = df[var].quantile(.75)\n    iqr = q3-q1\n    ulim = float(q3+(1.5*iqr))\n    llim = float(q1-(1.5*iqr))\n\n    for i in df[var]:\n        if i > ulim:\n            i=np.NaN\n        elif i < llim:\n            i = np.NaN\n        else:\n            i=i\n        a.append(i)\n    return a\n\nfor col in df.select_dtypes(exclude='object').columns:\n    df[col] = outliers(col)\n\n","8f1f85bb":"df.isna().sum()","e980ca97":"df.plot(kind='box',figsize=(15,10),subplots=True,layout=(3,3))\nplt.show()","2d5e35ee":"sns.boxplot(df['z'])","0c3adc1e":"df.describe()","7975e08b":"df.isna().sum()","481d1e08":"for i in df.select_dtypes(exclude='object').columns:\n    df[i]=df[i].fillna(df[i].mean())\n    ","b42d2713":"df.describe()","0259baf9":"df.isna().sum()","fc2a0075":"df.head()","fe451395":"df_cat = df.select_dtypes(include='object')\ndf_cat['cut'].value_counts()","e70996ac":"df_cat['color'].value_counts()","a3e6ff04":"df_cat['clarity'].value_counts()","2c326911":"le = LabelEncoder()\ndf_cat = df_cat.apply(le.fit_transform)\ndf_cat","a602ba94":"df = df.drop(df_cat,axis=1)","76b2c031":"df = pd.concat([df,df_cat],axis=1)","92757139":"plt.scatter(df['price'],df['carat'])","85979cfe":"plt.figure(figsize=(10,8))\nsns.heatmap(df.corr(),annot=True,cmap='YlGnBu')","e3eb6f72":"X = df.drop('price',axis=1)\ny = df['price']","10969a36":"xc = st.add_constant(X)\nlm = st.OLS(y,xc).fit()","db7c351a":"\nlm.summary()","47a34170":"vif = [variance_inflation_factor(X.values,col) for col in range(0,X.shape[1])]","9f8bfd46":"pd.DataFrame({'vif':vif,'cols':X.columns})","151b1227":"df.corr()","87f00018":"X = df.drop(['price'],axis=1)\ny = df['price']","dd35060d":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=.33,random_state=42)","5c19dad6":"lr = LinearRegression()\nlr.fit(X_train,y_train)\ny_pred = lr.predict(X_test)\nr2_score(y_test,y_pred)","395a6423":"y_pred\n","94b977bd":"y_test","3c75e62c":"rr  = RandomForestRegressor()","d3ba6dc4":"rr.fit(X_train,y_train)\ny_pred = rr.predict(X_test)\nr2_score(y_test,y_pred)","6351c31d":"rr.get_params","bdc9c96d":"n_estimators = [int(x) for x in np.linspace(10,200,10)]\nmax_depth = [int(x) for x in np.linspace(10,100,10)]\nmin_samples_split = [2,3,4,5,10]\nmin_samples_leaf = [1,2,4,10,15,20]\nrandom_grid = {'n_estimators':n_estimators,'max_depth':max_depth,\n               'min_samples_split':min_samples_split,'min_samples_leaf':min_samples_leaf}\n\nrandom_grid\n","bb6c36b3":"from sklearn.model_selection import RandomizedSearchCV\nrf = RandomForestRegressor()\nrf_random = RandomizedSearchCV(estimator=rf,\n                               param_distributions=random_grid,\n                               cv = 3)\n\nrf_random.fit(X_train,y_train)","09088864":"y_pred = rf_random.predict(X_test)\nr2_score(y_test,y_pred)","057321ff":"rf_random.best_params_","ee003959":"rf = RandomForestRegressor(n_estimators=178,\n                         min_samples_split=5,\n                         min_samples_leaf=1,\n                         max_depth=50)\nrf.fit(X_train,y_train)\ny_pred = rf.predict(X_test)\nr2_score(y_test,y_pred)","dcaed304":"**Model Building**","0be7fe22":"**Hyperparameter Tuning**","084f28ce":"# Importing required libraries","64ba2f44":"# Removing outliers by filling with NAN values","4603bdc0":"# Checking Assumptions "}}