{"cell_type":{"f6089a15":"code","6c707b46":"code","a9bc823d":"code","09eb6d28":"code","77c366c9":"code","53d2fc71":"code","1eecd17d":"code","098c1dd4":"code","f9282815":"code","3131aae9":"code","7da3bce7":"code","c64f2bca":"code","dd003a8e":"code","565ddb02":"code","8a5f9ca5":"code","6b6d9f5e":"code","5d798f18":"code","1efb2b0b":"code","3c522b7a":"code","ee0a588a":"code","37a34472":"code","bdfb39aa":"code","fc210dbf":"code","a37f7859":"code","01d7c899":"code","ae4efb06":"code","37b36dad":"code","1ffeb0f1":"code","258dd662":"code","4881d9fc":"code","4d48df52":"code","7f2d24aa":"code","22f3e59b":"code","68833eba":"code","84a825db":"code","fc8439e1":"code","6880b28f":"code","fb33fa40":"code","aea5a6da":"code","ef2fa468":"code","cc2ec666":"code","06b672c3":"code","6d0e8d22":"code","67e3c1f5":"code","ea165fe4":"code","4bba6e72":"code","09f8ed8d":"code","13aef862":"code","05a9b99a":"code","758e3896":"code","790f77c7":"code","9ab5a540":"code","26469e45":"code","83482fbc":"code","5aadbf43":"code","6264a7c9":"code","bbb6f59c":"code","0002ee0a":"code","60d8a1c6":"code","c4dc9a1e":"code","4032ab7c":"code","49bee024":"code","532047aa":"code","a455eebb":"code","10ec9e26":"code","c97009ba":"code","259ece21":"code","05c0e722":"code","c158ed5f":"code","64b98f35":"code","24ac3ae1":"code","9bab1097":"code","5868a54d":"code","1f19a4a3":"code","49f03675":"code","858cb880":"markdown","13e665a1":"markdown","cbce7565":"markdown","fa861607":"markdown","a1714960":"markdown","57371a46":"markdown","98cbf891":"markdown","6079f6a1":"markdown","51651c3a":"markdown","70954078":"markdown","845f3561":"markdown","b68139f1":"markdown","61c34070":"markdown","a7cf56dc":"markdown","dc89e80b":"markdown","ada99baf":"markdown","309e21af":"markdown"},"source":{"f6089a15":"import pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\nfrom sklearn.preprocessing import LabelEncoder\r\nfrom sklearn.naive_bayes import GaussianNB\r\n\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn.neighbors import KNeighborsRegressor\r\n\r\nfrom sklearn.svm import SVC\r\nfrom sklearn.svm import SVR\r\n\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LogisticRegression\r\n\r\nfrom sklearn import metrics\r\nfrom sklearn.metrics import confusion_matrix,classification_report\r\n\r\nfrom sklearn.tree import DecisionTreeClassifier\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn import tree\r\nfrom warnings import filterwarnings\r\nfilterwarnings(\"ignore\")","6c707b46":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv',sep=',',encoding=\"utf-8\")\r\ndf.head()","a9bc823d":"df.info()","09eb6d28":"df","77c366c9":"df.shape","53d2fc71":"df.isna().sum()","1eecd17d":"df.apply(lambda x:len(x.unique()))\r\n","098c1dd4":"print('cp ',df['cp'].unique())\r\nprint('fbs ',df['fbs'].unique())\r\nprint('restecg ',df['restecg'].unique())\r\nprint('exang ',df['exang'].unique())\r\nprint('slope ',df['slope'].unique())\r\nprint('ca ',df['ca'].unique())\r\nprint('thal ',df['thal'].unique())\r\n","f9282815":"plt.hist(df['age'], bins=None, range=None, density=False)","3131aae9":"fig, ax = plt.subplots(4,2, figsize = (14,14))\r\n((ax1, ax2), (ax3, ax4), (ax5, ax6), (ax7, ax8)) = ax\r\n\r\nlabels = [\"Male\", \"Female\"]\r\nvalues = df['sex'].value_counts().tolist()[:2]\r\nax1.pie(x=values, labels=labels, autopct=\"%1.1f%%\",colors=['#AAb3ff','#CC80FF'],shadow=True, startangle=45,explode=[0.1, 0.1])\r\nax1.set_title(\"Sex\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = [\"Typical angina\", \"Atypical angina\",\"non-anginal pain\",\"asymptomatic\"]\r\nvalues = df['cp'].value_counts().tolist()\r\nax2.pie(x=values, labels=labels, autopct=\"%1.1f%%\",colors=['#AAb3ff','#CC80FF','#DD00AA','#FF0099'],shadow=True,startangle=45,explode=[0.1, 0.1, 0.1, 0.2])\r\nax2.set_title(\"Chest Pain\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['fbs'].value_counts().index.tolist()[:2]\r\nvalues = df['fbs'].value_counts().tolist()\r\nax3.pie(x=values, labels=labels, autopct=\"%1.1f%%\",colors=['#AAb3ff','#CC80FF'],shadow=True, startangle=45,explode=[0.1, 0.15])\r\nax3.set_title(\"Fasting Blood Sugar\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['restecg'].value_counts().index.tolist()[:3]\r\nvalues = df['restecg'].value_counts().tolist()\r\nax4.pie(x=values, labels=labels, autopct=\"%1.1f%%\", colors=['#AAb3ff','#CC80FF','#DD00AA'],shadow=True,startangle=45,explode=[ 0.05, 0.05, 0.05])\r\nax4.set_title(\"Resting Blood Pressure\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['exang'].value_counts().index.tolist()[:2]\r\nvalues = df['exang'].value_counts().tolist()\r\nax5.pie(x=values, labels=labels, autopct=\"%1.1f%%\", colors=['#AAb3ff','#CC80FF'],shadow=True, startangle=45,explode=[0.1, 0.1])\r\nax5.set_title(\"Exercise induced Angina\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['slope'].value_counts().index.tolist()[:3]\r\nvalues = df['slope'].value_counts().tolist()\r\nax6.pie(x=values, labels=labels, autopct=\"%1.1f%%\", colors=['#AAb3ff','#CC80FF','#DD00AA'],shadow=True,startangle=45,explode=[  0.1, 0.1, 0.1])\r\nax6.set_title(\"Peak exercise ST_segment Slope\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['ca'].value_counts().index.tolist()[:5]\r\nvalues = df['ca'].value_counts().tolist()\r\nax7.pie(x=values, labels=labels, autopct=\"%1.1f%%\", shadow=True, startangle=45,explode=[0.05, 0.07, 0.1, 0.1,0.1],colors=['#AAb3ff','#CC80FF','#DD00AA','#FF0099','#FF9933'])\r\nax7.set_title(\"Major vessels\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nlabels = df['thal'].value_counts().index.tolist()[:4]\r\nvalues = df['thal'].value_counts().tolist()\r\nax8.pie(x=values, labels=labels, autopct=\"%1.1f%%\", shadow=True, startangle=45,explode=[0.1, 0.1, 0.1, 0.2],colors=['#AAb3ff','#CC80FF','#DD00AA','#FF5099'])\r\nax8.set_title(\"Types of Thalassemia\", fontdict={'fontsize': 12},fontweight ='bold')\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n\r\nplt.savefig(\"PiePlots.png\")","7da3bce7":"df.columns","c64f2bca":"sns.catplot('target','age',data=df,kind='violin')\r\nplt.title('relationship between age and Heart Disease')\r\nplt.savefig(\"age.png\")","dd003a8e":"sns.catplot('target','thalach',data=df,kind='violin')\r\nplt.title('relationship between maximum heart rate achieved and Heart Disease')\r\nplt.savefig(\"thalach.png\")","565ddb02":"sns.catplot('target','trestbps',data=df,kind='violin')\r\nplt.title('relationship between Resting blood pressure and Heart Disease')\r\nplt.savefig(\"trestbps.png\")","8a5f9ca5":"sns.catplot('target','chol',data=df,kind='violin')\r\nplt.title('relationship between Serum Cholestoral and Heart Disease')\r\nplt.savefig(\"chol.png\")","6b6d9f5e":"sns.catplot('target','oldpeak',data=df,kind='violin')\r\nplt.title('relationship between oldpeak and Heart Disease')\r\nplt.savefig(\"oldpeak.png\")","5d798f18":"plt.figure(figsize=(20,10))\r\nsns.countplot(x=df['age'],data=df,hue='target',palette=\"twilight_shifted\",saturation=2,dodge=True,)\r\n\r\nplt.savefig(\"Target&age.png\")","1efb2b0b":"plt.figure(figsize=(10,5))\r\nplt.scatter(x=df.age[df.target==1], y=df.thalach[(df.target==1)], c='red')\r\nplt.scatter(x=df.age[df.target==0], y=df.thalach[(df.target==0)],c='gray')\r\nplt.legend(['Positive', 'Negative'])\r\nplt.xlabel('Age')\r\nplt.ylabel('Maximum Heart Age')\r\nplt.show()","3c522b7a":"list = ['sex','cp','fbs','restecg','exang','slope','ca','thal']\r\nm=1\r\nplt.figure(figsize=(20,15))\r\nfor i in list:\r\n    plt.subplot(3,3,m)\r\n    sns.countplot(x=i,data=df,hue='target',palette=\"twilight_shifted\",\r\n    saturation=2,dodge=True)\r\n    m+=1\r\n    \r\nplt.savefig(\"TargetRelation.png\")","ee0a588a":"plt.figure(figsize=(10,10))\r\nsns.heatmap(pd.DataFrame(df.corr()['target']).sort_values(by='target').transpose().drop('target',axis=1).transpose(),annot=True,cmap='twilight')\r\nplt.savefig(\"TargetCorrelations.png\")","37a34472":"X = df.drop('target',axis=1)\nY = df['target']\nfrom sklearn.feature_selection import SelectKBest, chi2\nfs = SelectKBest(score_func=chi2, k='all')\nfs.fit(X, Y)\nper = []\nfor i in fs.scores_:\n    per.append(round(((i\/sum(fs.scores_))*100),3))\n\nfeatures_data = pd.DataFrame({'Feature':X.columns,'Scores':fs.scores_,'Importance (%)':per}).sort_values(by=['Scores'],ascending=False)\n\nplt.figure(figsize=(9,4))\nsns.barplot( 'Importance (%)','Feature',orient='h',data=features_data,palette='twilight_shifted_r')\ninsignificant = features_data.loc[features_data['Importance (%)']<0.005]['Feature'].unique()\nfeatures_data = features_data.set_index('Feature')\nfeatures_data\nplt.savefig(\"FeatureImportance.png\")","bdfb39aa":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.histplot(data=df,hue='target',x='thalach',bins=20,element='poly')\nplt.subplot(1,2,2)\nsns.histplot(data=df,hue='target',x='oldpeak',bins=20,element='poly')\nplt.savefig(\"Thalach&oldpeak_Histplot.png\")","fc210dbf":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.histplot(data=df,hue='target',x='trestbps',bins=20,element='poly')\nplt.subplot(1,2,2)\nsns.histplot(data=df,hue='target',x='chol',bins=20,element='poly')\nplt.savefig(\"Resting_blood_pressure&chol_Histplot.png\")","a37f7859":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),cbar = True, annot =True,cmap='twilight_shifted_r');\nplt.savefig(\"heatmap.png\")","01d7c899":"df.columns\n","ae4efb06":"df.info()","37b36dad":"df.describe()","1ffeb0f1":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsRegressor\n\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.naive_bayes import GaussianNB\n\nfrom sklearn.svm import SVC\nfrom sklearn.svm import SVR\n\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.metrics import f1_score,plot_roc_curve,accuracy_score,roc_curve,roc_auc_score,recall_score\nfrom mlxtend.plotting import plot_confusion_matrix\n\nfrom sklearn.model_selection import GridSearchCV\n\nfrom sklearn.ensemble import ExtraTreesClassifier\n\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import make_pipeline, make_union\nfrom sklearn.preprocessing import PolynomialFeatures\n\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.feature_selection import SelectFwe, f_regression","258dd662":"X = df.drop('target',axis=1).values\nY = df['target'].values","4881d9fc":"X.shape","4d48df52":"Y.shape","7f2d24aa":"# Split the dataset into training and testing.\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0)","22f3e59b":"print(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","68833eba":"# Train and predict.\nLL = LogisticRegression(solver='liblinear',max_iter = 1000, random_state = 31)\nLL.fit(X_train,Y_train)\nY_pred_lr = LL.predict(X_test) \ny_pred_lr = np.around(Y_pred_lr)","84a825db":"score_lr = round(accuracy_score(Y_pred_lr,Y_test)*100,2)\nscore_lr","fc8439e1":"# Confusion matrix.\nconf_mat = metrics.confusion_matrix(Y_test,Y_pred_lr)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"LRcrr.png\")","6880b28f":"plot_roc_curve(LL,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"LR.png\")","fb33fa40":"from sklearn import metrics\nprint(metrics.classification_report(Y_test,y_pred_lr))","aea5a6da":"kclf = KNeighborsClassifier(n_neighbors=31,leaf_size=30)\nkclf.fit(X_train,Y_train)\nY_pred_kclf = kclf.predict(X_test)\nscore_kclf = round(accuracy_score(Y_pred_kclf,Y_test)*100,2)\nscore_kclf","ef2fa468":"conf_mat=confusion_matrix(Y_test,Y_pred_kclf)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"KNNcrr.png\")","cc2ec666":"plot_roc_curve(kclf,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"KNN.png\")","06b672c3":"svm = SVC(C=8.0,\n    kernel='rbf',\n    degree=3,\n    gamma='scale',\n    coef0=0.01,\n    shrinking=True,\n    probability=True,\n    tol=0.1,\n    cache_size=300,\n    class_weight=None,\n    verbose=False,\n    max_iter=-1,\n    decision_function_shape='ovo')\nsvm.fit(X_train,Y_train)\nY_pred_svm = svm.predict(X_test)         \nscore_svm = round(accuracy_score(Y_pred_svm,Y_test)*100,2)\nscore_svm","6d0e8d22":"conf_mat=confusion_matrix(Y_test,Y_pred_svm)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"SVCcrr.png\")","67e3c1f5":"Y_pred_svm = np.around(Y_pred_svm)\nprint(metrics.classification_report(Y_test,Y_pred_svm))","ea165fe4":"plot_roc_curve(svm,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"SVC.png\")","4bba6e72":"gnb = GaussianNB( var_smoothing=1e-50)\ngnb.fit(X_train,Y_train)\ngnb.predict(X_test)\nY_pred_gnb = gnb.predict(X_test)          \nscore_gnb = round(accuracy_score(Y_pred_gnb,Y_test)*100,2)\nscore_gnb","09f8ed8d":"conf_mat=confusion_matrix(Y_test,Y_pred_gnb)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"GNBcrr.png\")","13aef862":"plot_roc_curve(gnb,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"GNB.png\")","05a9b99a":"Y_pred_gnb = np.around(Y_pred_gnb)\nprint(metrics.classification_report(Y_test,Y_pred_gnb))","758e3896":"param_grid ={\n    'max_depth': [10, 20, 30, 40,50,60,70],\n 'max_features': ['auto', 'sqrt'],\n 'n_estimators': [20, 40,60,80 ]\n}\n","790f77c7":"RFclf = RandomForestClassifier(max_depth=10, n_estimators=20)\ngrid = GridSearchCV(estimator=RFclf, param_grid=param_grid, cv = 4, n_jobs=2,verbose=2)\ngrid_result = grid.fit(X_train, Y_train)\n# Summarize results\nprint(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))","9ab5a540":"model=grid_result.best_estimator_\nmodel","26469e45":"Y_pred_RFclf=model.predict(X_test)\nscore_RFclf = round(accuracy_score(Y_pred_RFclf,Y_test)*100,2)\nscore_RFclf","83482fbc":"conf_mat=confusion_matrix(Y_test,Y_pred_RFclf)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"RF_GridSearch_crr.png\")","5aadbf43":"Y_pred_RFclf = np.around(Y_pred_RFclf)\nprint(metrics.classification_report(Y_test,Y_pred_RFclf))","6264a7c9":"plot_roc_curve(model,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"RF_GridSearch.png\")","bbb6f59c":"max_accuracy = 0\n\n\nfor x in range(500):\n    rf = RandomForestClassifier(random_state=x)\n    rf.fit(X_train,Y_train)\n    Y_pred_rf = rf.predict(X_test)\n    current_accuracy = round(accuracy_score(Y_pred_rf,Y_test)*100,2)\n    if(current_accuracy>max_accuracy):\n        max_accuracy = current_accuracy\n        best_x = x\n\nprint(max_accuracy)\nprint(best_x)\n\n","0002ee0a":"rf = RandomForestClassifier(random_state=best_x)\nrf.fit(X_train,Y_train)\nY_pred_rf = rf.predict(X_test)\nY_pred_rf.shape\n","60d8a1c6":"score_rf = round(accuracy_score(Y_pred_rf,Y_test)*100,2)\nscore_rf","c4dc9a1e":"conf_mat=confusion_matrix(Y_test,Y_pred_rf)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='cividis_r'); #fn\nplt.savefig(\"RFcrr.png\")","4032ab7c":"Y_pred_rf = np.around(Y_pred_rf)\nprint(metrics.classification_report(Y_test,Y_pred_rf))","49bee024":"plot_roc_curve(rf,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"RF.png\")","532047aa":"xgb= XGBClassifier(loss='exponential', learning_rate=0.001, n_estimators=800, subsample=1.0, criterion='friedman_mse', \n                                  min_samples_split=2, \n                                  min_samples_leaf=5, min_weight_fraction_leaf=0.2, max_depth=20, min_impurity_decrease=0.1, \n                                  min_impurity_split=None, \n                                  init=None, random_state=None, max_features=None, verbose=1, max_leaf_nodes=None, warm_start=False, \n                                  presort='deprecated', \n                                  validation_fraction=0.2, n_iter_no_change=None, tol=0.0002)\n                              \nxgb.fit(X_train, Y_train)\nY_pred_xgb=xgb.predict(X_test)\nscore_xgb = round(accuracy_score(Y_pred_xgb,Y_test)*100,2)\nscore_xgb","a455eebb":"conf_mat=confusion_matrix(Y_test,Y_pred_xgb)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn\nplt.savefig(\"GNBcrr.png\")","10ec9e26":"Y_pred_gnb = np.around(Y_pred_gnb)\nprint(metrics.classification_report(Y_test,Y_pred_xgb))","c97009ba":"plot_roc_curve(gnb,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');\nplt.savefig(\"GNB.png\")","259ece21":"tclf = DecisionTreeClassifier(\n    max_depth=20,\n    min_samples_split=2,\n    min_samples_leaf=1,\n    min_weight_fraction_leaf=0.00001,\n    max_features='auto',\n    random_state=46)\ntclf.fit(X_train, Y_train)\nY_pred_tclf=tclf.predict(X_test)\nscore_tclf = round(accuracy_score(Y_pred_tclf,Y_test)*100,2)\nscore_tclf","05c0e722":"conf_mat=confusion_matrix(Y_test,Y_pred_tclf)\nplot_confusion_matrix(conf_mat,class_names=[\"Negative\",\"Positive\"],figsize=(12,5),cmap='copper_r'); #fn","c158ed5f":"Y_pred_tclf = np.around(Y_pred_tclf)\nprint(metrics.classification_report(Y_test,Y_pred_tclf))","64b98f35":"plot_roc_curve(tclf,X_test,Y_test)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Curve');","24ac3ae1":"scores = [score_lr,score_kclf,score_svm,score_gnb,score_RFclf,score_rf,score_xgb,score_tclf]\nModels = [\"Logistic Regression\",\"KNN CLF\",\"Support Vector Machine\",\"Gaussian Navie Bayes\",\"Random Forest with GridSearch\",\"Random Forest\",\"XGBoost\",\"Decision Tree\"]    \n\nfor i in range(len(Models)):\n    print(\"The accuracy score achieved using \"+Models[i]+\" is: \"+str(scores[i])+\" %\")","9bab1097":"sns.set(style=\"darkgrid\",rc={'figure.figsize':(20,10)})\nplt.xlabel(\"Models\",loc='center')\nplt.ylabel(\"Accuracy score\")\n\nsns.barplot(Models,scores)\nplt.savefig(\"AccuracyScores.png\")","5868a54d":"df.describe()","1f19a4a3":"df.head()","49f03675":"Input = (63, 1, 3,145,233,1,0,150, 0, 2.3,0,0,1)\n\nInput_array= np.asarray(Input)\nInput_reshaped = Input_array.reshape(1,-1)\n\nprediction = rf.predict(Input_reshaped)\nprediction = np.around(prediction)\n\nprint(prediction)\n\nif (prediction[0]== 0):\n  print('The Person does not have a Heart Disease')\nelse:\n  print(\"The Person will has a Heart Disease by %f \"%(prediction))\n","858cb880":"-----------------------\n**`-6- RandomForestClassifier`**\n--------------------","13e665a1":"    The early prognosis of cardiovascular diseases can aid in making decisions on lifestyle changes in high risk patients and in turn reduce the complications.\n    I Aim to deploy a machine learning model that can predict whether the person may have a heart disease or not.\n\n","cbce7565":"-----------------------\n**`-4-  Navie Bayes`**\n--------------------","fa861607":"Y_pred_kclf = np.around(Y_pred_kclf)\nprint(metrics.classification_report(Y_test,Y_pred_kclf))","a1714960":"###  EDA\n","57371a46":"-----------------------\n**`-3-  SVM`**\n--------------------","98cbf891":"___________________________________\n\n# Modelling\n___________________________","6079f6a1":"-----------------------\n**`-8- Decision Tree Classifier `**\n--------------------","51651c3a":"-----------------------\n**`-7- XGBoost `**\n--------------------","70954078":"\n_____________________\n**`sex : 1 = Male , 0=Female`**\n\n_____________________\n**`cp : Chest Pain`**\n\n    Angina: Angina is caused when there is not enough oxygen-rich blood flowing to a certain part of the heart. The arteries of the heart become narrow due to fatty deposits in the artery walls. The narrowing of arteries means that blood supply to the heart is reduced, causing angina.\n    Value 1: typical angina || Value 2: atypical angina || Value 3: non-anginal pain || 4: asymptomatic\n    \n\n_____________________\n**`threstbps :Resting blood pressure`**\n\n    ( Normal pressure with no exercise )\n \n \n_____________________\n**`chol: serum cholestoral in mg\/dl`**\n\n    Cholesterol means the blockage for blood supply in the blood vessels\n\n\n_____________________\n**`fbs: fasting blood sugar > 120 mg\/dl`**\n\n    (1 = true; 0 = false) blood sugar taken after a long gap between a meal and the test. Typically, it's taken before any meal in the morning.\n    \n    \n_____________________\n**`restecg: resting electrocardiographic results (values 0,1,2)`**\n\n     ECG values taken while person is on rest which means no exercise and normal functioning of heart is happening\n         \n_____________________\n**`thalach: maximum heart rate achieved`**\n          \n_____________________\n**`exang: exercise induced angina`**\n\n    (1 = yes; 0 = no) is chest pain while exercising or doing any physical activity.\n\n_____________________\n**`oldpeak = ST depression induced by exercise relative to rest`**\n\n    ST Depression is the difference between value of ECG at rest and after exercise.\n    An electrocardiogram records the electrical signals in your heart. It's a common and painless test used to quickly detect heart problems and monitor your heart's health. Electrocardiograms \u2014 also called ECGs or EKGs \u2014 are often done in a doctor's office, a clinic or a hospital room. ECG machines are standard equipment in operating rooms and ambulances. Some personal devices, such as smart watches, \n     \n_____________________\n**`slope:\tthe slope of the peak exercise ST segment`**\n   \n    Value 1: upsloping \u2014 Value 2: flat \u2014 Value 3: downsloping\n \n_____________________\n**`ca:\tnumber of major vessels (0-3) colored by flourosopy`**\n\n    Fluoroscopy is an imaging technique that uses X-rays to obtain real-time moving images of the interior of an object. In its primary application of medical imaging, a fluoroscope (\/\u02c8fl\u028a\u0259r\u0259sko\u028ap\/) allows a physician to see the internal structure and function of a patient, so that the pumping action of the heart or the motion of swallowing, for example, can be watched\n\n_____________________\n**`thal:The Types of thalassemia`**\n \n    (3 = normal; 6 = fixed defect; 7 = reversable defect)","845f3561":"-----------------------\n**`-8- Showing Final Scores`**\n--------------------","b68139f1":"------------------------\n**` 1-LogisticRegression`**\n----------------------","61c34070":"-----------------------\n**`Though The Random forest Classifier gets the best result, We will use it as our main model to connect it's API with the GUI `**\n--------------------","a7cf56dc":"-----------------------\n**`-5- RandomForestClassifier with GridSearch`**\n--------------------","dc89e80b":"## World Health Organization(WHO) has estimated 12 million deaths occur worldwide.\n\n    Every year due to Heart diseases. Half the deaths in the United States and other developed countries are due to cardio vascular diseases. \n","ada99baf":"------------------------\n**`-2-  - KNN CLF`**\n----------------------","309e21af":"## Heart Disease Is World's No. 1 Killer\n    All over the world ,in all ages, there is a lot of people catch heart diseases without noticing. It is only been detected at a late stage.\n\n    Heart disease cases nearly doubled over the period from 271 million in 1990 to 523 million in 2019, and the number of heart disease deaths rose from 12.1 million to 18.6 million\n**`How can we reduce the Heart diseases death rate?`**\n"}}