{"cell_type":{"00d0b49d":"code","1de9a3b7":"code","121366a0":"code","aaf329a0":"code","5251e892":"code","c6a0aeb6":"code","ff18f52e":"code","39b65562":"code","5ffb3916":"code","1de6b113":"code","71655e83":"code","ed7fcd62":"markdown","9cf0a1b3":"markdown","f4aea05d":"markdown","33a29763":"markdown","9bf84d00":"markdown","438f86d2":"markdown","9187c1e4":"markdown","d7e6aaf3":"markdown"},"source":{"00d0b49d":"# import dependencies\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport scipy.stats as st\nimport statistics\nfrom sklearn import ensemble, tree, linear_model\nimport missingno as msno\nfrom scipy.stats import pearsonr\nfrom scipy.stats import norm\n\n# show all rows and columns - no truncating\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', None)\n\n# read file in\nfilePath = '..\/input\/corona-virus-report\/worldometer_data.csv'\ncovid_data = pd.read_csv(filePath, index_col = \"Country\/Region\")\n","1de9a3b7":"plt.figure(figsize=(30,15))\n\n# Add title\nplt.title(\"Total Corona Virus Related Deaths by Country per 1 million of Population\")\n\n# Bar chart \nsns.barplot(x=covid_data.index, y=covid_data['Deaths\/1M pop'])\n\n# Add label for vertical axis\nplt.ylabel(\"Total Deaths per 1 million of population\")\nplt.xticks(rotation=90) \nplt.tight_layout()","121366a0":"covid_data['Deaths\/1M pop'].describe()","aaf329a0":"print(\"Median deaths per 1 million population: \")\ncovid_data['Deaths\/1M pop'].median()\n","5251e892":"maxVal = max(covid_data['Deaths\/1M pop'])\nminVal = min(covid_data['Deaths\/1M pop'])\n\nprint('range is', minVal, maxVal)","c6a0aeb6":"plt.figure(dpi=225)\n\n# Add title\nplt.title(\"Total Corona Virus Tests vs Total Corona Virus Deaths (per million of population)\")\nsns.scatterplot(x = covid_data['Tests\/1M pop'], y = covid_data['Deaths\/1M pop'])\nplt.show()","ff18f52e":"# .fillna(0) fill nan values with 0 and print out a floating point number to 3 decimal places.\ncorr, _ = pearsonr(covid_data['Deaths\/1M pop'].fillna(0), covid_data['Tests\/1M pop'].fillna(0))\nprint('Pearsons correlation: %.3f' % corr)","39b65562":"corrmat = covid_data.corr(method='pearson')\nf, ax = plt.subplots(figsize=(30,15))\nsns.heatmap(corrmat, ax=ax, cmap=\"YlGnBu\", annot=True)","5ffb3916":"fillNanValues = covid_data.fillna(0)\n\nTests_KS = covid_data['Tests\/1M pop'].notna().kurtosis()\nDeaths_KS = covid_data['Deaths\/1M pop'].notna().kurtosis()\nprint('Kurtosis Distribution Shape for Tests: ', Tests_KS)\nprint('Kurtosis Distribution Shape for Deaths: ', Deaths_KS)\n\n## exclude non recorded tests\n## exclude non recorded deaths\nTests_SD = covid_data['Tests\/1M pop'].notna().std()\nDeaths_SD = covid_data['Deaths\/1M pop'].notna().std()\ncovid_data['Deaths\/1M pop'].describe()\nprint(\"Tests 1M\/population standard deviation: \", Tests_SD)\nprint(\"Deaths 1M\/population standard deviation: \", Deaths_SD)\n\n# Variance\nvar = np.var(fillNanValues['Deaths\/1M pop'])\nprint('Variance: ', var)\n\n# Return unbiased skew normalized by N-1\nTests_skew = covid_data['Tests\/1M pop'].notna().skew()\nDeaths_skew =  covid_data['Deaths\/1M pop'].notna().skew()\n","1de6b113":"sns.distplot(covid_data.notna().skew(),color='blue',axlabel ='Skewness')","71655e83":"A = covid_data[\"TotalTests\"] \/ covid_data[\"Population\"]\nB = covid_data[\"TotalDeaths\"]\/ covid_data[\"Population\"]\n\n\n# Bayes Theoreum\n# P(A|B) =   (P(B|A) * P(A))\/ P(A)\n                    \n# get likelihood of death given a covid test as a percentage.\nProbabilityDeath = (B\/A) * 100\n\n# Bayes Theorem: \n\nplt.figure(figsize=(30,15))\n\n# Add title\nplt.title(\"Liklihood of Death By Country Given a Covid-19 Test\")\n\n# Bar chart \nsns.barplot(x=covid_data.index, y=ProbabilityDeath)\n\n# Add label for vertical axis\nplt.ylabel(\"Total Deaths per 1 million of population\")\nplt.xticks(rotation=90) \nplt.tight_layout()\n\nprint('raw probability of death given a covid-19 test, see graph below.')\nprint(ProbabilityDeath)\n\n\n","ed7fcd62":"Hypothesis Testing - Kurtosis vs Standard Deviation","9cf0a1b3":"The covariance of Deaths per 1 million of population and tests per 1 million of population is:","f4aea05d":"Below is a graph of the covid data skew.","33a29763":"Median Covid Deaths per 1 million of population","9bf84d00":"A Bivariate analysis - Total Tests By Country per 1 million of Population vs Total Deaths By Country per 1 million of Population","438f86d2":"A univariate analysis - Total Deaths per 1 million of Population per Country","9187c1e4":"Range of Covid Deaths per 1 million of population","d7e6aaf3":"In depth univariate analysis of deaths per 1 million of population:\n\n"}}