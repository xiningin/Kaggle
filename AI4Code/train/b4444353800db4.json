{"cell_type":{"64d75752":"code","6c963cb8":"code","ec998788":"code","6c60698f":"code","70de829d":"code","01ad02ee":"code","a91f1668":"code","ed049546":"code","97a5cf4a":"code","b7a17d70":"code","bdd3482d":"markdown","24feb03f":"markdown","88be1b68":"markdown","6811cf6d":"markdown","dcff2c07":"markdown","aebab391":"markdown","2c50ece3":"markdown","a92565a0":"markdown"},"source":{"64d75752":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression,Ridge\nfrom sklearn import metrics","6c963cb8":"from sklearn.datasets import load_iris\niris_data = load_iris()\ndata = pd.DataFrame(iris_data.data, columns=iris_data.feature_names)\ndata['species'] = iris_data.target\n\nprint(data.head())","ec998788":"X = data.drop('species',axis=1)\nY = data['species']\nprint(\"X = \",X.head())\nprint(\"Y = \",Y.head())","6c60698f":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)\nprint(X_train.shape, Y_train.shape)\nprint(X_test.shape, Y_test.shape)","70de829d":"lr = LogisticRegression()\nlr.fit(X_train, Y_train)\n\nY_pred = lr.predict(X_test)","01ad02ee":"print('Accuracy score: ', metrics.accuracy_score(Y_test, Y_pred))\nprint('Precision score: ', metrics.precision_score(Y_test, Y_pred, average='micro'))\nprint('Recall score: ', metrics.recall_score(Y_test, Y_pred, average='micro'))\nprint('F1 score: ', metrics.f1_score(Y_test, Y_pred, average='micro'))\nprint('Confusion Matrix :\\n', metrics.confusion_matrix(Y_test, Y_pred))","a91f1668":"rr = Ridge(alpha=0.5)\nrr.fit(X_train, Y_train)\n\nY_predRR = rr.predict(X_test)","ed049546":"print('Accuracy score: ', metrics.accuracy_score(Y_test, Y_predRR))\nprint('Precision score: ', metrics.precision_score(Y_test, Y_predRR, average='micro'))\nprint('Recall score: ', metrics.recall_score(Y_test, Y_predRR, average='micro'))\nprint('F1 score: ', metrics.f1_score(Y_test, Y_predRR, average='micro'))\nprint('Confusion Matrix :\\n', metrics.confusion_matrix(Y_test, Y_predRR))","97a5cf4a":"train_score=lr.score(X_train, Y_train)\ntest_score=lr.score(X_test, Y_test)\n\nRidge_train_score = rr.score(X_train, Y_train)\nRidge_test_score = rr.score(X_test, Y_test)","b7a17d70":"print(\"Logistic regression train score:\", train_score)\nprint(\"Logisitic regression test score:\", test_score)\nprint(\"Ridge regression train score:\", Ridge_train_score)\nprint(\"Ridge regression test score:\", Ridge_test_score)","bdd3482d":"### Ridge Regression\n<p>Higher the alpha value, more restriction on the coefficients; low alpha > more generalization, coefficients are barely restricted, in this case linear and ridge regression resembles<\/p>","24feb03f":"**Logistic Regression model metrics**","88be1b68":"### Loading IRIS dataset from Scikit-Learn's dataset","6811cf6d":"<h1 align=\"center\">Assignment<\/h1>\n<h2 align=\"center\">Faisal Akhtar<\/h2>\n<h2 align=\"center\">Roll No.: 17\/1409<\/h2>\n<p>Machine Learning - B.Sc. Hons Computer Science - Vth Semester<\/p>\n<p>Perform logistic regression for classification on iris dataset. Apply ridge regularization and compare the performance before and after regularization.<\/p>","dcff2c07":"### Test\/Train Split\n<p>Dividing data into test-train sets, 30% and 70%<\/p>","aebab391":"### Before and after metrics\nComparing the performance before and after applying L2 regularization.","2c50ece3":"### Logistic Regression\n<p>Fit the model according to \"data\" variable obtained from CSV.<\/p>","a92565a0":"### Libraries Imported"}}