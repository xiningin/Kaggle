{"cell_type":{"ed5669cc":"code","661878df":"code","21fdf1e9":"code","41ab24d4":"code","cbe68110":"code","dd2eb652":"code","73c833ae":"code","374d37ad":"code","4fc0a99f":"code","eb885a75":"code","689e70c1":"code","34478fe8":"code","1a7cbce2":"code","92fab64f":"code","4a8d415f":"code","c0dc914d":"code","6c2aaed6":"code","c6687a6c":"markdown","7591d03d":"markdown","96c8d97e":"markdown","a31c194c":"markdown","8098a883":"markdown"},"source":{"ed5669cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","661878df":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsexposurecsv\/exposure.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'exposure.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","21fdf1e9":"df.isnull().sum()","41ab24d4":"cnt_srs = df['Income classification according to WB'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Blues',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Income classification according to World Bank',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Income classification according to WB\")","cbe68110":"cnt_srs = df['General government gross debt Percent of GDP 2019'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Reds',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='General government gross debt Percent of GDP 2019',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"General government gross debt Percent of GDP 2019\")","dd2eb652":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set2')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","73c833ae":"plot_count(\"Covid_19_Economic_exposure_index\", \"Covid-19 Economic Exposure Index\", df,4)","374d37ad":"ax = df['GHRP'].value_counts().plot.barh(figsize=(14, 6))\nax.set_title('GHRP', size=18)\nax.set_ylabel('GHRP', size=14)\nax.set_xlabel('Count', size=14)","4fc0a99f":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('tourism dependence').size()\/df['tourism as percentage of GDP'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","eb885a75":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('primary commodity export dependence').size()\/df['Fuels ores and metals exports percent of total merchandise exports'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","689e70c1":"fig = px.bar(df, x= \"Remittances\", y= \"Volume of remittances in USD as a proportion of total GDP percent 2014-18\", color_discrete_sequence=['crimson'], title='Remittances as a proportion of total GDP % 2014-18')\nfig.show()","34478fe8":"fig = px.bar(df, x= \"Foreign direct investment\", y= \"Foreign direct investment, net inflows percent of GDP\", color_discrete_sequence=['#27F1E7'], title='Foreign direct investment,inflows % of GDP')\nfig.show()","1a7cbce2":"fig = px.bar(df, x= \"Government indeptedness\", y= \"General government gross debt Percent of GDP 2019\", color_discrete_sequence=['darksalmon'], title='Government gross debt, GDP 2019')\nfig.show()","92fab64f":"fig = px.line(df, x=\"Covid_19_Economic_exposure_index\", y=\"country\", color_discrete_sequence=['darkseagreen'], \n              title=\"Covid-19 Economic Exposure Index\")\nfig.show()","4a8d415f":"sns.countplot(x=\"Net_ODA_received_perc_of_GNI\",data=df,palette=\"GnBu_d\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\nplt.title(\"Net ODA received % of GNI\")\n# changing the font size\nsns.set(font_scale=1)","c0dc914d":"fig = px.line(df, x=\"Total reserves in months of imports 2018\", y=\"Foreign currency reserves\", color_discrete_sequence=['purple'], \n              title=\"Total reserves in months of imports\")\nfig.show()","6c2aaed6":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#a83a32','#a8324e','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Shh! @mpwolke' )    ","c6687a6c":"#Economic exposure, by  Ben Gardiner\n\nAt a local level, lockdown and social distancing are causing immediate challenges of unknown duration, but the degree of economic exposure a local area faces will largely depend upon two factors:\n\nThe sector-occupation-mix: the structure of a local economy, and the effects of the lockdown on dependent industries (possibly elsewhere in the world) as well as the impact of a country\u2019s own measures. \n\nAt the worker and firm level: the likelihood of remaining employed or in business, as well as the ability to financially withstand a lockdown. With income or salary support still to be paid can people and businesses hang on long enough?\n\nSo, local exposure depends on the relative concentration of vulnerable workers, firms and industries.\nhttps:\/\/www.camecon.com\/blog\/modelling-the-local-economic-impacts-of-the-coronavirus\/","7591d03d":"That's messy, I made it just to explain Net ODA above.","96c8d97e":"#Covid-19 Economic Exposure Index\n\nCountry's economic exposure due to COVID-19. Composite indicator based on World Bank's datasets on remittances, food import dependence, primary commodity export dependence, tourism dependence, government indebtedness and foreign currency reserves.\nhttps:\/\/data.humdata.org\/dataset\/covid-19-economic-exposure-index","a31c194c":"![](https:\/\/www.camecon.com\/wp-content\/uploads\/2020\/04\/2020-04-30-BG-Chart-1.png)https:\/\/www.camecon.com\/blog\/modelling-the-local-economic-impacts-of-the-coronavirus\/","8098a883":"#Net official development assistance (ODA)\n\nNet ODA consists of disbursements of loans made on concessional terms (net of repayments of principal) and grants by official agencies of the members of the Development Assistance Committee (DAC), by multilateral institutions, and by non-DAC countries to promote economic development and welfare in countries and territories in the DAC list of ODA recipients. It includes loans with a grant element of at least 25 percent (calculated at a rate of discount of 10 percent).https:\/\/www.indexmundi.com\/facts\/indicators\/DT.ODA.ODAT.GN.ZS"}}