{"cell_type":{"7a56ac91":"code","888b9e46":"code","a9e42614":"code","c29e7752":"code","1ad00a1b":"code","b6da7307":"code","97550a84":"code","3e4c0a74":"code","e9c4a771":"code","cf507855":"code","82c4119f":"code","6136415a":"code","3146481c":"code","5cc597a6":"code","d90572f0":"code","35038e9f":"code","27c4a772":"code","84ea83a4":"code","86b14659":"code","9ec79ef7":"code","860296ae":"code","65f00b04":"code","7626aa56":"code","85085a8d":"markdown","57858cad":"markdown","bf7f7e6e":"markdown","30574087":"markdown","6aaa012a":"markdown","4b868db2":"markdown","f333c4d5":"markdown"},"source":{"7a56ac91":"import os\nimport re\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\n%config Completer.use_jedi = False","888b9e46":"df = pd.read_csv('mobile_prices.csv')","a9e42614":"df.head()\n","c29e7752":"#clean the data in price column: covert to number\n# Return nan for prices which are listed as negotiable\n\ndef extract_num(row):\n    try:\n        amount = row.split(' ')[-1] \n        return int(re.sub(r'[.,]', '', amount))\n    except:\n        np.nan\n\n    ","1ad00a1b":"df['Price']= df['Price'].apply(extract_num)","b6da7307":"df['Price']","97550a84":"#create city and district column\ndf['City']= df['Location'].apply(lambda x: x.split(',')[0])\ndf['District']= df['Location'].apply(lambda x: x.split(',')[1])\ndf.head()","3e4c0a74":"df = df.drop('Location', axis=1)","e9c4a771":"print(df.describe())","cf507855":"print(df.drop(\"Price\", axis=1).describe())","82c4119f":"df.isnull().sum()","6136415a":"#heatmap\nplt.figure(figsize=(12,6))\nsns.heatmap(df.isnull(),cmap=\"YlGnBu\", yticklabels = False)","3146481c":"df.head()","5cc597a6":"top_10_brand = df[[\"published_date\", \"Brand\"]].groupby(\"Brand\").agg(['count'])['published_date']['count'].sort_values(ascending=False)[:10]\n\ntop_10_brand","d90572f0":"# Top 10 Cities by Number of phones stold\nfig = sns.barplot( x = top_10_brand.index, y = top_10_brand.values)\nfig.set_xticklabels(labels=top_10_brand.index , rotation=45)\nfig.set_ylabel(\"Number of Mobile Phones in the Dataset\")\nfig.set_xlabel(\"Mobile Brand\")\nfig.set_title(\"Most Popular Mobile Phone Brand\");","35038e9f":"# Top 10 Districts by Number of Mobile phones sold\n\ntop_10_dist = df[[\"published_date\", \"District\"]].groupby(\"District\").agg(['count'])[\"published_date\"]['count'].sort_values(ascending=False)[:10]\nfig = sns.barplot( x = top_10_dist.index, y = top_10_dist.values)\nfig.set_xticklabels(labels=top_10_dist.index , rotation=45)\nfig.set_ylabel(\"Number of Mobile Phones in the Dataset\")\nfig.set_xlabel(\"District Name\")\nfig.set_title(\"Top 10 Districts by Number of Phones Sold\");","27c4a772":"# Distibution of seller types\nfig = sns.countplot(data=df,x='Seller_type')\nfig.set_ylabel('number of sellers')\nfig.set_title('seller type distribution')","84ea83a4":"df.head()","86b14659":"# Top 10 Sellers by Number of Mobile phones sold\ntop_10_sell = df[['published_date','Seller_name']].groupby('Seller_name').agg(['count'])['published_date']['count'].sort_values(ascending= False)[:10]","9ec79ef7":"fig= sns.barplot(x=top_10_sell.index, y = top_10_sell.values)\nfig.set_title('top 10 sellers by number of phone sold')\nfig.set_ylabel(\"Number of Mobile Phones in the Dataset\")\nfig.set_xticklabels(labels=top_10_sell.index, rotation= 45)","860296ae":"# Top 10 Sellers by Total Revenue of phones sold\ntop_10_sell = df[['Price', 'Seller_name']].groupby('Seller_name').agg(['sum'])['Price']['sum'].sort_values(ascending=False)[:10]\nfig= sns.barplot(x= top_10_sell.index, y=top_10_sell.values)\nfig.set_xticklabels(labels=top_10_sell.index, rotation=90)","65f00b04":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","7626aa56":"# Visualize most popular features in phones\nphone_features = \"\"\nfor idx, row in df.iterrows():\n    if isinstance(row.Features, str):\n        phone_features += \" \".join(row.Features.split(\", \"))\n        \n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(background_color='black',max_font_size = 50, collocations=False).generate(phone_features)\n\n\n# Display the generated image:\nplt.figure( figsize=(10,6) )\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","85085a8d":"**This notebook inspired by LASAL JAYAWARDENA and I use it for researching only!!**\n\n**Thanks for sharing!**\n","57858cad":"### Data Viz","bf7f7e6e":"1. import data\n2. clear data: \n * conver data in Price column\n * seperate Location to City and District\n3. EDA\n * check stats of dataframe\n *  Checking the null values \n * creaete heatmap\n4. Data viz\n    * Most popular Mobile Brand\n    * Most popular Mobile Model.\n    * Top 10 Cities by Number of phones stold\n    * Top 10 Districts by Number of Mobile phones stold\n    * Distibution of seller types\n    * Top 10 Sellers by Number of Mobile phones stold\n    * Top 10 Sellers by Total Revenue of phones stold\n    * Visualize most popular features in phones\n    * Create and generate a word cloud image\n    * Display the generated image\n\n\n","30574087":"### Data Cleaning","6aaa012a":"### Load the Data","4b868db2":"### EDA","f333c4d5":"### Import Libraries"}}