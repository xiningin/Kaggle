{"cell_type":{"840a056e":"code","984778e5":"code","6145aad7":"code","9ac25915":"code","4b13d6ac":"code","c426bb03":"code","d8f66708":"code","d607a280":"code","0b35e017":"code","47d9a8dc":"code","6b6fd708":"code","ca694d88":"code","862ec44d":"code","65db6b04":"code","02c07964":"code","c8f95097":"code","e2e7df04":"code","284605d7":"markdown","237c2f68":"markdown","d5ecf135":"markdown","fb2345e0":"markdown","4b3d5a4e":"markdown","101076e4":"markdown","50e38cc7":"markdown","98eb9a41":"markdown","0058996f":"markdown","97d89df8":"markdown","f4455eca":"markdown","a3a90f36":"markdown","7b17379c":"markdown","42351a1c":"markdown"},"source":{"840a056e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nimport scipy.misc\nimport imageio\nfrom matplotlib.pyplot import imread\nimport matplotlib.patches as mpatches\nfrom matplotlib.collections import PatchCollection\nimport matplotlib.colors as colors\nwarnings.filterwarnings('ignore')\n%matplotlib inline","984778e5":"df = pd.read_csv('..\/input\/csgo-matchmaking-damage\/mm_master_demos.csv', index_col=0)\nmap_bounds = pd.read_csv('..\/input\/csgo-matchmaking-damage\/map_data.csv', index_col=0)\ndf.head()\n","6145aad7":"map_bounds.head()","9ac25915":"active_duty_maps = ['de_cache', 'de_cbble', 'de_dust2', 'de_inferno', 'de_mirage', 'de_overpass', 'de_train']\ndf = df[df['map'].isin(active_duty_maps)]\ndf = df.reset_index(drop=True)\nmd = map_bounds.loc[df['map']]\nmd[['att_pos_x', 'att_pos_y', 'vic_pos_x', 'vic_pos_y']] = (df.set_index('map')[['att_pos_x', 'att_pos_y', 'vic_pos_x', 'vic_pos_y']])\nmd['att_pos_x'] = (md['ResX']*(md['att_pos_x']-md['StartX']))\/(md['EndX']-md['StartX'])\nmd['att_pos_y'] = (md['ResY']*(md['att_pos_y']-md['StartY']))\/(md['EndY']-md['StartY'])\nmd['vic_pos_x'] = (md['ResX']*(md['vic_pos_x']-md['StartX']))\/(md['EndX']-md['StartX'])\nmd['vic_pos_y'] = (md['ResY']*(md['vic_pos_y']-md['StartY']))\/(md['EndY']-md['StartY'])\ndf[['att_pos_x', 'att_pos_y', 'vic_pos_x', 'vic_pos_y']] = md[['att_pos_x', 'att_pos_y', 'vic_pos_x', 'vic_pos_y']].values","4b13d6ac":"print(\"Total Number of Rounds: %i\" % df.groupby(['file', 'round'])['tick'].first().count())","c426bb03":"avail_pistols = ['USP', 'Glock', 'P2000', 'P250', 'Tec9', 'FiveSeven', 'Deagle', 'DualBarettas', 'CZ']\n\ndf_pistol = df[(df['round'].isin([1,16])) & (df['wp'].isin(avail_pistols))]\nprint(\"Total Number of Pistol Rounds: %i\" % df_pistol.groupby(['file', 'round'])['tick'].first().count())","d8f66708":"pistol_buys = df_pistol.groupby(['file', 'round', 'att_side', 'wp'])['hp_dmg'].first()\n(pistol_buys.groupby(['wp']).count()\/pistol_buys.groupby(['wp']).count().sum())*100.","d607a280":"smap = 'de_dust2'\nbg = imread('..\/input\/csgo-matchmaking-damage\/'+smap+'.png')\nfig, (ax1, ax2) = plt.subplots(1,2,figsize=(18,16))\nax1.grid(b=True, which='major', color='w', linestyle='--', alpha=0.25)\nax2.grid(b=True, which='major', color='w', linestyle='--', alpha=0.25)\nax1.imshow(bg, zorder=0, extent=[0.0, 1024, 0., 1024])\nax2.imshow(bg, zorder=0, extent=[0.0, 1024, 0., 1024])\nplt.xlim(0,1024)\nplt.ylim(0,1024)\n\nplot_df = df_pistol.loc[(df_pistol.map == smap) & (df_pistol.att_side == 'Terrorist')]\nsns.kdeplot(plot_df['att_pos_x'], plot_df['att_pos_y'], cmap='YlOrBr', bw=15, ax=ax1)\nax1.set_title('Terrorists Attacking')\n\nplot_df = df_pistol.loc[(df_pistol.map == smap) & (df_pistol.att_side == 'CounterTerrorist')]\nsns.kdeplot(plot_df['att_pos_x'], plot_df['att_pos_y'], cmap='Blues', bw=15, ax=ax2)\nax2.set_title('Counter-Terrorists Attacking')","0b35e017":"df_pistol.groupby(['file', 'round', 'wp', 'att_id'])['hp_dmg'].sum().groupby('wp').agg(['count', 'mean']).sort_values(by='mean')","47d9a8dc":"df_pistol[~df_pistol['bomb_site'].isnull()].groupby(['file', 'map', 'round', 'bomb_site'])['tick'] \\\n        .first().groupby(['map', 'bomb_site']).count().unstack('bomb_site')","6b6fd708":"bomb_prob_overall = df_pistol[~df_pistol['bomb_site'].isnull()].groupby(['file', 'round', 'map', 'bomb_site', 'winner_side'])['tick'].first().groupby(['map', 'bomb_site', 'winner_side']).count()\nbomb_prob_overall_pct = bomb_prob_overall.groupby(level=[0,1]).apply(lambda x: 100 * x \/ float(x.sum()))\nbomb_prob_overall_pct.unstack('map')","ca694d88":"df_pistol['XvX'] = np.nan\nfor k,g in df_pistol.groupby(['file', 'round']):\n    if((g['is_bomb_planted'] == True).any() == False):\n        continue\n    else:\n        post_plant_survivors = 5-np.floor((g[~g['is_bomb_planted']].groupby('vic_side')['hp_dmg'].sum()\/100.))\n       # df_pistol.loc[g.index, 'XvX'] = \"%iv%i\" % (post_plant_survivors.get('Terrorist', 5), post_plant_survivors.get('CounterTerrorist', 5) )\n        df_pistol.loc[g.index, 'XvX'] = post_plant_survivors.get('Terrorist', 5) - post_plant_survivors.get('CounterTerrorist', 5)","862ec44d":"bomb_prob = df_pistol[~df_pistol['XvX'].isnull()].groupby(['file', 'round', 'map', 'bomb_site', 'XvX', 'winner_side'])['tick'].first().groupby(['XvX', 'map', 'bomb_site', 'winner_side']).count()\nbomb_prob_pct = bomb_prob.groupby(level=[0,1,2]).apply(lambda x: 100 * x \/ float(x.sum()))\nbomb_prob_pct.xs('Terrorist', level=3).unstack(['XvX', 'bomb_site']).fillna(0)","65db6b04":"callouts = {\n    'de_cache': {\n        'B inner': [[310,782,413,865]],\n        'A inner': [[278,165,388,320]]\n    },\n    'de_cbble': {\n        'B inner': [[625,626,720,688]],\n        'A inner': [[134,746,225,861]]\n    },\n    'de_train': {\n        'B inner': [[405,754,607,812]],\n        'A inner': [[582,462,713,539]]\n    },\n    'de_dust2': {\n        'B inner': [[162,99,256,199]],\n        'A inner': [[786,182,846,239]]\n    },\n    'de_mirage': {\n        'B inner': [[188,245,286,345]],\n        'A inner': [[498,737,610,835]]\n    },\n    'de_inferno': {\n        'B inner': [[410,115,548,320]],\n        'A inner': [[783,638,877,765]]\n    },\n    'de_overpass': {\n        'B inner': [[686,294,745,359]],\n        'A inner': [[452,174,560,272]]\n    },\n}\n\ndef find_callout(x,y,m,buffer=10): \n    callout = 'N\/A'\n    for c,coord in callouts[m].items():\n        for box in coord:\n            if ((box[2]+buffer >= x >= box[0]-buffer) & \n                (buffer+(1024-box[1]) >= y >= (1024-box[3])-buffer)):\n                    callout = c\n    return callout","02c07964":"smap = 'de_dust2'\n\ndef calc_plot_coord(l):\n    tx,ty,bx,by = l\n    by = 1024-by; ty=1024-ty;\n    w = bx-tx; h= ty-by;\n    return (tx,by,w,h)\n\nbg = imread('..\/input\/csgo-matchmaking-damage\/'+smap+'.png')\nfig, ax = plt.subplots(figsize=(10,10))\nax.grid(b=True, which='major', color='w', linestyle='--', alpha=0.25)\nax.imshow(bg, zorder=0, extent=[0.0, 1024, 0., 1024])\nplt.xlim(0,1024)\nplt.ylim(0,1024)\npatches = []\nfor k,coords in callouts[smap].items():\n    for c in coords:\n        x,y,w,h = calc_plot_coord(c)\n        patches.append(mpatches.Rectangle((x,y),w,h))\n        plt.text(x+w\/2.3,y+h\/2.3, s=k, size= 8, color='w')\ncolors = np.linspace(0, 1, len(patches))\ncollection = PatchCollection(patches, cmap=plt.cm.hsv, alpha=0.4)\ncollection.set_array(np.array(colors))\nax.add_collection(collection)","c8f95097":"bomb_dist = df_pistol[(df_pistol['XvX'].isin([-1, 0, 1]))\n                     &(~df_pistol['bomb_site'].isnull())\n                     &((df_pistol['vic_side'] == 'Terrorist') | (df_pistol['att_side'] == 'Terrorist'))]\n\nbomb_dist['att_callout'] = bomb_dist.apply(lambda x: find_callout(x['att_pos_x'], x['att_pos_y'], x['map'], buffer=5), axis=1)\nbomb_dist['vic_callout'] = bomb_dist.apply(lambda x: find_callout(x['vic_pos_x'], x['vic_pos_y'], x['map'], buffer=5), axis=1)","e2e7df04":"bomb_dist_total_dmg_att = bomb_dist.groupby(['file', 'map', 'round', 'att_callout', 'att_id'])['hp_dmg'].sum()\nbomb_dist_total_dmg_vic = bomb_dist.groupby(['file', 'map', 'round', 'vic_callout', 'vic_id'])['hp_dmg'].sum()\ndmg_dealt = bomb_dist_total_dmg_att.groupby(['map', 'att_callout']).agg(['count', 'mean'])\ndmg_rec = bomb_dist_total_dmg_vic.groupby(['map', 'vic_callout']).agg(['count', 'mean'])\ndmg_diff = dmg_dealt['mean'] - dmg_rec['mean']\ndmg_diff.unstack('att_callout')","284605d7":"\n---\n\n### ADR by Pistols\n\nNext let's take a look at the average damage per round dealt by a player given their pistol.  Note that if they had picked up a pistol during the round, it does get counted separately.  However, given that most pistol kills are headshots, it shouldn't skew the statistic that much (especially for USPS).","237c2f68":"Now we can calculate the Win probabilities by advantages, note that I isolate for just Terrorist because having CT columns (which is redundant), muddles the table.","d5ecf135":"### Pistol Round Buys\n\nLet's first start by taking only pistol rounds and count the number of rounds","fb2345e0":"Now let's convert the coordinates of T attackers or victims to callouts (either N\/A: outer site or Inner A\/Inner B)","4b3d5a4e":"---\n\n### Post-plant Win Probabilities by Advantages\n\nThis one could be further disseminated but we want to be able to look at the win probabilities post plant given the context of how many Ts and CTs are alive at that time.  First, we can look at overall statistic:","101076e4":"Looks like Glock\/USP trumps over most pistols.\n\n---\n\n### Heatmaps of Frequency of Pistol Damage\n\nNext we can look at what are the most frequent spots when attacking as a T.  To keep it short, I will just do it on dust2 but changing `smap` will work on any map within `active_duty_maps`","50e38cc7":"# Pistol Round Analysis\n\n\nThe following questions will be answered in this notebook:\n\n1. What are the most common pistol round buys?\n- What is the ADR by each pistol on pistol rounds?\n- What sites do bomb get planted the most on pistol rounds?\n- After bomb gets planted at A\/B Site, for all XvX situation, what is the win Probability for Ts?\n- In a 1v1, 1v2, 2v1, 2v2, should players play out of site\/in-site or one-in one-out to deal the most damage while receiving the least?","98eb9a41":"__Deagle has a massive advantage in damage__\n\n---\n\n### Bomb Site Plants\n\nLet's now look at the Number of bomb plants by site.  This statistic tells us the T's preferences for deciding which site to take during the round.  Although the possibility of rotates are always there, it gives us a good idea of what to expect.","0058996f":"Next we can first find for each round the post-plant situation (if it was planted at all) and calculate advantages.  I've given two options (XvX) or more generally by differences (e.g 5 Ts - 3 CTs = 2).","97d89df8":"Let's first start by looking at pistol round buys.  We infer this from the damage dealt by pistols each round.  There is a bias here where if you did 0 damage with that pistol you had, then it doesn't get counted.  The potential bias is that aim punch will make most weapons get undercounted but I don't think it's a large issue.","f4455eca":"Let's see an example of this on dust2","a3a90f36":"### Data Prep\n\nLet's first only isolate for active duty maps as they are the maps that most competitive players really care about.  I also want to first convert the in-game coordinates to overhead map coordinates.","7b17379c":"---\n\n### In\/Out-of-site ADR\n\nI've always wondered if it's better to play post-plants in-site our out-of-site during a one-man up\/down or equal situation. In-site has the advantage of peeking when the CTs are clearing outer-site spots but the con of being in a spot where you are forced to duel the CTs. Outer-site has pro of baiting shots and playing time but having to peek into the CT when he is defusing. Let's isolate for only 1v1, 2v1, 1v2, 2v2 situations and look at average ADR differential when you play inner site or outer site.\n\nBefore we do that though, we have to define what is considered Inner\/Outer site.  Using some basic rectangles, I can draw sites on the map and then define them via simple top-left, bottom-right coordinates.","42351a1c":"Now we can calculate ADR by site"}}