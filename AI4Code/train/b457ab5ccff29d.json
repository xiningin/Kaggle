{"cell_type":{"8389a963":"code","5ae2948f":"code","5ef58275":"code","76a6df2f":"code","73737e52":"code","1f2923af":"code","15e745ce":"code","ced48474":"code","b41e2e4f":"code","74dc8b0f":"code","a4fd8a77":"code","0be8e52f":"code","a0a2aa3f":"code","fab18d0e":"code","43556f12":"code","207cb326":"markdown","8d3302ca":"markdown","ebfaf961":"markdown","03eec4f6":"markdown","6a82a103":"markdown","1e915d7a":"markdown","252b8368":"markdown","51eb5bba":"markdown"},"source":{"8389a963":"#DeepLearning #GoogleBrain\n#Built models easier, faster and more reproductible","5ae2948f":"import pandas as pd\nfrom sklearn.model_selection import train_test_split","5ef58275":"df = pd.read_csv(\"\/kaggle\/input\/churn-nicknochnack\/Churn.csv\")","76a6df2f":"X = pd.get_dummies(df.drop(['Churn', 'Customer ID'], axis=1))\ny = df['Churn'].apply(lambda x: 1 if x=='Yes' else 0)","73737e52":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2)","1f2923af":"y_train.head()","15e745ce":"from tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.layers import Dense\nfrom sklearn.metrics import accuracy_score","ced48474":"model = Sequential()\nmodel.add(Dense(units=32, activation='relu', input_dim=len(X_train.columns)))\nmodel.add(Dense(units=64, activation='relu'))\nmodel.add(Dense(units=1, activation='sigmoid'))","b41e2e4f":"model.compile(loss='binary_crossentropy', optimizer='sgd', metrics='accuracy')","74dc8b0f":"model.fit(X_train, y_train, epochs=200, batch_size=32)","a4fd8a77":"y_hat = model.predict(X_test)\ny_hat = [0 if val < 0.5 else 1 for val in y_hat]","0be8e52f":"accuracy_score(y_test, y_hat)","a0a2aa3f":"model.save('tfmodel')","fab18d0e":"del model","43556f12":"model = load_model('tfmodel')","207cb326":"What is tensorflow : [click here]( https:\/\/www.tensorflow.org\/)","8d3302ca":"<h1>0. Import Data","ebfaf961":"<h1>1. Import Dependencies","03eec4f6":"<h1>4. Saving and Reloading","6a82a103":"<h1>3. Fit, Predict and Evaluate","1e915d7a":"<h1>2. Build and Compile Model","252b8368":"**Plan:** \n    \n- Building a TensorFlow churn model\n- Training and Predicting\n- Saving your model and reloading","51eb5bba":"**Ressources:** \n    \n- https:\/\/youtu.be\/6_2hzRopPbQ?list=PLgNJO2hghbmjpjt9sa2POi4U0a1-GGTlj\n\n- https:\/\/github.com\/nicknochnack\/Tensorflow-in-10-Minutes"}}