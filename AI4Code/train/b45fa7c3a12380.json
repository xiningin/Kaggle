{"cell_type":{"0b9e1e09":"code","1261c799":"code","735ecd7c":"code","36266793":"code","ab0d14d6":"code","46ed6ad8":"code","1044e08b":"code","77d8ab62":"code","35b69dd8":"code","07c059b7":"code","63a3d4df":"code","5d8fa784":"code","8e9151ee":"code","63ed20b9":"code","5ba2be25":"code","5e5053d6":"code","6fe774a6":"code","52831fc9":"code","a760c14c":"code","3250927f":"code","260955c7":"code","30e7bc06":"code","fea73438":"code","93b22d5f":"code","1f407201":"code","a69d3756":"code","c0bd749c":"code","f62e2501":"code","f41c94d2":"markdown","815f61a7":"markdown","83fe0c3f":"markdown","1a9cd4d4":"markdown","4d744dc7":"markdown","0b4252bf":"markdown","bb198aed":"markdown","0e79fa84":"markdown","236fb138":"markdown","768775e1":"markdown","feeaa146":"markdown","3a099974":"markdown","83763fcc":"markdown","93472414":"markdown","33ea2d73":"markdown","20f55c33":"markdown","e70f8c41":"markdown"},"source":{"0b9e1e09":"from fastai import *\nfrom fastai.text import *\n\nfrom scipy.stats import spearmanr","1261c799":"def seed_everything(seed):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed(seed)\n    torch.backends.cudnn.deterministic = True\n\nSEED = 999\nseed_everything(SEED)","735ecd7c":"data_dir = '..\/input\/google-quest-challenge\/'\n!ls {data_dir}","36266793":"train_raw = pd.read_csv(f'{data_dir}train.csv')\ntrain_raw.head()","ab0d14d6":"test_raw = pd.read_csv(f'{data_dir}test.csv')\ntest_raw.head()","46ed6ad8":"train_raw.shape, test_raw.shape","1044e08b":"# randomly shuffle our data\ntrain_raw = train_raw.sample(frac=1, random_state=1).reset_index(drop=True)","77d8ab62":"val_count = 1000\ntrn_count = train_raw.shape[0] - val_count\n\ndf_val = train_raw[:val_count]\ndf_trn = train_raw[val_count:val_count+trn_count]","35b69dd8":"!mkdir -p ~\/.fastai\/models\/wt103-fwd","07c059b7":"!cp ..\/input\/wt103-fastai-nlp\/lstm_fwd.pth ~\/.fastai\/models\/wt103-fwd\/\n!cp ..\/input\/wt103-fastai-nlp\/itos_wt103.pkl ~\/.fastai\/models\/wt103-fwd\/","63a3d4df":"target_cols = train_raw.columns.tolist()[-30:]","5d8fa784":"data_lm = TextLMDataBunch.from_df('.', df_trn, df_val, test_raw,\n                  include_bos=False,\n                  include_eos=False,\n                  text_cols=['question_body', 'answer'],\n                  label_cols=target_cols,\n                  bs=32,\n                  mark_fields=True,\n                  collate_fn=partial(pad_collate, pad_first=False, pad_idx=0),\n             )","8e9151ee":"data_lm.show_batch()","63ed20b9":"learn = language_model_learner(data_lm, AWD_LSTM, drop_mult=0.5)\nlearn.fit_one_cycle(5, 1e-2)","5ba2be25":"learn.unfreeze()\nlearn.fit_one_cycle(5, 1e-3)","5e5053d6":"learn.save_encoder('ft_enc')","6fe774a6":"data_cls = TextClasDataBunch.from_df('.', df_trn, df_val, test_raw,\n                  include_bos=False,\n                  include_eos=False,\n                  text_cols=['question_body', 'answer'],\n                  label_cols=target_cols,\n                  bs=32,\n                  mark_fields=True,\n                  collate_fn=partial(pad_collate, pad_first=False, pad_idx=0),\n             )","52831fc9":"data_cls.show_batch()","a760c14c":"learn = text_classifier_learner(data_cls, AWD_LSTM, drop_mult=0.5)\nlearn.load_encoder('ft_enc');","3250927f":"learn.fit_one_cycle(7, 1e-2)","260955c7":"learn.freeze_to(-2)\nlearn.fit_one_cycle(3, 1e-3)","30e7bc06":"learn.freeze_to(-3)\nlearn.fit_one_cycle(5, 1e-3)","fea73438":"learn.unfreeze()\nlearn.fit_one_cycle(3, 1e-3)","93b22d5f":"def get_ordered_preds(learn, ds_type, preds):\n  np.random.seed(42)\n  sampler = [i for i in learn.data.dl(ds_type).sampler]\n  reverse_sampler = np.argsort(sampler)\n  preds = [p[reverse_sampler] for p in preds]\n  return preds","1f407201":"val_raw_preds = learn.get_preds(ds_type=DatasetType.Valid)\nval_preds = get_ordered_preds(learn, DatasetType.Valid, val_raw_preds)","a69d3756":"score = 0\nfor i in range(30):\n    score += np.nan_to_num(spearmanr(df_val[target_cols].values[:, i], val_preds[0][:, i]).correlation) \/ 30\nscore","c0bd749c":"test_raw_preds = learn.get_preds(ds_type=DatasetType.Test)\ntest_preds = get_ordered_preds(learn, DatasetType.Test, test_raw_preds)","f62e2501":"sample_submission = pd.read_csv(f'{data_dir}sample_submission.csv')\nsample_submission.head()\n\nsample_submission.iloc[:, 1:] = test_preds[0].numpy()\nsample_submission.to_csv('submission.csv', index=False)\nsample_submission.head()","f41c94d2":"We save the encoder to be able to use it for classification taks.","815f61a7":"### Loading data","83fe0c3f":"### Validation score\n\nI noticed the `learn.get_preds()` method was returning predictions in random order. So let's create a helper function to get the predictions in correct order.","1a9cd4d4":"### Train-validation split\n\nThe train data has only `6079` records. Let's use `1000` records for validation purpose and use rest of the data for training our model.","4d744dc7":"We will use `question_body` and `answer` columns for training our model.\n\nFirst we create a databunch object for our language model -","0b4252bf":"Now let's fine-tune the pre-trained language model -","bb198aed":"### Building classifier","0e79fa84":"Now let's copy the files to the above directory -","236fb138":"Now we create a text classifier learner and load the encoder we previously saved -","768775e1":"### Fine-tuning language model","feeaa146":"Our dataset contains 30 target labels -","3a099974":"Submissions are evaluated on the mean column-wise Spearman's correlation coefficient. Let's see how our model performs on validation data -","83763fcc":"### Submission file","93472414":"Finally we train our classification model -","33ea2d73":"### Imports","20f55c33":"### Test predictions","e70f8c41":"### Pre-trained AWD_LSTM weights\n\nIn order for the \"Submit to Competition\" button to be active, internet must be turned off. So we will get AWD_LSTM pre-trained weights from kaggle dataset.\n\nFirst let's create directory structure for the weight files -"}}