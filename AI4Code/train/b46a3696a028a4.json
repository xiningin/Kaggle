{"cell_type":{"5954030a":"code","f38c833b":"code","9ee59071":"code","9a09f0ed":"code","83f25f3c":"code","48d22761":"code","cb4a61a7":"code","7706c93e":"code","8434a84b":"code","e4258962":"code","32910a77":"code","70664a0d":"code","aa595793":"code","933f7e22":"code","9fbc4632":"code","a7cb3a8a":"code","56c1b58f":"code","da1a7a16":"code","5fe24e60":"code","a6187981":"code","052a4f8b":"code","04af2d45":"code","2729123d":"code","edd328fd":"code","3895c9ed":"markdown"},"source":{"5954030a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f38c833b":"iris=pd.read_csv(\"..\/input\/Iris.csv\")","9ee59071":"iris.head(5)\niris.info()\niris.Species.unique()","9a09f0ed":"iris.drop('Id',axis=1,inplace=True)","83f25f3c":"fig = iris[iris.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='red', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","48d22761":"fig = iris[iris.Species=='Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='blue', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='red', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\"Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()\n","cb4a61a7":"iris.hist(edgecolor='black',linewidth=1,grid=False,color='grey')\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","7706c93e":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=iris)","8434a84b":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics","e4258962":"plt.figure(figsize=(7,4))\nsns.heatmap(iris.corr(),annot=True)\nplt.show()","32910a77":"y_iris=iris.Species\nx_iris=iris.drop(columns='Species')\nprint(x_iris.head())\nprint(y_iris.head())","70664a0d":"X_train, X_test, y_train, y_test = train_test_split(x_iris, y_iris, test_size=0.4, random_state=42)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","aa595793":"X_train.head()","933f7e22":"y_train.head()","9fbc4632":"#Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression()\nmodel.fit(X_train,y_train)\npredicted=model.predict(X_test)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (Logistic Regression) : ',accuracy)","a7cb3a8a":"#K Nearest Neighbors\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nmodel=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train,y_train)\npredicted=model.predict(X_test)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (KNN) : ',accuracy)\nprint(confusion_matrix(y_test,predicted))","56c1b58f":"#Support Vector Machines\nfrom sklearn.svm import SVC\nmodel=SVC(gamma='auto')\nmodel.fit(X_train,y_train)\npredicted=model.predict(X_test)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (SVC) : ',accuracy)","da1a7a16":"#Decission Tree\nfrom sklearn.tree import DecisionTreeClassifier\nmodel=DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\npredicted=model.predict(X_test)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (Decission Tree) : ',accuracy)","5fe24e60":"X_train2=X_train.drop(columns=['SepalLengthCm','PetalLengthCm'])\nX_train2.head()","a6187981":"X_test2=X_test.drop(columns=['SepalLengthCm','PetalLengthCm'])\nX_test2.head()","052a4f8b":"#Logistic Regression\nmodel=LogisticRegression()\nmodel.fit(X_train2,y_train)\npredicted=model.predict(X_test2)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (Logistic Regression) : ',accuracy)","04af2d45":"#K Nearest Neighbors\nmodel=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train2,y_train)\npredicted=model.predict(X_test2)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (KNN) : ',accuracy)\nprint(confusion_matrix(y_test,predicted))","2729123d":"#Support Vector Machines\nmodel=SVC(gamma='auto')\nmodel.fit(X_train2,y_train)\npredicted=model.predict(X_test2)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (SVC) : ',accuracy)\nprint(confusion_matrix(y_test,predicted))","edd328fd":"#Decission Tree\nmodel=DecisionTreeClassifier()\nmodel.fit(X_train2,y_train)\npredicted=model.predict(X_test2)\naccuracy=metrics.accuracy_score(predicted,y_test)\nprint('Accuracy (Decission Tree) : ',accuracy)","3895c9ed":"Now, trying the models with only two features which are least correlated among all 4 features. \nFeatures that i will use now : Petal Width and Sepal Width"}}