{"cell_type":{"17b92bdf":"code","228a9e44":"code","a7572aab":"code","abbfdfae":"code","6b387275":"code","7600df34":"code","0fcbe487":"code","7e2d13bb":"code","ca1bd400":"code","93333083":"code","a47c646a":"code","aedd99dc":"code","e544e6dd":"code","b82b1610":"code","45fa0c0f":"code","eb0b7838":"code","bf3026ec":"code","09e05aee":"code","78f24599":"code","6b0afdb3":"code","f71ff8c4":"code","e4c2cb1b":"code","eba1a1a3":"code","67540588":"code","7623c1b1":"code","adff71ad":"code","237babee":"code","3d470089":"code","b5dc4b7f":"code","360c8f76":"code","171c22ac":"code","b2e4fb82":"code","f47e9aad":"code","bee313d1":"code","d058aa2c":"code","0bea2006":"code","e1cc4b31":"code","d1a2624c":"code","24475c62":"code","0ace4afb":"code","261134a3":"code","9bdaa29c":"code","50e51b86":"code","95c1d3ab":"code","e6c3584b":"code","52bc4691":"code","f9514b9d":"code","822dc8e6":"code","1c0e1822":"code","d25bba04":"code","f67dca50":"code","9a1aae73":"code","f9ca0e77":"code","cbed1271":"code","e7c11648":"markdown","09bab0f7":"markdown","4bd4bac3":"markdown","ceb28a59":"markdown","ddf3a173":"markdown","8fd4bd5a":"markdown","c908b7df":"markdown","1816d5f9":"markdown","c6b81320":"markdown","e385ffe5":"markdown","b2d70b4c":"markdown"},"source":{"17b92bdf":"!pip install fbprophet","228a9e44":"\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nimport datetime\nfrom plotly.subplots import make_subplots\n\nimport requests\nfrom bs4 import BeautifulSoup\nfrom fbprophet import Prophet\nimport seaborn as sns\nimport plotly.express as px\n","a7572aab":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n#data3 = pd.read_csv('..\/kaggle\/geniusdacov\/osb-enftransmcovid19-1.csv')\n","abbfdfae":"#Percentage of NAN Values \nNAN = [(c, data[c].isna().mean()*100) for c in data]\nNAN = pd.DataFrame(NAN, columns=[\"column_name\", \"percentage\"])\nNAN","6b387275":"data[\"Province\/State\"]= data[\"Province\/State\"].fillna('Unknown')\n","7600df34":"data[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =data[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)","0fcbe487":"data['Active_case'] = data['Confirmed'] - data['Deaths'] - data['Recovered']\ndata.head()","7e2d13bb":"Data_col = data [(data['Country\/Region'] == 'Colombia') ].reset_index(drop=True)\n\nData_col['Month'] = pd.DatetimeIndex(Data_col['ObservationDate']).month\nData_col['Day'] = pd.DatetimeIndex(Data_col['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_col.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_col.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_col.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_col.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\n\n\nax1.set_title('Average comparative Per Month')\n\nplt.figure(figsize=(12,7))\n\n\n","ca1bd400":"def prediction(ID, df, periods,columns):\n  # Function that takes in the data frame, storeID, and number of future period forecast\n  # The function then generates date\/columns columns in Prophet format\n  # The function then makes time series predictions\n\n  df = df[ df['Province\/State'] == ID ]\n  df = df[['ObservationDate', columns]].rename(columns = {'ObservationDate': 'ds', columns:'y'})\n  df = df.sort_values('ds')\n  city = ID + '' + columns\n  model    = Prophet()\n  \n  model.fit(df)\n  future   = model.make_future_dataframe(periods=periods)\n  forecast = model.predict(future)\n  figure    = model.plot(forecast, xlabel='Fecha de observaci\u00f3n', ylabel=city)\n  str =  columns + '_' + ID + '_prophetplot.png'\n  figure.savefig(str)\n  figure2  = model.plot_components(forecast)\n  str =  columns + '_trend_' + ID + '_prophetplot.png'\n  figure2.savefig(str)\n \n    ","93333083":"Data_col","a47c646a":"prediction('Capital District', Data_col, 60,'Recovered')\nprediction('Capital District', Data_col, 60,'Active_case')\nprediction('Capital District', Data_col, 60,'Confirmed') \nprediction('Capital District', Data_col, 60,'Deaths')","aedd99dc":"Data_ven = data [(data['Country\/Region'] == 'Venezuela') ].reset_index(drop=True)\n\nData_ven['Month'] = pd.DatetimeIndex(Data_ven['ObservationDate']).month\nData_ven['Day'] = pd.DatetimeIndex(Data_ven['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_ven.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_ven.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_ven.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_ven.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\n\nData_ven['Province\/State'] = Data_ven['Province\/State'].apply(lambda x: 'Venezuela' if x == 'Unknown' else '')\n\n\nax1.set_title('Average comparative Per Month')\n\nplt.figure(figsize=(12,7))\n","e544e6dd":"Data_ven","b82b1610":"prediction('Venezuela', Data_ven, 60,'Recovered')\nprediction('Venezuela', Data_ven, 60,'Active_case')\nprediction('Venezuela', Data_ven, 60,'Confirmed') \nprediction('Venezuela', Data_ven, 60,'Deaths')","45fa0c0f":"Data_per = data [(data['Country\/Region'] == 'Peru') ].reset_index(drop=True)\n\nData_per['Month'] = pd.DatetimeIndex(Data_per['ObservationDate']).month\nData_per['Day'] = pd.DatetimeIndex(Data_per['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_per.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_per.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_per.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_per.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\n\n\nax1.set_title('Average comparative Per Month')\n\nplt.figure(figsize=(12,7))\n","eb0b7838":"prediction('Lima', Data_per, 60,'Recovered')\nprediction('Lima', Data_per, 60,'Active_case')\nprediction('Lima', Data_per, 60,'Confirmed') \nprediction('Lima', Data_per, 60,'Deaths')","bf3026ec":"Data_ecu = data [(data['Country\/Region'] == 'Ecuador') ].reset_index(drop=True)\n\nData_ecu['Month'] = pd.DatetimeIndex(Data_ecu['ObservationDate']).month\nData_ecu['Day'] = pd.DatetimeIndex(Data_ecu['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_ecu.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_ecu.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_ecu.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_ecu.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\nData_ecu['Province\/State'] = Data_ecu['Province\/State'].apply(lambda x: 'Ecuador' if x == 'Unknown' else '')\n\n\nax1.set_title('Average comparative Per Month Ecuador')\n\nplt.figure(figsize=(12,7))","09e05aee":"prediction('Ecuador', Data_ecu, 60,'Recovered')\nprediction('Ecuador', Data_ecu, 60,'Active_case')\nprediction('Ecuador', Data_ecu, 60,'Confirmed') \nprediction('Ecuador', Data_ecu, 60,'Deaths')","78f24599":"Data_bol = data [(data['Country\/Region'] == 'Bolivia') ].reset_index(drop=True)\n\nData_bol['Month'] = pd.DatetimeIndex(Data_bol['ObservationDate']).month\nData_bol['Day'] = pd.DatetimeIndex(Data_bol['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_bol.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_bol.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_bol.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_bol.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\nData_bol['Province\/State'] = Data_bol['Province\/State'].apply(lambda x: 'Bolivia' if x == 'Unknown' else '')\n\n\nax1.set_title('Average comparative Per Month B')\n\nplt.figure(figsize=(12,7))","6b0afdb3":"prediction('Bolivia', Data_bol, 60,'Recovered')\nprediction('Bolivia', Data_bol, 60,'Active_case')\nprediction('Bolivia', Data_bol, 60,'Confirmed') \nprediction('Bolivia', Data_bol, 60,'Deaths')","f71ff8c4":"Data_bras = data [(data['Country\/Region'] == 'Brazil') ].reset_index(drop=True)\n\nData_bras['Month'] = pd.DatetimeIndex(Data_bras['ObservationDate']).month\nData_bras['Day'] = pd.DatetimeIndex(Data_bras['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_bras.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_bras.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_bras.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_bras.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\n\n\nax1.set_title('Sum comparative Per Month Brasil')\n\nplt.figure(figsize=(12,7))\n\n","e4c2cb1b":"Data_bras","eba1a1a3":"prediction('Sao Paulo', Data_bras, 60,'Recovered')\nprediction('Sao Paulo', Data_bras, 60,'Active_case')\nprediction('Sao Paulo', Data_bras, 60,'Confirmed') \nprediction('Sao Paulo', Data_bras, 60,'Deaths')","67540588":"Data_urug = data [(data['Country\/Region'] == 'Uruguay') ].reset_index(drop=True)\n\nData_urug['Month'] = pd.DatetimeIndex(Data_urug['ObservationDate']).month\nData_urug['Day'] = pd.DatetimeIndex(Data_urug['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_urug.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_urug.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_urug.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_urug.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\nData_urug['Province\/State'] = Data_urug['Province\/State'].apply(lambda x: 'Uruguay' if x == 'Unknown' else '')\n\nax1.set_title('Sum comparative Per Month Uruguay')\n\nplt.figure(figsize=(12,7))\n","7623c1b1":"prediction('Uruguay', Data_urug, 60,'Recovered')\nprediction('Uruguay', Data_urug, 60,'Active_case')\nprediction('Uruguay', Data_urug, 60,'Confirmed') \nprediction('Uruguay', Data_urug, 60,'Deaths')","adff71ad":"Data_para = data [(data['Country\/Region'] == 'Paraguay') ].reset_index(drop=True)\n\nData_para['Month'] = pd.DatetimeIndex(Data_para['ObservationDate']).month\nData_para['Day'] = pd.DatetimeIndex(Data_para['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_para.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_para.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_para.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_para.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\nData_para['Province\/State'] = Data_para['Province\/State'].apply(lambda x: 'Paraguay' if x == 'Unknown' else '')\n\nax1.set_title('Sum comparative Per Month Paraguay')\n\nplt.figure(figsize=(12,7))","237babee":"Data_para","3d470089":"prediction('Paraguay', Data_para, 60,'Recovered')\nprediction('Paraguay', Data_para, 60,'Active_case')\nprediction('Paraguay', Data_para, 60,'Confirmed') \nprediction('Paraguay', Data_para, 60,'Deaths')","b5dc4b7f":"Data_arge = data [(data['Country\/Region'] == 'Argentina') ].reset_index(drop=True)\n\nData_arge['Month'] = pd.DatetimeIndex(Data_arge['ObservationDate']).month\nData_arge['Day'] = pd.DatetimeIndex(Data_arge['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_arge.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_arge.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_arge.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_arge.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\nData_arge['Province\/State'] = Data_arge['Province\/State'].apply(lambda x: 'Argentina' if x == 'Unknown' else '')\n\nax1.set_title('Sum comparative Per Month Argentina')\n\nplt.figure(figsize=(12,7))","360c8f76":"Data_arge","171c22ac":"prediction('Argentina', Data_arge, 60,'Recovered')\nprediction('Argentina', Data_arge, 60,'Active_case')\nprediction('Argentina', Data_arge, 60,'Confirmed') \nprediction('Argentina', Data_arge, 60,'Deaths')","b2e4fb82":"Data_chile = data [(data['Country\/Region'] == 'Chile') ].reset_index(drop=True)\n\nData_chile['Month'] = pd.DatetimeIndex(Data_chile['ObservationDate']).month\nData_chile['Day'] = pd.DatetimeIndex(Data_chile['ObservationDate']).day\n\nfig = plt.figure()\nax1 = fig.add_subplot(111)\n\n\nData_chile.groupby('Month')[['Active_case']].mean().plot(ax=ax1, marker = 'o', color = 'r')\nData_chile.groupby('Month')[['Deaths']].mean().plot(ax=ax1, marker = '^', color = 'b')\nData_chile.groupby('Month')[['Recovered']].mean().plot(ax=ax1, marker = '', color = 'g')\nData_chile.groupby('Month')[['Confirmed']].mean().plot(ax=ax1, marker = '', color = 'y')\n\n\nax1.set_title('Sum comparative Per Month Chile')\n\nplt.figure(figsize=(12,7))\n\n\n","f47e9aad":"Data_chile","bee313d1":"\nprediction('Antofagasta', Data_chile, 60,'Recovered')\nprediction('Antofagasta', Data_chile, 60,'Active_case')\nprediction('Antofagasta', Data_chile, 60,'Confirmed') \nprediction('Antofagasta', Data_chile, 60,'Deaths')","d058aa2c":"Data_col_last = Data_col[Data_col['ObservationDate'] == max(Data_col['ObservationDate'])].reset_index()\nData_col_last\n\n\n\nleft_df3        = Data_col[Data_col['Province\/State'] == 'Capital District']\nleft_df3a        = Data_col[Data_col['Province\/State'] == 'Atlantico']\nleft_df4        = Data_col[Data_col['Province\/State'] == 'Valle del Cauca']\nleft_df4b        = Data_col[Data_col['Province\/State'] == 'Antioquia']\nleft_df5        = Data_col[Data_col['Province\/State'] == 'Bolivar']\nleft_df6        = Data_col[Data_col['Province\/State'] == 'Cundinamarca']\nleft_df7        = Data_col[Data_col['Province\/State'] == 'Narino']\nleft_df8        = Data_col[Data_col['Province\/State'] == 'Magdalena']\nleft_df9        = Data_col[Data_col['Province\/State'] == 'Sucre']\nleft_df9a        = Data_col[Data_col['Province\/State'] == 'Choco']\n\n\nplt.figure(figsize=(12,7))\n\nsns.kdeplot(left_df3['Active_case'], label = 'Active cases Bogota', shade = True, color = 'black')\nsns.kdeplot(left_df3a['Active_case'], label = 'Active cases Atlantico', shade = True, color = 'orange')\nsns.kdeplot(left_df4['Active_case'], label = 'Active cases Valle del Cauca', shade = True, color = 'b')\nsns.kdeplot(left_df4b['Active_case'], label = 'Active cases Antioquia', shade = True, color = 'g')\nsns.kdeplot(left_df5['Active_case'], label = 'Active cases Bolivar', shade = True, color = 'c')\nsns.kdeplot(left_df6['Active_case'], label = 'Active cases Cundinamarca', shade = True, color = 'm')\nsns.kdeplot(left_df7['Active_case'], label = 'Active cases Narino', shade = True, color = 'y')\nsns.kdeplot(left_df8['Active_case'], label = 'Active cases Magdalena', shade = True, color = 'silver')\nsns.kdeplot(left_df9['Active_case'], label = 'Active cases Sucre', shade = True, color = 'plum')\nsns.kdeplot(left_df9a['Active_case'], label = 'Active cases Choco', shade = True, color = 'cyan')\n\n\n\n\n\n\nplt.xlabel('Active_case Top ten colombia Comparative by city')\n\n\n","0bea2006":"\n\nplt.figure(figsize=(12,7))\n\nsns.kdeplot(left_df3['Deaths'], label = 'Deaths cases Bogota', shade = True, color = 'black')\nsns.kdeplot(left_df3a['Deaths'], label = 'Deaths Atlantico', shade = True, color = 'orange')\nsns.kdeplot(left_df4['Deaths'], label = 'Deaths cases Valle del Cauca', shade = True, color = 'b')\nsns.kdeplot(left_df4b['Deaths'], label = 'Deaths cases Antioquia', shade = True, color = 'g')\nsns.kdeplot(left_df5['Deaths'], label = 'Deaths cases Bolivar', shade = True, color = 'c')\nsns.kdeplot(left_df6['Deaths'], label = 'Deaths cases Cundinamarca', shade = True, color = 'm')\nsns.kdeplot(left_df7['Deaths'], label = 'Deaths cases Narino', shade = True, color = 'y')\nsns.kdeplot(left_df8['Deaths'], label = 'Deaths cases Magdalena', shade = True, color = 'silver')\nsns.kdeplot(left_df9['Deaths'], label = 'Deaths cases Sucre', shade = True, color = 'plum')\nsns.kdeplot(left_df9a['Deaths'], label = 'Deaths cases Choco', shade = True, color = 'cyan')\n\n\n\n\nplt.xlabel('Deaths Top ten colombia Comparative by city')\n\n\n\n\n\n","e1cc4b31":"\n\nplt.figure(figsize=(12,7))\n\nsns.kdeplot(left_df3['Recovered'], label = 'Recovered cases Bogota', shade = True, color = 'black')\nsns.kdeplot(left_df3['Recovered'], label = 'Recovered cases Atlantico', shade = True, color = 'orange')\n\nsns.kdeplot(left_df4['Recovered'], label = 'Recovered cases Valle del Cauca', shade = True, color = 'b')\nsns.kdeplot(left_df4b['Recovered'], label = 'Recovered cases Antioquia', shade = True, color = 'g')\nsns.kdeplot(left_df5['Recovered'], label = 'Recovered cases Bolivar', shade = True, color = 'c')\nsns.kdeplot(left_df6['Recovered'], label = 'Recovered cases Cundinamarca', shade = True, color = 'm')\nsns.kdeplot(left_df7['Recovered'], label = 'Recovered cases Narino', shade = True, color = 'y')\nsns.kdeplot(left_df8['Recovered'], label = 'Recovered cases Magdalena', shade = True, color = 'silver')\nsns.kdeplot(left_df9['Recovered'], label = 'Recovered cases Sucre', shade = True, color = 'plum')\nsns.kdeplot(left_df9a['Recovered'], label = 'Recovered cases Choco', shade = True, color = 'cyan')\n\n\n\n\nplt.xlabel('Recovered Top ten colombia Comparative by city')","d1a2624c":"Data_col_last3 = Data_col_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\nData_col_last3","24475c62":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_col_last3.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_col_last3, values=values, names=labels, color_discrete_sequence=['royalblue','green','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in Colombia : '+str(Data_col_last3[\"Confirmed\"][0]),\n)\n\n\n\n\n","0ace4afb":"\nData_col_per_state = Data_col_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\nData_col_per_state","261134a3":"correlations = Data_col_per_state.corr()['Active_case'].sort_values()\ncorrelations","9bdaa29c":"correlations = Data_col_per_state.corr()\nf, ax = plt.subplots(figsize = (20, 20))\nsns.heatmap(correlations, annot = True)","50e51b86":"Data_col_per_state.describe()\n# Average confirmed 6000, deaths 03 , recovered 2817 , active case  297\n","95c1d3ab":"Data_col_per_state.hist(bins = 30, figsize = (20,20), color = 'r')","e6c3584b":"# Let's do the same for the Day and Month\nData_col_per_state = Data_col_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\nData_col_per_state","52bc4691":"\n\npx.scatter(Data_col_per_state, x='Deaths', y='Active_case', color='Province\/State', size='Deaths', title='COVID19 Total Cases growth worst affected ' )","f9514b9d":"\npx.scatter(Data_col_per_state, x='Confirmed', y='Active_case', color='Province\/State', size='Confirmed', title='COVID19 Total Cases growth worst affected ' )\n","822dc8e6":"\n\npx.scatter(Data_col_per_state, x='Recovered', y='Active_case', color='Province\/State', size='Recovered', title='COVID19 Total Cases growth worst affected ' )\n\n","1c0e1822":"px.scatter(Data_col_per_state, x='Active_case', y='Active_case', color='Province\/State', size='Active_case', title='COVID19 Total Cases growth worst affected ' )\n","d25bba04":"Data_col_op= Data_col.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\nData_col_op","f67dca50":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_col_op.index, y=Data_col_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in Colombia',\n        template='plotly_white'\n\n)\n\nfig.show()\n","9a1aae73":"fig = go.Figure()\n\n\nfig.add_trace(go.Scatter(x=Data_col_op.index, y=Data_col_op['Active_case'],\n                    mode='lines',marker_color='yellow',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Acitive cases over time in Colombia',\n        template='plotly_dark'\n\n)\n\nfig.show()","f9ca0e77":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_col_op.index, y=Data_col_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in Colombia',\n        template='plotly_white'\n\n)\n\nfig.show()","cbed1271":"!ls  .\/kaggle\/working\/","e7c11648":"Get date after Three weeks from the first coronavirus case.","09bab0f7":"# **Table of contents**\n1. Covid-19 - In the colombia and its states, replace to your  country\n","4bd4bac3":"![image.png](attachment:image.png)","ceb28a59":"* Creating new feature \"Active_case\" \n* Active_case = Confirmed - Deaths - Recovered","ddf3a173":"Casos confimados colombia","8fd4bd5a":"# **Please give an UPVOTE if you like this notebook**\n","c908b7df":"Calculating the percentage of missing values of each feature\n","1816d5f9":"Change Data Type for \"Confirmed\",\"Deaths\" and \"Recovered\"  columns to int","c6b81320":"43 % of Province\/State are unknown we will fill nan values with Unknown.","e385ffe5":"# **Coronavirus in Colombia**","b2d70b4c":"1. # Covid-19 - Analysis,Visualization facebook prophet"}}