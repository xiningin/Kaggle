{"cell_type":{"43b41f6f":"code","abfac064":"code","aa918c0b":"code","acf4a475":"code","cfb01da2":"code","a7bb01c2":"code","eed6a389":"code","43bedac6":"code","864f3fea":"code","fbf66a32":"code","ffe798df":"code","3ad5ecee":"code","dae9a16d":"code","0a5aaf08":"code","7977ccf2":"code","d95674a8":"code","626492e0":"code","b28d9a4d":"code","38c88ee8":"markdown","a07d8425":"markdown","24ce3f22":"markdown","8502fd26":"markdown","4d81048a":"markdown"},"source":{"43b41f6f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","abfac064":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport statistics\nimport sklearn\nimport sklearn.metrics as sm\nimport lightgbm as lgb\n\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\n\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nimport catboost as cb\nfrom catboost import CatBoostClassifier\npd.options.display.max_rows = 1500\npd.options.display.max_columns = 130\n","aa918c0b":"train_set = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")\ntest_set = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\")\ntrain_set.head()","acf4a475":"train_set.shape","cfb01da2":"target_category = train_set[\"claim\"].unique()\ntarget_category=list(map(str,target_category))\nprint(target_category)","a7bb01c2":"train_set.isnull().sum().sort_values(ascending =False)","eed6a389":"y= train_set['claim']\nx= train_set.drop(columns=['claim','id'])\nprint(len(x.columns))","43bedac6":"X_train, X_test, Y_train, Y_test = train_test_split(x,y, test_size = 0.3, random_state = 60,shuffle=True)\nprint(len(X_train))\nprint(len(X_test))\n","864f3fea":"from sklearn.impute import SimpleImputer\n\n# Imputation\nmy_imputer = SimpleImputer()\nimputed_X_train = pd.DataFrame(my_imputer.fit_transform(X_train))\nimputed_X_test = pd.DataFrame(my_imputer.transform(X_test))\n\n# Imputation removed column names; put them back\nimputed_X_train.columns = X_train.columns\nimputed_X_test.columns = X_test.columns","fbf66a32":"cat_params = {\n    'iterations': 15585, \n    'objective': 'CrossEntropy', \n    'bootstrap_type': 'Bernoulli',\n    'learning_rate': 0.023575206684596582, \n    'reg_lambda': 36.30433203563295, \n    'random_strength': 43.75597655616195, \n    'depth': 8, \n    'min_data_in_leaf': 11, \n    'leaf_estimation_iterations': 1, \n    'subsample': 0.8227911142845009,\n    'task_type' : 'GPU',\n    'eval_metric' : 'AUC',\n    'verbose' : 1000,\n    'early_stopping_rounds' : 500,\n}\n","ffe798df":"cat = CatBoostClassifier(**cat_params )\n\ncat.fit(X_train, Y_train)\n\ntest_predict = cat.predict(X_test)","3ad5ecee":"y_pred_proba = cat.predict_proba(X_test)[::,1]\nfpr, tpr, _ = metrics.roc_curve(Y_test,  y_pred_proba)\nauc = metrics.roc_auc_score(Y_test, y_pred_proba)\nprint(auc)\nplt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\nplt.legend(loc=4)\nplt.show()","dae9a16d":"test_set.isnull().sum().sort_values(ascending = False)","0a5aaf08":"test_id = test_set['id']\ntest_x= test_set.drop(columns=['id'])\nprint(len(test_x.columns))","7977ccf2":"# Imputation\nmy_imputer = SimpleImputer()\nimputed_X_train = pd.DataFrame(my_imputer.fit_transform(test_x))\n\n# Imputation removed column names; put them back\nimputed_X_train.columns = X_test.columns\n","d95674a8":"y_prdict =cat.predict_proba(test_x)[:, 1]","626492e0":"submission = pd.DataFrame(list(zip(test_id, y_prdict)),\n               columns =['id', 'claim'])\nsubmission.head(20)","b28d9a4d":"submission.to_csv('submission.csv', index=False)","38c88ee8":"# Use SimpleImputer to replace missing values with the mean value of each column","a07d8425":"# CatBoost Classifier","24ce3f22":"# Check Null Values","8502fd26":"# Read Datasets","4d81048a":"# Test set"}}