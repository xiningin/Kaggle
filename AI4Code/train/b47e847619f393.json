{"cell_type":{"c0abd69a":"code","05d9e600":"code","d0877f0d":"code","293cc5d2":"code","8a11756d":"code","dadb1a27":"code","0f63434b":"code","01fbc3d5":"code","bc344666":"code","63fd54cf":"code","797a6b25":"code","586de893":"code","b70303da":"markdown","370f752a":"markdown","5fe8a225":"markdown","9777a917":"markdown","2952f444":"markdown","128235fe":"markdown","587005e9":"markdown","7ac8562c":"markdown","f3c7be50":"markdown","e68f1ac4":"markdown"},"source":{"c0abd69a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","05d9e600":"pd.set_option('display.float_format', lambda x: '%.2f' % x)","d0877f0d":"df = pd.read_csv('..\/input\/country-regional-and-world-gdp\/gdp_csv.csv')","293cc5d2":"print(df.shape)\ndf.head()","8a11756d":"df.describe()","dadb1a27":"print(df['Country Name'].nunique())\ndf['Country Name'].unique()","0f63434b":"df['Country Code'].unique()","01fbc3d5":"regions = ['Arab World', 'Caribbean small states',\n           'Central Europe and the Baltics', 'Early-demographic dividend',\n           'East Asia & Pacific',\n           'East Asia & Pacific (excluding high income)',\n           'East Asia & Pacific (IDA & IBRD countries)', 'Euro area',\n           'Europe & Central Asia',\n           'Europe & Central Asia (excluding high income)',\n           'Europe & Central Asia (IDA & IBRD countries)', 'European Union',\n           'Fragile and conflict affected situations',\n           'Heavily indebted poor countries (HIPC)', 'High income',\n           'IBRD only', 'IDA & IBRD total', 'IDA blend', 'IDA only',\n           'IDA total', 'Late-demographic dividend',\n           'Latin America & Caribbean',\n           'Latin America & Caribbean (excluding high income)',\n           'Latin America & the Caribbean (IDA & IBRD countries)',\n           'Least developed countries: UN classification',\n           'Low & middle income', 'Low income', 'Lower middle income',\n           'Middle East & North Africa',\n           'Middle East & North Africa (excluding high income)',\n           'Middle East & North Africa (IDA & IBRD countries)',\n           'Middle income', 'North America', 'OECD members',\n           'Other small states', 'Pacific island small states',\n           'Post-demographic dividend', 'Pre-demographic dividend',\n           'Small states', 'South Asia', 'South Asia (IDA & IBRD)',\n           'Sub-Saharan Africa', 'Sub-Saharan Africa (excluding high income)',\n           'Sub-Saharan Africa (IDA & IBRD countries)', 'Upper middle income',\n           'World']\nprint(len(regions))","bc344666":"df_country = df.loc[~df['Country Name'].isin(regions)]","63fd54cf":"df_country['Country Name'].unique()","797a6b25":"print(df_country.shape)\ndf_country.describe()","586de893":"annotations = []\nfig = px.line(df_country, x=\"Year\", y=\"Value\", color=\"Country Name\",\n              line_group=\"Country Name\", hover_name=\"Country Name\")\nannotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.05,\n                              xanchor='left', yanchor='bottom',\n                              text='GDP over the years (1960 - 2016)',\n                              font=dict(family='Arial',\n                                        size=30,\n                                        color='rgb(37,37,37)'),\n                              showarrow=False))\nfig.update_layout(annotations=annotations)\nfig.show()","b70303da":"## Supress scientific notation","370f752a":"* We have the GDP data from 1960 to 2016.\n* The lowest GDP registered was 8,824,447.74 (~ 8 million dollars) and the highest was 79,049,230,590,610.91 (~ 79 trillion dollars).","5fe8a225":"## GDP over the years in **Plotly**","9777a917":"## Categorical variable **Country Code**","2952f444":"## Categorical variable **Country Name**","128235fe":"In this analysis, we'll choose to use only countries. You can use this categories for future analysis if you want.","587005e9":"Not all **Country Name** is actually a country. Let's filter the following regions e\/or categories:","7ac8562c":"## Load dataset","f3c7be50":"Feel free to select the combination of countries you want on the right panel.\n\nIf we consider the last years, we can highlight EUA, China, Japan, Germany and United Kingdom as we can see on the plot.\n\nIt is also important to note that a better analysis would include GDP per capita in order to mitigate the size of the country's population.\n\nIt would be interesting to have more recent data (2017 or higher). If you have it, share with us so we can analyse them.\n\nWe could also make a regression analysis here. If you want, be free to fork this notebook in order to play with this.\n\nThanks for reading.","e68f1ac4":"[Plotly](https:\/\/plotly.com\/) have been chosen to visualize this data because of its interactiveness. Besides we can select or not a country in order to visualize the GDP in the plot. "}}