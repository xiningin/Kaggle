{"cell_type":{"895a5b9c":"code","fd5f5f59":"code","e08f5dac":"code","f58ef1cf":"code","9d9ba6e3":"code","bd52c333":"code","2a28b6b4":"code","cbdec66d":"code","7161ddd1":"code","50edae65":"code","b4b7ac8e":"code","46484810":"code","54040711":"code","0931b435":"code","e6909540":"code","6647cb7d":"code","f4471e3d":"code","43a2bd30":"code","e75fe8c1":"code","83757245":"code","ee20d6e6":"code","6dc045f5":"code","99fd317b":"code","81b50d96":"code","7ce1a63b":"code","fee11c25":"markdown","1d7d235d":"markdown","0854069a":"markdown","c264319f":"markdown","54686eb6":"markdown","11ad343f":"markdown","ccc0e8ab":"markdown","08939a73":"markdown","1ca762e0":"markdown","a310c361":"markdown","e45acdcf":"markdown","d6d815e1":"markdown","efaba9ab":"markdown","9dab17e9":"markdown","221ca022":"markdown","d3ff903c":"markdown","5a2f41f5":"markdown","13a6b4f5":"markdown","770f3c82":"markdown"},"source":{"895a5b9c":"import numpy as np\nimport pandas as pd\nfrom lightgbm import LGBMRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import LinearSVR, SVR\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","fd5f5f59":"data = pd.read_csv('..\/input\/train.csv', index_col='id')","e08f5dac":"data.head()","f58ef1cf":"data['date'] = pd.to_datetime(data['date'].astype('str').str[:8])\ndata['year'] = data['date'].dt.year\ndata['month'] = data['date'].dt.month\ndata['day'] = data['date'].dt.day\ndata = data.drop('date', axis=1)","9d9ba6e3":"data.head()","bd52c333":"x_data = data.iloc[:, 1:]\ny_data = data['price']","2a28b6b4":"y_data.hist(bins=100);","cbdec66d":"y_data.skew()","7161ddd1":"log_y_data = np.log1p(y_data)","50edae65":"log_y_data.hist(bins=100);","b4b7ac8e":"log_y_data.skew()","46484810":"n = 0\nf, grid = plt.subplots(7, 3, figsize=(20, 50))\nfor row in grid:\n    for ax in row:\n        col = x_data.columns[n]\n        ax.hist(x_data[col], bins=max(x_data[col].nunique()\/\/20, 10))\n        ax.set_title(col)\n        n += 1","54040711":"skewness = x_data.apply(lambda x: x.skew()).sort_values(ascending=False)\nskewness","0931b435":"skew_feats = skewness[skewness>1].index\nlog_x_data = x_data.copy()\nlog_x_data[skew_feats] = np.log1p(log_x_data[skew_feats])","e6909540":"n = 0\nf, grid = plt.subplots(7, 3, figsize=(20, 50))\nfor row in grid:\n    for ax in row:\n        col = log_x_data.columns[n]\n        ax.hist(log_x_data[col], bins=max(log_x_data[col].nunique()\/\/20, 10))\n        ax.set_title(col)\n        n += 1","6647cb7d":"log_x_data.apply(lambda x: x.skew()).sort_values(ascending=False)","f4471e3d":"x_data = StandardScaler().fit_transform(x_data)\nlog_x_data = StandardScaler().fit_transform(log_x_data)\nx_train, x_val, y_train, y_val = train_test_split(x_data, y_data, random_state=0)\nlog_x_train, log_x_val, log_y_train, log_y_val = train_test_split(log_x_data, log_y_data, random_state=0)","43a2bd30":"# target\uc744 log \ubcc0\ud658\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc758 metric\ndef RMSE(y_pred, y_true):\n    return -np.sqrt(np.mean(np.square(y_pred - y_true)))\n\n# target\uc744 log \ubcc0\ud658\ud55c \uacbd\uc6b0\uc758 metric\ndef RMSE_expm1(y_pred, y_true):\n    return -np.sqrt(np.mean(np.square(np.expm1(y_pred) - np.expm1(y_true))))\n\n# \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uace0 \ucd5c\uc885 metric\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\ndef train(x_train, y_train, x_val, y_val, algo, feval):\n    \n    kwargs = {}\n    if algo.startswith('lgb'):\n        params = {\n            'num_iterations': 10**5\n        }\n        if algo == 'lgb_rf':\n            params['boosting_type'] = 'rf'\n            params['bagging_freq'] = 1\n            params['bagging_fraction'] = 0.5\n            model = LGBMRegressor(**params)\n        else:\n            model = LGBMRegressor(**params)\n        kwargs['verbose'] = False\n        kwargs['eval_set'] = [(x_val, y_val)]\n        kwargs['early_stopping_rounds'] = 100\n        def lgb_eval_metric(y_true, y_pred):\n            return feval.__name__, feval(y_pred, y_true), True\n        kwargs['eval_metric'] = lgb_eval_metric\n    elif algo == 'lr':\n        model = LinearRegression()\n    elif algo == 'lin_svm':\n        model = LinearSVR()\n    elif algo == 'rbf_svm':\n        model = SVR()\n    elif algo == 'knn':\n        model = KNeighborsRegressor()\n        \n    model.fit(x_train, y_train, **kwargs)\n    pred = model.predict(x_val)\n    score = feval(pred, y_val)\n    \n    return score\n\n# \uc2e4\ud5d8 \uacb0\uacfc\ub97c \uc800\uc7a5\ud560 \ub370\uc774\ud130\ud504\ub808\uc784\narchive = pd.DataFrame(columns=['featureX_targetX', 'featureX_targetO', 'featureO_targetX', 'featureO_targetO'])","e75fe8c1":"%%time\nfor algo in ['lgb', 'lgb_rf', 'lr', 'lin_svm', 'rbf_svm', 'knn']:\n    score = train(x_train, y_train, x_val, y_val, algo, RMSE)\n    archive.loc[algo, 'featureX_targetX'] = score","83757245":"%%time\nfor algo in ['lgb', 'lgb_rf', 'lr', 'lin_svm', 'rbf_svm', 'knn']:\n    score = train(x_train, log_y_train, x_val, log_y_val, algo, RMSE_expm1)\n    archive.loc[algo, 'featureX_targetO'] = score","ee20d6e6":"%time\nfor algo in ['lgb', 'lgb_rf', 'lr', 'lin_svm', 'rbf_svm', 'knn']:\n    score = train(log_x_train, y_train, log_x_val, y_val, algo, RMSE)\n    archive.loc[algo, 'featureO_targetX'] = score","6dc045f5":"%%time\nfor algo in ['lgb', 'lgb_rf', 'lr', 'lin_svm', 'rbf_svm', 'knn']:\n    score = train(log_x_train, log_y_train, log_x_val, log_y_val, algo, RMSE_expm1)\n    archive.loc[algo, 'featureO_targetO'] = score","99fd317b":"archive = archive.astype(int)\narchive","81b50d96":"archive.T.plot(figsize=(20, 10), xticks=[0,1,2,3], title='Effect of Log Transformation on Skewed Feature and Target');","7ce1a63b":"for algo in archive.index:\n    print(algo, ':', archive.loc[algo].sort_values(ascending=False).index.tolist())","fee11c25":"# 3. skewness \ud655\uc778","1d7d235d":"1. **gbm**: feature \ubcc0\ud658\uc774 \ubaa8\ub378\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \ub9e4\uc6b0 \uc801\uc5c8\uace0, target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b4.\n2. **rf**: feature \ubcc0\ud658\uc740 \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \uc18c\ud3ed \ud5a5\uc0c1\uc2dc\ucf30\uc9c0\ub9cc, target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \uc800\ud558\uc2dc\ud0b4.\n3. **lr**: feature \ubcc0\ud658\uc744 \ub2e8\ub3c5\uc73c\ub85c \uc37c\uc744 \uacbd\uc6b0 \ubaa8\ub378\uc758 \uc131\ub2a5\uc774 \ud558\ub77d\ud558\uc600\uace0 target \ubcc0\ud658\uacfc \ud568\uaed8 \uc37c\uc744 \ub54c \uac00\uc7a5 \uc88b\uc740 \uc131\ub2a5\uc744 \ubcf4\uc784. target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b4.\n4. **lin_svm**: feature \ubcc0\ud658\uc774 \ubaa8\ub378\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \ub9e4\uc6b0 \uc801\uc5c8\uace0, target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b4.\n5. **rbf_svm**: feature \ubcc0\ud658\uc744 \ub2e8\ub3c5\uc73c\ub85c \uc37c\uc744 \uacbd\uc6b0 \ubaa8\ub378\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc774 \ub9e4\uc6b0 \uc801\uc5c8\uace0, target \ubcc0\ud658\uacfc \ud568\uaed8 \uc37c\uc744 \ub54c \uac00\uc7a5 \uc88b\uc740 \uc131\ub2a5\uc744 \ubcf4\uc784. target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b4.\n6. **knn**: feature \ubcc0\ud658\uc774 \ubaa8\ub378\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \ub9e4\uc6b0 \uc801\uc5c8\uace0, target \ubcc0\ud658\uc740 \uc131\ub2a5\uc744 \uc800\ud558\uc2dc\ud0b4. \n\n# \uc694\uc57d\n1. feature \ubcc0\ud658\ubcf4\ub2e4 target \ubcc0\ud658\uc774 \ub300\uccb4\uc801\uc73c\ub85c \ub354 \ud6a8\uacfc\uc801\uc774\ub2e4.\n2. feature \ubcc0\ud658\uc744 target \ubcc0\ud658\uacfc \ud568\uaed8 \uc9c4\ud589\ud558\uba74 target \ubcc0\ud658\ub9cc \ud55c \uacbd\uc6b0\ubcf4\ub2e4 \uc18c\ud3ed \uc131\ub2a5 \ud5a5\uc0c1\uc744 \uae30\ub300\ud560 \uc218 \uc788\ub2e4.\n3. knn \uc0ac\uc6a9\uc2dc\uc5d0\ub294 \ub370\uc774\ud130\ub97c log \ubcc0\ud658\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\ub2e4.","0854069a":"# 5. \ub3c4\uc6c0 \ud568\uc218 \uc815\uc758 \ubc0f \uacb0\uacfc \uc800\uc7a5\ud560 \ub370\uc774\ud130\ud504\ub808\uc784 \ub9cc\ub4e4\uae30","c264319f":"## 4) feature O, target O","54686eb6":"# 0. \ub4e4\uc5b4\uac00\uba74\uc11c\n\n\uc774 \ucee4\ub110\uc5d0\uc11c\ub294 skewed feature \ubc0f skewed target\uc5d0 \ub300\ud55c log \ubcc0\ud658\uc774 \ubaa8\ub378 \uc131\ub2a5\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc774 \uc5b4\ub5a0\ud55c\uc9c0 \uc2e4\ud5d8\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\ubaa8\ub378\uc740 gbm, random forest, linear regression, linear svm, rbf svm, k nearest neighbors\uc744 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uac01 \uc0c1\ud669\ub9c8\ub2e4 \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\uc744 \ud55c \ub4a4 \uac00\uc7a5 \uc88b\uc740 score\uc744 \ube44\uad50\ud558\ub294 \uac83\uc774 \uc815\ud655\ud558\uaca0\uc9c0\ub9cc, \uc5ec\uae30\uc11c\ub294 \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130\ub294 \uace0\uc815\ud55c \uc0c1\ud0dc\uc5d0\uc11c \uacb0\uacfc\ub9cc \ube44\uad50\ud558\uaca0\uc2b5\ub2c8\ub2e4.","11ad343f":"# 2. \uc804\ucc98\ub9ac\n\n\ucee4\ub110\uc758 \ubaa9\uc801\uc774 log \ubcc0\ud658\uc774 \ubaa8\ub378 \uc131\ub2a5\uc5d0 \ub07c\uce58\ub294 \uc601\ud5a5\uc774\ubbc0\ub85c \uac04\ub2e8\ud788 date \uc5f4\ub9cc \ucc98\ub9ac\ud574\uc8fc\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","ccc0e8ab":"# 4. standard scaling \ubc0f train-val split","08939a73":"## 3) feature O, target X","1ca762e0":"target\uc740 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \uadf8\ub824\ubd24\uc744 \ub54c \uc67c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838 \uc788\ub294 \uac83\uc774 \ubcf4\uc774\uace0, log \ubcc0\ud658\uc744 \ud558\uba74 \uc815\uaddc\ubd84\ud3ec\uc640 \uc720\uc0ac\ud558\uac8c \ub9cc\ub4e4\uc5b4\uc9d0\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","a310c361":"## 1) feature X, target X","e45acdcf":"# 1. \ubaa8\ub4c8 \ubc0f \ub370\uc774\ud130 \ub85c\ub4dc","d6d815e1":"## 2) feature X, target O","efaba9ab":"\uc2e4\ud5d8 \uacb0\uacfc \ubaa8\ub378 \ubcc4\ub85c \uc131\ub2a5\uc774 \uc88b\uc558\ub358 log \ubcc0\ud658 \ubc29\uc2dd\uc744 \ub098\uc5f4\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","9dab17e9":"### 1) Target","221ca022":"# 7. \uacb0\ub860","d3ff903c":"# 6. \uc2e4\ud5d8\n\nskewed feature\uc5d0 log \ucc98\ub9ac\ud55c \uacbd\uc6b0 feature O, \ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 feature X. target\uc5d0 log \ucc98\ub9ac\ud55c \uacbd\uc6b0 target O, \ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 target X\ub85c \ud45c\uc2dc\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","5a2f41f5":"skewness\uac00 1\ubcf4\ub2e4 \ud070 feature\ub4e4\uc5d0 log \ubcc0\ud658\uc744 \ud574\uc8fc\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","13a6b4f5":"waterfront, yr_renovated, view \ub4f1\uc740 \uc560\ucd08\uc5d0 unique value\uac00 \uba87 \uac1c \ub418\uc9c0 \uc54a\uc544 log \ubcc0\ud658\uc744 \ud55c \uc758\ubbf8\uac00 \uc5c6\uc9c0\ub9cc, sqft_lot \ub4f1\uc740 log \ubcc0\ud658\uc744 \ud1b5\ud574 \uc815\uaddc \ubd84\ud3ec\uc640 \ube44\uc2b7\ud574\uc84c\uc2b5\ub2c8\ub2e4.","770f3c82":"### 2) Features"}}