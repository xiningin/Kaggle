{"cell_type":{"822e6a86":"code","42747996":"code","e1055ae1":"code","724d995a":"code","27b54c37":"code","fabd3fd3":"code","cbf962c8":"code","562f37d8":"code","1231ec41":"code","e36f92b4":"code","e9ee1004":"code","cfcc6e87":"code","82ef6bfe":"code","cf6f0527":"code","5974a40f":"markdown","40df4775":"markdown","192f68ee":"markdown","7f585804":"markdown","e3c54717":"markdown","360b63fa":"markdown","056f134a":"markdown","77b05d3b":"markdown","40d56b90":"markdown","ffb8dc5f":"markdown","2b1ad046":"markdown"},"source":{"822e6a86":"import pandas as pd\nimport numpy as np\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport shapely\n#import requests\nfrom shapely.geometry import box\nfrom shapely.ops import unary_union\n","42747996":"df = pd.read_table('..\/input\/crime-data-estonia\/avalik_3.csv').apply(lambda col: col.str.strip())\ndf[df == \"\"] = np.nan\n\ndf.head(5)\ndf['MaakondNimetus'].value_counts()","e1055ae1":"df = df[['Kahjusumma', 'Lest_X', 'Lest_Y']]\ndf.head()\n","724d995a":"df['Long'] = df['Lest_X'].str.split('-')\ndf['Lat'] = df['Lest_Y'].str.split('-')\n\ndf.head()","27b54c37":"df[['min_y', 'max_y']] = df['Lest_X'].str.split('-', expand=True)\ndf['min_y'] = pd.to_numeric(df['min_y'], errors='coerce')\ndf['max_y'] = pd.to_numeric(df['max_y'], errors='coerce')\n\ndf.head()","fabd3fd3":"df[['min_x', 'max_x']] = df['Lest_Y'].str.split('-', expand=True)\ndf['min_x'] = pd.to_numeric(df['min_x'], errors='coerce')\ndf['max_x'] = pd.to_numeric(df['max_x'], errors='coerce')\n\ndf.head()","cbf962c8":"df = df.dropna(subset=['min_x'])\nbx = []\nfor index, i in df.iterrows():\n    b = box(i['min_x'], i['min_y'], i['max_x'], i['max_y'])\n    bx.append(b)\n\ndf['geometry'] = bx\n\ndf.head()","562f37d8":"df[['Kahjusumma_min', 'Kahjusumma_max']] = df['Kahjusumma'].str.split('-', expand=True)\ndf['Kahjusumma_min'] = pd.to_numeric(df['Kahjusumma_min'], errors='coerce')\ndf['Kahjusumma_max'] = pd.to_numeric(df['Kahjusumma_max'], errors='coerce')\n\ndf['Kahjusumma_med'] = (df['Kahjusumma_max']-df['Kahjusumma_min'])\/2\ndf.head()\n\n","1231ec41":"df.shape","e36f92b4":"df = df[['Kahjusumma_med','geometry']]\ndf['geometry'] = df['geometry'].apply(lambda geom: geom.wkt)\ndf = df.groupby(by='geometry', as_index=False).mean()\ndf['geometry'] = df['geometry'].apply(lambda x: shapely.wkt.loads(x))\n\n","e9ee1004":"df.shape","cfcc6e87":"df['Kahjusumma_med'].min()\n","82ef6bfe":"df['Kahjusumma_med'].max()","cf6f0527":"gdf1 = gpd.GeoDataFrame(df, crs=3301, geometry=df['geometry'])\ngdf2 = gpd.read_file('..\/input\/crime-data-estonia\/maakond_20211001.shp')\ngdf2 = gdf2['geometry']\ngdf2.to_crs(epsg=3301)\n\naxes = gdf2.plot(facecolor='none', linestyle='-', linewidth=0.25, edgecolor='k', figsize=(30,20))\nfig = gdf1.plot('Kahjusumma_med', cmap='Wistia', edgecolor=None, vmin=249.5, vmax=22499.5, legend=True, figsize=(30,20), ax=axes)\naxes.figure.savefig('image.jpg')","5974a40f":"**Split the coordinat point**","40df4775":"**source of crime data**\n\n\n\ndata_url = \"https:\/\/opendata.smit.ee\/ppa\/csv\/avalik_3.csv\"\n\nsave_file_name = \"avalik_3.csv\"\n\nresponse = requests.get(data_url)\n\nwith open(save_file_name, 'wb') as f:\n    f.write(response.content)","192f68ee":"**drop empty values create empty array and fill it with box polygon and save it to new column 'geometry'**","7f585804":"**'Lest_Y' is longitude which is x-axis (split the point coordinat)**","e3c54717":"**filter the colom that we use 'Kahjusumma' mean amount of damage, 'Lest_X' and 'Lest_Y' is the coordinate (EPSG:3301)**","360b63fa":"**Merging same polygon and aggregate the value by it's mean**","056f134a":"**because the data is range value we choose the median for easy way**","77b05d3b":"**merge the original file that contain box polygon with Estonia map (county boundary)**","40d56b90":"**'Lest_X' is latitude which is y-axis (split the point coordinat)**","ffb8dc5f":"**This Notebook intended to visualize amount of damage caused by crime activity in Estonia. Every square is 500m x 500m or 1km x 1km.**","2b1ad046":"**read the data, trim the space and set None value to Numpy NaN**"}}