{"cell_type":{"8afc476c":"code","3fab0a8e":"code","94d581bc":"code","059b2b56":"code","8b33b8d4":"code","39423dac":"code","e4e63faf":"code","f01e0c64":"code","1b1bbef2":"markdown","10fe693f":"markdown","39dc109a":"markdown"},"source":{"8afc476c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3fab0a8e":"from fastai.tabular.all import *\nfrom sklearn.ensemble import RandomForestClassifier","94d581bc":"titanic_train_df = pd.read_csv('..\/input\/titanic\/train.csv', index_col='PassengerId')","059b2b56":"titanic_train_dl = TabularDataLoaders.from_df(df=titanic_train_df, y_names = 'Survived',\n                                              cat_names = ['Sex', 'Ticket', 'Pclass', 'SibSp', 'Parch', 'Embarked', 'Cabin'],\n                                              cont_names = ['Age', 'Fare'],\n                                              procs=[Categorify, FillMissing])","8b33b8d4":"titanic_train_dl.train.xs.head()","39423dac":"m = RandomForestClassifier(n_jobs=-1)\nm.fit(titanic_train_dl.train.xs, np.ravel(titanic_train_dl.train.ys))\nprint('Model score on training data    : ', m.score(titanic_train_dl.train.xs, np.ravel(titanic_train_dl.train.ys)))\nprint('Model score on validation data  : ', m.score(titanic_train_dl.valid.xs, np.ravel(titanic_train_dl.valid.ys)))","e4e63faf":"titanic_predictions = m.predict(titanic_train_dl.valid.xs)\naccuracy = 1.0 - (abs(titanic_predictions - titanic_train_dl.valid.ys['Survived']).sum() \/ len(titanic_predictions))\nprint(accuracy)","f01e0c64":"titanic_test_df = pd.read_csv('..\/input\/titanic\/test.csv', index_col='PassengerId')\n\n#hack, no NaNs were in training data\ntitanic_test_df['Fare'].fillna(value=0, inplace=True)\n\ntitanic_test_dl = TabularDataLoaders.from_df(df=titanic_test_df,\n                                              cat_names = ['Sex', 'Ticket', 'Pclass', 'SibSp', 'Parch', 'Embarked', 'Cabin'],\n                                              cont_names = ['Age', 'Fare'],\n                                              procs=[Categorify, FillMissing], valid_idx=[])\n\ntitanic_predictions = pd.DataFrame(m.predict(titanic_test_dl.xs), index=titanic_test_df.index, columns=['Survived'])\n\ntitanic_predictions.to_csv('\/kaggle\/working\/out.csv')\ntitanic_predictions.head()","1b1bbef2":"# Load Data","10fe693f":"# Imports","39dc109a":"# Create DataLoader"}}