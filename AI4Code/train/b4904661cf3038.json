{"cell_type":{"75d5a6dd":"code","5b46fb17":"code","031092b7":"code","19ce2f1d":"code","21c6e6bc":"code","98b533a2":"code","a62a55fa":"code","e980f7db":"code","e4d9f9b3":"code","d1fa3d07":"code","3130ae79":"code","8f0a25e6":"code","447f7ac2":"code","d3651382":"code","a8ad35ae":"code","bfc549b8":"code","b61ef47c":"code","6d5125fa":"code","b6e57dd4":"code","aeec9a27":"code","042f1d1b":"code","5339cbdd":"code","907582c5":"code","1a2371f5":"code","862a4d4c":"code","158346f7":"code","5efe698b":"code","6d1775a8":"code","fbb7fed0":"code","917b891e":"code","fb7ef4e9":"code","e78d32d5":"code","acfe349a":"code","dce098c0":"code","d541dadd":"code","b35976d3":"code","ab64c612":"code","4ce0e770":"code","08da33c0":"code","1816a2e5":"code","c00fcb4a":"code","aef03fa4":"code","437058fa":"code","2e1fd92e":"code","4b77ed42":"code","93d7a64b":"code","e0dda4e7":"code","66d00601":"code","c02a40e1":"code","92d73738":"code","6214e6ab":"code","081cd172":"code","6fbca887":"code","20d8b956":"code","c0e5082d":"code","47734bcb":"code","fe900c16":"markdown","b69000f4":"markdown","e9da0a4d":"markdown","87fc901f":"markdown","2b1066bf":"markdown","942bfc01":"markdown","09b2d140":"markdown","d8ea9691":"markdown","da182a49":"markdown","3a230505":"markdown","b94c1d20":"markdown","663bc6cb":"markdown","2fa8cbdf":"markdown","d4080835":"markdown"},"source":{"75d5a6dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b46fb17":"df = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","031092b7":"df[ df['species'] =='Iris-setosa']  # select all columns where flower is setosa","19ce2f1d":"df[ df['species'] =='Iris-setosa'][['sepal_length' ,'sepal_width']]  # select few  columns where flower is setosa","21c6e6bc":"df.loc[0]  # by row index ","98b533a2":"df.loc[5]  # locate sixth row","a62a55fa":"df['petal_width']","e980f7db":"df.loc[0,'sepal_width']  # 0 --> first row  and get the value at column --> sepal_width","e4d9f9b3":"df.loc[0:5,'sepal_length']   # multiple rows and 1 columns","d1fa3d07":"df.loc[0:5,['sepal_length' ,'petal_width']] \n\n# multiple rows and multiple columns\n\n#NaN nan","3130ae79":"df.iloc[0:5 , 1:3]  # get row # 0 , 1, 2, 3, 4 and columns # 0 ,1, 2","8f0a25e6":"df.groupby('species').sum()","447f7ac2":"df.groupby('species').count()","d3651382":"df.groupby('species')['sepal_length', 'sepal_width'].mean()","a8ad35ae":"num_list = range(150)\n\nprint(num_list)\ndf['flower_no'] = num_list # adding a new columns in df\n\ndf.head(20)","bfc549b8":"df2 = pd.DataFrame()\ndf2['flower_no'] = df['flower_no']\ndf2['flower_weight'] = np.random.random(150)\ndf2.head(20)","b61ef47c":"#Lets join the 2 data frame\n\ndf3 = pd.merge(df, df2 , on ='flower_no', how='inner')","6d5125fa":"df3.head(20)","b6e57dd4":"df['sepal_width'].mean()","aeec9a27":"df['sepal_width'].median()","042f1d1b":"df['sepal_width'].mode()","5339cbdd":"df['sepal_width'].std()","907582c5":"df['sepal_width'].var()","1a2371f5":"df.cov()","862a4d4c":"df.corr()","158346f7":"dataVal = [(10,20,30,40,50,60,70,80,90,100),\n\n           (10,10,40,40,50,60,70,80,80,80),\n\n           (10,10,10,10,20,30,50,50,60,80)]\n\ndataFrame = pd.DataFrame(data=dataVal);\ndataFrame = dataFrame.T\nskewValue = dataFrame.skew()\n\n \n\nprint(\"DataFrame:\")\n\nprint(dataFrame)\n\n \n\nprint(\"Skew:\")\n\nprint(skewValue)","5efe698b":"dataFrame.hist()","6d1775a8":"\ndataMatrix = [(65,75,74,73,74,75,76,77,78,79,80,95,76,62,90),\n\n              (20 ,30,50,70,101,120,130,140,157,160,191,192,200,210,300)];\n\n       \n\ndataFrame = pd.DataFrame(data=dataMatrix);\n\ndataFrame = dataFrame.T\n\nkurt = dataFrame.kurt();\n\nprint(\"Data:\");\n\nprint(dataFrame);\n\nprint(\"Kurtosis:\");\n\nprint(kurt);\n\n \n\n","fbb7fed0":"dataFrame.hist()","917b891e":"df.kurt()","fb7ef4e9":"df3.head()","e78d32d5":"df3.drop('flower_weight' , axis = 1) # axis = 0 --> row wise , # axis = 1 --> column wise\ndf3.head()","acfe349a":"df4 = df3.drop('flower_weight' , axis = 1) # axis = 0 --> row wise , # axis = 1 --> column wise\ndf4.head()\n\n# This is called soft drop \n# i.e. it will not be dropped from the Original DF , but it drop and return a new DF","dce098c0":"# Hard Drop \n\ndf4.drop('flower_no', axis = 1, inplace=True)\ndf4.head()","d541dadd":"df4.tail()","b35976d3":"small_df = pd.DataFrame([5.9,3.0,5.1,1.8,'Iris-virginica'])\nprint(small_df)","ab64c612":"small_df= small_df.T # Transpose\nprint(small_df)","4ce0e770":"small_df.columns = df4.columns\nprint(small_df)","08da33c0":"df5=df4.append(small_df)\ndf5.tail()","1816a2e5":"# Indexing is not right\n\ndf5=df4.append(small_df , ignore_index=True)\ndf5.tail()","c00fcb4a":"df6 = df5.drop_duplicates()\ndf6.tail()","aef03fa4":"df_double = df4.append(df4 , ignore_index = True)\ndf_double.shape","437058fa":"df_double","2e1fd92e":"df_double.drop_duplicates(inplace=True)","4b77ed42":"df_double.shape","93d7a64b":"titanic = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic.head()","e0dda4e7":"titanic.info() ","66d00601":"titanic.isna().sum()","c02a40e1":"# Treatment of Age \n\ntitanic['Age'] = titanic['Age'].fillna(30) # by a value\n\ntitanic['Age'] = titanic['Age'].fillna(np.mean(titanic['Age'])) # by mean Age \ntitanic['Age'] = titanic['Age'].fillna(np.median(titanic['Age'])) # by median Age ","92d73738":"# Treatment of Embarked\n\ntitanic['Embarked'].unique()","6214e6ab":"titanic['Embarked'].value_counts()","081cd172":"titanic['Embarked'] = titanic['Embarked'].fillna(titanic['Embarked'].mode().values[0])\n# mode returns a series ","6fbca887":"titanic['Embarked'].value_counts()\n","20d8b956":"# Treatment of Cabin \n\ntitanic['Cabin'].unique()","c0e5082d":"# So Many Missing Values \n\ntitanic = titanic.drop('Cabin' , axis = 1)\ntitanic.isna().sum()","47734bcb":"# Filtering the data with multiple condition\n\n# Select records who survived and have age greater than 20\n\ntitanic.loc[(titanic['Survived'] ==1) & (titanic['Age'] > 20)]\n\n","fe900c16":"## Indexing by row and columns ##","b69000f4":"# Remove Duplicates #","e9da0a4d":"# Dropping a Column #\n","87fc901f":"# Statistics on dataframe","2b1066bf":"# Dual Access to Data Frame #","942bfc01":"# Integer Indexing -- Not Recommended #  ","09b2d140":"## Column Level Indexing ##","d8ea9691":"# Merging Data Frame #","da182a49":"# Group by Operation #","3a230505":"# Kurtosis #\n\nKurtosis describes the peakedness of the distribution.\n\nIf the distribution is tall and thin it is called a leptokurtic distribution. Values in a leptokurtic distribution are near the mean or at the extremes.\n\nA flat distribution where the values are moderately spread out (i.e., unlike leptokurtic) is called platykurtic distribution.\n\nA distribution whose shape is in between a leptokurtic distribution and a platykurtic distribution is called a mesokurtic distribution. A mesokurtic distribution looks more close to a normal \ndistribution.\n","b94c1d20":"# Missing Value #","663bc6cb":"# Filtering the data #","2fa8cbdf":"## Row Level Indexing ##","d4080835":"## Skewness ##\n\nIn a normal distribution, the mean divides the curve symmetrically into two equal parts at the median and the value of skewness is zero.\n\nWhen a distribution is asymmetrical the tail of the distribution is skewed to one side-to the right or to the left.\n\nWhen the value of the skewness is negative, the tail of the distribution is longer towards the left hand side of the curve.\n\nWhen the value of the skewness is positive, the tail of the distribution is longer towards the right hand side of the curve.\n"}}