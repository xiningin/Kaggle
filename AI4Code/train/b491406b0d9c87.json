{"cell_type":{"203f5dd2":"code","b3a6f2d6":"code","e946f807":"code","d12217f0":"code","472ed10b":"code","8ca3020d":"code","56b70e93":"code","5e293bdc":"code","86267284":"code","da0872d0":"code","bca36cde":"code","3461c1ee":"code","fc4a59bc":"code","902ef7cf":"code","272a8ad6":"code","dc1dc6f8":"code","3092cc96":"code","8e015405":"code","0a23435e":"code","fe1a9ec2":"code","88b3eadb":"code","bef22db1":"code","76213fd5":"code","a56058fc":"code","08d7c02b":"code","2b129920":"code","8758a90f":"code","7ea3d924":"code","1254f2d2":"code","b6a285c1":"code","b595220f":"code","195ab7ef":"code","0d03d603":"code","6afc2872":"code","8ff226f6":"code","b1d94370":"code","fa47bc3e":"code","174049f6":"code","7dd7af02":"code","d2331ae3":"code","7b4da91f":"code","2498ca15":"code","2ac6d17c":"markdown","abbe09cd":"markdown","a31bef3a":"markdown","417ce404":"markdown","d8791fee":"markdown","7f03ffe8":"markdown","e162dc15":"markdown","fe787bfb":"markdown","b43fbd23":"markdown"},"source":{"203f5dd2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b3a6f2d6":"# Bibliotecas\nimport pandas as pd\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics\n%pylab inline","e946f807":"dados_train = pd.read_csv(\"..\/input\/treino\/train_v9rqX0R.csv\")\ndados_test = pd.read_csv(\"..\/input\/previso-de-vendas-do-big-mart\/test_AbJTz2l.csv\")\ntest = dados_test.copy()","d12217f0":"dados_train.head()","472ed10b":"dados_train.describe()","8ca3020d":"dados_train.info()","56b70e93":"corr_matrix=dados_train.corr()\ncorr_matrix['Item_Outlet_Sales']","5e293bdc":"dados_train.isna().sum()","86267284":"# Treinamento\nmap1 = {\"Small\":1,\"Medium\":2,\"High\":3}\ndados_train[\"Outlet_Size\"] = dados_train[\"Outlet_Size\"].map(map1)\ndados_train[\"Item_Weight\"] = dados_train[\"Item_Weight\"].fillna(dados_train.Item_Weight.mean())\ndados_train[\"Outlet_Size\"] = dados_train[\"Outlet_Size\"].fillna(dados_train[\"Outlet_Size\"].median())\ndados_train[\"Outlet_Size\"] = dados_train[\"Outlet_Size\"].fillna(dados_train[\"Outlet_Size\"].median())\n\n# Teste\n\nmap1 = {\"Small\":1,\"Medium\":2,\"High\":3}\ndados_test[\"Outlet_Size\"] = dados_test[\"Outlet_Size\"].map(map1)\ndados_test[\"Item_Weight\"] = dados_test[\"Item_Weight\"].fillna(dados_test.Item_Weight.mean())\ndados_test[\"Outlet_Size\"] = dados_test[\"Outlet_Size\"].fillna(dados_test[\"Outlet_Size\"].median())\ndados_test[\"Outlet_Size\"] = dados_test[\"Outlet_Size\"].fillna(dados_test[\"Outlet_Size\"].median())","da0872d0":"dados_train.isna().sum()","bca36cde":"dados_test.isna().sum()","3461c1ee":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams['figure.figsize'] = (15,15)\nplt.hist(dados_train[\"Item_Outlet_Sales\"],bins = 100)\nplt.show()\n\nplt.rcParams['figure.figsize'] = (15,15)\nplt.hist(dados_train[\"Item_MRP\"],alpha = 0.5,bins = 150)\nplt.show()","fc4a59bc":"dados_train.drop(labels = [\"Outlet_Establishment_Year\"],inplace = True,axis =1)\ndados_test.drop(labels = [\"Outlet_Establishment_Year\"],inplace = True,axis =1)","902ef7cf":"feat = ['Outlet_Size','Outlet_Type','Outlet_Location_Type','Item_Fat_Content',\"Item_Type\"]\nX = pd.get_dummies(dados_train[feat])\ndados_train = pd.concat([dados_train,X],axis=1)","272a8ad6":"dados_train.shape","dc1dc6f8":"feat = ['Outlet_Size','Outlet_Type','Outlet_Location_Type','Item_Fat_Content',\"Item_Type\"]\nX1 = pd.get_dummies(dados_test[feat])\ndados_test = pd.concat([dados_test,X1],axis=1)","3092cc96":"dados_train.drop(labels = [\"Outlet_Size\",'Outlet_Location_Type',\"Outlet_Type\",'Item_Fat_Content','Outlet_Identifier','Item_Identifier',\"Item_Type\"],axis=1,inplace = True)\ndados_test.drop(labels = [\"Outlet_Size\",'Outlet_Location_Type',\"Outlet_Type\",'Item_Fat_Content','Outlet_Identifier','Item_Identifier',\"Item_Type\"],axis=1,inplace = True)","8e015405":"X_train = dados_train.drop(labels = [\"Item_Outlet_Sales\"],axis=1)\ny_train = dados_train[\"Item_Outlet_Sales\"]\nX_train.shape,y_train.shape","0a23435e":"dados_train","fe1a9ec2":"dados_train.head()","88b3eadb":"y_train.head()","bef22db1":"from sklearn import preprocessing\n\nx = X_train.values\nsub_test = dados_test.values\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled_train = min_max_scaler.fit_transform(x)\nx_scaled_test = min_max_scaler.fit_transform(sub_test)\ndf_train = pd.DataFrame(x_scaled_train)\ndf_test = pd.DataFrame(x_scaled_test)","76213fd5":"df_train.head()","a56058fc":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df_train, y_train, test_size=0.3)","08d7c02b":"from sklearn.linear_model import LinearRegression\nmodel_RL = LinearRegression()\nmodel_RL.fit(X_train,y_train)","2b129920":"preds_train = model_RL.predict(X_train)\npreds_test = model_RL.predict(X_test)","8758a90f":"X_test.shape","7ea3d924":"# RMSE TRAIN\nprint(np.sqrt(metrics.mean_squared_error(y_train, preds_train)))\n# RMSE TEST\nprint(np.sqrt(metrics.mean_squared_error(y_test, preds_test)))","1254f2d2":"plt.scatter(y_test, preds_test)\nplt.show()","b6a285c1":"predictions = model_RL.predict(df_test)\nsubmission = pd.DataFrame({\"Item_Identifier\":test[\"Item_Identifier\"],\"Outlet_Identifier\":test[\"Outlet_Identifier\"],\"Item_Outlet_Sales\":abs(predictions)})\nsubmission.head()\nsubmission.to_csv('SubmissRL.csv',index=False,header=True)","b595220f":"predictions.shape","195ab7ef":"from sklearn.ensemble import RandomForestRegressor\n","0d03d603":"model_RFR=RandomForestRegressor(max_depth=5)\nmodel_RFR.fit(X_train,y_train)\n\npredict_train=model_RFR.predict(X_train)\npredict_test=model_RFR.predict(X_test)","6afc2872":"print(np.sqrt(metrics.mean_squared_error(predict_train, y_train)))\nprint(np.sqrt(metrics.mean_squared_error(predict_test, y_test)))","8ff226f6":"y_preds_rfr=model_RFR.predict(X_test)\nrmse_rfr=np.sqrt(mean_squared_error(y_preds_rfr,y_test))","b1d94370":"predictions = model_RFR.predict(df_test)\nsubmission_RFR = pd.DataFrame({\"Item_Identifier\":test[\"Item_Identifier\"],\"Outlet_Identifier\":test[\"Outlet_Identifier\"],\"Item_Outlet_Sales\":abs(predictions)})\nsubmission_RFR.to_csv('SubmissRFR.csv',index=False,header=True)","fa47bc3e":"rfr_df=pd.DataFrame()\nrfr_df['Target']=y_test\nrfr_df['Predictions']=y_preds_rfr\n\nsns.lmplot('Target','Predictions',data=rfr_df,height=6,aspect=2,line_kws={'color':'green'},scatter_kws={'alpha':0.5,'color':'blue'})\nplt.title('Random Forest Regression \\n RMSE: {0:.4f}'.format(rmse_rfr),size=15)\nrfr_df.to_csv('SubmissRF.csv',index=False,header=True)","174049f6":"from sklearn.tree import DecisionTreeRegressor\n\nmodel_DTR=DecisionTreeRegressor()\nmodel_DTR.fit(X_train,y_train)\npredict_r=model_DTR.predict(X_test)\nmse=mean_squared_error(y_test,predict_r)\ndtr_score=np.sqrt(mse)\nprint(\"Score: \", dtr_score)","7dd7af02":"predictions = model_DTR.predict(df_test)\nsubmission_DTR = pd.DataFrame({\"Item_Identifier\":test[\"Item_Identifier\"],\"Outlet_Identifier\":test[\"Outlet_Identifier\"],\"Item_Outlet_Sales\":abs(predictions)})\nsubmission_DTR.head()\nsubmission_DTR.to_csv('SubmissDTR.csv',index=False,header=True)","d2331ae3":"from sklearn.ensemble import GradientBoostingRegressor\nmodel_GBR=GradientBoostingRegressor()\nmodel_GBR.fit(X_train,y_train)\np=model_GBR.predict(X_test)\ngb_score=mean_squared_error(y_test,p)\ngb_score=np.sqrt(gb_score)\nprint(\"Score: \", gb_score)","7b4da91f":"from sklearn.linear_model import Ridge\nmodel_RR=Ridge(alpha=0.05,solver='cholesky')\nmodel_RR.fit(X_train,y_train)\npredict_r=model_RR.predict(X_test)\nmse=mean_squared_error(y_test,predict_r)\nprint(\"MSE:\", mse)\nr_score=np.sqrt(mse)\nprint(\"Score:\", r_score)\n","2498ca15":"predictions = model_RR.predict(df_test)\nsubmission_RR = pd.DataFrame({\"Item_Identifier\":test[\"Item_Identifier\"],\"Outlet_Identifier\":test[\"Outlet_Identifier\"],\"Item_Outlet_Sales\":abs(predictions)})\nsubmission_RR.head()\nsubmission_RR.to_csv('SubmissRR.csv',index=False,header=True)","2ac6d17c":"# Modelo Regress\u00e3o linear","abbe09cd":"# Modelo Ridge Regression","a31bef3a":"# Modelo Random Forest Regressor","417ce404":"# Modelo DecisionTreeRegressor","d8791fee":"# # Correla\u00e7\u00e3o das vari\u00e1veis com Item_Outlet_sales - Matriz de correla\u00e7\u00e3o","7f03ffe8":"predictions = model_GBR.predict(df_test)\nsubmission_GBR = pd.DataFrame({\"Item_Identifier\":test[\"Item_Identifier\"],\"Outlet_Identifier\":test[\"Outlet_Identifier\"],\"Item_Outlet_Sales\":abs(predictions)})\nsubmission_GBR.to_csv('SubmissGBR.csv',index=False,header=True)","e162dc15":"# Modelo GradientBoostingRegressor","fe787bfb":"# Dados****","b43fbd23":"# # An\u00e1lise explorat\u00f3ria****"}}