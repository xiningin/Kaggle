{"cell_type":{"1ba04312":"code","34986b75":"code","383a4903":"code","63a3d2c4":"code","a8100f62":"code","086cc3fd":"code","cbfbae7b":"markdown","ec70bf39":"markdown","d598b08c":"markdown","1cb81321":"markdown"},"source":{"1ba04312":"import os\nimport glob\nimport argparse\nimport cv2","34986b75":"def convert_txt(source):\n\n    for txt_file in glob.glob(source + '\/*.txt'):\n\n        f = open(txt_file)\n        f_str = f.read()\n        f.close()\n\n        lst = list(map(int, f_str.split()))\n        n = lst[0]\n\n        fx = open(txt_file.replace(\".txt\",\".xml\"), \"x\")\n\n        fx.write(\"<annotation>\\n\")\n\n        fx.write(\"  <filename>{}.jpeg<\/filename>\\n\".format(txt_file.replace(source,\"\").replace(\".txt\",\"\").replace(\"\/\",\"\").replace(\"\\\\\",\"\")))\n        im = cv2.imread(txt_file.replace(\".txt\",\".jpeg\"))\n        h,w,c = im.shape\n        fx.write(\"  <size>\\n\")\n        fx.write(\"      <width>{}<\/width>\\n\".format(w))\n        fx.write(\"      <height>{}<\/height>\\n\".format(h))\n        fx.write(\"      <depth>{}<\/depth>\\n\".format(c))\n        fx.write(\"  <\/size>\\n\")\n\n        fx.write(\"  <segmented>0<\/segmented>\\n\")\n\n        for i in range(n):\n            xmin = lst[(i*4)+1]\n            ymin = lst[(i*4)+2]\n            xmax = lst[(i*4)+3]\n            ymax = lst[(i*4)+4]\n            fx.write(\"  <object>\\n\")\n            fx.write(\"      <name>Gun<\/name>\\n\")\n            fx.write(\"      <bndbox>\\n\")\n            fx.write(\"          <xmin>{}<\/xmin>\\n\".format(xmin))\n            fx.write(\"          <ymin>{}<\/ymin>\\n\".format(ymin))\n            fx.write(\"          <xmax>{}<\/xmax>\\n\".format(xmax))\n            fx.write(\"          <ymax>{}<\/ymax>\\n\".format(ymax))\n            fx.write(\"      <\/bndbox>\\n\")\n            fx.write(\"  <\/object>\\n\")\n        fx.write(\"<\/annotation>\")\n        fx.close()","383a4903":"# copy all images and labels in the same directory, say xml-labels\n!mkdir xml-labels","63a3d2c4":"!cp -a ..\/input\/guns-object-detection\/Images\/. \/kaggle\/working\/xml-labels\n!cp -a ..\/input\/guns-object-detection\/Labels\/. \/kaggle\/working\/xml-labels","a8100f62":"convert_txt(\"\/kaggle\/working\/xml-labels\")","086cc3fd":"!zip -r \/kaggle\/working\/guns_dataset_with_xml.zip \/kaggle\/working\/xml-labels","cbfbae7b":"This is the code for converting txt labels to xml labels. Most of the times, xml files are used instead of txt.\n```\n\"\"\" usage: txt_to_xml.py [-h] [-i INPUTDIR]\n\nConvert txt labels to xml labels.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTDIR, --inputDir INPUTDIR\n                        Path to the folder where the text (.txt) labels are stored. If not specified, the CWD will be used.\n\"\"\"\nimport os\nimport glob\nimport argparse\nimport cv2\n\n\ndef iterate_dir(source):\n\n    for txt_file in glob.glob(source + '\/*.txt'):\n\n        f = open(txt_file)\n        f_str = f.read()\n        f.close()\n\n        lst = list(map(int, f_str.split()))\n        n = lst[0]\n\n        fx = open(txt_file.replace(\".txt\",\".xml\"), \"x\")\n\n        fx.write(\"<annotation>\\n\")\n\n        fx.write(\"  <filename>{}.jpeg<\/filename>\\n\".format(txt_file.replace(source,\"\").replace(\".txt\",\"\").replace(\"\/\",\"\").replace(\"\\\\\",\"\")))\n        im = cv2.imread(txt_file.replace(\".txt\",\".jpeg\"))\n        h,w,c = im.shape\n        fx.write(\"  <size>\\n\")\n        fx.write(\"      <width>{}<\/width>\\n\".format(w))\n        fx.write(\"      <height>{}<\/height>\\n\".format(h))\n        fx.write(\"      <depth>{}<\/depth>\\n\".format(c))\n        fx.write(\"  <\/size>\\n\")\n\n        fx.write(\"  <segmented>0<\/segmented>\\n\")\n\n        for i in range(n):\n            xmin = lst[(i*4)+1]\n            ymin = lst[(i*4)+2]\n            xmax = lst[(i*4)+3]\n            ymax = lst[(i*4)+4]\n            fx.write(\"  <object>\\n\")\n            fx.write(\"      <name>Gun<\/name>\\n\")\n            fx.write(\"      <bndbox>\\n\")\n            fx.write(\"          <xmin>{}<\/xmin>\\n\".format(xmin))\n            fx.write(\"          <ymin>{}<\/ymin>\\n\".format(ymin))\n            fx.write(\"          <xmax>{}<\/xmax>\\n\".format(xmax))\n            fx.write(\"          <ymax>{}<\/ymax>\\n\".format(ymax))\n            fx.write(\"      <\/bndbox>\\n\")\n            fx.write(\"  <\/object>\\n\")\n        fx.write(\"<\/annotation>\")\n        fx.close()\n\n\ndef main():\n\n    # Initiate argument parser\n    parser = argparse.ArgumentParser(description=\"Convert txt labels to xml labels\",\n                                     formatter_class=argparse.RawTextHelpFormatter)\n    parser.add_argument(\n        '-i', '--inputDir',\n        help='Path to the folder where the text (.txt) labels are stored. If not specified, the CWD will be used.',\n        type=str,\n        default=os.getcwd()\n    )\n\n    args = parser.parse_args()\n\n    # Now we are ready to start the iteration\n    iterate_dir(args.inputDir)\n\n\nif __name__ == '__main__':\n    main()\n```","ec70bf39":"# Converting .txt labels to .xml labels","d598b08c":"Updated Guns dataset (with xml labels) and code for converting the labels:-  \n<center><a href=\"https:\/\/github.com\/sid4sal\/transfer-learning-on-object-detection-models\/tree\/main\/project-files\/datasets\/guns_dataset\">\n  <img src=\"https:\/\/img.shields.io\/badge\/Guns_Dataset-Github-dark_green.svg\" alt=\"Open Github\"\/>\n<\/a><\/center>","1cb81321":"## Now you can download the zip that you created. You need to refresh the directory to see the changes."}}