{"cell_type":{"dd61c3ad":"code","0dbc87cf":"code","3a7c3563":"code","4e223f59":"code","891b4472":"code","7e396fa1":"code","0cb7ab3e":"code","eb5725c4":"code","e530d97b":"code","cb6ab858":"code","47baa816":"code","b5ebd0a6":"code","651991c4":"code","b7223b0b":"code","ca99f32d":"code","f563a5b0":"code","4155f370":"code","ed33473b":"code","f85561ca":"code","a84f7f2e":"code","3818f8cb":"code","7603856f":"code","dd748589":"code","106b8eb5":"code","e802f641":"code","bac82b4f":"code","e5bf7187":"code","915203b3":"code","e8c0c8bb":"code","a68b086d":"code","b691306f":"code","545fa008":"code","8ed739aa":"code","ecd8a17e":"code","5f3e909f":"code","471d3321":"code","439a973d":"code","0190fb69":"code","4ce06921":"code","7c6b782c":"code","c4ff026b":"code","f15b7db0":"code","c184c26e":"markdown","18f68a50":"markdown","e72bdea7":"markdown","d33ed094":"markdown","3eaa3f6e":"markdown","f441cdeb":"markdown","a5967c35":"markdown","5f121a71":"markdown","f4b6c579":"markdown","ca1787fa":"markdown","83c696de":"markdown","d5b62c3c":"markdown","4127c750":"markdown","05853628":"markdown","7763d591":"markdown","591485f7":"markdown","a4fed52d":"markdown","1feb0884":"markdown","8bfcdaf5":"markdown"},"source":{"dd61c3ad":"import warnings\nimport itertools\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')\nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'\n\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0dbc87cf":"df = pd.read_csv(\"..\/input\/covid19-in-india\/covid_19_india.csv\")","3a7c3563":"df.head()","4e223f59":"try :\n    df.drop('Unnamed: 9',axis=1,inplace= True)\n    df.shape\nexcept : \n    print('Done')","891b4472":"df.isnull().sum()","7e396fa1":"df.info()","0cb7ab3e":"df.describe()","eb5725c4":"df.corr()","e530d97b":"print(df['Deaths'].unique())","cb6ab858":"try :\n    a=[]\n    for i in df['Deaths'].values:\n        if '\\xa0' in i:\n            a.append(int(i.replace(\"\\xa0\", '')))\n        else:\n            a.append(int(i))\n\n    df['Deaths'] = a\n    len(a)\nexcept:\n    pass\n","47baa816":"print(df['Deaths'].unique())","b5ebd0a6":"df['Deaths'].astype('int64')","651991c4":"df['State\/UnionTerritory'].unique()","b7223b0b":"len(df['State\/UnionTerritory'].unique())","ca99f32d":"def drop_star(df):\n    for i in df['State\/UnionTerritory'].iteritems():\n        if i[1][-3:] == \"***\":\n            df.drop(i[0],inplace=True)\n        \ndrop_star(df)\ndf['State\/UnionTerritory'].unique()","f563a5b0":"len(df['State\/UnionTerritory'].unique())","4155f370":"df['Cured'].plot(alpha=0.8)\ndf['Deaths'].plot(alpha=0.3)\ndf['Confirmed'].plot(alpha=0.5)\nplt.show()","ed33473b":"df.groupby('State\/UnionTerritory')['Confirmed'].plot()\nplt.show()\ndf.groupby('State\/UnionTerritory')['Deaths'].plot()\nplt.show()","f85561ca":"df['Datetime'] = df['Date']+' '+df['Time']","a84f7f2e":"l = df.groupby('State\/UnionTerritory')\ncurrent = l.last()","3818f8cb":"fig ,ax = plt.subplots(figsize= (12,8))\nplt.title('Top 10 Contaminated States')\ncurrent = current.sort_values(\"Confirmed\",ascending=False)[:10]\np = sns.barplot(ax=ax,x= current.index,y=current['Confirmed'])\np.set_xticklabels(labels = current.index,rotation=90)\np.set_yticklabels(labels=(p.get_yticks()*1).astype(int))\nplt.show()","7603856f":"l = df.groupby('State\/UnionTerritory')\ncurrent = l.last()\ncurrent = current.sort_values(\"Confirmed\",ascending=False)","dd748589":"df['Date'].min(), df['Date'].max()","106b8eb5":"Raj = df.loc[df['State\/UnionTerritory'] == 'Rajasthan']\nRaj.head()","e802f641":"Raj.shape","bac82b4f":"Raj.isnull().sum()","e5bf7187":"Raj.columns","915203b3":"cols=['Sno', 'Time', 'State\/UnionTerritory',\n       'ConfirmedIndianNational', 'ConfirmedForeignNational', 'Cured',\n       'Deaths']\nRaj['Date'] = Raj['Date']+' '+Raj['Time']\nRaj.drop(cols, axis=1, inplace=True)\nRaj= Raj.sort_values('Date')\nRaj.isnull().sum()","e8c0c8bb":"Raj.head()","a68b086d":"Raj.index","b691306f":"Raj = Raj.groupby('Date')['Confirmed'].sum().reset_index()\n","545fa008":"Raj = Raj.set_index('Date')\nRaj.index = pd.to_datetime(Raj.index)\nRaj.index","8ed739aa":"y = Raj['Confirmed'].resample('W').mean()","ecd8a17e":"y.index","5f3e909f":"y.fillna(method='ffill',inplace=True)\ny['2020':]","471d3321":"Raj.plot(figsize=(16, 6))\nplt.show()","439a973d":"from pylab import rcParams\nrcParams['figure.figsize'] = 18, 8\ndecomposition = sm.tsa.seasonal_decompose(y, freq = 20, model='additive')\nfig = decomposition.plot()\nplt.show()","0190fb69":"p = d = q = range(0, 2)\npdq = list(itertools.product(p, d, q))\nseasonal_pdq = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]\nprint('Examples of parameter combinations for Seasonal ARIMA...')\nprint('SARIMAX: {} x {}'.format(pdq[1], seasonal_pdq[1]))\nprint('SARIMAX: {} x {}'.format(pdq[1], seasonal_pdq[2]))\nprint('SARIMAX: {} x {}'.format(pdq[2], seasonal_pdq[3]))\nprint('SARIMAX: {} x {}'.format(pdq[2], seasonal_pdq[4]))","4ce06921":"for param in pdq:\n    for param_seasonal in seasonal_pdq:\n        try:\n            mod = sm.tsa.statespace.SARIMAX(y,\n                                            order=param,\n                                            seasonal_order=param_seasonal,\n                                            enforce_stationarity=False,\n                                            enforce_invertibility=False)\n            results = mod.fit()\n            print('ARIMA{}x{}7 - AIC:{}'.format(param, param_seasonal, results.aic))\n        except:\n            continue","7c6b782c":"mod = sm.tsa.statespace.SARIMAX(y,\n                                order=(0, 1, 1),\n                                seasonal_order=(1, 1, 1, 12),\n                                enforce_stationarity=False,\n                                enforce_invertibility=False)\nresults = mod.fit()","c4ff026b":"pred = results.get_prediction(start=pd.to_datetime('2020-08-02'), dynamic=False)\npred_ci = pred.conf_int()\nax = y['2020':].plot(label='observed')\npred.predicted_mean.plot(ax=ax, label='One-step ahead Forecast', alpha=.7, figsize=(14, 7))\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.2)\nax.set_xlabel('Date')\nax.set_ylabel('Confirmed Cases')\nplt.legend()\nplt.show()","f15b7db0":"pred_uc = results.get_forecast(steps=50)\npred_ci = pred_uc.conf_int()\nax = y.plot(label='observed', figsize=(14, 7))\npred_uc.predicted_mean.plot(ax=ax, label='Forecast')\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.25)\nax.set_xlabel('Date')\nax.set_ylabel('Confirmed Cases')\nplt.legend()\nplt.show()","c184c26e":"### - Resampling with 'W' means we are taking the weekly data from the whole time period. (Every Sunday)","18f68a50":"# Thank You !!\n\n## Drop an UpVote if you liked the Kernel :)","e72bdea7":"# Time Series Analysis For RAJASTHAN State\n","d33ed094":"# Data Visualizations","3eaa3f6e":"# Import libraries & Read file ","f441cdeb":"### - Dropping all other columns and using only \"Date+Time and Confirmed Cases\"","a5967c35":"* adding both columns for easy time series analysis","5f121a71":"### But why do we decompose time series?\n###### When we decompose a time series into components, we usually combine the trend and cycle into a single trend-cycle component (sometimes called the trend for simplicity). Often this is done to help improve understanding of the time series, but it can also be used to improve forecast accuracy.\n\n### Types of decomposition :\n   - Multiplicative : The components multiply together to make the time series. If you have an increasing trend, the amplitude of seasonal activity increases. Everything becomes more exaggerated.\n   - Addative : In an additive time series, the components add together to make the time series.\n   \n(Here we used Addative)","f4b6c579":"* Checking the data for any null\/ missing value","ca1787fa":"(We used SARIMAX)\n### -> Seasonal AutoRegressive Integrated Moving Averages\n#### One of the methods available in Python to model and predict future points of a time series is known as SARIMAX, which stands for Seasonal AutoRegressive Integrated Moving Averages with eXogenous regressors\n\n### -> What does an Arima model do?\n#### Autoregressive Integrated Moving Average Model. An ARIMA model is a class of statistical models for analyzing and forecasting time series data. It explicitly caters to a suite of standard structures in time series data, and as such provides a simple yet powerful method for making skillful time series forecasts.\n\n### -> How to select perfect ARIMA model\n#### Rules for identifying ARIMA models. General seasonal models: ARIMA (0,1,1)x(0,1,1) etc. Identifying the order of differencing and the constant: If the series has positive autocorrelations out to a high number of lags (say, 10 or more), then it probably needs a higher order of differencing.","83c696de":"### Now lets plot the Decomposition Plot which shows :\n   - orignal data\n   - Trend in the data\n   - Seasonality \n   - Residual \n     ","d5b62c3c":"### -> Plot on the training data to check how well our model is predicting.","4127c750":"# Insights of Data","05853628":"### - The above is initial graph showing the increasing trend and seasonality in the data.","7763d591":"### -> We choose the one with lowest AIC value from above. In this case we have => ARIMA(0, 1, 1)x(1, 1, 1, 12)7 - AIC:588.9188045652764","591485f7":"### -> Graph showing predicted trends for the next 50 steps.","a4fed52d":"### - The initial index is Sr.no so lets change it to ****\" Date \"****.","1feb0884":"* ### Maharashtra being the most contaminated state followed byKarnataka and Andhra Pradesh with approximately equal cases. ","8bfcdaf5":"# Overview\n\n### **Context**\n###### Coronaviruses are a large family of viruses which may cause illness in animals or humans. In humans, several coronaviruses are known to cause respiratory infections ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS). The most recently discovered coronavirus causes coronavirus disease COVID-19 - World Health Organization\n\n###### The number of new cases are increasing day by day around the world. This dataset has information from the states and union territories of India at daily level.\n\n### **I use Time series analysis to understand the data better and to answer many questions which may arise.**\n\n## So what is Time Series?\n\n###   1. **A time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data.**\n###   2. **An observed time series can be decomposed into three components:** \n       * the trend (long term direction)\n       * the seasonal (systematic, calendar related movements) \n       * the irregular (unsystematic, short term fluctuations).\n###   3. **Time series analysis is a statistical technique that deals with time series data, or trend analysis. Time series data means that data is in a series of particular time periods or intervals.** \n       \n## **How to do a time series analysis?**\n\n#### Step 1: Visualize the Time Series. )It is essential to analyze the trends prior to building any kind of time series model)\n#### Step 2: Stationarize\/Decompose the Series\n#### Step 3: Find Optimal Parameters\n#### Step 4: Build ARIMA Model\n#### Step 5: Make Predictions"}}