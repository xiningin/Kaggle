{"cell_type":{"352336ed":"code","b88e3dcb":"code","7cdbeb06":"code","149ed68a":"code","cd2199f0":"code","ab740042":"code","55575d00":"code","5daf5927":"code","5dfebb3f":"code","31e57ae7":"code","044e77d6":"code","1f0bd3e1":"code","91b3a54d":"code","136e799e":"code","b394d3d0":"code","8306aaec":"code","f3b1256d":"code","a55f5bcd":"code","c55b8d99":"code","de554d2d":"code","b68d6100":"code","307160e5":"code","76c56ff8":"code","dca02816":"code","0c05fc0d":"code","fcf1a210":"code","acb01b0a":"code","2fcbfb0f":"code","11f2e662":"code","52100106":"code","df2b7978":"code","61477f5e":"code","f55c2881":"code","698cd1d5":"markdown","ae154aae":"markdown","35fba7a4":"markdown","3fb989d8":"markdown","598a7799":"markdown","22d250f0":"markdown","94d61a8e":"markdown","e25ad6b9":"markdown"},"source":{"352336ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b88e3dcb":"# Read data from csv file\ndata17 = pd.read_csv('..\/input\/2017.csv')\ndata16 = pd.read_csv('..\/input\/2016.csv')\ndata15 = pd.read_csv('..\/input\/2015.csv')","7cdbeb06":"# Information about data\ndata15.info()\nprint(\"*******\")\ndata16.info()\nprint(\"********\")\ndata17.info()","149ed68a":"print(data15.columns)\nprint(data16.columns)\nprint(data17.columns)","cd2199f0":"data15.rename(columns={\"Happiness Rank\" : \"HapyRank\",\n                     \"Happiness Score\" : \"HapyScr\",\n                     \"Economy (GDP per Capita)\" : \"Economy\",\n                     \"Health (Life Expectancy)\" : \"Health\",\n                     \"Trust (Government Corruption)\" : \"Trust\",\n                     \"Dystopia Residual\" : \"DystResd\"}, inplace=True)\ndata15.drop(columns=\"Standard Error\", inplace=True)\ndisplay(data15.head())\ndata16.rename(columns={\"Happiness Rank\" : \"HapyRank\",\n                       \"Happiness Score\" : \"HapyScr\",\n                       \"Economy (GDP per Capita)\" : \"Economy\",\n                       \"Health (Life Expectancy)\" : \"Health\",\n                       \"Trust (Government Corruption)\" : \"Trust\",\n                       \"Dystopia Residual\" : \"DystResd\"}, inplace=True)\ndata16.drop(columns={\"Lower Confidence Interval\",\"Upper Confidence Interval\"}, inplace=True)\ndisplay(data16.head())\ndata17.rename(columns={\"Happiness.Rank\" : \"HapyRank\",\n                       \"Happiness.Score\" : \"HapyScr\",\n                       \"Economy..GDP.per.Capita.\" : \"Economy\",\n                       \"Health..Life.Expectancy.\" : \"Health\",\n                       \"Trust..Government.Corruption.\" : \"Trust\",\n                       \"Dystopia.Residual\" : \"DystResd\"}, inplace=True)\ndata17.drop(columns={\"Whisker.low\",\"Whisker.high\"}, inplace=True)\ndisplay(data17.head())","ab740042":"# Data Analysis\ndisplay(data15.describe())\ndisplay(data16.describe())\ndisplay(data17.describe())","55575d00":"# Data correlation\ndisplay(data15.corr())\ndisplay(data16.corr())\ndisplay(data17.corr())","5daf5927":"# First 5 rows in 2017,2016,2015\ndisplay(data15.head())\ndisplay(data16.head())\ndisplay(data17.head())","5dfebb3f":"# Last 10 rows \ndisplay(data15.tail(10))\ndisplay(data15.tail(10))\ndisplay(data17.tail(10))","31e57ae7":"# First 3 countries and last 3 countries\nprint(data15['Country'][0:3])\nprint(data15['Country'][-3:])\nprint(\"****\")\nprint(data16['Country'][0:3])\nprint(data16['Country'][-3:])\nprint(\"****\")\nprint(data17['Country'][0:3])\nprint(data17['Country'][-3:])","044e77d6":"# Correlation Map\nf,ax=plt.subplots(figsize=(7,6))\nsns.heatmap(data15.corr(),annot=True,linewidth=.5,fmt='.1f',ax=ax)\nf,ax=plt.subplots(figsize=(7,6))\nsns.heatmap(data16.corr(),annot=True,linewidth=.5,fmt='.1f',ax=ax)\nf,ax=plt.subplots(figsize=(7,6))\nsns.heatmap(data17.corr(),annot=True,linewidth=.5,fmt='.1f',ax=ax)\nplt.show()","1f0bd3e1":"# Line Plot\n# Relations Between Economy and Trust \ndata15.Economy.plot(kind = 'line', color = 'r',label='Economy15',linewidth=0.8 , grid = True,linestyle = '-',figsize = (6,6))\ndata15.Trust.plot(kind = 'line',color = 'g', label='Trust15',linewidth=0.7 , alpha = 0.9, grid = True,linestyle = '-',figsize = (6,6))\nplt.ylabel('y axis')\nplt.xlabel('x axis')\nplt.title(' 2015-Economy-Trust Line Plot')\nplt.show()\ndata16.Economy.plot(kind = 'line', color = 'r',label='Economy16',linewidth=0.8 , grid = True,linestyle = '-',figsize = (6,6))\ndata16.Trust.plot(kind = 'line',color = 'g', label='Trust16',linewidth=0.7 , alpha = 0.9, grid = True,linestyle = '-',figsize = (6,6))\nplt.ylabel('y axis')\nplt.xlabel('x axis')\nplt.title('2016-Economy-Trust Line Plot')\nplt.show()\ndata17.Economy.plot(kind = 'line', color = 'r',label='Economy17',linewidth=0.8 , grid = True,linestyle = '-',figsize = (6,6))\ndata17.Trust.plot(kind = 'line',color = 'g', label='Trust17',linewidth=0.7 , alpha = 0.9, grid = True,linestyle = '-',figsize = (6,6))\nplt.ylabel('y axis')\nplt.xlabel('x axis')\nplt.title('2017-Economy-Trust Line Plot')\nplt.show()\n\n","91b3a54d":"# Line Plot\n# Countries' Health Life Expectancy with Happiness Score\ndata15.plot(subplots=True,x='HapyScr',y='Health', color='green',alpha=0.8,grid=True, figsize=(6,6))\nplt.ylabel('Health')\nplt.xlabel('Happiness Score')\nplt.title('2015-Health-Happiness Line Plot')\ndata16.plot(subplots=True,x='HapyScr',y='Health', color='green',alpha=0.8,grid=True, figsize=(6,6))\nplt.ylabel('Health')\nplt.xlabel('Happiness Score')\nplt.title('2016-Health-Happiness Line Plot')\ndata17.plot(subplots=True,x='HapyScr',y='Health', color='green',alpha=0.8,grid=True, figsize=(6,6))\nplt.ylabel('Health')\nplt.xlabel('Happiness Score')\nplt.title('2017-Health-Happiness Line Plot')\nplt.show()","136e799e":"# Scatter Plot\n# Countries' Happiness Score and Economy by Years\nplt.figure(figsize=(20,5))\nplt.subplot(1,3,1)\nplt.scatter(x=data15.Economy,y=data15.HapyScr, color='r',alpha=0.6)\nplt.grid(True)\nplt.xlabel('Economy')\nplt.ylabel('Happiness Score')\nplt.title(\"2015-Economy-Happiness Score Scatter Plot\")\nplt.subplot(1,3,2)\nplt.scatter(x=data16.Economy,y=data16.HapyScr, color='r',alpha=0.6)\nplt.grid(True)\nplt.xlabel('Economy')\nplt.ylabel('Happiness Score')\nplt.title(\"Economy-Happiness Score Scatter Plot\")\nplt.subplot(1,3,3)\nplt.scatter(x=data17.Economy,y=data17.HapyScr, color='r',alpha=0.6)\nplt.grid(True)\nplt.xlabel('Economy')\nplt.ylabel('Happiness Score')\nplt.title(\"Economy-Happiness Score Scatter Plot\")\nplt.show()","b394d3d0":"# Histogram\n# Countries' freedom by Years\nplt.figure(figsize=(20,5))\nplt.subplot(131)\nplt.hist(data15.Freedom ,color='red',bins = 50)\nplt.title(\"2015-Countries' Freedom Histogram\")\nplt.subplot(132)\nplt.hist(data16.Freedom ,color='red',bins = 50)\nplt.title(\"2016-Countries' Freedom Histogram\")\nplt.subplot(133)\nplt.hist(data17.Freedom ,color='red',bins = 50)\nplt.title(\"2017-Countries' Freedom Histogram\")\nplt.show()","8306aaec":"data15.Region.value_counts()\n#data16.Region.value_counts()","f3b1256d":"#Pie Chart\nlabels=data15.Region.value_counts().index\nexplode = [0,0,0,0,0,0,0,0,0,0]\nsizes = data15.Region.value_counts().values\n\nlabels2=data16.Region.value_counts().index\nexplode2 = [0,0,0,0,0,0,0,0,0,0]\nsizes2 = data16.Region.value_counts().values\n# visual\nplt.figure(figsize = (18,7))\nplt.subplot(131)\nplt.pie(sizes, explode=explode, labels=labels, colors=sns.color_palette('Set2'), autopct='%1.2f%%')\nplt.title('Region distribution in 2015',fontsize = 17,color = 'Brown')\nplt.subplot(133)\nplt.pie(sizes2, explode=explode2, labels=labels2, colors=sns.color_palette('Set3'), autopct='%1.2f%%')\nplt.title('Region distribution in 2016',fontsize = 17,color = 'Green')","a55f5bcd":"# First 10 rows and last 10 rows concatenating\n# in 2015\ndataFrame1=data15['Country']\ndataFrame2=data15['HapyScr']\ndataFrame3=data15['Freedom']\n# axis=1 -> horizontal conc (columns)\ndataHorizontal=pd.concat([dataFrame1,dataFrame2,dataFrame3],axis=1)\nfiltre1=dataHorizontal.head(10)\nfiltre2=dataHorizontal.tail(10)\n# axis=0 ->vertical conc (rows)\nnewData=pd.concat([filtre1,filtre2],axis=0)\nnewData\n","c55b8d99":"# in 2016\ndataFrame1=data16['Country']\ndataFrame2=data16['HapyScr']\ndataFrame3=data16['Freedom']\n# axis=1 -> horizontal conc (columns)\ndataHorizontal=pd.concat([dataFrame1,dataFrame2,dataFrame3],axis=1)\nfiltre1=dataHorizontal.head(10)\nfiltre2=dataHorizontal.tail(10)\n# axis=0 ->vertical conc (rows)\nnewData=pd.concat([filtre1,filtre2],axis=0)\nnewData","de554d2d":"# in 2017\ndataFrame1=data17['Country']\ndataFrame2=data17['HapyScr']\ndataFrame3=data17['Freedom']\n# axis=1 -> horizontal conc (columns)\ndataHorizontal=pd.concat([dataFrame1,dataFrame2,dataFrame3],axis=1)\nfiltre1=dataHorizontal.head(10)\nfiltre2=dataHorizontal.tail(10)\n# axis=0 ->vertical conc (rows)\nnewData=pd.concat([filtre1,filtre2],axis=0)\nnewData","b68d6100":"# The 13 most happy countries in 2015,2016,2017\nhappy=data15['HapyScr']>7\ndisplay(data15[happy])\nhappy2=data16['HapyScr']>7\ndisplay(data16[happy2])\nhappy3=data17['HapyScr']>7\ndisplay(data17[happy3])","307160e5":"# Turkey's rank and happiness report in 2015,2016,2017\ntr_data=data15[data15.Country == \"Turkey\"]\ndisplay(tr_data)\ntr_data2=data16[data16.Country == \"Turkey\"]\ndisplay(tr_data2)\ntr_data3=data17[data17.Country == \"Turkey\"]\ndisplay(tr_data3)","76c56ff8":"# The difference between Maximum's Happiness Score  and Turkey's Happiness Score in 2015,2016,2017\nfark=data15['HapyScr'].max()-(tr_data['HapyScr'])\nprint(fark)\nfark2=data16['HapyScr'].max()-(tr_data2['HapyScr'])\nprint(fark2)\nfark3=data17['HapyScr'].max()-(tr_data3['HapyScr'])\nprint(fark3)","dca02816":"#Freedom and Happiness Score are Combine \ndataFree=data15['Freedom']>0.6\ndataHappy=data15['HapyScr']< 6\ndisplay(data15[dataFree&dataHappy])\n\ndataFree=data16['Freedom']>0.6\ndataHappy=data16['HapyScr']< 6\ndisplay(data16[dataFree&dataHappy])\n\ndataFree=data17['Freedom']>0.6\ndataHappy=data17['HapyScr']< 6\ndisplay(data17[dataFree&dataHappy])","0c05fc0d":"# Filtering pandas and logical_and\n#  There are 9 countries.\ndata15[np.logical_and(data15.HapyScr>5.5, data15.Economy< data15.Economy.mean() )]\n","fcf1a210":"#  There are 9 countries.\ndata16[np.logical_and(data16.HapyScr>5.5, data16.Economy< data16.Economy.mean() )]","acb01b0a":"#  There are 7 countries.\ndata17[np.logical_and(data17.HapyScr>5.5, data17.Economy< data17.Economy.mean() )]","2fcbfb0f":"data15.loc[15:25,\"Country\":\"Economy\"]","11f2e662":"data16.loc[15:25,\"Country\":\"Economy\"]","52100106":"data17.loc[15:25,\"Country\":\"Economy\"]","df2b7978":"dataFrame=data15['HapyRank'].tail(10)\nfor value in dataFrame:\n    print(\"Value is \",value)\nprint('-The End-')","61477f5e":"dataFrame=data16['HapyRank'].tail(10)\nfor value in dataFrame:\n    print(\"Value is \",value)\nprint('-The End-')","f55c2881":"dataFrame=data17['HapyRank'].tail(10)\nfor value in dataFrame:\n    print(\"Value is \",value)\nprint('-The End-')","698cd1d5":"***--MATPLOTLIB--***","ae154aae":"***--FILTERING DATAFRAME--***","35fba7a4":"***-For example-***\n\nLast 10 rows int he Happiness Rank","3fb989d8":"***-Slicing-***","598a7799":"***-Seaborn-***","22d250f0":"***-Combine filters-***","94d61a8e":"***-Concatenating Data-***","e25ad6b9":"***Introduction***\n\nThis is a data analysis about World Happiness Report."}}