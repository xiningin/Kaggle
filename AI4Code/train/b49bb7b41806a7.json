{"cell_type":{"25320af5":"code","3febcda6":"code","cf4d744e":"code","d15e4fd3":"code","ddd356a1":"code","4b88aa29":"code","313df378":"code","81b8a3a7":"code","7a28117d":"code","c542f267":"code","55874d49":"code","0b98cad4":"code","c09bee65":"code","a5c444b8":"code","affc0a43":"code","fbfe0725":"code","94053284":"code","0f2df4ea":"code","5cff71f0":"code","9cf8da1e":"code","50fc014d":"code","89ae5e5c":"code","99db4703":"code","68b90c03":"code","0058e154":"code","fb51c393":"code","3f1b8fc9":"code","71250bce":"code","c1abb986":"code","d43e18b7":"code","bc88d4f4":"code","32c1505d":"code","02064185":"code","cfb32e20":"code","37a67efa":"code","93db4563":"code","4f41bb9a":"code","c085ad3d":"code","7cd3a94d":"code","11037665":"code","1070ef78":"code","ed16defb":"code","2afc9afc":"markdown","5c552671":"markdown","ff6598ec":"markdown","e6ca544e":"markdown"},"source":{"25320af5":"# importing important libraries\nimport pandas as pd # for reading tabular data\nimport numpy as np # for reading numerical data\nfrom datetime import datetime # for timeseries data\nimport matplotlib.pyplot as plt # for visualization\nimport seaborn as sns","3febcda6":"# importing data\nimport re\ndf = pd.read_csv(r'E:\\assignment\\access_log_Jul95.txt', sep= r'\\s(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)(?![^\\[]*\\])',\n    engine='python', names = ['host', 'x','y', 'time', 'z', 'url', 'response', 'size'])","cf4d744e":"# looking at first 5 rows of the data\ndf.head()","d15e4fd3":"# For time data we need to remove some unwanted strings([,]) for python to read the timeseries data.\ndf.time = df.time.str.strip(']')\ndf.time = df.time.str.strip('[')","ddd356a1":"# checking the data transformations\ndf.head()","4b88aa29":"# Data transformation: string 0400 is not needed for our purposes\ndf.time = df.time.str.strip('\/-[04]')","313df378":"# checking\ndf.head()","81b8a3a7":"# removing (\"\") form the data\ndf.z= df.z.str.strip('\"')\ndf","7a28117d":"# To separate request type from thr url we can use str.split from pandas.\ndf[['request_type','url1']] = df.z.str.split(' \/', 1, expand = True)","c542f267":"# Making sure that the String manipulations were correctly done\ndf.head()","55874d49":"# Now we can drop the unwanted columns as we have used them to achieve the required format.\ndf = df.drop(columns=['x', 'y', 'z'], axis=1)","0b98cad4":"df","c09bee65":"# Renaming the columns to get the columns to look like the given format.\ndf = df.rename(columns={\"url1\": \"url\", \"url\": \"response\", \"response\":\"size\", \"size\": \"size1\"})","a5c444b8":"df = df.drop('size1', axis=1)","affc0a43":"df.head()","fbfe0725":"# Stripping the whitespace in the time column.\ndf.time = df.time.str.strip()","94053284":"# Reading the timeseries data\ndf.time  = pd.to_datetime(df.time, format = '%d\/%b\/%Y:%H:%M:%S')\ndf.head()","0f2df4ea":"# Setting the index column as the timeseries column for data visualization\ndf1 = df.set_index(['time'])","5cff71f0":"df1.head()","9cf8da1e":"# Using resampling column to get the number of requests per hour.\nresample = df1.resample('H')\nresample.count()","50fc014d":"# PLotting hourly requests using plt\nplt.figure(figsize = (15,10))\nplt.title('Number of requests per hour')\nplt.plot(resample.count())","89ae5e5c":"# Plotting the request types\nsns.countplot(x = 'request_type', data=df)","99db4703":"# In more detail\ndf.request_type.value_counts()","68b90c03":"df1.head()","0058e154":"# checking and understanding the size column\ndf['size'].value_counts()","fb51c393":"# cleaning the data, getting rid of unwanted objects (-, <)\ndf['size']= df['size'].replace('-', 0)\ndf['size']= df['size'].replace('<', 0)","3f1b8fc9":"# changing the type of data from object to integer\ndf['size'] = df['size'].astype(int)","71250bce":"# To get the one-dimensional array\ns_array = df[[\"size\"]].to_numpy().flatten()\ns_array","c1abb986":"# Binning the data using qcut function from pandas\nbins = pd.qcut(s_array, 10)\nbins","d43e18b7":"# Getting the counts of each bin\nbins.value_counts() ","bc88d4f4":"# Understanding the url column\ndf['url'].head()","32c1505d":"# String manipulation of url column\ndf['url'] = df['url'].str.replace('\/1.0', ' ').str.strip()","02064185":"df['url'].head()","cfb32e20":"# Getting the required format\ndf[['url','protocol']] = df['url'].str.rsplit(' ', 1, expand = True)","37a67efa":"df['url'].value_counts()","93db4563":"df['protocol'].value_counts()","4f41bb9a":"# separating the url and filetype\ndf[['url','file_type']] = df['url'].str.rsplit('.', 1, expand = True)","c085ad3d":"df['url'].value_counts()","7cd3a94d":"# counting the file formats\ndf['file_type'].value_counts()","11037665":"# Categorization of file formats \ndef f(x):\n    if x == 'gif':\n        return 'image'\n    elif x == 'jgp':\n        return 'image'\n    elif x== 'html':\n        return 'html'\n    else:\n        return 'Other'\n    \ndf['file_type'] = df['file_type'].apply(f)","1070ef78":"df.head()","ed16defb":"df['file_type'].value_counts()","2afc9afc":" From the 4th hour the number of page visits increase again increasing dramatically from the 7th hour. The website visits increase again in the 12th hour and peaking in the 17th hour.","5c552671":"Image file type was rendered 45818 times.","ff6598ec":"The bin which has the highest count is the bin 3985-7074. It has count of 11193.","e6ca544e":"Here we have separated the text data using sep function in read.csv command. We also have named the columns for the time being to make it easier to read."}}