{"cell_type":{"6b0e5442":"code","4a01b86c":"code","29f5751c":"code","f04ed2ed":"code","198b1c65":"code","e8074de8":"code","bec03b2a":"code","79b110a2":"code","b662b549":"code","ef609e56":"code","95a09e3e":"code","74bb3202":"code","9c258945":"code","62054e1b":"code","03448e3a":"code","6fe4d7d5":"code","3644018a":"code","adfe9499":"code","88382b9f":"code","177edd08":"markdown","1b794b0f":"markdown","1fa6b98f":"markdown","b6e360ea":"markdown","7f9fc85c":"markdown","aef2c142":"markdown","32e8a27a":"markdown","bb0599a6":"markdown","06ce6a66":"markdown","52a780e2":"markdown","a0b6d467":"markdown","c0e2dec9":"markdown","34bab2cf":"markdown","ee58e4cc":"markdown","2884a804":"markdown","6f3bcb62":"markdown","9126d86a":"markdown","b2dd8466":"markdown","8e8b091e":"markdown","de6a8347":"markdown","b73948f1":"markdown","e3d66cc8":"markdown"},"source":{"6b0e5442":"import plotly as py\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\npy.offline.init_notebook_mode(connected=True)\n\nimport folium\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport math\nimport random\nfrom datetime import timedelta\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#color pallette\ncnf = '#393e46'\ndth = '#ff2e63'\nrec = '#21bf73'\nact = '#fe9801'","4a01b86c":"df = pd.read_csv('..\/input\/covid19-datasets\/covid_19_data_cleaned.csv', parse_dates=['Date'])\ncountry_daywise = pd.read_csv('..\/input\/covid19-datasets\/country_daywise.csv', parse_dates=['Date'])\ncountrywise = pd.read_csv('..\/input\/covid19-datasets\/countrywise.csv')\ndaywise = pd.read_csv('..\/input\/covid19-datasets\/daywise.csv', parse_dates=['Date'])","29f5751c":"df.head()","f04ed2ed":"df['Province\/State'] = df['Province\/State'].fillna('')","198b1c65":"df.head()","e8074de8":"df.isnull().sum()","bec03b2a":"df.info()","79b110a2":"df.head()","b662b549":"confirmed = df.groupby('Date').sum()['Confirmed'].reset_index()\nrecovered = df.groupby('Date').sum()['Recovered'].reset_index()\ndeaths = df.groupby('Date').sum()['Deaths'].reset_index()","ef609e56":"df.info()","95a09e3e":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = confirmed['Date'], y= confirmed['Confirmed'], name='Confirmed', line=dict(color = 'Orange', width = 2)))\nfig.add_trace(go.Scatter(x = recovered['Date'], y= recovered['Recovered'], name='Recovered', line=dict(color = 'Blue', width = 2)))\nfig.add_trace(go.Scatter(x = deaths['Date'], y= deaths['Deaths'], name='Deaths', line=dict(color = 'Red', width = 2)))\nfig.update_layout(title='Covid-19 Cases Worldwide', xaxis_tickfont_size = 14, yaxis = dict(title='Number of Cases'))\nfig.show()","74bb3202":"df['Date'] = df['Date'].astype(str) #converting datetime to string for plotly.express","9c258945":"temp = df.groupby('Date')['Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp = temp.melt(id_vars = 'Date', value_vars= ['Active', 'Recovered', 'Deaths'])\nfig = px.area(temp, x='Date', y='value', color='variable', height = 600, title = 'Covid-19 Cases Worldwide (rangeslider)', color_discrete_sequence=[act,rec,dth])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","62054e1b":"fig = px.line(country_daywise, x = 'Date', y = 'Confirmed', color = 'Country', height = 600,\n             title='Confirmed', color_discrete_sequence = px.colors.sequential.GnBu_r)\nfig.update_layout(showlegend=False)\nfig.show()\n\n\nfig = px.line(country_daywise, x = 'Date', y = 'Deaths', color = 'Country', height = 600,\n             title='Deaths', color_discrete_sequence = px.colors.sequential.Redor_r)\nfig.update_layout(showlegend=False)\nfig.show()","03448e3a":"fig = px.bar(country_daywise, x = 'Date', y = 'Confirmed', color = 'Country', height = 600,\n            title='Confirmed', color_discrete_sequence=px.colors.sequential.GnBu_r)\nfig.update_layout(showlegend = False)\nfig.show()","6fe4d7d5":"gt_1m = country_daywise[country_daywise['Confirmed']>1000000]['Country'].unique()\n\ntemp = country_daywise.groupby(['Country', 'Date'])['Confirmed'].sum().reset_index()\ntemp = temp[temp['Country'].isin(gt_1m)]\n\ncountries = temp['Country'].unique()\n\nncols = 3\nnrows = math.ceil(len(countries)\/ncols)\n\nfig = make_subplots(rows=nrows, cols = ncols, shared_xaxes= False, subplot_titles=countries)\n\nfor ind, country in enumerate(countries):\n    row = int((ind\/ncols)+1)\n    col = int((ind%ncols)+1)\n    fig.add_trace(go.Bar(x = temp['Date'], y = temp.loc[temp['Country']==country, 'Confirmed'], name = country),\n                  row = row, col = col)\n    \nfig.update_layout(height=4000, title_text = 'Confirmed Cases in Countries with over 1M Cases per Day')\nfig.update_layout(showlegend = False)\nfig.show()","3644018a":"top  = 10\n\nfig_cc = px.bar(countrywise.sort_values('Confirmed').tail(top), x = 'Confirmed', y = 'Country',\n              text = 'Confirmed', orientation='h', color_discrete_sequence=[act])\nfig_dr = px.bar(countrywise.sort_values('Deaths').tail(top), x = 'Deaths', y = 'Country',\n              text = 'Deaths', orientation='h', color_discrete_sequence=[dth])\n\nfig_nc = px.bar(countrywise.sort_values('New Cases').tail(top), x = 'New Cases', y = 'Country',\n              text = 'New Cases', orientation='h', color_discrete_sequence=['#f04341'])\ntemp = countrywise[countrywise['Population']>1000000] #temp value 1M\nfig_p = px.bar(temp.sort_values('Cases \/ Million People').tail(top), x = 'Cases \/ Million People', y = 'Country',\n              text = 'Cases \/ Million People', orientation='h', color_discrete_sequence=['#b40398'])\n\n\n\nfig_wc = px.bar(countrywise.sort_values('1 week change').tail(top), x = '1 week change', y = 'Country',\n              text = '1 week change', orientation='h', color_discrete_sequence=['#c04041'])\ntemp = countrywise[countrywise['Confirmed']>100] #set threshold\nfig_wi = px.bar(temp.sort_values('1 week % increase').tail(top), x = '1 week % increase', y = 'Country',\n              text = '1 week % increase', orientation='h', color_discrete_sequence=['#b2327d'])\n\n\nfig = make_subplots(rows = 3, cols = 2, shared_xaxes=False, horizontal_spacing=0.2, vertical_spacing=.05,\n                   subplot_titles=('Confirmed Cases', 'Deaths Reported',\n                                   'New Cases', 'Cases \/ Million People',\n                                   '1 week change', '1 week % increase'))\n\nfig.add_trace(fig_cc['data'][0], row = 1, col = 1)\nfig.add_trace(fig_dr['data'][0], row = 1, col = 2)\n\nfig.add_trace(fig_nc['data'][0], row = 2, col = 1)\nfig.add_trace(fig_p['data'][0], row = 2, col = 2)\n\nfig.add_trace(fig_wc['data'][0], row = 3, col = 1)\nfig.add_trace(fig_wi['data'][0], row = 3, col = 2)\n\nfig.update_layout(height = 1500)\nfig.show()\n","adfe9499":"fig = px.choropleth(country_daywise, locations= 'Country', locationmode='country names', color = np.log(country_daywise['Confirmed']),\n                   hover_name = 'Country', animation_frame=country_daywise['Date'].dt.strftime('%Y-%m-%d'),\n                   title='Cases over time', color_continuous_scale=px.colors.sequential.GnBu)\n\nfig.update(layout_coloraxis_showscale = True)\nfig.show()","88382b9f":"top = 50\nfig = px.scatter(countrywise.sort_values('Deaths', ascending = False).head(top), \n                x = 'Confirmed', y = 'Deaths', color = 'Country', size = 'Confirmed', height = 600,\n                text = 'Country', size_max=50, log_x = True, log_y = True,\n                title='Deaths vs Confirmed Cases (Cases are on log10 scale)')\n\nfig.update_traces(textposition = 'top center')\nfig.update_layout(showlegend = False, font_size = 8)\nfig.show()","177edd08":"<h1 id=\"Covid-19 EDA\">\nCovid-19 EDA\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","1b794b0f":"Observations:\n- Great map for understanding trends over time\n- Range slider a bit sluggish, animation by day not dramatic enough","1fa6b98f":"<h1 id=\"confirmed_world_stacked\">\nConfirmed Cases Worldwide - Stacked\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","b6e360ea":"Observations:\n- Correlation between confirmed and deaths\n- Countries towards bottom-right effecient at dealing with covid (Austria, Sweden, Morroco)\n- Countries top-left not so much (Mexico, Peru, Indonesia)\n- Would be interesting to offset with population sizes\/healthcare\n- Interactivity adds value to visual","7f9fc85c":"Observations:\n- Recovered data stopped being reported after August 4th 2021\n- We currently have more than a quarter billion confirmed cases\n- Deaths seem to not have dramatically increased, hopefully due to our ability to manage Covid at this stage\n\nOn further inspection it is clear that the discontinuation of Recovered data by CSSE at Johns Hopkins University is due their assesment of the metric being unreliable globally. See also:\nhttps:\/\/github.com\/CSSEGISandData\/COVID-19\/issues\/4465","aef2c142":"<h1 id=\"imports\">\nImports\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","32e8a27a":"Observations:\n- Clear and easy to read - useful\n- Interactivity offers nothing in these graphs - values suffice\n- US tops the charts in many metrics, but in cases per 1M it's the lowest (US is a big country). This is also apperent from the 1 week change graphs, where the US doesn't even show up in % increase, though it has the highest total new cases.\n- If your country's name end in 'ia', you'll have a lot of cases per 1M (obvious correlation)","bb0599a6":"Grouping to create 3 districtive DataFrames","06ce6a66":"<h1 id=\"explorations\">\nExplorations\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","52a780e2":"<h1 id=\"scatter\">\nConfirmed vs. Deaths  per Country - Scatter\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","a0b6d467":"The use case for plotly is not immediately obvious to me, especially when more powerful and user-friendly visualization tools such as Tableau exist. Its direct integration into the Python ecosystem is great, but ultimately not a redeeming factor.\n\nWhat are your thoughts? Would love to hear from my fellow Kagglers!","c0e2dec9":"Exploration of Covid-19 datasets through Plotly (or, actually: Exploration of Plotly through a Covid-19 datasets).\n\nMy goal here was to combine several datasets and explore the Covid-19 pandemic to learn a new tool I was unfamiliar with: Plotly. I explored various functionalities to create interactive visualizations through various graphs and maps. Though I'm not sure it would soon replace Tableau, it was interesting to explore its functionality.\n\nDatasets: https:\/\/github.com\/laxmimerit\/Covid-19-Preprocessed-Dataset\/\n\nInspiration: https:\/\/www.udemy.com\/course\/complete-data-visualization-in-python","34bab2cf":"Observations:\n- Seperating each country makes it possible to read trends\n- Different Y-axes make reading absolute values challenging\n- Interactivity offers little value","ee58e4cc":"<h1 id=\"confirmed_deaths_world_line\">\nConfirmed Cases and Deaths Worldwide - Line\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","2884a804":"<h1 id=\"datasets\">\nDatasets\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","6f3bcb62":"<h1 id=\"map\">\nConfirmed Cases - Map\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","9126d86a":"<h1 id=\"confirmed_country_1M\">\nConfirmed Cases per Country (over 1M cases)\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","b2dd8466":"Observations:\n- US, India and Brazil have many millions of confirmed cases (offset vs. population?)\n- Graphs very hard to read, interactivity offers little to help this fact\n- Local trends hard to estimate","8e8b091e":"Let's explore our dataset using plotly, starting with total confirmed cases over time.","de6a8347":"Observations:\n- Beautiful visual\n- Interactivity offers more to explore, but static would've worked just fine\n- Due to large number of countries the abstraction of colors helps (it's about reading the difference vs. neighbor, not each individual country vs. whole)","b73948f1":"<h1 id=\"conclusion\">\nConclusion\n<a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>","e3d66cc8":"<h1 id=\"various_top10\">\nVarious Metrics - Top 10\n    <a class=\"anchor-link\" href=\"https:\/\/www.kaggle.com\/niekvanderzwaag\/covid-19-eda\/\"><\/a>\n<\/h1>"}}