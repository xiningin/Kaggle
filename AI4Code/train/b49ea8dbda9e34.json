{"cell_type":{"5d003c8d":"code","adc276c8":"code","92c16230":"code","b7832759":"code","ae210b71":"code","40f403ee":"code","4375e144":"code","2ecefb2f":"code","77881e6c":"code","9431dc7a":"code","4031fdcd":"code","9ed2a7e1":"code","0eafc708":"code","88391e83":"code","ea0bdb9c":"code","d2e2b7bc":"code","4b27a578":"code","9e27f732":"code","f62020da":"code","2355ee2c":"code","48eb6d88":"markdown","1ecd9f2c":"markdown","197b156f":"markdown","c67fa9b8":"markdown","2d91e624":"markdown","473bd43b":"markdown","2777206e":"markdown","3e6a05a7":"markdown","9986da6b":"markdown","fcee7707":"markdown","807fac13":"markdown","5367dfd8":"markdown"},"source":{"5d003c8d":"# importing libraries\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tensorflow import keras\nfrom keras.preprocessing.image import ImageDataGenerator as Imgen\nfrom keras.models import Model,Sequential\nfrom keras.layers import Input,Conv2D,MaxPooling2D,Dropout,Flatten,Dense,GlobalAveragePooling2D,BatchNormalization\nfrom keras.callbacks import EarlyStopping,ModelCheckpoint\n\nfrom keras.applications.mobilenet_v2 import MobileNetV2\nfrom keras.applications.mobilenet_v2 import preprocess_input\n\nfrom sklearn.metrics import confusion_matrix,classification_report","adc276c8":"traingen = Imgen(preprocessing_function=preprocess_input,\n                \n                shear_range = 0.2,\n                zoom_range = 0.2,\n                width_shift_range = 0.2,\n                height_shift_range = 0.2,\n                fill_mode=\"nearest\",\n                validation_split=0.15)\n\n\ntestgen = Imgen(preprocessing_function=preprocess_input)","92c16230":"trainds = traingen.flow_from_directory(\"..\/input\/new-plant-diseases-dataset\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/train\",\n                                      target_size=(150,150),\n                                       class_mode=\"categorical\",\n                                       seed=123,\n                                       batch_size=32,\n                                       subset=\"training\"\n                                      )\nvalds = traingen.flow_from_directory(\"..\/input\/new-plant-diseases-dataset\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/train\",\n                                      target_size=(150,150),\n                                       class_mode=\"categorical\",\n                                       seed=123,\n                                       batch_size=32,\n                                   subset=\"validation\"\n                                      )\ntestds = testgen.flow_from_directory(\"..\/input\/new-plant-diseases-dataset\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/valid\",\n                                    target_size=(150,150),\n                                    class_mode=\"categorical\",\n                                    seed=123,\n                                    batch_size=32,\n                                    shuffle=False)","b7832759":"c = trainds.class_indices\nclasses = list(c.keys())\nclasses","ae210b71":"plt.figure(figsize=[20,8])\nsns.countplot(x=trainds.classes);","40f403ee":"x,y = next(trainds)\n\n# function to plot images\ndef plotImages(x,y):\n    plt.figure(figsize=[15,11])\n    for i in range(16):\n        plt.subplot(4,4,i+1)\n        plt.imshow(x[i])\n        plt.title(classes[np.argmax(y[i])])\n        plt.axis(\"off\")\n    plt.show()","4375e144":"plotImages(x,y)","2ecefb2f":"base_model = DenseNet201(include_top=False,\n                     input_shape=(150,150,3),\n                      weights = \"imagenet\",\n                      pooling=\"avg\"\n                     )\nbase_model.trainable = False","77881e6c":"image_input = Input(shape=(150,150,3))\n\nx = base_model(image_input,training = False)\n\nx = Dense(512,activation = \"relu\")(x)\n\nx = Dropout(0.3)(x)\n\nx = Dense(128,activation = \"relu\")(x)\n\nimage_output = Dense(38,activation=\"softmax\")(x)\n\nmodel = Model(image_input,image_output)","9431dc7a":"model.summary()","4031fdcd":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","9ed2a7e1":"my_calls = [EarlyStopping(monitor=\"val_accuracy\",patience=3),\n            ModelCheckpoint(\"Model.h5\",verbose= 1 ,save_best_only=True)]","0eafc708":"hist = model.fit(trainds,epochs=22,validation_data=valds,callbacks=my_calls)","88391e83":"model.evaluate(testds)","ea0bdb9c":"plt.figure(figsize=(15,6))\n\nplt.subplot(1,2,1)\nplt.plot(hist.epoch,hist.history['accuracy'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_accuracy'],label = 'validation')\n\nplt.title(\"Accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(hist.epoch,hist.history['loss'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_loss'],label = 'validation')\n\nplt.title(\"Loss\")\nplt.legend()\nplt.show()","d2e2b7bc":"pred = model.predict(testds)","4b27a578":"pred = [np.argmax(i) for i in pred]","9e27f732":"y_test = testds.classes","f62020da":"print(classification_report(pred,y_test))","2355ee2c":"plt.figure(figsize=[20,15])\nsns.heatmap(confusion_matrix(pred,y_test),annot = True, fmt = \"d\", cmap = \"viridis\");","48eb6d88":"**Classification Report**","1ecd9f2c":"# **Plant Disease**","197b156f":"### **Data Generation**","c67fa9b8":"**Classes**","2d91e624":"**Test**","473bd43b":"**Callbacks**","2777206e":"**Train**","3e6a05a7":"**Confusion Matrix**","9986da6b":"## **Predictions.**","fcee7707":"## **Model**","807fac13":"**Compile**","5367dfd8":"**One Batch**"}}