{"cell_type":{"89fe9edf":"code","39610d48":"code","8cee4dec":"code","7577111b":"code","fdbc80c5":"code","4c201ae6":"code","7c0aa146":"code","377b8baf":"code","f1bc90d0":"code","41c155f8":"code","187f37d7":"code","5f064cc1":"code","95e7e019":"code","56ebd1d8":"code","6d5d7f7c":"code","2b95840c":"code","6d8aa9db":"code","6935044f":"code","9df884f8":"code","2243413e":"code","6361aecf":"code","4b06cb45":"code","9289c37d":"code","c1aee5e1":"code","dbc9e2ef":"code","54d7dcff":"code","83d0918e":"code","7e3f542f":"code","0393b3ef":"markdown","e21e0ff1":"markdown","83c16717":"markdown","f8617901":"markdown","47876bd7":"markdown","23b4fbd1":"markdown","fa16c2dd":"markdown","5b92148a":"markdown","b3316c13":"markdown","cd92b6be":"markdown","e71ede2e":"markdown","3f9942bc":"markdown","633b6458":"markdown","003f8fff":"markdown","93c2a244":"markdown","062e0555":"markdown","ae1cae80":"markdown","e6dc5c2b":"markdown"},"source":{"89fe9edf":"import pandas as pd\nimport seaborn as sns\nimport numpy as np","39610d48":"df = pd.read_csv(\"\/kaggle\/input\/crimes-in-boston\/crime.csv\",encoding='latin1')\ndf","8cee4dec":"df = df[[\"OFFENSE_CODE_GROUP\",\"DISTRICT\",\"OCCURRED_ON_DATE\",\"STREET\"]]\ndf[\"DATE\"] = pd.to_datetime(df[\"OCCURRED_ON_DATE\"],format=\"%Y-%m-%d\").dt.date\ndf","7577111b":"!pip install progplot","fdbc80c5":"#import barwriter\nfrom progplot import BarWriter","4c201ae6":"#create the barwriter object\nbw = BarWriter()","7c0aa146":"help(bw.set_data)","377b8baf":"df","f1bc90d0":"bw.set_data(data=df, category_col=\"OFFENSE_CODE_GROUP\", timeseries_col=\"DATE\", value_col=\"DISTRICT\", groupby_agg=\"count\", resample_agg=\"sum\", output_agg=\"cumsum\", resample = \"1w\")\n","41c155f8":"help(bw.set_display_settings)","187f37d7":"bw.set_display_settings(time_in_seconds=30, video_file_name = \"total_crimes_by_type.mp4\")\n","5f064cc1":"help(bw.set_chart_options)","95e7e019":"bw.set_chart_options(x_tick_format=\"{:,.0f}\",\n                     palette=\"magma\", \n                     title=\"Top 10 Crimes by Total Offences from <mindatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", \n                     y_label=\"Offence\", \n                     use_top_x=20, display_top_x=10,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\")\nbw.test_chart(30)","56ebd1d8":"bw.set_chart_options(x_tick_format=\"{:,.0f}\",\n                     palette=\"bone\", # <--------Change \n                     title=\"Top 10 Crimes by Total Offences from <mindatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", \n                     y_label=\"Offence\", \n                     use_top_x=20, display_top_x=10,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\")\nbw.test_chart(30)","6d5d7f7c":"bw.set_chart_options(x_tick_format=\"{:,.0f}\",\n                     palette=\"bone\",\n                     title=\"Top 10 Crimes by Total Offences from <mindatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", \n                     y_label=\"Offence\", \n                     use_top_x=10, display_top_x=10,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\",\n                     sort=False) # <-------- SORTED?\nbw.test_chart(30)","2b95840c":"bw.write_video()\nbw.show_video()","6d8aa9db":"bw.create_gif()\nbw.show_gif()","6935044f":"# we will set the groupby to count. - this will count the crimes for each unique date.\n\n# we will resample per week and calculate the MEAN to get the mean daily value per week\n\n# we will use \"4rolling\" for the output_agg this will give us the mean over 4 windows to smooth the result.\n\n# AS THERE IS A LOT OF DATA THIS COULD TAKE SOME TIME TO RUN.\n\nbw.set_data(data=df, category_col=\"STREET\", timeseries_col=\"DATE\", value_col=\"DISTRICT\", groupby_agg=\"count\", resample = \"1w\", resample_agg=\"mean\", output_agg=\"4rolling\")\nbw.set_display_settings(time_in_seconds=30, video_file_name = \"mean_daily_crimes_by_street_.mp4\")","9df884f8":"bw.set_chart_options(x_tick_format=\"{:,.2f}\", #<---- add two decimals to the formatting as mean will most likely product floats\n                     palette=\"bone\",\n                     title=\"Mean Daily Crimes by Street from <rollingdatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", ##   <-------- change \n                     y_label=\"Offence\", \n                     use_top_x=15, display_top_x=10,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\",\n                     sort=True) # <-------- SORTED?\nbw.test_chart(30)","2243413e":"bw.write_video()\nbw.show_video()","6361aecf":"bw.set_chart_options(x_tick_format=\"{:,.2f}\", #<---- add two decimals to the formatting as mean will most likely product floats\n                     palette=\"bone\",\n                     title=\"Mean Daily Crimes by Street from <rollingdatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", ##   <-------- change \n                     y_label=\"Offence\", \n                     use_top_x=15, display_top_x=10,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\",\n                     sort=False) # <-------- SORTED?\nbw.test_chart(30)","4b06cb45":"bw.write_video()\nbw.show_video()","9289c37d":"bw.set_data(data=df, category_col=\"OFFENSE_CODE_GROUP\", timeseries_col=\"DATE\", value_col=\"DISTRICT\", groupby_agg=\"count\", resample_agg=\"sum\", output_agg=\"cumsum\", resample = \"1w\")\nbw.set_display_settings(time_in_seconds=30, video_file_name = \"total_crimes_by_type_picture.mp4\")","c1aee5e1":"# gather the images\n\n!wget https:\/\/raw.githubusercontent.com\/lewis-morris\/progplot\/master\/icons\/investigate.png\n!wget https:\/\/raw.githubusercontent.com\/lewis-morris\/progplot\/master\/icons\/medical.jpg\n!wget https:\/\/raw.githubusercontent.com\/lewis-morris\/progplot\/master\/icons\/theft.jpg\n!wget https:\/\/raw.githubusercontent.com\/lewis-morris\/progplot\/master\/icons\/accident.jpg","dbc9e2ef":"img_dict = {\"Investigate Person\":\".\/investigate.png\",\n\"Medical Assistance\":\".\/medical.jpg\",\n\"Larceny\":\".\/theft.jpg\",\n\"Motor Vehicle Accident Response\":\".\/accident.jpg\"}","54d7dcff":"bw.set_chart_options(x_tick_format=\"{:,.0f}\",\n                     palette=\"bone\", # <--------Change \n                     title=\"Top 4 Crimes by Total Offences from <mindatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", \n                     y_label=\"Offences\", \n                     use_top_x=4, display_top_x=4,\n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\",\n                     convert_bar_to_image=True,  ## <-------- set to true\n                     image_dict=img_dict  ## <------ input image dictionary\n                    )\nbw.test_chart(30)","83d0918e":"bw.set_chart_options(x_tick_format=\"{:,.0f}\",\n                     palette=\"bone\",\n                     title=\"Top 10 Crimes by Total Offences from <mindatetime> to <currentdatetime>\",dateformat=\"%Y-%m-%d\", \n                     y_label=\"Offence\", \n                     use_top_x=10, display_top_x=10, \n                     border_size=2, border_colour=(0.3,0.3,0.3),\n                     font_scale=1.3,\n                     use_data_labels=\"end\",\n                     convert_bar_to_image=True,  ## <-------- set to true\n                     image_dict=img_dict  ## <------ input image dictionary\n                    )\nbw.test_chart(30)","7e3f542f":"## Just to note - THIS IS SLOW\n## writing with images was 1) a headache to code 2) an efficiency nightmare.\n## Maybe oneday I will try and speed it up, but for now it is what it is.\n\nbw.write_video()\nbw.show_video()","0393b3ef":"## Then we can make a GIF just as easy","e21e0ff1":"# Video Rendering\n\n## The easy step","83c16717":"## Or if we want to keep the positions of each category static we can set \"sort=False\"","f8617901":"# Set Data\n-------------------------------\n\n## BarWriter has 3 stages to data input.\n\n1. The data is groupped by the set timeseries column by either sum, mean or count. (optional if you have already done this step in your dataframe).\n\n> We will choose count - the total crimes will then be summed for each unique date. (NOTE: When using COUNT we not need to set a numerical column for the data.)\n\n2. The data is resampled to ensure no values dropout while running the animation by either sum, mean or count (optional if you have already done this step in your dataframe).\n\n> We are going to resample sum to 1 week.\n\n3. The data is aggregatted using cumsum or rolling mean (optional if you have already done this step in your dataframe).\n\n> We are going to use cumsum to get the total crimes\n\n## BarWriter has 2 stages prior video rendering.\n\n1. Set the chart output details (and check visually)\n2. Set the video output details\n","47876bd7":"## If an image is missing from the dictionary a default will be displayed","23b4fbd1":"# Video Settings (display settings)\n-----------------------------------------\n\n## Next we need to define the output settings of the video file to be created\n\n1) (fps) The fps can be left default but you're free to change this.\n\n2) (time_in_seconds) This is the length you want your file to be once rendered.  If in the case of there being MORE fps \/ seconds than there is UNIQUE DATES, BarWriter auto smothes the transition between dates so playback is not juddery.\n\n3) (video_file_name) This can be x.mp4 for MP4V codec. \n\n4) (fourcccodecname) It is possible to change the fourcc codec if you are having video generation issues. NOT ADVISED AS WORKING ON KAGGLE \/ COLAB \/ MY LOCAL MACHINE FINE","fa16c2dd":"## Lets see the mean daily offences by street - just as easy.\n\n### 1) Set the data\n### 2) Set the display options\n### 3) Set the chart options\n### 4) Test\n### 5) Write Video","5b92148a":"# Chart options \n\n-----------------------------------\n\n## The most important step to get right. \n\n### There are a lot of options here so I suggest you have a play about with what you might like.\n\n### Default options work fine, but for a more customized approach try limiting the values adding a title and formatting text.\n\n### The docstring should explain as well as possible the options but please go to the end of this kernel for more examples. ","b3316c13":"## Download, Import an Initialize BarWriter","cd92b6be":"# Picture Bars\n\n## We can add images to replace the bars with a simple dictionary of categories\/images \n\n### Images can be .jpg or .png, they do not need to be scaled and they can include transparency.\n","e71ede2e":"# **progplot & BarWriter**\n\n### Timeseries animations can be made using a mix of matplotlib and opencv to produce interesting and memorable visual representations of data. \n\n> ### I've been working on a package that can help with this. Originally just for my own use, but think some one else might benefit from it.\n> ### Just made in my own time, so you might have some issues, who knows? If you do, let me know on github.\n\n","3f9942bc":"## We can change the colours if we're not happy with the current output","633b6458":"## All seems well, lets write the video","003f8fff":"## Check the chart settings\n\n### Don't forget the formatting and titles. ","93c2a244":"## Play back is all overthe place. This is where SORT=False would come in handy.","062e0555":"## Lets see if we can take a look at Total Crimes By Type","ae1cae80":"## Suggested options\n\n* set the format of the ticks\n\n* TITLE IS IMPORTANT\n\n* TITLE DATE FORMAT \n\n* use_top_x and display_top_x","e6dc5c2b":"<img src=\"https:\/\/raw.githubusercontent.com\/lewis-morris\/progplot\/master\/examples\/total_crimes_by_type.gif\" alt=\"Example\"> "}}