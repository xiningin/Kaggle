{"cell_type":{"cda63a17":"code","2c1c9a47":"code","e6f2c654":"code","b2ba3cdd":"code","dce8839e":"code","ad8043f1":"code","b436fadb":"code","92ef7940":"code","013fa93c":"code","07bcde69":"code","13a89d48":"code","0e491bf2":"code","9ad18bac":"code","463687f0":"code","fccaa418":"code","1dd072c2":"code","6194f007":"code","0732c26e":"code","c2bb1dbf":"code","cde75db2":"code","2e42ca90":"code","1940b036":"code","7b8492e7":"code","86868140":"code","c85dee9e":"code","719065b1":"code","7e28f816":"code","a84c6a3d":"code","09978ae5":"code","c3fc0ad0":"code","ecbe658a":"code","a5199864":"code","772c2820":"code","66800b2a":"code","9a7ce65d":"code","577e0b69":"code","bd29b156":"code","785ba278":"code","7a8eb389":"code","3a90614e":"code","521c1f6b":"code","6d43c4f6":"code","cbbc2745":"code","a8818b02":"code","a94050c2":"code","59a8c690":"code","0765425f":"code","32fa25e9":"code","7d2286d9":"code","5a19d4f5":"code","a8341165":"code","426aa6c7":"code","82bac592":"markdown","57fb8854":"markdown","6d1e5bf4":"markdown","6b29aeda":"markdown","bdfeac06":"markdown","e44c0f63":"markdown","a1cb994f":"markdown","b939a4c5":"markdown","d9e7d3e5":"markdown","158a0e23":"markdown"},"source":{"cda63a17":"# import libraries \nimport pandas as pd # Import Pandas for data manipulation using dataframes\nimport numpy as np # Import Numpy for data statistical analysis \nimport matplotlib.pyplot as plt # Import matplotlib for data visualisation\nimport seaborn as sns # Statistical data visualization\n# %matplotlib inline","2c1c9a47":"# Import Cancer data drom the Sklearn library\nfrom sklearn.datasets import load_breast_cancer\ncancer = load_breast_cancer()","e6f2c654":"cancer","b2ba3cdd":"cancer.keys()","dce8839e":"print(cancer['DESCR'])","ad8043f1":"print(cancer['target_names'])","b436fadb":"print(cancer['target'])","92ef7940":"print(cancer['feature_names'])","013fa93c":"print(cancer['data'])\n","07bcde69":"cancer['data'].shape","13a89d48":"df_cancer = pd.DataFrame(np.c_[cancer['data'], cancer['target']], columns = np.append(cancer['feature_names'], ['target']))\n","0e491bf2":"df_cancer.head()","9ad18bac":"df_cancer.tail()","463687f0":"x = np.array([1,2,3])\nx.shape","fccaa418":"Example = np.c_[np.array([1,2,3]), np.array([4,5,6])]\nExample.shape","1dd072c2":"sns.pairplot(df_cancer, hue = 'target', vars = ['mean radius', 'mean texture', 'mean area', 'mean perimeter', 'mean smoothness'] )","6194f007":"sns.countplot(df_cancer['target'], label = \"Count\") ","0732c26e":"sns.scatterplot(x = 'mean area', y = 'mean smoothness', hue = 'target', data = df_cancer)\n","c2bb1dbf":"#sns.lmplot('mean area', 'mean smoothness', hue ='target', data = df_cancer_all, fit_reg=False)","cde75db2":"# Let's check the correlation between the variables \n# Strong correlation between the mean radius and mean perimeter, mean area and mean primeter\nplt.figure(figsize=(20,10)) \nsns.heatmap(df_cancer.corr(), annot=True) ","2e42ca90":"\n# Let's drop the target label coloumns\nX = df_cancer.drop(['target'],axis=1)\n","1940b036":"X","7b8492e7":"y = df_cancer['target']\ny","86868140":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state=5)","c85dee9e":"X_train.shape","719065b1":"X_test.shape","7e28f816":"y_train.shape","a84c6a3d":"y_test.shape","09978ae5":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train, y_train)","c3fc0ad0":"y_predict = svc_model.predict(X_test)\ncm = confusion_matrix(y_test, y_predict)","ecbe658a":"sns.heatmap(cm, annot=True)","a5199864":"print(classification_report(y_test, y_predict))","772c2820":"min_train = X_train.min()\nmin_train","66800b2a":"range_train = (X_train - min_train).max()\nrange_train","9a7ce65d":"X_train_scaled = (X_train - min_train)\/range_train","577e0b69":"X_train_scaled","bd29b156":"sns.scatterplot(x = X_train['mean area'], y = X_train['mean smoothness'], hue = y_train)","785ba278":"sns.scatterplot(x = X_train_scaled['mean area'], y = X_train_scaled['mean smoothness'], hue = y_train)","7a8eb389":"min_test = X_test.min()\nrange_test = (X_test - min_test).max()\nX_test_scaled = (X_test - min_test)\/range_test","3a90614e":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train_scaled, y_train)","521c1f6b":"y_predict = svc_model.predict(X_test_scaled)\ncm = confusion_matrix(y_test, y_predict)\n\nsns.heatmap(cm,annot=True,fmt=\"d\")","6d43c4f6":"print(classification_report(y_test,y_predict))","cbbc2745":"param_grid = {'C': [0.1, 1, 10, 100], 'gamma': [1, 0.1, 0.01, 0.001], 'kernel': ['rbf']} ","a8818b02":"from sklearn.model_selection import GridSearchCV","a94050c2":"grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=4)","59a8c690":"grid.fit(X_train_scaled,y_train)","0765425f":"grid.best_params_","32fa25e9":"grid.best_estimator_","7d2286d9":"grid_predictions = grid.predict(X_test_scaled)","5a19d4f5":"cm = confusion_matrix(y_test, grid_predictions)","a8341165":"sns.heatmap(cm, annot=True)","426aa6c7":"print(classification_report(y_test,grid_predictions))","82bac592":"# PROBLEM STATEMENT","57fb8854":"# IMPROVING THE MODEL","6d1e5bf4":"## Excellent work! Now you have early warning models for detecting Bread Cancer ear. \n## Have nice healty life..\n\n#### This work is inspried from  This project is only for learning purposes please do not use it for commercial purposes. .","6b29aeda":"# IMPORTING DATA","bdfeac06":"\n- Predicting if the cancer diagnosis is benign or malignant based on several observations\/features \n- 30 features are used, examples:\n        - radius (mean of distances from center to points on the perimeter)\n        - texture (standard deviation of gray-scale values)\n        - perimeter\n        - area\n        - smoothness (local variation in radius lengths)\n        - compactness (perimeter^2 \/ area - 1.0)\n        - concavity (severity of concave portions of the contour)\n        - concave points (number of concave portions of the contour)\n        - symmetry \n        - fractal dimension (\"coastline approximation\" - 1)\n\n- Datasets are linearly separable using all 30 input features\n- Number of Instances: 569\n- Class Distribution: 212 Malignant, 357 Benign\n- Target class:\n         - Malignant\n         - Benign\n\n\nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+(Diagnostic)\n\n![image.png](attachment:image.png)","e44c0f63":"# PROJECT_004_SVM: BREAST CANCER CLASSIFICATION\n### Resul CALISKAN","a1cb994f":"# VISUALIZING THE DATA","b939a4c5":"# MODEL TRAINING (FINDING A PROBLEM SOLUTION)","d9e7d3e5":"# IMPROVING THE MODEL - PART 2","158a0e23":"# EVALUATING THE MODEL"}}