{"cell_type":{"3937dc36":"code","e9d65457":"code","c3dc1de7":"code","3f0e6619":"code","3f97fb97":"code","a6979c38":"code","016a0df2":"code","131b19e0":"code","761fb428":"code","2e131be5":"code","6c5ec7ff":"code","83d19c6f":"code","8905acc6":"code","354ba3a3":"code","3ebc5eb9":"code","43df78aa":"code","98cc3d08":"code","c5cc529c":"code","4032f1c8":"code","64875ea9":"code","82c19cdb":"code","ea8b2e81":"code","3d4f696a":"code","b241cf48":"code","48880410":"code","8c9d9bd1":"code","9dcf4244":"code","5c162fab":"code","c7f78d0f":"code","a36c30ed":"code","830cd547":"code","531c8bbb":"code","9d000c92":"code","9c3b42ac":"code","97eb42bf":"code","3dd6c890":"code","fb4e0af3":"code","32c61a59":"code","db3f3420":"code","d8b27e9f":"code","16c4fe70":"code","a9e89dd9":"code","38bb3c49":"code","963a4cb1":"code","af9fafda":"code","ea4a4121":"code","d3398a02":"code","37015f62":"code","bbbf4871":"code","a1b035c2":"code","cfdff1f0":"code","71a5ddfb":"code","27ebe20c":"code","11c2822a":"code","68cc25de":"code","535024f2":"code","7bb9f24a":"code","fa83fa9c":"code","5e30f802":"code","c82ffee0":"code","01279ae3":"code","371cc12a":"code","46ee208c":"code","eea1ad1d":"code","21cd198d":"code","aad56ecb":"code","52953d0a":"code","4e831294":"code","235a8a07":"code","b90fca4f":"markdown","202e2112":"markdown","2d4dbedc":"markdown","695afc8a":"markdown","4dfc053b":"markdown","5c1a5009":"markdown","b5f42b7f":"markdown","7e7f14ed":"markdown","8e704db8":"markdown","0260174a":"markdown","31bf57e4":"markdown","843aa071":"markdown","36d3999d":"markdown","ececd837":"markdown","13bcddf6":"markdown","777dc248":"markdown","e8122e9b":"markdown","7645516a":"markdown","6ed89031":"markdown","f7ae6f07":"markdown","d4eb9b55":"markdown","aa9cb70c":"markdown","536d78aa":"markdown","27f21b78":"markdown","3be17bcc":"markdown","c39faa59":"markdown","dbe212a0":"markdown","cf626588":"markdown"},"source":{"3937dc36":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9d65457":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nimport tensorflow as tf\nfrom tensorflow import keras\n%matplotlib inline\n\n#Machine Learning\n\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","c3dc1de7":"df = pd.read_csv('..\/input\/churn-modeling-dataset\/Churn_Modelling.csv')","3f0e6619":"df.head(5)","3f97fb97":"df.drop(['RowNumber','CustomerId','Surname'], axis = 1, inplace = True)","a6979c38":"df.shape","016a0df2":"df.describe()","131b19e0":"df.dtypes","761fb428":"#Let's have the corelation among the features\ndrop_elements = ['Geography', 'Gender']\nnew_df = df.drop(drop_elements, axis = 1)\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14,12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(new_df.astype(float).corr(),linewidths=0.1,vmax=1.0, \n            square=True, cmap=colormap, linecolor='white', annot=True)","2e131be5":"#Let'us see the realationship between numercal features and the target features.\ncreditscore_yes = df[df.Exited== 1].CreditScore\ncreditscore_no = df[df.Exited== 0].CreditScore\n\nplt.hist([creditscore_yes, creditscore_no], color = ['green', 'red'], label = ['Exited = 1', 'Exited = 0'] )\nplt.legend()","6c5ec7ff":"g = sns.FacetGrid(df, col='Exited')\ng.map(plt.hist, 'Age', bins=30)","83d19c6f":"Balance_yes = df[df.Exited== 1].Balance\nBalance_no = df[df.Exited== 0].Balance\n\nplt.hist([Balance_yes, Balance_no], color = ['green', 'red'], label = ['Exited = 1', 'Exited = 0'] )\nplt.legend()","8905acc6":"#Here we are seeing a lot's persomn having 0 balance,let's check it.\nx = len(df[df.Balance == 0].Balance)\nx","354ba3a3":"sns.countplot(x = 'Gender',hue = 'Exited', data = df)","3ebc5eb9":"len(df[df.Gender == 'Male'].Gender)","43df78aa":"len(df[df.Gender == 'Female'].Gender)","98cc3d08":"sns.countplot(x = 'Tenure', hue = 'Exited', data = df)","c5cc529c":"len(df[df.Tenure == 10].Tenure)","4032f1c8":"sns.countplot(x ='NumOfProducts', hue = 'Exited', data = df )","64875ea9":"cat_features = df[['Geography','Gender', 'NumOfProducts', 'HasCrCard', 'IsActiveMember',]].columns\n\n\ndf[['Geography', \"Exited\"]].groupby(['Geography'], as_index=False).mean().sort_values(by=\"Exited\", ascending=False)","82c19cdb":"df[['Gender', \"Exited\"]].groupby(['Gender'], as_index=False).mean().sort_values(by=\"Exited\", ascending=False)","ea8b2e81":"df[['NumOfProducts', \"Exited\"]].groupby(['NumOfProducts'], as_index=False).mean().sort_values(by=\"Exited\", ascending=False)","3d4f696a":"df[['HasCrCard', \"Exited\"]].groupby(['HasCrCard'], as_index=False).mean().sort_values(by=\"Exited\", ascending=False)","b241cf48":"df[['IsActiveMember', \"Exited\"]].groupby(['IsActiveMember'], as_index=False).mean().sort_values(by=\"Exited\", ascending=False)","48880410":"\n\nsns.countplot(x = 'Geography', data = df)","8c9d9bd1":"\nsns.countplot(x = 'Geography',hue = 'Exited', data = df)","9dcf4244":"g = df.groupby('Geography')","5c162fab":"France = g.get_group('France')\nGermany = g.get_group('Germany')\nSpain = g.get_group('Spain')","c7f78d0f":"def ratio(m):\n    x = len(m[m.Exited == 1].Exited)\n    y = len(m[m.Exited == 0].Exited)\n    print(x)\n    print(y)\n    ratio = x\/y\n    \n    return ratio","a36c30ed":"\n\nratio(France)","830cd547":"ratio(Germany)\n","531c8bbb":"ratio(Spain)","9d000c92":"sns.distplot(France.Age)","9c3b42ac":"sns.distplot(Germany.Age)","97eb42bf":"sns.distplot(Spain.Age)","3dd6c890":"g = sns.FacetGrid(France, col='Exited')\ng.map(plt.hist, 'Age', bins=30)","fb4e0af3":"g = sns.FacetGrid(Germany, col='Exited')\ng.map(plt.hist, 'Age', bins=30)","32c61a59":"g = sns.FacetGrid(Spain, col='Exited')\ng.map(plt.hist, 'Age', bins=30)","db3f3420":"len(France[France.Age > 78].Age)","d8b27e9f":"len(Germany[Germany.Age > 78].Age)","16c4fe70":"len(Spain[Spain.Age > 78].Age)","a9e89dd9":"# let's Check Balane features with respect to each country.\nx = len(France[France.Balance == 0].Balance)\n\nx","38bb3c49":"x = len(Germany[Germany.Balance == 0].Balance)\ny = len(Germany[Germany.Balance >100000].Balance)\n\nprint('Customer  having balance, 0 = ' ,x)\nprint('Customer  having balance greater then, 100000  = ' ,y)\n","963a4cb1":"x = len(Spain[Spain.Balance == 0].Balance)\nx","af9fafda":"sns.countplot(x = 'Gender', data = France)","ea4a4121":"sns.countplot(x = 'Gender', data = Germany)","d3398a02":"\nsns.countplot(x = 'Gender', data = Spain)","37015f62":"## distribution and checking for outliers in numeric features\n\nfeatures = df[['Age','Tenure','Balance','NumOfProducts','HasCrCard','IsActiveMember','EstimatedSalary']].columns\nfor i in features:\n    sns.boxplot(x=\"Exited\",y=i,data=df)\n    plt.title(i+\" by \"+\"Exited\")\n    plt.show()","bbbf4871":"#Mapping the Gender and Geography features.\ndf['Gender'] = df['Gender'].map( {'Female': 1, 'Male': 0} ).astype(int)\ndf['Geography'] = df['Geography'].map( {'France': 0, 'Germany': 1,'Spain': 2} ).astype(int)\n","a1b035c2":"#Let's scale down the data.\n\ncols_to_scale = ['Tenure', 'CreditScore', 'Balance','EstimatedSalary']\nscaler = MinMaxScaler()\ndf[cols_to_scale] = scaler.fit_transform(df[cols_to_scale])","cfdff1f0":"df.head()","71a5ddfb":"Old_person = df[df.Age>70] #Didn't exit\nZer0_Balance =  df[df.Balance == 0] # Didn't exit\n\nWith_balance =  df[(df.Balance >= 0)  & (df.Geography == 1)]\nNumOfProducts_2 =  df[(df.NumOfProducts == 2)] # Didn't exit\n","27ebe20c":"NumOfProducts_2","11c2822a":"new_df = df.copy()","68cc25de":"X = df.drop(['Exited'], axis=1)\ny = df.Exited","535024f2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","7bb9f24a":"len(X_test.columns)","fa83fa9c":"\n\n\nmodel = keras.Sequential([\n    keras.layers.Dense(30, input_shape = (10,),activation = 'sigmoid'),\n     keras.layers.Dense(16,activation = 'relu' ),\n    \n     keras.layers.Dense(1,activation = 'sigmoid' )\n])\n\nmodel.compile(\n    optimizer = 'adam',\n    loss = 'binary_crossentropy',\n    metrics = ['accuracy']\n    \n)","5e30f802":"model.fit(X_train, y_train, epochs = 20,batch_size=32)","c82ffee0":"model.evaluate(X_test,y_test)","01279ae3":"y_p = model.predict(X_test)","371cc12a":"y_pred = []\nfor output in y_p:\n    if output>.5:\n        y_pred.append(1)\n    else:\n        y_pred.append(0)\n    ","46ee208c":"from sklearn.metrics import confusion_matrix, classification_report","eea1ad1d":" print(classification_report(y_test,y_pred))","21cd198d":"cm = tf.math.confusion_matrix(labels = y_test, predictions = y_pred)\nsns.heatmap(cm,annot = True)","aad56ecb":"# Logistic Regression\n\nfrom sklearn.linear_model import LogisticRegression\n\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\nY_pred = logreg.predict(X_test)\nacc_log = round(logreg.score(X_train, y_train) * 100, 2)\nacc_log","52953d0a":"model_params = {\n    'svm': {\n        'model' : svm.SVC(gamma = 'auto'),\n        'params' : {\n            'C' : [1,10,20,12,15],\n            'kernel' : ['linear', 'poly', 'rbf', 'sigmoid']\n        }\n    },\n    'random-forest' : {\n        'model' : RandomForestClassifier(),\n        'params' : {\n             \"n_estimators\": [5, 10, 15, 20, 25], \n             \"max_depth\": [3, 5, 7, 9, 11, 13],\n         }\n    },\n    'logisticregression': {\n        'model' : LogisticRegression(),\n        'params' : {\n            'C' : [1,6,10],\n           \n        }\n    },\n    'decision_tree' :{\n        'model' :  DecisionTreeClassifier(),\n        'params' : {\n             'max_depth': [3, 5, 7, 9, 11, 13],\n        }\n    }\n    \n}","4e831294":"model_scores = []\n\nfor model_name ,mp in model_params.items():\n    clf = RandomizedSearchCV(mp['model'],mp['params'], cv = 5,return_train_score = False,n_iter = 2)#for the computational purpose set n_ter = 2\n    clf.fit(X_train,y_train)\n    \n    model_scores.append({\n        'model' : model_name,\n        'best_score' : clf.best_score_,\n        'best_params' : clf.best_params_\n        \n    })","235a8a07":"df = pd.DataFrame(model_scores)\ndf","b90fca4f":"# Model Selection with Hyperparameter tuning:","202e2112":"From the above description we are seeing no null values. ","2d4dbedc":"if we observe this three diagram we will see that top most high peak is ranging between 30-40 in the case\nof Spain and france.\n\nAnd in the case of Germany ther is high peak between 38-45.\n\nAnd if we compare this result with the earlier we get from Age distribution of total data, That's reason\npeople from Germany are are more likly to exit Because their majority people are in the age rangr 40-50.\n\nLet's more clear with help of some more visualization.","695afc8a":"Here we are seeing not so much difference.People are engaged with bank for 1-9 months has same mentality or thought process wheather to exit or not.\n","4dfc053b":"At first glance i don't think  'RowNumber'\t'CustomerId'\t'Surname' will evenfull in opur way.So drop them first.","5c1a5009":"\n## Analyze by pivoting featuress\n\nLet's analyze our feature correlations by pivoting features against each other. It also makes sense doing so only for features which are categorical type.\n","b5f42b7f":"So here we are mainly seeing 2 types of features.\n\n1.Numerical(float and int):CreditScore, Age, Tenure,Balance,EstimatedSalary .\n\n2.Categorical:Geography and Gender, NumOfProducts, HasCrCard, IsActiveMember, Exited, ","7e7f14ed":"Here most interest things to notice is 3617 customer of this bank has 0 balance.\n\nAnd out odf 3617, 3017 didn't exited from the bank\n","8e704db8":"Here we are seeing that some of the features are most dominating  in this dataset.\n\n1.Geography.\n\n2.Age.\n\n3.Balance.\n\n4.NumOfProducts.\n\nSo let's play woth this.First of all i will try to train the clasifier with all possible features and the only dominating features to check the difference.","0260174a":"## Parameter Grid:","31bf57e4":"From the above information we are clearly seeing that\n\n1.people from Germany are most likly to exit from bank.\n\n2.And Bank has most of the customers from France.\n\nand let's try to find out the causes.","843aa071":"Here we are seeing that\n\n1.Age ranging from 30-43 are most likely to not exited from the bank.\n\n2.People who's age is near 35 and 40 are most in number in not exiting from bank.\n\n3.And on the other hand around 40-45 age's people are exited from the bank.\n\n4.Here most noticable thing is the oldest men in the are ranging in 76-80 and none of them are exited from the bank.\n","36d3999d":"Let's play the Geography features.And Group the dataset by Geography.","ececd837":"from the above histogram we are seeing that Credit score ranging from 600-750 didn't exited from the bank.\nAnd we seeing a Normal distribution of creditscore.","13bcddf6":"\n\nLet's find out the ratio of exiting and non exiting person of each country.","777dc248":"Here we are not seeing too much outliers except the age column.And we cann't delete or replace them because those rows are actually eventfull in our way.","e8122e9b":"Here we are seeing that Male and Female customer in the bank is same but Male person are not likely to exited from the bank then Female.","7645516a":"# Features importence:","6ed89031":"\nThis is another interesting point. Most of the senior person in the company are from France.That's why their ratio is less then rest two.\nBecouse we have found that none of the senior customer are not exit.","f7ae6f07":"All the deep insights that i have gotten by analysis.\n\n1. Credit score ranging from 600-750 are most likely not to exited from the bank.\n\n2.Age ranging from 30-43 are most likely to not exited from the bank.\n\n3.People who's age is near 35 and 40 are most in number in not exiting from bank.\n\n4.And on the other hand around 40-45 age's people are exited from the bank.\n\n5.Here most noticable thing is the oldest men in the are ranging in 76-80 and none of them are exited from the bank.\n\n6.Customers who has NumOfProducts = 2 are mostly likely to stay in the bank.\n\n7.And customers are totally exited from bank having 4 products.\n\n8.people from Germany are most likly to exit from bank.\n\n9.And Bank has most of the customers from France.\n\n10.People from Germany are are more likly to exit Because their majority people are in the age rangr 40-50.\n\n11.Most of the senior person in the company are from France.\n\n12.Every customer who are from Germany has balance And arround 2000 customers has balance greater then 100000.They are likly to exit from the bank most.\nWhich means, there is strong possibility that they are facing problem while playing with money.\n\n13.ALmost two third of person who are from France are not interested in having balance.\n\n\n\n\n\n\n\n","d4eb9b55":"# Conclusion:","aa9cb70c":"# Introduction","536d78aa":"From the above diagram we are seeing that 'Age', 'Balance' are greatly connected with target variable. ","27f21b78":"Yes people who are engaged with the bank for 10 monthes is less in number that's why we are seeing less height in histogram.","3be17bcc":"From those above figure We get some importent information.\n\n1.Every customer who are from Germany has balance And arround 2000customers has balance greater then 100000.They are likly to exit from the bank most.\nWhich means, there is strong possibility that they are facing problem while playing with money.\n\n2.ALmost two third of person who are from France are not interested in having balance.\n","c39faa59":"From the above histogram we are noticing that:\n\n1.Customers who has NumOfProducts = 2 are mostly likely to stay in the bank.\n\n2.And customers are totally exited from bank having 4 products.","dbe212a0":"Let's Make some cluster of person based on the information that we got.","cf626588":"Here our objective is to find who and why people are churning from bank.\nkeeping this things in mind i try to get more as possible useful insight.\n\nWhat  this notebook contains:\n\nThough i have gone throuh all pipelines of Data Science, But i focuses more on EDA and getting usefull insights.\n\nWhat is in this Notebook.\n\n1.Collecting data.\n\n2.Exploratory data analysis.\n\n3.Data wrangling.\n\n4.Model building.\n\n\n# Hope you will enjoy it and  plz upvote it for encouragement.\n"}}