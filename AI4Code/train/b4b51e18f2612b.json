{"cell_type":{"a3b61d8e":"code","a36ee7f5":"code","0c103366":"code","597c63eb":"code","1961a9d0":"code","3ed796dd":"code","89c422c3":"code","7664dcbb":"code","45282692":"code","e244b705":"code","9618577d":"code","86c940d5":"code","a14800c9":"code","ecfeabab":"code","c22b5626":"code","86753329":"code","7dfaff42":"code","a11ee31f":"code","a4270733":"code","c2138531":"code","19b7e7e6":"code","dffcf5bc":"code","213d11c9":"code","521d545f":"code","94270679":"code","10807887":"code","50669d6f":"code","68f17762":"code","5ee7e609":"code","8d717477":"code","a6747d26":"markdown","fc8d7806":"markdown"},"source":{"a3b61d8e":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","a36ee7f5":"water.info()","0c103366":"water.describe()","597c63eb":"Potability_0=water[water.Potability==0]\nPotability_0.head()","1961a9d0":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","3ed796dd":"Potability_0.describe()","89c422c3":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","7664dcbb":"Potability_1=water[water.Potability==1]\nPotability_1.head()","45282692":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","e244b705":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","9618577d":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","86c940d5":"water.nunique()","a14800c9":"round(water.Potability.value_counts()*100\/len(water),2)","ecfeabab":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","c22b5626":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","86753329":"round(data.Potability.value_counts()*100\/len(data),2)","7dfaff42":"!pip install pycaret","a11ee31f":"from pycaret.classification import *","a4270733":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","c2138531":"rf = create_model('rf')","19b7e7e6":"print(rf)","dffcf5bc":"tuned_rf = tune_model(rf,optimize = 'Accuracy')","213d11c9":"plot_model(tuned_rf, plot = 'auc')","521d545f":"plot_model(tuned_rf, plot = 'pr')","94270679":"plot_model(tuned_rf, plot='feature')","10807887":"plot_model(tuned_rf, plot = 'confusion_matrix')","50669d6f":"evaluate_model(tuned_rf)","68f17762":"predict_model(tuned_rf)","5ee7e609":"unseen_predictions = predict_model(tuned_rf, data=data_unseen)\nunseen_predictions.head()","8d717477":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","a6747d26":"#### Treating Missing value for Potability_1 records","fc8d7806":"#### Treating Missing value for Potability_0 records"}}