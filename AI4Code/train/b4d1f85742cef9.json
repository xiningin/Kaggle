{"cell_type":{"d4d6a3df":"code","2d6d3d25":"code","b4069db6":"code","9ef578a8":"code","3fac3df0":"code","d525f4ed":"code","863cff46":"code","720ccb6f":"code","c1d86d07":"code","d3c1d51e":"code","17ca1743":"code","67ed4b70":"code","e7dda267":"code","26fd7a77":"code","5fbb9695":"markdown","b578f8db":"markdown","ad4c1331":"markdown","15bce58b":"markdown","32a4ea27":"markdown","459ed643":"markdown","bf70d56e":"markdown","ef3923fb":"markdown","bc16782b":"markdown","c8b2f71a":"markdown","f6fe9756":"markdown","f8b242dd":"markdown","ab01642d":"markdown","2ab2e5c5":"markdown","dad93e44":"markdown","9e2609fc":"markdown","6b02d163":"markdown"},"source":{"d4d6a3df":"#Loading of Dataset and required Libraries\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n\ndt= pd.read_csv(\n    \"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\",\n    encoding=\"utf_8\")\n\nimport warnings  \nwarnings.filterwarnings('ignore')","2d6d3d25":"#to check few rows\ndt.head()","b4069db6":"#to check the number of column & rows\nprint(\"dimensions are : \", dt.shape)","9ef578a8":"#to check the columns names, data type and null values (if any)\n\nprint(dt.info())","3fac3df0":"print(dt.isna().sum())","d525f4ed":"print(\"Before drop, total rows are: \", dt.shape[0])\n\n#drop the null values\ndt.dropna(inplace=True)\n\nprint(\"After drop, total rows are: \", dt.shape[0])\n\nprint(dt.isna().sum())","863cff46":"dtc= pd.read_csv(\"..\/input\/pakistan-city-names\/pk-city-v2.csv\",encoding='windows-1252')\ndtc = dtc.rename(columns = {'City_Name': 'City',}, inplace = False)\ndtc","720ccb6f":"duplicates = dt.duplicated(subset = \"City\", keep = False)\nlen(dt[duplicates])","c1d86d07":"\ndt.City=dt.City.str.split(':',expand=True)\ndt.City=dt.City.str.split(',',expand=True)\ndt.City=dt.City.str.split('\/',expand=True)\n\nprint(\"Total unique City Names in Guftugu Dataset: \", dt[\"City\"].nunique())\nprint(\"Total Unique City Names in external Dataset: \", dtc[\"City\"].nunique())","d3c1d51e":"dt[\"City\"] = dt[\"City\"].str.strip()\ndtc[\"City\"] = dtc[\"City\"].str.strip()\ndt['City'] = dt['City'].replace(\"khi\",'karachi')\ndt['City'] = dt['City'].replace(\"fsd\",'faisalabad')\ndt['City'] = dt['City'].replace(['lahore',\"lhr\"],'lahore')\ndt['City'] = dt['City'].replace([\"\u0627\u0633\u0644\u0627\u0645 \u0627\u0628\u0627\u062f\",'isb',\"ict\",\"A-17\",\"A-18\",\"B-17\",\"B-18\",\"C-15\",\"C-16\",\"C-17\",\"C-18\",\"D-10\",\"D-11\",\"D-12\",\"D-13\",\"D-14\",\"D-15\",\"D-16\",\"D-17\",\"D-18\",\"E-7\",\"E-8\",\"E-9\",\"E-10\",\"E-11\",\"E-12\",\"E-13\",\"E-14\",\"E-15\",\"E-16\",\"E-17\",\"E-18\",\"F-5\",\"F-6\",\"F-7\",\"F-8\",\"F-9\",\"F-10\",\"F-11\",\"F-12\",\"F-13\",\"F-14\",\"F-15\",\"F-16\",\"F-17\",\"F-18\",\"G-5\",\"G-6\",\"G-7\",\"G-8\",\"G-9\",\"G-10\",\"G-11\",\"G-12\",\"G-13\",\"G-14\",\"G-15\",\"G-16\",\"G-17\",\"G-18\",\"H-8\",\"H-9\",\"H-10\",\"H-11\",\"H-12\",\"H-13\",\"H-14\",\"H-15\",\"H-16\",\"H-17\",\"H-18\",\"I-8\",\"I-9\",\"I-10\",\"I-11\",\"I-12\",\"I-13\",\"I-14\",\"I-15\",\"I-16\",\"I18\",\"A17\",\"A18\",\"B17\",\"B18\",\"C15\",\"C16\",\"C17\",\"C18\",\"D10\",\"D11\",\"D12\",\"D13\",\"D14\",\"D15\",\"D16\",\"D17\",\"D18\",\"E7\",\"E8\",\"E9\",\"E10\",\"E11\",\"E12\",\"E13\",\"E14\",\"E15\",\"E16\",\"E17\",\"E18\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"F13\",\"F14\",\"F15\",\"F16\",\"F17\",\"F18\",\"G5\",\"G6\",\"G7\",\"G8\",\"G9\",\"G10\",\"G11\",\"G12\",\"G13\",\"G14\",\"G15\",\"G16\",\"G17\",\"G18\",\"H8\",\"H9\",\"H10\",\"H11\",\"H12\",\"H13\",\"H14\",\"H15\",\"H16\",\"H17\",\"H18\",\"I8\",\"I9\",\"I10\",\"I11\",\"I12\",\"I13\",\"I14\",\"I15\",\"I16\",\"I17\",\"I18\",],'islamabad')\ndt['City'] = dt['City'].replace('rwp','rawalpindi')\nprint(\"After manual tweaking total unique City Names in Guftugu Dataset are: \", dt[\"City\"].nunique())","17ca1743":"#using fuzzy logic\n\nprint(\"Total unique City Names in Guftugu Dataset BEFORE fuzz logic: \", dt[\"City\"].nunique())\nfrom fuzzywuzzy import process\nfor city in dtc['City']:\n    matches = process.extract(city, dt[\"City\"].unique() , limit = len(dtc['City']))\n    for potential_match in matches:\n        if potential_match[1] > 80:\n                dt.loc[dt['City'] == potential_match[0],\"City\"] = city\n                \nprint(\"Total unique City Names in Guftugu Dataset AFTER fuzz logic: \", dt[\"City\"].nunique())","67ed4b70":"#lets take the list of other cities which are not part of processed by fuzzy\n\nabc=dt[~dt[\"City\"].isin(dtc[\"City\"])]\nprint(\"so we have total\", len(abc[\"City\"].unique()) ,\"Cities which are not processed by fuzzywuzzy. we have to handle these as well.\")","e7dda267":"dt.loc[dt[\"City\"].str.len() <= 2] = \"Unknown_City\"\nprint(\"Total unique City Names in Guftugu Dataset NOW: \", dt[\"City\"].nunique())","26fd7a77":"dt.to_csv('pakcitylist.csv',index=False)","5fbb9695":"**Using Fuzzy Logic to replace the city name with its corresponding matching name**","b578f8db":"# Data cleaning","ad4c1331":"Three columns contains the missing values. we will drop these.","15bce58b":"# Uploading to csv file","32a4ea27":"\"Non-Null Count\" of few columns shows the presence of null values","459ed643":"**Handling missing values.**","bf70d56e":"# Thanks for viewing my notebook, you are welcome to give any comments\/suggestions to further improve my work.","ef3923fb":"so out of 19226 rows, 16234 rows have duplicate city names","bc16782b":"**Using Manual name replacement**","c8b2f71a":"**Unprocessed Names by Fuzz Logic**","f6fe9756":"The \"City\" column contains many typos. lets fix it.","f8b242dd":"so data contains 19239 rows and 8 columns","ab01642d":"# Loading data","2ab2e5c5":"**Task Details:**\nCleaning of City Name in Guftugu Publications Dataset","dad93e44":"**Adding another dataset with full list of City Names**","9e2609fc":"# Basic Data Exploration","6b02d163":"# City Names Cleaning"}}