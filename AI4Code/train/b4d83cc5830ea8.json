{"cell_type":{"2d3a1f61":"code","ef64f3d8":"code","1153f164":"code","32fa422e":"code","93070196":"code","fa6e3851":"code","3672d822":"code","390f0092":"code","198db81a":"markdown","d442ca3c":"markdown","998ffeeb":"markdown","d9191212":"markdown","d7ab5e18":"markdown","1f478a83":"markdown","98cd7787":"markdown"},"source":{"2d3a1f61":"# tf.keras.preprocessing.image_dataset_from_directory will be available in TF2.3\n!pip install -q tf-nightly\n\nimport tensorflow as tf","ef64f3d8":"import pathlib\ndataset_url = \"https:\/\/storage.googleapis.com\/download.tensorflow.org\/example_images\/flower_photos.tgz\"\ndata_dir = tf.keras.utils.get_file(origin=dataset_url, \n                                   fname='flower_photos', \n                                   untar=True,\n                                   cache_dir=\"\/kaggle\/working\/downloaded\")\ndata_dir = pathlib.Path(data_dir)","1153f164":"from functools import partial\n\nIMG_HEIGHT = 512\nIMG_WIDTH = 512\n\nload_split = partial(\n    tf.keras.preprocessing.image_dataset_from_directory,\n    data_dir,\n    validation_split=0.2,\n    shuffle=True,\n    seed=123,\n    image_size=(IMG_HEIGHT, IMG_WIDTH),\n    batch_size=1,\n)\n\nds_train = load_split(subset='training')\nds_valid = load_split(subset='validation')\n\nclass_names = ds_train.class_names\nprint(\"\\nClass names: {}\".format(class_names))","32fa422e":"from tensorflow.train import BytesList, FloatList, Int64List\nfrom tensorflow.train import Example, Features, Feature\n\ndef process_image(image, label):\n    image = tf.image.convert_image_dtype(image, dtype=tf.uint8)\n    image = tf.io.encode_jpeg(image)\n    return image, label\n\nds_train_encoded = (\n    ds_train\n    .unbatch()\n    .map(process_image)\n)\n\nds_valid_encoded = (\n    ds_valid\n    .unbatch()\n    .map(process_image)\n)","93070196":"def make_example(encoded_image, label):\n    image_feature = Feature(\n        bytes_list=BytesList(value=[\n            encoded_image,\n        ]),\n    )\n    label_feature = Feature(\n        int64_list=Int64List(value=[\n            label,\n        ])\n    )\n\n    features = Features(feature={\n        'image': image_feature,\n        'label': label_feature,\n    })\n    \n    example = Example(features=features)\n    \n    return example.SerializeToString()","fa6e3851":"!mkdir '\/kaggle\/working\/training'\n\nNUM_SHARDS = 32\nPATH = '\/kaggle\/working\/training\/shard_{:02d}.tfrecord'\n\nfor shard in range(NUM_SHARDS):\n    ds_shard = (\n        ds_train_encoded\n        .shard(NUM_SHARDS, shard)\n        .as_numpy_iterator()\n    )\n    with tf.io.TFRecordWriter(path=PATH.format(shard)) as f:\n        for encoded_image, label in ds_shard:\n            example = make_example(encoded_image, label)\n            f.write(example)","3672d822":"!mkdir '\/kaggle\/working\/validation'\n\nNUM_SHARDS = 8\nPATH = '\/kaggle\/working\/validation\/shard_{:02d}.tfrecord'\n\nfor shard in range(NUM_SHARDS):\n    ds_shard = (\n        ds_valid_encoded\n        .shard(NUM_SHARDS, shard)\n        .as_numpy_iterator()\n    )\n    with tf.io.TFRecordWriter(path=PATH.format(shard)) as f:\n        for encoded_image, label in ds_shard:\n            example = make_example(encoded_image, label)\n            f.write(example)","390f0092":"!rm -rf '\/kaggle\/working\/downloaded'","198db81a":"# Wrap with tf.Example #","d442ca3c":"If the dataset isn't too big, you could build the TFRecords within a notebook here on Kaggle and create a new dataset directly from the notebook. (Do *Save Version*, *Save & Run All*, and then create a new dataset from the notebook output.) For larger datasets, you could either run it on a personal machine or upgrade to a Cloud AI notebook. (See the option in the *File* menu.)","998ffeeb":"# Load Image Data #","d9191212":"To shard the dataset, we'll use `tf.data.Datset.shard`. We'll write the TFRecords by iterating shard by shard in an outer loop and within each shard in an inner loop. For TPU training, you'll want at least 8 shards for each split. First the training set:","d7ab5e18":"Now the validation set:","1f478a83":"# Introduction #\n\nIn this notebook we'll go through a start-to-finish example of building a dataset of TFRecords. To read the image files, we'll use a Keras dataset constructor new in TF2.3. You could read the data another way, if you like, but this simplifies some of the preprocessing.","98cd7787":"Finally, we'll clean up the downloaded files."}}