{"cell_type":{"2afd40a2":"code","224441e4":"code","90c13215":"code","f9c87b86":"code","faff40b0":"code","56c3eb1d":"code","2a0f9a3d":"code","39400fe2":"code","d61d518f":"code","fe8870d1":"code","e1130112":"code","c9a3a09e":"code","ecb586ee":"code","16f49ab7":"code","712e11d9":"code","6775180a":"code","ab069b54":"code","4521ed4b":"code","1334e4da":"code","c7b08bdf":"code","5c84cd4f":"code","5a6468c3":"code","56f16153":"code","4f014bf3":"code","e3e0c2c4":"code","051fff03":"code","6a78e046":"code","85255d45":"code","799ddf39":"code","dc2df1cd":"code","a64dcfc4":"code","21f57cca":"code","f2dfdd52":"code","37d1985b":"code","6c7cf889":"code","8cad08aa":"code","057ab3f2":"code","b5bd6d32":"code","df77627f":"code","b40f43c4":"code","7cd2cc1f":"code","d3abf7a5":"code","0a0683aa":"markdown","671d6989":"markdown"},"source":{"2afd40a2":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport pandas as pd\nimport sklearn\nimport matplotlib.pyplot as plt","224441e4":"## import the data\n\ndf = pd.read_csv('..\/input\/heart-diseases-data\/heart_deases_data.csv',delim_whitespace=True)","90c13215":"df.head()","f9c87b86":"correlation = df.corr()","faff40b0":"correlation","56c3eb1d":"## plot correlation","2a0f9a3d":"import seaborn as sns\nsns.heatmap(correlation)","39400fe2":"## extract the target from the data\n## this time target is three \n## 1) chest_pain_type\n## 2) depression\n## 3) class","d61d518f":"X = df.drop('class',axis=1)","fe8870d1":"X.head()","e1130112":"Y = df[['class']]","c9a3a09e":"Y.head()","ecb586ee":"## normalize the feature matrix","16f49ab7":"#  def normalize(df):\n#      return (df-df.mean())\/df.std()","712e11d9":"# X = normalize(X)","6775180a":"X ## after normalization","ab069b54":"from sklearn.model_selection import train_test_split","4521ed4b":"x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = .2)","1334e4da":"x_train.head()","c7b08bdf":"x_test.head()","5c84cd4f":"y_test.head()","5a6468c3":"y_train.head()","56f16153":"print (x_train.shape)\nprint (x_test.shape)\nprint (y_train.shape)\nprint (y_test.shape)\n","4f014bf3":"n_col = x_train.shape[1]  ## find th column number","e3e0c2c4":"n_col","051fff03":"from keras.layers import Input\nfrom keras.utils import plot_model\nfrom keras.models import Model\nfrom keras.layers import Input\nfrom keras.layers import Dense\nfrom keras.layers import Dropout\nfrom keras.models import Sequential\nfrom keras.layers import Dense","6a78e046":"def neural_net():\n    model = Sequential()\n    model.add(Dense(512, input_dim=n_col, activation='relu'))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dropout(.2))\n    model.add(Dense(256, activation='relu'))\n    model.add(Dense(3, activation='softmax'))\n    # Compile model\n    model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n    return model","85255d45":"model = neural_net()","799ddf39":"model.summary()","dc2df1cd":"history = model.fit(x_train, y_train, epochs=300, batch_size=10)\n","a64dcfc4":"print(history.history.keys())\n# summarize history for accuracy\nplt.plot(history.history['accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.show()\n# summarize history for loss\nplt.plot(history.history['loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.show()\n\n","21f57cca":"loss,accuracy = model.evaluate(x_test,y_test)","f2dfdd52":"print (\"Accuracy \"+str(accuracy*100)+\"%\")","37d1985b":"predict = model.predict(x_test)","6c7cf889":"predict","8cad08aa":"result=[]\nfor item in predict:\n    result.append(np.argmax(item))","057ab3f2":"y_test = y_test.astype('int')","b5bd6d32":"y_test","df77627f":"from sklearn.metrics import multilabel_confusion_matrix\nfrom sklearn.metrics import confusion_matrix","b40f43c4":"class_confusion_matrix = confusion_matrix(result,y_test)","7cd2cc1f":"class_confusion_matrix","d3abf7a5":"sns.heatmap(class_confusion_matrix)","0a0683aa":"# from probability to direct predicted  ans","671d6989":"## converting into integer"}}