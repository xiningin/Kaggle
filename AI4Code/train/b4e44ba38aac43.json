{"cell_type":{"71fdb836":"code","e6733708":"code","fe2ea132":"code","97e04f0b":"code","30144d42":"code","d1c5919e":"code","5ec75b0b":"code","3e4461a0":"code","8d0d9d9f":"code","6039e8d5":"code","59553861":"code","0f7b38a0":"code","32ca2447":"code","f7a9bd94":"code","904f51ee":"code","2e673fed":"code","9ae16979":"code","eefd9607":"code","b4c4ab62":"code","f422b9fc":"code","ea54b8aa":"code","cf367c50":"code","36dac096":"markdown","623c6ae8":"markdown","b0aa2f34":"markdown","061eb77f":"markdown","a5a49274":"markdown","12a4eefc":"markdown","7676ab3a":"markdown","f09b855a":"markdown","60e791f1":"markdown"},"source":{"71fdb836":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#import necessary libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\n%matplotlib inline\n#hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6733708":"#load dataset\ndf_comp = pd.read_csv('\/kaggle\/input\/indian-school-education-statistics\/percentage-of-schools-with-comps-2013-2016.csv')\ndf_comp.sort_values(by='year',inplace=True)","fe2ea132":"#rename States\ndf_comp['State_UT'].replace({\n    'MADHYA PRADESH':'Madhya Pradesh',\n    'Pondicherry':'Puducherry',\n    'Uttaranchal':'Uttar Pradesh'\n},inplace=True)","97e04f0b":"columns_tolot = ['Primary_Only','Primary_with_U_Primary','Primary_with_U_Primary_Sec','Primary_with_U_Primary_Sec_HrSec','All Schools']","30144d42":"sns.set(font_scale = 1.11)\nsns.set_style(\"white\")\n\n#filt India data\nfilt1 = (df_comp['State_UT'] =='All India')\nax = df_comp.loc[filt1][columns_tolot].plot.bar(figsize=(15,6))\nsns.despine(left=True, bottom=True)\n#label and title\nax.set_xticklabels(np.arange(3))\nax.set_title('Schools with computers India',size=18)\nax.set_xticklabels(list(df_comp.loc[filt1]['year']))\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(-0)\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n#adjust legend\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05),ncol=4)\n    ","d1c5919e":"filt_year = df_comp['year'] =='2015-16'\ndf_comp_latest = df_comp[filt_year]\ndf_comp_latest.sort_values(by='All Schools',ascending = False,inplace =True)","5ec75b0b":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set(font_scale = 1.11)\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"All Schools\",palette='Greens_r',data=df_comp_latest.head(12))\nsns.despine(left=True, bottom=True)\n\n\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Percentage of schools with computer',fontsize=12)\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n","3e4461a0":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set(font_scale = 1.11)\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"All Schools\",palette='Greens',data=df_comp_latest[::-1].head(12))\nsns.despine(left=True, bottom=True)\n\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Percentage of schools with computer',fontsize=12)\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')","8d0d9d9f":"def state_to_plot(state):\n    sns.set(font_scale = 1.11)\n    sns.set_style(\"white\")\n\n    #filt state\n    filt_state = (df_comp['State_UT'] == state)\n    ax = df_comp.loc[filt_state][columns_tolot].plot.bar(figsize=(15,6))\n    sns.despine(left=True, bottom=True)\n    #label and title\n    ax.set_xticklabels(np.arange(3))\n    ax.set_title(f'{state} in detail',size=21)\n    ax.set_xticklabels(list(df_comp.loc[filt_state]['year']))\n    for tick in ax.get_xticklabels():\n        tick.set_rotation(-0)\n\n    #annotations\n    for p in ax.patches:\n        ax.annotate(format(p.get_height(), '.2f'), \n                       (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                       ha = 'center', va = 'center', \n                       xytext = (0, 9), \n                       textcoords = 'offset points')\n    #adjust legend\n    ax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05),ncol=4)\n","6039e8d5":"#Delhi in detail\nstate_to_plot('Delhi')","59553861":"#Uttar Pradesh in detail\nstate_to_plot('Uttar Pradesh')","0f7b38a0":"#Kerala in detail\nstate_to_plot('Kerala')","32ca2447":"#you can plot any state you wish!!!","f7a9bd94":"#load the shp file\nstates = gpd.read_file('\/kaggle\/input\/india-states\/Igismap\/Indian_States.shp')","904f51ee":"#adjust the names of the SHP file and our dataset so that they match\nstates['st_nm'].replace({\n    'Andaman & Nicobar Island':'Andaman & Nicobar Islands',\n    'Arunanchal Pradesh':'Arunachal Pradesh',\n    'NCT of Delhi':'Delhi',\n    'Jammu & Kashmir':'Jammu And Kashmir',\n    'Dadara & Nagar Havelli':'Dadra & Nagar Haveli'    \n},inplace=True)\n\n#change both column to the same name\ndf_comp.rename(columns={\n    'State_UT':'state'\n},inplace=True)\n\nstates.rename(columns={\n    'st_nm':'state'\n},inplace=True)","2e673fed":"#filter the latest year data of our data-set and merge them together\nlatest_filt = df_comp['year'] =='2015-16'\nstates_op = states.merge(df_comp.loc[latest_filt].sort_values(by='state'),on='state')","9ae16979":"fig,ax = plt.subplots(figsize=(15,9))\nstates_op.plot(column='All Schools',cmap='Greens',figsize=(9,9),\n                    legend=True,ax=ax,legend_kwds={'label': \"\",'orientation': \"vertical\",'shrink': 0.6})\n\n#hide axes and ticks\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.set_xticks([]) \nax.set_yticks([]) \nfor item in ax.get_xticklabels():\n    item.set_visible(False)\nfor item in ax.get_yticklabels():\n    item.set_visible(False) \nax.set_facecolor('#c9c9c9')\nfig.suptitle('Schools with Computers across India', fontsize=18)","eefd9607":"fig,ax = plt.subplots(2,2,figsize=(18,18))\nplt.style.use('seaborn')\nstates_op.plot(column='Primary_Only',cmap='Greens',figsize=(9,9),\n                    legend=False,ax=ax[0,0])\nax[0,0].set_title('Primary ',fontsize=15)\nstates_op.plot(column='Primary_with_U_Primary',cmap='Greens',figsize=(9,9),\n                    legend=False,ax=ax[0,1])\nax[0,1].set_title('Upper Primary and Primary',fontsize=15)\nstates_op.plot(column='Primary_with_U_Primary_Sec',cmap='Greens',figsize=(9,9),\n                    legend=False,ax=ax[1,0])\nax[1,0].set_title('Secondary,Upper Primary and Primary',fontsize=15)\nstates_op.plot(column='Primary_with_U_Primary_Sec_HrSec',cmap='Greens',figsize=(9,9),\n                    legend=True,ax=ax[1,1])\nax[1,1].set_title('Higher Secondary,Secondary,Upper Primary and Primary',fontsize=15)\n\n#add background color\nax[0,0].set_facecolor('#e0e0e0')\nax[0,1].set_facecolor('#e0e0e0')\nax[1,0].set_facecolor('#e0e0e0')\nax[1,1].set_facecolor('#e0e0e0')\n\n#hide axes and ticks\nfor i in np.arange(2):\n    for j in np.arange(2):\n        ax[i,j].spines['top'].set_visible(False)\n        ax[i,j].spines['right'].set_visible(False)\n        ax[i,j].spines['left'].set_visible(False)\n        ax[i,j].spines['bottom'].set_visible(False)\n        for item in ax[i,j].get_xticklabels():\n            item.set_visible(False)\n        for item in ax[i,j].get_yticklabels():\n            item.set_visible(False) \n        ax[i,j].set_xticks([]) \n        ax[i,j].set_yticks([]) \nfig.suptitle('Further Breakdown of Schools with computer in India', fontsize=18)","b4c4ab62":"#load dataset\ndf_enroll = pd.read_csv('\/kaggle\/input\/indian-school-education-statistics\/gross-enrollment-ratio-2013-2016.csv')\ndf_enroll.sort_values(by='Year',inplace=True)\n\n#rename States\ndf_enroll['State_UT'].replace({\n    'MADHYA PRADESH':'Madhya Pradesh',\n    'Pondicherry':'Puducherry',\n    'Uttaranchal':'Uttar Pradesh'},inplace=True)\ndf_enroll.rename(columns={\n    'State_UT':'state'},inplace=True)\n\n#get rid of unwnated columns\ndf_enroll.drop(['Primary_Boys','Primary_Girls','Upper_Primary_Boys','Upper_Primary_Girls',\n                'Secondary_Boys','Secondary_Girls','Higher_Secondary_Boys','Higher_Secondary_Girls'],axis=1,inplace=True)\n\ndf_comp.drop(['U_Primary_Only','U_Primary_With_Sec_HrSec','U_Primary_With_Sec','HrSec_Only','Sec_Only','Sec_with_HrSec.'],axis=1,inplace=True)","f422b9fc":"#filter the latest year data of our data-set and merge them together\nlatest_filt1 = df_enroll['Year'] =='2015-16'\nlatest_filt2 = df_comp['year'] =='2015-16'\ndf_enroll_comp = df_enroll.merge(df_comp.loc[latest_filt],on='state')\ndf_enroll_comp.drop(['year'],axis=1,inplace =True)","ea54b8aa":"#filter typos,missing values and convert all columns to float\nfilt_data1 = df_enroll_comp['Higher_Secondary_Total']=='NR'\nfilt_data2 = df_enroll_comp['Higher_Secondary_Total']== '@'\n\ndf_enroll_comp = df_enroll_comp.loc[~(filt_data1^filt_data2)]\ndf_enroll_comp['Higher_Secondary_Total'] = df_enroll_comp['Higher_Secondary_Total'].astype('float')","cf367c50":"sns.set_style('darkgrid')\nsns.set(font_scale = 1.11)\n# Divide the figure into a 2x1 grid, and give me the first section\nfig,ax = plt.subplots(2,2,figsize=(18,18))\nax1 = sns.regplot(\"Primary_Only\", \"Primary_Total\", data=df_enroll_comp,color='#a30000',\n                     ax=ax[0,0])\nax1.set_title('Primary',fontsize=15)\n\nax2 = sns.regplot(\"Primary_with_U_Primary\", \"Upper_Primary_Total\", data=df_enroll_comp,color='#a30000',\n                    ax=ax[0,1])\nax2.set_title('Upper Primary',fontsize=15)\n\nax3 = sns.regplot(\"Primary_with_U_Primary_Sec\", \"Secondary_Total\", data=df_enroll_comp,color='#a30000',\n                     ax=ax[1,0])\nax3.set_title('Secondary',fontsize=15)\nax4 = sns.regplot(\"Primary_with_U_Primary_Sec_HrSec\", \"Higher_Secondary_Total\", data=df_enroll_comp,color='#a30000',\n                     ax=ax[1,1])\nax4.set_title('Higher Secondary',fontsize=15)\n\n#hide axes and ticks\nfor i in np.arange(2):\n    for j in np.arange(2):\n        ax[i,j].set_xlabel('percent schools with computer') \n        ax[i,j].set_ylabel('GER') ","36dac096":"<center><strong><h2>Percentage of schools with computers(2015-2016)<\/h2><\/strong><\/center>\n<br>","623c6ae8":"<center><strong><h2>Visualizing the data in a map<\/h2><\/strong><\/center>\n<br>\n\nFor visualizing the data we will use the geo-pandas library\n<br>\n<strong>Documentation:-<\/strong> <a href=\"https:\/\/geopandas.org\/mapping.html\">GeoPandas<\/a>.\n<br>\nWe will also require the indian state boundary shape file(SHP) to plot the data.\n<br>\n<strong>Download from here:-<\/strong> <a href=\"https:\/\/www.igismap.com\/download-india-boundary-shapefile-free-states-boundary-assembly-constituencies-village-boundaries\/\">SHP File<\/a>.\n<br>","b0aa2f34":"<center><strong><h3>Observations<\/h3><\/strong><\/center>\n<br>\n<ul>\n    <li>As we can see from the above regression plots,there is not a very high correlation of GER with computer education in primary education.\n    <li>However as the education level increases we can clearly see high correlation between them.\n    <li>Hence it can be concluded that Computer Education plays a high role in the GER. \n    <li><strong>Therefore the Government should equip goverment schools with computers to improve the overall GER.<\/strong>  ","061eb77f":"### Bottom twelve states with computers\n<br>","a5a49274":"<strong><h2>Computer education and its impact on GER<\/h2><\/strong>\n<br>\n\nLets further analyse the impact of education on the Gross Enrollment Ratio (GER)","12a4eefc":"### Top twelve states with computers\n<br>","7676ab3a":"<center><strong><h2>In-detail visualization of different states form (2014-2015)<\/h2><\/strong><\/center>\n<br>","f09b855a":"<strong><li>There has been a decrese of 3.53% in Hr Sec from 2015-2016","60e791f1":"<center><h3>Regression-Plots between GER and schools with computer<\/h3><\/center>\n<br>"}}