{"cell_type":{"63c64dc7":"code","614a1c2b":"code","9e621044":"code","97cee07b":"code","c7f648f2":"code","7948d99e":"code","675e0479":"code","443fb074":"code","1a7a492b":"code","1a699c7c":"code","dadc98a2":"code","527c871b":"code","1707d8a3":"code","83d0db53":"code","11de1398":"code","4a1cb618":"code","0a459494":"code","3f59e7f0":"code","e938ba14":"code","6e6b565c":"code","0c2fc5b3":"code","6775cf2e":"code","71406a58":"markdown","bb4b80c8":"markdown"},"source":{"63c64dc7":"import pandas\nimport numpy\nimport matplotlib\nfrom matplotlib import pyplot\nfrom sklearn import preprocessing\n%matplotlib inline\npandas.set_option('display.max_rows', 500)\npandas.set_option('display.max_columns', 500)\npandas.set_option('display.width', 1000)\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.preprocessing import LabelEncoder\nfrom scipy.stats import chi2_contingency\nfrom scipy.stats import chi2\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2 as sklearn_chi2\nfrom sklearn.preprocessing.imputation import Imputer","614a1c2b":"data_frame= pandas.read_table(\"..\/input\/pima-data.csv\", sep=',')","9e621044":"data_frame.shape","97cee07b":"data_frame.head()","c7f648f2":"for col in data_frame.columns:\n    data_frame[col] = data_frame[col].map(lambda x: numpy.nan if isinstance(x, str) and '\\t?' in x else(x[1:] if isinstance(x, str) and '\\t' in x and x.find('\\t')==0 else (x[:-1] if isinstance(x, str) and '\\t' in x and x.find('\\t')>0 else x)))","7948d99e":"print((data_frame[data_frame.columns] == 0).sum())","675e0479":"data_frame[data_frame.columns] = data_frame[data_frame.columns].replace(0, numpy.NaN)","443fb074":"print(data_frame.isnull().sum())","1a7a492b":"data_frame.fillna(value=data_frame.mean(), inplace=True)","1a699c7c":"labelencoder=preprocessing.LabelEncoder()\ndata_frame.diabetes=pandas.Series(data=labelencoder.fit_transform(data_frame.diabetes), index=data_frame.index)","dadc98a2":"diabetes_col=data_frame.diabetes","527c871b":"data_frame.head()","1707d8a3":"data_frame.drop(labels=['diabetes'], axis=1, inplace=True)\ndata_frame=pandas.concat([data_frame, diabetes_col], axis=1)","83d0db53":"data_frame.head()","11de1398":"iteration_val=len(data_frame.columns)-1\nselecte_feature_index=[]","4a1cb618":"for i in range(0,iteration_val,1):\n    print('Feature Name : {0}'.format(data_frame.columns[i]))\n    table= data_frame[data_frame.iloc[:,[i,iteration_val]].columns].values\n    chi_squared_stat, p_value, dof, expected=chi2_contingency(table)\n    print(chi_squared_stat)\n    probability=0.95\n    critical=chi2.ppf(probability, dof)\n    if abs(chi_squared_stat)>=critical:\n        print('Dependent : Reject Hypothesis 0 (null Hypothesis)')\n    elif abs(chi_squared_stat)<critical:\n        print('Inependent : Fail to Reject Hypothesis 0 (null Hypothesis)')\n        selecte_feature_index.append(i)\n    \n    alpha = 1.0 - probability\n    print('Significance {0}, {1}'.format(alpha, p_value))\n    if p_value<=alpha:\n        print(\"Dependent : Reject Hypothesis 0 (null Hypothesis)\")\n    else:\n        print('Inependent : Fail to Reject Hypothesis 0 (null Hypothesis)')\n        selecte_feature_index.append(i)\n    print('================================================================')","0a459494":"array=data_frame.values","3f59e7f0":"array","e938ba14":"X = data_frame.iloc[:,0:-1]\ny = data_frame.iloc[:,-1:]    #target column i.e price range","6e6b565c":"#apply SelectKBest class to extract top 10 best features\nbestfeatures = SelectKBest(score_func=sklearn_chi2, k='all')\nfit = bestfeatures.fit(X,y)","0c2fc5b3":"fit.scores_","6775cf2e":"dfscores = pandas.DataFrame(fit.scores_)\ndfcolumns = pandas.DataFrame(X.columns)\n#concat two dataframes for better visualization \nfeatureScores = pandas.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Specs','Score']\nprint(featureScores.nlargest(8,'Score'))","71406a58":"# Chi-Square For Feature Selection","bb4b80c8":"<p><\/p><p>A <b>chi-squared test<\/b>, also written as <b><span class=\"texhtml\"><i>\u03c7<\/i><sup>2<\/sup><\/span> test<\/b>, is any <a href=\"\/wiki\/Statistical_hypothesis_testing\" title=\"Statistical hypothesis testing\">statistical hypothesis test<\/a> where the <a href=\"\/wiki\/Sampling_distribution\" title=\"Sampling distribution\">sampling distribution<\/a> of the test statistic is a <a href=\"\/wiki\/Chi-squared_distribution\" title=\"Chi-squared distribution\">chi-squared distribution<\/a> when the <a href=\"\/wiki\/Null_hypothesis\" title=\"Null hypothesis\">null hypothesis<\/a> is true.  Without other qualification, 'chi-squared test' often is used as short for <a href=\"\/wiki\/Pearson%27s_chi-squared_test\" title=\"Pearson's chi-squared test\"><i>Pearson's<\/i> chi-squared test<\/a>. The chi-squared test is used to determine whether there is a significant difference between the expected frequencies and the observed frequencies in one or more categories.\n<\/p>\n    <p style=\"margin-left:85%\"><i>Source: <b>Wikipedia<b><\/b><\/b><\/i><\/p><b><b>\n    <br>\n <img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/8\/8e\/Chi-square_distributionCDF-English.png\" width=\"800px\" height=\"600px\"><p><\/p>\n<p><\/p><h3><i>\n    <b>Video Tutorials<b>\n<\/b><\/b><\/i><\/h3><b><b>\n<a target=\"_blank\" href=\"https:\/\/www.youtube.com\/watch?v=jABsbNBPXIk\">Chi-square statistic for hypothesis testing | AP Statistics | Khan Academy<\/a>\n    <br>\n<a target=\"_blank\" href=\"https:\/\/www.youtube.com\/watch?v=zOvUQWOzTlc\">Chi-square test for association (independence) | AP Statistics | Khan Academy<\/a>\n<br>\n    <br><p><\/p>\n<p><\/p><h3><i>\n    <b>Reading Material<b>\n<\/b><\/b><\/i><\/h3><b><b>\n<a target=\"_blank\" href=\"https:\/\/machinelearningmastery.com\/chi-squared-test-for-machine-learning\/\">A Gentle Introduction to the Chi-Squared Test for Machine Learning<\/a><p><\/p>\n\n<\/b><\/b><\/b><\/b><\/b><\/b>"}}