{"cell_type":{"e120e0d9":"code","84ca7023":"code","b94f18eb":"code","7329ca5d":"code","8ce7c570":"code","8c9919a8":"code","cf4af7c9":"code","2f15db6f":"code","f0fa5ca8":"code","7c21a5cc":"code","8dc1154d":"code","afaa3ed5":"markdown","6fac57c5":"markdown","2906cebe":"markdown","7ad77f05":"markdown","e33e219b":"markdown","b78900e2":"markdown","7e808a7c":"markdown","765c30c5":"markdown","58f2806d":"markdown","ab521519":"markdown","8880c84e":"markdown","9fb5fb48":"markdown","6b7c49f4":"markdown","63fb0a78":"markdown","0675bb0f":"markdown","782943d2":"markdown","c693709c":"markdown","56f741d6":"markdown"},"source":{"e120e0d9":"import numpy as np \nimport pandas as pd\n\ndf = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\", parse_dates = [\"Last Update\"])\ndf_confirmed = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndf_death = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\ndf_recovered= pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")\ndf_coordinates = pd.read_csv(\"..\/input\/world-coordinates\/world_coordinates.csv\")\ndf_plotly_country_codes = pd.read_csv(\"..\/input\/plotlycountrycodes\/plotly_countries_and_codes.csv\")","84ca7023":"def data_preprocessing(data):\n    # Generic Data PreProcessing Steps\n    data.columns = data.columns.str.replace(\" \", \"_\")\n    data.columns = map(str.lower, data.columns)\n    return data\n\n# df Pre-Processings\ndf = data_preprocessing(df)\ndf.rename(columns={\"country\/region\":\"country\"},inplace=True)\ndf[\"country\"].replace({\"Mainland China\":\"China\", \"US\":\"United States\", \n                       \"UK\":\"United Kingdom\"}, inplace=True)\ndf[\"country\"].replace(to_replace = \"US\", \n                      value = \"United States\", inplace=True) \ndf[\"country\"].replace(to_replace = \"UK\", \n                      value = \"United Kingdom\", inplace=True) \n\n# df_coordinates Pre-Processings\ndf_coordinates = data_preprocessing(df_coordinates)\ndf_coordinates[\"country\"].replace(to_replace = \"US\", \n                                  value = \"United States\", inplace=True)\ndf_coordinates[\"country\"].replace(to_replace = \"UK\", \n                                  value = \"United Kingdom\", inplace=True)\n\n# df_plotly_country_codes Pre-Processing\ndf_plotly_country_codes = data_preprocessing(df_plotly_country_codes)\n\n# Other df Pre-Processing\ndf_confirmed = data_preprocessing(df_confirmed)\ndf_confirmed.rename(columns={\"country\/region\":\"country\"},inplace=True)\ndf_confirmed.drop(columns={\"province\/state\", \"lat\", \"long\"}, inplace=True)\ndf_death = data_preprocessing(df_death)\ndf_death.rename(columns={\"country\/region\":\"country\"},inplace=True)\ndf_death.drop(columns={\"province\/state\", \"lat\", \"long\"}, inplace=True)\ndf_recovered = data_preprocessing(df_recovered)\ndf_recovered.rename(columns={\"country\/region\":\"country\"},inplace=True)\ndf_recovered.drop(columns={\"province\/state\", \"lat\", \"long\"}, inplace=True)\n","b94f18eb":"# ----------- df_final set------------------------------------------------------------------------------------------------------------------------------------------------\ndf.sort_values(\"last_update\", ascending=False, inplace=True)\ndf[\"last_update_str\"] = df[\"last_update\"].dt.date.astype(str)\ndf[\"active\"] = df[\"confirmed\"] - (df[\"deaths\"] + df[\"recovered\"])\ndf_final = df[df[\"last_update_str\"] == \"2020-03-19\"]\n\n# ----------- df_table for below graphs-----------------------------------------------------------------------------------------------------------------------------\ndf_table = df_final.groupby([\"country\", \"last_update_str\"]).sum().reset_index().sort_values(\"confirmed\", ascending=False).drop(columns={\"sno\"})\ndf_table[\"confirmed_ratio\"] = round(df_table['confirmed'] \/ df_table[\"confirmed\"].sum() * 100,0)\ndf_table[\"deaths_ratio\"] = round(df_table['deaths'] \/ df_table[\"deaths\"].sum() * 100,0)\ndf_table[\"recovered_ratio\"] = round(df_table['recovered'] \/ df_table[\"recovered\"].sum() * 100,0)\ndf_table[\"active_ratio\"] = round(df_table['active'] \/ df_table[\"active\"].sum() * 100,0)\ndf_table = df_table.merge(df_coordinates, left_on=\"country\", right_on=\"country\")\ndf_table.drop(columns=\"code\", inplace=True)\ndf_table[\"text\"] = \"Country=\" + df_table[\"country\"].map(str) + \" \" + \"Confirmed=\" + df_table[\"confirmed\"].map(str) + \" \" + \"Deaths=\" + df_table[\"deaths\"].map(str)\ndf_table = df_table.merge(df_plotly_country_codes, left_on=\"country\", right_on=\"country\")\ndf_table.drop(columns=\"gdp_(billions)\", inplace=True)\n#df_table.head()\n","7329ca5d":"df_final = df_final.groupby([\"country\"]).sum().sort_values(\"confirmed\", ascending=False).drop(columns={\"sno\"}).head(15)\ndf_final.style.background_gradient(cmap='Reds')","8ce7c570":"import plotly.graph_objects as go\n\naccess_token = \"pk.eyJ1IjoiZXZyZW5lcm1pczkyIiwiYSI6ImNrN3ozaHg1bzAyNGIzaW5xa2h0eHo1eGEifQ.jruBMFuoC9bh_sG6UReWQQ\"\nfig = go.Figure(data=go.Choropleth(\n    locations=df_table['code'], # Spatial coordinates\n    z = df_table['confirmed'], # Data to be color-coded\n    colorscale = 'RdBu_r',\n    zmax=2000,\n    zmin=0,\n    colorbar_title = \"# Confirmed\",\n    )\n)\n    \nfig.update_layout(\n    hovermode='closest',\n    title={\n        'text': \"COVID-19 Status as of 19\/03\/2020\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    title_font_size=15,\n    autosize=False,\n    width=700,\n    height=450,\n    mapbox=go.layout.Mapbox(\n        accesstoken= access_token,\n        bearing=0,\n        center=go.layout.mapbox.Center(\n            lat=45.124764,\n            lon=3.973130\n        ),\n        pitch=0,\n        zoom=1\n    )\n)\n\nfig.show()","8c9919a8":"df_v2 = df.merge(df_plotly_country_codes, left_on=\"country\", right_on=\"country\")\ndf_v2.drop(columns=\"gdp_(billions)\", inplace=True)\ndf_time = df_v2.groupby([\"last_update_str\",\"country\",\"code\"]).sum().reset_index().sort_values(\"last_update_str\",ascending=True).drop(columns=\"sno\")\n\n# To balance China dominance on the map bubble graph, I have multiplied the other countries' confirmed incident number with 10 and China with 3 and saved as \"Size\"\n# Solution has been taken from @FatihBilgin's Notebook\ndf_time[\"size\"] = np.where(df_time['country']=='China', df_time['confirmed']*3, df_time['confirmed']*10) ","cf4af7c9":"import plotly.express as px\n\nfig = px.scatter_geo(df_time, locations=\"code\", color=\"confirmed\",\n                     hover_name=\"country\", size=\"size\",\n                     animation_frame=\"last_update_str\",\n                     projection=\"natural earth\")\n\nfig.update_layout(\n    hovermode='closest',\n    title={\n        'text': \"COVID-19 Status as of 19\/03\/2020\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    title_font_size=15,\n    autosize=False,\n    width=700,\n    height=450,\n    showlegend=False,\n    mapbox=go.layout.Mapbox(\n        accesstoken= access_token,\n        bearing=0,\n        center=go.layout.mapbox.Center(\n            lat=45.124764,\n            lon=3.973130\n        ),\n        pitch=0,\n        zoom=1\n    )\n)\n\nfig.show()\n","2f15db6f":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\n# Add data\n\ndf_confirmed_table = df_confirmed.groupby(\"country\").sum().reset_index().set_index(\"country\")\ndf_death_table = df_death.groupby(\"country\").sum().reset_index().set_index(\"country\")\ndf_recovered_table = df_recovered.groupby(\"country\").sum().reset_index().set_index(\"country\")\n\nx = df_confirmed.columns.tolist()\n\ny_confirmed_china = df_confirmed_table.loc[\"China\"]\ny_death_china = df_death_table.loc[\"China\"]\ny_recovered_china = df_recovered_table.loc[\"China\"]\n\ny_confirmed_italy = df_confirmed_table.loc[\"Italy\"]\ny_death_italy = df_death_table.loc[\"Italy\"]\ny_recovered_italy = df_recovered_table.loc[\"Italy\"]\n\nfig = make_subplots(rows=1, cols=2,subplot_titles=(\"China\", \"Italy\"))\n                           \n# Row = 1, Column = 1 \n# --------------------------------------------------------------------------------------------------\nfig.add_trace(go.Scatter(x=x, y=y_confirmed_china, name='China Confirmed',\n                         line=dict(color='royalblue', width=4)),row =1, col = 1)\n\nfig.add_trace(go.Scatter(x=x, y=y_death_china, name = 'China Deaths',\n                         line=dict(color='firebrick', width=4)),row =1, col = 1)\n\nfig.add_trace(go.Scatter(x=x, y=y_recovered_china, name='China Recovered',\n                         line=dict(color='rgb(151,255,0)', width=4)),row =1, col = 1)\n\n# Row = 1, Column = 2 \n# --------------------------------------------------------------------------------------------------\nfig.add_trace(go.Scatter(x=x, y=y_confirmed_italy, name='Italy Confirmed',\n                         line=dict(color='royalblue', width=4)),row =1, col = 2)\n\nfig.add_trace(go.Scatter(x=x, y=y_death_italy, name = 'Italy Deaths',\n                         line=dict(color='firebrick', width=4)),row =1, col = 2)\n\nfig.add_trace(go.Scatter(x=x, y=y_recovered_italy, name='Italy Recovered',\n                         line=dict(color='rgb(151,255,0)', width=4)),row =1, col = 2)\n\n\n# Edit the layout\nfig.update_layout(title={\n                        'text': \"Trend of Confirmed\/Recovered\/Deaths \",\n                        'y':0.9,\n                        'x':0.5,\n                        'xanchor': 'center',\n                        'yanchor': 'top'},\n                 title_font_size=15,\n                 xaxis_title='Days',\n                 legend_orientation=\"h\",\n                 yaxis_title='# Incidents',\n                 legend=dict(\n                         x=0.10,\n                         y=-0.4,\n                         traceorder=\"normal\",\n                         font=dict(\n                         family=\"sans-serif\",\n                         size=9,\n                         color=\"black\"\n                           ),\n                        bgcolor=\"White\",\n                        bordercolor=\"Black\",\n                        borderwidth=2\n                    ),\n                 )\n\nfig.show()","f0fa5ca8":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nx = df_confirmed.columns.tolist()\n\ny_confirmed_iran = df_confirmed_table.loc[\"Iran\"]\ny_death_iran = df_death_table.loc[\"Iran\"]\ny_recovered_iran = df_recovered_table.loc[\"Iran\"]\n\ny_confirmed_spain = df_confirmed_table.loc[\"Spain\"]\ny_death_spain = df_death_table.loc[\"Spain\"]\ny_recovered_spain = df_recovered_table.loc[\"Spain\"]\n\n\nfig = make_subplots(rows=1, cols=2,subplot_titles=(\"Iran\", \"Spain\"))\n\n# Create and style traces\n\n# Row = 1, Column = 1 \nfig.add_trace(go.Scatter(x=x, y=y_confirmed_iran, name='Iran Confirmed',\n                         line=dict(color='royalblue', width=4)),row =1, col = 1)\n\nfig.add_trace(go.Scatter(x=x, y=y_death_iran, name = 'Iran Deaths',\n                         line=dict(color='firebrick', width=4)),row =1, col = 1)\n\nfig.add_trace(go.Scatter(x=x, y=y_recovered_iran, name='Iran Recovered',\n                         line=dict(color='rgb(151,255,0)', width=4)),row =1, col = 1)\n\n# Row = 1, Column = 2\nfig.add_trace(go.Scatter(x=x, y=y_confirmed_spain, name='Spain Confirmed',\n                         line=dict(color='royalblue', width=4)),row =1, col = 2)\n\nfig.add_trace(go.Scatter(x=x, y=y_death_spain, name = 'Spain Deaths',\n                         line=dict(color='firebrick', width=4)),row =1, col = 2)\n\nfig.add_trace(go.Scatter(x=x, y=y_recovered_spain, name='Spain Recovered',\n                         line=dict(color='rgb(151,255,0)', width=4)),row =1, col = 2)\n\n# Edit the layout\nfig.update_layout(title={\n                        'text': \"Trend of Confirmed\/Recovered\/Deaths \",\n                        'y':0.9,\n                        'x':0.5,\n                        'xanchor': 'center',\n                        'yanchor': 'top'},\n                 title_font_size=15,\n                 xaxis_title='Days',\n                 legend_orientation=\"h\",\n                 yaxis_title='# Incidents',\n                 legend=dict(\n                         x=0.09,\n                         y=-0.4,\n                         traceorder=\"normal\",\n                         font=dict(\n                         family=\"sans-serif\",\n                         size=9,\n                         color=\"black\"\n                           ),\n                        bgcolor=\"White\",\n                        bordercolor=\"Black\",\n                        borderwidth=2\n                    ),\n                 )\n\nfig.show()","7c21a5cc":"df_final_subplots = df_final.drop(columns={\"active\",\"confirmed\"})\n\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\ncolors = ['rgb(244,165,130)','rgb(146,197,222)']\n\nlabels = [\"Deaths\", \"Recovered\"]\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=2, cols=2, specs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=df_final_subplots.loc[\"China\"], name=\"China\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=df_final_subplots.loc[\"Italy\"], name=\"Italy\"),\n              1, 2)\nfig.add_trace(go.Pie(labels=labels, values=df_final_subplots.loc[\"Iran\"], name=\"Iran\"),\n              2, 1)\nfig.add_trace(go.Pie(labels=labels, values=df_final_subplots.loc[\"Spain\"], name=\"Spain\"),\n              2, 2)\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.35, hoverinfo=\"label+text+name\", textinfo=\"value\", marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    title={\n        'text': \"Death vs Recovered Status as of 19\/03\/2020\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    title_font_size=15,\n    autosize=False,\n    width=750,\n    height=650,\n    legend_orientation=\"h\",\n    legend=dict(\n        x=0.35,\n        y=0,\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"black\"\n        ),\n        bgcolor=\"White\",\n        bordercolor=\"Black\",\n        borderwidth=2\n    ),\n    title_x=0.5, # Position of the title\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='China', x=0.19, y=0.82, font_size=14, showarrow=False),\n                 dict(text='Italy', x=0.8, y=0.82, font_size=14, showarrow=False),\n                 dict(text='Iran', x=0.20, y=0.18, font_size=14, showarrow=False),\n                 dict(text='Spain', x=0.81, y=0.18, font_size=14, showarrow=False)]\n\n)\nfig.show()\n","8dc1154d":"import plotly.graph_objects as go\n\n\nx = df_confirmed.columns.tolist()\n\ny_confirmed_turkey = df_confirmed_table.loc[\"Turkey\"]\ny_death_turkey = df_death_table.loc[\"Turkey\"]\ny_recovered_turkey = df_recovered_table.loc[\"Turkey\"]\n\n\nfig = make_subplots(rows=1, cols=1)\n\n# Create and style traces\n\n# Row = 1, Column = 1 \nfig.add_trace(go.Scatter(x=x, y=y_confirmed_turkey, name='Turkey Confirmed',\n                         line=dict(color='royalblue', width=4)),row =1, col = 1, secondary_y=False)\n\nfig.add_trace(go.Scatter(x=x, y=y_death_turkey, name = 'Turkey Deaths',\n                         line=dict(color='firebrick', width=4)),row =1, col = 1)\n\nfig.add_trace(go.Scatter(x=x, y=y_recovered_turkey, name='Turkey Recovered',\n                         line=dict(color='rgb(151,255,0)', width=4)),row =1, col = 1)\n\n# Edit the layout\nfig.update_layout(title={\n                        'text': \"Trend of Confirmed\/Recovered\/Deaths - Turkey Only\",\n                        'y':0.9,\n                        'x':0.5,\n                        'xanchor': 'center',\n                        'yanchor': 'top'},\n                 title_font_size=15,\n                 xaxis_title='Days',\n                 legend_orientation=\"h\",\n                 yaxis_title='# Incidents',\n                 legend=dict(\n                         x=0.20,\n                         y=-0.4,\n                         traceorder=\"normal\",\n                         font=dict(\n                         family=\"sans-serif\",\n                         size=9,\n                         color=\"black\"\n                           ),\n                        bgcolor=\"White\",\n                        bordercolor=\"Black\",\n                        borderwidth=2\n                    ),\n                 )\n\nfig.show()","afaa3ed5":"## Changes Over Time","6fac57c5":"* ***See how the COVID-19 spread over the time***","2906cebe":"# COVID-19 Analytics","7ad77f05":"## Key Findings","e33e219b":"<b><i>Although the number of incidents is much more higher in Iran, recovery rate is better than Spain.<\/i><\/b><br>","b78900e2":"DO NOT FORGET ! <br>\n<img width=\"700\" height=\"600\" alt=\"covid-19\" align=\"left\" src=\"https:\/\/user-images.githubusercontent.com\/36535914\/77204770-81cda280-6b04-11ea-8d4f-fcb9393f2fe7.png\">","7e808a7c":"***In my country, Turkey, incidents are just began to appear*** <br>\n***Although the increase in occurance is high, hope the death rate would be low *** <br>\n***Observations will be elaborated as data matures***","765c30c5":"<img width=\"700\" height=\"600\" alt=\"covid-19\" align=\"left\" src=\"https:\/\/user-images.githubusercontent.com\/36535914\/77090079-ba438280-6a17-11ea-8fdd-4baa64db5d8f.png\">","58f2806d":"* <b><i>Below chart summarize death rate of aforementionad countries - China, Italy, Iran and Spain<\/i><\/b>","ab521519":"***Note: Click the code buttons to see the data pre-processing steps ***\n","8880c84e":"As the data matures in Turkey\n1. Detailed comparison with Italy and Iran will be completed. \n2. COVID-19 spread in Turkey will be predicted ","9fb5fb48":"* <b><i>    See the global distribution on world map as below<\/i><\/b>","6b7c49f4":"<img width=\"700\" height=\"500\" alt=\"covid-19\" align=\"left\" src=\"https:\/\/user-images.githubusercontent.com\/36535914\/77091228-55892780-6a19-11ea-8127-8cd9e3d3aff3.png\">\n***","63fb0a78":"## Future Work ","0675bb0f":"<b><i>Considering the most affected 2 countries, China seems to be handled the outbreak better than Italy.<\/i><\/b><br>\n<b><i>Italy death rate is significantly higher than China <\/i><\/b>","782943d2":"Cases of Covid-19 first emerged in December 2019, when a mysterious illness was reported in Wuhan, China. The cause of the disease was soon confirmed as a new kind of coronavirus, and the infection has spread to a number of countries around the world.\n\nOn 11 February the World Health Organization announced that the official name would be covid-19, a shortened version of coronavirus disease 2019. The WHO refers to the specific virus that causes this disease as the covid-19 virus.\n\nThis is not the formal name for the virus \u2013 the International Committee on Taxonomy of Viruses calls it the \u201csevere acute respiratory syndrome coronavirus 2\u201d, or SARS-CoV-2, because it is related to the virus that caused the SARS outbreak in 2003. However, to avoid confusion with SARS the WHO calls it the covid-19 virus when communicating with the public.\n\nThis notebook illustrates some key highlights of Covid-19 globally and focuses on rise in Turkey since new reports keep coming from there.\n\nRead more: https:\/\/www.newscientist.com\/term\/covid-19\/#ixzz6H9XbQt55","c693709c":"* <b><i>China, Italy, Iran, Spain and Germany are the most affected countries in the world<\/i><\/b>","56f741d6":"*** Here is one of the steps of data pre-processing  ***\n"}}