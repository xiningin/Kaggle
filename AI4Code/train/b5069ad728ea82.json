{"cell_type":{"85004ec0":"code","9a1f255d":"code","19ec2b3f":"code","092f1fe3":"code","f249c884":"code","b163a590":"code","ce2c3d1d":"code","9cd55748":"code","9b8d8d37":"code","0a528783":"code","db14ef70":"code","858ebb85":"code","dde14061":"code","bb3f06f6":"code","74d70999":"code","14325294":"code","99ce9126":"code","5b6babf8":"code","c99b3ac2":"code","f2310d4d":"code","504118fb":"code","fd02a86d":"code","d6cd06e0":"code","ab571e95":"code","f9b85dcb":"code","d98b604c":"code","bd74500b":"code","d703f749":"code","41b3be7f":"code","eb534fd3":"code","f29fdbff":"code","5642d971":"code","a01ab49b":"code","41fec0b5":"code","bf3c3bff":"markdown","a934c86f":"markdown","41473e57":"markdown","d0f2621c":"markdown","22967086":"markdown","14e04a3c":"markdown","aeea8e20":"markdown","d0532ba3":"markdown","89b84826":"markdown","f297098b":"markdown","18e69c72":"markdown","9dbb540c":"markdown","e8447ae6":"markdown","ad63e5bd":"markdown","493bdb2e":"markdown","92db3cab":"markdown","4da17d23":"markdown","4444b341":"markdown","ed67ae98":"markdown","25773b69":"markdown"},"source":{"85004ec0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\n\ninit_notebook_mode()\n\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9a1f255d":"dataset = pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv',encoding='ISO-8859-1')\ndataset.info()","19ec2b3f":"dataset.columns","092f1fe3":"dataset.head(10)","f249c884":"data_tr = dataset[dataset.country_txt == 'Turkey']\ndata_tr.head(20)","b163a590":"cities = data_tr.provstate.dropna(False)\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(background_color = 'white',\n                     width = 512,\n                     height = 384).generate(' '.join(cities))\nplt.axis('off')\nplt.imshow(wordcloud)\nplt.imsave(arr = wordcloud, fname = 'wordcloud.png')\nplt.show()","ce2c3d1d":"data_tr.iyear.value_counts(dropna = False).sort_index()","9cd55748":"x_year = data_tr.iyear.unique()\ny_count_years = data_tr.iyear.value_counts(dropna = False).sort_index()\nplt.figure(figsize = (12,12))\nsns.barplot(x = x_year,\n           y = y_count_years,\n           palette = 'rocket')\nplt.xticks(rotation = 45)\nplt.xlabel('Attack Year')\nplt.ylabel('Number of Attacks each year')\nplt.savefig('Attack_of_Years')\nplt.show()","9b8d8d37":"terorism_actors = data_tr.gname.unique()\nprint(terorism_actors)","0a528783":"attacks_of_groups = []\nfor name in terorism_actors:\n    temp = data_tr.gname[data_tr.gname == name].count()\n    attacks_of_groups.append(temp)\n    \ndataframe_temp = pd.DataFrame({'actor':terorism_actors, 'attack_num':attacks_of_groups})","db14ef70":"dataframe_temp = dataframe_temp[dataframe_temp.attack_num >= 6]\ndataframe_temp","858ebb85":"labels = list(dataframe_temp.actor)\nval = list(dataframe_temp.attack_num.astype(float))\nfig = {\"data\" : [ {\"values\" : val,\n                  \"labels\" : labels,\n                  \"domain\" : {\"x\" : [0,.5]},\n                  \"name\" : \"Organization Name\",\n                  \"hoverinfo\" : 'label+percent+name',\n                  \"hole\" : .2,\n                  \"type\" : \"pie\"\n                  },\n        ],\n        \"layout\" : {\"title\" : \"Number of Terrorism Groups Attack Rates in Turkey\",\n                    \"annotations\" : [{ \"font\" : {\"size\" : 20},\n                                      \"showarrow\" : False,\n                                      \"text\" : \"\",\n                                      \"x\" : 0.2,\n                                      \"y\" : 1\n                                      },\n                                    ]\n                    }\n        }\niplot(fig)","dde14061":"world_df = data_tr.loc[:,['provstate', 'latitude', 'longitude','iyear',\n                          'imonth', 'iday', 'targtype1_txt', 'weaptype1_txt', 'nkill', 'nwound','eventid']].copy()","bb3f06f6":"world_df = world_df.rename(\n    columns={'eventid':'id', 'iyear':'year', 'imonth':'month', 'iday':'day',\n            'provstate':'state', 'targtype1_txt':'target',\n             'weaptype1_txt':'weapon', 'nkill':'fatalities', 'nwound':'injuries'})\nworld_df['fatalities'] = world_df['fatalities'].fillna(0).astype(int)\nworld_df['injuries'] = world_df['injuries'].fillna(0).astype(int)","74d70999":"world_df.head()","14325294":"print(\"Latitude's NaNs: \" + str(world_df.latitude.isnull().sum()))\nprint(\"Longitude's NaNs: \" + str(world_df.longitude.isnull().sum()))","99ce9126":"world_df.latitude.dropna(inplace = True)\nworld_df.longitude.dropna(inplace = True)\nprint(\"Latitude's NaNs: \" + str(world_df.latitude.isnull().sum()))\nprint(\"Longitude's NaNs: \" + str(world_df.longitude.isnull().sum()))","5b6babf8":"world_df.state = world_df.state.astype(str) # My kernel throws an error without this line","c99b3ac2":"world_df.state[(world_df.latitude >= 36) & (world_df.latitude <= 42) & (world_df.longitude <= 45) & (world_df.longitude >= 26)]","f2310d4d":"world_df.count()","504118fb":"world_df = world_df[(world_df.latitude >= 36) & (world_df.latitude <= 42) & (world_df.longitude <= 45) & (world_df.longitude >= 26)]\nprint(world_df.count())\nworld_df.info()","fd02a86d":"world_df['day'][world_df.day == 0] = 1\nworld_df['month'][world_df.month == 0] = 1","d6cd06e0":"world_df['date'] = pd.to_datetime(world_df[['day','month','year']], format = '%d%m%Y')\nworld_df.head()","ab571e95":"world_df = world_df.drop_duplicates(['latitude', 'longitude'])\nworld_df.tail(10)","f9b85dcb":"world_df['text'] = world_df['date'].dt.strftime('%B %-d, %Y') + '<br>' +\\\n                     world_df['fatalities'].astype(str) + ' Killed, ' +\\\n                     world_df['injuries'].astype(str) + ' Injured'\n\nfatality = dict(\n           type = 'scattergeo',\n           lon = world_df[world_df.fatalities > 0]['longitude'],\n           lat = world_df[world_df.fatalities > 0]['latitude'],\n           text = world_df[world_df.fatalities > 0]['text'],\n           mode = 'markers',\n           name = 'Fatalities',\n           hoverinfo = 'text+name',\n           marker = dict(\n               size = world_df[world_df.fatalities > 0]['fatalities'] ** 0.255 * 8,\n               opacity = 0.95,\n               color = 'rgb(240, 140, 45)')\n           )\n        \ninjury = dict(\n         type = 'scattergeo',\n         lon = world_df[world_df.fatalities == 0]['longitude'],\n         lat = world_df[world_df.fatalities == 0]['latitude'],\n         text = world_df[world_df.fatalities == 0]['text'],\n         mode = 'markers',\n         name = 'Injuries',\n         hoverinfo = 'text+name',\n         marker = dict(\n             size = (world_df[world_df.fatalities == 0]['injuries'] + 1) ** 0.245 * 8,\n             opacity = 0.85,\n             color = 'rgb(20, 150, 187)')\n         )\n\nlayout = dict(\n         title = 'Terrorist Attacks in Turkey (1970-2015)',\n         showlegend = True,\n         legend = dict(\n             x = 0.85, y = 0.4\n         ),\n         geo = dict(\n             showland = True,\n             landcolor = 'rgb(250, 250, 250)',\n             showcoastlines = True,\n             coastlinecolor = \"rgb(0, 0, 0)\",\n             subunitwidth = 1,\n             subunitcolor = 'rgb(0, 0, 255)',\n             countrywidth = 1,\n             countrycolor = 'rgb(157, 217, 217)',\n             showlakes = True,\n             lonaxis_range=[ 20.00, 48.00],\n             lataxis_range=[ 30.00, 43.00],\n             lakecolor = 'rgb(255, 255, 255)')\n         )\ndata = [fatality, injury]\nfigure = dict(data = data, layout = layout)\niplot(figure)","d98b604c":"targets = world_df.target.unique()\nprint(targets)","bd74500b":"target_cod = []\nteror_data = world_df.copy()\nfor attack in teror_data.target.values:\n    if attack in ['Business', 'Journalists & Media', 'NGO']:\n        target_cod.append(0)\n    elif attack in ['Military', 'Police']:\n        target_cod.append(1)\n    elif attack in ['Government (General)', 'Government (Diplomatic)']:\n        target_cod.append(2)\n    elif attack == 'Educational Institution':\n        target_cod.append(3)\n    elif attack in ['Airports & Aircraft', 'Transportation', 'Maritime']:\n        target_cod.append(4)\n    elif attack in ['Tourists', 'Private Citizens & Property']:\n        target_cod.append(5)\n    elif attack == 'Religious Figures\/Institutions':\n        target_cod.append(6)\n    elif attack in ['Telecommunication','Food or Water Supply', 'Utilities']:\n        target_cod.append(7)\n    else:\n        target_cod.append(8)\n        \nteror_data['target'] = target_cod\ncategories = ['Business', 'Military\/Police', 'Goverment', 'Education', 'Transportation',\n             'Humans', 'Religion', 'Infrastructure', 'Other'] ","d703f749":"teror_data.target.mode() #mostly military and police","41b3be7f":"target_count = np.asarray(teror_data.groupby('target').target.count())\npercentage = np.round(target_count \/ sum(target_count) * 100,2)","eb534fd3":"target_fatality = np.asarray(teror_data.groupby('target')['fatalities'].sum())\nyax = np.log10(target_fatality)\n\ntarget_injury = np.asarray(teror_data.groupby('target')['injuries'].sum())\nxax = np.log10(target_injury)\n\ntarget_text = []\nfor i in range(0, 8):\n    target_text.append(categories[i] + ' (' + percentage[i].astype(str) \n                       + '%)<br>' + target_fatality[i].astype(str) + ' Killed, '\n                       + target_injury[i].astype(str) + ' Injured')","f29fdbff":"teror_data.groupby('target').target.count() # for size estimation ","5642d971":"categories #for size estimation","a01ab49b":"trace0 = go.Scatter(y = yax,\n                   x = xax,\n                   text = target_text,\n                   mode = 'markers',\n                   marker = dict(color = ['rgb(93, 164, 214)', 'rgb(255, 144, 14)', \n                                          'rgb(44, 160, 101)', 'rgb(255, 65, 54)',\n                                          'rgb(43, 20, 184)', 'rgb(255, 85, 5)', \n                                          'rgb(22, 240, 76)', 'rgb(255, 156, 122)'],\n                                size = [100,140,80,65,60,120,30,40,70],)\n                   )\nlayout = go.Layout(title = \"Terrorist Attack by Target in Turkey\",\n                  xaxis = dict(\n                      title = '\u0130njuries',\n                      range = [0.06, 0.6],\n                      type = 'log',\n                      tickmode = 'auto',\n                      nticks = 2,\n                      showline = True,\n                      showgrid = False\n                              ),\n                   yaxis = dict(\n                       title = 'Fatalities',\n                       type = 'log',\n                       tickmode = 'auto',\n                       range = [0, 0.64],\n                       nticks = 2,\n                       showline = True,\n                       showgrid = False)\n                  )\ndata = [trace0]\nfig = dict(data = data, layout = layout)\niplot(fig)","41fec0b5":"sns.set(style = \"whitegrid\")\nax = sns.swarmplot(y = teror_data.year, x = teror_data.weapon, palette = \"Set2\", hue = teror_data.target)\nplt.xticks(rotation = 90)\nplt.show()","bf3c3bff":"We understand to there was a few (actually 5) outliers coordinates in our dataframe. We eliminate these coordinates with using to Turkeys coordinates.","a934c86f":"Thank you for upvotes and comment. I will try to answer all questions in the comments. \n\n**Good predictions and analysing Dear, Data Scientists**","41473e57":"Unfortunately, lots of terrorism actors show up in my country. I hope, your country doesn't have any of them. \n\nSo we found the global or national actors then if we can find the number of attack of each individual terrorism organizations then we can create another chart of includes these informations.","d0f2621c":"As you can see there are lots of attacks. And some of the theirs has very high rates, especially attacks reaches the highest values at the 1992 and 2016.\n\nLet's find out the global or national actors of these attacks.","22967086":"First, we create a word cloud of cities.","14e04a3c":"And the last chart is a \"seaborn-swarmplot\". This chart includes years and weapons distributions with a target separator. The seperator represent to targets, we changed it to numbers from strings before creating to previous chart.","aeea8e20":"There are to many columns, I didn't count them yet. But important things are the columns. Therefore we should look the columns and check what are they.","d0532ba3":"**Terrorist Attacks by Target**","89b84826":"Just to prevent outliers values in the latitude or longitude coordinates we look at the **world_df** latitudes and longitudes.\nTurkey's latitudes are 36 to 42 North and longitudes are 26 to 45 East. ","f297098b":"Drop to dublicate values.","18e69c72":"If we take it as it is the \"attacks_of_groups\", we have the numbers, but some of the these groups has only 1 terrorism activation. When we create the chart this groups cause to a complicate to reading data. \n\nTherefore, I will take the groups by has 6 or more than attacks.","9dbb540c":"I think the biggest one of the cloud is Istanbul. So we can say that most of the attacks happens in the Istanbul.\n> **If the Earth was a single state, Istanbul would be its capital. [Napoleon]***\n","e8447ae6":"If we check the number of attack each year then we find the this numbers. And we can create a bar charts about this numbers.","ad63e5bd":"Now we add to \"date\" column in our **world_df**.","493bdb2e":"**Let's import to our data and check the basics.**","92db3cab":"If we rename the some of these columns then we have a more clear look. We do that this way;\n- Add a new column and give a name it as 'date'.\n- Put inside it the our \"iday-imonth-iyear\". ","4da17d23":"What a beauty huh? But what will happen if we take the only specific country datas and work on it. As you can read at the main title we will look at the Turkey's data.\nI created a filter at the down. If you want to another country datas just change it.","4444b341":"We drop to these **NaN** values in the our **world_df.**","ed67ae98":"After that, let's create a **World Map** and see what it is there?","25773b69":"We should check the NaN values in the latitude and longitude features."}}