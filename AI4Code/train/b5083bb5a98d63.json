{"cell_type":{"5b5ba51f":"code","62e6bfca":"code","1f19a7d1":"code","82074220":"code","0db048cf":"code","17fdbb26":"code","08c3632c":"code","4c4b63fb":"code","6c87de55":"code","a6807001":"code","6f58c3ea":"code","0484df35":"code","40e66164":"markdown","7a9f9d8f":"markdown","46d7f18c":"markdown","766705c5":"markdown","c24cc32d":"markdown","4be32d90":"markdown","d30d95ce":"markdown","0835cee0":"markdown","71e33970":"markdown","cc7175f3":"markdown","350ae0ad":"markdown","4b9f62cc":"markdown"},"source":{"5b5ba51f":"# Import required Python libraries \nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Path of the file to read. We changed the directory structure to simplify submitting to a competition\niowa_file_path = '..\/input\/train.csv'\n","62e6bfca":"home_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","1f19a7d1":"home_data.describe()","82074220":"home_data.head()","0db048cf":"# Create target object and call it y\ny = home_data.SalePrice # Predict Target is sales price \n","17fdbb26":"# Create X\n\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\n\nX = home_data[features]\n\nX.head()","08c3632c":"\n# Split into validation and training data\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\n# Specify Model\niowa_model = DecisionTreeRegressor(random_state=1)\n# Fit Model\niowa_model.fit(train_X, train_y)\n\n# Make validation predictions and calculate mean absolute error\nval_predictions = iowa_model.predict(val_X)\nval_mae = mean_absolute_error(val_predictions, val_y)\nprint(\"Validation MAE when not specifying max_leaf_nodes: {:,.0f}\".format(val_mae))\n\n# Using best value for max_leaf_nodes\niowa_model = DecisionTreeRegressor(max_leaf_nodes=100, random_state=1)\niowa_model.fit(train_X, train_y)\nval_predictions = iowa_model.predict(val_X)\nval_mae = mean_absolute_error(val_predictions, val_y)\nprint(\"Validation MAE for best value of max_leaf_nodes: {:,.0f}\".format(val_mae))\n\n# Define the model. Set random_state to 1\nrf_model = RandomForestRegressor(random_state=1)\nrf_model.fit(train_X, train_y)\nrf_val_predictions = rf_model.predict(val_X)\nrf_val_mae = mean_absolute_error(rf_val_predictions, val_y)\n\nprint(\"Validation MAE for Random Forest Model: {:,.0f}\".format(rf_val_mae))","4c4b63fb":"# To improve accuracy, create a new Random Forest model which you will train on all training data\nrf_model_on_full_data = RandomForestRegressor(random_state=1)\n\n\n\n# fit rf_model_on_full_data on all data from the training data\n\nrf_model_on_full_data.fit(X, y)","6c87de55":"# path to file you will use for predictions\ntest_data_path = '..\/input\/house-prices-advanced-regression-techniques\/test.csv'\n\n# read test data file using pandas\ntest_data = pd.read_csv(test_data_path)\n\n# create test_X which comes from test_data but includes only the columns you used for prediction.\n# The list of columns is stored in a variable called features\n#******************* text x = featuers columns\n\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\ntest_X = test_data[features] \n\n\n# make predictions which we will submit. \ntest_preds = rf_model_on_full_data.predict(test_X)\n\n\noutput = pd.DataFrame({'Id': test_data.Id,\n                       'SalePrice': test_preds})","a6807001":"output.head()","6f58c3ea":"print(output)\n","0484df35":"output.to_csv('submission.csv', index=False) # convert data frame into csv file","40e66164":"Convert data frame output into csv file submission.csv","7a9f9d8f":"# Submission","46d7f18c":"# Creating a Model For the Competition\nBuild a Random Forest model and train it on all of **X** and **y**.","766705c5":"Please consider upvoting if you find it useful to you \ud83d\udc4d.\n\nThanks.","c24cc32d":"# Predict House Prices Using Machine Learning","4be32d90":"Load and Explore Data (EDA)","d30d95ce":"![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/5407\/media\/housesbanner.png)","0835cee0":"# Make Predictions\nRead the file of \"test\" data. And apply your model to make predictions\n","71e33970":"# The Challenge \ud83c\udfaf\nWith 79 explanatory variables describing (almost) every aspect of residential homes in Ames, Iowa, this competition challenges you to predict the final price of each home.","cc7175f3":"# Test final data befor submit","350ae0ad":"**Print Full output to make sure rows, cols are corrects**","4b9f62cc":"Create featuers list as X\n* LotArea\n* YearBuilt\n* 1stFlrSF\n* 2ndFlrSF\n* FullBath\n* BedroomAbvGr\n* TotRmsAbvGrd\n\n\n"}}