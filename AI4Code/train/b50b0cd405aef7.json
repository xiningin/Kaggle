{"cell_type":{"270550cd":"code","737c8469":"code","94a88474":"code","e0fc9a3a":"code","8b395ba0":"code","10491c69":"code","d4582104":"code","5add5107":"code","9a6898f6":"code","be4fd2c6":"code","e6c7cdc5":"code","4faa1aa1":"code","bcf167e6":"code","b2b2ce9f":"code","c5724985":"code","a284e1ba":"code","6922d107":"code","8d1baf4c":"code","177f6e72":"code","dae185f8":"code","4f872845":"code","1f2ae2cf":"code","18421d41":"code","932a3585":"code","d8463295":"code","8442caa0":"code","0f8816ad":"code","a0498433":"code","0c6189f9":"code","1c72ad4d":"code","c2cebd06":"code","a6eba26b":"code","89c8ead4":"code","8369e99b":"code","f691a8ae":"code","85124866":"code","933e5f54":"code","04a088d3":"code","769be1da":"code","08d6a7a8":"code","02157366":"code","7b1246fb":"markdown","48765b67":"markdown","1f6ebc90":"markdown","e28082be":"markdown","ff8972c8":"markdown","39b503c3":"markdown","aab73e30":"markdown","7706ca23":"markdown","0990226c":"markdown","bf400883":"markdown","0ee436ae":"markdown","f50a38cb":"markdown","af4771dd":"markdown","ff3314c9":"markdown","41e4cb24":"markdown","91403bf0":"markdown","74828d07":"markdown","94f19a25":"markdown","b2f74c8e":"markdown","db86a7ca":"markdown","3057d1c6":"markdown","95a7a238":"markdown","95f0ff0b":"markdown","c8e83160":"markdown","6006dc56":"markdown","9c6e101a":"markdown","7b8a046f":"markdown","cdece199":"markdown","cf1064cd":"markdown","92ca4ad3":"markdown"},"source":{"270550cd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #visuals\nimport seaborn as sns #visuals\n\nfrom sklearn.preprocessing import StandardScaler #scaler\nfrom sklearn.cluster import KMeans #k-means\n\nfrom sklearn.decomposition import PCA #pca","737c8469":"#read the csv \ndf = pd.read_csv('..\/input\/bank-customers-segmentation\/bank-full.csv')","94a88474":"#shape \ndf.shape","e0fc9a3a":"#display top 5 rows\ndf.head()","8b395ba0":"#dataframe info\ndf.info()","10491c69":"#describe numeric features\ndf.describe()","d4582104":"#check for duplicates\ndf[df.duplicated()]","5add5107":"#column names \ndf.columns ","9a6898f6":"#check for duplicates based on a set of features \nsubset = ['age', 'job', 'marital', 'education','default', 'housing', 'loan', 'contact','duration', 'campaign']\ndf[df.duplicated(subset=subset)]","be4fd2c6":"#drop duplicates\ndf = df.drop_duplicates(subset = subset)","e6c7cdc5":"#check for null values\ndf.isna().sum()","4faa1aa1":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100) \n#plot a histograme of age\nsns.histplot(data = df, x = 'age', bins = 40, kde = True)\n#show the figure\nplt.show()","bcf167e6":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100) \n#plot a histograme of age\nsns.histplot(data = df, x = 'age', bins = 40, hue = 'loan')\n#show the figure\nplt.show()","b2b2ce9f":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100) \n#plot a histograme of age\nsns.histplot(data = df, x = 'pdays', bins = 40)\n#show the figure\nplt.show()","c5724985":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#filter the dataframe\ndata = df[df.pdays != 999]\n#plot a histograme of age\nsns.histplot(data = data, x = 'pdays')\n#show the figure\nplt.show()","a284e1ba":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#count plot\nsns.countplot(data = df, x = 'contact')\n#show the figure\nplt.show()","6922d107":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#hist plot\nsns.histplot(data = df, x = 'duration')\n#show the figure\nplt.show()","8d1baf4c":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#hist plot\nsns.histplot(data = df, x = 'duration')\n#x limit\nplt.xlim(0,1000)\n#show the figure\nplt.show()","177f6e72":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#hist plot\nsns.histplot(data = df, x = 'duration', hue = 'contact')\n#x limit\nplt.xlim(0,1000)\n#show the figure\nplt.show()","dae185f8":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#order \norder = df['job'].value_counts().index\n#count plot\nsns.countplot(data = df, x = 'job', order = order)\n#rotate xticks \nplt.xticks(rotation = 90)\n#show the figure\nplt.show()","4f872845":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#order \norder = df['education'].value_counts().index\n#count plot\nsns.countplot(data = df, x = 'education', order = order)\n#rotate xticks \nplt.xticks(rotation = 90)\n#show the figure\nplt.show()","1f2ae2cf":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#order \norder = df['default'].value_counts().index\n#count plot\nsns.countplot(data = df, x = 'default', order = order)\n#rotate xticks \nplt.xticks(rotation = 90)\n#show the figure\nplt.show()","18421d41":"#get dummies\nX = pd.get_dummies(df, drop_first=True)","932a3585":"#head \nX.head()","d8463295":"#instance \nscaler = StandardScaler()","8442caa0":"#fit tansform \nscaled_X = scaler.fit_transform(X)","0f8816ad":"#instance \nmodel = KMeans(n_clusters = 2)","a0498433":"#fit predict \ncluster_labels = model.fit_predict(scaled_X)","0c6189f9":"#assign the feature to the dataframe\nX['Cluster'] = cluster_labels","1c72ad4d":"#correlation \nplt.figure(figsize = (12,4), dpi = 100)\nX.corr()['Cluster'].iloc[:-1].sort_values().plot(kind = 'bar')","c2cebd06":"#Elbo method \nssd = []\n\nfor k in range(2,10):\n    #instance \n    model = KMeans(n_clusters = k)\n    #fit predict \n    cluster_labels = model.fit_predict(scaled_X)\n    #ssd\n    ssd.append(model.inertia_)","a6eba26b":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#plot \nplt.plot(range(2,10), ssd, \"o--\")\n#show the figure\nplt.show()","89c8ead4":"#instance \nmodel = KMeans(n_clusters = 7)\n#fit predict \nlabel = model.fit_predict(scaled_X)\n#assign the feature to the dataframe\nX['cluster'] = label\ndf['cluster'] = label","8369e99b":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#order \norder = X['cluster'].value_counts().index\n#count plot\nsns.countplot(data = X, x = 'cluster', order = order)\n#show the figure\nplt.show()","f691a8ae":"#intiate a figure \nplt.figure(figsize = (8,4), dpi = 100)\n#box plot\nsns.boxplot(data = X, x = 'cluster', y = 'age')\n#show the figure\nplt.show()","85124866":"# convert the data into 2d to be able to visualize it \npca = PCA(2)\ndf = pca.fit_transform(scaled_X)\ndf.shape","933e5f54":"#Initialize the class object\nkmeans = KMeans(n_clusters= 7)\n \n#predict the labels of clusters.\nlabel = kmeans.fit_predict(df)","04a088d3":"#filter rows of original data\nfiltered_label0 = df[label == 0]\n \n#plotting the results\nplt.figure(figsize = (12,8), dpi = 100)\nplt.scatter(filtered_label0[:,0] , filtered_label0[:,1])\nplt.show()","769be1da":"#filter rows of original data\nfiltered_label2 = df[label == 2]\nfiltered_label6 = df[label == 6]\n \n#Plotting the results\nplt.figure(figsize = (12,8), dpi = 100)\nplt.scatter(filtered_label2[:,0] , filtered_label2[:,1] , color = 'red')\nplt.scatter(filtered_label6[:,0] , filtered_label6[:,1] , color = 'black')\nplt.show()","08d6a7a8":"#Getting unique labels\nu_labels = np.unique(label)\n\n#plotting the results:\nplt.figure(figsize = (12,8), dpi = 100)\nfor i in u_labels:\n    plt.scatter(df[label == i , 0] , df[label == i , 1] , label = i)\nplt.legend()\nplt.show()","02157366":"#Getting the Centroids\ncentroids = kmeans.cluster_centers_\nu_labels = np.unique(label)\n \n#plotting the results:\nplt.figure(figsize = (12,8), dpi = 100)\nfor i in u_labels:\n    plt.scatter(df[label == i , 0] , df[label == i , 1] , label = i)\nplt.scatter(centroids[:,0] , centroids[:,1] , s = 80, color = 'k')\nplt.legend()\nplt.show()","7b1246fb":"## Data prep\nIn K-Means clustering, we can not use categorical data because every thing will be based of distance metric. We will be checking which point has the closest cluster center for re-assignment. Which means, in order to check that distance to the cluster center we need all features to be numeric. Therefore, we need to convert all categorical features into dummies. ","48765b67":"## Choose the number of clusters","1f6ebc90":"## Duration","e28082be":"# K-Means","ff8972c8":"## Pdays\nNumber of days that passed by after the client was last contacted from a previous campaign (numeric; 999 means client was not previously contacted)","39b503c3":"# Load and check the data ","aab73e30":"### Scale the data ","7706ca23":"> **Conclusion**: Admin is the most predominant job ","0990226c":"# Required Packages","bf400883":"> **Conclusion:** In this article, we saw how we can visualize the clusters formed by the k-means algorithm. Till we meet next time, Happy Learning!","0ee436ae":"> **Conclusion:** Most people have never been contacted before. Lets zoom in and focus on the distribution of pdays for those who have been contacted.","f50a38cb":"## Create the model","af4771dd":"> **Conclusion**: Whether you call people on a cell phone or on a landline, the duration of the call does not differ. Call duration is the same in both cases as reflected by the above distribution.","ff3314c9":"## Default","41e4cb24":"### Get dummies","91403bf0":"> **Conclusion:** 7 clusters seems to be a good guess","74828d07":"> **Conclusion:** Features with high correlation with the Cluster are the most important features to seprate out the dataset into clusters. ","94f19a25":"> **Conclusion:** Most of people ages from 20 - 60 and the majority of them does not have loans","b2f74c8e":"> **Conclusion**: University degree is the most predominant, wheras number of illiterates is very tiny ","db86a7ca":"> **Conclusion:** dopicated rows have been detected, no missing values found, and all features are in the correct data type.","3057d1c6":"When working with unsupervised learning methods, its usually important to lay out a general goal. In our case, let's attempt to find reasonable clusters of customers for marketing segmentation and study. What we end up doing with those clusters would depend heavily on the domain itself, in this case, marketing.","95a7a238":"# Explanatory data analysis","95f0ff0b":"## Contact","c8e83160":"> **Conclusion:** The majority of people has cell phones combared to a landline ","6006dc56":"## Job","9c6e101a":"## Re-Run the model","7b8a046f":"## Education ","cdece199":"> **Conclusion**: There is no default","cf1064cd":"## Age","92ca4ad3":"# Visualize the clusters"}}