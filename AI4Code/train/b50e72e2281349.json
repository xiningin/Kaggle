{"cell_type":{"efac86f0":"code","85bd243f":"code","46865f1d":"code","d301a20b":"code","a0e0600e":"code","ff6be1e4":"code","86ed8778":"code","05370a8c":"code","8afeb8fb":"code","e2c306f8":"code","6338ff80":"code","09b21974":"code","b1835371":"code","24941626":"code","6647ebe6":"code","378ff5da":"code","62d2010b":"code","b9257795":"code","a2608182":"code","2cafa10d":"code","9a9a3c55":"code","485cf564":"code","0b4bda10":"code","67ad6f0f":"code","c1f6ced6":"code","f1516bd6":"code","43045071":"code","0329ce78":"code","954716ef":"code","f49986eb":"code","6787bf17":"code","a5287195":"code","b4d76ca8":"code","3d40c9a2":"code","88c04a9f":"code","4c44b76d":"code","c5def1bc":"code","974a0bc7":"code","8f700fa4":"code","3bf8d5de":"code","948b0e9d":"code","6226329e":"markdown","154efd6c":"markdown","ae466aee":"markdown","b36e7532":"markdown","6469e4ca":"markdown","20920d80":"markdown","91a5508b":"markdown","faa70d5a":"markdown","82c750e0":"markdown","370ef40a":"markdown","1bf345f8":"markdown","0cdb4944":"markdown","604c433c":"markdown","3748f401":"markdown","4c0ca425":"markdown","3f1bcdce":"markdown","f18cd6ec":"markdown","020c2423":"markdown","6e2257b0":"markdown","639311a0":"markdown","9638e364":"markdown","0f2e2b78":"markdown","ebe65b35":"markdown","0ed87edf":"markdown","100a91d8":"markdown","d50291dd":"markdown","ed313e9d":"markdown"},"source":{"efac86f0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","85bd243f":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn import metrics","46865f1d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","d301a20b":"import keras\nfrom keras.layers import Dense\nfrom keras.models import Sequential\nfrom keras.layers import Dropout","a0e0600e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff6be1e4":"df = pd.read_csv('\/kaggle\/input\/telecom-users-dataset\/telecom_users.csv')\nprint('shape is : ', df.shape)\ndf.head()","86ed8778":"df.info()","05370a8c":"df = df.drop(['Unnamed: 0', 'customerID'], axis=1)\ndf = df.replace('No', 0)\ndf = df.replace('Yes', 1)\ndf = df.replace('No internet service', 0)","8afeb8fb":"df.head()","e2c306f8":"df['InternetService'].value_counts()","6338ff80":"df['InternetService'] = df['InternetService'].replace('Fiber optic', 2)\ndf['InternetService'] = df['InternetService'].replace('DSL', 1)","09b21974":"df['Contract'].value_counts()","b1835371":"df['Contract'] = df['Contract'].replace('Two year', 24)\ndf['Contract'] = df['Contract'].replace('One year', 12)\ndf['Contract'] = df['Contract'].replace('Month-to-month', 1)","24941626":"df['PaymentMethod'].value_counts()\n","6647ebe6":"df['PaymentMethod'] = df['PaymentMethod'].replace('Electronic check', 1)\ndf['PaymentMethod'] = df['PaymentMethod'].replace('Mailed check', 2)\ndf['PaymentMethod'] = df['PaymentMethod'].replace('Bank transfer (automatic)', 3)\ndf['PaymentMethod'] = df['PaymentMethod'].replace('Credit card (automatic)', 4)\n\ndf['MultipleLines'] = df['MultipleLines'].replace('No phone service', 0)","378ff5da":"df['gender'] = df['gender'].replace('Male', 1)\ndf['gender'] = df['gender'].replace('Female', 0)","62d2010b":"df['MultipleLines'] = df['MultipleLines'].astype(int)\ndf['MonthlyCharges'] = df['MonthlyCharges'].astype(int)\ndf['TotalCharges'] = df['TotalCharges'].astype(str)","b9257795":"df['TotalCharges'] = df['TotalCharges'].replace(' ', 0)\ndf['TotalCharges'] = df['TotalCharges'].astype(float)\ntotal_charge = df['TotalCharges']","a2608182":"for i in range(0, len(df)-1):\n    total_charge[i] = int(total_charge[i])\ndf['TotalCharges'] = df['TotalCharges'].astype(int)","2cafa10d":"df.head()","9a9a3c55":"df.info()","485cf564":"sns.barplot(x='Partner', y='MonthlyCharges', data=df)","0b4bda10":"sns.barplot(x='Contract', y='MonthlyCharges', data=df)\nplt.ylabel('Charge')","67ad6f0f":"sns.barplot(x='SeniorCitizen', y='MonthlyCharges', data=df)\nplt.xlabel('Non senior - Senior')","c1f6ced6":"sns.barplot(x='InternetService', y='MonthlyCharges', data=df)\nplt.xlabel('No Internet - DSL - Fiber optic')","f1516bd6":"corr = df.corr()","43045071":"plt.figure(figsize=(30,10))\nsns.heatmap(corr, cmap='coolwarm', annot = True)\nplt.show()","0329ce78":"corr[abs(corr['Churn']) > 0.1].index","954716ef":"df = df[['SeniorCitizen', 'Partner', 'Dependents', 'tenure', 'InternetService',\n       'OnlineSecurity', 'TechSupport', 'Contract', 'PaperlessBilling',\n       'PaymentMethod', 'MonthlyCharges', 'TotalCharges', 'Churn']]","f49986eb":"df.head()","6787bf17":"x = df.drop(['Churn'], axis=1)\ny = df['Churn']","a5287195":"x.shape, y.shape","b4d76ca8":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","3d40c9a2":"logistic = LogisticRegression()\nlogistic.fit(x_train, y_train)\nprediction_lr = logistic.predict(x_test)\nprint(classification_report(y_test,prediction_lr))\nmetrics.plot_roc_curve(logistic, x_test, y_test)","88c04a9f":"tree = DecisionTreeClassifier()\ntree.fit(x_train, y_train)\nprediction_dt = tree.predict(x_test)\nprint(classification_report(y_test, prediction_dt))\nmetrics.plot_roc_curve(tree, x_test, y_test)","4c44b76d":"forest = RandomForestClassifier()\nforest.fit(x_train, y_train)\nprediction_rf = forest.predict(x_test)\nprint(classification_report(y_test, prediction_rf))\nmetrics.plot_roc_curve(forest, x_test, y_test) ","c5def1bc":"model = Sequential([\n    Dense(32, activation='relu', input_dim=12),\n    Dropout(0.5),\n    Dense(16, activation='relu'),\n    Dense(1, activation='sigmoid')\n])\nmodel.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])\nmodel.summary()","974a0bc7":"history = model.fit(x_train, y_train, batch_size=10, epochs=50,verbose=2)","8f700fa4":"print(history.history.keys())","3bf8d5de":"plt.plot(history.history['accuracy'], label='Accuracy', color='blue')\nplt.plot(history.history['loss'], label='Loss', color='red')\nplt.legend()","948b0e9d":"prediction_nn = model.predict(x_test)\nprediction_nn = [1 if y>=0.5 else 0 for y in prediction_nn]\nprint(classification_report(y_test, prediction_nn))","6226329e":"### ANN","154efd6c":"Payment Method:\n\n'Electronic Check' = 1\n'Mailed Check' = 2\n'Bank Transfer' = 3\n'Credit Card' = 4","ae466aee":"### Observations","b36e7532":"### Logictic Regression","6469e4ca":"### Encoding categorical values","20920d80":"Usig most correalted columsn","91a5508b":"## Imports","faa70d5a":"Gender:\nFemale : 0 Male : 1","82c750e0":"## Data Preprocessing","370ef40a":"Having a partner or not having a partner does not effect the monthly charges that much, the effect is very minimal.\n\nContract year effects monthly costs. The contract with the most length has the lowest prices because of the commitment of the customer.\n\nSenior citizens pays more than non senior citizens. That might be because younger people use more internet so their contracts have more throughput.\n\nFiber optic is the fastest and most reliable internet right now. It is not surprise that it is the most expensive one.","1bf345f8":"### Dropping columns","0cdb4944":"## Models","604c433c":"Contract:\n\n'Month-to-month' = 1\n'Two Year' = 24\n'One Year' = 12","3748f401":"### Random Forests","4c0ca425":"## Correlations","3f1bcdce":"We achieved around %80 accuracy with different models. If we do some feature engineering after the preprocess maybe we can increase the accuracy little bit more.","f18cd6ec":"Also as you can see on the above, we can change the contract, internet service and payment method types as well without changing column purpose. I labeled them accordingly so I will be showing these labels when we are visualizing the data.\n\nAnd finally, I do think that montly and total charge values can be integers. They are determinant factors but their fraction values are not that important.","020c2423":"## EDA","6e2257b0":"Now the data is ready. Every column is in integer form. I will be looking for correlations of the columns with the Churn and if I find any uncorrelated columns I will drop them.","639311a0":"#### Confuiosn Matrix","9638e364":"### About the data","0f2e2b78":"### Updated DF","ebe65b35":"### Decision Tree","0ed87edf":"## Splitting the dataset","100a91d8":"Data has no null variables so that is great.<\/br>\n\nWe do not need some of these columns in both data analysis and prediction approaches.\n\nAlso 'Yes' and 'No' is not ideal to have a classification model so I will change them to 1 = 'Yes' and 0 = 'No'.","d50291dd":"I will not be looking each column one by one. I will choose the most correlated ones and use them in my models.","ed313e9d":"Internet service:\n\nFiber optic = 2\nDSL = 1"}}