{"cell_type":{"3af2f2cf":"code","0b28caec":"code","249b3e8b":"code","71786c88":"code","a034affc":"code","756d1489":"markdown","52d6b4d1":"markdown","daac8958":"markdown","b0d0d779":"markdown","be90d17b":"markdown"},"source":{"3af2f2cf":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","0b28caec":"# Importing the dataset\ndataset = pd.read_csv('..\/input\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:2].values\ny = dataset.iloc[:, -1].values.reshape(-1, 1) ## had to add the reshape here to convert the array from 2d to 1d NOTE","249b3e8b":"from sklearn.tree import DecisionTreeRegressor\nreg = DecisionTreeRegressor(random_state=0)\nreg.fit(X, y)","71786c88":"# Predicting a new result\n\"\"\"y_pred = reg.predict(sc_X.transform([[6.5]]))\ny_pred = sc_y.inverse_transform(y_pred)\"\"\"\ny_pred = reg.predict([[6.5]])\ny_pred","a034affc":"# Visualising the Decision Tree Regression results (higher resolution)\nX_grid = np.arange(min(X), max(X), 0.01)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, reg.predict(X_grid), color = 'blue')\nplt.title('Truth or Bluff (Decision Tree Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","756d1489":"This the notebook for Decision Tree Regression. In the first code segment, we import the necessary headers.","52d6b4d1":"Import the model and fit it to the dataset","daac8958":"Once trained, the model can be used to predict the value we want, but remember to feature scale the new value, while also making sure that it is a 2D array.","b0d0d779":"Next, input the dataset and define the independent and dependent variables","be90d17b":"Lastly, let's just visualize and see how well our DT just did."}}