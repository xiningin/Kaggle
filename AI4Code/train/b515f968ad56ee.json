{"cell_type":{"f03f874d":"code","64756c80":"code","f48d157f":"code","7aea728d":"code","4e240095":"code","4fd951a4":"code","08624bfe":"code","1a3cb2c0":"code","22b36c17":"code","62ccfd08":"code","03c5811e":"code","c6af8b04":"code","f7f5d4cd":"code","40abe26f":"code","ea0a63ee":"code","c0400f06":"code","aa01096e":"code","7298e5ff":"code","375dabda":"code","3ea4403e":"code","76d73194":"code","8db5d700":"code","68d9466b":"code","70abac77":"code","508a6853":"code","0bd7a0b8":"code","9155ea8c":"code","129ab819":"code","790c72e4":"code","ae60a279":"code","270bde61":"code","1dd3b2bd":"markdown","c47ad3f8":"markdown","bc0f343f":"markdown","7f787dfe":"markdown","a30ccc24":"markdown","4d629dd0":"markdown","96a0aae8":"markdown"},"source":{"f03f874d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","64756c80":"df=pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\ndf.head()","f48d157f":"df.info()","7aea728d":"df.shape","4e240095":"print(df.groupby('output').size())\n#sns.countplot(df['output'],label=\"Count\")","4fd951a4":"df.isnull().sum()","08624bfe":"df.eq(0).sum()","1a3cb2c0":"dups=df.duplicated()\nprint(\"Duplicated Lines:%d\" % dups.sum())","22b36c17":"df.drop_duplicates(inplace=True)\ndf.shape","62ccfd08":"sns.boxplot(data=df,x=df['trtbps'])\n\nQ1=df['trtbps'].quantile(0.25)\nQ3=df['trtbps'].quantile(0.75)\nIQR=Q3-Q1\nprint(Q1)\nprint(Q3)\nprint(IQR)\nLower_Whisker = Q1-(1.5)*IQR\nUpper_Whisker = Q3+(1.5)*IQR\nprint(Lower_Whisker, Upper_Whisker)","03c5811e":"df = df[df['trtbps']< Upper_Whisker]\nsns.boxplot(data=df,x=df['trtbps'])","c6af8b04":"sns.boxplot(data=df,x=df['chol'])\n\nQ1=df['chol'].quantile(0.25)\nQ3=df['chol'].quantile(0.75)\nIQR=Q3-Q1\nprint(Q1)\nprint(Q3)\nprint(IQR)\nLower_Whisker = Q1-(1.5)*IQR\nUpper_Whisker = Q3+(1.5)*IQR\nprint(Lower_Whisker, Upper_Whisker)","f7f5d4cd":"df = df[df['chol']< Upper_Whisker]\nsns.boxplot(data=df,x=df['chol'])","40abe26f":"sns.boxplot(data=df,x=df['thalachh'])\n\nQ1=df['thalachh'].quantile(0.25)\nQ3=df['thalachh'].quantile(0.75)\nIQR=Q3-Q1\nprint(Q1)\nprint(Q3)\nprint(IQR)\nLower_Whisker = Q1-(1.5)*IQR\nUpper_Whisker = Q3+(1.5)*IQR\nprint(Lower_Whisker, Upper_Whisker)","ea0a63ee":"df = df[df['thalachh'] > Lower_Whisker]\nsns.boxplot(data=df,x=df['thalachh'])","c0400f06":"sns.boxplot(data=df,x=df['oldpeak'])\n\nQ1=df['oldpeak'].quantile(0.25)\nQ3=df['oldpeak'].quantile(0.75)\nIQR=Q3-Q1\nprint(Q1)\nprint(Q3)\nprint(IQR)\nLower_Whisker = Q1-(1.5)*IQR\nUpper_Whisker = Q3+(1.5)*IQR\nprint(Lower_Whisker, Upper_Whisker)","aa01096e":"df = df[df['oldpeak']< Upper_Whisker]\nsns.boxplot(data=df,x=df['oldpeak'])","7298e5ff":"df.shape","375dabda":"df.corr()","3ea4403e":"colormap = plt.cm.RdBu\nplt.figure(figsize=(10,8))\nsns.heatmap(df.corr())\nplt.show()","76d73194":"Output = pd.DataFrame(df.corr()['output'].sort_values(ascending=False))\nsns.heatmap(Output)","8db5d700":"from sklearn.model_selection import train_test_split\n\nX = df.iloc[:,:-1]\ny = df.iloc[:,-1:]\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=20)","68d9466b":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train_raw = scaler.fit_transform(X_train)\nX_test_raw = scaler.transform(X_test)\n\nX_train = pd.DataFrame(X_train_raw, columns=X_train.columns, index=X_train.index)\nX_test = pd.DataFrame(X_test_raw, columns=X_test.columns, index=X_test.index)","70abac77":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix ,classification_report,accuracy_score,recall_score,precision_score,f1_score","508a6853":"lr = LogisticRegression()\n#lr.fit(X_train, y_train.values.ravel()) # ravel() : 1d - array transform\nlr = LogisticRegression(solver='lbfgs',random_state=66,C=1).fit(X_train, y_train.values.ravel())\n\nprint(\"Training set accuracy: {:.5f}\".format(lr.score(X_train, y_train)))\nprint(\"Test set accuracy    : {:.5f}\".format(lr.score(X_test, y_test)))","0bd7a0b8":"y_pred_lr = lr.predict(X_test)\nconfusion_matrix(y_pred=y_pred_lr,y_true=y_test)","9155ea8c":"print(\"Model Accuracy      : {:.5f}\".format(accuracy_score(y_pred=y_pred_lr,y_true=y_test)))\nprint(\"Recall Score        : {:.5f}\".format(recall_score(y_pred=y_pred_lr,y_true=y_test)))\nprint(\"Precision Score     : {:.5f}\".format(precision_score(y_pred=y_pred_lr,y_true=y_test)))\nprint(\"F1 Score            : {:.5f}\".format(f1_score(y_pred=y_pred_lr,y_true=y_test)))","129ab819":"svc = SVC(gamma='scale',random_state=66)\nsvc.fit(X_train, y_train.values.ravel())\nprint(\"Training set accuracy: {:.5f}\".format(svc.score(X_train, y_train)))\nprint(\"Test set accuracy    : {:.5f}\".format(svc.score(X_test, y_test)))","790c72e4":"y_pred_svm=svc.predict(X_test)\nconfusion_matrix(y_pred=y_pred_svm,y_true=y_test)","ae60a279":"print(\"Model Accuracy      : {:.5f}\".format(accuracy_score(y_pred=y_pred_svm,y_true=y_test)))\nprint(\"Recall Score        : {:.5f}\".format(recall_score(y_pred=y_pred_svm,y_true=y_test)))\nprint(\"Precision Score     : {:.5f}\".format(precision_score(y_pred=y_pred_svm,y_true=y_test)))\nprint(\"F1 Score            : {:.5f}\".format(f1_score(y_pred=y_pred_svm,y_true=y_test)))","270bde61":"from sklearn.metrics import roc_curve, auc\n\nlogistic_fpr, logistic_tpr, threshold = roc_curve(y_test, y_pred_lr)\nauc_logistic = auc(logistic_fpr, logistic_tpr)\n\nsvm_fpr, svm_tpr, threshold = roc_curve(y_test, y_pred_svm)\nauc_svm = auc(svm_fpr, svm_tpr)\n\nplt.figure(figsize=(5, 5), dpi=100)\n\nplt.plot(logistic_fpr, logistic_tpr, marker='.', label='Lojistik Regresyon (auc = %0.5f)' % auc_logistic)\nplt.plot(svm_fpr, svm_tpr, linestyle='-', label='Destek Vekt\u00f6r Makineleri (auc = %0.5f)' % auc_svm)\n\n\nplt.xlabel('False Positive Rate -->')\nplt.ylabel('True Positive Rate -->')\n\nplt.legend()\n\nplt.show()","1dd3b2bd":"## Support Vector Machine","c47ad3f8":"\n# **Heart Attack Analysis & Prediction Dataset**\n\n\n* age - age in years\n\n* sex - sex (1 = male; 0 = female)\n\n* cp - chest pain type (1 = typical angina; 2 = atypical angina; 3 = non-anginal pain; 4 = asymptomatic)\n\n* trestbps - resting blood pressure (in mm Hg on admission to the hospital)\n\n* chol - serum cholestoral in mg\/dl\n\n* fbs - fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\n\n* restecg - resting electrocardiographic results (0 = normal; 1 = having ST-T; 2 = hypertrophy)\n\n* thalach - maximum heart rate achieved\n\n* exang - exercise induced angina (1 = yes; 0 = no)\n\n* oldpeak - ST depression induced by exercise relative to rest\n\n* slope - the slope of the peak exercise ST segment (1 = upsloping; 2 = flat; 3 = downsloping)\n\n* ca - number of major vessels (0-3) colored by flourosopy\n\n* thal(thallium stress)- 0 to 3\n\n* output- 0(less chance of heart attack) and 1(more chance of heart attack)","bc0f343f":"## Logistic Regression","7f787dfe":"## ROC Curve","a30ccc24":"## Test Data Split and Standard Scaling","4d629dd0":"## Outliers","96a0aae8":"\n## Modeling and Prediction"}}