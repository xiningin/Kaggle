{"cell_type":{"539b40b0":"code","490b8272":"code","724b19de":"code","198446a8":"code","fdb9162e":"code","1739f597":"code","ffdfc168":"code","bb4e1ba8":"code","56f90ea5":"markdown","0ae68078":"markdown","dc656321":"markdown","152f4729":"markdown"},"source":{"539b40b0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport re\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))","490b8272":"df_train = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndf_train = df_train.drop(labels=['SNo','Last Update'], axis=1)\ndf_train['ObservationDate']= pd.to_datetime(df_train['ObservationDate'], format='%m\/%d\/%Y')\ndf_train","724b19de":"df_train.info()","198446a8":"#function to print observation period\ndef print_obs_period(x):\n    min_x = min(x['ObservationDate'])\n    max_x = max(x['ObservationDate'])\n    print(\"Observation period: \" + str(min_x) + \" .. \" + str(max_x))","fdb9162e":"#function to plot graph\ndef plot_graph(x, legend_title):\n    fig = plt.figure(figsize=(12,6))\n    plt.xticks(rotation=90)\n    plt.xscale('linear')\n    plt.xlabel(\"Observations\")\n    plt.ylabel(\"People\")\n    plt.scatter(x['ObservationDate'], x['Confirmed'], c='#1f77b4', label=\"Confirmed\");\n    plt.scatter(x['ObservationDate'], x['Deaths'],    c='#ff7f0e', label=\"Deaths\");\n    plt.scatter(x['ObservationDate'], x['Recovered'], c='#2ca02c', label=\"Recovered\");\n    plt.legend(title=legend_title)\n    plt.grid(True)\n    plt.show()","1739f597":"train_cn = df_train[df_train[\"Country\/Region\"] == \"Mainland China\"]\ntrain_cn = train_cn.groupby([\"Country\/Region\",\"ObservationDate\",\"Province\/State\"], as_index=False).max()\n#train_cn.info()\n\nprint_obs_period(train_cn)\n\ntrain_max = train_cn.groupby([\"Province\/State\"], as_index=False).max()\n#train_cn_max.info()\n\nfor province in train_max[train_max['Confirmed'] >= 1000]['Province\/State']:\n    #print(province)\n    plot_graph(train_cn[train_cn['Province\/State'] == province], province)","ffdfc168":"train_ca = df_train[df_train[\"Country\/Region\"] == \"Canada\"]\ntrain_ca = train_ca.groupby([\"Country\/Region\",\"ObservationDate\",\"Province\/State\"], as_index=False).max() \\\n                   .groupby([\"Country\/Region\",\"ObservationDate\"], as_index=False).sum()\n#train_ca.info()\n\ntrain_us = df_train[df_train[\"Country\/Region\"] == \"US\"]\ntrain_us = train_us.groupby([\"Country\/Region\",\"ObservationDate\",\"Province\/State\"], as_index=False).max() \\\n                   .groupby([\"Country\/Region\",\"ObservationDate\"], as_index=False).sum()\n#train_us.info()\n\ntrain_rest = df_train[df_train[\"Country\/Region\"] != \"Mainland China\"][pd.isna(df_train[\"Province\/State\"])]\ntrain_rest = train_rest.groupby([\"Country\/Region\",\"ObservationDate\"], as_index=False).max() \\\n                       .drop(labels=[\"Province\/State\"], axis=1)\n#train_rest.info()\n\ntrain_world = pd.concat([train_cn.groupby([\"Country\/Region\",\"ObservationDate\"], as_index=False).sum(), \\\n                         train_ca,\n                         train_us,\n                         train_rest])\n#train_world.info()\n\nprint_obs_period(train_world)\n\ntrain_max = train_world.groupby([\"Country\/Region\"], as_index=False).max()\n#train_max.info()\n\nfor country in train_max[train_max['Confirmed'] >= 1000]['Country\/Region']:\n    #print(country)\n    plot_graph(train_world[train_world['Country\/Region'] == country], country)","bb4e1ba8":"plot_graph(train_world.groupby([\"ObservationDate\"], as_index=False).sum(), 'World')","56f90ea5":"# 3. The world countries excluding China.","0ae68078":"# 2. Provinces of China.\n**The most provinces is reached the final stage of the spread of coronavirus COVID-19**","dc656321":"# 1. Loading dataset.\n**Data loading with official statistics about spreading coronavirus COVID-19.**","152f4729":"# 4. The whole world."}}