{"cell_type":{"c1087d45":"code","1a1d96d7":"code","d6ac3540":"code","1ff6f1d4":"code","ec8ee279":"code","e5e57f0a":"code","c3b1529e":"code","8772327f":"code","2dd7f8f5":"code","3c39be4d":"code","dfd311b5":"code","de358cc4":"code","c7d5df3a":"code","e5cb21a1":"code","05b05923":"code","068d21d5":"code","107b8960":"code","dc4e01f4":"markdown"},"source":{"c1087d45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1a1d96d7":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ntest_data=pd.read_csv('..\/input\/titanic\/test.csv')\ntrain_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain_data.set_index(['PassengerId'],inplace=True)\ntest_data.set_index(['PassengerId'],inplace=True)\nfull_data=train_data.append(test_data)\ntrain_y=train_data.Survived\ntrain_data.info()","d6ac3540":"train_data.head()\ncols=train_data.corr()['Survived'].index\ncols","1ff6f1d4":"#throw out feature:Name ,Survived\nfull_data=full_data.drop(columns=['Name','Survived'])\n","ec8ee279":"#Convert categorical variable into dummy\/indicator variables.\nfull_data_dummy=full_data.copy()\nfull_data_dummy=pd.get_dummies(full_data,columns=['Pclass','Embarked','Sex','Ticket'])\nfull_data_dummy.head()","e5e57f0a":"#throw out Cabin which has too much Nan\nfull_data_dummy=full_data_dummy.drop('Cabin',axis=1)","c3b1529e":"full_data_dummy.isnull().sum().sort_values(ascending=False).head(15)","8772327f":"#fill Nan value\nfull_data_dummy=full_data_dummy.fillna(full_data_dummy.mean())","2dd7f8f5":"#Normalization\nnumeric_cols=['Age','Fare']\n\nnumeric_col_mean=full_data_dummy.loc[:,numeric_cols].mean()\nnumeric_col_std=full_data_dummy.loc[:,numeric_cols].std()\nfull_data_dummy.loc[:,numeric_cols]=(full_data_dummy.loc[:,numeric_cols]-numeric_col_mean)\/numeric_col_st","3c39be4d":"#show that is there has unique values \nplt.scatter(full_data.fillna(full_data.mean()).Age,full_data.Fare)","dfd311b5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor","de358cc4":"train_data_dummy=full_data_dummy.loc[train_data.index]\ntest_data_dummy=full_data_dummy.loc[test_data.index]","c7d5df3a":"#find best parameter\nN_estimators=[20,50,100,150,200,250,300]\ntest_scores=[]\ntrain_X=train_data_dummy\nfor N in N_estimators:\n    clf=RandomForestRegressor(n_estimators=N,max_features=0.3)\n    test_score=np.sqrt(-cross_val_score(clf,train_X,train_y,cv=5,scoring='neg_mean_squared_error'))\n    test_scores.append(np.mean(test_score))  \nplt.plot(N_estimators,test_scores)\nplt.title('N_estimator vs CV Error')","e5cb21a1":"rf=RandomForestRegressor(n_estimators=200,max_features=0.3)\nrf.fit(train_X,train_y)","05b05923":"lg=LogisticRegression(C=1.0)\nlg.fit(train_X,train_y)","068d21d5":"#mix predictions\nrf_predict=rf.predict(test_data_dummy)\nlg_predict=lg.predict_proba(test_data_dummy)[:,1]\ny_final=(rf_predict+lg_predict)\/2\ny_final=y_final.round()\ny_final=y_final.astype(int)\ny_final","107b8960":"submission=pd.DataFrame(data={'PassengerId':test_data.index,'Survived':y_final})\nsubmission.to_csv('titanic_subm.csv',index=False)","dc4e01f4":"**Build Model**"}}