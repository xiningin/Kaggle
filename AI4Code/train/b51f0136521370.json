{"cell_type":{"db0a5e1b":"code","38894a29":"code","90fc635a":"code","fa394451":"code","353410b4":"code","fd4f3ba7":"code","31584e40":"code","8a4b983d":"code","2532e715":"code","03bbe3eb":"code","5fb3a82f":"code","ddc21c76":"markdown","a7b7f945":"markdown"},"source":{"db0a5e1b":"import pandas as pd\nimport math\nfrom matplotlib import pyplot as plt","38894a29":"data = pd.read_csv(\"---------\/faithful.csv\")\n\ndata0 = data.iloc[:,0]\ndata1 = data.iloc[:,1]\ndata2 = data.iloc[:,2]","90fc635a":"n = len(data1)\n\nplt.scatter(data1, data2, color = \"b\")\nplt.xlabel(\"eruptions\")\nplt.ylabel(\"waiting\")\nplt.show()","fa394451":"def oklid(x,y,x1,y1):\n    \n    cluster_distance = math.sqrt((x - x1) ** 2 + (y - y1) ** 2 )\n    \n    return cluster_distance","353410b4":"def distance(data_x, data_y, c1_x, c1_y, c2_x, c2_y):\n    \n    cluster_one_x_lord= []\n    cluster_one_y_lord = []\n    cluster_two_x_lord = []\n    cluster_two_y_lord = []\n    \n    for i in range(n):\n        cluster_one_distance = oklid(data_x[i], data_y[i], c1_x, c1_y)\n        cluster_two_distance = oklid(data_x[i], data_y[i], c2_x, c2_y)\n        \n        if (cluster_one_distance < cluster_two_distance):\n            cluster_one_x_lord.append(data_x[i])\n            cluster_one_y_lord.append(data_y[i])\n        elif (cluster_one_distance >= cluster_two_distance):\n            cluster_two_x_lord.append(data_x[i])\n            cluster_two_y_lord.append(data_y[i])\n        \n    cluster_one_total = len(cluster_one_x_lord)\n    cluster_two_total = len(cluster_two_x_lord)\n            \n    cluster_one_x_means = round((sum(cluster_one_x_lord) \/ cluster_one_total),3)\n    cluster_one_y_means = round((sum(cluster_one_y_lord) \/ cluster_one_total),3)\n    \n    cluster_two_x_means = round((sum(cluster_two_x_lord) \/ cluster_two_total),3)\n    cluster_two_y_means = round((sum(cluster_two_y_lord) \/ cluster_two_total),3)\n    \n    new_c1_x = cluster_one_x_means\n    new_c1_y = cluster_one_y_means\n    new_c2_x = cluster_two_x_means\n    new_c2_y = cluster_two_y_means\n    \n    \n    return new_c1_x, new_c1_y, new_c2_x, new_c2_y, cluster_one_x_lord, cluster_one_y_lord, cluster_two_x_lord, cluster_two_y_lord","fd4f3ba7":"def judge(old_c_x, old_c_y, new_c_x, new_c_y):\n    \n    if((old_c_x == new_c_x) and (old_c_y == new_c_y)):\n        judgement = 1\n    elif((old_c_x != new_c_x) and (old_c_x != new_c_y)):\n        judgement = 0\n    \n    return judgement","31584e40":"c1_x = 2\nc1_y = 55\nc2_x = 4\nc2_y = 85","8a4b983d":"f\u0131rst = distance(data1, data2, c1_x, c1_y, c2_x, c2_y)\n\nsecond_one = judge(c1_x, c1_y, f\u0131rst[0], f\u0131rst[1]) # 0 yada 1\nsecond_two = judge(c2_x, c2_y, f\u0131rst[2], f\u0131rst[3]) # 0 yada 1\n\ndeter_c1 = second_one\ndeter_c2 = second_two","2532e715":"while((deter_c1 != 1) and (deter_c2 != 1)):\n    old_c1_x = f\u0131rst[0]\n    old_c1_y = f\u0131rst[1]\n    old_c2_x = f\u0131rst[2]\n    old_c2_y = f\u0131rst[3]\n     \n    \n    f\u0131rst = distance(data1, data2, old_c1_x, old_c1_y, old_c2_x, old_c2_y)\n    second_one = judge(old_c1_x, old_c1_y, f\u0131rst[0], f\u0131rst[1])\n    \n    second_two = judge(old_c2_x, old_c2_y, f\u0131rst[2], f\u0131rst[3])\n    deter_c1 = second_one\n    deter_c2 = second_two","03bbe3eb":"cluster_c1_x = f\u0131rst[4]\ncluster_c1_y = f\u0131rst[5]\ncluster_c2_x = f\u0131rst[6]\ncluster_c2_y = f\u0131rst[7]\n\nnew_c1_x = f\u0131rst[0]\nnew_c1_y = f\u0131rst[1]\nnew_c2_x = f\u0131rst[2]\nnew_c2_y = f\u0131rst[3]","5fb3a82f":"plt.scatter(cluster_c1_x, cluster_c1_y,label = \"Cluster_1\", color = \"c\")\nplt.scatter(cluster_c2_x, cluster_c2_y, label = \"Cluster_2\",color = \"y\")\nplt.plot(new_c1_x, new_c1_y, \"b*\", label = \"1\" )\nplt.plot(new_c2_x, new_c2_y, \"r+\", label = \"2\")\nplt.xlabel(\"eruptions\")\nplt.ylabel(\"waiting\")\nplt.legend()\nplt.show() ","ddc21c76":"![k_ortalamalar_k%C3%BCmeli_grafik_en_iyi.png](attachment:k_ortalamalar_k%C3%BCmeli_grafik_en_iyi.png)","a7b7f945":"![k_ortalamalar_k%C3%BCmeli_grafik.png](attachment:k_ortalamalar_k%C3%BCmeli_grafik.png)"}}