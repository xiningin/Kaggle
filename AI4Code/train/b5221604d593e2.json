{"cell_type":{"df794cbc":"code","014ccb62":"code","d228535b":"code","74dfe53f":"code","18657c41":"code","0f38b646":"code","4c5955bd":"code","675799ad":"code","955b5c96":"code","9f833a96":"code","acc1f558":"code","54cc7d32":"code","19e56bfa":"code","0c6dcfb5":"code","179f0290":"code","65fcc36b":"code","5ef2eb18":"code","15174fa5":"code","ce10cbc0":"code","40e39d6c":"code","6b1672cd":"code","73f0279e":"code","40b13470":"code","b545cc47":"code","328ce821":"code","83ba27f6":"code","eb8a0d62":"code","bbe57d34":"code","7fe37b0d":"code","88b6a5cb":"code","4dd97a60":"code","36303e11":"code","4c4e919b":"code","d019f3d4":"code","3a2656b3":"code","b9f1d949":"code","f6ea7709":"code","542afbae":"code","a9f1f8f1":"code","87057387":"code","c9a70ce6":"code","7f26bd6b":"code","dbda3d79":"code","e5b3bf0e":"code","aef7babc":"code","e49594d7":"code","97159ac2":"code","e739fbaf":"code","4977aa85":"code","83614598":"code","e2c7693b":"code","ce2f4e2c":"code","77e617a2":"code","08b12f7b":"code","2dd583a0":"code","9bb3d7ee":"code","5a325dad":"code","97e21d6a":"code","881b22cc":"code","a2659f41":"code","3e3fbedf":"code","1d424395":"code","5508f863":"code","23e6a94e":"markdown","e915fe74":"markdown","e9e6ec23":"markdown","a509e9a3":"markdown","14717a76":"markdown","b41a67ed":"markdown","6902f9e3":"markdown","e10566a2":"markdown"},"source":{"df794cbc":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt","014ccb62":"print(os.listdir(\"..\/input\/amazon-alexa-reviews\"))","d228535b":"my_alexa = pd.read_csv('..\/input\/amazon-alexa-reviews\/amazon_alexa.tsv', sep = '\\t')","74dfe53f":"my_alexa.head()","18657c41":"my_alexa.keys()","0f38b646":"my_alexa['verified_reviews']","4c5955bd":"my_alexa['variation'].unique()","675799ad":"my_alexa['feedback'].unique() \n# 1 is Positive Feedback and 0 is Negative Feedback","955b5c96":"positive_feedback = my_alexa[my_alexa['feedback'] == 1]","9f833a96":"positive_feedback.shape # Count of positive feedback","acc1f558":"negative_feedback = my_alexa[my_alexa['feedback'] == 0]","54cc7d32":"negative_feedback.shape # Count of negative feedback","19e56bfa":"sns.countplot(my_alexa['feedback'],label='count')","0c6dcfb5":"sns.countplot(my_alexa['rating'],label='count')","179f0290":"my_alexa['rating'].hist(bins=5)","65fcc36b":"plt.figure(figsize=(40,15))\nsns.barplot(x='variation',y='rating',data=my_alexa, palette='deep')","5ef2eb18":"# 'feedback' is what we are predicting and 'variation' and 'verified_reviews' are used for analysis.\n# So, dropping the 'date' and 'rating' fields\n\nmy_alexa = my_alexa.drop(['date','rating'],axis=1)","15174fa5":"my_alexa.keys() # After 'date' and 'rating' dropped","ce10cbc0":"# Encoding the 'variation' to avoid the dummy trap\nvariation_dummy = pd.get_dummies(my_alexa['variation'], drop_first = True)","40e39d6c":"variation_dummy","6b1672cd":"my_alexa.drop(['variation'],axis=1,inplace=True)","73f0279e":"my_alexa.keys()","40b13470":"# Merging the dataframes\nmy_alexa = pd.concat([my_alexa,variation_dummy],axis = 1)","b545cc47":"my_alexa.keys()","328ce821":"# Vectorizing the 'verified_reviews' for analysis\nfrom sklearn.feature_extraction.text import CountVectorizer\nvectorizer = CountVectorizer()\nalexa_cv = vectorizer.fit_transform(my_alexa['verified_reviews'])","83ba27f6":"alexa_cv.shape","eb8a0d62":"print(vectorizer.get_feature_names())","bbe57d34":"print(alexa_cv.toarray())","7fe37b0d":"my_alexa.drop(['verified_reviews'],axis=1,inplace = True)","88b6a5cb":"my_alexa.keys()","4dd97a60":"encoded_reviews = pd.DataFrame(alexa_cv.toarray())","36303e11":"my_alexa = pd.concat([my_alexa,encoded_reviews],axis = 1)","4c4e919b":"my_alexa","d019f3d4":"X = my_alexa.drop(['feedback'],axis=1)","3a2656b3":"X.shape","b9f1d949":"y = my_alexa['feedback']","f6ea7709":"y.shape","542afbae":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)\n# try setting the test_size to 0.3 and 0.4","a9f1f8f1":"X_train.shape","87057387":"X_test.shape","c9a70ce6":"y_train.shape","7f26bd6b":"y_test.shape","dbda3d79":"# RandomForest Classifer\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nrandomforest_classifier = RandomForestClassifier(n_estimators=200,criterion = 'entropy')\nrandomforest_classifier.fit(X_train,y_train)\n# Try the n_estimators with 50,100,150,200,250,300","e5b3bf0e":"y_predict_train = randomforest_classifier.predict(X_train)","aef7babc":"y_predict_train","e49594d7":"cm = confusion_matrix(y_train,y_predict_train)","97159ac2":"sns.heatmap(cm,annot = True)","e739fbaf":"print(classification_report(y_train,y_predict_train))","4977aa85":"y_predict = randomforest_classifier.predict(X_test)","83614598":"cm = confusion_matrix(y_test,y_predict)","e2c7693b":"sns.heatmap(cm,annot=True)","ce2f4e2c":"print(classification_report(y_test,y_predict))","77e617a2":"my_alexa = pd.read_csv('..\/input\/amazon-alexa-reviews\/amazon_alexa.tsv', sep = '\\t')","08b12f7b":"my_alexa = pd.concat([my_alexa,pd.DataFrame(alexa_cv.toarray())],axis = 1)","2dd583a0":"my_alexa.shape","9bb3d7ee":"# Adding the length fo the 'verified_review' as a last column in my_alexa dataframe\nmy_alexa['length'] = my_alexa['verified_reviews'].apply(len)","5a325dad":"my_alexa","97e21d6a":"X = my_alexa.drop(['rating','date','variation','verified_reviews','feedback'],axis=1)","881b22cc":"X","a2659f41":"y = my_alexa['feedback']","3e3fbedf":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)","1d424395":"from sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nrandomforest_classifier = RandomForestClassifier(n_estimators=300,criterion = 'entropy') # Earlier we had n_estimator as 200\nrandomforest_classifier.fit(X_train,y_train)\n\ny_predict = randomforest_classifier.predict(X_test)\ncm = confusion_matrix(y_test,y_predict)\nsns.heatmap(cm,annot=True)","5508f863":"print(classification_report(y_test,y_predict))","23e6a94e":"# Step 1: Importing the Data","e915fe74":"# Step 2: Visualizing the data","e9e6ec23":"# Step 5: Evaluating the Model","a509e9a3":"# The objective is to discover insights into consumer reviews and perform sentiment analysis on the data.\n\n## Decision Tree and Random Forest\n\nNote: There a many other ways to do the analysis. This is one of the way to do the same.","14717a76":"# Step 6: Improving the Model","b41a67ed":"# Step 3: Data Cleaning \/ Engineering","6902f9e3":"# Step 4: Model the Training","e10566a2":"# End of Classification"}}