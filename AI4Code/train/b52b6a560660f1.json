{"cell_type":{"6f7b353c":"code","0ea9882b":"code","0ac6a3ed":"code","d7fcc906":"code","88b79d54":"code","48c1e133":"code","b454c9e4":"code","a96319d9":"code","49bdcdaf":"code","8a3ee434":"code","a67f6b28":"code","4f3e63bd":"code","5a417a24":"code","5afa7ad4":"code","3144af3e":"code","4a470941":"code","0269f20d":"code","e88381c6":"code","4d299554":"code","3e4a654a":"code","eb05ce5c":"code","991d7cbc":"code","02dd2494":"code","5b6d33a5":"code","dd5be3cb":"code","4e204287":"code","9386f8f5":"code","a47e5706":"code","3eb1573a":"code","2a267739":"code","b6630cfe":"markdown","08d9ecb5":"markdown","37288e2c":"markdown","c9e733a6":"markdown","4508c031":"markdown","30388d82":"markdown","bbccbbb9":"markdown","91b99f06":"markdown","884d0a4a":"markdown","2bdd951e":"markdown"},"source":{"6f7b353c":"#instalation des bibliotheque necissaire\n\n!pip install llvmlite --ignore-installed\n! pip install turicreate ","0ea9882b":"import turicreate as tr \nimport numpy  \nimport pandas \nimport tensorflow \nimport matplotlib ","0ac6a3ed":"import turicreate as tc\n# Load images \ntrain_data = tc.image_analysis.load_images('..\/input\/brain-tumor-detection', with_path=True)\nimage_sarray = train_data[\"image\"]\nresized_images = tc.image_analysis.resize(image_sarray, 28, 28, 1)\ntrain_data['image']=resized_images\n\n# From the path-name, create a label column\ntrain_data['label'] = train_data['path'].apply(lambda path: 'brain_tumor positif' if '\/yes' in path else 'brain_tumor negatif' if '\/no' in path else 'none')\n\n# Save the data for future use\ntrain_data.save('\/content\/brain-tumor.sframe')","d7fcc906":"train_data=train_data[train_data['label']=='brain_tumor positif']","88b79d54":"train_data.explore()","48c1e133":"\n# Load images \ntrain_data_chest = tc.image_analysis.load_images('..\/input\/chest-ctscan-images', with_path=True)\nimage_sarray = train_data_chest[\"image\"]\nresized_images = tc.image_analysis.resize(image_sarray, 28, 28, 1)\ntrain_data_chest['image']=resized_images\n\n# From the path-name, create a label column\ntrain_data_chest['label'] = \"chest_cancer\"\n\n# Save the data for future use\ntrain_data_chest.save('\/content\/chest-tumor.sframe')","b454c9e4":"train_data_chest.explore()","a96319d9":"train_data=train_data.append(train_data_chest)","49bdcdaf":"train_data['label'].show()","8a3ee434":"\n# Load images \ntrain_data_covid = tc.image_analysis.load_images('..\/input\/covidct', with_path=True)\nimage_sarray = train_data_covid[\"image\"]\nresized_images = tc.image_analysis.resize(image_sarray, 28, 28, 1)\ntrain_data_covid['image']=resized_images\n\n# From the path-name, create a label column\ntrain_data_covid['label'] = train_data_covid['path'].apply(lambda path: 'covid_19 positif' if '\/CT_COVID' in path else 'covid_&9 negatif')\n\n\n\n# Save the data for future use\ntrain_data_covid.save('\/content\/covid.sframe')\n\n","a67f6b28":"train_data_covid.show()","4f3e63bd":"train_data_covid=train_data_covid[train_data_covid['label']=='covid_19 positif']\n","5a417a24":"train_data_covid.show()","5afa7ad4":"# add the train_data_covid to the global train_data\ntrain_data=train_data.append(train_data_covid)","3144af3e":"train_data['label'].show()","4a470941":"import turicreate as tc\n# Load images \ntrain_data_alzheimer = tc.image_analysis.load_images('..\/input\/alzheimermridataset\/Alzheimer_s Dataset', with_path=True)\nimage_sarray = train_data_alzheimer[\"image\"]\nresized_images = tc.image_analysis.resize(image_sarray, 28, 28, 1)\ntrain_data_alzheimer['image']=resized_images\n\n\n\n# From the path-name, create a label column\ntrain_data_alzheimer['label'] = train_data_alzheimer['path'].apply(lambda path: 'Mild Demented alzeighmer' if '\/MildDemented' in path else 'moderate Demented alzeighmer' if '\/ModerateDemented' in path else 'verry mild demented alzeighmer' if '\/VeryMildDemented' in path else 'not affected with alzheimer')\n\n# Save the data for future use\ntrain_data_alzheimer.save('\/content\/alzheimer.sframe')","0269f20d":"train_data_alzheimer.explore()","e88381c6":"train_data_alzheimer.show()","4d299554":"train_data_alzheimer=train_data_alzheimer[train_data_alzheimer['label']=='Mild Demented alzeighmer']+train_data_alzheimer[train_data_alzheimer['label']=='verry mild demented alzeighmer']","3e4a654a":"train_data_alzheimer['label'].show()","eb05ce5c":"train_data=train_data.append(train_data_alzheimer)","991d7cbc":"# plot des donn\u00e9 de train data \ntrain_data['label'].show()","02dd2494":"len(train_data)","5b6d33a5":"train_data1,test_data1=train_data.random_split(0.8,seed=0)","dd5be3cb":"# Use all GPUs (default)\ntc.config.set_num_gpus(-1)\n# Create the model\nmodel = tc.image_classifier.create(train_data1, target='label',max_iterations=70)","4e204287":"model.evaluate(test_data1)","9386f8f5":"\nimage=tc.image_analysis.load_images('..\/input\/brain-tumor-detection\/yes\/y101.jpg')\nmodel.predict(image)","a47e5706":"image=tc.image_analysis.load_images('..\/input\/covidct\/CT_COVID\/2020.02.23.20026856-p17-115%4.png')\nimage.explore()\nmodel.predict(image)","3eb1573a":"image=tc.image_analysis.load_images('..\/input\/alzheimermridataset\/Alzheimer_s Dataset\/train\/MildDemented\/mildDem10.jpg')\nmodel.predict(image)","2a267739":"# Export for use in Core ML\nmodel.export_coreml('MyCustomImageClassifier.mlmodel')","b6630cfe":"## add covid 19 data set to the global data ","08d9ecb5":"#  add the alzeimer dataset","37288e2c":"#  building the model [](http:\/\/)","c9e733a6":"## scannaire IRM intelligente: predection et d\u00e9pistage des maladie\n\n# presentation g\u00e9nerale du project \n\n## ktiba f pc aya \n\n# les etapes suivie dans le code :\n\n### I - creation du dataset \n\n* 1- collecte des datasets des maladie qui peuvent \u00e9tre detecter par le scannaire IRM\n* 2- cr\u00e9ation du dataset global qui englobe tout les datasets collecter \n* 3- nettoyage du dataset global\n* 4- redimentionnage des image \n* 5- visualisation du dataset \n\n\n### II- creation du modele machine learning \n\n* 1- faire l'apprentissage du mod\u00e9le d'apprentissage deep learning \n* 2- evaluation du modele \n* 3- test manuelle du model et visualisation des images \n* 4- enregistrement du model \n\n### III- creation de l'interface homme machine \n\n\n### IIII- test et validation de l'application \n","4508c031":" \n\n## add brain tumor to the global Sframe","30388d82":"# ![](http:\/\/)add the Chest CT-Scan images Dataset to the global data","bbccbbb9":"## install turicreate platform\n\nTuri Create est une platforme developper par apple qui simplifie le d\u00e9veloppement de mod\u00e8les d'apprentissage automatique personnalis\u00e9s.\n\n* Facile \u00e0 utiliser: concentrez-vous sur les t\u00e2ches plut\u00f4t que sur les algorithmes\n* Visuel: visualisations int\u00e9gr\u00e9es en continu pour explorer vos donn\u00e9es\n* Flexible: prend en charge le texte, les images, l'audio, la vid\u00e9o et les donn\u00e9es de capteur\n* Rapide et \u00e9volutif: travaillez avec de grands ensembles de donn\u00e9es sur une seule machine\n","91b99f06":"## importation des libraries necissaire ","884d0a4a":"# test a positif brain tumor image ","2bdd951e":"# test a positif covid_19"}}