{"cell_type":{"2a46e44a":"code","b4cb8bfc":"code","3d5679ab":"code","5cb94b6b":"code","1d4c3da3":"code","c44df383":"code","cc964d7f":"code","13120118":"code","1b0baabc":"code","9ad8d0ce":"code","134429cb":"code","8856192f":"code","81225ed4":"markdown","62b0d40a":"markdown","7814de22":"markdown","0c16107c":"markdown","a585afd2":"markdown","1646292f":"markdown","6f8abd81":"markdown","2245b7a6":"markdown","6fde6737":"markdown","2468d342":"markdown","ef3cf8d0":"markdown","8f7febdd":"markdown","4e7e765f":"markdown","2b1d16fe":"markdown","7423b674":"markdown"},"source":{"2a46e44a":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b4cb8bfc":"train_data = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv', index_col = 'id')\ntrain_data = train_data.reset_index(drop = True)\n\nX_train = train_data[['text']].to_numpy()\ny_train = train_data[['target']].to_numpy()","3d5679ab":"test_data = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv')\n\n\ntest_id = test_data[['id']]\n\nX_test = test_data[['text']].to_numpy()","5cb94b6b":"X_train","1d4c3da3":"!pip install autokeras &> \/dev\/null","c44df383":"import autokeras as ak","cc964d7f":"clf = ak.TextClassifier(\n    overwrite=True, max_trials=3\n)","13120118":"clf.fit(X_train, y_train, epochs=5)","1b0baabc":"predictions = clf.predict(X_test)","9ad8d0ce":"predictions = list(map(int, predictions))","134429cb":"output = pd.DataFrame({'id': test_id.id, 'target': predictions})","8856192f":"output.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","81225ed4":"Then, we can **check** that our data is in the form of a **numpy array**  :","62b0d40a":"This **prediction** is composed of **1** and **0** in **float format**, we transform them into **int**.","7814de22":"And **submit our prediction !**","0c16107c":"Afterwards, we **train our model !**","a585afd2":"Then we **load** the **train** and **test data**.\n\nHere, a **unusual difference**, to use AutoKeras we must **transform our list** of tweet in a **numpy array**, for that we use the function *to_numpy()*.","1646292f":"The **interesting part** begins ! We want to **classify text**, so we use the **AutoKeras'** function  *TextClassifier()*.\n\nThis function has a **main parameter** : **max_trials**.\n\n**max_trials** allows to determine the **number of models** that **AutoKeras** will test before choosing **the best one**.\n\nOther **parameters** exist that you can **consult** on the [documentation](https:\/\/autokeras.com\/text_classifier\/).","6f8abd81":"We then **make our prediction**.","2245b7a6":"### **AutoKeras Model**","6fde6737":"**Finally**, we convert them into **dataframe**.","2468d342":"To use **AutoKeras** the first thing to do is to **install the library** on our server:","ef3cf8d0":"Then we **import the library**.","8f7febdd":"## **Load the data**","4e7e765f":"We begin by importing the **basic libraries** to do **Machine Learning** in Kaggle:\n- numpy\n- pandas\n- os","2b1d16fe":"**Simple, fast, efficient...** what more do we need ?","7423b674":"# **Use AutoKeras for Binary Classification**\n\n- [Article link for English speakers](https:\/\/inside-machinelearning.com\/en\/autokeras-the-revolutionary-library-for-deep-learning\/)\n- [Article link for French speakers](https:\/\/inside-machinelearning.com\/autokeras-la-librairie-du-futur\/)"}}