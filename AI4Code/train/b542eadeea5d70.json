{"cell_type":{"d0aee68e":"code","69c95091":"code","edccd96c":"code","ab68f882":"code","adc25363":"code","b70553cc":"code","98a8c118":"code","124cc7b1":"code","490b8404":"code","28454174":"code","c2a520a3":"code","4647b88e":"code","9edfe739":"code","84a00352":"markdown","9b1c5a1a":"markdown","09df05b8":"markdown","7a4c1f52":"markdown","8e56e152":"markdown","7b8167c9":"markdown","22b49e7c":"markdown","d80c4552":"markdown"},"source":{"d0aee68e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","69c95091":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","edccd96c":"url='\/kaggle\/input\/heights-and-weights\/data.csv'\ndata=pd.read_csv(url)\ndata","ab68f882":"data.describe()","adc25363":"x=data['Height'].to_numpy()\ny=data['Weight'].to_numpy()\nx=x.reshape(-1,1)\ny=y.reshape(-1,1)\nx\ny","b70553cc":"plt.plot(x,y)\nplt.xlabel('Height')\nplt.ylabel('Weight')\nplt.title('Height vs Weight')","98a8c118":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)","124cc7b1":"from sklearn.ensemble import RandomForestRegressor\nmodel=RandomForestRegressor(n_estimators=100, random_state=0)\nmodel.fit(x_train,y_train)\nprint('Model Trained')","490b8404":"y_test","28454174":"y_pred=model.predict(x_test)\ny_pred","c2a520a3":"df=pd.DataFrame(data={'Actual Values':y_test.flatten(),'Predicted Values':y_pred.flatten()})\ndf","4647b88e":"from sklearn.metrics import mean_absolute_error\nmae=mean_absolute_error(y_test,y_pred)\nprint(mae)","9edfe739":"target=[[1.9]] #let us assume that a person's height is this and let's predict the weight.\npred=model.predict(target)\nprint('The predicted weight is ',pred)","84a00352":"# You can use this model to predict the approximate weight of any person based on the height of the person.","9b1c5a1a":"## Hence, the precicted weight for a person whose height is 1.9 meters is 73.5064 Kg.","09df05b8":"From here we can obsserve that our model is somewhat correct in representing the data, except a little noise, which is always there in ML models.","7a4c1f52":"As we can see that the predicted values are almost equal to the actual values, with a very small deflection, so lets check now how much these values are different from the actual values. Let's calculate MAE(Mean Absolute Error)","8e56e152":"Thank you @Vikram Jeet Singh\nhttps:\/\/www.kaggle.com\/vikramjeetsinghs\/weight-predictor-based-on-height-of-person","7b8167c9":"From here we can see that there is a direct relationship between the height and weight, so let's use this data and create a machine learning model from this.","22b49e7c":"From here we can see that the mean absolute error is very less and our model was successful.","d80c4552":"We can use this model to predict the weight of any height and it will predict the weight based on that height.\nLets try an example."}}