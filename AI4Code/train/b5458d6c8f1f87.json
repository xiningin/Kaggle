{"cell_type":{"bd482c38":"code","bf5574e4":"code","95c667e7":"code","640401d1":"code","3f8390cd":"code","56dab62c":"code","271ce02f":"code","25e6215f":"code","ea54adce":"code","795ea324":"code","7bda93e0":"code","42f0440e":"code","e5f60077":"code","37e204a4":"code","7770d029":"code","d01ca4b5":"code","65266fca":"code","08cd55c7":"code","cc3ec4d2":"markdown","5d469d16":"markdown","2c71d140":"markdown","34020fca":"markdown","7e4d9ed4":"markdown","707cf7bc":"markdown","8c5262f5":"markdown","9c904712":"markdown","e1fbab1d":"markdown","161547f5":"markdown","62810bda":"markdown"},"source":{"bd482c38":"import numpy as np\nimport pandas as pd\n\nimport xgboost as xgb\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.datasets import load_iris","bf5574e4":"train= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')","95c667e7":"train.head()","640401d1":"train.target.value_counts()","3f8390cd":"train['sex'] = train['sex'].fillna('na')\ntrain['age_approx'] = train['age_approx'].fillna(0)\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].fillna('na')","56dab62c":"test['sex'] = test['sex'].fillna('na')\ntest['age_approx'] = test['age_approx'].fillna(0)\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].fillna('na')","271ce02f":"train['sex'] = train['sex'].astype(\"category\").cat.codes +1\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntrain.head()","25e6215f":"test['sex'] = test['sex'].astype(\"category\").cat.codes +1\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntest.head()","ea54adce":"x_train = train[['sex', 'age_approx','anatom_site_general_challenge']]\ny_train = train['target']","795ea324":"x_test = test[['sex', 'age_approx','anatom_site_general_challenge']]","7bda93e0":"train_DMatrix = xgb.DMatrix(x_train, label= y_train)\ntest_DMatrix = xgb.DMatrix(x_test)","42f0440e":"xgb_model = xgb.XGBClassifier(n_estimators=2000, \n                        max_depth=8, \n                        objective='multi:softprob',\n                        seed=0,  \n                        nthread=-1, \n                        learning_rate=0.15, \n                        num_class = 2, \n                        scale_pos_weight = (32542\/584))","e5f60077":"xgb_model.fit(x_train, y_train)","37e204a4":"xgb_pred_result = xgb_model.predict_proba(x_test)[:,1]\nprint(xgb_pred_result)","7770d029":"xgb_df = pd.DataFrame({\n        \"image_name\": test[\"image_name\"],\n        \"target\": xgb_pred_result\n    })\n\nxgb_df.to_csv('tuned_XGBClassifier_submission.csv', index=False)","d01ca4b5":"main_submission = pd.read_csv('..\/input\/my-siim-isic-submissions\/my_siim_isic_main_submission.csv')\nefficient_b7 = pd.read_csv('..\/input\/my-siim-isic-submissions\/EfficientNetB7_submission.csv')\nefficient_b7_blend_6 = pd.read_csv('..\/input\/my-siim-isic-submissions\/EfficientNetB7_submission_Blend_6.csv')\nmodel_blend_0_6 = pd.read_csv('..\/input\/my-siim-isic-submissions\/submission_models_blended_0-6.csv')","65266fca":"final_target =  main_submission.target *0.85 + efficient_b7.target *0.05 + xgb_df.target *0.10","08cd55c7":"result = pd.DataFrame({\n        \"image_name\": test[\"image_name\"],\n        \"target\": final_target\n    })\n\nresult.to_csv('final_submission_blend.csv', index=False)","cc3ec4d2":"# SIIM-ISIC : An Ensemble Beginner's Approach","5d469d16":"### Feature Engineering","2c71d140":"### Consider upvoting if it was helpful! \ud83d\ude03","34020fca":"> That is a simple approach to ensemble blend my main submission with a simple XGBoost Model. \n> This has improved my final accuracy to some good extent and performed much better after hyperparameter tuning. ","7e4d9ed4":"Read my other notebooks at:\nhttps:\/\/www.kaggle.com\/blurredmachine\/notebooks<br>\nCompetition Link:\nhttps:\/\/www.kaggle.com\/c\/siim-isic-melanoma-classification\n\nI hope you like this approach and it might be useful for someone to get a good score in competition.<br>\nI am continuously working on this notebook to keep it updated with new features and easy approaches for beginners to understand the concepts easily.\n","707cf7bc":"> It is clear that the data is highly imbalanced and skewed towards the 0 target class","8c5262f5":"> This notebook consists of a simple approach to solve SIIM ISIC Melanoma Classification Problem. <br>\n> Using ensemble of my main model submission and a simple XGBoost model to improve my final blend model's performance!<br>\n> NOTE: I have achieved nearly **94.68%** score using this strategy and which gave me a good intial push for the competition on the Leaderboard.","9c904712":"### Loading older submission files","e1fbab1d":"### Handling missing values in Train and Test Datasets ","161547f5":"### Data Manipulation for training and validation","62810bda":"### Building a simple XGBoost model for training \n(Hyperparameter tuning already done and model best values used)"}}