{"cell_type":{"a17255bc":"code","16a5364f":"code","e05ed709":"code","d785490b":"code","d4a27cff":"code","5b8dae4e":"code","8cfc5d53":"code","1ab9f927":"code","1867ee25":"code","3629bdf8":"code","d44e4e28":"code","9102564c":"code","adfe4604":"code","69af5517":"code","aea1ad75":"code","19432f92":"code","81ecf29b":"code","fdeeab81":"code","96b16773":"code","d2de5681":"code","c455e362":"code","d3e7fec3":"code","036cfb27":"code","e516ad07":"code","9fcc56f1":"code","cee08458":"code","07f580ec":"code","461c2b59":"code","baef62f9":"code","8bc49472":"code","49ab32fe":"code","7c81882b":"code","95515079":"code","a4984b7f":"markdown","f00d444f":"markdown","df59503a":"markdown","a871e806":"markdown","a32d5fe7":"markdown","660e06f9":"markdown","1049e292":"markdown","001081a6":"markdown","3dabea7c":"markdown","bcc1c074":"markdown","51e1b264":"markdown","7d57a605":"markdown","0498feeb":"markdown","794d2757":"markdown"},"source":{"a17255bc":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","16a5364f":"df = pd.read_csv('..\/input\/clothessizeprediction\/final_test.csv')","e05ed709":"df.shape","d785490b":"df.head()","d4a27cff":"df.describe()","5b8dae4e":"df = df[df['age'] >= 8]","8cfc5d53":"df.describe()","1ab9f927":"df.isnull().sum()","1867ee25":"df.dropna(inplace=True)\ndf.reset_index(inplace=True, drop=True)","3629bdf8":"df.isnull().sum()","d44e4e28":"df.shape","9102564c":"background_color = '#F8EDF4'\ncolor_palette = ['#F78904', '#00C73C', '#D2125E', '#693AF9', '#B20600', '#007CDE', '#994936', '#886A00', '#39BBC2']","adfe4604":"fig = plt.figure(figsize=(15, 6))\ngs = fig.add_gridspec(1, 2)\ngs.update(hspace=0.2, wspace=0.1)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1]\n\n\n# Title\nax0.text(0.5, 0.5, 'Countplot of Size\\n_______________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=22, fontweight='bold', fontfamily='serif')\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.tick_params(left=False, bottom=False)\nax0.spines[['bottom']].set_visible(False)\n    \n    \n# Graph\nsns.countplot(x='size', data=df, fill=True, ax=ax1, palette=color_palette, order=df['size'].value_counts().index)\nax1.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))\nax1.set_xlabel('')\nax1.set_ylabel('')\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)","69af5517":"df['size'].value_counts()","aea1ad75":"fig = plt.figure(figsize=(18, 16))\ngs = fig.add_gridspec(3, 2)\ngs.update(hspace=0.35, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\nax4 = fig.add_subplot(gs[2, 0])\nax5 = fig.add_subplot(gs[2, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3, ax4, ax5]\n\n# Title1\nax0.text(0.5, 0.5, 'Boxplot of Weight\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.boxplot(x='weight', data=df, ax=ax1, color=color_palette[0])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Weight\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='weight', data=df, fill=True, ax=ax3, color=color_palette[0])\n\n\n# Title3\nax4.text(0.5, 0.5, 'Distribution of Weight by Size\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph3\nsns.kdeplot(x='weight', hue='size', data=df, fill=True, ax=ax5, palette=color_palette[0:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2, ax4]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3, ax5]:\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    if ax == ax1:\n        ax.grid(color='#000000', linestyle=':', axis='x', zorder=0, dashes=(1,5))\n    else:\n        ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))","19432f92":"df_L = df.loc[(df['size'] == 'L') | (df['size'] == 'XL') | (df['size'] == 'XXL') | (df['size'] == 'XXXL')]\ndf_S = df.loc[(df['size'] == 'XXS') | (df['size'] == 'S') | (df['size'] == 'M')]","81ecf29b":"fig = plt.figure(figsize=(18, 11))\ngs = fig.add_gridspec(2, 2)\ngs.update(hspace=0.2, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3]\n\n\n# Title1\nax0.text(0.5, 0.5, 'Distribution of Weight by Size 1\\nL, XL, XXL, XXXL\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.kdeplot(x='weight', hue='size', data=df_L, fill=True, ax=ax1, palette=color_palette[:4])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Weight by Size 2\\nXXS, S, M\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='weight', hue='size', data=df_S, fill=True, ax=ax3, palette=color_palette[4:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3]:\n    ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))\n    ax.set_xlabel('')\n    ax.set_ylabel('')","fdeeab81":"fig = plt.figure(figsize=(18, 16))\ngs = fig.add_gridspec(3, 2)\ngs.update(hspace=0.35, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\nax4 = fig.add_subplot(gs[2, 0])\nax5 = fig.add_subplot(gs[2, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3, ax4, ax5]\n\n# Title1\nax0.text(0.5, 0.5, 'Boxplot of Age\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.boxplot(x='age', data=df, ax=ax1, color=color_palette[1])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Age\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='age', data=df, fill=True, ax=ax3, color=color_palette[1])\n\n\n# Title3\nax4.text(0.5, 0.5, 'Distribution of Age by Size\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph3\nsns.kdeplot(x='age', hue='size', data=df, fill=True, ax=ax5, palette=color_palette[0:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2, ax4]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3, ax5]:\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    if ax == ax1:\n        ax.grid(color='#000000', linestyle=':', axis='x', zorder=0, dashes=(1,5))\n    else:\n        ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))","96b16773":"fig = plt.figure(figsize=(18, 11))\ngs = fig.add_gridspec(2, 2)\ngs.update(hspace=0.2, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3]\n\n\n# Title1\nax0.text(0.5, 0.5, 'Distribution of Age by Size 1\\nL, XL, XXL, XXXL\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.kdeplot(x='age', hue='size', data=df_L, fill=True, ax=ax1, palette=color_palette[:4])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Age by Size 2\\nXXS, S, M\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='age', hue='size', data=df_S, fill=True, ax=ax3, palette=color_palette[4:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3]:\n    ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))\n    ax.set_xlabel('')\n    ax.set_ylabel('')","d2de5681":"fig = plt.figure(figsize=(18, 16))\ngs = fig.add_gridspec(3, 2)\ngs.update(hspace=0.35, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\nax4 = fig.add_subplot(gs[2, 0])\nax5 = fig.add_subplot(gs[2, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3, ax4, ax5]\n\n# Title1\nax0.text(0.5, 0.5, 'Boxplot of Height\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.boxplot(x='height', data=df, ax=ax1, color=color_palette[2])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Height\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='height', data=df, fill=True, ax=ax3, color=color_palette[2])\n\n\n# Title3\nax4.text(0.5, 0.5, 'Distribution of Height by Size\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph3\nsns.kdeplot(x='height', hue='size', data=df, fill=True, ax=ax5, palette=color_palette[0:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2, ax4]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3, ax5]:\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    if ax == ax1:\n        ax.grid(color='#000000', linestyle=':', axis='x', zorder=0, dashes=(1,5))\n    else:\n        ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))","c455e362":"fig = plt.figure(figsize=(18, 11))\ngs = fig.add_gridspec(2, 2)\ngs.update(hspace=0.2, wspace=0.15)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1, 0])\nax3 = fig.add_subplot(gs[1, 1])\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1, ax2, ax3]\n\n\n# Title1\nax0.text(0.5, 0.5, 'Distribution of Height by Size 1\\nL, XL, XXL, XXXL\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph1\nsns.kdeplot(x='height', hue='size', data=df_L, fill=True, ax=ax1, palette=color_palette[:4])\n\n\n# Title2\nax2.text(0.5, 0.5, 'Distribution of Height by Size 2\\nXXS, S, M\\n____________________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontweight='bold', fontfamily='serif')\n\n# Graph2\nsns.kdeplot(x='height', hue='size', data=df_S, fill=True, ax=ax3, palette=color_palette[4:7])\n\n\n# Settings\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'left']:\n        ax.spines[s].set_visible(False)\n\nfor ax in [ax0, ax2]:\n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.tick_params(left=False, bottom=False)\n    ax.spines[['bottom']].set_visible(False)\n        \nfor ax in [ax1, ax3]:\n    ax.grid(color='#000000', linestyle=':', axis='y', zorder=0, dashes=(1,5))\n    ax.set_xlabel('')\n    ax.set_ylabel('')","d3e7fec3":"# Label Encoding\ndf['size'] = df['size'].map({'XXS': 1, 'S': 2, 'M' : 3,\n                             'L' : 4, 'XL' : 5, 'XXL' : 6, 'XXXL' : 7})","036cfb27":"df.corr()","e516ad07":"f, ax = plt.subplots(1, 1, figsize=(8, 8))\n\nmask = np.triu(np.ones_like(df.corr()))\nax.text(1.2, -0.1, 'Correlation Matrix', fontsize=18,\n        fontweight='bold', fontfamily='serif')\nsns.heatmap(df.corr(), annot=True, fmt='.2f', cmap='RdBu', \n            square=True, mask=mask, linewidth=0.7, ax=ax)","9fcc56f1":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score","cee08458":"models = []\nscores = []","07f580ec":"X = df.drop('size', axis=1)\ny = df['size']\n\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","461c2b59":"model = LogisticRegression(solver='saga')\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\nscore_logreg = accuracy_score(y_test, y_pred)\n\nprint('Accuracy Score of Logistic Regression :', score_logreg)\n\nmodels.append('Logistic Regression')\nscores.append(score_logreg)","baef62f9":"model = RandomForestClassifier(max_depth=10)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\nscore_rf = accuracy_score(y_test, y_pred)\n\nprint('Accuracy Score of Random Forest Classifier :', score_rf)\n\nmodels.append('Random Forest')\nscores.append(score_rf)","8bc49472":"model = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\nscore_dt = accuracy_score(y_test, y_pred)\n\nprint('Accuracy Score of DecisionTree Classifier :', score_dt)\n\nmodels.append('Decision Tree')\nscores.append(score_dt)","49ab32fe":"# Find n_neighbors for best score\naccuracy = []\n\nfor i in range(1, 11):\n    model = KNeighborsClassifier(n_neighbors = i)\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    accuracy.append(accuracy_score(y_test, y_pred))\n\nscore_knn = max(accuracy)\nprint('Accuracy Score of K-Nearest Neighbors Classifier :', score_knn)\n\nplt.figure(figsize=(7, 4))\nplt.plot(range(1,11), accuracy, linestyle='dashed', marker='o', color='blue',\n        markersize=7, markerfacecolor='red')\nplt.xlabel('n_neighbors')\nplt.ylabel('Accuracy')\nplt.show()\n\nmodels.append('K-Nearest Neighbors')\nscores.append(score_knn)","7c81882b":"df_result = pd.DataFrame({'Model' : models, 'Score' : scores})\ndf_result.sort_values(by='Score', ascending=False, inplace=True)\ndf_result","95515079":"fig = plt.figure(figsize=(15, 4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.2)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n# Title\nax0.text(0.5, 0.5, 'Score of Models\\n ___________',\n        horizontalalignment='center',\n        verticalalignment='center',\n        fontsize=18, fontfamily='serif', fontweight='bold')\nax0.set_xticklabels([])\nax0.set_yticklabels([])\nax0.tick_params(left=False, bottom=False)\nax0.spines['left'].set_visible(False)\n\n\n# Graph\nax1.grid(color='#000000', linestyle=':', axis='x', zorder=0, dashes=(1,5))\nsns.barplot(x='Score', y='Model', data=df_result, palette=color_palette, ax=ax1)\nax1.set_xlabel('')\nax1.set_ylabel('')\n\n\nfig.patch.set_facecolor(background_color)\naxes = [ax0, ax1]\n\nfor ax in axes:\n    ax.set_facecolor(background_color)\n    for s in ['top', 'right', 'bottom']:\n        ax.spines[s].set_visible(False)","a4984b7f":"### Thank you!\n### Please Upvote if you like my notebook \ud83d\udc4d","f00d444f":"# Result","df59503a":"About Features\n\n- weight (kg)\n- age\n- height (cm)\n- size : Target to predict","a871e806":"## Distribution of Height","a32d5fe7":"## Countplot of Target (Size)","660e06f9":"## Correlation Matrix","1049e292":"# EDA","001081a6":"Instead of using LabelEncoder of sklearn, I mapped manually to set the order of sizes. (If you use LabelEncoder, it would be sorted alphabetically)","3dabea7c":"## Distribution of Age","bcc1c074":"There are some Null values in 'height' column. I'll drop the rows with Null values.","51e1b264":"## Distribution of Weight","7d57a605":"Unlike I've expected, it wasn't a good idea to plot 7 distributions together. It's hard to distinguish them.\n\nSo I'll split the whole data into two parts:\n- df_L for 'L', 'XL', 'XXL', 'XXXL'\n- df_S for 'XXS', 'S', 'M'","0498feeb":"The minimum values of 'weight' and 'height' are 22 and 137, while that of 'age' is **0**.\n\nAccording to the Normal growth table from [Children's Wisconsin](https:\/\/childrenswi.org\/medical-care\/adolescent-health-and-medicine\/issues-and-concerns\/adolescent-growth-and-development\/normal-growth), I'll drop the rows with 'age' under 8.","794d2757":"# Modeling"}}