{"cell_type":{"22a2227e":"code","4f0b9a82":"code","d305b0f4":"code","a51404b4":"markdown","cb4d1826":"markdown","1b6a3f42":"markdown","2272e657":"markdown","8557bca5":"markdown"},"source":{"22a2227e":"from IPython.display import clear_output\n!pip3 install rx \nclear_output()\n\nimport rx \nfrom rx import operators as op","4f0b9a82":"rx.of(1,2,3,4,5,6,7,8,9,10).pipe(\n    op.take(5)\n).subscribe(lambda x: print(\"{0}\".format(x)))","d305b0f4":"rx.of(1,2,3,4,5,6,7,8,9,10).pipe(\n    op.take_last(5)\n).subscribe(lambda x: print(\"{0}\".format(x)))","a51404b4":"# take ","cb4d1826":"# take_until","1b6a3f42":"Emits \n### only the first count values \nemitted by the source Observable.","2272e657":"# take_last","8557bca5":"Waits for the source to complete, \n\nthen emits \n\n### ***the last N values from the source***, \n\nas specified by the count argument."}}