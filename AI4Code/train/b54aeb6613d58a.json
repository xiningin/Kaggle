{"cell_type":{"b77b9a1a":"code","dc18842f":"code","b7693e08":"code","1483ba96":"code","508a4ff1":"code","b594200c":"code","3a467d44":"code","5839531a":"code","347e4a1b":"code","1dec0cba":"code","041ce22d":"code","8287e673":"code","15ba0b6b":"code","809dcf94":"code","7329a9a8":"code","591d1bbd":"code","50f71f45":"code","aa69b8dc":"code","31dc175a":"code","41642054":"code","57164af8":"code","30208de8":"code","47485952":"code","1a7b9da8":"code","c7037f83":"code","cde4c512":"code","d39ac43d":"code","79b02ef3":"code","5cdb9c9b":"code","a402d118":"code","dc289f45":"code","eefa1a87":"code","5bb9b183":"code","ee56864b":"code","04250328":"code","f467a8d4":"code","5148023e":"code","f290bb51":"code","38a08414":"code","c20fb565":"code","59f754bb":"code","e7bdb03d":"code","10215052":"code","f7be3a3e":"code","c8e46eb6":"code","68a404e0":"code","d82e3a8f":"code","e5075fd3":"code","e58d59dd":"code","f7198a9d":"code","ef9d0879":"code","d04c2973":"code","39b9fbba":"code","7f1fb5de":"code","789becc0":"code","90c9a5cc":"code","35ce0cdf":"code","97561c28":"code","c87edf3c":"code","7ec3ebbc":"code","eb621a47":"code","067ffdcc":"code","52f7b6d3":"code","42105383":"code","2b7424d2":"code","7d1bce1c":"code","260710e0":"code","f514228b":"code","84f04296":"code","53e48a95":"code","569f78d1":"code","27c8bd85":"code","14c3cf43":"code","172d6728":"code","d6b87703":"code","72af7239":"code","5047697b":"code","88b97f84":"code","c557e298":"code","d4112de7":"code","20d15482":"code","30d0162c":"code","207c50f4":"code","ea5576d4":"code","f5191b49":"code","ee9d4866":"code","8517fa1b":"code","17cc49b9":"code","27a22159":"code","34830e2d":"code","d2aa5ae1":"code","41b9c3f5":"code","f2dbd402":"code","1b5a6e6e":"code","7ebfaeac":"code","83a318b3":"code","90a27ab0":"code","6071fa5d":"code","ffa8251f":"code","a119a854":"code","ae377bd9":"code","235c05ca":"code","4454885d":"code","b73c2210":"code","d8cb1a05":"code","2c4063e4":"markdown","c2b4c46b":"markdown","32a95ea3":"markdown","233a1434":"markdown","62c23cc0":"markdown","f0729ec2":"markdown","35477b48":"markdown","98a013e6":"markdown","4a525364":"markdown","afe6626e":"markdown","351fbd27":"markdown","0e72afa1":"markdown","ec5e099c":"markdown"},"source":{"b77b9a1a":"import numpy as np","dc18842f":"# Numpy's main datatype is ndarray\na1=np.array([1,2,3])\na1","b7693e08":"type(a1)","1483ba96":"a2=np.array([[1,2,3],\n           [4,5,6]])\na2","508a4ff1":"a3=np.array([[[1,2,3],\n              [3,4,5],\n             [6,7,8]],\n             \n            [[9,10,11],\n            [12,13,14],\n             [15,16,17]]])\na3","b594200c":"a1.shape","3a467d44":"a2.shape","5839531a":"a3.shape","347e4a1b":"a1.ndim,a2.ndim,a3.ndim","1dec0cba":"a1.dtype,a2.dtype,a3.dtype","041ce22d":"a1.size,a2.size,a3.size","8287e673":"# create Dataframe from numpy array\nimport pandas as pd\ndf=pd.DataFrame(a2)\ndf","15ba0b6b":"ones=np.ones((2,2))\nones","809dcf94":"ones.dtype","7329a9a8":"zeros=np.zeros((2,3))\nzeros","591d1bbd":"range_array=np.arange(0,10,2)\nrange_array","50f71f45":"random_array=np.random.randint(3,10,size=(3,5))\nrandom_array","aa69b8dc":"random_array.size","31dc175a":"random_array.shape","41642054":"random_array2=np.random.random((5,3))\nrandom_array2","57164af8":"random_array3=np.random.rand(5,3)\nrandom_array3","30208de8":"# Pseudo-random numbers\nnp.random.seed(seed=0)\nrandom_array4=np.random.randint(10,size=(5,3))\nrandom_array4","47485952":"np.unique(random_array4)","1a7b9da8":"a1[0]","c7037f83":"a2[0][2]","cde4c512":"a3","d39ac43d":"a3[1]","79b02ef3":"a4=np.random.randint(10,size=(2,3,4,5))\na4","5cdb9c9b":"# slicing\na4[:,:,:,:5]","a402d118":"a1","dc289f45":"ones","eefa1a87":"ones=np.ones((3))","5bb9b183":"ones","ee56864b":"a1+ones","04250328":"a1.shape","f467a8d4":"a2.shape","5148023e":"a2","f290bb51":"a1*a2","38a08414":"a2\/a1","c20fb565":"a2\/\/a1","59f754bb":"np.square(a2)","e7bdb03d":"a1+ones","10215052":"np.add(a1,ones)","f7be3a3e":"a2%2","c8e46eb6":"np.exp(a1)","68a404e0":"np.log(a1)","d82e3a8f":"sum(a1)","e5075fd3":"np.sum(a1)","e58d59dd":"massvie_array=np.random.random(100000)","f7198a9d":"massvie_array[:10]","ef9d0879":"%timeit  sum(massvie_array) #python's sim()\n%timeit np.sum(massvie_array) #numpy's np.sun()","d04c2973":"40500\/103","39b9fbba":"np.mean(a2)","7f1fb5de":"np.min(a2)","789becc0":"np.max(a2)","90c9a5cc":"a2","35ce0cdf":"np.std(a2)","97561c28":"np.var(a2)","c87edf3c":"np.sqrt(2.91)","7ec3ebbc":"a2.shape","eb621a47":"a3.shape","067ffdcc":"a2_reshape=a2.reshape(2,3,1)","52f7b6d3":"a2_reshape * a3","42105383":"a2","2b7424d2":"a2.T","7d1bce1c":"a3.T","260710e0":"a3.T.shape","f514228b":"a3.shape","84f04296":"a3","53e48a95":"mat1=np.random.randint(10,size=(3,5))\nmat2=np.random.randint(10,size=(3,5))","569f78d1":"mat1","27c8bd85":"mat2","14c3cf43":"mat3=np.dot(mat1,mat2)","172d6728":"mat1=mat1.T","d6b87703":"mat1.shape","72af7239":"mat3=np.dot(mat1,mat2)","5047697b":"mat3","88b97f84":"np.random.seed(0)\n# numbers of jars sold\nsales_amounts=np.random.randint(20,size=(5,3))\nsales_amounts","c557e298":"# create weekly_sales DataFrame\nweekly_sales=pd.DataFrame(sales_amounts,index=['Mon','Tue','wed','Thu','Fri'],\n                               columns=['Almond butter','Peanuts butter','cashew butter'])\nweekly_sales","d4112de7":"# create price array\nprice = np.array([10,8,12])\nprice","20d15482":"# prices DataFrame\nbutter_prices=pd.DataFrame(price.reshape(1,3),index=['Prices'],\n                           columns=['Almond butter','Peanuts butter','cashew butter'])\nbutter_prices","30d0162c":"price=price.reshape(1,3)\nprice","207c50f4":"sales_amounts","ea5576d4":"sales_amounts.shape","f5191b49":"sales_amounts=sales_amounts.reshape(5,3)","ee9d4866":"total_sales=price.dot(sales_amounts.T)\ntotal_sales","8517fa1b":"butter_prices","17cc49b9":"weekly_sales","27a22159":"daily_Sales=butter_prices.dot(weekly_sales.T)\ndaily_Sales    ","34830e2d":"weekly_sales[\"Total($)\"]=daily_Sales.T\nweekly_sales","d2aa5ae1":"a1","41b9c3f5":"a2","f2dbd402":"a1.shape","1b5a6e6e":"a1.reshape(3,2)","7ebfaeac":"a1==a2","83a318b3":"a1>a2","90a27ab0":"a2>a1","6071fa5d":"random_array","ffa8251f":"np.sort(random_array)#row wise sorting","a119a854":"random_array","ae377bd9":"#Returns the indices that would sort an array.\n\n#Perform an indirect sort along the given axis using the algorithm specified\n#by the `kind` keyword. It returns an array of indices of the same shape as\n#`a` that index data along the given axis in sorted order.\nnp.argsort(random_array)","235c05ca":"np.argsort(a1)","4454885d":"np.argmin(a2)","b73c2210":"np.argmax(a2)","d8cb1a05":"np.argmax(random_array,axis=0)","2c4063e4":"## Basic Intorduction of Numpy\n\n**We are going to cover following Topics**\n\n1. DataTypes & Attributes\n2. Creating arrays\n3. Viewing arrys & matrices\n4. Manipulating arrays\n    i. Arithmetic\n    ii. Aggregation\n5. Reshaping & Transposing\n6. Dot product\n7. Comparision Operator\n8. Sorting Arrays","c2b4c46b":"## Aggregation\nAggregation = performing the same operation on a number of thing","32a95ea3":"### Arithmetic","233a1434":"## 3. Viewing arrys & matrices","62c23cc0":"## 5. Reshaping & Transposing","f0729ec2":"## Dot product example","35477b48":"## 2. Creating arrays","98a013e6":"## 8. sorting array","4a525364":"## 6. Dot product","afe6626e":"## 1. DataTypes & Attributes","351fbd27":" Use python's method (`sum()`) on python datatypes and use\n Numpy's method on numpy arrays (`np.sum()`) ","0e72afa1":"## 4. Manipulating arrays","ec5e099c":"## 7. comparision Operator"}}