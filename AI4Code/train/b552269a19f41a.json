{"cell_type":{"12611b21":"code","207ab660":"code","bd81bc10":"code","d547df55":"code","ac6b9c40":"code","01bd11f8":"code","6796a601":"code","a713c218":"code","f62b6a16":"code","1b0e9354":"code","da0e3071":"code","8498444e":"code","149229fe":"code","a253108a":"code","dd167a81":"code","e1bb5f49":"code","64856b4b":"code","8fda89fc":"code","4b37a8a5":"code","67e02e80":"code","7e125768":"code","b22a8962":"code","ba28d62b":"code","539a6e58":"code","a0b357d7":"code","a21c5af2":"code","236323fa":"code","f33d9075":"code","b645fbeb":"code","ff8d1432":"code","d106d9c8":"code","08f42191":"code","8ee947a0":"code","bca17f7d":"code","266e5372":"code","7eb7e4fb":"code","32ea6693":"code","1483e011":"code","dca2b364":"code","aaa474d2":"markdown","b49cbb06":"markdown","a98d067e":"markdown","13e8ba47":"markdown","99339ff8":"markdown","fbd4ecaa":"markdown","93729cdc":"markdown","5c6c64ed":"markdown","ce0e673b":"markdown","fae88e0d":"markdown","8196d7e8":"markdown","d6f23308":"markdown","9f484e5f":"markdown","6f6697d9":"markdown","37b67f9a":"markdown","80556ec3":"markdown","7315b462":"markdown","c68da7f9":"markdown","43d5f233":"markdown","d26d4453":"markdown","7baef92e":"markdown","16f7898d":"markdown","ac59ac9c":"markdown","3a208993":"markdown","97a3a414":"markdown","e0a570bc":"markdown","393b0e95":"markdown","e6f40ddd":"markdown","05c97db1":"markdown","2a7381fd":"markdown","b4797350":"markdown","b6650ee0":"markdown","bb6835be":"markdown","2c1014cf":"markdown","25316c80":"markdown","c75bca43":"markdown","90ee01f2":"markdown","a69a4d24":"markdown","5c544097":"markdown"},"source":{"12611b21":"# load necessary packages\nimport warnings\nimport numpy as np\nimport pandas as pd\nimport geopandas\nfrom geopandas import plotting\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\n%matplotlib inline\nplt.rcParams['figure.dpi'] = 110\nplt.rcParams['figure.figsize'] = (16,10)\nwarnings.filterwarnings('ignore')","207ab660":"# Read in the survey data\nsurvey_df = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\nsurvey_df.head()","bd81bc10":"# Looks like we need to remove the first row, which describes each question\ndata_dictionary = dict(survey_df.iloc[0])\nsurvey_df = survey_df.drop([0]).reset_index(drop=True)\nsurvey_df.head()","d547df55":"print(f'The data set consists of {survey_df.shape[0]} respondents and {survey_df.shape[1]} fields')","ac6b9c40":"data_dictionary['Q3']","01bd11f8":"print(f\"There are {survey_df['Q3'].isna().sum()} missing responses for question #3, country of residence.\")","6796a601":"# Read the geopandas dataset, which provides the geometry\/country mappings we'll use\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\nworld.head()","a713c218":"# Let's check if any countries do or don't overlap between\n# the world dataframe and the survey dataframe\nx = set(world['name'].sort_values().tolist())\ny = set(survey_df['Q3'].sort_values())","f62b6a16":"# country names in survey data not found in word dataframe\ny.difference(x)","1b0e9354":"# country names in world dataframe not found in the survey data\nx.difference(y)","da0e3071":"# Change 'United Kingdom of Great Britain and Northern Ireland' to 'United Kingdom'\nsurvey_df.loc[survey_df['Q3'] == 'United Kingdom of Great Britain and Northern Ireland','Q3'] = 'United Kingdom'\nsurvey_df.loc[survey_df['Q3'] == 'Iran, Islamic Republic of...','Q3'] = 'Iran'\nsurvey_df.loc[survey_df['Q3'] == 'Viet Nam','Q3'] = 'Vietnam'","8498444e":"# Next we want to group our respondent count by country\ncountries_df = survey_df['Q3'].value_counts()\ncountries_df = countries_df.to_frame().reset_index()\ncountries_df.columns = ['country','no_of_respondents']","149229fe":"# Let's see the result\ncountries_df.country.value_counts().sum()","a253108a":"# Remove Antarctica since there were no respondents from there\nworld = world[world.name!=\"Antarctica\"]\n\n# Merge the two dataframes together\nmerged_df = world.merge(countries_df, how=\"left\", left_on=['name'], right_on=['country'])\nmerged_df.head()","dd167a81":"# This block is used to resize the legend\nfig, ax = plt.subplots()\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes('right', size='2%', pad=0)\n\n# color all countries with this line, but gets partially overlayed by subsequent plot\nworld.plot(ax=ax,color='lightgrey') \nworld['geometry'].boundary.plot(ax=ax, color='darkgreen', linewidth=.5)\nmerged_df.dropna(subset=['country']).plot(column='no_of_respondents', \n                                          ax=ax, \n                                          cax=cax, \n                                          cmap='YlGnBu', \n                                          legend=True, \n                                          legend_kwds={'fmt': '{:.1f}',\n                                                       'label':'Number of Respondents'})\n\nax.set_title('Geographic Distribution of All Survey Respondents', fontsize=20, color='grey')\nax.set_axis_off()","e1bb5f49":"# Add a column with the percentages of total respondents for each country\ncountries_df['percentage'] = countries_df['no_of_respondents'] \/ countries_df['no_of_respondents'].sum()\ncountries_df.sort_values(by='percentage', ascending=False)","64856b4b":"# Log-scale the number of respondents to see some of the smaller variations in geographic distribution\nmerged_df['log_respondents'] = np.log(merged_df.no_of_respondents)","8fda89fc":"# This block is used to resize the legend\nfig, ax = plt.subplots()\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes('right', size='2%', pad=0)\n\n# color all countries with this line, but gets partially overlayed by subsequent plot\nworld.plot(ax=ax,color='lightgrey') \nworld['geometry'].boundary.plot(ax=ax, color='darkgreen', linewidth=.5)\nmerged_df.dropna(subset=['country']).plot(column='log_respondents', \n                                          ax=ax, \n                                          cax=cax, \n                                          cmap='YlGnBu', \n                                          legend=True, \n                                          legend_kwds={'fmt': '{:.1f}',\n                                                       'label':'Number of Respondents, Log-scaled'})\n\nax.set_title('Geographic Distribution of All Survey Respondents', fontsize=20, color='grey')\nax.set_axis_off()","4b37a8a5":"# plot the twenty countries with the most respondents\nplt.figure(figsize=(6,4), facecolor='white')\nplt.tight_layout()\ncountries_df = survey_df['Q3'].value_counts()\ncountries_df = countries_df[:20].sort_values()\n\n# make a color map with a gradient along the Red\/Green dimensions\ncolors = [(x\/40.0, x\/20.0, 0.3) for x in list(range(len(countries_df)))[::-1]]\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey'}):\n    ax = countries_df.plot(kind='barh', color=colors, alpha=.75)\n    ax.set_xlabel('Number of Respondents',fontsize=12, color='grey', labelpad=10)\n    ax.set_title('Twenty Countries with the Most Respondents', fontsize=15, color='grey', pad=15)\n    ax.set_axisbelow(True)\n    ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.grid(color='lightgray', linestyle='--');","67e02e80":"# plot the twenty countries with the most respondents\nplt.figure(figsize=(6,4), facecolor='white')\nplt.tight_layout()\ncountries_df = survey_df['Q3'].value_counts()\ncountries_df = countries_df[-20:].sort_values()\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey'}):\n    ax = countries_df.plot(kind='barh', color='chartreuse', alpha=.75)\n    ax.set_xlabel('Number of Respondents',fontsize=12, color='grey', labelpad=10)\n    ax.set_title('Twenty Countries with the Fewest Respondents', fontsize=15, color='grey', pad=15)\n    ax.set_axisbelow(True)\n    ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.grid(color='lightgray', linestyle='--');","7e125768":"print(f'There are {survey_df[\"Q20\"].isna().sum()} missing responses for question #20, industry.')","b22a8962":"remaining_na = survey_df[(survey_df['Q5'] != 'Student') & (survey_df['Q5'] != 'Currently not employed')]['Q20'].isna().sum()\nprint('After removing respondents who identify as \"Student\" or \"Currently not employed\"')\nprint(f'the number of missing responses for industry is reduced to {remaining_na}.')","ba28d62b":"# proportion of each industry that represented by the responses\nplt.figure(figsize=(6,4), facecolor='white')\nplt.tight_layout()\nindustry_df = survey_df['Q20'].value_counts()\nindustry_df = industry_df.sort_values()\n\n# make a color map with a gradient along the Red\/Green dimensions\ncolors = [(x\/100.0, x\/24.0, 0.3) for x in list(range(len(industry_df)))[::-1]] \ncolors[15] = (.42, .35, .80) #rgb combo for slateblue\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey'}):\n    ax = industry_df.plot(kind='barh', color=colors, alpha=.75)\n    ax.set_xlabel('Number of Respondents',fontsize=12, color='grey', labelpad=10)\n    ax.set_title('Industries Represented in the Survey', fontsize=15, color='grey', pad=15)\n    ax.set_axisbelow(True)\n    ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.grid(color='lightgray', linestyle='--');","539a6e58":"count_acct = survey_df[survey_df['Q20'] == 'Accounting\/Finance'].shape[0]\nprint(f'{count_acct} respondents are from the Accounting\/Finance industry')","a0b357d7":"# Create a df of just accounting\/finance\ndf_acct = survey_df[survey_df['Q20'] == 'Accounting\/Finance']","a21c5af2":"# Group our accounting and finance professionals count by country and merge with the world df\nacct_geo = df_acct['Q3'].value_counts()\nacct_geo = acct_geo.to_frame().reset_index()\nacct_geo.columns = ['country','no_of_respondents']\nmerged_df_acct = world.merge(acct_geo, how=\"left\", left_on=['name'], right_on=['country'])\n\n# Log-scale the number of respondents to see some of the smaller variations in geographic distribution\nmerged_df_acct['log_respondents'] = np.log(merged_df_acct.no_of_respondents)","236323fa":"# This block is used to resize the legend\nfig, ax = plt.subplots()\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes('right', size='2%', pad=0)\n\n# color all countries with this line, but gets partially overlayed by subsequent plot\nworld.plot(ax=ax,color='lightgrey') \nworld['geometry'].boundary.plot(ax=ax, color='darkgreen', linewidth=.5)\nmerged_df_acct.dropna(subset=['country']).plot(column='log_respondents', \n                                          ax=ax, \n                                          cax=cax, \n                                          cmap='YlGnBu', \n                                          legend=True, \n                                          legend_kwds={'fmt': '{:.1f}',\n                                                       'label':'Number of Respondents, Log-scaled'})\n\nax.set_title('Geographic Distribution of Accounting & Finance Professionals', fontsize=20, color='grey', pad=15)\nax.set_axis_off()","f33d9075":"# Check which respondent countries did not have accounting\/finance representation\nacct_respondent_countries = set(merged_df_acct.dropna(subset=['country'])['country'])\nall_respondent_countries = set(merged_df.dropna(subset=['country'])['country'])\n\nprint(f'Professionals from the Accounting\/Finance industry represent {len(acct_respondent_countries)} different countries\\n')\nprint('The countries that did not have respondents from the Accounting\/Finance industry include:\\n')\nprint(all_respondent_countries.difference(acct_respondent_countries))","b645fbeb":"# Create df with the percentage of respondents from Accounting\/Finance industry for each country\nproportion_acct_df = df_acct['Q3'].value_counts() \/ survey_df['Q3'].value_counts()\nprint('Percentage of respondents in Accounting\/Finance industry by country (top ten):')\nproportion_acct_df.sort_values(ascending=False).head(10)","ff8d1432":"# Plot the twenty countries with the greatest % of respondents from Accounting\/Finance industry\nplt.figure(figsize=(6,4), facecolor='white')\nplt.tight_layout()\nproportion_acct_df = df_acct['Q3'].value_counts() \/ survey_df['Q3'].value_counts()\nproportion_acct_df = proportion_acct_df.sort_values(ascending=False)[:20] * 100\nproportion_acct_df = proportion_acct_df.sort_values()\n\n# make a color map with a gradient along the Red\/Green dimensions\ncolors = [(x\/40.0, x\/20.0, 0.3) for x in list(range(len(proportion_acct_df)))[::-1]]\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey'}):\n    ax = proportion_acct_df.plot(kind='barh', color=colors, alpha=.75)\n    ax.set_title('Twenty Countries Ranked by % of \\n Respondents in Accounting\/Finance Industry', fontsize=15, color='grey', pad=15)\n    fmt = '%.0f%%'\n    xticks = mtick.FormatStrFormatter(fmt)\n    ax.xaxis.set_major_formatter(xticks)\n    ax.set_axisbelow(True)\n    ax.xaxis.grid(color='lightgrey', linestyle='--');","d106d9c8":"# Map the countries by % of respondents from Accounting\/Finance industry\nacct_geo = df_acct['Q3'].value_counts() \/ survey_df['Q3'].value_counts() * 100.0\nacct_geo = acct_geo.to_frame().reset_index()\nacct_geo.columns = ['country','percent_acct']\nmerged_df_acct = world.merge(acct_geo, how=\"left\", left_on=['name'], right_on=['country'])\n\n# This block is used to resize the legend\nfig, ax = plt.subplots()\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes('right', size='2%', pad=0)\n\n# color all countries with this line, but gets partially overlayed by subsequent plot\nworld.plot(ax=ax,color='lightgrey') \nworld['geometry'].boundary.plot(ax=ax, color='darkgreen', linewidth=.5)\nmerged_df_acct.dropna(subset=['country']).plot(column='percent_acct', \n                                          ax=ax, \n                                          cax=cax, \n                                          cmap='YlGnBu', \n                                          legend=True, \n                                          legend_kwds={'format': '%.0f%%'})\n\nax.set_title('Countries by % of Respondents in Accounting\/Finance Industry', fontsize=20, color='grey', pad=15)\nax.set_axis_off()","08f42191":"proportion_acct_df = df_acct['Q3'].value_counts() \/ survey_df['Q3'].value_counts()\nrank_us = proportion_acct_df.sort_values(ascending=False).index.get_loc('United States of America') + 1\nrank_india = proportion_acct_df.sort_values(ascending=False).index.get_loc('India') + 1\nprint(f'India ranks {rank_india} and the USA ranks {rank_us} of the 57 countries with repondents who work\\n'\n        'with machine learning and data science in the Accounting\/Finance industry.')","8ee947a0":"acct_roles = df_acct['Q5'].value_counts() \/ df_acct.shape[0]\nnon_acct_roles = survey_df[(survey_df['Q20'] != 'Accounting\/Finance') & \\\n                           (survey_df['Q5'] != 'Student') & \\\n                           (survey_df['Q5'] != 'Currently not employed')]['Q5'].value_counts()\n\nnon_acct_roles = non_acct_roles \/ non_acct_roles.sum()\n\n# Specify plot parameters\nexplode1 = [0.01 for i in range(acct_roles.shape[0])]\nexplode2 = [0.01 for i in range(non_acct_roles.shape[0])]\nfig, ax = plt.subplots()\n\n# Plot roles amount accounting and finance\nplt.figure(0)\nax = acct_roles.plot.pie(figsize=(8,6), cmap='ocean', explode=explode1, fontsize=10, autopct='%.0f%%', \n                textprops={'color':'silver','weight':'bold'}, shadow=True)\nax.set_title('Roles of Accounting & Finance \\n Professionals Working With Data', color='grey', fontsize=15)\nax.set_ylabel('')\n\n# Plot roles among non-acct, non-finance\nplt.figure(1)\nax = non_acct_roles.plot.pie(figsize=(8,6), cmap='ocean', explode=explode2, fontsize=10, autopct='%.0f%%', \n                textprops={'color':'silver','weight':'bold'}, shadow=True)\nax.set_title('Roles of All Other \\n Professionals Working With Data', color='grey', fontsize=15)\nax.set_ylabel('');","bca17f7d":"# Define a function to help aggregate multi-selection survey question responses\ndef agg_multi_response(df, question_parts):\n    '''\n    Function to aggregate the responses from multiple selection survey questions\n    \n    Input Params:\n        [1] df - pandas Dataframe, containing columns for each of the expanded multiple selection questions\n        [2] question_parts - list, containing strings for the column headers of the expanded multiple selection questions\n        \n    Outputs:\n        [1] result - pandas Series, containing index (row) for each option from the multiple selection question\n                     and values counts for each index\n    '''\n    result = {f'{list(dict(df[q].value_counts()))[0]}':f'{list(df[q].value_counts())[0]}' for q in question_parts}\n    result = pd.DataFrame([result]).T\n    result = pd.to_numeric(result[0])\n    return result","266e5372":"prog_langs = ['Q7_Part_1', 'Q7_Part_2', 'Q7_Part_3', 'Q7_Part_4','Q7_Part_5', 'Q7_Part_6', 'Q7_Part_7', \n             'Q7_Part_8', 'Q7_Part_9','Q7_Part_10', 'Q7_Part_11', 'Q7_Part_12', 'Q7_OTHER']\n\nacct_langs = agg_multi_response(df_acct, prog_langs)\nacct_langs = acct_langs \/ acct_langs.sum() * 100\n\nnon_acct_df = survey_df[(survey_df['Q20'] != 'Accounting\/Finance') & \\\n                           (survey_df['Q5'] != 'Student') & \\\n                           (survey_df['Q5'] != 'Currently not employed')]\n\nnon_acct_langs = agg_multi_response(non_acct_df, prog_langs)\nnon_acct_langs = non_acct_langs \/ non_acct_langs.sum() * 100\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey', 'figure.facecolor':'white'}):\n    ax = acct_langs.sort_values().plot(kind='barh',figsize=(6,4), fontsize=10, color='slateblue', alpha=.75, label='Accounting\/Finance', stacked=True)\n    ax.barh(y=non_acct_langs.index, width=non_acct_langs.sort_values(), color='orangered', label='Other Industries', alpha=.4)\n    ax.set_title('Programming Languages Used By All Respondents', fontsize=15, color='grey', pad=15)\n    ax.set_xlabel('% of Respondents', fontsize=15, color='grey', labelpad=15)\n    ax.set_ylabel('')\n    ax.legend(frameon=False, labelcolor='grey')\n    ax.set_axisbelow(True)\n    fmt = '%.0f%%'\n    xticks = mtick.FormatStrFormatter(fmt)\n    ax.xaxis.set_major_formatter(xticks)\n    ax.xaxis.grid(color='lightgray', linestyle='--');","7eb7e4fb":"methods = ['Q17_Part_1','Q17_Part_2', 'Q17_Part_3', 'Q17_Part_4', 'Q17_Part_5','Q17_Part_6', \n        'Q17_Part_7', 'Q17_Part_8', 'Q17_Part_9','Q17_Part_10', 'Q17_Part_11', 'Q17_OTHER']\n\nacct_methods = agg_multi_response(df_acct, methods)\nacct_methods = acct_methods \/ acct_methods.sum() * 100\n\nnon_acct_methods = agg_multi_response(non_acct_df, methods)\nnon_acct_methods = non_acct_methods \/ non_acct_methods.sum() * 100\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey','figure.facecolor':'white'}):\n    ax = acct_methods.sort_values().plot(kind='barh',figsize=(6,4), fontsize=10, color='slateblue', alpha=.75, label='Accounting\/Finance', stacked=True)\n    ax.barh(y=non_acct_methods.index, width=non_acct_methods.sort_values(), color='orangered', label='Other Industries', alpha=.4)\n    ax.set_title('Algorithms Used By All Respondents', fontsize=15, color='grey', pad=15)\n    ax.set_xlabel('% of Respondents', fontsize=15, color='grey', labelpad=15)\n    ax.set_ylabel('')\n    ax.legend(frameon=False, labelcolor='grey')\n    ax.set_axisbelow(True)\n    fmt = '%.0f%%'\n    xticks = mtick.FormatStrFormatter(fmt)\n    ax.xaxis.set_major_formatter(xticks)\n    ax.xaxis.grid(color='lightgray', linestyle='--');","32ea6693":"gender_df = survey_df['Q2'].value_counts()\n\n# make a color map with a gradient along the Red\/Green dimensions\ncolors = [(x\/40.0, x\/20.0, 0.3) for x in range(len(gender_df))]\n\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey', 'figure.facecolor':'white'}):\n    ax = gender_df.sort_values().plot(kind='barh',figsize=(6,4), cmap='ocean', fontsize=10, color=colors, alpha=.75)\n    ax.set_title('Gender Profile of All Survey Respondents', fontsize=15, color='grey', pad=15)\n    ax.set_xlabel('Number of Respondents', fontsize=15, color='grey', labelpad=15)\n    ax.set_ylabel('')\n    ax.set_axisbelow(True)\n    ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.grid(color='lightgray', linestyle='--');","1483e011":"# Percentage of respondents by gender\ngender_df \/ gender_df.sum()","dca2b364":"# filter the data to see how accounting\/finance industry compares to other industries in representation \n# of repsondents that identified as woman or non-binary in repsonse to the question of gender\n\ndsdf = survey_df[survey_df['Q5']=='Data Scientist']\ngender_series = dsdf.groupby(['Q20'])['Q2'].value_counts() \/ dsdf.groupby(['Q20'])['Q2'].count() * 100\ngender_series = gender_series.unstack().drop('Man', axis=1).sum(axis=1).sort_values()\n\ncolors = [(x\/100.0, x\/24.0, 0.3) for x in list(range(len(gender_series)))[::-1]]\ncolors[4] = (.42, .35, .80) #rgb combo for slateblue\n\n# plot data\nwith plt.rc_context({'axes.edgecolor':'grey', 'xtick.color':'grey', 'ytick.color':'grey', 'figure.facecolor':'white'}):\n    fig, ax = plt.subplots(figsize=(7,5))\n    fig.tight_layout()\n    ax = gender_series.plot(kind='barh', fontsize=15, color=colors, alpha=.75)\n    ax.set_ylabel('')\n    ax.set_title('Industries Ranked by % of Respondents Who Identify as\\n\\\n    Woman, Non-Binary, Etc. in the Data Science Role', color='grey', fontsize=15, pad=15)\n    fmt = '%.0f%%'\n    xticks = mtick.FormatStrFormatter(fmt)\n    ax.xaxis.set_major_formatter(xticks)\n    ax.set_axisbelow(True)\n    ax.xaxis.grid(color='lightgray', linestyle='--');","aaa474d2":"### As we can see, while individuals who identify as woman, non-binary, etc. are underrepresented overall, this is especially true for Accounting\/Finance professionals in the Data Science role, ranking at 14 among the 18 industry categories. There is still a lot more work to be done to achieve gender equality for Data Scientists in the Accounting\/Finance industry.","b49cbb06":"### In this notebook we looked at the 2021 Kaggle Machine Learning & Data Science Survey results and highlighted professionals in the Accounting\/Finance industry, the third largest industry group represented in the survey.\n\n### We learned that this subset of data science and machine learning practitioners represent 57 countries and work primarily in the role of Data Scientist, Data Analyst and Business Analyst. These individuals tend to use Python and SQL more than other programming languages and apply regression and tree-based algorithms more than neural networks or transformers. It would be interesting to know the specific use cases behind these applications.\n\n### This reflects the direction the industry is headed. Whether you are in public accounting or work in industry as an accountant or finance professional, if you have yet to explore these tools and techniques, I strongly encourage you to check them out and follow your curiosity.\n\n### Our final key take away is that in terms of gender representation the Accounting\/Finance industry ranks relatively low (14 of 18) compared to other industries in the % of Data Scientists who identify as Woman, Non-binary, Preferred to self-describe and Preferred not to say. This highlights the persistent lack of gender equality for the role of Data Scientist within the Accounting\/Finance profession. It is our role as professionals in this field to change this so the full spectrum of identities can meaningfully participate.\n\n### While these findings are observational and limited to the respondents of the Kaggle survey, they do provide a glimpse into the state of the industry.","a98d067e":"#### If we compare the country listings we can see that our survey data does contain Iran, UK and Vietnam, but they are spelled differently than in the world dataframe. Let's change these so they are the same as the world dataframe.","13e8ba47":"## Welcome! In this notebook we will explore the results of the 2021 Kaggle Machine Learning (ML) & Data Science (DS) Survey.\n\n#### Every year since 2017, Kaggle has conducted its annual ML and DS survey, an  industry-wide pulse of practitioners of machine learning and data science. The survey asks respondents a variety of questions about their age, gender, country of residence, role and algorithms of choice, to name a few. \n\n#### This survey is publicly available for analysis and a competition is held annually to showcase participants data storytelling skills using the survey data. The 2021 survey was live from 9\/1\/2021 to 10\/04\/2021 and includes responses from 25,973 individuals from 171 countries and territories!\n\n## Step 1: Business Understanding\n\n#### As we dive into the data, we'll focus on the following questions:\n- Which countries had respondents from the Accounting\/Finance industry? How do these countries rank in their respective percentage of respondents who work in the Accounting\/Finance indstry?\n-  What ML and DS roles do accounting and finance professionals work in? What programming languages do they prefer and what algorithms are most popular?\n- What is the gender profile of all survey respondents and how does the Accounting\/Finance industry rank among all other industries in the percentage of respondents who identify as woman, non-binary or something else?\n\n#### A final note before we proceed: As we will see, the data used in this observational analysis is limited to the respondents of the Kaggle survey, is demonstrably skewed and may not be representative of data scientists in the Accounting\/Finance industry overall. Nonetheless, it may provide some insight into this cross-section of the professions.\n\n### With that, let's begin!","99339ff8":"### How do countries rank in the percentage of respondents in the Accounting\/Finance industry?","fbd4ecaa":"### Which countries had respondents in the Accounting\/Finance industry?","93729cdc":"### Which twenty countries had the most survey respondents?","5c6c64ed":"#### Looking at this data this way, we are able to see a different perspective. The top five countries with the highest respective percentage of respondents who are machine learning and data science practitioners in the Accounting\/Finance industry are:\n\n1. Poland (13.24%)\n2. Romania (13.11%)\n3. Switzerland (12.68%)\n4. Hong Kong (S.A.R.) (12.66%)\n5. Argentina (11.54%)\n\n#### The United State of America ranks 20th at 7.17%, while India ranks 46th at 3.96% in this regard.","ce0e673b":"#### Let's check for missing responses for question #20, \"In what industry is your current employer\/contract (or your most recent employer if retired)?\"","fae88e0d":"####  India had the largest share of respondents at 28.62%, with the next largest group (10.20%) responding from the United States of America. Let's map the log-scaled number of respondents so that we can see the smaller variations in geographic distribution that are hard to see at this scale.","8196d7e8":"## Step 2: Data Understanding & Preparation","d6f23308":"### Next we will merge the countries dataframe with the world dataframe to use the geometry mappings","9f484e5f":"### What programming languages do accounting and finance professionals use?","6f6697d9":"## Step 4: Evaluate the Results","37b67f9a":"## Step 3: Analysis and Visualization","80556ec3":"#### Let's see how many of these missing responses for industry are explained by the respondent identifying as \"Student\" or \"Currently not employed\"","7315b462":"#### After log-scaling we can see that after India and the U.S.A, the countries that follow in number of respondents are Brazil, Russia, China, Japan, UK, Nigeria, Egypt, and Pakistan. We could also look at this using a bar plot.","c68da7f9":"### Let's begin by looking at the geographic distribution of the respondents","43d5f233":"### Which industries are represented by survey respondents? How many are from Accounting\/Finance?","d26d4453":"#### Per the Kaggle survey methodology documentation, \"Responses to multiple selection questions (multiple choices can be selected) were split into multiple columns (with one column per answer choice).\" Thus, to use this data we will need to aggregate the instances of each question part to quantify use of programming languages. We will define a function here to do that. We'll also use this function to analyze the following question regarding algorithms used by respondents.","7baef92e":"#### This is unexpected. According the Kaggle survey methodology documentation 171 countries and territories were represented in this survey and we only show 66 countries. If we look at the methodology documentation Kaggle provides separately from this data set, we find that this is explained by the fact that the Kaggle survey administrators grouped countries and territories together in an \"Other\" category if there were fewer than 50 respondents from a given country. This is done to help preserve anonymity.","16f7898d":"### What algorithms are accounting and finance professionals using?","ac59ac9c":"### Let's see what this looks like on the map:","3a208993":"#### Notice the \"country\" column that we merged these two dataframes on. We can see that this column contains \"Not A Number\" (NaN) values. This is because we did a left join of the two dataframes with the world dataframe on the left. In other words, we kept the all values in the \"name\" column of the world dataframe and included any values also in the \"country\" column of the countries_df (survey data), padding with NaN where \"name\" did not also appear in the \"country\" column. \n\n#### For example, looking above, the country of Tanzania is in the world dataframe, but there were no survey respondents from Tanzania, so the merge operation imputes a NaN. We can simply drop these NaNs in the chloropleth plot below because they do not exist in our source data. Furthermore, we identify these countries that did not have respondents with the region being colored grey.","97a3a414":"### Python and SQL are the most popular languages amount accounting and finance professionals and are used more in this industry than in others. R, Java and Javascript are the next most popular. It would be interesting to know how these respondents apply these languages in practice. Let's see if the algorithms of choice provide us with any insight in this regard:","e0a570bc":"### Now let's take a look at gender. What is the gender profile of all respondents?","393b0e95":"### Accounting and finance professionals utilize a a wide range of algorithms, with regression, tree-based, and gradient boosting techniques being used more in this industry than others. Even more sophisticated techniques like neural networks and transformers are being used in this industry.\n\n### As a professional working in public accounting, I am surprised to see this as these are not techniques that I would think are widely applied in our industry. However, my sense is that this is changing.","e6f40ddd":"#### Notice the \"country\" column that we merged these two dataframes on. We can see that this column contains \"Not A Number\" (NaN) values. This is because we did a left join of the two dataframes with the world dataframe on the left. In other words, we kept the all values in the \"name\" column of the world dataframe and included any values also in the \"country\" column of the countries_df (survey data), padding with NaN where \"name\" did not also appear in the \"country\" column. For example, looking above, the country of Tanzania is in the world dataframe, but there were no survey respondents from Tanzania, so the merge operation imputes a NaN. We can simply drop these NaNs in the chloropleth plot below because they do not exist in our source data. Furthermore, we identify these countries that did not have respondents with the region being colored grey.","05c97db1":"#### Notice that 8790 of the 9648 missing values (91%) for industry of employment are explained by respondents who are students or currently not employed. This is logical. It is worth noting that the value_counts() method used here and throughout this notebook automatically excludes observations that are NaN or missing. \n\n#### As previously mentioned, if there are missing measurements on a feature we wish to use to train a model, we would need to consider dropping or imputing values. However, in this notebook we are only concerned with exploring the available responses rather than learning a model. For this reason, we believe it is justified to ignore observations with missing values for a given variable of interest, be it industry, programming language, algorithms, or gender.","2a7381fd":"### What are the roles of accounting and finance professionals working with data? How does this compare to all other industries?","b4797350":"#### Great, all survey participants responded with their country of residence. If there were missing entries for country and we wished to use that as one of our predictors in a trained model, we would have to consider dropping or imputing values.","b6650ee0":"### What about the twenty countries with the least respondents?","bb6835be":"#### Let's check for missing data with regard to question #3: \"In which country do you currently reside?\"","2c1014cf":"#### It is encouraging to see that accounting and finance professionals work with data in a variety of roles, with the top three being Data Scientist, Data Analyst and Business Analyst. What might be surprising is that this range of roles also includes Software Engineer, Data Engineer and Machine Learning Engineer. \n\n#### Are these the roles you typically think of when you think of accounting or finance? It seems this is the direction the industry is headed.\n\n#### The second pie plot above represents the proportion of roles held by all other respondents outside of the Accounting\/Finance industry. Perhaps the most pronounced difference is that Software Engineer, Research Scientist and Machine Learning Engineer are less common roles among accounting and finance professionals. Not surprisingly, Business Analyst is more common among them.","25316c80":"### How do the industries rank in terms of percentage of respondents who identify as 'Woman', 'Non-Binary', 'Prefer to self-describe' and 'Prefer not to say' who are also working in the Data Science role?","c75bca43":"### What countries are represented in this survey?","90ee01f2":"### The survey respondents are overwhelmingly individuals who identify as 'Man', which represent ~80% of respondents. This is consistent with the ongoing issue of the gender gap experienced across a ride variety of disciplines and professions related to Science, Technology, Math and Engineering (STEM).","a69a4d24":"#### It looks like there are finance and accounting professionals from apparently all but a few countries that had respondents to the survey. Specifically, with the code below we can see Ecuador, Iraq, Norway and Saudi Arabia were the only countries with survey respondents not from the Accounting\/Finance industry:","5c544097":"#### We can see that respondents in the Accounting\/Finance industry are the third largest group from the survey, comprised of 1,459 respondents. Let's take a closer look at this population within the survey data. We could start by plotting the geographic distribution of accounting and finance professionals."}}