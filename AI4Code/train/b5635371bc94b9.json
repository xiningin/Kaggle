{"cell_type":{"0b47e4dd":"code","6f6cb9d8":"code","cb969f73":"code","f749dbb1":"code","a8bfa635":"code","1976e218":"code","e7c28ef9":"code","3163172f":"code","7eb7303f":"code","4ff86841":"code","93aa411a":"markdown","eda4edf7":"markdown"},"source":{"0b47e4dd":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\npd.set_option('display.max_columns', 99)\npd.set_option('display.max_rows', 99)\nfrom tqdm import tqdm\nimport plotly.express as px\nimport plotly.subplots as subplots\nimport plotly.graph_objects as go\nimport seaborn as sns\nimport os\nimport matplotlib.pyplot as plt\nfrom PIL import Image\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\ninit_notebook_mode(connected=True)","6f6cb9d8":"comps = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Competitions.csv')\ncols = ['Id', 'Title', 'EnabledDate', 'DeadlineDate', 'FinalLeaderboardHasBeenVerified',\n        'EvaluationAlgorithmName', 'RewardType', 'UserRankMultiplier', 'CanQualifyTiers', 'TotalTeams',\n       'TotalCompetitors', 'TotalSubmissions']\ncomps = comps[cols]\ncomps = comps[comps.Title.str.match('covid.+global forecasting', case=False)]\nteams = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Teams.csv',  low_memory=False)\ntm = pd.read_csv('\/kaggle\/input\/meta-kaggle\/TeamMemberships.csv',  low_memory=False)\nusers = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Users.csv',  low_memory=False)","cb969f73":"comps","f749dbb1":"comps.DeadlineDate = pd.to_datetime(comps.DeadlineDate)\nfig = px.bar(comps, x='DeadlineDate', y='TotalTeams', color='Title',\n             title='Covid19 Global Forecasting Competitions - Total Teams')\nfig.show()","a8bfa635":"combined = teams.loc[teams.CompetitionId.isin(comps.Id), ['Id', 'CompetitionId', 'TeamName', 'PrivateLeaderboardRank']].copy()\ncombined = combined.merge(tm[[ 'TeamId', 'UserId']], left_on='Id', right_on='TeamId' )\ncombined = combined.merge(users[['Id', 'UserName', 'DisplayName']], left_on='UserId', right_on='Id',suffixes=['Team', 'User'])\n\nteam_size = combined.groupby('TeamId')[['UserId']].nunique().reset_index()\nteam_size.columns = ['TeamId', 'TeamSize']\ncombined = combined.merge(team_size, on='TeamId')\ncombined = combined.merge(comps[['Id', 'Title', 'UserRankMultiplier', 'TotalTeams']], left_on='CompetitionId', right_on='Id')\ncombined = combined.dropna()\ncombined.shape\ncombined.head()","1976e218":"pil_im = Image.open('\/kaggle\/input\/covid19belugaw5\/PointsFormula.png', 'r')\nfig, ax = plt.subplots(figsize=(20, 5))\nplt.axis('off')\nax.imshow(np.asarray(pil_im))\nplt.show();","e7c28ef9":"combined['KagglePoints'] = combined.UserRankMultiplier * 10**5 \/ np.sqrt(combined.TeamSize) * combined.PrivateLeaderboardRank ** (-0.75) * np.log10(1 + np.log10(combined.TotalTeams))\ncombined.KagglePoints = combined.KagglePoints.astype(int)\n","3163172f":"top = combined.groupby('DisplayName')[['KagglePoints']].sum().sort_values(by='KagglePoints', ascending=False).head(20).reset_index()\n\nfig = px.bar(top, x='DisplayName', y='KagglePoints')\n_ = fig.update_layout(title='Covid19 Global Forecasting Competitions - Total Points')\nfig.show()","7eb7303f":"ranks = combined.loc[\n    combined.DisplayName.isin(top.DisplayName),\n    ['DisplayName', 'Title', 'PrivateLeaderboardRank']\n].pivot('DisplayName', 'Title', 'PrivateLeaderboardRank')\nranks.columns = [c.split('(')[-1][:-1] for c in ranks.columns]\nranks.loc[top.DisplayName].style.background_gradient(cmap='viridis_r').set_precision(0)","4ff86841":"weekly_points = combined.loc[\n    combined.DisplayName.isin(top.DisplayName),\n    ['DisplayName', 'Title', 'KagglePoints']\n].pivot('DisplayName', 'Title', 'KagglePoints').fillna(0).round(0)\nweekly_points = weekly_points.loc[top.DisplayName].astype(int)\nweekly_points.columns = [c.split('(')[-1][:-1] for c in weekly_points.columns]\ncm = sns.light_palette(\"blue\", as_cmap=True)\nweekly_points.style.background_gradient(cmap=cm)","93aa411a":"# Points","eda4edf7":"# Rankings"}}