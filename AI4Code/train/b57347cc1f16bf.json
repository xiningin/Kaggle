{"cell_type":{"cdef8773":"code","8b204509":"code","8e141db1":"code","82dadbf1":"code","8a10e956":"code","49266b1f":"code","a0f6c120":"code","42d47044":"code","127bdc56":"code","7323b46a":"code","526e1e1d":"code","0311d80f":"code","f19aac81":"code","d658e581":"code","6220877c":"code","f4c5b542":"code","20c1fad8":"code","fcab0c05":"code","09d9014d":"code","43e45bdc":"code","cc74e96a":"code","2c4d967e":"code","331d59da":"code","158fe0ee":"code","89f2cc51":"markdown","df6ce742":"markdown","87b8b91d":"markdown","09910f8a":"markdown","f596c626":"markdown","4f0dfda3":"markdown","dfbc7c8a":"markdown","1bfd98c1":"markdown","726e714a":"markdown","faf9bc20":"markdown","038fe8e6":"markdown","971598a5":"markdown","ccaa050b":"markdown"},"source":{"cdef8773":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b204509":"df=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","8e141db1":"df.head()","82dadbf1":"len(df.columns)","8a10e956":"#Features with NaN values\nfeaturena=[fea for fea in df.columns if df[fea].isnull().sum()>1]","49266b1f":"len(featurena)","a0f6c120":"for i in featurena:\n    print(i,np.round(df[i].isnull().mean(),4),\"% of missing values\")","42d47044":"sns.heatmap(df.isnull(),xticklabels='auto',yticklabels=False)","127bdc56":"data=df.copy()\nfor feature in featurena:\n    data[feature]=np.where(data[feature].isnull(),1,0)\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.title(feature)\n    plt.show()","7323b46a":"numfeature=[fea for fea in df.columns if df[fea].dtype!='O']\ndf[numfeature].head()","526e1e1d":"yrfeature=[fea for fea in numfeature if 'Yr' in fea or 'Year' in fea]\nprint(yrfeature)","0311d80f":"df.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('YrSold')\nplt.ylabel('Sales Price')","f19aac81":"for fea in yrfeature:\n    plt.scatter(df[fea],df['SalePrice'])\n    plt.xlabel(fea)\n    plt.ylabel('Sales Price')\n    plt.show()","d658e581":"discretefea=[fea for fea in numfeature if len(df[fea].unique())<25 and fea not in yrfeature and ['Id']]\ndiscretefea\n","6220877c":"print(len(discretefea))","f4c5b542":"for fea in discretefea:\n    df.groupby(fea)['SalePrice'].median().plot.bar()\n    plt.xlabel(fea)\n    plt.ylabel('Sales Price')\n    plt.show()","20c1fad8":"confea=[fea for fea in numfeature if fea not in discretefea+yrfeature+['Id']]\nconfea","fcab0c05":"print(len(confea))","09d9014d":"for fea in confea:\n    df[fea].hist(bins=25)\n    plt.xlabel(fea)\n    plt.ylabel('Count')\n    plt.show()","43e45bdc":"#dat=df.copy()\nfor fea in confea:\n    dat=df.copy()\n    if 0 in df[fea].unique():\n        pass\n    else:\n        dat[fea]=np.log(dat[fea])\n        dat['SalePrice']=np.log(dat['SalePrice'])\n        plt.scatter(dat[fea],dat['SalePrice'])\n        plt.xlabel(fea)\n        plt.ylabel('Sales Price')\n        plt.show()","cc74e96a":"for fea in confea:\n    dat=df.copy()\n    if 0 in dat[fea].unique():\n        pass\n    else:\n        dat[fea]=np.log(dat[fea])\n        dat['SalePrice']=np.log(dat['SalePrice'])\n        dat.boxplot(column=fea)\n        plt.ylabel(fea)\n        plt.show()","2c4d967e":"catfeature=[fea for fea in df.columns if df[fea].dtype=='O']\nprint(len(catfeature))","331d59da":"for fea in catfeature:\n    print('The no of categories in {} feature is {} '.format(fea,len(df[fea].unique())))","158fe0ee":"for fea in catfeature:\n    dat=df.copy()\n    df.groupby(fea)['SalePrice'].median().plot.bar()\n    plt.xlabel(fea)\n    plt.ylabel('Sales Price')\n    plt.show()","89f2cc51":"# Categorical Feature****","df6ce742":"# Continuous variables****","87b8b91d":"**From the above diagrams we can see that many of the features are not in gaussian form and some are in bell curve and some in skewed form.For regression problems we have to conver the features in gaussian form**","09910f8a":"**From the above figures we can say that the houses of recent years have higher prices**","f596c626":"# **Life Cycle of Data Science Project******\n* Data Analysis\n* Feature Engineering\n* Feature Selection\n* Model Creation\n* Model Deployment","4f0dfda3":"# Data Analysis****\n* Missing Values\n* Numerical values\n* Distribution of numerical values\n* Categorical values\n* Cardinality of categorical values\n* Outliers\n* Relationship between variables","dfbc7c8a":"We are going to take only the discrete features","1bfd98c1":"The above graph shows the distribution of null values of each variables","726e714a":"# Outliers****","faf9bc20":"We are goint to replace the null values with 1 and non null with 0.","038fe8e6":"***Here we get the numerical features and there some of the year variables also included,We have to detect that*","971598a5":"From the above figure we can get the relationship of sales price with various variables.Here the overall quality gives the exponential growth with sales price","ccaa050b":"**From the above figure we can say that the null values (1) have greater impact in some features.So we have to replace the null values with some useful treatment**"}}