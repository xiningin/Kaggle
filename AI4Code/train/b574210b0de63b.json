{"cell_type":{"5ccab928":"code","3fb05113":"code","208d459b":"code","68f0334e":"code","3025acc9":"code","99741d17":"code","b4d7eeaa":"code","ea71d301":"code","fc3aedac":"code","399f693f":"markdown","25f5390e":"markdown","66e47ae6":"markdown","f06ea5da":"markdown"},"source":{"5ccab928":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# import os\nimport pydicom\nfrom glob import glob\nfrom tqdm.notebook import tqdm\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\n# import matplotlib.pyplot as plt\n# from skimage import exposure\n# import cv2\nimport warnings\nwarnings.filterwarnings('ignore')","3fb05113":"def dicom2array(path, voi_lut=True, fix_monochrome=True):\n    dicom = pydicom.read_file(path)\n    # VOI LUT (if available by DICOM device) is used to\n    # transform raw DICOM data to \"human-friendly\" view\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n    return data ","208d459b":"def get_width_height(dicom_paths):\n    w_h = pd.DataFrame(columns=['id', 'height', 'width'])\n    for path in tqdm(dicom_paths):\n        img = dicom2array(path)\n        temp = path[61:93]\n        temp_df = {'id':temp , 'height':img.shape[0] , 'width':img.shape[1]}\n#         print(temp_df)\n        w_h = w_h.append(temp_df , ignore_index=True)\n#    print(w_h)\n    return w_h","68f0334e":"dataset_dir = '..\/input\/vinbigdata-chest-xray-abnormalities-detection'\ndicom_paths = glob(f'{dataset_dir}\/train\/*.dicom')\n#dicom_paths[0][61:93]  # \u4ece\u6587\u4ef6\u5939\u4fe1\u606f\u83b7\u53d6\u7247\u5b50\u7684id","3025acc9":"%%time\n# w = get_width_height(dicom_paths[:15])\nw = get_width_height(dicom_paths)\nw.head(10)","99741d17":"w.shape","b4d7eeaa":"w.to_csv('.\/width_height.csv')","ea71d301":"s = pd.read_csv('.\/width_height.csv',index_col = 0)","fc3aedac":"s.shape","399f693f":"### \u2193Refer [here](https:\/\/www.kaggle.com\/trungthanhnguyen0502\/eda-vinbigdata-chest-x-ray-abnormalities) ","25f5390e":"Maybe useful","66e47ae6":"### \u2193Take about **`5.5`** hours.","f06ea5da":"## But this way to get width and height maybe cause loss of information from **`.dicom`**.\n## To be verified..."}}