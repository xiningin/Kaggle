{"cell_type":{"6c4620e9":"code","9dc690cd":"code","25c1db91":"code","19073e0a":"code","d4f6aea1":"code","ea6cccbc":"code","52d73d1b":"code","96569656":"code","d41f64bd":"code","e505b357":"code","53ef1490":"code","6542354d":"code","7bbaa276":"code","96654174":"code","6e0903e8":"code","ea5b5906":"code","e2794748":"code","279058a4":"code","a33dc3ba":"code","bf6f363d":"code","5ed59506":"code","657afaaf":"code","684d9826":"markdown","7ddbfd6a":"markdown","f222b1e9":"markdown","5a063cee":"markdown","3da05dbb":"markdown","62b37c36":"markdown","dd41fa02":"markdown","05ba8012":"markdown","b7449205":"markdown","fccfa259":"markdown","82a907a2":"markdown","4ec7ce4e":"markdown","c7ed84a3":"markdown","9c074e6d":"markdown","69cf6c3f":"markdown","5dd5beaf":"markdown","2da19bf5":"markdown"},"source":{"6c4620e9":"from IPython.display import display, HTML\n\nCSS = \"\"\"\n.output {\n    flex-direction: row;\n}\n\"\"\"\nHTML('<style>{}<\/style>'.format(CSS))","9dc690cd":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.rcParams['font.family'] = 'IPAexGothic'\n\n\ntrain = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/sample_submission.csv')","25c1db91":"# import pandas_profiling as pdp\n\n# pdp.ProfileReport(train)","19073e0a":"train","d4f6aea1":"train['date'] = pd.to_datetime(train['date'])\ntest['date'] = pd.to_datetime(test['date'])","ea6cccbc":"train.describe(include='O')","52d73d1b":"for col in ['country', 'store', 'product']:\n    print(col, train[col].unique())","96569656":"print(\"train\u30c7\u30fc\u30bf\u306e\u671f\u9593 : \", train['date'].min(), train['date'].max())\nprint(\"test\u30c7\u30fc\u30bf\u306e\u671f\u9593 : \", test['date'].min(), test['date'].max())","d41f64bd":"for col in ['country', 'store', 'product']:\n    display(pd.DataFrame(train[col].value_counts()))","e505b357":"for col in ['country', 'store', 'product']:\n    display(pd.DataFrame(test[col].value_counts()))","53ef1490":"train_date = train.set_index('date').pivot(columns=['country', 'store', 'product'], values='num_sold')\ntrain_date.head()","6542354d":"train_month = train.set_index('date').groupby([pd.Grouper(freq='M'), 'country', 'store', 'product'])['num_sold'].mean().unstack([1, 2, 3])\ntrain_month_country = train.set_index('date').groupby([pd.Grouper(freq='M'), 'country'])['num_sold'].mean().unstack()\ntrain_month.head()","7bbaa276":"fig, ax = plt.subplots(1, 1, figsize=(12, 7))\ntrain_monthly = train.set_index('date').groupby([pd.Grouper(freq='M')])[['num_sold']].mean()\n\nsns.lineplot(x='date', y='num_sold', data=train, ax=ax, label='daily')\nsns.lineplot(x='date', y='num_sold', data=train_monthly, ax=ax, label='monthly_mean', color='black')\nax.set_title('Monthly Trend', fontsize=20, fontweight='bold', loc='left', y=1.03)\nax.grid(alpha=0.5)\nax.legend()\nplt.show()","96654174":"fig, ax = plt.subplots(1, 1, figsize=(12, 7))\ntrain_month_country = train.set_index('date').groupby([pd.Grouper(freq='M'), 'country'])[['num_sold']].mean()\nsns.lineplot(x='date', y='num_sold', hue='country', data=train_month_country, ax=ax)\n\nax.set_ylabel('num_sold')\nax.set_title('Monthly Trend by Country', fontsize=15, fontweight='bold', loc='left', y=1.03)\nax.grid(alpha=0.5)\nax.legend()\nplt.show()","6e0903e8":"train['dayofweek'] = train['date'].dt.dayofweek\ntest['dayofweek'] = test['date'].dt.dayofweek","ea5b5906":"fig, ax = plt.subplots(1, 1, figsize=(12, 7))\ntrain_dayofweek = train.set_index('date').groupby([pd.Grouper(freq='M'), 'dayofweek'])[['num_sold']].mean()\n\nsns.lineplot(x='date', y='num_sold', hue='dayofweek', data=train_dayofweek, ax=ax, palette='deep')\nax.set_title('Trend day of week', fontsize=15, fontweight='bold', loc='left')\nax.grid(alpha=0.5)\nplt.show()\n","e2794748":"train['weekend'] = train['dayofweek'].apply(lambda x: x>=5)\nfig, ax = plt.subplots(1, 1, figsize=(12, 7))\ntrain_weekend = train.set_index('date').groupby([pd.Grouper(freq='M'), 'weekend'])[['num_sold']].mean()\n\nsns.lineplot(x='date', y='num_sold', hue='weekend', data=train_weekend, ax=ax)\nax.set_title('Weekend vs Weekday Trend Comparison', fontsize=15, fontweight='bold', loc='left')\nax.grid(alpha=0.5)\nplt.show()","279058a4":"fig, ax = plt.subplots(figsize=(12, 9))\ncountry_dayofweek = pd.pivot_table(train, index='country', columns='dayofweek', values='num_sold', aggfunc=np.mean)\ncountry_dayofweek = pd.DataFrame(country_dayofweek.divide(country_dayofweek.sum(axis=1), axis=0).unstack()).reset_index(level=[0,1])\ncountry_dayofweek.rename(columns={0:'num_sold'}, inplace=True)\n# country_dayofweek.reset_index(level=[0,1])\nsns.barplot(x='dayofweek', y='num_sold', hue='country',data=country_dayofweek, ax=ax)\nax.grid(axis='y',alpha=0.5, )\nax.set_xticklabels(['MON', 'TUE', 'WED','THU','FRI','SAT','SUN'])\nax.set_title('Percentage by day of the week by country', fontsize=15, fontweight='bold', loc='left')\nplt.show()","a33dc3ba":"country_product = pd.pivot_table(train, index='country', columns='product', values='num_sold', aggfunc=np.mean)\ncountry_product.divide(country_product.sum(axis=1), axis=0)","bf6f363d":"country_product_dayofweek = pd.pivot_table(train, index='dayofweek', columns='product', values='num_sold', aggfunc=np.mean)\ncountry_product_dayofweek.divide(country_product_dayofweek.sum(axis=1), axis=0)","5ed59506":"!pip install -qqq bar_chart_race","657afaaf":"import bar_chart_race as bcr\n\n\nbcr.bar_chart_race(df=train_month,\n                  n_bars=9,\n                  period_length=800,\n                  filename=None)","684d9826":"\u66dc\u65e5\u3054\u3068\u306e\u88fd\u54c1\u7387\u306f\u3042\u307e\u308a\u5927\u5dee\u306f\u306a\u3044","7ddbfd6a":"## \u63a2\u7d22\u7684EDA","f222b1e9":"\u8a13\u7df4\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f2015\u5e74~2018\u5e74\u3001\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f2019\u5e74","5a063cee":"# \u524d\u51e6\u7406\u3068\u30c7\u30fc\u30bf\u52a0\u5de5","3da05dbb":"\u4f11\u65e5\u3068\u5e73\u65e5\u3067\u58f2\u308c\u884c\u304d\u306b\u5dee\u304c\u3042\u308b\u306e\u3067\u6bd4\u8f03\u3059\u308b","62b37c36":"* \u6708\u3054\u3068\u306e\u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\n    * unstack()\u3067\u884c\u65b9\u5411\u304b\u3089\u5217\u65b9\u5411\u306b\u30d4\u30dc\u30c3\u30c8","dd41fa02":"# \u66dc\u65e5\n\u5546\u54c1\u306e\u58f2\u308c\u884c\u304d\u306a\u3069\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306f\u9031\u672b\u3068\u5e73\u65e5\u3067\u5206\u5e03\u304c\u7570\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u3002\u7279\u5fb4\u91cf\u3068\u3057\u3066\u66dc\u65e5\u3092\u4f7f\u3046\u3053\u3068\u306f\u6709\u52b9\u306a\u5834\u5408\u304c\u591a\u3044\u3002","05ba8012":"# \u306f\u3058\u3081\u306b\n\u3053\u306e\u30b3\u30f3\u30da\u3067\u306f3\u30ab\u56fd\u306b\u3042\u308b2\u3064\u306e\u5e97\u8217(Mart, Rama)\u30673\u3064\u306e\u5546\u54c1(mug, hat, sticker)\u306e1\u5e74\u5206\u306e\u58f2\u4e0a\u3092\u4e88\u6e2c\u3059\u308b\u3002\n\n\u58f2\u308c\u884c\u304d\u306b\u306f\u9031\u672b\u3084\u795d\u65e5\u306e\u52b9\u679c\u3001\u5b63\u7bc0\u306a\u3069\u3001\u591a\u304f\u306e\u8981\u56e0\u304c\u4f5c\u7528\u3057\u3066\u3044\u308b\u3002\n\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u5c0f\u3055\u3044\u306e\u3067\u591a\u304f\u306e\u30e2\u30c7\u30ea\u30f3\u30b0\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002","b7449205":"# Bar Chart Race","fccfa259":"country, store, product\u306e3\u30ab\u30e9\u30e0\u306e\u7dcf\u8a08","82a907a2":"* \u5e74\u6708\u65e5\u306b\u3088\u308b\u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210","4ec7ce4e":"\u6708\u5225\u306b\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u5168\u4f53\u306e\u50be\u5411\u3092\u628a\u63e1\u3057\u3084\u3059\u304f\u306a\u308b\u3002\u5e74\u672b\u5e74\u521d\u306b\u30d4\u30fc\u30af\u3092\u8fce\u3048\u3001\u305d\u306e\u524d\u5f8c\u3067\u6e1b\u5c11\u3059\u308b\u50be\u5411\u304c\u898b\u3066\u53d6\u308c\u308b\u3002","c7ed84a3":"\u6708\u5225\u3001\u56fd\u5225\u306b\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u58f2\u4e0a\u500b\u6570\u306e\u63a8\u79fb\u3092\u898b\u308b","9c074e6d":"* \u56fd\u5225\u88fd\u54c1\u6bd4\u7387\n* \u56fd\u3054\u3068\u306e\u88fd\u54c1\u7387\u306f\u3042\u307e\u308a\u5927\u5dee\u306f\u306a\u3044","69cf6c3f":"# \u66dc\u65e5\u5225\u306e\u58f2\u308c\u884c\u304d\u3092\u78ba\u8a8d\u3059\u308b\n* 0: mon\n* 1: tue\n* 2: wed\n* 3: thu\n* 4: fri\n* 5: sat\n* 6: sun","5dd5beaf":"\u91d1\u66dc\u65e5\u3082\u4ed6\u306e\u5e73\u65e5\u306b\u6bd4\u3079\u3066\u9ad8\u3044\u5272\u5408\u306b\u306a\u3063\u3066\u3044\u308b","2da19bf5":"## \u30ab\u30e9\u30e0(6\u500b)\n* row_id : ID\n* date : \u65e5\u4ed8(YYYY-MM-dd)\n* country : \u56fd\n    * \u30d5\u30a3\u30f3\u30e9\u30f3\u30c9\u3001\u30ce\u30eb\u30a6\u30a7\u30a4\u3001\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3\n* store : \u67b6\u7a7a\u306e\u5e97\n    * KaggleMart\u3001KaggleRama\n* product : \u88fd\u54c1\n    * Kaggle Mug(\u30de\u30b0\u30ab\u30c3\u30d7)\n    * Kaggle Hat(\u5e3d\u5b50)\n    * Kaggle Sticker(\u30b9\u30c6\u30c3\u30ab\u30fc)\n* num_sold : \u58f2\u308c\u305f\u500b\u6570"}}