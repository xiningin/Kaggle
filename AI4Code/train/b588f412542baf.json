{"cell_type":{"385eff06":"code","3a6c629f":"code","4e84e6f3":"code","3ef66655":"code","d67b5388":"code","23a90b72":"code","6167f888":"code","995c13ea":"markdown","3807b030":"markdown","bbbff3e1":"markdown","0f07ab4f":"markdown","53cf97f1":"markdown","66768fb4":"markdown","0437d0ba":"markdown"},"source":{"385eff06":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom xgboost import XGBClassifier\n\n%matplotlib inline","3a6c629f":"# data set which you can split into train \/ validation\ndf = pd.read_csv(\"\/kaggle\/input\/rabo-modelathon\/train.csv\")\n\n# test set excluding the Default column\ndf_test = pd.read_csv(\"\/kaggle\/input\/rabo-modelathon\/test.csv\")","4e84e6f3":"### Boxplot of features by default (0 or 1) \nfeature_names = df.drop(['Id', 'Default'], axis=1).columns\nfig, axes = plt.subplots(nrows=2, ncols=5, figsize=(14, 12))\nfor idx, feat in enumerate(feature_names): \n    ax = axes[int(idx \/ 5), idx % 5]\n    sns.stripplot(x='Default', y=feat, data=df, ax=ax, jitter = False, size=1.5, color='black', edgecolor='gray')\n    sns.boxplot(x='Default', y=feat, data=df, ax=ax)  \n    ax.set_ylabel(feat) \nfig.tight_layout()\nplt.show()","3ef66655":"### Data preprocessing\n\nX = df.drop(columns=['Default', 'Id'])\ny = df['Default']\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)","d67b5388":"### Build your best model and evaluate performance\n\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_val)\nprint('ROC score: {:.2f}'.format(roc_auc_score(y_val, y_pred))) ","23a90b72":"### Create a list of predictions \nX_test = df_test.drop(['Id'], axis = 1)\npredictions = model.predict(X_test)","6167f888":"#save it to csv \npd.DataFrame({'Id': df_test['Id'], 'Outcome': predictions}).to_csv('submissions.csv', index = False)\n\nprint(\"Created submission file, please go to the notebook overview and go to the output tab to submit\")","995c13ea":"### Library import","3807b030":"### Store results - note: make sure you commit and go back to your notebook overview ","bbbff3e1":"### Data preprocessing","0f07ab4f":"### Data import","53cf97f1":"### Use model to make predictions on test set","66768fb4":"### Data reference\n\n\nThe data contain the following variables, or features, that can be investigated.\n\n- **Default** is whether the client defaulted on its payment obligations within 1 year. Range: {0, 1}\n\n- **Return on Assets** is calculated as the return of the company divided by its assets. Range: (-\u221e, \u221e)\n\n* **Liabilities over Assets** is the liabilities divided by its assets. Range: (-\u221e, \u221e)\n\n- **Net Income** is the profit of the company. Range: (-\u221e, \u221e)\n\n- **Number of creditors** is how many creditors the company currently pays interest to. Range: [0, \u221e)\n\n- **Previous defaults** is 1 when the client has defaulted before or 0 if it has not. Range: {0, 1}\n\n- **Delinquency** is defined as 1 if the client has been late on at least one of its payments in the last month, otherwise 0. Range: {0, 1}\n\n- **Days with positive balance** is how many days in the last month the company had a positive balance. Range: [0, 30]\n\n- **Age of company** is defined as the observation year minus the registered start year of the company. Range: >=0\n\n- **S-Ratio** is the Sharpe ratio, and is a measure that is equal to the expected excess return divided by the standard deviation of the excess return. Range: (-\u221e, \u221e)\n\n- **Average height of employees** speaks for itself. ","0437d0ba":"### Data inspection\n\nWhat are the features that need processing? "}}