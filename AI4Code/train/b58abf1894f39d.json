{"cell_type":{"b91ff1b3":"code","90901264":"code","fd3470a7":"code","31d3c01b":"code","c87990e2":"code","a686fc39":"code","31cb730d":"code","3ae0e87a":"code","7bb90e99":"code","a631eb45":"code","afa155f7":"code","fdb0329b":"code","a61202eb":"code","5a9755ee":"code","51a2c008":"code","d3cfda45":"code","822b9ed7":"code","35012d23":"code","0ce5dfcd":"code","ee50b899":"code","efae8a9d":"code","8afd6436":"code","e102cfb4":"code","b9018267":"code","9f4839c0":"code","6839c94e":"code","313e41d0":"code","35862a53":"code","acfe8c94":"code","7e86b816":"code","d14dcce1":"code","6e01e8e6":"code","fe9b3d27":"code","5edd281e":"code","542fbcc8":"code","c0cca55b":"code","aa3cb2c9":"code","08b16721":"code","71d7dc7e":"code","42b5dc44":"markdown","7d3608ff":"markdown","0b40f37d":"markdown","5d14ffff":"markdown","5fc392a1":"markdown","c766b9df":"markdown","3912a975":"markdown","62f7bbc2":"markdown","50b5692c":"markdown","e261a33c":"markdown","639bc10a":"markdown","fcfbffdc":"markdown","8eaf5942":"markdown","d1be4ea7":"markdown","d220c54e":"markdown","45bd5e94":"markdown","5973d713":"markdown","0819693a":"markdown","fd8665ac":"markdown","c3e98e1d":"markdown","59447353":"markdown","52efe62c":"markdown","274a3fb0":"markdown","921cd27d":"markdown","66fd0744":"markdown","07442dab":"markdown","7220f200":"markdown"},"source":{"b91ff1b3":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","90901264":"data = pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent.csv\")\ndata2 = pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv\")","fd3470a7":"# Unexpected \"Unnamed: 0\" column meaning id column\ndata","31d3c01b":"data2","c87990e2":"print(data['city'].value_counts(), \"\\n\") # Sao Paulo?\nprint(data2['city'].value_counts())","a686fc39":"# Copy the data\ndata_city = data","31cb730d":"data_city = data.drop('Unnamed: 0', axis=1)\n\n# In order to label encoding of the second dataset I change to another numbers now.\ndata_city['city'] = data_city['city'].replace(1,4)\ndata_city['city'] = data_city['city'].replace(0,1)","3ae0e87a":"data_city['hoa (R$)'] = data_city['hoa']\ndata_city['rent amount (R$)'] = data_city['rent amount']\ndata_city['property tax (R$)'] = data_city['property tax']\ndata_city['fire insurance (R$)'] = data_city['fire insurance']\n\ndata_city = data_city.drop('total', axis=1)\ndata_city = data_city.drop('hoa', axis=1)\ndata_city = data_city.drop('rent amount', axis=1)\ndata_city = data_city.drop('property tax', axis=1)\ndata_city = data_city.drop('fire insurance', axis=1)","7bb90e99":"for i in data_city:\n    data_city[i] = data_city[i].replace(\"-\", 1)","a631eb45":"def convert_to_num(value):\n    num = value.replace('R$', '')\n    num = num.replace(',', '')\n    num = float(num)\n    return num","afa155f7":"data_city['hoa (R$)'] = data_city['hoa (R$)'].replace(\"Sem info\", '0')\ndata_city['hoa (R$)'] = data_city['hoa (R$)'].replace(\"Incluso\", '0')\n\ndata_city['property tax (R$)'] = data_city['property tax (R$)'].replace(\"Sem info\", '0')\ndata_city['property tax (R$)'] = data_city['property tax (R$)'].replace(\"Incluso\", '00')\n\ndata_city['hoa (R$)'] = data_city['hoa (R$)'].apply(lambda x: convert_to_num(x))\ndata_city['rent amount (R$)'] = data_city['rent amount (R$)'].apply(lambda x: convert_to_num(x))\ndata_city['property tax (R$)'] = data_city['property tax (R$)'].apply(lambda x: convert_to_num(x))\ndata_city['fire insurance (R$)'] = data_city['fire insurance (R$)'].apply(lambda x: convert_to_num(x))\n","fdb0329b":"data_city['animal'] = data_city['animal'].apply(lambda x : 1 if x=='acept' else 0)\ndata_city['furniture'] = data_city['furniture'].apply(lambda x : 1 if x=='furnished' else 0)\n\ndata_city['floor'] = pd.to_numeric(data_city['floor'])","a61202eb":"data_['floor'] = pd.to_numeric(data_['floor'])","5a9755ee":"data_city","51a2c008":"data2","d3cfda45":"# Make a copy of data2\ndata_city_2 = data2.copy(deep=True)","822b9ed7":"for i in data_city_2:\n    data_city_2[i] = data_city_2[i].replace(\"-\", 1)\n\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel = LabelEncoder()\n\ndata_city_2['city'] = label.fit_transform(data_city_2['city'])","35012d23":"data_city['city'].value_counts()","0ce5dfcd":"data_city_2['city'].value_counts()","ee50b899":"# Add Campinas\nCampinas_data = data_city[data_city['city']==1]\ndata_city_2 = pd.concat([data_city_2, Campinas_data])","efae8a9d":"data_city_2['animal'] = data_city_2['animal'].apply(lambda x : 1 if x=='acept' else 0)\ndata_city_2['furniture'] = data_city_2['furniture'].apply(lambda x : 1 if x=='furnished' else 0)","8afd6436":"data_ = data_city_2.drop('total (R$)', axis=1)","e102cfb4":"data_","b9018267":"# import modules\nimport matplotlib.pyplot\nfrom pandas.plotting import scatter_matrix\nimport seaborn as sns\n%pylab inline","9f4839c0":"plt.figure(figsize =(10,10))\ncorr = data_.corr()\nsns.heatmap(corr, annot =True)","6839c94e":"num = 0\nnum_col = [col for col in data_ if data_[col].dtype != np.dtype(np.object)]\n\npyplot.figure(figsize=(25,25))\n\nfor i in num_col:\n    num += 1\n    pyplot.subplot(5,4,num)\n    pyplot.scatter(data_[i], data_['rent amount (R$)'], s=1)\n    pyplot.title(i)","313e41d0":"# It seems unrealistic.\ndata_[data_['hoa (R$)'] > 20000]","35862a53":"# and here\ndata_[data_['property tax (R$)'] > 20000]","acfe8c94":"# and here\ndata_[data_['area'] > 22000]","7e86b816":"data_ = data_.drop(data_[data_['property tax (R$)'] > 20000].index, axis=0 )\ndata_ = data_.drop(data_[data_['hoa (R$)'] > 20000].index, axis=0 )\ndata_ = data_.drop(data_[data_['area'] > 12000].index, axis=0 )","d14dcce1":"num = 0\nnum_col = [col for col in data_ if data_[col].dtype != np.dtype(np.object)]\n\npyplot.figure(figsize=(25,25))\n\nfor i in num_col:\n    num += 1\n    pyplot.subplot(5,4,num)\n    pyplot.scatter(data_[i], data_['rent amount (R$)'], s=1)\n    pyplot.title(i)","6e01e8e6":"data_.skew()","fe9b3d27":"test_data = data_city[:5]\n\npredict = test_data.drop(['rent amount (R$)'], axis=1)\nactual = test_data['rent amount (R$)']","5edd281e":"X = data_.drop(['rent amount (R$)'], axis=1)\ny = data_['rent amount (R$)']","542fbcc8":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error as mae\n\ntrain_X, valid_X, train_y, valid_y = train_test_split(X, y, train_size=0.75, test_size=0.25)\n\nmodel = LinearRegression()\nmodel.fit(train_X, train_y)","c0cca55b":"pred = model.predict(valid_X)\nmae(pred, valid_y)","aa3cb2c9":"from xgboost import XGBRegressor","08b16721":"model2 = XGBRegressor()\nmodel2.fit(train_X, train_y)\n\npred = model2.predict(valid_X)\nmae(pred, valid_y)","71d7dc7e":"final_pred = model2.predict(predict)\n\nprint(\"Predicted\/Recommended Rent Price =\" ,final_pred)\nprint(\"Actual Rent Price =\", list(actual))","42b5dc44":"## First of all, importing modules","7d3608ff":"# Second dataset\n\nThe second dataset is more prepared, so we just need to fix a little bit and do earlier steps","0b40f37d":"It's much better. What about recommendations?","5d14ffff":"Seems that value \"1\" in first dataset is S\u00e3o Paulo due to large size of values\n\nIn order not to guess, just ask author :)\n\n![image.png](attachment:image.png)\n\nSo, we have the answer.","5fc392a1":"# Building a model","c766b9df":"![](http:\/\/)Our mean absolute error is about 210. It doesn't works with property recommendations. Give a last chance and let's do with more comlex model :)","3912a975":"Looks nice, but not the final version. Thanks for watching :)","62f7bbc2":"## First dataset","50b5692c":"### So, let's discuss why we need a model.\n\nA simple idea is predicting rent prices considering some data. Okey, we can use it for that goal. But what if we will develop for another case? Just imagine that you want to lease your property and you're not sure about rent price. \n\nLet's manage it. We will take some data from first dataset to compare with our future predictions.","e261a33c":"Let's see how big is the error","639bc10a":"# Data exploratory\n\nWe will work with two datasets, both of them describe the same characteristics, but they have some differences.[](http:\/\/)","fcfbffdc":"# Hello, everyone!\n### This is my first public notebook in Kaggle. \nA little inroduction of myself. I'm a new in Data Science and Machine Learning, deeping into these subjects toughly. I will appreciate for any your feedbacks, advices or critiques.","8eaf5942":"Okey, I've done with the first dataset","d1be4ea7":"### Let's stop here!\nWe should look on a number of different cities in both datasets","d220c54e":"We have no idea what 1 and 0 ","45bd5e94":"Okey, we saw some cases with enormous values. What could it be? Maybe it's some mistake or personal opinion or possible housing of some famous person, We don't care, because our goal is objectivity. So, just drop them all.","5973d713":"Training the model","0819693a":"Look on a correlation beetween objects","fd8665ac":"We can see a few number of outliers in some plots. What are they?","c3e98e1d":"# Let's begin\n\nToday we have some datasets about house renting in Brazil. Actually, as other kagglers mentioned, it's pretty similar to next competitions:\n\n\n![image.png](attachment:image.png)\n\n\nAlmost every kaggler participates there if they did Kaggle Courses: https:\/\/www.kaggle.com\/learn\/overview, so I suppose it's easy to understand.\n","59447353":"What about object relationships respect to rent amount?","52efe62c":"We can see that if we concatenate datasets directly, we will get over 10k Sao Paulo cities. It's too much and it will affect on model accuracy badly. So let's add only Campinas cities.","274a3fb0":"Our final dataset is","921cd27d":"Looks better","66fd0744":"# Data analysis\n\nHonestly, I'm not strong in statistics. Here, I will show steps, what I have to do.","07442dab":"Let's use Liner Regression","7220f200":"## Doing data cleaning and feature engineering for first dataset"}}