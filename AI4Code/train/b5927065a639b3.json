{"cell_type":{"cf25b5ce":"code","935ce75c":"code","c024e8e5":"code","a5c3b2aa":"code","42f9fd33":"code","81a85891":"code","f4b8a250":"code","509bd88d":"code","12b3ef4a":"code","3a8daee3":"code","b064a3c3":"code","cbd0117f":"code","7d2155a5":"code","95792028":"code","21960dca":"code","b4245c9e":"code","3446eb1e":"code","44aeb1a4":"code","ddb90750":"code","ac880f27":"code","94902213":"code","49d0cc22":"code","89f6395a":"code","700e6a94":"code","c5bd2da9":"code","1d2babc8":"code","27f6fdc5":"code","ef51dcab":"code","5db8506a":"code","45bff672":"code","e0e614d9":"code","8d8143b7":"code","74df1a19":"code","7cb14a64":"code","e4eccd50":"code","bcc0c871":"code","bd98c6ab":"code","38363d5f":"code","3b63665f":"code","90855572":"code","8ea6aa27":"code","67f6bcc7":"code","a676c880":"code","63ef2b7e":"code","2ec96ed2":"code","7c38fd9c":"code","9fb622ea":"code","d31f98eb":"code","0053b284":"code","36ebb245":"code","1d1ae669":"code","17b82849":"code","44217418":"markdown","bdfa96f7":"markdown","cda65b76":"markdown","ef71690f":"markdown","79709994":"markdown","8a0895da":"markdown","607c3e81":"markdown","bc8a8434":"markdown","6b7397dc":"markdown","862fb194":"markdown"},"source":{"cf25b5ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","935ce75c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n\nfrom sklearn.model_selection import train_test_split,cross_val_score, KFold\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import MinMaxScaler,LabelEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB, MultinomialNB,BernoulliNB\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn import metrics\nfrom scipy import stats\nfrom sklearn.preprocessing import StandardScaler","c024e8e5":"songs=pd.read_csv('..\/input\/top50spotify2019\/top50.csv',encoding='ISO-8859-1')\nsongs.head()","a5c3b2aa":"songs.info()","42f9fd33":"songs.describe()","81a85891":"songs.drop('Unnamed: 0',axis=1,inplace=True)","f4b8a250":"plt.figure(figsize=(12,7))\nsns.countplot(x='Popularity',data=songs,palette=\"viridis\")","509bd88d":"plt.figure(figsize=(12,6))\nsns.heatmap(songs.corr(),annot=True)","12b3ef4a":"plt.figure(figsize=(12,6))\nsns.lineplot(x=\"Loudness..dB..\",y='Energy',data=songs)","3a8daee3":"plt.figure(figsize=(12,6))\nsns.lineplot(x=\"Valence.\",y='Energy',data=songs)","b064a3c3":"songs['Genre'].value_counts()","cbd0117f":"plt.figure(figsize=(25,15))\norder=['dance pop','pop','latin','edm','canadian hip hop','panamanian pop','dfw rap','canadian pop','brostep','electropop','reggaeton','reggaeton flow','country rap',\n      'atl hip hop','escape room','australian pop','trap music','r&b en espanol','big room','pop house','boy band']\nsns.countplot(y=songs['Genre'],data=songs,orient=\"h\",order=order,palette=\"rainbow\")","7d2155a5":"most_popular=songs[songs['Popularity']>89]\nmedium_popular=songs[(songs['Popularity']>79) & (songs['Popularity']<90) ]\nless_popular=songs[(songs['Popularity']>69) & (songs['Popularity']<80)]","95792028":"most_popular['Type']=most_popular.apply(lambda x:'most popular',axis=1)\nmedium_popular['Type']=medium_popular.apply(lambda x:'medium popular',axis=1)\nless_popular['Type']=less_popular.apply(lambda x:'less popular',axis=1)","21960dca":"popular_divided=pd.concat([most_popular,medium_popular,less_popular])\npopular_divided.tail()","b4245c9e":"import matplotlib.gridspec as gridspec","3446eb1e":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax1 = fig3.add_subplot(gs[0, :])\nf3_ax2 = fig3.add_subplot(gs[-1:, -1])\nf3_ax3 = fig3.add_subplot(gs[-1, -2])\nsns.lineplot(x=most_popular['Popularity'],y=most_popular['Length.'],data=most_popular,ax=f3_ax1)\nf3_ax1.set_title(\"Most Popular\")\nsns.lineplot(x=medium_popular['Popularity'],y=medium_popular['Length.'],data=medium_popular,ax=f3_ax2)\nf3_ax2.set_title(\"Medium Popular\")\nsns.lineplot(x=less_popular['Popularity'],y=less_popular['Length.'],data=less_popular,ax=f3_ax3)\nf3_ax3.set_title(\"Less Popular\")","44aeb1a4":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax4 = fig3.add_subplot(gs[0, :])\nf3_ax5 = fig3.add_subplot(gs[-1:, -1])\nf3_ax6 = fig3.add_subplot(gs[-1, -2])\nsns.violinplot(x=most_popular['Popularity'],y=most_popular['Energy'],data=most_popular,ax=f3_ax4).set_title(\"Most Popular\")\nsns.violinplot(x=medium_popular['Popularity'],y=medium_popular['Energy'],data=medium_popular,ax=f3_ax5).set_title(\"Medium Popular\")\nsns.violinplot(x=less_popular['Popularity'],y=less_popular['Energy'],data=less_popular,ax=f3_ax6).set_title(\"Less Popular\")","ddb90750":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax4 = fig3.add_subplot(gs[0, :])\nf3_ax5 = fig3.add_subplot(gs[-1:, -1])\nf3_ax6 = fig3.add_subplot(gs[-1, -2])\nsns.boxplot(x=most_popular['Popularity'],y=most_popular['Beats.Per.Minute'],data=most_popular,ax=f3_ax4).set_title(\"Most Popular\")\nsns.boxplot(x=medium_popular['Popularity'],y=medium_popular['Beats.Per.Minute'],data=medium_popular,ax=f3_ax5).set_title(\"Medium Popular\")\nsns.boxplot(x=less_popular['Popularity'],y=less_popular['Beats.Per.Minute'],data=less_popular,ax=f3_ax6).set_title(\"Less Popular\")","ac880f27":"songs['Genre'].unique()","94902213":"most_popular['Popularity']=most_popular['Popularity'].astype(int)\nmedium_popular['Popularity']=medium_popular['Popularity'].astype(int)\nless_popular['Popularity']=less_popular['Popularity'].astype(int)","49d0cc22":"fig3 = plt.figure(figsize=(20,15))\ngs = fig3.add_gridspec(2, 2)\nf3_ax7 = fig3.add_subplot(gs[0, :])\nf3_ax8 = fig3.add_subplot(gs[-1:, -1])\nf3_ax9 = fig3.add_subplot(gs[-1, -2])\nsns.barplot(x='Popularity',y='Genre',data=most_popular,ax=f3_ax7,orient=\"h\")\nf3_ax7.set_title(\"Most Popular\")\nsns.barplot(x='Popularity',y='Genre',data=medium_popular,ax=f3_ax8,orient=\"h\")\nf3_ax8.set_title(\"Medium Popular\")\nsns.barplot(x='Popularity',y='Genre',data=less_popular,ax=f3_ax9,orient=\"h\")\nf3_ax9.set_title(\"Less Popular\")","89f6395a":"dance_pop=popular_divided[popular_divided['Genre']==\"dance pop\"]\ndance_pop.tail()","700e6a94":"fig3 = plt.figure(figsize=(20,15))\ngs = fig3.add_gridspec(2, 2)\nf3_ax10 = fig3.add_subplot(gs[0, :])\nf3_ax11 = fig3.add_subplot(gs[-1:, -1])\nf3_ax12 = fig3.add_subplot(gs[-1, -2])\nsns.barplot(x='Popularity',y='Artist.Name',data=most_popular,ax=f3_ax10,orient=\"h\",palette=\"rainbow\")\nf3_ax10.set_title(\"Most Popular\")\nsns.barplot(x='Popularity',y='Artist.Name',data=medium_popular,ax=f3_ax11,orient=\"h\",palette=\"rainbow\")\nf3_ax11.set_title(\"Medium Popular\")\nsns.barplot(x='Popularity',y='Artist.Name',data=less_popular,ax=f3_ax12,orient=\"h\",palette=\"rainbow\")\nf3_ax12.set_title(\"Less Popular\")","c5bd2da9":"plt.figure(figsize=(15,10))\nsns.pairplot(popular_divided,hue='Type')","1d2babc8":"cm = sns.light_palette(\"green\", as_cmap=True)\ntable=pd.pivot_table(popular_divided,index=['Type','Artist.Name','Genre'])\ns = table.style.background_gradient(cmap=cm)\ns","27f6fdc5":"billie_ellish=songs[(songs['Artist.Name']==\"Billie Eilish\")]\nbillie_ellish","ef51dcab":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax4 = fig3.add_subplot(gs[0, :])\nf3_ax5 = fig3.add_subplot(gs[-1:, -1])\nf3_ax6 = fig3.add_subplot(gs[-1, -2])\nsns.boxplot(x=most_popular['Popularity'],y=most_popular['Speechiness.'],data=most_popular,ax=f3_ax4).set_title(\"Most Popular\")\nsns.boxplot(x=medium_popular['Popularity'],y=medium_popular['Speechiness.'],data=medium_popular,ax=f3_ax5).set_title(\"Medium Popular\")\nsns.boxplot(x=less_popular['Popularity'],y=less_popular['Speechiness.'],data=less_popular,ax=f3_ax6).set_title(\"Less Popular\")","5db8506a":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax4 = fig3.add_subplot(gs[0, :])\nf3_ax5 = fig3.add_subplot(gs[-1:, -1])\nf3_ax6 = fig3.add_subplot(gs[-1, -2])\nsns.lineplot(x=most_popular['Popularity'],y=most_popular['Acousticness..'],data=most_popular,ax=f3_ax4).set_title(\"Most Popular\")\nsns.lineplot(x=medium_popular['Popularity'],y=medium_popular['Acousticness..'],data=medium_popular,ax=f3_ax5).set_title(\"Medium Popular\")\nsns.lineplot(x=less_popular['Popularity'],y=less_popular['Acousticness..'],data=less_popular,ax=f3_ax6).set_title(\"Less Popular\")","45bff672":"fig3 = plt.figure(figsize=(15,10))\ngs = fig3.add_gridspec(2, 2)\nf3_ax4 = fig3.add_subplot(gs[0, :])\nf3_ax5 = fig3.add_subplot(gs[-1:, -1])\nf3_ax6 = fig3.add_subplot(gs[-1, -2])\nsns.boxplot(x=most_popular['Popularity'],y=most_popular['Valence.'],data=most_popular,ax=f3_ax4).set_title(\"Most Popular\")\nsns.boxplot(x=medium_popular['Popularity'],y=medium_popular['Valence.'],data=medium_popular,ax=f3_ax5).set_title(\"Medium Popular\")\nsns.boxplot(x=less_popular['Popularity'],y=less_popular['Valence.'],data=less_popular,ax=f3_ax6).set_title(\"Less Popular\")","e0e614d9":"songs.isnull().sum()","8d8143b7":"less=['Shawn Mendes','Lauv']\nmedium=['Ariana Grande','Ed Sheeran','Lil Nas X','DJ Snake','Lewis Capaldi','Chris Brown','Y2K','Jhay Cortez','Tones and I','Ali Gatie','J Balvin',\n 'The Chainsmokers', 'Ariana Grande','Maluma','Young Thug','Katy Perry','Martin Garrix','Ed Sheeran','Jonas Brothers','Kygo','Lady Gaga','Khalid','ROSAL\u00cdA','Marshmello',\n'Nicky Jam','Marshmello','The Chainsmokers']\nmost=['Anuel AA','Post Malone','Lil Tecca','SamSmith','Bad Bunny','Drake','J Balvin','Post Malone','Lizzo','MEDUZA','Lil Nas X','Lunay','Daddy Yankee',\n      'Taylor Swift']\ncommon=['Billie Eilish','Sech']","74df1a19":"def encoding(x):\n    if x in less:\n        return 0\n    elif x in medium:\n        return 1\n    elif x in common:\n        return 2\n    elif x in most:\n        return 3","7cb14a64":"songs['Artist_Dummy']=songs['Artist.Name'].apply(encoding)\nsongs.head()","e4eccd50":"songs['Genre'].unique()","bcc0c871":"final=pd.get_dummies(songs,columns=['Genre'],drop_first=True)\nfinal.head()\n","bd98c6ab":"final.drop(['Artist.Name','Track.Name','Loudness..dB..'],axis=1,inplace=True)","38363d5f":"final=final.fillna(0)","3b63665f":"final.isna().sum()","90855572":"X=final.drop('Popularity',axis=1)\ny=final['Popularity']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=101)","8ea6aa27":"#Linear Regression\nregression=LinearRegression()\nregression.fit(X_train,y_train)\ny_pred=regression.predict(X_test)\ndf_output = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\nprint(df_output)","67f6bcc7":"#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","a676c880":"#KNN\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=101)\n\nsc=StandardScaler()\nsc.fit(X_train)\nX_train=sc.fit_transform(X_train)\nX_test=sc.transform(X_test)\n# sorted(sklearn.neighbors.VALID_METRICS['brute'])\nerror=[]\nfor i in range(1,30):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i=knn.predict(X_test)\n    error.append(np.mean(pred_i!=y_test))","63ef2b7e":"plt.figure(figsize=(10,10))\nplt.plot(range(1,30),error,color='black',marker='o',markerfacecolor='cyan',markersize=10)\nplt.title('Error Rate K value')\nplt.xlabel('K Value')\nplt.ylabel('Mean error')","2ec96ed2":"knn=KNeighborsClassifier(n_neighbors=18)\nknn.fit(X_train,y_train)\npred_i=knn.predict(X_test)\n#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, pred_i))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, pred_i))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, pred_i)))","7c38fd9c":"df_output_Knn = pd.DataFrame({'Actual': y_test, 'Predicted': pred_i})\nprint(df_output_Knn)","9fb622ea":"#GaussianNB\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30,random_state=101)\ngnb = GaussianNB()\ngnb.fit(X_train, y_train)\ny_pred=gnb.predict(X_test)\ndf_output = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\nprint(df_output)","d31f98eb":"score=cross_val_score(gnb,X_train,y_train,scoring='accuracy',cv=2).mean()\nprint(score)","0053b284":"#MultinominalNB\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30,random_state=101)\nmnb = MultinomialNB()\nmnb.fit(X_train, y_train)\ny_pred_mnb=mnb.predict(X_test)\ndf_output = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred_mnb})\nprint(df_output)","36ebb245":"score_mnb=cross_val_score(mnb,X_train,y_train,scoring='accuracy',cv=3).mean()\nprint(score_mnb)","1d1ae669":"# Linear SVM model \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30,random_state=101)\nLinSVC = LinearSVC(penalty='l2', loss='squared_hinge', dual=True)\nLinSVC.fit(X_train, y_train)\ny_pred_svm=LinSVC.predict(X_test)\ndf_output = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred_svm})\nprint(df_output)","17b82849":"# Testing the accuracy\nscores_svm=cross_val_score(LinSVC,X_train,y_train,scoring='accuracy',cv=3).mean()\nprint(scores_svm)","44217418":"so now in the next line we have divided songs in three different parts most popular,medium popular and less popular. So that it'll be easy to visualize relation between\nthem.","bdfa96f7":"From above we can get that more songs are in the range between 87 to 92.","cda65b76":"Above we create a table from which we can clearly get which songs are in which category.","ef71690f":"Here we have create dummy for \"Genre\" because it's one of the useful column.","79709994":"From above plot we can see that \"Shawn Mendes\" and \"Lauv\" songs are less popular in compare to other and 'Anuel AA','Post Malone','Lil Tecca','SamSmith','BillieEilish',\n 'Bad Bunny','Drake','J Balvin','Post Malone','Lizzo','MEDUZA','Lil Nas X','Lunay','Daddy Yankee','Sech','Taylor Swift' are most famous.","8a0895da":"From above we can get that people very less like 'Canadian Pop' songs and about dance pop we have to explore futher to know what is the difference between those three types of dance pop.","607c3e81":"Above we have added one type column which will tell us which type of that song is in and help to create a new dataframe combining all together with their types.","bc8a8434":"Here we have encoded all Artist name on the basis of their Type(Most,Medium,Less) because we cannot create dummy for that much of variable and also cannot drop they have useful information.","6b7397dc":"There is more correlation between Loudness..dB.. and Energy so we'll not use \"Loudness..dB..\" in our training neither it can cause to multicollinearity.","862fb194":"Above we drop both 'Artist.Name' and 'Track.Name' and also 'Loudness..dB..' ."}}