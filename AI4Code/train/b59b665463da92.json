{"cell_type":{"91e812e1":"code","7e0a378d":"code","195d62fc":"code","1e6b6816":"code","3a48bcec":"code","f2d28503":"code","0f13fa22":"code","d66fbd95":"code","f4645e13":"code","64c9cf4b":"code","d8e8e353":"code","63680541":"markdown","ffe87ab0":"markdown","d10da440":"markdown","b5ec5e1e":"markdown","d6531bc8":"markdown","248fe794":"markdown","68f286df":"markdown","cf0967b5":"markdown"},"source":{"91e812e1":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nfrom collections import OrderedDict\nfrom sklearn.datasets import make_classification\nfrom sklearn.ensemble import RandomForestClassifier","7e0a378d":"X, y = make_classification(\n    n_samples=1000,  # row number\n    n_features=20, # feature numbers\n    n_informative=12, # The number of informative features\n    n_redundant = 4, # The number of redundant features\n    n_repeated = 4, # The number of duplicated features\n    n_classes = 7, # The number of classes \n    n_clusters_per_class=2,#The number of clusters per class\n    random_state = 42 # random seed \n)","195d62fc":"X[:3]","1e6b6816":"y[:3]","3a48bcec":"X_data = np.array(X)\ny_data = np.array(y)\nnew_data = np.append(X_data ,y_data.reshape(-1,1),axis=1)\n\nnew_data [:3]","f2d28503":"new_data.shape","0f13fa22":"df = pd.DataFrame(new_data)\ndf.head()","d66fbd95":"new_col = []\ni = 0\nfor col in df.columns:\n    if i ==  len(df.columns) - 1:\n        new_col.append(\"target\")\n    else :\n        new_col.append(\"f\" + str(i))\n        \n    i += 1\n    \ndf.columns = new_col","f4645e13":"df.columns","64c9cf4b":"df.head()","d8e8e353":"df.to_csv(\"ml_multiclass_classification_data.csv\",index=False)\ndf.head()","63680541":"# add feature data and target data","ffe87ab0":"### Generate a random n-class classification problem.","d10da440":"# save dataframe to csv file ","b5ec5e1e":"# make data using make_classification","d6531bc8":"# convert numpy array to dataframe","248fe794":"# rename column names","68f286df":"# feature data ","cf0967b5":"# target data "}}