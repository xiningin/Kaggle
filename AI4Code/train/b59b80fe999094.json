{"cell_type":{"5f589dc2":"code","fb136f8f":"code","0419391b":"code","b393f49d":"code","e307d393":"code","fad18d54":"code","0269b542":"code","8498783d":"code","97ce0843":"code","d6d19fcf":"code","d1d07cc3":"code","5ede64ff":"code","7f2340b2":"code","202eb046":"code","5a1498a5":"code","4dedec3d":"code","c41c5209":"code","cb8253c9":"code","d853223d":"code","7d35cb96":"code","5197f6ed":"code","8612289c":"code","a98451ff":"code","fe41f872":"code","0d22e4b9":"code","4cbad8b2":"code","9dd5983e":"code","b3de5217":"code","feb19e96":"code","ad4b50af":"code","1e29f52d":"code","28e10277":"code","b3dd7d99":"code","b3f1f5ca":"code","647dced2":"code","87fb5d08":"code","60dfa6c0":"code","72e0cce5":"code","697f9118":"code","5c8ed25a":"code","b00b9c22":"code","6e8b3b19":"code","19e27306":"code","64f011c1":"code","47cac114":"code","b6e03b6f":"code","1f92fe4b":"code","f8e5f526":"code","ec353484":"markdown","cb15a9ff":"markdown","739fc177":"markdown","91a0df5c":"markdown","941250ab":"markdown","829670c8":"markdown","c2dc4650":"markdown","06603e15":"markdown","b6ae3871":"markdown"},"source":{"5f589dc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb136f8f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport nltk\nimport gensim\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nps=PorterStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, HashingVectorizer\n","0419391b":"dldata=pd.read_csv(\"..\/input\/disneyland\/DisneylandReviews.csv\",encoding='latin-1')","b393f49d":"dldata","e307d393":"dldata.shape","fad18d54":"dldata=pd.read_csv(\"..\/input\/disneyland\/DisneylandReviews.csv\",encoding='latin-1',na_values=\"missing\")","0269b542":"dldata","8498783d":"dldata.isnull().sum()","97ce0843":"dldata.Review_ID.nunique()","d6d19fcf":"dldata.Review_ID.value_counts()","d1d07cc3":"dldata.drop_duplicates(subset=\"Review_ID\",inplace=True,keep='first')","5ede64ff":"dldata","7f2340b2":"dldata.Branch.nunique()","202eb046":"dldata.Branch.value_counts()","5a1498a5":"sns.set_style(\"whitegrid\")\nsns.countplot(x=\"Branch\", data=dldata)","4dedec3d":"dldata.Reviewer_Location.nunique()","c41c5209":"dldata.Reviewer_Location.value_counts().head()","cb8253c9":"dldata.Rating.value_counts()","d853223d":"dldata.Rating.nunique()","7d35cb96":"sns.set_style(\"whitegrid\")\nsns.countplot(x='Rating',data=dldata)","5197f6ed":"sns.set_style(\"whitegrid\")\nsns.countplot(x='Rating',hue='Branch',data=dldata)","8612289c":"Reviewer_Locations = dldata['Reviewer_Location'].value_counts()\nrl_list = list(Reviewer_Locations.index)","a98451ff":"rl_list","fe41f872":"plt.figure(figsize=(10, 20))\n\nfigure = plt.pie(Reviewer_Locations.sort_values(ascending=False).iloc[:10],pctdistance=0.6,labeldistance=1.1,\n                 colors='rgb',labels=rl_list[:10],autopct='%1.2f%%')","0d22e4b9":"def npn_rating(rating):\n    if rating <3:\n        return -1 #Negtive Review\n    elif rating >3:\n        return 1 #Positive Review\n    else:\n        return 0 #neutral Review\n    \ndldata['Rating'] = dldata['Rating'].apply(lambda rating: npn_rating(rating))","4cbad8b2":"# get the independent feature\nx=dldata.drop('Rating',axis=1)","9dd5983e":"x.head()","b3de5217":"# get the dependent feature\ny=dldata['Rating']","feb19e96":"y.head()","ad4b50af":"# Droping the null values\ndldata=dldata.dropna()\ndldata.head()","1e29f52d":"messages=dldata.copy()","28e10277":"# reset the index\nmessages.reset_index(inplace=True)","b3dd7d99":"messages.shape","b3f1f5ca":"messages['Review_Text'][6]","647dced2":"from nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nimport re\nps = PorterStemmer()\ncorpus = []\nfor i in range(0, len(messages)):\n    review = re.sub('[^a-zA-Z]', ' ', messages['Review_Text'][i]) #cleaning the data\n    review = review.lower() # converting into lowercase\n    review = review.split()\n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')] #using stop-words\n    review = ' '.join(review)\n    corpus.append(review)","87fb5d08":"corpus[6]","60dfa6c0":"## TF-IDF Vectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\ntfidf_v=TfidfVectorizer(max_features=5000,ngram_range=(1,3)) #getting top 5000 features\nX=tfidf_v.fit_transform(corpus).toarray()","72e0cce5":"X.shape","697f9118":"y=messages['Rating']","5c8ed25a":"y.head(5)","b00b9c22":"# train test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=0)","6e8b3b19":"# top 20 most frequest occurring words\ntfidf_v.get_feature_names()[:20]","19e27306":"# Detail explanation\ntfidf_v.get_params()","64f011c1":"count_df = pd.DataFrame(X_train, columns=tfidf_v.get_feature_names())","47cac114":"count_df.head()","b6e03b6f":"from sklearn.naive_bayes import MultinomialNB\nclassifier=MultinomialNB()","1f92fe4b":"from sklearn import metrics\nimport itertools","f8e5f526":"classifier.fit(X_train, y_train)\npred = classifier.predict(X_test)\nscore = metrics.accuracy_score(y_test, pred)\nscore","ec353484":"Branch","cb15a9ff":"# Reading the data","739fc177":"# Removing Duplicate","91a0df5c":"# Importing the packages","941250ab":"Rating","829670c8":"Reviewer Location","c2dc4650":"# visualizing data","06603e15":"# MultinomialNB Algorithm","b6ae3871":"# Checking for null values\u00b6"}}