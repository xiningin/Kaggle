{"cell_type":{"9699d1f3":"code","134811d6":"code","59b068de":"code","855e4156":"code","43c07f8e":"code","4b8b5862":"code","8614f334":"markdown","13ff9ff6":"markdown","ffdff88e":"markdown","7c49bfb0":"markdown"},"source":{"9699d1f3":"!pip install sentence_transformers\nfrom sentence_transformers import SentenceTransformer\nfrom sklearn.metrics.pairwise import cosine_similarity\nimport nltk\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nimport pandas as pd","134811d6":"data =  pd.read_csv(\"..\/input\/retail-questions\/Questions.csv\", sep='\\t')\nprint(data['Questions'])\nsentences=data['Questions']","59b068de":"lemmatizer=WordNetLemmatizer()\nstop_words=stopwords.words(\"english\")\nfinal_string=\" \"\n\ndef remove(sent_r):\n    \n    #conver all letters to lower case\n    sent_r=sent_r.lower()\n    \n    #remove special character \n    no_spec=re.sub(\"[^A-Za-z0-9 \" \"]\",\"\",sent_r)\n    \n    temp=' '\n    #lemmitizing and removing stopwords\n    temp=temp.join([i for i in no_spec.split(\" \")]) # lemmatizer.lemmatize(i) if i not in stop_words])\n    l1=temp.split(\" \")\n \n    #removing extra spaces\n    while(\"\" in l1):\n        l1.remove(\"\")\n        \n    return final_string.join(l1)","855e4156":"model = SentenceTransformer('bert-base-nli-mean-tokens')","43c07f8e":"sentences_vec=[]\ncleaned_sentences=[]\nfor i in sentences:\n    i=remove(i)\n    cleaned_sentences.append(i)\nsentences_vec=model.encode(cleaned_sentences)\ndata['vectors']=[i for i in sentences_vec]","4b8b5862":"sent_similarity=[]\nuser_input=input(\"enter a sentence: \")\nuser_input=remove(user_input)\nprint(user_input)\nuser_vex=model.encode(user_input)\n\nfor i in range(35):\n    sent_similarity.append(cosine_similarity([user_vex],[data['vectors'][i]]))\ndata['cosine']=sent_similarity\n\n\ntop5=data['cosine'].astype(float).nlargest(5)\noffset=0\nfor i in top5.keys():\n    if data[\"cosine\"][i]>=offset:\n        print(data[\"Questions\"][i],' ',data[\"cosine\"][i][0][0],\"\\n\")","8614f334":"# Pre-trained Transformer Model","13ff9ff6":"# Reading dataset\n# 35 questions","ffdff88e":"# Derive vectors for all questions in dataset and\n# save it in a new column","7c49bfb0":"# User Input - Cosine similarity - Display top 5"}}