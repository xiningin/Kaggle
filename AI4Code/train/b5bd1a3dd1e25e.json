{"cell_type":{"d962851f":"code","a6175e08":"code","9bbfa3a8":"code","78ad9643":"code","00a5230e":"code","b9042395":"code","ad03ef4c":"code","e201e16b":"code","43ac0dc0":"code","aae3c1d9":"code","762002fa":"code","231968f2":"code","4e0aeb5e":"code","f91f8d06":"code","4f6d0fee":"code","bd9fb7c2":"code","db4451c0":"code","9a1a926b":"code","85c6bec4":"code","427c88a3":"code","fd7b454d":"code","6cbe1878":"code","7d01388d":"code","b10bf596":"code","c36d0446":"code","2a79e6c4":"code","4e8b297a":"code","594aa07d":"code","bb72731d":"code","49fee606":"markdown","8d74a28c":"markdown","8e7d22d0":"markdown","25375bb1":"markdown","dd8403a5":"markdown","7f6b65a3":"markdown","ff26b65b":"markdown","160999e2":"markdown","4591b9c6":"markdown","3b8f0fc9":"markdown","6de9255d":"markdown","1ed1b2c5":"markdown","6e416ace":"markdown","c5a03986":"markdown","c774a251":"markdown","ac29097c":"markdown","835f7e6c":"markdown","f51b08bc":"markdown","f44d57ed":"markdown","9b34e294":"markdown","7e91f74f":"markdown","72b76b94":"markdown","2f88aead":"markdown","f7ce7f32":"markdown","7797d008":"markdown","66d9ded3":"markdown","5f80f1e9":"markdown","dcd9dd6b":"markdown","45819d32":"markdown","75bc7850":"markdown","058580e7":"markdown","d43da69f":"markdown","08f52ed1":"markdown","59c3658a":"markdown","c8dca61f":"markdown","2cc33242":"markdown","7caef21a":"markdown","16a6dbd2":"markdown","dcf0fcc1":"markdown","d98837ef":"markdown","221fccf0":"markdown","80e9800a":"markdown","aa41f1b4":"markdown","1b452128":"markdown","0fb769c1":"markdown","3a189745":"markdown"},"source":{"d962851f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a6175e08":"%config Completer.use_jedi = False\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n","9bbfa3a8":"df = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\",low_memory=False,skiprows = [1])\ndfl = len(df)\ndf.head(4)","78ad9643":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,8))\nfig.suptitle(\"Gender Distribution\")\n\nax1 = sns.countplot(x=df['Q2'], data=df,ax=ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=10, ha=\"right\",fontsize= 14)\n\nax1.set_xlabel(\"Gender Distribution of Kagglers\",fontsize = 22)\nax1.set_yscale(\"log\")\n\nfor p in ax1.patches:\n    ax1.annotate('{}'.format(p.get_height()), (p.get_x()+0.2, p.get_height()+20),fontsize=16)\n    \n    \nax2 = sns.countplot(x=df['Q2'],ax=ax2,hue=df['Q3']=='India')\nax2.set_xticklabels(ax2.get_xticklabels(), rotation=10, ha=\"center\",fontsize= 14)\n\nax2.set_xlabel(\"Gender Distribution World vs Indian Kagglers\",fontsize = 22)\nax2.set_yscale(\"linear\")\n\nfor p in ax2.patches:\n    ax2.annotate('{}'.format(p.get_height()), (p.get_x(), p.get_height()+20),fontsize=14)\n\nax2.legend(labels=[\"Rest World\",\"India only\"])\n\nplt.plot()\n\n","00a5230e":"# count \nindia_count = df['Q3'].value_counts()\nindia_count = india_count[\"India\"]\nallworld = df['Q3'].value_counts().sum() - india_count\nx = [india_count,allworld]\ndfl, allworld + india_count","b9042395":"'''\nthis function get_explode will return a series of fraction number\n'''\n\ndef get_explode(lx, pairs=4, explode=0, steps=0.2):\n    l = len(lx)\n    exp = []\n    for i in range(l):\n        if i%pairs==0:\n            explode = round((steps + explode),2)\n            exp.append(explode)\n        else:\n            exp.append((explode))\n    return exp\n\n","ad03ef4c":"fig, ax1 = plt.subplots() \nplt.figure(figsize=(16,8))\nexplode = (0.1, 0)\nax1.pie([india_count,allworld], explode=get_explode([india_count,allworld],explode=0,steps=0.1), labels=['India','Rest World'], autopct='%1.1f%%',shadow=True, \n       startangle=90,colors = ['gold','lightblue'],radius = 1.9)\nplt.show()\n","e201e16b":"df[\"Q3\"][df[\"Q3\"] == \"Iran, Islamic Republic of...\"] = \"Iran\"\ndf[\"Q3\"][df[\"Q3\"] == \"United States of America\"] = \"USA\"\ndf[\"Q3\"][df[\"Q3\"] == \"Viet Nam\"] = \"Vietnam\"\ndf[\"Q3\"][df[\"Q3\"] == \"United Kingdom of Great Britain and Northern Ireland\"] = \"UK\"\ndf[\"Q3\"][df[\"Q3\"] == \"I do not wish to disclose my location\"] = \"Not-mentioned\"\ndf[\"Q3\"][df[\"Q3\"] == \"Hong Kong (S.A.R.)\"] = \"Hong-Kong\" \ndf[\"Q3\"][df[\"Q3\"] == \"United Arab Emirates\"] = \"UAE\"\n","43ac0dc0":"countries = df['Q3'].value_counts()\ntry:\n    countries= countries.drop('Other')\n    countries = countries.drop('Unknown')\nexcept:\n    pass\ncolors = ['#ff6666', '#ffcc99', '#99ff99', '#66b3ff']\nfig, (ax1,ax2) = plt.subplots(1,2,figsize= (20,8))\nfig.suptitle(\"Distribution\",size= 20)\nax1.pie(countries[:10],labels =countries[:10].index,explode = get_explode(countries[:10]) ,autopct='%1.1f%%',shadow=True, startangle=180,colors = colors,radius=1.5)\n\nax2.pie(countries[1:11],labels =countries[1:11].index,explode = get_explode(countries[1:11],pairs=8) ,autopct='%1.1f%%',shadow=True, \n           startangle=180,colors = colors,radius=1.5)\nplt.tight_layout()\nplt.show()\n","aae3c1d9":"all_roles = df['Q5'].value_counts()\nall_roles","762002fa":"fig, ax = plt.subplots()\nplt.figure(figsize=(16,8))\nexplode = (0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.5,0.7,0.9,1.1,1.3)\ncolors = ['#ff6666', '#ffcc99', '#99ff99', '#66b3ff']\nax.pie(all_roles, explode=explode, labels=all_roles.index, autopct='%1.1f%%',shadow=True, \n       startangle=90,colors = colors,radius=2)\n\nplt.show()\n","231968f2":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,4))\nfig.suptitle('World VS India Roles',size =20)\nroles = df[\"Q5\"].value_counts()\n\nroles = roles[roles.index != 'Student']\nroles = roles[roles.index != 'Currently not employed']\n\nexplode =(0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.5,0.7,0.9)\ncolors = ['#ff6666', '#ffcc99', '#99ff99', '#66b3ff']\ncolors2 = ['#80deea','#a5d6a7','#fff59d','#ffab91']\nax1.pie(roles, explode=explode, labels=roles.index, autopct='%1.1f%%',shadow=True,startangle=90,colors = colors,radius=2)\n\nindia = df.loc[df[\"Q3\"]==\"India\"]\nindia_r= india[\"Q5\"].value_counts()\nindia_r = india_r[india_r.index != 'Student']\nindia_r =india_r[india_r.index != 'Currently not employed']\n\n\nexplode =(0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.5,0.7,0.9)\nax2.pie(india_r,  autopct='%1.1f%%',explode= explode, labels =india_r.index,shadow=True,startangle=90,colors = colors2,radius=2)\nplt.show()\n","4e0aeb5e":"exp = df['Q6'].value_counts()\nfig, ax = plt.subplots()\nplt.figure(figsize=(16,8))\nexplode = (0.1,0.1,0.2,0.2,0.3,0.3,0.3)\ncolors = ['#ff6666', '#ffcc99', '#99ff99', '#66b3ff']\nax.pie(exp, explode=explode, labels=exp.index, autopct='%1.1f%%',shadow=True,startangle=90,colors = colors,radius=2)\n\nplt.show()","f91f8d06":"exp","4f6d0fee":"fig, ax = plt.subplots(2,2,figsize=(20,18))\nfig.subplots_adjust(hspace=0.3)\nfig.suptitle(\"World and Indian users experience count\")\n# USA = df.loc[df[\"Q3\"]==\"USA\"]\n\nax[0,0] = sns.countplot(ax=ax[0,0] ,x =df['Q6'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"],\n                    order=['< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years','I have never written code',]                \n                   )\nax[0,0].title.set_text(\"Experience Distribution of World\")\nax[0,1] = sns.countplot(ax=ax[0,1],x=india['Q6'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"]\n                   ,order=['< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years','I have never written code',],\n                   )\nax[0,1].title.set_text(\"Experience Distribution of India\")\nax[1,0] = sns.countplot(ax=ax[1,0] ,x =df['Q6'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"],\n                    order=['< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years','I have never written code',]\n                   ,hue=df[\"Q3\"]==\"India\"\n                   )\n\nax[1,0].title.set_text(\"Experience Distribution of Rest World vs India Only\")\n\nax[1,1] = sns.countplot(ax=ax[1,1] ,x =df['Q6'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"],\n                    order=['< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years','I have never written code',]\n                   ,hue=df[\"Q3\"]==\"USA\"\n                   )\n\nax[1,1].title.set_text(\"Experience Distribution of Rest World vs USA Only\")\n\n\nax[1,0].legend(labels=[\"Rest World\",\"India only\"])\nax[1,1].legend(labels=[\"Rest World\",\"USA only\"])\n# ax[1,1].axis(\"off\")\n\nax = ax.ravel()\n\nfor i in range(4):\n    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=25, ha=\"center\")\n\nplt.show()\n","bd9fb7c2":"rand_countries = countries.sample(n=10)\nrand_countries","db4451c0":"fig, ax = plt.subplots(5,2,figsize=(15,35),dpi=600)\n# fig.subplots_adjust(hspace=0.3)\n\nax = ax.ravel()\n# USA = df.loc[df[\"Q3\"]==\"USA\"]\nfor i,k in zip(rand_countries.index,range(10)):\n    country = df.loc[df[\"Q3\"]==i]\n    ax[k] = sns.countplot(ax=ax[k],x=country['Q6'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"],\n                    order=['< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years','I have never written code']\n                    )\n    ax[k].title.set_text(\"Experience Distribution of {}\".format(i))\n   \n    ax[k].set_xticklabels(ax[k].get_xticklabels(), rotation=25, ha=\"center\")\nplt.tight_layout()\nplt.show()\n","9a1a926b":"Q7_full = ['Q7_Part_1', 'Q7_Part_2', 'Q7_Part_3', 'Q7_Part_4', 'Q7_Part_5','Q7_Part_6', 'Q7_Part_7', 'Q7_Part_8', 'Q7_Part_9', \n 'Q7_Part_10','Q7_Part_11', 'Q7_Part_12', 'Q7_OTHER']\n\ndf[Q7_full]\n","85c6bec4":"y = df[Q7_full].apply(lambda x:x.count())\nlanguages = ['Python','R','SQL','C','C++','Java','Javascript','Julia','Swift','Bash','MATLAB','None','Other']\ny.index = languages\ny = y.sort_values(ascending= False)\ny","427c88a3":"fig, ax= plt.subplots(figsize=(20,8))\nax =sns.barplot(x=y.index,y=y.values,palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\",\"#d389c2\"],)\nfor p in ax.patches:\n    ax.annotate('{}'.format(int(p.get_height())), (p.get_x()+0.1, p.get_height()),fontsize=14)","fd7b454d":"fig, ax = plt.subplots(figsize = (20,8))\nax = sns.countplot(x = df['Q8'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\",\"#d389c2\"],\n                   order=['Python','R','SQL','C','C++','Java','Julia','Javascript','None','Bash','Swift'])\n\nfor p in ax.patches:\n    ax.annotate('{}'.format(p.get_height()), (p.get_x()+0.1, p.get_height()),fontsize=14)","6cbe1878":"\nfig, ax = plt.subplots(8,2,figsize=(15,35),dpi=600)\nax = ax.ravel()\n\nfor i,j in zip(range(15),all_roles.index):\n    ax[i] = sns.countplot(ax=ax[i],x=df[df['Q5']==j]['Q8'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\"],\n                          order=['Python','R','SQL','C','C++','Java','Julia','Javascript','None','Bash','Swift'])\n    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=25, ha=\"center\")\n    ax[i].title.set_text(\"language recommendation by {}s\".format(j))\n    ax[i].set_yscale(\"log\")\n\n    for x in ax[i].patches:\n        ax[i].annotate('{}'.format(x.get_height()), (x.get_x(), x.get_height()),fontsize=14)\n        \n\n    \nplt.tight_layout()","7d01388d":"Q9_full= df.columns[21:34]\ndf[Q9_full][200:300]","b10bf596":"IDEs = ['Jupyter (JupyterLab, Jupyter Notebooks, etc)','RStudio','Visual Studio','Visual Studio Code (VSCode)','PyCharm','Spyder','Notepad++','Sublime Text',\n        'Vim \/ Emacs','MATLAB','Jupyter Notebook','Non','Other']\nlen(IDEs)","c36d0446":"a = df[Q9_full].apply(lambda x:x.count())\nb= df[Q9_full].apply(lambda x:x.unique())\n","2a79e6c4":"Q14_full = df.columns[59:71]\nQ14_full","4e8b297a":"viz=['Matplotlib',\n     'Seaborn',\n     'Plotly',\n     'Ggplot',\n     'Shiny',\n     'D3 js',\n     'Altair',\n     'Bokeh',\n     'Geoplotlib',\n     'Leaflet \/ Folium',\n     \"I don't use\",\n     'Other']\nlen(viz)","594aa07d":"a = df[Q14_full].apply(lambda x:x.count())\nb= df[Q14_full].apply(lambda x:x.unique())\na.index = viz\na","bb72731d":"fig, ax = plt.subplots(figsize=(18,8))\nsns.barplot(x= a.index,y=a.values)","49fee606":"## Geting a bit deeper with Experiences\nmaybe a pattern could be a present of users experiences in each country lets find out, I think picking 10 countries at random would help us to understand diffrent distributions around the world","8d74a28c":"# Most Used IDEs","8e7d22d0":"its hard to handle 66 countries data or how to represent them with a plot so just trying the top 10 or 20 for now **Suggestions\/feedbacks are most welcome**\npiecharts looks terrible if you throw all your data directly.","25375bb1":"# **Hello Everyone** \n### **About me**\nHey I am tosif, just started my data science journey, its my first EDA project,\n\nand my first competetion too, I am pretty excited and really confused as well \nso if you guys finds anything interesting please let me know. suggestion and feedbacks are most welcome","dd8403a5":"## Language recommendation by people of diffrent experience","7f6b65a3":"This code will plot a few graphs about what is the language usage by people of diffrent experiences","ff26b65b":"since question 7 is in 13 parts lets combine them up ","160999e2":"Now lets move to most preferred language by kagglers\n# Most Used language on daily basis","4591b9c6":"# Importing general libraries for EDA","3b8f0fc9":"A great quantity of Indian users is present. let's look at the overview of World kaggle user\n# Kaggle Users Count India vs World ","6de9255d":"## Language recommendation by people of different roles","1ed1b2c5":"---\n# Goals \n\n**Question:**\n1. **What is the overall gender distribution ?**\n    - comparision of India vs World \n2. **Kaggle users distribution ?**\n    - comparision of India vs World\n3. **Which professional uses kaggle the most? is there anything interesting ?**\n    - Comparision between the World professional vs Indian professionals ?\n4. **What is the Experience distribution of World? is there any pattern**\n    - Comparision of 10 different countries\n5. **Which is the most used language?**\n    - Comparision with role\n6. **What is the Recommendation of languages for aspiring data scientists ?**\n    - Comparision with role and experiences\n7. **What is the most used IDE?**\n    - Comparion with role and experiences\n8. **What are the most popular data visualization libraries used ? --Q14**\n    - Compare with role, experiences and machine learning frameworks\n9. **What are the most popular ML frameworks ? --Q16**\n    - Compare with role, experiences and data visualization libraries\n-- there is a wide variety of questions that could be possible to answer and a lot of can be created by a combination of 2 or more than 2 questions, I will try atleast 20 question to answer","6e416ace":"fig, ax = plt.subplots(4,2,figsize = (15,25),dpi=600)\n\nax = ax.ravel()\n\nfor i,j in zip(range(8), exp.index):\n    cur_rec = df[df['Q6']==j]\n    ax[i] = sns.countplot(ax=ax[i],x = cur_rec['Q8'],palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\",\"#d389c2\"],\n                   order=['Python','R','SQL','C','C++','Java','Julia','Javascript','None','Bash','Swift'])\n    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=25, ha=\"center\")\n    ax[i].title.set_text(\"language recommendation by {}\".format(j))","c5a03986":"## Language used on daily basis by people with diffrent roles","c774a251":"I decided not to include this because all of them are obivious or already known, you can still run above cell","ac29097c":"### **WORK IS UNDER PROGRESS**","835f7e6c":"This code will plot a few graphs about what is the language usage by people of diffrent roles","f51b08bc":"reading the data and storing the length of dataframe","f44d57ed":"## Language used on daily basis comparision with experience","9b34e294":"the first thing I noticed is the gender column so let's find some insights about the gender column","7e91f74f":"## Indian Kaaggle community vs World","72b76b94":"I decided not to include this because they all are almost the same as the whole recommendation average, you can still run the above cell if you like.","2f88aead":"### Note: \nIf you find anything interesting or insightfull please mention in comments, it will motivates. plus if there is any suggestion from your side I would love to hear. Peace Out\ud83d\ude04 and thankyou for reading it to the end","f7ce7f32":"# Work Experience of Kagglers around the World","7797d008":"Their is no fixed pattern as we can see most of them are unique, I ran the code couple of times but only a few countries can be grouped like India are (vietnam, iran ,russia, bangladesh, taiwan etc) The reason why their is a similarity between **Indian experience distribution** and all world exp distribution is the **count of indian users** as the huge percentage of indian kaggle users **(approx. 25%)** which makes both of them identical ","66d9ded3":"## Work Experience comparision between India and World","5f80f1e9":"This code will plot a few graphs about what is the language recommendation by people of experience roles","dcd9dd6b":"more than a quarter of roles i.e. Q5 column is belong to students followed by data scientists and software engineers sums approx at 50% rest are others,\nlet's **remove \"Students\" and \"Currently not employed\"** as these can not be considered as a professional role. **We can also remove the \"Others\" column but it seems like** the \"Other\" column represent those peoples who are transistioning their career role to data science from various fields. that is a pretty interesting insight if it is true.","45819d32":"# Language recommendation by kaggle users","75bc7850":"---\n### Answers Summary\n\n1. Gender distribution is simple to answer, about 79%(approx) of memebers are man, followed by females around 19%(approx) rest 2 percent are the other genders\n2. **1\/4 of users are from india**, india holds the greatest number of kaggle users followed by USA, China, Japan, Brazil, Russia respectively.(look for pie chart for more detailed view)\n3. **1\/4 of users are students only**, then data scientists and software engineers are the top 3's, these 3 covers about half of the kaggle user community.\n    - **Removed Students and Currently not employed** data to get a more precise view of Professional roles. (look for pie chart for more detailed view)\n    - Maybe the **\"Other\"** segment of pie chart belongs to the people who are from **non-IT field**, as Majority of IT roles who could be into Data Science are already present with their names.(look for pie chart for more detailed view)\n    - Even the **\"Other\"** segment of roles dominates the roles like **Analysts, ML Engineers and Researchers which should be more likely to be present at top 5s**.\n    - Maybe people who are **non-IT's uses kaggle to develop their Data Science Skills**.(look for pie chart for more detailed view)\n4. Half of the world kaggle user experience are from 0-3 year, (look for pie chart for more detailed view)\n    - **India follows the same trend as the World experience**, again the count of users.\n    - **Comparision of 10 countries to confirm**, if there is any pattern in experience. but haven't found anything(look for pie chart for more detailed view)\n5. **Python, Sql, C++, R and Java are the top 5's respectively**, are the most used language on the daily basis.\n    - Comparision done with the roles, but there is nothing much to notice, as the plots are already known and obvious, for e.g. ML engineers uses Python, SQL, R the most while Statistician uses R, then Python, and SQL. Software engineers uses python, java, javascript, C and C++.\n    - Comparision with experience is not that important, as people who uses C a decade ago are now prefering C++ or Java or Python(hypothetically) for their work as these languages offers more opportunities and people of greater experience uses a wide variety of languages over lesser experience peoples.\n6. **Python, SQL and R are the top 3's respectively**, surprisingly **C and C++ made it to top 5's**, maybe the people who voted C and C++ believes the **importance of the basic concept of programming languages first** would be more important, then pursuing Data Science directly.(look for pie chart for more detailed view)\n     - Comparision with experience, is very much identical to the world average, nothing special to note.\n     - Almost all subplots supports for  Python as 1st, SQL as 2nd and R as 3rd.\n     - Students, ML Engineers and Research Scientists voted for C, C++ and SQL approximetly equal.\n     - Product Managers prefer Julia as 4th and Java as 5th.\n     - Statistician prefers julia and C++ for 4th and 5th.\n     - developer relation\/advaocacy are very different python as 1st ,SQL ties with Javascript for position 2nd, while another tie for R and Java for 4th.\n7. ---\n8. ---\n9. ---\n\n\n-- more detailed answers to be added, and I'll try to make this summary more refined.\n","058580e7":"# df[df['Q5']==\"Other\"][Q7_full].count()\n\nfig, ax = plt.subplots(7,2,figsize=(15,35),dpi=600)\nax = ax.ravel()\n\nfor i,j in zip(range(14),all_roles.index):\n    cur_role = df[df['Q5']==j][Q7_full].count()\n    cur_role.index = languages\n    ax[i] =sns.barplot(ax=ax[i],x=cur_role.index,y=cur_role.values,palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\",\"#d389c2\"])\n    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=25, ha=\"center\")\n    ax[i].title.set_text(\"language used by {}s\".format(j))\n\nplt.tight_layout()","d43da69f":"lets look at the distribution of world, india only and world vs india only plot, the experience distribution is almost similar, but only india follows this distribution, I picked USA randomly. but there is no such pattern,","08f52ed1":"Data scientist, software Engineers and Data analyst are the top users in india and present at top 5 at world as well, almost each segment is at the same position except a few like researchers and \"Other\" role with few swapped positions.","59c3658a":"# Most Popular Data Viz","c8dca61f":"Python, SQL and R are the top 3's, and it's a well known fact these 3 are the most popular as well, but surprisingle people voted for C and C++ language and pushed them to top 5's, maybe because they think these would be the best languages to build their concepts of programming first then jump into Data Science. (I also learned C++, but back then I did'nt know anything about Data Science).","2cc33242":"after writing explde values for multiple time, I made this function which simply returns a set of values of length of list that is passed to the function, this function is not optimized, if the length of list exceeds to more than 15 it will start to create really exploded and messy charts, however with my knowledge a pie chart with more than 10 values is not an ideal option for presenting data. ","7caef21a":"the data distribution for gender is skewed so maybe log scale would be good with a count","16a6dbd2":"## top 10 countries user distribution","dcf0fcc1":"## The \"Other\" role of Professional Role column\nSo its obvious that kaggle is mostly used by data science or IT professionals to explore and share their skills,But I am confident about that the \"Other\" segment of pie chart represents those people who are transistioning their career, I will confirm this with further exploration\n","d98837ef":"fig, ax = plt.subplots(4,2,figsize=(15,25),dpi=600)\nax = ax.ravel()\n\nfor i,j in zip(range(8),exp.index):\n    \n    experience = df[df[\"Q6\"]==j][Q7_full].count()\n    experience.index = languages\n    ax[i] =sns.barplot(ax=ax[i],x=experience.index,y=experience.values,palette=['#80deea','#a5d6a7','#fff59d','#ffab91',\"#ff8a65\",\"#7986cb\",\"#bdbdbd\",\"#d389c2\"])\n    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=25, ha=\"center\")\n    ax[i].title.set_text(\"language used by {}s\".format(j))\n\nax[-1].axis(\"off\")\nplt.tight_layout()","221fccf0":"I decided not to include this because all of them are obivious or already known, you can still run above cell","80e9800a":"as we already know the reason india is highest, this chart 1 represents top 10 users country,while chart 2 represents 10 countries without india","aa41f1b4":"# Gender Distribution of Kagglers","1b452128":"This code will plot a few graphs about what is the language recommendation by people of diffrent roles","0fb769c1":"A few countries name are in full form which could be problamatic to distinguish in plotted chart, let's mutate them to shorter version","3a189745":"# Professional Roles Distribution"}}