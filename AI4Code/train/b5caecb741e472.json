{"cell_type":{"4cd5107b":"code","a72f3900":"code","88dadf76":"code","86660fb7":"code","23b67166":"code","4b3fdcc6":"code","00907df8":"code","b0dca8da":"code","e128004a":"code","e6669c5e":"code","edd5c6fa":"code","1a654bcc":"code","6026594b":"code","20332a37":"code","9497b23a":"code","ff18944a":"code","854e680f":"code","44de1a99":"code","882985d0":"code","e0de06f4":"code","6d445e2f":"code","009ae537":"code","0e671d44":"code","328f6c67":"code","c1b742c7":"code","7ef9acac":"code","2f0eb7fd":"code","56bafdea":"code","14cab420":"code","4af3885f":"code","ef04a1c3":"code","58b0d15c":"code","2836f5a7":"code","c4f4f50c":"code","7da110dc":"code","66b11fed":"code","af321a3f":"code","07e67419":"code","b5cf2222":"code","9b619cf2":"code","5af4d102":"code","5de7e7b0":"code","336c6828":"code","93213139":"code","0a98fd92":"code","f5f2af46":"code","f7f82154":"code","bb1ef60e":"code","0b22d20b":"code","e49934b3":"code","c4fe0936":"code","c3cc5545":"code","82ed07f1":"code","17512e77":"code","20a48d54":"code","8f0cb0ec":"code","f6190ae4":"code","3b43e0e6":"code","a9652b04":"code","fab7f957":"code","c88d96f5":"code","c6589bb1":"code","31bb0a4a":"code","306fa855":"code","5ae3f241":"code","ec9ae181":"code","36ed59e6":"code","730d1dab":"code","baacf1aa":"code","af901c42":"code","57e07001":"code","88fdef90":"code","d694909a":"code","68faffb7":"code","3b1c99bc":"code","4a97cadd":"code","a63c398a":"code","3b4a2245":"code","8be41c11":"code","cf24bac7":"code","eb53463f":"code","f55ef23a":"code","87b8761c":"code","39e3ba35":"code","473e8d49":"markdown","d4654d67":"markdown","9a387ebc":"markdown","2ac73e28":"markdown","481a027d":"markdown","a3406619":"markdown","1cc6b9da":"markdown","ae159812":"markdown","1a4c4236":"markdown","687bd25d":"markdown","065f0da4":"markdown","482ef781":"markdown","6ab822b8":"markdown","44648499":"markdown","7c347be2":"markdown","68e8e3e5":"markdown","8c93ee8c":"markdown","182124f6":"markdown","aa1c9216":"markdown","6109c55a":"markdown","e61c6cdc":"markdown","522d33d4":"markdown","09e351a8":"markdown","07bd5e67":"markdown","fe6cd88b":"markdown","784e4a7e":"markdown","8d0572b7":"markdown","c6af0e91":"markdown","7661dc1f":"markdown","26b4c67b":"markdown","c897d23f":"markdown","18dc877d":"markdown","4b7eb844":"markdown","ac434a9d":"markdown","f18c18ba":"markdown","ce87faef":"markdown"},"source":{"4cd5107b":"!pip install pivottablejs","a72f3900":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom scipy import stats\nfrom scipy.stats import norm, skew\nfrom scipy.special import boxcox1p\nfrom sklearn.preprocessing import LabelEncoder\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom pivottablejs import pivot_ui","88dadf76":"data = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ndata.head()","86660fb7":"data.info()","23b67166":"data.isna().sum()*100\/len(data)","4b3fdcc6":"data.shape","00907df8":"data.columns","b0dca8da":"data['enrollee_id'].nunique()","e128004a":"data= data.drop('enrollee_id',axis=1)","e6669c5e":"data.city = data.city.apply(lambda x: int(x.split('_')[1]))","edd5c6fa":"data.gender.isna().sum()","1a654bcc":"data.gender.value_counts()","6026594b":"data.gender = data.gender.fillna('Male')","20332a37":"data.enrolled_university.isna().sum()","9497b23a":"data.enrolled_university.value_counts()","ff18944a":"data.enrolled_university = data.enrolled_university.fillna('no_enrollment')","854e680f":"data.education_level.isna().sum()","44de1a99":"data.education_level.value_counts()","882985d0":"data.education_level = data.education_level.fillna(method='ffill')","e0de06f4":"data.major_discipline.isna().sum()","6d445e2f":"data.major_discipline.value_counts()","009ae537":"data.major_discipline = data.major_discipline.fillna('STEM')","0e671d44":"data.experience.isna().sum()","328f6c67":"data.experience.value_counts()","c1b742c7":"data.experience = data.experience.fillna(method='ffill')","7ef9acac":"data.company_size.isna().sum()","2f0eb7fd":"data.company_size.value_counts()","56bafdea":"data.company_size = data.company_size.fillna(method = 'ffill')","14cab420":"data.iloc[0,8] = '50-99'","4af3885f":"data.company_size.isna().sum()","ef04a1c3":"data.company_type.unique()","58b0d15c":"data.company_type.value_counts()","2836f5a7":"data.company_type = data.company_type.fillna('Pvt Ltd')","c4f4f50c":"data.last_new_job.unique()","7da110dc":"data.last_new_job.value_counts()","66b11fed":"data.last_new_job = data.last_new_job.fillna(method = 'bfill')","af321a3f":"data.head()","07e67419":"data.describe()","b5cf2222":"sns.pairplot(data, hue='target', markers = ['s', 'o'])\nplt.plot()","9b619cf2":"plt.figure(figsize=(10,8))\nsns.clustermap(data.corr(),annot = True)\nplt.show()","5af4d102":"fx = list(data.target.value_counts().index)\nfy = data.target.value_counts().values\n\nfig = px.bar(x=fx, y=fy)\nfig.show()","5de7e7b0":"def pie_chart(data,col):\n    \n    targets = list(data[col].value_counts().index)\n    values = list((data[col].value_counts()*100\/len(data[col])).values)\n\n    fig = px.pie(\n        values=values, \n        names=targets,\n        color_discrete_sequence=['darkcyan', 'lawngreen'],\n        title=col\n    )\n    fig.show()","336c6828":"# categorical features\ncategorical_columns = list(data.select_dtypes(include=['object']).dtypes.index)\nprint(categorical_columns)","93213139":"for col in categorical_columns:\n    pie_chart(data,col)","0a98fd92":"# numeric features\nnumeric_columns = list(data.select_dtypes(exclude=['object']).dtypes.index)\nprint(numeric_columns)","f5f2af46":"plt.figure(figsize=(8,6))\nsns.distplot(data['training_hours'],fit=norm)\nplt.title('skew: {}'.format(skew(data['training_hours'])))","f7f82154":"plt.figure(figsize = (8,6))\nstats.probplot(data['training_hours'], plot = plt)\nplt.show()","bb1ef60e":"# box-cox transform lambda = 0.15 efficently\n\ndata['training_hours'] = boxcox1p(data['training_hours'], 0.15)\nplt.figure(figsize=(8,6))\nsns.distplot(data['training_hours'], fit = norm)\nplt.show()\nstats.probplot(data['training_hours'], plot = plt)\nplt.show()\nprint('skew: {}'.format(skew(data['training_hours'])))","0b22d20b":"fig = px.box(data, y=\"training_hours\")\nfig.show()","e49934b3":"data.head()","c4fe0936":"le = LabelEncoder()\ndata.gender = le.fit_transform(data['gender'])","c3cc5545":"data","82ed07f1":"le = LabelEncoder()\ndata.relevent_experience = le.fit_transform(data['relevent_experience'])","17512e77":"le = LabelEncoder()\ndata.enrolled_university = le.fit_transform(data['enrolled_university'])","20a48d54":"data.education_level.unique()","8f0cb0ec":"data.education_level.value_counts()","f6190ae4":"ordinal_education_level = {'Primary School':0, 'High School':1, 'Graduate':2, 'Masters':3, 'Phd':4}\ndata.education_level = data.education_level.map(ordinal_education_level)","3b43e0e6":"le = LabelEncoder()\ndata.major_discipline = le.fit_transform(data['major_discipline'])","a9652b04":"data.experience.value_counts()","fab7f957":"data.experience.unique()","c88d96f5":"ordinal_experience = {'<1':0, '1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, '10':10,\n                      '11':11, '12':12, '13':13, '14':14, '15':15, '16':16, '17':17, '18':18, '19':19, '20':20, '>20':21}\n\ndata.experience = data.experience.map(ordinal_experience)","c6589bb1":"data.company_size.value_counts()","31bb0a4a":"ordinal_company_size = {'<10':0, '10\/49':1, '50-99':2, '100-500':3, '500-999':4, '1000-4999':5, '5000-9999':6, '10000+':7}\ndata.company_size = data.company_size.map(ordinal_company_size)","306fa855":"le = LabelEncoder()\ndata.company_type = le.fit_transform(data['company_type'])","5ae3f241":"data.last_new_job.value_counts()","ec9ae181":"ordinal_last_new_job = {'never':0, '1':1, '2':2, '3':3, '4':4, '>4':5}\ndata.last_new_job = data.last_new_job.map(ordinal_last_new_job)","36ed59e6":"data.head()","730d1dab":"y = data.target\nX = data.drop('target',axis=1)\n\nsm = SMOTE(random_state=42)\nX, y = sm.fit_resample(X,y)","baacf1aa":"X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = 0.25, random_state=42)","af901c42":"scaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","57e07001":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nimport lightgbm as lgb","88fdef90":"models = []\nmodels.append(('Naive Bayes', GaussianNB()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier(random_state = 42)))\nmodels.append(('Random Forest', RandomForestClassifier(random_state = 42)))\nmodels.append(('SVM', SVC(gamma='auto', random_state = 42)))\nmodels.append(('XGBoost', GradientBoostingClassifier(random_state = 42)))\nmodels.append((\"CatBoost\", CatBoostClassifier(random_state = 42, verbose = False)))\nmodels.append(('GradientBoosting', GradientBoostingClassifier(random_state = 42)))\n\n# evaluate each model in turn\nresults = []\nnames = []","d694909a":"for name, model in models:\n        model.fit(X_train, y_train)\n        y_pred = model.predict(X_test)\n        accuracy = accuracy_score(y_test, y_pred)\n        print(\"{} : {}\".format(name,accuracy))","68faffb7":"lgb = lgb.LGBMClassifier(n_estimator=100, silent=False)\nlgb.fit(X_train,y_train)\ny_pred = lgb.predict(X_test)\nprint(\"LGBM Classifier Accuracy Score : {}\".format(accuracy_score(y_test, y_pred)))","3b1c99bc":"params = {\n        'subsample': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5]\n        }","4a97cadd":"xgb = CatBoostClassifier(learning_rate=0.02, n_estimators=600, verbose = False)","a63c398a":"folds = 3\nparam_comb = 5\n\nskf = StratifiedKFold(n_splits=folds, shuffle = True, random_state = 1001)\n\nrandom_search = RandomizedSearchCV(xgb, param_distributions=params, n_iter=param_comb, scoring='roc_auc', n_jobs=4, cv=skf.split(X_train,y_train), verbose=3, random_state=42)\n\nrandom_search.fit(X_train, y_train)","3b4a2245":"print(random_search.best_params_)","8be41c11":"model = CatBoostClassifier(learning_rate=0.02, n_estimators=600, verbose = False, subsample = 0.8, max_depth = 5)\nmodel.fit(X_train,y_train)\ny_pred = model.predict(X_test)\nprint(classification_report(y_test,y_pred))","cf24bac7":"y_pred = model.predict_proba(X_test)\nprint(y_pred)","eb53463f":"print(model.feature_importances_)","f55ef23a":"importances = model.feature_importances_\nfeatures = data.columns[:12]\nimp = pd.DataFrame({'Features': features, 'Importance': importances})\nimp['Sum Importance'] = imp['Importance'].cumsum()\nimp = imp.sort_values(by = 'Importance')\nimp","87b8761c":"plt.figure(figsize=(12,8))\nplt.barh(imp['Features'], imp['Importance'], color = 'g')\nl1 = plt.axhline(len(imp) - (len(imp['Features'][imp['Sum Importance'] < 0.50]) + 1.5), linestyle='-.', color = 'r')\nl2 = plt.axhline(len(imp) - (len(imp['Features'][imp['Sum Importance'] < 0.90]) + 1.5), linestyle='--', color = 'r')\nl3 = plt.axhline(len(imp) - (len(imp['Features'][imp['Sum Importance'] < 0.99]) + 1.5), linestyle='-', color = 'r')\nplt.legend(title = 'Cut-offs of acumulated importance', handles=(l1, l2, l3), labels = ('50%', '90%', '99%'))\nplt.title('Feature importance in group assignment')\nplt.show()","39e3ba35":"pivot_ui(data)","473e8d49":"# Import Libs and Data","d4654d67":"# Build Model","9a387ebc":"## Encoding","2ac73e28":"## education_level","481a027d":"## experience","a3406619":"### Scale Data","1cc6b9da":"### enrolled_university","ae159812":"### experience","1a4c4236":"### company_type","687bd25d":"## company_type","065f0da4":"# EDA","482ef781":"### major_discipline","6ab822b8":"### last_new_job","44648499":"### relevent_experience","7c347be2":"## company_size","68e8e3e5":"# Over Sampling & Train - Test Split","8c93ee8c":"### education_level","182124f6":"## enrollee_id","aa1c9216":"## Which features affects candidate decision.","6109c55a":"## Hyperparameter tuning","e61c6cdc":"I choosed CatBoostClassifier and we will find best parameters","522d33d4":"## city","09e351a8":"## enrolled_university","07bd5e67":"Interactive Pivot Table","fe6cd88b":"### company_size","784e4a7e":"## Choose Base Model","8d0572b7":"# Bonus","c6af0e91":"# Inspiration","7661dc1f":"### gender","26b4c67b":"## gender","c897d23f":"## Predict the probability of probability of a candidate will work for the company","18dc877d":"I don't want all encoding in one for loop because I'm gonna use 2 diffrent encoding.(Label Encoding, Ordinal Encoding)","4b7eb844":"## major_discipline","ac434a9d":"## last_new_job","f18c18ba":"# Data Cleaning","ce87faef":"# Feature Engineering"}}