{"cell_type":{"373574cb":"code","515c1b19":"code","e26283d4":"code","b713d267":"code","cd3fa539":"code","cf38a232":"code","f82442c7":"code","2356cfe2":"code","c1b8a81f":"code","c51fbd9b":"markdown","b44f7eec":"markdown"},"source":{"373574cb":"import numpy as np\nimport pandas as pd\n\nimport os\nfrom sklearn.model_selection import StratifiedKFold,KFold","515c1b19":"from pathlib import Path\n\ninput_path = Path('..\/input\/tabular-playground-series-sep-2021\/')\n# Load the training data and intialize constants...\ntrain = pd.read_csv(f\"{input_path}\/train.csv\")\nX_test = pd.read_csv(f\"{input_path}\/test.csv\")\nX_test.reset_index().to_feather('test_stratfold.ft')","e26283d4":"TARGET_VAR='claim'\nFOLDS=10","b713d267":"object_cols = [col for col in train.columns if 'cat' in col]\nobject_cols_idx = [train.columns.get_loc(col) for col in train.columns if 'cat' in col]\nnum_cols = list(train.select_dtypes(exclude=['object']).columns)\nprint(f\"total cols {len(train.columns)} objectCols {object_cols} num_cols[Total:{len(num_cols)}] {num_cols}\")\n# Contains only Numeric cols","cd3fa539":"skf = StratifiedKFold(n_splits=FOLDS, shuffle=True, random_state=42)\n\ntrain['kfold'] = -1\n\nfor fold, (train_idx, valid_idx) in enumerate(skf.split(X=train, y=train['claim'])):\n    train.loc[valid_idx, 'kfold'] = fold\n\n#train.to_csv('train_stratfold.csv', index=False)\ntrain.head()","cf38a232":"# write in feather format\ntrain.reset_index().to_feather('train_stratfold.ft')\n# write in parquet format \ntrain.to_parquet('train_stratfold.parquet', index=False)","f82442c7":"%%time\npd.read_feather('train_stratfold.ft')","2356cfe2":"%%time\npd.read_parquet('train_stratfold.parquet')","c1b8a81f":"from pathlib import Path\nprint(f\"File size parquet {Path('train_stratfold.parquet').stat().st_size}\") \nprint(f\"File size feather {Path('train_stratfold.ft').stat().st_size}\") ","c51fbd9b":"## Thats all folks ....","b44f7eec":"# Folding to use in other notebooks ."}}