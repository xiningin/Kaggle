{"cell_type":{"37d0ea3a":"code","6be5dc86":"code","0ee7799f":"code","7b8229e7":"code","13c7d0b7":"code","88a5c7c0":"code","b24bdaf9":"code","4c381285":"code","94a737de":"code","76a0ca1a":"code","46d2169b":"code","ca267326":"code","acceef8c":"code","ad60895a":"code","b753bf09":"code","71b82a0a":"code","06058739":"code","e4311c9e":"code","8482410b":"code","7c2991e2":"code","f7211ab7":"code","7f396c87":"code","3fc5134c":"code","a1e708f8":"code","632291dd":"code","4d3bb255":"code","9d5b2e1b":"code","b62a5628":"code","97d28ca7":"code","2d0d70b5":"code","e7f08fec":"code","075662b3":"code","3df97310":"markdown","09d6cf22":"markdown","dfc1abdd":"markdown","afc18a87":"markdown","1961abfd":"markdown","d0b52ba2":"markdown","f058837e":"markdown","656aedb2":"markdown","49155990":"markdown","076599c3":"markdown","42979289":"markdown","1cb52626":"markdown","3398019f":"markdown","2be34e2d":"markdown","d270b66c":"markdown","aff4f780":"markdown","9c2e98c9":"markdown","a79e2f16":"markdown","3a8b3653":"markdown","9e5ee86a":"markdown","a2eccae5":"markdown"},"source":{"37d0ea3a":"import pandas as pd\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Allows to display all of the outputs of a cell\nfrom IPython.display import display\n\n# Set float data type format\npd.options.display.float_format = '{:,.2f}'.format\n# Set the maximum number of row to be displayed\npd.options.display.max_rows = 999\n\n# Set global visualisation settings\nplt.rc('font', size=14)   ","6be5dc86":"df = pd.read_csv(\"..\/input\/london-crime-jan-2020\/2020-01-metropolitan-street.csv\",  delimiter=',')\n\n# Getting the preview of dataset\ndisplay(df.head())","0ee7799f":"# Getting Data Type of each column\nprint('\\n', df.dtypes, '\\n')","7b8229e7":"# Getting sum of missing value in each column\nprint(df.isnull().sum())","13c7d0b7":"df = df.drop(columns= \"Crime ID\")\ndf = df.drop(columns= \"Context\")\ndf1 = df.dropna(subset=['Latitude'])          \ndisplay(df1.head(10))","88a5c7c0":"print('\\n',df1.isnull().sum())","b24bdaf9":"# Returns number of elements in  df1\nprint(\"Number of elements in the new dataset df1:\", df1.size, '\\n')\n\n# Returns number of rows by axes[1] and columns by axes[0],\nprint(len(df.axes[1]), str('*'),len(df.axes[0]), '\\n')\nprint(len(df1.axes[1]), str('*'),len(df1.axes[0]), '\\n')\nprint(len(df.axes[0])-len(df1.axes[0]), '\\n')","4c381285":"## Grouping variables of each column\nprint(\"\\n\\nGrouping by Month\\n\")\ndisplay(df1.groupby('Month').count())\nprint(\"\\nGrouping by Reported by\\n\")\ndisplay(df1.groupby('Reported by').count())\nprint(\"\\nGrouping by Falls within\\n\")\ndisplay(df1.groupby('Falls within').count())","94a737de":"df1 = df1.drop(columns= ['Month', 'Reported by', 'Falls within'])\n\n# Getting preview of updated dataset\ndisplay(df1.iloc[1:5,0:])","76a0ca1a":"print(\"\\nGrouping by LSOA name\\n\",\n      df1.groupby('LSOA name').count()['Crime type']\n      .sort_values(ascending = False)\n      .iloc[1:10,])","46d2169b":"df1['LSOA name'] = df1['LSOA name'].str.strip()\n\n# Removing last four character\ndf1['LSOA'] = df1['LSOA name'].str[:-5]\n\n#We are creating another column 'LSOA' which contains only borough names without code\nprint('\\n', df1['LSOA'].unique())","ca267326":"print('\\n','Total number of boroughs and other areas in Greater London under jurisdiction of Metropolitian Police: ', \n      len(df1['LSOA'].unique()))\n","acceef8c":"# Preview of LSOA column added \ndisplay( df1.iloc[1:5,4:])","ad60895a":"print(\"\\nNumber of crimes by LSOA \\n\",\n      df1.groupby('LSOA').count()['Crime type']\n      .sort_values(ascending = False)\n      .iloc[0:30,])","b753bf09":"print('\\n','Datatype of LSOA: ',df1['LSOA'].dtypes)\n\n# Creating dataframe from series created by groupby function for LSOA\nseries_lsoa = df1.groupby('LSOA').count()['Crime type'].sort_values(ascending = False)\ndf_lsoa = pd.DataFrame({'LSOA':series_lsoa.index, 'Total_Crimes':series_lsoa.values})\n\nprint('\\n', 'Columns Names: ', df_lsoa.columns)\nprint('\\n', 'Columns Names: ', df_lsoa.columns, '\\n')\n\n\nprint(df_lsoa.head())","71b82a0a":"# Calculating mean, median, mode of no crimes by LSOA\n\nprint('\\n', 'Mean :', df_lsoa['Total_Crimes'].mean())\nprint('\\n', 'Median :', df_lsoa['Total_Crimes'].median())\nprint('\\n', 'Mode :', df_lsoa['Total_Crimes'].mode())\n","06058739":"## Plotting bar chart in terms of absolute number of crime by borough in descending order \nseries_lsoa_1 = df1.groupby('LSOA').count()['Crime type'].sort_values(ascending = False).iloc[0:30,].reset_index()\n\nsn.barplot(x='LSOA', y= 'Crime type', data=series_lsoa_1)\nplt.ylabel('No. of crimes')\nplt.xticks(series_lsoa_1.index, rotation = 'vertical', size = 10)\n\nplt.yticks(ticks= np.arange(0,8000,1000), labels= np.arange(0,8000,1000))\n#plt.gca().invert_yaxis()                                    # Optional & use to invert chart through X=0\n#plt.tight_layout()\nplt.show()","e4311c9e":"df_lsoa.boxplot(column= 'Total_Crimes')\n\nsn.set_theme(style='whitegrid')\nsn.boxplot(x = df_lsoa['Total_Crimes'])\nplt.show()\n\nQ1 = df_lsoa.quantile(0.25)\nQ3 = df_lsoa.quantile(0.75)\nIQR = Q3 - Q1\n\nprint('\\n', 'Total number of outliers:', '\\n')\n((df_lsoa < (Q1 - 1.5 * IQR)) | (df_lsoa > (Q3 + 1.5 * IQR))).sum()","8482410b":"print(\"\\nQ2 - Create dataframe having type of crimes in rows and Boroughs in columns and do further analysis?\")\n\n# Types and number of unique crimes happening in London Boroughs\nprint('\\n','Types of Crime: ',df1['Crime type'].unique())\nprint('\\n', 'Total number of crime types: ' ,len(df1['Crime type'].unique()))","7c2991e2":"series_crimes = df1.groupby('Crime type').count()['LSOA'].sort_values(ascending = False).reset_index()\nprint(\"\\nNumber of crimes by crime type\\n\")\nprint(series_crimes)","f7211ab7":"## Plotting bar chart in terms of absolute number of crime types\n\nsn.barplot(x='Crime type', y= 'LSOA', data=series_crimes)\nplt.ylabel('No. of crimes')\nplt.xticks(series_crimes.index, rotation = 'vertical', size = 8)\nplt.yticks(ticks= np.arange(0,20000,2000), labels= np.arange(0,20000,2000))\n#plt.gca().invert_yaxis()                                    # Optional & use to invert chart through X=0\nplt.tight_layout()\nplt.show()\n\ndisplay(series_crimes.head(5).sum())\ndisplay(series_crimes.sum())","7f396c87":"## Plotting pie chart in terms of percentage of crime types\n\nprint(series_crimes.values[:,1])\nfig1, ax1 = plt.subplots()\nax1.pie(series_crimes.values[:,1], labels=series_crimes.values[:,0], autopct='%.2f%%')\nax1.axis('equal')\nplt.show()","3fc5134c":"# Types of crimes by each borough\n\nprint('\\n',\"Types of crimes by each borough:\", '\\n')\ntable_1 = df1.pivot_table( columns= ['Crime type'], index= ['LSOA'], aggfunc= 'count')\n\n\ndisplay(table_1.iloc[0:20,0:], '\\n')\n","a1e708f8":"# Converting pivot table into dataframe\n\ntable_1.columns = table_1.columns.droplevel(0)         #remove LSOA code heading\ntable_1.columns.name = None                            #remove Crime type label\ntable_1 = table_1.reset_index()                        #index to columns","632291dd":"# As duplicate numerous columns were generated for each crime, we need to remove those\n\ntable_1 = table_1.loc[:,~table_1.columns.duplicated()]\n\n#table_1.to_csv('table_1.csv', index= False )\ndisplay(table_1.iloc[0:20,0:], '\\n')\nprint(table_1.columns)","4d3bb255":"# We can now sort boroughs with according to asceding order of certain crime type\n# here we have sorted according to crime type = 'Violence and sexual offences'\n\ndisplay(table_1.sort_values(by = ['Violence and sexual offences'], ascending= False).iloc[0:20, 0:])","9d5b2e1b":"print(\" Q3 Find correlation between different crime type?\", '\\n')\n\n# First we are finding correlation between\nprint('Correlation between Public order and Shoplifting:', table_1['Public order'].corr(table_1['Shoplifting']))\nprint('Correlation between Drugs, and Violence and sexual offences:', table_1['Drugs'].corr(table_1['Violence and sexual offences']), '\\n')\n","b62a5628":"# Printing correlation among all the columns and saving it in csv format\ncr = table_1.corr(method = 'pearson')\ndisplay(cr)\n\n#cr.to_csv('Correlation_Crimes.csv')","97d28ca7":"print(\" Q4 Analyze crime outcome by crime type?\", '\\n')\nprint('\\n','Last outcome categories: ' ,df1['Last outcome category'].unique())\nprint('\\n', 'Total number of Last outcome categories: ' ,len(df1['Last outcome category'].unique()), '\\n')","2d0d70b5":"# Types of crimes by each outcome category\n\ntable_2 = df1.pivot_table( columns= ['Crime type'], index= ['Last outcome category'], aggfunc= 'count')\ndisplay(table_2.iloc[0:,0:])","e7f08fec":"# Converting pivot table into dataframe\ntable_2.columns = table_2.columns.droplevel(0)         #remove LSOA code heading\ntable_2.columns.name = None                            #remove Crime type label\ntable_2 = table_2.reset_index()                        #index to columns\n\n# As duplicate numerous columns were generated for each crime, we need to remove those\ntable_2 = table_2.loc[:,~table_2.columns.duplicated()]\n\ntable_2 = table_2.fillna(0)\ndisplay(table_2.iloc[0:,0:])\n\n#table_2.to_csv('table_2.csv', index= False )","075662b3":"# Getting sum of total crimes by outcome category\n\ntable_2['Sum'] = table_2.sum(axis =1)\ndisplay(table_2)","3df97310":"<a id=\"s_2\"><\/a>\n# 2. Data Cleaning \n\nHere we will resolve missing value as well as duplicate entries problems in the dataset.","09d6cf22":"# 3.5 Analyzing crime outcome by crime type\n<a id=\"s_3_5\"><\/a>\n\n","dfc1abdd":"**We can infer from the above table that almost all of the 'Outcome Category' falls into either 'Status update unavailable' or 'Investigation complete; no suspect identified'. It means that in most of the cases the criminal is not caught in the same month as case gets registered or investigation is complete without any suspect identified**","afc18a87":"# 3. ANALYSIS\n<a id=\"s_3\"><\/a>\n\n","1961abfd":"Now we will check the remaining missing values present in the dataset. ","d0b52ba2":"As 'Borough' names and other localities names of Greater London are embedded within 'LSOA name' column but by observing we found that 'Borough' are divided into areas according to jurisdiction\/administration into areas denoted by the last four characters after each 'LSOA name' entry. (i.e Westminister - Westminister 018A, Westminster 013B etc)\n\nSo, we are removing those 4 character code at the end of each 'LSOA name' entries to make filter out data according to boroughs.","f058837e":"****Now we can sort and group the number of crimes according to 'Borough' names as required. We can infer from the below result which boroughs have most crimes registered within jurisdiction of Metropolitian police during Jan 2020.****\n","656aedb2":"As we are getting 544 missing values in same rows across Longitude, Latitude, LSOA Code and LSOA name.\nWe are removing these rows as they consist of only 0.5% (544\/90979) of the dataset. But Last Outcome Category got 17,548 missing values which can't be ignored. Moreover, all of it belongs to \"Anti-social\" crime type (got to know from observing the pattern in csv)\n\nWe are also dropping 'Context' also as it has missing values in all rows. \nWe are dropping Crime ID because it is not used in our analysis and in other rows covered than above\n","49155990":"Comparing the size of the dataset before and after the removal of aforementioned columns","076599c3":"**From the above table we can observe that 'Criminal damage and arson' and 'Public order' is having correlation of 0.95 with 'Violence and sexual offences'. Inference can be drawn that areas\/boroughs where 'Criminal damage and arson' and 'Public order' is being committed will have high chances of 'Violence and sexual offences' being committed at a magnitude of 0.95**\n\nSimilar inferences can be drawn between crime types by looking at above table. ","42979289":"**We can infer that 'Violence and sexual offences' is the highest reported crime type to Metropolitian Police. Moreover, we can top five crime types contributes significantly 70.81% (64,042\/90,435) of total crimes being reported.**\n","1cb52626":"# 3.4 Find correlation between different crime type?\n<a id=\"s_3_3\"><\/a>\n","3398019f":"# 3.3 Types of crime borough wise\n<a id=\"s_3_2\"><\/a>\n","2be34e2d":"By observing the result we can conclude that all the aforementioned three columns have the same entires (i.e. Month: 2020-01, Reported by: Metropolitan Police Service, Falls within: Metropolitan Police Service).\n\nTherefore, we can drop these columns from the dataset as we can't derive any inference out of them. ","d270b66c":"Grouping certain columns to check whether the some columns got duplicate entries","aff4f780":"# 3.2 Outlier Anlaysis\n<a id=\"i_3\"><\/a>\n\nHere will be finding the number of outliers boroughs\/areas of Greater London area. ","9c2e98c9":"# 4. Conclusion\n<a id=\"s_4\"><\/a>\n\nBased on the analysis we can draw following inferences - \n* As Inner London Boroughs is having highest crime rate with respect to Outer London Boroughs, Metroplitian police can allocate resources accordingly.\n* Top five crime type constitutes around 71% of the cases being reported. These five crime types should be addressed as well as prevention mechanism of these should be more weighted upon.\n* Correlation between crime types can be used for resource allocation on the basis of crime type and it can also be used to roughly predict areas\/boroughs which crime type is most likely to occur on the basis of crime type being recently reported. \n* Outcome category pivot table can be used to monitor at which stage crime reports are usually slows down or resolved. Also, we can allocate resources on the basis of monitoring which crime types suspects are more likely to be identified or less likely to be identified. ","a79e2f16":"From the above boxplot, we can infer that 22 boroughs\/areas out of 126 total boroughs\/areas are outside the Q3 + 1.5*IQR range, which means they are outliers. In other words, top 22 boroughs are responsible for highest number of crimes. \n\nAforementioned statement is further validated by the fact the median and mode of total crimes boroughs\/area wise is 2 and 0 respectively. Moreover, due to this reason boxplot is extremely right skewed.  ","3a8b3653":"# 1. Introduction\n<a id=\"s_1\"><\/a>\n\nThis notebook analyzes the dataset of crimes recorded by Metropolitian Police over the Greater London area for January 2020. We will be doing data cleaning and doing exploratory analysis to derive inferences from the results.\n\n![](https:\/\/menrus.co.uk\/wp-content\/uploads\/2020\/05\/MET-POLICE-BCU.jpg)\n\nReference of [Data source](https:\/\/data.police.uk\/data\/)\n\n**Table of Contents**\n\n* [1. Introduction](#s_1)\n* [2. Data Cleaning](#s_2)\n* [3. Analysis](#s_3)\n    - [Boroughs having high crime rates](#s_3_1)\n    - [Outlier Analysis](#i_3)\n    - [Types of crime borough wise](#s_3_2)\n    - [Correlation between different crime type](#s_3_3)\n    - [Analyzing crime outcome by crime type](#s_3_5)\n* [4. Conclusion](#s_4)","9e5ee86a":"# 3.1 Which boroughs of London have high crime rates?\n<a id=\"s_3_1\"><\/a>\n\n","a2eccae5":"Above we have got 30 boroughs of Greater London arranged in descending order of crimes reported. We can observe that 'Westminister' borough has got significantly higher number of crimes (nearly double of second highest borough 'Camden').\n\nWe can observe that top five borough having the highest crime belongs to Inner London. Moreover, 8 out of top 10 boroughs belongs to Inner London. \n\n![Greater London](https:\/\/thumbs.dreamstime.com\/z\/map-london-boroughs-10241562.jpg)\n"}}