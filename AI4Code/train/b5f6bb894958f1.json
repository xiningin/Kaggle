{"cell_type":{"f9598fe6":"code","a227b77b":"code","ba47b566":"code","d0249477":"code","90038ef6":"code","1e676fa9":"code","a7c24941":"code","bceecaf2":"code","fc181f12":"code","1223cc96":"code","e83f4fbc":"code","8a9347cb":"code","dcf67e92":"code","188ab74f":"code","84b72096":"code","7f34f5a2":"code","dc7d68d6":"code","ee286761":"code","15099af6":"code","e6404671":"code","c8350882":"markdown","a38e9400":"markdown","beaf0b48":"markdown","169d8460":"markdown","c27a565a":"markdown","59b95710":"markdown","3bd4aa4b":"markdown","543c4173":"markdown"},"source":{"f9598fe6":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\n%matplotlib inline \nimport seaborn as sns\nimport datetime\nimport scipy.stats as stats","a227b77b":"# Reading data:\ncustomers = pd.read_csv(\"..\/input\/olist_customers_dataset.csv\")\ngeoloc = pd.read_csv(\"..\/input\/olist_geolocation_dataset.csv\")\nitems = pd.read_csv(\"..\/input\/olist_order_items_dataset.csv\")\npayments = pd.read_csv(\"..\/input\/olist_order_payments_dataset.csv\")\nreviews = pd.read_csv(\"..\/input\/olist_order_reviews_dataset.csv\")\norders = pd.read_csv(\"..\/input\/olist_orders_dataset.csv\")","ba47b566":"print(\"Customers database contains\", customers.shape[0], \"rows and\", customers.shape[1], \"columns.\")\ncustomers.head()","d0249477":"cust = customers[\"customer_unique_id\"].nunique()\nprint(\"Number of unique customers:\",cust)","90038ef6":"cities = customers[\"customer_city\"].nunique()\nc1 = customers.groupby('customer_city')['customer_id'].nunique().sort_values(ascending=False)\nprint(\"There are\",cities,\"unique cities in the database. The TOP 10 cities are:\")\nc2 = c1.head(10)\nprint(c2)\nprint(\"\\nTOP 10 cities covers\", round(c2.sum()\/customers.shape[0]*100,1),\"percent of all the orders.\")\nplt.figure(figsize=(16,8))\nc2.plot(kind=\"bar\",rot=0)","1e676fa9":"zips = customers.groupby('customer_zip_code_prefix')['customer_id'].nunique().sort_values(ascending=False)\nprint(\"Products were delivered the most frequently,\",zips.iloc[0],\"times, to the\", zips.index[0], \"zip code.\")","a7c24941":"payments.head()","bceecaf2":"payments[\"payment_value\"].describe()","fc181f12":"orders.head()","1223cc96":"#orders.dtypes\norders_mod = orders.copy()\norders_mod[\"order_purchase_timestamp\"] = pd.to_datetime(orders[\"order_purchase_timestamp\"], format='%Y-%m-%d %H:%M:%S')\norders_mod[\"order_delivered_carrier_date\"] = pd.to_datetime(orders[\"order_delivered_carrier_date\"], format='%Y-%m-%d %H:%M:%S')\norders_mod[\"order_delivered_customer_date\"] = pd.to_datetime(orders[\"order_delivered_customer_date\"], format='%Y-%m-%d %H:%M:%S')\norders_mod[\"order_estimated_delivery_date\"] = pd.to_datetime(orders[\"order_estimated_delivery_date\"], format='%Y-%m-%d %H:%M:%S')\norders_mod.dtypes\n#new.head()","e83f4fbc":"counts = orders_mod.set_index(\"order_purchase_timestamp\").groupby(pd.Grouper(freq='D')).count()\nfig = plt.figure(figsize=(16,8))\nax = fig.gca()\ncounts.plot(y = \"order_id\", use_index=True, ax=ax)","8a9347cb":"print(payments.describe())\nprint(payments[\"payment_type\"].value_counts())\ncredit = payments[payments[\"payment_type\"]==\"credit_card\"]","dcf67e92":"fig, ax = plt.subplots(figsize=(16,8))\ncredit.hist(column = \"payment_installments\", bins = credit[\"payment_installments\"].max(), ax=ax)\nplt.xlabel(\"Number of installments\")\nplt.ylabel(\"Counts\")\nplt.title(\"Histogram of installments count\")","188ab74f":"mean = payments[\"payment_value\"].mean()\nstd = payments[\"payment_value\"].std()\nskew = payments[\"payment_value\"].skew()\nkurt = payments[\"payment_value\"].kurtosis()\n\ntext1 = '$\\mu=$' + str(round(mean,2))\ntext2 = '$\\sigma=$' +str(round(std,2))\ntext3 = '$skewness=$' + str(round(skew,2))\ntext4 = '$kurtosis=$' + str(round(kurt,2))\ntext = text1 + \"\\n\" + text2 + \"\\n\" + text3 + \"\\n\" + text4\n\nq95 = payments[\"payment_value\"].quantile(.95)\npayments_q95 = payments[payments[\"payment_value\"]<q95]\n\npayments_q95.hist(column = \"payment_value\", bins = 100, figsize=(15,8), rwidth=0.9)\nplt.axvline(mean, color='k', linestyle='--')\nplt.text(mean+10, 2900, text, fontsize=12)\nplt.xlabel(\"Payment value\")\nplt.ylabel(\"Counts\")\nplt.title(\"Histogram of payments values (cut at 95th quantile)\")","84b72096":"fig, ax = plt.subplots(figsize=(9, 8), subplot_kw=dict(aspect=\"equal\"))\nexplode = (0.1, 0, 0, 0)\ncolors = ['#f45a5a', '#449dfc', '#93f96d', '#f9c86d']\nlegend = [\"Credit Card\", \"Boleto\", \"Voucher\", \"Debit Card\"]\n\np = payments[\"payment_type\"][payments[\"payment_type\"] != \"not_defined\"].value_counts()\np.plot(kind=\"pie\", legend=False, labels=None, startangle=0, explode=explode, autopct='%1.0f%%', pctdistance=0.6, shadow=True, textprops={'weight':'bold', 'fontsize':16}, \n       colors=colors, ax=ax)\nax.legend(legend, loc='best', shadow=True, prop={'weight':'bold', 'size':12}, bbox_to_anchor=(0.6, 0, 0.5,1))\nplt.title(\"Paymement methods\", fontweight='bold', size=16)\nplt.ylabel(\"\")","7f34f5a2":"print(orders.columns)","dc7d68d6":"# Data preparation\ndef convert(db,columns_list):\n    for column in columns_list:\n        db[column] = pd.to_datetime(db[column])\n\norders_mod = orders.copy()\ncols = ['order_purchase_timestamp','order_approved_at','order_delivered_carrier_date','order_delivered_customer_date','order_estimated_delivery_date']\n\nconvert(orders_mod,cols)\norders_mod['delivery_time'] = orders_mod['order_delivered_carrier_date'] - orders_mod['order_purchase_timestamp']\nq95 = orders_mod['delivery_time'].quantile(.95)\n\ndelivered = orders_mod[orders_mod[\"order_status\"]==\"delivered\"]\ndelivered.set_index(delivered['order_purchase_timestamp'], inplace = True)\n\ndelivered = delivered.sort_index()\ndelivered[\"dts\"] = delivered[\"delivery_time\"].dt.total_seconds()\ndelivered = delivered[\"dts\"].resample(\"D\").mean()\ndelivered = round(delivered\/86400,2)\ndelivered = delivered[delivered<8]\nprint(delivered.describe())\nm_del = delivered.mean()","ee286761":"ax = delivered.plot(figsize=(16,8))\nplt.axhline(m_del,color=\"k\",linestyle='--')\nplt.xlabel(\"Date\")\nplt.ylabel(\"Mean delivery time in days\")\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))","15099af6":"deltas = delivered - m_del\nax1 = plt.subplots(figsize=(10, 8))\ndeltas.hist(bins=40, align=\"left\", rwidth=0.9)\nplt.rcParams[\"figure.figsize\"] = (5,4)\nplt.xlabel(\"Delivery time delta to mean [days]\")\ntext1 = '$\\mu=$' + str(round(deltas.mean(),2))\ntext2 = '$\\sigma=$' +str(round(deltas.std(),2))\ntext3 = '$skewness=$' + str(round(deltas.skew(),2))\ntext4 = '$kurtosis=$' + str(round(deltas.kurt(),2))\ntext = text1 + \"\\n\" + text2 + \"\\n\" + text3 + \"\\n\" + text4\nplt.text(1,30,text, fontsize=12)","e6404671":"#Is this a normal distribution?\nax1 = plt.subplots(figsize=(8, 8))\nres = stats.probplot(deltas, dist=\"norm\", plot=plt)\nplt.grid(True)","c8350882":"The most customers come from Sao Paulo. This is the biggest city in Brazil as well as in the entir South America","a38e9400":"**ANALYSIS OF THE ORDERS DATABASE**","beaf0b48":"**OLIST - EXPLORATORY DATA ANALYSIS**\n\n\nIn this kernel we will explore database of e-commerce company Olist.\n\n\n**IMPORTING NECESSARY LIBRARIES**\n\nI will be using numpy, pandas, matplotlib as well as seaborn and datatime.","169d8460":"From the graph above we can see that there is a peak in the region of Christmas.","c27a565a":"**UNDER CONSTRUCTION**","59b95710":"**READING DATABASES**","3bd4aa4b":"**ANALYSIS OF THE CUSTOMERS DATABASE**","543c4173":"**ANALYSIS OF DELIVERY TIMES**"}}