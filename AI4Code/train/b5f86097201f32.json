{"cell_type":{"1bf4e761":"code","ca305c8b":"code","8858552b":"code","c2372bd6":"code","3d7b1ab9":"code","83cfa759":"code","372635ab":"code","ec791f4c":"code","42b51ed6":"code","8d730cf4":"code","d7595cc9":"code","c6a6ef2b":"code","66dced64":"code","8f5ce00e":"code","4d585c2e":"code","4f4a9bce":"code","097e4f18":"code","c6fd7cf0":"code","e0a23f7f":"code","3f0f1318":"code","813acea6":"code","eb3c7d06":"code","5c67e96b":"code","b57e4ecb":"code","b42f73c9":"code","baba6576":"code","5e9145a2":"code","ec503a5f":"code","94fc09f4":"code","ef5ed0e5":"code","2f866b7e":"code","0db8c840":"code","58cb0b11":"code","6dd984be":"code","846e5753":"code","30618b7e":"code","4edb5bdc":"code","641faae8":"code","3004346c":"code","faaf2ec6":"code","47a650e0":"code","806a07db":"code","00dcd25e":"code","2491c3b2":"code","ea8ae862":"code","2f38bc92":"markdown","364103fb":"markdown","58e10bcc":"markdown","94f26562":"markdown","82629df0":"markdown","e4eb0bcc":"markdown","d6be92ca":"markdown","f492d2e7":"markdown","e239f656":"markdown","e3ea5578":"markdown","e5e9b242":"markdown","337a4722":"markdown"},"source":{"1bf4e761":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca305c8b":"import matplotlib.pyplot as plt","8858552b":"# Loading all the data frames\n# Cleaning all the column names to snake case\nannual_sales = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/AnnualTicketSales.csv\")\nannual_sales.columns = annual_sales.columns.str.strip().str.lower().str.replace(' ', '_')\n\nhigh_gross = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/HighestGrossers.csv\")\nhigh_gross.columns = high_gross.columns.str.strip().str.lower().str.replace(' ', '_')\n\npop_type = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/PopularCreativeTypes.csv\")\npop_type.columns = pop_type.columns.str.strip().str.lower().str.replace(' ', '_')\n\ntop_dist = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopDistributors.csv\")\ntop_dist.columns = top_dist.columns.str.strip().str.lower().str.replace(' ', '_')\n\ntop_genre = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGenres.csv\")\ntop_genre.columns = top_genre.columns.str.strip().str.lower().str.replace(' ', '_')\n\ntop_rate = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGrossingRatings.csv\")\ntop_rate.columns = top_rate.columns.str.strip().str.lower().str.replace(' ', '_')\n\ntop_source = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGrossingSources.csv\")\ntop_source.columns = top_source.columns.str.strip().str.lower().str.replace(' ', '_')\n\ntop_method = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopProductionMethods.csv\")\ntop_method.columns = top_method.columns.str.strip().str.lower().str.replace(' ', '_')\n\nmovie_count = pd.read_csv(\"..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/WideReleasesCount.csv\")\nmovie_count.columns = movie_count.columns.str.strip().str.lower().str.replace(' ', '_')","c2372bd6":"# Looking for null values and cleaning\nannual_sales.info()\nannual_sales.isnull().sum()","3d7b1ab9":"annual_sales = annual_sales.drop(['unnamed:_5'], axis=1)\n","83cfa759":"high_gross.isnull().sum()\n\nbool_ser = pd.isnull(high_gross['genre'])\nhigh_gross[bool_ser]","372635ab":"print(top_genre['genres'].unique())","ec791f4c":"high_gross.loc[24, 'genre'] = 'Action'\nhigh_gross.loc[25, 'genre'] = 'Action'\nhigh_gross.loc[26, 'genre'] = 'Action'","42b51ed6":"high_gross[24:]","8d730cf4":"pop_type.info()\npop_type.isnull()","d7595cc9":"pop_type.drop(9, inplace = True)","c6a6ef2b":"top_dist.info()","66dced64":"top_genre.info()","8f5ce00e":"top_rate.info()","4d585c2e":"top_source.info()","4f4a9bce":"top_method.info()","097e4f18":"movie_count.info()","c6fd7cf0":"movie_count = movie_count.drop(['unnamed:_9'], axis=1)","e0a23f7f":"annual_sales['tickets_sold'] = annual_sales['tickets_sold'].str.replace(',', '').astype(int)","3f0f1318":"\nannual_sales['total_box_office'] = annual_sales['total_box_office'].str.replace('$', '').str.replace(',' ,'').astype(int)\nannual_sales['total_inflation_adjusted_box_office'] = annual_sales['total_inflation_adjusted_box_office'].str.replace('$', '').str.replace(',' ,'').astype(int)\nannual_sales['average_ticket_price'] = annual_sales['average_ticket_price'].str.replace('$', '').astype(float)\n","813acea6":"annual_sales.info()","eb3c7d06":"annual_sales.plot(x='year', y='tickets_sold')\nplt.title('Tickets Sold per Year')\nplt.ylabel('Count in Billion')\nplt.xlabel('Year')","5c67e96b":"annual_sales.plot(x='year', y='total_inflation_adjusted_box_office')\nplt.xlabel('Year')\nplt.ylabel('Box office in $10 Billion')\nplt.title('Inflation Adjusted Total Box Office')\n","b57e4ecb":"annual_sales.plot(x='year', y='total_box_office')\nplt.xlabel('Year')\nplt.ylabel('Box office in $10 Billion')\nplt.title('Total Box Office')","b42f73c9":"annual_sales.plot(x='year', y='average_ticket_price')\nplt.axis([1995,2021,0,10])\nplt.title('Average Ticket Price')\nplt.xlabel('Year')\nplt.ylabel('Price in $')","baba6576":"high_gross['total_for_year'] = high_gross['total_for_year'].str.replace('$','').str.replace(',','').astype(int)","5e9145a2":"high_gross['total_in_2019_dollars'] = high_gross['total_in_2019_dollars'].str.replace('$','').str.replace(',','').astype(int)\nhigh_gross['tickets_sold'] = high_gross['tickets_sold'].str.replace(',','').astype(int)","ec503a5f":"high_gross['movie_year'] = high_gross['movie']+ '(' + high_gross['year'].astype(str) + ')'","94fc09f4":"fig = plt.figure()\nax1 = fig.add_subplot(111)\nax1.plot('movie_year', 'total_for_year', data=high_gross)\nax1.set_xticks(np.arange(len(high_gross['movie_year'])))\nax1.set_xticklabels(high_gross['movie_year'])\n\nplt.xticks(rotation=90)\nplt.title('Box office of Highest Grossing Movies')\nplt.xlabel('Movie(Year)')\nplt.ylabel('Box office in $100 Million')","ef5ed0e5":"fig = plt.figure()\nax1 = fig.add_subplot(111)\nax1.plot('movie_year', 'total_in_2019_dollars', data=high_gross)\nax1.set_xticks(np.arange(len(high_gross['movie_year'])))\nax1.set_xticklabels(high_gross['movie_year'])\n\nplt.xticks(rotation=90)\nplt.title('Box office of Highest Grossing Movies(in 2019$)')\nplt.xlabel('Movie(Year)')\nplt.ylabel('Box office in $100 Million')\n","2f866b7e":"plt.plot('movie_year', 'tickets_sold', data=high_gross)\nplt.xticks(rotation=90)\nplt.title('Tickets Sold of Highest Grossing Movies')\nplt.xlabel('Movie(Year)')\nplt.ylabel('Tickets sold in 10 Million')\n","0db8c840":"genre_count = high_gross['genre'].value_counts(ascending=True)\ngenre_count","58cb0b11":"plt.pie(genre_count, labels=['Drama', 'Action', 'Adventure'],autopct='%1.1f%%')\nplt.title('Genres pf Highest Grossing Movies')","6dd984be":"top_genre.head()","846e5753":"top_genre['average_gross'] = top_genre['average_gross'].str.replace('$','').str.replace(',','').astype(int)","30618b7e":"top_genre.plot.bar(x='genres', y='average_gross')\nplt.title('Average Gross of Each Genre')\nplt.xlabel('Genres')\nplt.ylabel('in $10 Million')","4edb5bdc":"pop_type['movies'] = pop_type['movies'].str.replace(',','').astype(int)","641faae8":"pop_type1 = pop_type[['creative_types', 'movies']]","3004346c":"pie = plt.pie('movies', data=pop_type, autopct='%1.1f%%', pctdistance=0.8, radius=1.2)\nlabels=pop_type['creative_types']\nplt.title('Top Creative Types', weight='bold', size=14)\nplt.legend(pie[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=10, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.1, right=0.6)","faaf2ec6":"movie_count['total'] = movie_count['total_major_6'] + movie_count['total_other_studios']","47a650e0":"plt.plot('year', 'total_other_studios', data=movie_count, marker='o', color='dodgerblue', ls='dashed')\nplt.plot('year', 'total_major_6', data=movie_count, marker='*', color='pink', ls='dashed')\nplt.plot('year', 'total', data=movie_count, marker='X', color='darkred')\nplt.legend()\nplt.xlabel('Year')\nplt.ylabel('Movie Count')\nplt.title('Movie Counts per Year')\nplt.axis([1995, 2021, 0, 200])","806a07db":"pie2 = plt.pie('movies', data=top_dist, autopct='%1.1f%%', pctdistance=0.8, radius=1.2)\nlabels=top_dist['distributors']\nplt.title('Top Distributors', weight='bold', size=14)\nplt.legend(pie2[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=10, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.1, right=0.6)","00dcd25e":"top_dist['market_share'] = top_dist['market_share'].str.replace('%','').astype(float)","2491c3b2":"plt.bar('distributors', 'market_share', data=top_dist)\nplt.xticks(rotation=90)\nplt.title('Market Share by Top Distributors')\nplt.ylabel('Market Share in %')","ea8ae862":"plt.bar('distributors', 'movies', data=top_dist)\nplt.xticks(rotation=90)\nplt.title('Movies Production by Top Distributors')\nplt.ylabel('Movies')","2f38bc92":"Contemporary Fiction is the most common creative type among all, with more than half of the movies in theatre are of this type.","364103fb":"## Introduction\n\nThis notebook focuses on simple exploration of the datasets about Hollywood Movie Market from 1995-2021.\n\nWe would clean the datasets and create graphs to visualise interesting data.","58e10bcc":"We have identified 3 rows with null value under column 'genre'. We would try to replace the null value with the correct genre. First, we have to check what genre do we have.","94f26562":"## Visualisations\n\nAs shown above, most of the money values are not in integer\/float type. We would change them all to appropriate data type for further analysis","82629df0":"Due to COVID-19 pandemic, figures on 2020 and 2021 are highly skewed. We would exclude them from the discussion.\n\nAs showwn in above line graphs, we can see there is a downward trend of total tickets sold per year after peaking at 2003. This trend correspond to similar trend seen in Inflation adjusted total box office.\n\nThough we see an increasing trend in Total Box office, the trend is likely due to the ever increading ticket price, as shown below.","e4eb0bcc":"Excluding the pandemic-ridden years 2020 and 2021, we see quite a steady trend of movie production per year, with a peak at 2007.\n\nThroughout the years, the 6 major distributors are producing less movies, with a slight upward trend of productions from other studios.","d6be92ca":"Adventure genre is the most money-making genre among all listed.","f492d2e7":"The increasing trend in box office of highest grossing movie of each year is most likely attritbuted to inflation.","e239f656":"According to Wikipedia and IMDB, all the three movies could be classified as 'Action' genre.","e3ea5578":"Among the highest grossing movies, Adventure is the most common type, followed by Action and Drama.\n\nBut note, since each movie is categorised as single genre, this could lead to biased result, since movies sometimes could be of multiple genre at the same time.","e5e9b242":"Although Warner Brothers produces the highest number of movies, Walt Disney is having the largest market share.","337a4722":"Column 'unnamed_5' contains only null value. We would drop this column."}}