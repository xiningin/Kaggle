{"cell_type":{"58e5372a":"code","875841df":"code","8b554977":"code","cfa584ea":"code","3681f9ad":"code","738941ff":"code","ebd41697":"code","39fc3a1c":"code","2b1534ef":"code","9b96a05a":"code","7c1055bb":"code","58d7d81a":"code","8ee266dc":"code","02606cb4":"code","f7aa6fb2":"code","70bd2b7c":"code","7cd23493":"code","5753118a":"code","bbb8f959":"code","e9b2caa9":"code","3148baf2":"code","0d6d4920":"code","c8867b72":"code","1a9f3f34":"code","2ba47728":"code","0ab16eec":"code","927ba02a":"code","28ef26f7":"code","036bc6ee":"code","c86d8b86":"code","c3a0dd92":"code","09baaf4d":"code","fc7b998f":"code","87c9fd6a":"code","57e815b0":"markdown","07a27b52":"markdown","a8605f00":"markdown","fe17be79":"markdown","36f4db79":"markdown","68424521":"markdown","8ca845b7":"markdown","1814f013":"markdown","0ec64e2f":"markdown","e501699c":"markdown"},"source":{"58e5372a":"# Lets load the libraries\nimport pandas as pd\nimport numpy  as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy as sp","875841df":"# Load the data\ndf = pd.read_csv('..\/input\/zomato.csv')\nprint('Shape of Original Dataset is : {}'.format(df.shape))","8b554977":"# Print Sample data\ndf.sample(5)","cfa584ea":"# As we are not going to use URL, Address and Phone number, lets drop it, also we already have ratings, so need of review list\ndf = df.drop(['url','address','phone','reviews_list','menu_item'],axis=1)\ndf.columns","3681f9ad":"# Extract rating as number from\ndf['rating'] = df['rate'].str.split('\/',n=2,expand=True)[0]\ndf = df.drop('rate',axis=1)","738941ff":"# Put Cuisines and Dish Likes into Lists\ndf['dish_liked'] = df['dish_liked'].str.split(',')\ndf['cuisines'] = df['cuisines'].str.split(',')\ndf[['dish_liked','cuisines']].head()","ebd41697":"# Print percent of null values in each columns\nprint('Percentage of Null Values in each column')\nprint('-----------------------------------------')\n((df.isna()*1).sum()\/len(df))*100","39fc3a1c":"# Print Data types of each columns\nprint('Data Type of Each column')\nprint('--------------------------')\ndf.dtypes","2b1534ef":"# make non numeric values as null\ndf['rating'] = df['rating'].apply(lambda x: None if x in ('NEW',None,'-') else float(x))","9b96a05a":"# If  null values are there in Dish Likes and Cuisines, fill them with empty, as some places can have not major dishes\ndf[['dish_liked','cuisines']] = df[['dish_liked','cuisines']].fillna(value='')","7c1055bb":"# Drop the null values, as rating are target column we cant use rows which dont have rating itself\ndf = df.dropna()","58d7d81a":"# Rename columns with simpler names for use\ndf.rename(columns={'approx_cost(for two people)': 'approx_cost','listed_in(type)':'type','listed_in(city)':'Area'},inplace=True)\ndf.columns","8ee266dc":"# Convert data type of approx cost from character to numeric\ndf['approx_cost'] = df['approx_cost'].str.replace(',','').apply(lambda x:float(x))","02606cb4":"print('Percentage of Null Data after modification')\nprint('-------------------------------------------')\n((df.isna()*1).sum()\/len(df))*100","f7aa6fb2":"print('Data Type of Each column after modification')\nprint('---------------------------------------------')\ndf.dtypes","70bd2b7c":"print('Shape of Cleaned Dataset is : {}'.format(df.shape))","7cd23493":"df.head()","5753118a":"# Lets look at distribution of Continues variables\nfig = plt.figure(figsize=(14,10))\nax1 = fig.add_subplot(3,2,1)\nax2 = fig.add_subplot(3,2,2)\nsns.distplot(df['votes'],ax=ax1)\nsns.boxplot(df['votes'],ax=ax2)\nax3 = fig.add_subplot(3,2,3)\nax4 = fig.add_subplot(3,2,4)\nsns.distplot(df['approx_cost'],ax=ax3)\nsns.boxplot(df['approx_cost'],ax=ax4)\nax5 = fig.add_subplot(3,2,5)\nax6 = fig.add_subplot(3,2,6)\nsns.distplot(df['rating'],ax=ax5)\nsns.boxplot(df['rating'],ax=ax6)","bbb8f959":"# Lets look at distribution of Online Orders and Table Booking Variables\nfig = plt.figure(figsize=(8,4))\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nsns.countplot(x=df['online_order'],ax=ax1)\nsns.countplot(x=df['book_table'],ax=ax2)\nplt.yticks(rotation=45)","e9b2caa9":"# Lets look at distribution of Location Variable\nfig = plt.figure(figsize=(10,20))\nax1 = fig.add_subplot(1,1,1)\nsns.countplot(y=df['location'],ax=ax1)\np = plt.xticks(rotation=30)","3148baf2":"# Lets look at distribution of Categorical Variable\nfig = plt.figure(figsize=(10,20))\nax1 = fig.add_subplot(1,1,1)\nsns.countplot(y=df['Area'],ax=ax1)\np = plt.xticks(rotation=30)","0d6d4920":"# Lets look at distribution of restaurant type Variables\nfig = plt.figure(figsize=(10,20))\nax1 = fig.add_subplot(1,1,1)\nsns.countplot(y=df['rest_type'],ax=ax1)","c8867b72":"# Lets look at distribution of Type Variable\nfig = plt.figure(figsize=(4,4))\nax1 = fig.add_subplot(1,1,1)\nsns.countplot(x=df['type'],ax=ax1)\nplt.xticks(rotation=30)","1a9f3f34":"# Rating v\/s Online Order\nfig = plt.figure(figsize=(10,3))\nax1 = fig.add_subplot(1,1,1)\nsns.boxplot(x=df['rating'],y=df['online_order'])","2ba47728":"# Lets perform Hypothisis Testing to confirm if there is a significant difference between 2 means\na = df[df['online_order'] == 'Yes']['rating']\nb = df[df['online_order'] == 'No']['rating']\nt_value,p_value = sp.stats.ttest_ind(a,b)\nprint('Students T-Test Performed')\nprint('T Value : {}'.format(t_value))\nprint('p Value : {}'.format(p_value))\nif p_value < 0.05:\n    print('There is a significant Difference in Mean rating of Places accepting online orders vs the ones not accepting')\nelse:\n    print('There is no significant Difference in Mean rating of Places online orders vs the ones not accepting')","0ab16eec":"# Rating v\/s Table Booking\nfig = plt.figure(figsize=(10,3))\nax1 = fig.add_subplot(1,1,1)\nsns.boxplot(x=df['rating'],y=df['book_table'])","927ba02a":"# Lets perform Hypothisis Testing to confirm if there is a significant difference between 2 means\na = df[df['book_table'] == 'Yes']['rating']\nb = df[df['book_table'] == 'No']['rating']\nt_value,p_value = sp.stats.ttest_ind(a,b)\nprint('Students T-Test Performed')\nprint('T Value : {}'.format(t_value))\nprint('p Value : {}'.format(p_value))\nif p_value < 0.05:\n    print('There is a significant Difference in Mean rating of Places allowing table booking vs the ones not')\nelse:\n    print('There is no significant Difference in Mean rating of Places allowing table vs the ones not accepting')","28ef26f7":"# Rating v\/s Table Booking\nfig = plt.figure(figsize=(10,4))\nax1 = fig.add_subplot(1,1,1)\nsns.scatterplot(x=df['rating'],y=df['votes'],ax=ax1)\nslope,inter,r_value,p_value,std_err = sp.stats.linregress(x=df['rating'],y=df['votes'])\nx = np.array(df['rating'])\ny = np.array(df['rating'].apply(lambda y:y*slope + inter))\nax1.plot(x,y)\nplt.legend(labels=['slope : {}\\nIntercept : {}\\nR-Value : {}\\nP-Value : {}\\nstd-err : {}'.format(slope,inter,r_value,p_value,std_err),],loc=2)\nprint('There is a strong Relation between Rating vs Votes, better places get more votes')\nprint('-----------------------------------------------------------------------------------')","036bc6ee":"# Rating v\/s Approx Cost\nfig = plt.figure(figsize=(10,4))\nax1 = fig.add_subplot(1,1,1)\nsns.scatterplot(x=df['rating'],y=df['approx_cost'],ax=ax1)\nslope,inter,r_value,p_value,std_err = sp.stats.linregress(x=df['rating'],y=df['approx_cost'])\nx = np.array(df['rating'])\ny = np.array(df['rating'].apply(lambda y:y*slope + inter))\nax1.plot(x,y)\nplt.legend(labels=['slope : {}\\nIntercept : {}\\nR-Value : {}\\nP-Value : {}\\nstd-err : {}'.format(slope,inter,r_value,p_value,std_err),],loc=2)\nprint('There is a strong Relation between Rating vs ApproxCost, better places are as expected, costly')\nprint('------------------------------------------------------------------------------------------------')","c86d8b86":"# Lets find what are the most popular cuisies in Bengaluru and Most Liked Dishes\ncuisines = []\ndishes = []\nfor i in df['cuisines']:\n    for j in i:\n        cuisines.append(j)\nfor i in df['dish_liked']:\n    for j in i:\n        dishes.append(j)\n\ncuisines = pd.Series(cuisines)\ndishes = pd.Series(dishes)\nprint('Total number of Cuisines in data : {}'.format(len(cuisines)))\nprint('Total number of Dishes in data : {}'.format(len(dishes)))","c3a0dd92":"# Find top 20 most popular cuisine types\ntop20_cuisines = cuisines.str.strip().value_counts().head(20)\nfig = plt.figure(figsize=(8,10))\nax1 = fig.add_subplot(1,1,1)\nsns.barplot(x=top20_cuisines.values,y=top20_cuisines.index)","09baaf4d":"# Find top 50 most popular dishes in town, now this is what digital people of Bengaluru prefer.\ntop50_dishes = dishes.str.strip().value_counts().head(50)\nfig = plt.figure(figsize=(8,12))\nax1 = fig.add_subplot(1,1,1)\nsns.barplot(x=top50_dishes.values,y=top50_dishes.index)\nprint('East of West, idly & Dosa is the Best.. No Matter what this stupied data says')\nprint('------------------------------------------------------------------------------')","fc7b998f":"# Top Location in town to get good food.\ntop_places = df.groupby('Area')['rating'].median().sort_values(ascending=False)\nprint('Top Locations in bengaluru to find food..')\nprint('If you can reach there, after navigating through traffic!!!!')\nprint('----------------------------------------------------------')\npd.DataFrame(top_places)","87c9fd6a":"# Top rated restaurant types\ntop_types = df.groupby('type')['rating'].median().sort_values(ascending=False)\ntop_types","57e815b0":"### Comments and Pizzas are always welcome.. :-)\n### Stay Hungry ! Stay Foolish !","07a27b52":"The data below is useful as it can answer so many questions which matter to me personally as a dweller of the city who is highly reliant on the app.","a8605f00":"Please <b>UPVOTE<\/b> the notebook if you find it fun, it helps me publish more such work.\nAs always any comments are welcome, let me know if you have a question in your mind which I can help answer through the data.\n","fe17be79":"# Loading and Understanding Data","36f4db79":"### Multivariant Analysis","68424521":"## Exploratory Data Analysis and Visualization","8ca845b7":"# Zomato - A Exercise in Data Exploration and Visualization","1814f013":"### Alright Floks ! thats all for today, will add more if i get any new ideas..\n### Let me know in comments if you have any in your mind.","0ec64e2f":"Zomato is a online food delivery app and Bengaluru is one of the most digitally enabled cities in India, a huge number of city population uses the services of Zomato to find its next meal of the day.","e501699c":"## Data Cleaning and Standardization"}}