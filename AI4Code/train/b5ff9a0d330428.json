{"cell_type":{"d3a3dc9e":"code","b5a90312":"code","43a86fe8":"code","0726bc1f":"code","eb1e7d8a":"code","b7a6bda7":"code","3e7b0ab5":"code","0422ae60":"code","062636fb":"code","75f9bb3f":"code","b55f2290":"code","e2cca77d":"code","f314b497":"code","128fc6c4":"code","3ee71d36":"markdown","d12f2750":"markdown","b4c8dd24":"markdown","bafa8989":"markdown","420494da":"markdown","b7d55dbf":"markdown","96e4960b":"markdown","e6e4b9d4":"markdown","5970c424":"markdown","fb2b827e":"markdown","0770782a":"markdown","f2ad129f":"markdown"},"source":{"d3a3dc9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5a90312":"amazon = pd.read_csv('..\/input\/historical-amazon-stock-prices\/AMZN.csv')\namazon.head()","43a86fe8":"amazon.info()\nprint(amazon.shape)","0726bc1f":"amazon.isnull().sum()","eb1e7d8a":"amazon.describe()","b7a6bda7":"amazon['Date'] = pd.to_datetime(amazon['Date'])\namazon = amazon.set_index('Date')\namazon['Year'] = amazon.index.year\namazon['Month'] = amazon.index.month\namazon['Day'] = amazon.index.day\namazon.head()","3e7b0ab5":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0422ae60":"print(plt.style.available)","062636fb":"plt.style.use('seaborn-dark')","75f9bb3f":"amazon[['Open', 'High', 'Low', 'Close']].rolling(window = 1).mean().plot(title = 'Open, High, Low, Close Timeline', subplots=True, figsize=(15,12))\nplt.show()","b55f2290":"s = amazon['2020'][['Open', 'High', 'Low', 'Close']].rolling(window = 1).mean().plot(title = 'Open, High, Low, Close Comparison in 2020', subplots=True, figsize=(15,12))\nplt.show()","e2cca77d":"amazon= amazon.drop(['Open', 'High', 'Low', 'Adj Close', 'Volume', 'Year', 'Month', 'Day'], axis=1)","f314b497":"f, (ax1,ax2) = plt.subplots(2, figsize=(15,12))\ndays = range(252)\n\nax1.plot(days, amazon['1998']['Close'])\nax1.set(title = 'Stocks in 1998', xlabel='Days', ylabel='Stock Value')\n\nax2.plot(days, amazon['2019']['Close'])\nax2.set(title = 'Stocks in 2019', xlabel='Days', ylabel='Stock Value')\n\nplt.show()","128fc6c4":"fig = plt.figure(figsize=(12,10))\n\ndays = range(184)\n\nplt.plot(days, amazon['2020']['Close'])\nplt.title('Stocks in 2020')\n\nplt.show()","3ee71d36":"### Line subplots\nYou can use any of the available styles.","d12f2750":"We can clearly notice that in 1998 the company started out from almost nothing and quickly started increasing in value.<br \/>\nAs the company got much, much more popular in later years, the stock prices have much more aggressive changes in value.","b4c8dd24":"# Data\n### Importing Data\nFirst thing to do is import the data using the pandas library.","bafa8989":"# Extracting insights from the data\nLet's plot the values for 2020.","420494da":"# Visualization\n### Importing Libraries\nThe only libraries you'd need in most cases are Matplotlib and seaborn","b7d55dbf":"### Exploring Data\nGet insights on the data, check the shape, check for null values.. etc","96e4960b":"### Configuring Time Series Data\nTime series data should be Indexed by the dates provided.","e6e4b9d4":"# Visualizing Amazon Stock Data Using Matplotlib\n* **1. Introduction**\n* **2. Data**\n    * 2.1 Importing Data\n    * 2.2 Exploring Data\n    * 2.2 Configuring Time Series Data\n* **3. Visualization**\n    * 3.1 Import Libraries\n    * 3.2 Line subplots\n    * 3.3 Comparing the beginning years vs the recent years\n    * 3.4 Extracting insights from the data","5970c424":"# Thanks for reading.","fb2b827e":"We can see that there was a huge drop in stock value somewhere around the first quarter of 2020.<br \/> We can safely assume this most likely happened because of the COVID-19 pandemic.","0770782a":"# Introduction\n### This notebook is a short, simple data visualization notebook for the data provided.","f2ad129f":"### Comparing the beginning years vs the recent years"}}