{"cell_type":{"31a53c0d":"code","94b09e32":"code","adac0f47":"code","e7d22fce":"code","d253bdb4":"code","bd5cd75a":"code","49975173":"code","06418f7b":"code","04ceb9be":"code","20174d90":"code","0da37a10":"code","6e44ce24":"code","69f28de3":"code","222926b7":"code","b6f86e0f":"code","0e0a2f32":"code","77c6d416":"code","f477e903":"code","fdff4395":"code","3e288cc2":"code","41f63f6c":"code","bc3bc561":"code","a556a1a3":"code","9f95b656":"code","d70b234c":"code","03d415c9":"code","bedd2505":"code","7766c80e":"code","fd740660":"code","0263369f":"code","6c33d0db":"code","64e15ddc":"code","2c82ac92":"code","83d8725e":"code","305f578e":"code","e0b3023c":"code","bedcebf4":"code","a2577fab":"code","e05b21fd":"code","8fef3172":"markdown","e8325faf":"markdown"},"source":{"31a53c0d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","94b09e32":"import sys\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nfrom tqdm import tqdm\nwarnings.filterwarnings('ignore')","adac0f47":"rf_data = pd.read_excel('..\/input\/RF_Final_Data.xlsx')\nprint (rf_data.shape)\nrf_data.head()","e7d22fce":"rf_data.isnull().sum()","d253bdb4":"rf_data = rf_data.drop(['Preprocessed_EmailBody','Preprocessed_Subject'], 1)","bd5cd75a":"cust_data = pd.read_excel('..\/input\/Customers_31JAN2019.xlsx')\nprint (cust_data.shape)\ncust_data.head()","49975173":"cust_data.isnull().sum()","06418f7b":"cust_data = cust_data.drop(['PROFESSION','OCCUPATION','POSITION','PRE_JOBYEARS'], 1)","04ceb9be":"lms_data = pd.read_excel('..\/input\/LMS_31JAN2019.xlsx')\nprint (lms_data.shape)\nlms_data.head()","20174d90":"lms_data['CITY'].value_counts()","0da37a10":"lms_data['CITY'].nunique()","6e44ce24":"lms_data['PRODUCT'].value_counts()","69f28de3":"lms_data.isnull().sum()","222926b7":"lms_data = lms_data.drop(['NPA_IN_LAST_MONTH', 'NPA_IN_CURRENT_MONTH', 'CITY'], 1)","b6f86e0f":"lms_data.AGREEMENTID.nunique()","0e0a2f32":"cat_columns = ['PRODUCT']\nlms_data = pd.get_dummies(columns = cat_columns, data = lms_data)","77c6d416":"useless_columns = ['INTEREST_START_DATE', 'AUTHORIZATIONDATE', 'LAST_RECEIPT_DATE', 'SCHEMEID']\nlms_data = lms_data.drop(useless_columns, 1)","f477e903":"lms_data.head()","fdff4395":"lms_data = lms_data.groupby(['AGREEMENTID']).mean()\nlms_data = lms_data.reset_index()","3e288cc2":"lms_data.head()","41f63f6c":"train_data = pd.read_csv('..\/input\/train_foreclosure.csv')\nprint (train_data.shape)\ntrain_data.head()","bc3bc561":"test_data = pd.read_csv('..\/input\/test_foreclosure.csv')\nprint (test_data.shape)\ntest_data.head()","a556a1a3":"lms_data.head()","9f95b656":"lms_train_data = pd.merge(train_data, lms_data, on = 'AGREEMENTID')\nlms_train_data.shape","d70b234c":"lms_train_data.head()","03d415c9":"lms_train_data.isnull().sum()","bedd2505":"mean_value = lms_train_data['LAST_RECEIPT_AMOUNT'].mean()\nlms_train_data['LAST_RECEIPT_AMOUNT'] = lms_train_data['LAST_RECEIPT_AMOUNT'].fillna(value = mean_value)","7766c80e":"lms_train_data = lms_train_data.drop(['CUSTOMERID'], 1)","fd740660":"lms_test_data = pd.merge(test_data, lms_data, on = 'AGREEMENTID')\nlms_test_data.shape","0263369f":"lms_test_data.head()","6c33d0db":"lms_test_data.isnull().sum()","64e15ddc":"lms_test_data = lms_test_data.drop(['CUSTOMERID'], 1)\nmean_value = lms_test_data['LAST_RECEIPT_AMOUNT'].mean()\nlms_test_data['LAST_RECEIPT_AMOUNT'] = lms_test_data['LAST_RECEIPT_AMOUNT'].fillna(value = mean_value)","2c82ac92":"y = lms_train_data['FORECLOSURE']\nX_ID = lms_train_data['AGREEMENTID']\nX = lms_train_data.drop(['FORECLOSURE', 'AGREEMENTID'], 1)","83d8725e":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier()\nxgb","305f578e":"xgb.fit(X, y)","e0b3023c":"X_test_ID = lms_test_data['AGREEMENTID']\nX_test = lms_test_data.drop(['AGREEMENTID', 'FORECLOSURE'], 1)","bedcebf4":"xgb_pred = xgb.predict(X_test)","a2577fab":"submission = pd.DataFrame(columns = ['AGREEMENTID', 'FORECLOSURE'])\nsubmission['AGREEMENTID'] = X_test_ID\nsubmission['FORECLOSURE'] = xgb_pred","e05b21fd":"submission.to_csv('submission.csv', index = False)","8fef3172":"**1. Explore the Dataset**","e8325faf":"**Steps in the problem**\n\n1. Explore the dataset and create a dataframe. Use merge conditions where required\n2. Clean the final dataframe. Fill the null values, identify the categorical columns and identify \nthe columns to be worked upon.\n3. Make a classification model.\n4. Improve the model as required."}}