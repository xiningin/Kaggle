{"cell_type":{"3ab98eae":"code","47428e3b":"code","82911cff":"code","1926936b":"code","ae816098":"code","8fde92fe":"code","e101ba0b":"code","66acee42":"code","54777998":"code","4f40a0b9":"code","ef1eacac":"code","553008b3":"code","edd3620a":"code","28b85214":"code","38d99444":"code","599c835c":"code","35ba0893":"code","9886843e":"code","fcba4fd1":"code","61e49923":"code","dfeaa195":"code","64b47e46":"code","6f3a7c60":"code","169249aa":"code","29082a76":"code","6cf1cbbd":"code","ba96ed38":"code","dd34a606":"code","f95cbce3":"code","18a137f7":"code","154440d7":"code","888e7447":"code","c4a3f176":"code","ad75b20e":"code","a2de8306":"code","b69cd1f1":"code","1b25c243":"code","4e8d98e1":"code","b45eb0c4":"code","3eee954f":"code","0bec4cf1":"code","0603b2eb":"code","7d0037cd":"markdown","8919782c":"markdown","6406bff4":"markdown","3b0708ce":"markdown","67795761":"markdown","1658e04a":"markdown","be072059":"markdown","426573ed":"markdown","cddd07ba":"markdown","ebea3cb7":"markdown","574915df":"markdown","341327ee":"markdown","12f5c262":"markdown","ade59712":"markdown","11accb5c":"markdown","ae6ecde4":"markdown","7885dfb9":"markdown","720a5d68":"markdown","add79a35":"markdown"},"source":{"3ab98eae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47428e3b":"!pip install pystan","82911cff":"!pip install fbprophet","1926936b":"import fbprophet\nfrom fbprophet import Prophet","ae816098":"## checking the func & attributes of Prophet\n\ndir(Prophet)","8fde92fe":"df = pd.read_csv(r\"..\/input\/corona-virus-report\/covid_19_clean_complete.csv\")","e101ba0b":"df.head()","66acee42":"df.dtypes","54777998":"df['Date']=pd.to_datetime(df['Date'])","4f40a0b9":"df.dtypes","ef1eacac":"df.shape","553008b3":"df['Date'].nunique()","edd3620a":"total=df.groupby(\"Date\")['Confirmed','Deaths','Recovered','Active'].sum().reset_index()","28b85214":"total.head()","38d99444":"## rename columns as per prophet\n\ndf_prophet=total.rename(columns={\"Date\":\"ds\",\"Confirmed\":\"y\"})","599c835c":"df_prophet.head()","35ba0893":"## intializing the prophet\nm= Prophet()","9886843e":"## fitting the model\n\nmodel = m.fit(df_prophet)","fcba4fd1":"model.seasonalities","61e49923":"## data for next 30 days\n\nfuture_global = model.make_future_dataframe(periods=30, freq=\"D\")","dfeaa195":"future_global.shape","64b47e46":"df_prophet.shape","6f3a7c60":"future_global.tail()","169249aa":"df_prophet[\"ds\"].tail()","29082a76":"prediction = model.predict(future_global)\nprediction","6cf1cbbd":"## deriving required columns\n\nprediction[[\"ds\",\"yhat\",\"yhat_lower\",\"yhat_upper\"]].tail()","ba96ed38":"model.plot(prediction)","dd34a606":"model.plot_components(prediction)","f95cbce3":"from fbprophet.plot import add_changepoints_to_plot","18a137f7":"fig=model.plot(prediction)\n\na= add_changepoints_to_plot(fig.gca(), model, prediction)","154440d7":"from fbprophet.diagnostics import cross_validation","888e7447":"df_cv= cross_validation(model, horizon=\"30 days\", period=\"15 days\", initial=\"90 days\")","c4a3f176":"df_cv.head()","ad75b20e":"df_cv.shape","a2de8306":"from fbprophet.diagnostics import performance_metrics","b69cd1f1":"df_perf = performance_metrics(df_cv)","1b25c243":"df_perf .head()","4e8d98e1":"df_perf.shape","b45eb0c4":"from fbprophet.plot import plot_cross_validation_metric","3eee954f":"df_perf= plot_cross_validation_metric(df_cv, metric=\"rmse\")","0bec4cf1":"df_perf= plot_cross_validation_metric(df_cv, metric=\"mse\")","0603b2eb":"df_perf= plot_cross_validation_metric(df_cv, metric=\"mape\")","7d0037cd":"### Performance metrics for the model","8919782c":"#### We have 188 unique date values therefore we're going to groupby the date.","6406bff4":"#### Mape plot","3b0708ce":"#### Cross validation in prophet includes horizon i.e the prediction day, period is half of horizon and initial is 3 times the horizon. ","67795761":"## OBJECTIVE:\n### Predicting Covid-19 confirmed cases using Facebook Prophet model which is best suited for univariate time-series analysis. \n### Prophet is an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data.","1658e04a":"### Visulalizing the Results","be072059":"### Visulalizing the metrics","426573ed":"### Applying Prophet on the data","cddd07ba":"#### RMSE plot","ebea3cb7":"### Prediction on future data","574915df":"#### Note: Ignore the second pair plot.","341327ee":"#### We have successfully added the next 30 days to predict the confirmed cases.","12f5c262":"#### Note: Ignore the second plot.","ade59712":"### Validation","11accb5c":"### Cross-Validation","ae6ecde4":"### Change points","7885dfb9":"### Trend and Weekly","720a5d68":"#### MSE plot","add79a35":"### Making future data"}}