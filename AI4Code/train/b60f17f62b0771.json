{"cell_type":{"d30004fa":"code","721b34a3":"code","f0542073":"code","e6b6940e":"code","0bc6dc49":"code","00ee5fd5":"code","37abe896":"code","69fa7e5a":"code","edb373c9":"code","d910cbd5":"code","964f3ed4":"code","48abe56c":"code","52f67fa5":"code","7188e1dc":"code","efacdf71":"code","1403a20d":"code","6901857c":"code","596bb001":"code","bd60aa28":"code","b81c2b89":"code","17f16816":"code","a39d4590":"code","c5b23c59":"code","7b6f1656":"code","2ece05a5":"code","03baff69":"code","baa1ae7d":"code","d279229b":"code","49ba315e":"code","33018ee9":"code","ce747e0e":"code","91aa961a":"code","b8c215bf":"code","b2ddb5bb":"code","711b13f8":"code","0d5d6912":"code","66a0389c":"code","e2b0baeb":"code","56bca201":"code","6322b879":"code","726c2e01":"code","16696e33":"code","1a032739":"code","7797c0bf":"code","18bdb8e3":"code","5ec009bb":"code","b2ceb809":"code","c0a9b592":"code","df73be0d":"code","628d7f00":"code","fa8693c4":"code","6896bcdc":"code","890034bf":"code","a4744b4c":"code","1540573c":"code","50c9d79b":"code","e1104ac2":"code","0a2f5fe0":"code","d29096a8":"code","3a32f8ce":"code","8c6cbfd5":"code","3e58244b":"code","13043ce0":"code","9d16936b":"code","cc9a51e9":"code","4fa80b5d":"code","dd2c56e6":"code","7bb3a578":"code","82979ae1":"code","107155de":"code","417b8b48":"code","8565b914":"markdown","a1ebc5a5":"markdown","a67594a4":"markdown","a98d98c0":"markdown","6096d55f":"markdown","47ab5340":"markdown","f7db8f1a":"markdown","c4b1da21":"markdown","d7cb8422":"markdown","09d2472a":"markdown","4a8480ac":"markdown","b0d5c19b":"markdown","38405386":"markdown","66104981":"markdown","4f62c340":"markdown","d8cb69fa":"markdown","f8bfd018":"markdown","90b1cd01":"markdown","1ff1e00b":"markdown","a29bb8cf":"markdown","1552ea55":"markdown","1e87f80a":"markdown","2018c1b3":"markdown","d185e8bf":"markdown","0e2607db":"markdown","fc3e19c6":"markdown","b71d44c8":"markdown","af30d759":"markdown","67a82954":"markdown","20c42d62":"markdown","3b0cef1f":"markdown","0818c490":"markdown","9eb9c246":"markdown","92bb915c":"markdown","d837a950":"markdown","5fa94755":"markdown","14fca32a":"markdown","9b08443f":"markdown","332d6fa5":"markdown","bd1a9a9b":"markdown","8988fd5f":"markdown"},"source":{"d30004fa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\npd.set_option('display.max_rows', 150)\npd.set_option('display.max_columns', 150)\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","721b34a3":"securities = pd.read_csv('..\/input\/nyscdata\/securities.csv')\ndf = pd.read_csv('..\/input\/nyscdata\/fundamentals.csv')\n","f0542073":"cols = []\nfor col in df.columns:\n    cols.append(col.strip().replace(' ', '_'))\ncols[:5]","e6b6940e":"new_cols = []\nfor col in cols:\n    name = ''\n    new_cols.append(name.join(re.findall('[\\w\\s]', col)))\nnew_cols[:5]","0bc6dc49":"df = df.rename(columns = dict(zip(df.columns, new_cols)))\ndf.head(2)","00ee5fd5":"df.shape","37abe896":"df = df.dropna(axis=1)\ndf.isnull().sum().sum()\ndf.shape","69fa7e5a":"df.to_csv('fundamentals_cleaned.csv', index=False)\n# df = pd.read_csv('fundamentals_cleaned.csv')","edb373c9":"df.dtypes.value_counts()","d910cbd5":"dfc = df.copy()","964f3ed4":"g = pd.DataFrame(dfc.groupby('Ticker_Symbol').mean())\nscaler = StandardScaler()\ng = scaler.fit_transform(g)\ng = pd.DataFrame(g, columns = df.groupby('Ticker_Symbol').mean().columns,\n                 index = dfc.groupby('Ticker_Symbol').mean().index)\ng.head(3)","48abe56c":"gc = g.copy()\norig_cols = g.columns","52f67fa5":"def get_km_clusters(df, nc):\n  \n    \n    dff = df.copy()\n    km = KMeans(n_clusters = nc, random_state=21)\n    clusters = km.fit_predict(dff.select_dtypes('float64'))\n    dff['cluster'] = clusters\n    return km.inertia_, silhouette_score(dff.select_dtypes('float64'), clusters), dff","7188e1dc":"# plotting the scree-plot\ninertia = []\nsilhouette = []\nn_clusters=[]\ninertia_change = [0]\nfor n in range(2,16):\n    i, s, _ = get_km_clusters(g, n)\n    inertia.append(i)\n    silhouette.append(s)\n    n_clusters.append(n)\n    inertia_change.append(abs(inertia_change[-1] - i))","efacdf71":"plt.figure(figsize=(7,6));\nplt.plot(n_clusters, inertia, marker = 'o')\nplt.xlabel('Number of Clusters');\nplt.ylabel('Inertia');\nplt.title('INERTIA');\n\nplt.figure(figsize=(7,6));\nplt.plot(n_clusters, silhouette, marker = 'o')\nplt.xlabel('Number of Clusters');\nplt.ylabel('Silhouette score');\nplt.title('SILHOUETTE SCORE');","1403a20d":"# plot to see the decrease in inertia upon adding 1 additional cluster\ninertia_change = inertia_change[1:]\ninertia_change[0] = 0\nplt.plot(n_clusters, inertia_change, marker = 'o')\nplt.plot(n_clusters, inertia_change, marker = 'o')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Decrease in inertia');","6901857c":"km = KMeans(n_clusters=5, random_state=21)\nclusters = km.fit_predict(g.select_dtypes('float64'))\ng['cluster'] = clusters\ng.head(2)","596bb001":"g['cluster'].value_counts()","bd60aa28":"# PROFIT MARGIN\n\ng.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');","b81c2b89":"# REVENUE\ng.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');","17f16816":"securities = pd.read_csv('..\/input\/nyse-stock-exchange-data\/securities.csv')\nsecurities = securities[['Ticker symbol', 'Security','GICS Sector','GICS Sub Industry']]\nsecurities.head(2)","a39d4590":"final = g.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = g.index\nfinal.head()","c5b23c59":"final['GICS Sector'].nunique()\nfinal['GICS Sub Industry'].nunique()","7b6f1656":"final.groupby('cluster')['GICS Sector'].unique()","2ece05a5":"final.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","03baff69":"final.loc[final['cluster'] == 4]","baa1ae7d":"final.loc[final['cluster'] == 1]['Security']","d279229b":"final.loc[final['cluster'] == 3]['Security']","49ba315e":"g7 = g.drop('cluster', axis=1)\ng7.head()","33018ee9":"km = KMeans(n_clusters=7, random_state=21)\ng7['cluster'] = km.fit_predict(g7.select_dtypes('float64'))\ng7['cluster'].value_counts()","ce747e0e":"g7.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ng7.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","91aa961a":"f7 = g7.merge(securities, right_on = 'Ticker symbol', left_index=True)\nf7.index = g7.index\nf7.head(2)","b8c215bf":"f7.groupby('cluster')['GICS Sector'].unique()\nf7.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})  \n","b2ddb5bb":"f7.loc[f7['cluster'].isin([2,4,5,6])]","711b13f8":"gm5 = GaussianMixture(n_components=5)","0d5d6912":"dfgm = g[orig_cols]","66a0389c":"def get_gm_clusters(df, nc):\n# function to fit KMeans on the dataset and calculate the inertia    \n    \n    dff = df.copy()\n    gm = GaussianMixture(n_components = nc, random_state=21)\n    clusters = gm.fit_predict(dff.select_dtypes('float64'))\n    return clusters","e2b0baeb":"clus = get_gm_clusters(dfgm, 5)\ndfgm['cluster'] = clus","56bca201":"dfgm.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ndfgm.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","6322b879":"dfgm['cluster'].value_counts()","726c2e01":"final = dfgm.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = dfgm.index\nfinal.head(2)","16696e33":"final.groupby('cluster')['GICS Sector'].unique()\n\nfinal.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","1a032739":"final.loc[final['cluster'].isin([2])]","7797c0bf":"final.loc[final['cluster'].isin([3])]","18bdb8e3":"final.loc[final['cluster'].isin([4])]","5ec009bb":"final.loc[final['cluster'].isin([0])]['GICS Sub Industry'].value_counts()[:5]","b2ceb809":"final.loc[final['cluster'].isin([1])]['GICS Sub Industry'].value_counts()[:5]","c0a9b592":"dfgm = g[orig_cols]\nclus = get_gm_clusters(dfgm, 7)\ndfgm['cluster'] = clus\n\ndfgm.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ndfgm.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","df73be0d":"final = dfgm.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = dfgm.index\n\nfinal.groupby('cluster')['GICS Sector'].unique()\n\nfinal.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","628d7f00":"final.loc[final['cluster'].isin([3,4,5])]","fa8693c4":"final.loc[final['cluster'].isin([2,6])]","6896bcdc":"bank_tickers = ['BAC','C', 'WFC', 'JPM']","890034bf":"sns.displot(g['Goodwill'])","a4744b4c":"g['Goodwill'].mean(), g.loc[bank_tickers, 'Goodwill'].mean()","1540573c":"col_subset = ['Net_Borrowings', 'Net_Cash_Flow','Total_Assets', 'Total_Current_Assets',\n              'Total_Current_Liabilities', 'Total_Equity', 'Total_Liabilities',\n              'Total_Liabilities__Equity', 'Total_Revenue']","50c9d79b":"g.loc[bank_tickers, col_subset].mean().plot(kind='barh')\nplt.xlabel('Mean value for global bank tickers (outliers)');\nplt.title('Financial performance');","e1104ac2":"g.drop(bank_tickers).loc[:, col_subset].mean().plot(kind='barh')\nplt.xlabel('Mean value for tickers other than the 4 global banks')\nplt.title('Financial performance');","0a2f5fe0":"prices = pd.read_csv('..\/input\/nyscdata\/prices-split-adjusted.csv')\nprices.head(2)","d29096a8":"prices['range'] = prices['high'] - prices['low']\nprices['return']= prices['close']- prices['open']","3a32f8ce":"prices = prices.merge(securities, left_on = 'symbol', right_on = 'Ticker symbol', how='inner')","8c6cbfd5":"for symbol in prices['symbol'].sample(5):\n    print(symbol)\n    sns.displot(prices.loc[prices['symbol'] == symbol]['return'])","3e58244b":"for sector in securities['GICS Sector'].unique():\n    sns.displot(prices.loc[prices['GICS Sector'] == sector, 'return']);","13043ce0":"prices.groupby('GICS Sector')['return'].std().plot(kind='barh')","9d16936b":"df = prices.merge(securities, right_on='Ticker symbol', left_on = 'symbol', how='inner')\ndf.set_index('symbol', inplace=True)\ndf.head(2)","cc9a51e9":"df['return'] = df['close'] - df['open']\ndf['range'] = df['high'] - df['low']\ndf.head(2)","4fa80b5d":"df['date'] = pd.to_datetime(df['date'])","dd2c56e6":"def add_date_part(df, date_col = 'date', drop_date_col=False):\n    \n    dff = df.copy()\n    dff['DAY_NAME'] = df[date_col].dt.day_name()\n    dff['DAY_OF_MONTH'] = df[date_col].dt.day\n    dff['DAY_OF_YEAR'] = df[date_col].dt.dayofyear\n    dff['IS_MONTH_START'] = df[date_col].dt.is_month_start\n    dff['IS_MONTH_END'] = df[date_col].dt.is_month_end\n    dff['IS_QUARTER_START'] = df[date_col].dt.is_quarter_start\n    dff['IS_QUARTER_END'] = df[date_col].dt.is_quarter_end\n    dff['MONTH_NAME'] = df[date_col].dt.month_name()\n    dff['WEEK'] = df[date_col].dt.isocalendar().week\n    dff['IS_YEAR_START'] = df[date_col].dt.is_year_start\n    dff['IS_YEAR_END'] = df[date_col].dt.is_year_end\n    if drop_date_col == True:\n        dff= df.drop(date_col, axis=1)\n    return dff","7bb3a578":"df = add_date_part(df, 'date')\ndf.head(2)","82979ae1":"df.groupby('DAY_NAME')['return'].mean().plot(kind='barh')","107155de":"m = df.groupby('MONTH_NAME')['return'].mean()\nm.reindex(['January','February','March','April','May','June',\n           'July','August', 'September',\n           'October', 'November','December']).plot(kind='barh')","417b8b48":"df.groupby('IS_QUARTER_START')['return'].mean().plot(kind='barh')","8565b914":"### Renaming columns","a1ebc5a5":"#### For Motors, a highly successful auto manufacturer, is its own cluster.","a67594a4":"### Understanding the type of undustries in each cluster, with 5 clusters.","a98d98c0":"#### 5 clusters","6096d55f":"### Let us take 7 clusters for more granular clustering.","47ab5340":"#### Trying with 7 clusters.","f7db8f1a":"### KMeans clustering after grouping by Ticker_Symbol","c4b1da21":"#### Financial firms in one cluster, presence of Ford Motors seems to be odd.","d7cb8422":"#### Average returns by month","09d2472a":"### Trying with Gaussian Mixture models","4a8480ac":"#### Again, we see that finance giants have separated out.","b0d5c19b":"#### Quarter start days give more daily returns on average. This may be due to the bullish trend in anticipation of quarterly performance results.","38405386":"#### Highest average daily returns are obtained in February and March. January and December have the lowest returns.","66104981":"####  WFC is Wells Fargo, which is a US based financial services giant. It seems to be an outlier.","4f62c340":"### Based on the trend of inertia and silhoutte score, we can take either 5 clusters or 7 clusters. ","d8cb69fa":"#### Let us see which sectors have given the best average daily returns.","f8bfd018":"#### Clusters 3 and 4 have just FINANCIALS.","90b1cd01":"#### Wells Fargo separates out as earlier seen.","1ff1e00b":"#### Global finance giants have separated out into a cluster.","a29bb8cf":"### Visualizing financial data and performing clustering to understand share market behaviour","1552ea55":"#### Interestingly, the biggest cluster ALWAYS has more than 400 elements even if we take 7 clusters. Let us take a look at the smaller clusters and see if the outliers are same as earlier.","1e87f80a":"### END","2018c1b3":"#### Let us see the trend in the financial data of the global banks. Let us compare the mean values for some of the columns in the complete dataset to those for the global bank tickers.","d185e8bf":"#### The daily returns do seem to follow a normal distribution with mean 0.","0e2607db":"#### No particular trend seems to be visible as the industries within each cluster are quite varied.","fc3e19c6":"### Trends in stock prices and returns.","b71d44c8":"#### Cluster-2 companies have a very high revenue compared to others.","af30d759":"### Dropping null columns","67a82954":"#### Companies in clusters 0 and 2 have made loss on average, in the observation period. (The cluster numbers may change on running the clustering again).","20c42d62":"#### What is the change in inertia and silhouette score upon adding 1 more cluster ?","3b0cef1f":"#### The global financial services and energy giants are always separated out into sparsely populated clusters.","0818c490":"#### Let us see if we have the same outlier clusters as with kmeans.","9eb9c246":"#### Let us see if returns follow normal distribution.","92bb915c":"### Plotting characteristics in each cluster. ","d837a950":"### Let us take 5 clusters initially.","5fa94755":"#### Let us take a look at the top 5 sub-industries in the 2 large clusters.","14fca32a":"#### As we can see, the values for total assets, liabilities, revenue, net cash flow, etc are many orders of magnitude higher for global banks, compared to the group trend.","9b08443f":"#### Monday gives negative returns on average ! This may point towards a trend in the trading habits of people.\n#### Interestingly, Tuesday has the highest daily returns. Perhaps this is because people trade more carefully after suffering losses on Monday !","332d6fa5":"#### Take a look at clusters having 1 or 2 companies..","bd1a9a9b":"#### Cluster 1, 2 and 3 have very less number of tickers.","8988fd5f":"#### Cluster 1 and 6 companies have large revenue but have made loss on average."}}