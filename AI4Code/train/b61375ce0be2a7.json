{"cell_type":{"27824d41":"code","3e3e5a39":"code","5af78f27":"code","a47d0044":"code","74344aa8":"code","db6e18d1":"markdown","6944b094":"markdown","bb36b4e2":"markdown","ca9baf0a":"markdown"},"source":{"27824d41":"import matplotlib.pyplot as plt \nfrom mpl_toolkits.basemap import Basemap\nimport pandas as pd \nimport sqlite3 ","3e3e5a39":"county_codes = {\n    '01': 'ALAMEDA',\n    '02': 'ALPINE',\n    '03': 'AMADOR',\n    '04': 'BUTTE',\n    '05': 'CALAVERAS',\n    '06': 'COLUSA',\n    '07': 'CONTRA COSTA',\n    '08': 'DEL NORTE',\n    '09': 'EL DORADO',\n    '10': 'FRESNO',\n    '11': 'GLENN',\n    '12': 'HUMBOLDT',\n    '13': 'IMPERIAL',\n    '14': 'INYO',\n    '15': 'KERN',\n    '16': 'KINGS',\n    '17': 'LAKE',\n    '18': 'LASSEN',\n    '19': 'LOS ANGELES',\n    '20': 'MADERA',\n    '21': 'MARIN',\n    '22': 'MARIPOSA',\n    '23': 'MENDOCINO',\n    '24': 'MERCED',\n    '25': 'MODOC',\n    '26': 'MONO',\n    '27': 'MONTEREY',\n    '28': 'NAPA',\n    '29': 'NEVADA',\n    '30': 'ORANGE',\n    '31': 'PLACER',\n    '32': 'PLUMAS',\n    '33': 'RIVERSIDE',\n    '34': 'SACRAMENTO',\n    '35': 'SAN BENITO',\n    '36': 'SAN BERNARDINO',\n    '37': 'SAN DIEGO',\n    '38': 'SAN FRANCISCO',\n    '39': 'SAN JOAQUIN',\n    '40': 'SAN LUIS OBISPO',\n    '41': 'SAN MATEO',\n    '42': 'SANTA BARBARA',\n    '43': 'SANTA CLARA',\n    '44': 'SANTA CRUZ',\n    '45': 'SHASTA',\n    '46': 'SIERRA',\n    '47': 'SISKIYOU',\n    '48': 'SOLANO',\n    '49': 'SONOMA',\n    '50': 'STANISLAUS',\n    '51': 'SUTTER',\n    '52': 'TEHAMA',\n    '53': 'TRINITY',\n    '54': 'TULARE',\n    '55': 'TUOLUMNE',\n    '56': 'VENTURA',\n    '57': 'YOLO',\n    '58': 'YUBA',\n}\n","5af78f27":"with sqlite3.connect(\"\/kaggle\/input\/switrs.sqlite\") as con:\n\n    query = '''\n        SELECT\n            SUBSTR(county_city_location, -4, 2) AS \"code\",\n            COUNT(case_id) AS \"count\",\n            ROUND(AVG(longitude), 5) AS \"longitude\",\n            ROUND(AVG(latitude), 5) AS \"latitude\"\n        FROM collisions\n        GROUP BY\n            SUBSTR(county_city_location, -4, 2)\n        ORDER BY \"code\";\n    '''\n\n    df = pd.read_sql_query(query, con)","a47d0044":"df.head()","74344aa8":"fig = plt.figure(figsize=(20,20))\n\nbasemap = Basemap(\n    projection='gall',\n    llcrnrlon = -126,  \n    llcrnrlat = 32,  \n    urcrnrlon = -113, \n    urcrnrlat = 43, \n)\n\n# x, y = basemap(df['longitude'].values, df['latitude'].values)\n\nfor index, row in df.iterrows():\n    x, y = basemap(row['longitude'], row['latitude'])\n    count = row['count']\n    text = f\"\"\"\n        {county_codes[row['code']]} \n        Count: {count}\n    \"\"\"\n    plt.text(x, y, text, fontsize=12)\n    \nbasemap.drawcoastlines()\nbasemap.drawmapboundary(fill_color='aqua')\nbasemap.fillcontinents(color='coral',lake_color='aqua')\nbasemap.drawstates()\nfig.show()","db6e18d1":"### Result\n\nUnfortunately the plot I generated is not very clear. If you have suggestions, how to improve it, please leave it at comments section!","6944b094":"### Codes and names \nI've taken them from this website https:\/\/notary.cdn.sos.ca.gov\/forms\/notary-county-codes.pdf.","bb36b4e2":"## County City Location Analysis","ca9baf0a":"### Querry data\nI took first two digits from county city location. I also calculated average logitude and latitude, it will be usefull to plot data on basemap."}}