{"cell_type":{"8b54672c":"code","3fbf51d7":"code","ddeb6221":"code","418e42f3":"code","bca348b1":"code","6f740094":"code","57b1fdcc":"code","59194e97":"code","50e65683":"code","ef5341c0":"code","a7d50386":"code","72413ba2":"code","05a2d8a2":"code","e5d3323b":"code","eca8e16c":"code","8f85a243":"code","8bcc6a5f":"code","d570cff8":"code","73e8dc26":"code","0d391377":"code","c4ba4ed8":"code","ff46ed9e":"markdown","5e13fa1c":"markdown","c1769c23":"markdown","74513e00":"markdown","15b1d9d4":"markdown","900dcf8c":"markdown","1be741bd":"markdown","cca39f9d":"markdown","adf9638d":"markdown","c326dd83":"markdown","54a4094e":"markdown","ff7be930":"markdown"},"source":{"8b54672c":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nfrom tqdm.notebook import tqdm\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- setup ---\npd.set_option('max_columns', 50)","3fbf51d7":"cleaned_data = pd.read_csv('..\/input\/corona-virus-report\/covid_19_clean_complete.csv', parse_dates=['Date'])\ncleaned_data.rename(columns={'ObservationDate': 'date', \n                     'Province\/State':'state',\n                     'Country\/Region':'country',\n                     'Last Update':'last_updated',\n                     'Confirmed': 'confirmed',\n                     'Deaths':'deaths',\n                     'Recovered':'recovered'\n                    }, inplace=True)\n\ncases = ['confirmed', 'deaths', 'recovered', 'active']\ncleaned_data['active'] = cleaned_data['confirmed'] - cleaned_data['deaths'] - cleaned_data['recovered']\ncleaned_data['country'] = cleaned_data['country'].replace('Mainland China', 'China')\ncleaned_data[['state']] = cleaned_data[['state']].fillna('')\ncleaned_data[cases] = cleaned_data[cases].fillna(0)\ncleaned_data.rename(columns={'Date':'date'}, inplace=True)\ndata = cleaned_data\ndisplay(data.head())\ndisplay(data.info())","ddeb6221":"print(\"External Data\")\nprint(f\"Earliest Entry: {data['date'].min()}\")\nprint(f\"Last Entry:     {data['date'].max()}\")\nprint(f\"Total Days:     {data['date'].max() - data['date'].min()}\")","418e42f3":"def p2f(x):\n\n\n    try:\n        return float(x.strip('%'))\/100\n    except:\n        return np.nan\n\ndef age2int(x):\n\n    try:\n        return int(x)\n    except:\n        return np.nan\n\ndef fert2float(x):\n\n    try:\n        return float(x)\n    except:\n        return np.nan\n\n\ncountries_df = pd.read_csv(\"..\/input\/population-by-country-2020\/population_by_country_2020.csv\", converters={'Urban Pop %':p2f,\n                                                                                                             'Fert. Rate':fert2float,\n                                                                                                             'Med. Age':age2int})\ncountries_df.rename(columns={'Country (or dependency)': 'country',\n                             'Population (2020)' : 'population',\n                             'Density (P\/Km\u00b2)' : 'density',\n                             'Fert. Rate' : 'fertility',\n                             'Med. Age' : \"age\",\n                             'Urban Pop %' : 'urban_percentage'}, inplace=True)\n\n\n\ncountries_df['country'] = countries_df['country'].replace('United States', 'US')\ncountries_df = countries_df[[\"country\", \"population\", \"density\", \"fertility\", \"age\", \"urban_percentage\"]]\n\ncountries_df.head()","bca348b1":"data = pd.merge(data, countries_df, on='country')","6f740094":"df_temperature = pd.read_csv(\"..\/input\/covid19-global-weather-data\/temperature_dataframe.csv\")\ndf_temperature['country'] = df_temperature['country'].replace('USA', 'US')\ndf_temperature['country'] = df_temperature['country'].replace('UK', 'United Kingdom')\ndf_temperature = df_temperature[[\"country\", \"province\", \"date\", \"humidity\", \"sunHour\", \"tempC\", \"windspeedKmph\"]].reset_index()\ndf_temperature.rename(columns={'province': 'state'}, inplace=True)\ndf_temperature[\"date\"] = pd.to_datetime(df_temperature['date'])\ndf_temperature['state'] = df_temperature['state'].fillna('')\n# df_temperature.info()","57b1fdcc":"data = data.merge(df_temperature, on=['country','date', 'state'], how='inner')\ndata['mortality_rate'] = data['deaths'] \/ data['confirmed']","59194e97":"data.head()","50e65683":"data.describe()","ef5341c0":"temp_gdf = data.groupby(['date', 'country'])['tempC', 'humidity'].mean()\ntemp_gdf = temp_gdf.reset_index()\ntemp_gdf['date'] = pd.to_datetime(temp_gdf['date'])\ntemp_gdf['date'] = temp_gdf['date'].dt.strftime('%m\/%d\/%Y')\n\ntemp_gdf['tempC_pos'] = temp_gdf['tempC'] - temp_gdf['tempC'].min()  # To use it with size\n\nwind_gdf = data.groupby(['date', 'country'])['windspeedKmph'].max()\nwind_gdf = wind_gdf.reset_index()\nwind_gdf['date'] = pd.to_datetime(temp_gdf['date'])\nwind_gdf['date'] = wind_gdf['date'].dt.strftime('%m\/%d\/%Y')","a7d50386":"target_gdf = data.groupby(['date', 'country'])['confirmed', 'deaths'].sum()\ntarget_gdf = target_gdf.reset_index()\ntarget_gdf['date'] = pd.to_datetime(target_gdf['date'])\ntarget_gdf['date'] = target_gdf['date'].dt.strftime('%m\/%d\/%Y')","72413ba2":"fig = px.scatter_geo(temp_gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"tempC\", size='tempC_pos', hover_name=\"country\", \n                     range_color= [-20, 45], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                      color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","05a2d8a2":"fig = px.scatter_geo(temp_gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"humidity\", size='humidity', hover_name=\"country\", \n                     range_color= [0, 100], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Humidity by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","e5d3323b":"gdf = pd.merge(target_gdf, temp_gdf, on=['date', 'country'])\ngdf['confirmed_log1p'] = np.log1p(gdf['confirmed'])\ngdf['deaths_log1p'] = np.log1p(gdf['deaths'])\ngdf['mortality_rate'] = gdf['deaths'] \/ gdf['confirmed']\n\ngdf = pd.merge(gdf, wind_gdf, on=['date', 'country'])","eca8e16c":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"tempC\", size='confirmed', hover_name=\"country\", \n                     range_color= [-20, 45], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","8f85a243":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"tempC\", size='confirmed_log1p', hover_name=\"country\", \n                     range_color= [-20, 45], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: log1p(confirmed) VS Temperature by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","8bcc6a5f":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"tempC\", size='deaths', hover_name=\"country\", \n                     range_color= [-20, 45], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: deaths VS temperature by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","d570cff8":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"tempC\", size='mortality_rate', hover_name=\"country\", \n                     range_color= [-20, 45], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Mortality rate VS Temperature by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","73e8dc26":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"humidity\", size='confirmed_log1p', hover_name=\"country\", \n                     range_color= [0, 100], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: log1p(confirmed) VS Humidity by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","0d391377":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"humidity\", size='mortality_rate', hover_name=\"country\", \n                     range_color= [0, 100], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Mortality rate VS humidity by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","c4ba4ed8":"fig = px.scatter_geo(gdf.fillna(0), locations=\"country\", locationmode='country names', \n                     color=\"windspeedKmph\", size='confirmed_log1p', hover_name=\"country\", \n                     range_color= [0, 40], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: log1p(Confirmed) VS Wind speed by country', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","ff46ed9e":"Now let's move to **humidity**.\n\nWe can see corona spreads in China where humidity is low, as well as Europe where humidity is high. Humidity may not help to slow down Coronavirus.","5e13fa1c":"# Humidity","c1769c23":"I couldn't find relationship between humidity & mortality rate too.","74513e00":"Above we saw confirmed cases, how about number of deaths?\n\nWe see that number of death is high in China, Europe, US and Iran. Even though these are north-side, cooler temperature region, I feel this is simply because population is high.","15b1d9d4":"The second figure is humidity by country. It seems there's no clear location-humidity relation like temperature. We can see humidity is relatively low in China, while humidity is always high in Europe region.","900dcf8c":"## Windspeed\n\nAt last, let's see relationship between wind speed and Corona spread.\n\nIt seems wind speed is relative high in Europe, is it related to the reason that the Corona is widely spread in the Europe region in short term??","1be741bd":"# Adding population data","cca39f9d":"We can check mortality rate, instead of total number of deaths, to see if the weather affect on Coronavirus worsening.\n\nWe see that mortality rate is not so related to region or temperature.<br\/>\nMortality rate is high at the beginning stage of spread in each country (maybe because total inspection number is low), but many country seem to be converging to around 3% mortality rate.","adf9638d":"# Temperature by country","c326dd83":"# Visualization for corona spread - weather relationship\n\n\n## Temperature\nNow let's see the relationship with **Corona spread with temperature**.\n\nThe figure **circle size** shows number of corona confirmed cases, and **color** shows temperature.<br\/>\n\nWe can see Corona started in China when the temperature is cold, but its spread does not easily stop even when temperature increases in China.<br\/>\nAlso Corona spread in Europe started with relatively high, medium temperature (around 20C).","54a4094e":"The first figure is temperature by country. It's obvious that north side is cold and south side is hot.","ff7be930":"I will change the visualization: circle size is now shown with log scale, to show how corona spreads not only major country.\n\nNow we can see that Corona's confirmed cases appears indeed worldwide. Even temperature is high, corona can happen (but its confirmed cases may become fewer)."}}