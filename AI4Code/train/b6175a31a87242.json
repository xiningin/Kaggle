{"cell_type":{"728fdc78":"code","45765fb0":"code","f6f3c6b5":"code","f6e1b95d":"code","ff6135b8":"code","e680a421":"code","564c9e78":"code","3834f7fd":"code","51647433":"code","d0dfbf1c":"code","83ff0c89":"code","9595ac9a":"code","1ac3f93e":"code","cd0cdd57":"code","d5dea7fa":"code","6329c54d":"code","f4a90337":"code","651e3be4":"code","7b76554d":"code","b6767895":"code","444ed488":"code","144c4538":"code","f91f8afb":"markdown","863d8f0f":"markdown","2b2ca432":"markdown","4864f734":"markdown","bde3bfb4":"markdown","c2421ebd":"markdown","eb898987":"markdown","70a0e536":"markdown","ee735205":"markdown","e0651508":"markdown","79a4898a":"markdown"},"source":{"728fdc78":"import pandas as pd\nfrom datetime import datetime\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\nimport os\nfrom sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score","45765fb0":"ydata = pd.read_csv('..\/input\/stock-data\/ydata.csv')","f6f3c6b5":"ydata['Date'] = pd.to_datetime(ydata['Date'])\nydata.head(10)","f6e1b95d":"ydata.set_index('Date',inplace=True)\nydata.sort_values('Date', ascending=True)","ff6135b8":"variables = ydata.columns\nydata.isnull().sum().loc[variables]","e680a421":"jet = plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0, 1, 10)))\n\ndef correlation(df, variables, n_rows, n_cols):\n    fig = plt.figure(figsize=(8,6))\n    for i, var in enumerate(variables):\n        ax = fig.add_subplot(n_rows, n_cols, i+1)\n        asset = df.loc[:,var]\n        ax.scatter(df['Adj Close'], asset, c = next(colors))\n        ax.set_xlabel('Adj Close')\n        ax.set_ylabel('{}'.format(var))\n        ax.set_title(var + ' vs Price')\n    fig.tight_layout()\n    plt.show()","564c9e78":"variables = ydata.columns[-1:]\ncorrelation(ydata, variables, 1, 1)","3834f7fd":"variables = ydata.columns\ncorrelation(ydata, variables, 3, 3)","51647433":"ydata.corr()['Adj Close'].loc[variables]","d0dfbf1c":"ydata['high-low_pct'] = (ydata['High'] - ydata['Low']).pct_change()\nydata['wem_5'] = ydata['Close'].ewm(span=5).mean().shift(periods=1)\nydata['price_std_5'] = ydata['Close'].rolling(center=False, window=5).mean().shift(periods=1)\n\nydata['volume_change'] = ydata['Volume'].pct_change()\nydata['volume_avg_5'] = ydata['Volume'].rolling(center=False, window=5).mean().shift(periods=1)\nydata['volume_close'] = ydata['Volume'].rolling(center=False, window=5).std().shift(periods=1)","83ff0c89":"jet = plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0,1,10)))\n\nvariables = ydata.columns[-6:]\ncorrelation(ydata, variables, 3, 3)","9595ac9a":"ydata.corr()['Adj Close'].loc[variables]","1ac3f93e":"ydata.head(5)","cd0cdd57":"ydata.isnull().sum().loc[variables]","d5dea7fa":"ydata = ydata.dropna(axis=0)","6329c54d":"train = ydata[ydata.index < datetime(year=2015, month=1, day=1)]\ntest = ydata[ydata.index >= datetime(year=2015, month=1, day=1)]\ndates = test.index","f4a90337":"lr = LinearRegression()\nX_train = train[['high-low_pct', 'wem_5', 'price_std_5', 'volume_avg_5', 'volume_change', 'volume_close']]\nY_train = train['Adj Close']\nlr.fit(X_train, Y_train)","651e3be4":"X_test = test[['high-low_pct', 'wem_5', 'price_std_5', 'volume_avg_5', 'volume_change', 'volume_close']].values\nY_test = test['Adj Close'].values","7b76554d":"close_predictions = lr.predict(X_test)","b6767895":"mae = sum(abs(close_predictions - test['Adj Close'].values)) \/ test.shape[0]\nprint(mae)","444ed488":"df = pd.DataFrame({'Date':dates, 'Actual': Y_test, 'Predicted': close_predictions})\ndf1 = df.tail(25)\ndf1['Date'] = df1['Date'].dt.strftime('%Y-%m-%d')\ndf1.set_index('Date', inplace=True)\nerror = df1['Actual'] - df1['Predicted']\n\nerror.plot(kind='bar',figsize=(8,6))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.xticks(rotation=45)\nplt.show()","144c4538":"lr.score(X_test, Y_test)","f91f8afb":"### Import Libs ###","863d8f0f":"### Model Evaluation","2b2ca432":"#### Prediction","4864f734":"#### Correlation with new features","bde3bfb4":"#### Test Dataset","c2421ebd":"## Explanoatory Data Analysis ##","eb898987":"#### Correlation ####","70a0e536":"## Build Model","ee735205":"### Feature Engineering","e0651508":"### Read Data ###","79a4898a":"#### Train \/ Test split"}}