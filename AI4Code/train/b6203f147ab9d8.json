{"cell_type":{"3664c50f":"code","35fd210e":"code","677acce3":"code","52b6e814":"code","b144cb58":"code","82f11c2c":"code","8642e0d6":"code","eb0973ce":"code","b8b86e28":"code","8cb6777f":"code","1115adc1":"code","16839229":"code","30bf278d":"code","2ef246fd":"markdown","7e5be509":"markdown","3ed8b218":"markdown","d1340032":"markdown","aa51cd92":"markdown","08814286":"markdown","d988b7d3":"markdown"},"source":{"3664c50f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","35fd210e":"import pandas as pd\nimport numpy as np\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)","677acce3":"df = pd.read_csv('..\/input\/data.csv')\ndf.head()","52b6e814":"df.columns","b144cb58":"import cufflinks as cf\nimport matplotlib.pyplot as plt\ncf.set_config_file(offline=False, world_readable=True, theme='ggplot')\n\nn_df = df.sort_values(by = 'Age', ascending = False)\nage = n_df['Age'].values\nfig = go.Histogram(x = age)\niplot([fig])","82f11c2c":"ovr = df.sort_values(by = 'Overall', ascending=False)\ntop_best = ovr.loc[:4, ['Name', 'Overall']]\ntop_best\n#arr = top_best.values\n#a, b = zip(*arr)\n#fig = go.Bar(x = a, y= b)\n#iplot([fig])","8642e0d6":"age = df.sort_values(by = 'Age')\nage.head()\nrel = age.loc[:,[ 'Age','Overall']]\nrel.values\n\nfig = go.Scatter(x= rel['Age'] , y= rel['Overall'])\nlayout = go.Layout(title = 'Age Overall relationship')\nfigure = go.Figure(data=[fig], layout=layout)\niplot(figure)","eb0973ce":"pos_count = df['Position'].value_counts()\ntrace = go.Pie(labels = pos_count.index, values = pos_count.values, hole = 0.4)\ndata=[trace]\nlayout = go.Layout(\n                    title = 'Percentage position')\nfig = go.Figure(data, layout)\niplot(fig)\nprint (\"Maxmimum Pos \" + pos_count.idxmax(), pos_count.max())","b8b86e28":"all_position = df.iloc[df.groupby('Position')['Overall'].idxmax()][['Name', 'Position']]\npos = all_position['Position'].values\nall_position['Name']","8cb6777f":"young_team_df = df.where(df['Age']<=22)\nyoung_team_list = young_team_df.groupby('Position')['Overall'].idxmax()\nyoung_team = young_team_df.iloc[young_team_list]\nyoung_team[['Position','Name']]","1115adc1":"counter = 0\nfor x in pos:\n    posi = all_position['Position'].values\n    name = all_position.where(all_position['Position']== x ).dropna()['Name'].values\n    neymar = df[['Agility','BallControl','Strength','Acceleration','ShotPower','Vision']].where(df['Name']==name[0]).dropna()\n    r = neymar.values\n    r = r.astype(int)[0]\n#r = np.append(r,r[0])\n    theta = np.array(neymar.columns)\n#theta = np.append(theta, theta[0])\n#theta\n    data = go.Scatterpolar(\n                r = r,\n                theta = theta,\n                fill = 'toself')\n    layout = go.Layout(\n      polar = dict(\n        radialaxis = dict(\n          visible = True,\n          range = [0, 100]\n        )\n      ),\n        title = name[0],\n      showlegend = False\n    )\n    fig = go.Figure(data=[data], layout=layout)\n    iplot(fig)","16839229":"trace1 = {\n    'x' : [19],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'GK',\n    'text': all_position['Name'].where(all_position['Position']=='GK').dropna().values,\n    'marker':{'color':'pink','size':20}    \n}\ntrace2 = {\n    'x' : [25],\n    'y' : [15],\n    'type': 'scatter',\n    'name' : 'LCB',\n    'text': all_position['Name'].where(all_position['Position']=='LCB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace3 = {\n    'x' : [25],\n    'y' : [35],\n    'type': 'scatter',\n    'name' : 'RCB',\n    'text': all_position['Name'].where(all_position['Position']=='RCB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace4 = {\n    'x' : [30],\n    'y' : [45],\n    'type': 'scatter',\n    'name' : 'LB',\n    'text': all_position['Name'].where(all_position['Position']=='LB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace5 = {\n    'x' : [30],\n    'y' : [5],\n    'type': 'scatter',\n    'name' : 'RB',\n    'text': all_position['Name'].where(all_position['Position']=='RB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace6 = {\n    'x' : [40],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'CDM',\n    'text': all_position['Name'].where(all_position['Position']=='CDM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace7 = {\n    'x' : [50],\n    'y' : [40],\n    'type': 'scatter',\n    'name' : 'LCM',\n    'text': all_position['Name'].where(all_position['Position']=='LCM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace8 = {\n    'x' : [50],\n    'y' : [12],\n    'type': 'scatter',\n    'name' : 'RCM',\n    'text': all_position['Name'].where(all_position['Position']=='RCM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace9 = {\n    'x' : [65],\n    'y' : [50],\n    'type': 'scatter',\n    'name' : 'LF',\n    'text': all_position['Name'].where(all_position['Position']=='LF').dropna().values,\n    'marker':{'color':'blue','size':20}    \n}\ntrace10 = {\n    'x' : [65],\n    'y' : [2],\n    'type': 'scatter',\n    'name' : 'RF',\n    'text': all_position['Name'].where(all_position['Position']=='RF').dropna().values,\n    'marker':{'color':'blue','size':20}    \n}\ntrace11 = {\n    'x' : [60],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'ST',\n    'text': all_position['Name'].where(all_position['Position']=='ST').dropna().values,\n    'marker':{'color':'yellow','size':20}\n}\nLayout={\n    \"title\":\"Dream Team\"\n}\ndata=[trace1,trace2,trace3,trace4,trace5,trace6,trace7,trace8,trace9,trace10,trace11]\nfig = go.Figure(data = data, layout=Layout)\niplot(fig)","30bf278d":"trace1 = {\n    'x' : [19],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'GK',\n    'text': young_team['Name'].where(young_team['Position']=='GK').dropna().values,\n    'marker':{'color':'pink','size':20}    \n}\ntrace2 = {\n    'x' : [25],\n    'y' : [15],\n    'type': 'scatter',\n    'name' : 'LCB',\n    'text': young_team['Name'].where(young_team['Position']=='LCB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace3 = {\n    'x' : [25],\n    'y' : [35],\n    'type': 'scatter',\n    'name' : 'RCB',\n    'text': young_team['Name'].where(young_team['Position']=='RCB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace4 = {\n    'x' : [30],\n    'y' : [45],\n    'type': 'scatter',\n    'name' : 'LB',\n    'text': young_team['Name'].where(young_team['Position']=='LB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace5 = {\n    'x' : [30],\n    'y' : [5],\n    'type': 'scatter',\n    'name' : 'RB',\n    'text': young_team['Name'].where(young_team['Position']=='RB').dropna().values,\n    'marker':{'color':'red','size':20}    \n}\ntrace6 = {\n    'x' : [40],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'CDM',\n    'text': young_team['Name'].where(young_team['Position']=='CDM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace7 = {\n    'x' : [50],\n    'y' : [40],\n    'type': 'scatter',\n    'name' : 'LCM',\n    'text': young_team['Name'].where(young_team['Position']=='LCM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace8 = {\n    'x' : [50],\n    'y' : [12],\n    'type': 'scatter',\n    'name' : 'RCM',\n    'text': young_team['Name'].where(young_team['Position']=='RCM').dropna().values,\n    'marker':{'color':'green','size':20}    \n}\ntrace9 = {\n    'x' : [65],\n    'y' : [50],\n    'type': 'scatter',\n    'name' : 'LF',\n    'text': young_team['Name'].where(young_team['Position']=='LF').dropna().values,\n    'marker':{'color':'blue','size':20}    \n}\ntrace10 = {\n    'x' : [65],\n    'y' : [2],\n    'type': 'scatter',\n    'name' : 'RF',\n    'text': young_team['Name'].where(young_team['Position']=='RF').dropna().values,\n    'marker':{'color':'blue','size':20}    \n}\ntrace11 = {\n    'x' : [60],\n    'y' : [25],\n    'type': 'scatter',\n    'name' : 'ST',\n    'text': young_team['Name'].where(young_team['Position']=='ST').dropna().values,\n    'marker':{'color':'yellow','size':20}\n}\nLayout={\n    \"title\":\"Young player's team under 22\"\n}\ndata=[trace1,trace2,trace3,trace4,trace5,trace6,trace7,trace8,trace9,trace10,trace11]\nfig = go.Figure(data=data, layout=Layout)\niplot(fig)","2ef246fd":"## Position's composition","7e5be509":"## Number of players at each age","3ed8b218":"## Best young Team by position","d1340032":"##  5 Best player in world","aa51cd92":"## Best players by position","08814286":"## Does age affect overall rating?","d988b7d3":"## Import Libraries"}}