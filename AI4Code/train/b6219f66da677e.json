{"cell_type":{"676e869a":"code","ded8ecf5":"code","d5ad7c83":"code","b5186215":"code","16efbd0b":"code","3e6eaaf5":"code","5c898af7":"code","4ef0cc7f":"code","9c210496":"code","3c66673c":"code","8f6ca154":"code","c11b86bd":"code","2ad74da0":"code","7cd46a92":"code","c48bdec1":"code","b97998d9":"code","0cd25b6d":"code","755025a2":"code","38f2bda9":"code","f829d2f9":"code","d84e2c57":"code","577f358e":"code","50d62529":"code","469acf6f":"code","2ff7294c":"code","c07315be":"code","e1f58d1a":"code","10cbcfdf":"code","9f0154fb":"code","26265377":"code","575889ed":"code","838da4a7":"code","05aadabc":"code","c064e23c":"code","7622a6ed":"code","4de5f0ad":"code","1e086504":"code","ee223d95":"code","ef90decd":"code","8a83a9d6":"code","7c67f459":"code","3da8e913":"code","a986824a":"code","71805ee4":"code","e14fba2a":"code","00e605e3":"code","f258319c":"code","b9af8fef":"code","18de0530":"code","5c563c61":"code","d2f9e264":"code","cb4064cc":"code","f0df7755":"code","749de703":"code","d23a24e4":"code","375ae9c3":"code","fa4cca10":"code","27e6295b":"code","90529e0c":"code","13af5414":"code","83c63a6f":"code","7b6bfa8d":"code","81c181de":"code","6af4a6f7":"code","ee29d33b":"markdown","9ce386a3":"markdown","f89bf57f":"markdown","88e79aad":"markdown","38ed13fc":"markdown","4123c040":"markdown","f488a942":"markdown","45ba68fc":"markdown","6fc9d4b2":"markdown","9940dc90":"markdown","c6229f07":"markdown","979dcd0b":"markdown","d050c12a":"markdown","c2f4726a":"markdown","f829a148":"markdown","2e010f7a":"markdown","1357aed1":"markdown"},"source":{"676e869a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ded8ecf5":"data = pd.read_csv('..\/input\/mobile-legends-bang-bang-mlbb-heros-dataset\/mlbb_heros.csv')\n#Veriyi i\u00e7eri aktar\u0131yoruz\n\ndata.head()\n#Verinin ilk 4 sat\u0131rn\u0131 yazd\u0131r\u0131yoruz","d5ad7c83":"data.info()\n#veri seti hakk\u0131nda bilgi almam\u0131z\u0131 sa\u011flar ","b5186215":"data.corr()\n# veri g\u00f6rselle\u015ftirme i\u015fleminde s\u00fct\u00fcnlar ars\u0131ndaki k\u0131yaslamay\u0131 say\u0131sal olarak ger\u00e7ekle\u015ftirir","16efbd0b":"#correlation map\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\n#say\u0131sal olarak k\u0131yaslama i\u015flemini renkler ile g\u00f6rselle\u015ftirme i\u015flemi ger\u00e7ekle\u015ftirdik\nplt.show()","3e6eaaf5":"data.head(10)\n# ilk 10'u verir","5c898af7":"data.columns\n#t\u00fcm s\u00fct\u00fcn isimlerini d\u00f6nd\u00fcr\u00fcr","4ef0cc7f":"# Line Plot\n# kind = t\u00fcr, color = renk, label = label, linewidth = kal\u0131nl\u0131k, alpha = saydaml\u0131k, grid = grid, linestyle = sytle of line\ndata.hp_regen.plot(kind = 'line', color = 'g',label = 'hp_regen',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\n#veriden fiziksel defans\u0131n\u0131 \ndata.mana_regen.plot(color = 'r',label = 'mana_regen',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\n#veriden b\u00fcy\u00fc defans\u0131n\u0131\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label- kahramanalar\nplt.ylabel('y axis')              # hp ve mana \u00f6zellikleri \nplt.title('Line Plot')            # title = title of plot\nplt.show()","9c210496":"# Scatter Plot \n# x = hp, y = mana\n# verideki hp ve mana \u00f6zellikleri aras\u0131ndaki ili\u015fkiyi g\u00f6rselle\u015ftiriyoruz\ndata.plot(kind='scatter', x='hp_regen', y='mana_regen',alpha = 0.5,color = 'red')\n#plt.scatter(data.hp_regen,data.mana_regen,alpha = 0.5,color = 'red') #bu \u015fekilde de yaz\u0131labilir\nplt.xlabel('Hp')              # label = name of label\nplt.ylabel('Mana')\nplt.title('Hp Mana Scatter Plot')            # title = title of plot","3c66673c":"# Histogram\n# bins = number of bar in figure\ndata.attack_speed.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","8f6ca154":"# clf() = cleans it up again you can start a fresh\ndata.attack_speed.plot(kind = 'hist',bins = 50)\nplt.clf()\n# olu\u015fan plotu temizliyor\n# We cannot see plot due to clf()","c11b86bd":"data = pd.read_csv('..\/input\/mobile-legends-bang-bang-mlbb-heros-dataset\/mlbb_heros.csv')","2ad74da0":"#bir vekt\u00f6r \u015feklinde uzanan tek boyutlu yap\u0131lar\nseries = data['magic_defense']        # data['magic_defense'] = series\nprint(type(series))\ndata_frame = data[['magic_defense']]  # data[['magic_defense']] = data frame\nprint(type(data_frame))\n","7cd46a92":"x = data['physical_atk']>130\ndata[x]","c48bdec1":"data[np.logical_and(data['physical_atk']>120, data['movement_spd']>250)]","b97998d9":"data[(data['physical_atk']>120) & (data['movement_spd']>250)]","0cd25b6d":"#bir tane threshold olu\u015fturuyourz ve buraya hareket h\u0131z\u0131n\u0131n ortalams\u0131n\u0131 alarak at\u0131yoruz\n#bu ortalamaya ba\u011fl\u0131 olarak yeni s\u00fctun a\u00e7arak h\u0131zl\u0131 veya yava\u015f olarak adland\u0131r\u0131yourz\nthreshold = sum(data.movement_spd)\/len(data.movement_spd)\nprint(threshold)\ndata[\"speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.movement_spd]\ndata.loc[:10,[\"speed_level\",\"movement_spd\"]]","755025a2":"data = pd.read_csv('..\/input\/mobile-legends-bang-bang-mlbb-heros-dataset\/mlbb_heros.csv')\n\n#ilk 5 sat\u0131r\u0131 d\u00f6nd\u00fcr\u00fcr\ndata.head()","38f2bda9":"#son 5 sat\u0131r\u0131 d\u00f6nd\u00fcr\u00fcr\ndata.tail()","f829d2f9":"#s\u00fct\u00fcn isimlerini d\u00f6nd\u00fcr\u00fcr\ndata.columns","d84e2c57":"#sat\u0131r ve s\u00fct\u00fcn say\u0131sn\u0131 d\u00f6nd\u00fcr\u00fcr\ndata.shape","577f358e":"#veri bilgisini d\u00f6nd\u00fcr\u00fcr\ndata.info()","50d62529":"#bir s\u00fct\u00fcn se\u00e7erek o s\u00fctundaki \u00f6zellikleri sa\u011falayan karakter say\u0131s\u0131n\u0131 d\u00f6nd\u00fcr\u00fcyoruz\nprint(data['role'].value_counts(dropna =False))","469acf6f":"data.describe()","2ff7294c":"# \u00dcstteki siyah \u00e7izgi max\n# \u00dcstteki mavi \u00e7izgi %75\n# Ye\u015fil \u00e7izgi medyand\u0131r (%50)\n# Alttaki mavi \u00e7izgi %25\n# Alttaki siyah \u00e7izgi min\n# ayk\u0131r\u0131 de\u011fer yok\ndata.boxplot(column='defense_overall',by = 'offense_overall')","c07315be":"data_new = data.head() \ndata_new","e1f58d1a":"# veriyi seaborn da kullanabilmek ve kolay g\u00f6rselle\u015ftimek il\u00e7in melt() ile istedi\u011fimiz hale getiriyoruz.\nmelted = pd.melt(frame=data_new,id_vars = 'hero_name', value_vars= ['defense_overall','offense_overall'])\nmelted","10cbcfdf":"# melt() ile olu\u015fturulan datay\u0131 eski haline getiriyoruz\nmelted.pivot(index = 'hero_name', columns = 'variable',values='value')","9f0154fb":"# ilk5 ile son 5 sat\u0131rdaki verileri alarak birle\u015ftiriyoruz\ndata1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","26265377":"# belirlenen s\u00fctundaki ilk 5 veriyi alarak tek veri tablosunda birle\u015ftiriyoruz\ndata1 = data['defense_overall'].head()\ndata2= data['offense_overall'].head()\nconc_data_col = pd.concat([data1,data2],axis =1)\nconc_data_col","575889ed":"data.dtypes","838da4a7":"#belirledi\u011fimiz s\u00fctundaki verinin t\u00fcr\u00fcrn\u00fc istenilen t\u00fcre \u00e7eviriyoruz\ndata['hero_name'] = data['hero_name'].astype('category')\ndata['mana'] = data['mana'].astype('float')","05aadabc":"data.dtypes","c064e23c":"data.info()","7622a6ed":"#nan de\u011fer olmad\u0131\u011f\u0131 i\u00e7in \u00f6rnek olmas\u0131 ad\u0131na devam ediyorum\ndata[\"role\"].value_counts(dropna =False)","4de5f0ad":"data1=data # yanl\u0131\u015f bir g\u00f6sterim birinde yap\u0131lan de\u011fi\u015fiklik \u00f6tekini de etkiliuor \n#nan de\u011fer olanlar\u0131 drop ediyoruz ve data1 e kaydediyoruz\ndata1[\"role\"].dropna(inplace = True)","1e086504":"#\u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131z zaman herhangi bir d\u00f6n\u00fc\u015f sa\u011flamad\u0131ysa role verisinden t\u00fcm nan de\u011ferlerini atm\u0131\u015f\u0131z demektir\nassert  data['role'].notnull().all()","ee223d95":"#nan olan de\u011ferleri empty ile dolduruyourz\ndata[\"Type 2\"].fillna('empty',inplace = True)","ef90decd":"# verimdeki atak,defans ve h\u0131z\u0131 tek bir plot \u00fczerinde g\u00f6steriyoruz\ndata1 = data.loc[:,[\"physical_atk\",\"physical_defense\",\"movement_spd\"]]\ndata1.plot()","8a83a9d6":"# atak,defans ve h\u0131z\u0131 ayr\u0131 ayr\u0131 plotlarda g\u00f6steriyoruz\ndata1.plot(subplots = True)\nplt.show()","7c67f459":"# atak ve defans\u0131 scatter plot \u00fczerinde g\u00f6steriyoruz  \ndata1.plot(kind = \"scatter\",x=\"physical_atk\",y = \"physical_defense\")\nplt.show()","3da8e913":"# hist plot  \ndata1.plot(kind = \"hist\",y = \"physical_defense\",bins = 50,range= (0,30))","a986824a":"# histogram subplot with non cumulative and cumulative\nfig, axes = plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind = \"hist\",y = \"physical_defense\",bins = 50,range= (0,30),ax = axes[0])\ndata1.plot(kind = \"hist\",y = \"physical_defense\",bins = 50,range= (0,28),ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","71805ee4":"data.describe()","e14fba2a":"# normalde index de\u011feri 0 dan ba\u015flarken \u015fimdi index de\u011ferini 1 den ba\u015flat\u0131yoruz\ndata = pd.read_csv('..\/input\/mobile-legends-bang-bang-mlbb-heros-dataset\/mlbb_heros.csv')\ndata= data.set_index(\"#\")\ndata.head()","00e605e3":"data[\"hp\"][1]","f258319c":"data.hp[1]","b9af8fef":"data.loc[1,[\"hp\"]]","18de0530":"data[[\"hp\",\"physical_atk\"]]","5c563c61":"# tek k\u00f6\u015feli parantez seriler - iki k\u00f6\u015feli parantez data framler\nprint(type(data[\"hp\"]))     # series\nprint(type(data[[\"hp\"]]))   # data frames","d2f9e264":"data.loc[0:10,\"hp\":\"magic_defense\"]   ","cb4064cc":"data.loc[10:1:-1,\"hp\":\"magic_defense\"] ","f0df7755":"data.loc[1:10,\"movement_spd\":] ","749de703":"boolean = data.hp > 2500\ndata[boolean]","d23a24e4":"first_filter = data.hp > 2750\nsecond_filter = data.movement_spd > 250\ndata[first_filter & second_filter]","375ae9c3":"data.hp[data.movement_spd<200]","fa4cca10":"# apply kullanarak hp de\u011ferlerini yar\u0131ya indirdik\ndef div(n):\n    return n\/2\ndata.hp.apply(div)","27e6295b":"# lamda fonksiyonu kullanarak hlp de\u011ferleri 2 ye b\u00f6ld\u00fck\ndata.hp.apply(lambda n : n\/2)","90529e0c":"# Defining column using other columns\ndata[\"total_power\"] = data.physical_atk + data.physical_defense\ndata.head()","13af5414":"# index ismini \u00f6\u011freniyoruz\nprint(data.index.name)\n# de\u011fi\u015ftiriyoruz\ndata.index.name = \"index_name\"\ndata.head()","83c63a6f":"data.head()\n# verileri data3 ad\u0131nda ba\u015fka bir veri tablosauna kopyal\u0131youruz\ndata3 = data.copy()\n# ard\u0131ndan data3 deki index de\u011ferlerini 100 ba\u015flayarak 1 er art\u0131r\u0131yoruz\ndata3.index = range(100,203,1)\ndata3.head()","7b6bfa8d":"<a id=\"38\"><\/a> <br>\n### HIERARCHICAL INDEXING\n* \u0130ndekslemeyi ayarlama","81c181de":"data = pd.read_csv('..\/input\/mobile-legends-bang-bang-mlbb-heros-dataset\/mlbb_heros.csv')\ndata.head()","6af4a6f7":"# Setting index : role d\u0131\u015f dizin, magic_defense i\u00e7 dizin olark index oluyor\ndata1 = data.set_index([\"magic_defense\",\"role\"]) \ndata1.head(50)","ee29d33b":"<a id=\"16\"><\/a> <br>\n# CLEANING DATA","9ce386a3":"<a id=\"18\"><\/a> <br>\n### EXPLORATORY DATA ANALYSIS\nvalue_counts(): Frekans say\u0131lar\u0131\n<br>outliers: verilerin geri kalan\u0131ndan \u00f6nemli \u00f6l\u00e7\u00fcde daha y\u00fcksek veya daha d\u00fc\u015f\u00fck olan de\u011fer\n* Diyelim ki %75'teki de\u011fer Q3 ve %25'teki de\u011fer Q1.\n* Outlier, Q1 - 1.5(Q3-Q1)'den k\u00fc\u00e7\u00fck ve Q3 + 1.5(Q3-Q1)'den daha b\u00fcy\u00fck. (\u00c73-Q1) = IQR\n<br>describe() method kullanaca\u011f\u0131z. Describe method i\u00e7erir:\n* count: girdilerin say\u0131s\u0131\n* mean: giri\u015flerin ortalamas\u0131\n* std: standart sapma\n* min: minimum giri\u015f\n* 25%: ilk quantile\n* 50%: medyan veya ikinci quantile\n* 75%: \u00fc\u00e7\u00fcnc\u00fcquantile\n* max: maximum giri\u015f\n\n<br>Quantile ne ?\n\n* 1,4,5,6,8,9,11,12,13,14,15,16,17\n* Medyan, dizinin **ortas\u0131nda** bulunan say\u0131d\u0131r. Bu durumda 11 olur.\n* Alt \u00e7eyrek, en k\u00fc\u00e7\u00fck say\u0131 ile medyan aras\u0131ndaki medyand\u0131r, yani 1 ile 11 aras\u0131nda, yani 6'd\u0131r.\n* \u00dcst \u00e7eyrek, medyan ile en b\u00fcy\u00fck say\u0131 aras\u0131ndaki medyan\u0131, yani yukar\u0131daki soruya g\u00f6re 14 olacak olan 11 ile 17 aras\u0131nda bulursunuz.","f89bf57f":"<a id=\"28\"><\/a> <br>\n### VISUAL EXPLORATORY DATA ANALYSIS\n* Plot\n* Subplot\n* Histogram:\n    * bins: number of bins\n    * range(tuble): min and max values of bins\n    * normed(boolean): normalize or not\n    * cumulative(boolean): compute cumulative distribution","88e79aad":"* <a id=\"33\"><\/a> <br>\n### INDEXING DATA FRAMES\n* K\u00f6\u015feli parantez kullanarak indeksleme\n* S\u00fctun niteli\u011fini ve sat\u0131r etiketini kullanma\n* loc eri\u015fimcisini kullanma\n* Yaln\u0131zca baz\u0131 s\u00fctunlar\u0131 se\u00e7me","38ed13fc":"<a id=\"2\"><\/a> <br>\n### MATPLOTLIB\nMatplot, verileri \u00e7izmemize yard\u0131mc\u0131 olan bir python k\u00fct\u00fcphanesidir. En kolay ve en temel grafikler line, scatter ve histogram grafikleri.\n* Line plot, x ekseni zaman oldu\u011funda daha iyidir.\n* \u0130ki de\u011fi\u015fken aras\u0131nda korelasyon oldu\u011funda scatter daha iyidir.\n* Say\u0131sal verilerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmemiz gerekti\u011finde histogram daha iyidir.\n* Customization: Renkler, etiketler, \u00e7izgi kal\u0131nl\u0131\u011f\u0131, ba\u015fl\u0131k, opakl\u0131k, \u0131zgara, figsize, eksen keneleri ve \u00e7izgi stili","4123c040":"<a id=\"24\"><\/a> <br>\n### MISSING DATA and TESTING WITH ASSERT\nEksik verilerle kar\u015f\u0131la\u015f\u0131rsak ne yapabiliriz:\n* oldu\u011fu gibi b\u0131rak\n* onlar\u0131 dropna() ile b\u0131rak yani veri setinden \u00e7\u0131karabiliriz\n* eksik de\u011feri fillna() ile doldurun bo\u015f olan yerleri (Nan) ile doldurabiliriz\n* ortalama gibi test istatistikleri ile eksik de\u011ferleri doldurun\n<br>","f488a942":"<a id=\"34\"><\/a> <br>\n### SLICING DATA FRAME\n* S\u00fctun se\u00e7me aras\u0131ndaki fark\n    * Seriler ve veri \u00e7er\u00e7eveleri\n* Dilimleme ve indeksleme serisi\n* Ters dilimleme\n* From something to end","45ba68fc":"<a id=\"21\"><\/a> <br>\n### PIVOTING DATA\nMelt ile olu\u015fturulan veriyi eski haline getirme i\u015flemi.","6fc9d4b2":"<a id=\"35\"><\/a> <br>\n### FILTERING DATA FRAMES\nBoolean serisi olu\u015fturma \nFiltreleri birle\u015ftirme \nS\u00fctun baz\u0131nda di\u011ferlerini filtreleme","9940dc90":"<a id=\"23\"><\/a> <br>\n### DATA TYPES\n5 temel veri t\u00fcr\u00fc vard\u0131r: object(string),boolean, integer, float ve categorical.\n<br> str'den kategorik'e veya int'den float'a gibi d\u00f6n\u00fc\u015f\u00fcm veri t\u00fcrlerini yapabiliriz.\n<br> Kategori neden \u00f6nemlidir:\n* veri \u00e7er\u00e7evesini bellekte k\u00fc\u00e7\u00fclt\n* \u00f6zellikle sklearn i\u00e7in analiz i\u00e7in kullan\u0131labilir","c6229f07":"<a id=\"36\"><\/a> <br>\n### TRANSFORMING DATA\n* Plain python fonksiyonlar\u0131\n* Di\u011fer s\u00fctunlar\u0131 kullanarak s\u00fctun tan\u0131mlama","979dcd0b":"<a id=\"17\"><\/a> <br>\n### DIAGNOSE DATA for CLEANING\nKe\u015ffetmeden \u00f6nce verileri te\u015fhis edip temizlememiz gerekiyor.\n<br>Temiz olmayan veriler:\n* B\u00fcy\u00fck-k\u00fc\u00e7\u00fck harf veya kelimeler aras\u0131nda bo\u015fluk gibi s\u00fctun ad\u0131 tutars\u0131zl\u0131\u011f\u0131\n* kay\u0131p veri\n* farkl\u0131 dil\n\n<br> Verileri te\u015fhis etmek i\u00e7in head, tail, columns, shape and info methods kullanaca\u011f\u0131z.","d050c12a":"<a id=\"20\"><\/a> <br>\n### TIDY DATA\nVerileri melt() ile d\u00fczenliyoruz.","c2f4726a":"<a id=\"22\"><\/a> <br>\n### CONCATENATING DATA\n\u0130ki veri \u00e7er\u00e7evesini birle\u015ftirebiliriz.","f829a148":"<a id=\"29\"><\/a> <br>\n### STATISTICAL EXPLORATORY DATA ANALYSIS\n* count: girdilerin say\u0131s\u0131\n* mean: giri\u015flerin ortalamas\u0131\n* std: standart sapma\n* min: minimum giri\u015f\n* 25%: ilk quantile\n* 50%: medyan veya ikinci quantile\n* 75%: \u00fc\u00e7\u00fcnc\u00fcquantile\n* max: maximum giri\u015f","2e010f7a":"<a id=\"37\"><\/a> <br>\n### INDEX OBJECTS AND LABELED DATA\nindex: sequence of label\n","1357aed1":"<a id=\"19\"><\/a> <br>\n### VISUAL EXPLORATORY DATA ANALYSIS\n* Box plots: visualize basic statistics like outliers, min\/max or quantiles"}}