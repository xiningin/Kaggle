{"cell_type":{"97142ef3":"code","e2446cc8":"code","5c341bd0":"code","244ecbfb":"code","4659c372":"code","e5727501":"code","2010aa77":"code","be1cc520":"code","5b8d507c":"code","e1ae53f8":"code","3bfd6f80":"code","3429fa5d":"code","2b460299":"code","8badef0e":"code","1cc8ff82":"code","b5d84096":"code","3af68c2e":"code","bc80a891":"code","24f81e02":"code","f7fbed18":"code","d0483b19":"code","4c215711":"code","d54df43f":"code","0175dd50":"code","eaf215f5":"code","920b6453":"markdown","ca41843a":"markdown","90be145b":"markdown","b9e75495":"markdown","3bb41410":"markdown","9d2ad2b6":"markdown","123a3fe5":"markdown","14558aae":"markdown","c77f655e":"markdown","15a3abe3":"markdown","f7b1097b":"markdown","18d2250b":"markdown","a23bd865":"markdown","c0701215":"markdown","ad2f7e08":"markdown","d5dfcb27":"markdown","74567377":"markdown","0700b077":"markdown","1292982a":"markdown","3defb70e":"markdown","a2c0e0e1":"markdown","1856e731":"markdown","c9865785":"markdown","aa0271bd":"markdown","963976f3":"markdown"},"source":{"97142ef3":"import math\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nsns.set_style('darkgrid')","e2446cc8":"datapath = '\/kaggle\/input\/dementia-prediction-dataset\/dementia_dataset.csv'\ndataset = pd.read_csv(datapath)\nclasses = ['Nondemented', 'Demented']","5c341bd0":"dataset","244ecbfb":"dataset.drop(dataset.loc[dataset['Group'] == 'Converted'].index, inplace=True)\ndataset.drop(['Subject ID', 'MRI ID', 'Visit', 'MR Delay', 'Hand'], axis=1, inplace=True)\ndataset['M\/F'] = dataset['M\/F'].apply(lambda x: ['M', 'F'].index(x))\ndataset['Class'] = [classes.index(group) for group in dataset['Group']]\n\ndataset","4659c372":"dataset['SES'] = dataset.groupby('Class', sort=False)['SES'].apply(lambda x: x.fillna(np.round(x.mean()))).astype(np.int64)\ndataset['MMSE'] = dataset.groupby('Class', sort=False)['MMSE'].apply(lambda x: x.fillna(np.round(x.mean()))).astype(np.int64)\n\ndataset","e5727501":"sns.pairplot(dataset.drop('Class', axis=1), hue='Group')\nplt.show()","2010aa77":"def plot(dataframe, column):\n    mx = np.ceil(dataframe[column].max())\n    mn = np.floor(dataframe[column].min())\n    \n    # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0441\u0435\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432\n    if dataframe[column].dtype == np.int64():\n        nbins = int(min(mx - mn + 1, 30)) + 1\n    else:\n        nbins = int(min((mx - mn + 1) * 10, 30)) + 1\n    \n    bins = np.linspace(mn, mx, nbins)\n    \n    bars = []\n    \n    for i in range(len(classes)):\n        bars.append(dataframe.where(dataframe['Class'] == i).dropna()[column].to_numpy().flatten())\n        \n    figure = plt.figure(figsize=(20, 10))\n    \n    ax = figure.add_subplot(111)\n    ax.hist(bars, bins, label=classes)\n    ax.legend(loc='upper left')\n    plt.show()","be1cc520":"plot(dataset, 'Age')","5b8d507c":"plot(dataset, 'M\/F')","e1ae53f8":"plot(dataset, 'ASF')","3bfd6f80":"# \u0418\u043c\u043f\u043e\u0440\u0442\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0438\u0437 \u0431\u0438\u0431\u043b\u0435\u043e\u0442\u0435\u043a\u0438 sklearn\n\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.model_selection import train_test_split","3429fa5d":"from sklearn.metrics import roc_auc_score, r2_score, mean_absolute_error, mean_squared_error\n\n# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e RMSE \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 MSE\ndef root_mean_squared_error(labels, predictions):\n    return mean_squared_error(labels, predictions, squared=False)\n\nmetrics = [roc_auc_score, r2_score, mean_absolute_error, mean_squared_error, root_mean_squared_error]\n\n# \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430\ndef apply_metrics(labels, predictions):\n    return [metric(labels, predictions) for metric in metrics]\n\n# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0434\u043b\u044f \u043c\u0435\u0442\u0440\u0438\u043a\ndef plot_metrics(dataframe, metric):\n    plt.barh(dataframe['Algorithm'], dataframe[metric])\n    plt.title(metric)\n    plt.show()","2b460299":"prepdataset = dataset.drop('Group', axis=1)\n\ntrain, test = train_test_split(prepdataset, test_size = 0.1)\n\ntrain_feature = train.drop('Class', axis=1).to_numpy()\ntrain_label = train['Class'].to_numpy()\n\ntest_feature = test.drop('Class', axis=1).to_numpy()\ntest_label = test['Class'].to_numpy()\n\nscores = []","8badef0e":"nbc = GaussianNB()\nnbc.fit(train_feature, train_label)\n\nprediction = nbc.predict_proba(test_feature)[:, 1]\n\nscores.append(['\u041d\u0430\u0438\u0432\u043d\u044b\u0439 \u0411\u0430\u0439\u0435\u0441\u043e\u0432\u0441\u043a\u0438\u0439'] + apply_metrics(test_label, prediction))","1cc8ff82":"knn = KNeighborsClassifier()\nknn.fit(train_feature, train_label)\n\nprediction = knn.predict_proba(test_feature)[:, 1]\n\nscores.append(['KNN'] + apply_metrics(test_label, prediction))","b5d84096":"lda = LinearDiscriminantAnalysis()\nlda.fit(train_feature, train_label)\n\nprediction = lda.predict_proba(test_feature)[:, 1]\n\nscores.append(['\u041b\u0438\u043d\u0435\u0439\u043d\u044b\u0439 \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437'] + apply_metrics(test_label, prediction))","3af68c2e":"log = LogisticRegression(solver='liblinear')\nlog.fit(train_feature, train_label)\n\nprediction = log.predict_proba(test_feature)[:, 1]\n\nscores.append(['\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f'] + apply_metrics(test_label, prediction))","bc80a891":"svc = SVC(probability=True)\nsvc.fit(train_feature, train_label)\n\nprediction = svc.predict_proba(test_feature)[:, 1]\n\nscores.append(['\u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432'] + apply_metrics(test_label, prediction))","24f81e02":"rf = RandomForestClassifier()\nrf.fit(train_feature, train_label)\n\nprediction = rf.predict_proba(test_feature)[:, 1]\n\nscores.append(['\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441'] + apply_metrics(test_label, prediction))","f7fbed18":"columns = ['Algorithm', 'ROC-AUC', 'R^2', 'MAE', 'MSE', 'RMSE']\n\nscore_dict = {}\n\nfor column in zip(columns, *scores):\n    name, *values = column\n    score_dict[name] = values\n    \nscores_df = pd.DataFrame(score_dict)\n\nscores_df","d0483b19":"plot_metrics(scores_df, 'ROC-AUC')","4c215711":"plot_metrics(scores_df, 'R^2')","d54df43f":"plot_metrics(scores_df, 'MAE')","0175dd50":"plot_metrics(scores_df, 'MSE')","eaf215f5":"plot_metrics(scores_df, 'RMSE')","920b6453":"# \u0412\u044b\u0432\u043e\u0434\n\u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e \u0438\u0437 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432, \u043d\u0430\u0443\u0438\u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u044b\u043b \u043f\u043e\u043b\u0443\u0447\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043e\u043c\u043e\u043c **\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441**, \u0445\u0443\u0434\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438\u043c\u0435\u0435\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c **KNN**","ca41843a":"\u0412 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 `SES` \u0438 `MMSE` \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f `NaN`. \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0438\u0445 \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c.","90be145b":"# \u0412\u044b\u0431\u043e\u0440 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432\n\n1 \u0433\u0440\u0443\u043f\u043f\u0430:\n- \u041d\u0430\u0438\u0432\u043d\u044b\u0439 \u0411\u0430\u0439\u0435\u0441\u043e\u0432\u0441\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\n- K-nearest neighbors\n- Linear discriminant analysis\n- \u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f\n- \u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432\n\n2 \u0433\u0440\u0443\u043f\u043f\u0430:\n- \u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441","b9e75495":"## MSE","3bb41410":"## 1 \u041d\u0430\u0438\u0432\u043d\u044b\u0439 \u0411\u0430\u0439\u0435\u0441\u043e\u0432\u0441\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \n\u041d\u0430\u0438\u0432\u043d\u044b\u0439 \u0411\u0430\u0439\u0435\u0441\u043e\u0432\u0441\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u0411\u0430\u0439\u0435\u0441\u0430 \u0441\u043e \u0441\u0442\u0440\u043e\u0433\u0438\u043c\u0438 (\u043d\u0430\u0438\u0432\u043d\u044b\u043c\u0438) \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438 \u043e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438.","9d2ad2b6":"# \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438","123a3fe5":"## \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21165-6\n\u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435\u00ab\u0421\u0438\u0441\u0442\u0435\u043c\u044b \u0438\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u043b\u043b\u0435\u043a\u0442\u0430\u00bb\n\n\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u0414\u0435\u043d\u0438\u0441\u043e\u0432 \u0412.\u0410. \u0418\u0412\u0422-463","14558aae":"## 3 Linear discriminant analysis\n\u041b\u0438\u043d\u0435\u0439\u043d\u044b\u0439 \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 (\u041b\u0414\u0410, \u0430\u043d\u0433\u043b. Linear Discriminant Analysis, LDA), \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 (\u0430\u043d\u0433\u043b. Normal Discriminant Analysis, NDA) \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 (\u0430\u043d\u0433\u043b. Discriminant Function Analysis) \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0433\u043e \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430 \u0424\u0438\u0448\u0435\u0440\u0430, \u043c\u0435\u0442\u043e\u0434\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u0432 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0435, \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432 \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043b\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442 \u0434\u0432\u0430 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438\u043b\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439.","c77f655e":"## MAE","15a3abe3":"\u041f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u043c \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e eTIV \u0438\u043c\u0435\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u0443\u044e \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0442 ASF. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 CDR \u0434\u043b\u044f \u0437\u0434\u043e\u0440\u043e\u0432\u044b\u0445 \u043b\u044e\u0434\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 0. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f MMSE \u0434\u043b\u044f \u0437\u0434\u043e\u0440\u043e\u0432\u044b\u0445 \u043b\u044e\u0434\u0435\u0439 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0435 \u043e\u0442 25 \u0434\u043e 30.","f7b1097b":"## \u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0438\n\n\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0434\u043b\u044f \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439, \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0443 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430.","18d2250b":"## RMSE","a23bd865":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u0434\u043b\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.","c0701215":"# \u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432\n\n## \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n\n\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0432 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 90\/10 - \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435\/\u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.","ad2f7e08":"\u041d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445:\n- M\/F\n- Hand\n- Age\n- EDUC\n- SES\n- MMSE\n- CDR\n- eTIV\n- nWBV\n- ASF\n\n\u0422.\u043a \u043a\u043e\u043b\u043e\u043d\u043a\u0430 `Hand` \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0442\u043e \u0435\u0451 \u043c\u043e\u0436\u043d\u043e \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c.\n\n\u0426\u0435\u043b\u0435\u0432\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 - `Group`. \u0415\u0451 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430\u0445 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.","d5dfcb27":"## 6 \u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441\nRandom forest (\u0441 \u0430\u043d\u0433\u043b.\u2009\u2014\u2009\u00ab\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441\u00bb) \u2014 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u041b\u0435\u043e \u0411\u0440\u0435\u0439\u043c\u0430\u043d\u043e\u043c \u0438 \u0410\u0434\u0435\u043b\u044c \u041a\u0430\u0442\u043b\u0435\u0440 (\u0430\u043d\u0433\u043b.)\u0440\u0443\u0441\u0441\u043a., \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0438\u0439\u0441\u044f \u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u043e\u043c\u0438\u0442\u0435\u0442\u0430 (\u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044f) \u0440\u0435\u0448\u0430\u044e\u0449\u0438\u0445 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432.","74567377":"## ROC-AUC","0700b077":"# \u0420\u0430\u0437\u0431\u043e\u0440 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\n\nhttps:\/\/www.kaggle.com\/shashwatwork\/dementia-prediction-dataset\n\n\u0414\u0430\u0442\u0430\u0441\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 373 \u0441\u0442\u0440\u043e\u043a \u0438 15 \u043a\u043e\u043b\u043e\u043d\u043e\u043a. \u041a\u0430\u0436\u0434\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0432\u0438\u0437\u0438\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0438 \u0441\u043e\u0436\u0435\u0440\u0436\u0438\u0442 \u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u0432\u0438\u0437\u0438\u0442.","1292982a":"## 4 \u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f\n\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u0438\u043b\u0438 \u043b\u043e\u0433\u0438\u0442-\u043c\u043e\u0434\u0435\u043b\u044c (\u0430\u043d\u0433\u043b. logit model) \u2014 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0430\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u0443\u0442\u0451\u043c \u0435\u0433\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u0440\u0438\u0432\u043e\u0439. \u042d\u0442\u0430 \u0440\u0435\u0433\u0440\u0435c\u0441\u0438\u044f \u0432\u044b\u0434\u0430\u0451\u0442 \u043e\u0442\u0432\u0435\u0442 \u0432 \u0432\u0438\u0434\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f (1 \u0438\u043b\u0438 0).","3defb70e":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430","a2c0e0e1":"## 5 \u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432\n\u041c\u0435\u0442\u043e\u0434 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432 (\u0430\u043d\u0433\u043b. SVM, support vector machine) \u2014 \u043d\u0430\u0431\u043e\u0440 \u0441\u0445\u043e\u0436\u0438\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0441 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0445\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430.","1856e731":"# \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432\n\n\u0421\u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043c\u0435\u0442\u0440\u0438\u043a \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c.","c9865785":"# \u0412\u044b\u0431\u043e\u0440 \u043c\u0435\u0442\u0440\u0438\u043a\n\u0414\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438:\n- ROC-AUC\n- R^2\n- MAE\n- MSE\n- RMSE","aa0271bd":"## 2 K-nearest neighbors\n\u041c\u0435\u0442\u043e\u0434 k-\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 (\u0430\u043d\u0433\u043b. k-nearest neighbors algorithm, k-NN) \u2014 \u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u043b\u0438 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.","963976f3":"## R^2"}}