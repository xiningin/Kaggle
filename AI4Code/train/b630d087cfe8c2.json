{"cell_type":{"eb2a8009":"code","54d73099":"code","0719daf5":"code","eb3af9ea":"code","be9b0d1c":"code","6dac03a4":"code","ac85e37b":"code","5d2f6aec":"code","1a54841f":"code","cd355540":"code","1d292295":"code","bc0f602b":"code","88376472":"code","f062ca92":"code","b5ac7ceb":"code","f973d48b":"code","71770bfa":"code","d776e07a":"code","c538e597":"code","8051ccc5":"code","b1d6590c":"code","5ad9ad1a":"markdown","a2d69797":"markdown","6fd11f7a":"markdown","76146206":"markdown","ccaf55ab":"markdown","9980e7e3":"markdown","53cffbb7":"markdown","470d86c0":"markdown","f896ded8":"markdown","56f85ac7":"markdown","66632701":"markdown","10591b88":"markdown","3282d361":"markdown","4cf7928c":"markdown","de589642":"markdown"},"source":{"eb2a8009":"l=[16,16,16,16,16,16,16,16,16,16,18,26,48,74,79,130,165,203,262,525,670,800,1040,1224,1565,1966,2714,3621]\nimport numpy as np\nm=np.linspace(1,len(l),len(l))\nfrom scipy.optimize import curve_fit\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.express as px\n\nimport numpy as np\ndef func(t,a,b):\n    return a*np.exp(b*t)","54d73099":"popt, pcov = curve_fit(func,  m,  l)","0719daf5":"popt","eb3af9ea":"import matplotlib.pyplot as plt","be9b0d1c":"q=np.linspace(1,37,38)","6dac03a4":"fig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=func(m,*popt),\n        mode=\"markers+lines\",\n        name=\"Modeled Curve\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"red\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of Infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()\n\n#py.iplot([{\"x\": m, \"y\": func(m,*popt)}])\n#py.iplot([{\"x\": m, \"y\": l}])","ac85e37b":"fig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=q,\n        y=func(q,*popt),\n        mode=\"markers+lines\",\n        name=\"Curve\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"black\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of Infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()","5d2f6aec":"res = [(l[i + 1] - l[i]) for i in range(len(m)-1)] \nresnew=[(res[i + 1]\/res[i]) for i in range(10,len(res)-1)]","1a54841f":"fig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x=[i for i in range(10,len(res)-1)],\n        y=resnew,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Growth factor\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()\n","cd355540":"resnew[-1]","1d292295":"change=[((resnew[i + 1]-resnew[i])\/resnew[i]) for i in range(len(resnew)-1)]","bc0f602b":"fig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=change,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Rate of change of growth factor\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()\n\n","88376472":"def func2(t):\n    return 52000\/(1+np.exp(-0.3*(t-37)))","f062ca92":"t=np.linspace(1,74,74)\nfig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=t,\n        y=func2(t),\n        mode=\"markers+lines\",\n        name=\"Curve\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"black\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\n\nfig.show()\n\n#py.iplot([{\"x\": m, \"y\": func(m,*popt)}])\n#py.iplot([{\"x\": m, \"y\": l}])","b5ac7ceb":"import numpy as np\nfrom scipy.integrate import odeint\nimport matplotlib.pyplot as plt\nimport pandas as pd\n# Total population, N.\ndef SIRModel(beta):\n    N = 82790000\n\n    I0, R0 = 16, 0\n\n    S0 = N - I0 - R0\n   \n    beta, gamma = beta, 1.\/14\n\n    t = np.linspace(0, 100, 100)\n\n    def SIRderiv(y, t, N, beta, gamma):\n        S, I, R = y\n        dSdt = -beta * S * I \/ N\n        dIdt = beta * S * I \/ N - gamma * I\n        dRdt = gamma * I\n        return dSdt, dIdt, dRdt\n\n    y0 = S0, I0, R0\n\n    ret = odeint(SIRderiv, y0, t, args=(N, beta, gamma))\n    S, I, R = ret.T\n\n    return S,I,R","f973d48b":"fig1 = go.Figure()\n\nfor step in np.arange(0, 1.1, .1):\n    \n    fig1.add_trace(\n        go.Scatter(\n            visible=False,\n            line=dict(color=\"red\", width=6),\n            name=\"\ud835\udf08 = \" + str(step),\n            x=np.linspace(1,160,160),\n            y=SIRModel(step)[1]))\n    \n    \n\n# Make 10th trace visible\n#fig1.data[10].visible = True\n\n# Create and add slider\nsteps = []\nfor i in range(len(fig1.data)):\n    step = dict(\n        method=\"restyle\",\n        args=[\"visible\", [False] * len(fig1.data)],\n    )\n    step[\"args\"][1][i] = True  # Toggle i'th trace to \"visible\"\n    steps.append(step)\n\nsliders = [dict(\n    active=10,\n    currentvalue={\"prefix\": \"Beta: \"},\n    steps=steps\n)]\n\nfig1.update_layout(\n    sliders=sliders\n)\n\nfig1.show()","71770bfa":"S,I,R=SIRModel(0.523)\nt=np.linspace(1,100,100)\nfig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=t,\n        y=I\/1000,\n        mode=\"markers+lines\",\n        name=\"Infections (SIR)\",\n        line=dict(\n            color=\"red\"\n        )\n    )\n)\nfig.add_trace(\n    go.Scatter(\n        x=t,\n        y=R\/1000,\n        mode=\"markers+lines\",\n        name=\"Recovered (SIR)\",\n        line=dict(\n            color=\"green\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=t,\n        y=S\/1000,\n        mode=\"markers+lines\",\n        name=\"Susceptible (SIR)\",\n        line=dict(\n            color=\"black\"\n        )\n    )\n)\n\n\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Real Infections\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\nfig.update_layout(\n    title=\"Germany\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of cases\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()","d776e07a":"i=[3,3,3,3,3,4,21,79,157,229,323,470,655,889,1128,1701,2036,2502,3089,3858,4636,5883,7375,9172,10149,12462,15113,17660]\nn=np.linspace(1,len(i),len(i))\npopt2, pcov2 = curve_fit(func,  n,  i)\nfig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=n,\n        y=func(n,*popt2),\n        mode=\"markers+lines\",\n        name=\"Curve\",\n        line=dict(\n            color=\"blue\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=n,\n        y=i,\n        mode=\"markers+lines\",\n        name=\"Real\",\n        line=dict(\n            color=\"red\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Italy\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of Infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\nfig.show()\n","c538e597":"fig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=m,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Germany\",\n        line=dict(\n            color=\"Red\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=n,\n        y=i,\n        mode=\"markers+lines\",\n        name=\"Italy\",\n        line=dict(\n            color=\"Green\"\n        )\n    )\n)\n\nfig.update_layout(\n    title=\"Italy\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of Infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()","8051ccc5":"from scipy.signal import correlate\nfig = go.Figure()\nfig.add_trace(\n    go.Scatter(\n        x=m-8.5,\n        y=l,\n        mode=\"markers+lines\",\n        name=\"Germany\",\n        line=dict(\n            color=\"Red\"\n        )\n    )\n)\n\nfig.add_trace(\n    go.Scatter(\n        x=n,\n        y=i,\n        mode=\"markers+lines\",\n        name=\"Italy\",\n        line=dict(\n            color=\"Green\"\n        )\n    )\n)\n\n\nfig.update_layout(\n    title=\"Italy vs Germany(time warped)\",\n    xaxis_title=\"Days\",\n    yaxis_title=\"Number of Infections\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=14,\n        color=\"black\"\n    )\n)\n\nfig.show()\n","b1d6590c":"np.corrcoef(l,i)[0,1]","5ad9ad1a":"## Change of rate of growth factor. Can be referred to as the second order derivative which can tell use how the growth factor is moving. The last data point shows growth factor is decreasing.","a2d69797":"## Every exponential increase in the case of epidemics has to flatten or dampen out but the inflection point is when the rate of change becomes equal to 1. This is similar to the fact that the epidemic curve is a logistic growth function and the dampening phase begins post the derivative of the curve start decreasing from 1 towards 0. This is also called the growth factor.","6fd11f7a":"## The SIR model is one of the simplest compartmental models, and many models are derivations of this basic form. The model consists of three compartments: S for the number of susceptible, I for the number of infectious, and R for the number recovered (or immune) individuals. This model is reasonably predictive for infectious diseases which are transmitted from human to human, and where recovery confers lasting resistance, such as measles, mumps and rubella.\n## These variables (S, I, and R) represent the number of people in each compartment at a particular time. To represent that the number of susceptible, infected and recovered individuals may vary over time (even if the total population size remains constant), we make the precise numbers a function of t (time): S(t), I(t) and R(t). For a specific disease in a specific population, these functions may be worked out in order to predict possible outbreaks and bring them under control.\n## In the analyis S, I and R curves are considered for a time interval of 100 days assuming a recovery perido of 14 days.","76146206":"## Comparison of the rise of number of infection with respect to Italy.","ccaf55ab":"# This kernel is inspired by 3Blue1Brown's video https:\/\/www.youtube.com\/watch?v=Kas0tIxDvrg\n\n# Data is taken from https:\/\/www.worldometers.info\/coronavirus\/country\/germany\/\n","9980e7e3":"## Conclusion: If we assume that the growth factor is going to damp down and assume it becomes 1 after around 10 days that will be the inflection point (37th day) with a value around 26k. Extrapolating the exponential curve and imitating the logistic function we can see the number might dampen out after 33 more days (37x2 = 74th day) with a value: 2x26k = 52k.","53cffbb7":"\\begin{align}\n\\dot{Reproduction \\ Factor} & = \\beta \/ \\gamma \\\\\n\\gamma = Recovery  \\ Rate \\\\ \n\\beta = Infection  \\ Rate \\\\\n\\end{align}\n## Since reproduction factor is considered for COVID-19 to be between 2.2 and 2.5. But assuming reproduction factor to be similar to small pox being equal to 7 and keeping gamma as 1\/14 we get beta as 0.5 .","470d86c0":"# COVID-19 Analysis (Germany)","f896ded8":"## Growth factor of number of confirmed cases. Started from day 11 as it was constant = 16.","56f85ac7":"## Simple curve fitting of an exponential curve on the data","66632701":"## Infection curve for different values of betas from 0.1 to 1 (L->R)","10591b88":"## Doing some kind of time warping we can see, if we shift germany back in time by 8 - 9 days it seems like it somehow follows similar trend as Italy.","3282d361":"## The extrapolated using logistic growth function.","4cf7928c":"## As we can see that there is strong linear correlation between the time series.","de589642":"## The curve can imply 2 things either Italy is reaching it's infliction point soon or it has a biggger expontential factor (rate of spread of infection)."}}