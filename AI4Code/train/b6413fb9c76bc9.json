{"cell_type":{"9bfcf166":"code","4d1cfd7b":"code","ab3bc71c":"code","829254a7":"code","7e8ea180":"code","314bce12":"code","c9f1d72d":"code","30958767":"code","52ac8c97":"code","98c1115d":"code","1e929d00":"code","dedc0e0b":"code","239ca9bd":"code","e39be2ea":"code","cc7f2237":"code","4aeee4b9":"code","50636061":"code","aae5846a":"code","0fc40edd":"code","ca2759d6":"code","5b23a2ed":"code","5a43661f":"code","ae1cf158":"code","e7e5ebdf":"code","b32bb1d6":"code","cbf6a7c3":"code","9b69f24d":"code","460d3982":"markdown","0f7b8cc8":"markdown","75456cf8":"markdown","361ca618":"markdown","194e885f":"markdown","c5c3f935":"markdown","fa8d2486":"markdown","5df36c8f":"markdown","73b2a987":"markdown","0cc6d1d9":"markdown","427ef8ce":"markdown","48bd714c":"markdown","7aaf8dff":"markdown","5805e36a":"markdown","0c471136":"markdown","c6e67d8b":"markdown","09702f8d":"markdown","82e77082":"markdown","a5e36efd":"markdown","c2631f27":"markdown","d71dc1a7":"markdown","3adf74fa":"markdown","17b84a83":"markdown","5fd1fc96":"markdown","fd125fca":"markdown"},"source":{"9bfcf166":"import pandas as pd\nimport sklearn\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import preprocessing\nfrom sklearn import linear_model\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import loguniform as sp_loguniform\nfrom sklearn.preprocessing import OneHotEncoder\n\nimport os\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport seaborn as sns","4d1cfd7b":"adultTrain = pd.read_csv('..\/input\/adult-pmr3508\/train_data.csv',\n                      index_col=['Id'], na_values=\"?\")\nadultTest = pd.read_csv('..\/input\/adult-pmr3508\/test_data.csv',\n                        index_col=['Id'], na_values=\"?\")","ab3bc71c":"adultTrainFit = adultTrain.fillna(0)","829254a7":"adultTrain.head()","7e8ea180":"adultTest.head()","314bce12":"adultTrainNum = adultTrain[['age','fnlwgt','education.num','capital.gain','capital.loss','hours.per.week','income']]","c9f1d72d":"%%capture\nencoder = preprocessing.LabelEncoder()\ngraph_data  = adultTrainNum.copy()\ngraph_data['income'] = encoder.fit_transform(graph_data['income'])","30958767":"plt.figure(figsize=(10, 8))\nsns.heatmap(graph_data.corr(), annot=True, vmin=-1, vmax=1, cmap = 'rocket')","52ac8c97":"## Compara\u00e7\u00e3o entre sexos \nplt.figure(figsize=(12,12))\nplt.suptitle(\"Compara\u00e7\u00e3o entre sexos\")\nplt.subplot(221)\nadultTrain[adultTrain['income'] == '<=50K'].sex.value_counts().plot(kind = \"pie\")\nplt.title(\"income <=50K\")\nplt.subplot(222)\nadultTrain[adultTrain['income'] == '>50K'].sex.value_counts().plot(kind = \"pie\")\nplt.title(\"income >50K\")\nplt.show()","98c1115d":"## Compara\u00e7\u00e3o entre classes de trabalho \nplt.figure(figsize=(12,12))\nplt.suptitle(\"Compara\u00e7\u00e3o entre ocupa\u00e7\u00f5es de trabalho\")\nplt.subplot(221)\nadultTrain[adultTrain['income'] == '<=50K'].workclass.value_counts().plot(kind = \"pie\")\nplt.title(\"income <=50K\")\nplt.subplot(222)\nadultTrain[adultTrain['income'] == '>50K'].workclass.value_counts().plot(kind = \"pie\")\nplt.title(\"income >50K\")\nplt.show()","1e929d00":"plt.figure(figsize=(16,4))\nsns.countplot(x=\"income\", hue='marital.status', data=adultTrain, palette='rocket')","dedc0e0b":"plt.figure(figsize=(25,4))\nsns.countplot(x=\"income\", hue='occupation', data=adultTrain, palette='rocket')","239ca9bd":"plt.figure(figsize=(16,4))\nsns.countplot(x=\"income\", hue='relationship', data=adultTrain, palette='rocket')","e39be2ea":"plt.figure(figsize=(16,4))\nsns.countplot(x=\"income\", hue='race', data=adultTrain, palette='rocket')","cc7f2237":"plt.figure(figsize=(16,4))\nsns.countplot(x=\"income\", hue='sex', data=adultTrain, palette='rocket')","4aeee4b9":"Xtrain = adultTrainFit[['age','education.num','sex','capital.gain','capital.loss','hours.per.week']]\nYtrain = adultTrainFit['income']","50636061":"Xtrain","aae5846a":"Xtrain[\"sex-int\"] = np.where(Xtrain.sex=='Male', 1, 0)\nXtrain = Xtrain.drop(['sex'], axis = 1)","0fc40edd":"Xtrain","ca2759d6":"mlp = MLPClassifier(early_stopping = True)\n\nparameters = {'hidden_layer_sizes': [(2**i, 2**j) for j in np.arange(5, 8) for i in np.arange(4, 7)],\n              'alpha': sp_loguniform(1e-10, 1e-1),\n              'learning_rate': ['constant', 'adaptive']}\n\nNN = RandomizedSearchCV(mlp, parameters, scoring = 'accuracy', random_state = 42)\nNN = NN.fit(Xtrain, Ytrain)\n\nprint(f'Acur\u00e1cia: {NN.best_score_}')\nprint(f'Hiperpar\u00e2metros: {NN.best_params_}')","5b23a2ed":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\ntc = DecisionTreeClassifier(random_state=0)\n\nhyperparams = dict(criterion=['gini', 'entropy'],\n                  max_depth = np.linspace(2,15,50),\n                  min_samples_split = np.linspace(2,50,48, dtype = int))\n\nclf_tc = RandomizedSearchCV(tc, hyperparams, scoring='roc_auc', n_iter=50, cv=2, n_jobs=-1, random_state=0, verbose=2)\n\nsearch_tc = clf_tc.fit(Xtrain, Ytrain)","5a43661f":"print(\"Acur\u00e1cia:\",search_tc.best_score_ )\nprint(\"Melhores hiperpar\u00e2metros:\", search_tc.best_params_)","ae1cf158":"from sklearn.linear_model import LogisticRegression\n\nC = np.linspace(0,5,100)\nhyperparameters_LR = {'C':  [(i) for i in C],\n                      'penalty': ['l1','l2']}\n\nregressao_logistica = LogisticRegression(solver=\"liblinear\", random_state = 10)\nregressao_logistica_opt = RandomizedSearchCV(regressao_logistica, hyperparameters_LR, cv=5, \n                                             scoring='accuracy', verbose=2, n_jobs=-1, n_iter = 40, random_state = 0)\nRL = regressao_logistica_opt.fit(Xtrain, Ytrain)\n\nprint(\"Acur\u00e1cia:\",RL.best_score_ )\nprint(\"Melhores hiperpar\u00e2metros:\", RL.best_params_)","e7e5ebdf":"from sklearn.ensemble import RandomForestClassifier\nestimators = np.arange(start = 50, stop = 550, step = 50)\nmax_depth = np.arange(start=1, stop = 70, step = 5)\nhyperparameters_RF = {'n_estimators': estimators,\n                      'criterion': ['gini', 'entropy'],\n                      'max_depth': max_depth}\nfrom sklearn.model_selection import RandomizedSearchCV\n\nrandom_forest = RandomForestClassifier(random_state = 42)\n\nrandom_forest_opt = RandomizedSearchCV(random_forest, hyperparameters_RF, cv=5, \n                                             scoring='accuracy', verbose=2, n_jobs=-1, n_iter = 30, random_state = 0)\nRF = random_forest_opt.fit(Xtrain, Ytrain)","b32bb1d6":"print(\"Acur\u00e1cia:\", RF.best_score_)\nprint(\"Melhores hiperpar\u00e2metros:\", RF.best_params_)","cbf6a7c3":"adultTestFit = adultTest.fillna(0)\nXt = adultTestFit[['age','education.num','sex','capital.gain','capital.loss','hours.per.week']]\nXt[\"sex-int\"] = np.where(Xt.sex=='Male', 1, 0)\nXt = Xt.drop(['sex'], axis = 1)","9b69f24d":"predicoes = clf_tc.predict(Xt)\n\nsubmission = pd.DataFrame()\nsubmission['income'] = predicoes\nsubmission.to_csv('submission.csv',index_label = 'Id')","460d3982":"# 2. Prepara\u00e7\u00e3o dos dados","0f7b8cc8":"**Regress\u00e3o log\u00edstica**","75456cf8":"Para isso, utiliza-se uma convers\u00e3o que cria uma nova feature bin\u00e1ria equivalente \u00e0 feature de sexo. Em seguida-exclue-se a feature de sexo da sele\u00e7\u00e3o.","361ca618":"Redes neurais","194e885f":"Analisando esses m\u00e9todos, nesse caso,a \u00e1rvore de decis\u00e3o foi o melhor classificador","c5c3f935":"# **PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es**\n\nEP4\n\nAutor: David Calil Spindola Pedro\nNusp: 8989384","fa8d2486":"# 1. Prepara\u00e7\u00e3o dos dados\n\nInicialmente \u00e9 necess\u00e1rio importar todas as bibliotecas que ser\u00e3o usadas no c\u00f3digo","5df36c8f":"Escolhemos para nosso classificador as features num\u00e9ricas e a de sexo, contudo, h\u00e1 a necessidade de converter a vari\u00e1vel de sexo em um valor num\u00e9rico para o treino do classificador.","73b2a987":"**Predi\u00e7\u00e3o**","0cc6d1d9":"**Testes**","427ef8ce":"**Arvore de decis\u00e3o**","48bd714c":"Para a fun\u00e7\u00e3o heatmap, \u00e9 necess\u00e1rio transformar os valores em income em valores num\u00e9ricos. Vamos utilizar esse m\u00e9todo novamente mais para a frente.","7aaf8dff":"**Random forest**","5805e36a":"Substitui\u00e7\u00e3o de valores faltantes por 0","0c471136":"N\u00e3o h\u00e1 uma diferen\u00e7a proporcional significativa de Income entre diferentes classes de trabalho","c6e67d8b":"Em uma primeira an\u00e1lise, n\u00e3o h\u00e1 uma grande diferen\u00e7a proporcional entre ra\u00e7as na renda nessa base de dados.","09702f8d":"#     1.1 Features num\u00e9ricas\n Inicialmente vamos comparar as features que s\u00e3o n\u00famericos. \u00c9 poss\u00edvel com eles executar uma compara\u00e7\u00e3o estat\u00edstica de correla\u00e7\u00e3o, estimando suas influ\u00eancias sobre a label.","82e77082":"Pode-se verificar que h\u00e1 uma maior propor\u00e7\u00e3o de Homens em rela\u00e7\u00e3o a mulheres com income superior a 50K em compara\u00e7\u00e3o com <=50k","a5e36efd":"H\u00e1 uma propor\u00e7\u00e3o maior de Exec-managerial e Priv-house-serv com as demais ocupa\u00e7\u00f5es.","c2631f27":"Em seguida, carregamos os dados de treino e de teste","d71dc1a7":"H\u00e1 uma diferen\u00e7a proporcional de renda entre diferentes estados civis. H\u00e1 uma propor\u00e7\u00e3o bem maior de Married-civ-spouse com renda acima de 50k.","3adf74fa":"Comparando os cabe\u00e7alhos dos arquivos de treino e de teste \u00e9 pos\u00edvel notar que a coluna faltante no arquivo de teste \u00e9 a de Income, com uma classifica\u00e7\u00e3o bin\u00e1ria de <=50k ou >50k.\nSendo assim, o exerc\u00edcio est\u00e1 em analisar os dados que relacionam as demais features em rela\u00e7\u00e3o a essa discri\u00e7\u00e3o e renda e treinar um classificador KNN relacionado a essa base de dados.","17b84a83":"    1.2 Features Classificat\u00f3rias\n    \nAgora vamos analisar as features classificat\u00f3rias n\u00e3o num\u00e9ricas graficamente, vendo quais delas podem possuir uma maior influ\u00eancia sobre a nossa Label.","5fd1fc96":"H\u00e1 uma maior propor\u00e7\u00e3o de Maridos entre as rendas maiores de 50k. Esse dado pode ser relacionado com o de estado civil","fd125fca":"Analisando a matriz de correla\u00e7\u00e3o, pode-se notar que a feature fnlwgt tem pouca influencia sobre o income, principalmente quando comparado com as demais features num\u00e9ricas. Sendo assim, vamos desconsider\u00e1-la na an\u00e1lise."}}