{"cell_type":{"0de5e087":"code","acaf7195":"code","e2a78325":"code","7ce94f57":"code","0f6f59c2":"code","bafb85c4":"code","84d02172":"code","1b79d263":"code","1c5c1dc9":"code","0dd7d935":"code","5c67c342":"code","c45c6c98":"code","3dedd001":"code","2379c6c8":"code","6263963c":"code","e8297c8c":"code","651e759f":"code","e909c474":"code","1f630cb9":"code","74b477ae":"code","e9621145":"code","33067b52":"markdown","53ce13f0":"markdown","ae11854e":"markdown","48975b88":"markdown","08bf5f66":"markdown","ff8de4fb":"markdown","33225c05":"markdown","0f4c9f2b":"markdown","08f7173f":"markdown","2fee3c4f":"markdown","947c43cd":"markdown"},"source":{"0de5e087":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","acaf7195":"heart_data = pd.read_csv(r\"..\/input\/heart-disease-uci\/heart.csv\") # loading the csv data to a Pandas DataFrame","e2a78325":"heart_data.head() # print first 5 rows of the dataset","7ce94f57":"heart_data.tail() # print last 5 rows of the dataset","0f6f59c2":"heart_data.shape # number of rows and columns in the dataset","bafb85c4":"heart_data.info() # getting some info about the data","84d02172":"heart_data.isnull().sum() # checking for missing values","1b79d263":"heart_data.describe() # statistical measures about the data","1c5c1dc9":"heart_data['target'].value_counts() # checking the distribution of Target Variable","0dd7d935":"X = heart_data.drop(columns='target', axis=1)\nY = heart_data['target']","5c67c342":"print(X)","c45c6c98":"print(Y)","3dedd001":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=101)","2379c6c8":"print(X.shape, X_train.shape, X_test.shape)","6263963c":"model = LogisticRegression(solver='liblinear', max_iter=100)","e8297c8c":"# training the LogisticRegression model with Training data\nmodel.fit(X_train, Y_train)","651e759f":"# accuracy on training data\nX_train_prediction = model.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction, Y_train)","e909c474":"print('Accuracy on Training data : ', training_data_accuracy)","1f630cb9":"# accuracy on test data\nX_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","74b477ae":"print('Accuracy on Test data : ', test_data_accuracy)","e9621145":"input_data = (41,0,1,130,204,0,0,172,0,1.4,2,0,2)\n\n# change the input data to a numpy array\ninput_data_as_numpy_array= np.asarray(input_data)\n\n# reshape the numpy array as we are predicting for only on instance\ninput_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n\nprediction = model.predict(input_data_reshaped)\nprint(prediction)\n\nif (prediction[0] == 0):\n  print('The Person does not have a Heart Disease')\nelse:\n  print('The Person has Heart Disease')","33067b52":"Code written by Dhrumil Vadodaria!!\n\nConnect with me on LinkedIn for future discussions on ML: https:\/\/www.linkedin.com\/in\/dhrumil-v-814932128\/\n\nPlease provide citation if you use the code!","53ce13f0":"**Model Training**","ae11854e":"**Model Evaluation**","48975b88":"Accuracy Score","08bf5f66":"**Splitting the Data**","ff8de4fb":"Logistic Regression","33225c05":"1 --> Defective Heart\n\n0 --> Healthy Heart","0f4c9f2b":"**EDA**\n\nHeart Disease Dataset: https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci","08f7173f":"**Importing dependencies & libraries**\n\nAim: To predict if the person has a heart disease or not, using various features available from the dataset","2fee3c4f":"**Making a Predictive System**","947c43cd":"**Splitting the Features & Target**"}}