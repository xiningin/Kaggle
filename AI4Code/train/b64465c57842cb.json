{"cell_type":{"d2973854":"code","94359c3f":"code","555a132d":"code","3d19bb23":"code","c63f9b80":"code","ab114fae":"code","11c1eea7":"code","8c664a71":"code","2d56c9b6":"code","335b9f1f":"code","80983f3c":"code","8122c7a2":"code","128dafe3":"code","3bb82dda":"code","089edeea":"code","8d2b99f3":"code","6726b154":"code","ce3b1cc3":"code","510ef6ea":"markdown","7d5cacf9":"markdown","d6aef344":"markdown","b152f309":"markdown","86d7e7f6":"markdown","e001eecb":"markdown","c5a6a0d1":"markdown","ce08a566":"markdown","4d2d244c":"markdown","ad089fec":"markdown","3943f1eb":"markdown","f273b8d6":"markdown","357b93d9":"markdown","c9cac909":"markdown","8f592132":"markdown","cd3ca4d0":"markdown","e43b21c0":"markdown","65f74ea2":"markdown","b663260a":"markdown","0d88c5db":"markdown","a3bb90f8":"markdown","855ee465":"markdown"},"source":{"d2973854":"spam_amount = 0\nprint(spam_amount)\n\n# Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam)\nspam_amount = spam_amount + 4\n\nif spam_amount > 0:\n    print(\"But I don't want ANY spam!\")\n\nviking_song = \"Spam \" * spam_amount\nprint(viking_song)","94359c3f":"spam_amount = 0","555a132d":"print(spam_amount)","3d19bb23":"# Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam)\nspam_amount = spam_amount + 4","c63f9b80":"if spam_amount > 0:\n    print(\"But I don't want ANY spam!\")\n\nviking_song = \"Spam Spam Spam\"\nprint(viking_song)","ab114fae":"viking_song = \"Spam \" * spam_amount\nprint(viking_song)","11c1eea7":"spam_amount = 0","8c664a71":"type(spam_amount)","2d56c9b6":"type(19.95)","335b9f1f":"print(5 \/ 2)\nprint(6 \/ 2)","80983f3c":"print(5 \/\/ 2)\nprint(6 \/\/ 2)","8122c7a2":"8 - 3 + 2","128dafe3":"-3 + 4 * 2","3bb82dda":"hat_height_cm = 25\nmy_height_cm = 190\n# How tall am I, in meters, when wearing my hat?\ntotal_height_meters = hat_height_cm + my_height_cm \/ 100\nprint(\"Height in meters =\", total_height_meters, \"?\")","089edeea":"total_height_meters = (hat_height_cm + my_height_cm) \/ 100\nprint(\"Height in meters =\", total_height_meters)","8d2b99f3":"print(min(1, 2, 3))\nprint(max(1, 2, 3))","6726b154":"print(abs(32))\nprint(abs(-32))","ce3b1cc3":"print(float(10))\nprint(int(3.33))\n# They can even be called on strings!\nprint(int('807') + 1)","510ef6ea":"\"Number\", bu t\u00fcr \u015feyler i\u00e7in iyi bir gayri resmi isimdir, ancak daha teknik olmak istersek, Python'a spam_amount t\u00fcr\u00fcn\u00fc nas\u0131l tan\u0131mlayaca\u011f\u0131n\u0131 sorabiliriz:","7d5cacf9":"Yukar\u0131daki ilk sat\u0131r bir **yorum**. Python'da yorumlar `#` sembol\u00fc ile ba\u015flar.\n\nSonra bir yeniden atama \u00f6rne\u011fi g\u00f6r\u00fcyoruz. Varolan bir de\u011fi\u015fkenin de\u011ferini yeniden atamak, bir de\u011fi\u015fken olu\u015fturmakla ayn\u0131 g\u00f6r\u00fcn\u00fcr - yine de `=` atama operat\u00f6r\u00fcn\u00fc kullan\u0131r.\n\nBu durumda, \"spam_amount\"a atad\u0131\u011f\u0131m\u0131z de\u011fer, \u00f6nceki de\u011ferinde basit bir aritmetik i\u00e7erir. Bu sat\u0131rla kar\u015f\u0131la\u015ft\u0131\u011f\u0131nda Python, `=` (0 + 4 = 4) ifadesinin sa\u011f taraf\u0131ndaki ifadeyi de\u011ferlendirir ve ard\u0131ndan bu de\u011feri sol taraftaki de\u011fi\u015fkene atar.","d6aef344":"### Builtin functions for working with numbers\n\n`min` and `max` s\u0131ras\u0131yla arg\u00fcmanlar\u0131n\u0131n minimum ve maksimumunu d\u00f6nd\u00fcr ...","b152f309":"`abs` bir ba\u011f\u0131ms\u0131z de\u011fi\u015fkenin mutlak de\u011ferini d\u00f6nd\u00fcr\u00fcr:","86d7e7f6":"# Hello, Python!\n\nPython, \u0130ngiliz komedi toplulu\u011fu [Monty Python](https:\/\/en.wikipedia.org\/wiki\/Monty_Python), bu y\u00fczden ilk Python program\u0131m\u0131z\u0131 onlar\u0131n Spam hakk\u0131ndaki ske\u00e7lerine sayg\u0131 duru\u015fu niteli\u011finde yapaca\u011f\u0131z.\n\nSadece e\u011flence i\u00e7in, a\u015fa\u011f\u0131daki kodu okumay\u0131 ve \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda ne yapaca\u011f\u0131n\u0131 tahmin etmeyi deneyin. (Hi\u00e7bir fikriniz yoksa, sorun de\u011fil!)\n\nArd\u0131ndan program\u0131m\u0131z\u0131n sonu\u00e7lar\u0131n\u0131 g\u00f6rmek i\u00e7in \"output\" butonuna t\u0131klay\u0131n.","e001eecb":"### Order of operations\n\n\n\u0130lkokulda \u00f6\u011frendi\u011fimiz aritmetik, i\u015flemlerin de\u011ferlendirildi\u011fi s\u0131ra ile ilgili uzla\u015f\u0131mlara sahiptir. Baz\u0131lar\u0131 bunlar\u0131 a\u015fa\u011f\u0131daki gibi bir an\u0131msat\u0131c\u0131yla hat\u0131rlar:\n**PEMDAS** - **P**arentheses, **E**xponents, **M**ultiplication\/**D**ivision, **A**ddition\/**S**ubtraction.\n\nPython, \u00f6nce hangi hesaplamalar\u0131n ger\u00e7ekle\u015ftirilece\u011fi konusunda benzer kurallara uyar. \u00c7o\u011funlukla olduk\u00e7a sezgiseldirler.","c5a6a0d1":"Burada a\u00e7\u0131lacak \u00e7ok \u015fey var! Bu aptal program, Python kodunun nas\u0131l g\u00f6r\u00fcnd\u00fc\u011f\u00fcne ve nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131na dair bir\u00e7ok \u00f6nemli y\u00f6n\u00fc g\u00f6sterir. Kodu yukar\u0131dan a\u015fa\u011f\u0131ya inceleyelim.","ce08a566":"`*` operat\u00f6r\u00fc iki say\u0131y\u0131 \u00e7arpmak i\u00e7in kullan\u0131labilir (`3 * 3` 9 olarak de\u011ferlendirilir), ancak bu kadar \u00e7ok tekrarlanan bir s\u00fcr\u00fcm elde etmek i\u00e7in bir dizeyi bir say\u0131 ile \u00e7arpabiliriz. Python, \"*\" ve \"+\" gibi operat\u00f6rlerin ne t\u00fcr bir \u015feye uyguland\u0131klar\u0131na ba\u011fl\u0131 olarak farkl\u0131 anlamlara sahip oldu\u011fu, bunun gibi bir dizi ars\u0131z, zaman kazand\u0131ran numara sunar. (Bunun teknik terimi [operator overloading](https:\/\/en.wikipedia.org\/wiki\/Operator_overloading).)","4d2d244c":"**Function calls:**. `print`, kendisine iletilen de\u011feri ekranda g\u00f6r\u00fcnt\u00fcleyen bir Python i\u015flevidir. Adlar\u0131ndan sonra parantez koyarak ve bu parantez i\u00e7indeki i\u015fleve girdileri (veya *arg\u00fcmanlar\u0131*) koyarak i\u015flevleri \u00e7a\u011f\u0131r\u0131r\u0131z.","ad089fec":"Bir \"float\" ondal\u0131k basamakl\u0131 bir say\u0131d\u0131r - a\u011f\u0131rl\u0131klar veya oranlar gibi \u015feyleri temsil etmek i\u00e7in \u00e7ok kullan\u0131\u015fl\u0131d\u0131r.\n\n`type()` g\u00f6rd\u00fc\u011f\u00fcm\u00fcz ikinci yerle\u015fik i\u015flevdir (`print()`ten sonra) ve hat\u0131rlanmas\u0131 gereken ba\u015fka bir i\u015flevdir. Python'a \"bu nas\u0131l bir \u015fey?\" diye sorabilmek \u00e7ok faydal\u0131.","3943f1eb":"# S\u0131ra Sende\n\n\u015eimdi senin \u015fans\u0131n. deneyin **[first Python programming exercise](https:\/\/www.kaggle.com\/kernels\/fork\/1275163)**!","f273b8d6":"**Variable assignment:** Burada `spam_amount` ad\u0131nda bir de\u011fi\u015fken olu\u015fturuyoruz ve atama operat\u00f6r\u00fc olarak adland\u0131r\u0131lan `=` kullanarak ona 0 de\u011ferini atad\u0131k.\n\n> **Aside**: Di\u011fer baz\u0131 dillerde (Java veya C++ gibi) programlama yapt\u0131ysan\u0131z, Python'un burada yapmam\u0131z\u0131 *gerekmedi\u011fi* baz\u0131 \u015feyleri fark ediyor olabilirsiniz:\n- ona atamadan \u00f6nce \"spam_amount\"u \"bildirmemize\" gerek yok\n- Python'a ne t\u00fcr bir \"spam_amount\" de\u011ferine at\u0131fta bulunaca\u011f\u0131n\u0131 s\u00f6ylememize gerek yok. Asl\u0131nda, bir dizge veya boole gibi farkl\u0131 bir \u015feye at\u0131fta bulunmak i\u00e7in \"spam_amount\"\u0131 yeniden atamaya bile devam edebiliriz.","357b93d9":"\nBu bir \"int\" - tamsay\u0131n\u0131n k\u0131saltmas\u0131d\u0131r. Python'da yayg\u0131n olarak kar\u015f\u0131la\u015ft\u0131\u011f\u0131m\u0131z ba\u015fka bir say\u0131 t\u00fcr\u00fc daha vard\u0131r:","c9cac909":"Say\u0131larla yapmak isteyece\u011finiz do\u011fal bir \u015fey aritmetik yapmakt\u0131r. Toplama i\u00e7in \"+\" operat\u00f6r\u00fcn\u00fc ve \u00e7arpma i\u00e7in \"*\" operat\u00f6r\u00fcn\u00fc g\u00f6rd\u00fck. Python ayr\u0131ca, hesap makinenizdeki di\u011fer temel d\u00fc\u011fmeler i\u00e7in de bize sahiptir:\n\n| Operator     | Name           | Description                                            |\n|--------------|----------------|--------------------------------------------------------|\n| ``a + b``    | Addition       | Sum of ``a`` and ``b``                                 |\n| ``a - b``    | Subtraction    | Difference of ``a`` and ``b``                          |\n| ``a * b``    | Multiplication | Product of ``a`` and ``b``                             |\n| ``a \/ b``    | True division  | Quotient of ``a`` and ``b``                            |\n| ``a \/\/ b``   | Floor division | Quotient of ``a`` and ``b``, removing fractional parts |\n| ``a % b``    | Modulus        | Integer remainder after division of ``a`` by ``b``     |\n| ``a ** b``   | Exponentiation | ``a`` raised to the power of ``b``                     |\n| ``-a``       | Negation       | The negative of ``a``                                  |\n\n<span style=\"display:none\"><\/span>\n\nBuradaki ilgin\u00e7 bir g\u00f6zlem, hesap makinenizde muhtemelen sadece bir b\u00f6lme d\u00fc\u011fmesi bulunurken, Python iki t\u00fcr yapabilir. \"True division\" temel olarak hesap makinenizin yapt\u0131\u011f\u0131 \u015feydir:","8f592132":"\nBunun nerede faydal\u0131 olaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcnebiliyor musunuz? Kodlama zorluklar\u0131nda yak\u0131nda bir \u00f6rnek g\u00f6receksiniz.","cd3ca4d0":"## Python'da say\u0131lar ve aritmetik\n\nYukar\u0131da bir say\u0131 i\u00e7eren bir de\u011fi\u015fken \u00f6rne\u011fini zaten g\u00f6rd\u00fck:","e43b21c0":"Bu kurs, veri bilimi i\u00e7in Python kullanmaya ba\u015flayabilmeniz i\u00e7in ihtiya\u00e7 duyaca\u011f\u0131n\u0131z temel Python becerilerini kapsar.This course covers the key Python skills you\u2019ll need so you can start using Python for data science. \n\nPython syntax, variable assignment, and arithmetic operators k\u0131sa bir genel bak\u0131\u015fla ba\u015flayaca\u011f\u0131z.","65f74ea2":"Bazen varsay\u0131lan i\u015flem s\u0131ras\u0131 istedi\u011fimiz \u015fey de\u011fildir:","b663260a":"It always gives us a `float`. \n\nThe `\/\/` operator gives us a result that's rounded down to the next integer.","0d88c5db":"\nParantezler burada yararl\u0131d\u0131r. Python'u alt ifadeleri istedi\u011finiz s\u0131rayla de\u011ferlendirmeye zorlamak i\u00e7in bunlar\u0131 ekleyebilirsiniz.","a3bb90f8":"\n\"int\" ve \"float\", Python'un iki ana say\u0131sal t\u00fcr\u00fcn\u00fcn adlar\u0131 olman\u0131n yan\u0131 s\u0131ra, arg\u00fcmanlar\u0131n\u0131 kar\u015f\u0131l\u0131k gelen t\u00fcre d\u00f6n\u00fc\u015ft\u00fcren i\u015flevler olarak da adland\u0131r\u0131labilir:","855ee465":"Daha sonra \"ko\u015fullar\" hakk\u0131nda fazla konu\u015fmayaca\u011f\u0131z, ancak daha \u00f6nce hi\u00e7 kodlama yapmam\u0131\u015f olsan\u0131z bile, muhtemelen bunun ne i\u015fe yarad\u0131\u011f\u0131n\u0131 tahmin edebilirsiniz. Python, okunabilirli\u011fi ve basitli\u011fi ile \u00f6d\u00fcllendirilir.\n\nHangi kodun \"if\"e ait oldu\u011funu nas\u0131l belirtti\u011fimize dikkat edin. \"But I don't want ANY spam!\" ifadesinin yaln\u0131zca \"spam_amount\" pozitifse yazd\u0131r\u0131lmas\u0131 gerekir. Ancak sonraki kod (`print(viking_song)` gibi) ne olursa olsun \u00e7al\u0131\u015ft\u0131r\u0131lmal\u0131d\u0131r. Biz (ve Python) bunu nas\u0131l biliyoruz?\n\n\"if\" sat\u0131r\u0131n\u0131n sonundaki iki nokta \u00fcst \u00fcste (`:`) yeni bir **kod blo\u011funun** ba\u015flad\u0131\u011f\u0131n\u0131 g\u00f6sterir. Girintili sonraki sat\u0131rlar bu kod blo\u011funun par\u00e7as\u0131d\u0131r.\n> **Aside**: Daha \u00f6nce kod yazd\u0131ysan\u0131z, di\u011fer baz\u0131 dillerin kod bloklar\u0131n\u0131n ba\u015flang\u0131c\u0131n\u0131 ve sonunu i\u015faretlemek i\u00e7in \"{\"k\u00fcme ayra\u00e7lar\u0131\"}\" kulland\u0131\u011f\u0131n\u0131 biliyor olabilirsiniz. Python'un anlaml\u0131 bo\u015fluk kullanmas\u0131, di\u011fer dillere al\u0131\u015fm\u0131\u015f programc\u0131lar i\u00e7in \u015fa\u015f\u0131rt\u0131c\u0131 olabilir, ancak pratikte, kod bloklar\u0131n\u0131n girintisini zorlamayan dillerden daha tutarl\u0131 ve okunabilir kodlara yol a\u00e7abilir.\n\n'viking_song' ile ilgili sonraki sat\u0131rlar fazladan 4 bo\u015flukla girintili de\u011fildir, bu nedenle 'if' kod blo\u011funun bir par\u00e7as\u0131 de\u011fildirler. Daha sonra i\u015flevleri tan\u0131mlad\u0131\u011f\u0131m\u0131zda ve d\u00f6ng\u00fcleri kulland\u0131\u011f\u0131m\u0131zda girintili kod bloklar\u0131n\u0131n daha fazla \u00f6rne\u011fini g\u00f6rece\u011fiz.\n\nBu kod par\u00e7ac\u0131\u011f\u0131 ayn\u0131 zamanda Python'da bir **string** ile ilgili ilk g\u00f6r\u00fc\u015f\u00fcm\u00fczd\u00fcr:\n\n```python\n\"But I don't want ANY spam!\"\n```\n\nStrings \u00e7ift veya tek t\u0131rnak i\u015faretiyle i\u015faretlenebilir. (Fakat bu dize tek t\u0131rnakl\u0131 bir karakter *i\u00e7erdi\u011fi i\u00e7in*, dikkatli olmazsak Python'u tek t\u0131rnakla \u00e7evrelemeye \u00e7al\u0131\u015farak kar\u0131\u015ft\u0131rabiliriz.)"}}