{"cell_type":{"303cf14c":"code","04abee23":"code","dd931482":"code","aae52b32":"code","8905458d":"code","000b52cd":"code","f6e525b4":"code","99f4a910":"code","a81f4e86":"code","9e4dddc6":"code","86a20328":"code","a548345e":"code","de030e0e":"code","de07429a":"code","30a522ac":"code","9984c417":"code","4005c5ea":"code","672344ee":"code","6a00ff0c":"code","19103433":"code","fe73f4fe":"code","394f1e3e":"code","367997bf":"code","e05d6548":"code","68be62d4":"code","098e4308":"code","21e6c3d3":"code","9d184a0f":"code","ce9c1ef6":"code","a8842b19":"code","f1c81b69":"code","81348a25":"markdown","a20788f5":"markdown","0011ecbd":"markdown"},"source":{"303cf14c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.options.display.float_format = '{:.2f}'.format\n\nimport os\nprint(os.listdir(\"..\/input\"))","04abee23":"# Carregando as bases de dados\ndf = pd.read_csv('..\/input\/brazilian-cities\/BRAZIL_CITIES.csv', sep=';')\ndf_ibge = pd.read_csv('..\/input\/mortalidade-infantil\/municipios_ibge.csv')\ndf_mortalidade = pd.read_csv('..\/input\/mortalidade-infantil\/mortalidade_infantil.csv')","dd931482":"df.shape, df_ibge.shape, df_mortalidade.shape","aae52b32":"df.info()","8905458d":"df_ibge.info()","000b52cd":"df_mortalidade.info()","f6e525b4":"# Adicionando a coluna UF na tabela de municipios do IBGE\nestados = {\n    'AC': 'Acre',\n    'AL': 'Alagoas',\n    'AP': 'Amap\u00e1',\n    'AM': 'Amazonas',\n    'BA': 'Bahia',\n    'CE': 'Cear\u00e1',\n    'DF': 'Distrito Federal',\n    'ES': 'Esp\u00edrito Santo',\n    'GO': 'Goi\u00e1s',\n    'MA': 'Maranh\u00e3o',\n    'MT': 'Mato Grosso',\n    'MS': 'Mato Grosso do Sul',\n    'MG': 'Minas Gerais',\n    'PA': 'Par\u00e1',\n    'PB': 'Para\u00edba',\n    'PR': 'Paran\u00e1',\n    'PE': 'Pernambuco',\n    'PI': 'Piau\u00ed',\n    'RJ': 'Rio de Janeiro',\n    'RN': 'Rio Grande do Norte',\n    'RS': 'Rio Grande do Sul',\n    'RO': 'Rond\u00f4nia',\n    'RR': 'Roraima',\n    'SC': 'Santa Catarina',\n    'SP': 'S\u00e3o Paulo',\n    'SE': 'Sergipe',\n    'TO': 'Tocantins'\n}\n\ndef recupera_sigla_uf(nome_uf):\n    for sigla in estados:\n        if estados[sigla] == nome_uf:\n            return sigla\n    return ''\n\ndf_ibge['uf'] = df_ibge['Nome_UF'].apply(recupera_sigla_uf)","99f4a910":"# Acrescentando o campo Mortalidade Infantil na tabela de municipios do IBGE\ndef recuperar_mortalidade_infantil(codigo_municipio):\n    aux = df_mortalidade[df_mortalidade['C\u00f3digo'] == codigo_municipio]\n    if aux.shape[0] > 0:\n        return aux.iloc[0]['Mortalidade infantil']\ndf_ibge['mortalidade_infantil'] = df_ibge['C\u00f3digo Munic\u00edpio Completo'].apply(recuperar_mortalidade_infantil)","a81f4e86":"df_ibge.info()","9e4dddc6":"# Excluindo os municipios que n\u00e3o possuem dados de mortalidade infantil\ndf_ibge = df_ibge[~df_ibge['mortalidade_infantil'].isna()]","86a20328":"# Acrescentando a coluna mortalidade_infantil no df\ndef recuperar_mortalidade_infantil(municipio, uf):\n    aux = df_ibge[(df_ibge['uf'] == uf) & (df_ibge['Nome_Munic\u00edpio'].str.upper() == municipio.upper())]\n    if aux.shape[0] > 0:\n        return aux.iloc[0]['mortalidade_infantil']  \n\ndf['mortalidade_infantil'] = df[['CITY', 'STATE']].apply(lambda row: recuperar_mortalidade_infantil(row['CITY'], row['STATE']), axis=1)","a548345e":"df.info()","de030e0e":"# Excluindo os municipios que n\u00e3o possuem dados de mortalidade infantil na tabela df\ndf = df[~df['mortalidade_infantil'].isna()]","de07429a":"# Excluindo colunas que n\u00e3o ser\u00e3o utilizadas\ndf = df.drop(['CITY', 'LAT', 'LONG', 'ALT', 'HOTELS', 'BEDS'], axis=1)","30a522ac":"# Transformando campos com ',' em num\u00e9ricos e preenchendo os valores nulos com a m\u00e9dia\ncampos_com_virgula = ['IDHM', 'IDHM_Renda', 'IDHM_Longevidade', 'IDHM_Educacao', 'AREA', 'GVA_AGROPEC', 'GVA_INDUSTRY', 'GVA_SERVICES', \n                      'GVA_PUBLIC', ' GVA_TOTAL ', 'TAXES', 'GDP', 'POP_GDP', 'GDP_CAPITA', 'mortalidade_infantil']\n\nfor campo in campos_com_virgula:\n    df[campo] = df[campo].astype(str)\n    df[campo] = df[campo].str.replace(',', '.').astype('float')\n    df[campo] = df[campo].fillna(pd.notna(df[campo]).mean())","9984c417":"df.info()","4005c5ea":"# Transformando as colunas object em c\u00f3digos de categorias\ncolunas_texto = ['STATE', 'REGIAO_TUR', 'CATEGORIA_TUR', 'RURAL_URBAN', 'GVA_MAIN']\nfor col in colunas_texto:\n    df[col] = df[col].astype('category').cat.codes    ","672344ee":"# Substituindo colunas nulas por 0\ncolunas_empresas = ['UBER', 'MAC', 'WAL-MART']\nfor col in colunas_empresas:\n    df[col] = df[col].fillna(0)","6a00ff0c":"# Substituindo colunas nulas pela m\u00e9dia\nfor col in list(df.columns):\n    df[col] = df[col].fillna(pd.notna(df[col]).mean())","19103433":"df.sample(20).T","fe73f4fe":"# Dividindo a base em treino e valida\u00e7\u00e3o\nfrom sklearn.model_selection import train_test_split\ntrain, test = train_test_split(df, test_size=0.20, random_state=42)","394f1e3e":"train.shape, test.shape","367997bf":"# Selecionar as colunas a serem usadas no trainamento e valida\u00e7\u00e3o\n\n# Lista das colunas n\u00e3o usadas\nremoved_cols = ['IDHM', 'IDHM_Renda', 'IDHM_Longevidade', 'IDHM_Educacao', 'IDHM Ranking 2010', 'mortalidade_infantil']\n#removed_cols = ['mortalidade_infantil']\n\n# Lista das features\nfeats = [c for c in df.columns if c not in removed_cols]","e05d6548":"# Importar o modelo\nfrom sklearn.ensemble import RandomForestRegressor","68be62d4":"# Instanciar o modelo\nrf = RandomForestRegressor(random_state=42, n_estimators=200)","098e4308":"# Treinar o modelo\nrf.fit(train[feats], train['mortalidade_infantil'])","21e6c3d3":"# Fazendo as previs\u00f5es\npreds = rf.predict(test[feats])","9d184a0f":"# Analisar as previs\u00f5es com base na m\u00e9trica\n\n# Importando a m\u00e9trica\nfrom sklearn.metrics import mean_squared_error","ce9c1ef6":"# Validando as previs\u00f5es\nmean_squared_error(test['mortalidade_infantil'], preds)","a8842b19":"pd.Series(rf.feature_importances_, index=feats).sort_values().plot.barh(figsize = (20,40))","f1c81b69":"import seaborn as sns\nsns.scatterplot(x=df['GDP_CAPITA'], y=df['mortalidade_infantil'])","81348a25":"### Conclus\u00e3o\n\nChegamos a conclus\u00e3o que, dentre todas as vari\u00e1veis analisadas, a mortalidade infantil est\u00e1 apoiada em praticamente duas vari\u00e1veis: o PIB per capita e o estado. ","a20788f5":"# Trabalho Final Machine Learning II\n\n### Alunos:\n- Alessandro Gachet\n- Hauseman Jos\u00e9\n- Jo\u00e3o Pablo Tavares\n- Wanderson Diego de Melo Torres","0011ecbd":"### Introdu\u00e7\u00e3o\n\nA mortalidade infantil continua sendo um grave problema brasileiro e entender os fatores que contribuem para essa causa \u00e9 importante para auxiliar os governos locais a diminuirem essas taxas.\n\nCom essa finalidade, a partir de bases contendo caracter\u00edsticas dos munic\u00edpios brasileiros, verificaremos quais caracter\u00edsticas que mais contribuem para a mortalidade infantil. Para isso treinaremos um modelo que ir\u00e1 prever a taxa de mortalidade a partir de in\u00fameras caracter\u00edsticas dos munic\u00edpios.\n\nFontes de dados:\n- C\u00f3digos de munic\u00edpios do IBGE: https:\/\/concla.ibge.gov.br\/classificacoes\/por-tema\/codigo-de-areas\/codigo-de-areas\n- Dataset do kaggle: https:\/\/www.kaggle.com\/crisparada\/brazilian-cities\n- Atlas Brasil: http:\/\/atlasbrasil.org.br\/2013\/pt\/consulta\/"}}