{"cell_type":{"2ff26cae":"code","794afbe3":"code","7c90e506":"code","c5c57506":"code","cc6d5977":"code","1cb14078":"code","dd8f0aaf":"code","22875702":"code","86b65701":"code","92cfdfd8":"code","4475a9c1":"code","09e72eaa":"code","9f341e3e":"code","d1e47e41":"code","bd14709e":"code","41984ade":"code","55e58fb0":"code","b27cfe00":"code","15b28a5b":"code","03909daf":"code","0c163913":"code","a39140b4":"code","75524699":"code","6a152485":"code","b7e0a428":"code","0ab7bf0e":"code","c7c0e07a":"code","167d9ad1":"code","3b46d313":"code","27d6827d":"code","618d8927":"code","5581e7a0":"code","216d0f2c":"code","c9c13473":"code","f0a20a7e":"code","86c40151":"code","a7ecc9c2":"code","4635e6c9":"code","6f5a7ff7":"code","eefa2377":"code","b3732279":"code","1b1a4e74":"markdown","2b459904":"markdown","87d8722b":"markdown","d2a0b43f":"markdown","7a144d55":"markdown"},"source":{"2ff26cae":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns \npd.set_option(\"display.max_columns\",None) \npd.set_option(\"display.max_rows\",None) \nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom IPython.display import Image\nsns.set(style=\"darkgrid\", palette=\"pastel\", color_codes=True)\nsns.set_context(\"paper\")\nfrom pandas_profiling import ProfileReport\n\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.figure_factory as ff\n\n\n\npy.init_notebook_mode(connected=True)\nimport plotly.io as pio\npio.templates.default = \"seaborn\"\nfrom plotly.subplots import make_subplots\n\n\nimport os","794afbe3":"covid_data = pd.read_csv('\/kaggle\/input\/corona-virus-report\/covid_19_clean_complete.csv',parse_dates=['Date'])\ncovid_data['Date'] = pd.DatetimeIndex(covid_data['Date']).date\ncovid_data['Active'] = covid_data['Confirmed']-covid_data['Recovered']-covid_data['Deaths']\ncovid_measures = pd.read_csv('\/kaggle\/input\/covid19-containment-and-mitigation-measures\/COVID 19 Containment measures data.csv',parse_dates = ['Date Start'])","7c90e506":"covid_data.head()","c5c57506":"covid_measures.head()","cc6d5977":"profile = ProfileReport(covid_data, title='COVID Profiling Report', html={'style':{'full_width':True}})\n","1cb14078":"profile_measure = ProfileReport(covid_measures, minimal=True)","dd8f0aaf":"profile.to_widgets()","22875702":"profile_measure.to_widgets()","86b65701":"covid_data.rename(columns={'Date': 'date', \n                     'Province\/State':'state',\n                     'Country\/Region':'country',\n                     'Lat':'lat', 'Long':'long',\n                     'Confirmed': 'confirmed',\n                     'Deaths':'deaths',\n                     'Recovered':'recovered'\n                    }, inplace=True)","92cfdfd8":"df = covid_data.sort_values(by = ['date'],ascending=False)","4475a9c1":"df1 = covid_data\ndf1['date'] = pd.to_datetime(df1['date'])\ndf1['date'] = df1['date'].dt.strftime('%m\/%d\/%Y')\ndf1 = df1.fillna('-')\nfig = px.density_mapbox(df1, lat='lat', lon='long', z='confirmed', radius=100,zoom=1, hover_data=[\"country\",'state',\"confirmed\"],\n                        mapbox_style=\"carto-positron\", animation_frame = 'date', range_color= [0, 1000],title='Spread of Covid-19')\nfig.update_layout(margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0})\nfig.show()","09e72eaa":"df.plot('date',['confirmed', 'deaths', 'recovered', 'Active'],figsize=(10,10), rot=30)","9f341e3e":"plt.figure(figsize= (15,10))\nplt.xticks(rotation = 90 ,fontsize = 10)\nplt.yticks(fontsize = 15)\nplt.xlabel(\"Dates\",fontsize = 30)\nplt.ylabel('Total cases',fontsize = 30)\nplt.title(\"Worldwide Confirmed Cases Over Time\" , fontsize = 30)\ntotal_cases = covid_data.groupby('date')['date', 'confirmed'].sum().reset_index()\ntotal_cases['date'] = pd.to_datetime(total_cases['date'])\n\n\nax = sns.lineplot( x = total_cases.date.dt.date ,y = total_cases.confirmed , color = 'b')\nax.set(xlabel='Dates', ylabel='Total cases')","d1e47e41":"df2 = pd.pivot_table(covid_data, values=['confirmed','deaths','Active'], index='country', aggfunc='max')\ndf2['Death Rate'] = round(df2['deaths'] \/df2['confirmed'], 2)\ndf2 = df2.sort_values(by='confirmed', ascending= False)\ndf2.style.background_gradient(cmap='Blues')","bd14709e":"top_actives = covid_data.groupby(by = 'country')['Active'].sum().sort_values(ascending = False).head(10).reset_index()\nfig = px.bar(top_actives, \n             x=\"Active\",\n             y=\"country\", \n             orientation='h',\n             height=800,\n             title='Active Cases insight')\nfig.show()","41984ade":"fig = px.line(df, x=\"date\", y=\"confirmed\", color='country', height=600,\n             title='Confirmed', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()\n\n\nfig = px.line(df, x=\"date\", y=\"deaths\", color='country', height=600,\n             title='deaths', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()\n\n\nfig = px.line(df, x=\"date\", y=\"Active\", color='country', height=600,\n             title='Active', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()","55e58fb0":"covid_data_sun = covid_data.tail(20)\nfig = px.sunburst(covid_data_sun, path=[\"country\"],\n                  color='country', hover_data=['country'],\n                  color_continuous_scale='rainbow')\nfig.show()","b27cfe00":"grp = covid_data.groupby(['country'])['confirmed', 'deaths', 'recovered'].max()\ngrp = grp.reset_index()\ngrp['Country'] =  grp['country']\nfig = px.choropleth(grp, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", hover_name=\"country\",hover_data = [grp.recovered,grp.deaths],projection=\"orthographic\",\n                     color_continuous_scale='Reds')\nfig.update(layout_coloraxis_showscale=True)","15b28a5b":"grp = df.groupby(['date', 'country'])['confirmed', 'deaths', 'recovered','Active'].max()\ngrp = grp.reset_index()\ngrp['Date'] = pd.to_datetime(grp['date'])\ngrp['Date'] = grp['Date'].dt.strftime('%m\/%d\/%Y')\n\nfig = px.choropleth(grp, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", hover_name=\"country\",hover_data = [grp.recovered,grp.deaths,grp.Active],projection=\"natural earth\",\n                     animation_frame=\"Date\",width=1000, height=700,\n                     color_continuous_scale='blues',\n                     range_color=[1000,50000],\n\n                     title='World Map of COVID-19 Spread')\n\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)","03909daf":"fig = px.treemap(df, path=['country'], values='recovered',\n                  color='recovered', hover_data=['country'],\n                  color_continuous_scale='Rainbow')\nfig.show()\nfig = px.treemap(df, path=['country'], values='deaths',\n                  color='deaths', hover_data=['country'],\n                  color_continuous_scale='rdbu')\nfig.show()\nfig = px.treemap(df, path=['country'], values='Active',\n                  color='Active', hover_data=['country'],\n                  color_continuous_scale='earth')\nfig.show()","0c163913":"covid_measures.head()","a39140b4":"covid_measures.columns = covid_measures.columns.str.strip().str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')\n","75524699":"fig,ax=plt.subplots(figsize=(15,5))\nsns.heatmap(covid_measures.isnull(), annot=True)","6a152485":"from wordcloud import WordCloud, ImageColorGenerator\ncovid_measures['description_of_measure_implemented'] = covid_measures['description_of_measure_implemented'].fillna('')\ntext = \" \".join(str(each) for each in covid_measures.description_of_measure_implemented)\nwordcloud = WordCloud(max_words=200,colormap='Set1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","b7e0a428":"grp_count = df.groupby([\"country\"])[[\"Active\"]].mean().reset_index()\n\nfig = px.pie(grp_count,\n             values=\"country\",\n             names=\"Active\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","0ab7bf0e":"sns.pairplot(df);","c7c0e07a":"china_strat = covid_measures[covid_measures['country'] == 'China']['keywords'].value_counts().head(10)\nchina_strat\nfig = px.bar(china_strat, x = china_strat.index, y = china_strat.values)\nfig.update_layout(title = 'Top Strategies Used by China')\nfig.show()","167d9ad1":"it_strat = covid_measures[covid_measures['country'] == 'Italy']['keywords'].value_counts().head(10)\nit_strat\nfig = px.bar(it_strat, x = it_strat.index, y = it_strat.values)\nfig.update_layout(title = 'Top Strategies Used by Italy')\nfig.show()","3b46d313":"India_strat = covid_measures[covid_measures['country'] == 'India']['keywords'].value_counts().head(10)\nIndia_strat\nfig = px.bar(India_strat, x = India_strat.index, y = India_strat.values)\nfig.update_layout(title = 'Top Strategies Used by India')\nfig.show()","27d6827d":"us_strat = covid_measures[covid_measures['country'] == 'US:New York']['keywords'].value_counts().head(10)\nus_strat\nfig = px.bar(us_strat, x = us_strat.index, y = us_strat.values)\nfig.update_layout(title = 'Top Strategies Used by US(NY)')\nfig.show()","618d8927":"us_strat = covid_measures[covid_measures['country'] == 'United States']['keywords'].value_counts().head(10)\nus_strat\nfig = px.bar(us_strat, x = us_strat.index, y = us_strat.values)\nfig.update_layout(title = 'Top Strategies Used by US')\nfig.show()","5581e7a0":"uk_strat = covid_measures[covid_measures['country'] == 'United Kingdom']['keywords'].value_counts().head(10)\nuk_strat\nfig = px.bar(uk_strat, x = uk_strat.index, y = uk_strat.values)\nfig.update_layout(title = 'Top Strategies Used by UK')\nfig.show()","216d0f2c":"\nsk_strat = covid_measures[covid_measures['country'] == 'South Korea']['keywords'].value_counts().head(10)\nsk_strat\nfig = px.bar(sk_strat, x = sk_strat.index, y = sk_strat.values)\nfig.update_layout(title = 'Top Strategies Used by South Korea')\nfig.show()","c9c13473":"\nsinga_strat = covid_measures[covid_measures['country'] == 'Singapore']['keywords'].value_counts().head(10)\nsinga_strat\nfig = px.bar(singa_strat, x = singa_strat.index, y = singa_strat.values)\nfig.update_layout(title = 'Top Strategies Used by Singapore')\nfig.show()","f0a20a7e":"data_test = pd.read_csv('\/kaggle\/input\/covid19testing\/tested_worldwide.csv', delimiter=',') \ndata_test.info()","86c40151":"data_test.head()","a7ecc9c2":"data_test=data_test.dropna(subset=['daily_tested','total_tested'])\ndata_test['daily_rate']=data_test.daily_positive\/data_test.daily_tested*100\ndata_test.daily_rate.replace(np.inf, 0, inplace=True)\ndata_test.daily_rate.fillna(0, inplace=True)\ndata_test.reset_index(drop=True, inplace=True)\ndata_test.head()","4635e6c9":"fig = px.pie(data_test,\n            values=\"total_tested\",\n             names=\"Country_Region\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","6f5a7ff7":"df_break = data_test.groupby(['Country_Region','Date'])['daily_tested','total_tested'].sum().reset_index()\ntop10case = data_test.sort_values('daily_tested', ascending=False).head(10)['Country_Region'].to_list()\ntop10death = data_test.sort_values('total_tested', ascending=False).head(10)['Country_Region'].to_list()\n\n_ = df_break[df_break.Country_Region.isin(top10case)]\nplt.figure(figsize=(10,6))\nsns.lineplot(x='Date',y='daily_tested', data=_, hue='Country_Region', lw=2)\nplt.legend(bbox_to_anchor=(1.02, 1), fontsize=10)\nplt.title('Daily Test for US')\nplt.show()","eefa2377":"test_10 = data_test.groupby('Country_Region')['Date'].min().sort_values().head(10).index\ndf= data_test[data_test.Country_Region.isin(test_10)]\nplt.figure(figsize=(10,6))\nsns.lineplot(x='Date',y='total_tested', data=df, hue='Country_Region', lw=2)\nplt.legend(bbox_to_anchor=(1.02, 1), fontsize=10)\nplt.title('Total Test conducted Country wise')\nplt.show()","b3732279":"fig = px.line(df_break,x='Date',y='daily_tested',color='Country_Region',title='Cumulative daily tested over time')\nfig.update_layout(template=\"simple_white\")\nfig.show()\n\n\nfig = px.line(df_break,x='Date',y='total_tested',color='Country_Region',title='Cumulative total tested over time')\nfig.update_layout(template=\"simple_white\")\nfig.show()\n","1b1a4e74":"# 1.Exploratory Data Analysis","2b459904":"### Strategical Analysis for COVID-19","87d8722b":"## Outbreak of Coronavirus(COVID-19): <br>\n### Overview <br>\nCoronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\n\nMost people infected with the COVID-19 virus will experience mild to moderate respiratory illness and recover without requiring special treatment.  Older people, and those with underlying medical problems like cardiovascular disease, diabetes, chronic respiratory disease, and cancer are more likely to develop serious illness.\n\nThe best way to prevent and slow down transmission is be well informed about the COVID-19 virus, the disease it causes and how it spreads. Protect yourself and others from infection by washing your hands or using an alcohol based rub frequently and not touching your face. \n\nThe COVID-19 virus spreads primarily through droplets of saliva or discharge from the nose when an infected person coughs or sneezes, so it\u2019s important that you also practice respiratory etiquette (for example, by coughing into a flexed elbow).\n\nAt this time, there are no specific vaccines or treatments for COVID-19. However, there are many ongoing clinical trials evaluating potential treatments. WHO will continue to provide updated information as soon as clinical findings become available.. <br>\n\n\n#### Common symptoms include:\n* fever\n* tiredness\n* dry cough. \n* shortness of breath\n* aches and pains\n* sore throat\n* very few people will report diarrhoea, nausea or a runny nose. <br>\n\n###  Prevention <br>\nTo prevent infection and to slow transmission of COVID-19, do the following:\n\n* Wash your hands regularly with soap and water, or clean them with alcohol-based hand rub.\n* Maintain at least 1 metre distance between you and people coughing or sneezing.\n* Avoid touching your face.\n* Cover your mouth and nose when coughing or sneezing.\n* Stay home if you feel unwell.\n* Refrain from smoking and other activities that weaken the lungs.\n* Practice physical distancing by avoiding unnecessary travel and staying away from large groups of people.\n\n\n\n<h1 style=\"text-align:center;font-size:150%;;\"><\/h1>\n<img src=\"https:\/\/www.who.int\/images\/default-source\/searo---images\/emergencies\/covid19\/how-to-protect\/covid-how-to-protect-yourself-02.gif?sfvrsn=c78ba713_2\/\" width=\"350\" height=\"350\" align=\"center\"\/> \n","d2a0b43f":"<b> More Data Analysis in Pipeline. And don't Hesitate to give an upvote if you like it!!!! <\/b>","7a144d55":"### COVID-19 Test Analysis"}}