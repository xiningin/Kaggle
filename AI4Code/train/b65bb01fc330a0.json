{"cell_type":{"916d7518":"code","41a64b03":"code","4185cd95":"code","84dc3310":"code","6a9a8574":"code","e19fc982":"code","285c18ed":"code","e34b9676":"code","c475862c":"code","909ad5fb":"code","4db36d57":"code","d917441f":"code","e61796db":"code","c2f6b487":"code","ae831ac4":"code","80a605d1":"code","c772083d":"code","7b04701d":"code","93a8fc06":"code","c2f3d151":"code","cd3b2a68":"code","fd1ebb3c":"code","cdc14f8a":"code","1d61a81e":"code","ff37c772":"code","711de194":"code","f6a10674":"code","6221c07c":"code","9944566e":"code","c683e01c":"code","01dcb414":"markdown","17d20f92":"markdown"},"source":{"916d7518":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41a64b03":"import numpy as np\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn import preprocessing, svm\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix,classification_report\nimport warnings\nwarnings.filterwarnings('ignore')\n","4185cd95":"df_train=pd.read_csv('\/kaggle\/input\/int247-ca1-lpu\/train_data.csv'\n)\nprint(df_train.head())\nprint(df_train.columns)","84dc3310":"print(df_train.info())\nprint(df_train.describe())","6a9a8574":"df_test=pd.read_csv('\/kaggle\/input\/int247-ca1-lpu\/test_data.csv')\ndf_test.head()\n#df_test.columns=df_test.columns.str.replace('?','')\ndf_test.columns=df_test.columns.str.lstrip()\ndf_test=df_test.replace(['?'],'')\nprint(df_test.columns)\n","e19fc982":"df_test.isnull().sum()","285c18ed":"df_test=df_test.replace(['?',' '],'')\nprint(df_test.head())\n","e34b9676":"df_sub=pd.read_csv('\/kaggle\/input\/int247-ca1-lpu\/sample_sol.csv')\nprint(df_sub.head())\nprint(df_sub.columns)","c475862c":"print(df_train.shape)\nprint(df_train.head())\nprint(df_train[['Salary']].value_counts())\nsns.countplot(x='Salary',data=df_train)","909ad5fb":"sns.countplot(x='Salary',hue='Sex',data=df_train)","4db36d57":"print(df_train['Salary'].shape)\nprint(df_train[['Salary']].value_counts())\nprint(df_train[['Sex']].value_counts())","d917441f":"df=df_train[(df_train[['Sex']]=='male').any(axis=1)]\nprint(df.shape)\nprint(df[['Salary']].value_counts())\nprint(df)","e61796db":"df=df_train[(df_train[['Sex']]=='female').any(axis=1)]\nprint(df.shape)\nprint(df[['Salary']].value_counts())\nprint(df)","c2f6b487":"print(df_train.isna().sum())","ae831ac4":"\nprint(df_test.head())","80a605d1":"df_train_clean=df_train.replace('?',np.nan).dropna()\ndf_test_clean=df_test.replace('?',np.nan).dropna()\ndf_train_clean=df_train_clean.drop(['Serial_no'],axis=1)\ndf_test_clean=df_test_clean.drop(['Serial_no'],axis=1)","c772083d":"df_train.isnull().values.any()","7b04701d":"numerical_col=[\"Age\",\"Education_num\",\"Capital_gain\",\"Capital_loss\",\"Hours_per_week\"]\nscaler=StandardScaler()\ndf_train_clean[numerical_col]=scaler.fit_transform(df_train_clean[numerical_col])\ndf_test_clean[numerical_col]=scaler.fit_transform(df_test_clean[numerical_col])","93a8fc06":"df_train.head(10)","c2f3d151":"colums=['Age']","cd3b2a68":"columns = ['Age','Workclass','fnlgwt','Education','Education num','Marital Status',\n           'Occupation','Relationship','Race','Sex','Capital Gain','Capital Loss',\n           'Hours\/Week','Native country','Income']\ntrain = pd.read_csv('\/kaggle\/input\/int247-ca1-lpu\/train_data.csv', names=columns)\ntest = pd.read_csv('\/kaggle\/input\/int247-ca1-lpu\/test_data.csv', names=columns, skiprows=0)","fd1ebb3c":"train.describe()","cdc14f8a":"\ntrain_clean = train.replace(' ?', np.nan).dropna()\ntest_clean = test.replace(' ?', np.nan).dropna()\n\ntrain_clean = train_clean.drop(['fnlgwt'], axis =1)\ntest_clean = test_clean.drop(['fnlgwt'], axis =1)","1d61a81e":"Y_train = train_clean[\"Income\"]\nX_train = train_clean.drop(\"Income\", axis=1)\n\nY_test = test_clean[\"Income\"]\nX_test = test_clean.drop(\"Income\", axis=1)","ff37c772":"data = pd.concat([X_train,X_test])\ndataEncoded = pd.get_dummies(data)      \n\nX_trainEncoded = dataEncoded[:len(X_train)]\nX_testEncoded = dataEncoded[len(X_train):]\n\nY_trainEncoded = Y_train\nY_testEncoded = Y_test.replace(['<=50K.' , '>50K.'] , [0,1])\n#Y_testEncoded.reshape(-1,1)\nprint (Y_testEncoded.head(10))","711de194":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import tree","f6a10674":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,max_depth=3, min_samples_leaf=5)\nclf_gini.fit(X_trainEncoded,Y_trainEncoded)","6221c07c":"clf_entropy = DecisionTreeClassifier(criterion = \"entropy\", random_state = 100,\n max_depth=5, min_samples_leaf=5)\nclf_entropy.fit(X_trainEncoded,Y_trainEncoded)","9944566e":"y_pred = clf_gini.predict(X_testEncoded)\ny_pred","c683e01c":"print(\" Model Accuracy is \", accuracy_score(Y_testEncoded,y_pred)*100)","01dcb414":"fit scaler on train data transforming training and testing","17d20f92":"HANDLING MISSING DATA"}}