{"cell_type":{"db279e07":"code","b0e5bcd5":"code","974a92ff":"code","a050d326":"code","179faed6":"code","46928ef2":"code","4b7e8e10":"code","685a9cd9":"code","7667a4ae":"code","681a4b05":"code","f499f0f4":"code","8ae208eb":"code","93e058ec":"code","13f7c391":"code","926b8d98":"code","06993283":"code","6f07ce7c":"code","ba69113c":"code","e7719566":"code","0a84e21d":"code","02c92c50":"code","0a5e3a91":"code","45f9472c":"code","41e76941":"code","da344e13":"code","fb2be7d6":"code","5073cd46":"code","72865af1":"code","3eb85526":"code","af3dd3a5":"code","9ab21524":"code","a0fd2f3b":"code","f2620b5f":"code","d5caafb8":"code","ed92de6c":"code","f91f2fb8":"code","7ecba89e":"code","18a48230":"code","50528fcf":"code","18b5d53c":"code","bf996c80":"code","92c098f9":"code","378a0a94":"code","92a8fe5f":"code","54c9f3a6":"code","a1e68cc2":"code","6a37b53c":"code","19db330c":"code","4515ba1a":"code","cf245472":"code","5e4bd8be":"code","a0d5d0dd":"code","4a46640f":"code","4f0144e5":"code","f789a46a":"code","cc0cf2e7":"code","f6bbf639":"code","42dda93b":"code","0ac7c896":"code","c6c65249":"code","c94180f5":"code","4b41844c":"code","fa26cd0c":"code","9ac3f44c":"code","915d98ad":"code","a20acf36":"markdown","cfce3c92":"markdown","103dbcf7":"markdown","c82faff2":"markdown","84d916f8":"markdown","b1e4d1f3":"markdown","f55b3e0f":"markdown","a6c9c223":"markdown","af395716":"markdown","ed7a340f":"markdown","d5ad5027":"markdown","8c30e49b":"markdown","961b47bd":"markdown","9e50bfbb":"markdown","331ab5f7":"markdown","0c763344":"markdown","4d188235":"markdown","530ac9b9":"markdown","13a2a961":"markdown","028de222":"markdown","33b356a9":"markdown","012a1cb3":"markdown","362b3140":"markdown","7894aeab":"markdown","57d5679a":"markdown","9007ab0e":"markdown","13e82f5f":"markdown","71e890c2":"markdown","bb5a1543":"markdown","55b576e5":"markdown","326bdf93":"markdown","de5f79a4":"markdown","3d8ed490":"markdown","c5a7e8fa":"markdown","77d85e41":"markdown","deeeaf85":"markdown"},"source":{"db279e07":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom scipy.stats import zscore","b0e5bcd5":"myData = pd.read_csv('..\/input\/vehicle.csv')\nmyData.head()","974a92ff":"myData.shape","a050d326":"myData.isnull().sum()","179faed6":"myData.describe().transpose()","46928ef2":"myData.info()","4b7e8e10":"myData.fillna(myData.mean(), axis = 0, inplace = True)\nmyData.isnull().sum()\nprint(myData.shape)","685a9cd9":"myData.groupby('class').count()","7667a4ae":"plt.figure(figsize = (20,20))\nsns.pairplot(data = myData, hue = 'class')","681a4b05":"fig, (g1, g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['compactness'], ax = g1)\ng1.set_title('Distribution Plot')\n\nsns.boxplot(myData['compactness'], ax = g2)\ng2.set_title('Box Plot')","f499f0f4":"fig, (g1, g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['circularity'], ax = g1)\ng1.set_title('Distribution Plot')\n\nsns.boxplot(myData['circularity'], ax = g2)\ng2.set_title('Box Plot')","8ae208eb":"fig, (g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['distance_circularity'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['distance_circularity'], ax = g2)\ng2.set_title(\"Box Plot\")","93e058ec":"fig, (g1, g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['radius_ratio'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['radius_ratio'], ax = g2)\ng2.set_title(\"Box Plot\")","13f7c391":"q1 = np.quantile(myData['radius_ratio'], 0.25)\nq2 = np.quantile(myData['radius_ratio'], 0.50)\nq3 = np.quantile(myData['radius_ratio'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"radius_ratio above \", myData['radius_ratio'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['radius_ratio'] > 276]['radius_ratio'].shape[0])","926b8d98":"fig, (g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['pr.axis_aspect_ratio'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['pr.axis_aspect_ratio'], ax = g2)\ng2.set_title(\"Box Plot\")","06993283":"q1 = np.quantile(myData['pr.axis_aspect_ratio'], 0.25)\nq2 = np.quantile(myData['pr.axis_aspect_ratio'], 0.50)\nq3 = np.quantile(myData['pr.axis_aspect_ratio'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"pr.axis_aspect_ratio above \", myData['pr.axis_aspect_ratio'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['pr.axis_aspect_ratio'] > 77.0]['pr.axis_aspect_ratio'].shape[0])","6f07ce7c":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['max.length_aspect_ratio'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['max.length_aspect_ratio'], ax = g2)\ng2.set_title(\"Box Plot\")","ba69113c":"q1 = np.quantile(myData['max.length_aspect_ratio'], 0.25)\nq2 = np.quantile(myData['max.length_aspect_ratio'], 0.50)\nq3 = np.quantile(myData['max.length_aspect_ratio'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"max.length_aspect_ratio above \", myData['max.length_aspect_ratio'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"max.length_aspect_ratio below \", myData['max.length_aspect_ratio'].quantile(0.25) - (1.5*IQR), \"are outliers\")","e7719566":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['scatter_ratio'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['scatter_ratio'], ax = g2)\ng2.set_title(\"Box Plot\")","0a84e21d":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['elongatedness'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['elongatedness'], ax = g2)\ng2.set_title(\"Box Plot\")","02c92c50":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['pr.axis_rectangularity'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['pr.axis_rectangularity'], ax = g2)\ng2.set_title(\"Box Plot\")","0a5e3a91":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['max.length_rectangularity'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['max.length_rectangularity'], ax = g2)\ng2.set_title(\"Box Plot\")","45f9472c":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['scaled_variance'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['scaled_variance'], ax = g2)\ng2.set_title(\"Box Plot\")","41e76941":"q1 = np.quantile(myData['scaled_variance'], 0.25)\nq2 = np.quantile(myData['scaled_variance'], 0.50)\nq3 = np.quantile(myData['scaled_variance'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"scaled_variance above \", myData['scaled_variance'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['scaled_variance'] > 292]['scaled_variance'].shape[0])","da344e13":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['scaled_variance.1'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['scaled_variance.1'], ax = g2)\ng2.set_title(\"Box Plot\")","fb2be7d6":"q1 = np.quantile(myData['scaled_variance.1'], 0.25)\nq2 = np.quantile(myData['scaled_variance.1'], 0.50)\nq3 = np.quantile(myData['scaled_variance.1'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"scaled variance.1 above \", myData['scaled_variance.1'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['scaled_variance.1'] > 989.5]['scaled_variance.1'].shape[0])","5073cd46":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['scaled_radius_of_gyration'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['scaled_radius_of_gyration'], ax = g2)\ng2.set_title(\"Box Plot\")","72865af1":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['scaled_radius_of_gyration.1'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['scaled_radius_of_gyration.1'], ax = g2)\ng2.set_title(\"Box Plot\")","3eb85526":"q1 = np.quantile(myData['scaled_radius_of_gyration.1'], 0.25)\nq2 = np.quantile(myData['scaled_radius_of_gyration.1'], 0.50)\nq3 = np.quantile(myData['scaled_radius_of_gyration.1'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"scaled radius of gyration.1 above \", myData['scaled_radius_of_gyration.1'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['scaled_radius_of_gyration.1'] > 87]['scaled_radius_of_gyration.1'].shape[0])","af3dd3a5":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['skewness_about'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['skewness_about'], ax = g2)\ng2.set_title(\"Box Plot\")","9ab21524":"q1 = np.quantile(myData['skewness_about'], 0.25)\nq2 = np.quantile(myData['skewness_about'], 0.50)\nq3 = np.quantile(myData['skewness_about'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"skewness about above \", myData['skewness_about'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['skewness_about'] > 19.5]['skewness_about'].shape[0])","a0fd2f3b":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['skewness_about.1'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['skewness_about.1'], ax = g2)\ng2.set_title(\"Box Plot\")","f2620b5f":"q1 = np.quantile(myData['skewness_about.1'], 0.25)\nq2 = np.quantile(myData['skewness_about.1'], 0.50)\nq3 = np.quantile(myData['skewness_about.1'], 0.75)\nIQR = q3 - q1\n\nprint(\"Quartile q1: \", q1)\nprint(\"Quartile q2: \", q2)\nprint(\"Quartile q3: \", q3)\nprint(\"Inter Quartile Range: \", IQR)\n\nprint(\"skewness about.1 above \", myData['skewness_about.1'].quantile(0.75) + (1.5*IQR), \"are outliers\")\nprint(\"No. of outliers \", myData[myData['skewness_about.1'] > 40]['skewness_about.1'].shape[0])","d5caafb8":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['skewness_about.2'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['skewness_about.2'], ax = g2)\ng2.set_title(\"Box Plot\")","ed92de6c":"fig,(g1,g2) = plt.subplots(nrows = 1, ncols = 2)\nfig.set_size_inches(15,2)\nsns.distplot(myData['hollows_ratio'], ax = g1)\ng1.set_title(\"Distribution Plot\")\n\nsns.boxplot(myData['hollows_ratio'], ax = g2)\ng2.set_title(\"Box Plot\")","f91f2fb8":"myData.groupby('class').count()","7ecba89e":"sns.countplot(myData['class'])","18a48230":"plt.figure(figsize = (20,10))\nsns.heatmap(myData.corr(), annot = True)","50528fcf":"myData_attr = myData.drop('class', axis = 1)\nmyData_target = myData['class']\n\nprint(myData_attr.shape)\nprint(myData_target.shape)","18b5d53c":"myData_attr_s = myData_attr.apply(zscore)","bf996c80":"myData_target.replace({\"car\": 0, \"bus\": 1, \"van\": 2}, inplace = True)\nprint(myData_target.shape)","92c098f9":"cov_mat = np.cov(myData_attr_s, rowvar = False)\nprint(cov_mat)","378a0a94":"print(cov_mat.shape)","92a8fe5f":"from sklearn.decomposition import PCA\npca_18 = PCA(n_components = 18)\npca_18.fit(myData_attr_s)","54c9f3a6":"print(pca_18.explained_variance_)","a1e68cc2":"print(pca_18.components_)","6a37b53c":"print(pca_18.explained_variance_ratio_)","19db330c":"plt.bar(list(range(1,19)), pca_18.explained_variance_ratio_, alpha = 0.5)\nplt.ylabel('Variation explained')\nplt.xlabel('Eigen values')\nplt.show()","4515ba1a":"plt.step(list(range(1,19)), np.cumsum(pca_18.explained_variance_ratio_), where = 'mid')\nplt.ylabel('Cum of variation explained')\nplt.xlabel('Eigen value')\nplt.show()","cf245472":"pca_8 = PCA(n_components = 8)\npca_8.fit(myData_attr_s)\nprint(pca_8.components_)\nprint(pca_8.explained_variance_ratio_)","5e4bd8be":"myData_attr_s_pca_8 = pca_8.transform(myData_attr_s)\nmyData_attr_s_pca_8.shape","a0d5d0dd":"sns.pairplot(pd.DataFrame(myData_attr_s_pca_8))","4a46640f":"from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import accuracy_score,confusion_matrix, classification_report\nfrom sklearn.svm import SVC","4f0144e5":"accuracies = {}\nmodel = SVC()\n\nX_train, X_test, y_train, y_test = train_test_split(myData_attr_s_pca_8, myData_target, test_size = 0.30, random_state = 1)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\nacc_svm = model.score(X_test, y_test) *100\n\naccuracies['SVM'] = acc_svm\nprint(model.score(X_train, y_train))\nprint(model.score(X_test, y_test))","f789a46a":"print(classification_report(y_test,y_pred))","cc0cf2e7":"param = {\n    'C' : [0.01,0.05,0.5,1],\n    'kernel' :['linear','rbf']\n}\n\ngrid_svm = GridSearchCV(model, param_grid = param, scoring = 'accuracy', cv = 10)","f6bbf639":"grid_svm.fit(X_train,y_train)","42dda93b":"grid_svm.best_params_","0ac7c896":"model_svm = SVC(C = 1, kernel = 'rbf', gamma = 1)\nX_train, X_test, y_train, y_test = train_test_split(myData_attr_s_pca_8, myData_target, test_size = 0.30, random_state = 1)\nmodel_svm.fit(X_train, y_train)\ny_pred = model_svm.predict(X_test)\n\nacc_svm_gs = model_svm.score(X_test, y_test) * 100\naccuracies['SVM_GS'] = acc_svm_gs\nprint(model.score(X_test, y_test))\nprint(classification_report(y_test, y_pred))","c6c65249":"svm_eval = cross_val_score(estimator = model, X = X_train, y = y_train, cv = 10)\nsvm_eval.mean()","c94180f5":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()\nrf.fit(myData_attr_s, myData_target)\nrf.score(myData_attr_s, myData_target)\n\nfeature_importances = pd.DataFrame(rf.feature_importances_, index = myData_attr_s.columns,\n                                  columns = ['importance']).sort_values('importance', ascending = False) * 100\n\nfeature_importances","4b41844c":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nnb_model = GaussianNB()\nnb_model.fit(X_train, y_train)\nexpected = y_test\npredicted = nb_model.predict(X_test)\n\nacc_nb = nb_model.score(X_test, y_test) * 100\naccuracies['NB'] = acc_nb\n\nprint(metrics.classification_report(expected, predicted))\nprint('Total accuracy: ', np.round(metrics.accuracy_score(expected, predicted), 2))","fa26cd0c":"plt.figure(figsize = (8,5))\nplt.yticks(np.arange(0,100,10))\nsns.barplot(x = list(accuracies.keys()), y = list(accuracies.values()))","9ac3f44c":"models = pd.DataFrame({\n    'Model': ['SVM', 'SVM_GS','Naive Bayes'],\n    \n    'Score': [acc_svm, acc_svm_gs, acc_nb]\n    })\n\nmodels.sort_values(by='Score', ascending=False)","915d98ad":"y_cm_svm = model.predict(X_test)\ny_cm_svm_gs = model_svm.predict(X_test)\ny_cm_nb = nb_model.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix\n\ncm_svm = confusion_matrix(y_test, y_cm_svm)\ncm_svm_gs = confusion_matrix(y_test, y_cm_svm_gs)\ncm_nb = confusion_matrix(y_test, y_cm_nb)\n\nplt.figure(figsize = (16,4))\nplt.suptitle(\"Confusion Matrices\",fontsize=12)\nplt.subplots_adjust(wspace = 0.8, hspace = 0.8)\n\nplt.subplot(1,3,1)\nplt.title(\"SVM Confusion Matrix\")\nsns.heatmap(cm_svm, annot = True, cmap = \"Blues\", fmt = 'd', cbar = False, annot_kws = {\"size\": 12})\n\n\nplt.subplot(1,3,2)\nplt.title(\"SVM Grid Search Confusion Matrix\")\nsns.heatmap(cm_svm_gs, annot = True, cmap = \"Blues\", fmt = 'd', cbar = False, annot_kws = {\"size\": 12})\n\nplt.subplot(1,3,3)\nplt.title(\"NB Confusion Matrix\")\nsns.heatmap(cm_nb, annot = True, cmap = \"Blues\", fmt = 'd', cbar = False, annot_kws = {\"size\": 12})","a20acf36":"Pr.Axis aspect ratio","cfce3c92":"Elongatedness","103dbcf7":"# Grid Search","c82faff2":"Skewness about","84d916f8":"Scatter ratio","b1e4d1f3":"Rows imputation with respective mean values","f55b3e0f":"Scaled variance","a6c9c223":"Skewness about.1","af395716":"Circularity","ed7a340f":"Class","d5ad5027":"We will impute these null values rather to drop them.","8c30e49b":"* compactness - Approx normal distribution, no outliers\n* circularity - Slightly right skewed\n* distance_circularity - Left skewed\n* radius_ratio - Approx normal distribution, with 3 outliers\n* pr.axis_aspect_ratio - Approx normal distribution, with 8 outliers\n* max.length_aspect_ratio - 2 peak, 12 outliers\n* scatter_ratio - 2 peaks, right skewed\n* elongatedness - 2 peaks, left skewed\n* pr.axis_rectangularity - 2 peaks, right skewed\n* max.length_rectangularity - 3 peaks, no outliers\n* scaled_variance - 2 peaks, 1 outlier\n* scaled_variance.1 - 2 peaks, 2 outliers\n* scaled_radius_of_gyration - Slightly right skewed\n* scaled_radius_of_gyration.1 - 15 Outliers\n* skewness_about - right skewed, 12 outliers\n* skewness_about.1 - 1 outlier\n* skewness_about.2 - No outlier\n* hollows_ratio - 2 peaks, no outlier\n* class - more no. of car > bus > van","961b47bd":"Radius Ratio","9e50bfbb":"# 8. Confusion Matrix","331ab5f7":"# 7. Model Comparison","0c763344":"Distance Circularity ","4d188235":"Accuracy score = 83%","530ac9b9":"Scaled radius of gyration.1","13a2a961":"## Correlation Matrix","028de222":"Max length rectangularity","33b356a9":"# 5. Support Vector Machines","012a1cb3":"Compactness","362b3140":"# The purpose of the case study is to classify a given silhouette as one of three different types of vehicle, using a set of features extracted from the silhouette. The vehicle may be viewed from one of many different angles.\n\nFour \"Corgie\" model vehicles were used for the experiment: a double decker bus, Cheverolet van, Saab 9000 and an Opel Manta 400 cars. This particular combination of vehicles was chosen with the expectation that the bus, van and either one of the cars would be readily distinguishable, but it would be more difficult to distinguish between the cars.","7894aeab":"Scaled variance.1","57d5679a":"# 4. Principal Component Analysis","9007ab0e":"Pr.Axis rectangularity","13e82f5f":"# Feature Importances","71e890c2":"3. EDA Summary of Independent and dependent variables","bb5a1543":"Scaled radius of gyration","55b576e5":"Max length aspect ratio","326bdf93":"Skewness about.2","de5f79a4":"Thus PCA helps to reduce dimension data from 18 to 8 with 93% accuracy","3d8ed490":"95% variation observed in this data.","c5a7e8fa":"Hollows ratio","77d85e41":"# 1. Observe dataset","deeeaf85":"# 2.EDA"}}