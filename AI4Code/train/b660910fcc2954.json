{"cell_type":{"71fdc9d0":"code","530d2b90":"code","760dec09":"code","4895760f":"code","f9abdb8a":"code","e58bb37d":"code","ce2d87d2":"code","4f084d7c":"code","5301bda9":"code","6751d70c":"code","edf74314":"code","0c81ba64":"code","311142a5":"code","8614b87b":"code","cb535c7d":"code","da99f374":"code","f1f2a8a0":"code","9dab0b99":"code","ca65e2cc":"code","a304df84":"code","3af089fe":"code","983dfe5f":"code","b9d2d578":"code","37c62b7a":"code","8c6a8eae":"code","0b23a4c6":"code","e2670f97":"code","c5925c65":"code","ef85ebc2":"code","13bb0505":"code","9e518f26":"code","39d3cf0b":"code","867f8add":"code","03f6aa1b":"code","52e90a9f":"code","3e418f9c":"code","1a36b6c4":"code","9faa7893":"code","88b13b8b":"code","9d973bac":"code","8945cd95":"code","8a4b97b7":"code","56fda817":"code","a7d23a92":"code","5f4bcd6a":"code","96049eb3":"code","0260f269":"markdown","2d1e48a5":"markdown","10ee0d84":"markdown","87faea32":"markdown","aa31cc51":"markdown","5db2b720":"markdown","e7a9ba92":"markdown","cf9fa35e":"markdown","30fe3bdb":"markdown","ff6876f2":"markdown","32309ee5":"markdown","f7ad60e7":"markdown","42cd352c":"markdown"},"source":{"71fdc9d0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.simplefilter(\"ignore\")","530d2b90":"train_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\")","760dec09":"train_df.info()","4895760f":"test_df.info()","f9abdb8a":"train_df.head()","e58bb37d":"test_df.head()","ce2d87d2":"train_df.describe()","4f084d7c":"test_df.describe()","5301bda9":"def feature_count(all_data, feature, title, size=3):\n    f, ax = plt.subplots(1,1, figsize=(2*size,4))\n    sns.countplot(all_data[feature], hue=all_data['set'])\n    plt.xlabel(feature)\n    plt.ylabel(f'Count')\n    plt.title(title)\n    plt.show()","6751d70c":"all_data = pd.concat([train_df, test_df], axis=0)\nall_data['set'] = 'train'\nall_data.loc[all_data.target.isna(), 'set'] = 'test'\nprint(all_data.shape, \"\\n\", all_data.set.value_counts())","edf74314":"feature_count(all_data, 'cat0', 'cat0',2)","0c81ba64":"feature_count(all_data, 'cat1', 'cat1',2)","311142a5":"feature_count(all_data, 'cat2', 'cat2',2)","8614b87b":"feature_count(all_data, 'cat3', 'cat3',3)","cb535c7d":"feature_count(all_data, 'cat4', 'cat4',3)","da99f374":"feature_count(all_data, 'cat5', 'cat5',3)","f1f2a8a0":"feature_count(all_data, 'cat6', 'cat6',4)","9dab0b99":"feature_count(all_data, 'cat7', 'cat7',4)","ca65e2cc":"feature_count(all_data, 'cat8', 'cat8',4)","a304df84":"feature_count(all_data, 'cat9', 'cat9',6)","3af089fe":"def plot_feature_scatter(df1, df2, features):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3, i)\n        plt.scatter(df1[feature], df2[feature], marker='+', color='green')\n        plt.xlabel(feature, fontsize=9)\n    plt.show();\n","983dfe5f":"features = ['cont0','cont1', 'cont2','cont3','cont4', 'cont5', 'cont6', 'cont7',\n           'cont8', 'cont9','cont10','cont11', 'cont12', 'cont13']\nplot_feature_scatter(train_df[::15],test_df[::10], features)\n","b9d2d578":"def plot_feature_target_scatter(df1, features):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3, i)\n        plt.scatter(df1[feature], df1['target'], marker='+', color='blue')\n        plt.xlabel(feature, fontsize=9)\n    plt.show();","37c62b7a":"plot_feature_target_scatter(train_df[::15], features)","8c6a8eae":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of target values\")\nsns.distplot(train_df['target'],color=\"darkblue\", kde=True,bins=120, label='target')\nplt.legend(); plt.show()","0b23a4c6":"def plot_feature_distribution(df1, df2, features, label1=\"train\", label2=\"test\"):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3,i)\n        sns.distplot(df1[feature],color=\"orange\", kde=True,bins=60, label=label1)\n        sns.distplot(df2[feature],color=\"darkblue\", kde=True,bins=60, label=label2)\n        plt.xlabel(feature, fontsize=9); plt.legend()\n    plt.show();","e2670f97":"plot_feature_distribution(train_df[::60],test_df[::40], features, 'train-feb','test-feb')","c5925c65":"new_features = ['cont1', 'cont2', 'cont3', 'cont4', 'cont5', 'cont6', 'cont7',\n       'cont8', 'cont9', 'cont10', 'cont11', 'cont12', 'cont13', 'cont14']","ef85ebc2":"trj_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/train.csv\")\ntej_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/test.csv\")\n\nplot_feature_distribution(trj_df[::60],tej_df[::40], new_features, 'train-jan', 'test-jan')","13bb0505":"def plot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb, title=\"Jan vs. Feb data\"):\n    fig, ax1 = plt.subplots(figsize=(10,6))\n    plt.title(title)\n    sns.distplot(train_jan_sample_df, hist=False, color='r')\n    ax1.set_ylabel(f'{f_jan} (Jan)', color='r')\n    plt.legend([f'{f_jan} (Jan)'], loc=(0.01, 0.95))\n    ax2 = ax1.twinx()\n    sns.distplot(train_feb_sample_df, hist=False, color='b')\n    ax2.set_ylabel(f'{f_feb} (Feb)', color='b')\n    plt.legend([f'{f_feb} (Feb)'], loc=(0.01, 0.9))\n    plt.grid(True)\n\n","9e518f26":"f_jan = 'cont1'\nf_feb = 'cont0'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","39d3cf0b":"f_jan = 'cont2'\nf_feb = 'cont1'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","867f8add":"f_jan = 'cont3'\nf_feb = 'cont2'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","03f6aa1b":"f_jan = 'cont4'\nf_feb = 'cont3'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","52e90a9f":"f_jan = 'cont5'\nf_feb = 'cont4'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","3e418f9c":"f_jan = 'cont6'\nf_feb = 'cont5'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","1a36b6c4":"f_jan = 'cont7'\nf_feb = 'cont6'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","9faa7893":"f_jan = 'cont8'\nf_feb = 'cont7'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","88b13b8b":"f_jan = 'cont9'\nf_feb = 'cont8'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","9d973bac":"f_jan = 'cont10'\nf_feb = 'cont9'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","8945cd95":"f_jan = 'cont11'\nf_feb = 'cont10'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","8a4b97b7":"f_jan = 'cont12'\nf_feb = 'cont11'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","56fda817":"f_jan = 'cont13'\nf_feb = 'cont12'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","a7d23a92":"f_jan = 'target'\nf_feb = 'target'\ntrain_jan_sample_df = trj_df[f_jan].values[::30]\ntrain_feb_sample_df = train_df[f_feb].values[::30]\nplot_data(train_jan_sample_df, train_feb_sample_df, f_jan, f_feb)\ndel train_jan_sample_df\ndel train_feb_sample_df","5f4bcd6a":"plt.figure(figsize=(16, 16))\nheatmap = sns.heatmap(np.round(test_df[features].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - test data\")\nplt.show()","96049eb3":"features_target = features + ['target']\nplt.figure(figsize=(16, 16))\nheatmap = sns.heatmap(np.round(train_df[features_target].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - train data\")\nplt.show()","0260f269":"## Comparison with January competition data\n\n### Features","2d1e48a5":"# Data exploration\n\n\nThere are (besides id and target) a number of 10 categorical features and 14 continous features.\n\nWe will look for the categorical features to the class count of the feature in train and test set and for the continous features to the distribution.\n\n","10ee0d84":"## Continous features distribution","87faea32":"### Target data","aa31cc51":"## Categorical features\n\nWe will use category count for the categorical features.","5db2b720":"## Glimpse the data","e7a9ba92":"# Prepare the analysis\n\n\n## Load packages","cf9fa35e":"## Scatter plot of continous features (train\/test)\n\n\nWe will use scatter plot of train and test features, feature by feature.","30fe3bdb":"# Introduction\n\nIn this challenge, Kaggle invites the competitors to solve a regression problem.\n\n<center><img src=\"https:\/\/images.unsplash.com\/photo-1579343580826-6323adb66545?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" width=600><\/img><\/center>","ff6876f2":"## Load the data","32309ee5":"## Target distribution","f7ad60e7":"## Scatter plot of continous features vs. target\n\nScatter plot of each feature in train vs. target values.","42cd352c":"## Features correlation"}}