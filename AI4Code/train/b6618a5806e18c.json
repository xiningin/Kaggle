{"cell_type":{"ea5f0809":"code","4d12c7a4":"code","df969b72":"code","03bf58c2":"code","f69934fa":"code","3122d4cb":"code","052d01db":"code","957b3c18":"markdown","bcb152b0":"markdown","a7932786":"markdown"},"source":{"ea5f0809":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfiles = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        files.append(os.path.join(dirname, filename))\n\nprint(files)\n# Any results you write to the current directory are saved as output.","4d12c7a4":"data = pd.read_csv(files[0])\ndata.head()","df969b72":"data_simple = data._get_numeric_data().dropna()\ndata_simple = data_simple.drop([\"id\"], axis=1)\nprint(data_simple.shape)\ndata_simple.head()","03bf58c2":"X = data_simple.iloc[:,:-1].values\ny = data_simple[\"revenue\"].values","f69934fa":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.33, random_state=0)\nX_scaler = StandardScaler().fit(X_train)\nX_train_normalised = X_scaler.transform(X_train)\nX_val_normalised = X_scaler.transform(X_val)\nprint(X_train_normalised[:5])\nprint(X_val_normalised[:5])","3122d4cb":"linear_model = LinearRegression().fit(X_train_normalised, y_train)\nlinear_model.score(X_val_normalised, y_val)","052d01db":"rf_model = RandomForestRegressor().fit(X_train_normalised, y_train)\nrf_model.score(X_val_normalised, y_val)","957b3c18":"### Modelling","bcb152b0":"### Preprocess","a7932786":"### Read data"}}