{"cell_type":{"e9dcc5d1":"code","5856f403":"markdown","2524ae6d":"markdown"},"source":{"e9dcc5d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5856f403":"**Statistical Thinking**\n**Binning** - Square root of the number of data points\n**Binning bias** - The same data maybe interpreted differently with the choice of number of bins. And to get remedy from this we have to use bee swarm plot.\n**ECDF** - Function definition\n    \n    def ecdf(data):\n        \"\"\"Compute ECDF for a one-dimensional array of measurements.\"\"\"\n        # Number of data points: n\n        n = len(data)\n\n        # x-data for the ECDF: x\n        x = np.sort(data)\n\n        # y-data for the ECDF: y\n        y = np.arange(1, 1+n) \/ n\n\n        return x, y\n\n","2524ae6d":"When the number of data are very large and the bee swarm plots are too cluttered then we should use box and whisker plot.\nVariance and standard deviation\nCovariance and pearson correlation coefficient"}}