{"cell_type":{"d465dbeb":"code","d9b3423a":"code","e0aa8438":"code","bf28567b":"code","f6e8a9f5":"code","8b4ad5d1":"code","fdc23ad3":"code","6475636f":"code","c0a34812":"code","b9dca661":"code","daa00b2a":"code","6d9df2aa":"code","2bca78ab":"code","c04c1f4f":"code","87fa64a1":"code","2f9c9c19":"code","accb6fc3":"code","35ff9a64":"code","26542f75":"code","c3bac0a0":"code","32b6c28e":"code","45efc8fe":"code","1899e2d6":"code","6f2b7fa0":"code","29e4022f":"code","be3c751d":"code","152e8385":"code","b5860955":"code","f5038ae3":"code","ab8aceb2":"code","eb803ebd":"code","aec16765":"code","ed82720b":"code","d1d8e795":"code","85d4d4f7":"code","346bbebd":"code","269b6ada":"markdown","94cf071e":"markdown","7bad596e":"markdown","39177b19":"markdown","0826de2b":"markdown","b352aa08":"markdown","b4f93ce2":"markdown","ce16b12d":"markdown","1c4d7e8d":"markdown","6a579b62":"markdown","2478b8f7":"markdown"},"source":{"d465dbeb":"pip install dataprep","d9b3423a":"from dataprep.datasets import get_dataset_names\nfrom dataprep.datasets import load_dataset\nfrom dataprep.eda import create_report,plot,plot_missing\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as stats\n","e0aa8438":"df=pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')","bf28567b":"# display the overall stat report\ndisplay(plot(df, display=['Stats', 'Insights']))\ndisplay(df.info())\n\n# store and display the numerical and nonn-numerical cols in df\nnum_cols=list(df.select_dtypes(include=['number']).columns)\nnon_num_cols=list((set(df.columns)-set(num_cols)))\n\nprint(f'Num cols = {num_cols}')\nprint(f'Non-num cols = {non_num_cols}')","f6e8a9f5":"# info about missing value\nprint('The missing Value in Dataset\\n')\ndisplay(plot_missing(df,display=['Stats','Bar Chart','Heat Map']))","8b4ad5d1":"import ipywidgets as widgets","fdc23ad3":"# for non-numerical columns\nchoose_non_num=widgets.Dropdown(\n    options=non_num_cols,\n    description='Choose the Non-Numerical Column You Want to Explore',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\nchoose_non_num","6475636f":"print(f'The Non-Numerical Column You Choose is: {choose_non_num.value}\\n')\ndisplay(plot(df,choose_non_num.value,display=['Stats','Pie Chart','Value Table']))","c0a34812":"# for numerical columns\nchoose_num=widgets.Dropdown(\n    options=num_cols,\n    description='Choose the Numerical Column You Want to Explore',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\nchoose_num","b9dca661":"# calculate the skewness of the selected column\nchoose_skewness=df[choose_num.value].skew()\n\nif choose_skewness>0:\n  skewness_direction='Skewed Right'\nelif choose_skewness==0:\n  skewness_direction='Perfectly Normal Distribution'\nelse:\n  skewness_direction='Skewed Left'","daa00b2a":"print(f'The Non-Numerical Column You Choose is: {choose_num.value}\\n')\nprint('The Normal Distribution Skewness = 0')\nprint(f'The {choose_num.value} Skewness = {choose_skewness}')\nprint(f'The Skewness Direction = {skewness_direction}\\n')\ndisplay(plot(df,choose_num.value,display=['Stats','KDE Plot','Normal Q-Q Plot','Box Plot']))\n","6d9df2aa":"import matplotlib.pyplot as plt\nimport seaborn as sns","2bca78ab":"# pairplot\nsns.pairplot(data=df,corner=True,diag_kind='kde')\n","c04c1f4f":"# correlation heatmap\nfig, axs=plt.subplots(figsize=(8,7))\n\nsns.heatmap(df.corr(),annot=True, linewidths=.7,cmap='coolwarm',fmt='.2f',ax=axs)","87fa64a1":"print(f'Num cols = {num_cols}')\nprint(f'Non-num cols = {non_num_cols}')","2f9c9c19":"choose_num_1=widgets.Dropdown(\n    options=num_cols,\n    description='Choose the 1st Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_num_1)\n\nchoose_num_2=widgets.Dropdown(\n    options=num_cols,\n    description='Choose the 2nd Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_num_2)","accb6fc3":"print(choose_num_1.value)\nprint(choose_num_2.value)\n\nnum_num_select=list([choose_num_1.value,choose_num_2.value])\nprint(num_num_select)","35ff9a64":"# the scatter plot\nsns.jointplot(data=df[num_num_select],x=choose_num_1.value,y=choose_num_2.value,marginal_ticks=True)\n\n# the hexbin plot\nsns.jointplot(data=df[num_num_select],x=choose_num_1.value,y=choose_num_2.value,marginal_ticks=True,kind='hex',gridsize=15)","26542f75":"print(f'Num cols = {num_cols}')\nprint(f'Non-num cols = {non_num_cols}')","c3bac0a0":"# choose num col\nchoose_num_1=widgets.Dropdown(\n    options=num_cols,\n    description='Choose the 1st Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_num_1)\n\n# choose non-num col\nchoose_non_num_2=widgets.Dropdown(\n    options=non_num_cols,\n    description='Choose the 2nd Non-Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_non_num_2)","32b6c28e":"print(choose_num_1.value)\nprint(choose_non_num_2.value)\n","45efc8fe":"# visualization\nplot(df,choose_num_1.value,choose_non_num_2.value)","1899e2d6":"from sklearn.preprocessing import PowerTransformer\n# normality transformation\nnum_skew=df[choose_num_1.value].skew()\nprint(f'The chosen numerical col [{choose_num_1.value}] Skewness = {num_skew}')","6f2b7fa0":"transform=PowerTransformer()\ntr_num_1=transform.fit_transform(df[[choose_num_1.value]])","29e4022f":"# visualize the PowerTransformation\nfig, (ax1, ax2) = plt.subplots(ncols=2,figsize=(15,5))\nfig.suptitle('Normality Transformation')\n\nsns.kdeplot(data=df[choose_num_1.value],ax=ax1)\nax1.set_title('Before Normality Transformation')\nsns.kdeplot(data=tr_num_1,ax=ax2)\nax2.set_title('After Normality Transformation')","be3c751d":"# create a df for kruskal test\ndf_kk=pd.DataFrame()\ntr_num_1=tr_num_1.flatten()\n\nnum_1=choose_num_1.value\nnon_num_2=choose_non_num_2.value\n\ndf_kk[num_1]=tr_num_1\ndf_kk[non_num_2]=df[choose_non_num_2.value]","152e8385":"df_kk.groupby(non_num_2).count()","b5860955":"# using dict to store the infor for further kruskal test\ndf_kk_dict={}\nfor cat in df_kk[non_num_2].unique():\n  df_kk_dict[cat]=[list(df_kk.loc[df_kk[non_num_2]==cat,[num_1]][num_1])]","f5038ae3":"cat_1=list(df_kk_dict.keys())[0]\ncat_2=list(df_kk_dict.keys())[1]\ncat_3=list(df_kk_dict.keys())[2]\ncat_4=list(df_kk_dict.keys())[3]\n\nprint(cat_1,\n      cat_3)","ab8aceb2":"# the Kruskal-Wallis H-test for the hypothesis testing\npvalue=stats.kruskal(df_kk_dict[cat_1][0],\n              df_kk_dict[cat_3][0]\n              ).pvalue\nkk_stat=stats.kruskal(df_kk_dict[cat_1][0],\n              df_kk_dict[cat_3][0]\n              ).statistic\n\nprint (f'Numeircal Column:{num_1}')\nprint(f'Categorical Column:{non_num_2}')\nprint(f'Categories: {cat_1} , {cat_3}\\n')\n\nif pvalue<0.05:\n  print (f'Reject Null Hypothesis')\n  print(f'There Exists Significant Difference for {num_1} in terms of: [{cat_1}], [{cat_3}]\\n')\nelse:\n  print (f'Fail to Reject Null Hypothesis')\n  print(f'There is No Significant Difference for {num_1} in terms of: [{cat_1}], [{cat_3}]\\n')\n\nprint (f'P-value = {pvalue}')\nprint (f'Statistics = {kk_stat}')\n","eb803ebd":"print(f'Non-num cols = {non_num_cols}')","aec16765":"# User input for variable selection\n\n# choose non-num col_1\nchoose_non_num_1=widgets.Dropdown(\n    options=non_num_cols,\n    description='Choose the 1st Non-Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_non_num_1)\n\n# choose non-num col_2\nchoose_non_num_2=widgets.Dropdown(\n    options=non_num_cols,\n    description='Choose the 2nd Non-Numerical Column You Want to Compare',\n    style= {'description_width': 'initial'},\n    disabled=False,\n)\ndisplay(choose_non_num_2)","ed82720b":"# display the user selection\n\nnon_num_1=choose_non_num_1.value\nnon_num_2=choose_non_num_2.value\n\nprint(non_num_1,non_num_2)","d1d8e795":"# plot the visualization\nplot(df,non_num_1,non_num_2,display=['Stacked Bar Chart','Heat Map'])","85d4d4f7":"# Chi-square test\nfrom scipy.stats import chi2_contingency\n\n# 1st step convert the data into a contingency table with frequencies\nchi_contigency=pd.crosstab(df[non_num_1],df[non_num_2])\nchi_contigency","346bbebd":"# 2nd step: Chi-square test of independence.\nc, p, dof, expected = chi2_contingency(chi_contigency)\n\n\nif p<0.05:\n  print('Reject Null Hypothesis')\n  print(f'The:\\n [{non_num_1}],[{non_num_2}] are not independent\\n')\nelse:\n  print('Fail to Reject Null Hypothesis')\n  print(f'The:\\n [{non_num_1}],[{non_num_2}] are independent\\n')\n\n\nprint(f'The P-value = {p}')","269b6ada":"# EDA for HR Job Change Data Scientist Dataset\n### Course Project\n### Creator: DCX\n**data source:** https:\/\/www.kaggle.com\/arashnic\/hr-analytics-job-change-of-data-scientists?select=aug_test.csv","94cf071e":"<h3> 3.1 Numerical-Numerical\n\n\n*   scatter plot\n*   hexbin plot\n\n","7bad596e":"### 0. Load the dataset","39177b19":"<h2> 1. Overall Statistic Report\n","0826de2b":"<h3> 2.1 Univariate Analaysis --- Non-Numerical Columns","b352aa08":"<h2> 3. Bivariate Analaysis\n\n\n\n*   Overall Correlation Heatmap\n*   For Selected Bivariate Relationship\n** Numerical-Numerical\n** Numerical-Categorical\n** Categorical-Categorical\n\n","b4f93ce2":"<h3> 3.3 Categorical-Categorical\n\n\n*   Visualization\n*   Chi-Squre Test: \nhttps:\/\/www.youtube.com\/watch?v=L1QPBGoDmT0\n\n","ce16b12d":"<h3> 2.2 Univariate Analysis -- Numerical Column","1c4d7e8d":"<h1> The whole EDA framework contains 3 main sequential modules\n\n\n*   Overall Statistic Report\n*   Univariate Analysis\n*   Bivariate Analysis (contains Hypothesis Testing)\n\n\n","6a579b62":"<h2> 2. Univariate Analysis\n\n\n\n*   for Non-Numerical Cols : display 'stats','pie chart', 'value table'.\n\n\n*   for Numerical Cols : display 'stats','KDE Plot', 'Q-Q Plot','Box Plot'.\n\n","2478b8f7":"<h3> 3.2 Numerical-Categorical \n\n\n\n*   visualization\n** box plot\n** line chart\n*   normal transformation and Kruskal\n\n"}}