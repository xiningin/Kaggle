{"cell_type":{"47f4663e":"code","a0df1a5d":"code","fcf68bc0":"code","d591657d":"code","1c048fd9":"code","c3226d21":"code","28023492":"code","c1b22c1f":"code","c764b474":"code","a4cc1717":"code","9e3811a7":"code","5c5b7b73":"code","3ca5523c":"code","672eca2a":"code","aa4ce45b":"code","b8ad2a15":"code","7f79de91":"code","588b1203":"code","66659093":"code","c879a03f":"markdown","d7169c41":"markdown","451c06ca":"markdown","bebd826d":"markdown","84257523":"markdown","48e895a5":"markdown","b6bf4dde":"markdown","522e00ca":"markdown","1597ba76":"markdown","7c25fa4f":"markdown","1dc12ae2":"markdown","54ad55a7":"markdown","29fc04c8":"markdown","0d8cb5d6":"markdown","0a67b391":"markdown","3503a20c":"markdown","4d1edc08":"markdown","176d8d4a":"markdown","343e90dc":"markdown"},"source":{"47f4663e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0df1a5d":"data = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\") #pathfile\n","fcf68bc0":"data.head()","d591657d":"print(data.columns)\nprint(data.info())","1c048fd9":"dataFilms = data[data.type == \"Movie\"]\ndataFilms.head()","c3226d21":"dataFilms.info()\n","28023492":"dataFilms.isna().sum()\n","c1b22c1f":"dataFilms[\"listed_in\"].unique","c764b474":"#For instance we can examine sixth line.\n\na = \"International Movies, Sci-Fi & Fantasy, Thrillers\"\nb = a.split(\", \")\nprint(b)\n\n","a4cc1717":"listedin = []\nfor each in dataFilms[\"listed_in\"]:\n    each = each.split(\", \")\n    listedin = listedin + each\n    \nlistedin = list(dict.fromkeys(listedin))\nprint(listedin)    ","9e3811a7":"dataFilms[\"duration\"].head()\n","5c5b7b73":"#for example we can use here apply method\n\ndef splitandTransform(x):\n    x = x.split(\" \")\n    try:\n        x = int(x[0])\n        return x\n    except ValueError:\n        pass\n\n#I should try this firstly so:\n","3ca5523c":"dataFilms[\"durationINT\"] = dataFilms.duration.apply(splitandTransform)\ndataFilms[\"durationINT\"].head() #I added new column because I did not want to change original data.","672eca2a":"dataFilms.durationINT.plot(kind ='line', color = 'green',label=\"Duration\",linewidth=1,alpha = 0.5, grid = True,)\nplt.legend()\nplt.xlabel(\"Index\")\nplt.ylabel(\"Duration:Minutes\")\nplt.title(\"Duration of Line Plots\")\nfig =plt.gcf()\nfig.set_size_inches(18.5, 10.5)\n\nplt.show()","aa4ce45b":"\"\"\"\nThis section was really complex for me and it takes time to calculate, \nas I am beginner I am sorry for this, I hope that I will solve this in more effective way.\n\"\"\"\nmlist = []\nfor a in listedin:\n    tlist = []\n    for b in dataFilms[\"show_id\"]:\n        if a in str(dataFilms[dataFilms['show_id'] == b]['listed_in']):\n            tlist = tlist + list(dataFilms[dataFilms['show_id'] == b]['durationINT'])\n        else:\n            pass\n    result = int(sum(tlist)\/len(tlist))\n    mlist.append(result)\nprint(mlist)            \n    \n    \n            \n            ","b8ad2a15":"dataFilms2 = dict(zip(listedin,mlist)) \ndataFilms2 = pd.Series(dataFilms2)\nprint(dataFilms2)\n\n","7f79de91":"df = pd.DataFrame({'Listed_Species':dataFilms2.index, 'Avarage_Durations':dataFilms2.values})\ndf","588b1203":"c = \"Movies\"\ndef delMovies(x):\n   \n    if c in str(x).split(\" \"):\n        a = str(x).replace(\"Movies\",\"\")\n        if a == \"\":\n            return x\n        else:\n            return a\n    else:\n        return x\n        \n\ndf[\"Listed_Species\"] = df.Listed_Species.apply(delMovies)\ndf.iloc[17,0] = \"General Movies\"\nprint(df)","66659093":"df_A = df.iloc[:10,:10]\ndf_A.plot(kind = \"scatter\", x = \"Listed_Species\", y = \"Avarage_Durations\", alpha = 1, color =\"red\", grid = True, s = 500)\nplt.xlabel(\"Listed_Species\")\nplt.ylabel(\"Avarage_Durations\")\nplt.title(\"Durations According To Species 1\")\nfig =plt.gcf()\nfig.set_size_inches(18.5, 10.5)\nplt.show()\n\ndf[\"Avarage_Durations\"]=df[\"Avarage_Durations\"].astype(float)\ndf_B = df.loc[::-1,::-1]\ndf_B = df_B.iloc[:10,:10]\ndf_B.plot(kind = \"scatter\", x = \"Listed_Species\", y = \"Avarage_Durations\", alpha = 1, color =\"blue\", grid = True, s = 500)\nplt.xlabel(\"Listed_Species\")\nplt.ylabel(\"Avarage_Durations\")\nplt.title(\"Durations According To Species 2\")\nfig =plt.gcf()\nfig.set_size_inches(18.5, 10.5)\nplt.show()","c879a03f":"# First Graph","d7169c41":"Finally, I could reach 19 main listed_in's species. After this I need to focus on duration parts.","451c06ca":"I have created series instead of DataFrame, because Pandas requires it, but as receiving lot of indexing errors from Panda, \u0131 decided to transform this into dataframe after this. I do not know why I could not create a dataframe at first, if you know you can answer this :)","bebd826d":"I saw there are 12 columns in this data set, then I thought I can use scatter plot from matplotlib to see correlation between \"listed_in\" class(categories) and durations for especially films. But firstly I needed to create new integer column as they were just basic strs.\n","84257523":"So anymore, we can see duration-indexing line plot for films. ","48e895a5":"![](https:\/\/www.deccanherald.com\/sites\/dh\/files\/styles\/article_detail\/public\/article_images\/2020\/05\/19\/netflix-1292029648-1585846485.jpg?itok=X7hobtZ6)","b6bf4dde":"But I want them to catogorize with their listedin profiles so I need to scan for every film for each category and I need to define their avarage durations. But I know that one film can be placed in different categories but I do not seem this is a problem for me.","522e00ca":"After this, I need to do some balance for visualization to Listed_Species","1597ba76":"# Duration Parts","7c25fa4f":"After calculating average of durations each listed-in I was ready to graph it :)","1dc12ae2":"# Listed_\u0130n Parts","54ad55a7":"Firstly, I eliminated TV shows, because I thought that it is better to examine both of them seperately at first.","29fc04c8":"I should use here \"for loop\" of course so:","0d8cb5d6":"## FirstSection: Durations\/Categories for Films\nFirstly, I uploaded data file to my notebook for examination. After this I used some methods from pandas to detect what kind of data I would deal with.","0a67b391":"It seems like classic and musicals shares the highest durations. As we can see that especially stand-up comedies with their one hour rate(aproximately) have the lowets durations. Another one children & family, maybe this can be related about the real duration of focusing capability of youngsters. This Data Analyze  was my first one. After this section, we will continue with another elements of this data; for instance countries with durations, release dates with species. Of course, we can apply same structure to TV series with the numbers of season. \n\nHopefully you enjoy that. Thank you for your reading. I just started to code two week ago, so I am sure that there are more effective ways to do this. I believe that I will learn them.\n\n","3503a20c":"I noticed that there is no missing values in duration and listed_in parts, so I am glad to continue to my work by determining what kind of listed_in variables I have got. I know it is a really mess and combination of many  other variables but I needed to determine them firstly.  ","4d1edc08":"Secondly, I need to determine missing values, because it is really important for especially listed in and durations.","176d8d4a":"I thought that this \", \" is really helpful for my project to seperate species in more effective way. So firstly I needed to try it.","343e90dc":"So I could see that duration parts are written in strings, so \u0131 need to create new dataframe by transforming them integer."}}