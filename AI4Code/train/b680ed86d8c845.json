{"cell_type":{"360f17dc":"code","93369883":"code","728c1da9":"code","12953900":"code","152148b8":"code","de7ee678":"code","523245a2":"code","5f9998c6":"code","43f72805":"code","416dcacf":"code","2917f2f9":"code","ea246cf0":"code","6a2c066e":"code","520f44bd":"code","abb8239c":"code","caec6638":"code","98eb8596":"code","f6139ffb":"code","f5e1a197":"code","9f2580e8":"code","b045de2c":"code","12e4557f":"code","d88d5e84":"code","059ac355":"code","c8f2d633":"code","cab1790c":"code","e336d86f":"code","c623a7b0":"markdown","44dd6d49":"markdown","cf41436c":"markdown","5b2e819c":"markdown","30816557":"markdown"},"source":{"360f17dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93369883":"df = pd.read_csv('..\/input\/corpus-bics-canarias-wikidata-commons-eswiki\/corpus_bics_wikidata_commons_eswiki.csv', encoding='ISO-8859-2')\ndf.head()","728c1da9":"df.isnull().sum()","12953900":"#Code from Gabriel Preda\n\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(2*size,2))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set3')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","152148b8":"plot_count(\"wikidata_etiquetas\", \"Wikidata Etiquetas\", df,4)","de7ee678":"plot_count(\"wikidata_declaraciones\", \"Wikidata Declaraciones\", df,4)","523245a2":"import matplotlib.gridspec as gridspec\nfrom scipy.stats import skew\nfrom sklearn.preprocessing import RobustScaler,MinMaxScaler\nfrom scipy import stats\nimport matplotlib.style as style\nstyle.use('seaborn-colorblind')","5f9998c6":"def plotting_3_chart(df, feature): \n    ## Creating a customized chart. and giving in figsize and everything. \n    fig = plt.figure(constrained_layout=True, figsize=(10,6))\n    ## crea,ting a grid of 3 cols and 3 rows. \n    grid = gridspec.GridSpec(ncols=3, nrows=3, figure=fig)\n    #gs = fig3.add_gridspec(3, 3)\n\n    ## Customizing the histogram grid. \n    ax1 = fig.add_subplot(grid[0, :2])\n    ## Set the title. \n    ax1.set_title('Histogram')\n    ## plot the histogram. \n    sns.distplot(df.loc[:,feature], norm_hist=True, ax = ax1)\n\n    # customizing the QQ_plot. \n    ax2 = fig.add_subplot(grid[1, :2])\n    ## Set the title. \n    ax2.set_title('QQ_plot')\n    ## Plotting the QQ_Plot. \n    stats.probplot(df.loc[:,feature], plot = ax2)\n\n    ## Customizing the Box Plot. \n    ax3 = fig.add_subplot(grid[:, 2])\n    ## Set title. \n    ax3.set_title('Box Plot')\n    ## Plotting the box plot. \n    sns.boxplot(df.loc[:,feature], orient='v', ax = ax3 );\n \n\nprint('Skewness: '+ str(df['wikidata_declaraciones'].skew())) \nprint(\"Kurtosis: \" + str(df['wikidata_declaraciones'].kurt()))\nplotting_3_chart(df, 'wikidata_declaraciones')","43f72805":"stats.probplot(df['wikidata_etiquetas'].values, dist=\"norm\", plot=plt)\nplt.show()","416dcacf":"stats.probplot(df['wikidata_descripciones'].values, dist=\"norm\", plot=plt)\nplt.show()","2917f2f9":"stats.probplot(df['wikidata_declaraciones_referencias_P143'].values, dist=\"norm\", plot=plt)\nplt.show()","ea246cf0":"stats.probplot(df['wikidata_declaraciones_referencias'].values, dist=\"norm\", plot=plt)\nplt.show()","6a2c066e":"stats.probplot(df['wikidata_identificadores_externos'].values, dist=\"norm\", plot=plt)\nplt.show()","520f44bd":"f, (ax1, ax2) = plt.subplots(1, 2, sharey = True)\n\nax1.plot(df.discusion_tamanho_bytes, df.discusion_tamanho_palabras, c = 'green')\nax1.set_title('Discussion Bytes\/Words', c = 'green')\nax2.scatter(df.tamano_bytes, df.tamano_palabras, c='red')\nax2.set_title('Bytes\/Words Size', c ='red')\n\nplt.ylabel('Bytes Size', fontsize = 20)\n\nplt.show()","abb8239c":"sns.boxplot(x=df['commons_archivos'], color = 'cyan')\nplt.title('Commons Archives', fontsize = 20)\nplt.show()","caec6638":"sns.boxplot(x=df['commons_subcats'], color = 'cyan')\nplt.title('Commons Subcategories', fontsize = 20)\nplt.show()","98eb8596":"sns.boxplot(x=df['editores_anonimos'], color = 'magenta')\nplt.title('Anonymous Editors', fontsize = 20)\nplt.show()","f6139ffb":"sns.boxplot(x=df['editores_registrados'], color = 'cyan')\nplt.title('Registered Editors', fontsize = 20)\nplt.show()","f5e1a197":"#Code from Mario Filho\nfrom category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = ['commons_categoria']\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndf_t = ohe.fit_transform(df[cols_selected+['wikidata_interwiki']])\n\n#scaler = MaxAbsScaler()\nX = df_t.iloc[:,:-1]\ny = df_t.iloc[:, -1].fillna(df_t.iloc[:, -1].mean()) \/ df_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","9f2580e8":"ax = df.groupby('wikidata_interwiki')['commons_archivos'].mean().plot(kind='barh', figsize=(12,8),\n                                                           title='Mean Wikidata Interwiki')\nplt.xlabel('Mean Wikidata')\nplt.ylabel('Commons Archivos')\nplt.show()","b045de2c":"ax = df.groupby('wikidata_interwiki')['wikidata_etiquetas', 'wikidata_declaraciones'].sum().plot(kind='bar', rot=45, figsize=(12,6), logy=True,\n                                                                 title='Wikidata')\nplt.xlabel('Wikidata')\nplt.ylabel('Log')\n\nplt.show()","12e4557f":"ax = df.groupby('wikidata_interwiki')['wikidata_descripciones', 'wikidata_declaraciones_referencias_P143'].sum().plot(kind='barh', figsize=(14,8),\n                                                                 title='Wikidata', logx=True, linewidth=3)\nplt.xlabel('Log')\nplt.ylabel('Wikidata')\nplt.show()","d88d5e84":"fig=sns.lmplot(x='wikidata_interwiki', y=\"wikidata_identificadores_externos\",data=df)","059ac355":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.articulo)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","c8f2d633":"fig = px.parallel_categories(df, color=\"wikidata_interwiki\", color_continuous_scale=px.colors.sequential.Viridis)\nfig.show()","cab1790c":"fig = px.pie(df, values=df['wikidata_interwiki'], names=df['wikidata_id'],\n             title='Wikidata Id',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","e336d86f":"fig = go.Figure(data=[go.Bar(\n            x=df['tamano_bytes'][0:10], y=df['tamano_palabras'][0:10],\n            text=df['tamano_palabras'][0:10],\n            textposition='auto',\n            marker_color='black'\n\n        )])\nfig.update_layout(\n    title='Wikidata',\n    xaxis_title=\"Bytes Size\",\n    yaxis_title=\"Words Size\",\n)\nfig.show()","c623a7b0":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","44dd6d49":"![](https:\/\/www.propertyguides.com\/spain\/media\/sites\/4\/canary-islands-map.jpg)https:\/\/www.propertyguides.com\/spain\/buying\/buying-in-the-canary-islands\/","cf41436c":"#Codes from Augustin Pugliese https:\/\/www.kaggle.com\/agustinpugliese\/fish-weight-analysis-and-prediction","5b2e819c":"#The Canary Islands \n\nSpanish: Islas Canarias, also known informally as the Canaries, are a Spanish archipelago and the southernmost autonomous community of Spain located in the Atlantic Ocean, in a region known as Macaronesia, 100 kilometres (62 miles) west of Morocco at the closest point.\n\nThe Canary Islands are geographically located in the African Tectonic Plate, even though the archipielago is economically and politically European, as it is part of the European Union.https:\/\/en.wikipedia.org\/wiki\/Canary_Islands","30816557":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcS3RC5BM-GLl9QXx3Fun46cTh7O8ja7VoXAkw&usqp=CAU)irissmartcities.eu"}}