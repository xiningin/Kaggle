{"cell_type":{"a6bb0bbb":"code","a3bad4e0":"code","bd1ed7c1":"code","9aba6613":"code","6bb66742":"code","e66e5aac":"code","48d9abe0":"code","4d47e992":"code","4f46cfa4":"code","4dfc287f":"code","98c019d0":"code","3ef26c52":"code","c5717893":"code","5f2383cf":"code","555ec97d":"code","28a04a66":"code","7648378a":"code","6117c7c7":"code","e6227c30":"code","ca2cd2f0":"code","81bd8718":"code","88f32ee0":"code","28d6984f":"code","49667279":"code","32b9b655":"code","b6b077dd":"code","e4739961":"code","87895660":"code","b9685d5f":"code","d465e7ba":"code","a189c152":"code","aff68cd9":"code","4b1b8eb6":"code","bf00d416":"code","d521bbf0":"code","ce092c57":"code","06b6ede5":"code","7814b203":"markdown","978fbf2a":"markdown","730e55d1":"markdown","1ed06aff":"markdown","73704228":"markdown","10b0bf61":"markdown","cc6a263a":"markdown","4e02b041":"markdown","88fcb430":"markdown","13d8753f":"markdown","a230cc33":"markdown","50e83d75":"markdown","d0023eb8":"markdown","941e1980":"markdown","ee637694":"markdown","686baed4":"markdown","6df7c368":"markdown"},"source":{"a6bb0bbb":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import preprocessing","a3bad4e0":"from google.colab import drive\ndrive.mount('\/content\/drive')","bd1ed7c1":"trn_raw = pd.read_csv(\"\/content\/drive\/My Drive\/USP\/pmr-3508\/adult-pmr-3508\/train_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],engine='python',sep=r'\\s*,\\s*',\n        na_values=\"?\")","9aba6613":"trn_raw.head()\n","6bb66742":"trn_raw.shape","e66e5aac":"trn_raw.isna().any()","48d9abe0":"trn_raw.loc[trn_raw.isna().any(axis=1)]","4d47e992":"trn = trn_raw.dropna()\ntrn.shape","4f46cfa4":"tst_raw = pd.read_csv(\"\/content\/drive\/My Drive\/USP\/pmr-3508\/adult-pmr-3508\/test_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")\ntst_raw.shape","4dfc287f":"tst = tst_raw.dropna()\ntst.shape","98c019d0":"trn[['Sex','Target']].groupby(['Sex','Target']).size().plot.bar()","3ef26c52":"trn[['Target','Workclass']].groupby(['Target','Workclass']).size().plot.bar()","c5717893":"trn[['Target','Education']].groupby(['Target','Education']).size().plot.bar()","5f2383cf":"trn[['Target','Occupation']].groupby(['Target','Occupation']).size().plot.bar()","555ec97d":"trn_num = trn.apply(preprocessing.LabelEncoder().fit_transform)\ntst_num = tst.apply(preprocessing.LabelEncoder().fit_transform)\n\ntrnX = trn_num[[\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n                \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                \"Hours per week\", \"Country\"]]\ntrnY = trn_num.Target\n\n\ntstX = tst_num[[\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n                \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                \"Hours per week\", \"Country\"]]\ntstY = tst_num.Target\n","28a04a66":"\nknn = KNeighborsClassifier(n_neighbors=5)\nscores = cross_val_score(knn, trnX, trnY, cv=10)\nscores.mean()\n","7648378a":"knn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)\n\n","6117c7c7":"knn = KNeighborsClassifier(n_neighbors=10)\nscores = cross_val_score(knn, trnX, trnY, cv=10)\nscores.mean()","e6227c30":"knn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","ca2cd2f0":"knn = KNeighborsClassifier(n_neighbors=20)\nscores = cross_val_score(knn, trnX, trnY, cv=10)\nscores.mean()","81bd8718":"knn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","88f32ee0":"knn = KNeighborsClassifier(n_neighbors=30)\nscores = cross_val_score(knn, trnX, trnY, cv=10)\nscores.mean()","28d6984f":"knn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","49667279":"knn = KNeighborsClassifier(n_neighbors=25)\ntrnY = trn_num.Target\ntstY = tst_num.Target\n","32b9b655":"trnX = trn_num[[\"Occupation\"]]\ntstX = tst_num[[\"Occupation\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","b6b077dd":"trnX = trn_num[[\"Occupation\",\"Workclass\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","e4739961":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","87895660":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education\",\"Hours per week\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education\",\"Hours per week\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","b9685d5f":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education\",\"Hours per week\",\"Age\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education\",\"Hours per week\",\"Age\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","d465e7ba":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Hours per week\",\"Age\",\"Sex\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Hours per week\",\"Age\",\"Sex\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","a189c152":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Race\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Race\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","aff68cd9":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","4b1b8eb6":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Country\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Country\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","bf00d416":"trnX = trn_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\ntstX = tst_num[[\"Occupation\",\"Workclass\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","d521bbf0":"trnX = trn_num[[\"Occupation\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\ntstX = tst_num[[\"Occupation\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\naccuracy_score(tstY,tstYestimate)","ce092c57":"#Gerando Solu\u00e7\u00e3o - Usando o arquivo de teste no Kaggle por causa dos Ids","06b6ede5":"trn_raw = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\",\n                names=[\"Id\",\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n                       \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                      \"Hours per week\", \"Country\", \"Target\"])\ntst_raw = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\",\n                names=[\"Id\",\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n                       \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                      \"Hours per week\", \"Country\"])\ntst = tst_raw.dropna()\ntrn = trn_raw.dropna()\ntrn_num = trn.apply(preprocessing.LabelEncoder().fit_transform)\ntst_num = tst.apply(preprocessing.LabelEncoder().fit_transform)\ntrnX = trn_num[[\"Occupation\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\ntstX = tst_num[[\"Occupation\",\"Education-Num\",\"Age\",\"Sex\",\"Capital Loss\",\"Capital Gain\",\"Marital Status\",\"Relationship\"]]\ntrnY = trn_num.Target\n\nknn = KNeighborsClassifier(n_neighbors=25)\n\nknn.fit(trnX,trnY)\ntstYestimate = knn.predict(tstX)\n\nsolucao = pd.DataFrame(columns = [\"Id\",\"income\"])\nsolucao.Id = tst.Id\nsolucao.income = tstYestimate\nsolucao.to_csv(\"submission.csv\", index=False)\nsolucao.shape","7814b203":"k=10","978fbf2a":"# Breve An\u00e1lise dos Dados de Treino","730e55d1":"Estimando k - com valida\u00e7\u00e3o cruzada 10-fold - usando todos os atributos","1ed06aff":" k=20","73704228":"PMR3508-2021-64-AdultkNN\n\n#Implementa\u00e7\u00e3o de classificador kNN para base Adult\nArquivos adult.data e adult.test (incluindo a vari\u00e1vel resposta) obtidos na UCI repository.","10b0bf61":"Dados de Teste","cc6a263a":"Observa-se abaixo que as colunas Workclass, Occupation e Country cont\u00eam not-a-number, e em seguida listamos exemplo de linhas contendo NaN.","4e02b041":"Removendo linhas com NaN dos dados de teste, que passar\u00e1 de 16282 para 15060 observa\u00e7\u00f5es.","88fcb430":"k=5","13d8753f":"Usaremos k=20, pois acur\u00e1cia come\u00e7ou a piorar a partir de k=30. (Seria poss\u00edvel fazer em passos menores para melhorar ainda mais o k, mas para o exerc\u00edcio \u00e9 suficiente). ","a230cc33":"#Carregamento e prepara\u00e7\u00e3o dos dados\n\n\n*   dados originais trn_raw e tst_raw (treino e teste) ANTES dataprep\n*   dados trn e tst (treino e teste) AP\u00d3S dataprep\n*   removendo linhas com dados faltantes (valor '?' no arquivo do UCI)\n\n\n","50e83d75":"k=30","d0023eb8":"Logo, existem 2399 linhas com NaN, que ser\u00e3o removidas dos dados de treino, reduzindo de 32561 para 30162 as observa\u00e7\u00f5es.","941e1980":"Dados de treino","ee637694":"#Testando classificador kNN, k=25, com diferentes atributos","686baed4":"#Classificador kNN\n\n#Estimando k para kNN\n\n* Fazendo Label Encoding nos dados para atributos ficarem num\u00e9ricos.\n* Para estimar melhor k no kNN, usaremos todos os atributos dispon\u00edveis (X) com categorias j\u00e1 convertidas para n\u00fameros inteiros; e usaremos coluna (Target) como vari\u00e1vel resposta (Y)\n","6df7c368":"Forward selection\n\nPela an\u00e1lise pr\u00e9via dos dados, v\u00ea-se que Occupation, Workclass, Education parecem ser significativos, ent\u00e3o come\u00e7aremos por eles, e seguimos adiante."}}