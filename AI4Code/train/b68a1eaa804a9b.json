{"cell_type":{"c14318e3":"code","337ad2c8":"code","1ea330eb":"code","7ecf1b0d":"code","70f2e82b":"code","bd2370fb":"code","da0c99d4":"code","c99abb38":"code","4c17f78c":"code","d6aa37e8":"code","129c97e4":"code","5373ad78":"code","cb2527b1":"code","d4717d94":"code","7f443ae1":"code","b7352868":"code","fef47e56":"code","12ed96a7":"code","c08dac1b":"code","ba0c9ab6":"code","9a4bb1b4":"code","7eb76b82":"code","e64e1812":"code","78542777":"code","e33a62a3":"code","868e91f3":"code","d4a49cf2":"code","b09922da":"code","6c01b763":"code","0f7c03b8":"code","6dbdaeef":"code","4ff4d659":"code","b52cc2fa":"code","e75f3f28":"code","f86aa432":"code","88c53a54":"code","aeec6305":"code","ac71e80a":"code","1fbc68ce":"code","2ecbc39c":"code","1b51f0ba":"code","94b326a2":"code","024fe2da":"code","5fa2ad18":"code","c9636b23":"code","b25918e1":"code","0c491cac":"code","0f3ec1fb":"code","0881d187":"code","28601ab8":"code","164cec54":"code","511c8695":"code","c9269b18":"code","5dd5816a":"code","2072044d":"code","7a7c7cb1":"code","df586cfe":"code","059a84f2":"code","20057ef7":"code","a4a2eaec":"code","630d253f":"code","712bf4c6":"code","4f9844b8":"code","13f81ece":"markdown","9a8d3b67":"markdown","88cff0fa":"markdown","af80e518":"markdown","053bc271":"markdown","23f98612":"markdown","58bb5698":"markdown","6cafb60b":"markdown","7c428c49":"markdown","1ff25398":"markdown","12128ef2":"markdown","a873cc8b":"markdown","0381dfe1":"markdown","249ad5c8":"markdown","ebb036a1":"markdown","e565f3e0":"markdown","85b0090f":"markdown","e549fd56":"markdown","c98e9e78":"markdown","ac8ea353":"markdown","dc451475":"markdown","b68af034":"markdown","4f06a915":"markdown","4f55492d":"markdown","94c28bd9":"markdown","bce04307":"markdown","c10fa28f":"markdown","637d4f64":"markdown"},"source":{"c14318e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","337ad2c8":"os.chdir('\/kaggle\/input\/buildingdatagenomeproject2')\nos.listdir()","1ea330eb":"meta = pd.read_csv('metadata.csv')\nprint(meta.shape)\nmeta.head()","7ecf1b0d":"meta.info()","70f2e82b":"test = meta.copy()\ntest[['eui', 'site_eui', 'source_eui']].head(20)","bd2370fb":"test['site_eui'] = test['site_eui'].replace('-', np.nan).astype('float64')\ntest['source_eui'] = test['source_eui'].replace('-', np.nan).astype('float64')\ntest['eui'] = test['eui'].str.replace(',', '').replace('-', np.nan).astype('float64')\ntest['source_eui'].unique()","da0c99d4":"meta[['building_id', 'building_id_kaggle', 'site_id', 'site_id_kaggle']].tail(20)","c99abb38":"def binary(df, cols):\n    for col in cols:\n        df[col] = df[col].replace(np.nan, 0)\n        df[col] = df[col].replace(\"Yes\", 1)\n    return df","4c17f78c":"bin_cols = ['electricity', 'hotwater', 'chilledwater', 'water', 'steam', 'irrigation', 'solar', 'gas']\ntest = binary(meta, bin_cols)","d6aa37e8":"test[bin_cols].nunique()","129c97e4":"test['energystarscore'] = meta['energystarscore'].replace('-', np.nan).astype('float64')\ntest['energystarscore'].unique()","5373ad78":"meta['rating'].unique()","cb2527b1":"meta['leed_level'].unique()","d4717d94":"test['date_opened'] = test['date_opened'].astype('datetime64[ns]')","7f443ae1":"test.dtypes","b7352868":"test.info()","fef47e56":"import missingno as msno\nmsno.matrix(test);","12ed96a7":"test = test.drop(['date_opened', 'site_eui', 'source_eui'], axis=1)","c08dac1b":"test['heatingtype'].unique()","ba0c9ab6":"heating = pd.get_dummies(test['heatingtype'], drop_first=True, dtype='int64')\nheating.head()","9a4bb1b4":"heating = heating.rename(columns={'Electric': 'Electric Heating', \n                                  'Electicity': 'Electricity Heating',\n                                  'Gas': 'Gas Heating', \n                                  'Oil': 'Oil Heating', \n                                  'Steam': 'Steam Heating'})","7eb76b82":"heating.head()","e64e1812":"primaryspaceusage = test['primaryspaceusage'].unique()\nsub_primaryspaceusage = test['sub_primaryspaceusage'].unique()\nindustries = test['industry'].unique()\nsubindustries = test['subindustry'].unique()\nprint(primaryspaceusage)\nprint(industries)","78542777":"industries = pd.DataFrame(test['industry'])\nindustries = industries.rename(columns={'industry': 'usage'})\nsubindustries = pd.DataFrame(test['subindustry'])\nsubindustries = subindustries.rename(columns={'subindustry': 'subusage'})\nprimaryspaceusage = pd.DataFrame(test['primaryspaceusage'])\nprimaryspaceusage = primaryspaceusage.rename(columns={'primaryspaceusage': 'usage'})\nsub_primaryspaceusage = pd.DataFrame(test['sub_primaryspaceusage'])\nsub_primaryspaceusage = sub_primaryspaceusage.rename(columns={'sub_primaryspaceusage': 'subusage'})\nprint(primaryspaceusage.isnull().sum())\nprint(sub_primaryspaceusage.isnull().sum())\nprint(industries.isnull().sum())\nprint(subindustries.isnull().sum())","e33a62a3":"combine_sub = subindustries.combine_first(sub_primaryspaceusage)\ncombine_sub.isnull().sum()","868e91f3":"combine_sub.head(20)","d4a49cf2":"combine_sub['subusage'].unique()","b09922da":"combine_primary = industries.combine_first(primaryspaceusage)\ncombine_primary.isnull().sum()","6c01b763":"combine_primary.head(20)","0f7c03b8":"(combine_primary['usage']=='Other').sum()","6dbdaeef":"combine_primary['usage'].unique()","4ff4d659":"test = test.drop(['industry', 'subindustry', 'primaryspaceusage', 'sub_primaryspaceusage', 'heatingtype'], axis=1)\ntest = pd.concat([test, combine_primary, combine_sub, heating], axis=1)\ntest.head()","b52cc2fa":"msno.matrix(test)","e75f3f28":"test = test.drop(['numberoffloors', 'occupants', 'energystarscore'], axis=1)","f86aa432":"import math\nlatlong = test.copy()\nfor index, row in test.iterrows():\n    if not (math.isnan(row['lat'])):\n        latlong = latlong.drop(index)\nlatlong['building_id'].unique()","88c53a54":"msno.matrix(test)","aeec6305":"test.info()","ac71e80a":"kaggle = test[test['building_id_kaggle'].notna()]\nkaggle = kaggle[kaggle['site_id_kaggle'].notna()]\nmsno.matrix(kaggle)","1fbc68ce":"no_anonymous = kaggle[kaggle['lat'].notna()]\nmsno.matrix(no_anonymous)","2ecbc39c":"#save as csv\ntest.to_csv('\/kaggle\/working\/metadata_cleaned.csv', index=False)\nkaggle.to_csv('\/kaggle\/working\/metadata_kaggle_cleaned.csv', index=False)\nno_anonymous.to_csv('\/kaggle\/working\/metadata_kaggle_anonymous_cleaned.csv', index=False)","1b51f0ba":"irr = pd.read_csv('irrigation_cleaned.csv')\nirr.info()","94b326a2":"irr.isnull().sum()","024fe2da":"clean = irr.copy()","5fa2ad18":"clean.head(20)","c9636b23":"clean['timestamp'] = clean['timestamp'].astype('datetime64[ns]')","b25918e1":"msno.matrix(clean)","0c491cac":"clean.shape","0f3ec1fb":"times = clean['timestamp']\nclean['timestamp'].unique()","0881d187":"vals = clean['Panther_lodging_Paulette']\nclean['Panther_lodging_Paulette'].unique()","28601ab8":"clean.plot.scatter(x='timestamp', y='Panther_lodging_Paulette', figsize=(20,10))","164cec54":"import matplotlib.pyplot as plt\nplt.plot(times, vals, '-')\nplt.show()","511c8695":"columns = irr.columns.tolist()\nzeros = irr.copy()\nzeros = zeros.replace(0, np.nan)\ndrop = [];\nii = 1;\nwhile ii<len(columns):\n    if zeros[columns[ii]].isnull().sum() == 17544:\n        drop.append(columns[ii])\n    ii = ii + 1\n    \ndrop","c9269b18":"clean = clean.drop(drop, axis=1)\nmsno.matrix(clean)","5dd5816a":"clean = clean.interpolate(method=\"slinear\")\nclean.isnull().sum()","2072044d":"msno.matrix(clean)","7a7c7cb1":"clean = clean.drop('Panther_lodging_Cora', axis=1)\nclean.isnull().sum()","df586cfe":"clean_drop = clean.drop(['Panther_lodging_Otis', 'Panther_office_Daina', 'Panther_education_Karri', 'Panther_parking_Lorriane'], axis=1)\nmsno.matrix(clean_drop)","059a84f2":"clean = clean.fillna(method='ffill')\nclean.isnull().sum()","20057ef7":"msno.matrix(clean)","a4a2eaec":"clean = clean.fillna(method = 'bfill')\nclean.isnull().sum()","630d253f":"msno.matrix(clean)","712bf4c6":"clean.plot.scatter(x='timestamp', y='Panther_parking_Adela', figsize=(20,10))","4f9844b8":"clean.to_csv('\/kaggle\/working\/interpolated_propogated_irrigation.csv', index=False)\nclean.to_csv('\/kaggle\/working\/no_propogation_irrigation.csv', index=False)","13f81ece":"Removing any columns that only have null and\/or 0 data","9a8d3b67":"Drop the columns that have a very large proportion of null values and won't contribute much to further analysis\/prediction.","88cff0fa":"Convert timestamp to datetime type","af80e518":"# DATA CLEANING: METADATA AND IRRIGATION\n## Urban Data Genome Project\nThis notebook is for exploratory analysis and cleaning of the metadata and irrigation dataframes within the Urban Data Genome Project","053bc271":"Replacing '-' with NaN as there was a discrepancy in the recording of null values in these features.","23f98612":"Looking at an interpolated\/filled column to see if data distribution is similar to what is expected.","58bb5698":"### Notes\n- performed one-hot encoding on heatingtye and industry\n- dropped date_opened, site_eui (energy use intensity of site), and source_eui (total primary energy use intensity by area)\n\n### Questions\n- What is the missing latitude and longitude information? A: These locations reported their data as 'anonymous' sources\n- consider predicting various score metrics, using available data as the training and validation sets? A: yes!\n-  difference between primaryspaceusage and industry? A: These columns can be concatenated to fill null values","6cafb60b":"Convert the date_opened column to a datetime variable.","7c428c49":"### Missing\/Null Data Analysis","1ff25398":"# EDA: Meta","12128ef2":"slinear interpolation to fill in missing values in the middle of the dataframe.","a873cc8b":"One-hot encode the heating type to conver this variable into numeric columns for future use. Also rennamed the columns to be clearer.","0381dfe1":"Create cleaned dataframe by dropping columns that have significant missing data at the front\/back of the collection period.","249ad5c8":"Analyze why there is missing latitude and longitude: revealed that the four locations for which there is missing lat\/long data correspond to the sites that listed themselves as 'anonmyous' when reporting their data.","ebb036a1":"Use forward and back propogation to fill in remaining null values at the front\/back of the dataframe.","e565f3e0":"Creating a cleaned dataset with only the rows used in the kaggle competition.","85b0090f":"Exploratory analysis of the three different types of ratings in this dataset: energystarscore, rating, and leed. ","e549fd56":"## Read in the Data","c98e9e78":"Looking at the difference between the eui, site_eui, and source_eui by analyzing the unique values in each of these columns and comparing them to each other. Additionally, a new dataframe entitled 'test' was created to ensure the original dataframe was not altered through this exploration.","ac8ea353":" ### Data-Type Analysis\n #### Completed:\n- Look at difference between eui, source_eui, site_eui\n- Look at difference between building_id and site_id vs building_id_kaggle and site_id_kaggle\n- Convert water, irrigation, solar, gas, electricity, hotwater, and chilledwater to binary classifications\n- Label-encode energystarscore\n- Label-encode rating\n- Label-encode leed level\n- Convert date_opened to datetime\n\n#### Questions:\n- Why are some of the kaggle id's Nan? A: These sites were not used in the kaggle competition\n- What to do about building_id and site_id vs. their respective kaggle versions? A: Drop kaggle id's\n","dc451475":"### DataTypes\n- converted timestamp from object to datetime\n\n### Missing Data\n- three types of imputation used:\n    - slinear (proven to work well with time-series, as this dataset is; does not fill data on the ends of the df)\n    - ffill (used to fill in holes at the back of the df, propogating forward)\n    - bbfill(used to fill in holes at the front of the df, propogating backward)\n- dropped one column because over half of its values were missing: Panther_lodging_Cora\n- dropped all columns that had only nan and 0 (13 columns)\n- dropped columns with significant missing data on either end (front or back) of the dataframe","b68af034":"Create a cleaned dataset that contains only the rows used in the kaggle competition that were not anonymous and therefore have lat\/long data.","4f06a915":"# EDA: Irrigation","4f55492d":"Analyze the differences between primary space usage and industry (and their respective sub-cateogires). Determined that these columns can be merged to fill in null values as they are very similar and oftentimes repetative in the information they contain.","94c28bd9":"Drop further columns that cannot be filled in using imputation or interpolation and will not be useful in future analysis.","bce04307":"Analyze distribution of irrigation measurements over time by picking a sample site and plotting its data as a time series.","c10fa28f":"Turning categorical variables into numeric through binary classification of the prescence and\/or absence of the following utilities: electricity, hot water, chilled water, water, steam, irrigation, solar, and gas. These utilities correspond to the other datasets found in this project.","637d4f64":"Analyzing the difference between the kaggle ids vs. the unique name identifiers. "}}