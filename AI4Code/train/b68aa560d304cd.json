{"cell_type":{"74417edd":"code","7381d753":"code","3b06bb9b":"code","74c926f2":"code","91b31350":"code","739018ff":"code","aaa093a9":"code","292716d5":"code","60f356ce":"code","a5b6d67e":"code","896e921d":"code","c80120df":"code","a426857a":"code","0a558973":"code","709f5515":"code","8fe7acb7":"code","fb3ad951":"code","6d4bfb84":"code","915b207a":"code","1514f3f9":"code","39b5b957":"code","d1e1c123":"code","00cf675b":"code","0f5b9c35":"code","67b5d89c":"code","10b5ed3b":"code","b97ce7ab":"code","dcc89c61":"code","6386d696":"code","fb76f642":"code","18370d3b":"code","e86f17f5":"code","7a39e81d":"code","b2f6547d":"code","c8402bc1":"code","ed9718dc":"code","2051d039":"code","6a795b17":"code","cebc3834":"code","9392dbc2":"code","7cb15861":"code","e3652f7f":"code","43312e81":"code","d0c046b7":"code","06b6d4f7":"code","4d693fa3":"code","705f25e2":"code","332a0062":"markdown","4e09096c":"markdown","1d3d7e42":"markdown","0f3cd5c6":"markdown","60fc89bf":"markdown","c6edb50a":"markdown","25fcabf4":"markdown","fb8b7f4e":"markdown","0dc05f49":"markdown","d34b8bce":"markdown","23430378":"markdown","da54d15f":"markdown","f68afdba":"markdown","28bc813a":"markdown","9c36b556":"markdown","06ddb099":"markdown","7e593a1d":"markdown","ff662715":"markdown"},"source":{"74417edd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7381d753":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom wordcloud import WordCloud, ImageColorGenerator","3b06bb9b":"df = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')","74c926f2":"df.head()","91b31350":"df.info()","739018ff":"df.isnull().sum()","aaa093a9":"df.drop(['Rotten Tomatoes', 'Unnamed: 0' ,'ID'], axis=1, inplace=True)","292716d5":"df = df.dropna(how='any')","60f356ce":"df.describe()","a5b6d67e":"text = \",\".join(review for review in df.Title)\nwordcloud = WordCloud(max_words=200,collocations=False,background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","896e921d":"text = \",\".join(review for review in df.Directors)\nwordcloud = WordCloud(max_words=200,collocations=False,background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","c80120df":"df.head()","a426857a":"netflix = df.loc[df['Netflix'] == 1]\nprimevideo = df.loc[df['Prime Video'] == 1]\nhulu = df.loc[df['Hulu'] == 1]\ndisney = df.loc[df['Disney+'] == 1]","0a558973":"df.columns","709f5515":"netflix.drop(['Hulu', 'Prime Video',\n       'Disney+'], axis=1, inplace=True)\nhulu.drop(['Netflix', 'Prime Video',\n       'Disney+'], axis=1, inplace=True)\ndisney.drop(['Netflix', 'Prime Video',\n       'Hulu'], axis=1, inplace=True)\nprimevideo.drop(['Netflix', 'Hulu',\n       'Disney+'], axis=1, inplace=True)","8fe7acb7":"netflix.head()","fb3ad951":"total_netflix = len(netflix.index)\ntotal_hulu = len(hulu.index)\ntotal_disney = len(disney.index)\ntotal_primevideo = len(primevideo.index)\nprint ('Netflix has: ', total_netflix, ' movies')","6d4bfb84":"plt.figure(figsize=(7,7))\nlabels = 'Netflix' , 'Hulu', 'Prime Video', 'Disney+'\nsizes = [total_netflix,total_hulu,total_primevideo,total_disney]\nexplode = (0.1, 0.1, 0.1, 0.1 )\n\nfig1 , ax1 = plt.subplots()\n\nax1.pie(sizes,\n        explode = explode,\n        labels = labels,\n        autopct = '%1.1f%%',\n        shadow = True,\n        startangle = 100)\n\nax1.axis ('equal')\nplt.show()","915b207a":"df['Runtime'].head()","1514f3f9":"top15_runtime_netflix = netflix.sort_values(by='Runtime', ascending=False).head(20)\nplt.figure(figsize=(10,8))\nsns.barplot(x='Runtime', y='Title', data=top15_runtime_netflix, hue='Country', dodge = False)\nplt.legend(loc = 'lower right')\nplt.xlabel('Total Minutes')\nplt.ylabel('Movie')\nplt.title('Top 20 movies by Run Time on Netflix')\n\nplt.show()","39b5b957":"top15_runtime_prime = primevideo.sort_values(by='Runtime', ascending=False).head(20)\nplt.figure(figsize=(10,10))\nsns.barplot(x='Runtime', y='Title', data=top15_runtime_prime, hue='Country', dodge = False)\nplt.legend(loc = 'lower right')\nplt.xlabel('Total Minutes')\nplt.ylabel('Movie')\nplt.title('Top 20 movies by Run Time on Amazon Prime Videp')\n\nplt.show()","d1e1c123":"top15_runtime_disney = disney.sort_values(by='Runtime', ascending=False).head(20)\nplt.figure(figsize=(10,10))\nsns.barplot(x='Runtime', y='Title', data=top15_runtime_disney, hue='Country', dodge = False)\nplt.legend(loc = 'lower right')\nplt.xlabel('Total Minutes')\nplt.ylabel('Movie')\nplt.title('Top 20 movies by Run Time on Disney+')\n\nplt.show()","00cf675b":"top15_runtime_hulu = hulu.sort_values(by='Runtime', ascending=False).head(20)\nplt.figure(figsize=(10,10))\nsns.barplot(x='Runtime', y='Title', data=top15_runtime_hulu, hue='Country', dodge = False)\nplt.legend(loc = 'lower right')\nplt.xlabel('Total Minutes')\nplt.ylabel('Movie')\nplt.title('Top 20 movies by Run Time on Hulu')\n\nplt.show()","0f5b9c35":"top_rated = [(netflix['IMDb'] > 8).sum(), (primevideo['IMDb'] > 8).sum(), (hulu['IMDb'] > 8).sum(), (disney['IMDb'] > 8).sum()]\nplatforms = ['Netflix', 'Amazon prime', 'HULU', 'Disney']\ndata_top_rated = pd.DataFrame({'platforms' : platforms,\n                               'Count' : top_rated})","67b5d89c":"sns.barplot(x= 'platforms', y = 'Count', data=data_top_rated)","10b5ed3b":"top_rated = [(netflix['IMDb'] > 8).sum()\/(len(netflix))*1000, \n            (primevideo['IMDb'] > 8).sum()\/len(primevideo)*1000, \n            (hulu['IMDb'] > 8).sum()\/len(hulu)*1000,\n            (disney['IMDb'] > 8).sum()\/len(disney)*1000]\nplatforms = ['Netflix', 'Amazon prime', 'HULU', 'Disney']\ndata_top_rated_per = pd.DataFrame({'platforms' : platforms,\n                               'Count' : top_rated})","b97ce7ab":"sns.barplot(x= 'platforms', y = 'Count', data=data_top_rated_per)","dcc89c61":"top_rated_netflix = netflix.sort_values('IMDb',ascending = False).head(15)","6386d696":"plt.figure(figsize=(10,8))\nsns.barplot(x='Title', y='IMDb', data=top_rated_netflix)\nplt.xticks(rotation='vertical')\nplt.title('Netflix')\nplt.xlabel('Movie Titles')\nplt.show()","fb76f642":"top_rated_disney = disney.sort_values('IMDb',ascending = False).head(15)\nplt.figure(figsize=(10,8))\nsns.barplot(x='Title', y='IMDb', data=top_rated_disney)\nplt.xticks(rotation='vertical')\nplt.title('disney+')\nplt.xlabel('Movie Title')\nplt.show()","18370d3b":"top_rated_hulu = hulu.sort_values('IMDb',ascending = False).head(15)\nplt.figure(figsize=(10,8))\nsns.barplot(x='Title', y='IMDb', data=top_rated_hulu)\nplt.xticks(rotation='vertical')\nplt.title('Hulu')\nplt.xlabel('Movie Title')\nplt.show()","e86f17f5":"top_rated_prime = primevideo.sort_values('IMDb',ascending = False).head(15)\nplt.figure(figsize=(10,8))\nsns.barplot(x='Title', y='IMDb', data=top_rated_prime)\nplt.xticks(rotation='vertical')\nplt.title('Amazon Prime')\nplt.xlabel('Movie Title')\nplt.show()","7a39e81d":"top_rated = df.sort_values('IMDb',ascending = False).head(10)\nplt.figure(figsize=(10,8))\nsns.barplot(x='Title', y='IMDb', data=top_rated)\nplt.xticks(rotation='vertical')\nplt.title('Top rated movies of all times in dataset')\nplt.xlabel('Movie Title')\nplt.show()","b2f6547d":"count_by_lang = df.groupby('Language')['Title'].count().reset_index().sort_values('Title',ascending = False).head(10).rename(columns = {'Title':'Movie Count'})","c8402bc1":"plt.figure(figsize=(10,12))\nsns.barplot(x='Language', y = 'Movie Count', data=count_by_lang)\nplt.title('Count by Languages')\nplt.xticks(rotation='vertical')\nplt.show()","ed9718dc":"yearly_count = df.groupby('Year')['Title'].count().reset_index().rename(columns = {'Title':'Movie Count'})","2051d039":"plt.figure(figsize=(20,10))\nsns.barplot(x='Year', y = 'Movie Count', data=yearly_count)\nplt.xticks(rotation='vertical')\nplt.show()","6a795b17":"country_count = df.groupby('Country')['Title'].count().reset_index().sort_values('Title',ascending = False).head(10).rename(columns = {'Title':'Movie Count'})\ncountry_count","cebc3834":"plt.figure(figsize=(10,12))\nsns.barplot(x='Country', y = 'Movie Count', data=country_count)\nplt.xticks(rotation='vertical')\nplt.show()","9392dbc2":"directors_count = df.groupby('Directors')['Title'].count().reset_index().rename(columns = {'Title':'Movie Count'}).sort_values('Movie Count',ascending = False).head(10)\ndirectors_count","7cb15861":"plt.figure(figsize=(10,12))\nsns.barplot(x='Directors', y = 'Movie Count', data=directors_count)\nplt.xticks(rotation='vertical')\nplt.show()","e3652f7f":"imdb = df[df['IMDb'] > 8]\ndirectors_above_8 = imdb.groupby('Directors')['Title'].count().reset_index().rename(columns = {'Title':'Movie Count'}).sort_values('Movie Count',ascending = False).head(15)","43312e81":"plt.figure(figsize=(10,12))\nsns.barplot(x='Directors', y = 'Movie Count', data=directors_above_8)\nplt.xticks(rotation='vertical')\nplt.title('Directors with the most 8+ rated movies')\nplt.show()","d0c046b7":"countries_above_8 = imdb.groupby('Country')['Title'].count().reset_index().rename(columns = {'Title':'Movie Count'}).sort_values('Movie Count',ascending = False).head(10)\ncountries_above_8","06b6d4f7":"plt.figure(figsize=(10,12))\nsns.barplot(x='Country', y = 'Movie Count', data=countries_above_8)\nplt.xticks(rotation='vertical')\nplt.title('Countries with the most 8+ rated movies')\nplt.show()","4d693fa3":"top_genres = df.groupby('Genres')['Title'].count().reset_index().rename(columns = {'Title':'Movie Count'}).sort_values('Movie Count',ascending = False).head(10)\ntop_genres","705f25e2":"plt.figure(figsize=(10,12))\nsns.barplot(x='Genres', y = 'Movie Count', data=top_genres)\nplt.xticks(rotation='vertical')\nplt.show()","332a0062":"**Directors with most movies**","4e09096c":"**EDA of different languages**","1d3d7e42":"Segregating movies among the different platforms","0f3cd5c6":"EDA on different 'RUNTIME'","60fc89bf":"**Top Rated Movies of each platform**","c6edb50a":"Parts of the code snippets have been borrowed from:\n1. https:\/\/www.kaggle.com\/listonlt\/ott-platform-eda-with-plotly-seaborn\n2. https:\/\/www.kaggle.com\/nishadjoshi98\/visualization-analysis-and-recommendation-system","25fcabf4":"Now we check the proportion of movies having Rating > 8 out of all movies ","fb8b7f4e":"**Pie Chart**","0dc05f49":"Possible Conclusions:\n1. PrimeVideo has the highest number of movies as well highest number of top-rated movies\n2. Netflix and Disney+ have a higher proportion of Top Rated movies","d34b8bce":"**Count by Countries**","23430378":"**EDA on Ratings of Movies**","da54d15f":"**WordClouds**","f68afdba":"**Directors with most top-rated movies**","28bc813a":"**Count by Year**","9c36b556":"I have tried to add as many useful and intuitive plots as possible.\nThanks to \n1. https:\/\/www.kaggle.com\/listonlt\/ott-platform-eda-with-plotly-seaborn\n2. https:\/\/www.kaggle.com\/nishadjoshi98\/visualization-analysis-and-recommendation-system\n\nfor the notebooks.","06ddb099":"Top Genres","7e593a1d":"1. The average rating is 5.9\n2. The average runtime is 98 mins, the longest being 260mins\n3. The oldest movie in the dataset is from 1902","ff662715":"This is my first hand at an extensive EDA strategy , Please do upvote if it was of any help.\nThanks.\n"}}