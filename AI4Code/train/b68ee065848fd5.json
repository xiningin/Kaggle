{"cell_type":{"669644af":"code","3de680ad":"code","46a2610e":"code","05f058a1":"code","398afa82":"code","0d54ecc1":"code","6cc54ad2":"code","f06328ab":"markdown","e3c7625c":"markdown","962309d7":"markdown","52733812":"markdown","43ce9e5b":"markdown","a475ea5a":"markdown"},"source":{"669644af":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import RandomForestClassifier\nfrom fastai.imports import *\nfrom fastai.structured import *","3de680ad":"train_csv = pd.read_csv('titanic\/train.csv')\ntrain_csv = train_csv.drop(columns = ['PassengerId', 'Name', 'Ticket', 'Fare'])\ntrain_csv.head()\ntrain_csv.describe()","46a2610e":"train_csv['Cabin'][~train_csv['Cabin'].isnull()] = 1  # not nan\ntrain_csv['Cabin'][train_csv['Cabin'].isnull()] = 0   \ntrain_csv['Age'] = train_csv['Age'].fillna(train_csv['Age'].mean())\ntrain_cats(train_csv)\ntrain_csv.Sex = train_csv.Sex.cat.codes\ntrain_csv.Embarked = train_csv.Embarked.cat.codes","05f058a1":"model = RandomForestClassifier(n_jobs = -1, max_depth = 5)\nparam_df, target, na_cols = proc_df(train_csv, 'Survived')\nmodel.fit(param_df, target)\nmodel.score(param_df, target)","398afa82":"test_df = pd.read_csv('titanic\/test.csv')\npassenger_list = test_df.PassengerId.tolist()\ntest_df = test_df.drop(columns = ['PassengerId', 'Name', 'Ticket', 'Fare'])\ntest_df.head()","0d54ecc1":"test_df['Cabin'][~test_df['Cabin'].isnull()] = 1  # not nan\ntest_df['Cabin'][test_df['Cabin'].isnull()] = 0   \ntest_df['Age'] = test_df['Age'].fillna(test_df['Age'].mean())\ntrain_cats(test_df)\ntest_df.Sex = test_df.Sex.cat.codes\ntest_df.Embarked = test_df.Embarked.cat.codes\ntest_df.head()","6cc54ad2":"survived_pred = model.predict(test_df).tolist()\nfinal = {'PassengerId': passenger_list, 'Survived': survived_pred}\nprint(\"Length passengers: \" + str(len(passenger_list)) + \"\\nLength survived predictions: \" + str(len(survived_pred)))\nsubmission = pd.DataFrame(final)\nsubmission.to_csv('titanic\/submission.csv', index = False)","f06328ab":"## Test Data Processing \n##### Similar preprocessing on Test Data like Training Data ","e3c7625c":"## Specific column processing\n##### Converted the cabin variable to 1 if there was a cabin assigned and 0 for NaN values\n##### Filled the age variable with the mean where age was not present (714 rows have age defined, rest have none)\n##### Replaced the Sex and Embarked into their categorical codes","962309d7":"## Data Libraries \n##### Pandas Numpy for data loading and processing\n##### FastAI library for Data preprocessing","52733812":"## Final Data Saving\n##### Setting data as per required format\n##### Pre-check to confirm length of passengers and predictions","43ce9e5b":"## Modelling the final data \n##### 5 for max_depth was chosen to avoid overfitting\n##### 85 percent accuracy is not bad since the test data will not be similar to the training data, overfit will kill predictions","a475ea5a":"## Data Preprocessing\n##### I removed the unnecessary columns which had least significance in the final prediction"}}