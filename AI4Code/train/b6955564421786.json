{"cell_type":{"5db8e3f6":"code","990322ac":"code","3e5df0ab":"code","88100d3a":"code","62c5f27b":"code","13af9676":"code","e244213f":"code","15975096":"code","9f24ff1c":"code","f822c429":"code","d0cc6b2b":"code","d64054bd":"code","8c81d4ee":"code","b132ba75":"code","d4ff8179":"code","f5c03810":"markdown","37314c6d":"markdown","58a16875":"markdown","5ff7e890":"markdown","a506b429":"markdown","603535e6":"markdown","86ba5e6c":"markdown","660f9e21":"markdown","b690f31e":"markdown","a2b7e547":"markdown","bb744f25":"markdown","a84f579f":"markdown","a3ba31c2":"markdown","d1568093":"markdown","541f35de":"markdown","3895baf5":"markdown","d5acb536":"markdown","bd88336c":"markdown","a7426325":"markdown","9c02f870":"markdown","c734f056":"markdown","91a52589":"markdown","d1cc0b6d":"markdown"},"source":{"5db8e3f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","990322ac":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import shapiro, levene,ttest_ind\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 10)\npd.set_option('display.float_format', lambda x: '%.5f' % x)","3e5df0ab":"def check_df(dataframe, head=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(head))\n\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ndef outlier_thresholds(dataframe, col_name, q1=0.25, q3=0.75):\n    quartile1 = dataframe[col_name].quantile(q1)\n    quartile3 = dataframe[col_name].quantile(q3)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\ndef check_outlier(dataframe, col_name):\n    low_limit, up_limit = outlier_thresholds(dataframe, col_name)\n    if dataframe[(dataframe[col_name] > up_limit) | (dataframe[col_name] < low_limit)].any(axis=None):\n        return True\n    else:\n        return False\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit","88100d3a":"!pip install openpyxl\n# Max binding\ndf_control_group = pd.read_excel(\"\/kaggle\/input\/hipotez-testing\/ab_testing.xlsx\", sheet_name=\"Control Group\")\n# Average binding\ndf_test_group = pd.read_excel(\"\/kaggle\/input\/hipotez-testing\/ab_testing.xlsx\", sheet_name=\"Test Group\")","62c5f27b":"check_df(df_control_group)","13af9676":"check_df(df_test_group)","e244213f":"A = pd.DataFrame(df_control_group[\"Purchase\"])\ncheck_outlier(A,\"Purchase\")","15975096":"sns.boxplot(x=A[\"Purchase\"])\nplt.show()","9f24ff1c":"B = pd.DataFrame(df_test_group[\"Purchase\"])\ncheck_outlier(B,\"Purchase\")","f822c429":"sns.boxplot(x=B[\"Purchase\"])\nplt.show()","d0cc6b2b":"print(\" Mean of purchase of control group: %.3f\" %A.mean(), \"\\n\",\n      \"Mean of purchase of test group: %.3f\" %B.mean())","d64054bd":"test_statistic , pvalue = shapiro(A)\nprint('Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue))","8c81d4ee":"test_statistic_b , pvalue = shapiro(B)\nprint('Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue))","b132ba75":"test_statistic, pvalue = levene(A[\"Purchase\"],B[\"Purchase\"])\nprint('Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue))","d4ff8179":"test_stat, pvalue = ttest_ind(A[\"Purchase\"], B[\"Purchase\"], equal_var=True)\nprint('tvalue = %.4f, pvalue = %.4f' % (test_stat, pvalue))","f5c03810":"When we check whether there is an outlier in the Purchase variable in the Test group with the check outlier function, we observe that there is no outlier. Let's visualize the distribution with a box plot.","37314c6d":"**p-value = 0.1541**<br>\nSince the p value is not less than 0.05, the h0 hypothesis cannot be rejected.\nThat is, the assumption of normality is provided for the control group.","58a16875":"#### Shapiro-Wilks Test  for Control Group","5ff7e890":"\n##### 1. Normality Assumption\n\n**H0:** There is no statistically significant difference between sample distribution\n        and theoretical normal distribution<br><br>\n**H1:** There is statistically significant difference between sample distribution and \n        theoretical normal distribution <br> <br>\nThe test rejects the hypothesis of normality when the p-value is less than or equal to 0.05.\n<bR> We do not want to reject the null hypothesis in the tests that might be considered for assumptions. \n\n**p-value < 0.05** (H0 rejected)<br>\n**p-value > 0.05** (H0 not rejected)","a506b429":"There is a mathematical difference when looking at the purchasing rates for the two groups.\n Group B, the average binding strategy, seems to be more successful. \n But we do not know whether this difference is statistically significant. \n To understand this, we must apply hypothesis testing.","603535e6":"There are no missing observations or outlier that would prevent us from analyzing the Purchase variable, which is the variable we are interested in. Everything is going well .:)","86ba5e6c":"##### 1. Variance Assumption\n\n**H0:** the compared groups have equal variance.<br>\n**H1:** the compared groups do not have equal variance.\n<br> We do not want to reject the null hypothesis in the tests that might be considered for assumptions. \n\n**p-value < 0.05** (H0 rejected)<br>\n**p-value > 0.05** (H0 not rejected)","660f9e21":"### Assumption Check","b690f31e":"#### Let's define the auxiliary functions that we will use in the study.","a2b7e547":"#### Lets analysis Control group.\n\n","bb744f25":"**p-value=0.1083** <br>\nSince the p value is not less than 0.05, the h0 hypothesis cannot be rejected.\nThat is, the assumption of variance is provided.","a84f579f":"When we check whether there is an outlier in the Purchase variable in the Control group with the check outlier function, we observe that there is no outlier. Let's visualize the distribution with a box plot.","a3ba31c2":"# AB Testing\n\n![abtesting.png](attachment:5d96b82c-9566-425b-b29f-a560dcb48447.png)\n\nA\/B testing is basically a statistical test in which two or more variants of an approach are randomly shown to users and used to determine which variation performs better for a given conversion goal. There may be a mathematical difference between the variants, but this mathematical difference may have occurred by chance. To test this, the ab test is applied. It allows us to test whether this difference occurs by chance at a given confidence interval.\n\n## Business Problem : <br>\nCompany X has recently introduced a new type of bidding, average bidding, as an alternative to the current type of bidding called maximum bidding.\nOne of our clients, bombabomba.com, decided to test this new feature and wants to do an A\/B test to see if average bidding converts more than maximum bidding.\n\n## Dataset Story:\n\nIn this dataset, which includes the website information of bombabomba.com, there is information such as the number of advertisements that users see and click, as well as earnings information from here.<br>\n\nThere are two separate data sets, the control and test groups.<br>\n\nThe max binding strategy was presented to the control group, and the average binding strategy was presented to the test group.\n\n<br>\n\n## Variables\n<br>\n<table>\n  <tr >\n    <th>Variable<\/th>\n    <th>Description<\/th> \n  <\/tr>\n    <tr>\n    <td>Impression<\/td>\n    <td>Ad views count<\/td> \n  <\/tr>\n  \n  <tr>\n    <td>Click<\/td>\n    <td>The number of clicks on the displayed ad<\/td> \n  <\/tr>\n  <tr>\n    <td>Purchase<\/td>\n    <td>The number of products purchased after the ads clicked<\/td> \n  <\/tr>\n    <td>Earning<\/td>\n    <td>Earnings after purchased products<\/td> \n  <\/tr>\n<\/table>\n\n\n\n","d1568093":"**p-value = 0.5891** <br>\nSince the p value is not less than 0.05, the h0 hypothesis cannot be rejected.\nThat is, the assumption of normality is provided for the control group.","541f35de":"### Result of AB Testing\n**p-value=0.3493**\nSince the p value is not less than 0.05, the h0 hypothesis cannot be rejected.<br>\nSo, There is no statistically significant difference between the Control( \u201cmaximum bidding\u201d) campaign and Test group(average bidding) campaign.","3895baf5":"The success criterion for Bombomba.com is the Number of Purchases.\nTherefore, we will examine the Purchase variable.There are no missing values in the two data. Let's check out the outlier.","d5acb536":"#### Let's start A\/B testing.\n\nIt is used when it is desired to make a comparison between the mean of two groups.\n##### 1. Assumption Check\n1. Normality Assumption<br>\n2. Variance Homogeneity\n\n##### 2. Implementation of the Hypothesis\n1. Independent two-sample t-test (parametric test) if assumptions are met.\n2. Mannwhitneyu test if assumptions are not met (non-parametric test).\n\n##### If the normality is not provided, the mannwhitneyu test should be applied directly.\n##### If the normality assumption is provided but the variance homogeneity is not provided, the equal_var parameter can be set to False for the two-sample t-test.","bd88336c":"#### Let's read the dataset.\nFirst install openpyxl to read excel.","a7426325":"### Hypotheses\n\nThe null hypothesis (H0) and alternative hypothesis (H1).\n\n**H0: M1 = M2** (There is no statistical difference between the average purchase earned \n                by the maximum binding strategy and the average purchase achieved by \n                the average binding strategy.)<br><br>\n**H1: M1 != M2** (There is a statistical difference between the average purchase\n                earned by the maximum binding strategy and the average purchases\n                 earned by the average binding strategy.)\"","9c02f870":"#### Levene Test","c734f056":"#### Shapiro-Wilks Test  for Control Group","91a52589":"##### Assumptions provided. We can apply the independent two-sample t-test (parametric test).","d1cc0b6d":"#### Lets analyse Test Group."}}