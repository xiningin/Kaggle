{"cell_type":{"095fca31":"code","fef32130":"code","8fc84669":"code","ce82afc3":"code","a142a103":"code","61a27f87":"code","02434950":"code","0345715a":"code","bfd0c24a":"code","754f9d24":"code","196c1cf0":"code","ed6de51a":"code","90d1cb2b":"code","2dbd2b42":"code","c06c6798":"code","37b63498":"code","f8fce1bf":"code","f2ea0b83":"code","84611ae3":"code","cb204ce0":"markdown","77161753":"markdown"},"source":{"095fca31":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n# from sklearn.metrics import confusion_matrix\n\nimport tensorflow as tf\n\nfrom keras.utils.np_utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import adam\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau\nimport keras.backend as K\nconfig = tf.ConfigProto( device_count = {'GPU': 1 , 'CPU': 16} ) \nsess = tf.Session(config=config) \nK.set_session(sess)\nsns.set(style='white', context='notebook', palette='deep')\n%matplotlib inline","fef32130":"data= pd.read_csv(\"..\/input\/train.csv\")\ntest_data= pd.read_csv(\"..\/input\/test.csv\")","8fc84669":"print('shape of the data is:',data.shape)","ce82afc3":"#checking if the data is skewed\nplt.figure(figsize=(8,4))\nsns.countplot(data.label)\n# (data.label.value_counts()\/len(data)).sort_index().plot.bar()\n# sns.distplot(data.label,bins=10,kde=False)","a142a103":"# checking for null values\ndata.label.isnull().value_counts()","61a27f87":"data.isnull().sum().sum()","02434950":"#extracting labels\nY=data.label\ndata.drop(labels=['label'],axis=1,inplace=True)\n#Normalising values to remove effects of illuminationa and faster convergence\ndata\/=255.0;","0345715a":"train_image_array=np.array(data).reshape(-1,28,28,1)\nprint(\"shape of new train array:\",train_image_array.shape )","bfd0c24a":"#checking if everything is correct\nprint(Y[20000])\nplt.figure(1)\nplt.gray()\nplt.imshow(train_image_array[20000,:,:,0],cmap=plt.cm.binary)\nplt.show()","754f9d24":"#preparing output for CNN\ntrain_label = to_categorical(Y)\ntrain_label.shape","196c1cf0":"model= Sequential()\nmodel.add(Conv2D(filters = 32, \n                 kernel_size = (5,5),\n                 padding = 'Same',\n                 activation ='relu',\n                 input_shape = (28,28,1)))\nmodel.add(MaxPool2D( (2,2) ) )\n\nmodel.add(Conv2D(filters = 64, \n                 kernel_size = (3,3),\n                 padding = 'Same',\n                 activation ='sigmoid') )\n# model.add(Dropout(0.2))\nmodel.add(Conv2D(filters = 128, \n                 kernel_size = (3,3),\n                 padding = 'Same',\n                 activation ='relu') )\n# model.add(Dropout(0.2))\nmodel.add(Conv2D(filters = 128, \n                 kernel_size = (3,3),\n                 strides=(2,2),\n                 padding = 'Same', \n                 activation ='relu'))\nmodel.add(Conv2D(filters = 128, \n                 kernel_size = (3,3),\n                 padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\n# model.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = \"relu\"))\n# model.add(Dropout(0.2))\nmodel.add(Dense(10, activation = \"softmax\"))","ed6de51a":"# X_train,X_test,y_train,y_test = train_test_split(train_image_array,train_label,test_size=0.1,random_state=42)","90d1cb2b":"model.compile(loss=\"categorical_crossentropy\",\n              optimizer=\"adam\",\n              metrics=['accuracy'])\nepochs=30\nbatch_size=100\nmodel.fit(train_image_array, train_label,\n          batch_size=batch_size,\n          epochs=epochs)\n# ,\n#           validation_data=(X_test,y_test))","2dbd2b42":"test_data=pd.read_csv('..\/input\/test.csv')","c06c6798":"test_data\/=255.0\ntest_image_array=np.array(test_data).reshape(-1,28,28,1)","37b63498":"test_image_array.shape","f8fce1bf":"results = model.predict(test_image_array)","f2ea0b83":"pred = []\nnumTest = results.shape[0]\nfor i in range(numTest):\n    pred.append(np.argmax(results[i])) \npredictions = np.array(pred)  ","84611ae3":"sample_submission = pd.read_csv('..\/input\/sample_submission.csv')\n#print(sample_submission.shape)\nresult=pd.DataFrame({'ImageId':sample_submission.ImageId, 'Label':predictions})\nresult.to_csv(\"submission.csv\",index=False)\nprint(result)","cb204ce0":"So, all labels are properly labeled\n\nNow checking for remaining columns","77161753":"# CNN Model"}}