{"cell_type":{"2ea617ab":"code","23d40fa7":"code","73aef534":"code","ef479402":"code","e0e63a82":"code","06e8ef37":"code","21e85ff7":"code","91cfcede":"code","11b552e1":"code","f8342ad8":"code","ddc48ce1":"code","d0706a0b":"code","c1c99536":"code","d8dc6bb0":"code","0f2dbfec":"code","2133f386":"code","99f096d4":"markdown","d9349332":"markdown","3c214d4e":"markdown","849d48c1":"markdown","e8fec2c3":"markdown","0d932957":"markdown"},"source":{"2ea617ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","23d40fa7":"data = pd.read_csv('..\/input\/tmdb_5000_movies.csv')","73aef534":"data.info()","ef479402":" data.head(15)","e0e63a82":"data[['budget','vote_average','original_title']].max()","06e8ef37":"data[['budget','vote_average','original_title']].head()","21e85ff7":"data[['budget','vote_average','original_title']].tail()","91cfcede":"#simple filtering\nfirst_filter = data.budget > 200000000\nsecond_filter = data.vote_average > 6.5\ndata[first_filter & second_filter]","11b552e1":"#filtering based on other values\ndata.vote_average[data.budget> 200000000]","f8342ad8":"# adding new column\n# data['....'] = ... + .... (columns)  or data['....'] = \n#\n","ddc48ce1":"data.budget.mean()","d0706a0b":"data.vote_average.mean()","c1c99536":" data.describe()","d8dc6bb0":"plt.hist(data.budget, bins =30)\nplt.xlabel('Budget')\nplt.ylabel('Frequency')\nplt.show()\nplt.hist(data.vote_average, bins =30)\nplt.xlabel('Vote Average')\nplt.ylabel('Frequency')\nplt.show()","0f2dbfec":"data.plot(kind = 'scatter' , x= 'budget' , y = 'vote_average' , grid = True , color = 'r', alpha=0.3)\nplt.title('BUDGET x VOTE AVERAGE')\nplt.show()","2133f386":"plt.plot(data.budget,data.vote_average,color='r',alpha = 0.4)\nplt.title('BUDGET x VOTE AVERAGE')\nplt.show()","99f096d4":"Now, i can visualize . Firstly, scatter style will be suitable for understanding relation between budget and vote avarage then line plot.","d9349332":" I think the most accurate comparison will be between BUDGET and VOTE AVERAGE ","3c214d4e":"**CONCLUSION**\nThe result i understood from graphics , there is no relationship between film budget and vote average . \nBut the view of film commentators may affect the result.","849d48c1":"Before starting visualization lets check frequency of budget and vote average","e8fec2c3":"**There are too many columns which are waiting for correlation and comparison**\n     Now let me look at first 15","0d932957":"We have run the dataset for analyzing information"}}