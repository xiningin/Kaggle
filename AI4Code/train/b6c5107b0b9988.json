{"cell_type":{"360cdb9f":"code","0dc19806":"code","ad48907f":"code","e7cc4b99":"code","14a133a3":"code","7e6aee54":"code","d3cbbec7":"code","6f209dfa":"code","ecfa15af":"code","353c6cac":"code","7fd78efa":"code","8ce8c77b":"code","ecc285c0":"code","7a1aebcf":"code","48afac48":"code","89a5880d":"code","fa5413a7":"code","72192401":"code","578d0aaa":"code","fed2406e":"code","fb6396a9":"code","794c69cc":"code","d544be37":"code","6d2c748e":"code","04cd3242":"code","473547ef":"code","31b42f97":"code","53f673db":"code","5354d977":"code","a19e2dc6":"code","e1ab990d":"code","32837441":"markdown","9e01165f":"markdown","3e71f8c8":"markdown","264da333":"markdown","a1f7957e":"markdown","ac085014":"markdown","7bb0a6d4":"markdown","6e188f7c":"markdown","b0354946":"markdown","5fdfe6f6":"markdown","23e9a1f1":"markdown","2e05f536":"markdown","dd475a45":"markdown","db139974":"markdown","c9d5a365":"markdown","11e34f9c":"markdown","4fa255dc":"markdown","3f4dd614":"markdown","31927ee3":"markdown","f37a403a":"markdown","dd7bae44":"markdown","7ab90ad3":"markdown","eb4b8778":"markdown","4c7e187d":"markdown"},"source":{"360cdb9f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0dc19806":"df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf.shape","ad48907f":"df.head()","e7cc4b99":"df.info()","14a133a3":"sns.heatmap(df.isnull(),yticklabels=False)","7e6aee54":"sns.countplot(x='Survived', data=df)","d3cbbec7":"sns.countplot(x='Survived', hue='Sex', data=df)","6f209dfa":"sns.countplot(x='Survived', hue='Pclass', data=df)","ecfa15af":"sns.countplot(x='Survived', hue='Embarked', data=df)","353c6cac":"sns.countplot(x='SibSp', hue='Survived', data=df)","7fd78efa":"sns.displot(df['Age'].dropna())","8ce8c77b":"sns.displot(x='Fare',data=df, bins=40)","ecc285c0":"sns.boxplot(x='Pclass',y='Age', data=df)","7a1aebcf":"def compute_Age(col):\n    age = col[0]\n    Pclass = col[1]\n    if pd.isnull(age):\n        if Pclass==1:\n            return 35\n        elif Pclass==2:\n            return 30\n        else:\n            return 25\n    else:\n        return age","48afac48":"df['Age'] = df[['Age','Pclass']].apply(compute_Age,axis=1)","89a5880d":"df.drop(['Cabin', 'Name', 'PassengerId', 'Ticket'],axis=1,inplace=True)","fa5413a7":"df.dropna(inplace=True)","72192401":"from sklearn.preprocessing import LabelEncoder\nLE = LabelEncoder()\ndf['Sex'] = LE.fit_transform(df['Sex'])\ndf['Embarked'] = LE.fit_transform(df['Embarked'])","578d0aaa":"x = df[['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']]\ny = df['Survived']","fed2406e":"from sklearn.model_selection import train_test_split\nx_test,x_train,y_test,y_train = train_test_split(x,y,test_size = 0.9,random_state =0)","fb6396a9":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(x_train,y_train)","794c69cc":"from sklearn.metrics import accuracy_score\n\npredictions = model.predict(x_train)\naccuracy=accuracy_score(y_train,predictions)\naccuracy","d544be37":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.shape","6d2c748e":"test.info()","04cd3242":"Passid = test['PassengerId']","473547ef":"test['Age'] = test[['Age','Pclass']].apply(compute_Age,axis=1)\ntest.drop(['Cabin', 'Name', 'PassengerId', 'Ticket'],axis=1,inplace=True)","31b42f97":"test['Sex'] = LE.fit_transform(test['Sex'])\ntest['Embarked'] = LE.fit_transform(test['Embarked'])","53f673db":"median = test['Fare'].dropna().median()\ntest['Fare'].fillna(median, inplace = True)","5354d977":"predictions=model.predict(test)","a19e2dc6":"output = pd.DataFrame({'PassengerId': Passid,'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\noutput.head()","e1ab990d":"output.shape","32837441":"# Converting Categorical Features","9e01165f":"**Number of siblings or spouses aboard the titanic**","3e71f8c8":"# Preparing data for submission","264da333":"**Drop the Cabin column**","a1f7957e":"**Survived\/Non-Survived Counter Plot by Passenger Class**","ac085014":"**Drop rows in Embarked that are NaN**","7bb0a6d4":"**Passenger age distribution**","6e188f7c":"# Data Cleaning\n\n\n**We want to fill in missing age data instead of just dropping the missing age data rows**","b0354946":"**Accuracy**","5fdfe6f6":"# Exploratory Data Analysis\n\n**Non-null count and data types of the training set**","23e9a1f1":"**Let's devide in X and Y**","2e05f536":"# Import Libraries","dd475a45":"**Simple heatmap to see where we are missing data**","db139974":"**Let's Split the Data**","c9d5a365":"# Training and Predicting","11e34f9c":"**Predictions for Test Data**","4fa255dc":"**Survived\/Non-Survived Counter Plot by Gender**","3f4dd614":"**Let's have a look at the datasetsshape**","31927ee3":"**Survived\/Non-Survived Counter Plot by Point of Embarkation**","f37a403a":"**Survived\/Non-Survived Counter Plot**","dd7bae44":"**Passenger fare distribution**","7ab90ad3":"# The Data\n\n**Reading in the titanic_train.csv file into a pandas dataframe**","eb4b8778":"**Wealthier passengers in the higher classes tend to be older**","4c7e187d":"**Replace Missing Fare Value with Median value**"}}