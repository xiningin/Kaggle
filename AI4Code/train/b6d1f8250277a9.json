{"cell_type":{"2e6b7d07":"code","57b383ba":"code","5942b7bf":"code","999fd346":"code","513e6a10":"code","7d746b9b":"markdown","1e925bd3":"markdown","0f842ed5":"markdown","d49e5824":"markdown","6b95a480":"markdown"},"source":{"2e6b7d07":"class photo:\n    def __init__(self, id = None,value = None ,tags = None,state = None ,m = None):\n        self.id = id\n        self.value = value;\n        self.tags = tags\n        self.state = state\n        self.m = m\n        ","57b383ba":"photos = []\nwith open('..\/input\/hashcode-photo-slideshow\/d_pet_pictures.txt', 'r') as f:\n    lines = f.readlines()\ntotal_photos = int(lines[0])\nprint(total_photos)\n","5942b7bf":"hp = []\nvp = []\nh = 0\nv = 0\nfor i in range(total_photos):\n    p = photo()\n    p.id = i\n    line = lines[i+1].split()\n    if line[0] == 'H':\n        p.state = 1\n    else:\n        p.state = 2\n    p.m = int(line[1])\n    p.tags = []\n    value = 0\n    for j in range(p.m):\n        s = line[2+j]\n        p.tags.append(s)\n        val1 = 0\n        for k in range (len(s)):\n            val1+=max(0,(1<<(k%32))*ord(s[k]))\n        if j==0:\n            value = val1\n        else:\n            value = max(value,val1)\n    p.value=value;\n    if p.state == 1:\n        h += 1\n        hp.append(p)\n    else:\n        v += 1\n        vp.append(p)\n    photos.append(p)\nans=h+(v+1)\/\/2\n","999fd346":"def get_value(photo):\n    return photo.value\nvp.sort(reverse = True,key = get_value)\nhp.sort(reverse = True,key = get_value)\n","513e6a10":"with open('submission.txt', 'w+') as opf:\n    opf.write(str(ans)+'\\n')\n    for i in range(len(hp)):\n        opf.write(str(hp[i].id)+'\\n')\n    for i in range(0,len(vp),2):\n        opf.write(str(vp[i].id)+' '+str(vp[i+1].id)+'\\n')","7d746b9b":"Create a class for photo.","1e925bd3":"Sort the horizontal and vertical photos.","0f842ed5":"Read the input.","d49e5824":"Store the data in the variables.","6b95a480":"Making the submission"}}