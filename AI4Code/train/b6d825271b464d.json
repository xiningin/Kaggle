{"cell_type":{"a0ff0499":"code","e93c1786":"code","63b0cc55":"code","aa325dd7":"code","1702bfc7":"code","7b7b7441":"code","c50384e1":"code","eede9f2a":"code","a58cc8f1":"code","464824ce":"code","0af0e45c":"code","444c6a10":"code","a31b9b80":"code","b10be9fe":"code","87847168":"code","0e9fd36a":"code","9515d37a":"code","1e17e770":"code","b4bf1802":"code","ef21f2a7":"code","0699c485":"code","7948ac90":"code","6264f76a":"code","cdbe4913":"code","83af6057":"code","f7b81e8f":"code","493d83b9":"code","7e6ed7d0":"code","e3b1ef5f":"code","85c1bbca":"code","8679b0a8":"code","81a0cbbf":"code","9c2dbf6d":"code","32ededfd":"code","9bc26a9e":"code","d1fd443f":"code","da29a8d2":"code","4e2dd314":"code","473c80d7":"code","15a5f916":"code","2494ea79":"code","6d3b3b54":"code","8aee5016":"code","1d577477":"code","a9e75a48":"code","eb90fb15":"code","e7b20e0f":"code","d92d5790":"code","b924fe6c":"code","485ec43e":"code","b149354b":"code","e687a443":"code","a68f2bcf":"code","15b97c1c":"code","c68010ee":"code","da3adced":"code","098926d2":"code","54de04a3":"code","b70c1dff":"code","67a760d5":"code","bf175b64":"code","fbf86252":"code","ef5cacae":"markdown","f1ed2c67":"markdown","9bef2853":"markdown","e689d5b2":"markdown","b9d96f44":"markdown","4a81aa94":"markdown","f19be01a":"markdown","1b485c5b":"markdown","9b8019ad":"markdown","de0ed03d":"markdown","11d27321":"markdown","4ccc9ab0":"markdown","289961b0":"markdown","36d8cef7":"markdown","5e508043":"markdown","25fc40c5":"markdown","34c6d228":"markdown","3bf10d27":"markdown","cf068950":"markdown"},"source":{"a0ff0499":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","e93c1786":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n","63b0cc55":"data_fifa = pd.read_csv('..\/input\/fifa19\/data.csv')\ndata_fifa","aa325dd7":"data_fifa.info()","1702bfc7":"data_fifa.head(3)","7b7b7441":"data_fifa.corr()","c50384e1":"#correlation map\n\nf,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(data_fifa.corr(), annot=False, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n","eede9f2a":"data_fifa.head(10)\n","a58cc8f1":"data_fifa.columns","464824ce":"data_fifa.Composure.plot(kind = 'line', color = 'r',label = 'Composure',linewidth=0.5,alpha = 0.5,grid = False,linestyle = 'solid')\ndata_fifa.Marking.plot(kind = 'line', color = 'c',label = 'Marking',linewidth=0.1,alpha = 0.5,grid = False,linestyle = 'solid')\n\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","0af0e45c":"data_fifa.plot(kind='scatter', x='Overall', y='StandingTackle',alpha = 0.1,color = 'blue')\nplt.xlabel('Overall')              # label = name of label\nplt.ylabel('Standing Tackle')\nplt.title('Overall StandingTackle Plot')            # title = title of plot\nplt.show()","444c6a10":"# Histogram\n# bins = number of bar in figure\ndata_fifa.Age.plot(kind = 'hist',bins = 100,figsize = (12,12))\nplt.show()","a31b9b80":"old_soccer = data_fifa['Age']>40\ndata_fifa[old_soccer]\n\n","b10be9fe":"data_fifa[np.logical_and(data_fifa['Age']>40, data_fifa['Nationality']==\"England\")]","87847168":"data_fifa[(data_fifa['Age']>40) & (data_fifa['Nationality']==\"England\")]","0e9fd36a":"\ndef tuble_ex():\n    t = (1,2,3)\n    return t\na,b,c = tuble_ex()\nprint(a,b,c)","9515d37a":"x = data_fifa[(data_fifa['Age']>40) & (data_fifa['Nationality']==\"England\")]\nprint(x['Potential'])\nnum1 = x['Potential']\nnum2 = [i + 1 for i in num1 ]\nnum2","1e17e770":"\nimport builtins\ndir(builtins)","b4bf1802":"data_fifa.loc","ef21f2a7":"threshold = sum(data_fifa.Potential)\/len(data_fifa.Potential)\nthreshold","0699c485":"threshold = sum(data_fifa.Potential)\/len(data_fifa.Potential)\ndata_fifa[\"Potential_level\"] = [\"high\" if i > threshold else \"low\" for i in data_fifa.Potential]\ndata_fifa.loc[4100:4110,[\"Potential_level\",\"Potential\"]] #kodun do\u011fru oldu\u011funu ancak 4100 - 4110 aras\u0131nda ki verilerden g\u00f6rebildim","7948ac90":"data_fifa = pd.read_csv('..\/input\/fifa19\/data.csv')\ndata_fifa.head()","6264f76a":"data_fifa.tail()","cdbe4913":"data_fifa.columns","83af6057":"data_fifa.shape","f7b81e8f":"data_fifa.info","493d83b9":"print(data_fifa['Work Rate'].value_counts(dropna =False))","7e6ed7d0":"data_fifa.describe()","e3b1ef5f":"data_fifa.boxplot(column='Marking',by = 'Position')\n","85c1bbca":"data_f1 = data_fifa.head(5)\ndata_f1","8679b0a8":"melted_f1 = pd.melt(frame=data_f1,id_vars = 'Name', value_vars= ['Potential','Release Clause'])\nmelted_f1","81a0cbbf":"melted_f1.pivot(index = 'Name', columns = 'variable',values='value')","9c2dbf6d":"data_f2 = data_fifa.head()\ndata_f3 = data_fifa.tail()\nconc_data_row = pd.concat([data_f2,data_f3],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","32ededfd":"data_f2 = data_fifa['Overall'].head(10)\ndata_f3= data_fifa['Potential'].head(10)\nconc_data_col = pd.concat([data_f2,data_f3],axis =1,ignore_index =False) # axis = 0 : adds dataframes in row\nconc_data_col","9bc26a9e":"data_fifa.dtypes","d1fd443f":"data_fifa.info()","da29a8d2":"data_fifa['Special'] = data_fifa['Special'].astype('float')\n","4e2dd314":"data_fifa['Special'].dtypes","473c80d7":"data_fifa['Position'].value_counts(dropna =False)","15a5f916":"data_f4=data_fifa  \ndata_f4['Position'].dropna(inplace = True)\ndata_f4['Position'].value_counts(dropna =False)","2494ea79":"assert  data_fifa['Position'].notnull().all()","6d3b3b54":"data_fifa['Position'].fillna('empty',inplace = True)","8aee5016":"assert  data_fifa['Position'].notnull().all()","1d577477":"ad = [\"Ahmet\",\"Mehmet\",\"Kemal\"]\nsoyad = [\"Y\u0131lmaz\",\"Karde\u015f\", \"\u00c7etin\" ]\nlist_label = [\"ad\",\"soyad\"]\nlist_col = [ad,soyad]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf\n","a9e75a48":"df[\"yas\"] = [28,29,21]\ndf","eb90fb15":"df[\"Durum\"] = \"Evet\"\ndf","e7b20e0f":"df[\"ogrenci_mi\"] = [True , False , False]\ndf","d92d5790":"data_fifa.columns","b924fe6c":"data_f11 = data_fifa.loc[:,[\"Overall\",\"Potential\",\"SprintSpeed\"]]\ndata_f11","485ec43e":"data_f11.plot()\nplt.show()","b149354b":"data_f11.plot(subplots = True)\nplt.show()","e687a443":"data_f11.plot(kind = \"scatter\",x= \"Overall\",y = \"Potential\")\nplt.show()","a68f2bcf":"data_f11.plot(kind = \"hist\",y = \"Overall\",bins = 50,range= (45,95),normed = True)\nplt.savefig('graph1.png')\nplt.show()","15b97c1c":"fig, axes = plt.subplots(nrows=2,ncols=1)\ndata_f11.plot(kind = \"hist\",y = \"Overall\",bins = 50,range= (45,95),normed = True,ax = axes[0])\ndata_f11.plot(kind = \"hist\",y = \"Overall\",bins = 50,range= (45,95),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph2.png')\nplt.show()","c68010ee":"data_fifa.describe()","da3adced":"time_list = [\"1992-03-08\",\"1992-04-12\"]\nprint(type(time_list[1]))\n\ndatetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))\n","098926d2":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata_f12 = data_fifa.head()\n#Data tan\u0131mland\u0131\ndate_list = [\"2018-01-10\",\"2018-02-10\",\"2018-03-10\",\"2019-03-15\",\"2019-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata_f12['date_time'] = datetime_object\ndata_f12 = data_f12.set_index('date_time')\ndata_f12","54de04a3":"print(data_f12.loc[\"2019-03-15\"])\n\ndata_f12.loc[\"2018-02-10\" : \"2019-3-15\"]\n","b70c1dff":"data_f12.resample(\"A\").mean()","67a760d5":"data_f12.resample(\"M\").mean()","bf175b64":"data_f12.resample(\"M\").first().interpolate(\"linear\")","fbf86252":"data_f12.resample(\"M\").mean().interpolate(\"linear\")","ef5cacae":"**RESAMPLING PANDAS TIME SERIES**","f1ed2c67":"\u00d6ncelikle verimizi kodumuza aktaral\u0131m, aktard\u0131\u011f\u0131m\u0131z verimiz ile ilgili bilgilere er\u015felim ve ilk s\u00fctunlar\u0131n\u0131 kontrol edelim. ","9bef2853":"**DICTIONARY** - **PANDAS**\n\n   Bu k\u0131s\u0131mda do\u011frudan veri \u00fczerinde yapaca\u011f\u0131m\u0131z i\u015flemlere ge\u00e7iyorum. ","e689d5b2":"**VISUAL EXPLORATORY DATA ANALYSIS**","b9d96f44":"<a id=\"4\"><\/a> <br>\n# 4. PANDAS FOUNDATION ","4a81aa94":"**INDEXING PANDAS TIME SERIES**","f19be01a":"**CONCATENATING DATA**","1b485c5b":"Verimizin kolerasyon tablosunu yapal\u0131m. ","9b8019ad":"<a id=\"3\"><\/a> <br>\n# 3.CLEANING DATA","de0ed03d":"**PIVOTING DATA**","11d27321":"**EXPLORATORY DATA ANALYSIS**","4ccc9ab0":"**MISSING DATA and TESTING WITH ASSERT**","289961b0":"**STATISTICAL EXPLORATORY DATA ANALYSIS**","36d8cef7":"<br>Yukar\u0131daki code cell default gelen bir cell numpy ve pandas y\u00fckl\u00fc olmas\u0131na ra\u011fmen ilk code cell de y\u00fcklemem gereken b\u00fct\u00fcn k\u00fct\u00fcphaneleri y\u00fckl\u00fcyece\u011fim. <\/br>\n","5e508043":"<a id=\"5\"><\/a> <br>\n# 5-MANIPULATING DATA FRAMES WITH PANDAS","25fc40c5":"**Matplotlib**\n","34c6d228":"<a id=\"2\"><\/a> <br>\n# 2. PYTHON DATA SCIENCE TOOLBOX","3bf10d27":"**My First Homewrok **\n\nMerhaba Veri Bilimcisi olma yolunda att\u0131\u011f\u0131m b\u00fcy\u00fck ad\u0131mda ilk yapt\u0131\u011f\u0131m kernel ayn\u0131 zamanda ilk \u00f6devim. Datai teamin e\u011fitim setinde 2. e\u011fitim olan Data Science ve Python: S\u0131f\u0131rdan Uzmanl\u0131\u011fa Veri Bilimi e\u011fitiminin ilk \u00f6devi a\u015fa\u011f\u0131da bulunmaktad\u0131r. \n\n**1. [Introduction to Python](#1)**\n\n**2. [Python Data Science Toolbox](#2)**\n\n**3. [Cleaning Data](#3)**\n\n**4. [Pandas Foundation](#4)**\n\n**5. [Manipulating Data Frames with Pandas](#5)**\n\n\n","cf068950":"<a id=\"1\"><\/a> <br>\n# 1. INTRODUCTION TO PYTHON"}}