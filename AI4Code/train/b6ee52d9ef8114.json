{"cell_type":{"21aa15e8":"code","2e2c2555":"code","27775273":"code","b01fe8ad":"code","890b6cc4":"code","3056ebf1":"code","29af65f5":"code","0d66d5a2":"code","ffc6e99d":"code","1782c959":"code","20ef8e4b":"code","50bb4f81":"code","9d451e11":"code","35b1e090":"code","d0c9b097":"code","654d3517":"code","0f5ff177":"code","04216797":"code","f590f1d6":"code","7e7bdc59":"code","9ba017e2":"code","e476fc29":"code","996676f1":"markdown","67a3b792":"markdown","357d33fc":"markdown","4b09e3cf":"markdown","b646ff1c":"markdown","5d099de5":"markdown","b925cff5":"markdown","e4c52bfd":"markdown","6eda4b20":"markdown","28da44ff":"markdown","b201f3e0":"markdown","fd1182cd":"markdown","db068d96":"markdown","bee7e1df":"markdown","69f5d255":"markdown","57240d74":"markdown","74340189":"markdown","d4dbd082":"markdown","70633f15":"markdown","e79237b6":"markdown","38ac77d7":"markdown"},"source":{"21aa15e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2e2c2555":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom xlrd import open_workbook              # Excel icini okumak icin bu modulu kullaniyoruz\n\nfile_path_mind = open_workbook(\"\/kaggle\/input\/examsets\/quiz2_py_mind.xlsx\")\nfile_path_sense = open_workbook(\"\/kaggle\/input\/examsets\/quiz2_py_sense.xlsx\")\nfile_path_science = open_workbook(\"\/kaggle\/input\/examsets\/quiz2_py_science.xlsx\")\nfile_path_opinion = open_workbook(\"\/kaggle\/input\/examsets\/quiz2_py_opinion.xlsx\")","27775273":"Students_Mind = file_path_mind.sheet_names()  # the students of classes every sheets\nStudents_Sense = file_path_sense.sheet_names()\nStudents_Science = file_path_science.sheet_names()\nStudents_Opinion = file_path_opinion.sheet_names()\n# print(Students_Mind)","b01fe8ad":"mind_len = len(Students_Mind) - 1             # kac ogrenci varsa herbir sheet de dursun diye okuma uzunlugu verildi\nsense_len = len(Students_Sense) - 1\nscience_len = len(Students_Science) - 1\nopinion_len = len(Students_Opinion) - 1","890b6cc4":"# bos bir data frame olusturduk sutunlarida belirledik\nall_class = pd.DataFrame(columns=(\"Class\", \"Name\", \"True\", \"False\", \"Empty\"), index=None)  ","3056ebf1":"mind_sheets = 0  # herbir while icin sayac verildi\nwhile mind_sheets < mind_len:  # yukardaki len i ogrenci sayisi kontrolu icin\n    mind_sheets += 1\n    mind_ex = pd.read_excel(\"\/kaggle\/input\/examsets\/quiz2_py_mind.xlsx\", sheet_name=mind_sheets)  # olusturulan dataframe read_excel ile tekrar okuduk\n    mind_results = mind_ex.tail(3)  # exceldeki tablonun enaltindaki son 3 bilgiler dogru yanlis bosu veriyor ondan son 3 alindi\n\n    class_name = \"py_mind\"  # iloc gorevi integer degerleri loc ise str degerler\n    name = mind_results.columns[0]  # hucrelerdeki isime karsilik gelen ilk sutun hucresi alindi\n    true = mind_results.iloc[0, 1]  # sonuclarin icerisindeki 0. sutunun 1. satirina gidince dogru sayisi alindi\n    false = mind_results.iloc[1, 1]  # ayni sekilde false yazisinin exceldeki bulundugu kolon\n    empty = mind_results.iloc[2, 1]  # bos un yerini aliyor\n    student = {'Class': class_name, 'Name': name, 'True': true, 'False': false, \"Empty\": empty}  # sutun isimlere karsilik gelen asagi dogru tablo olusturuyor\n    all_class = all_class.append(student, ignore_index=True)  # all_class in icine ogrencileri ekliyor ignore_index ile siralamayi 1 den baslatiyor\n# print(all_class)","29af65f5":"sense_sheets = 0\nwhile sense_sheets < sense_len:\n    sense_sheets += 1\n    sense_ex = pd.read_excel(\"\/kaggle\/input\/examsets\/quiz2_py_sense.xlsx\", sheet_name=sense_sheets)\n    sense_results = sense_ex.tail(3)\n\n    class_name = \"py_sense\"\n    name = sense_results.columns[0]\n    true = sense_results.iloc[0, 1]\n    false = sense_results.iloc[1, 1]\n    empty = sense_results.iloc[2, 1]\n    student = {'Class': class_name, 'Name': name, 'True': true, 'False': false, \"Empty\": empty}\n    all_class = all_class.append(student, ignore_index=True)\n# print(all_class)","0d66d5a2":"science_sheets = 0\nwhile science_sheets < science_len:\n    science_sheets += 1\n    science_ex = pd.read_excel(\"\/kaggle\/input\/examsets\/quiz2_py_science.xlsx\",\n                               sheet_name=science_sheets)\n    science_results = science_ex.tail(3)\n\n    class_name = \"py_science\"\n    name = science_results.columns[0]\n    true = science_results.iloc[0, 1]\n    false = science_results.iloc[1, 1]\n    empty = science_results.iloc[2, 1]\n    student = {'Class': class_name, 'Name': name, 'True': true, 'False': false, \"Empty\": empty}\n    all_class = all_class.append(student, ignore_index=True)\n# print(all_class)","ffc6e99d":"opinion_sheets = 0\nwhile opinion_sheets < opinion_len:\n    opinion_sheets += 1\n    opinion_ex = pd.read_excel(\"\/kaggle\/input\/examsets\/quiz2_py_opinion.xlsx\", sheet_name=opinion_sheets)\n    opinion_results = opinion_ex.tail(3)\n\n    class_name = \"py_opinion\"\n    name = opinion_results.columns[0]\n    true = opinion_results.iloc[0, 1]\n    false = opinion_results.iloc[1, 1]\n    empty = opinion_results.iloc[2, 1]\n    student = {'Class': class_name, 'Name': name, 'True': true, 'False': false, \"Empty\": empty}\n    all_class = all_class.append(student, ignore_index=True)\n\n# print(all_class)","1782c959":"total = (mind_len + opinion_len + science_len + sense_len)  # siniflarin toplam sayisi\n\nprint(\"1. Answer:\\n Number of entered students =\", total)","20ef8e4b":"# 2.soru = tum sinifin dogru,yanlis,bos sayisi\n\nall_true = all_class[\"True\"]  # butun siniftakilerin troplam true sayisi\nall_false = all_class[\"False\"]  # false sayisi\nall_empty = all_class[\"Empty\"]  # empty sayilari","50bb4f81":"print(\"2. Answer:\\nNumbers of TRUE =\", sum(all_true), \"\\nNumbers of FALSE =\", sum(all_false), \"\\nNumbers of EMPTY = \",\n      sum(all_empty))","9d451e11":"# soru = 3 tum siniflarin Dogru yanlis bos ortalamalari\n\nprint(\"3. Answer:\\nAll of Classes;\\nAverage of TRUE =\", all_true.mean(), \"\\nAverage of FALSE = \", all_false.mean(),\n      \"\\nAverage of EMPTY =\", all_empty.mean())","35b1e090":"# Siniflarin ayri ayri df yapilmasi ve ortalama alinmasi\n\nc_mind = all_class[all_class[\"Class\"] == \"py_mind\"]    # siniflarin ortalamalari icin sinif sutunundaki py_mind olanlari sec\nc_mind_ort = c_mind[\"True\"]                            # bunun icerisinden True olan sutunlari al\nc_sense = all_class[all_class[\"Class\"] == \"py_sense\"]  # diger siniflar icinde ayni sekilde aldik\nc_sense_ort = c_sense[\"True\"]\nc_science = all_class[all_class[\"Class\"] == \"py_science\"]\nc_science_ort = c_science[\"True\"]\nc_opinion = all_class[all_class[\"Class\"] == \"py_opinion\"]\nc_opinion_ort = c_opinion[\"True\"]","d0c9b097":"# soru 4 ve 5 : siniflarin dogru ortalamasi\n\nprint(\"4. Answer: and 5. Answer:\\nAverage of class;\", \"\\npy_mind average =\", c_mind_ort.mean(), \"\\npy_Sense average =\",\n      c_sense_ort.mean(), \"\\npy_science average =\", c_science_ort.mean(), \"\\npy_opinion average =\", c_opinion_ort.mean())","654d3517":"# sinif sinif en basarili kisiler\n\nmind_1st = c_mind.sort_values(by='True', ascending=False).head(1)        # her sinifin enbasarililarini almak istiyoruz\nsense_1st = c_sense.sort_values(by='True', ascending=False).head(1)      # True ya gore yukardan asagiya dogru sirala ve en bastakini al asagida print yap\nscience_1st = c_science.sort_values(by='True', ascending=False).head(1)  # her sinif icin aynisini yap\nopinion_1st = c_opinion.sort_values(by='True', ascending=False).head(1)\n\nprint(\"6. Answer:\\npy_mind best student (index & name) =\", mind_1st.Name, \"\\npy_sense best student (index & name) =\", sense_1st.Name,\n      \"\\npy_science best student (index & name) =\", science_1st.Name, \"\\npy_opinion best student (index & name) =\", opinion_1st.Name)","0f5ff177":"# Matplotlib Kullanma devami\n\ny = np.array([c_mind_ort.mean(), c_sense_ort.mean(), c_science_ort.mean(), c_opinion_ort.mean()])\nx = np.array([1, 2, 3, 4])","04216797":"# bar plot\n\nind = np.arange(5)\nplt.bar(x, y)\nplt.title(\"bar plot\")\nplt.xlabel(\"x stick\")\nplt.ylabel(\"y stick\")\nplt.xticks(ind, (' ', 'mind', 'sense', 'science', 'opinion'))  # siniflarin ortalamalari etiket verme x eksenine gore\nplt.show()\n","f590f1d6":"# standart sapma bar plot\n\nprint(14 * \" >\", \"\\t Standart deviation of Classes \\t\", \"< \" * 14, \"\\n\\n\")\ny1 = np.array([\"py_mind\", \"py_sense\", \"py_science\", \"py_opinion\"])\ny = np.array([c_mind[\"True\"].std(), c_sense[\"True\"].std(), c_science[\"True\"].std(), c_opinion[\"True\"].std()])  # True sutunlarinin std sapmasi\nprint(y1,\"\\n\", y)","7e7bdc59":"x = np.array([1, 2, 3, 4])\nind = np.arange(5)\nplt.bar(x, y)\nplt.title(\"Standart deviation bar plot\")\nplt.xlabel(\"x stick\")\nplt.ylabel(\"y stick\")\nplt.xticks(ind, (\" \", 'mind', 'sense', 'science', 'opinion'))\nplt.show()\n","9ba017e2":"plt.plot(c_mind[\"True\"], color=\"red\", label=\"mind\")\nplt.plot(c_sense[\"True\"], color=\"blue\", label=\"sense\")\nplt.plot(c_science[\"True\"], color=\"black\", label=\"science\")\nplt.plot(c_opinion[\"True\"], color=\"green\", label=\"opinion\")\nplt.legend()  # legend x ve y cubuklarini olusturuyor\n\n# legend x ve y yi olusturur\n\nplt.xlabel(\"Classes\")\n\n# x label'i\nplt.ylabel(\"True\")\n\n# show demezseniz gostermez.\nplt.show()","e476fc29":"plt.scatter(c_mind[\"True\"].index, c_mind[\"True\"], color=\"red\", label=\"Mind\")\nplt.scatter(c_sense[\"True\"].index, c_sense[\"True\"], color=\"blue\", label=\"sense\")\nplt.scatter(c_science[\"True\"].index, c_science[\"True\"], color=\"black\", label=\"science\")\nplt.scatter(c_opinion[\"True\"].index, c_opinion[\"True\"], color=\"green\", label=\"opinion\")\nplt.legend()\n# legend x ve y yi olusturur\nplt.xlabel(\"Classes\")\n# x label'i\nplt.ylabel(\"True\")\n# show demezseniz gostermez.\nplt.show()","996676f1":"Fourt and fifth questions are one by one averages...","67a3b792":"Now, our Dataframe is ready and we can get answers. First question...","357d33fc":"Number of True, False, Empty in all class. Second question...","4b09e3cf":"Given a counter make while loop for each one. First is for py_mind class... ","b646ff1c":"Third is for py_science class... ","5d099de5":"Then standart deviation bar plot drawn...","b925cff5":"Second is for py_sense class... ","e4c52bfd":"Lets take students name from .xlsx documents...","6eda4b20":"Final one is for py_opinion class... ","28da44ff":"# PyCoders Data Science Team\n\n### The study here has been created by using real data, especially on Numpy.","b201f3e0":"We dont know number of students then we give lenght read...","fd1182cd":"Final graph is scatter drawing...","db068d96":"Bar plot for every classes...","bee7e1df":"Trending every students according to succesfull can be shown...","69f5d255":"Third question is average of all classes ...","57240d74":"Let us create one Data frame with given names...","74340189":"eylul ayi ilk odevi, derte vermis oldugum odevi burdan fork ederek yaparsaniz sonuclari kontrol edebiliyorum. odevleri unutmayin bu hafta aldigimiz kararlarida. lutfen bu odev 07.09.2019 saat 24:00 a kadar bitirilsin. iyi calismalar. odevle ilgili yapilmasi gerekenler resim olarak gruba gonderilmistir, Datalari kendiniz ekleyebilir veya sorun yasarsaniz, datalari local calistirabilirisiniz. iyi calismalar","d4dbd082":"Best students in every classes finding with index number in order...","70633f15":"Firstly we want to read one by one .xlsx docs in datas...","e79237b6":"Standart deviation for classes can be shown...","38ac77d7":"Now, take into account Matplotlib package and apllying with datas..."}}