{"cell_type":{"9f725e09":"code","251f47cb":"code","bed612fe":"code","1653ea68":"code","b5e21b1a":"code","5c6f3df0":"code","b6bb3051":"code","84552492":"code","befebf82":"code","1a0ee07f":"code","13618bc0":"code","c4d60d54":"code","5068fb3f":"code","15550252":"code","8030b99d":"code","d6a8c614":"code","9ab2d4b0":"code","7da78636":"markdown","b5feb3c8":"markdown","e2e38bbd":"markdown","6badb39e":"markdown","4442335b":"markdown","c0dcc02e":"markdown","a7b4933d":"markdown","61bc0dee":"markdown","fd857252":"markdown","1a2ceac2":"markdown","e9a45e7b":"markdown","ac2766f6":"markdown","9cb79e83":"markdown"},"source":{"9f725e09":"#import library\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O \n","251f47cb":"# path file \u0e17\u0e35\u0e48\u0e08\u0e30\u0e2d\u0e48\u0e32\u0e19\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\ntrain_file_path = \"\/kaggle\/input\/titanic\/train.csv\"\n# \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e41\u0e25\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e25\u0e2d\u0e07\u0e43\u0e19 dataframe \u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 train_data\ntrain_data = pd.read_csv(train_file_path)\n\n# \u0e15\u0e31\u0e49\u0e07\u0e43\u0e2b\u0e49 show \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1a\u0e37\u0e49\u0e2d\u0e07\u0e15\u0e49\u0e19 25 rows\ntrain_data.head(25)","bed612fe":"# \u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48 NaN \u0e02\u0e2d\u0e07 \u0e2d\u0e32\u0e22\u0e38\u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 0\ntrain_data['Age'] = train_data['Age'].replace(np.nan,0)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e1c\u0e25\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\ntrain_data.head(25)","1653ea68":"# Label Encoding \u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e08\u0e32\u0e01\u0e15\u0e31\u0e27\u0e2b\u0e19\u0e31\u0e07\u0e2a\u0e37\u0e2d\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\ntrain_data[\"Sex\"] = train_data[\"Sex\"].astype('category')\ntrain_data[\"Sex_category\"] = train_data[\"Sex\"].cat.codes\nprint(\"Add Column Sex_category \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e07\u0e15\u0e31\u0e27\u0e2b\u0e19\u0e31\u0e07\u0e2a\u0e37\u0e2d\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02 class 0 \u0e41\u0e25\u0e30 1\u0e41\u0e25\u0e49\u0e27\")\n\ntrain_data.head(25) ","b5e21b1a":"# \u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e38\u0e13\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e15\u0e31\u0e27\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e21\u0e35\u0e1c\u0e25\u0e15\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e23\u0e2d\u0e14\u0e0a\u0e35\u0e27\u0e34\u0e15\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e42\u0e14\u0e22\u0e2a\u0e32\u0e23\ntrain_data_feature = ['Pclass','Sex_category','Age','SibSp','Parch']\nX = train_data[train_data_feature]\n\n# \u0e01\u0e33\u0e2b\u0e19\u0e14\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49\u0e17\u0e33\u0e19\u0e32\u0e22\u0e2d\u0e2d\u0e01\u0e21\u0e32\ny = train_data.Survived\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e02\u0e2d\u0e07 feature \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\nX.head(10)","5c6f3df0":"# \u0e41\u0e1a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e40\u0e1b\u0e47\u0e19 traing \u0e01\u0e31\u0e1a Validation \u0e17\u0e31\u0e49\u0e07\u0e2a\u0e48\u0e27\u0e19 feature \u0e41\u0e25\u0e30 target\nfrom sklearn.model_selection import train_test_split\ntrain_X, val_X, train_y, val_y = train_test_split(X, y,random_state = 0)\n# ===========================================================================\nprint(\"Split Training & Validation Completed\")","b6bb3051":"#\u0e43\u0e0a\u0e49\u0e2b\u0e25\u0e31\u0e01\u0e01\u0e32\u0e23 Randomforest\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\n\n# Model\nforest_model = RandomForestRegressor(random_state=1)\nforest_model.fit(train_X, train_y)\nServived_predicts = forest_model.predict(val_X)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e17\u0e35\u0e48 Predict \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e44\u0e14\u0e49\nprint(Servived_predicts)\n","84552492":"#print(type(val_y))\n# \u0e41\u0e1b\u0e25\u0e07\u0e08\u0e32\u0e01 pandas.core.series.Series \u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 numpy \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e2d\u0e32\u0e21\u0e32\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e47\u0e19\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19\nval_y_numpy = val_y.to_numpy()\n#print(val_y_numpy)\n\nprint(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e04\u0e48\u0e32 validate_label(val_y) \u0e08\u0e23\u0e34\u0e07 \u0e01\u0e31\u0e1a \u0e17\u0e35\u0e48\u0e40\u0e23\u0e32 predict \u0e44\u0e14\u0e49\u0e08\u0e32\u0e01 validate_feature(val_x)\\n\")\n\nk = 0\nfor i in range(70): \n    print(\" \")\n    for j in range(3):\n        print(val_y_numpy[k],\" and \",format(Servived_predicts[k],\".4f\"), end =\" \")\n        print(\"|\", end =\" \")\n        k = k + 1\n    \n# \u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e04\u0e27\u0e32\u0e21\u0e15\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07 \u0e01\u0e31\u0e1a\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e19\u0e32\u0e22\u0e44\u0e14\u0e49 (\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07 - \u0e01\u0e31\u0e1a\u0e17\u0e35\u0e48\u0e17\u0e33\u0e19\u0e32\u0e22\u0e44\u0e14\u0e49)\nprint(\"\\n\\nMean_absolute_error is \",mean_absolute_error(val_y, Servived_predicts))","befebf82":"# \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e32\u0e23\u0e32\u0e07\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c test.csv\ntest_file_path = \"\/kaggle\/input\/titanic\/test.csv\"\ntest_data = pd.read_csv(test_file_path)\n\n# \u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48 NaN \u0e02\u0e2d\u0e07 \u0e2d\u0e32\u0e22\u0e38\u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 0\ntest_data['Age'] = test_data['Age'].replace(np.nan,0)\n\ntest_data[\"Sex\"] = test_data[\"Sex\"].astype('category')\ntest_data[\"Sex_category\"] = test_data[\"Sex\"].cat.codes\nprint(\"Add Column Sex_category (\u0e2d\u0e22\u0e39\u0e48\u0e14\u0e49\u0e32\u0e19\u0e02\u0e27\u0e32\u0e2a\u0e38\u0e14)\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e07\u0e15\u0e31\u0e27\u0e2b\u0e19\u0e31\u0e07\u0e2a\u0e37\u0e2d\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02 class \u0e41\u0e25\u0e49\u0e27 \u0e40\u0e1b\u0e47\u0e19\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\\n\")\n\ntest_data.head(50)","1a0ee07f":"test_data.describe()","13618bc0":"# \u0e40\u0e25\u0e37\u0e2d\u0e01 feature \u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e17\u0e14\u0e2a\u0e2d\u0e1a \u0e01\u0e31\u0e1a Model\ntest_data_features=['Pclass','Sex_category','Age','SibSp','Parch']\ntest_X = test_data[test_data_features]\n\ntest_X.head(10)\n","c4d60d54":"test_predictions = forest_model.predict(test_X)\n\n#\u0e17\u0e33\u0e01\u0e32\u0e23\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e17\u0e33\u0e19\u0e32\u0e22\u0e44\u0e14\u0e49\u0e08\u0e32\u0e01 % \u0e2b\u0e32\u0e01 >= 50% \u0e08\u0e30\u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19 Survive \u0e41\u0e15\u0e48\u0e16\u0e49\u0e32\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 \u0e44\u0e21\u0e48\u0e23\u0e2d\u0e14\npredictInteger = np.where(test_predictions<=0.5 ,0,1)\n#print(predictInteger)\n\npredict = pd.DataFrame(predictInteger,columns=['Predict'])\n\n#\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e08\u0e23\u0e34\u0e07\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23 predict \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e32\u0e23\u0e32\u0e07\u0e40\u0e1a\u0e37\u0e49\u0e2d\u0e07\u0e15\u0e49\u0e19\npredict.head(10)\n","5068fb3f":"# \u0e14\u0e36\u0e07\u0e40\u0e2d\u0e32\u0e15\u0e32\u0e23\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e35\u0e48\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07 \u0e41\u0e25\u0e30\u0e40\u0e2d\u0e32\u0e21\u0e32 compare \u0e01\u0e31\u0e1a \u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32 predict \u0e44\u0e14\u0e49\nsub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsub_compare=sub.copy()\nsub_compare['predictions']= predictInteger\nsub_compare.head(50)\n\n#\u0e40\u0e21\u0e37\u0e48\u0e2d run \u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07","15550252":"from sklearn.metrics import classification_report,confusion_matrix\n#\u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32\u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49 dataframe sub_compare \u0e21\u0e35 column \u0e2d\u0e30\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e2d\u0e32\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e19\u0e27\u0e19\u0e15\u0e48\u0e2d\nsub_compare.columns","8030b99d":"# \u0e43\u0e0a\u0e49 confusion_matrix \u0e41\u0e2a\u0e14\u0e07\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23 Predict \u0e16\u0e39\u0e01\u0e2b\u0e23\u0e37\u0e2d\u0e1c\u0e34\u0e14 \u0e01\u0e31\u0e1a\u0e1c\u0e25\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07 (TN FN TP FP) \u0e41\u0e25\u0e30\u0e17\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e32\u0e23\u0e32\u0e07\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e07\u0e48\u0e32\u0e22\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\nfinal_result=pd.DataFrame(confusion_matrix(sub_compare['Survived'],predict),index=[['actual No','actual Yes']],columns=[['predicted No','predicted Yes']])\nfinal_result","d6a8c614":"print(\"============================= Conclution ================================ \\n\")\n\n#\u0e14\u0e36\u0e07\u0e40\u0e2d\u0e32\u0e04\u0e48\u0e32 TN FP FN TP \u0e21\u0e32\u0e08\u0e32\u0e01 confusion_matrix\ntn, fp, fn, tp = confusion_matrix(sub_compare['Survived'],predict).ravel()\nprint(\"True Negative(TN) = \",tn,\"False Positive(FP) = \",fp,\n      \"False Negative(FN) = \",fn,\"True Positve(TP) = \",tp)\n\n#\u0e41\u0e2a\u0e14\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 Accuracy\nAccuracy = (tp + tn)\/(tp+tn+fp+fn)\nAccuracy_rate = Accuracy * 100 \nprint(\"\\nAccuracy = \",Accuracy,\"(\",format(Accuracy_rate,\".3f\"),\")\\n\")\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25 classification report \u0e42\u0e14\u0e22\u0e08\u0e30\u0e41\u0e2a\u0e14\u0e07\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e04\u0e48\u0e32 accuracy recall \u0e41\u0e25\u0e30 precision\nprint(\"Classification Report...\\n\")\nprint(classification_report(sub_compare['Survived'],predict))","9ab2d4b0":"output = pd.DataFrame({'PassengerId': sub_compare.PassengerId, 'Survived': sub_compare.predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","7da78636":"# Training Zone","b5feb3c8":"# Variable Descriptions\n\u0e04\u0e27\u0e32\u0e21\u0e2b\u0e21\u0e32\u0e22\u0e41\u0e25\u0e30\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 column \u0e02\u0e49\u0e32\u0e07\u0e15\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\n* Pclass = Passenger Class (1 = 1st ; 2 = 2nd; 3 = 3rd)\n* survival = Survival (O = No ; 1 = Yes)\n* name = name\n* sex = sex\n* age = age\n* SibSp = \u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e0d\u0e32\u0e15\u0e34\/\u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e39\u0e48\u0e2a\u0e21\u0e23\u0e2a (Siblings\/Spouses)\n* Parch = \u0e08\u0e33\u0e19\u0e27\u0e19\u0e0a\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e1b\u0e01\u0e04\u0e23\u0e2d\u0e07\/\u0e25\u0e39\u0e01 (Parents\/Children)\n* Ticket = \u0e40\u0e25\u0e02\u0e15\u0e31\u0e4b\u0e27\n* fare = \u0e04\u0e48\u0e32\u0e42\u0e14\u0e22\u0e2a\u0e32\u0e23 (\u0e2a\u0e01\u0e38\u0e25 \u0e1b\u0e2d\u0e19\u0e14\u0e4c)\n* cabin = \u0e2b\u0e49\u0e2d\u0e07\u0e42\u0e14\u0e22\u0e2a\u0e32\u0e23\n* embarked = \u0e17\u0e48\u0e32\u0e40\u0e23\u0e37\u0e2d\u0e15\u0e49\u0e19\u0e17\u0e32\u0e07 (C = Cherbourg, Q = Queenstown , S = Southampton)","e2e38bbd":"![My Banner](https:\/\/blogger.googleusercontent.com\/img\/a\/AVvXsEj68D2JdWB8LItBjRkcj05RlVXp23GY2iScmJzWnHGt9riydthXfGyEa3XRE6z30PipC7zMPXnqd4SOUwZ6JBjwMtrr3dDLDGizIevssHnCQIL0a2ufyK5D4OR9y4Pdk2G_O4x-eAtFJhy37mEtjjJ0ZyLqcPbb21XraaAGxm6fQ-qS3MuhR40-F5MzcA=w876-h493)\n\n\u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e17\u0e35\u0e48 link \u0e19\u0e35\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e14\u0e39\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e1c\u0e21 run \u0e44\u0e27\u0e49\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e04\u0e23\u0e31\u0e1a\n* https:\/\/www.kaggle.com\/natthapoltia\/titanic-project-v6000final\/notebook","6badb39e":"# \u0e1c\u0e25\u0e01\u0e32\u0e23 Submission \nSave File \u0e40\u0e1b\u0e47\u0e19 Submission.csv \u0e41\u0e25\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23 Submit Predictions","4442335b":"# \u0e19\u0e33\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23 prediction \u0e21\u0e32\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e31\u0e1a\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07\n\u0e42\u0e14\u0e22\u0e17\u0e33\u0e15\u0e32\u0e23\u0e32\u0e07\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c gender_submission.csv","c0dcc02e":"\u0e41\u0e2b\u0e25\u0e48\u0e07\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e01\u0e32\u0e23\u0e04\u0e49\u0e19\u0e04\u0e27\u0e49\u0e32\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e23\u0e39\u0e49\n1. https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.confusion_matrix.html\n2. https:\/\/medium.com\/@kennymiyasato\/classification-report-precision-recall-f1-score-accuracy-16a245a437a5\n3. https:\/\/www.geeksforgeeks.org\/replace-nan-values-with-zeros-in-pandas-dataframe\/\n4. https:\/\/pbpython.com\/categorical-encoding.html\n5. https:\/\/www.kaggle.com\/alexisbcook\/titanic-tutorial\n6. http:\/\/campus.lakeforest.edu\/frank\/FILES\/MLFfiles\/Bio150\/Titanic\/TitanicMETA.pdf","a7b4933d":"# Preparing the test data\n\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e31\u0e01\u0e04\u0e23\u0e39\u0e48\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23 training \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 Model \u0e41\u0e25\u0e49\u0e27 \u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e40\u0e04\u0e22\u0e40\u0e2b\u0e47\u0e19\u0e21\u0e32\u0e01\u0e48\u0e2d\u0e19\u0e43\u0e19 File test.csv\n\u0e08\u0e36\u0e07\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e08\u0e30\u0e43\u0e0a\u0e49 test \u0e01\u0e48\u0e2d\u0e19\u0e0b\u0e36\u0e48\u0e07\u0e17\u0e33\u0e04\u0e25\u0e49\u0e32\u0e22\u0e46\u0e01\u0e31\u0e1a\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e48\u0e27\u0e19 train","61bc0dee":"# \u0e01\u0e32\u0e23\u0e27\u0e31\u0e14\u0e1b\u0e23\u0e30\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e20\u0e32\u0e1e\u0e02\u0e2d\u0e07 Model","fd857252":"# Building Prediction Model Zone\n\u0e40\u0e23\u0e34\u0e48\u0e21\u0e41\u0e23\u0e01\u0e17\u0e33\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2d\u0e2d\u0e01 \u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e48\u0e27\u0e19 traing \u0e01\u0e31\u0e1a Validation \u0e17\u0e31\u0e49\u0e07\u0e2a\u0e48\u0e27\u0e19 feature \u0e41\u0e25\u0e30 target(Label) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e14\u0e49\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 \u0e01\u0e47\u0e17\u0e33\u0e01\u0e32\u0e23 train \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e41\u0e1a\u0e48\u0e07\u0e43\u0e0a\u0e49 train \u0e41\u0e25\u0e30\u0e19\u0e33\u0e21\u0e32\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e01\u0e32\u0e23 predict \u0e01\u0e31\u0e1a \u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 Validation feature \u0e41\u0e25\u0e30\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e31\u0e1a Validation target(label) ","1a2ceac2":"\u0e20\u0e32\u0e1e\u0e2b\u0e25\u0e31\u0e01\u0e10\u0e32\u0e19\u0e01\u0e32\u0e23\u0e01\u0e14\u0e2a\u0e48\u0e07 Submit Prediction \u0e1a\u0e19 Kaggle\n![Submission image](https:\/\/blogger.googleusercontent.com\/img\/a\/AVvXsEjQWl_bG4KJ2kaRCoqqnanyA0xFzMBDa8P58kvtkPQkF8GEZja0XXIhIv7Pe2q9LeuqXwOatyU8UnqOQc6LHunQDHM7uNto58HyfMyM6oPpg0IB51rqc1FJUaW_HrCy0AIHT_Iuj4cZeViMFCpsROo5MeXn0OhVdssCF-n6pQrrH0s8vtvHxz-2tDRzZg=w876-h541)","e9a45e7b":"# Test with Model","ac2766f6":"# Data Cleaning & Label Encoding\n\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e43\u0e19\u0e15\u0e32\u0e23\u0e32\u0e07\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 NaN \u0e41\u0e25\u0e30\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e2b\u0e19\u0e31\u0e07\u0e2a\u0e37\u0e2d \u0e1c\u0e21\u0e08\u0e36\u0e07\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e17\u0e33\u0e01\u0e32\u0e23\n- data cleaning \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e0a\u0e48\u0e2d\u0e07\u0e20\u0e32\u0e22\u0e43\u0e19 column Age (\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e1c\u0e21\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 Age \u0e40\u0e1b\u0e47\u0e19 Features) \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 NaN \u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 0 \u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e25\u0e1a\u0e17\u0e31\u0e49\u0e07\u0e41\u0e16\u0e27\u0e17\u0e34\u0e49\u0e07\u0e44\u0e1b\u0e40\u0e25\u0e22\n- Label Encoding \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e0a\u0e48\u0e2d\u0e07\u0e42\u0e14\u0e22\u0e41\u0e1b\u0e25\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 column Sex \u0e41\u0e1b\u0e25\u0e07\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e25\u0e32\u0e2a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 0 \u0e41\u0e25\u0e30 1 \u0e43\u0e19 column \u0e17\u0e35\u0e48\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 sex_category","9cb79e83":"![](https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/20200701021039\/WhatsApp-Image-2020-07-01-at-2.09.25-AM.jpeg)"}}