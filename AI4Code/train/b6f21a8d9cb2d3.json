{"cell_type":{"d77f9f34":"code","8a8f149b":"code","8a5c31d9":"code","a1633eb9":"code","086b12d1":"code","e6d03160":"code","1398e432":"code","7cc4f5cd":"code","9663af02":"code","abada39f":"code","911658a4":"markdown","36826cf7":"markdown","0cb1b0f0":"markdown","314b4563":"markdown","a5601af1":"markdown","696603fe":"markdown","2928ce1e":"markdown","f88d32cd":"markdown","41a15181":"markdown","ce631ec9":"markdown","c8678f24":"markdown","afaa5932":"markdown","8cf4aafa":"markdown"},"source":{"d77f9f34":"import pandas as pd\nimport numpy as np\nimport warnings\nimport os\nwarnings.simplefilter(action='ignore')","8a8f149b":"df = pd.read_csv(\"\/kaggle\/input\/jane-street-market-prediction\/train.csv\")","8a5c31d9":"df.head(2)","a1633eb9":"df_0 = df[df['date'] == 0]","086b12d1":"# If we choose all transactions\ndf_0['mult'] = df_0['weight']*df_0['resp']*1\np_0 = df_0['mult'].sum()\np_0","e6d03160":"# If we choose no transactions\ndf_0['mult'] = df_0['weight']*df_0['resp']*0\np_0 = df_0['mult'].sum()\np_0","1398e432":"# Highest possible p for day 0\ndf_0['mult'] = df_0['weight']*df_0['resp']*(df_0['resp'] > 0)\np_0 = df_0['mult'].sum()\np_0","7cc4f5cd":"t = (np.sum(np.array([74, 2])\/np.sqrt(np.sum(np.array([74,2])**2))))*np.sqrt(250\/2)\nt","9663af02":"t = (np.sum(np.array([38, 38])\/np.sqrt(np.sum(np.array([38,38])**2))))*np.sqrt(250\/2)\nt","abada39f":"t = (np.sum(np.array([38, 38, 0])\/np.sqrt(np.sum(np.array([38,38, 0])**2))))*np.sqrt(250\/3)\nt","911658a4":"Each row or trading opportunity can be chosen (action == 1) or not (action == 0). \n\nThe variable $p_i$ is a indicator for each day $i$, showing how much return we got for that day.\n\nLet's say for example we want to verify the potential return for day 0.\n","36826cf7":"## $t$\n\nNow, let's try to understan what $t$ is all about.\nLet's create an example.\n\nLet's say we have two days to compose $t$.\n\nFirst scenario, we have:\n\n$$ Day0 -> p_0 = 74$$\n\n$$ Day1 -> p_1 = 2$$\n\n\nwhere, $\\sum p_i = 76 $. If we calculate $t$ for this scenario we would have:","0cb1b0f0":"Here I describe some intuitions behing the utility score function for the Jane Street Market Prediction\nproblem in Kaggle.\n\nYou can find more information on the problem here: https:\/\/www.kaggle.com\/c\/jane-street-market-prediction\/overview","314b4563":"We can see we get a lower $t$ value than with 2 days.\n\nBasically, we want to select uniformly distributed distributed returns over days, maiximizing our return \nbut giving a penalty on choosing too many dates.\n\nThe variable $t$, however, will only matter if it is lower than 6, given the final equation:\n\n$$ u = min(max(t,0), 6) \\sum p_i. $$\n\notherwise, $t$ wil be replaced by the number 6 (I am still trying to understand why 6, if anyone knows please share it with me :) ).\n","a5601af1":"Let's say we end up choosing all transactions for day 0. We would have:\n\n$$\np_i = \\sum_j(weight_{ij} * resp_{ij} * 1)\n$$","696603fe":"Now, let's say we had different values for each day.\n\n\n$$ Day0 -> p_0 = 38$$\n\n$$ Day1 -> p_1 = 38$$\n\nNote that in this scenario $\\sum p_i $ is also 76.","2928ce1e":"Now, let's say that we only choose the ones that would give us a positive return.\nLet's see what is the maximum return we can get from day 0.","f88d32cd":"There is one more thing to consider in the $t$ equation.\nWe have a multiplying factor of $\\sqrt{\\frac{250}{|i|}}$.\n\nSo, basically, the higher $i$ the lower my $t$ value will be.\n\nLet's say that, similar to the scanerio above, we actually had 3 days instead of 2:\n\n$$ Day0 -> p_0 = 38$$\n\n$$ Day1 -> p_1 = 38$$\n\n$$ Day2 -> p_1 = 0$$\n","41a15181":"Since we want to maximize u, we also want to maximize $p_i$. To do that, we have to select the least amount of\nnegative $resp$ values as possible (since this is the only negative value in my equation and only value that would make the total sum of p going down)\nand maximize the positive number of positive $resp$ transactions we select.","ce631ec9":"## $p_i$","c8678f24":"Ok, so we can see that $t$ is larger when the return for each day is better distributed and has lower variation.\nIt is better to have returns uniformly divided among days than have all of your returns concentrated in just one day.\nIt reminds me a little of a $L_1$ over $L_2$ situation, where the $L_2$ norm penalizes outliers more than $L_1$.","afaa5932":"## Utility Score Definition\n\nThis competition is evaluated on a utility score. Each row in the test set represents a trading opportunity for which you will be predicting an action value, 1 to make the trade and 0 to pass on it. Each trade j has an associated weight and resp, which represents a return.\n\n\n$$\np_i = \\sum_j(weight_{ij} * resp_{ij} * action_{ij}),\n$$\n\n$$\nt = \\frac{\\sum p_i }{\\sqrt{\\sum p_i^2}} * \\sqrt{\\frac{250}{|i|}},\n$$\n\nwhere \\(|i|\\) is the number of unique dates in the test set. The utility is then defined as:\n\n$$ u = min(max(t,0), 6) \\sum p_i. $$","8cf4aafa":"Obviously, if we choose no transactions, $p_i$ = 0"}}