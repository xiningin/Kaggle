{"cell_type":{"6e78b263":"code","28388146":"code","d251f26f":"markdown"},"source":{"6e78b263":"# Load dependencies\nimport urllib.parse\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nPATH = '..\/input\/landmark-retrieval-2020\/'\n\n# Get labels\nlabels = pd.read_csv(PATH+'train.csv', index_col='id')['landmark_id'].to_dict()\n\n# Download csn and get classes\nurl = 'https:\/\/s3.amazonaws.com\/google-landmark\/metadata\/train_label_to_category.csv'\nCLASSES = pd.read_csv(url, index_col = 'landmark_id', encoding='latin', engine='python')['category'].to_dict()","28388146":"# Input image\nimage_id = 'cd41bf948edc0340' # try changing this id to see a different landmark and its name\nimage_path = f'{PATH}\/train\/{image_id[0]}\/{image_id[1]}\/{image_id[2]}\/{image_id}.jpg'\n\n# Read file and decode\nimage = tf.io.read_file(image_path)\nimage = tf.image.decode_jpeg(image, channels=3)\nimage = tf.cast(image, tf.int64)\n\n# Identify the landmark id and name\nlandmark_id = labels[image_id]\nlandmark_name = urllib.parse.unquote(CLASSES[labels[image_id]].replace('http:\/\/commons.wikimedia.org\/wiki\/Category:', ''))\ntitle = f'{landmark_id}: {landmark_name}'\nprint (title)\n\n# Show the image with title\nplt.figure(figsize=(20,10))\nplt.axis('off')\nplt.imshow(image)\nplt.title(title, fontsize=16)\nplt.show()","d251f26f":"Check this discussion for more details: https:\/\/www.kaggle.com\/c\/landmark-retrieval-2020\/discussion\/163390"}}