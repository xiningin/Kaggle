{"cell_type":{"19b5b6c2":"code","9e15a291":"code","d49c60a6":"code","cfb3d4ff":"code","0af94f18":"code","c81c250b":"code","0cfdcabe":"code","a99f5ec3":"code","7515411f":"code","9efb0f00":"code","b522e570":"code","d8b47a4e":"code","534891bd":"code","976a9df4":"code","aba957ba":"code","1d22bff5":"code","445fb403":"code","8af5ae9d":"code","9ad80888":"code","76a06c3e":"code","2c36c916":"code","60630a29":"code","2f8d48b7":"code","204b116d":"code","71eb64cd":"code","e86e786f":"code","11790c14":"code","59581e1d":"code","e638e563":"code","6a29dda6":"code","7ddefe3f":"code","dab33ceb":"code","ecdc1ffa":"markdown","a4b2edfb":"markdown","276bccd8":"markdown","1ccc7fdb":"markdown","a923ae32":"markdown","ef40a194":"markdown"},"source":{"19b5b6c2":"import numpy as np\nimport pandas as pd\nimport random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nimport warnings\nwarnings.filterwarnings('ignore')","9e15a291":"df = pd.read_csv(\"..\/input\/car-price-prediction\/CarPrice_Assignment.csv\")\ndf.head(3)","d49c60a6":"df.shape","cfb3d4ff":"df.describe()","0af94f18":"Company = df['CarName'].apply(lambda x : x.split(\" \")[0])\ndf.insert(2,\"Company\",Company)\ndf.head(3)","c81c250b":"df.drop([\"CarName\", \"car_ID\", \"symboling\"], axis=1, inplace=True)\ndf.head(3)","0cfdcabe":"df.head(3)","a99f5ec3":"print(f\"Unique companies names {len(df.Company.str.lower().value_counts())}\")\ndf.Company.str.lower().value_counts()","7515411f":"df.Company = df.Company.str.lower()\ndf.Company.replace(\n    {\n        \"alfa-romero\":\"alfa romeo\",\n        \"maxda\":\"mazda\",\n        \"vw\": \"volkswagen\",\n        \"vokswagen\":\"volkswagen\",\n        \"porcshce\": \"porsche\",\n        \"toyouta\":\"toyota\",        \n    },\n    inplace=True\n)","9efb0f00":"print(f\"Unique companies names {len(df.Company.str.lower().value_counts())}\")\ndf.Company.str.lower().value_counts()","b522e570":"plt.figure(figsize=(15, 7))\n\nplt.subplot(1,2,1)\nplt.title('Distribution of car prices')\nsns.distplot(df.price, color=\"g\")\n\nplt.subplot(1,2,2)\nplt.title('Spread of car prices')\nsns.boxplot(y=df.price, color=\"g\")\n\nplt.show()","d8b47a4e":"df.Company.value_counts()","534891bd":"colors = []\nfor x in range(40):\n    r = random.random()\n    b = random.random()\n    g = random.random()\n    color = (r, g, b)\n    colors.append(color)","976a9df4":"plt.figure(figsize=(22, 10))\nplt.rcParams.update({'font.size': 15})\nplt1 = df.Company.value_counts().plot(kind='bar', color=colors)\nplt.title('Companies')\nplt.xlabel(\"Company\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Frequency\")\n\nplt.show()","aba957ba":"plt.subplot(1, 2, 1)\nplt1 = df.fueltype.value_counts().plot(kind='bar', color=colors)\nplt.title('Fuel Type')\nplt1.set(xlabel = 'Type', ylabel='Frequency')\n\nplt.subplot(1, 2, 2)\nplt1 = df.carbody.value_counts().plot(kind='bar', color=colors)\nplt.title('Car Type')\nplt1.set(xlabel = 'Type', ylabel='Frequency')\n\nplt.tight_layout()\nplt.show()","1d22bff5":"sns.boxplot(x=df.doornumber, y=df.price, palette=('flare'))\n\nplt.show()","445fb403":"sns.boxplot(x=df.enginetype, y=df.price, palette=('viridis'))\n\nplt.show()","8af5ae9d":"pd.DataFrame(df.groupby(['Company'])['price'].mean(). \\\n             sort_values(ascending = False)).plot.bar(color=random.choice(colors))\nplt.title('Comparing: Company to average price')\n\nplt.show()","9ad80888":"pd.DataFrame(df.groupby(['carbody'])['price'].mean(). \\\n             sort_values(ascending = False)).plot.bar(color=random.choice(colors))\nplt.title('Comparing: Carbody to average price')\n\nplt.show()","76a06c3e":"pd.DataFrame(df.groupby(['fueltype'])['price'].mean(). \\\n             sort_values(ascending = False)).plot.bar(color=random.choice(colors))\nplt.title('Comparing: Fuel type to average price')\n\nplt.show()","2c36c916":"COLOR = \"RdYlBu\"\n\ndef plot_count(feature, fig):\n    plt.subplot(4, 2, fig)\n    plt.title(feature +' Histogram')\n    sns.countplot(df[feature],palette=(COLOR))\n    plt.subplot(4,2,(fig+1))\n    plt.title(f'Comparing: {feature} to price')\n    sns.boxplot(x=df[feature], y=df.price, palette=(COLOR))\n    \nplt.figure(figsize=(20,25))\n\nplot_count('enginelocation', 1)\nplot_count('cylindernumber', 3)\nplot_count('fuelsystem', 5)\nplot_count('drivewheel', 7)\n\nplt.tight_layout()\n","60630a29":"sns.heatmap(df.corr().sort_values(by=\"price\", ascending=False).iloc[1:11,-1:], cmap=\"jet\", annot=True)","2f8d48b7":"strongest_features = df.corr().sort_values(by=\"price\", ascending=False).iloc[:11,:].index\nstrongest_features","204b116d":"df_for_model = df[strongest_features]\ndf_for_model","71eb64cd":"X = df_for_model.iloc[:,1:]\ny = df_for_model.price\n\nnp.random.seed(0)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=76)","e86e786f":"sample = X_train.sample().index[0]\nX_train.loc[[sample]]","11790c14":"y_train.loc[[sample]].to_frame()","59581e1d":"model = LinearRegression()\nmodel.fit(X_train, y_train)","e638e563":"pd.DataFrame(model.coef_, index= X.columns, columns=[\"Factor\"])\n\n# That means if enginesize + 1 then price + 86.68","6a29dda6":"y_pred = model.predict(X_test)","7ddefe3f":"model.score(X_test, y_test)","dab33ceb":"\nplt.scatter(y_test,y_pred)\nplt.title(\"Comparing: \\nX_test and y_pred\", fontsize=20)\n\nplt.xlabel('y_test', fontsize=15)\nplt.ylabel('y_pred', fontsize=15)\n\nplt.grid()\nplt.show()","ecdc1ffa":" - Renaming incorrect companies names in **\"Company\"** column","a4b2edfb":"### Data visualization","276bccd8":" - Take only company name from **\"CarName\"** column","1ccc7fdb":"- Remove **\"CarName\", \"car_ID\", \"symboling\"** columns","a923ae32":"## Reading the Data","ef40a194":"## Correlation"}}