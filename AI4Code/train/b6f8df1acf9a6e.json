{"cell_type":{"0606bd5d":"code","0c3c5f6c":"code","140c5c4a":"code","2fb32af5":"code","d313cc14":"code","c58c0729":"code","165a33f0":"code","fa3471b1":"code","52ca353b":"code","262add92":"code","08c8cea0":"code","3acbfcbd":"code","7d58921e":"code","62acefbd":"code","bb892ba9":"code","2f5ed78e":"code","6eeb4674":"code","14ad95bb":"code","41d7244d":"code","94871cc7":"code","8d892b3d":"code","6104d88f":"code","a9d60aff":"markdown","3860607d":"markdown","df3cbe3a":"markdown","5a7f38c8":"markdown","fa38c97e":"markdown","8e00f204":"markdown","7def53d8":"markdown","cc522550":"markdown","376f9058":"markdown","38fded66":"markdown","db7afe2a":"markdown","4011443d":"markdown","1262d18d":"markdown","d45f67be":"markdown"},"source":{"0606bd5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nimport calendar\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0c3c5f6c":"la = pd.read_csv('..\/input\/traffic-collision-data-from-2010-to-present.csv',parse_dates=['Date Reported'])\n\nla.info()","140c5c4a":"dataframe_rows, dataframe_cols = la.shape\nprint(\"The dimensions of the Los Angeles Collission dataset is\",dataframe_rows,\"rows and\",dataframe_cols,\"columns.\")","2fb32af5":"la.drop_duplicates()\nla.info()","d313cc14":"la.drop([\"DR Number\", # \n         \"Area ID\", # Area Name is better\n         \"Crime Code\",\n         \"Premise Code\",  # Premise Description is better\n         \"Date Reported\", # Date Occurred is better \n         \"Census Tracts\", # not used\n         \"Council Districts\", # not used\n         \"MO Codes\", # not used\n         \"LA Specific Plans\"], # not used\n         axis=1, inplace=True)","c58c0729":"\nla.describe()","165a33f0":"la['Date'] =  pd.to_datetime(la['Date Occurred'], format='%Y-%m-%dT%H:%M:%S')\n                             \n#la['year_of_date'] = la['Date'].dt.year\n#la['year'] = la['Date'].pd.year\n#la['month'] = la['Date'].pd.month\n","fa3471b1":"la['year'] = pd.DatetimeIndex(la['Date']).year\nla['month'] = pd.DatetimeIndex(la['Date']).month\nla['weekday']= pd.DatetimeIndex(la['Date']).dayofweek","52ca353b":"la_year = la[la['year']<2019] # Removing 2019 for being incomplete\nfig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(x = 'year',data = la_year,palette='bright')\nax.set_title('Collissions by year in LA');","262add92":"la_2015 = la[la['year']==2015]\n\nla_2016 = la[la['year'] == 2016]\nla_2016.head()\nla_2016.info()","08c8cea0":"# First let's visualize the number of crimes according to area name\nfig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y=\"Area Name\",data=la_2016,palette='bright')\nax.set_title('Collission in LA in 2016 by Area');","3acbfcbd":"la_2016['Zip Codes'].describe()","7d58921e":"fig,ax = plt.subplots(figsize=(12,8))\ndescending_order = la_2016['Area Name'].value_counts().sort_values(ascending=False).index\nsns.countplot(data=la_2016,y=\"Area Name\",order=descending_order)\nax.set_title('Collission in LA in 2016 by Area');","62acefbd":"# First let's visualize the number of crimes according to area name\nfig,ax = plt.subplots(figsize=(25,10))\nsns.countplot(x=\"Zip Codes\",data=la_2016,palette='bright')\nax.set_title('Collission in LA in 2016 by Zip Code');","bb892ba9":"fig,ax = plt.subplots(figsize=(12,8))\ndescending_order = la_2016['Victim Descent'].value_counts().sort_values(ascending=False).index\nsns.countplot(data=la_2016,y=\"Victim Descent\",order=descending_order)\nax.set_title('Victim Ethnic in collissions in LA in 2016 by Area');","2f5ed78e":"la_2016['Victim Age'].describe()","6eeb4674":"\nfig,ax = plt.subplots(figsize=(12,18))\nsns.countplot(y=\"Victim Age\",data=la_2016,palette='bright')\nax.set_title('Victim Ages in collission in LA in 2016 ');","14ad95bb":"fig,ax = plt.subplots(figsize=(12,18))\ndescending_order = la_2016['Victim Age'].value_counts().sort_values(ascending=False).index\nsns.countplot(data=la_2016,y=\"Victim Age\",order=descending_order)\nax.set_title('Victim Age in collissions in LA in 2016 _ sorted ny number of collissions');","41d7244d":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(data=la_2016,x=\"Victim Sex\",palette='bright')\nax.set_title('Victim gender in collissions in LA in 2016');","94871cc7":"\nfig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(x = 'month',data = la_2016,palette='bright')\nax.set_xticklabels([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"], fontsize=9)\nax.set_title('Collissions by months in LA in 2016');","8d892b3d":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(x = 'weekday',data = la_2016,palette='bright')\nax.set_xticklabels([\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"], fontsize=10)\nax.set_title('Collissions by day of the week in LA in 2016');","6104d88f":"fig,ax = plt.subplots(figsize=(34,18))\nsns.countplot(x = 'Date',data = la_2016)\n\nax.set_title('Collissions by dates in LA in 2016');","a9d60aff":"Check for any row duplication","3860607d":"Remove row duplication","df3cbe3a":"Victim age, sorted by number of collissions","5a7f38c8":"    Format date and time","fa38c97e":"Loading data file","8e00f204":"Remove some columns","7def53d8":"Victim","cc522550":"    Collission by gender ","376f9058":"        by dates","38fded66":"year by year comparison. Excluding 2019 for being incomplete","db7afe2a":"    Time series","4011443d":"select by year","1262d18d":"Victims by Age, sorted by age","d45f67be":"Age of victims"}}