{"cell_type":{"793ce1c4":"code","04d4411e":"code","55812072":"code","82f8fb9d":"code","a42a0169":"code","a4a41940":"code","6a0c04bc":"code","998112b3":"code","65386bb8":"code","ac533f5d":"code","275b9dbf":"code","9ae646d9":"code","485ca462":"code","f448c12a":"code","58a1473d":"code","3775921d":"code","f4cdc574":"code","4a05d342":"code","168cd290":"code","a286f5c6":"code","93739af2":"code","a6a65a4e":"code","675fc358":"code","f83b5119":"code","44235b5d":"code","cc3c97fa":"code","4d259482":"code","ad4397be":"code","d1c4d9f4":"code","2dd59f4b":"code","3a2498d4":"code","f28d6a4c":"code","92ff6c9f":"markdown"},"source":{"793ce1c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","04d4411e":"import numpy as np\nimport pandas as pd\nfrom sklearn import model_selection, preprocessing, metrics\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ntrain =  pd.read_csv('..\/input\/train.csv')\n\ntest = pd.read_csv('..\/input\/test.csv')","55812072":"train.shape ,test.shape","82f8fb9d":"train.head()","a42a0169":"test.head()","a4a41940":"train.dtypes","6a0c04bc":"train.describe()","998112b3":"train['groupId'].nunique()","65386bb8":"train.isnull().any()","ac533f5d":"test.isnull().any()","275b9dbf":"sns.distplot(train['winPlacePerc'],bins=100)","9ae646d9":"train['groupId'].nunique()","485ca462":"train['Id'].nunique()","f448c12a":"test['groupId'].nunique()","58a1473d":"train['matchId'].nunique()","3775921d":"sns.distplot(train['damageDealt'],bins=10)","f4cdc574":"sns.distplot(np.log1p(train['damageDealt']),bins=10)","4a05d342":"sns.distplot(train['killPlace'],bins=100)","168cd290":"sns.distplot(train['killPoints'],bins=10)","a286f5c6":"sns.boxplot(train['killPoints'])","93739af2":"sns.violinplot(train['killPoints'])","a6a65a4e":"sns.distplot(train['kills'],bins=10)","675fc358":"sns.boxplot(train['kills'])","f83b5119":"sns.distplot(train['winPoints'])","44235b5d":"sns.boxplot(train['winPoints'])","cc3c97fa":"X=train.drop(['Id','winPlacePerc'],axis=1)\nY=train['winPlacePerc']\nte=test.drop(['Id'],axis=1)","4d259482":"from sklearn.model_selection import train_test_split\ndev_X, val_X, dev_y, val_y = train_test_split(X, Y, test_size = 0.1, random_state = 42)","ad4397be":"# from sklearn.metrics import roc_auc_score\n# from catboost import CatBoostRegressor\n# # categorical_features_indices = [0,1,2,3,4,5,6,7,8,9]\n\n# model=CatBoostRegressor(iterations=100, depth=12, learning_rate=0.09, loss_function= 'MAE')\n# model.fit(dev_X,dev_y,plot=True)","d1c4d9f4":"import lightgbm as lgb \nimport xgboost as xgb\n\ndef run_lgb(train_X, train_y, val_X, val_y, test_X):\n    params = {\n    'learning_rate': 0.1,\n    'max_depth': -1,\n    'num_leaves': 40,\n    'feature_fraction': 0.6,\n    'min_data_in_leaf': 100,\n    'lambda_l2': 4,\n    'objective': 'regression_l2', \n    'metric': 'mae',\n    'seed': 42}\n\n    \n    lgtrain = lgb.Dataset(train_X, label=train_y)\n    lgval = lgb.Dataset(val_X, label=val_y)\n    evals_result = {}\n    model = lgb.train(params, lgtrain, 5000, \n                      valid_sets=[lgtrain, lgval], \n                      early_stopping_rounds=100, \n                      verbose_eval=150, \n                      evals_result=evals_result)\n    \n    pred_test_y =model.predict(test_X, num_iteration=model.best_iteration)\n    return pred_test_y, model, evals_result","2dd59f4b":"pred_test, model, evals_result = run_lgb(dev_X, dev_y, val_X, val_y,te)\nprint(\"LightGBM Training Completed...\")","3a2498d4":"test['winPlacePerc'] = pred_test\nsubmission = test[['Id', 'winPlacePerc']]\nsubmission.to_csv('submission_lgb.csv', index=False)","f28d6a4c":"print(\"Features Importance...\")\ngain = model.feature_importance('gain')\nfeatureimp = pd.DataFrame({'feature':model.feature_name(), \n                   'split':model.feature_importance('split'), \n                   'gain':100 * gain \/ gain.sum()}).sort_values('gain', ascending=False)\nprint(featureimp[:50])","92ff6c9f":"**Importing the Data** "}}