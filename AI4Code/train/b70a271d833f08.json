{"cell_type":{"cd464fc3":"code","a16b8721":"code","88ff7523":"code","aabe67ba":"code","d67a6331":"code","0d0662cb":"code","20f16e83":"code","e795a4fd":"code","9aece271":"code","b156bf2a":"code","89db75d6":"code","8cce72f8":"code","e8d62722":"code","e4285d55":"code","ed83bb16":"code","d829ae8c":"code","e9f56bfa":"code","fad9bd02":"code","e4118414":"code","970a3b96":"code","4a7ace5f":"code","91bdd6b8":"code","23458257":"code","6735baf9":"code","2699ae81":"code","d90dbee8":"code","546257f2":"code","c777158c":"code","7a795d53":"code","33cbe65b":"code","7b64e688":"code","d1d72f44":"code","d4afd7de":"code","64f0e04e":"code","459f4877":"code","e5fdf19f":"code","87ba245c":"code","edfacd1f":"code","309e12cc":"code","8901157b":"code","ab2188d8":"code","77871afb":"code","0decf9ba":"code","f7104eb0":"code","6d99ea27":"code","2f4755e9":"code","f907322d":"code","cac0c118":"code","3b605296":"markdown","c8dafb5b":"markdown","b6c78ad6":"markdown","26a8ac25":"markdown","dcc27046":"markdown","90329fd4":"markdown","41f1928b":"markdown","b2f235c4":"markdown","3b5f8a7b":"markdown","6fba681b":"markdown","26dc33a5":"markdown","0dbf65a2":"markdown","5dfc15bd":"markdown","281dd096":"markdown","fb8ec752":"markdown","e39a0b9b":"markdown","ca85b1e2":"markdown","7422a2a2":"markdown","90c1ac7e":"markdown","3c4900d2":"markdown","e21980e4":"markdown","94ffe0b1":"markdown","5c9e1250":"markdown","de6d8b16":"markdown","d35890ff":"markdown","7ecde074":"markdown","9a8a54e1":"markdown","261c62b9":"markdown","29d3e143":"markdown","a6ea8cd7":"markdown","3458c649":"markdown","da18f4bd":"markdown","6bf3452a":"markdown","af00e1fa":"markdown","6e9e2ecc":"markdown","c5dd3f49":"markdown"},"source":{"cd464fc3":"#import libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","a16b8721":"#load data\ndata = pd.read_csv('..\/input\/googleplaystore.csv')","88ff7523":"#show data first 5 record\ndata.head()","aabe67ba":"#show data last 5 record\ndata.tail()","d67a6331":"#get information about data\ndata.info()","0d0662cb":"data = data.drop([\"App\",\"Current Ver\",\"Android Ver\"],1)","20f16e83":"#detect null cols and null rate\nnulls = [i for i in data.isna().any().index if data.isna().any()[i]==True]\nrates = []\ncounts = []\nfor i in nulls:    \n    rates.append((data[i].isna().sum()\/data.shape[0])*100)\n    counts.append(data[i].isna().sum())\nnull_df = pd.DataFrame.from_dict({\"Col\":nulls,\"Count\":counts,\"Null_Rates\":rates})\nnull_df","e795a4fd":"#delete Type,Content Rating, Current Ver, Android Ver null values row\ndf_train = data.copy()\nfor i in ['Type','Content Rating']:\n    df_train = df_train.drop(df_train.loc[df_train[i].isnull()].index,0)\ndf_train.info()","9aece271":"df_train.Rating.describe()","b156bf2a":"#fill rating null values with mean quartiles\nx = sum(df_train.Rating.describe()[4:8])\/4\ndf_train.Rating = df_train.Rating.fillna(x)\nprint(\"Dataset contains \",df_train.isna().any().sum(),\" Nan values.\")","89db75d6":"df_train = df_train[df_train[\"Rating\"]<=5]","8cce72f8":"#get unique values in Catagory feature \ndf_train.Category.unique()","e8d62722":"# convert to categorical Categority by using one hot tecnique \ndf_dummy = df_train.copy()\ndf_dummy.Category = pd.Categorical(df_dummy.Category)\n\nx = df_dummy[['Category']]\ndel df_dummy['Category']\n\ndummies = pd.get_dummies(x, prefix = 'Category')\ndf_dummy = pd.concat([df_dummy,dummies], axis=1)\ndf_dummy.head()","e4285d55":"#Genres unique val\ndf_dummy[\"Genres\"].unique()","ed83bb16":"plt.figure(figsize=(25,6))\nsns.barplot(x=df_dummy.Genres.value_counts().index,y=df_dummy.Genres.value_counts())\nplt.xticks(rotation=80)\nplt.title(\"Genres and their counts\")\nplt.show()","d829ae8c":"np.sort(df_dummy.Genres.value_counts())","e9f56bfa":"lists = []\nfor i in df_dummy.Genres.value_counts().index:\n    if df_dummy.Genres.value_counts()[i]<20:\n        lists.append(i)\n\nprint(len(lists),\" genres contains too few (<20) sample\")\ndf_dummy.Genres = ['Other' if i in lists else i for i in df_dummy.Genres] ","fad9bd02":"df_dummy.Genres = pd.Categorical(df_dummy['Genres'])\nx = df_dummy[[\"Genres\"]]\ndel df_dummy['Genres']\ndummies = pd.get_dummies(x, prefix = 'Genres')\ndf_dummy = pd.concat([df_dummy,dummies], axis=1)","e4118414":"df_dummy.shape","970a3b96":"#get unique values in Contant Rating feature \ndf_dummy['Content Rating'].value_counts(dropna=False)","4a7ace5f":"#object(string) values transform to ordinal in Content Rating Feature without nan\ndf = df_dummy.copy()\ndf['Content Rating'] = df['Content Rating'].map({'Unrated':0.0,\n                                                 'Everyone':1.0,\n                                                 'Everyone 10+':2.0,\n                                                 'Teen':3.0,\n                                                 'Adults only 18+':4.0,\n                                                 'Mature 17+':5.0})\ndf['Content Rating'] = df['Content Rating'].astype(float)\ndf.head()","91bdd6b8":"#change type to float\ndf2 = df.copy()\ndf2['Reviews'] = df2['Reviews'].astype(float)","23458257":"df2[\"Size\"].value_counts()","6735baf9":"#clean 'M','k', fill 'Varies with device' with median and transform to float \nlists = []\nfor i in df2[\"Size\"]:\n    if 'M' in i:\n        i = float(i.replace('M',''))\n        i = i*1000000\n        lists.append(i)\n    elif 'k' in i:\n        i = float(i.replace('k',''))\n        i = i*1000\n        lists.append(i)\n    else:\n        lists.append(\"Unknown\")\n    \nk = pd.Series(lists)\nmedian = k[k!=\"Unknown\"].median()\nk = [median if i==\"Unknown\" else i for i in k]\ndf2[\"Size\"] = k\n\ndel k,median,lists","2699ae81":"#clean 'M'and transform to float \nprint(\"old: \",df['Size'][10],\" new: \",df2['Size'][10])","d90dbee8":"#clean '$' and transform to float \ndf2['Price'] = [ float(i.split('$')[1]) if '$' in i else float(0) for i in df2['Price'] ] ","546257f2":"print(\"old: \",df['Price'][9054],\" new: \",df2['Price'][9054])","c777158c":"df2.Installs.unique()","7a795d53":"df2[\"Installs\"] = [ float(i.replace('+','').replace(',', '')) if '+' in i or ',' in i else float(0) for i in df2[\"Installs\"] ]","33cbe65b":"print(\"old: \",df['Installs'][0],\" new: \",df2['Installs'][0])","7b64e688":"df2[\"Type\"].unique()","d1d72f44":"df2.Type = df2.Type.map({'Free':0,\"Paid\":1})","d4afd7de":"df2[\"Last Updated\"][:3]","64f0e04e":"from datetime import datetime\ndf3 = df2.copy()\ndf3[\"Last Updated\"] = [datetime.strptime(i, '%B %d, %Y') for i in df3[\"Last Updated\"]]","459f4877":"df3 = df3.set_index(\"Last Updated\")\ndf4 = df3.sort_index()\ndf4.head()","e5fdf19f":"df4.isna().any().sum()","87ba245c":"data = df4.copy()\ndata.shape","edfacd1f":"data.info()","309e12cc":"#additional libraries\nfrom scipy.stats import norm\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\nstyle = sns.color_palette(\"ch:2.5,-.2,dark=.3\")","8901157b":"#histogram\nplt.figure(figsize=(10,5))\nsns.distplot(data['Rating'],color='g');\nplt.title(\"Rating Distrubition\")\nplt.show()","ab2188d8":"#skewness and kurtosis\nprint(\"Skewness: %f\" % data['Rating'].skew())\nprint(\"Kurtosis: %f\" % data['Rating'].kurt())","77871afb":"#histogram\nplt.figure(figsize=(10,5))\nsns.countplot(data['Type'],color='red',palette=style);\nplt.title(\"Type Distrubition\")\nplt.show()","0decf9ba":"#histogram\nplt.figure(figsize=(8,6))\nsns.barplot(x=data['Installs'],y=data.Reviews,color='b',palette=sns.color_palette(\"ch:2.5,-.2,dark=.3\"));\nplt.title(\"Installs Distrubition\")\nplt.xticks(rotation=80)\nplt.show()","f7104eb0":"#boxplot plot installs\/rates\nax = plt.figure(figsize=(10,5))\nsns.set()\nsns.boxplot(x=\"Installs\", y=\"Rating\", data=data)\nplt.title(\"Installs\/Rating\")\nplt.xticks(rotation=80)\nplt.show()","6d99ea27":"chart_data = data.loc[:,\"Category_ART_AND_DESIGN\":\"Category_WEATHER\"]\nchart_data[\"Rating\"] = data[\"Rating\"]\nfor i in range(0, len(chart_data.columns), 5):\n    sns.pairplot(data=chart_data,\n                x_vars=chart_data.columns[i:i+5],\n                y_vars=['Rating'])","2f4755e9":"import math\n#del chart_data[\"Rating\"]\nl = len(chart_data.columns.values)\nr = math.ceil(l\/5)\n\nchart_data[\"Type\"] = data[\"Type\"]\nj=1\nplt.subplots(figsize=(15,10),tight_layout=True)\nfor i in chart_data.columns.values:\n    if i==\"Type\":\n        continue\n    d = chart_data[chart_data[i]==1]\n    plt.subplot(r, 5, j)\n    plt.hist(d[\"Type\"])\n    plt.title(i)\n    j +=1\n    \nplt.show()","f907322d":"chart_data = data[data[\"Price\"]>0]\nchart_data = chart_data.sort_values(by=['Price'],ascending=False)\nchart_data = chart_data.head(100)\n#chart_data\ndic = {}\ncols = chart_data.loc[:,\"Category_ART_AND_DESIGN\":\"Category_WEATHER\"].columns.values\nfor i in cols:\n    dic[i]=0\n    \nfor i in range(100):\n    x = chart_data.iloc[[i]]\n    x = x.loc[:,\"Category_ART_AND_DESIGN\":\"Category_WEATHER\"]\n    for j in x.columns.values:\n        if (x[j][0] == 1):\n            dic[j]= dic[j] + 1\n\nplt.figure(figsize=(12,5))\nplt.bar(dic.keys(), dic.values(), color='g')\nplt.xticks(rotation=85)\nplt.title(\"Categories of the 100 most expensive applications\")\nplt.show()\n    ","cac0c118":"fig,ax = plt.subplots(figsize=(8,7))\nax = sns.heatmap(data[[\"Reviews\",\"Price\",\"Rating\",\"Installs\",\"Size\"]].corr(), annot=True,linewidths=.5,fmt='.1f')\nplt.show()","3b605296":"<h3> Finish Tranformation <\/h3>","c8dafb5b":"Let's look corelation.","b6c78ad6":"Missing rates are very low. I think, We can delete specially Type,Content Rating easly. \n\nBut, we need check Rating.","26a8ac25":"<h3> 5. Size <\/h3>","dcc27046":"<h3> 1. Category <\/h3> ","90329fd4":"* **The majority of apps in the market are free.**","41f1928b":"If We try to predict Rating, I think App, Current ver, Android Ver are unnecessery cols. So I will delete them.","b2f235c4":"This variable is ordinal.","3b5f8a7b":"Rating should **not** to be up to 5 ","6fba681b":"<h3> 9. Last Updated <\/h3>","26dc33a5":"<H3>GREAT !!!<\/H3>","0dbf65a2":"\nAs Installs increases, we can see that Rating gets higher values.\n\n* **This means that many downloaded applications have higher ratings.**","5dfc15bd":"![](https:\/\/image.flaticon.com\/icons\/png\/128\/202\/202821.png)\n\nWelcome to my kernel.\n\nIn this kernel, We will try to discovering Android Market with EDA.\n\nI'm new in data science. Your feedback is very important to me. If you like this kernel, please vote :)\n\nLet's start.","281dd096":"<h2>Data Transformation<\/h2>","fb8ec752":"* **Medical, Personalization, Game are the categories with the most paid applications.**","e39a0b9b":"* **We see that there are too many comments in applications that are downloaded too much.**\n\nWe've already been waiting for this.","ca85b1e2":"75 percet of rating between 4 and 5.","7422a2a2":"Some subcategories have very few examples. Therefore, I will classify those who do not have a significant number of examples as others.","90c1ac7e":"<h3> 2. Genres <\/h3> ","3c4900d2":"There are NaN values in Rating, Type, Content Rating. We must handle them. \n","e21980e4":"**Thank you for reading. if you like, Don't forget to vote.**\n\n**See you ..**","94ffe0b1":"Apps generally have good rates.","5c9e1250":"* **On the one hand, beauty, education, events, weather caught my attention. Because no application in these categories has a rating below 3.**\n\n* **On the one hand, Finance, Tools, Family caught my attention. Because the applications in these categories are both very bad and very good rating. So users of applications in these categories can be more relevant and more selective. Perhaps people may expect an application from these categories.**","de6d8b16":"<h3>8. Type<\/h3>","d35890ff":"<h3>4. Reviews<\/h3>","7ecde074":"* **Medical, Finance, Family and Lifestyle applications are the most valuable applications. They must be giving information worth spending money for people.**\n* **I think the places where people spend the most money can be the places they care about the most. Apparently Finance, Family and Madicine are very important to people.**","9a8a54e1":"<h3> 6. Price <\/h3>","261c62b9":"* **There is a clearly relationship between Installs and Reviews. It like that in real life.**","29d3e143":"Clean '+' and ',' char. And transform object(string) to float.","a6ea8cd7":"<h2>Missing Values<\/h2>","3458c649":"<h1> Let's do real EDA on our data :) <\/h1>","da18f4bd":"<h3> 7. Installs <\/h3>","6bf3452a":"For machine learning, we need to convert objects to numbers.","af00e1fa":"Let's see what happened to the data. :)","6e9e2ecc":"finally, lets check Nan","c5dd3f49":"<h3> 3. Contant Rating <\/h3> "}}