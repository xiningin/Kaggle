{"cell_type":{"2468350e":"code","6a725fe7":"code","db0daf30":"code","45a7446d":"code","29d07144":"code","607b4b18":"code","844d881b":"code","651ee8e6":"code","7c4fea9c":"code","03509375":"code","c335aee2":"code","0f0f1498":"code","6ca66ea1":"code","5e722f4c":"code","4b8d0108":"code","2e0fa47d":"code","55289b21":"code","ce2f8e70":"code","5cfe1c3d":"code","4fa8a8b4":"code","596ae76f":"code","b275b2f0":"markdown","8ef06c6d":"markdown","c282f463":"markdown","ab069fb0":"markdown","631f4a4f":"markdown","8a32a2cd":"markdown","defa1166":"markdown","2c09eb6a":"markdown","830fa343":"markdown","198290f2":"markdown","68de9a9f":"markdown","e9fbc87c":"markdown","0abaf7a5":"markdown","a4af0a33":"markdown"},"source":{"2468350e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\ndata=pd.read_csv('..\/input\/Admission_Predict_Ver1.1.csv')\n# Any results you write to the current directory are saved as output.","6a725fe7":"data.info()","db0daf30":"data=data.drop('Serial No.',axis=1)","45a7446d":"data.head()","29d07144":"import seaborn as sns\nsns.pairplot(data=data, kind='reg')","607b4b18":"data.columns","844d881b":"y=data['Chance of Admit ']","651ee8e6":"x=data.drop('Chance of Admit ',axis=1)\nx.head()","7c4fea9c":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33)","03509375":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\n","c335aee2":"model.fit(x_train,y_train)","0f0f1498":"model.predict(x_test)","6ca66ea1":"predict=model.predict(x_test)","5e722f4c":"y_test.head()","4b8d0108":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test,predict)","2e0fa47d":"from sklearn.metrics import mean_absolute_error\nmean_absolute_error(y_test,predict)","55289b21":"marks=['320','120','4','4.0','3.0','8.00','1']\nmarks=pd.DataFrame(marks).T","ce2f8e70":"marks","5cfe1c3d":"model.predict(marks)","4fa8a8b4":"value=model.predict(marks)","596ae76f":"print(\"My chance of selection:\", value)","b275b2f0":"**Lets take a look at data.**","8ef06c6d":"Lets split train and test data.","c282f463":"As per my observation both values are nearly equal.\n\nLets calculate mean squared error in chance of selection.","ab069fb0":"We don't need serial No. It will not affect your chance of selection so Let's remove it.","631f4a4f":"From the above plot we can see that GRE Score,TOEFL Score, University Rating,SOP,LOR,CGPA,Research are good correlated with   your Chance of Admit.  \nSo We will try first with all features.\nLets look at columns.","8a32a2cd":"Let's train the data.","defa1166":"Lets see what are my real chance of selection.","2c09eb6a":"Now We have to understand how our data is correlated. We gonna draw a pairplot with with all its features.\n\nSo Let's plot.","830fa343":"As we have seen that all features are positively correlated. So lets take linear regression model and apply on data.","198290f2":"This value is  small. \n\nLets calculate mean absolute error in chance of selection.","68de9a9f":"This means we will get 4% error in chance of selection.\nWe have to minimize but for now lets consider it as tolerable.\n\nNow I really want to calculate my chance of selection.\n\nLets consider below are my marks.","e9fbc87c":"Lets predict my chance of selection.","0abaf7a5":"Lets predict the chance of selection on  test data.","a4af0a33":"Check your chance of selection.\n\n**Let me know If you have any suggestion.\n\nPlease upvote if you like.**"}}