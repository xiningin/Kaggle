{"cell_type":{"c4a75cfc":"code","e66bed52":"code","09258246":"code","ebc9d539":"code","0bc67647":"code","96ff37b8":"code","9051134a":"code","5e3d6e06":"code","94228fd7":"code","4a04eb40":"code","948ec9a0":"code","8f78690b":"code","1c35b16b":"code","a25b8539":"code","3b956fd5":"code","b3935263":"code","d366403d":"code","059a4b0e":"code","81ef0e81":"code","735bbe9e":"code","67498c87":"code","eb83c140":"code","6919199b":"code","372e1454":"code","9d96bede":"code","93a498dd":"code","78a6601b":"code","59a21ef9":"code","491e256d":"code","96862ee3":"code","86ef13d8":"code","43524dfa":"markdown","8a3959bb":"markdown","d78ce606":"markdown","952196dc":"markdown","5e4dd037":"markdown","cf9e7b2c":"markdown","9373d2c9":"markdown","a9c5d761":"markdown","14af0c5b":"markdown","1cb0f6df":"markdown","13a7f8d0":"markdown","2ec34d54":"markdown","0cf8e851":"markdown","6e88716e":"markdown","da092779":"markdown","b3461e70":"markdown","cbe76b38":"markdown","b80b8808":"markdown","e3ba0a52":"markdown","4737b7d9":"markdown","7921ffb7":"markdown","a576ffbc":"markdown","9c533958":"markdown","5821ea16":"markdown","f144bd84":"markdown","5fcc36fe":"markdown","db673a80":"markdown","91461dba":"markdown","77f52769":"markdown","76c9c89d":"markdown","41c05e13":"markdown","18a8a4c5":"markdown","f6b577bf":"markdown","f5b1ebcd":"markdown","6583fa53":"markdown","a1524ee7":"markdown","4383c4a4":"markdown"},"source":{"c4a75cfc":"!pip install openpyxl","e66bed52":"import numpy as np\nimport pandas as pd\nimport os\nimport math\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib.pyplot as plt \nplt.rcParams[\"figure.figsize\"] = [16, 12]\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/ny-math-results\/2013-2019\/\"]).decode(\"utf8\"))\n","09258246":"borough_All = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='All', engine='openpyxl') \nborough_SWD = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='SWD', engine='openpyxl') \nborough_Eth = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Ethnicity', engine='openpyxl') \nborough_Gender = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Gender', engine='openpyxl') \nborough_ES = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Econ Status', engine='openpyxl') \nborough_ELL = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/borough-math-results-2013-2019-(public).xlsx',\n                       sheet_name='ELL', engine='openpyxl') ","ebc9d539":"citywide_All = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='All', engine='openpyxl') \ncitywide_SWD = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='SWD', engine='openpyxl') \ncitywide_Eth = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Ethnicity', engine='openpyxl') \ncitywide_Gender = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Gender', engine='openpyxl') \ncitywide_ES = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Econ Status', engine='openpyxl') \ncitywide_ELL = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/citywide-math-results-2013-2019-(public).xlsx',\n                       sheet_name='ELL', engine='openpyxl') ","0bc67647":"district_All = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='All', engine='openpyxl') \ndistrict_SWD = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='SWD', engine='openpyxl') \ndistrict_Eth = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Ethnicity', engine='openpyxl') \ndistrict_Gender = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Gender', engine='openpyxl') \ndistrict_ES = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Econ Status', engine='openpyxl') \ndistrict_ELL = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/district-math-results-2013-2019-(public).xlsx',\n                       sheet_name='ELL', engine='openpyxl') ","96ff37b8":"# Este es un dataset grande por lo que tardara bastante tiempo en ejecutarse.\n\nschool_All = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='All', engine='openpyxl') \nschool_SWD = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='SWD', engine='openpyxl') \nschool_Eth = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Ethnicity', engine='openpyxl') \nschool_Gender = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Gender', engine='openpyxl') \nschool_ES = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='Econ Status', engine='openpyxl') \nschool_ELL = pd.read_excel('..\/input\/ny-math-results\/2013-2019\/school-math-results-2013-2019-(public).xlsx',\n                       sheet_name='ELL', engine='openpyxl') ","9051134a":"# Numero de filas\nprint('Num. filas: ',len(school_All.index))\n\n# Numero de columnas\nprint('Num. columnas: ',len(school_All.columns))","5e3d6e06":"citywide_All.dtypes","94228fd7":"school_All.dtypes","4a04eb40":"def hasS():\n    print('Dataframe borough_All: ',borough_All['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe borough_SWD: ',borough_SWD['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe borough_Eth: ',borough_Eth['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe borough_Gender: ',borough_Gender['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe borough_ES: ',borough_ES['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe borough_ELL: ',borough_ELL['% Level 2'].isin(['s']).astype(int).sum())\n\n    print('Dataframe citywide_All: ',citywide_All['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe citywide_SWD: ',citywide_SWD['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe citywide_Eth: ',citywide_Eth['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe citywide_Gender: ',citywide_Gender['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe citywide_ES: ',citywide_ES['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe citywide_ELL: ',citywide_ELL['% Level 2'].isin(['s']).astype(int).sum())\n\n    print('Dataframe district_All: ',district_All['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe district_SWD: ',district_SWD['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe district_Eth: ',district_Eth['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe district_Gender: ',district_Gender['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe district_ES: ',district_ES['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe district_ELL: ',district_ELL['% Level 2'].isin(['s']).astype(int).sum())\n\n    print('Dataframe school_All: ',school_All['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe school_SWD: ',school_SWD['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe school_Eth: ',school_Eth['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe school_Gender: ',school_Gender['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe school_ES: ',school_ES['% Level 2'].isin(['s']).astype(int).sum())\n    print('Dataframe school_ELL: ',school_ELL['% Level 2'].isin(['s']).astype(int).sum())\nhasS()","948ec9a0":"cols = ['Number Tested', 'Mean Scale Score', '# Level 1', '% Level 1',\n       '# Level 2', '% Level 2', '# Level 3', '% Level 3', '# Level 4',\n       '% Level 4', '# Level 3+4', '% Level 3+4']\n\ndistrict_Eth[cols] = school_All[cols].replace({'s': -1})\n\nschool_All[cols] = school_All[cols].replace({'s': -1})\nschool_SWD[cols] = school_SWD[cols].replace({'s': -1})\nschool_Eth[cols] = school_Eth[cols].replace({'s': -1})\nschool_Gender[cols] = school_Gender[cols].replace({'s': -1})\nschool_ES[cols] = school_ES[cols].replace({'s': -1})\nschool_ELL[cols] = school_ELL[cols].replace({'s': -1})\n\nhasS()\nschool_All.dtypes","8f78690b":"borough_All = borough_All.drop(['Category'], axis=1)\ncitywide_All = citywide_All.drop(['Category'], axis=1)\ndistrict_All = district_All.drop(['Category'], axis=1)\nschool_All = school_All.drop(['Category'], axis=1)","1c35b16b":"school_All = school_All.drop(['Unnamed: 0'], axis=1)\nschool_SWD = school_SWD.drop(['Unnamed: 0'], axis=1)\nschool_Gender = school_Gender.drop(['Unnamed: 0'], axis=1)\nschool_ELL = school_ELL.drop(['Unnamed: 0'], axis=1)\nschool_Eth = school_Eth.drop(['Unnamed: 0'], axis=1)\nschool_ES = school_ES.drop(['Unnamed: 0'], axis=1)","a25b8539":"def hasNA():\n    print('Dataframe borough_All: ',borough_All.isna().astype(int).sum().sum())\n    print('Dataframe borough_SWD: ',borough_SWD.isna().astype(int).sum().sum())\n    print('Dataframe borough_Eth: ',borough_Eth.isna().astype(int).sum().sum())\n    print('Dataframe borough_Gender: ',borough_Gender.isna().astype(int).sum().sum())\n    print('Dataframe borough_ES: ',borough_ES.isna().astype(int).sum().sum())\n    print('Dataframe borough_ELL: ',borough_ELL.isna().astype(int).sum().sum())\n\n    print('Dataframe citywide_All: ',citywide_All.isna().astype(int).sum().sum())\n    print('Dataframe citywide_SWD: ',citywide_SWD.isna().astype(int).sum().sum())\n    print('Dataframe citywide_Eth: ',citywide_Eth.isna().astype(int).sum().sum())\n    print('Dataframe citywide_Gender: ',citywide_Gender.isna().astype(int).sum().sum())\n    print('Dataframe citywide_ES: ',citywide_ES.isna().astype(int).sum().sum())\n    print('Dataframe citywide_ELL: ',citywide_ELL.isna().astype(int).sum().sum())\n\n    print('Dataframe district_All: ',district_All.isna().astype(int).sum().sum())\n    print('Dataframe district_SWD: ',district_SWD.isna().astype(int).sum().sum())\n    print('Dataframe district_Eth: ',district_Eth.isna().astype(int).sum().sum())\n    print('Dataframe district_Gender: ',district_Gender.isna().astype(int).sum().sum())\n    print('Dataframe district_ES: ',district_ES.isna().astype(int).sum().sum())\n    print('Dataframe district_ELL: ',district_ELL.isna().astype(int).sum().sum())\n\n    print('Dataframe school_All: ',school_All.isna().astype(int).sum().sum())\n    print('Dataframe school_SWD: ',school_SWD.isna().astype(int).sum().sum())\n    print('Dataframe school_Eth: ',school_Eth.isna().astype(int).sum().sum())\n    print('Dataframe school_Gender: ',school_Gender.isna().astype(int).sum().sum())\n    print('Dataframe school_ES: ',school_ES.isna().astype(int).sum().sum())\n    print('Dataframe school_ELL: ',school_ELL.isna().astype(int).sum().sum())\nhasNA()","3b956fd5":"# Agrupamos por grado y a\u00f1o\ndf = school_All.groupby(['Grade', 'Year']).agg({'Number Tested': 'sum', 'Mean Scale Score': 'mean'}).reset_index()\ndf.head()","b3935263":"plt.style.use('seaborn')\nfig,axes = plt.subplots(2,1)\nfig.set_figheight(10)\nfig.set_figwidth(15)\n\naxes[0].plot(df[df['Grade'] == 3]['Year'], df[df['Grade'] == 3]['Number Tested'], label='Grade 3')\naxes[0].plot(df[df['Grade'] == 4]['Year'], df[df['Grade'] == 4]['Number Tested'], label='Grade 4')\naxes[0].plot(df[df['Grade'] == 5]['Year'], df[df['Grade'] == 5]['Number Tested'], label='Grade 5')\naxes[0].set_xlabel('Year')\naxes[0].set_ylabel('Number de alumnos')\naxes[0].set_title('N\u00ba alumnos presentados por grado (3,4 y 5)')\naxes[0].legend(loc='best')\n\naxes[1].plot(df[df['Grade'] == 6]['Year'], df[df['Grade'] == 6]['Number Tested'], label='Grade 6')\naxes[1].plot(df[df['Grade'] == 7]['Year'], df[df['Grade'] == 7]['Number Tested'], label='Grade 7')\naxes[1].plot(df[df['Grade'] == 8]['Year'], df[df['Grade'] == 8]['Number Tested'], label='Grade 8')\naxes[1].set_xlabel('Year')\naxes[1].set_ylabel('Number de alumnos')\naxes[1].set_title('N\u00ba alumnos presentados por grado (6,7 y 8)')\naxes[1].legend(loc='best')\n\nplt.tight_layout()\nplt.show()","d366403d":"plt.style.use('seaborn')\nfig,axes = plt.subplots(2,1)\nfig.set_figheight(10)\nfig.set_figwidth(15)\n\naxes[0].plot(df[df['Grade'] == 3]['Year'], df[df['Grade'] == 3]['Mean Scale Score'], label='Grade 3')\naxes[0].plot(df[df['Grade'] == 4]['Year'], df[df['Grade'] == 4]['Mean Scale Score'], label='Grade 4')\naxes[0].plot(df[df['Grade'] == 5]['Year'], df[df['Grade'] == 5]['Mean Scale Score'], label='Grade 5')\naxes[0].set_xlabel('Year')\naxes[0].set_ylabel('Number de alumnos')\naxes[0].set_title('N\u00ba alumnos presentados por grado (3,4 y 5)')\naxes[0].legend(loc='best')\n\naxes[1].plot(df[df['Grade'] == 6]['Year'], df[df['Grade'] == 6]['Mean Scale Score'], label='Grade 6')\naxes[1].plot(df[df['Grade'] == 7]['Year'], df[df['Grade'] == 7]['Mean Scale Score'], label='Grade 7')\naxes[1].plot(df[df['Grade'] == 8]['Year'], df[df['Grade'] == 8]['Mean Scale Score'], label='Grade 8')\naxes[1].set_xlabel('Year')\naxes[1].set_ylabel('Number de alumnos')\naxes[1].set_title('N\u00ba alumnos presentados por grado (6,7 y 8)')\naxes[1].legend(loc='best')\n\nplt.tight_layout()\nplt.show()","059a4b0e":"years = [2013,2014,2015,2016,2017]\ngrades = [3,4,5,6,7,8]\ndf = school_All[school_All['Year'].isin(years)]\n\ndf_means = pd.DataFrame(columns=['Year', 'Grade', 'lv1','lv2','lv3','lv4'])\nfor year in years: \n    for grade in grades:\n        df_means=df_means.append({'Year':year, 'Grade':grade, 'lv1':df[(df['Grade'] == grade) & (df['Year'] == year)].mean()['% Level 1'],\n                                      'lv2':df[(df['Grade'] == grade) & (df['Year'] == year)].mean()['% Level 2'],\n                                      'lv3':df[(df['Grade'] == grade) & (df['Year'] == year)].mean()['% Level 3'],\n                                      'lv4':df[(df['Grade'] == grade) & (df['Year'] == year)].mean()['% Level 4']}, ignore_index = True)\n        \n    \n   \ndf_means.head()","81ef0e81":"plt.style.use('seaborn')\nfig,axes = plt.subplots(2,1)\nfig.set_figheight(10)\nfig.set_figwidth(15)\n\naxes[0].plot(df_means[df_means['Grade'] == 3]['Year'], df_means[df_means['Grade'] == 3]['lv1'], label='Grade 3')\naxes[0].plot(df_means[df_means['Grade'] == 4]['Year'], df_means[df_means['Grade'] == 4]['lv1'], label='Grade 4')\naxes[0].plot(df_means[df_means['Grade'] == 5]['Year'], df_means[df_means['Grade'] == 5]['lv1'], label='Grade 5')\naxes[0].set_xlabel('Year')\naxes[0].set_ylabel('Porcentaje')\naxes[0].set_title('Porcentaje de alumnos en el Nivel 1 para los grados 3, 4 y 5')\naxes[0].legend(loc='best')\n\naxes[1].plot(df_means[df_means['Grade'] == 6]['Year'], df_means[df_means['Grade'] == 6]['lv1'], label='Grade 6')\naxes[1].plot(df_means[df_means['Grade'] == 7]['Year'], df_means[df_means['Grade'] == 7]['lv1'], label='Grade 7')\naxes[1].plot(df_means[df_means['Grade'] == 8]['Year'], df_means[df_means['Grade'] == 8]['lv1'], label='Grade 8')\naxes[1].set_xlabel('Year')\naxes[1].set_ylabel('Porcentaje')\naxes[1].set_title('Porcentaje de alumnos en el Nivel 1 para los grados 6, 7 y 8')\naxes[1].legend(loc='best')\n\nplt.tight_layout()\nplt.show()","735bbe9e":"df_bests = school_All[(school_All['Grade'] == 6) & (school_All['Year'] == 2019)]\ndf_bests= df_bests.sort_values('% Level 4', ascending = False)[:5]\ndf_bests = df_bests.sort_values('DBN')\n\ndf_bests","67498c87":"df_worse = school_All[(school_All['Grade'] == 6) & (school_All['Year'] == 2019)]\ndf_worse = df_worse.sort_values('% Level 1', ascending = False)[:5]\ndf_worse = df_worse.sort_values('DBN')\n\ndf_worse","eb83c140":"import re\npattern = '[0-9]'\n\nboroughs = []\nfor i in df_bests['DBN']:\n    boroughs.append(re.sub(pattern, '', i))\ndf_bests['Borough'] = boroughs \n\nboroughs = []\nfor i in df_worse['DBN']:\n    boroughs.append(re.sub(pattern, '', i))\ndf_worse['Borough'] = boroughs   ","6919199b":"df_bests[['School Name','Borough']]","372e1454":"df_worse[['School Name','Borough']]","9d96bede":"eth_worse = school_Eth[(school_Eth['DBN'].isin(df_worse['DBN'])) & (school_Eth['Year'].isin(df_worse['Year']))\n                       & (school_Eth['Grade'].isin(df_worse['Grade']))]\neth_best = school_Eth[(school_Eth['DBN'].isin(df_bests['DBN'])) & (school_Eth['Year'].isin(df_bests['Year']))\n                       & (school_Eth['Grade'].isin(df_bests['Grade']))]","93a498dd":"eth_worse[['School Name','Category', 'Number Tested', 'Mean Scale Score']]","78a6601b":"eth_worse[['Number Tested', 'Category', 'Mean Scale Score']].plot.bar(x='Category',y='Number Tested', \n                                                                      title = \"Numero de \u00e9tnias presentadas por los colegios con peores resultados\")\neth_best[['Number Tested', 'Category', 'Mean Scale Score']].plot.bar(x='Category',y='Number Tested',\n                                                                     title = \"Numero de \u00e9tnias presentadas por los colegios con mejores resultados\")","59a21ef9":"gender_worse = school_Gender[(school_Gender['DBN'].isin(df_worse['DBN'])) & (school_Gender['Year'].isin(df_worse['Year']))\n                       & (school_Gender['Grade'].isin(df_worse['Grade']))]\ngender_best = school_Gender[(school_Gender['DBN'].isin(df_bests['DBN'])) & (school_Gender['Year'].isin(df_bests['Year']))\n                       & (school_Gender['Grade'].isin(df_bests['Grade']))]","491e256d":"male_worse_score = gender_worse[gender_worse['Category'] == 'Male'].mean()['Mean Scale Score']\nmale_worse_num = gender_worse[gender_worse['Category'] == 'Male'].sum()['Number Tested']\n\nfemale_worse_score = gender_worse[gender_worse['Category'] == 'Female'].mean()['Mean Scale Score']\nfemale_worse_num = gender_worse[gender_worse['Category'] == 'Female'].sum()['Number Tested']","96862ee3":"male_best_score = gender_best[gender_best['Category'] == 'Male'].mean()['Mean Scale Score']\nmale_best_num = gender_best[gender_best['Category'] == 'Male'].sum()['Number Tested']\n\nfemale_best_score = gender_best[gender_best['Category'] == 'Female'].mean()['Mean Scale Score']\nfemale_best_num = gender_best[gender_best['Category'] == 'Female'].sum()['Number Tested']","86ef13d8":"from plotly import figure_factory as FF\ntable_data = [['Gender', 'Number Tested', 'Mean Scale Score'],\n              ['Female Best', female_best_num, female_best_score],\n              ['Male Best',   male_best_num,male_best_score],\n              ['Female Worse', female_worse_num, female_worse_score],\n              ['Male Worse', male_worse_num, male_worse_score]]\nfigure = FF.create_table(table_data, height_constant=60)\n\niplot(figure)","43524dfa":"<a id=\"An\u00e1lisis\"><\/a>\n# An\u00e1lisis","8a3959bb":"Los 5 peores (los 5 con mayor porcentaje de alumnos en el nivel 1):","d78ce606":"Con el DataFrame creado anteriormente se podrian obtener las mismas series temporales para el resto de niveles. Aunque, siempre el nivel al que habr\u00e1 que fijarse m\u00e1s a la hora contemplar como de bien se esta ense\u00f1ando en un coelgio, es el nivel 1. Este nivel como ya he dicho indica que los almnos estan por debajo de la nota recomendada, y por lo tanto no han asimilado bien los materiales que se le han dado durante ese curso.","952196dc":"Primero cargamos los datasets donde se encuentran los resultados por municipio (borough).","5e4dd037":"<a id=\"Limpieza\"><\/a>\n# Limpieza y preparaci\u00f3n de los datos","cf9e7b2c":"Una vez que ya tenemos los datos cargados podremos empezar a obtener gr\u00e1ficos y valores estad\u00edsticos de los datos. Pero antes deberemos comprobar si las columnas donde se encuentran datos n\u00famericos no son de tipo \"string\". Para ello, lo primero es imprimir los tipos de datos de las diferentes columnas con .dtypes.\n\nEn nuestro caso, nos podemos encontrar con datasets donde todas las columnas son correctas como es el caso de:","9373d2c9":"> Con los datos que hemos analizado hemos podido ver como aquellos colegios que obtienen resultados muy buenos en los examenes de matem\u00e1ticas no tienen casi representante de raza negra o hispanos, son en su gran mayoria Asiaticos.\nEn cambio, en los colegios con peores resultados son los alumnos de raza negra hispanos los que abundan. Por otro lado, el numero de alumnos presentados es mucho mayor entre uno y otro.\nEsto agrava aun m\u00e1s la situaci\u00f3n, ya que si un colegio presenta muchos alumnos se tienen que asumir que la media general bajar\u00e1. Pero mirando los datos los colegios que han obtenido\nmejores resultados han presentado a un total de 610 alumnos m\u00e1s y la nota media es 173 aproximadamente m\u00e1s alta. En este tipo de examen esa diferencia de nota es muchisimo.","a9c5d761":"Podemos ver como los colegios que han obtenido mejores resultados se ubican en: dos en Queens (Q), dos en Manhattan (M) y uno e Brooklyn (K).\nMientras que los que han obtenido peor puntuaci\u00f3n se ub\u00edcan en: dos en Brooklyn (K), dos en el Bronx (X) y uno en Manhattan (M)","14af0c5b":"De los dataframes que contienen todos los alumnos (borough_All,citywide_All,district_Allschool_All) la columna \"Category\" es redundante ya que tiene el mismo valor para todas las filas \"All students\". Por lo tanto, la eliminaremos.","1cb0f6df":"> An\u00e1lisis de la cantidad media de alumnos que entran dentro del rango de cada nivel","13a7f8d0":"Desde la p\u00e1gina de [gov.com](https:\/\/catalog.data.gov\/dataset?publisher=data.cityofnewyork.us&organization=city-of-new-york) podemos encontrar los resultados a los examenes de matem\u00e1ticas entre los a\u00f1os 2006-2012. Estos datasets son extraidos del repositorio [NYC Open Data](https:\/\/opendata.cityofnewyork.us\/). Debido a esto, muchos de los datos de gov.com a veces no est\u00e1n actualizados. En este caso, si buscamos en la p\u00e1gina de NYC Open Data podremos encontrar que ademas de los datasets de 2006-2012 est\u00e1n los del 2013-2019. Para esta pr\u00e1ctica se han escojido estos \u00faltimos para procesarlos y analizarlos, ya que son mas actuales.\n\nSon un total de 4 ficheros excel. Cada uno corresponde a diferentes agrupaciones (por colegio, por distrito, por municipio o toda la ciudad). En los excels:\n\n* borough-math-results-2013-2019-(public).xlsx (municipio)\n* citywide-math-results-2013-2019-(public).xlsx (toda la ciudad)\n* district-math-results-2013-2019-(public).xlsx (distrito)\n\npodremos encontrar 6 p\u00e1ginas\/hojas (sheets). Cada una de estos datasets son diferentes formas de mostrar los datos (por genero, por etnia, por alumnos con desventaja ec\u00f3nomica o por alumnos que est\u00e1n o no aprendiendo ingles (English Language Learners, ELL)). Adem\u00e1s, en la primera p\u00e1gina (\"Notes\") encontraremos una serie de aclaraciones con respecto a los datos. El excel que contiene os datos a nivel de colegio, ademas de contener estas 7 (6 agrupaciones + 1 notas) sheets contiene\n2 m\u00e1s. Una para mostrar los resultados de los \"New York State Regents Exams\" y otro mostrando un ejemplo de \"perfil\" de colegio, es decir los datos extraidos para un solo colegio. Estas dos \u00faltimas hojas no han sido utilizadas debido a que no todos los colegios han realizado el New York State Regent Exam y que solo el perfil de un colegio no nos sirve para nada.\n\nEn todos los datasets nos encontraremos una serie de columnas iguales, estas columnas son:\n\n* `Grade`: A\u00f1o escolar (3,4,5,6,7,8, Todos)\n* `Year`: A\u00f1o del examen (2013 ... 2019)\n* `Number Tested`: N\u00famero total de alumnos \n* `Mean Scale Score`: Media de las puntuaciones obtenidas\n* `# Level 1`: N\u00ba de alumnos que han llegado al nivel 1\n* `% Level 1`: Alumnos que han llegado al nivel 1 en porcentaje\n* `# Level 2`: N\u00ba de alumnos que han llegado al nivel 2\n* `% Level 2`: Alumnos que han llegado al nivel 2 en porcentaje\n* `# Level 3`: N\u00ba de alumnos que han llegado al nivel 3\n* `% Level 3`: Alumnos que han llegado al nivel 3 en porcentaje\n* `# Level 4`: N\u00ba de alumnos que han llegado al nivel 4\n* `% Level 4`: Alumnos que han llegado al nivel 4 en porcentaje\n* `# Level 3+4`: N\u00ba de alumnos que han llegado a los niveles 3 y 4\n* `% Level 3+4`: Alumnos que han llegado a los niveles 3 y 4 (en porcentaje)\n\nLos niveles sirven como un indicador para saber si el alumno tiene las cualidades que se esperan de un alumno de su curso\n\n* Level 1: Un alumno en este nivel significa que esta por debajo de lo que se espera.\n* Level 2: Un alumno en el nivel 2 est\u00e1 considerado parcialmente competente para su nivel de grado. Se considera que est\u00e1 en camino de cumplir con los requisitos de graduaci\u00f3n del Estado de Nueva York, pero se considera insuficiente para cumplir con los est\u00e1ndares \"Common Core\" para su nivel de grado.\n* Level 3\tEn el nivel 3 se considera que que el alumno est\u00e1 en camino de cumplir tanto con los requisitos de graduaci\u00f3n del Estado de Nueva York como con los est\u00e1ndares de \"Common Core\" para su nivel de grado.\n* Level 4\t En el nivel cuatro el alumno est\u00e1 sobresaliendo y est\u00e1 muy por encima de los est\u00e1ndares esperados para su nivel de grado. Est\u00e1 yendo m\u00e1s all\u00e1 de lo que se espera de \u00e9l en su nivel de grado actual.\n\nAdem\u00e1s de estas columnas, si trabajamos con los datasets referidos a los municipios encontraremos las siguientes columnas:\n* `Borough`: Municipio (Bronx, Brooklyn, etc.)\n\nSi nos encontramos en los datasets que trabajan a nivel de distrito:\n* `District`: Municipio (1, 2, 3, etc.)\n\nSi nos encontramos en los datasets que trabajan a nivel de colegio:\n* `DBN`: District Borough Number (01M015 -> Distrito (01) + Municipio (M, Manhattan) + N\u00ba de colegio (015) )\n* `School name`: Nombre del colegio\n\nPor \u00faltimo, existe una columna \"Category\" que indica que se est\u00e1 mostrando en los datos, los valores que puede tener son: \n* `Category`: \n              All Students, \n              Not SWD, SWD (si tiene alguna discapacidad), \n              Asian, Black, Hispanic, White, \n              Female, Male, \n              Econ Disadv, Not Econ Disadv (si tiene alguna desventaja econ\u00f3mica),\n              Current ELL, Ever ELL, Never ELL (si est\u00e1 aprendiendo ingles).","2ec34d54":"Durante el mes de Mayo, en Nueva York, los alumnos que estan en el colegio deben realizar un examen donde se les evaluar\u00e1 sus aptitudes en varios campos. Estos ex\u00e1menes sirven para que los padres tengan una idea de como de bien esta su hijo. Tambien son utilizados por los colegios como medida para saber si, los alumnos que tienen, est\u00e1n obtienendo de una forma correcta los conocimientos impartidos.\n\nEn esta pr\u00e1ctica analizaremos los resultados obtenidos por los alumnos de Nueva York durante los a\u00f1os 2013-2019 en los examenes de matem\u00e1ticas. Estos examenes est\u00e1n comprendido por una serie de cuestiones tipo test y de respuesta larga. En esta p\u00e1gina [engageny](https:\/\/www.engageny.org\/resource\/released-2019-3-8-ela-and-mathematics-state-test-questions) podremos encontrar los examenes que tienen que realizar los alumnos. La puntuaci\u00f3n final obtenida por el alumno estar\u00e1 dentro de uno de los rangos, level 1,2,3 y 4. Dependiendo de en que rango est\u00e9 el alumno habr\u00e1 asimilado mejor o peor los conocimientos. Estos rangos se explicar\u00e1n mas adelante. \n\nEn 2018, el New York State Assessment Program (NYSED) reescal\u00f3 los ex\u00e1menes de Matem\u00e1ticas y English Language Arts (ELA), ya que estos pasaron a durar de 3 d\u00edas a 2 d\u00edas. Por lo tanto, los resultados de 2018 y 2019 pueden compararse entre s\u00ed, pero no pueden compararse con los de a\u00f1os anteriores.\u00a0 \n\nEsta pr\u00e1ctica estar\u00e1 dividida en los siguientes puntos:\n\n* [Introducci\u00f3n](#Introducci\u00f3n)\n* [Datasets](#Datasets)\n    - [Imports y datos](#Imports)\n* [Limpieza y preparaci\u00f3n de los datos](#Limpieza)\n* [An\u00e1lisis](#An\u00e1lisis)\n* [Conclusi\u00f3n](#Conclusi\u00f3n)\n\nEn el apartado de datasets se ahondar\u00e1 en caracteristicas que tienen los datos utilizados. Tambi\u00e9n se cargar\u00e1n los datasets con los datos. En el tercer apartado,\"Limpieza y preparaci\u00f3n de los datos\", como bien dice el nombre se limpiar\u00e1n los datos de todos aquellos valores erroneos o vac\u00edos que complican el analisis de los datos. En el apartado de an\u00e1lisis se calcular\u00e1n una serie de estad\u00edsticas para comparar los resultados entre diferentes colegios, distritos o minicipios. Adem\u00e1s se comparar\u00e1 los resultados segun el g\u00e9nero, la \u00e9tnia, el estado econ\u00f3mico, su nivel de ingles o si se encuentra en una situaci\u00f3n de discapacidad. Por \u00faltimo, se redactar\u00e1n las conclusiones obtenidas de los gr\u00e1ficos y an\u00e1lisis realizados.","0cf8e851":"En este apartado se responderan a una serie de cuestiones que nos podemos hacer al ver los datos. Se ir\u00e1 de una visi\u00f3n global a una visi\u00f3n m\u00e1s concreta.","6e88716e":"> \u00bfCuantos alumnos se han examinado por a\u00f1o y por grado? \u00bfHa variado la puntuaci\u00f3n media obtenida?","da092779":"<a id=\"Conclusi\u00f3n\"><\/a>\n# Conclusi\u00f3n","b3461e70":"Por colegio: ","cbe76b38":"Como explique en la introducci\u00f3n el DBN es un c\u00f3digo identificatorio donde la letra hace referencia al minicipio. \nPor lo tanto en nuestro caso tendriamos que:","b80b8808":"Comparativa teniendo en cuenta las \u00e9tnias:","e3ba0a52":"<a id=\"Imports\"><\/a>\n## Imports y datos","4737b7d9":"> Por \u00faltimo, se ha hecho un analisis de los 5 mejores y 5 peores colegios. \u00bfDonde se encuentran? \u00bfCual es su porcentaje de alumnos por etnias, por g\u00e9nero, etc?","7921ffb7":"Tambien podemos ver los datos utilizando una tabla en vez de un gr\u00e1fico","a576ffbc":"Podemos observar con ya no hay valores mayores a 0 y por lo tanto las columnas est\u00e1n en el tipo de dato adecuado. A partir de ahora, habr\u00e1 que tener en cuenta que los valores a -1 indican que no hay valor.","9c533958":"En toda la ciudad (citywide):","5821ea16":"<a id=\"Introducci\u00f3n\"><\/a>\n# Introducci\u00f3n","f144bd84":"<a id=\"Datasets\"><\/a>\n# Datasets","5fcc36fe":"<h1 style=\"font-family: 'Garamond'; font-size:50px\"><center>Pr\u00e1ctica 1: An\u00e1lisis de datos exploratorio<\/center><\/h1>\n<h2 style=\"font-family: 'Garamond'; font-size:30px\"><center>Estudio sobre los resultados de los examenes de matem\u00e1ticas realizados estado de Nueva York.<\/center><\/h2>\n<h2 style=\"font-family: 'Garamond'; font-size:30px\"><center>Universidad de Alicante. Master Ciencias de Datos.<\/center><\/h2>\n<h2 style=\"font-family: 'Garamond'; font-size:30px\"><center>Mineria de Datos.<\/center><\/h2>\n<h3 style=\"font-family: 'Garamond'; font-size:20px\"><center>Nahuel Emiliano Garc\u00eda D'Urso<\/center><\/h3>\n<h3 style=\"font-family: 'Garamond'; font-size:20px\"><center>2021<\/center><\/h3>","db673a80":"Para hacer esto hay que recordar que el valor que encontraremos en las columnas '# Level 1', '# Level 2', '# Level 3' y '# Level 4' hace referencia al n\u00famero de alumnos que ha obtenido como resultado del examen de matem\u00e1tica un valor dentro del rango para ese nivel y '% Level 1', '% Level 2', '% Level 3' y '% Level 4'. Por ejemplo, si en nuestro colegio se presentan 100 alumnos y 30 alumnos sacan una nota comprendida entre 137 y 284 estos estar\u00e1n en el nivel 1, y por lo tanto tedremos un valor de 30 en '# Level 1' y de 30 en '% Level 1'. Los rangos que conforman cada uno de los niveles los podemos encontrar en la siguiente p\u00e1gina: [p12.nysed.gov](http:\/\/www.p12.nysed.gov\/irs\/ela-math\/)\n\nPara hacer este apartado se han utilizado los datos extraidos del \u00faltimo a\u00f1o (2019)","91461dba":"Comparative de resultados entre los g\u00e9neros (masculino y femenino)","77f52769":"Pero tambien hay datasets con columnas con un tipo de dato erroneo. Esto se produce porque los datasets son creado cumpliendo la normativa de la Ley de Derechos Educativos y Privacidad de la Familia (FERPA). Por ello, en los casos con grupos de 5 o menos alumnos examinados, los resultados son omitidos con una \"s\". Adem\u00e1s, los grupos con el siguiente n\u00famero m\u00e1s bajo de alumnos evaluados se suprimen porque sino se podrian obtener los datos omitidos mediante adici\u00f3n o sustracci\u00f3n.\n\nPara trabajar con los datos, se ha sustituido la letra \"s\" por un \"-1\" y se han convertido el tipo de datos a uno n\u00famerico","76c9c89d":"El proceso de cambiar el valor de \"s\" por \"-1\" se ha realizado sobre los datasets que contienen esos valores. En nuestro caso podemos escojer cualquiera de las columnas \"Level\" para comprobar si hay un valor \"s\", ya que si hay un valor \"s\" en una columna este se repite para toda la fila.\n\nPara esto se ha utilizado la funcion isin() que devuelve True o False segun se encuentre o no se encuentre el valor deseado en cada una de las filas de la columna.\nEl resultado es convertido a entero, es decir a ceros. Por \u00faltimo, esta lista de valores de ceros y unos son sumados, si el valor de la suma es mayor a 0 quiere decir que hay alguna fila con valores \"s\", si el resultado de la suma es 0 quiere decir que el dataframe tiene valores correctos.","41c05e13":"Podemos ver como la nota media no varia mucho. El cambio de valor entre los a\u00f1os 2017 y 2018 es por el cambio del tipo de test, como ya dijimos en la Introducci\u00f3n no se deben comparar resultados de los examenes entre los dos \u00faltimos a\u00f1os y los demas.\n\nCon respecto al n\u00famero de evaluados cabe destacar el gran descenso de alumnos presentados de \u00faltimo a\u00f1o (Grade 8).","18a8a4c5":"---","f6b577bf":"Adem\u00e1s, los datasets de school tienen un columna erronea ('Unnamed: 0'). Esta columna tambien ser\u00e1 eliminada.","f5b1ebcd":"Para hacer esto se ha escojido un a\u00f1o al azar, por ejemplo los de sexto a\u00f1o (Grade 6) el a\u00f1o 2019. Aunque, se podria aplicar para cualquier de los a\u00f1os. Se han seleccionado los 5 mejores.","6583fa53":"Comprobamos que no hay valores NaN. El primer sum() suma todos los valores de una columna y el segundo suma todas las columnas entre si.**","a1524ee7":"Un total de 6 dataframes contienen valores \"s\" y por lo tanto contienen columnas con valores a string cuando deberian ser n\u00famericos. Para cambiar los valores en cada una de las columnas se ha aplicado la funcion replace().","4383c4a4":"Por distrito: "}}