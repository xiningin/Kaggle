{"cell_type":{"cc066f6e":"code","c579877e":"code","1995abc5":"code","e510305b":"code","da12af45":"code","2c48b2bc":"code","cc8b72e9":"code","4a54b368":"code","4b6d9f00":"code","6cd12d1e":"code","4597c9f3":"code","faa1b609":"code","a0f23b31":"code","cf251425":"code","3355af07":"code","551808d3":"code","cd4db8c7":"code","842753a7":"code","752f2a3d":"code","ae51dc77":"code","54cdf9d8":"code","0bc19bc9":"code","b8da1905":"code","0c819df8":"code","065b2497":"code","86d4a8e4":"code","93e72cda":"markdown","f8706811":"markdown","d83254eb":"markdown","24427d64":"markdown","5f289fb2":"markdown","6b46d937":"markdown","4f94005b":"markdown","c86078b8":"markdown"},"source":{"cc066f6e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport ast","c579877e":"data = pd.read_csv('..\/input\/ted-talks\/ted_main.csv')","1995abc5":"data.shape","e510305b":"data.dtypes","da12af45":"data.isna().sum()","2c48b2bc":"data.describe()","cc8b72e9":"data['comment_per_view'] = data.comments\/ data.views\ndata.sort_values('comment_per_view').tail()","4a54b368":"data.comments.plot(kind = 'hist')\n","4b6d9f00":"# Plot the majority of data, make the plot more informative\ndata[data.comments <1000].comments.plot(kind = 'hist', bins = 50)\n\n# Alternative method\n# data.query('comments<1000').comments.plot(kind = 'hist')","6cd12d1e":"data['film_datetime'] = pd.to_datetime(data.film_date, unit = 's').dt.year\ndata.film_datetime.value_counts().sort_index().plot()","4597c9f3":"data.groupby('event').views.agg(['mean','count','sum']).sort_values('mean').tail()","faa1b609":"data['ratings_list'] = data.ratings.apply(lambda x:ast.literal_eval(x)).head()\n\ndata.ratings_list.head()","a0f23b31":"def get_num_ratings(list_of_dicts):\n    num = 0\n    for d in list_of_dicts:\n        num = num + d['count']\n    return num\n\nget_num_ratings(data.ratings_list[0])","cf251425":"pd.DataFrame(data.ratings_list[0])","3355af07":"data['ratings_list'] = data.ratings.apply(lambda x: ast.literal_eval(x))","551808d3":"def get_funny_ratings(list_of_dicts):\n    for i in list_of_dicts:\n        if i['name'] == 'Funny':\n            return i['count']\n\ndata.ratings_list.apply(get_funny_ratings)\n\n","cd4db8c7":"data['funny_ratings'] = data.ratings_list.apply(get_funny_ratings)\ndata.funny_ratings.head()","842753a7":"data['num_ratings'] = data.ratings_list.apply(get_num_ratings)\ndata['funny_rate'] = data['funny_ratings'] \/ data['num_ratings']\ndata.sort_values('funny_ratings').speaker_occupation.head(10)","752f2a3d":"# Analyze funny rate by occupation\ndata.groupby('speaker_occupation').funny_rate.mean().sort_values().tail()","ae51dc77":"data.speaker_occupation.describe()","54cdf9d8":"# count how many times each occupation appears\ndata.speaker_occupation.value_counts()","0bc19bc9":"# value_counts() outputs a pandas Series, thus we can use pandas to manipulate the output\noccupation_counts = data.speaker_occupation.value_counts()\ntype(occupation_counts)","b8da1905":"# show occupations which appear at least 5 times\noccupation_counts[occupation_counts >= 5]","0c819df8":"# save the index of this Series\ntop_occupations = occupation_counts[occupation_counts >= 5].index\ntop_occupations","065b2497":"# filter DataFrame to include only those occupations\ndata_top_occupations = data[data.speaker_occupation.isin(top_occupations)]\ndata_top_occupations.shape","86d4a8e4":"\ndata_top_occupations.groupby('speaker_occupation').funny_rate.mean().sort_values()","93e72cda":"Task 1: Data Exploration","f8706811":"# Task 7: Count total number of ratings reveived by each talk","d83254eb":"# Task 6: Unpack the ratings data","24427d64":"# Task 5: What were the best event in the TED history to attend?","5f289fb2":"# Task 3: Visualize the distribution of comments","6b46d937":"# Task 8: Which occupations deliver the funniest TED talks on average?","4f94005b":"# Task 4: Plot the number of talks that took place each year","c86078b8":"# Task 2: Which talks provoke the most online discussion?"}}