{"cell_type":{"c73c6720":"code","313262c4":"code","07852a7f":"code","8ad98804":"code","3b01627b":"code","ffed8c62":"code","ce52dd11":"code","301b0495":"code","413986fb":"code","b7216426":"code","9dad2368":"code","c2a570c5":"code","c05f3b5c":"code","6e5c7eeb":"markdown","e41275e4":"markdown","a00cabe5":"markdown"},"source":{"c73c6720":"import pandas as pd\nimport os\n\npd.set_option('display.max_columns', None)","313262c4":"BASE_DIR = '..\/input\/aipowered-literature-review-csvs\/kaggle\/working\/'\ndir_list = os.listdir(BASE_DIR)\ndir_list","07852a7f":"for d in dir_list:\n    print(d)\n    file_list = os.listdir(os.path.join(BASE_DIR, d))\n    for f in file_list:\n        print(f'\\t{f}')\n        df = pd.read_csv(os.path.join(BASE_DIR, d, f), index_col=0)\n        for c in df.columns:\n            print(f'\\t\\t- {c}')\n        print()","8ad98804":"risk_dir = os.path.join(BASE_DIR, 'Risk Factors')\ndf_list = []\nfor f in os.listdir(risk_dir):\n    df = pd.read_csv(os.path.join(risk_dir, f), index_col=0)\n    df['csv_source'] = f\n    df_list.append(df)","3b01627b":"df = pd.concat(df_list).reset_index(drop=True)\ndf['Date'] = pd.to_datetime(df.Date)","ffed8c62":"# Check what metrics have been used\ndf.Severe.str.split(' ', expand=True)[0].value_counts()","ce52dd11":"df.Fatality.str.split(' ', expand=True)[0].value_counts()","301b0495":"# Extract the various metrics used\nfor col in ['Severe', 'Fatality']:\n    for metric in ['OR', 'AOR', 'HR', 'AHR', 'RR']:\n        capture_string = metric + r'(?:\\s|=)(\\d+.\\d+)'\n        df[f'{col.lower()}_{metric.lower()}'] = df[col].str.extract(capture_string)","413986fb":"# Extract the upper and lower confidence intervals\nlower_capture_string = r'95% CI: (\\d+.\\d+)'\nupper_capture_string = r'95% CI: \\d+.\\d+\\s?-\\s?(\\d+.\\d+)'\nfor col in ['Severe', 'Fatality']:\n    df[f'{col.lower()}_ci_lower'] = df[col].str.extract(lower_capture_string)\n    df[f'{col.lower()}_ci_upper'] = df[col].str.extract(upper_capture_string)","b7216426":"# Extract the p values\np_value_capture_string = r'p=(0.\\d+)'\nfor col in ['Severe', 'Fatality']:\n    df[f'{col.lower()}_p_value'] = df[col].str.extract(p_value_capture_string)","9dad2368":"df.head(20)","c2a570c5":"# Quick tidy to clarify the subject\ndf['risk_factor'] = df.csv_source.str.slice(0, -4)","c05f3b5c":"df.to_csv('risk_factors_training_data.csv', index=False)","6e5c7eeb":"# Load Risk Factors","e41275e4":"# Data structure\n\n**TIE** (tranmission, incubation and environmental stability) contains CSVs in a range of different formats.\n\n**Risk Factors** contains CSVs in a consistent format which can be cleaned and merged.","a00cabe5":"# COVID-19 Literature Review Data Load\n\nThese are the CSV files behind [the Kaggle community's AI-powered literature review](https:\/\/www.kaggle.com\/covid-19-contributions). The tables have been curated by a large team of domain experts. They can be used as \"target variables\" for those trying to extract the relevant information from [CORD-19 research papers](https:\/\/www.kaggle.com\/allen-institute-for-ai\/CORD-19-research-challenge).\n\nThis Notebook shows how to preprocess the CSVs to get useful target variables."}}