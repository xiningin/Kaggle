{"cell_type":{"ecb620c0":"code","831a2c71":"code","f2fd3058":"code","6e67f950":"code","01788eb5":"code","74e41e27":"code","6d955090":"code","a0cef51f":"code","e535e8af":"code","c5760443":"code","323e1733":"code","4959679b":"code","a1cbc228":"code","3274e98c":"code","377ad8cc":"code","3af2eb9d":"code","d5cc10af":"code","684f7f75":"code","f039c554":"code","40b0ac43":"code","6371fadb":"code","ea06abe8":"code","e6d744c6":"code","7d990d75":"code","bca6484a":"code","adaed78e":"code","69ddb457":"code","36edf287":"code","04c11c80":"code","500c99ed":"code","5e430690":"code","8ee4fdb8":"code","503e81f8":"code","e0b5a909":"code","68e74a89":"code","5ab8dc18":"code","d96c2f63":"code","b18a95ec":"code","49dabbf1":"code","d7d92d31":"code","f17dc279":"code","4022a19f":"code","28e134dc":"code","f23792d9":"code","eb3b6687":"code","d0df4f88":"code","14a5080e":"code","a6980f3b":"code","ad834230":"code","ba8816b1":"code","47fd9026":"code","0801f80f":"code","7fae22c6":"markdown","037d764d":"markdown","52cc6c9e":"markdown","4a441d90":"markdown","582b4cce":"markdown","a2de368e":"markdown","ff25df47":"markdown","9a3332cc":"markdown","0f32bab8":"markdown","31749c4b":"markdown","069a9829":"markdown","4fd83b2b":"markdown","09b75fbd":"markdown","24ed7e0f":"markdown","7aa30ead":"markdown","07b577ab":"markdown","f241514d":"markdown","5cb1bd3b":"markdown","9c03ea2d":"markdown","ed337503":"markdown"},"source":{"ecb620c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","831a2c71":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\ndata = pd.read_csv(\"..\/input\/marvel-superheroes\/charcters_stats.csv\")","f2fd3058":"data.head(21)","6e67f950":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","01788eb5":"data.Intelligence.plot(kind = 'line', color = 'g',label = 'Int',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Strength.plot(color = 'r',label = 'Stre',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     \nplt.xlabel('Superheroes')              \nplt.ylabel('Stats')\nplt.title('Line Plot') \nplt.show()","74e41e27":"    data.plot(kind='scatter', x='Intelligence', y='Strength',alpha = 0.5,color = 'red')\n    plt.xlabel('Int')             \n    plt.ylabel('Stre')\n    plt.title('Intelligence - Strength Scatter Plot')           \n    plt.show()","6d955090":"plt.scatter(data.Strength,data.Durability,color=\"green\",alpha=.5)\nplt.show()","a0cef51f":"data.Intelligence.plot(kind=\"hist\",bins= 50,figsize=(10,10),color=\"orange\")\nplt.show()","e535e8af":"dictionary= {'3-D Man' : '233','A-Bomb' : '316','Abe Sapien':'299','Abin Sur':'406','Abomination':'436','Abraxas' :'526' }\nprint(dictionary.keys())\nprint(dictionary.values())\n","c5760443":"for key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n","323e1733":"x= data['Intelligence']<50\ndata[x]","4959679b":"data[np.logical_and(data['Strength']>99,data['Durability']>99)]","a1cbc228":"data[(data['Speed']>70) & (data['Combat']>70)]","3274e98c":"i = 0\nwhile i != 10 :\n    print('i is: ',i)\n    i +=1\nprint(i,'is equal to 10')","377ad8cc":"lis= [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)","3af2eb9d":"for index, value in enumerate(lis) :\n    print(index,\" : \", value)","d5cc10af":"for key, value in dictionary.items():\n    print(key,\" - \",value)\nprint('')","684f7f75":"for index, value in data[['Intelligence']][0:3].iterrows():\n    print(index,\" - \",value)","f039c554":"def hero_name():\n    t= (\"3-D Man\", \"A-Bomb\", \"Abe Sapien\", \"Abin Sur\", \"Abomination\", \"Abraxas\")\n    return t\na,b,c,d,e,f= hero_name()\nprint(a,b,c,d,e,f)\n\n","40b0ac43":"def hero_name():\n    t= (\"3-D Man\", \"A-Bomb\", \"Abe Sapien\", \"Abin Sur\", \"Abomination\", \"Abraxas\")\n    return t\na,b,c,d,e,f= hero_name()\nprint(a,b,c,d,e,f)\n\n","6371fadb":"x=350\ndef f():\n    x=int(value)\n    return x\n    \nfor key, value in dictionary.items():\n    print(key,\" - \",x,\" - \",f())\n\n","ea06abe8":"x=350\ndef f():\n    x = value\n    return x\ndef m():    \n    x = value\n    y=int(x)\/2\n    return y\n\nfor key, value in dictionary.items():\n    print(key,\" - \",x,\" - \",f(),\" - \",m())","e6d744c6":"def f(Abe_Sapien=299,Abin_Sur=406,Abomination=436):\n    y=Abe_Sapien+Abin_Sur+Abomination\n    return y \nprint (f())\n\ntot= lambda Abe_Sapien,Abin_Sur,Abomination: Abe_Sapien+Abin_Sur+Abomination \nprint(tot(299,406,436))","7d990d75":"def square():\n    return int(value)**2\n\nfor key, value in dictionary.items():\n    print(key,\" - \",square())\n    \n","bca6484a":"number_list = [233,316,299,406,436,526]\ny= map(lambda x: x**2,number_list)\nprint(list(y))\n","adaed78e":"Kahramanlar\u0131n_isimleri = ['3-D Man','A-Bomb','Abe Sapien','Abin Sur','Abomination','Abraxas']\nKahramanlar\u0131n_gucleri = [233,316,299,406,436,526]\nz=zip(Kahramanlar\u0131n_isimleri, Kahramanlar\u0131n_gucleri)\nprint(z)\nz_list=list(z)\nprint(z_list)\n","69ddb457":"un_zip=zip(*z_list)\nun_Kahramanlar\u0131n_isimleri,un_Kahramanlar\u0131n_gucleri=list(un_zip)\nprint(Kahramanlar\u0131n_isimleri)\nprint(Kahramanlar\u0131n_gucleri)\nprint(type(list(un_Kahramanlar\u0131n_isimleri)))\nprint(type(list(un_Kahramanlar\u0131n_gucleri)))","36edf287":"Kahramanlar\u0131n_gucleri = [233,316,299,406,436,526]\nKahramanlar\u0131n_gucleri_art\u013150=[i+50 for i in Kahramanlar\u0131n_gucleri]\nprint(Kahramanlar\u0131n_gucleri_art\u013150)","04c11c80":"Kahramanlar\u0131n_gucleri = [233,316,299,406,436,526]\nKahramanlar\u0131n_gucleri_degistir=[i+100 if i == 436 else i\/2 if i<400 else i for i in Kahramanlar\u0131n_gucleri]\nprint(Kahramanlar\u0131n_gucleri_degistir)","500c99ed":"threshold=sum(data.Strength)\/len(data.Strength)\ndata[\"Strength_level\"] = [\"Strong\" if i >threshold else \"Weak\" for i in data.Strength]\ndata.loc[:20,[\"Name\",\"Strength_level\",\"Strength\"]]","5e430690":"data = pd.read_csv(\"..\/input\/marvel-superheroes\/charcters_stats.csv\")","8ee4fdb8":"data.head(20)","503e81f8":"data.tail(30)","e0b5a909":"data.info()","68e74a89":"data.shape","5ab8dc18":"print(data['Alignment'].value_counts(dropna=False))","d96c2f63":"print(data['Power'].value_counts(dropna=False))","b18a95ec":"data.boxplot(column='Power', by ='Strength')\nplt.show\n","49dabbf1":"data_new=data.head(20)\ndata_new","d7d92d31":"melted = pd.melt(frame = data_new,id_vars = 'Name', value_vars =['Power','Strength','Intelligence'])\nmelted","f17dc279":"melted.pivot(index ='Name' , columns = 'variable' ,values= 'value')","4022a19f":"data_1 = data.head(20)\ndata_2 = data.tail(30)\nconc_data_row = pd.concat([data_1,data_2], axis = 0, ignore_index=True)\nconc_data_row","28e134dc":"data_1 = data['Power'].head()\ndata_2 = data['Intelligence'].head()\ndata_3 = data['Strength'].head()\nconc_data_col = pd.concat([data_1,data_2,data_3], axis =1)\nconc_data_col","f23792d9":"data.dtypes","eb3b6687":"data['Power'] = data['Power'].astype('float')\ndata['Name'] = data['Name'].astype('category')","d0df4f88":"data.dtypes","14a5080e":"data['Alignment'].value_counts(dropna= False)","a6980f3b":"data1 = data\ndata1[\"Alignment\"].fillna('Empty' , inplace= True)","ad834230":"data1['Alignment'].value_counts(dropna=False)","ba8816b1":"data1['Alignment'].value_counts(dropna=True)","47fd9026":"assert data.columns[0]=='Name'\n","0801f80f":"assert data.columns[1]=='Alignment'","7fae22c6":"Heatmapta kahraman \u00f6zelliklerinin di\u011fer \u00f6zellikler olan korelasyonu g\u00f6sterdim. \u00d6rne\u011fin zeka ile kas g\u00f6\u00fcc\u00fc aras\u0131nda \u00e7ok d\u00fc\u015f\u00fck bir korelasyon oldu\u011funu g\u00f6rebiliyoruz. Kas g\u00fcc\u00fc ile dayan\u0131kl\u0131l\u0131k aras\u0131nda da g\u00fc\u00e7l\u00fc bir korelasyonun oldu\u011funu g\u00f6rebiliyoruz.","037d764d":"Burada keylerin (kahraman isimleri) kar\u015f\u0131l\u0131k vauleleri(toplam g\u00fc\u00e7leri) getirdim.","52cc6c9e":"H\u0131z\u0131 ve d\u00f6v\u00fc\u015fme ikisininde 70'tan y\u00fcksek olan karakterleri listeledim.","4a441d90":"Karakterlerin g\u00fc\u00e7lerini global de\u011fere ba\u011flad\u0131m (350) ve local toplam g\u00fc\u00e7lerini yazd\u0131rd\u0131m.","582b4cce":"Karakterlerin g\u00fc\u00e7lerini global de\u011fere ba\u011flad\u0131m (350) ve local toplam g\u00fc\u00e7lerini ve local g\u00fc\u00e7lerinin yar\u0131s\u0131n\u0131 yazd\u0131rd\u0131m.","a2de368e":"G\u00fc\u00e7lerin karesini listte olarak yazd\u0131m.","ff25df47":"Ortalam g\u00fcc\u00fc buldum. Karakterlerin g\u00fc\u00e7leri ortalama g\u00fc\u00e7ten fazla ise g\u00fc\u00e7l\u00fc az ise zay\u0131f olarak yazd\u0131rd\u0131m. ","9a3332cc":"Scatter grafi\u011finde kas g\u00fcc\u00fcn\u00fcn ve dayan\u0131kl\u0131l\u0131\u011f\u0131n ili\u015fkisini g\u00f6rebiliyoruz. Do\u011fru orant\u0131l\u0131 bir ili\u015fkiye sahip olduklar\u0131n\u0131 g\u00f6rebiliyoruz.","0f32bab8":"Zekan\u0131n karakter aras\u0131ndaki da\u011f\u0131l\u0131m s\u0131kl\u0131\u011f\u0131n\u0131 g\u00f6steriyor. Zeka g\u00fcc\u00fc \u00e7ok d\u00fc\u015f\u00fck bir\u00e7ok karakter oldu\u011funu g\u00f6rebiliyoruz.","31749c4b":"\u00dc\u00e7 kahraman\u0131n toplam g\u00fc\u00e7lerinin toplam\u0131n\u0131 buldum. Lambda ile k\u0131sa yolu ile de ayn\u0131 i\u015flemi ger\u00e7ekle\u015ftirdim.","069a9829":"Kahramanlar\u0131n isimleri  ve g\u00fc\u00e7lerini listeledim.","4fd83b2b":"Scatter grafi\u011finde kas g\u00fcc\u00fcn\u00fcn ve zekan\u0131n ili\u015fkisini g\u00f6rebiliyoruz. \u0130li\u015fkilerinin az orant\u0131l\u0131 oldu\u011funu s\u00f6yleyebiliriz","09b75fbd":"Zekas\u0131 50'den k\u00fc\u00e7\u00fck olan karakterleri listeledim.","24ed7e0f":"Karakterlerin local g\u00fc\u00e7lerinin karesini yazd\u0131rd\u0131m. ","7aa30ead":"\u00dcstteki tabloda ilk yirmi s\u00fcper kahram\u0131n\u0131n listesimi \u00e7ektim. Burada kahramanlar\u0131n isimleri, iyi \u00f6i k\u00f6t\u00fc m\u00fc oldu\u011fu ve istatistiklerini g\u00f6rebiliyoruz. ","07b577ab":"While ve for d\u00f6ng\u00fcleri i\u00e7in sizin derste anlatt\u0131klar\u0131n\u0131z\u0131n ayn\u0131s\u0131 yapt\u0131m.","f241514d":"Kahramanlar\u0131n g\u00fc\u00e7leri listesinde i 436 e\u015fit ise 100 ekle, e\u011fer 400'den k\u00fc\u00e7\u00fck olanlar\u0131 ikiye b\u00f6l 400'den b\u00fcy\u00fck ise bir\u015fey de\u011fi\u015ftirme dedim.","5cb1bd3b":"Kas g\u00fcc\u00fc ve dayan\u0131kl\u0131l\u0131\u011f\u0131n\u0131n ikisininde 99'dan y\u00fcksek olan karakterleri listeledim.","9c03ea2d":"Karakterlerin ve toplam g\u00fc\u00e7lerinden bir dictionary yaratt\u0131m.","ed337503":"Bu line plotta zeka ve kas g\u00fcc\u00fcn\u00fcn da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rebiliyoruz."}}