{"cell_type":{"9f0f3c9a":"code","dd724021":"code","d643c63d":"code","ef6d05fc":"code","a0b36395":"code","40c9597d":"code","9d055065":"code","f7888de4":"code","e49b1a1f":"code","35d916ba":"code","c7077797":"code","efba886d":"code","4679c4a3":"code","9b666023":"code","d1fda810":"markdown","3cd590d1":"markdown","a6b3558d":"markdown","6ceb377d":"markdown","03d7b019":"markdown"},"source":{"9f0f3c9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dd724021":"data = pd.read_csv('..\/input\/2017.csv')\n","d643c63d":"data.info()\n","ef6d05fc":"data.corr() # correlation between features","a0b36395":"f,ax = plt.subplots(figsize = (16,16))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()","40c9597d":"data.head(10) # This coding gives us first 10 rows.","9d055065":"data.columns # this coding gives us name of columns","f7888de4":"# This coding changes columns name\ndata.rename(columns={\"Happiness.Rank\": \"Happiness_Rank\", \"Happiness.Score\": \"Happiness_Score\",\n                    \"Whisker.high\":\"Whisker_high\", \"Whisker.low\":\"Whisker_low\", \"Economy..GDP.per.Capita.\":\"Economy_GDP_per_Capita\",\n                    \"Health..Life.Expectancy.\":\"Health_Life_Expectancy\",\"Trust..Government.Corruption.\":\"Trust_Government_Corruption\",\"Dystopia.Residual\":\"Dystopia_Residual\"}, inplace = True)","e49b1a1f":"data.columns","35d916ba":"data.Economy_GDP_per_Capita.plot(kind='line', color='g', label='Economy_GDP_per_Capita', linewidth=1, \n                          alpha=0.5, grid=True, linestyle=':' )\ndata.Family.plot(color= 'r', label='Family', linewidth=1, \n                          alpha=0.5, grid=True, linestyle='-.' )\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()\n","c7077797":"data.plot(kind=\"scatter\", x=\"Economy_GDP_per_Capita\", y=\"Family\", alpha=0.5,\n          color=\"red\")\nplt.xlabel(\"Economy_GDP_per_Capita\")\nplt.ylabel(\"Family\")\nplt.title(\"Economy_GDP_per_Capita Family Scatter Plot\")\nplt.show()","efba886d":"data.Economy_GDP_per_Capita.plot(kind=\"hist\", bins=50, figsize=(12,12))\nplt.show()","4679c4a3":"#create dictionary and look its keys and values\ndictionary = {\"Eray\": \"24\", \"Ali\":\"40\", \"Samet\": \"20\"}\nprint(dictionary.keys())\nprint(dictionary.values())","9b666023":"# Keys have to be immutable objects like string, boolean, float, integer or tubles\n# List is not immutable\n# Keys are unique\n\ndictionary['Eray']=\"23\"\nprint(dictionary)\ndictionary['Mert'] = \"32\"\nprint(dictionary)\ndel dictionary['Eray']\nprint(dictionary)\nprint('Eray' in dictionary)","d1fda810":"**SCATTER PLOT**","3cd590d1":"**HISTOGRAM PLOT**","a6b3558d":"**LINE PLOT**\n","6ceb377d":"**CREATE DICTIONARY**","03d7b019":"**This example is my first studying. **"}}