{"cell_type":{"64a94025":"code","992d35f5":"code","21bcdabb":"code","efec715b":"code","d10650be":"code","3bd7339d":"code","6fd2a552":"code","0e9f9a38":"code","c7c4f736":"code","d2b255cf":"code","5c21cecb":"code","1ce9a241":"code","4e05f3ec":"code","2cd9b8a7":"code","99a7681c":"code","9091d977":"code","4504aa36":"code","b65af93c":"code","1d5e78df":"code","3647b930":"code","0195d7d3":"code","1f0a6b42":"code","6a7a24c3":"code","0a02351d":"code","6ab6110c":"code","4be4682b":"code","c106ba08":"code","9b540b44":"code","c375ba6e":"code","2fc2e1f8":"markdown","dbe8f7a0":"markdown","22731ff2":"markdown","fa2a572d":"markdown","f0f50f61":"markdown","2b160030":"markdown","bca9e480":"markdown","88ef6092":"markdown","d87a63cb":"markdown","9a82c44b":"markdown","238ef723":"markdown","1011b0b5":"markdown","76e3c31f":"markdown","f3f64a20":"markdown","c2952e05":"markdown"},"source":{"64a94025":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","992d35f5":"pip install comet_ml","21bcdabb":"# import comet_ml at the top of your file\nfrom comet_ml import Experiment\n\n\n\n\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"my_api\")","efec715b":"data = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")","d10650be":"data","3bd7339d":"data.shape","6fd2a552":"pip install -U seaborn","0e9f9a38":"import seaborn as sns\nsns.__version__","c7c4f736":"import matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","d2b255cf":"data.isnull().sum()","5c21cecb":"data.describe()","1ce9a241":"data.sex.value_counts()","4e05f3ec":"data.smoker.value_counts()","2cd9b8a7":"data.region.value_counts()","99a7681c":"sns.distplot(data.charges)","9091d977":"sns.displot(data=data,\n            x='charges',\n            row='sex',\n            col='region',\n            hue='smoker',\n            fill=True,\n            multiple='stack',\n            kind='kde')\nplt.show()","4504aa36":"var = 'sex'\nmean_data = data.groupby(var).charges.mean()\nprint(mean_data)\nprint(mean_data.diff())\nsns.violinplot(data=data, x=var, y='charges')\nplt.title('Distribution of target against '+var)\nplt.show()","b65af93c":"var = 'smoker'\nmean_data = data.groupby(var).charges.mean()\nprint(mean_data)\nprint(mean_data.diff())\nsns.violinplot(data=data, x=var, y='charges')\nplt.title('Distribution of target against '+var)\nplt.show()","1d5e78df":"var = 'region'\nmean_data = data.groupby(var).charges.mean()\nprint(mean_data)\n#print(mean_data.diff())\nsns.violinplot(data=data, x=var, y='charges')\nplt.title('Distribution of target against '+var)\nplt.show()","3647b930":"sns.pairplot(data,\n            hue='smoker',\n            palette='plasma')\nplt.show()","0195d7d3":"# Categoricals to numerical\ndata = pd.get_dummies(data, prefix=['sex', 'smoker', 'region'], drop_first=True)\ndata.head()","1f0a6b42":"# Split train-test\nX = data.drop(columns='charges')\ny = data.loc[:, 'charges']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","6a7a24c3":"import statsmodels.api as sm\nfrom scipy import stats\n\nX_train_const = sm.add_constant(X_train)\n\nlinearModel = sm.OLS(y_train, X_train_const)\nlinear = linearModel.fit()\nprint(linear.summary())","0a02351d":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet","6ab6110c":"pipeline = Pipeline([\n    ('scaling', 'passthrough'),\n    ('model', 'passthrough')\n])\n\nparam_grid = {\n    'scaling': [StandardScaler(), MinMaxScaler()],\n    'model': [LinearRegression(), Ridge(), Lasso(), ElasticNet()]\n}\n\ngrid = GridSearchCV(pipeline, param_grid=param_grid, cv=5, n_jobs=-1, scoring='r2')","4be4682b":"grid.fit(X_train, y_train)","c106ba08":"grid.best_estimator_","9b540b44":"grid.score(X_test, y_test)","c375ba6e":"for i in range(len(grid.cv_results_['params'])):\n    exp = Experiment(workspace=\"maksteel\",\n        project_name=\"saturday-codealong-medical-insurance-costs-predict\",\n        api_key=secret_value_0)\n    for k,v in grid.cv_results_.items():\n        if k == \"params\":\n            exp.log_parameters(v[i])\n        else:\n            exp.log_metric(k,v[i])","2fc2e1f8":"## Build model","dbe8f7a0":"We have already visualized the relationship of the variables to the charges. Now we will further investigate by looking at the relationships using multiple linear regression. Remember that the aim of this section is to quantify the relationship and not to create the prediction model. Let us first create a training and testing data set to proceed.\n\nBased on the visualization, we can make a couple of hypothesis about the relationship.\n\n\n   - There is no real difference in charges between gender or regions.\n    \n   - The charge for smokers are very much higher than the non-smokers.\n    \n   - The charge gets higher as the individual gets older.\n    \n   - The charge gers higher as the individual reaches over 30BMI.\n    \n   - Lastly, the charge is higher for those who have fewer number of children.","22731ff2":"### Insight:\n- sex, region do not seem to have much impact on the target.\n- smoker does seem to have huge impact on target","fa2a572d":"#### Insight: No missing values","f0f50f61":"## Hypothesis","2b160030":"## Pre-Processing","bca9e480":"There is no real difference in charges between gender(p-value 0.907) or regions.(p-value 0.342, 0.093, 0.173)\n\nThe charge for smokers are very much higher than the non-smokers.\n\nThe charge gets higher as the individual gets older.\n\nThe charge gers higher as the individual reaches over 30BMI.\n\nLastly, the charge is higher for those who have fewer number of children.","88ef6092":"### Insights:\n- smoker is unbalanced, more people are non-smokers\n- sex, region, seems to be balanced","d87a63cb":"### Insights:\n- charges seems to be right skewed (median < mean)\n- age, bmi, children seem to be normall distributed","9a82c44b":"Learn More about plots <a href=\"https:\/\/seaborn.pydata.org\/tutorial\/distributions.html\">here<\/a>","238ef723":"## Quantify Effects","1011b0b5":"pip freeze | grep seaborn","76e3c31f":"# About the Dataset\n\n- **age:** age of primary beneficiary\n\n- **sex:** insurance contractor gender, female, male\n\n- **bmi:** Body mass index, providing an understanding of body, weights that are relatively high or low relative to height,\nobjective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9\n\n- **children:** Number of children covered by health insurance \/ Number of dependents\n\n- **smoker:** Smoking\n\n- **region:** the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n\n- **charges:** Individual medical costs billed by health insurance","f3f64a20":"## Relationship with target variable","c2952e05":"## EDA"}}