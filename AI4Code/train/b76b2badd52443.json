{"cell_type":{"874adae1":"code","34f863b4":"code","8da5a953":"code","f8a772f4":"code","61f96017":"code","4bf85cf4":"code","f6ffa28e":"code","bf006982":"code","7818c6e5":"code","bfe4c9a7":"code","b716d9bd":"code","4ce924fb":"code","591e32f4":"code","bcb7515b":"code","421fa3cd":"code","88462f5d":"code","f6714b57":"markdown","44fef5d3":"markdown","7b338782":"markdown","3d88aadc":"markdown","9d30d6ba":"markdown"},"source":{"874adae1":"import matplotlib.pyplot as plt","34f863b4":"x=[i for i in range(10)]\nprint(x)","8da5a953":"y=[i for i in range(1,20,2)]\nprint(y)","f8a772f4":"plt.plot(x,y)\nplt.xlabel(\"x-axis\")\nplt.ylabel(\"y-axis\")\nplt.title(\"y=2*x\")","61f96017":"plt.scatter(x,y)","4bf85cf4":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import LabelEncoder","f6ffa28e":"from sklearn import datasets\niris=datasets.load_iris()\nx=iris.data\ny=iris.target\nprint(x.shape)\nprint(y.shape)\nprint(x[:15])\nprint(y[:15])\nprint(\"Feature variables\",iris.feature_names)\nprint(\"Target Variable\",iris.target_names)","bf006982":"X,X1,Y,Y1=train_test_split(x,y,test_size=0.3)\nprint(\"Trainings size\",X.shape,Y.shape)\nprint(\"Test size\",X1.shape,Y1.shape)","7818c6e5":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=5)\nknn.fit(X,Y)\nprint(knn)\npredict=knn.predict(X1)\naccuracy=accuracy_score(Y1,predict)\nprint(\"Accuracy =\",accuracy*100,\"%\")","bfe4c9a7":"classes=list(iris.target_names)\nprint(classes)\n","b716d9bd":"from sklearn import svm\nmodel=svm.SVC()\nmodel.fit(X,Y)\nprint(model) # printing model\nsvm_predict=model.predict(X1)\nsvm_accuracy=accuracy_score(Y1,svm_predict)\nprint(\"SVM Accuracy = \",svm_accuracy*100)\n","4ce924fb":"boston=datasets.load_boston()\nprint(boston.feature_names)","591e32f4":"from sklearn import linear_model\nx=boston.data\ny=boston.target\nregression=linear_model.LinearRegression()\nplt.scatter(x.T[5],y)","bcb7515b":"x,x1,y,y1=train_test_split(x,y,test_size=0.25,random_state=1)\nprint(x.shape,y.shape)\nprint(x1.shape,y1.shape)","421fa3cd":"linearmodel=regression.fit(x,y)\nlinear_outcome=linearmodel.predict(x1)\n#coefficient of determination (\ud835\udc45\u00b2) with .score()\nprint(\"R^2 score : \",regression.score(x,y))","88462f5d":"print(\"Actual values\",x1)\nprint(\"Predicted value\",linear_outcome)","f6714b57":"<a href=\"https:\/\/colab.research.google.com\/github\/sanjeev30798\/Machine-Learning\/blob\/main\/Scikit_learn_1.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","44fef5d3":"\n\n> Training the model for one features\n\n\n\n\n\n\n\n","7b338782":"Linear Regression using Boston House dataset","3d88aadc":"Support Vector Machine(SVM) ","9d30d6ba":"\n\n> Splitting the datasets\n\n"}}