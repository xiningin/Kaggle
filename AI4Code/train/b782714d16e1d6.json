{"cell_type":{"33dbc2cb":"code","4831b83a":"code","6d6895a0":"code","9467e842":"code","ea946e4b":"code","95922d36":"code","bb9141a9":"code","115dc16d":"code","fa2c3c11":"code","4eb0e29d":"code","83740fa5":"code","83a3608c":"code","c8e07b72":"code","bfa1efe0":"code","5cb0764c":"code","e0a9d8f6":"code","076928ac":"code","275c0f2a":"code","48d2c366":"code","85c07ae7":"code","a43de1bd":"code","f42cc09f":"code","698f0e5a":"code","11190abe":"code","67d0faf7":"code","47660368":"code","76ec5971":"code","c6b4530e":"markdown","3f6443b6":"markdown"},"source":{"33dbc2cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport pyarrow.parquet as pq\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Any results you write to the current directory are saved as output.","4831b83a":"%%time \n# Read in 5 signals\n# Each column contains one signal\nsubset_train = pq.read_pandas('..\/input\/train.parquet', columns=[str(i) for i in range(5)]).to_pandas()","6d6895a0":"subset_train.info()","9467e842":"subset_train.head()","ea946e4b":"subset_train.tail()","95922d36":"%%time\nmeta_train = pd.read_csv('..\/input\/metadata_train.csv')\nmeta_test = pd.read_csv('..\/input\/metadata_test.csv')","bb9141a9":"meta_train.head()","115dc16d":"meta_test.head()","fa2c3c11":"meta_train.isna().sum()","4eb0e29d":"meta_test.isna().sum()","83740fa5":"meta_train['signal_id']","83a3608c":"meta_test['signal_id']","c8e07b72":"meta_train['id_measurement'] # ID code for a trio of signals","bfa1efe0":"meta_test['id_measurement']","5cb0764c":"sns.countplot(meta_train['target']); # Quite unbalanced, 1 => fault in the power line","e0a9d8f6":"meta_train['phase'].value_counts() # 3 phase values","076928ac":"meta_test['phase'].value_counts() # 3 phase values","275c0f2a":"sns.countplot(meta_train['phase']);","48d2c366":"sns.countplot(meta_test['phase']);","85c07ae7":"subset_train.head()","a43de1bd":"%%time \nsubset_test = pq.read_pandas('..\/input\/test.parquet', columns=[str(i) for i in range(8712,8717)]).to_pandas()","f42cc09f":"subset_test.shape","698f0e5a":"subset_test.head()","11190abe":"subset_test.tail()","67d0faf7":"meta_train.head()","47660368":"# Let's look at some of the signals\n\nfig, ((ax1, ax2), (ax3,ax4)) = plt.subplots(2,2, figsize=(12,12))\nax1.hist(subset_train['0'], bins=100);\nax2.hist(subset_train['1'], bins=100)\nax3.hist(subset_train['2'], bins=100)\nax4.hist(subset_train['3'], bins=100);","76ec5971":"# How well does just the phase reflect the target?\nmeta_train.corr()['target']\n# Not very well it seems","c6b4530e":"### Train and test signal_ids and id_measurements are sequential","3f6443b6":".. to be continued"}}