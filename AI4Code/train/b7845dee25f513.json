{"cell_type":{"c88fdb16":"code","d475b636":"code","ee03bc6c":"code","94542621":"code","7d9648ce":"code","accba57d":"code","492b4242":"code","717c066e":"code","32251587":"code","6ae91490":"code","1d7ebbe7":"code","9b21aa73":"code","88692b7e":"code","51c3b315":"markdown","6044dce8":"markdown","bde3b5cc":"markdown"},"source":{"c88fdb16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d475b636":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ee03bc6c":"singer = pd.read_csv(\"..\/input\/best-quality-singer\/Project-3 - Merged Data.csv\")","94542621":"singer","7d9648ce":"singer[\"Artist(s)\"].value_counts()","accba57d":"top = singer.sort_values(\"Score\", ascending = False)  ","492b4242":"top.dropna(inplace=True)","717c066e":"top.value_counts(\"Score\")","32251587":"top_1 = top.iloc[1:22]","6ae91490":"top_1","1d7ebbe7":"yearly = top_1.sort_values(\"Year\", ascending = True)","9b21aa73":"yearly","88692b7e":"plt.figure(figsize=(20,14))\nsns.pointplot(data=yearly, x='Artist(s)', y='Year', color='red');\nplt.tick_params(axis='x', which='major', labelsize=15, rotation=90)\nplt.tick_params(axis='y', which='major', labelsize=15)","51c3b315":"# TOP - 22 singers from year to year having 100 Score","6044dce8":"# soon i ll update this Notebook with More insightful Visualizations.\n","bde3b5cc":"Now we Check how many are having Score of 100. which is 22 entries. so we only took those"}}