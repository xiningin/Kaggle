{"cell_type":{"34bab178":"code","41960d34":"code","d9ba6618":"code","43560ab4":"code","dd9a4b3d":"code","f8c7a438":"code","25aff892":"code","79d401e3":"code","701e0ed1":"code","dcf900f0":"code","16a886cb":"code","1f545564":"code","a077cdd0":"code","45c88b58":"code","91efa0c8":"code","af1c2527":"code","e5c4a870":"code","13e4cd3d":"code","ab34365a":"code","351698e5":"code","646900ef":"code","863beb6f":"code","454f8907":"code","9b365c85":"code","8ccb4acb":"code","ae65539f":"code","c772306c":"code","5fca0f7b":"code","2122bfc6":"code","4351fc67":"code","6ee3f269":"code","a5f57ff6":"code","31c83c4f":"code","7078d112":"code","49a11365":"code","f01226d1":"code","46ca4e00":"code","1f9ba5ed":"code","83555232":"code","5ed76996":"code","7416540e":"code","6b2d691b":"code","c7ff6eaf":"code","219ae929":"code","3f63aeab":"code","0871de7c":"code","2ce5510c":"code","c4379e36":"code","025e7063":"code","c33f8b65":"code","1a4c71d0":"code","0544d7df":"code","69efb19c":"code","c7d30d2d":"code","e62ac0a9":"code","18b83de9":"code","f987925f":"code","f7ac3d88":"code","edb187a3":"code","ac8a3085":"code","2130cf0c":"code","1afa3932":"code","47675a12":"code","cbafb5b8":"code","b6cb7468":"code","bd04ba37":"code","ddc6f294":"code","b21b9c88":"code","ae2af853":"code","1c3e7743":"code","8b11735b":"code","f80f0375":"code","abfd28a1":"code","60ef100b":"code","427d4394":"code","9e82cc09":"code","b9a80421":"code","df13bb4d":"code","50c71a97":"code","ffa3f602":"code","7d640441":"code","53df3437":"code","09882cbc":"code","7f043488":"code","a731ce1d":"code","618c4eb1":"code","8ad77d3a":"code","1df903b7":"code","5cf5c6db":"code","e56e9ebe":"code","a60bce97":"code","4d165048":"code","dc802925":"code","108fff55":"code","ad88c61b":"code","1203a634":"code","5b68d89c":"code","48ccabc2":"code","3eb56fee":"code","14844af3":"code","21fbf9c6":"code","483ee0db":"code","9367c581":"code","e4cf7714":"code","01447790":"code","5e7db134":"code","640e0eca":"code","f129a861":"code","5b2d827c":"code","90d88e39":"code","65f4f132":"code","9a300ccb":"code","c5407226":"code","2f7c8999":"code","89639109":"code","fe25dfc3":"code","41b96b78":"code","6000f212":"code","d4627263":"code","65678dce":"code","b5c3df6c":"code","273dd99b":"code","d59d0016":"code","2307ad1a":"code","47dd4b5e":"code","0f308550":"markdown","aaf6bdf2":"markdown","a171f4f8":"markdown","682aecac":"markdown","fb0af590":"markdown","dc4ba392":"markdown","159935c4":"markdown","7a0aadc9":"markdown","18b27617":"markdown","10e9d016":"markdown","535c77ac":"markdown","176f4fc5":"markdown","97f6c0bb":"markdown","dd3504b6":"markdown","cd19e35d":"markdown","1e94a10a":"markdown","3b0ed1d4":"markdown","5e355dc3":"markdown","5008e44c":"markdown","3edde1d0":"markdown","283d6225":"markdown","6e0c3fc4":"markdown","50807c0e":"markdown","0f8a3d88":"markdown","2f653d32":"markdown","29d7d05f":"markdown","1b0f9222":"markdown","a35d6dfa":"markdown","252eb35c":"markdown","7f969dd3":"markdown","4b978c5c":"markdown","2eddba79":"markdown","8f8d1825":"markdown","6d7b4285":"markdown","a95b9735":"markdown","436e40bc":"markdown","82cf02ce":"markdown","057be24a":"markdown","9054b3be":"markdown","47b95e7c":"markdown","5f1fa388":"markdown","b6bdb10e":"markdown","03b3f613":"markdown","1852be9d":"markdown","fa2f3b7f":"markdown","60cabb09":"markdown","68153ff0":"markdown","8ba9b564":"markdown","fd630fa4":"markdown","d199588c":"markdown","57259632":"markdown","91178a1e":"markdown","fb13dc7a":"markdown","95d42498":"markdown","fe8123bb":"markdown","defceb29":"markdown","3f1c13b9":"markdown","fac50bb2":"markdown","aa405c1c":"markdown","8a4650d0":"markdown","8f2942f1":"markdown","59e73511":"markdown","9ebfee52":"markdown","cb12d4fb":"markdown","7b7021bd":"markdown","a3cd69af":"markdown","1c4c24c0":"markdown","1974c026":"markdown","4807f357":"markdown","8ad50917":"markdown","e1cfad63":"markdown","587be3cb":"markdown","c63a5557":"markdown","e2b7b289":"markdown","2de7534a":"markdown","fdf2ba7a":"markdown","1ae06ac5":"markdown","3d9f6a82":"markdown","679d22f8":"markdown","257e7786":"markdown","2d06bcbd":"markdown","582c551f":"markdown","6a50d0c9":"markdown","78630e3c":"markdown","ffafa7f3":"markdown","0520abb6":"markdown","1db539ca":"markdown","5ac0f87c":"markdown","0699f77c":"markdown","dfd41bda":"markdown","feaae1dc":"markdown","49b340cc":"markdown","30961bb6":"markdown","f22432d8":"markdown","73dae65e":"markdown","18587e21":"markdown","c7e31624":"markdown","af9bb432":"markdown","7646a849":"markdown","cd04da65":"markdown","d19cebc3":"markdown","2bd3de78":"markdown","f2d2a455":"markdown","2dd64bd1":"markdown","30f223b5":"markdown","a1d7927a":"markdown","c9f573dc":"markdown","a05c4a7a":"markdown","da499bcb":"markdown","cb887798":"markdown"},"source":{"34bab178":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41960d34":"import pandas\nimport pandas as pd\nimport numpy\nimport numpy as np\nimport random as rn\nimport functools\nimport re\n\nimport warnings\nwarnings.filterwarnings('ignore')","d9ba6618":"import pandas\nimport pandas as pd\nimport numpy\nimport numpy as np\nimport random as rn\nimport functools\nimport re","43560ab4":"print('Task 1:')  \nprint(pd.__version__)","dd9a4b3d":"print('Task 2:')\ndtype = [('Col1','int32'), ('Col2','float32'), ('Col3','float32')]\nvalues = numpy.zeros(20, dtype=dtype)\nindex = ['Row'+str(i) for i in range(1, len(values)+1)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)\n\ndf = pandas.DataFrame(values)\nprint(df)","f8c7a438":"print('Task 3:')\ndf = pandas.read_csv('..\/input\/datasets-for-pandas\/data1.csv', sep=';', header=None)\nprint(df.iloc[:4]) # 0 - 4 = 5 values","25aff892":"print('Task 4:')\nvalues = np.random.randint(2, 10, size=4)\nprint(values)","79d401e3":"print('Task 5:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(3, 2)), columns=list('xy'))\nprint(df)","701e0ed1":"print('Task 6:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(2, 4)), columns=['A', 'B', 'C', 'D'])\nprint(df)","dcf900f0":"print('Task 7:')\nvalues = np.random.randint(5, size=(2, 4))\nprint(values)\nprint(type(values))","16a886cb":"print('Task 8:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(3, 5)), columns=['Toronto', 'Ottawa', 'Calgary', 'Montreal', 'Quebec'])\nprint(df)","1f545564":"print('Task 9:')  \ndtype = [('One','int32'), ('Two','int32')]\nvalues = np.zeros(3, dtype=dtype)\nindex = ['Row'+str(i) for i in range(1, 4)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)","a077cdd0":"print('Task 10:')  \ndtype = [('Science','int32'), ('Maths','int32')]\nvalues = np.zeros(3, dtype=dtype)\n\n#print(type(dtype))\n#values = np.random.randint(5, size=(3, 2))\n#print(values)\n#index = ['Row'+str(i) for i in range(1, 4)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)","45c88b58":"print('Task 11:')  \n\ncsv = pd.read_csv('..\/input\/datasets-for-pandas\/uk-500.csv')\nprint(csv.head())","91efa0c8":"print('Task 12:')  \n#df = df.from_csv(path, header, sep, index_col, parse_dates, encoding, tupleize_cols, infer_datetime_format)\ndf = pd.read_csv('..\/input\/datasets-for-pandas\/uk-500.csv')\nprint(df.head())","af1c2527":"print('Task 13:') \ndf = pandas.read_csv('..\/input\/datasets-for-pandas\/data1.csv', sep=',')\nprint(df.shape) \n#print(df[2:14])\nprint(df.iloc[0:4,0:2])\n#print(df[df.columns[0]])","e5c4a870":"print('Task 14:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\n\nprint(df.iloc[::2, 0:3])    ","13e4cd3d":"print('Task 15:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \ndf['total'] = df.sum(axis=1)\n\nprint(df)","ab34365a":"print('Task 16:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\ndf = df[df.science > 50]\nprint(df)","351698e5":"print('Task 17:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\ndf = df.query('science > 45')\nprint(df)","646900ef":"print('Task 18:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[5])\nprint(df.shape)\nprint(df)","863beb6f":"print('Task 19:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[1, 5, 7])\nprint(df.shape)\n#print(df) \n\n#df = df[df[[1]] > 45]\nprint(df)","454f8907":"print('Task 20:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\n#df = df[int(df.columns[2]) > 45]\nprint(df)\nprint(type(df.columns[2]))","9b365c85":"print('Task 21:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[0])\nprint(df.shape)\nprint(df) \n\n#df = df[int(df.columns[2]) > 45]\n#print(df)\nprint(df.columns[2])","8ccb4acb":"print('Task 22:')\nfrom io import StringIO\n\ns = \"\"\"\n        1, 2\n        3, 4\n        5, 6\n    \"\"\"\n\ndf = pd.read_csv(StringIO(s), header=None)\n\nprint(df.shape)\nprint(df)","ae65539f":"print('Task 23:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\ndf['sum'] = df.sum(axis=1)\ndf['max'] = df.max(axis=1)\ndf['min'] = df.min(axis=1)\ndf['average'] = df.mean(axis=1).astype(int)\nprint(df)","c772306c":"def apply_math_special(row):\n    return (row.maths * 2 + row.language \/ 2 + row.history \/ 3 + row.science) \/ 4                \n\nprint('Task 24:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\ndf['sum'] = df.sum(axis=1)\ndf['max'] = df.max(axis=1)\ndf['min'] = df.min(axis=1)\ndf['average'] = df.mean(axis=1).astype(int)\ndf['math_special'] = df.apply(apply_math_special, axis=1).astype(int)\nprint(df)","5fca0f7b":"def pass_one_subject(row):\n    if(row.maths > 34):\n        return 'Pass'\n    if(row.language > 34 and row.science > 34):\n        return 'Pass'\n    \n    return 'Fail'                \n\nprint('Task 25:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)   \n\ndf['pass_one'] = df.apply(pass_one_subject, axis=1)\nprint(df)","2122bfc6":"print('Task 26:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc2.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)   \nprint(df)\ndf.fillna(df.mean(), inplace=True)\n\n#df['pass_one'] = df.apply(pass_one_subject, axis=1)\nprint(df)","4351fc67":"print('Task 27:')\ndf = pd.DataFrame(np.random.rand(10, 5))\ndf.iloc[0:3, 0:4] = np.nan # throw in some na values\nprint(df)\ndf.loc[:, 'test'] = df.iloc[:, 2:].sum(axis=1)\nprint(df)","6ee3f269":"print('Task 28:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/score.csv', sep=',', encoding = \"ISO-8859-1\")\nprint(df.shape) ","a5f57ff6":"print('Task 29:') \ndf = pd.DataFrame(np.random.rand(3,4), columns=list(\"ABCD\"))\nprint(df.shape)   \nprint(df)\ndf.fillna(df.mean(), inplace=True)\n\nprint(df)","31c83c4f":"print('Task 30:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[-4:])","7078d112":"print('Task 31:')\nseries1 = pd.Series([i \/ 100.0 for i in range(1,6)])\nprint(series1)\ndef CumRet(x,y):\n    return x * (1 + y)\ndef Red(x):\n    return functools.reduce(CumRet,x,1.0)\ns2 = series1.expanding().apply(Red)\n# s2 = series1.expanding().apply(Red, raw=True) # is not working\nprint(s2)","49a11365":"print('Task 32:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[2:4])","f01226d1":"print('Task 33:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[-4:-1])","46ca4e00":"print('Task 34:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df.iloc[1:9])","1f9ba5ed":"print('Task 35:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';')","83555232":"print('Task 36:')  \ndef xrange(x):\n    return iter(range(x))\n\nrnd_1  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_2  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_3  =  [ rn.randrange ( 1 , 20 )  for  x in  xrange ( 1000 )] \ndate  =  pd . date_range ( '2012-4-10' ,  '2015-1-4' )\nprint(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n\ndata.head()","5ed76996":"print('Task 37:')\nbelow_20 = data[data['rnd_1'] < 20]    \nprint(below_20)","7416540e":"print('Task 38:') \ndef xrange(x):\n    return iter(range(x))\nrnd_1  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_2  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_3  =  [ rn.randrange ( 1 , 20 )  for  x in  xrange ( 1000 )] \ndate  =  pd . date_range ( '2012-4-10' ,  '2015-1-4' )\nprint(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\nbelow_20 = data[data['rnd_1'] < 20]\nten_to_20 = data[(data['rnd_1'] >= 5) & (data['rnd_1'] < 10)]\n#print(ten_to_20)","6b2d691b":"print('Task 39:')      \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n#print(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n#print(len(date))\nten_to_20 = data[(data['rnd_1'] >= 15) & (data['rnd_1'] < 20)]\nprint(ten_to_20)","c7ff6eaf":"print('Task 40:')      \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n\nten_to_20 = data[(data['rnd_1'] >= 15) & (data['rnd_1'] < 33)]\nprint(ten_to_20)","219ae929":"print('Task 41:')  \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef xrange(x):\n    return iter(range(x))\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\nfilter_loc = data.loc[ 2 : 4 ,  [ 'rnd_2' ,  'date' ]]\nprint(filter_loc)","3f63aeab":"print('Task 42:')\ndate_date = data.set_index( 'date' ) \nprint(date_date.head())","0871de7c":"print('Task 43:') \ndf = pd.DataFrame({\n    'a' : [1,2,3,4], \n    'b' : [9,8,7,6],\n    'c' : [11,12,13,14]\n});\nprint(df) \n\nprint('changing on one column')\n# Change columns\ndf.loc[df.a >= 2,'b'] = 9\nprint(df)","2ce5510c":"print('Task 44:')  \nprint('changing on multipe columns')\ndf.loc[df.a > 2,['b', 'c']] = 45\nprint(df)","c4379e36":"print('Task 45:')  \nprint(df)\ndf_mask = pd.DataFrame({\n    'a' : [True] * 4, \n    'b' : [False] * 4,\n    'c' : [True, False] * 2\n})\nprint(df.where(df_mask,-1000))","025e7063":"print('Task 46:')\nprint(df)  \ndf['logic'] = np.where(df['a'] > 5, 'high', 'low')\nprint(df)","c33f8b65":"print('Task 47:')\nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df['language_grade'] = np.where(marks_df['Language'] >= 50, 'Pass', 'Fail')\nmarks_df['math_grade'] = np.where(marks_df['Math'] >= 50, 'Pass', 'Fail')\nmarks_df['science_grade'] = np.where(marks_df['Science'] >= 50, 'Pass', 'Fail')\nprint(marks_df)","1a4c71d0":"print('Task 48:')  \nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df_passed_in_language = marks_df[marks_df.Language >=50 ]\nprint(marks_df_passed_in_language)","0544d7df":"print('Task 49:')  \nmarks_df_passed_in_lang_math = marks_df[(marks_df.Language >=50) & (marks_df.Math >= 50)]\nprint(marks_df_passed_in_lang_math)","69efb19c":"print('Task 50:')  \nmarks_df_passed_in_lang_and_sc = marks_df.loc[(marks_df.Language >=50) & (marks_df.Science >= 50)]\nprint(marks_df_passed_in_lang_and_sc)","c7d30d2d":"print('Task 51:')\nstars = {\n    'age' : [31, 23, 65, 50],\n    'movies' : [51, 23, 87, 200],\n    'awards' : [42, 12, 4, 78]\n    }\nstar_names = ['dhanush', 'simbu', 'kamal', 'vikram']\nstars_df = pd.DataFrame(data=stars, index=[star_names])\nprint(stars_df)","e62ac0a9":"print('Task 52:')  \nprint(stars_df.iloc[1:3])","18b83de9":"print('Task 53:')  \nnumbers = pd.DataFrame({\n        'one' : [10, 50, 80, 40],\n        'two' : [2, 6, 56, 45]\n    },\n    index = [12, 14, 16, 18])\nprint(numbers)\n\nprint('label between 12 and 16')\nprint(numbers.loc[12:16])\n\nprint('index between 1 and 3')\nprint(numbers.iloc[1:3])","f987925f":"print('Task 54:') \nstars = {\n    'age' : [31, 23, 65, 50],\n    'movies' : [51, 23, 87, 200],\n    'awards' : [42, 12, 4, 78]\n    }\nstar_names = ['dhanush', 'simbu', 'kamal', 'vikram']\nstars_df = pd.DataFrame(data=stars, index=[star_names])\nnumbers = pd.DataFrame({\n        'one' : [10, 50, 80, 40],\n        'two' : [2, 6, 56, 45]\n    },\n    index = [12, 14, 16, 18])\nprint(numbers)","f7ac3d88":"print('Task 55:')\n\nage_movies_25 = stars_df[(stars_df.movies > 25 ) & (stars_df.age > 25)]  \nprint(age_movies_25)","edb187a3":"print('Task 56:')  \ncustom_stars = stars_df[stars_df.age.isin([31, 65])]\nprint(custom_stars)","ac8a3085":"print('Task 57:')  \nprint(numbers)\nprint(numbers[~( (numbers.one > 45) & (numbers.two < 50) )])","2130cf0c":"print('Task 58:')\ndef GrowUp(x):\n    avg_weight =  sum(x[x['size'] == 'series1'].weight * 1.5)\n    avg_weight += sum(x[x['size'] == 'M'].weight * 1.25)\n    avg_weight += sum(x[x['size'] == 'L'].weight)\n    avg_weight \/= len(x)\n    return pd.Series(['L',avg_weight,True], index=['size', 'weight', 'adult'])\n\nanimals_df = pd.DataFrame({'animal': 'cat dog cat fish dog cat cat'.split(),\n                   'size': list('SSMMMLL'),\n                   'weight': [8, 10, 11, 1, 20, 12, 12],\n                   'adult' : [False] * 5 + [True] * 2})\n\ngb = animals_df.groupby(['animal'])\n\nexpected_df = gb.apply(GrowUp)\nprint(expected_df)","1afa3932":"print('Task 59:')\nweights = animals_df.groupby(['weight']).get_group(20)  \nprint(weights)","47675a12":"print('Task 60:')\nsides_df = pd.DataFrame({\n    'a' : [1, 1, 2, 4],\n    'b' : [2, 1, 3, 4]\n    })  \nprint(sides_df)\nsource_cols = sides_df.columns\nprint(source_cols)\nnew_cols = [str(x)+\"_side\" for x in source_cols]\nside_category = {\n    1 : 'North',\n    2 : 'East',\n    3 : 'South', \n    4 : 'West'\n    }\nsides_df[new_cols] = sides_df[source_cols].applymap(side_category.get)\nprint(sides_df)","cbafb5b8":"print('Task 61:')  \ndf = pd.DataFrame({'A' : [1, 1, 2, 2], 'B' : [1, -1, 1, 2]})\nprint(df)\n\ngb = df.groupby('A')\n\ndef replace(g):\n    mask = g < 0\n    g.loc[mask] = g[~mask].mean()\n    return g\n\ngbt = gb.transform(replace)\n\nprint(gbt)","b6cb7468":"print('Task 62:') \nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df_passed_in_lang_or_sc = marks_df.loc[(marks_df.Language >=50) | (marks_df.Science >= 50)]\nprint(marks_df_passed_in_lang_or_sc)","bd04ba37":"print('Task 63:')  \nmarks_df['passed_one_subject'] = 'Fail' \nmarks_df.loc[(marks_df.Language >=50) , 'passed_one_subject'] = 'Pass'\nprint(marks_df)","ddc6f294":"print('Task 64:')  \ndf = pd.DataFrame({\n    \"a\": np.random.randint(0, 100, size=(5,)), \n    \"b\": np.random.randint(0, 70, size=(5,))\n})\nprint(df)\npar = 65\nprint('with argsort')\ndf1 = df.loc[(df.a-par).abs().argsort()]\nprint(df1)\n\nprint(df.loc[(df.b-2).abs().argsort()])","b21b9c88":"print('Task 65:')  \nstars = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"movies\": [2, 3, 90, 45, 34, 2] \n})\nprint(stars.loc[(stars.age - 50).abs().argsort()])","ae2af853":"print('Task 66:')  \nprint(stars.loc[(stars.age - 17).abs().argsort()])","1c3e7743":"print('Task 67:')\nstars = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"movies\": [22, 33, 90, 75, 34, 2] \n})  \nprint(stars)\nprint('Young and more movies acted')\nyoung = stars.age < 30    \nmore_movies = stars.movies > 30\nyoung_more = [young, more_movies]\nyoung_more_Criteria = functools.reduce(lambda x, y : x & y, young_more)\nprint(stars[young_more_Criteria])","8b11735b":"print('Task 68:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nprint('Young, Higher Salary, and Higher Position')\nyoung = employees.age < 30\nhigh_salary = employees.salary > 60\nhigh_position = employees.grade > 6\nyoung_salary_position = [young, high_salary, high_position]\nyoung_salary_position_Criteria = functools.reduce(lambda x, y : x & y, young_salary_position)\nprint(employees[young_salary_position_Criteria])","f80f0375":"print('Task 69:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees.rename(columns={'age': 'User Age', 'salary': 'Salary 2018'}, inplace=True)\nprint(employees)","abfd28a1":"print('Task 70:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)","60ef100b":"print('Task 71:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)\nemployees.drop(employees.columns[[0]], axis=1, inplace = True)\nprint(employees)","427d4394":"print('Task 72:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)\nemployees.drop(employees.columns[[1, 2]], axis=1, inplace = True)\nprint(employees)","9e82cc09":"print('Task 73:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)\nemployees.drop(employees.columns[[0, len(employees.columns)-1]], axis=1, inplace = True)\nprint(employees)","b9a80421":"print('Task 74:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)\ngroup = employees.pop('group')\nprint(employees)\nprint(group)","df13bb4d":"print('Task 75:')  \n# df = pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6]), ('C', [7,8, 9])], orient='index', columns=['one', 'two', 'three'])\n# print(df) # throwing error","50c71a97":"print('Task 76:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list1 = list(employees.columns.values) \nemployees_list2 = employees.values.tolist()\n#employees_list = list(employees)\nprint(employees_list1)\nprint(employees_list2)","ffa3f602":"print('Task 77:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = employees.values.tolist()\nprint(employees_list2)\nprint(type(employees_list2))\nprint(len(employees_list2))","7d640441":"print('Task 78:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = employees.values\nprint(employees_list2)\nprint(type(employees_list2))\nprint(employees_list2.shape)","53df3437":"print('Task 79:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = map(list, employees.values)\nprint(employees_list2)\nprint(type(employees_list2))","09882cbc":"print('Task 80:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = list(map(list, employees.values))\nprint(employees_list2)\nprint(type(employees_list2))","7f043488":"print('Task 81:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('id', inplace=True, keep='last')\nprint(users)","a731ce1d":"print('Task 82:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers1 = users[['id', 'city']]\nprint(users1)","618c4eb1":"print('Task 83:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n}) \nprint(users)\ncolumns = ['id', 'count']\nusers1 = pd.DataFrame(users, columns=columns)\nprint(users1)","8ad77d3a":"print('Task 84:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nusers1 = users.iloc[0:2, 1:3]\nprint(users1)","1df903b7":"print('Task 85:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor index, row in users.iterrows():\n    print(row['city'], \"==>\", row['count'])","5cf5c6db":"print('Task 86:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor row in users.itertuples(index=True, name='Pandas'):\n    print(getattr(row, 'city'))\n    \nfor row in users.itertuples(index=True, name='Pandas'):\n    print(row.count)","e56e9ebe":"print('Task 87:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor i, row in users.iterrows():\n    for j, col in row.iteritems():    \n        print(col)","a60bce97":"print('Task 88:')  \npointlist = [\n                {'points': 50, 'time': '5:00', 'year': 2010}, \n                {'points': 25, 'time': '6:00', 'month': \"february\"}, \n                {'points':90, 'time': '9:00', 'month': 'january'}, \n                {'points_h1':20, 'month': 'june'}\n            ]\nprint(pointlist)\npointDf = pd.DataFrame(pointlist)\nprint(pointDf)\n\npointDf1 = pd.DataFrame.from_dict(pointlist)\nprint(pointDf1)","4d165048":"print('Task 89:')\ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\ndf1 = df.isnull()\nprint(df1)","dc802925":"print('Task 90:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum())\nprint(df.isnull().sum(axis=1))\nprint(df.isnull().sum().tolist())","108fff55":"print('Task 91:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum(axis=1))","ad88c61b":"print('Task 92:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum().tolist())","1203a634":"print('Task 93:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\n\n# below line throws error\n# users1 = users.reindex_axis(['city', 'count', 'id'], axis=1)\n# print(users1)\n\nusers2 = users.reindex(columns=['city', 'id', 'count'])\nprint(users2)","5b68d89c":"print('Task 94:')\nnumbers = pd.DataFrame({\n    \"id\": [1, 2, 3, 4, 5, 6], \n    \"number\": [10, 20, 30, 30, 23, 12]\n    \n})  \nprint(numbers)\nnumbers.drop(numbers.index[[0, 3, 5]], inplace=True)\nprint(numbers)","48ccabc2":"print('Task 95:')  \nnumbers = pd.DataFrame({\n    \"id\": [1, 2, 3, 4, 5, 6], \n    \"number\": [10, 20, 30, 30, 23, 12]\n    \n}, index=['one', 'two', 'three', 'four', 'five', 'six'])  \nprint(numbers)\nnumbers1 = numbers.drop(['two','six'])\nprint(numbers1)\nnumbers2 = numbers.drop('two')\nprint(numbers2)","3eb56fee":"print('Task 96:')\ncats = animals_df.groupby(['animal']).get_group('cat')\nprint(cats)","14844af3":"print('Task 97:')  \nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[::2])","21fbf9c6":"print('Task 98:')  \nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[:, 1::2])","483ee0db":"print('Task 99:')  \n\nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[::2, 1::2])","9367c581":"print('Task 100:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('id', inplace=True)\nprint(users)","e4cf7714":"print('Task 101:')  \nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('name', inplace=True, keep='last')\nprint(users)\nusers1 = users.drop_duplicates('name', keep=False)\nprint(users1)","01447790":"print('Task 102:')\nanimals_df1 = animals_df.groupby('animal').apply(lambda x: x['size'][x['weight'].idxmax()])\nprint(animals_df1)","5e7db134":"print('Task 103:')  \ndf = pd.DataFrame(np.random.randn(6,1), index=pd.date_range('2013-08-01', periods=6, freq='B'), columns=list('A'))\nprint(df)\ndf.loc[df.index[3], 'A'] = np.nan\nprint(df)","640e0eca":"print('Task 104:')\ndf1 = df.reindex(df.index[::-1]).ffill()\nprint(df1)","f129a861":"print('Task 105:')\nanimals_df = pd.DataFrame({'animal': 'cat dog cat fish dog cat cat'.split(),\n                   'size': list('SSMMMLL'),\n                   'weight': [8, 10, 11, 1, 20, 12, 12],\n                   'adult' : [False] * 5 + [True] * 2})\nprint(animals_df)","5b2d827c":"# 106. Change columns\nprint('Task 106:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Before changing columns : ')\nprint(users)\n\n# change columns\nusers_new = users.rename({'name': 'first_name', 'city': 'current_city'}, axis = 1)\n\nprint('\\nAfter changing columns : ')\nprint(users_new)","90d88e39":"# 106. Find any matching value\n\nprint('Task 107:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe:')\nprint(users)\n\nprint('\\nFinding `Montreal` in any cell :')\nprint(users[users.eq('Montreal').any(1)])","65f4f132":"# 107. Match with isin function\n\nprint('Task 107:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe:')\nprint(users)\n\nprint('\\nFinding `Montreal` in by using isin function :')\n\nusers.isin(['Montreal']).any()","9a300ccb":"# 108. Finding specific items by using `isin` function\n\nprint('Task 108:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe: ')\nprint(users)\n\nprint('\\nFinding `Montreal` in using isin and stack them: ')\nprint(users[users.isin(['Montreal'])].stack())","c5407226":"# 109. Exclude specific matching\n\nprint('Task 109:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe: ')\nprint(users)\n\nprint('\\nExcluding `Montreal` in using isin and stack them: ')\nprint(users[~users.isin(['Montreal'])].stack())","2f7c8999":"# 110. Apply a custom function on multiple columns\n\nprint('Task 110:')\n\namounts = pd.DataFrame({\n    \"CIBC\": [200, 4200, 300, 300], \n    \"TD\": [1200, 800, 4000, 2000]\n})\n\nprint('Original Dataframe: ')\nprint(amounts)\n\ndef get_total_amount(x):\n    \n    # if the amount is less than 500, skip it\n    total_amount = 0\n    \n    if(x['CIBC'] > 499):\n        total_amount += x['CIBC']\n        \n    if(x['TD'] > 499):\n        total_amount += x['TD']\n    \n    return total_amount\n\namounts['Total'] = amounts.apply(get_total_amount, axis = 1)\n\nprint('Dataframe after applying the custom function: ')\nprint(amounts)","89639109":"# 111. iterrows as tuples\n\nprint('Task 111:')\n\nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \n\nprint(users)  \n\nprint('\\nIterate rows as tuples:')\nfor row in users.itertuples():\n    print(row)","fe25dfc3":"# 112. Dataframe with NaN\n\nprint('Task 112:')\n\ndf = pd.DataFrame(np.nan, index = [0, 1, 2], columns = ['A', 'B', 'C'])\n\nprint(df)","41b96b78":"# 113. Simple Dataframe with NaN\n\nprint('Task 113:')\n\ndf = pd.DataFrame([np.nan] * 5)\n\nprint(df)","6000f212":"# 114. Pandas and Date with Range\n\nprint('Task 114:')\n\nimport datetime as dt\n\npd.np.random.seed(0)\n\ndf = pd.DataFrame({\n     \"date\" : [dt.date(2012, x, 1) for x in range(1, 11)]\n})\n\nprint(df)","d4627263":"# 115. Pandas and Numpy Repeat\n\nprint('Task 115:')\n\ndf = pd.DataFrame({\n     \"entry\" : np.repeat(3, 7) # Repeat the number for 7 times\n})\n\nprint(df)","65678dce":"# 116. read_sql in Pandas\n\nprint('Task 116:')\n\nimport sqlite3 as sql\n\nconn = sql.connect('\/kaggle\/input\/rj-sample-datasets\/sample.db')\n\ndemo_df = pd.read_sql('SELECT ID, NAME FROM DEMO', conn)\n\nprint(demo_df)\n\n# Note: online sqlite https:\/\/sqliteonline.com\/","b5c3df6c":"# 117. Get a single value by iat\n\nprint('Task 117:')\n\ndf = pd.DataFrame(np.random.randint(0, 100, size = (7, 2)), columns = list('ab'))\n\nprint('\\nOriginal Dataframe:')\nprint(df)\n\nval = df.iat[3, 1]\n\nprint('\\nGetting value at 3rd row and first col:')\nprint(val)","273dd99b":"# 118. Get last n elements\n\nprint('Task 118:')\n\ndf = pd.DataFrame(np.random.randint(0, 100, size = (7, 2)), columns = list('ab'))\n\nprint('\\nOriginal Dataframe:')\nprint(df)\n\ntail_df = df.tail(3)\n\nprint('\\nLast 3 rows:')\nprint(tail_df)","d59d0016":"# 119. Add data one by one by using loc function\n\ndf = pd.DataFrame(columns = ['rows', 'cols', 'time taken'])\n\ndf.loc['Dataset1 - Dask'] = (1000, 20, 10)\ndf.loc['Dataset1 - Pandas'] = (1000, 20, 15)\n\ndf","2307ad1a":"!pip install country_converter","47dd4b5e":"# 120. Convert country in Dataframe \n\nimport country_converter as coco\nimport pandas as pd\n\ndf = pd.DataFrame({'code': ['IN', 'USA', 'BR', 'CAN']})\n\nprint('Before:')\nprint(df)\n\ndf['country'] = df.code.apply(lambda x: coco.convert(names = x, to = 'name_short', not_found = None))\n\nprint('\\nAfter:')\nprint(df)","0f308550":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"43\"><\/a>\n        <font><b>Task 43:<\/b><\/font>\n        <br><br>\n        Change columns based on other columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","aaf6bdf2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"79\"><\/a>\n        <font><b>Task 79:<\/b><\/font>\n        <br><br>\n        Pandas rows to map\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","a171f4f8":"### Extras","682aecac":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"5\"><\/a>\n        <font><b>Task 5:<\/b><\/font>\n        <br><br>\n        Create Random integer between 0 to 100 \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>\n","fb0af590":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"28\"><\/a>\n        <font><b>Task 28:<\/b><\/font>\n        <br><br>\n        Unicode issue and fix\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","dc4ba392":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"24\"><\/a>\n        <font><b>Task 24:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n<br>float to int used\n<br>Math is considered more, so double the marks for maths\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","159935c4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"82\"><\/a>\n        <font><b>Task 82:<\/b><\/font>\n        <br><br>\n        Selecting multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","7a0aadc9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"7\"><\/a>\n        <font><b>Task 7:<\/b><\/font>\n        <br><br>\n        2D array with random between 0 and 5\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","18b27617":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"105\"><\/a>\n        <font><b>Task 105:<\/b><\/font>\n        <br><br>\n        Column reset Nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","10e9d016":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"60\"><\/a>\n        <font><b>Task 60:<\/b><\/font>\n        <br><br>\n        Creating new Columns using Applymap\n        <br>Sides & applymap\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","535c77ac":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"41\"><\/a>\n        <font><b>Task 41:<\/b><\/font>\n        <br><br>\n        Custom method and xrnage on dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","176f4fc5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"77\"><\/a>\n        <font><b>Task 77:<\/b><\/font>\n        <br><br>\n        Pandas rows to list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","97f6c0bb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"62\"><\/a>\n        <font><b>Task 62:<\/b><\/font>\n        <br><br>\n        Students passed in Language or Science (any one subject)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","dd3504b6":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"4\"><\/a>\n        <font><b>Task 4:<\/b><\/font>\n        <br><br>\n        Create Random integer between 2 to 10 with 4 items\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","cd19e35d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"45\"><\/a>\n        <font><b>Task 45:<\/b><\/font>\n        <br><br>\n        Pandas Mask\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1e94a10a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"94\"><\/a>\n        <font><b>Task 94:<\/b><\/font>\n        <br><br>\n        Drop multiple rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","3b0ed1d4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"55\"><\/a>\n        <font><b>Task 55:<\/b><\/font>\n        <br><br>\n        Row label selection\n        <br>Age is above 25 and movies above 25\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5e355dc3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"61\"><\/a>\n        <font><b>Task 61:<\/b><\/font>\n        <br><br>\n        Replacing some values with mean of the rest of a group\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","5008e44c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"70\"><\/a>\n        <font><b>Task 70:<\/b><\/font>\n        <br><br>\n        Add a new column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3edde1d0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"97\"><\/a>\n        <font><b>Task 97:<\/b><\/font>\n        <br><br>\n        Get the the odd row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","283d6225":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"22\"><\/a>\n        <font><b>Task 22:<\/b><\/font>\n        <br><br>\n        String to Dataframe\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","6e0c3fc4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"25\"><\/a>\n        <font><b>Task 25:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n<br>35 marks considered as pass \n<br>If the student fails in math, consider fail\n<br>If the student passes in language and science, consider as pass\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","50807c0e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"35\"><\/a>\n        <font><b>Task 35:<\/b><\/font>\n        <br><br>\n        Loc - iloc - ix - at - iat\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0f8a3d88":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"16\"><\/a>\n        <font><b>Task 16:<\/b><\/font>\n        <br><br>\n        Delete Rows of one column where the value is less than 50\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2f653d32":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"48\"><\/a>\n        <font><b>Task 48:<\/b><\/font>\n        <br><br>\n        Get passed grades\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","29d7d05f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"64\"><\/a>\n        <font><b>Task 64:<\/b><\/font>\n        <br><br>\n        argsort\n        <br>Select rows with data closest to certain value using argsort\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1b0f9222":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"83\"><\/a>\n        <font><b>Task 83:<\/b><\/font>\n        <br><br>\n        Selecting multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a35d6dfa":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"10\"><\/a>\n        <font><b>Task 10:<\/b><\/font>\n        <br><br>\n        Fill Random Science and Math Marks\n        <br><br>\n        (has some bugs in it)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>\n","252eb35c":"\n<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n\n<font color=\"teal\" size=+1><b>Content List<\/b><\/font>\n    \n* [1. Check Pandas Version](#1)\n* [2. Create Numpy Array: Create three columns with Zero values](#2)\n* [3. iLoc in Pandas : Print first five rows](#3)\n* [4. Create Random integer between 2 to 10 with 4 items](#4)\n* [5. Create Random integer between 0 to 100](#5)\n* [6. Create Random integer between 2 to 10 with 4 columns](#6)\n* [7. 2D array with random between 0 and 5](#7)\n* [8. Create Random integer between 0 to 100 with 10 itmes (2 rows, 5 columns)](#8)\n* [9. 3 rows, 2 columns in pandas](#9)\n* [10. Fill Random Science and Math Marks](#10)\n* [11. CSV to DatRaframe (from_csv)](#11)\n* [12. CSV to Dataframe (from_csv)](#12)\n* [13. First 4 rows and 2 columns of CSV](#13)\n* [14. Show even rows and first three columns](#14)\n* [15. New columns as sum of all](#15)\n* [16. Delete Rows of one column where the value is less than 50](#16)\n* [17. Delete with Query](#17)\n* [18. Skip single row](#18)\n* [19. Skip multiple rows](#19)\n* [20. Select Column by Index](#20)\n* [21. Skip rows](#21)\n* [22. String to Dataframe](#22)\n* [23. New columns as max of other columns](#23)\n* [24. New columns as max of other columns](#24)\n* [25. New columns as max of other columns](#25)\n* [26. Fill with average](#26)\n* [27. New columns as sum of all](#27)\n* [28. Unicode issue and fix](#28)\n* [29. Fill with average](#29)\n* [30. Last 4 rows](#30)\n* [31. Expanding Apply](#31)\n* [32. Get 3 and 4th row](#32)\n* [33. Last 4th to 1st](#33)\n* [34. iloc position slice](#34)\n* [35. Loc - iloc - ix - at - iat](#35)\n* [36. Random data](#36)\n* [37. Filter with the value comparison](#37)\n* [38. Filter between 5 and 10 on col 1](#38)\n* [39. Filter between 15 to 20](#39)\n* [40. Filter between 15 to 33](#40)\n* [41. Custom method and xrnage on dataframe](#41)\n* [42. Set index with date column](#42)\n* [43. Change columns based on other columns](#43)\n* [44. Change multiple columns based on one column values](#44)\n* [45. Pandas Mask](#45)\n* [46. Check high or low comparing the column against 5](#46)\n* [47. Student Marks (Pass or Fail)](#47)\n* [48. Get passed grades](#48)\n* [49. Students passed in Language and Math](#49)\n* [50. Students passed in Language and Science](#50)\n* [51. Loc with Label oriented slicing](#51)\n* [52. iloc with positional slicing](#52)\n* [53. Label between numbers](#53)\n* [54. Stars with names](#54)\n* [55. Row label selection Age is above 25 and movies above 25](#55)\n* [56. Stars in in certain ages](#56)\n* [57. Inverse opeartor !( above one.45 and below two.50 )](#57)\n* [58. Apply custom function](#58)\n* [59. Group by single column](#59)\n* [60. Creating new Columns using Applymap Sides & applymap](#60)\n* [61. Replacing some values with mean of the rest of a group](#61)\n* [62. Students passed in Language or Science (any one subject)](#62)\n* [63. possible errors: TypeError: 'Series' objects are mutable, thus they cannot be hashed](#63)\n* [64. argsort Select rows with data closest to certain value using argsort](#64)\n* [65. argsort with stars](#65)\n* [66. Argsort with actors - young stars (near by 17)](#66)\n* [67. Binary operators - Stars with - younger than 19 - very young](#67)\n* [68. Young, Higher Salary, and Higher Position](#68)\n* [69. Rename columns](#69)\n* [70. Add a new column](#70)\n* [71. Drop a column](#71)\n* [72. Drop multiple columns](#72)\n* [73. Drop first and last column](#73)\n* [74. Delete by pop function](#74)\n* [75. DataFrame.from_items](#75)\n* [76. Pandas to list](#76)\n* [77. Pandas rows to list](#77)\n* [78. Pandas rows to array](#78)\n* [79. Pandas rows to map](#79)\n* [80. Pandas rows to map](#80)\n* [81. Drop duplicates](#81)\n* [82. Selecting multiple columns](#82)\n* [83. Selecting multiple columns](#83)\n* [84. Row and Column Slicing](#84)\n* [85. Iterating rows](#85)\n* [86. Iterating tuples](#86)\n* [87. Iterating rows and columns](#87)\n* [88. List of Dictionary to Dataframe](#88)\n* [89. Is Null](#89)\n* [90. Sum of all nan](#90)\n* [91. Sum of all nan rowwise](#91)\n* [92. Sum of all nan as list](#92)\n* [93. Change the order of columns](#93)\n* [94. Drop multiple rows](#94)\n* [95. Drop multiple rows by row name](#95)\n* [96. Get group](#96)\n* [97. Get the the odd row](#97)\n* [98. Get the even columns](#98)\n* [99. Odd rows and even columns](#99)\n* [100. Drop duplicates](#100)\n* [101. Drop all duplicates](#101)\n* [102. Basic group by](#102)\n* [103. Missing Data: Make A'th 3rd coulmn Nan](#103)\n* [104. Reindex](#104)   \n* [104. Column reset Nan](#105)       ","7f969dd3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"42\"><\/a>\n        <font><b>Task 42:<\/b><\/font>\n        <br><br>\n        Set index with date column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","4b978c5c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"26\"><\/a>\n        <font><b>Task 26:<\/b><\/font>\n        <br><br>\n        Fill with average\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","2eddba79":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"65\"><\/a>\n        <font><b>Task 65:<\/b><\/font>\n        <br><br>\n        argsort with stars        \n        <br>old stars (near by 50 age) argsort\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8f8d1825":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"104\"><\/a>\n        <font><b>Task 104:<\/b><\/font>\n        <br><br>\n        reindex\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6d7b4285":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"40\"><\/a>\n        <font><b>Task 40:<\/b><\/font>\n        <br><br>\n        15 to 33\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a95b9735":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"36\"><\/a>\n        <font><b>Task 36:<\/b><\/font>\n        <br><br>\n        Random data\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","436e40bc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"73\"><\/a>\n        <font><b>Task 73:<\/b><\/font>\n        <br><br>\n        Drop first and last column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","82cf02ce":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"86\"><\/a>\n        <font><b>Task 86:<\/b><\/font>\n        <br><br>\n        Iterating tuples\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","057be24a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"23\"><\/a>\n        <font><b>Task 23:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n        <br>float to int used\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","9054b3be":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"95\"><\/a>\n        <font><b>Task 95:<\/b><\/font>\n        <br><br>\n        Drop multiple rows by row name\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","47b95e7c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"\"><\/a>\n        <font><b>Task 63:<\/b><\/font>\n        <br><br>\n        possible errors:\n        <br>TypeError: 'Series' objects are mutable, thus they cannot be hashed\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","5f1fa388":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"18\"><\/a>\n        <font><b>Task 18:<\/b><\/font>\n        <br><br>\n        Skip single row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b6bdb10e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"32\"><\/a>\n        <font><b>Task 32:<\/b><\/font>\n        <br><br>\n        Get 3 and 4th row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","03b3f613":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"100\"><\/a>\n        <font><b>Task 100:<\/b><\/font>\n        <br><br>\n        Drop duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1852be9d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"99\"><\/a>\n        <font><b>Task 99:<\/b><\/font>\n        <br><br>\n        Odd rows and even columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","fa2f3b7f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"71\"><\/a>\n        <font><b>Task 71:<\/b><\/font>\n        <br><br>\n        Drop a column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","60cabb09":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"46\"><\/a>\n        <font><b>Task 46:<\/b><\/font>\n        <br><br>\n        Check high or low comparing the column against 5\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","68153ff0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"17\"><\/a>\n        <font><b>Task 17:<\/b><\/font>\n        <br><br>\n        Delete with Query\n        <br>Note: Query doesn't work if your column has space in it\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8ba9b564":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"75\"><\/a>\n        <font><b>Task 75:<\/b><\/font>\n        <br><br>\n        DataFrame.from_items\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fd630fa4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"37\"><\/a>\n        <font><b>Task 37:<\/b><\/font>\n        <br><br>\n        Filter with the value comparison\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","d199588c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"85\"><\/a>\n        <font><b>Task 85:<\/b><\/font>\n        <br><br>\n        Iterating rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","57259632":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"56\"><\/a>\n        <font><b>Task 56:<\/b><\/font>\n        <br><br>\n        Stars in in certain ages\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","91178a1e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"44\"><\/a>\n        <font><b>Task 44:<\/b><\/font>\n        <br><br>\n        Change multiple columns based on one column values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","fb13dc7a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"34\"><\/a>\n        <font><b>Task 34:<\/b><\/font>\n        <br><br>\n        iloc position slice\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","95d42498":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"80\"><\/a>\n        <font><b>Task 80:<\/b><\/font>\n        <br><br>\n        Pandas rows to map\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fe8123bb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"54\"><\/a>\n        <font><b>Task 54:<\/b><\/font>\n        <br><br>\n        Stars with names\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","defceb29":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"93\"><\/a>\n        <font><b>Task 93:<\/b><\/font>\n        <br><br>\n        Change the order of columns\n\n        Note:\n            FutureWarning: '.reindex_axis' is deprecated and will be removed in a future version \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3f1c13b9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"98\"><\/a>\n        <font><b>Task 98:<\/b><\/font>\n        <br><br>\n        Get the even columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","fac50bb2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"102\"><\/a>\n        <font><b>Task 103:<\/b><\/font>\n        <br><br>\n        Missing Data:\n        Make A'th 3rd coulmn Nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","aa405c1c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"31\"><\/a>\n        <font><b>Task 31:<\/b><\/font>\n        <br><br>\n        Expanding Apply\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","8a4650d0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"47\"><\/a>\n        <font><b>Task 47:<\/b><\/font>\n        <br><br>\n        Student Marks (Pass or Fail)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8f2942f1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"67\"><\/a>\n        <font><b>Task 67:<\/b><\/font>\n        <br><br>\n        Binary operators\n\n        <br>Stars with\n\n        <br>younger than 19 - very young\n\n        <br>more movies acted**\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","59e73511":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"91\"><\/a>\n        <font><b>Task 91:<\/b><\/font>\n        <br><br>\n        Sum of all nan rowwise\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","9ebfee52":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"84\"><\/a>\n        <font><b>Task 84:<\/b><\/font>\n        <br><br>\n        Row and Column Slicing\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","cb12d4fb":"**Final Notes:**\n\nI am adding things still. You can come back and check for more information.\n\nAlso, if you **like my notebook**, <font style=\"color:blue;size:14px;\">please upvote it<\/font> as it will motivate me to come up with better approach in the upcoming notebooks.","7b7021bd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"90\"><\/a>\n        <font><b>Task 90:<\/b><\/font>\n        <br><br>\n        Sum of all nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a3cd69af":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"68\"><\/a>\n        <font><b>Task 68:<\/b><\/font>\n        <br><br>\n        Young, Higher Salary, and Higher Position\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1c4c24c0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"69\"><\/a>\n        <font><b>Task 69:<\/b><\/font>\n        <br><br>\n        Rename columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1974c026":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"49\"><\/a>\n        <font><b>Task 49:<\/b><\/font>\n        <br><br>\n        Students passed in Language and Math\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","4807f357":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"13\"><\/a>\n        <font><b>Task 13:<\/b><\/font>\n        <br><br>\n        First 4 rows and 2 columns of CSV\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8ad50917":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"8\"><\/a>\n        <font><b>Task 8:<\/b><\/font>\n        <br><br>\n        Create Random integer between 0 to 100 with 10 itmes (2 rows, 5 columns)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e1cfad63":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"38\"><\/a>\n        <font><b>Task 38:<\/b><\/font>\n        <br><br>\n        Filter between 5 and 10 on col 1\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","587be3cb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"9\"><\/a>\n        <font><b>Task 9:<\/b><\/font>\n        <br><br>\n        3 rows, 2 columns in pandas\n        <br>\n        1st column = random between 10 to 20\n        <br>\n        2nd column = random between 80 and 90\n        <br>\n        3rd column = random between 40 and 50 \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c63a5557":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"30\"><\/a>\n        <font><b>Task 30:<\/b><\/font>\n        <br><br>\n        Last 4 rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e2b7b289":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"12\"><\/a>\n        <font><b>Task 12:<\/b><\/font>\n        <br><br>\n        CSV to Dataframe (from_csv\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2de7534a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"1\"><\/a>\n        <font><b>Task 1:<\/b><\/font>\n        <br><br>\n        Check Pandas Version\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fdf2ba7a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"59\"><\/a>\n        <font><b>Task 59:<\/b><\/font>\n        <br><br>\n        Group by single column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1ae06ac5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"102\"><\/a>\n        <font><b>Task 102:<\/b><\/font>\n        <br><br>\n        Basic group by\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","3d9f6a82":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"21\"><\/a>\n        <font><b>Task 21:<\/b><\/font>\n        <br><br>\n        Skip rows\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","679d22f8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"39\"><\/a>\n        <font><b>Task 39:<\/b><\/font>\n        <br><br>\n        Filter between 15 to 20\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","257e7786":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"78\"><\/a>\n        <font><b>Task 78:<\/b><\/font>\n        <br><br>\n        XPandas rows to array \n\n        <br>Note: as_matrix is deprecatedYZ\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","2d06bcbd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"33\"><\/a>\n        <font><b>Task 33:<\/b><\/font>\n        <br><br>\n        Last 4th to 1st\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","582c551f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"11\"><\/a>\n        <font><b>Task 11:<\/b><\/font>\n        <br><br>\n        CSV to DatRaframe (from_csv)\n        <br>\n        Note: from_csv is Deprecated since version 0.21.0: Use pandas.read_csv() instead.\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","6a50d0c9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"14\"><\/a>\n        <font><b>Task 14:<\/b><\/font>\n        <br><br>\n        Show even rows and first three columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","78630e3c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"53\"><\/a>\n        <font><b>Task 53:<\/b><\/font>\n        <br><br>\n        Label between numbers\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ffafa7f3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"51\"><\/a>\n        <font><b>Task 51:<\/b><\/font>\n        <br><br>\n        Loc with Label oriented slicing\n<br>possible error:\n<br>pandas.errors.UnsortedIndexError\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","0520abb6":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"57\"><\/a>\n        <font><b>Task 57:<\/b><\/font>\n        <br><br>\n        inverse opeartor\n         <br>!( above one.45 and below two.50 )\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1db539ca":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"58\"><\/a>\n        <font><b>Task 58:<\/b><\/font>\n        <br><br>\n        Apply custom function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","5ac0f87c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"52\"><\/a>\n        <font><b>Task 52:<\/b><\/font>\n        <br><br>\n        iloc with positional slicing\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","0699f77c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"66\"><\/a>\n        <font><b>Task 66:<\/b><\/font>\n        <br><br>\n        Argsort with actors\n\n        <br>young stars (near by 17)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","dfd41bda":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"20\"><\/a>\n        <font><b>Task 20:<\/b><\/font>\n        <br><br>\n        Select Column by Index\n        <br>\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n        <br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","feaae1dc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"6\"><\/a>\n        <font><b>Task 6:<\/b><\/font>\n        <br><br>\n        Create Random integer between 2 to 10 with 4 columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","49b340cc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"76\"><\/a>\n        <font><b>Task 76:<\/b><\/font>\n        <br><br>\n        Pandas to list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","30961bb6":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"27\"><\/a>\n        <font><b>Task 27:<\/b><\/font>\n        <br><br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","f22432d8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"72\"><\/a>\n        <font><b>Task 72:<\/b><\/font>\n        <br><br>\n        Drop multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","73dae65e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"96\"><\/a>\n        <font><b>Task :<\/b><\/font>\n        <br><br>\n        Get group\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","18587e21":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"89\"><\/a>\n        <font><b>Task 89:<\/b><\/font>\n        <br><br>\n        NaN values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c7e31624":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"19\"><\/a>\n        <font><b>Task 19:<\/b><\/font>\n        <br><br>\n        Skip multiple rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","af9bb432":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"74\"><\/a>\n        <font><b>Task 74:<\/b><\/font>\n        <br><br>\n        Delete by pop function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","7646a849":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"101\"><\/a>\n        <font><b>Task 101:<\/b><\/font>\n        <br><br>\n        Drop all duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","cd04da65":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"88\"><\/a>\n        <font><b>Task 88:<\/b><\/font>\n        <br><br>\n        List of Dictionary to Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","d19cebc3":"<font color=\"blue\" size=+1.5><b>Check out my other kernels<\/b><\/font>\n\n<table style=\"font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;border-collapse: collapse;width: 100%;\">\t\n  <tr>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Notebook<\/th>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Tags<\/th>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/reviews-with-nlp-wip\">Amazon Alexa Reviews with NLP<\/a> <\/td>\n    <td style=\"text-align: left\">NLP, Spacy<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/sof-questions-eda-and-visual\">SOF Questions - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/netflix-visualization-plotly-plots-treemap\">Netflix - Visualization, Plotly, Plots, and Treemap<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, Data Cleaning, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Prediction with various Algorithms<\/a> <\/td>\n    <td style=\"text-align: left\">Random Forest, Logistic Regression<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/eda-and-visualization\">EDA and Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Cleaning, Data Visual<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/job-analysis-eda-visual\">Job Analysis - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, EDA, Plotly<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/estonia-disaster-visualization\">Estonia Disaster - Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, EDA, Data Cleaning<\/td>\n  <\/tr>\n    \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/pandas-dundas-challenge-100\" >Pandas 100+ exercises collection<\/a><\/td>\n    <td style=\"text-align: left\">Pandas, Data Manipulation<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Credit Card Fraud - Prediction with various algorithms<\/a><\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Various ML Algorithms<\/td>\n  <\/tr>  \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/linear-equations-real-time\">Linear Equations - Real Time<\/a> <\/td>\n    <td style=\"text-align: left\">Linear Equation<\/td>\n  <\/tr>  \n<\/table>\n\n","2bd3de78":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"15\"><\/a>\n        <font><b>Task 15:<\/b><\/font>\n        <br><br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f2d2a455":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"3\"><\/a>\n        <font><b>Task 3:<\/b><\/font>\n        <br><br>\n        iLoc in Pandas\n        <br>\n        Print first five rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2dd64bd1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"92\"><\/a>\n        <font><b>Task 92:<\/b><\/font>\n        <br><br>\n        Sum of all nan as list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","30f223b5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"2\"><\/a>\n        <font><b>Task 2:<\/b><\/font>\n        <br><br>\n        Create Numpy Array\n        <br>\n        Create three columns with Zero values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a1d7927a":"To do:\n\n* Clean up some buggy exercises\n* Remove duplicate exercises\n* Add more documentation","c9f573dc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"81\"><\/a>\n        <font><b>Task 81:<\/b><\/font>\n        <br><br>\n        Drop duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","a05c4a7a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"50\"><\/a>\n        <font><b>Task 50:<\/b><\/font>\n        <br><br>\n        Students passed in Language and Science\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","da499bcb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"29\"><\/a>\n        <font><b>Task 29:<\/b><\/font>\n        <br><br>\n        Fill with average\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","cb887798":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"87\"><\/a>\n        <font><b>Task 87:<\/b><\/font>\n        <br><br>\n        Iterating rows and columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> "}}