{"cell_type":{"c8918529":"code","935ca93a":"code","4a621a74":"code","f5d84d76":"code","dd73b430":"code","69f3839d":"code","17a3eaa2":"markdown"},"source":{"c8918529":"from sklearn.linear_model import LinearRegression, Lasso, Ridge, ElasticNet, LassoCV, RidgeCV, ElasticNetCV\nfrom sklearn.model_selection import RepeatedKFold, cross_val_score\nfrom sklearn.metrics import mean_squared_error as mse\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ncv = RepeatedKFold(n_splits=5, n_repeats=10)\n\n\ndf_train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","935ca93a":"df_train.info()","4a621a74":"cat_one_hot = ['Id', 'Street', 'Alley', 'MSSubClass', 'MSZoning', 'LotFrontage', 'LotShape', 'LandContour', 'Utilities',\n            'LotConfig', 'LandSlope','Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle',\n            'RoofMatl', 'Exterior1st','Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual',\n            'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical',\n            'KitchenQual', 'Functional', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive',\n            'PoolQC', 'Fence', 'MiscFeature', 'SaleType', 'SaleCondition']\n\ncat_ord = ['LotShape',  'LandSlope', 'ExterQual', 'ExterCond', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2',\n           'HeatingQC', 'Electrical', 'KitchenQual', 'Functional', 'FireplaceQu', 'GarageFinish', 'GarageQual', 'GarageCond', 'PoolQC', 'Fence']\n\ncat_sum = ['Condition1', 'Condition2', 'Exterior1st', 'Exterior2nd']\n\ndf_num = df_train.drop(cat_one_hot+cat_ord+cat_sum, axis=1)\n\ndf_num.info()","f5d84d76":"no_imput_no_quality = df_num.dropna()\n\nX = no_imput_no_quality.drop('SalePrice', axis=1)\ny = no_imput_no_quality['SalePrice']\n\nmodel = LinearRegression()\n\nscore = cross_val_score(model, X, y, cv=cv, scoring='neg_root_mean_squared_error')\n\nap_results = {}\n\n\nap_results['No Imputation, No Qualitative'] = (-1 * score.mean(), score.std())\n\n\nmodel.fit(X, y)","dd73b430":"df_num = df_test.drop(cat_one_hot+cat_ord+cat_sum, axis=1)\n\ndf_num = df_num.fillna(0)\n\nind  = df_test['Id'].copy()\n\n\npred = model.predict(df_num)","69f3839d":"Results = pd.DataFrame(pred, columns=['SalePrice'])\nResults['Id'] = Results.index + 1461\nResults = Results[['Id', 'SalePrice']]\n\nprint(Results.head())\n\nResults.to_csv('submission.csv', index=False)","17a3eaa2":"## 1. Missing data deleted, no qualitative data considered"}}