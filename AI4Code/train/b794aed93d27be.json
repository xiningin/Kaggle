{"cell_type":{"faf97eb6":"code","d301fecc":"code","7a3ffd89":"code","ac2e82ba":"code","557c053c":"code","9e6f6fd6":"code","24d10022":"code","be9fc6b8":"code","79e932a9":"code","421de0d2":"code","f9bab336":"code","04cdce8a":"code","57005a3a":"code","5282399d":"code","8bd0b2f5":"code","9bad91f5":"code","01f8183b":"code","93d7deb7":"code","48c77597":"code","8f356f52":"code","572474d6":"code","e3a99bd3":"code","0458a8d5":"code","7b43af3b":"code","8d951686":"code","0e352b19":"code","05cc3bc0":"code","ae25bd0a":"code","fef67df3":"code","68e5d6d6":"code","c1219908":"code","bc762232":"code","58d6d944":"code","35deba46":"code","dfffa647":"code","445ad996":"code","8ca8beb3":"code","389798f3":"code","24d36996":"code","471445b2":"code","3242ab00":"code","2978a58d":"code","533deb84":"code","74c82409":"code","d841576c":"code","c0f7ba28":"code","58a65ec7":"code","fb45fb2f":"code","490389f0":"code","fb06421d":"code","f1020655":"code","035a8866":"code","6c45e150":"code","92f236a3":"code","83dc5f86":"code","f3186177":"code","89ff53e3":"code","36cb8ad6":"code","58f5134c":"code","ae854d07":"code","5afc7f58":"code","b14196ea":"code","1fb7b185":"code","190ca6e8":"code","6b647f59":"code","ffe6a9bb":"code","040fc4ff":"code","7f7f29d5":"code","4eeb45bd":"code","8d9499c7":"code","07069272":"code","0a1f4e0e":"code","485f5356":"code","2ab932fc":"code","be23a0d6":"code","e4559882":"code","30479053":"code","860c595c":"code","15cbec47":"code","3a34adc2":"code","f3cb3b0f":"code","275ad543":"code","4211d448":"code","39e3ad23":"code","bc25aa6c":"code","1440980e":"code","b9dc600d":"code","a5ccba35":"code","827fe2df":"code","2a734e55":"code","aea0fe75":"code","ae445ab3":"code","54f28566":"code","01428866":"code","8d9dd23e":"code","f6e365ea":"code","b3e90ba5":"code","bc8057e1":"code","ea7c8a5d":"code","4a83672e":"code","501f7613":"code","1953cedd":"code","4149dd40":"code","c539e3aa":"code","5dc774a8":"code","ae0b9cf9":"code","f9a2062a":"code","503fe2ab":"code","8de748d8":"code","d7cdfece":"code","273d4073":"code","d68b5b2c":"code","3ca900c7":"code","d76346e5":"code","8545911f":"code","901b1d05":"code","a89f70bf":"code","b494c4fd":"code","347add8c":"code","0c59f5da":"markdown"},"source":{"faf97eb6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d301fecc":"!pip install fastai==0.7.0","7a3ffd89":"from fastai.imports import *\nfrom fastai.structured import *\nfrom pandas_summary import DataFrameSummary\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom IPython.display import display\nfrom sklearn import metrics","ac2e82ba":"!pip install ggplot","557c053c":"import pathlib\nPATH = '..\/input\/fifa2019wages'\nworking_path = '\/kaggle\/working\/'\n\npath = pathlib.Path(PATH)\npath_w = pathlib.Path(working_path)","9e6f6fd6":"!head -n 100000 {path}\/FifaTrainNew.csv > {path_w}\/FifaTrainNew.csv","24d10022":"df_raw = pd.read_csv(f'{working_path}\/FifaTrainNew.csv', low_memory=False, \n                     parse_dates=[\"Joined\",'Contract Valid Until'])","be9fc6b8":"df_raw.head()","79e932a9":"df_raw.tail().T","421de0d2":"def display_all(df):\n    with pd.option_context(\"display.max_rows\", 1000, \"display.max_columns\", 1000): \n        display(df)","f9bab336":"display_all(df_raw.tail().T)","04cdce8a":"df_raw['Contract Valid Until'].unique()","57005a3a":"display_all(df_raw.describe(include='all').T)","5282399d":"df_raw = df_raw.drop('Ob' , axis = 1)","8bd0b2f5":"train_cats(df_raw)","9bad91f5":"df_raw.Club.unique()","01f8183b":"display_all(df_raw.head())","93d7deb7":"display_all(df_raw.isnull().sum().sort_index()\/len(df_raw))","48c77597":"c=0\nfor col in df_raw.columns:\n    if(str(df_raw[col].dtype)!=\"category\"):\n        print(\"'\"+col+\"',\")","8f356f52":"df_raw['LongPassing']","572474d6":"add_datepart(df_raw, 'Joined')\nadd_datepart(df_raw, 'Contract Valid Until')","e3a99bd3":"df_trn, y_trn, nas= proc_df(df_raw,y_fld= 'WageNew')","0458a8d5":"df_raw","7b43af3b":"m = RandomForestRegressor(n_jobs=-1)\nm.fit(df_trn, y)\nm.score(df_trn,y)","8d951686":"?proc_df","0e352b19":"len(df)","05cc3bc0":"def split_vals(a,n): return a[:n], a[n:]\nn_valid = 6000\nn_trn = len(df_trn)-n_valid\nX_train, X_valid = split_vals(df_trn, n_trn)\ny_train, y_valid = split_vals(y_trn, n_trn)\nraw_train, raw_valid = split_vals(df_raw, n_trn)","ae25bd0a":"def print_score(m,imp_cols=None):\n    if(imp_cols is not None):\n        res = [ m.score(X_train[imp_cols], y_train), m.score(X_valid[imp_cols], y_valid)]\n    else:\n        res = [ m.score(X_train, y_train), m.score(X_valid, y_valid)]\n    if hasattr(m, 'oob_score_'): res.append(m.oob_score_)\n    print(res)","fef67df3":"len(df_raw)","68e5d6d6":"#set_rf_samples(6000)\nreset_rf_samples()","c1219908":"??set_rf_samples","bc762232":"m = RandomForestRegressor(n_estimators=60, min_samples_leaf=3,max_features=0.5, n_jobs=-1, oob_score=True)\nm.fit(X_train, y_train)\nprint_score(m)","58d6d944":"%time preds = np.stack([t.predict(X_valid) for t in m.estimators_])\nnp.mean(preds[:,0]), np.std(preds[:,0])","35deba46":"def get_preds(t): return t.predict(X_valid)\n%time preds = np.stack(parallel_trees(m, get_preds))\nnp.mean(preds[:,0]), np.std(preds[:,0])","dfffa647":"display_all(df_trn)","445ad996":"fi = rf_feat_importance(m, df_trn); fi[:10]","8ca8beb3":"fi.plot('cols', 'imp', figsize=(10,6), legend=False);","389798f3":"def plot_fi(fi): return fi.plot('cols', 'imp', 'barh', figsize=(12,7), legend=False)","24d36996":"plot_fi(fi[:30]);","471445b2":"plot_fi(fi[:12]);","3242ab00":"to_keep = fi[fi.imp>0.005].cols; len(to_keep)","2978a58d":"to_keep","533deb84":"df_keep = df_trn[to_keep].copy()\nX_train, X_valid = split_vals(df_keep, n_trn)","74c82409":"m = RandomForestRegressor(n_estimators=80, min_samples_leaf=3, max_features=0.5,\n                          n_jobs=-1, oob_score=True)\nm.fit(X_train, y_train)\nprint_score(m)","d841576c":"fi = rf_feat_importance(m, df_keep)\nplot_fi(fi);","c0f7ba28":"fi","58a65ec7":"df_trn2, y_trn, nas = proc_df(df_raw, 'WageNew', max_n_cat=7)\nX_train, X_valid = split_vals(df_trn2, n_trn)\n\nm = RandomForestRegressor(n_estimators=80, min_samples_leaf=3, max_features=0.6, n_jobs=-1, oob_score=True)\nm.fit(X_train, y_train)\nprint_score(m)","fb45fb2f":"fi = rf_feat_importance(m, df_trn2)\nplot_fi(fi[:25]);","490389f0":"from scipy.cluster import hierarchy as hc","fb06421d":"?scipy.stats.spearmanr","f1020655":"corr = np.round(scipy.stats.spearmanr(df_keep).correlation, 4)\ncorr_condensed = hc.distance.squareform(1-corr)\nz = hc.linkage(corr_condensed, method='average')\nfig = plt.figure(figsize=(16,10))\ndendrogram = hc.dendrogram(z, labels=df_keep.columns, orientation='left', leaf_font_size=16)\nplt.show()","035a8866":"def get_oob(df):\n    m = RandomForestRegressor(n_estimators=80, min_samples_leaf=5, max_features=0.6, n_jobs=-1, oob_score=True)\n    x, _ = split_vals(df, n_trn)\n    m.fit(x, y_train)\n    return m.oob_score_","6c45e150":"get_oob(df_keep)","92f236a3":"df_keep.columns","83dc5f86":"for c in ( 'LCM', 'RCM', 'RAM', 'CAM', 'RW' , 'LM'):\n    print(c, get_oob(df_keep.drop(c, axis=1)))","f3186177":"to_drop = ['CM', 'CAM', 'RW']\nget_oob(df_keep.drop(to_drop, axis=1))","89ff53e3":"df_keep.drop(to_drop, axis=1, inplace=True)\nX_train, X_valid = split_vals(df_keep, n_trn)","36cb8ad6":"np.save('\/kaggle\/working\/keep_cols.npy', np.array(df_keep.columns))","58f5134c":"keep_cols = np.load('\/kaggle\/working\/keep_cols.npy' , allow_pickle=True)\ndf_keep = df_trn[keep_cols]","ae854d07":"reset_rf_samples()","5afc7f58":"m = RandomForestRegressor(n_estimators=80, min_samples_leaf=4, max_features=0.5, n_jobs=-1, oob_score=True)\nm.fit(X_train, y_train)\nprint_score(m)","b14196ea":"from pdpbox import pdp\nfrom plotnine import *","1fb7b185":"reset_rf_samples()","190ca6e8":"df_trn2, y_trn, nas = proc_df(df_raw, 'WageNew', max_n_cat=7)\nX_train, X_valid = split_vals(df_trn2, n_trn)\nm = RandomForestRegressor(n_estimators=80, min_samples_leaf=3, max_features=0.6, n_jobs=-1, oob_score=True)\nm.fit(X_train, y_train);","6b647f59":"print_score(m)","ffe6a9bb":"plot_fi(rf_feat_importance(m, df_trn2)[:10]);","040fc4ff":"df_raw.plot('Reactions', 'JoinedElapsed', 'scatter', alpha=0.01, figsize=(10,8));","7f7f29d5":"sum(df_raw['Reactions']>45)","4eeb45bd":"x_all = get_sample(df_raw[df_raw.Reactions>40], 500)","8d9499c7":"??get_sample","07069272":"!pip install scikit-misc","0a1f4e0e":"ggplot(x_all, aes('Reactions', 'WageNew'))+stat_smooth(se=True, method='loess')","485f5356":"x = get_sample(X_train[X_train.Reactions>45], 500)\ndef plot_pdp(feat, clusters=None, feat_name=None):\n    feat_name = feat_name or feat\n    p = pdp.pdp_isolate(m, x, x.columns, feat)\n    return pdp.pdp_plot(p, feat_name, plot_lines=True,\n                        cluster=clusters is not None,\n                        n_cluster_centers=clusters)","2ab932fc":"plot_pdp('Reactions')","be23a0d6":"feats = ['JoinedElapsed', 'Reactions']\np = pdp.pdp_interact(m, x, x.columns, feats)\npdp.pdp_interact_plot(p, feats)","e4559882":"df_keep.describe","30479053":"df_keep.Age.describe","860c595c":"!pip install treeinterpreter","15cbec47":"from treeinterpreter import treeinterpreter as ti","3a34adc2":"df_raw = pd.read_csv(f'{working_path}\/FifaTrainNew.csv', low_memory=False, \n                     parse_dates=[\"Joined\",'Contract Valid Until'])","f3cb3b0f":"obj_cols = df_raw.dtypes[df_raw.dtypes == object].index.tolist()","275ad543":"for col in obj_cols:\n    print(f'{col}\\t\\t{df_raw[col].unique()}')","4211d448":"df_raw.drop('Ob',axis=1,inplace=True)","39e3ad23":"train_cats(df_raw)","bc25aa6c":"for col in obj_cols:\n    print(f'{col}\\t{df_raw[col].unique()}')","1440980e":"add_datepart(df_raw, 'Joined')\nadd_datepart(df_raw, 'Contract Valid Until')\n","b9dc600d":"def split_vals(a,n): return a[:n],a[n:]\n\ndf_trn, y_trn, nas = proc_df(df_raw,y_fld='WageNew', max_n_cat=10)\n\nn_valid = 7500\nn_train = len(df_trn) - n_valid\n\nX_train, X_valid = split_vals(df_trn,n_train)\ny_train, y_valid = split_vals(y_trn, n_train)\ntrain_raw, valid_raw = split_vals(df_raw, n_train)","a5ccba35":"set_rf_samples(5000)","827fe2df":"def print_score(m):\n    res = [ m.score(X_train, y_train), m.score(X_valid, y_valid)]\n    if hasattr(m, 'oob_score_'): res.append(m.oob_score_)\n    print(res)","2a734e55":"def print_score(m,imp_cols=None):\n    if(imp_cols is not None):\n        res = [ m.score(X_train[imp_cols], y_train), m.score(X_valid[imp_cols], y_valid)]\n    else:\n        res = [ m.score(X_train, y_train), m.score(X_valid, y_valid)]\n    if hasattr(m, 'oob_score_'): res.append(m.oob_score_)\n    print(res)","aea0fe75":"m = RandomForestRegressor(n_estimators=1000,min_samples_leaf=3,max_features=0.555,n_jobs=-1,warm_start=True,oob_score=True)\nm.fit(X_train,y_train)\nprint_score(m)","ae445ab3":"?RandomForestRegressor","54f28566":"fi = rf_feat_importance(m,df_trn)\ndef plot_fi(fi): return fi.plot('cols','imp','barh',figsize=(12,10),legend=True)","01428866":"plot_fi(fi[fi['imp'] > 0.005])","8d9dd23e":"imps_cols = fi[fi['imp'] > 0.002]['cols'].tolist()\nimps_cols","f6e365ea":"len(imps_cols)","b3e90ba5":"X_train.columns.tolist()","bc8057e1":"m = RandomForestRegressor(n_estimators=1000,min_samples_leaf=3,max_features=0.555,n_jobs=-1,warm_start=True,oob_score=True)\nm.fit(X_train[imps_cols],y_train)\nprint_score(m,imps_cols)","ea7c8a5d":"fi = rf_feat_importance(m,X_train[imps_cols])\ndef plot_fi(fi): return fi.plot('cols','imp','barh',figsize=(12,10),legend=True)\nplot_fi(fi)","4a83672e":"plot_fi(fi[:25])","501f7613":"imps_cols = fi[:25]['cols'].tolist()\ndf_trn[imps_cols].dtypes","1953cedd":"from scipy.cluster import hierarchy as hc","4149dd40":"corr = np.round(scipy.stats.spearmanr(X_train[imps_cols]).correlation, 4)\ncorr_condensed = hc.distance.squareform(1-corr)\nz = hc.linkage(corr_condensed, method='average')\nfig = plt.figure(figsize=(16,10))\ndendrogram = hc.dendrogram(z, labels=X_train[imps_cols].columns, orientation='left', leaf_font_size=16)\nplt.show()","c539e3aa":"def get_oob(df):\n    m = RandomForestRegressor(n_estimators=1000,min_samples_leaf=3,max_features=0.555,n_jobs=-1,warm_start=True,oob_score=True)\n    x,_ = split_vals(df,n_train)\n    m.fit(x,y_train)\n    return m.oob_score_","5dc774a8":"get_oob(X_train[imps_cols])","ae0b9cf9":"for col in ['RCM','LCM','CM','RDM','LDM','CDM']:\n    print(col,get_oob(X_train[imps_cols].drop(col,axis=1)))","f9a2062a":"to_drop = ['RCM','LCM','CM','RDM','LDM','CDM']\nget_oob(X_train[imps_cols].drop(to_drop,axis=1))\n","503fe2ab":"m = RandomForestRegressor(n_estimators=1000,min_samples_leaf=3,max_features=0.555,n_jobs=-1,warm_start=True,oob_score=True)\ncols = X_train[imps_cols].drop(to_drop,axis=1).columns\nm.fit(X_train[cols],y_train)\nprint_score(m,imp_cols=cols)","8de748d8":"df_test = pd.read_csv(f'{path}\/FifaNoY.csv', low_memory=False, \n                     parse_dates=[\"Joined\",'Contract Valid Until'])","d7cdfece":"train_cats(df_test)","273d4073":"add_datepart(df_test, 'Joined')\nadd_datepart(df_test, 'Contract Valid Until')\n","d68b5b2c":"df_test1, y_trn, nas = proc_df(df_test, max_n_cat=10)\n","3ca900c7":"predictions = m.predict(df_test1[cols])","d76346e5":"?proc_df","8545911f":"submission = pd.DataFrame({'Ob':df_test1['Ob'],'WageNew':predictions})","901b1d05":"submission","a89f70bf":"filename = '\/kaggle\/working\/FIFA2019Wages.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","b494c4fd":"ls","347add8c":"pwd","0c59f5da":"# Feature Importance"}}