{"cell_type":{"dcc21779":"code","de13de42":"code","bb91922a":"code","b6b26d99":"code","15958389":"code","a777321e":"code","01f0bbb9":"code","2fc2a265":"code","dda79669":"code","08c1f42b":"code","d8daf3c5":"code","6e1a6aa4":"code","1d62de9f":"code","f489efe2":"code","95900c95":"code","dddc19c2":"markdown","e8d0a490":"markdown","f7423e9d":"markdown","fea0f039":"markdown","3e1ec713":"markdown","c85f021c":"markdown","0f000332":"markdown","022980f3":"markdown","b2aca98f":"markdown","ea757309":"markdown","fc8608dc":"markdown","7e3ccaab":"markdown","ba0f49d4":"markdown"},"source":{"dcc21779":"# Import des librairies\nimport os \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport matplotlib.image as mpimg\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nimport random","de13de42":"# Chargement de la base de donn\u00e9es\n# On limite \u00e0 50000 entr\u00e9es afin de travailler en ligne efficacement\ndf = pd.read_csv(\"..\/input\/deaths\/kill_match_stats_final_0.csv\")\ndf = df[df.map==\"ERANGEL\"]\ndf = df.dropna()\nn_entries=50000\ndeaths = df.head(n_entries)","bb91922a":"deaths.head()","b6b26d99":"deaths['distance'] = np.sqrt(np.power(deaths['victim_position_x']-deaths['killer_position_x'],2)+np.power(deaths['victim_position_y']-deaths['killer_position_y'],2))","15958389":"# Simplification du dataset aux donn\u00e9es nous int\u00e9ressant\ndeaths = deaths[['victim_name','victim_placement','distance','time','killer_name','killer_placement']]\ndeaths.head()","a777321e":"features = ['time','killer_placement','distance','victim_placement']\n\nx = deaths[features]\nx = StandardScaler().fit_transform(x)\n\nprint(\"Les moyennes :\",np.mean(x,axis=0)) # les moyennes devraient \u00eatre \u00e9gales \u00e0 0\nprint(\"\\nLes \u00e9carts-types :\",np.std(x,axis=0,ddof=0)) # les \u00e9carts type devraient \u00eatre \u00e9gals \u00e0 1\nprint(\"\\nLa matrice de corr\u00e9lation :\\n\",(1\/n_entries)*np.matmul(np.transpose(x),x))","01f0bbb9":"n_components=len(features)\npca = PCA()\nprincipal_comps = pca.fit_transform(x)\nprint(\"Nombre de composantes principales : \",pca.n_components_)\nprint(\"\\nValeurs propres :\",pca.explained_variance_)\nprint(\"\\nProportion des variances (pourcentage) : \",pca.explained_variance_ratio_*100)\ncorvar=pca.get_covariance()\nprint(\"\\nMatrice des covariances :\\n\",corvar)","2fc2a265":"plt.plot(np.arange(1,n_components+1),np.cumsum(pca.explained_variance_ratio_))\nplt.title(\"Variance cumul\u00e9e par rapport au nombre de composantes\")\nplt.ylabel(\"Variance cumul\u00e9e\")\nplt.xlabel(\"Nombre de composantes\")\nplt.show()","dda79669":"n_components=2\npca = PCA(n_components)\nprincipal_comps = pca.fit_transform(x)\nprint(\"Nombre de composantes principales : \",pca.n_components_)\nprint(\"\\nValeurs propres :\",pca.explained_variance_)\nprint(\"\\nProportion des variances (pourcentage) : \",pca.explained_variance_ratio_*100)","08c1f42b":"# Calcul des vecteurs propres\n# On obtient la matrice de changement de base\nprint(\"Matrice de changement de base :\\n\",pca.components_)\nprint(\"\\nComposantes principales :\\n\",principal_comps)","d8daf3c5":"# Positionnement des individus dans le premier plan\nfig, axes = plt.subplots()\ntmp_df=pd.DataFrame(columns=list(deaths))\n# Placement des \u00e9tiquettes des observations\nfor i in range(10):\n    r=random.randint(0,n_entries)\n    tmp_df.loc[i]=deaths.iloc[r]\n    plt.annotate(tmp_df.loc[i].victim_name,(principal_comps[r,0],principal_comps[r,1]))\n    \n# Ajouter les axes\nplt.plot([-6,6],[0,0],color='silver',linestyle='-',linewidth=1)\nplt.plot([0,0],[-6,6],color='silver',linestyle='-',linewidth=1)\nplt.margins(x=-.25, y=-0.465)\n# Affichage\nplt.show()\ntmp_df","6e1a6aa4":"# Contribution des individus dans l'inertie totale\ndist = np.sum(x**2,axis=1)\nprint(\"Contribution des individus dans l'inertie totale :\\n\",dist)\n# Qualit\u00e9 de la repr\u00e9sentation des individus\ncos2 = principal_comps**2\nfor i in range(n_components):\n    cos2[:,i] = cos2[:,i]\/dist\nprint(\"\\nQualit\u00e9 de la repr\u00e9sentation des individus (pourcentage) :\\n\",cos2*100)","1d62de9f":"# Contributions aux axes\nctr = principal_comps**2\nfor j in range(n_components):\n    ctr[:,j] = ctr[:,j]\/(n_entries*pca.explained_variance_[j])\n\nprint(\"Contribution aux axes (10 permiers) : \\n\")\nprint(pd.DataFrame({'Axe 1':ctr[:,0],'Axe 2':ctr[:,1]}).head(10))","f489efe2":"# Corr\u00e9lations entre variables et facteurs\nsqrt_vp = np.sqrt(pca.explained_variance_)\nvarfac = np.zeros((len(features),len(features)))\nfor i in range(n_components): \n    varfac[:,i] = pca.components_[i,:] * sqrt_vp[i]\n\nprint(pd.DataFrame({'Variable':features,'Composante 1':varfac[:,0],'Composante 2':varfac[:,1]}))","95900c95":"fig, axes = plt.subplots(figsize=(8,8))\naxes.set_xlim(-1,1)\naxes.set_ylim(-1,1)\n# Affichage des \u00e9tiquettes (noms des variables)\nfor j in range(len(features)):\n    plt.annotate(features[j],(varfac[j,0],varfac[j,1]))\n\n# Ajouter les axes\nplt.plot([-1,1],[0,0],color='silver',linestyle='-',linewidth=1)\nplt.plot([0,0],[-1,1],color='silver',linestyle='-',linewidth=1)\n# Ajouter un cercle\ncercle = plt.Circle((0,0),1,color='blue',fill=False)\naxes.add_artist(cercle)\n# Affichage\nplt.show()","dddc19c2":"# PUBG : ACP des victimes\n## Introduction\n**PlayerUnknown's BattleGrounds** a \u00e9t\u00e9 l'un des plus gros succ\u00e8s du jeu vid\u00e9o de l'ann\u00e9e 2018. Le jeu multijoueur d\u00e9velopp\u00e9 par Bluehole et vendu \u00e0 plus de 20 millions d'exemplaires repose sur un principe simple : 100 joueurs sur une carte, seul ou en \u00e9quipe de quatre maximum, sont parachut\u00e9s sur une carte avec un seul objectif : \u00eatre le dernier en vie. Pour les aider, des armes, des munitions et des soins sont disponibles partout sur la carte. Les joueurs doivent donc survivre aux autres joueurs mais aussi \u00e0 la \"bluezone\" qui est un cercle for\u00e7ant les joueurs \u00e0 se rapprocher d'un point pr\u00e9cis de la carte sous peine de mourir. \n\nAvec un syst\u00e8me de jeu ax\u00e9 aussi fortement autour de la survie, on peut tr\u00e8s facilement deviner que la mort fait partie int\u00e9grante du jeu. On peut essayer d'analyser les donn\u00e9es li\u00e9es \u00e0 ses morts pour voir s'il apparait des corr\u00e9lations \u00e0 l'aide de l'ACP. \n\nLes donn\u00e9es utilis\u00e9es sont disponibles en ligne sur pubg.op.gg et sur le kernel [PUBG Match Deaths and Statistics](https:\/\/www.kaggle.com\/skihikingkevin\/pubg-match-deaths)\n## Synth\u00e8se de la base de donn\u00e9es\n* killed_by : arme utilis\u00e9e\/raison de la mort\n* killer_name : nom du tueur\n* killer_placement : classement du tueur. S'il est le dernier \u00e0 survivre son classement sera \u00e9gal \u00e0 1\n* killer_position_x : position sur l'axe x du tueur\n* killer_position_y : position sur l'axe y du tueur\n* map : carte de la partie\n* match_id : id de la partie\n* time : timecode de la mort\n* victim_name : nom de la victime\n* victim_placement : placement de la victime\n* victim_position_x : position sur l'axe x de la victime\n* victim_position_y : position sur l'axe y de la victime\n    ","e8d0a490":"### Repr\u00e9sentation des individus\nPour visualiser et v\u00e9rifier les r\u00e9sultats, on affiche les individus dans un dataframe et dans un plot \u00e0 l'emplacement correspondant \u00e0 l'ACP.\nLes individus proches auront \u00e0 chaque fois leurs composantes proches.","f7423e9d":"#### Qualit\u00e9 de repr\u00e9sentation des individus\nscikit ne dispose pas d'outil pour afficher directement le cos carr\u00e9. Nous devons le faire \u00e0 la main.","fea0f039":"## Pr\u00e9paration de la base de donn\u00e9es\nOn charge les donn\u00e9es import\u00e9es puis on applique les traitements int\u00e9ressant afin de traiter les donn\u00e9es :\n* On limite \u00e0 une seule et m\u00eame carte les donn\u00e9es observ\u00e9es. Il existe dans cette base diff\u00e9rentes cartes, qui ne se jouent pas de la m\u00eame mani\u00e8re (et donc qui pourrait avoir des divergences)\n* On supprime toutes les lignes auxquelles il manque des donn\u00e9es. Certains traitements qui nous allons appliquer n'accepte pas les donn\u00e9es manquantes ou infinies\n* Kaggle ayant une m\u00e9moire limit\u00e9e en traitement, nous limitons notre jeu de donn\u00e9es dans un premier temps \u00e0 50000 individus.","3e1ec713":"### Ajout d'une colonne : distance\nTraiter telles quelles les positions sur les axes x et y de la victime et du tueur n'a pas vraiment de sens. Nous pouvons cependant cr\u00e9er une colonne contenant la distance entre la victime et le tueur. Cette variable nous permettra d'observer s'il existe des liens entre la distance et les autres variables.","c85f021c":"## Conclusion\nNous avons pu voir \u00e0 l'aide de cet exercice comment effectuer une Analyse \u00e0 Composantes Principales et exploiter ses donn\u00e9es. En effet, elle nous a donn\u00e9 assez peu d'informations significatives. N\u00e9anmoins, ces analyses statistiques sont largement am\u00e9liorables :\n* on pourrait analyser, en plus de nos donn\u00e9es, les cartes jou\u00e9es et les armes utilis\u00e9es pour avoir plus d'informations et pour essayer d'en d\u00e9gager une tendance. Il faudrait pour cel\u00e0 m\u00e9langer le traitement de donn\u00e9es quantitatives et qualitatives comme le permettrait une Analyse Factorielle Multiple\n* rajouter des donn\u00e9es significatives \u00e0 la base de donn\u00e9es comme le nombre de personnes tu\u00e9es au cours de la partie et les armes poss\u00e9d\u00e9es","0f000332":"Si on souhaite choisir notre nombre de composantes \u00e0 l'aide d'un graphique on peut tracer la variance cumul\u00e9e :","022980f3":"### Normalisation des donn\u00e9es\nL'objet PCA fourni par scikit n'effectue qu'une ACP norm\u00e9e. Nous devons donc explicitement centrer et r\u00e9duire les variables.\nSi le traitement a \u00e9t\u00e9 effectu\u00e9 correctement, les moyennes devraient \u00eatre nulles et les \u00e9carts type unitaires.","b2aca98f":"#### Affichage des composantes principales\/vecteurs propres","ea757309":"## Le coeur de l'exercice : l'Analyse \u00e0 Composantes Principales\nLa fonction fit_tranform() renvoie en sortie les coordonn\u00e9es factorielles que nous collections dans la variable principal_comps","fc8608dc":"### Choix du nombre de composantes principales\nIl existe beaucoup de mani\u00e8re de choisir le nombre de composantes principales. Tout d\u00e9pend la pr\u00e9cision d\u00e9sir\u00e9e : si l'on souhaite avoir une repr\u00e9sentation quasi parfaite de l'environnement statistique, on cherchera une repr\u00e9sentation \u00e0 95-99% (chose qui ne serait pas possible ici \u00e0 part prendre les quatres composantes). On pourrait chercher la repr\u00e9sentation la plus efficace par rapport nos valeurs propres : par exemple, on n'utilisera plus cette valeur si la proportion de celle-ci est inf\u00e9rieure \u00e0 1\/n_components (\u00e0 savoir ici 25%). Ici, nous cherchons seulement \u00e0 tester et comprendre le fonctionnement d'une ACP. 80% de l'information fera l'affaire et la repr\u00e9sentation visuelle sera des plus simples \u00e9tant donn\u00e9 que nous avons r\u00e9duit l'espace \u00e0 2 dimensions.","7e3ccaab":"#### Contributions aux axes","ba0f49d4":"### Repr\u00e9sentation des variables\n#### Cercle des corr\u00e9lations\nToutes nos variables sont correctement projet\u00e9es et sont donc facilement exploitable.\nLe **killer_placement** et **victim_placement** semblent fortement corr\u00e9l\u00e9s ; cela peut \u00eatre d\u00fb au fait que tuer quelqu'un fait du bruit et laisse le joueur \u00e0 d\u00e9couvert. Le tueur est donc susceptible de mourir rapidement apr\u00e8s.\nAssez logiquement, **time** est inversement corr\u00e9l\u00e9 aux **placement**s : plus le temps passe, meilleur est le classement des joueurs (la variable est donc plus faible). La **distance** semble avoir de tr\u00e8s faibles liens avec les autres variables : elle est relativement ind\u00e9pendante. Le faible lien avec les **placement**s peut s'expliquer par le fait que les joueurs disposant de fusil \u00e0 longue port\u00e9e r\u00e9ussissent \u00e0 survivre un peu mieux que les autres. Le faible lien n\u00e9gatif avec le **time** s'explique par le fait que les kills en fin de partie sont plus faits \u00e0 plus faible port\u00e9e qu'au d\u00e9but : la _bluezone_ force les joueurs \u00e0 se rendre au m\u00eame point et incite donc les combats rapproch\u00e9s."}}