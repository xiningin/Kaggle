{"cell_type":{"939584d7":"code","61b1243d":"code","922de8e0":"code","96c4e136":"code","46950b83":"markdown","32fe31a0":"markdown","5fda590b":"markdown"},"source":{"939584d7":"import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os","61b1243d":"def AutoCanny(image, sigma=0.33):\n    v = np.median(image)\n    lower = int(max(0, (1.0 - sigma) * v))\n    upper = int(min(255, (1.0 + sigma) * v))\n    edged = cv2.Canny(image, lower, upper)\n    return edged","922de8e0":"def GetImageForValidatation(image):\n    # para retornar a imagem ao tamanho original fazer 1 \/ pelo fator de resize\n    x = 0.25\n    y = 0.3\n    img = cv2.resize(image, (0,0), fx=x, fy=y)\n    img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n    res_auto = AutoCanny(img_gray)\n\n    count_px = np.zeros(res_auto.shape[1])\n    # Ignora 20% da imagem para forcar somente no meio\n    ini = int(count_px.shape[0] * 0.2)\n    fim = int(count_px.shape[0] * 0.8)\n    for i in range(res_auto.shape[1]):\n        count_px[i] = np.count_nonzero(res_auto[:,i])\n\n\n    min_px = np.argmin(count_px[ini:fim])+ini\n    max_range = (count_px.shape[0] \/\/ 2) + (ini \/\/ 2)\n    min_range = (count_px.shape[0] \/\/ 2) - (ini \/\/ 2)\n    # print(\"Posicao do menor pixel:\", np.argmin(count_px[ini:fim])+ini)\n    image_crop = image\n    if min_range <= min_px <= max_range :\n        image_crop = image[:, :int(min_px * (1\/x))]\n\n    return cv2.cvtColor(cv2.resize(image_crop, (256,256)), cv2.COLOR_BGR2RGB)","96c4e136":"test_df = pd.read_csv(\"..\/input\/i2a2-bone-age-regression\/test.csv\")\nimages = np.array(\n    [np.array(GetImageForValidatation(\n                cv2.imread(os.path.join(\"..\/input\/i2a2-bone-age-regression\/images\", fname))))\n                for fname in test_df[\"fileName\"].values])\n\nfor img in images:\n    plt.imshow(img)\n    plt.show()","46950b83":"* Define a fun\u00e7\u00e3o AutoCanny que aplica o detector de bordar canny com parametros automaticos para identifica\u00e7\u00e3o das bordas(fun\u00e7\u00e3o retirada do site pyimage-search).","32fe31a0":"* Identifica no dataset se a imagem \u00e9 de 1 ou 2 ma\u00f5s, se for de duas m\u00e3os corta somente uma para apresentar a rede.","5fda590b":"* Prepara a imagem para aplica\u00e7\u00e3o do filtro\n* Aplica o filtro a imagem e procura pelo ponto com menos pixels no centro da imagem, esse ponto pode ser o v\u00e3o entre as m\u00e3os.\n* Caso esse ponto esteja entre a area de interesse que consiste no centro da imagem, descartada 20% de bordas realiza o recorte na imagem e retorna a nova imagem"}}