{"cell_type":{"bff9d0df":"code","d883c631":"code","cf93db55":"code","ea60ba3b":"code","ad46e06d":"code","cbc978ec":"code","28471d96":"code","dc1d9d03":"code","120faa23":"code","df5500af":"code","e157c52a":"code","2f11fb63":"code","05c85aa5":"code","247ed882":"code","9a754fec":"code","b015c88b":"code","c7a8dc2b":"markdown","2e7cb439":"markdown","c68184fe":"markdown","6eb9f307":"markdown","056acc2d":"markdown","69203749":"markdown","0454922b":"markdown","9fa16d46":"markdown","9195df95":"markdown","e3dd7ea4":"markdown","d53eed04":"markdown","38f30c98":"markdown","05857ca8":"markdown","a3720b1e":"markdown","cc2ef7e9":"markdown","2431cc49":"markdown","39d727d3":"markdown","2a402f10":"markdown","d1e5fa1b":"markdown","cb6fbf65":"markdown","1c7035b7":"markdown","c05d9ffc":"markdown","9c1aa030":"markdown","fb71a0af":"markdown","4a180d41":"markdown","395bb23a":"markdown","e5a313b7":"markdown","e28d37b0":"markdown"},"source":{"bff9d0df":"!pip install bokeh\n!pip install pyvis\n!apt-get install graphviz libgraphviz-dev pkg-config -y\n!pip install pygraphviz \nimport numpy as np  \nimport pandas as pd \nfrom matplotlib import animation\nimport matplotlib.pyplot as plt \nimport networkx as nx\nfrom operator import itemgetter\nfrom networkx.drawing.nx_agraph import graphviz_layout\nfrom pyvis.network import Network\nimport pyvis\nimport scipy.stats\nimport bokeh","d883c631":"Nodes=['Plato','Aristotle','John Locke','David Hume','George Berkeley','Benedict de Spinoza','Gottfried W. Leibniz','Rene Descartes','Nicolas Malebranche','Bertrand Russell','G.E. Moore','Ludwig Wittgenstein','David Kellogg Lewis','Willard Van Orman Quine',\n 'Karl Popper','Saul Kripke','Michel Foucault','Jacques Derrida','Gilles Deleuze','Maurice Merleau-Ponty','Edmund Husserl','Martin Heidegger','Immanuel Kant','Johann G. Fichte','Georg W.F. Hegel','Karl Marx','Vladimir Lenin','Adam Smith','David Ricardo',\n 'John N. Keynes','Epictetus','Marcus Aurelius','Friedrich Nietzsche','Mary Wollstonecraft','Simone de Beauvoir','Angela Davis','Socrates','Phaedo','Diodorus Cronus','Protagoras','Zeno of Elea','Parmenides','Antisthenes','Damascius','Lysis of Tarentum','Peregrinus Proteus','Gorgias of Leontini',\n'Dion Chrysostom','David Ross','Democritus','Melissus of Samos','Anaxagoras','Allan Bloom','Anaximander','Harold H. Joachim','Empedocles', 'Leucippus','Thales of Miletus', 'Heraclitus',\n 'Diogenes of Babylon',\n 'Solomon Formstecher',\n 'Thomas Hobbes',\n 'Pierre Bayle',\n 'Pierre Nicole',\n 'Marcus Tullius Cicero',\n 'Pierre T. de Chardin',\n 'Cleanthes',\n 'Epicurus',\n 'Carneades',\n 'Sextus Empiricus',\n 'John Philoponus',\n 'Avicenna',\n'Lucius A. Seneca',\n 'Henri Bergson',\n 'William James',\n 'John S. Haldane',\n 'John Dewey',\n 'Franz Brentano',\n 'Alfred N. Whitehead',\n 'Thomas Reid',\n 'T.H. Green',\n 'Edward Westermarck',\n 'St. Augustine',\n 'Rudolf Carnap',\n 'Hilary Putnam',\n 'Bernard Williams',\n 'Noam Chomsky',\n 'Peter Strawson',\n 'C. I. Lewis',\n 'John L. Austin',\n 'Peter Railton',\n'Carl G. Hempel',\n 'Richard Rorty',\n 'William Whewell',\n 'Ernst Mach',\n 'Otto Neurath',\n 'Charles S. Peirce',\n 'Hans Reichenbach',\n 'Arthur S. Eddington',\n 'Werner Heisenberg',\n 'Francis Bacon',\n 'John Searle',\n 'John Stuart Mill',\n 'Donald Davidson',\n 'Robert L. Martin',\n 'Henry Sidgwick',\n 'Gottlob Frege',\n 'R.G. Collingwood',\n 'Ralph B. Perry',\n 'Daniel C. Dennett',\n 'Pierre-J.-G. Cabanis',\n '\u00c9tienne B. de Condillac',\n 'Marquis de Condorcet',\n 'Denis Diderot',\n 'Giambattista d. Porta',\n 'Tommaso Campanella',\n 'Petrus Ramus',\n 'J.J. Rousseau',\n 'Claude Buffier',\n 'Maximus the Greek',\n 'Wilhelm Dilthey',\n 'Proclus',\n 'Novalis',\n 'D\u00e9sir\u00e9-Joseph Mercier',\n 'Arthur Schopenhauer',\n 'Max Scheler',\n 'Jean-Paul Sartre',\n 'L\u00e9on Brunschvicg',\n 'Ernst Cassirer',\n 'Karl Jaspers',\n 'Ernest Nagel',\n 'Kuno Fischer',\n 'Edith Stein',\n 'Simplicius of Cilicia',\n 'Joseph Priestley',\n 'Edmund Burke',\n 'Friedrich H. Jacobi',\n 'Reinhold Niebuhr',\n 'Christian, b.v. Wolff',\n 'Diogenes',\n 'James F. Ferrier',\n 'Friedrich Engels',\n 'Samuel Bailey',\n 'William Hamilton',\n 'Adam Ferguson',\n 'Isaac of Stella',\n 'Frederic Harrison',\n 'Henry of Ghent',\n 'Theophrastus',\n 'Pythagoras',\n 'Agrippa',\n 'Ernest Renan',\n 'Friedrich Schiller',\n 'Karl C. F. Krause',\n 'Friedrich W.J. von Schelling',\n 'Thomas Brown',\n 'Wollstonecraft',\n 'Auguste Comte',\n 'Judith Butler',\n 'Davis',\n 'Susan B. Anthony',\n 'Davis', 'Elizabeth C. Stanton']\n\n\n\nJustAuthor=['Plato',\n 'Aristotle',\n 'John Locke',\n 'David Hume',\n'George Berkeley',\n 'Benedict de Spinoza',\n 'Gottfried W. Leibniz',\n 'Rene Descartes',\n 'Nicolas Malebranche',\n 'Bertrand Russell',\n 'G.E. Moore',\n 'Ludwig Wittgenstein',\n 'David Kellogg Lewis',\n 'Willard Van Orman Quine',\n 'Karl Popper',\n 'Saul Kripke',\n 'Michel Foucault',\n 'Jacques Derrida',\n 'Gilles Deleuze',\n 'Maurice Merleau-Ponty',\n 'Edmund Husserl',\n 'Martin Heidegger',\n 'Immanuel Kant',\n 'Johann G. Fichte',\n 'Georg W.F. Hegel',\n 'Karl Marx',\n 'Vladimir Lenin',\n 'Adam Smith',\n 'David Ricardo',\n 'John N. Keynes',\n 'Epictetus',\n 'Marcus Aurelius',\n 'Friedrich Nietzsche',\n 'Mary Wollstonecraft',\n 'Simone de Beauvoir',\n 'Angela Davis']\n\n\n\nEdges=[('Plato', 'Socrates', 618),\n ('Plato', 'Phaedo', 8),\n ('Plato', 'Plato', 4),\n ('Plato', 'Diodorus Cronus', 2),\n ('Plato', 'Protagoras', 27),\n ('Plato', 'Zeno of Elea', 1),\n ('Plato', 'Parmenides', 8),\n ('Plato', 'Antisthenes', 1),\n ('Plato', 'Damascius', 1),\n ('Plato', 'Lysis of Tarentum', 4),\n ('Plato', 'Peregrinus Proteus', 1),\n ('Plato', 'Gorgias of Leontini', 14),\n ('Plato', 'Dion Chrysostom', 1),\n ('David Ross','Aristotle', 19),\n ('Aristotle', 'Plato', 3),\n ('Aristotle', 'Democritus', 6),\n ('Aristotle', 'Melissus of Samos', 1),\n ('Aristotle', 'Anaxagoras', 6),\n ('Aristotle', 'Allan Bloom', 1),\n ('Aristotle', 'Anaximander', 1),\n ('Aristotle', 'Harold H. Joachim', 1),\n ('Aristotle', 'Empedocles', 7),\n ('Aristotle', 'Leucippus', 1),\n ('Aristotle', 'Thales of Miletus', 3),\n ('Aristotle', 'Socrates', 3),\n ('Aristotle', 'Heraclitus', 1),\n ('Aristotle', 'Diogenes of Babylon', 1),\n ('Aristotle', 'Dion Chrysostom', 1),\n ('John Locke', 'Solomon Formstecher', 1),\n ('John Locke', 'Socrates', 2),\n ('George Berkeley', 'Thomas Hobbes', 1),\n ('Gottfried W. Leibniz', 'Pierre Bayle', 34),\n ('Gottfried W. Leibniz', 'Rene Descartes', 4),\n ('Gottfried W. Leibniz', 'Pierre Nicole', 1),\n ('Gottfried W. Leibniz', 'Marcus Tullius Cicero', 2),\n ('Gottfried W. Leibniz', 'Pierre T. de Chardin', 1),\n ('Gottfried W. Leibniz', 'Cleanthes', 1),\n ('Gottfried W. Leibniz', 'Benedict de Spinoza', 1),\n ('Gottfried W. Leibniz', 'Aristotle', 1),\n ('Gottfried W. Leibniz', 'Epicurus', 1),\n ('Gottfried W. Leibniz', 'Carneades', 1),\n ('Gottfried W. Leibniz', 'Heraclitus', 1),\n ('Gottfried W. Leibniz', 'Sextus Empiricus', 3),\n ('Nicolas Malebranche', 'Plato', 6),\n ('Nicolas Malebranche', 'John Philoponus', 1),\n ('Nicolas Malebranche', 'Avicenna', 2),\n ('Nicolas Malebranche', 'Lucius A. Seneca', 4),\n ('Nicolas Malebranche', 'Rene Descartes', 3),\n ('Nicolas Malebranche', 'Aristotle', 3),\n ('Bertrand Russell', 'Henri Bergson', 1),\n ('Bertrand Russell', 'William James', 2),\n ('Bertrand Russell',  'John S. Haldane', 2),\n ('Bertrand Russell', 'John Dewey', 1),\n ('Bertrand Russell', 'David Hume', 2),\n ('Bertrand Russell', 'Franz Brentano', 1),\n ('Bertrand Russell', 'Rene Descartes', 1),\n ('Bertrand Russell', 'John Locke', 1),\n ('Bertrand Russell', 'Alfred N. Whitehead', 1),\n ('Bertrand Russell', 'Immanuel Kant', 2),\n ('G.E. Moore', 'George Berkeley', 3),\n ('G.E. Moore', 'Thomas Reid', 1),\n ('G.E. Moore', 'T.H. Green', 1),\n ('G.E. Moore', 'David Hume', 1),\n ('G.E. Moore', 'Harold H. Joachim', 1),\n ('G.E. Moore', 'Edward Westermarck', 1),\n ('Ludwig Wittgenstein', 'St. Augustine', 1),\n ('Ludwig Wittgenstein', 'William James', 1),\n ('Ludwig Wittgenstein', 'G.E. Moore', 2),\n ('David Kellogg Lewis', 'Willard Van Orman Quine', 4),\n ('David Kellogg Lewis', 'Rudolf Carnap', 2),\n ('David Kellogg Lewis', 'Saul Kripke', 5),\n ('David Kellogg Lewis', 'David Kellogg Lewis', 3),\n ('David Kellogg Lewis', 'Hilary Putnam', 1),\n ('David Kellogg Lewis', 'Bernard Williams', 1),\n ('David Kellogg Lewis', 'Noam Chomsky', 1),\n ('David Kellogg Lewis', 'Peter Strawson', 1),\n ('David Kellogg Lewis', 'C. I. Lewis', 1),\n ('David Kellogg Lewis', 'David Ross', 1),\n ('David Kellogg Lewis', 'John L. Austin', 1),\n ('David Kellogg Lewis', 'Peter Railton', 1),\n ('Willard Van Orman Quine', 'Bertrand Russell', 3),\n ('Willard Van Orman Quine', 'Rudolf Carnap', 5),\n ('Willard Van Orman Quine', 'C. I. Lewis', 1),\n ('Willard Van Orman Quine', 'Willard Van Orman Quine', 1),\n ('Willard Van Orman Quine', 'Carl G. Hempel', 1),\n ('Willard Van Orman Quine', 'Gottfried W. Leibniz', 1),\n ('Willard Van Orman Quine', 'George Berkeley', 1),\n ('Willard Van Orman Quine', 'David Hume', 1),\n ('Willard Van Orman Quine', 'Alfred N. Whitehead', 1),\n ('Willard Van Orman Quine', 'David Kellogg Lewis', 1),\n ('Karl Popper', 'Richard Rorty', 1),\n ('Karl Popper','Gottfried W. Leibniz', 1),\n ('Karl Popper', 'George Berkeley', 1),\n ('Karl Popper', 'William Whewell', 1),\n ('Karl Popper', 'John N. Keynes', 2),\n ('Karl Popper', 'Ludwig Wittgenstein', 6),\n ('Karl Popper', 'Ernst Mach', 1),\n ('Karl Popper', 'Rudolf Carnap', 3),\n ('Karl Popper', 'Otto Neurath', 2),\n ('Karl Popper', 'Alfred N. Whitehead', 1),\n ('Karl Popper',  'Charles S. Peirce', 1),\n ('Karl Popper', 'Hans Reichenbach', 2),\n ('Karl Popper', 'Arthur S. Eddington', 1),\n ('Karl Popper', 'Werner Heisenberg', 2),\n ('Karl Popper', 'Francis Bacon', 1),\n ('Saul Kripke', 'John Searle', 2),\n ('Saul Kripke', 'David Kellogg Lewis', 3),\n ('Saul Kripke', 'Peter Strawson', 2),\n ('Saul Kripke', 'Bertrand Russell', 7),\n ('Saul Kripke', 'Willard Van Orman Quine', 3),\n ('Saul Kripke', 'John Stuart Mill', 1),\n ('Saul Kripke', 'Rene Descartes', 3),\n ('Saul Kripke', 'Donald Davidson', 2),\n ('Saul Kripke', 'G.E. Moore', 1),\n ('Saul Kripke','Alfred N. Whitehead', 1),\n ('Saul Kripke', 'Robert L. Martin', 1),\n ('Saul Kripke', 'Marcus Tullius Cicero', 1),\n ('Saul Kripke', 'Hilary Putnam', 1),\n ('Saul Kripke', 'Henry Sidgwick', 2),\n ('Saul Kripke', 'Adam Smith', 1),\n ('Saul Kripke', 'Gottlob Frege', 2),\n ('Saul Kripke', 'Ludwig Wittgenstein', 2),\n ('Saul Kripke', 'Carl G. Hempel', 1),\n ('Saul Kripke', 'R.G. Collingwood', 1),\n ('Saul Kripke',  'Ralph B. Perry', 1),\n ('Saul Kripke', 'Daniel C. Dennett', 1),\n ('Michel Foucault', 'Pierre-J.-G. Cabanis', 10),\n ('Michel Foucault', '\u00c9tienne B. de Condillac', 12),\n ('Michel Foucault','Marquis de Condorcet',1),\n ('Michel Foucault', 'Pierre Bayle', 3),\n ('Michel Foucault', 'Denis Diderot', 4),\n ('Michel Foucault', 'Friedrich Nietzsche', 6),\n ('Michel Foucault', 'Rene Descartes', 9),\n ('Michel Foucault', 'Jacques Derrida', 4),\n ('Michel Foucault', 'Giambattista d. Porta', 3),\n ('Michel Foucault', 'Tommaso Campanella', 2),\n ('Michel Foucault', 'Petrus Ramus', 1),\n ('Michel Foucault', 'George Berkeley', 5),\n ('Michel Foucault', 'Nicolas Malebranche', 1),\n ('Michel Foucault', 'Francis Bacon', 1),\n ('Michel Foucault', 'J.J Rousseau', 5),\n ('Michel Foucault', 'Claude Buffier', 1),\n ('Michel Foucault', 'Thomas Hobbes', 2),\n ('Michel Foucault', 'Immanuel Kant', 2),\n ('Michel Foucault', 'David Hume', 1),\n ('Michel Foucault', 'John Locke', 3),\n ('Michel Foucault', 'Gottfried W. Leibniz', 1),\n ('Michel Foucault', 'Adam Smith', 1),\n ('Michel Foucault', 'Maximus the Greek', 2),\n ('Michel Foucault', 'Georg W.F. Hegel', 1),\n ('Jacques Derrida', 'Richard Rorty', 1),\n ('Jacques Derrida', 'Michel Foucault', 2),\n ('Jacques Derrida', 'Rene Descartes', 3),\n ('Jacques Derrida', 'Friedrich Nietzsche', 1),\n ('Jacques Derrida', 'Martin Heidegger', 2),\n ('Jacques Derrida', 'Edmund Husserl', 4),\n ('Jacques Derrida', 'Wilhelm Dilthey', 1),\n ('Jacques Derrida', 'Georg W.F. Hegel', 3),\n ('Gilles Deleuze','Gottfried W. Leibniz', 3),\n ('Gilles Deleuze', 'Martin Heidegger', 1),\n ('Gilles Deleuze', 'Immanuel Kant', 2),\n ('Gilles Deleuze', 'Proclus', 1),\n ('Gilles Deleuze', 'Novalis', 1),\n ('Gilles Deleuze', 'Henri Bergson', 1),\n ('Gilles Deleuze', 'D\u00e9sir\u00e9-Joseph Mercier', 1),\n ('Gilles Deleuze', 'Karl Marx', 1),\n ('Gilles Deleuze', 'William James', 1),\n ('Gilles Deleuze', 'Arthur Schopenhauer', 1),\n ('Maurice Merleau-Ponty', 'Max Scheler', 4),\n ('Maurice Merleau-Ponty', 'Henri Bergson', 2),\n ('Maurice Merleau-Ponty', 'Edmund Husserl', 7),\n ('Maurice Merleau-Ponty', 'Jean-Paul Sartre', 2),\n ('Maurice Merleau-Ponty', 'Denis Diderot', 1),\n ('Maurice Merleau-Ponty', 'L\u00e9on Brunschvicg', 1),\n ('Maurice Merleau-Ponty', 'Ernst Cassirer', 1),\n ('Maurice Merleau-Ponty', 'Karl Jaspers', 2),\n ('Maurice Merleau-Ponty', 'Werner Heisenberg', 2),\n ('Maurice Merleau-Ponty', 'Ernest Nagel', 1),\n ('Maurice Merleau-Ponty', 'Kuno Fischer', 3),\n ('Maurice Merleau-Ponty', 'Edith Stein', 1),\n ('Maurice Merleau-Ponty', 'Immanuel Kant', 1),\n ('Maurice Merleau-Ponty', 'Rene Descartes', 2),\n ('Maurice Merleau-Ponty', 'Martin Heidegger', 5),\n ('Edmund Husserl', 'Rene Descartes', 2),\n ('Edmund Husserl', 'Benedict de Spinoza', 1),\n ('Edmund Husserl', 'Immanuel Kant', 1),\n ('Edmund Husserl', 'David Hume', 1),\n ('Edmund Husserl', 'Wilhelm Dilthey', 1),\n ('Martin Heidegger', 'Plato', 1),\n ('Martin Heidegger', 'Max Scheler', 2),\n ('Martin Heidegger', 'Aristotle', 1),\n ('Martin Heidegger', 'Immanuel Kant', 1),\n ('Martin Heidegger','Georg W.F. Hegel', 4),\n ('Martin Heidegger', 'Rene Descartes', 1),\n ('Martin Heidegger', 'Friedrich Nietzsche', 1),\n ('Martin Heidegger', 'Simplicius of Cilicia', 1),\n ('Immanuel Kant', 'Joseph Priestley', 1),\n ('Immanuel Kant', 'Immanuel Kant', 2),\n ('Immanuel Kant', 'Anaxagoras', 1),\n ('Immanuel Kant', 'Edmund Burke', 1),\n ('Immanuel Kant', 'David Hume', 1),\n ('Immanuel Kant', 'Plato', 2),\n ('Immanuel Kant', 'Benedict de Spinoza', 1),\n ('Immanuel Kant', 'John Locke', 1),\n ( 'Johann G. Fichte',  'Johann G. Fichte', 4),\n ( 'Johann G. Fichte', 'Immanuel Kant', 3),\n ('Georg W.F. Hegel', 'Aristotle', 4),\n ('Georg W.F. Hegel',  'Friedrich H. Jacobi', 3),\n ('Georg W.F. Hegel', 'Benedict de Spinoza', 4),\n ('Georg W.F. Hegel', 'Reinhold Niebuhr', 2),\n ('Georg W.F. Hegel',  'Johann G. Fichte', 4),\n ('Georg W.F. Hegel', 'Parmenides', 2),\n ('Georg W.F. Hegel', 'Christian, b.v. Wolff', 1),\n ('Georg W.F. Hegel', 'Immanuel Kant', 2),\n ('Georg W.F. Hegel', 'Pierre Bayle', 1),\n ('Georg W.F. Hegel', 'Gottfried W. Leibniz', 2),\n ('Georg W.F. Hegel','Georg W.F. Hegel', 1),\n ('Georg W.F. Hegel', 'Plato', 1),\n ('Georg W.F. Hegel' , 'Diogenes', 1),\n ('Karl Marx',  'James F. Ferrier', 2),\n ('Karl Marx', 'Friedrich Engels', 2),\n ('Karl Marx', 'Georg W.F. Hegel', 1),\n ('Karl Marx', 'Samuel Bailey', 2),\n ('Karl Marx', 'Adam Smith', 4),\n ('Karl Marx', 'William Hamilton', 1),\n ('Karl Marx', 'Adam Ferguson', 1),\n ('Karl Marx', 'Karl Marx', 1),\n ('Karl Marx', 'Isaac of Stella', 1),\n ('Karl Marx', 'John Locke', 1),\n ('Karl Marx', 'Frederic Harrison', 1),\n ('Vladimir Lenin', 'Karl Marx', 6),\n ('Vladimir Lenin', 'Friedrich Engels', 3),\n ('Adam Smith', 'Aristotle', 2),\n ('Adam Smith', 'Carneades', 1),\n ('Adam Smith', 'Henry of Ghent', 1),\n ('Adam Smith', 'Protagoras', 1),\n ('Marcus Aurelius', 'Theophrastus', 1),\n ('Marcus Aurelius', 'Pythagoras', 1),\n ('Marcus Aurelius', 'Agrippa', 1),\n ('Friedrich Nietzsche', 'Aristotle', 2),\n ('Friedrich Nietzsche', 'Socrates', 2),\n ('Friedrich Nietzsche', 'Ernest Renan', 2),\n ('Friedrich Nietzsche', 'J.J Rousseau', 1),\n ('Friedrich Nietzsche', 'Plato', 3),\n ('Friedrich Nietzsche', 'Friedrich Schiller', 2),\n ('Friedrich Nietzsche', 'Thomas Hobbes', 1),\n ('Friedrich Nietzsche', 'Karl C. F. Krause', 1),\n ('Friedrich Nietzsche',  'Friedrich W.J. von Schelling', 1),\n ('Friedrich Nietzsche', 'Benedict de Spinoza', 1),\n ('Friedrich Nietzsche', 'Lucius A. Seneca', 1),\n ('Friedrich Nietzsche', 'Immanuel Kant', 1),\n ('Friedrich Nietzsche', 'Arthur Schopenhauer', 1),\n ('Friedrich Nietzsche', 'Gottfried W. Leibniz', 1),\n ('Friedrich Nietzsche', 'Empedocles', 1),\n ('Friedrich Nietzsche', 'T.H. Green', 1),\n ('Friedrich Nietzsche', 'Thomas Brown', 1),\n ('Wollstonecraft', 'J.J Rousseau', 1),\n ('Simone de Beauvoir', 'Denis Diderot', 1),\n ('Simone de Beauvoir', 'Karl Marx', 1),\n ('Simone de Beauvoir','Georg W.F. Hegel', 2),\n ('Simone de Beauvoir', 'Jean-Paul Sartre', 2),\n ('Simone de Beauvoir', 'Plato', 2),\n ('Simone de Beauvoir', 'Auguste Comte', 2),\n ('Simone de Beauvoir', 'Judith Butler', 1),\n ('Simone de Beauvoir',\n  'Marquis de Condorcet',\n  1),\n ('Simone de Beauvoir', 'Aristotle', 1),\n ('Simone de Beauvoir', 'J.J Rousseau', 1),\n ('Davis', 'Susan B. Anthony', 4),\n ('Davis', 'Elizabeth C. Stanton', 1)]","cf93db55":"######### Creating the graph #########\nG = nx.DiGraph()\nG.add_nodes_from(Nodes)\nG.add_weighted_edges_from(Edges)\n \nfig, axs = plt.subplots(figsize=(4,4))\npos = nx.shell_layout(G)\nnx.draw(G,pos=pos,with_labels =False,width=True)","ea60ba3b":"DC=nx.algorithms.centrality.degree_centrality(G)\nInDC=nx.algorithms.centrality.in_degree_centrality(G)\nOutDC=nx.algorithms.centrality.out_degree_centrality(G)\nCentralityFrame=pd.DataFrame([(a,b,c,d) for a,b,c,d in zip(DC.keys(),DC.values(),InDC.values(),OutDC.values())],columns=[\"Node\",\"Degree_C. Score\",\"InDegree_C. Score\",\"OutDegree_C. Score\"]) \nCentralityFrame","ad46e06d":"Most_referred=CentralityFrame[[\"Node\",\"InDegree_C. Score\"]].sort_values(by=[\"InDegree_C. Score\"],ascending=False).head(15)\n\nfig = plt.figure(figsize = (15,6))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = Most_referred.values,\n          rowLabels =  range(1,len(Most_referred.index)+1),\n          colLabels =[\"Philosopher\",\"Being referred-rate\"],\n          loc = \"center\",\n         colWidths = [0.15, 0.25],\n         \n         )\n\nax.set_title(\"Most Referred Philosophers\")\nthe_table.set_fontsize(20)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","cbc978ec":"Most_referring=CentralityFrame[[\"Node\",\"OutDegree_C. Score\"]].sort_values(by=[\"OutDegree_C. Score\"],ascending=False).head(15)\n \nfig = plt.figure(figsize = (15,6))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = Most_referring.values,\n          rowLabels =  range(1,len(Most_referring.index)+1),\n          colLabels =[\"Philosopher\",\"Referring-rate\"],\n          loc = \"center\",\n         colWidths = [0.15, 0.25],\n         \n         )\n\nax.set_title(\"Most Referring Philosophers\")\nthe_table.set_fontsize(20)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","28471d96":"Being_referred=CentralityFrame[\"InDegree_C. Score\"].values\nReferring=CentralityFrame[\"OutDegree_C. Score\"].values\n\nArray=np.array(sorted(zip(Being_referred,Referring),key=itemgetter(1),reverse=True))\nSorted_B_ref,Sorted_ref=Array[:,0],Array[:,1]\nplt.plot(Sorted_B_ref*10,'--bo')\nplt.plot(Sorted_ref*10,'--ro')\n \nprint(\"p-value for pearson correlation: \",scipy.stats.pearsonr(Sorted_B_ref, Sorted_ref)[1])","dc1d9d03":"PR=nx.pagerank(G, alpha=0.3)\nPageRanks=pd.DataFrame([(a,b) for a,b in zip(PR.keys(),PR.values())],columns=[\"Node\",\"Page_R. Score\"]).sort_values(by=[\"Page_R. Score\"],ascending=False).head(35)\nfig = plt.figure(figsize = (15,13))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = PageRanks.values,\n          rowLabels =  range(1,len(PageRanks.index)+1),\n          colLabels =[\"Philosopher\",\"PageRank Score\"],\n          loc = \"center\",\n         colWidths = [0.15, 0.25],\n         \n         )\n\nax.set_title(\"Probability of Seeing a Philosopher\")\nthe_table.set_fontsize(20)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","120faa23":"CC=nx.algorithms.centrality.closeness_centrality(G)\nCCSorted=pd.DataFrame([(a,b) for a,b in zip(CC.keys(),CC.values())],columns=[\"Node\",\"Closeness_C. Score\"]).sort_values(by=[\"Closeness_C. Score\"],ascending=False).head(10) \nfig = plt.figure(figsize = (15,5))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = CCSorted.values,\n          rowLabels =  range(1,len(CCSorted.index)+1),\n          colLabels =[\"Philosopher\",\"Closeness Centrality Score\"],\n          loc = \"center\",\n         colWidths = [0.15, 0.25],\n         \n         )\n\n \nthe_table.set_fontsize(15)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","df5500af":"BC=nx.algorithms.centrality.betweenness_centrality(G)\nBCsorted=pd.DataFrame([(a,b) for a,b in zip(BC.keys(),BC.values())],columns=[\"Node\",\"BetweenessC. Score\"]).sort_values(by=[\"BetweenessC. Score\"],ascending=False).head(10) \n\nfig = plt.figure(figsize = (15,5))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = BCsorted.values,\n          rowLabels =  range(1,len(BCsorted.index)+1),\n          colLabels =[\"Philosopher\",\"Betweenness Centrality Score\"],\n          loc = \"center\",\n         colWidths = [0.15, 0.25],\n         )\n\n \nthe_table.set_fontsize(15)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","e157c52a":"Hub,Auth=nx.hits(G)\nArray=np.array(sorted(zip(Hub.values(),Auth.values()),key=itemgetter(0),reverse=True))\nSorted_H,Sorted_A=Array[:,0],Array[:,1]\nplt.plot(Sorted_H,'--bo')\nplt.plot(Sorted_A,'--ro')\nprint(\"p-value for pearson correlation: \",scipy.stats.pearsonr(Sorted_H,Sorted_A))","2f11fb63":" \n##############################Undirected graph part for link predictions############################\nG = nx.Graph()\nG.add_nodes_from(Nodes)\nG.add_weighted_edges_from(Edges)\nUnconnectedNodes=[]\nfor a in JustAuthor:\n    for b in JustAuthor:\n        if a!=b:\n            if ((a,b) not in [(a,b) for a,b,c in Edges]) and ((a,b) not in [(b,a) for a,b,c in Edges]) and ((b,a) not in UnconnectedNodes):\n                UnconnectedNodes.append((a,b))","05c85aa5":"PreferentialAttachment=[]\nfor a,b,c in sorted(nx.preferential_attachment(G, UnconnectedNodes),key=itemgetter(2),reverse=True):\n    PreferentialAttachment.append((a,b,c))\nPDF=pd.DataFrame(PreferentialAttachment,columns=[\"Node1\",\"Node2\",\"Pref.A.Score\"]).sort_values(by=[\"Pref.A.Score\"],ascending=False).head(50)  \n \nfig = plt.figure(figsize = (15,13))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = PDF.values,\n          rowLabels =  range(1,len(PDF.values[:,1])+1),\n          colLabels =[\"Philosopher_1\",\"Philosopher_2\",\"PreferentialAttachment Score\"],\n          loc = \"center\"\n         )\n\n \nthe_table.set_fontsize(20)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");\n####Preferential Attachment can be used to create new edges ,thereby creating new graph.","247ed882":"Jaccard_C=[]\nfor a,b,c in sorted(nx.jaccard_coefficient(G, UnconnectedNodes),key=itemgetter(2),reverse=True):\n    Jaccard_C.append((a,b,c))\nJDF=pd.DataFrame(Jaccard_C,columns=[\"Node1\",\"Node2\",\"Jaccard_C.Score\"]).sort_values(by=[\"Jaccard_C.Score\"],ascending=False).head(35)\n \n\nfig = plt.figure(figsize = (15,13))\nax = fig.add_subplot(111)\n\nthe_table = plt.table(cellText = JDF.values,\n          rowLabels =  range(1,len(JDF.values[:,1])+1),\n          colLabels =[\"Philosopher_1\",\"Philosopher_2\",\"Jaccard Coefficient Score\"],\n          loc = \"center\"\n         )\n\n \nthe_table.set_fontsize(20)\nthe_table.scale(1.6, 1.6)\nax.axis(\"off\");","9a754fec":"#####################################################(bokeh library) Interactive network graph################################################\n###############################################Creating Network\n \nG = nx.DiGraph()\nG.add_nodes_from(Nodes)\n \nfor a,b,c in Edges:\n    if c<3:\n        G.add_edge(a,b,weight=1,width=1,color=\"dodgerblue\")\n    elif 10>c and c>3:\n        G.add_edge(a,b,weight=3,width=3,color=\"blue\")\n    elif c>10 and 100>c:\n        G.add_edge(a,b,weight=8,width=8,color=\"darkviolet\")\n    elif c>100:\n        G.add_edge(a,b,weight=20,width=20,color=\"crimson\")\n         \n\npos = graphviz_layout(G, prog=\"dot\")\nXs=[]\nYs=[]\nId=0\nLabels=[c for c in pos.keys()]\nXs=[a for a,b in pos.values()]\nYs=[b for a,b in pos.values()]\n\n \n\nMeanX=np.mean(Xs)\nMeanY=np.mean(Ys)\nCXs=[a-MeanX for a,b in pos.values()]\nCYs=[b-MeanY for a,b in pos.values()]\n \n\nPhil1=[]\nNewXs1=[]\nNewYs1=[]\n\nPhil2=[]\nNewXs2=[]\nNewYs2=[]\n \n\nPhil3=[]\nNewXs3=[]\nNewYs3=[]\n \nPhil4=[]\nNewXs4=[]\nNewYs4=[]\nconstant=2.3\ntreshold=0\nfor a,b,c in zip(CXs,CYs,Labels): \n    if a>treshold and b>treshold:\n        NewXs1.append(a+constant+MeanX)\n        NewYs1.append(b+constant+4+MeanY)\n        Phil1.append(c)\n    elif a<treshold and b<treshold:\n        NewXs2.append(a-constant-5+MeanX)\n        NewYs2.append(b-constant-4+MeanY)\n        Phil2.append(c)\n    elif a<treshold and b>treshold:\n        NewXs3.append(a-constant-100+MeanX)\n        NewYs3.append(b+constant-2+MeanY)\n        Phil3.append(c)\n    elif a>treshold and b<treshold:\n        NewXs4.append(a+constant-20+MeanX)\n        NewYs4.append(b-constant-12+MeanY)\n        Phil4.append(c)\n \n    else:\n        print(a,b)\n ###############################################Creating Network\n\n\n\n ###################################################Labels\nfrom bokeh.models import ColumnDataSource, LabelSet\nfrom math import pi \n\nsource1 = ColumnDataSource({'x': NewXs1, 'y':NewYs1,'Philosophers':Phil1})\nlabels1 = LabelSet(x='x', y='y',angle=pi\/4, text='Philosophers', source=source1,\n                  background_fill_color='white')\n\nsource2 = ColumnDataSource({'x': NewXs2, 'y':NewYs2,'Philosophers':Phil2})\nlabels2 = LabelSet(x='x', y='y',angle=-pi\/4, text='Philosophers', source=source2,\n                  background_fill_color='white')\n\nsource3 = ColumnDataSource({'x': NewXs3, 'y':NewYs3,'Philosophers':Phil3})\nlabels3 = LabelSet(x='x', y='y',angle=pi\/4, text='Philosophers', source=source3,\n                  background_fill_color='white')\n\nsource4 = ColumnDataSource({'x': NewXs4, 'y':NewYs4,'Philosophers':Phil4})\nlabels4 = LabelSet(x='x', y='y',angle=-(pi)\/4, text='Philosophers', source=source4,\n                  background_fill_color='white')\n\n ###################################################Labels\n    \n\nfrom bokeh.io import output_file, show\nfrom bokeh.models import (BoxSelectTool, Circle, EdgesAndLinkedNodes, HoverTool,\n                          MultiLine, NodesAndLinkedEdges, Plot, Range1d, TapTool,)\nfrom bokeh.palettes import Spectral4\nfrom bokeh.plotting import from_networkx\n\nplot = Plot(plot_width=1900, plot_height=1000,\n            x_range=Range1d(min(Xs)-320,max(Xs)+900), y_range=Range1d(min(Ys)-70,max(Ys)+90))\nplot.title.text = \"Philosopher Citations\" \nplot.add_tools(HoverTool(tooltips=None), TapTool(), BoxSelectTool()) \n\ngraph_renderer = from_networkx(G,pos, scale=1, center=(0,0))\n\ngraph_renderer.node_renderer.glyph = Circle(size=15, fill_color=Spectral4[0])\ngraph_renderer.node_renderer.selection_glyph = Circle(size=15, fill_color=Spectral4[2])\ngraph_renderer.node_renderer.hover_glyph = Circle(size=15, fill_color=Spectral4[1])\n\ngraph_renderer.edge_renderer.glyph = MultiLine(line_color=\"color\", line_alpha=0.1, line_width=\"width\",)\ngraph_renderer.edge_renderer.selection_glyph = MultiLine(line_color=\"color\", line_width=\"width\")\ngraph_renderer.edge_renderer.hover_glyph = MultiLine(line_color=\"color\",line_width=\"width\")\n\ngraph_renderer.selection_policy = NodesAndLinkedEdges()\ngraph_renderer.inspection_policy = NodesAndLinkedEdges()\n\n##################Arrow###############\nfrom bokeh.models import Arrow, OpenHead, NormalHead, VeeHead\nplot.add_layout(Arrow(end=NormalHead(line_color=\"black\",line_width=4),x_start=max(Xs)+250, y_start=max(Ys)-150, x_end=max(Xs)+250, y_end=min(Ys)+40))\nsource = ColumnDataSource({'x': [max(Xs)-270,max(Xs)-250], 'y':[max(Ys)-145,min(Ys)+30],'Labels':[\"Philosopher who is Referring\",\"Referenced Philosopher\"]})\nArrowLabels = LabelSet(x='x', y='y', text='Labels', source=source,background_fill_color='white')\n##################Arrow###############\n\n \n\n \nplot.renderers.append(graph_renderer)\nplot.renderers.append(ArrowLabels)\nplot.renderers.append(labels1)\nplot.renderers.append(labels2)\nplot.renderers.append(labels3)\nplot.renderers.append(labels4) \noutput_file(\"\/kaggle\/working\/interactive_complete_hierarchical.html\")\nfrom IPython.display import HTML\nshow(plot)\nHTML(filename=\"\/kaggle\/working\/interactive_complete_hierarchical.html\")\nHTML(filename=\"\/kaggle\/working\/interactive_complete_hierarchical.html\")","b015c88b":"g=Network(bgcolor='#222222', font_color='green',height=\"100%\",width=\"75%\",directed=True)\n \ng.toggle_hide_edges_on_drag(False)\ng.from_nx(G)\n\ng.set_edge_smooth('cubicBezier')\ng.barnes_hut(\ngravity=-80000,\ncentral_gravity=0.5,\nspring_length=20,\nspring_strength=0.01,\ndamping=1,\noverlap=-20,\n) \n \n#g.show_buttons()\n#g.show('nx.html')\nfrom IPython.display import HTML\nHTML(filename=\"..\/input\/htmlgraphs\/DarkThemeInteractivePhilosophy.html\")","c7a8dc2b":"*It seems like there isn't*","2e7cb439":"### Betweenness Centrality \n<hr>\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Betweenness_centrality#:~:text=In%20graph%20theory%2C%20betweenness%20centrality,graph%20based%20on%20shortest%20paths.\">Definition:<\/a>\n* In graph theory, betweenness centrality (or \"betweeness centrality\") is a measure of centrality in a graph based on shortest paths. For every pair of vertices in a connected graph, there exists at least one shortest path between the vertices such that either the number of edges that the path passes through (for unweighted graphs) or the sum of the weights of the edges (for weighted graphs) is minimized. The betweenness centrality for each vertex is the number of these shortest paths that pass through the vertex. \n\n* How we can use betweenness centrality: This centrality especially important for old philosophers because most of them historically either never written or their writings went missing. For example, this applies to almost all of the Presocratics and Socrates. Those never wrote; we know these either via Platon or Aristotle. Therefore, using this measurement, we can infer which philosophers are important for historically learning other philosophers. (This will not give us exact ratios since data is not including all the philosophers in history. Also, we haven't done chronologic filtering. However, these will not affect our ranking so much)","c68184fe":"* With this approach, we can say the probability of having connections between Hume & Berkeley (0.375) two times more likely than having connections between H.E Moore and Quine (0.1875).","6eb9f307":"### Degree Centrality\n<hr>\n\n##### <a href=\"https:\/\/link.springer.com\/referenceworkentry\/10.1007%2F978-1-4419-9863-7_935#:~:text=Degree%20centrality%20is%20defined%20as,%2C%20namely%2C%20indegree%20and%20outdegree\">Definition:<\/a> \n*Degree centrality is defined as the number of links incident upon a node (i.e., the number of ties that a node has). If the network is directed (meaning that ties have direction), then two separate measures of degree centrality are defined, namely, indegree and outdegree. Indegree is a count of the number of ties directed to the node (head endpoints) and outdegree is the number of ties that the node directs to others (tail endpoints). In such cases, the degree is the sum of indegree and outdegree.*\n\n*With our approach, these terms will correspond to different phenomena.* \n* We can see degree centrality as the \"number of citations upon a philosopher.\"\n* We can see in-degree centrality as the \"number of times a philosopher has been referred.\"\n* We can see out-degree centrality as the \"number of times a philosopher has referred.\"\n\n*Since our graph is directed, we will look at indegree and outdegree scores.  (I think degree centrality, in this point, does not have a value of information since it's just the sum of indegree and outdegree score.)*\n* Note: Since we do not have all the philosophers in history, our centrality measures will give a part of the image rather than the whole. However, I believe if we would have all the philosophers and their books in our dataset, this would reflect the exact reality.","056acc2d":"# Conclusion\n* All of the results in section one should be questioned with one's general background knowledge of philosophy. If there is a mistake or other information that can be extracted, please let me know in the comment section. (Also, I would like to hear other interpretations about these centrality measures.)\n* This analysis will continue with different ideas. The last time we talked with Kourosh, it was quite fruitful in the abundance of ideas. However, these days all things have piled up, so it will take a while for the next project.","69203749":"### Preferential Attachment \n<hr>\n\n\n* <a href=\"https:\/\/neo4j.com\/docs\/graph-algorithms\/current\/labs-algorithms\/preferential-attachment\/\">Preferential attachment means that the more connected a node is, the more likely it is to receive new links. <\/a>\n* If we apply this to our network, we can say the philosophers who have more connections(referred or referring, since our network is undirected) have a higher tendency to connect in the future too.","0454922b":"* According to our table, we can make comparative predictions. For example, we can say seeing Michel Foucault referring to Aristotle(528) approximately two times more likely than seeing David Kellog Lewis referring to Friedrich Nietzsche(260). However, we should keep in mind this kind of prediction is not precisely accurate. This prediction method depends on the assumption, which says, \"Preferential attachment means that the more connected a node is, the more likely it is to receive new links. And there isn't another factor that affects it.\"","9fa16d46":"### Pyvis Graph \n* Pyvis is a library that provides us tools to create interactive like Bokeh, but it differently provides us physics options. With physics options, nodes and edges act like physical objects that attract and repel each other. (The drawback of this library is the poor documentation and scarcity of other interactiveness tools)","9195df95":"### Jaccard Coefficient \n<hr>\n\n* <a href=\"https:\/\/en.wikipedia.org\/wiki\/Jaccard_index#:~:text=The%20Jaccard%20coefficient%20measures%20similarity,A%2CB)%20%3D%201.\">\"The Jaccard coefficient measures similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets\" <img src=\"https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/eaef5aa86949f49e7dc6b9c8c3dd8b233332c9e7\"> <\/a>\n\n<img src=\"\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/e\/ee\/Union_of_sets_A_and_B.svg\/200px-Union_of_sets_A_and_B.svg.png\"> <img src=\"\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/1f\/Intersection_of_sets_A_and_B.svg\/200px-Intersection_of_sets_A_and_B.svg.png\">\n\n* This is another method for link prediction. This time assumption is that if two philosophers have a proportionally(same neighbors\/all neighbors) higher number of same neighbors, then these two philosophers have a higher chance of referring to each other.\n* Intuition behind it can be thought of as the following example: Let's say Bertrand Russel reading a book of Hegel(In our graph, we can see these two philosophers are connected.) And in the book Hegel referring to Fichte(In or graph Russell and Fichte haven't connected yet). Since Bertrand Russell is reading that book, he will see the sentence that includes Fichte's view. After that, he started to another book from another philosopher and again have seen a view of Fichte. In some sense, when this kind of event accumulated, Bertrand Russell will tend to use Fichte's ideas by referring to him. Therefore the probability of seeing Bertrand Rusell linked with Fitche in the books that are not in our dataset will increase. \n* This kind of link prediction in our network (with my interpretation) depends on the following main assumption: \n * Psychologically, people tend to use others' ideas when they see that idea so much. And since philosophers are trustworthy people, they will not forget to give references when using that idea.","e3dd7ea4":"## Directed graph part","d53eed04":"* The result is quite satisfying for me. Before looking at this table, I have asked the question, in indegree centrality measurement, \"Why Socrates is not higher on the list?\" It was counter-intuitive to my background knowledge. However, as it turns out, the probability of coming across to a philosopher is not the same thing as the proportion of being referenced. I think this is an important lesson that can be taken from this table. By using this table, we can have an idea about the probabilities of seeing a philosopher.","38f30c98":"* And this is our most referring list. Different kinds of information can be extracted from it, like, \"Michel Foucault was a thinker who refers other a lot.\" \n\n\n\n* Now, we will investigate another question with these two data frames. The question is, \"Is there a correlation between referring and being referred?\"","05857ca8":"## Undirected Graph\n*Now we will look at undirected graph measurements*","a3720b1e":"### Importing libraries","cc2ef7e9":"### <a href=\"https:\/\/en.wikipedia.org\/wiki\/PageRank\">PageRank Algorithm <\/a>\n\n<hr>\n\n##### Background Information\n* This is an algorithm I especially like. It's a beautiful way to show how linear algebra (eigenbasis) is used in action. For those who are interested in mathematics behind it, there is a very good <a href=\"https:\/\/johngiorgi.github.io\/mathematics-for-machine-learning\/linear_algebra\/week_5\/\"> documentation<\/a> which is taken from <a href=\"https:\/\/www.coursera.org\/specializations\/mathematics-machine-learning\"> Mathematics for Machine L. Course by Imperial College London<\/a>.\n \n* How PageRank algorithm works in our browsers: When we search something in a browser, there are so many pages that include our keywords. Then how it's listed so properly that we can find everything that we are looking for so quickly? This is where the PageRank algorithm kicks in (Google still uses this algorithm, among others). Algorithm models nodes as the pages and edges as references.<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/thumb\/8\/8b\/PageRanks-Example.jpg\/330px-PageRanks-Example.jpg\">\n* The difference between PageRank and indegree score is that indegree score does not take where the reference is coming from into account. We mean that if an edge is coming from an important website, it gives more score to that node than a less important website(In PageRank algorithm).\n* Damping factor: In the PageRank algorithm, there is a parameter called damping factor. This is a parameter that says take a random jump to another node. Why we use it? We use it because if a node is just self-referential (only referencing to itself), the algebraic formula gets stuck, and all the score starts accumulating in a specific node. And we don't want to give a big score to an unimportant node just because it is only referencing itself.\n* Important point: If we get rid of the keywords and just use the PageRank algorithm, we can imagine ourselves as blindfolded and clicking on website links randomly. In this situation, PageRank score is the probability that we came across a specific website when we are randomly clicking on webpage links on the internet\"\n\n\n##### What we can learn about our data by using the PageRank algorithm\n* Since our nodes are the philosophers and edges are the references between them, we can use the same logic here. I will try to explain what we are doing by altering the above part's 'Important point 'fragment. With our data's notions, we shall construct the sentence like the following one: \"If we get rid of the subjects of interests (Reader's interest is not in a specific field like political philosophy, analytic philosophy, etc.) and just use the PageRank algorithm, we can imagine ourselves as blindfolded and taking random philosophy books and looking into them (Because of damping factor we are sometimes randomly jumping to another book -let's say sometimes the reader is bored and jumping to another book.-). In this situation, PageRank score is the probability that we came across to  a specific philosopher when we are reading philosophy.\"","2431cc49":"* These results are somewhat justifying my prior beliefs. Usually, whenever a philosopher talks about the Enlightenment, we see the names Immanuel Kant and Descartes. Since these two philosophers are so central for describing the Enlightenment, my belief about seeing these philosophers as the most referenced philosophers increases; other philosophers' place on this ranking, for me, is plausible too. For me, this graph is just counter-intuitive for Socrates. I have expected a higher \"being referred-rate\" for him, so my belief about his referenced rate updated, now I think Socrates might not be referenced as much as I think.    ","39d727d3":"### Closeness Centrality \n<hr>\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Closeness_centrality\">Definition:<\/a> \n\n* \"In a connected graph, closeness centrality (or closeness) of a node is a measure of centrality in a network, calculated as the reciprocal of the sum of the length of the shortest paths between the node and all other nodes in the graph. Thus, the more central a node is, the closer it is to all other nodes.\"\n\n\n* How we can use closeness centrality: <a href=\"https:\/\/neo4j.com\/docs\/graph-data-science\/current\/algorithms\/closeness-centrality\/#:~:text=Closeness%20centrality%20is%20a%20way,distances%20to%20all%20other%20nodes.\">Closeness centrality is a way of detecting nodes that are able to spread information very efficiently through a graph.<\/a> \n\n * This is plausible because if a node is close to other nodes, it's efficient(in the aspect of speed) to spread the information. However, there is a problem since these philosophers are not living in the same timeline, and these people are known; we can't use it. Why? If a philosopher had created an unusual idea, it would be already referenced, and that idea would have spread from that node. Therefore, that node would have higher closeness centrality. In the beginning, I thought it could give information about this, but then I have realized this fact. If you think it gives this kind of information or other information, let me know in the comment section.\n","2a402f10":"* We have extracted unconnected (yet) philosophers. Since we do not have all the books of a philosopher by looking at our network, we can't say these two philosophers haven't referred to each other. Therefore, we will look at which unconnected nodes have a higher probability of referring to each other in the books that we haven't included in our dataset.","d1e5fa1b":"# Creating Comprehensive Interactive Graphs\n<hr> \n\n* Now we will create two graphs to give insight to the user. In the <a href=\"https:\/\/www.kaggle.com\/azxc9595\/visual-graphs-of-philosophy\">last notebook<\/a> I have created a network for each philosopher but this time we will create a comprehensive network which includes all the philosophers on the following projects we will combine these two idea. ","cb6fbf65":"### Bokeh Graph\n\n* Bokeh is a library that provides us tools to create interactive networks(Including java callbacks).","1c7035b7":"# Centrality Measures\n<hr>","c05d9ffc":"#### Most referred Philosophers List ","9c1aa030":"* This table is consistent with our thesis. As we see Aristotle's and Plato's score is quite higher than others because these are the ones that introduce us the Presocratics and Socrates. Also, another thing is as the score gets higher, the date gets older(generally).  ","fb71a0af":"*For now, we will leave it because of the above reason.*","4a180d41":"#### <a href=\"https:\/\/en.wikipedia.org\/wiki\/Centrality\">\"In graph theory and network analysis, indicators of centrality identify the most important vertices within a graph.\" (Wikipedia)<\/a>  \n##### However, importance is a dependent term, important according to what? Therefore, when we look at the centrality measures, we should ask, \"What characterizes an important vertex?\" After asking this, we can use centrality measures and see which node(philosopher) is important according to which criteria. \n##### We will use different measures by dividing them into two sections because directed graphs do not support some algorithms. \n\n* Since our data is not comprehensive enough to see all the philosophy history, we should use the Bayesian approach. By this, I mean that when we see the data, we should update our beliefs rather than destroy old ones and create new ones. For example, let's say we think the most referred philosopher in history is Socrates, but we do not have such a strong belief about this. When data shows the most referred philosopher as Immanuel Kant, we should update our belief about Socrates being the most referred philosopher in a direction that we are less sure about this belief. In the same case, if we were thinking the most referred philosopher is Immanuel Kant, we should update our belief about this in a direction that we are more sure about our belief.\n\n* This approach is illustrated in the following picture. In the beginning, we have our prior beliefs. When we see the data (evidence), we update our beliefs in the direction of data rather than having a new belief as same as the data (evidence). This updated belief of ours is our posterior belief.\n![Bayesian approach](https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2016\/06\/12.jpg)","395bb23a":"### Hub Authority Scores (HITS algorithm)\n<hr>\n* HITS algorithm might be seen as  one-sided version of the PageRank.\n* <a href=\"https:\/\/en.wikipedia.org\/wiki\/HITS_algorithm\">\"A good hub represents a page that pointed to many other pages, while a good authority represents a page that is linked by many different hubs.\"<\/a>\n* We will use this to see if there is a relationship between being a good authority and being a good hub.","e5a313b7":"* As it turns out, there isn't a significant effect. Therefore, we can't say these two data correlate (With statistics language, we can't say two distributions are coming from different populations). However, we can't also say there is no effect. Our data might be not big enough to show us the correlation. For now, we will leave this, but as data gets bigger, we should keep in mind this kind of correlation might exist, and we should keep our eyes open for it.","e28d37b0":"# Introduction and Purposes\n<hr>\n\n* #### After seeing <a href=\"https:\/\/www.linkedin.com\/in\/kcalizadeh\/\">Kourosh's<\/a> philosophy <a href=\"https:\/\/www.kaggle.com\/kouroshalizadeh\/history-of-philosophy\">dataset<\/a> and <a href=\"http:\/\/philosophydata.com\/index.html\">project<\/a> I have fulled with different ideas. I believe that analysis of the history of philosophy can be quite beneficial to both researchers and people who are interested in philosophy. We will make our analysis with the scientific method. One of the strongest sides of science is the ability to make predictions about the future. In section one, we will make predictions about the not existing data, and we will make predictions about existing data while questioning whether the result compatible with our prior beliefs.\n\n#### 1. Our purpose here is to investigate the relationships of philosophers with graph theory. We will use different measurement methods to extract different pieces of information. My first work's name on this data was <a href=\"https:\/\/www.kaggle.com\/azxc9595\/visual-graphs-of-philosophy\">\"Visual Graphs of Philosophy,\"<\/a>  but this one's name is \"Graph Theory and Philosophy.\" This title difference is on purpose because, in that notebook, we have just created a network and visualized it in the aspect of graphs. In there, the purpose was just illustrating the relationships, but in this notebook, we will not just illustrate the relationships; we will also extract different pieces of information from these relations. (This is the point where we will use graph theory.) \n\n#### 2. Then, we will create interactive big graphs containing all the philosophers extracted from the dataset. We will create two graphs like this with two different libraries. (Bokeh & Pyviz)\n\n\n* #####  Note: I have copied the nodes and edges from <a href=\"https:\/\/www.kaggle.com\/azxc9595\/visual-graphs-of-philosophy\">\"Visual Graphs of Philosophy,\"<\/a> "}}