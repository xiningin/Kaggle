{"cell_type":{"af3ed1f6":"code","22e6d8c2":"code","a7380bf1":"code","00645254":"code","81b9c9d4":"code","ca79520b":"code","503044ad":"code","f3c2f538":"code","6aa36795":"code","6df5df16":"code","6beae4b0":"code","4acd45d2":"code","909499e9":"code","72868d8d":"code","56418d43":"code","96e64c35":"code","735f2dcb":"code","6df2cc51":"code","70c6ad67":"code","6043ccd4":"code","d22729af":"code","067fab7c":"code","1f5df2fb":"code","257ae253":"code","9c9edab0":"code","ac500bf8":"code","99a3c2eb":"code","5ef70a50":"code","9fcd0c3b":"code","9c443f79":"code","e4cdbb9e":"code","8b870488":"code","158f7e32":"code","1b35c100":"markdown","5e072bf5":"markdown","239aa2a6":"markdown","699473e4":"markdown","2886715e":"markdown","42d4c640":"markdown","d1eb829c":"markdown","57ef24d8":"markdown","3516ce75":"markdown","00800ddc":"markdown","7d6d3c2e":"markdown","147067c5":"markdown","2b469087":"markdown","e5b11f0b":"markdown","b33bee8e":"markdown","48ba5138":"markdown","1fdbd868":"markdown","344a7b4a":"markdown","5b77250b":"markdown","95e74700":"markdown","3959e09f":"markdown"},"source":{"af3ed1f6":"import pandas as pd\nimport numpy as np\n","22e6d8c2":"data = pd.read_csv(\"..\/input\/melbourne-housing-snapshot\/melb_data.csv\")","a7380bf1":"data.head()","00645254":"data.columns","81b9c9d4":"data.describe()","ca79520b":"data.describe(include='object')","503044ad":"cat = (data.dtypes == 'object')\nobject_cols = list(cat[cat].index)","f3c2f538":"print(\"Categorical variables are:\")\nprint(object_cols)","6aa36795":"cat_data = data[object_cols]\n","6df5df16":"cat_data.head()","6beae4b0":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ncat_data['Regionname'] = label_encoder.fit_transform(cat_data['Regionname'])","4acd45d2":"cat_data.head()","909499e9":"cat_data = pd.get_dummies(cat_data,columns=['Method'],prefix = ['cat'])","72868d8d":"cat_data.head()","56418d43":"cat_data['Type'].unique()","96e64c35":"type = {'h':0,'u':1,'t':2}\ncat_data = cat_data.replace({'Type':type})\n","735f2dcb":"cat_data.head()","6df2cc51":"drop = ['Suburb','Address','SellerG','Date','CouncilArea']\n\ncat_data = cat_data.drop(drop, axis=1)","70c6ad67":"cat_data.head()","6043ccd4":"num_data = data.select_dtypes(exclude=['object'])","d22729af":"num_data.head()","067fab7c":"new_data = pd.concat([num_data,cat_data],axis=1)","1f5df2fb":"new_data.head()","257ae253":"print(new_data.isnull().sum())","9c9edab0":"new_data = new_data.drop(['BuildingArea','YearBuilt','Car'],axis=1)","ac500bf8":"new_data.head()","99a3c2eb":"print(new_data.isnull().sum())","5ef70a50":"from sklearn.preprocessing import MinMaxScaler","9fcd0c3b":"scaler = MinMaxScaler()\n\ndata_values = new_data.values\n\ndata_scaled = scaler.fit_transform(data_values)\n\nnormalized_data = pd.DataFrame(data_scaled)\n","9c443f79":"normalized_data.head()","e4cdbb9e":"normalized_data.describe()","8b870488":"from sklearn.preprocessing import StandardScaler\n\nstd_scaler = StandardScaler()\n\ndata_values = new_data.values\n\nstd_data = std_scaler.fit_transform(data_values)\n\nstandardized_data = pd.DataFrame(std_data)\n\nstandardized_data.head()","158f7e32":"standardized_data.describe()","1b35c100":"## One-Hot Encoding","5e072bf5":"## Label Encoding","239aa2a6":"## Numeric Data","699473e4":"* I am applying Label Encoding to the ***Regionname*** column","2886715e":"## Droping Columns having Null Values","42d4c640":"## Converting Categorical Data to Numeric Data","d1eb829c":"## Concatinating Numeric and Converted Categorical Data","57ef24d8":"### Importing Libraries","3516ce75":"Columns ***BuildingArea*** , ***YearBuilt*** and ***Car*** has Null Values.\n\nSo I am droping These Columns.","00800ddc":"### Replacing Categorical values with Numeric ","7d6d3c2e":"### Categorical Data which is converted to Numerical Data","147067c5":"# Data Preprocessing","2b469087":"## Scaling Data\n","e5b11f0b":"### I hope you liked this Notebook.","b33bee8e":"**This is separated Categorical data**","48ba5138":"I am applying One-Hot Encoding to the ***Method*** Column","1fdbd868":"### Finding Categorical columns","344a7b4a":"## Data Standardization","5b77250b":"## Droping Less important Columns","95e74700":"### Loading Data","3959e09f":"## Finding Columns With Null Values"}}