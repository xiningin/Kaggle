{"cell_type":{"1cb1d2e8":"code","d32991d3":"code","71986e9f":"code","27018270":"code","baaabe3c":"code","93da8b0a":"code","2e8c7f3a":"code","3dfbf1fa":"code","5bdb0def":"code","7ee568f8":"code","2f1a6199":"code","fc212120":"code","25292c59":"code","c2c992e5":"code","33f28574":"code","b03bf00a":"code","6c282ae0":"code","b299844f":"code","59081c60":"code","bea9fe65":"code","68459fc5":"code","6413358f":"code","f6d16ae2":"code","6f516e62":"code","a4c10c8f":"code","21b3b645":"code","161879b1":"code","9c20587b":"code","13910a1c":"code","6d253a4d":"code","f66d673c":"code","10df8830":"code","07371d93":"code","f8f32252":"code","b40a714f":"code","1d83b2e1":"code","ade20b3c":"code","c846c6b3":"code","96a7bcfa":"code","1c910696":"code","5a215a11":"code","340c43ac":"code","ac4b12d5":"code","e4ff59c6":"code","66cd0f2d":"code","25d2882f":"code","98e2860b":"code","2a62f5b9":"code","b7239603":"code","9868e4c7":"code","3f959685":"code","26cf22e3":"code","7a6351d6":"code","d143b038":"code","552594d9":"code","1a1dd37c":"code","12c3838b":"markdown","2270d28b":"markdown"},"source":{"1cb1d2e8":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d32991d3":"df_anime=pd.read_csv('..\/input\/anime.csv')\ndf_rate=pd.read_csv('..\/input\/rating.csv')","71986e9f":"df_anime.head()","27018270":"df_anime.tail()","baaabe3c":"df_anime.describe()","93da8b0a":"df_anime.dtypes","2e8c7f3a":"df_anime.isnull().sum()","3dfbf1fa":"df_anime.dropna(subset=['rating','genre','type'],inplace=True)","5bdb0def":"df_anime.isnull().sum()","7ee568f8":"df_anime.dtypes","2f1a6199":"df_anime=df_anime[df_anime[\"episodes\"]!='Unknown']","fc212120":"df_anime['episodes']=df_anime['episodes'].astype('int64')","25292c59":"df_anime.head()","c2c992e5":"df_anime.type.unique()","33f28574":"df_movies=df_anime[df_anime[\"type\"]=='Movie']","b03bf00a":"df_movies.head()","6c282ae0":"df_movies.sort_values(['members','rating'],ascending=False)","b299844f":"plt.figure(figsize = (16,5))\ndf_check=df_movies.corr()\nsns.heatmap(df_check, annot=True, fmt=\"g\", cmap='viridis')\nplt.show()","59081c60":"del df_movies['episodes']","bea9fe65":"del df_movies['anime_id']","68459fc5":"del df_movies['type']","6413358f":"df_movies","f6d16ae2":"plt.figure(figsize = (16,5))\ndf_check=df_movies.corr()\nsns.heatmap(df_check, annot=True, fmt=\"g\", cmap='viridis')\nplt.show()","6f516e62":"print(df_movies['members'].mean())\nprint(df_movies['rating'].mean())","a4c10c8f":"def f(row):\n    val=0\n    if row['rating']>=9.5:\n        val=1\n    elif row['rating']>=9:\n        val=2\n    elif row['rating']>=8.5:\n        val=3\n    elif row['rating']>=8:\n        val=4\n    elif row['rating']>=7.5:\n        val=5\n    elif row['rating']>=7:\n        val=6\n    elif row['rating']>=6.5:\n        val=7\n    return val\n\ndf_movies['hexcode'] = df_movies.apply(f, axis=1)","21b3b645":"df_movies.head()","161879b1":"df_considerable_movies=df_movies[(df_movies['members']>df_movies['members'].mean()) & (df_movies['rating']>df_movies['rating'].mean())]\ndf_considerable_movies.head()","9c20587b":"colordict={1:'#30E6B1',2:'#A1F5AD',3:'#E4B06E',4:'#EA4052',5:'#42C6CF',6:'#C6D359',7:'#45B39C'}\nplt.figure(figsize=(16, 8))\nplt.scatter(df_considerable_movies['rating'],df_considerable_movies['members'],s=df_considerable_movies['rating']**2,alpha=0.8,c=df_considerable_movies['hexcode'])\nplt.xlabel('Ratings')\nplt.ylabel('Audience')\nplt.show()","13910a1c":"plt.figure(figsize=(20, 8))\nsns.lmplot('rating','members', data=df_considerable_movies, hue='hexcode',fit_reg=False,size=8)\nplt.show()","6d253a4d":"df_rate.describe()","f66d673c":"df_movies=df_anime[df_anime[\"type\"]=='Movie']\ndf_movies_rec=pd.merge(df_movies,df_rate,on='anime_id')","10df8830":"mainmean=df_movies_rec['rating_x'].mean()\nprint(mainmean)","07371d93":"df_movies_rec.head()","f8f32252":"df_movies_rec.describe()","b40a714f":"df_movies_rec.dtypes\ndf_movies_rec['rating_x']=df_movies_rec['rating_x'].astype('float64')\ndf_movies_rec['rating_y']=df_movies_rec['rating_y'].astype('float64')","1d83b2e1":"df_movies_rec.name.unique()\nprint(len(df_movies_rec))","ade20b3c":"count_node=pd.DataFrame(df_movies_rec.groupby('name')['rating_y'].mean())\ncount_node['num of ratings'] = pd.DataFrame(df_movies_rec.groupby('name')['rating_y'].count())","c846c6b3":"count_node.sort_values(['rating_y'],ascending=False)\ncount_node.head()","96a7bcfa":"count_node.reset_index(inplace=True)","1c910696":"count_node.head()","5a215a11":"count_node.describe()","340c43ac":"plt.figure(figsize=(18,5))\ncount_node['num of ratings'].hist(bins=300,color='g',alpha=0.6)\nplt.title('NUMBER OF RATING DISTRIBUTION OVER THE COUNT')\nplt.xlim(0,1600)\nplt.show()","ac4b12d5":"plt.figure(figsize=(18,5))\ncount_node['rating_y'].hist(bins=30,color='y',alpha=0.4)\nplt.title('RATING DISTRIBUTION OVER THE COUNT')\nplt.show()","e4ff59c6":"genre_sets=set()\nfor i in df_movies['genre']:\n    k=i.split(',')\n    for i in k:\n        genre_sets.add(str(i))","66cd0f2d":"plt.figure(figsize=(20,5))\nsns.jointplot(x='rating_y',y='num of ratings',data=count_node,color='#2ecc71',size=10,kind='reg')\nplt.show()","25d2882f":"df_genre_mov =pd.DataFrame(df_movies[['name','genre']])","98e2860b":"df_genre_mov.reset_index(inplace=True)\ndf_genre_mov.head()","2a62f5b9":"df_genre_mov.set_index('name',inplace=True)","b7239603":"df_main=pd.merge(df_rate,df_movies,on='anime_id')\ndf_main.head(1)","9868e4c7":"del df_main['anime_id']\ndel df_main['rating_x']\ndel df_main['genre']\ndel df_main['members']\ndel df_main['type']\ndel df_main['episodes']","3f959685":"df_main.head(1)","26cf22e3":"def rec_mov(name_):\n    rating_name_=count_node[count_node['name']==name_]\n    #print(rating_name_)\n    k_genre_list=df_genre_mov.loc[name_]['genre'].split(',')\n    for i in range(len(k_genre_list)):\n        k_genre_list[i]=k_genre_list[i].strip()\n    df_suggest=df_genre_mov[df_genre_mov.isin(k_genre_list)]\n    df_suggest.dropna(subset=['genre'],inplace=True)\n    df_suggest.reset_index(inplace=True)\n    df_joint=pd.merge(df_suggest,count_node,on='name')\n    df_joint['rating_y']=df_joint['rating_y'].astype('float64')\n    check=float(rating_name_['rating_y'])\n    df_joint_1=df_joint.copy()\n    del df_joint_1['genre']\n    del rating_name_['name']\n    del df_joint_1['index']\n   #print(df_joint_1)\n    df=df_main.pivot_table(index='user_id',columns='name',values='rating_y')\n    similar_df=df.corrwith(df[name_])\n    corr_df = pd.DataFrame(similar_df, columns=['Correlation'])\n    corr_df.dropna(inplace=True)\n    corr_df.reset_index(inplace=True)\n    corr_df=corr_df.merge(count_node,on='name')\n   #print(corr_df.head(3))\n    show_recommendation=corr_df[corr_df['num of ratings'] > 100].sort_values(by=['Correlation','num of ratings'], ascending=False).head(10)\n    del show_recommendation['Correlation']\n    del show_recommendation['num of ratings']\n    del show_recommendation['rating_y']\n    return show_recommendation.head(10)\n    ","7a6351d6":"def set_pandas_options() -> None:\n    pd.options.display.max_columns = 1000\n    pd.options.display.max_rows = 1000\n    pd.options.display.max_colwidth = 199\n    pd.options.display.width = None\n    # pd.options.display.precision = 2  # set as needed\n\nset_pandas_options()\nrec_mov('Kimi no Na wa.')","d143b038":"rec_mov('Koe no Katachi')","552594d9":"rec_mov('.hack\/\/G.U. Trilogy')","1a1dd37c":"rec_mov('Ookami Kodomo no Ame to Yuki')","12c3838b":"# Exploring Movies of Anime","2270d28b":"# Generating suggestion on mainmean rating and comparing mean"}}