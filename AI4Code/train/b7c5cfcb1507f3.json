{"cell_type":{"8de3bead":"code","b9b609f1":"code","c67aa1f2":"code","5b0a5732":"code","cc6886b1":"code","0ac4f31f":"code","273bee65":"code","5a4ddcac":"code","3801a074":"code","0bf26f56":"code","af61add7":"code","3829241f":"code","68c5afb5":"code","c4e96ec7":"code","e07f9f53":"code","7d0ef0af":"code","eef26de1":"code","58cb0ede":"code","d1e20238":"code","fa6940fb":"code","23442d7e":"code","02fe67e4":"code","3a8bdaff":"code","4034beaa":"code","b31f3a92":"code","2e99589c":"code","7eec9c10":"code","39b02eab":"code","e74a8dbe":"code","54a1c0f6":"code","863cf637":"code","23a4ced5":"code","f8b721d2":"code","24ced2ad":"code","497da11d":"code","46c22104":"code","17a70724":"code","c628c318":"code","a70932e0":"markdown","9abed9d5":"markdown","8db77b63":"markdown","84e1eb76":"markdown","d6aed3c7":"markdown","cb8794d1":"markdown","9934399e":"markdown","fbd47383":"markdown","ca25c401":"markdown","39e589ec":"markdown","78214ba0":"markdown","5a8ffc91":"markdown","4ee4e5b2":"markdown","0f729780":"markdown","48a1e878":"markdown","a8a2980b":"markdown","91709321":"markdown","3740e7ba":"markdown","fdf29795":"markdown"},"source":{"8de3bead":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b9b609f1":"# Carregar dados\ndf = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf.shape, test.shape","c67aa1f2":"# Juntar dataframes\ndf_all = df.append(test)\ndf_all.shape","5b0a5732":"# Visualizar dados\ndf_all.info()","cc6886b1":"# Aumentar n\u00famero de colunas a serem exibidas\ndf_all.info(max_cols=145)","0ac4f31f":"# Utilizar pandas para definir valores inf como na\npd.set_option('mode.use_inf_as_na', True)","273bee65":"# Analisar dados da coluna edjefa\ndf_all['edjefa'].value_counts()","5a4ddcac":"# Analisar dados da coluna edjefe\ndf_all['edjefe'].value_counts()","3801a074":"# Transformar 'yes' em 1 e 'no' em 0 nas colunas edjefa e edjefe\nmapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)","0bf26f56":"# Identificar colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","af61add7":"# Transformar 'yes' em 1 e 'no' em 0 na coluna dependency\ndf_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","3829241f":"# Identificar colunas do tipo object\ndf_all.select_dtypes('object').head()","68c5afb5":"# Visualizar utilizando comando info\ndf_all.info(max_cols=145)","c4e96ec7":"# Verificando os valores nulos\ndf_all.isnull().sum()","e07f9f53":"# Verificar os valores de aluguel (v2a1) para os chefes\/as de familia (parentesco1 = 1)\ndf_all[df_all['parentesco1'] == 1]['v2a1'].isnull().sum()","7d0ef0af":"# Alerar para -1 os valores nulos de v2a1\ndf_all['v2a1'].fillna(-1, inplace=True)","eef26de1":"# An\u00e1lise de v18q (relacao com v18q1)\ndf_all['v18q'].value_counts()","58cb0ede":"# An\u00e1lise de rez_esc (relacao com v18q1)\ndf_all['rez_esc'].value_counts()","d1e20238":"# Prencher com -1 os valores nulos de rez_esc (estrat\u00e9gia do outlier)\ndf_all['rez_esc'].fillna(-1, inplace=True)","fa6940fb":"# Verificar valores nulos de meaneduc\nprint('Porcentagem de Valores Nulos:',(df_all['meaneduc'].isnull().sum() \/ len(df_all))*100)\nprint('Quantidade de Valores Nulos:',df_all['meaneduc'].isnull().sum() )","23442d7e":"# Aferir m\u00e9dia e mediana de meaneduc\ndf_all.meaneduc.mean(), df_all.meaneduc.median()","02fe67e4":"# Preencher os valores nulos de meaneduc com o valor de 9 anos de estudos (entre m\u00e9dia e mediana), ou seja, uma tend\u00eancia geral dos dados\ndf_all['meaneduc'].fillna(9, inplace=True)","3a8bdaff":"# Verificar valores nulos de SQBmeaned\nprint('Porcentagem de Valores Nulos:',(df_all['SQBmeaned'].isnull().sum() \/ len(df_all))*100)","4034beaa":"# Preencher com -1 os valores nulos de SQBmeaned (estrat\u00e9gia do outlier)\ndf_all['SQBmeaned'].fillna(-1, inplace=True)","b31f3a92":"#Visualiza\u00e7\u00e3o dados p\u00f3s manipula\u00e7\u00e3o, explora\u00e7\u00e3o e limpeza\ndf_all.info(max_cols=145)","2e99589c":"df_all.isnull().sum().sort_values()","7eec9c10":"# Separar colunas para treinamento\nfeats = [c for c in df_all.columns if c not in ['Id', 'idhogar', 'Target']]","39b02eab":"# Separar dataframes\ntrain, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\ntrain.shape, test.shape","e74a8dbe":"# Plotar histograma da vari\u00e1vel \"Target\"\nsns.histplot(data=train, x=\"Target\", bins = 4)\nplt.show()","54a1c0f6":"# Verificar valores absolutos\ntrain['Target'].value_counts()","863cf637":"# Verificar porcentagens\ntrain['Target'].value_counts(normalize=True)","23a4ced5":"# Dividir dataset treino em X,y\nX, y = train[feats], train[['Target']]","f8b721d2":"# Importar biblioteca\nfrom imblearn.over_sampling import RandomOverSampler\n\n# Realizar over-sampling\nros = RandomOverSampler(random_state=42)\nX_ros,y_ros= ros.fit_resample(X,y)\n\n# Verificar dados\ny_ros['Target'].value_counts()","24ced2ad":"# Utilizar XGBoost\nfrom xgboost import XGBClassifier\nxgb = XGBClassifier(n_estimators=250, learning_rate=0.09, random_state=42)\n\n# Treinar\nxgb.fit(X_ros, y_ros)","497da11d":"# Verificar previs\u00f5es\ntest['Target'].value_counts(normalize=True)","46c22104":"# Prever o Target de teste usando modelo treinado\ntest['Target'] = xgb.predict(test[feats]).astype(int)","17a70724":"# Criar arquivo para submiss\u00e3o\ntest[['Id', 'Target']].to_csv('submission.csv', index=False)","c628c318":"fig=plt.figure(figsize=(15, 20))\n\n# Avaliar importancia de cada coluna\npd.Series(xgb.feature_importances_, index=feats).sort_values().plot.barh()","a70932e0":"# In\u00edcio","9abed9d5":"## Metodologia\n1. Explorar dados e realizar visualiza\u00e7\u00e3o de dados.\n2. Verificar valores ausentes e proceder com a corre\u00e7\u00e3o adequada.\n3. Executar a **feature engineering**.\n4. Dimensionar recursos num\u00e9ricos e caso necess\u00e1rio, execute **One HOT Encoding** de recursos categ\u00f3ricos.\n5. Selecionar alguns estimadores para o trabalho trabalho.\n\n\n> * XGBoost\n","8db77b63":"**Features que possuem missing values**\n* v2a1 = valor aluguel mensal\n* v18q1 = quantidade de tablets que os propriet\u00e1rios da casa possuem\n* rez_esc = anos antes da escola\n* meaneduc = m\u00e9dia ded anos de educa\u00e7\u00e3o nos adultos\n* SQBmeaned = quadrado da m\u00e9dia dos anos de educa\u00e7\u00e3o dos adultos","84e1eb76":"### Avalia\u00e7\u00e3o do modelo","d6aed3c7":"![DSL](https:\/\/miro.medium.com\/max\/2002\/0*2mgI13cKNCWByVMB)","cb8794d1":"**edjefa** e **edjefe**\n\nDicion\u00e1rio de dados define edjefa e edjefe da seguinte forma:\n\n* edjefe - years of education of female head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0\n\n* edjefe - years of education of male head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0","9934399e":"A quantidade de valores nulos na feature v18q (possui tablet), que \u00e9 bin\u00e1ria, coincide com o valor de missing values da feature quantidade de tablets. Deta forma, substu\u00edmos valores nulos por 0.","fbd47383":"### Manipula\u00e7\u00e3o, explora\u00e7\u00e3o e limpeza de dados","ca25c401":"### Fonte de dados","39e589ec":"# Aquisi\u00e7\u00e3o de dados","78214ba0":"## Costa Rican Household Poverty Level Prediction\n\nO objetivo da competi\u00e7\u00e3o \"Costa Rican Household Poverty Level Prediction\" \u00e9 desenvolver um modelo de aprendizado de m\u00e1quina que possa prever o n\u00edvel de pobreza das fam\u00edlias usando caracter\u00edsticas individuais e familiares.","5a8ffc91":"### Feature Engineering","4ee4e5b2":"A escolha para preenchimento dos valores nulos por -1 n\u00e3o foi feita ao acaso. A inten\u00e7\u00e3o \u00e9 n\u00e3o tentar excluir essa coluna, bem como n\u00e3o perder dados. Como o algoritmo usado ser\u00e1 Random Forest, o uso de -1 (outlier) ser\u00e1 para \"for\u00e7ar\" a \u00e1rvore a dispensar os valores -1.","0f729780":"# Deployment","48a1e878":"# Entendimento do neg\u00f3cio\/problema\n\nOs dados para esta competi\u00e7\u00e3o s\u00e3o fornecidos em dois arquivos: train.csv e test.csv. O conjunto de treinamento tem 9557 linhas e 143 colunas, enquanto o conjunto de teste tem 23856 linhas e 142 colunas. Cada linha representa um indiv\u00edduo e cada coluna \u00e9 um recurso, exclusivo para o indiv\u00edduo ou para a fam\u00edlia do indiv\u00edduo. O conjunto de treinamento tem uma coluna adicional, TARGET, que representa o n\u00edvel de pobreza em uma escala de 1 a 4 e \u00e9 o r\u00f3tulo da competi\u00e7\u00e3o. Um valor de 1 \u00e9 a pobreza mais extrema.\n\nEste \u00e9 um problema de aprendizado de m\u00e1quina de classifica\u00e7\u00e3o multi-classe supervisionado:\n\nSupervisionado: fornecido com os r\u00f3tulos dos dados de treinamento\nClassifica\u00e7\u00e3o multiclasse: os r\u00f3tulos s\u00e3o valores discretos com 4 classes","a8a2980b":"\u00c9 necess\u00e1rio a utiliza\u00e7\u00e3o de t\u00e9cnica para balancemaneto das classes minotit\u00e1rias.","91709321":"# Modelagem","3740e7ba":"## Objetivo\n\nO objetivo \u00e9 prever a pobreza ao n\u00edvel  familiar. Recebemos dados em n\u00edvel individual, com cada indiv\u00edduo tendo caracter\u00edsticas \u00fanicas, mas tamb\u00e9m informa\u00e7\u00f5es sobre sua fam\u00edlia. No conjunto de dados para a tarefa, teremos que realizar algumas agrega\u00e7\u00f5es dos dados individuais para cada fam\u00edlia. Al\u00e9m disso, temos que fazer uma previs\u00e3o para cada indiv\u00edduo no conjunto de teste, mas apenas os chefes de fam\u00edlia s\u00e3o usados na pontua\u00e7\u00e3o, o que significa que queremos prever a pobreza em uma fam\u00edlia.\n\n> Observa\u00e7\u00e3o importante: embora todos os membros de uma fam\u00edlia devam ter o mesmo r\u00f3tulo nos dados de treinamento, h\u00e1 erros onde os indiv\u00edduos na mesma casa t\u00eam r\u00f3tulos diferentes.\n> Nestes casos, somos orientados a usar o r\u00f3tulo do chefe de cada fam\u00edlia, que pode ser identificado pelas linhas onde parentesco1 == 1.0. discuss\u00e3o principal da competi\u00e7\u00e3o\n\nOs valores alvo representam os n\u00edveis de pobreza da seguinte forma:\n\n1. pobreza extrema\n2. pobreza moderada\n3. fam\u00edlias vulner\u00e1veis\n4. fam\u00edlias n\u00e3o vulner\u00e1veis\n\nAs explica\u00e7\u00f5es para todas as 143 colunas podem ser encontradas na documenta\u00e7\u00e3o da competi\u00e7\u00e3o, mas algumas merecem destaque:\n\n- **Id**: um identificador \u00fanico para cada indiv\u00edduo, este n\u00e3o deve ser um recurso que usamos!\n- **idhogar**: um identificador \u00fanico para cada fam\u00edlia. Esta vari\u00e1vel n\u00e3o \u00e9 um recurso, mas ser\u00e1 usada para agrupar indiv\u00edduos por domic\u00edlio, pois todos os indiv\u00edduos em um domic\u00edlio ter\u00e3o o mesmo identificador.\n- **parentesco1**: indica se essa pessoa \u00e9 o chefe da fam\u00edlia.\n- **Target**: o r\u00f3tulo, que deve ser igual para todos os membros de uma fam\u00edlia","fdf29795":"### Treinamento do modelo com XGBoost ap\u00f3s \"feature Engineering\" (oversampling)"}}