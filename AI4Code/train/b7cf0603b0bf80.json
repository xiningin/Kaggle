{"cell_type":{"70dedc1e":"code","c198b128":"code","4432c4cf":"code","f52f7cbc":"code","51721323":"code","a57809b0":"code","eea11ff2":"code","5c9f4d36":"code","59da9a55":"code","f04f9a60":"code","b3974c07":"code","c054f540":"code","840a5272":"code","2cc3fc36":"code","22259338":"code","de919d88":"code","f7a69960":"code","70eeb313":"markdown","d8c6d602":"markdown","e627c0e0":"markdown","d6dc126e":"markdown","ac8b60fa":"markdown","aabf9992":"markdown","b5aaceb4":"markdown","4a9c5e2b":"markdown","9d715e29":"markdown","88783b5e":"markdown","b429993d":"markdown"},"source":{"70dedc1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c198b128":"index_col = ['Name']\nmcu_df = pd.read_csv('\/kaggle\/input\/mcu-complete-dataset\/mcu dataset.csv', index_col=index_col)\nmcu_df.head()","4432c4cf":"mcu_df.describe()","f52f7cbc":"mcu_df.dtypes","51721323":"# Convert all of the money columns to int values.\nmoney_cols = ['Budget', 'Domestic Gross', 'Total Gross', 'Opening Gross']\nmcu_df[money_cols] = mcu_df[money_cols].apply(lambda x: x.str.strip('$').str.replace(',', '')).astype(int)","a57809b0":"# Set the width and height of the figure\nplt.figure(figsize=(14, 8))\nplt.title(\"MCU Total Gross\")\n\nphase_colors = {1:'green', 2:'red', 3:'blue'}\ncolors = mcu_df['Phase'].map(phase_colors)\n\nsns.barplot(x=mcu_df.index, y=mcu_df['Total Gross'], palette=colors)\nplt.xlabel(\"Film Title\")\nplt.xticks(rotation=70)\nplt.ylabel(\"Total Gross ($US billions)\")\nplt.tight_layout()","eea11ff2":"sns.regplot(x=mcu_df['IMDB rating'], y=mcu_df['metascore'])","5c9f4d36":"ratings_df = mcu_df[['IMDB rating', 'metascore']].reset_index()\n\n# reset metascore so they're on the same scale\nratings_df['metascore'] = ratings_df['metascore'] \/ 10.0 \nratings_df.columns = ['Film Title', 'IMDB rating', 'metascore']\n\n# Correct a few titles\nratings_df.loc[1, 'Film Title'] = 'The Incredible Hulk'\nratings_df.loc[4, 'Film Title'] = 'Captain America: The First Avenger'\nratings_df.loc[7, 'Film Title'] = 'Thor: The Dark World'\nratings_df.loc[9, 'Film Title'] = 'Guardians of the Galaxy'\nratings_df.loc[10, 'Film Title'] = 'Avengers: Age of Ultron'","59da9a55":"import matplotlib.lines as mlines\n\n# draw line\n# https:\/\/stackoverflow.com\/questions\/36470343\/how-to-draw-a-line-with-matplotlib\/36479941\ndef newline(p1, p2, color='black'):\n    ax = plt.gca()\n    l = mlines.Line2D([p1[0],p2[0]], [p1[1],p2[1]], color='red' if p1[1]-p2[1] > 0 else 'green', marker='o', markersize=6)\n    ax.add_line(l)\n    return l\n\nfig, ax = plt.subplots(1,1,figsize=(14,14), dpi= 80)\n\n# Vertical Lines\nax.vlines(x=1, ymin=5, ymax=9.35, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\nax.vlines(x=3, ymin=5, ymax=9.35, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\n\n# Line Segments and Annotation\nfor p1, p2, c in zip(ratings_df['IMDB rating'], ratings_df['metascore'], ratings_df['Film Title']):\n    newline([1,p1], [3,p2])\n    ax.text(1-0.05, p1, c + ', ' + str(round(p1, 1)), horizontalalignment='right', verticalalignment='center', fontdict={'size':10})\n    ax.text(3+0.05, p2, c + ', ' + str(round(p2, 1)), horizontalalignment='left', verticalalignment='center', fontdict={'size':10})\n\n# 'IMDb' and 'metascore' Annotations\nax.text(1-0.05, 9.25, 'IMDb rating', horizontalalignment='right', verticalalignment='center', fontdict={'size':18, 'weight':500})\nax.text(3+0.05, 9.25, 'metascore', horizontalalignment='left', verticalalignment='center', fontdict={'size':18, 'weight':500})\n\n# Decoration\nax.set_title(\"Slopechart: Comparing IMDb ratings and metascore\", fontdict={'size':22})\nax.set(xlim=(0,4), ylim=(5, 9.5))\nax.set_xticks([1,3])\nax.set_xticklabels([\"IMDb rating\", \"metascore\"])\nplt.yticks(np.arange(5, 10, 4), fontsize=12)\n\n# Lighten borders\nplt.gca().spines[\"top\"].set_alpha(.0)\nplt.gca().spines[\"bottom\"].set_alpha(.0)\nplt.gca().spines[\"right\"].set_alpha(.0)\nplt.gca().spines[\"left\"].set_alpha(.0)","f04f9a60":"plt.figure(figsize=(14, 8))\nplt.title(\"IMDb rating vs. Budget\")\n\ng = sns.regplot(x=mcu_df['Budget'], y=mcu_df['IMDB rating'])\nplt.xticks([150000000, 200000000, 250000000, 300000000, 350000000],['$150','$200','$250','$300','$350'])\nplt.xlabel(\"Budget (US millions)\")","b3974c07":"best_director = mcu_df.groupby('Director')['Total Gross'].mean().sort_values()","c054f540":"plt.figure(figsize=(14, 8))\nplt.title(\"Who are the MCU's Highest-Grossing Directors?\")\n\npal = sns.color_palette(\"Greens_d\", len(best_director))\n\nsns.barplot(x=best_director.index, y=best_director.values, palette=pal)\n\nplt.xlabel(\"Director\")\nplt.xticks(rotation=70)\nplt.ylabel(\"Average Gross ($US billions)\")\nplt.tight_layout()","840a5272":"fan_best_director = mcu_df.groupby('Director')['IMDB rating'].mean().sort_values()","2cc3fc36":"plt.figure(figsize=(14, 8))\nplt.title(\"MCU Highest-Rated Directors\")\n\npal = sns.color_palette(\"Blues_d\", len(best_director))\n\nsns.barplot(x=fan_best_director.index, y=fan_best_director.values, palette=pal)\n\nplt.xlabel(\"Director\")\nplt.xticks(rotation=70)\nplt.ylabel(\"Average IMDb Score\")\nplt.tight_layout()","22259338":"mcu_cast_df = mcu_df[['IMDB rating', 'Cast']]\nmcu_cast_df = mcu_cast_df.assign(Cast = mcu_cast_df['Cast'].str.split(' , '))\nmcu_cast_df = mcu_cast_df.explode('Cast')\nmcu_cast_df['Cast'] = mcu_cast_df['Cast'].str.strip()","de919d88":"fan_best_actor = mcu_cast_df.groupby('Cast')['IMDB rating'].mean().sort_values()","f7a69960":"plt.figure(figsize=(14, 8))\nplt.title(\"MCU Highest-Rated Actors\")\n\npal = sns.color_palette(\"Reds_d\", len(fan_best_actor))\n\nsns.barplot(x=fan_best_actor.index, y=fan_best_actor.values, palette=pal)\n\nplt.xlabel(\"Actor Name\")\nplt.xticks(rotation=70)\nplt.ylabel(\"Average IMDb Score\")\nplt.tight_layout()","70eeb313":"It's a little hard to read with data points spaced so closely that they overlap, but this does give us an idea of the ranking order of the films on both ratings scales. The biggest discrepancies are for the films Iron Man 2, Thor 2, Black Panther, and Avengers: Infinity War. I tend to agree more with the ranking of the IMDb scores, so let's use those.","d8c6d602":"Josh Brolin comes in first, and benefits a lot from being credited only in some of the top-rated MCU films. Mark Ruffalo is second, and benefits from not being in the solo Hulk films (apologies to Edward Norton). Other actors who were in the ensemble Avengers films (for example, Chadwick Boseman) would certainly have a higher average rating if they had been credited for being in those films.\n\nI hope you had as much fun as I did exploring this data set!","e627c0e0":"### Fan's Favorite Director\nLet's find out who MCU fan's favorite directors are by average IMDb score. This code is going to be nearly the same.","d6dc126e":"### Fan-favorite Cast Members\nJust for fun, let's find out who MCU fan's favorite cast member is by looking at their average IMDb scores. (This is unofficial, of course. Not every cast member is listed in every film in which they appear.)\n\nWe'll start by splitting up the `Cast` column to get a rating for each actor credited in our data set.","ac8b60fa":"### Marvel's Favorite Director\nFind the highest-grossing MCU directors (by average total gross).","aabf9992":"This is a notebook to explore the films of **Marvel's Cinematic Universe**. We have data on films in the first three phases of the MCU. The notebook looks at how the films compare in terms of highest gross and ratings (IMDb and metascore), how ratings and budget correlate, and who are the top stars and directors in the MCU.","b5aaceb4":"### Which films are the highest-grossing?\nLet's first take a look at a plot showing the total gross for each film. We'll set the bars to different colors for each MCU phase.","4a9c5e2b":"It looks like there might be a few outliers. Let's take a closer look at these two columns.","9d715e29":"Next, I'd like to see if there's any correlation between an MCU film's budget and its rating. Before we do that, let's look at the two ratings (IMDb and metascore) side-by-side to see if they agree.","88783b5e":"While there's definitely a positive relationship between a film's budget and the rating, there are also quite a few data points that are far from that trendline.","b429993d":"### Load and summarize the data"}}