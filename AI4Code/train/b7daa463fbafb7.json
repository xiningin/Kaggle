{"cell_type":{"51834856":"code","2c6e7bde":"code","51a7bf17":"code","21ed343d":"code","8d0f6569":"code","6ff3c60c":"code","04670be0":"code","7137ef0e":"code","59eae9d1":"code","1681d59a":"code","37c2dbbc":"code","2023fbd2":"code","1b92a6ca":"code","9ceb0bc5":"code","0d61c3c4":"code","724ac076":"code","72fdf7b8":"code","69eea6d6":"code","2b01d5a2":"code","51ced6e7":"code","e42aeebf":"code","d0c03dd9":"code","ef5da5b3":"code","a33e7d22":"code","419b8d38":"code","ebc68fda":"code","65e77c98":"code","e1415814":"code","6681fa92":"code","5db81aaa":"code","927fca22":"code","937c51e5":"code","cf0372c7":"code","673ddd8a":"code","17e7b149":"code","7a033da5":"code","19f96f4b":"code","6145daee":"code","945f116c":"code","092cef51":"code","d9fd06dc":"code","e1405e94":"code","1d3ed2ab":"code","7a9ec327":"code","a5e3edde":"code","a60a1efa":"code","9c1a2ebc":"code","380990c2":"code","26a24e97":"code","00a6e99b":"code","08e4772d":"code","0470f228":"markdown","61bd7360":"markdown","1b426bad":"markdown","c6d1c8c6":"markdown"},"source":{"51834856":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2c6e7bde":"df_products = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\ndf_districts = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")","51a7bf17":"df_products.head()","21ed343d":"df_districts.head()","8d0f6569":"df_engagements = pd.DataFrame()\nfor did in df_districts[\"district_id\"]:\n    temp_df = pd.read_csv(f'\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/{did}.csv')\n    temp_df[\"district_id\"] = did\n    df_engagements = pd.concat([df_engagements, temp_df])\ndf_engagements.head()","6ff3c60c":"df_engagements.info()","04670be0":"df_engagements[df_engagements[\"time\"] == \"2020-01-01\"][\"time\"]","7137ef0e":"df_engagements[\"time\"].value_counts()","59eae9d1":"df_engagements[\"engagement_index\"].value_counts()","1681d59a":"df_engagements[\"lp_id\"].value_counts()","37c2dbbc":"df_engagements[df_engagements[\"lp_id\"] == 95731].value_counts()","2023fbd2":"df_engagements","1b92a6ca":"df_products[\"Product Name\"].value_counts()","9ceb0bc5":"df_products[\"Primary Essential Function\"].value_counts()","0d61c3c4":"df_products[\"Sector(s)\"].value_counts()","724ac076":"temp = df_engagements.groupby([\"lp_id\",\"district_id\",\"time\"]).sum().reset_index()\ntemp.head()","72fdf7b8":"temp[\"lp_id\"] = temp[\"lp_id\"].astype(\"int\")\ntemp.head()","69eea6d6":"year = []\nmonth = []\nday = []\nfor t in temp[\"time\"]:\n    z = t.split(\"-\")\n    year.append(z[0])\n    month.append(z[1])\n    day.append(z[2])\ntemp[\"year\"] = year\ntemp[\"month\"] = month\ntemp[\"day\"] = day\ntemp.head()","2b01d5a2":"df_general_pic = temp[[\"month\", \"engagement_index\", \"pct_access\"]].groupby([\"month\"]).sum().reset_index()\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nss = MinMaxScaler()\ndf_general_pic[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_general_pic[\"engagement_index\"], axis=1))\ndf_general_pic[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_general_pic[\"pct_access\"], axis=1))\n\ndf_general_pic.head()","51ced6e7":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# plot lines\nplt.plot(df_general_pic[\"month\"], df_general_pic[\"engagement_index\"], label=\"Engagement\")\nplt.plot(df_general_pic[\"month\"], df_general_pic[\"pct_access\"], label=\"Access\")\nplt.legend()\nplt.show()","e42aeebf":"df_general_pic_each_month = temp[[\"month\", \"day\", \"engagement_index\", \"pct_access\"]].groupby([\"month\", \"day\"]).sum().reset_index()\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nss = MinMaxScaler()\ndf_general_pic_each_month[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_general_pic_each_month[\"engagement_index\"], axis=1))\ndf_general_pic_each_month[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_general_pic_each_month[\"pct_access\"], axis=1))\n\ndf_general_pic_each_month.head()","d0c03dd9":"for mo in df_general_pic_each_month[\"month\"].unique():\n    df_z = df_general_pic_each_month[df_general_pic_each_month[\"month\"] == mo]\n    # plot lines\n    plt.figure(figsize=(10,5))\n    plt.plot(df_z[\"day\"], df_z[\"engagement_index\"], label=f\"Engagement-{mo}\")\n    plt.plot(df_z[\"day\"], df_z[\"pct_access\"], label=f\"Access-{mo}\")\n    plt.title(f\"Pic-{mo}\")\n    plt.legend()\n    plt.show()","ef5da5b3":"df_engagement_edutech = temp[[\"lp_id\", \"pct_access\", \"engagement_index\"]].groupby(\"lp_id\").sum().reset_index()\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nss = MinMaxScaler()\ndf_engagement_edutech[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_engagement_edutech[\"engagement_index\"], axis=1))\ndf_engagement_edutech[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_engagement_edutech[\"pct_access\"], axis=1))\n\ndf_engagement_edutech.head()","a33e7d22":"df_engagement_edutech[\"lp_id\"].unique()","419b8d38":"df_engagement_edutech[\"engagement_index\"].min(), df_engagement_edutech[\"engagement_index\"].max()","ebc68fda":"import seaborn as sns\n\nplt.figure(figsize=(20,5))\nsns.scatterplot(df_engagement_edutech[\"lp_id\"], df_engagement_edutech[\"engagement_index\"])\nplt.show()","65e77c98":"top10_edutech_eg = df_engagement_edutech[(df_engagement_edutech[\"engagement_index\"] > 0.1) & (df_engagement_edutech[\"engagement_index\"] <= 1)]\ntop10_edutech_eg","e1415814":"top10_edutech_eg_prod = pd.merge(top10_edutech_eg, df_products, left_on=\"lp_id\", right_on=\"LP ID\")\ntop10_edutech_eg_prod.sort_values(by=\"engagement_index\", ascending=False)","6681fa92":"import seaborn as sns\n\nplt.figure(figsize=(20,5))\nsns.scatterplot(df_engagement_edutech[\"lp_id\"], df_engagement_edutech[\"pct_access\"])\nplt.show()","5db81aaa":"top10_edutech_ac = df_engagement_edutech[(df_engagement_edutech[\"pct_access\"] > 0.1) & (df_engagement_edutech[\"pct_access\"] <= 1)]\ntop10_edutech_ac","927fca22":"top10_edutech_ac_prod = pd.merge(top10_edutech_ac, df_products, left_on=\"lp_id\", right_on=\"LP ID\")\ntop10_edutech_ac_prod.sort_values(by=\"pct_access\", ascending=False)","937c51e5":"df_products_engagements = pd.merge(left=df_products, right=df_engagements, left_on='LP ID', right_on='lp_id')\ndf_products_engagements.head()","cf0372c7":"df_sector_engagements = df_products_engagements[[\"Sector(s)\", \"pct_access\", \"engagement_index\"]]\ndf_sector_engagements = df_sector_engagements.groupby(['Sector(s)']).sum().reset_index()\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nss = MinMaxScaler()\ndf_sector_engagements[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_sector_engagements[\"engagement_index\"], axis=1))\ndf_sector_engagements[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_sector_engagements[\"pct_access\"], axis=1))\n\ndf_sector_engagements.head()","673ddd8a":"plt.figure(figsize=(15,5))\nplt.bar(df_sector_engagements[\"Sector(s)\"], df_sector_engagements[\"pct_access\"], color='r')\nplt.bar(df_sector_engagements[\"Sector(s)\"], df_sector_engagements[\"engagement_index\"], bottom=df_sector_engagements[\"pct_access\"], color='b')\nplt.show()","17e7b149":"df_ess_engagements = df_products_engagements[[\"Primary Essential Function\", \"pct_access\", \"engagement_index\"]]\ndf_ess_engagements = df_ess_engagements.groupby(['Primary Essential Function']).sum().reset_index()\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nss = MinMaxScaler()\ndf_ess_engagements[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_ess_engagements[\"engagement_index\"], axis=1))\ndf_ess_engagements[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_ess_engagements[\"pct_access\"], axis=1))\n\ndf_ess_engagements.head()","7a033da5":"plt.figure(figsize=(20,5))\nplt.bar(df_ess_engagements[\"Primary Essential Function\"], df_ess_engagements[\"pct_access\"], color='r')\nplt.bar(df_ess_engagements[\"Primary Essential Function\"], df_ess_engagements[\"engagement_index\"], bottom=df_ess_engagements[\"pct_access\"], color='b')\nplt.xticks(rotation=90)\nplt.show()","19f96f4b":"temp.head()","6145daee":"df_districts.head()","945f116c":"df_culture_engagements = pd.merge(temp[[\"district_id\", \"pct_access\", \"engagement_index\"]], df_districts[[\"district_id\", \"pct_black\/hispanic\", \"pct_free\/reduced\", \"pp_total_raw\"]], on=(\"district_id\"))\ndf_culture_engagements","092cef51":"black_eg = df_culture_engagements[[\"pct_black\/hispanic\", \"pct_access\", \"engagement_index\"]].groupby(\"pct_black\/hispanic\").sum().reset_index()\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nss = MinMaxScaler()\nblack_eg[\"engagement_index\"] = ss.fit_transform(np.expand_dims(black_eg[\"engagement_index\"], axis=1))\nblack_eg[\"pct_access\"] = ss.fit_transform(np.expand_dims(black_eg[\"pct_access\"], axis=1))\n\nblack_eg.head()","d9fd06dc":"plt.figure(figsize=(15,5))\nplt.bar(black_eg[\"pct_black\/hispanic\"], black_eg[\"pct_access\"], color='r')\nplt.bar(black_eg[\"pct_black\/hispanic\"], black_eg[\"engagement_index\"], bottom=black_eg[\"pct_access\"], color='b')\nplt.show()","e1405e94":"free_eg = df_culture_engagements[[\"pct_free\/reduced\", \"pct_access\", \"engagement_index\"]].groupby(\"pct_free\/reduced\").sum().reset_index()\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nss = MinMaxScaler()\nfree_eg[\"engagement_index\"] = ss.fit_transform(np.expand_dims(free_eg[\"engagement_index\"], axis=1))\nfree_eg[\"pct_access\"] = ss.fit_transform(np.expand_dims(free_eg[\"pct_access\"], axis=1))\n\nfree_eg.head()","1d3ed2ab":"plt.figure(figsize=(15,5))\nplt.bar(free_eg[\"pct_free\/reduced\"], free_eg[\"pct_access\"], color='r')\nplt.bar(free_eg[\"pct_free\/reduced\"], free_eg[\"engagement_index\"], bottom=free_eg[\"pct_access\"], color='b')\nplt.show()","7a9ec327":"pp_total_raw = df_culture_engagements[[\"pp_total_raw\", \"pct_access\", \"engagement_index\"]].groupby(\"pp_total_raw\").sum().reset_index()\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nss = MinMaxScaler()\npp_total_raw[\"engagement_index\"] = ss.fit_transform(np.expand_dims(pp_total_raw[\"engagement_index\"], axis=1))\npp_total_raw[\"pct_access\"] = ss.fit_transform(np.expand_dims(pp_total_raw[\"pct_access\"], axis=1))\n\npp_total_raw.head()","a5e3edde":"plt.figure(figsize=(15,5))\nplt.bar(pp_total_raw[\"pp_total_raw\"], pp_total_raw[\"pct_access\"], color='r')\nplt.bar(pp_total_raw[\"pp_total_raw\"], pp_total_raw[\"engagement_index\"], bottom=pp_total_raw[\"pct_access\"], color='b')\nplt.xticks(rotation=45)\nplt.show()","a60a1efa":"df_engagement_district = pd.merge(temp, df_districts[[\"district_id\", \"state\", \"locale\"]], on=[\"district_id\"])\ndf_engagement_district = df_engagement_district.groupby([\"state\",\"locale\",\"time\"]).sum().reset_index()\ndf_engagement_district.head()","9c1a2ebc":"df_engagement_district.head(20)","380990c2":"df_engagement_district_sub = df_engagement_district[[\"state\", \"pct_access\", \"engagement_index\"]].groupby([\"state\"]).sum().reset_index()\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nss = MinMaxScaler()\ndf_engagement_district_sub[\"engagement_index\"] = ss.fit_transform(np.expand_dims(df_engagement_district_sub[\"engagement_index\"], axis=1))\ndf_engagement_district_sub[\"pct_access\"] = ss.fit_transform(np.expand_dims(df_engagement_district_sub[\"pct_access\"], axis=1))\n\ndf_engagement_district_sub.head()","26a24e97":"import seaborn as sns\n\nplt.figure(figsize=(20,5))\nsns.barplot(df_engagement_district_sub[\"engagement_index\"], df_engagement_district_sub[\"state\"])\nplt.show()","00a6e99b":"import seaborn as sns\n\nplt.figure(figsize=(20,5))\nsns.barplot(df_engagement_district_sub[\"pct_access\"], df_engagement_district_sub[\"state\"])\nplt.show()","08e4772d":"import seaborn as sns\n\nplt.figure(figsize=(20,5))\nsns.scatterplot(df_engagement_district[\"district_id\"], df_engagement_district[\"engagement_index\"])\nplt.show()","0470f228":"## Products df\n* LP ID = Product Name","61bd7360":"# Q4: Engagement with Different Districts","1b426bad":"# Q1 & Q2: Digital Conn & Engagement in 2020 and the Trends for Future","c6d1c8c6":"# Q3: Engagement with Different EduTech"}}