{"cell_type":{"bb4b16ac":"code","0e62c69a":"code","d269e124":"code","7b5ba7c8":"code","da8a5e7b":"code","feca096f":"code","b9ce649a":"code","5b6273e6":"code","1e7bd4fb":"code","1edae81a":"code","931487b1":"code","bbedbee1":"code","ae830b25":"code","300deed3":"code","255a8688":"code","20ae662a":"code","a284bba6":"code","9229fad1":"code","f17f819b":"code","ef9b4ebf":"code","1ff29cfc":"code","5c13f953":"code","7ca403e6":"code","6453053f":"code","ee88f9e1":"code","952c91bf":"code","e0826ea9":"code","ac71f743":"code","12981770":"code","27f7dcce":"code","1f02fdf1":"code","132741d0":"code","f5e1ca88":"markdown","d0605926":"markdown","3bc1eac4":"markdown","21401de6":"markdown","5ad12a32":"markdown","ed7607b5":"markdown","348a2322":"markdown","b02c4e5a":"markdown","e2d5e885":"markdown","5fc20536":"markdown","6211e983":"markdown","265e7f08":"markdown","8d1d4453":"markdown","7d353226":"markdown","8b72e955":"markdown","0bf78f43":"markdown","2a7d7c42":"markdown","b71eccf7":"markdown","77eefdd3":"markdown","a4da6e00":"markdown","2f570d2f":"markdown","a9b99ea1":"markdown","e3e07d46":"markdown","673dde3b":"markdown","14c81060":"markdown","c85bb9e8":"markdown","d82da946":"markdown","220ed0f3":"markdown","19e8697f":"markdown","118ee2ec":"markdown"},"source":{"bb4b16ac":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","0e62c69a":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nsb.set()\nimport warnings\nwarnings.filterwarnings('ignore')","d269e124":"data = pd.read_csv('..\/input\/fifa19\/data.csv')\nprint(\"Data shape =\",data.shape)","7b5ba7c8":"data.head()","da8a5e7b":"def country(x):\n    return data[data['Nationality'] == x][['Name','Overall','Potential','Position']]\n\n\n# let's check the Indian Players \ncountry('Portugal')","feca096f":"def club(x):\n    return data[data['Club'] == x][['Name','Jersey Number','Position','Overall','Nationality','Age','Wage',\n                                    'Value','Contract Valid Until']]\n\nclub('Manchester United')","b9ce649a":"x = club('Manchester United')\nx.shape","5b6273e6":"data.describe","1e7bd4fb":"data['ShortPassing'].fillna(data['ShortPassing'].mean(), inplace = True)\ndata['Volleys'].fillna(data['Volleys'].mean(), inplace = True)\ndata['Dribbling'].fillna(data['Dribbling'].mean(), inplace = True)\ndata['Curve'].fillna(data['Curve'].mean(), inplace = True)\ndata['FKAccuracy'].fillna(data['FKAccuracy'], inplace = True)\ndata['LongPassing'].fillna(data['LongPassing'].mean(), inplace = True)\ndata['BallControl'].fillna(data['BallControl'].mean(), inplace = True)\ndata['HeadingAccuracy'].fillna(data['HeadingAccuracy'].mean(), inplace = True)\ndata['Finishing'].fillna(data['Finishing'].mean(), inplace = True)\ndata['Crossing'].fillna(data['Crossing'].mean(), inplace = True)\ndata['Weight'].fillna('200lbs', inplace = True)\ndata['Contract Valid Until'].fillna(2019, inplace = True)\ndata['Height'].fillna(\"5'11\", inplace = True)\ndata['Loaned From'].fillna('None', inplace = True)\ndata['Joined'].fillna('Jul 1, 2018', inplace = True)\ndata['Jersey Number'].fillna(8, inplace = True)\ndata['Body Type'].fillna('Normal', inplace = True)\ndata['Position'].fillna('ST', inplace = True)\ndata['Club'].fillna('No Club', inplace = True)\ndata['Work Rate'].fillna('Medium\/ Medium', inplace = True)\ndata['Skill Moves'].fillna(data['Skill Moves'].median(), inplace = True)\ndata['Weak Foot'].fillna(3, inplace = True)\ndata['Preferred Foot'].fillna('Right', inplace = True)\ndata['International Reputation'].fillna(1, inplace = True)\ndata['Wage'].fillna('\u20ac200K', inplace = True)\ndata.fillna(0, inplace = True)","1edae81a":"def defending(data):\n    return int(round((data[['Marking', 'StandingTackle', \n                               'SlidingTackle']].mean()).mean()))\n\ndef general(data):\n    return int(round((data[['HeadingAccuracy', 'Dribbling', 'Curve', \n                               'BallControl']].mean()).mean()))\n\ndef mental(data):\n    return int(round((data[['Aggression', 'Interceptions', 'Positioning', \n                               'Vision','Composure']].mean()).mean()))\n\ndef passing(data):\n    return int(round((data[['Crossing', 'ShortPassing', \n                               'LongPassing']].mean()).mean()))\n\ndef mobility(data):\n    return int(round((data[['Acceleration', 'SprintSpeed', \n                               'Agility','Reactions']].mean()).mean()))\ndef power(data):\n    return int(round((data[['Balance', 'Jumping', 'Stamina', \n                               'Strength']].mean()).mean()))\n\ndef rating(data):\n    return int(round((data[['Potential', 'Overall']].mean()).mean()))\n\ndef shooting(data):\n    return int(round((data[['Finishing', 'Volleys', 'FKAccuracy', \n                               'ShotPower','LongShots', 'Penalties']].mean()).mean()))","931487b1":"data.rename(columns={'Club Logo':'Club_Logo'}, inplace=True)\n\n# adding these categories to the data\n\ndata['Defending'] = data.apply(defending, axis = 1)\ndata['General'] = data.apply(general, axis = 1)\ndata['Mental'] = data.apply(mental, axis = 1)\ndata['Passing'] = data.apply(passing, axis = 1)\ndata['Mobility'] = data.apply(mobility, axis = 1)\ndata['Power'] = data.apply(power, axis = 1)\ndata['Rating'] = data.apply(rating, axis = 1)\ndata['Shooting'] = data.apply(shooting, axis = 1)","bbedbee1":"players = data[['Name','Defending','General','Mental','Passing',\n                'Mobility','Power','Rating','Shooting','Flag','Age',\n                'Nationality', 'Photo', 'Club_Logo', 'Club']]\n\nplayers.head()","ae830b25":"plt.rcParams['figure.figsize'] = (10, 5)\nsb.countplot(data['Preferred Foot'], palette = 'pastel')\nplt.title('Most Preferred Foot of the Players', fontsize = 20)\nplt.show()","300deed3":"labels = ['1', '2', '3', '4', '5']\nsizes = data['International Reputation'].value_counts()\ncolors = plt.cm.copper(np.linspace(0, 1, 5))\nexplode = [0.1, 0.1, 0.2, 0.5, 0.9]\n\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(sizes, labels = labels, colors = colors, explode = explode, shadow = True)\nplt.title('International Repuatation for the Football Players', fontsize = 20)\nplt.legend()\nplt.show()","255a8688":"plt.figure(figsize = (18, 8))\nplt.style.use('fivethirtyeight')\nax = sb.countplot('Position', data = data, palette = \"Set2\")\nax.set_xlabel(xlabel = 'Different Positions in Football', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of Players', fontsize = 16)\nax.set_title(label = 'Comparison of Positions and Players', fontsize = 20)\nplt.show()","20ae662a":"def extract_value_from(value):\n  out = value.replace('lbs', '')\n  return float(out)\n\n# applying the function to weight column\n#data['value'] = data['value'].apply(lambda x: extract_value_from(x))\ndata['Weight'] = data['Weight'].apply(lambda x : extract_value_from(x))\n\ndata['Weight'].head()","a284bba6":"def extract_value_from(Value):\n    out = Value.replace('\u20ac', '')\n    if 'M' in out:\n        out = float(out.replace('M', ''))*1000000\n    elif 'K' in Value:\n        out = float(out.replace('K', ''))*1000\n    return float(out)","9229fad1":"data['Value'] = data['Value'].apply(lambda x: extract_value_from(x))\ndata['Wage'] = data['Wage'].apply(lambda x: extract_value_from(x))\n\ndata['Wage'].head()","f17f819b":"plt.rcParams['figure.figsize'] = (15, 5)\nsb.distplot(data['Wage'], color = 'red')\nplt.xlabel('Wage Range for Players', fontsize = 16)\nplt.ylabel('Count of the Players', fontsize = 16)\nplt.title('Distribution of Wages of Players', fontsize = 20)\nplt.xticks(rotation = 60)\nplt.show()","ef9b4ebf":"plt.figure(figsize = (10, 8))\nax = sb.countplot(x = 'Skill Moves', data = data, palette = 'pastel')\nax.set_title(label = 'Count of players on Basis of their skill moves', fontsize = 20)\nax.set_xlabel(xlabel = 'Number of Skill Moves', fontsize = 16)\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nplt.show()","1ff29cfc":"plt.figure(figsize = (13, 8))\nax = sb.countplot(x = 'Height', data = data, palette = 'dark')\nax.set_title(label = 'Count of players on Basis of Height', fontsize = 20)\nax.set_xlabel(xlabel = 'Height in Foot per inch', fontsize = 16)\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nplt.show()","5c13f953":"plt.figure(figsize = (20, 5))\nsb.distplot(data['Weight'], color = 'blue')\nplt.title('Different Weights of the Players Participating in FIFA 2019', fontsize = 20)\nplt.xlabel('Heights associated with the players', fontsize = 16)\nplt.ylabel('count of Players', fontsize = 16)\nplt.show()","7ca403e6":"plt.figure(figsize = (15, 7))\n\nsb.countplot(x = 'Work Rate', data = data, palette = 'hls')\nplt.title('Different work rates of the Players Participating in the FIFA 2019', fontsize = 20)\nplt.xlabel('Work rates associated with the players', fontsize = 16)\nplt.ylabel('count of Players', fontsize = 16)\nplt.show()","6453053f":"plt.style.use('dark_background')\nx = data.Special\nplt.figure(figsize = (12, 8))\nplt.style.use('tableau-colorblind10')\n\nax = sb.distplot(x, bins = 58, kde = False, color = 'yellow')\nax.set_xlabel(xlabel = 'Special score range', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of the Players',fontsize = 16)\nax.set_title(label = 'Histogram for the Speciality Scores of the Players', fontsize = 20)\nplt.show()","ee88f9e1":"x = data.Potential\nplt.figure(figsize=(12,8))\nplt.style.use('seaborn-paper')\n\nax = sb.distplot(x, bins = 58, kde = False, color = 'pink')\nax.set_xlabel(xlabel = \"Player\\'s Potential Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of players Potential Scores', fontsize = 20)\nplt.show()\n","952c91bf":"plt.style.use('ggplot')\n\ndata['Nationality'].value_counts().head(80).plot.bar(color = 'orange', figsize = (20, 7))\nplt.title('Different Nations Participating in FIFA 2019', fontsize = 30, fontweight = 20)\nplt.xlabel('Name of The Country')\nplt.ylabel('count')\nplt.show()","e0826ea9":"data['Nationality'].value_counts().head(10)","ac71f743":"some_countries = ('England', 'Germany', 'Spain', 'Argentina', 'France', 'Brazil', 'Italy', 'Columbia')\ndata_countries = data.loc[data['Nationality'].isin(some_countries) & data['Weight']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sb.violinplot(x = data_countries['Nationality'], y = data_countries['Weight'], palette = 'Reds')\nax.set_xlabel(xlabel = 'Countries', fontsize = 9)\nax.set_ylabel(ylabel = 'Weight in lbs', fontsize = 9)\nax.set_title(label = 'Distribution of Weight of players from different countries', fontsize = 20)\nplt.show()","12981770":"data['Club'].value_counts().head(10)","27f7dcce":"some_clubs = ('CD Legan\u00e9s', 'Southampton', 'RC Celta', 'Empoli', 'Fortuna D\u00fcsseldorf', 'Manchestar City',\n             'Tottenham Hotspur', 'FC Barcelona', 'Valencia CF', 'Chelsea', 'Real Madrid')\n\ndata_clubs = data.loc[data['Club'].isin(some_clubs) & data['Overall']]\n\nplt.rcParams['figure.figsize'] = (15, 8)\nax = sb.boxplot(x = data_clubs['Club'], y = data_clubs['Overall'], palette = 'inferno')\nax.set_xlabel(xlabel = 'Some Popular Clubs', fontsize = 9)\nax.set_ylabel(ylabel = 'Overall Score', fontsize = 9)\nax.set_title(label = 'Distribution of Overall Score in Different popular Clubs', fontsize = 20)\nplt.xticks(rotation = 60)\nplt.show()","1f02fdf1":"some_clubs = ('CD Legan\u00e9s', 'Southampton', 'RC Celta', 'Empoli', 'Fortuna D\u00fcsseldorf', 'Manchestar City',\n             'Tottenham Hotspur', 'FC Barcelona', 'Valencia CF', 'Chelsea', 'Real Madrid')\n\ndata_club = data.loc[data['Club'].isin(some_clubs) & data['Wage']]\n\nplt.rcParams['figure.figsize'] = (16, 8)\nax = sb.boxplot(x = 'Club', y = 'Wage', data = data_club, palette = 'gist_earth_r')\nax.set_xlabel(xlabel = 'Names of some popular Clubs', fontsize = 10)\nax.set_ylabel(ylabel = 'Distribution', fontsize = 10)\nax.set_title(label = 'Disstribution of Wages in some Popular Clubs', fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","132741d0":"# ballcontrol vs dribbing\n\nsb.lmplot(x = 'BallControl', y = 'Dribbling', data = data, col = 'Preferred Foot')\nplt.show()","f5e1ca88":"**Countries with Most Players**\n\nPicking up the countries with highest number of players to compare their overall scores to get the best players","d0605926":"**Every Nations\u2019 Player and their Weights**\n\nHere we will be taking the weights with respect to their countries and representing using violinplot","3bc1eac4":"**Plotting a pie chart to represent share of international reputation**","21401de6":"Getting all the neccessary changes made in the names of the columns displayed","5ad12a32":"**Gaining the insight on Height of Players**","ed7607b5":"**Comparing the performance of left-footed and right-footed footballers**\n\nfinally now we will be comparing the left footed and right footed players using a scatters plot","348a2322":"**Renaming the columns**\n\nwe will be adding some new names to the columns and manupulating them","b02c4e5a":"**To show Different nations participating in the FIFA 2019**","e2d5e885":"**Finding the the popular clubs around the globe**\n\nhere we will be getting the popular football clubs and no. of players in the particular club","5fc20536":"**Now we will print the only the Portuguese football players present in the data set**","6211e983":"**Now we will be Comparing the player's Wages**","265e7f08":"**Gaining the insights for skill Moves of Players during the play**","8d1d4453":"**To show Different Work rate of the players participating in the FIFA 2019**","7d353226":"**Defining a function for cleaning the Weight data**","8b72e955":"**So,from the FIFA data set we were able to clean,analyze the best players,countries participating in the fifa,distribution of players over their nationalities,players wages, weights, position of the players, potentiality of the players,height of the players, speciality of the players,popular Clubs,no. of players in each club and their wages,skilled moves of the players and their work rate,total right and left foot players and their performances using data visualization.**","0bf78f43":"Using pandas we will import the fifa data set and get the no. of columns and rows present in the data set.","2a7d7c42":"**To show Different body weight of the players participating in the FIFA 2019**","b71eccf7":"**To show Different Speciality Score of the players participating in the FIFA 2019**","77eefdd3":"**Describing the data**\n\nTo get a better picture we will be exploring the data set","a4da6e00":"**FIFA ANALYSIS**\n\nIn this project we will do some analysis on the matches and records of FIFA with Python and data visualization.","2f570d2f":"**Distribution of Wages in some Popular clubs**\n\nhere we will be gaining some insights on the wages paid to the popular club players using box plot","a9b99ea1":"**Applying the function to the wage column**","e3e07d46":"**To show Different potential scores of the players participating in the FIFA 2019**","673dde3b":"**Data Visualization**\n\nComparison of preferred foot over the different players","14c81060":"**Filling the missing value for the continuous variables for proper data visualization** Here we are prioritizing the necessary colums needed and we are filling the null values to make the data set better","c85bb9e8":"To check the first five rows of the the data set we will use the below function","d82da946":"**Different positions acquired by the players**","220ed0f3":"**Here in the following code we will be analyzing Club Data(Manchester United)**","19e8697f":"Now we display the shape of the Manchester united club","118ee2ec":"**First we will import the necessary libaries**"}}