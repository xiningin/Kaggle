{"cell_type":{"c66a0dce":"code","42b43499":"code","f399c786":"code","e0fc219d":"code","a952ac13":"code","9891dc50":"code","e5635f9e":"code","4c43a84f":"code","2702c7d6":"code","19d4843e":"code","13390c1e":"code","a31ed278":"code","aff03853":"code","b18556e7":"code","e3f9ce26":"code","5cef1b3f":"code","f7032aa8":"code","7d07fc1c":"code","becdb462":"code","debdc644":"code","d9b74bb1":"code","1ec669f6":"code","bf696eca":"code","fcd49c48":"code","253cf91b":"code","c44c95b4":"code","b3cb248b":"code","8e829314":"code","3608c0b1":"code","96611626":"code","534e4d50":"code","ed3c9839":"code","f261ff41":"code","651a901c":"markdown","9689704f":"markdown","1c8231ca":"markdown","1ada6a6d":"markdown","e9299782":"markdown","35ed2327":"markdown","5ef2c7ca":"markdown","abfca267":"markdown","fd50a5d2":"markdown","58cec3c9":"markdown","a0b14701":"markdown","500935c4":"markdown","02d783cc":"markdown","afff289a":"markdown","54ceb173":"markdown","367b28aa":"markdown","9d2dbc1c":"markdown","0b70b674":"markdown","975b57a5":"markdown","52bf741e":"markdown"},"source":{"c66a0dce":"# math operations\nfrom numpy import inf\n\n# time operations\nfrom datetime import timedelta\n\n# for numerical analyiss\nimport numpy as np\n\n# to store and process data in dataframe\nimport pandas as pd\n\n# basic visualization package\nimport matplotlib.pyplot as plt\n\n# advanced ploting\nimport seaborn as sns\n\n# interactive visualization\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n\n# import plotly.figure_factory as ff\n# from plotly.subplots import make_subplots\n\n# for offline ploting\nfrom plotly.offline import plot, iplot, init_notebook_mode\n\ninit_notebook_mode(connected=True)\n\n# hide warnings\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\n\n# color pallette\ncnf, dth, rec, act = \"#393e46\", \"#ff2e63\", \"#21bf73\", \"#fe9801\"\n\n!ls ..\/input\/corona-virus-report","42b43499":"country_wise = pd.read_csv('..\/input\/corona-virus-report\/country_wise_latest.csv')\n# Replace missing values '' with NAN and then 0\ncountry_wise = country_wise.replace('', np.nan).fillna(0)\n\n# Deep dive into the DataFrame\ncountry_wise.info()\ncountry_wise.head(10)","f399c786":"# Grouped by day, country\n# =======================\n\nfull_grouped = pd.read_csv('..\/input\/corona-virus-report\/full_grouped.csv')\n# full_grouped = pd.read_csv(\"data\/full_grouped.csv\")\nfull_grouped.info()\nfull_grouped.head(10)\n\n# Convert Date from Dtype 'Object' (or String) to Dtype 'Datetime'\nfull_grouped[\"Date\"] = pd.to_datetime(full_grouped[\"Date\"])\n\n#Convert US to United States\nfull_grouped.replace(to_replace='US',value='United States',inplace=True)\n\nfull_grouped.info()","e0fc219d":"# Day wise\n# ========\n\nday_wise = pd.read_csv('..\/input\/corona-virus-report\/day_wise.csv')\n# day_wise = pd.read_csv(\"data\/day_wise.csv\")\nday_wise[\"Date\"] = pd.to_datetime(day_wise[\"Date\"])\nday_wise.info()\nday_wise.head(10)","a952ac13":"# Worldometer data\n# ================\n\nworldometer_data = pd.read_csv('..\/input\/corona-virus-report\/worldometer_data.csv')\n# worldometer_data = pd.read_csv('data\/worldometer_data.csv')\n\n# Replace missing values '' with NAN and then 0\n# What are the alternatives? Drop or impute. Do they make sense in this context?\nworldometer_data = worldometer_data.replace('', np.nan).fillna(0)\nworldometer_data['Case Positivity'] = round(worldometer_data['TotalCases']\/worldometer_data['TotalTests'],5)\nworldometer_data['Case Fatality'] = round(worldometer_data['TotalDeaths']\/worldometer_data['TotalCases'],5)\n\n# Case Positivity is infinity when there is zero TotalTests due to division by zero\nworldometer_data[worldometer_data['Case Positivity'] == inf] = 0\n\n# Qcut is quantile cut. Here we specify three equally sized bins and label them low, medium, and high, respectively.\nworldometer_data ['Case Positivity Bin']= pd.qcut(worldometer_data['Case Positivity'], q=3, labels=['low', 'medium', 'high'])\n\n# Population Structure\nworldometer_pop_struc = pd.read_csv('..\/input\/covid19-worldometer-snapshots-since-april-18\/population_structure_by_age_per_contry.csv')\n# worldometer_pop_struc = pd.read_csv('data\/population_structure_by_age_per_contry.csv')\n\n# Replace missing values with zeros\nworldometer_pop_struc = worldometer_pop_struc.fillna(0)\n#worldometer_pop_struc.info()\n\n# Merge worldometer_data with worldometer_pop_struc\n# Inner means keep only common key values in both datasets\nworldometer_data = worldometer_data.merge(worldometer_pop_struc,how='inner',left_on='Country\/Region', right_on='Country')\n\n# Keep observations where column 'Country\/Region' is not 0\nworldometer_data = worldometer_data[worldometer_data['Country\/Region'] != 0]\n\n#change UK to United Kingdom\nworldometer_data.replace(to_replace='UK', value='United Kingdom', inplace=True)\nworldometer_data.replace(to_replace='USA', value='United States', inplace=True)\n\n# Inspect worldometer_data's metadata\nworldometer_data.info()\n\n# Inspect Data\n# worldometer_data.info()\n# worldometer_data.tail(20)\n# worldometer_data['Case Positivity'].describe()","9891dc50":"#plotting the active cases, death and recovered over time in Country\ndef plot_case(country):\n    df = full_grouped[full_grouped['Country\/Region']== country]\n    temp = df.groupby(\"Date\")[\"Recovered\", \"Deaths\", \"Active\"].sum().reset_index()\n    temp = temp.melt(\n        id_vars=\"Date\",\n        value_vars=[\"Recovered\", \"Deaths\", \"Active\"],\n        var_name=\"Case\",\n        value_name=\"Count\",\n    )\n\n    fig = px.line(\n        temp,\n        x=\"Date\",\n        y=\"Count\",\n        color=\"Case\",\n        height=600,\n        width=700,\n        title=\"Cases over time in \" + str(country) ,\n        color_discrete_sequence=[rec, dth, act],\n    )\n    fig.update_layout(xaxis_rangeslider_visible=True)\n    fig.show()","e5635f9e":"#Evaluation for country of interest and plot the new case, new death and new recovered\ncountry = \"United States\"\ncompar = [country, \"Brazil\", \"India\"] #comparison\n\nfor i in compar:\n    plot_case(i)","4c43a84f":"#Set up Mortality Rate Data\n#Full_grouped data only until 27 July\nmortal = pd.read_csv('..\/input\/excess-mortality-during-the-covid19-pandemic\/excess_mortality.csv')\nmortal = mortal.filter(['location', 'date','deaths_2021_all_ages','deaths_2020_all_ages', 'average_deaths_2015_2019_all_ages'])\nmortal = mortal[mortal['date'] <= '2020-07-31'] #To see the trend for the same time period\n#print(mortal.date.max())\nmortal = mortal.groupby('location').sum().reset_index()\n#mortal['delta20'] = mortal['deaths_2020_all_ages'] - mortal['average_deaths_2015_2019_all_ages']\nmortal.head()","2702c7d6":"#look at total data, find the positivity rate, match it with population\n#country is already defined in question 1\ncompar = [country,'France','Italy']\n\n#Set the Mortality Rate\nmortal_compar = mortal[mortal['location'].isin(compar)]\n\n#Estimate Hidden Cases and Deaths\ntot = worldometer_data[worldometer_data['Country\/Region'].isin(compar)].reset_index()\ntot = tot.filter(['Country\/Region','Case Positivity','Population','Case Fatality','TotalCases','TotalDeaths','Fraction age 65+ years'])\ntot = tot.merge(mortal_compar, how='inner', left_on='Country\/Region', right_on='location')\ntot.drop(labels='location', axis=1, inplace=True)\n\n\navg_fatal_rate = worldometer_data['Case Fatality'].mean()\navg_pos_rate = worldometer_data['Case Positivity'].mean()\n\n\n#Estimate hidden case\ntot['Cases_Recorded'] = tot['TotalCases']\ntot['Deaths_Recorded'] = tot['TotalDeaths']\ntot['exp_tot_case'] = tot['Case Positivity']*tot['Population']\ntot['hidden_case'] = tot['exp_tot_case']-tot['TotalCases']\n\nfig_case = px.histogram(tot, x='Country\/Region', y=['Cases_Recorded','hidden_case'], barmode = 'group', title= 'Total Recorded Cases and Estimated Hidden Cases')\nfig_case.update_layout(yaxis_title_text = 'Number of Case')\nfig_case.show()\n\n'''\n#METHOD 1\n#predict expected case from current positivity rate\ntot['exp_tot_death'] = tot['Case Fatality']*tot['exp_tot_case']*tot['Fraction age 65+ years']\ntot['hidden_death'] = tot['exp_tot_death']-tot['TotalDeaths']\n\nfig_death = px.histogram(tot, x='Country\/Region', y=['TotalDeaths','hidden_death'], barmode = 'group', title= 'Total Recorded Deaths and Estimated Hidden Deaths Method 1')\nfig_death.update_layout(yaxis_title_text = 'Number of Death')\nfig_death.show()\n'''\n\n#METHOD 2 Hidden Death\n\ntot['hidden_death'] = tot['Case Positivity']*(tot['deaths_2020_all_ages']-tot['TotalDeaths'])\n\nfig_death2 = px.histogram(tot, x='Country\/Region', y=['Deaths_Recorded','hidden_death'], barmode = 'group', title= 'Total Recorded Deaths and Estimated Hidden Deaths')\nfig_death2.update_layout(yaxis_title_text = 'Number of Death')\nfig_death2.show()\n\n\nprint(\"Average Fatality Rate per Case Worldwide is \" + str(round(avg_fatal_rate,2)*100) +'%')\nprint(\"Average Positive Rate Population Case Worldwide is \" + str(round(avg_pos_rate,2)*100) +'%')\n\ntot_ = tot.filter(['Country\/Region','Population','Cases_Recorded','hidden_case','Deaths_Recorded','hidden_death'])\ntot_.set_index('Country\/Region').astype('int')\n\n#print(tot['exp_tot_case'].head())\n#print(tot['exp_tot_death'].head())\n#print(tot['Case Positivity'].head())\n#print(tot['Case Fatality'].head())\n#print(tot['diff_exp_case'])\n#print(tot['diff_exp_death'])\n#tot.round(2)","19d4843e":"# Declare Public Health emergency: Feb 3\n# Declare National Emergency March 13\n# California Lockdown March 19\npub_emer = '2020-02-03'\ncal_ld = '2020-03-19'\n\n\ndf = full_grouped[full_grouped['Country\/Region']== 'United States']\ntemp0 = df.groupby(\"Date\")[\"Recovered\", \"Deaths\", \"Active\"].sum().reset_index()\ntemp = temp0.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Recovered\", \"Deaths\", \"Active\"],\n    var_name=\"Case\",\n    value_name=\"Count\",\n)\n\nfig = px.line(\n    temp,\n    x=\"Date\",\n    y=\"Count\",\n    color=\"Case\",\n    height=600,\n    width=700,\n    title=\"Cases over time in United States\" ,\n    color_discrete_sequence=[rec, dth, act],\n)\n#fig.update_layout(xaxis_rangeslider_visible=True)\nfig.add_vline(x=str(pub_emer), line_width = 2, line_dash='dash', line_color='blue')\nfig.add_vline(x=str(cal_ld), line_width = 2, line_dash='dash', line_color='green')\n#fig.show()\n\n#Google Mobility Index\n\nmob = pd.read_csv('..\/input\/google-mobility-data\/2020_US_Region_Mobility_Report.csv')\nmob = mob[(mob['date'] <= '2020-07-27') & (mob['sub_region_1'].isna()) ]\nmob = mob.iloc[:,8:]\nmob['date'] = pd.to_datetime(mob['date'])\n\n\nus_trend = temp0.merge(mob,left_on=\"Date\",right_on='date').drop(labels=['date','Recovered','Deaths'],axis=1)\nus_trend[\"Active\"] = us_trend[\"Active\"].pct_change()*100\nus_trend[\"Workplace_index\"] = us_trend['workplaces_percent_change_from_baseline']\nus_trend['Residential_index'] = us_trend['residential_percent_change_from_baseline']\n\nfig2 = px.scatter(us_trend, x='Date', y=['Active','Workplace_index','Residential_index'],trendline=\"rolling\", trendline_options=dict(window=7))\nfig2.update_traces(marker_size=0.01)\nfig2.update_layout(legend= {'itemsizing': 'constant'})\nfig2.update_layout(title= 'United States Covid 19 Active Cases and Mobility Index 7-Day MA',yaxis_title_text='Percent Change (%)')\n#fig2.add_vline(x=str(pub_emer), line_width = 2, line_dash='dash', line_color='blue')\nfig2.add_vline(x=str(cal_ld), line_width = 2, line_dash='dash', line_color='green')\n#fig2.add_vrect(x0=start,x1=end,fillcolor='blue',opacity=0.1,annotation_text='Circuit Breaker',annotation_position=\"top left\")\n#fig2.show()","13390c1e":"#List when different country started Lockdown\n# Singapore CB 7 Apr-1Jun\nstart = '2020-04-07'\nend = '2020-06-01'\n#sg_cb = pd.DataFrame()\n#sg_cb['dates'] = pd.date_range(start,end)\n\ndf = full_grouped[full_grouped['Country\/Region']== 'Singapore']\ntemp0 = df.groupby(\"Date\")[\"Recovered\", \"Deaths\", \"Active\"].sum().reset_index()\ntemp = temp0.melt(\n    id_vars=\"Date\",\n    value_vars=[\"Recovered\", \"Deaths\", \"Active\"],\n    var_name=\"Case\",\n    value_name=\"Count\",\n)\n\nfig3 = px.line(\n    temp,\n    x=\"Date\",\n    y=\"Count\",\n    color=\"Case\",\n    height=600,\n    width=700,\n    title=\"Cases over time in Singapore\" ,\n    color_discrete_sequence=[rec, dth, act],\n)\n#fig.update_layout(xaxis_rangeslider_visible=True)\nfig3.add_vrect(x0=start,x1=end,fillcolor='blue',opacity=0.1,annotation_text='Circuit Breaker',annotation_position=\"top left\")\n#fig3.show()\n\n#Google Mobility Index\nmob = pd.read_csv('..\/input\/google-mobility-data\/2020_SG_Region_Mobility_Report.csv')\nmob = mob.iloc[:,8:]\nmob = mob[mob['date'] <= '2020-07-27']\nmob['date'] = pd.to_datetime(mob['date'])\n\n\nsg_trend = temp0.merge(mob,left_on=\"Date\",right_on='date').drop(labels=['date','Recovered','Deaths'],axis=1)\nsg_trend[\"Active\"] = sg_trend[\"Active\"].pct_change()*100\nsg_trend[\"Workplace_index\"] = sg_trend['workplaces_percent_change_from_baseline']\nsg_trend['Residential_index'] = sg_trend['residential_percent_change_from_baseline']\n\nfig4 = px.scatter(sg_trend, x='Date', y=['Active','Workplace_index','Residential_index'],trendline=\"rolling\", trendline_options=dict(window=7))\nfig4.update_traces(marker_size=0.01)\nfig4.update_layout(legend= {'itemsizing': 'constant'})\nfig4.update_layout(title= 'Singapore Covid 19 Active Cases and Mobility Index 7-Day MA',yaxis_title_text='Percent Change (%)')\nfig4.add_vrect(x0=start,x1=end,fillcolor='blue',opacity=0.1,annotation_text='Circuit Breaker',annotation_position=\"top left\")\n\nfig.show()\nfig3.show()\nfig2.show()\nfig4.show()","a31ed278":"#Heatmap of correlation between US Active cases and Workplace & Residential Indices\nus_trend_corr = us_trend[['Active', 'Workplace_index', 'Residential_index']].dropna().corr()\nfig, ax = plt.subplots(figsize=(10,5)) \nsns.heatmap(us_trend_corr, annot=True, ax = ax)","aff03853":"#Heatmap of correlation between Singapore Active cases and Workplace & Residential Indices\nsg_trend_corr = sg_trend[['Active', 'Workplace_index', 'Residential_index']].dropna().corr()\nfig, ax = plt.subplots(figsize=(10,5)) \nsns.heatmap(sg_trend_corr, annot=True, ax = ax)","b18556e7":"!pip install yfinance --upgrade --no-cache-dir","e3f9ce26":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport datetime as dt\nimport yfinance as yf\n\n# find the symbol (i.e., google the instrument + 'yahoo finance') to any data series you are interested at \n# e.g., market\/sector index ETF for your chosen country and various asset classes (e.g., Comex Gold's symbol is 'GC=F')\n# e.g., SPY (https:\/\/finance.yahoo.com\/quote\/SPY\/)\n\nsymbols_list = ['SPY', 'GOOG','AAPL','PFE','MRNA','AAL','MAR','ZM']\nstart = dt.datetime(2016,7,15)\nend = dt.datetime(2021,7,15)\ndata = yf.download(symbols_list, start=start, end=end)","5cef1b3f":"# filter column adjusted close\ndf = data['Adj Close']\ndf = df.ffill()\ndf.tail()","f7032aa8":"!pip install PyPortfolioOpt==1.2.1","7d07fc1c":"from pypfopt.efficient_frontier import EfficientFrontier\nfrom pypfopt import risk_models\nfrom pypfopt import expected_returns\nfrom pypfopt import cla\nfrom pypfopt.plotting import Plotting\nfrom pypfopt.discrete_allocation import DiscreteAllocation, get_latest_prices\nfrom matplotlib.ticker import FuncFormatter\nimport seaborn as sns","becdb462":"# Check NaN values in the data\nnullin_df = pd.DataFrame(df,columns=symbols_list)\nprint(nullin_df.isnull().sum())\n\n# Calculate portfolio mean return\nmu = expected_returns.mean_historical_return(df)\nprint(mu)\n\n# Calculate portfolio return variance\nsigma = risk_models.sample_cov(df)\nprint(sigma)","debdc644":"# Note max sharpe ratio is the tangency portfolio\n\n# weight bounds in negative allows shorting of stocks\nef = EfficientFrontier(mu, sigma, weight_bounds=(-1,1)) \n\n# optional constraints possible, read  pypfopt documentation.\nsharpe_portfolio=ef.max_sharpe(risk_free_rate=0.008) \nsharpe_portfolio_wt=ef.clean_weights()\n\nprint(sharpe_portfolio_wt)\nPlotting.plot_weights(sharpe_portfolio_wt)","d9b74bb1":"latest_prices = get_latest_prices(df)\n\n# Allocate Portfolio Value in $ as required to show number of shares\/stocks to buy, \n# also bounds for shorting will affect allocation\n# Maximum Sharpe Portfolio Allocation $1000000\n\nda = DiscreteAllocation(sharpe_portfolio_wt, latest_prices, total_portfolio_value=1000000)\nallocation, leftover = da.greedy_portfolio()\n\nprint(allocation)\nprint(\"Leftover Fund value for the maximum Sharpe portfolio is ${:.2f}\".format(leftover))","1ec669f6":"max_sharpe_cla = cla.CLA(mu, sigma)\nmax_sharpe_cla.max_sharpe()\nPlotting.plot_efficient_frontier(max_sharpe_cla, show_assets=\"True\")","bf696eca":"sharpe_portfolio_wt_list = list(sharpe_portfolio_wt.values())\n\nret_data = df.pct_change()[1:]\n\nweighted_returns = (sharpe_portfolio_wt_list * ret_data)\nportfolio_ret = pd.DataFrame(weighted_returns.sum(axis=1))\n\nret_data = ret_data.merge(portfolio_ret, on=\"Date\", how=\"left\")\nret_data = ret_data.rename(columns={0: \"portfolio_ret\"})\n\nret_data.head()","fcd49c48":"ret_data['cumulative_portfolio_ret'] = (ret_data['portfolio_ret'] + 1).cumprod()\nret_data['cumulative_spy_ret'] = (ret_data['SPY'] + 1).cumprod()\nret_data.tail()","253cf91b":"sns.scatterplot('Date', 'cumulative_portfolio_ret', data=ret_data)\nsns.scatterplot('Date', 'cumulative_spy_ret', data=ret_data)","c44c95b4":"#May use add objective to ensure minimum zero weighting to individual stocks\nmin_vol_portfolio=ef.min_volatility() \nmin_vol_portfolio_wt=ef.clean_weights()\n\nprint(min_vol_portfolio_wt)\nPlotting.plot_weights(min_vol_portfolio_wt)","b3cb248b":"# Allocate Portfolio Value in $ as required to show number of shares\/stocks to buy, \n# also bounds for shorting will affect allocation\n# Minimum Volatility Portfolio Allocation $1000000\n\nda = DiscreteAllocation(min_vol_portfolio_wt, latest_prices, total_portfolio_value=1000000)\nallocation, leftover = da.greedy_portfolio()\n\nprint(allocation)\nprint(\"Leftover Fund value for the Minimum Volatility Portfolio is ${:.2f}\".format(leftover))","8e829314":"min_vol_cla = cla.CLA(mu, sigma)\nmin_vol_cla.min_volatility()\nPlotting.plot_efficient_frontier(min_vol_cla, show_assets=\"True\")","3608c0b1":"min_vol_portfolio_wt_list = list(min_vol_portfolio_wt.values())\n\nret_data = df.pct_change()[1:]\n\nweighted_returns = (min_vol_portfolio_wt_list * ret_data)\nportfolio_ret = pd.DataFrame(weighted_returns.sum(axis=1))\n\nret_data = ret_data.merge(portfolio_ret, on=\"Date\", how=\"left\")\nret_data = ret_data.rename(columns={0: \"portfolio_ret\"})\n\nret_data.head()","96611626":"ret_data['cumulative_portfolio_ret'] = (ret_data['portfolio_ret'] + 1).cumprod()\nret_data['cumulative_spy_ret'] = (ret_data['SPY'] + 1).cumprod()\nret_data.tail()","534e4d50":"sns.scatterplot('Date', 'cumulative_portfolio_ret', data=ret_data)\nsns.scatterplot('Date', 'cumulative_spy_ret', data=ret_data)","ed3c9839":"df = df.stack()\ndf = df.reset_index()\ndf = df.rename(columns={\"level_1\": \"ticker\", 0: \"price\"})\n\ndf = df.set_index('Date')\ndf['ret'] = df.groupby('ticker').pct_change()\ndf = df.dropna()\ndf.head()","f261ff41":"sns.scatterplot('Date', 'price', data=df, hue='ticker')","651a901c":"# Lab5 Questions #\n1. Based on your investment strategy (i.e., chosen stocks, industries, asset classes), identify the maximum Sharpe ratio and minimum volatility portfolios.\n2. If you have USD 1 million now, how much should you invest in each.\n3. Plot a graph showing how your portfolios (maximum Sharpe and minimum volatility portfolios) perform relative to the market (i.e., SPY).\n4. Comment on your strategy note and highlight the potential future issues\/risks.","9689704f":"From Jan to Jul 2020, we can see from the graphs above how United State's covid trend was in comparison to Brazil and Singapore. The number of cases in the United States didn't stop rising throughout the period, Brazil started to plateu on Jul 2020 and Singapore reached its peak on May 2020. Both Brazil and Singapore seems to managed the Covid cases better than the United States as shown by the trend in their Recovered case counts.","1c8231ca":"To find the hidden cases, the positivity rate is extrapolated to the population number. Assuming the whole population is tested and the positivity rate remains same, the hidden cases in US are estimated to be 21,364,311.\n\nTo find the hidden deaths, the positivity rate per test is extrapolated to the total death recorded (excl. death due to covid). This assumes the remainder death count will give the same positivity rate if they are tested. For the total death recorded, only the proportion of those with the age 65+ is being considered as they have the most probability of dying due to complication that may involve Covid. With that, the hidden deaths in the US are estimated to be 137,014.\n\nBoth the hidden cases and deaths are estimated for the duration from Jan 2020 to Jul 2020.","1ada6a6d":"The data available for the number of cases in a region and indicators like icu cases and fully vaccinated people do not share the same timeline as the vaccination drives mostly started only in second half of 2020 whereas the data available for cases is only till end of July.","e9299782":"## Review:\n##### Some more explanation surrounding your graphs looking at US covid cases would be helpful here. For example, the dotted line and explanations refer to California but graphs refer to the whole of the US.\n##### The graphs looking at cases in Singapore, on the other hand, are much clearer.\n##### Consider adding one heatmap about the correlations.","35ed2327":"# Reshaping Dataset for Plots","5ef2c7ca":"# Question 2","abfca267":"# Comment on your strategy note and highlight the potential future issues\/risks. \n\nOur choice of portfolio is entirely based on stocks that are listed in the US market. Although the assets we chose performed fairly well during the pandemic, since that these companies also have businesses operating in the market outside of US, there are still uncertainties regarding future performances of these stocks. \n\nWe decided to include both the companies that would likely to do well in the open-up senario (airline company, lodging company) where most countries lift the restriction on trading and traveling and the ones that would prosper in the worse off senario (technology and software companies, healthcare companies) where covid become out of control globally. One of the major strength in complying to this investment strategy is that it would help us to hedge the risk when facing potential uncertainties in the future. When the Covid 19 situation in the major market is getting better, the airline and hotel companies\/groups would hedge the underperformance of companies like Zoom ,etc.","fd50a5d2":"# Portfolio Optimization","58cec3c9":"# Question 1 #","a0b14701":"From the Heatmaps for both US and Singapore, we can observe that Number of active cases in US are relatively more correlated to its Workplace and Residential indices whereas the same is not true for Singapore as the correlation values are low when compared to correlation values in US. This suggests that government measures to reduce mobility in workspace helped the US government to reduce the number of active cases in the region but rules and regulations put in place by Singaporean authorities did not significantly affect the number of active cases in the country. ","500935c4":"Link for kaggle notebook with database: https:\/\/www.kaggle.com\/yaojieran\/lab4-lab5group11","02d783cc":"# Maximum Sharpe Portfolio","afff289a":"# Minimum Volatility Portfolio","54ceb173":"In United States, the government did put any drastic country-wise measures. The US government declares public health emergency on Feb 2020 (blue dashed line) and the state of California was the first to impose a lockdown on March 2020 (green dash line), but the active case number remains rising. However, looking at their mobility index, it can be seen that the mobility in workspace area decreases significantly as the state of Californaia announced the lockdown. This trend suggest public awareness on the pandemic with companies and individuals taking the initiative to reduce activity in the workplace and to start working from home. Despite all the government effort and self-initiatives, the covid cases in the United States was still on the rise throughout the defined time period.\n\nOn the other side of the world, Singapore's government action succesfuly reduced the number of active cases.Looking at the cases over time in Singapore, the duration for Circuit Breaker is shaded in Blue. It can be seen how the cases peaked during the Circuit Breaker and steadily decreases even beyond June 2020. This shows the right timing of the government to halt the alarming rate of increase of covid cases. This trend is also reflected by the 7-Day Moving Average trend between the active cases and the mobility index. When Circuit Breaker took place, the workplace mobility drops significantly and the residentila mobility increased. This represents how people started to work from more due to the pandemic and the government action. After the Circuit Breaker, when the covid active cases is decreasing, people started to go back to the workplace as shown by the increase in workplace index and decrease in residentila index.","367b28aa":"## Review:\n##### The discussion on the strategy note is straightforward and comprehensive, but this can be improved if more ideas on the future risks are provided. ","9d2dbc1c":"# Lab 4 Question #\n1. Pick a country and evaluate the Covid19 situation in the country.\n2. Evaluate the potential hidden cases (e.g., case positivity rate) and deaths (e.g., estimated infection fatality rate, excess death). \n3. Explore the relationship between the country's Covid19 cases and deaths and government health intervention policies (e.g., vaccination rate, closure), as well as Google community mobility reports. \n4. Brainstorm on an investment strategy for the country. Lab 5 is part II of this strategy note.","0b70b674":"## Review:\n#### The comparison is clear. However, for question 1, it may be improved to discuss some other indicators and trends of the Covid-19 about the chosen countries, for example, the icu cases, people fully vaccinated.","975b57a5":"## Review:\n#### The method seems to be logical and correct, but we found that the result that there were over 20 million hidden cases during the first 7 months of 2020 in the United States is shocking. ","52bf741e":"# Question 3 #"}}