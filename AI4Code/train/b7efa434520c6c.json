{"cell_type":{"80c107ab":"code","f3e512a4":"code","ed1c6b6e":"code","a2aea966":"code","995e6449":"code","507d11aa":"code","ecdea5e2":"code","b6315858":"code","1463cf87":"code","e061a5a2":"code","70acf80a":"code","9f90d65e":"code","0a0b5143":"code","32b69152":"code","efc11914":"code","79065c99":"code","31779429":"code","53e8adff":"code","90c1396e":"code","86b00a40":"code","bdfecbf7":"code","a60eb101":"code","1861c694":"code","80a832e5":"code","2d38afe7":"code","53fca54c":"code","c28b2862":"code","1ab858dc":"code","1641f675":"code","d76f6d09":"code","20759898":"code","1d7d4deb":"code","3cfbf365":"code","e4b38b30":"code","9f3e6d6b":"code","4c7c4f80":"code","1e714f99":"code","e6602871":"markdown","ff669ae0":"markdown","ee3910fa":"markdown","75e19e1a":"markdown","31c2afcc":"markdown","12416d7d":"markdown","2fefb8ef":"markdown","53c9e464":"markdown","632dcda7":"markdown","9cf61508":"markdown","f61916d5":"markdown","a9aec2c1":"markdown","eed36d5c":"markdown","9b372b8a":"markdown"},"source":{"80c107ab":"!pip install lifetimes","f3e512a4":"import numpy as np\nimport pandas as pd\nimport datetime as dt\nfrom dateutil import parser\nfrom dateutil import relativedelta\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import ModifiedBetaGeoFitter\nfrom lifetimes.utils import summary_data_from_transaction_data\nfrom sklearn.metrics import mean_squared_error\nfrom lifetimes.plotting import plot_frequency_recency_matrix \nfrom lifetimes import GammaGammaFitter\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ed1c6b6e":"data = pd.read_csv('..\/input\/retailtransactiondata\/Retail_Data_Transactions.csv', parse_dates=['trans_date'])\ndata.head()","a2aea966":"data.describe()","995e6449":"data.quantile([0.1,0.2,0.25,0.4,0.5,0.6,0.75,0.8,0.9,0.95,0.97,1])","507d11aa":"sns.distplot(data.tran_amount)\nplt.show()","ecdea5e2":"df = data[['trans_date', 'tran_amount']]\ndf = df.groupby('trans_date').agg({'tran_amount':'sum'}).reset_index()\n\nplt.figure(figsize=(30,5))\nplt.plot(df.trans_date, df.tran_amount)\nplt.show()","b6315858":"data['trans_date'] = pd.to_datetime(data['trans_date'], format=\"%Y-%m-%d\").dt.date","1463cf87":"SPLIT_DATE = \"2015-01-01\" # Date to be used to end train date\nPERIOD_LENGTH = 2.5 # Months\ndatex = parser.parse(SPLIT_DATE)\nend_date = datex + relativedelta.relativedelta(months=3)\ndate2 = datex.date()\ndate3 = end_date.date()\n\ntrain = data[data[\"trans_date\"] < date2]\ntest = data[(data[\"trans_date\"] >= date2) & (data[\"trans_date\"] < date3)]\n\nprint(\"Start Train dataset date {}\".format(train[\"trans_date\"].min()))\nprint(\"End Train dataset date {}\".format(train[\"trans_date\"].max()))\nprint(\"---------------------------------------------\")\nprint(\"Start Test dataset date {}\".format(test[\"trans_date\"].min()))\nprint(\"End Test dataset date {}\".format(test[\"trans_date\"].max()))","e061a5a2":"train.head()","70acf80a":"# Create Features (Frequency, Recency and T) for customers\nfeatures_train = summary_data_from_transaction_data(\n    train,\n    customer_id_col=\"customer_id\",\n    datetime_col=\"trans_date\",\n    monetary_value_col=\"tran_amount\",\n    freq=\"D\",\n)\nfeatures_train.reset_index(level=0, inplace=True)\nfeatures_train","9f90d65e":"features_train.describe()","0a0b5143":"bgf = ModifiedBetaGeoFitter(penalizer_coef=0.0000001)\nbgf.fit(features_train['frequency'], features_train['recency'], features_train['T']) \nprint(bgf)","32b69152":"fig = plt.figure(figsize=(12,8)) \nplot_frequency_recency_matrix(bgf) ","efc11914":"#Probability of customer still alive\nfrom lifetimes.plotting import plot_probability_alive_matrix \nfig = plt.figure(figsize=(12,8)) \nplot_probability_alive_matrix(bgf) ","79065c99":"from lifetimes.plotting import plot_period_transactions \nplot_period_transactions(bgf, max_frequency=45)","31779429":"customers = features_train[['customer_id']]","53e8adff":"# Predict future total amount spent for individual customers (next period)\nt = PERIOD_LENGTH*30  # Days (1 Month aprox)\ncustomers[\"pred_n_purchases\"] = bgf.predict(\n    t, features_train[\"frequency\"], features_train[\"recency\"], features_train[\"T\"]\n)","90c1396e":"y_predictions = customers[[\"customer_id\", \"pred_n_purchases\"]]\n\ntest_n_purchases = (\n    test[\"customer_id\"]\n    .value_counts()\n    .rename_axis(\"customer_id\")\n    .to_frame(\"true_n_purchases\")\n)\n\ndataset = pd.merge(y_predictions, test_n_purchases, on='customer_id', how='left')\ndataset['true_n_purchases'].fillna(0, inplace= True) # No sales \ndataset['pred_n_purchases'].fillna(0, inplace= True) # No sales ","86b00a40":"y_true_n_purchases = dataset['true_n_purchases']\ny_pred_n_purchases = dataset['pred_n_purchases']","bdfecbf7":"mean_squared_error(y_true_n_purchases, y_pred_n_purchases, squared=False)","a60eb101":"print('Number of purchases predicted:')\nprint(int(dataset['pred_n_purchases'].sum()))\nprint('--------------')\nprint('Number of purchases occured in actual:')\nprint(int(dataset['true_n_purchases'].sum()))","1861c694":"dataset['pred_n_purchases'] = round(dataset['pred_n_purchases'],0)\ndataset.head(10)","80a832e5":"dataset.head(10)","2d38afe7":"# Amount spent by customer current period\ntest_amount_spent = (\n    test.groupby([\"customer_id\"])[[\"tran_amount\"]]\n    .agg(\"sum\")\n    .reset_index()\n    .rename(columns={\"tran_amount\": \"true_amount_spent_next_period\"})\n)","53fca54c":"features_train.describe()","c28b2862":"ggf = GammaGammaFitter(penalizer_coef = 0.1)\nggf.fit(features_train['frequency'],\n        features_train['monetary_value'])\nprint(ggf)","1ab858dc":"features_train[\"pred_amount_spent_next_period\"] = ggf.customer_lifetime_value(\n    bgf, #the model to use to predict the number of future transactions\n    features_train['frequency'],\n    features_train['recency'],\n    features_train['T'],\n    features_train['monetary_value'],\n    time=PERIOD_LENGTH, # months\n    freq='D',\n    discount_rate=0.01 # monthly discount rate\n)\nfeatures_train.head()","1641f675":"features_train.shape","d76f6d09":"y_predictions = features_train[[\"customer_id\", \"pred_amount_spent_next_period\"]]","20759898":"dataset = pd.merge(customers['customer_id'], y_predictions, on='customer_id', how='left')\ndataset = pd.merge(dataset, test_amount_spent, on='customer_id', how='left')\ndataset['pred_amount_spent_next_period'].fillna(0, inplace= True)\ndataset['true_amount_spent_next_period'].fillna(0, inplace= True)","1d7d4deb":"dataset.describe()","3cfbf365":"print('The sum of total Vol_PC predicted to be sold is:')\nprint(round(dataset['pred_amount_spent_next_period'].sum()),1)\nprint('------------')\nprint('The sum of total Vol_PC actually sold:')\nprint(dataset['true_amount_spent_next_period'].sum())","e4b38b30":"y_true_amount_spent = dataset['true_amount_spent_next_period']\ny_pred_amount_spent = dataset['pred_amount_spent_next_period']","9f3e6d6b":"mean_squared_error(y_true_amount_spent, y_pred_amount_spent, squared=False)","4c7c4f80":"dataset.describe()","1e714f99":"dataset['pred_amount_spent_next_period'] = round(dataset['pred_amount_spent_next_period'],1)\n\n# We can export the variable 'dataset' in a csv to view the actual and predicted transaction at customer level","e6602871":"# Why choose BG-NBD model and not other usual regression models?","ff669ae0":"- Other probabilistic models used in non-contractual scenarios are:\n\n  1) Parento\/NBD Model\n  \n  2) BG\/NBD Model\n  \n  3) BG\/BB Model","ee3910fa":"#### We can see that our model has performed extremely well in predicting the number of future visits by customers in next 2.5 months\n\nThis prediction is good in terms of overall visits. Since the data does not follow poisson distribution, therefore the model would not perform accurately at customer level.","75e19e1a":"- The BG-NBD model calculates the probabily of the customer and classifies it as Alive or Dead. \n\n- If the customer is classified as 'Dead' then the number of visits in the next n days is 0 and the transaction amount is also 0. \n\n- If the customer is classified as 'Alive' then the number of visits is predicted and the number of visits predicted and monetary_value(average transaction amount in training data) is used to predict the future amount of transaction.\n\n- In case of regression, the model averages past transaction values and inferes that the same number of purchase will be made in future, which fails the business logic as well as statistical modelling output.","31c2afcc":"# Customer Lifetime Value\n\n### The business world throws plenty of challenges to solve with the help of data everyday. Every business is built by its customers, so identifying and forecasting the potential of customers can help increase the revenue and growth of the business.","12416d7d":"### We will use the typical RFM matrices in the model.\nThe calculation for all the facts are as follows -\n- **Recency** = last purchase date - initial purchase date\n- **Frequency**(Repeat) = Number of purchases except the first\n- **T** = last date of training data set - first purchase date\n- **Monetary_value** = Average transaction amount","2fefb8ef":"Lets take the example of image attached below. \n\nThe X axis is the time period and Y axis is unique customers. \n\nAs you can see the very first customer used to visit the store plenty of times in the beginning but now she has stopped visiting the store. In probabilistic modelling this is called as customer 'death'. So the probability of her visiting the store is very less. \n\nWhere as the second customer hasn't been to store as many times as first customer but he has recently visited the store and also it is visible that he visits the store in quite some interval. So his probability to visit the store is more than first customer.","53c9e464":"Predicted and Actual Amount of transactions have a RMSE of 71.1 and this would be decreased if our prediction of number of visits is improved at customer level.","632dcda7":"![Screenshot%20%2880%29.png](attachment:Screenshot%20%2880%29.png)","9cf61508":"#### We can see there is no seasonality present in the data","f61916d5":"The dataset here does not follow poisson distribution but we are taking this dataset for just demonstration purpose. We will get good results but not extremely accurate.","a9aec2c1":"The BG-NBD Model has a few assumptions which are -\n\n1) Frequency follows a poisson distribution with rate (lambda).\n\n2) Lifetime distribution follows an exponential distribution with slope (mu).\n\n3) The latent paramenter lambda and mu are constrained by two prior gamma distributions.","eed36d5c":"https:\/\/www.linkedin.com\/in\/darshan-suri-7935b5104\/","9b372b8a":"### Our aim here is to - \n1) Predict the number of visit of customer in next n days.\n\n2) Predict the amount of transaction expected by a customer in those visits."}}