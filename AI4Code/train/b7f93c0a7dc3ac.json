{"cell_type":{"a99391d8":"code","9d20692e":"code","03e8ff59":"code","74aa6306":"code","aa054ea3":"code","721ebd60":"code","669bde3d":"code","51fe4bf1":"code","b6a1549d":"code","2c37974e":"code","faccc307":"code","a9cfa7f3":"code","cc202ce2":"code","756a3216":"code","0ad35208":"code","8dd0f473":"code","fc031c8f":"code","e8933d43":"code","3b5e3455":"code","1de18b3c":"code","fd00fcf9":"code","28b249da":"markdown","5007ada1":"markdown","a9054fa9":"markdown","73809461":"markdown","e5171243":"markdown","8fb2112b":"markdown","38f9ab9d":"markdown","cf987f71":"markdown","fa5cc569":"markdown","c1536fae":"markdown","620fb1f8":"markdown","8f686ecb":"markdown","160d8791":"markdown","69add0f0":"markdown","63d78673":"markdown","9096ba26":"markdown","ce676d3b":"markdown","fbc913da":"markdown","83142a9d":"markdown","8c4e165b":"markdown","54e2ce6f":"markdown","04c1a3db":"markdown","1f860a47":"markdown","8ceb663f":"markdown","c6a444a6":"markdown","4132730d":"markdown","667176f8":"markdown","c32a22c0":"markdown","73f300bb":"markdown","dbd41104":"markdown","0a8d9414":"markdown","505a1976":"markdown","3f30c536":"markdown","f1757f0c":"markdown","dc1daa31":"markdown","c8a29438":"markdown","64a78bad":"markdown","a61c85ec":"markdown","98ec130c":"markdown","1591498a":"markdown","6af1e6db":"markdown","b0609a39":"markdown","420eb645":"markdown","69bd09a0":"markdown","b6270b78":"markdown","67aca858":"markdown","4bd18d44":"markdown"},"source":{"a99391d8":"import pandas as pd\nimport pylab as pl\nimport numpy as np\nimport scipy.optimize as opt\nfrom sklearn import preprocessing\n%matplotlib inline \nimport matplotlib.pyplot as plt","9d20692e":"#Click here and press Shift+Enter\n!wget -O ChurnData.csv https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/ChurnData.csv","03e8ff59":"churn_df = pd.read_csv(\"ChurnData.csv\")\nchurn_df.head()","74aa6306":"churn_df = churn_df[['tenure', 'age', 'address', 'income', 'ed', 'employ', 'equip',   'callcard', 'wireless','churn']]\nchurn_df['churn'] = churn_df['churn'].astype('int')\nchurn_df.head()","aa054ea3":"# write your code here\nprint(churn_df.shape)\nprint(churn_df.columns)","721ebd60":"X = np.asarray(churn_df[['tenure', 'age', 'address', 'income', 'ed', 'employ', 'equip']])\nX[0:5]","669bde3d":"y = np.asarray(churn_df['churn'])\ny [0:5]","51fe4bf1":"from sklearn import preprocessing\nX = preprocessing.StandardScaler().fit(X).transform(X)\nX[0:5]","b6a1549d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","2c37974e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nLR = LogisticRegression(C=0.01, solver='liblinear').fit(X_train,y_train)\nLR","faccc307":"yhat = LR.predict(X_test)\nyhat","a9cfa7f3":"yhat_prob = LR.predict_proba(X_test)\nyhat_prob","cc202ce2":"from sklearn.metrics import jaccard_score\njaccard_score(y_test, yhat)","756a3216":"from sklearn.metrics import classification_report, confusion_matrix\nimport itertools\ndef plot_confusion_matrix(cm, classes,\n                          normalize=False,\n                          title='Confusion matrix',\n                          cmap=plt.cm.Blues):\n    \"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n        print(\"Normalized confusion matrix\")\n    else:\n        print('Confusion matrix, without normalization')\n\n    print(cm)\n\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    fmt = '.2f' if normalize else 'd'\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, format(cm[i, j], fmt),\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')\nprint(confusion_matrix(y_test, yhat, labels=[1,0]))","0ad35208":"# Compute confusion matrix\ncnf_matrix = confusion_matrix(y_test, yhat, labels=[1,0])\nnp.set_printoptions(precision=2)\n\n\n# Plot non-normalized confusion matrix\nplt.figure()\nplot_confusion_matrix(cnf_matrix, classes=['churn=1','churn=0'],normalize= False,  title='Confusion matrix')","8dd0f473":"print (classification_report(y_test, yhat))\n","fc031c8f":"from sklearn.metrics import log_loss\nlog_loss(y_test, yhat_prob)","e8933d43":"LR1 = LogisticRegression(C=0.01, solver='saga').fit(X_train,y_train)\nyhat1 = LR1.predict(X_test)\nyhat_prob1 = LR1.predict_proba(X_test)\nlog_loss(y_test, yhat_prob1)","3b5e3455":"LR2 = LogisticRegression(C=0.01, solver='sag').fit(X_train,y_train)\nyhat2 = LR2.predict(X_test)\nyhat_prob2 = LR2.predict_proba(X_test)\nlog_loss(y_test, yhat_prob2)","1de18b3c":"LR3 = LogisticRegression(C=0.02, solver='newton-cg').fit(X_train,y_train)\nyhat3 = LR3.predict(X_test)\nyhat_prob3 = LR3.predict_proba(X_test)\nlog_loss(y_test, yhat_prob3)","fd00fcf9":"LR4 = LogisticRegression(C=0.03, solver='lbfgs').fit(X_train,y_train)\nyhat4 = LR4.predict(X_test)\nyhat_prob4 = LR4.predict_proba(X_test)\nlog_loss(y_test, yhat_prob4)","28b249da":"<h2 id=\"modeling\">Modeling (Logistic Regression with Scikit-learn)<\/h2>","5007ada1":"<h2 id=\"practice\">Practice<\/h2>\nTry to build Logistic Regression model again for the same dataset, but this time, use different __solver__ and __regularization__ values? What is new __logLoss__ value?","a9054fa9":"<h1>Table of contents<\/h1>\n\n<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n    <ol>\n        <li><a href=\"#about_dataset\">About the dataset<\/a><\/li>\n        <li><a href=\"#preprocessing\">Data pre-processing and selection<\/a><\/li>\n        <li><a href=\"#modeling\">Modeling (Logistic Regression with Scikit-learn)<\/a><\/li>\n        <li><a href=\"#evaluation\">Evaluation<\/a><\/li>\n        <li><a href=\"#practice\">Practice<\/a><\/li>\n    <\/ol>\n<\/div>\n<br>\n<hr>","73809461":"### Customer churn with Logistic Regression\nA telecommunications company is concerned about the number of customers leaving their land-line business for cable competitors. They need to understand who is leaving. Imagine that you are an analyst at this company and you have to find out who is leaving and why.","e5171243":"We visualize the confusion matrix suing matplotlib and display the results.","8fb2112b":"This is the output to give to the model and asarray attribute is used to denote value of the required featureas a array. Then we use indexing to only access values of the first 5 rows. In arrays indexing starts from 0 so we use y[0:5] and in indexing the second value must be 1 greater than the required values. So we enter 5 which means upto 4th index(which means 5th row as indexing starts from 0) we get the values.","38f9ab9d":"Here we imported libraries that are required for building the logisitic regression model. We import Pandas, Pylab, Numpy, a package of scipy library that is optimize, from sklearn we import a part which is preprocessing and matplotlib. Pandas is used to import data and numpy is used for calculations. Scipy library is used for gernally and scientific computing. Sklearn is a libary used for the machine learning algorithms and we imported preprocessing from it to extract features from the dataset. Matplotlib is used for visualizing the results or any required data. ","cf987f71":"## Practice\nHow many rows and columns are in this dataset in total? What are the name of columns?","fa5cc569":"Also, we normalize the dataset:","c1536fae":"Lets select some features for the modeling. Also we change the target data type to be integer, as it is a requirement  by the skitlearn algorithm:","620fb1f8":"## Train\/Test dataset","8f686ecb":"We select only the required features and change the type of required columns to integer datatype as in sklearn algorithms the datatype should be of integer.","160d8791":"### Load Data From CSV File  ","69add0f0":"__Did you know?__ When it comes to Machine Learning, you will likely be working with large datasets. As a business, where can you host your data? IBM is offering a unique opportunity for businesses, with 10 Tb of IBM Cloud Object Storage: [Sign up now for free](http:\/\/cocl.us\/ML0101EN-IBM-Offer-CC)","63d78673":"Lets define X, and y for our dataset:","9096ba26":"Here, we use pandas library to import the dataset and create it into a dataframe. Then using the head attribute we see the first 5 rows of the dataframe to see how it looks.","ce676d3b":"###  Load the Telco Churn data \nTelco Churn is a hypothetical data file that concerns a telecommunications company's efforts to reduce turnover in its customer base. Each case corresponds to a separate customer and it records various demographic and service usage information. Before you can work with the data, you must use the URL to get the ChurnData.csv.\n\nTo download the data, we will use `!wget` to download it from IBM Object Storage.","fbc913da":"### jaccard index\nLets try jaccard index for accuracy evaluation. we can define jaccard as the size of the intersection divided by the size of the union of two label sets. If the entire set of predicted labels for a sample strictly match with the true set of labels, then the subset accuracy is 1.0; otherwise it is 0.0.\n\n","83142a9d":"1. Name:- Rohith Kalvakota\n2. Roll No:- A223\n3. SAP ID:- 70011118031","8c4e165b":"We can see here how much correctly the classes are predicted, the first column refers to the prediction of class 1 and rhe second column refers to the prediction of class 0.","54e2ce6f":"<h2 id=\"about_dataset\">About the dataset<\/h2>\nWe will use a telecommunications dataset for predicting customer churn. This is a historical customer dataset where each row represents one customer. The data is relatively easy to understand, and you may uncover insights you can use immediately. Typically it is less expensive to keep customers than acquire new ones, so the focus of this analysis is to predict the customers who will stay with the company. \n\n\nThis data set provides information to help you predict what behavior will help you to retain customers. You can analyze all relevant customer data and develop focused customer retention programs.\n\n\n\nThe dataset includes information about:\n\n- Customers who left within the last month \u2013 the column is called Churn\n- Services that each customer has signed up for \u2013 phone, multiple lines, internet, online security, online backup, device protection, tech support, and streaming TV and movies\n- Customer account information \u2013 how long they had been a customer, contract, payment method, paperless billing, monthly charges, and total charges\n- Demographic info about customers \u2013 gender, age range, and if they have partners and dependents\n","04c1a3db":"<a id=\"ref1\"><\/a>\n## What is the difference between Linear and Logistic Regression?\n\nWhile Linear Regression is suited for estimating continuous values (e.g. estimating house price), it is not the best tool for predicting the class of an observed data point. In order to estimate the class of a data point, we need some sort of guidance on what would be the <b>most probable class<\/b> for that data point. For this, we use <b>Logistic Regression<\/b>.\n\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n<font size = 3><strong>Recall linear regression:<\/strong><\/font>\n<br>\n<br>\n    As you know, <b>Linear regression<\/b> finds a function that relates a continuous dependent variable, <b>y<\/b>, to some predictors (independent variables $x_1$, $x_2$, etc.). For example, Simple linear regression assumes a function of the form:\n<br><br>\n$$\ny = \\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 + \\cdots\n$$\n<br>\nand finds the values of parameters $\\theta_0, \\theta_1, \\theta_2$, etc, where the term $\\theta_0$ is the \"intercept\". It can be generally shown as:\n<br><br>\n$$\n\u210e_\\theta(\ud835\udc65) = \\theta^TX\n$$\n<p><\/p>\n\n<\/div>\n\nLogistic Regression is a variation of Linear Regression, useful when the observed dependent variable, <b>y<\/b>, is categorical. It produces a formula that predicts the probability of the class label as a function of the independent variables.\n\nLogistic regression fits a special s-shaped curve by taking the linear regression and transforming the numeric estimate into a probability with the following function, which is called sigmoid function \ud835\udf0e:\n\n$$\n\u210e_\\theta(\ud835\udc65) = \\sigma({\\theta^TX}) =  \\frac {e^{(\\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 +...)}}{1 + e^{(\\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 +\\cdots)}}\n$$\nOr:\n$$\nProbabilityOfaClass_1 =  P(Y=1|X) = \\sigma({\\theta^TX}) = \\frac{e^{\\theta^TX}}{1+e^{\\theta^TX}} \n$$\n\nIn this equation, ${\\theta^TX}$ is the regression result (the sum of the variables weighted by the coefficients), `exp` is the exponential function and $\\sigma(\\theta^TX)$ is the sigmoid or [logistic function](http:\/\/en.wikipedia.org\/wiki\/Logistic_function), also called logistic curve. It is a common \"S\" shape (sigmoid curve).\n\nSo, briefly, Logistic Regression passes the input through the logistic\/sigmoid but then treats the result as a probability:\n\n<img\nsrc=\"https:\/\/ibm.box.com\/shared\/static\/kgv9alcghmjcv97op4d6onkyxevk23b1.png\" width=\"400\" align=\"center\">\n\n\nThe objective of __Logistic Regression__ algorithm, is to find the best parameters \u03b8, for $\u210e_\\theta(\ud835\udc65)$ = $\\sigma({\\theta^TX})$, in such a way that the model best predicts the class of each case.","1f860a47":"This the prediction done by the model.","8ceb663f":"Lets build our model using __LogisticRegression__ from Scikit-learn package. This function implements logistic regression and can use different numerical optimizers to find parameters, including \u2018newton-cg\u2019, \u2018lbfgs\u2019, \u2018liblinear\u2019, \u2018sag\u2019, \u2018saga\u2019 solvers. You can find extensive information about the pros and cons of these optimizers if you search it in internet.\n\nThe version of Logistic Regression in Scikit-learn, support regularization. Regularization is a technique used to solve the overfitting problem in machine learning models.\n__C__ parameter indicates __inverse of regularization strength__ which must be a positive float. Smaller values specify stronger regularization. \nNow lets fit our model with train set:","c6a444a6":"We import the algorithm and then apply it to build the model. We use the c parameter to see how strong the regularization has to be and then also use Liblinear solver for numerical optimization and then fit the training data into the model. We also import confusion matrix for results accuracy. Then, we display the results.","4132730d":"<h2 id=\"evaluation\">Evaluation<\/h2>","667176f8":"Classification report is what tells us the accuracy, precision score of the model that we built.","c32a22c0":"### confusion matrix\nAnother way of looking at accuracy of classifier is to look at __confusion matrix__.","73f300bb":"Using log loss we get the probabilty of how correct the predictions happened as probability between 0 and 1. We got a log loss score of 0.6.","dbd41104":"### log loss\nNow, lets try __log loss__ for evaluation. In logistic regression, the output can be the probability of customer churn is yes (or equals to 1). This probability is a value between 0 and 1.\nLog loss(\u00a0Logarithmic\u00a0loss) measures the performance of a\u00a0classifier\u00a0where the predicted output is a probability value between 0 and 1. \n","0a8d9414":"Now we can predict using our test set:","505a1976":"We then split the data into 4 types, input test , input train, output test and output train. We then have a look at their shapes which tells us about their rows and columns.","3f30c536":"__predict_proba__  returns estimates for all classes, ordered by the label of classes. So, the first column is the probability of class 1, P(Y=1|X), and second column is probability of class 0, P(Y=0|X):","f1757f0c":"<h2 id=\"preprocessing\">Data pre-processing and selection<\/h2>","dc1daa31":"Look at first row. The first row is for customers whose actual churn value in test set is 1.\nAs you can calculate, out of 40 customers, the churn value of 15 of them is 1. \nAnd out of these 15, the classifier correctly predicted 6 of them as 1, and 9 of them as 0. \n\nIt means, for 6 customers, the actual churn value were 1 in test set, and classifier also correctly predicted those as 1. However, while the actual label of 9 customers were 1, the classifier predicted those as 0, which is not very good. We can consider it as error of the model for first row.\n\nWhat about the customers with churn value 0? Lets look at the second row.\nIt looks like  there were 25 customers whom their churn value were 0. \n\n\nThe classifier correctly predicted 24 of them as 0, and one of them wrongly as 1. So, it has done a good job in predicting the customers with churn value 0. A good thing about confusion matrix is that shows the model\u2019s ability to correctly predict or separate the classes.  In specific case of binary classifier, such as this example,  we can interpret these numbers as the count of true positives, false positives, true negatives, and false negatives. ","c8a29438":"Based on the count of each section, we can calculate precision and recall of each label:\n\n\n- __Precision__ is a measure of the accuracy provided that a class label has been predicted. It is defined by: precision = TP\u00a0\/\u00a0(TP\u00a0+\u00a0FP)\n\n- __Recall__ is true positive rate. It is defined as: Recall = \u00a0TP\u00a0\/\u00a0(TP\u00a0+\u00a0FN)\n\n    \nSo, we can calculate precision and recall of each class.\n\n__F1 score:__\nNow we are in the position to calculate the F1 scores for each label based on the precision and recall of that label. \n\nThe F1 score is the harmonic average of the\u00a0precision and recall, where an F1\u00a0score reaches its best value at 1 (perfect precision and recall) and worst at 0. It is a good way to show that a classifer has a good value for both recall and precision.\n\n\nAnd finally, we can tell the average accuracy for this classifier is the average of the F1-score for both labels, which is 0.72 in our case.","64a78bad":"Okay, we split our dataset into train and test set:","a61c85ec":"Then we check using the jaccard score how much predictions are matching with the true labels.","98ec130c":"<h1 align=\"center\"><font size=\"5\"> Machine Learning : IT Sem V  <\/font><\/h1>\n<h1 align=\"center\"><font size=\"5\"> Logistic Regression with Python<\/font><\/h1>","1591498a":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n    \nLR2 = LogisticRegression(C=0.01, solver='sag').fit(X_train,y_train)\nyhat_prob2 = LR2.predict_proba(X_test)\nprint (\"LogLoss: : %.2f\" % log_loss(y_test, yhat_prob2))\n\n-->","6af1e6db":"We use shape to check the number of rows and columns, shape gives us the output in the form of (rows,columns) so here we have 200 rows and 10 columns after feature extraction. To print the columns just use dataframe.columns to display columns in the form of a list.","b0609a39":"We use wget which is a GNU computer program that retrieves content from web servers. We use -O because we are using the datset as input. After -O we give the file name and the link from where it has to access.","420eb645":"In this notebook, you will learn Logistic Regression, and then, you'll create a model for a telecommunication company, to predict when its customers will leave for a competitor, so that they can take some action to retain the customers.","69bd09a0":"We are selecting input to give to the model and asarray attribute is used to denote values of the required features as a array. Then we use indexing to only access values of the first 5 rows. In arrays indexing starts from 0 so we use X[0:5] and in indexing the second value must be 1 greater than the required values. So we enter 5 which means upto 4th index(which means 5th row as indexing starts from 0) we get the values.","b6270b78":"We import the preporcessing package of sklearn library and normalize the input. Normalization means to set the values of data between a certain range and the valyes can't be less or more than it.Then we fit the model and transform to required type and display the results using indexing.","67aca858":"Here True Positives are 6, False Negatives are 9, False Positive is 1 and True Positives are 24. This means that 30 values were predicted correctly as churn having 0 or 1, 10 were predicted wrongly.","4bd18d44":"Lets first import required libraries:"}}