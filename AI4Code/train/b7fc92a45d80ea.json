{"cell_type":{"e99cc465":"code","ed667bee":"code","3afdfb79":"code","76ee3dcd":"code","8ec644d1":"code","5cc0e4c1":"code","e18e703b":"code","7dda9721":"code","932170d8":"code","b3379607":"code","0096114f":"code","ec3a8d74":"code","8a4fd3d3":"code","10fa1675":"code","c766355f":"code","b39ed1cd":"code","709c6e51":"code","40b3a61c":"code","06c55c00":"code","646ca6b4":"code","4b2cb8cc":"code","3c3926b6":"code","61608e1a":"code","fe969c17":"code","8c9e358b":"code","2f2a6930":"code","dd442b59":"code","86c49922":"code","ee9fcf43":"code","bbd9c886":"markdown","0200990e":"markdown","37b5cbba":"markdown"},"source":{"e99cc465":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Import matplotlib, seaborn for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom fbprophet import Prophet\nfrom sklearn.metrics import mean_squared_error","ed667bee":"df = pd.read_csv('\/kaggle\/input\/forecast\/forecast.csv')\ndf.head()","3afdfb79":"df.tail()","76ee3dcd":"df.info()","8ec644d1":"df['DATE'] = pd.to_datetime(df['DATE'])","5cc0e4c1":"df","e18e703b":"df = df.rename(columns={'CC Volume': 'y', 'DATE':'ds'})","7dda9721":"df.tail()","932170d8":"df['y_orig'] = df['y'] # to save a copy of the original data..you'll see why shortly. \ndf['y'] = np.log(df['y'])","b3379607":"df.head(10)","0096114f":"model = Prophet() #instantiate Prophet\nmodel.fit(df)","ec3a8d74":"df.tail(5)","8a4fd3d3":"'''     'year': 'A',\n        'quarter': 'Q',\n        'month': 'M',\n        'day': 'D',\n        'hour': 'H',\n        'minute': 'T',\n        'second': 'S',\n        'millisecond': 'L',\n        'microsecond': 'U',\n        'nanosecond': 'N'}\n'''\n\ndf.tail(5)\n#future_data = model.make_future_dataframe(periods=6, freq = 'H')\nfuture_data = model.make_future_dataframe(periods=193)\nfuture_data.tail()","10fa1675":"forecast_data = model.predict(future_data)\nforecast_data[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(15)","c766355f":"model.plot(forecast_data)","b39ed1cd":"model.plot_components(forecast_data)","709c6e51":"forecast_data_orig = forecast_data # make sure we save the original forecast data\nforecast_data_orig['yhat'] = np.exp(forecast_data_orig['yhat'])\nforecast_data_orig['yhat_lower'] = np.exp(forecast_data_orig['yhat_lower'])\nforecast_data_orig['yhat_upper'] = np.exp(forecast_data_orig['yhat_upper'])","40b3a61c":"model.plot(forecast_data_orig)","06c55c00":"df['y_log']=df['y'] #copy the log-transformed data to another column\ndf['y']=df['y_orig']","646ca6b4":"final_df = pd.DataFrame(forecast_data_orig)","4b2cb8cc":"final_df.tail(15)","3c3926b6":"final_df[['ds','yhat']].tail(15)","61608e1a":"import plotly.graph_objs as go\nimport plotly.offline as py","fe969c17":"#Plot predicted and actual line graph with X=dates, Y=Outbound\nactual_chart = go.Scatter(y=df[\"y_orig\"], name= 'Actual')\npredict_chart = go.Scatter(y=final_df[\"yhat\"], name= 'Predicted')\npredict_chart_upper = go.Scatter(y=final_df[\"yhat_upper\"], name= 'Predicted Upper')\npredict_chart_lower = go.Scatter(y=final_df[\"yhat_lower\"], name= 'Predicted Lower')\npy.plot([actual_chart, predict_chart, predict_chart_upper, predict_chart_lower], image_width=400, image_height=400)\n#py.plot([actual_chart, predict_chart, predict_chart_upper, predict_chart_lower], filename = 'templates\/' +'filename.html', auto_open=False)","8c9e358b":"df = final_df.rename(columns={'yhat':'CC Volume', 'ds':'DATE'})","2f2a6930":"df[['DATE','CC Volume']].tail(20)","dd442b59":"df.columns","86c49922":"df.drop(['trend', 'trend_lower',\n       'trend_upper', 'additive_terms', 'additive_terms_lower',\n       'additive_terms_upper', 'weekly', 'weekly_lower', 'weekly_upper',\n       'yearly', 'yearly_lower', 'yearly_upper', 'multiplicative_terms',\n       'multiplicative_terms_lower', 'multiplicative_terms_upper'],axis = 1,inplace = True)","ee9fcf43":"df.to_csv('Future_forecast.csv', index=False)","bbd9c886":"# Import required library","0200990e":"Goal: predictions for April, May, June, July, August, September 2021.","37b5cbba":"# Fit The Prophet mode on dataset"}}