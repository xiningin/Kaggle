{"cell_type":{"207910e9":"code","149580cd":"code","d1d2b849":"code","e485ff62":"code","4b12b9bf":"code","1e6745a5":"code","f6a59485":"code","5cdfd4fb":"code","a5aed616":"code","e13396b7":"code","098bc063":"code","0b08ce78":"code","070eb18a":"code","a32906c0":"code","b0136408":"code","4c3761d4":"code","e9e653bb":"code","e460c150":"code","a8f8e220":"code","7850478f":"code","94b6a424":"code","5a31712e":"code","40997183":"code","3f70c687":"code","da1401f9":"code","51b6d55a":"code","508aa6d8":"code","a50be10d":"code","914c507e":"code","8f6d4e7b":"code","49274f4e":"code","0dac4686":"code","1d4534a5":"code","83c0f876":"code","389c1cf1":"code","1481144e":"code","415d7630":"code","a3d1be93":"code","4a91dd1a":"code","354d67cc":"code","ebede3c8":"code","8476dc95":"code","56b8e809":"code","ff7bd51c":"code","a2c43e04":"code","3c2d3075":"code","b4633ad5":"code","30002f6f":"code","06fb6d95":"code","091d229f":"code","8cc42fd9":"code","2d88e861":"code","f5a78585":"code","75b031c2":"code","6c2d5076":"code","f893cea2":"code","a92f6658":"code","984907b3":"code","eb7a5e8c":"code","e6e2b4e2":"code","82738eaf":"code","1610c0e8":"code","af6be0a6":"markdown","9a4e1f82":"markdown","b2d29be8":"markdown","d28d1322":"markdown","357ece37":"markdown","fe0d1f6f":"markdown","51fa3e94":"markdown","14785c8c":"markdown","d8f9c66f":"markdown","0bbcd4e9":"markdown","e077f566":"markdown","77034968":"markdown","4fcba1bd":"markdown","aa288deb":"markdown","ecb0967e":"markdown","e41faf74":"markdown","a228fbbb":"markdown","fd22b9f7":"markdown","a06cdc44":"markdown","011ce312":"markdown","66306c01":"markdown","cc44929f":"markdown"},"source":{"207910e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","149580cd":"\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nimport networkx as nx\nimport plotly.express as px\n# preprocessing\nfrom sklearn.model_selection import train_test_split\n\n# machine learning\nimport lightgbm as lgb\n\n\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error","d1d2b849":"df=pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf.head()","e485ff62":"df.tail()","4b12b9bf":"df.info()","1e6745a5":"print('Number of rows ',df.shape[0],'and ',df.shape[1],'Columns')","f6a59485":"df.index","5cdfd4fb":"df=df.rename(columns={'race\/ethnicity': 'race_ethnicity','parental level of education':'education_level','test preparation course':'test_preparation'})\ndf","a5aed616":"df.info()","e13396b7":"df.describe(include='all')","098bc063":"df.dtypes","0b08ce78":"print(df.isnull().sum())","070eb18a":"df.isnull().values.any()","a32906c0":"correlation = df.corr()\ncorrelation ","b0136408":"\nsns.heatmap(correlation,xticklabels=correlation.columns,yticklabels=correlation.columns,annot=True)","4c3761d4":"df['gender'].value_counts()","e9e653bb":"df['gender'].unique()","e460c150":"df.nunique()","a8f8e220":"df.plot(kind=\"line\")","7850478f":"sns.catplot(data=df, kind=\"box\")\n","94b6a424":"sns.displot(df['math score'])","5a31712e":"sns.displot(df['writing score'])","40997183":"sns.displot(df['reading score'])","3f70c687":"sns.relplot(x='math score',y='reading score',hue='gender',data=df)","da1401f9":"sns.relplot(x='math score',y='writing score',hue='gender',data=df)","51b6d55a":"sns.relplot(x='reading score',y='writing score',hue='gender',data=df)","508aa6d8":"sns.lmplot(x='math score',y='reading score',data=df)\nplt.xlabel('Math Score')\nplt.ylabel('Reading Score')\nplt.title('Math Score vs Reading Score')\nplt.show()","a50be10d":"sns.pairplot(df)","914c507e":"sns.countplot(data = df, x = df['gender'])","8f6d4e7b":"sns.set(style='whitegrid')\nax=sns.barplot(x=df['gender'].value_counts().index,y=df['gender'].value_counts().values,palette=\"rocket\",hue=['female','male'])\nplt.legend(loc=8)\nplt.xlabel('gender')\nplt.ylabel('frequency')\nplt.title('Bar plot of gender')\nplt.show()","49274f4e":"sns.countplot(data = df, x = df['race_ethnicity'])","0dac4686":"sns.countplot(data = df, x = df['lunch'])","1d4534a5":"fig, axarr = plt.subplots(1,2,figsize=(15,8))\n\ndf.race_ethnicity.value_counts().plot.pie(autopct='%1.1f%%',explode=[0.1,0.1,0.1,0.1,0.1],shadow=True,ax=axarr[0])\naxarr[0].set_title('percent of race ethnicity count')\n\ndf.race_ethnicity.value_counts().plot.bar(ax=axarr[1])\naxarr[1].set_title('count of race ethnicity type')\n\nplt.show()","83c0f876":"sns.kdeplot(df['reading score'],shade=True,color='r')\nsns.kdeplot(df['writing score'],shade=True,color='b')\nsns.kdeplot(df['math score'],shade=True,color='g')\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('Reading Score vs Writing Score vs Math Score Kde Plot System Analysis')\nplt.show()","389c1cf1":"sns.catplot(x='education_level',hue='test_preparation',data=df,kind='count', height=8.27, aspect=11.7\/8.27)\nplt.title('test preparation by education level')\nplt.show()","1481144e":"g=sns.catplot(x='education_level',y='math score',data=df,kind='box',col='gender', whis=[0,100])\ng.set_xticklabels(rotation=90)\nplt.show()\n","415d7630":"sns.relplot(data=df, x=\"math score\", y=\"reading score\", hue=\"gender\", kind=\"line\")","a3d1be93":"sns.displot(df, x=\"math score\", hue=\"gender\", kind=\"kde\", multiple=\"stack\")","4a91dd1a":"sns.displot(df, x=\"math score\", hue=\"gender\", kind=\"ecdf\")","354d67cc":"fig, axes = plt.subplots(1, 3, figsize=(30,12))\nfig.suptitle('Scores for gender')\n\n\nfor i, score in enumerate(['math score', 'reading score', 'writing score']):\n\n    sns.histplot(ax=axes[i], x=score, data=df, hue='gender')\n    axes[i].set_title(score)\n    plt.setp(axes[i].get_legend().get_texts(), fontsize='15')\n    plt.setp(axes[i].get_legend().get_title(), fontsize='16') ","ebede3c8":"def function_plot_all_scores(title, data, hue):\n    fig, axes = plt.subplots(1, 3, figsize=(24,6))\n    fig.suptitle(title)\n\n    scores = ['math score', 'reading score', 'writing score']\n    for i, score in enumerate(scores):\n        sns.kdeplot(ax=axes[i], x=score, data=data, hue=hue, linewidth=2, fill=True, alpha=.2)\n        axes[i].set_title(score)  \n        plt.setp(axes[i].get_legend().get_texts(), fontsize='11')\n        plt.setp(axes[i].get_legend().get_title(), fontsize='13')","8476dc95":"function_plot_all_scores('Scores for test preparation', df, 'test_preparation')","56b8e809":"function_plot_all_scores('Scores for lunch', df, 'lunch')","ff7bd51c":"function_plot_all_scores('Scores for education level', df, 'education_level')","a2c43e04":"df = pd.get_dummies(df, columns=['gender','race_ethnicity', 'education_level', 'lunch', 'test_preparation'],\n              drop_first=True)","3c2d3075":"df.head()","b4633ad5":"df['score'] =  df[['math score', 'reading score', 'writing score']].apply(np.mean, axis=1)\ndf['score'] = df['score'].apply(lambda x : int(x))\ndf.drop(['math score', 'reading score', 'writing score'], inplace=True, axis=1)","30002f6f":"df.head()","06fb6d95":"X = df.drop(['score'], axis=1)\nY = df['score']","091d229f":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.4, random_state=0)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","8cc42fd9":"train_data = lgb.Dataset(X_train, label=y_train)\nvalid_data = lgb.Dataset(X_test, label=y_test)\nparameters = {\n    'objective': 'regression',\n    'metric': 'mse',#mean squared error\n    'is_unbalance': 'true',\n    'boosting': 'gbdt',\n    'num_leaves': 63,\n    'feature_fraction': 0.5,\n    'bagging_fraction': 0.5,\n    'bagging_freq': 20,\n    'learning_rate': 0.01,\n    'verbose': -1\n}\nmodel_lgbm = lgb.train(parameters,\n                           train_data,\n                           valid_sets=valid_data,\n                           num_boost_round=1000,\n                           early_stopping_rounds=50)","2d88e861":"lgb.plot_importance(model_lgbm, figsize=(26, 12))","f5a78585":"predictions = model_lgbm.predict(X_test)\nprint('Mean squared error:', mean_squared_error(y_test, predictions))\nprint('Squared Mean squared error:', np.sqrt(mean_squared_error(y_test, predictions)))\nprint('Mean absolute error:', mean_absolute_error(y_test, predictions))","75b031c2":"from sklearn.linear_model import LinearRegression\nimport statsmodels.api as sm\nfrom sklearn.model_selection import cross_validate\n\nX_constant = sm.add_constant(X)\nlin_reg = sm.OLS(Y, X_constant).fit()\nlin_reg.summary()","6c2d5076":"df.head()","f893cea2":"LR = LinearRegression()\nLR","a92f6658":"LR.fit(X,Y)\n","984907b3":"# We can output a prediction:\nYhat=LR.predict(X)\nYhat[0:5]","eb7a5e8c":"# Value of the intercept (a)\nLR.intercept_","e6e2b4e2":"# Value of the slope (b)\nLR.coef_\n","82738eaf":"plt.figure(figsize=(20, 10))\nax1 = sns.distplot(df['score'], hist=False, color=\"r\", label=\"Actual Value\")\nsns.distplot(Yhat, hist=False, color=\"b\", label=\"Fitted Values\" , ax=ax1)\nplt.title('Actual vs Fitted Values for Score')\nplt.xlabel('Score')\nplt.ylabel('All features')\nplt.show()\nplt.close()\n","1610c0e8":"results = cross_validate(LR, X_train, y_train, cv=10, return_estimator=True)\n\nscores = results['test_score']\nprint(\"Scores:\",scores)\nprint(\"Mean:\", scores.mean())\nprint(\"Standard deviation:\", scores.std())\n","af6be0a6":"Function corr() is used to find the pairwise correlation of all columns in the dataframe.","9a4e1f82":"**Summarizing**","b2d29be8":"**Linear Regression**","d28d1322":"**Distribution of writing score**","357ece37":"**Enumerate scores for gender**","fe0d1f6f":"**Math score for gender = female and gender = male**","51fa3e94":"Reading score VS Writing Score VS Math Score Kde Plot System Analysis","14785c8c":"Bar plot with two methods ","d8f9c66f":"**Distribution of reading score **","0bbcd4e9":"**Convert categorical data into dummy variables**","e077f566":"Replacing the name of the column \"race\/ethincity\" with ","77034968":"Function value_counts() function returns object containing counts of unique values.","4fcba1bd":"Unique values in data","aa288deb":"**Test preparation by education level**","ecb0967e":"**Function that enumerate scores with parametre data and hue**","e41faf74":"**Math score by gender with different viz**","a228fbbb":"To get the list of indices we use the .index ","fd22b9f7":"Without gender","a06cdc44":"Number of observations that are null by two methods:","011ce312":"**Distribution of math score**","66306c01":"**Combine score of student in total score**","cc44929f":"relplot() function that provides access to several different axes-level functions that show the relationship between two variables with semantic mappings of subsets."}}