{"cell_type":{"eb034e23":"code","b4aec337":"code","5e6e91fb":"code","9343bd03":"code","3735eeb0":"code","90001121":"code","6d635f56":"code","6ec7c584":"code","c9b36322":"code","a56494b5":"code","f603b458":"code","19010802":"code","396ef820":"code","f61a6095":"code","e499059b":"markdown","27a91439":"markdown","8136408f":"markdown"},"source":{"eb034e23":"import pandas as pd\nimport numpy as np\n\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\n\nfrom sklearn.metrics import accuracy_score, precision_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.ensemble import StackingClassifier\n\nfrom sklearn.metrics import auc, roc_curve\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import label_binarize, LabelEncoder\nfrom sklearn.multiclass import OneVsRestClassifier\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style('darkgrid')\ntrain_path = '..\/input\/tabular-playground-series-may-2021\/train.csv'\ntest_path = '..\/input\/tabular-playground-series-may-2021\/test.csv'\nRS = 69420","b4aec337":"df = pd.read_csv(train_path, index_col=0)\n\ndic={\"Class_1\":0,\"Class_2\":1,\"Class_3\":2,\"Class_4\":3}\ndf['target'].replace(dic,inplace=True)\n\nX = df.iloc[:, :-1].values\ny = df.iloc[:, -1].values\n\nX.shape, y.shape","5e6e91fb":"# from sklearn.ensemble import IsolationForest\n\n# X_train, y_train, X_test, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=RS)\n\n# # fit the model\n# clf = IsolationForest(max_samples=100, random_state=RS, bootstrap=True, n_jobs=-1, verbose=1)\n# clf.fit(X_train)\n# y_pred_train = clf.predict(X_train)\n# y_pred_test = clf.predict(X_test)\n# y_pred_outliers = clf.predict(X_outliers)\n\n# # plot the line, the samples, and the nearest vectors to the plane\n# xx, yy = np.meshgrid(np.linspace(-5, 5, 50), np.linspace(-5, 5, 50))\n# Z = clf.decision_function(np.c_[xx.ravel(), yy.ravel()])\n# Z = Z.reshape(xx.shape)\n\n# plt.title(\"IsolationForest\")\n# plt.contourf(xx, yy, Z, cmap=plt.cm.Blues_r)\n\n# b1 = plt.scatter(X_train[:, 0], X_train[:, 1], c='white',\n#                  s=20, edgecolor='k')\n# b2 = plt.scatter(X_test[:, 0], X_test[:, 1], c='green',\n#                  s=20, edgecolor='k')\n# c = plt.scatter(X_outliers[:, 0], X_outliers[:, 1], c='red',\n#                 s=20, edgecolor='k')\n# plt.axis('tight')\n# plt.xlim((-5, 5))\n# plt.ylim((-5, 5))\n# plt.legend([b1, b2, c],\n#            [\"training observations\",\n#             \"new regular observations\", \"new abnormal observations\"],\n#            loc=\"upper left\")\n# plt.show()","9343bd03":"LGBM_TUNED_PARAM = {'lambda_l1': 0.04016285023112862, 'lambda_l2': 1.3570007347597148e-08, 'num_leaves': 27, 'feature_fraction': 0.7511109565597812, 'bagging_fraction': 0.7052737431683656, 'bagging_freq': 2, 'random_seed': 6150, 'min_child_samples': 86}\nXGB_TUNED_PARAM =  {'objective': 'multi:softprob', 'num_class': 4, 'learning_rate': 0.05, 'eval_metric': 'mlogloss','subsample': 0.6, 'colsample_bytree': 0.6,'colsample_bylevel': 1,'eta': 0.3,'reg_alpha': 0,'reg_lambda': 1,'max_depth': 3,'min_child_weight': 1}\nCAT_TUNED_PARAM = {'depth': 3, 'l2_leaf_reg': 4.287566030099442, 'bagging_temperature': 27.174417642203863, 'auto_class_weights': None, 'loss_function': 'MultiClassOneVsAll','eval_metric': 'MultiClassOneVsAll','grow_policy': 'Lossguide','bootstrap_type': 'Poisson','iterations':10000,'max_bin': 484, 'min_data_in_leaf': 414,'task_type':'GPU','subsample': 0.13534551086578891,'max_ctr_complexity':10}","3735eeb0":"cv = StratifiedKFold(n_splits=10, shuffle=True, random_state=RS)","90001121":"estimators = [\n              ('XGB_DEFAULT', XGBClassifier(objective = 'multi:softprob', num_class = 4, tree_method='gpu_hist')),\n              ('LGBM_DEFAULT', LGBMClassifier(device='gpu')),\n              ('CAT_DEFAULT', CatBoostClassifier(task_type='GPU')),\n              ('CAT_TUNED', CatBoostClassifier(**CAT_TUNED_PARAM)),\n              ('XGB_TUNED', XGBClassifier(**XGB_TUNED_PARAM, tree_method='gpu_hist'))\n             ]\n\nfinal = LGBMClassifier(**LGBM_TUNED_PARAM, device='gpu')","6d635f56":"classifier = StackingClassifier(estimators=estimators,\n                                final_estimator=final,\n                                cv=cv,\n                                verbose=1,\n                                passthrough=True)","6ec7c584":"%%time\nclassifier.fit(X, y)","c9b36322":"submission = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv', index_col = 0)\nsubmission","a56494b5":"test = pd.read_csv(test_path, index_col = 0)","f603b458":"preds = classifier.predict_proba(test)","19010802":"submission['Class_1'] = preds[:, 0]\nsubmission['Class_2'] = preds[:, 1]\nsubmission['Class_3'] = preds[:, 2]\nsubmission['Class_4'] = preds[:, 3]","396ef820":"submission","f61a6095":"submission.to_csv('submission.csv')","e499059b":"# Outlier Detection with Isolation Forest","27a91439":"# Stack Models","8136408f":"# Import Libraries"}}