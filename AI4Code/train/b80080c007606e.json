{"cell_type":{"5325d4a0":"code","ad4a6d63":"code","9975b227":"code","5a8e62d3":"code","7485f204":"code","ea69639f":"code","a713bb2b":"code","5596a86a":"code","593179d0":"code","7b0c786e":"code","54415569":"code","4ab07aeb":"code","4d3e99d3":"code","92230d03":"code","7b3dc3e6":"code","5adab2bf":"code","6e35a142":"code","5f7bdb49":"code","50d825de":"code","89dfc165":"code","d2d69f1e":"code","4446f161":"code","cbb98fb8":"code","1b3485c5":"code","2d800564":"code","2834a56c":"code","4761ec89":"code","108cf19f":"markdown","7eb18540":"markdown","e4a365f1":"markdown","bfda4644":"markdown","ad4bb6bb":"markdown","4b907a9f":"markdown","5c7b3730":"markdown","10e10a82":"markdown"},"source":{"5325d4a0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad4a6d63":"from sklearn import feature_extraction, linear_model, model_selection, preprocessing","9975b227":"train_df = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest_df = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')\n","5a8e62d3":"\ntrain_df.head()\n","7485f204":"test_df.head()","ea69639f":"!pip install tweet-preprocessor","a713bb2b":"train_df = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')","5596a86a":"train_df.count()","593179d0":"train_df = train_df.dropna()\ntrain_df = train_df.drop_duplicates()","7b0c786e":"train_df.count()","54415569":"train_df.head()","4ab07aeb":"import preprocessor as p\n\ndef preprocess_tweet(row):\n    text = row['text']\n    text = p.clean(text)\n    return text","4d3e99d3":"train_df['text'] = train_df.apply(preprocess_tweet, axis=1)","92230d03":"train_df.head()","7b3dc3e6":"from gensim.parsing.preprocessing import remove_stopwords\n\ndef stopword_removal(row):\n    text = row['text']\n    text = remove_stopwords(text)\n    return text","5adab2bf":"train_df['text'] = train_df.apply(stopword_removal, axis=1)","6e35a142":"train_df.head()","5f7bdb49":"train_df['text'] = train_df['text'].str.lower().str.replace('[^\\w\\s]',' ').str.replace('\\s\\s+', ' ')","50d825de":"train_df.head()","89dfc165":"from sklearn.feature_extraction.text import TfidfVectorizer\n\ntweets = train_df['text']\nvectorizer = TfidfVectorizer(stop_words='english')\n\n# Learn vocabulary from sentences. \nvectorizer.fit(tweets)\n\n# Get vocabularies.\nvectorizer.vocabulary_","d2d69f1e":"import nltk\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import CountVectorizer\n\nstopwords = stopwords.words('english')\n\nprint(stopwords)\n\ncount_vector = CountVectorizer(token_pattern=r'\\w{1,}', ngram_range=(1, 2), stop_words = stopwords)","4446f161":"from sklearn.model_selection import train_test_split\nX = train_df.text\ny = train_df.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1)","cbb98fb8":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline\n\nclf = LogisticRegression()\npipe = Pipeline([\n    ('count_vector', CountVectorizer()),  \n    ('clf', LogisticRegression()) \n])\npipe.fit(X_train,y_train)","1b3485c5":"from sklearn import metrics\npredicted = pipe.predict(X_test)","2d800564":"print(\"accuracy :\",  metrics.accuracy_score(predicted, y_test))","2834a56c":"submission = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/sample_submission.csv')\nsubmission[\"target\"] = pipe.predict(test_df.text)\nsubmission.to_csv(\"submission.csv\", index=False)","4761ec89":"submission.head(10)","108cf19f":"# **Now we can apply normal text preprocessing like**\n* Lowercasing\n* Punctuation Removal\n* Replace extra white spaces\n* Stopwords removal**\n","7eb18540":"# **Remove extra white spaces, punctuation and apply lower casing**","e4a365f1":"# **Tweet has been cleaned to normal text.**","bfda4644":"1. # **Now input tweet has been pre-processed and lets find features.**","ad4bb6bb":"# **Apply tweet preprocessing first. Define a preprocess function and use pandas apply to apply it on each value of 'text'**","4b907a9f":"# **Tweet Preprocessing **\n\nSince we are dealing with tweets in this competition, we need to do specific tweet text cleaning along with normal text pre-processing. A tweet may contains\n\n* URL's\n* Mentions\n* Hashtags\n* Emojis\n* Smileys\n* Spefic words etc..\n\nTo clean the tweet , we can use a python library tweet-preprocessor instead of writing the cleaning logic ourself.","5c7b3730":"# **Dropping duplicates and NaN from the dataframe**","10e10a82":"# Final results"}}