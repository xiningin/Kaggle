{"cell_type":{"54fe66b1":"code","d1dfcb5a":"code","7ac081ab":"code","d28cbb09":"code","78601f5f":"code","a53b3024":"code","a3229e50":"code","26e87e49":"code","901ededb":"code","e18db108":"code","1af368ca":"code","f88802b2":"code","d68c71b8":"code","ca0b7ae6":"code","17b0cec3":"code","510750fa":"code","4d581b60":"code","13681983":"code","3552285e":"code","8d40b22d":"code","2c5a46f8":"code","29735521":"code","79079262":"code","01bf3ba8":"code","5c1ac153":"code","fb858d18":"code","772db46a":"code","7084a382":"code","555e1529":"code","c19523f4":"code","2f637424":"code","c14bde0c":"code","84bf58cc":"code","7a70426f":"code","ce3169d9":"code","3eb508d8":"code","7d413598":"code","1e33dd37":"code","9ee29098":"code","eb7ac441":"code","4b6b74d1":"code","123c61b1":"code","71475da5":"code","3e87ade5":"code","2b3afdbe":"code","7f16a7dd":"code","c4269066":"code","e769eaf9":"code","13eced2f":"code","63f95792":"code","5f019329":"code","e942421a":"code","a944f434":"code","ecca59bf":"code","725ca693":"code","336ce1a7":"code","06844e5a":"code","99eb41fb":"code","2f6c59cc":"code","c00d3aa4":"code","1064e951":"code","26e3c7ef":"code","a2334a45":"code","98978e80":"code","7d9a60ed":"code","fb23555e":"code","f3efbc76":"code","a1944e3b":"code","09074459":"code","141b5f3a":"code","bc33a11a":"code","0f3c24a7":"code","3520cdb3":"code","6bdbd03a":"code","9228218f":"code","dea914e3":"code","90710640":"code","d9cef3ba":"code","fb365059":"code","b0749338":"code","b9760219":"code","50c0320a":"code","f8b748ac":"code","07efa7b3":"code","fed70b54":"code","4bfa7fa1":"code","ad8d0ad9":"code","7a66c3c2":"code","d35dfb80":"code","9f5609fa":"code","8fa80120":"code","404a1868":"code","f201c463":"code","a2e25714":"code","374868ed":"code","67c70aac":"code","5588abb8":"code","ff97b1c4":"markdown","9c47d2ad":"markdown","05c7b7fb":"markdown","1e413558":"markdown","aabbd80c":"markdown","eb7cb089":"markdown","3fc3cbcc":"markdown","c41e92c8":"markdown","b1744522":"markdown","1e6b441d":"markdown","1e9f9e13":"markdown","b6ecf5c4":"markdown","4b7161e3":"markdown","8f349251":"markdown","93a01c3f":"markdown","70a8f53a":"markdown","5e964f90":"markdown","37b8d24c":"markdown","b9236fc7":"markdown","4eaf7c54":"markdown","0f759be6":"markdown","5d79688c":"markdown","5ff8e934":"markdown","1d13a780":"markdown","741c7a68":"markdown","f4fa60a5":"markdown","2ae2f740":"markdown","3cb46d82":"markdown","eba8034f":"markdown","3d5f0537":"markdown","a476d9a1":"markdown","5688afc3":"markdown","5b1a2fdc":"markdown","0da81a7f":"markdown","80d2a447":"markdown","7f04e305":"markdown"},"source":{"54fe66b1":"import numpy as np\nimport pandas as pd\nimport re,os,time,gc\nfrom datetime import datetime\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom collections import Counter\n# visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d1dfcb5a":"chunksize=200000\nstart = time.time()\ntfr = pd.read_csv(\"..\/input\/av-june-21\/VisitorLogsData.csv\",parse_dates=True,chunksize=chunksize,iterator=True)\nvisitor_log  = pd.concat(tfr, ignore_index=True)\nend = time.time()\nprint(\"Read csv with chunks: \",(end-start),\"sec\")","7ac081ab":"visitor_log.info(null_counts=True)","d28cbb09":"visitor_log.head(2)","78601f5f":"visitor_log['ProductID'].isna().sum()","a53b3024":"print(\"Number of Products:\",len(visitor_log['ProductID'].unique()))","a3229e50":"print(\"No.of Non-registered Users:\", visitor_log['UserID'].isna().sum(),\"- \",round(((visitor_log['UserID'].isnull().sum())\/len(visitor_log))*100),\"%\")","26e87e49":"visitor_log['Activity'].fillna('pageload',inplace=True) # Those Users didnot click - just browsers","901ededb":"sum(visitor_log['Activity'].isna())","e18db108":"visitor_log['Activity'].replace(\"CLICK\",\"click\",inplace=True)\nvisitor_log['Activity'].replace(\"PageLoad\",\"pageload\",inplace=True)\nvisitor_log['Activity'].replace(\"PAGELOAD\",\"pageload\",inplace=True)","1af368ca":"visitor_log['Activity'].value_counts()","f88802b2":"sns.set_context(\"notebook\", font_scale=1.1)\nplt.figure(figsize=(5,5))\nsns.countplot(visitor_log['Activity'])","d68c71b8":"gc.collect()","ca0b7ae6":"visitor_log['Browser'].replace(\"Samsung Internet\",\"Chrome\",inplace=True)\nvisitor_log['Browser'].replace(\"Facebook\",\"Chrome\",inplace=True)\nvisitor_log['Browser'].replace(\"Apple Mail\",\"Safari\",inplace=True)\nvisitor_log['Browser'].replace(\"HeadlessChrome\",\"Chrome\",inplace=True)\nvisitor_log['Browser'].replace(\"Chrome Mobile WebView\",\"Chrome Mobile\",inplace=True)\nvisitor_log['Browser'].replace(\"Chrome Mobile iOS\",\"Chrome Mobile\",inplace=True)\nvisitor_log['Browser'].replace(\"IE\",\"Internet Explorer\",inplace=True)\nvisitor_log['Browser'].replace(\"Edge\",\"Internet Explorer\",inplace=True)","17b0cec3":"sns.set_context(\"notebook\", font_scale=1.1)\nplt.figure(figsize=(15,15))\nsns.countplot(y=visitor_log['Browser'])","510750fa":"gc.collect()","4d581b60":"visitor_log['OS'].value_counts()","13681983":"visitor_log['OS']=visitor_log['OS'].replace(\"windows\",\"Windows\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"Windows Phone\",\"Windows\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"Mac OS X\",\"iOS\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"mac os x\",\"iOS\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"ios\",\"iOS\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"android\",\"Android\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"linux\",\"Linux\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"ubuntu\",\"Ubuntu\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"solaris\",\"Solaris\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"freebsd\",\"FreeBSD\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"fedora\",\"Fedora\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"chrome os\",\"Chrome OS\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"tizen\",\"Other\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"Tizen\",\"Other\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"Kindle\",\"Other\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"NetBSD\",\"Other\")\nvisitor_log['OS']=visitor_log['OS'].replace(\"other\",\"Other\")","3552285e":"sns.set_context(\"notebook\", font_scale=1.1)\nplt.figure(figsize=(10,5))\nsns.countplot(y=visitor_log['OS'])","8d40b22d":"gc.collect()","2c5a46f8":"visitor_log['VisitDateTime'].isnull().sum()","29735521":"visitor_log['VisitDateTime'].fillna(\"2018-05-07 00:00:00\",inplace=True) # first day of visitors_log to be considered, time is random","79079262":"visitor_log['VisitDateTime'].isnull().sum()","01bf3ba8":"for col in visitor_log.columns[2:9]:\n    if visitor_log[col].dtype=='object':\n        visitor_log[col]=visitor_log[col].astype('category')\n        \nvisitor_log.info(null_counts=True)","5c1ac153":"user_data = pd.read_csv(\"..\/input\/av-june-21\/userTable.csv\")\nuser_data['Signup Date']=user_data['Signup Date'].astype('datetime64[ns]')\nuser_data.info()","fb858d18":"user_data.head(2)","772db46a":"print(\"No.of UserIDs:\",len(user_data['UserID'].unique()))\nprint()\nprint(\"End_Date_Time  :\",user_data['Signup Date'].max())\nprint()\nprint(\"Start_Date_Time:\",user_data['Signup Date'].min())","7084a382":"log_data = visitor_log[visitor_log['UserID']!=\"\"]\nlog_data.head()","555e1529":"len(list(set(log_data['UserID'].unique())))","c19523f4":"filtered_df = log_data.loc[log_data[\"VisitDateTime\"].between('2018-05-07', '2019-05-27')]\nfiltered_df.info()","2f637424":"filtered_df.head(2)","c14bde0c":"print(\"End_Date_Time  :\",filtered_df['VisitDateTime'].max())\nprint()\nprint(\"Start_Date_Time:\",filtered_df['VisitDateTime'].min())","84bf58cc":"filtered_df.info()","7a70426f":"d_values= filtered_df[\"VisitDateTime\"].values\nd_values","ce3169d9":"visitor_log2 = log_data.loc[~log_data['VisitDateTime'].isin(d_values)]\nvisitor_log2.head()","3eb508d8":"filtered_df['VisitDateTime']=filtered_df['VisitDateTime'].astype('datetime64[ns]')\nfiltered_df.info()","7d413598":"impute_fn = lambda x: pd.to_datetime(int(str(x)))","1e33dd37":"visitor_log2[\"VisitDateTime\"] = visitor_log2[\"VisitDateTime\"].apply(impute_fn)","9ee29098":"visit_log_data = pd.concat([visitor_log2,filtered_df],ignore_index=True)","eb7ac441":"visit_log_data.info()","4b6b74d1":"print(\"No.of Registered Users:\",len(visit_log_data['UserID'].unique()))","123c61b1":"print(\"Start Date:\",visit_log_data[\"VisitDateTime\"].min())","71475da5":"print(\"End Date:\",visit_log_data[\"VisitDateTime\"].max())","3e87ade5":"visit_log_data.head(5) # converted VisitDateTime formats to datetime64 datatype","2b3afdbe":"# delete unused variables\n\ndel visitor_log,visitor_log2,filtered_df,d_values,log_data\ngc.collect()","7f16a7dd":"if_data= pd.merge(\n    left=visit_log_data,\n    right=user_data,\n    how=\"inner\",\n    on='UserID',\n    sort=True,\n    copy=True)","c4269066":"if_data['VisitDateTime']=if_data['VisitDateTime'].astype('datetime64[ns]')","e769eaf9":"convert2date_fn = lambda x: x.strftime(\"%Y-%m-%d\")\nif_data['VisitDate'] = if_data['VisitDateTime'].apply(convert2date_fn)\nif_data['Sign_Date'] = if_data['Signup Date'].apply(convert2date_fn)","13eced2f":"if_data2 = if_data[[\"Signup Date\",\"Sign_Date\",\"UserID\",\"VisitDate\",\"VisitDateTime\",\"webClientID\",\"Browser\",\"Activity\",\"ProductID\",\"OS\",\"User Segment\",\n          \"City\",\"Country\"]]","63f95792":"if_data2.drop(['User Segment','City','Country'],axis=1,inplace=True)","5f019329":"if_data2['VisitDate']= if_data2['VisitDate'].astype('datetime64[ns]')\nif_data2['Sign_Date']=if_data2['Sign_Date'].astype('datetime64[ns]')\nif_data2['ProductID'] = if_data2['ProductID'].str.upper()","e942421a":"if_data2=if_data2.drop_duplicates(subset = ['UserID', 'webClientID','VisitDateTime'], keep = 'first').reset_index(drop = True)","a944f434":"for col in if_data2.columns[1:]:\n    if if_data2[col].dtype=='object':\n        if_data2[col]=if_data2[col].astype('category')\n\nif_data2.info()","ecca59bf":"if_data2.isnull().sum()","725ca693":"if_data2.head()","336ce1a7":"if_data2.to_csv(\"processed_df.csv\",index=False) # Save as csv file for future use","06844e5a":"#inputdf = read.csv(\"..\/input\/av-june-21\/processed_df.csv\")","99eb41fb":"input_feat_table_sub= pd.read_csv(\"..\/input\/av-june-21\/submission_AV_june_21.csv\") # submission dataframe\ninput_feat_table_sub.head(2)","2f6c59cc":"data_7days = if_data2[if_data2['VisitDate']>'2018-05-20']\ndata_7days.min(),data_7days.max()","c00d3aa4":"days_active_week = data_7days.groupby('UserID')['VisitDate'].nunique()\ndays_active_week.values","1064e951":"input_feat_table_sub['No_of_days_Visited_7_Days']=list(days_active_week.values)\ninput_feat_table_sub.iloc[:10,:2]","26e3c7ef":"del days_active_week\ngc.collect()","a2334a45":"data_15days = if_data2[if_data2['VisitDate']>'2018-05-12']\ndata_15days.min(),data_15days.max()","98978e80":"data_15days.isnull().sum()","7d9a60ed":"data_15days.dropna(inplace=True)","fb23555e":"products_viewed_15days = data_15days.groupby(['UserID']).ProductID.nunique()\nproducts_viewed_15days","f3efbc76":"data_15days[data_15days.UserID=='U100004'].ProductID.nunique()","a1944e3b":"input_feat_table_sub[\"No_Of_Products_Viewed_15_Days\"]=list(products_viewed_15days.values)\ninput_feat_table_sub.iloc[:5,:3]","09074459":"del products_viewed_15days\ngc.collect()","141b5f3a":"user_data = pd.read_csv(\"..\/input\/av-june-21\/userTable.csv\")\nuser_data = user_data.sort_values(by=['UserID']).reset_index()\nuser_data.head()","bc33a11a":"dates = user_data['Signup Date']","0f3c24a7":"from datetime import datetime\n\nfmt = '%Y-%m-%d'\nlast_date = datetime.strptime('2018-05-27',fmt)\nlast_date","3520cdb3":"def vintage_days(date1,date2):\n    fmt = '%Y-%m-%d'\n    return abs((datetime.strptime(date1,fmt)-date2).days)+1","6bdbd03a":"vintage= [vintage_days(str(elem)[:10],last_date) for elem in dates]\nvintage[:10]","9228218f":"input_feat_table_sub[\"User_Vintage\"]= vintage\ninput_feat_table_sub.iloc[:5,:4]","dea914e3":"data_15days = if_data2[if_data2['VisitDate']>'2018-05-12']\ndata_15days.isnull().sum()","90710640":"pageloads_15days = data_15days[data_15days.Activity=='pageload']\npageloads_15days.head()","d9cef3ba":"print(\"END_DATE:\",pageloads_15days.VisitDate.max(),\"START_DATE:\",pageloads_15days.VisitDate.min())","fb365059":"most_view_prod=pageloads_15days.groupby(['UserID','ProductID']).\\\nagg({'Activity':'count','VisitDateTime':'max'})\nmost_view_prod.head()","b0749338":"#most_view_prod_15d = most_view_prod_15d.reset_index()\n\n#most_view_prod_15d_grp = most_view_prod_15d.sort_values(['Activity','VisitDateTime'], ascending=False).drop_duplicates(['UserID'])\n#most_view_prod_15d_grp =most_view_prod_15d_grp.sort_values('UserID')\n\n#most_view_prod = most_view_prod_15d_grp[['UserID','ProductID']]","b9760219":"#most_view_prod_15d ","50c0320a":"#input_feat_table_sub['Most_Viewed_product_15_Days']=most_view_prod","f8b748ac":"counts_os = if_data2.groupby('UserID')['OS'].value_counts()\nd=counts_os.to_dict()","07efa7b3":"x = dict(d.keys())\ns = list(x.values())","fed70b54":"input_feat_table_sub['Most_Active_OS']= s\n\ninput_feat_table_sub.iloc[:5,:]","4bfa7fa1":"gc.collect()","ad8d0ad9":"recent_dates = if_data2.groupby(\"UserID\")[\"VisitDateTime\"].max().values\nlen(recent_dates)","7a66c3c2":"recent_product={}\nfor i in range(0,len(if_data2)):\n    if if_data2.VisitDateTime[i] in recent_dates:\n        recent_product[if_data2['UserID'][i]]=if_data2['ProductID'][i]","d35dfb80":"most_recent_product = [recent_product[i] for i in recent_product]","9f5609fa":"most_recent_product[:10]","8fa80120":"input_feat_table_sub['Recently_Viewed_Product']=most_recent_product\ninput_feat_table_sub.replace('NA_Product','Product101',inplace=True)\ninput_feat_table_sub.iloc[:5,:8]","404a1868":"pageloads_last_7days = data_7days[data_7days[\"Activity\"]=='pageload']\npageloads_last_7days.head(2)","f201c463":"input_feat_table_sub['Pageloads_last_7_days']=list(pageloads_last_7days.groupby('UserID')['Activity'].count().values)\ninput_feat_table_sub.iloc[:5,:8]","a2e25714":"gc.collect()","374868ed":"clicks_last_7days = data_7days[data_7days[\"Activity\"]=='click']\nclicks_last_7days.head(2)","67c70aac":"input_feat_table_sub['Clicks_last_7_days']=list(clicks_last_7days.groupby('UserID').Activity.count().values)\ninput_feat_table_sub.iloc[:5,:]","5588abb8":"input_feat_table_sub.to_csv(\"submission.csv\",index=False)","ff97b1c4":"### Process to create Input Feature:\n\nWhen ComZ does a targeting campaign, It follows the below process:\n\n![av.jpeg](attachment:ea82f48a-4bae-4ed5-8d57-77157a897298.jpeg)","9c47d2ad":">#### No_Of_Products_Viewed_15_Days:\n\nNumber of Products viewed by the user in the last 15 days","05c7b7fb":"### Filter the VisitDateTime strings from Visitor_log data ","1e413558":">#### Clicks_last_7_days: Count of Clicks in the last 7 days by the user","aabbd80c":"#### Convert the Unix timestamps of visitor_log2 into datetime64 format ","eb7cb089":"#### WebClientID\n\nUnique ID of browser for every system. (If a visitor is using multiple browsers on a system like Chrome, Safari, then there would be a different web clientid for each browser). The ID remains consistent unless the user clears their cookie.\n\n#### VisitDateTime\nDate and time of visit. There are two different formats for DateTime. \n\n>One is in datetime format \u201c2018-05-07 04:28:45.970\u201d\n\n>Another one is in unix datetime format \u201c1527051855673000000\u201d\n\n#### ProductID\nUnique ID of product browsed\/ clicked by the visitor\n\n#### UserID\nUnique ID of the registered user. As expected, this is available for registered users only, not for all visitors. \n\n#### Activity\nType of activity can be browsing (pageload) or clicking a product\n\n#### Browser\nBrowser used by the visitor\n\n#### OS\nOperating System of the system used by the visitor\n\n#### City\nCity of the visitor\n\n#### Country\nCountry of the visitor","3fc3cbcc":"#### We are supposed to generate an input feature set as on 28-May-2018. So, the visitor table is from 07-May-2018 to 27-May-2018.","c41e92c8":"Client **ComZ** is an ecommerce company. The company wants to focus on targeting the right customers  with the right products to increase overall revenue and conversion rate.\n\nTo target the right customers with the right products, they need to build an ML model for marketing based on user interaction with products in the past like number of views,  most viewed product, number of activities of user, vintage of user and others. \n\nComZ has contacted the Data Science and Engineering team to use this information to fuel the personalized advertisements, email marketing campaigns, or special offers on the landing and category pages of the company's website.\n\nYou, being a part of the data engineering team, are expected to \u201cDevelop input features\u201d  for the efficient marketing model given the Visitor log data and User Data.","b1744522":">#### No_of_days_Visited_7_Days\u00b6:\n\n\nNo.of days users visited in the last 7 days,i.e., 2018-05-21 to 2018-05-27.\nHow many days a user was active on platform in the last 7 days","1e6b441d":"### Splitting the original data into filtered_df and visitor_log2 and merging after processing VisitDateTime column","1e9f9e13":"#### Filtering the data based on start date and end date specified in the problem statemet","b6ecf5c4":">#### Most_Viewed_product_15_Days: \n\nMost frequently viewed (page loads) product by the user in the last 15 days. If there are multiple products that have a similar number of page loads then , consider the recent one. If a user has not viewed any product in the last 15 days then put it as Product101.","4b7161e3":"### User_ID","8f349251":"### Activity","93a01c3f":">#### User_Vintage\n\nVintage (In Days) of the user as of today","70a8f53a":"### VisitDateTime","5e964f90":"#### Product_ID","37b8d24c":">#### Most_Active_OS:\n\nMost Frequently used OS by user","b9236fc7":"### Browser","4eaf7c54":"### OS","0f759be6":"# END","5d79688c":">### Recently Viewed Product\n\nMost recently viewed (page loads) product by the user. If a user has not viewed any product then put it as Product101.","5ff8e934":"## Input Feature table","1d13a780":"### Submission:\n\nUse Visitor Log Data and User Data to generate the features mentioned in the sample submission \n\nYou are supposed to generate all the features for all the users as mentioned in the sample submission or input feature table \n\nMake sure your submission file\u2019s rows (user ids) are in the same order as mentioned in the sample submission.","741c7a68":"### Creating input feature table from submission file","f4fa60a5":"### Joinging user_data and visit_log_data to make the raw table.\n-From the raw table, we'll gather the following information required to make INPUT: input_feature_df.\n\n### Input Feature Dataframe","2ae2f740":"### Check the preprocessed visitor details dataframe\n\n- filtered out UsedIDs =nan \n\n- Selected the rows from dates between 07\/05\/2018 & 27\/06\/2018","3cb46d82":"## Marketplace Feature Table ","eba8034f":"## Check missing values","3d5f0537":">#### Pageloads_last_7_days: Count of Page loads in the last 7 days by the user","a476d9a1":"#### 6.5 million rows and 9 columns","5688afc3":"## Visitor Log Data\n\nIt is a browsing log data of all the visitors and the users. This contains the following information:","5b1a2fdc":"### Joinging user_data and visit_log_data to make the raw table.\n-From the raw table, we'll gather the following information required to make INPUT: input_feature_df.\n\n### Input Feature Dataframe\n\n-UserID\n\n-No_of_days_Visited_7_Days\u00b6:How many days a user was active on platform in the last 7 days\n\n-No_Of_Products_Viewed_15_Days:Number of Products viewed by the user in the last 15 days\n\n-User_Vintage:Vintage (In Days) of the user as of today\n\n-Most_Viewed_product_15_Days: Most frequently viewed (page loads) product by the user in the last 15 days. If there are multiple products that have a similar number of page loads then , consider the recent one. If a user has not viewed any product in the last 15 days then put it as Product101.\n\n-Most_Active_OS:Most Frequently used OS by user\n\n-Recently_Viewed_Product: Most recently viewed (page loads) product by the user. If a user has not viewed any product then put it as Product101.\n\n-Pageloads_last_7_days: Count of Page loads in the last 7 days by the user\n\n-Clicks_last_7_days: Count of Clicks in the last 7 days by the user","0da81a7f":"## User Data\nIt has registered user information like signup date and segment.","80d2a447":"#### We'll drop all non-registered\/ na values after processissing last column","7f04e305":"> UserID-\nUnique ID of the registered user.\n\n> Signup Date-\nDate of registration for the user\n\n> User Segment-\nUser Segment (A\/B\/C) created based on historical engagement\n\nNow based on the above information,we need to create an input feature set for the Marketing Model."}}