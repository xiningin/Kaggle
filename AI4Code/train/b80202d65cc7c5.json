{"cell_type":{"e5c5552e":"code","c5ccc4a2":"code","ecf87d49":"code","577ecc4f":"code","add7b1f6":"code","c472df22":"code","ea3bc359":"markdown","136093b8":"markdown","a5716fec":"markdown","ef9a271d":"markdown","37785e0f":"markdown","fcbaefba":"markdown"},"source":{"e5c5552e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c5ccc4a2":"df = pd.read_csv('\/kaggle\/input\/medical_examination.csv')","ecf87d49":"df['overweight'] = (df['weight'] \/ (df['height'] \/ 100) ** 2) > 25","577ecc4f":"medical_dict = { 1: 0, 2: 1, 3: 1}\ndf['cholesterol'] = df['cholesterol'].map(medical_dict)\ndf['gluc'] = df['gluc'].map(medical_dict)","add7b1f6":"# Create DataFrame for cat plot using `pd.melt` using just the values from 'cholesterol', 'gluc', 'smoke', 'alco', 'active', and 'overweight'.\ndf_cat = pd.melt(\n        frame=df, value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'], \n        id_vars=['cardio']\n    )\n\n# Group and reformat the data to split it by 'cardio'. Show the counts of each feature. You will have to rename one of the collumns for the catplot to work correctly.\n\ndf_cat = pd.DataFrame(\n        df_cat.groupby(\n                ['variable', 'value', 'cardio'])['value'].count()).rename(\n                columns={'value': 'total'}).reset_index()\n\n# Set up the matplotlib figure and draw the catplot\nsns.catplot(x='variable', y='total', data=df_cat, hue='value', col='cardio', kind='bar')\n","c472df22":"# Clean the data\ndf_heat = df[(df['ap_lo'] <= df['ap_hi']) & \n        (df['height'] >= df['height'].quantile(0.025)) &\n        (df['height'] <= df['height'].quantile(0.975)) &\n        (df['weight'] >= df['weight'].quantile(0.025)) & \n        (df['weight'] <= df['weight'].quantile(0.975))]\n\n# Calculate the correlation matrix\ncorr = df_heat.corr()\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nfig, ax = plt.subplots(figsize=(10, 12))\n\n# Draw the heatmap with the mask\nsns.heatmap(corr, annot=True, fmt='.1f', mask=mask, vmin=.16, vmax=.32, center=0, square=True, linewidths=.5, cbar_kws={'shrink':.45, 'format':'%.2f'})\n","ea3bc359":"## Normalize data by making 0 always good and 1 always bad. If the value of 'cholestorol' or 'gluc' is 1, make the value 0. If the value is more than 1, make the value 1.","136093b8":"# Draw Heat map","a5716fec":"## Import data","ef9a271d":"## Add Overweight column","37785e0f":"# Draw Categorical Plot","fcbaefba":"## In this project, you will visualize and make calculations from medical examination data using matplotlib, seaborn, and pandas. The dataset values were collected during medical examinations.\n\n"}}