{"cell_type":{"97a9a307":"code","84efda75":"code","1ce3aa76":"code","559ee719":"code","72aa180f":"code","3d59acfd":"code","e065b4c1":"markdown","45b04f81":"markdown","eb2305e0":"markdown","2fba33ab":"markdown","e302ad4a":"markdown","d5e7f0bd":"markdown"},"source":{"97a9a307":"import requests\nimport gzip\nimport json\nfrom tqdm import tqdm\nfrom datetime import datetime\n\nurl_fmt = 'https:\/\/nvd.nist.gov\/feeds\/json\/cve\/1.1\/nvdcve-1.1-{}.json.gz'\n\ncve_items = list()\n\nfor year in tqdm(range(2002, 2021)):\n    content = requests.get(url_fmt.format(year)).content\n    json_data = gzip.decompress(content)\n    data = json.loads(json_data)\n    cve_items += data['CVE_Items']","84efda75":"from tqdm import tqdm\n\ndescriptions = list()\n\nfor cve_item in tqdm(cve_items):\n    description_data = cve_item['cve']['description']['description_data']\n    for datum in description_data:\n        if datum['lang'] == 'en':\n            description = datum['value']\n            break\n    else:\n        continue\n    sentences = [description]\n    descriptions.append(sentences)\n    \n    \nwith open('\/kaggle\/working\/cve-description-corpus.txt', 'w') as f:\n    for description in descriptions:\n        for sentence in description:\n            f.write(sentence)\n            f.write('\\n')","1ce3aa76":"!pip install tokenizers\n\nimport tokenizers\n\nbwpt = tokenizers.BertWordPieceTokenizer()\n\nfilepath = '\/kaggle\/working\/cve-description-corpus.txt'\n\nbwpt.train(\n    files=[filepath],\n    vocab_size=50000,\n    min_frequency=3,\n    limit_alphabet=1000,\n)\n\nvocabs = bwpt.get_vocab().keys()\n\nwith open('\/kaggle\/working\/cve-description-vocab.txt', 'w') as f:\n    for vocab in vocabs:\n        f.write(vocab)\n        f.write('\\n')","559ee719":"import pandas as pd\nfrom tqdm import tqdm\n\nrows = list()\n\nfor cve_item in tqdm(cve_items):\n    CVEID = cve_item['cve']['CVE_data_meta']['ID']\n    \n    description_data = cve_item['cve']['description']['description_data']\n    for datum in description_data:\n        if datum['lang'] == 'en':\n            Description = datum['value']\n            break\n    else:\n        continue\n        \n    try:\n        cvssV3 = cve_item['impact']['baseMetricV3']['cvssV3']\n    except:\n        continue\n    \n    CVSSVectorString = cvssV3['vectorString']\n    AttackVector = cvssV3['attackVector']\n    AttackComplexity = cvssV3['attackComplexity']\n    PrivilegesRequired = cvssV3['privilegesRequired']\n    UserInteraction = cvssV3['userInteraction']\n    Scope = cvssV3['scope']\n    ConfidentialityImpact = cvssV3['confidentialityImpact']\n    IntegrityImpact = cvssV3['integrityImpact']\n    AvailabilityImpact = cvssV3['availabilityImpact']\n    CVSSBaseScore = cvssV3['baseScore']\n    CVSSBaseSeverity = cvssV3['baseSeverity']\n    \n    rows.append(\n        [\n            CVEID,\n            Description,\n            CVSSVectorString,\n            AttackVector,\n            AttackComplexity,\n            PrivilegesRequired,\n            UserInteraction,\n            ConfidentialityImpact,\n            IntegrityImpact,\n            AvailabilityImpact,\n            Scope,\n            CVSSBaseScore,\n            CVSSBaseSeverity,\n        ]\n    )\n\ndf = pd.DataFrame(\n    rows,\n    columns=[\n        'CVEID',\n        'Description',\n        'CVSSVectorString',\n        'AttackVector',\n        'AttackComplexity',\n        'PrivilegesRequired',\n        'UserInteraction',\n        'ConfidentialityImpact',\n        'IntegrityImpact',\n        'AvailabilityImpact',\n        'Scope',\n        'CVSSBaseScore',\n        'CVSSBaseSeverity'\n    ]\n)\n\ndf.to_csv('\/kaggle\/working\/cvss-base-metrics-evaluation-results-for-cve.csv')","72aa180f":"import requests\nimport gzip\nimport json\nfrom tqdm import tqdm\nfrom datetime import datetime\n\nurl_fmt = 'https:\/\/nvd.nist.gov\/feeds\/json\/cve\/1.1\/nvdcve-1.1-{}.json.gz'\n\ncve_items = list()\n\nfor year in tqdm(range(2021, 2022)):\n    content = requests.get(url_fmt.format(year)).content\n    json_data = gzip.decompress(content)\n    data = json.loads(json_data)\n    cve_items += data['CVE_Items']","3d59acfd":"import pandas as pd\nfrom tqdm import tqdm\n\nrows = list()\n\nfor cve_item in tqdm(cve_items):\n    CVEID = cve_item['cve']['CVE_data_meta']['ID']\n    \n    description_data = cve_item['cve']['description']['description_data']\n    for datum in description_data:\n        if datum['lang'] == 'en':\n            Description = datum['value']\n            break\n    else:\n        continue\n        \n    try:\n        cvssV3 = cve_item['impact']['baseMetricV3']['cvssV3']\n    except:\n        continue\n    \n    CVSSVectorString = cvssV3['vectorString']\n    AttackVector = cvssV3['attackVector']\n    AttackComplexity = cvssV3['attackComplexity']\n    PrivilegesRequired = cvssV3['privilegesRequired']\n    UserInteraction = cvssV3['userInteraction']\n    Scope = cvssV3['scope']\n    ConfidentialityImpact = cvssV3['confidentialityImpact']\n    IntegrityImpact = cvssV3['integrityImpact']\n    AvailabilityImpact = cvssV3['availabilityImpact']\n    CVSSBaseScore = cvssV3['baseScore']\n    CVSSBaseSeverity = cvssV3['baseSeverity']\n    \n    rows.append(\n        [\n            CVEID,\n            Description,\n            CVSSVectorString,\n            AttackVector,\n            AttackComplexity,\n            PrivilegesRequired,\n            UserInteraction,\n            ConfidentialityImpact,\n            IntegrityImpact,\n            AvailabilityImpact,\n            Scope,\n            CVSSBaseScore,\n            CVSSBaseSeverity,\n        ]\n    )\n\ndf = pd.DataFrame(\n    rows,\n    columns=[\n        'CVEID',\n        'Description',\n        'CVSSVectorString',\n        'AttackVector',\n        'AttackComplexity',\n        'PrivilegesRequired',\n        'UserInteraction',\n        'ConfidentialityImpact',\n        'IntegrityImpact',\n        'AvailabilityImpact',\n        'Scope',\n        'CVSSBaseScore',\n        'CVSSBaseSeverity'\n    ]\n)\n\ndf.to_csv('\/kaggle\/working\/cvss-base-metrics-evaluation-results-for-cve-published-in-2021.csv')","e065b4c1":"## Description\n Create datasets related to [CVE](https:\/\/cve.org) and [CVSS](https:\/\/first.org\/cvss\/)\n \n## Output Files\n1. cve-description-corpus.txt : Corpus of CVE descriptions\n1. cve-description-vocab.txt : Tokens used in CVE descriptions\n1. cvss-base-metrics-evaluation-results-for-cve.csv : CVSS base metrics evaluation results for CVE\n1. cvss-base-metrics-evaluation-results-for-cve-published-in-2021.csv : CVSS base metrics evaluation results for CVE published in 2021\n\n## References\n- https:\/\/nvd.nist.gov\/vuln\/data-feeds","45b04f81":"## Create cvss-base-metrics-evaluation-results-for-cve-published-in-2021.csv","eb2305e0":"## Collect data from NVD data feeds","2fba33ab":"## Create cve-description-vocab.txt","e302ad4a":"## Create cve-description-corpus.txt","d5e7f0bd":"## Create cvss-base-metrics-evaluation-results-for-cve.csv"}}