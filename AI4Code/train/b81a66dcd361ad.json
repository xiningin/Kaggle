{"cell_type":{"27a62838":"code","4a01d01f":"code","87724aa8":"code","8a797127":"code","931c0b59":"code","a0dac4a0":"code","ba376142":"code","699fb219":"code","eb545f61":"code","09199145":"code","9eb666a4":"code","ff24fd92":"code","955ca932":"code","56fb3ede":"code","0034c2ae":"code","f7faee83":"code","16a37bf9":"code","da6be17a":"code","1dbd477b":"code","e7369f13":"code","2a0373e4":"code","d56064a1":"code","a6403610":"code","0ab13485":"code","065195cd":"code","e9c81371":"code","8caccde7":"code","fad42951":"code","89f5de67":"code","dce3652c":"code","90a8cecd":"code","9a6f6a6c":"code","e77bdcc2":"code","396a42b1":"code","bccd7347":"code","d7296f46":"code","7c38c055":"code","a42ca2f1":"code","61933181":"markdown","2cc15c9c":"markdown","b6b27480":"markdown","366baac9":"markdown","338104fc":"markdown","bd9d50ac":"markdown","45354315":"markdown","9feca030":"markdown","477a2cfb":"markdown","e092b960":"markdown","b79cb93d":"markdown","821a47ff":"markdown","4c1ffc97":"markdown","9a99b8ad":"markdown","9550fd5e":"markdown","9d7b82f6":"markdown"},"source":{"27a62838":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a01d01f":"data = pd.read_csv(\"..\/input\/pokemon-challenge\/pokemon.csv\")","87724aa8":"data.info()","8a797127":"data.corr()  #(orant\u0131lar)","931c0b59":"#correlation map  ( 1 olursa do\u011fru orant\u0131l\u0131 , 0 olursa ters orant\u0131l\u0131 )\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5 , fmt=\".1f\",ax=ax)\n#annot=true kutular\u0131n i\u00e7ndeki say\u0131lar\u0131n g\u00f6sterilmesi\n#data.corr  yukar\u0131daki bilgilerin aktar\u0131lmas\u0131 \n#linewidths aralar\u0131ndaki line n\u0131n kal\u0131nl\u0131\u011f\u0131 \n#fmt ise 0dan sonra ka\u00e7 de\u011fer yaz\u0131laca\u011f\u0131 \n#ax a\u015fa\u011f\u0131daki ax\n#figsize tablonun boyu\nplt.show()\n#yukar\u0131daki komut a\u015fa\u011f\u0131daki \u00e7\u0131kan output yaz\u0131s\u0131n\u0131 kaybettirir ","a0dac4a0":"data.head(10)\n#datay\u0131 g\u00f6sterir , parantez i\u00e7ine hangi say\u0131y\u0131 yazarsan o say\u0131ya kadar olan\u0131 g\u00f6sterir","ba376142":"data.columns\n#columns'lar\u0131 g\u00f6sterir (guruplar\u0131)","699fb219":"#line plot \n#color = color , label = label , linewidth = width of line , alpha = opacity , grid = grid \ndata.Speed.plot(kind = \"line\", color = \"g\" , label = \"Speed\" , linewidth = 1, alpha = 0.5 , grid = True , linestyle =\":\")\n# kind =  plot t\u00fcr\u00fc , alpha saydaml\u0131k , grid = \u00e7izgiler   \ndata.Defense.plot(color = \"r\" , label = \"Defense\" , linewidth = 1, alpha = 0.5 , grid = True , linestyle = \"-.\")\nplt.legend(loc = \"upper right\")\nplt.xlabel (\"Pokemons\")\nplt.ylabel (\"Property\")\nplt.title(\"Speed Defense Line Plot\")\n","eb545f61":"# Scatter Plot\n#x : attack , y : defense\ndata.plot(kind=\"scatter\",x=\"Attack\",y=\"Defense\",alpha = 0.5 , color = \"b\", grid = True)\nplt.xlabel(\"Attack\")\nplt.ylabel(\"Defense\")\nplt.title(\"Attack Defense Scatter Plot\")","09199145":"#Grafik \u00e7izdirmenin k\u0131sa yolu \nplt.scatter(data.Attack,data.Defense,color=\"green\")","9eb666a4":"#Histogram \n#bins bar say\u0131s\u0131\ndata.Speed.plot(kind=\"hist\",bins = 50 , figsize =(15,15))\nplt.xlabel(\"Speed\")\nplt.ylabel(\"Pokemon\")\nplt.title(\"Speed of Pokemon \")","ff24fd92":"#clf() = cleans it up again you can start a fresh  \/ temizlemek\ndata.Speed.plot(kind = \"hist\", bins= 50 )\nplt.clf()\n","955ca932":"dictionary = {\"spain\" : \" madrid\",\"usa\":\"vegas\"}\nprint(dictionary.keys())\nprint(dictionary.values())","56fb3ede":"# Keys have to be immutable objects like string , boolean , float , integer  or tubles\n# list is not immutable \n# keys are unique\ndictionary[\"spain\"] = \"barcelona\" # update existing entry\nprint(dictionary)\ndictionary[\"france\"] = \"paris\" #add new entry\nprint(dictionary)\ndel dictionary[\"spain\"]       # remove entry with key \"spain\"\nprint(dictionary)\nprint(\"france\" in dictionary) #check include or not\ndictionary.clear()            #remove all entries in dictionary\nprint(dictionary)\n","0034c2ae":"#del dictionary      #delete entire dictionary\nprint(dictionary)","f7faee83":"data=pd.read_csv(\"..\/input\/pokemon-challenge\/pokemon.csv\")","16a37bf9":"#pandas iki \u00e7e\u015fit data tipinde bulunur . Series ve data_frame\nseries = data[\"Defense\"]\nprint(type(series))\ndata_frame = data[[\"Defense\"]]\nprint(type(data_frame))","da6be17a":"#Comparison operator\nprint(3>2)\nprint(3!=2)\n#Boolean operators\nprint(True and False)\nprint(True or False)","1dbd477b":"# Filtering Pandas data frama\nx = data [\"Defense\"]>200    #200den b\u00fcy\u00fckleri buldu\ndata[x] #onlar\u0131 yazd\u0131rd\u0131k","e7369f13":"# Filtering pandas with logical_and\ndata[np.logical_and(data[\"Defense\"]>200,data[\"Attack\"]>100)]","2a0373e4":"#This is also same with previous code line , Therefore we can also use & for filtering\ndata[(data[\"Defense\"]>200) & (data[\"Attack\"]>100)]","d56064a1":"i = 0\nwhile i != 5 :\n    print(\"i is \" , i)\n    i +=1\nprint(i,\"is equal to 5\")","a6403610":"lis = [1,2,3,4,5]    \nfor i in lis:           #listenin i\u00e7ine girdik\n    print(\"i is : \",i )\nprint(\"\")\n\n\nfor index , value in enumerate(lis):  #listenin indexlerinyle yazd\u0131rd\u0131k\n    print(index,\":\",value)\nprint(\"\")\n\ndictionary = {\"spain\":\"madrid\",\"france\":\"paris\"}\nfor key, value in dictionary.items(): #dictionary nin i\u00e7ine girdik\n    print(key,\":\",value)\nprint(\"\")\n\n\nfor index, value in data[[\"Attack\"]][0:1].iterrows():   #pandas'a girdik  , pokemon ata\u011f\u0131n\u0131n ilkini ald\u0131k , iterrows bunu bulup indexsiyle yazd\u0131r\u0131yor\n    print(index,\":\",value)","0ab13485":"#Example of what we learn above\ndef tuble_ex():\n    t = (1,2,3)\n    return t\na,b,c = tuble_ex()\nprint(a,b,c)","065195cd":"#Guess prinnt what\nx = 2 \ndef f():\n    x = 3\n    return x\nprint(x)        # x = 2 global scope\nprint(f())      # x = 3 local scope","e9c81371":"# what if there is no local scope \nx = 5 \ndef f():\n    y = 2*x\n    return y\nprint(f())","8caccde7":"# how can we learn what is built in scope \nimport builtins\ndir(builtins)","fad42951":"#nested function\ndef square ():\n    def add ():\n        x = 2 \n        y = 3 \n        z = x+y\n        return z\n    return add()**2\nprint (square())","89f5de67":"#default arguments\ndef f ( a, b=1 , c=1 ):\n    y = a + b + c\n    return y\nprint(f(5))\n# what if we want to change default arguments\nprint(f(5,4,3))","dce3652c":"#flexible arguments  *args\n\ndef f (*args):\n    for i in args :\n        print (i)\nf (1)\nprint(\"\")\nf (1,2,3,4)\n\n#flexible arguments **kwargs that is dictionary\n\ndef f (**kwargs) :\n    for key , value in kwargs.items():\n        print (key , \"\", value)\nf (country = \" = spain \" , capital = \" = madrid \" , population =\"= 1000000\")","90a8cecd":"# Lambda function\n\nsquare = lambda x : x**2\nprint (square (4))\n\ntot = lambda x,y,z : x+y+z\nprint(tot(2,3,4))","9a6f6a6c":"number_list = [1,2,3]\ny = map(lambda x : x**2 , number_list)\nprint(list(y))","e77bdcc2":"# iteration example \nname = \"ronaldo\"\nit = iter(name)\nprint(next(it)) #print next iteration\nprint(*it)      # print remaining iteration","396a42b1":"# zip example \nlist1 = [1,2,3,4]\nlist2 = [5,6,7,8]\nz = zip(list1,list2)\nprint(z)\nz_list = list(z)\nprint(z_list)","bccd7347":"#unzip example \nun_zip = zip(*z_list)\nun_list1,un_list2 = list(un_zip)\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))\n\nprint(type(list(un_list1))) #type \u0131 listeye \u00e7evirdik","d7296f46":"# Exam\u011fle of list comprehesion \nnum1 = [1,2,3]\nnum2 = [i+ 1 for i in num1]\nprint(num2)","7c38c055":"#conditionals on iterable \nnum1 = [5,10,15]\nnum2 = [i**2 if i == 10 else i-5 if i<7 else i+5 for i in num1]\nprint(num2)","a42ca2f1":"#lets return pokemon csv and make one more list  comprehension example \n# les classify pokemons whether they have high or low speed . our threshold is average speed.\nthreshold = sum(data.Speed) \/ len(data.Speed)\ndata[\"speed_level\"]= [\"high\" if i > threshold else \"low\" for i in data.Speed]\ndata.loc[:10,[\"speed_level\",\"Speed\"]] # we will learn loc more detailed later","61933181":"#  1. INTRIDUCTION TO PYTHON ","2cc15c9c":"# WHILE and FOR LOOPS\nWe will learn most basic while and for loops","b6b27480":" # zip(): zip lists","366baac9":"# DEFAULT AND FLEX\u0130BLE ARGUMENTS \n\n* default argument example\n \n def f (a,b=1):        b = 1 is deafult argument\n    \n* flexible argument example \n\n def f (*arg):          args can be one or more \n    \n def f (**kwargs)       kwargs is a dictionary\n    \n ","338104fc":"# 2. PYTHON DATA SC\u0130ENCE TOOLBOX","bd9d50ac":"# **SCOPE**\nWhat we need to khow about scpoe :\n* global : defined main body in script\n* local : defined is a function \n* built in scope : names in predefined built in scope module such as print , len \n\nlets make some basic examples**","45354315":"# LAMBDA FUNCT\u0130ON\n\nFaster way of writing function","9feca030":"# LIST COMPREHENS\u0130ON\n\n**One of the most important topic of this kernel**\n\nWe use list comprehension for data analysis often.\nlist comprehension collapse for loops for buildings lists into a single line\nex : num1 = [1,2,3] and we want to make it num2=[2,3,4] . This can be done with for loop . However it is unnecessarily long . We can make it one line code that is list comprehension ","477a2cfb":"# NESTED FUNCTION\n\n* function inside function\n* there is a LEGB rule that is search local scope, enclosing function , global and built in scopes , respectiverly.\n\n","e092b960":"Before continue with pandas , we need to learn **logic,control flow** and **filtering**\n<br>  Comparison oparators: ==,<,>,<=\n<br>Boolean oparators : and,or,not\n<br>  Filtering pandas","b79cb93d":"# ****PANDAS****","821a47ff":"# ANONYMOUS FUNCT\u0130ON\n\nLike lambda function but it can take more than one arguments \n\n* map[func.seq]: applies a function to all the items in a list ","4c1ffc97":"# ITERATORS\n\n* iterable is an object that can return an iterator \n\n* iterable : an object with an associated iter() method\n \n example : list , strings and dictionaries\n \n* iterator : produces next value with next() method","9a99b8ad":"# **D\u0130CT\u0130ONARY**","9550fd5e":"[i + 1for i in num1] : list of comprehension\n\ni+1 : list comprehension syntax\n\nfor i in num1 : for loop syntax \n\ni : iterator\n\nnum1:iterable object","9d7b82f6":"**USER DEFINED FUNCTION**"}}