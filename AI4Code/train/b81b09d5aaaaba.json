{"cell_type":{"4d048c64":"code","0999bd2f":"code","1e3cca74":"code","9a29978e":"code","af3a94b1":"code","f1aee5eb":"code","524940ca":"code","ad4c9299":"code","49399d31":"code","1ccc1481":"code","6f64f386":"code","0b7bc022":"code","bff0c685":"code","9f2f84ce":"code","d2952f8a":"code","6dfe9670":"code","90c178a7":"code","37c3ed21":"code","649082fd":"code","435b2148":"code","860ce381":"code","e165a9f7":"code","2aa2c845":"code","b7d71a07":"code","472e49f8":"markdown","2d4211d1":"markdown","90ca91cc":"markdown"},"source":{"4d048c64":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0999bd2f":"data = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndata.info()","1e3cca74":"data","9a29978e":"data.drop([\"Id\"],axis=1, inplace= True)\nprint(data.groupby(\"Species\").size())","af3a94b1":"data.corr()","f1aee5eb":"sns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.2f')\nplt.show()","524940ca":"setosa=data[data.Species== \"Iris-setosa\"]\nversicolor = data[data.Species==\"Iris-versicolor\"]\nvirginica=data[data.Species== \"Iris-virginica\"]","ad4c9299":"plt.scatter(setosa.PetalLengthCm , setosa.PetalWidthCm, color=\"red\",label=\"setosa\" )\nplt.scatter(versicolor.PetalLengthCm , versicolor.PetalWidthCm, color=\"green\",label=\"versicolor\" )\nplt.scatter(virginica.PetalLengthCm , virginica.PetalWidthCm, color=\"blue\",label=\"virginica\" )\nplt.legend()\nplt.xlabel(\"PetalLengthCm\")\nplt.ylabel(\"PetalWidthCm\")\nplt.title(\"scatter plot\")\nplt.show()","49399d31":"plt.scatter(setosa.SepalLengthCm , setosa.PetalLengthCm, color=\"red\",label=\"setosa\" )\nplt.scatter(versicolor.SepalLengthCm , versicolor.PetalLengthCm, color=\"green\",label=\"versicolor\" )\nplt.scatter(virginica.SepalLengthCm , virginica.PetalLengthCm, color=\"blue\",label=\"virginica\" )\nplt.xlabel(\"SepalLengthCm\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend()\nplt.show()","1ccc1481":"# x= df[\"PetalLengthCm\"]<3\n# df[x]","6f64f386":"data.plot(kind=\"box\", subplots=True, sharex=False, sharey=False)\nplt.show()","0b7bc022":"# Ba\u011f\u0131ml\u0131 De\u011fi\u015fkeni (species) atad\u0131k\nspecies = data.iloc[:,-1:].values\n#print(species)","bff0c685":"# Veri k\u00fcmemizi test ve train \u015fekinde b\u00f6l\u00fcyoruz\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(data.iloc[:,1:-1],species,test_size=0.80,random_state=42)","9f2f84ce":"# DecisionTreeClassifier s\u0131n\u0131f\u0131n\u0131 import ettik\nfrom sklearn.tree import DecisionTreeClassifier","d2952f8a":"# DecisionTreeClassifier s\u0131n\u0131f\u0131ndan bir nesne \u00fcrettik\ndtc = DecisionTreeClassifier(random_state=0)\n","6dfe9670":"# Makineyi e\u011fitiyoruz train ediyoruz\ndtc.fit(x_train,y_train)\nprint(\"score\",dtc.score(x_test, y_test))\n# Test veri k\u00fcmemizi verdik ve tahmin i\u015flemini ger\u00e7ekle\u015ftirdik\nresult = dtc.predict(x_test)","90c178a7":"# Ba\u015far\u0131 Oran\u0131\nfrom sklearn.metrics import accuracy_score\naccuracy = accuracy_score(y_test, result)\nprint(accuracy)","37c3ed21":"from tensorflow import keras\nfrom tensorflow.keras import layers\nfrom keras.preprocessing import sequence","649082fd":"df = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndf.drop([\"Id\"],axis=1, inplace= True)\ndf[\"Species\"].value_counts()","435b2148":"sns.FacetGrid(data, hue=\"Species\", size=5) \\\n   .map(plt.scatter, \"SepalLengthCm\", \"PetalWidthCm\") \\\n   .add_legend()\nplt.show()","860ce381":"s=1\nve=2\nvi=3\ndf[\"Species\"] = df[\"Species\"].map({'Iris-setosa': s, 'Iris-versicolor': ve,'Iris-virginica':vi})","e165a9f7":"df=df.iloc[np.random.permutation(len(data))]\ndf=df.reset_index(drop=True)\ndf","2aa2c845":"X=df.iloc[:,-1:].values\ny=df.iloc[:,:-1].values","b7d71a07":"from sklearn.model_selection import train_test_split \nx_train, x_test, y_train, y_test = train_test_split(data.iloc[:,:-1].values, X, test_size=0.2, random_state=30) \nmax_features=20000\nmaxlen=200\nx_train=sequence.pad_sequences(x_train,maxlen=maxlen)\nx_test=sequence.pad_sequences(x_test, maxlen=maxlen)\ninputs=keras.Input(shape=(None,), dtype=\"int32\")\nx=layers.Embedding(max_features,128)(inputs)\nx=layers.Bidirectional(layers.LSTM(64))(x)\n#sigmoid fonksiyon \noutputs=layers.Dense(1,activation=\"sigmoid\")(x)\nmodel=keras.Model(inputs,outputs)\nmodel.compile(\"adam\",\"binary_crossentropy\",metrics=[\"accuracy\"])\n#batch_size Ayn\u0131 anda ka\u00e7 veriyi  \u00e7ekice\u011fini\n#ka\u00e7 kez d\u00f6necek\nmodel.fit(x_train,y_train,batch_size=32,epochs=30,validation_data=(x_test,y_test))\nmodel.summary()","472e49f8":"# RNN","2d4211d1":"# Machine learning with iris dataset ","90ca91cc":"# Decision Tree"}}