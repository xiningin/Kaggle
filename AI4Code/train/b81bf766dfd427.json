{"cell_type":{"b7301a06":"code","e5147a5d":"code","0f8b81c8":"code","9b6bacb0":"code","e5ffbf30":"code","465f6f39":"code","a9f79ed8":"code","d896d148":"code","bcedeb76":"code","69faea77":"code","2e020cf2":"code","51eb58f2":"code","7a2951a9":"code","1d7340fc":"code","ae62a7aa":"code","0113ba65":"code","f91a299d":"code","5e90cadf":"code","388fa312":"code","9fd11c6d":"code","ae348e81":"code","57304a8e":"code","f9721fc0":"code","48d077b5":"code","7f766519":"code","344f4254":"code","e8f3af22":"code","2ab05362":"code","e4e7c860":"code","0c8234d2":"code","a5873a48":"code","f216284a":"code","70f98b29":"code","8c53ca09":"code","d039ad11":"code","bddf24cd":"markdown","28162eb6":"markdown","5badf184":"markdown","5e9f94d1":"markdown","9b75381d":"markdown","080349b8":"markdown","e831ef8e":"markdown"},"source":{"b7301a06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e5147a5d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0f8b81c8":"test_titanic = pd.read_csv('\/kaggle\/input\/test-file\/tested.csv')\n#This is for viewing only the top 5 rows of the dataset\ntest_titanic.head()\n#This is for viewing the bottom 5\ntest_titanic.tail()\n#This is for an overall overview\ntest_titanic","9b6bacb0":"#Code gives us number of rows and columns for the data\ntest_titanic.shape","e5ffbf30":"#Code gives us the different coloumns present\ntest_titanic.columns","465f6f39":"#Data description\ntest_titanic.describe()","a9f79ed8":"#Overall dataset info of datatypes and values in it\ntest_titanic.info()","d896d148":"#Number of null values in dataset\ntest_titanic.isnull().sum()","bcedeb76":"#Total passengers survived\ntest_titanic['Survived'].sum()","69faea77":"#Visualising survivors\nsns.countplot(x = 'Survived', data = test_titanic, hue = 'Sex')","2e020cf2":"#Details of survived passengers\ntest_titanic[test_titanic['Survived']==1]","51eb58f2":"#Total male and female passengers in the ship\ntest_titanic.Sex.value_counts()","7a2951a9":"#Total male passesngers survived\ntest_titanic[(test_titanic['Sex']=='male')&(test_titanic['Survived']==1)]['PassengerId'].nunique()","1d7340fc":"#Total females survived\ntest_titanic[(test_titanic['Sex']=='female')&(test_titanic['Survived']==1)]['PassengerId'].nunique()","ae62a7aa":"#Survival rate of males vs females\nsns.barplot(x = 'Sex', y = 'Survived', data = test_titanic)","0113ba65":"#Youngest passenger who survived\ntest_titanic[test_titanic['Survived']==1]['Age'].min()","f91a299d":"#Oldest passenger who survived\ntest_titanic[test_titanic['Survived']==1]['Age'].max()","5e90cadf":"#Combining Sibsp and Parch to form the family column\ntest_titanic['Family'] = test_titanic['SibSp'] + test_titanic['Parch']\ntest_titanic.head()","388fa312":"#Grouping ages for all passengers in titanic\ngroups = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79']\ntest_titanic['Age_group'] = pd.cut(test_titanic.Age, range(0, 81, 10), right = False, labels = groups)\ntest_titanic.head()","9fd11c6d":"#Dropping sibsp, parch columns\ntest_titanic.drop(['SibSp'], axis = 1, inplace = True)\ntest_titanic.drop(['Parch'], axis = 1, inplace = True)\ntest_titanic.head()","ae348e81":"#Visualising passengers per age group per gender \nsns.countplot(x = 'Age_group', data = test_titanic, hue = 'Sex')","57304a8e":"#Mapping survived vs Non survived passengers\nsurvived_map = {0: 'No', 1: 'Yes'}\ntest_titanic['Survived'] = test_titanic['Survived'].map(survived_map)\n\n# PClass map\npclass_map = {1: 'Upper Class', 2: 'Middle Class', 3: 'Lower Class'}\ntest_titanic['Pclass'] = test_titanic['Pclass'].map(pclass_map)\n\n# Embarkation port map\nport_map = {'S': 'Southampton', 'C': 'Cherbourg','Q':'Queenstown'}\ntest_titanic['Embarked'] = test_titanic['Embarked'].map(port_map)\n\ntest_titanic","f9721fc0":"#Fare with respect to age group and gender\nsns.barplot(x = 'Age_group', y = 'Fare', data = test_titanic, hue = 'Sex')","48d077b5":"#Fare with respect to class\nsns.barplot(x = 'Age_group', y = 'Fare', data = test_titanic, hue = 'Pclass')","7f766519":"#Removing all dead people\nindexNames = test_titanic[test_titanic['Survived'] == 'No' ].index\n# Delete these row indexes from dataFrame\ntest_titanic.drop(indexNames,inplace=True)\ntest_titanic.head()","344f4254":"#Age group of survivors\nsns.countplot(x = 'Age_group', data = test_titanic)","e8f3af22":"#Fare of the survivors with respect to age group\nsns.barplot(x = 'Age_group', y = 'Fare', data = test_titanic, palette = 'magma')","2ab05362":"#Boxplot for the above\nsns.boxplot(x = \"Age_group\", y = \"Fare\", data = test_titanic, palette = 'rainbow')","e4e7c860":"#Plot for survivors from the places they embarked\nsns.countplot(x = 'Embarked', data = test_titanic)","0c8234d2":"#A pairplot of the final dataset\nsns.pairplot(test_titanic, palette = 'viridis')","a5873a48":"sns.clustermap(test_titanic.corr(), annot = True, cmap = 'RdBu')","f216284a":"sns.lmplot(x = 'Fare', y = 'Age', data = test_titanic, col = 'Pclass', palette = 'mako')","70f98b29":"#Ticket dropped since it is the ticket number and is fairly irrelevant\ntest_titanic.drop(['Ticket'], axis = 1, inplace = True)","8c53ca09":"from plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nprint(__version__)","d039ad11":"import cufflinks as cf\ninit_notebook_mode(connected=True)\ncf.go_offline()\n\ntest_titanic.iplot(kind='box')","bddf24cd":"# **Analysis based on Age**","28162eb6":"# **Mapping data**","5badf184":"# **Final full dataset Graphs**","5e9f94d1":"# **Analysis based on Gender**","9b75381d":"# **Loading Dataset for use and Viewing Data**\n\nThe codes for three different ways to view the data have been written. One can comment each line separately to get the results for their individual codes. Currently when all the codes are written simultaneously it gives the output for the code written at the end (which is the overall view of first five 5 and last 5).","080349b8":"# **Getting information about the Dataset**","e831ef8e":"# **Importing libraries for use**"}}