{"cell_type":{"578a6a36":"code","f7044376":"code","8175261a":"code","4e153edd":"code","c6b77e63":"code","e660d00d":"code","e58a4e5a":"code","288c2033":"code","dc9541d9":"code","79e3a535":"code","6e153c97":"code","c09abe2d":"code","fa267f4e":"code","ae2e9d63":"code","a1425252":"code","8f3ce31d":"code","b7302706":"code","e2106818":"code","e3705be3":"code","fcaf7089":"code","08c3dba7":"code","5c2d334b":"code","e4c78cb1":"code","3120981a":"code","02095996":"code","b07ad4c2":"code","5d855ad0":"code","8700e899":"code","4c7cf47c":"code","58ea328b":"code","8163e7dc":"code","833f174f":"code","44752554":"code","8de616ea":"code","a2f39414":"code","d565d44e":"code","d21b3da7":"markdown","b4f56a6a":"markdown"},"source":{"578a6a36":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f7044376":"df = pd.read_csv(\"..\/input\/lending-club-dataset\/lending_club_loan_two.csv\")\ndf = df.dropna()","8175261a":"df[\"loan_status\"]","4e153edd":"sns.countplot(x=\"loan_status\", data=df)","c6b77e63":"df[\"Fully Paid\"] = pd.get_dummies(df[\"loan_status\"], drop_first=True)\ndf = df.drop(\"loan_status\", axis=1)","e660d00d":"#pd.get_dummies(df[\"home_ownership\"], drop_first=True)\n#df[\"home_ownership\"].value_counts()\ndf = pd.concat([df,pd.get_dummies(df[\"home_ownership\"], drop_first=True)], axis=1)\ndf = df.drop(\"home_ownership\", axis=1)\n\ndf = pd.concat([df,pd.get_dummies(df[\"sub_grade\"], drop_first=True)], axis=1)\ndf = df.drop(\"sub_grade\", axis=1)\n\ndf = pd.concat([df,pd.get_dummies(df[\"grade\"], drop_first=True)], axis=1)\ndf = df.drop(\"grade\", axis=1)\n\n#df = pd.concat([df,pd.get_dummies(df[\"purpose\"], drop_first=True)], axis=1)\ndf = df.drop(\"purpose\", axis=1)\n\n#df = pd.concat([df,pd.get_dummies(df[\"emp_length\"], drop_first=True)], axis=1)\ndf = df.drop(\"emp_length\", axis=1)\n\ndf = pd.concat([df,pd.get_dummies(df[\"term\"], drop_first=True)], axis=1)\ndf = df.drop(\"term\", axis=1)\n\ndf = pd.concat([df,pd.get_dummies(df[\"verification_status\"], drop_first=True)], axis=1)\ndf = df.drop(\"verification_status\", axis=1)\n\n#df = pd.concat([df,pd.get_dummies(df[\"application_type\"], drop_first=True)], axis=1)\ndf = df.drop(\"application_type\", axis=1)","e58a4e5a":"df.corr()[\"Fully Paid\"][:-1].sort_values().plot(kind=\"bar\", figsize=(20, 10))","288c2033":"df = df.drop(\"address\", axis=1)\ndf = df.drop(\"issue_d\", axis=1)\ndf = df.drop(\"emp_title\", axis=1)\ndf = df.drop(\"title\", axis=1)\ndf = df.drop(\"earliest_cr_line\", axis=1)\ndf = df.drop(\"initial_list_status\", axis=1)","dc9541d9":"# settings to display all columns\npd.set_option(\"display.max_columns\", None)\n# display the dataframe head\ndf.head()","79e3a535":"from sklearn.model_selection import train_test_split","6e153c97":"X = df.drop('Fully Paid',axis=1).values\ny = df['Fully Paid'].values","c09abe2d":"print(df[\"annual_inc\"].max())\nprint(df[\"annual_inc\"].min())\n","fa267f4e":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=101)","ae2e9d63":"from sklearn.preprocessing import MinMaxScaler","a1425252":"scaler = MinMaxScaler()","8f3ce31d":"#### Not scaled \nX_train_1 = X_train.copy()\nX_test_1 = X_test.copy()","b7302706":"scaler.fit(X_train)\n#","e2106818":"X_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","e3705be3":"X_train.shape","fcaf7089":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation,Dropout","08c3dba7":"from tensorflow.keras.callbacks import EarlyStopping","5c2d334b":"early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)","e4c78cb1":"Xtrain_sub_set = tf.convert_to_tensor(X_train[:,:11],dtype = tf.float64)\nXtest_sub_set = tf.convert_to_tensor(X_test[:,:11],dtype = tf.float64)","3120981a":"from tensorflow.keras import optimizers\n\n#optimizer = optimizers.Adam()\noptimizer = optimizers.Adam()","02095996":"model = Sequential()\n\n# https:\/\/stats.stackexchange.com\/questions\/181\/how-to-choose-the-number-of-hidden-layers-and-nodes-in-a-feedforward-neural-netw\n\nmodel.add(Dense(units=60,activation='relu'))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(units=32,activation='relu'))\nmodel.add(Dropout(0.1))\nmodel.add(Dense(units=32,activation='relu'))\nmodel.add(Dropout(0.1))\nmodel.add(Dense(units=32,activation='relu'))\n#model.add(Dropout(0.2))\n#model.add(Dense(units=42,activation='relu'))\n#model.add(Dropout(0.5))\n\nmodel.add(Dense(units=1,activation='sigmoid'))\n\n# For a binary classification problem\nmodel.compile(loss='binary_crossentropy', optimizer=optimizer)","b07ad4c2":"model.fit(x=Xtrain_sub_set, \n          y=y_train, \n          epochs=600,\n          batch_size=4196,\n          validation_data=(Xtest_sub_set, y_test), verbose=1,\n          callbacks=[early_stop]\n          )","5d855ad0":"pd.DataFrame(model.history.history).plot()","8700e899":"from sklearn.metrics import f1_score, precision_score, recall_score","4c7cf47c":"y_pred = (model.predict(Xtest_sub_set)>0.5).astype(int)","58ea328b":"print(\"Precision Score\",precision_score(y_test,y_pred),\"\\n\",\"Recall Score\",recall_score(y_test,y_pred))","8163e7dc":"print(\"F1 Score\",f1_score(y_test,y_pred))","833f174f":"model1 = Sequential()\n\n# https:\/\/stats.stackexchange.com\/questions\/181\/how-to-choose-the-number-of-hidden-layers-and-nodes-in-a-feedforward-neural-netw\n\nmodel1.add(Dense(units=60,activation='relu'))\nmodel1.add(Dropout(0.2))\n\nmodel1.add(Dense(units=32,activation='relu'))\nmodel1.add(Dropout(0.1))\nmodel1.add(Dense(units=32,activation='relu'))\nmodel1.add(Dropout(0.1))\nmodel1.add(Dense(units=32,activation='relu'))\n#model.add(Dropout(0.2))\n#model.add(Dense(units=42,activation='relu'))\n#model.add(Dropout(0.5))\n\nmodel1.add(Dense(units=1,activation='sigmoid'))\n\n# For a binary classification problem\nmodel1.compile(loss='binary_crossentropy', optimizer=optimizer)","44752554":"model1.fit(x=X_train_1, \n          y=y_train, \n          epochs=600,\n          batch_size=4196,\n          validation_data=(X_test_1, y_test), verbose=1,\n          callbacks=[early_stop]\n          )","8de616ea":"pd.DataFrame(model1.history.history).plot()","a2f39414":"y_pred = (model1.predict(X_test_1)>0.5).astype(int) ## using unscaled data to make predictions ","d565d44e":"print(\"Precision Score\",precision_score(y_test,y_pred),\"\\n\",\"Recall Score\",recall_score(y_test,y_pred))\nprint(\"F1 Score\",f1_score(y_test,y_pred))","d21b3da7":"<h1>Scaling and splitting<\/h1>","b4f56a6a":"## Creating the Model\n\n"}}