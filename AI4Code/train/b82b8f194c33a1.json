{"cell_type":{"3a687a56":"code","71493a85":"code","2bc3aaaf":"code","d5511347":"code","547f3bba":"code","087270c8":"code","e74d9d91":"code","3cad9cd6":"code","a8cce132":"code","d690bb17":"code","dead3aec":"code","01c6104e":"code","8505358e":"code","e487377e":"markdown","faa798af":"markdown","172fd847":"markdown","8207eede":"markdown","a2f7a568":"markdown","2f398a85":"markdown"},"source":{"3a687a56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71493a85":"df = pd.read_csv(\"\/kaggle\/input\/rock-roll-hall-of-fame-inductees\/rrhof.csv\", delimiter=',', encoding='utf8')\ndf.head()","2bc3aaaf":"df.isnull().sum()","d5511347":"#Codes by Pooja Jain https:\/\/www.kaggle.com\/jainpooja\/av-guided-hackathon-predict-youtube-likes\/notebook\n\ntext_cols = ['Member', 'Band', 'Role']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')\n\n_ = fig.delaxes(axes[3])","547f3bba":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Member)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","087270c8":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Band)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","e74d9d91":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Role)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","3cad9cd6":"#Code from Carl Macbride Ellis https:\/\/www.kaggle.com\/carlmcbrideellis\/treeplot-see-your-classification-tree\n\n!pip install treeplot\n\n\n# import treeplot package:\nimport treeplot\n# and the random forest classifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# read in the data\ntrain_data = pd.read_csv('..\/input\/rock-roll-hall-of-fame-inductees\/rrhof.csv')\n\n# select some features\nfeatures = [\"Member\", \"Band\"]\n\nX_train       = pd.get_dummies(train_data[features])\ny_train       = train_data[\"Role\"]\n\n# perform the classification and the fit\nclassifier = RandomForestClassifier(criterion='gini', n_estimators=100, \n        min_samples_split=2, min_samples_leaf=10, max_features='auto')\nclassifier.fit(X_train, y_train)","a8cce132":"# now make the plot\nax = treeplot.plot(classifier)","d690bb17":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"Band\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Member\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Rock'n Roll Hall of Fame by Band\")\nplt.axis(\"off\")\nplt.show()","dead3aec":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.summer(np.linspace(0,1,20))\ndf[\"Member\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"role\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Rock'n Roll Hall of Fame by Member\")\nplt.axis(\"off\")\nplt.show()","01c6104e":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Pastel1(np.linspace(0,1,20))\ndf[\"Role\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Band\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Rock'n Roll Hall of Fame by Role\")\nplt.axis(\"off\")\nplt.show()","8505358e":"abba = df[(df['Band']=='ABBA')].reset_index(drop=True)\nabba.head()","e487377e":"#Knowing me, knowing you. I have to go. It's the best I can do.\n\n\"Knowing me, knowing you (ah-ha), There is nothing we can do. We just have to face it, this time. This time we're through, we're really through. Breaking up is never easy, I know, but I have to go. This time I have to go, this time I know. Knowing me, knowing you. It's the best I can do.\"\n\nAuthors: Ulvaeus Bjoern K \/ Andersson Benny Sigvard \/ Anderson Stig Erik Leopold\n\nLyrics of Knowing Me, Knowing You.","faa798af":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #001f3f;\"><b style=\"color:orange;\">You can code, You can jive, Having the time of your life<\/b><\/h1><\/center>","172fd847":"<iframe width=\"956\" height=\"538\" src=\"https:\/\/www.youtube.com\/embed\/xFrGuyw1V8s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","8207eede":"https:\/\/www.youtube.com\/watch?v=xFrGuyw1V8s\n\nAbba - Dancing Queen (Official Music Video Remastered)","a2f7a568":"#See that girl, Watch that script, Digging the \"Coding\" Queen.","2f398a85":"#After reading the 4 starting rows, got you the title?"}}