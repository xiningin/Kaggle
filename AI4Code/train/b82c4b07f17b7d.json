{"cell_type":{"b943b3bc":"code","e424ad21":"code","4669a999":"code","ef9ad93e":"code","bf333754":"code","58e9f0bc":"code","e068ee71":"code","777afe1d":"markdown","c9b96231":"markdown","53a6f05a":"markdown","16e3c046":"markdown","3d050efd":"markdown","e7d18c49":"markdown","cc31b645":"markdown","bedb19be":"markdown","82e2131d":"markdown"},"source":{"b943b3bc":"# Import data & libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\npd.options.display.max_columns = None\n\ntrain = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/train.csv')\nfeat = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/features.csv')","e424ad21":"from matplotlib import pyplot as plt\nplt.figure(figsize=(10,10))\n\ncorr_mat = train.corr()\nplt.imshow(corr_mat, cmap='Spectral')\nplt.show()","4669a999":"flip = feat.drop(columns=['feature'])\nflip = flip.transpose()\nplt.figure(figsize=(10,10))\n\nflip_corr_mat = flip.corr()\n\nplt.imshow(flip_corr_mat, cmap='Spectral')\nplt.show()","ef9ad93e":"from scipy.cluster.hierarchy import linkage, dendrogram, fcluster\nfrom scipy.spatial.distance import squareform\n\nimport scipy.cluster.hierarchy as sch\n\nplt.figure(figsize=(10,10))\n\nt = 0.5\n\npdist = sch.distance.pdist(corr_mat)\nlinkage = sch.linkage(pdist, method='complete')\n\n# Calculate the cluster\nlabels = fcluster(linkage, t,'distance')\n\n# Keep the indices to sort labels\nlabels_order = np.argsort(labels)\n\ncorr_mat_reordered = corr_mat.sort_index(0,labels_order).sort_index(1,labels_order)\n\nplt.imshow(corr_mat_reordered,cmap='Spectral')\nplt.show()","bf333754":"plt.figure(figsize=(12,5))\n\ndendrogram(linkage, labels=train.columns, orientation='top',leaf_rotation=90);","58e9f0bc":"plt.figure(figsize=(10,10))\n\nt = 0.5\n\nflip_corr_mat = flip_corr_mat.iloc[1:].drop(flip_corr_mat.columns[[0]],axis=1)\n\npdist = sch.distance.pdist(flip_corr_mat)\nlinkage = sch.linkage(pdist, method='complete')\n\n# Calculate the cluster\nlabels = fcluster(linkage, t,'distance')\n\n# Keep the indices to sort labels\nlabels_order = np.argsort(labels)\n\nflip_corr_mat_reordered = flip_corr_mat.sort_index(0,labels_order).sort_index(1,labels_order)\n\nplt.imshow(flip_corr_mat_reordered,cmap='Spectral')\nplt.show()","e068ee71":"plt.figure(figsize=(12,5))\n\ndendrogram(linkage, labels=train.columns, orientation='top',leaf_rotation=90);","777afe1d":"It appears that appart some permutation of the main cluster nothing is really changing. It is entirely possible the jane-street team performed as similar clustering before handing the data.\n\nThis approach allows to plot dendograms for more advanced clustering (here with 3 clusters):","c9b96231":"## Reordering Features using hierarchical clustering ","53a6f05a":"Nothing unusual for market data.","16e3c046":"Below the same work but with the tag. Matrix is not changing, but the dendogram show different level of possible clustering.","3d050efd":"# Hierachical Clustering on correlation matrix","e7d18c49":"# Jane Street \"features.csv\" hierarchical clustering\n\nUpdate of [this notebook](https:\/\/www.kaggle.com\/lucasmorin\/jane-street-feature-tags-trippy) that showed the correlation matrices (for features and tags) to be trippy. However I show that this trippy aspect is in part due to the ordering the feature. Once you reorder the features you get something that look more realistic. ","cc31b645":"# Tag Correlation Matrix\n\nShows the correlation between each **feature**, with respect to the True\/False values for each tag.","bedb19be":"## Correlation Matrix\n\nWe start by plotting the correlation matrix. A diverging colormap is better to visualise the extreme as being similar (a correlation of -1 is a correlation of 1 with the opposite feature).","82e2131d":"# Woah! Looks like there are some interesting patterns. Why do you think this is?\n\nThis is the orginial question asked by the author of the original notebook. It turns out that the structures we can see are partly due to feature ordering.\nSo the question is what could be a better ordering ? The answer is given by hierarchical clustering, i.e. using the correlation matrix to look what feature ressemble each-other the most."}}