{"cell_type":{"33345053":"code","b136705c":"code","e86a9e43":"code","81d2e59a":"code","1ce56510":"code","09c2123e":"code","724e7ab4":"code","3ee7597d":"code","d4786ff1":"markdown","70fb9444":"markdown","43ec1829":"markdown","7faf506b":"markdown","c1c138c4":"markdown","8a1197e5":"markdown","64419eee":"markdown"},"source":{"33345053":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport pandas_profiling\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler","b136705c":"data = pd.read_csv('..\/input\/wholesale-customers-data-set\/Wholesale customers data.csv')\ndata.head()","e86a9e43":"data.profile_report()","81d2e59a":"scaler = StandardScaler()\nscaled_df = scaler.fit_transform(data)\n\npd.DataFrame(scaled_df).describe()","1ce56510":"model = KMeans(n_clusters=3,\n               init='k-means++',\n               n_init=10,\n               max_iter=300,\n               tol=0.0001,\n               precompute_distances='auto',\n               verbose=0,\n               random_state=42,\n               copy_x=True,\n               n_jobs=None,\n               algorithm='auto')\n\nmodel.fit(scaled_df)\nmodel.inertia_","09c2123e":"clusters = range(1, 20)\nsse=[]\nfor cluster in clusters:\n    model = KMeans(n_clusters=cluster,\n               init='k-means++',\n               n_init=10,\n               max_iter=300,\n               tol=0.0001,\n               precompute_distances='auto',\n               verbose=0,\n               random_state=42,\n               copy_x=True,\n               n_jobs=None,\n               algorithm='auto')\n\n    model.fit(scaled_df)\n    sse.append(model.inertia_)\n\nsse_df = pd.DataFrame(np.column_stack((clusters, sse)), columns=['cluster', 'SSE'])\nfig, ax = plt.subplots(figsize=(13, 5))\nax.plot(sse_df['cluster'], sse_df['SSE'], marker='o')\nax.set_xlabel('Number of clusters')\nax.set_ylabel('Inertia or SSE')","724e7ab4":"model = KMeans(n_clusters=5,\n               init='k-means++',\n               n_init=10,\n               max_iter=300,\n               tol=0.0001,\n               precompute_distances='auto',\n               verbose=0,\n               random_state=42,\n               copy_x=True,\n               n_jobs=-1,\n               algorithm='auto')\n\nmodel.fit(scaled_df)","3ee7597d":"print('SSE: ', model.inertia_)\nprint('\\nCentroids: \\n', model.cluster_centers_)\n\npred = model.predict(scaled_df)\ndata['cluster'] = pred\nprint('\\nCount in each cluster: \\n', data['cluster'].value_counts())","d4786ff1":"#### References\n* https:\/\/www.analyticsvidhya.com\/blog\/2019\/08\/comprehensive-guide-k-means-clustering\/","70fb9444":"We can see that 4th cluster has maximum number of samples, while 5th cluster has minimum number of samples.","43ec1829":"## Build the final model\nWe will choose K=5 and fit the model.","7faf506b":"## Exploratory Data Analysis (EDA)","c1c138c4":"## Data Preprocessing\nHere, we see that there is a lot of variation in the magnitude of the data. Variables like Channel and Region have low magnitude whereas variables like Fresh, Milk, Grocery, etc. have a higher magnitude.\n\nSince K-Means is a distance-based algorithm, this difference of magnitude can create a problem. So let\u2019s first bring all the variables to the same magnitude:","8a1197e5":"# Clustering wholesale customers data using K-Means\nThe aim of this problem is to segment the clients of a wholesale distributor based on their annual spending on diverse product categories, like milk, grocery, region, etc.","64419eee":"## Find optimum value of K\nLet's see how we can find optimum number of clusters. We will use elbow method."}}