{"cell_type":{"c64a57c5":"code","bfa1f2a7":"code","4d28efe7":"code","b14957f7":"code","70d4a683":"code","d2787ce4":"code","f8d91819":"code","7fc71d9a":"code","b04df389":"code","36adff11":"code","19575a45":"code","8f3be7e5":"code","5877d1d0":"code","5e019c34":"code","d3d976f9":"code","27878ef2":"code","f63e3b38":"code","54211b5b":"code","a2b037df":"code","5bba1b64":"code","6290009f":"code","d190ee17":"code","2c005351":"markdown","5d87de6c":"markdown","2034b4bd":"markdown","4653ffde":"markdown","b44c3ef7":"markdown","ebced980":"markdown","498940e2":"markdown","96fc8418":"markdown","0f358321":"markdown"},"source":{"c64a57c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","bfa1f2a7":"#Firstly, we should import data from dataset\ndata = pd.read_csv(\"..\/input\/seattleWeather_1948-2017.csv\")","4d28efe7":"data.head()\n#Shows us informations of first 5 weather conditions.","b14957f7":"data.tail()\n#Shows us informations of last 5 weather conditions.","70d4a683":"data.columns #See columns in data","d2787ce4":"data.describe()","f8d91819":"data.drop([\"DATE\"],axis=1,inplace=True) #Drop processing","7fc71d9a":"data.columns #As you can see, we droped DATE feature","b04df389":"data.info()","36adff11":"data=data.dropna() #We drop all NaN values.\ndata.info()","19575a45":"data.RAIN = [1 if each == True  else 0 for each in data.RAIN.values]","8f3be7e5":"data.info()\n#You can see easily; RAIN values converted to integer.","5877d1d0":"y = data.RAIN.values\n#our y axis is defined RAIN values because we want to learn how weather is? \n#So we are trying to get: the weather is rainy or not.","5e019c34":"x_data = data.drop([\"RAIN\"],axis=1)\n#x_data is all of features except RAIN in the data.\nx_data","d3d976f9":"#Normalization\nx = (x_data - np.min(x_data))\/(np.max(x_data)).values\nx","27878ef2":"#Train-Test Datas Split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state = 42)\n#test_size=0.2 means %20 test datas, %80 train datas","f63e3b38":"x_train.head()","54211b5b":"x_train.tail()","a2b037df":"y_test","5bba1b64":"x_train = x_train.T\ny_train = y_train.T\nx_test = x_test.T\ny_test = y_test.T","6290009f":"from sklearn import linear_model\nlogistic_reg = linear_model.LogisticRegression(random_state=42,max_iter=150)\n#max_iter is optional parameter. You can write 10 or 3000 if you want.","d190ee17":"print(\"Test accuracy {}\".format(logistic_reg.fit(x_train.T,y_train.T).score(x_test.T,y_test.T)))\nprint(\"Train accuracy {}\".format(logistic_reg.fit(x_train.T,y_train.T).score(x_train.T,y_train.T)))","2c005351":"**I'll transpose to values. This is optional, you don't have to do that.**","5d87de6c":"**As we can see; our RAIN feature is an object. We can not compare like this. There for we must convert this from object to integer.**\n\n**I'll say 1 to TRUE values, 0 to FALSE values.**","2034b4bd":"**As we can see we have some missing values in there! We should clean that NaN values.**","4653ffde":"**We will not use DATE feature in this practice. Because DATE feature doesn't effect our comparasion. Therefore, let's drop that feature**","b44c3ef7":"**Let's see accuracy of our regression**","ebced980":"**All of values are between 0 and 1.**","498940e2":"**And finally, time to Logistic Regression!**","96fc8418":"**CONCLUSION**\n\nLogistic regression is used just a dataset which include 2 outputs (True-False, on-off, 1-2 etc.)\nWe can write all methods by our hand but sklearn library is so useful for logistic regression.","0f358321":"**INTRODUCTION**\n\n*You'll see on this project;*\n* EDA (Exploratory Data Analysis)\n* Data Cleaning\n* Logistic Regression with Sklearn\n* Results and Conclusion"}}