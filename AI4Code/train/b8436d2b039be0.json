{"cell_type":{"cff3eb50":"code","907553a2":"code","f1eb7707":"code","7b77be8b":"code","fa075a96":"code","5514e8ef":"code","332aec9d":"code","5aa45f01":"code","acc9bb3e":"code","dffcaddf":"code","58845a24":"code","e675fe2e":"markdown","b846eb8e":"markdown","3e10786d":"markdown","a22a0cc2":"markdown","bd286769":"markdown","b367e32c":"markdown","0188647f":"markdown","470f80f3":"markdown","ec691aae":"markdown","339d6a4e":"markdown","aa2c1a65":"markdown","d360cc8e":"markdown","51d087c7":"markdown","06389298":"markdown","c542c9b4":"markdown","ffd28d2d":"markdown"},"source":{"cff3eb50":"import tensorflow as tf  # now import the tensorflow module\nprint(tf.version)  # make sure the version is 2.x","907553a2":"string = tf.Variable(\"this is a string\", tf.string) \nnumber = tf.Variable(324, tf.int16)\nfloating = tf.Variable(3.567, tf.float64)","f1eb7707":"rank1_tensor = tf.Variable([\"Test\"], tf.string) \nrank2_tensor = tf.Variable([[\"test\", \"ok\"], [\"test\", \"yes\"]], tf.string)","7b77be8b":"tf.rank(rank1_tensor)","fa075a96":"tf.rank(rank2_tensor)","5514e8ef":"rank1_tensor.shape","332aec9d":"rank2_tensor.shape","5aa45f01":"tensor1 = tf.ones([1,2,3])  # tf.ones() creates a shape [1,2,3] tensor full of ones\ntensor2 = tf.reshape(tensor1, [2,3,1])  # reshape existing data to shape [2,3,1]\ntensor3 = tf.reshape(tensor2, [3, -1])  # -1 tells the tensor to calculate the size of the dimension in that place\n                                        # this will reshape the tensor to [3,3]\n                                                                             \n# The numer of elements in the reshaped tensor MUST match the number in the original","acc9bb3e":"print(tensor1)\nprint(tensor2)\nprint(tensor3)","dffcaddf":"# Creating a 2D tensor\nmatrix = [[1,2,3,4,5],\n          [6,7,8,9,10],\n          [11,12,13,14,15],\n          [16,17,18,19,20]]\n\ntensor = tf.Variable(matrix, dtype=tf.int32) \nprint(tf.rank(tensor))\nprint(tensor.shape)","58845a24":"# Now lets select some different rows and columns from our tensor\n\nthree = tensor[0,2]  # selects the 3rd element from the 1st row\nprint(three)  # -> 3\n\nrow1 = tensor[0]  # selects the first row\nprint(row1)\n\ncolumn1 = tensor[:, 0]  # selects the first column\nprint(column1)\n\nrow_2_and_4 = tensor[1::2]  # selects second and fourth row\nprint(row_2_and_4)\n\ncolumn_1_in_row_2_and_3 = tensor[1:3, 0]\nprint(column_1_in_row_2_and_3)","e675fe2e":"# Creating Tensors\nBelow is an example of how to create some different tensors.\n\nYou simply define the value of the tensor and the datatype and you are good to go! It's worth mentioning that usually we deal with tensors of numeric data, it is quite rare to see string tensors.\n\nFor a full list of datatypes please refer to the following guide.\n\nhttps:\/\/www.tensorflow.org\/api_docs\/python\/tf\/dtypes\/DType?version=stable","b846eb8e":"# Rank\/Degree of Tensors\nAnother word for rank is degree, these terms simply mean the number of dimensions involved in the tensor. What we created above is a tensor of rank 0, also known as a scalar.\n\nNow we'll create some tensors of higher degrees\/ranks.","3e10786d":"**To determine the rank** of a tensor we can call the following method.\n\n1.   List item\n2.   List item","a22a0cc2":"# Changing Shape\nThe number of elements of a tensor is the product of the sizes of all its shapes. There are often many shapes that have the same number of elements, making it convient to be able to change the shape of a tensor.\n\nThe example below shows how to change the shape of a tensor.","bd286769":"# Types of Tensors\nBefore we go to far, I will mention that there are diffent types of tensors. These are the most used and we will talk more in depth about each as they are used.\n\n- Variable\n- Constant\n- Placeholder\n- SparseTensor\nWith the execption of Variable all these tensors are immuttable, meaning their value may not change during execution.\n\nFor now, it is enough to understand that we use the Variable tensor when we want to potentially change the value of our tensor.","b367e32c":"![image.png](attachment:image.png)","0188647f":"Now let's have a look at our different tensors.","470f80f3":"If you have a CUDA enabled GPU you can install the GPU version of TensorFlow. You will also need to install some other software which can be found here: https:\/\/www.tensorflow.org\/install\/gpu","ec691aae":"# Installation\n\nYou can install tensorflow by just running !pip install tensorflow.","339d6a4e":"# Shape of Tensors\nNow that we've talked about the rank of tensors it's time to talk about the shape. The shape of a tensor is simply the number of elements that exist in each dimension. TensorFlow will try to determine the shape of a tensor but sometimes it may be unknown.\n\nTo **get the shape** of a tensor we use the shape attribute.","aa2c1a65":"The rank of a tensor is direclty related to the deepest level of nested lists. You can see in the first example ```[\"Test\"]``` is a rank 1 tensor as the deepest level of nesting is 1. \nWhere in the second example ```[[\"test\", \"ok\"], [\"test\", \"yes\"]]``` is a rank 2 tensor as the deepest level of nesting is 2.","d360cc8e":"# Tensors \n\"A tensor is a generalization of vectors and matrices to potentially higher dimensions. Internally, TensorFlow represents tensors as n-dimensional arrays of base datatypes.\" (https:\/\/www.tensorflow.org\/guide\/tensor)\n\nIt should't surprise you that tensors are a fundemental apsect of TensorFlow. They are the main objects that are passed around and manipluated throughout the program. Each tensor represents a partialy defined computation that will eventually produce a value. TensorFlow programs work by building a graph of Tensor objects that details how tensors are related. Running different parts of the graph allow results to be generated.\n\nEach tensor has a data type and a shape. \n\n**Data Types Include**: float32, int32, string and others.\n\n**Shape**: Represents the dimension of data.\n\nJust like vectors and matrices tensors can have operations applied to them like addition, subtraction, dot product, cross product etc.\n\nIn the next sections we will discuss some different properties of tensors. This is to make you more familiar with how tensorflow represnts data and how you can manipulate this data.\n","51d087c7":"Upcoming part II","06389298":"# Sources\nMost of the information is taken direclty from the TensorFlow website which can be found below.\n\nhttps:\/\/www.tensorflow.org\/guide\/tensor","c542c9b4":"# Slicing Tensors\nYou may be familiar with the term \"slice\" in python and its use on lists, tuples etc. Well the slice operator can be used on tensors to select specific axes or elements.\n\nWhen we slice or select elements from a tensor, we can use comma seperated values inside the set of square brackets. Each subsequent value refrences a different dimension of the tensor.\n\nEx: ```tensor[dim1, dim2, dim3]```\n\nI've included a few examples that will hopefully help illustrate how we can manipulate tensors with the slice operator.","ffd28d2d":"# TensorFlow 2.0 Introduction\nIn this notebook you will be given an interactive introduction to TensorFlow 2.0. We will walk through the following topics within the TensorFlow module:\n\n- TensorFlow Install and Setup\n- Representing Tensors\n- Tensor Shape and Rank\n- Types of Tensors"}}