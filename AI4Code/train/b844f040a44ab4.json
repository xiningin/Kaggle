{"cell_type":{"8ef5bec0":"code","b339d663":"code","ac156360":"code","93dc92d8":"code","2e5d2040":"code","890b5853":"code","10804a4a":"code","4d926d33":"code","903f3b49":"code","127fd95b":"code","d961661f":"code","d9497267":"code","e52d1ac3":"code","da5f3427":"code","de65ac2f":"code","889e9f1c":"code","dfb1bc50":"code","aabafe2a":"code","bd4395b3":"code","9459fc48":"code","2d2c0ed7":"code","d088a309":"code","938fad3f":"code","2687e4ea":"code","1f7d9d88":"code","bfe40aaf":"code","5fc5b361":"code","93ee0a5c":"code","1526eda2":"code","4d825be1":"code","f5135603":"code","dfd78351":"code","ef0c9e78":"code","e1fe1b19":"code","d0d54a55":"code","00cf3d0c":"code","388acbcd":"code","f8a7410e":"code","c737a0a0":"code","e780107e":"code","00727f75":"code","1ebb5b5a":"code","ce56e0c0":"code","54c57a9c":"code","ca8f2e62":"code","dfe0d61d":"code","04ff6c0e":"code","14ec6e29":"code","529f0163":"code","ed395d3f":"code","5dd0bf70":"code","f9820aae":"code","e81f906b":"code","ff4c827e":"code","c9f7d6f4":"code","1723c308":"code","700a3b34":"code","c6a64d40":"code","07206ea6":"code","326aacd6":"code","7887b650":"code","9204a325":"markdown","5a9d0d82":"markdown","6e3050f0":"markdown","cb446259":"markdown","337225a3":"markdown","3f2c2ec3":"markdown","5502c9ad":"markdown","3683d69a":"markdown","80f49e69":"markdown","37bfd537":"markdown","a107eda0":"markdown","62d9154a":"markdown","60ac4098":"markdown","da219944":"markdown","293039a2":"markdown","0e7e6d04":"markdown","c8a9fc7e":"markdown","6707f580":"markdown","2b09965a":"markdown","072e2ab7":"markdown","34e7c7e3":"markdown","0286cdec":"markdown","488f6fad":"markdown","a7609770":"markdown","4c90d92f":"markdown","df337c3b":"markdown","45e34c14":"markdown","5c2c89bb":"markdown","8ba333c6":"markdown","840bec38":"markdown","124fe325":"markdown","3ff44c6d":"markdown","850026ab":"markdown"},"source":{"8ef5bec0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/help-international-data'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b339d663":"#import warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.filterwarnings(\"always\")","ac156360":"#importing all the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","93dc92d8":"# Reading the csv file\ncountry=pd.read_csv(\"..\/input\/help-international-data\/Country-data.csv\")\ncountry.head()","2e5d2040":"# looking for shape\ncountry.shape","890b5853":"# looking for types\ncountry.info()","10804a4a":"# checking the mean\ncountry.describe","4d926d33":"#checking columns\ncountry.columns","903f3b49":"#checking missing values\ncountry.isnull().sum()","127fd95b":"#converting 'exports' in actual values \ncountry['exports']=round((country['exports']*country['gdpp'])\/100,2)","d961661f":"#converting 'health' in actual values\ncountry['health']=round((country['health']*country['gdpp'])\/100,2)","d9497267":"#converting 'imports' in actual values\ncountry['imports']=round((country['imports']*country['gdpp'])\/100,2)","e52d1ac3":"# checking top 5 values\ncountry.head()","da5f3427":"#Perform Analysis for child_mort \nplt.figure(figsize=(15,10))\nchild_mort=country[['country','child_mort']].sort_values('child_mort',ascending=False).head(10)\nax=sns.barplot(x='country',y='child_mort',data=child_mort)\nax.set(xlabel='',ylabel='child_mortlity Rate')\nplt.xticks(rotation=90)\nplt.show()","de65ac2f":"plt.figure(figsize=(15,10))\nincome=country[['country','income']].sort_values('income',ascending=False).tail(10)\nax=sns.barplot(x='country',y='income',data=income)\nax.set(xlabel='',ylabel='income')\nplt.xticks(rotation=90)\nplt.show()","889e9f1c":"plt.figure(figsize=(15,10))\ngdpp=country[['country','gdpp']].sort_values('gdpp',ascending=False).tail(10)\nax=sns.barplot(x='country',y='gdpp',data=gdpp)\nax.set(xlabel='',ylabel='GDPP')\nplt.xticks(rotation=90)\nplt.show()","dfb1bc50":"# performing EDA by making pairplots\nsns.set(style=\"ticks\", color_codes=True)\nsns.pairplot(country)\nplt.show()","aabafe2a":"# ploting the distplot\nplt.figure(figsize = (15,10))\nfeatures = country.columns[1:]\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(country[i[1]])","bd4395b3":"#plotting boxplots\nplt.figure(figsize = (15,10))\nfeatures = country.columns[1:]\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(country[i[1]])","9459fc48":"# capping the lower_end outliers from 'child_mort'\nq1=country['child_mort'].quantile(0.01)\ncountry['child_mort'][country['child_mort']<=q1] = q1","2d2c0ed7":"#capping upper end outliers from 'exports'\nq2=country['exports'].quantile(0.99)\ncountry['exports'][country['exports']>=q2] = q2","d088a309":"#capping upper end outliers from 'health'\nq3=country['health'].quantile(0.99)\ncountry['health'][country['health']>=q3] = q3","938fad3f":"#capping upper end outliers from 'imports'\nq4=country['imports'].quantile(0.99)\ncountry['imports'][country['imports']>=q4] = q4","2687e4ea":"#capping upper end outliers from 'income'\nq5=country['income'].quantile(0.99)\ncountry['income'][country['income']>=q5] = q5","1f7d9d88":"#capping upper end outliers from 'Inflation'\nq6=country['inflation'].quantile(0.99)\ncountry['inflation'][country['inflation']>=q6] = q6","bfe40aaf":"#capping upper end outliers from 'life_expec'.\nq7=country['life_expec'].quantile(0.99)\ncountry['life_expec'][country['life_expec']>=q7] = q7","5fc5b361":"#capping upper end outliers from 'gdpp'.-\nq9=country['gdpp'].quantile(0.99)\ncountry['gdpp'][country['gdpp']>=q9] = q9","93ee0a5c":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","1526eda2":"hopkins(country.drop('country',axis = 1))","4d825be1":"#dropping 'country' to analyse the data.\ncountry_new=country.drop('country',axis=1)","f5135603":"#scaling\nscaler=StandardScaler()\ncountry_scaled=scaler.fit_transform(country_new)\ncountry_scaled.shape","dfd78351":"#converting to Dataframe.\ncountry_scaled=pd.DataFrame(country_scaled)\ncountry_scaled.columns=country_new.columns\ncountry_scaled.head()","ef0c9e78":"# calculting the silouette score\nssd=[]\nfor k in range(2,11):\n    kmeans=KMeans(n_clusters=k)  \n    kmeans.fit(country_scaled)      #fit the scaled data\n    ssd.append([k,silhouette_score(country_scaled,kmeans.labels_)])  #kmeans.labels_\nplt.plot(pd.DataFrame(ssd)[0],pd.DataFrame(ssd)[1]) #plotting the curve","e1fe1b19":"# plotting Elbow curve\nssd = []\nfor k in range(2, 11):\n    kmeans = KMeans(n_clusters = k)\n    kmeans.fit(country_scaled)   \n    ssd.append([k, kmeans.inertia_]) # kmeans.inertia_\n    \nplt.plot(pd.DataFrame(ssd)[0], pd.DataFrame(ssd)[1])#plotting the curve","d0d54a55":"# with k=3 making the the model\nkmeans=KMeans(n_clusters=3,random_state=100)\nkmeans.fit(country_scaled)","00cf3d0c":"#cluster labels assigned\nkmeans.labels_","388acbcd":"# adding the cluster_labels to the main dataset\ncountry['cluster_label']=kmeans.labels_\ncountry.head()","f8a7410e":"#counting the cluster_labels in the main dataset\ncountry.cluster_label.value_counts()","c737a0a0":"# analysing the clusters formed using scatterplot\nsns.scatterplot(x = 'child_mort', y = 'gdpp', hue = 'cluster_label', data = country, palette = 'Set1')","e780107e":"# analysing the clusters formed using scatterplot\nsns.scatterplot(x = 'income', y = 'gdpp', hue = 'cluster_label', data = country, palette = 'Set1')","00727f75":"# analysing the clusters formed using scatterplot\nsns.scatterplot(x = 'child_mort', y = 'income', hue = 'cluster_label', data = country, palette = 'Set1')","1ebb5b5a":"# groupping the clusters so formed and finding the mean\ncountry.drop('country',axis = 1).groupby('cluster_label').mean()","ce56e0c0":"#getting country columns\ncountry.columns","54c57a9c":"#again group by cluster labels and analysing only child_mort,income,gdpp\ncountry.drop(['country', 'exports', 'health', 'imports',\n       'inflation', 'life_expec', 'total_fer'],axis=1).groupby('cluster_label').mean().plot(kind='bar')","ca8f2e62":"#finding the countries in cluster=0\ncountry[country['cluster_label']==0]['country']","dfe0d61d":"# cluster profiling , we need to fing the bottom most countries which are in need of aid.\n#giving priority to child_mort'over 'income','gdpp' while sorting\ncountry[country['cluster_label']==0].sort_values(by=['child_mort','income','gdpp'],ascending=[False,True,True]).head()","04ff6c0e":"# cluster profiling , we need to fing the bottom most countries which are in need of aid.\n#giving priority to 'gdpp' over 'income',child_mort' while sorting\ncountry[country['cluster_label']==0].sort_values(by=['gdpp','income','child_mort'],ascending=[True,True,False]).head()","14ec6e29":"#Thees are the counytries which are really good and top countries in our data set with least child_mortality and very good gdpp and income\ncountry[country['cluster_label']==1].sort_values(by=['child_mort','income','gdpp'],ascending=[True,False,False]).head()","529f0163":"country_scaled.head()","ed395d3f":"#single linkage\nplt.figure(figsize=(18,15))\ncountry_mergings=linkage(country_scaled,method=\"single\",metric=\"euclidean\")\ndendrogram(country_mergings)\nplt.show()","5dd0bf70":"#complete linkage\nplt.figure(figsize=(18,15))\ncountry_mergings=linkage(country_scaled,method=\"complete\",metric=\"euclidean\")\ndendrogram(country_mergings)\nplt.show()","f9820aae":"#getting number of clusters\ncut_tree(country_mergings,n_clusters=3).shape","e81f906b":"# adding 'cluster_h_label' which is cluster_id according to hierarchical clustering to the main dataset\ncluster_h_label=cut_tree(country_mergings,n_clusters=3).reshape(-1,)\ncountry['cluster_h_label']=cluster_h_label\ncountry.head()","ff4c827e":"#analysing cluster so formed using scatter plot\nsns.scatterplot(x = 'child_mort', y = 'gdpp', hue = 'cluster_h_label', data = country, palette = 'Set1')","c9f7d6f4":"#analysing cluster so formed using scatter plot\nsns.scatterplot(x = 'income', y = 'gdpp', hue = 'cluster_h_label', data = country, palette = 'Set1')","1723c308":"#analysing cluster so formed using scatter plot\nsns.scatterplot(x = 'child_mort', y = 'income', hue = 'cluster_h_label', data = country, palette = 'Set1')","700a3b34":"#group the cluster so formed and determining mean\ncountry.drop(['country','cluster_label'],axis = 1).groupby('cluster_h_label').mean()","c6a64d40":"#cluster profiling where we are getting least five counytries with less gdp,less income, high child_mortality\ncountry[country['cluster_h_label']==0].sort_values(by=['child_mort','income','gdpp'],ascending=[False,True,True]).head()","07206ea6":"#cluster profiling where we are getting least five counytries with less gdp,less income, high child_mortality\ncountry[country['cluster_h_label']==0].sort_values(by=['gdpp','income','child_mort'],ascending=[True,True,False]).head()","326aacd6":"#cluster profiling where we are getting the countries having good gdp ,least child_mortality\ncountry[country['cluster_h_label']==1].sort_values(by=['child_mort','income','gdpp'],ascending=[True,False,False]).head()","7887b650":"#count the number of elements in each cluster.\ncountry.cluster_h_label.value_counts()","9204a325":"#### 3. health","5a9d0d82":"#### Pairplot","6e3050f0":"#### 6.Inflation","cb446259":"#### 2. exports","337225a3":"# Data Preparation","3f2c2ec3":"The countries having high child mortality Rate according to EDA are:\n    Haiti,Sierra Leone, Chad, Central African Republic, Mali, Nigeria, Niger, Angola,Burkina Faso, Congo, Dem. Rep.","5502c9ad":"# Outlier treatment","3683d69a":"### Hopkins Score","80f49e69":"#### 1. child_mort","37bfd537":"# EDA","a107eda0":"#### Elbow curve","62d9154a":"#### silhouette score","60ac4098":"#### Distplot","da219944":"# Rescaling","293039a2":"#### Barplot","0e7e6d04":"**Comments and Suggestions are welcome!**","c8a9fc7e":"**PROBLEM STATEMENT**\n\nHELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\nAfter the recent\u00a0funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid.\u00a0\nOur\u00a0job is to categorize the countries using some socio-economic and health factors that determine the overall development of the country. Then we need to suggest the countries which the CEO needs to focus on the most.\u00a0\n","6707f580":"#### 4. imports","2b09965a":"#### 7. life_expec","072e2ab7":"#### So we find the the countries which are in direst need of aid are:\n\n##### 1. Haiti\n##### 2. Sierra Leone\n##### 3. Chad\n##### 4. Central African Republic\n##### 5. Mali\n##### 6. Burundi","34e7c7e3":"**Thank you for reading!**","0286cdec":"#### 5. income","488f6fad":"The countries having low gdpp according to EDA are:-\nEritrea, Malawi, Central African Republic,Mozambique, Madagascar, Sierra Leone, Niger, Congo, Dem. Rep., Liberia, Burundi","a7609770":"# Reading and Understanding data","4c90d92f":"# Hierchical Clustering","df337c3b":"# Clustering","45e34c14":"# Cluster Analysis","5c2c89bb":"# Modelling","8ba333c6":"#### Boxplot","840bec38":"So we are moving ahead with k=3 as from both the curve we are getting k=3.","124fe325":"# Cluster Profiling","3ff44c6d":"#### 8. gdpp","850026ab":"The countries having low Income according to EDA are:\n    Sierra Leone, Togo, Guinea, Malawi, Mozambique,Central African Republic, Niger, Burundi, Liberia, Congo. Dem. Rep."}}