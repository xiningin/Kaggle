{"cell_type":{"9c002341":"code","9e40303a":"code","e64b3a10":"code","fb9523a6":"code","b2cec05f":"code","f6c8f115":"code","87296dae":"code","ed347cbb":"code","bc848e95":"code","4be52f2c":"code","f1292b18":"code","ff97ff01":"code","5ccea93c":"code","070c8f64":"code","0507722e":"code","9b90035b":"code","6bf622cf":"code","49de0f7e":"code","0ce0e6bb":"code","c1a2b74f":"code","fd1b1ca4":"code","f0fff7d2":"code","75b88cc1":"code","e68c24af":"markdown","3de4bf82":"markdown","80a52fab":"markdown","75701e0b":"markdown","0484783b":"markdown","60441cf1":"markdown","cfacd651":"markdown","defe52f6":"markdown","10d044da":"markdown","e53ee577":"markdown","bcf2ca9d":"markdown","e9c5a8a5":"markdown","f8122734":"markdown"},"source":{"9c002341":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9e40303a":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head(10)","e64b3a10":"train.info()","fb9523a6":"y = train['Survived']\ntrain.drop(labels = ['Survived','PassengerId','Name','Ticket','Cabin'], axis = 1, inplace = True)","b2cec05f":"train.head()","f6c8f115":"train.info()","87296dae":"train['Age'].fillna(train['Age'].mean(), inplace = True)","ed347cbb":"train.info()","bc848e95":"categorical_columns = ['Sex','Embarked']\ntrain = pd.get_dummies(train,columns = categorical_columns, dtype = int)","4be52f2c":"train.info()","f1292b18":"X = []\nfor column in train.columns:\n    X.append(column)\nX = train[X]\nX","ff97ff01":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression().fit(X, y)","5ccea93c":"y_pred = model.predict(train)\ny_pred","070c8f64":"print(y_pred.max())\nprint(y_pred.min())","0507722e":"def one_or_zero(abc):\n    if (1 - abc) < (abc - 0):\n        return 1\n    else: \n        return 0","9b90035b":"list_of_predictions = []\n\nfor pred in y_pred:\n    list_of_predictions.append(one_or_zero(pred))\n    \ny_pred = np.asarray(list_of_predictions)\ny_pred","6bf622cf":"unique, counts = np.unique( np.asarray(y_pred == y), return_counts=True)\ntrue_false_values = dict(zip(unique, counts))\naccuracy = true_false_values[True]\/len(np.asarray(y_pred == y))\naccuracy","49de0f7e":"original_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.drop(labels = ['PassengerId','Name','Ticket','Cabin'], axis = 1, inplace = True)\ntest['Age'].fillna(test['Age'].mean(), inplace = True)\ncategorical_columns = ['Sex','Embarked']\ntest = pd.get_dummies(test,columns = categorical_columns, dtype = int)","0ce0e6bb":"test.info()","c1a2b74f":"test['Fare'].fillna(test['Fare'].mean(), inplace = True)","fd1b1ca4":"test.info()","f0fff7d2":"test_pred = model.predict(test)\nlist_of_predictions_test = []\n\nfor pred in test_pred:\n    list_of_predictions_test.append(one_or_zero(pred))\n    \ntest_pred = np.asarray(list_of_predictions_test)\ntest_pred","75b88cc1":"submission = pd.DataFrame({\n        \"PassengerId\": original_test[\"PassengerId\"],\n        \"Survived\": test_pred\n    }) \n\nfilename = 'submission.csv'\nsubmission.to_csv(filename,index=False)\nprint('Saved file: ' + filename)","e68c24af":"Filling the null value in Fare column with the mean:","3de4bf82":"Function to convert the prediction to a one (survived) or zer (not survived)","80a52fab":"Looks like there are some null values in the test data which were not there in train:","75701e0b":"First I will  split the data between variable and targets. I will also remove the columns PassenderId, Name, Ticket (these should not have any effect on whether the passenger survived or not) and Cabin (as these have a lot of missing values). I will fill the ","0484783b":"Making predictions for train data set:","60441cf1":"Converting the predictions to 1 or 0:","cfacd651":"(See [Version 2](https:\/\/www.kaggle.com\/niteshhalai\/titanic-linear-regression-v2) for a model with slightly better accuracy.","defe52f6":"Getting the range of the predictions","10d044da":"**Using the model on the test data**","e53ee577":"Accuracy of the model on the same data it trained on:","bcf2ca9d":"I want to turn the sex and Embarked columns to dummy variables using one hot encoding:","e9c5a8a5":"I am trying to use linear regression to the titanic dataset to see if it results in any meaningful prediction","f8122734":"Filling the age missing age values with mean age."}}