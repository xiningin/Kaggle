{"cell_type":{"cbcd2d83":"code","3198efc2":"code","0a189f39":"code","9a4c1cb5":"code","e13aa466":"code","d9981ce3":"code","c8cbc5f4":"code","719b8289":"code","8ed391f0":"code","266109fe":"code","8d4de178":"code","de555c08":"code","54c35723":"code","3c393fa8":"code","1fac0859":"code","917a7e30":"code","0ba77624":"code","244de215":"code","69926d15":"code","2ff288be":"markdown"},"source":{"cbcd2d83":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n","3198efc2":"import pandas as pd\ndata_main = pd.read_csv('\/kaggle\/input\/covid19-symptoms-checker\/Raw-Data.csv')\ndata_main.shape","0a189f39":"data_main.head(10)","9a4c1cb5":"data_main.dtypes","e13aa466":"pd.isnull(data_main)","d9981ce3":"data_main.describe(include='all')","c8cbc5f4":"country = len(data_main.Country.dropna().unique())\nage = len(data_main.Age.dropna().unique())\ngender = len(data_main.Gender.dropna().unique())\nsymptoms = len(data_main.Symptoms.dropna().unique())\nesymptoms = len(data_main.Experiencing_Symptoms.dropna().unique())\nseverity = len(data_main.Severity.dropna().unique())\ncontact = len(data_main.Contact.dropna().unique())\n\nprint(\"Total Combination Possible: \",country * age * gender * symptoms * esymptoms * severity * contact)","719b8289":"import itertools\ncolumns = [data_main.Country.dropna().unique().tolist(),\n          data_main.Age.dropna().unique().tolist(),\n          data_main.Gender.dropna().unique().tolist(),\n          data_main.Symptoms.dropna().unique().tolist(),\n          data_main.Experiencing_Symptoms.dropna().unique().tolist(),\n          data_main.Severity.dropna().unique().tolist(),\n          data_main.Contact.dropna().unique().tolist()]\n\nfinal_data = pd.DataFrame(list(itertools.product(*columns)), columns=data_main.columns)","8ed391f0":"final_data.shape","266109fe":"final_data.head(5)","8d4de178":"symptoms_list = final_data['Symptoms'].str.split(',')\n\nfrom collections import Counter\nsymptoms_counter = Counter(([a for b in symptoms_list.tolist() for a in b]))\n\nfor symptom in symptoms_counter.keys():\n    final_data[symptom] = 0\n    final_data.loc[final_data['Symptoms'].str.contains(symptom), symptom] = 1\n\nfinal_data.head()","de555c08":"esymptoms_list = final_data['Experiencing_Symptoms'].str.split(',')\n\nfrom collections import Counter\nesymptoms_counter = Counter(([a for b in esymptoms_list.tolist() for a in b]))\n\nfor esymptom in esymptoms_counter.keys():\n    final_data[esymptom] = 0\n    final_data.loc[final_data['Experiencing_Symptoms'].str.contains(esymptom), esymptom] = 1\n\nfinal_data.head()","54c35723":"final_data = final_data.drop(['Symptoms','Experiencing_Symptoms'],axis=1)\ndummies = pd.get_dummies(final_data.drop('Country',axis=1))\ndummies['Country'] = final_data['Country']\nfinal_data = dummies\nfinal_data.head(10)","3c393fa8":"final_data.dtypes","1fac0859":"data=pd.read_csv('..\/input\/covid19-symptoms-checker\/Cleaned-Data.csv')\ndata.head(10)","917a7e30":"data.dtypes","0ba77624":"data.groupby(['Severity_Severe'])\ndata","244de215":"plt.figure(figsize=(8,6))\ndata.groupby('Fever').size().plot(color='green',kind='bar')\nplt.show()","69926d15":"plt.figure(figsize=(15,10))\ndata.groupby('Dry-Cough').sum().plot(kind='hist')\nplt.show()","2ff288be":"###Starter code.\n###Kindly upvote if you find this kernel useful. Thanks!"}}