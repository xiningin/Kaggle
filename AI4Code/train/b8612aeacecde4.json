{"cell_type":{"aa7952e2":"code","2bce7ac4":"code","9ebed56e":"code","7ceac72f":"code","34d33cbb":"code","b0adc4a0":"code","2c83a471":"code","9203cafd":"code","4c18c725":"code","2396db68":"code","33560768":"code","7d937d58":"code","459d0387":"code","182170ae":"code","8394b997":"code","f39b3954":"code","42c4cf03":"code","3e1f349f":"code","2cb38dae":"code","364af126":"code","0058c538":"code","eb3f3fbe":"code","e93096e7":"code","a8133355":"code","d005f548":"code","299454d3":"code","e8988a9e":"code","aa053ea4":"code","e9b3e431":"code","cae8a6c4":"code","7e954ca2":"code","fc9adaa3":"code","ac369ca3":"code","7773563c":"code","34f36902":"code","f3ff0517":"code","44ef64d8":"code","c60403ad":"code","8cff7883":"code","2fa3b89a":"code","7c7601f5":"code","ccc67830":"code","dc05dbf0":"code","f872c3f9":"code","5cdbf91a":"code","1a945342":"code","eaba1c06":"code","fd713d08":"code","f9a596c2":"code","e394a336":"code","6d35b502":"code","47ba0ab4":"code","ca535293":"code","57336128":"code","b4d2a29c":"code","b29410a0":"code","3c58a51c":"code","d2938ef4":"code","66c92b10":"code","3a5dad67":"code","970eae04":"code","dfabb2cc":"code","2cdaa866":"code","3cc8ba22":"code","782d231e":"code","3478b214":"code","3e8a9d9e":"code","d80409f0":"code","e0094d8d":"code","85ec4b63":"code","fdb1b93d":"code","583b49f2":"code","7ec98d24":"code","b6c9a808":"code","91e26c63":"code","f70b801d":"code","c2352a98":"code","bbec4ce2":"code","3112850f":"code","a84a68eb":"code","6cc9ca3f":"code","e1206afe":"code","562b0649":"code","9ed78046":"code","7b6be50e":"code","15c9f4b1":"code","c721c7b8":"code","38698183":"code","0326d14b":"code","eab71e6f":"code","18779b6a":"code","a29a5f1d":"code","eabfbc8d":"code","d6c4ec17":"code","4b683155":"code","d0a44aa6":"code","ad122082":"code","ec833d2d":"code","24542776":"markdown","03c947b3":"markdown","f151f338":"markdown","8e9048ce":"markdown","2ce2f32a":"markdown","8436e951":"markdown","b638290f":"markdown","e73d982e":"markdown","c5a565b5":"markdown","33e6eafc":"markdown","c1ef0d60":"markdown","2cc36462":"markdown","550951dc":"markdown","17e3b811":"markdown","10090886":"markdown","7b1a7dc4":"markdown","df87025b":"markdown","a9f2be69":"markdown","8334c9a1":"markdown","11ec51f1":"markdown","eaa4f96e":"markdown","9e4eda59":"markdown","3eb746e4":"markdown","34544993":"markdown","0187161b":"markdown","438fdfbd":"markdown","0eabae91":"markdown","4b455d82":"markdown","1ce7af8b":"markdown","8fe47a5b":"markdown","277a823a":"markdown","d6c560a6":"markdown","271f8617":"markdown","9b9c18d7":"markdown","c66c485a":"markdown","ff976c56":"markdown","a9534ed7":"markdown","c8cba8ba":"markdown","09a77974":"markdown","00d40956":"markdown","b3e38006":"markdown","e4596c72":"markdown","ecc872e9":"markdown","81f6f9a6":"markdown","aedbfbd8":"markdown","b0e3d8c5":"markdown","0b192885":"markdown","e5e4eafd":"markdown","2c4f79d6":"markdown","bf030edc":"markdown","f3d7cab4":"markdown","27081260":"markdown","7df8cbed":"markdown","ef5d3f83":"markdown","2b9911dc":"markdown","7bc615b7":"markdown","36a18fa7":"markdown","b03897f4":"markdown","a538ae46":"markdown","5c52d282":"markdown","b4000a88":"markdown","3a4481b0":"markdown","1f7d3eba":"markdown","f0d37cec":"markdown","aff9968a":"markdown","8213f7c4":"markdown","2f12654c":"markdown","7b7bdb37":"markdown","b3f1304a":"markdown","95763850":"markdown","698cad1f":"markdown","3ff4c197":"markdown","b28b3529":"markdown","a80c07f1":"markdown","83c03797":"markdown","8bf17622":"markdown","5b94663e":"markdown"},"source":{"aa7952e2":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt","2bce7ac4":"import matplotlib.pyplot as plt\nfrom matplotlib.pyplot import xticks\nfrom scipy.stats import skew\nimport seaborn as sns\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')","9ebed56e":"%matplotlib inline\nplt.style.use('fivethirtyeight')","7ceac72f":"cols = [\n    'tourney_id', \n    'tourney_name', \n    'surface', \n    'draw_size', \n    'tourney_level',\n    'tourney_date', \n    'match_num', \n    'winner_id', \n    'winner_seed', \n    'winner_entry',\n    'winner_name',\n    'winner_hand', \n    'winner_ht', \n    'winner_ioc', \n    'winner_age', \n    'winner_rank', \n    'winner_rank_points', \n    'loser_id',\n    'loser_seed',\n    'loser_entry',\n    'loser_name',\n    'loser_hand',\n    'loser_ht',\n    'loser_ioc',\n    'loser_age',\n    'loser_rank',\n    'loser_rank_points',\n    'score',\n    'best_of', \n    'round',\n    'minutes', \n    'w_ace', \n    'w_df', \n    'w_svpt',\n    'w_1stIn', \n    'w_1stWon', \n    'w_2ndWon',\n    'w_SvGms', \n    'w_bpSaved', \n    'w_bpFaced',\n    'l_ace',\n    'l_df',\n    'l_svpt',\n    'l_1stIn',\n    'l_1stWon',\n    'l_2ndWon',\n    'l_SvGms',\n    'l_bpSaved',\n    'l_bpFaced'\n]","34d33cbb":"ltennis = pd.concat([\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2000.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2001.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2002.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2003.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2004.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2005.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2006.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2007.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2008.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2009.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2010.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2011.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2012.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2013.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2014.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2015.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2016.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2017.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2018.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2019.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2020.csv', usecols=cols),\n    pd.read_csv('..\/input\/atp-masters-tennis-dataset\/atp_matches_2021.csv', usecols=cols),\n\n],ignore_index=True) #have to make sure that the index will not be duplicated\n\nltennis.tail()","b0adc4a0":"ltennis.info()","2c83a471":"ltennis['tourney_date'] = pd.to_datetime(ltennis.tourney_date, format='%Y%m%d')\nltennis = ltennis.sort_values(['tourney_date'])","9203cafd":"ltennis['tourney_yearmonth'] = ltennis.tourney_date.astype(str).str[:6]\nltennis['tourney_year'] = ltennis.tourney_date.astype(str).str[:4]\nltennis['tourney_year'] = ltennis['tourney_year'].astype(int)","4c18c725":"top7 = ltennis[(ltennis.winner_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])) | (ltennis.loser_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini']))]","2396db68":"top7.info()","33560768":"top7_wins = top7[top7.winner_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])]\ntop7_losses = top7[top7.loser_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])]","7d937d58":"top7_wins = top7_wins[['tourney_date', 'winner_name', 'winner_rank']]\ntop7_losses = top7_losses[['tourney_date', 'loser_name', 'winner_rank']]","459d0387":"top7_wins.columns = ['Date','Player','Rank']\ntop7_losses.columns = ['Date','Player', 'Rank']","182170ae":"top7 = pd.concat([top7_wins, top7_losses], sort=False)","8394b997":"top7.Rank = top7.Rank.astype(int)\ntop7 = top7[top7.Rank < 100]","f39b3954":"top7['Date'] = pd.to_datetime(top7.Date, format='%Y%m%d')\ntop7 = top7.sort_values(['Date'])","42c4cf03":"medvedev = top7[top7.Player == 'Daniil Medvedev']\nthiem = top7[top7.Player == 'Dominic Thiem']\ntsitsipas = top7[top7.Player == 'Stefanos Tsitsipas']\nzverev = top7[top7.Player == 'Alexander Zverev']\nrublev = top7[top7.Player == 'Andrey Rublev']\nschwartzman = top7[top7.Player == 'Diego Schwartzman']\nberrettini = top7[top7.Player == 'Matteo Berrettini']","3e1f349f":"top7.Player.unique()","2cb38dae":"fig = plt.figure(figsize=(18,13))\n\nsns.lineplot(x='Date', y='Rank', data=medvedev[medvedev.Rank <=10])\nsns.lineplot(x='Date', y='Rank', data=thiem[thiem.Rank <=10])\nsns.lineplot(x='Date', y='Rank', data=tsitsipas[tsitsipas.Rank <=10])\n\nfig.legend(bbox_to_anchor=(-0.2, 0.8, 1., 0), labels=[\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas'\n])\nt=fig.suptitle('Rank Evolution for these players in the top 10')","364af126":"fig = plt.figure(figsize=(18,13))\nsns.lineplot(x='Date', y='Rank', data=medvedev)\nsns.lineplot(x='Date', y='Rank', data=thiem)\nsns.lineplot(x='Date', y='Rank', data=tsitsipas)\nfig.legend(bbox_to_anchor=(-0.2, 0.8, 1., 0), labels=['Daniil Medvedev','Dominic Thiem','Stefanos Tsitsipas'])\nt=fig.suptitle('Rank Evolution for these players')","0058c538":"fig = plt.figure(figsize=(18,13))\n\nsns.lineplot(x='Date', y='Rank', data=zverev[zverev.Rank <=10])\nsns.lineplot(x='Date', y='Rank', data=rublev[rublev.Rank <=10])\nsns.lineplot(x='Date', y='Rank', data=schwartzman[schwartzman.Rank <=10])\nsns.lineplot(x='Date', y='Rank', data=berrettini[berrettini.Rank <=10])\n\nfig.legend(bbox_to_anchor=(-0.2, 0.8, 1., 0), labels=[\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'\n])\nt=fig.suptitle('Rank Evolution for these remaining players in the top 10')","eb3f3fbe":"top7_annual = ltennis[(ltennis.winner_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])) | (ltennis.loser_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini']))]","e93096e7":"top7_wins_annual = top7_annual[top7_annual.winner_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])]\ntop7_losses_annual = top7_annual[top7_annual.loser_name.isin([\n'Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])]","a8133355":"plt.figure(figsize=(15, 5))\n\nplt.subplot(1,2,1)\nplt1 = top7_wins_annual.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players')\nplt1.set(xlabel = 'Players', ylabel='Wins')\n\nplt.figure(figsize=(15, 5))\n\nplt.subplot(1,2,2)\nplt1 = top7_losses_annual.loser_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Losses By These Players')\nplt1.set(xlabel = 'Players', ylabel='Losses')\nplt.show()\n","d005f548":"ltennisace = ltennis[ltennis['tourney_level'].astype(str).isin(['G','M'])].copy()\nltennisace['w_ace'] = ltennisace['w_ace'].astype(float)\ng = sns.boxplot(x=\"surface\", y=\"w_ace\", data=ltennisace)\ng.set(xlabel='Surface', ylabel='Aces')","299454d3":"base3 = top7_wins_annual[['tourney_date', 'winner_name','winner_name', 'winner_rank','tourney_name','tourney_level','winner_seed','round','w_bpSaved','w_ace','minutes','w_df','w_svpt','w_1stIn','w_1stWon','w_2ndWon','w_SvGms','l_df','l_svpt','l_1stIn','l_1stWon','l_2ndWon','l_SvGms','tourney_id','surface']]  \nbase4 = top7_losses_annual[['tourney_date', 'loser_name','loser_name', 'winner_rank','tourney_name','tourney_level','winner_seed','round','w_bpSaved','w_ace','minutes','w_df','w_svpt','w_1stIn','w_1stWon','w_2ndWon','w_SvGms','l_df','l_svpt','l_1stIn','l_1stWon','l_2ndWon','l_SvGms','tourney_id','surface']]","e8988a9e":"base3.columns = ['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round','w_bpSaved','w_ace','minutes','w_df','w_svpt','w_1stIn','w_1stWon','w_2ndWon','w_SvGms','l_df','l_svpt','l_1stIn','l_1stWon','l_2ndWon','l_SvGms','tourney_id','surface']\nbase4.columns = ['Date','Player','loser_name', 'Rank','Tournament','Tournament_Level','Winner Seed','Round','w_bpSaved','w_ace','minutes','w_df','w_svpt','w_1stIn','w_1stWon','w_2ndWon','w_SvGms','l_df','l_svpt','l_1stIn','l_1stWon','l_2ndWon','l_SvGms','tourney_id','surface']","aa053ea4":"indiv_w = top7_wins_annual[['tourney_date', 'winner_name', 'winner_rank','tourney_name','tourney_level','winner_seed','round','w_bpSaved','w_ace','minutes','w_df','w_svpt','w_1stIn','w_1stWon','w_2ndWon','w_SvGms','tourney_id','surface']]  \nindiv_l = top7_losses_annual[['tourney_date', 'loser_name', 'winner_rank','tourney_name','tourney_level','winner_seed','round','l_bpSaved','l_ace','minutes','l_df','l_svpt','l_1stIn','l_1stWon','l_2ndWon','l_SvGms','tourney_id','surface']]","e9b3e431":"indiv_w['tourney_date'] = pd.to_datetime(indiv_w.tourney_date, format='%Y%m%d')\nindiv_w = indiv_w.sort_values(['tourney_date'])","cae8a6c4":"indiv_l['tourney_date'] = pd.to_datetime(indiv_l.tourney_date, format='%Y%m%d')\nindiv_l = indiv_l.sort_values(['tourney_date'])","7e954ca2":"indiv_w = indiv_w.loc[~indiv_w.index.duplicated(keep='first')]\nindiv_l = indiv_l.loc[~indiv_l.index.duplicated(keep='first')]","fc9adaa3":"dbase7ind = pd.concat([indiv_w, indiv_l], sort=False)","ac369ca3":"dbase = pd.concat([base3, base4], sort=False)","7773563c":"dbase7 = pd.concat([base3, base4], sort=False)","34f36902":"gslams= ltennis[['tourney_date','tourney_name','tourney_level', 'round', 'winner_name','loser_name']]","f3ff0517":"gslams = gslams[(gslams.tourney_level == 'G')]","44ef64d8":"gslams = gslams[gslams.winner_name.isin(['Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])]","c60403ad":"plt.figure(figsize=(15, 5))\n\nplt.subplot(1,2,1)\nplt1 = gslams.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players in GRAND SLAM Matches')\nplt1.set(xlabel = 'Players', ylabel='Wins')\n","8cff7883":"pslams_f= dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round']]","2fa3b89a":"pslams_f = pslams_f[(pslams_f.Tournament_Level == 'G') & (pslams_f.Round == 'F')]","7c7601f5":"plt.figure(figsize=(15, 5))\n\nplt.subplot(1,2,1)\nplt1 = pslams_f.Player.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Finals Played By These Players in a GRAND SLAM')\nplt1.set(xlabel = 'Players', ylabel='Total Finals Played')","ccc67830":"pslams_f.head()","dc05dbf0":"pslams_sf= dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round']]","f872c3f9":"pslams_sf = pslams_sf[(pslams_sf.Tournament_Level == 'G') & (pslams_sf.Round == 'SF')]","5cdbf91a":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = pslams_sf.Player.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Semi-Finals Played By These Players in a GRAND SLAM')\nplt2.set(xlabel = 'Players', ylabel='Total Semi-Finals Played')","1a945342":"aus= dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round','loser_name']]","eaba1c06":"aus = aus[(aus.Tournament == 'Australian Open')]","fd713d08":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = aus.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players in Australian')\nplt2.set(xlabel = 'Players', ylabel='Wins in AO')","f9a596c2":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = aus.loser_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Losses By These Players in Australian Open')\nplt2.set(xlabel = 'Players', ylabel='losses in AO')","e394a336":"rg = dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round','loser_name']]","6d35b502":"rg = rg[(rg.Tournament == 'Roland Garros')]","47ba0ab4":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = rg.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players in Roland Garros')\nplt2.set(xlabel = 'Players', ylabel='Wins in Roland Garros')","ca535293":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = rg.loser_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Losses By These Players in Roland Garros')\nplt2.set(xlabel = 'Players', ylabel='Losses in Roland Garros')","57336128":"wmb = dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round','loser_name']]","b4d2a29c":"wmb = wmb[(wmb.Tournament == 'Wimbledon')]","b29410a0":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = wmb.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players in Wimbledon')\nplt2.set(xlabel = 'Players', ylabel='Wins in Wimbledon')","3c58a51c":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = wmb.loser_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Losses By These Players in Wimbledon')\nplt2.set(xlabel = 'Players', ylabel='Losses in Wimbledon')","d2938ef4":"uso = dbase[['Date','Player','winner_name','Rank','Tournament','Tournament_Level','Winner Seed','Round','loser_name']]","66c92b10":"uso = uso[(uso.Tournament == 'US Open')]","3a5dad67":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = uso.winner_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Wins By These Players in US Open')\nplt2.set(xlabel = 'Players', ylabel='Wins in US Open')","970eae04":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = uso.loser_name.value_counts().plot(kind='bar')\nplt.title('Bar Graphs For Total Losses By These Players in US Open')\nplt2.set(xlabel = 'Players', ylabel='Losses in US Open')","dfabb2cc":"upset = dbase[['Player','Tournament','Tournament_Level','Round','loser_name']]","2cdaa866":"upset = upset[(upset.Tournament_Level == 'G') & (upset.Round == 'R32')]","3cc8ba22":"plt.figure(figsize=(15, 6))\n\nplt.subplot(1,2,1)\nplt2 = upset.loser_name.value_counts().plot(kind='bar')\nplt.title('UPSETS')\nplt2.set(xlabel = 'Players', ylabel='Upsets')","782d231e":"breaksave = dbase7ind[['winner_name','tourney_level','w_bpSaved','loser_name','l_bpSaved']]","3478b214":"breaksave = breaksave[(breaksave.tourney_level == 'G')]","3e8a9d9e":"bsw = breaksave.groupby(['winner_name']).agg({'w_bpSaved':'sum'}).fillna(0).sort_values(['w_bpSaved'], ascending=False)\nbsl = breaksave.groupby(['loser_name']).agg({'l_bpSaved':'sum'}).fillna(0).sort_values(['l_bpSaved'], ascending=False)\ndfs = [bsw,bsl]\nr = pd.concat(dfs, sort=False).reset_index().fillna(0)\nr['dfs'] = r['l_bpSaved']+r['w_bpSaved']\nfinal = r.groupby('index').agg({'dfs':'sum'}).sort_values('dfs',ascending=False).head(10)\nfinal = final.reset_index()\nfinal.columns = ['Player','BreakPointsSaved']\nfinal = final.sort_values('BreakPointsSaved',ascending=True)\nfinal.plot('Player','BreakPointsSaved', kind='barh', title='Players with most BP saved in a GRAND SLAM', legend=False)","d80409f0":"asw = dbase7ind.groupby(['winner_name']).agg({'w_ace':'sum'}).fillna(0).sort_values(['w_ace'], ascending=False)\nasl = dbase7ind.groupby(['loser_name']).agg({'l_ace':'sum'}).fillna(0).sort_values(['l_ace'], ascending=False)\ndfs = [asw,asl]\nr = pd.concat(dfs, sort=False).reset_index().fillna(0)\nr['dfs'] = r['l_ace']+r['w_ace']\nfinal = r.groupby('index').agg({'dfs':'sum'}).sort_values('dfs',ascending=False).head(10)\nfinal = final.reset_index()\nfinal.columns = ['Player','MostAces']\nfinal = final.sort_values('MostAces',ascending=True)\nfinal.plot('Player','MostAces', kind='barh', title='Players with most ACEs in GRAND SLAMS', legend=False)","e0094d8d":"dasw = dbase7ind.groupby(['winner_name']).agg({'w_df':'sum'}).fillna(0).sort_values(['w_df'], ascending=False)\ndasl = dbase7ind.groupby(['loser_name']).agg({'l_df':'sum'}).fillna(0).sort_values(['l_df'], ascending=False)\ndfs = [dasw,dasl]\nr = pd.concat(dfs, sort=False).reset_index().fillna(0)\nr['dfs'] = r['l_df']+r['w_df']\nfinal = r.groupby('index').agg({'dfs':'sum'}).sort_values('dfs',ascending=False).head(10)\nfinal = final.reset_index()\nfinal.columns = ['Player','DoubleFaults']\nfinal = final.sort_values('DoubleFaults',ascending=True)\nfinal.plot('Player','DoubleFaults', kind='barh', title='Players with most Double Faults in GRAND SLAMS', legend=False)","85ec4b63":"medvedev_w = indiv_w[indiv_w.winner_name == 'Daniil Medvedev']\nmedvedev_l = indiv_l[indiv_l.loser_name == 'Daniil Medvedev']\n\nthiem_w =  indiv_w[indiv_w.winner_name == 'Dominic Thiem']\nthiem_l =  indiv_l[indiv_l.loser_name == 'Dominic Thiem']\n\ntsitsipas_w =  indiv_w[indiv_w.winner_name == 'Stefanos Tsitsipas']\ntsitsipas_l =  indiv_l[indiv_l.loser_name == 'Stefanos Tsitsipas']\n\nzverev_w =  indiv_w[indiv_w.winner_name == 'Alexander Zverev']\nzverev_l =  indiv_l[indiv_l.loser_name == 'Alexander Zverev']\n\nrublev_w =  indiv_w[indiv_w.winner_name == 'Andrey Rublev']\nrublev_l =  indiv_l[indiv_l.loser_name == 'Andrey Rublev']\n\nschwartzman_l =  indiv_w[indiv_w.winner_name == 'Diego Schwartzman']\nschwartzman_l =  indiv_l[indiv_l.loser_name == 'Diego Schwartzman']\n\nberrettini_l =  indiv_w[indiv_w.winner_name == 'Matteo Berrettini']\nberrettini_l =  indiv_l[indiv_l.loser_name == 'Matteo Berrettini']","fdb1b93d":"plthiem_1 = ltennis[(ltennis['winner_name'] == 'Dominic Thiem')].groupby(['tourney_date','tourney_level'], as_index=False).agg(['count'])\nplthiem_2 = plthiem_1['tourney_id'].reset_index()\nplthiem_2 = plthiem_2.sort_values(by=['tourney_date'])\n\nfig = plt.figure(figsize=(25,5))\nax = fig.add_subplot(111)\nax.set_prop_cycle(plt.cycler('color', plt.cm.jet(np.linspace(0, 1, 5))))\n\nplt.title('Dominic Thiem - Total Wins by Tournament Type by Year')\nplt.ylabel('Number of Wins')\nplt.xlabel('Year')\nplt.plot(plthiem_2[plthiem_2['tourney_level']=='G']['tourney_date'], plthiem_2[plthiem_2['tourney_level']=='G']['count'], marker='o', markerfacecolor='black', markersize=2, linewidth=2)\nplt.plot(plthiem_2[plthiem_2['tourney_level']=='M']['tourney_date'], plthiem_2[plthiem_2['tourney_level']=='M']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(plthiem_2[plthiem_2['tourney_level']=='F']['tourney_date'], plthiem_2[plthiem_2['tourney_level']=='F']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(plthiem_2[plthiem_2['tourney_level']=='D']['tourney_date'], plthiem_2[plthiem_2['tourney_level']=='D']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(plthiem_2[plthiem_2['tourney_level']=='A']['tourney_date'], plthiem_2[plthiem_2['tourney_level']=='A']['count'], marker='o', markerfacecolor='black', markersize=1)\n\nplt.legend(['Grand_Slams', 'Masters', 'Tour_Finals', 'Davis_Cup', 'ATP'], loc='upper right', prop={'size': 10})\n","583b49f2":"taplthiem_1 = ltennis[(ltennis['winner_name'] == 'Stefanos Tsitsipas')].groupby(['tourney_date','tourney_level'], as_index=False).agg(['count'])\ntaplthiem_2 = taplthiem_1['tourney_id'].reset_index()\ntaplthiem_2 = taplthiem_2.sort_values(by=['tourney_date'])\n\nfig = plt.figure(figsize=(25,5))\nax = fig.add_subplot(111)\nax.set_prop_cycle(plt.cycler('color', plt.cm.jet(np.linspace(0, 1, 5))))\n\nplt.title('Stefanos Tsitsipas - Total Wins by Tournament Type by Year')\nplt.ylabel('Number of Wins')\nplt.xlabel('Year')\nplt.plot(taplthiem_2[taplthiem_2['tourney_level']=='G']['tourney_date'], taplthiem_2[taplthiem_2['tourney_level']=='G']['count'], marker='o', markerfacecolor='black', markersize=2, linewidth=2)\nplt.plot(taplthiem_2[taplthiem_2['tourney_level']=='M']['tourney_date'], taplthiem_2[taplthiem_2['tourney_level']=='M']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(taplthiem_2[taplthiem_2['tourney_level']=='F']['tourney_date'], taplthiem_2[taplthiem_2['tourney_level']=='F']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(taplthiem_2[taplthiem_2['tourney_level']=='D']['tourney_date'], taplthiem_2[taplthiem_2['tourney_level']=='D']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(taplthiem_2[taplthiem_2['tourney_level']=='A']['tourney_date'], taplthiem_2[taplthiem_2['tourney_level']=='A']['count'], marker='o', markerfacecolor='black', markersize=1)\n\nplt.legend(['Grand_Slams', 'Masters', 'Tour_Finals', 'Davis_Cup', 'ATP'], loc='upper right', prop={'size': 10})\n\n","7ec98d24":"dplthiem_1 = ltennis[(ltennis['winner_name'] == 'Daniil Medvedev')].groupby(['tourney_date','tourney_level'], as_index=False).agg(['count'])\ndplthiem_2 = dplthiem_1['tourney_id'].reset_index()\ndplthiem_2 = dplthiem_2.sort_values(by=['tourney_date'])\n\nfig = plt.figure(figsize=(25,5))\nax = fig.add_subplot(111)\nax.set_prop_cycle(plt.cycler('color', plt.cm.jet(np.linspace(0, 1, 5))))\n\nplt.title('Daniil Medvedev - Total Wins by Tournament by Year')\nplt.ylabel('Number of Wins')\nplt.xlabel('Year')\nplt.plot(dplthiem_2[dplthiem_2['tourney_level']=='G']['tourney_date'], dplthiem_2[dplthiem_2['tourney_level']=='G']['count'], marker='o', markerfacecolor='black', markersize=2, linewidth=2)\nplt.plot(dplthiem_2[dplthiem_2['tourney_level']=='M']['tourney_date'], dplthiem_2[dplthiem_2['tourney_level']=='M']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(dplthiem_2[dplthiem_2['tourney_level']=='F']['tourney_date'], dplthiem_2[dplthiem_2['tourney_level']=='F']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(dplthiem_2[dplthiem_2['tourney_level']=='D']['tourney_date'], dplthiem_2[dplthiem_2['tourney_level']=='D']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(dplthiem_2[dplthiem_2['tourney_level']=='A']['tourney_date'], dplthiem_2[dplthiem_2['tourney_level']=='A']['count'], marker='o', markerfacecolor='black', markersize=1)\n\nplt.legend(['Grand_Slams', 'Masters', 'Tour_Finals', 'Davis_Cup', 'ATP'], loc='upper right', prop={'size': 10})\n","b6c9a808":"zplthiem_1 = ltennis[(ltennis['winner_name'] == 'Alexander Zverev')].groupby(['tourney_date','tourney_level'], as_index=False).agg(['count'])\nzplthiem_2 = zplthiem_1['tourney_id'].reset_index()\nzplthiem_2 = zplthiem_2.sort_values(by=['tourney_date'])\n\nfig = plt.figure(figsize=(25,5))\nax = fig.add_subplot(111)\nax.set_prop_cycle(plt.cycler('color', plt.cm.jet(np.linspace(0, 1, 5))))\n\nplt.title('Alexander Zverev - Total Wins by Tournament Type by Year')\nplt.ylabel('Number of Wins')\nplt.xlabel('Year')\nplt.plot(zplthiem_2[zplthiem_2['tourney_level']=='G']['tourney_date'], zplthiem_2[zplthiem_2['tourney_level']=='G']['count'], marker='o', markerfacecolor='black', markersize=2, linewidth=2)\nplt.plot(zplthiem_2[zplthiem_2['tourney_level']=='M']['tourney_date'], zplthiem_2[zplthiem_2['tourney_level']=='M']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(zplthiem_2[zplthiem_2['tourney_level']=='F']['tourney_date'], zplthiem_2[zplthiem_2['tourney_level']=='F']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(zplthiem_2[zplthiem_2['tourney_level']=='D']['tourney_date'], zplthiem_2[zplthiem_2['tourney_level']=='D']['count'], marker='o', markerfacecolor='black', markersize=1)\nplt.plot(zplthiem_2[zplthiem_2['tourney_level']=='A']['tourney_date'], zplthiem_2[zplthiem_2['tourney_level']=='A']['count'], marker='o', markerfacecolor='black', markersize=1)\n\nplt.legend(['Grand_Slams', 'Masters', 'Tour_Finals', 'Davis_Cup', 'ATP'], loc='upper right', prop={'size': 10})\n","91e26c63":"surfac = dbase7[['surface','winner_name','loser_name']]","f70b801d":"surfac_w = surfac[['surface', 'winner_name']]\nsurfac_l = surfac[['surface', 'loser_name']]\nsurfac_w.columns = ['surface', 'Player']\nsurfac_l.columns = ['surface', 'Player']","c2352a98":"surfac_w['idx'] = range(1, len(surfac_w) + 1)\nsurfac_l['idx'] = range(1, len(surfac_l) + 1)","bbec4ce2":"surfac_w = surfac_w.groupby(['surface', 'Player']).count()\nsurfac_w = surfac_w.reset_index()\nsurfac_w.columns = ['surface', 'Player', 'Count_Win']\n\nsurfac_l = surfac_l.groupby(['surface', 'Player']).count()\nsurfac_l = surfac_l.reset_index()\nsurfac_l.columns = ['surface', 'Player', 'Count_Lose']","3112850f":"surfac = pd.merge(surfac_w, surfac_l, on=['surface', 'Player'])","a84a68eb":"surfac['total_play'] = surfac['Count_Win'] + surfac['Count_Lose']","6cc9ca3f":"surfac['perc_win'] = round(surfac['Count_Win'] \/ surfac['total_play'],4)*100","e1206afe":"surfac = surfac[surfac.total_play > 60]","562b0649":"surfac.sort_values(by='perc_win', ascending=False).head(30)\n","9ed78046":"surfac.surface.unique()","7b6be50e":"apw = ltennis[(ltennis['winner_name'] == 'Dominic Thiem')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\napww = apw['tourney_id'].reset_index()\n\napl = ltennis[(ltennis['loser_name'] == 'Dominic Thiem')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\napll = apl['tourney_id'].reset_index()\n\n\nzpw = ltennis[(ltennis['winner_name'] == 'Alexander Zverev')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\nzpww = zpw['tourney_id'].reset_index()\n\nzpl = ltennis[(ltennis['loser_name'] == 'Alexander Zverev')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\nzpll = zpl['tourney_id'].reset_index()\n\n\nspw = ltennis[(ltennis['winner_name'] == 'Stefanos Tsitsipas')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\nspww = spw['tourney_id'].reset_index()\n\nspl = ltennis[(ltennis['loser_name'] == 'Stefanos Tsitsipas')].groupby(['tourney_year','surface'], as_index=False).agg(['count'])\nspll = spl['tourney_id'].reset_index()\n","15c9f4b1":"apww.columns = ['tourney_year','surface','wins']\napll.columns = ['tourney_year','surface','loses']\n\ndfs = (apww,apll)\n\ndfs_concat = pd.concat(dfs, sort=False)\n\ndfs_final = dfs_concat.fillna(0).groupby(['tourney_year','surface']).agg({'wins':'sum','loses':'sum'}).reset_index()\n\ndfs_final['r_eff'] = np.where(dfs_final['loses']>0, dfs_final['wins']\/(dfs_final['wins']+dfs_final['loses']), 1)\ndfs_final['tourney_year'] = dfs_final['tourney_year'].astype(int)\n\ng = sns.lmplot(x='tourney_year', y='r_eff', hue='surface', fit_reg=False, data=dfs_final, palette='viridis', hue_order=['Hard','Clay'])\ng.fig.suptitle('Dominic Thiem - Effectiveness')\ng.set(xlabel='Year', ylabel='Effectiveness')\ng.set(ylim=(-0.1,1.2))","c721c7b8":"zpww.columns = ['tourney_year','surface','wins']\nzpll.columns = ['tourney_year','surface','loses']\n\ndfs = (zpww,zpll)\n\ndfs_concat = pd.concat(dfs, sort=False)\n\ndfs_final = dfs_concat.fillna(0).groupby(['tourney_year','surface']).agg({'wins':'sum','loses':'sum'}).reset_index()\n\ndfs_final['r_eff'] = np.where(dfs_final['loses']>0, dfs_final['wins']\/(dfs_final['wins']+dfs_final['loses']), 1)\ndfs_final['tourney_year'] = dfs_final['tourney_year'].astype(int)\n\ng = sns.lmplot(x='tourney_year', y='r_eff', hue='surface', fit_reg=False, data=dfs_final, palette='viridis', hue_order=['Hard','Clay'])\ng.fig.suptitle('Alexander Zverev - Effectiveness')\ng.set(xlabel='Year', ylabel='Effectiveness')\ng.set(ylim=(-0.1,1.2))","38698183":"spww.columns = ['tourney_year','surface','wins']\nspll.columns = ['tourney_year','surface','loses']\n\ndfs = (spww,spll)\n\ndfs_concat = pd.concat(dfs, sort=False)\n\ndfs_final = dfs_concat.fillna(0).groupby(['tourney_year','surface']).agg({'wins':'sum','loses':'sum'}).reset_index()\n\ndfs_final['r_eff'] = np.where(dfs_final['loses']>0, dfs_final['wins']\/(dfs_final['wins']+dfs_final['loses']), 1)\ndfs_final['tourney_year'] = dfs_final['tourney_year'].astype(int)\n\ng = sns.lmplot(x='tourney_year', y='r_eff', hue='surface', fit_reg=False, data=dfs_final, palette='viridis', hue_order=['Hard','Clay'])\ng.fig.suptitle('Stefanos Tsitsipas - Effectiveness')\ng.set(xlabel='Year', ylabel='Effectiveness')\ng.set(ylim=(-0.1,1.2))","0326d14b":"surface_top = surfac[(surfac.Player.isin(['Daniil Medvedev',\n'Dominic Thiem',\n'Stefanos Tsitsipas',\n'Alexander Zverev',\n'Andrey Rublev',\n'Diego Schwartzman',\n'Matteo Berrettini'])) & (surfac.surface != 'Carpet')]\nsurface_top","eab71e6f":"surface_top = pd.pivot_table(surface_top, values='perc_win', columns=['surface'], index=['Player'])\nsurface_top.index.names","18779b6a":"surface_top[surface_top.index == \"Alexander Zverev\"]","a29a5f1d":"surface_top[surface_top.index == \"Dominic Thiem\"]","eabfbc8d":"surface_top[surface_top.index == \"Stefanos Tsitsipas\"]","d6c4ec17":"surface_top[surface_top.index == \"Daniil Medvedev\"]","4b683155":"surface_top[surface_top.index == \"Diego Schwartzman\"]","d0a44aa6":"surface_top[surface_top.index == \"Andrey Rublev\"]","ad122082":"surface_top['mean_surface'] = surface_top.iloc[:, 1:].sum(axis=1) \/ 2","ec833d2d":"surface_top.head()","24542776":"#### Insights:\n- `Thiem` again playing the highest number of semi finals as a pro.\n- `Tsitsipas` being the second is a strange thing, also shows how good he is with the age but is not able to cope with immense pressure you have to face in grand slams to convert your semis to finals. He has played 3 semi finals but he's yet to play 1!\n- `Berretini` according to his age is doing well as he has played 1!\n- `Schwartzman` on the other hand has played just 1 semi final at his age and experience!","03c947b3":"### 3. Data Engineering ","f151f338":"#### 3.2. So the basic goal of this analysis is to analyse the top 7 players, their mentality and their basic statistics on each surface as well as Big Tournaments.\n### \"Excluding the big three\"\n- \"Novak Djokovic\"\n- \"Rafael Nadal\"\n- \"Roger Federer\"","8e9048ce":"### 6. Individual Grand Slam Analysis:","2ce2f32a":"### 7. Individual Player Analysis:","8436e951":"#### Finding out the best player in top 5:","b638290f":"So Here are the top players currently in ATP Rankings (May 2021):\n\n-\t Novak Djokovic\n-\t Rafael Nadal \n-\t Daniil Medvedev\n-\t Dominic Thiem \n-\t Stefanos Tsitsipas \n-\t Alexander Zverev \n-\t Andrey Rublev \n-    Roger Federer \n-\t Diego Schwartzman \n-\t Matteo Berrettini ","e73d982e":"#### Insights:\n- `Dominic Thiem` and `Diego Schwartzman` (5th in losses) have the most wins and losses as a pro being the oldest players in the lot.\n- 2nd `Alexander Zverev` performs well in Big Tournaments Proves again as he is very young as well and played considerably very less matches than `Thiem` and `Diego`.\n- `Daniil Medvedev` also performs well on hard court surface.\n- `Tsitsipas`being the youngest by age, performs well but not quite good in comparison to these players being the 4th on list.","c5a565b5":"#### 6.4.1. Plotting Bar Graphs For Total Wins & Total Losses By These Players in US Open","33e6eafc":"#### 4.2.2. Plotting the Rank Evolution of the Top-3 Players in \"All Time\" : `Daniil Medvedev` `Dominic Thiem` `Stefanos Tsitsipas`","c1ef0d60":"#### 6.1.1 Plotting Bar Graphs For Total Wins & Total Losses By These Players in Australian Open","2cc36462":"#### Since we are doing solely an analysis of THESE players, we only need the rows with these players in it. ","550951dc":"#### 6.2.1 Plotting Bar Graphs For Total Wins & Total Losses By These Players in Roland Garros","17e3b811":"#### Insights:\n- as we can see that being the oldest `Dominic Thiem` enters the top players sooner than the other two players.\n- Theim was also present in the era when all of the tournaments were dominated by the big3.\n- if we see about 2021 the big 3 isnt really dominating much and the entry of other players are very much easy as compared to Thiem when he was in 2012.\n- All the 3 players never went out of the top 10 after they entered. considering Thiem with the longest top 10 reign since 2014.\n- There's 1 year gap between `Daniil Medvedev` and `Stefanos Tsitsipas`'s entry in the top players.\n- `Diego Schwartzman` And `Dominic Thiem` came up in the top players at a similar time.\n- `Andrey Rublev` and `Alexander Zverev` being the most inconsistant of the top players as the graph is Disrupted many times\n- `Matteo Berrettini` being the lastest entry in the top players.\n","10090886":"#### 4.5. Plotting a boxplot to see the aces on different surfaces:","7b1a7dc4":"#### Insights:\n- `Dominic Thiem` obviously being the best in US Open as he's the only player to win this tournament and also being the only player from the lot to win a grand slam title!\n- `Daniil Medvedev` being in the middle of the charts proving our hypothesis of him loving the hard courts!\n- `Zverev` is quite consistant again!","df87025b":"#### 6.1. Performances in The Australian Open (Hard Court)","a9f2be69":"#### 6.8. Players with most Double Faults in GRAND SLAMS","8334c9a1":"#### 1. Importing Basic Libraries","11ec51f1":"#### Link to the second part of this Analysis: \n    https:\/\/www.kaggle.com\/mayankneil\/country-wise-analytics-visualization-using-t?scriptVersionId=64001755","eaa4f96e":"#### 3.4. Checking for null or missing values.","9e4eda59":"#### 7.2.1. Plotting for `Dominic Thiem`","3eb746e4":"#### Insights:\n- `Grass`has the best ace ratio as compared to the other surfaces.","34544993":"#### 5.2. as ltennis dataframe has all the 20 years worth data and a lot of players we don't need as we are doing our analysis for top players excluding the big three,\nso we filter out the names from the df we created and we will now have the desired df with our players and their grandslam records:","0187161b":"#### 3.3. Making a top7 dataframe for further analysis us looking at the winner and loser name both and combining them in the end.","438fdfbd":"#### Effectiveness for Stefanos Tsitsipas:","0eabae91":"#### 6.6. Players with better mentality to fight back:","4b455d82":"#### Creating some base dataframes for all the top 7 players we need for our analysis further ","1ce7af8b":"#### 7.2.3. Plotting For `Daniil Medvedev`","8fe47a5b":"#### 8.1. creating a dataframe for `surface` with winner name loser name and surface as columns, making them for both wins and losses and further merging the wins and losses columns as one DF!","277a823a":"### 6.3. Performances in The Wimbledon (Grass)","d6c560a6":"#### 7.2.4. Plotting For `Alexander Zverev`","271f8617":"#### Effectiveness for Dominic Thiem:","9b9c18d7":"#### Insights:\n- `Dominic Thiem` and `Diego Schwartzman` have the most wins and losses as a pro being the oldest players in the lot.\n- `Alexander Zverev` being the middle of the charts in both.\n- `Berretini` being the youngest entry in the top seeds is at the lowest losses and wins, played considerably the less amounts of games as well.","c66c485a":"#### Referred to as majors, are the world's `four` most important annual tennis events. \n#### The tournaments offer the most ranking points, prize money, public and media attention, the greatest strength and size of field, and greater number of \"best of\" sets for men, which is 5. \nThe Grand Slam itinerary consists of the: \n- `Australian Open` in mid January \n- `the French Open` from late May to early June\n- `Wimbledon` in late June to early July\n- `US Open` in August\u2013September\n\n#### Each tournament is played over a two-week period.\n\n#### The Australian and the United States tournaments are played on `hard courts`, the French on `clay`, and Wimbledon on `natural grass`.","ff976c56":"#### 4.1.1. Plotting the Rank Evolution of the Top-3 Players in \"TOP 10\" : `Daniil Medvedev` `Dominic Thiem` `Stefanos Tsitsipas`","a9534ed7":"#### 3.5.4. Converting the date function to it's proper format as \"Year\/Month\/Date\" which will help us in further analysis by using the \"datetime\" function:","c8cba8ba":"#### 3.5.6. Checking for the players unique content, as it should be there with only the 7 players we have selected for our analysis:","09a77974":"We can filter this by looking at the name of the winner or loser. It has to be 'the given name'. (excluding the BIG THREE)","00d40956":"### Analysis On Future Generation of Tennis:\n\nThis project basically seeks the idea to analyze data from men\u2019s ATP tennis competitions from the year 2000 up to 2021, \nincluding Grand Slams, Masters Series, Masters Cup and International Series competitions.\n\nThe huge 20 years dataset prepared by Jeff Sackmann contains information on every single match played since 2000. \nwith details on every match\u2019s date, location, tournament type, surface, winner and loser, games\/sets played, duration and additional statistics such as players\u2019 rankings, players\u2019 age and height, aces, double faults, break points faced and saved, service points among other helpful stats for both players of the match.\n\nThe objective of this analysis is to come up with insights regarding the the top players exlcluding the BIG 3 (`Djokovic` `Nadal`, `Federer`. Including correlation between variables (e.g. aces and break points won rtc) as well as the evolution of the players over time, trying different variables and using different types of visualizations as tools for understanding and interpretation of the data and communication of the results.","b3e38006":"#### 6.7. Players with most ACEs in GRAND SLAMS","e4596c72":"#### 2. Creating columns we need","ecc872e9":"#### Insights:\n- `Zverev` has the best record on grass as compared to the other, also for the fisrt time experienced `Thiem` is behind him with soo much of experience and matches played which shows how excellent Zverev is on grass!\n- `Medvedev` being second explains the courts he love has a speed factor to it, clay is slow and it irritates him. His style of play is more dependent on the power and speed he has when he hits the ball and how he moves on the surface!","81f6f9a6":"#### so there are no null values, so we can proceed further for our analysis.","aedbfbd8":"#### 3.5.1. Separating the data frames in \"win\" and \"losses\" for further individial analysis:","b0e3d8c5":"#### 7.2.2. Plotting for `Stefanos Tsitsipas`","0b192885":"#### 6.5. Unfortunate Upsets in Grand Slams (i.e lost in R32, as top seeds enter the tournaments at that stage only):","e5e4eafd":"#### Effectiveness for Alexander Zverev:","2c4f79d6":"#### 6.3.1. Plotting Bar Graphs For Total Wins & Total Losses By These Players in Wimbledon","bf030edc":"### 6.2. Performances in The Roland Garros (Clay)","f3d7cab4":"#### 3.5.2. Making columns for Tournament Date, winner Name, Winner's seed at that point of time:","27081260":"#### OKAY, So we have our desired players list and their respective data frames!","7df8cbed":"#### So the top players are:\n- Dominic Thiem \n- Stefanos Tsitsipas \n- Alexander Zverev","ef5d3f83":"#### 5.3. Plotting a Bar Graph For Total Wins By These Players in GRAND SLAM Matches","2b9911dc":"#### clearly due to \"NaN\" values Rublev and Medvedev are very high on the table which is not possible. so our top choices are\n- Alexander Zverev\n- Dominic Thiem\n- Diego Schwartzman","7bc615b7":"#### 7.1. Creating individual dataframes for INDIVIDUAL ANALYSIS of these players:","36a18fa7":"#### 4. Basic Rank Analysis with some plots.","b03897f4":"#### 3.5. Let's make a few adjustments to the dataframes, as we have to do a long detailed analysis, we will need a lot of dataframes containing as much information it can. \nso lets separate\/manipulate different dataframes in some ways it will help us ahead.","a538ae46":"#### Insights:\n- `Dominic Thiem` and `Diego Schwartzman` (3rd) have the most wins and losses as a pro being the oldest players in the lot.\n- 2nd `Alexander Zverev` performs well in Big Tournaments as he is very young as well and played considerably very less matches.\n- `Daniil Medvedev` also performs well if we exclude players who are older. He's probably the best according to the graphs.\n- `Tsitsipas`being the youngest by age, performs well but not quite good in comparison to these players.","5c52d282":"- `Zverev` has the most upsets!","b4000a88":"#### 5.4. Plotting a Bar Graph For Total \"SEMI-FINALS\" Played By These Players in GRAND SLAMS","3a4481b0":"#### 7.2. Evolution of top players in the last 10 years:","1f7d3eba":"#### Insights:\n- `Dominic Thiem` and `Diego Schwartzman` again have the most wins and losses as a pro being the oldest players in the lot.\n- rest of them are not much of a \"clay surface lovers\".\n- `Medvedev` is no where to be seen in the wins graph, clearly states he doesn't like the surface much!","f0d37cec":"#### 3.5.5. Making new dataframes to individual \"PLAYERS\", as we will need it ahead for individual analysis:","aff9968a":"#### 5.3. Plotting a Bar Graph For Total Finals Played By These Players in GRAND SLAMS","8213f7c4":"#### 3.1. Loading all the datasets and combining them into one, calling it \"ltennis\".","2f12654c":"#### 3.5.3. Combining them both:","7b7bdb37":"#### 4.3 let's create another data frame for annual year wins and losses for these players:\n","b3f1304a":"#### Insights:\n- Only 3 players have played a grand slam final from the group of players we have.\n    - `Alexander Zverev`\n    - `Daniil Medvedev`\n    - `Dominic Thiem` having the best records (Also won the US Open against the finalist `Zverev`)\n    ","95763850":"#### 5.1. making a combined data set for GRAND SLAMS by filtering out the match_level to grandslams:","698cad1f":"#### Calculating The Mean Surface of players to determine the ALL ROUND PLAYER:","3ff4c197":"### 5. Grand Slam Analysis ","b28b3529":"### 8. Analysis on Individual Players on Each Surface:","a80c07f1":"#### So, according to the analysis the best all round player keeping the surface, slams, wins and losses in mind is:\n`Alexandar Zverev`","83c03797":"#### Combining the Winners And Losers name from the \"top7_wins\" dataframe to \"Players\"\nthis isi how we can seperate our dataframe's data > Playerwise. (It was matchwise yet as we know we have 21 years of match data here)  ","8bf17622":"### 6.4. Performances in the US Open (Hard Court)","5b94663e":"#### 4.4. Plotting Bar Graphs For Total Wins & Total Losses By These Players:"}}