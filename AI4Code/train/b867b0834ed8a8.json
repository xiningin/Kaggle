{"cell_type":{"0c8e07f1":"code","8e00dfc0":"code","5955452e":"code","158baf18":"code","42607d79":"code","e13d1f18":"code","a68ed7d2":"code","609c9135":"markdown","5d23f770":"markdown","61b123e0":"markdown","d12a4043":"markdown","872f178c":"markdown","433b3ab3":"markdown"},"source":{"0c8e07f1":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns","8e00dfc0":"sns.set_style('dark')\nsns.set(rc = {\n      'axes.edgecolor': '#242424'\n    , 'axes.facecolor': '#242424'\n    , 'axes.grid': False\n    , 'axes.labelcolor': '#ffffff'\n    , 'axes.labelsize': 18\n    , 'axes.titlesize': 30\n    , 'figure.facecolor': '#242424'\n    , 'figure.figsize': (20, 15)\n    , 'text.color': '#ffffff'\n    , 'xtick.color': '#ffffff'\n    , 'ytick.color': '#ffffff'\n})","5955452e":"def to_count_df(col: pd.Series) -> pd.DataFrame:\n    return col.rename_axis('letter').reset_index(name = 'count')","158baf18":"def plot_count(df: pd.DataFrame, title: str) -> None:\n    count_mean = np.mean(df['count'])\n    count_top = df['count'].max() * 0.75\n    \n    palette = {row['letter']: '#6ba866' \n        if count_top <= row['count'] \n        else '#c9b457' \n        if count_mean <= row['count'] \n        else '#787c81' \n        for _, row in df.iterrows()\n    }\n       \n    sns.barplot(\n          x = 'letter'\n        , y = 'count'\n        , data = df\n        , palette = palette\n    )\n    plt.title(title)\n    plt.show()","42607d79":"DF_WORDS = pd.read_csv('..\/input\/wordle-5-letter-words\/5_letters.csv')\nDF_WORDS.shape","e13d1f18":"DF_TOTAL = pd.DataFrame(\n      zip(*np.unique(DF_WORDS.to_numpy().flatten(), return_counts = True))\n    , columns = ['letter', 'count']\n).sort_values(by = 'count', ascending = False)\n\nplot_count(DF_TOTAL, 'Total')","a68ed7d2":"for col in DF_WORDS:\n    plot_count(to_count_df(DF_WORDS[col].value_counts()), col)","609c9135":"# Import data","5d23f770":"# Function to plot value counts","61b123e0":"# Seaborn styling","d12a4043":"# Plot individual columns","872f178c":"# Function to convert value counts to dataframe","433b3ab3":"# Plot totals"}}