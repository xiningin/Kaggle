{"cell_type":{"3eb79d67":"code","e1458c4a":"code","00a571fd":"code","baa0425a":"code","0ec4a1e5":"code","43637774":"code","4b01940e":"code","b621bf04":"code","8fcbbbb4":"code","9d8073f8":"code","898628ce":"code","d36f024b":"code","d82150e9":"code","5b0d918f":"markdown","8633b799":"markdown","28d57c74":"markdown","f1115987":"markdown","3fe0a70a":"markdown","d5542e93":"markdown","c67eeef8":"markdown"},"source":{"3eb79d67":"import datetime\nimport warnings\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e1458c4a":"warnings.simplefilter(action='ignore')\n\nsns.set(rc={'figure.figsize':(15, 6)})\n\nsns.set_style('white', {\n    'axes.spines.left': True,\n    'axes.spines.bottom': True,\n    'axes.spines.right': False,\n    'axes.spines.top': False\n})","00a571fd":"palette = {\n    2019: sns.color_palette('Greys')[1],\n    2020: sns.color_palette('deep')[0]\n}\n\npalette_covid = {\n    2019: sns.color_palette('Greys')[1],\n    2020: sns.color_palette('Greys')[3]\n}","baa0425a":"df = pd.read_csv('\/kaggle\/input\/cause-of-death-in-brazil-20192020\/death_cause_brazil.csv', parse_dates=['date'])","0ec4a1e5":"df_states = pd.read_csv('\/kaggle\/input\/brazilianstates\/states.csv')","43637774":"df.head()","4b01940e":"df_filtered = df[df['date'] < '2020-09-01']\n\ndf_group = df_filtered.groupby(['date']).sum().reset_index()\n\ndf_group['year'] = df_group['date'].apply(lambda d: d.year)\ndf_group['date_year'] = df_group['date'].apply(lambda d: datetime.date(2020, d.month, d.day))\n\nax = sns.lineplot(x='date_year', y='total', hue='year', data=df_group, palette=palette)\n\nax.legend(ax.get_legend_handles_labels()[0][-2:], ['2019', '2020'], frameon=False)\n\nax.set_xticklabels(pd.date_range(start='2020-01', freq='M', periods=12).month_name())\n\nplt.xlim(datetime.date(2020, 1, 1), datetime.date(2020, 12, 31))\n\nplt.xlabel('')\nplt.ylabel('Deaths')\n\nplt.legend(frameon=False)\n\nplt.title('Deaths by day in Brazil between 2019 and 2020')\n\nplt.show()","b621bf04":"# Complete data\ndf_filter = df[df['date'] < '2020-09-01']\n\ndf_group = df_filter.groupby(['date']).sum().reset_index()\ndf_group = df_group.resample('MS', on='date').sum().reset_index()\n\ndf_group['year'] = df_group['date'].apply(lambda d: d.year)\ndf_group['date_year'] = df_group['date'].apply(lambda d: datetime.date(2020, d.month, d.day))\n\nax = sns.barplot(x='date_year', y='total', hue='year', data=df_group, palette=palette)\n\n# Data without covid-19\ndf_filter = df_filter[df_filter['cause'].apply(lambda x: not x.startswith('Covid'))]\n\ndf_group = df_filter.groupby(['date']).sum().reset_index()\ndf_group = df_group.resample('MS', on='date').sum().reset_index()\n\ndf_group['year'] = df_group['date'].apply(lambda d: d.year)\ndf_group['date_year'] = df_group['date'].apply(lambda d: datetime.date(2020, d.month, d.day))\n\nax = sns.barplot(x='date_year', y='total', hue='year', data=df_group, palette=palette_covid)\n\nax.legend(ax.get_legend_handles_labels()[0][-2:] + [ax.get_legend_handles_labels()[0][1]], ['2019', '2020', 'Covid-19'], frameon=False)\n\nax.set_xticklabels(pd.date_range(start='2020-01', freq='M', periods=12).month_name())\n\nplt.xlabel('')\nplt.ylabel('Deaths')\n\nplt.title('Deaths in Brazil in 2019 and 2020')\n\nplt.show()","8fcbbbb4":"map_region_state = {}\n\nregions = np.unique(df_states['Region'])\nfor region in regions:\n    map_region_state[region] = sorted(list(np.unique(df_states[df_states['Region'] == region]['UF'])))","9d8073f8":"fig, axes = plt.subplots(1, len(map_region_state), sharey=True, gridspec_kw={'width_ratios': [4, 7, 9, 3, 4]})\n\nfor i, (region, states) in enumerate(map_region_state.items()):\n\n    # Complete data\n    df_filter = df[df['date'] < '2020-09-01']\n    df_filter['year'] = df_filter['date'].apply(lambda d: d.year)\n    df_filter = df_filter[((df_filter['year'] == 2019) & (df_filter['date'] < '2019-09-01')) | \n                          ((df_filter['year'] == 2020) & (df_filter['date'] < '2020-09-01'))]\n    df_filter = df_filter[df_filter['state'].apply(lambda x: x in states)]\n\n    df_group = df_filter.groupby(['state', 'year']).sum().reset_index()\n\n    df_merge = pd.merge(left=df_group, right=df_states, left_on='state', right_on='UF')\n    df_merge['per_hab'] = df_merge.apply(lambda r: r['total'] \/ r['Population'] * 100000, axis=1)\n\n    sns.barplot(ax=axes[i], x='state', y='per_hab', hue='year', data=df_merge, palette=palette)\n    \n    # Data without covid-19\n    df_filter = df_filter[df_filter['cause'].apply(lambda x: not x.startswith('Covid'))]\n        \n    df_group = df_filter.groupby(['state', 'year']).sum().reset_index()\n\n    df_merge = pd.merge(left=df_group, right=df_states, left_on='state', right_on='UF')\n    df_merge['per_hab'] = df_merge.apply(lambda r: r['total'] \/ r['Population'] * 100000, axis=1)\n\n    sns.barplot(ax=axes[i], x='state', y='per_hab', hue='year', data=df_merge, palette=palette_covid)\n    \n    axes[i].set(xlabel=region, ylabel='')\n    axes[i].spines['left'].set_visible(False)\n    axes[i].legend([], frameon=False)\n    \n    \nfig.suptitle('Deaths in Brazil in 2019 and 2020 by state per 100.000 inhabitants')\n\naxes[0].legend(axes[0].get_legend_handles_labels()[0][-2:] + [ax.get_legend_handles_labels()[0][1]], ['2019', '2020', 'Covid-19'], frameon=False)\naxes[0].set_ylabel('Deaths per 100.000 inhabitants')\naxes[0].spines['left'].set_visible(True)\n\nplt.subplots_adjust(wspace=.05)\nplt.show()","898628ce":"# Complete data\ndf_filter = df[df['date'] < '2020-09-01']\n\ndf_filter['year'] = df_filter['date'].apply(lambda d: d.year)\ndf_filter = df_filter[((df_filter['year'] == 2019) & (df_filter['date'] < '2019-09-01')) | \n                      ((df_filter['year'] == 2020) & (df_filter['date'] < '2020-09-01'))]\n\ndf_group = df_filter.groupby(['gender', 'year']).sum().reset_index()\n\nax = sns.barplot(x='gender', y='total', hue='year', data=df_group, palette=palette)\n\n# Data without covid-19\ndf_filter = df_filter[df_filter['cause'].apply(lambda x: not x.startswith('Covid'))]\n\ndf_group = df_filter.groupby(['gender', 'year']).sum().reset_index()\n\nax = sns.barplot(x='gender', y='total', hue='year', data=df_group, palette=palette_covid)\n\nax.legend(ax.get_legend_handles_labels()[0][-2:] + [ax.get_legend_handles_labels()[0][1]], ['2019', '2020', 'Covid-19'], frameon=False)\n\nplt.xlabel('')\nplt.ylabel('Deaths')\n\nplt.title('Deaths in Brazil in 2019 and 2020 by gender')\n\nplt.show()","d36f024b":"age_order = ['< 9', '10 - 19', '20 - 29', '30 - 39', '40 - 49', '50 - 59', '60 - 69', '70 - 79', '80 - 89', '90 - 99', '> 100', 'N\/I']","d82150e9":"# Complete data\ndf_filter = df[df['date'] < '2020-09-01']\n\ndf_filter['year'] = df_filter['date'].apply(lambda d: d.year)\ndf_filter = df_filter[((df_filter['year'] == 2019) & (df_filter['date'] < '2019-09-01')) | \n                      ((df_filter['year'] == 2020) & (df_filter['date'] < '2020-09-01'))]\n\ndf_group = df_filter.groupby(['age', 'year']).sum().reset_index()\n\nax = sns.barplot(x='age', y='total', hue='year', data=df_group, palette=palette, order=age_order)\n\n# Data without covid-19\ndf_filter = df_filter[df_filter['cause'].apply(lambda x: not x.startswith('Covid'))]\n\ndf_group = df_filter.groupby(['age', 'year']).sum().reset_index()\n\nax = sns.barplot(x='age', y='total', hue='year', data=df_group, palette=palette_covid, order=age_order)\n\nax.legend(ax.get_legend_handles_labels()[0][-2:] + [ax.get_legend_handles_labels()[0][1]], ['2019', '2020', 'Covid-19'], frameon=False)\n\nplt.xlabel('')\nplt.ylabel('Deaths')\n\nplt.title('Deaths in Brazil in 2019 and 2020 by age')\n\nplt.show()","5b0d918f":"## Deaths in 2019 and 2020 highlighting Covid-19","8633b799":"more to come...","28d57c74":"## Deaths in 2019 and 2020 by state\/region highlighting Covid-19\n\nData from:\n* deaths between January and August from 2019 and 2020\n* pupulation from 2019","f1115987":"# Deaths by Covid-19 in Brazil - 2020\n\nData provided by the civil registry offices in Brazil","3fe0a70a":"## Deaths in 2019 and 2020 by gender highlighting Covid-19\n\nConsidering deaths between January and August from 2019 and 2020.","d5542e93":"## Compare total deaths by day from 2019 and 2020 in Brazil","c67eeef8":"## Deaths in 2019 and 2020 by age highlighting Covid-19\n\nConsidering deaths between January and August from 2019 and 2020."}}