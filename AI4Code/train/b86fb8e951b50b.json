{"cell_type":{"802e1bba":"code","6124c783":"code","06332162":"code","323c222b":"code","01eeb151":"code","552795df":"code","0d865059":"code","e39329c0":"code","dbd0b6ec":"code","5a0e34ca":"code","0ec5cdea":"code","4b32efc8":"markdown","fe01d9a8":"markdown","f77f3438":"markdown","b7ce6e83":"markdown","d9f47d74":"markdown","95f5424a":"markdown","6af79914":"markdown","35b3c094":"markdown","4604a446":"markdown"},"source":{"802e1bba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6124c783":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","06332162":"df = pd.read_csv(\"\/kaggle\/input\/montcoalert\/911.csv\")\ndf.head()","323c222b":"df.info()","01eeb151":"df['zip'].value_counts().head(5)","552795df":"df['twp'].value_counts().head(5)","0d865059":"df[\"title\"].nunique()\n","e39329c0":"df[\"Reason\"] = df[\"title\"].apply(lambda title: title.split(':')[0])\ndf['Reason']","dbd0b6ec":"df['Reason'].value_counts().head(3)","5a0e34ca":"sns.countplot(x=\"Reason\", data=df, orient = 'h', palette = \"husl\")","0ec5cdea":"type(df['timeStamp'].iloc[0])","4b32efc8":"# Creating new features","fe01d9a8":"# Take a look at the title column, how many unique title codes are there?","f77f3438":"# What are the top five zip codes for 911 calls?","b7ce6e83":"# ** Now use seaborn to create a countplot of 911 calls by Reason. **","d9f47d74":"## ** In the titles column there are \"Reasons\/Departments\" specified before the title code. These are EMS, Fire, and Traffic. Use .apply() with a custom lambda expression to create a new column called \"Reason\" that contains this string value.**","95f5424a":"# What are the top five townships for 911 calls?","6af79914":"### *For example, if the title column value is EMS: BACK PAINS\/INJURY , the Reason column value would be EMS. *","35b3c094":"#  Now let us begin to focus on time information. What is the data type of the objects in the timeStamp column?","4604a446":"# ** What is the most common Reason for a 911 call based off of this new column? **"}}