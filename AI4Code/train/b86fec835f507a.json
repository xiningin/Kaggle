{"cell_type":{"c17fa28a":"code","a7c154ec":"code","e392f56b":"code","bcebc09f":"code","cbf93277":"code","d5e8ce73":"code","7e67dcc3":"code","781a2d1f":"code","9e010839":"code","fbafae4c":"code","5d093274":"code","ad05cad5":"markdown","e482af0a":"markdown"},"source":{"c17fa28a":"import numpy as np # linear algebra\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))","a7c154ec":"path = '\/kaggle\/input\/denoising-dirty-documents-in-32x32-chunks\/new_dataset\/train\/'","e392f56b":"import cv2\nimport matplotlib.pyplot as plt \n\nimg6299 = cv2.imread(path+\"6299.png\", cv2.IMREAD_GRAYSCALE)","bcebc09f":"plt.imshow(img6299, cmap='gray');","cbf93277":"plt.imshow(img6299[4:6:,5:7], cmap='gray');\nimg6299[4:6,5:7].min()","d5e8ce73":"def denoiseImg(img = None, threshold = 175):\n    if img is None:\n        return\n    return np.where(img >threshold, 255, img)","7e67dcc3":"plt.imshow(denoiseImg(img6299), cmap='gray');","781a2d1f":"img8537 = cv2.imread(path+\"8537.png\", cv2.IMREAD_GRAYSCALE)\nplt.imshow(img8537, cmap='gray');","9e010839":"plt.imshow(denoiseImg(img8537, 175), cmap='gray');","fbafae4c":"img20060 = cv2.imread(path+\"20060.png\", cv2.IMREAD_GRAYSCALE)\nplt.imshow(img20060, cmap='gray');","5d093274":"plt.imshow(denoiseImg(img20060), cmap='gray');","ad05cad5":"### The given function below can be used for all images given in the dataset. ","e482af0a":"### After observing the pixel values for the black part and the dirty part of the image, I found that the pixel value for dirty portion is between 125 and 175. So, replacing the pixel values for the dirty part on a particular threshold(i.e. 175) would solve the problem. "}}