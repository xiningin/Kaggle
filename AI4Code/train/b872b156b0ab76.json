{"cell_type":{"68d3c911":"code","9446b831":"code","e224ae75":"code","9082b704":"code","760219c4":"code","c3c912ca":"code","a06f5fbb":"code","99ead81f":"code","588e0996":"code","9e078756":"code","9cb600d0":"code","303f91db":"code","7e280a83":"code","d95f733d":"code","7b8cb7c2":"code","c0d3ac7f":"code","17edeffa":"code","a610cad9":"code","d10f35b9":"code","b62f79fc":"code","4b0aa7d9":"code","cba6ad7d":"code","08ebc9b7":"code","f45fc9c4":"code","0ed619f8":"code","8736a37d":"code","2cfa2cde":"code","e3079306":"code","ec8e893d":"code","e613e30b":"code","aa4ded5b":"markdown","67ee5536":"markdown","7103a7de":"markdown","2f8973b7":"markdown","7533963e":"markdown","88a720b3":"markdown","e7c175ab":"markdown","cf4c2776":"markdown","afb92d46":"markdown","d40a5483":"markdown","afa0c7b7":"markdown","38ba2404":"markdown"},"source":{"68d3c911":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9446b831":"data = pd.read_csv(\"..\/input\/adult-income-dataset\/adult.csv\")\ndata.head()","e224ae75":"import matplotlib.pyplot as plt\nfrom scipy.stats import ttest_ind, ttest_rel\nfrom scipy import stats\ndata.info()","9082b704":"data_num = data.copy()\ndata.head()","760219c4":"attrib, counts = np.unique(data['workclass'], return_counts = True)\nprint(attrib,counts)\nmost_freq_attrib = attrib[np.argmax(counts, axis = 0)]\nprint(most_freq_attrib)\ndata['workclass'][data['workclass'] == '?'] = most_freq_attrib \n\n\nattrib, counts = np.unique(data['occupation'], return_counts = True)\nprint(attrib,counts)\nmost_freq_attrib = attrib[np.argmax(counts, axis = 0)]\nprint(most_freq_attrib)\ndata['occupation'][data['occupation'] == '?'] = most_freq_attrib \n\n\nattrib, counts = np.unique(data['native-country'], return_counts = True)\nprint(attrib,counts)\nmost_freq_attrib = attrib[np.argmax(counts, axis = 0)]\nprint(most_freq_attrib)\ndata['native-country'][data['native-country'] == '?'] = most_freq_attrib \n\n","c3c912ca":"data.head()","a06f5fbb":"for id in data.columns:\n    print(data[id].unique())\n","99ead81f":"a1 = data['income'][0]\na2 = data['income'][2]\nprint(a1)\ndata['income'] = data['income'].map({'<=50K': 0, '>50K' : 1 }, na_action='ignore' )\ndata.head()","588e0996":"data.income.unique()","9e078756":"data_num = data.drop(['educational-num', 'income'], axis = 1)  #as income and educational-num distribution has no significance\ndata_num.describe()","9cb600d0":"data.describe(include=[\"O\"])","303f91db":"data['age'].hist(figsize=(8,8))\nplt.show()","7e280a83":"data[data['age']>70].shape\n# print(data['age'])","d95f733d":"data['hours-per-week'].hist(figsize=(8,8))\nplt.show()","7b8cb7c2":"data['fnlwgt'].hist(figsize=(8,8))\nplt.show()","c0d3ac7f":"data['capital-gain'].hist(figsize=(8,8))\nplt.show()","17edeffa":"data[\"capital-loss\"].hist(figsize=(8,8))\nplt.show()","a610cad9":"data[data[\"capital-loss\"]>0].shape","d10f35b9":"import seaborn as sns\nplt.figure(figsize=(12,8))\n\ntotal = float(len(data[\"income\"]) )\n\nax = sns.countplot(x=\"workclass\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","b62f79fc":"plt.figure(figsize=(12,8))\n\ntotal = float(len(data[\"education\"]) )\n\nax = sns.countplot(x=\"education\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","4b0aa7d9":"plt.figure(figsize=(15,8))\ntotal = float(len(data) )\n\nax = sns.countplot(x=\"marital-status\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","cba6ad7d":"plt.figure(figsize=(30,10))\ntotal = float(len(data) )\n\nax = sns.countplot(x=\"occupation\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","08ebc9b7":"plt.figure(figsize=(15,8))\ntotal = float(len(data) )\n\nax = sns.countplot(x=\"relationship\", data=data)\n# for p in ax.patches:\n#     height = p.get_height()\n#     ax.text(p.get_x()+p.get_width()\/2.,\n#             height + 3,\n#             '{:1.2f}'.format((height\/total)*100),\n#             ha=\"center\") \nplt.show()","f45fc9c4":"total = float(len(data) )\n\nax = sns.countplot(x=\"race\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","0ed619f8":"ax = sns.countplot(x=\"gender\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","8736a37d":"ax = sns.countplot(y=\"native-country\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","2cfa2cde":"ax = sns.countplot(x=\"income\", data=data)\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format((height\/total)*100),\n            ha=\"center\") \nplt.show()","e3079306":"plt.figure(figsize=(10,10)) \nsns.boxplot(x=\"income\", y=\"age\", data=data)\nplt.show()","ec8e893d":"data[['income','age']].groupby(['income'], as_index=False).mean()","e613e30b":"data.columns()","aa4ded5b":"**Now plotting categorical variables**","67ee5536":"# **replacing the '?' values with most frequent values**","7103a7de":"* Captial-gain and Capital-loss are highly right skewed data\n* fnlwgt is also right-skewed and has large diff b\/w min&median and max&median\n* hours-per-week's IQR is less => 50% of the population lies b\/w 40 & 45","2f8973b7":"# Loading Data\n","7533963e":"**Mapping each salary label with 0 and 1**","88a720b3":"# T-test","e7c175ab":"**checking all the unique values**","cf4c2776":"# Exploratory data analysis\n","afb92d46":"# Understanding numerical data\n","d40a5483":"**Most of the people are below the age 50**","afa0c7b7":"**Univariate Aanlysis**","38ba2404":"# Understanding categorical data"}}