{"cell_type":{"ef7ff83d":"code","3cef3871":"code","3ab2b254":"code","1b4a3505":"code","21241c92":"code","9a0914ec":"code","e4eceda2":"code","6646806c":"code","eab4e662":"code","4f36f3a4":"code","9b22d8ea":"code","ee054f03":"code","dc5b04a4":"code","705dbc32":"code","9c75cd54":"code","31bfeef5":"markdown"},"source":{"ef7ff83d":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[id_name, target])\n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[id_name, target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/adult-census-income\/adult.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='income', null_name='?')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","3cef3871":"# \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30\nX_train.head()","3ab2b254":"# y_train['income'].value_counts()\nX_train.info()","1b4a3505":"# \uacb0\uce21\uce58 \ud655\uc778\ncol_num=['age','fnlwgt','education.num','capital.gain','capital.loss','hours.per.week']\ncol_cat=['workclass','education','marital.status','occupation','relationship','race','sex','native.country']\nX_train.isnull().sum()","21241c92":"X_test.isnull().sum()","9a0914ec":"X_train['workclass'].value_counts()","e4eceda2":"X_train['occupation'].value_counts()","6646806c":"X_train['native.country'].value_counts()","eab4e662":"# \uacb0\uce21\uce58 \ub300\uccb4 : \ucd5c\ube48\uac12\uacfc \ucc28\uc774\uac00 \ud06c\uba74 \ucd5c\ube48\uac12\uc73c\ub85c, \uac12\uc774 \ube44\uc2b7\ud558\uba74 \ub2e4\ub978 \uac12\uc73c\ub85c \ub300\uccb4\ndef data_fillna(df):\n    df['workclass']=df['workclass'].fillna(df['workclass'].mode()[0])\n    df['occupation']=df['occupation'].fillna(\"null\")\n    df['native.country']=df['native.country'].fillna(df['native.country'].mode()[0])\n    return df\nX_train=data_fillna(X_train)\nX_test=data_fillna(X_test)\nX_train.isnull().sum()","4f36f3a4":"X_test.isnull().sum()","9b22d8ea":"# \ub77c\ubca8 \uc778\ucf54\ub529 : \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \uc218\uce58\ud615\uc73c\ub85c \ubcc0\ud658\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nle=LabelEncoder()\nX_all=pd.concat([X_train.assign(ind='train'),X_test.assign(ind='test')])\nX_all[col_cat]=X_all[col_cat].apply(le.fit_transform)\nX_train=X_all[X_all['ind']=='train']\nX_train=X_train.drop('ind',axis=1)\nX_train.head()\nX_test=X_all[X_all['ind']=='test']\nX_test=X_test.drop('ind',axis=1)\nX_test.head()","ee054f03":"# \uc218\uce58\ud615 \ubcc0\uc218 \uc815\uaddc\ud654\nscaler=MinMaxScaler()\nscaler.fit(X_train[col_num])\nX_train[col_num]=scaler.transform(X_train[col_num])\nX_test[col_num]=scaler.transform(X_test[col_num])","dc5b04a4":"# \ubaa8\ub378\ub9c1\nfrom sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier(n_estimators=200,max_depth=6,random_state=13)\nmodel.fit(X_train,y_train['income'])\ntrain_pred=model.predict(X_train)\ntrain_score=model.score(X_train,y_train['income'])\ntrain_score","705dbc32":"# \uc608\uce21\ntest_pred=model.predict(X_test)\noutput=pd.DataFrame({'ID':X_test.index,'income':test_pred})\noutput.to_csv('12345.csv',index=False)","9c75cd54":"# \ucc44\uc810\ntest_score=model.score(X_test,y_test['income'])\ntest_score","31bfeef5":"## \uc131\uc778 \uc778\uad6c\uc870\uc0ac \uc18c\ub4dd \uc608\uce21\n\n* age: \ub098\uc774\n* workclass: \uace0\uc6a9 \ud615\ud0dc\n* fnlwgt: \uc0ac\ub78c\uc758 \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58(final weight)\n* education: \uad50\uc721 \uc218\uc900\n* education.num: \uad50\uc721 \uc218\uc900 \uc218\uce58\n* marital.status: \uacb0\ud63c \uc0c1\ud0dc\n* occupation: \uc5c5\uc885\n* relationship: \uac00\uc871 \uad00\uacc4\n* race: \uc778\uc885\n* sex: \uc131\ubcc4\n* capital.gain: \uc591\ub3c4 \uc18c\ub4dd\n* capital.loss: \uc591\ub3c4 \uc190\uc2e4\n* hours.per.week: \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n* native.country: \uad6d\uc801\n* income: \uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12)"}}