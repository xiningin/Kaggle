{"cell_type":{"151c204b":"code","95c0dd37":"code","50f7b092":"code","705457a4":"code","011cb1f6":"code","449779a0":"code","858b7e67":"code","9d8d3bdd":"code","6f5b3e02":"code","f324e04b":"code","098a031c":"code","edafd8c0":"code","8b36048d":"code","5234e8d9":"code","c2acfaa6":"code","e8329105":"code","d11692ac":"code","8de26926":"code","931dbf1b":"code","31ecae20":"code","f4436621":"code","1f761ce2":"code","c9683e8e":"code","b8dc8612":"code","494a65e3":"code","8ee3a375":"code","a7d93be5":"code","d58a2e65":"code","0bd64002":"markdown","50d0d533":"markdown"},"source":{"151c204b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport plotly.graph_objs as go\nimport cufflinks as cf\ncf.set_config_file(offline=True)\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","95c0dd37":"# read data and write first 5 component\ndata = pd.read_csv(\"..\/input\/global-terrorism\/globalterrorismdb_0718dist.csv\",delimiter=',', encoding = \"ISO-8859-1\")","50f7b092":"data.info()","705457a4":"data.head()","011cb1f6":"#if you want to change columns name, you can use following code\n#data.rename(columns={'imonth': 'Month',\n# 'iyear': 'Year',\n#'eventid': 'Event ID',\n#'country_txt': 'Country',\n#'region_txt': 'Region',\n#'provstate': 'State',\n#'city': 'City',\n#'attacktype1_txt': 'Attack_type',\n# 'targtype1_txt': 'Target',\n# 'natlty1_txt': 'Nationality',\n#'gname': 'Terrorist Group',\n# 'weaptype1_txt': 'Weapon type',\n# 'weapsubtype1_txt': 'Weapon subtype',\n# 'nkill': 'Killed',\n# 'nwound': 'Wounded'},inplace=True)","449779a0":"data.describe()","858b7e67":"data.info(\"columns\")","9d8d3bdd":"data.country_txt.unique()","6f5b3e02":"data.country_txt.value_counts()\n# or you can use data['country_txt'].value_counts()","f324e04b":"data.groupby(['country_txt']).agg('sum')","098a031c":"temp= data[(data[\"country_txt\"] == 'Turkey')]\ncountry_list = list(temp)\nprint(temp)","edafd8c0":"data.head()","8b36048d":"dataframe=data[[\"iyear\",\"imonth\",\"iday\",\"city\",\"attacktype1_txt\",\"targtype1_txt\",\"targsubtype1\",\"weaptype1\",\"nkill\",\"nwound\",\"suicide\",\"success\"]]","5234e8d9":"f,ax = plt.subplots(figsize=(8,8)) #figure size command\nsns.heatmap(dataframe.corr(), annot=False, linewidths=.4, fmt =\".1f=\", ax=ax) ","c2acfaa6":"f,ax = plt.subplots(figsize=(10,5))\ndata.nkill.plot(kind=\"line\",color = \"b\", label=\"number of kills\",linewidth=5, alpha=0.5, grid=True, linestyle=\":\")\ndata.nwound.plot(color=\"g\", label=\"number of wounds\",linewidth=5, alpha=0.5, grid=True,linestyle=\":\")\nplt.legend(loc=\"upper right\")\n#'best'\t0\n#'upper right'\t1\n#'upper left'\t2\n#'lower left'\t3\n#'lower right'\t4\n#'right'\t5\n#'center left'\t6\n#'center right'\t7\n#'lower center'\t8\n#'upper center'\t9\n#'center'\t10\nplt.xlabel(\"Number of attacks\", size=20)\nplt.ylabel(\"Person\", size=20)\nplt.title(\"Line Plot\")","e8329105":"data.plot(kind=\"scatter\", x=\"iyear\", y=\"nkill\",grid=True, alpha=1, color=\"r\",figsize=(15,5))\nplt.xlabel(\"Year\", size= 25)\nplt.ylabel(\"Kills number\", size= 25) #size command helps you to change for labels size.\nplt.title(\"Year-Kill Scatter Plot\")","d11692ac":"#Visualizing the nulls. Each YELLOW cell represents a null\nplt.figure(figsize=(10,5))\nsns.heatmap(data.isnull(),cmap='viridis',cbar=False)","8de26926":"motive=data['motive']","931dbf1b":"data=data[['eventid','iyear', 'imonth', 'country_txt', 'region_txt', 'provstate', 'city', 'latitude', 'longitude', \n           'success', 'attacktype1_txt', 'targtype1_txt', 'natlty1_txt', 'gname', 'weaptype1_txt', 'weapsubtype1_txt', 'nkill', 'nwound']]","31ecae20":"data.head()","f4436621":"plt.figure(figsize=(16,6))\nsns.heatmap(data.isnull(),cmap='viridis',cbar=False)","1f761ce2":"#Filling the nulls to save the data\ndata['weaptype1_txt'].fillna('No Record', inplace=True)\ndata['natlty1_txt'].fillna('Unknown', inplace=True)","c9683e8e":"motive.dropna(inplace=True)","b8dc8612":"print('No. of rows before dropping nulls: {}'.format(data['eventid'].count()))\ndata.dropna(inplace=True)\nprint('No. of rows after dropping nulls: {}'.format(data['eventid'].count()))","494a65e3":"data['Casualties']=data['nkill']+data['nwound']","8ee3a375":"data.head()","a7d93be5":"data = [go.Scattermapbox(\n            lat= data['latitude'],\n            lon= data['longitude'],\n            customdata = data['eventid'],\n            mode='markers',\n            marker=dict(\n                size= 3.5,\n                color = 'red',\n                opacity = .7,\n            ),\n          )]\nlayout = go.Layout(autosize=False,\n                   mapbox= dict(accesstoken=\"pk.eyJ1Ijoic2hhejEzIiwiYSI6ImNqYXA3NjhmeDR4d3Iyd2w5M2phM3E2djQifQ.yyxsAzT94VGYYEEOhxy87w\",\n                                bearing=0,\n                                pitch=50,\n                                zoom=2,\n                                center= dict(\n                                         lat=12,\n                                         lon=39),\n                                style= \"mapbox:\/\/styles\/shaz13\/cjk4wlc1s02bm2smsqd7qtjhs\"),\n                    width=900,\n                    height=600, title = \"Terrorist attack locations\")\n\n","d58a2e65":"fig = dict(data=data, layout=layout)\niplot(fig)","0bd64002":"Hi, You can find most code in this notebook you are looking for. I try to learn. I am going to improve it for sure. I may have mistakes, please let me know. I think you might also use and extend it. Good luck.","50d0d533":"References \n\n\nhttps:\/\/www.kaggle.com\/cemilisilak\/global-terrorism\/comments\n\nhttps:\/\/www.kaggle.com\/raghuchaudhary\/global-terrorism\n\nhttps:\/\/www.kaggle.com\/kanncaa1"}}