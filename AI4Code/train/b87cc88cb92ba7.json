{"cell_type":{"ef9e484e":"code","c8abe6d7":"code","3b07c355":"code","43132813":"code","8f7c6286":"code","72264a78":"code","6543beae":"code","0595edb7":"code","ccd47248":"code","8aa3b42a":"markdown","33e0ed7d":"markdown","bf91dbf4":"markdown","bb3a3dfc":"markdown","39f3c526":"markdown","45c52d9b":"markdown","078fcde6":"markdown"},"source":{"ef9e484e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8abe6d7":"!pip install git+https:\/\/github.com\/keras-team\/keras-tuner.git\n!pip install autokeras","3b07c355":"import tensorflow as tf\n\nimport autokeras as ak","43132813":"train = pd.read_csv(\"..\/input\/netflix-appetency\/train.csv\",nrows=10000)","8f7c6286":"#Code by JEONGBIN PARK  https:\/\/www.kaggle.com\/jeongbinpark\/tps-oct-autokeras\n\ntrain = train.drop('id',axis=1)\ny_train = train['target']\nX_train = train.drop('target',axis=1)\n\nX_train = X_train.to_numpy()\ny_train = y_train.to_numpy()","72264a78":"clf = ak.StructuredDataClassifier(overwrite=True, max_trials=5)\nclf.fit(X_train, y_train, epochs=10, validation_split=0.3)","6543beae":"#Code by JEONGBIN PARK  https:\/\/www.kaggle.com\/jeongbinpark\/tps-oct-autokeras\n\nmodel = clf.export_model()\nmodel.summary()","0595edb7":"#Code by JEONGBIN PARK  https:\/\/www.kaggle.com\/jeongbinpark\/tps-oct-autokeras\n\ntrain = pd.read_csv(\"..\/input\/netflix-appetency\/train.csv\")\ntest = pd.read_csv(\"..\/input\/netflix-appetency\/test.csv\")\ntrain = train.drop('id',axis=1)\ny_train = train['target']\nX_train = train.drop('target',axis=1)\n\nX_train = X_train.to_numpy()\ny_train = y_train.to_numpy()\n\ntest = test.drop('id',axis=1)\ntest = test.to_numpy()\n\nmodel._layers.pop() #Functional' object has no attribute '_layers'\nmodel._layers.pop()\n\ntmp = tf.keras.Sequential(model)\ntmp.add(tf.keras.layers.Activation('tanh'))\ntmp.compile(optimizer='adam', loss='mse')#The metric is  auc \n\ntmp.fit(X_train, y_train, epochs=5, validation_split=0.3)","ccd47248":"#Code by JEONGBIN PARK  https:\/\/www.kaggle.com\/jeongbinpark\/tps-oct-autokeras\n\npred = tmp.predict(test)\nsample = pd.read_csv(\"..\/input\/netflix-appetency\/sample_submission.csv\")\nsample['target'] = pred\nsample.to_csv(\"test.csv\",index=None)","8aa3b42a":"#Acknowledgement\n\nJEONGBIN PARK  https:\/\/www.kaggle.com\/jeongbinpark\/tps-oct-autokeras","33e0ed7d":"#AttributeError: 'Functional' object has no attribute '_layers'\n\nI made a search in StackOverflow though the asnwers are too complex. I'll wait till somebody can help with this issue.","bf91dbf4":"#Create Model","bb3a3dfc":"#Be prepared to wait:\n\nTrial 1 Complete 00h 06m 25s - Best val_accuracy So Far: 0.7287161946296692\n\nTrial 2 Complete 00h 06m 27s - Best val_accuracy So Far: 0.7287161946296692\n\nTrial 3 Complete 00h 06m 26s - Best val_accuracy So Far: 0.7307432293891907\n\nTrial 4 Complete 00h 06m 30s - Best val_accuracy So Far: 0.7320945858955383\n\nTrial 5 Complete 00h 06m 31s - Best val_accuracy So Far: 0.7327702641487122","39f3c526":"#GPU is ON!","45c52d9b":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSM86txvWAkIYAdyZdjuzWs_hh1ACrs6pVkFg&usqp=CAU)jishuin.proginn.com","078fcde6":"#ValueError: Failed to convert a NumPy array to a Tensor (Unsupported object type float).\n\nI will check if I need to encode or do anything else."}}