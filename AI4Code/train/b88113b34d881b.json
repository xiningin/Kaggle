{"cell_type":{"38095ef3":"code","34782cbf":"code","ecc4c1a5":"code","56a13ed8":"code","88112a8a":"code","1ab22dc5":"code","ac77aab7":"code","9af231d3":"code","52995244":"code","a79b77f1":"code","e2ba60f7":"code","0295fe06":"code","55499574":"code","58e314ef":"code","eecf02c8":"code","4c0e1dab":"markdown","e2da2353":"markdown","230fb02a":"markdown","e79908b3":"markdown","328cc563":"markdown","e3371ec8":"markdown","f6842761":"markdown","6ff2dd97":"markdown","eb7378e5":"markdown","49999f08":"markdown","a88f5590":"markdown","82670922":"markdown","96b047a1":"markdown"},"source":{"38095ef3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34782cbf":"train = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")\ntrain.head()","ecc4c1a5":"null_columns=train.columns[train.isnull().any()]\ntrain[null_columns].isnull().sum()","56a13ed8":"train.drop(['Alley', 'PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)","88112a8a":"train.corr()['SalePrice'].sort_values()","1ab22dc5":"import seaborn as sns\nimport matplotlib.pyplot as plt\ntrain_corr = train.corr()\nplt.figure(figsize=(18, 18))\nsns.heatmap(train_corr, vmin=-1, vmax=1, cmap=\"cividis\", annot=True, linewidth=0.1)\n","ac77aab7":"main_features = ['OverallQual','GrLivArea','GarageCars','GarageArea','TotalBsmtSF','1stFlrSF','FullBath','TotRmsAbvGrd','YearBuilt','YearRemodAdd']","9af231d3":"X=train[main_features].copy()\nY=train['SalePrice']","52995244":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.25)\nregr = LinearRegression()\nregr.fit(X_train, y_train)\npred=regr.predict(X_test)\nprint(regr.score(X_test, y_test))","a79b77f1":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 150, random_state = 0)\nregressor.fit(X_train, y_train)  \npred=regressor.predict(X_test)\nprint(regressor.score(X_test, y_test))","e2ba60f7":"from sklearn.tree import DecisionTreeRegressor\nregressorTree = DecisionTreeRegressor(random_state = 0)\nregressorTree.fit(X_train, y_train)  \npred=regressorTree.predict(X_test)\nprint(regressorTree.score(X_test, y_test))","0295fe06":"test = pd.read_csv(\"..\/input\/home-data-for-ml-course\/test.csv\")","55499574":"test_new=test[main_features].copy()\ntest_new=test_new.fillna(0)\ntest_new.head()","58e314ef":"regressor.fit(X,Y)\npred_test=regressor.predict(test_new)","eecf02c8":"my_submission = pd.DataFrame({'Id':test.Id, 'SalePrice': pred_test})\nmy_submission.to_csv('submission-2.csv', index=False)\nmy_submission.head()","4c0e1dab":"## Map and Plot using Heatmap","e2da2353":"# House Pricing Prediction\n\nAsk a home buyer to describe their dream house, and they probably won't begin with the height of the basement ceiling or the proximity to an east-west railroad. But this playground competition's dataset proves that much more influences price negotiations than the number of bedrooms or a white-picket fence.","230fb02a":"Checking null values, and remove them.","e79908b3":"## Predict the Sale Price\n\nWe see that Random Forest model is the highest accuracy score. Therefore we use Random Forest model to predict sale price.","328cc563":"### 3. Decision Tree ","e3371ec8":"## Load train data.","f6842761":"Correlation of independent variables with target variable(SalePrice)","6ff2dd97":"That is all. Hope this notebook helps learning machine learning prediction model.\n\nThanks to all contributors on this competition and allow me to learn.","eb7378e5":"We use only selected features that correlate to sale price.","49999f08":"### 1. Linear Regression","a88f5590":"# Model Selection\n\nCheck data to find the best model.","82670922":"### 2. Random Forest Regression","96b047a1":"Drop fields all with too many nulls."}}