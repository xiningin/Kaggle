{"cell_type":{"47626766":"code","54e09792":"code","d00685f0":"code","73e296a9":"code","d4c1fbbd":"code","5f91ccbd":"code","f7be155c":"code","724a337e":"code","89c4cc51":"code","2c08e0c6":"code","4cbcfacb":"code","ffd01b50":"code","b386104e":"code","79a5ae56":"code","62d663ed":"code","81fb2b20":"code","809bd583":"markdown"},"source":{"47626766":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","54e09792":"import h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='16G')","d00685f0":"train = h2o.import_file(\"..\/input\/standalone-train-and-test-preprocessing\/train.csv\")\ntest = h2o.import_file(\"..\/input\/standalone-train-and-test-preprocessing\/test.csv\")","73e296a9":"print(train.head().isna().sum(axis=1))\n# train.head().apply(lambda x: x==np.nan).sum()","d4c1fbbd":"print(train.shape) # 433 columns = includes the static\/identity variables\ntrain.head()","5f91ccbd":"test.head()","f7be155c":"object_columns = np.load('..\/input\/standalone-train-and-test-preprocessing\/object_columns.npy')","724a337e":"object_columns","89c4cc51":"for f in object_columns:\n    train[f] = train[f].asfactor()\n    test[f] = test[f].asfactor()","2c08e0c6":"x = train.columns[2:]\ny = 'isFraud'\n# For binary classification, response should be a factor\ntrain[y] = train[y].asfactor()","4cbcfacb":"aml = H2OAutoML(max_models=18, seed=27, max_runtime_secs=30000, nfolds=4,stopping_rounds=10,stopping_metric=\"AUC\") #exclude_algos=[\"GLM\",\"DRF\"]\naml.train(x=x, y=y, training_frame=train)","ffd01b50":"# View the AutoML Leaderboard\nlb = aml.leaderboard\n# lb.head(rows=lb.nrows)  # Print all rows instead of default (10 rows)\nlb.head()","b386104e":"# The leader model is stored here\naml.leader","79a5ae56":"preds = aml.predict(test)\npreds['p1'].as_data_frame().values.flatten().shape\n","62d663ed":"sample_submission = pd.read_csv('..\/input\/ieee-fraud-detection\/sample_submission.csv')\nsample_submission.shape","81fb2b20":"sample_submission['isFraud'] = preds['p1'].as_data_frame().values\nsample_submission.to_csv('h2o_automl_submission_random.csv', index=False)","809bd583":"## TODO: Temporal validation split"}}