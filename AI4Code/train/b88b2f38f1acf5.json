{"cell_type":{"658dd88c":"code","8403d999":"code","92449ed7":"code","0fced9bc":"code","cd409969":"code","46436cc0":"code","d913e54f":"code","494ae2d4":"code","0beea115":"code","fa750f59":"code","98885bbf":"code","424ca58f":"code","6dcc5c06":"code","2f913c70":"code","6b06a490":"code","db2649af":"code","806447de":"code","a2a78709":"code","5566f0e5":"code","b5f53a23":"code","fb7cb602":"code","697355fd":"code","70194155":"code","4e2d908f":"code","bca49072":"code","a2191234":"markdown","88cccecb":"markdown","1c2966aa":"markdown","451dc7b3":"markdown","5bc35bca":"markdown","8824340c":"markdown","50d3a86e":"markdown"},"source":{"658dd88c":"import warnings \nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom sklearn.metrics import mean_squared_log_error, mean_squared_error\nimport optuna\nfrom optuna import Trial\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os\n\nos.listdir('\/kaggle\/input\/news-popularity-ml-thon-2021\/')","8403d999":"# train data\ntrain_df = pd.read_csv('..\/input\/news-popularity-ml-thon-2021\/news_train.csv')\n\n# test data\ntest_df = pd.read_csv('..\/input\/news-popularity-ml-thon-2021\/news_test.csv')","92449ed7":"train_df.head()","0fced9bc":"train_df.shape, test_df.shape","cd409969":"train_df.info()","46436cc0":"for feature in train_df.columns:\n    train_df[feature] = train_df[feature].fillna(train_df[feature].mean())\nfor feature in test_df.columns:\n    test_df[feature] = test_df[feature].fillna(test_df[feature].mean())","d913e54f":"train_df.shape, test_df.shape","494ae2d4":"sample = train_df.sample(2000)\nplt.figure(figsize=(50, 50))\nax = sns.heatmap(sample.corr(), annot_kws={'size': 15}, cmap='RdYlGn', linewidths=0.2)","0beea115":"sample.corr().style.format(\"{:.2}\").background_gradient(cmap=plt.get_cmap('RdYlGn'), axis=1)","fa750f59":"train_df[\"num_imgs_vid\"] = train_df[\"num_imgs\"] + train_df[\"num_videos\"]\n\ntrain_df[\"self_reference_max-min_shares\"] = train_df[\"self_reference_max_shares\"] - train_df[\"self_reference_min_shares\"]\ntrain_df[\"num_external_hrefs\"] = train_df[\"num_hrefs\"] - train_df[\"num_self_hrefs\"]\n\ntrain_df[\"net_rate_positive_words\"] = train_df[\"rate_positive_words\"] - train_df[\"rate_negative_words\"]\n\ntrain_df[\"max_net_positive_polarity\"] = train_df[\"max_positive_polarity\"] - train_df[\"max_negative_polarity\"]\ntrain_df[\"min_net_positive_polarity\"] = train_df[\"min_positive_polarity\"] - train_df[\"min_negative_polarity\"]\ntrain_df[\"avg_net_positive_polarity\"] = train_df[\"avg_positive_polarity\"] - train_df[\"avg_negative_polarity\"]\ntrain_df['hasimgvid'] = train_df['num_imgs_vid'].apply(lambda x: 1 if x > 0 else 0)\ntrain_df['haslink'] = train_df['num_hrefs'].apply(lambda x: 1 if x > 0 else 0)\n\ntrain_df","98885bbf":"test_df[\"num_imgs_vid\"] = test_df[\"num_imgs\"] + test_df[\"num_videos\"]\n\ntest_df[\"self_reference_max-min_shares\"] = test_df[\"self_reference_max_shares\"] - test_df[\"self_reference_min_shares\"]\ntest_df[\"num_external_hrefs\"] = test_df[\"num_hrefs\"] - test_df[\"num_self_hrefs\"]\n\ntest_df[\"net_rate_positive_words\"] = test_df[\"rate_positive_words\"] - test_df[\"rate_negative_words\"]\n\ntest_df[\"max_net_positive_polarity\"] = test_df[\"max_positive_polarity\"] - test_df[\"max_negative_polarity\"]\ntest_df[\"min_net_positive_polarity\"] = test_df[\"min_positive_polarity\"] - test_df[\"min_negative_polarity\"]\ntest_df[\"avg_net_positive_polarity\"] = test_df[\"avg_positive_polarity\"] - test_df[\"avg_negative_polarity\"]\ntest_df['hasimgvid'] = test_df['num_imgs_vid'].apply(lambda x: 1 if x > 0 else 0)\ntest_df['haslink'] = test_df['num_hrefs'].apply(lambda x: 1 if x > 0 else 0)\n\ntest_df","424ca58f":"Q1 = train_df.quantile(q=0.25) \n\nQ3 = train_df.quantile(q=0.75)\n\nIQR = Q3-Q1\nprint('IQR for each column:- ')\nprint(IQR)","6dcc5c06":"sorted_shares = train_df.sort_values('shares') \n\nmedian = sorted_shares['shares'].median() \n\nq1 = sorted_shares['shares'].quantile(q=0.25) \n\nq3 = sorted_shares['shares'].quantile(q=0.75) \n\niqr = q3-q1","2f913c70":"Inner_bound1 = q1-(iqr*1.5) \nprint(f'Inner Boundary 1 = {Inner_bound1}')\nInner_bound2 = q3+(iqr*1.5)  \nprint(f'Inner Boundary 2 = {Inner_bound2}')\nOuter_bound1 = q1-(iqr*3)    \nprint(f'Outer Boundary 1 = {Outer_bound1}')\nOuter_bound2 = q3+(iqr*3)   \nprint(f'Outer Boundary 2 = {Outer_bound2}')","6b06a490":"train_df = train_df[train_df['shares']<=Outer_bound2]","db2649af":"train_df.shape, test_df.shape","806447de":"X = train_df.drop(['shares', 'row_id'],axis=1)\ny = train_df['shares']","a2a78709":"train_x, test_x, train_y, test_y = train_test_split(X, y, test_size=0.15,random_state=42)","5566f0e5":"def objective(trial,data=X,target=y):\n    \n    train_x, test_x, train_y, test_y = train_test_split(data, target, test_size=0.15,random_state=42)\n    \n    param = {\n        'tree_method':'gpu_hist',  # Use GPU acceleration\n        'lambda': trial.suggest_loguniform(\n            'lambda', 1e-3, 10.0\n        ),\n        'alpha': trial.suggest_loguniform(\n            'alpha', 1e-3, 10.0\n        ),\n        'colsample_bytree': trial.suggest_categorical(\n            'colsample_bytree', [0.5,0.6,0.7,0.8,0.9,1.0]\n        ),\n        'subsample': trial.suggest_categorical(\n            'subsample', [0.6,0.7,0.8,1.0]\n        ),\n        'learning_rate': trial.suggest_categorical(\n            'learning_rate', [0.008,0.009,0.01,0.012,0.014,0.016,0.018, 0.02]\n        ),\n        'n_estimators': trial.suggest_categorical(\n            \"n_estimators\", [150, 200, 300, 3000]\n        ),\n        'max_depth': trial.suggest_categorical(\n            'max_depth', [4,5,7,9,11,13,15,17]\n        ),\n        'random_state': 42,\n        'min_child_weight': trial.suggest_int(\n            'min_child_weight', 1, 300\n        ),\n    }\n    model = xgb.XGBRegressor(**param)  \n    \n    model.fit(train_x,train_y,eval_set=[(test_x,test_y)],early_stopping_rounds=100,verbose=False)\n    \n    preds = model.predict(test_x)\n    rmse = mean_squared_error(test_y, preds,squared=False)\n    return rmse","b5f53a23":"%%time\nstudy = optuna.create_study(direction='minimize')\nstudy.optimize(objective, n_trials=20)\nprint('Number of finished trials:', len(study.trials))\nprint('Best trial:', study.best_trial.params)","fb7cb602":"study.best_params","697355fd":"%%time\nbest_params = study.best_params\nbest_params['tree_method'] = 'gpu_hist'\nbest_params['random_state'] = 42\n\nclf = xgb.XGBRegressor(**(best_params))\n\nclf.fit(X, y)","70194155":"# Train\npredictions = clf.predict(train_x)\nprint(\"Train RMSLE\")\nprint(mean_squared_log_error(train_y, predictions))\n\n# Valid\npredictions = clf.predict(test_x)\nprint(\"VALID RMSLE\")\nprint(mean_squared_log_error(test_y, predictions))","4e2d908f":"final_predictions = clf.predict(test_df.drop(['row_id'], axis = 1))\nsub = pd.DataFrame()\nsub['row_id'] = test_df['row_id']\nsub['shares'] = final_predictions\nsub","bca49072":"sub.to_csv('submission.csv', index = False)","a2191234":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">Prediction Time<\/p>","88cccecb":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">Feature Engineering\ud83d\udd27<\/p>","1c2966aa":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:120%; text-align:center; border-radius: 15px 50px;\">Outlier Detection<\/p>","451dc7b3":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">News Popularity - ML-thon 2021<\/p>","5bc35bca":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">Model Building\ud83d\udcdd<\/p>","8824340c":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">Data Exploration\ud83d\udd0d<\/p>","50d3a86e":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 50px;\">Imports\ud83d\udcda<\/p>"}}