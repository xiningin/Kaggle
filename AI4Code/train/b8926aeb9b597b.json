{"cell_type":{"4ed8094c":"code","02199b9e":"code","a9cf6b03":"code","c13c5656":"code","4a59adc0":"code","afb2ce42":"code","ad422772":"code","c25b7cbc":"code","043d9e96":"code","9288677a":"code","2447a4cf":"code","84cb7c0f":"code","14402242":"code","4a7ca968":"code","28260aed":"code","97eceb71":"code","23d761cd":"code","7ad74cbf":"code","5de53401":"code","aadc7b1b":"code","384c0ddc":"code","2c5638fb":"code","e27bc65f":"code","16bd3a35":"code","6968decd":"markdown","8ef68730":"markdown","5fa5a0c7":"markdown","95c24f38":"markdown","dd6f4656":"markdown"},"source":{"4ed8094c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02199b9e":"ec = pd.read_csv('\/kaggle\/input\/ecommerce-customers\/Ecommerce Customers.csv')","a9cf6b03":"ec.head()","c13c5656":"ec.describe().transpose()","4a59adc0":"ec.info()","afb2ce42":"sns.jointplot(x=ec['Time on Website'],y=ec['Yearly Amount Spent'])","ad422772":"sns.jointplot(x=ec['Time on App'],y=ec['Yearly Amount Spent'])","c25b7cbc":"sns.jointplot(kind='hex',x=ec['Time on App'],y=ec['Length of Membership'])","043d9e96":"sns.pairplot(ec)","9288677a":"sns.lmplot(x='Yearly Amount Spent',y='Length of Membership',data=ec)","2447a4cf":"sns.heatmap(ec.corr(),annot=True,cmap='Blues')","84cb7c0f":"ec.columns","14402242":"x = ec[['Avg. Session Length','Time on App','Time on Website','Length of Membership']]\ny = ec['Yearly Amount Spent']","4a7ca968":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x,y,test_size=0.3)","28260aed":"from sklearn.linear_model import LinearRegression","97eceb71":"lm = LinearRegression()","23d761cd":"lm.fit(X_train,y_train)","7ad74cbf":"### The coefficients\nlm.coef_","5de53401":"pred = lm.predict(X_test)","aadc7b1b":"plt.scatter(x=y_test,y=pred)\nplt.xlabel=('y Test')\nplt.ylabel=('y predict')","384c0ddc":"from sklearn import metrics","2c5638fb":"print('MAE = ', metrics.mean_absolute_error(y_test,pred))\nprint('Mean Squared Error = ', metrics.mean_squared_error(y_test,pred))\nprint('Root Mean Squared Error = ', np.sqrt(metrics.mean_squared_error(y_test,pred)))","e27bc65f":"sns.distplot(y_test-pred,bins=10)","16bd3a35":"ecc = pd.DataFrame(lm.coef_,x.columns)\necc.columns = ['Coeffecient']\necc","6968decd":"# EDA","8ef68730":"# Evaluation","5fa5a0c7":"### Training the model","95c24f38":"# Training and Testing Data","dd6f4656":"### Prediction"}}