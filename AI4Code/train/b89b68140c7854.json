{"cell_type":{"c3eb4b12":"code","7143379c":"code","18b8fde0":"code","842ac3ae":"code","5b2196b6":"code","ddce3b5c":"code","cea7f488":"code","81f46832":"code","b31d8e47":"code","904f34a3":"code","4c0d2b8f":"code","1a0a71f2":"code","583bd0ab":"code","94b661f8":"code","04c3190a":"code","2f466bf5":"code","2becc38d":"code","026aa8c3":"code","ceed2e75":"markdown","342f45c5":"markdown","3c5180ea":"markdown","cbaf55c5":"markdown","acab6cf4":"markdown","241895db":"markdown","fe6e25ba":"markdown","a18e8169":"markdown","5581be3f":"markdown","37f3837e":"markdown","b8e10d5b":"markdown","c3826db5":"markdown","b2fbd90e":"markdown","6dfffa8d":"markdown","0740c437":"markdown","61260473":"markdown"},"source":{"c3eb4b12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7143379c":"df = pd.read_csv(\"\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv\", sep=',')\ndf.head()","18b8fde0":"df.info()","842ac3ae":"df.describe()","5b2196b6":"#add a new column for a better visualisation\ndf['Overweight'] = [1 if x > 25 else 0 for x in df.BMI]\ndf.head()","ddce3b5c":"import matplotlib.pyplot as plt\nimport seaborn as sns","cea7f488":"plt.scatter(df.Age, df.Insulin, s=50, cmap='viridis')\nplt.colorbar()\nplt.xlabel('Age')\nplt.ylabel('Insulin')\nplt.title('Relation between age and insulin levels')\nplt.show()","81f46832":"fig, axs = plt.subplots(1,2)\naxs[0].scatter(df.Age, df.Glucose, s=50, cmap='viridis')\naxs[0].set_title('Age versus Glucose')\naxs[1].scatter(df.Age, df.BloodPressure)\naxs[1].set_title('Age versus Blood Pressure')\nplt.show()","b31d8e47":"\nfig, ax = plt.subplots()\nax.hist(df.BloodPressure, bins=10, histtype='bar')\nax.set_title('Histogram of Blood Pressure feature')\nax.set_xlabel('Blood Pressure')\nax.set_ylabel('Number of Observations')\nplt.show()","904f34a3":"bins = [21, 31, 41, 51, 61, 71, 81]\nfig, ax = plt.subplots()\nax.hist(df.Age, bins=bins, histtype='bar')\nax.set_title('Histogram of Age feature')\nax.set_xlabel('Age')\nax.set_ylabel('Number of Observations')\nplt.show()","4c0d2b8f":"fig, ax = plt.subplots()\nax.bar(['no diabete', 'diabete'], df.groupby('Outcome')['Age'].mean(), color=['red', 'blue'])\nax.set_xlabel('Outcome')\nax.set_ylabel('Average age')\nfig.savefig('AgeVersusOutcome.png')\nplt.show()\n","1a0a71f2":"sns.set_palette(\"RdBu\") #set a color palette\n#countplot create a histogram across a categorical variable\nsns.countplot(x='Outcome', data=df)\nplt.show()","583bd0ab":"sns.countplot(x='Outcome', hue='Overweight', data=df)\nplt.show()","94b661f8":"#catplot \nsns.catplot(x=\"Age\", aspect=3, data=df, kind='count')\nplt.show()","04c3190a":"g = sns.catplot(x=\"Age\", aspect=3, data=df, kind='count')\ng.fig.suptitle('Age Counts')\nplt.show()","2f466bf5":"g = sns.catplot(x=\"Age\", aspect=3, data=df, kind='count')\nplt.xticks(rotation=30)\nplt.show()","2becc38d":"sns.scatterplot(x='Age', y='Insulin', data=df, hue='Outcome')\nplt.show()","026aa8c3":"sns.relplot(x='Age', y='Insulin', data=df, hue='Outcome', kind='scatter')\nplt.show()","ceed2e75":"## Scatter plot with subplot","342f45c5":"### set title","3c5180ea":"We can give custom bins","cbaf55c5":"## Bar plot for categorical variables ","acab6cf4":"## Scatter Plot","241895db":"### Rotate xticks","fe6e25ba":"**value counts for two categorical variable**","a18e8169":"# Seaborn","5581be3f":"## Histogram","37f3837e":"* s parameter: size of marker\n* c parameter: color of marker. Might be used to see the class distribution accross the features. \n* alpha parameter: opacity of marker","b8e10d5b":"## Count Plot","c3826db5":"Same as plt.scatter","b2fbd90e":"relplot is a more general way","6dfffa8d":"for more, visit https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html","0740c437":"**value counts for single categorical variable**","61260473":"It helps us interpret the distribution of variable. "}}