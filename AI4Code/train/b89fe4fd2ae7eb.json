{"cell_type":{"104e90c5":"code","9c03ac9c":"code","8457e52d":"code","95ebb77c":"code","047ecd7e":"code","48f39f08":"code","76da842e":"code","e5de8e0b":"code","2ac52253":"code","23448099":"code","defc0e31":"code","32277575":"code","2179a3c3":"code","a1acdaa8":"code","0c80dc24":"code","3c1f1d19":"code","e3105887":"code","d39d0ed9":"code","06bb6151":"code","ba3532b8":"code","926cca17":"code","aef74a9b":"code","bc4c4d92":"code","fb4f06d9":"code","cb39b107":"code","bb1cfb14":"code","adb35408":"code","6e22139f":"code","67767ac6":"code","0d942ecc":"markdown","e1291650":"markdown","5486941b":"markdown","6489f84e":"markdown","d6dda691":"markdown","66e2fbe1":"markdown","50506e69":"markdown","5c4bd20e":"markdown","be680f1c":"markdown","9094e67a":"markdown","9bbc2bbd":"markdown","d191dea6":"markdown","5062bf85":"markdown","dd11275b":"markdown","918fadba":"markdown","4a2c5817":"markdown","1c222d14":"markdown"},"source":{"104e90c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9c03ac9c":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport scipy\nimport os\nimport pickle\nimport librosa\nimport librosa.display\nfrom IPython.display import Audio\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport tensorflow as tf\nfrom tensorflow import keras","8457e52d":"df = pd.read_csv(\"\/kaggle\/input\/gtzan-dataset-music-genre-classification\/Data\/features_3_sec.csv\")\ndf.head()","95ebb77c":"df.shape","047ecd7e":"df.dtypes","48f39f08":"df=df.drop(labels=\"filename\",axis=1)","76da842e":"audio_recording=\"\/kaggle\/input\/gtzan-dataset-music-genre-classification\/Data\/genres_original\/country\/country.00050.wav\"\ndata,sr=librosa.load(audio_recording)\nprint(type(data),type(sr))","e5de8e0b":"librosa.load(audio_recording,sr=45600)","2ac52253":"import IPython\nIPython.display.Audio(data,rate=sr)","23448099":"plt.figure(figsize=(12,4))\nlibrosa.display.waveplot(data,color=\"#2B4F72\")\nplt.show()","defc0e31":"stft=librosa.stft(data)\nstft_db=librosa.amplitude_to_db(abs(stft))\nplt.figure(figsize=(14,6))\nlibrosa.display.specshow(stft,sr=sr,x_axis='time',y_axis='hz')\nplt.colorbar()","32277575":"stft=librosa.stft(data)\nstft_db=librosa.amplitude_to_db(abs(stft))\nplt.figure(figsize=(14,6))\nlibrosa.display.specshow(stft_db,sr=sr,x_axis='time',y_axis='hz')\nplt.colorbar()","2179a3c3":"spectral_rolloff=librosa.feature.spectral_rolloff(data+0.01,sr=sr)[0]\nplt.figure(figsize=(14,6))\nlibrosa.display.waveplot(data,sr=sr,alpha=0.4,color=\"#2B4F72\")","a1acdaa8":"import librosa.display as lplt\nchroma = librosa.feature.chroma_stft(data,sr=sr)\nplt.figure(figsize=(14,6))\nlplt.specshow(chroma,sr=sr,x_axis=\"time\",y_axis=\"chroma\",cmap=\"coolwarm\")\nplt.colorbar()\nplt.title(\"Chroma Features\")\nplt.show()","0c80dc24":"start=1000\nend=1200\nplt.figure(figsize=(12,4))\nplt.plot(data[start:end],color=\"#2B4F72\")\nplt.grid()","3c1f1d19":"zero_cross_rate=librosa.zero_crossings(data[start:end],pad=False)\nprint(\"the numbert of zero_crossings is :\", sum(zero_cross_rate))","e3105887":"class_list=df.iloc[:,-1]\nconverter=LabelEncoder()","d39d0ed9":"y=converter.fit_transform(class_list)\ny","06bb6151":"print(df.iloc[:,:-1])","ba3532b8":"from sklearn.preprocessing import StandardScaler\nfit=StandardScaler()\nX=fit.fit_transform(np.array(df.iloc[:,:-1],dtype=float))","926cca17":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33)","aef74a9b":"len(y_test)","bc4c4d92":"len(y_train)","fb4f06d9":"from tensorflow.keras.models import Sequential","cb39b107":"def trainModel(model,epochs,optimizer):\n    batch_size=128\n    model.compile(optimizer=optimizer,loss='sparse_categorical_crossentropy',metrics='accuracy')\n    return model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=epochs,batch_size=batch_size)","bb1cfb14":"def plotValidate(history):\n    print(\"Validation Accuracy\",max(history.history[\"val_accuracy\"]))\n    pd.DataFrame(history.history).plot(figsize=(12,6))\n    plt.show()","adb35408":"import tensorflow as tf","6e22139f":"model=tf.keras.models.Sequential([\n    tf.keras.layers.Dense(512,activation='relu',input_shape=(X_train.shape[1],)),\n    tf.keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Dense(256,activation='relu'),\n    keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Dense(128,activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Dense(64,activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Dense(10,activation='softmax'),\n])\n\nprint(model.summary())\nmodel_history=trainModel(model=model,epochs=600,optimizer='adam')","67767ac6":"test_loss,test_acc=model.evaluate(X_test,y_test,batch_size=128)\nprint(\"The test loss is \",test_loss)\nprint(\"The best accuracy is: \",test_acc*100)","0d942ecc":"## Importing Libraries","e1291650":"## Feature Extraction\nPreprocessing of data is required before we finally train the data. We will try and focus on the last column that is \u2018label\u2019 and will encode it with the function LabelEncoder() of sklearn.preprocessing.","5486941b":"### Plotting Raw wave files","6489f84e":"### Spectrogram\nA spectrogram is a visual way of representing the signal loudness of a signal over time at various frequencies present in a particular waveform. Not only can one see whether there is more or less energy at, for example, 2 Hz vs 10 Hz, but one can also see how energy levels vary over time.\nSpectrograms are sometimes called sonographs, voiceprints, or voicegrams. When the data is represented in a 3D plot, they may be called waterfalls. In 2-dimensional arrays, the first axis is frequency while the second axis is time","d6dda691":"The model accuracy can be increased by further increasing the epochs but after a certain period, we may achieve a threshold, so the value should be determined accordingly.\nThe accuracy we achieved for the test set is 92.14 percent which is very decent.\nSo we come to the conclusion that Neural Networks are very effective in machine learning models. Tensorflow is very useful in implementing Convolutional Neural Network (CNN) that helps in the classifying process.","66e2fbe1":"## Understanding the audio files","50506e69":"## Dividing Training and Testing Dataset","5c4bd20e":"## Scaling the features\nStandard scaler is used to standardize features by removing the mean and scaling to unit variance.\nThe standard score of sample x is calculated as:\nz = (x - u) \/ s","be680f1c":"### Zero Crossing Rate\nZero crossing is said to occur if successive samples have different algebraic signs. The rate at which zero-crossings occur is a simple measure of the frequency content of a signal. Zero-crossing rate is a measure of the number of times in a given time interval\/frame that the amplitude of the speech signals passes through a value of zero.","9094e67a":"Waveforms are visual representations of sound as time on the x-axis and amplitude on the y-axis. They are great for allowing us to quickly scan the audio data and visually compare and contrast which genres might be more similar than others.","9bbc2bbd":"### Chroma Feature\nIt is a powerful tool for analyzing music features whose pitches can be meaningfully categorized and whose tuning approximates to the equal-tempered scale. One main property of chroma features is that they capture harmonic and melodic characteristics of music while being robust to changes in timbre and instrumentation","d191dea6":"## Model Evaluation","5062bf85":"### Spectral Roll-Off\nSpectral Rolloff is the frequency below which a specified percentage of the total spectral energy, e.g. 85%, lies\nlibrosa.feature.spectral_rolloff computes the rolloff frequency for each frame in a signal.","dd11275b":"## Visualising audio files","918fadba":"## Building the model\n","4a2c5817":"With the help of IPython.display.Audio we can play audio in the notebook. It is a library used for playing the audio in the jupyterlab. ","1c222d14":"For the CNN model, we had used the Adam optimizer for training the model. The epoch that was chosen for the training model is 600.\nAll of the hidden layers are using the RELU activation function and the output layer uses the softmax function. The loss is calculated using the sparse_categorical_crossentropy function.\nDropout is used to prevent overfitting.\nWe chose the Adam optimizer because it gave us the best results after evaluating other optimizers.\nThe model accuracy can be increased by further increasing the epochs but after a certain period, we may achieve a threshold, so the value should be determined accordingly."}}