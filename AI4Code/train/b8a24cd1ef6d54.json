{"cell_type":{"c53d1963":"code","0c4ba0ff":"code","893a533a":"code","1fb36c1e":"code","4c8ed89d":"code","bddd251c":"code","ed5b60b9":"code","546b8890":"code","4fdf38a4":"code","c41f99ce":"code","aecbe06b":"code","ad6014ba":"code","627cdfac":"code","30a895e2":"code","8d48cf73":"code","342f3298":"code","e1bd6fa6":"code","0c0ea769":"code","0d4cf39d":"code","3afa1fd5":"code","ae8dd37e":"code","0ed80e25":"code","ffe7eac7":"code","c4957a5b":"code","3b534d96":"code","bbb491e4":"code","1bb914de":"code","1388c13a":"code","fda0f364":"code","46b16f7f":"code","9ab86c08":"code","2902143f":"code","8d01d762":"code","3582e493":"code","f8b37ae2":"code","3cffdbb2":"code","f4fdb0b0":"code","4526878c":"code","2a484fc4":"code","20ed008b":"code","7ed87a7c":"code","866220ff":"code","33afc7ed":"code","5dd1151e":"code","90efc572":"code","ba256c6b":"code","1c30f1d4":"code","7d833a04":"code","6da81af0":"code","95beaf4e":"code","cff5eab4":"code","5ec1964b":"code","abc453c7":"code","b12c1532":"code","9cae1698":"code","fbc2f5b1":"markdown","acb7196d":"markdown","93dbf2b7":"markdown","ffaa726f":"markdown","c5a069ae":"markdown","6ed0159b":"markdown","b62fa83d":"markdown","6f5a9ecc":"markdown","fc4b036a":"markdown","9e51c931":"markdown","1c5bb871":"markdown","394b3c4c":"markdown","0d102a87":"markdown","56f9f9c6":"markdown","d0b9c441":"markdown","0881f155":"markdown","f857b4b0":"markdown","ebeb09bb":"markdown","e10470cc":"markdown","578f9a97":"markdown","3c7247f3":"markdown","c5431dee":"markdown","36a91cf5":"markdown","d3ab5e64":"markdown","8a41d34f":"markdown","db4a0899":"markdown","9d0c50a0":"markdown","0555315b":"markdown","aa06e69e":"markdown","57370e81":"markdown","3d0135aa":"markdown","0342d56f":"markdown","2f505586":"markdown","25030ff1":"markdown"},"source":{"c53d1963":"import plotly.express as px\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)\n\nimport pandas as pd\nimport numpy as np","0c4ba0ff":"df_raw = pd.read_csv(\"..\/input\/heart-disease-dataset-uci\/HeartDiseaseTrain-Test.csv\")\ndf_raw.head()","893a533a":"# Fix minor typo from Cholestoral to Cholesterol\ndf_raw.rename(columns={\"cholestoral\": \"cholesterol\"}, inplace=True)","1fb36c1e":"# Set aside the pristine primary dataframe\ndf = df_raw","4c8ed89d":"columns = list(df.columns)\n# Look at what info we can expect from the dataset\ncolumns","bddd251c":"df.info()","ed5b60b9":"df.isnull().any()","546b8890":"# Describe numerics\ndf.describe(include=[np.int64, np.float64])","4fdf38a4":"# Filter out numerical cols, all but the target variable\nnumerical_cols = list(df.select_dtypes(include=[np.int64, np.float64]))[:-1]\nnumerical_corr = {}\nfor col in numerical_cols:\n    corr = df[\"target\"].corr(df[col])\n    print(f\"%s: %.3f\\n\" % (col, corr))\n    numerical_corr[col] = corr","c41f99ce":"sorted_corr = sorted(numerical_corr.items(), key=lambda ele:abs(ele[1]))\n\nfor i in sorted_corr:\n    print(f\"%s: %3f\" % (i[0], abs(i[1])))","aecbe06b":"import plotly.express as px","ad6014ba":"# Plotly Theming\ntemplate = \"plotly_white\"\n# color_scale = \"Bluered\"\n# color_discrete_sequence=[\"lightblue\", \"orangered\"] # For discrete map visualization\nnum_data = df\n# Convert target to string for discrete color representation\nnum_data[\"target\"] = num_data[\"target\"].astype(str)","627cdfac":"fig1 = px.box(data_frame=num_data, x=\"cholesterol\", y=\"target\", template=template, title=\"Cholesterol vs Heart Disease\")\nfig2 = px.density_contour(data_frame=num_data, x=\"cholesterol\", y=\"target\", template=template, title=\"Cholesterol vs Heart Disease\")\nfig1.show(); fig2.show()","30a895e2":"fig1 = px.box(data_frame=df, x=\"Max_heart_rate\", y=\"target\", template=template, title=\"Max_heart_rate vs heart disease\")\nfig2 = px.density_contour(data_frame=df, x=\"Max_heart_rate\", y=\"target\", template=template, title=\"Max_heart_rate vs heart disease\")\nfig1.show(); fig2.show()","8d48cf73":"fig1 = px.box(data_frame=df, x=\"age\", y=\"target\", template=template, title=\"Age vs heart disease\")\nfig2 = px.density_contour(data_frame=df, x=\"age\", y=\"target\", template=template, title=\"Age vs heart disease\")\nfig1.show(); fig2.show()","342f3298":"fig1 = px.box(data_frame=df, x=\"resting_blood_pressure\", y=\"target\", template=template, title=\"Resting blood pressure vs heart disease\")\nfig2 = px.density_contour(data_frame=df, x=\"resting_blood_pressure\", y=\"target\", template=template, title=\"Resting blood pressure vs heart disease\")\nfig1.show(); fig2.show()","e1bd6fa6":"fig1 = px.box(data_frame=df, x=\"oldpeak\", y=\"target\", template=template, title=\"Oldpeak vs heart disease\")\nfig2 = px.density_contour(data_frame=df, x=\"oldpeak\", y=\"target\", template=template, title=\"Oldpeak vs heart disease\")\nfig1.show(); fig2.show()","0c0ea769":"df.select_dtypes(include=np.object)","0d4cf39d":"# Layout dictionaries to categorize columns\nsex_map = {\n    \"Male\": 1,\n    \"Female\": 0\n}\nchest_pain_map = {\n    \"Typical angina\": 1,\n    \"Atypical angina\": 2,\n    \"Non-anginal pain\": 3,\n    \"Asymptomatic\": 4\n}\nblood_sugar_map = {\n    \"Lower than 120 mg\/ml\": 0,\n    \"Greater than 120 mg\/ml\": 1\n}\nrest_ecg_map = {\n    \"Normal\": 0,\n    \"ST-T wave abnormality\": 1,\n    \"Left ventricular hypertrophy\": 2,\n}\nexercise_angina_map = {\n    \"Yes\": 1,\n    \"No\": 0\n}\nslope_map = {\n    \"Upsloping\": 1,\n    \"Flat\": 2,\n    \"Downsloping\": 3\n}\nfluoroscopy_map = {\n    \"Zero\": 0,\n    \"One\": 1,\n    \"Two\": 2,\n    \"Three\": 3,\n    \"Four\": 4\n}\nthalassemia_map = {\n    \"No\": 0,\n    \"Normal\": 3,\n    \"Fixed Defect\": 6,\n    \"Reversable Defect\": 7\n}","3afa1fd5":"# Create cat dataframe temporarily\ndf_cat = df","ae8dd37e":"df_cat[\"sex\"].replace(sex_map, inplace=True)\ndf_cat[\"chest_pain_type\"].replace(chest_pain_map, inplace=True)\ndf_cat[\"fasting_blood_sugar\"].replace(blood_sugar_map, inplace=True)\ndf_cat[\"rest_ecg\"].replace(rest_ecg_map, inplace=True)\ndf_cat[\"exercise_induced_angina\"].replace(exercise_angina_map, inplace=True)\ndf_cat[\"slope\"].replace(slope_map, inplace=True)\ndf_cat[\"vessels_colored_by_flourosopy\"].replace(fluoroscopy_map, inplace=True)\ndf_cat[\"thalassemia\"].replace(thalassemia_map, inplace=True)\n\ndf_cat[\"target\"] = df_cat[\"target\"].astype(np.int64)","0ed80e25":"# Reset df_raw\ndf_raw = pd.read_csv(\"..\/input\/heart-disease-dataset-uci\/HeartDiseaseTrain-Test.csv\")\n# Fix minor typo from Cholestoral to Cholesterol\ndf_raw.rename(columns={\"cholestoral\": \"cholesterol\"}, inplace=True)","ffe7eac7":"cat_cols = list(df_raw.select_dtypes(include=np.object))\ncat_corr = {}\nfor col in cat_cols:\n    corr = df_cat[\"target\"].corr(df_cat[col])\n    cat_corr[col] = corr","c4957a5b":"# Sort by absolute impact\ncat_corr_sorted = sorted(cat_corr.items(), key=lambda ele:abs(ele[1]))\ncat_corr_sorted","3b534d96":"# Convert strings into categories for histogram viz. Not completely necessary but clean.\ndf_cat_str = df_raw\nfor col in cat_cols:\n    df_cat_str[col] = df_raw[col].astype(str)\ndf_cat_str[\"target\"] = df_raw[\"target\"]","bbb491e4":"px.histogram(data_frame=df_cat_str, x=\"fasting_blood_sugar\", color=\"target\" , template=template, title=\"Fasting blood sugar - Heart Disease 0: <120 mg\/dl, 1: >120 mg\/dl\")","1bb914de":"px.histogram(data_frame=df_cat_str, x=\"sex\", color=\"target\" , template=template, title=\"Sex & Heart Disease\")","1388c13a":"px.histogram(data_frame=df_cat_str, x=\"thalassemia\", color=\"target\" , template=template, title=\"Thalassemia vs Heart Disease\")","fda0f364":"px.histogram(data_frame=df_cat_str, x=\"slope\", color=\"target\" , template=template, title=\"Slope of peak exercise ST vs Heart Disease\")","46b16f7f":"px.histogram(data_frame=df_cat_str, x=\"vessels_colored_by_flourosopy\", color=\"target\" , template=template, title=\"Vessels colored by flourosopy vs Heart Disease\")","9ab86c08":"px.histogram(data_frame=df_cat_str, x=\"chest_pain_type\", color=\"target\" , template=template, title=\"Chest Pain Type vs Heart Disease\")","2902143f":"px.histogram(data_frame=df_cat_str, x=\"exercise_induced_angina\", color=\"target\" , template=template, title=\"Exercise induced angina vs Heart Disease\")","8d01d762":"# Convert strings \/ categorical data back into int64 for modelling purposes\nfor col in cat_cols:\n    df_cat[col] = df_cat[col].astype(int)","3582e493":"# Clone dataframe for ML ops\ndf = df_cat","f8b37ae2":"# Initialize dictionary to record scores\nResults = {}","3cffdbb2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split","f4fdb0b0":"# Set seed for consistent testing\nnp.random.seed(1)","4526878c":"# Shuffle Dataframe\ndf = shuffle(df)","2a484fc4":"# Segregate inputs from the target variable. Naively select every single varibale other than the target\ninput_cols = df.columns[:-1]\ntarget_col = df.columns[-1]\nlist(input_cols)","20ed008b":"inputs = df[input_cols]\ntargets = df[target_col]\ninputs.shape, targets.shape","7ed87a7c":"# Split the input target pair into train and test datasets\n# Percent Ratio train-test 70-30\nX_train, X_test, y_train, y_test = train_test_split(inputs, targets, test_size=0.40, random_state=3)","866220ff":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","33afc7ed":"model_logistic = LogisticRegression(solver=\"liblinear\")\nmodel_logistic.fit(X_train, y_train)\nscore_non_naive = model_logistic.score(X_test, y_test)\nscore_non_naive","5dd1151e":"Results[\"NaiveLogisticModel\"] = score","90efc572":"low_corr = [\"cholesterol\", \"resting_blood_pressure\", \"fasting_blood_sugar\"]\n# Drop low correlation columns\nhigh_corr_df = df.drop(low_corr, axis=1)\nhigh_corr_df.head()","ba256c6b":"inputs_non_naive = high_corr_df.iloc[:, :-1]\ntargets = high_corr_df[target_col]\ninputs_non_naive.shape, targets.shape","1c30f1d4":"model_logistic = X_train_non_naive, X_test_non_naive, y_train_non_naive, y_test_non_naive = train_test_split(inputs_non_naive, targets, test_size=0.40, random_state=3)","7d833a04":"model_logistic = LogisticRegression(solver=\"liblinear\")\nmodel_logistic.fit(X_train_non_naive, y_train_non_naive)\nscore_non_naive = model_logistic.score(X_test_non_naive, y_test_non_naive)\nscore_non_naive","6da81af0":"Results[\"ModelLogisitc\"] = score_non_naive","95beaf4e":"from sklearn import tree","cff5eab4":"tree_naive = tree.DecisionTreeClassifier()","5ec1964b":"tree_naive.fit(X_train, y_train)\nscore_tree_naive = tree_naive.score(X_test, y_test)\nscore_tree_naive","abc453c7":"# Let's visualize the tree\n!pip install dtreeviz --quiet\nfrom dtreeviz.trees import dtreeviz\ndtreeviz(tree_naive, x_data=X_train, y_data=y_train, target_name=\"Heart Disease\", feature_names=list(X_train.columns), class_names=[\"No\", \"Yes\"], title=\"Naive Tree\")","b12c1532":"Results[\"DTree_naive\"] = score_tree_naive","9cae1698":"for i in Results:\n    print(f\"%s: %.3f\" %(i, Results[i]))","fbc2f5b1":"#### 85% Accuracy on the naive logistic solver from Scikit-learn. Before we test further, can we improve it? Let's spice it up.","acb7196d":" # Approach 3: Scikit Decision Tree (Naive)","93dbf2b7":"Let's sort them based on magnitude alone","ffaa726f":"## Approach 1: Basic Logistic Regression using Scikit Learn (Naive Approach)","c5a069ae":"### Numerical Data Viz","6ed0159b":"## EDA","b62fa83d":"#### Correlations  \n* Correlations tending towards 1 or -1 indicates a strong relation in the given dataset\n* Correlations tending towards 0 indicates a weak correlation in the given dataset","6f5a9ecc":"#### Notice that, by magnitude, the variable oldpeak has the highest impact on heart disease whereas cholesterol has the lowest. The latter might be quiet confounding but such is the numerical correlation on this particular dataset\/distribution. Good cholesterol? Bad cholesterol? perhaps a combination of both in a skewed ratio? Speculations remain open.","fc4b036a":"### Categorical Data Viz","9e51c931":"# Heart Disease Dataset UCI","1c5bb871":"### Correlations","394b3c4c":"#### Lovely! We won't have to worry about missing values","0d102a87":"#### Some quick data cleaning! Although not completely necessary, the mapping follows the details laid out by the uploader on Kaggle to standardize the process.  \nNote: There are a few quirks on the mapping detailed. 3, 6, 7 for the Thalassemia column for example.","56f9f9c6":"### EDA on numerical data","d0b9c441":"### A whopping 99.2% test accuracy. At this point, we could pretty much eliminate the need for gradient boosting or a deep neural network (Overfitting on a small and easily learnable dataset is commonplace).","0881f155":"## The Fine Details Provided  \n\nSex  \nMale: 1  \nFemale: 0  \n\nChest pain type  \n-- Value 1: typical angina  \n-- Value 2: atypical angina  \n-- Value 3: non-anginal pain  \n-- Value 4: asymptomatic  \n  \n> Angina is chest pain or discomfort caused when your heart muscle doesn't get enough oxygen-rich blood.\nIt may feel like pressure or squeezing in your chest.  \n\n> oldpeak = ST depression induced by exercise relative to rest  \n\n> serum cholestoral in mg\/dl\n\n> resting blood pressure (in mm Hg on admission to the hospital)  \n\n> vessels colored by flourosopy : number of major vessels (0-3) colored by flourosopy.  \n\n> A blood disorder called thalassemia (3 = normal; 6 = fixed defect; 7 = reversable defect)\n\n\nTarget  \nNo Heart Disease: 0  \nHeart Disease: 1\n\n","f857b4b0":"### Thus far, resorting to just the logistic regression model provided by Scikit learn, we were able to obtain an accuracy of 85%. A constant performance is observed even after to feature selection by correlation. Which is alright. But, can we take it further?","ebeb09bb":"## Approach 2: Non-naive Logistic Regression (Correlation Filter)","e10470cc":"# Conclusions","578f9a97":"#### Just like that, analyzing numerical data, we notice\n* The recorded max age = 77 and min age = 29.  \n* The recorded lowest cholesterol = 126 and highest cholesterol = 564. (Accepted healthy cholesterol levels < 200 mg\/DL)\n* The recorded min Max_heart_rate = 71 and max Max_heart_rate = 202\n* The recorded min oldpeak = 0 and max oldpeak = 6.2","3c7247f3":"#### Inference:  \nIt can be clearly seen fasting blood sugar has the least impact on heart disease in this distribution whereas exercise induced angina has the most impact.","c5431dee":"## Prediction by Machine Learning","36a91cf5":"#### Inference\nPerhaps anything but Typical Angina could be indicative of a higher probability of being at risk of heart disease in the given distribution.","d3ab5e64":"With data and inferences at hand, we can now try and predict risk of heart disease from the given variables","8a41d34f":"#### Inference\nThere's a good chance (50% or greater) of non-exercise induced pain being indicative of heart disease","db4a0899":"### I believe this is a good starter dataset for anyone looking to learn or refresh their EDA and data prediction basics. I would also like to thank the author for having provided this dataset. Whether the distribution is skewed or at fault is left to medical expertise. This notebook is focused purely on the data. Furthermore, I encourage comments that can help me improve on the existing model \/ EDA approach. Cheers!","9d0c50a0":"### Categorical Data Analysis","0555315b":"### Thus, we have peaked at 99.2% (98%+ even on varying various random split states) test accuracy using a basic dtree classifier from scikit learn. For the sake of completeness, I've tried out a dtree on the non-naive correlation filtered dataset only to drop overall accuracy on the test set by 2%. We can thus infer that feature correlations are close to obsolete given the size of the dataset and this particular distribution of patients.","aa06e69e":"#### Inference  \nReserved from inferring\/commenting due to lack of procedural data and the author's limited\/zero medical expertise.","57370e81":"### No improvement unfortunately. Quite odd. By filtering out features with low correlation, We haven't progressed in terms of performance on this distribution. Can we take it further?","3d0135aa":"## Include Libs For EDA","0342d56f":"#### Inference\nInconclusive?","2f505586":"### Import Libraries","25030ff1":"#### Inference\nA greater portion of Females in the distribution have heart disease or are at risk"}}