{"cell_type":{"b19073dd":"code","8ed74374":"code","a7e5e82e":"code","52c54b03":"code","03cc8130":"code","37948cb0":"code","3b349d91":"code","06294c29":"code","c76e51f8":"code","3159170e":"code","079b1344":"code","3e8a67bf":"code","c4f444d3":"code","bb7c4447":"code","f1b0469a":"code","19e1c330":"code","f4cf2dd2":"code","dfee8bf3":"code","cb5a8efb":"code","17f31845":"code","d8355a17":"code","eb623e4d":"code","76b3a2aa":"code","a428d647":"code","22e8fcc1":"code","54061f8e":"code","3d9a04ba":"code","a4f435e1":"code","151d66ae":"code","c80068b8":"code","ee2bbbad":"code","9325f04c":"code","ff911cb3":"markdown","6a1eb289":"markdown","9a4037aa":"markdown","c9e2b372":"markdown","d7007ee3":"markdown","6a9ebdb0":"markdown","0a1f6623":"markdown"},"source":{"b19073dd":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/titanic\/train.csv\")\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\ny_train = X_train[['PassengerId', 'Survived']]\nX_train = X_train.drop(columns=['PassengerId', 'Survived'])\ny_test = X_test[['PassengerId', 'Survived']]\nX_test = X_test.drop(columns=['PassengerId', 'Survived'])\n\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","8ed74374":"X_train.head()","a7e5e82e":"X_train.info()","52c54b03":"X_test.info()","03cc8130":"X_train['Embarked'].value_counts()\n# Pclass, SibSp, Parch, Ticket \ub4f1 \ud655\uc778","37948cb0":"# column\ub4e4 \ubd84\ub958, \ubd88\ud544\uc694\ud55c columns drop \nnum_columns = ['Fare']\ncat_columns = ['Pclass', 'Sex', 'SibSp', 'Parch']\ndrop_columns = ['Name', 'Ticket', 'Cabin', 'Embarked', 'Age'] \n# X_test \ub370\uc774\ud130\uc758 \uacb0\uce21\uce58 \uc788\ub294 'Embarked', 'Age' \uc81c\uc678\ud574\ubd04","3b349d91":"#Age\uac00 \ube44\uc5b4\uc788\ub294 \uacbd\uc6b0 \ud3c9\uade0\uac12 \ub300\uc785..?\n#\ud14c\uc2a4\ud2b8 \uac12\uc758 \uacb0\uce21\uce58 \ucc98\ub9ac\ub97c \uc704\ud574 drop?\n#X_train.loc[:, 'age'] = X_train['Age'].fillna(X_train['Age'].mean())\n\n#\ub370\uc774\ud130 \ucc44\uc6cc\uc838\uc788\ub294\uc9c0 \ud655\uc778\n#X_train['age'].isna().sum()","06294c29":"X_train[cat_columns] = X_train[cat_columns].astype('category')\nX_test[cat_columns] = X_test[cat_columns].astype('category')","c76e51f8":"X_train_dummies = pd.get_dummies(X_train[cat_columns])\nx_train_concat = pd.concat([X_train[num_columns], X_train_dummies], axis=1)\nX_test_dummies = pd.get_dummies(X_test[cat_columns])\nx_test_concat = pd.concat([X_test[num_columns], X_test_dummies], axis=1)","3159170e":"from sklearn.ensemble import RandomForestClassifier\n\nrforest_cla = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=2021)\nrforest_cla.fit(x_train_concat, y_train['Survived'])","079b1344":"rforest_cla.score(x_train_concat, y_train['Survived'])","3e8a67bf":"x_train_concat.columns","c4f444d3":"x_test_concat.columns","bb7c4447":"# columns\uc758 \uac1c\uc218\uac00 \ub2ec\ub77c\uc11c predict\uac00 \uc5d0\ub7ec\ub0a8.\n# \ud574\ub2f9 \uc784\uc758\uac12 \ub300\uc785\uc73c\ub85c \ucc98\ub9ac\nx_test_concat['Parch_6'] = 0","f1b0469a":"x_train_predict = rforest_cla.predict(x_test_concat)","19e1c330":"result = pd.DataFrame({'PassengerId': y_test.PassengerId, 'Survived': x_train_predict})","f4cf2dd2":"result.to_csv('result.csv', index=False)","dfee8bf3":"df_result = pd.read_csv('result.csv')\ndf_result.head()","cb5a8efb":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\nimport pandas as pd","17f31845":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","d8355a17":"X_train.head()","eb623e4d":"# float64(2), int64(3), object(5)\nX_train.info()","76b3a2aa":"y_train.head()","a428d647":"# \uc0dd\uc874 \ube44\uc728\ny_train['Survived'].value_counts()","22e8fcc1":"y = y_train[\"Survived\"]\n\n# sex\ub9cc \uc6d0\ud56b\uc778\ucf54\ub529 \ub428\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX_train = pd.get_dummies(X_train[features])\nX_test = pd.get_dummies(X_test[features])","54061f8e":"X_train.shape, X_test.shape","3d9a04ba":"X_train.head()","a4f435e1":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=200, max_depth=7, random_state=2021)\nmodel.fit(X_train, y)\npredictions = model.predict(X_test)","151d66ae":"model.score(X_train, y)","c80068b8":"output = pd.DataFrame({'PassengerId': y_test.PassengerId, 'Survived': predictions})\noutput.head()","ee2bbbad":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\noutput.to_csv('1234567.csv', index=False)","9325f04c":"model.score(X_test, y_test['Survived'])","ff911cb3":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","6a1eb289":"## \uacb0\uacfc \uccb4\uc810 (\uc218\ud5d8\uc790\ub294 \uc54c \uc218 \uc5c6\ub294 \ubd80\ubd84\uc784)","9a4037aa":"## EDA","c9e2b372":"## \ubaa8\ub378 \ubc0f \ud3c9\uac00","d7007ee3":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","6a9ebdb0":"## Start","0a1f6623":"## \uc0dd\uc874\uc5ec\ubd80 \uc608\uce21\ubaa8\ub378 \ub9cc\ub4e4\uae30\n### \ud559\uc2b5\uc6a9 \ub370\uc774\ud130 (X_train, y_train)\uc744 \uc774\uc6a9\ud558\uc5ec \uc0dd\uc874 \uc608\uce21 \ubaa8\ud615\uc744 \ub9cc\ub4e0 \ud6c4, \uc774\ub97c \ud3c9\uac00\uc6a9 \ub370\uc774\ud130(X_test)\uc5d0 \uc801\uc6a9\ud558\uc5ec \uc5bb\uc740 \uc608\uce21\uac12\uc744 \ub2e4\uc74c\uacfc \uac19\uc740 \ud615\uc2dd\uc758 CSV\ud30c\uc77c\ub85c \uc0dd\uc131\ud558\uc2dc\uc624(\uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 accuracy \ud3c9\uac00\uc9c0\ud45c\uc5d0 \ub530\ub77c \ucc44\uc810)\n\n(\uac00) \uc81c\uacf5 \ub370\uc774\ud130 \ubaa9\ub85d\n- y_train: \uc0dd\uc874\uc5ec\ubd80(\ud559\uc2b5\uc6a9)\n- X_trian, X_test : \uc2b9\uac1d \uc815\ubcf4 (\ud559\uc2b5\uc6a9 \ubc0f \ud3c9\uac00\uc6a9)\n\n(\ub098) \ub370\uc774\ud130 \ud615\uc2dd \ubc0f \ub0b4\uc6a9\n- y_trian (712\uba85 \ub370\uc774\ud130)\n\n**\uc2dc\ud5d8\ud658\uacbd \uc138\ud305\uc740 \uc608\uc2dc\ubb38\uc81c\uc640 \ub3d9\uc77c\ud55c \ud615\ud0dc\uc758 X_train, y_train, X_test \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uae30 \uc704\ud568\uc784**\n\n### \uc720\uc758\uc0ac\ud56d\n- \uc131\ub2a5\uc774 \uc6b0\uc218\ud55c \uc608\uce21\ubaa8\ud615\uc744 \uad6c\ucd95\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc801\uc808\ud55c \ub370\uc774\ud130 \uc804\ucc98\ub9ac, \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1, \ubd84\ub958\uc54c\uace0\ub9ac\uc998, \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd, \ubaa8\ud615 \uc559\uc0c1\ube14 \ub4f1\uc774 \uc218\ubc18\ub418\uc5b4\uc57c \ud55c\ub2e4.\n- \uc218\ud5d8\ubc88\ud638.csv\ud30c\uc77c\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\ub3c4\ub85d \ucf54\ub4dc\ub97c \uc81c\ucd9c\ud55c\ub2e4.\n- \uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 accuracy\ub85c \ud3c9\uac00\ud568\n\ncsv \ucd9c\ub825\ud615\ud0dc\n\n![image.png](attachment:de1920de-121e-47c3-a61f-e905386713bf.png)"}}