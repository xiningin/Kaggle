{"cell_type":{"d6ae2bd6":"code","d18bb69e":"code","e4805162":"code","0492a22b":"code","c5febdfc":"code","7e9ca740":"code","fa6edc0f":"code","8ba0d3cb":"code","c5a7c188":"code","06448831":"code","4e0651f9":"code","07a3ed4e":"code","e570a3de":"code","03a88dd1":"code","830e1eea":"code","324be114":"code","89e36059":"code","5e9fdf48":"code","2a1c35b1":"code","e1e07a96":"code","bf0631d7":"markdown"},"source":{"d6ae2bd6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d18bb69e":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold\nimport matplotlib.pyplot as plt\nimport lightgbm as lgb\nimport seaborn as sns\nimport warnings\nimport time","e4805162":"fold_n=5\nfolds = StratifiedKFold(n_splits=fold_n, shuffle=True, random_state=10)\n%matplotlib inline\n%precision 4\nwarnings.filterwarnings('ignore')\nplt.style.use('ggplot')\nnp.set_printoptions(suppress=True)\npd.set_option(\"display.precision\", 15)","0492a22b":"train= pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv('..\/input\/test.csv')","c5febdfc":"sample_submission = pd.read_csv('..\/input\/sample_submission.csv')\nsample_submission.head()","7e9ca740":"train.shape, test.shape, sample_submission.shape","fa6edc0f":"train.columns","8ba0d3cb":"train.describe()","c5a7c188":"train.isnull().values.any()","06448831":"test.isnull().values.any()","4e0651f9":"train['target'].value_counts().plot.barh()","07a3ed4e":"f,ax=plt.subplots(1,2,figsize=(18,8))\ntrain['target'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('target')\nax[0].set_ylabel('')\nsns.countplot('target',data=train,ax=ax[1])\nax[1].set_title('target')\nplt.show()","e570a3de":"cols=[\"target\",\"ID_code\"]\nX = train.drop(cols,axis=1)\ny = train[\"target\"]","03a88dd1":"X.head()","830e1eea":"y.head()","324be114":"X_test  = test.drop(\"ID_code\",axis=1)","89e36059":"X_test.head()","5e9fdf48":"params = {'objective' : \"binary\", \n               'boost':\"gbdt\",\n               'metric':\"auc\",\n               'boost_from_average':\"false\",\n               'num_threads':8,\n               'learning_rate' : 0.01,\n               'num_leaves' : 13,\n               'max_depth':-1,\n               'tree_learner' : \"serial\",\n               'feature_fraction' : 0.05,\n               'bagging_freq' : 5,\n               'bagging_fraction' : 0.4,\n               'min_data_in_leaf' : 80,\n               'min_sum_hessian_in_leaf' : 10.0,\n               'verbosity' : 1}","2a1c35b1":"%%time\ny_pred_lgb = np.zeros(len(X_test))\nnum_round = 1000000\nfor fold_n, (train_index, valid_index) in enumerate(folds.split(X,y)):\n    print('Fold', fold_n, 'started at', time.ctime())\n    X_train, X_valid = X.iloc[train_index], X.iloc[valid_index]\n    y_train, y_valid = y.iloc[train_index], y.iloc[valid_index]\n    \n    train_data = lgb.Dataset(X_train, label=y_train)\n    valid_data = lgb.Dataset(X_valid, label=y_valid)\n        \n    lgb_model = lgb.train(params,train_data,num_round,#change 20 to 2000\n                    valid_sets = [train_data, valid_data],verbose_eval=1000,early_stopping_rounds = 3500)##change 10 to 200\n            \n    y_pred_lgb += lgb_model.predict(X_test, num_iteration=lgb_model.best_iteration)\/5","e1e07a96":"submission_lgb = pd.DataFrame({\n        \"ID_code\": test[\"ID_code\"],\n        \"target\": y_pred_lgb\n    })\nsubmission_lgb.to_csv('submission_lgb.csv', index=False)","bf0631d7":"<img src=\"https:\/\/www.pymnts.com\/wp-content\/uploads\/2018\/07\/santander.jpg\"><\/img>"}}