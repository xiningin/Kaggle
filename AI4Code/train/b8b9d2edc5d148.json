{"cell_type":{"75b9cfe1":"code","1092978d":"code","b6da9814":"code","decb28d1":"code","847951a0":"code","9ee9a94b":"code","78302c49":"code","ef8bb1cd":"code","31078c38":"code","10f2ce8f":"code","fa212cb1":"code","ce49ae6e":"code","85bb3650":"code","3cd2b1a5":"code","b60c7b91":"code","948cd2b9":"code","06c67324":"code","d2458b24":"code","3a6d47e0":"code","c96d6094":"code","c067901a":"code","2cd9f29a":"code","238104eb":"code","b3c86921":"code","1416b2ff":"code","af6bb151":"code","749adb1e":"code","e6f861e8":"code","cf74e023":"code","4defe71a":"code","df3fea9c":"code","cfb5909a":"markdown","3aab3afa":"markdown","e0164d30":"markdown","c3266d9f":"markdown","f22a6a95":"markdown","dfe2e5f7":"markdown","728ae3a8":"markdown","bcef5ec0":"markdown","87176eef":"markdown","9d985dd6":"markdown","352cd8eb":"markdown","9a5a5a02":"markdown","dd3e0a06":"markdown","4274619b":"markdown","6c065aff":"markdown","b11f56bd":"markdown","0b3ba495":"markdown","12640952":"markdown"},"source":{"75b9cfe1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import minmax_scale\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\n\nfrom sklearn.linear_model import Perceptron,LogisticRegression\nfrom sklearn.neural_network import MLPClassifier\n\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\nfrom sklearn.metrics import classification_report\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1092978d":"df = pd.read_csv('\/kaggle\/input\/heart.csv')","b6da9814":"df.dtypes","decb28d1":"num_cols = df.select_dtypes(include = ['float','int'])","847951a0":"df.shape","9ee9a94b":"df.describe()","78302c49":"df.isna().sum()","ef8bb1cd":"sns.countplot(df['NUM'])","31078c38":"sns.pairplot(df)","10f2ce8f":"sns.distplot(df['AGE'])","fa212cb1":"df.columns","ce49ae6e":"sns.scatterplot(df['AGE'],df['RBPS'])","85bb3650":"sns.scatterplot(df['AGE'],df['CHOL'])","3cd2b1a5":"sns.scatterplot(df['AGE'],df['HR'])","b60c7b91":"sns.scatterplot(df['AGE'],df['OLDPACK'])","948cd2b9":"plt.figure(figsize=(15,7))\ndf[['AGE','RBPS','CHOL','HR']].boxplot()","06c67324":"def logistic_regression(X,y):\n    #X = data.drop('NUM',axis = 1)\n    #y = data['NUM']\n    X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.25, random_state=42)\n    #print(X_train)\n    model = LogisticRegression(random_state=85,max_iter = 200, solver = 'liblinear').fit(X_train, y_train)\n    print(model.score(X_train, y_train))\n    y_pred = model.predict(X_test)\n    print(accuracy_score(y_test, y_pred))\n    print(confusion_matrix(y_test, y_pred))","d2458b24":"normalized_df_train = preprocessing.normalize(df.drop('NUM',axis = 1))\nnormalized_df_test = df['NUM']","3a6d47e0":"fig, ax=plt.subplots(1,2)\nsns.distplot(df, ax=ax[0], color='y')\nax[0].set_title(\"Original Data\")\nsns.distplot(normalized_df, ax=ax[1])\nax[1].set_title(\"Scaled data\")\nplt.show()","c96d6094":"logistic_regression(normalized_df_train,normalized_df_test)","c067901a":"standardized_df_train = preprocessing.scale(df.drop('NUM',axis = 1))\nstandardized_df_test = df['NUM']","2cd9f29a":"fig, ax=plt.subplots(1,2)\nsns.distplot(df, ax=ax[0], color='y')\nax[0].set_title(\"Original Data\")\nsns.distplot(standardized_df, ax=ax[1])\nax[1].set_title(\"Scaled data\")\nplt.show()","238104eb":"logistic_regression(standardized_df_train,standardized_df_test)","b3c86921":"scaled_data_train = minmax_scale(df.drop('NUM',axis = 1))\nscaled_data_test = df['NUM']","1416b2ff":"fig, ax=plt.subplots(1,2)\nsns.distplot(df, ax=ax[0], color='y')\nax[0].set_title(\"Original Data\")\nsns.distplot(scaled_data, ax=ax[1])\nax[1].set_title(\"Scaled data\")\nplt.show()","af6bb151":"logistic_regression(scaled_data_train,scaled_data_test)","749adb1e":"X_train, X_test, y_train, y_test = train_test_split(scaled_data_train,scaled_data_test, test_size=0.25, random_state=42)","e6f861e8":"X_train","cf74e023":"params={'solver': ['saga', 'newton-cg', 'lbfgs','liblinear','sag','saga']}\n\nlogmodel = LogisticRegression()\nClassifier=GridSearchCV(model,params,scoring='accuracy',cv=10)\nClassifier.fit(X_train,y_train)\n\nprint('best parameter: ', Classifier.best_params_)\nprint('best score: ', Classifier.best_score_)","4defe71a":"slp = Perceptron()\naccuracies=cross_val_score(slp,X_train,y_train,scoring='accuracy',cv=10)\nmean_accuracy=np.mean(accuracies)\nprint(mean_accuracy)","df3fea9c":"params={'batch_size': [32,64,128], 'hidden_layer_sizes': [50,100,150]}\n\nmlp=MLPClassifier()\nClassifier=GridSearchCV(mlp,params,scoring='accuracy',cv=10)\nClassifier.fit(X_train,y_train)\n\nprint('best parameter: ', Classifier.best_params_)\nprint('best score: ', Classifier.best_score_)\ny_pred = Classifier.predict(X_test)\naccuracy_score(y_test, y_pred)","cfb5909a":"![image.png](attachment:image.png)","3aab3afa":"Inference - Min max scaling produced more accuracy","e0164d30":"Comparing Logistic has more CV score due to less sample size","c3266d9f":"# GridSearch","f22a6a95":"All are in numerical data type","dfe2e5f7":"It is a balanced data set and follows Discrete Distribution","728ae3a8":"Logistic regression model","bcef5ec0":"Your preprocessed data may contain attributes with a mixtures of scales for various quantities such as dollars, kilograms and sales volume.\n\nMany machine learning methods expect or are more effective if the data attributes have the same scale. Two popular data scaling methods are normalization and standardization.","87176eef":"# Conclusion - Logistic regression works better in this case","9d985dd6":"# MLP Perceptron","352cd8eb":"There is an correlation between Age and Blood pressure","9a5a5a02":"# Normalise the data","dd3e0a06":"Normally distributed","4274619b":"# Min Max scaling","6c065aff":"# Perceptron","b11f56bd":"No null values","0b3ba495":"Pre processing and Modelling","12640952":"# Scaling"}}