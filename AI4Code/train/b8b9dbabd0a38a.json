{"cell_type":{"0c6ca70a":"code","3881118f":"code","034c15f4":"code","16d04bd7":"code","e4fba6f0":"code","951c03d1":"code","49ce7f43":"code","856a49b9":"code","6745b673":"code","9a9eea14":"code","e543abb9":"code","61ec32b3":"code","c519bf91":"code","bbb73046":"code","4c3900ab":"code","d9caf1b1":"code","91119dc6":"code","cbf97dab":"code","ee48043b":"code","895eb4f7":"code","8d00f9ed":"markdown"},"source":{"0c6ca70a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\n\nimport lightgbm\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import auc,roc_curve\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold","3881118f":"train = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv')","034c15f4":"train.head()","16d04bd7":"test.head()","e4fba6f0":"print(\"Shape of the training Data: \",train.shape)\nprint(\"Shape of test Data: \",test.shape)","951c03d1":"test.isnull().sum()","49ce7f43":"train.isnull().sum()","856a49b9":"cols = test.columns","6745b673":"X_train = train[cols]\nX_test = test.copy()\ny = train['claim']","9a9eea14":"X_train = X_train.drop('id',axis=1)\nX_test = X_test.drop('id',axis=1)","e543abb9":"imputer = SimpleImputer(missing_values=np.nan, strategy='mean')\n\nX_train = imputer.fit_transform(X_train)\nX_test = imputer.transform(X_test)","61ec32b3":"ss = StandardScaler()\n\nX_train_scaled = ss.fit_transform(X_train)\nX_test_scaled = ss.transform(X_test)","c519bf91":"params_xgb = {'tree_method':'gpu_hist',\n        'predictor':'gpu_predictor'}","bbb73046":"test_preds = np.zeros((X_test_scaled.shape[0],))","4c3900ab":"test_preds.shape","d9caf1b1":"n_splits = 5\nkf = KFold(n_splits=n_splits,shuffle=True)\n\nfor jj,(train_index,val_index) in enumerate(kf.split(X_train)):\n    train_features = X_train_scaled[train_index]\n    train_target = y[train_index]\n    \n    val_features = X_train_scaled[val_index]\n    val_target = y[val_index]\n    \n    model = XGBClassifier(**params_xgb)\n    model.fit(train_features,train_target)\n    \n    test_preds += model.predict_proba(X_test_scaled)[:,1] \/ n_splits","91119dc6":"test_preds","cbf97dab":"sub","ee48043b":"sub['claim'] = test_preds","895eb4f7":"sub.to_csv('submission_kfold.csv',index=False)","8d00f9ed":"# XGB Classifier with KFold"}}