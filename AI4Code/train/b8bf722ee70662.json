{"cell_type":{"ee8b94ea":"code","314e71b7":"code","852a9059":"code","dd8eb473":"code","0a725ff8":"code","59879f47":"code","0af343cb":"code","d33d8a4b":"code","563456b6":"code","a877e80d":"code","46e7131a":"code","bb51e93f":"markdown","2915003f":"markdown","04c81a8c":"markdown","2b283c51":"markdown","e5fa4046":"markdown","7c4aed32":"markdown","919cc903":"markdown","d338a6bc":"markdown","25524fbc":"markdown","19f33a61":"markdown","8f811bb9":"markdown","691a90e5":"markdown","2823d77c":"markdown","4af4e640":"markdown","289eb17e":"markdown","49fbb99e":"markdown"},"source":{"ee8b94ea":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\ndf = pd.read_csv('..\/input\/7210_1.csv')\ndf.head(2)","314e71b7":"df.shape","852a9059":"df.isnull().sum()*100\/df.shape[0]\n","dd8eb473":"df = df[['name','brand','categories','prices.amountMin','prices.amountMax','prices.currency','prices.isSale']]\ndf.head(2)\ndf.dropna(inplace=True)","0a725ff8":"df.shape","59879f47":"top_brands =df.groupby('brand')['name'].count().reset_index().sort_values('name',ascending=False).head(10).set_index('brand')\nplt.subplots(figsize=(14,7))\nax = top_brands['name'].sort_values().plot.barh(width=0.9,color=sns.color_palette('CMRmap',12))\nax.set_xlabel(\"Total items\", fontsize=18)\nax.set_ylabel(\"Brand\", fontsize=18)\nax.set_title(\"Top 10 Brands\",fontsize=18,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+2, i.get_y()+.3,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","0af343cb":"sale =df.groupby('prices.isSale')['name'].count().reset_index().sort_values('name',ascending=False).head(10).set_index('prices.isSale')\nplt.subplots(figsize=(14,7))\nax = sale['name'].sort_values().plot.barh(width=0.9,color=sns.color_palette('Greens',2))\nax.set_xlabel(\"Total items\", fontsize=18)\nax.set_ylabel(\"Is on sale\", fontsize=18)\nax.set_title(\"On Sale ?\",fontsize=18,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+2, i.get_y()+.3,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","d33d8a4b":"top_categories =df.groupby('categories')['name'].count().reset_index().sort_values('name',ascending=False).head(10).set_index('categories')\nplt.subplots(figsize=(14,7))\nax = top_categories['name'].sort_values().plot.barh(width=0.9,color=sns.color_palette('coolwarm',12))\nax.set_xlabel(\"Total items\", fontsize=18)\nax.set_ylabel(\"Category\", fontsize=18)\nax.set_title(\"Top categories\",fontsize=18,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+2, i.get_y()+.3,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","563456b6":"currency =df.groupby('prices.currency')['name'].count().reset_index().sort_values('name',ascending=False).head(10).set_index('prices.currency')\nplt.subplots(figsize=(14,7))\nax = currency['name'].sort_values().plot.barh(width=0.9,color=sns.color_palette('Blues',2))\nax.set_xlabel(\"Product Count\", fontsize=18)\nax.set_ylabel(\"Currency\", fontsize=18)\nax.set_title(\"Currency Type\",fontsize=18,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+2, i.get_y()+.3,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","a877e80d":"df =df.sort_values('prices.amountMax',ascending=False)\ncostliest_products =df.groupby('brand')['prices.amountMax'].first().reset_index().sort_values('prices.amountMax',ascending=False).head(10).set_index('brand')\nplt.subplots(figsize=(14,7))\nax = costliest_products['prices.amountMax'].sort_values().plot.barh(width=0.9,color=sns.color_palette('gnuplot2_r',10))\nax.set_xlabel(\"Cost\", fontsize=18)\nax.set_ylabel(\"Brand\", fontsize=18)\nax.set_title(\"Costliest products of top 10 brands\",fontsize=18,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+2, i.get_y()+.3,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","46e7131a":"dist = df\ndist['prices.amountMax'] = dist['prices.amountMax'].astype(float)\nfig, ax = plt.subplots(figsize=[14,8])\nsns.distplot(dist['prices.amountMax'],ax=ax)\nax.set_title('Average price of all shoes',fontsize=20)\nax.set_xlabel('Average price',fontsize=13)","bb51e93f":"*Shape of data*","2915003f":"*Majority of the products have USD as the currency*","04c81a8c":"**Top 10 brands with highest number of products**","2b283c51":"*Majority of products are on sale.*","e5fa4046":"**Type of Currency**","7c4aed32":"**This notebook is an attempt to visualise data using Seaborn library of Python. Please upvote if you like it.**","919cc903":"**Data visualisation**","d338a6bc":"**Distribution of prices of all shoes**","25524fbc":"**Product is on sale or not?!**","19f33a61":"**Costliest products of top 10 brands**","8f811bb9":"**Thank you for spending your time on my Notebook. Please upvote if you liked it. Do share your commnets\/suggestions below!**","691a90e5":"*Finding the percentage of nan values in each column of the dataset*","2823d77c":"*As we see, Journee Collection brand has maximum number of products.*","4af4e640":"*Selecing only the columns with minimum number of missing values and dropping all nan values*","289eb17e":"**Data Cleaning**","49fbb99e":"**Top Product categories**"}}