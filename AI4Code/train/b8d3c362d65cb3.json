{"cell_type":{"8c30e0e1":"code","3cfbcda9":"code","cbcf4624":"code","dbcffe57":"code","fb8d29cd":"code","e4167479":"code","833ecc27":"code","05a09003":"code","eb4e4186":"code","2d9bd000":"code","c0447203":"code","388a6bda":"code","174fd3f9":"code","fcb1cdf8":"code","3709e048":"code","361a0680":"code","e2e1db91":"code","47f835c4":"code","73736169":"code","982d6628":"code","d8c01be1":"code","cb4d8617":"markdown","a4269f37":"markdown","6044d5ca":"markdown","e3951a24":"markdown","5ad0074c":"markdown","483e256d":"markdown","27c74fe7":"markdown","e21cde3d":"markdown","9f0425bb":"markdown"},"source":{"8c30e0e1":"from pathlib import Path\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3cfbcda9":"ROOT = Path('\/kaggle\/')\nINPUT_DIR = ROOT \/ 'input\/competitive-data-science-predict-future-sales'","cbcf4624":"list(INPUT_DIR.glob('*'))","dbcffe57":"item_df = pd.read_csv(INPUT_DIR \/ 'items.csv')\nitem_df.head()","fb8d29cd":"shop_df = pd.read_csv(INPUT_DIR \/ 'shops.csv')\nshop_df.head()","e4167479":"item_cat_df = pd.read_csv(INPUT_DIR \/ 'item_categories.csv')\nitem_cat_df.head()","833ecc27":"train_df = pd.read_csv(INPUT_DIR \/ 'sales_train.csv')\ntrain_df.head()","05a09003":"test_df = pd.read_csv(INPUT_DIR \/ 'test.csv')\ntest_df.head()","eb4e4186":"sample_submission = pd.read_csv(INPUT_DIR \/ 'sample_submission.csv')\nsample_submission.head()","2d9bd000":"train_df = train_df.join(item_df, on='item_id', how='outer', lsuffix='', rsuffix='_r')[['date', 'date_block_num', 'shop_id', 'item_id', 'item_price', 'item_cnt_day', 'item_name', 'item_category_id']]","c0447203":"train_df.head()","388a6bda":"train_df = train_df.join(item_cat_df, on='item_category_id', how='outer', lsuffix='', rsuffix='_r')[['date', 'date_block_num', 'shop_id', 'item_id', 'item_price', 'item_cnt_day', 'item_name', 'item_category_id', 'item_category_name']]","174fd3f9":"train_df.head()","fcb1cdf8":"train_df = train_df.join(shop_df, on='shop_id', how='outer', lsuffix='', rsuffix='_r')[['date', 'date_block_num', 'shop_id', 'item_id', 'item_price', 'item_cnt_day', 'item_name', 'item_category_id', 'item_category_name', 'shop_name']]","3709e048":"train_df.head()","361a0680":"train_df.reset_index(drop=True, inplace=True)","e2e1db91":"train_df.dropna(inplace=True)\ntrain_df.drop_duplicates(inplace=True)","47f835c4":"train_df[['day', 'month', 'year']] = train_df.date.str.split('.', expand=True)\ntrain_df.day = train_df.day.apply(lambda x: int(x))\ntrain_df.month = train_df.month.apply(lambda x: int(x))\ntrain_df.year = train_df.year.apply(lambda x: int(x))\ntrain_df.head()","73736169":"train_df.describe()","982d6628":"year_count = train_df.groupby('year').count().item_id.reset_index()\nyear_count.columns = ['year', 'total_bill']\nmonth_count = train_df.groupby('month').count().item_id.reset_index()\nmonth_count.columns = ['month', 'total_bill']\nday_count = train_df.groupby('day').count().item_id.reset_index()\nday_count.columns = ['day', 'total_bill']\n\nfig, axes = plt.subplots(1, 3, figsize=(20, 4))\nsns.barplot(x='year', y='total_bill', data=year_count, ax=axes[0])\nsns.barplot(x='month', y='total_bill', data=month_count, ax=axes[1])\nsns.barplot(x='day', y='total_bill', data=day_count, ax=axes[2])\nplt.show()","d8c01be1":"date_block_count = train_df.groupby('date_block_num').count().item_id.reset_index()\ndate_block_count.columns = ['date_block', 'total_bill']\nfig = plt.figure(figsize=(12, 4))\nax = fig.add_axes([0, 0, 1, 1])\nsns.barplot(x='date_block', y='total_bill', data=date_block_count, ax=ax)\nplt.show()","cb4d8617":"# Join all available data","a4269f37":"# Modify some features (fields\/columns)","6044d5ca":"## Split the date column into \"day\", \"month\" and \"year\" ones","e3951a24":"# Configure hyper-parameters","5ad0074c":"# Clean the data","483e256d":"# Have a quick computation for all number cols","27c74fe7":"# Visualize some information","e21cde3d":"# Import libraries","9f0425bb":"# Have a quick look at what we have"}}