{"cell_type":{"bb069a9d":"code","4f9f4238":"code","cc95d2b6":"code","5fc3edae":"code","b921fd6a":"code","128a3be0":"code","0c06cfcc":"code","e40c2fd0":"code","1acfbdd9":"code","3f130571":"code","569de129":"code","c5a9d8f9":"code","adfaa2d7":"code","4b3e57f7":"code","1f01c379":"code","5b6ee9ca":"code","6db688c9":"code","da4b924a":"code","4b95e317":"code","7204293d":"code","a402ffe7":"code","ddc14cf3":"code","ac9fe60d":"code","701adff3":"code","1a470047":"code","0bd5e1c4":"code","2891c9d5":"code","46509666":"code","03f7b5e5":"code","974bf6c0":"code","b0420faf":"code","b78f693d":"code","0efe54f7":"code","53662785":"markdown","5fbb562b":"markdown","a7ee68e3":"markdown","b302774d":"markdown","725cc658":"markdown"},"source":{"bb069a9d":"import datetime\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import DateFormatter,DayLocator\nimport matplotlib.dates as mdates\nimport matplotlib.style\nimport seaborn as sns\nsns.set(style=\"white\")\nmatplotlib.style.use('ggplot')\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4f9f4238":"df = pd.read_csv('..\/input\/covid19\/train_data.csv')\ndf.head()","cc95d2b6":"print('Data information')\nprint(df.info(), end='\\n\\n')\nprint('Checking for null values')\nprint(df.isnull().sum(), end='\\n\\n')\nprint('Necessary information from the dataset')\nprint('Total affected countries ', len(df['Country_Region'].unique()))\nprint('Total confirmed cases ', df['ConfirmedCases'].sum())\nprint('Total fatalities cases ', df['Fatalities'].sum())\n","5fc3edae":"d = df['Date'].unique()\ndate = {}\nfor i in d:\n    date.update({i:0})\n    \nfor i in date:\n    date.update({i:df[df['Date']==i]['ConfirmedCases'].sum()})","b921fd6a":"x_values = [datetime.datetime.strptime(d,\"%Y-%m-%d\").date() for d in date.keys()]\ny_values = date.values()","128a3be0":"plt.figure(figsize=(10,6))\nx_values = [i for i in range(1,82)]\ny_values = [i for i in y_values]\nax = sns.lineplot(x=x_values, y=y_values, color='coral', label=\"line\")\nax.set_title('Global Confirmed Cases')\nax.set(xlabel=\"Date in X axis\", ylabel = \"Confirmed Cases in Y axis\")\nplt.show()","0c06cfcc":"d = df['Date'].unique()\ndate = {}\nfor i in d:\n    date.update({i:0})\n    \nfor i in date:\n    date.update({i:df[df['Date']==i]['Fatalities'].sum()})","e40c2fd0":"x_values = [datetime.datetime.strptime(d,\"%Y-%m-%d\").date() for d in date.keys()]\ny_values = date.values()","1acfbdd9":"plt.figure(figsize=(10,6))\nx_values = [i for i in range(1,82)]\ny_values = [i for i in y_values]\nax = sns.lineplot(x=x_values, y=y_values, color='coral', label=\"line\")\nax.set_title('Global Fatality Cases')\nax.set(xlabel=\"Date in X axis\", ylabel = \"Fatality Cases in Y axis\")\nplt.show()","3f130571":"data = {'Country':[], 'ConfirmedCases':[], 'Fatalities':[]}\ndata.update({'Country':df['Country_Region'].unique()})\n\nconfirm_case = []\nfor i in data['Country']:\n    confirm_case.append(df[df['Country_Region'] == i]['ConfirmedCases'].sum())\n\nfatalities_case = []\nfor i in data['Country']:\n    fatalities_case.append(df[df['Country_Region'] == i]['Fatalities'].sum())\n    \ndata.update({'ConfirmedCases':confirm_case})\ndata.update({'Fatalities':fatalities_case})","569de129":"print(len(data['Country']))\nprint(len(data['ConfirmedCases']))\nprint(len(data['Fatalities']))","c5a9d8f9":"data = pd.DataFrame(data)\ndata.head()","adfaa2d7":"df_confirm_asc = data.sort_values(by=['ConfirmedCases'], ascending=False)","4b3e57f7":"df_confirm_asc = df_confirm_asc.reset_index(drop=True)\ndf_confirm_asc.style.background_gradient(cmap=\"Reds\")","1f01c379":"x_values = [i for i in df_confirm_asc.loc[0:9,'Country']]\ny_values = [i for i in df_confirm_asc.loc[0:9,'ConfirmedCases']]","5b6ee9ca":"plt.figure(figsize=(10,6))\nax = sns.barplot(x=y_values, y=x_values, palette='Reds_r')\nax.set_title('Top 10 Highest Confirmed Cases Country')\nax.set(xlabel=\"Confirmed Cases in X axis\", ylabel = \"Countries in Y axis\")\nplt.show()","6db688c9":"df_fatality_asc = data.sort_values(by=['Fatalities'], ascending=False)\ndf_fatality_asc = df_fatality_asc.reset_index(drop=True)\ndf_fatality_asc.style.background_gradient(cmap=\"Reds\")","da4b924a":"x_values = [i for i in df_fatality_asc.loc[0:9,'Country']]\ny_values = [i for i in df_fatality_asc.loc[0:9,'Fatalities']]","4b95e317":"plt.figure(figsize=(10,6))\nax = sns.barplot(x=y_values, y=x_values, palette='Reds_r')\nax.set_title('Top 10 Highest Fatality Cases Country')\nax.set(xlabel=\"Fatality Cases in X axis\", ylabel = \"Countries in Y axis\")\nplt.show()","7204293d":"df_confirm_asc = data.sort_values(by=['ConfirmedCases'], ascending=True)\ndf_confirm_asc = df_confirm_asc.reset_index(drop=True)\ndf_confirm_asc.style.background_gradient(cmap=\"Reds\")","a402ffe7":"x_values = [i for i in df_confirm_asc.loc[0:9,'Country']]\ny_values = [i for i in df_confirm_asc.loc[0:9,'ConfirmedCases']]","ddc14cf3":"plt.figure(figsize=(10,6))\nax = sns.barplot(x=y_values, y=x_values, palette='Reds')\nax.set_title('10 Lowest Confirmed Cases Country')\nax.set(xlabel=\"Confirmed Cases in X axis\", ylabel = \"Countries in Y axis\")\nplt.show()","ac9fe60d":"df_fatality_asc = data.sort_values(by=['Fatalities'], ascending=True)\ndf_fatality_asc = df_fatality_asc.reset_index(drop=True)\ndf_fatality_asc.style.background_gradient(cmap=\"Reds\")","701adff3":"x_values = [i for i in df_fatality_asc.loc[34:43,'Country']]\ny_values = [i for i in df_fatality_asc.loc[34:43,'Fatalities']]","1a470047":"plt.figure(figsize=(10,6))\nax = sns.barplot(x=y_values, y=x_values, palette='Reds')\nax.set_title('10 Lowest Fatality Cases Country')\nax.set(xlabel=\"Fatality Cases in X axis\", ylabel = \"Countries in Y axis\")\nplt.show()","0bd5e1c4":"df_confirm_asc = data.sort_values(by=['ConfirmedCases'], ascending=False)\ndf_confirm_asc = df_confirm_asc.reset_index(drop=True)\nx_values = [i for i in df_confirm_asc.loc[0:9,'Country']]\ny_values = [i for i in df_confirm_asc.loc[0:9,'ConfirmedCases']]","2891c9d5":"\nplt.figure(figsize=(5,5))\nplt.axis('equal')\nplt.pie(y_values, labels=x_values, radius=2, autopct='%.2f%%', shadow=True, startangle=0)\nplt.title('Top 10 Confirmed Cases Country')\nplt.show()","46509666":"df_fatality_asc = data.sort_values(by=['Fatalities'], ascending=False)\ndf_fatality_asc = df_fatality_asc.reset_index(drop=True)\nx_values = [i for i in df_fatality_asc.loc[0:9,'Country']]\ny_values = [i for i in df_fatality_asc.loc[0:9,'Fatalities']]","03f7b5e5":"\nplt.figure(figsize=(5,5))\nplt.axis('equal')\nplt.pie(y_values, labels=x_values, radius=2, autopct='%.2f%%', shadow=True, startangle=0)\nplt.title('Top 10 Fatality Cases Country')\nplt.show()","974bf6c0":"data = {'Date':[], 'US':[], 'China':[], 'Italy':[], 'Spain':[], 'Germany':[], 'France':[], 'Iran':[]}\ndata.update({'Date': df['Date'].unique()})\n\nfor i in data['Date']:\n    data['US'].append(df[(df['Date']==i) & (df['Country_Region']=='US')]['ConfirmedCases'].sum())\n    data['China'].append(df[(df['Date']==i) & (df['Country_Region']=='China')]['ConfirmedCases'].sum())\n    data['Italy'].append(df[(df['Date']==i) & (df['Country_Region']=='Italy')]['ConfirmedCases'].sum())\n    data['Spain'].append(df[(df['Date']==i) & (df['Country_Region']=='Spain')]['ConfirmedCases'].sum())\n    data['Germany'].append(df[(df['Date']==i) & (df['Country_Region']=='Germany')]['ConfirmedCases'].sum())\n    data['France'].append(df[(df['Date']==i) & (df['Country_Region']=='France')]['ConfirmedCases'].sum())\n    data['Iran'].append(df[(df['Date']==i) & (df['Country_Region']=='Iran')]['ConfirmedCases'].sum())\n    \ndata = pd.DataFrame(data)\ndata.head()  ","b0420faf":"ax = plt.figure(figsize=(10,6))\na = sns.lineplot(x=data.index, y=data.US, data = data)\na = sns.lineplot(x=data.index, y=data.China, data = data )\na = sns.lineplot(x=data.index, y=data.Italy, data = data )\na = sns.lineplot(x=data.index, y=data.Spain, data = data )\na = sns.lineplot(x=data.index, y=data.Germany, data = data )\na = sns.lineplot(x=data.index, y=data.France, data = data )\na = sns.lineplot(x=data.index, y=data['Iran'], data = data )\nax.legend(['US', 'China', 'Italy', 'Spain', 'Germany', 'France', 'Iran'], loc='upper right')\na.set_title('US, Chian, Italy, Spain, Germany, France, Iran Confirmed Cases \\nFrom 2020\/01\/22 to 2020\/04\/11')\na.set(xlabel=\"Date in X axis\", ylabel = \"Confirmed Cases in Y axis\")\nplt.show()","b78f693d":"data = {'Date':[], 'US':[], 'China':[], 'Italy':[], 'Spain':[], 'Germany':[], 'France':[], 'Iran':[]}\ndata.update({'Date': df['Date'].unique()})\n\nfor i in data['Date']:\n    data['US'].append(df[(df['Date']==i) & (df['Country_Region']=='US')]['Fatalities'].sum())\n    data['China'].append(df[(df['Date']==i) & (df['Country_Region']=='China')]['Fatalities'].sum())\n    data['Italy'].append(df[(df['Date']==i) & (df['Country_Region']=='Italy')]['Fatalities'].sum())\n    data['Spain'].append(df[(df['Date']==i) & (df['Country_Region']=='Spain')]['Fatalities'].sum())\n    data['Germany'].append(df[(df['Date']==i) & (df['Country_Region']=='Germany')]['Fatalities'].sum())\n    data['France'].append(df[(df['Date']==i) & (df['Country_Region']=='France')]['Fatalities'].sum())\n    data['Iran'].append(df[(df['Date']==i) & (df['Country_Region']=='Iran')]['Fatalities'].sum())\n    \ndata = pd.DataFrame(data)\ndata.head()  ","0efe54f7":"ax = plt.figure(figsize=(10,6))\na = sns.lineplot(x=data.index, y=data.US, data = data)\na = sns.lineplot(x=data.index, y=data.China, data = data )\na = sns.lineplot(x=data.index, y=data.Italy, data = data )\na = sns.lineplot(x=data.index, y=data.Spain, data = data )\na = sns.lineplot(x=data.index, y=data.Germany, data = data )\na = sns.lineplot(x=data.index, y=data.France, data = data )\na = sns.lineplot(x=data.index, y=data['Iran'], data = data )\nax.legend(['US', 'China', 'Italy', 'Spain', 'Germany', 'France', 'Iran'], loc='upper right')\na.set_title('US, Chian, Italy, Spain, Germany, France, Iran Fatality Cases \\nFrom 2020\/01\/22 to 2020\/04\/11')\na.set(xlabel=\"Date in X axis\", ylabel = \"Fatality Cases in Y axis\")\nplt.show()","53662785":"# Countrywise Analysis","5fbb562b":"# Global Confirmed Cases from 2020\/01\/22 to 2020\/04\/11","a7ee68e3":"# Importing Library","b302774d":"# Global Fatalities Cases from 2020\/01\/22 to 2020\/04\/11","725cc658":"# Loading Dataset"}}