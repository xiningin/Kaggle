{"cell_type":{"ecc8a50f":"code","8a227225":"code","dc4d0f25":"code","c0d14abc":"code","c0487adb":"code","cfcd6f11":"code","cd2c91b8":"code","5992561c":"code","b81dcf2d":"code","86ac7ab3":"code","e7dc22ce":"code","9510006d":"code","d130d63e":"code","480dd989":"code","6bf0ca34":"markdown"},"source":{"ecc8a50f":"#importing libraries\nimport tensorflow as tf\nimport pandas as pd\nimport numpy as np\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt","8a227225":"#training and testing directory\ntrain_dir = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_train.csv')\ntest_dir = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_test.csv')","dc4d0f25":"train_dir.head()","c0d14abc":"#defining train labels and train sets\ntrain_label = np.array(train_dir['label'])\ntrain_ds = np.array(train_dir.drop(['label'], axis = 1))\n\n#defining test labels and test sets\ntest_label = np.array(test_dir['label'])\ntest_ds = np.array(test_dir.drop(['label'], axis = 1))","c0487adb":"#feature scaling\ntrain_ds = train_ds\/255.\n\n#reshaping for the input of neural network(shape of input image 28x28)\ntrain_ds = train_ds.reshape(-1,28,28,1)\n\n#feature scaling\ntest_ds = test_ds\/255.\n\n#reshaping for the input of neural network\ntest_ds = test_ds.reshape(-1,28,28,1)","cfcd6f11":"#test labels and training labels are in range(0,9),hence applying onehotecoding()\nfrom tensorflow.keras.utils import to_categorical\ntrain_label = to_categorical(train_label,10)\ntest_label = to_categorical(test_label,10)","cd2c91b8":"#classes of training set\nnames = ['T_shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat','Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n\nplt.figure(figsize=(6, 6))\nfor i in range(16):\n    plt.subplot(4, 4, i + 1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(train_ds[i])\n    plt.title(names[train_label[i].argmax()])\n    plt.tight_layout()\nplt.show()","5992561c":"from keras.layers import Conv2D,Dense,MaxPool2D,Flatten,Dropout\n\n#defining the model as a sequence of layers.\nmodel = keras.models.Sequential()\n\n#adding 1st Convolutional layer\nmodel.add(Conv2D(filters = 32,kernel_size = 3,activation = 'relu' ,input_shape=(28,28,1)))\nmodel.add(MaxPool2D(pool_size=2))\nmodel.add(Dropout(0.2))\n\n#flattening the output\nmodel.add(Flatten())\n\n#adding dense layer\nmodel.add(Dense(64,activation = \"relu\"))\nmodel.add(Dropout(0.3))\n\n#adding final layer\nmodel.add(Dense(10,activation = \"softmax\"))\n\n#compiling the model\nmodel.compile(optimizer=keras.optimizers.Adam(lr=0.0001),loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])\n\n#training the model\ncnn = model.fit(train_ds,train_label, epochs=20,batch_size = 32 ,validation_split=0.1)","b81dcf2d":"#summary of model\nmodel.summary()","86ac7ab3":"#evaluating model on test set\nmodel.evaluate(test_ds,test_label)","e7dc22ce":"#storing predictions in variable(pred)\npred=model.predict(test_ds,verbose=1)","9510006d":"#saving index of maximum value of pred in preds\npreds = []\nfor i in range(0,len(pred)):\n    preds.append(pred[i].argmax())\n\n#saving index of maximum value of training set in actual\nactual = []\nfor i in range(0,len(test_label)):\n    actual.append(test_label[i].argmax())","d130d63e":"#classification report\nfrom sklearn import metrics\nreport = metrics.classification_report(actual, preds, target_names=names)\nprint(report)","480dd989":"#graph for accuracy\nplt.plot(cnn.history['accuracy'])\nplt.plot(cnn.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\n#graph for loss\nplt.plot(cnn.history['loss'])\nplt.plot(cnn.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","6bf0ca34":"**PREDICTING THE CLASSES OF DATASET USING CNN.**\n**I HAVE APPLIED HYPERPARAMETR TUNING USING KERAS TUNER TO GET THE BEST SET OF HYPERPARAMETERS FOR MY MODEL.**\n\n**Each training and test example is assigned to one of the following labels:**\n\n* 0 T-shirt\/top\n* 1 Trouser\n* 2 Pullover\n* 3 Dress\n* 4 Coat\n* 5 Sandal\n* 6 Shirt\n* 7 Sneaker\n* 8 Bag\n* 9 Ankle boot"}}