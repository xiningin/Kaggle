{"cell_type":{"c6e9f95b":"code","24bebb88":"code","05a08bbf":"code","ce39a4d0":"code","f5baae40":"code","68df6f92":"code","dc027cb7":"code","4186db0c":"code","cef7b526":"code","833f8b81":"code","52662c0e":"code","4a6101fd":"code","d2a72b82":"code","50f73fbd":"code","0f6ceb26":"code","d0987e6f":"code","c1e9909e":"code","d76d1f42":"code","ac5a228b":"code","1cc89a86":"code","23584483":"code","b40479ad":"code","b8b29970":"code","1a68822b":"code","03be6e23":"code","fa121e8b":"code","072a81fa":"code","06d60f13":"code","c2576062":"code","656e47ee":"code","c3595448":"code","18c76639":"code","cec13370":"code","3f595264":"code","5940caae":"code","8b69fb2d":"code","f97be87f":"code","ed8247ba":"code","f9bc1c06":"code","eb695dd4":"code","54b712c5":"code","028d02a4":"code","f7a384a6":"code","2ebdaefb":"code","d3ddaea4":"code","af286f00":"code","78066658":"code","b3ba31b0":"code","665bca88":"code","2c45e38e":"code","ac5dd08e":"code","e2e80e03":"code","99007886":"code","16f6b806":"markdown","e99cff6f":"markdown","3a09e239":"markdown","4ed2110e":"markdown","951d99a4":"markdown","db264b6e":"markdown","ffb09c78":"markdown","c80262eb":"markdown","8b6ae7e2":"markdown","b852cc1e":"markdown","4cf6bb0a":"markdown","72aa2ac8":"markdown","588ecbcd":"markdown"},"source":{"c6e9f95b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport  seaborn as sns\n\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","24bebb88":"# Read datas\nmedian_house_hold_in_come = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv',encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv',encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv',encoding=\"windows-1252\")\nkill = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv',encoding=\"windows-1252\")","05a08bbf":"percentage_people_below_poverty_level.head()","ce39a4d0":"percentage_people_below_poverty_level.info()","f5baae40":"percentage_people_below_poverty_level.poverty_rate.value_counts()","68df6f92":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()","dc027cb7":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\n\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\n\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"Povert Rate\")\nplt.title(\"Poverty Rate Given States\")","4186db0c":"kill.head()","cef7b526":"seperate=kill.name[kill.name!=\"TK TK\"].str.split()\na,b=zip(*seperate)\nname_list=a+b\nname_count=Counter(name_list)\nmost_common_names=name_count.most_common(15)\nx,y=zip(*most_common_names)\nx,y=list(x),list(y)\n\nplt.figure(figsize=(15,10))\nax=sns.barplot(x=x,y=y,palette=sns.cubehelix_palette(len(x)))\nplt.xlabel(\"Name or Surname of killed people\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Most common 15 Name or Surname of killed people\")\nplt.show()","833f8b81":"percent_over_25_completed_highSchool.head()","52662c0e":"percent_over_25_completed_highSchool.info()","4a6101fd":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","d2a72b82":"percent_over_25_completed_highSchool.percent_completed_hs.replace([\"-\"],0.0,inplace=True)\npercent_over_25_completed_highSchool.percent_completed_hs=percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list=list(percent_over_25_completed_highSchool[\"Geographic Area\"].unique())\narea_highschool=[]\nfor i in area_list:\n    x=percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate=sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n\ndata=pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index=(data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2=data.reindex(new_index)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")\nplt.show()","50f73fbd":"share_race_city.head()","0f6ceb26":"share_race_city.loc[:,[\"share_white\",\"share_black\",\"share_native_american\",\"share_asian\",\"share_hispanic\"]].value_counts()","d0987e6f":"share_race_city.info()","c1e9909e":"share_race_city.value_counts()","d76d1f42":"share_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.share_white = share_race_city.share_white.astype(float)\nshare_race_city.share_black = share_race_city.share_black.astype(float)\nshare_race_city.share_native_american = share_race_city.share_native_american.astype(float)\nshare_race_city.share_asian = share_race_city.share_asian.astype(float)\nshare_race_city.share_hispanic = share_race_city.share_hispanic.astype(float)\n\narea_list=list(share_race_city[\"Geographic area\"].unique())\n\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n    \nf,ax = plt.subplots(figsize=(9,12))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")\nplt.show()","ac5a228b":"sorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue',style=\"italic\")\nplt.grid()","1cc89a86":"data.head()","23584483":"g = sns.jointplot(data.area_poverty_ratio,data.area_highschool_ratio, kind=\"kde\",size=7)\nplt.savefig(\"graph.png\")\nplt.show()","b40479ad":"data.head()","b8b29970":"#kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\ng=sns.jointplot(\"area_poverty_ratio\",\"area_highschool_ratio\",data=data,size=5,color=\"r\")","1a68822b":"kill.race.head(15)","03be6e23":"kill.race.value_counts()","fa121e8b":"kill.race.dropna(inplace=True)\nlabels=kill.race.value_counts().index\ncolors=[\"brown\",\"blue\",\"red\",\"orange\",\"yellow\",\"black\"]\nexplode=[0,0,0,0,0,0]\nsizes=kill.race.value_counts().values\n\nplt.figure(figsize=(7,7))\nplt.pie(sizes,explode=explode,labels=labels,colors=colors,autopct=\"%1.1f%%\")\nplt.title(\"Killed People According to Races\",color=\"blue\",fontsize=15)\nplt.show()","072a81fa":"data.head()","06d60f13":"sns.lmplot(x=\"area_poverty_ratio\",y=\"area_highschool_ratio\",data=data)\nplt.show()","c2576062":"data.head()","656e47ee":"sns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio,shade=True,cut=3)\nplt.show()","c3595448":"data.head()","18c76639":"pal=sns.cubehelix_palette(2,rot=.5,dark=.3)\nsns.violinplot(data=data, palette=pal,inner=\"points\")\nplt.show()","cec13370":"data.corr()","3f595264":"f,ax= plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,linecolor=\"red\",fmt=\".1f\",ax=ax)\nplt.show()","5940caae":"kill.head()","8b69fb2d":"kill.manner_of_death.unique()","f97be87f":"sns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill,palette=\"PRGn\")\nplt.show()","ed8247ba":"kill.head()","f9bc1c06":"sns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","eb695dd4":"data.head()","54b712c5":"sns.pairplot(data)\nplt.show()","028d02a4":"kill.gender.value_counts()","f7a384a6":"kill.head()","2ebdaefb":"sns.countplot(kill.gender)\nplt.title(\"gender\",color=\"blue\",fontsize=15)\nplt.show()","d3ddaea4":"above25=[\"above25\" if i>=25 else \"below25\" for i in kill.age]\ndf=pd.DataFrame({\"age\":above25})\nsns.countplot(x=df.age)\nplt.ylabel(\"Number of Killed People\")\nplt.title(\"Age of Killed People\", color=\"blue\",fontsize=15)\nplt.show()","af286f00":"sns.countplot(data=kill, x=\"race\")\nplt.title(\"Race of Killed People\")\nplt.show()","78066658":"city=kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title(\"Most Dangerous Cities\",color=\"blue\",fontsize=15)\nplt.show()","b3ba31b0":"state=kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title(\"Most Dangerous State\",color=\"blue\",fontsize=15)\nplt.show()","665bca88":"sns.countplot(kill.signs_of_mental_illness)\nplt.xlabel(\"Mental Illness\")\nplt.ylabel(\"Number of Mental Illness\")\nplt.title(\"Having Mental Illness or Not\",color=\"blue\",fontsize=15)\nplt.show()","2c45e38e":"sns.countplot(kill.threat_level)\nplt.xlabel(\"Threat Types\")\nplt.ylabel(\"Threat Types\",color=\"blue\",fontsize=15)\nplt.show()","ac5dd08e":"sns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)\nplt.show()","e2e80e03":"sns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)\nplt.show()","99007886":"sta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)\nplt.show()","16f6b806":"# **Violin Plot**","e99cff6f":"armed=kill.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel(\"Number of Weapon\")\nplt.xlabel(\"Weapon Types\")\nplt.title(\"Kill Weapon\",color=\"blue\",fontsize=15)\nplt.show()","3a09e239":"# **Point Plot**","4ed2110e":"# Bar Plot","951d99a4":"# **Box Plot**","db264b6e":"# **Heat Map**","ffb09c78":"# **Lm Plot**","c80262eb":"# **Swarm Plot**","8b6ae7e2":"# **Pie Chart**","b852cc1e":"# **Pair Plot**","4cf6bb0a":"# **Joint Plot** ","72aa2ac8":"# **Count Plot**","588ecbcd":"# **Kde Plot**"}}