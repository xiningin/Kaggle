{"cell_type":{"1f4f65b3":"code","ed789d2d":"code","70d2127d":"code","61b21bbd":"code","c29b2b8e":"code","ff441481":"code","e4de873b":"code","13f1494f":"code","86ce81e9":"code","371f4902":"code","180db4e8":"code","a067b801":"code","93b261b1":"code","777aabb4":"code","ca9acd54":"code","56515443":"code","188c87d4":"code","6782440f":"code","64338642":"code","d3d73029":"code","8013c19a":"code","2e4b45bc":"code","a5fc40c8":"code","56db17e0":"code","7032f8c3":"code","1f0bbce1":"code","7dd4d923":"code","cf83caa4":"code","7e3e3bb5":"code","3af0f543":"code","faacad8f":"code","d43e8c0e":"code","52bd6dc7":"code","be788683":"code","e499c153":"code","d1356d81":"code","ebae959a":"code","516c8db5":"code","f28390eb":"code","9e1271a0":"markdown","3b7d388e":"markdown","fe8437b3":"markdown","7964ed09":"markdown","2343e47c":"markdown","14647399":"markdown","f1e7c99b":"markdown","29b456ee":"markdown","d6ce15f1":"markdown","73193150":"markdown","f6af2b9a":"markdown","849f51e7":"markdown","dadb55ce":"markdown","bf128d16":"markdown","9474cab9":"markdown","c1526c13":"markdown","9edb836d":"markdown","30643371":"markdown","dde916ae":"markdown","992eb3e7":"markdown","cf831291":"markdown","3a6d30f6":"markdown","2ae98353":"markdown","8042c698":"markdown","6bac5d60":"markdown","e31aedf4":"markdown","c7201d88":"markdown","d91f4983":"markdown","eb3485b3":"markdown","ba162082":"markdown","2cc5dcb6":"markdown","86b2b95b":"markdown"},"source":{"1f4f65b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n#plt.style.use(\"seaborn-whitegrid\")\n#plt.style.use(\"tableau-colorblind10\")\n#plt.style.use(\"grayscale\")\n#plt.style.use(\"ggplot\")\n#plt.style.use(\"Solarize_Light2\")\n#plt.style.use(\"_classic_test_patch\")\nplt.style.use(\"seaborn-notebook\")\n\nimport seaborn as sns\n\nfrom collections import Counter\nimport  warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed789d2d":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","70d2127d":"train_df.columns","61b21bbd":"train_df.info()","c29b2b8e":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output. bar plot & value count\n    \"\"\"\n    # get feature\n    \n    var = train_df[variable]\n    \n    # count number of categorical variable(value\/sample)\n    \n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,4))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","ff441481":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)\n    plt.show()","e4de873b":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts))","13f1494f":"def plot_hist(variable):\n    plt.figure(figsize = (9,5))\n    plt.hist(train_df[variable], bins = 90)\n    plt.xlabel(variable)\n    plt.ylabel\n    plt.title\n    plt.show()","86ce81e9":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\nfor d in numericVar:\n    plot_hist(d)\n","371f4902":"# Pclass vs Survived\ntrain_df [[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","180db4e8":"# Sex vs Survived\ntrain_df [[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","a067b801":"# SibSp vs Survived\ntrain_df [[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","93b261b1":"# Parch vs Survived\ntrain_df [[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","777aabb4":"def detecet_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        #IQR\n        IQR = Q3 - Q1\n        #Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c]> Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n                               \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i ,v in outlier_indices.items()if v > 2)\n    return multiple_outliers","ca9acd54":"train_df.loc[detecet_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","56515443":"# drop outliers\ntrain_df = train_df.drop(detecet_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","188c87d4":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","6782440f":"train_df.head()","64338642":"train_df.columns[train_df.isnull().any()]","d3d73029":"train_df.isnull().sum()","8013c19a":"train_df[train_df[\"Embarked\"].isnull()]","2e4b45bc":"train_df.boxplot(column=\"Fare\",by = \"Embarked\")\nplt.show()","a5fc40c8":"train_df[\"Embarked\"]= train_df[\"Embarked\"].fillna(\"c\")\ntrain_df[train_df[\"Embarked\"].isnull()]","56db17e0":"train_df[train_df[\"Fare\"].isnull()]","7032f8c3":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]== 3][\"Fare\"]))","1f0bbce1":"train_df[train_df[\"Fare\"].isnull()]","7dd4d923":"list1 = [\"SibSp\",\"Parch\",\"Age\",\"Fare\",\"Survived\"]\nsns.heatmap(train_df[list1].corr(),annot = True,fmt = \".2f\")\nplt.show()","cf83caa4":"g = sns.factorplot(x= \"SibSp\",y = \"Survived\", data = train_df,kind = \"bar\",size =7 )\ng.set_ylabels(\"Survived Probability\")\nplt.show()","7e3e3bb5":"g = sns.factorplot(x=\"Parch\",y = \"Survived\",kind = \"bar\",data = train_df,size=7)\ng.set_ylabels(\"Survived probability\")\nplt.show()","3af0f543":"g = sns.factorplot(x=\"Pclass\",y = \"Survived\",data = train_df,kind=\"bar\",size=7)\ng.set_ylabels(\"Survived Probability\")\nplt.show()","faacad8f":"g = sns.FacetGrid(train_df, col=\"Survived\")\ng.map(sns.distplot, \"Age\",bins = 25)\nplt.show()","d43e8c0e":"g = sns.FacetGrid(train_df,col = \"Survived\",row = \"Pclass\",size= 3)\ng.map(plt.hist,\"Age\",bins = 27)\ng.add_legend()\nplt.show()","52bd6dc7":"g = sns.FacetGrid(train_df,row = \"Embarked\",size=5)\ng.map(sns.pointplot,\"Pclass\",\"Survived\",\"Sex\")\ng.add_legend()\nplt.show()","be788683":"g = sns.FacetGrid ( train_df,row = \"Embarked\",col= \"Survived\",size = 3)\ng.map(sns.barplot, \"Sex\",\"Fare\")\ng.add_legend()\nplt.show()","e499c153":"train_df[train_df[\"Age\"].isnull()]","d1356d81":"sns.factorplot(x = \"Sex\",y = \"Age\",data=train_df,kind = \"box\")\nplt.show()\n","ebae959a":"sns.factorplot(x = \"Sex\",y = \"Age\",hue = \"Pclass\",data=train_df,kind = \"box\")\nplt.show()","516c8db5":"sns.factorplot(x = \"Parch\",y = \"Age\",data=train_df,kind = \"box\",size=7)\nsns.factorplot(x = \"SibSp\",y = \"Age\",data=train_df,kind = \"box\",size=7)\nplt.show()","f28390eb":"sns.heatmap(train_df[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\"]].corr(),annot=True)\nplt.show()","9e1271a0":"<a id = '2'><\/a><br>\n# Variable description\n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survise(1) or died (0)\n1. Pclass: passenger class \n1. Name: name\n1. Sex: gender of passenger \n1. Age: age of passenger \n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number \n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category \n1. Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southhampton)\n","3b7d388e":"Fare feature seems to have corellation with survived feature(0.26.)\n","fe8437b3":"<a id = '1'><\/a><br>\n## Load and Check Data ","7964ed09":"<a id = '13'><\/a><br>\n## SibSp--Survived","2343e47c":"<a id = '19'><\/a><br>\n## Embarked--Sex--Fare--Survived","14647399":"<a id = '3'><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Survived, Sex, Pclass, Embarked, Cabin,Name, Ticket, SibSp and Parch\n* Numerical Variable: Fare, Age and PassengerId","f1e7c99b":"<a id = '20'><\/a><br>\n## Fill Missing: Age Feature","29b456ee":"* Passenger who pay higher fare have better survival. Fare can be used as categorical for training.","d6ce15f1":"<a id = '10'><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1","73193150":"* Age is not correlated with sex but it is correlated with parch,sibsp and pclass","f6af2b9a":"<a id = '14'><\/a><br>\n## Parch--Survived","849f51e7":"# Introduction\nThe siking  of Titanic is on of the most notorious shipwrecks in the history.In 1912, during her voyage,the  Titanic  sank after colliding  with an icberg , killing 1502 out of 2224 passengers  and crew.\n\n<font color = 'blue'>\n\nContent:\n\n1. [Load and Check Data](#1) \n    \n1. [Variable description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable ](#4)\n        * [Numerical Variable ](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n1. [Visualization](#11)\n    * [Correlation Between Sibsp -- Parch --Age-- Fare-- Survived](#12)\n    * [SibSp--Survived](#13)\n    * [Parch--Survived](#14)\n    * [Pclass--Survived](#15)\n    * [Age--Survived](#16)\n    * [Pclass--Survived--Age](#17)\n    * [Embarked--Sex--Pclass--Survived](#18)\n    * [Embarked--Sex--Fare--Survived](#19)\n    * [Fill Missing: Age Feature](#20)\n    \n   \n    ","dadb55ce":"<a id = '12'><\/a><br>\n## Correlation Between Sibsp -- Parch --Age-- Fare-- Survived","bf128d16":"1st class passengers are older than 2nd,and2nd is older 3rd class.","9474cab9":"<a id = '6'><\/a><br>\n## Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","c1526c13":"<a id = '9'><\/a><br>\n## Find Missing Value","9edb836d":"<a id = '5'><\/a><br>\n## Numerical Variable","30643371":"* sibsp and parch can be used for new feature extraction with th = 3\n* small families have more chance to survive \n* there is a std in survival of passenger with parch = 3\n","dde916ae":"<a id = '7'><\/a><br>\n# Outlier Detection","992eb3e7":"sex is not informative for age prediction age distribution seems to be same.","cf831291":"<a id = '4'><\/a><br>\n## Categorical Variable","3a6d30f6":"<a id = '17'><\/a><br>\n## Pclass--Survived--Age","2ae98353":"* Having a lot of SibSp have less chance to survive.\n* \u0130f sibsp == 0 or 1 or 2, passenger has more chance to survive \n* we can consider a new feature describing these categories.","8042c698":"* pclass is important feature for model training.","6bac5d60":"<a id = '18'><\/a><br>\n## Embarked--Sex--Pclass--Survived","e31aedf4":"<a id = '16'><\/a><br>\n## Age--Survived","c7201d88":"<a id = '15'><\/a><br>\n## Pclass--Survived","d91f4983":"* float64(2): Fare and Age\n* int64(5): PassengerId, Survived, Pclass, SibSp and Parch\n* object(5):Name, Sex, Ticket, Cabin and Embarked ","eb3485b3":"<a id = '8'><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","ba162082":"* Female passengers have much better survival rate than males,\n* males have better survival rate in pclass 3 in c.\n* embarked and sex will be used in training \n","2cc5dcb6":"* age <= 10 has a high survival rate,\n* oldets passengers (80) survived,\n* large number of 20 years old did not survive,\n* most passengers are in 15-35 age range,\n* use age feature in training \n* use age distribution for missing value of age.","86b2b95b":"<a id = '11'><\/a><br>\n# Visualization"}}