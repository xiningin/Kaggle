{"cell_type":{"e8b4d2c0":"code","35da8c11":"code","78a4ae4a":"code","9e8b670e":"code","f4f6dba7":"code","d6b3fcdf":"code","2f45a1bd":"code","e0561f76":"code","24b6e649":"code","b8eb29e3":"code","56784d99":"code","1093591b":"code","71180a57":"code","5db7cfbb":"code","f0392198":"code","cad521b9":"code","9fb21d9d":"code","f208ebb4":"code","07366e63":"code","9456e194":"code","f3b1fc9f":"code","c6f353c4":"code","08090fe4":"code","bb39be87":"code","4e1fd3b2":"code","17f8b9e4":"code","dfacac4a":"code","26a2545d":"code","06f00564":"code","1bcb64ef":"code","edc36b12":"code","dc4942be":"code","0720b07f":"markdown","51b69a27":"markdown","878f7f78":"markdown","4ef467e5":"markdown","7b07299a":"markdown","44b6dc70":"markdown","d1b7f303":"markdown","50efb7d5":"markdown","ec102fb0":"markdown","53c70306":"markdown","be3e71ac":"markdown","efe09164":"markdown","74375a1a":"markdown","8d0a0ffe":"markdown","f38ad208":"markdown","fa000adb":"markdown","b8c63445":"markdown","9be81d1d":"markdown","c30d05f1":"markdown","846b7ec2":"markdown"},"source":{"e8b4d2c0":"import datetime\nprint(\"Last Update: \",datetime.datetime.now())","35da8c11":"# Organizing imports\nimport numpy as np\nimport pandas as pd\n\n# Matplotlib\nimport matplotlib\nfrom matplotlib import pyplot as plt\n\n# plotly packages\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.graph_objs import *","78a4ae4a":"data = pd.read_excel('\/kaggle\/input\/covid19\/dataset.xlsx')\ndata.head()","9e8b670e":"print(\"Data Samples: \", len(data))","f4f6dba7":"data['SARS-Cov-2 exam result'] = (data['SARS-Cov-2 exam result'] == 'positive').astype(bool)","d6b3fcdf":"covid_positive = data[data['SARS-Cov-2 exam result'] == True]\nnum_positive = len(covid_positive)\nprint(f'In the dataset, there are {num_positive} entries of patients infected with SARS-CoV-2')\nprint(f'This number corresponds to around {round((num_positive \/ len(data)) * 100)}% of the dataset')","2f45a1bd":"regular_ward = data[data['Patient addmited to regular ward (1=yes, 0=no)'] == 1]\nsemi_intensive = data[data['Patient addmited to semi-intensive unit (1=yes, 0=no)'] == 1]\nicu = data[data['Patient addmited to intensive care unit (1=yes, 0=no)'] == 1]\n\nprint(\"From all patients, regardless of Covid-19 test result: \")\nprint(f'{len(regular_ward)} patients were admitted in a regular ward.')\nprint(f'{len(semi_intensive)} patients were admitted in a semi intensive care unit.')\nprint(f'{len(icu)} patients were admitted in an intensive care unit.')","e0561f76":"pos_regular_ward = covid_positive[covid_positive['Patient addmited to regular ward (1=yes, 0=no)'] == 1]\npos_semi_intensive = covid_positive[covid_positive['Patient addmited to semi-intensive unit (1=yes, 0=no)'] == 1]\npos_icu = covid_positive[covid_positive['Patient addmited to intensive care unit (1=yes, 0=no)'] == 1]\n\nprint(\"From Covid-19 patients: \")\nprint(f'{len(pos_regular_ward)} patients were admitted in a regular ward.')\nprint(f'{len(pos_semi_intensive)} patients were admitted in a semi intensive care unit.')\nprint(f'{len(pos_icu)} patients were admitted in an intensive care unit.')","24b6e649":"pos_admitted = sum(map(len, [pos_regular_ward, pos_semi_intensive, pos_icu]))\ntotal_admitted = sum(map(len, [regular_ward, semi_intensive, icu]))\nproportion_admitted = round((pos_admitted \/ total_admitted) * 100)\n\nprint(f'About {proportion_admitted}% of the admitted patients have tested positive for the virus.')","b8eb29e3":"data = covid_positive\nprint(\"Data Samples: \", len(data))","56784d99":"def multiclass_target(row):\n    check = 0\n    check += 1 if (row['Patient addmited to regular ward (1=yes, 0=no)'] == 1) else 0\n    check += 2 if (row['Patient addmited to semi-intensive unit (1=yes, 0=no)'] == 1) else 0\n    check += 3 if (row['Patient addmited to intensive care unit (1=yes, 0=no)'] == 1) else 0\n    row['target'] = check\n    return row\n\ndata = data.apply(multiclass_target, axis=1)\ndata.head()","1093591b":"data.drop([\n    'Patient addmited to regular ward (1=yes, 0=no)',\n    'Patient addmited to semi-intensive unit (1=yes, 0=no)',\n    'Patient addmited to intensive care unit (1=yes, 0=no)'], axis=1, inplace=True)\ndata.head()","71180a57":"def plot_histogram(df, feature_name, title, params={}):\n    layout = Layout(\n        paper_bgcolor='rgba(0,0,0,0)',\n        plot_bgcolor='rgba(0,0,0,0)',\n        title = title\n    )\n    fig = px.histogram(df, x=feature_name, **params)\n    fig['layout'].update(layout)\n    fig.show()","5db7cfbb":"def percentage_missing(row, total_samples = 5644):\n    missing = row[0] \/ total_samples\n    row['missing'] = missing\n    return row\n\ndef get_missing_df(original_df):\n    null_df = pd.DataFrame(original_df.copy().isnull().sum()).reset_index()\n    null_df = null_df[null_df[0] != 0].reset_index(drop=True)\n    null_df = null_df.apply(percentage_missing, total_samples=len(original_df), axis=1)\n    null_df.columns = ['Exam name', 'Number of missing results', 'Percentage of missing results']\n    null_df = null_df\n    return null_df","f0392198":"missing_total = get_missing_df(data)\nmissing_total.T","cad521b9":"plot_histogram(missing_total, 'Percentage of missing results', 'Missing data histogram', { 'nbins': 20 })","9fb21d9d":"columns_to_remove = missing_total.loc[missing_total['Percentage of missing results'] >= 0.90]['Exam name']\nlen(columns_to_remove)","f208ebb4":"data.drop(columns_to_remove,axis=1,inplace=True)\ndata.shape","07366e63":"for exam in list(data.columns):\n    if exam not in list(missing_total['Exam name']):\n        print(exam)","9456e194":"data.dtypes","f3b1fc9f":"data['Influenza A'].unique()","c6f353c4":"infection_vars = [\n    'Respiratory Syncytial Virus', 'Influenza A', 'Influenza B',\n    'Parainfluenza 1', 'CoronavirusNL63', 'Rhinovirus\/Enterovirus',\n    'Coronavirus HKU1', 'Parainfluenza 3', 'Chlamydophila pneumoniae',\n    'Adenovirus', 'Parainfluenza 4', 'Coronavirus229E', 'CoronavirusOC43',\n    'Inf A H1N1 2009', 'Bordetella pertussis', 'Metapneumovirus',\n    'Parainfluenza 2', 'Influenza B, rapid test', 'Influenza A, rapid test'\n]","08090fe4":"update_mapping = {\n    'not_detected': 0,\n    'negative': 0,\n    'detected': 1,\n    'positive': 1\n}\n\nfor column in infection_vars:\n    data[column] = data[column].map(update_mapping)\n    data[column] = data[column].astype(float)","bb39be87":"def quantile_classification(row):\n    if row['Patient age quantile'] <= 5:\n        return \"Infant\"\n    elif 5 < row['Patient age quantile'] <= 10:\n        return \"Young Adult\"\n    elif 10 < row['Patient age quantile'] <= 15:\n        return \"Adult\"\n    else:\n        return \"Elder\"\n    \ndata['Age Group'] = data.apply(lambda row: quantile_classification(row), axis=1)\ndata.head()","4e1fd3b2":"plot_histogram(data, 'Patient age quantile', 'Patient age quantile histogram',{\"color\":\"Age Group\"})","17f8b9e4":"plot_histogram(data, 'Age Group', 'Patient age group histogram',{\"color\":\"Age Group\"})","dfacac4a":"data[\"Patient age quantile\"].corr(data['target'])","26a2545d":"import plotly.graph_objects as go\n\n\ndf2 = data.groupby([\"Age Group\"])['target'].value_counts()\nz = [[114,1,0,1],[157,4,0,0],[148,15,5,2],[87,16,3,5]] ## copied by hand from df2\n\nfig = go.Figure(data=go.Heatmap(z=z,y=['Infant', 'Young Adult', 'Adult', 'Elder'],\n                                x=['No Admission', 'Regular Ward', 'Semi-Intensive Ward','Intensive Ward'],\n                                hoverongaps = False))\n    \nfig.show()","06f00564":"df2 = data.groupby([\"target\"])['target'].agg('count')\ndf2[0]\/sum(df2)","1bcb64ef":"plot_histogram(data, 'target', 'Target label balancing',{\"color\":\"target\",\"nbins\":4})","edc36b12":"data_distribution = pd.DataFrame(columns=['Data Column', 'Value'])\n\nfor column in data.columns:\n    if column not in missing_total['Exam name'].unique() and column != 'Patient age quantile': continue\n    for value in data[column].values:\n        data_distribution = data_distribution.append({ 'Data Column': column, 'Value': value }, ignore_index=True)","dc4942be":"fig = px.box(data_distribution, x='Data Column', y='Value')\nfig.show()","0720b07f":"### Dealing with missing data\n\n- We see a lot of NaN values in many rows and columns\n- How is the prevalence of missing values?\n- How does it affect the data available?\n- In which cases can we drop or replace it?","51b69a27":"* The data is unbalanced, and it can cause many problems as previously seen in many other Kaggle Kernels.","878f7f78":"* The Patient ID is the feature to identify the patient;\n* The Patient age is a feature that is not easily changeable as the blood exam results, that have an expected range and variate between one exam and another;\n* The features from Hematocrit to Red Blood cell distribution width are related to the blood exam;\n* The features from Neutrophils to Sodium are related to the urine exam;\n* The target feature denotes the labels for the problems we have previously defined;\n* All other features denote results of tests for other infections.","4ef467e5":"### Concerns on missing data\n\n- It's very hard to find usefull strategies to **replace** missing data in the current scenario. \n- It may be even dangerous\n- We will try to proceed without doing so. Let's see what we can figure out.","7b07299a":"### Which columns do not have missing values?\n\n- **Conclusion**: The columns that do not have missing values provide very few information!\n- Age quantile, for now, will be deeply examined","44b6dc70":"### How much is the strengh of the correlation between Age Quantile and Admission (Yes\/No and Care Unit Type)?\n\n- We defined target values increasing according to the related severy care type\n- If age quantile is strongly positive correlated with target, then we have an indication that as older the patient, more intense is the care unit type it is admitted\n- The case for strongly negative correlation, means that younger patients have more intense care unit type as opose to elder patient\n- Anyway, if correlation value is not relevant, both variations are not tied\n- **Conclusion**: Correlation value is equal to 0.22, which is very weak to give such an indication based only on age\n- Let's make some plots to support such conclusion","d1b7f303":"## Examining Age Quantile Information","50efb7d5":"- The original dataset had 111 features (columns)\n- Earlier, we removed 3 of the features that represented labels in the multiclass problem (111 - 3 = 108)\n- We also created a new feature: the target (108 + 1 = 109)\n- From the previous analysis, we have the surprisingly result that from 109 features 104 of them have at least one missing value.\n- Let's plot the missing data frequencies histogram to continue the discussion regarding missing data","ec102fb0":"# Task 2 - Predict admission to general ward, semi-intensive unit or intensive care unit\n\n- This kernel illustrates our efforts on exploratory data analysis and on proposing models to this predictive task\n- We would like more time to work on our solution, we hope it is not a hard deadline!\n- We are approaching the predictive task as a multi-class classification problem\n- Please, check out our kernel about a [COVID-19 Panorama in Brazil](http:\/\/www.kaggle.com\/elloaguedes\/panorama-do-covid-19-no-brasil\/)\n\n**Ello\u00e1 B. Guedes** and **J\u00falio B. Guedes**\n- https:\/\/github.com\/elloa\n- http:\/\/www.elloaguedes.com\n- https:\/\/github.com\/juliobguedes","53c70306":"### Very few positive patients positive to COVID-19 are admited to wards!\n\n- Take a look as follows\n- 90% of the COVID-19 positive patients are not admited to wards","be3e71ac":"### Data Features\n\nAfter analyzing the missing data, it is also interesting to analyze the features and its types. This kind of analysis may show the possibility to apply modifications over the data and have a higher gain when applying machine learning models using it.","efe09164":"* Its interesting to analyze the distribution of each variable with a boxplot.\n* Still exists problems when plotting data related to the infections, probably related to the number of `NaN`s","74375a1a":"### Question: How is the distribution of patient's age based on quantile frequencies?\n\n- Remember: we are considering only COVID-19 positive cases!\n- Patient's age were divided into 20 splits (quantiles)\n- The number of the quantile is proportional to the age of the patient (higher the quantile, the older the patient)\n- Let's colour the quantiles as follows:\n    - Infant: Q < 5\n    - Young Adult: 5 <= Q <= 10\n    - Adult: 10 < Quantile <= 15\n    - Elder: Quantile > 15","8d0a0ffe":"### Conclusion: There were patients admitted to the hospital that had no relation with SARS-CoV-2\n\n- Therefore, there are two problems to address:  \n   1. Given that the patient has no Covid-19, will he\/she be admited? If so, to which care unit?\n   2. Given that the patient has Covid-19, will he\/she be admited? If so, to which care unit?\n- Concerning the title of the challenge \"*Diagnosis of COVID-19 and its clinical spectrum*\", our efforts are concerned on the 2nd task\n- We will filter the data to the subset of COVID-19 positive subjects.","f38ad208":"Considering the example for the `Influenza A` feature, the probable values for this feature are `NaN`, `not_detected` and `detected`. Since there are `NaN` values, it is more interesting to change these features to `0` if `not_detected` and `1` if `detected` than to change them to boolean, because changing `NaN` values to boolean would make necessary to change them to `True` or `False`.","fa000adb":"## Exploratory Data Analysis\n\n- At the very beginning, a few auxiliar functions will be defined, that will later help in the analysis of the data.\n- First, let's look which data is available\n- Then, let's make some questions and get answers from data!","b8c63445":"## Imbalanced classification problem\n\n- When thinking about classification problems, it is interesting to analyze the number of samples in each class\n- From the previous analysis, we can look to this as an imbalanced classification problem\n- The histogram below reinforces our conclusion\n- **Consequence**: We will measure our classifiers using F1-micro score, performance metrics adequate to this scenario","9be81d1d":"#### Organizing the target variable\n\nConsidering that this task aims at predicting the admission type, we will organize the target variable according to the following encoding:\n\n- 0: infected but no admission\n- 1: infected and admitted to a regular ward\n- 2: infected and admitted to an intensive unit\n- 3: infected and admitted to an intensive care unit","c30d05f1":"### Conclusion: There's a lot of missing data and it's hard to deal with!\n\n- From 104 features with missing data, they have, at least, 80% or more missing values!\n- Features in the last bin are useless, since they almost only contain NaN. These features will be dropped out.\n- We then set a threshold of 90% of missing data as a criteria for column removal (66 features)","846b7ec2":"#### Understanding labels\n\nOne thing that was not clear is that if only those patients that the result for COVID-19 was positive were admitted in any unit care. At first glance, the problem proposed in Task \\#2 is a multiclass classification, with 4 classes. Before building labels for this classification, its necessary to enlight the problem earlier commented. Therefore, we will analyze if the number of patients admitted is lower or equal than the number of infected patients."}}