{"cell_type":{"d69d9e35":"code","ce86bf82":"code","5f7baabb":"code","2abdf567":"code","acdbae74":"code","776e123a":"code","20510fe1":"code","e19ca769":"code","45bcf2cd":"code","a2dc0caa":"code","adf95872":"code","9f5a5a5f":"code","e3b2536a":"code","a721fd27":"code","4c1ffc26":"code","80163673":"code","5f5e58cb":"code","779eb9e1":"code","e243f22f":"code","e3f257b9":"code","4238e57e":"code","50489699":"code","209c08a8":"code","ac9ba82b":"code","c7fb5f13":"code","31941ad0":"code","4b37e266":"code","27a79123":"code","2619ad90":"code","2f01dd27":"code","4c6cde72":"code","387ac58d":"code","c751dcdd":"code","2a1fe243":"code","01076ed1":"code","2bb21185":"code","1a13a306":"code","17848315":"markdown","5e05a4dd":"markdown","53742cdb":"markdown","b6599e9c":"markdown","2b8251f9":"markdown","8a85c7a3":"markdown","a99ff5db":"markdown","080deca0":"markdown","9fe0cd6b":"markdown","1669b49a":"markdown","7d28098e":"markdown","b2052599":"markdown","fd016e69":"markdown","8db58f89":"markdown","89b44e0f":"markdown","1309f72e":"markdown","b5eb65ec":"markdown","16c1e4bd":"markdown","fb39bb35":"markdown","4e1b9e09":"markdown","e8051dd2":"markdown","f4165384":"markdown","c4280cc6":"markdown","7c643daf":"markdown","1e734b3d":"markdown","ebd8634f":"markdown","687627c6":"markdown","2601d427":"markdown","e2d5109f":"markdown","ca9a6109":"markdown","e04de58d":"markdown","b75b893c":"markdown","c556847c":"markdown"},"source":{"d69d9e35":"#!pip install xlrd \n!pip install openpyxl \n!pip install pyecharts","ce86bf82":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pyecharts.charts import Map,Geo\nfrom pyecharts import options as opts\nfrom pyecharts.globals import ThemeType\nimport seaborn as sns\nimport warnings\nimport gc\n\nwarnings.filterwarnings(\"ignore\")\nsns.set_style(\"darkgrid\")","5f7baabb":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2abdf567":"MAIN_PATH = \"\/kaggle\/input\/forbes-top-200020172021\/\"\ndef readDataset(year):\n    global MAIN_PATH\n    return pd.read_excel(MAIN_PATH + \"Forbes-{year}.xlsx\".format(year = year))\ndf2017 = readDataset(2017)\ndf2018 = readDataset(2018)\ndf2019 = readDataset(2019)\ndf2020 = readDataset(2020)\ndf2021 = readDataset(2021)","acdbae74":"datasets = ((\"2017\", df2017), (\"2018\", df2018), (\"2019\", df2019), (\"2020\", df2020), (\"2021\", df2021))\ndef printShapes(name, data):\n    return f\"Shape of {name} data: {data.shape}\"\n\nfor name, data in datasets:\n    print(printShapes(name, data))","776e123a":"def checkNACounts(name, data):\n    print(f\"NA Counts for {name} data:\")\n    print(data.isna().sum())\n    print(\"\\n\")\n\nfor name, data in datasets:\n    checkNACounts(name, data)","20510fe1":"df2021 = df2021[df2021[\"Rank\"].isna() == False]\ndf2021 = df2021[df2021[\"Assets\"].isna() == False]","e19ca769":"for name, data in datasets:\n    data.dropna(axis = 0, inplace= True)\n    checkNACounts(name, data)","45bcf2cd":"cols = (\"Sales\", \"Profit\", \"Assets\", \"Market Value\")\n\nfor col in cols:\n    df2020[col] = [i.replace(\",\",'') for i in df2020[col]]\n    df2021[col] = [i.replace(\",\",'') for i in df2021[col]]\n    df2020[col] = [float(i[1:-1]) if \"M\" not in i else float(i[1:-1]) * 0.001 for i in df2020[col]]\n    df2021[col] = [float(i[1:-1]) if \"M\" not in i else float(i[1:-1]) * 0.001 for i in df2021[col]]","a2dc0caa":"prePandemic = df2017.merge(df2018, \n            how = \"inner\", \n            on = \"Name\", \n            suffixes = ('_2017', '_2018')).drop([\"Country_2018\", \"Year_2018\", \"Year_2017\"], axis = 1).\\\n                                                                                                       merge(df2019,\n                                                                                                            how = \"inner\",\n                                                                                                            on = \"Name\").\\\n                                                                                                       drop([\"Country\", \"Year\"], axis = 1).\\\n                                                                                                       rename(columns = {\"Country_2017\": \"Country\",\"Rank\": \"Rank_2019\", \"Sales\": \"Sales_2019\", \"Profit\": \"Profit_2019\", \"Assets\": \"Assets_2019\", \"Market Value\": \"Market Value_2019\"}).\\\n                                                                                                       reset_index(drop = True)","adf95872":"postPandemic = df2020.merge(df2021, \n                            how = \"inner\", \n                            on = \"Name\", \n                            suffixes = ('_2020', '_2021')).\\\n                                                           drop([\"Country_2021\", \"Year_2021\", \"Year_2020\"], axis = 1).\\\n                                                           rename(columns = {\"Country_2020\": \"Country\"}).\\\n                                                           reset_index(drop = True)\npostPandemic[\"Rank_2021\"] = postPandemic[\"Rank_2021\"].astype(int) ","9f5a5a5f":"prePandemic.head()","e3b2536a":"postPandemic.head()","a721fd27":"preIdxs = list()\npostIdxs = list()\nfor idx in range(prePandemic.shape[0]):\n    if prePandemic[\"Name\"].iloc[idx] not in postPandemic[\"Name\"].values:\n        preIdxs.append(idx)\n\nfor idx in range(postPandemic.shape[0]):\n    if postPandemic[\"Name\"].iloc[idx] not in prePandemic[\"Name\"].values:\n        postIdxs.append(idx)\n        \nprePandemic.drop(preIdxs, axis = 0, inplace = True)\npostPandemic.drop(postIdxs, axis = 0, inplace = True)\npostPandemic.drop_duplicates(subset = [\"Name\", \"Country\"], keep= 'last', inplace = True)\nprePandemic = prePandemic.reset_index(drop = True)\npostPandemic = postPandemic.reset_index(drop = True)","4c1ffc26":"print(f\"-- Final Data Shapes --\\nPre-Pandemic: {prePandemic.shape}\\nPost-Pandemic: {postPandemic.shape}\")","80163673":"del df2017\ndel df2018\ndel df2019\ndel df2020\ndel df2021\ngc.collect()","5f5e58cb":"for col in cols:\n    prePandemic[f\"{col}Mean\"] = (prePandemic[f\"{col}_2017\"] + prePandemic[f\"{col}_2018\"] + prePandemic[f\"{col}_2019\"]) \/ 3\n    postPandemic[f\"{col}Mean\"] = (postPandemic[f\"{col}_2020\"] + postPandemic[f\"{col}_2021\"]) \/ 2\n\nprePandemic[\"RankDiff_2019_2017\"] =  prePandemic[\"Rank_2017\"] - prePandemic[\"Rank_2019\"]\npostPandemic[\"RankDiff_2021_2020\"] =  postPandemic[\"Rank_2020\"] - postPandemic[\"Rank_2021\"]","779eb9e1":"prePandemic[\"RankMean\"] = (prePandemic[\"Rank_2017\"] + prePandemic[\"Rank_2018\"] + prePandemic[\"Rank_2019\"]) \/ 3\ntop5PrePandemic = prePandemic.sort_values(by = [\"RankMean\"])[[\"Name\", \"SalesMean\", \"ProfitMean\", \"AssetsMean\", \"Market ValueMean\"]].head()\ntop5PrePandemic[\"AssetsMeanRoot\"] = np.sqrt(top5PrePandemic[\"AssetsMean\"])\ntop5PrePandemic.drop([\"AssetsMean\"], axis = 1, inplace = True)","e243f22f":"top5Countries = top5PrePandemic[[\"Name\"]]\ntop5PostPandemic = top5Countries.merge(postPandemic, how = \"left\", on = \"Name\")[[\"Name\", \"SalesMean\", \"ProfitMean\", \"AssetsMean\", \"Market ValueMean\"]]\ntop5PostPandemic[\"AssetsMeanRoot\"] = np.sqrt(top5PostPandemic[\"AssetsMean\"])\ntop5PostPandemic.drop([\"AssetsMean\"], axis = 1, inplace = True)","e3f257b9":"top5PrePandemic","4238e57e":"top5PostPandemic","50489699":"top5PrePandemic = pd.melt(top5PrePandemic, \n                          id_vars = [\"Name\"], \n                          value_vars = top5PrePandemic.columns[1:],\n                         var_name = \"Attribute\",\n                         value_name = \"Value\")\ntop5PostPandemic = pd.melt(top5PostPandemic, \n                          id_vars = [\"Name\"], \n                          value_vars = top5PostPandemic.columns[1:],\n                         var_name = \"Attribute\",\n                         value_name = \"Value\")","209c08a8":"plt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Name\",\n           y= \"Value\",\n           hue = \"Attribute\",\n           data = top5PrePandemic)\nplt.title(\"Top 5 Companies Financial Status (Billion $) Before Pandemic\")\nplt.subplot(122)\nsns.barplot(x = \"Name\",\n           y= \"Value\",\n           hue = \"Attribute\",\n           data = top5PostPandemic)\nplt.title(\"Top 5 Companies Financial Status (Billion $) After Pandemic\")\nplt.show()","ac9ba82b":"del top5PrePandemic\ndel top5PostPandemic\ngc.collect()","c7fb5f13":"worst5PrePandemic = prePandemic.sort_values(by = [\"RankMean\"], ascending=False)[[\"Name\", \"SalesMean\", \"ProfitMean\", \"AssetsMean\", \"Market ValueMean\"]].head()\nworst5PrePandemic[\"AssetsMeanRoot\"] = np.sqrt(worst5PrePandemic[\"AssetsMean\"])\nworst5PrePandemic.drop([\"AssetsMean\"], axis = 1, inplace = True)","31941ad0":"worst5Countries = worst5PrePandemic[[\"Name\"]]\nworst5PostPandemic = worst5Countries.merge(postPandemic, how = \"left\", on = \"Name\")[[\"Name\", \"SalesMean\", \"ProfitMean\", \"AssetsMean\", \"Market ValueMean\"]]\nworst5PostPandemic[\"AssetsMeanRoot\"] = np.sqrt(worst5PostPandemic[\"AssetsMean\"])\nworst5PostPandemic.drop([\"AssetsMean\"], axis = 1, inplace = True)","4b37e266":"worst5PrePandemic = pd.melt(worst5PrePandemic, \n                          id_vars = [\"Name\"], \n                          value_vars = worst5PrePandemic.columns[1:],\n                         var_name = \"Attribute\",\n                         value_name = \"Value\")\nworst5PostPandemic = pd.melt(worst5PostPandemic, \n                          id_vars = [\"Name\"], \n                          value_vars = worst5PostPandemic.columns[1:],\n                         var_name = \"Attribute\",\n                         value_name = \"Value\")","27a79123":"plt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Name\",\n           y= \"Value\",\n           hue = \"Attribute\",\n           data = worst5PrePandemic)\nplt.title(\"Worst 5 Companies Financial Status (Billion $) Before Pandemic\")\nplt.subplot(122)\nsns.barplot(x = \"Name\",\n           y= \"Value\",\n           hue = \"Attribute\",\n           data = worst5PostPandemic)\nplt.title(\"Worst 5 Companies Financial Status (Billion $) After Pandemic\")\nplt.show()","2619ad90":"del worst5PrePandemic\ndel worst5PostPandemic\ngc.collect()","2f01dd27":"cols = [\"Country\", \"SalesMean\", \"ProfitMean\", \"AssetsMean\", \"Market ValueMean\"]\ngroupedPrePandemicByCountry = prePandemic[cols].groupby(\"Country\").sum().reset_index()\ngroupedPostPandemicByCountry = postPandemic[cols].groupby(\"Country\").sum().reset_index()","4c6cde72":"tempData1 = groupedPrePandemicByCountry.sort_values(by = \"SalesMean\", ascending = False)[:20]\ntempData2 = groupedPostPandemicByCountry.sort_values(by = \"SalesMean\", ascending = False)[:20]\nplt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Country\",\n           y= \"SalesMean\",\n           data = tempData1)\nplt.title(\"Top 20 Countries in Sales Before Pandemic\")\nplt.xticks(rotation=75)\nplt.subplot(122)\nsns.barplot(x = \"Country\",\n           y= \"SalesMean\",\n           data = tempData2)\nplt.title(\"Top 20 Countries in Sales After Pandemic\")\nplt.xticks(rotation=75)\nplt.show()","387ac58d":"tempData1 = groupedPrePandemicByCountry.sort_values(by = \"ProfitMean\", ascending = False)[:20]\ntempData2 = groupedPostPandemicByCountry.sort_values(by = \"ProfitMean\", ascending = False)[:20]\nplt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Country\",\n           y= \"ProfitMean\",\n           data = tempData1)\nplt.title(\"Top 20 Countries in Profit Before Pandemic\")\nplt.xticks(rotation=75)\nplt.subplot(122)\nsns.barplot(x = \"Country\",\n           y= \"ProfitMean\",\n           data = tempData2)\nplt.title(\"Top 20 Countries in Profit After Pandemic\")\nplt.xticks(rotation=75)\nplt.show()","c751dcdd":"tempData1 = groupedPrePandemicByCountry.sort_values(by = \"AssetsMean\", ascending = False)[:20]\ntempData2 = groupedPostPandemicByCountry.sort_values(by = \"AssetsMean\", ascending = False)[:20]\nplt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Country\",\n           y= \"AssetsMean\",\n           data = tempData1)\nplt.title(\"Top 20 Countries in Assets Before Pandemic\")\nplt.xticks(rotation=75)\nplt.subplot(122)\nsns.barplot(x = \"Country\",\n           y= \"AssetsMean\",\n           data = tempData2)\nplt.title(\"Top 20 Countries in Assets After Pandemic\")\nplt.xticks(rotation=75)\nplt.show()","2a1fe243":"tempData1 = groupedPrePandemicByCountry.sort_values(by = \"Market ValueMean\", ascending = False)[:20]\ntempData2 = groupedPostPandemicByCountry.sort_values(by = \"Market ValueMean\", ascending = False)[:20]\nplt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Country\",\n           y= \"Market ValueMean\",\n           data = tempData1)\nplt.title(\"Top 20 Countries in Market Value Before Pandemic\")\nplt.xticks(rotation=75)\nplt.subplot(122)\nsns.barplot(x = \"Country\",\n           y= \"Market ValueMean\",\n           data = tempData2)\nplt.title(\"Top 20 Countries in Market Value After Pandemic\")\nplt.xticks(rotation=75)\nplt.show()","01076ed1":"del tempData1\ndel tempData2\ngc.collect()","2bb21185":"highestComps = postPandemic.sort_values(by = \"RankDiff_2021_2020\", ascending = False)[[\"Name\", \"RankDiff_2021_2020\"]].head(10)\nlowestComps = postPandemic.sort_values(by = \"RankDiff_2021_2020\", ascending = False)[[\"Name\", \"RankDiff_2021_2020\"]].tail(10)\nlowestComps[\"RankDiff_2021_2020\"] = [abs(i) for i in lowestComps[\"RankDiff_2021_2020\"]][::-1]\n\nplt.subplots(nrows = 1, ncols = 2, figsize = (25,13))\nplt.subplot(121)\nsns.barplot(x = \"Name\",\n           y= \"RankDiff_2021_2020\",\n           data = highestComps)\nplt.title(\"10 Companies That Have Most Rank Increase\")\nplt.xticks(rotation=75)\nplt.ylabel(\"Rank Increase\")\nplt.subplot(122)\nsns.barplot(x = \"Name\",\n           y= \"RankDiff_2021_2020\",\n           data = lowestComps)\nplt.title(\"10 Companies That Have Most Rank Decrease\")\nplt.xticks(rotation=75)\nplt.ylabel(\"Rank Decrease\")\nplt.show()","1a13a306":"postPandemicRanksGroupByCountry = postPandemic[[\"Country\", \"RankDiff_2021_2020\"]].groupby(\"Country\").sum().reset_index()\ncountry = list(postPandemicRanksGroupByCountry[\"Country\"])\ndiff = list(postPandemicRanksGroupByCountry[\"RankDiff_2021_2020\"])\nlist1 = [[country[i],diff[i]] for i in range(postPandemicRanksGroupByCountry.shape[0])] \nmap_1 = Map(init_opts=opts.InitOpts(width='1000px', height='460px',theme=ThemeType.ROMANTIC)) \nmap_1.add('Rank Difference', \n list1, \n maptype='world',\n is_map_symbol_show=False) \nmap_1.set_series_opts(label_opts=opts.LabelOpts(is_show=False)) \nmap_1.set_global_opts(visualmap_opts=opts.VisualMapOpts(max_=611,is_piecewise=True,pieces=[\n {\"max\": -2000},\n {\"max\": -2000, \"max\":-1000},\n {\"max\": -1000, \"max\": -500},\n {\"max\": -500, \"max\": 0},\n {\"max\": 0, \"max\": 50},\n {\"max\": 50, \"max\": 150},\n {\"max\": 150, \"max\": 500},\n {\"max\": 500, \"max\": 750},\n {\"max\": 750, \"max\":1500},\n{\"max\": 1500, \"max\":10000},\n{\"max\": 10000, \"max\":20000},]),\n  title_opts=opts.TitleOpts(\n title='Forbes Rank Changes By Countries',\n pos_left='center',\n padding=0,\n item_gap=2,\n title_textstyle_opts= opts.TextStyleOpts(color='Black',\n font_weight='bold',\n font_family='Courier New',\n font_size=30), \n subtitle_textstyle_opts= opts.TextStyleOpts(color='grey',\n font_weight='bold',\n font_family='Courier New',\n font_size=13)), \n legend_opts=opts.LegendOpts(is_show=False))\nmap_1.render_notebook()","17848315":"#### Top 20 Countries in Profit","5e05a4dd":"I planned to keep the data in two different ways as pre and post pandemic. However, in order to make the analysis more efficient and to show the real impact of the pandemic on companies, I kept the companies in the Top 2000 list both before and after the pandemic. This means some data clipping, but I think that this way of analysis will be more useful.","53742cdb":"As can be seen, when we examine the companies in the top 5 in 2019, the year before the pandemic, we see that these companies were not affected much by the Pandemic. Although some companies experience small decreases, they continue to grow in Market Value, Sales, Profit and Assets in the pandemic.","b6599e9c":"### Correction of Columns Containing Currency (2020-2021)","2b8251f9":"In this section, besides the year-based analysis, I added some new columns to better see the effects of the pandemic. These are the average of features such as Sales and Profit before and after the pandemic, and the rank differences between 2017-2019 and 2020-2021.","8a85c7a3":"### Missing Values","a99ff5db":"#### Top 20 Country in Sales","080deca0":"As seen in the graphics, United States, which was in a very good condition before the pandemic, continues to grow after the pandemic. I think that the fact that people turn to things like phones, social media, online shopping, games more during the pandemic and that the United States has very important companies in these matters makes them more prominent. Another remarkable thing is that with the pandemic, China is getting better in this area and surpassing Japan. Apart from this, although the first three countries have developed further during the pandemic period, other countries also count the pandemic where they are.","9fe0cd6b":"### Effect Worst 5 Companies Prepandemic","1669b49a":"<center><img src='https:\/\/www.ceps.eu\/wp-content\/uploads\/2020\/03\/shutterstock_1679486191-1300x731.jpg' width=\"750\"><\/center>","7d28098e":"#### Rank Change by Countries","b2052599":"## Feature Extraction","fd016e69":"## Conclusion","8db58f89":"### Analysis Company Ranks","89b44e0f":"In this part, I visualized the rank difference by country using the visualization of [Arjun Prasad Sarkhel](https:\/\/www.kaggle.com\/arjunprasadsarkhel)'s \n[Forbes Global 2000 Visualization in World Map](https:\/\/www.kaggle.com\/arjunprasadsarkhel\/forbes-global-2000-visualization-in-world-map) notebook.","1309f72e":"The coronavirus pandemic, which has taken the whole world under its influence, has caused great changes in our lives in the last 2 years. Apart from precautionary rules such as staying at homes, paying attention to social distance, walking with a mask, technology has also placed at a key point in our lives with things such as online meetings, online shopping, online games for fun. Of course, not only people were affected by this pandemic. While most companies suffered great losses in their revenues due to the pandemic, some companies also achieved significant growth thanks to the pandemic. In this notebook, I analyzed how the pandemic affected companies in the Forbes Global Top 2000 list between 2017-2021.","b5eb65ec":"As seen above, companies in the lower ranks in 2019 continue to grow during the pandemic process. Kesko has achieved a strong rise in Market value during the pandemic process. Although other companies have had a somewhat more stable pandemic period, they seem not to have been affected much by the pandemic. Although we look at a small number of companies individually, the 2000 companies that are at the top of the Forbes list during the pandemic seem to be overcoming this process strongly.","16c1e4bd":"## Data Analysis And Visualization","fb39bb35":"Making a huge difference to its competitors in terms of market value, the US has grown in this area during the pandemic period. Last year, Apple's, Microsoft's, Alphabet's gaining a significant market value, and the development of a COVID-19 vaccine by companies such as Pfizer put the US ahead in this regard. While China and Japan are experiencing low levels of growth, other countries are standing still in the pandemic.","4e1b9e09":"## Import Libraries","e8051dd2":"#### Rank Change by Companies","f4165384":"#### Top 20 Countries in Assets","c4280cc6":"### Split Data to Pre-Post Pandemic","7c643daf":"# Forbes Global Top 2000 Companies Pre-Post Pandemic Analysis","1e734b3d":"As a result, when we examined the data, we saw that the pandemic had a serious impact on the financial situation of the companies. Rather than being badly affected by this pandemic, countries with technology-intensive companies such as the US, China, and Japan have, on the contrary, been more profitable. I attribute this to the fact that people use technology more while they stay at home during the pandemic period. Other countries, on the other hand, experienced decreases, although not serious, during the pandemic period.\n\nAt this stage, I tried to organize, visualize and analyze the data. As in this [topic](https:\/\/www.kaggle.com\/arjunprasadsarkhel\/forbes-top-200020172021\/discussion\/255914), I plan to add different analyzes when industry data is added in the futures. I hope it was a useful notebook.","ebd8634f":"### Means by Countries(Top 20 Countries)","687627c6":"## Load Data \/ Split Data to Pre-Post Pandemic","2601d427":"Since the number of missing values is not very high, I decided to drop them. As another idea, I thought of filling it with a mean or a median. But I gave up because these methods may cause false information. If you have a different suggestion, I can implement it. You can specify in the comments. (Maybe regression models can be built and these missing values can be estimated, but I don't know how accurate it will be.)","e2d5109f":"In terms of profit, the first US, China and Japan are well ahead of other countries. It can be said that during the pandemic period, China has developed more in Profit. Although other countries lost Profit due to the pandemic blow, the most striking one is the United Kingdom.","ca9a6109":"If we examine the countries according to their assets, we can see an increase in the first 6 countries and a tremendous increase in the first 3 countries. It is very clear that the US, China and Japan are experiencing growth in this area independently of other countries.","e04de58d":"### Effect Top 5 Companies Prepandemic","b75b893c":"#### Top 20 Countries in Market Value","c556847c":"As you can see, there is more data in 2021. To examine the implications of this finding, we must dig deeper. I think this is an issue with missing values."}}