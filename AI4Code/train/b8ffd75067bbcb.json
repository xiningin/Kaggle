{"cell_type":{"b14d028c":"code","85eeb6b1":"code","33c778ea":"code","3f16a5c5":"code","609e8ea2":"code","d080f671":"code","ac3e0cd4":"code","a0b06641":"code","97abe163":"code","f6a59b1f":"code","c9e2089f":"code","fc3a8dc2":"code","78e1a5bf":"code","c0d73790":"code","7ec2a3b8":"code","e2860ab8":"code","0fd4af94":"code","8787e6b3":"code","3fe3afff":"code","ea9a867a":"code","3348f0c4":"code","3675d7d6":"code","0371eec8":"code","74ead47c":"markdown","89fadbbb":"markdown","62dd005f":"markdown","b971f857":"markdown","72f6dceb":"markdown","357c1564":"markdown","44bdea73":"markdown","32890ef5":"markdown","5ec8ce51":"markdown"},"source":{"b14d028c":"!pip install sktime","85eeb6b1":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sktime.datasets import load_airline\n\ny = load_airline()\n\nprint(y)\nprint(type(y))\nprint(y.describe())","33c778ea":"print(y.index)\nprint()\nprint(y.values)","3f16a5c5":"x = np.arange(len(y.values))\nxticks = np.arange(0,145,12)\nxlabels = np.arange(1949,1962)\n\nsplit = -24; junction = [split-1, split]\nx_train, y_train = x[:split], y.values[:split]\nx_test, y_test = x[split:], y.values[split:]\n\n\nfigsize = (16,8); loc='upper left'\nplt.figure(figsize=figsize)\nplt.plot(x_train, y_train, label='Historique')\nplt.plot(x_test, y_test, ':',c='tab:blue', label='\u00c0 pr\u00e9dire')\nplt.plot(x[junction], y.values[junction], ':', c='tab:blue')\nplt.xticks(xticks, xlabels, rotation=0, size=16)\nplt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.title('Passagers toutes compagnies a\u00e9riennes 1949-1960',size=16);plt.show()","609e8ea2":"z = np.polyfit(x_train,y_train,1)\nz = np.poly1d(z)\nprint(z)\n\nplt.figure(figsize=figsize)\nplt.plot(y_train, label='Historique')\nplt.plot(x,z(x), '--',c='tab:green', label='Tendance constat\u00e9e')\nplt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.show()","d080f671":"z2 = np.polyfit(x_train,y_train,2)\nz2 = np.poly1d(z2)\nprint(z2)\n\nplt.figure(figsize=figsize)\nplt.plot(y.values[:-24], label='Historique')\nplt.plot(x,z2(x), '--',c='tab:green', label='Tendance constat\u00e9e')\nplt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.show()","ac3e0cd4":"z3 = np.polyfit(x_train,y_train,3)\nz3 = np.poly1d(z3)\nprint(z3)\n\nplt.figure(figsize=figsize)\nplt.plot(y_train, label='Historique')\nplt.plot(x,z3(x), '--',c='tab:green', label='Tendance constat\u00e9e')\nplt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.show()","a0b06641":"# Additive Linear De-Trending\n\ny_detrend = y_train - z(x_train)\n\nz_detrend = np.polyfit(x_train,y_detrend,1)\nz_detrend = np.poly1d(z_detrend)\nprint(z_detrend)\n\nplt.figure(figsize=figsize); ylim = (-100,400)\nplt.plot(y_detrend, label='Historique modifi\u00e9')\nplt.plot(x,z_detrend(x), '--', c='tab:green')\nplt.ylim(ylim);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","97abe163":"# Additive Polynomial De-Trending\n\ny_detrend_2 = y_train - z2(x_train)\n\nz_detrend_2 = np.polyfit(x_train,y_detrend_2,1)\nz_detrend_2 = np.poly1d(z_detrend_2)\nprint(z_detrend_2)\n\nplt.figure(figsize=figsize)\nplt.plot(y_detrend_2, label='Historique modifi\u00e9')\nplt.plot(x,z_detrend_2(x), '--', c='tab:green')\nplt.ylim(ylim);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","f6a59b1f":"# Multiplicative Linear De-Trending\n\ny_detrend_mul = y_train \/ z(x_train)\n\nz_detrend_mul = np.polyfit(x_train,y_detrend_mul,1)\nz_detrend_mul = np.poly1d(z_detrend_mul)\nprint(z_detrend_mul)\n\nplt.figure(figsize=figsize); ylim_mul = (0,5)\nplt.plot(y_detrend_mul, label='Historique modifi\u00e9')\nplt.plot(x,z_detrend_mul(x), '--', c='tab:green')\nplt.ylim(ylim_mul);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","c9e2089f":"# Multiplicative Polynomial De-Trending 2nd Degree\n\ny_detrend_2_mul = y_train \/ z2(x_train)\n\nz_detrend_2_mul = np.polyfit(x_train,y_detrend_2_mul,1)\nz_detrend_2_mul = np.poly1d(z_detrend_2_mul)\nprint(z_detrend_2_mul)\n\nplt.figure(figsize=figsize)\nplt.plot(y_detrend_2_mul, label='Historique modifi\u00e9')\nplt.plot(x,z_detrend_2_mul(x), '--', c='tab:green')\nplt.ylim(ylim_mul);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","fc3a8dc2":"# Multiplicative Polynomial De-Trending 3rd Degree\n\ny_detrend_3_mul = y_train \/ z3(x_train)\n\nz_detrend_3_mul = np.polyfit(x_train,y_detrend_3_mul,1)\nz_detrend_3_mul = np.poly1d(z_detrend_3_mul)\nprint(z_detrend_3_mul)\n\nplt.figure(figsize=figsize)\nplt.plot(y_detrend_3_mul, label='Historique modifi\u00e9')\nplt.plot(x,z_detrend_3_mul(x), '--', c='tab:green')\nplt.ylim(ylim_mul);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","78e1a5bf":"# Seasonality Period\nsp = 12\nrep = len(y_train)\/sp # number of \"seasons\" repetitions, = number of years\n# y_season = y.values +0 # +0 to avoid reference assignment\ny_season = y_detrend_2_mul +0\ny_season_w = y_detrend_2_mul +0\n\nweights = np.ones(int(rep))\nweights = np.array( [0.005,0.01,0.02,0.04,0.08,0.16,0.32,0.64,1.28,2.56] )\n# weights = np.arange(0.2,2.2,0.2) \nprint('weights:', weights.shape, weights)\n\nprint('means:')\n# for each month\nfor i in np.arange(sp) :\n    #print(i)\n    j = 0\n    x_index = []\n   \n    # for each year that this month appears\n    for j in np.arange( (len(y_season)-(i))\/sp ):\n        #print(j)\n        #print(i + int(j)*sp)\n        x_index.append( i+int(j)*sp )\n    #print(x_index)\n    #print(y_detrend_2[x_index])\n    \n    # Compute the mean\n    # y_season[x_index] = y_detrend_2_mul[x_index].mean() +0\n    # y_season[x_index] = y_season[x_index].mean() +0\n    y_season[x_index] = np.average( y_season[x_index])\n    y_season_w[x_index] = np.average( y_season_w[x_index], weights=weights)\n    print(y_season[x_index][0])\n    \n# Prolong the seasonnality to 2 future years\nprint(y_season.shape)\ny_season = np.hstack((y_season,np.zeros(2*sp)))\ny_season_w = np.hstack((y_season_w,np.zeros(2*sp)))\nprint(y_season.shape)\ny_season[len(y_season)-2*sp:] = y_season[:2*sp]\ny_season_w[len(y_season_w)-2*sp:] = y_season_w[:2*sp]\n\n# Adjust y_season based on most recent train data difference with corresponding season value:\n# y_season_ad = \ny_season_diff = y_detrend_2_mul[-1] - y_season[split-1]\ny_season_ad = y_season + y_season_diff\n\ny_season_diff_w = y_detrend_2_mul[-1] - y_season_w[split-1]\ny_season_w_ad = y_season_w + y_season_diff_w\n\nplt.figure(figsize=figsize); ylim_s=(0,2)\nplt.subplot(211)\nplt.plot(y_detrend_2_mul, label='Historique modifi\u00e9')\nplt.plot(y_season, label='Saisonnalit\u00e9')\n#plt.plot(x,z_detrend_4_mul(x), '--', c='tab:green')\nplt.ylim(ylim_s);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16})\n\nplt.subplot(212)\nplt.plot(y_detrend_2_mul, label='Historique modifi\u00e9')\nplt.plot(y_season_w, label='Saisonnalit\u00e9 Pond\u00e9r\u00e9e')\n#plt.plot(x,z_detrend_4_mul(x), '--', c='tab:green')\nplt.ylim(ylim_s);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()\n\n# Saisonnalit\u00e9 Pond\u00e9r\u00e9e Ajust\u00e9e:\n\n# plt.figure(figsize=figsize); plt.subplot(211)\n# plt.plot(y_detrend_2_mul, label='Historique modifi\u00e9')\n# plt.plot(y_season_w_ad, label='Saisonnalit\u00e9 Pond\u00e9r\u00e9e Ajust\u00e9e')\n# #plt.plot(x,z_detrend_4_mul(x), '--', c='tab:green')\n# plt.ylim(ylim_s);plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","c0d73790":"# ****Pr\u00e9visions (facilit\u00e9es par l'annulation de la Tendance)****","7ec2a3b8":"# plt.figure(figsize=figsize)\n# plt.plot(y_detrend_4_mul[:-24], label='historique modifi\u00e9')\n# plt.plot(x[-24:], y_detrend_4_mul[-24:], label='pr\u00e9visions sans tendance')\n# plt.plot(x,z_detrend_4_mul(x), '--', label='tendance modifi\u00e9e')\n# plt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","e2860ab8":"# Additive\n\n# y_retrend_2 = y_detrend_2 + z2(x)\n# z_retrend_2 = np.polyfit(x,y_retrend_2,2)\n# z_retrend_2 = np.poly1d(z_retrend_2)\n#print(z_retrend_2)\n\n\n# Multiplicative (history)\n\n# y_retrend_4_mul = y_detrend_4_mul * z4(x)\n# z_retrend_4_mul = np.polyfit(x,y_retrend_4_mul,4)\n# z_retrend_4_mul = np.poly1d(z_retrend_4_mul)\n# print(z_retrend_4_mul)\n\n\n# Multiplicative From Seasonnality\ny_retrend_2_mul = y_detrend_2_mul * z2(x_train)\ny_season_retrend_2_mul = y_season_ad * z2(x)\ny_season_retrend_2_mul_unadj = y_season * z2(x)\ny_season_w_retrend_2_mul = y_season_w_ad * z2(x)\ny_season_w_retrend_2_mul_unadj = y_season_w * z2(x)\nz_retrend_2_mul_unadj = np.poly1d( np.polyfit(x,y_season_retrend_2_mul_unadj,2) )\nz_retrend_2_mul = np.poly1d( np.polyfit(x,y_season_retrend_2_mul,2) )\nz_retrend_w_2_mul = np.poly1d( np.polyfit(x,y_season_w_retrend_2_mul,2) )\nz_retrend_w_2_mul_unadj = np.poly1d( np.polyfit(x,y_season_w_retrend_2_mul_unadj,2) )\nprint(z_retrend_2_mul)\n\ny_retrend_3_mul = y_detrend_3_mul * z3(x_train)\ny_season_retrend_3_mul = y_season_ad * z3(x)\nz_retrend_3_mul = np.polyfit(x,y_season_retrend_3_mul,3)\nz_retrend_3_mul = np.poly1d(z_retrend_3_mul)\n# print(z_retrend_3_mul)\n\n\n\n# plt.figure(figsize=figsize)\n# plt.plot(y_train, label='Historique')\n# plt.plot(x, y_season_retrend_2_mul, label='Pr\u00e9visions avec tendance')\n# plt.plot(x,z_retrend_2_mul(x), '--', c='tab:green',label='Tendance r\u00e9-appliqu\u00e9e')\n# plt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\n# plt.legend(loc=loc, prop={'size':16});plt.show()\n\nplt.figure(figsize=figsize)\nplt.plot(y_train, label='Historique')\nplt.plot(x_test,y_test,':',c='tab:blue', label=\"\u00c0 pr\u00e9dire\")\nplt.plot(x_test, y_season_w_retrend_2_mul_unadj[split:], c='tab:orange', label='Pr\u00e9visions avec tendance')\nplt.plot(x[junction],[y_train[-1], y_season_w_retrend_2_mul_unadj[split] ])\nplt.plot(x[junction],[y_train[-1], y_test[0] ],':',c='tab:blue')\nplt.plot(x,z_retrend_2_mul(x), '--', c='tab:green',label='Tendance r\u00e9-appliqu\u00e9e')\nplt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.show()\n\n\n# plt.figure(figsize=figsize)\n# plt.plot(y_train, label='Historique')\n# plt.plot(x_test,y_test,':',c='tab:blue', label=\"A pr\u00e9dire\")\n# plt.plot(x_test, y_season_retrend_3_mul[split:], c='tab:orange', label='Pr\u00e9visions avec tendance')\n# plt.plot(x[junction],[y_train[-1], y_season_retrend_3_mul[split] ])\n# plt.plot(x,z_retrend_3_mul(x), '--', c='tab:green',label='Tendance diff\u00e9rente')\n# plt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\n# plt.legend(loc=loc, prop={'size':16});plt.show()\n\n# plt.figure(figsize=figsize)\n# plt.plot(y_retrend_2_mul[:-24], label='Historique')\n# plt.plot(x[-24:], y_season_retrend_4_mul[-24:], c='tab:orange', label='Pr\u00e9visions avec tendance')\n# plt.plot([x[-25], x[-24]],[y_retrend_4_mul[-25], y_season_retrend_4_mul[-24]])\n# plt.plot(x,z_retrend_4_mul(x), '--', c='tab:green',label='Tendance r\u00e9-appliqu\u00e9e')\n# plt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\n# plt.legend(loc=loc, prop={'size':16});plt.show()","0fd4af94":"# ****Saisonnalit\u00e9 Multiplicative****","8787e6b3":"# Work in Progress\n\n# adjust = 0 # to avoid negative values when computing coefficients\n# y_season_coef = np.abs(y_detrend_2 +adjust) \/ np.abs(y_season +adjust)\n# print(y_season_coef[:12])\n# print(y_season_coef[:12].mean())\n\n# #for each year\n# for i in np.arange(rep):\n#     a,b = int(i*sp), int((i+1)*sp)\n#     #print(a,b)\n#     y_season_coef[a:b] = y_season_coef[a:b].mean()\n# print(y_season_coef[0])\n# y_season_mul = y_season * y_season_coef\n\n# plt.figure(figsize=figsize)\n# plt.plot(y_detrend_2[:-24], label='historique modifi\u00e9')\n# plt.plot(y_season_mul[:], label='saisonnalit\u00e9 multiplicative')\n# plt.plot(x,z_detrend_2(x), '--', label='tendance modifi\u00e9e')\n# plt.xticks([],[]);plt.legend(loc=loc, prop={'size':16});plt.show()","3fe3afff":"# z_man = -2.25*z2 + 3.25*z2(x[-24]) # not working with adjusted season\nz_man = -2.25*z_retrend_w_2_mul_unadj + 3.25*z_retrend_w_2_mul_unadj(x[-24])\n\ny_man = y_season_w * z_man(x)\n\nplt.figure(figsize=figsize)\nplt.plot(y_train, label='Historique')\nplt.plot(x_test, y_man[split:], label='Pr\u00e9visions')\nplt.plot(x[junction],[y_train[-1], y_man[split] ], c='tab:orange')\nplt.plot(x_train,z_retrend_w_2_mul_unadj(x_train), '--', c='tab:green', label='Tendance constat\u00e9e')\nplt.plot(x_test,z_man(x_test), 'r--', label='Tendance pr\u00e9vue')\nplt.plot(x[junction], [ z_retrend_w_2_mul_unadj(x[split-1]), z_man(x[split]), ], '--', c='tab:green')\nplt.xticks(xticks, xlabels, rotation=0, size=16);plt.yticks(size=16)\nplt.legend(loc=loc, prop={'size':16});plt.show()","ea9a867a":"# Multiplicative De-Seasonning\n\ny_deseason = y_detrend_2_mul - y_season[:split]\n\nplt.figure(figsize=figsize); ylim_res = (0.5,3); ylim_res_2 = (0.5,2); ylim_res = (-0.15, 1.5)\n\nax1 = plt.subplot(211)\nplt.plot(y_retrend_2_mul, label='Historique')\n# plt.plot(x_test, y_season_retrend_2_mul[split:],label='Pr\u00e9visions Ajust\u00e9es')\nplt.plot(y_season_retrend_2_mul_unadj[:split],label='Pr\u00e9visions')\nplt.plot(x,z_retrend_2_mul(x), '--', c='tab:green',alpha=0)\nplt.xticks([],[]);plt.yticks([],[]);plt.legend(loc=loc, prop={'size':16});\n\nplt.subplot(212,sharex=ax1)\nplt.plot(y_deseason,'r', label='R\u00e9sidus')\n# plt.plot(x[:], y_season_retrend_4_mul[:], label='pr\u00e9visions avec tendance')\n# plt.plot(x,z_retrend_4_mul(x), '--', label='tendance constat\u00e9e')\nplt.ylim(ylim_res);plt.xticks([],[]);plt.yticks([],[])\nplt.legend(loc=loc, prop={'size':16});\nplt.show()","3348f0c4":"# from sktime.transformations.series.detrend import Deseasonalizer\n# deseason = Deseasonalizer(sp=sp, model='multiplicative')\n\n# adjust = 100\n\n# y_detrend_2_s = pd.Series(data=y.values, index=np.arange(len(y_season)))\n# y_deseason = deseason.fit_transform(y_detrend_2_s)\n# tmp = y_detrend_2_s - y_deseason\n# plt.plot(y_detrend_2_s)\n# plt.plot(tmp)\n# plt.plot(y_deseason)","3675d7d6":"# adjust = 200\n\n# y_detrend_2_s = pd.Series(data=y.values)\n# y_deseason = deseason.fit_transform(y_detrend_2_s)\n# tmp = y_detrend_2_s - y_deseason\n# plt.plot(y_detrend_2)\n# plt.plot(tmp)\n# plt.show()\n# plt.plot(y_deseason-z2(x))","0371eec8":"plt.figure(figsize=(20,12)); loc='upper left';\nax1=plt.subplot(321)\nplt.plot(y_train, label='Historique')\nplt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\n\nplt.subplot(322, sharex=ax1,sharey=ax1)\nplt.plot(y_train)\nplt.plot(z2(x), '--', c='tab:green', label='Tendance')\nplt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\n\n# plt.plot(y_deseason[:-24], label='historique d\u00e9-saisonn\u00e9')\n# plt.plot(x[:], y_season_retrend_4_mul[:], label='pr\u00e9visions avec tendance')\n# plt.plot(x,z_retrend_4_mul(x), '--', label='tendance constat\u00e9e')\n# plt.ylim(ylim_res);plt.xticks([],[]);plt.legend()\n\nplt.subplot(323, sharex=ax1)\nplt.plot(y_detrend_2_mul, label='De-Trend')\nplt.ylim(ylim_res);plt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\n\nplt.subplot(324, sharex=ax1)\nplt.plot(y_detrend_2_mul)\nplt.plot(x_test,y_season_w[split:],label='Saisonnalit\u00e9')\nplt.ylim(ylim_res);plt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\n\nplt.subplot(325, sharex=ax1)\nplt.plot(y_train)\n# plt.plot(x_test, y_test,'--',c='tab:blue')\nplt.plot(x_test, y_season_w_retrend_2_mul_unadj[-24:],label='Mod\u00e8le')\nplt.plot(x[junction],[y_train[-1], y_season_w_retrend_2_mul_unadj[split] ])\nplt.plot(z2(x), '--', c='tab:green')\nplt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\n\nplt.subplot(326, sharex=ax1)\nplt.plot(y_deseason, 'r', label='R\u00e9sidus')\nplt.ylim(ylim_res);plt.legend(loc=loc, prop={'size':16});plt.xticks([],[]);plt.yticks([],[])\nplt.tight_layout();plt.show()","74ead47c":"# ****Tendance Lin\u00e9aire****","89fadbbb":"# ****Tendance Polynomiale****","62dd005f":"# ****Vue d'Ensemble****","b971f857":"# ****Graphique des Donn\u00e9es****","72f6dceb":"# ****Saisonnalit\u00e9 Pond\u00e9r\u00e9e****","357c1564":"# ****Alt\u00e9ration Manuelle de la Tendance des Pr\u00e9dictions****\n### (suite \u00e0 l'annonce d'un confinement par ex.)","44bdea73":"# ****De-Seasonning ****","32890ef5":"# ****De-Trending****","5ec8ce51":"# ****Re-Trending apr\u00e8s Pr\u00e9visions****"}}