{"cell_type":{"ff87542b":"code","a0f447ee":"code","920300a9":"code","7cd8da46":"code","8ff15ee9":"code","4cb8e2a6":"code","eeea6208":"code","3b6c129e":"code","8b1c139c":"markdown"},"source":{"ff87542b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport pydicom\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tqdm import tqdm","a0f447ee":"train_path='\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/train'\ntest_path='\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/test'\ntrain_df=pd.read_csv('\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/train.csv')\nsample_sub_df=pd.read_csv('\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/sample_submission.csv')\ntrain_df.shape","920300a9":"train_df.head(10)","7cd8da46":"data=train_df['class_name'].value_counts()\ndata","8ff15ee9":"pie,ax=plt.subplots(figsize=[10,10])\nlbl=data.keys()\nplt.pie(x=data,autopct='%1.1f%%',labels=lbl, pctdistance=0.6)\nplt.title(\"Class Distribution\", fontsize=14);","4cb8e2a6":"bbox_classes=[]\nimage_ids=train_df['image_id'].unique()\ncolumns=['class_name','x_min','y_min','x_max','y_max']\nfor id_ in tqdm(image_ids):\n    bbox_classes.append(train_df[columns][train_df['image_id']==id_].values)","eeea6208":"def plot_xray(image_id,bbox):\n    global class_names\n    class_names=list(train_df['class_name'].unique())\n    colors = plt.cm.hsv(np.linspace(0, 1, len(class_names))).tolist()\n    fig=plt.figure(figsize=(10,10))\n    current_axis = plt.gca()\n    img=pydicom.read_file(os.path.join(train_path,image_id+'.dicom')).pixel_array\n    plt.imshow(img,cmap='gray')\n    for box in bbox:\n        xmin=box[1]\n        ymin=box[2]\n        xmax=box[3]\n        ymax=box[4]\n        label=box[0]\n        color = colors[class_names.index(label)]\n        current_axis.add_patch(plt.Rectangle((xmin, ymin), xmax-xmin, ymax-ymin, \n                                             color=color, fill=False, linewidth=2))\n        \n        current_axis.text(xmin, ymin, label, size='x-large', \n                          color='white', bbox={'facecolor':'green', 'alpha':1.0})","3b6c129e":"plot_xray(image_ids[8],bbox_classes[8])\nplot_xray(image_ids[6],bbox_classes[6])","8b1c139c":"**Plotting**\n>Plot xray with bounding boxes"}}