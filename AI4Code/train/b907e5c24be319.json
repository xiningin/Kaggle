{"cell_type":{"ee980344":"code","e8059823":"code","5575118f":"code","37412f3e":"code","f0b62059":"code","02f099fd":"code","fa5515d9":"code","7c260da2":"code","856d30fb":"markdown","67561b96":"markdown","20344534":"markdown","2199085e":"markdown","83f4e5ae":"markdown","ee873f2c":"markdown","e807a895":"markdown"},"source":{"ee980344":"#!pip install datatable\n\nimport riiideducation\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n#import datatable as dt\nfrom sklearn import metrics","e8059823":"%%time\n\ndtypes ={'row_id': 'int64', \n         'timestamp': 'int64', \n         'user_id': 'int32', \n         'content_id': 'int16', \n         'content_type_id': 'int8',\n         'task_container_id': 'int16', \n         'user_answer': 'int8', \n         'answered_correctly': 'int8', \n         'prior_question_elapsed_time': 'float32', \n         'prior_question_had_explanation': 'boolean',\n        }\n\n#train_df = dt.fread('..\/input\/riiid-test-answer-prediction\/train.csv').to_pandas()\ndata_df = pd.read_csv('..\/input\/riiid-test-answer-prediction\/train.csv', nrows=150000, dtype=dtypes)\nprint(\"All data:\", data_df.shape)\n\ntrain_df = data_df[:100000]\nvalid_df = data_df[100000:]\nprint(\"Train:\", train_df.shape)\nprint(\"Valid:\", valid_df.shape)\n\ntrain_df = train_df.drop(train_df[train_df['answered_correctly']==-1].index)","5575118f":"def get_input(df):\n    return df[['timestamp', 'content_id', 'content_type_id', \n                       'task_container_id', 'prior_question_elapsed_time', \n                       'prior_question_had_explanation']].fillna(0)\n\ndef get_labels(df):\n    return df['answered_correctly']","37412f3e":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier()\n\ndef train_model():\n    model.fit(get_input(train_df), get_labels(train_df))\n    train_score = model.score(get_input(train_df), get_labels(train_df))\n    valid_score = model.score(get_input(valid_df), get_labels(valid_df))\n    print('Train score:', train_score)\n    print('Valid score:', valid_score)","f0b62059":"model.fit(get_input(train_df), get_labels(train_df))","02f099fd":"train_score = model.score(get_input(train_df), get_labels(train_df))\nvalid_score = model.score(get_input(valid_df), get_labels(valid_df))\nprint('Train score:', train_score)\nprint('Valid score:', valid_score)","fa5515d9":"env = riiideducation.make_env()\niter_test = env.iter_test()","7c260da2":"for (test_df, sample_prediction_df) in iter_test:\n    test_df['answered_correctly'] = model.predict(get_input(test_df))\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])","856d30fb":"## Random Forest Model","67561b96":"And we check the accuracy:","20344534":"Define some functions to get test data and labels.","2199085e":"Get the training data. It's large, so this may take a while.","83f4e5ae":"Now we train our model:","ee873f2c":"# Riid! Correct Answers Prediction\n\nWe need pandas, numpy, datatable, and a few other libraries.\nWe also need riiideducation for this particular competititon.","e807a895":"## Test (Validate) Model\n\nWe can start an environment and go through iter_test exactly once in the notebook. This is a dummy prediction, to test a submission."}}