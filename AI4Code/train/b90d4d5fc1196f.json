{"cell_type":{"2c64c203":"code","da6fc00d":"code","3b771278":"code","5795ab9e":"code","34a0b2ea":"code","b4f20723":"code","fcb3a853":"code","711f4531":"code","59979778":"code","f561b82d":"code","361f13a7":"code","2ad23538":"code","3402c2ce":"code","95bc703e":"code","a8927a46":"code","76c0e30b":"code","924f6055":"code","0d9627ba":"code","e316d7f0":"code","89408235":"code","e77760e2":"code","119cabee":"code","5c35e11c":"code","120de56c":"code","21bd8e07":"code","dcaba36b":"code","3c4dbede":"code","8b66fc91":"code","28538af9":"code","7c362d88":"code","87f79a37":"code","81b0fb81":"code","ce8c0e51":"code","253f4885":"code","3294a012":"code","bdf86f58":"code","71274875":"code","135d0140":"code","d51640a4":"code","773074bc":"code","d140032f":"code","50b3e6ee":"code","9d22a020":"code","8f53db62":"code","a9b683d1":"code","3b5eef7c":"code","e5136b43":"code","b23246af":"code","16569fe1":"code","d20c35ff":"code","df611ffd":"code","26973bc3":"code","c1e8f8de":"markdown","78cf216a":"markdown","89e3645a":"markdown","9f19a429":"markdown","0edc8755":"markdown","de8f82da":"markdown","0f863b69":"markdown","f14dd409":"markdown","2e109ee0":"markdown","c451ffba":"markdown","d2ca7ad2":"markdown","8f578c56":"markdown","94318bd0":"markdown","d982006f":"markdown","bc4eedfd":"markdown","efeb0d75":"markdown","d8607707":"markdown","808de9ef":"markdown","26b0a510":"markdown","4680a4ee":"markdown","59a31a50":"markdown","596a1dc3":"markdown","a9200f0c":"markdown","7bc9e8be":"markdown","ac158e89":"markdown","b6e2b95d":"markdown"},"source":{"2c64c203":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib.image as mpimg\nimport math\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom matplotlib.offsetbox import (TextArea, DrawingArea, OffsetImage,\n                                  AnnotationBbox)\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom IPython.display import Image\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA\nsr_ = Style.RESET_ALL","da6fc00d":"custom_colors = [\"#ff6b6b\",\"#95d5b2\",\"#a2d2ff\",\"#72efdd\"]\ncustomPalette = sns.set_palette(sns.color_palette(custom_colors))","3b771278":"sns.palplot(sns.color_palette(custom_colors),size=1)","5795ab9e":"netflix_p = sns.light_palette(custom_colors[0], reverse=True)\nsns.palplot(sns.color_palette(netflix_p),size=1)","34a0b2ea":"hulu_p = sns.light_palette(custom_colors[1], reverse=True)\nsns.palplot(sns.color_palette(hulu_p),size=1)","b4f20723":"prime_p = sns.light_palette(custom_colors[2], reverse=True)\nsns.palplot(sns.color_palette(prime_p),size=1)","fcb3a853":"disney_p = sns.dark_palette(custom_colors[3], reverse=True)\nsns.palplot(sns.color_palette(disney_p),size=1)","711f4531":"df_tv = pd.read_csv('..\/input\/tv-shows-on-netflix-prime-video-hulu-and-disney\/tv_shows.csv')\ndf_movies = pd.read_csv('..\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')","59979778":"df_tv = df_tv.drop(['Unnamed: 0'], axis = 1) \ndf_tv.head(5)","f561b82d":"df_movies = df_movies.drop(['Unnamed: 0','ID'], axis = 1) \ndf_movies.head(5)","361f13a7":"len(df_movies['Directors'].unique())","2ad23538":"len(df_movies['Genres'].unique())","3402c2ce":"def splitting(dataframe,col):\n    result = dataframe[col].str.get_dummies(',')\n    print('Done!')\n    return result","95bc703e":"m_genres = splitting(df_movies,'Genres')\nm_lang = splitting(df_movies,'Language')","a8927a46":"def val_sum(df,c):\n    return df[c].sum(axis=0)","76c0e30b":"val_counts = []\ndfs = [df_movies,df_tv]\ncols = ['Netflix','Hulu','Prime Video','Disney+']\n\nfor x in dfs:\n    for y in cols:\n        val_counts.append(val_sum(x,y))","924f6055":"val_counts","0d9627ba":"def donut(i,df,sizes,title):\n    plt.subplot(i)\n    plt.pie(sizes, explode=explode, labels=labels, colors=colors,\n                autopct='%1.1f%%', shadow=True)\n\n    centre_circle = plt.Circle((0,0),0.5,color='black', fc='white',linewidth=1.25)\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    plt.title(title)\n    plt.axis('equal')","e316d7f0":"fig = plt.subplots(figsize=(16, 8))\nlabels = 'Netflix', 'Hulu','Prime','Disney+'\nsizes1 = [val_counts[0], val_counts[1],val_counts[2],val_counts[3]]\nsizes2 = [val_counts[4], val_counts[5],val_counts[6],val_counts[7]]\ncolors = custom_colors\nexplode = (0, 0, 0, 0) \n\ndonut(121,df_movies,sizes1,'Movies')\ndonut(122,df_tv,sizes2,'TV shows')\nplt.show()","89408235":"fig = make_subplots(rows=1, cols=2)\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = 4113,\n    number={'font':{'color': custom_colors[2],'size':100}},\n    title = {\"text\": \"Movies<br><span style='font-size:0.8em;color:gray'>On Prime Video<\/span>\"},\n    domain = {'x': [0, 0.5], 'y': [0.6, 1]}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = 1971,\n    number={'font':{'color': custom_colors[2],'size':100}},\n    title = {\"text\": \"TV Shows<br><span style='font-size:0.8em;color:gray'>On Netflix<\/span>\"},\n    domain = {'x': [0.5, 1], 'y': [0, 0.4]}))\n\nfig.show()","e77760e2":"df_movies['IMDb'] = df_movies['IMDb'].str.split('\/').str[0]\ndf_movies['Rotten Tomatoes'] = df_movies['Rotten Tomatoes'].str.split('\/').str[0]\ndf_tv['IMDb'] = df_tv['IMDb'].str.split('\/').str[0]\ndf_tv['Rotten Tomatoes'] = df_tv['Rotten Tomatoes'].str.split('\/').str[0]","119cabee":"def sunburst(dataframe,platform,c):\n    dataframe=dataframe.loc[dataframe[platform] == 1]\n    dataframe=dataframe.sort_values(by='IMDb', ascending=False)\n    rating = dataframe[0:10]\n    fig =px.sunburst(\n    rating,\n    path=['Title','Genres'],\n    values='IMDb',\n    color='IMDb',\n    color_continuous_scale=c)\n    fig.show()","5c35e11c":"sunburst(df_movies,'Netflix','amp')","120de56c":"sunburst(df_movies,'Hulu','Blugrn')","21bd8e07":"sunburst(df_movies,'Prime Video','haline')","dcaba36b":"sunburst(df_movies,'Disney+','dense')","3c4dbede":"def kde(i,dataframe,platform,c):\n    plt.subplot(i)\n    dataframe=dataframe.loc[dataframe[platform] == 1]\n    sns.kdeplot(data=dataframe['Runtime'], color=custom_colors[c],shade=True)\n    plt.xlabel('Runtime in minutes', fontsize = 15)\n    plt.legend(fontsize = 15);\n    plt.subplot(i+1)\n    sns.kdeplot(data=dataframe['Year'], color=custom_colors[c],shade=True)\n    plt.xlabel('Release Year', fontsize = 15)\n    plt.legend(fontsize = 15);","8b66fc91":"plt.figure(figsize = (16, 8))\n\nkde(421,df_movies,'Netflix',0)\nkde(423,df_movies,'Hulu',1)\nkde(425,df_movies,'Prime Video',2)\nkde(427,df_movies,'Disney+',3)","28538af9":"post_1980 = df_movies[df_movies.Year >= 1980]\nyear_movies = post_1980.groupby('Year')[['Netflix','Hulu','Prime Video','Disney+']].sum()\n\nplt.figure(figsize = (16, 8))\nsns.lineplot(x=year_movies.index,y=year_movies['Netflix'])\nsns.lineplot(x=year_movies.index,y=year_movies['Hulu'])\nsns.lineplot(x=year_movies.index,y=year_movies['Prime Video'])\nsns.lineplot(x=year_movies.index,y=year_movies['Disney+'])\nplt.xlabel('Release Year', fontsize = 15)\nplt.ylabel('Count', fontsize = 15)\nplt.show()","7c362d88":"df_t = df_tv.copy()\ndf_t = df_t[df_t['Age'].notna()]","87f79a37":"df_t['Age']=df_t['Age'].str.replace('+','')\ndf_t['Age']=df_t['Age'].str.replace('all','0')\ndf_t['Age']=df_t['Age'].astype(str).astype(int)","81b0fb81":"def barplot(i,dataframe,platform,p):\n    plt.subplot(i)\n    dataframe=dataframe.loc[dataframe[platform] == 1]\n    dataframe = dataframe['Age'].value_counts().reset_index()\n    dataframe.columns=['age','count']\n    sns.barplot(x=\"age\", y=\"count\", data=dataframe,palette=p)\n    plt.xlabel('Age', fontsize = 15)\n    plt.ylabel(platform, fontsize = 15)","ce8c0e51":"plt.figure(figsize = (20, 20))\n\nbarplot(421,df_t,'Netflix',netflix_p)\nbarplot(423,df_t,'Hulu',hulu_p)\nbarplot(425,df_t,'Prime Video',prime_p)\nbarplot(427,df_t,'Disney+',disney_p)","253f4885":"plt.figure(figsize = (16, 8))\ntv_age = df_t.groupby('Age')[['Netflix','Hulu','Prime Video','Disney+']].sum()\nsns.heatmap(tv_age,cmap=\"YlGnBu\")\nplt.show()","3294a012":"r = df_tv.sort_values(by='IMDb', ascending=False)\nr = r[0:20]\nr = r[['Title','IMDb','Netflix','Hulu','Prime Video','Disney+']]\nr['IMDb'] = r['IMDb'].astype(float)","bdf86f58":"r.style.bar(subset=[\"Netflix\"], color='#ff6b6b')\\\n.bar(subset=[\"Hulu\"], color='#95d5b2')\\\n.bar(subset=[\"Prime Video\"], color='#a2d2ff')\\\n.bar(subset=[\"Disney+\"], color='#72efdd')\\\n.bar(subset=[\"IMDb\"], color='#').background_gradient(cmap='Purples')","71274875":"r1 = df_movies.sort_values(by='IMDb', ascending=False)\nr1 = r1[0:10]\nr1['Movies']='Movies'\nfig = px.treemap(r1, path=['Movies','Title', 'Genres','Language'], values='IMDb',color='IMDb',color_continuous_scale='Purp')\nfig.show()","135d0140":"df_m = df_movies.copy()\ndf_m = df_m.dropna()\n\ndf_m['Rotten Tomatoes']=df_m['Rotten Tomatoes'].str.replace('%','')\ndf_m['Rotten Tomatoes']=df_m['Rotten Tomatoes'].astype(str).astype(int)\ndf_m['Directors']=df_m['Directors'].astype('str')","d51640a4":"df_m=df_m.sort_values(by='Rotten Tomatoes', ascending=False)\nrating = df_m[0:20]\nsns.catplot(x=\"Rotten Tomatoes\", y=\"Directors\",data=rating, palette=netflix_p,height=7,kind=\"point\");","773074bc":"def dist(i,dataframe,platform,c):\n    plt.subplot(i)\n    dataframe=dataframe.loc[dataframe[platform] == 1]\n    sns.distplot(dataframe['IMDb'], color=custom_colors[c],vertical=True)\n    \n    plt.ylabel('IMDb rating, '+platform, fontsize = 15)\n    plt.subplot(i+1)\n    sns.distplot(dataframe['Rotten Tomatoes'], color=custom_colors[c],vertical=True)\n    plt.ylabel('Rotten Tomatoes, '+platform, fontsize = 15)","d140032f":"plt.figure(figsize = (20, 20))\n\ndist(421,df_m,'Netflix',0)\ndist(423,df_m,'Hulu',1)\ndist(425,df_m,'Prime Video',2)\ndist(427,df_m,'Disney+',3)","50b3e6ee":"df_m['Rotten Tomatoes'] = df_m['Rotten Tomatoes'].astype(float)\ndf_m['IMDb'] = df_m['IMDb'].astype(float)\n\nplt.figure(figsize = (16, 8))\nsns.regplot(x = df_m['Rotten Tomatoes'],y = df_m['IMDb'],x_bins=10,marker=\"+\",color=\"#FDE74C\")\nplt.show()","9d22a020":"df_l_merged = pd.concat([df_movies, m_lang], axis = 1, sort = False)\ndf_g_merged = pd.concat([df_movies, m_genres], axis = 1, sort = False)","8f53db62":"def bar(dataframe,platform,c):\n    dataframe=dataframe.loc[dataframe[platform] == 1]\n    val_counts = dataframe.iloc[:,15:].sum(axis=0).sort_values(ascending=False)\n    val_counts2 = pd.DataFrame(val_counts,columns=['Number of movies'])\n    return val_counts2[0:20].style.bar(subset=[\"Number of movies\",], color=c)","a9b683d1":"bar(df_l_merged,'Netflix','#ff6b6b')","3b5eef7c":"bar(df_g_merged,'Netflix','#ff6b6b')","e5136b43":"bar(df_l_merged,'Hulu','#95d5b2')","b23246af":"bar(df_g_merged,'Hulu','#95d5b2')","16569fe1":"bar(df_l_merged,'Prime Video','#a2d2ff')","d20c35ff":"bar(df_g_merged,'Prime Video','#a2d2ff')","df611ffd":"bar(df_l_merged,'Disney+','#72efdd')","26973bc3":"bar(df_g_merged,'Disney+','#72efdd')","c1e8f8de":"<div class=\"alert alert-info\">  \n<h3><strong>Feature generation<\/strong><\/h3>\n<\/div>","78cf216a":"<div class=\"alert alert-info\">  \n<h3><strong>Movies with the highest IMDb rating, genres and languages<\/strong><\/h3>\n<\/div>","89e3645a":"<div class=\"alert alert-info\">  \n<h3><strong>Languages and genres of movies on all platforms<\/strong><\/h3>\n<\/div>","9f19a429":"<h3> Number of unique directors for movies <\/h3>","0edc8755":"<div>\n<img src=\"https:\/\/download.logo.wine\/logo\/Disney%2B\/Disney%2B-Logo.wine.png\" width=\"350\"\/>\n<\/div>","de8f82da":"<div class=\"alert alert-info\">  \n<h3><strong>Distribution of runtime and release year of movies<\/strong><\/h3>\n<\/div>","0f863b69":"<div class=\"alert alert-info\">  \n<h3><strong>Distribution of IMDb and Rotten Tomatoes ratings of movies on all platforms<\/strong><\/h3>\n<\/div>","f14dd409":"> <h3>Netflix<\/h3>","2e109ee0":"\n<div>\n    \n<img src=\"https:\/\/logodownload.org\/wp-content\/uploads\/2018\/07\/prime-video.png\" width=\"300\"\/>\n<\/div>","c451ffba":"<div>  \n<h4><strong>\ud83d\udccc Prime has the maximum number of movies and Netflix has the maximum number of tv shows!<\/strong><\/h4>\n<\/div>","d2ca7ad2":"<div>\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/e\/e4\/Hulu_Logo.svg\/1200px-Hulu_Logo.svg.png\" width=\"300\"\/>\n<\/div>","8f578c56":"<div class=\"alert alert-info\">  \n<h3><strong>TV shows with the highest IMDb rating vs availability<\/strong><\/h3>\n<\/div>","94318bd0":"<div class=\"alert alert-info\">  \n<h3><strong>Loading the dataset and displaying rows<\/strong><\/h3>\n<\/div>","d982006f":"> <h3>Hulu<\/h3>","bc4eedfd":"<div class=\"alert alert-info\">  \n<h3><strong>Movies with the highest Rotten Tomatoes rating vs directors<\/strong><\/h3>\n<\/div>","efeb0d75":"<div class=\"alert alert-info\">  \n<h3><strong>Imports<\/strong><\/h3>\n<\/div>","d8607707":"<div class=\"alert alert-info\">  \n<h3><strong>Movies with the highest IMDb rating on each platform and genres<\/strong><\/h3>\n<\/div>","808de9ef":"<div>\n<img src=\"https:\/\/download.logo.wine\/logo\/Netflix\/Netflix-Logo.wine.png\" width=\"350\"\/>\n<\/div>","26b0a510":"<div class=\"alert alert-info\">  \n<h3><strong>TV shows with minimum age requirement on each platform<\/strong><\/h3>\n<\/div>","4680a4ee":"<div class=\"alert alert-info\">  \n<h3><strong>Custom Color Palette<\/strong><\/h3>\n<\/div>","59a31a50":"> <h3>Disney+<\/h3>","596a1dc3":"<div class=\"alert alert-info\">  \n<h3><strong>TV shows and Movies per platform<\/strong><\/h3>\n<\/div>","a9200f0c":"<div>\n<img src=\"https:\/\/cdn.technadu.com\/wp-content\/uploads\/2020\/04\/Netflix-Amazon-Prime-Hulu-Disney-Plus-Logos.png\" width=\"550\"\/>\n<\/div>","7bc9e8be":"> <h3>Prime Video<\/h3>","ac158e89":"<div class=\"alert alert-warning\">  \n<h1><strong>\ud83c\udf7fMovies and TV shows on streaming platforms<\/strong><\/h1>\n    <h4>During the pandemic,the popularity of streaming platforms has soared immensely\ud83d\udcc8 <br><br>\n    Embracing the new normal,here's an EDA of the same.<\/h4>\n<\/div>","b6e2b95d":"<h3>Number of unique genres for movies <\/h3>"}}