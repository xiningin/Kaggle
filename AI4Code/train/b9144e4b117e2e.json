{"cell_type":{"75a316ed":"code","de318a21":"code","2cc92a9d":"code","e99d166d":"code","181376d5":"code","0176957e":"code","dc6871f7":"code","8bae11a8":"code","64b9a493":"code","45dc366b":"code","dc7dfc21":"code","af859918":"code","f7074266":"code","b6ab825d":"code","a2c6f1c1":"code","3482f8de":"code","bde97f9a":"code","09aad75f":"code","3fdbf212":"code","155ffba6":"code","e3bcc333":"code","d9291654":"code","a8f656e2":"code","5ed1263e":"code","54dd9880":"code","51fe07c5":"code","2cd06913":"code","f1bc6d71":"code","3667b79b":"code","0cf821f7":"code","8218d7e8":"code","12543ca1":"code","864df611":"code","a0b5a072":"code","699c5ec5":"markdown","c9bfc3cf":"markdown","99c17498":"markdown","90112ba1":"markdown","19e43225":"markdown","fa54da8c":"markdown","3c1b0c8a":"markdown","8708b72b":"markdown","9ae85afd":"markdown","67d38baf":"markdown","6bc9e184":"markdown","0c5080c9":"markdown","b9c48ba6":"markdown","d55ac602":"markdown","5c1b975e":"markdown","77da5312":"markdown","20d10a02":"markdown","ce91e6f0":"markdown","be0cefb8":"markdown","ec47c46d":"markdown","a4a1fcac":"markdown"},"source":{"75a316ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/2021-olympics-medals-in-tokyo'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de318a21":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2cc92a9d":"df= pd.read_csv(\"..\/input\/2021-olympics-medals-in-tokyo\/Tokyo Medals 2021.csv\")","e99d166d":"l=df.columns\nprint(l)\nprint(\"Total Columns : \", len(l))","181376d5":"df.head(10)","0176957e":"df.tail(10)","dc6871f7":"# Viewing my Country in between bcz I already know its index. \n# Later I will do it using Code in below :)\ndf[40:50]","8bae11a8":"rows = df.shape[0]\ncols = df.shape[1]\nprint(\"Total number of rows : \", rows)\nprint(\"Total number of columns : \", cols)\nprint(\"Total cells in Dataset : \", rows*cols)\n","64b9a493":"df.describe()","45dc366b":"# I know it has nothing to do in it. But still lets look at it.\ndf.describe(include = \"all\")","dc7dfc21":"df.dtypes","af859918":"df.info()","f7074266":"\nprint(df[df[\"Country\"].values == \"India\"])\n\nprint(\"\\n\")\nprint(\"\\n\")\nprint(\"Other Way : \")\nprint(\"\\n\")\n# Checking details for India \n\n# We can do this other way also. \nprint(df.loc[df[\"Country\"].values==\"India\"])","b6ab825d":"# Checking if we have any missing values in our dataset.\ndf.isnull().any().sum()","a2c6f1c1":"df.sort_values(by = [\"Rank By Total\"], ascending = True)","3482f8de":"# Viewing top 5 countries with most number of bronge medals \nprint(\"Top Countries with most number of Bronze Medals\")\ntop_bm=df.nlargest(5, \"Bronze Medal\")[[\"Country\",\"Bronze Medal\"]]\nprint(top_bm)\nprint(\"\\n\")\nprint(\"\\n\")\n\n","bde97f9a":"print(\"Top Countries with most number of Gold Medals\")\ntop_gm =df.nlargest(5, \"Gold Medal\")[[\"Country\",\"Gold Medal\"]]\nprint(top_gm)\n\nprint(\"\\n\")\nprint(\"\\n\")\n\nprint(\"Top Countries with most number of Silver Medals\")\nprint(\"\\n\")\ntop_sm = pd.DataFrame(df.nlargest(5, \"Silver Medal\")[[\"Country\",\"Silver Medal\"]])\nprint(top_sm)","09aad75f":"plt.figure(figsize=(30,25))\nsns.barplot(y = df[\"Country\"], x = \"Total\", data = df)\nplt.xlabel('Total Medals')\nplt.ylabel('Country')\nplt.title('Total Medals per Country')","3fdbf212":"total_gm =df[\"Gold Medal\"].sum()\ntotal_sm = df[\"Silver Medal\"].sum()\ntotal_bm = df[\"Bronze Medal\"].sum()\nprint(\"Total Gold Medals won in olympics till now : \", df[\"Gold Medal\"].sum())\nprint(\"Total Silver Medals won in olympics till now : \", df[\"Silver Medal\"].sum())\nprint(\"Total Bronze Medals won in olympics till now : \", df[\"Bronze Medal\"].sum())","155ffba6":"plt.figure(figsize= (15,5))\ns=plt.bar(top_gm[\"Country\"], top_gm[\"Gold Medal\"], width = 0.4)\ns[0].set_color(\"gold\")\nplt.xlabel(\"Country\")\nplt.ylabel(\"Medals\")\nplt.title(\"Top 5 Countries with Gold Medals\")\nplt.show()\n","e3bcc333":"plt.figure(figsize= (15,5))\ns=plt.bar(top_sm[\"Country\"], top_sm[\"Silver Medal\"], width = 0.4)\ns[0].set_color(\"silver\")\n\nplt.xlabel(\"Country\")\nplt.ylabel(\"Medals\")\nplt.title(\"Top 5 Countries with Silver Medals\")\nplt.show()","d9291654":"plt.figure(figsize= (15,5))\ns=plt.bar(top_bm[\"Country\"], top_bm[\"Bronze Medal\"], width = 0.4)\ns[0].set_color(\"brown\")\nplt.xlabel(\"Country\")\nplt.ylabel(\"Medals\")\nplt.title(\"Top 5 Countries with Bronze Medals\")\nplt.show()","a8f656e2":"plt.figure(figsize=(15,10))\ncountries=[\"USA\", \"China\",\"ROC\", \"Britain\",\"Japan\",\"Australia\",\"Italy\",\"Germany\",\"Netherlands\", \"France\", \"Canada\"]\nX_axis = np.arange(len(countries))\nplt.bar(top_10[\"Country\"],top_10[\"Gold Medal\"], label=\"Gold\", color=\"gold\")\nplt.bar(top_10[\"Country\"],top_10[\"Silver Medal\"], label=\"Silver\", color=\"silver\", width=0.5)\nplt.bar(top_10[\"Country\"],top_10[\"Bronze Medal\"], label=\"Bronze\", width=0.25, color=\"brown\")\nplt.xticks(X_axis,countries)\n\nplt.legend()\nplt.show()","5ed1263e":"import seaborn as sns\nplt.figure(figsize=(20,15))\nsns.lineplot(data = df[\"Gold Medal\"], label=\"Gold Medal\")\nsns.lineplot(data=df[\"Silver Medal\"], label = \"Silver Medal\")\nsns.lineplot(data=df[\"Bronze Medal\"], label=\"Bronze Medal\")\n\nplt.title(\"Variation Of Medals\")\nplt.xlabel(\"Medals\")\nplt.ylabel(\"Number of Medals\")","54dd9880":"plt.figure(figsize=(15,10))\nsns.lineplot(data=df[\"Gold Medal\"])\nplt.ylabel(\"Total Medals\")\nplt.xlabel(\"Country's Index as per dataframe\")","51fe07c5":"# Making table of Top 10 Countries Overall. \ntop_10 = df.sort_values(by=\"Rank By Total\",ascending=True)[:11]\n# top_10.reset_index()\ntop_10.index=[i for i in range(11)]\ntop_10","2cd06913":"sns.lmplot(x=\"Gold Medal\", y=\"Silver Medal\", hue=\"Bronze Medal\", data=top_10)","f1bc6d71":"plt.figure(figsize=(12,10))\nvalues = top_10[\"Total\"]\nlabel= top_10[\"Country\"]\nplt.pie(values, labels=label, labeldistance=1.1)\nplt.title(\"TOP 10 COUNTRIES\")\nplt.show()","3667b79b":"\nsns.swarmplot(df.Country.values==\"India\",df[\"Gold Medal\"])\nplt.title(\"India's Gold v\/s others\")","0cf821f7":"\nsns.swarmplot(df.Country.values==\"India\",df[\"Silver Medal\"])\nplt.title(\"India's Silver v\/s others\")\n","8218d7e8":"\nsns.swarmplot(df.Country.values==\"India\",df[\"Bronze Medal\"])\nplt.title(\"India's Bronze with others\")","12543ca1":"\nsns.scatterplot(x=df[df.Country.values==\"India\"][\"Gold Medal\"],y=df[\"Silver Medal\"], data=df)\nplt.title(\"India's Gold and Silver\")","864df611":"\nsns.scatterplot(x=df[df.Country.values==\"India\"][\"Silver Medal\"],y=df[\"Bronze Medal\"], data=df)\nplt.title(\"Bronze and Silver \")","a0b5a072":"sns.lmplot(x=\"Gold Medal\", y=\"Silver Medal\", hue=\"Bronze Medal\", data=df[df.Country.values==\"India\"])","699c5ec5":"# **Data Exploration**","c9bfc3cf":"Comparing India's medal counts with others.","99c17498":"**Yayy, Cheers** . India won 7 medals in total. How many medals has your country won? Let me know in the comments. ","90112ba1":"Variation of **Gold,Silver and bronze Medals** of top 10 Countries. ","19e43225":"**Viewing top 5 countries according to the medals they have.** ","fa54da8c":"I will be making many changes in it as I complete my Data Visualization Course. Till then, do provide suggestions and feedbacks so that I keep improving.\n**Thanks for your time**. If you find this interesting, hit that button:). It motivates me alot. \n\n","3c1b0c8a":"Lets Explore our dataset and see some interesting insights from the data.\nAnd **Congratulations** if your country has won medals. :) ","8708b72b":"**Creating Lineplot for the dataset.**","9ae85afd":"Viewing top 5 countries with most number of Gold and Silver medals. ","67d38baf":"# Here's some **India** Special ","6bc9e184":"Lets see how many gold medals have been won in total.","0c5080c9":"Importing Dataset and Important Libraries to work with. ","b9c48ba6":"Viewing India's Rank using the code below.","d55ac602":"**Lets Sort our Data First**","5c1b975e":"I welcome you all in this short and interesting EDA of olympics dataset. I will make sure that it do not waste your time. Read this till end and after reading the last line do provide me feedback or suggestions to improve myself. **Lets Start !** ","77da5312":"So we do not have any missing values in our dataset. Thats great . **Cheers again!**","20d10a02":"Let me be **patriotic** and see **India's** Rank again. This time with the help of codes. ","ce91e6f0":"Lets see them all togethor.","be0cefb8":"Seeing, how many medals we **Indians** got through scatter plot. ","ec47c46d":"# Data Visualisation ","a4a1fcac":"Plotting total medals won by each Country."}}