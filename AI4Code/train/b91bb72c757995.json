{"cell_type":{"405c9d21":"code","7d60b73e":"code","a31e16d9":"code","51557ba0":"code","a232af14":"code","054f2839":"code","94cacdc6":"code","275345dd":"code","715cd383":"code","b5361c8f":"code","b247a6cf":"code","fe366b33":"code","642000ef":"code","9fcf2593":"code","b6c96fdd":"code","429906d4":"code","9131ee18":"code","167feac3":"code","8ebd29fc":"code","08a8da8f":"code","5c30a566":"markdown"},"source":{"405c9d21":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\/dataset_updated\/\"))\n","7d60b73e":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","a31e16d9":"\nfrom fastai import *\nfrom fastai.vision import *","51557ba0":"PATH = \"..\/input\/dataset_updated\/dataset_updated\/\"\nPATH_OLD = \"..\/input\/dataset_updated\/dataset_updated\/\"\nTMP_PATH = \"\/tmp\/tmp\"\nMODEL_PATH = \"\/tmp\/model\/\"\nsz=200","a232af14":"# GPU required\ntorch.cuda.is_available()","054f2839":"torch.backends.cudnn.enabled","94cacdc6":"os.listdir(PATH + 'training_set')","275345dd":"files = os.listdir(f'{PATH}training_set\/engraving')[:5]\nfiles","715cd383":"img = plt.imread(f'{PATH}training_set\/engraving\/{files[1]}')\nplt.imshow(img);","b5361c8f":"img.shape","b247a6cf":"img[:4,:4]","fe366b33":"# Fix to enable Resnet to live on Kaggle\ncache_dir = os.path.expanduser(os.path.join('~', '.torch'))\nif not os.path.exists(cache_dir):\n    os.makedirs(cache_dir)\nmodels_dir = os.path.join(cache_dir, 'models')\nif not os.path.exists(models_dir):\n    os.makedirs(models_dir)","642000ef":"#arch=resnet34\ntfms = get_transforms(do_flip=False)\ndata = ImageDataBunch.from_folder(PATH, train='training_set', valid='validation_set', ds_tfms=tfms, size=sz, num_workers=0)","9fcf2593":"data.show_batch(rows=3, figsize=(6,6))","b6c96fdd":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=MODEL_PATH)\n","429906d4":"learn.fit_one_cycle(6, slice(1e-5,3e-4), pct_start=0.05)\nlearn.recorder.plot()","9131ee18":"learn.recorder.plot_losses()","167feac3":"preds,y,losses = learn.get_preds(with_loss=True)\ninterp = ClassificationInterpretation(data, preds, y, losses)\ninterp.plot_top_losses(9, figsize=(14,14))","8ebd29fc":"interp.plot_confusion_matrix()","08a8da8f":"interp.most_confused(slice_size=10)","5c30a566":"This is it!!"}}