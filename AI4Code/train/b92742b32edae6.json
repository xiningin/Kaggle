{"cell_type":{"371cb398":"code","8bbf33d4":"code","4b99fecb":"code","a7575c2e":"code","9f5310a7":"code","9111b250":"code","a8bb3a09":"code","599dd27d":"code","8fdc833b":"code","de3421a1":"code","a8812cc8":"code","10ab3f18":"code","7584aa1b":"code","c33f27df":"code","9ed802ec":"code","39538969":"code","72b0d30c":"code","05703f43":"code","90bb240d":"code","089b6d0d":"code","f58368d9":"code","8b600ee6":"code","e34f91db":"code","bd76543e":"code","0a38729c":"code","3e06f325":"code","2b561591":"code","ac4f460d":"code","cb44e76b":"code","200e51e2":"code","1103e1c7":"code","f96c9edf":"code","f7586227":"code","968cdd82":"code","743b76ed":"code","fb440900":"code","07d825b0":"code","80002191":"code","a2135bb2":"code","dc620160":"code","0d13f042":"code","5e86d95d":"code","259c1bbf":"code","a6e79b58":"code","4678209f":"code","4ac48b36":"code","f923eb2d":"markdown","2b77b5c4":"markdown","eff17421":"markdown","6e69a10f":"markdown","f3086cdc":"markdown","4bc409ef":"markdown","9f39f277":"markdown","56682bf0":"markdown","6c3d5498":"markdown","7872dcd8":"markdown","e41b5663":"markdown","2bb8449a":"markdown","cf11fae8":"markdown","0f248a49":"markdown","9f31ab4f":"markdown"},"source":{"371cb398":"# supress warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Importing all required packages\nimport numpy as np\nimport pandas as pd\n\n# Data viz lib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom matplotlib.pyplot import xticks","8bbf33d4":"bank = pd.read_csv('..\/input\/bankmarketing.csv')","4b99fecb":"bank.head()","a7575c2e":"bank.columns","9f5310a7":"# Importing Categorical Columns","9111b250":"bank_cust = bank[['age','job', 'marital', 'education', 'default', 'housing', 'loan','contact','month','day_of_week','poutcome']]","a8bb3a09":"bank_cust.head()","599dd27d":"# Converting age into categorical variable.","8fdc833b":"bank_cust['age_bin'] = pd.cut(bank_cust['age'], [0, 20, 30, 40, 50, 60, 70, 80, 90, 100], \n                              labels=['0-20', '20-30', '30-40', '40-50','50-60','60-70','70-80', '80-90','90-100'])\nbank_cust  = bank_cust.drop('age',axis = 1)","de3421a1":"bank_cust.head()","a8812cc8":"bank_cust.shape","10ab3f18":"bank_cust.describe()","7584aa1b":"bank_cust.info()","c33f27df":"# Checking Null values\nbank_cust.isnull().sum()*100\/bank_cust.shape[0]\n# There are no NULL values in the dataset, hence it is clean.","9ed802ec":"# Data is clean.","39538969":"# First we will keep a copy of data\nbank_cust_copy = bank_cust.copy()","72b0d30c":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\nbank_cust = bank_cust.apply(le.fit_transform)\nbank_cust.head()","05703f43":"# Importing Libraries\n\nfrom kmodes.kmodes import KModes","90bb240d":"km_cao = KModes(n_clusters=2, init = \"Cao\", n_init = 1, verbose=1)\nfitClusters_cao = km_cao.fit_predict(bank_cust)","089b6d0d":"# Predicted Clusters\nfitClusters_cao","f58368d9":"clusterCentroidsDf = pd.DataFrame(km_cao.cluster_centroids_)\nclusterCentroidsDf.columns = bank_cust.columns","8b600ee6":"# Mode of the clusters\nclusterCentroidsDf","e34f91db":"km_huang = KModes(n_clusters=2, init = \"Huang\", n_init = 1, verbose=1)\nfitClusters_huang = km_huang.fit_predict(bank_cust)","bd76543e":"# Predicted clusters\nfitClusters_huang","0a38729c":"cost = []\nfor num_clusters in list(range(1,5)):\n    kmode = KModes(n_clusters=num_clusters, init = \"Cao\", n_init = 1, verbose=1)\n    kmode.fit_predict(bank_cust)\n    cost.append(kmode.cost_)","3e06f325":"y = np.array([i for i in range(1,5,1)])\nplt.plot(y,cost)","2b561591":"## Choosing K=2","ac4f460d":"km_cao = KModes(n_clusters=2, init = \"Cao\", n_init = 1, verbose=1)\nfitClusters_cao = km_cao.fit_predict(bank_cust)","cb44e76b":"fitClusters_cao","200e51e2":"bank_cust = bank_cust_copy.reset_index()","1103e1c7":"clustersDf = pd.DataFrame(fitClusters_cao)\nclustersDf.columns = ['cluster_predicted']\ncombinedDf = pd.concat([bank_cust, clustersDf], axis = 1).reset_index()\ncombinedDf = combinedDf.drop(['index', 'level_0'], axis = 1)","f96c9edf":"combinedDf.head()","f7586227":"cluster_0 = combinedDf[combinedDf['cluster_predicted'] == 0]\ncluster_1 = combinedDf[combinedDf['cluster_predicted'] == 1]","968cdd82":"cluster_0.info()","743b76ed":"cluster_1.info()","fb440900":"# Job","07d825b0":"plt.subplots(figsize = (15,5))\nsns.countplot(x=combinedDf['job'],order=combinedDf['job'].value_counts().index,hue=combinedDf['cluster_predicted'])\nplt.show()","80002191":"# Marital","a2135bb2":"plt.subplots(figsize = (5,5))\nsns.countplot(x=combinedDf['marital'],order=combinedDf['marital'].value_counts().index,hue=combinedDf['cluster_predicted'])\nplt.show()","dc620160":"# Education","0d13f042":"plt.subplots(figsize = (15,5))\nsns.countplot(x=combinedDf['education'],order=combinedDf['education'].value_counts().index,hue=combinedDf['cluster_predicted'])\nplt.show()","5e86d95d":"# Default","259c1bbf":"f, axs = plt.subplots(1,3,figsize = (15,5))\nsns.countplot(x=combinedDf['default'],order=combinedDf['default'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[0])\nsns.countplot(x=combinedDf['housing'],order=combinedDf['housing'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[1])\nsns.countplot(x=combinedDf['loan'],order=combinedDf['loan'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[2])\n\nplt.tight_layout()\nplt.show()","a6e79b58":"f, axs = plt.subplots(1,2,figsize = (15,5))\nsns.countplot(x=combinedDf['month'],order=combinedDf['month'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[0])\nsns.countplot(x=combinedDf['day_of_week'],order=combinedDf['day_of_week'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[1])\n\nplt.tight_layout()\nplt.show()","4678209f":"f, axs = plt.subplots(1,2,figsize = (15,5))\nsns.countplot(x=combinedDf['poutcome'],order=combinedDf['poutcome'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[0])\nsns.countplot(x=combinedDf['age_bin'],order=combinedDf['age_bin'].value_counts().index,hue=combinedDf['cluster_predicted'],ax=axs[1])\n\nplt.tight_layout()\nplt.show()","4ac48b36":"# Above visualization can help in identification of clusters.","f923eb2d":"## Choosing K by comparing Cost against each K","2b77b5c4":"## Data Cleaning","eff17421":"### As it is just a demo for K-Modes we will skip EDA and jump straight to model building","6e69a10f":"## Using K-Mode with \"Cao\" initialization","f3086cdc":"## K-Mode Clustering","4bc409ef":"## Data Inspection","9f39f277":"**Attribute Information(Categorical):**\n\n- age (numeric)\n- job : type of job (categorical: 'admin.','blue-collar','entrepreneur','housemaid','management','retired','self-employed','services','student','technician','unemployed','unknown')\n- marital : marital status (categorical: 'divorced','married','single','unknown'; note: 'divorced' means divorced or widowed)\n- education (categorical: 'basic.4y','basic.6y','basic.9y','high.school','illiterate','professional.course','university.degree','unknown')\n- default: has credit in default? (categorical: 'no','yes','unknown')\n- housing: has housing loan? (categorical: 'no','yes','unknown')\n- loan: has personal loan? (categorical: 'no','yes','unknown')\n- contact: contact communication type (categorical: 'cellular','telephone') \n- month: last contact month of year (categorical: 'jan', 'feb', 'mar', ..., 'nov', 'dec')\n- day_of_week: last contact day of the week (categorical: 'mon','tue','wed','thu','fri')\n- poutcome: outcome of the previous marketing campaign (categorical: 'failure','nonexistent','success')\n- UCI Repository: <https:\/\/archive.ics.uci.edu\/ml\/datasets\/bank+marketing>","56682bf0":"### Cluster Identification","6c3d5498":"## Using K-Mode with \"Huang\" initialization","7872dcd8":"### Problem Statement\n\nThe data is related with direct marketing campaigns of a Portuguese banking institution.\nCluster customers on the basis of attributes.\n\nNote: This python demonstration is for understanding the use of K-Modes clustering algorithm.\n\n### Data\nOnly Categorical attributes of Bank Marketing Data Set(UCI Repository: <https:\/\/archive.ics.uci.edu\/ml\/datasets\/bank+marketing>) are used for demonstration.","e41b5663":"## Model Building","2bb8449a":"### Data Preparation","cf11fae8":"# Bank Customer Clustering","0f248a49":"### Combining the predicted clusters with the original DF.","9f31ab4f":"## Data Reading and Understading"}}