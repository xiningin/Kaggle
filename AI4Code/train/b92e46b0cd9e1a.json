{"cell_type":{"0195c76a":"code","d34b3a6d":"code","dbfeaad9":"code","f5f56375":"code","90401eeb":"code","cbf2914b":"code","8dce24e0":"code","7ea05f30":"code","fc8879a8":"code","5bb32300":"code","a3fe2575":"code","fbe929c3":"code","b6138a8b":"code","01a5421e":"code","359e2f87":"code","26aaff67":"code","d67ee967":"code","8986d45d":"code","e7bd2794":"code","a10cff3e":"code","4659b684":"code","dbec832c":"code","bcfabff0":"code","36af16dd":"code","9928b962":"code","c9095d66":"code","a4c4aa9d":"code","13f58512":"code","9382058b":"code","d430a40e":"code","fbe7c152":"code","5c73298b":"code","bd18fd7c":"code","dbcceb8f":"code","6fe76b08":"code","3265bb2a":"code","4995ccaa":"markdown","f047d41b":"markdown"},"source":{"0195c76a":"import numpy as np \nimport pandas as pd\nimport PIL.Image as Image\nimport os\nimport matplotlib.pyplot as plt\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor,StackingRegressor, RandomForestRegressor, ExtraTreesRegressor\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.linear_model import ElasticNetCV, LassoCV, RidgeCV\n","d34b3a6d":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","dbfeaad9":"df1 = pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')","f5f56375":"df1.drop([ 'Subject Focus', 'Eyes', 'Face', 'Near', 'Action', 'Accessory',\n       'Group', 'Collage', 'Human', 'Occlusion', 'Info', 'Blur'],axis = 1,inplace = True)","90401eeb":"df1","cbf2914b":"Id = df1.Id","8dce24e0":"input_ = tf.keras.layers.Input((224,224,3))\nmodel = tf.keras.applications.InceptionV3(include_top = False,weights=None,input_tensor=input_)","7ea05f30":"model.load_weights('..\/input\/inceptionv3\/inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5')","fc8879a8":"def make_image_array(img):\n    x = Image.open(img)\n    x = x.resize((224,224))\n    x = np.array(x)\n    x = x.reshape(1,224,224,3)\n    return x\/255.0","5bb32300":"fig = plt.figure(figsize=(10,10))\ni = 1\nfor idx in np.random.randint(0,4319,9):\n  ax = fig.add_subplot(3,3,i)\n  img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + os.listdir('..\/input\/petfinder-pawpularity-score\/train\/')[idx])\n  plt.imshow(img)\n  i += 1\nplt.axis('off')\nplt.show()","a3fe2575":"input_dir = '..\/input\/petfinder-pawpularity-score\/train\/'\nl = {}\nfor i in os.listdir(input_dir):\n    x_tr = make_image_array(input_dir + i)\n    p = model.predict(x_tr)\n    p = tf.keras.layers.GlobalAveragePooling2D()(p)\n    p = tf.keras.layers.Flatten()(p)\n    l[i[:-4]] = p.numpy()","fbe929c3":"for i in Id:\n    l[i]  = l[i].squeeze()\ndf = pd.DataFrame(l.values())\ndf['Id'] = l.keys()\npopular = []\nfor i in df.Id:\n    popular.append(int(df1[df1['Id'] == i]['Pawpularity'].values))\ndf['Pawpularity'] = popular","b6138a8b":"df","01a5421e":"X = df.iloc[:,:-2].values\ny = df.iloc[:,-1].values","359e2f87":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.1,random_state = 42)","26aaff67":"lgb_regressor=lgb.LGBMRegressor(objective='regression', num_leaves=5, learning_rate=0.035, n_estimators=2177, max_bin=50, bagging_fraction=0.65,bagging_freq=5, bagging_seed=7, \n                                feature_fraction=0.201, feature_fraction_seed=7,n_jobs=-1)\nlgb_regressor.fit(X_train, y_train)\ny_head=lgb_regressor.predict(X_test)\nprint('-'*10+'LGBM'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","d67ee967":"gb_reg = GradientBoostingRegressor(n_estimators=1992, learning_rate=0.03005, max_depth=4, max_features='sqrt', min_samples_leaf=15, min_samples_split=14, loss='huber', random_state =42)\ngb_reg.fit(X_train, y_train)\ny_head=gb_reg.predict(X_test)\nprint('-'*10+'GBR'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","8986d45d":"kfolds = KFold(n_splits=10, shuffle=True, random_state=42)\n\nalphas=[1e-9,1e-8,1e-7,1e-6]\n\nridgecv_reg= make_pipeline(RidgeCV(alphas=alphas, cv=kfolds))\nridgecv_reg.fit(X_train, y_train)\ny_head=ridgecv_reg.predict(X_test)\nprint('-'*10+'RidgeCV'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","e7bd2794":"kfolds = KFold(n_splits=8, shuffle=True, random_state=42)\n\nalphas=[0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006]\nl1ratio=[0.87, 0.9,0.92, 0.95,0.97, 0.99, 1]\n\nelasticv_reg= make_pipeline(ElasticNetCV(alphas=alphas, cv=kfolds, l1_ratio=l1ratio))\nelasticv_reg.fit(X_train, y_train)\ny_head=elasticv_reg.predict(X_test)\nprint('-'*10+'ElasticNetCV'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","a10cff3e":"kfolds = KFold(n_splits=8, shuffle=True, random_state=42)\n\nlassocv_reg= make_pipeline(LassoCV(alphas=alphas, cv=kfolds))\nlassocv_reg.fit(X_train, y_train)\ny_head=lassocv_reg.predict(X_test)\nprint('-'*10+'LassoCV'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","4659b684":"estimators = [('lgbm', lgb_regressor),\n              ('gbr', gb_reg),   \n              ('lasso', lassocv_reg),   \n              ('ridge', ridgecv_reg),   \n              ('elasticnet', elasticv_reg)]\n\nstack_reg=StackingRegressor(estimators=estimators,final_estimator=ExtraTreesRegressor(n_estimators=50),n_jobs=-1)\nstack_reg.fit(X_train, y_train)\ny_head=stack_reg.predict(X_test)\nprint('-'*10+'StackingRegressor'+'-'*10)\nprint('R square Accuracy: ',r2_score(y_test,y_head))\nprint('Mean Absolute Error Accuracy: ',mean_absolute_error(y_test,y_head))\nprint('Mean Squared Error Accuracy: ',mean_squared_error(y_test,y_head))","dbec832c":"input_dir = '..\/input\/petfinder-pawpularity-score\/test\/'\nl_test = {}\nfor i in os.listdir(input_dir):\n    x_tr = make_image_array(input_dir + i)\n    p = model.predict(x_tr)\n    p = tf.keras.layers.GlobalAveragePooling2D()(p)\n    p = tf.keras.layers.Flatten()(p)\n    l_test[i[:-4]] = p.numpy()","bcfabff0":"df_test = pd.read_csv('..\/input\/petfinder-pawpularity-score\/test.csv')\nId_test = df_test.Id","36af16dd":"for i in Id_test:\n    l_test[i]  = l_test[i].squeeze()\ndf_test_ = pd.DataFrame(l_test.values())\ndf_test_['Id'] = l_test.keys()","9928b962":"df_test_","c9095d66":"testId = df_test_.Id \ntest_pwr = df_test_.iloc[:,:-1].values","a4c4aa9d":"test_pred_lgb=lgb_regressor.predict(test_pwr)\ntest_pred_gb=gb_reg.predict(test_pwr)\ntest_pred_elastic=elasticv_reg.predict(test_pwr)\ntest_pred_ridge=ridgecv_reg.predict(test_pwr)\ntest_pred_lasso=lassocv_reg.predict(test_pwr)\ntest_pred_stack=stack_reg.predict(test_pwr)","13f58512":"test_pred_lgb=pd.DataFrame(test_pred_lgb,columns=['Pawpularity'])\ntest_pred_gb=pd.DataFrame(test_pred_gb,columns=['Pawpularity'])\ntest_pred_elastic=pd.DataFrame(test_pred_elastic,columns=['Pawpularity'])\ntest_pred_ridge=pd.DataFrame(test_pred_ridge,columns=['Pawpularity'])\ntest_pred_lasso=pd.DataFrame(test_pred_lasso,columns=['Pawpularity'])\ntest_pred_stack=pd.DataFrame(test_pred_stack,columns=['Pawpularity'])","9382058b":"test_pred_lgb.Pawpularity =np.floor(np.expm1(test_pred_lgb.Pawpularity))\ntest_pred_gb.Pawpularity =np.floor(np.expm1(test_pred_gb.Pawpularity))\ntest_pred_elastic.Pawpularity =np.floor(np.expm1(test_pred_elastic.Pawpularity))\ntest_pred_ridge.Pawpularity =np.floor(np.expm1(test_pred_ridge.Pawpularity))\ntest_pred_lasso.Pawpularity =np.floor(np.expm1(test_pred_lasso.Pawpularity))\ntest_pred_stack.Pawpularity =np.floor(np.expm1(test_pred_stack.Pawpularity))","d430a40e":"final_pred=(test_pred_stack*0.1665)+(test_pred_lgb*0.678)+(test_pred_ridge*0.1665)\nfinal_pred.head()","fbe7c152":"sample_sub = pd.read_csv('..\/input\/petfinder-pawpularity-score\/sample_submission.csv')","5c73298b":"sample_sub['Pawpularity']=final_pred","bd18fd7c":"sample_sub['Id'] = testId","dbcceb8f":"sample_sub","6fe76b08":"sample_sub.to_csv('submission.csv',index=False)","3265bb2a":"print('done')","4995ccaa":"## DataFrame with id,Pawpularity,Feature Vector 2048","f047d41b":"# Extracting Features of Dataset."}}