{"cell_type":{"cf9a5d76":"code","ec3756ee":"code","aaeeec05":"code","6a0f3e67":"code","62ebcf7f":"code","5623232e":"markdown"},"source":{"cf9a5d76":"from google.cloud import bigquery\nimport pandas as pd\nclient = bigquery.Client()\nquery = \"select date(timestamp) as date, nonce,number from `bigquery-public-data.crypto_bitcoin.blocks`\"\n","ec3756ee":"query_job = client.query(query)\ndf = query_job.to_dataframe()","aaeeec05":"#check the first 5 result, to ensure we get what we want.\n#additionally do data sanity check by looking at block exploerers such as \n#https:\/\/blockexplorer.com\/block\/{block_id}\n\npd.set_option('display.max_colwidth', -1)\ndf.head(5)","6a0f3e67":"import struct\ndef noncehex_to_int(nonce):\n    if len(nonce) < 8:\n        nonce = (\"0\"  * (8- len(nonce))) + nonce\n        \n    try:\n        (ret, ) = struct.unpack('>I', bytes.fromhex(nonce))\n        return ret\n    except:\n        print(nonce)\n        \ndf['nonce_int'] = df['nonce'].map(noncehex_to_int)","62ebcf7f":"from matplotlib import pylab as plt\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 15, 10\nplt.plot_date( df['date'], df['nonce_int'], ms=0.1);\nplt.title(\"btc\");\nplt.xlabel(\"block timestamp\");\nplt.ylabel(\"nonce\");","5623232e":"An interesting pattern was found by [planB](https:\/\/twitter.com\/100trillionUSD) in bitcoin's nonce, which is considered to be uniform distribution while it was not. TL;DR - See the plot at the bottom of this kernel.\n\n[Nonce](https:\/\/en.bitcoinwiki.org\/wiki\/Nonce) is a parameter in a bitcoin's block where a miner adjusts it to find a block hash whose number of leading zero is more than the one agreed by bitcoin protocol (called \"difficulty\". The more leading zeros means more difficult to find such a hash). Strictly speaking it doesn't have to be uniformly distributed since a miner can choose it at will; however, any bias (such as incremental search from zero) might conflict with competing miners' search, ending up with a less success rate to win the mining race. In other words, an interest here is why we see a pattern implying many miners have the same bias in common at the risk of lowering the success rate - or a simple bug in commonly used ASICs? What do you think?\n\nThe pattern was originally found by [this tweet](https:\/\/twitter.com\/100trillionUSD\/status\/1081217034485149697).\nPatterns are explored in other blockchains as well:\n\n* [BCH](https:\/\/twitter.com\/goldenmiffy\/status\/1081522233040723968)\n* [XMR](https:\/\/twitter.com\/khannib\/status\/1082280569449447424)\n* [ETH](https:\/\/twitter.com\/StopAndDecrypt\/status\/1082291450619088897), notice the slope lines at the bottom around 3,000,000.\n* [MONA](https:\/\/twitter.com\/visvirial\/status\/1082825684572024832)\n\nThe discussions on why spread in different tweets or [reddit](https:\/\/www.reddit.com\/r\/Bitcoin\/comments\/adddja\/the_weird_nonce_pattern\/). The focus is more around  the pattern of four blank bands on the right hand side; it looks as if miners skipped certain nonce ranges.\n\nIn this reproduce case, because the dataset available doesn't seem to have block height which the original tweet used, I used block timestamp here instead. The result looks the same.\n\n**Updated as the data schema has changed**"}}