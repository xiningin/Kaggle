{"cell_type":{"056a472e":"code","061164c9":"code","d0765fe9":"code","9e0c5e54":"code","41742867":"code","bed53238":"code","55c72189":"code","865349fd":"code","9166ae68":"code","060014fb":"code","12294704":"code","71a8b86d":"code","2af39c61":"code","f1a8e61c":"code","b4f3eee4":"code","b6dd8062":"code","d2d5d94c":"code","7036b612":"code","8caaedd2":"code","d26cd363":"code","d7058949":"code","e849c5e1":"code","7f49664b":"code","0e7b7e76":"code","224379de":"code","40e16d1c":"code","10eeec04":"code","828cecde":"code","a188edfe":"code","03ab511a":"code","bac2c77c":"code","ecd2ceee":"code","95182776":"markdown","2c0487f9":"markdown","a25e72a2":"markdown","9ff8b2ff":"markdown","3f113e32":"markdown","90189ea6":"markdown","13c1cca4":"markdown","e253cc69":"markdown","0000caa2":"markdown"},"source":{"056a472e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","061164c9":"'''\n\n\n#list of all the numeric columns\nnum = tr_df.select_dtypes('number').columns.to_list()\n#list of all the categoric columns\ncat = tr_df.select_dtypes('object').columns.to_list()\n\n#numeric df\nBM_num =  tr_df[num]\n#categoric df\nBM_cat = tr_df[cat]\n\n#print(num)\n#print(cat)\n\n[tr_df[category].value_counts() for category in cat[1:]\n\n'''","d0765fe9":"df = pd.read_csv('\/kaggle\/input\/bigmart-sales-data\/Train.csv')\ndf['Item_Fat_Content'] = df['Item_Fat_Content'].apply(lambda x: 'Low Fat' if x in ['low fat', 'LF'] else x)\ndf['Item_Fat_Content'] = df['Item_Fat_Content'].apply(lambda x: 'Regular' if x == 'reg' else x)","9e0c5e54":"def myhist (df , xvar , ax , huevar = None , multiplev = 'layer' \n          , elementv = 'poly'):\n  sns.histplot(df , x=xvar , ax=ax , hue = huevar , multiple = multiplev,\n               element  = elementv)\n  ax.set_xlabel(f'distribution of {xvar}'.title() , fontsize = 10)\n  if huevar:\n    ax.set_title(f'distrbution of {xvar} by {huevar}'.title(), fontsize = 14)\n  else:\n    ax.set_title(f'distrbution of {xvar}'.title(), fontsize = 14)\n\n\n\n# create list for the qauntative virables\nQuantative_variables = ['Item_Weight' , 'Item_Visibility' , \n                        'Item_MRP'  , \n                        'Item_Outlet_Sales']","41742867":"sns.set_theme()\nfig , ax = plt.subplots(nrows = 2 , ncols = 2 , figsize = [12,12])\nfor axes , x in zip (ax.flatten() , Quantative_variables):\n  myhist(df , x , axes , huevar = 'Item_Fat_Content')","bed53238":"fig , ax = plt.subplots(nrows = 2 , ncols = 2 , figsize = [12,12])\nfor axes , x in zip (ax.flatten() , Quantative_variables):\n  myhist(df , x , axes , huevar = 'Outlet_Size')","55c72189":"fig , ax = plt.subplots(nrows = 2 , ncols = 2 , figsize = [12,12])\nfor axes , x in zip (ax.flatten() , Quantative_variables):\n  myhist(df , x , axes , huevar = 'Item_Type')","865349fd":"sns.set_theme(style=\"white\", rc={\"axes.facecolor\": (0, 0, 0, 0)})\n# Initialize the FacetGrid object\npal = sns.cubehelix_palette(10, rot=-.25, light=.7)\ng = sns.FacetGrid(df, row=\"Item_Type\", hue=\"Item_Type\", aspect=20, height=.7, palette=pal);\n\n# Draw the densities in a few steps\ng.map(sns.kdeplot, \"Item_MRP\",\n      bw_adjust=.5, clip_on=False,\n      fill=True, alpha=1, linewidth=1.5)\ng.map(sns.kdeplot, \"Item_MRP\", clip_on=False, color=\"w\", lw=2, bw_adjust=.5)\ng.map(plt.axhline, y=0, lw=2, clip_on=False)\n\n\n# Define and use a simple function to label the plot in axes coordinates\ndef label(x, color, label):\n    ax = plt.gca()\n    ax.text(0, .2, label, fontweight=\"bold\", color=color,\n            ha=\"left\", va=\"center\", transform=ax.transAxes)\n\n\ng.map(label, \"Item_MRP\")\n\n# Set the subplots to overlap\ng.fig.subplots_adjust(hspace=-.25)\n\n# Remove axes details that don't play well with overlap\ng.set_titles(\"\")\ng.set(yticks=[])\ng.despine(bottom=True, left=True)\n\n\n","9166ae68":"fig , ax = plt.subplots(nrows = 2 , ncols = 2 , figsize = [12,12])\nfor axes , x in zip (ax.flatten() , Quantative_variables):\n  myhist(df , x , axes , huevar = 'Outlet_Type')","060014fb":"fig , ax = plt.subplots(nrows = 2 , ncols = 2 , figsize = [12,12])\nfor axes , x in zip (ax.flatten() , Quantative_variables):\n  myhist(df , x , axes , huevar = 'Outlet_Location_Type')","12294704":"def mycountplots (df , xvar , ax , huevar = None , orient =None, order =None, hue_order=None ):\n  sns.countplot(data =df , x=xvar , ax=ax , hue = huevar )\n  ax.set_xlabel(f'Counts of {xvar}'.title() , fontsize = 10)\n  if huevar:\n    ax.set_title(f'counts of {xvar} by {huevar}'.title(), fontsize = 14)\n  else:\n    ax.set_title(f'counts of {xvar}'.title(), fontsize = 14)\n\n\n\n# create list for the qauntative virables\nCat_variables = ['Item_Fat_Content' , 'Item_Type' , \n                        'Outlet_Size'  , 'Outlet_Identifier',\n                        'Outlet_Location_Type' , 'Outlet_Type']","71a8b86d":"fig , ax = plt.subplots(3 , 2  , figsize  = [17,17])\nfor axes , x in zip(ax.flatten() , Cat_variables):\n    mycountplots(df , x , axes )","2af39c61":"fig , ax = plt.subplots(3 , 2  , figsize  = [17,17])\nfor axes , x in zip(ax.flatten() , Cat_variables):\n    mycountplots(df , x , axes , huevar = 'Outlet_Type' )","f1a8e61c":"pd.plotting.scatter_matrix(df , figsize = [15,15]);","b4f3eee4":"sns.heatmap(df.corr() , annot  = True )","b6dd8062":"df.columns","d2d5d94c":"g = sns.FacetGrid(df, col=\"Item_Fat_Content\", hue=\"Outlet_Type\" , height=10)\ng.map(sns.scatterplot, \"Item_Outlet_Sales\", \"Item_MRP\", alpha=.7 )\ng.add_legend()","7036b612":"df['normal_Item_Outlet_Sales'] = np.log10(df['Item_Outlet_Sales'])\ndf['normal_Item_Outlet_Sales'].plot(kind = ('hist') , bins = 40 , figsize = (17,5))\nplt.xkcd()","8caaedd2":"plt.rcdefaults()","d26cd363":"df['Outlet_Size']=df['Outlet_Size'].fillna(df['Outlet_Size'].mode()[0])","d7058949":"sns.scatterplot(data = df , x = 'normal_Item_Outlet_Sales' , y ='Item_MRP')\n","e849c5e1":"import plotly.express as px\nfig=px.sunburst(df,path=['Outlet_Type','Item_Type'],values='Item_Outlet_Sales')\nfig.show()","7f49664b":"\n\npx.sunburst(df,path=['Outlet_Location_Type','Outlet_Identifier','Outlet_Type'],values='Item_Outlet_Sales')\n\n","0e7b7e76":"px.sunburst(df,path=['Outlet_Location_Type' , 'Outlet_Type' ,'Outlet_Size'],values='Item_Outlet_Sales')\n","224379de":"sns.jointplot(x='normal_Item_Outlet_Sales',y='Item_MRP',data=df,kind='reg',height= 8, \n              scatter_kws={'alpha': 0.1} , line_kws={'color':'green'})","40e16d1c":"sns.jointplot(x='normal_Item_Outlet_Sales',y='Item_Visibility',data=df,kind='reg',height=4 \n              ,scatter_kws={'alpha': 0.1} , line_kws={'color':'red'})","10eeec04":"sns.jointplot(x='Item_MRP',y='Item_Visibility',data=df,kind='reg',height=4 \n              ,scatter_kws={'alpha': 0.1} , line_kws={'color':'red'})","828cecde":"df.iloc[:,2:3].columns","a188edfe":"df.columns","03ab511a":"plt.style.available","bac2c77c":"plt.style.use('classic')","ecd2ceee":"fig, ax = plt.subplots(1,1, figsize=(15, 6))\ndf1 = df.groupby(pd.cut(df[\"Item_MRP\"], np.arange(0, 250, 35)))['Item_Outlet_Sales'].mean().plot(kind = 'bar', width=0.55 \n                                                                                           , alpha=0.3 , color = 'grey')\n\nfor patch in ax.patches:\n    bl = patch.get_xy()\n    x = 0.5 * patch.get_width() + bl[0]\n    # change 0.92 to move the text up and down\n    y = 1 * patch.get_height() + bl[1] \n    ax.text(x,y,\"%d\" %(patch.get_height()),\n            ha='center',fontweight='light' , color = '#4a4a4a' )\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\nxticklabels = ['0-35' , '35-70' , '70-105' , '105-140' , '140-175' , '175-210' , '210-245']\nax.set_xticklabels(xticklabels , rotation = 0 , fontfamily='serif')\nfig.text(0.1, 0.95, 'Average Outlet Sales per MRP Group', fontsize=15, fontweight='bold', fontfamily='serif');\nax.grid(axis = 'y' , alpha=0.4)","95182776":"<center><b> Item MRP and Item outlet sales in positive correlation<br>\n    item visiability and outletsales in negative correlation","2c0487f9":"<center><b> Not all market type distributed equaly on tiers<br>\n    all grocery are samll<br>\n    ","a25e72a2":"## Quick visualization","9ff8b2ff":"## Load Test data , Data wrngling","3f113e32":"<center><b> Item_outlet_sales: Meduim in higher range than the high <br>\n    Item_Visiability : Small out lit size take more range","90189ea6":"## Is thier a negative correlation between item visability and item outlet sales","13c1cca4":"<center><b>Item Visibility is highly left skewed <br>same for item _outlet_sales","e253cc69":"## Normalizing item outlet sales","0000caa2":"<center><b> grocery take a wide range in visiability (small outlet size) in very low item out let sales<br><br><br>\n    Grocery (samll size outlet ) have highset visability and lowest item_outlet_sales\n    "}}