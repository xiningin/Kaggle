{"cell_type":{"5cf399c3":"code","dfabe5e2":"code","bb0345f6":"code","0e276f4c":"code","97d4d198":"code","9218516b":"code","bf0c3fc1":"code","5f621f67":"code","7fa324fb":"code","8c53e6c5":"code","5eedee74":"code","7b590d32":"code","eab5c8eb":"code","fe40dc46":"code","f017311b":"code","782a1cb0":"code","d81107a6":"code","80205574":"code","2354a68c":"code","367baa35":"code","6f69e2a9":"code","88ffd8cb":"code","17cd3811":"code","8f84f9b9":"code","d758ad78":"code","d00602a6":"markdown","cc6344bc":"markdown","14e11902":"markdown","5c4643bf":"markdown","b67c6982":"markdown","5351f8f5":"markdown","7f49d971":"markdown","84b26202":"markdown","fda8fd8d":"markdown","6530f5a2":"markdown","41e34bd6":"markdown","432d7d1e":"markdown","bb20ade2":"markdown","b23560d7":"markdown","6f72f894":"markdown","a1139fdc":"markdown","e7c1bd53":"markdown","13f52dfd":"markdown"},"source":{"5cf399c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dfabe5e2":"!pip install xlrd \n!pip install openpyxl","bb0345f6":"df = pd.read_excel('..\/input\/hr-employee-data-descriptive-analytics\/HR_Employee_Data.xlsx')\ndf.head()","0e276f4c":"df.info()","97d4d198":"df.describe()","9218516b":"df.isnull().sum()","bf0c3fc1":"df.groupby('left').mean()","5f621f67":"pd.crosstab(df.number_project,df.left).plot(kind='bar')","7fa324fb":"pd.crosstab(df.salary,df.left).plot(kind='bar')","8c53e6c5":"pd.crosstab(df.Work_accident,df.left).plot(kind='bar')","5eedee74":"pd.crosstab(df.Department,df.left).plot(kind='bar')","7b590d32":"features = df[['satisfaction_level','average_montly_hours','promotion_last_5years','salary','Work_accident', 'Department']]\nfeatures.head()","eab5c8eb":"from sklearn.preprocessing import LabelEncoder\nle_salary = LabelEncoder()\nfeatures['salary_label'] = le_salary.fit_transform(features['salary'])\nfeatures.head()","fe40dc46":"le_department = LabelEncoder()\nfeatures['department_label'] = le_department.fit_transform(features['Department'])\nfeatures.head()","f017311b":"features = features.drop(['salary', 'Department'], axis='columns')\nfeatures.head()","782a1cb0":"features.isnull().sum()","d81107a6":"features.describe()","80205574":"from sklearn.preprocessing import MinMaxScaler\nfeatures_scaler = MinMaxScaler()\nfeatures = features_scaler.fit_transform(features)\nfeatures","2354a68c":"x = features\ny = df.left","367baa35":"from sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nmodel_params = {\n    'svm': {\n        'model': SVC(gamma='auto'),\n        'params' : {\n            'C': [1,10,20,30],\n            'kernel': ['rbf','linear','poly']\n        }  \n    },\n    'random_forest': {\n        'model': RandomForestClassifier(),\n        'params' : {\n            'n_estimators': [10,50,100]\n        }\n    },\n    'logistic_regression' : {\n        'model': LogisticRegression(solver='liblinear',multi_class='auto'),\n        'params': {\n            'C': [1,5,10]\n        }\n    },\n    'KNN' : {\n        'model': KNeighborsClassifier(),\n        'params': {\n            'n_neighbors': [3,7,11,13]\n        }\n    }\n    \n}","6f69e2a9":"from sklearn.model_selection import GridSearchCV\nscores = []\n\nfor model_name, mp in model_params.items():\n    clf =  GridSearchCV(mp['model'], mp['params'], cv=5, return_train_score=False)\n    clf.fit(x, y)\n    scores.append({\n        'model': model_name,\n        'best_score': clf.best_score_,\n        'best_params': clf.best_params_\n    })\n    \ndf_score = pd.DataFrame(scores,columns=['model','best_score','best_params'])\ndf_score","88ffd8cb":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.25)","17cd3811":"model = RandomForestClassifier(n_estimators=100)\nmodel.fit(x_train,y_train)\nmodel.score(x_test,y_test)","8f84f9b9":"import matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sb\ny_predicted = model.predict(x_test)\ncm = confusion_matrix(y_test,y_predicted)\nplt.figure(figsize = (10,7))\nsb.heatmap(cm, annot=True, fmt=\".1f\")\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","d758ad78":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_predicted))","d00602a6":"The best result is random forest with n_esstimators = 100 with 95%","cc6344bc":"Using Random Forest to create Confustion Matrix and Classification Report","14e11902":"See the data atribute","5c4643bf":"Check if the data have the null value","b67c6982":"Convert the string data into numerical data so thaht can be used as a features","5351f8f5":"removing the string data from features","7f49d971":"# 1. Explore Data","84b26202":"# 3. Predict using Machine Learning Alghoritm","fda8fd8d":"See the mean value of numerical data with employee who left and not left the company","6530f5a2":"create some graph to easily analyze the correlation of data","41e34bd6":"## Step for Prediction\n### 1. Explore Data\n### 2. Prepare Data\n### 3. Predict using Machine Learning Alghoritm","432d7d1e":"# 2. Prepare Data","bb20ade2":"check again i features data have a null value","b23560d7":"Normalize data using MinMaxScaler","6f72f894":"Install some packages to read excel file","a1139fdc":"# Employee Left Prediction","e7c1bd53":"Decided to use 'satisfaction_level','average_montly_hours','promotion_last_5years','salary','Work_accident', 'Department' as a features to predict the employee left the company or not","13f52dfd":"in these data we can see the relation of features with the employee who left and not"}}