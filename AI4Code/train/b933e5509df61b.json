{"cell_type":{"f6087139":"code","c3a90502":"code","8af69633":"code","a658dcdd":"code","1d46e81d":"code","076b22c6":"code","d56b3fbe":"markdown","65d9363d":"markdown"},"source":{"f6087139":"import numpy as np\nimport pandas as pd","c3a90502":"DF = pd.read_csv('..\/input\/narcissistic-personality-inventory-test\/NPI\/data.csv')\nDF","8af69633":"# Not using gender and age to avoid potential bias.\n# We should only predict by using provided answers.\n\nX = DF.loc[:, DF.columns.str.startswith('Q')].copy()\ny = DF['score'].copy()","a658dcdd":"from sklearn.linear_model import LinearRegression\nbaseline_model = LinearRegression()\n\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import make_scorer, mean_absolute_error\n\nMAE = make_scorer(mean_absolute_error, greater_is_better = False)\n\nbase_cv_scores = cross_val_score(baseline_model, X, y, scoring = MAE)","1d46e81d":"from sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler, RobustScaler\nfrom sklearn.linear_model import LinearRegression, LassoCV, RidgeCV\nfrom sklearn.decomposition import PCA\nfrom sklearn.cross_decomposition import PLSRegression\n\npcr_regr = make_pipeline(\n    PCA(),\n    LinearRegression()\n)\n\npls_regr = PLSRegression(n_components = 5)\n\nl1_regr = LassoCV()\n\nl2_regr = RidgeCV()\n\nrobscaled_regr = make_pipeline(\n    RobustScaler(),\n    LinearRegression()\n)\n\nstdscaled_regr = make_pipeline(\n    StandardScaler(),\n    LinearRegression()\n)\n\npcr_regr_cv_scores = cross_val_score(pcr_regr, X, y, scoring = MAE)\npls_regr_cv_scores = cross_val_score(pls_regr, X, y, scoring = MAE)\nl1_regr_cv_scores = cross_val_score(l1_regr, X, y, scoring = MAE)\nl2_regr_cv_scores = cross_val_score(l2_regr, X, y, scoring = MAE)\nrobscaled_regr_cv_scores = cross_val_score(robscaled_regr, X, y, scoring = MAE)\nstdscaled_regr_cv_scores = cross_val_score(stdscaled_regr, X, y, scoring = MAE)","076b22c6":"scores_df = pd.DataFrame({\n    \"Baseline (simple Linear Regression)\": -base_cv_scores,\n    \"Principal Component Regression\": -pcr_regr_cv_scores,\n    \"Partial Least Squares Regression\": -pls_regr_cv_scores,\n    \"L1-regularized Linear Regression\": -l1_regr_cv_scores,\n    \"L2-regularized Linear Regression\": -l2_regr_cv_scores,\n    \"Linear Regression with Robust-scaled Predictors\": -robscaled_regr_cv_scores,\n    \"Linear Regression with Standardized Predictors\": -stdscaled_regr_cv_scores\n}).T\n\nscores_df.columns = [f\"Fold {i+1}\" for i in range(scores_df.shape[1])]\nscores_df['Average of 5-fold mean absolute error'] = scores_df.mean(axis = 1)\nscores_df","d56b3fbe":"Partial Least Squares with only 5 latent components performs best compared to other models using MAE as error metric.","65d9363d":"In this notebook we will compare the predictive ability of Partial Least Squares Regression (PLS) with several other simple and well-known statistical regression models.\n\nWe will use mean absolute error (MAE) as our error metric.\n\nEnjoy!"}}