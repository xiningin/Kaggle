{"cell_type":{"a76d633a":"code","43aa9143":"code","ad92b437":"code","a03a1181":"code","3a9f0a65":"code","b0a04956":"code","a6910e99":"code","35c5e13a":"code","f6baedc3":"code","55a10b3f":"code","24948aa1":"code","88dcf3e6":"code","2dae980a":"code","5829a61f":"code","f56d438b":"code","e999975e":"code","e79849d6":"code","ff7f999f":"code","cb7f8150":"code","fec38868":"code","e67bf5ca":"code","937f1e0a":"code","87e5aad7":"code","b0e284e2":"code","31ba380e":"code","6a0d0300":"markdown","eb27da9b":"markdown","f886bb20":"markdown"},"source":{"a76d633a":"import numpy as np # for numerical operations\nimport pandas as pd # for handling input data\nimport matplotlib.pyplot as plt # for data visualization \nimport seaborn as sns # for data visualization\ndata = pd.read_csv('..\/input\/news-popularity-logistic-regression\/train.csv') # uses pandas library to open a .csv file\ntest_data = pd.read_csv('..\/input\/news-popularity-logistic-regression\/test.csv')\nsample = pd.read_csv('..\/input\/news-popularity-logistic-regression\/sample_submission.csv')","43aa9143":"data","ad92b437":"#1-shuffle\n#2-split train into test and train\n#3-drop label\n#4-scale normalization\n# try scaling before splitting","a03a1181":"#data=data.sample(frac=1)\nsize=int(0.7*len(data))\ntrain=data[:size]\ntest=data[size:]","3a9f0a65":"xtrain=train.drop('genre_label',axis=1)\nytrain=train['genre_label']","b0a04956":"xtrain","a6910e99":"def scale(x):\n    return ((x-np.mean(x))\/np.std(x))","35c5e13a":"x=scale(xtrain)\nx=np.array(x)\ny=np.array(ytrain)\nw=np.ones((1,xtrain.shape[1]))\nprint(\"x shape\",x.shape,\"y shape\",y.shape,\"w shape\",w.shape)","f6baedc3":"def hypo(w,x,b):#prediction\n    z=np.dot(w,x.T)+b#\n    p_hat=1\/(1+np.exp(-z))#g(z)    \n    return p_hat","55a10b3f":"def predict(p_hat,m):\n    y_pred=np.zeros((1,m))\n    for i in range(m):\n        if p_hat[0][i]>=0.5:\n            y_pred[0][i]=1\n    return y_pred # represents h(x)","24948aa1":"def error(pred,y,m,lamda,w):#cost\n    #costs= -np.sum(y * np.log(pred ) + (1 - y) * np.log(1 - pred )) \/ m\n    epsilon = 1e-5 # error happend cause log doesnt accept 0 so i add 1e-5 to 0\n    cost = -(1\/(2*m))*(np.sum(y * np.log(pred + epsilon) + (1 - y) * np.log(1 - pred + epsilon))+lamda*np.sum(np.square(w)))\n    return cost","88dcf3e6":"def gradient(pred,y,m,alpha,w,b,lamda,x):#gradient decent\n    db=(1\/m)*np.sum(pred-y.T)\n    b=b-alpha*db\n    w=w*(1-(alpha*lamda)\/m)-(alpha\/m)*np.dot((pred-y.T),x)#accoding to the equation of regularization\n    return b,w","2dae980a":"#main\nm=len(y)\nalpha=0.05\nlamda=0.01\nb=1\ncost=[]\nfor i in range(200000):\n    p_hat= hypo(w,x,b)\n    pred=predict(p_hat,m)\n    er=error(pred,y,m,lamda,w)\n    b,w= gradient(pred,y,m,alpha,w,b,lamda,x)\n    if i%10000==0:\n        print(er)\n        cost.append(er)","5829a61f":"plt.plot(cost)\nplt.ylabel('cost')\nplt.xlabel('iterations')\nplt.title('Cost reduction over time')\nplt.show()","f56d438b":"print(w)\nprint(b)","e999975e":"p_hat= hypo(w,x,b)\npred=predict(p_hat,m)","e79849d6":"pred","ff7f999f":"y","cb7f8150":"#validation\nxt=test.drop('genre_label',axis=1)\nyt=test['genre_label']\nxt=scale(xt)\nxt=np.array(xt)\nyt=np.array(yt)\nprint(\"xt\",xt.shape)\nprint(\"yt\",yt.shape)\nn=len(xt)\np_hat= hypo(w,xt,b)\npred=predict(p_hat,n)\nprint(\"pred_t\",pred.shape)\ner=error(pred,yt,n,lamda,w)\nprint(er)","fec38868":"#compute accuracy\nn=len(xt)\np_hat= hypo(w,xt,b)\ntestpred=predict(p_hat,n)\n# *****\nm=len(x)\np_hat= hypo(w,x,b)\ntrainpred=predict(p_hat,m)\nprint('trainpred',trainpred.shape,'y',y.shape)\nprint('testpred',testpred.shape,'yt',yt.shape)","e67bf5ca":"from sklearn.metrics import accuracy_score\nprint('Training Accuracy',accuracy_score(trainpred.T, y))\npredxt = predict(testpred,len(xt))\nprint('Test Accuracy',accuracy_score(testpred.T, yt))","937f1e0a":"#final prediction #target\ntest_data=scale(test_data)\nt=np.array(test_data)\nk=len(t)\np_hat= hypo(w,t,b)\nprediction=predict(p_hat,k)\nprint(prediction.shape)\nprint(prediction)\n","87e5aad7":"ids=np.array(sample['Id']) #prepre to submission\nprint(ids)\nprint(ids.shape)","b0e284e2":"prediction=prediction.reshape(prediction.shape[1],)\nprint(prediction.shape)","31ba380e":"\"\"\"e=pd.DataFrame({'Id':ids,'genre_label':prediction})\ne.to_csv('genre_class_reg_2.CSV',encoding='utf-8',index=False)\"\"\"","6a0d0300":"![Screenshot%202021-07-27%20144849.png](attachment:Screenshot%202021-07-27%20144849.png)","eb27da9b":"![Screenshot%202021-07-27%20144741.png](attachment:Screenshot%202021-07-27%20144741.png)","f886bb20":"***"}}