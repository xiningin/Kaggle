{"cell_type":{"d170fa2b":"code","ff139ce1":"code","80b119d2":"code","4d257243":"code","0d6ff1da":"code","369c2df7":"code","c1d83d7a":"code","2cacc2cc":"code","303c5826":"code","78a60813":"code","82c60306":"code","b72f70f3":"code","bdf19d9d":"code","c4614b0c":"code","fa8b9d13":"code","b8367544":"code","8f8199c2":"code","f21492f9":"code","49193723":"code","5d71c394":"code","2474b8d8":"code","bebe0d62":"code","f034c048":"code","71ea5a93":"code","75a632e2":"code","a69346d3":"code","81262330":"code","16ee278e":"code","15d660f7":"code","98ef0c4c":"code","4bd83d2e":"code","46f72d28":"code","764fbdb4":"code","b829805a":"code","b6c693f0":"code","34ba14c4":"code","47c399ab":"code","6e906943":"code","73267b8b":"code","51dcfe94":"markdown","ae4cfbd0":"markdown","f4e16e65":"markdown"},"source":{"d170fa2b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing","ff139ce1":"data=pd.read_csv('..\/input\/arrhythmia-data-set\/arrhythmia.data')","80b119d2":"data.head(3)","4d257243":"data.shape","0d6ff1da":"data.columns","369c2df7":"data.describe()","c1d83d7a":"data.isnull().values.any() # we  realize nulls are not in form of nan or empty space known by pandas","2cacc2cc":"for i in data.columns:\n    cnt=0\n    for row in data[i]:\n        try:\n            int(row)\n            pass\n        except ValueError:\n            data.loc[cnt, i]=np.nan\n        cnt+=1","303c5826":"data.isnull().values.any() #now we change non integers to nan","78a60813":"data.isnull().sum().sum() #the totall number of missing values in dataset","82c60306":"from sklearn.impute import KNNImputer\nknn_imputer=KNNImputer()\ndf=pd.DataFrame(knn_imputer.fit_transform(data), columns=data.columns)","b72f70f3":"df.isnull().sum().sum()","bdf19d9d":"cols=df.columns\nfor i in cols:\n    if df[i].max()==16 and df[i].min()==1 :\n        print(i)","c4614b0c":"df.rename(columns={'8':'Target'},inplace=True)","fa8b9d13":"sns.countplot(x='Target', data=df)","b8367544":"df['Target'].value_counts()","8f8199c2":"x=df.drop('Target' , axis=1)\ny=df['Target']","f21492f9":"x = pd.DataFrame( preprocessing.StandardScaler().fit(x).transform(x.astype(float)), columns=x.columns)\nx.head(2)","49193723":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train , y_test =train_test_split(x,y,test_size=0.3, random_state=42)\nprint(x_train.shape, x_test.shape , y_train.shape, y_test.shape)","5d71c394":"from sklearn.neighbors import KNeighborsClassifier\nk = 1\nmodel_1 = KNeighborsClassifier(n_neighbors = k, metric='euclidean').fit(x_train,y_train)","2474b8d8":"y_test_pred = model_1.predict(x_test)\ny_train_pred=model_1.predict(x_train)","bebe0d62":"from sklearn import metrics\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, y_train_pred))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, y_test_pred))","f034c048":"from sklearn.metrics import classification_report","71ea5a93":"print(classification_report(y_train , y_train_pred))","75a632e2":"def foo(x,y):\n    try:\n        print( classification_report(x,y) )\n    except ZeroDivisionError:\n        return 0","a69346d3":"foo(y_test , y_test_pred)","81262330":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_train , y_train_pred))","16ee278e":"confusion_matrix(y_test , y_test_pred)","15d660f7":"k = 30\nmodel_2 = KNeighborsClassifier(n_neighbors = k).fit(x_train,y_train)\ny_test_pred = model_2.predict(x_test)\ny_train_pred=model_2.predict(x_train)\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, y_train_pred))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, y_test_pred))","98ef0c4c":"foo(y_train , y_train_pred)","4bd83d2e":"foo(y_test , y_test_pred)","46f72d28":"print(confusion_matrix(y_train , y_train_pred))","764fbdb4":"print(confusion_matrix(y_test , y_test_pred))","b829805a":"from sklearn.model_selection import GridSearchCV\nparam_grid={'n_neighbors':list(range(1,31)),'metric':['euclidean','manhattan','cosine']}\ngrid=GridSearchCV(model_1,param_grid,verbose=3,cv=2,scoring='accuracy')\ngrid.fit(x_train,y_train)","b6c693f0":"grid.best_params_","34ba14c4":"grid.best_estimator_","47c399ab":"grid_prediction=grid.predict(x_test)","6e906943":"foo(y_test,grid_prediction)","73267b8b":"print(confusion_matrix(y_test,grid_prediction))","51dcfe94":"##  k=1","ae4cfbd0":"## k=30","f4e16e65":"# missing values"}}