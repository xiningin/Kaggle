{"cell_type":{"f86c1309":"code","ac62a099":"code","6392b51f":"code","5f82d705":"code","03bb1b53":"code","2c4a8f89":"markdown","3c54dbc2":"markdown","93f9ffe3":"markdown","d5b99fcc":"markdown"},"source":{"f86c1309":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport sklearn\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, train_test_split","ac62a099":"csv_train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2022\/train.csv')\ncsv_test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2022\/test.csv')\ncsv_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2022\/sample_submission.csv')\n\nlbl_coder = LabelEncoder()\nlbl_coder.fit(csv_train.target)\n\ncsv_train['target'] = lbl_coder.transform(csv_train.target)","6392b51f":"feature_columns = {x for x in csv_train.columns}.difference({'row_id', 'target'})\ntarget = 'target'","5f82d705":"clf = RandomForestClassifier(n_estimators=200, criterion='gini')\n\nx = csv_train[feature_columns]\ny = csv_train[target]\n\nclf.fit(x, y)","03bb1b53":"test_pred = clf.predict(csv_test[feature_columns])\ntest_pred_str = lbl_coder.inverse_transform(test_pred)\ncsv_submission['target'] = test_pred_str\ncsv_submission.to_csv('submission.csv', index=False)","2c4a8f89":"# Define feature columns\n\nIt would be easy to slice input features and targets using predefined column names. Even more - we are aware of column positions by accesing features by column names","3c54dbc2":"# Load dataset","93f9ffe3":"# Make submission","d5b99fcc":"# Basic model baseline notebook"}}