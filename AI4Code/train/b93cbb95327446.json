{"cell_type":{"7dac5a30":"code","abb0cbac":"code","e1275fa1":"code","d74a3886":"code","6e7bb9da":"code","8c8ec25b":"code","1b2a7323":"code","907147c2":"code","eac193c4":"code","581b59a2":"code","aa2215ff":"code","0433e1cd":"code","f59e5e30":"code","23815301":"code","6f75d9fd":"code","5ce4f27c":"code","64e13e34":"code","d7a92c01":"code","b2cab655":"markdown","e224582a":"markdown","f86dd122":"markdown","d873b2bc":"markdown","ff899900":"markdown","7a8f2c6a":"markdown","11d2da1f":"markdown","cdb87821":"markdown","5616aab8":"markdown","390f4167":"markdown"},"source":{"7dac5a30":"#load in the neccessary library\/packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#load in the data\ndata = pd.read_csv(\"..\/input\/ramen-ratings-dataset\/ramen-ratings.csv\")\n\n#Display first 5 rows of the data.\ndata.head(5)","abb0cbac":"#checks the shape of the data\ndata.shape","e1275fa1":"#Runs a summary of all numerical values. \ndata.describe()","d74a3886":"#finds the number of missing values in each column\ndata.isnull().sum()","6e7bb9da":"#finds which countries are represented in the data\ndata['Country'].unique()","8c8ec25b":"#checks how many unique Styles there are. About 7-8 if we include the nan.\ndata['Style'].unique()","1b2a7323":"# This finds that there were 3 'Unrated' values that were in the data. This is important because then\n# we wouldnt be able to convert them from 'object' to float values.\ndata.Stars.value_counts()\n\n\n# We can just drop this value using indexing\ndata.drop(data.loc[data['Stars']=='Unrated'].index, inplace=True)\n\n# Turning the Stars column values into a numeric datatypes. i.e. object -> float\nnumeric_Stars = pd.to_numeric(data.Stars)\ndata.Stars = numeric_Stars","907147c2":"#Creates a sub dataset based on cup ramen in japan.\njapan_cup_data = data[(data.Style == 'Cup') & (data.Country == 'Japan')]\njapan_cup_data","eac193c4":"#Groups and calculates the average ratings based on brand\njapan_cup_brand_average_rating = japan_cup_data.groupby('Brand').Stars.mean()\njapan_cup_brand_average_rating ","581b59a2":"#sorts the unique brand names from the Brand column\nsorted_brand_names = sorted(pd.Series(japan_cup_data.Brand.unique()))\nsorted_brand_names","aa2215ff":"#Creates barplot for Average Star ratings for Japan Cup Ramen based on Brand\n\nsns.set_style(\"whitegrid\") # \"darkgrid\", \"whitegrid\", \"dark\", \"white\", \"ticks\"\nplt.figure(figsize = (8,6))\nplt.title(\"Japan Cup Brand Average Rating\", fontsize = 12)\nsns.barplot(x = sorted_brand_names, y = japan_cup_brand_average_rating)\nplt.xlabel(\"Brand\")\nplt.ylabel(\"Star Rating\")\n\nplt.xticks(rotation = 45)\nplt.legend()\n\nplt.show()","0433e1cd":"#Shows the variety of cup ramen by each brand. \n#This shows Nissin has 32 cup ramen that were used when calculating the averages.\nbrand_count = japan_cup_data.groupby('Brand').Brand.count()\nbrand_count","f59e5e30":"#Using matplotlib to display a pie chart\npie, ax = plt.subplots(figsize=[10,6])\nlabels = sorted_brand_names\nplt.pie(x= brand_count, autopct=\"%.1f%%\", explode = [0.05]*9, labels=labels, pctdistance=0.8)\nplt.title(\"Brand Count\", fontsize=14);","23815301":"#load in the neccessary library\/packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#loads in the data\ndata = pd.read_csv(\"..\/input\/ramen-ratings-dataset\/ramen-ratings.csv\")","6f75d9fd":"#declare any global variables that will be used.\n\nlist_of_countries = data['Country'].unique()\nlist_of_styles = data['Style'].unique()  ","5ce4f27c":"# Cleans the data by: dropping 'unrated' values and \n# changing object values to numerical ones in the Stars column.\n\ndef data_wrangling():\n    data.drop(data.loc[data['Stars']=='Unrated'].index, inplace=True)\n    numeric_Stars = pd.to_numeric(data.Stars)\n    data.Stars = numeric_Stars","64e13e34":"#Plots a Graph    \ndef graph(country_name, style_name, x_values, y_values ):\n    \n    \n    sns.set_style(\"whitegrid\") # \"darkgrid\", \"whitegrid\", \"dark\", \"white\", \"ticks\"\n    plt.figure(figsize = (8,6))\n    plt.title(\"{}'s Average Star Rating of {} Ramen\".format(country_name,style_name), fontsize = 12)\n    sns.barplot(x = x_values, y = y_values)\n    plt.xlabel(\"Brand\")\n    plt.ylabel(\"Star Rating\")\n\n    plt.xticks(rotation = 60)\n    plt.legend()\n    \n    plt.show()","d7a92c01":"# Extracts data and loops through to produce 2 Series. One of Brands \n# and another of average ratings to plot a barplot.\ndef extract_info():\n\n    data_wrangling()\n    for country in list_of_countries:\n        for style in list_of_styles:\n            entry = data[(data.Country == country) & (data.Style == style)]       #dataframe\n            \n            brand_average_rating = entry.groupby('Brand').Stars.mean()            #Series\n            sorted_brand_names = sorted(pd.Series(entry.Brand.unique()))          #Series\n            \n            if len(sorted_brand_names) > 0:                                       \n                graph(country,style,sorted_brand_names,brand_average_rating)      \n            else:                                                                 \n                pass\n    \nextract_info()","b2cab655":"#### It's important to note that some countries do not have ramen in a specific style. i.e. Japan does not have 'Can' style ramen. This error was fixed using an if statment to check if the length of the brand names was greater than zero. If there was at least one brand, it would print a graph. If not, it would simply pass to iterate again. ","e224582a":"# Data Visualization","f86dd122":"# Data Cleaning","d873b2bc":"# Data Pre-processing","ff899900":"# Something Extra:\n#### In general pie charts arent used as often but for simplicity we will use it here to visually see the percentages of how many brands went into calculating each average star rating.\n#### In these last two lines, we see the brand Nissan has thirty-two different cup ramen in comparison to the brand Seven-Eleven which has only one. From this analysis we can say Seven-Eleven has one really good cup ramen that scored really well however Nissan is second best and has a lot of variety!","7a8f2c6a":"# **Analysis of Ramen Ratings in different countries.**\n#### The **scope** of this project involves using Python libraries and packages for: data pre-processing, data cleaning\/wrangling and data visualizations. \n#### The **purpose** of this project was to practice automation skills to iterate and create multiple graphs. \n#### The **impact** this project has can be seen as a guide or referenece to beginner data analysts\/ programmers who wish to speed up their production through automation.","11d2da1f":"# Closing Remarks:\n#### Given you have read this far, simply put. Thank you. If this project helped you in anyway. Let me know! \n#### Drop a question or comment. I'd be more than happy to reply back. Happy Coding! \ud83d\ude0e\ud83d\udcbb","cdb87821":"# Starting 'Fresh' and Automating multiple graphs.\n#### We have successfully plotted one barplot for one country and one type of style of ramen. Using similar commands and modifying it a bit we can automate it to construct multiple graphs.","5616aab8":"# **Introduction: Breaking things down**\n#### Before we focus on automating a big task.(Unless youre an experienced programmer) It always helps to simplify the problem and build things up instead of tackling it all at once.","390f4167":"#### NOTE: In this next line we see that the only numerical value column is the Review #. It's important to note Stars column is not numerical when we might expectit to be. You'll find this especially important when we try to do numerical calculations later on."}}