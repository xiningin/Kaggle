{"cell_type":{"8dac3b8d":"code","ff876b61":"code","bbffb44e":"code","9c8179cc":"code","2184575a":"code","1b6d5e23":"code","473afbd1":"code","b2395055":"code","3be44cb9":"code","451a7b7a":"markdown","23e7d446":"markdown","dfa58905":"markdown","ab700543":"markdown","2ace6dc7":"markdown","51fe71e1":"markdown","b4b40ecb":"markdown","f8302c77":"markdown","dfd5aa50":"markdown","ec97cd66":"markdown","763d7450":"markdown"},"source":{"8dac3b8d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","ff876b61":"dayStress = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/heartrate_seconds_merged.csv')\ndayCalorie = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv')\ndayStep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailySteps_merged.csv')\ndayIntensity = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv')\ndaySleep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv')\n\nhourCalorie = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyCalories_merged.csv')\nhourStep = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv')\nhourIntensity = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyIntensities_merged.csv')","bbffb44e":"days = dayStress['Time'].str.split(expand=True)[0]\nstressTemp = dayStress\nstressTemp['Time'] = days\nstressTemp = stressTemp.rename(columns={'Time':'Day'})\nstressTemp = stressTemp.groupby(['Id', 'Day']).sum()\ndayStressClean = stressTemp","9c8179cc":"dayIntensity = dayIntensity[['Id', 'ActivityDay', 'LightlyActiveMinutes', 'FairlyActiveMinutes', 'VeryActiveMinutes']]\ndayGroup = dayCalorie.merge(dayStep, on=['Id', 'ActivityDay'], how='inner')\ndayGroup = dayGroup.merge(dayIntensity, on=['Id', 'ActivityDay'], how='inner')\ndaySleepTemp = daySleep[['Id', 'SleepDay', 'TotalMinutesAsleep']]\ndaySleepTemp = daySleepTemp.rename(columns={'SleepDay':'ActivityDay'})\ndaySleepTemp['ActivityDay'] = daySleepTemp['ActivityDay'].str.split(expand=True)[0]\ndayGroup = dayGroup.merge(daySleepTemp, on=['Id', 'ActivityDay'], how='inner')\ndayGroup = dayGroup.rename(columns={'ActivityDay':'Day','Calories':'CaloriesBurned', 'StepTotal':'Steps',\n                                    'LightlyActiveMinutes':'LightMins', 'FairlyActiveMinutes':'MedMins',\n                                    'VeryActiveMinutes':'HighMins'})\ndayGroup = dayGroup.merge(dayStressClean, on=['Id', 'Day'], how='inner')\ndayGroupClean = dayGroup[dayGroup['Steps']!=0]","2184575a":"hourIntensity = hourIntensity[['Id', 'ActivityHour', 'TotalIntensity']]\nhourGroup = hourCalorie.merge(hourStep, on=['Id', 'ActivityHour'], how='inner')\nhourGroup = hourGroup.merge(hourIntensity, on=['Id', 'ActivityHour'], how='inner')","1b6d5e23":"dayScatterCaloriesSteps = dayGroupClean.plot.scatter(x='Steps',\n                                        y='CaloriesBurned',\n                                        c='Id',\n                                        colormap='viridis',\n                                        title='Calories Burned vs Daily Steps')","473afbd1":"dayScatterCaloriesMed = dayGroupClean.plot.scatter(x='LightMins',\n                                                    y='CaloriesBurned',\n                                                    c='Id',\n                                                    colormap='viridis',\n                                                    title='Calories Burned vs Lightly Active')\ndayScatterCaloriesMed = dayGroupClean.plot.scatter(x='MedMins',\n                                                    y='CaloriesBurned',\n                                                    c='Id',\n                                                    colormap='viridis',\n                                                    title='Calories Burned vs Fairly Active')\ndayScatterCaloriesLight = dayGroupClean.plot.scatter(x='HighMins',\n                                                    y='CaloriesBurned',\n                                                    c='Id',\n                                                    colormap='viridis',\n                                                    title='Calories Burned vs Very Active')","b2395055":"dayScatterCaloriesStress = dayGroupClean.plot.scatter(x='Value',\n                                                      y='CaloriesBurned',\n                                                      c='Id',\n                                                      colormap='viridis',\n                                                      title='Calories Burned vs Daily Stress')","3be44cb9":"hourScatterCaloriesSteps = hourGroup.plot.scatter(x='StepTotal',\n                                                  y='Calories',\n                                                  c='Id',\n                                                  colormap='viridis',\n                                                  title='Calories Burned vs Hourly Steps')\nhourScatterCaloriesSteps = hourGroup.plot.scatter(x='TotalIntensity',\n                                                  y='Calories',\n                                                  c='Id',\n                                                  colormap='viridis',\n                                                  title='Calories Burned vs Hourly Intensity')","451a7b7a":"* Same idea behind the daily health dataset, except this one is an hourly health dataset. Unfortunately, there does not exist an hourly sleep or hourly heart rate dataset, so the hourly health dataset is less thorough than the daily health dataset. However, it may still provide valuable insights into users' habits.","23e7d446":"* Replaced the **day + hour** value in the Time column with just the **day**.\n* Grouped dataset on **Id & Day** to aggregate total heartrate by days.\n* Did all this in order to prepare the data to be merged with other health datasets that were measured by days.","dfa58905":"### Calories Burned and Daily Light Activity\n* The first graph shows a mediocre correlation between calories burned and daily light activity.\n* Because so many users have days where they are only lightly active, visualizing calories burned vs fairly active or very active has a lot of points on 0 on the x-axis, which doesn't tell us much.\n","ab700543":"* Merged five datasets: **Daily Calories Burned, Daily Intensity, Daily Sleep, Daily Steps, and Daily Sleep**. Now there exists a dataset that has all the health data measured by days in one single source.\n* Also took out bad data, most notably when almost all the attributes in a record = 0. This likely meant that there was an error in the database, or the fitbit was not tracking on that day. Now that all daily health data is located in one dataset, it is easier to begin visualizing correlations and trends.","2ace6dc7":"* Here we see a decently strong correlation between the amount of calories burned and daily steps taken. This is a more obvious correlation we'd expect to see already, but we can use the numbers in the dataset to set a rough goal.\n* For example: to burn X calories, users would need to take Y steps.","51fe71e1":"# Bellabeat Data Analysis Case Study\n\n## Introduction\nBellabeat, a high-tech manufacturer of health-focused products for women, is aiming to become a larger player in the global smart device market. This case study's goal is to analyze smart device data to understand how consumers are using their smart devices, and utilize this knowledge to improve one of Bellabeat's products as well as make high-level recommendations for Bellabeat's marketing strategy.\n\n### Data\nThe data used in this case study was the provide one: [FitBit Fitness Tracker Data](http:\/\/www.kaggle.com\/arashnic\/fitbit). It is publicly available on Kaggle. The data was collected by Amazon Mechanical Turk through a survey from 03-12-2016 to 05-12-2016, and 30 FitBit users were involved. The data primarily tracked participants' physical activity, sleep, steps, and calories burned.","b4b40ecb":"## Recommendations\n* Market the Bellabeat app as a companion that will help you set daily\/weekly goals and an hourly schedule. The app will intermittently notify users to complete tasks per the hourly schedule. Additionally, if we're marketing the app as a \"companion\", the app should \"grow\" with us so it feels personalized and that there is someone actually growing alongside you.\n* Implement a weight-loss function that specifically focuses on burning calories. It should be done through the recommendation above, and set steps and physical intensity as primary predictors of burning calories.\n* Due to the provided data's limitations, conduct another study handled by us instead of a third party and ask current Bellabeat users as participants. This helps us open different functions like the weight-loss function mentioned above.","f8302c77":"### Calories Burned and Daily Stress\n* Daily stress, represented by total heart rate (summed heart rates per 5 seconds in the entire day) shows a strong, positive correlation with calories burned, but only for a certain range.\n* This is likely due to the fact that if heart rate skyrockets too high, it is no longer representative of physical exercise, which means it's not beneficial for calorie burning.\n* Thus, we can see that there is a healthy range of heartrates that is good at calorie burning.\n* There is the case that someone's high heart rate could be due to extenuating factors such as going through an extremely stressful situation, but that is not something our dataset accounted for unfortunately.","dfd5aa50":"### Calories Burned and Hourly Steps and Intensity\n* The hour graphs show cleaner correlations than graphs in the day graphs.\n* We have a much clearer picture as to how to reach specific calorie burn goals.","ec97cd66":"## Data Cleaning and Organizing\nMy first step in this case study was to do a high-level scan of the raw data, pick out ones I needed, and remove any inconsistencies.\n\nI then moved onto organizing data, where I focused on setting up datasets so that they could be easily visualized. I did so by aggregating attributes of datasets on a temporal basis. Afterwards, I merged the datasets into two main datasets: health statistics measured per day, and health statistics measured per hour. Much of the details of this process will be elaborated later on in this notebook.\n\n### Purpose\nHaving a dataset based on days allows the Bellabeat app to set high-level, daily goals for its users to reach. These are broad goals such as getting X minutes of sleep or getting X steps in to reach a calorie deficit.\n\nA dataset based on hours enables the Bellabeat app to set up hourly schedules based on users' goals. Then, the app would be able to send intermittent reminders throughout the day as a form of accountability and motivation.\n\n### Limitations\nIt is important to note that the dataset provided is not sufficient to cover the business task. First of all, there are only 30 respondants, which is probably not enough for us to make inferences about the general public. Not only that, to extrapolate Bellabeat's users smart device usage based on 30 respondants we are not given info on how they are chosen is risky. There is not any sort of supporting evidence that this extrapolation is something we can base our decisions off of. Moreover, there were records where users took 0 steps for the day. That is highly unlikely, and we do not know the reason why: was it a fitbit malfunction, or did the user just forget to record? This dataset is from a third party provider, is not current data, and although there is proper citation to the authors and source of the dataset, the source of the dataset does not provide a comprehensive report on how they gathered their data. This data, overall, is rather unreliable.","763d7450":"## Data Analysis Conclusions\n* Unfortunately, this dataset does not provide us with much. We are mainly working off correlations. And while many of them do suggest a causation (more steps = more burnt calories), the fact that we aren't given any more information makes it so that we are completely unaware of many potential confounding factors. This makes it rather risky to extrapolate and base decisions off of."}}