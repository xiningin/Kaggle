{"cell_type":{"c5402669":"code","a230c6b9":"code","ca8a4e5c":"code","e6d2a05f":"code","666a05b2":"code","662f42f1":"code","839383b7":"code","5e86ffb3":"code","518e99e3":"code","508afdce":"code","80d6b1ae":"code","e252026f":"code","ea1bf804":"code","e9cb6a24":"markdown","4e756a93":"markdown","c5781b24":"markdown"},"source":{"c5402669":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a230c6b9":"import keras\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MaxAbsScaler\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\nimport matplotlib.pyplot as plt\nfrom IPython.display import FileLink","ca8a4e5c":"train_df = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\nX = train_df.iloc[:, 1:]\ny = train_df.iloc[:, 0]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)","e6d2a05f":"# Aqui n\u00e3o foi necessario a camada flatten, pois os dados ja est\u00e3o \"flatten\"\nmodel = Sequential()\nmodel.add( Dense(512, activation=\"relu\", input_shape=(784, )) ) \nmodel.add( Dense(256, activation=\"relu\") ) \nmodel.add( Dropout(0.2) ) \nmodel.add( Dense(10, activation=\"softmax\") ) ","666a05b2":"model.compile(\n    optimizer=\"adam\",\n    loss=\"sparse_categorical_crossentropy\",\n    metrics=[\"accuracy\"]\n)","662f42f1":"pixeScaler = MaxAbsScaler()\nX_train_scaled = pixeScaler.fit_transform(X_train)","839383b7":"epochs = 5\nhistory = model.fit(\n    X_train_scaled, y_train,\n    epochs=epochs,\n    validation_split=0.2\n)","5e86ffb3":"(perda_teste, acuracia_teste) = model.evaluate(pixeScaler.transform(X_test), y_test)\n\nprint(\"Perda do teste:\", perda_teste)\nprint(\"Acur\u00e1cia do teste:\", acuracia_teste)","518e99e3":"test_df = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\ntest_df.shape","508afdce":"label_id = test_df.index.values + 1\nclasses = model.predict_classes(pixeScaler.transform(test_df))","80d6b1ae":"submission_df = pd.DataFrame({\"ImageId\": label_id, \"Label\": classes})\nsubmission_df.head()","e252026f":"sample_df = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/sample_submission.csv\")\nsample_df.head()","ea1bf804":"#submission_df.to_csv(\"submision.csv\", index=False)\n#FileLink('submision.csv')","e9cb6a24":"### Preparando arquivo para submiss\u00e3o","4e756a93":"## Prepara\u00e7\u00e3o para submeter","c5781b24":"Implementa\u00e7\u00e3o do post https:\/\/cavernadedados.com\/2019\/07\/breve-tutorial-de-keras.html"}}