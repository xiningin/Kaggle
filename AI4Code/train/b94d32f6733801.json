{"cell_type":{"39bc249b":"code","088ca830":"code","6dc6d2ca":"code","018a5c19":"code","d973fba6":"code","41d26a5b":"code","7a051124":"code","1a837d55":"code","84ee0f01":"code","fa09656a":"code","e3d568c9":"code","21b17eac":"code","b100f969":"code","49952922":"code","fb7e5efb":"code","7657dd4c":"code","fe6b2a19":"code","b2a9e6d6":"code","5b465465":"markdown"},"source":{"39bc249b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","088ca830":"data = pd.read_csv(\"..\/input\/athlete_events.csv\")","6dc6d2ca":"data.info()","018a5c19":"data.head()","d973fba6":"data.corr()","41d26a5b":"# Correletaion map\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt=\".2f\",ax=ax)\nplt.show()\n# Also we can see from here weight and height is directly proportional","7a051124":"# Learn what is there as properties in data.\ndata.columns","1a837d55":"data.head()","84ee0f01":"# Line plot I took first 800 data because all data includes 271116 and this is very big to analyze\ndata.Height[0:800].plot(kind = 'line', color = 'g',label = 'Height',linewidth=1,alpha = 0.7,grid = True,linestyle = ':')\ndata.Weight[0:800].plot(color=\"red\",figsize=(8,8),label=\"Weight\",linewidth=1,alpha=0.7,grid=True,linestyle=\":\")\nplt.legend()\nplt.xlabel(\"Athletes\")\nplt.ylabel(\"Height and Weight\")\nplt.title(\"Line Plot\")\nplt.show()\n\n\n\n\n","fa09656a":"# Scatter Plot\ndata.plot(kind='scatter', x=\"Height\", y=\"Weight\",alpha = 0.7,color = 'red')\nplt.xlabel('Height')              # label = name of label\nplt.ylabel('Weight')\nplt.title('Height Weight Scatter Plot')   \nplt.show()\nprint(\" max height of athletes is \",data.Height.max(),\" cm\")\nprint(\" max weight of athletes is \",data.Weight.max(),\" kg\")\nprint(\" min height of athletes is \",data.Height.min(),\" cm\")\nprint(\" min weight of athletes is \",data.Weight.min(),\" kg\")\n\n\n\n","e3d568c9":"# histogram \ndata.Height.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","21b17eac":"#these are just for learning and practice\ndictionary = {'Turkey' : ['istanbul','ankara'],'Usa' : ['Las_vegas''New_york']}\nprint(dictionary.keys())\nprint(dictionary.values())","b100f969":"dictionary['Turkey'] = [\"bal\u0131kesir\",\"bursa\"]    # update existing entry\nprint(dictionary)\ndictionary['france'] = [\"paris\",\"lille\"]       # Add new entry\nprint(dictionary)\ndel dictionary['france']              # remove entry with key 'spain'\nprint(dictionary)\nprint('Turkey' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","49952922":"series_name = data['Name']        # data['Defense'] = series\nprint(type(series_name))\ndata_frame = data[['Age']]  # data[['Defense']] = data frame\nprint(type(data_frame))","fb7e5efb":"x = data['Height']>220    \ndata[x]","7657dd4c":"y=data[\"Weight\"]>200\nprint(\"max height and weight\")\ndata[y]","fe6b2a19":"data[(data['Height']>200) & (data['Weight']>150)]","b2a9e6d6":"for index,value in data[['Height']][0:8].iterrows():\n    print(index,\" : \",value)","5b465465":"All analysis is this and thanks for everything that read or review"}}