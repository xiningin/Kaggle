{"cell_type":{"87ab5ca1":"code","b5d0623b":"code","23c71c88":"code","b3aa73ed":"code","cb8f0aeb":"code","5b1b69bf":"code","01bb3c5a":"code","ed752e1f":"code","cbb51666":"code","68419ad1":"code","d8b2b35e":"code","0db50581":"code","a8cb9072":"code","374d67b3":"code","a146d307":"code","17e62fea":"code","732c0735":"code","daead348":"code","3eea8e27":"code","cb1e8176":"code","db58d343":"code","8f6ec0a2":"code","905a8cf5":"code","945a4bdb":"code","e44abe84":"code","ec3c5e5b":"code","1aa95f85":"code","8ac7e39a":"code","9298f9ab":"code","5dcfbe05":"code","c8afceff":"code","599c5b48":"code","29ef8266":"code","51284676":"code","4b7a00fa":"code","9c21cc1c":"code","262c12c6":"code","f1102f3a":"code","29681f14":"code","0ac09632":"code","5de1813b":"code","91174f1d":"code","ab4ccb57":"code","eacafec9":"code","2115b3a2":"code","b725749e":"code","299c22c5":"code","1dfdf09c":"code","6ac379da":"code","5145a305":"code","de716542":"code","56eb75ba":"code","5c6ac921":"code","fd3ac50b":"code","58f535ac":"code","d61d2846":"code","a852ad49":"code","818d2103":"code","498a51c1":"code","1dd2a5bd":"code","b10eaa41":"code","9aee4e03":"code","dd5711e8":"markdown","1e1bd95a":"markdown","b76ff98a":"markdown","131694f9":"markdown","535af377":"markdown","811cbb0c":"markdown","d01e2436":"markdown","a79035f3":"markdown","cdecac1c":"markdown","725573a1":"markdown","a14ec014":"markdown","06f6390c":"markdown","c9fab3a5":"markdown","5947467f":"markdown","a5598bfa":"markdown","c136cb97":"markdown","dd73a9f4":"markdown"},"source":{"87ab5ca1":"# Importing libraries \n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings \nwarnings.filterwarnings('ignore')\n%matplotlib inline","b5d0623b":"df=pd.read_csv(\"..\/input\/goodreadsbooks\/books.csv\", error_bad_lines = False,warn_bad_lines=False)","23c71c88":"df","b3aa73ed":"print(f\"In this dataframe, there are:\\n{df.shape[0]} rows,\\n{df.shape[1]} columns\")","cb8f0aeb":"df.head()","5b1b69bf":"df.columns\n","01bb3c5a":"df.info()","ed752e1f":"df.dtypes","cbb51666":"df.describe()","68419ad1":"df.isnull().sum()","d8b2b35e":"df.corr()","0db50581":"df.columns=df.columns.str.strip()","a8cb9072":"df_cpy=df.copy()","374d67b3":"df_cpy.language_code.unique()","a146d307":"# Replacing language code with language name for simplicity \ndf_cpy.language_code.replace(to_replace=['eng', 'en-US', 'fre', 'spa', 'en-GB', 'mul', 'grc', 'enm',\n       'en-CA', 'ger', 'jpn', 'ara', 'nl', 'zho', 'lat', 'por',\n       'srp', 'ita', 'rus', 'msa', 'glg', 'wel', 'swe', 'nor', 'tur',\n       'gla', 'ale'],value=['English','US-English','French','Spanish','British-English','Multiple language','Greek','Middle English','Canada-English',\n       'German','japanese','arabic','Dutch','Chinese','Latvian','Portuguese','Serbian','Initial teaching language',\n       'russian','Modern Standard Arabic','Galician','Welsh','Swedish','Murik','Turkish','Gaelic','Afro-Asiatic'],inplace=True)","17e62fea":"df_cpy=df_cpy.rename(columns={'language_code':'language'})","732c0735":"df_cpy.language.unique()","daead348":"# Extracting publication year\ndf_cpy['publication_year'] = df_cpy['publication_date'].apply(lambda x: (int)(str(x[-4:])))","3eea8e27":"df_cpy","cb1e8176":"avg_rating=round(df_cpy['average_rating'].mean(),2)\navg_num=round(df_cpy['num_pages'].mean(),2)\n\nprint(f\"The average ratings of the book are:{avg_rating}.\\nThe average number of pages are:{avg_num}. \")","db58d343":"lang=df_cpy['language'].value_counts().idxmax()\npub=df_cpy['publisher'].value_counts()\n\nprint(f'\\033[1m{lang} \\033[0m has most books written in it.\\n\\033[1m{pub.idxmax()} \\033[0m has the most publications.')\n","8f6ec0a2":"auth =df_cpy['authors'].value_counts()[0:12]\nprint(auth)","905a8cf5":"plt.figure(figsize=(16,8))\nsns.barplot(x=auth,y=auth.index)\nplt.xticks(rotation=90)\nplt.ylabel('authors')\nplt.xlabel('No of books')\nplt.show()","945a4bdb":"plt.figure(figsize=(16,8))\nsns.barplot(x=pub[0:12],y=pub[0:12].index)\nplt.xticks(rotation=90)\nplt.ylabel('Publishers')\nplt.xlabel('No of books')\nplt.show()","e44abe84":"print(df_cpy.publication_year.unique())\nyear=df_cpy['publication_year'].value_counts()[0:12]\nprint(year)","ec3c5e5b":"plt.figure(figsize=(16,8))\nsns.barplot(x=year.index,y=year)\nplt.xticks(rotation=90)\nplt.xlabel('Year')\nplt.ylabel('No of books')\nplt.show()","1aa95f85":"sorted_lang=df_cpy['language'].value_counts()[0:10]\n\nprint(sorted_lang)","8ac7e39a":"plt.figure(figsize=(16,8))\nsns.barplot(x=sorted_lang.index,y=sorted_lang)\nplt.xticks(rotation=90)\nplt.xlabel('languages')\nplt.ylabel('Count')\nplt.show()","9298f9ab":"g=sns.displot(df_cpy,x='average_rating',kind='kde',fill=True);\ng.fig.set_figwidth(12)","5dcfbe05":"df_cpy.groupby('authors')['average_rating'].mean().sort_values(ascending=False).head(20)","c8afceff":"df_cpy.groupby('publisher')['average_rating'].mean().sort_values(ascending=False).head(20)","599c5b48":"print(\"The number of author in the list are {}\".format(df_cpy['authors'].duplicated().sum()))","29ef8266":"print(\"The number of publishers in the list are {}\".format(df_cpy['publisher'].duplicated().sum()))","51284676":"rating=df_cpy[df_cpy['ratings_count']>1000000]","4b7a00fa":"rating.head()","9c21cc1c":"sns.regplot(x=rating[\"text_reviews_count\"], y=rating[\"ratings_count\"])\nplt.show()","262c12c6":"sub_set=df_cpy[df_cpy['authors'].isin(['J.K. Rowling','Agatha Christie','Dan Brown'])]","f1102f3a":"sub_set.head(5)","29681f14":"sub_set=sub_set.drop(6)","0ac09632":"sub_set.head()","5de1813b":"round(sub_set.groupby('authors')['num_pages'].mean(),2)","91174f1d":"plt.figure(figsize=(16,8))\nsub_set.groupby('authors')['publisher'].value_counts().sort_values(ascending=False).plot.bar()\nplt.show()","ab4ccb57":"plt.figure(figsize=(16,8))\nsub_set.groupby('authors')['language'].value_counts().sort_values(ascending=False).plot.bar()\nplt.show()","eacafec9":"from wordcloud import WordCloud, STOPWORDS\ndef word_cloud(author): \n  comment_words = ''\n  stopwords = set(STOPWORDS)\n  for val in sub_set.title[(sub_set['authors']==author)& (sub_set['language']!='German')]:\n      val = str(val)\n      tokens = val.split()\n      for i in range(len(tokens)):\n          tokens[i] = tokens[i].lower()\n     \n      comment_words += \" \".join(tokens)+\" \"\n \n  wordcloud = WordCloud(width = 400, height = 400,\n                  background_color ='white',\n                  stopwords = stopwords,\n                  min_font_size = 8).generate(comment_words)\n                     \n  plt.figure(figsize = (5, 5), facecolor = 'k')\n  plt.imshow(wordcloud)\n  plt.axis(\"off\")\n  plt.tight_layout(pad=0)\n \n  plt.show()","2115b3a2":"word_cloud('Agatha Christie')","b725749e":"word_cloud('Dan Brown')","299c22c5":"word_cloud('J.K. Rowling')","1dfdf09c":"df_cpy.loc[ (df_cpy['average_rating'] >= 0) & (df_cpy['average_rating'] <= 1), 'rating_between'] = \"0-1\"\ndf_cpy.loc[ (df_cpy['average_rating'] > 1) & (df_cpy['average_rating'] <= 2), 'rating_between'] = \"1-2\"\ndf_cpy.loc[ (df_cpy['average_rating'] > 2) & (df_cpy['average_rating'] <= 3), 'rating_between'] = \"2-3\"\ndf_cpy.loc[ (df_cpy['average_rating'] > 3) & (df_cpy['average_rating'] <= 4), 'rating_between'] = \"3-4\"\ndf_cpy.loc[ (df_cpy['average_rating'] > 4) & (df_cpy['average_rating'] <= 5), 'rating_between'] = \"4-5\"","6ac379da":"df_cpy.head()\n","5145a305":"rating_df = pd.get_dummies(df_cpy['rating_between'])\nrating_df.head(10)","de716542":"language_df = pd.get_dummies(df_cpy['language'])\nlanguage_df.head()","56eb75ba":"features = pd.concat([rating_df, language_df, df_cpy['average_rating'], df_cpy['ratings_count']], axis=1)\nfeatures.head()","5c6ac921":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn import neighbors","fd3ac50b":"min_max_scaler = MinMaxScaler()\nfeatures = min_max_scaler.fit_transform(features)","58f535ac":"model = neighbors.NearestNeighbors(n_neighbors=8, algorithm='auto')\nmodel.fit(features)\ndist, idlist = model.kneighbors(features)","d61d2846":"def Recommender(name):\n    book_list = []\n    book_id = df_cpy[df_cpy['title'] == name].index\n    book_id = book_id[0]\n    for newid in idlist[book_id]:\n        book_list.append(df_cpy.loc[newid].title)\n    print(\"Recommended books are:\")\n    for i in range(0,len(book_list)):\n      print(f\"{i+1}){book_list[i]}\")","a852ad49":"Recommender('Harry Potter and the Half-Blood Prince (Harry Potter  #6)')","818d2103":"Recommender(\"At Bertram's Hotel\")","498a51c1":"def author_Recommender(author):\n    auth_list = []\n    books=[]\n    auth_id = df_cpy[df_cpy['authors'] == author].index\n    auth_id = auth_id[0]\n    for newid in idlist[auth_id]:\n        auth_list.append(df_cpy.loc[newid].authors)\n        books.append(df_cpy.loc[newid].title)\n    for i in range(0,len(auth_list)):\n      print(f\"{i+1})Author:{auth_list[i]},\\nrecommended book:{books[i]}\")","1dd2a5bd":"author_Recommender('Stephen King')","b10eaa41":"author_Recommender('Agatha Christie')","9aee4e03":"author_Recommender('Dan Brown')","dd5711e8":"Books which are most rated","1e1bd95a":"## Recommendation system","b76ff98a":"![download.jfif](attachment:531b7c7a-97fa-49ec-85a6-03958598d201.jfif)","131694f9":"**Authors with most number of books published**","535af377":"**PRECIDTIONS**","811cbb0c":"## Exploratory data analysis","d01e2436":"## Exploring the dataframe","a79035f3":"Some lines were skipped:\n\nSkipping line 3350: expected 12 fields, saw 13 \n\nSkipping line 4704: expected 12 fields, saw 13 \n\nSkipping line 5879: expected 12 fields, saw 13\n\nSkipping line 8981: expected 12 fields, saw 13","cdecac1c":"**publishing house with most number of books published**","725573a1":"For word cloud refered to-: https:\/\/www.geeksforgeeks.org\/generating-word-cloud-python\/","a14ec014":"**PREDICTIONS**","06f6390c":"This notebooks contains Explorartory data analysis and Recommendation of books and authors(with a title book). The dataset has been extracted from goodreads and contains following columns:\n* BookID\n* Title\n* Authors\n* Average Rating\n* isbn \n* isbn13 \n* Language Code \n* Number of pages\n* Rating count\n* text review count \n* Publishing date\n* Publisher\n","c9fab3a5":"### Creating a subset with favourite authors\n","5947467f":"### feature engineering ","a5598bfa":"Year 2006 marks the highest number of books published","c136cb97":"# **Book Recommendation and EDA**","dd73a9f4":"Some informarion about the data.\n"}}