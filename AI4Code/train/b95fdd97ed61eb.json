{"cell_type":{"e2bd90fe":"code","347a587f":"code","97709568":"code","ab9b616b":"code","94cc7537":"code","db0b10b3":"code","ec9dc00c":"code","a98afffd":"code","a9562f5c":"code","b84e9160":"code","4afe32f2":"markdown"},"source":{"e2bd90fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","347a587f":"df=pd.read_csv('..\/input\/Pokemon.csv')\ndf=df.drop('#',axis=1)\ndf = df.set_index('Name')\ndf.head()","97709568":"df.columns = [c.replace(' ', '_') for c in df.columns]\npo_type=set(df.Type_1)\npo_type","ab9b616b":"summary=df.describe()\nsummary","94cc7537":"po_ttotal=[]\nfor i in po_type:\n   \n    y=df.Total[df.Type_1==i]\n    add=sum(y)\n    po_ttotal.append(add)\n    \nprint(po_ttotal)","db0b10b3":"keys=list(po_type)\nvalues=po_ttotal\n#new_dict = {k: v for k, v in zip(keys, values)} # list comprehension\ndictionary = dict(zip(keys, values))\nprint(dictionary)\n","ec9dc00c":"import matplotlib.pyplot as plt\nx=plt.bar(dictionary.keys(), dictionary.values(),width = 0.5, color='g',)\n\nx = plt.gca().xaxis\nfor item in x.get_ticklabels():\n    item.set_rotation(90)\nx = plt.gca()\nx.set_xlabel('Type of pokemon')\nx.set_ylabel('Total power')\nx.set_title('Total strength')","a98afffd":"#df.head()\ny=df[df['Legendary']==True]\nz=df[df['Legendary']==False]\nprint('The legendary pokemons are {}'.format(len(y)))\nprint('The non legendary pokemons are {}'.format(len(z)))","a9562f5c":"a=df[df['Type_1']=='Grass']\nb=df[df['Type_1']=='Bug']\n\ns1=(sum(a['Total']))\ns2=(sum(b['Total']))\ns1=plt.scatter(x='Attack',y='Defense', c='blue',data=a)\ns2=plt.scatter(x='Attack',y='Defense', c='red',data=b)\nx = plt.gca()\nx.set_xlabel('Attack')\nx.set_ylabel('Defense')\nx.set_title('Comparision')\nx.legend((s1,s2),('Grass','Bug'))","b84e9160":"print('select type to plot 0.Normal, 1.Dark, 2.Ground, 3.Dragon, 4.Electric, 5.Psychic, 6.Fighting, 7.Flying, 8.Bug, 9.Fire, 10.Fairy, 11.Steel, 12.Poison, 13.Grass, 14.Ice, 15.Rock, 16.Ghost, 17.Water')\nd=int(input(' '))\n\ne=int(input(' '))\n\nkeys=list(po_type)\nt1=keys[d]\nt2=keys[e]\n\n\na=df[df['Type_1']==t1]\nb=df[df['Type_1']==t2]\n\ns1=(sum(a['Total']))\ns2=(sum(b['Total']))\ns1=plt.scatter(x='Attack',y='Defense', c='blue',data=a)\ns2=plt.scatter(x='Attack',y='Defense', c='red',data=b)\nx = plt.gca()\nx.set_xlabel('Attack')\nx.set_ylabel('Defense')\nx.set_title('Comparision of different types')\nx.legend((s1,s2),(t1,t2))\n\n\n\n","4afe32f2":"# "}}