{"cell_type":{"8737b07d":"code","296113b4":"code","bd957c48":"code","f9a558e6":"code","9b8ca6ec":"code","e9555818":"code","440b5f62":"code","7ff5c02a":"code","c38d7e1e":"code","bd2167c6":"code","7f410dc7":"code","cd422c44":"code","14b67da2":"code","7734ccc5":"code","3a1ed3f8":"code","ce9c591c":"code","e4b8a927":"code","b184c38e":"code","92ce0238":"code","c4e0b14d":"code","385a29f4":"code","1a2e3541":"code","99dc88ac":"code","26c62068":"code","114a2e48":"code","f39be63f":"code","e4bb15df":"code","b00f3dec":"code","ac2a083f":"code","dad74166":"markdown","cb8d77c3":"markdown","72dc36da":"markdown","c631c1d8":"markdown","ca105dd1":"markdown","a62d6e99":"markdown","cc0ddae6":"markdown","43c84196":"markdown","80fbafc1":"markdown","b74dbe00":"markdown"},"source":{"8737b07d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","296113b4":"import numpy as np \nimport pandas as pd \nimport seaborn as sns; sns.set(style=\"ticks\", color_codes=True)\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected = True)","bd957c48":"NA_list=['NaN', 'Null', 'null serotype' ]\ndf=pd.read_csv('\/kaggle\/input\/disease-outbreaks-in-nigeria-datasets\/meningitis_dataset.csv', na_values=NA_list)\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\ndf","f9a558e6":"# how many dieseas are there in data?\n\ndf.disease.value_counts()","9b8ca6ec":"data=df[['id', 'gender', 'state', 'settlement', 'report_year', 'age', 'disease', 'serotype', \n         'health_status', 'report_outcome']]\ndata.head()","e9555818":"data.isnull().sum()","440b5f62":"data_state= data.groupby(['state', 'disease'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_state\n\npx.bar(data_state, x= 'state' , y='Number of Patients', color= 'disease')\n","7ff5c02a":"data_settlement= data.groupby(['settlement', 'disease', 'health_status'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_settlement\n\npx.bar(data_settlement, x= 'settlement' , y='Number of Patients', color= 'disease')","c38d7e1e":"data_year= data.groupby(['state', 'report_year'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_year\n\npx.bar(data_year, x= 'report_year', y='Number of Patients', color= 'state')\n","bd2167c6":"data_disease= data.groupby(['disease'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_state\npx.pie(data_disease, values='Number of Patients', names= 'disease' , title= 'Number of patients of each dieases', \n       width=800 , height=800 , color_discrete_sequence = px.colors.sequential.RdBu)","7f410dc7":"data_years= data.groupby(['report_year'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_years\npx.pie(data_years, values='Number of Patients', names= 'report_year' , title= 'Number of patients in each year', \n       width=800 , height=800 , color_discrete_sequence = px.colors.sequential.RdBu)","cd422c44":"data_gender= data.groupby(['gender', 'disease', 'health_status'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_gender\n\npx.bar(data_gender, x= 'gender' , y='Number of Patients', color= 'disease')\n","14b67da2":"px.bar(data_gender, x= 'gender' , y='Number of Patients', color= 'health_status')\n","7734ccc5":"data1=data.loc[data['health_status']== 'Alive']\ndata1.gender.value_counts()","3a1ed3f8":"data1=data.loc[data['health_status']== 'Dead']\ndata1.gender.value_counts()","ce9c591c":"data_age= data.groupby(['age', 'disease', 'health_status'])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_age\n\npx.bar(data_age, x= 'age' , y='Number of Patients', color= 'health_status')\n","e4b8a927":"px.bar(data_age, x= 'health_status' , y='Number of Patients', color= 'age')\n","b184c38e":"data_age2= data.groupby(['age', 'disease' ])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_age2\n","92ce0238":"px.scatter(data_age2, x= 'age', y='Number of Patients' , color='disease' )","c4e0b14d":"data_serotype= data.groupby(['serotype', 'disease' ])['id'].count().reset_index(name='Number of Patients').sort_values(by= 'Number of Patients', ascending= False)\ndata_serotype","385a29f4":"px.bar(data_serotype, x='serotype' , y='Number of Patients', color= 'disease' )\n","1a2e3541":"data.health_status.value_counts()","99dc88ac":"\ndata.loc[df['health_status']== 'alive', 'health_status']='Alive'        ","26c62068":"data.health_status.value_counts()","114a2e48":"data.loc[df['report_outcome']== 'confirmed', 'report_outcome']='Confirmed'     ","f39be63f":"data.report_outcome.value_counts()","e4bb15df":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndef Labelencoder_feature(x):\n    le=LabelEncoder()\n    x=le.fit_transform(x)\n    return x\ndata2=data.drop(columns=['id'])\ndata2=data2.apply(Labelencoder_feature)\ndata2.head()","b00f3dec":"fig = plt.figure(figsize=(20,10))\nsns.heatmap(data2.corr(), annot = True, fmt = '.2f', cmap = 'Blues', )","ac2a083f":"Features_Region_p=sns.PairGrid(data2, hue='disease')\n\nFeatures_Region_p.map_diag(plt.hist)\nFeatures_Region_p.map_offdiag(plt.scatter)","dad74166":"we can with aid of LabelEncoder later dedicate Null-Values to a separtae Class.","cb8d77c3":"Diseases and states or settelment","72dc36da":"# Diseases","c631c1d8":"# Disease and gender of patinets","ca105dd1":"# dieseas and age of Patients","a62d6e99":"the only feature which may have a correlation with dieseas is serotype and we see it is why this feature has values only for a spesific disease (Meninigent)\nthere is no reason to continue forecasting with aid of these features. Diseases have no colrelation with other features ","cc0ddae6":"Conclusion:\n\nwe can colculde from Data-Visulization that dieseases can occur independent of state, settlement, gender. and maybe only age is a feature which can affect the health-Status","43c84196":"# Data Visualization","80fbafc1":"the features have no correlation with dieseas or with eachothers!!!!","b74dbe00":"number of patinets in each year"}}