{"cell_type":{"9a057adc":"code","e13c273c":"code","ad56511a":"code","dd73c4df":"code","b7277a54":"code","ed1b5a4e":"code","965bda69":"code","c8723518":"code","f815d4f1":"code","6ae37e20":"code","e039ee4c":"code","f4ad8b9f":"code","d7464a25":"code","4029daf7":"code","a520750f":"code","52697dfb":"code","6b881659":"code","fa073984":"code","0403942d":"code","3ee06ae3":"code","b032a709":"markdown","dff2e12b":"markdown","e4f4eb6b":"markdown","c9fc928f":"markdown","4032d061":"markdown","54057855":"markdown","43cf2c19":"markdown","0dbb5cb3":"markdown","abddf42a":"markdown","78ae6a5f":"markdown","3f0077d0":"markdown","e0bd9a07":"markdown"},"source":{"9a057adc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e13c273c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","ad56511a":"df = pd.read_csv('..\/input\/okcupid-profiles\/okcupid_profiles.csv')\ndf = df.iloc[:,0:21]\ndf.head()","dd73c4df":"df.describe()\n","b7277a54":"total_nrows = df.shape[0]\ntotal_ncols = df.shape[1]\nprint('Total rows: ', total_nrows, ' Total columns: ', total_ncols)\nprint(df.info())\n","ed1b5a4e":"plt.figure(figsize=(12, 5))\ndf.isna().sum().plot(kind=\"bar\")\nplt.xticks(rotation=50)\n","965bda69":"df1 = df.dropna(subset=['diet', 'drugs','education','age','status','sex','orientation','body_type',\n'ethnicity','job','pets'])\n","c8723518":" def rmissingvaluecol(df1,threshold):\n    l = []\n    l = list(df1.drop(df1.loc[:,list((100*(df1.isnull().sum()\/len(df1.index))>=threshold))].columns, 1).columns.values)\n    print(\"# Columns having more than %s percent missing values:\"%threshold,(df1.shape[1] - len(l)))\n    print(\"Columns:\\n\",list(set(list((df1.columns.values))) - set(l)))\n    return l","f815d4f1":"l = rmissingvaluecol(df1,1)\ndf2 = df1[l]\n","6ae37e20":"df2.head()\n","e039ee4c":"print('body_type:')\nprint(list(set(df1['body_type'])))\nprint('diet:')\nprint(list(set(df1['diet'])))\nprint('Religion:')\nprint(list(set(df1['religion'])))","f4ad8b9f":"print('body_type:')\nlist(set(df1['body_type']))\n","d7464a25":"def show_percetage(plot, feature):\n    total = len(feature)\n    for p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x()+p.get_width()\/2-0.1\n        y = p.get_y()+p.get_height()\n        ax.annotate(percentage, (x, y), size=10)","4029daf7":"# sns.countplot(y = 'age', data = my_data)\nplt.figure(figsize=(15, 7))\nsns.catplot(x='age', data = df1, kind='count', palette='pastel', hue='sex', \n            height=5, # make the plot 5 units high\n            aspect=2)\nplt.xticks(rotation = 25)\nplt.title('Age distribution')\nplt.show()\n","a520750f":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='orientation', data=df1,\nhue='sex',\npalette='PRGn',\norder=df1['orientation'].value_counts().iloc[:10].index)\ntotal = float(len(df1))\nshow_percetage(ax, df1)\nplt.show()\n","52697dfb":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='body_type', data=df1,\nhue='sex',\npalette='rocket',\norder=df1['body_type'].value_counts().iloc[:10].index)\nax.set_title(\"Body type by gender\")\nax.set(xlabel='Count', ylabel='Body Type')\nshow_percetage(ax, df1)\nplt.show()","6b881659":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='diet', data=df1,\nhue='sex', palette='Paired',\norder = df1['diet'].value_counts().iloc[:10].index)\nplt.xticks(rotation = 30)\nax.set_title(\"Diet by gender\")\nshow_percetage(ax, df1)","fa073984":"plt.figure(figsize=(9, 5))\nsns.countplot(y='job', data=df1,\nhue='sex', palette='Reds',\norder = df1['job'].value_counts().iloc[:10].index)\nplt.show()","0403942d":"plt.figure(figsize=(9, 5))\nsns.countplot(y = 'pets', data=df1,\nhue='sex', palette='PuRd',\norder=df1['pets'].value_counts().iloc[:].index)\nplt.show()\n","3ee06ae3":"https:\/\/www.kaggle.com\/vikrantchauhan7682\/data-science-cat-3-group-14","b032a709":"**Q 8 Percentage of body types by gender. Represent using a\nsuitable graph.**","dff2e12b":"**Q 11 Compare pets of different gender. Represent using suitable\ngraphs.\n**","e4f4eb6b":"**Q 7 Orientation (in percentage) of male and females. Represent\nusing a suitable graph**","c9fc928f":"**Q 3 Find the rows with missing data. Report them**","4032d061":"**Q4 Make a barplot which shows missing values in different\ncolumns**","54057855":"**Q 9 Different diets by gender. Represent using suitable graph**","43cf2c19":"**Q 2 Describe Basic info about dataset**","0dbb5cb3":"**Q 10 Compare jobs of males and females. Represent using\nsuitable graphs**","abddf42a":"**Q 1 Read profile**","78ae6a5f":"**Q6 Visualization to show the age distribution of male and\nfemales.\n**","3f0077d0":"**Q 5 Number of unique values in different columns.Display using\nsuitable plot**","e0bd9a07":"**Zeeshan Nafees (18SCSE1010497)**   **Vikas kr. Mahaur (18SCSE1050038)** **Vivek kumar (18SCSE1140031) **Vikrant chauhan (18SCSE1140039)**\n"}}