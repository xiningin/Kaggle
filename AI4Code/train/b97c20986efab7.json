{"cell_type":{"c1561ced":"code","1887c7af":"code","9ff795fa":"code","9eb586ae":"code","19977a86":"code","673e74e3":"code","6439d21b":"code","126690c2":"code","541b1dfd":"code","b0cbc328":"code","d2795311":"code","b85218c5":"code","cf5b2295":"code","ed007f48":"code","f5a8bd8e":"code","f19a701f":"code","45c89fc7":"code","c5b2b84d":"code","15f59f17":"markdown","4d3ea4ea":"markdown","d376ee91":"markdown"},"source":{"c1561ced":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# print all the outputs in a cell\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport seaborn as sns\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1887c7af":"df_train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv', index_col=0)\ndf_train.head()\ndf_train.shape","9ff795fa":"df_test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv', index_col=0)\ndf_test.head()\ndf_test.shape","9eb586ae":"df_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv', index_col=0)\ndf_submission.head()\ndf_submission.shape","19977a86":"df_test_full = df_test.merge(df_submission, how='inner', on='date_time')\ndf_test_full.head()\ndf_test_full.shape","673e74e3":"df_train.isna().any()","6439d21b":"df_train.index = pd.to_datetime(df_train.index)\ndf_train.index","126690c2":"df_train['deg_C'].plot(linewidth=0.5);","541b1dfd":"df_train['relative_humidity'].plot(linewidth=0.5);","b0cbc328":"cols_plot = ['deg_C', 'relative_humidity', 'absolute_humidity', 'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5']\naxes = df_train[cols_plot].plot(marker='.', alpha=0.5, linestyle='None', figsize=(11, 9), subplots=True)\n","d2795311":"# create datasets\nX, y = df_train.drop(columns=['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']), df_train[['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']]\n","b85218c5":"from sklearn.linear_model import LinearRegression\n# define model\nmodel = LinearRegression()\n# fit model\nmodel.fit(X, y)\nmodel.score(X, y)","cf5b2295":"from sklearn.neighbors import KNeighborsRegressor\n# define model\nmodel = KNeighborsRegressor()\n# fit model\nmodel.fit(X, y)\nmodel.score(X, y)","ed007f48":"from sklearn.tree import DecisionTreeRegressor\n# define model\nmodel = DecisionTreeRegressor()\n# fit model\nmodel.fit(X, y)\nmodel.score(X, y)","f5a8bd8e":"Y_pred = model.predict(df_test)\nY_pred.shape","f19a701f":"for i in range(len(df_submission)):\n    df_submission.iloc[i,:] = Y_pred[:][i]","45c89fc7":"df_submission","c5b2b84d":"df_submission.to_csv('\/kaggle\/working\/submission.csv')","15f59f17":"# ","4d3ea4ea":"#### Visualization Train Data","d376ee91":"#### EDA"}}