{"cell_type":{"7d721372":"code","805bad86":"code","f966e44e":"code","cc0a988b":"code","1b9222a5":"code","425f1e5d":"code","1e9e08c5":"code","55d5f641":"code","2e6b698b":"code","9f867b05":"code","cb8bac33":"code","8bc6fa69":"code","2209a66c":"code","01717fe0":"code","a3cf120a":"code","cfac2a95":"code","af92566b":"code","4e2333b6":"code","2aa4ef5f":"code","9f883dba":"code","5fb06499":"code","89c9af5a":"code","439aaa97":"code","d2c975a9":"code","6bebaec5":"code","e3fd9942":"code","6b015945":"code","6e3a38fa":"code","528372e1":"code","b047f854":"code","30c4b28e":"code","c66848a4":"code","f8859d1e":"code","6bae7fa9":"code","c517feb0":"code","87f52477":"code","086b4e62":"code","161e392b":"code","1e512971":"code","e392cf9c":"code","68799bd6":"code","394fa109":"code","47bede71":"code","3e5a6dfb":"code","9a78d03b":"code","ec96bfb3":"code","bc567f6b":"code","a129d402":"code","9774f981":"code","55c3d428":"code","bfa2d6ab":"code","e13afb6c":"code","b2a6deb3":"code","628dbbc5":"code","623391f0":"code","d8706212":"code","bc272cae":"code","8d1c9d9b":"code","d0613d20":"code","cf24bb34":"code","39a65596":"code","efd886f0":"code","4161e034":"code","b9dd751f":"code","562f1ce4":"code","38b8e7c0":"code","e6d7a8ac":"code","bba2be66":"code","50843de8":"code","d97f17b4":"code","52d9de4f":"code","7eecbf6b":"code","7bfd7d6c":"code","f0b19496":"code","6196467d":"code","baaeeb94":"code","65eacd62":"code","4f483dd9":"code","52fd4d84":"code","c8fcc91e":"code","381f4f94":"code","707bb00a":"code","3613bd56":"code","428af5ca":"code","7f868145":"code","02773c91":"code","05ef4f9f":"code","e2d788f3":"code","52d78bde":"code","c460efd7":"code","3f76f5fd":"code","efe72af9":"code","6ac33fed":"markdown","904561ef":"markdown","6fd34829":"markdown","7e6a3ed0":"markdown","cbd48d71":"markdown","5795f5bc":"markdown"},"source":{"7d721372":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","805bad86":"df=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ndf_gender=pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","f966e44e":"df.head()","cc0a988b":"df.shape","1b9222a5":"df.describe()","425f1e5d":"df.info()","1e9e08c5":"df.columns","55d5f641":"df.drop(['PassengerId'],axis=1,inplace=True)\ndf.drop(['Ticket'],axis=1,inplace=True)\ndf.head()","2e6b698b":"#clean data\ndef clean_data(df):\n    df[\"fare\"]=df[\"fare\"].fillna(df[\"fare\"].dropna().median())\n    df[\"age\"]=df[\"age\"].fillna(df[\"age\"].dropna().median())\n    \n    df.loc[df[\"gender\"]==\"male\",\"gender\"]=0\n    df.loc[df[\"gender\"]==\"female\",\"gender\"]=1\n    \n    df[\"embarked\"]=df[\"embarked\"].fillna(\"S\")\n    df.loc[df[\"embarked\"]==\"S\",\"embarked\"]=0\n    df.loc[df[\"embarked\"]==\"C\",\"embarked\"]=1\n    df.loc[df[\"embarked\"]==\"Q\",\"embarked\"]=2","9f867b05":"\ndf.columns=[\"survived\",\"pclass\",\"name\",\"gender\",\"age\",\"sibsp\",\"parch\",\"fare\",\"cabin\",\"embarked\"]","cb8bac33":"df.columns","8bc6fa69":"#count the number of missing values in the dataframe\ndf.isnull().sum()","2209a66c":"print(df.age.median())","01717fe0":"def impute_median(series):\n    return series.fillna(series.median())","a3cf120a":"df.age=df.age.transform(impute_median)","cfac2a95":"df.embarked.unique()","af92566b":"print(df[\"embarked\"].mode())","4e2333b6":"#fill the missing embarked values with mode\ndf[\"embarked\"].fillna(str(df[\"embarked\"].mode().values[0]),inplace=True)","2aa4ef5f":"print(df.cabin.mode())","9f883dba":"#fill the missing cabin values with mode\ndf[\"cabin\"].fillna(str(df[\"cabin\"].mode().values[0]),inplace=True)","5fb06499":"df[\"cabin\"]=df[\"cabin\"].apply(lambda x:str(x).replace(' ','')if ' ' in str(x) else str(x))","89c9af5a":"df[\"cabin_data\"] = df[\"cabin\"].isnull().apply(lambda x: not x)\ndf[\"deck\"] = df[\"cabin\"].str.slice(0,1)\ndf[\"room\"] = df[\"cabin\"].str.slice(1,5).str.extract(\"([0-9]+)\", expand=False).astype(\"float\")\ndf[df[\"cabin_data\"]].head()","439aaa97":"# Extract titles from name\ndf['title']=0\nfor i in df:\n    df['title']=df['name'].str.extract('([A-Za-z]+)\\.', expand=False)  # Use REGEX to define a search pattern\ndf.head()","d2c975a9":"df.drop([\"name\"],axis=1,inplace=True)\ndf.drop([\"cabin\"],axis=1,inplace=True)\ndf.drop([\"cabin_data\"],axis=1,inplace=True)\ndf.drop(['room'],axis=1,inplace=True)","6bebaec5":"df.head()","e3fd9942":"df[\"family_size\"]=df.sibsp+df.parch\ndf.head()","6b015945":"#Gender show bar plot\nsns.set(style='whitegrid')\nax=sns.barplot(x=df['gender'].value_counts().index,y=df['gender'].value_counts().values,palette=\"Blues_d\",hue=['female','male'])\nplt.legend(loc=8)\nplt.xlabel('Gender')\nplt.ylabel('Frequency')\nplt.title('Show of Gender Bar Plot')\nplt.show()","6e3a38fa":"plt.figure(figsize=(18,5))\nsns.barplot(x=df['title'].value_counts().index,\n              y=df['title'].value_counts().values)\nplt.xlabel('Title')\nplt.ylabel('Frequency')\nplt.title('Show of Title Bar Plot')\nplt.show()","528372e1":"#title - age - gender\nplt.figure(figsize=(10,7))\nsns.barplot(x = \"title\", y = \"age\", hue = \"gender\", data = df)\nplt.xticks(rotation=45)\nplt.show()","b047f854":"#title - age - survived\nplt.figure(figsize=(10,7))\nsns.barplot(x = \"title\", y = \"age\", hue = \"survived\", data = df)\nplt.xticks(rotation=45)\nplt.show()","30c4b28e":"#title - age -embarked\nplt.figure(figsize=(10,7))\nsns.barplot(x = \"title\", y = \"age\", hue = \"embarked\", data = df)\nplt.xticks(rotation=45)\nplt.show()","c66848a4":"#title - age - pclass\nplt.figure(figsize=(10,7))\nsns.barplot(x = \"title\", y = \"age\", hue = \"pclass\", data = df)\nplt.xticks(rotation=45)\nplt.show()","f8859d1e":"#title - age - gender\nplt.figure(figsize=(18,7))\nsns.barplot(x = \"title\", y = \"age\", hue = \"family_size\", data = df)\nplt.xticks(rotation=45)\nplt.show()","6bae7fa9":"plt.figure(figsize=(12,7))\nsns.catplot(y=\"gender\", x=\"family_size\",\n                 hue=\"survived\",\n                 data=df, kind=\"bar\")\nplt.title('for Survived Gender & Family Size')\nplt.show()","c517feb0":"plt.figure(figsize=(18,7))\nsns.catplot(y=\"gender\", x=\"age\",\n                 hue=\"survived\",\n                 data=df, kind=\"bar\")\nplt.title('for Survived Age & Family Size')\nplt.show()","87f52477":"plt.figure(figsize=(18,7))\nsns.catplot(y=\"title\", x=\"age\",\n                 hue=\"survived\",\n                 data=df, kind=\"bar\")\nplt.title('for Title Age & Family Size')\nplt.show()","086b4e62":"plt.figure(figsize=(18,7))\nsns.catplot(y=\"title\", x=\"family_size\",\n                 hue=\"survived\",\n                 data=df, kind=\"bar\",height=6.27, aspect=11.7\/8.27)\nplt.title('for Title Family Size & Family Size')\nplt.show()","161e392b":"labels=df['title'].value_counts().index\ncolors=['blue','red',\"green\",\"pink\",\"orange\"]\nexplode=[0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nvalues=df['title'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Title According Analysis',color='black',fontsize=10)\nplt.show()","1e512971":"plt.figure(figsize=(10,10))\nsns.catplot(x=\"gender\", y=\"age\",\n                 hue=\"survived\",\n                 data=df, kind=\"bar\")\nplt.title('for Survived Gender & Age')\nplt.show()","e392cf9c":"labels=df['gender'].value_counts().index\ncolors=['blue','red']\nexplode=[0.2,0]\nvalues=df['gender'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Gender According Analysis',color='black',fontsize=10)\nplt.show()","68799bd6":"df['age']=df['age']\nbins=[0,14,24,34,54,74,89]\nlabels=[\"child\",\"youth\",\"young adult\",\"early adult\",\"adult\",\"senior\"]\ndf['age_group']=pd.cut(df['age'],bins,labels=labels)\nplt.figure(figsize=(16,5))\nsns.barplot(x='age_group',y='survived',data=df)\nplt.show()\n","394fa109":"labels=df['age_group'].value_counts().index\ncolors=['blue','red','yellow','green','brown',\"orange\"]\nexplode=[0.2,0,0,0,0,0]\nvalues=df['age_group'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Age Group According Analysis',color='black',fontsize=10)\nplt.show()","47bede71":"plt.figure(figsize=(10,10))\nsns.catplot(x=\"gender\", y=\"survived\",\n                 hue=\"deck\",\n                 data=df, kind=\"bar\",height=5.27, aspect=11.7\/8.27)\nplt.title('Survived Gender & Deck')\nplt.show()","3e5a6dfb":"labels=df['deck'].value_counts().index\ncolors=['blue','red','yellow','green','brown',\"orange\",\"pink\"]\nexplode=[0.2,0,0,0,0,0,0,0]\nvalues=df['deck'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Deck According Analysis',color='black',fontsize=10)\nplt.show()","9a78d03b":"sns.barplot(x='embarked',y='survived',data=df)\nplt.show()","ec96bfb3":"plt.figure(figsize=(10,10))\nsns.catplot(x=\"gender\", y=\"survived\",\n                 hue=\"embarked\",\n                 data=df, kind=\"bar\",height=5.27, aspect=11.7\/8.27)\nplt.title('Survived Gender & Embarked')\nplt.show()","bc567f6b":"labels=df['embarked'].value_counts().index\ncolors=['blue','red','green']\nexplode=[0.2,0,0]\nvalues=df['embarked'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Embarked According Analysis',color='black',fontsize=10)\nplt.show()","a129d402":"f,ax=plt.subplots(figsize=(9,10))\nsns.barplot(x=df['gender'].value_counts().values,y=df['gender'].value_counts().index,alpha=0.5,color='red',label='gender')\nsns.barplot(x=df['age_group'].value_counts().values,y=df['age_group'].value_counts().index,color='blue',alpha=0.7,label='age_group')\nax.legend(loc='upper right',frameon=True)\nax.set(xlabel='gender , age_group',ylabel='Groups',title=\"Gender vs Age Group \")\nplt.show()","9774f981":"#Gender show point plot\ndf['age_group'].unique()\nlen(df[(df['age_group']=='youth')].survived)\nf,ax1=plt.subplots(figsize=(25,10))\nsns.pointplot(x=np.arange(1,201),y=df[(df['age_group']=='youth')].survived,color='lime',alpha=0.8)\nsns.pointplot(x=np.arange(1,201),y=df[(df['age_group']=='youth')].family_size,color='red',alpha=0.5)\nplt.xlabel('Youth index State')\nplt.ylabel('Frequency')\nplt.title('Youth Survived & Family_Size')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","55c3d428":"labels=df['family_size'].value_counts().index\ncolors=['blue','red','green',\"orange\",\"pink\",\"brown\"]\nexplode=[0.2,0,0,0,0,0,0,0,0]\nvalues=df['family_size'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Family Size According Analysis',color='black',fontsize=10)\nplt.show()","bfa2d6ab":"plt.figure(figsize=(15,7))\nax = sns.pointplot(x=\"age\", y=\"family_size\", hue=\"survived\",data=df)\nplt.xticks(rotation=75)\nplt.show()","e13afb6c":"sns.set(style=\"whitegrid\", palette=\"muted\")\nsns.swarmplot(x=\"pclass\", y=\"age\", hue=\"survived\",\n              palette=[\"r\", \"c\", \"y\"], data=df)\nplt.show()","b2a6deb3":"sns.swarmplot(x=\"deck\", y=\"age\", hue=\"survived\",\n              palette=[\"r\", \"c\", \"y\"], data=df)\nplt.show()","628dbbc5":"sns.swarmplot(x=\"gender\", y=\"age\", hue=\"survived\",\n              palette=[\"r\", \"c\", \"y\"], data=df)\nplt.show()","623391f0":"sns.swarmplot(x=\"embarked\", y=\"age\", hue=\"survived\",\n              palette=[\"r\", \"c\", \"y\"], data=df)\nplt.show()","d8706212":"sns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.swarmplot(x=\"age_group\", y=\"age\", hue=\"survived\",\n              palette=[\"r\", \"c\", \"y\"], data=df)\nplt.show()","bc272cae":"sns.set(style=\"whitegrid\", palette=\"muted\")\nsns.lineplot(x=\"pclass\", y=\"age\",\n             hue=\"gender\", style=\"embarked\",\n             data=df)\nplt.show()","8d1c9d9b":"sns.set(style=\"whitegrid\", palette=\"muted\")\nsns.lineplot(x=\"pclass\", y=\"age\",\n             hue=\"gender\", style=\"survived\",\n             data=df)\nplt.show()","d0613d20":"print(df['gender'].value_counts(dropna=False))","cf24bb34":"fig=plt.figure(figsize=(18,6))\nplt.subplot2grid((3,4),(0,1))\ndf.survived[df.gender=='male'].value_counts(normalize=True).plot(kind='bar',alpha=1)\nplt.title(\"Men Survived\")\nplt.show()","39a65596":"female_color=\"#FA0000\"\nfig=plt.figure(figsize=(18,6))\nplt.subplot2grid((3,4),(0,2))\ndf.survived[df.gender=='female'].value_counts(normalize=True).plot(kind='bar',alpha=1,color=female_color)\nplt.title(\"Women Survived\")\nplt.show()","efd886f0":"female_color=\"#FA0000\"\nfig=plt.figure(figsize=(18,6))\nplt.subplot2grid((3,4),(0,3))\ndf.gender[df.survived==1].value_counts(normalize=True).plot(kind='bar',alpha=1,color=[female_color,'b'])\nplt.title(\"Gender of Survived\")\nplt.show()","4161e034":"fig=plt.figure(figsize=(18,6))\nplt.subplot2grid((2,3),(1,0),colspan=2)\nfor x in [1,2,3]:\n    df.age[df.pclass==x].plot(kind='kde')\n    \nplt.title('Class wrt Age')\nplt.legend(('1st','2nd','3rd'))\nplt.show()","b9dd751f":"fig=plt.figure(figsize=(18,6))\n\n#rich man\nplt.subplot2grid((4,4),(0,0))\ndf.survived[(df.gender=='male') & (df.pclass==1)].value_counts(normalize=True).plot(kind='bar',alpha=1,color='b')\nplt.title('Rich Man Survived')\n\n\n#poor man\nplt.subplot2grid((4,4),(0,1))\ndf.survived[(df.gender=='male') & (df.pclass==3)].value_counts(normalize=True).plot(kind='bar',alpha=1,color='r')\nplt.title('Poor Man Survived')\n\n#rich women\nplt.subplot2grid((4,4),(0,2))\ndf.survived[(df.gender=='female') & (df.pclass==1)].value_counts(normalize=True).plot(kind='bar',alpha=1,color='b')\nplt.title('Rich Women Survived')\n\n#poor  woman\nplt.subplot2grid((4,4),(0,3))\ndf.survived[(df.gender=='female') & (df.pclass==3)].value_counts(normalize=True).plot(kind='bar',alpha=1,color='g')\nplt.title('Poor Women Survived')\n\n\nplt.show()","562f1ce4":"plt.figure(figsize=(16,5))\nsns.barplot(x='pclass',y='age',data=df)\nplt.show()","38b8e7c0":"fig=plt.figure(figsize=(18,6))\nplt.subplot2grid((2,3),(0,2))\ndf.pclass.value_counts(normalize=True).plot(kind='bar',alpha=1)\nplt.title(\"Class\")\nplt.show()","e6d7a8ac":"plt.figure(figsize=(16,5))\nsns.barplot(x='pclass',y='fare',data=df)\nplt.show()","bba2be66":"plt.figure(figsize=(10,10))\nsns.jointplot(x=np.arange(1,217),y=df[(df['pclass']==1)].age,color='lime',alpha=0.8)\nplt.xlabel('First Class index State')\nplt.ylabel('Frequency')\nplt.title('First Class Frequency Age')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","50843de8":"plt.figure(figsize=(10,10))\nsns.jointplot(x=np.arange(1,185),y=df[(df['pclass']==2)].age,color='lime',kind='hex',alpha=0.8)\nplt.xlabel('Second Class index State')\nplt.ylabel('Frequency')\nplt.title('Second Class Frequency Age')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","d97f17b4":"plt.figure(figsize=(15,10))\nsns.jointplot(x=np.arange(1,492),y=df[(df['pclass']==3)].age,color='lime',space=0,kind='kde')\nplt.xlabel('Third Class index State')\nplt.ylabel('Frequency')\nplt.title('Third Class Frequency Age')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","52d9de4f":"df.sibsp.unique()","7eecbf6b":"sns.barplot(x='sibsp',y='age',data=df)\nplt.show()","7bfd7d6c":"plt.figure(figsize=(16,5))\nsns.barplot(x='gender',y='sibsp',data=df)\nplt.show()","f0b19496":"df.parch.unique()","6196467d":"sns.barplot(x='parch',y='age',data=df)\nplt.show()","baaeeb94":"sns.barplot(x='parch',y='sibsp',data=df)\nplt.show()","65eacd62":"plt.figure(figsize=(16,5))\nsns.barplot(x='deck',y='pclass',data=df)\nplt.show()","4f483dd9":"sum(df.pclass==3)","52fd4d84":"sum(df.pclass==2)","c8fcc91e":"sum(df.pclass==1)","381f4f94":"sns.barplot(x='pclass',y='survived',data=df)\nplt.show()","707bb00a":"plt.figure(figsize=(16,5))\nresult = df.groupby([\"deck\"])['survived'].aggregate(np.median).reset_index().sort_values('survived')\nsns.barplot(x='deck', y=\"survived\", data=df, order=result['deck'])\nplt.title('deck-survived')\nplt.show()","3613bd56":"df.corr()","428af5ca":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(),annot=True,linewidths=.5,fmt='.0%',ax=ax)\nplt.show()","7f868145":"df.head(2)","02773c91":"df['gender_factor'] = pd.factorize(df.gender)[0]\ndf.head(3)","05ef4f9f":"color_list = ['red' if i==1 else 'green' for i in df.loc[:,'gender_factor']]","e2d788f3":"fig=plt.figure(figsize=(18,6))\nplt.subplot2grid((2,3),(1,0),colspan=2)\nfor x in [0,1]:\n    df.age[df.gender_factor==x].plot(kind='kde')\n    \nplt.title('Class wrt Age')\nplt.legend(('Male','Female'))\nplt.show()","52d78bde":"df.survived.dropna(inplace = True)\nlabels = df.survived.value_counts().index\ncolors = [\"red\",\"lightblue\"]\nexplode = [0,0]\nsizes = df.survived.value_counts().values\n\n# visual cp\nplt.figure(0,figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('People According to Survived',color = 'blue',fontsize = 15)\nplt.show()","c460efd7":"df.age[(df.gender_factor==x) & (df.survived==1) & (df.embarked=='C') & (df.pclass==1)].mean()","3f76f5fd":"df_test['gender_factor'] = pd.factorize(df_test.Sex)[0]\ndf.head(3)","efe72af9":"df.head()","6ac33fed":"References:\n\n\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/data-sciencetutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/machine-learning-tutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/feature-selection-and-data-visualization\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners\n","904561ef":"![](https:\/\/img-s2.onedio.com\/id-5bda2344d3904b96297c7d81\/rev-0\/raw\/s-2e1fb20763765bc9ea221d742a17ee693be19558.jpg)","6fd34829":"**Fill the null values** with appropriate values using **aggregate functions** such as **mean, median or mode**","7e6a3ed0":"<h1>Data Cleaning<\/h1>","cbd48d71":"![](http:\/\/img07.deviantart.net\/af19\/i\/2014\/307\/c\/f\/r_m_s__titanic_class_system_by_monroegerman-d787jna.png)","5795f5bc":"<h1>Analysis of Titanic Disaster<\/h1>"}}