{"cell_type":{"41dfc922":"code","90ac6155":"code","497373df":"code","0b4c981f":"code","f56486a5":"code","b8a22e35":"code","77d18116":"code","a792b907":"code","f27cec69":"code","37ea2365":"code","d791f816":"code","37778479":"code","e896ceb1":"code","62793094":"code","6de1f672":"code","59c1159a":"code","8d8b63fe":"code","3c62d14e":"code","34432f9f":"code","175384fb":"code","461a9514":"code","ceab9793":"code","d600952c":"code","c0db79c3":"markdown","3441b33f":"markdown","6e968be8":"markdown","99210580":"markdown","a9e0dcfc":"markdown","5436bc4b":"markdown","d018ba8b":"markdown","996b9df5":"markdown","f00af0fb":"markdown","5d4f095c":"markdown","a0194f8b":"markdown","a8bf7bd6":"markdown","8e52cb3a":"markdown","b3f8129f":"markdown","ef78bc59":"markdown","356eb4e5":"markdown","9854516c":"markdown","299174ab":"markdown","eb311165":"markdown","00cf3743":"markdown","c933010b":"markdown","731896fe":"markdown","daa14768":"markdown","0dc4ebe8":"markdown","5dbdc7cb":"markdown","b16508b1":"markdown","902ca2ff":"markdown","2f5ad298":"markdown","79b25730":"markdown","2eb0ebbf":"markdown","6e41c546":"markdown","0c6561ad":"markdown","f72f66e8":"markdown","d321d6e3":"markdown","9aa25a13":"markdown","561c06f0":"markdown","50b73e72":"markdown"},"source":{"41dfc922":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","90ac6155":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n#%matplotlib qt\n# pip install PyQt5\n#from IPython.display import Image\n%matplotlib inline ","497373df":"#there are 12 variable of titanic dataset\ndata=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\", sep=\",\")\ndata.head(5)","0b4c981f":"data.Survived.value_counts()","f56486a5":"data.Fare.value_counts().head(10)","b8a22e35":"data.info()","77d18116":"data.dtypes","a792b907":"data.size","f27cec69":"data.shape","37ea2365":"data.describe().T","d791f816":"type(data)","37778479":"data.count()","e896ceb1":"data.isnull().values.any()","62793094":"data.isnull().sum()","6de1f672":"a=sns.barplot(x=\"Sex\", y=\"Survived\", hue=\"Sex\", data=data);\na.set_title(\"Cinsiyete G\u00f6re Survived Da\u011f\u0131l\u0131m\u0131\");","59c1159a":"sns.catplot(x=\"Pclass\", y=\"Fare\", kind=\"violin\", hue=\"Pclass\", col=\"Sex\", orient=\"v\", data=data);","8d8b63fe":"sns.catplot(x=\"Pclass\", y=\"Fare\", kind=\"bar\", hue=\"Pclass\", col=\"Sex\", orient=\"v\", data=data);","3c62d14e":"sns.distplot(data.Pclass);","34432f9f":"#kdeplot\nsns.kdeplot(data[\"Fare\"]).set_title(\"Fare Distribution\");","175384fb":"sns.pairplot(data)","461a9514":"import matplotlib.pyplot as plt\ncorr=data.corr()\nplt.figure(figsize=(8, 8))\nsns.heatmap(corr, vmax=.8, linewidths=0.05,square=True,annot=True,linecolor=\"pink\");","ceab9793":"plt.style.use(\"fivethirtyeight\")\nplt.bar(data.Age, data.Fare, color=\"#444444\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Fare\")\nplt.title(\"Fare Distribution By Age\")\nplt.legend(loc='upper left')\nplt.grid(True)\nplt.tight_layout()\nplt.show()","d600952c":"ages=data[\"Age\"]\nfare=data[\"Fare\"]\nplt.style.use(\"classic\")\nplt.hist(ages, color=\"#B0E0E6\")\nplt.title(\"Fare Plot By Age\")\nplt.xlabel(\"ages\")\nplt.ylabel(\"fare\")\nplt.tight_layout()\nplt.show();","c0db79c3":"**value_counts( )**\n","3441b33f":"# K\u00dcT\u00dcPHANELER\u0130N Y\u00dcKLENMES\u0130","6e968be8":"# Pairplot","99210580":"549 ki\u015finin hayatta kalmad\u0131\u011f\u0131n\u0131, 342 ki\u015finin hayatta kald\u0131\u011f\u0131n\u0131 inceledik.","a9e0dcfc":"891 g\u00f6zlem, 12 de\u011fi\u015fkenden olu\u015fmaktad\u0131r.","5436bc4b":"\u015eimdilik g\u00f6rselle\u015ftirme notebooku sona ermi\u015ftir. \u0130\u015finize yaramas\u0131 dile\u011fiyle..","d018ba8b":"# MATPLOTLIB K\u00dcT\u00dcPHANES\u0130 \u0130LE VER\u0130 G\u00d6RSELLE\u015eT\u0130RME","996b9df5":"# CATPLOT \u2014 BAR","f00af0fb":"**info()**","5d4f095c":"**count()**","a0194f8b":"De\u011fi\u015fkenlerin birbirleriyle korelasyonunu g\u00f6steren plot grafiklerini getirir.","a8bf7bd6":"# HISTOGRAM","8e52cb3a":"#  SEABORN \u0130LE VER\u0130 G\u00d6RSELLE\u015eT\u0130RME","b3f8129f":"Bu a\u015famada Jupyter Notebook ve Python programlama kullan\u0131lacakt\u0131r.\nHaydi ba\u015flayal\u0131m.","ef78bc59":"**dtypes( )**","356eb4e5":"# CATPLOT \u2014 ViOL\u0130N","9854516c":"**describe( ).T** ","299174ab":"**Missing Valuelar\u0131n Toplam Say\u0131s\u0131**","eb311165":"datasetin type\u0131n\u0131n **DataFrame** oldu\u011funu g\u00f6sterir.","00cf3743":"De\u011fi\u015fkenlerin sat\u0131r olarak g\u00f6r\u00fclmesini ve istatistiksel bilgilerini (min, max, standart sapma, mean vb.gibi) verir.","c933010b":"# VER\u0130YE \u0130LK BAKI\u015e","731896fe":"# HeatMap","daa14768":"# **BARPLOT**","0dc4ebe8":"Eksik g\u00f6zlem de\u011ferinin olup olmad\u0131\u011f\u0131na bakarak True veya False d\u00f6nd\u00fcr\u00fcr.","5dbdc7cb":"**MissingValue**","b16508b1":"Bu dataset toplam 10692 adet veriden olu\u015fmaktad\u0131r.","902ca2ff":"Datasetinin Dataframeden olu\u015ftu\u011funu, 891 observation (g\u00f6zlem) 12 variable(de\u011fi\u015fken), datasetinin 83.6 KB boyutta oldu\u011funu inceliyoruz.Buna ek olarak de\u011fi\u015fkenlerde 5 ader int, 5 adet kategorik ve 2 adet float bilgisine ula\u015f\u0131yoruz.","2f5ad298":"**type( )**","79b25730":"Bu blog postta Titanic verisetinin Matplotlib, Pandas ve Seaborn k\u00fct\u00fcphaneleriyle g\u00f6rselle\u015ftirmesi yap\u0131lacakt\u0131r.\n\u00d6ncelikle Titanic verisini indirelim.","2eb0ebbf":"# KDEPLOT","6e41c546":"# Distplot","0c6561ad":"**size( )**","f72f66e8":"# BARPLOT","d321d6e3":"Her bir de\u011fi\u015fkenin veri tiplerini g\u00f6r\u00fcyoruz.","9aa25a13":"**shape( )**","561c06f0":"* Verisetinin ilk 5 sat\u0131r\u0131na bakt\u0131\u011f\u0131m\u0131zda categorical, int ve floattan olu\u015fan 12 de\u011fi\u015fken vard\u0131r. De\u011fi\u015fkenlerin tan\u0131mlar\u0131 a\u015fa\u011f\u0131daki gibidir.\n* PassengerId : Yolcu id\n* Survived : Titanic gemisinde hayatta kalanlar 1 , hayatta kalmayanlar 0\n* Pclass : 1 : Ekonomi stat\u00fcs\u00fcd\u00fcr\n* 1st = Upper\n* 2nd = Middle\n* 3rd = Lower\n* Name : Yolcular\u0131n isimleri\n* Sex : Male\/Female\n* Age : Yolcular\u0131n Ya\u015flar\u0131\n* SlipSp : abi\/abla (1 or 0)\n* Parch : ebeveyn\/\u00e7ocuk (1 or 0)\n* Ticket : Bilet numaralar\u0131\n* Fare : Bilet fiyat\u0131\n* Cabin : Kabin numaras\u0131\n* Embarked : Liman isimleri (C, Q, S)\n* C = Cherbourg, Q = Queenstown, S = Southampton\n* read_csv( )\n* Csv datasetini pandas k\u00fct\u00fcphanesi ile okuduk.","50b73e72":"Age de\u011fi\u015fkeninde toplam 177 missing value vard\u0131r.\nCabin de\u011fi\u015fkeninde toplam 687 missing value vard\u0131r.\nEmbarked de\u011fi\u015fkeninde toplam 2 missing value vard\u0131r."}}