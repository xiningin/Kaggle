{"cell_type":{"56c81d36":"code","9115bed1":"code","27f92351":"code","87d8356b":"code","345b2f15":"code","3cd2428c":"code","769f5ce7":"code","dd12b1e2":"code","5c89ca74":"code","071b9a95":"code","7a6663d3":"code","57464ba5":"code","34af97eb":"code","45bb8b9f":"code","8c2b5a55":"code","44498c5f":"code","1f5e65d4":"code","541bbc8a":"markdown","bd5698b3":"markdown","f307caf5":"markdown","eabdbabf":"markdown","f8c00741":"markdown","c7c57b95":"markdown"},"source":{"56c81d36":"import numpy as np\nimport pandas as pd \nimport matplotlib\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9115bed1":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest =  pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\nsample_sub = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","27f92351":"train.head()","87d8356b":"train_X = train.drop([\"label\"], axis=1).to_numpy()                    # removing label column and converting it to array\ntrain_Y = train[\"label\"].to_numpy()\ntrain_X = train_X\/255","345b2f15":"import matplotlib.pyplot as plt","3cd2428c":"plt.imshow(train_X[1000].reshape(28,28),cmap = matplotlib.cm.binary)\nplt.show()","769f5ce7":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics ","dd12b1e2":"x_train,x_test,y_train,y_test = train_test_split(train_X,train_Y,test_size=0.30,random_state = 42)","5c89ca74":"x_train.shape ,x_test.shape ","071b9a95":"from sklearn.neighbors import KNeighborsClassifier\n\naccuracy = []\n\nfor i in range(1, 10):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train, y_train)\n    \n    prediction = knn.predict(x_test)\n    accuracy.append(metrics.accuracy_score(y_test, prediction))","7a6663d3":"plt.plot(range(1,10),accuracy)","57464ba5":"knn = KNeighborsClassifier(n_neighbors=3)                     # we chose n_neighbors=3 cuz in graph after 1 it has the maximum accuracy\nknn.fit(x_train,y_train)\n\npredictions = knn.predict(x_test)\nmetrics.accuracy_score(y_test,predictions)","34af97eb":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","45bb8b9f":"test = test\/255\npredictions = knn.predict(test)","8c2b5a55":"sample_sub.head()","44498c5f":"predictions","1f5e65d4":"Submit = pd.DataFrame()\nSubmit['ImageId']=sample_sub['ImageId']                       # Copying it as it is from the sample data\nSubmit['label']=predictions\nSubmit.to_csv('Submission.csv',index = False)","541bbc8a":"### Taking input","bd5698b3":"### Predicting for the test data set","f307caf5":"It has a extra column of Image ID, therefore adding it in our output file","eabdbabf":"### Checking the format of sample submission","f8c00741":"### Splitting the data","c7c57b95":"### Checking accuracy of the model for the given data"}}