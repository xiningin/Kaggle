{"cell_type":{"8b56f3fd":"code","f799d361":"code","3da14a62":"code","435edc2d":"code","ebb5d9de":"code","fb67f565":"code","f2e3df1b":"code","1ef78a25":"code","07ccc573":"code","56ebc842":"code","547507e6":"code","ce1f2c08":"code","c3dba313":"markdown","8fa8bc3a":"markdown","04c599c0":"markdown","789e5872":"markdown","a451a9b0":"markdown","f906a6ce":"markdown","d42ba155":"markdown","564c73c9":"markdown","12fb26b1":"markdown"},"source":{"8b56f3fd":"import pydicom\nimport pylab\n\nfilePath='..\/input\/siim-covid19-detection\/test\/00508faccd39\/d39fc1121992\/951211f8e1bb.dcm'\nds=pydicom.read_file(filePath)\n\nprint(ds.dir(\"pat\"))","f799d361":"pix = ds.pixel_array\nprint(pix)\nprint(pix.shape)","3da14a62":"pylab.imshow(ds.pixel_array, cmap=pylab.cm.bone)\npylab.show()","435edc2d":"!conda install gdcm -c conda-forge -y","ebb5d9de":"import os\nfrom PIL import Image\nimport pandas as pd\nfrom tqdm.auto import tqdm","fb67f565":"def read_xray(path, voi_lut = True, fix_monochrome = True):\n    # Original from: https:\/\/www.kaggle.com\/raddar\/convert-dicom-to-np-array-the-correct-way\n    dicom = pydicom.read_file(path)\n    \n    # VOI LUT (if available by DICOM device) is used to transform raw DICOM data to \n    # \"human-friendly\" view\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n               \n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n        \n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n        \n    return data","f2e3df1b":"def resize(array, size, keep_ratio=False, resample=Image.LANCZOS):\n    # Original from: https:\/\/www.kaggle.com\/xhlulu\/vinbigdata-process-and-resize-to-image\n    im = Image.fromarray(array)\n    \n    if keep_ratio:\n        im.thumbnail((size, size), resample)\n    else:\n        im = im.resize((size, size), resample)\n    \n    return im","1ef78a25":"train = pd.read_csv('..\/input\/siim-covid19-detection\/train_image_level.csv')","07ccc573":"path = '..\/input\/siim-covid19-detection\/train\/ae3e63d94c13\/288554eb6182\/e00f9fe0cce5.dcm'\ndicom = pydicom.read_file(path)","56ebc842":"image_id = []\ndim0 = []\ndim1 = []\nsplits = []\n\nfor split in ['test', 'train']:\n    save_dir = f'\/kaggle\/tmp\/{split}\/'\n\n    os.makedirs(save_dir, exist_ok=True)\n    \n    for dirname, _, filenames in tqdm(os.walk(f'..\/input\/siim-covid19-detection\/{split}')):\n        for file in filenames:\n            # set keep_ratio=True to have original aspect ratio\n            xray = read_xray(os.path.join(dirname, file))\n            im = resize(xray, size=256)  \n            im.save(os.path.join(save_dir, file.replace('dcm', 'jpg')))\n\n            image_id.append(file.replace('.dcm', ''))\n            dim0.append(xray.shape[0])\n            dim1.append(xray.shape[1])\n            splits.append(split)","547507e6":"%%time\n!tar -zcf train.tar.gz -C \"\/kaggle\/tmp\/train\/\" .\n!tar -zcf test.tar.gz -C \"\/kaggle\/tmp\/test\/\" .","ce1f2c08":"df = pd.DataFrame.from_dict({'image_id': image_id, 'dim0': dim0, 'dim1': dim1, 'split': splits})\ndf.to_csv('meta.csv', index=False)","c3dba313":"## 1. Display .dcm medical images on the notebook","8fa8bc3a":"## 6. Related papers","04c599c0":"## 4. Example of displaying training set labels","789e5872":"# Follow up. . .","a451a9b0":"## 3. Label distribution","f906a6ce":"## 5. Training set regression box distribution","d42ba155":"This part will take you about an hour and can be skipped. The jpg picture has been generated for you (siim-covid19-dete-jpg).\nRefer: https:\/\/www.kaggle.com\/xhlulu\/siim-covid-19-convert-to-jpg-256px","564c73c9":"## 2. Convert .dcm to .jpg","12fb26b1":"competitions\/kaggle\/26680\/logos\/header.png)\n# SIIM-FISABIO-RSNA COVID-19 Detection &nbsp;\ud83d\udccc\ud83d\udccc\ud83d\udccc\n\n## <font color=Green>Identify and localize COVID-19 abnormalities on chest radiographs<\/font> &nbsp;\u26f3\u26f3\u26f3\n\n#### <font color=#07d2f3>The contents of this notebook:<\/font>\n##### &nbsp; 1. Display .dcm medical images on the notebook  &nbsp;\ud83c\udf88\n##### &nbsp; 2. Convert .dcm to .jpg  &nbsp;\ud83c\udf88\n##### &nbsp; 3. Label distribution  &nbsp;\ud83c\udf88\n##### &nbsp; 4. Example of displaying training set labels  &nbsp;\ud83c\udf88\n##### &nbsp; 5. Training set regression box distribution  &nbsp;\ud83c\udf88\n##### &nbsp; 6. Related papers  &nbsp;\ud83c\udf88"}}