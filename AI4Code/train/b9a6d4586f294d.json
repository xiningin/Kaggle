{"cell_type":{"e717004e":"code","06c1b2b7":"code","47eb676e":"code","dd8b0936":"code","32cb695c":"code","705f4d21":"code","16b40900":"code","ded87b48":"code","c4074b1c":"code","00b59d67":"code","d809e199":"code","ec2f9593":"code","da3fbb21":"code","7e8b60f9":"code","c2f62ee9":"code","17ff4b40":"code","0544d662":"code","6305832a":"code","6b3cef62":"code","4751737d":"code","a90999b5":"code","6eb68ef3":"code","b5df05b3":"code","71c76ce5":"code","873c8e4c":"code","f1480e3d":"code","9adfcd71":"code","3325acb4":"code","007cedef":"code","b82d29dc":"code","fc380aab":"code","281d91a5":"code","b6de1872":"code","058f7b72":"code","63aefadf":"code","1e1ca025":"code","57c273d4":"code","9df3cc6b":"code","9698dcf2":"code","7a0b0d68":"code","1a0c6ac1":"code","35546327":"code","a3d9d14c":"code","8f13c977":"code","06448b7c":"code","74ce98ff":"code","d46904b4":"code","4df1df48":"code","2c8af0ae":"code","2985390e":"code","2a35a880":"code","19acfdb6":"markdown","62f63dc5":"markdown","e7f77929":"markdown","e8426bf5":"markdown","397e97ad":"markdown","0b65db6c":"markdown","3f60d8dd":"markdown","4331599e":"markdown","e583d8c9":"markdown","e464a54b":"markdown","d7381927":"markdown","2b0b3fed":"markdown","3ad0cc28":"markdown","0845aa15":"markdown","94cabcd6":"markdown","9f4115ce":"markdown","57f11b2a":"markdown","e52014fe":"markdown","3f2699be":"markdown","58d6e6b2":"markdown","bb24be2f":"markdown","ca7ebe14":"markdown","7d1242de":"markdown","efca63ca":"markdown","0c96a6d5":"markdown","ea837570":"markdown","ab2f8ff5":"markdown","6be9d6d3":"markdown","3842cc88":"markdown","7aeb6aab":"markdown","3d9bd26b":"markdown"},"source":{"e717004e":"import pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom scipy.stats import pearsonr\n%matplotlib inline ","06c1b2b7":"df=pd.read_csv('..\/input\/top2018.csv')","47eb676e":"df.info()","dd8b0936":"df['Duration_min']=df['duration_ms']\/60000","32cb695c":"df.drop(columns='duration_ms',inplace=True)","705f4d21":"sns.heatmap(df.corr(),cmap=\"YlOrRd\")","16b40900":"df['artists'].value_counts().head(10)","ded87b48":"sns.set_style(style='darkgrid')\nsns.distplot(df['danceability'],hist=True,kde=True)","c4074b1c":"# Set conditions\nVd=df['danceability']>=0.75\nLd=(df['danceability']>=0.5) & (df['danceability']<0.75)\nNd=df['danceability']<0.5","00b59d67":"# Create DataFrame ","d809e199":"data=[Vd.sum(),Ld.sum(),Nd.sum()]\nDance=pd.DataFrame(data,columns=['percent'],\n                   index=['Very','Regular','Instrumental'])","ec2f9593":"Dance","da3fbb21":"sns.distplot(df['energy'])","7e8b60f9":"# Set conditions\nVe=df['energy']>=0.75\nRe=(df['energy']>=0.5) & (df['energy']<0.75)\nLe=df['energy']<0.5","c2f62ee9":"#Create DataFrame\ndata=[Ve.sum(),Re.sum(),Le.sum()]\nEnergy=pd.DataFrame(data,columns=['percent'],\n                   index=['Very Energy','Regular Energy','Low Energy'])","17ff4b40":"Energy","0544d662":"Correlation=df[['danceability','energy','valence','loudness','tempo']]","6305832a":"sns.heatmap(Correlation.corr(),annot=True,cmap=\"YlOrRd\")","6b3cef62":"sns.jointplot(data=Correlation,y='energy',x='loudness',kind='reg',stat_func=pearsonr)","4751737d":"df['Rhythm']=df['tempo']","a90999b5":"df.loc[df['tempo']>168,'Rhythm']='Presto'\ndf.loc[(df['tempo']>=110) & (df['tempo']<=168),'Rhythm']='Allegro'\ndf.loc[(df['tempo']>=76) & (df['tempo']<=108),'Rhythm']='Andante'\ndf.loc[(df['tempo']>=66) & (df['tempo']<=76),'Rhythm']='Adagio'\ndf.loc[df['tempo']<65,'Rhythm']='Length'","6eb68ef3":"df['Rhythm'].value_counts()","b5df05b3":"sns.set_style(style='darkgrid')\nRhy=df['Rhythm'].value_counts()\nRhy_DF=pd.DataFrame(Rhy)\nsns.barplot(x=Rhy_DF.Rhythm, y=Rhy_DF.index, palette=\"viridis\")\nplt.title('Popular keys')","71c76ce5":"df[['name','artists','danceability','valence','tempo','Rhythm']].sort_values(by='danceability',ascending=False).head(10)","873c8e4c":"df[['name','artists','energy','valence','tempo','Rhythm']].sort_values(by='energy',ascending=False).head(10)","f1480e3d":"df[['name','artists','energy','valence','tempo','Rhythm']].sort_values(by='valence',ascending=False).head(10)","9adfcd71":"df['artists'].value_counts().head(4)","3325acb4":"XXXTENT=df[df['artists']=='XXXTENTACION']","007cedef":"XXXTENT[['name','danceability','energy','loudness','valence','tempo','Rhythm']]","b82d29dc":"PMalone=df[df['artists']=='Post Malone']","fc380aab":"PMalone[['name','danceability','energy','loudness','valence','tempo','Rhythm']]","281d91a5":"Drake=df[df['artists']=='Drake']","b6de1872":"Drake[['name','danceability','energy','loudness','valence','tempo','Rhythm']]","058f7b72":"Edshe=df[df['artists']=='Ed Sheeran']\nEdshe[['name','danceability','energy','loudness','valence','acousticness','tempo','Rhythm']]","63aefadf":"Mayores=df[df['mode']==1]\nMenores=df[df['mode']==0]","1e1ca025":"# Variables separation according to the scale to which Major or minor belongs","57c273d4":"MayoresD=Mayores[Mayores['danceability']>=0.5]\nMenoresD=Menores[Menores['danceability']>=0.5]","9df3cc6b":"# We eliminate the columns that say nothing in the study","9698dcf2":"MayoresD=Mayores.drop(columns=['mode','time_signature'])\nMenoresD=Menores.drop(columns=['mode','time_signature'])","7a0b0d68":"# Heat map for Major scales","1a0c6ac1":"sns.heatmap(MayoresD.corr(),cmap=\"YlOrRd\")","35546327":"# Heat map for Less scales","a3d9d14c":"sns.heatmap(MenoresD.corr(),cmap=\"YlOrRd\")","8f13c977":"# We create the variables and assign the columns that we want to correlate","06448b7c":"MaycorD=MayoresD[['danceability','energy','valence','loudness','tempo']]\nMencorD=MenoresD[['danceability','energy','valence','loudness','tempo']]","74ce98ff":"# Major scale correlation","d46904b4":"sns.heatmap(MaycorD.corr(),annot=True,cmap=\"YlOrRd\")","4df1df48":"sns.heatmap(MencorD.corr(),annot=True,cmap=\"YlOrRd\")","2c8af0ae":"df.loc[ df['key']==0 ,'key']='C'    \ndf.loc[ df['key']==1 ,'key']='C#'    \ndf.loc[ df['key']==2 ,'key']='D'    \ndf.loc[ df['key']==3 ,'key']='D#'    \ndf.loc[ df['key']==4 ,'key']='E'    \ndf.loc[ df['key']==5 ,'key']='F'    \ndf.loc[ df['key']==6 ,'key']='F#'    \ndf.loc[ df['key']==7 ,'key']='G'    \ndf.loc[ df['key']==8 ,'key']='G#'    \ndf.loc[ df['key']==9 ,'key']='A'    \ndf.loc[ df['key']==10 ,'key']='A#' \ndf.loc[ df['key']==11 ,'key']='B' ","2985390e":"sns.set_style(style='darkgrid')\nkeys=df['key'].value_counts()\nkey_DF=pd.DataFrame(keys)\nsns.barplot(x=key_DF.key, y=key_DF.index, palette=\"viridis\")\nplt.title('Popular keys')","2a35a880":"df[['danceability','energy','valence','key']].groupby(by='key').mean().sort_values(by='danceability',ascending=False)","19acfdb6":"\n# Data treatment  regarding the 'MODE' column\n\nWe will analyze the data in such a way that we consider values \u200b\u200bhigher than 0.5 in the danceability and energy columns because most of the data are concentrated in these ranges and we do not want values \u200b\u200blower than 0.5, affecting a possible correlation between columns.","62f63dc5":"# Danceablity column analysis","e7f77929":"# Correlation  Zone \n\nIn this area we will take into account the most important variables according to the preliminary analysis of the heat maps previously seen\n","e8426bf5":"# Identification of correlations between columns.\n\nIn this step we will help you with the `corr ()` function of pandas and then we will make a heat map that will clearly show the correlations between certain columns, although the ideal thing before this step is to have an idea of \u200b\u200bthe columns that will have a possible correlation.","397e97ad":"**Mode Column**\n\nMode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.","0b65db6c":"# Keys\nkeyThe key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C\u266f\/D\u266d, 2 = D, and so on.","3f60d8dd":"**We make the conversion of the column duration  to place it in standard format (minutes:seg )**","4331599e":"# Analysis Top 100 Spotify Tracks of 2018\n\nAt the end of each year, Spotify compiles a playlist of the songs streamed most often over the course of that year. This year's playlist (Top Tracks of 2018) includes 100 songs. The question is: **`What do these top songs have in common? Why do people like them?`**\n\n**`Original Data Source:`** The audio features for each song were extracted using the Spotify Web API and the spotipy Python library. Credit goes to Spotify for calculating the audio feature values.\n\n**`Data Description:`** There is one .csv file in the dataset. (top2018.csv) This file \n\n**`includes:`**\n\n* Spotify URI for the song\n* Name of the song\n* Artist(s) of the song\n* Audio features for the song (such as danceability, tempo, key etc.)\n* A more detailed explanation of the audio features can be found in the Metadata tab.\n\n**`Exploring the Data:`** Some suggestions for what to do with the data:\n\n1. Look for patterns in the audio features of the songs. Why do people stream these songs the most?\n2. Try to predict one audio feature based on the others\n3. See which features correlate the most\n\n**`NOTE:`** *At the end of this notebook you will be providing the conclusions of the study*","e583d8c9":"\n# Classification according to the tempo of the track","e464a54b":"# What is the musical tempo?\nAt first the musical scores did not give us indications about the tempo or they were very scarce, so each interpreter performed it at ease, but the idea of \u200b\u200bthe tempo begins to change from the eighteenth and nineteenth century, possibly as a consequence of the fact that composers will be tired of listening to interpretations of their works with completely arbitrary times. Then came a notation that expressed the \"speed\" or form that the works should be executed.\n\nThe 5 most usual ones were:\n\n* Length: very slow (20 bpm)\n* Adagio: slow and majestic (66 to 76 bpm)\n* Andante: at the pace, quiet, a little vivacious (76 to 108 bpm)\n* Allegro: animated and fast. (110 to 168 bpm).\n* Presto: very fast (168 to 200 bpm).","d7381927":"**ANALYSIS:** We can observe in the strongest tones the existing correlations between the different columns, at first glance the `\"loudness and energy\"` columns call our attention but our duty is to explore the behavior of each one of the variables.","2b0b3fed":"\n**ANALYSIS:** As we can observe the tracks with minor scales show us correlation better between the most important variables\n","3ad0cc28":"# Analysis of artists with greater presence in the 100 most played songs of 2018\n\nWe are going to analyze the 4 artists with more songs within the Top 100 to see taste patterns among the clients","0845aa15":"# Artista Drake","94cabcd6":"**NOTE:** Although according to the data presented the artist is characterized by having more danceable tracks one could say that his influence in this ranking is due to the Hip Hop genre due to the speed belongs to the rhythm \"ALLEGRO\".","9f4115ce":"**ANALYSIS:** In this graph we can see that most of the tracks are considered danceable from values \u200b\u200bhigher than 0.5, but to make a better analysis we are going to divide them into 3 groups:\n\n* Greater than 75% --- Very danceable\n* between 50% and 74% - Regularly danceable\n* Minor 50% - non-danceable or instrumental music","57f11b2a":"# Energy tracks","e52014fe":"**NOTE:** In the case of this artist we can observe the same tendency with respect to the rhythm \"ALLEGRO\".","3f2699be":"# Artista Ed Sheran ","58d6e6b2":"# Top 10 songs more likely to create positive feelings\n\nA measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n","bb24be2f":"# Top 10 songs with the most energy\n\nEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.","ca7ebe14":"# Top 10 of the most danceable songs","7d1242de":"**NOTE:** As we can see these songs are influenced by the intermediate rhythms offered by the following genres:\n * ***Hip hop***\n * ***reggaeton***\n * ***Pop***\n * ***Rap***\n        ","efca63ca":"**ANALYSIS:** We can clearly observe that as the values \u200b\u200bof loudness are closer to zero the probability that our song has a high content of rhythms is higher, in general these values \u200b\u200bshould be kept below zero but not very far away","0c96a6d5":"# Conclusions:\n\nTo answer the 2 initial questions posed by this data set, we can say that there was only a correlation between energy and noise, on the other hand, you can see that the main reason for people to like these songs is In relation to the time of the track, let's say that most of the tracks were within the range ***\"ALLEGRO\"*** and ***\"ANDANTE\"*** that are characteristic of the genres:\n\n* ***Hip hop***\n* ***reggaeton***\n* ***Pop***\n* ***Rap***\n\n","ea837570":"**FINAL!!!!**","ab2f8ff5":"# import libraries ","6be9d6d3":"# Top 10 artists with the largest presence in the Top 100","3842cc88":"# Artista XXXTENTATION","7aeb6aab":"# Parameter relationship by key\n\nAs we can see the most danceable tracks go by the key \"G and C #\" and those that have more energy have \"F #, C # and D\" ","3d9bd26b":"# Artista Post Malone"}}