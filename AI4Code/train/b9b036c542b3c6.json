{"cell_type":{"b42af775":"code","70dce9cf":"code","453f107e":"code","f1d24c19":"code","5143678d":"code","1ea82873":"code","a3ee8fac":"code","c0cc3863":"code","a9c0068d":"code","5c5711a1":"code","bc9ca4cd":"code","d4cb306e":"code","a57bc75c":"code","749e3054":"code","848a26a4":"code","159aa3e5":"code","4bf6ac76":"code","16fd1663":"code","f047d797":"markdown","9453ed78":"markdown","bd84d841":"markdown","f270c29e":"markdown"},"source":{"b42af775":"# Hello Viewer\n# I'm a beginner in Data Science and looking forward to some valuable feedback.\n# Please drop any suggestion or feedback you have in the comments.","70dce9cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualization\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","453f107e":"df = pd.read_csv('\/kaggle\/input\/dogs-of-zurich\/20170308hundehalter.csv')","f1d24c19":"df = df.rename(columns={'ALTER': 'Age','GESCHLECHT':'Gender',\n                        'STADTKREIS': 'District','RASSE1': 'Primary Breed',\n                        'RASSE2':'Secondary Breed','GEBURTSJAHR_HUND': 'Year of Birth',\n                        'GESCHLECHT_HUND': 'Dog Gender','HUNDEFARBE':'Color',\n                        'RASSENTYP':'Breed Type', 'HALTER_ID':'Holder_id'\n                       })","5143678d":"df.dtypes","1ea82873":"df.dropna(axis=1, how='all', inplace=True)\ndf.drop(columns=['Secondary Breed', 'RASSE1_MISCHLING'], inplace=True)\ndf = df[df.Age.notnull()]","a3ee8fac":"df","c0cc3863":"label = ['11-20', '21-30', '31-40', '41-50', '51-60', '61-70', '71-80', '81-90','91-100']\nx = np.arange(len(label))\nwidth = 0.35\n# df.Age.unique()","a9c0068d":"men, women = [], []\nfor age in label:\n    men.append(len(df[(df.Gender == 'm') & (df.Age == age)]))\n    women.append(len(df[(df.Gender == 'w') & (df.Age == age)]))\n    \nprint(men)\nprint(women)","5c5711a1":"fig,ax = plt.subplots(figsize=(12,7))\nrec = ax.bar(x-width\/2, men, width, label='Men')\nrect = ax.bar(x+width\/2, women, width, label='Women')\nax.set_xticks(x)\nax.set_xticklabels(label)\nax.set_ylabel('No. of people')\nax.set_title('Men vs Women Ownership by Age Group')\nax.legend()","bc9ca4cd":"df['Breed Type'].unique()","d4cb306e":"t1, t2, t3 = [], [], []\nfor age in label:\n    t1.append(len(df[(df['Breed Type'] == 'K') & (df.Age == age)]))\n    t2.append(len(df[(df['Breed Type'] == 'I') & (df.Age == age)]))\n    t3.append(len(df[(df['Breed Type'] == 'II') & (df.Age == age)]))\nprint(t1)\nprint(t2)\nprint(t3)","a57bc75c":"fig1,ax1 = plt.subplots(figsize=(12,7))\nrec = ax1.bar(x-width\/2, t1, width, label='Type K')\nrect = ax1.bar(x+width\/2, t2, width, label='Type I')\nrects = ax1.bar(x, t3, width, label='Type II')\nax1.set_xticks(x)\nax1.set_xticklabels(label)\nax1.set_ylabel('No. of Dogs')\nax1.set_title('Type of Breed Ownership by Age Group')\nax1.legend()","749e3054":"df.District.unique()","848a26a4":"type_k = df[df['Breed Type'] == 'II']\ntype_k.Color.unique()","159aa3e5":"colors = ['schwarz', 'blue', 'braun', 'wildfarbig', 'weiss', 'orange']\ny = np.arange(len(colors))\n","4bf6ac76":"d1, d2, d3 = [], [], []\nfor c in colors:\n    d1.append(len(df[(df['Breed Type'] == 'K') & (df.Color == c)]))\n    d2.append(len(df[(df['Breed Type'] == 'I') & (df.Color == c)]))\n    d3.append(len(df[(df['Breed Type'] == 'II') & (df.Color == c)]))\n    \nprint(d1,d2,d3)\n    ","16fd1663":"fig2, ax2 = plt.subplots(figsize=(12,7))\ntype_one = ax2.plot(y, d1, '-o', label='Type K')\ntype_two = ax2.plot(y, d2, '-o', label='Type I')\ntype_three = ax2.plot(y, d3, '-o', label='Type II')\nax2.set_xticks(y)\nax2.set_xticklabels(colors)\nax2.set_ylabel('No. of Dogs')\nax2.set_title('Selected Colors Distribution among Breed Type')\nax2.legend()","f047d797":"# TYPES OF COLUMNS","9453ed78":"# Ownership Distribution Based on Gender in Different Age Groups","bd84d841":"# SELECTED COLOR DISTRIBUTION AMONG BREED TYPE","f270c29e":"# TYPE OF BREED OWNERSHIP DISTRIBUTION BY AGE GROUPS"}}