{"cell_type":{"8c955fd3":"code","059fbb56":"code","fd2cf96d":"code","d94cbd5d":"code","d30f51b2":"code","6df0099b":"code","a196eb95":"code","7b9c3f60":"code","5992715e":"code","98db705c":"code","7d187c32":"code","b326b833":"markdown","b933ece0":"markdown","8e771d84":"markdown","da2145ef":"markdown"},"source":{"8c955fd3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","059fbb56":"## 2002 Elections ## \nNA2002 = pd.read_csv(\"..\/input\/National Assembly 2002 - Updated.csv\", encoding = \"ISO-8859-1\")\nWinner02 = pd.DataFrame([])\nprint(NA2002.head())\nTtl_Results_2002 = len(NA2002[\"Constituency_title\"].unique())\nprint(\"Missing Results in 2002 Elections are:\",272-Ttl_Results_2002)\n\nprint(\"============\")\nprint(NA2002[\"Constituency_title\"].unique())\nprint(\"============\")\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA02 = NA2002.loc[NA2002['Constituency_title']==Const, ['Party','Votes','Total_Votes', 'Seat']]\n    if NA02.empty == True:\n        print(\"2002 Missing:\",Const) # missing constituency\n    if NA02.empty == False:\n        MAX = (NA02.loc[NA02['Votes'].idxmax()]) # party recieiving maximum votes is the winner\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['Total_Votes'], MAX['Seat']]).T\n        Winner02 = pd.concat([Winner02,temp])\nWinner02 = Winner02.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes', 4:'Seat'}) # Winners of 2002 Elections\n\n","fd2cf96d":"## 2008 Elections ##\nNA2008 = pd.read_csv(\"..\/input\/National Assembly 2008.csv\", encoding = \"ISO-8859-1\")\nWinner08 = pd.DataFrame([])\n\nprint(NA2008.head())\nTtl_Results_2008 = len(NA2008[\"ConstituencyTitle\"].unique())\nprint(\"Missing Results in 2008 Elections are:\",272-Ttl_Results_2008)\n\nprint(\"============\")\nprint(NA2008[\"ConstituencyTitle\"].unique())\nprint(\"============\")\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA08 = NA2008.loc[NA2008['ConstituencyTitle']==Const, ['Party','Votes','TotalVotes', 'Seat']]\n    if NA08.empty == True:\n        print(\"2008 Missing:\",Const) # missing constituency\n    if NA08.empty == False:\n        MAX = (NA08.loc[NA08['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['TotalVotes'], MAX['Seat']]).T\n        Winner08 = pd.concat([Winner08,temp])\nWinner08 = Winner08.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes', 4:'Seat'}) # Winners of 2008 Elections\n","d94cbd5d":"def replace_values(head_title, old_value, new_value):\n    row=NA2013.index[NA2013[head_title]==old_value]\n    col = NA2013.columns.get_loc(head_title)\n    NA2013.iloc[row,col]=new_value\n    return\n    ","d30f51b2":"## 2013 Elections ##\nNA2013 = pd.read_csv(\"..\/input\/National Assembly 2013 - Updated(v11).csv\", encoding = \"ISO-8859-1\")\nWinner13 = pd.DataFrame([])\n\nreplace_values(\"ConstituencyTitle\", \"Na-83\",\"NA-83\")\nreplace_values(\"Party\", \"PTI\",\"Pakistan Tehreek-e-Insaf\")\nreplace_values(\"Party\", \"MQM\",\"Muttahida Qaumi Movement Pakistan\")\nreplace_values(\"Party\", \"PML-N\",\"Pakistan Muslim League (N)\")\nreplace_values(\"Party\", \"PPP-P\",\"Pakistan Peoples Party Parliamentarians\")\nreplace_values(\"Party\", \"AJP\",\"Awami Justice Party\")\nreplace_values(\"Party\", \"APML\",\"All Pakistan Muslim League\")\nreplace_values(\"Party\", \"MWM\",\"Majlis-e-Wahdat-e-Muslimeen Pakistan\")\n\n\nreplace_values(\"Party\", \"JUP-N\",\"Jamiat Ulama-e-Pakistan  (Noorani)\")\nreplace_values(\"Party\", \"MQMP\",\"Mohajir Qaumi Movement Pakistan\")\n\n#S M Farooq of PMA belongs to PAkistan Musliam Alliance\n# Mangal Khan Kharooti participated as independent so changed done for the two candidates.\n\nprint(NA2013.head())\nTtl_Results_2013 = len(NA2013[\"ConstituencyTitle\"].unique())\nprint(\"Missing Results in 2013 Elections are:\",272-Ttl_Results_2013)\nprint(\"============\")\nprint(NA2013[\"ConstituencyTitle\"].unique())\nprint(\"============\")\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA13 = NA2013.loc[NA2013['ConstituencyTitle']==Const, ['Party','Votes','TotalVotes', 'Seat']]\n    Votes = NA13['Votes'].astype('int64')\n    NA13['Votes'] = Votes\n    if NA13.empty == True:\n        print(\"2013 Missing:\",Const) # missing constituency\n    if NA13.empty == False:\n        MAX = (NA13.loc[NA13['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['TotalVotes'], MAX['Seat']]).T\n        Winner13 = pd.concat([Winner13,temp])\nWinner13 = Winner13.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes', 4:'Seat'}) # Winners of 2013 Elections","6df0099b":"Winner13","a196eb95":"Total_Seats = 272\nWinners = pd.DataFrame([])\nCon = pd.DataFrame([])\n\nfor i in range(Total_Seats):\n    Const = \"NA-%d\"%(i+1)\n    if Const != \"NA-8\" and Const != \"NA-119\" and Const != \"NA-207\" and Const != \"NA-235\" and Const != \"NA-266\":\n        tempCon = (Winner13.loc[Winner13['Constituency']==Const,['Constituency']])\n        tempCon = tempCon.values.ravel()\n        tempSeat = (Winner13.loc[Winner13['Constituency']==Const,['Seat']])\n        tempSeat = tempSeat.values.ravel()\n        temp13 = (Winner13.loc[Winner13['Constituency']==Const,['Party']])\n        temp13 = temp13.values.ravel()\n        temp08 = (Winner08.loc[Winner08['Constituency']==Const,['Party']])\n        temp08 = temp08.values.ravel()\n        temp02 = (Winner02.loc[Winner02['Constituency']==Const,['Party']])\n        temp02 = temp02.values.ravel()\n        temp = pd.DataFrame([tempCon, tempSeat, temp02,temp08,temp13])\n        temp = temp.rename(columns = {0:'Winner'})\n        Winners = pd.concat([Winners,temp], axis = 1)\n        Con = pd.concat([Con,pd.DataFrame([Const])])","7b9c3f60":"Final = Winners.T\nFinal = Final.rename(columns = {0: 'Constituency', 1: 'Seat', 2:'2002', 3:'2008', 4:'2013'})\nFinal['2002'] = Final['2002'].replace(['Indepndent'], 'Independent')\n#Final['2002'] = Final['2002'].replace(['Muttahidda Majlis-e-Amal Pakistan'], 'MUTTAHIDA MAJLIS-E-AMAL PAKISTAN')\nFinal['2002'] = Final['2002'].replace(['Muttahidda Majlis-e-Amal'], 'Muttahidda Majlis-e-Amal Pakistan')\nFinal['2002'] = Final['2002'].replace(['Pakistan Mulim League(QA)'], 'Pakistan Muslim League(QA)')\nFinal['2002'] = Final['2002'].replace(['Pakistan Peoples Party Parliamentarian'], 'Pakistan Peoples Party Parliamentarians')\nFinal['2002'] = Final['2002'].replace(['Pakistan Peoples Party Parlimentarians'], 'Pakistan Peoples Party Parliamentarians')\nFinal['2002'] = Final['2002'].replace(['Pakistan peoples Party Parlimentarians'], 'Pakistan Peoples Party Parliamentarians')\nFinal['2002'] = Final['2002'].replace(['Muttahida Qaumi Moment'], 'Muttahida Qaumi Movement Pakistan')\nFinal['2008'] = Final['2008'].replace(['MUTTHIDA\\xa0MAJLIS-E-AMAL\\xa0PAKISTAN'], 'Muttahidda Majlis-e-Amal Pakistan')\nFinal['2008'] = Final['2008'].replace(['Pakistan Muslim League'], 'Pakistan Muslim League(QA)')\nFinal['2013'] = Final['2013'].replace(['Pakistan Muslim League'], 'Pakistan Muslim League(QA)')\n#np.unique(Final['2013'])","5992715e":"Final","98db705c":"Total_Seats = 272\nSafe = pd.DataFrame([])\nfor i in range(Total_Seats):\n    Const = \"NA-%d\"%(i+1)\n    if Const != \"NA-8\" and Const != \"NA-119\" and Const != \"NA-207\" and Const != \"NA-235\" and Const != \"NA-266\":\n        tempCon = (Final.loc[Final['Constituency']==Const,['Constituency']])\n        tempCon = tempCon.values[0][0]\n        tempSeat = (Final.loc[Final['Constituency']==Const,['Seat']])\n        tempSeat = tempSeat.values[0][0]\n        Party = (Final.loc[Final['Constituency']==Const,['2002']])\n        Party = Party.values[0][0]\n        Num = len(np.unique(Final.loc[Final['Constituency'] == Const]))-2\n        temp = pd.DataFrame([tempCon, tempSeat, Party, Num]).T\n        Safe = pd.concat([Safe,temp])\n\n#Safe\nSafe_Const = Safe[Safe[3]==1]\nPPPP_Safe = (Safe_Const[2]=='Pakistan Peoples Party Parliamentarians').sum()\nMQMP_Safe = (Safe_Const[2]=='Muttahida Qaumi Movement Pakistan').sum()\nInd_Safe =  (Safe_Const[2]=='Independent').sum()\n\nx = np.arange(len(np.unique(Safe_Const[2])))\nvalue = [PPPP_Safe, MQMP_Safe, Ind_Safe]\n\npp, mq, nd = plt.bar(x,value)\npp.set_facecolor('r')\nmq.set_facecolor('g')\nnd.set_facecolor('b')\nplt.xticks(x,('PPPP', 'MQM-P', 'Ind'))\nplt.show()\n\nSafe_Const","7d187c32":"print(\"Safe Seats Count is \\nPPPP:\", PPPP_Safe,\"\\nMQM_P:\",MQMP_Safe,\"\\nIndependent:\",Ind_Safe)","b326b833":"**List of Winners**\n\nSo, finally we can observe the winners from every constituency in the following table.","b933ece0":"**Finding out winning parties of previous elections**\n\nLets start with figuring out the winning parties of 2002, 2008, and 2013 elections for every constitutency.","8e771d84":"**Finding Safe Seats**\n\nFirst lets try to find the constituencies for which the same party won the elections in 2002, 2008 and 2013.\nIt can be observed that out of 267 constitutencies analyzed *(accounting  for the 8 constituencies for which the results were not available in the dataset)*, **43** can be categorized as safe seats i.e. the seats that have been won by same party in previous 3 elections. By analyzing bit more we can see that only *Independent Candidates*, *Muttahida Qaumi Movement Pakistan(MQM-P)* and *Pakistan Peoples Party Parliamentarians (PPPP)* are the parties to achieve the consecutive 3 times winning streak. Of these 23 seats belong to *PPPP*, **12** belong to *MQM-P*  and remaining 8 seats were won be *Independent Candidates*. Out of these 8 *Independent Candidates* 7 belong to **Tribal Areas**, only 1 seat is outside of Tribal Areas and that belongs to **Jhang District** (*NA-90*). All other seats that have remained consistent in previous 3 elections came from **Sindh** province. For *MQM-P* all seats have come from **Karachi** except for the one in **Hyderabad**(*NA-219*), for *PPPP* all seats come from rest of the Sindh province, except for *NA-248 Karachi* which *PPPP* has won consecutively 3 times.   ","da2145ef":"This work is in continuity to what **Ammar Malik** has already done. The additional work done is:\n1)  The updated version of 2013 election results file**(National Assembly 2013 - Updated(v11).csv)** has been used. \n2) The result of NA-254 and NA-83(2013 elections) added in the previous result. Now **MQM-P has 12 safe seats**."}}