{"cell_type":{"1af94ead":"code","ba44187c":"code","734ad60b":"code","f7b5ef90":"code","bffd7184":"code","b77a9c46":"code","d5c4b6c0":"code","b618c0f1":"code","d4bd52a2":"code","cd788c89":"code","78d97aec":"code","0dfe02c8":"code","f55a17ed":"code","5d0f602b":"code","bf474fcf":"code","7d4e3477":"code","05099013":"code","d31a91e7":"markdown","c93078a7":"markdown","0ba3b1ea":"markdown","91c6b41d":"markdown","8c851751":"markdown","c46fca69":"markdown","5de9aa8d":"markdown","fa002207":"markdown","7d55aa5a":"markdown","345a47f6":"markdown","44c95a9c":"markdown","81d22715":"markdown","c1bc74b6":"markdown","b4aedfd7":"markdown","a86a8c17":"markdown","f13a80e9":"markdown","7278abff":"markdown","49da95ff":"markdown","008f49b6":"markdown","042fc63f":"markdown"},"source":{"1af94ead":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ba44187c":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","734ad60b":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","f7b5ef90":"train","bffd7184":"test","b77a9c46":"train.isnull().any() #shows which columns have missing values","d5c4b6c0":"test.isnull().any()","b618c0f1":"train[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].mean())\ntest[\"Age\"] = test[\"Age\"].fillna(test[\"Age\"].mean())\ntest[\"Fare\"] = test[\"Fare\"].fillna(test[\"Fare\"].mean())\ntrain[\"Cabin\"] = train[\"Cabin\"].fillna(train[\"Cabin\"].mode()[0])\ntest[\"Cabin\"] = test[\"Cabin\"].fillna(test[\"Cabin\"].mode()[0])\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(train[\"Embarked\"].mode()[0])","d4bd52a2":"train[\"Sex\"] = [1 if i == \"male\" else 0 for i in train[\"Sex\"]] \ntest[\"Sex\"] = [1 if i == \"male\" else 0 for i in test[\"Sex\"]]\ntrain[\"Embarked\"] = [0 if i == \"S\" else i for i in train[\"Embarked\"]] \ntrain[\"Embarked\"] = [1 if i == \"C\" else i for i in train[\"Embarked\"]] \ntrain[\"Embarked\"] = [2 if i == \"Q\" else i for i in train[\"Embarked\"]] \ntest[\"Embarked\"] = [0 if i == \"S\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [1 if i == \"C\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [2 if i == \"Q\" else i for i in test[\"Embarked\"]]","cd788c89":"cols = [\"Survived\",\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\"]","78d97aec":"train_corr = train[cols].corr()","0dfe02c8":"train_corr","f55a17ed":"fig,ax = plt.subplots(figsize=(12,4))\nsns.heatmap(train_corr)\nax.set_title('Simple Heatmap')","5d0f602b":"fig,(ax1,ax2) = plt.subplots(nrows=2,figsize=(10,10))\nsns.heatmap(train_corr,annot=True,ax=ax1)\nsns.heatmap(train_corr,annot=False,ax=ax2)\nax1.set_title('annot=True')\nax2.set_title('annot=False')","bf474fcf":"fig,(ax1,ax2) = plt.subplots(nrows=2,figsize=(10,10))\nsns.heatmap(train_corr,annot=True,ax=ax1,cbar=False)\nsns.heatmap(train_corr,annot=True,ax=ax2,cbar=True)\nax1.set_title(\"cbar=False\")\nax2.set_title(\"cbar=True\")","7d4e3477":"fig,(ax1,ax2) = plt.subplots(nrows=2,figsize=(10,10))\nsns.heatmap(train_corr,annot=True,ax=ax1,cmap=\"Accent\")\nsns.heatmap(train_corr,annot=True,ax=ax2,cmap=\"Blues\")\nax1.set_title(\"cmap=Accent\")\nax2.set_title(\"cmap=Blues\")","05099013":"fig,(ax1,ax2) = plt.subplots(nrows=2,figsize=(10,10))\nsns.heatmap(train_corr,annot=True,ax=ax1,linewidth=0)\nsns.heatmap(train_corr,annot=True,ax=ax2,linewidth=5)\nax1.set_title(\"width=0 (default)\")\nax2.set_title(\"width=5\")","d31a91e7":"# Make unnecessary colorbar disappeared","c93078a7":"* Thanks to heatmap() parameters, we can make heatmaps more useful and beautiful.","0ba3b1ea":"* There are relatively strong\/weak correlations between several columns.\n* SibSp and Parch: corr(correlation coefficient) = 0.41\n* Pclass and Fare: corr = -0.55\n* Survived and Sex: corr = -0.54\n* Survived and Pclass: corr = -0.34","91c6b41d":"# Change colormaps\n* For more information about colormaps, please refer to [matplotlib document](https:\/\/matplotlib.org\/3.1.0\/tutorials\/colors\/colormaps.html).","8c851751":"* Before drawing, we have to fill missing values.","c46fca69":"# Fill missing values","5de9aa8d":"* In this notebook, we draw the heatmap which shows the strength of correlation between columns.\n* To do that, we have to calculate correlation coefficient beforehand.\n* corr() method allows us to calculate it easily.","fa002207":"# Add annotations","7d55aa5a":"# Draw heatmaps by using seaborn","345a47f6":"* We can easily draw the heatmap by using heatmap() method.","44c95a9c":"* In this notebook, we draw a heatmap by using seaborn.\n* If you like, please feel free to upvote.","81d22715":"# Import libraries and read csv files","c1bc74b6":"# What is heatmap?","b4aedfd7":"# Calculate the correlation coefficient","a86a8c17":"# Convert categorical features to numerical","f13a80e9":"* We convert categorical features to numerical so that we can calculate correlation coefficient easily.","7278abff":"# Making heatmaps more useful and beautiful\n","49da95ff":"# What we can see from the heatmap","008f49b6":"# Change the width of lines","042fc63f":"* Heatmap is a two-dimentional representation that shows the relationship between columns of data.\n* Drawing a heatmap is not difficult, we can do that easily by using seaborn.heatmap()"}}