{"cell_type":{"618a63d3":"code","b819f650":"code","5df2dba0":"code","8ac399f9":"code","9af7ddd3":"code","b86539b6":"code","8625cd39":"code","2a3902d6":"code","1cd39293":"code","429b6fb4":"code","7b117df8":"code","a629a243":"code","0ab38926":"code","4b74f799":"code","949dfc6b":"code","e2fb9d1f":"code","55881eb5":"code","d8be21fc":"code","fa801591":"code","3cf22066":"markdown","15b96ccc":"markdown","9af6d143":"markdown","80865be3":"markdown","d720e1da":"markdown","5bb9a4b3":"markdown","d65cd2ad":"markdown","18ff5124":"markdown","e1b9ec08":"markdown","5daf46e3":"markdown","2e4102c4":"markdown","245cf2e2":"markdown","9e918c11":"markdown","331eb752":"markdown","c292a131":"markdown","0b9b04d8":"markdown"},"source":{"618a63d3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b819f650":"df = pd.read_csv('\/kaggle\/input\/singapore-airbnb\/listings.csv')","5df2dba0":"## Function to reduce the DF size\ndef reduce_mem_usage(df, verbose=True):\n    numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\n    start_mem = df.memory_usage().sum() \/ 1024**2    \n    for col in df.columns:\n        col_type = df[col].dtypes\n        if col_type in numerics:\n            c_min = df[col].min()\n            c_max = df[col].max()\n            if str(col_type)[:3] == 'int':\n                if c_min > np.iinfo(np.int8).min and c_max < np.iinfo(np.int8).max:\n                    df[col] = df[col].astype(np.int8)\n                elif c_min > np.iinfo(np.int16).min and c_max < np.iinfo(np.int16).max:\n                    df[col] = df[col].astype(np.int16)\n                elif c_min > np.iinfo(np.int32).min and c_max < np.iinfo(np.int32).max:\n                    df[col] = df[col].astype(np.int32)\n                elif c_min > np.iinfo(np.int64).min and c_max < np.iinfo(np.int64).max:\n                    df[col] = df[col].astype(np.int64)  \n            else:\n                if c_min > np.finfo(np.float16).min and c_max < np.finfo(np.float16).max:\n                    df[col] = df[col].astype(np.float16)\n                elif c_min > np.finfo(np.float32).min and c_max < np.finfo(np.float32).max:\n                    df[col] = df[col].astype(np.float32)\n                else:\n                    df[col] = df[col].astype(np.float64)    \n    end_mem = df.memory_usage().sum() \/ 1024**2\n    if verbose: print('Mem. usage decreased to {:5.2f} Mb ({:.1f}% reduction)'.format(end_mem, 100 * (start_mem - end_mem) \/ start_mem))\n    return df","8ac399f9":"df = reduce_mem_usage(df)","9af7ddd3":"df.head()","b86539b6":"df.describe()","8625cd39":"df.info()","2a3902d6":"df.columns","1cd39293":"df_null = df.loc[:, df.isnull().any()].isnull().sum().sort_values(ascending=False)\nprint(df_null)","429b6fb4":"correlation = df.corr(method='pearson')","7b117df8":"correlation","a629a243":"f,ax = plt.subplots(figsize=(12,10))\nsns.heatmap(df.iloc[:,2:].corr(),annot=True, linewidths=.1, fmt='.1f', ax=ax,cmap=\"YlGnBu\")\n\nplt.show()","0ab38926":"df.isna().sum()","4b74f799":"sns.pairplot(df)\nplt.show()","949dfc6b":"plt.figure(figsize=(15,10))\nsns.barplot(x=df['room_type'], y=df['price'])\nplt.xticks(rotation= 45)\nplt.xlabel('room_type')\nplt.ylabel('Price')\nplt.title('Price vs Room Type')","e2fb9d1f":"plt.figure(figsize=(25,10))\nsns.barplot(x=df['neighbourhood_group'], y=df['price'])\nplt.xlabel('neighbourhood_group')\nplt.ylabel('Price')\nplt.title('Price vs neighbourhood_group')","55881eb5":"plt.figure(figsize=(25,10))\nsns.barplot(x=df['neighbourhood'], y=df['price'])\nplt.xticks(rotation= 90)\nplt.xlabel('neighbourhood')\nplt.ylabel('Price')\nplt.title('Price vs neighbourhood')","d8be21fc":"f,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='availability_365',y='price',data=df,color='lime',alpha=0.8)\nplt.xlabel('availability_365',fontsize = 15,color='blue')\nplt.ylabel('price',fontsize = 15,color='blue')\nplt.title('availability_365  VS  price',fontsize = 20,color='blue')\nplt.grid()","fa801591":"f,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='minimum_nights',y='price',data=df,color='lime',alpha=0.8)\nplt.xlabel('minimum_nights',fontsize = 15,color='blue')\nplt.ylabel('price',fontsize = 15,color='blue')\nplt.title('minimum_nights  VS  price',fontsize = 20,color='blue')\nplt.grid()","3cf22066":"# Checking the correlation between the predictors","15b96ccc":"**Creating the descriptive statistics of the data**","9af6d143":"* Creating Pairplot","80865be3":"**Checking information about the structure of dataframe**","d720e1da":"* Room Type\nAirbnb hosts can list entire homes\/apartments, private or shared rooms.\n\nDepending on the room type, availability, and activity, an airbnb listing could be more like a hotel, disruptive for neighbours, taking away housing, and illegal.\n\n* Activity\nAirbnb guests may leave a review after their stay, and these can be used as an indicator of airbnb activity.\n\nThe minimum stay, price and number of reviews have been used to estimate the occupancy rate, the number of nights per year and the income per month for each listing.\n\nHow does the income from Airbnb compare to a long-term lease?\n\nDo the number of nights booked per year make it impossible for a listing to be used for residential housing?\n\nAnd what is renting to a tourist full-time rather than a resident doing to our neighbourhoods and cities?\n* Availability\nAn Airbnb host can setup a calendar for their listing so that it is only available for a few days or weeks a year.\n\nOther listings are available all year round (except for when it is already booked).\n\nEntire homes or apartments highly available year-round for tourists, probably don't have the owner present, could be illegal, and more importantly, are displacing residents.\n* Listings per Host\nSome Airbnb hosts have multiple listings.\n\nA host may list separate rooms in the same apartment, or multiple apartments or homes available in their entirity.\n\nHosts with multiple listings are more likely to be running a business, are unlikely to be living in the property, and in violation of most short term rental laws designed to protect residential housing.","5bb9a4b3":"# Exploratory Data Analysis","d65cd2ad":"**Work in Progress!!**","18ff5124":"# Relationship between minimum_nights and Price","e1b9ec08":"* Finding the values in the dataframe by using head()","5daf46e3":"# Relationship between Price and  neighbourhood_group","2e4102c4":"# Relationship between Price and  availability_365","245cf2e2":"# Reduce Memory Usage","9e918c11":"# Relation between Price and Room_type","331eb752":"# Relationship between Price and  neighbourhood","c292a131":"# [Airbnb](https:\/\/www.airbnb.com\/)","0b9b04d8":"# Creating Correlation Heatmap"}}