{"cell_type":{"4daff333":"code","c15e9d40":"code","c344bbcc":"code","18abf337":"code","5aa196f5":"code","93fd55cc":"code","717b4028":"code","62792568":"code","de08cb5c":"code","ae3ba9c9":"code","0170e133":"code","5c1aeea8":"code","8463da7d":"code","9682dd8d":"code","1f9c9a8d":"code","90f3fc9f":"markdown","77790165":"markdown","0931117e":"markdown"},"source":{"4daff333":"import numpy as np\nfrom pathlib import Path\nimport pandas as pd\nimport cv2\nimport matplotlib.pylab as plt","c15e9d40":"train_dr = Path('..\/input\/10-monkey-species\/training\/training\/')\ntest_dr = Path('..\/input\/10-monkey-species\/validation\/validation\/')","c344bbcc":"monkey_labels = pd.read_csv('..\/input\/10-monkey-species\/monkey_labels.txt')\nmonkey_labels","18abf337":"img = cv2.imread('..\/input\/10-monkey-species\/training\/training\/n8\/n8049.jpg')\nplt.imshow(img)","5aa196f5":"img.shape","93fd55cc":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","717b4028":"generate_train_data = ImageDataGenerator(rescale=1.\/255)\ntrain_generator = generate_train_data.flow_from_directory(train_dr,target_size=(120,120),batch_size=32,class_mode='categorical') \n\n\ngenerate_test_data = ImageDataGenerator(rescale=1.\/255)\ntest_generator = generate_test_data.flow_from_directory(test_dr,target_size=(120,120),batch_size=32,class_mode='categorical') ","62792568":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPool2D,Flatten,Dropout","de08cb5c":"my_model =Sequential()\nmy_model.add(Conv2D(filters=32,kernel_size=(4,4),input_shape=(120,120,3),activation='relu'))\nmy_model.add(MaxPool2D(pool_size=(2,2)))\n\nmy_model.add(Conv2D(filters=32,kernel_size=(4,4),input_shape=(120,120,3),activation='relu'))\nmy_model.add(MaxPool2D(pool_size=(2,2)))\n\n\nmy_model.add(Flatten())\n\nmy_model.add(Dense(128,activation='relu'))\n\nmy_model.add(Dense(10,activation='softmax'))\n\nmy_model.compile(loss = 'categorical_crossentropy', optimizer ='adam', metrics= ['accuracy'])\n\n","ae3ba9c9":"my_model.summary()","0170e133":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss',patience=2)","5c1aeea8":"my_model.fit_generator(train_generator, epochs = 5 , validation_data=train_generator,callbacks = early_stop,verbose = 1)","8463da7d":"losse = pd.DataFrame(my_model.history.history)\nlosse.head()","9682dd8d":"losse[['accuracy','val_accuracy']].plot()\n","1f9c9a8d":"losse[['loss','val_loss']].plot()","90f3fc9f":"> # Get & Show Data ","77790165":"> # Modeling","0931117e":"> # Data Generation"}}