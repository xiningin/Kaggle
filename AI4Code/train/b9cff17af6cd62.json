{"cell_type":{"4e753fc3":"code","9c1b3c5e":"code","77d1e6cb":"code","a37e616e":"code","d815fbae":"code","aa3ee3f3":"code","9565be10":"code","51c230cc":"code","b70673d3":"code","69355583":"code","c395e09c":"code","fc8b7587":"code","f9edb5e2":"code","4c147f4d":"code","e03fddef":"code","6dd96f74":"code","9e3e8ccc":"code","8bad6b68":"code","b5f97912":"code","37b5a060":"code","2eb9b3ec":"code","aa03c514":"code","1486f775":"code","a0462600":"code","7564576c":"code","3d55e0d8":"code","07b195a3":"code","0146141c":"code","aefa49e3":"code","04e163ab":"code","4ca29072":"code","c3569811":"code","1dae3aff":"code","93b6d87c":"code","d370915c":"code","0de1b415":"code","b96a5799":"code","db5fa68e":"code","4a20ffe0":"code","86e3fc0a":"code","cfc7222b":"code","bbd1552d":"code","4ed9554d":"code","5fdec817":"code","633059f8":"code","7b8a5b79":"code","713d8852":"code","3acbcadc":"code","4955f444":"code","6d57d37e":"code","8db61e1d":"code","bc56660d":"code","c856e8fd":"markdown","ed909418":"markdown","ae82476c":"markdown","53ae7066":"markdown","75e7c688":"markdown","c6fe54ea":"markdown","b10a35c1":"markdown","ee9639c9":"markdown","c396c8d1":"markdown","1de2114b":"markdown","adf50d98":"markdown","68a022d4":"markdown","58444ff8":"markdown","d2a60149":"markdown","523f3a22":"markdown","7ecaadc8":"markdown"},"source":{"4e753fc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n\nfrom sklearn.linear_model import LinearRegression\n\n# Any results you write to the current directory are saved as output.","9c1b3c5e":"from matplotlib.image import imread\nimport matplotlib.pyplot as plt\nfrom skimage.io import imread\nimport seaborn as sns\nsns.set()\nimport os","77d1e6cb":"my_data_dir = '\/kaggle\/input\/ds4g-environmental-insights-explorer\/eie_data\/'","a37e616e":"os.listdir(my_data_dir)","d815fbae":"gfs = my_data_dir+'gfs\/'\nsample = os.listdir(gfs)[0:5]","aa3ee3f3":"sample","9565be10":"for n in range(5):\n    image = imread(gfs + sample[n])\n    print(image.shape)","51c230cc":"fig, ax = plt.subplots(1,6,figsize=(20,3))\n\nfor n in range(6):\n    ax[n].imshow(image[:,:,n], cmap=\"coolwarm\")\n    ax[n].grid(False)","b70673d3":"s5p = \"..\/input\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/\"","69355583":"sample = os.listdir(s5p)[0:5]\nsample","c395e09c":"for n in range(5):\n    image = imread(s5p + sample[n])\n    print(image.shape)","fc8b7587":"fig, ax = plt.subplots(1,6,figsize=(20,3))\n\nfor n in range(6):\n    ax[n].imshow(image[:,:,n], cmap=\"Blues\")\n    ax[n].grid(False)","f9edb5e2":"fig, ax = plt.subplots(1,6,figsize=(20,3))\n\nfor n in range(6):\n    ax[n].imshow(image[:,:,n], cmap=\"coolwarm\")\n    ax[n].grid(False)","4c147f4d":"fig, ax = plt.subplots(1,6,figsize=(20,3))\n\nfor n in range(6):\n    ax[n].imshow(image[:,:,n], cmap=\"Greens\")\n    ax[n].grid(False)","e03fddef":"fig, ax = plt.subplots(1,6,figsize=(20,3))\n\nfor n in range(6):\n    ax[n].imshow(image[:,:,n], cmap=\"Reds\")\n    ax[n].grid(False)","6dd96f74":"data = pd.read_csv('..\/input\/ds4g-environmental-insights-explorer\/eie_data\/gppd\/gppd_120_pr.csv')","9e3e8ccc":"data.head()","8bad6b68":"data.shape","b5f97912":"data.info()","37b5a060":"data.isna().sum()","2eb9b3ec":"fig, ax = plt.subplots(2,2,figsize=(20,12))\nsns.distplot(data.capacity_mw, kde=True, ax=ax[0,0], color=\"g\")\nax[0,0].set_ylabel(\"counts\")\nsns.distplot(data.estimated_generation_gwh.apply(np.log), kde=True, ax=ax[0,1], color=\"k\")\nax[0,1].set_xlabel(\"Log estimated generation gwh\")\nax[0,1].set_ylabel(\"counts\");\nsns.countplot(data.primary_fuel, ax=ax[1,0], palette=\"coolwarm\");\nsns.countplot(data.source, ax=ax[1,1], palette=\"Blues\");\nlabels = ax[1,1].get_xticklabels()\nax[1,1].set_xticklabels(labels, rotation=90);","aa03c514":"data.columns","1486f775":"data['total_generation'] = data['generation_gwh_2013'] + data['generation_gwh_2014'] + data['generation_gwh_2015'] + data['generation_gwh_2016'] + data['generation_gwh_2017'] ","a0462600":"data = data.drop(['generation_gwh_2013','generation_gwh_2014','generation_gwh_2015','generation_gwh_2016','generation_gwh_2017'],axis = 1)","7564576c":"data.head()","3d55e0d8":"ax = sns.scatterplot(x=\"capacity_mw\", y=\"estimated_generation_gwh\", data=data, color = 'm')","07b195a3":"\nax = sns.barplot(x=\"primary_fuel\", y=\"estimated_generation_gwh\", data=data, color = 'k')","0146141c":"ax = sns.barplot(x=\"estimated_generation_gwh\", y=\"source\", data=data, color = 'g')","aefa49e3":"ax = sns.scatterplot(x=\"commissioning_year\", y=\"estimated_generation_gwh\", data=data, color = 'r')","04e163ab":"fuel_mean = data.groupby('primary_fuel').mean()","4ca29072":"fuel_mean","c3569811":"X = fuel_mean['capacity_mw']\ny = fuel_mean['estimated_generation_gwh']","1dae3aff":"X = X.values.reshape(-1,1)","93b6d87c":"reg = LinearRegression()\nreg = reg.fit(X, y)","d370915c":"predictions = reg.predict(X)","0de1b415":"predictions","b96a5799":"plt.scatter(X, y, color = 'k')\nplt.plot(X, predictions, color = 'm')\nplt.title('capacity vs estimated gwh')\nplt.xlabel('capacity')\nplt.ylabel('estimated gwh')","db5fa68e":"from sklearn.metrics import r2_score, mean_squared_error","4a20ffe0":"r2_score(y,predictions)","86e3fc0a":"mean_squared_error(y,predictions)","cfc7222b":"fuel_mean = fuel_mean.sort_values('capacity_mw')\nfuel_mean['weights'] = list(fuel_mean['estimated_generation_gwh'] \/ fuel_mean['capacity_mw'])\nfuel_mean['weights'] = fuel_mean['weights'] \/ fuel_mean['weights'].sum() * 1000\nfuel_mean['the_adjusted_ratio'] = fuel_mean['weights'] * fuel_mean['capacity_mw']","bbd1552d":"fuel_mean","4ed9554d":"X = fuel_mean['the_adjusted_ratio']\ny = fuel_mean['estimated_generation_gwh']","5fdec817":"reg = LinearRegression()\nreg = reg.fit(X.values.reshape(-1,1),y)\npredictions = reg.predict(X.values.reshape(-1,1))","633059f8":"r2_score(y,predictions), mean_squared_error(y,predictions)","7b8a5b79":"coefficients = dict(zip(fuel_mean.index, fuel_mean['the_adjusted_ratio']))","713d8852":"coefficients","3acbcadc":"for index,row in data.iterrows():\n    for name in data.primary_fuel.unique():\n        if row['primary_fuel'] == name:\n            data.loc[index,'predicted_gwh'] = (coefficients[name] * row['capacity_mw'])\n            \nmean_squared_error(data['estimated_generation_gwh'], data['predicted_gwh'])","4955f444":"ax = sns.scatterplot(x=\"estimated_generation_gwh\", y=\"predicted_gwh\", data=data, color= 'k')","6d57d37e":"fuel_mean = data.groupby('primary_fuel').mean()\nfuel_mean['new_ratios'] = fuel_mean['predicted_gwh'] \/ fuel_mean['estimated_generation_gwh']","8db61e1d":"for name in fuel_mean.index:\n    coefficients[name] =  coefficients[name] \/ fuel_mean.loc[name,'new_ratios']","bc56660d":"for index,row in data.iterrows():\n    for name in data.primary_fuel.unique():\n        if row['primary_fuel'] == name:\n            data.loc[index,'predicted_gwh'] = (coefficients[name] * row['capacity_mw'])\n            \n\nmean_squared_error(data['estimated_generation_gwh'], data['predicted_gwh'])","c856e8fd":"Lets see if can find a way to calculate coefficients","ed909418":"### I cant derive any insights from it","ae82476c":"Lets see the s5p data","53ae7066":"### Lets see the GFS Data","75e7c688":"## Lets evaluate our model","c6fe54ea":"The names look like some recent dates but theres a two digit code at the end which I cannot comprehend","b10a35c1":"## This Kernel is inspired by EDA kernel from Allunia [here](https:\/\/www.kaggle.com\/allunia\/ds4g-eda)","ee9639c9":"6 channels :o","c396c8d1":"### Lets calculate the mean of primary fuel","1de2114b":"### Lets see if we can go beyond from here.","adf50d98":"#### Follow the link [here](http:\/\/open_jicareport.jica.go.jp\/pdf\/12339586_07.pdf)\n\nResearch by Record of JCC and TWG Workshop","68a022d4":"Looks like there a strong relation here between capacity and estimated generation","58444ff8":"### something's going on here but I still cant comprehend","d2a60149":"We can see several subfolders. By looking into the data description, we can find several sources:\n\n-Global power plant database (gppd)\n\n-Sentinal 5P OFFL NO2 (s5p_no2)\n\n-Global Forecast System 384-Hour Predicted Atmosphere Data (gfs)\n\n-Global Land Data Assimilation System (gldas)","523f3a22":"## Okay, I cant deduct much here. Lets see the csv file","7ecaadc8":"## exp_gwh = coefficient * capacity"}}