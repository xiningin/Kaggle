{"cell_type":{"ebb3ab52":"code","7568344a":"code","fa742d5b":"code","a0532f0a":"code","038f4bf7":"code","a4691cc4":"code","2ae25b2e":"code","5a8f64e8":"code","f9ee12cf":"code","e9c98d7e":"code","c8f1abb1":"code","4ad75eb3":"code","47f1448f":"markdown","1443cca5":"markdown","689ae3a1":"markdown","2f9294a0":"markdown","889c54a1":"markdown","0e8fdeca":"markdown","d2203784":"markdown","9cdb90a7":"markdown","588b35c5":"markdown","fff83c37":"markdown","9a245e4d":"markdown","9d7ae334":"markdown"},"source":{"ebb3ab52":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport re as re\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv', header = 0, dtype={'Age': np.float64})\ntest  = pd.read_csv('..\/input\/titanic\/test.csv' , header = 0, dtype={'Age': np.float64})\nfull_data = [train, test]","7568344a":"###### \uc804\ucc98\ub9ac \n\n\nprint (train.info())\n\nprint (train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean())\n\nprint (train[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean())\n\nfor dataset in full_data:\n    dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1\nprint (train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=False).mean())\n\nfor dataset in full_data:\n    dataset['IsAlone'] = 0\n    dataset.loc[dataset['FamilySize'] == 1, 'IsAlone'] = 1\nprint (train[['IsAlone', 'Survived']].groupby(['IsAlone'], as_index=False).mean())\n\nfor dataset in full_data:\n    dataset['Embarked'] = dataset['Embarked'].fillna('S')\nprint (train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean())\n\nfor dataset in full_data:\n    dataset['Fare'] = dataset['Fare'].fillna(train['Fare'].median())\ntrain['CategoricalFare'] = pd.qcut(train['Fare'], 4)\nprint (train[['CategoricalFare', 'Survived']].groupby(['CategoricalFare'], as_index=False).mean())\n\nfor dataset in full_data:\n    age_avg \t   = dataset['Age'].mean()\n    age_std \t   = dataset['Age'].std()\n    age_null_count = dataset['Age'].isnull().sum()\n    \n    age_null_random_list = np.random.randint(age_avg - age_std, age_avg + age_std, size=age_null_count)\n    dataset['Age'][np.isnan(dataset['Age'])] = age_null_random_list\n    dataset['Age'] = dataset['Age'].astype(int)\n    \ntrain['CategoricalAge'] = pd.cut(train['Age'], 5)\n\nprint (train[['CategoricalAge', 'Survived']].groupby(['CategoricalAge'], as_index=False).mean())\n\ndef get_title(name):\n\ttitle_search = re.search(' ([A-Za-z]+)\\.', name)\n\t# If the title exists, extract and return it.\n\tif title_search:\n\t\treturn title_search.group(1)\n\treturn \"\"\n\nfor dataset in full_data:\n    dataset['Title'] = dataset['Name'].apply(get_title)\n\nprint(pd.crosstab(train['Title'], train['Sex']))\n\nfor dataset in full_data:\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n\nprint (train[['Title', 'Survived']].groupby(['Title'], as_index=False).mean())","fa742d5b":"for dataset in full_data:\n    # Mapping Sex\n    dataset['Sex'] = dataset['Sex'].map( {'female': 0, 'male': 1} ).astype(int)\n    \n    # Mapping titles\n    title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\n    dataset['Title'] = dataset['Title'].map(title_mapping)\n    dataset['Title'] = dataset['Title'].fillna(0)\n    \n    # Mapping Embarked\n    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n    \n    # Mapping Fare\n    dataset.loc[ dataset['Fare'] <= 7.91, 'Fare'] \t\t\t\t\t\t        = 0\n    dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare'] = 1\n    dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']   = 2\n    dataset.loc[ dataset['Fare'] > 31, 'Fare'] \t\t\t\t\t\t\t        = 3\n    dataset['Fare'] = dataset['Fare'].astype(int)\n    \n    # Mapping Age\n    dataset.loc[ dataset['Age'] <= 16, 'Age'] \t\t\t\t\t       = 0\n    dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age'] = 1\n    dataset.loc[(dataset['Age'] > 32) & (dataset['Age'] <= 48), 'Age'] = 2\n    dataset.loc[(dataset['Age'] > 48) & (dataset['Age'] <= 64), 'Age'] = 3\n    dataset.loc[ dataset['Age'] > 64, 'Age']                           = 4\n\n# Feature Selection\ndrop_elements = ['Name', 'Ticket', 'Cabin', 'SibSp',\\\n                 'Parch', 'FamilySize']\ntrain = train.drop(drop_elements, axis = 1)\ntrain = train.drop(['CategoricalAge', 'CategoricalFare'], axis = 1)\n\ntest  = test.drop(drop_elements, axis = 1)\n\nprint (train.head(10))\n\n# train = train.values\n# test  = test.values","a0532f0a":"!pip install pycaret\n","038f4bf7":"import pycaret\nfrom pycaret.classification import *","a4691cc4":"classification  = setup(data=train, \n             target = 'Survived',                # Use your target variable.\n             session_id=123, \n             log_experiment=True, \n             experiment_name='experiment1',     # Use any experiment name.\n             silent=True ,                      # Runs the command without user input. \n             remove_outliers=True\n                       )\n\n","2ae25b2e":"best = compare_models(n_select=3)","5a8f64e8":"print('Blending Models....')\nblended = blend_models(estimator_list= best)\n","f9ee12cf":"pred_holdout = predict_model(blended)\n","e9c98d7e":"final_model = finalize_model(blended)","c8f1abb1":"print('Done...!!!')\npred_esb = predict_model(final_model, test)\npredictLabel = pred_esb['Label']","4ad75eb3":"output = pd.DataFrame({'PassengerId': pred_esb.PassengerId, 'Survived': predictLabel})\noutput.to_csv('automl_submission.csv', index=False)","47f1448f":"# Load PyCaret","1443cca5":"# Submission","689ae3a1":"# Decide Final Model","2f9294a0":"# Preprocessing #2","889c54a1":"# Preprocessing #1","0e8fdeca":"# Setup Data at PyCaret","d2203784":"# Predict Model","9cdb90a7":"# Predict Model","588b35c5":"# Blend Models","fff83c37":"# Install PyCaret","9a245e4d":"# Load Data","9d7ae334":"# Compare Models"}}