{"cell_type":{"90d8cc3d":"code","048eced8":"code","597517fd":"code","ff320568":"code","0e19a5e2":"code","630daa2b":"code","0fdd37ae":"code","087fe075":"code","c10722b5":"code","c7251d33":"code","21ad46dd":"code","873d85de":"code","e089882f":"code","09d6b79d":"code","92c95d12":"code","295122eb":"code","a875cb23":"code","05a0b958":"code","aab24c74":"code","7f487d54":"code","98585dca":"code","b85e5727":"code","cc8b45c1":"code","4ef55dbc":"code","4f5b4da0":"markdown","b7acedc7":"markdown","2ff1d9de":"markdown","727ba2df":"markdown","17712982":"markdown"},"source":{"90d8cc3d":"from fastai import *\nfrom fastai.tabular import *\nfrom fastai.callbacks import EarlyStoppingCallback, ReduceLROnPlateauCallback\nfrom tqdm import tqdm_notebook as tqdm\nfrom sklearn.model_selection import StratifiedKFold","048eced8":"path = Path('..\/input\/cat-in-the-dat-ii\/') \ndf = pd.read_csv(path\/'train.csv')\ndf.set_index('id',drop=True,inplace=True)\ntest_df = pd.read_csv(path\/'test.csv')\ntest_df.set_index('id',drop=True,inplace=True)\nsample = pd.read_csv(path\/'sample_submission.csv')","597517fd":"df.head(3)","ff320568":"test_df.head(3)","0e19a5e2":"df.bin_0.nunique(), df.bin_1.nunique(), df.bin_2.nunique(), df.bin_3.nunique(), df.bin_4.nunique()","630daa2b":"df.nom_0.nunique(), df.nom_1.nunique(), df.nom_2.nunique(), df.nom_3.nunique(), df.nom_4.nunique(), df.nom_5.nunique(), df.nom_6.nunique(), df.nom_7.nunique(), df.nom_8.nunique(), df.nom_9.nunique(), ","0fdd37ae":"df.ord_0.nunique(), df.ord_1.nunique(), df.ord_2.nunique(), df.ord_3.nunique(), df.ord_4.nunique(), df.ord_5.nunique() ","087fe075":"df.columns","c10722b5":"dep_var = 'target'\ncat_names = ['bin_0', 'bin_1', 'bin_2', 'bin_3', 'bin_4', 'nom_0', 'nom_1',\n             'nom_2', 'nom_3', 'nom_4', 'nom_5', 'nom_6', 'nom_7', 'nom_8',\n             'nom_9','ord_0', 'ord_1', 'ord_2', 'ord_3', 'ord_4', 'ord_5',\n             'day', 'month']\nprocs = [FillMissing, Categorify, Normalize]","c7251d33":"embed = {}\nfor col in cat_names:\n    embed[col] = min(50, df[col].nunique()) ","21ad46dd":"embed","873d85de":"# test = TabularList.from_df(test_df, path=path, cat_names=cat_names, cont_names=cont_names)#, procs=procs)\n\ntest = TabularList.from_df(test_df, path=path, cat_names=cat_names)","e089882f":"num_splits = 10\nskf = StratifiedKFold(num_splits, shuffle=True)#, random_state=42)","09d6b79d":"pred_list = []\nfor train_idx, valid_idx in skf.split(df.drop(labels='target', axis=1),df['target']):\n#     print(train_idx[:10], valid_idx[:10])\n#     print(len(train_idx), len(valid_idx))\n    data_fold = (TabularList.from_df(df, path=path, cat_names=cat_names, procs=procs)\n                 .split_by_idxs(train_idx, valid_idx)\n                 .label_from_df(cols=dep_var)\n                 .add_test(test)\n                 .databunch(bs=1024))\n#     print(len(data_fold.train_ds), len(data_fold.valid_ds), len(data_fold.test_ds))\n    \n    learn = tabular_learner(data_fold, layers=[300, 300], emb_drop=0.04, ps=[0.001, 0.01],metrics=AUROC(), emb_szs = embed,\n                            callback_fns=[partial(ReduceLROnPlateauCallback, monitor='auroc', min_delta=0.01, patience=1, min_lr=1e-06, factor=0.10, mode='max'),\n                                          partial(EarlyStoppingCallback, monitor='auroc', min_delta=0.001, patience=2, mode='max')])\n    learn.loss_func = nn.CrossEntropyLoss()\n#     print(learn.model)\n    learn.fit(10, 3e-3, wd = 0.2)\n    \n    pred = learn.get_preds(DatasetType.Test)[0][:, 1]\n    pred_list.append(pred.numpy())\n    \n    ","92c95d12":"len(pred_list)","295122eb":"pred_list","a875cb23":"np_preds = np.array(pred_list)","05a0b958":"preds = np.sum(np_preds, axis=0)\/num_splits","aab24c74":"preds.shape","7f487d54":"max(preds), min(preds)","98585dca":"def get_submision(preds):\n    sample['target'] = preds\n    return sample","b85e5727":"submission = get_submision(preds)","cc8b45c1":"submission.head()","4ef55dbc":"submission.to_csv('.\/sub_10f_commit.csv',index=False)","4f5b4da0":"# Tabular models","b7acedc7":"## Inference","2ff1d9de":"This Style of Callbacks and Cross-Validation is taken from Abhishek Thakur's public Kernel https:\/\/www.kaggle.com\/abhishek\/same-old-entity-embeddings","727ba2df":"## Cardinality of Categorical Variables","17712982":" #### Have any Questions or Feedback ? Please comment below."}}