{"cell_type":{"6c39be5e":"code","57697ab7":"code","c2a83689":"code","37c776a6":"code","a2085deb":"code","6dbdb18a":"code","9dcdc1d0":"code","4d6ec2ee":"code","9f4393e8":"code","adc5c6ca":"code","e06d8299":"code","9c5f945e":"code","471d5625":"code","e6cd5975":"code","5cc9cbd2":"code","aed1af13":"code","c58b3ab9":"code","b1f1434c":"code","aad20567":"code","d1d9d44f":"code","f67ce375":"code","af4b3a31":"code","00605186":"code","6fde5901":"code","e185a882":"code","1755f9be":"code","96b1bdc4":"markdown","c022bb2c":"markdown","666639f7":"markdown","bf98b067":"markdown","c75f44f4":"markdown"},"source":{"6c39be5e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/images.unsplash.com\/photo-1549224061-4c4818747ff9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',width=400,height=400)","57697ab7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c2a83689":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsabortioncsv\/abortion.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'abortion.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","37c776a6":"df.head()","a2085deb":"df.info()","6dbdb18a":"categorical_cols = [cname for cname in df.columns if\n                    df[cname].nunique() < 10 and \n                    df[cname].dtype == \"object\"]\n\n\n# Select numerical columns\nnumerical_cols = [cname for cname in df.columns if \n                df[cname].dtype in ['int64', 'float64']]","9dcdc1d0":"print(categorical_cols)","4d6ec2ee":"print(numerical_cols)","9f4393e8":"total = df.isnull().sum().sort_values(ascending = False)\npercent = (df.isnull().sum()\/df.isnull().count()*100).sort_values(ascending = False)\nmissing_data  = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(8)","adc5c6ca":"# Number of each type of column\ndf.dtypes.value_counts()","e06d8299":"corrs = df.corr()\ncorrs","9c5f945e":"import matplotlib.pyplot as plt","471d5625":"import seaborn as sns","e6cd5975":"plt.figure(figsize = (20, 8))\n\n# Heatmap of correlations\nsns.heatmap(corrs, cmap = plt.cm.RdYlBu_r, vmin = -0.25, annot = True, vmax = 0.6)\nplt.title('Correlation Heatmap');","5cc9cbd2":"sns.distplot(df[\"abortion_rate\"])","aed1af13":"sns.scatterplot(x='abortion_rate',y='period',data=df)","c58b3ab9":"sns.countplot(df[\"age_of_woman\"])","b1f1434c":"sns.countplot(df[\"abortion_rate\"])","aad20567":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('abortion_rate').size()\/df['period'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","d1d9d44f":"labels1=df.abortion_rate.value_counts().index\nsizes1=df.abortion_rate.value_counts().values\nplt.figure(figsize=(11,11))\nplt.pie(sizes1,labels=labels1,autopct=\"%1.1f%%\")\nplt.title(\"abortion_rate\",size=25)\nplt.show()","f67ce375":"labels1=df.age_of_woman.value_counts().index\nsizes1=df.age_of_woman.value_counts().values\nplt.figure(figsize=(11,11))\nplt.pie(sizes1,labels=labels1,autopct=\"%1.1f%%\")\nplt.title(\"age_of_woman\",size=25)\nplt.show()","af4b3a31":"from plotly.offline import iplot","00605186":"trace1 = go.Box(\n    y=df[\"abortion_rate\"],\n    name = 'abortion_rate',\n    marker = dict(color = 'rgb(0,145,119)')\n)\ntrace2 = go.Box(\n    y=df[\"period\"],\n    name = 'period',\n    marker = dict(color = 'rgb(255, 111, 145)')\n)\n\ndata = [trace1, trace2]\nlayout = dict(autosize=False, width=700,height=500, title='abortion_rate', paper_bgcolor='rgb(243, 243, 243)', \n              plot_bgcolor='rgb(243, 243, 243)', margin=dict(l=40,r=30,b=80,t=100,))\nfig = dict(data=data, layout=layout)\niplot(fig)","6fde5901":"ax = sns.swarmplot(x=\"abortion_rate\", y=\"period\", data=df)","e185a882":"print (\"Skew is:\", df.abortion_rate.skew())\nplt.hist(df.abortion_rate, color='pink')\nplt.show()","1755f9be":"target = np.log(df.abortion_rate)\nprint (\"Skew is:\", target.skew())\nplt.hist(target, color='green')\nplt.show()","96b1bdc4":"A doughnut (or donut) chart serves a similar purpose to a pie chart, except that it is able to show more than one set of data.","c022bb2c":" (crushed)Boxplots. Codes by Fatih Bilgin.","666639f7":"Missing values.  Codes from my friend Caesar Lupum @caesarlupum","bf98b067":"Image Unsplash by Luemen Carlson","c75f44f4":"EDA"}}