{"cell_type":{"a284a7ee":"code","04cabae0":"code","c2686ed6":"code","0e71d3d2":"code","3a610f20":"code","a81a0135":"code","d65b82b2":"code","ed4e5698":"code","36742fe8":"code","b7ce30d3":"code","542df75d":"code","d717fdfd":"code","ac9f7fa5":"code","d2bec326":"code","7402ef1d":"code","c8fec28b":"code","9f0f1789":"code","1d89d50d":"code","5e3974a6":"code","0e1d3179":"code","030318c1":"code","5b56e130":"code","e0862a80":"code","2e5469d0":"code","2fd56288":"code","c06e0ef5":"code","ab10c1aa":"code","0313ec00":"code","3874b30d":"code","0bf36177":"code","d17b74b6":"code","452b4b7c":"code","d0041684":"code","aeab5868":"code","af6d820c":"code","02d882ef":"code","2483bfd2":"code","d857a946":"code","efdc4a92":"code","8b3d85d6":"code","31bc5069":"code","bd802d25":"code","bf46f010":"code","4b9e1c57":"code","bbeab086":"code","e66b4713":"code","bce92b33":"code","7b2054da":"code","1cc6cb86":"code","deef8fd9":"code","d2e4aa30":"code","3f36f97c":"code","7a8e4c58":"code","e3336f2b":"code","614e9e2c":"code","d572cad0":"code","5dd2d8bd":"code","e18fea8d":"code","3e93796d":"code","b9b42f59":"code","2ebc3214":"code","1f66d6c3":"code","daabf953":"code","f3b1b783":"code","82162b3a":"code","f2c0c821":"code","7b02a5d3":"code","f70a7035":"code","e92fd4eb":"code","c85aff56":"code","be79dbe5":"code","dd50d079":"code","45835b4f":"code","166cde67":"code","4c703df5":"code","35a477be":"code","ae8bf5ae":"code","225487af":"code","2624e106":"code","0aeabb26":"code","902c0f2d":"code","2dbed339":"code","dc06fcd9":"code","a167260a":"code","57d4105a":"code","3783fa01":"code","c7753979":"code","c01e969b":"code","b6135b77":"code","86b3c97b":"markdown","74f9aa24":"markdown","52cd3394":"markdown","364a9f3d":"markdown","0e3db526":"markdown","e30b0ac8":"markdown","53b514b7":"markdown","ade98443":"markdown","45528784":"markdown","59e4d1d9":"markdown","be379d3a":"markdown","4cf327c9":"markdown","c8d4e2c7":"markdown","7e776f26":"markdown","16f0deb1":"markdown","d32f2134":"markdown","a4e4d0f3":"markdown","bc9f414d":"markdown","854838e7":"markdown","3fb892c6":"markdown","b70bd004":"markdown","f8226c41":"markdown","075fb864":"markdown","bb48dd0d":"markdown","247c9bfe":"markdown","cf97ded8":"markdown","6715690b":"markdown","cbfa4c42":"markdown","030c89bb":"markdown","457dc1a0":"markdown","67d5bb75":"markdown","56ba4217":"markdown","701622cb":"markdown","90f0d7a1":"markdown","eaa5450f":"markdown","8b426c71":"markdown","85a2fadc":"markdown","6c6c13e5":"markdown","87f4a8e1":"markdown","a61a322f":"markdown","5688d06a":"markdown"},"source":{"a284a7ee":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","04cabae0":"data = pd.read_table('..\/input\/data-from-uci\/processed.cleveland.data',sep=',',names=['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca','thal','target'],na_values='?')","c2686ed6":"data","0e71d3d2":"df = data.copy()","3a610f20":"df","a81a0135":"num_cols = ['age','trestbps','chol','thalach','oldpeak']","d65b82b2":"df['target'].unique()","ed4e5698":"df['target'] =df['target'].replace(to_replace=[1,2,3,4],value=1)","36742fe8":"df.head()","b7ce30d3":"df.isnull().sum()","542df75d":"df['ca'].unique()","d717fdfd":"df['ca'].value_counts()","ac9f7fa5":"df['ca']=df['ca'].fillna(df['ca'].mode()[0])","d2bec326":"df['thal'].unique()","7402ef1d":"df['thal']=df['thal'].fillna(df['thal'].mode()[0])","c8fec28b":"df.isnull().sum()","9f0f1789":"df.describe()","1d89d50d":"df.corr()","5e3974a6":"plt.pie(x=[(df['target']==0).sum(),(df['target']==1).sum()],labels=[0,1],autopct='%1.2f%%')\nprint('0 = absence, 1 = presence')","0e1d3179":"sns.heatmap(df[num_cols].corr(),annot=True)","030318c1":"sns.pairplot(df[num_cols])","5b56e130":"sns.barplot(y='age',x='target',data=df)","e0862a80":"df[df['target']==0].age.describe()","2e5469d0":"sns.distplot(df[df['target']==0].age)\nplt.title('Age of Patients not having heart disease')","2fd56288":"df[df['target']==1].age.describe()","c06e0ef5":"sns.distplot(df[df['target']==1].age)\nplt.title('Age of Patients having heart disease')","ab10c1aa":"sns.barplot(y='target',x='sex',data=df)","0313ec00":"sns.barplot(x=df['sex'],y=df['age'],hue=df['target'])","3874b30d":"sns.countplot(df['cp'])","0bf36177":"sns.barplot(x='cp',y='target',data=df)","d17b74b6":"df['trestbps'].describe()","452b4b7c":"sns.barplot(x='target',y='trestbps',data=df)","d0041684":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.distplot(df[df['target']==0].trestbps)\nplt.title('Blood Pressure of Patients not having heart disease')\nplt.subplot(122)\nsns.distplot(df[df['target']==1].trestbps)\nplt.title('Blood Pressure of Patients having heart disease')","aeab5868":"sns.barplot(x='target',y='chol',data=df)","af6d820c":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.distplot(df[df['target']==0].chol)\nplt.title('Cholestrol of Patients not having heart disease')\nplt.subplot(122)\nsns.distplot(df[df['target']==1].chol)\nplt.title('Cholestrol of Patients having heart disease')","02d882ef":"sns.countplot(df['fbs'])","2483bfd2":"sns.barplot(x='target',y='fbs',data=df)","d857a946":"sns.barplot(x='target',y='fbs',data=df)","efdc4a92":"df['thalach'].describe()","8b3d85d6":"sns.barplot(x='target',y='thalach',data=df)","31bc5069":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.distplot(df[df['target']==0].thalach)\nplt.title('Heart Rate of Patients not having heart disease')\nplt.subplot(122)\nsns.distplot(df[df['target']==1].thalach)\nplt.title('Heart Rate of Patients having heart disease')","bd802d25":"x = df.drop(['target'],axis=1)","bf46f010":"y = df['target']","4b9e1c57":"from sklearn.model_selection import train_test_split","bbeab086":"xtrain, xtest, ytrain, ytest = train_test_split(x,y,test_size=0.3)","e66b4713":"from sklearn.preprocessing import StandardScaler \nsc = StandardScaler()","bce92b33":"xtrain = sc.fit_transform(xtrain)\nxtest = sc.fit_transform(xtest)","7b2054da":"from sklearn import tree","1cc6cb86":"dt = tree.DecisionTreeClassifier()","deef8fd9":"dt.fit(xtrain,ytrain)","d2e4aa30":"dtpred = dt.predict(xtest)","3f36f97c":"from sklearn.metrics import accuracy_score","7a8e4c58":"dtacc = accuracy_score(ytest,dtpred)*100","e3336f2b":"print(accuracy_score(ytest,dtpred)*100)","614e9e2c":"print('Accuracy on Train data {a:.2f}%'.format(a=dt.score(xtrain,ytrain)*100))\nprint('Accuracy on Test Data {a:.2f}%'.format(a=dt.score(xtest,ytest)*100))","d572cad0":"from sklearn.neighbors import KNeighborsClassifier","5dd2d8bd":"knn = KNeighborsClassifier()","e18fea8d":"knn.fit(xtrain,ytrain)","3e93796d":"knnpred = knn.predict(xtest)","b9b42f59":"print(accuracy_score(ytest,knnpred)*100)","2ebc3214":"knnacc = accuracy_score(ytest,knnpred)*100","1f66d6c3":"print('Accuracy on Train data {a:.2f}%'.format(a=knn.score(xtrain,ytrain)*100))\nprint('Accuracy on Test Data {a:.2f}%'.format(a=knn.score(xtest,ytest)*100))","daabf953":"score = []\n\nfor i in range(1,25):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(xtrain,ytrain)\n    knnpred = knn.predict(xtest)\n    score.append(accuracy_score(ytest,knnpred))\n    ","f3b1b783":"knncc = max(score)*100","82162b3a":"knnacc","f2c0c821":"plt.plot(range(1,25),score)","7b02a5d3":"import xgboost","f70a7035":"xgb = xgboost.XGBClassifier()","e92fd4eb":"xgb.fit(xtrain,ytrain)","c85aff56":"xgbpred = xgb.predict(xtest)","be79dbe5":"xgbacc = accuracy_score(ytest,xgbpred)*100","dd50d079":"print(accuracy_score(ytest,xgbpred)*100)","45835b4f":"print('Accuracy on Train data {a:.2f}%'.format(a=xgb.score(xtrain,ytrain)*100))\nprint('Accuracy on Test Data {a:.2f}%'.format(a=xgb.score(xtest,ytest)*100))","166cde67":"from sklearn.model_selection import RandomizedSearchCV","4c703df5":"params={\n \"learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.4, 0.5 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]\n    \n}","35a477be":"rscv = RandomizedSearchCV(xgb,param_distributions=params,n_iter=10,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","ae8bf5ae":"rscv.fit(xtrain,ytrain)","225487af":"rscv.best_estimator_","2624e106":"xgbbp = xgboost.XGBClassifier(base_score=0.5, booster=None, colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.3, gamma=0.1, gpu_id=-1,\n              importance_type='gain', interaction_constraints=None,\n              learning_rate=0.1, max_delta_step=0, max_depth=5,\n              min_child_weight=5, missing=None, monotone_constraints=None,\n              n_estimators=100, n_jobs=0, num_parallel_tree=1,\n              objective='binary:logistic', random_state=0, reg_alpha=0,\n              reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method=None,\n              validate_parameters=False, verbosity=None)","0aeabb26":"xgbbp.fit(xtrain,ytrain)","902c0f2d":"xgbbppred = xgbbp.predict(xtest)","2dbed339":"xgbbpacc=accuracy_score(ytest,xgbbppred)*100","dc06fcd9":"print(accuracy_score(ytest,xgbbppred)*100)","a167260a":"print('Accuracy on Train data {a:.2f}%'.format(a=xgbbp.score(xtrain,ytrain)*100))\nprint('Accuracy on Test Data {a:.2f}%'.format(a=xgbbp.score(xtest,ytest)*100))","57d4105a":"dat = { 'Algorithm':['Decision Tree','K Nearest Neighbor','XGBoost','XGB with Optimization'],\n        'Accuracy' : [dtacc,knnacc,xgbacc,xgbbpacc]  \n       }\n\npd.DataFrame(dat,columns=['Algorithm','Accuracy'])","3783fa01":"models=['Decision Tree','kNN', 'XGBoost', 'XGB with \\n Parameter Tuning']\nscores=[dtacc,knnacc,xgbacc,xgbbpacc]","c7753979":"sns.barplot(models,scores)","c01e969b":"from sklearn.metrics import confusion_matrix","b6135b77":"plt.figure(figsize=(10,7))\n\nplt.subplot(221)\nplt.title('Decision Tree')\nsns.heatmap(confusion_matrix(ytest,dtpred),annot=True)\n\nplt.subplot(222)\nplt.title('K Nearest Neighbors')\nsns.heatmap(confusion_matrix(ytest,knnpred),annot=True)\n\nplt.subplot(223)\nplt.title('XGBoost')\nsns.heatmap(confusion_matrix(ytest,xgbpred),annot=True)\n\nplt.subplot(224)\nplt.title('XGB with Tuning')\nsns.heatmap(confusion_matrix(ytest,xgbbppred),annot=True)","86b3c97b":"### 5.4 Age vs Sex vs Target","74f9aa24":"## 2. Reading Data and Reviewing","52cd3394":"## 3. Copying data to another variable","364a9f3d":"Saving all numerical columns in num_cols","0e3db526":"### 5.2 Age vs Target","e30b0ac8":"There are some missing values in 'ca' and 'thal' columns","53b514b7":"### 5.2.1 Visualizing the Age of Patients not having heart disease","ade98443":"### 6.1 Seperating independent and dependent features","45528784":"1=fbs>120 mg\/dl, 0=fbs<120","59e4d1d9":"### 5.7 chol (Cholestrol) vs Target","be379d3a":"cp: chest pain type <br>\n        -- Value 1: typical angina <br>\n        -- Value 2: atypical angina<br>\n        -- Value 3: non-anginal pain<br>\n        -- Value 4: asymptomatic<br>\nMax number of people have type 4     ","4cf327c9":"Pie Chart to review number of patients having and not having heart disease","c8d4e2c7":"### 7.3.1 XGB Hyperparameter Tuning","7e776f26":"Most of the patients having heart disease have type 4 chest pain","16f0deb1":"Here 1=male, 0=female <br>\nFrom the graph, we can saw that more number of male patients have heart disease than female patients","d32f2134":"### 4.1 Dealing with missing values","a4e4d0f3":"### 7.3 XGBoost Classifer","bc9f414d":"### 5.9 thalach (Heart Rate) vs Target","854838e7":"The given dataset is in format .data\nThe data is seperated by comma and has no headings for columns, hence given names parameter according to the readme txt file","3fb892c6":"### 9. Confusion Matrix","b70bd004":"## 7. Model Building","f8226c41":"## Contents \n### -Reading Data \n### -Data Preprocessing\n### -Data Visualization\n### -Modelling","075fb864":"### 5.8 fbs (Fasting Blood Sugar) vs Target","bb48dd0d":"That's it, thank you for reading. I hope this notebook has helped you, never stop learning! \n<br>I'm still learning, happy to get feedbacks.\n<br>Cheers!","247c9bfe":"### 5.2.2 Visualizing the Age of Patients having heart disease","cf97ded8":"## 4. Data Preprocessing","6715690b":"### 7.2 kNN Classifier","cbfa4c42":"### 6.2 Spliting into train and test and applying Standard Scaler","030c89bb":"## 6. Getting Data Ready for Modelling","457dc1a0":"UCI Heart Disease dataset is a great dataset for beginners to start Data Science journey. \nIn this notebook, there are all the basic things one should know to get started.\nFollowing are the highlights of the Notebook: \n1. Importing Libraries and Reading datasets\n2. Using graphs for particular type of data for visualizations\n3. Modelling and Comparing 3 Algorithms \n4. Using Hyper parameter Optimization on 1 Algorithm","67d5bb75":"### 5.1 Heatmap to visualize the correlation of numerical values and Pairplot","56ba4217":"Here, 1 = Patient has heart disease and 0 = Patient does not have heart disease\n<br>So, we can conclude that most people who were diagnosed as having a heart disease were of age more than 53","701622cb":"## 5. Data Visualization","90f0d7a1":"### 8. Comparing all models","eaa5450f":"'target' feature has unique values of [0,1,2,3,4] <br> Here 0 = Patient does have a Heart Disease, [1,2,3,4] = Patient has a Heart Disease <br> Replacing [1,2,3,4] values as 1 since we are just attempting to distinguish presence from absence","8b426c71":"### 5.5 Cp (Chest Pain) vs Target","85a2fadc":"### 5.3 Sex vs Target","6c6c13e5":"### 5.6 trestbps (Resting Blood Pressure) vs Target","87f4a8e1":"## 1. Importing Libraries","a61a322f":"Since both columns 'ca' and 'thul' are categorical, filled the missing values with mode of whole respective column <br>\nThere are no missing values left, so we can proceed.","5688d06a":"### 7.1 Decision Tree Classifer"}}