{"cell_type":{"d4b20ed6":"code","6be9bfd4":"code","e2ae6284":"code","8adbeee0":"code","89caeacc":"code","ad5f5177":"code","95e6547f":"markdown","59c3e600":"markdown","fbc02951":"markdown","07f29146":"markdown","52ad9e82":"markdown","3236f0b9":"markdown"},"source":{"d4b20ed6":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nfrom sklearn import datasets\nfrom sklearn import manifold\n\n%matplotlib inline","6be9bfd4":"data = datasets.fetch_openml('mnist_784',\n                            version = 1,\n                            return_X_y = True)\npixel_values, targets = data\ntargets = targets.astype(int)","e2ae6284":"single_image = pixel_values[1, :].reshape(28,28)\nplt.imshow(single_image, cmap = 'gray')","8adbeee0":"tsne = manifold.TSNE(n_components = 2, random_state = 42)\ntransformed_data = tsne.fit_transform(pixel_values[:3000, :])","89caeacc":"tsne_df = pd.DataFrame(\nnp.column_stack((transformed_data, targets[:3000])),\ncolumns=[\"x\", \"y\", \"targets\"]\n)\ntsne_df.loc[:, \"targets\"] = tsne_df.targets.astype(int)","ad5f5177":"grid = sns.FacetGrid(tsne_df, hue=\"targets\", size=8)\ngrid.map(plt.scatter, \"x\", \"y\").add_legend()","95e6547f":"**Here we are creating a pandas dataframe from a numpy array. There are three\ncolumns: x, y and targets. x and y are the two components from t-SNE\ndecomposition and targets is the actual number.**","59c3e600":"**This step creates the t-SNE transformation of the data. We use only two components\nas we can visualize them well in a two-dimensional setting. The transformed_data,\nin this case, is an array of shape 3000x2 (3000 rows and 2 columns). A data like\nthis can be converted to a pandas dataframe by calling pd.DataFrame on the array.**","fbc02951":"**We use matplotlib and seaborn for plotting, numpy to handle the numerical arrays,\npandas to create dataframes from the numerical arrays and scikit-learn (sklearn) to\nget the data and perform t-SNE.**","07f29146":"**After the imports, we need to either download the data and read it separately or use\nsklearn\u2019s built-in function that provides us with the MNIST dataset.**","52ad9e82":"**In this part of the code, we have fetched the data using sklearn datasets, and we\nhave an array of pixel values and another array of targets. Since the targets are of\nstring type, we convert them to integers.\npixel_values is a 2-dimensional array of shape 70000x784. There are 70000\ndifferent images, each of size 28x28 pixels. Flattening 28x28 gives 784 data points.\nWe can visualize the samples in this dataset by reshaping them to their original\nshape and then plotting them using matplotlib.**","3236f0b9":"**And finally, we can plot it using seaborn and matplotlib.**"}}