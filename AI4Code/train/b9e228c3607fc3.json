{"cell_type":{"dfb688f9":"code","0ed78efc":"code","ab24a213":"code","e132b941":"code","4c1e4e52":"code","730aea74":"code","2976d828":"code","89464e35":"code","fcd6ad63":"code","bd9fea04":"code","4d9d42b0":"code","0b4e63b0":"code","14c42011":"code","8d7365c8":"code","44156045":"code","dd454f49":"code","97efe5cf":"code","b9aa8a9b":"code","051072b6":"code","59cbd50f":"code","0a5b6bb4":"code","d308d322":"code","c9c33930":"code","546cd4f4":"code","b93e6d84":"code","91c7c322":"code","1bc221a6":"code","8623cbcb":"code","070758ea":"code","58db75de":"code","31c5b818":"code","8b7bc000":"code","1c631a5f":"code","306a9554":"code","3088ab4f":"code","cc958467":"code","8259f078":"code","ce2a7ded":"code","f6185661":"code","e6b235a6":"code","a9511415":"code","7d3b81cb":"markdown","d0120529":"markdown","3e2d0b2f":"markdown","fad4fc93":"markdown","ceee9c76":"markdown","4964f780":"markdown","ba2370f7":"markdown","c2b99739":"markdown","7dad1f59":"markdown","9d54e493":"markdown","7074011b":"markdown","45dfe20a":"markdown","1d369c81":"markdown","368502d4":"markdown","9bbc35eb":"markdown","5c21d30b":"markdown","eaad4037":"markdown","f20dc5be":"markdown","d109f45e":"markdown","767fcbda":"markdown","78ab0e8e":"markdown","f909faf8":"markdown","2f04b401":"markdown","13c6ff6e":"markdown","73782d25":"markdown","7e1711c1":"markdown","acfaf8b3":"markdown","5fa2321e":"markdown","91c2770d":"markdown","05118a71":"markdown","6874cb8e":"markdown","aba81c3a":"markdown","a3bcd415":"markdown","45b6e2de":"markdown","6126e04e":"markdown","5c6c2dec":"markdown","8e21deaf":"markdown","c164294e":"markdown","a22e1983":"markdown","72419a76":"markdown","c4ea737b":"markdown","9a9bbfaf":"markdown","6957ecee":"markdown","edd466d9":"markdown","f51c2584":"markdown","1fb640c0":"markdown","c56ac9ee":"markdown","8918df21":"markdown","2f39b867":"markdown","140e5307":"markdown","518f38cb":"markdown","8eed00a2":"markdown","2b1a34a4":"markdown","165b52ad":"markdown","34f6cd87":"markdown","7eb0e751":"markdown","bd9685bc":"markdown","72b838b0":"markdown","ad2aa6ff":"markdown","2460f738":"markdown"},"source":{"dfb688f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ed78efc":"#imports\nimport os\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)\npd.set_option('display.max_columns', 5000)\nfrom sklearn.preprocessing import LabelEncoder","ab24a213":"responses_df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nresponses_df.head(3)","e132b941":"def count_percent(df,col):\n    counts = df[col].value_counts(dropna=False)\n    percentages = round(counts*100\/(df[col].count()),1)\n    return percentages\n\ndef count_percent_multiple(df,cols,dic):\n    df = df[cols]\n    df = df.dropna(how='all')\n    total_count = len(df)\n    dictionary = dic\n    for i in dictionary:\n        dictionary[i] = round(float(dictionary[i]*100\/total_count),1)\n    return dictionary \n\ndef create_dataframe_of_counts(dataframe,column,rename_index,rename_column,return_percentages=False):\n    df = dataframe[column].value_counts().reset_index() \n    if return_percentages==True:\n        df[column] = (df[column]*100)\/(df[column].sum())\n    df = pd.DataFrame(df) \n    df = df.rename({'index':rename_index, 'Q3':rename_column}, axis='columns')\n    return df\n\ndef sort_dictionary_by_percent(df,cols,dic): \n    dictionary = count_percent_multiple(df,cols,dic)\n    dictionary = {v:k    for(k,v) in dictionary.items()}\n    list_tuples = sorted(dictionary.items(), reverse=False) \n    dictionary = {v:k for (k,v) in list_tuples}   \n    return dictionary\n    ","4c1e4e52":"def plotly_bar_chart(response_counts,title,y_axis_title,orientation):\n    response_counts_series = pd.Series(response_counts)\n    fig = px.bar(response_counts_series,\n             labels={\"index\": '',\"value\": y_axis_title},\n             text=response_counts_series.values,\n             orientation=orientation,)\n    fig.update_layout(showlegend=False,\n                      title={'text': title,\n                             'y':0.95,\n                             'x':0.5,})\n    fig.show()\n    \n\n    \n\ndef plotly_choropleth_map(df, column, title, max_value):\n    fig = px.choropleth(df, \n                    locations = 'country',  \n                    color = column,\n                    locationmode = 'country names', \n                    color_continuous_scale = 'viridis',\n                    title = title,\n                    range_color = [0, max_value])\n    fig.update(layout=dict(title=dict(x=0.5)))\n    fig.show()","730aea74":"# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These dictionaries contain value counts for every answer choice for every multiple-column question.\n\nq7_dictionary_of_counts = {\n    'Python' : (responses_df['Q7_Part_1'].count()),\n    'R': (responses_df['Q7_Part_2'].count()),\n    'SQL' : (responses_df['Q7_Part_3'].count()),\n    'C' : (responses_df['Q7_Part_4'].count()),\n    'C++' : (responses_df['Q7_Part_5'].count()),\n    'Java' : (responses_df['Q7_Part_6'].count()),\n    'Javascript' : (responses_df['Q7_Part_7'].count()),\n    'Julia' : (responses_df['Q7_Part_8'].count()),\n    'Swift' : (responses_df['Q7_Part_9'].count()),\n    'Bash' : (responses_df['Q7_Part_10'].count()),\n    'MATLAB' : (responses_df['Q7_Part_11'].count()),\n    'None' : (responses_df['Q7_Part_12'].count()),\n    'Other' : (responses_df['Q7_OTHER'].count())\n}\n\nq9_dictionary_of_counts = {\n    'JupyterLab' : (responses_df['Q9_Part_1'].count()),\n    'RStudio': (responses_df['Q9_Part_2'].count()),\n    'Visual Studio' : (responses_df['Q9_Part_3'].count()),\n    'Visual Studio Code (VSCode)' : (responses_df['Q9_Part_4'].count()),\n    'PyCharm' : (responses_df['Q9_Part_5'].count()),\n    'Spyder' : (responses_df['Q9_Part_6'].count()),\n    'Notepad++' : (responses_df['Q9_Part_7'].count()),\n    'Sublime Text' : (responses_df['Q9_Part_8'].count()),\n    'Vim, Emacs, or similar' : (responses_df['Q9_Part_9'].count()),\n    'MATLAB' : (responses_df['Q9_Part_10'].count()),\n    'None' : (responses_df['Q9_Part_11'].count()),\n    'Other' : (responses_df['Q9_OTHER'].count())\n}\n\nq10_dictionary_of_counts = {\n    'Kaggle Notebooks' : (responses_df['Q10_Part_1'].count()),\n    'Colab Notebooks': (responses_df['Q10_Part_2'].count()),\n    'Azure Notebooks' : (responses_df['Q10_Part_3'].count()),\n    'Paperspace \/ Gradient' : (responses_df['Q10_Part_4'].count()),\n    'Binder \/ JupyterHub' : (responses_df['Q10_Part_5'].count()),\n    'Code Ocean' : (responses_df['Q10_Part_6'].count()),\n    'IBM Watson Studio' : (responses_df['Q10_Part_7'].count()),\n    'Amazon Sagemaker Studio' : (responses_df['Q10_Part_8'].count()),\n    'Amazon EMR Notebooks' : (responses_df['Q10_Part_9'].count()),\n    'Google Cloud AI Platform Notebooks' : (responses_df['Q10_Part_10'].count()),\n    'Google Cloud Datalab Notebooks' : (responses_df['Q10_Part_11'].count()),\n    'Databricks Collaborative Notebooks' : (responses_df['Q10_Part_12'].count()),\n    'None' : (responses_df['Q10_Part_13'].count()),\n    'Other' : (responses_df['Q10_OTHER'].count())\n}\n\nq12_dictionary_of_counts = {\n    'GPUs' : (responses_df['Q12_Part_1'].count()),\n    'TPUs': (responses_df['Q12_Part_2'].count()),\n    'None' : (responses_df['Q12_Part_3'].count()),\n    'Other' : (responses_df['Q12_OTHER'].count())\n}\n\nq14_dictionary_of_counts = {\n    'Matplotlib' : (responses_df['Q14_Part_1'].count()),\n    'Seaborn': (responses_df['Q14_Part_2'].count()),\n    'Plotly \/ Plotly Express' : (responses_df['Q14_Part_3'].count()),\n    'Ggplot \/ ggplot2' : (responses_df['Q14_Part_4'].count()),\n    'Shiny' : (responses_df['Q14_Part_5'].count()),\n    'D3.js' : (responses_df['Q14_Part_6'].count()),\n    'Altair' : (responses_df['Q14_Part_7'].count()),\n    'Bokeh' : (responses_df['Q14_Part_8'].count()),\n    'Geoplotlib' : (responses_df['Q14_Part_9'].count()),\n    'Leaflet \/ Folium' : (responses_df['Q14_Part_10'].count()),\n    'None' : (responses_df['Q14_Part_11'].count()),\n    'Other' : (responses_df['Q14_OTHER'].count())\n}\n\nq16_dictionary_of_counts = {\n    'Scikit-learn' : (responses_df['Q16_Part_1'].count()),\n    'TensorFlow': (responses_df['Q16_Part_2'].count()),\n    'Keras' : (responses_df['Q16_Part_3'].count()),\n    'PyTorch' : (responses_df['Q16_Part_4'].count()),\n    'Fast.ai' : (responses_df['Q16_Part_5'].count()),\n    'MXNet' : (responses_df['Q16_Part_6'].count()),\n    'Xgboost' : (responses_df['Q16_Part_7'].count()),\n    'LightGBM' : (responses_df['Q16_Part_8'].count()),\n    'CatBoost' : (responses_df['Q16_Part_9'].count()),\n    'Prophet' : (responses_df['Q16_Part_10'].count()),\n    'H20-3' : (responses_df['Q16_Part_11'].count()),\n    'Caret' : (responses_df['Q16_Part_12'].count()),\n    'Tidymodels' : (responses_df['Q16_Part_13'].count()),\n    'JAX' : (responses_df['Q16_Part_14'].count()),\n    'None' : (responses_df['Q16_Part_15'].count()),\n    'Other' : (responses_df['Q16_OTHER'].count())\n}\n\nq17_dictionary_of_counts = {\n    'Linear or Logistic Regression' : (responses_df['Q17_Part_1'].count()),\n    'Decision Trees or Random Forests': (responses_df['Q17_Part_2'].count()),\n    'Gradient Boosting Machines (xgboost, lightgbm, etc)' : (responses_df['Q17_Part_3'].count()),\n    'Bayesian Approaches' : (responses_df['Q17_Part_4'].count()),\n    'Evolutionary Approaches' : (responses_df['Q17_Part_5'].count()),\n    'Dense Neural Networks (MLPs, etc)' : (responses_df['Q17_Part_6'].count()),\n    'Convolutional Neural Networks' : (responses_df['Q17_Part_7'].count()),\n    'Generative Adversarial Networks' : (responses_df['Q17_Part_8'].count()),\n    'Recurrent Neural Networks' : (responses_df['Q17_Part_9'].count()),\n    'Transformer Networks (BERT, gpt-3, etc)' : (responses_df['Q17_Part_10'].count()),\n    'None' : (responses_df['Q17_Part_11'].count()),\n    'Other' : (responses_df['Q17_OTHER'].count())\n}\n\n\nq18_dictionary_of_counts = {\n    'General purpose image\/video tools (PIL, cv2, skimage, etc)' : (responses_df['Q18_Part_1'].count()),\n    'Image segmentation methods (U-Net, Mask R-CNN, etc)': (responses_df['Q18_Part_2'].count()),\n    'Object detection methods (YOLOv3, RetinaNet, etc)' : (responses_df['Q18_Part_3'].count()),\n    'Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc)' : (responses_df['Q18_Part_4'].count()),\n    'Generative Networks (GAN, VAE, etc)' : (responses_df['Q18_Part_5'].count()),\n    'None' : (responses_df['Q18_Part_6'].count()),\n    'Other' : (responses_df['Q18_OTHER'].count())\n}\n\n\nq19_dictionary_of_counts = {\n    'Word embeddings\/vectors (GLoVe, fastText, word2vec)' : (responses_df['Q19_Part_1'].count()),\n    'Encoder-decoder models (seq2seq, vanilla transformers)': (responses_df['Q19_Part_2'].count()),\n    'Contextualized embeddings (ELMo, CoVe)' : (responses_df['Q19_Part_3'].count()),\n    'Transformer language models (GPT-3, BERT, XLnet, etc)' : (responses_df['Q19_Part_4'].count()),\n    'None' : (responses_df['Q19_Part_5'].count()),\n    'Other' : (responses_df['Q19_OTHER'].count())\n}\n\n\nq23_dictionary_of_counts = {\n    'Analyze and understand data to influence product or business decisions' : (responses_df['Q23_Part_1'].count()),\n    'Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data': (responses_df['Q23_Part_2'].count()),\n    'Build prototypes to explore applying machine learning to new areas' : (responses_df['Q23_Part_3'].count()),\n    'Build and\/or run a machine learning service that operationally improves my product or workflows' : (responses_df['Q23_Part_4'].count()),\n    'Experimentation and iteration to improve existing ML models' : (responses_df['Q23_Part_5'].count()),\n    'Do research that advances the state of the art of machine learning' : (responses_df['Q23_Part_6'].count()),\n    'None of these activities are an important part of my role at work' : (responses_df['Q23_Part_7'].count()),\n    'Other' : (responses_df['Q23_OTHER'].count())\n}\n\n\nq26a_dictionary_of_counts = {\n    'Amazon Web Services (AWS)' : (responses_df['Q26_A_Part_1'].count()),\n    'Microsoft Azure': (responses_df['Q26_A_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df['Q26_A_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df['Q26_A_Part_4'].count()),\n    'Oracle Cloud' : (responses_df['Q26_A_Part_5'].count()),\n    'SAP Cloud' : (responses_df['Q26_A_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df['Q26_A_Part_7'].count()),\n    'VMware Cloud' : (responses_df['Q26_A_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df['Q26_A_Part_9'].count()),\n    'Tencent Cloud' : (responses_df['Q26_A_Part_10'].count()),\n    'None' : (responses_df['Q26_A_Part_11'].count()),\n    'Other' : (responses_df['Q26_A_OTHER'].count())\n}\n\nq26b_dictionary_of_counts = {\n    'Amazon Web Services (AWS)' : (responses_df['Q26_B_Part_1'].count()),\n    'Microsoft Azure': (responses_df['Q26_B_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df['Q26_B_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df['Q26_B_Part_4'].count()),\n    'Oracle Cloud' : (responses_df['Q26_B_Part_5'].count()),\n    'SAP Cloud' : (responses_df['Q26_B_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df['Q26_B_Part_7'].count()),\n    'VMware Cloud' : (responses_df['Q26_B_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df['Q26_B_Part_9'].count()),\n    'Tencent Cloud' : (responses_df['Q26_B_Part_10'].count()),\n    'None' : (responses_df['Q26_B_Part_11'].count()),\n    'Other' : (responses_df['Q26_B_OTHER'].count())\n}\n\nq27a_dictionary_of_counts = {\n    'Amazon EC2' : (responses_df['Q27_A_Part_1'].count()),\n    'AWS Lambda': (responses_df['Q27_A_Part_2'].count()),\n    'Amazon Elastic Container Service' : (responses_df['Q27_A_Part_3'].count()),\n    'Azure Cloud Services' : (responses_df['Q27_A_Part_4'].count()),\n    'Microsoft Azure Container Instances' : (responses_df['Q27_A_Part_5'].count()),\n    'Azure Functions' : (responses_df['Q27_A_Part_6'].count()),\n    'Google Cloud Compute Engine' : (responses_df['Q27_A_Part_7'].count()),\n    'Google Cloud Functions' : (responses_df['Q27_A_Part_8'].count()),\n    'Google Cloud Run' : (responses_df['Q27_A_Part_9'].count()),\n    'Google Cloud App Engine' : (responses_df['Q27_A_Part_10'].count()),\n    'No \/ None' : (responses_df['Q27_A_Part_11'].count()),\n    'Other' : (responses_df['Q27_A_OTHER'].count())\n}\n\nq27b_dictionary_of_counts = {\n    'Amazon EC2' : (responses_df['Q27_B_Part_1'].count()),\n    'AWS Lambda': (responses_df['Q27_B_Part_2'].count()),\n    'Amazon Elastic Container Service' : (responses_df['Q27_B_Part_3'].count()),\n    'Azure Cloud Services' : (responses_df['Q27_B_Part_4'].count()),\n    'Microsoft Azure Container Instances' : (responses_df['Q27_B_Part_5'].count()),\n    'Azure Functions' : (responses_df['Q27_B_Part_6'].count()),\n    'Google Cloud Compute Engine' : (responses_df['Q27_B_Part_7'].count()),\n    'Google Cloud Functions' : (responses_df['Q27_B_Part_8'].count()),\n    'Google Cloud Run' : (responses_df['Q27_B_Part_9'].count()),\n    'Google Cloud App Engine' : (responses_df['Q27_B_Part_10'].count()),\n    'No \/ None' : (responses_df['Q27_B_Part_11'].count()),\n    'Other' : (responses_df['Q27_B_OTHER'].count())\n}\n\nq28a_dictionary_of_counts = {\n    'Amazon SageMaker' : (responses_df['Q28_A_Part_1'].count()),\n    'Amazon Forecast': (responses_df['Q28_A_Part_2'].count()),\n    'Amazon Rekognition' : (responses_df['Q28_A_Part_3'].count()),\n    'Azure Machine Learning Studio' : (responses_df['Q28_A_Part_4'].count()),\n    'Azure Cognitive Services' : (responses_df['Q28_A_Part_5'].count()),\n    'Google Cloud AI Platform \/ Google Cloud ML Engine' : (responses_df['Q28_A_Part_6'].count()),\n    'Google Cloud Video AI' : (responses_df['Q28_A_Part_7'].count()),\n    'Google Cloud Natural Language' : (responses_df['Q28_A_Part_8'].count()),\n    'Google Cloud Vision AI' : (responses_df['Q28_A_Part_9'].count()),\n    'No \/ None' : (responses_df['Q28_A_Part_10'].count()),\n    'Other' : (responses_df['Q28_A_OTHER'].count())\n}\n\nq28b_dictionary_of_counts = {\n    'Amazon SageMaker' : (responses_df['Q28_B_Part_1'].count()),\n    'Amazon Forecast': (responses_df['Q28_B_Part_2'].count()),\n    'Amazon Rekognition' : (responses_df['Q28_B_Part_3'].count()),\n    'Azure Machine Learning Studio' : (responses_df['Q28_B_Part_4'].count()),\n    'Azure Cognitive Services' : (responses_df['Q28_B_Part_5'].count()),\n    'Google Cloud AI Platform \/ Google Cloud ML Engine' : (responses_df['Q28_B_Part_6'].count()),\n    'Google Cloud Video AI' : (responses_df['Q28_B_Part_7'].count()),\n    'Google Cloud Natural Language' : (responses_df['Q28_B_Part_8'].count()),\n    'Google Cloud Vision AI' : (responses_df['Q28_B_Part_9'].count()),\n    'No \/ None' : (responses_df['Q28_B_Part_10'].count()),\n    'Other' : (responses_df['Q28_B_OTHER'].count())\n}\n\n\nq29a_dictionary_of_counts = {\n    'MySQL' : (responses_df['Q29_A_Part_1'].count()),\n    'PostgreSQL': (responses_df['Q29_A_Part_2'].count()),\n    'SQLite' : (responses_df['Q29_A_Part_3'].count()),\n    'Oracle Database' : (responses_df['Q29_A_Part_4'].count()),\n    'MongoDB' : (responses_df['Q29_A_Part_5'].count()),\n    'Snowflake' : (responses_df['Q29_A_Part_6'].count()),\n    'IBM Db2' : (responses_df['Q29_A_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df['Q29_A_Part_8'].count()),\n    'Microsoft Access' : (responses_df['Q29_A_Part_9'].count()),\n    'Microsoft Azure Data Lake Storage' : (responses_df['Q29_A_Part_10'].count()),\n    'Amazon Redshift' : (responses_df['Q29_A_Part_11'].count()),\n    'Amazon Athena' : (responses_df['Q29_A_Part_12'].count()),\n    'Amazon DynamoDB' : (responses_df['Q29_A_Part_13'].count()),\n    'Google Cloud BigQuery' : (responses_df['Q29_A_Part_14'].count()),\n    'Google Cloud SQL' : (responses_df['Q29_A_Part_15'].count()),\n    'Google Cloud Firestore' : (responses_df['Q29_A_Part_16'].count()),\n    'None' : (responses_df['Q29_A_Part_17'].count()),\n    'Other' : (responses_df['Q29_A_OTHER'].count())\n}\n\n\nq29b_dictionary_of_counts = {\n    'MySQL' : (responses_df['Q29_B_Part_1'].count()),\n    'PostgreSQL': (responses_df['Q29_B_Part_2'].count()),\n    'SQLite' : (responses_df['Q29_B_Part_3'].count()),\n    'Oracle Database' : (responses_df['Q29_B_Part_4'].count()),\n    'MongoDB' : (responses_df['Q29_B_Part_5'].count()),\n    'Snowflake' : (responses_df['Q29_B_Part_6'].count()),\n    'IBM Db2' : (responses_df['Q29_B_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df['Q29_B_Part_8'].count()),\n    'Microsoft Access' : (responses_df['Q29_B_Part_9'].count()),\n    'Microsoft Azure Data Lake Storage' : (responses_df['Q29_B_Part_10'].count()),\n    'Amazon Redshift' : (responses_df['Q29_B_Part_11'].count()),\n    'Amazon Athena' : (responses_df['Q29_B_Part_12'].count()),\n    'Amazon DynamoDB' : (responses_df['Q29_B_Part_13'].count()),\n    'Google Cloud BigQuery' : (responses_df['Q29_B_Part_14'].count()),\n    'Google Cloud SQL' : (responses_df['Q29_B_Part_15'].count()),\n    'Google Cloud Firestore' : (responses_df['Q29_B_Part_16'].count()),\n    'None' : (responses_df['Q29_B_Part_17'].count()),\n    'Other' : (responses_df['Q29_B_OTHER'].count())\n}\n\nq31a_dictionary_of_counts = {\n    'Amazon QuickSight' : (responses_df['Q31_A_Part_1'].count()),\n    'Microsoft Power BI': (responses_df['Q31_A_Part_2'].count()),\n    'Google Data Studio' : (responses_df['Q31_A_Part_3'].count()),\n    'Looker' : (responses_df['Q31_A_Part_4'].count()),\n    'Tableau' : (responses_df['Q31_A_Part_5'].count()),\n    'Salesforce' : (responses_df['Q31_A_Part_6'].count()),\n    'Einstein Analytics' : (responses_df['Q31_A_Part_7'].count()),\n    'Qlik' : (responses_df['Q31_A_Part_8'].count()),\n    'Domo' : (responses_df['Q31_A_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df['Q31_A_Part_10'].count()),\n    'Alteryx' : (responses_df['Q31_A_Part_11'].count()),\n    'Sisense' : (responses_df['Q31_A_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df['Q31_A_Part_13'].count()),\n    'None' : (responses_df['Q31_A_Part_14'].count()),\n    'Other' : (responses_df['Q31_A_OTHER'].count())\n}\n\nq31b_dictionary_of_counts = {\n    'Amazon QuickSight' : (responses_df['Q31_B_Part_1'].count()),\n    'Microsoft Power BI': (responses_df['Q31_B_Part_2'].count()),\n    'Google Data Studio' : (responses_df['Q31_B_Part_3'].count()),\n    'Looker' : (responses_df['Q31_B_Part_4'].count()),\n    'Tableau' : (responses_df['Q31_B_Part_5'].count()),\n    'Salesforce' : (responses_df['Q31_B_Part_6'].count()),\n    'Einstein Analytics' : (responses_df['Q31_B_Part_7'].count()),\n    'Qlik' : (responses_df['Q31_B_Part_8'].count()),\n    'Domo' : (responses_df['Q31_B_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df['Q31_B_Part_10'].count()),\n    'Alteryx' : (responses_df['Q31_B_Part_11'].count()),\n    'Sisense' : (responses_df['Q31_B_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df['Q31_B_Part_13'].count()),\n    'None' : (responses_df['Q31_B_Part_14'].count()),\n    'Other' : (responses_df['Q31_B_OTHER'].count())\n}\n\nq33a_dictionary_of_counts = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df['Q33_A_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df['Q33_A_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df['Q33_A_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df['Q33_A_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df['Q33_A_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df['Q33_A_Part_6'].count()),\n    'No \/ None' : (responses_df['Q33_A_Part_7'].count()),\n    'Other' : (responses_df['Q33_A_OTHER'].count())\n}\n\nq33b_dictionary_of_counts = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df['Q33_B_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df['Q33_B_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df['Q33_B_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df['Q33_B_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df['Q33_B_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df['Q33_B_Part_6'].count()),\n    'No \/ None' : (responses_df['Q33_B_Part_7'].count()),\n    'Other' : (responses_df['Q33_B_OTHER'].count())\n}\n\nq34a_dictionary_of_counts = {\n    'Google Cloud AutoML' : (responses_df['Q34_A_Part_1'].count()),\n    'H20 Driverless AI': (responses_df['Q34_A_Part_2'].count()),\n    'Databricks AutoML' : (responses_df['Q34_A_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df['Q34_A_Part_4'].count()),\n    'Tpot' : (responses_df['Q34_A_Part_5'].count()),\n    'Auto-Keras' : (responses_df['Q34_A_Part_6'].count()),\n    'Auto-Sklearn' : (responses_df['Q34_A_Part_7'].count()),\n    'Auto_ml' : (responses_df['Q34_A_Part_8'].count()),\n    'Xcessiv' : (responses_df['Q34_A_Part_9'].count()),\n    'MLbox' : (responses_df['Q34_A_Part_10'].count()),\n    'No \/ None' : (responses_df['Q34_A_Part_11'].count()),\n    'Other' : (responses_df['Q34_A_OTHER'].count())\n}\n\nq34b_dictionary_of_counts = {\n    'Google Cloud AutoML' : (responses_df['Q34_B_Part_1'].count()),\n    'H20 Driverless AI': (responses_df['Q34_B_Part_2'].count()),\n    'Databricks AutoML' : (responses_df['Q34_B_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df['Q34_B_Part_4'].count()),\n    'Tpot' : (responses_df['Q34_B_Part_5'].count()),\n    'Auto-Keras' : (responses_df['Q34_B_Part_6'].count()),\n    'Auto-Sklearn' : (responses_df['Q34_B_Part_7'].count()),\n    'Auto_ml' : (responses_df['Q34_B_Part_8'].count()),\n    'Xcessiv' : (responses_df['Q34_B_Part_9'].count()),\n    'MLbox' : (responses_df['Q34_B_Part_10'].count()),\n    'No \/ None' : (responses_df['Q34_B_Part_11'].count()),\n    'Other' : (responses_df['Q34_B_OTHER'].count())\n}\n\n\nq35a_dictionary_of_counts = {\n    'Neptune.ai' : (responses_df['Q35_A_Part_1'].count()),\n    'Weights & Biases': (responses_df['Q35_A_Part_2'].count()),\n    'Comet.ml' : (responses_df['Q35_A_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df['Q35_A_Part_4'].count()),\n    'TensorBoard' : (responses_df['Q35_A_Part_5'].count()),\n    'Guild.ai' : (responses_df['Q35_A_Part_6'].count()),\n    'Polyaxon' : (responses_df['Q35_A_Part_7'].count()),\n    'Trains' : (responses_df['Q35_A_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df['Q35_A_Part_9'].count()),\n    'No \/ None' : (responses_df['Q35_A_Part_10'].count()),\n    'Other' : (responses_df['Q35_A_OTHER'].count())\n}\n\n\nq35b_dictionary_of_counts = {\n    'Neptune.ai' : (responses_df['Q35_B_Part_1'].count()),\n    'Weights & Biases': (responses_df['Q35_B_Part_2'].count()),\n    'Comet.ml' : (responses_df['Q35_B_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df['Q35_B_Part_4'].count()),\n    'TensorBoard' : (responses_df['Q35_B_Part_5'].count()),\n    'Guild.ai' : (responses_df['Q35_B_Part_6'].count()),\n    'Polyaxon' : (responses_df['Q35_B_Part_7'].count()),\n    'Trains' : (responses_df['Q35_B_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df['Q35_B_Part_9'].count()),\n    'No \/ None' : (responses_df['Q35_B_Part_10'].count()),\n    'Other' : (responses_df['Q35_B_OTHER'].count())\n}\n\nq36_dictionary_of_counts = {\n    'Plotly Dash' : (responses_df['Q36_Part_1'].count()),\n    'Streamlit': (responses_df['Q36_Part_2'].count()),\n    'NBViewer' : (responses_df['Q36_Part_3'].count()),\n    'GitHub' : (responses_df['Q36_Part_4'].count()),\n    'Personal Blog' : (responses_df['Q36_Part_5'].count()),\n    'Kaggle' : (responses_df['Q36_Part_6'].count()),\n    'Colab' : (responses_df['Q36_Part_7'].count()),\n    'Shiny' : (responses_df['Q36_Part_8'].count()),\n    'None \/ I do not share my work publicly' : (responses_df['Q36_Part_9'].count()),\n    'Other' : (responses_df['Q36_OTHER'].count())\n}\n\n\nq37_dictionary_of_counts = {\n    'Coursera' : (responses_df['Q37_Part_1'].count()),\n    'EdX': (responses_df['Q37_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df['Q37_Part_3'].count()),\n    'DataCamp' : (responses_df['Q37_Part_4'].count()),\n    'Fast.ai' : (responses_df['Q37_Part_5'].count()),\n    'Udacity' : (responses_df['Q37_Part_6'].count()),\n    'Udemy' : (responses_df['Q37_Part_7'].count()),\n    'LinkedIn Learning' : (responses_df['Q37_Part_8'].count()),\n    'Cloud-certification programs' : (responses_df['Q37_Part_9'].count()),\n    'University Courses' : (responses_df['Q37_Part_10'].count()),\n    'None' : (responses_df['Q37_Part_11'].count()),\n    'Other' : (responses_df['Q37_OTHER'].count())\n}\n\n\nq39_dictionary_of_counts = {\n    'Twitter (data science influencers)' : (responses_df['Q39_Part_1'].count()),\n    'Email newsletters (Data Elixir, OReilly Data & AI, etc)': (responses_df['Q39_Part_2'].count()),\n    'Reddit (r\/machinelearning, etc)' : (responses_df['Q39_Part_3'].count()),\n    'Kaggle (notebooks, forums, etc)' : (responses_df['Q39_Part_4'].count()),\n    'Course Forums (forums.fast.ai, Coursera forums, etc)' : (responses_df['Q39_Part_5'].count()),\n    'YouTube (Kaggle YouTube, Cloud AI Adventures, etc)' : (responses_df['Q39_Part_6'].count()),\n    'Podcasts (Chai Time Data Science, OReilly Data Show, etc)' : (responses_df['Q39_Part_7'].count()),\n    'Blogs (Towards Data Science, Analytics Vidhya, etc)' : (responses_df['Q39_Part_8'].count()),\n    'Journal Publications (peer-reviewed journals, conference proceedings, etc)' : (responses_df['Q39_Part_9'].count()),\n    'Slack Communities (ods.ai, kagglenoobs, etc)' : (responses_df['Q39_Part_10'].count()),\n    'None' : (responses_df['Q39_Part_11'].count()),\n    'Other' : (responses_df['Q39_OTHER'].count())\n}","2976d828":"# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These lists delineate every sub-column for every multiple-column question.\n\nq7_list_of_columns = ['Q7_Part_1',\n                      'Q7_Part_2',\n                      'Q7_Part_3',\n                      'Q7_Part_4',\n                      'Q7_Part_5',\n                      'Q7_Part_6',\n                      'Q7_Part_7',\n                      'Q7_Part_8',\n                      'Q7_Part_9',\n                      'Q7_Part_10',\n                      'Q7_Part_11',\n                      'Q7_Part_12',\n                      'Q7_OTHER']\n\nq9_list_of_columns = ['Q9_Part_1',\n                      'Q9_Part_2',\n                      'Q9_Part_3',\n                      'Q9_Part_4',\n                      'Q9_Part_5',\n                      'Q9_Part_6',\n                      'Q9_Part_7',\n                      'Q9_Part_8',\n                      'Q9_Part_9',\n                      'Q9_Part_10',\n                      'Q9_Part_11',\n                      'Q9_OTHER']\n\nq10_list_of_columns = ['Q10_Part_1',\n                       'Q10_Part_2',\n                       'Q10_Part_3',\n                       'Q10_Part_4',\n                       'Q10_Part_5',\n                       'Q10_Part_6',\n                       'Q10_Part_7',\n                       'Q10_Part_8',\n                       'Q10_Part_9',\n                       'Q10_Part_10',\n                       'Q10_Part_11',\n                       'Q10_Part_12',\n                       'Q10_Part_13',\n                       'Q10_OTHER']\n\nq12_list_of_columns = ['Q12_Part_1',\n                            'Q12_Part_2',\n                            'Q12_Part_3',\n                            'Q12_OTHER']\n\nq14_list_of_columns = ['Q14_Part_1',\n                            'Q14_Part_2',\n                            'Q14_Part_3',\n                            'Q14_Part_4',\n                            'Q14_Part_5',\n                            'Q14_Part_6',\n                            'Q14_Part_7',\n                            'Q14_Part_8',\n                            'Q14_Part_9',\n                            'Q14_Part_10',\n                            'Q14_Part_11',\n                            'Q14_OTHER']\n\nq16_list_of_columns = ['Q16_Part_1',\n                       'Q16_Part_2',\n                       'Q16_Part_3',\n                       'Q16_Part_4',\n                       'Q16_Part_5',\n                       'Q16_Part_6',\n                       'Q16_Part_7',\n                       'Q16_Part_8',\n                       'Q16_Part_9',\n                       'Q16_Part_10',\n                       'Q16_Part_11',\n                       'Q16_Part_12',\n                       'Q16_Part_13',\n                       'Q16_Part_14',\n                       'Q16_Part_15',\n                       'Q16_OTHER']\n\nq17_list_of_columns = ['Q17_Part_1',\n                       'Q17_Part_2',\n                       'Q17_Part_3',\n                       'Q17_Part_4',\n                       'Q17_Part_5',\n                       'Q17_Part_6',\n                       'Q17_Part_7',\n                       'Q17_Part_8',\n                       'Q17_Part_9',\n                       'Q17_Part_10',\n                       'Q17_Part_11',\n                       'Q17_OTHER']\n\nq18_list_of_columns = ['Q18_Part_1',\n                       'Q18_Part_2',\n                       'Q18_Part_3',\n                       'Q18_Part_4',\n                       'Q18_Part_5',\n                       'Q18_Part_6',\n                       'Q18_OTHER']\n\nq19_list_of_columns = ['Q19_Part_1',\n                       'Q19_Part_2',\n                       'Q19_Part_3',\n                       'Q19_Part_4',\n                       'Q19_Part_5',\n                       'Q19_OTHER']\n\nq23_list_of_columns = ['Q23_Part_1',\n                       'Q23_Part_2',\n                       'Q23_Part_3',\n                       'Q23_Part_4',\n                       'Q23_Part_5',\n                       'Q23_Part_6',\n                       'Q23_Part_7',\n                       'Q23_OTHER']\n\nq26a_list_of_columns = ['Q26_A_Part_1',\n                        'Q26_A_Part_2',\n                        'Q26_A_Part_3',\n                        'Q26_A_Part_4',\n                        'Q26_A_Part_5',\n                        'Q26_A_Part_6',\n                        'Q26_A_Part_7',\n                        'Q26_A_Part_8',\n                        'Q26_A_Part_9',\n                        'Q26_A_Part_10',\n                        'Q26_A_Part_11',\n                        'Q26_A_OTHER']\n\nq26b_list_of_columns = ['Q26_B_Part_1',\n                        'Q26_B_Part_2',\n                        'Q26_B_Part_3',\n                        'Q26_B_Part_4',\n                        'Q26_B_Part_5',\n                        'Q26_B_Part_6',\n                        'Q26_B_Part_7',\n                        'Q26_B_Part_8',\n                        'Q26_B_Part_9',\n                        'Q26_B_Part_10',\n                        'Q26_B_Part_11',\n                        'Q26_B_OTHER']\n\nq27a_list_of_columns = ['Q27_A_Part_1',\n                        'Q27_A_Part_2',\n                        'Q27_A_Part_3',\n                        'Q27_A_Part_4',\n                        'Q27_A_Part_5',\n                        'Q27_A_Part_6',\n                        'Q27_A_Part_7',\n                        'Q27_A_Part_8',\n                        'Q27_A_Part_9',\n                        'Q27_A_Part_10',\n                        'Q27_A_Part_11',\n                        'Q27_A_OTHER']\n\nq27b_dictionary_of_counts = ['Q27_B_Part_1',\n                             'Q27_B_Part_2',\n                             'Q27_B_Part_3',\n                             'Q27_B_Part_4',\n                             'Q27_B_Part_5',\n                             'Q27_B_Part_6',\n                             'Q27_B_Part_7',\n                             'Q27_B_Part_8',\n                             'Q27_B_Part_9',\n                             'Q27_B_Part_10',\n                             'Q27_B_Part_11',\n                             'Q27_B_OTHER']\n\nq28a_list_of_columns = ['Q28_A_Part_1',\n                        'Q28_A_Part_2',\n                        'Q28_A_Part_3',\n                        'Q28_A_Part_4',\n                        'Q28_A_Part_5',\n                        'Q28_A_Part_6',\n                        'Q28_A_Part_7',\n                        'Q28_A_Part_8',\n                        'Q28_A_Part_9',\n                        'Q28_A_Part_10',\n                        'Q28_A_OTHER']\n\nq28b_list_of_columns = ['Q28_B_Part_1',\n                        'Q28_B_Part_2',\n                        'Q28_B_Part_3',\n                        'Q28_B_Part_4',\n                        'Q28_B_Part_5',\n                        'Q28_B_Part_6',\n                        'Q28_B_Part_7',\n                        'Q28_B_Part_8',\n                        'Q28_B_Part_9',\n                        'Q28_B_Part_10',\n                        'Q28_B_OTHER']\n\nq29a_list_of_columns = ['Q29_A_Part_1',\n                        'Q29_A_Part_2',\n                        'Q29_A_Part_3',\n                        'Q29_A_Part_4',\n                        'Q29_A_Part_5',\n                        'Q29_A_Part_6',\n                        'Q29_A_Part_7',\n                        'Q29_A_Part_8',\n                        'Q29_A_Part_9',\n                        'Q29_A_Part_10',\n                        'Q29_A_Part_11',\n                        'Q29_A_Part_12',\n                        'Q29_A_Part_13',\n                        'Q29_A_Part_14',\n                        'Q29_A_Part_15',\n                        'Q29_A_Part_16',\n                        'Q29_A_Part_17',\n                        'Q29_A_OTHER']\n\nq29b_list_of_columns = ['Q29_B_Part_1',\n                        'Q29_B_Part_2',\n                        'Q29_B_Part_3',\n                        'Q29_B_Part_4',\n                        'Q29_B_Part_5',\n                        'Q29_B_Part_6',\n                        'Q29_B_Part_7',\n                        'Q29_B_Part_8',\n                        'Q29_B_Part_9',\n                        'Q29_B_Part_10',\n                        'Q29_B_Part_11',\n                        'Q29_B_Part_12',\n                        'Q29_B_Part_13',\n                        'Q29_B_Part_14',\n                        'Q29_B_Part_15',\n                        'Q29_B_Part_16',\n                        'Q29_B_Part_17',\n                        'Q29_B_OTHER']\n\nq31a_list_of_columns = ['Q31_A_Part_1',\n                        'Q31_A_Part_2',\n                        'Q31_A_Part_3',\n                        'Q31_A_Part_4',\n                        'Q31_A_Part_5',\n                        'Q31_A_Part_6',\n                        'Q31_A_Part_7',\n                        'Q31_A_Part_8',\n                        'Q31_A_Part_9',\n                        'Q31_A_Part_10',\n                        'Q31_A_Part_11',\n                        'Q31_A_Part_12',\n                        'Q31_A_Part_13',\n                        'Q31_A_Part_14',\n                        'Q31_A_OTHER']\n\nq31b_list_of_columns = ['Q31_B_Part_1',\n                        'Q31_B_Part_2',\n                        'Q31_B_Part_3',\n                        'Q31_B_Part_4',\n                        'Q31_B_Part_5',\n                        'Q31_B_Part_6',\n                        'Q31_B_Part_7',\n                        'Q31_B_Part_8',\n                        'Q31_B_Part_9',\n                        'Q31_B_Part_10',\n                        'Q31_B_Part_11',\n                        'Q31_B_Part_12',\n                        'Q31_B_Part_13',\n                        'Q31_B_Part_14',\n                        'Q31_B_OTHER']\n\nq33a_list_of_columns = ['Q33_A_Part_1',\n                        'Q33_A_Part_2',\n                        'Q33_A_Part_3',\n                        'Q33_A_Part_4',\n                        'Q33_A_Part_5',\n                        'Q33_A_Part_6',\n                        'Q33_A_Part_7',\n                        'Q33_A_OTHER']\n\nq33b_list_of_columns = ['Q33_B_Part_1',\n                        'Q33_B_Part_2',\n                        'Q33_B_Part_3',\n                        'Q33_B_Part_4',\n                        'Q33_B_Part_5',\n                        'Q33_B_Part_6',\n                        'Q33_B_Part_7',\n                        'Q33_B_OTHER']\n\nq34a_list_of_columns = ['Q34_A_Part_1',\n                        'Q34_A_Part_2',\n                        'Q34_A_Part_3',\n                        'Q34_A_Part_4',\n                        'Q34_A_Part_5',\n                        'Q34_A_Part_6',\n                        'Q34_A_Part_7',\n                        'Q34_A_Part_8',\n                        'Q34_A_Part_9',\n                        'Q34_A_Part_10',\n                        'Q34_A_Part_11',\n                        'Q34_A_OTHER']\n\nq34b_list_of_columns = ['Q34_B_Part_1',\n                        'Q34_B_Part_2',\n                        'Q34_B_Part_3',\n                        'Q34_B_Part_4',\n                        'Q34_B_Part_5',\n                        'Q34_B_Part_6',\n                        'Q34_B_Part_7',\n                        'Q34_B_Part_8',\n                        'Q34_B_Part_9',\n                        'Q34_B_Part_10',\n                        'Q34_B_Part_11',\n                        'Q34_B_OTHER']\n\n\nq35a_list_of_columns = ['Q35_A_Part_1',\n                        'Q35_A_Part_2',\n                        'Q35_A_Part_3',\n                        'Q35_A_Part_4',\n                        'Q35_A_Part_5',\n                        'Q35_A_Part_6',\n                        'Q35_A_Part_7',\n                        'Q35_A_Part_8',\n                        'Q35_A_Part_9',\n                        'Q35_A_Part_10',\n                        'Q35_A_OTHER']\n\nq35b_list_of_columns = ['Q35_B_Part_1',\n                        'Q35_B_Part_2',\n                        'Q35_B_Part_3',\n                        'Q35_B_Part_4',\n                        'Q35_B_Part_5',\n                        'Q35_B_Part_6',\n                        'Q35_B_Part_7',\n                        'Q35_B_Part_8',\n                        'Q35_B_Part_9',\n                        'Q35_B_Part_10',\n                        'Q35_B_OTHER']\n\nq36_list_of_columns = ['Q36_Part_1',\n                       'Q36_Part_2',\n                       'Q36_Part_3',\n                       'Q36_Part_4',\n                       'Q36_Part_5',\n                       'Q36_Part_6',\n                       'Q36_Part_7',\n                       'Q36_Part_8',\n                       'Q36_Part_9',\n                       'Q36_OTHER']\n\nq37_list_of_columns = ['Q37_Part_1',\n                       'Q37_Part_2',\n                       'Q37_Part_3',\n                       'Q37_Part_4',\n                       'Q37_Part_5',\n                       'Q37_Part_6',\n                       'Q37_Part_7',\n                       'Q37_Part_8',\n                       'Q37_Part_9',\n                       'Q37_Part_10',\n                       'Q37_Part_11',\n                       'Q37_OTHER']\n\nq39_list_of_columns = ['Q39_Part_1',\n                       'Q39_Part_2',\n                       'Q39_Part_3',\n                       'Q39_Part_4',\n                       'Q39_Part_5',\n                       'Q39_Part_6',\n                       'Q39_Part_7',\n                       'Q39_Part_8',\n                       'Q39_Part_9',\n                       'Q39_Part_10',\n                       'Q39_Part_11',\n                       'Q39_OTHER']\n","89464e35":"responses_per_country_df = create_dataframe_of_counts(responses_df,'Q3','country','# of respondents',return_percentages=False)\npercentages_per_country_df = create_dataframe_of_counts(responses_df,'Q3','country','% of respondents',return_percentages=True)\n\nplotly_choropleth_map(responses_per_country_df, \n                       '# of respondents', \n                       'Total number of responses per country (2020 Kaggle DS & ML Survey)',\n                        max_value = 1000)\nplotly_choropleth_map(percentages_per_country_df, \n                       '% of respondents', \n                       'Percentage of total responses for most common countries',\n                        max_value = 5)\nprint('Note that countries with less than 50 responses were replaced with the country name \"other\" (which does not show up on this map)')","fcd6ad63":"question_name = 'Q1'\npercentages = count_percent(responses_df,question_name).sort_index()\ntitle_for_chart = 'Age Distributions on Kaggle'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","bd9fea04":"question_name = 'Q2'\nsorted_percentages = count_percent(responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Gender Distributions on Kaggle'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","4d9d42b0":"question_name = 'Q3'\nsorted_percentages = count_percent(responses_df,question_name).iloc[::-1][40:]\ntitle_for_chart = 'Most Common Nationalities'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","0b4e63b0":"question_name = 'Q4'\nresponses_in_order = [\"I prefer not to answer\",\"No formal education past high school\",\n                      \"Some college\/university study without earning a bachelor\u2019s degree\",\n                      \"Bachelor\u2019s degree\",\"Master\u2019s degree\",\"Doctoral degree\",\"Professional degree\"]\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Most Common Degree Type'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","14c42011":"question_name = 'Q5'\nsorted_percentages = count_percent(responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Most Common Job Titles'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","8d7365c8":"USA_responses_df = responses_df[responses_df['Q3']=='United States of America'] \nquestion_name = 'Q5'\nsorted_percentages = count_percent(USA_responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Most Common Job Titles for Kagglers from USA'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) \n\nIndia_responses_df = responses_df[responses_df['Q3']=='India'] \nquestion_name = 'Q5'\nsorted_percentages = count_percent(India_responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Most Common Job Titles for Kagglers from India'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","44156045":"question_name = 'Q6'\ntitle_for_chart = 'Programming Experience'\ntitle_for_y_axis = '% of respondents'\nresponses_in_order = ['I have never written code',\n                      '< 1 years','1-2 years','3-5 years',\n                      '5-10 years','10-20 years','20+ years']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","dd454f49":"question_name = 'Q8'\nsorted_percentages = count_percent(responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Which language should you learn first?'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","97efe5cf":"question_name = 'Q9'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q9_list_of_columns,\n                                                  q9_dictionary_of_counts)\ntitle_for_chart = \"Most Popular Data Science IDE's\"\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","b9aa8a9b":"question_name = 'Q10'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q10_list_of_columns,\n                                                  q10_dictionary_of_counts)\ntitle_for_chart = \"Most Popular Hosted Notebook Products\"\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","051072b6":"question_name = 'Q11'\nsorted_percentages = count_percent(responses_df,question_name).iloc[::-1]\ntitle_for_chart = 'Most popular computing platforms'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","59cbd50f":"question_name = 'Q12'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q12_list_of_columns,\n                                                  q12_dictionary_of_counts)\ntitle_for_chart = 'Most common accelerator type'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","0a5b6bb4":"question_name = 'Q13'\nresponses_in_order = ['Never','Once','2-5 times','6-25 times','More than 25 times']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Number of times using a TPU'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","d308d322":"question_name = 'Q14'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q14_list_of_columns,\n                                                  q14_dictionary_of_counts)\ntitle_for_chart = 'Most common data visualization tools'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","c9c33930":"question_name = 'Q15'\nresponses_in_order = ['I do not use machine learning methods',\n                      'Under 1 year','1-2 years','2-3 years',\n                      '3-4 years','4-5 years','5-10 years',\n                     '10-20 years', '20 or more years']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Number of years using ML methods'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","546cd4f4":"question_name = 'Q16'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q16_list_of_columns,\n                                                  q16_dictionary_of_counts)\ntitle_for_chart = 'Most common machine learning frameworks'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","b93e6d84":"question_name = 'Q17'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q17_list_of_columns,\n                                                  q17_dictionary_of_counts)\ntitle_for_chart = 'Most common machine learning algorithms'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","91c7c322":"dictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q18_list_of_columns,\n                                                  q18_dictionary_of_counts)\ntitle_for_chart = 'Most common computer vision methods'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","1bc221a6":"question_name = 'Q19'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q19_list_of_columns,\n                                                  q19_dictionary_of_counts)\ntitle_for_chart = 'Most common NLP methods'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","8623cbcb":"question_name = 'Q20'\nresponses_in_order = ['0-49 employees',\n                      '50-249 employees','250-999 employees',\n                      \"1000-9,999 employees\",\"10,000 or more employees\"]\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Size of employer'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","070758ea":"question_name = 'Q21'\nresponses_in_order = ['0','1-2','3-4','5-9','10-14','15-19','20+']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Size of data science team'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","58db75de":"question_name = 'Q22'\nresponses_in_order = ['I do not know','No (we do not use ML methods)',\n    'We are exploring ML methods (and may one day put a model into production)',\n    'We use ML methods for generating insights (but do not put working models into production)',\n    'We recently started using ML methods (i.e., models in production for less than 2 years)',\n    'We have well established ML methods (i.e., models in production for more than 2 years)']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Maturity of data science organization'\ny_axis_title = '% of respondents'\norientation_for_chart = 'v'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","31c5b818":"question_name = 'Q23'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q23_list_of_columns,\n                                                  q23_dictionary_of_counts)\ntitle_for_chart = 'Most Common Job Duties'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","8b7bc000":"question_name = 'Q24'\nresponses_in_order = ['$0-999',\n                        '1,000-1,999',\n                        '2,000-2,999',\n                        '3,000-3,999',\n                        '4,000-4,999',\n                        '5,000-7,499',\n                        '7,500-9,999',\n                        '10,000-14,999',\n                        '15,000-19,999',\n                        '20,000-24,999',\n                        '25,000-29,999',\n                        '30,000-39,999',\n                        '40,000-49,999',\n                        '50,000-59,999',\n                        '60,000-69,999',\n                        '70,000-79,999',\n                        '80,000-89,999',\n                        '90,000-99,999',\n                        '100,000-124,999',\n                        '125,000-149,999',\n                        '150,000-199,999',\n                        '200,000-249,999',\n                        '250,000-299,999',\n                        '300,000-500,000',\n                        '> $500,000']\nunsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Salary Distributions on Kaggle'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=unsorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","1c631a5f":"question_name = 'Q25'\nresponses_in_order = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999','$10,000-$99,999','$100,000 or more ($USD)']\nsorted_percentages = count_percent(responses_df,question_name)[responses_in_order]\ntitle_for_chart = 'Money spent on cloud computing products'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","306a9554":"question_name = 'Q26-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q26a_list_of_columns,\n                                                  q26a_dictionary_of_counts)\ntitle_for_chart = 'Most Popular Cloud Computing Platforms'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","3088ab4f":"question_name = 'Q28-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q28a_list_of_columns,\n                                                  q28a_dictionary_of_counts)\ntitle_for_chart = 'Specific Machine Learning Products (AWS\/Azure\/GCP customers only)'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'v'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","cc958467":"question_name = 'Q29-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q29a_list_of_columns,\n                                                  q29a_dictionary_of_counts)\ntitle_for_chart = 'Most Popular Database \/ Data Warehouse Products'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","8259f078":"question_name = 'Q31-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q31a_list_of_columns,\n                                                  q31a_dictionary_of_counts)\ntitle_for_chart = 'Most Popular Business Intelligence Tools'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","ce2a7ded":"question_name = 'Q34-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q34a_list_of_columns,\n                                                  q34a_dictionary_of_counts)\ntitle_for_chart = 'Most popular AutoML (or partial AutoML) products'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","f6185661":"question_name = 'Q35-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q35a_list_of_columns,\n                                                  q35a_dictionary_of_counts)\ntitle_for_chart = 'Most popular tools for managing ML experiments'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","e6b235a6":"question_name = 'Q36'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q36_list_of_columns,\n                                                  q36_dictionary_of_counts)\ntitle_for_chart = 'Popular platforms for sharing data science projects'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart)","a9511415":"question_name = 'Q37'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df,\n                                                  q37_list_of_columns,\n                                                  q37_dictionary_of_counts)\ntitle_for_chart = 'Most Popular Educational Platforms'\ntitle_for_x_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","7d3b81cb":"**Q9.**","d0120529":"**Q36.**","3e2d0b2f":"TPU requires to be explicitly called in code which can be tough task all by itself. Definitely requires a learning curve most would think to avoid.","fad4fc93":"**Q5.**","ceee9c76":"Github has always been the standard for sharing codes and projects. Here's to kaggle overtaking it someday!","4964f780":"Linear\/logistic regression are the first ML algorithms people become familiar with (mostly).","ba2370f7":"AWS really seems to be the standard among cloud services, although GCP is not far behind.","c2b99739":"**Q18.**","7dad1f59":"**Q35.**","9d54e493":"**Q21.**","7074011b":"***Q2***.","45dfe20a":"**Q26.**","1d369c81":"**Q28.**","368502d4":"**Q16.**","9bbc35eb":"**Q4.**","5c21d30b":"**Q22.**","eaad4037":"**Q37.**","f20dc5be":"**Q25.**","d109f45e":"India has an extremly big population, Competition is tough.\nI've seen many indians on kaggle, myself being one. This is one of those questions that doesn't take guessing.","767fcbda":"**Q10.**","78ab0e8e":"Most surveyers seem to either work in start-ups or big tech companies. ","f909faf8":"**Q11.**","2f04b401":"**Q20.**","13c6ff6e":"**Q17.**","73782d25":"**Q24.**","7e1711c1":"**Q34.**","acfaf8b3":"**plt** and **sns** , almost all notebooks I've seen have used them.","5fa2321e":"**Q29.**","91c2770d":"**Q6.**","05118a71":"**Q1.**","6874cb8e":"Coursera is the king in online education. With so many universities offering online courses (even degrees!), you can really see why. What I didn't expect was kaggle courses topping Udemy. Sure, this might be an inaccurate description of the real picture as the dataset is comprised of kaggle survey answers and its still is a pretty close call, but nice to see kaggle learn gaining steam!","aba81c3a":"Most responses are from India, most of which are students.","a3bcd415":"Code taken and edited from Paul's notebook.","45b6e2de":"**Q15.**","6126e04e":"Data science is an emerging field and more young people like me are willing to get in so no surprise most survey takers are below 30.","5c6c2dec":" **Q23.**","8e21deaf":"# Utility Functions","c164294e":"Most people tend to get their bachlors and start working in the Industry, if they are not pursuing masters. People going for a PhD is rare.","a22e1983":"I haven't really worked with NLP methods but this does give an insight on the most popular methods!  ","72419a76":"# Data Visualization","c4ea737b":"Again, no surprise here.","9a9bbfaf":"sklearn for ML, tenserflow\/pytorch for Deep learning have more than become the standards.","6957ecee":"**Q34.**","edd466d9":"yes,most people prefer their laptop to code as most resources are available online (kaggle\/colab notbooks).","f51c2584":"An emerging field, students learning to code, no brainer here.","1fb640c0":"Most surveyers had 1-2 years of coding experience, they're more likely to be starting out and exploring the commonly used ML methods.","c56ac9ee":"A beginner friendly language here is also one of the most widely used, application oriented language. Python is people's hero.","8918df21":"How is kaggle not topping this? :)","2f39b867":"Similar case here, most teams seem to be either starting out or are already well established with 20+ members.","140e5307":"most of them are students and here to learn, starting out, so not a surprise most haven't made data science their profession yet.","518f38cb":"**Q13.**","8eed00a2":"**Q3.**","2b1a34a4":"CNNs used for Large image datasets require extensive GPU use making it the most poplular accelerator.","165b52ad":"**Q19.**","34f6cd87":"**Q14.**","7eb0e751":"Gender distribution is highly skewed.","bd9685bc":"**Q8.**","72b838b0":"I expected VScode to be up there but never thought so many people use jupyterlab. Intersting insight. Data science start-ups should set jupyter as their default environment.","ad2aa6ff":"I have about an year of programming experience. I've seen people start way before me, exprected them to have anywhere from 2-5 years of coding experience. Most people start codiing as they enter college. Most college students would have 1-2 years coding experience on average.","2460f738":"**Q12.**"}}