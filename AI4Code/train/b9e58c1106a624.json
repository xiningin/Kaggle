{"cell_type":{"3937554d":"code","03506b0b":"code","e9a291bc":"code","04dab9ed":"code","b0975d5f":"code","1eb130bc":"code","2e5e746c":"code","0611fbbd":"code","673b1de3":"code","3b92c523":"code","68a38ae5":"code","2dd0df3a":"code","76952f2f":"code","19aca2f5":"code","373c8a5a":"code","6089cd86":"code","f09710bc":"code","b36c7ba6":"code","7148c3be":"code","b5e5bb71":"code","0d2ccab5":"code","f60334e5":"code","fde61882":"code","7d8710fa":"code","0ab311fd":"code","8e5f6fd5":"code","b992a69c":"code","141469a0":"code","d4da124f":"code","e069a7fa":"code","2dacbc11":"code","e50c0e90":"code","58d71c9a":"code","76756c82":"code","80cba228":"markdown","bbbe6efd":"markdown","9170ffa9":"markdown","20a30c0e":"markdown"},"source":{"3937554d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport sklearn\nimport matplotlib.pyplot as plt\nimport sklearn.utils\nimport matplotlib\nimport warnings\n\nfrom xgboost import XGBClassifier\nfrom category_encoders import *\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import *\nfrom sklearn.model_selection import *\nfrom sklearn.metrics import *\n\n%matplotlib inline\nwarnings.filterwarnings('ignore')","03506b0b":"Train_data = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/train.csv\")","e9a291bc":"#Train_data.head()","04dab9ed":"Train_data.describe","b0975d5f":"Train_data.isnull().sum()","1eb130bc":"Train_data.target.value_counts()","2e5e746c":"# t_corr = Train_data.corr()\n# plt.figure(figsize=(300,300))\n# sns.heatmap(t_corr,annot=True,annot_kws={'size':8},cmap='Reds')","0611fbbd":"#sns.histplot(Train_data,x=\"target\")","673b1de3":"Train_target = Train_data['target']","3b92c523":"Train_data = Train_data.drop(['target','id'],axis=1)","68a38ae5":"# Adding some new features to make the final model more accurate ...\nTrain_data[\"max\"]=Train_data.max(axis=1)\nTrain_data[\"min\"]=Train_data.min(axis=1)\nTrain_data[\"var\"]=Train_data.var(axis=1)\nTrain_data[\"std\"]=Train_data.std(axis=1)","2dd0df3a":"#Train_data.head()","76952f2f":"non_cat = ['f'+str(i) for i in range(242)]\nnon_cat.remove('f22')\nnon_cat.remove('f43') \n\ncat = ['f'+str(i) for i in range(242,285)]+['f22','f43']\ncolumns = non_cat+cat","19aca2f5":"Train_data.head()","373c8a5a":"# Splitting data\nX_train , X_test , y_train , y_test = train_test_split(Train_data,Train_target, test_size = 0.25, random_state = 0,shuffle=True)","6089cd86":"#parameters = [{'max_depth': [np.arange(3,9,1)],'n_estimators': [np.arange(100,500,10000)],'subsample': [np.arange(0.1,1.0,0.1)],'eta': [np.arange(0.1,1.0,0.1)],'colsample_bytree': [np.arange(0.1,0.5,0.1)],'colsample_bylevel': [np.arange(0.1,0.7,0.1)],'min_child_weight': [np.arange(0.0,60,1)],'reg_lambda': [np.arange(10,90,5)],'reg_alpha': [np.arange(0.00,0.2,0.001)],'gamma': [np.arange(0,9,0.1)],'booster': ['gbtree'],'eval_metric': ['auc'],'tree_method': ['gpu_hist'],'predictor': ['gpu_predictor']}]","f09710bc":"# grid_search_model = GridSearchCV(estimator = test_model,\n#                            param_grid = parameters,\n#                            scoring = 'accuracy',\n#                            cv = 5,\n#                            n_jobs = -1)","b36c7ba6":"#grid_search_model.fit(X_train, y_train)","7148c3be":"# best_accuracy = grid_search_model.best_score_\n# print(\"Best Accuracy: {:.2f} %\".format(best_accuracy*100))","b5e5bb71":"params = {\n    'max_depth': 6,\n    'n_estimators': 9500,\n    'subsample': 0.7,\n    'colsample_bytree': 0.2,\n    'colsample_bylevel': 0.6,\n    'min_child_weight': 56,\n    'reg_lambda': 75,\n    'reg_alpha': 0.12,\n    'gamma': 0.64,\n    'booster': 'gbtree',\n    'eval_metric': 'auc',\n    'tree_method': 'gpu_hist',\n    'predictor': 'gpu_predictor',\n    'use_label_encoder': False\n}","0d2ccab5":"Final_xgb = XGBClassifier(**params).fit(X_train, y_train)","f60334e5":"import gc\ndel X_test\ngc.collect()\ndel y_test\ngc.collect()","fde61882":"Test_data = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/test.csv\")","7d8710fa":"ids = pd.DataFrame(Test_data,columns=[\"id\"])","0ab311fd":"Test_data = Test_data.drop([\"id\"],axis=1)","8e5f6fd5":"Test_data[\"max\"]=Test_data.max(axis=1)\nTest_data[\"min\"]=Test_data.min(axis=1)\nTest_data[\"var\"]=Test_data.var(axis=1)\nTest_data[\"std\"]=Test_data.std(axis=1)","b992a69c":"Test_data.head()","141469a0":"del X_train\ngc.collect()\ndel y_train\ngc.collect()","d4da124f":"y_result = Final_xgb.predict_proba(Test_data)[:, 1]","e069a7fa":"del Test_data\ngc.collect()","2dacbc11":"y_result = pd.DataFrame(y_result,columns=[\"target\"])","e50c0e90":"y_result = pd.concat([ids,y_result],axis=1)","58d71c9a":"y_result.head()","76756c82":"y_result.to_csv('Result2.csv',index=False)","80cba228":"# Data Preprocessing","bbbe6efd":"Ive just looked at file with excel and it seems the values in \ncolumn range of 0-242 are all non-categorical (except 22 , 43)\nand other columns (243,284) are all categorical ","9170ffa9":"# Test Data Preprocessing","20a30c0e":"# EDA"}}