{"cell_type":{"2fa883e9":"code","e94fbc01":"code","9ca69023":"code","dced7b45":"code","ad36016e":"code","f4a4a288":"code","d6d304fd":"code","a7486884":"code","5fdfa5c3":"code","88f0c238":"code","e84587c9":"code","a02b3c3f":"code","cd15e609":"code","868848f8":"code","0b38b4b7":"markdown","32bd4cd7":"markdown","bb267a90":"markdown","ce469c68":"markdown","7979ebce":"markdown","728ce8fa":"markdown"},"source":{"2fa883e9":"import pandas as pd\nimport numpy as np\n\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom tensorflow import keras\nimport tensorflow as tf","e94fbc01":"data = keras.datasets.fashion_mnist\n(train_images, train_labels), (test_images, test_labels) = data.load_data()","9ca69023":"print(train_images.shape, train_labels.shape, test_images.shape, test_labels.shape)","dced7b45":"label_map = {0:\"T-shirt\/top\", 1: \"Trouser\", 2: \"Pullover\", 3: \"Dress\", \n             4: \"Coat\", 5: \"Sandal\", 6: \"Shirt\", 7: \"Sneaker\", 8: \"Bag\",\n             9: \"Ankle boot\"}\nprint(label_map)","ad36016e":"train_images = train_images\/255.0\ntest_images = test_images\/255.0","f4a4a288":"fig, axs = plt.subplots(1,4, figsize=(20, 10))\nfor ax, i in zip(axs, range(6)):\n    ax.imshow(train_images[i])\n    ax.grid(True)\n\nplt.show()","d6d304fd":"unique, counts = np.unique(test_labels, return_counts=True)\ndf = pd.Series(zip(unique, counts))\nprint(df)\n# All the types of clothers have same count present in the dataset ie. 1000","a7486884":"from tensorflow import keras\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Lambda, Flatten, BatchNormalization\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D, AvgPool2D\nfrom tensorflow.keras.optimizers import Adadelta\nfrom keras.utils.np_utils import to_categorical\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau\nfrom tensorflow.keras.callbacks import LearningRateScheduler","5fdfa5c3":"train_images = train_images.reshape(train_images.shape[0], 28, 28, 1)\nprint(train_images.shape, train_labels.shape)\n\ntest_images = test_images.reshape(test_images.shape[0], 28, 28, 1)\nprint(test_images.shape, test_labels.shape)","88f0c238":"nclasses = train_labels.max() - train_labels.min() + 1\ntrain_labels = to_categorical(train_labels, num_classes = nclasses)\nprint(\"Shape of train ylabels after encoding: \", train_labels.shape)","e84587c9":"nclasses = test_labels.max() - test_labels.min() + 1\ntest_labels = to_categorical(test_labels, num_classes = nclasses)\nprint(\"Shape of test ylabels after encoding: \", test_labels.shape)","a02b3c3f":"model = Sequential()\nmodel.add(Conv2D(32, kernel_size = 3, activation='relu', input_shape = (28, 28, 1)))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(32, kernel_size = 3, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(32, kernel_size = 5, strides=2, padding='same', activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.4))\n\nmodel.add(Conv2D(64, kernel_size = 3, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, kernel_size = 3, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, kernel_size = 5, strides=2, padding='same', activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.4))\n\nmodel.add(Conv2D(128, kernel_size = 4, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Flatten())\nmodel.add(Dropout(0.4))\nmodel.add(Dense(10, activation='softmax'))\nmodel.compile(optimizer=\"adam\", loss=\"categorical_crossentropy\", metrics=[\"accuracy\"])\n","cd15e609":"model.fit(train_images, train_labels, shuffle=True, batch_size=100, epochs=50, validation_split=0.2)","868848f8":"vc_loss, vc_accuracy = model.evaluate(test_images, test_labels)\nprint(\"\\nLOSS: {}\\nACCURACY: {}\".format(vc_loss, vc_accuracy))","0b38b4b7":"### Data Visualization","32bd4cd7":"### Training data\nTraining a neural network with one input layer, one hidden layer and one output layer for learning the digits in images.","bb267a90":"###  Evaluation of model over validation dataset","ce469c68":"### I hope you like my approach.\n### Please upvote to keep me going!!","7979ebce":"### MNIST Image Classification on Fashion Clothing\n* In this project I am using MNIST dataset of fashion which is availabe in keras library.\n* ALTERNATE DATASET LINK: https:\/\/www.kaggle.com\/zalando-research\/fashionmnist","728ce8fa":"### Data Cleaning and Normalization"}}