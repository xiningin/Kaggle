{"cell_type":{"6aa98b75":"code","e620d607":"code","dc21ef88":"code","43574a40":"code","ab94d8ea":"code","0370131d":"code","2ee9e6f0":"code","cb8b9f6a":"code","f7c484dd":"code","37155b7a":"code","558be576":"markdown","25fb8176":"markdown","9cc3e4aa":"markdown","7cad73f2":"markdown"},"source":{"6aa98b75":"import warnings\nwarnings.filterwarnings(action='ignore') \n%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfruits=pd.read_table('\/kaggle\/input\/fruits-with-colors-dataset\/fruit_data_with_colors.txt')\nfruits.head()","e620d607":"fruits.shape","dc21ef88":"fruit_type=fruits.fruit_name.unique()\nfruit_type","43574a40":"X=fruits[['mass','width','height','color_score']]\ny=fruits['fruit_label']\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0)","ab94d8ea":"from matplotlib import cm\ncmap=cm.get_cmap('gnuplot')\nscatter=pd.plotting.scatter_matrix(X_train,c=y_train,marker='o',s=40,hist_kwds={'bins':15},figsize=(12,12),cmap=cmap)","0370131d":"from mpl_toolkits.mplot3d import Axes3D\n\nfig=plt.figure(figsize=(10,10))\nax=fig.add_subplot(111,projection='3d')\nax.scatter(X_train['width'],X_train['mass'],X_train['height'],c=y_train,marker='o',s=100)\nax.set_xlabel('width')\nax.set_ylabel('mass')\nax.set_zlabel('height')\n# legend=ax.legend(*scatter.legend_elements(),loc='best',title='fruits')\n# ax.add_artist(legend)\nplt.show()\n","2ee9e6f0":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train,y_train)\n","cb8b9f6a":"knn.score(X_test,y_test)","f7c484dd":"fig=plt.figure()\nn=[i for i in range(1,20)]\nscore=[]\nfor i in n:\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    score.append(knn.score(X_test,y_test))\nplt.plot(n,score,'bo')\nplt.xlabel('n')\nplt.ylabel('accuracy')\nplt.xticks([0,5,10,15,20])\nplt.title('testing set')\nplt.show()","37155b7a":"fig=plt.figure()\nn=[i for i in range(1,20)]\nscore=[]\nfor i in n:\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    score.append(knn.score(X_train,y_train))\nplt.plot(n,score,'bo')\nplt.xlabel('n')\nplt.ylabel('accuracy')\nplt.xticks([0,5,10,15,20])\nplt.title('Training set')\nplt.show()","558be576":"# Visit BasicAppliedMachineLearning02\nhttps:\/\/www.kaggle.com\/aman2000jaiswal\/basicappliedmachinelearning02\n","25fb8176":"# BasicAppliedMachineLearning01","9cc3e4aa":"# Variation of No of neighbors parameter vs accuracy","7cad73f2":"# Visit BasicAppliedMachineLearning02\nhttps:\/\/www.kaggle.com\/aman2000jaiswal\/basicappliedmachinelearning02"}}