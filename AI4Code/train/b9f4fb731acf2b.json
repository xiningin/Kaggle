{"cell_type":{"67225e2f":"code","b8e5e2f2":"code","07f321c6":"code","3794ef8e":"code","af45e8e3":"code","6f9dedf8":"code","c03beade":"code","abc264cf":"code","31c7c90e":"code","2c79eed5":"code","1262548a":"code","26dd5ce7":"code","b2268da4":"code","ad467356":"code","efb88f95":"code","a367989a":"code","04e4f2ba":"code","96bdb5f8":"code","2fe743c6":"code","047ad395":"code","d95e6c12":"code","9c3a139d":"code","57fbd7a9":"code","83a1cfc4":"code","a034c4ee":"code","a774b5b0":"code","d7c3e90e":"code","fde5ade1":"code","8f27731a":"markdown","34479915":"markdown"},"source":{"67225e2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b8e5e2f2":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","07f321c6":"import pandas as pd\nhousetrain = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/housetrain.csv\")","3794ef8e":"housetrain.head()","af45e8e3":"housetrain.shape","6f9dedf8":"housetrain.isnull().any()","c03beade":"housetrain.select_dtypes(['object'])","abc264cf":"housetrain.columns","31c7c90e":"housetrain.info()","2c79eed5":"housetrain.describe()","1262548a":"sns.pairplot(housetrain)","26dd5ce7":"plt.figure(figsize=(21,20))\nsns.heatmap(housetrain.corr(),annot=True)","b2268da4":"housetrain['SalePrice'].describe()","ad467356":"housetrain['SalePrice'].value_counts()","efb88f95":"sns.distplot(housetrain['SalePrice'])","a367989a":"#scatter plot grlivarea\/saleprice\nvar = 'GrLivArea'\ndata = pd.concat([housetrain['SalePrice'], housetrain[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","04e4f2ba":"var='TotalBsmtSF'\ndata=pd.concat([housetrain['SalePrice'],housetrain[var]],axis=1)\ndata.plot.scatter(x=var,y='SalePrice',ylim=(0,8000000))","96bdb5f8":"#box plot overallqual\/saleprice\nvar='OverallQual'\ndata=pd.concat([housetrain['SalePrice'],housetrain[var]],axis=1)\nf,ax=plt.subplots(figsize=(8,6))\nfig=sns.boxplot(x=var,y='SalePrice',data=data)\nfig.axis(ymin=0,ymax=800000)","2fe743c6":"#scatterplot\nsns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(housetrain[cols], size = 2.5)\nplt.show();","047ad395":"total=housetrain.isnull().sum().sort_values(ascending=False)\npercent=(housetrain.isnull().sum()\/housetrain.isnull().count()).sort_values(ascending=False)\nmissing_data=pd.concat([total,percent],axis=1,keys=['Total','Percent'])\nmissing_data.head(20)","d95e6c12":"saleprice_scaled=StandardScaler().fit_transform(housetrain['SalePrice'][:,np.newaxis])\nlow_range=saleprice_scaled[saleprice_scaled[:,0].argsort()][:10]\nhigh_range=saleprice_scaled[saleprice_scaled[:,0].argsort()][-10:]\nprint('outer range (low) of the distribution:')\nprint(low_range)\nprint('\\nouter range (high) of the distribution:')\nprint(high_range)","9c3a139d":"#bivariate analysis saleprice\/grlivarea\nvar='GrLivArea'\ndata=pd.concat([housetrain['SalePrice'],housetrain[var]],axis=1)\ndata.plot.scatter(x=var,y='SalePrice',ylim=(0,80000))","57fbd7a9":"#Deleting points\nhousetrain.sort_values(by='GrLivArea',ascending=False)[:2]\nhousetrain=housetrain.drop(housetrain[housetrain['Id']==1299].index)\nhousetrain=housetrain.drop(housetrain[housetrain['Id']==524].index)","83a1cfc4":"#bivariate analysis saleprice\/grlivarea\nvar = 'TotalBsmtSF'\ndata = pd.concat([housetrain['SalePrice'], housetrain[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","a034c4ee":"#histogram and normal probability plot\nsns.distplot(housetrain['SalePrice'],fit=norm)\nfig=plt.figure()\nres=stats.probplot(housetrain['SalePrice'],plot=plt)","a774b5b0":"#applying log transformation\nhousetrain['SalePrice'] = np.log(housetrain['SalePrice'])","d7c3e90e":"#transformed histogram and normal probability plot\nsns.distplot(housetrain['SalePrice'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(housetrain['SalePrice'], plot=plt)","fde5ade1":"#histogram and normal probability plot\nsns.distplot(housetrain['GrLivArea'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(housetrain['GrLivArea'], plot=plt)","8f27731a":"### Missing Data","34479915":"### Standardizing Data"}}