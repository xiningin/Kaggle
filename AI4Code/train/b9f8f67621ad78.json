{"cell_type":{"790e3d5b":"code","a295ac28":"code","0261e871":"code","230c900a":"code","f0a4d91b":"code","977cacfa":"code","57dccc41":"code","7e9f79be":"code","b4d5383e":"code","380fbaf3":"code","774aa809":"code","06890d74":"code","6ec39857":"code","2f297f89":"code","fc515145":"code","755cfbf1":"code","e5894d0c":"code","c45647dc":"code","084e5a9e":"code","f13d10ac":"code","c151f431":"code","2e355ae8":"code","efc2eb30":"code","4fb975af":"code","6e704bea":"code","99b87dd7":"code","30be92d7":"code","a9568958":"code","75718695":"code","d98587b2":"code","4ec876c2":"code","757f62ca":"code","c2939370":"code","5c455399":"code","9c21362a":"code","ae0156ee":"code","7c42157f":"code","dced4d28":"code","b19fb90f":"code","59ec4faf":"code","131b6d6e":"code","0695fea9":"code","25eed549":"markdown"},"source":{"790e3d5b":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder","a295ac28":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0261e871":"df = pd.read_csv('\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')","230c900a":"pd.set_option('display.float_format', lambda x: '%.3f' % x)","f0a4d91b":"df","977cacfa":"df.describe()","57dccc41":"df.corr()","7e9f79be":"df2 = df.copy()","b4d5383e":"df2[['Income','Risk_Flag']].groupby('Income').count()","380fbaf3":"df2[['Income','Risk_Flag']].groupby('Income').mean()","774aa809":"sns.displot(df2, x=\"Income\")","06890d74":"df2['group_Income'] = df2['Income'].apply(lambda x : 'very low inc' if x < 1000000 else \n                                                          'low icn' if x < 2118805.651 else\n                                                          'medium inc' if x < 7875427.679 else\n                                                          'high inc'  , 1)","6ec39857":"df2[['Income','group_Income']].groupby('group_Income').count()","2f297f89":"\ndf2[['group_Income','Risk_Flag']].groupby('group_Income').mean()","fc515145":"\n\n\nsns.barplot(data= df2, x='group_Income', y=\"Risk_Flag\")","755cfbf1":"df2[['Experience','Risk_Flag']].groupby('Experience').count()","e5894d0c":"df2[['Experience','Risk_Flag']].groupby('Experience').mean() ","c45647dc":"df2['group_exp'] = df2['Experience'].apply(lambda x : 'notexp' if x < 2  else \n                                                          'lowexp' if x < 7 else\n                                                          'exp' if x < 16 else\n                                                           'niceexp', 1)","084e5a9e":"df2[['group_exp','Risk_Flag']].groupby('group_exp').count()","f13d10ac":"df2[['group_exp','Risk_Flag']].groupby('group_exp').mean()","c151f431":"sns.barplot(data= df2, x='group_exp', y=\"Risk_Flag\")","2e355ae8":"df2[['Age','Risk_Flag']].groupby('Age').count()","efc2eb30":"df2[['Age','Risk_Flag']].groupby('Age').mean()\n","4fb975af":"df2['Grouped_Aged'] = df2['Age'].apply(lambda x : 'young_adult' if x < 38 else \n                                                   'adult' if x < 60 else\n                                                   'elder', 1)        ","6e704bea":"df2[['Grouped_Aged','Risk_Flag']].groupby('Grouped_Aged').count()","99b87dd7":"df2[['Grouped_Aged','Risk_Flag']].groupby('Grouped_Aged').mean()","30be92d7":"sns.barplot(data= df2, x='Grouped_Aged', y=\"Risk_Flag\")","a9568958":"df2[['CURRENT_JOB_YRS','Risk_Flag']].groupby('CURRENT_JOB_YRS').count()","75718695":"df2[['CURRENT_JOB_YRS','Risk_Flag']].groupby('CURRENT_JOB_YRS').mean()\n","d98587b2":"df2['group_jobyr'] = df2['CURRENT_JOB_YRS'].apply(lambda x : 'newjob' if x < 3  else \n                                                          'fewtimejob' if x < 6 else\n                                                          'sometimejob' if x < 10 else\n                                                           'longtimejob', 1)","4ec876c2":"df2[['group_jobyr','Risk_Flag']].groupby('group_jobyr').count()","757f62ca":"df2[['group_jobyr','Risk_Flag']].groupby('group_jobyr').mean()","c2939370":"sns.barplot(data= df2, x='group_jobyr', y=\"Risk_Flag\")","5c455399":"df_fm = pd.concat([df2, pd.get_dummies(df2[['Grouped_Aged','group_jobyr','group_Income','group_exp','Risk_Flag']])], axis=1)","9c21362a":"corrmat = df_fm.corr()","ae0156ee":"f, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=.8, square=True);","7c42157f":"y = df2['Risk_Flag']\nfeatures = [\"group_exp\", \"group_jobyr\", \"Grouped_Aged\",'group_Income']\nX = pd.get_dummies(df2[features])","dced4d28":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","b19fb90f":"model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\n","59ec4faf":"model.fit(X_train,y_train)","131b6d6e":"y_pred = model.predict(X_test)","0695fea9":"accuracy_score(y_test, y_pred)","25eed549":"ncome =\tIncome of the user\/\/\tint \/\/\nage\t= Age of the user\/\/\tint \/\/\nexperience\t= Professional experience of the user in years\/\/\tint \/\/\nprofession =\tProfession\/\/\tstring \/\/\nmarried\tWhether =  married or single\/\/\tstring \/\/\nhouse_ownership\t= Owned or rented or neither\/\/\tstring \/\/\ncar_ownership\t= Does the person own a car\/\/\tstring \/\/\nrisk_flag\t= Defaulted on a loan\/\/\tstring \/\/\ncurrentjobyears\t= Years of experience in the current job\/\/\tint \/\/\ncurrenthouseyears\t= Number of years in the current residence\/\/\tint \/\/\ncity = \tCity of residence\/\/\tstring \/\/\nstate\t = State of residence\/\/\tstring \/\/"}}