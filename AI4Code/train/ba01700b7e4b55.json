{"cell_type":{"cabb33c7":"code","f50aa8c9":"code","931a6e60":"code","99b0799c":"code","54d6cdb0":"code","915b7ba9":"code","61399b6d":"code","08724d6d":"code","e75ebe0e":"code","a80ba28f":"code","2794417b":"code","b5b0bc3e":"code","6a6f04bb":"code","3f991fef":"code","56aed15d":"code","10d75bfb":"code","56c0c78c":"code","e79885c4":"code","c3ce0953":"code","92e176dd":"code","fc25da76":"code","8d584b1b":"code","d08ed80d":"code","133b1260":"code","f2b0bacc":"code","9c01abed":"code","6b92d72a":"code","01aa2b58":"code","4c58adea":"markdown","6d71a44d":"markdown","21f5b4fe":"markdown","ca67d973":"markdown","9d996173":"markdown","432c44f3":"markdown","614c7db0":"markdown","194fe8e0":"markdown","5db585bb":"markdown","c44c6ab0":"markdown","d974f07f":"markdown"},"source":{"cabb33c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f50aa8c9":"# importing libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, RandomizedSearchCV\nfrom sklearn.linear_model import LinearRegression, SGDRegressor, Ridge, Lasso\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, VotingRegressor, StackingRegressor\nfrom sklearn.metrics import  mean_squared_error,  mean_absolute_error, r2_score, make_scorer\nfrom sklearn.decomposition import PCA\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nfrom catboost import Pool, CatBoostRegressor","931a6e60":"train_df = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntrain_df.head()","99b0799c":"train_df.info()","54d6cdb0":"train_df.describe()","915b7ba9":"test_df = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/train.csv\")\ntest_df.head()","61399b6d":"test_df = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/train.csv\")\ntest_df.head()","08724d6d":"test_df = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/test.csv\")\ntest_df.head()","e75ebe0e":"test_df.info()","a80ba28f":"test_df.describe()","2794417b":"# check for missing values\ntrain_df.isna().mean()","b5b0bc3e":"test_df.isna().mean()","6a6f04bb":"# correlation between the features and labels\nplt.figure(figsize = (15,10))\nsns.heatmap(train_df.corr())","3f991fef":"train_df = train_df.drop('id', axis=1)\ntest_df = test_df.drop('id', axis=1)","56aed15d":"X = train_df.drop('loss', axis=1) \ny = train_df['loss'] # features","10d75bfb":"print(X)\nprint('---------------------------------------')\nprint(y)","56c0c78c":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2, random_state = 42)","e79885c4":"xgbr = XGBRegressor(random_state = 42, learning_rate = 0.25)\nxgbr.fit(X_train, y_train)","c3ce0953":"ypred = xgbr.predict(X_test)\nrmse = mean_squared_error(ypred, y_test, squared=False)\nprint(print('RMSE:',rmse))","92e176dd":"lgbmr = LGBMRegressor()\nlgbmr.fit(X_train, y_train)\nypred = lgbmr.predict(X_test)\nrmse = mean_squared_error(ypred, y_test, squared=False)\nprint(print('RMSE:',rmse))","fc25da76":"cat_boost = CatBoostRegressor('learning_rate': 0.0112, 'iterations': 19562, \n                              'max_bin': 152, 'min_data_in_leaf': 273, 'l2_leaf_reg': 0.91729332782104, \n                              'subsample': 0.6160764186759223, 'leaf_estimation_method': 'Newton','random_seed': 228,\n            'loss_function': 'RMSE','eval_metric': 'RMSE, bootstrap_type': 'Bernoulli','task_type': 'GPU')","8d584b1b":"cat_boost.fit(X_train, y_train)\ny_pred = cat_boost.predict(X_test)\nrmse = mean_squared_error(y_pred, y_test, squared=False)\nprint(print('RMSE:',rmse))","d08ed80d":"reg1 = XGBRegressor()\nreg2 = CatBoostRegressor()\nreg3 = LGBMRegressor()\nereg = VotingRegressor(estimators=[('rf', reg2), ('lr', reg3)])\nereg = ereg.fit(X_train, y_train)","133b1260":"y_pred = ereg.predict(X_test)\nrmse = mean_squared_error(y_pred, y_test, squared=False)\nprint(print('RMSE:',rmse))","f2b0bacc":"test_df.head()","9c01abed":"predictions = ereg.predict(test_df)\npredictions","6b92d72a":"sample_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')\nsample_submission['loss'] = predictions\nsample_submission.reset_index()\nsample_submission.head()","01aa2b58":"sample_submission.to_csv('submission.csv', index=False)","4c58adea":"# VOTING REGRESSOR","6d71a44d":"## XGBRegressor","21f5b4fe":"hyperparameter optimization","ca67d973":"# Predicting on test dataset","9d996173":"## CatBoost Regressor","432c44f3":"## Light GBM","614c7db0":"## Data Preprocessing","194fe8e0":"R2 score is pretty bad, we need to try other models","5db585bb":"preprocessing on test dataset","c44c6ab0":"No correlation can be found between any of the features.","d974f07f":"# Splitting data into trains set and test set. Model building, training and testing."}}