{"cell_type":{"a33308e8":"code","b2f6bff3":"code","262bab14":"code","a8bc380e":"code","6e1235e9":"code","70fcf4f5":"code","48d6ecf5":"code","0cd61d37":"code","5bf8c8bb":"code","89c3b749":"code","e0c6927c":"code","8ce3c6a4":"code","549c133a":"code","f9207be0":"code","5ab596cc":"markdown","6bff6431":"markdown","5092cc2f":"markdown","35f81134":"markdown","99150c0b":"markdown"},"source":{"a33308e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b2f6bff3":"class MyClass:\n  x = 5\np1 = MyClass()\nprint(p1.x)","262bab14":"class Person1:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n\np1 = Person1(\"John\", 36)\n\nprint(p1.name)\nprint(p1.age)","a8bc380e":"class Person2:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n\n  def myfunc(self):\n    print(\"Hello my name is \" + self.name)\n    print(\"Hello my age is  \", self.age)\n\np1 = Person2(\"John\", 36)\np1.myfunc()","6e1235e9":"# Set and Print Age\np1.age = 40\np1.myfunc()","70fcf4f5":"del p1.age","48d6ecf5":"p1.myfunc()","0cd61d37":"class Student(Person2):\n  pass","5bf8c8bb":"x = Student(\"Mike\", \"Olsen\")\nx.myfunc()","89c3b749":"class Student(Person2):\n  def __init__(self, fname, lname):\n     return","e0c6927c":"class Student(Person2):\n  def __init__(self, fname, lname):\n    Person.__init__(self, fname, lname)","8ce3c6a4":"class Student(Person2):\n  def __init__(self, fname, lname):\n    super().__init__(fname, lname)","549c133a":"class Student(Person2):\n  def __init__(self, fname, lname, year):\n    super().__init__(fname, lname)\n    self.graduationyear = year\n\nx = Student(\"Mike\", \"Olsen\", 2019)","f9207be0":"class Student(Person2):\n  def __init__(self, fname, lname, year):\n    super().__init__(fname, lname)\n    self.graduationyear = year\n\n  def welcome(self):\n    print(\"Welcome\", self.firstname, self.lastname, \"to the class of\", self.graduationyear)","5ab596cc":"# Add a Method","6bff6431":"# Inheritance","5092cc2f":"## Set Properties","35f81134":"## Add Properties","99150c0b":"## Delete Properties"}}