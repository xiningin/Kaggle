{"cell_type":{"2051c86d":"code","db6f9635":"code","2b4b39f4":"code","5d9125d8":"code","53246489":"code","cff89338":"code","fdd7e118":"code","5cabdf21":"code","0aaf2406":"code","64b21e72":"code","aec21cb5":"code","f381ae73":"code","4692ba25":"code","d1f1c8f0":"code","d7e388c8":"code","0c430220":"code","5e28aa3d":"code","84fcd305":"code","d656d644":"code","8f8bbb45":"code","8841a2f8":"code","63f54979":"code","a5bbcab8":"code","e6a9e756":"code","b23e86b9":"code","fd1fc3da":"code","888b91eb":"code","85740240":"code","aa63dba3":"code","a8ca1ccf":"code","24f82fe7":"code","ae88bef0":"code","1c1e50fb":"code","281a2642":"code","4af79f0f":"code","695ea2ae":"code","576254c3":"code","94918cfb":"code","ce72a76a":"code","04f01d00":"code","6e4b19d6":"code","8c1b8768":"code","8e09899e":"code","994f129b":"code","636dea78":"code","f2754ce9":"code","84b592af":"code","6898d95a":"code","f2dec2f4":"code","a883bb1a":"code","b5610d96":"code","457f7737":"code","7c1571bb":"code","b77ca65d":"code","e16a1e97":"code","8e00e575":"code","30f710fa":"code","3d84a2e3":"code","0122eaea":"code","9c371214":"code","730d7a12":"code","fc1a238c":"code","481d50e4":"code","b8721f94":"code","a402c45f":"code","d0578d1e":"markdown","2882060a":"markdown","e5270606":"markdown","b976935e":"markdown","57c65ae4":"markdown","24546bbc":"markdown","87622cf5":"markdown","95f983bf":"markdown","751fc732":"markdown","f2a79566":"markdown","f84628b6":"markdown","6355ef63":"markdown","864f04c3":"markdown","bed40563":"markdown","e8cf5cc8":"markdown","344154c8":"markdown","ecf61555":"markdown","f699554b":"markdown","632e4352":"markdown","3ee6d739":"markdown","dd1d19ed":"markdown","83def641":"markdown","04af3256":"markdown","7ef0b328":"markdown","59d5573f":"markdown","c3ab6a81":"markdown","857dff6e":"markdown","0f3cfba3":"markdown","d95f7beb":"markdown","6edb6629":"markdown","bc7201cc":"markdown","ff32a329":"markdown","d6994619":"markdown","1954f8d2":"markdown","04fb63e2":"markdown","b5b43daa":"markdown","1bba2aef":"markdown","ad5df37d":"markdown","7100ebbc":"markdown","35c58849":"markdown","d9262e22":"markdown","d977ce40":"markdown","311682f3":"markdown","47743432":"markdown","fecb5e3f":"markdown","faf7f44d":"markdown","1546677c":"markdown","58abc5dd":"markdown","ae7bba48":"markdown","e3504f61":"markdown","f0a23e5b":"markdown","0c7c8739":"markdown","81495a09":"markdown","02c28a1e":"markdown","c8eccdd0":"markdown","1ee9fc11":"markdown","bd669d53":"markdown","87f7c396":"markdown","7cb8d45e":"markdown","d1e76081":"markdown","a5c0093f":"markdown","15971c75":"markdown","c93fc482":"markdown","dd2356d2":"markdown","05232d4f":"markdown","b6b50d14":"markdown","61fbd51c":"markdown","30819a57":"markdown","eef604ac":"markdown","f203ffc1":"markdown","55a0541b":"markdown","26fb263f":"markdown","d2eed59c":"markdown","194f0bd7":"markdown","a680a320":"markdown","e9aa936c":"markdown","56896a30":"markdown","b699b846":"markdown","2d5bf98f":"markdown","7776f3d7":"markdown","9443b39f":"markdown","1a821cb4":"markdown","c62c3497":"markdown","f0f7d6f8":"markdown","b3fb5809":"markdown","19b85560":"markdown","28c2479b":"markdown","b89efd72":"markdown","11feedaf":"markdown","e7e38b56":"markdown","07713e7a":"markdown","2cf5a0a4":"markdown","1e1f9e33":"markdown","674380f2":"markdown","02609c72":"markdown"},"source":{"2051c86d":"# Environment variables\npath_root = \"\/kaggle\/\"\npath_data = f\"{path_root}input\/ken-jee-youtube-data\/\"\npath_output = f\"{path_root}output\/\"","db6f9635":"#Importing the Libraries\nimport numpy as np\nimport pandas as pd\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tqdm.notebook import tqdm\n\nfrom textwrap import wrap\nfrom io import BytesIO\nfrom PIL import Image\nimport urllib.request\n\nfrom emoji import UNICODE_EMOJI\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import AgglomerativeClustering\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom collections import Counter\nimport nltk\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nnltk.download('vader_lexicon')","2b4b39f4":"# Thanks to ASH Bellett for the following code\n# CODE: https:\/\/www.kaggle.com\/ashbellett\/data-engineering\/notebook\nfrom pathlib import Path        # file paths\nfrom typing import Union        # type hints\nimport numpy as np              # linear algebra\nimport pandas as pd             # dataframes\nimport matplotlib.pyplot as plt # visualisations\nimport seaborn as sns           # visualisations\nfrom scipy import stats         # statistics\n\nMETRICS_SCHEMA = {\n    \"Video\": {\n        \"name\": \"video_id\",\n        \"data_type\": str\n    },\n    \"Video title\": {\n        \"name\": \"title\",\n        \"data_type\": str\n    },\n    \"Video pub\u00adlish time\": {\n        \"name\": \"date\",\n        \"data_type\": \"datetime\"\n    },\n    \"Com\u00adments ad\u00added\": {\n        \"name\": \"comment_count\",\n        \"data_type\": int\n    },\n    \"Shares\": {\n        \"name\": \"share_count\",\n        \"data_type\": int\n    },\n    \"Likes\": {\n        \"name\": \"like_count\",\n        \"data_type\": int\n    },\n    \"Dis\u00adlikes\": {\n        \"name\": \"dislike_count\",\n        \"data_type\": int\n    },\n    \"Sub\u00adscribers gained\": {\n        \"name\": \"subscribers_gained\",\n        \"data_type\": int\n    },\n    \"Sub\u00adscribers lost\": {\n        \"name\": \"subscribers_lost\",\n        \"data_type\": int\n    },\n    \"Sub\u00adscribers\": {\n        \"name\": \"net_subscribers\",\n        \"data_type\": int\n    },\n    \"Views\": {\n        \"name\": \"view_count\",\n        \"data_type\": int\n    },\n    \"Av\u00ader\u00adage per\u00adcent\u00adage viewed (%)\": {\n        \"name\": \"average_view_ratio\",\n        \"data_type\": float\n    },\n    \"Av\u00ader\u00adage view dur\u00ada\u00adtion\": {\n        \"name\": \"average_watch_time\",\n        \"data_type\": \"timedelta\"\n    },\n    \"Watch time (hours)\": {\n        \"name\": \"total_watch_time\",\n        \"data_type\": float\n    },\n    \"Im\u00adpres\u00adsions\": {\n        \"name\": \"impression_count\",\n        \"data_type\": int\n    },\n    \"Im\u00adpres\u00adsions click-through rate (%)\": {\n        \"name\": \"click_through_rate\",\n        \"data_type\": float\n    },\n    \"RPM (USD)\": {\n        \"name\": \"rpm\",\n        \"data_type\": float\n    },\n    \"CPM (USD)\": {\n        \"name\": \"cpm\",\n        \"data_type\": float\n    },\n    \"Your es\u00adtim\u00adated rev\u00aden\u00adue (USD)\": {\n        \"name\": \"estimated_revenue\",\n        \"data_type\": float\n    }\n}\n\nCOMMENTS_SCHEMA = {\n    \"Comment_ID\": {\n        \"name\": \"comment_id\",\n        \"data_type\": str\n    },\n    \"Date\": {\n        \"name\": \"date\",\n        \"data_type\": \"datetime\"\n    },\n    \"VidId\": {\n        \"name\": \"video_id\",\n        \"data_type\": str\n    },\n    \"user_ID\": {\n        \"name\": \"user_id\",\n        \"data_type\": str\n    },\n    \"Comments\": {\n        \"name\": \"comment_text\",\n        \"data_type\": str\n    },\n    \"Reply_Count\": {\n        \"name\": \"reply_count\",\n        \"data_type\": int\n    },\n    \"Like_Count\": {\n        \"name\": \"like_count\",\n        \"data_type\": int\n    }\n}\n\nPERFORMANCE_SCHEMA_COUNTRY = {\n    \"Date\": {\n        \"name\": \"date\",\n        \"data_type\": \"datetime\"\n    },\n    \"Country Code\": {\n        \"name\": \"country\",\n        \"data_type\": str\n    },\n    \"Is Subscribed\":{\n        \"name\": \"is_subscribed\",\n        \"data_type\": bool\n    },\n    \"Video Title\": {\n        \"name\": \"title\",\n        \"data_type\": str\n    },\n    \"External Video ID\": {\n        \"name\": \"video_id\",\n        \"data_type\": str\n    },\n    \"Video Length\": {\n        \"name\": \"length\",\n        \"data_type\": int\n    },\n    \"Thumbnail link\": {\n        \"name\": \"thumbnail\",\n        \"data_type\": str\n    },\n    \"Views\": {\n        \"name\": \"view_count\",\n        \"data_type\": int\n    },\n    \"Video Likes Added\": {\n        \"name\": \"likes_added\",\n        \"data_type\": int\n    },\n    \"Video Dislikes Added\": {\n        \"name\": \"dislikes_added\",\n        \"data_type\": int\n    },\n    \"Video Likes Removed\": {\n        \"name\": \"likes_removed\",\n        \"data_type\": int\n    },\n    \"User Subscriptions Added\": {\n        \"name\": \"subscribers_gained\",\n        \"data_type\": int\n    },\n    \"User Subscriptions Removed\": {\n        \"name\": \"subscribers_lost\",\n        \"data_type\": int\n    },\n    \"Average View Percentage\": {\n        \"name\": \"average_view_ratio\",\n        \"data_type\": float\n    },\n    \"Average Watch Time\": {\n        \"name\": \"average_watch_time\",\n        \"data_type\": float\n    },\n    \"User Comments Added\": {\n        \"name\": \"comments_added\",\n        \"data_type\": int\n    }\n}\n\n\n\nPERFORMANCE_SCHEMA = {\n    \"Date\": {\n        \"name\": \"date\",\n        \"data_type\": \"datetime\"\n    },\n    \"Video Title\": {\n        \"name\": \"title\",\n        \"data_type\": str\n    },\n    \"External Video ID\": {\n        \"name\": \"video_id\",\n        \"data_type\": str\n    },\n    \"Video Length\": {\n        \"name\": \"length\",\n        \"data_type\": int\n    },\n    \"Thumbnail link\": {\n        \"name\": \"thumbnail\",\n        \"data_type\": str\n    },\n    \"Views\": {\n        \"name\": \"view_count\",\n        \"data_type\": int\n    },\n    \"Video Likes Added\": {\n        \"name\": \"likes_added\",\n        \"data_type\": int\n    },\n    \"Video Dislikes Added\": {\n        \"name\": \"dislikes_added\",\n        \"data_type\": int\n    },\n    \"Video Likes Removed\": {\n        \"name\": \"likes_removed\",\n        \"data_type\": int\n    },\n    \"User Subscriptions Added\": {\n        \"name\": \"subscribers_gained\",\n        \"data_type\": int\n    },\n    \"User Subscriptions Removed\": {\n        \"name\": \"subscribers_lost\",\n        \"data_type\": int\n    },\n    \"Average View Percentage\": {\n        \"name\": \"average_view_ratio\",\n        \"data_type\": float\n    },\n    \"Average Watch Time\": {\n        \"name\": \"average_watch_time\",\n        \"data_type\": float\n    },\n    \"User Comments Added\": {\n        \"name\": \"comments_added\",\n        \"data_type\": int\n    }\n}\n\ndef typecast_column(column: pd.Series, data_type: Union[type, str]):\n    if data_type == 'datetime':\n        result = pd.to_datetime(column)\n    elif data_type == 'timedelta':\n        result = column.apply(lambda row: np.int16(pd.Timedelta(row).seconds))\n    elif data_type == int:\n        result = column.astype(np.int32)\n    elif data_type == float:\n        result = column.astype(np.float16)\n    else:\n        result = column.astype(data_type)\n    return result\n\n\n\n\n\nmetrics_column_map = {\n    column: METRICS_SCHEMA[column][\"name\"]\n    for column\n    in METRICS_SCHEMA.keys()\n}\n\ncomments_column_map = {\n    column: COMMENTS_SCHEMA[column][\"name\"]\n    for column\n    in COMMENTS_SCHEMA.keys()\n}\n\n\nperformance_country_column_map = {\n    column: PERFORMANCE_SCHEMA_COUNTRY[column][\"name\"]\n    for column\n    in PERFORMANCE_SCHEMA_COUNTRY.keys()\n}\n\nperformance_column_map = {\n    column: PERFORMANCE_SCHEMA[column][\"name\"]\n    for column\n    in PERFORMANCE_SCHEMA.keys()\n}","5d9125d8":"#Loading the dataset\ndata1_agg_country_suscriber: pd.DataFrame = pd.read_csv(f\"{path_data}Aggregated_Metrics_By_Country_And_Subscriber_Status.csv\")\ndata2_agg_video: pd.DataFrame = pd.read_csv(f\"{path_data}Aggregated_Metrics_By_Video.csv\")\ndata3_comments: pd.DataFrame = pd.read_csv(f\"{path_data}All_Comments_Final.csv\")\ndata4_video_performance: pd.DataFrame = pd.read_csv(f\"{path_data}Video_Performance_Over_Time.csv\")\n\nfor column in data1_agg_country_suscriber.columns:\n    data1_agg_country_suscriber[column] = typecast_column(\n        data1_agg_country_suscriber[column],\n        PERFORMANCE_SCHEMA_COUNTRY[column][\"data_type\"]\n    )\n\nfor column in data2_agg_video.columns:\n    data2_agg_video[column] = typecast_column(\n        data2_agg_video[column],\n        METRICS_SCHEMA[column][\"data_type\"]\n    )\n    \nfor column in data3_comments.columns:\n    data3_comments[column] = typecast_column(\n        data3_comments[column],\n        COMMENTS_SCHEMA[column][\"data_type\"]\n    )\n    \nfor column in data4_video_performance.columns:\n    data4_video_performance[column] = typecast_column(\n        data4_video_performance[column],\n        PERFORMANCE_SCHEMA[column][\"data_type\"]\n    )\n\ndata1_agg_country_suscriber.rename(columns=performance_country_column_map, inplace=True)\ndata2_agg_video.rename(columns=metrics_column_map, inplace=True)\ndata3_comments.rename(columns=comments_column_map, inplace=True)\ndata4_video_performance.rename(columns=performance_column_map, inplace=True)\n","53246489":"# Lets check keywords\ndef get_most_common_keywords(df, label=\"title\", amount=20):\n\n    return Counter(\" \".join(df[label]).split()).most_common(amount)","cff89338":"data4_video_performance.describe()","fdd7e118":"data3_comments.head(3)","5cabdf21":"data1_agg_country_suscriber.head(3)","0aaf2406":"\ndata2_agg_video.describe()","64b21e72":"# Lets filter the best and worse CTR in video\n\"\"\"\nnaive assumptions:\n- everything above to (mean click_through_rate +std) is good traffic\n- 1000 are enought data to take decision, use percentiles for more precision\n- sort by impressions is irrelevant if we use CTR directly, so, sort by views.\n\"\"\"\nmean_ctr = data2_agg_video[\"click_through_rate\"].mean()\n# mean ctr: 3.08\n# mean views: 49716\nmask1 = (data2_agg_video[\"view_count\"] > 1000) & (data2_agg_video[\"click_through_rate\"] > (mean_ctr + data2_agg_video[\"click_through_rate\"].std()))\nmask2 = (data2_agg_video[\"view_count\"] > 1000)\n\nq1_ctr_best = data2_agg_video[mask1].sort_values([\"click_through_rate\",\"view_count\"], axis=0, ascending=[False,False])\nlen_q1_ctr_best = len(q1_ctr_best)\nq1_ctr_worst = data2_agg_video[mask2].sort_values([\"click_through_rate\",\"view_count\"], axis=0, ascending=[False,False]).tail(len_q1_ctr_best)\n\nprint(len_q1_ctr_best)\n","aec21cb5":"# Distribution of best CTR\nsns.histplot(q1_ctr_best['click_through_rate'], kde=True, linewidth=0)\nq1_ctr_best.head(2)","f381ae73":"# Distribution of worst CTR\nsns.histplot(q1_ctr_worst['click_through_rate'], kde=True, linewidth=0)\nq1_ctr_worst.tail(2)","4692ba25":"# some functions to see titles and thumbnails\ndef parse_q1(df):\n    q1_video_id = df[\"video_id\"].values\n    q1_titles = df[\"title\"].values\n    q1_thumbnails = []\n    for i in range(len(q1_video_id)):\n        thumbnail = data1_agg_country_suscriber[data1_agg_country_suscriber[\"video_id\"] == q1_video_id[i]].iloc[0][\"thumbnail\"]\n        q1_thumbnails.append(thumbnail)\n    q1_thumbnails = np.array(q1_thumbnails)\n\n    return q1_video_id, q1_titles, q1_thumbnails\n\ndef request_url_image(url):\n    # Adding information about user agent to don't get blocked\n    opener=urllib.request.build_opener()\n    opener.addheaders=[('User-Agent','Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/36.0.1941.0 Safari\/537.36')]\n    urllib.request.install_opener(opener)    \n    # calling urlretrieve function to get resource\n    img = Image.open(BytesIO(urllib.request.urlopen(url).read()))\n\n    return img\n\ndef plot_imgs_grid(rows,cols,titles,images,figsize=(36,28)):\n\n    f, axarr = plt.subplots(5,6, figsize=figsize) # (width,height)\n\n    counter = 0\n    for i in range(rows):\n        for j in range(cols):\n            title = titles[counter].replace(\"$\", \"d\")  # matplotlib exception with $\n            try:\n                title = \"\\n\".join(wrap(title, width=30))\n            except:\n                pass\n            axarr[i,j].imshow(images[counter])\n            axarr[i,j].set_title(title,fontsize=20)\n            counter += 1\n    plt.show()","d1f1c8f0":"# retrieve images from best CTR\nq1_video_id_b, q1_titles_b, q1_thumbnails_b = parse_q1(q1_ctr_best)\nq1_thumbnails_as_img_b = []\nfor i in tqdm(range(len(q1_thumbnails_b))):\n    q1_thumbnails_as_img_b.append(request_url_image(q1_thumbnails_b[i]))","d7e388c8":"# retrieve images from worst CTR\nq1_video_id_w, q1_titles_w, q1_thumbnails_w = parse_q1(q1_ctr_worst)\nq1_thumbnails_as_img_w = []\nfor i in tqdm(range(len(q1_thumbnails_w))):\n    q1_thumbnails_as_img_w.append(request_url_image(q1_thumbnails_w[i]))\n# worst to best: invert\nq1_video_id_w = q1_video_id_w[::-1]\nq1_titles_w = q1_titles_w[::-1]\nq1_thumbnails_as_img_w = q1_thumbnails_as_img_w[::-1]","0c430220":"# best title-thumnail combination\nplot_imgs_grid(5,6,q1_titles_b,q1_thumbnails_as_img_b)","5e28aa3d":"# worst(?) title-thumbnail combination\nplot_imgs_grid(5,6,q1_titles_w,q1_thumbnails_as_img_w)","84fcd305":"get_most_common_keywords(q1_ctr_best,\"title\",10)\n        ","d656d644":"get_most_common_keywords(q1_ctr_worst,\"title\",10)","8f8bbb45":"# total_watch_time is not useful, to determine shorts we need the video duration\ntotal_watch_time_percentile_50 = 397.875 # got from data2_agg_video.describe()\nmaskq2_1 = (data2_agg_video[\"total_watch_time\"] < total_watch_time_percentile_50)  # (data2_agg_video[\"title\"]).apply(lambda s: \"#SHORTS\" in s) -> can analyze the two short videos\nq2_shorts = data2_agg_video[maskq2_1].sort_values([\"average_view_ratio\",\"average_watch_time\",\"click_through_rate\"],axis=0,ascending=False).loc[:,[\"video_id\",\"title\",\"average_view_ratio\",\"average_watch_time\",\"view_count\", \"total_watch_time\",\"click_through_rate\"]].head(30)\nq2_normal = data2_agg_video[~maskq2_1].sort_values([\"average_view_ratio\",\"average_watch_time\",\"click_through_rate\"],axis=0,ascending=False).loc[:,[\"video_id\",\"title\",\"average_view_ratio\",\"average_watch_time\",\"view_count\", \"total_watch_time\",\"click_through_rate\"]].head(30)","8841a2f8":"# engagging videos with short consuming time\nq2_shorts.loc[:,[\"title\",\"average_view_ratio\",\"click_through_rate\",\"view_count\"],].head()","63f54979":"# Evaluating click bait\nsns.jointplot(x='average_view_ratio', y='click_through_rate', data=q2_shorts, kind='reg')\nsns.jointplot(x='average_view_ratio', y='click_through_rate', data=q2_shorts, kind='kde')","a5bbcab8":"# Evaluating engagging and view count\n# Note that the regression line is a little similar as before\nsns.jointplot(x='average_view_ratio', y='view_count', data=q2_shorts, kind='kde')","e6a9e756":"# engagging with normal-long consumming time videos (These are favorites of youtube, since YT neural network want to extend session time)\nq2_normal.loc[:,[\"title\",\"average_view_ratio\",\"click_through_rate\",\"view_count\"],].head()","b23e86b9":"# Evaluating click bait\nsns.jointplot(x='average_view_ratio', y='click_through_rate', data=q2_normal, kind='reg')","fd1fc3da":"# Evaluating engagging and view count\n# Note that the regression line goes from up to down instead of down to up\nsns.jointplot(x='average_view_ratio', y='view_count', data=q2_normal, kind='hex')","888b91eb":"# Calculate the scores for SEO-Title\ndef score_r1(text):\n    title = f\"{text.lower()}\"\n    score = [0,0,0,0]\n    # some, name all triggers is about 1 millon of frases\n    # i base this on spanish triggers, english may differ just a little\n    # 0=curiosity, 1=fear, 2=utility, 3=urgency\n    # include some niche words?\n    triggers = {\n        0: [\"secret\",\"top\",\"need\",\"life\",\"what\",\"why\",\"where\",\"when\",\"bought\", \"and this happened\", \"reveal\", \"discover\", \"won't believe it\", \"surprise\", \"interest\", \"you don't know\",\"reasons\"],\n        1: [\"loss\",\"care\", \"danger\", \"attention\", \"error\", \"problem\", \"trap\", \"scam\", \"ban\", \"forbidden\"],\n        2: [\"best\",\"how\", \"easy\", \"step\",\"fast\",\"trick\",\"tip\",\"strategy\",\"definitive\",\"proven\",\"works\",\"you\", \"you must\",\"beginners\",\"course\",\"data science\",\"data scientist\",\"project\",\"faang\",\"maang\"],\n        3: [\"urgent\",\"now\",\"hurry\",\"limited\",\"last\",\"chance\",\"free\",\"actual\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"]\n    }\n\n    # python string search uses KMP similar algorithm so brute force it's ok (maybe)\n    for key,array in triggers.items():\n        for keyword in array:\n            if keyword in title:\n                score[key] += 1\n    return score\n\ndef score_r2(text):\n    title = f\"{text.lower()}\"\n    score = 0\n    ascii_common = [\"!\", \"?\", \"+\"]\n    for ac in ascii_common:\n        if ac in title:\n            score += 0.5\n\n    return score\n\n\ndef score_r3(text):\n    title = f\"{text.lower()}\"\n    # we need ML and more data from other youtubers. So ignore\n    # Even better, do specific human analysis.\n    return 0\n\ndef score_r4(text):\n    title = f\"{text.lower()}\"\n    score = 0\n    # favorite numbers for seo: 1-3-5-7-10-12-15 multiples\n    # worst seo numbers 2-4-6\n    numbers = [f\"{i} \" for i in range(0,10)]\n    for number in numbers:\n        if number in title:\n            score += 1\n            if number in [\"1 \",\"3 \",\"5 \",\"7 \"]:\n                score += 1\n            break\n\n    return score\n\ndef score_r5(text):\n    title = f\"{text.lower()}\"\n    score = 0\n    # some with some niche words\n    action_verbs = [\"scrape\", \"in python\",\"win \",\"learn\", \"discover\", \"control\", \"create\", \"find\", \"teach\", \"shows\", \"demonstrates\", \"rid\", \"imagine\", \"improve\", \"want\", \"get\", \"fulfill\", \"order\", \"organize\"]\n\n    for av in action_verbs:\n        if av in title:\n            score += 1\n\n    return score\n\ndef score_r6(text):\n    title = f\"{text.lower()}\"\n    score = 0\n    for emoji in UNICODE_EMOJI[\"en\"]:\n        score += title.count(emoji)\n\n    if score > 4:\n        score = -1\n\n    return score\n\n# r7 ignored\n\n# sanity check\nprint(score_r1(\"REVEALED ML trick for this actual CRYPTO winter!\"))\nprint(score_r2(\"REVEALED ML trick for this CRYPTO winter!\"))\n# print(score_r3(\"REVEALED ML trick this actual CRYPTO winter!\"))\nprint(score_r4(\"3 ML tricks to win money in this CRYPTO winter!\"))\nprint(score_r5(\"LEARN this ML trick for CRYPTO winter!\"))\nprint(score_r6(\"100 For \ud83d\ude18 \u25fc\ufe0f YouTube \ud83d\ude80!!\")) # \u25fc\ufe0f = 2 emojis","85740240":"# Save the scores for each video, and see the distribution of this scores in the dataset\ncols_scores_r = [\"r1_curiosity\",\"r1_fear\",\"r1_utility\",\"r1_urgency\",\"r2\",\"r4\",\"r5\",\"r6\"]\ntitle_score_r1 = data2_agg_video[\"title\"].apply(score_r1)\ndata2_agg_video[\"r1_curiosity\"] = title_score_r1.apply(lambda array: array[0])\ndata2_agg_video[\"r1_fear\"] = title_score_r1.apply(lambda array: array[1])\ndata2_agg_video[\"r1_utility\"] = title_score_r1.apply(lambda array: array[2])\ndata2_agg_video[\"r1_urgency\"] = title_score_r1.apply(lambda array: array[3])\ndata2_agg_video[\"r2\"] = data2_agg_video[\"title\"].apply(score_r2)\ndata2_agg_video[\"r4\"] = data2_agg_video[\"title\"].apply(score_r4)\ndata2_agg_video[\"r5\"] = data2_agg_video[\"title\"].apply(score_r5)\ndata2_agg_video[\"r6\"] = data2_agg_video[\"title\"].apply(score_r6)\n\nfor c in cols_scores_r:\n    sns.histplot(data2_agg_video[c])\n    plt.show()","aa63dba3":"# View the best scored videos\ndata2_agg_video[\"final_score\"] = data2_agg_video.loc[:, cols_scores_r].sum(axis=1)\ndata2_agg_video.sort_values([\"final_score\",\"click_through_rate\"], axis=0, ascending=[False,False],inplace=True)\ndata2_agg_video.loc[:,[\"title\",\"click_through_rate\",\"final_score\",\"view_count\"]].head(20)","a8ca1ccf":"# linear relation between the score calculated and CTR\nsns.jointplot(x=\"final_score\",y=\"click_through_rate\",data=data2_agg_video,kind=\"reg\")","24f82fe7":"# First analyze contry data\ncountry_top10_view = data1_agg_country_suscriber.sort_values([\"view_count\"],ascending=False,axis=0).head(10)\ncountry_top10_sub_gained = data1_agg_country_suscriber.sort_values([\"subscribers_gained\"],ascending=False,axis=0).head(10)\ncountry_top10_sub_average_view_ratio = data1_agg_country_suscriber.sort_values([\"average_view_ratio\"],ascending=False,axis=0).head(10)","ae88bef0":"sns.barplot(x=\"country\",y=\"view_count\",data=country_top10_view, estimator=np.median)","1c1e50fb":"sns.barplot(x=\"country\",y=\"subscribers_gained\",data=country_top10_sub_gained, estimator=np.median)","281a2642":"# this average view is unexpected\nsns.barplot(x=\"country\",y=\"average_view_ratio\",data=country_top10_sub_average_view_ratio, estimator=np.median)","4af79f0f":"# In order to cluster titles, lets use TF-IDF\nq4 = data2_agg_video[\"title\"].values\nprint(len(q4))\nvectorizer = TfidfVectorizer(stop_words={'english'}) # TF-IDF > Counting method\nX_q4 = vectorizer.fit_transform(q4)","695ea2ae":"# Elbow curve to select K\nscore = []\nK = range(2,20)\nfor k in K:\n   model = KMeans(n_clusters=k, max_iter=200, n_init=10)\n   model = model.fit(X_q4)\n   score.append(model.inertia_)\nplt.plot(K, score, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Loss')\nplt.title('Kmeans')\nplt.show()","576254c3":"#Initiating the Agglomerative Clustering model \nAC = AgglomerativeClustering(n_clusters=16)\n# fit model and predict clusters\nyhat_AC = AC.fit_predict(X_q4.toarray())\ndata2_agg_video[\"clusters\"] = yhat_AC\nsns.histplot(data2_agg_video[\"clusters\"],bins=16)","94918cfb":"\"\"\"\nNaive assumption:\n- A subscriber is interested in, if suscribes\n- A subscriber is interested in, if clicks the video.\n- click_through_rate > subscribers_gained? That depends on the objective. If loyalty is more important, then subscribers_gained is better\n\"\"\"\nq4_top100 = data2_agg_video.sort_values(['click_through_rate','subscribers_gained'],ascending=False,axis=0).head(100)\nsns.histplot(q4_top100[\"clusters\"],bins=16)","ce72a76a":"# Lets see the cluster 6\nq4_top100[q4_top100[\"clusters\"] == 6].loc[:,[\"title\",\"subscribers_gained\",\"click_through_rate\"]].head(11)","04f01d00":"# Let's see the cluster 0\nq4_top100[q4_top100[\"clusters\"] == 0].loc[:,[\"title\",\"subscribers_gained\",\"click_through_rate\"]].head(11)","6e4b19d6":"# finally let's see the cluster 2\nq4_top100[q4_top100[\"clusters\"] == 2].loc[:,[\"title\",\"subscribers_gained\",\"click_through_rate\"]].head(11)","8c1b8768":"# Calculate first the balance: positive - negative\n# sr_relative is the percentage of subscribers respect view count\ndata2_agg_video[\"sr_relative\"] = (data2_agg_video[\"subscribers_gained\"]\/data2_agg_video[\"view_count\"]) * 100\ndata2_agg_video[\"sr_balance\"] = (data2_agg_video[\"subscribers_gained\"] - data2_agg_video[\"subscribers_lost\"])\ndata2_agg_video[\"sr_balance_relative\"] =  (data2_agg_video[\"sr_balance\"]\/data2_agg_video[\"view_count\"]) * 100\n\nq5_sr = data2_agg_video.sort_values([\"sr_relative\",\"view_count\"],ascending=[False,False],axis=0)\nq5_sr_plus = data2_agg_video.sort_values([\"sr_balance_relative\",\"view_count\"],ascending=[False,False],axis=0)\nq5_sr_minus = data2_agg_video.sort_values([\"sr_balance_relative\",\"view_count\"],ascending=[True,False],axis=0)","8e09899e":"# These are target videos. From videos with high CTR and views put a card linkin to this videos, so the no suscribed will be converted.\n# ignore the total row (nan title)\nq5_sr.loc[:,[\"title\",\"sr_relative\",\"subscribers_gained\",\"click_through_rate\"]].head(11)","994f129b":"# After calculating the balance, what are the best videos?\nq5_sr_plus.loc[:,[\"title\",\"sr_balance_relative\",\"sr_balance\",\"click_through_rate\"]].head(11)","636dea78":"# After calculating the balance, what videos have more relative suscribers lost?\nq5_sr_minus.loc[:,[\"title\",\"sr_balance_relative\",\"sr_balance\",\"click_through_rate\"]].head(11)","f2754ce9":"get_most_common_keywords(data2_agg_video,\"title\",40)","84b592af":"def label_sentiment(text):\n    score = SentimentIntensityAnalyzer().polarity_scores(text)\n    neg = score[\"neg\"]\n    neu = score[\"neu\"]\n    pos = score[\"pos\"]\n    comp = score[\"compound\"]\n    if neg > pos:\n        return -neg\n    elif pos > neg:\n        return pos\n    return 0\n\n# expected time 2-3 min of processing\ndata3_comments[\"sentiment\"] = data3_comments[\"comment_text\"].apply(label_sentiment)\n","6898d95a":"# How many are positive and how many are negative?\nis_negative = (data3_comments[\"sentiment\"] < 0)\ncomments_positive = data3_comments[~is_negative].loc[:,[\"comment_id\",\"comment_text\", \"sentiment\"]]\ncomments_negative = data3_comments[is_negative].loc[:,[\"comment_id\", \"comment_text\", \"sentiment\"]]\nprint(f\"Positive: {len(comments_positive)}, Negative: {len(comments_negative)}\")","f2dec2f4":"# Let's get the most common positive keywors from the middle of array\n# todo: remove stop words\nget_most_common_keywords(comments_positive,\"comment_text\",100)[-60:-50]","a883bb1a":"# Let's see the most common negative words in the middle of array\nget_most_common_keywords(comments_negative,\"comment_text\",100)[-60:-50]","b5610d96":"# What are the most positive comments\ncomments_positive.sort_values([\"sentiment\"],ascending=False,axis=0).head(20)","457f7737":"# Let's see the most negative comments\ncomments_negative = comments_negative.sort_values([\"sentiment\"],ascending=True,axis=0)\n\n\n\"\"\"\nwith open(\"temp.txt\",\"w\") as f:\n    f.writelines(map(lambda s: s+\"\\n\",comments_negative[\"comment_text\"].values))\n\"\"\"\n\ncomments_negative.head(20)","7c1571bb":"# Let's get videos with at least 2 dislikes and sort the most liked relative to the sum of likes+dislikes\nmask_justice = (data2_agg_video[\"view_count\"]>1000) & (data2_agg_video[\"dislike_count\"]>1)\ndata2_agg_video[\"like_interaction\"] = data2_agg_video[\"like_count\"] + data2_agg_video[\"dislike_count\"]\ndata2_agg_video[\"likes_relative\"] = (data2_agg_video[\"like_count\"]\/data2_agg_video[\"like_interaction\"])\ndata2_agg_video.sort_values([\"likes_relative\"], ascending=False,axis=0)[mask_justice].loc[:,[\"video_id\",\"title\",\"likes_relative\",\"like_interaction\",\"view_count\",\"like_count\",\"dislike_count\"]].head()","b77ca65d":"sns.histplot(data2_agg_video[\"likes_relative\"])","e16a1e97":"# Filter some videos with atleast 1 dislike, and sort them relative to the sum of likes+dislikes\nmask_justice = (data2_agg_video[\"view_count\"]>1000) & (data2_agg_video[\"dislike_count\"]>0)\ndata2_agg_video[\"like_interaction\"] = data2_agg_video[\"like_count\"] + data2_agg_video[\"dislike_count\"]\ndata2_agg_video[\"dislikes_relative\"] = (data2_agg_video[\"dislike_count\"]\/data2_agg_video[\"like_interaction\"])\ndata2_agg_video.sort_values([\"dislikes_relative\"], ascending=False,axis=0)[mask_justice].loc[:,[\"video_id\",\"title\",\"dislikes_relative\",\"like_interaction\",\"view_count\",\"like_count\",\"dislike_count\"]].head()","8e00e575":"# Get videos with more comments relative to view count\nmask_justice = (data2_agg_video[\"view_count\"]>1000)\ndata2_agg_video[\"comments_relative\"] = data2_agg_video[\"comment_count\"]\/data2_agg_video[\"view_count\"]\ndata2_agg_video.sort_values([\"comments_relative\"], ascending=False,axis=0)[mask_justice].iloc[1:,:].loc[:,[\"video_id\",\"title\",\"comment_count\",\"comments_relative\"]].head(10)","30f710fa":"# Get the videos with more shares relative to view count\nmask_justice = (data2_agg_video[\"view_count\"]>1000)\ndata2_agg_video[\"shares_relative\"] = data2_agg_video[\"share_count\"]\/data2_agg_video[\"view_count\"]\ndata2_agg_video.sort_values([\"shares_relative\"], ascending=False,axis=0)[mask_justice].iloc[1:,:].loc[:,[\"video_id\",\"title\",\"share_count\",\"shares_relative\"]].head(10)","3d84a2e3":"# Distribution of sharing\nsns.histplot(data2_agg_video[\"shares_relative\"])","0122eaea":"# Let's get the top 1000 comments with more likes and apply them TF-IDF\nq13_top1000 = data3_comments.sort_values([\"like_count\"],ascending=False,axis=0).head(1000)\nq13 = q13_top1000[\"comment_text\"].values\nprint(len(q13))\nvectorizer = TfidfVectorizer(stop_words={'english'})\nX = vectorizer.fit_transform(q13)\nq13_top1000.head()","9c371214":"# Elbow curve to detect best K\n\nscore = []\nK = range(2,10)\nfor k in K:\n   model = KMeans(n_clusters=k, max_iter=200, n_init=10)\n   model = model.fit(X)\n   score.append(model.inertia_)\nplt.plot(K, score, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Loss')\nplt.title('Kmeans')\nplt.show()","730d7a12":"#Initiating the Agglomerative Clustering model \nn_clusters = 7\nAC = AgglomerativeClustering(n_clusters=n_clusters)\n# fit model and predict clusters\nyhat_AC = AC.fit_predict(X.toarray())\nq13_top1000[\"clusters\"] = yhat_AC\nsns.histplot(q13_top1000[\"clusters\"],bins=n_clusters)","fc1a238c":"# Let's check what is the cluster 1 about\nq13_top1000[q13_top1000[\"clusters\"] == 1].loc[:,[\"comment_text\",\"sentiment\",\"like_count\",\"reply_count\"]].head(10)","481d50e4":"# What about cluster 2?\nq13_top1000[q13_top1000[\"clusters\"] == 2].loc[:,[\"comment_text\",\"sentiment\",\"like_count\",\"reply_count\"]].head(10)","b8721f94":"q13_top1000[q13_top1000[\"clusters\"] == 2].loc[:,\"comment_text\"].values[10:15]","a402c45f":"# get the videos most interested by people\nvideos_best_ctr = q1_ctr_best.head(100)[\"title\"].values\nvideos_best_avg_watch_time = q2_normal.head(100)[\"title\"].values\n# get best subscription rate videos\nvideos_best_subscription_rate = q5_sr.iloc[2:,:].head(100)[\"title\"].values\nprint(\"LINK some engaging video like:\\n\", videos_best_ctr[0:3],\"\\n\",videos_best_avg_watch_time[0:3])\nprint(\"\\nWITH the best videos gaining subscriptions\", videos_best_subscription_rate[0:3])\nprint(\"\\nTo increase general subscribers gaining\")","d0578d1e":"See [4. FINAL CONCLUSIONS and RECOMMENDATIONS](#4)","2882060a":"There is no clear relationship. But:\n- The courses recommendations were shared a lot.\n- The most of the time people don't share the videos.","e5270606":"Both depends on CTR, so we have to get the top videos with higher CTR. Determine which one provided the traffic is very difficult and probably we need more specific data by video, so i will keep things simple.","b976935e":"The most relative interaction happen when the video is about a interview or it's with other person.","57c65ae4":"#### Analysis","24546bbc":"<a id=\"107\"><\/a>\n### Q7: What are the keywords used? These answer to search intents?","87622cf5":"#### Conclusion","95f983bf":"- The top countries that watch and subscribe to channel are: US, IN, GB. Channel should pay attention to something in India?","751fc732":"<a id=\"113\"><\/a>\n### Q13: What are the topics of the most liked comments?","f2a79566":"<a id=\"106\"><\/a>\n### Q6: When the retention peaks happen? what did the youtuber for that peaks? (Important question for SEO-Frame technique)","f84628b6":"- (q5_sr) are target videos. From videos with high CTR and views put a card linking to these videos, so the no suscribed will be converted. It's like modeling a markov transition model, this strategy is already proven.\n- The videos that get more subs are about: beginner introduction to data science, experience (if i had to start again), recommendations.\n- The videos that get more un-subs are about: Q&A, channel announcements.","6355ef63":"Now, lets profile the top 3 clusters","864f04c3":"<a id=\"0\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">OBJECTIVES and SCOPE<\/p>\n\nIn this notebook i'll perform EDA over the data set of K.J. I'll model clustering with TF-ITF of title topics in Q4 and about user comments in Q13 and some sentimental analysis, the rest is simple analysis.<br><br>\nI'll answer each important question first and give a summary in the Final section.<br><br>\nEnglish is not my native language, so sorry for gramatical errors or similar.<br><br>\n<span style=\"color:#47917f\">Questions<\/span><br><br>\nBefore performing EDA, we should have a clear objective. So we can make the right questions and the right visualizations.<br>\n* [Q1: What types of video titles and thumbnails drive the most traffic?](#101)\n* [Q2: What type of content are people engaging with the most or watching the longest?](#102)\n* [Q3: What is the SEO applied and what it's the performance?](#103)\n* [Q4: Who is the core audience and what are they interested in? (title topic clusters and country analysis)](#104)\n* [Q5: What types of videos have lead to the most growth and bad growth (subs removed)?](#105)\n* [Q6: When the retention peaks happen? what did the youtuber for that peaks? (Important question for SEO-Frame techniques)](#106)\n* [Q7: What are the keywords used? These answer to search intents?](#107)\n* [Q8: What are the top positive\/negative words\/sentences in comments? (Sentiment Analysis)](#108)\n* [Q9: What videos produces more relative likes?](#109)\n* [Q10: What videos produces more relative dislikes?](#110)\n* [Q11: What videos produces more relative comments added?](#111)\n* [Q12: What videos generates more social currency? (shares)](#112)\n* [Q13: What are the topics of the most liked comments? (clusters)](#113)\n\n<br><br>\n<span style=\"color:#47917f\">Objectives<\/span><br>\n<hr>\n<span style=\"color:#47917f\">1) Increase video CTR.<\/span><br>\n- Related questions: Q1,Q3,Q4,Q5,Q6,Q7<br>\n<hr>\n<span style=\"color:#47917f\">2) Increase Subscription Ratio.<\/span><br>\n- Related questions: Q2,Q4,Q5,Q7,Q12.<br>\n<hr>\n<span style=\"color:#47917f\">3) Increase average watch time and get plain retention [Extend the total youtube session time.].<\/span> (We need more data from youtube studio, specifically relative retention by video) <br>\n- Related questions: Q2!,Q6.<br>\n(Note: this is probably the most important objective. The youtube DL algorithm rewards a lot increasing the total session time of a user. But is very hard to determine it with individual user stats).\n<hr>\n<span style=\"color:#47917f\">4) Find suggestions.<\/span><br>\n- Related questions: Q5, Q8, Q9, Q10, Q13.<br>\n<hr>\n<span style=\"color:#47917f\">5) Increase interaction.<\/span><br>\n- Related questions: Q3, Q11, Q12.<br>\n\n<hr>\n<hr>\nNot covered (yet):<br>\n- What topics get the most viewership?\n\n- What do are people asking for in the comments?\n\n- What impacts watch time and click through rate?\n\n- Can we predict if a title will be clickable?\n\n- What is different about the \"viral\" videos and normal videos.\n\n* Increase revenue objective: increase RPM and improve CPM.\n- Related questions: Q2,Q6!\n\n* Improve performance in sprint phase (3hours-28days) to evergreen phase (28days+).\n\n- Note to myself: Time series\n<br><br>\nX) Others:\n\n- Chatbot for address videos. Trying to extend the youtube session to get the maximum reward by platform.\n- Pulling sentiment from thumbnails and titles and comparing that with performance. (Not trivial task)\n- Recommendation system for increase session time. (Chain interlinking)\n","bed40563":"Thanks for reading. I'm relatively new in data science (3 months), so in this notebook may exist something to improve or change.","e8cf5cc8":"[](http:\/\/)","344154c8":"There is no a clear relationship. The most of videos have a relative number of likes > 90%. Anyways, i will select some:\n1) Numbered titles (4 types, 6 lessons, etc)<br>\n2) Life and mental health (book recommendations, avoid mistakes).<br>\n3) Sucess study case\/tips.<br>\n* Project reviews is hibrid with relative likes and dislikes.<br>","ecf61555":"## <span style=\"color:#473\">1) Increase video CTR.<\/span>","f699554b":"We can train a classifier but meh, is easy and already someone did it probably much better...","632e4352":"We dont have enough data to answer this. Relative retention curve by video can be exported from youtube studio?","3ee6d739":"#### Conclusion","dd1d19ed":"<a id=\"5\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">END<\/p>","83def641":"The view ratio is relatively low.","04af3256":"<a id=\"1\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">IMPORTING LIBRARIES<\/p>\n[Return to table of contents](#top)","7ef0b328":"#### Analysis","59d5573f":"<a id=\"3\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">EXPLORATORY DATA ANALYSIS<\/p>\n[Return to table of contents](#top)","c3ab6a81":"For now, i will only analize the titles. Other Seo-Techniques will be ignored since require a really specific analisis by video.","857dff6e":"- The best clusters (topics) of videos to get high CTR are: tutorial related, data science life (portfolio,daily,learning,etc.) and job related.","0f3cfba3":"- The videos that get more subs are about: beginner introduction to data science, experience (if i had to start again...) and recommendations related to data science (numbered are better, Example: 3 Reasons You Should NOT...). Also, recommendations are shared more often.\n- The videos that get more un-subs are about: Q&A and channel announcements.\n- The keywords are only a few. Is very important to expand this with \"mainstream\" topics.\n","d95f7beb":"<a id=\"105\"><\/a>\n### Q5: What types of videos have lead to the most growth and bad growth (subs removed)? ","6edb6629":"High CTR and low AVG view ratio usually is \"bad clickbait\". In this case is moderated.","bc7201cc":"When doing normal-long videos, think about doing:\n\n- Content about things they have\/need to know \u201cWhat You Need...\u201d. Be aware of repetitive click bait. A little portion of users really don\u2019t like that. Use click bait more hiddenly. \n\n- Use numbers and psychological triggers more often. \n\n- Things like \u201cYou need to start to ...\u201d, are suitable topics. But try to don\u2019t get repetitive.","ff32a329":"#### Analysis","d6994619":"#### Conclusion","1954f8d2":"#### Conclusion","04fb63e2":"#### Conclusion","b5b43daa":"- First, link (using cards, pinned comments, description, etc) the videos with best CTR and avg watch time to the videos with best subscription rate. This way, the general subscription ratio will increase.","1bba2aef":"No pattern found in keywords. I'll get more in deep with the titles in the Q3. About the thumbnails i'll talk about that at the final section.","ad5df37d":"<a id=\"109\"><\/a>\n### Q9: What videos produces more relative likes?","7100ebbc":"<a id=\"102\"><\/a>\n### Q2: What type of content are people engaging with the most or watching the longest?","35c58849":"Note: Time series forecasting may help but, again, i will keep it simple. We have to check the average view ratio.","d9262e22":"<a id=\"4\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">FINAL CONCLUSIONS and RECOMMENDATIONS<\/p>\n[Return to table of contents](#top)","d977ce40":"<a id=\"110\"><\/a>\n### Q10: What videos produces more relative dislikes?","311682f3":"#### Analysis","47743432":"K means is not able to determine the topics (high loss and not convergence). So choose any number.","fecb5e3f":"<a id=\"108\"><\/a>\n### Q8: What are the top positive\/negative words\/sentences in comments? (Sentiment Analysis)","faf7f44d":"KMeans can't determine the topics. So lets pick any number. Gaussian mixture can do it better? Maybe no.","1546677c":"#### Conclusion","58abc5dd":"Let's cluster them","ae7bba48":"#### Analysis","e3504f61":"## <span style=\"color:#473\">4) Find suggestions.<\/span>","f0a23e5b":"#### Analysis","0c7c8739":"## <span style=\"color:#473\">5) Increase interaction.<\/span>","81495a09":"Improve thumbnails and titles:\n\n- Most videos don\u2019t use psychological triggers. So, include someone.\n\n- Use numbers (3,5,7,10) in titles. Avoid (2,4,6) because these may feel \u201cincomplete\u201d.\n\n- Use more action verbs.\n\nUsing emojis is almost scarce. One or two can be more attractive that only plain text.\n\n- Best CTR titles used in the channel are \u201cShould you\u201d, \u201c* you *\u201d, related to beginner\/started guide or related to very specific projects. But in specific projects, people leave when it\u2019s end, try to redirect them to videos with higher subscription rate (see the objective 2 below).\n\n- Try to make a clean thumbnail with text color light (white,yellow,skyblue) over dark.\n\n- Avoid low CTR titles that are about: lives and Q&A.\n\n- Avoid color red in text over dark.\n\n- Don\u2019t put multiple objects that saturate the thumbnail.","02c28a1e":"Every comment here can be converted into suggestion or discarded. Don't take it personal.\n\nI will focus on negative comments.\n- Most positive comments give thanks about the value content<br>\n- I reviewed the top 200 negative sentences and the following list is the recurrent sorted, starting for most frequent:<br>\n1) \"stop with the clickbaity titles and awkward face thumbnails\"<br>\n2) Bad audio\/mic quality.<br>\n3) Information useless or boring.<br>\n4) Errors (Programming,Link to discord not working) <br>\n5) Boring\/Slow speaking.<br>","c8eccdd0":"I put a example, because this is very important. Since, usually the 30%+ of people who watch videos are not suscribed:","1ee9fc11":"## Load","bd669d53":"- The most relative interaction happens when the video is about an interview or with another person.\n\n- The courses recommendations were shared a lot.\n\n- Most liked videos are: videos with numbered titles (4 types, 6 lessons, etc), life and mental health (book recommendations, avoid mistakes) and success study case\/tips.\n\n- The call to action (action verbs) are low. Use more, for example: \u201clearn\u201d, \u201cdiscover\u201d, \u201ccontrol\u201d, \u201ccreate\u201d, \u201cfind\u201d, \u201cteach\u201d, \u201cshows\u201d, \u201cdemonstrates\u201d, \u201cget rid of\u201d, \u201cimagine\u201d, \u201cimprove\u201d, \u201cwant\u201d, \u201cget\u201d, \u201cfulfill\u201d, \u201corder\u201d, \u201corganize\u201d, etc.","87f7c396":"#### Conclusion","7cb8d45e":"When doing short videos, think about doing:\n\n- Expectations vs. Reality. But, warning: this may cause subscriptions lost (2-20 people).\n\n- Use curiosity triggers like \u201cThe Secret...\u201d and talk about something \u201cunique\u201d.\n\n- Use urgency triggers like \u201cWhy Right NOW is a Great Time...\u201d.\n\n- Use the \u201cQuick tip...\u201d titles or similar.","d1e76081":"There isn't bad clickbait","a5c0093f":"<a id=\"111\"><\/a>\n### Q11: What videos produces more relative comments added?","15971c75":"[Return to table of contents](#top)","c93fc482":"- There are little topics covered (Google search shows a lot of intents in data science world that has no link to a YouTube video).\n\n- Expand and merge topics. Talk about a popular \u201cmainstream\u201d topic related to data science, but in thumbnail let very clear that you will talk about machine learning\/analytics or data science. For example: Crypto gets popular, talk about data science applied which people can take advantage of the situation. BUT REMEMBER: Doing this abruptly will cause some subscribers to unsubscribe. Handling a mainstream topic can help a lot to the channel but it will annoy several followers. Do so with caution.","dd2356d2":"#### Analysis","05232d4f":"Now, Let's profile the top 2 clusters","b6b50d14":"#### Conclusion","61fbd51c":"#### Conclusion","30819a57":"<a id=\"2\"><\/a>\n# <p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">LOADING DATA<\/p>\n[Return to table of contents](#top)","eef604ac":"Let's search in google \"Data science,Projects,\" and get some intent search. The \"People also ask\" are recurrent search intents from people that is looking for something specific.","f203ffc1":"## Description\n1) Aggregated Metrics By Video .- This has all the topline metrics from thre channel from its start (around 2015 to Jan 22 2022).<br>\n2) Aggregated Metrics By Video with Country and Subscriber Status - This has the same data as aggregated metrics by video, but it includes dimensions for which country people are viewing from and if the viewers are subscribed to the channel or not.<br>\n3) Video Performance Over Time - This has the daily data from each of my videos.<br>\n4) All Comments - This is all of the comment data gathered from the YouTube API.","55a0541b":"These suggestions are mainly from the sentimental analysis of comments:\n\n- Q&A, channel announcements are not well received.\n\n<hr>\n\nSome users comment that:\n\n- They don\u2019t like the clickbait titles and \u201cawkward\u201d face in thumbnails. Since, show the face in thumbnails is a SEO strategy proven, you probably want to ignore that or change a little the photo strategy.\n\n- Improve the audio\/mic quality.\n\n- Try to bring new information, not the information considered \u201cboring\u201d.\n\n- Speak with a more natural\/faster rhythm.\n\n- Check links to discord (?).","26fb263f":"#### Conclusion","d2eed59c":"- The reviews of data science projects (at least that 3) were not well received.\n- The video: Is Data Science Right For You. Has relatively high dislikes. This is because of angry subs against \"clickbaity\" titles?","194f0bd7":"#### Analysis","a680a320":"<a id=\"101\"><\/a>\n### Q1: What types of video titles and thumbnails drive the most traffic?","e9aa936c":"#### Analysis","56896a30":"Results obtained in google for Data Science:\n\nPeople also ask\n- Is Data Science a good career?\n- Is Data Science hard?\n- Who is eligible for Data Science?\n- Is data science a safe job?\n- Is data science a stressful job?\n- Which job is the richest job?\n- What jobs do most billionaires have?\n\nResults obtained in google for \"Data Science * projects\":\nPeople also ask\n- What projects should I do for data science?\n- How do I start a data analytics project?","b699b846":"<a id=\"104\"><\/a>\n### Q4: Who is the core audience and what are they interested in? (title topic clusters and country analysis)","2d5bf98f":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#15ebe3;font-family:newtimeroman;color:#000;font-size:150%;text-align:center;border-radius:10px 10px;\">TABLE OF CONTENTS<\/p>\n\n* [0. OBJECTIVES and SCOPE](#0)\n* [1. IMPORTING LIBRARIES](#1)\n* [2. LOADING DATA](#2)    \n* [3. EXPLORATORY DATA ANALYSIS](#3)  \n* [4. FINAL CONCLUSIONS and RECOMMENDATIONS](#4)  \n* [5. END](#5)","7776f3d7":"The relation is linear positive correlated. When the channel applied some seo, performance improves. This gives a very special insights because the expected improvement should be better:\n- The best videos are visited by people who want just consume a tutorial and then leave the channel.\n- In this videos we have to redirect to the videos with highest Subscription Rate to \"fish them\". And this should happen in a retention peak (no data yet to check where happen). See Q5.\n- Data Science\/Beginner\/Start and escencially curiosity triggers in the title have some power.\n- Triggers most used: utility and curiosity.\n- Triggers less often: urgency and fear.\n- The mayority of videos don't use deep triggers! only utility general triggers.\n- Exist special ASCII usage in the 25% of videos.\n- The numbers in titles improved CTR.\n- The call to action (action verbs) are low.\n- The use of emojis is almost scarce.\n- Even if the relation final_score x CTR is linear and positive. This doesn't mean that using the SEO improved the CTR, but definitely helps.","9443b39f":"#### Analysis","1a821cb4":"#### Conclusion","c62c3497":"## <span style=\"color:#473\">2) Increase Subscription Ratio.<\/span>","f0f7d6f8":"#### Analysis","b3fb5809":"## <span style=\"color:#473\">3) Increase average watch time and get plain retention","19b85560":"## Questions","28c2479b":"#### Conclusion","b89efd72":"<a id=\"103\"><\/a>\n### Q3: What is the SEO applied and what it's the performance?","11feedaf":"Note: focus in CTR is different than focus on loyalty. I focused on CTR. Kmeans couldn't separate accurately the clusters, but made a great job.\n- High performance clusters (topics of youtube channel): 6,0,2\n- Cluster 6: is about tutorials.\n- Cluster 0: is about data science life: portfolio, degree, daily, learning, etc.\n- Cluster 2: is about job and resume.\n","e7e38b56":"<a id=\"112\"><\/a>\n### Q12: What videos generates more social currency? (shares)","07713e7a":"Seo-Title theory, this is what a title should\/can have for better results.- every \"r\" is optional of course (except r1):\n- r1: Have one or more psychological triggers (curiosity,fear,utility,urgency)\n- r2: Capture the attention with ASCII: +,-,[],(),!,?\n- r3: Break the pattern with respect to other videos of similar subject matter.\n- r4: Numbers usage in title if it can\n- r5: Have action verbs\n- r6: Have emojis 1-2,\n- r7: Selective uppercase (Example: This is what YOU want...)","2cf5a0a4":"People engaged in short video with the topics:\n- Expectations vs. Reality.\n- The Secret...\n- Quick tip of general data science\n- Fundamentals concepts (Data Science, Machine Learning, and AI).\n\nPeople engaged in long video with the topics:\n- 3 Reasons... (Numbers + tips of data science)\n- Things needed to start to do data science.\n- Experience tips (Example: i wish i had known)","1e1f9e33":"We need the labels or tags of videos. Anyway, we can just do clusterization too.","674380f2":"Main clusters profiling:\n- Cluster 0: Fun\/random(?) comment.\n- Cluster 1: Have enumerated lists, people talking about past and present (Example: i started learning x months ago..., Currently i...)","02609c72":"- The keywords are only a few. Is very important to expand this with \"mainstream\" topics. More details in final conclusions and recommendations section.\n- K.J. cover most of the search intents for data science. So, he probably want to solve more search intents of other keywords."}}