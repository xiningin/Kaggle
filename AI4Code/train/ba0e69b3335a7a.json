{"cell_type":{"f538b18f":"code","f0d5cc1a":"code","8992de91":"code","0bffff80":"code","5a240f12":"code","54f566e9":"code","f322b051":"code","88d0df29":"code","fc461a4d":"code","1808fb72":"code","7af98171":"code","2d7916ee":"code","cd6cf2b5":"code","eaab529c":"code","55e37219":"code","10850d2f":"code","c03ced1e":"code","27adadd0":"code","39b8818e":"code","5bc3b42e":"code","b9491b29":"code","c220a5a9":"code","c2482d98":"code","fc0513d5":"code","0dd574aa":"code","d11bf8d5":"code","4e821d79":"code","83d93ef7":"code","c306e4c6":"code","3277500b":"code","0731f713":"code","81ca5d28":"code","14f4b73c":"code","d9134d98":"code","262fd4d8":"code","1adc8f06":"code","6c9757f8":"code","f72555a8":"code","bf66ba3d":"code","73c544f0":"code","3dde8400":"code","2007060e":"code","a4f5f9b3":"code","6623ae29":"code","d1c36e76":"markdown","574a5787":"markdown","a0ac1209":"markdown","6556078b":"markdown","99d76c6c":"markdown","3157c58c":"markdown","a1710e9b":"markdown","d18faaa2":"markdown"},"source":{"f538b18f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f0d5cc1a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8992de91":"train_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-dec-2021\/train.csv\")","0bffff80":"train_df.head()","5a240f12":"train_df.info()","54f566e9":"train_df.Soil_Type1.value_counts()","f322b051":"train_df.isnull().sum().sum()","88d0df29":"train_df.duplicated().sum()","fc461a4d":"train_df.drop(\"Id\", axis=1, inplace=True)","1808fb72":"train_df.Cover_Type.value_counts().plot(kind='barh', fontsize= 15, color='gold')\nplt.xlabel(\"The Cover-Type\")\nplt.ylabel(\"The Count\")\nplt.title(\"The Freq Of Cover Types\", fontsize=20)\nplt.show()","7af98171":"train_df.Cover_Type.value_counts()","2d7916ee":"plt.figure(figsize = (15, 8))\nsns.heatmap(train_df.iloc[:,:10].corr(), cmap=\"coolwarm\")\nplt.title(\"The Correlation Matrix For The Continous Features\")\nplt.show()","cd6cf2b5":"import imblearn\nfrom imblearn.under_sampling import RandomUnderSampler","eaab529c":"X = train_df.drop(\"Cover_Type\", axis=1).values\ny = train_df.Cover_Type.values","55e37219":"X.shape","10850d2f":"y.shape","c03ced1e":"undersample = RandomUnderSampler(sampling_strategy='majority')\nX, y = undersample.fit_resample(X, y)","27adadd0":"from collections import Counter\nprint(Counter(y))","39b8818e":"X.shape","5bc3b42e":"y.shape","b9491b29":"columns = train_df.columns[:-1]\nbalanced_df = pd.DataFrame(X, columns=columns)\nbalanced_df['Cover_Type'] = y","c220a5a9":"balanced_df.head()","c2482d98":"from sklearn.preprocessing import MinMaxScaler\n\ncols = train_df.iloc[:,:10].columns \nscaler = MinMaxScaler()\n\nbalanced_df[cols] = scaler.fit_transform(balanced_df[cols])","fc0513d5":"balanced_df.head()","0dd574aa":"sns.pairplot(balanced_df.iloc[:,:3] , diag_kind='hist')\nplt.show()","d11bf8d5":"sns.pairplot(balanced_df.iloc[:,3:6], diag_kind='hist')\nplt.show()","4e821d79":"sns.pairplot(balanced_df.iloc[:,6:9], diag_kind='hist')\nplt.show()","83d93ef7":"# De-Enocde The Wilderness_Area columns","c306e4c6":"balanced_df['Wilderness_Area'] = balanced_df.iloc[:,10:14].sum(axis=1)","3277500b":"balanced_df.drop(balanced_df.iloc[:,10:14], axis=1, inplace=True)","0731f713":"# De-Enocde The Soil_Type columns","81ca5d28":"balanced_df['Soil_Type'] = balanced_df.iloc[:,10:50].sum(axis=1)","14f4b73c":"balanced_df.drop(balanced_df.iloc[:,10:50], axis=1, inplace=True)","d9134d98":"balanced_df.info()","262fd4d8":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom sklearn.model_selection import train_test_split","1adc8f06":"X = balanced_df.drop(\"Cover_Type\", axis=1).values\ny = balanced_df.Cover_Type.values","6c9757f8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)","f72555a8":"# Model Structure\nmodel = Sequential()\nmodel.add(Dense(256, input_dim = 12, activation = 'relu', kernel_initializer = 'he_normal'))\nmodel.add(Dense(128, activation = 'relu', kernel_initializer = 'he_normal'))\nmodel.add(Dense(8, activation='softmax'))  # the output layer","bf66ba3d":"model.summary()","73c544f0":"# compile the keras model\nmodel.compile(loss='sparse_categorical_crossentropy', optimizer='adam')","3dde8400":"model.fit(X_train, y_train, epochs=20, batch_size=32, verbose=2)","2007060e":"pd.DataFrame(model.history.history).plot()\nplt.xlabel('epochs')","a4f5f9b3":"# evaluate on test set\nfrom sklearn.metrics import accuracy_score\n\nyhat = model.predict(X_test)\nyhat = np.argmax(yhat, axis=-1).astype('int')","6623ae29":"acc = accuracy_score(y_test, yhat)\nprint('Accuracy: %.3f' % acc)","d1c36e76":"# Dimensionality Reduction ","574a5787":"__As we can see the `Soils` columns indicate if the product belongs to this type (1) or not (0)__","a0ac1209":"# Scale Data","6556078b":"# Modelling ","99d76c6c":"# Read The Data","3157c58c":"> `Wrangle` The Data","a1710e9b":"__From The Previous Cells we can see that (Data are `Im_Balanced` and `Not-Scaled`)__","d18faaa2":"# Imbalanced Data"}}