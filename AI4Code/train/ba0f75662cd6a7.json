{"cell_type":{"ee859104":"code","18983f4e":"code","e62ffb06":"code","76cc3f56":"code","a7453315":"code","14b38c86":"code","1f83f39a":"code","0a34f2a0":"code","802f421b":"code","9370882a":"code","d68d30f7":"code","74e730b4":"code","6d70d5f4":"code","4c099c9f":"code","30b31c72":"code","c742419a":"code","498bd803":"code","8570635a":"code","25790b66":"markdown","5f1f8f48":"markdown","6d140dae":"markdown","ba55a779":"markdown","d3985952":"markdown","c9e5d291":"markdown","0dfb1c93":"markdown","81423c3b":"markdown","f5413cda":"markdown","ccda8795":"markdown","7e15f2f9":"markdown","d2b76012":"markdown","ed4439cc":"markdown","a5a2857b":"markdown","c574acbf":"markdown","595186ad":"markdown","689ff771":"markdown","55c2ca80":"markdown","213634ca":"markdown","d676f238":"markdown","9c10b586":"markdown","b4b0fe21":"markdown","63c6fabe":"markdown","305bffa3":"markdown","68adae3b":"markdown","c7f55852":"markdown","16386e73":"markdown","8199234a":"markdown","539edfeb":"markdown","4d5c5327":"markdown","925ecf0b":"markdown","7e1f3d98":"markdown"},"source":{"ee859104":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport plotly.graph_objects as go\n\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)","18983f4e":"data = pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\ndata.drop(columns=['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n                   'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'],\n          axis=1,inplace=True)\ndata.head()","e62ffb06":"data.dtypes","76cc3f56":"af_cnt = data['Attrition_Flag'].value_counts()\ntrace = go.Pie(labels = af_cnt.index, \n               values = af_cnt.values,\n               hoverinfo = 'percent+value+label',\n               textinfo = 'percent',\n               textposition = 'inside',\n               textfont = dict(size=14),\n               title = 'Attrition Flag',\n               titlefont = dict(size=15),\n               hole = 0.5,\n               showlegend = True,\n               marker = dict(line=dict(color='black',width=2)))\nfig = go.Figure(data=[trace])\nfig.update_layout(height=600, width=600)\nfig.show()","a7453315":"gender_cnt = data['Gender'].value_counts()\ntrace = go.Pie(labels = gender_cnt.index, \n               values = gender_cnt.values,\n               hoverinfo = 'percent+value+label',\n               textinfo = 'percent',\n               textposition = 'inside',\n               textfont = dict(size=14),\n               title = 'Gender',\n               titlefont = dict(size=15),\n               hole = 0.5,\n               showlegend = True,\n               marker = dict(line=dict(color='black',width=2)))\nfig = go.Figure(data=[trace])\nfig.update_layout(height=600, width=600)\nfig.show()","14b38c86":"marital_cnt = data['Marital_Status'].value_counts()\ntrace = go.Pie(labels = marital_cnt.index, \n               values = marital_cnt.values,\n               hoverinfo = 'percent+value+label',\n               textinfo = 'percent',\n               textposition = 'inside',\n               textfont = dict(size=14),\n               title = 'Marital Status',\n               titlefont = dict(size=15),\n               hole = 0.5,\n               showlegend = True,\n               marker = dict(line=dict(color='black',width=2)))\nfig = go.Figure(data=[trace])\nfig.update_layout(height=600, width=600)\nfig.show()","1f83f39a":"fig,ax = plt.subplots(figsize=(10,8))\nax.barh(marital_cnt.index,marital_cnt.values,\n        height=0.5, edgecolor='darkgrey',color=sns.color_palette(\"Blues_r\",4))\nax.set_yticklabels(marital_cnt.index,fontsize=15)\nax.set_xticks([])\n\nfor i in ax.patches:\n    ax.text(i.get_width()+.4, i.get_y()+.28,\n            str(i.get_width()), \n            fontsize=15, color='black')\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='x',linestyle='-',alpha=0.4)\nax.invert_yaxis()\nfig.text(0.13, 0.95, 'Marital Status Count of Customers', fontsize=15, fontweight='bold') ","0a34f2a0":"edu_level = ['Uneducated','High School','College',\n             'Graduate','Post-Graduate','Doctorate','Unknown']\nedu_cnt = data['Education_Level'].value_counts().reindex(edu_level)\ncolors = [(0,0,1)]*7\ncolors[3] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.barh(edu_cnt.index,edu_cnt.values,\n        height=0.7, edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_yticklabels(edu_cnt.index,fontsize=15)\nax.set_xticks([])\n\nfor i in ax.patches:\n    #print(i.get_width(),i.get_y())\n    ax.text(i.get_width()+.3, i.get_y()+.38,\n            str(i.get_width()), \n            fontsize=15, color='black')\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='x',linestyle='-',alpha=0.4)\nax.invert_yaxis()\nfig.text(0.13, 0.95, 'Education Level of Customers', fontsize=15, fontweight='bold') ","802f421b":"income_order = ['Less than $40K','$40K - $60K',\n                '$60K - $80K','$80K - $120K','$120K +','Unknown']\nincome_cnt = data['Income_Category'].value_counts(sort=False).reindex(income_order)\ncolors = [(0,0,1)]*6\ncolors[0] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.barh(income_cnt.index,income_cnt.values,\n        height=0.5, edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_yticklabels(income_cnt.index,fontsize=15)\nax.set_xticks([])\n\nfor i in ax.patches:\n    ax.text(i.get_width()+.32, i.get_y()+.28,\n            str(i.get_width()), \n            fontsize=15, color='black')\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='x',linestyle='-',alpha=0.4)\nax.invert_yaxis()\nfig.text(0.13, 0.95, 'Income Category of Customers', fontsize=15, fontweight='bold') ","9370882a":"level_order = ['Blue','Silver','Gold','Platinum']\nlevel_cnt = data['Card_Category'].value_counts(sort=False).reindex(level_order)\ncolors = ['Blue','Silver','Gold','Black']\nfig,ax = plt.subplots(figsize=(10,8))\nax.bar(level_order,level_cnt.values,\n        width=0.4,edgecolor='darkgrey',color=colors, alpha=0.8)\nax.set_xticklabels(level_order,fontsize=15)\n#ax.set_yticks([])\n\nfor g in level_cnt.index:\n    ax.annotate(f\"{level_cnt.loc[g]}\",\n                xy = (g,level_cnt.loc[g]+200),\n                va = 'center',ha='center',fontsize=14)\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='y',linestyle='-',alpha=0.4)\n#fig.text(0.14, 0.95, 'Dependent Count of Customers ', fontsize=16, fontweight='bold')\nax.set_title('Card Category of Customers',fontsize=16,fontweight='bold')","d68d30f7":"dep_cnt = data['Dependent_count'].value_counts(sort=False)\ncolors = [(0,0,1)]*6\ncolors[2] = colors[3] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.bar(['0','1','2','3','4','5'],dep_cnt.values,\n        width=0.6,edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_xticklabels(['0','1','2','3','4','5'],fontsize=15)\n#ax.set_yticks([])\n\nfor g in dep_cnt.index:\n    ax.annotate(f\"{dep_cnt.loc[g]}\",\n                xy = (g,dep_cnt.loc[g]+50),\n                va = 'center',ha='center',fontsize=14)\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='y',linestyle='-',alpha=0.4)\n#fig.text(0.14, 0.95, 'Dependent Count of Customers ', fontsize=16, fontweight='bold')\nax.set_title('Dependent Count of Customers',fontsize=16,fontweight='bold')","74e730b4":"relation_cnt = data['Total_Relationship_Count'].value_counts(sort=False)\ncolors = [(0,0,1)]*6\ncolors[2] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.bar(['1','2','3','4','5','6'],relation_cnt.values,\n        width=0.6,edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_xticklabels(['1','2','3','4','5','6'],fontsize=15)\n#ax.set_yticks([])\n\nfor g in ['1','2','3','4','5','6']:\n    ax.annotate(f\"{relation_cnt.loc[int(g)]}\",\n                xy = (g,relation_cnt.loc[int(g)]+50),\n                va = 'center',ha='center',fontsize=14)\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='y',linestyle='-',alpha=0.4)\n#fig.text(0.14, 0.95, 'Dependent Count of Customers ', fontsize=16, fontweight='bold')\nax.set_title('Total Relationship Count of Customers',fontsize=16,fontweight='bold')","6d70d5f4":"inactive_cnt = data['Months_Inactive_12_mon'].value_counts(sort=False)\ncolors = [(0,0,1)]*7\ncolors[2] = colors[3] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.bar(['0','1','2','3','4','5','6'],inactive_cnt.values,\n        width=0.6,edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_xticklabels(['0','1','2','3','4','5','6'],fontsize=15)\n#ax.set_yticks([])\n\nfor g in ['0','1','2','3','4','5','6']:\n    ax.annotate(f\"{inactive_cnt.loc[int(g)]}\",\n                xy = (g,inactive_cnt.loc[int(g)]+50),\n                va = 'center',ha='center',fontsize=14)\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='y',linestyle='-',alpha=0.4)\n#fig.text(0.14, 0.95, 'Dependent Count of Customers ', fontsize=16, fontweight='bold')\nax.set_title('Inactive Months Count of Customers within 12 Months',fontsize=16,fontweight='bold')","4c099c9f":"contact_cnt = data['Contacts_Count_12_mon'].value_counts(sort=False)\ncolors = [(0,0,1)]*7\ncolors[2] = colors[3] = (1,0,0)\nfig,ax = plt.subplots(figsize=(10,8))\nax.bar(['0','1','2','3','4','5','6'],contact_cnt.values,\n        width=0.6,edgecolor='darkgrey',color=colors, alpha=0.7)\nax.set_xticklabels(['0','1','2','3','4','5','6'],fontsize=15)\n#ax.set_yticks([])\n\nfor g in ['0','1','2','3','4','5','6']:\n    ax.annotate(f\"{contact_cnt.loc[int(g)]}\",\n                xy = (g,contact_cnt.loc[int(g)]+50),\n                va = 'center',ha='center',fontsize=14)\n    \nfor pos in ['left','right','bottom','top']:\n    ax.spines[pos].set_color(None)\n    \nax.grid(axis='y',linestyle='-',alpha=0.4)\n#fig.text(0.14, 0.95, 'Dependent Count of Customers ', fontsize=16, fontweight='bold')\nax.set_title('Contacts Months Count of Customers within 12 Months',fontsize=16,fontweight='bold')","30b31c72":"fig,ax = plt.subplots(nrows=1,ncols=2,figsize=(20,8))\nsns.distplot(data['Customer_Age'],bins=20,kde=True,ax=ax[0])\nfor pos in ['left','right','top']:\n    ax[0].spines[pos].set_color(None)\nax[0].set_yticks([])\nax[0].set_title('Histogram of Customer Age',fontsize=15,fontweight='bold')\n\nax[1].boxplot(data['Customer_Age'])\nfor pos in ['left','right','top','bottom']:\n    ax[1].spines[pos].set_color(None)\nax[1].grid(axis='y')\nax[1].set_xticks([])\nax[1].set_title('Boxplot of Customer Age',fontsize=15,fontweight='bold')","c742419a":"fig,ax = plt.subplots(nrows=1,ncols=2,figsize=(20,8))\nsns.distplot(data['Months_on_book'],bins=20,kde=True,ax=ax[0])\nfor pos in ['left','right','top']:\n    ax[0].spines[pos].set_color(None)\nax[0].set_yticks([])\nax[0].set_title('Histogram of Customer Months_on_book',fontsize=15,fontweight='bold')\n\nax[1].boxplot(data['Months_on_book'])\nfor pos in ['left','right','top','bottom']:\n    ax[1].spines[pos].set_color(None)\nax[1].grid(axis='y')\nax[1].set_xticks([])\nax[1].set_title('Boxplot of Customer Months_on_book',fontsize=15,fontweight='bold')","498bd803":"fig,ax = plt.subplots(nrows=1,ncols=2,figsize=(20,8))\nsns.distplot(data['Credit_Limit'],bins=20,kde=True,ax=ax[0])\nfor pos in ['left','right','top']:\n    ax[0].spines[pos].set_color(None)\nax[0].set_yticks([])\nax[0].set_title('Histogram of Customer Credit Limit',fontsize=15,fontweight='bold')\n\nax[1].boxplot(data['Credit_Limit'])\nfor pos in ['left','right','top','bottom']:\n    ax[1].spines[pos].set_color(None)\nax[1].grid(axis='y')\nax[1].set_xticks([])\nax[1].set_title('Boxplot of Customer Credit Limit',fontsize=15,fontweight='bold')","8570635a":"for col in data.columns[-7:]:\n    fig,ax = plt.subplots(nrows=1,ncols=2,figsize=(10,4))\n    sns.distplot(data[col],bins=20,kde=True,ax=ax[0])\n    for pos in ['left','right','top']:\n        ax[0].spines[pos].set_color(None)\n    ax[0].set_yticks([])\n    ax[0].set_title(col+' Distribution',fontsize=13,fontweight='bold')\n    \n    ax[1].boxplot(data[col])\n    for pos in ['left','right','top','bottom']:\n        ax[1].spines[pos].set_color(None)\n    ax[1].grid(axis='y')\n    ax[1].set_xticks([])\n    ax[1].set_title(col+' Boxplot',fontsize=13,fontweight='bold')","25790b66":"For ordinal data, I prefer to use **bar chart**. Bar chart can show the value counts values without mixing the original order of different features. I always use an unique color to represent the prominent feature value(s), which makes the readers focus more on the specific feature value(s).","5f1f8f48":"For nominal data, pie chart is a good choice if there are no more than 5 differnt feature values. **The legend is sorted by the value counts of different feature values**. When there are more than 5 different features values, bar chart is a good choice.","6d140dae":"In bar charts of visualizing nominal data, I always use deeper and deeper colors with the growth of value counts of feature values while all the colors are in the same color family (In this case, blue is the color family).","ba55a779":"# Nominal Data","d3985952":"When the number of feature values is small, pie chart is more informative.","c9e5d291":"Most of the customers are married or single.","0dfb1c93":"This distribution is very interesting compared with previous features with continuous values. There are two peaks at two sides in this histogram.","81423c3b":"**Continuous data** is a type of numerical data with uncountable elements (e.g. feature 'Customer_Age' in this dataset). In my EDA strategy, I always **visualize them in histogram or boxplot**.","f5413cda":"Qualitative data (also known as categorical data) has two subtypes, which are **nominal** and **ordinal** data. In the figure above, binary data is a special type of nominal data. \n\n**Nominal data** has characteristics similar to that of a noun (e.g. feature 'Marital_Status' in this dataset). In my EDA strategy, I always show the value counts of different feature values **by sorting them based on their value counts**.\n\n**Ordinal data** includes elements that are ranked, ordered or have a rating scale attached (e.g. feature 'Education_Level' in this dataset). In my EDA strategy, I always show the value counts of different feature values **by sorting them based on the ordinal rank of feature values**.","ccda8795":"**Discrete data** is a type of numerical data with countable elements (e.g. feature 'Dependent_Count' in this dataset). In my EDA strategy, since all the discrete data in this dataset are **finite**, I treat them like what I do in showing ordinal data.","7e15f2f9":"# Continuous Data","d2b76012":"From data overview phase, you can figure out the specific data type (attribute) of each feature.","ed4439cc":"As we can see from this data type summary, features with 'float64' and 'int64' dtype are numeric features while features with 'object' dtype are categorical features.","a5a2857b":"Reference:\n1. https:\/\/www.formpl.us\/blog\/categorical-numerical-data\n2. https:\/\/www.geeksforgeeks.org\/understanding-data-attribute-types-qualitative-and-quantitative\/","c574acbf":"If you think my notebook is useful, please upvote it :) . Thanks for your time.","595186ad":"Quantitative data (also known as numeric data) has two subtypes, which are **discrete** and **continuous** data.","689ff771":"# Ordinal Data","55c2ca80":"16.1% of customers churned.","213634ca":"---------------------------------------------------------------------------------------------------------------","d676f238":"Since data in the left features are all like tabular data, I will plot them together.","9c10b586":"# EDA ","b4b0fe21":"In this notebook, I will introduce some strategies of visualizing data of different attributes that I often use for basic EDA.","63c6fabe":"![](https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/Capture-67.png)","305bffa3":"In the detail EDA on Credit Card Customer Churning dataset, I will specify the reasons why I use these strategies.","68adae3b":"Almost all the customers are in level blue.","c7f55852":"It looks like there are no extreme values(outliers).","16386e73":"# Discrete Data","8199234a":"Almost same number of female and male customers ","539edfeb":"As we know, rainbow colors in bar charts may cause the chart less informative. However, under special circumstance, you can use different colors to represent different feature values. For example, the credit card level of customers are originally classified with differenr colors.","4d5c5327":"As I said above, for discrete data in this dataset, I visualize them like what I do in ordinal features.","925ecf0b":"# Data Overview","7e1f3d98":"For continuous data, histogram is a good choice because we can know the distribution of feature values. Meanwhile, with the help of boxplot, you can figure the **outliers** quickly."}}