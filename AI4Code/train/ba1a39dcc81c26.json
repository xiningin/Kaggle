{"cell_type":{"7321da51":"code","ba2bd5dd":"code","aff6b986":"code","d3a555c4":"code","47baec5b":"code","9e050247":"code","63414dcc":"code","07657361":"code","b77e0414":"code","c55ed42d":"code","0d9d9b3f":"code","9b8f5859":"code","785293f3":"code","5a0d29e2":"code","48ce045b":"code","04ff57d0":"code","74f15594":"markdown","81d27ab1":"markdown","0223761f":"markdown"},"source":{"7321da51":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","ba2bd5dd":"from sklearn.datasets import load_breast_cancer  # loading in-built dataset","aff6b986":"cancer = load_breast_cancer()","d3a555c4":"df = pd.DataFrame(cancer['data'],columns=cancer['feature_names'])","47baec5b":"df.head()","9e050247":"df.shape","63414dcc":"df.describe()","07657361":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(df)","b77e0414":"scaled_data = scaler.transform(df)","c55ed42d":"from sklearn.decomposition import PCA\npca = PCA(n_components=2)  # n is the number of dimensions we want after reduction","0d9d9b3f":"pca.fit(scaled_data)","9b8f5859":"x_pca = pca.transform(scaled_data)","785293f3":"scaled_data.shape","5a0d29e2":"x_pca.shape","48ce045b":"x_pca","04ff57d0":"# plotting updated data with reduced dimensions\n\nplt.figure(figsize=(8,6))\nplt.scatter(x_pca[:,0],x_pca[:,1],c=cancer['target'],cmap='plasma')\nplt.xlabel('First principal component')\nplt.ylabel('Second Principal Component')","74f15594":"# Reduction to 2D\n\nPlotting after the reduction of high dimensional dataset\n\n![](https:\/\/365datascience.com\/resources\/blog\/2019-12-pca2-1024x348.png)","81d27ab1":"# Principal Component Analysis\n\n**Principal Component Analysis (PCA) is an unsupervised statistical technique algorithm. PCA is a \u201cdimensionality reduction\u201d method. It reduces the number of variables that are correlated to each other into fewer independent variables without losing the essence of these variables. It provides an overview of linear relationships between inputs and variables.**\n\n## When to use PCA?\n\n- Whenever we want to ensure that variables in data are independent to each other.\n- When we want to reduce the number of variables in a data set with many variables in it.\n- When we want to interpret data and variable selection out of it.\n\n\n![](https:\/\/devopedia.org\/images\/article\/139\/4543.1548137789.jpg)\n","0223761f":"## Why Scaling ?\n\n**It is necessary to scale data before performing PCA. The PCA calculates a new projection of your data set. If you scale your data, all variables have the same standard deviation, thus all variables have the same weight and your PCA calculates relevant axis**"}}