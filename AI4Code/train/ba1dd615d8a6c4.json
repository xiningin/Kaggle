{"cell_type":{"d0595bb7":"code","bace2cb0":"code","e8e8c0b7":"code","56b37693":"code","c6012715":"code","90a976cd":"code","6a152272":"code","f80514a5":"code","f5be3612":"code","ad005238":"code","6099c318":"code","147526b3":"code","4eef58e6":"code","09790cec":"code","d7f4243e":"code","47a9e9ea":"markdown","4bafe41d":"markdown","e3729326":"markdown","2405b97a":"markdown","02012c1f":"markdown","071ca4e2":"markdown","7d6bfa47":"markdown","b957fcea":"markdown","a2f65ab9":"markdown","c40bb430":"markdown","637e4964":"markdown","62f67fa7":"markdown","64aa9cda":"markdown","b8cae5f7":"markdown","d6275edc":"markdown","d794f83c":"markdown"},"source":{"d0595bb7":"# Disable warning\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))","bace2cb0":"FAST_RUN=False\nbatch_size=32\nepochs=100\nif FAST_RUN:\n    epochs=1","e8e8c0b7":"train_data = pd.read_csv(\"..\/input\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/test.csv\")","56b37693":"print(train_data.columns)","c6012715":"def show_image(train_image, label, index):\n    image_shaped = train_image.values.reshape(28,28)\n    plt.subplot(3, 6, index+1)\n    plt.imshow(image_shaped, cmap=plt.cm.gray)\n    plt.title(label)\n\n\nplt.figure(figsize=(18, 8))\nsample_image = train_data.sample(18).reset_index(drop=True)\nfor index, row in sample_image.iterrows():\n    label = row['label']\n    image_pixels = row.drop('label')\n    show_image(image_pixels, label, index)\nplt.tight_layout()","90a976cd":"from sklearn.model_selection import train_test_split\nfrom keras.utils import to_categorical\n\nx = train_data.drop(columns=['label']).values.reshape(train_data.shape[0],28,28,1)\ny = to_categorical(train_data['label'])\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1)","6a152272":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(\n    rotation_range=10,\n    rescale=1.\/255,\n    shear_range=0.1,\n    zoom_range=0.1,\n    width_shift_range=0.1,\n    height_shift_range=0.1\n)\ntrain_datagen.fit(x_train)\ntrain_generator = train_datagen.flow(\n    x_train,\n    y_train,\n    batch_size=batch_size\n)\n\nvalidation_datagen = ImageDataGenerator(rescale=1.\/255)\ntrain_datagen.fit(x_test)\nvalidation_generator = validation_datagen.flow(\n    x_test,\n    y_test\n    \n)","f80514a5":"from keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, Flatten, MaxPooling2D\n\nmodel = Sequential()\nmodel.add(Conv2D(64, kernel_size=3, activation='relu', input_shape=(28,28,1)))\nmodel.add(Conv2D(32, kernel_size=3, activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Flatten())\nmodel.add(Dense(10, activation='softmax'))","f5be3612":"model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])","ad005238":"from keras.callbacks import EarlyStopping, ModelCheckpoint, ReduceLROnPlateau\n\ncallbacks = [\n    EarlyStopping(patience=10, verbose=1),\n    ReduceLROnPlateau(factor=0.1, patience=3, min_lr=0.00001, verbose=1),\n    ModelCheckpoint('model.h5', verbose=1, save_best_only=True, save_weights_only=True)\n]","6099c318":"model.fit_generator(\n    train_generator, \n    steps_per_epoch=len(x_train) \/\/ batch_size, \n    validation_data=validation_generator,\n    validation_steps=len(x_test) \/\/ batch_size,\n    epochs=epochs,\n    callbacks=callbacks\n)","147526b3":"x_test_recaled = (x_test.astype(\"float32\") \/ 255)\nscores = model.evaluate(x_test_recaled, y_test, verbose=0)\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))\nprint(\"%s: %.2f%%\" % (model.metrics_names[0], scores[0]*100))","4eef58e6":"test_digit_data = test_data.values.reshape(test_data.shape[0],28,28,1).astype(\"float32\") \/ 255\npredictions = model.predict(test_digit_data)\nresults = np.argmax(predictions, axis = 1) ","09790cec":"plt.figure(figsize=(18, 8))\nsample_test = test_data.head(18)\nfor index, image_pixels in sample_test.iterrows():\n    label = results[index]\n    show_image(image_pixels, label, index)\nplt.tight_layout()","d7f4243e":"submissions = pd.read_csv(\"..\/input\/sample_submission.csv\")\nsubmissions['Label'] = results\nsubmissions.to_csv('submission.csv', index = False)","47a9e9ea":"# Import libraries","4bafe41d":"# Data exploration","e3729326":"# Compile Model","2405b97a":"**Show Image**\nThis is how 784 pixels of each row form to be images","02012c1f":"Next step check [Dog And Cat Image Classification](https:\/\/www.kaggle.com\/uysimty\/keras-cnn-dog-or-cat-classification)","071ca4e2":"# Fit model","7d6bfa47":"### Create submission file","b957fcea":"# Data Preparation\nWe split data for test and train","a2f65ab9":"# Import data\nData input train and test data","c40bb430":"# Callbacks","637e4964":"# Build CNN Model","62f67fa7":"We can see that data have label and other pixels columns. Which label present the digit and pixel present pixel of image","64aa9cda":"### Set how is our prediction","b8cae5f7":"# Prediction","d6275edc":"# Evaluate Model","d794f83c":"**Columns**"}}