{"cell_type":{"8fb7ef45":"code","a9eeddfc":"code","d3fcc70d":"code","28cb1210":"code","f1b295de":"code","686bd8b7":"code","46b1bac5":"code","46f290c1":"code","6a631fad":"code","ce70965f":"code","f001957e":"code","8932b983":"code","a7d3e6ca":"code","2013b52a":"code","65e0fc5d":"code","6afe6c35":"code","35e4aa1c":"code","2f3d2849":"markdown","3c44eccd":"markdown","ab1ed606":"markdown","118d8036":"markdown","242b0393":"markdown","50888e8f":"markdown","ce814ae2":"markdown","32d3b49f":"markdown","0e529d07":"markdown","9b7af080":"markdown","d7e0949b":"markdown"},"source":{"8fb7ef45":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","a9eeddfc":"df = pd.read_csv('\/kaggle\/input\/netflix-movies-and-tv-shows-2021\/netflixData.csv')\ndf.head()","d3fcc70d":"df.drop_duplicates(inplace=True)","28cb1210":"df.isnull().sum()","f1b295de":"df = df.drop(['Director','Date Added'],axis=1)\ndf = df.dropna(subset=['Cast','Production Country','Release Date','Rating','Duration','Imdb Score'])","686bd8b7":"df.isnull().sum()","46b1bac5":"contentType_count = df['Content Type'].value_counts()\ncontentType_count.plot(kind='pie', autopct='%1.1f%%', legend=True, explode=(0, 0.1), \n                        title = \"Content Type on Netflix\", colors=[\"#b20710\", \"#f5f5f1\"],\n                        figsize=(10,20))","46f290c1":"df['Release Date'] = df['Release Date'].round().astype(int)\ncontent_added = df.groupby([\"Content Type\",\"Release Date\"])[\"Release Date\"].count().unstack('Content Type')\ncontent_added = content_added.sort_values(ascending=True, by='Release Date')\ncontent_added.plot(kind='bar',color=[\"#221f1f\",\"#e50914\"],figsize=(20, 10), title = \"Release Year\").set_ylabel(\"Count of Movie\/ TV Show\")","6a631fad":"df['Production Country'].head(20)","ce70965f":"# There are multi countries in a single column so we create another column that will store only the first country.\ndf['First Production Country'] = df['Production Country'].str.split(',', expand=True)[0]\ndf.head()","f001957e":"country_grouped = df.groupby([\"Content Type\",\"First Production Country\"])[\"First Production Country\"].count().unstack('Content Type')\ncountry_grouped.columns =['Movie', 'TV Show']\ncountry_grouped['Total'] = country_grouped[\"Movie\"] + country_grouped[\"TV Show\"]\ncountry_grouped = country_grouped.sort_values(ascending=False, by='Total')\ncountry_grouped[:10].plot(kind='bar',y=[\"Movie\",\"TV Show\"],color=[\"#221f1f\",\"#e50914\"],figsize=(10, 3)).set_ylabel(\"Count of Movie\/ TV Show\")\nplt.xlabel(\"Production Country\")","8932b983":"rating_grouped = df.groupby([\"Content Type\",\"Rating\"])[\"Rating\"].count().unstack('Content Type')\nrating_grouped.columns =['Movie', 'TV Show']\nrating_grouped['TV Show'] = rating_grouped['TV Show'].fillna(0)\nrating_grouped['Total'] = rating_grouped[\"Movie\"] + rating_grouped[\"TV Show\"]\nrating_grouped = rating_grouped.sort_values(ascending=False, by='Total')\nrating_grouped.plot(kind='bar',y=[\"Movie\",\"TV Show\"],color=[\"#221f1f\",\"#e50914\"],figsize=(10, 6)).set_ylabel(\"Count of Movie\/ TV Show\")","a7d3e6ca":"df_topRated = df.loc[df[\"Imdb Score\"] >= '9.0\/10', [\"Title\",\"Imdb Score\",\"Content Type\"]]\ndf_topRated = df_topRated.sort_values(ascending=False, by='Imdb Score').reset_index(drop=True)\ndf_topRated","2013b52a":"df_lowestRated = df.loc[df[\"Imdb Score\"] < '2.0\/10', [\"Title\",\"Imdb Score\",\"Content Type\"]]\ndf_lowestRated = df_lowestRated.sort_values(ascending=True, by='Imdb Score').reset_index(drop=True)\ndf_lowestRated","65e0fc5d":"genres = \", \".join(df['Genres']).split(\", \")\ngenres\n\nfrom collections import Counter\ncnt = Counter()\nfor genre in genres:\n    cnt[genre] += 1\n\ntopGenres = cnt.most_common(20)\ndf_topGenres = pd.DataFrame (topGenres, columns = ['Genres','Genres Count'])\ndf_topGenres.sort_values(ascending=True, by='Genres Count', inplace=True)\ndf_topGenres.plot.barh(x='Genres',color=[\"#221f1f\",\"#e50914\"],width=0.7,legend=False, figsize=(10, 10))","6afe6c35":"cast_grouped = df.groupby([\"Content Type\",\"Cast\"])[\"Cast\"].count().unstack('Content Type')\ncast_grouped.columns =['Movie', 'TV Show']\ncast_grouped_movie = cast_grouped[cast_grouped[\"Movie\"].notnull()].iloc[:,:1]\ncast_grouped_movie.reset_index(level='Cast', inplace=True)\n\nmovieCast = \", \".join(cast_grouped_movie['Cast']).split(\", \")\nmovieCast\n\ncnt_movieCast = Counter()\n\nfor cast in movieCast:\n    cnt_movieCast[cast] += 1\n\nmovieCast = cnt_movieCast.most_common(20)\ndf_movieCast = pd.DataFrame (movieCast, columns = ['Actor','Actor Count'])\ndf_movieCast.sort_values(ascending=False, by='Actor Count', inplace=True)\ndf_movieCast.plot(kind='bar',x='Actor',color=[\"#221f1f\",\"#e50914\"],figsize=(10, 7))","35e4aa1c":"cast_grouped_tv = cast_grouped[cast_grouped[\"TV Show\"].notnull()].iloc[:,:1]\ncast_grouped_tv.reset_index(level='Cast', inplace=True)\n\ntvCast = \", \".join(cast_grouped_tv['Cast']).split(\", \")\ntvCast\n\ncnt_tvCast = Counter()\n\nfor cast in tvCast:\n    cnt_tvCast[cast] += 1\n\ntvCast = cnt_tvCast.most_common(20)\ndf_tvCast = pd.DataFrame (tvCast, columns = ['Actor','Actor Count'])\ndf_tvCast.sort_values(ascending=False, by='Actor Count', inplace=True)\ndf_tvCast.plot(kind='bar',x='Actor',color=[\"#221f1f\",\"#e50914\"],figsize=(10, 7))","2f3d2849":"## 6. Top Genres","3c44eccd":"### Top TV Actor","ab1ed606":"### Top Movie Actor","118d8036":"## 2. Original Release Year","242b0393":"## 3. Content From Different Countries","50888e8f":"## 1. Content Type on Netflix","ce814ae2":"### Top Rated Content (Imdb Score over 9.0)\n#### Breaking Bad is the #1 ranked TV show, while David Attenborough: A Life on Our Planet is the #1 ranked Movie","32d3b49f":"### Lowest Rated Content (Imdb Score below 2.0)\n#### Content with Imdb Score under 2.0 are all movies. Aerials is the worst rated movie.","0e529d07":"## 4. Ratings","9b7af080":"## 5. Imdb Score","d7e0949b":"## 7. Cast"}}