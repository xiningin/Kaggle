{"cell_type":{"c6f84ca9":"code","13c31cf4":"code","1e019fe4":"code","8778891a":"code","a7656b8e":"code","b80f2064":"code","04c2c7e1":"code","a8484e16":"code","ef7b39f7":"code","540ffd17":"code","732cd6ea":"code","6e630ac4":"code","24c42c6d":"code","e42d4401":"code","d0b91c9c":"code","526b0df6":"code","c285d100":"code","e3afd36d":"code","29603ad6":"code","8f08bae7":"code","b621ca09":"code","3aea20e9":"code","0358553f":"code","66d6a232":"code","69f35852":"markdown","e11369ef":"markdown","59590afe":"markdown","ea5e9a86":"markdown","c694ed19":"markdown","4314fe58":"markdown","3f64717e":"markdown","038c1b06":"markdown","d7f29d50":"markdown","1f192505":"markdown","19a849e1":"markdown","3281d92f":"markdown","69301af9":"markdown","5c0c29a2":"markdown","a6e59c5c":"markdown","f2ee4f02":"markdown","b79fcf73":"markdown","cff42534":"markdown","2120e1aa":"markdown","c6954f7a":"markdown","ed847472":"markdown","08bc509f":"markdown"},"source":{"c6f84ca9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","13c31cf4":"customers = pd.read_csv('..\/input\/ecommerce-customers\/Ecommerce Customers.csv')","1e019fe4":"customers.head()","8778891a":"customers.describe()","a7656b8e":"customers.info()","b80f2064":"sns.set_palette(\"GnBu_d\")\nsns.set_style('whitegrid')","04c2c7e1":"# More time on site, more money spent.\nsns.jointplot(x='Time on Website',y='Yearly Amount Spent',data=customers)","a8484e16":"sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=customers)","ef7b39f7":"sns.jointplot(x='Time on App',y='Length of Membership',kind='hex',data=customers)","540ffd17":"sns.pairplot(customers)","732cd6ea":"sns.lmplot(x='Length of Membership',y='Yearly Amount Spent',data=customers)","6e630ac4":"X = customers[['Avg. Session Length', 'Time on App','Time on Website', 'Length of Membership']]","24c42c6d":"y = customers['Yearly Amount Spent']","e42d4401":"from sklearn.model_selection import train_test_split","d0b91c9c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","526b0df6":"from sklearn.linear_model import LinearRegression","c285d100":"lm = LinearRegression()","e3afd36d":"lm.fit(X_train,y_train)","29603ad6":"# The coefficients\nprint('Coefficients: \\n', lm.coef_)","8f08bae7":"predictions = lm.predict(X_test)","b621ca09":"plt.scatter(y_test,predictions)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')","3aea20e9":"from sklearn import metrics\n\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","0358553f":"sns.distplot((y_test-predictions),bins=50);","66d6a232":"coeffecients = pd.DataFrame(lm.coef_,X.columns)\ncoeffecients.columns = ['Coeffecient']\ncoeffecients","69f35852":"## Predicting Test Data\nNow that we have fit our model, let's evaluate its performance by predicting off the test values!\n\n** Using lm.predict() to predict off the X_test set of the data.**","e11369ef":"** Create a scatterplot of the real test values versus the predicted values. **","59590afe":"## Evaluating the Model\n\nLet's evaluate our model performance by calculating the residual sum of squares and the explained variance score (R^2).\n\n** Calculating the Mean Absolute Error, Mean Squared Error, and the Root Mean Squared Error. **","ea5e9a86":"** Train\/fit lm on the training data.**","c694ed19":"## Imports","4314fe58":"## Residuals\n\nWe have gotten a very good model with a good fit. Let's quickly explore the residuals to make sure everything was okay with our data. \n\n**Ploting a histogram of the residuals and make sure it looks normally distributed. Using either seaborn distplot.**","3f64717e":"Using model_selection.train_test_split from sklearn to split the data into training and testing sets. Set test_size=0.3 and random_state=101","038c1b06":"##### Let's explore these types of relationships across the entire data set. Using pairplot to recreate the plot below.","d7f29d50":"**Creating an instance of a LinearRegression() model named lm.**","1f192505":"**Do you think the company should focus more on their mobile app or on their website?**","19a849e1":"## Training the Model\n\nNow its time to train our model on our training data!\n\n** Importing LinearRegression from sklearn.linear_model **","3281d92f":"\nThis is tricky, there are two ways to think about this: Develop the Website to catch up to the performance of the mobile app, or develop the app more since that is what is working better. This sort of answer really depends on the other factors going on at the company, you would probably want to explore the relationship between Length of Membership and the App or the Website before coming to a conclusion!\n","69301af9":"## Exploratory Data Analysis\n### Let's explore the data!","5c0c29a2":"**Printing out the coefficients of the model**","a6e59c5c":"## Get the Data\n\nWe'll work with the Ecommerce Customers csv file from the company. It has Customer info, suchas Email, Address, and their color Avatar. Then it also has numerical value columns:\n\n* Avg. Session Length: Average session of in-store style advice sessions.\n* Time on App: Average time spent on App in minutes\n* Time on Website: Average time spent on Website in minutes\n* Length of Membership: How many years the customer has been a member. ","f2ee4f02":"### Based off this plot what looks to be the most correlated feature with Yearly Amount Spent is \n#### *Length of Membership*","b79fcf73":"## Training and Testing Data\n\nNow that we've explored the data a bit, let's go ahead and split the data into training and testing sets.\n** Set a variable X equal to the numerical features of the customers and a variable y equal to the \"Yearly Amount Spent\" column. **","cff42534":"# Linear Regression Project","2120e1aa":"** How can you interpret these coefficients? **","c6954f7a":"### Creating a linear model plot (using seaborn's lmplot) of Yearly Amount Spent vs. Length of Membership.","ed847472":"Interpreting the coefficients:\n\n- Holding all other features fixed, a 1 unit increase in **Avg. Session Length** is associated with an **increase of 25.98 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Time on App** is associated with an **increase of 38.59 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Time on Website** is associated with an **increase of 0.19 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Length of Membership** is associated with an **increase of 61.27 total dollars spent**.","08bc509f":"## Conclusion\nWe still want to figure out the answer to the original question, do we focus our efforst on mobile app or website development? Or maybe that doesn't even really matter, and Membership Time is what is really important.  Let's see if we can interpret the coefficients at all to get an idea.\n\n** Recreating the dataframe below. **"}}