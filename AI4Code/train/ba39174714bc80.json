{"cell_type":{"b2259f34":"code","81486cad":"code","6710db1b":"code","4bef80fe":"code","8ad841fa":"code","2c53907a":"code","b85f0d7e":"code","d7cd31ef":"code","d4dc5a50":"code","26319cc5":"markdown","b17a610a":"markdown","33c88253":"markdown","e5496513":"markdown","66faa61c":"markdown","5147b812":"markdown","01305d20":"markdown"},"source":{"b2259f34":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81486cad":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndata = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")","6710db1b":"#Examine few rows of data\nprint(data.head())","4bef80fe":"summary = data.describe()\nsummary = summary.transpose()\nprint(summary.head())","8ad841fa":"#data types\nprint(data.dtypes)","2c53907a":"#number of nulls based on column\nprint(data.isnull().sum())","b85f0d7e":"#-display unique values in each column\nfor col in data:\n    print(col ,\":\", data[col].nunique())","d7cd31ef":"fig, (ax1,ax2,ax3) =  plt.subplots(1 ,3 ,figsize = (25,10))\nplt.suptitle('Count Plots')\nsns.countplot(y= 'Category', data = data, ax = ax1)\nsns.countplot( 'Type', data = data, ax = ax2)\nsns.countplot('Content Rating', data = data, ax = ax3)\nplt.show()","d4dc5a50":"#number of paind and not paid app count\nprint(data[['App']].groupby(data['Type']).count())\n# To add more function-> data[['App']].groupby(data['Type']).agg(['mean','count'])","26319cc5":"Summary will return us numeric information about numeric fields(average, mean,std, ect..)\nNOT: You dont have to transpose.","b17a610a":"We can see which column has most empty field. If column is not critical rather than removing rows we can remove column.\nIn case we have very few empty fields there are several thing we can use (Mean substitution,Regression imputation,Last observation carried forward,\nMaximum likelihood,Expectation-Maximization,Multiple imputation,Sensitivity analysis).","33c88253":"check number of unique values for each column\nso we can decide to create fast graphs without editing dataset","e5496513":"Referance:https:\/\/www.kaggle.com\/mdp1990\/google-play-app-store-eda-data-visualisation","66faa61c":"Not: u can use set_option to see all columns, normally displays column based on your terminal size\n#pd.set_option('display.max_columns', 13)\n\nwe can gain general insight about columns. diffrence between Genres and Category is much clearer.","5147b812":"Graphs\n* Category types\n* Type types and count of each type\n* content rating","01305d20":"Allows us to clearly see the datatype of columns, so we can decide how to proceed\nwith data formatting(Eg: price column should be float if there is only 1 currency,\nInstalls should be integer if its not given a range, ect...)"}}