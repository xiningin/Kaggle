{"cell_type":{"e84ad918":"code","307dab81":"code","74637c0a":"code","5c5e3d78":"code","1a7264d1":"code","be407982":"code","4e24c880":"code","e8f3745d":"code","b6470737":"code","eda9f180":"code","e378a2c9":"code","4f654e1e":"code","88150692":"code","32a89af6":"markdown","320ef375":"markdown","82ae29c3":"markdown","fceda996":"markdown","9ff74445":"markdown","1dd026be":"markdown","1d180cde":"markdown","38ef9c6e":"markdown","328fb400":"markdown","e1a69bc9":"markdown","9fbc8330":"markdown","399a4bed":"markdown"},"source":{"e84ad918":"import numpy as np # linear algebra\nimport matplotlib.pyplot as plt\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","307dab81":"from subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","74637c0a":"dataset = pd.read_csv('..\/input\/voice.csv')\ndataset.head()","5c5e3d78":"dataset.describe()","1a7264d1":"dataset.corr()","be407982":"num_columns = dataset.shape[1]\nx = dataset.iloc[:,:20].values\ny = dataset.iloc[:,20].values","4e24c880":"from sklearn.preprocessing import LabelEncoder, OneHotEncoder\ngender_labels = LabelEncoder()\ny = gender_labels.fit_transform(y)\n# lets see which is 0 and which is 1\nprint(list(gender_labels.inverse_transform([0,1])))","e8f3745d":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 0)","b6470737":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","eda9f180":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n\nclassifier = Sequential()\nclassifier.add(Dense(units = 11, activation = 'relu', kernel_initializer = 'uniform', input_shape = (20,)))\nclassifier.add(Dense(units = 11, activation = 'relu', kernel_initializer = 'uniform'))\nclassifier.add(Dense(units = 1, activation = 'sigmoid', kernel_initializer = 'uniform', input_shape = (20,)))\nclassifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nclassifier.fit(x_train, y_train, batch_size = 10, epochs = 100)","e378a2c9":"y_pred = classifier.predict(x_test)\ny_pred = (y_pred > 0.5)","4f654e1e":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","88150692":"import matplotlib.pyplot as plt\nplt.matshow(cm)\nplt.colorbar()","32a89af6":"These variables are between 0 and 1, but we normalize them so that they have comparable weightings.","320ef375":"All are numeric columns, and the final column gives us the labels (male or female) so lets lazily determine which column that is and use that to split our dataset into the independent and dependent variables:","82ae29c3":"A more fashionable plot, recall that 0 is female and 1 is male.","fceda996":"The one non numeric category (labels) needs to be encoded using dummy variables,when we assign integer values to gender (binary variable in this case), it becomes a dummy variable.","9ff74445":"The neural network is now built and trained, the weights are set, now we can evaluate the generalization performance of the neural network on the testing dataset.  We then use the threshold of 0.50 to convert output probilities from the sigmoid activation function into binary predictions for gender.","1dd026be":"Creating an artificial neural network using keras, by building the layers two hidden layers and an output layer, then train the neural network on the training set.","1d180cde":"Generate testing and training datasets","38ef9c6e":"Results on the testing dataset are fantastic the confusion matrix shows that the neural net predicts gender on the testing dataset with 98.3% accuracy.","328fb400":"Evaluate the performance of the neural network using a confusion matrix.","e1a69bc9":"Input data files are available in the \"..\/input\/\" directory.\nFor example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory","9fbc8330":"This Python 3 environment comes with many helpful analytics libraries installed\nIt is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\nFor example, here's several helpful packages to load in ","399a4bed":"This kernel will use an artificial neural net to classify voices by gender.  The neural net will have two hidden layers, will use a rectifier activation function for each node in the hidden layers, and use a logistic activation function to recieve probabilities of each class in the output layer and will use stochastic gradient descent to minimize the objective function (cross entropy).  We begin by reading the dataset and do some elementary data exploration."}}