{"cell_type":{"144117ed":"code","10824482":"code","2296998f":"code","7d584e03":"code","3bc98230":"code","f6045888":"code","ad69665e":"code","b7b69031":"code","1354f7b5":"code","4c937606":"code","a34b6038":"code","abc86e0a":"code","0db319c9":"code","0151d97f":"code","bd5f689b":"code","bf7f788f":"code","87a341d8":"code","4a4edc6b":"code","e25765ec":"code","79417e41":"code","facec5f4":"code","0899c7ec":"code","cf6261bb":"markdown","6d325d44":"markdown","b0bd5aac":"markdown","d1190006":"markdown","2c63a0cc":"markdown","6f39fea9":"markdown","c863e56e":"markdown","22ce4a66":"markdown","22d4d438":"markdown","e4ef3c31":"markdown","e069d881":"markdown","aa4040f8":"markdown","bf21bdc1":"markdown","bb38f04c":"markdown","41ab1a48":"markdown","35a846aa":"markdown","e3731086":"markdown","ec54d8b3":"markdown","bf6106e4":"markdown","f1b752f4":"markdown"},"source":{"144117ed":"import sqlite3\nimport pandas as pd\nimport os","10824482":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2296998f":"conn = sqlite3.connect('ubuntu_data.db')\nc = conn.cursor()","7d584e03":"c.execute('''\nCREATE TABLE dialogs (\n    folder INTEGER,\n    dialogueID TEXT,\n    date TEXT,\n    sender TEXT,\n    receiver TEXT,\n    msg TEXT);\n''')","3bc98230":"c.execute('''\nCREATE TABLE dialogs2 (\n    folder INTEGER,\n    dialogueID TEXT,\n    date TEXT,\n    sender TEXT,\n    receiver TEXT,\n    msg TEXT);\n''')","f6045888":"# load the data into a Pandas DataFrame\ndata1 = pd.read_csv('\/kaggle\/input\/ubuntu-dialogue-corpus\/Ubuntu-dialogue-corpus\/dialogueText.csv')\n\n# rename columns\ndata1.rename(columns=\n{\n\"from\": \"sender\",\n\"to\": \"receiver\",\n\"text\": 'msg'\n}, inplace=True)\n\n# write the data to a sqlite table\ndata1.to_sql('dialogs', conn, if_exists='append', index=False)","ad69665e":"data1.drop(data1.index, inplace=True)\nprint(data1)","b7b69031":"# load the data into a Pandas DataFrame\ndata2 = pd.read_csv('\/kaggle\/input\/ubuntu-dialogue-corpus\/Ubuntu-dialogue-corpus\/dialogueText_196.csv')\n\n# rename bad name columns\ndata2.rename(columns=\n{\n\"from\": \"sender\",\n\"to\": \"receiver\",\n\"text\": 'msg'\n}, inplace=True)\n\n# write the data to a sqlite table\ndata2.to_sql('dialogs2', conn, if_exists='append', index=False)\n\n#clears the Pandas table\ndata2.drop(data2.index, inplace=True)","1354f7b5":"c.execute('''\nSELECT * \nFROM dialogs\nLIMIT 10;\n''').fetchall()","4c937606":"#print the quantity of messages\n\nprint('Number of messages = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM dialogs;\n''').fetchall()[0][0]\n))\n\n#print the quantity of folders\n\nprint('Number of folders = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT folder) \nFROM dialogs;\n''').fetchall()[0][0]\n))\n\n#print the quantity of dialog IDs\n\nprint('Number of dialog IDs = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT dialogueID) \nFROM dialogs;\n''').fetchall()[0][0]\n))","a34b6038":"c.execute('''\nSELECT sender, receiver, dialogueID, COUNT(msg)\nFROM dialogs\nWHERE receiver <> 'None' AND sender = 'ActionParsnip1'\nGROUP BY dialogueID, sender, receiver\nORDER BY receiver ASC, COUNT(msg) DESC;\n''').fetchall()","abc86e0a":"c.execute('''\nSELECT * \nFROM dialogs2\nLIMIT 10;\n''').fetchall()","0db319c9":"#print the quantity of messages\n\nprint('Number of messages = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM dialogs2;\n''').fetchall()[0][0]\n))\n\n#print the quantity of folders\n\nprint('Number of folders = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT folder) \nFROM dialogs2;\n''').fetchall()[0][0]\n))\n\n#print the quantity of dialog IDs\n\nprint('Number of dialog IDs = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT dialogueID) \nFROM dialogs2;\n''').fetchall()[0][0]\n))","0151d97f":"c.execute('''\nSELECT COUNT (DISTINCT folder), dialogueID \nFROM dialogs2\nGROUP BY dialogueID\nHAVING COUNT (DISTINCT folder) > 1\nORDER BY COUNT (DISTINCT folder) DESC;\n\n''').fetchall()","bd5f689b":"c.execute('''CREATE TABLE alldialogs (\n    folder INTEGER,\n    dialogueID TEXT,\n    date TEXT,\n    sender TEXT,\n    receiver TEXT,\n    msg TEXT);''')\n\nc.execute('''\nINSERT INTO alldialogs\nSELECT *\nFROM(\nSELECT folder, dialogueID, date, sender, receiver, msg\n    FROM dialogs2\nUNION \nSELECT folder, dialogueID, date, sender, receiver, msg\n    FROM dialogs\n)  \n''').fetchall()","bf7f788f":"#print the quantity of messages\n\nprint('Number of messages = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM alldialogs;\n''').fetchall()[0][0]\n))\n\n#print the quantity of folders\n\nprint('Number of folders = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT folder) \nFROM alldialogs;\n''').fetchall()[0][0]\n))\n\n#print the quantity of dialog IDs\n\nprint('Number of dialog IDs = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT dialogueID) \nFROM alldialogs;\n''').fetchall()[0][0]\n))","87a341d8":"c.execute('''\nCREATE TABLE dialogdummy AS SELECT * FROM dialogs;\n''').fetchall()\n\nc.execute('''\nINSERT INTO dialogdummy\nSELECT *\nFROM dialogs2;  \n''').fetchall()","4a4edc6b":"#print the quantity of messages\n\nprint('Number of messages = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM dialogdummy;\n''').fetchall()[0][0]\n))\n\n#print the quantity of folders\n\nprint('Number of folders = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT folder) \nFROM dialogdummy;\n''').fetchall()[0][0]\n))\n\n#print the quantity of dialog IDs\n\nprint('Number of dialog IDs = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT dialogueID) \nFROM dialogdummy;\n''').fetchall()[0][0]\n))","e25765ec":"#print the quantity of messages\n\nprint('Total number of messages in dialogdummy = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM dialogdummy;\n''').fetchall()[0][0]\n))\n\n#print the quantity of messages\n\nprint('Total number of messages in alldialogs = {}'.format(\nc.execute('''\nSELECT COUNT (msg) \nFROM alldialogs;\n''').fetchall()[0][0]\n))\n\n#print the quantity of messages\n\nprint('Number of distinct messages in dialogdummy = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT msg) \nFROM dialogdummy;\n''').fetchall()[0][0]\n))\n\n#print the quantity of messages\n\nprint('Number of distinct messages in alldialogs  = {}'.format(\nc.execute('''\nSELECT COUNT (DISTINCT msg) \nFROM alldialogs;\n''').fetchall()[0][0]\n))","79417e41":"c.execute('''\nDROP TABLE dialogdummy\n''')","facec5f4":"#c.execute('''\n#DROP TABLE dialogs\n#''')\n\n#c.execute('''\n#DROP TABLE dialogs2\n#''')","0899c7ec":"clients = pd.read_sql('''\nSELECT *\nFROM alldialogs\nORDER BY dialogueID ASC;\n''', conn)\n\nclients.to_csv('\/kaggle\/working\/results.csv', index=False)","cf6261bb":"In the next exploration we select one user at random *ActionParnisp1* and check the number of messages they have exchanged with each user different than *None* in each of the dialogs they appear.","6d325d44":"Let's repeat the same exploration with the table *dialogs2*.","b0bd5aac":"Let's explore the database using SQLite.","d1190006":"Interestingly enough, this second set of messages has more than one folder.\n\nLet's verify if messages identified with a dialog ID are present in more than one folder.","2c63a0cc":"In the next code window we will merge both of the tables *dialogs* and *dialogs2* into a third table *alldialogs*.\n\nIt was chosen to use an UNION to do this merging because, in the case there is repetition of values, we don't want to bring this repetition to the final result (and it would happen in case we used the INSERT INTO method for both tables). So we make an UNION and INSERT INTO an empty table.\n\nFor a detailed explanation on the different methods, refer to the site below:\n\n[https:\/\/www.sqlitetutorial.net\/sqlite-union\/](https:\/\/www.sqlitetutorial.net\/sqlite-union\/)","6f39fea9":"But don't take my word for it! Let's use the INSERT INTO method and satisfy your Data Scientist curiosity.\n\nWe will create a dialogdummy table, make the measurements, and compare the results:","c863e56e":"If you wanted to get rid of the first two tables, you would uncomment the code below an run it.","22ce4a66":"Now let's create a connector for the SQLite3.","22d4d438":"Let's do the same \"measuring\" of the resultant database:","e4ef3c31":"Suppose you ran all the queries you wanted to, merging and concatenating tables, grouping columns and etc. Now you want to export the resulting database back to an csv file. You can do it following the codes in the window below:","e069d881":"The next line of code repeats the process for the second table *data2*:","aa4040f8":"Now we don't need the Pandas table *data1* anymore, let's clean it up - and confirm it is empty.","bf21bdc1":"Let's verify the number of distinct messages, folders and dialog IDs:","bb38f04c":"You can see that the number of messages for *dialogdummy* table is greater than the number for *alldialogs* (10250300 > 9187170).","41ab1a48":"First of all, let's load the Pandas and SQLite3 packages, to support our data exploration. We will also load the OS package to support us on finding where the files are located.","35a846aa":"Even though the total number of messages is higher for the *dialogdummy* table (created by a pure INSERT INTO), the number of distinct messages is the same between both tables, suggesting that the INSERT INTO method passed repeated content.\n\nLet's delete the *dialogdummy* table and move on.","e3731086":"Now let's use pandas method *read_csv* to read the source files and the method *to_sql* to export it to our SQL database. I have also renamed the columns to avoid issues with reserved words (such as *TEXT*).","ec54d8b3":"With all the preparations done, let's write our first SQL query. For that we have to use the SQL connector we have created.\n\nLet's check 10 of the entries to have an idea of what our database looks like.","bf6106e4":"Now let's create the SQL tables. For the purposes of this notebook, two tables will be created. In case you want to work with all .csv files, just repeat the process for the third table \/ file.","f1b752f4":"Let's locate the .csv files:"}}