{"cell_type":{"33f8ceb8":"code","3e1c5370":"code","7567f8a0":"code","2a8fb047":"code","ba324398":"code","d690ca3d":"code","c64fbeea":"code","96116794":"code","ffa87dd8":"code","f1313478":"code","643719ea":"code","e589d813":"code","1e9c6efa":"code","42f6c7ec":"code","fde6ba10":"code","14fbf557":"code","155aa255":"markdown","98f5a5d7":"markdown","47564a97":"markdown","b7ec7d4e":"markdown","26fff4bb":"markdown","946e7a91":"markdown","d12cd79a":"markdown"},"source":{"33f8ceb8":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMSEhUSEhIVFRUVEBUQFxISEA8PFRIQFRUWFhUVFxUYHSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OFxAQGC0dHx0tKysrKystLS0rLS0tLS0tKysrLS0tLS0tLS0tKy0rKy0tLSs3Ny0tLS03Ny0tKy0tLf\/AABEIAKgBKwMBIgACEQEDEQH\/xAAbAAABBQEBAAAAAAAAAAAAAAAFAAIDBAYBB\/\/EAEYQAAIBAgMFBQILBQcDBQAAAAECAAMRBBIhBQYxQVETImFxgZGhBxQjMkJSYrGywdEkM3Jz8BVjkpOi4fEWQ4RTVHSCg\/\/EABkBAAMBAQEAAAAAAAAAAAAAAAABAgMEBf\/EACcRAAICAQQBBAIDAQAAAAAAAAABAhEDBBIhMRMiMkFRFGFCcYEF\/9oADAMBAAIRAxEAPwDyCKKKbnOKdnIoAOinBHGMTEFjrRmaK8BUEcC\/38LS7VUW06Slg9BLS1OXKOyWhgfQiR31jnYRtIwFQ4UmPIyZMOeY9stYV4RUKw1APnGKgWthoW16DlLFNL8z6iOxGBH0br4gwfh6hUkFmuOdrgxohqgg2H\/q0YcPbmPWPo4s8xfxAkwZW4ew6RiKTAc2nR4D1Mm+LHoJILDxPhEMhXDk6kybs7Cw4R3mfScNZRGJjPiw8Y4UyOYjlqxprDnKRjNDXpg8becgfDAfSlslOcqYgDkfbGYNMgdeYk9DGMvzXK+A5yAGJkvBoSbQsVjXc6sTaMp1CdANeZiaj\/VpBTOUyei0kw5RFrCXKbQfhqtxfnLKtKM1EupViaqJVBjrySqJ0aTprKYMnpvAKLiUJOKYlelWk4riQaI8oFEzpAidyYlWTS+Dvt\/I0iOWlJFYTjmA7b6GkgSMmIiKA0qFFFLeDpX16RDJcKTbUeRvYydn05SImRVG90ZLJWjqca7j3XtH0dYxDjiNbD1PSWsPjaYNibHrxMpVqFl08YzD4ewIIFzzIvbxhYqNTQqqwuDcdRKG0sFqGXraSbO0UAcB75bbUWgHaKtOhp\/vaRCqp00vwsTLY07pHLrxguuLMfvvylWTQQpLpqwPgDI3rW4SmFk3Z6am0GyYxadtjWcmc1+iDfrbSSUj4hR1Ms06IPGpfw4QQ2UaaMTq49dITw45HUTpCjTKPUXvLCIOXulIykrGLSH1R7JMMMpGo90dSXUiShYNkKK+QdX2WOIg+ultJpFS+glLHbMJ1HHpBP7JlBXwBFjKtC4uIao7NUfOb0EmXBJG2JRoBYaplAHXjClJCeEZidk2BdWvbWxEn2Va4BPFfffhM91Gnjskp4YmWFwJhAKFkFXFCTvb6K8aj2V\/i9pFUNoq+LlGpWvLVmMml0WDVnO1Mq54u1lUZNsyOWMZo+oZCZmz1IqxXjkeMikmhZAvGNTkavaTJVgIhMuYBtSPC8janecpoRw9sAotO3H2SECT4aizX8BE6a26QFRDWq5QLcb6yWjVJHeFuh5GMqUs3obyW1tPy4RhRYvp6SMHWTdqSALAgc5DoOJgSE8K2ktq0BYKtmN9bXtqOMKo8YmS1SoJcnlaCWr5iSf6Eu4jDF1uOIg+noe8PThAVky1gOAizk6sfSRvUQa3PlKleuW4aCAdklfE6\/kJEtdgbgmcpU5YFOCbE6Qd2Ni+1GRuIhQ0bDSZbZ1YrUBHlDQxJuRyvKRhJSv9BCgt\/MaSxklPBVgWPmZeNQW0jKXQ6nYamVajs58J06xy6RWKmKlQA5SwtMCMDTjVBJdspJIZjcpUqDaABh3B0I48YbNQdIx6oHT2QUPsHOuiKmzWu54StiMdyX2yltPalzkX1MpipeWooyk2y41aMNWV80WaUYsmLxZpDmivGTRnCZyIzk5j2DsU5OwAU6DOTsAJKdW00u7GHo1qq06rFQxy5lGYhuWnnMtaF913IxdAda6ffIyXtdFQa3Kzd7d3VpYSk1RarNawsUAB1y8fWY9cP3jpznoO\/Tj4vVA5MvHl8oJjaJXiT6dZz6PJKcLkzbUwjGdRLmwd30xBZXYrlTNdQDe5A5mFP+iKLf8Aeqf4F\/WO3NqXqVNLfJj8QjN68fiKT00o1cgKMzWVWubgDjMcuTK8+yDrg2hDGsW6SHV9xqSU2cVql1UtYonIecw7MtrJ3iR848oeO1MaylTiDYggg001B9IJfCZAAOnGdmCORJ73Zx5nB1tQd3R2BRxOZGrMjqM2UIGzL1Fzxlvend34pTWorl1LZCSoGW\/A6eyHPg\/2Xlomsw7zt3euQf1eE0NPaGGrKvAPUoj+NDa\/tE4p6qcczp+lVZ0RwRljVrlnn2FOktUN3WxR+TBBHF+AA8ekoYPNm7O3ezdnb7V8s9WprTweGu2i01zMebOef5Ts1Oo8aSjy30cuDDubcuEjLYT4OqQHylQsedhf3yrtP4OhxoOL\/VcEA\/pK2O3gxldsyVOwp37qKFZivViefhJMBvDiaJHbVO1pXsxKgOg6i3Gc23VJb7X9HQpYG9pj8XhHoMadRCrC+h+8dRNqNwlNEVhXbWl2lsg6XtfnBe8u26ONqIlNHsl71iMpK9FB1Ino6J+xqBe3xcgdfmmGbPkjCDqm2LFhg5SXaPEU+cLdf9ps93N3\/jIqHPlyMBbKDfS\/WZylglspFRTwuCCCJv8A4PdErE\/XU\/6Z06nJLHiuPZhhhGeSn0DMBsJfjL4c1D3EDlgoub20teGKu7iL\/wB0\/wCAfrOYA22jXP8Adge5ZHvZi6wdFpVMmYMWOQNe1hON580pxjF9o6VhxRg5NdMgxWzFQE9oTYE\/NHIecFIwsCOkhrHFEEGuLEW\/dLwlnCbMdl4gKvdLHn5TtxOcE3llwc2WMJtLEuSB62mkizEyzWwuVS6kPlFzblJE2Q1WilQVkQOuaxVtNZp+Rjq7MXp8l1QKxOLVeJ1grE41m8o7aeG7Kq1MsGKgHMOBuJVtN4yUlaOecXF0ytWTW8dRflJXW+kqtppB8ckrlUXLzsbhu9LtOjaVZm1yQJTvJhSEkjTCx7TITs7aK05z1Dk6BO2nQIxHLTuWPCx4WAiMLCW7a\/tdD+en3ykFhLd5P2mh\/OT7xJn7WOPuRvvhAf8AZ6\/mv4xPOqWKI5z1De\/A9ulWkjAFiBduF1IuPcZlKW4lU8KtL2tPP0WaEINSdcnbqsU5STii\/wDB7ic1Sr\/KH4xNVjdp4agVFdkUspy5lDGy8be2Zvc\/ZZw+IrIzKxFNFJTh84H84W2lsx69RGULZaZWzG2pI4eyZ51CWo5dKuy8W5YeFbTINt7eoVqXY0HUs7qDlQA5L3JBt4QT\/Zy1HSmNCxCjne\/P2Qjjd366qSnZrZSxYnUCN+DTZ5q1HxL3IQZFJ1GZuJ9BOqOTHixPbK6OacJ5JrcqNJvFWbDYJhQQu\/Z9kiopYgnTNYe2APgwo16LVKT0qiqyhwzKygOOt+sObc32w+FrGi4cuACezW4F+RtB4+E7DA\/Mr+RQ29844xyvFJbL3c2btx3p7ugdtvADD7TpVDolSor+GbgffNB8IRvhgORrpm8r\/rJN+MGMTgxVp\/OQCuh525iUNgbRp4vD9lU1uApDG5BH9XBi3tqGR\/x4YlFXKP3yCdj0VaoO0IVFF2LHKD0F5oEwez2Ni9K50t2oOvQawTj9zXbuLlqKNQCbEDxlnYO5lOk61aioCjXCKL2YcyZ058kZrdGdfoyxw28ONk+8W7uGoYatWSkAypcG50miwCA4Rb\/+2v8A6TMf8IO2g1sMjXLWZwOCoOvnwhTc7awrURRc6qnZHy4D2ic+SORY4ylzyax275KP0ef7Lopa7dSLes3u5tZWWrlAsHUG3XLAmL3JrKStNlK8AWNrDlfrNNsDZS4SjkLX1Ls3VudvAD7ptqs8J4tqfLMsGGUZ21wCcLibbTrp\/dK\/4RLe3tpUaWU1nVMxOXNa\/jaBN3q\/a42tiQO6wZFPVVKybfTZD4lqeTKAoNy1\/nGYTivLBTdcG8G9j2q+QbtHeCkRalWViWC2Fr5b3JtGbQxL1cMRSJJzZWCmxKgnML9SYPfdRwCe0p6Ang3KCcLia1A5qel9SGF0ble3KdcccXFeOVtP5MJTkptzVJqg1udhnRqlRlK0yuXKbi7DUkA8LLfWXsRUoPg6fxhytO4IsSDe5y8OVpl8btnEVgVZgqnQhBlJHQnpIcRj6jUUoEJkTLYhSG0HW\/jK8EpNSfHJPmjFbU77L4oU2zNRFkzHLc3JXxkVSiRHUGyKP4oYwxVxrPRjwkjyZyttgFaZMkq4AlbzRDZg4rIqtO3GDkNRfZmcO2UwoGuLyntKjlNxzkWHxFtIkVKuy7UeQGpGu142WZcmftOzsUwPREBHCNEcIAOEeBGiSqIwHKsKbCrmhVWsEDlLkKxsubgCfv8ASDkEP7sYs066WUNdwhVhcEE2\/ORk9rKgvUiapvfXJPyFLjf9436QjQ3ixNgewpkW\/wDUYflCu+a01oPlpoGuuoUAjvgQLhFsq+U5NPjw5oblE6c+TLje1yO4HaFWmalQIrVKjFirMQoBPXwtO4nerEUgGNKl0Aztr7oe3dC5nuFPcFrgHXMBLNephlsavZLmGmfKL+Uz1GTEsm1wbdFYY5JQ3KVGNr\/CJXZGpnD07MpX961xceUWw9+KuFopQpUKZC8WZ2BYnW9rc9JrcXiMAab5Th82Q2tl42mH3L3bbGvckpSW2d+Z0+av2pWN4XjbcaS7smfkUlTtlKpi2qVnrVbZ6jlm8AeQ8hYSd6YM9aw2zsDgqdytJB9erYsfHXnGf2jgMR3Fai9+QygnyiWuS9sHRL0zfb5MPgt9cRRorh1oU3RVKZmdgSp8LcoDplwe0Q9m1\/om4sTfKfrCa3e7dkUF7akDkBsy8Sl+Y6iFvg\/VHoMHpq1qhHeQX4eMp5sUcbnFWn2Lx5HNJvoyWE3wxNPQqrcrq+W\/oZ3F74Yp1OVUpD6xPaN7OE3+PbAqSrmgjDQg5AR5zKb44zDCheg1EsHUjJYmwMzxyxuSrG+S5b65kjGUXtdixZmNyxNyT5\/lLGExr03z03ysBbqCPtDnPT8FhVrUkLU01QXORRe4nn+8exGwtYpxRu8jdRzXzE2x6mGVvG0Z5MMsaUky4u\/GIUWakDyutTQ+hjau1sVjh2TFadMnvBTdmHQty9JBu7TVsXRUgEByLEXB0N7ibXe6mlBaRRVBauFJCgaWky8WPKoqPI478kG76AOIqnB0l7FVJUFcrGw1\/wCIK\/6vxJOtGlYn65\/SejYx6eUnIhsL6qLeJuZm6tLD1SR8iTxsCl5zvU45yuWNujaODJFcSAr7TrsP3CagjSo3PnwkVKhZQD0sRxhLFUMmoBy8OvCcwNAVGsTZQMxI6crGduGeFQc4dfJx5oZpTUJf4Z7GbKB1Xj0lD+zWHK89BqY6lSBIyU04Ava7H7zKgr0qylkKtx1XiCJC10b9jr7KehlXvV\/RkThGtrpO03KQvXxBNwRqNCPGUKlDNO6PqVo8+S2Ovkmw+1raS42LRxr7oEq4EyvlZTKSFuvov4zDXFibr16QMcG6kgAm3McCIQ+OHLb0lvBVL385RKtAygDwIN\/KS9nDgt0jrL9X3QCjzyKNnRMT0BwjhOAR4gA5RJkkQkimMRMkJbHPy1L+av4hBawjsf8Af0v5q\/iEmftZUO0bzfNb0HPin4xAdJraTS72rfDNf66D\/WJliNT5zk\/56rG1+zfWu5oN7vv33\/gH4hKW8uxHxTUsgQhKbDvG2rEfpJthnVrfVH4xINrbYq0copIr3DMSxYWAt+swzKf5PoVujXEo+D1PiwRitz6lCk1WqKQRbfSuSTwA0m\/3ZoLh8IthYBDVbx0vPPdr7fr4qmtKoiKocOchYkka21m22TiVrYYIG1aiabDobFeMnVeR44+RfPwGDZvex3weebWx1TF1Wr1dQbiml9ETlYdTLFLd3EWDChU4ZlZU1HQgyvhk7JwtVT3DZlHPKbaX5aTVYj4SzoFwri1lAzrrbS1p15JShFLHG0YRipSbnKitjsTtSqi0qi1FpqoU5admqAc2M13weNem+biKhB5EWHOW6eKZqQepdCVzEXJy3F7QN8H+IvTqMOBr1DfqpY2nBPI54ZenbVHTs25F6rsG7x7k18Riq1ZUp5Xe6lm1tYDp4TN7b3XfCKGqdmCxIAVszGw48JqNub6YmlXqUkpUmVGsGZmBOl5mNubWq4txUrIqZEKqqEka8TrOzB5moqVUc+VY1dPk9Q2ZXyYNXHFaWb2LeVK\/Z7TwgZNGtdSeNOrbVTHUQfif\/jnT\/wCsw+5+3ThqovpRqAKwH0DyecEcMmpTj3FnTKaTSl00N3cDU8ZTVhZ1rZT4Gxmt3+q92j4Yge2WNsbHVq9LFUrXVxnA+kljZvEi8Hb+VL06X\/yF1tL8yy5YP5rkhQ2Ql9F7eN7Yar40T77TzBcGg1C2Omo7pHrPQd4K96FRf7oj85hAeHlOrQr0P+zPVN7k19Gi2LjWZClQ5spsGP0kPXxEtbKYK7UmB1Xun0JA9hMWxcEVpXYWZzm8Qv0fzPrFSw\/bVay6mxRO7e4ZV1II4WvMVBSnkguEauTjCEn2hYjY\/avn0NlygNey9ZTxmyqiZghyZrZmp63A8eUtpiMQl7BKwHduTkbTkSNCYR2XjWq5kekabLbQnMCD0MrflxR9STiJwx5HadMzuHwioLDXnqSSTJ1pnofZCa4UJUdSNRZh\/C3AeksmjPUxzuKkujx8uKpNNgF8OTylXF4QEdDNFjEGU24wHUa8uyIxYJbBEcxO07pxl2oZWqMOcCqLFOsp52lkP9sQJW1GhlIu\/UxktAQRwjY4TI7h4jhGCOEAJAZIpkIMepjEWFhXdyg1TE0lUa9qp8gCLmCqCX8oRw1dUGnEggkMRx00I1EUla4BOnbPV9sUKdYFWU5Lg2+aTlNxe3iIKrbJo6fJa+LPMNh0R+LVP81\/1k\/9nD69T\/Mf9ZwR0eSKqMzsepxv+Nmp2KEavWSkhUU1CnUm9iC3PrO1cGM2YoTpl1zcOf3TNph7LkBYDmQxBN+NyDc8Ik2WD9Op\/mP+svJpJSkpKVOiYaiKi1JcBytsejlY9lrlJ4v+sD7IxzYe2e+R9b\/VPUeHWcq4Ckg1aoT07Vz7dYLx+KJ05DT\/AGlx07cHGcrsh5VuUoKjZvSoYgAsAwI+chv65hr6GT7O2NhaTB1W7Dgz3fL7dJ5mAQbqzLz7rEXkimpUOQ1ajcrF2t7pitLNKt\/Bq9RB8uPJst7t5AQaFBrsdGZSDlU8deGaEdxARhmI5VCo8Zk32eq0wqi1unMyiyHhmZQOSsyjXnoeM1lpU8WxPsxWf17mei1dg0Kjs9RGLMbk5m48IO3k2ZRoYcvTp2YEDNdjxNucxS0f7yp\/mP8ArOdifruR0Lsw9QTaRj02SDVz4RU82OSdR5PWKY\/ZB1NA\/hnleGFrA8xGupJ1d+lg7D3XtaSoNBaaYcPjtt9szy5PIlXwa\/dXa1vkXY3t3Cbm46eYnN76hZE0NhWTjfrMu4BF9R4gkEHwI4So1LX5ztrexdmA9DM\/w0sm9Pg1\/IuG19m92rQzDKQSGUXABlfA7Mp0+92YHiwva38UxLUCdWqOP\/0f9dI1qF9MzkfaqNb2XkrRyVpTqy3qYurj0bDam8CIClMipWtplN1p\/ac8\/ACO2NXNCkpubE52b7R45jxsRfWY+gFTRRzufGbKjikCgEi2UC2nCbrSxUHH7+TCWqe9P6CVNqT95Ta+ptwPqNDLlGslJSWYBeNzz8yfumYrYCixzU3ZOfcYqJyjsxCbuWqW4do5YezhMVo51TlwW9XDtLkv7Nq9oz1tQGsEBvfIPpG\/Uk+0S+zSuhA8OVhJLztUapI5vc3JjHgDGIVYjlxENV3lDEUsw1lIl0A61SVKlWWcfh2Xyg2+spIxY5qkjLRVBrGyiQMBO2lrsQZz4vJ2s6PIiCK8m+LRfF\/GLaxeSP2RgxwMd8XneytzhTK3xOq56yVWkOUdZ0GFDtMuUqpHOE8LtC3GBkF5Zpp4wpibSNBSximObH9IFVgOckOKAF4UG6+i3isZbjxMGYgEMb9ZDja+YreI4o2sbHS14h0zpEJbGo8XPkIHD30E0eFAVQPD3xIC3I\/iatpe06rSQNGIgOzbc5Qq07ceMMJmZgoNuZPHTwlyvsmm2pJ4dRENIy2WK0v41aaHKtj9rn69ZUY\/89B4RDod2hHdHLifGRO3VvQfrGO3IcJHAGxxYchfzkTsTxksYyykiHIjVo9qoHG\/tjGEfRTMSPCMnssUcSU7wYleevCHKOIqcV1Fr2mbRMpyngfvhvYtewXwJB8o0FUE6OOB0Ohlnt4F2u9mzLpJKNe6m0dWNNos1sRcx6PKFO5MvIsT4EuxtVL8YExmzzckQ\/aVq4sYIUkBRhMwtzEHuLEiHz3Sx+xeA31JPjKIoECqYu3Mk7KMZRDku4s4cQY01zOMRGlpNs0UV9HTVM4XMaWnCZLZaj+iQPHrVlbNHAxWG0uJXJ4SatmU5SeV5QRtRCW0h81vQwti2oYrnneKpUk+NFqdP1lImAx7nNO06HViJGplrD0ifKFBZbwdJQbr7TzhJHlSjSlyjRjEWaAzHKOPGWvijdL+lo7AUghB4n7h0hlao5RNjUQbgkyk5tCTp5CUNtbQNyqmWto1bPAOP1a8BN0U6jX8fGSIesbTWPvaAmx4WNKiNLxpqwEPvGMYztI13jsW1sa7RUnsdIxjOQK28E71L285ewr5Vvf6V4Loi5lyo1haUmQ0TYvE5hLOBqG1uoglzCuz1JGkBBPDpLYAEgpsFHjIqle8TVlLgkrYnkJAWuR5zgUmdrOtMXPHpDoKsH7Te2nMgQXeSYmsWJJ\/oSC8ZNAt695EzmKKS5M0UUNJnLxRRFnCZyKKIYgI8LORRibJFSHlw\/aIFHMA+oiilJGTkxm0nWwQfR4+doPyGKKU0RFljD4e5hWlTAnYpBtQ\/tgIY2dbJfr4RRQBslXDnU+MkRysUUZm5Mr7UcFbiB8Ubi\/pFFChMHq8ReKKBREzRt4opLNEjsUUUQxpjSZyKMCfBr3pLWRs3eBHncaTsUpGTH0MOWPD\/jrC9I2Fh\/zFFGhE9GmTyllKAGpiiiY0Q4nEhOHH3CA8XWLHrFFACowjMsUUZJ\/\/2Q==',width=400,height=400)","3e1c5370":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7567f8a0":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# dataset.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('\/kaggle\/input\/league-of-legends-ranked-games\/others_tiers.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'others_tiers.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","2a8fb047":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRbQqy7kQ8l2i4i_Vle5WARXh6SZBrE87DM_eqMmIyY2dsIqvqI',width=400,height=400)","ba324398":"df.head()","d690ca3d":"df.dtypes","c64fbeea":"sns.distplot(df[\"win\"].apply(lambda x: x**4))\nplt.show()","96116794":"#codes from PSVishnu @psvishnu\nnum = df.select_dtypes ( include = \"number\" )","ffa87dd8":"#codes from PSVishnu @psvishnu\ncounter = 1\nplt.figure(figsize=(15,18))\nfor col in num.columns:\n    if np.abs(df [col].skew ( )) > 1 and df[col].nunique() < 10:\n        plt.subplot(5,3,counter)\n        counter += 1\n        df [col].value_counts().plot.bar()\n        plt.xticks(rotation = 45)\n        plt.title(f'{col}\\n(skewness {round(df [ col ].skew ( ),2)})')\n\nplt.tight_layout(pad = 1.0, w_pad = 1.0, h_pad = 1.0)\nplt.show ( )","f1313478":"%%time\n# > 10 sec\ncounter = 1\ntruly_conti = []\nplt.figure(figsize=(18,40))\nfor i in num.columns:\n    if np.abs(df [ i ].skew ( )) > 1 and df[i].nunique() > 10:\n        plt.subplot(20,3,counter)\n        counter += 1\n        truly_conti.append(i)\n        sns.distplot ( df [ i ] )\n        plt.title(f'{i} (skewness {round(df [ i ].skew ( ),1)})')\n        plt.xticks(rotation = 45)\nplt.tight_layout()\nplt.show ( )","643719ea":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTllWUDaU2Cl6NW_5M6ll-EUnkI0FnnaZZLVgWRoQUaAL_tHJhD',width=400,height=400)","e589d813":"plt.figure(figsize=(18,3))\nsns.boxenplot(data=df.loc[:,truly_conti[0]],orient='h')\nplt.title(truly_conti[0])\nplt.show()","1e9c6efa":"Legends = [\n    'win','first_blood','first_tower','first_inhibitor','first_baron','deaths_bottom_duo_carry_team_2'\n]","42f6c7ec":"sns.pairplot(data=df,diag_kind='kde',vars=Legends,hue='win')\nplt.show()","fde6ba10":"sub = pd.read_csv('\/kaggle\/input\/league-of-legends-ranked-games\/others_tiers.csv', delimiter=',', nrows = nRowsRead)\nsub.to_csv('sub.csv', index = False)","14fbf557":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQZP7a4Y4KCcJk9V4RKF2qUNzGrnaprfe-E8uE2SBYvDgKT9jmn',width=400,height=400)","155aa255":"Kaggle Notebook Runner:Mar\u00edlia Prata  @mpwolke","98f5a5d7":"It's Gold! It doesn't matter if that boxenplot isn't good. ","47564a97":"Image express.co.uk","b7ec7d4e":"Image esportefera.com.br","26fff4bb":"Image me.me","946e7a91":"Outplay, Outthink\nWhether you're playing Solo or Co-op with friends, League of Legends is a highly competitive, fast paced action-strategy game designed for those who crave a hard fought victory.https:\/\/play.euw.leagueoflegends.com\/en_GB","d12cd79a":"Image propmark.com.br"}}