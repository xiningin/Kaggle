{"cell_type":{"38573dd9":"code","e1d3af0d":"code","86dc28a9":"code","765057fc":"code","810fbe82":"code","f5e98d3a":"code","3094c75a":"code","80b6cb35":"code","97bf67c6":"code","9b8a047e":"code","a953ee88":"code","4093bba6":"code","2be9534a":"code","d52524ea":"code","36a8cebe":"code","d9cfa107":"code","f3cbece0":"code","a10b8109":"code","9a3dc570":"markdown","6b390052":"markdown","e4a5397d":"markdown","f929b6a2":"markdown","5c4fafa5":"markdown","ca2ea381":"markdown","7fdc8e1d":"markdown","4009ae36":"markdown","5c7eb71c":"markdown","78109e1a":"markdown","59989a95":"markdown"},"source":{"38573dd9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1d3af0d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","86dc28a9":"df=pd.read_csv('..\/input\/advertising\/Advertising.csv')","765057fc":"df.head()","810fbe82":"df.shape","f5e98d3a":"df.info()","3094c75a":"sns.pairplot(df , diag_kind='kde')","80b6cb35":"df.corr()","97bf67c6":"X=df.drop('sales', axis=1)\ny=df['sales']","9b8a047e":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n","a953ee88":"from sklearn.linear_model import LinearRegression\n\nmodel=LinearRegression()\n\nmodel.fit(X_train , y_train)","4093bba6":"y_pred = model.predict(X_test)","2be9534a":"\nfrom sklearn import metrics\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)","d52524ea":"pd.DataFrame([MAE,MSE,RMSE] ,index=['MAE','MSE','RMSE'],columns=['metrics'])","36a8cebe":"test_Residuals =y_test- y_pred","d9cfa107":"sns.scatterplot(x=y_test , y=y_pred)\nplt.xlabel('y_Test')\nplt.ylabel('y_pred')","f3cbece0":"sns.distplot(test_Residuals , bins =25 , kde = True)","a10b8109":"sns.scatterplot(x=y_test , y=test_Residuals)\nplt.axhline(y=0 , color='r' , ls='--')","9a3dc570":"### Step 6: Split the Dataset to Train & Test","6b390052":"creat DataFrame","e4a5397d":"### Step4: Exploratory Data Analysis","f929b6a2":"### \nStep2: Import the Data","5c4fafa5":"### Step9: Evalutaing the Model","ca2ea381":"### Step7: Train the Model","7fdc8e1d":"### Step5: Determine the Features & Target Variable\n","4009ae36":"****Step8: Predicting Test Data\n****\n","5c7eb71c":"### Step1: Import  necessary ","78109e1a":"### Step3: Data overview\n","59989a95":"### Step10: Residuals\n"}}