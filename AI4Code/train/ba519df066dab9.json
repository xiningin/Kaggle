{"cell_type":{"76c04be7":"code","9c30c9a5":"code","c72ded18":"code","d163af3d":"code","f2e45c2b":"code","c06383f8":"code","aa75125c":"code","9f987b5c":"code","cd11fcb8":"code","e185291b":"code","abab5a45":"code","258e4c96":"code","831d8f50":"code","d5d052d4":"code","263f9458":"code","0011cb58":"code","d502609f":"code","809cd1df":"code","c6d6fdb7":"code","0f714999":"code","d0cd5eb8":"markdown"},"source":{"76c04be7":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\nnetflix.head()","9c30c9a5":"netflix=netflix[['Date','Close']]\nnetflix.head()","c72ded18":"netflix.info()","d163af3d":"!pip install pycaret-ts-alpha","f2e45c2b":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","c06383f8":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","aa75125c":"netflix = netflix.asfreq('d')\nnetflix.index","9f987b5c":"netflix.head()","cd11fcb8":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","e185291b":"data=netflix.Close\ndata","abab5a45":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","258e4c96":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","831d8f50":"## Create a model manually\nmodel = exp.create_model(\"arima\")\nmodel","d5d052d4":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","263f9458":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","0011cb58":"tuned_model = exp.tune_model(model,optimize = 'RMSE')\ntuned_model","d502609f":"exp.predict_model(tuned_model)","809cd1df":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","c6d6fdb7":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","0f714999":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","d0cd5eb8":"# "}}