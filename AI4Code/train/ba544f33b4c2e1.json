{"cell_type":{"8a4609ad":"code","64da3011":"code","08935dfd":"code","9e581d2a":"code","de407ef7":"code","f2ace6d7":"code","92484da6":"code","0f22af8d":"code","ec56c7ef":"code","2e453f29":"code","f21bff99":"code","6461d7b6":"code","491ecbef":"code","9d25c03e":"code","838ad564":"code","4a0efac7":"code","2516ef98":"code","8056b911":"code","9975dcce":"code","5e1444ba":"code","24fdc94b":"code","e8ff3164":"code","6075d7f9":"code","a3cede13":"code","7a1cb70f":"code","5e2d6dbf":"code","84bb318b":"code","dcf64ef8":"code","74b5334f":"code","b1774196":"code","47a21de1":"code","b71426dd":"code","b0338667":"code","d77cf52a":"code","7bdbb358":"code","c0d06791":"code","b16dcf8d":"code","a52d6e53":"code","fecbad0c":"code","59166b09":"code","e89e1805":"code","6106ddc2":"code","db2ada14":"code","f26fb725":"code","c4c4e017":"code","cae71af7":"code","17cffdbb":"code","09b2f093":"code","d7351129":"code","88f82c75":"code","849ed58b":"code","8f57ba5b":"code","090c7205":"code","2a09a05b":"code","cf577036":"code","d3354d0f":"code","a043baa9":"code","f2d4b62e":"code","dc333ede":"markdown","d940de15":"markdown","7bbf8593":"markdown","a3019d27":"markdown","0098ae8e":"markdown","f7a789c7":"markdown","89bfa00f":"markdown","7bb9c74c":"markdown","b4137ed3":"markdown","ca5fbf32":"markdown","5f23e9bf":"markdown","e001ed81":"markdown","f1c5470b":"markdown","0f496b65":"markdown","2558cbe3":"markdown","5b442467":"markdown","5be3cf1f":"markdown","83f678e4":"markdown","1033cb46":"markdown","e891a9b7":"markdown","f0677ae7":"markdown","4a25a522":"markdown","40625e3e":"markdown","ff21789f":"markdown","f0ce0137":"markdown","b283dea5":"markdown","7517283e":"markdown","075a6fe1":"markdown","6f9f6c74":"markdown","5495493d":"markdown","9d62f7cc":"markdown","edec2ae3":"markdown","2bfb9532":"markdown","674275f0":"markdown","b35a518d":"markdown","3e52f897":"markdown","12a847cd":"markdown","6fab28ea":"markdown"},"source":{"8a4609ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","64da3011":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\n\ndata = pd.read_csv('..\/input\/fifa19\/data.csv', encoding='utf-8')\ndata.shape","08935dfd":"data.columns","9e581d2a":"msno.matrix(data)","de407ef7":"data.dropna(subset=['Name', 'Overall', 'Value'], how='all', inplace=True)\ndata.shape","f2ace6d7":"def scatter_them(data, col1 = 'Age', col2='Overall'):\n    plt.figure(figsize=(13,7))\n    plt.title(\"{0} AND {1}\".format(col1, col2))\n    plt.scatter(data[col1], data[col2], color='dodgerblue', s=6)\n    plt.xlabel(col1)\n    plt.ylabel(col2)","92484da6":"df = data.copy()\nscatter_them(df)","0f22af8d":"def box_them(data, col1='Age', col2='Overall', intervals=[15, 20, 25, 30, 35, 40, 50]):\n    df = data.copy()\n    df['for_purpose'] = pd.cut(df[col1], intervals, labels=[str(point) for point in intervals[1:]])\n    plt.figure(figsize=(13,7))\n    sns.boxplot(data=df, x='for_purpose', y=col2)\n    plt.title(\"{0} AND {1}\".format(col1, col2))","ec56c7ef":"df = data.copy()\nbox_them(data=df)","2e453f29":"box_them(data=df, col2='Potential')","f21bff99":"df = data.copy()\ndf['Value']","6461d7b6":"def first_and_last(x):\n    return (x[0], x[-1])\n\nunits = df['Value'].apply(first_and_last)\nset(units)","491ecbef":"def change_money(x):\n    if x[-1] == '0':\n        return int(x[1:])\n    elif x[-1] == 'K':\n        return 1000*float(x[1:-1])\n    else:\n        return 1000000*float(x[1:-1])","9d25c03e":"data['Value'] = data['Value'].apply(change_money)","838ad564":"data['Value'].min(), data['Value'].max()","4a0efac7":"df = data.copy()\n\ndf.sort_values(by='Value', ascending=False)[['Name', 'Club', 'Nationality', 'Age', 'Value', 'Overall']].iloc[:10]","2516ef98":"box_them(data=df, col1='Age', col2='Value')","8056b911":"by_value = df.sort_values(by='Value', ascending=False)\n\nbox_them(data=by_value[:1000], col1='Age', col2='Value')","9975dcce":"box_them(data=by_value[500:], col1='Age', col2='Value')","5e1444ba":"def line_them(data=df, col='Overall', groupby='Age'):\n    x = df.groupby(groupby)[col].mean()\n    plt.figure(figsize=(13,7))\n    plt.title(\"{0} Over {1}\".format(col, groupby))\n    plt.plot(x, color='dodgerblue')\n    plt.xlabel(groupby)\n    plt.ylabel(col)","24fdc94b":"line_them()","e8ff3164":"df[df['Age']>=42].sort_values(by='Overall', ascending=False)","6075d7f9":"df = data[data['Age']<42].copy()\nline_them(data=df, col='Overall', groupby='Age')","a3cede13":"line_them(col='Value', groupby='Age')","7a1cb70f":"line_them(col='Potential')","5e2d6dbf":"plt.figure(figsize=(13,7))\nplt.plot(df.groupby('Age')['Overall'].mean(), color='red')\nplt.plot(df.groupby('Age')['Potential'].mean(), color='darkblue')\nplt.title(\"Overall and Potential stats over time\")\nplt.xlabel('Age')\nplt.ylabel('Potential and Overall')","84bb318b":"df.groupby('Age')['Overall'].mean() == df.groupby('Age')['Potential'].mean()","dcf64ef8":"stats = df[['Crossing',\n       'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling',\n       'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration',\n       'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression',\n       'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle']]\n\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(stats.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","74b5334f":"stats.corr().sum().sort_values(ascending=False)","b1774196":"top5 = stats.corr().sum().sort_values(ascending=False)[:5]\nbot5 = stats.corr().sum().sort_values(ascending=False)[-5:]\n\nprint(\"The top 5 most influencial stats were \\n{0} \\nand the bottom 5 were \\n{1}\".format(top5, bot5))","47a21de1":"df = data.copy()\n\nstat_and_val = df[['Overall', 'Value', 'Crossing',\n       'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling',\n       'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration',\n       'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression',\n       'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle']]\n\nstat_and_val.corr()[['Value', 'Overall']].sort_values(by='Value', ascending=False).drop(index=['Value', 'Overall'])","b71426dd":"df = data.copy()\n\n## TOP 10 most clubs with the best players\ndf.groupby(\"Club\")['Overall'].mean().sort_values(ascending=False)[:10]","b0338667":"## TOP 10 clubs with the most pricy guys\ndf.groupby(\"Club\")['Value'].mean().sort_values(ascending=False)[:10]","d77cf52a":"df['Wage'][:5]","7bdbb358":"data['Wage'] = data['Wage'].apply(change_money)\n\ndf = data.copy()\n\ndf.groupby(\"Club\")['Wage'].sum().sort_values(ascending=False)[:10]\n## TOP 10 clubs with highest payrolls","c0d06791":"for_overall = df.groupby(\"Club\")['Overall'].mean()\nfor_wage = df.groupby(\"Club\")['Wage'].sum()\n\nwage_efficiency = for_overall \/ for_wage\nwage_efficiency.sort_values(ascending=False)[:10]","b16dcf8d":"## BOTTOM 10 in terms of wage efficiency\nwage_efficiency.sort_values()[:10]","a52d6e53":"big_clubs = df.groupby(\"Club\")['Overall'].mean().sort_values(ascending=False)[:10].index\nbig_clubs","fecbad0c":"df = data.copy()\ndf[df['Club'].isin(big_clubs)].groupby('Club')['ShortPassing'].mean().sort_values(ascending=False)","59166b09":"df[df['Club'].isin(big_clubs)].groupby('Club')['SprintSpeed'].mean().sort_values(ascending=False)","e89e1805":"df[df['Club'].isin(big_clubs)].groupby('Club')['BallControl'].mean().sort_values(ascending=False)","6106ddc2":"df[df['Club'].isin(big_clubs)].groupby('Club')['Aggression'].mean().sort_values(ascending=False)","db2ada14":"df[df['Club'].isin(big_clubs)].groupby('Club')['Age'].mean().sort_values(ascending=False)","f26fb725":"df = data.copy()\ndf.keys()","c4c4e017":"positions = df[['LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW',\n       'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM',\n       'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB']]\n\npositions.head()","cae71af7":"df.iloc[3]","17cffdbb":"for_position = df.dropna(subset=['LS', 'ST', 'RCB', 'CM'], how='all')","09b2f093":"positions = for_position[['LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW',\n       'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM',\n       'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB']]","d7351129":"len(for_position), len(df)","88f82c75":"def position_value(x):\n    return int(x[:2])+int(x[3])\n\npositions = positions.applymap(position_value)","849ed58b":"positions.iloc[3][:3]","8f57ba5b":"main_position = positions.idxmax(axis=1)\n\nfor_position['Position'] = main_position","090c7205":"for_position.drop(columns=['Unnamed: 0'], inplace=True)\nfor_position.head()","2a09a05b":"for_position['Position']","cf577036":"positions.columns","d3354d0f":"for_position[for_position['Position']=='LW'].sort_values(by='Overall', ascending=False).iloc[:3]","a043baa9":"forward = ['LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW']\nmidfield = ['LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM']\ndefense = ['RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB']\n\nfw = for_position[for_position['Position'].isin(forward)]\nmf = for_position[for_position['Position'].isin(midfield)]\ndf = for_position[for_position['Position'].isin(defense)]\n\nlen(fw), len(mf), len(df)","f2d4b62e":"## Statements on positions aggregate\n\nprint(\"Among pro field players, number of forwards were {0}({1:.2f}%), midfielders were {2}({3:.2f}%), and defenders were {4}({5:.2f}%).\".format(len(fw), len(fw)*100\/len(for_position), len(mf), len(mf)*100\/len(for_position), len(df), len(df)*100\/len(for_position)))","dc333ede":"Now that we can approach their position stats, we could assume the position name with highest number would be one's main position.","d940de15":"Now we see a clearer picture. The peak age for soccer player in terms of overall stat seems to be around 30.","7bbf8593":"I'd say it's pretty much enough for now. Again, aligned with Overall stat, Value is at peak around age 30.","a3019d27":"As we see above, there are some NULL values in the dataset. However, null value does not indicate that it's an incomplete dataset, since there are columns like 'ST', which refers to a position of a player. It could be similar to one-hot encoding.","0098ae8e":"This one is a bit obvious. There is a column called potential, which indicates the probability of player growth. It clearly declines with time.","f7a789c7":"I want to see the overall picture of our data first. Let's look at their distributions on some columns.","89bfa00f":"This is affected too much by the outliars. We'll have to do something to make this plot more meaningful.","7bb9c74c":"Now this indeed is an interesting finding. Abilities like ball control, shortpassing, dribbling were the most influencial ones whereas jumping and strength had almost nothing to do with other abilities. Now, what about with Overall and Value?","b4137ed3":"Now I'll try to see with position segments in filter. In other words, I'll first divide our dataset in accordance with each player's position, whether it be FW, MF, DF and GK.","ca5fbf32":"Surely potential falls over time. That's what 'potential' means in the first place. At this point, I started to wonder how EAsports defined 'Potential' in game.","5f23e9bf":"Now we know that NaN values come from GKs, who belongs nowhere in position df. We exclude GKs for now, only looking at the field players.","e001ed81":"Wow that's whole lot of columns. Looks tasty. We will be first checking some of the missing values, if there's any.\n","f1c5470b":"I also take a look at player's value, but currently this column is in string format. So I will need a little modification before handling it.","0f496b65":"Maybe there are too many data points, so scatterplot might not be the best option. Let's try box plot instead.","2558cbe3":"Now let's look from the club aspect. See if we can find some interesting pattern there as well.","5b442467":"For me personally, the fact that Christiano Ronaldo is no longer in the list was surprising. Messi shows incredible ability stats despite his age.","5be3cf1f":"We import useful libraries, and fetch our csv file.","83f678e4":"So for now, let's drop only those without their names, overall stats and money value. Otherwise keep them for now.","1033cb46":"We know that LW, RW belong to forward mainly.","e891a9b7":"I think it's enough about the age. I want to see how the stats are defined and allocated.","f0677ae7":"There is a column called 'Wage', and that has the same problem with our original Value column. Let's apply the same function here.","4a25a522":"With this heatmap, I can see how some stats are correlated. But it's not easy to see since there are so many of them.\nInstead, I will look at which stat takes the most pivotal role in playing soccer. By this, I mean which is the stat 'hub' that affects the most overall ability.","40625e3e":"Well it turns out, all those prominent clubs recorded terrible wage efficiency. That is in fact inevitable, since player's wage rises exponentially as their ability grows. In short, their wages are just astronomical.","ff21789f":"Value shows a more dramatic tendency. Though our veterans showed relatively good performance, they couldn't get good valuations in the market.","f0ce0137":"Well the row number hasn't changed, so lucky for us, there is no un-usable rows in our dataset. Let's continue on!","b283dea5":"The result is a little surprising, to be honest. I thought since those excellent finishers are usually the most renowned ones, the stat \"Finishing\" would have to do much with the value. But data doesn't lie, and as it turns out, skills like reaction, composure and vision tend to decide one's value most.","7517283e":"Barca it's tikitaka.","075a6fe1":"Alright, so it's pretty much human-specific notation. Let's check some units first.","6f9f6c74":"Okay. Now we know that all the values are in euros, and they end either in 0, K, or M.","5495493d":"Lastly for age issue, let's check the overall tendency with line plots.","9d62f7cc":"So according to our game, potential only applies to players under or equal to age 30. Enough for this.","edec2ae3":"There appears to be an outliar around age 45. Let's see who is beating his time so well. ","2bfb9532":"Now, among the top 10 clubs, let's try to draw out their strength and weakness.","674275f0":"Manchester United is thought to be quite an inefficient club, paying too much in wage in comparison to their performance. Let's see if we can define something like, wage efficiency.","b35a518d":"Better, but not yet. Let's drop out some of the highest paying outliars this time. They are simply unrealistic.","3e52f897":"Since the positions values are not numbers but string, we need a little wrangling.","12a847cd":"A guy named O. Perez from Mexico, age 45, is doing pretty well considering his age. But since we have only a couple of players in these age groups, it will be better to leave them out for now.","6fab28ea":"Now we have our values in place. Soccer fans might be already familiar, but let's check out some of the richest players of the world."}}