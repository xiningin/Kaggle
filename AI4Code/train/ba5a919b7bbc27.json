{"cell_type":{"d5dfd2bd":"code","04ef93b3":"code","a7a33a60":"code","503cefd3":"code","d0638363":"code","6b4b4757":"code","a256c687":"code","d00d9571":"code","4d4caaba":"code","3cf85a70":"code","c4a3443e":"code","a7d14caa":"code","1f760531":"code","3167bd9b":"code","debc2cc4":"code","5c0bdf44":"code","4da43e07":"code","b5f8f5ce":"code","2431e658":"code","5de3393b":"code","59f45194":"code","1760185f":"code","af9a668f":"code","cb59afb2":"code","3d7db5c0":"code","d7785d0e":"code","e2f89a09":"code","77232e8f":"code","8fa080c5":"code","6f95d189":"code","ab5249db":"code","c87fa2bd":"code","3368979c":"code","a4b21dd5":"code","27bf064b":"code","dfe353fb":"code","6fbd4156":"markdown","0abe213a":"markdown","5bab3ad1":"markdown","2f5a3a5e":"markdown","34e34fe0":"markdown","84a5f0eb":"markdown","cb50c540":"markdown"},"source":{"d5dfd2bd":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","04ef93b3":"# importing libraries\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime\nfrom datetime import date\nimport calendar\nimport matplotlib.pyplot as plt\nimport seaborn as sn\n%matplotlib inline","a7a33a60":"# loadind the data\ntrain = pd.read_csv('\/kaggle\/input\/health-insurance-premium-of-customers\/train_jRxnrHD.csv')","503cefd3":"train=train.drop('premium',1)","d0638363":"test = pd.read_csv('\/kaggle\/input\/health-insurance-premium-of-customers\/test_QaJU1Mh.csv')","6b4b4757":"train.head()","a256c687":"test.head()","d00d9571":"train.columns","4d4caaba":"# looking at the correlation between numerical variables\ncorr = train[['id','perc_premium_paid_by_cash_credit', 'age_in_days', 'Income',\n       'Count_3-6_months_late', 'Count_6-12_months_late',\n       'Count_more_than_12_months_late', 'application_underwriting_score',\n       'no_of_premiums_paid', 'target']].corr()\nmask = np.array(corr)\nmask[np.tril_indices_from(mask)] = False\nfig,ax= plt.subplots()\nfig.set_size_inches(20,10)\nsn.heatmap(corr, mask=mask,vmax=.9, square=True,annot=True, cmap=\"YlGnBu\")","3cf85a70":"train.dtypes","c4a3443e":"# distribution of count variable\nsn.distplot(train[\"target\"])","a7d14caa":"sn.distplot(train[\"age_in_days\"])","1f760531":"train.isnull().sum()","3167bd9b":"train.fillna(0,inplace=True)","debc2cc4":"train.isnull().sum()","5c0bdf44":"test.isnull().sum()","4da43e07":"test.fillna(0,inplace=True)","b5f8f5ce":"test.isnull().sum()","2431e658":"from sklearn.linear_model import LogisticRegression","5de3393b":"# initialize the linear regression model\nlModel = LogisticRegression()","59f45194":"train=train.drop('sourcing_channel',1)","1760185f":"X_train =train[train['age_in_days']<=28000]\nvalidation = train[train['age_in_days']>28000]","af9a668f":"X_train = train.drop('target',1)\ny_train = train['target']\nX_val = validation.drop('target',1)\ny_val = validation['target']","cb59afb2":"# checking the shape of X_train, y_train, X_val and y_val\nX_train.shape, y_train.shape, X_val.shape, y_val.shape","3d7db5c0":"X_train=pd.get_dummies(X_train)\nX_val=pd.get_dummies(X_val)","d7785d0e":"# fitting the model on X_train and y_train\nlModel.fit(X_train,y_train)","e2f89a09":"# making prediction on validation set\nprediction = lModel.predict(X_val)","77232e8f":"prediction.shape, X_train.shape, y_train.shape, X_val.shape, y_val.shape","8fa080c5":"# defining a function which will return the rmsle score\ndef rmsle(y, y_):\n    log1 = np.nan_to_num(np.array([np.log(v + 1) for v in y]))\n    log2 = np.nan_to_num(np.array([np.log(v + 1) for v in y_]))\n    calc = (log1 - log2) ** 2\n    return np.sqrt(np.mean(calc))","6f95d189":"rmsle(y_val,prediction)","ab5249db":"lModel.score(X_train,y_train)","c87fa2bd":"from sklearn.tree import DecisionTreeRegressor","3368979c":"# defining a decision tree model with a depth of 5. You can further tune the hyperparameters to improve the score\ndt_reg = DecisionTreeRegressor(max_depth=7,min_samples_leaf=4)","a4b21dd5":"dt_reg.fit(X_train, y_train)","27bf064b":"predict = dt_reg.predict(X_val)","dfe353fb":"# calculating rmsle of the predicted values\nrmsle(y_val, predict)","6fbd4156":"# importing libraries","0abe213a":"# distribution of count variable","5bab3ad1":"# loadind the data","2f5a3a5e":"# calculating rmsle of the predicted values","34e34fe0":"# Health Insurance Premium\n\nShort and simple","84a5f0eb":"# looking at the correlation between numerical variables","cb50c540":"# initialize the linear regression model"}}