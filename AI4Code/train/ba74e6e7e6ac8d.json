{"cell_type":{"d38b4641":"code","c88a0d1d":"code","c233c800":"code","d81581ac":"code","5b1e5179":"code","7c91b3af":"code","6e4aab42":"code","2a7cdf9b":"code","b70c7b11":"code","ddb92f65":"code","68dc085b":"code","4e188dfb":"code","8de0d94a":"code","c629ea5c":"code","c2441d94":"code","38313874":"code","4d1f7941":"code","48aeb70c":"code","a8767fc4":"code","f745c590":"code","8f248b05":"code","499a7af5":"code","f09cc4ca":"code","6c160f0d":"code","03f41cbb":"code","238a610c":"code","095b61e9":"code","399bc2c1":"code","113c864d":"code","0c402043":"code","a4fc9c72":"code","cc221971":"code","c23af817":"code","878a4d42":"code","0427e77d":"code","2b61327e":"code","a342c0bf":"code","f185c8fb":"code","9fb17b0b":"code","80597253":"code","4e6e4d31":"code","29ad24cf":"code","4e8db7b0":"code","10999329":"code","75340bad":"code","1997b06e":"code","28ac1433":"markdown","b3a04c34":"markdown","2068c1c8":"markdown","eb2859c6":"markdown","fde19583":"markdown","dc69adb3":"markdown","24728d4a":"markdown","ab604f99":"markdown","c4295bc3":"markdown","5308da95":"markdown","545905b2":"markdown","1a6a9e1b":"markdown","1302bb47":"markdown","af04f179":"markdown","37f0f896":"markdown","82b7b04e":"markdown","ea49d69d":"markdown","c311d48d":"markdown","fe8bbc51":"markdown","e68ecefd":"markdown","51030ecd":"markdown","0f150d7d":"markdown","f7fec1cc":"markdown","9e68c2e7":"markdown","40048e34":"markdown","e60b8f18":"markdown","00d6016f":"markdown","8fdb4299":"markdown","05f3a686":"markdown","c508ad90":"markdown","0df1d062":"markdown","c62293e5":"markdown","40edcc02":"markdown","e00f4ccd":"markdown","56187b05":"markdown","be670223":"markdown","9b71c545":"markdown","5af15045":"markdown","85caecb5":"markdown","93277854":"markdown","29fa4d36":"markdown","e2feadb5":"markdown","5506a4f9":"markdown","14fb8778":"markdown","6c96230c":"markdown","31281ed3":"markdown","ecf4e04a":"markdown","17e38501":"markdown","8828c717":"markdown","85a97326":"markdown"},"source":{"d38b4641":"import os\nimport numpy as np \nimport pandas as pd \nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\nimport squarify\n\nimport folium\nfrom geopy.geocoders import Nominatim\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\n\nfrom wordcloud import WordCloud,STOPWORDS\nfrom matplotlib.ticker import FuncFormatter\nfrom palettable.scientific.sequential import Acton_14,Bamako_12,Hawaii_5\nfrom palettable.tableau import Tableau_20\n\nimport gc\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c88a0d1d":"df = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\ndf.columns=df.columns +'___'+ df.iloc[0]\n","c233c800":"\ndf = df.iloc[1: , :]\ndf.head(10)","d81581ac":"df.rename(columns={'Q3___In which country do you currently reside?':'Q3_Country'}, inplace=True)","5b1e5179":"## helper functions\ndef plot_geograh(df, column, legend_label, title):\n    df.plot(column=column, \n           figsize=(15, 10),\n           legend=True,cmap='OrRd'\n          ,legend_kwds={'label': legend_label,\n                        'orientation': \"horizontal\"})\n\n    plt.title(title,fontsize=25)\n\n    ","7c91b3af":"import geopandas\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\ncountry_count=df.groupby('Q3_Country')['Q1___What is your age (# years)?'].count().reset_index(name='total')\n\nmerge=pd.merge(world,country_count,how='left',left_on='name', right_on=['Q3_Country'])\nmerge=merge[~(merge.Q3_Country.isna())]\n","6e4aab42":"plot_geograh(merge, 'total', \"Survey Participation by Country\",\n             'Kaggle ML Survey Participation Status')","2a7cdf9b":"import plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly\nimport plotly.offline as py\nimport plotly.graph_objs as go\n\nfichier_html_graphs=open(\"DASHBOARD.html\",'w')\nfichier_html_graphs.write(\"<html><head><\/head><body>\"+\"\\n\")\nfrom IPython.display import HTML\n\ndef display_graph(filename):\n    display(HTML('<iframe class=\"center\" width=\"1000\" height=\"600\" src=\"'+filename+'\"  allowfullscreen><\/iframe>'))\n\ndef create_custom_metrics(val):\n    total_programming=df.iloc[:,val['column_start']:val['column_end']].melt(var_name='columns', value_name=val['name']).groupby(val['name']).size().reset_index(\n    name='total')\n    fig = px.pie(total_programming, values=total_programming['total']\n                 , names=val['name'], title=val['title'])\n    plotly.offline.plot(fig, filename='Chart_'+val['title']+'.html',auto_open=False)\n    fichier_html_graphs.write(\"  <object data=\\\"\"+'Chart_'+val['title']+'.html'+\"\\\" width=\\\"1800\\\" height=\\\"1650\\\"><\/object>\"+\"\\n\")\n\n\n    \n    ","b70c7b11":"stats_to_know=[\n{'title':'Most used programming languages',\n'column_start': 7,\n'column_end': 20,\n'name':'total_programming'},\n{'title':'Gender participation in the survey',\n'column_start': 2,\n'column_end': 3,\n'name':'gender'},\n{'title':'Age Group participation in the survey',\n'column_start': 1,\n'column_end': 2,\n'name':'age_group'},\n{'title':'Education qualification',\n'column_start': 4,\n'column_end': 5,\n'name':'education'},\n{'title':'Experience',\n'column_start': 6,\n'column_end': 7,\n'name':'experience'},\n{'title':'salary',\n'column_start': 127,\n'column_end': 128,\n'name':'salary'},\n\n]","ddb92f65":"for val in stats_to_know:\n    print(val)\n    create_custom_metrics(val)\n\ngc.collect()\n","68dc085b":"display_graph('.\/Chart_Most used programming languages.html')","4e188dfb":"display_graph('.\/Chart_Gender participation in the survey.html')","8de0d94a":"display_graph('.\/Chart_Age Group participation in the survey.html')","c629ea5c":"display_graph('.\/Chart_Education qualification.html')","c2441d94":"display_graph('.\/Chart_Experience.html')","38313874":"display_graph('.\/Chart_salary.html')","4d1f7941":"\ncols=[\"Q25___What is your current yearly compensation (approximate $USD)?\",\"Q3_Country\",\n      \"Q5___Select the title most similar to your current role (or most recent title if retired): - Selected Choice\",\n      \"Q2___What is your gender? - Selected Choice\"]\ncols\n\nsalary_details = df[cols]\nsalary_details.columns = [\"Salary\", \"Country\",\"Current_role\",\"gender\"]\n\nsalary_details1 = salary_details.groupby([\"Country\",\"Salary\"]).size().reset_index(name='total_count')\nsalary_details_pivot=pd.melt(salary_details1,id_vars=['Country',\"Salary\"],var_name='metrics', value_name='values')\n# fig = px.bar(salary_details_pivot, x=\"Country\", y=\"values\", color=\"Salary\", \n#              title=\"Salary Split by Country\")\n# fig.show()\nsalary_details1['country_total']=salary_details1.groupby('Country')['total_count'].transform('sum')\nsalary_details1['salary_percent']=salary_details1['total_count']\/salary_details1['country_total']\nsalary_details1['salary_percent']=salary_details1['salary_percent']*100","48aeb70c":"# Imports\nimport plotly.graph_objs as go\nimport pandas as pd\nimport numpy as np\n\n\n\n# split df by Salary\nnames=salary_details1['Country'].unique().tolist()\ngender = salary_details1['Salary'].unique().tolist()\n\ndfs = {}\n\n# dataframe collection grouped by Salary\nfor name in names:\n    #print(name)\n    dfs[name]=pd.pivot_table(salary_details1[salary_details1['Country']==name],\n                             values='salary_percent',\n                             index=['Salary'],\n                             #columns=['gender'],\n                             aggfunc=np.sum)\n\n\n# plotly start \nfig = go.Figure()\n\n# get column names from first dataframe in the dict\ncolNames = list(dfs[list(dfs.keys())[0]].columns)\n#xValues=\n\n# one trace for each column per dataframe: salary range per gender\nfor col in colNames:\n    fig.add_trace(go.Bar(x=gender,\n                         visible=True,\n                         y=dfs['India']['salary_percent'].values\n                  )\n             )\n\n# menu setup    \nupdatemenu= []\n\nbuttons=[]\n\n# create traces for each salary range\nfor df12 in dfs.keys():\n    buttons.append(dict(method='update',\n                        label=df12,\n                        visible=True,\n                        args=[\n                              {'y':[dfs[df12]['salary_percent'].values]}])\n                  )\n\n# buttons for menu 2\nb2_labels = colNames\n\n# some adjustments to the updatemenus\nupdatemenu=[]\nyour_menu=dict()\nupdatemenu.append(your_menu)\nyour_menu2=dict()\nupdatemenu.append(your_menu2)\n#updatemenu[1]\nupdatemenu[0]['buttons']=buttons\nupdatemenu[0]['direction']='down'\nupdatemenu[0]['name']='test'\nupdatemenu[0]['showactive']=True\n\nfig.update_layout(showlegend=False, updatemenus=updatemenu,title=\"Salary % per Participant Country\")\nfig.show()","a8767fc4":"current_role_salary=salary_details.groupby([\"Current_role\",\"Salary\"]).size().reset_index(name='total_count')\ncurrent_role_salary_pivot=pd.melt(current_role_salary,id_vars=[\"Salary\",\"Current_role\"],var_name='metrics', value_name='values')\n# fig = px.bar(current_role_salary_pivot, x=\"Current_role\", y=\"values\", color=\"Salary\", \n#              title=\"Salary Split by Current Role\")\n# fig.show()\ncurrent_role_salary['title_total']=current_role_salary.groupby('Current_role')['total_count'].transform('sum')\ncurrent_role_salary['salary_percent']=current_role_salary['total_count']\/current_role_salary['title_total']\ncurrent_role_salary['salary_percent']=current_role_salary['salary_percent']*100","f745c590":"# Imports\nimport plotly.graph_objs as go\nimport pandas as pd\nimport numpy as np\n\n\n\n# split df by Salary\nnames=current_role_salary['Current_role'].unique().tolist()\ngender = current_role_salary['Salary'].unique().tolist()\n\ndfs = {}\n\n# dataframe collection grouped by Salary\nfor name in names:\n    #print(name)\n    dfs[name]=pd.pivot_table(current_role_salary[current_role_salary['Current_role']==name],\n                             values='salary_percent',\n                             index=['Salary'],\n                             #columns=['gender'],\n                             aggfunc=np.sum)\n\n\n# plotly start \nfig = go.Figure()\n\n# get column names from first dataframe in the dict\ncolNames = list(dfs[list(dfs.keys())[0]].columns)\n#xValues=\n\n# one trace for each column per dataframe: salary range per gender\nfor col in colNames:\n    fig.add_trace(go.Bar(x=gender,\n                         visible=True,\n                         y=dfs['Business Analyst']['salary_percent'].values\n                         \n                  )\n             )\n\n# menu setup    \nupdatemenu= []\n\n# buttons for menu 1, names\nbuttons=[]\n\n# create traces for each salary range\nfor df12 in dfs.keys():\n    buttons.append(dict(method='update',\n                        label=df12,\n                        visible=True,\n                        args=[\n                              {'y':[dfs[df12]['salary_percent'].values]}])\n                  )\n\n# buttons for menu 2\nb2_labels = colNames\n\n\n\n# some adjustments to the updatemenus\nupdatemenu=[]\nyour_menu=dict()\nupdatemenu.append(your_menu)\nyour_menu2=dict()\nupdatemenu.append(your_menu2)\n#updatemenu[1]\nupdatemenu[0]['buttons']=buttons\nupdatemenu[0]['direction']='down'\nupdatemenu[0]['name']='test'\nupdatemenu[0]['showactive']=True\n\n\n\nfig.update_layout(showlegend=False, updatemenus=updatemenu,title=\"Salary % per Participant Job Title\")\nfig.show()","8f248b05":"gender_salary=salary_details.groupby([\"gender\",\"Salary\"]).size().reset_index(name='total_count')\n# gender_salary_pivot=pd.melt(gender_salary,id_vars=[\"Salary\",\"gender\"],var_name='metrics', value_name='values')\n# fig = px.bar(gender_salary_pivot, x=\"gender\", y=\"values\", color=\"Salary\", \n#              title=\"Salary Split by Gender\")\n# fig.show()\ngender_salary['gender_total']=gender_salary.groupby('gender')['total_count'].transform('sum')\ngender_salary['salary_percent']=gender_salary['total_count']\/gender_salary['gender_total']\ngender_salary['salary_percent']=gender_salary['salary_percent']*100\ngender_salary=gender_salary.sort_values('Salary', ascending=True)","499a7af5":"# Imports\nimport plotly.graph_objs as go\nimport pandas as pd\nimport numpy as np\n\n\n\n# split df by Salary\nf = lambda x: x.str.extract('(\\d+)', expand=False).astype(int)\ngender_salary = gender_salary.sort_values('Salary', key= f, ignore_index=True)\nnames=gender_salary['Salary'].unique().tolist()\nnames = [value for value in names if value != '>$1,000,000']\nnames.append('>$1,000,000')\ngender = gender_salary['gender'].unique().tolist()\n\ndfs = {}\n\n# dataframe collection grouped by Salary\nfor name in names:\n    #print(name)\n    dfs[name]=pd.pivot_table(gender_salary[gender_salary['Salary']==name],\n                             values='salary_percent',\n                             index=['gender'],\n                             #columns=['gender'],\n                             aggfunc=np.sum)\n\n\n# plotly start \nfig = go.Figure()\n\n# get column names from first dataframe in the dict\ncolNames = list(dfs[list(dfs.keys())[0]].columns)\n#xValues=\n\n# one trace for each column per dataframe: salary range per gender\nfor col in colNames:\n    fig.add_trace(go.Bar(x=gender,\n                         visible=True,\n                         y=dfs['$0-999']['salary_percent'].values\n                         \n                  )\n             )\n\n# menu setup    \nupdatemenu= []\n\n# buttons for menu 1, names\nbuttons=[]\n\n# create traces for each salary range\nfor df12 in dfs.keys():\n    buttons.append(dict(method='update',\n                        label=df12,\n                        visible=True,\n                        args=[\n                              {'y':[dfs[df12]['salary_percent'].values]}])\n                  )\n\n# buttons for menu 2\nb2_labels = colNames\n\n\nupdatemenu=[]\nyour_menu=dict()\nupdatemenu.append(your_menu)\nyour_menu2=dict()\nupdatemenu.append(your_menu2)\n#updatemenu[1]\nupdatemenu[0]['buttons']=buttons\nupdatemenu[0]['direction']='down'\nupdatemenu[0]['name']='test'\nupdatemenu[0]['showactive']=True\n# updatemenu[1]['buttons']=buttons2\n# updatemenu[1]['name']='test'\n# updatemenu[1]['y']=0.6\n\n\nfig.update_layout(showlegend=False, updatemenus=updatemenu,title=\"Salary % per Participant Gender\")\nfig.show()","f09cc4ca":"stats_to_know=[\n{'title':'Most popular IDES',\n'column_start': 21,\n'column_end': 34,\n'name':'popular_ide'},\n{'title':'Most popular Hosted Products',\n'column_start': 34,\n'column_end': 51,\n'name':'popular_hosted_notebook'},\n{'title':'Most popular hardware options',\n'column_start': 52,\n'column_end': 58,\n'name':'popular_hardware'},\n{'title':'Most popular Cloud Platforms',\n'column_start': 129,\n'column_end': 141,\n'name':'cloud_platforms'},\n{'title':'Most popular Cloud products',\n'column_start': 142,\n'column_end': 147,\n'name':'cloud_products'}]","6c160f0d":"for val in stats_to_know:\n    print(val)\n    create_custom_metrics(val)\n\ngc.collect()","03f41cbb":"display_graph('.\/Chart_Most popular IDES.html')","238a610c":"display_graph('.\/Chart_Most popular Hosted Products.html')","095b61e9":"display_graph('.\/Chart_Most popular hardware options.html')","399bc2c1":"display_graph('.\/Chart_Most popular Cloud products.html')","113c864d":"display_graph('.\/Chart_Most popular Cloud Platforms.html')","0c402043":"yearly_stats=pd.read_csv('..\/input\/kaggle-data-science-survey-20172021\/kaggle_survey_2017_2021.csv')\nyearly_stats.columns=yearly_stats.iloc[0]\nyearly_stats= yearly_stats[1:]","a4fc9c72":"\ncols=[\"Year\",\"What is your gender? - Selected Choice\"]\n\nparticipation = yearly_stats[cols]\nparticipation.columns = [\"Year\", \"Gender\"]\n\n\nparticipation=participation[participation['Year'] != 2017]\nparticipation['Year']=participation['Year'].astype(int)\nparticipation = participation.groupby([\"Year\",'Gender']).size().reset_index(name='total')\nparticipation['Year']=participation['Year'].astype(str)\nparticipation['Gender'] = participation['Gender'].replace(['Man'],'Male')\nparticipation['Gender'] = participation['Gender'].replace(['Woman'],'Female')\n","cc221971":"fig = px.bar(participation, x=\"Year\", y=\"total\", color=\"Gender\", title=\"Participation by Gender\")\nfig.show() ","c23af817":"cols = list(yearly_stats.columns[8:21])\ncols.extend([\"Year\"])\n\nprogramming = yearly_stats[cols]\nprogramming.columns = [\"Python\", \"R\", \"SQL\", \"C\", \"C++\", \"Java\",\n                 \"Javascript\", \"Julia\", \"Swift\", \"Bash\", \"MATLAB\",\"None\",\"Other\",\n                 \"Year\"]\n\n\nprogramming=programming[programming['Year'] != 2017]\nprogramming['Year']=programming['Year'].astype(int)\nprogramming = programming.groupby([\"Year\"]).count().reset_index()\n\n\npro_pivot=pd.melt(programming,id_vars=['Year'],var_name='Languages', value_name='Usage Count')\n\n","878a4d42":"import plotly.express as px\npro_pivot['Year']=pro_pivot['Year'].astype(str)\n\nfig = px.area(pro_pivot, x=\"Year\", y=\"Usage Count\", color=\"Languages\",\n      line_group=\"Languages\")\nfig.show()","0427e77d":"cols=['In which country do you currently reside?','Year',\"What is your gender? - Selected Choice\"]\n\ncountry_participation = yearly_stats[cols]\n\ncountry_participation.columns = [\"Country\", \"Year\", \"Gender\"]\n\n\ncountry_participation=country_participation[country_participation['Year'] != 2017]\ncountry_participation['Gender'] = country_participation['Gender'].replace(['Man'],'Male')\ncountry_participation['Gender'] = country_participation['Gender'].replace(['Woman'],'Female')\ncountry_participation['Year']=country_participation['Year'].astype(int)\ncountry_participation = country_participation.groupby([\"Year\",'Country']).size().reset_index(name='total')\n\n\ntop_countries=country_participation[country_participation['Year']==2018].sort_values('total', ascending=False).head(10)['Country']\ncountry_participation_filter=country_participation[country_participation['Country'].isin(top_countries)]","2b61327e":"fig = px.area(country_participation_filter, x=\"Year\", y=\"total\", color=\"Country\",\n      line_group=\"Country\")\nfig.show()","a342c0bf":"country_participation_new= country_participation.set_index(['Year', 'Country'])\nd2 = country_participation_new.groupby(level='Country').pct_change()\nd2=d2.reset_index()\nd2['total']=d2['total']*100","f185c8fb":"d2.fillna(0, inplace=True)\nd2['Year']=d2['Year'].astype(str)\nd2['total']=d2['total'].astype(int)\nd2=d2[~(d2['Country'].isin(['Ecuador', 'Ethiopia', 'Iraq', 'Kazakhstan', 'Uganda']))]\nfig = px.area(d2, x=\"Year\", y=\"total\", color=\"Country\",\n      line_group=\"Country\")\nfig.show()","9fb17b0b":"# Imports\nimport plotly.graph_objs as go\nimport pandas as pd\nimport numpy as np\n\n\n\n# split df by Salary\nnames=d2['Country'].unique().tolist()\nd2['Year']=d2['Year'].astype(str)\nYear = d2['Year'].unique().tolist()\n\ndfs = {}\n\n# dataframe collection grouped by Salary\nfor name in names:\n    #print(name)\n    dfs[name]=pd.pivot_table(d2[d2['Country']==name],\n                             values='total',\n                             index=['Year'],\n                             #columns=['gender'],\n                             aggfunc=np.sum)\n\n\n# plotly start \nfig = go.Figure()\n\n# get column names from first dataframe in the dict\ncolNames = list(dfs[list(dfs.keys())[0]].columns)\n#xValues=\n\n# one trace for each column per dataframe: salary range per gender\nfor col in colNames:\n    fig.add_trace(go.Bar(x=Year,\n                         visible=True,\n                         y=dfs['Argentina']['total'].values\n                         \n                  )\n             )\n\n# menu setup    \nupdatemenu= []\n\n# buttons for menu 1, names\nbuttons=[]\n\n# create traces for each salary range\nfor df12 in dfs.keys():\n    buttons.append(dict(method='update',\n                        label=df12,\n                        visible=True,\n                        args=[\n                              {'y':[dfs[df12]['total'].values]}])\n                  )\n\n# buttons for menu 2\nb2_labels = colNames\n\n\nupdatemenu=[]\nyour_menu=dict()\nupdatemenu.append(your_menu)\nyour_menu2=dict()\nupdatemenu.append(your_menu2)\n#updatemenu[1]\nupdatemenu[0]['buttons']=buttons\nupdatemenu[0]['direction']='down'\nupdatemenu[0]['name']='test'\nupdatemenu[0]['showactive']=True\n# updatemenu[1]['buttons']=buttons2\n# updatemenu[1]['name']='test'\n# updatemenu[1]['y']=0.6\n\n\nfig.update_layout(showlegend=False, updatemenus=updatemenu,title=\"Survey Participation By Country % change\")\nfig.show()","80597253":"stats_to_know=[\n{'title':'Most Desirable cloud platform',\n'column_start': 268,\n'column_end': 280,\n'name':'popular_platform_future'},\n{'title':'Most Desirable hosted Products',\n'column_start': 280,\n'column_end': 285,\n'name':'popular_hosted_products_future'},\n{'title':'Experiment Tools for Future',\n'column_start': 357,\n'column_end': 369,\n'name':'popular_experiment_products_future'},\n{'title':'Auto ML Tools for Future',\n'column_start': 349,\n'column_end': 357,\n'name':'popular_automl_products_future'},\n{'title':'BI Tools for Future',\n'column_start': 324,\n'column_end': 341,\n'name':'popular_bi_products_future'},\n]","4e6e4d31":"for val in stats_to_know:\n    print(val)\n    create_custom_metrics(val)\n\ngc.collect()","29ad24cf":"display_graph('.\/Chart_Most Desirable cloud platform.html')","4e8db7b0":"display_graph('.\/Chart_Most popular Hosted Products.html')","10999329":"display_graph('.\/Chart_Experiment Tools for Future.html')","75340bad":"display_graph('.\/Chart_Auto ML Tools for Future.html')","1997b06e":"display_graph('.\/Chart_BI Tools for Future.html')","28ac1433":"As seen in the above graph we can see that the countries where the conversion value is higher towards the US dollars, the salaries are concentrated in the lower buckets where as in countries where the currencies are comparable to US dollars they are spread across the salary buckets. ","b3a04c34":"#### Add entry to json to get the insight from Data and generate the required graphs","2068c1c8":"This is a good insight as well as this platform not only provide support and help to core data scientist but people across wide range of the job profiles. We would like to see more details on the Other group as well to understand the diverse impact data is making in the industry.\nAs the saying goes \n<b>\"Without data you're just another person with an opinion.\u201d<\/b> which makes it critical in all fields to analyse the relevant data before making any decisions.","eb2859c6":"##### 5a. Salary of survey participants by Country\nThe below chart explains why we have a 22% in salary range of 0-999 dollars. Most of the cohort is coming from India. Also see the plot of salaries per the current role the survey participants have filled in.\n","fde19583":"## Historical Trends Analysis\n#### A quick look into the yearly stats . Thnx to @Andrada Olteanu for the dataset for 2017-2021","dc69adb3":"### 2. Most Desired Cloud Platform Product to learn about in the future 2 years","24728d4a":"I think one of the main reason why GCP is higher is because of the amazing capabilties of Bigquery and ML capabilities that comes with it. If you havent tried it out yet,  you just need SQL to create a basic set of ML models using BQ and training and predictions can be done with BQ ML. It is also worth noting that even though the preffered platform to learn was AWS in the second position when it comes to Auto ML, Azure takes a lead to second place.","ab604f99":"* As seen from the above graph Python has been the most popular language among the survey participants for years where as the newer languages like Julia and Swift are getting popular owning to how ML can be used with IOS programming and wider scope of applications. It is interesting to note that there is an increase in the Other bucket as well which means we might have to add other languages in the forthcoming years survey to understand if there is any new languages that has missed out on the list.\n","c4295bc3":"\n#### Thank you\n\nThanks to kaggle team for hosting this competition and all those Data enthusiast who participated in the survey. It is very important that we take learnings from the survey and help make the product even better to serve the global community to get better at data practices and implementations.","5308da95":"#### 2.Most popular hosted products by survey participants\n\nThis exactly says what products are avaiable free for cost and great in collaboration and a large share is accounted by Colab and Kaggle Notebooks.\n","545905b2":"\n#### 5. Experience of survey participants \n\nThis is interesting as well. As we can see this is a platform that helps people to learn more there is a large number of freshers\/beginners in the platform who are looking forward to learn from the experts or through lot of peer help.\n","1a6a9e1b":"This is quite intriguing. I think people are still learning the benefits of using expermenting tools to track the progress of the model lifecycle and iteration development. But as expected tensorboard, MLFlow and W & B are within the most popular choices. The increased use of W & B especially across the recent Kaggle notebooks should change this trend in the future and help people understand the importance more.","1302bb47":"\n#### 5.Most popular cloud products by survey participants\nEC2 and Compute Engine gets the most share which indicate that they are basic virtual servers which you can use to deploy and build other applications and services.","af04f179":"Add required columns to json to visualize insights around those features","37f0f896":"### 1. Survey Participation across the years with Gender Analysis","82b7b04e":"#### 3. Age group of survey participants\n\nMore than 50% of participants are less than 40 years of age. We can still see lot of participation probably \ncoming from students as well. Also its worth noting that we have about 9% of people above age of 50 which shows that age is just a number and  people are interested in learning new technologies and never stop learning.\n","ea49d69d":"### 2. Participation of Countries for the Survey across time period\n\nWe are going to look at top 10 countries who participated in the survey from 2018 and follow the trend across time to see how is there any emerging trends in participation","c311d48d":"### 5. BI Tools for Future","fe8bbc51":"\n#### 4. Education of survey participants \n\nAs this is advanced field of study we can see that 89% people have atleast a Bachelor's Degree\n","e68ecefd":"## Global Stats -  General Trends Summary\n\n#### 1. Most used programming languages used by survey participants\n\n The most popular programming languages used globally are Python followed by SQL, C++ and R.\n\n\n\n\n\n","51030ecd":"### Common Stats Globally  for 2021 survey\n\n#### General Stats around Usage","0f150d7d":"### 2. Acceptance of Programming languages across time period","f7fec1cc":"\n\n#### 2. Gender of survey participants\n\n79% Survey participants are male and the only 18% contribute to female. We need to check better at country level data to get a deeper understanding of how the gender distribution varies across countries\n\n","9e68c2e7":"The above plot shows that there has been an increased participation from Countries like India across the time period but at the same time participation has decreased from United States in 2019 and 2020 but it is in an increasing trend in 2021. It can also be because as the data field and possibilities becomes more and more it is getting spread across different countries and the platform provides an excellent oppurtunity to learn new technologies.","40048e34":"#### 1.Most popular IDE used by survey participants\n\nThe most popular IDE used by participants include Jupyter notebook and visual studio code.\n\n\n\n\n\n\n\n\n","e60b8f18":"## Looking into the possible future trends","00d6016f":"#### 4.Most popular cloud platform by survey participants\n\nAs expected AWS and GCP takes about 46% share of the popular ones. The None is interesting as well which might indicate that people use their local to do the development (either their tasks are simple or they have set up proper workstations to support the ML workload)\n","8fdb4299":"### General Functions","05f3a686":"### 1. Most Desired Cloud Platform to learn about in the future 2 years","c508ad90":"## Global Stats- ML Infra Specific Usage ","0df1d062":"As expected people want to learn more about AWS and GCP in general in the coming years followed by Azure who are all the  market leaders in the cloud space atm.","c62293e5":"## Lets get started and see what the survey insights are \n\nWe want to look it under three lenses. \n* One is going to be what the current survey results are looking at.\n* Trend analysis historically\n* Expected future trends\n","40edcc02":"### Lets also take a look at new countries added every year and countries with higher yoy participation","e00f4ccd":"#### How to interpret the below graph?\nOnce you select the salary range, the value against the gender indicate the % of survey participants within   that gender that has the selected salary range.\n \n As we can see in the chart towards the highest salary ranges ,among the survey participants % of male candidates have higher salary compared to female counterparts with in the same buckets. ","56187b05":"### 3. How to perform Experiments in the future?","be670223":"#### A quick glance of Data","9b71c545":"\n#### 5. Salary of survey participants \n\nThis is interesting as well.This might require further drill down to understand if there is any salary disparity between female and male and also based on country as the currency conversion matters while looking at the standardizing salary across the countries\n","5af15045":"<a id=\"competition-overview\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:green; border:1; color:white' role=\"tab\" aria-controls=\"home\"><center>Kaggle ML and DS Survey<\/center><\/h2>\n           \n ![Drag Racing](https:\/\/images.unsplash.com\/photo-1504868584819-f8e8b4b6d7e3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1476&q=80)\n\n#### **<span style=\"color:orange;\">Description<\/span>**\n    \nThe challenge objective: tell a data story about a subset of the data science community represented in this survey, through a combination of both narrative text and data exploration. A \u201cstory\u201d could be defined any number of ways, and that\u2019s deliberate. The challenge is to deeply explore (through data) the impact, priorities, or concerns of a specific group of data science and machine learning practitioners. That group can be defined in the macro (for example: anyone who does most of their coding in Python) or the micro (for example: female data science students studying machine learning in masters programs). This is an opportunity to be creative and tell the story of a community you identify with or are passionate about!\n\n#### **<span style=\"color:orange;\"> Data<\/span>**\nMain Data: kaggle_survey_2021_responses.csv: 42+ questions and 25,973 responses\n\nResponses to multiple choice questions (only a single choice can be selected) were recorded in individual columns. Responses to multiple selection questions (multiple choices can be selected) were split into multiple columns (with one column per answer choice).\nSupplementary Data:\nkaggle_survey_2021_answer_choices.pdf: list of answer choices for every question\n\nWith footnotes describing which questions were asked to which respondents.\nkaggle_survey_2021_methodology.pdf: a description of how the survey was conducted\n\nYou can ask additional questions by posting in the pinned Q&A thread.\n\n","85caecb5":"* The graph shows that India has the highest participation for the Kaggle Survey for the year 2021 followed by US","93277854":"### Identify Survey Participation by Country","29fa4d36":"Tableau and Power BI leads the visualization tools landscape for future followed by Google Data Studio.","e2feadb5":"##### 5b. Salary of survey participants by Gender\n","5506a4f9":"#### New Countries added per year\n* 2019 - `Algeria', 'Saudi Arabia', 'Taiwan'\n* 2020 - `Ghana', 'Nepal', 'Sri Lanka', 'United Arab Emirates'\n* 2021 - `Ecuador', 'Ethiopia', 'Iraq', 'Kazakhstan', 'Uganda'","14fb8778":"\n#### 3.Most popular hardware otpions by survey participants\n\nA 30% of participants have voted for NVIDIA GPUs but given that people use above hosted products mostly for\nbasic ML and insights identification and thats why we can see about 50% have given None indicating that they\nnever had to worry about the hardware.","6c96230c":"Most of the countries had a drop in 2019 and then it is going back up . We can filter out at a country level to see the changes specific to the country. The countries with negative drop in 2021 compared to previous years are Algeria, Denmark, Norway","31281ed3":"We can see that survey participation has increased quite significantly in 2021 owning to lockdown and travel restrictions giving more time for people to trial out more and more wider reach of the platform across the globe.","ecf4e04a":"### 4. Auto ML Tools for Future","17e38501":"This is bit unusal in terms of <b>None<\/b> getting a higer percentage of 19% among the survey participants. Google colab and kaggle are the most effective and collaborative way to get started to learn about data wrangling and both are easier to use and have free quota usage for general purpose needs.","8828c717":"## General Trends for Kaggle Survey 2021","85a97326":"It will be easier if we can get the first row as part of the columns header so we can easily group by and classify the related questions and derive insights"}}