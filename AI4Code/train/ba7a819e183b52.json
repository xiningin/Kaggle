{"cell_type":{"cdf79bbb":"code","ddcbac62":"code","9e3822d4":"code","995ac5ae":"code","bd90013c":"code","faa0739b":"code","3db54c1c":"code","f37d10aa":"code","48390634":"code","029e86fc":"code","51df9470":"code","60fb0aba":"code","d99ac6ce":"code","27c294ab":"code","f600ae69":"code","d1ef21f8":"code","ad8bf032":"code","7b5ab998":"code","8c911387":"code","f3007674":"code","f49b093c":"code","19f97575":"code","5aa1518d":"code","291c31a2":"code","85061450":"code","3427fcba":"code","4c6db651":"code","dfa75e30":"code","933f9f3c":"code","9c5d48e9":"code","b7f8120a":"code","c20eb004":"code","343becc8":"code","faa14c80":"code","4617db59":"code","6b34befc":"code","fbd84845":"code","37d51338":"code","576c019c":"code","3eb4090c":"code","1da32d30":"code","35921b74":"code","4118da19":"code","cc431280":"code","07d0751a":"code","4fcdda03":"code","9edf0000":"code","0b29af8b":"code","096ba673":"code","5697346c":"code","6f59cc47":"code","f94fc761":"code","b2d708b1":"code","31c5f740":"code","0c1554aa":"code","211f26c8":"code","b37e83ca":"code","7a32e032":"code","17730455":"code","bb72f1b7":"code","1161d052":"code","344a363c":"code","785a7dc2":"code","b6bf9480":"code","a2ca1f93":"code","f22cb5e5":"code","fb5eb0c9":"code","d9a03fce":"code","ef99de41":"code","76d2faef":"code","baf188c0":"markdown","45b77b8d":"markdown","1db49da1":"markdown","8f9e7bbd":"markdown","7a4d72c9":"markdown","8e046764":"markdown","833bf63b":"markdown","c4633ecf":"markdown","c550fa4b":"markdown","fc2f9b24":"markdown","8c1b82c8":"markdown","04724322":"markdown","5400e944":"markdown","8644d4d4":"markdown","c211098f":"markdown","15de8afd":"markdown","ba397c22":"markdown","c2e863a1":"markdown","c4d59a39":"markdown","d8662848":"markdown","154dc3b5":"markdown","b534d84b":"markdown","7002782f":"markdown","5adfe4e4":"markdown","2e0793a1":"markdown","ff16931f":"markdown","4fb8fe7e":"markdown","95bbfd6a":"markdown","f8acfc0f":"markdown","2723779e":"markdown","772b983b":"markdown","59c93344":"markdown","2cf0c55d":"markdown","875f83b3":"markdown","c6831178":"markdown","cc9de7a8":"markdown","54b8f822":"markdown","392176e2":"markdown","56cc62e7":"markdown","ceb4cd79":"markdown","20f19f47":"markdown"},"source":{"cdf79bbb":"import pandas as pd\nimport numpy as np","ddcbac62":"# from google.colab import drive \n# drive.mount('\/content\/gdrive')","9e3822d4":"adultDF = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\", na_values=\"?\", index_col=['Id'])\nadultDF.head()","995ac5ae":"print('Shape do DataFrame:',adultDF.shape)","bd90013c":"import seaborn as sns\n\nimport matplotlib.pyplot as plt","faa0739b":"dfAnalysis = adultDF.copy()\n\n# Importando o LabelEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\n# Instanciando o LabelEncoder\nle = LabelEncoder()\n\n# Modificando o nosso dataframe, transformando a vari\u00e1vel de classe em 0s e 1s\ndfAnalysis['income'] = le.fit_transform(dfAnalysis['income'])","3db54c1c":"# C\u00e1lculo da matriz de correla\u00e7\u00e3o\ncorr = dfAnalysis.corr()\n\n# Gera\u00e7\u00e3o de uma m\u00e1scara para o tri\u00e2ngulo superior\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Configura\u00e7\u00e3o da figura em matplotlib\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Gera\u00e7\u00e3o de um mapa de cores divergente\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Desenho do mapa de calor com a m\u00e1scara e a propor\u00e7\u00e3o correta\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=0.5, vmin = -0.5, center=0, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","f37d10aa":"sns.catplot(x=\"income\", y=\"age\", kind=\"violin\", data=adultDF)","48390634":"sns.catplot(x=\"income\", y=\"education.num\", kind=\"violin\", data=adultDF)","029e86fc":"sns.catplot(x=\"income\", y=\"capital.gain\", kind=\"violin\", data=adultDF)","51df9470":"sns.catplot(x=\"income\", y=\"capital.loss\", kind=\"violin\", data=adultDF)","60fb0aba":"sns.catplot(x=\"income\", y=\"hours.per.week\", kind=\"violin\", data=adultDF)","d99ac6ce":"sns.catplot(x=\"workclass\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\", aspect=2)","27c294ab":"sns.catplot(x=\"marital.status\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\", aspect = 2)","f600ae69":"sns.catplot(x=\"occupation\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\", aspect=4)","d1ef21f8":"sns.catplot(x=\"relationship\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\", aspect=1)","ad8bf032":"sns.catplot(x=\"race\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\", aspect=1.4)","7b5ab998":"sns.catplot(x=\"sex\", col=\"income\", col_wrap=4, data=adultDF, kind=\"count\")","8c911387":"adultDF['sex'].value_counts()","f3007674":"sns.catplot(x=\"income\", col=\"native.country\", col_wrap=4, data=adultDF, kind=\"count\")","f49b093c":"adultDF['native.country'].value_counts()","19f97575":"adultDF.isnull().sum().sort_values(ascending = False).head(5)","5aa1518d":"adultDF = adultDF.dropna()","291c31a2":"adultDF.isnull().sum().sort_values(ascending = False).head(5)","85061450":"dfAnalysis = dfAnalysis.dropna()\n\n# Instanciando o LabelEncoder\nle = LabelEncoder()\n\n# Transformando as vari\u00e1veis categ\u00f3ricas em num\u00e9ricas\ncategoricColumn = ['workclass', 'education', 'marital.status', 'occupation', 'relationship', 'race', 'sex']\nfor column in categoricColumn:\n    dfAnalysis[column] = le.fit_transform(dfAnalysis[column])","3427fcba":"dfAnalysis.head()","4c6db651":"# C\u00e1lculo da matriz de correla\u00e7\u00e3o\ncorr = dfAnalysis.corr()\n\n# Gera\u00e7\u00e3o de uma m\u00e1scara para o tri\u00e2ngulo superior\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Configura\u00e7\u00e3o da figura em matplotlib\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Gera\u00e7\u00e3o de um mapa de cores divergente\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Desenho do mapa de calor com a m\u00e1scara e a propor\u00e7\u00e3o correta\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=0.5, vmin = -0.5, center=0, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","dfa75e30":"choosenFeatures = [\"age\", \"education.num\", \"sex\", \"capital.gain\", \"capital.loss\", \"hours.per.week\", \"income\"]\n\nadultTrain = dfAnalysis[choosenFeatures].copy()","933f9f3c":"adultTrain.head()","9c5d48e9":"XAdultTrain = adultTrain.drop([\"income\"], axis = 1)\nYAdultTrain = adultTrain[\"income\"]","b7f8120a":"from sklearn.model_selection import cross_val_predict, cross_val_score, ShuffleSplit\nfrom sklearn.model_selection import RandomizedSearchCV","c20eb004":"from sklearn.model_selection import train_test_split","343becc8":"XTrain, XHold, YTrain, YHold = train_test_split(XAdultTrain, YAdultTrain,\n                                                    test_size=0.25,\n                                                    random_state=42)","faa14c80":"from sklearn.linear_model import LogisticRegression","4617db59":"logisticReg = LogisticRegression(solver = \"liblinear\", random_state = 42)\nhparameters = dict(C = np.linspace(0, 10, 100), \n                     penalty = [\"l2\", \"l1\"])","6b34befc":"clfV1 = RandomizedSearchCV(logisticReg, hparameters, scoring='roc_auc', n_iter=50, cv=2, n_jobs=-1, random_state=0, verbose=2)\n\nresultLogReg = clfV1.fit(XTrain, YTrain)","fbd84845":"resultLogReg.best_params_","37d51338":"resultLogReg.best_score_","576c019c":"from sklearn.svm import SVC","3eb4090c":"svclass = SVC(gamma = 'auto', probability=True)\nhparameters = dict(C = np.linspace(0, 10, 100),\n                   gamma = [1, 0.1, 0.01, 0.001], \n                  kernel = ['rbf'])","1da32d30":"clfV2 = RandomizedSearchCV(svclass, hparameters, scoring='roc_auc', n_iter=50, cv=2, n_jobs=-1, random_state=0, verbose=2)\n","35921b74":"resultSVC = clfV2.fit(XTrain, YTrain)","4118da19":"resultSVC.best_params_","cc431280":"resultSVC","07d0751a":"resultSVC.best_score_","4fcdda03":"from sklearn.ensemble import RandomForestClassifier","9edf0000":"rfClass = RandomForestClassifier(random_state=42)\nhparameters = dict(n_estimators = list(range(0, 1000, 10)), \n                  max_depth = list(range(0, 25)))","0b29af8b":"clfV3 = RandomizedSearchCV(rfClass, hparameters, scoring='roc_auc', n_iter=50, cv=2, n_jobs=-1, random_state=0, verbose=2)\nresultRFC = clfV3.fit(XTrain, YTrain)","096ba673":"resultRFC.best_params_","5697346c":"resultRFC.best_score_","6f59cc47":"from sklearn.neural_network import MLPClassifier\nfrom scipy.stats import loguniform as sp_loguniform","f94fc761":"mlp2C = MLPClassifier(early_stopping=True)\n\nhparameters = {'hidden_layer_sizes': [(2**i, 2**j) for i in np.arange(3,10) for j in np.arange(3,10)], \n                \"alpha\": sp_loguniform(0.000001, 0.1),\n               'learning_rate': ['constant','adaptive']}","b2d708b1":"clfV4 = RandomizedSearchCV(mlp2C, hparameters, scoring='roc_auc', n_iter=50, cv=2, n_jobs=-1, random_state=0, verbose=2)\nresultMLP = clfV4.fit(XTrain, YTrain)","31c5f740":"resultMLP.best_params_","0c1554aa":"resultMLP.best_score_","211f26c8":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import roc_auc_score","b37e83ca":"#C\u00e1lculo da AUC\nregLog_AUC = roc_auc_score((YHold), resultLogReg.predict_proba(XHold)[:,1])\n\n# C\u00e1lculo da acur\u00e1cia\nregLog_AC = accuracy_score(YHold, resultLogReg.predict(XHold))\n\nprint('AUC: {:.4f}'.format(regLog_AUC))\nprint('Acur\u00e1cia: {:.4f}'.format(regLog_AC))","7a32e032":"#C\u00e1lculo da AUC\nSVC_AUC = roc_auc_score((YHold), resultSVC.predict_proba(XHold)[:,1])\n\n# C\u00e1lculo da acur\u00e1cia\nSVC_AC = accuracy_score(YHold, resultSVC.predict(XHold))\n\nprint('AUC: {:.4f}'.format(SVC_AUC))\nprint('Acur\u00e1cia: {:.4f}'.format(SVC_AC))","17730455":"#C\u00e1lculo da AUC\nRFC_AUC = roc_auc_score((YHold), resultRFC.predict_proba(XHold)[:,1])\n\n# C\u00e1lculo da acur\u00e1cia\nRFC_AC = accuracy_score(YHold, resultRFC.predict(XHold))\n\nprint('AUC: {:.4f}'.format(RFC_AUC))\nprint('Acur\u00e1cia: {:.4f}'.format(RFC_AC))","bb72f1b7":"#C\u00e1lculo da AUC\nMPL_AUC = roc_auc_score((YHold), resultMLP.predict_proba(XHold)[:,1])\n\n# C\u00e1lculo da acur\u00e1cia\nMPL_AC = accuracy_score(YHold, resultMLP.predict(XHold))\n\nprint('AUC: {:.4f}'.format(MPL_AUC))\nprint('Acur\u00e1cia: {:.4f}'.format(MPL_AC))","1161d052":"#Importa\u00e7\u00e3o da base de teste\nadultTest = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\", na_values=\"?\", index_col=['Id'])\nadultTest.shape","344a363c":"#Preenchimento das linhas com valores faltantes\nadultTest.isnull().sum().sort_values(ascending = False).head(5)","785a7dc2":"columnWithNull = ['occupation', 'workclass', 'native.country']\nfor column in columnWithNull:\n    value = adultTest[column].describe().top\n    adultTest[column] = adultTest[column].fillna(value)","b6bf9480":"adultTest.isnull().sum().sort_values(ascending = False).head(5)","a2ca1f93":"# Instanciando o LabelEncoder\nle = LabelEncoder()\n\n# Transformando as vari\u00e1veis categ\u00f3ricas em num\u00e9ricas\nfor column in categoricColumn:\n    adultTest[column] = le.fit_transform(adultTest[column])","f22cb5e5":"choosenFeatures = [\"age\", \"education.num\", \"sex\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]\n\nadultTest = adultTest[choosenFeatures].copy()\nadultTest.head()","fb5eb0c9":"YAdultTest = resultRFC.predict(adultTest)","d9a03fce":"finalArray = []\n\nfor i in range(len(YAdultTest)):\n    if (YAdultTest[i] == 0):\n        finalArray.append('<=50K')\n    else:\n        finalArray.append('>50K')\n        \n#transforma\u00e7\u00e3o do array em DataFrame\nfinalDF = pd.DataFrame({'income': finalArray})","ef99de41":"finalDF.to_csv(\"submission.csv\", index = True, index_label = 'Id')","76d2faef":"finalDF","baf188c0":"Assim como feito com a vari\u00e1vel *renda* anteriormente, os dados categ\u00f3ricos s\u00e3o transformados em dados num\u00e9ricos para uma manipula\u00e7\u00e3o mais simples.","45b77b8d":"### 4.2. Support Vector Classifier\n\nO segundo classificador a ser treinado \u00e9 o Support Vector Classifier (SVC) baseado no [Suppor Vector Machine (SVM)](https:\/\/www.youtube.com\/watch?v=efR1C6CvhmE). Para tal, \u00e9 utilizada a biblioteca do *sklearn* [SVC](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.SVC.html#sklearn.svm.SVC).\n","1db49da1":"### 6. Classificador para a base de teste\n\nA partir da an\u00e1lise da se\u00e7\u00e3o 5, \u00e9 poss\u00edvel concluir que o melhor classificador treinado \u00e9 o *Random Forrest Classifier*.\n\nAssim, o classificador ser\u00e1 aplicado para a base de teste.\n\n### 6.1. Tratamento da base de teste\nPara a base teste, s\u00e3o feitas as mesmas manipula\u00e7\u00f5es feitas para a base de treino. Isto \u00e9, ap\u00f3s importada, as colunas cater\u00f3ricas ser\u00e3o trasnformadas em num\u00e9ricas e as colunas com baixa correla\u00e7\u00e3o ser\u00e3o removidas.","8f9e7bbd":"O *dataset* possui uma discrep\u00e2ncia grande no n\u00famero de dados coletados em rela\u00e7\u00e3o aos pa\u00edses. Observa-se que mais de 90% dos dados s\u00e3o advindos dos Estados Unidos. \nA partir disso, \u00e9 poss\u00edvel concluir que a adi\u00e7\u00e3o dessa var\u00edavel no classificador teria pouco impacto em sua performance.","7a4d72c9":"### 5. Compara\u00e7\u00e3o de Classificadores\n\nPara a compara\u00e7\u00e3o dos quatro modelos treinados anterirormente, ser\u00e1 utilizada 20% da base de teste inicial, denominada de base de *holdout*. Para tal, a m\u00e9trica a ser comparada ser\u00e1 a [AUC](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.roc_auc_score.html) e a [acur\u00e1cia de precis\u00e3o](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.accuracy_score.html).","8e046764":"A partir disso, \u00e9 poss\u00edvel observar sua acur\u00e1cia com a base de treino.","833bf63b":"A partir disso, \u00e9 poss\u00edvel observar sua acur\u00e1cia com a base de treino.","c4633ecf":"Pelo mapa de calor \u00e9 poss\u00edvel analisar a correla\u00e7\u00e3o de vari\u00e1veis entre si. O mapa de calor varia num palete de cor entre o marrom ao azul, onde maior correla\u00e7\u00e3o se econtra no marrom. Analisando a \u00faltima linha, relacionada \u00e0 vari\u00e1vel *income*, observa-se que todas as vari\u00e1veis possuem correla\u00e7\u00e3o n\u00e3o desprez\u00edvel, com excess\u00e3o \u00e0 fnlwgt (*final weight*), que representa o peso final, \u00e9 o n\u00famero de unidades na popula\u00e7\u00e3o-alvo que a unidade representa. \n\nCom sua baixa correla\u00e7\u00e3o com *income* e com as demais vari\u00e1veis, pode-se concluir que sua remo\u00e7\u00e3o como *feature* n\u00e3o causar\u00e1 discrep\u00e2ncia de dados.\n\nEm rela\u00e7\u00e3o aos demais dados num\u00e9ricos, coloca-se em gr\u00e1ficos do tipo violino. A partir dele \u00e9 poss\u00edvel analisar a distribui\u00e7\u00e3o de renda em v\u00e1rios n\u00edveis da vari\u00e1veis, como idade. Vale relembrar que o valor **1** representa **>50k** enquanto o valor **0**, **<=50**.","c550fa4b":"### 4.1. Regress\u00e3o Log\u00edstica\n\nO primeiro classificador analisado \u00e9 o de [Regress\u00e3o Log\u00edstica](https:\/\/www.youtube.com\/watch?v=yIYKR4sgzI8). Com funcionamento an\u00e1logo \u00e0 regrass\u00e3o linear, a regress\u00e3o log\u00edstica \u00e9 utilizado para uma classifica\u00e7\u00e3o bin\u00e1ria. Para seu uso, ser\u00e1 utilizado a biblioteca do [sklearn](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html).","fc2f9b24":"A vari\u00e1vel *education number* e *education* andam juntos, uma vez que a primeira j\u00e1 registra o n\u00famero de anos que a pessoa estudou. Percebe-se no gr\u00e1gico que aquelas que ganham <=50k estudaram entre 7 e 10 anos, j\u00e1 os >50k, 12 anos.","8c1b82c8":"Para que seja poss\u00edvel a compara\u00e7\u00e3o dos classificadores, a base de teste ser\u00e1 dividida em duas partes, a parte para o treino e a parte para a compara\u00e7\u00e3o de modelos. Ser\u00e1 ent\u00e3o utilizado o [train_test_split](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html) cuja funcionalidade \u00e9 exatamente uma divis\u00e3o aleat\u00f3ria de uma base de dados em um subconjuntos de teste e de compara\u00e7\u00e3o.","04724322":"A partir disso, \u00e9 poss\u00edvel observar sua acur\u00e1cia com a base de treino.","5400e944":"Uma vez importada, \u00e9 ent\u00e3o encontrado os melhores par\u00e2metros pelo RandomizedSearchCV.","8644d4d4":"### 4. Treinamento de Classificadores\n\n<!-- Para realizar o ajuste de par\u00e2mentro e calcular seu melhor valor, ser\u00e1 utilizado o [GridSearch](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV) do *sklearn*.  -->\n\nPara os c\u00e1lculos dos par\u00e2metros de cada modelo de classificador, \u00e9 utilizado o [sklearn.model_selection.RandomizedSearchCV](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.RandomizedSearchCV.html). A fim de evitar o grande custo de computa\u00e7\u00e3o do [GridSearchCV](http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.GridSearchCV.html), o *RandomizedSearchCV* utiliza um n\u00famero fixo de configura\u00e7\u00f5es de hiperpar\u00e2metros \u00e9 amostrado a partir de distribui\u00e7\u00f5es de probabilidade especificadas.","c211098f":"Separa-se ent\u00e3o a vari\u00e1vel *income* para agir como uma *label* ","15de8afd":"A partir disto, basta exportar o *DataFrame* resultante para um arquivo *csv*.","ba397c22":"### 5.1. Regress\u00e3o Log\u00edstica","c2e863a1":"### 4.4. Rede Neural com duas camadas ocultas\n\nO quarto classificador a ser treinado \u00e9 uma [Rede Neural](https:\/\/www.youtube.com\/watch?v=CqOfi41LfDw). Para tal, \u00e9 utilizada a biblioteca do sklearn [MLPClassifier](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPClassifier.html).","c4d59a39":"### 2.1 Dados num\u00e9ricos","d8662848":"Com os dados convertidos para num\u00e9ricos, realiza-se novamente um mapa de calor para obervar a correla\u00e7\u00e3o entre as vari\u00e1veis e a renda anual.","154dc3b5":"### 5.2. Support Vector Classifier","b534d84b":"Instaladas as bibliotecas, carrega-se a base *adult*.","7002782f":"### 5.3 Exporta\u00e7\u00e3o dos valores encontrados\n\nUma vez que o resultado foi retornado com valores num\u00e9ricos, os dados ser\u00e3o transformados novamentes para **>50K** e **>=50K**","5adfe4e4":"### 5.2 Aplica\u00e7\u00e3o do classificador *Random Forrest*","2e0793a1":"Para come\u00e7o de an\u00e1lise ser\u00e1 focado nas vari\u00e1veis num\u00e9ricas. Para analis\u00e1-las em rela\u00e7\u00e3o \u00e0 vari\u00e1vel *income*, \u00e9 necess\u00e1rio tamb\u00e9m alter\u00e1-la para uma forma num\u00e9rica. Desse modo, como seus valores variam de **>50k** e **<=50k** \u00e9 poss\u00edvel fazer uma altera\u00e7\u00e3o para **1** e **0**, respectivamente. Para tal \u00e9 importada a mesma biblioteca que ser\u00e1 utilizada no classificador, a [sklearn](https:\/\/scikit-learn.org\/stable\/).","ff16931f":"### 2. An\u00e1lise de dados\n\nA partir de bibliotecas visuais como [matplotlib](https:\/\/matplotlib.org), \u00e9 poss\u00edvel realizar uma an\u00e1lise visual em gr\u00e1ficos dos dados do *DataFrame*.","4fb8fe7e":"\nA partir disso, \u00e9 poss\u00edvel observar sua acur\u00e1cia com a base de treino.","95bbfd6a":"A partir dos gr\u00e1ficos observa-se que h\u00e1 uma diferen\u00e7a consider\u00e1vel entre a quantidade de homens que recebem >50k e o total de mulheres que recebem o mesmo valor, onde 1\/3 deles recebem o valor enquanto apenas 1\/10 das mulheres apenas recebe >50k, representando ent\u00e3o a desigualdade salarial de g\u00eanero.","f8acfc0f":"O gr\u00e1fico possibilita observar que h\u00e1 uma quantidade elevada de pessoas de 20 a 40 anos. Aparenta que as pessoas come\u00e7am com uma renda *>50k* e aumentando para mais a partir dos 40 anos. Com o aumento dessa idade, se reduz o n\u00famero de pessoas que possuem renda.","2723779e":"Os ganhos de capital se demonstram ser bem espar\u00e7","772b983b":"\u00c9 poss\u00edvel observar uma certa desigualdade, podendo conclluir que a sua etnia pode favorecer ou desfavorecer a renda anual de um indiv\u00edduo.","59c93344":"### 4.3. Random Forrest Classifier\n\nO terceiro classificador a ser treinado \u00e9 o [Random Forrest Classifier](https:\/\/www.youtube.com\/watch?v=J4Wdy0Wc_xQ). Para tal, \u00e9 utilizada a biblioteca do sklearn [RandomForestClassifier](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html).","2cf0c55d":"### 5.3. Random Forrest Classifier","875f83b3":"Oberva-se que h\u00e1 diversas linhas com um termo n\u00e3o preenchido. Como elas representam apenas 10% de uma base de 32.000 dados, \u00e9 poss\u00edvel remover tais linhas sem muitas repercurs\u00f5es, uma vez que o classificador a ser desenvolvido \u00e9 o KNN.","c6831178":"# PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es\n\n## Compara\u00e7\u00e3o de classificadores do *Adult database*\n\n### Francisco Kim Gaieski - 9350348\n\nAs primeiras se\u00e7\u00f5es do trabalho s\u00e3o retiradas do primeiro Exerc\u00edcio programa. Em que constam com a mesma importa\u00e7\u00e3o dos dados, an\u00e1lise do banco de dados e seu tratamento, baseados na remo\u00e7\u00e3o de dados duplicados e atributos desnecess\u00e1rios. Assim, a compara\u00e7\u00e3o dos classificadores s\u00e3o discutidos na se\u00e7\u00e3o 4.","cc9de7a8":"Observando ent\u00e3o a \u00faltima linha, h\u00e1 apenas alguns features de alta relev\u00e2ncia em rela\u00e7\u00e3o \u00e0 renda anual. Entre elas, est\u00e3o: *age*, *education.num*, *sex*, *capital.gain*, *capital.loss* e *hours.per.week*.","54b8f822":"\u00c9 poss\u00edvel observar ent\u00e3o que o *DataFrame* \u00e9 composto por 15 vari\u00e1veis (colunas) para 32560 pessoas com *id* \u00fanicos (linhas). Dentre as vari\u00e1veis, h\u00e1 a renda anual (*income*) que ser\u00e1 a base de previs\u00e3o do classificador do trabalho. Observa-se tamb\u00e9m pelo cabe\u00e7alho dos dados que h\u00e1 6 vari\u00e1veis num\u00e9ricas e 8 baseadas em letras que para seu trabalho no classificador ser\u00e1 necess\u00e1rio uma manipula\u00e7\u00e3o.","392176e2":"### 3. Tratamentos dos dados\n\nUma vez sabido as rela\u00e7\u00f5es dos dados em quest\u00e3o \u00e0 vari\u00e1vel de renda, come\u00e7a-se o tratamento dos dados. Come\u00e7ado ent\u00e3o pela sua limpeza.","56cc62e7":"### 5.4. Rede Neural","ceb4cd79":"### 2.2 Dados de categoria\n\nPara os dados de categoria, ou seja, aqueles que n\u00e3o possuem valores num\u00e9ricos, ser\u00e1 utilizado o gr\u00e1fico do tipo barra. Ser\u00e1 ent\u00e3o comparados as diferentes vari\u00e1veis em rela\u00e7\u00e3o \u00e0 vari\u00e1vel renda.","20f19f47":"### 1. Importa\u00e7\u00e3o de dados\n\nPrimeiramente para o trabalho com o banco de dados, ser\u00e1 utilizada as bibliotecas [numpy](https:\/\/numpy.org), para realizar c\u00e1lculos em *arrays*, e [pandas](https:\/\/pandas.pydata.org) para manipula\u00e7\u00e3o de dados tabulares, como o *DataFrame* *adult* a ser importado neste trabalho."}}