{"cell_type":{"f805d86e":"code","3f815ddd":"code","56287e4e":"code","5e24f214":"code","8336d13b":"code","595aff6b":"code","02dab16b":"code","5c53ca7c":"code","0f96b201":"code","a032ffae":"code","2279edb3":"code","d19daddf":"code","1fd4b7e0":"code","27fd1587":"code","2311bd48":"code","240a2b31":"code","01eb7ca4":"code","c711adf4":"code","777ea235":"code","747ee029":"code","17220a5b":"code","61d1c882":"code","3d4d7cf3":"code","1d37c36b":"code","579d0927":"code","24fdca15":"code","6b8baf77":"code","dd520300":"code","8c893cff":"code","2948c944":"code","34d9e4dc":"code","2bdcf12f":"code","32ba20c6":"code","c5790cb7":"code","2ac75ead":"markdown","f3c8e4eb":"markdown","5b620d22":"markdown","551e5e80":"markdown","9dd6677c":"markdown","f52f4302":"markdown","e73f0201":"markdown"},"source":{"f805d86e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import KFold\n\n\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_columns', None)\n\n\ndata = pd.read_csv('..\/input\/housingpricesclasseswbs\/housing-classification-iter6.csv')","3f815ddd":"data.head(5)","56287e4e":"data.info()","5e24f214":"data[data.columns[data.isna().sum() > 0]].isna().mean()*100","8336d13b":"data.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature','Id'], inplace=True, axis=1)\ndata[data.columns[data.isna().sum() > 0]].isna().mean()*100","595aff6b":"x=data.drop('Expensive', axis=1)\ny=data['Expensive']","02dab16b":"for i in x.columns:\n    if(x[i].dtype!='object'):\n        sns.boxplot(x[i])\n        plt.title(i)\n        plt.show()","5c53ca7c":"for i in x.columns:\n    if(x[i].dtype!='object'):\n        value_z=(x[i]-x[i].mean())\/(x[i].std())\n        sns.distplot(value_z)\n        plt.show()","0f96b201":"x[x.columns[x.isna().sum() > 0]]","a032ffae":"x[x.columns[x.isna().sum() > 0]].hist(figsize=(20,20))","2279edb3":"numerical=['LotFrontage','MasVnrArea','GarageYrBlt']\nfor i in numerical:\n    x[i]=x[i].fillna(x[i].median())\n    \ncategorical=['MasVnrType','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Electrical','GarageType','GarageFinish','GarageQual','GarageCond']\nfor i in categorical:\n    x[i]=x[i].fillna(x[i].mode()[0])\nx[x.columns[x.isna().sum() > 0]].isna().mean()*100","d19daddf":"x_en=pd.get_dummies(x,drop_first=True)\nx_en.head()","1fd4b7e0":"mm_scaler=MinMaxScaler()\nx_scaled=pd.DataFrame(mm_scaler.fit_transform(x_en), columns=x_en.columns)\nx_scaled.head()","27fd1587":"\ny_scaled = y","2311bd48":"selected_list=['LotFrontage', 'LotArea', 'OverallQual', 'YearBuilt', 'YearRemodAdd',\n       'BsmtFinSF1', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'GrLivArea',\n       'TotRmsAbvGrd', 'GarageCars', 'GarageArea', 'MoSold', 'CentralAir_Y']\nx_selected=x_scaled[selected_list]\nx_selected.head()","240a2b31":"x_features=x_selected.columns\nx_features","01eb7ca4":"model=RandomForestClassifier(n_estimators=50,criterion='entropy',max_depth=5)","c711adf4":"model.fit(x_selected,y)","777ea235":"param_grid = { \n    'n_estimators': [200, 500],\n    'max_depth' : [4,5,6,7,8],\n    'criterion' :['gini', 'entropy']\n}","747ee029":"cv_model = GridSearchCV(estimator=model, param_grid=param_grid, cv= 5)\ncv_model.fit(x_selected, y)","17220a5b":"test=pd.read_csv('..\/input\/housingpricesclasseswbs\/test.csv')\ntest.shape","61d1c882":"Id_pred=test['Id']\ntest.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature','Id'], inplace=True, axis=1)\ntest_en=pd.get_dummies(test,drop_first=True)\ntest_en.shape","3d4d7cf3":"result_test= x_en.append(test_en, sort=False)\nresult_test.shape","1d37c36b":"test_en_2=result_test[1460:2919]\ntest_en_2.shape","579d0927":"test_en_2[test_en_2.columns[test_en_2.isna().sum() > 0]].isna().mean()*100","24fdca15":"list_test=['Utilities_NoSeWa','Condition2_RRAe','Condition2_RRAn','Condition2_RRNn','HouseStyle_2.5Fin','RoofMatl_CompShg','RoofMatl_Membran','RoofMatl_Metal','RoofMatl_Roll','Exterior1st_ImStucc','Exterior1st_Stone','Exterior2nd_Other','Heating_GasA','Heating_OthW','Electrical_Mix','GarageQual_Fa']\nfor i in list_test:\n    test_en_2[i]=test_en_2[i].fillna(0)\ntest_en_2[test_en_2.columns[test_en_2.isna().sum() > 0]].isna().mean()*100","6b8baf77":"numerical=['LotFrontage','MasVnrArea','BsmtFinSF1','BsmtFinSF2','BsmtUnfSF','TotalBsmtSF','BsmtFullBath','BsmtHalfBath','GarageYrBlt','GarageCars','GarageArea']\nfor i in numerical:\n    test_en_2[i]=test_en_2[i].fillna(test_en_2[i].median())\ntest_en_2[test_en_2.columns[test_en_2.isna().sum() > 0]].isna().mean()*100","dd520300":"test_scaled = pd.DataFrame(mm_scaler.transform(test_en_2), columns=test_en_2.columns)\ntest_scaled.head()","8c893cff":"test_selected=test_scaled[x_features]\ntest_selected.head()","2948c944":"ypred_scale=model.predict(test_selected)\nypred_scale=pd.DataFrame(ypred_scale)\nypred=target_scaler.inverse_transform(ypred_scale)\nypred","34d9e4dc":"pred_data=pd.DataFrame(ypred,columns=['Expensive'])\ntarget_pred=pd.concat([Id_pred,pred_data],axis=1)\ntarget_pred.head()","2bdcf12f":"target_pred['Expensive'] = target_pred['Expensive'].astype('int')","32ba20c6":"target_pred.to_csv(\"submission.csv\", index=False)\nprint(\"Submission was successfully saved!\")","c5790cb7":"accuracy_score(y[0:1459],ypred_scale)","2ac75ead":"## preaparing Test Data for prediction","f3c8e4eb":"# Define Model","5b620d22":"# Handle Missing Data","551e5e80":"## preprocessing Data","9dd6677c":"# Feature Selection","f52f4302":"## Normalized Data","e73f0201":"# Dummy Variable Encoding"}}