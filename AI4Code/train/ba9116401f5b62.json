{"cell_type":{"f1e64559":"code","34556e71":"code","89a51abd":"code","0379ef5e":"code","0e342074":"code","83bbfb89":"code","1ed1e742":"code","879d1627":"code","6c89b1d0":"code","87667ad5":"code","de553b05":"code","0915db0d":"code","40d07107":"code","a2183534":"code","07c3286a":"code","382a0ea5":"code","a781d6d0":"code","01f86c34":"code","16ecbf68":"code","06ab698e":"code","9db086e8":"code","af7edd00":"code","debf973b":"code","87dd854e":"code","9f510b42":"code","0c403c99":"code","808f79a2":"code","45d86aef":"code","f45a5aa4":"code","6bf90082":"code","aa6696e9":"code","0feaaafc":"code","e6b2347d":"code","13fe87aa":"code","c8f959ec":"code","dea2d288":"markdown","add75e87":"markdown","ddc5acb7":"markdown","78aa262f":"markdown","7a656d5c":"markdown","6ae24cb5":"markdown","e1ea444f":"markdown","061dfd23":"markdown","7a5b0bd2":"markdown","5eb9cdda":"markdown","e15d1938":"markdown","9ae1b07a":"markdown","614bde07":"markdown","d1f2b21c":"markdown","f8ac744f":"markdown","cea73807":"markdown","2478d022":"markdown","8a71bbac":"markdown","0dfbe2c2":"markdown","d1eb8387":"markdown","0cf6d94a":"markdown","656d75cb":"markdown"},"source":{"f1e64559":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)","34556e71":"iris = pd.read_csv('..\/input\/iris\/Iris.csv')\niris.drop(['Id'], axis=1, inplace=True)\niris.rename(columns={'SepalLengthCm': 'sepal_length', 'SepalWidthCm': 'sepal_width', 'PetalLengthCm': 'petal_length', 'PetalWidthCm': 'petal_width', 'Species': 'label'}, inplace=True)\niris.head()","89a51abd":"wine_reviews = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv', index_col=0)\nwine_reviews.head()","0379ef5e":"trace1 = go.Scatter(\n    y = iris.sepal_length,\n    mode = 'lines+markers',\n    line = dict(\n        color = 'rgb(255, 53, 53)',\n        width=3\n    )\n)\n\nlayout = go.Layout(\n    title = 'Sepal Length',\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","0e342074":"iplot({\n    'data':[{'y': iris.sepal_length, 'mode': 'lines', 'line':dict(color = 'rgb(52, 127, 255)', width=3)}],\n    'layout': {'title': 'Sepal Length'}\n})","83bbfb89":"trace1 = go.Scatter(\n    y = iris.sepal_length,\n    mode = 'lines',\n    name='Sepal Length'\n)\n\ntrace2 = go.Scatter(\n    y = iris.sepal_width,\n    mode = 'lines',\n    name='Sepal Width'\n)\n\nlayout = go.Layout(\n    title = 'Sepal Length and Width',\n)\n\nfig = go.Figure(data=[trace1, trace2], layout=layout)\n\niplot(fig)","1ed1e742":"columns = iris.drop(['label'], axis=1).columns\n\niplot({\n    'data': [{'y': iris[col], 'name':col} for col in columns],\n    'layout': {'title': 'Iris dataset'}\n})","879d1627":"trace1 = go.Scatter(\n    x = iris.sepal_width,\n    y = iris.sepal_length,\n    mode = 'markers',\n)\n\nlayout = go.Layout(\n    title = 'Sepal Length and Width',\n    xaxis = dict(\n        title = 'Sepal Width'\n    ),\n    yaxis = dict(\n        title = 'Sepal Length'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","6c89b1d0":"trace1 = go.Scatter(\n    x = wine_reviews.head(1000)['points'], \n    y = wine_reviews.head(1000)['price'], \n    mode = 'markers'\n)\n\nlayout = go.Layout(\n    title = 'Wine Prices',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Price'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","87667ad5":"trace1 = go.Scatter(\n    x = wine_reviews.head(1000)['points'], \n    y = wine_reviews.head(1000)['price'], \n    mode = 'markers',\n    marker = dict(\n        size=10,\n        color = 'rgba(152, 0, 0, 0.8)',\n        line = dict(\n            width=1\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Prices',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Price'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","de553b05":"trace1 = go.Scatter(\n    x = wine_reviews.head(1000)['points'], \n    y = wine_reviews.head(1000)['price'], \n    mode = 'markers',\n    marker = dict(\n        size=10,\n        color = 'rgba(152, 0, 0, 0.8)',\n        line = dict(\n            width=1\n        )\n    ),\n    text = wine_reviews.title\n)\n\nlayout = go.Layout(\n    title = 'Wine Prices',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Price'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","0915db0d":"data = wine_reviews['points'].value_counts()\n\ntrace1 = go.Bar(\n    x = data.index,\n    y = data.values,\n    marker = dict(\n        color = 'rgb(237, 85, 103)',\n        line = dict(\n            color='rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Points Frequency',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Frequency'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","40d07107":"data = wine_reviews['country'].value_counts()[:5]\n\ntrace1 = go.Bar(\n    x = data.index,\n    y = data.values,\n    marker = dict(\n        color = 'rgb(84, 237, 181)',\n        line = dict(\n            color='rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Top 5 producing Countries',\n    xaxis = dict(\n        title = 'Country'\n    ),\n    yaxis = dict(\n        title = 'Frequency'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","a2183534":"data = iris.groupby('label').mean()\ndata.head()","07c3286a":"traces = [go.Bar(\n    x = data.index,\n    y = data[col],\n    name = col,\n    marker = dict(\n        line = dict(\n            color = 'rgb(0, 0, 0)',\n            width = 2\n        )\n    )\n) for col in data.columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset',\n    xaxis = dict(\n        title = 'Species',\n    ),\n    yaxis = dict(\n        title = 'Length\/Width in Cm'\n    )\n)\n\nfig = go.Figure(data=traces, layout=layout)\n\niplot(fig)","382a0ea5":"traces = [go.Bar(\n    x = data[col],\n    y = data.index,\n    orientation = 'h',\n    name = col,\n    marker = dict(\n        line = dict(\n            color = 'rgb(0, 0, 0)',\n            width = 2\n        )\n    )\n) for col in data.columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset',\n    xaxis = dict(\n        title = 'Length\/Width in Cm'\n    ),\n    yaxis = dict(\n        title = 'Species'\n    )\n)\n\nfig = go.Figure(data=traces, layout=layout)\n\niplot(fig)","a781d6d0":"traces = [go.Bar(\n    x = data.index,\n    y = data[col],\n    name = col,\n    marker = dict(\n        line = dict(\n            color = 'rgb(0, 0, 0)',\n            width = 2\n        )\n    )\n) for col in data.columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset',\n    barmode = 'stack',\n    xaxis = dict(\n        title = 'Species',\n    ),\n    yaxis = dict(\n        title = 'Length\/Width in Cm'\n    )\n)\n\nfig = go.Figure(data=traces, layout=layout)\n\niplot(fig)","01f86c34":"data = wine_reviews['points']\n\ntrace1 = go.Histogram(\n    x = data,\n    marker = dict(\n        color = 'rgb(51, 83, 214)',\n        line = dict(\n            color='rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Points Frequency',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Frequency'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","16ecbf68":"data = wine_reviews['points']\n\ntrace1 = go.Histogram(\n    x = data,\n    xbins = dict(\n        start = 80,\n        end = 100,\n        size=5\n    ),\n    marker = dict(\n        color = 'rgb(51, 83, 214)',\n        line = dict(\n            color='rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Points Frequency',\n    xaxis = dict(\n        title = 'Points'\n    ),\n    yaxis = dict(\n        title = 'Frequency'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","06ab698e":"data = wine_reviews['price']\n\ntrace1 = go.Histogram(\n    x = data,\n    xbins = dict(\n        start = 0,\n        end = 150,\n        size=25\n    ),\n    marker = dict(\n        color = 'rgb(237, 166, 14)',\n        line = dict(\n            color='rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Price Frequencies',\n    xaxis = dict(\n        title = 'Price'\n    ),\n    yaxis = dict(\n        title = 'Frequency'\n    )\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","9db086e8":"data = wine_reviews['country'].value_counts()[:5]\n\ntrace1 = go.Pie(\n    values = data.values,\n    labels = data.index\n)\n\nlayout = go.Layout(\n    title = 'Top 5 Wine Producing Countries'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","af7edd00":"data = wine_reviews['points'][(wine_reviews['points']>=90) & (wine_reviews['points']<=95)].value_counts()\n\ncolors = ['#FEBFB3', '#E1396C', '#96D38C', '#D0F9B1', '#fcbb2f'] \n\ntrace1 = go.Pie(\n    values = data.values,\n    labels = data.index,\n    hoverinfo = 'label+percent+value',\n    textinfo = 'value',\n    textfont = dict(\n        size=20\n    ),\n    marker = dict(\n        colors = colors,\n        line = dict(\n            color = 'rgb(0, 0, 0)',\n            width=2\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Wine Point Frequency'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","debf973b":"data = [go.Box(\n    y = iris[col],\n    name = col\n) for col in iris.drop(['label'], axis=1).columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset Distribution'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","87dd854e":"data = [go.Box(\n    x = iris[col],\n    name = col\n) for col in iris.drop(['label'], axis=1).columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset Distribution'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","9f510b42":"wines = wine_reviews['variety'].value_counts().index[:5]\ndata = [wine_reviews['price'][(wine_reviews['variety']==wine) & (wine_reviews['price']<300)] for wine in wines]\n\ndata = [go.Box(\n    y = col,\n    name = wines[i],\n    boxpoints = 'outliers'\n) for i, col in enumerate(data)]\n\nlayout = go.Layout(\n    title = 'Wine Kinds'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","0c403c99":"wines = wine_reviews['variety'].value_counts().index[:5]\ndata = [wine_reviews['price'][(wine_reviews['variety']==wine) & (wine_reviews['price']<300)] for wine in wines]\n\ndata = [go.Box(\n    y = col,\n    name = wines[i],\n    boxpoints = False\n) for i, col in enumerate(data)]\n\nlayout = go.Layout(\n    title = 'Wine Kinds'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","808f79a2":"data = [go.Violin(\n    y = iris[col],\n    name = col\n) for col in iris.drop(['label'], axis=1).columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset Distribution'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","45d86aef":"data = [go.Violin(\n    y = iris[col],\n    name = col,\n    box = dict(\n        visible = True\n    ),\n    meanline = dict(\n        visible = True\n    )\n) for col in iris.drop(['label'], axis=1).columns]\n\nlayout = go.Layout(\n    title = 'Iris Dataset Distribution'\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","f45a5aa4":"x, y, z = np.random.multivariate_normal(np.array([0,0,0]), np.eye(3), 400).transpose()\n\ntrace1 = go.Scatter3d(\n    x = x,\n    y = y,\n    z = z,\n    mode = 'markers',\n    marker = dict(\n        size = 12,\n        color = z,\n        colorscale = 'Viridis',\n        opacity = 0.8\n    )\n)\n\nlayout = go.Layout(\n    title = '3D Scatter Plot'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","6bf90082":"x, y, z = np.random.multivariate_normal(np.array([0,0,0]), np.eye(3), 20).transpose()\n\ntrace1 = go.Scatter3d(\n    x = x,\n    y = y,\n    z = z,\n    mode = 'lines+markers',\n    line = dict(\n        width = 3,\n    ),\n    marker = dict(\n        size = 6,\n        color = z,\n        colorscale = 'Viridis',\n        opacity = 0.8\n    )\n)\n\nlayout = go.Layout(\n    title = '3D Line Plot'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","aa6696e9":"trace1 = go.Heatmap(\n    z=np.array(iris.drop(['label'], axis=1).corr()),\n    x = iris.drop(['label'], axis=1).columns,\n    y = iris.drop(['label'], axis=1).columns,\n    colorscale = 'Viridis'\n)\n\nlayout = go.Layout(\n    title = 'Heatmap'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","0feaaafc":"trace1 = go.Scatter(\n    y = iris.sepal_length,\n    mode = 'lines',\n    name = 'Sepal Length'\n)\n\ntrace2 = go.Scatter(\n    y = iris.sepal_width,\n    mode = 'lines',\n    name = 'Sepal Width',\n    xaxis = 'x2',\n    yaxis = 'y2'\n)\n\ntrace3 = go.Scatter(\n    y = iris.petal_length,\n    mode = 'lines',\n    name = 'Petal Length',\n    xaxis = 'x3',\n    yaxis = 'y3'\n)\n\ntrace4 = go.Scatter(\n    y = iris.petal_width,\n    mode = 'lines',\n    name = 'Petal Width',\n    xaxis = 'x4',\n    yaxis = 'y4'\n)\n\ndata = [trace1, trace2, trace3, trace4]\n\nlayout = go.Layout(\n    xaxis = dict(\n        domain = [0, 0.45]\n    ),\n    yaxis = dict(\n        domain = [0, 0.45]\n    ),\n    xaxis2 = dict(\n        domain = [0.55, 1]\n    ),\n    xaxis3 = dict(\n        domain = [0, 0.45],\n        anchor = 'y3'\n    ),\n    xaxis4 = dict(\n        domain = [0.55, 1],\n        anchor = 'y4'\n    ),\n    yaxis2 = dict(\n        domain = [0, 0.45],\n        anchor = 'x2'\n    ),\n    yaxis3 = dict(\n        domain = [0.55, 1]\n    ),\n    yaxis4 = dict(\n        domain = [0.55, 1],\n        anchor = 'x4'\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","e6b2347d":"from plotly import tools\n\ntrace1 = go.Scatter(\n    y = iris.sepal_length,\n    mode = 'lines',\n    name = 'Sepal Length'\n)\n\ntrace2 = go.Scatter(\n    y = iris.sepal_width,\n    mode = 'lines',\n    name = 'Sepal Width',\n)\n\ntrace3 = go.Scatter(\n    y = iris.petal_length,\n    mode = 'lines',\n    name = 'Petal Length',\n)\n\ntrace4 = go.Scatter(\n    y = iris.petal_width,\n    mode = 'lines',\n    name = 'Petal Width',\n)\n\nfig = tools.make_subplots(rows=2, cols=2, subplot_titles=('Sepal Length', 'Sepal Width', 'Petal Length', 'Petal Width'))\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\n\nfig['layout'].update(title='Iris Dataset')\n\niplot(fig)","13fe87aa":"trace1 = go.Splom(\n    dimensions=[\n        dict(\n            label='sepal length',\n            values=iris['sepal_length']\n        ),\n        dict(\n            label='sepal width',\n            values=iris['sepal_width']\n        ),\n        dict(\n            label='petal length',\n            values=iris['petal_length']\n        ),\n        dict(\n            label='petal width',\n            values=iris['petal_width']\n        ) \n    ],\n    text = iris.label\n)\n\naxis = dict(\n    showline=True,\n    zeroline=False,\n    gridcolor='#fff',\n    ticklen=4\n)\n\nlayout = go.Layout(\n    title='Iris Data set',\n    dragmode='select',\n    width=600,\n    height=600,\n    autosize=False,\n    hovermode='closest',\n    plot_bgcolor='rgba(240,240,240, 0.95)',\n    xaxis1=dict(axis),\n    xaxis2=dict(axis),\n    xaxis3=dict(axis),\n    xaxis4=dict(axis),\n    yaxis1=dict(axis),\n    yaxis2=dict(axis),\n    yaxis3=dict(axis),\n    yaxis4=dict(axis)\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\niplot(fig)","c8f959ec":"data = wine_reviews['country'].replace(\"US\", \"United States\").value_counts()\n\ntrace1 = go.Choropleth(\n    locationmode = 'country names',\n    locations = data.index.values,\n    text = data.index,\n    z = data.values\n)\n\nlayout = go.Layout(\n    title = 'Wine Production Worldmap'\n)\n\nfig = go.Figure(data=[trace1], layout=layout)\n\niplot(fig)","dea2d288":"<a id=\"7\"><\/a> \n## 7. Box Plot","add75e87":"<a id=\"8\"><\/a> \n## 8. Violin Plot","ddc5acb7":"<a id=\"6\"><\/a> \n## 6. Pie Chart","78aa262f":"We can change the bin size:","7a656d5c":"Plot all columns in the dataframe (all besides the label column)","6ae24cb5":"<a id=\"2.1\"><\/a> \n### 2.1 Single Line","e1ea444f":"<a id=\"11\"><\/a> \n## 11. Subplots","061dfd23":"Adding on hover data labels","7a5b0bd2":"<a id=\"2.2\"><\/a> \n### 2.2 Multiple Lines","5eb9cdda":"<a id=\"2\"><\/a> \n## 2. Line Charts","e15d1938":"<a id=\"12\"><\/a> \n## 12. Scatterplot Matrix","9ae1b07a":"## ...","614bde07":"<a id=\"1\"><\/a> \n## 1. Loading in Datasets","d1f2b21c":"<a id=\"10\"><\/a> \n## 10. Heatmap","f8ac744f":"# Plotly Introduction\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/3\/37\/Plotly-logo-01-square.png\/220px-Plotly-logo-01-square.png)\n\nPlotly's Python libary is an graphing libary which allows you to make highly interactive graphs. \n\nContent:\n1. [Loading in Datasets](#1)\n2. [Line Charts](#2)  \n    2.1 [Single Line](#2.1)  \n    2.2 [Multiple Lines](#2.2)\n3. [Scatter Plot](#3)\n4. [Bar Charts](#4)  \n5. [Histogram](#5)\n6. [Pie Chart](#6)\n7. [Box Plot](#7)\n8. [Violin Plot](#8)\n9. [3D Plots](#9)\n10. [Heatmap](#10)\n11. [Subplots](#11)\n12. [Scatterplot Matrix](#12)\n13. [Map](#13)","cea73807":"Hard way:","2478d022":"<a id=\"5\"><\/a> \n## 5. Histogram","8a71bbac":"We can style our scatter plot:","0dfbe2c2":"<a id=\"13\"><\/a> \n## 13. Map","d1eb8387":"<a id=\"9\"><\/a> \n## 9. 3D Plots","0cf6d94a":"<a id=\"3\"><\/a> \n## 3. Scatter Plot","656d75cb":"<a id=\"4\"><\/a> \n## 4. Bar Charts"}}