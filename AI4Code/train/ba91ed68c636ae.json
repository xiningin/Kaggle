{"cell_type":{"58249302":"code","25b8cc9a":"code","b0e183b4":"code","6356ee33":"code","cd12e740":"code","59ebd21e":"code","4789fc6a":"code","e1d2face":"code","67983aa1":"code","f4c08182":"code","3273540d":"code","83aba056":"code","a179ee27":"code","0d11d595":"code","f9ef0b3a":"code","02aadf9b":"code","42bee091":"code","f739f04a":"code","8ea7955c":"code","d70bced2":"code","8b39eb49":"markdown"},"source":{"58249302":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","25b8cc9a":"import pandas as pd\nimport matplotlib.pyplot as plt, matplotlib.image as mpimg\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPClassifier\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","b0e183b4":"data_train=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndata_predction=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","6356ee33":"data_train.describe()","cd12e740":"data_train.head()","59ebd21e":"data_predction","4789fc6a":"sns.displot(data=data_train['label'],  kde=True)\n","e1d2face":"sns.displot(data=data_train['label'], kind=\"kde\")\n","67983aa1":"import math\n# plot the first 25 digits in the training set. \nf, ax = plt.subplots(5, 5)\n# plot some 4s as an example\nfor i in range(1,26):\n    # Create a 1024x1024x3 array of 8 bit unsigned integers\n    data = data_train.iloc[i,1:785].values #this is the first number\n    nrows, ncols = 28, 28\n    grid = data.reshape((nrows, ncols))\n    n=math.ceil(i\/5)-1\n    m=[0,1,2,3,4]*5\n    ax[m[i-1], n].imshow(grid)","f4c08182":"y_train=data_train['label']\n","3273540d":"x_train=data_train.drop('label',axis=1)","83aba056":"x_train","a179ee27":"#Splitting data\n\nX_train, X_test, y_train, y_test = train_test_split(x_train, y_train, test_size=0.33, random_state=44, shuffle =True)","0d11d595":"#Splitted Data\nprint('X_train shape is ' , X_train.shape)\nprint('X_test shape is ' , X_test.shape)\nprint('y_train shape is ' , y_train.shape)\nprint('y_test shape is ' , y_test.shape)","f9ef0b3a":"#Applying MLPClassifier Model \nMLPClassifierModel = MLPClassifier(activation='tanh', \n                                   solver='adam',  \n                                   learning_rate='constant',\n                                   early_stopping= False,\n                                   alpha=0.0001 ,hidden_layer_sizes=(2500, ),random_state=33)\nMLPClassifierModel.fit(X_train,y_train)\n\n#Calculating Details\nprint('MLPClassifierModel Train Score is : ' , MLPClassifierModel.score(X_train, y_train))\nprint('MLPClassifierModel Test Score is : ' , MLPClassifierModel.score(X_test, y_test))\nprint('MLPClassifierModel loss is : ' , MLPClassifierModel.loss_)\nprint('MLPClassifierModel No. of iterations is : ' , MLPClassifierModel.n_iter_)\nprint('MLPClassifierModel No. of layers is : ' , MLPClassifierModel.n_layers_)\nprint('MLPClassifierModel last activation is : ' , MLPClassifierModel.out_activation_)\n","02aadf9b":"#Calculating Prediction\ny_pred = MLPClassifierModel.predict(X_test)\nprint('Predicted Value for MLPClassifierModel is : ' , y_pred[:10])\n\n","42bee091":"y_predction=MLPClassifierModel.predict(data_predction)\nprint('Predicted Value for MLPClassifierModel is : ' , y_predction[:10])","f739f04a":"#Calculating Confusion Matrix\nCM = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix is : \\n', CM)\n\n# drawing confusion matrix\nsns.heatmap(CM, center = True)\nplt.show()","8ea7955c":"#Calculating classification Report :  \nclassification_report(y_test, y_pred, labels=None, target_names=None,sample_weight=None, digits=2, output_dict=False)\n\nClassificationReport = classification_report(y_test,y_pred)\nprint('Classification Report is : ', ClassificationReport )","d70bced2":"df = pd.DataFrame(y_predction)\ndf.index.name='ImageId'\ndf.index+=1\ndf.columns=['Label']\ndf.to_csv('results.csv')\n","8b39eb49":"Read_data"}}