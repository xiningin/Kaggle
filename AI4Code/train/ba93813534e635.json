{"cell_type":{"6f5c8ebb":"code","539571a5":"code","949544b5":"code","1210f7df":"code","c4a86875":"code","3f34c9ef":"code","86bb6b64":"code","dee19879":"code","acf87fd2":"code","8f611ffb":"code","cb2bc5b7":"code","14c924ab":"code","c9af8134":"code","63d83a6e":"code","acf33510":"code","c2dafcd9":"code","23ff93ef":"code","b32cb9fb":"code","b426e092":"code","16976d7e":"code","6b8cbae1":"code","7aaa08c6":"code","b1a06574":"code","48d84398":"code","72a22751":"code","20dddaa0":"code","20e7a1dd":"code","33a97403":"code","60f74825":"code","f3a71a71":"code","2bd24cad":"code","b6a3a57b":"code","dada09dc":"code","83a3e791":"code","c10c8415":"code","c4eb4515":"code","04b3b75c":"code","811726e0":"code","cf5c8006":"code","805d2d5d":"code","ca8feba7":"code","e4ff1b30":"code","94e65723":"code","6350bff3":"code","bdb84bc9":"code","871b8e2e":"code","dfe55b9b":"code","c14ccfd0":"code","4bbfccf0":"code","e2af081c":"code","e108f210":"code","719dba99":"code","a8faa41c":"code","172f6980":"code","ece3bbfe":"code","636b7813":"code","313a75cd":"markdown"},"source":{"6f5c8ebb":"## \u5b66\u4e60\u7684\u6838\u5fc3\u76ee\u7684\u5c31\u662f\u6539\u5584\u6027\u80fd\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b66\u4e60\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e3\u4e2a\u7279\u5f81\uff1a\u4efb\u52a1\u7684\u7c7b\u578b\u3001\u8861\u91cf\u4efb\u52a1\u6027\u80fd\u63d0\u5347\u7684\u6807\u51c6\u3001\u4ee5\u53ca\u83b7\u53d6\n## \u7ecf\u9a8c\u7684\u6765\u6e90\uff0c\u673a\u5668\u5b66\u4e60\u63d0\u4f9b\u4e86\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u77e5\u8bc6\u7684\u65b9\u6cd5\u3002\n# \u6240\u8c13\u673a\u5668\u5b66\u4e60\uff0c\u5728\u5f62\u5f0f\u4e0a\uff0c\u5728\u6570\u636e\u5bf9\u8c61\u4e2d\u901a\u8fc7\u7edf\u8ba1\u6216\u63a8\u7406\u7684\u65b9\u6cd5\uff0c\u5bfb\u627e\u4e00\u4e2a\u6709\u5173\u8f93\u5165\u548c\u8f93\u51fa\u7684\u529f\u80fd\u51fd\u6570f","539571a5":"## \u673a\u5668\u5b66\u4e60\u4e09\u5927\u4efb\u52a1\uff1a\n#1\u3001\u5982\u4f55\u627e\u5230\u4e00\u7cfb\u5217\u7684\u51fd\u6570\u6765\u5b9e\u73b0\u9884\u671f\u529f\u80fd   \u5efa\u6a21\n#2\u3001\u5982\u4f55\u627e\u5230\u4e00\u7cfb\u5217\u6807\u51c6\u6765\u8bc4\u4ef7\u51fd\u6570\u7684\u597d\u574f\uff0c \u8bc4\u4ef7\n#3\u3001\u5982\u4f55\u5feb\u901f\u627e\u5230\u6027\u80fd\u6700\u4f18\u7684\u51fd\u6570\uff0c \u4f18\u5316\u95ee\u9898","949544b5":"##\u8bad\u7ec3\u96c6\u4e00\u822c\u8f93\u5165\u8f93\u51fa\u65f6\u8fde\u7eed\u51fa\u73b0\u7684\uff0c\n# \u5982\u679c\u53d8\u91cf\u5747\u4e3a\u8fde\u7eed\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u9884\u6d4b\u4efb\u52a1\u5c31\u79f0\u56de\u5f52\uff0c\u5982\u679c\u8f93\u51fa\u53d8\u91cf\u4e3a\u6709\u9650\u7684\u79bb\u6563\u53d8\u91cf\uff0c\u8fd9\u6837\u7684\u9884\u6d4b\u4efb\u52a1\u5c31\u662f\u5206\u7c7b ","1210f7df":"##\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets\n\ndigits=datasets.load_digits()\ndigital=digits.images[0]\nlabel=digits.target[0]\nprint(digital)\n\nprint(\"\\n Handwritten numerals:\",label)\nplt.axis()\nplt.imshow(digital,cmap=plt.get_cmap(\"gray_r\"))\nplt.show()","c4a86875":"### \u673a\u5668\u5b66\u4e60 \u5206\u4e3a\uff1a\u76d1\u7763\u3001\u975e\u76d1\u7763\u3001\u534a\u76d1\u7763\n# \u76d1\u7763\uff1a\u5b83\u4ece\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\u4e2d\u5b66\u4e60\u6a21\u578b\uff0c\u7136\u540e\u5bf9\u67d0\u4e2a\u7279\u5b9a\u7684\u65b0\u6570\u636e\u96c6\u7528\u6a21\u578b\u9884\u6d4b\u5b83\u7684\u6807\u7b7e","3f34c9ef":"### \u6709\u76d1\u7763\uff1a\u5c31\u662f\u5229\u7528\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\u5b66\u4e60\u5f97\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u6a21\u578b\u5bf9\u65b0\u6837\u672c\u8fdb\u884c\u9884\u6d4b\n## \u5bf9\u56de\u5f52\u95ee\u9898\u7684\u5b66\u4e60\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7b49\u4ef7\u4e8e\u51fd\u6570\u7684\u62df\u5408\uff0c\u5373\u5f62\u72b6\u4e00\u6761\u6a21\u578b\uff0c\u4f7f\u5176\u80fd\u5f88\u597d\u5730\u62df\u5408\u5df2\u77e5\u6570\u636e\uff0c\u5e76\u8f83\u597d\u5730\u9884\u6d4b\u672a\u77e5\u6570\u636e","86bb6b64":"## \u635f\u5931\u51fd\u6570\uff1a\u7ed9\u5b9a\u8f93\u5165X\uff0c\u76f8\u5e94\u7684\u8f93\u51faY\u4e0e\u53ef\u80fd\u4e0d\u4e00\u81f4\uff0c\u5b9a\u4e49\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u6765\u5ea6\u91cf\u8fd9\u4e24\u8005\u7684\u843d\u5dee,\n# \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff1b1\u30010-1 \u635f\u5931\u51fd\u6570\uff1b2\u3001\u7edd\u5bf9\u635f\u5931\u51fd\u6570\uff1b3\u3001\u5e73\u65b9\u635f\u5931\u51fd\u6570\uff1b4\u3001\u5bf9\u6570\u635f\u5931\u51fd\u6570","dee19879":"##\u975e\u76d1\u7763\uff1a K-means \u5747\u503c\u805a\u7c7b\u3001\u5c42\u6b21\u805a\u7c7b\u3001\u4e3b\u6210\u5206\u5206\u6790\uff08pCA\uff09\\DBSCAN\\ \u6df1\u5ea6\u4fe1\u5ff5\u7f51\u7edc","acf87fd2":"## \u534a\u76d1\u7763\uff1a \u4ee5\u201c\u5df2\u77e5\u7684\u8ba4\u77e5\u201d\u6269\u5927\u5230\u201c\u672a\u77e5\u7684\u9886\u57df\uff0c\u6838\u5fc3\u662f\uff1a\u76f8\u4f3c\u7684\u6837\u672c\u62e5\u6709\u76f8\u4f3c\u7684\u8f93\u51fa","8f611ffb":"## \u6a21\u578b\u6027\u80fd\u8bc4\u4f30\uff1a\n# \u6b20\u62df\u5408\uff1a\u5c31\u662f\u6837\u672c\u4e0d\u8db3\uff0c\u8bad\u7ec3\u4e0d\u7cbe\uff0c\u5f53\u5b83\u9762\u5bf9\u65b0\u4e8b\u7269\u505a\u9884\u6d4b\u65f6\uff0c\u9884\u6d4b\u6548\u679c\u4e0d\u597d\n# \u8fc7\u62df\u5408\uff1a\u201c\u4e00\u4e1d\u4e0d\u82df\u201d\u5730\u53cd\u6620\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u7279\u5f81\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u96c6\u4e2d\u8868\u73b0\u8fc7\u4e8e\u201c\u5353\u8d8a\u201d\uff0c","cb2bc5b7":"#\u6027\u80fd\u5ea6\u91cf\n# \u4e8c\u5206\u7c7b\u6df7\u6dc6\u77e9\u9635\n# \u67e5\u5168\u7387\uff1a\uff1a\u5206\u7c7b\u51c6\u786e\u7684\u6b63\u7c7b\u6837\u672c\u6570\u5360\u5168\u90e8\u6b63\u7c7b\u6837\u672c\u603b\u6570\u7684\u6bd4\u4f8b\n#  \u67e5\u51c6\u7387\uff1a\u88ab\u9884\u6d4b\u6b63\u786e\u7684\u6b63\u7c7b\u6837\u672c\u6570\u5360\u5206\u7c7b\u5668\u5224\u5b9a\u5668\u5224\u5b9a\u4e3a\u6b63\u7c7b\u6837\u672c\u603b\u6570\u7684\u6bd4\u4f8b\n#  F1 \u5206\u6570\n# P-R\u66f2\u7ebf\uff1a\u76f4\u89c2\u663e\u793a\u5206\u7c7b\u7b97\u6cd5\u5728\u6574\u4f53\u4e0a\u7684\u67e5\u51c6\u7387\u548c\u67e5\u5168\u7387\n# ROC \uff1a\u8bc4\u4f30\u4e0d\u540c\u4e8c\u5206\u7c7b\u7b97\u6cd5\u7684\u6027\u80fd\n#  AUC\uff1a\u201c\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\u201d\uff0cAUC \u5c31\u662fROC\u66f2\u7ebf\u4e0b\u9762\u7684\u9762\u79ef","14c924ab":"##  skearn \u57fa\u4e8enumpy \u548cscipy \n## \u673a\u5668\u5b66\u4e60\u6d41\u7a0b\uff1a\n# 1\u3001 \u6570\u636e\u5904\u7406\uff1b\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\uff1a \u5f52\u4e00\u5316\u3001\u6807\u51c6\u5316\u3001\u6b63\u5219\u5316\u3001\u5c5e\u6027\u7f29\u653e\u3001\u7279\u5f81\u7f16\u7801\u3001\u63d2\u8865\u7f3a\u5931\u503c\u3001\u751f\u6210\u591a\u9879\u5f0f\u7279\u5f81\n# 2\u3001\u5206\u5272\u6570\u636e\uff1a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u3001\u6d4b\u8bd5\u96c6\n# 3\u3001\u9488\u5bf9\u9009\u597d\u7684\u7279\u5f81\uff0c\u4f7f\u7528\u8bad\u7ec3\u6570\u636e\u6765\u6784\u5efa\u6a21\u578b\uff0c\u5373 \u62df\u5408\u6570\u636e\uff0c\u62df\u5408\u6700\u4f18\u7684\u62df\u5408\u53c2\u6570\uff0c\u8fd9\u91cc\u7684\u62df\u5408\u53c2\u6570\u4e3b\u8981\u6307\u4f7f\u7528\u5404\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6765\u5b66\u4e60\u6570\u636e\u4e2d\u7684\u7279\u5f81\uff0c\u62df\u5408\n# \u62df\u5408\u51fa\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u53c2\u6570\n# 4\u3001 \u9a8c\u8bc1\u6a21\u578b\uff1a\u4f7f\u7528\u9a8c\u8bc1\u96c6\u7684\u6570\u636e\u63a5\u5165\u6a21\u578b\uff0c\u5c06\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8868\u73b0\u4f5c\u4e3a\u6a21\u578b\u53c2\u6570\u4f18\u5316\u548c\u9009\u62e9\u7684\u4f9d\u636e\u3002\n# 5\u3001\u6d4b\u8bd5\u6a21\u578b\uff1a\u5728\u4f18\u5316\u4e86\u6a21\u578b\u7684\u53c2\u6570\u4e4b\u540e\uff0c\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u9a8c\u8bc1\u6a21\u578b\u7684\u8868\u73b0\uff0c\u53ef\u4ee5\u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd                            \n# \u4e00\u822c\u5c06\u6570\u636e\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u8bad\u7ec3\u96c6\uff1a\u8bad\u7ec3 \uff1b\u9a8c\u8bc1\u96c6\uff1a\u6a21\u578b\u7684\u4f18\u5316 \uff1b\u6d4b\u8bd5\u96c6\uff1a\u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u8bef\u5dee\uff0c\u4e0d\u53c2\u4e0e\u6a21\u578b\u7684\u4f18\u5316\n","c9af8134":"## sklearn \u529f\u80fd\u4e3b\u8981\n## \u5982\u679c\u8f93\u51fa\u7684\u9884\u6d4b\u53d8\u91cf\u662f\u79bb\u6563\u503c\uff0c\u53ef\u79f0\u4e4b\u4e3a\u5206\u7c7b\uff1aSVM\u3001\u6700\u8fd1\u90bb\u7b97\u6cd5\u3001Logistic \u56de\u5f52\u3001\u968f\u673a\u68ee\u6797\u3001\u51b3\u7b56\u6811\u3001\u591a\u5c42\u611f\u77e5\u5668\n## \u5982\u679c\u9884\u6d4b\u53d8\u91cf\u662f\u79bb\u6563\u503c\uff0c\u79f0\u4e4b\u4e3a\u56de\u5f52\uff1a\u7ebf\u6027\u56de\u5f52\u3001\u652f\u6301\u5411\u91cf\u56de\u5f52\uff08SVR\uff09\u3001\u5cad\u56de\u5f52\u3001Lasso\u56de\u5f52\u3001\u8d1d\u53f6\u65af\u56de\u5f52\n## \u805a\u7c7b\uff1a \u5c06\u76f8\u4f3c\u7684\u5bf9\u8c61\u81ea\u52a8\u5206\u7ec4\uff1a k \u5747\u503c\u3001\u8c31\u805a\u7c7b\uff0c\u5747\u503c\u6f02\u79fb\uff0c\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\uff1a\u5ba2\u6237\u7ec6\u5206\u3001\u5b9e\u9a8c\u7ed3\u679c\u5206\u7ec4\u3001\u6570\u636e\u538b\u7f29\n## \u6570\u636e\u964d\u7ef4\uff1a\u76ee\u7684\u5728\u4e8e\uff0c\u51cf\u5c11\u8981\u8003\u8651\u968f\u673a\u53d8\u91cf\u7684\u6570\u91cf\uff0c\u5e38\u89c1\u7684\u964d\u7ef4\u7b97\u6cd5\uff1a\u4e3b\u6210\u5206\u5206\u6790\u3001\u7279\u5f81\u9009\u62e9\u3001\u975e\u8d1f\u77e9\u9635\u5206\u89e3","63d83a6e":"## \u6a21\u578b\u7684\u9009\u62e9\uff1a\u8bc4\u4f30\u4e0e\u9a8c\u8bc1\u6a21\u578b\uff0c\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u9009\u62e9\u4e0e\u5e73\u8861\uff1a \u5ea6\u91cf\uff08metrics\uff09\u3001\u7f51\u683c\u641c\u7d22\uff08grid search\uff09\u3001\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u901a\u8fc7\u8c03\u6574\u6a21\u578b\u53c2\u6570\u6765\u63d0\u9ad8\u6a21\u578b\n## \u6027\u80fd\uff08\u9884\u6d4b\u51c6\u786e\u5ea6\u3001\u6cdb\u5316\u8bef\u5dee\uff09","acf33510":"import sklearn \nsklearn.__version__","c2dafcd9":"## \u7ebf\u6027\u56de\u5f52\n## \u6700\u5e38\u7528\u7684\u65b9\u6cd5\uff1a\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff1a\u9009\u62e9\u4e00\u4e9b\u672a\u77e5\u53c2\u6570\uff0c\u4ee5\u67d0\u79cd\u7b56\u7565\u4f7f\u5f97\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u5dee\u7684\u5e73\u65b9\u548c\u8fbe\u5230\u6700\u5c0f\uff0c\u5229\u7528\u6570\u503c\u8ba1\u7b97\u7684\u7684\u65b9\u6cd5\u8fdb\u884c\u6c42\u89e3\uff0c\n## \u5373\u5229\u7528\u4f18\u5316\u7b97\u6cd5\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u3001\u725b\u987f\u8fed\u4ee3\u6cd5 \u5feb\u901f\u903c\u8fd1\u6700\u4f18\u53c2\u6570","23ff93ef":"## \u4f7f\u7528sklean\u7684\u6570\u636e\u96c6\nfrom sklearn.datasets import  load_boston\nimport pandas as pd\nboston=load_boston()","b32cb9fb":"boston.keys()","b426e092":"boston.data","16976d7e":"boston.data[0][2]","6b8cbae1":"boston.data[0,2] ## \u7b2c0\u6761\u8bb0\u5f55\u7b2c2\u4e2a\u7279\u5f81\u503c","7aaa08c6":"boston.data.shape ## \u884c\u5217\u7ed3\u6784","b1a06574":"boston.data.shape[0]# \u884c","48d84398":"boston.data.shape[1]# \u5217","72a22751":"boston.target","20dddaa0":"boston.target.shape","20e7a1dd":"boston.target.shape[0]","33a97403":"boston.feature_names","60f74825":"print(boston.DESCR)","f3a71a71":"import pandas as pd\nbos=pd.DataFrame(boston.data)\nbos.head()","2bd24cad":"bos.columns=boston.feature_names  ## \u624b\u52a8\u6dfb\u52a0\u7279\u5f81\u540d\u79f0\nbos.head()","b6a3a57b":"bos[\"PRICE\"]=boston.target\nbos.head()","dada09dc":"X=bos.drop(\"PRICE\",axis=1) ## \u9664\u53bbprice\uff0c\u5269\u4e0b\u8d4b\u7ed9X\ny=bos[\"PRICE\"] ##","83a3e791":"X=boston.data\ny=boston.target","c10c8415":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)\n## \u5c06X\uff08\u7279\u5f81\uff09\u548cy(\u6807\u7b7e)\u5206\u5272\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5176\u4e2d\u6d4b\u8bd5\u96c6\u536030%\uff0crandom_state \u8868\u793a\u914d\u5408\u901f\u8bb0\u62bd\u53d6\u6570\u636e\u7684\u79cd\u5b50\uff0c \u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u96c6\u7684\u4e0d\u968f\u673a\n##\u53ef\u4ee5\u7406\u89e3\uff0c\u6bcf\u4e2a\u968f\u673a\u72b6\u6001\u90fd\u4ee3\u8868\u4e00\u6279\u4e0d\u540c\u7684\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u5982\u679c\u5b83\u7684\u503c\u4e0d\u53d8\uff0c\u65e0\u8bba\u7a0b\u5e8f\u8fd0\u884c\u591a\u5c11\u6b21\uff0c\u83b7\u53d6\u7684\u90fd\u662f\u56fa\u5b9a\u7684\u4e00\u6279\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n## X_train,X_test,y_train,y_test \uff1a\u8bad\u7ec3\u96c6\u7684\u7279\u5f81\u6570\u636e\u3001\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u6570\u636e\u3001\u8bad\u7ec3\u96c6\u7684\u6807\u7b7e\u6570\u636e\u3001\u6d4b\u8bd5\u96c6\u7684\u6807\u7b7e\u6570\u636e","c4eb4515":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_train.shape)","04b3b75c":"#\u5bfc\u5165\u7ebf\u6027\u6a21\u578b\nfrom sklearn.linear_model import LinearRegression\nLR=LinearRegression()\nLR.fit(X_train,y_train)  ## \u8bad\u7ec3\u6a21\u578b\ny_pred=LR.predict(X_test) ## \u6a21\u578b\u9884\u6d4b","811726e0":"print(\"w0=\",LR.intercept_)## \u622a\u8ddd","cf5c8006":"print(\"w=\",LR.coef_)  ##\u8f93\u51fa\u6bcf\u4e2a\u7279\u5f81\u7684\u6743\u503c\uff0c\u6bcf\u4e2a\u7279\u5f81\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u5916\u52a0\u4e00\u4e2a\u622a\u8ddd","805d2d5d":"## \u4fee\u6539\u7ed3\u679c\u7684\u683c\u5f0f\nimport numpy as np\nnp.set_printoptions(precision=3,suppress=True) ### precision \u63a7\u5236\u5c0f\u6570\u70b9\u540e\u9762\u6700\u591a\u663e\u793a\u7684\u6570\uff0csuppress=TRue \u53d6\u6d88\u79d1\u5b66\u8ba1\u6570\u6cd5\nprint(\"wo={0:.3f}\".format(LR.intercept_))\nprint(\"w={}\".format(LR.coef_))","ca8feba7":"import matplotlib.pyplot as plt \nimport numpy as np","e4ff1b30":"plt.scatter(y_test,y_pred)\nplt.xlabel(\"price: $Y_i$\")\nplt.ylabel(\"predicted price:$\\hat{Y}_i$\")\nplt.title(\"prices vs predicted price: $Y_i$ vs $\\hat{Y}_i$\" )\nx=np.arange(0,50)\ny=x\nplt.plot(x,y,color=\"red\",lw=4)\nplt.text(30,40,\"predict line\")\nplt.savefig(\"price.png\")","94e65723":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ndata=pd.concat([pd.Series(y_test),pd.Series(y_pred)],axis=1)\ndata.columns=[\"actual price\",\"pred price\"]\nsns.lmplot(x=\"actual price\",y=\"pred price\",ci=95,data=data) ## \u7f6e\u4fe1\u5ea6ci\nplt.show()","6350bff3":"## \u9884\u6d4b\u8bc4\u4f30\nfrom sklearn import metrics\nmse=metrics.mean_squared_error(y_test,y_pred)\nprint(mse)","bdb84bc9":"df=pd.DataFrame({\"actual price\":y_test,\"pred price\":y_pred})\ndf","871b8e2e":"data","dfe55b9b":"## \u6709\u76d1\u7763\u7684\u5206\u7c7b\u7b97\u6cd5\uff0ck-means \uff0c\u5f71\u54cd\u5176\u6027\u80fd\u7684\u56e0\u7d20\u5f88\u591a\uff0c\u6bd4\u9a84\u50b2\u4e3b\u8981\u7684\u6709\uff1ak\u7684\u9009\u53d6\u3001\u7279\u5f81\u6570\u636e\u7684\u5f52\u4e00\u5316\u3001\u90bb\u5c45\u805a\u7c7b\u7684\u5ea6\u91cf\u53ca\u5206\u7c7b\u539f\u5219\n##  \u5982\u679cK\u503c\u8f83\u5c0f\uff0c\u76f8\u5f53\u4e8e\u5229\u7528\u8f83\u5c0f\u90bb\u57df\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c","c14ccfd0":"## \u5f52\u4e00\u5316\nimport numpy as np \nX_train=np.array([6,2,24,-6,10])\nX_min,X_max=X_train.min(),X_train.max()\nprint(X_min,X_min)\nX_normal=(X_train-X_min)\/(X_max-X_min)\nprint(X_normal)","4bbfccf0":"from sklearn.preprocessing import MinMaxScaler ## \u4ee5\u5217\u8ba1\u7b97\uff0c\nimport numpy as np\nX_train = np.array([[6,2,24,1,35,43]]).reshape(-1,1)## -1 \u8868\u793a\uff1a\u8868\u793a\u5f53n-1\u7ef4\u5ea6\u7684\u4fe1\u606f\u786e\u5b9a\u540e\uff0c\u51b3\u5b9a\u8ba9\u7cfb\u7edf\u81ea\u52a8\u8ba1\u7b97\n##\u5269\u4f59 n \u7ef4\u6570\u503c\uff0c","e2af081c":"X_std=(X-X.min(axis=0))\/(X.max(axis=0)-X.min(axis=0))","e108f210":"X_train=np.array([[6,2,24,-6,10]]).T","719dba99":"min_max_sxaler=MinMaxScaler()","a8faa41c":"min_max_sxaler.fit(X_train)## \u6c42\u6700\u503c\uff0c\nMinMaxScaler(copy=True,feature_range=(0,1))\n","172f6980":"min_max_sxaler.transform(X_train)","ece3bbfe":"X_normal=min_max_sxaler.transform(X_train).T\nX_normal","636b7813":"min_max_sxaler.fit_transform(X_train).T","313a75cd":"## \u4e8b\u5b9e\u4e0a\uff0c\u673a\u5668\u5b66\u4e60\u5c31\u662f\u901a\u8fc7\u8bad\u7ec3\u5b66\u4e60\u5f97\u5230\u67d0\u4e2a\u6a21\u578b\uff0c\u7136\u540e\u671f\u671b\u67d0\u4e2a\u6a21\u578b\u4e5f\u80fd\u5f88\u597d\u7684\u5951\u5408\u65b0\u7684\u6837\u672c\uff0c\u8fd9\u79cd\u5951\u5408\uff08fill\uff09\u65b0\u6837\u672c\u7684\u80fd\u529b\uff0c\u4e5f\u79f0\u201c\u6cdb\u5316\u80fd\u529b\u201d"}}