{"cell_type":{"a038ba9c":"code","923c3bd2":"code","c46c92aa":"code","c9534cac":"code","d9526983":"code","35e23f79":"code","6e385f3a":"code","98b1f88b":"code","e26c9bd9":"code","bcc0128e":"code","fbc8a524":"code","cd5b686f":"code","153604de":"code","1757e445":"code","7644f142":"code","9b24f855":"code","23e11252":"code","08da95db":"code","311cfaeb":"code","87092a17":"code","5a86d8ea":"code","a4bc6513":"code","edd1f72c":"code","5ce795c2":"code","e74fdf87":"code","0d126b89":"code","c9e220c9":"code","0327f41b":"code","e2700386":"code","15ea4315":"code","524918d6":"code","376a3ca9":"code","5477ffc9":"code","9fa87165":"code","f3ea2425":"code","c747c28d":"code","7a379a0f":"code","e9c7a165":"code","cc790ea8":"code","77bfb130":"code","0e37ce32":"code","29b7e1af":"code","6a4f6047":"code","901e8d64":"code","6276ac1e":"code","293d75ca":"code","b2160865":"code","6d823c69":"code","a6656749":"code","b6b5d365":"code","66acd932":"code","440670fb":"code","5121e67d":"code","7376c30a":"code","60e0c171":"code","ba11e54c":"code","56f260ca":"code","4b2d545f":"code","961ca740":"code","72fafafe":"code","98957d3a":"code","ebe8a3a1":"markdown","3f8af814":"markdown","0beb20e6":"markdown","967e0a39":"markdown","d408b4ae":"markdown","e87d1505":"markdown","1c46c0f0":"markdown","e6d0457d":"markdown","89e6eca2":"markdown","767aee50":"markdown","4926bfc7":"markdown","45415fa9":"markdown","c4f0e327":"markdown","5c4dec4f":"markdown","8615192d":"markdown","e69eae87":"markdown","67baec48":"markdown","fdfa1836":"markdown","eaf9e1e8":"markdown","9e57ba24":"markdown","cca9229b":"markdown","02f09063":"markdown","af2aad9e":"markdown","fd4983d8":"markdown","31ac343c":"markdown","05796e31":"markdown","011f02e1":"markdown","87bf6137":"markdown","2b35a6fc":"markdown","6d9db362":"markdown","7b9ca9c7":"markdown","4e2ca459":"markdown","b01eb583":"markdown","cf97872d":"markdown","802c2c70":"markdown","8f0da4f8":"markdown","1829840e":"markdown","2d706786":"markdown","708aef6b":"markdown","c8da765f":"markdown","cd41a7b9":"markdown","ca60af9e":"markdown","75768671":"markdown","dfa75074":"markdown","bb3dc15e":"markdown","ae8aca33":"markdown","95c29efc":"markdown","8878f372":"markdown"},"source":{"a038ba9c":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport scipy as sp\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.linear_model import LinearRegression\nimport statsmodels\n\n%matplotlib inline\nimport cloudpickle","923c3bd2":"%%time\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","c46c92aa":"train.shape, test.shape","c9534cac":"train.columns, test.columns","d9526983":"print(set(train.columns)-set(test.columns))\nprint(set(test.columns)-set(train.columns))","35e23f79":"train.head()","6e385f3a":"test.head()","98b1f88b":"import sklearn.ensemble","e26c9bd9":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    types = [str(data[i].dtype) for i in data.columns]\n    \n    df = pd.DataFrame({'Total':total, 'Precent':percent, 'Types':types})\n    \n    return(sp.transpose(df))","bcc0128e":"%%time\nmissing_data(train)","fbc8a524":"%%time\nmissing_data(test)","cd5b686f":"%%time\ntrain.describe()","153604de":"%%time\ntest.describe()","1757e445":"sns.distplot(train['price']).set_title('price probability density function')\nplt.xticks(rotation=45)\nplt.show()","7644f142":"train['price'].skew(), train['price'].kurt()","9b24f855":"sns.distplot(sp.log1p(train['price'])).set_title('price pdf with using log scale')\nplt.show()","23e11252":"sp.log1p(train['price']).skew(), sp.log1p(train['price']).kurt()","08da95db":"f, axes = plt.subplots(1, 2, figsize=(12, 6))\nsp.stats.probplot(train['price'], plot=axes[0])\nsp.stats.probplot(sp.log1p(train['price']), plot=axes[1])\nplt.show()","311cfaeb":"train['price'] = sp.log1p(train['price'])","87092a17":"features = ['sqft_living', 'sqft_lot', 'sqft_above', 'sqft_basement', 'lat', 'long', 'sqft_living15', 'sqft_lot15']\nnrow=2; ncol=4\nf, axes = plt.subplots(nrow, ncol, figsize=(25,15))\nfor idx, feature in enumerate(features):\n    plt.subplot(nrow, ncol,idx+1)\n    sns.distplot(train[feature]).set_title(str(feature) + ' probability density function')\n    plt.xlabel(feature, fontsize=15)\nplt.show()","5a86d8ea":"features = ['date', 'bedrooms', 'bathrooms', 'floors', 'waterfront', 'view', 'condition', 'grade', 'yr_built', 'yr_renovated', 'zipcode']\nnrow=4; ncol=3\nf, axes = plt.subplots(nrow, ncol, figsize=(25,20))\nfor idx, feature in enumerate(features):\n    plt.subplot(nrow, ncol,idx+1)\n    sns.countplot(data=train, y=feature)\n    plt.ylabel(feature, fontsize=15)\n    plt.xticks(rotation=90)\nplt.show()","a4bc6513":"features = ['price', 'sqft_living', 'sqft_lot', 'sqft_above', 'sqft_basement', 'lat', 'long', 'sqft_living15', 'sqft_lot15']\npp = sns.pairplot(train[features], \n                  diag_kws=dict(shade=True), # \"diag\" adjusts\/tunes the diagonal plots\n                  diag_kind=\"kde\", # use \"kde\" for diagonal plots\n                  kind=\"reg\") # <== \ud83d\ude00 linear regression to the scatter plots\n\nfig = pp.fig \nfig.subplots_adjust(top=0.93, wspace=0.3)\nfig.suptitle('Continuous Variable Pairwise Plots', fontsize=15, fontweight='bold')\nplt.show()","edd1f72c":"corr = train[features].corr()\nfig, (ax) = plt.subplots(1, 1, figsize=(10,6))\n\nhm = sns.heatmap(corr, \n                 ax=ax,           # Axes in which to draw the plot, otherwise use the currently-active Axes.\n                 cmap=\"coolwarm\", # Color Map.\n                 square=True,    # If True, set the Axes aspect to \u201cequal\u201d so each cell will be square-shaped.\n                 annot=True, \n                 fmt='.2f',       # String formatting code to use when adding annotations.\n                 annot_kws={\"size\": 12},\n                 linewidths=.05)\n\nfig.subplots_adjust(top=0.93)\nfig.suptitle('Continuous Variable Correlation Heatmap', \n              fontsize=14, \n              fontweight='bold')\nplt.show()","5ce795c2":"train['date'] = train['date'].apply(lambda x: str(x)[:6])\ntrain['yr_built'] = train['yr_built'].apply(lambda x: str(x)[:3])\ntrain['yr_renovated'] = train['yr_renovated'].apply(lambda x: str(x)[:3])\ntrain['zipcode'] = train['zipcode'].apply(lambda x: str(x)[:4])","e74fdf87":"features = ['date', 'bedrooms', 'bathrooms', 'floors', 'waterfront', 'view', 'condition', 'grade', 'yr_built', 'yr_renovated', 'zipcode']\nnrow=4; ncol=3\nf, axes = plt.subplots(nrow, ncol, figsize=(25, 20))\nfor idx, feature in enumerate(features):\n    plt.subplot(nrow, ncol,idx+1)\n    sns.boxplot(data=train, x=feature, y='price') # violinplot\uacfc \ube44\uc2b7\n    ax.set_xlabel(feature, size=12, alpha=0.8)\n    ax.set_ylabel('Price', size=12, alpha=0.8)\n    plt.xticks(rotation=45)\nplt.show()","0d126b89":"corr = train.drop(columns='id').corr(method='spearman')\nfig, axes = plt.subplots(1, 1, figsize=(20,12))\n\nhm = sns.heatmap(corr, \n                 ax=axes,           # Axes in which to draw the plot, otherwise use the currently-active Axes.\n                 cmap=\"coolwarm\", # Color Map.\n                 square=True,    # If True, set the Axes aspect to \u201cequal\u201d so each cell will be square-shaped.\n                 annot=True, \n                 fmt='.2f',       # String formatting code to use when adding annotations.\n                 annot_kws={\"size\": 12},\n                 linewidths=.05)\n\nfig.subplots_adjust(top=0.93)\nfig.suptitle('Spearman Correlation Heatmap', \n              fontsize=14, \n              fontweight='bold')\nplt.show()","c9e220c9":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\ntrain['price'] = sp.log1p(train['price'])","0327f41b":"%%time\nfeatures = train.columns\nunique_max_train = []\nunique_max_test = []\nfor feature in features:\n    if feature == 'price':\n        values = train[feature].value_counts()\n        unique_max_train.append([feature, values.max(), values.idxmax()])\n    else:\n        values = train[feature].value_counts()\n        unique_max_train.append([feature, values.max(), values.idxmax()])\n        values = test[feature].value_counts()\n        unique_max_test.append([feature, values.max(), values.idxmax()])","e2700386":"sp.transpose((pd.DataFrame(unique_max_train, columns=['Feature', 'Max duplicates', 'Value'])).sort_values(by = 'Max duplicates', ascending=False))","15ea4315":"sp.transpose((pd.DataFrame(unique_max_test, columns=['Feature', 'Max duplicates', 'Value'])).sort_values(by = 'Max duplicates', ascending=False))","524918d6":"for df in [train, test]:\n    df['date'] = df['date'].apply(lambda x: str(x)[:6])\n    df['yr_built'] = df['yr_built'].apply(lambda x: str(x)[:3])\n    df['yr_renovated'] = df['yr_renovated'].apply(lambda x: str(x)[:3])\n    df['zipcode'] = df['zipcode'].apply(lambda x: str(x)[:4])","376a3ca9":"features = ['date', 'bedrooms', 'bathrooms', 'floors', 'waterfront', 'view', 'condition', 'grade', 'yr_built', 'yr_renovated', 'zipcode']\nfor feature in features:\n    train_dummy = pd.get_dummies(train[feature], columns=features)\n    train_dummy.columns = [feature +'_' + str(i) for i in train_dummy.columns]\n    train = pd.concat([train, train_dummy], axis=1)\n    train = train.drop(columns=feature)\n    test_dummy = pd.get_dummies(test[feature], columns=features)\n    test_dummy.columns = [feature +'_' + str(i) for i in test_dummy.columns]\n    test = pd.concat([test, test_dummy], axis=1)\n    test = test.drop(columns=feature)\ntrain = train.drop(columns='id')\ntest = test.drop(columns='id')","5477ffc9":"set(train.columns) - set(test.columns), set(test.columns) - set(train.columns)","9fa87165":"train = train.drop(columns=['bathrooms_7.5', 'bathrooms_7.75', 'bathrooms_8.0', 'grade_1'])\ntest = test.drop(columns=['bathrooms_6.5', 'bedrooms_11', 'bedrooms_33', 'yr_renovated_193'])\nset(train.columns) - set(test.columns), set(test.columns) - set(train.columns)","f3ea2425":"price = train['price']\ntrain = train.drop(columns='price')","c747c28d":"import statsmodels.api as sm","7a379a0f":"X = sm.add_constant(train)\nreg = sm.OLS(price, X.astype(float)).fit()","e9c7a165":"reg.summary()","cc790ea8":"result_pvalue = train.columns[reg.pvalues[1:]<0.00001]","77bfb130":"from statsmodels.stats.outliers_influence import variance_inflation_factor","0e37ce32":"vif = pd.DataFrame()\nvif[\"VIF Factor\"] = [variance_inflation_factor(train[result_pvalue].values, i) for i in range(train[result_pvalue].shape[1])]\nvif[\"features\"] = result_pvalue\nvif = vif.sort_values(\"VIF Factor\").reset_index(drop=True)","29b7e1af":"vif","6a4f6047":"result_pvalue = result_pvalue[~sp.isinf(vif['VIF Factor'])]","901e8d64":"vif = pd.DataFrame()\nvif[\"VIF Factor\"] = [variance_inflation_factor(train[result_pvalue].values, i) for i in range(train[result_pvalue].shape[1])]\nvif[\"features\"] = result_pvalue\nvif = vif.sort_values(\"VIF Factor\").reset_index(drop=True)","6276ac1e":"vif","293d75ca":"X = sm.add_constant(train[result_pvalue])\nreg2 = sm.OLS(price, X.astype(float)).fit()","b2160865":"reg2.summary()","6d823c69":"name = ['Jarque-Bera', 'Chi^2 two-tail prob.', 'Skew', 'Kurtosis']\ntest = sm.stats.jarque_bera(reg2.resid)\nstatsmodels.compat.lzip(name, test)","a6656749":"fig, axes = plt.subplots(figsize=(8,6))\nstatsmodels.graphics.gofplots.qqplot(reg2.resid, ax=axes, line='r')\nplt.show()","b6b5d365":"fig, ax = plt.subplots(figsize=(8,6))\nstatsmodels.graphics.regressionplots.plot_leverage_resid2(reg2, ax = ax)\nplt.show()","66acd932":"name = ['Lagrange multiplier statistic', 'p-value', 'f-value', 'f p-value']\ntest = sm.stats.het_breuschpagan(reg2.resid, reg2.model.exog)\nstatsmodels.compat.lzip(name, test)","440670fb":"X = sm.add_constant(train[['sqft_living','long']])\nreg3 = sm.OLS(price, X.astype(float)).fit()","5121e67d":"name = ['t value', 'p value']\ntest = sm.stats.linear_harvey_collier(reg3)\nstatsmodels.compat.lzip(name, test)","7376c30a":"# fitted values (need a constant term for intercept)\nmodel_fitted_y = reg2.fittedvalues\n\n# model residuals\nmodel_residuals = reg2.resid\n\n# normalized residuals\nmodel_norm_residuals = reg2.get_influence().resid_studentized_internal\n\n# absolute squared normalized residuals\nmodel_norm_residuals_abs_sqrt = sp.sqrt(sp.absolute(model_norm_residuals))\n\n# absolute residuals\nmodel_abs_resid = sp.absolute(model_residuals)\n\n# leverage, from statsmodels internals\nmodel_leverage = reg2.get_influence().hat_matrix_diag\n\n# cook's distance, from statsmodels internals\nmodel_cooks = reg2.get_influence().cooks_distance[0]","60e0c171":"plot_lm_1 = plt.figure(1)\nplot_lm_1.set_figheight(8)\nplot_lm_1.set_figwidth(12)\n\nplot_lm_1.axes[0] = sns.residplot(model_fitted_y, 'price', pd.concat([train, price], axis=1),\n                          lowess=True, \n                          scatter_kws={'alpha': 0.5}, \n                          line_kws={'color': 'red', 'lw': 1, 'alpha': 0.8})\n\nplot_lm_1.axes[0].set_title('Residuals vs Fitted')\nplot_lm_1.axes[0].set_xlabel('Fitted values')\nplot_lm_1.axes[0].set_ylabel('Residuals')\n\n# annotations\nabs_resid = model_abs_resid.sort_values(ascending=False)\nabs_resid_top_3 = abs_resid[:3]\n\nfor i in abs_resid_top_3.index:\n    plot_lm_1.axes[0].annotate(i, \n                               xy=(model_fitted_y[i], \n                                   model_residuals[i]));","ba11e54c":"QQ = sm.ProbPlot(model_norm_residuals)\nplot_lm_2 = QQ.qqplot(line='45', alpha=0.5, color='#4C72B0', lw=1)\n\nplot_lm_2.set_figheight(8)\nplot_lm_2.set_figwidth(12)\n\nplot_lm_2.axes[0].set_title('Normal Q-Q')\nplot_lm_2.axes[0].set_xlabel('Theoretical Quantiles')\nplot_lm_2.axes[0].set_ylabel('Standardized Residuals');\n\n# annotations\nabs_norm_resid = sp.flip(sp.argsort(sp.absolute(model_norm_residuals)), 0)\nabs_norm_resid_top_3 = abs_norm_resid[:3]\n\nfor r, i in enumerate(abs_norm_resid_top_3):\n    plot_lm_2.axes[0].annotate(i, \n                               xy=(sp.flip(QQ.theoretical_quantiles, 0)[r],\n                                   model_norm_residuals[i]));","56f260ca":"plot_lm_3 = plt.figure(3)\nplot_lm_3.set_figheight(8)\nplot_lm_3.set_figwidth(12)\n\nplt.scatter(model_fitted_y, model_norm_residuals_abs_sqrt, alpha=0.5)\nsns.regplot(model_fitted_y, model_norm_residuals_abs_sqrt, \n            scatter=False, \n            ci=False, \n            lowess=True,\n            line_kws={'color': 'red', 'lw': 1, 'alpha': 0.8})\n\nplot_lm_3.axes[0].set_title('Scale-Location')\nplot_lm_3.axes[0].set_xlabel('Fitted values')\nplot_lm_3.axes[0].set_ylabel('$\\sqrt{|Standardized Residuals|}$');\n\n# annotations\nabs_sq_norm_resid = sp.flip(sp.argsort(model_norm_residuals_abs_sqrt), 0)\nabs_sq_norm_resid_top_3 = abs_sq_norm_resid[:3]\n\nfor i in abs_norm_resid_top_3:\n    plot_lm_3.axes[0].annotate(i, \n                               xy=(model_fitted_y[i], \n                                   model_norm_residuals_abs_sqrt[i]));","4b2d545f":"\nplot_lm_4 = plt.figure(4)\nplot_lm_4.set_figheight(8)\nplot_lm_4.set_figwidth(12)\n\nplt.scatter(model_leverage, model_norm_residuals, alpha=0.5)\nsns.regplot(model_leverage, model_norm_residuals, \n            scatter=False, \n            ci=False, \n            lowess=True,\n            line_kws={'color': 'red', 'lw': 1, 'alpha': 0.8})\n\nplot_lm_4.axes[0].set_xlim(0, 0.125)\nplot_lm_4.axes[0].set_ylim(-3, 5)\nplot_lm_4.axes[0].set_title('Residuals vs Leverage')\nplot_lm_4.axes[0].set_xlabel('Leverage')\nplot_lm_4.axes[0].set_ylabel('Standardized Residuals')\n\n# annotations\nleverage_top_3 = sp.flip(sp.argsort(model_cooks), 0)[:3]\n\nfor i in leverage_top_3:\n    plot_lm_4.axes[0].annotate(i, \n                               xy=(model_leverage[i], \n                                   model_norm_residuals[i]))\n    \n# shenanigans for cook's distance contours\ndef graph(formula, x_range, label=None):\n    x = x_range\n    y = formula(x)\n    plt.plot(x, y, label=label, lw=1, ls='--', color='red')\n\np = len(reg2.params) # number of model parameters\n\ngraph(lambda x: sp.sqrt((0.5 * p * (1 - x)) \/ x), \n      sp.linspace(0.001, 0.125, 50), \n      'Cook\\'s distance') # 0.5 line\ngraph(lambda x: sp.sqrt((1 * p * (1 - x)) \/ x), \n      sp.linspace(0.001, 0.125, 50)) # 1 line\nplt.legend(loc='upper right');","961ca740":"from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\nfrom sklearn.model_selection import KFold\n\nfrom sklearn.metrics import mean_squared_error","72fafafe":"n_splits = 5\nrkf = KFold(n_splits=n_splits, shuffle=True, random_state=1028)","98957d3a":"reg_mean_rmse = 0\nreg2_mean_rmse = 0\nridge_reg_mean_rmse = 0\nlasso_reg_mean_rmse = 0\nelastic_reg_mean_rmse = 0\n\n\nfor trn_idx, val_idx in rkf.split(train):\n    trn_X, trn_y = train.loc[trn_idx], price[trn_idx]\n    val_X, val_y = train.loc[val_idx], price[val_idx]\n    \n    regr_pred = LinearRegression().fit(trn_X, trn_y).predict(val_X)\n    regr2_pred = LinearRegression().fit(trn_X[result_pvalue], trn_y).predict(val_X[result_pvalue])\n    regr3_pred = Ridge().fit(trn_X, trn_y).predict(val_X)\n    regr4_pred = Lasso().fit(trn_X, trn_y).predict(val_X)\n    regr5_pred = ElasticNet().fit(trn_X, trn_y).predict(val_X)\n    \n    reg_mean_rmse += sp.sqrt(mean_squared_error(sp.expm1(val_y), sp.expm1(regr_pred)))\/n_splits\n    reg2_mean_rmse += sp.sqrt(mean_squared_error(sp.expm1(val_y), sp.expm1(regr2_pred)))\/n_splits\n    ridge_reg_mean_rmse += sp.sqrt(mean_squared_error(sp.expm1(val_y), sp.expm1(regr3_pred)))\/n_splits\n    lasso_reg_mean_rmse += sp.sqrt(mean_squared_error(sp.expm1(val_y), sp.expm1(regr4_pred)))\/n_splits\n    elastic_reg_mean_rmse += sp.sqrt(mean_squared_error(sp.expm1(val_y), sp.expm1(regr5_pred)))\/n_splits\n\nprint('Full Model RMSE : {0:0.2f}'.format(reg_mean_rmse))\nprint('Variable remove Model RMSE : {0:0.2f}'.format(reg2_mean_rmse))\nprint('Ridge Model RMSE : {0:0.2f}'.format(ridge_reg_mean_rmse))\nprint('Lasso Model RMSE : {0:0.2f}'.format(lasso_reg_mean_rmse))\nprint('Elastice Net Model RMSE : {0:0.2f}'.format(elastic_reg_mean_rmse))","ebe8a3a1":"VIF\uac00 inf\uc778 \uc694\uc18c\ub97c \uc81c\uac70 \ud558\uc600\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc0c8\ub85c\uc6b4 \uacc4\uc218\uac00 inf\uc640 \ub9e4\uc6b0 \ub192\uc740 \uac12\uc744 \ub098\ud0c0\ub0b4\uace0 \uc788\uc2b5\ub2c8\ub2e4. \n\n\ubc18\ubcf5\uc801\uc73c\ub85c \uc2dc\ub3c4\ud574\uc57c \ud558\ub294 \uc774\uc720\uac00 \uc5ec\uae30 \uc788\uc2b5\ub2c8\ub2e4. 1\ucc28\uc801\uc73c\ub85c inf\uc778 \uc694\uc18c\ub97c \uc81c\uac70\ud55c\ub2e4\uace0 \ud558\ub354\ub77c\ub3c4 \ucd94\uac00\uc801\uc73c\ub85c \uc0dd\uae30\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ub610\ud55c \ub2e4\ub978 \ubcc0\uc218\ub97c \ucd94\uac00\ud558\uc600\uc744 \ub54c \uacf5\uc120\uc131\uc774 \uc548\uc815\uc801\uc778 \uac12\uc744 \ub098\uc62c \uc218\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \ubcc0\uc218\ub97c \ucd94\uac00, \uc81c\uac70\ub97c \ud574\uc57c \ud569\ub2c8\ub2e4. \uc77c\ub2e8 \uae30\ubcf8\uc801\uc73c\ub85c \uc704\uc758 \ubcc0\uc218\ub4e4\ub85c\ub9cc \uc9c4\ud589\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","3f8af814":"\uceec\ub7fc\uc758 \uacbd\uc6b0 \uc885\uc18d\ubcc0\uc218\uc778 'price'\ub97c \uc81c\uc678\ud558\uace0 20\uac1c\uac00 \ub3d9\uc77c\ud569\ub2c8\ub2e4.\n\nLet's glimpse train and test data!","0beb20e6":"\ub450 \uc218\uce58 \ubaa8\ub450 \uc548\uc815\uc801\uc73c\ub85c 0\uc5d0 \uac00\uae4c\uc6cc\uc84c\uace0, \uc815\uaddc\ubd84\ud3ec\uc5d0 \uac00\uae4c\uc6cc\uc84c\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\n\n\ubc18\uc751\ubcc0\uc218\uac00 \uc815\uaddc\ubd84\ud3ec\ub97c \ub530\ub974\ub294 \uac83\uc774 \uc88b\uc744\uae4c\uc694?\n\n\ud68c\uadc0\ubaa8\ud615\uc758 \ud574\uc11d\uc774 \uc720\uc758\ubbf8 \ud558\uae30 \uc704\ud574\uc11c\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uac00\uc815\uc744 \ub9cc\uc871\ud574\uc57c \ud569\ub2c8\ub2e4.\n\n\ubcf4\ud3b8\uc801\uc73c\ub85c, 4\uac00\uc9c0 \uac00\uc815\uc744 \uc8fc\ub85c \ud655\uc778\ud569\ub2c8\ub2e4.\n* \ub3c5\ub9bd\uc131\n* \uc120\ud615\uc131\n* \ub4f1\ubd84\uc0b0\uc131\n* \uc815\uaddc\uc131\n\n\uc815\uaddc\uc131\uc744 \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 3\uac00\uc9c0 \uc815\ub3c4\uac00 \uc788\uc73c\ub098, \uc81c \uc8fc\uad00\uc801 \ud574\uc11d\uc774 \uc911\uc694\ud55c qq plot\ub97c \uc774\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n\ub610\ud55c \ubc18\uc751\ubcc0\uc218\uac00 \uc815\uaddc\ubd84\ud3ec\ub97c \ub530\ub974\uba74 \uc794\ucc28\uc758 \uc815\uaddc\uc131\uc744 \ub9cc\uc871\uc2dc\ud0a4\uae30\uc5d0 \uc720\ub9ac\ud558\ubbc0\ub85c \uc815\uaddc\ud654\ub97c \uc2dc\ucf1c\uc8fc\uaca0\uc2b5\ub2c8\ub2e4.","967e0a39":"\uc774\uc81c \uceec\ub7fc\uc774 \uac19\uc544\uc84c\uc73c\ubbc0\ub85c \ubaa8\ub378\ub9c1\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","d408b4ae":"\ubc94\uc8fc\ub97c \ud569\uccd0 \uc904\uc5ec\uc90d\ub2c8\ub2e4.","e87d1505":"# **<a id='1'>Introduction<\/a>**\n\n\n#### **Competition background**\n\ub0b4 \uc9d1 \ub9c8\ub828\uc758 \uafc8\uc740 \ub204\uad6c\ub098 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc9d1\uc758 \uac00\uaca9\uc740 \ub204\uad6c\ub098 \uc54c\uace0 \uc788\uc9c0\ub294 \uc54a\uc8e0. \uc9d1\uc758 \uac00\uaca9\uc740 \uc8fc\uac70 \uacf5\uac04\uc758 \uba74\uc801, \uc704\uce58, \uacbd\uad00, \uac74\ubb3c\uc758 \uc5f0\uc2dd \ub4f1 \uc5ec\ub7ec \uac00\uc9c0 \ubcf5\uc7a1\ud55c \uc694\uc778\uc758 \uc870\ud569\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc774\ubc88\uc5d0 \ubd84\uc11d\ud558\uc2e4 \ub370\uc774\ud130\ub294 20\uac1c\uc758 \ubcc0\uc218\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc5b4\ub5a4 \uc870\uac74\uc744 \uac00\uc9c4 \uc9d1\uc758 \uac00\uaca9\uc774 \ub192\uace0 \ub0ae\uc740\uc9c0\ub97c \uc608\uce21\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4dc\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \uc774\ubc88 \ub300\ud68c\ub294 \ub9ac\ub354\ubcf4\ub4dc \uc810\uc218\ubfd0\ub9cc \uc544\ub2c8\ub77c \uce90\uae00\uc758 \uacf5\uc720 \uc815\uc2e0\uc758 \uae30\ubcf8\uc778 \ucee4\ub110 \uc791\uc131\uc744 \uc7a5\ub824\ud558\ub294 \ubaa9\ud45c\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\n#### **Evaluation**\nRMSE : Root Mean Squared Error\n\n#### **Timeline**\n'19.03.11 ~ '19.04.22\n\n#### **Data**\ntrain.csv, test.csv, sample_submission.csv","1c46c0f0":"# **<a id='2'>Prepare data analysis<\/a>**\n\n## Load Package","e6d0457d":"\uc885\uc18d\ubcc0\uc218\uc5d0 \ub300\ud574 log\ub97c \ucde8\ud574\uc8fc\uba74 \uc794\ucc28\uc758 \uc815\uaddc\uc131\uac00\uc815\uc744 \uc5b4\ub290\uc815\ub3c4 \ub9cc\uc871\uc2dc\ud0ac \uc218 \uc788\uc744 \uac83\uc774\ub77c\uace0 \uc0dd\uac01\ud558\uae30 \ub54c\ubb38\uc5d0, \ub85c\uadf8\ub97c \ucde8\ud574\uc90d\ub2c8\ub2e4.","89e6eca2":"## <a id='34'>Duplicate values<\/a>","767aee50":"log scale\uc744 \ucde8\ud558\uc5ec \uc815\uaddc\ud654\ub97c \uc2dc\ucf1c\uc90d\ub2c8\ub2e4.","4926bfc7":"# **<a id='4'>Feature Engineering<\/a>**\nFeature Engineering\ub294 \ub54c\ub54c\ub85c \ubaa8\ub378\uc758 \uc131\ub2a5\uc5d0 \uad49\uc7a5\ud788 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.\n\n\ud558\uc9c0\ub9cc, \uc120\ud615\ud68c\uadc0\ubd84\uc11d \uc774\ubbc0\ub85c \ub370\uc774\ud130\uc758 \ub3c5\ub9bd\uc131\uacfc \ud574\uc11d\uc744 \ucd5c\ub300\ud55c \ubcf4\uc874\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ubd84\uc11d\uc744 \uc9c4\ud589\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc120\ud615\ud68c\uadc0\ubd84\uc11d \ud6c4\uc5d0\ub294 \ub354 \ub098\uc740 \ubaa8\ub378\ub9c1\uc744 \uc704\ud574 \ud2b9\uc131\uacf5\ud559\uc744 \uc9c4\ud589\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. \ubaa8\ub378 \ub610\ud55c, \uc559\uc0c1\ube14\uae30\ubc95\uc744 \ud65c\uc6a9\ud558\uc5ec \ubd84\uc11d\uc744 \uc9c4\ud589\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n\ud558\uc9c0\ub9cc, \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc740 Dummy variable\ub97c \uc774\uc6a9\ud558\uc5ec \ubcc0\ud658\uc2dc\ucf1c\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc774\uc720\ub294 \uc21c\uc704\ucc99\ub3c4, \uba85\ubaa9\ucc99\ub3c4\uc774\uae30 \ub54c\ubb38\uc774\uace0, \uac01 \uc778\uc2a4\ud134\uc2a4\uac12\ub4e4\uc758 \ucc28\uc774\uac00 \uc5f0\uc18d\uc801\uc778 \ucc28\uc774\uac00 \uc544\ub2c8\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\n\uc608\ub97c \ub4e4\uc5b4 house grade\uc758 3\ub4f1\uae09\uacfc 4\ub4f1\uae09\uc758 \ucc28\uc774\ub294 2\ubc30...? \uc544\ub2c8\uba74 3\ubc30...? \ub4f1\uc758 \uc218\uce58\ub85c \ub098\ud0c0\ub0bc \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\uc720\ub85c \ub354\ubbf8\ubcc0\uc218\ud654\ub97c \uc2dc\ucf1c\uc918\uc57c \ud569\ub2c8\ub2e4.","45415fa9":"# **<a id='3'>Data Exploration<\/a>**\n\n## <a id='31'>Check the data<\/a>","c4f0e327":"\ub4f1\ubd84\uc0b0\uc131, \uc815\uaddc\uc131, \ub3c5\ub9bd\uc131, \n\n\uc774\ub7f0 \ube44\uc2b7\ud55c \uc131\ub2a5\uc758 \ubaa8\ub378\uc744 \ud3c9\uac00\ud558\ub294 \uc9c0\ud45c \uc911 RMSE\ub85c \uc131\ub2a5\uc744 \ube44\uad50\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","5c4dec4f":"skewess\ud55c \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ucc98\ub9ac\ub97c \uc5b4\ub5bb\uac8c \ud574\uc8fc\ub294 \uac83\uc774 \uc88b\uc744\uae4c\uc694?\n\n\uc815\uaddc\ud654, \ub2e4\ud56d\uc2dd\uc73c\ub85c\uc758 \ubcc0\ud658 \ub4f1\uc758 \ucc98\ub9ac\ub97c \ud574\uc904 \uc218 \uc788\uc9c0\ub9cc \ub3c5\ub9bd\uc131\uc744 \ubcf4\uc874\ud558\uae30 \uc704\ud574 \uc9c0\uae08\uc740 \uadf8\ub300\ub85c \uc720\uc9c0\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\nCategorical variable \ubcc0\uc218\ub4e4\uc740 \uc5b4\ub5a8\uae4c\uc694?","8615192d":"skewness\uc640 kurtosis \ub458 \ub2e4 \ud070 \uc218\uce58\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4.\n\n\uc815\uaddc\ubd84\ud3ec\uc758 \uacbd\uc6b0 skewness=0, kurtosis=3 \uc785\ub2c8\ub2e4. price\uc758 \uacbd\uc6b0 \uc624\ub978\ucabd \uaf2c\ub9ac\uac00 \uae38\uba70, \ubd09\uc6b0\ub9ac\uac00 \uc815\uaddc\ubd84\ud3ec\ubcf4\ub2e4 \ub192\ub2e4\ub294 \uac83\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4.","e69eae87":"# linear regression\uc758 diagnosis, analysis\ub294 \ucd94\ud6c4\uc5d0 \uc218\uc815 \ubc0f \ucd94\uac00\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.","67baec48":"## <a id='33'>Features correlations<\/a>   \n\n\uc5f0\uc18d\ud615 \ubcc0\uc218, Continuous variable\uc5d0 \ub300\ud574 \uc0b0\uc810\ub3c4\ub97c \uadf8\ub824 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc0c1\uad00\ubd84\uc11d\uc744 \ud1b5\ud55c \uc0c1\uad00\uacc4\uc218\ub97c \ubcf4\ub294 \ubc29\ubc95\ub3c4 \uc88b\uc9c0\ub9cc, \uc0c1\uad00\uacc4\uc218\uac00 \ubcc0\uc218\uac04\uc758 \uad00\uacc4\uc5d0 \ub300\ud574 \ubaa8\ub4e0 \uac83\uc744 \ubcf4\uc5ec\uc8fc\uc9c0\ub294 \ubabb\ud558\ubbc0\ub85c \uc0b0\uc810\ub3c4\ub97c \uadf8\ub9ac\uaca0\uc2b5\ub2c8\ub2e4.(price\uc640 continous variabe\uc5d0 \ub300\ud55c \uc0b0\uc810\ub3c4 \uc785\ub2c8\ub2e4.)","fdfa1836":"\ud765\ubbf8\ub86d\uc2b5\ub2c8\ub2e4. \uc885\uc18d\ubcc0\uc218\uc640 \ub3c5\ub9bd\ubcc0\uc218\uac04\uc5d0 \uc120\ud615\uc131\uc744 \ub744\ub294 \uadf8\ub9bc\uc774 \ub9ce\uc774 \ubcf4\uc785\ub2c8\ub2e4.\n\n\ub610\ud55c \ub3c5\ub9bd\ubcc0\uc218 \uac04\uc5d0 \uc120\ud615\uc131\uc774 \uc788\ub294 \ubcc0\uc218\ub4e4\uc774 \uc788\ub294\ub370, \ub2e4\uc911\uacf5\uc120\uc131 \ud639\uc740 \uacfc\ub300, \uacfc\uc18c\ucd94\uc815 \ub420 \uc5ec\uc9c0\uac00 \uc788\uc73c\ubbc0\ub85c \ud6c4\uc5d0 \uac80\uc0ac\ub97c \ud1b5\ud574 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc870\uae08 \uc9c1\uad00\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\uae30 \uc704\ud574 \uc0c1\uad00\uacc4\uc218 \ud589\ub82c\uc744 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","eaf9e1e8":"\uc9c4\ub2e8\uc758 \uc815\uaddc\uc131 \uac80\uc815\uc740 \ud788\uc2a4\ud1a0\uadf8\ub7a8 \ud655\uc778, Jarque-Bera test \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc5ec\uae30\uc120 Jarque-Bera test\ub97c \uc0ac\uc6a9\ud558\uc600\uace0, \uc720\uc758\uc218\uc900 5% \uc77c \ub54c, \uc720\uc758\ud655\ub960\uc774 0\uc5d0 \uac00\uae4c\uc6b0\ubbc0\ub85c, \uadc0\ubb34\uac00\uc124\uc778 \uc815\uaddc\uc131\uc744 \ub9cc\uc871\ud55c\ub2e4\ub97c \uae30\uac01\ud558\uace0, \uc815\uaddc\uc131\uc744 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\ub2e4\ub77c\ub294 \uac00\uc124\uc744 \ucc44\ud0dd\ud569\ub2c8\ub2e4.\n\n\uc120\ud615 \ud68c\uadc0 \ubd84\uc11d\uc758 \uc9c4\ub2e8 \uc911 \uc624\ucc28\uc758 \uc815\uaddc\uc131\uc740 \ub9de\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\n\uc120\ud615 \uac00\uc815\uc774 \ub9de\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc758\ubbf8\uac00 \uc5c6\uc9c0\ub9cc \ub3c5\ub9bd\uc131 \uac80\uc815\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","9e57ba24":"## <a id='53'>Submission<\/a>\n","cca9229b":"\ud68c\uadc0\uc9c4\ub2e8\n- \uc794\ucc28\uc758 \uc815\uaddc\uc131 ( Jarque-Bera test)\n- \uc120\ud615\uc131(Linearity) - Harvey Collier mulitplier test\n- \ub4f1\ubd84\uc0b0\uc131 - Breausch Pagan Godfrey test\n- \ub3c5\ub9bd\uc131 - \ub354\ube48\uc653\uc2a8\uc778\ub370 \uae00\uc384...\n- \uc601\ud5a5\ud14c\uc2a4\ud2b8 - \ub808\ubc84\ub9ac\uc9c0 \ud50c\ub78f\uc774\uc6a9?\n- \ub2e4\uc911\uacf5\uc120\uc131 \uac80\uc0ac","02f09063":"#### **Train contains:  **\n\n* **id** (string);  \n* **price**;  (float)\n* **8** numerical variables\n* **named**\n    - sqft_living : \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n    - sqft_lot : \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n    - sqft_above : \uc9c0\ud558\uc2e4\uc744 \uc81c\uc678\ud55c \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n    - sqft_basement : \uc9c0\ud558\uc2e4\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n    - lat : \uc704\ub3c4\n    - long : \uacbd\ub3c4\n    - sqft_living15 : 2015\ub144 \uae30\uc900 \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)\n    - sqft_lot15 : 2015\ub144 \uae30\uc900 \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)\n* **11** categorical variables, named from **var_0** to **var_199**\n* **named**\n    - date : \uc9d1\uc744 \uad6c\ub9e4\ud55c \ub0a0\uc9dc\n    - bedrooms : \uce68\uc2e4\uc758 \uc218\n    - bathrooms : \uce68\uc2e4 \uac1c\uc218 \ub2f9 \ud654\uc7a5\uc2e4\uc758 \uc218(\ud654\uc7a5\uc2e4\uc758 \uc218 \/ \uce68\uc2e4\uc758 \uc218 )\n    - floors : \uc9d1\uc758 \uce35 \uc218\n    - waterfront : \uc9d1\uc758 \uc804\ubc29\uc5d0 \uac15\uc774 \ud750\ub974\ub294\uc9c0 \uc720\ubb34 (a.k.a. \ub9ac\ubc84\ubdf0)\n    - view : \uc9d1\uc774 \uc5bc\ub9c8\ub098 \uc88b\uc544 \ubcf4\uc774\ub294\uc9c0\uc758 \uc815\ub3c4\n    - condition : \uc9d1\uc758 \uc804\ubc18\uc801\uc778 \uc0c1\ud0dc\n    - grade : King County grading \uc2dc\uc2a4\ud15c \uae30\uc900\uc73c\ub85c \ub9e4\uae34 \uc9d1\uc758 \ub4f1\uae09\n    - yr_built : \uc9c0\uc5b4\uc9c4 \ub144\ub3c4\n    - yr_renovated : \uc9d1\uc744 \uc7ac\uac74\ucd95\ud55c \ub144\ub3c4\n    - zipcode : \uc6b0\ud3b8\ubc88\ud638\n\n#### **Test contains:  **\n\n* **id** (string);  \n* **8** numerical variables\n* **named**\n    - Same as train\n* **11** categorical variables, named from **var_0** to **var_199**\n* **named**\n    - Same as train\n\n\n\ub370\uc774\ud130\uc758 \uad6c\uc870\ub97c \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.\n\n\uc774\uc81c \ub370\uc774\ud130\ub97c \ub354 \ub290\uaef4\ubd05\uc2dc\ub2e4. \uba3c\uc800 \uacb0\uce21\uac12\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.\n\ntrain data\ub97c \uba3c\uc800 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","af2aad9e":"\uac00\uc7a5 \uba3c\uc800 F-statistic \uc744 \ud655\uc778\ud569\ub2c8\ub2e4. Prob\uac00 0\uc778 \uac83\uc73c\ub85c \ubd10\uc11c \uc774 \ubaa8\ub378\uc740 \ub9e4\uc6b0 \uc720\uc758\ud568\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub9ce\uc740 \ubcc0\uc218\ub4e4\ub85c \uc778\ud574 \ub2e4\uc911\uacf5\uc120\uc131 \ubb38\uc81c\uac00 \uc0dd\uacbc\uace0 \uc774\uac83\uc740 \uacc4\uc218\uc758 \uacfc\ub300\ucd94\uc815, \uacfc\uc18c\ucd94\uc815\uc744 \uc57c\uae30\ud569\ub2c8\ub2e4.\n\n\uc774\ub7ec\ud55c \ub2e4\uc911\uacf5\uc120\uc131 \uc644\ud654\uc2dc\ud0a4\ub294 \ubc29\ubc95\uc740 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n1. \ub2e4\uc911\uacf5\uc120\uc131 \uc720\ubc1c \ubcc0\uc218 \uc81c\uac70\n2. AIC, BIC \uae30\uc900\uc73c\ub85c \uc804\uc9c4\uc120\ud0dd\ubc95, \ud6c4\uc9c4\uc18c\uac70\ubc95, \ub2e8\uacc4\ubcc4\ubc29\ubc95\uc744 \ud1b5\ud55c \ubcc0\uc218 \uc120\ud0dd\n3. \uc815\uaddc\ud654\ub97c \ud1b5\ud55c \ubcc0\uc218\uc758 \uc601\ud5a5\ub825 \uaddc\uc81c\n4. PCA(principal component analysis) \ubc29\ubc95\uc73c\ub85c \uc758\uc874\uc801\uc778 \uc131\ubd84 \uc0ad\uc81c\n\n1\uc758 \uacbd\uc6b0 vif(\ubd84\uc0b0\ud33d\ucc3d\uc9c0\uc218)\ub97c \ubcf4\uba70 \uc81c\uac70\ud558\uac70\ub098, p-value\ub97c \ud1b5\ud574 \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc911\uc694\ud55c \ubcc0\uc218\ub97c \uc81c\uac70 \ud560 \uc218\ub3c4 \uc788\uace0, \ubc18\ubcf5\uc801\uc778 \uc791\uc5c5\uc744 \ud574\uc57c\ud569\ub2c8\ub2e4.\n\n2\uc758 \uacbd\uc6b0 \ud30c\uc774\uc36c\uc5d0 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc5c6\uc5b4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uaca0\uc2b5\ub2c8\ub2e4.(\ud639\uc2dc \uc54c\uace0 \uacc4\uc2e0 \ubd84\uc740 \ub313\uae00 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.)\n\n3\uc758 \uacbd\uc6b0 ridge, rasso, elastic net 3\uac00\uc9c0\ub97c \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n4\uc758 \uacbd\uc6b0 \ud6c4\uc5d0 \uc815\ub9ac\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uba3c\uc800 \ubcc0\uc218\ub97c \uc81c\uac70\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","fd4983d8":"determinant \ud589\ub82c\uc2dd\uc744 \uad6c\ud560 \uc218 \uc5c6\uc744 \ub54c(\uc5ed\ud589\ub82c\uc744 \uad6c\ud560 \uc218 \uc5c6\ub2e4) \ubc1c\uc0dd\ud558\ub294 \uc624\ub958\uc785\ub2c8\ub2e4. \ub2e4\uc911\uacf5\uc120\uc131\uc73c\ub85c \uc778\ud574 \ubc1c\uc0dd \ub41c \ubb38\uc81c\ub85c \ubcf4\uc785\ub2c8\ub2e4.","31ac343c":"Categorical Variable \uacbd\uc6b0\uc5d0\ub3c4 \ud655\uc2e4\ud558\uac8c \ubcc0\uc218\uc5d0 \ub530\ub77c\uc11c \uac00\uaca9\uc774 \uc99d\uac00, \uac10\uc18c\ud558\uac70\ub098 \ubcc0\ud654\uac00 \uc5c6\ub294 \uacbd\uc6b0\uac00 \ubcf4\uc785\ub2c8\ub2e4. \ud639\uc740 \uc774\uc0c1\uac12\ub4e4\ub85c \ucd94\uc815\ub418\ub294 \uac12\ub4e4\ub3c4 \ubcf4\uc785\ub2c8\ub2e4.\n\n\ubaa8\ub4e0 \ubcc0\uc218\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ubc94\uc8fc\ud615\ubcc0\uc218\uc758 \uacbd\uc6b0 \ud53c\uc5b4\uc2a8\uc758 \uc0c1\uad00\uacc4\uc218\uc758 \uacbd\uc6b0 \uc5f0\uc18d\ub41c \uc790\ub8cc\uc5d0 \ub300\ud55c \ubaa8\uc218\uc801\uc778 \ubc29\ubc95\uc774\ubbc0\ub85c \uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\n\uc2a4\ud53c\uc5b4\ub9cc \uc0c1\uad00\uacc4\uc218\uc778 \uc21c\uc704 \uc0c1\uad00 \ucc99\ub3c4\ub97c \uc0ac\uc6a9\ud558\ubbc0\ub85c\uc368 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc5d0 \ub300\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \uad6c\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","05796e31":"ridge model\uc774 \uac00\uc7a5 \uc131\ub2a5\uc774 \uc88b\uc740 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","011f02e1":"target variable\uc778 price\uac00 \uc67c\ucabd\uc73c\ub85c skew\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","87bf6137":"## <a id='32'>Density plots of features<\/a>   \n\n\ubcc0\uc218\ub4e4\uc5d0 \ub300\ud55c \ubd84\ud3ec\ub97c \ud655\uc778\ud574 \ubd05\uc2dc\ub2e4.\n\n\uba3c\uc800 target variable\uc778 price\ub97c \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.","2b35a6fc":"\uad6c\ub9e4 \ub0a0\uc9dc, \uac74\ucd95 \ub144\ub3c4, \uc7ac\uac74\ucd95 \ub144\ub3c4\ub294 \ub2e8\uc21c\ud558\uac8c \uc2ac\ub77c\uc774\uc2f1 \ud558\uc5ec \ubc94\uc8fc\ub97c \uc904\uc5ec\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.\n\n\uc6b0\ud3b8\ubc88\ud638\uc758 \uacbd\uc6b0 \ubbf8\uad6d\uc758 \uc6b0\ud3b8\uccb4\uacc4\ub97c \ubaa8\ub974\uc9c0\ub9cc, \ud3b8\uc758\ub97c \uc704\ud574 \ub2e8\uc21c \uc2ac\ub77c\uc774\uc2f1\uc744 \ud1b5\ud574 \ubc94\uc8fc\ub97c \uc904\uc5ec\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.","6d9db362":"train, test data \ubcc0\uc218 \ub0b4\uc5d0 \ub2e4\ub978 \ubc94\uc8fc\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc11c\ub85c \ub2e4\ub978 \uceec\ub7fc\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc5ec\uae30\uc120 price\ub97c \uc81c\uc678\ud558\uace0 \uc81c\uac70 \ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","7b9ca9c7":"\uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. describe\ub97c \ud1b5\ud574 \ub300\ub7b5\uc801\uc73c\ub85c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","4e2ca459":"\uc911\ubcf5 \uac12\ub4e4\uc774 train data\uc640 test data\uac00 \uac70\uc758 \ube44\uc2b7\ud569\ub2c8\ub2e4. \ub370\uc774\ud130\uc758 \uad6c\uc870\uac00 \ud761\uc0ac\ud558\ub2e4\ub294 \uc0dd\uac01\uc774 \ub4dc\ub294\uad70\uc694.\n\n\uc774\ub7ec\ud55c \ud765\ubbf8\ub85c\uc6b4 \ud328\ud134\ub4e4\uc740 \uc6b0\ub9ac\uac00 \ud6c4\uc5d0 \ubaa8\ub378\uc744 \ub9cc\ub4e4 \ub54c, \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","b01eb583":"\ub4f1\ubd84\uc0b0\uc131\uc744 \ub9cc\uc871\ud558\ub294 \uc9c0 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","cf97872d":"\uac01 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc5d0 \ub300\ud574 \uac00\ubcc0\uc218\ub97c \ucde8\ud574\uc8fc\uace0, \ubaa8\ub450 unique value \uc778 id\uceec\ub7fc\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.\n\ntrain, test\ub294 \ub3d9\uc77c\ud55c \uceec\ub7fc\uc744 \uac00\uc838\uc57c \ud569\ub2c8\ub2e4. \uacfc\uc5f0 \ub3d9\uc77c\ud55c \uceec\ub7fc\uc77c\uae4c\uc694?","802c2c70":"## <a id='52'>Evalution<\/a>\n\ubaa8\ub378\uc744 \ud3c9\uac00\ud558\uae30 \uc704\ud574 \uc608\uce21\ud558\uace0, \uc608\uce21\uc758 \uc9c0\ud45c\ub85c RMSE\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. Cross-validation\uc744 \ud1b5\ud574 \uacfc\uc801\ud569\uc744 \ubc29\uc9c0\ud558\uaca0\uc2b5\ub2c8\ub2e4.","8f0da4f8":"\ucd5c\uace0 0.92\uc758 \uc0c1\uad00\uacc4\uc218\ub97c \uac00\uc9c4 \ubcc0\uc218\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc74c\uc758\uc0c1\uad00\uacc4\uc218\ub294 \ucd5c\ud558\uc810\uc774 -0.3\uc815\ub3c4 \ub418\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ub300\uccb4\uc801\uc73c\ub85c price\uc640 \uc74c\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\ub294 \ubcc0\uc218\ub294 \uc5c6\ub294 \uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.\n\n\uc774\uc81c Duplicate value\uc5d0 \ub300\ud574\uc11c \ud0d0\uc0c9\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","1829840e":"\ub370\uc774\ud130\uac00 \ub9e4\uc6b0 \ub9ce\uc740 \uac83\uc740 \uc544\ub2c8\ubbc0\ub85c, \ub2e8\uc21c\ud558\uac8c \ubaa8\ub450 count\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4. \ud655\uc778 \ud560 \uc218 \uc788\ub294 \ub0b4\uc6a9\uc73c\ub85c\ub294\n\n1. sparse\ud55c \ubcc0\uc218\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\n2. \ub610\ud55c date, yr_built, zipcode \ub4f1\uc740 \ub4b7\ubd80\ubd84\uc5d0\uc11c \ub354\ubbf8\ubcc0\uc218\ud654 \ud560 \ub54c \ucc28\uc6d0\uc774 \ub108\ubb34 \ucee4\uc9c0\ubbc0\ub85c \uc801\uc808\ud55c \uc791\uc5c5\uc744 \ud574\uc918\uc57c \ud569\ub2c8\ub2e4.\n3. grade\uac19\uc740 \uc608\uc05c \ud615\ud0dc\uc758 \ubcc0\uc218\ub3c4 \uc788\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uace0, \ub2e4\ubc94\uc8fc\uc778 \uacbd\uc6b0\uac00 \ub9ce\uc544 \uc774\uc0c1\uce58 \ud639\uc740 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc640 \ub3d9\uc77c\ud55c \ubc94\uc8fc\ub97c \uac16\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\ub2e4\ub294 \uc810\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774\uc81c \ubcc0\uc218\uc640 \ubcc0\uc218\uac04\uc758 \uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","2d706786":"# **<a id='5'>Model<\/a>**\n## <a id='51'>Modeling<\/a>\n\n\uc120\ud615 \ud68c\uadc0\ubd84\uc11d\uc744 \ud1b5\ud574 \ubcc0\uc218\ub4e4\uc5d0 \ub300\ud574 \ub354 \uc774\ud574\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","708aef6b":"\uc6b0\ub9ac\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc0ac\ud56d\uc744 \uad00\ucc30 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* price \ub2e8\uc704\uc640 \ud45c\uc900\ud3b8\ucc28\uac00 \ud07d\ub2c8\ub2e4.\n* categorical \ubcc0\uc218\ub4e4\uc740 skew\ub418\uc5b4 \uc788\ub294 \ubcc0\uc218\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.\n* categorical \ubcc0\uc218\uc758 \ub370\uc774\ud130\uc758 \uacbd\uc6b0 sparse\ud55c \uc778\uc2a4\ud134\uc2a4\ub4e4\uc5d0 \ub300\ud574 train data\uc5d0\ub294 \uc874\uc7ac\ud558\uc9c0\ub9cc, test data\uc5d0\ub294 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud639\uc740 \uadf8 \uc5ed\uc758 \uacbd\uc6b0\uac00 \uc874\uc7ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc9c0\ud558\uace0 \uc788\ub294\uac8c \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n* \uc704\ub3c4, \uacbd\ub3c4\uc758 \ud45c\uc900\ud3b8\ucc28\ub294 \uc791\uc2b5\ub2c8\ub2e4.\n* scale\uc774 \uc81c\uac01\uac01\uc778 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc120\ud615\ubaa8\ub378 \ud639\uc740 \uc2e0\uacbd\ub9dd \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 normalization & scaling\uc744 \ud1b5\ud574 \ub370\uc774\ud130\uc758 \ubcc0\ud658\uc774 \ud544\uc694\ud574 \ubcf4\uc785\ub2c8\ub2e4. \n\n\uadf8\ub9bc\uc744 \ud1b5\ud574 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\ub294 \uac8c \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","c8da765f":"\ub4f1\ubd84\uc0b0\uc131\ub3c4 \ub9cc\uc871 \ubabb\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubb50\uc9c0 \ub808\ubc84\ub9ac\uc9c0 \ubb38\uc81c\uc778\uac00?\n\n\uc120\ud615\uc131\uc744 \ub9cc\uc871\ud558\ub294 \uc9c0 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","cd41a7b9":"1. \uc624\ucc28\uc758 \uc815\uaddc\uc131 \uac80\uc815 ( Jarque-Bera test )","ca60af9e":"\uc9c1\uad00\uc801\uc73c\ub85c \ubcc0\uc218\ub4e4\uc758 \uc0c1\uad00\uc131\uc744 \ubcfc\uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774\uc81c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc704\uc5d0\uc11c \ub9ce\uc740 \ubc94\uc8fc\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \ubcc0\uc218\ub4e4\uc5d0 \ub300\ud574 \ubc94\uc8fc\ub97c \ud569\uccd0 \uc904\uc5ec\uc8fc\uaca0\uc2b5\ub2c8\ub2e4.","75768671":"\uc774\uc81c \uc124\uba85\ubcc0\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc5f0\uc18d\ud615 \ubcc0\uc218, Continuous variable\uc5d0 \ub300\ud574 \uba3c\uc800 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","dfa75074":"<h1><center><font size=\"6\">House Price EDA and Prediction<\/font><\/center><\/h1>\n\n\n<h2><center><font size=\"4\">2019 2nd ML month with KaKR<\/font><\/center><\/h2>\n<h3><center><font size=\"2\">\uce90\uae00 \ucf54\ub9ac\uc544\uc640 \ud568\uaed8\ud558\ub294 2nd ML \ub300\ud68c - House Price Prediction<\/font><\/center><\/h3>\n\n<br>\n\n# **<a id='0'>Content<\/a>**\n\n- <a href='#1'>Introduction<\/a>  \n- <a href='#2'>Prepare data analysis<\/a>  \n- <a href='#3'>Data exploration<\/a>  \n    - <a href='#31'>Check the data<\/a>  \n    - <a href='#32'>Density plots of features<\/a>   \n    - <a href='#33'>Features correlations<\/a>   \n    - <a href='#34'>Duplicate values<\/a>   \n- <a href='#4'>Feature Engineering<\/a>\n- <a href='#5'>Model<\/a>\n    - <a href='#51'>Modeling<\/a>\n    - <a href='#52'>Evalution<\/a>\n    - <a href='#53'>Submission<\/a>\n- <a href='#6'>Feature Engineering2<\/a>\n- <a href='#7'>Model<\/a>\n- <a href='#8'>Submission<\/a>","bb3dc15e":"Adj R - squared\ub294 \ud558\ub77d\ud558\uc600\ub290\ub098 \ubcc0\uc218\ub97c \ucd94\uac00\ud560\uc218\ub85d R-squared\ub294 \uc0c1\uc2b9\ud558\ubbc0\ub85c \uc633\uc740 \uc9c0\ud45c\ub77c\uace0 \ubcfc \uc218 \ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \ubaa8\ub378\uc758 \uc720\uc758\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 F-statistic\uc774 \uc57d 5\ubc30 \uc774\uc0c1 \uc0c1\uc2b9\ud558\uc600\uc2b5\ub2c8\ub2e4. \n\nAIC\uc640 BIC\ub294 \ub0ae\uc740 \uac83\uc774 \ubaa8\ub378\uc758 \uc131\ub2a5\ubcf4\ub2e4 \uc815\ubcf4\uc758 \uc190\uc2e4\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc73c\ub85c, \ubcc0\uc218\uc120\ud0dd\uc744 \ud55c \ubaa8\ub378\uc774 \uc815\ubcf4\uc758 \uc190\uc2e4\uc774 \ud06c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc120\ud615 \ud68c\uadc0\uc758 \uc9c4\ub2e8\uc744 \ud1b5\ud574 \uac00\uc815\uc744 \ub9cc\uc871\ud558\ub294 \uc9c0 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","ae8aca33":"\ub370\uc774\ud130\uac00 \uc5b4\ub5a4\uc9c0 \ud655\uc778\ud574 \ubd05\uc2dc\ub2e4.","95c29efc":"train data\uac00 test data\uc5d0 \ube44\ud574 \uc57d 2.3\ubc30 \uc815\ub3c4 \ub9ce\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8878f372":"## Load data   \n\n\ub370\uc774\ud130\ub97c \ub85c\ub4dc\ud569\ub2c8\ub2e4.\nLet's check what data files are available."}}