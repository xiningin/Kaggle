{"cell_type":{"404ad301":"code","fe94ed30":"code","4674bae6":"code","1cfd74ba":"code","b63ec2ff":"code","eee04901":"code","702e8fa3":"code","b07ca8a3":"code","8c575ca9":"code","6f538cc3":"code","0c6a6483":"code","b477f278":"code","61a44d1a":"code","6d7b3596":"code","bc4dcd24":"code","927d1df5":"code","6bc4abfc":"code","618cd24e":"code","a579e4be":"code","087b9572":"code","678b3790":"code","8e5270fc":"code","9a66920b":"code","d8011562":"code","0bd0da30":"code","254f9fe2":"code","8066f367":"code","a44070d6":"code","d30d30c6":"code","afc6c574":"code","ed6918ff":"code","1ba0bfcb":"code","43bd1ab0":"code","f3e0039e":"code","421cf2f3":"code","31a44725":"code","2504b0ee":"markdown","2b90e15f":"markdown","e429f256":"markdown","81bef1fa":"markdown","7bea337d":"markdown","f986dc99":"markdown","5b98aa23":"markdown","f0a1fe29":"markdown","fa6ef352":"markdown","f5d77dc4":"markdown","3f8766b8":"markdown","f2d9abfa":"markdown"},"source":{"404ad301":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fe94ed30":"df = pd.read_csv('..\/input\/cars-germany\/autoscout24-germany-dataset.csv')\ndf","4674bae6":"pd.options.display.max_rows = 1000","1cfd74ba":"df.corr()['price'].sort_values()","b63ec2ff":"sns.scatterplot(x='hp',y='price', data = df)","eee04901":"sns.scatterplot(x='year',y='price', data = df)","702e8fa3":"df[(df['price']>600000)]","b07ca8a3":"drop_ind = df[(df['price']>600000)].index","8c575ca9":"sns.scatterplot(x='hp',y='price', data = df)","6f538cc3":"df.info()","0c6a6483":"df.isnull().sum()\n100 * df.isnull().sum() \/ len(df)","b477f278":"df['model'] = df['model'].fillna('None')\ndf['gear'] = df['gear'].fillna('None')\n100 * df.isnull().sum() \/ len(df)","61a44d1a":"df['hp'].mean()","6d7b3596":"df['hp'] = df['hp'].fillna(132)","bc4dcd24":"100 * df.isnull().sum() \/ len(df)","927d1df5":"targets = np.where(df['price'] < 10000, 1, 0)\ntargets","6bc4abfc":"df['price_category'] = targets","618cd24e":"df = df.drop('model', axis = 1)\ndf = df.drop('fuel', axis = 1)\ndf = df.drop('gear', axis = 1)\ndf = df.drop('offerType', axis = 1)\ndf = df.drop('year', axis = 1)\ndf = df.drop('price', axis = 1)","a579e4be":"df = df.drop('make', axis = 1)","087b9572":"df.head()","678b3790":"inputs = df.iloc[:, 0:3]","8e5270fc":"inputs.head()","9a66920b":"from sklearn.preprocessing import StandardScaler","d8011562":"scaler = StandardScaler()","0bd0da30":"scaler.fit(inputs)","254f9fe2":"scaled_inputs = scaler.transform(inputs)","8066f367":"from sklearn.model_selection import train_test_split","a44070d6":"x_train, x_test, y_train, y_test = train_test_split(scaled_inputs,targets, train_size = 0.8,shuffle = True)","d30d30c6":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","afc6c574":"reg = LogisticRegression()","ed6918ff":"reg.fit(x_train,y_train)","1ba0bfcb":"reg.score(x_train,y_train)","43bd1ab0":"model_outputs = reg.predict(x_train)\nmodel_outputs","f3e0039e":"np.sum(model_outputs ==  y_train)","421cf2f3":"model_outputs.shape[0]","31a44725":"#Let's test the score of test datasets.\nreg.score(x_test,y_test)","2504b0ee":"## Creating the Target Column","2b90e15f":"## The necessary libraries to be imported","e429f256":"# Features","81bef1fa":"I will be dealing with the null values.","7bea337d":"Here, I will be creating a column, which also our dependent variable, under the title 'price_category' and 1 will be 'economic' 0 will be 'luxurous'. The independent variables will be 'mileage', 'price' and 'hp'.","f986dc99":"# Testing the Accuracy of the Model","5b98aa23":"# Can we predict the class of a car through using logistic regression?","f0a1fe29":"## Creating the Inputs","fa6ef352":"**Standardization and Creating the Model**","f5d77dc4":"I will be dealing with the outliers.","3f8766b8":"# Creating the Dataset to be taken into consideration","f2d9abfa":"# Feature Engineering"}}