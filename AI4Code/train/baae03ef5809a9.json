{"cell_type":{"95d6c685":"code","b7e81db6":"code","5388dc2c":"code","7477bb0f":"code","5d1f951f":"code","168caaf4":"code","c1d93af4":"code","87be399d":"code","9404df6c":"code","e3edec67":"code","11b76abe":"code","b5e7f991":"code","bf817836":"code","15c898b7":"code","0fdd1ec9":"code","2195191c":"code","569a1570":"code","2493964d":"code","a30f0df5":"markdown"},"source":{"95d6c685":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b7e81db6":"# Import all the needed packages.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","5388dc2c":"# Import the complete dataset.\ndf_data = pd.read_csv(\"..\/input\/Istanbul Weather Data.csv\")","7477bb0f":"# Check the dataset.\ndf_data.head()","5d1f951f":"# Check the correlation between the variables.\ndf_data.corr()","168caaf4":"# Check the stats of the variables.\ndf_data.describe()","c1d93af4":"# Plot a scatter chart to visualise the relationship between the Min & Max Temp.\ndf_data.plot(kind='scatter',x='MinTemp',y='MaxTemp', figsize=(10,6))\nplt.xlabel('MinTemp')\nplt.ylabel('MaxTemp')\nplt.title('MinTemp Vs MaxTemp')\n\nplt.show()","87be399d":"# Create a train & Test DataSet\nmsk = np.random.rand(len(df_data)) < 0.8\ntrain_set = df_data[msk]\ntest_set = df_data[~msk]\n\n#Check the shape of the datasets\nprint(train_set.shape)\nprint(test_set.shape)","9404df6c":"# Creating arrays to train the model.\ntrain_x = np.asanyarray(train_set[[\"MinTemp\"]])\ntrain_y = np.asanyarray(train_set[[\"MaxTemp\"]]).flatten()\nprint(train_x)\nprint(train_y)","e3edec67":"# import the class LinearRegression from pachage sklearn.\nfrom sklearn.linear_model import LinearRegression","11b76abe":"model = LinearRegression() # Creating an instance of the class LinearRegression.\nmodel.fit(train_x,train_y) #Fitting the model to the data. \nr_sq = model.score(train_x,train_y) # Check the R2 score for model evaluation.\nprint(r_sq)","b5e7f991":"# Check the values of the parameters or coefficients.\nintercept = model.intercept_\nslope = model.coef_\nprint('Intercept : ', intercept)\nprint('Slope : ', slope)","bf817836":"# Plot a scatter chart with line of best fit.\ntrain_set.plot(kind='scatter',x='MinTemp',y='MaxTemp',figsize=(10,6),color='blue')\nplt.plot(train_x, slope*train_x + intercept, '-r')\nplt.xlabel('MinTemp')\nplt.ylabel('MaxTemp')\nplt.title('MinTemp Vs MaxTemp')\n\nplt.show()","15c898b7":"# Feeding the training data set value in the model to predict the output.\ny_pred = model.predict(train_x)\nprint(y_pred)","0fdd1ec9":"# Creating arrays to test the model with the test data set.\ntest_x = np.asanyarray(test_set[[\"MinTemp\"]])\ntest_y = np.asanyarray(test_set[[\"MaxTemp\"]])","2195191c":"# Predict the values from the test data.\ny_pred_test = model.predict(test_x)\nprint(y_pred_test)","569a1570":"mse = np.mean((test_y - y_pred_test)**2)          # Check the mean squared error.\nmae = np.mean(np.absolute(test_y - y_pred_test))  # Check the mean absolute error.\nprint('Mean squared error : ', mse)\nprint('Mean absolute error : ', mae)","2493964d":"r_square = model.score(test_y, y_pred_test)\nprint(r_square)","a30f0df5":"Check the relationship and the impact of minimum temperatue on the maximum temperature."}}