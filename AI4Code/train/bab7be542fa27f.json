{"cell_type":{"fc3282ab":"code","c48c2969":"code","a35eb48c":"code","c5a76ace":"code","2ee50e79":"code","6eb6cccf":"code","a9c0d41b":"code","a09db167":"code","4d8a8502":"code","292de4ea":"code","4965c7a2":"code","45265643":"code","2525e8ec":"code","d1a44a6f":"code","48c9e234":"code","a5d00c1b":"code","7866c622":"code","af0c6b49":"code","785d8975":"code","cbb33aa9":"code","c9c101fb":"code","c410c918":"code","bee68eff":"code","1a65f1d6":"code","04a8d4cc":"code","143a719a":"code","35384f9b":"code","7c10bced":"code","5e6a81cf":"code","95a57850":"code","a0fe2e19":"code","2e04b6a3":"code","3a220105":"code","fa8b31d1":"code","4a3753aa":"code","b11d382c":"code","3d3b8aab":"code","83c9da76":"code","525c4e3a":"code","6f931cb3":"markdown","7ca9d008":"markdown","12295cc1":"markdown","843430d8":"markdown","d45d3d33":"markdown","38b50ac0":"markdown","6f44cf39":"markdown","6305935c":"markdown","8d455a3f":"markdown","4bd39033":"markdown","79d72aa7":"markdown","dd1a2e76":"markdown","e6d93767":"markdown"},"source":{"fc3282ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c48c2969":"data_filename='\/kaggle\/input\/us-accidents\/US_Accidents_Dec20_updated.csv'","a35eb48c":"import pandas as pd\nimport numpy as np","c5a76ace":"df = pd.read_csv(data_filename)","2ee50e79":"df","6eb6cccf":"df.info()","a9c0d41b":"df.describe()","a09db167":"numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\n\nnumeric_df = df.select_dtypes(include=numerics)\nlen(numeric_df.columns)","4d8a8502":"missing_percentages = df.isna().sum().sort_values(ascending=False) \/ len(df)\nmissing_percentages","292de4ea":"type(missing_percentages)","4965c7a2":"missing_percentages[missing_percentages != 0].plot(kind='barh')","45265643":"df.columns","2525e8ec":"df.City","d1a44a6f":"cities = df.City.unique()\nlen(cities)","48c9e234":"cities_by_accident = df.City.value_counts()\ncities_by_accident","a5d00c1b":"cities_by_accident[:20]","7866c622":"type(cities_by_accident)","af0c6b49":"cities_by_accident[:20].plot(kind='barh')","785d8975":"import seaborn as sns\nsns.set_style(\"darkgrid\")","cbb33aa9":"sns.histplot(cities_by_accident, log_scale=True)","c9c101fb":"cities_by_accident[cities_by_accident == 1]","c410c918":"df.Start_Time","bee68eff":"df.Start_Time = pd.to_datetime(df.Start_Time)","1a65f1d6":"sns.distplot(df.Start_Time.dt.hour, bins=24,kde=False, norm_hist=True)","04a8d4cc":"sns.distplot(df.Start_Time.dt.dayofweek, bins=7, kde=False, norm_hist=True)","143a719a":"sundays_start_time = df.Start_Time[df.Start_Time.dt.dayofweek == 6]\nsns.distplot(sundays_start_time.dt.hour, bins=24, kde=False, norm_hist=True)","35384f9b":"monday_start_time = df.Start_Time[df.Start_Time.dt.dayofweek == 0]\nsns.distplot(monday_start_time.dt.hour, bins=24, kde=False, norm_hist=True)","7c10bced":"df_2019 = df[df.Start_Time.dt.year == 2019]\nsns.distplot(df_2019.Start_Time.dt.month, bins=12, kde=False, norm_hist=True)","5e6a81cf":"df.Start_Lat","95a57850":"df.Start_Lng","a0fe2e19":"#sample_df = df.sample(int(0.1 * len(df)))","2e04b6a3":"sns.scatterplot(x=df.Start_Lng, y=df.Start_Lat, size=0.001)","3a220105":"import folium","fa8b31d1":"lat, lon = df.Start_Lat[0], df.Start_Lng[0]\nlat, lon","4a3753aa":"for x in df[['Start_Lat', 'Start_Lng']].sample(100).iteritems():\n    print(x[1])","b11d382c":"zip(list(df.Start_Lat), list(df.Start_Lng))","3d3b8aab":"from folium.plugins import HeatMap","83c9da76":"sample_df = df.sample(int(0.001 * len(df)))\nlat_lon_pairs = list(zip(list(sample_df.Start_Lat), list(sample_df.Start_Lng)))","525c4e3a":"map = folium.Map()\nHeatMap(lat_lon_pairs).add_to(map)\nmap","6f931cb3":"# US Accidents Exploratory Data Analysis","7ca9d008":"## Data Preparation and Cleaning\n\n1. Load the file using Pandas\n2. Look at some information about the data & the columns\n3. Fix any missing or incorrect values","12295cc1":"### City","843430d8":"- Figure out how to show percentages","d45d3d33":"- A high percentage of accidents occur between 6 am to 10 am (probably people in a hurry to get to work)\n- Next higest percentage is 3 pm to 6 pm.","38b50ac0":"Remove columns that you don't want to use.","6f44cf39":"### Start Latitude & Longitude\n","6305935c":"## Summary\n\n\nInsights:\n- Data from NYC isn't available which is of highest population in USA\n- The number of accidents per city decreases exponentially\n- Less than 5% of cities have more than 1000 yearly accidents.\n- Over 1200 cities have reported just one accident (need to investigate)\n","8d455a3f":"Percentage of missing values per column","4bd39033":"Is the distribution of accidents by hour the same on weekends as on weekdays.","79d72aa7":"### Start Time","dd1a2e76":"On Sundays, the peak occurs between 10 am and 3 pm, unlike weekdays","e6d93767":"## Exploratory Analysis and Visualization\n\nColumns we'll analyze:\n\n1. City\n2. Start Time\n3. Start Lat, Start Lng\n4. Temperature\n5. Weather Condition"}}