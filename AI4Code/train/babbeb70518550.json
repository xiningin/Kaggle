{"cell_type":{"0a4b2144":"code","3aa71572":"code","1981a395":"code","ca5a03fd":"code","2439e460":"code","1da8dc57":"code","710ac3e0":"code","303b2f61":"code","f21ddacf":"code","1b9e24d7":"code","9c2ac17d":"code","a4eb1c67":"code","360438d3":"code","7530e07b":"code","c9632039":"code","6d454371":"code","fed7fb89":"code","f1cfe47d":"code","60446e1b":"code","945b1efe":"code","4b2aa1bb":"code","59d7cf6e":"code","13eccc2a":"code","1b8f58f8":"code","b9550d3b":"code","d8fa4ace":"code","2e46e2f0":"code","b791b02f":"code","631ffdbb":"code","651fe848":"code","68cf659f":"code","61dd5236":"code","3fe480c6":"code","c27b91c0":"code","c1b94a90":"markdown","1616735c":"markdown","b1194dc6":"markdown"},"source":{"0a4b2144":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory","3aa71572":"# import libraries \nimport fastai \nfrom fastai import * \nfrom fastai.text import * \nimport pandas as pd \nimport numpy as np \nfrom functools import partial \nimport io \nimport os","1981a395":"from sklearn.datasets import fetch_20newsgroups ","ca5a03fd":"cats = ['rec.sport.hockey','comp.sys.ibm.pc.hardware','soc.religion.christian']\n#cats = ['alt.atheism', 'sci.space', 'rec.motorcycles']\ndataset = fetch_20newsgroups(subset='train', categories=cats)","2439e460":"#dataset = fetch_20newsgroups(shuffle=True, random_state=1, remove= ('headers', 'footers', 'quotes'))","1da8dc57":"documents = dataset.data","710ac3e0":"df = pd.DataFrame({'label':dataset.target, 'text':dataset.data})","303b2f61":"df.shape\ndf.head()","f21ddacf":"#df = df[df['label'].isin([1,7,10])] \ndf = df.reset_index(drop = True)","1b9e24d7":"df['label'].value_counts()","9c2ac17d":"df['text'] = df['text'].str.replace(\"[^a-zA-Z]\", \" \")","a4eb1c67":"import nltk\nnltk.download('stopwords') \nfrom nltk.corpus import stopwords ","360438d3":"stop_words = stopwords.words('english')","7530e07b":"# tokenization \ntokenized_doc = df['text'].apply(lambda x: x.split()) ","c9632039":"# remove stop-words \ntokenized_doc = tokenized_doc.apply(lambda x:[item for item in x if \n                                    item not in stop_words]) ","6d454371":"# de-tokenization \ndetokenized_doc = [] ","fed7fb89":"for i in range(len(df)):\n    t =' '.join(tokenized_doc[i]) \n    detokenized_doc.append(t) ","f1cfe47d":"df['text'] = detokenized_doc","60446e1b":"from sklearn.model_selection import train_test_split ","945b1efe":"# split data into training and validation set \ndf_trn, df_val = train_test_split(df, stratify = df['label'],  test_size = 0.2, random_state = 12)","4b2aa1bb":"df_trn.shape, df_val.shape","59d7cf6e":"# Language model data \ndata_lm = TextLMDataBunch.from_df(train_df = df_trn, valid_df = df_val, path = \"\") ","13eccc2a":"# Classifier model data \ndata_clas = TextClasDataBunch.from_df(path = \"\", train_df = df_trn, \n                                      valid_df = df_val,  \n                                      vocab=data_lm.train_ds.vocab, \n                                      bs=32)","1b8f58f8":"learn = language_model_learner(data_lm, pretrained_model=URLs.WT103, drop_mult=0.7)","b9550d3b":"learn.lr_find()\nlearn.recorder.plot()","d8fa4ace":"# train the learner object with learning rate = 1e-2 \nlearn.fit_one_cycle(3, 1e-2)","2e46e2f0":"learn.unfreeze()\nlearn.fit_one_cycle(3, slice(2e-3\/100, 2e-3))","b791b02f":"learn.predict(\"Why the edits made under \", n_words=10)","631ffdbb":"learn.save_encoder('ft_enc')","651fe848":"learn = text_classifier_learner(data_clas, drop_mult=0.7) \nlearn.load_encoder('ft_enc')","68cf659f":"learn.fit_one_cycle(1, 1e-2)","61dd5236":"learn.unfreeze()\nlearn.fit_one_cycle(3, slice(2e-3\/100, 2e-3))","3fe480c6":"# get predictions \npreds, targets = learn.get_preds(DatasetType.Valid) \npredictions = np.argmax(preds, axis = 1) ","c27b91c0":"%matplotlib inline\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(font_scale=2)\n#predictions = model.predict(X_test, batch_size=1000)\n\n#LABELS = ['graphics','hockey'] \nLABELS = cats\n\nconfusion_matrix = metrics.confusion_matrix(targets, predictions)\n\nplt.figure(figsize=(5, 5))\nsns.heatmap(confusion_matrix, xticklabels=LABELS, yticklabels=LABELS, annot=True, fmt=\"d\", annot_kws={\"size\": 20});\nplt.title(\"Confusion matrix\", fontsize=20)\nplt.ylabel('True label', fontsize=20)\nplt.xlabel('Predicted label', fontsize=20)\nplt.show()","c1b94a90":"https:\/\/scikit-learn.org\/0.19\/datasets\/twenty_newsgroups.html","1616735c":"https:\/\/mc.ai\/tutorial-on-text-classification-nlp-using-ulmfit-and-fastai-library-in-python\/","b1194dc6":"# Classifier"}}