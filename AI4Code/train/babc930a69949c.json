{"cell_type":{"7f41e610":"code","d008ea1d":"code","eebe531c":"code","f038fcce":"code","cb56d65d":"code","7ae45988":"code","b3d96727":"code","aeac796a":"code","4c06140c":"code","332aea72":"code","758059b4":"code","270a8782":"code","d249762e":"code","625c89bc":"code","84a9698a":"code","ff85d6cd":"code","6ef1d37e":"markdown"},"source":{"7f41e610":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n#pd.options.display.max_colwidth = 100\npd.set_option('display.max_colwidth', -1)\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d008ea1d":"quotes = pd.read_json('..\/input\/quotes.json')\nquotes.head()","eebe531c":"#Check if there is NaN Values in Columns\nquotes.isnull().sum()","f038fcce":"#Check if there is NaN Values in Rows\nquotes.isnull().sum(axis=1)","cb56d65d":"#Convert the Popularity Column into Some More Precise Values or Change it from 0.1 to 1.0\nquotes['Popularity'] = quotes['Popularity']*10","7ae45988":"#Check How Many Categories We Have\ncategories = quotes['Category']\ncat = categories.unique()\ncat","b3d96727":"#Now We Calculate the Popularity of Author that is most in all\ngroup = quotes.groupby('Author')['Popularity'].mean()","aeac796a":"ans = group.sort_values(ascending=False).head()#Top Author is William W. Purkey\nans","4c06140c":"#Check the Quotes According to Any Category\npd.DataFrame(quotes.loc[quotes['Category']=='inspiration']['Quote']).head()","332aea72":"#Check Mean of All Categories\npopular = quotes.groupby('Category')['Popularity'].mean()\npopular","758059b4":"#Plot Graph of all Categories and Their Mean Values\nfig = plt.gcf()\nfig.set_size_inches(40, 10.5, forward=True)\nplt.bar(popular.index,popular.values)","270a8782":"#Top 5 Categories\npopular.nlargest(5)","d249762e":"#Split the First 3 Tags in different Columns\nquotes['Tags'] = quotes['Tags'].apply(lambda x: str(x).replace('-',' '))\nquotes['Tags'].unique()","625c89bc":"quotes['Tag_1'] = ''\nquotes['Tag_2'] = ''\nquotes['Tag_3'] = ''\n\nquotes['Tag_1']= quotes['Tags'].apply(lambda x: str(x).split(',',3)[:1])\nquotes['Tag_2']= quotes['Tags'].apply(lambda x: str(x).split(',',3)[1:2])\nquotes['Tag_3']= quotes['Tags'].apply(lambda x: str(x).split(',',3)[2:3])\n\nquotes['Tag_1'] = quotes['Tag_1'].str.get(0)\nquotes['Tag_2'] = quotes['Tag_2'].str.get(0)\nquotes['Tag_3'] = quotes['Tag_3'].str.get(0)\n\nquotes['Tag_1'] = quotes['Tag_1'].apply(lambda x: str(x).replace(\"'\",\"\"))\nquotes['Tag_1'] = quotes['Tag_1'].apply(lambda x: str(x).replace(\"[\",\"\"))\n\nquotes['Tag_2'] = quotes['Tag_2'].apply(lambda x: str(x).replace(\"'\",\"\"))\nquotes['Tag_3'] = quotes['Tag_3'].apply(lambda x: str(x).replace(\"'\",\"\"))\n\n\nquotes.head()","84a9698a":"#Check Tag_1 Popularity\nTag1_popularity = quotes.groupby('Tag_1')['Popularity'].mean()","ff85d6cd":"#Top 5 in Tag_1\nTag1_popularity.nlargest(5)","6ef1d37e":"**Data is Cleaned as we see in the row and columns of the data**"}}