{"cell_type":{"9b4258a8":"code","24cea410":"code","33311963":"code","6065998f":"code","89132713":"code","0f6e941b":"code","84ab90cf":"code","279978a0":"code","a49a05b2":"code","86f1eb43":"code","d02993ce":"code","d1d3a7cd":"code","57a834ac":"code","82023294":"code","107e19f0":"code","dd1d8bd4":"markdown","c64ee230":"markdown","10786201":"markdown","8aaa9824":"markdown","f59ef72b":"markdown","8d1f06cd":"markdown","7002bd67":"markdown","fec32aca":"markdown","2ba0125d":"markdown","06d1da5c":"markdown"},"source":{"9b4258a8":"# Import necessary packages\nimport os\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport datetime \n\n# Handle date time conversions between pandas and matplotlib\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\n\n# Use white grid plot background from seaborn\nsns.set(font_scale=1.5, style=\"whitegrid\")","24cea410":"player = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/players.csv\")\n","33311963":"player.info()","6065998f":"player['height'].value_counts()","89132713":"player['height'] = player['height'].str.replace('[-]', '') ","0f6e941b":"#convert the height column from object type to int \nplayer['height'] = pd.to_numeric(player['height'])\n\nplayer.head(10)","84ab90cf":"#sort the dataframe values from the height column \nplayer = player.sort_values(by=['weight'], ascending=False)\n#convert birthdate column to age\n#player['birthDate'] = pd.to_datetime(player['birthDate'], format='%m%d%y')\ndef from_dob_to_age(born):\n    today = datetime.date.today()\n    return today.year - born.year - ((today.month, today.day) < (born.month, born.day))\nplayer['birthDate'] =  pd.to_datetime(player['birthDate'], infer_datetime_format=True)\nplayer['age'] = player['birthDate'].apply(lambda x: from_dob_to_age(x))\nplayer.head(10)","279978a0":"player = player.sort_values(by=['age'], ascending=False)\nplayer","a49a05b2":"player_30 = player[player['age'] > 30] \nplayer_30","86f1eb43":"player['position'].value_counts() \n","d02993ce":"table = player.pivot_table(index=['position'], aggfunc='median')\ntable.head(10) ","d1d3a7cd":"del table['nflId']\ntable.info()\ntable.hist()","57a834ac":"table.sort_values(by='weight',ascending=False).plot(kind='bar' ,figsize =(15,6), title ='positions grouped by age & weight')","82023294":"plays = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/plays.csv\")\nplays","107e19f0":"plays['playDescription'].value_counts() ","dd1d8bd4":"**Play data**\n* gameId: Game identifier, unique (numeric)\n \n* playId: Play identifier, not unique across games (numeric)\n\n* playDescription: Description of play (text)\n \n* quarter: Game quarter (numeric)\n\n* down: Down (numeric)\n \n* yardsToGo: Distance needed for a first down (numeric)\n \n* possessionTeam: Team on offense (text)\n \n* playType: Outcome of dropback: sack or pass (text)\n\n* yardlineSide: 3-letter team code corresponding to line-of-scrimmage (text)\n\n* yardlineNumber: Yard line at line-of-scrimmage (numeric)\n \n* offenseFormation: Formation used by possession team (text)\n \n* personnelO: Personnel used by offensive team (text)\n\n* defendersInTheBox: Number of defenders in close proximity to line-of-scrimmage (numeric)\n \n* numberOfPassRushers: Number of pass rushers (numeric)\n \n* personnelD: Personnel used by defensive team (text)\n \n* typeDropback: Dropback categorization of quarterback (text)\n \n* preSnapHomeScore: Home score prior to the play (numeric)\n \n* preSnapVisitorScore: Visiting team score prior to the play (numeric)\n \n* gameClock: Time on clock of play (MM:SS)\n \n* absoluteYardlineNumber: Distance from end zone for possession team (numeric)\n \n* penaltyCodes: NFL categorization of the penalties that ocurred on the play. For purposes of this contest, the most important penalties are Defensive Pass Interference (DPI), Offensive Pass Interference (OPI), Illegal Contact (ICT), and Defensive Holding (DH). Multiple penalties on a play are separated by a ; (text)\n \n* penaltyJerseyNumber: Jersey number and team code of the player commiting each penalty. Multiple penalties on a play are separated by a ; (text)\n \n* passResult: Outcome of the passing play (C: Complete pass, I: Incomplete pass, S: Quarterback sack, IN: Intercepted pass, text)\n\n* offensePlayResult: Yards gained by the offense, excluding penalty yardage (numeric)\n \n* playResult: Net yards gained by the offense, including penalty yardage (numeric)\n \n* epa: Expected points added on the play, relative to the offensive team. Expected points is a metric that estimates the average of every next scoring outcome given the play's down, distance, yardline, and time remaining (numeric)\n \n* isDefensivePI: An indicator variable for whether or not a DPI penalty ocurred on a given play (TRUE\/FALSE) ","c64ee230":"there are unwanted characters that should be removed\/corrected from the height column before converting the column from object to numeric  ","10786201":"**Analyzing Position variable **: \nhttps:\/\/abbreviations.yourdictionary.com\/articles\/football-positions-abbreviations-and-meanings.html\n\n![image.png](attachment:image.png)\n","8aaa9824":"1. **Abbreviations for Soccer Midfielder Positions**\n* LW: Left Winger; Plays along sideline to shoot, assist, and score\n**Abbreviations for Offense Positions**\n* RB: Running Back; Can run the ball, make a catch, block, or even throw the ball \n* TE: Tight End; Blocks or catches passes\n* QB: Quarterback; Calls the plays and initiates ball action\n* HB: Halfback; Runs the ball or blocks, the other running back position\n\n1. **Abbreviations for Special Teams Positions**\n* P: Punter; Punts the ball to the opposing team\n* LS: Long Snapper; Takes position of C for long snaps, as in the case of field goals and punts\n1. **Abbreviations for Soccer Forward Positions**\n* S: Striker; Focuses on scoring\n* K: Kicker; Kicks field goals (FG) and extra points (XP)\n","f59ef72b":"1. **Abbreviations for Defense Positions :**\n * SS: Strong Safety; Stop TEs, RBs, and WRs; Tends to play closer to the DL than FS\n * FS: Free Safety; Stop TEs, RBs, and WRs; Tends to play further from the DL than FS, aligned with the offense\u2019s TE\n * OLB: Outside Linebacker; Tackle ball carrier; Aligns toward outer portion of formation\n * CB: Center-back; Stop other team from getting near GK\n * LB: Linebacker; Tackle ball carrier; Sets up between DL and FS\/SS\n * ILB: Inside Linebacker; Tackle ball carrier; Aligns toward inner portion of formation\n * DE: Defensive End; Get past OL, tackle QB, or tackle ball carriers; Sets up at either end of the DL\n * MLB: Middle Linebacker; Tackle ball carrier; Aligns in center of formation\n * DT: Defensive Tackle; Get past OL, tackle QB, or tackle ball carriers; Sets up in the middle of the DL\n * FB: Fullback; Lead blocker, one of two running back positions\n * S: Safety;  Stop TEs, RBs, and WRs; Sets up in the back of the formation\n * NT: Nose Tackle; Hold off as many OL players as possible; Sets up in the center of the DL","8d1f06cd":"# **Player data**\nnflId: Player identification number, unique across players (numeric)\n\nheight: Player height (text)\n\nweight: Player weight (numeric)\n\nbirthDate: Date of birth (YYYY-MM-DD)\n\ncollegeName: Player college (text)\n\nposition: Player position (text)\n\ndisplayName: Player name (text)","7002bd67":"# **Plays Analysis ******","fec32aca":"player that are > 30 old years  : 255 players ","2ba0125d":" Nose Tackle  & Defensive tackle  & Defensive end  have the highest weights. ","06d1da5c":"*Documentation*\n**pandas.pivot_table**(data, values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False)"}}