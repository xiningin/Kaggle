{"cell_type":{"c8f24ff2":"code","004f2d84":"code","a9247ff5":"code","f5eac9f0":"code","2fcddc68":"code","406f845f":"code","9b46b00d":"code","39ed6f35":"code","de97db53":"code","15764441":"code","8747e363":"code","25f03efb":"code","c1c91596":"code","b67c1ba3":"code","60785340":"code","661970ed":"code","9fa61b8c":"code","2a1aeac5":"code","7f55856c":"code","7856b633":"code","5cde4bba":"code","eb1df327":"code","6f3ea2d2":"code","e0a9be72":"code","8bfe2903":"code","edaf1ccc":"code","46ce1c14":"code","b4effcd5":"code","5bfac5d4":"code","5219b739":"code","e01fcbf1":"code","edbb7cbf":"markdown"},"source":{"c8f24ff2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","004f2d84":"data=pd.read_csv(\"..\/input\/autompg-dataset\/auto-mpg.csv\")\ndata.head()","a9247ff5":"data.describe()","f5eac9f0":"data.shape","2fcddc68":"data.horsepower","406f845f":"sum(data.horsepower=='?')","9b46b00d":"data=data[data.horsepower!='?']","39ed6f35":"data.horsepower=data.horsepower.astype('int64')","de97db53":"data.describe()","15764441":"data['car name'].value_counts()","8747e363":"data['car name'].fillna('dddddd')","25f03efb":"data['car name']=[i[0] for i in data['car name'].str.split(' ')]","c1c91596":"data['car name'].unique()","b67c1ba3":"data['car name']=data['car name'].replace(['chevrolet','chevy','chevroelt'],'chevrolet')\ndata['car name']=data['car name'].replace(['volkswagen','vw','vokswagen'],'volkswagen')\ndata['car name']=data['car name'].replace('maxda','mazda')\ndata['car name']=data['car name'].replace('toyouta','toyota')\ndata['car name']=data['car name'].replace('mercedes','mercedes-benz')\ndata['car name']=data['car name'].replace('nissan','datsun')\ndata['car name']=data['car name'].replace('capri','ford')","60785340":"len(data['car name'])","661970ed":"data.info()","9fa61b8c":"plt.hist(data.mpg)","2a1aeac5":"sns.pairplot(data)","7f55856c":"from sklearn.preprocessing import StandardScaler,OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.tree import DecisionTreeRegressor","7856b633":"data=pd.concat([data,pd.get_dummies(data.origin,prefix='origin')],axis=1)\ndata.drop('origin',axis=1,inplace=True)","5cde4bba":"data=pd.concat([data,pd.get_dummies(data.cylinders,prefix='cylinders')],axis=1)\ndata.drop('cylinders',axis=1,inplace=True)","eb1df327":"data=pd.concat([data,pd.get_dummies(data['model year'],prefix='year')],axis=1)\ndata.drop('model year',axis=1,inplace=True)","6f3ea2d2":"data.head(7)","e0a9be72":"data[['displacement','horsepower','weight','acceleration']]=StandardScaler().fit_transform(data[['displacement','horsepower','weight','acceleration']])","8bfe2903":"data=pd.concat([data,pd.get_dummies(data['car name'],prefix='car')],axis=1)\ndata.drop('car name',axis=1,inplace=True)","edaf1ccc":"data.shape","46ce1c14":"y = data.pop('mpg')\nX = data","b4effcd5":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)","5bfac5d4":"lr=LinearRegression()\nlr.fit(X_train,y_train)","5219b739":"y_pred=lr.predict(X_test)\nmean_squared_error(y_pred,y_test)","e01fcbf1":"from sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","edbb7cbf":"Linear Regression with auto-mpg.\n\nSome EDA followed by linear regression."}}