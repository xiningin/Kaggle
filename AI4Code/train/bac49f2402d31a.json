{"cell_type":{"bcdba4e3":"code","466440b7":"code","85b77e60":"code","b7f5002c":"code","60335351":"code","d8c73c15":"code","43b16119":"code","977df23f":"markdown","b6a7a067":"markdown","ee3c0e1b":"markdown","f46479b2":"markdown","4dcda935":"markdown","11a9a45b":"markdown","07254bda":"markdown","8086b76e":"markdown","c3e77f14":"markdown"},"source":{"bcdba4e3":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\npd.set_option('max_columns', 100)","466440b7":"def create_football_field(linenumbers=True,\n                          endzones=True,\n                          highlight_line=False,\n                          highlight_line_number=50,\n                          highlighted_name='Line of Scrimmage',\n                          fifty_is_los=False,\n                          figsize=(12, 6.33),\n                          facecolor='darkgreen'):\n    \"\"\"\n    Function that plots the football field for viewing plays.\n    Allows for showing or hiding endzones.\n    \"\"\"\n    rect = patches.Rectangle((0, 0), 120, 53.3, linewidth=0.1,\n                             edgecolor='r', facecolor=facecolor, zorder=0)\n\n    fig, ax = plt.subplots(1, figsize=figsize)\n    ax.add_patch(rect)\n\n    plt.plot([10, 10, 10, 20, 20, 30, 30, 40, 40, 50, 50, 60, 60, 70, 70, 80,\n              80, 90, 90, 100, 100, 110, 110, 120, 0, 0, 120, 120],\n             [0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3,\n              53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 53.3, 0, 0, 53.3],\n             color='black')\n    if fifty_is_los:\n        plt.plot([60, 60], [0, 53.3], color='gold')\n        plt.text(62, 50, '<- Player Yardline at Snap', color='gold')\n    # Endzones\n    if endzones:\n        ez1 = patches.Rectangle((0, 0), 10, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ez2 = patches.Rectangle((110, 0), 120, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ax.add_patch(ez1)\n        ax.add_patch(ez2)\n    plt.xlim(0, 120)\n    plt.ylim(-5, 58.3)\n    plt.axis('off')\n    if linenumbers:\n        for x in range(20, 110, 10):\n            numb = x\n            if x > 50:\n                numb = 120 - x\n            plt.text(x, 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='black')\n            plt.text(x - 0.95, 53.3 - 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='black', rotation=180)\n    if endzones:\n        hash_range = range(11, 110)\n    else:\n        hash_range = range(1, 120)\n\n    for x in hash_range:\n        ax.plot([x, x], [0.4, 0.7], color='black')\n        ax.plot([x, x], [53.0, 52.5], color='black')\n        ax.plot([x, x], [22.91, 23.57], color='black')\n        ax.plot([x, x], [29.73, 30.39], color='black')\n\n    if highlight_line:\n        hl = highlight_line_number + 10\n        plt.plot([hl, hl], [0, 53.3], color='yellow')\n        plt.text(hl + 2, 50, '<- {}'.format(highlighted_name),\n                 color='yellow')\n    return fig, ax","85b77e60":"create_football_field()\nplt.show()","b7f5002c":"data = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week10.csv')","60335351":"player_id = 496733.0\ngame_id = 2018110800","d8c73c15":"player_data = data.query('gameId == @game_id and nflId == @player_id')\n\nfig, ax = create_football_field()\nplayer_data.plot(x='x', y='y', kind='scatter', ax=ax, color='blue', s=5, legend='Away')\nplt.title('Game #{}: Player {} positions'.format(game_id, player_data.loc[0, 'displayName']))\nplt.legend()\nplt.show()","43b16119":"player_data = data.query('gameId == @game_id and nflId == @player_id')\nplayer_x_coord = player_data['x']\nplayer_y_coord = player_data['y']\n\nfig, ax = create_football_field(facecolor='none')\nsns.kdeplot(player_x_coord, player_y_coord, shade = True,\n            shade_lowest=False, color = 'green', n_levels=30, ax=ax)\n\nplt.title('Game #{}: Player {} heatmap'.format(game_id, player_data.loc[0, 'displayName']))\nplt.legend()\nplt.show()","977df23f":"### Define `gameId` (game identifier) and `nflId` (player identifier)","b6a7a067":"## Plotting the field","ee3c0e1b":"Field plotting method was created by Rob Mulla in [this notebook](https:\/\/www.kaggle.com\/robikscube\/nfl-big-data-bowl-plotting-player-position). I re-use it for plotting player position and heatmap.","f46479b2":"### Function to Create The Football Field","4dcda935":"# NFL Big Data Bowl","11a9a45b":"## Load dataset","07254bda":"### Plotting heatmap of player position in a gameId","8086b76e":"### Plotting player position in a `gameId`","c3e77f14":"We load dataset from a week (from 1 to 17) to plot data. For example, I loaded week 10 dataset.\n- The `x` and `y` columns are player coordinate\n- `o`: Player orientation (deg), 0 - 360 degrees\n- `dir`: Angle of player motion (deg), 0 - 360 degrees (numeric)\n- `nflId`: Player identification number, unique across players\n- PlayId is not unique across games, only within the game. So for unique ids you need to use a combination of gameId and playId"}}