{"cell_type":{"f160903a":"code","3dccd08e":"code","435d99a0":"code","24ed3553":"code","e436cb12":"code","748e8433":"code","ec057496":"code","81af6591":"code","c26a5994":"code","dc343117":"code","41bd33c5":"code","2c35bbb2":"code","1db5eeab":"code","66548d12":"code","c19ba6be":"code","1b6f7be6":"code","493ab73c":"code","778c86dc":"code","a0cc241e":"code","fe73c708":"code","61178f12":"code","9e30f057":"code","ab0deec1":"code","d5fff145":"code","611a818e":"code","16fcbb5a":"code","9943e58c":"code","995c4899":"code","83fe315e":"code","707bb12e":"code","cf06fea7":"code","811b8639":"code","697e954f":"code","1f451796":"code","86d625b1":"code","fbddf455":"code","1e5589b3":"code","9318ca2d":"code","e20040a7":"code","b8d94286":"code","10b0f314":"code","42f7f0fd":"code","8291c6a2":"code","80c790cd":"code","d2af79ae":"code","cd2960c4":"code","2f650e32":"code","cdc98cea":"code","9878fe80":"code","8c8ea2e1":"code","d74c1318":"code","9a455805":"code","76820a9b":"code","054c4f57":"code","efcf2af6":"code","a7ae7266":"code","1c16ae0d":"code","3be7d4ae":"code","6af196ed":"code","290aeaf4":"code","bb206562":"code","4445142a":"code","7d7155f6":"code","caf3b750":"code","b6ef7026":"code","92778302":"markdown","aadd5244":"markdown","86361d80":"markdown","5eb9e4ae":"markdown","5ae32109":"markdown","b862bf7b":"markdown","879e7720":"markdown","901b12f3":"markdown","4d957fb4":"markdown","5d5977dc":"markdown","79b6567c":"markdown","541ff9e4":"markdown","c39a4fb3":"markdown","e898445f":"markdown","0bd3f1f8":"markdown","226abe7a":"markdown","c6a97802":"markdown","e734bcb4":"markdown","0c73bf8b":"markdown","b80ceb41":"markdown","66cc64d2":"markdown","04b58c66":"markdown","7c0cc873":"markdown"},"source":{"f160903a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3dccd08e":"import numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nimport pandas as pd\nimport seaborn as sns\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom matplotlib import rc\nimport matplotlib as mpl\nfrom sklearn.model_selection import train_test_split\nfrom pandas.plotting import register_matplotlib_converters\nfrom matplotlib.font_manager import FontProperties\n\n%matplotlib inline\n%config InlineBackend.figure_format='retina'\n\nregister_matplotlib_converters()\n\n# \u5b89\u88c5\u4e2d\u6587\u5b57\u4f53\uff0c\u5e76\u67e5\u770bwqy\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u5df2\u7ecf\u6709wqy-zenhei.ttc\u6587\u4ef6\u4e86\n!apt-get install ttf-wqy-zenhei -y\n!ls \/usr\/share\/fonts\/truetype\/wqy\n!fc-list :lang=zh\n\n# \u663e\u793a\u4e2d\u6587\u6216\u8005\u65e5\u6587\u7684\u65b9\u6cd5\nfont_set = FontProperties(fname=\"\/usr\/share\/fonts\/truetype\/wqy\/wqy-zenhei.ttc\", size=20) \n\n# \u4e0b\u9762\u662fsns\u7684\u7efc\u5408\u8bbe\u5b9a(sns setting )\nsns.set('poster', 'whitegrid','colorblind', font_scale=0.6, \n        rc={\"lines.linewidth\": 1, 'grid.linestyle': '--'})\n# sns.set_palette(\"winter\", 8, 0.5)  # \u8fd9\u4e2a\u662f\u6539\u53d8\u8f93\u51fa\u989c\u8272\u7684\uff08this is that setting color output change\uff09\n\n# plt.style.use('fivethirtyeight')\n\nrcParams['figure.figsize'] = 15, 8\n\nRANDOM_SEED = 42\nnp.random.seed(RANDOM_SEED)\ntf.random.set_seed(RANDOM_SEED)","435d99a0":"# index_col\u6307\u5b9adf\u6570\u636e\u96c6\u91cc\u9762\u90a3\u4e2a\u5217\u662f\u7d22\u5f15\uff0cparse_dates\u5982\u679cTrue\u5219\u7d22\u5f15\u5217\u53d8\u6210datetime\u7c7b\u578b\ndf = pd.read_csv(\n  \"\/kaggle\/input\/london-bike-sharing-dataset\/london_merged.csv\", \n  parse_dates=True, \n  index_col=\"timestamp\"\n)","24ed3553":"df.info()","e436cb12":"plt.figure(figsize=(16,6))\nprint(df.isnull().sum())\nsns.heatmap(df.isnull(),cmap=\"viridis\")\nplt.suptitle(\"\u5404\u4e2a\u5b57\u6bb5\u7a7a\u503c\u68c0\u6d4b(Null value detection in each fields)\",fontproperties=font_set)\nplt.show()","748e8433":"df.head()","ec057496":"df['hour'] = df.index.hour\ndf['day_of_month'] = df.index.day\ndf['day_of_week'] = df.index.dayofweek\ndf['month'] = df.index.month","81af6591":"sns.lineplot(x=df.index, y=\"cnt\", data=df)\nplt.xticks(rotation=270)\nplt.grid(True)\nplt.show()","c26a5994":"df.head()","dc343117":"# df_by_month1=df.resample('W').ohlc()\ndf_by_day1=df.resample('D').sum()\ndf_by_day1.head()","41bd33c5":"sns.lineplot(x=df_by_day1.index,y=df_by_day1['cnt'],data=df_by_day1)\nplt.show()","2c35bbb2":"# \u56e0\u4e3a\u2018daily'\u5355\u4f4d\u67e5\u770b\u56fe\u8868\u592a\u7d27\u5bc6\u4e86\uff0c\u6240\u4ee5\u4f7f\u7528\u6708\u4e3a\u5355\u4f4d\u8fdb\u884c\u67e5\u770b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u660e\u663e\u7684\u5468\u671f\u6027\uff0c7-8\u6708\u4efd\u4f7f\u7528\u7684\u591a\uff0c\u51ac\u5b63\u4f7f\u7528\u7684\u4eba\u5c11\uff0c\u548c\u5929\u6c14\u5b63\u8282\u6709\u5f88\u9ad8\u7684\u76f8\u5173\u6027\n# As 'daily' unit view is too close,so using 'month' unit implement view. could you see obviously period of season . \n# july and eight more used, winter small used, because of volumn of using that to weather and season have very high correlation.\ndf_by_month = df.resample('M').sum()\nsns.lineplot(x=df_by_month.index, y=\"cnt\", data=df_by_month);","1db5eeab":"fig,(ax1, ax2, ax3, ax4, ax5)= plt.subplots(nrows=5)\nfig.set_size_inches(18, 28)\n\nsns.pointplot(data=df, x='hour', y='cnt', ax=ax1)\nsns.pointplot(data=df, x='hour', y='cnt', hue='is_holiday', ax=ax2)\nsns.lineplot(data=df, x='hour',y='cnt',hue='is_holiday',color=\"r\",ax=ax3)\nsns.pointplot(data=df, x='hour', y='cnt', hue='is_weekend', ax=ax4)\nsns.pointplot(data=df, x='hour', y='cnt', hue='season',ax=ax5)\nplt.show()","66548d12":"fig.set_size_inches(10, 8)\nsns.countplot(data=df,hue=df.is_holiday,x=df.season)","c19ba6be":"plt.figure(figsize=(20,6))\nsns.pointplot(data=df,x=df.hum,y=df.cnt,color=\"black\")\nplt.xticks(rotation=90)\nplt.title(\"\u6e7f\u5ea6\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\uff08hum to bicycle share usage relation\uff09\",fontproperties=font_set)\nplt.show()","1b6f7be6":"plt.figure(figsize=(16,6))\nsns.pointplot(data=df,x=df.wind_speed,y=df.cnt)\nplt.xticks(rotation=90)\nplt.title(\"\u98ce\u901f\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb(wind speed to bicycle share usage relation)\",fontproperties=font_set)\nplt.show()","493ab73c":"plt.figure(figsize=(16,6))\nsns.pointplot(data=df,x=df.weather_code,y=df.cnt)\nplt.xticks(rotation=90)\nplt.title(\"\u5929\u6c14\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb(weather to bicycle share usage relation)\",fontproperties=font_set)\nplt.show()","778c86dc":"plt.figure(figsize=(16,6))\nsns.pointplot(x=df.hour,y=df.cnt,data=df,hue=df.weather_code)\nplt.title(\"\u4e0d\u540c\u5929\u6c14\u72b6\u51b5\u4e0b\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\uff08bicycle share usage volume in different weather\uff09\",fontproperties=font_set)\nplt.show()","a0cc241e":"df_hum=df.copy()\nfor idx in df_hum.index:\n  if(df_hum.loc[idx]['hum']>=20.0) & (df_hum.loc[idx]['hum']<=30.0):\n    df_hum.loc[idx,'hum']=1\n  elif(df_hum.loc[idx]['hum']>30.0) & (df_hum.loc[idx]['hum']<=40.0):\n    df_hum.loc[idx,'hum']=2\n  elif(df_hum.loc[idx]['hum']>40.0) & (df_hum.loc[idx]['hum']<=50.0):\n    df_hum.loc[idx,'hum']=3\n  elif(df_hum.loc[idx]['hum']>50.0) & (df_hum.loc[idx]['hum']<=60.0):\n    df_hum.loc[idx,'hum']=4\n  elif(df_hum.loc[idx]['hum']>60.0) & (df_hum.loc[idx]['hum']<=70.0):\n    df_hum.loc[idx,'hum']=5\n  elif(df_hum.loc[idx]['hum']>70.0) & (df_hum.loc[idx]['hum']<=80.0):\n    df_hum.loc[idx,'hum']=6\n  elif(df_hum.loc[idx]['hum']>80.0) & (df_hum.loc[idx]['hum']<=90.0):\n    df_hum.loc[idx,'hum']=7\n  elif(df_hum.loc[idx]['hum']>90.0):\n    df_hum.loc[idx,'hum']=8\n\nplt.figure(figsize=(16,6))\nsns.pointplot(x=df_hum.hour,y=df_hum.cnt,data=df_hum,hue=df_hum.hum)\nplt.title(\"\u4e0d\u540c\u6e7f\u5ea6\u72b6\u51b5\u4e0b\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb(bicycle share usage volume in different hum)\",fontproperties=font_set)\nplt.show()","fe73c708":"df_wind=df.copy()\nfor idx in df_wind.index:\n  if(df_wind.loc[idx]['wind_speed']>=0.0) & (df_wind.loc[idx]['wind_speed']<=5.0):\n    df_wind.loc[idx,'wind_speed']=1\n  elif(df_wind.loc[idx]['wind_speed']>5.0) & (df_wind.loc[idx]['wind_speed']<=10.0):\n    df_wind.loc[idx,'wind_speed']=2\n  elif(df_wind.loc[idx]['wind_speed']>10.0) & (df_wind.loc[idx]['wind_speed']<=15.0):\n    df_wind.loc[idx,'wind_speed']=3\n  elif(df_wind.loc[idx]['wind_speed']>15.0) & (df_wind.loc[idx]['wind_speed']<=20.0):\n    df_wind.loc[idx,'wind_speed']=4\n  elif(df_wind.loc[idx]['wind_speed']>20.0) & (df_wind.loc[idx]['wind_speed']<=25.0):\n    df_wind.loc[idx,'wind_speed']=5\n  elif(df_wind.loc[idx]['wind_speed']>25.0) & (df_wind.loc[idx]['wind_speed']<=30.0):\n    df_wind.loc[idx,'wind_speed']=6\n  elif(df_wind.loc[idx]['wind_speed']>30.0) & (df_wind.loc[idx]['wind_speed']<=35.0):\n    df_wind.loc[idx,'wind_speed']=7\n  elif(df_wind.loc[idx]['wind_speed']>35.0) & (df_wind.loc[idx]['wind_speed']<=40.0):\n    df_wind.loc[idx,'wind_speed']=8\n  elif(df_wind.loc[idx]['wind_speed']>40.0) & (df_wind.loc[idx]['wind_speed']<=45.0):\n    df_wind.loc[idx,'wind_speed']=9\n  elif(df_wind.loc[idx]['wind_speed']>45.0) & (df_wind.loc[idx]['wind_speed']<=50.0):\n    df_wind.loc[idx,'wind_speed']=10\n  elif(df_wind.loc[idx]['wind_speed']>50.0):\n    df_wind.loc[idx,'wind_speed']=11\n\nplt.figure(figsize=(16,6))\nsns.pointplot(x=df_wind.hour,y=df_wind.cnt,data=df_wind,hue=df_wind.wind_speed)\nplt.title(\"\u4e0d\u540c\u98ce\u901f\u72b6\u51b5\u4e0b\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb(bicycle share usage volume in different wind speed)\",fontproperties=font_set)\nplt.show()","61178f12":"plt.figure(figsize=(16,6))\nsns.countplot(data=df,x=df.day_of_week,hue=df.weather_code,palette=\"viridis\")\nplt.legend(loc=\"best\")\nplt.title(\"\u4e00\u5468\u6bcf\u5929\uff0c\u4e0d\u540c\u5929\u6c14\u72b6\u51b5\u4e0b\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb(In day of week, bicycle share usage volume in different weather)\",fontproperties=font_set)\nplt.show()","9e30f057":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df,x=df[\"hour\"],y=df.cnt)\nplt.title(\"\u901a\u8fc7\u7bb1\u56fe\u6570\u636e\u5206\u5e03\u72b6\u6001\u53ef\u4ee5\u6e05\u6670\u8868\u73b0\u51fa\u6765\uff0c\u4e2d\u4f4d\u6570\uff0c\u5f02\u5e38\u503c\uff0c\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u5206\u4f4d\u503c(data analysis status could be exact show by boxplot, include middle value,max value,min value,outlier value)\",fontproperties=font_set)\nplt.show()","ab0deec1":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df,x=df[\"day_of_week\"],y=df.cnt)\nplt.show()","d5fff145":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df,x=df[\"day_of_month\"],y=df.cnt)\nplt.show()","611a818e":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df,x=df[\"month\"],y=df.cnt)\nplt.title(\"\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa4-10\u6708\u4efd\u5355\u8f66\u4f7f\u7528\u91cf\u591a\u4e00\u4e9b\uff0c\u51ac\u5b63\u5355\u8f66\u4f7f\u7528\u91cf\u4f4e\u4e00\u4e9b(from chart known that share bicycle more used in April until October, but small used in winter)\",fontproperties=font_set)\nplt.show()","16fcbb5a":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df,x=df[\"day_of_month\"],y=df.cnt,hue=df[\"is_holiday\"])\nplt.title(\"\u5047\u65e5\u548c\u975e\u5047\u65e5\u7684\u5355\u8f66\u4f7f\u7528\u60c5\u51b5\uff08share bicycle usage in holiday and not holiday\uff09\",fontproperties=font_set)\nplt.show()","9943e58c":"df[:100][df[:100]['t1']==6.5]","995c4899":"df[:100][df[:100]['t2']==2.5]","83fe315e":"# t1\u6e29\u5ea6\u57282.5\u5ea6\u5355\u8f66\u4f7f\u7528\u6570\u91cf\u8868\u793a\uff0c\u53ef\u4ee5\u770b\u51fa7\u70b9\u5de6\u53f3\u7a81\u7136\u63d0\u9ad8\uff0c\u7f6e\u4fe1\u533a\u95f4\u5728150\u52301100\u5de6\u53f3\n# In temperature 2.5, share bicycle usage show, could you see suddenly rise in around 7 o'clock, confidence interval around 150 until 1100\ndf[:100][(df[:100]['t2']==2.5)]['cnt'].plot()\nplt.grid(True)\nplt.show()","707bb12e":"sns.set(style=\"whitegrid\")\nplt.figure(dpi=150)\nfig,(ax1,ax2)=plt.subplots(nrows=2)\nsns.pointplot(data=df[:100],x='t1',y='cnt',ax=ax1)\nsns.pointplot(data=df[:100],x='t2',y='cnt',ax=ax2)\nplt.show()","cf06fea7":"df_t1=df.groupby(['t1']).sum()\nprint(df_t1.head(50))\nsns.barplot(data=df_t1,x=df_t1.index,y='cnt')\nplt.xticks(rotation=270)\nplt.title(\"\u53ef\u4ee5\u770b\u51faT1\u6e29\u5ea6\u7684\u65f6\u5019\uff0c\u57286\u5ea6\u523022\u5ea6\u4e4b\u95f4\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u975e\u5e38\u9ad8(could be seen in T1 temperature, share bicycle usage volume more in 6 until 22 temperature)\",FontProperties=font_set)\nplt.show()","811b8639":"df_t2=df.groupby(['t2']).sum()\nprint(df_t2.head(50))\nsns.barplot(data=df_t2,x=df_t2.index,y='cnt')\nplt.xticks(rotation=270)\nplt.title(\"\u53ef\u4ee5\u770b\u51faT2\u6e29\u5ea6\u7684\u65f6\u5019\uff0c\u572811\u5ea6\u523021\u5ea6\u4e4b\u95f4\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u975e\u5e38\u9ad8(could be seen in T2 temperature, share bicycle usage volume more in 11 until 21 temperature)\",FontProperties=font_set)\nplt.show()","697e954f":"fig,(ax1, ax2)= plt.subplots(nrows=2)\nfig.set_size_inches(18, 14)\nsns.pointplot(data=df, x='day_of_week', y='cnt', ax=ax1)\nsns.pointplot(data=df, x='day_of_week', y='cnt', hue='season', ax=ax2);\nplt.suptitle(\"\u4e00\u5468\u4e2d\u5468\u65e5\uff0c\u54681\uff0c\u54682\uff0c\u54683\uff0c\u54684\u5355\u8f66\u7684\u4f7f\u7528\u91cf\u90fd\u6bd4\u8f83\u591a\uff0c\u5468\u4e94\u548c\u5468\u516d\u660e\u663e\u4e0b\u964d\u3002\u6309\u7167\u5b63\u8282\u5212\u5206\u590f\u5b63\uff0c\u79cb\u5b63\uff0c\u6625\u5b63\u4f7f\u7528\u7684\u91cf\u5f88\u5927\uff0c\u51ac\u5b63\u4f7f\u7528\u91cf\u964d\u4f4e\u3002(in sunday,monday,tuesday,wednesday,thursday that share bicycle more usage, obvious decrease in friday,saturday)\",FontProperties=font_set)\nplt.show()","1f451796":"fig.set_size_inches(18, 14)\ndf_month=df.groupby(['month']).sum()\nsns.barplot(data=df_month, x=df_month.index, y='cnt')\nplt.title(\"\u6bcf\u4e2a\u6708\u7684\u5355\u8f66\u4f7f\u7528\u603b\u91cf\u8868\u793a\uff0c\u53ef\u4ee5\u770b\u52304-10\u6708\u4f7f\u7528\u91cf\u9ad8\uff0c11\u6708\u52302\u6708\u4f7f\u7528\u91cf\u4f4e\uff08share bicycle usage total volume of each month show, could you seen April until October usage volume high, november until Feb usage volume down\n\uff09\",fontproperties=font_set)\nplt.show()","86d625b1":"df_weather=df.groupby(['weather_code']).sum()\n# \u964d\u5e8f\u6392\u5217cnt\u5b57\u6bb5\ndf_weather=df_weather.sort_values('cnt',ascending=False)\nindex_str={1.0:'Clear',2.0:'Few Clouds',3.0:'Broken Clouds',4.0:'Cloudy',7.0:'Light rain',10.0:'Rain With Thunderstorm',26.0:'Snowfall',94.0:'Freezing Fog'}\ndf_weather = df_weather.rename(index=index_str)\ndf_weather","fbddf455":"fig.set_size_inches(10,8)\nsns.barplot(data=df_weather,x=df_weather.index,y='cnt')\nplt.suptitle(\"\u53ef\u4ee5\u770b\u51faClear\uff0cFew Clouds\uff0cBorken Clouds\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u5f88\u5927\uff0cLight Rain\uff0cCloudy\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u964d\u4f4e\",fontproperties=font_set)\nplt.show()","1e5589b3":"df['wind_speed'].describe()","9318ca2d":"df_wind=df.copy()\nfor idx in df_wind.index:\n  if(df_wind.loc[idx]['wind_speed']>=0) & (df_wind.loc[idx]['wind_speed']<=8.0):\n    df_wind.loc[idx,'wind_speed']=1\n  elif(df_wind.loc[idx]['wind_speed']>8.0) & (df_wind.loc[idx]['wind_speed']<=24.0):\n    df_wind.loc[idx,'wind_speed']=2\n  elif(df_wind.loc[idx]['wind_speed']>24.0) & (df_wind.loc[idx]['wind_speed']<=32.0):\n    df_wind.loc[idx,'wind_speed']=3\n  elif(df_wind.loc[idx]['wind_speed']>32.0):\n    df_wind.loc[idx,'wind_speed']=4","e20040a7":"# \u628a\u8f6c\u6362\u597d\u7684wind_speed\u65b0\u503c\u52a0\u5165\u5230df\u4e2d\u53bb\ndf['wind_speed_1']=df_wind['wind_speed']","b8d94286":"df_wind=df_wind.groupby(['wind_speed']).sum()\n# \u964d\u5e8f\u6392\u5217cnt\u5b57\u6bb5\ndf_wind=df_wind.sort_values('cnt',ascending=False)\nindex_str={1:'0<=wind_speed<=8',2:'8<wind_speed<=24',3:'24<wind_speed<=32',4:'32<wind_speed'}\ndf_wind = df_wind.rename(index=index_str)\ndf_wind","10b0f314":"fig.set_size_inches(10,8)\nsns.barplot(data=df_wind,x=df_wind.index,y='cnt')\nplt.suptitle(\"\u53ef\u4ee5\u770b\u51fa\u98ce\u901f\u57288-24\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u5f88\u5927\uff0c\u5728\u5176\u4ed6\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u964d\u4f4e\",fontproperties=font_set)\nplt.show()","42f7f0fd":"df['hum'].describe()","8291c6a2":"df_hum=df.copy()\nfor idx in df_hum.index:\n  if(df_hum.loc[idx]['hum']>=20.0) & (df_hum.loc[idx]['hum']<=44.0):\n    df_hum.loc[idx,'hum']=1\n  elif(df_hum.loc[idx]['hum']>44.0) & (df_hum.loc[idx]['hum']<=58.0):\n    df_hum.loc[idx,'hum']=2\n  elif(df_hum.loc[idx]['hum']>58.0) & (df_hum.loc[idx]['hum']<=86.0):\n    df_hum.loc[idx,'hum']=3\n  elif(df_hum.loc[idx]['hum']>86.0):\n    df_hum.loc[idx,'hum']=4","80c790cd":"# \u628a\u8f6c\u6362\u597d\u7684hum\u65b0\u503c\u52a0\u5165\u5230df\u4e2d\u53bb\ndf['hum_1']=df_hum['hum']","d2af79ae":"df_hum=df_hum.groupby(['hum']).sum()\n# \u964d\u5e8f\u6392\u5217cnt\u5b57\u6bb5\ndf_hum=df_hum.sort_values('cnt',ascending=False)\nindex_str={1:'20<=hum<=44',2:'44<hum<=58',3:'58<hum<=86',4:'86<hum'}\ndf_hum = df_hum.rename(index=index_str)\ndf_hum","cd2960c4":"fig.set_size_inches(10,8)\nsns.barplot(data=df_hum,x=df_hum.index,y='cnt')\nplt.suptitle(\"\u53ef\u4ee5\u770b\u51fa\u6e7f\u5ea6\u572858-86\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u5f88\u5927\uff0c\u5728\u5176\u4ed6\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u964d\u4f4e(could be seen that share bicycle usage volume more in hum 58-86, usage volume decrease in other hum)\",fontproperties=font_set)\nplt.show()","2f650e32":"df=df.drop(['hum','wind_speed'],axis=1)\ndf=df.rename(columns={'wind_speed_1':'wind_speed','hum_1':'hum'})\ndf","cdc98cea":"train_size = int(len(df) * 0.9)\ntest_size = len(df) - train_size\ntrain, test = df.iloc[0:train_size], df.iloc[train_size:len(df)]\nprint(len(train), len(test))","9878fe80":"df.head()","8c8ea2e1":"plt.figure(figsize=(20,10))\nsns.heatmap(df.corr(),cmap=\"YlGnBu\",square=True,annot=True,linewidths=.5,center=0,linecolor=\"red\")\nplt.show()","d74c1318":"from sklearn.preprocessing import RobustScaler\n\n# f_columns = ['t1', 't2', 'hum', 'wind_speed']\nf_columns = ['t1', 't2']\n\nf_transformer = RobustScaler()\ncnt_transformer = RobustScaler()\n\nf_transformer = f_transformer.fit(train[f_columns].to_numpy())\ncnt_transformer = cnt_transformer.fit(train[['cnt']])\n\ntrain.loc[:, f_columns] = f_transformer.transform(train[f_columns].to_numpy())\ntrain['cnt'] = cnt_transformer.transform(train[['cnt']])\n\ntest.loc[:, f_columns] = f_transformer.transform(test[f_columns].to_numpy())\ntest['cnt'] = cnt_transformer.transform(test[['cnt']])","9a455805":"fig,(ax1,ax2,ax3)=plt.subplots(nrows=3)\nfig.set_size_inches(18, 14)\nsns.scatterplot(train['cnt'],train.index,ax=ax1)\nsns.scatterplot(train['t1'],train.index,ax=ax2)\nsns.scatterplot(train['t2'],train.index,ax=ax3)\nplt.suptitle(\"RobustScale\u8f6c\u6362\u540e\u7684\u6570\u636e\u5206\u5e03\u56fe\",fontproperties=font_set)\nplt.show()","76820a9b":"def create_dataset(X, y, time_steps=1):\n    Xs, ys = [], []\n    for i in range(len(X) - time_steps):\n        v = X.iloc[i:(i + time_steps)].values\n        Xs.append(v)        \n        ys.append(y.iloc[i + time_steps])\n    return np.array(Xs), np.array(ys)","054c4f57":"time_steps = 10\n\n# reshape to [samples, time_steps, n_features]\n\nX_train, y_train = create_dataset(train, train.cnt, time_steps)\nX_test, y_test = create_dataset(test, test.cnt, time_steps)\n\nprint(X_train.shape, y_train.shape)","efcf2af6":"train.shape,train.cnt.shape","a7ae7266":"model = keras.Sequential()\nmodel.add(\n  keras.layers.Bidirectional(\n    keras.layers.LSTM(\n      units=128, \n      input_shape=(X_train.shape[1], X_train.shape[2])\n    )\n  )\n)\nmodel.add(keras.layers.Dropout(rate=0.2))\nmodel.add(keras.layers.Dense(1))\nmodel.compile(loss='mean_squared_error', optimizer='adam')","1c16ae0d":"history = model.fit(\n    X_train, y_train, \n    epochs=100, \n    batch_size=32, \n    validation_split=0.1,\n    shuffle=False\n)","3be7d4ae":"plt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='test')\nplt.legend();","6af196ed":"y_pred = model.predict(X_test)","290aeaf4":"y_train_inv = cnt_transformer.inverse_transform(y_train.reshape(1, -1))\ny_test_inv = cnt_transformer.inverse_transform(y_test.reshape(1, -1))\ny_pred_inv = cnt_transformer.inverse_transform(y_pred)","bb206562":"actual = pd.DataFrame(data=y_test_inv.flatten(),columns=[\"actual\"])\npredicted = pd.DataFrame(data=y_pred_inv.flatten(),columns = [\"predicted\"])","4445142a":"final = pd.concat([actual,predicted],axis=1)\nfinal.head()","7d7155f6":"from sklearn.metrics import mean_squared_error, r2_score\nrmse = np.sqrt(mean_squared_error(final.actual,final.predicted)) \nr2 = r2_score(final.actual,final.predicted) \nprint(\"RMSE\u662f\u8d8a\u4f4e\u8d8a\u597d\uff0c\u8d8a\u63a5\u8fd1\u4e8e0\u8d8a\u597d\u3002R2\u662f\u8d8a\u63a5\u8fd1\u4e8e1\u8d8a\u597d\u3002\")\nprint(\"rmse is : {}\\nr2 is : {}\".format(rmse,r2))","caf3b750":"plt.plot(np.arange(0, len(y_train)), y_train_inv.flatten(), 'g', label=\"history\")\nplt.plot(np.arange(len(y_train), len(y_train) + len(y_test)), y_test_inv.flatten(), marker='.', label=\"true\")\nplt.plot(np.arange(len(y_train), len(y_train) + len(y_test)), y_pred_inv.flatten(), 'r', label=\"prediction\")\nplt.ylabel('Bike Count')\nplt.xlabel('Time Step')\nplt.legend()\nplt.show();","b6ef7026":"plt.plot(y_test_inv.flatten(), marker='.', label=\"true\")\nplt.plot(y_pred_inv.flatten(), 'r', label=\"prediction\")\nplt.ylabel('Bike Count')\nplt.xlabel('Time Step')\nplt.legend()\nplt.show();","92778302":"### EDA\uff08Exploratory Data Analysis\uff09","aadd5244":"### \u524d\u5904\u7406Preprocessing","86361d80":"### \u5bfc\u5165\u6570\u636e\n### import data","5eb9e4ae":"### \u901a\u8fc7\u4f7f\u7528RMSE\u548cR2\u6765\u8bc4\u6d4b\u7ed3\u679c\u503c\n### using RMSE and R2 to evaluation result value","5ae32109":"### \u7ed3\u8bba(conclusion)","b862bf7b":"```\nConclusion :\n\u53ef\u4ee5\u770b\u51faR2\u7684\u7ed3\u679c\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u63a5\u8fd1\u4e8e1\u3002RMSE\u4e5f\u662f\u4e0d\u9519\u7684\uff0c\u7ed3\u679c\u503c\u6bd4\u8f83\u5c0f\u3002\n\u53ef\u4ee5\u5c1d\u8bd5\u7ee7\u7eed\u589e\u52a0\u65b0\u7684\u7279\u5f81\u62bd\u51fa\uff0c\u6216\u8bb8\u4f1a\u7ee7\u7eed\u63d0\u9ad8\u7cbe\u786e\u5ea6\u3002\n\nIt can be seen that the result of R2 is still good, close to 1. RMSE is also\ngood, and the resulting value is relatively small. You can try to continue to\nadd new feature extractions, and perhaps continue to improve the accuracy.\n\n```","879e7720":"#### 2.\u5c06t1\u6240\u6709\u7684\u6e29\u5ea6\u5206\u7ec4\u7136\u540e\u663e\u793a\u5728\u8fd9\u4e2a\u6e29\u5ea6\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u6570\u91cf\u7684\u56fe\u8868\n#### 2.will temperature of all T1 to group and then show share bicycle usage volume chart when in the temperature","901b12f3":"### \u7ed3\u679c\u503c\u53ef\u89c6\u5316\uff0c\u53ef\u4ee5\u53d1\u73b0\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u5f88\u63a5\u8fd1\n### result value visualization,could be find predicted value and actual value are very close","4d957fb4":"### \u51c6\u5907\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\n### ready training dataset and testing dataset","5d5977dc":"#### 1.\u67e5\u770b\u4e00\u4e0b\u6e29\u5ea6\u57286.5\u5ea6\u7684\u65f6\u5019\u524d100\u4e2a\u6570\u636e\u7684t1\uff0ct2\u548c\u5355\u8f66\u4f7f\u7528\u6570\u91cf\u7684\u5173\u7cfb\u56fe\n#### 1.view Top 100 data's T1,T2 with share bicycle usage's relation in temperature 6.5","79b6567c":"### 5.\u67e5\u770b\u98ce\u901f\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\n### 5.view wind speed with share bicycle usage volume's relation","541ff9e4":"#### 3.\u5c06t2\u6240\u6709\u7684\u6e29\u5ea6\u5206\u7ec4\u7136\u540e\u663e\u793a\u5728\u8fd9\u4e2a\u6e29\u5ea6\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u6570\u91cf\u7684\u56fe\u8868\n#### 3.will T2 all temperature to group, and then show share bicycle usage volume chart when in the temperature","c39a4fb3":"### \u5bfc\u5165package\uff0c\u8bbe\u5b9a\u53c2\u6570\n### Import Package,Setting parameters","e898445f":"\u6e7f\u5ea6\u5206\u4e3a4\u7c7b   \nhum have four kind of category\n```\n1\u7c7b 20.0-44.0\n2\u7c7b 44.0-58.0\n3\u7c7b 58.0-86.0\n4\u7c7b 86.0-100.0\n```","0bd3f1f8":"### \u67e5\u770b\u4e00\u4e0b\u6e29\u5ea6\u548c\u5355\u8f66\u4f7f\u7528\u6570\u91cf\u7684\u5173\u7cfb\n### view temperature with share bicycle usage's relation","226abe7a":"### 4.weather code categorical \u67e5\u770b\u5929\u6c14\u56e0\u7d20\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\n### 4.weather code categorical view weather factor with share bicycle usage volume's relation\n1 = Clear ; mostly clear but have some values with haze\/fog\/patches of fog\/ fog in vicinity  \n2 = scattered clouds \/ few clouds   \n3 = Broken clouds   \n4 = Cloudy    \n7 = Rain\/ light Rain shower\/ Light rain    \n10 = rain with thunderstorm    \n26 = snowfall    \n94 = Freezing Fog","c6a97802":"### \u6a21\u578b\u9884\u6d4bPredicted","e734bcb4":"### \u6a21\u578b\u6784\u7b51Modeling","0c73bf8b":"### \u5404\u4e2a\u6570\u636e\u5b57\u6bb5\u7684\u89e3\u91ca Explanation of each data field\n```\nMetadata:\n\"timestamp\" - timestamp field for grouping the data\n\"cnt\" - the count of a new bike shares\n\"t1\" - real temperature in C\n\"t2\" - temperature in C \"feels like\"\n\"hum\" - humidity in percentage\n\"windspeed\" - wind speed in km\/h\n\"weathercode\" - category of the weather\n\"isholiday\" - boolean field - 1 holiday \/ 0 non holiday\n\"isweekend\" - boolean field - 1 if the day is weekend\n\"season\" - category field meteorological seasons: 0-spring ; 1-summer; 2-fall; 3-winter.\n\n\"weathe_code\" category description:\n1 = Clear ; mostly clear but have some values with haze\/fog\/patches of fog\/ fog in vicinity  \n2 = scattered clouds \/ few clouds   \n3 = Broken clouds   \n4 = Cloudy    \n7 = Rain\/ light Rain shower\/ Light rain    \n10 = rain with thunderstorm    \n26 = snowfall    \n94 = Freezing Fog\n```","b80ceb41":"### \u901a\u8fc7\u6570\u636e\u5206\u6790\u603b\u7ed3\u5185\u5bb9\n### summarized by data analysis\n```\n\u5355\u8f66\u4f7f\u7528\u91cf\u548c\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u6709\u5173\n\t\u65e9\u4e0a7\u70b98\u70b99\u70b9\u7684\u65f6\u5019\u548c\u665a\u4e0a16-19\u70b9\u7684\u65f6\u5019\u4f7f\u7528\u91cf\u9ad8\n\u5355\u8f66\u4f7f\u7528\u91cf\u5728\u5468\u672b\u548c\u5047\u65e5\u6ca1\u6709\u660e\u663e\u9ad8\u5cf0\u671f\u95f4\n\t10-14\u70b9\u9010\u6e10\u4e0a\u5347\uff0c14-18\u70b9\u9010\u6e10\u4e0b\u964d\n\u5355\u8f66\u4f7f\u7528\u91cf\u5728\u5b63\u8282\u548c\u65f6\u95f4\u533a\u95f4\u4e5f\u6709\u660e\u663e\u53d8\u5316\n\t\u65e9\u9ad8\u5cf07-9\u70b9\u548c16-19\u70b9\u4f7f\u7528\u91cf\u9ad8\uff0c\u6309\u7167\u5b63\u8282\u5212\u5206 \u590f\u5b63\uff0c\u79cb\u5b63\uff0c\u6625\u5b63\u4f7f\u7528\u91cf\u9ad8\uff0c\u51ac\u5b63\u4f7f\u7528\u91cf\u4f4e\n\u5355\u8f66\u4f7f\u7528\u91cf\u548c\u5b9e\u9645\u6e29\u5ea6\u6709\u5173\n\t\u57286\u523022\u5ea6\u5b9e\u9645\u6e29\u5ea6\u7684\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u5f88\u9ad8\n\u5355\u8f66\u4f7f\u7528\u91cf\u548c\u8eab\u4f53\u611f\u77e5\u6e29\u5ea6\u6709\u5173\n\t\u572811\u523021\u5ea6\u4e4b\u95f4\u7684\u4f53\u611f\u6e29\u5ea6\u65f6\u5019\u5355\u8f66\u4f7f\u7528\u91cf\u5f88\u9ad8\n\u5355\u8f66\u4f7f\u7528\u91cf\u548c\u4e00\u5468\u4e2d\u7684\u65e5\u671f\u6709\u5173\n\t\u4e00\u5468\u4e2d\u5468\u65e5\uff0c\u54681\uff0c\u54682\uff0c\u54683\uff0c\u54684\u5355\u8f66\u7684\u4f7f\u7528\u91cf\u90fd\u6bd4\u8f83\u591a\uff0c\u5468\u4e94\u548c\u5468\u516d\u660e\u663e\u4e0b\u964d\u3002\n\u5355\u8f66\u4f7f\u7528\u91cf\u548c\u5b63\u8282\u6709\u5173\t\n\t\u6309\u7167\u5b63\u8282\u5212\u5206\u590f\u5b63\uff0c\u79cb\u5b63\uff0c\u6625\u5b63\u4f7f\u7528\u7684\u91cf\u5f88\u5927\uff0c\u51ac\u5b63\u4f7f\u7528\u91cf\u964d\u4f4e\u3002\n\nBicycle usage is related to the time of day\n    High usage at 7: 8: 9 in the morning and 16-19: 00 in the evening\nThere is no obvious peak in bicycle usage during weekends and holidays\n    10-14 points gradually increased, 14-18 points gradually decreased\nThere are also significant changes in bicycle usage in seasons and time intervals\n    The morning peak usage is high at 7-9 o'clock and 16-19 o'clock, according to the season. High usage in summer, autumn and spring, low usage in winter\nBicycle usage is related to actual temperature\n    Bicycle usage is high when the actual temperature is 6 to 22 degrees\nBicycle usage is related to body temperature\n    Bicycle usage is high when the temperature is between 11 and 21 degrees\nBicycle usage is related to the day of the week\n    The usage of bicycles is relatively high on Sundays, Week 1, Week 2, Week 3, and Week 4, and significantly decreases on Friday and Saturday.\nBicycle usage depends on the season\n    According to the season, the amount used in summer, autumn and spring is very large, and the amount used in winter is lower.\n```","66cc64d2":"### If you like this notebook Please Do give an Upvote.  \n### Thank you very much!","04b58c66":"\u98ce\u901f\u5206\u4e3a4\u7c7b  \nwind speed have four kind of category\n```\n1\u7c7b 0-8.0\n2\u7c7b 8.0-24.0\n3\u7c7b 24.0-32.0\n4\u7c7b 32.0-Max\n```","7c0cc873":"### 6.\u67e5\u770b\u6e7f\u5ea6\u548c\u5355\u8f66\u4f7f\u7528\u91cf\u7684\u5173\u7cfb\n### 6.view hum with share bicycle usage volume's relation"}}