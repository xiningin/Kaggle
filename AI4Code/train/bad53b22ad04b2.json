{"cell_type":{"e2464ae4":"code","6c70b85c":"code","7779e570":"code","f636837b":"code","a0b0cbe4":"code","703a617f":"code","36cd0c20":"code","e6430bd4":"code","9c530cc7":"markdown","9e8b2ed6":"markdown","b29a30d2":"markdown","0ccb4187":"markdown","f5392458":"markdown","49aa233e":"markdown","7872dd17":"markdown"},"source":{"e2464ae4":"import pandas as pd \nimport matplotlib.pyplot as plt\nimport numpy as np\nimport sys","6c70b85c":"MaxIterations = 2000 #Number of the times thetas will change\nalpha = 0.01 \nCostArray = [] #This will store the cost of each set of thetas ","7779e570":"data = pd.read_csv('..\/input\/ex1data2.csv', sep=\",\", header=None)\nnumberOfColumns = data.shape[0]\nthetas = [0]*len(data.columns)","f636837b":"    \ndef hypothesis(theta, Xaxis):\n    thetaArray = np.matrix(np.array(theta)) \n    Xaxis = np.matrix(Xaxis)\n    xtrans = np.transpose(Xaxis) \n    mat =  np.matmul(thetaArray, xtrans)\n    return mat","a0b0cbe4":"def costFunction(thetas, Xaxis, Yaxis):\n    resultingMatrix = hypothesis(thetas, Xaxis) - np.matrix(Yaxis)\n    totalSum = np.sum(np.square(resultingMatrix))\n    totalCost = totalSum \/ (2*(numberOfColumns))\n    CostArray.append(totalCost)\n    return totalCost\n","703a617f":"def updateThetas(theta):\n    temp = np.matrix(np.array(theta))\n    resultingMatrix = hypothesis(theta, Xaxis) - np.matrix(Yaxis)\n    X2 = np.matrix(Xaxis)\n    multiplier = np.matmul(resultingMatrix, X2)\n    temp = np.matrix(np.array(theta)) - ((alpha\/(numberOfColumns))* multiplier)\n    global thetas\n    thetas = temp ","36cd0c20":"ones = pd.Series([1]*(data.shape[0]))\n\nXaxis = (data.iloc[:, :-1] - np.mean(data.iloc[:, :-1]))\nXaxis = Xaxis\/np.std(data.iloc[:, :-1])\nXaxis = pd.concat([ones, Xaxis], axis=1)\nYaxis = data[data.columns[-1]]\n\nfor j in range(MaxIterations):\n    updateThetas(thetas)\n    CostArray.append(costFunction(thetas, Xaxis, Yaxis))\nprint(CostArray[1999])\nprint(thetas)","e6430bd4":"plt.plot(CostArray)\nplt.show()","9c530cc7":"**Hypothesis : **\nHypothesis is the line or plane that is proposed using the thetas (for a single variable it will be y = mx + c line in cartesian plane). ","9e8b2ed6":"**Cost Function: **\n\nCost fuction can tell us how far our solution is from the data points that we have. Formula for finding cost function would be: \n\n![](http:\/\/s0.wp.com\/latex.php?zoom=1.5&latex=J%28%5Ctheta%29+%3D+%5Cfrac%7B1%7D%7B2m%7D%5Csum%7B%28h_%7B%5Ctheta%7D%28x%5E%7B%28i%29%7D%29+-+y%5E%7B%28i%29%7D%29%5E2%7D&bg=ffffff&fg=000&s=0)\n","b29a30d2":"**Gradient Descent : **\n\nGradient descent is a calculus based method to find the least-squared fit for a given set of data. Its starts with arbitrarily chosen importance of multiple variables (usually [0, 0] if there is only one feature) and then adjusts iteratively in an effort to reach the global minima. \n\n![](https:\/\/miro.medium.com\/max\/1593\/1*WGHn1L4NveQ85nn3o7Dd2g.png)","0ccb4187":"**Gradient Descent**\n\nTaking the derivative of the cost function we will have to loop through many time to get to the point where cost function is minimized. Ideally we will get the derivative of cost function to be 0, which means that we will have reached a minima. However, a potential problem that can occur in this way of solving the problem is that we could reach a local minima and not the global minima. \n\n![](https:\/\/miro.medium.com\/max\/765\/1*QKHtyn4Rr-0R-s0an1eSsA.png)","f5392458":"As noted from the results above the bias variable has the importance of 340412 which means that a house will atleast have that much minimum value without cosidering the other features. The second variable also has a strong positive impact (109447) whereas the last variable tends to depreciate the value of houses ","49aa233e":"Here we can observe that cost had been minimized after 500 repetitions. ","7872dd17":"**Data:** \n     \nThe data I will use to write the gradient descent algorithm comes from andrew ng's famous course on machine learning on coursera. it's a housing database with first column denoting the area of the house while the second column denotes the population of the area. Last column denotes the price of the house which we will consider to be the dependent variable. "}}