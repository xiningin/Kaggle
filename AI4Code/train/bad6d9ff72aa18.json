{"cell_type":{"5c1dbe33":"code","6f0b8793":"code","7d960896":"code","bbc2aabe":"code","026ec8b8":"code","ffdd4101":"code","914d0a7b":"code","3d14eeca":"code","541ec2df":"code","a2e8a638":"code","a2eaf14e":"code","233000e7":"code","e06d4e5f":"code","03ebc062":"code","5c3936f5":"code","7cf3c4a0":"code","d258061e":"code","ca4c749d":"code","3592380b":"code","94ba09c3":"code","453db5bc":"code","141590da":"code","5b58d3d6":"code","c0c025e2":"code","0411a59d":"code","96646718":"code","6d1dd3f6":"code","0e9b307b":"code","ba2ceb8d":"code","3eb3596e":"code","6f615b63":"code","3cc3da29":"code","1e97fc10":"code","33fe6d9f":"code","86e0002b":"code","c64b77fa":"code","eb560765":"code","01b7caaa":"code","b7f247a0":"code","da70475b":"code","a8172162":"code","51f4f069":"code","235ed9d6":"code","f4b1a977":"code","89a1b749":"code","5f214f69":"code","89b71a46":"code","7b08085a":"code","e650a026":"code","6325d242":"code","dbf46878":"code","53f70ae7":"code","8d269a2c":"code","9b89f96c":"code","c12cc298":"code","20b2ba90":"code","f28cbbc4":"code","50ebfabb":"code","ac2210d9":"code","4879e18d":"code","432e874c":"code","c6e4c87c":"markdown","4a73421c":"markdown","7e8e774e":"markdown","3e456bb1":"markdown","cd9b0cba":"markdown"},"source":{"5c1dbe33":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f0b8793":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style='darkgrid',color_codes=True)","7d960896":"file = \"\/kaggle\/input\/breast-cancer-prediction-dataset\/Breast_cancer_data.csv\"\ndf = pd.read_csv(file)","bbc2aabe":"df.head()","026ec8b8":"df.shape","ffdd4101":"df.isna().sum()","914d0a7b":"df['diagnosis'].value_counts()","3d14eeca":"df.describe()","541ec2df":"sns.boxplot(df['mean_area'])","a2e8a638":"from sklearn.covariance import EllipticEnvelope","a2eaf14e":"outlier_detector = EllipticEnvelope(contamination=0.05)","233000e7":"outlier_detector.fit(df)","e06d4e5f":"in_out = outlier_detector.predict(df)","03ebc062":"out = np.where(in_out == -1)","5c3936f5":"out","7cf3c4a0":"df.loc[out]","d258061e":"for feature in df.columns:\n    plt.figure(figsize=(15,5))\n    sns.distplot(df[feature])\n    plt.xlim(df[feature].min(),df[feature].max())\n    plt.title(f\"Distribution shape of {feature.capitalize()}\\n\",fontsize=15)\n    plt.show()","ca4c749d":"sns.countplot(df['diagnosis'])","3592380b":"sns.boxplot(df['diagnosis'],df['mean_radius'])","94ba09c3":"sns.boxplot(df['diagnosis'],df['mean_area'])","453db5bc":"sns.boxplot(df['diagnosis'],df['mean_perimeter'])","141590da":"sns.boxplot(df['diagnosis'],df['mean_smoothness'])","5b58d3d6":"sns.boxplot(df['diagnosis'],df['mean_texture'])","c0c025e2":"df.groupby(['diagnosis'])['mean_radius'].mean().plot(kind='bar')","0411a59d":"df.groupby(['diagnosis'])['mean_texture'].median().plot(kind='bar')","96646718":"X = df.drop(['diagnosis'],axis=1)\ny = df['diagnosis']","6d1dd3f6":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=1,stratify=y)","0e9b307b":"x_train.shape","ba2ceb8d":"y_test.value_counts()","3eb3596e":"y_train.value_counts()","6f615b63":"from sklearn.preprocessing import StandardScaler","3cc3da29":"scaler = StandardScaler()","1e97fc10":"xs_train = scaler.fit_transform(x_train)\nxs_test = scaler.fit_transform(x_test)","33fe6d9f":"from sklearn.linear_model import LogisticRegression","86e0002b":"lr = LogisticRegression(random_state=0,class_weight='balanced')","c64b77fa":"model1 = lr.fit(xs_train,y_train)","eb560765":"y_pred1 = model1.predict(xs_test)","01b7caaa":"from sklearn.metrics import accuracy_score,recall_score,f1_score,precision_score,roc_auc_score,roc_curve,confusion_matrix","b7f247a0":"accuracy_score(y_test,y_pred1)","da70475b":"precision_score(y_test,y_pred1)","a8172162":"recall_score(y_test,y_pred1)","51f4f069":"f1_score(y_test,y_pred1)","235ed9d6":"confusion_matrix(y_test,y_pred1)","f4b1a977":"from sklearn.neighbors import KNeighborsClassifier","89a1b749":"knn = KNeighborsClassifier(n_neighbors=5,weights = 'distance')","5f214f69":"model2 = knn.fit(xs_train,y_train)","89b71a46":"y_pred2 = model2.predict(xs_test)","7b08085a":"accuracy_score(y_test,y_pred2)","e650a026":"f1_score(y_test,y_pred2)","6325d242":"from sklearn.tree import DecisionTreeClassifier","dbf46878":"dtree = DecisionTreeClassifier(criterion='entropy',random_state=0)","53f70ae7":"model3 = dtree.fit(x_train,y_train)","8d269a2c":"y_pred3 = model3.predict(x_test)","9b89f96c":"accuracy_score(y_test,y_pred3)","c12cc298":"f1_score(y_test,y_pred3)","20b2ba90":"from sklearn.ensemble import AdaBoostClassifier,GradientBoostingClassifier,RandomForestClassifier","f28cbbc4":"rf = RandomForestClassifier(criterion='entropy',class_weight='balanced')","50ebfabb":"model4 = rf.fit(x_train,y_train)","ac2210d9":"y_pred4 = model4.predict(x_test)","4879e18d":"accuracy_score(y_test,y_pred4)","432e874c":"f1_score(y_test,y_pred4)","c6e4c87c":"#### We can see there is a slight imbalance in the target data.","4a73421c":"#### As all ouliers are from same category they won't affect our model. So we dont need to drop them.","7e8e774e":"#### There are no missing values in the datast.","3e456bb1":"#### Loading the dataset.","cd9b0cba":"### Import Necessary Libraries"}}