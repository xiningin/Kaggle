{"cell_type":{"9f41bc82":"code","b2fca53c":"code","67704427":"code","e943a1ac":"code","d01565a4":"code","c801a27c":"code","73843615":"code","8e685865":"code","766608a7":"code","fea7e96e":"code","4d28e1bb":"code","3453719b":"code","bee3a815":"code","2450ab6a":"code","b9c8eb90":"code","5263f4d4":"code","77f793a3":"code","8b6195d3":"code","93d8765e":"code","43e760e8":"code","fd4cf375":"code","fa4d7bc7":"code","9aecf69b":"code","12f8490a":"code","8eae3cf6":"code","6dfce16c":"markdown","033fc87a":"markdown","0bf9ab74":"markdown","452f6121":"markdown","5c49f162":"markdown","06fb7cbb":"markdown","5f220490":"markdown","63240d39":"markdown","634abf89":"markdown","96486676":"markdown","8abdd22f":"markdown","5c471a63":"markdown"},"source":{"9f41bc82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2fca53c":"# import the libraries\nimport numpy as np\nimport pandas as pd\nimport scipy.stats as st\nimport matplotlib as mlb\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.style.use('ggplot')","67704427":"heart_df = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\nheart_df.head()","e943a1ac":"heart_df.info()","d01565a4":"import pandas_profiling as pp\n\npp.ProfileReport(heart_df)","c801a27c":"heart_df.drop_duplicates()\nheart_df.shape","73843615":"heart_df.columns","8e685865":"heart_df.columns = ['age', 'sex', 'chest_pain_type', 'resting_blood_pressure', 'serum_cholesterol', \n                 'fasting_blood_sugar', 'rest_ecg', 'max_heart_rate', 'exercise_induced_angina',\n                 'st_depression', 'st_slope', 'major_vessel_num', 'thalassemia', 'condition']","766608a7":"heart_df.nunique()","fea7e96e":"heart_df['thalassemia'].value_counts()","4d28e1bb":"heart_df['sex'] = heart_df['sex'].map({0:'female', 1:'male'})\nheart_df['chest_pain_type'] = heart_df['chest_pain_type'].map({0:'typical_angina', 1:'non_anginal_pain', 2:'atypical_angina', 3:'asymptomatic'})\nheart_df['fasting_blood_sugar'] = heart_df['fasting_blood_sugar'].map({0:'less_than_120mg\/ml', 1:'greater_than_120mg\/ml'})\nheart_df['rest_ecg'] = heart_df['rest_ecg'].map({0:'normal', 1:'ST-T_wave_abnormality', 2:'left_ventricular_hypertrophy'})\nheart_df['exercise_induced_angina'] = heart_df['exercise_induced_angina'].map({0:'no', 1:'yes'})\nheart_df['st_slope'] = heart_df['st_slope'].map({0:'upsloping', 1:'flat', 2:'downsloping'})\nheart_df['thalassemia'] = heart_df['thalassemia'].map({0:'normal', 1:'fixed_defect', 2:'normal', 3:'reversal_defect'})\nheart_df['condition'] = heart_df['condition'].map({0:'no_diesease', 1:'has_diesease'})","3453719b":"heart_df.info()","bee3a815":"heart_df.head()","2450ab6a":"heart_df.describe()","b9c8eb90":"def cat_bar_plot(dataframe, rot = 0, alpha=0.70, color=['steelblue', 'crimson'],\n                 title='Distribution', xlabel='Column Name', ylabel='Count of People'):\n    dataframe.value_counts().plot(kind='bar', rot=rot, alpha=alpha, color=color)\n    plt.title(title)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)","5263f4d4":"plt.figure(figsize=(30, 35))\nplt.subplots_adjust(top=0.6, bottom=0.1, hspace=0.6, wspace=0.2)\nsns.set(font_scale=1)\n\nplt.subplot(331)\ncat_bar_plot(heart_df['sex'], color=['steelblue', 'crimson'], title='Gender Distribution', xlabel='Gender')\n\nplt.subplot(332)\ncat_bar_plot(heart_df['chest_pain_type'], rot=45, color=['lime', 'orange', 'cyan', 'red'],\n             title='Chest Pain Type Distribution', xlabel='Chest Pain Type')\n\nplt.subplot(333)\ncat_bar_plot(heart_df['fasting_blood_sugar'], color=['salmon', 'royalblue'],\n             title='Fasting Blood Sugar Distribution', xlabel='Fasting Blood Sugar')\n\nplt.subplot(334)\ncat_bar_plot(heart_df['rest_ecg'], color=['violet', 'tomato', 'steelblue'],\n             title='Rest ECG Distribution', xlabel='Rest ECG')\n\nplt.subplot(335)\ncat_bar_plot(heart_df['exercise_induced_angina'], color=['lime', 'cyan'],\n             title='Exercise Induced Angina Distribution', xlabel='Exercise Induced Angina')\n\nplt.subplot(336)\ncat_bar_plot(heart_df['st_slope'], color=['crimson', 'violet', 'orange'],\n             title='ST Slope Distribution', xlabel='ST Slope')\n\nplt.subplot(337)\ncat_bar_plot(heart_df['major_vessel_num'], color=['indianred', 'greenyellow', 'orange', 'violet', 'salmon'],\n             title='Major Vessel Number Distribution', xlabel='Major Vessel Number')\n\nplt.subplot(338)\ncat_bar_plot(heart_df['thalassemia'], color=['steelblue', 'violet', 'red'],\n             title='Thalassemia Distribution', xlabel='Thalassemia')\n\nplt.subplot(339)\ncat_bar_plot(heart_df['condition'], color=['cyan', 'lime'],\n             title='Condition Distribution', xlabel='Condition')\n\nplt.show()","77f793a3":"def numerical_data_plot(dataframe, bins=15, hist_alpha=0.6, kde_alpha=0.8, hist_title='Distribution of Patients',\n                        xlabel='Column Name', ylabel='Count of People', box_title='Column Name', \n                        kde_mul=1000, hist_color='crimson', kde_color='red', box_color='crimson'):\n    plt.figure(figsize=(20, 6))\n    sns.set(font_scale=1)\n    \n    plt.subplot(121)\n    count, bin_edges = np.histogram(dataframe)\n    dataframe.plot(kind='hist', bins=bins, alpha=hist_alpha, xticks=bin_edges, color=hist_color)\n    \n    # Let's add a KDE plot\n    mn, mx = plt.xlim()\n    plt.xlim(mn, mx)\n    kde_x = np.linspace(mn, mx, 300)\n    kde = st.gaussian_kde(dataframe)\n    plt.plot(kde_x, kde.pdf(kde_x) * kde_mul, 'k--', alpha=kde_alpha, color=kde_color)\n    \n    plt.title(hist_title)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    \n    plt.subplot(122)\n    red_circle = dict(markerfacecolor='r', marker='o')\n    dataframe.plot(kind='box', color=box_color, flierprops=red_circle)\n    plt.title(box_title)\n    ","8b6195d3":"# AGE\nnumerical_data_plot(heart_df['age'], hist_title='Age Distribution of Patients',\n                    xlabel='Age', box_title='Age of Patients')\n\nplt.show()","93d8765e":"# Resting Blood Pressure\nnumerical_data_plot(heart_df['resting_blood_pressure'], bins=25, hist_title='Resting Blood Pressure Distribution of Patients',\n                    xlabel='Resting Blood Pressure', box_title='Resting Blood Pressure of Patients', hist_color='violet',\n                    kde_color='fuchsia', box_color='violet')\n\nplt.show()","43e760e8":"# Serum Cholesterol\nnumerical_data_plot(heart_df['serum_cholesterol'], bins=70, hist_title='Serum Cholesterol Distribution',\n                    xlabel='Serum Cholesterol', box_title='Serum Cholesterol of Patients', hist_color='navy',\n                    kde_color='blue', box_color='navy')\n\nplt.show()","fd4cf375":"# Max Heart Rate\nnumerical_data_plot(heart_df['max_heart_rate'], bins=30, kde_alpha=0.9, hist_title='Max Heart Rate Distribution',\n                    xlabel='Max Heart Rate', box_title='Max Heart Rate of Patients',\n                    hist_color='limegreen', kde_color='green', box_color='limegreen')\n\nplt.show()","fa4d7bc7":"# ST Depression\nnumerical_data_plot(heart_df['st_depression'], bins=15, hist_title='St Depression Distribution', xlabel='St Depression',\n                    box_title='St Depression of Patients', kde_mul=100, hist_color='darksalmon',\n                    kde_color='sienna', box_color='darksalmon')\n\nplt.show()","9aecf69b":"def make_list(df):\n    data = df.value_counts()\n    dictionary = data.to_dict()\n    return list(dictionary.values())","12f8490a":"diesease_df = heart_df.loc[heart_df.condition == 'has_diesease']\nno_diesease_df = heart_df.loc[heart_df.condition == 'no_diesease']\n\n\nmale_list = make_list(diesease_df['sex'])\nfemale_list = make_list(no_diesease_df['sex'])\n\nlabels = ['Male',  'Female']\nwidth = 0.80\nx = [0.5, 2.5]\n\nsns.set(font_scale=1.3)\n\nfig, ax = plt.subplots()\nax.bar([0.1, 2.1], male_list, width, alpha=0.7, label='Has Diesease', color='midnightblue')\nax.bar([0.9, 2.9], female_list, width, alpha=0.7, label='No Diesease', color='crimson')\n\nax.set_ylabel('Count')\nax.set_xlabel('Gender')\nax.set_title('Gender vs Condition')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() + 0.3, p.get_height() + 0.7), fontsize = 12)\n\nplt.show()","8eae3cf6":"heart_df.head()","6dfce16c":"The analysis revealed the presence of one duplicate line. Let's remove it.","033fc87a":"Categorical vs Condition Plots","0bf9ab74":"Let's plot the categorical data first","452f6121":"## Visualize the Data","5c49f162":"This dataset gives a number of variables along with a target condition of having or not having heart disease. Below, the data is first used in a simple random forest model, and then the model is investigated using ML explainability tools and techniques.","06fb7cbb":"Here, category 0 and 2 should both be in the 'normal' class.","5f220490":"## Introduction","63240d39":"Renaming the categorical variables for easier interpretation","634abf89":"## Load Data","96486676":"# Diagnosing Heart Diesease","8abdd22f":"Changing the attributes name for easier interpretation","5c471a63":"Now let's visualize the numerical data"}}