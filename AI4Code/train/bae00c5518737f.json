{"cell_type":{"c920eb8d":"code","c7283257":"code","f8890788":"code","0fdee822":"code","28969bfa":"code","82670b51":"code","5472f8dd":"code","2a97a569":"code","d8d4093c":"code","2706ad0b":"code","8837e708":"code","e17f2e44":"code","7597a16a":"code","a114385a":"code","0f028c31":"code","d731abe8":"code","7791de3c":"code","b293efd0":"code","de887791":"code","70d7ca04":"code","3f61eb90":"code","35700d65":"code","37264d99":"code","b866605b":"code","0df0a39b":"markdown","cd5e4b86":"markdown","4e0b68ce":"markdown","94288bdc":"markdown","1547a3de":"markdown","d003ab45":"markdown","a72a5cb1":"markdown","0b6cce7d":"markdown","667d7b6c":"markdown","7d3d3121":"markdown","7fc52df0":"markdown","cd5a185f":"markdown","5242e904":"markdown","97b0be06":"markdown","ed281074":"markdown","dc8cae6e":"markdown","e1df7024":"markdown","363600a6":"markdown","d9a724c1":"markdown"},"source":{"c920eb8d":"\n%reset -f \nimport numpy as np\nimport pandas as pd\n# 1.2 For plotting\nimport matplotlib.pyplot as plt\n#import matplotlib\n#import matplotlib as mpl     # For creating colormaps\nimport seaborn as sns\nimport plotly.graph_objects as go \nimport plotly.express as px\n\n# 1.3 For data processing\nfrom sklearn.preprocessing import StandardScaler\n# 1.4 OS related\nimport os\n\n#Split dataset\nfrom sklearn.model_selection import train_test_split\n\n#Class to develop kmeans model\nfrom sklearn.cluster import KMeans\n\n#How good is clustering?\nfrom sklearn.metrics import silhouette_score\nfrom yellowbrick.cluster import SilhouetteVisualizer\n%matplotlib inline\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nplt.style.use('dark_background')\n#pd.options.display.float_format = '{:.2f}'.format","c7283257":"#pin to directory\nos.chdir(\"\/kaggle\/input\/nyse\")\nos.listdir()  ","f8890788":"df = pd.read_csv('fundamentals.csv', parse_dates=['Period Ending'])\ndf.drop('Unnamed: 0', axis=1, inplace=True)\n#drop NA Columns\ndf.dropna(inplace=True)\ndct = dict()\nfor col in df.columns.values:\n    ret = ''\n    t = '_'.join([word.capitalize() for word in col.split(' ')])\n    for c in t:\n        if (c >= '0' and c <= '9') or (c >= 'a' and c <= 'z') or (c >= 'A' and c <= 'Z') or c in ['_']:\n            ret += c\n    dct[col] = ret\ndf.rename(columns=dct, inplace=True)\ndf.columns\ndf.head()","0fdee822":"#drop rows where year 1215\ndf.For_Year = df.For_Year.astype('int64')\ndf.For_Year.unique()\ndf.drop(df[df.For_Year == 1215].index , inplace=True)\ndf.For_Year.unique()","28969bfa":"fig = px.density_contour(\n                         data_frame =df,\n                         x = 'Gross_Profit',\n                         y = 'Total_Assets',\n                        )\nfig.update_traces(\n                  contours_coloring=\"fill\",\n                  contours_showlabels = True\n                 )\n#Observation : Max count is where Gross profit about 2.5B and Total assets 10B","82670b51":"plt.figure(figsize=(15,5))\nsns.distplot(df.Total_Liabilities)\n#observation lies inbetween .0 to .5","5472f8dd":"px.histogram(data_frame =df,\n             x = 'Earnings_Per_Share',\n             facet_col = 'For_Year',\n             )\n#Observations : All Year's earning lies inbetween inbetween 1-1.99 & 2-2.99\n#Maximum Trcikers earned in 2013 Year","2a97a569":"dfYear = df.groupby(['For_Year']).agg('mean').reset_index()\ndfYear\n\npx.density_heatmap(\n                   data_frame =df,\n                   x = 'For_Year',\n                   y = 'Ticker_Symbol',\n                   z = 'Treasury_Stock',  # histfunc() of this is intensity of colour\n                   histfunc = 'sum' # Diverging color scale\n    \n                   )\n#Highest Treasury stock is of XEL for all years > 200B","d8d4093c":"\ndfTricker_Symbol = df.groupby(['Ticker_Symbol']).agg('mean').reset_index()\ndfTricker_Symbol","2706ad0b":"sns.jointplot(dfTricker_Symbol.Cash_Ratio, dfTricker_Symbol.Quick_Ratio, kind='scatter')","8837e708":"sns.jointplot(dfTricker_Symbol.Total_Assets, dfTricker_Symbol.Total_Liabilities, kind = 'reg') \ndfTricker_Symbol","e17f2e44":"\nfig = go.Figure()\nfig=px.histogram(data_frame=dfTricker_Symbol,x='Gross_Profit',title='Gross Profit Analysis ')\nfig.update_layout(\n    \n    \n    yaxis_title=\"Count\",\n    title = {\n             'y':0.9,\n             'x':0.5,\n            'xanchor': 'center'\n            ,'yanchor': 'top'\n        }\n)\n\n\n#Observation: Mostly Avg earning of Tricker lies inbetween 0-4.99B\n\n","7597a16a":"dfTricker_Symbol.loc[(dfTricker_Symbol.Gross_Profit\/1000000000 >= 2.5),'Good_gross_profit']=1\ndfTricker_Symbol.loc[(dfTricker_Symbol.Gross_Profit\/1000000000 < 2.5),'Good_gross_profit']=0\ndfTricker_Symbol.Good_gross_profit= dfTricker_Symbol.Good_gross_profit.astype('int64')\ndfTricker_Symbol.Good_gross_profit.value_counts()","a114385a":"# we will del  Gross_Profit because we are going to perdict clustering on this column\n#Earnings_Per_Share,'Operating_Margin','Cash_Ratio'\n#,'Quick_Ratio','Current_Ratio','Gross_Margin','Pretax_Margin','Pretax_Roe','Profit_Margin' because not able to find units,\n#very less as compared to other data\ndfTricker_Symbol.drop(\n        columns = ['Ticker_Symbol', 'For_Year','Earnings_Per_Share','Gross_Profit','Operating_Margin','Cash_Ratio'\n                   ,'Quick_Ratio','Current_Ratio','Gross_Margin','Pretax_Margin','Pretax_Roe','Profit_Margin'],    # List of columns to drop\n        inplace = True                                   # Modify dataset here only\n        )\n\n","0f028c31":"#relationship between Good_gross_profit and Assets\nsns.catplot('Good_gross_profit','Total_Assets', data = dfTricker_Symbol, kind = 'box')  \n#observation : Data is more distributed where gross profit is good","d731abe8":"sns.barplot('Good_gross_profit', 'Income_Tax',   estimator = np.mean, data = dfTricker_Symbol)\n#Observation:High profit high income tax\n","7791de3c":"pd.plotting.andrews_curves(dfTricker_Symbol,\n                           'Good_gross_profit',\n                           colormap = 'winter'       # Is there any pattern in the data?\n                           )","b293efd0":"\n#Copy 'Good_gross_profit' column to another variable and then drop it\n#     We will not use it in clustering\ny = dfTricker_Symbol['Good_gross_profit'].values\ndfTricker_Symbol.drop(columns = ['Good_gross_profit'], inplace = True)","de887791":"ss = StandardScaler()     # Create an instance of class\nss.fit(dfTricker_Symbol)                # Train object on the data\nX = ss.transform(dfTricker_Symbol)      # Transform data\n#Split dataset into train\/test\nX_train, X_test, _, y_test = train_test_split( X,               # np array without target\n                                               y,               # Target\n                                               test_size = 0.3 # test_size proportion\n                                               )\nX_train.shape              \nX_test.shape  \n\n\n\n","70d7ca04":"#set no of clusters\nclf = KMeans(n_clusters = 2,precompute_distances=True)\n#Train the object over data\nclf.fit(X_train)","3f61eb90":"clf.cluster_centers_\nprint(\"Shape of cluster is:\",clf.cluster_centers_.shape)\nprint(\"\\nLables of cluster are\",clf.labels_ )                       # Cluster labels for every observation\nprint(\"\\nLables size:\",clf.labels_.size)                \nclf.inertia_  \n\nprint(\"silhouette_score:\",silhouette_score(X_train, clf.labels_))","35700d65":"#Make prediction over our test data and check accuracy\ny_pred = clf.predict(X_test)\ny_pred\n#How good is prediction\nnp.sum(y_pred == y_test)\/y_test.size\ndx = pd.Series(X_test[:, 0])\ndy = pd.Series(X_test[:,1])\n\nfig, ax = plt.subplots(1, 1, figsize=(17,20))\nsns.scatterplot(dx,dy, hue = y_pred, ax=ax)","37264d99":"sse = []\nfor i in range(10):\n    #  How many clusters?\n    n_clusters = i+1\n    # Create an instance of class\n    clf1 = KMeans(n_clusters = n_clusters)\n    #  Train the kmeans object over data\n    clf1.fit(X_train)\n    # Store the value of inertia in sse\n    sse.append(clf1.inertia_ )\n\n#  Plot the line now\nsns.lineplot(range(1, 11), sse)\n\n#observations: Drastic change in curve for 1 and 2. After 2 it is normal so we will take no of clusters=2","b866605b":"\n\nvisualizer = SilhouetteVisualizer(clf, colors='yellowbrick')\nvisualizer.fit(X_train)        # Fit the data to the visualizer\nvisualizer.show()              # Finalize and render the figure\n\n# Intercluster distance:\nfrom yellowbrick.cluster import InterclusterDistance\nvisualizer = InterclusterDistance(clf)\nvisualizer.fit(X_train)        # Fit the data to the visualizer\nvisualizer.show()              # Finalize and render the figure\n","0df0a39b":"# strong corelation between Total_Assets and Total Liabilities","cd5e4b86":"# Clustering : Clustering is the task of dividing the population or data points into a number of groups such that data points in the same groups are more similar to other data points in the same group and dissimilar to the data points in other groups\n\n# As per above analysis we consider good gross profit if greater than 2.5B","4e0b68ce":"# Make prediction over our test data and check accuracy","94288bdc":"# Quick Ratio Vs Cash Ratio","1547a3de":"# Gross profit vs Income Tax","d003ab45":"# relation between gross profit and total assets","a72a5cb1":"# Read file and rename columns(Remove spaces)","0b6cce7d":"# Ticker symbol wise Treasury stock for every year","667d7b6c":"# check coefficient","7d3d3121":"# What is Tricker symbol \ud83e\udd14?: A ticker symbol is an arrangement of characters\u2014usually letters\u2014representing particular securities listed on an exchange or otherwise traded publicly. When a company issues securities to the public marketplace, it selects an available ticker symbol for its securities that investors and traders use to transact orders","7fc52df0":"# Year wise earning per share","cd5a185f":"# Drop Good_gross_profit column.","5242e904":"# Mean of Data: Tricker  Symbol wise\n","97b0be06":"# Check how many no of clusters should be there","ed281074":"# NYSE Data Analysis: Visual analysis of data and Clustering\n# Author : Rohini Garg","dc8cae6e":"# Scale data using StandardScaler","e1df7024":"# Gross Profit Analysis","363600a6":"# Drop categorial columns.clustering should be done on numerical columns only and other Columns where units are mismatch","d9a724c1":"Check if any pattern in data?"}}