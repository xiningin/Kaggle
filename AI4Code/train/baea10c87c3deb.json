{"cell_type":{"9da5a384":"code","32b7ccf0":"code","78dd9b5e":"code","47752298":"code","c2b9703b":"code","13e9a1dd":"code","88af3ce6":"code","c0127765":"code","ac4e4a38":"code","002a31f2":"code","36df2fe2":"code","8976b8e4":"markdown","48e83d35":"markdown","8eb1b0d8":"markdown","3736beac":"markdown"},"source":{"9da5a384":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt","32b7ccf0":"train_df =pd.read_csv('..\/input\/dry-beans-classification-iti-ai-pro-intake01\/train.csv')\nclasses=(train_df.groupby('y').count()).index.tolist()\nclasses","78dd9b5e":"SIRA = train_df[train_df.y == 'SIRA']\nDERMASON = train_df[train_df.y == 'DERMASON']\nBARBUNYA = train_df[train_df.y == 'BARBUNYA']\nBOMBAY = train_df[train_df.y == 'BOMBAY']\nCALI = train_df[train_df.y == 'CALI']\nHOROZ = train_df[train_df.y == 'HOROZ']\nSEKER = train_df[train_df.y == 'SEKER']","47752298":"COLUMNS = train_df.columns.tolist()\n\n\nfeature_cols = COLUMNS[1:-1]\nsns.set(style='darkgrid')\nfig, ax_list = plt.subplots(nrows=4, ncols=4, sharey=False, figsize=(36,24))\nax_list = ax_list.flatten()\nfor name, ax in zip(feature_cols, ax_list):\n         g = sns.histplot(SIRA, x=name, bins=10, ax=ax).set(title=name)\n         n = sns.histplot(DERMASON, x=name, bins=10, ax=ax).set(title=name)","c2b9703b":"# SIRA correlation\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(SIRA.drop(columns='ID').corr(), cmap=\"YlGnBu\", annot=True)\n","13e9a1dd":"#DERMASON correlation\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(DERMASON.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","88af3ce6":"#['BARBUNYA', 'BOMBAY', 'CALI', 'DERMASON', 'HOROZ', 'SEKER', 'SIRA']\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(BARBUNYA.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","c0127765":"#['BARBUNYA', 'BOMBAY', 'CALI', 'DERMASON', 'HOROZ', 'SEKER', 'SIRA']\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(BOMBAY.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","ac4e4a38":"#['BARBUNYA', 'BOMBAY', 'CALI', 'DERMASON', 'HOROZ', 'SEKER', 'SIRA']\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(CALI.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","002a31f2":"#['BARBUNYA', 'BOMBAY', 'CALI', 'DERMASON', 'HOROZ', 'SEKER', 'SIRA']\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(HOROZ.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","36df2fe2":"#['BARBUNYA', 'BOMBAY', 'CALI', 'DERMASON', 'HOROZ', 'SEKER', 'SIRA']\nplt.figure(figsize=(20,10))\ndataplot = sns.heatmap(SEKER.drop(columns=['ID','y']).corr(), cmap=\"YlGnBu\", annot=True)","8976b8e4":"From previous and simple prediction we discovered that almost all model is confused between SIRA and DERMA class. so this notebook is more focused on them.","48e83d35":"# Notebook For understanding correlation of every class with features","8eb1b0d8":"**Conclusions:**\n1. The algorithms are confused because of the overlapping between the two classes and also different correlation of features. the correlations in the two classes (SIRA-DERMASON) are similiar and slightly different from other classes. \n2. We can make PCA for ( Area, Perimeter, ConvexArea, ED ). Correlation = 1 in many of them.\n3. Also PCA for ( ShapeFactor3, Eccentricity, Compactness, AspectRation ). \n4. Also PCA for ( ShapeFactor1, MinorAxis ).","3736beac":"We see from visualiztion that the two overlapping in some sections."}}