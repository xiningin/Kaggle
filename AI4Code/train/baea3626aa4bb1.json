{"cell_type":{"33e38bf5":"code","e36d141e":"code","1db8c630":"code","5cbc5923":"code","f42bea56":"code","466218ba":"code","44e8f5ed":"code","1361b0f3":"code","23d797ac":"code","d352d4b7":"code","470bbd1e":"code","4c79ecb8":"code","211d42f6":"code","d3fb55d0":"markdown","54560057":"markdown","2929e896":"markdown","0a13cac4":"markdown","0d8a0118":"markdown","115680a8":"markdown","11f007a8":"markdown","d229bf0a":"markdown","641f82e1":"markdown"},"source":{"33e38bf5":"# Usual imports that are needed for most analysis\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom pandas.io import gbq\nimport seaborn as sns\nimport bq_helper\nlondon = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\", dataset_name=\"london_crime\")","e36d141e":"import bq_helper\nCrimes = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\", dataset_name=\"london_crime\")","1db8c630":"QUERY =\"\"\"\nSELECT year, month,  sum(value) as number \nFROM  `bigquery-public-data.london_crime.crime_by_lsoa`\ngroup by  month,year\norder by  number DESC; \n\"\"\"\ndf = Crimes.query_to_pandas_safe(QUERY)\ndf.head()","5cbc5923":"df=df.sort_values(['year','month'])\ndf['date'] = pd.to_datetime(df.year.map(str) + '-' + df.month.map(str), format = '%Y-%m');\ndf.set_index('date', inplace=True);","f42bea56":"df.number.plot(figsize=(15, 6))\nplt.title('Number of Crimes per Month ')\nplt.ylabel('Crimes per Month')\nplt.xlabel('... Time ...')\nplt.show()","466218ba":"# dictionary day for Month.\nmonth={1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}\n\ndf['CrimePerDay'] = df.apply(lambda x:(x.number\/month.get(x.month,0)), axis=1)","44e8f5ed":"df.CrimePerDay.plot(figsize=(15, 6))\nplt.title('Average Number of Crimes per day for Each Month ')\nplt.ylabel('Average Crimes per Day')\nplt.xlabel('... Time ...')\nplt.show()","1361b0f3":"# We have the data from January 2008 to December 2016\n# 9 full years. 9 years * 12 months (108 rows)\n\n# checking number of rows\n\ndf.shape[0]==108","23d797ac":"df=df.groupby([\"month\"]).sum()\n\ndf['month']=df.index\ndf=df[['month','number']]\ndf['CrimePerDay']=df.apply(lambda x:(x.number\/month.get(x.month,0)), axis=1)","d352d4b7":"sns.barplot(x=df.month, y=df['CrimePerDay']);\n\nplt.title('Average Number of Crimes per Day for Each Month ');\nplt.ylabel('Average Crimes per Day');\nplt.xlabel('Months of the Year');\n","470bbd1e":"baseline = df.CrimePerDay.mean()\ndf['diff_percentage'] = 100 * (df.CrimePerDay\/baseline - 1)","4c79ecb8":"upper=100 * ((df.CrimePerDay.mean() + df.CrimePerDay.std())\/baseline -1)\nlower=100 * ((df.CrimePerDay.mean() - df.CrimePerDay.std())\/baseline-1)","211d42f6":"sns.barplot(x=df['month'], y=df['diff_percentage'])\nplt.hlines(upper, 0, 12)\nplt.hlines(0,0,12)\nplt.hlines(lower, 0, 12);\nplt.title('Percentage of Variations for Each Month compared to the Mean');\nplt.ylabel('Difference Compared with the Mean');\nplt.xlabel('Months of the Year');\n","d3fb55d0":"### Let's check if the fluctuations have a monthly  pattern, or it is just a random walk.\n\nLet's aggregate the data for each month of the year.\n","54560057":"### OK let's focus on the visualization of variations ....\n\nLet's see the variation percentages.\n\nWe rescale using the average number of crimes per day as a baseline  ","2929e896":"### Uhm... there are some fluctuations... let's check for patterns\n As a first step, we normalize for the number of days on each month.\n So we can use the average number of events per day\n (otherwise months with 31 days would weight more than month with less day, ex. February)","0a13cac4":"This time series is similar to the previous one (has expected ), but if you look at it closely there are some differences between the two charts.","0d8a0118":"### First, let's have a look at the time series","115680a8":"Creating two markers around one standard deviation,  for visual reference... ","11f007a8":"From the chart above appears to be a reduction of the number of crimes in December and January...\n\nWe may call it Christmas effect :)\n\nWe have an increase in November as a sort of rush before holiday.\n\nA similar pattern appears in the Summer time, where there is a peak in June and July with a significative decrease\n\n\n\n\n\n\n\n\n\n\n\n\non the holiday season (August).","d229bf0a":"# Christmas Effect on London Crimes","641f82e1":"Tha aim of this notebook is to analyze the London Crimes events  and identify any seasonal patterns.\n"}}