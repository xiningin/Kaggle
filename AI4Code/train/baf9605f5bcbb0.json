{"cell_type":{"68798f7c":"code","4c238375":"code","c4706d50":"code","c7a7ed24":"code","7eedfab4":"code","2a878cea":"code","211b3ddc":"code","82f9fbd8":"code","63d41fa8":"markdown","501456cb":"markdown"},"source":{"68798f7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c238375":"df = pd.read_csv(\"\/kaggle\/input\/covid19-vaccinations-india\/Covid-19_Daily_Vaccinations_India.csv\", index_col=0)\ndf.head()","c4706d50":"df.date = pd.to_datetime(df.date)","c7a7ed24":"sns.set(style='whitegrid')\nplt.figure(figsize=(16,10))\nsns.lineplot(df.date.dt.strftime('%Y-%m-%d'), df.daily_vaccinations\/1000, palette='RdBu_r')\nlocs, labels = plt.xticks()\nx_labels = [x for x in range(len(labels)) if x%5==0] + [0]\nplt.xticks(x_labels, rotation='45')\nplt.ylabel('Daily Vaccinations (x1000)')\nplt.title(\"Vaccination in India\")\nplt.gca().spines[['top', 'right']].set_visible(False)","7eedfab4":"plt.figure(figsize=(16,10))\nsns.barplot(df.date.dt.strftime('%Y-%m-%d'), df.daily_vaccinations\/1000, palette='CMRmap_r')\nlocs, labels = plt.xticks()\nx_labels = [x for x in range(len(labels)) if x%5==0] + [0]\nplt.xticks(x_labels, rotation='45')\nplt.ylabel('Daily Vaccinations (x1000)')\nplt.title(\"Vaccination in India\")\nplt.gca().spines[['top', 'right']].set_visible(False)","2a878cea":"plt.figure(figsize=(8,5))\nsns.histplot(df.daily_vaccinations\/1000, kde=True, color='green')\nplt.xlabel('Daily Vaccinations(x1000)')\nplt.gca().spines[['top', 'right']].set_visible(False)","211b3ddc":"plt.figure(figsize=(16,10))\nsns.lineplot(df.date.dt.strftime('%Y-%m-%d'), df.daily_change_in_vaccinations)\nlocs, labels = plt.xticks()\nx_labels = [x for x in range(len(labels)) if x%5==0] + [0]\nplt.xticks(x_labels, rotation='45')\nplt.gca().spines[['top', 'right']].set_visible(False)","82f9fbd8":"plt.figure(figsize=(16,10))\nsns.barplot(df.date.dt.strftime('%Y-%m-%d'), df.people_fully_vaccinated\/1000, palette='CMRmap_r')\nlocs, labels = plt.xticks()\nx_labels = [x for x in range(len(labels)) if x%5==0] + [0]\nplt.xticks(x_labels, rotation='45')\nplt.ylabel('No. of fully vaccinated people (x1000)')\nplt.title(\"Vaccination in India\")\nplt.gca().spines[['top', 'right']].set_visible(False)","63d41fa8":"# Analysis of Data through various Plots","501456cb":"# Importing libraries and loading data"}}