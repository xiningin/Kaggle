{"cell_type":{"dc872611":"code","728ce21c":"code","34c095c2":"code","73d6fc75":"code","05a49a17":"code","8eda300e":"code","d58f44bb":"code","4cfdd9a1":"code","4d5c3290":"code","3fc4f3ae":"code","b13bc56a":"code","362e46ac":"code","56b78308":"code","362a3ae3":"code","a4e80ced":"code","4632bc36":"code","e4d37ef8":"code","974972ea":"code","1f71f905":"code","c2df4a4b":"code","bcb186ad":"code","e151bb31":"code","db0347b0":"code","aadaf99b":"code","d777e8a7":"code","1047c506":"code","350b118d":"code","52722b43":"code","fb9376c7":"code","d5745edd":"code","2c270728":"code","c12fbe2b":"code","b557558d":"code","aa9514a4":"code","48739726":"code","101f1735":"code","c7802f9e":"code","af5728ca":"markdown","af3a978b":"markdown","3f2b5ce9":"markdown","598ea22e":"markdown","8b1edbe6":"markdown"},"source":{"dc872611":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","728ce21c":"customer_fit_df = pd.read_csv('..\/input\/cardiogoodfitness\/CardioGoodFitness.csv')","34c095c2":"customer_fit_df.head()","73d6fc75":"customer_fit_df.info()","05a49a17":"## The info() method in pandas prints the summary of a dataframe and returns None\n## More Info https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.info.html","8eda300e":"p=msno.bar(customer_fit_df)","d58f44bb":"customer_fit_df.describe(include='all')\n","4cfdd9a1":"#By Default, the describe method omits the non numeric values when .describe() method is called. \n#include='all' here, also includes categorical value.\n\n#Following observations can be made :\n#    1. No value is null (Or values like Age, income,are all > 0 indicating that all are genuine values)\n#    2. TM195 is the highest purchased product (In the describe method, if multiple categories are highest, arbitrarily one of them is chosen)\n#    3. freq is the frequency of the 'top' value mentioned above\n#    4. More number of Males are present in the data than female\n#    5. Marital Status that is highest in the data is Parterned\n\n#    For more info on .descibe() method, refer : https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.describe.html","4d5c3290":"product_names=customer_fit_df['Product'].unique()\nproduct_count=customer_fit_df['Product'].value_counts()\nplt.bar(product_names,product_count)","3fc4f3ae":"gender_type = customer_fit_df['Gender'].unique()\ngender_distibution =customer_fit_df['Gender'].value_counts()\nplt.bar(gender_type, gender_distibution)","b13bc56a":"customer_fit_df['Education'].nunique()","362e46ac":"customer_fit_df['Education'].value_counts().plot(kind='bar')","56b78308":"marital_status = customer_fit_df['MaritalStatus'].unique()\nmarital_status_values = customer_fit_df['MaritalStatus'].value_counts()\nplt.bar(marital_status,marital_status_values)","362a3ae3":"plt.hist(customer_fit_df['Income'])","a4e80ced":"plt.boxplot(customer_fit_df['Income'])","4632bc36":"customer_fit_df_copy = customer_fit_df.copy(deep=True) \nlower_bound = customer_fit_df_copy.quantile(0.25)\nupper_bound = customer_fit_df_copy.quantile(0.75)\nIQR = upper_bound - lower_bound\ncustomer_fit_df = customer_fit_df_copy[~((customer_fit_df_copy < lower_bound- 1.5* IQR ) |  (customer_fit_df_copy > upper_bound+ 1.5* IQR )).any(axis=1)]","e4d37ef8":"usage_measures = customer_fit_df['Usage'].unique()\nusage_measures_values = customer_fit_df['Usage'].value_counts()\nplt.bar(usage_measures,usage_measures_values)","974972ea":"Fitness_measure = customer_fit_df['Fitness'].unique()\nFitness_measures_values = customer_fit_df['Fitness'].value_counts()\nplt.bar(Fitness_measure,Fitness_measures_values)","1f71f905":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nle.fit(customer_fit_df['MaritalStatus'])","c2df4a4b":"customer_fit_df['MaritalStatus'] = le.transform(customer_fit_df['MaritalStatus'])","bcb186ad":"le1 = LabelEncoder()\nle1.fit(customer_fit_df['Product'])\ncustomer_fit_df['Product'] = le1.transform(customer_fit_df['Product'])","e151bb31":"le1 = LabelEncoder()\ncustomer_fit_df['Gender'] = le1.fit_transform(customer_fit_df['Gender'])","db0347b0":"customer_fit_df['Gender']","aadaf99b":"customer_fit_df['Product']","d777e8a7":"customer_fit_df.head(50)","1047c506":"plt.figure(figsize=(12,10))\np = sns.heatmap(customer_fit_df.corr(), annot=True, vmin=-1, vmax=1)","350b118d":"X = customer_fit_df\nX.head()\nX = customer_fit_df.iloc[:,1:]\nY = customer_fit_df.iloc[:,0].to_frame()\nY.head()\n","52722b43":"customer_fit_df","fb9376c7":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, random_state=42, test_size=0.3)","d5745edd":"from sklearn.preprocessing import StandardScaler\nscalar = StandardScaler()\nscalar.fit(X_train)\n\nX_train = scalar.transform(X_train)\nX_test = scalar.transform(X_test)\n","2c270728":"X_train","c12fbe2b":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=4)\nclassifier.fit(X_train, Y_train)","b557558d":"y_pred = classifier.predict(X_test)","aa9514a4":"from sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(Y_test, y_pred))\nprint(classification_report(Y_test, y_pred))","48739726":"Expected = Y_test['Product'].values","101f1735":"X_test[6]","c7802f9e":"my_submission = pd.DataFrame({'Predicted': y_pred, 'Expected' :Expected})\nmy_submission.to_csv('.\/submission.csv', index=False)\n","af5728ca":"Let's check Data Distribution productwise (We have deduced from Above data that TM195 is max, let's check for other products)","af3a978b":"No 2 variables have high enough correalation > 0.95 that we remove them","3f2b5ce9":"Load the Data Set","598ea22e":"Normal Distributiun for Education","8b1edbe6":"There are 8 unique years of education, these can be plotted on a bar plot"}}