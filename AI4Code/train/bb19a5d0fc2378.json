{"cell_type":{"7915d919":"code","f83a0f24":"code","02e5f873":"code","b773db0f":"code","c351b799":"code","638ba72c":"code","2d900b3d":"code","bb16e8c2":"code","5f241e78":"code","1213bcf1":"code","89cc836e":"code","1ef15cca":"code","88213c7b":"code","b3d56dac":"code","3af22a45":"code","a7c25f81":"code","4cf64420":"code","68a0b740":"code","40be0088":"code","cd23ff79":"code","5ec6f10e":"markdown","ecd57cd8":"markdown","d7ca4a7d":"markdown","7334cea5":"markdown","57403103":"markdown","495b1b34":"markdown","384e119d":"markdown","462a25dc":"markdown","eddafa05":"markdown","803c2785":"markdown","61c8672f":"markdown","72c68888":"markdown","6fa1c342":"markdown","02904efb":"markdown"},"source":{"7915d919":"import pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pandasql as psql\nsql=psql.sqldf\nimport numpy as np\nsns.set_style(\"dark\")\nfrom wordcloud import WordCloud, STOPWORDS\n!pip install pywaffle\nfrom pywaffle import Waffle\nsns.set_palette(\"pastel\")\n","f83a0f24":"PATH = \"..\/input\/udemy-courses\/\"\n\ndf = pd.read_csv(PATH + 'udemy_courses.csv')\nhead=df.head(100)\nhead","02e5f873":"#Checking the columns that we have\ncolumn=df.columns\ncolumn","b773db0f":"#Let's drop the column that is not relevant for our EDA\ndf=df.drop(['course_id'],axis=1)\ndf.head(5)","c351b799":"#Checking Missing Data\ndef missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))\n\nmissing=missing_data(df)\nmissing","638ba72c":"#Removing the string \"hour\"\ndf['content_duration']=df['content_duration'].astype(str).str.replace('hours','')\ndf['content_duration']=df['content_duration'].astype(str).str.replace('hour','')\n#Transforming minutes in hours\ndf.loc[df['content_duration'].str.contains('mins')==True,'content_duration']=df.loc[df['content_duration'].str.contains('mins')==True,'content_duration'].str.replace('mins','').astype('float')\/60\n","2d900b3d":"#Excluding strange values such as \"question\" \"beginner level\" from the df.\ndf=sql('''select * from df where content_duration not like (\"%question%\") and content_duration not like (\"%Beginner Level%\")''')\n\ndf['content_duration']=df['content_duration'].astype('float').round(2)\n\ndf['content_duration'].unique()","bb16e8c2":"#Creating a date column using pd.datetime -  (it can be useful when we create our Tableau Dash.)\ndf['date']= pd.to_datetime(df['published_timestamp'], format = '%Y-%m-%d')\ndf['year']=df['date'].dt.year\ndf['month']=df['date'].dt.month","5f241e78":"#Transforming Price to Float and cleaning if necessary\ndf['price'].unique()\ndf['price']=df['price'].replace('Free','0').astype(float)","1213bcf1":"#Ok good enough - let's start plotting the number of costs paid\/free\nFree_or_not=sql('''select is_paid,count(is_paid) from df \n                                                group by is_paid''')\nprint(Free_or_not)\n#We can see that we need to adjust the False and True - we have different variations.\ndf['is_paid']=df['is_paid'].replace('False','FALSE')\ndf['is_paid']=df['is_paid'].replace('True','TRUE')\n\n#Checking..\nFree_or_not=sql('''select is_paid,count(is_paid) as \"Values\" from \n                                            df group by is_paid''')\nplt.figure(figsize=(12,6))\nsns.barplot(x='is_paid',y='Values',data=Free_or_not)\nplt.xticks(rotation=90)\nplt.title(\"There ain't no such thing as a free lunch\", fontsize = 22)\nplt.ylabel('Amount of courses', fontsize = 20)\nplt.xlabel('Paid', fontsize = 20)","89cc836e":"#Courses by Topic?\ncourses_by_topic=sql('''select subject, count(course_title) as courses, is_paid\n                     from df\n                     group by subject, is_paid''')\nsns.catplot(y='subject',x='courses',col='is_paid',kind='bar',data=courses_by_topic)\n\n","1ef15cca":"#Calculating the % by Subject using SQL and then a Waffle Chart\ncourses_per=sql('''select subject, 100.*count(course_title)\/sum(count(course_title)) over () as Share\n              from df\n              group by subject\n              order by Share desc''')\n                          \nwaffle=plt.figure(\n    FigureClass=Waffle,\n    rows=6,\n    columns=10,\n    values=courses_per.Share,\n    labels=list(courses_per.subject),\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    figsize=(16,5)\n)\nprint(courses_per)","88213c7b":"plt.figure(figsize=(25,10))\nsns.catplot(x='price',y='subject',data=df,kind='violin')\nplt.title('Price Distribution per Subject',fontsize = 22)","b3d56dac":"#What are the most popular courses? Let's Check the Top 20\npopular_courses=sql('''select course_title,subject, sum(num_subscribers) as Subs from df\n                                                                        group by course_title, subject \n                                                                        order by Subs Desc limit 20''')\nplt.figure(figsize=(12,6))\nsns.catplot(x='Subs',y='course_title',hue='subject',data=popular_courses)\nplt.xticks(rotation=90)\nplt.title(\"Top 20 Courses by #Subs\", fontsize = 22)\nplt.ylabel('Course Name', fontsize = 20)\nplt.xlabel('Number of Subs', fontsize = 20)","3af22a45":"#Let's see the number of subs by level?\npopular_course_level=sql('''select course_title,subject,level, sum(num_subscribers) as Subs from df \n                                                                where level not like ('%All%') \n                                                                group by course_title, subject,level \n                                                                order by Subs desc''')\nplt.figure(figsize=(12,6))\ng=sns.catplot(x='subject',y='Subs',col='level',data=popular_course_level)\ng.set_xticklabels(rotation=65, horizontalalignment='right')\n","a7c25f81":"#Beginner level courses are more popular. Are they cheaper as well?\n\nbeginner=sql('''select course_title, subject,level,price \n             from df\n         \n             group by course_title,subject,level \n             order by price desc''')\n             \nplt.figure(figsize=(12,6))\nsns.catplot(x='price',y='subject',col='level',kind='box',data=beginner)\nplt.xticks(rotation=90)","4cf64420":"#What are the courses with more content? Let's Check the Top 20\ncontenttop20=sql('''select course_title,subject, sum(content_duration) as content_duration from \n                    df group by course_title, \n                    subject \n                    order by content_duration desc limit 20''')\nplt.figure(figsize=(12,6))\nsns.scatterplot(x='content_duration',y='course_title',hue='subject',data=contenttop20)\nplt.title(\"Top 20 Content Duration Courses\", fontsize = 22)\nplt.ylabel('Course Name', fontsize = 20)\nplt.xlabel('Content Duration in Hours', fontsize = 20)","68a0b740":"#Correlation between the variables?\ncorr=df.iloc[:,:12].corr()\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nplt.figure(figsize=(15,10))\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.title('Correlation between the variables',fontsize=22)","40be0088":"#We have date information - let's try to extract something from there..\n\n#courses published?\n\nper_year=sql('''select year,subject, sum(count(course_title)) over (partition by year, subject) as NumberofCourses \n             from df \n             group by year,subject\n             order by year''')\n\nplt.figure(figsize=(15,6))\ng2=sns.barplot(x='year',y='NumberofCourses',data=per_year,hue='subject')\nplt.title('Courses per Year',fontsize=22)    \nplt.legend(loc='upper left')      \nplt.xticks(rotation=90)","cd23ff79":"#Code taken from https:\/\/www.kaggle.com\/sayar1106\/comprehensive-eda-on-udemy-data - Sayar\n\ncomment_words = ''\nstopwords = set(STOPWORDS)\n\nfor s in df.course_title:\n    s = str(s)\n    tokens = s.split()\n    for i in range(len(tokens)): \n        tokens[i] = tokens[i].lower() \n      \n    comment_words += \" \".join(tokens)+\" \"\nwordcloud = WordCloud(width = 800, height = 800, \n            background_color ='black', \n            stopwords = stopwords, \n            min_font_size = 10).generate(comment_words)\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \n  \nplt.show() ","5ec6f10e":"# Drawing must be really hard :)","ecd57cd8":"# Web Development = 33%\n# Business Finance 33%\n# Musical Instruments = 18%\n# Graphic Design = 16%","d7ca4a7d":"# Content duration values are now fine.","7334cea5":"Number of Subscribes have a moderate correlation with number of review.\nPrices also have a moderate correlation with Number of Lectures and Content Duration - which also makes sense. The author of the course has to charge more since he\/she spent more time creating the course.","57403103":"![about-default.png](attachment:about-default.png)\n\n# Udemy is an online learning and teaching marketplace with over 100000 courses and 24 million students. We are going to investigate the data using Pandas & SQL and show some insights about its courses! I'll also integrate a Tableau Dashboard (in development) in the end.\n\n# Hope you like it!\n\n\n","495b1b34":"# I used the window function from SQL which is very useful to do this kind of analysis - you can find more details here https:\/\/mode.com\/sql-tutorial\/sql-window-functions\/","384e119d":"# There is not such thing as free lunch...","462a25dc":"# Let's adjust the content duration column - there are some weird values there such as \"Question\", \"beginner level\" and hours\/min","eddafa05":"# Top 20 is dominated by the Web Dev topic - Learn HTML5 from Scratch has a immense amount of Subs.\n# There are only 2 topics outside of Web Dev in the top 20","803c2785":"# Beginner Levels have more subs - which makes sense.","61c8672f":"# These are the main words when we analyze the course_titles column. Beginners seems to appear a lot and this reflect what we have seen so far on our analysis!","72c68888":"Tableau Viz - https:\/\/public.tableau.com\/views\/Udemy_15900586631370\/Dashboard1?:retry=yes&:display_count=y&:origin=viz_share_link\n\n![Dashboard%201.png](attachment:Dashboard%201.png)\n\n","6fa1c342":"Web Development and Business Finance Courses are the most popular in Udemmy","02904efb":"# Data look clean! That's cool!"}}