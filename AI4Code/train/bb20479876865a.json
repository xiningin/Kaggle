{"cell_type":{"abd6b596":"code","1b9bd9ef":"code","79c6440d":"code","6d2ba57f":"code","210606dd":"code","cfab91f2":"code","231753c2":"code","fec885a4":"code","8e153aa6":"code","804d8200":"code","0d865a4f":"code","0e458277":"code","8b49ef0f":"code","fc49e999":"code","ebf0f40a":"code","23262bce":"code","60a11316":"code","3864c4f9":"code","c5eaa6dd":"code","116b18c0":"code","26a06659":"code","88971865":"code","4c02c3df":"code","74e314fc":"code","af037502":"code","9733ae6d":"code","22eb87bd":"code","5bac8a53":"code","af414c21":"code","586cd813":"code","0cfdc1a5":"code","07578709":"code","36441123":"code","bb285944":"code","06f4a6d0":"code","5c83553b":"code","bd65b6c7":"code","4f101e92":"code","e3ae5b52":"code","92aea7d7":"code","75f25807":"code","38357a4e":"code","8f22e8fa":"code","052e82fc":"code","d1e2dc73":"code","2f734977":"code","6aab5623":"code","0ccf1283":"code","fb0de196":"code","02f51c19":"code","382b27c0":"code","28886954":"code","ad743c39":"code","7ff09e8a":"code","245e986d":"code","b112ef5e":"code","6157fa79":"code","30606118":"code","b4c073fd":"code","0a1a9576":"code","386f94d9":"code","dba40814":"code","4a402bb9":"code","95c434a4":"code","04a1cb7a":"code","ad362647":"code","b8e5eb55":"code","99ccfadc":"code","7f9b1007":"code","7b281e12":"code","8ad7ade5":"code","22855c3d":"code","0045f6d0":"code","d01d59a9":"markdown","7156bc7a":"markdown","7b5dafd0":"markdown","b305b27a":"markdown"},"source":{"abd6b596":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n%matplotlib inline","1b9bd9ef":"df = pd.read_csv('..\/input\/tokyo-2021-medal-table\/tokyo_2021.csv')\ndf.drop(['Unnamed: 0'],inplace = True,axis = 1)\ndf","79c6440d":"df.head()","6d2ba57f":"df.tail()","210606dd":"df.shape","cfab91f2":"df.size","231753c2":"df.dtypes","fec885a4":"df.columns","8e153aa6":"df.info()","804d8200":"df.describe()","0d865a4f":"df.isnull().sum()","0e458277":"df.duplicated().sum()","8b49ef0f":"df.skew()","fc49e999":"df.corr()","ebf0f40a":"df['Country'].value_counts()# all are unique","23262bce":"plt.figure(figsize=(16,9))\nax = sns.heatmap(df.corr(),annot = True, cmap = 'viridis')\nplt.show()","60a11316":"sns.pairplot(df)\nplt.show()","3864c4f9":"fig = px.histogram(df, 'Gold',             \n                   color=\"Country\",\n                   title=\"<b>Average cases per state<\/b>\")\n\nfig.add_vline(x=df['Gold'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()","c5eaa6dd":"df[df['Gold'] > 5]['Country']\n# countries with morethan 5 medals","116b18c0":"df[df['Gold'] > 5]['Country'].count()\n# count of them","26a06659":"x = df[df['Gold'] > 5]['Country']\ny = df[df['Gold'] > 5]['Gold']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# Estado uniods has got many gold medals followed by china","88971865":"df[df['Gold'] < 5]['Country']\n# countries with lessthan 5 medals","4c02c3df":"df[df['Gold'] < 5]['Country'].count()\n# count of them","74e314fc":"y = df[df['Gold'] < 5]['Country']\nx = df[df['Gold'] < 5]['Gold']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","af037502":"df1 = df[['Country','Gold']].sort_values('Gold')\ndf1","9733ae6d":"y = df1['Country']\nx = df1['Gold']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.update_traces(marker_color='red')\nfig.show()","22eb87bd":"fig = px.histogram(df, 'Silver',             \n                   color=\"Country\",\n                   title=\"<b>Average cases per state<\/b>\")\n\nfig.add_vline(x=df['Silver'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()","5bac8a53":"df[df['Silver']>5]['Country']\n# Countries with silver medals greaher than 5","af414c21":"df[df['Silver']>5]['Country'].count()\n# count of them","586cd813":"x = df[df['Silver'] > 5]['Country']\ny = df[df['Silver'] > 5]['Silver']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# Estado uniods has got many silver medals followed by china","0cfdc1a5":"df[df['Silver']<5]['Country']\n# Countries with silver medals less than 5","07578709":"df[df['Silver']<5]['Country'].count()\n# count of them","36441123":"y = df[df['Silver'] < 5]['Country']\nx = df[df['Silver'] < 5]['Silver']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","bb285944":"df2 = df[['Country','Silver']].sort_values('Silver')\ndf2","06f4a6d0":"y = df2['Country']\nx = df2['Silver']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.update_traces(marker_color='magenta')\nfig.show()","5c83553b":"fig = px.histogram(df, 'Bronze',             \n                   color=\"Country\",\n                   title=\"<b>Average cases per state<\/b>\")\n\nfig.add_vline(x=df['Bronze'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()","bd65b6c7":"df[df['Bronze'] > 5]['Country']\n# countries with bronze medals greather than 5","4f101e92":"df[df['Bronze'] > 5]['Country'].count()\n# count of them","e3ae5b52":"x = df[df['Bronze'] > 5]['Country']\ny = df[df['Bronze'] > 5]['Bronze']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# Estado uniods has got many silver medals followed by china","92aea7d7":"df[df['Bronze'] < 5]['Country']\n# countries with bronze medals less than 5","75f25807":"df[df['Bronze'] < 5]['Country'].count()\n# count of them","38357a4e":"y = df[df['Bronze'] < 5]['Country']\nx = df[df['Bronze'] < 5]['Bronze']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","8f22e8fa":"df3 = df[['Country','Bronze']].sort_values('Bronze')\ndf3","052e82fc":"y = df3['Country']\nx = df3['Bronze']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.update_traces(marker_color='yellowgreen')\nfig.show()","d1e2dc73":"fig = px.histogram(df, 'Total',             \n                   color=\"Country\",\n                   title=\"<b>Average cases per state<\/b>\")\n\nfig.add_vline(x=df['Total'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()","2f734977":"df[df['Total']  > 10]['Country']\n# countries with total medals greather than 10","6aab5623":"df[df['Total']  > 10]['Country'].count()\n# count of them","0ccf1283":"x = df[df['Total'] > 10]['Country']\ny = df[df['Total'] > 10]['Total']\ndata = go.Bar(x= x,y= y)\nlayout = go.Layout(title = 'Simple Bar Chart')\nfig = go.Figure(data=data,layout=layout)\nfig.show()\n# Estado uniods has got many silver medals followed by china","fb0de196":"df[df['Total']  < 10]['Country']\n# countries with total medals less than 10","02f51c19":"df[df['Total']  < 10]['Country'].count()\n# count of them","382b27c0":"y = df[df['Total'] < 10]['Country']\nx = df[df['Total'] < 10]['Total']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.show()","28886954":"df4 = df[['Country','Total']].sort_values('Total')\ndf4","ad743c39":"y = df4['Country']\nx = df4['Total']\ndata = go.Bar(x= x,y= y,orientation = 'h',textposition='auto',opacity=0.8)\nlayout = go.Layout(title = 'Simple Bar Chart',width=1000,height=1500)\nfig = go.Figure(data=data,layout=layout)\nfig.update_traces(marker_color='orange')\nfig.show()","7ff09e8a":"a = []\nfor i in df1['Country'].tail(5):\n    a.append(i)\ndf1.tail()","245e986d":"for i in df2['Country'].tail(5):\n    a.append(i)\ndf2.tail()","b112ef5e":"for i in df3['Country'].tail(5):\n    a.append(i)\ndf3.tail()","6157fa79":"for i in df4['Country'].tail(5):\n    a.append(i)\ndf4.tail()","30606118":"len(a)","b4c073fd":"c = []\nfor i in a:\n    if i not in c:\n        c.append(i)\nc\n# removing repeated countries","0a1a9576":"v = df['Country'].index.values\nv","386f94d9":"m = []\nfor i in range(len(v)):\n    if df['Country'][i] in c:\n        m.append(v[i])\nm","dba40814":"df8 = df.loc[m]\ndf8\n\n# consists of states which are top 5 respective column","4a402bb9":"x = df8['Country']\ny1 = df8['Gold']\ny2 = df8['Silver']\ny3 = df8['Bronze']\ny4 = df8['Total']\ntrace1 = go.Bar(x= x,y= y1,marker={'color' : '#FFB300'},name = 'Gold')    \ntrace2 = go.Bar(x= x,y= y2,marker={'color' : '#F7DC6F'},name = 'Silver') \ntrace3 = go.Bar(x= x,y= y3,marker={'color' : '#FF9800'},name = 'Bronze')\ntrace4 = go.Bar(x= x,y= y4,marker={'color' : '#7CB342'},name = 'Total')\nlayout = go.Layout(title= 'Grouped Bar Chart' , width=980,height=800)\ndata = [trace1,trace2,trace3,trace4]\nfig = go.Figure(data=data, layout=layout)\nfig.show()\n\n# over all visualisation of countries\n# usa is most consistent team","95c434a4":"plt.figure(figsize=(6,8))\nx = df.drop(['Country'],axis = 1)\nfor i in x.columns:\n    sns.histplot(x[i],kde = True)\n    plt.show()","04a1cb7a":"plt.figure(figsize=(6,8))\nx = df.drop(['Country'],axis = 1)\nfor i in x.columns:\n    sns.scatterplot(x= 'Gold',y=x[i],data=df)\n    plt.show()","ad362647":"plt.figure(figsize=(6,8))\nx = df.drop(['Country'],axis = 1)\nfor i in x.columns:\n    sns.scatterplot(x= 'Silver',y=x[i],data=df)\n    plt.show()","b8e5eb55":"plt.figure(figsize=(6,8))\nx = df.drop(['Country'],axis = 1)\nfor i in x.columns:\n    sns.scatterplot(x= 'Bronze',y=x[i],data=df)\n    plt.show()","99ccfadc":"plt.figure(figsize=(6,8))\nx = df.drop(['Country'],axis = 1)\nfor i in x.columns:\n    sns.scatterplot(x= 'Total',y=x[i],data=df)\n    plt.show()","7f9b1007":"plt.figure(figsize=(16,9))\nax = sns.heatmap(df8.corr(),annot = True, cmap = 'viridis')\nplt.show()\n# data frame contains top countries","7b281e12":"sns.pairplot(df8)","8ad7ade5":"x = df.drop('Country',axis = 1)\nfor i in x.columns:\n    sns.boxplot(x = i, data = x,color = 'yellowgreen')   \n    plt.xlabel(i)\n    plt.show()","22855c3d":"x = df.drop('Country',axis = 1)\nfor i in x.columns:\n    sns.violinplot(x = i, data = x,color = 'yellowgreen')   \n    plt.xlabel(i)\n    plt.show()","0045f6d0":"# Displaying Label , Value & percent in Pie Chart using \"textinfo\" parameter\nfor i in range(len(df['Country'])):\n    tickets = df.iloc[i]\n    status = ['Gold' , 'Bronze' , 'Silver' , 'Total']\n    colors = ['#8BC34A','#D4E157','#FFB300','#FF7043']\n    data = go.Pie(\n                  values= tickets,\n                  labels= status,\n                  marker=dict(colors=colors),\n                  textinfo='label+value+percent'\n                  )\n\n\n    layout = go.Layout(\n                       title=dict(text = df['Country'][i],x=0.46,y=0.95,font_size=20),\n                       width=800,\n                       height=650\n                      )\n\n    fig = go.Figure(data=data,layout=layout)\n\n    fig.show()","d01d59a9":"# Importing Libraries","7156bc7a":"# Loading Dataset","7b5dafd0":"# Data Visualisation","b305b27a":"# Exploratory Data Analysis"}}