{"cell_type":{"44d06a1c":"code","361d7ef8":"code","d4f090f8":"code","e6366ff8":"code","a03859ab":"code","7ff44591":"code","d792c9dd":"code","d1e77902":"code","bb3a9b26":"code","8afb8fbd":"code","c58a80d5":"markdown","39c895a4":"markdown","9dd9d2ad":"markdown","664d1830":"markdown","76a9ffa6":"markdown","da741d76":"markdown"},"source":{"44d06a1c":"import numpy as np \nimport pandas as pd \nimport math\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as pltcolor\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport os\nfrom matplotlib.pyplot import figure\nfrom pandas.plotting import parallel_coordinates\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","361d7ef8":"df = pd.read_csv('\/kaggle\/input\/pokemon-gen1\/Pokemon.csv')\ndfColors = pd.read_csv('\/kaggle\/input\/pokemon-gen1\/PokemonTypesColor.csv')\ncolors = pd.Series(dfColors.Color.values,index=dfColors.Type).to_dict()\n\nfig = px.sunburst(df, path=['Type 1', 'Stage', 'Name'], values='Total', width=800, height=600)\n\nfig.show()\n","d4f090f8":"type1 = df['Type 1'].value_counts()\ndftype2 = df['Type 2']\ndftype2.dropna(inplace=True)\ntype2 = dftype2.value_counts()\ntypes = pd.concat([type1, type2])\ntypes.sort_values(inplace=True,ascending=False)\n\ncolorList = []\nfor typ in types.keys():\n    colorList.append(pltcolor.to_rgb(colors[typ]))\n\nfigure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\nplt.bar(types.keys(), types.to_list(), color=colorList)\nplt.title('Incid\u00eancia de Pokemons por Tipo')\nplt.show()","e6366ff8":"e = df['Stage'].value_counts()\n# create data\nniveis = '1\u00ba N\u00edvel','2\u00ba N\u00edvel','3\u00ba N\u00edvel'\nevolucoes=e\n \n# Create a pieplot\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nplt.pie(e, labels=niveis,autopct='%1.1f%%')\nplt.title('Percentual de Pokemons por N\u00edves de Evolu\u00e7\u00e3o')\nplt.show()","a03859ab":"# Boxplot comparando o 'Total' por est\u00e1gio de evolu\u00e7\u00e3o po pokemon\n# A ideia \u00e9 representar melhor o que o scatterplot na c\u00e9lula em cima t\u00e1 mostrando\ndims = (11.7, 8.27)\nfig, ax = plt.subplots(figsize=dims)\nb = sns.boxplot(ax=ax, x=df[\"Stage\"], y=df[\"Total\"], palette=\"Blues\")\nb.set_title('Compara\u00e7\u00f5es do Total de Poder Por n\u00edves de Evolu\u00e7\u00e3o')\nb.set(xlabel='Evolutive Stage',ylabel='Total Power')\n","7ff44591":"s = sns.pairplot(df,height=6, x_vars=['HP', 'Attack', 'Defense'], y_vars='Total',  hue=\"Type 1\")\ns.fig.suptitle('Correla\u00e7\u00e3o de Total de Poder e Atributos')\nsns.pairplot(df,height=6, x_vars=['Sp. Atk', 'Sp. Def', 'Speed'], y_vars='Total',  hue=\"Type 1\")","d792c9dd":"def make_radar(pokemons, titulo):\n    abilitys = ['HP', 'Ataque', 'Defesa', 'At. Especial', 'Def Especial', 'Velocidade']\n        \n    colns = 2\n    linhas = 1\n    if len(pokemons) < colns:\n        colns = len(pokemons)\n    else:\n        linhas = int(math.ceil(len(pokemons) \/ colns))\n    \n    \n    fig = make_subplots(rows=linhas, cols=colns, specs=[[{'type': 'polar'}]*colns]*linhas)\n\n    ic = 1\n    il = 1\n\n    for pokemon in pokemons:\n        attributos = df.loc[df['Name'] == pokemon, ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed']].iloc[0]\n        fig.add_trace(go.Scatterpolar(\n          name = pokemon,\n          r = attributos,\n          theta = abilitys,\n        ), il, ic)\n        \n        ic = ic + 1\n        if(ic > colns):\n            ic=1\n            il = il+1\n\n    fig.update_traces(fill='toself')\n    fig.update_layout(\n        title=dict(text=titulo,\n                   y=0.9,\n                   x=0.5,\n                   xanchor='center',\n                   yanchor='top'),\n        polar=dict(radialaxis=dict(visible=True,range=[25,150])),\n        showlegend=True\n    )\n    fig.show()\n    \nlendarios = df[df['Legendary'] == True]\nmake_radar(lendarios['Name'].to_list(),'Compara\u00e7\u00e3o de Atributos de Pokemons Lend\u00e1rios')\n","d1e77902":"typeToFind = 'Fire'\ndf_fire = df[(df['Type 1'] == typeToFind) | (df['Type 2'] == typeToFind)]\n\ndf_attributes = df_fire.drop(columns=['Name', 'Type 1', 'Type 2', 'Total', 'Legendary'])\nfigure(num=None, figsize=(15, 5), dpi=80, facecolor='w', edgecolor='k')\nparallel_coordinates(df_attributes, 'Stage', colormap=plt.get_cmap(\"Set1\"))\nplt.title('Proje\u00e7\u00e3o Geral dos Atributos dos Pokemons de Fogo de Kanto')\nplt.show()\n","bb3a9b26":"typeToFind = 'Fire'\ndf_fire = df[(df['Type 1'] == typeToFind) | (df['Type 2'] == typeToFind)]\ndf_fire = df_fire[df_fire['Legendary'] == False]\n\ndef print_comparacao(atributo, quantidade):\n    dfbest = df_fire[['Name',atributo]]\n    debest = dfbest.sort_values(by=atributo,inplace=True,ascending=False)\n    valor_minimo = dfbest.iloc[quantidade][atributo] \n    mask = dfbest[atributo] <= valor_minimo\n    colors = np.array(['r']*len(dfbest))\n    colors[mask.values] = 'c'\n    figure(num=None, figsize=(16, 5), dpi=80, facecolor='w', edgecolor='k')\n    plt.bar(list(dfbest['Name']), list(dfbest[atributo]), color = colors)\n    plt.title('Os Quatro Melhors Pokemons de Fogo de Kanto (por Total de Poder)')\n    plt.show()\n    return dfbest.iloc[:quantidade]['Name']\n\ndfbestnames = print_comparacao('Total',4)\n","8afb8fbd":"make_radar(dfbestnames,'Compara\u00e7\u00e3o de Atributos dos Mais Fortes Pokemons de Fogo (N\u00e3o Lend\u00e1rios)')\n","c58a80d5":"\n### Percentual de Lend\u00e1rios\n\n### N\u00edvel de poder\n\n* Total - Bloxplot\n* Distribui\u00e7\u00e3o e correla\u00e7\u00e3o entre o poder e os atributos\n* Sun burst  >> Total >> Tipo >> N\u00edvel\n\n","39c895a4":"# Professor Carvalho - Consultoria de Gin\u00e1sios\n\n\n\n![Insignea de Fogo - Lavaridge](http:\/\/img1.wikia.nocookie.net\/__cb20140715010704\/pokemon\/images\/b\/be\/Heat_badge.png)\n\n\nComo \u00e9 sabido uma das coisas fundamentais desse mundo do Pokemons \u00e9 a exist\u00eancia da Liga em que est\u00e3o inscritos os Gin\u00e1sios. Os Gin\u00e1sios Pok\u00e9mon em nossa liga normalmente s\u00e3o marcados pela separa\u00e7\u00e3o dos Pok\u00e9mon por seus diversos tipos.\n\n# Panorama Geral do Pokemons de Kanto\n\nNosso cliente um gin\u00e1sio de fogo precisa de informa\u00e7\u00f5es para o planejamento e manuten\u00e7\u00e3o do Gin\u00e1sio. Faremos aqui uma breve an\u00e1lise dos 151 Pokemons encontrados na regi\u00e3o de Kanto.\n\n* Sun burst  >> Total >> Tipo >> N\u00edvel","9dd9d2ad":"![image.png](attachment:image.png)\n\n\n### Visualiza\u00e7\u00e3o de Dados\n\n### Especializa\u00e7\u00e3o em Ci\u00eancia de Dados - FACENS - Turma 2019.2\n\n### Professor Matheus Mota\n\n**Alunos:**\n\nGustavo Sarti **RA** 191512\n\nEvandro Antunes Durda Capelari **RA** 191509","664d1830":"## Os Pokemons de fogo em Kanto\n\nOs mais fortes pokemons de fogo\n\n* Gr\u00e1fico de teia dos pokemons para compara\u00e7\u00e3o\n\n* Encontrando os 4 melhores\n\n* Comparando seus Atributos\n","76a9ffa6":"### Panorama dos est\u00e1gios evolutivos de Kanto\n\nPokemons podem ter de 1 a 3 est\u00e1gios evolutivos. Os de 3\u00ba nivel evolutivo tendem a ser mais fortes, mas entre os que n\u00e3o tem evolu\u00e7\u00f5es encontramos pokemons com alto n\u00edvel de poder.\n\n* Gr\u00e1fico de Setor - Percentual de Est\u00e1gios de Evolu\u00e7\u00e3o Presentes em Kanto\n* Boxplot - Rela\u00e7\u00e3o de Poder (Total) pra cada est\u00e1gio evolutivo.\n* Pair Plot - Verificando a rela\u00e7\u00e3o de todas as v\u00e1riaveis com o Poder total (Destacando por Tipo)","da741d76":"\n### Pokemons por tipo\n\nEm Kanto h\u00e1 predomin\u00e2ncia de pokemons de \u00e1gua, dada a geografia da regi\u00e3. Isso imp\u00f5e uma dificuldade para nosso cliente, j\u00e1 que fogo tem desvantagem contra \u00e1gua. Em compensa\u00e7\u00e3o ele est\u00e1 de igual para os pokemons do tipo Grass e Bug, sobre os quais tem vantagem.\n\n* Barras: Quantidade Por Tipo"}}