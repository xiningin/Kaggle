{"cell_type":{"3bae4e66":"code","628c0377":"code","16312654":"code","d299812f":"code","b52f5356":"code","66390e6c":"code","8c6daadd":"code","0b8a0820":"code","0ea6daae":"code","adf64ba6":"code","eaaf3143":"code","080e60db":"code","c62b7639":"code","456ade88":"code","6661e0ba":"code","2ca9c882":"code","9622167b":"code","594288e8":"code","e6f4a9f4":"code","70aeac34":"code","34caaca9":"code","48b14544":"code","1d4c4792":"code","45c364f9":"code","6f17b3a6":"code","e1dbba92":"code","9b1f419d":"code","bce0b2db":"code","52d44d1f":"code","018fa0bb":"code","f9e3ebb5":"code","25700eaf":"code","47107561":"code","5a0b7a08":"code","b714526f":"code","e213e6a0":"code","d1aae99a":"code","508b7bbe":"code","4e599bc6":"code","42b47455":"code","eaedfa87":"code","5fc1bc2b":"code","f31a7a9c":"code","a17588a2":"code","c0fff7d6":"code","1c941097":"code","9685039f":"markdown","6a837c80":"markdown","8de9049c":"markdown","d155b7ab":"markdown","13014b7e":"markdown","70504206":"markdown","c8f65b63":"markdown","6717b894":"markdown","d2640e1c":"markdown","53003d59":"markdown","8853ce39":"markdown","cbc67b24":"markdown"},"source":{"3bae4e66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","628c0377":"train = pd.read_csv('..\/input\/titanic\/train.csv')","16312654":"train.head()","d299812f":"train.isnull().sum()","b52f5356":"train.drop(['Name','PassengerId','Ticket'], axis =1, inplace = True)","66390e6c":"train.isnull().sum()","8c6daadd":"train.drop('Cabin', axis =1, inplace = True)","0b8a0820":"train.corr()","0ea6daae":"import seaborn as sns\nsns.heatmap(train.corr())","adf64ba6":"train['Age'] = train['Age'].fillna(np.mean(train['Age']))","eaaf3143":"train.isnull().sum()","080e60db":"train","c62b7639":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","456ade88":"plt.figure(figsize = (12,6))\nsns.countplot(train['Survived'])","6661e0ba":"plt.figure(figsize = (20,8))\nsns.heatmap(train.corr(), annot = True)","2ca9c882":"plt.figure(figsize = (15,8))\nsns.scatterplot(train['Survived'],train['Fare'])","9622167b":"print(train['Pclass'].unique())\nprint(train['Embarked'].unique())","594288e8":"sex = pd.get_dummies(train['Sex'], drop_first = True)\nembark = pd.get_dummies(train['Embarked'], drop_first = True)\np = pd.get_dummies(train['Pclass'], drop_first = True)","e6f4a9f4":"train = pd.concat([sex,train,embark,p], axis =1)","70aeac34":"train.drop(['Pclass','Sex','Embarked'], axis =1, inplace = True)","34caaca9":"from sklearn.linear_model import LogisticRegression","48b14544":"x = train.drop('Survived', axis =1)\ny = train['Survived']","1d4c4792":"model = LogisticRegression()","45c364f9":"model.fit(x,y)","6f17b3a6":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_x = pd.read_csv('..\/input\/titanic\/test.csv')","e1dbba92":"test['Age'] = test['Age'].fillna(np.mean(test['Age']))","9b1f419d":"test['Fare'] = test['Fare'].fillna(np.mean(test['Fare']))","bce0b2db":"test.isnull().sum()","52d44d1f":"sex_t = pd.get_dummies(test['Sex'], drop_first = True)\nembark_t = pd.get_dummies(test['Embarked'], drop_first = True)\np_t = pd.get_dummies(test['Pclass'], drop_first = True)","018fa0bb":"test = pd.concat([sex_t,test,embark_t,p_t], axis =1)","f9e3ebb5":"test.drop(['PassengerId','Name','Sex','Pclass','Ticket','Embarked','Cabin'], axis =1, inplace = True)","25700eaf":"test","47107561":"prediction = model.predict(test)","5a0b7a08":"output = pd.DataFrame({'PassengerId' : test_x.PassengerId, 'Survived':prediction})\noutput.to_csv('Submission.csv', index = False)\noutput.head()","b714526f":"from sklearn.ensemble import RandomForestClassifier","e213e6a0":"rf = RandomForestClassifier()","d1aae99a":"n_estimators = [int(x) for x in np.linspace(20,400,num = 20)]\nmax_depth = [int(x) for x in np.linspace(1,100,num = 10)]\nmin_samples_split = [2,3,5,7,8]\nmin_samples_leaf = [2,3,5,8]\nbootstrap = [True,False]","508b7bbe":"random_para = {'n_estimators' : n_estimators,\n               'max_depth' : max_depth,\n                'min_samples_split' : min_samples_split,\n                'min_samples_leaf' : min_samples_leaf,\n                'bootstrap' : bootstrap}","4e599bc6":"from sklearn.model_selection import RandomizedSearchCV","42b47455":"random = RandomizedSearchCV(estimator = rf, param_distributions = random_para, cv = 3, n_iter = 100, verbose = 5)","eaedfa87":"random.fit(x,y)","5fc1bc2b":"random.best_estimator_","f31a7a9c":"rf = RandomForestClassifier(max_depth=34, min_samples_leaf=3, min_samples_split=3,\n                       n_estimators=200)","a17588a2":"rf.fit(x,y)","c0fff7d6":"prediction1 = rf.predict(test)","1c941097":"output = pd.DataFrame({'PassengerId' : test_x.PassengerId, 'Survived':prediction1})\noutput.to_csv('Submission.csv', index = False)\noutput.head()","9685039f":"Now we all set for training our model","6a837c80":"**Time to visualize **","8de9049c":"train.dropna(inplace = True)","d155b7ab":"AS WE SEE THERE IS HIGH NUMBER OF NULL VALUES IN CABIN COLUMNS SO WE WILL DROP THIS COLUMN INSTEAD OF USING DROPNA BECUASE BY DROPNA WE LOOSE LOTS OF DATA","13014b7e":"I am using Logistic Regression","70504206":"for Logistic Regression i got 16k rank so used Random Forest Classifier","c8f65b63":"Lets go for categorical columns","6717b894":"AS WE HAVE SOME MISSING DATA IN AGE SO LETS FILL THESE WITH MEAN OF AGE COLUMNS","d2640e1c":"we have only 2 mising in Embarked so lets drop these rows","53003d59":"**From this count plot we see that the number to person died is more than survived**","8853ce39":"**Let's deal with these features and figure out which one is needed in prediction of survival\n  There is no relation of survival with Name, PassengerID and Ticket these are some sort of unique Entry for every passenger so first we drop     these columns**","cbc67b24":"**Correlation is not much high in between**"}}