{"cell_type":{"8b539482":"code","c9d75815":"code","9549c7c7":"code","4acb8e87":"code","4493c920":"code","bc00d695":"code","0a046e15":"code","8b0569ab":"code","ff9e6289":"code","3b1ffc0c":"code","c66ec0d2":"code","45f4c743":"code","b216e4e6":"code","1c6071f6":"code","a183e9a0":"code","0b0bc748":"code","482b1950":"code","e74d9a61":"code","52386efd":"code","2857cf07":"code","94ad1b5e":"code","9d6a8194":"code","cbd91c4e":"code","350b7818":"code","b63f741c":"code","0702d4df":"code","02d4a8c5":"code","036cf2b7":"code","813aadd5":"code","2eadeccb":"code","9615d734":"code","62ce8e88":"code","bc063c58":"code","10cb700f":"code","8115fa90":"markdown","ceac3fce":"markdown","93827753":"markdown","69869a00":"markdown","b2513c79":"markdown","61b65d27":"markdown","88606fd2":"markdown","9f1bab8a":"markdown","5cb40212":"markdown","8e77f8fa":"markdown"},"source":{"8b539482":"import gc\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\nimport seaborn as sns\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c9d75815":"data0=pd.read_csv('..\/input\/earthquake-in-japan\/japan-20190101_20211203_query.csv')\ndata0[0:5]","9549c7c7":"data0=data0.fillna('N')\ndata1=data0[['time','latitude','longitude','depth','mag',]]\ndata1[0:5]","4acb8e87":"data2=pd.DataFrame(columns=data1.columns.tolist())\nfor i,item in enumerate(data1['time']):\n    data2=pd.concat([data2,data1.loc[i:i]])\ndata2=data2.sort_values(['time']).reset_index(drop=True)    ","4493c920":"from datetime import datetime as dt\ndata2a=data2.copy()\ndate=[]\nfor item in data2['time']:\n    date+=[dt.strptime(item[0:-5],'%Y-%m-%dT%H:%M:%S')]\ndata2a['date']=date\ndata2a","bc00d695":"# 31-34,130-137\ndata4=data2a[data2a['longitude']>130][data2a['longitude']<137][data2a['latitude']>31][data2a['latitude']<34]\ndata4=data4.reset_index(drop=True)\ndata4","0a046e15":"import plotly.express as px\nfig=px.scatter(x=data4['date'],y=data4['mag'])\nfig=px.scatter(data4, x=\"date\", y=\"mag\")\nfig.update_layout(title='Magnituide of earthquake in Nankai Area in 2019-2021')\nfig.show()","8b0569ab":"data4['date2']=data4['date'].apply(lambda x: dt.strptime(str(x)[0:10],'%Y-%m-%d') )\ndata4","ff9e6289":"import seaborn as sns\n# Actual Location\nsns.jointplot(data=data4,x='longitude', y='latitude', kind=\"kde\")\nplt.show()","3b1ffc0c":"import itertools\nfrom itertools import product\n\nlat=list(range(31*10,35*10+1))   # 31-35\nlong=list(range(130*10,138*10+1))  # 130-138\n\nLL=list(itertools.product(lat,long))\nLLdf=pd.DataFrame(LL)\nLLdf=LLdf\/10                      #####\n\nfor i in range(len(LLdf)):\n    LLdf.loc[i,'LL']=str([LLdf.iloc[i,0],(LLdf.iloc[i,1])])\n    \nLLdf[3]=list(range(len(LLdf)))\nLLdf.columns=['longitude','latitude','LL','location']\nLLdf","c66ec0d2":"Name=LLdf['LL'].tolist()\nN=LLdf['location'].tolist()\nnormal_mapping=dict(zip(Name,N)) \nreverse_mapping=dict(zip(N,Name)) ","45f4c743":"data4['lat2']=data4['latitude'].round(1)\ndata4['lon2']=data4['longitude'].round(1)\nlocation=[]\nfor a,b in zip(data4['lat2'],data4['lon2']):\n    location+=[[a,b]]\ndata4['LL']=location\ndata4['LL']=data4['LL'].astype(str)\ndata4['location']=data4['LL'].map(normal_mapping)\ndata4","b216e4e6":"data4.info()","1c6071f6":"data5=data4[['date2','location']][data4['mag']>3.9].reset_index(drop=True)     #####\ndata5[0:10]","a183e9a0":"item1=data5[['date2','location']]\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20,5\nplt.plot(item1.ds, item1.y)","0b0bc748":"ph = Prophet()\nph.fit(item1)\nforecast1=ph.predict(item1)\nfigure = ph.plot(forecast1)\nfigure.show()","482b1950":"item1","e74d9a61":"result1=forecast1[['ds','yhat','yhat_lower','yhat_upper']]\nresult1.tail()","52386efd":"y=item1['y'] #actual value\noof=result1['yhat'] #predicted value\nfig,ax = plt.subplots(figsize=(6,6))\nax.set_title('Prophet Predicts Earthquake Location',fontsize=20)\nax.set_xlabel('Actual location',fontsize=12)\nax.set_ylabel('Predicted location',fontsize=12)\nax.scatter(y,oof)","2857cf07":"from datetime import timedelta\nstart0 = dt.strptime('2021-01-01', '%Y-%m-%d').date()\nend0   = dt.strptime('2023-12-31', '%Y-%m-%d').date()\nprint((end0-start0).days)","94ad1b5e":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","9d6a8194":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0[0:30])","cbd91c4e":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","350b7818":"ph = Prophet()\nph.fit(item1)\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","b63f741c":"result3=forecast3[['ds','yhat','yhat_lower','yhat_upper']]\nresult3[365:380]","0702d4df":"yhats=result3[365:365*2]['yhat'].apply(lambda x: round(x))\nlocs=[]\nfor item in yhats:\n    L0=reverse_mapping[item]\n    L1=L0[1:-1].split(', ')\n    L2=[float(L1[0]),float(L1[1])]\n    locs+=[L2]\nprint(locs[0:5])","02d4a8c5":"pred_loc=pd.DataFrame(locs)\npred_loc.columns=['latitude','longitude']\npred_loc","036cf2b7":"mag_pred=pd.read_csv('..\/input\/earthquake-prediction-in-nankai-area-by-prophet\/mag_forcast.csv')\nmag_pred","813aadd5":"mag_pred2=pd.concat([mag_pred,pred_loc],axis=1)\nmag_pred2['yhat2']=mag_pred2['yhat'].apply(lambda x: int(x))\nmag_pred2","2eadeccb":"# predicted location of the earthquakes in 2022\nsns.jointplot(data=mag_pred2,x='longitude', y='latitude',hue='yhat2', kind=\"kde\")\nplt.show()","9615d734":"mag_pred3=mag_pred2[['latitude','longitude']][mag_pred2['yhat2']==5]\nmag_pred3","62ce8e88":"import folium\nfrom folium import plugins\neq_map = folium.Map(location=[34,135],tiles='Stamen Terrain',zoom_start=7.0,min_zoom=2.0)\neq_map.add_child(plugins.HeatMap(mag_pred3))\neq_map","bc063c58":"yhat0=result3[result3['ds']=='2022-03-24']['yhat'].tolist()[0]\nprint(round(yhat0))\n\n#L0=reverse_mapping[round(yhat0)]\nL0=reverse_mapping.get(round(yhat0),'out of range')\nprint(L0)\nL1=L0[1:-1].split(', ')\nL2=[float(L1[0]),float(L1[1])]\nL2","10cb700f":"import folium\nfrom folium import plugins\neq_map = folium.Map(location=[34,137],tiles='Stamen Terrain',zoom_start=7.0,min_zoom=2.0)\neq_map.add_child(plugins.HeatMap([L2]))\neq_map","8115fa90":"# Predicted location of earthquakes in 2022","ceac3fce":"* https:\/\/www.kaggle.com\/stpeteishii\/earthquake-in-nankai-area","93827753":"## Merge magnitiude prediction result on location prediction","69869a00":"# fit past and predict past","b2513c79":"# The latest prediction(2021\/12\/03)\n## Predicted Location [34.1,137.7] of Earthquake (Predicted MAG 5.5) on 2022-03-24\n* https:\/\/www.kaggle.com\/stpeteishii\/earthquake-prediction-in-nankai-area-by-prophet","61b65d27":"The former prediction(2021\/10\/09)<br\/>\nPredicted Location [34.3,134.5] of Earthquake (Predicted MAG 5.6) on 2022-10-13 \n","88606fd2":"#### The future magnitude was predicted on the following notebook. Here the location of earthquake will be predicted. \n* https:\/\/www.kaggle.com\/stpeteishii\/earthquake-prediction-in-tokyo-by-prophet\n","9f1bab8a":"# Prediction of Location on Maximum Earthquake in 2022","5cb40212":"# fit past and predict past+future","8e77f8fa":"# Prediction of Location of huge earthquake(mag > 5.0) in 2022 "}}