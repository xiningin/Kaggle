{"cell_type":{"aa1f9b85":"code","ce3d757e":"code","d3d3d530":"code","224ad5b7":"code","b4eaaff1":"code","0f9f355c":"code","42423fb8":"code","7786ebef":"code","8c82b030":"code","1f057ae0":"code","c3222e6c":"code","4630991f":"code","0c380f5c":"code","3b17e388":"code","01159e59":"code","65eddea6":"code","cb137dd3":"code","fed0ada2":"code","0a3ec423":"code","d7cfac9b":"code","5cf9de67":"code","81510407":"code","95a974c2":"code","c334ca77":"code","39143717":"markdown"},"source":{"aa1f9b85":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce3d757e":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n","d3d3d530":"df_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf_test.head()","224ad5b7":"df_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_train.head()","b4eaaff1":"df_train.info()","0f9f355c":"df_test.info()","42423fb8":"df_train.isnull().sum().sort_values(ascending=False)","7786ebef":"sns.heatmap(df_train.isnull())","8c82b030":"df_test.isnull().sum().sort_values(ascending=False)","1f057ae0":"men = df_train.loc[df_train.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint(\"Percentage of men who Survived: \", rate_men)\n\nwomen = df_train.loc[df_train.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\nprint(\"\\nPercentage of women who survived:\", rate_women)\n\n","c3222e6c":"C=df_train.corr()\nk=11\ncols=C.nlargest(k,'Survived')['Survived'].index\nprint(cols)\ncm=np.corrcoef(df_train[cols].values.T)\nf , ax = plt.subplots(figsize=(14,8))\nsns.heatmap(cm,vmax=.8,linewidths=0.01,square=True,annot=True,cmap='viridis',linecolor='white',xticklabels=cols.values,annot_kws={'size':12},yticklabels=cols.values)","4630991f":"df_train.drop(['PassengerId','Name','Ticket','Cabin','Embarked'],axis=1,inplace=True)","0c380f5c":"df_train['Sex'] = df_train['Sex'].replace('male',1)\ndf_train['Sex'] = df_train['Sex'].replace('female',0)\n\ndf_test['Sex'] = df_test['Sex'].replace('male',1)\ndf_test['Sex'] = df_test['Sex'].replace('female',0)","3b17e388":"df_train.head(2)","01159e59":"y = df_train[\"Survived\"]\n\nX = df_train[[\"Pclass\",\"Fare\", \"Sex\", \"SibSp\",\"Parch\"]]","65eddea6":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, classification_report \n\n\nX_train, X_test,y_train,y_test = train_test_split(X,y, test_size=0.2, random_state=0)\n\nrf = RandomForestClassifier(n_estimators = 200, max_depth= 20, random_state= 1)\nrf.fit(X, y)\ny_pred = rf.predict(X_test)\n\n \nprint(\"Accuracy:\",metrics.accuracy_score(y_pred, y_test))\n","cb137dd3":"print(classification_report(y_test, y_pred))","fed0ada2":"print(confusion_matrix(y_test, y_pred))","0a3ec423":"df_test.head(2)","d7cfac9b":"df_test.dtypes","5cf9de67":"final = df_test[[\"Pclass\",\"Fare\", \"Sex\", \"SibSp\",\"Parch\"]]\nfinal.isnull().sum().sort_values(ascending=False)","81510407":"final= final.fillna(final.median())","95a974c2":"y_final = rf.predict(final)","c334ca77":"submission= pd.DataFrame({'PassengerId': df_test.PassengerId, 'Survived': y_final})\nsubmission.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","39143717":"From the mutual information above, which checks the correlation between our featured variables and 'Survived', I decide to feed the model with  Sex, Pclass, Fare, and Sibsp (and leave the others), so next step is to remove them before we proceed with the model"}}