{"cell_type":{"3b197a27":"code","7b1e24b2":"code","3565b551":"code","3a5776c1":"code","31313454":"code","842f9135":"code","396afb65":"code","b09eecd6":"code","db711071":"code","c5590b5d":"code","7a719d37":"code","2f5422d7":"code","17a732d4":"code","0aff2471":"code","27b47c12":"code","ae7d8a1e":"code","141fe504":"code","8a344852":"code","6cd216e0":"code","d228f0d0":"code","b5c47985":"code","c1e92458":"code","5cca39c3":"code","01d25561":"code","899d36b9":"code","6eb5d6f2":"code","9cf6dfc2":"code","baad1baa":"code","aebd882c":"code","5f1cab61":"code","5feab37a":"code","7ed5a7e4":"code","112a9dde":"code","e0a1d2d7":"code","c4553f97":"code","d95018bc":"code","73c29abb":"code","d598f8c5":"code","8745b18d":"code","d22ff127":"code","6d8e6aa8":"code","1601455d":"code","131004a7":"code","b94caf16":"code","b3f4683f":"code","c31637b7":"code","fcc3028f":"code","44b84347":"code","c8ebe1e0":"code","7591ac47":"code","465a3e4a":"code","2cbfe96a":"code","026e4130":"code","9632d46c":"code","bff35fe4":"code","b4449acb":"code","f34f0245":"code","d521dc38":"markdown","75968952":"markdown","83466247":"markdown","61605948":"markdown"},"source":{"3b197a27":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b1e24b2":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import accuracy_score, classification_report,f1_score,roc_auc_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import KFold, cross_val_score,StratifiedKFold\nfrom sklearn.model_selection import train_test_split, GridSearchCV,RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier","3565b551":"df = pd.read_csv(\"..\/input\/airline-passenger-satisfaction\/train.csv\",index_col=0)","3a5776c1":"df.head()","31313454":"df.info()","842f9135":"df.isna().sum()","396afb65":"df = df.dropna()","b09eecd6":"df.isna().sum()","db711071":"df.select_dtypes(include=\"object\").columns","c5590b5d":"cat = ['Gender', 'Customer Type', 'Type of Travel', 'Class', 'satisfaction']","7a719d37":"df.describe()","2f5422d7":"df.columns","17a732d4":"convert_list = ['Inflight wifi service',\n       'Departure\/Arrival time convenient', 'Ease of Online booking',\n       'Gate location', 'Food and drink', 'Online boarding', 'Seat comfort',\n       'Inflight entertainment', 'On-board service', 'Leg room service',\n       'Baggage handling', 'Checkin service', 'Inflight service',\n       'Cleanliness']","0aff2471":"data = df.copy()","27b47c12":"for i in convert_list:\n  data[i] = data[i].astype(\"category\") \n    ","ae7d8a1e":"data.info()","141fe504":"data.nunique()","8a344852":"data.drop(\"id\", inplace=True, axis = 1)","6cd216e0":"data1 = data.groupby(\"satisfaction\").mean()","d228f0d0":"plt.figure(dpi=85)\nplt.bar(data1.index,data1[\"Arrival Delay in Minutes\"])\nplt.xlabel(\"Satisfaction\")\nplt.ylabel(\"Avarage Minutes\")\nplt.title(\"Arrival Delay in Minutes\")","b5c47985":"plt.figure(dpi=80)\nplt.bar(data1.index,data1[\"Departure Delay in Minutes\"],color = \"green\")\nplt.xlabel(\"Satisfaction\")\nplt.ylabel(\"Avarage Minutes\")\nplt.title(\"Departure Delay in Minutes\")","c1e92458":"plt.figure(dpi=85)\nplt.bar(data1.index,data1[\"Age\"],color = \"r\")\nplt.xlabel(\"Satisfaction\")\nplt.ylabel(\"Age\")\nplt.title(\"Age vs Satisfaction\")","5cca39c3":"plt.figure(dpi=85)\nplt.bar(data1.index,data1[\"Flight Distance\"],color = \"green\")\nplt.xlabel(\"Satisfaction\")\nplt.ylabel(\"Distance\")\nplt.title(\"Flight Distance\")","01d25561":"data.head()","899d36b9":"data1 = data.groupby(\"Class\").mean()\n","6eb5d6f2":"plt.bar(data1.index, data1.Age)\nplt.ylabel(\"age\")","9cf6dfc2":"data.head()","baad1baa":"data.satisfaction.replace({\"satisfied\": 1, \"neutral or dissatisfied\" : 0},inplace = True)","aebd882c":"data.satisfaction","5f1cab61":"sns.barplot(x=\"Class\",y = \"satisfaction\",data = data)\nplt.show()","5feab37a":"sns.barplot(x=\"Gender\",y = \"satisfaction\",data = data)\n","7ed5a7e4":"sns.barplot(x=\"Type of Travel\",y = \"satisfaction\",data = data)","112a9dde":"data  = pd.get_dummies(data, columns = cat, drop_first = True)","e0a1d2d7":"df.value_counts().sum()","c4553f97":"data.info()","d95018bc":"data[\"Satisfaction\"] = data.satisfaction_1\ndata= data.drop(\"satisfaction_1\", axis = 1)","73c29abb":"y = data[\"Satisfaction\"]","d598f8c5":"data = data.drop(\"Satisfaction\",axis = 1)","8745b18d":"cols = data.columns","d22ff127":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\n# scaler'\u0131 train data \u00fczerinde e\u011fitelim ve \n# train datay\u0131 scale edelim\ndata = scaler.fit_transform(data)","6d8e6aa8":"data = pd.DataFrame(data = data, columns=cols)","1601455d":"data","131004a7":"from sklearn.model_selection import train_test_split","b94caf16":"X_train, X_test, y_train, y_test = train_test_split(data, y, test_size=0.2, random_state=2)","b3f4683f":"y_train","c31637b7":"from xgboost import XGBClassifier\n","fcc3028f":"estimator = XGBClassifier()","44b84347":"parameters = {\n    'max_depth': range (6,36 , 6),\n    'n_estimators': range(10, 50, 10),\n    'learning_rate': [0.3,0.5,0.8,1,2],\n     'penalty':['l2', 'l1']\n    \n}","c8ebe1e0":"rsc = RandomizedSearchCV(estimator=estimator,param_distributions= parameters ,cv=4, n_iter = 6, verbose=1, scoring='roc_auc') ","7591ac47":"rsc.fit(X_train,y_train)","465a3e4a":"rsc.best_params_","2cbfe96a":"rsc.best_score_","026e4130":"xgb = XGBClassifier(\n   max_depth= 24,\n    n_estimators= 40,\n    learning_rate= 0.3,\n    penalty = \"l2\",\n    random_state = 42\n)","9632d46c":"xgb.fit(X_train,y_train)","bff35fe4":"feature_important = xgb.get_booster().get_score(importance_type='weight')\nkeys = list(feature_important.keys())\nvalues = list(feature_important.values())\n\ndata = pd.DataFrame(data=values, index=keys, columns=[\"score\"]).sort_values(by = \"score\", ascending=False)\ndata.nlargest(50, columns=\"score\").plot(kind='barh', figsize = (20,10)) ## plot top 40 features","b4449acb":"y_pred = xgb.predict(X_test)","f34f0245":"roc_auc_score(y_pred,y_test)","d521dc38":"# ****Feature Scaling****","75968952":"# **Modeling**","83466247":"data1","61605948":"# **Train-Test Split**"}}