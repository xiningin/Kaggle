{"cell_type":{"cfb7c5bf":"code","ffeadbc2":"code","3646dab7":"code","7225bda2":"code","a005e705":"code","52fae028":"code","181c8ec7":"code","30de056c":"code","1bb0b4ad":"code","94199ca7":"code","e6c0a588":"code","b154372f":"code","371e7e6e":"markdown","36c91058":"markdown","966d2fb3":"markdown","46612891":"markdown","95c803a9":"markdown","75002f47":"markdown"},"source":{"cfb7c5bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","ffeadbc2":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()\n","3646dab7":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","7225bda2":"men = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","a005e705":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","52fae028":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","181c8ec7":"plt.hist(train_data[\"Age\"])\nplt.title(\"Age\")\nplt.show()\nprint(\"Mean of training data age is \" ,train_data.Age.mean())\n\n\nsns.displot(data=train_data, x=\"Age\", hue=\"Survived\", multiple=\"stack\")\n","30de056c":"\n\nsur= train_data.loc[(train_data.Age <10)][\"Survived\"]\nprint(sum(sur)\/len(sur))\nsur= train_data.loc[(train_data.Age >= 18) & (train_data.Age <= 35)][\"Survived\"]\nprint(sum(sur)\/len(sur))\nsur= train_data.loc[(train_data.Age > 35) & (train_data.Age <= 50)][\"Survived\"]\nprint(sum(sur)\/len(sur))\nsur= train_data.loc[(train_data.Age > 50) & (train_data.Age <= 60)][\"Survived\"]\nprint(sum(sur)\/len(sur))\nsur= train_data.loc[(train_data.Age > 60) & (train_data.Age <= 70)][\"Survived\"]\nprint(sum(sur)\/len(sur))\nsur= train_data.loc[(train_data.Age > 70) & (train_data.Age <= 80)][\"Survived\"]\nprint(sum(sur)\/len(sur))\n\n\n\n\n\n\n","1bb0b4ad":"\nsns.displot(data=train_data.loc[(train_data.Age > 60) & (train_data.Age <= 70)], x=\"Age\", hue=\"Pclass\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Age > 50) & (train_data.Age <= 60)], x=\"Age\", hue=\"Pclass\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Age >= 18) & (train_data.Age <= 35)], x=\"Age\", hue=\"Pclass\", multiple=\"stack\")","94199ca7":"sns.displot(data=train_data.loc[(train_data.Age >= 50) & (train_data.Pclass == 1)], x=\"Age\", hue=\"Survived\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Age >= 50) & (train_data.Pclass == 2)], x=\"Age\", hue=\"Survived\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Age >= 50) & (train_data.Pclass == 3)], x=\"Age\", hue=\"Survived\", multiple=\"stack\")\n","e6c0a588":"plt.hist(train_data[\"Fare\"])\nplt.title(\"Fare\")\nplt.show()\nprint(\"Mean of training data fare is \" ,train_data.Fare.mean())\nsns.displot(data=train_data.loc[(train_data.Fare<=100)&(train_data.Fare>=0)], x=\"Fare\", hue=\"Survived\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Fare<=200)&(train_data.Fare>=100)], x=\"Fare\", hue=\"Survived\", multiple=\"stack\")\nsns.displot(data=train_data.loc[(train_data.Fare<=300)&(train_data.Fare>=200)], x=\"Fare\", hue=\"Survived\", multiple=\"stack\")\n\n\n","b154372f":"y = train_data[\"Survived\"]\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\",\"Age\",\"Fare\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\n\nX.Age.fillna(28, inplace = True)\nX_test.Age.fillna(28, inplace = True)\n\nX.Fare.fillna(28, inplace = True)\nX_test.Fare.fillna(29, inplace = True)\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission2.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","371e7e6e":"# 50+ aged passengers and survival rate by class\nHere we plotted the survival rate of passengers aged 50+ by class. We can see that most of the passengers in class 3 did not survive and older passengers in class 1 had a greater rate of survival.","36c91058":"# Is there a corelation between age and survival ?\nHere we observe the ratios of age by survival to see if there is a correlation. \nWe observe that the survival rate unusally seems higher for older people who are 50+.\nHowever generally there seems to be a higher rate of survival of younger people, youth and children.","966d2fb3":"# New model generation\nNow that we know that age and fare have a part to play in survial we will include it in our classifer - model. \nWe now achieved imporvement and a new score of 0.78708\n\n\n","46612891":"#  Contribution and Focus on score improvement\n\n## Data Analysis\nHere we are going to first conduct some data analysis. We first try to gauge the distribution of ages who boarded the ship. \nAs we can see that most of the passengers were in the 20 - 40 years age range. \nThen we obtain the ration of age ranges to survival chances. We can see that most of the youngest passengers in ship survived. Passengers below 10 years of age had a ~ 61 % survival rate. The older passengers seemed to have a higher survival rate but upon further inspection it seemed that more older people were in the higher classes \"1,2\" and that probably increased their odds of survival.\n\n","95c803a9":"# Fare analysis\nHere we plot a histogram to monitor the fare range. And then try to observe the relation between fares and survival and see that higher fares meant a greater chance of survival.","75002f47":"# Age groups and classes.\nNow we try to see if the unusual increase of survival rate was dependent on the class the passenger boarded so we plot age groups by Pclass. We observe that a lot of older folks liked to travel in style."}}