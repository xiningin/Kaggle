{"cell_type":{"57d1c345":"code","8b70b3fa":"code","603ebf3a":"code","230f3825":"code","6e8cc90c":"code","02df98da":"code","3956dcca":"code","d394c979":"code","bdb5114a":"code","c42dad6e":"code","b43eccfa":"code","b4db7e8a":"code","f7df56bc":"markdown","08af6420":"markdown","157ed491":"markdown","d09e4896":"markdown","7926f761":"markdown","171b5c65":"markdown","751c4ac0":"markdown","91da5532":"markdown","5a65f01e":"markdown","4a3ec562":"markdown","6c5183e8":"markdown","20c47538":"markdown","d4b65512":"markdown","2399f4b9":"markdown","3f4734e6":"markdown"},"source":{"57d1c345":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8b70b3fa":"# Loading the data\nfinch_beaks_1975=pd.read_csv(\"..\/input\/finch_beaks_1975.csv\")\nfinch_beaks_2012=pd.read_csv(\"..\/input\/finch_beaks_2012.csv\")","603ebf3a":"finch_beaks_1975.head(5)","230f3825":"finch_beaks_2012.head(5)","6e8cc90c":"finch_beaks_1975_df = pd.DataFrame(finch_beaks_1975)\nfinch_beaks_2012_df = pd.DataFrame(finch_beaks_2012)\n\nfinch_beaks_1975_gb = finch_beaks_1975_df.groupby(finch_beaks_1975_df['species'])\nfinch_beaks_1975_scandens = finch_beaks_1975_gb.get_group('scandens').reset_index(drop=True)\n\nfinch_beaks_2012_gb = finch_beaks_2012_df.groupby(finch_beaks_2012_df['species'])\nfinch_beaks_2012_scandens = finch_beaks_2012_gb.get_group('scandens').reset_index(drop=True)\n\n# The depths of scandens beak\nscandens_beak_depth_1975=finch_beaks_1975_scandens['Beak depth, mm']\nscandens_beak_depth_2012=finch_beaks_2012_scandens['bdepth']\n\n#The lengths of scandens beak\nscandens_beak_length_1975=finch_beaks_1975_scandens['Beak length, mm']\nscandens_beak_length_2012=finch_beaks_2012_scandens['blength']\n\n\ns_bd_both = pd.concat([finch_beaks_1975_scandens['Beak depth, mm'],finch_beaks_2012_scandens['bdepth']],axis=1).reset_index(drop=True)\ns_bd_both.rename(columns={'Beak depth, mm' : '1975','bdepth' : '2012'},inplace=True)\n\n#EDA of beak depths of Darwin's finches\n#visualization of beak depth\n\n#1. Swarmplot\nsns.set()\n_=sns.swarmplot(data=s_bd_both)\n_=plt.xlabel('year')\n_=plt.ylabel('beak depth (mm)')","02df98da":"# ecdf calculation functiom\ndef ecdf(x_data) :\n    x = np.sort(x_data)\n    y = np.arange(1,len(x)+1) \/ len(x)\n\n    return x,y\n\n#bootstarp 1D function\ndef bs_rep_1d(data,func) :\n    return func(np.random.choice(data,size=len(data)))\n\n# bottstarp replicate function\ndef bs_reps(data,func,size=1) :\n\n    bs_rep = np.empty(size)\n\n    for i in range(size) :\n        bs_rep[i] = bs_rep_1d(data,func)\n    return bs_rep\n\n# linear regression funcion for pair bootstrap\n\ndef bs_pair_linreg(x,y,size=1) :\n    indices = np.arange(len(x))\n       \n    slope_reps = np.empty(size)\n    intercept_reps = np.empty(size)\n\n    for i in range(size) :\n        bs_indices = np.random.choice(indices,size=len(indices))\n        bs_x,bs_y = x[bs_indices],y[bs_indices]\n        slope_reps[i],intercept_reps[i] = np.polyfit(bs_x,bs_y,1)\n\n    return slope_reps,intercept_reps\n\n# Compute ECDFs\nx_1975, y_1975 = ecdf(scandens_beak_depth_1975)\nx_2012, y_2012 = ecdf(scandens_beak_depth_2012)\n\n# Plot the ECDFs\n_ = plt.plot(x_1975, y_1975, marker='.', linestyle='none')\n_ = plt.plot(x_2012, y_2012, marker='.', linestyle='none')\n\n# Set margins\nplt.margins(0.02)\n\n# Add axis labels and legend\n_ = plt.xlabel('beak depth (mm)')\n_ = plt.ylabel('ECDF')\n_ = plt.legend(('1975', '2012'), loc='lower right')\n\n# Show the plot\nplt.show()","3956dcca":"# Compute the difference of the sample means: mean_diff\nmean_diff = np.mean(scandens_beak_depth_2012) - np.mean(scandens_beak_depth_1975)\n\n# Get bootstrap replicates of means\nbs_rep_1975 = bs_reps(scandens_beak_depth_1975,np.mean,size=10000)\nbs_rep_2012 = bs_reps(scandens_beak_depth_2012,np.mean,size=10000)\n\n# Compute samples of difference of means: bs_diff_replicates\nbootstrap_rep= bs_rep_2012 - bs_rep_1975\n\n# Compute 95% confidence interval: conf_int\nconf_int = np.percentile(bootstrap_rep, [2.5, 97.5])\n\n# Print the results\nprint('difference of means =', mean_diff, 'mm')\nprint('95% confidence interval =', conf_int, 'mm')","d394c979":"#shifting the two data sets so that they have the same mean \ncombined_mean = np.mean(np.concatenate((scandens_beak_depth_1975,scandens_beak_depth_2012)))\n\nbd_1975_shift = scandens_beak_depth_1975 - np.mean(scandens_beak_depth_1975) + combined_mean\nbd_2012_shift = scandens_beak_depth_2012 - np.mean(scandens_beak_depth_2012) + combined_mean\n\nbs_rep_1975_shift = bs_reps(bd_1975_shift,np.mean,size=10000)\nbs_rep_2012_shift = bs_reps(bd_2012_shift,np.mean,size=10000)\n\nbs_shifted_mean_diff = bs_rep_2012_shift - bs_rep_1975_shift\n\n#p value\np= np.sum(bs_shifted_mean_diff >= mean_diff) \/ len(bs_shifted_mean_diff)\nprint(\"[+] p-value = \",p)","bdb5114a":"# Make scatter plot of 1975 data\n_ = plt.plot(scandens_beak_length_1975, scandens_beak_depth_1975, marker='.',\n             linestyle='None', color='blue', alpha=0.5)\n\n# Make scatter plot of 2012 data\n_ = plt.plot(scandens_beak_length_2012, scandens_beak_depth_2012, marker='.',\n            linestyle='None',color='red', alpha=0.5)\n\n# Label axes and make legend\n_ = plt.xlabel('beak length (mm)')\n_ = plt.ylabel('beak depth (mm)')\n_ = plt.legend(('1975', '2012'), loc='upper left')\n\n# Show the plot\nplt.show()","c42dad6e":"# Compute the linear regressions\nslope_1975,intercept_1975 = np.polyfit(scandens_beak_length_1975,scandens_beak_depth_1975,1)\nslope_2012,intercept_2012 = np.polyfit(scandens_beak_length_2012,scandens_beak_depth_2012,1)\n\n# Perform pairs bootstrap for the linear regressions\nbs_slope_1975,bs_intercept_1975 = bs_pair_linreg(scandens_beak_length_1975,scandens_beak_depth_1975,size=1000)\nbs_slope_2012,bs_intercept_2012 = bs_pair_linreg(scandens_beak_length_2012,scandens_beak_depth_2012,size=1000)\n\n# Compute confidence intervals of slopes\nslope_conf_int_1975 = np.percentile(bs_slope_1975,[2.5,97.5])\nslope_conf_int_2012 = np.percentile(bs_slope_2012,[2.5,97.5])\nintercept_conf_int_1975 = np.percentile(bs_intercept_1975,[2.5,97.5])\nintercept_conf_int_2012 = np.percentile(bs_intercept_1975,[2.5,97.5])\n\n# Print the results\nprint('1975: slope =', slope_1975,\n      'conf int =', slope_conf_int_1975)\nprint('1975: intercept =', intercept_1975,\n      'conf int =', intercept_conf_int_1975)\nprint('2012: slope =', slope_2012,\n      'conf int =', slope_conf_int_2012)\nprint('2012: intercept =', intercept_2012,\n      'conf int =', intercept_conf_int_2012)","b43eccfa":"# Make scatter plot of 1975 data\n_ = plt.plot(scandens_beak_length_1975, scandens_beak_depth_1975, marker='.',\n             linestyle='none', color='blue', alpha=0.5)\n\n# Make scatter plot of 2012 data\n_ = plt.plot(scandens_beak_length_2012, scandens_beak_depth_2012, marker='.',\n             linestyle='none', color='red', alpha=0.5)\n\n# Label axes and make legend\n_ = plt.xlabel('beak length (mm)')\n_ = plt.ylabel('beak depth (mm)')\n_ = plt.legend(('1975', '2012'), loc='upper left')\n\n# Generate x-values for bootstrap lines: x\nx = np.array([10, 17])\n\n# Plot the bootstrap lines\nfor i in range(100):\n    plt.plot(x, bs_slope_1975[i] * x + bs_intercept_1975[i],\n             linewidth=0.5, alpha=0.2, color='blue')\n    plt.plot(x, bs_slope_2012[i] * x + bs_intercept_2012[i],\n             linewidth=0.5, alpha=0.2, color='red')\n\n# Draw the plot again\nplt.show()","b4db7e8a":"# Compute length-to-depth ratios\nratio_1975 = scandens_beak_length_1975 \/ scandens_beak_depth_1975\nratio_2012 = scandens_beak_length_2012 \/ scandens_beak_depth_2012\n\n# Compute means\nmean_ratio_1975 = np.mean(ratio_1975)\nmean_ratio_2012 = np.mean(ratio_2012)\n\n# Generate bootstrap replicates of the means\nbs_replicates_1975 = bs_reps(ratio_1975, np.mean, size=10000)\nbs_replicates_2012 = bs_reps(ratio_2012, np.mean, size=10000)\n\n# Compute the 99% confidence intervals\nconf_int_1975 = np.percentile(bs_replicates_1975, [0.5, 99.5])\nconf_int_2012 = np.percentile(bs_replicates_2012, [0.5, 99.5])\n\n# Print the results\nprint('1975: mean ratio =', mean_ratio_1975,\n      'conf int =', conf_int_1975)\nprint('2012: mean ratio =', mean_ratio_2012,\n      'conf int =', conf_int_2012)","f7df56bc":"## EDA of beak length and depth","08af6420":"The linear regression result showed us that the slope was the same in 1975 and 2012 which means for every millimeter gained in beak length, the birds gained about half a millimeter in depth in both years. For the shape of the beak, compare the ratio of beak length to beak depth.","157ed491":"The mean beak length-to-depth ratio decreased by about 0.1, or 7%, from 1975 to 2012. The 99% confidence intervals are not even close to overlapping, so this is a real change. The conclusion is: the beak shape changed.","d09e4896":"There is a statistically significant difference, in the previous code we got 0.2 mm difference between the means. Changing by 0.2 mm in 37 years is substantial by evolutionary standards. To put it in another perspective, the beak depth would double in only 400 years.","7926f761":"We can't tell if there's a clear difference between the 1975 and 2012 data set but it appears \nas though the mean of the 2012 data set might be slightly higher, and it might have a bigger variance.","171b5c65":"## Hypothesis test","751c4ac0":"## Linear Regression","91da5532":"## ECDF of the beak depths","5a65f01e":"## Parameter estimates of the beak depths","4a3ec562":"## Displaying the linear regression results","6c5183e8":"We can see that from the plot of the ECDF and determination of the confidence interval that scandens beak have gotten deeper. But it might be possible that this effect is just due to random chance? What is the probability that we would get the observed difference in mean beak depth if the means were the same?","20c47538":"The mean is larger in the 2012 data, and the variance as well","d4b65512":" Seems like they have the same slope, but different intercepts.","2399f4b9":"## Beak length to depth ratio","3f4734e6":"From the plot, we can see that beaks got deeper (the red points are higher up in the y-direction) and not longer. It's safe to sa that the beaks became shorter and deeper."}}