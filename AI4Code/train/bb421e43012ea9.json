{"cell_type":{"a1c5b648":"code","f55fb503":"code","a9c75981":"code","3f7a9c51":"code","fab040dc":"code","7068ded0":"code","980e4d47":"code","ffdadee4":"code","1810b409":"code","fe3fb96d":"code","4c569742":"code","8446857f":"code","124f0ccc":"code","276c65e9":"markdown","848ba140":"markdown","596922c6":"markdown","425e109c":"markdown","1a4f6f61":"markdown","3c91a49d":"markdown","4a552125":"markdown"},"source":{"a1c5b648":"import pandas as pd\nimport numpy as np\nfrom IPython.display import display\nimport gc\nimport ujson as js\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport ipywidgets as widgets","f55fb503":"with open(\"..\/input\/tokyo-2021-olympics-complete-grouped-by-type\/tokyo-olympics-all-by-type-2021-08-11.json\", \"r\") as file:\n    data = js.load(file)\n    \nprint(\"Objects in Olympics data: \\n{}\".format(list(data.keys())))","a9c75981":"def filter_objs(data, objs):\n    ''' Remove objects not in objs '''\n    new_data = {}\n    for obj in objs:\n        new_data[obj] = data[obj]\n    return new_data","3f7a9c51":"data = filter_objs(data, objs=[\"Discipline\", \"Medal\", \"Organisation\", \"Participant\"])\nprint(\"Filtered objects: \\n{}\".format(list(data.keys())))","fab040dc":"# functions for conversion to Pandas dataframe\n\ndef get_df(data, attributes=[], relationships=[]):\n    \n    '''\n    Build dataframe from json data\n    '''\n    \n    def get_value(data, key, subkeys=[]):\n        \n        '''\n        Handle missing values\n        '''\n        \n        try:\n            x = data[key]\n            for i in subkeys:\n                x = x[i]\n        except Exception:\n            x = np.nan\n        return x\n\n    if len(attributes) + len(relationships) == 0:\n        raise ValueError(\"there must be at least one attribute or relationship\")\n    \n    df = pd.DataFrame(\n        [\n            [itemId, *(get_value(item[\"attributes\"], A) for A in attributes), *(get_value(item[\"relationships\"], R, [\"data\", \"id\"]) for R in relationships)]\n            for itemId, item in data.items()\n        ],\n        columns = [\"id\", *attributes, *relationships]\n    )\n    \n    return df.set_index(\"id\")\n\n\ndef insert_names(df_dict):\n    \n    '''\n    Replace items id with their names\n    '''\n    \n    for key in df_dict.keys():\n        for col in df_dict.keys():\n            if not col in df_dict[key].columns:\n                continue\n            df_dict[key].loc[:,col] = df_dict[key].loc[:,col].apply(lambda x: df_dict[col].loc[x,\"name\"] if x in df_dict[col].index else x)\n    \n    return df_dict","7068ded0":"df = {\n    \"discipline\":     get_df(data[\"Discipline\"], attributes=[\"name\", \"description\"]),\n    \"medal\":          get_df(data[\"Medal\"], attributes=[\"medalType\"], relationships=[\"discipline\", \"organisation\", \"participant\"]).rename(columns={\"medalType\": \"type\"}),\n    \"organisation\":   get_df(data[\"Organisation\"], attributes=[\"name\", \"description\"]),\n    \"participant\":    get_df(data[\"Participant\"], attributes=[\"name\"], relationships=[\"organisation\", \"discipline\"])\n}\ndf = insert_names(df)\n\nfor item in df.values():\n    display(item.head())","980e4d47":"# missing values\n\nfor name, item in df.items():\n    print(name.capitalize())\n    display(item.isnull().sum())\n    print()","ffdadee4":"df[\"organisation\"].loc[df[\"organisation\"].isnull().any(axis=1)]","1810b409":"df[\"participant\"].loc[df[\"participant\"].isnull().any(axis=1)].head()","fe3fb96d":"fig,ax = plt.subplots(figsize=(10,30))\nax.grid(axis=\"x\")\nax.secondary_xaxis(\"top\", functions=(lambda x: x, lambda x: x))\nax.set_title(\"Countries medals\")\n_ = sns.histplot(data=df[\"medal\"].sort_values(\"organisation\"), y=\"organisation\", multiple=\"dodge\", hue=\"type\", ax=ax)","4c569742":"w = widgets.Dropdown(options=df[\"organisation\"].name.sort_values().unique(), label=\"United States of America\", description=\"Country:\")\ndisplay(w)","8446857f":"fig,ax = plt.subplots(figsize=(10,10))\nax.grid(axis=\"x\")\nax.set_title(\"{} athletes\".format(w.get_interact_value()))\n_ = sns.histplot(data=df[\"participant\"].loc[df[\"participant\"].organisation == w.get_interact_value()].sort_values(\"discipline\"), y=\"discipline\", ax=ax)","124f0ccc":"fig,ax = plt.subplots(figsize=(10,10))\nax.grid(axis=\"x\")\nax.set_title(\"{} medals\".format(w.get_interact_value()))\n_ = sns.histplot(data=df[\"medal\"].loc[df[\"medal\"].organisation == w.get_interact_value()].sort_values(\"discipline\"), y=\"discipline\", multiple=\"dodge\", hue=\"type\", ax=ax)","276c65e9":"- there are $764$ participants without an organisation.","848ba140":"# Data visualization","596922c6":"Dataframes contain some missing values:\n- there is $1$ organisation without a description;","425e109c":"Pandas dataframes are better for working with data, becuase of this each object is used to build a dataframe.","1a4f6f61":"Not all objects are relevant, because of this only some are kept.","3c91a49d":"# Dataset","4a552125":"Change Country value in the following widget to change data displayed in next plots.\nTo update figures you need to re-run the successive cells.\n\nLast histograms show athlethes and medals number per discipline."}}