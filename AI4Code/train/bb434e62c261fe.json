{"cell_type":{"0cb00ced":"code","f5e5833e":"code","5cae10bb":"code","8e57b1f8":"code","cf99d9f1":"code","7ce906d7":"code","37f982b3":"code","3c280ced":"markdown","a17755da":"markdown","7432a523":"markdown","f8789c31":"markdown","7fe850f9":"markdown","0886b6e0":"markdown","492cd30f":"markdown"},"source":{"0cb00ced":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5e5833e":"bike = pd.read_csv('..\/input\/citibike-system-data\/201306-citibike-tripdata.csv')\nbike.head()","5cae10bb":"bike = bike.sort_values(['bikeid', 'starttime', 'stoptime'])\nbike['starttime'] = pd.to_datetime(bike['starttime'])\nbike['stoptime'] = pd.to_datetime(bike['stoptime'])\nbike.head()","8e57b1f8":"bike['triptime'] = bike['stoptime'] - bike['starttime']\nbike['idletime'] = bike['starttime'].diff() - bike['triptime'].shift(periods=1)\nbike.head()","cf99d9f1":"bike['tstrip'] = bike['triptime'].values.astype(np.int64) \/\/ 10 ** 9\nbike['tsidle'] = bike['idletime'].values.astype(np.int64) \/\/ 10 ** 9\nbike.head()","7ce906d7":"tsidle = bike['tsidle']\ntsidle[tsidle<0] = 0\nbike['tsidle'] = tsidle\nbike.head()","37f982b3":"output = bike\noutput.to_csv('CitiBike System Data Bikes.csv', index=False)","3c280ced":"Define:\n* trip time duration $\\Delta t_{trip}(i)$ as\n$$\\Delta t_{trip}(i)=t_{stop}(i)-t_{start}(i)$$\n* idle time duration $\\Delta t_{idle}(i+1)$ as\n$$\\Delta t_{idle}(i+1)=t_{start}(i+1)-t_{stop}(i)$$","a17755da":"We observe that\n\n$$\\Delta t_{idle}(i+1)=t_{start}(i+1)-t_{stop}(i)=t_{start}(i+1)-t_{start}(i)+t_{start}(i)-t_{stop}(i)=t_{start}(i+1)-t_{start}(i)-(t_{stop}(i)-t_{start}(i))\\Leftrightarrow$$\n$$\\Delta t_{idle}(i+1)=t_{start}(i+1)-t_{start}(i)-\\Delta t_{trip}(i)$$\n\nThus, we can calculate trip time duration and idle time duration as follows.","7432a523":"We calculate timestamps for computational reasons.","f8789c31":"Assume we have a table with *bikeid*, *starttime*, *stoptime* grouped by *bikeid* and sorted by *starttime*, *stoptime* ascending.","7fe850f9":"We group by *bikeid* and sort by *starttime*, *stoptime* (ascending).","0886b6e0":"As a bike can not be in more than 1 trip at any given time moment,\n$$t_{start}(i)<t_{stop}(i)<t_{start}(i+1)<t_{stop}(i+1)$$\nwithout loss of generality.","492cd30f":"Let $i$ be a row number such that $bikeid(i)=bikeid(i+1)$."}}