{"cell_type":{"4239baf9":"code","c7b8e36b":"code","0f4c1f1d":"code","1b2e125d":"code","33f9870d":"code","ac531ab2":"code","4bd9df1c":"code","ec0e9f92":"code","9e4e37ab":"code","5b86e0c2":"code","d50b4f46":"code","babc56b3":"markdown","04939be8":"markdown","b727aee8":"markdown"},"source":{"4239baf9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c7b8e36b":"# Importing libraries\nimport keras\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os","0f4c1f1d":"# Getting labels of training data\nlabels = os.listdir('\/kaggle\/input\/fruits-fresh-and-rotten-for-classification\/dataset\/dataset\/train')\nlabels","1b2e125d":"# for displaying images\nfrom IPython.display import display, Image","33f9870d":"num = []\n\nfor i in labels:\n  path = '\/kaggle\/input\/fruits-fresh-and-rotten-for-classification\/dataset\/dataset\/train\/{0}\/'.format(i)\n  folder_data = os.listdir(path)\n  k=0\n  print('\\n', i.upper())\n  for j in folder_data:\n    if(k<2):\n      display(Image(path+j))\n    k=k+1\n  num.append(k)\n  print('there are ', k,' images in ', i, 'class')","ac531ab2":"# getting images from files using ImageDataGenerator\n\nfrom keras.preprocessing.image import ImageDataGenerator\n\ndatagen = ImageDataGenerator(rescale=1.\/255, validation_split=0.2)\n\ntg = datagen.flow_from_directory(directory='\/kaggle\/input\/fruits-fresh-and-rotten-for-classification\/dataset\/dataset\/train', target_size=(20,20), classes=labels, batch_size=25, subset='training')\nvg = datagen.flow_from_directory(directory='\/kaggle\/input\/fruits-fresh-and-rotten-for-classification\/dataset\/dataset\/train', target_size=(20,20), classes=labels, batch_size=25, subset='validation')\n","4bd9df1c":"# building model\nmodel = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Conv2D(32, kernel_size=(3,3), activation='relu', input_shape = (20,20,3)))\nmodel.add(tf.keras.layers.MaxPool2D((2,2)))\n\nmodel.add(tf.keras.layers.Conv2D(64, kernel_size=(3,3), activation='relu'))\nmodel.add(tf.keras.layers.MaxPool2D((2,2)))\n\nmodel.add(tf.keras.layers.Flatten())\nmodel.add(tf.keras.layers.Dense(128, activation='relu'))\nmodel.add(tf.keras.layers.Dense(128, activation='relu'))\n\nmodel.add(tf.keras.layers.Dense(6, activation='softmax'))","ec0e9f92":"# compiling model\nmodel.compile(optimizer='adam', loss = 'categorical_crossentropy', metrics=['accuracy'])","9e4e37ab":"# runing model\nhistory = model.fit_generator(generator=tg, steps_per_epoch=len(tg), epochs=8, validation_data=vg, validation_steps=len(vg))","5b86e0c2":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend(['Acc','Val'], loc = 'upper left')","d50b4f46":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model Loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(['loss','Val'], loc = 'upper left')","babc56b3":"# display images","04939be8":"# Learning Curves","b727aee8":"# **CNN Model**"}}