{"cell_type":{"67afcb6d":"code","6791d04b":"code","bdc04feb":"code","16ef1b59":"code","637820bb":"code","d346182d":"code","3c005810":"code","5e3e9a34":"code","017ba805":"code","4e28ed14":"code","db940da2":"code","7aeb01de":"code","f276dfde":"code","1e1bf009":"code","247cfab5":"code","9cf85ff0":"code","58d75b60":"code","93b71c4e":"code","ca7aaf44":"code","dcc44fc4":"code","cf77fdc9":"code","dc698dae":"code","a11e1564":"code","2ac94a12":"code","5b175562":"code","ba2f71ca":"code","dfee27b4":"code","235574f4":"code","a835f21d":"code","808c5f23":"code","df5ca82f":"code","36adaf47":"code","ecaa9b9e":"code","97ba4bb1":"code","33f93244":"code","e86f0732":"code","9d293bcf":"code","d225856d":"code","12a01a34":"code","2084ac83":"code","d4925fa3":"code","14ab5220":"code","f83409d8":"code","4857c0b6":"code","896fc31f":"code","8543cab0":"code","093b372d":"code","5a5f4a8d":"code","fc3736c3":"code","32b2a4eb":"code","473d7222":"code","695697f6":"code","8a1afb28":"code","2d72690a":"code","1df72c8f":"code","d15ab82f":"code","6caf94f3":"code","32efa59b":"code","2be889a7":"code","9666e32f":"code","3fac9ea1":"code","f3fb81ea":"code","5ddd3892":"code","b514a585":"code","a805e2e9":"code","c8911c15":"code","afe3171b":"code","8287a056":"code","76078c87":"code","3c52fe87":"code","b3aac580":"code","d70365ad":"code","eda078ad":"code","a11cab17":"code","8ba0008f":"code","abf2c93f":"code","5b49f325":"code","2da19c14":"code","381b8bad":"code","15d4a06e":"code","76cf1d86":"code","eb59623f":"code","1a3e8aad":"code","a1f8b81e":"code","05ce1b75":"code","e5b850d9":"code","2919e3d2":"code","0045f635":"code","8033d4b0":"code","6c261c3c":"code","664e6f48":"code","9b2daf90":"code","3597154a":"code","20899010":"code","44ca0299":"code","5d051d95":"code","10e6366c":"code","cb8bbafe":"code","7594509c":"markdown","ce2e9b89":"markdown","26aa05c6":"markdown","8c7f5064":"markdown","5ce5128a":"markdown","a9b18c76":"markdown","45407c3f":"markdown","884b37bd":"markdown","2c3eb040":"markdown","c3c970ec":"markdown","65abcbcb":"markdown","2db8f1be":"markdown","35baf203":"markdown","a636b5cd":"markdown","92b1d712":"markdown","bfeed7e2":"markdown","d4d1a455":"markdown","843a189a":"markdown","8c119145":"markdown","0859aefe":"markdown","3e6b4ad3":"markdown","b0e59509":"markdown","ccc45208":"markdown","b50b4615":"markdown","df46dc02":"markdown","1296f117":"markdown","c3c05da7":"markdown","cfeea227":"markdown","b46087ab":"markdown","a10c0aa5":"markdown","5ef6806a":"markdown","84fc3fb5":"markdown","be819fea":"markdown","bc674e08":"markdown","3a7b5cdf":"markdown","4d99d4c0":"markdown","2780be46":"markdown","f1a67abe":"markdown"},"source":{"67afcb6d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nimport missingno as msno\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom scipy.stats import norm, skew, boxcox\nfrom sklearn.preprocessing import RobustScaler, StandardScaler\nfrom catboost import CatBoostClassifier, Pool\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score, mean_squared_error, confusion_matrix, plot_confusion_matrix, auc\nfrom xgboost import XGBClassifier\nfrom sklearn.preprocessing import RobustScaler, StandardScaler\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings # don't show warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6791d04b":"train_data = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv\")\nenrollee_id = test_data[\"enrollee_id\"]","bdc04feb":"print(\" \\t Data Columns : \\n \\n \",train_data.columns)","16ef1b59":"train_data.head()","637820bb":"train_data.describe()","d346182d":"print(\"Train Data INFO \\n\")\ntrain_data.info()","3c005810":"#city\nprint(\"{} \\n\".format(train_data[\"city\"].value_counts()))\nprint(\"null value number -- > {} \\n\".format(train_data[\"city\"].isnull().sum()))","5e3e9a34":"#city_development_index\nplt.figure(figsize=(9,3))\nplt.hist(train_data[\"city_development_index\"], color=\"purple\")\nplt.ylabel(\"Frequency\")\nplt.show()\n\nprint(\"{} \\n\".format(train_data[\"city_development_index\"].value_counts()))\nprint(\"null value number -- > {} \\n\".format(train_data[\"city_development_index\"].isnull().sum()))","017ba805":"#gender \ngender = train_data[\"gender\"].value_counts()\nplt.figure(figsize=(9,3))\nsns.countplot(train_data[\"gender\"], hue = \"target\", data = train_data)\nplt.title(\"gender\", color = \"darkred\")\nplt.show()\nprint(gender)\nprint(\"null value number -- > {} \\n\".format(train_data[\"gender\"].isnull().sum()))","4e28ed14":"#relevent_experience\nexperience = train_data[\"relevent_experience\"].value_counts()\ndata_index = experience.index\ndata_values = experience.values\n\nplt.figure(figsize = (6,8))\nplt.pie(data_values, labels=data_index, autopct='%1.2f%%')\nplt.title('Relevent Experience',color = 'darkred',fontsize = 15)\nplt.legend()\nplt.show()\n\nprint(experience)\nprint(\"null value number -- > {} \\n\".format(train_data[\"relevent_experience\"].isnull().sum()))","db940da2":"#enrolled_university \nuniversity = train_data[\"enrolled_university\"].value_counts()\n\nax= sns.barplot(x=university.index, y=university.values)\nplt.xlabel(' Type of university of the enrolee', size = 15, color = \"green\") \nplt.ylabel('Value', size = 15) \nplt.title('Enrolled University', color = \"darkred\")\nplt.show()\n\nprint(university)\nprint(\"null value number -- > {} \\n\".format(train_data[\"enrolled_university\"].isnull().sum()))","7aeb01de":"#education_level\ncolors = ['#558B2F','#E65100','#FFE4E1','#A52A2A','black']\nedu_level = train_data[\"education_level\"].value_counts()\n\nplt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nax= sns.barplot(x=edu_level.index, y=edu_level.values)\nplt.xlabel('Edu Level', size = 15, color = \"green\") \nplt.xticks(rotation = 120)\nplt.ylabel('Value', size = 15) \nplt.title('Edu Level', color = \"darkred\")\n\nplt.subplot(1,2,2)\ncircle = plt.Circle((0,0),0.2,color = \"white\")\nplt.pie(edu_level.values, labels = edu_level.index, colors = colors)\np = plt.gcf()\np.gca().add_artist(circle) \nplt.title(\"Edu Level\")\nplt.legend()\nplt.show()\n\n\nprint(edu_level)\nprint(\"null value number -- > {} \\n\".format(train_data[\"education_level\"].isnull().sum()))","f276dfde":"# major_discipline\nmj_discipline = train_data[\"major_discipline\"].value_counts()\n\nplt.figure(figsize=(9,3))\nsns.countplot(train_data[\"major_discipline\"])\nplt.title(\"major discipline\", color = \"darkred\")\nplt.show()\n\nprint(mj_discipline)\nprint(\"null value number -- > {} \\n\".format(train_data[\"major_discipline\"].isnull().sum()))","1e1bf009":"#experience \nprint(\"{} \\n\".format(train_data[\"experience\"].value_counts()))\nprint(\"null value number -- > {} \\n\".format(train_data[\"experience\"].isnull().sum()))","247cfab5":"#company_size\ncompany_size = train_data[\"company_size\"].value_counts()\n\nax= sns.barplot(x=company_size.index, y=company_size.values)\nplt.ylabel('Value', size = 15) \nplt.xticks(rotation = 50)\nplt.title('company_size', color = \"darkred\")\nplt.show()\n\nprint(company_size)\nprint(\"null value number -- > {} \\n\".format(train_data[\"company_size\"].isnull().sum()))","9cf85ff0":"#company_type\ncompany_type = train_data[\"company_type\"].value_counts()\n\nplt.figure(figsize=(9,3))\nsns.countplot(train_data[\"company_type\"], hue = \"target\", data = train_data)\nplt.xticks(rotation = 50)\nplt.title(\"company type\", color = \"darkred\")\nplt.show()\n\nprint(company_type)\nprint(\"null value number -- > {} \\n\".format(train_data[\"company_type\"].isnull().sum()))\n","58d75b60":"# last_new_job \nlast_new = train_data[\"last_new_job\"].value_counts()\n\nax= sns.barplot(x=last_new.index, y=last_new.values)\nplt.ylabel('Value', size = 15) \nplt.xticks(rotation = 50)\nplt.title('last-new job', color = \"darkred\")\nplt.show()\n\nprint(last_new)\nprint(\"null value number -- > {} \\n\".format(train_data[\"last_new_job\"].isnull().sum()))","93b71c4e":"#training_hours \nplt.figure(figsize=(9,3))\nplt.hist(train_data[\"training_hours\"], color=\"lightblue\")\nplt.ylabel(\"Frequency\")\nplt.show()\n\nprint(\"{} \\n\".format(train_data[\"training_hours\"].value_counts()))\nprint(\"null value number -- > {} \\n\".format(train_data[\"training_hours\"].isnull().sum()))","ca7aaf44":"# last_new_job - target\ntrain_data[[\"last_new_job\",\"target\"]].groupby([\"last_new_job\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","dcc44fc4":"# company_type -target\ntrain_data[[\"company_type\",\"target\"]].groupby(\n    [\"company_type\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","cf77fdc9":"# gender -target\ntrain_data[[\"gender\",\"target\"]].groupby(\n    [\"gender\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","dc698dae":"#relevent_experience -target\ntrain_data[[\"relevent_experience\",\"target\"]].groupby(\n    [\"relevent_experience\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","a11e1564":"#enrolled_university -target\ntrain_data[[\"enrolled_university\",\"target\"]].groupby(\n    [\"enrolled_university\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","2ac94a12":"#education_level -target\ntrain_data[[\"education_level\",\"target\"]].groupby(\n    [\"education_level\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)","5b175562":"#major_discipline\ntrain_data[[\"major_discipline\",\"target\"]].groupby(\n    [\"major_discipline\"], as_index = False).mean().sort_values(by = \"target\",ascending = False)\n","ba2f71ca":"train_data_len = len(train_data)\ntrain_data = pd.concat([train_data,test_data],axis = 0).reset_index(drop = True)","dfee27b4":"train_data.head()","235574f4":"print(\" \\t Columns with null \\n -->\",train_data.columns[train_data.isnull().any()])","a835f21d":"print(\"\\t how many nulls are there \\n \\n \",train_data.isnull().sum())","808c5f23":"def missing_values_table(df):\n        mis_val = df.isnull().sum()\n        \n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        return mis_val_table_ren_columns","df5ca82f":"train_missing= missing_values_table(train_data)\ntrain_missing","36adaf47":"msno.bar(train_data, color = \"red\")","ecaa9b9e":"msno.matrix(train_data)","97ba4bb1":"msno.heatmap(train_data)","33f93244":"msno.dendrogram(train_data)","e86f0732":"train_data.dropna(subset=[\"experience\"], inplace=True)\ntrain_data.dropna(subset=[\"enrolled_university\"], inplace=True)\ntrain_data.dropna(subset=[\"last_new_job\"], inplace=True)\ntrain_data.dropna(subset=[\"education_level\"], inplace=True)","9d293bcf":"train_missing1= missing_values_table(train_data)\ntrain_missing1","d225856d":"print(\"NULL experience --> \",train_data[\"experience\"].isnull().sum())\nprint(\"NULL enrolled_university --> \",train_data[\"enrolled_university\"].isnull().sum())\nprint(\"NULL last_new_job --> \",train_data[\"last_new_job\"].isnull().sum())\nprint(\"NULL education_level --> \",train_data[\"education_level\"].isnull().sum())\n                        ","12a01a34":"#major_discipline\nprint(\"most repetitive --> \",train_data[\"major_discipline\"].value_counts().index[0])\ntrain_data[\"major_discipline\"].fillna( method ='ffill', limit = 3, inplace = True)","2084ac83":"train_data.dropna(subset=[\"major_discipline\"], inplace=True)\nprint(\"NULL major_discipline --> \",train_data[\"major_discipline\"].isnull().sum())","d4925fa3":"#company_size\ntrain_data[\"company_size\"].fillna( method ='ffill', limit = 2, inplace = True)","14ab5220":"train_data.dropna(subset=[\"company_size\"], inplace=True)\nprint(\"NULL company_size --> \",train_data[\"company_size\"].isnull().sum())","f83409d8":"#company_type\ntrain_data[\"company_type\"].fillna( method ='ffill', limit = 2, inplace = True)","4857c0b6":"train_data.dropna(subset=[\"company_type\"], inplace=True)\nprint(\"NULL company_type --> \",train_data[\"company_type\"].isnull().sum())","896fc31f":"#gender\ntrain_data[\"gender\"].fillna( method ='ffill', limit = 2, inplace = True)","8543cab0":"train_data.dropna(subset=[\"gender\"], inplace=True)\nprint(\"NULL gender --> \",train_data[\"gender\"].isnull().sum())","093b372d":"#gender\n# male = 0 , female = 1, other = 2\ntrain_data[\"gender\"] = [ 0 if gender == \"Male\"\n                        else 1 if gender == \"Female\"\n                        else 2 for gender in train_data[\"gender\"]]","5a5f4a8d":"sns.countplot(x=\"gender\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","fc3736c3":"g = sns.factorplot(x = \"gender\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_xticklabels([\"Male\",\"Female\",\"Other\"])\ng.set_ylabels(\"TARGET\")\nplt.show()","32b2a4eb":"#relevent_experience\n# Has relevent experience = 0 , No relevent experience = 1\ntrain_data[\"relevent_experience\"] = [ 0 if i == \"Has relevent experience\"\n                                    else 1 for i in train_data[\"relevent_experience\"]]\n","473d7222":"sns.countplot(x=\"relevent_experience\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","695697f6":"g = sns.factorplot(x = \"relevent_experience\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_ylabels(\"TARGET\")\nplt.show()","8a1afb28":"#enrolled_university \n# no_enrollment = 0 , Full time course = 1, Part time course = 2\n\ntrain_data[\"enrolled_university\"] = [ 0 if i == \"no_enrollment\"\n                                    else 1 if i == \"Full time course\"\n                                    else 2 for i in train_data[\"enrolled_university\"]]","2d72690a":"sns.countplot(x=\"enrolled_university\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","1df72c8f":"g = sns.factorplot(x = \"enrolled_university\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_ylabels(\"TARGET\")\nplt.show()","d15ab82f":"#education_level\n# Graduate = 0 , Masters = 1, High School = 2, Phd = 3, Primary School = 4 \n\ntrain_data[\"education_level\"] = [ 0 if i == \"Graduate\"\n                                    else 1 if i == \"Masters\"\n                                    else 2 if i == \"High School\"\n                                    else 3 if i == \"Phd\" \n                                    else 4 for i in train_data[\"education_level\"]]","6caf94f3":"sns.countplot(x=\"education_level\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","32efa59b":"g = sns.factorplot(x = \"education_level\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_ylabels(\"TARGET\")\nplt.show()","2be889a7":"#major_discipline \n# STEM  = 0 , Humanities = 1, Business Degree = 2, Arts = 3, No Major = 4, Other = 5 \n\ntrain_data[\"major_discipline\"] = [ 0 if i == \"STEM\"\n                                    else 1 if i == \"Humanities\"\n                                    else 2 if i == \"Business Degree\"\n                                    else 3 if i == \"Arts\" \n                                    else 4 if i == \"No Major\" \n                                    else 5 for i in train_data[\"major_discipline\"]]","9666e32f":"sns.countplot(x=\"major_discipline\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","3fac9ea1":"g = sns.factorplot(x = \"major_discipline\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_ylabels(\"TARGET\")\nplt.show()","f3fb81ea":"#experience\ntrain_data[\"experience\"] = [ 0 if i == \"2\" or i == \"1\" or i == \"4\" or i == \"<1\" or i == \"3\"\n                                    else 1 if i == \"5>\" or i == \"11\" or i == \"7\" or i == \"10\" or i == \"6\" or i == \"9\" or i == \"8\" or i == \"20\"\n                                    else 2 for i in train_data[\"experience\"]]","5ddd3892":"#experience\nsns.countplot(x=\"experience\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","b514a585":"g = sns.factorplot(x = \"experience\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_ylabels(\"TARGET\")\nplt.show()","a805e2e9":"#company_size\ntrain_data[\"company_size\"] = [ 0 if i == \"10\/49\"\n                                    else 1 for i in train_data[\"company_size\"]]","c8911c15":"sns.countplot(x=\"company_size\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","afe3171b":"g = sns.factorplot(x = \"company_size\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_xticklabels(rotation = 90)\ng.set_ylabels(\"TARGET\")\nplt.show()","8287a056":"#company_type\n# pvt ltd = 0, Funded Startup  = 1 , Public Sector  = 2, Early Stage Startup = 3, NGO = 4 , else 5 \n\ntrain_data[\"company_type\"] = [ 0 if i == \"Pvt Ltd\"\n                               else 1 if i == \"Funded Startup\"\n                               else 2 if i == \"Public Sector\"\n                               else 3 if i == \"Early Stage Startup\"\n                               else 4 if i == \"NGO\" \n                               else 5 for i in train_data[\"company_type\"]]","76078c87":"sns.countplot(x=\"company_type\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","3c52fe87":"g = sns.factorplot(x = \"company_type\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_xticklabels(rotation = 90)\ng.set_ylabels(\"TARGET\")\nplt.show()","b3aac580":"train_data[\"company_type\"].value_counts()","d70365ad":"train_data[\"company_type\"] = [ 0 if i == 3 or i == 4\n                               else 1 if i == 2\n                               else 2 for i in train_data[\"company_type\"]]","eda078ad":"#last_new_job\ntrain_data[\"last_new_job\"] = [ 0 if i == \"1\"\n                               else 1 if i == \"2\"\n                               else 2 if i == \"3\"\n                               else 3 if i == \"4\"\n                               else 4 if i == \"never\" \n                               else 5 for i in train_data[\"last_new_job\"]]","a11cab17":"sns.countplot(x=\"last_new_job\", data = train_data)\nplt.xticks(rotation = 60)\nplt.show()","8ba0008f":"g = sns.factorplot(x = \"last_new_job\", y = \"target\", data = train_data, kind = \"bar\")\ng.set_xticklabels(rotation = 90)\ng.set_ylabels(\"TARGET\")\nplt.show()","abf2c93f":"train_data[\"last_new_job\"] = [ 0 if i == 4\n                               else 1 if i == 5\n                               else 2 for i in train_data[\"last_new_job\"]]","5b49f325":"train_data.head()","2da19c14":"#city\nle = LabelEncoder()\ntrain_data[\"city\"] = le.fit_transform(train_data[\"city\"])","381b8bad":"# training_hours\nsns.distplot(train_data[\"training_hours\"], fit = norm)\nplt.show()\n(mu, sigma) = norm.fit(train_data[\"training_hours\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"training_hours\", mu, \"training_hours\", sigma))\nprint()","15d4a06e":"train_data[\"training_hours\"], lam = boxcox(train_data[\"training_hours\"])","76cf1d86":"# city_development_index\nsns.distplot(train_data[\"city_development_index\"], fit = norm)\nplt.show()\n(mu, sigma) = norm.fit(train_data[\"city_development_index\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"city_development_index\", mu, \"city_development_index\", sigma))\nprint()","eb59623f":"train_data[\"city_development_index\"], lam = boxcox(train_data[\"city_development_index\"])","1a3e8aad":"train_data = train_data.reset_index(drop=True)","a1f8b81e":"test = train_data[17248:]\ntest.drop(labels = [\"target\",\"enrollee_id\"],axis = 1, inplace = True)","05ce1b75":"test.head()","e5b850d9":"train = train_data[:17248]\ntrain.drop(labels = [\"enrollee_id\"],axis = 1, inplace = True)","2919e3d2":"train.head()","0045f635":"X = train.drop(labels = \"target\", axis = 1)\ny = train[\"target\"]","8033d4b0":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 2)\nprint(\"X_train\",len(X_train))\nprint(\"X_test\",len(X_test))\nprint(\"y_train\",len(y_train))\nprint(\"y_test\",len(y_test))\nprint(\"test\",len(test))","6c261c3c":"# model accuracy\nresult = []","664e6f48":"XGB = XGBClassifier(max_depth = 1)\nXGB.fit(X_train, y_train)\ny_pred_xgb = XGB.predict(X_test)\ncm_xgb = confusion_matrix(y_pred_xgb, y_test)\nacc_xgb = accuracy_score(y_test, y_pred_xgb)\nresult.append(acc_xgb)\nprint(\"RESULT\")\nprint(\"XGBoost Model Acc : \",acc_xgb)","9b2daf90":"random_forest_model = RandomForestClassifier(max_depth=7, random_state= 59)\nrandom_forest_model.fit(X_train, y_train)\ny_pred_random_forest = random_forest_model.predict(X_test)\ncm_random_forest = confusion_matrix(y_pred_random_forest, y_test)\nacc_random_forest = accuracy_score(y_test, y_pred_random_forest)\nresult.append(acc_random_forest)\nprint(\"RESULT\")\nprint(\"Random Forest Model Acc : \",acc_random_forest)\n","3597154a":"best_params = {'bagging_temperature': 0.8,\n               'depth': 5,\n               'iterations': 500,\n               'l2_leaf_reg': 30,\n               'learning_rate': 0.05,\n               'random_strength': 0.8}\n\nmodel_cat_boost = CatBoostClassifier(\n        **best_params,\n        loss_function='Logloss',\n        eval_metric='Accuracy',         \n        nan_mode='Min',\n        verbose=False\n    )\n\nmodel_cat_boost.fit(\n        X_train, y_train,\n        verbose_eval=100, \n        early_stopping_rounds=50,\n        eval_set=(X_test, y_test),\n        use_best_model=False,\n        plot=True\n)\n\ny_pred_cat_boost = model_cat_boost.predict(X_test)\n\ncm_cat_boost = confusion_matrix(y_pred_cat_boost, y_test)\nacc_cat_boost = accuracy_score(y_test, y_pred_cat_boost)\nresult.append(acc_cat_boost)\nprint(\"RESULT\")\nprint(\"Cat Boost Model Acc : \",acc_cat_boost)","20899010":"knn_param_grid = {\"n_neighbors\": np.linspace(1,19,10, dtype = int).tolist(),\n                 \"weights\": [\"uniform\",\"distance\"],\n                 \"metric\":[\"euclidean\",\"manhattan\"]}\n\nknn = KNeighborsClassifier()\nclf = GridSearchCV(knn, param_grid=knn_param_grid, cv = StratifiedKFold(n_splits = 10), scoring = \"accuracy\", n_jobs = -1,verbose = 1)\nclf.fit(X_train,y_train)\ny_pred_knn = clf.predict(X_test)\ncm_random_knn = confusion_matrix(y_pred_knn, y_test)\nacc_random_knn = accuracy_score(y_test, y_pred_knn)\nresult.append(acc_random_knn)\nprint(\"RESULT\")\nprint(\"KNN Model Acc : \",acc_random_knn)","44ca0299":"svm = SVC()\nsvm.fit(X_train, y_train)\ny_pred_svm = svm.predict(X_test)\ncm_svm = confusion_matrix(y_pred_svm, y_test)\nacc_svm = accuracy_score(y_test, y_pred_svm)\nresult.append(acc_svm)\nprint(\"RESULT\")\nprint(\"SVM Model Acc : \",acc_svm)","5d051d95":"results = pd.DataFrame({\"Model Result\":result, \n                        \"Models\":[\"XGBoost\",\n                                  \"RandomForest\",\n                                  \"CatBoost Model \",\n                                  \"KNN\", \n                                  \"SVM\"]})","10e6366c":"results","cb8bbafe":"g = sns.barplot(\"Model Result\", \"Models\", data = results)\ng.set_xlabel(\"Accuracy\")\ng.set_title(\"Models Result\", color = \"darkred\")\nplt.show()","7594509c":"<a id = \"10\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; <strong>1.<\/strong> XGBoost model &#34; <\/h3>","ce2e9b89":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:bold\"> yes, we have come to the end of this study. I am waiting for your nice wishes and advice. <\/p>  <\/li>\n<\/ul>","26aa05c6":"<a id = \"2\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcdd Variable Description &#34; <\/h2>\n","8c7f5064":"<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcd6 Import Library &#34;<\/h2>","5ce5128a":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> Let's take a look at this. our missing data and their percentages. <\/p>  <\/li>\n<\/ul>","a9b18c76":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We see that there are more people with relevant experience. <\/p>  <\/li>\n<\/ul>","45407c3f":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We are looking at the interrelationships of the properties. We can take advantage of these when filling in null values. <\/p>  <\/li>\n<\/ul>","884b37bd":"<a id = \"7\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcbb Feature Engineering &#34; <\/h2>","2c3eb040":"<a id = \"12\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; <strong>3.<\/strong> CatBoost Model &#34; <\/h3>","c3c970ec":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> Here we will examine and interpret all our features one by one. <\/p>  <\/li>\n<\/ul>","65abcbcb":"<ol>    \n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> enrollee_id : <\/strong> Unique ID for enrollee <\/p> <\/li>  \n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> city : <\/strong> City code <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> city_development_index : <\/strong> Developement index of the city (scaled) <\/p> <\/li>  \n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> gender : <\/strong> Registered person gender (M\/F) <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> relevent_experience : <\/strong> Relevent experience <\/p> <\/li>  \n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> enrolled_university  : <\/strong> Type of university of the enrolee <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> education_level : <\/strong> edu level <\/p> <\/li>  \n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> major_discipline : <\/strong> edu discipline of enrollee <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> experience : <\/strong>Total experience in years <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> company_size : <\/strong> No of employees in current employer's company <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> company_type : <\/strong> Type of current employer <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> last_new_job : <\/strong> Difference in years between previous job and current job <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> training_hours : <\/strong> training hours completed <\/p> <\/li>\n    <li style = \"color:#004D40;font-weight:bold\" > <p style = \"color:black;font-weight:400\" > <strong> target : <\/strong> 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change <\/p> <\/li>\n<\/ol>","2db8f1be":"<a id = \"4\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udd75\ufe0f\u200d Missing Value &#34; <\/h2>\n\n<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We will detect our null values \u200b\u200band try to eliminate them. <\/p>  <\/li>\n<\/ul>","35baf203":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> we see that there is a tail to the right from here. we need to fix this. we do it here. <\/p>  <\/li>\n<\/ul>","a636b5cd":"![Hr.png](attachment:41794ad4-7556-4957-9917-f347eb9930e0.png)\n\n<center><h1 style = \"text-shadow: 8px 8px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\" >\ud83d\udcdc Introduction<\/h1><\/center>\n<p style = \"color:black;font-weight:500;text-indent:20px;font-size:16px\">This dataset designed to understand the factors that lead a person to leave current job for HR researches too. By model(s) that uses the current credentials,demographics,experience data you will predict the probability of a candidate to look for a new job or will work for the company, as well as interpreting affected factors on employee decision.<\/p>\n\n<p style = \"color:black;font-weight:500;text-indent:20px;font-size:16px\">What we will do, We will examine our data, we will look at individual features, we will visualize them.We will look at the effects of the features on the target.The data is very complex and there are a lot of null data we will try to eliminate them.Finally, we will create our models. <\/p>\n    \n\n<h2 style = \"text-shadow: 8px 8px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\">\ud83d\udccb Content :<\/h2>\n\n<ul>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#1\" style = \"color:black;font-weight:bold\"> Load and Check Data <\/a> <\/li>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#2\" style = \"color:black;font-weight:bold\"> Variable Description <\/a> <\/li>   \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#3\" style = \"color:black;font-weight:bold\"> Basic Data Analysis <\/a> <\/li>           \n        <li style = \"color:darkgray;font-size:15px\"> <a href = \"#4\" style = \"color:black;font-weight:bold\"> Missing Value <\/a> <ul> <li style = \"color:lightgray\"><a href = \"#5\" style = \"color:black;font-weight:500\"> Find Missing Value  <\/a> <\/li> <li style = \"color:lightgray\"><a href = \"#6\" style = \"color:black;font-weight:500\"> Fill Missing Value  <\/a> <\/li> <\/ul>\n                <li style = \"color:darkgray;font-size:15px\"> <a href = \"#7\" style = \"color:black;font-weight:bold\"> Feature Engineering <\/a> <\/li>        \n       <li style = \"color:darkgray;font-size:15px\"> <a href = \"#8\" style = \"color:black;font-weight:bold\"> Modeling   <\/a> <ul> <li style = \"color:lightgray\"><a href = \"#9\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> Train - Test Split  <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#10\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> <strong>1.<\/strong> XGBoost Model <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#11\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> <strong>2.<\/strong> RandomForest Model <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#12\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> <strong>3.<\/strong> CatBoost Model <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#13\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> <strong>4.<\/strong> KNN Model <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#14\" style = \"background:white;color:#1E90FF;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> <strong>5.<\/strong> SVM Model <\/a><\/li> <\/ul>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#15\" style = \"color:black;font-weight:bold\"> Model Result <\/a> <\/ul> ","92b1d712":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> When we take a look at our table again, we see that our null data is decreasing. <\/p>  <\/li>\n<\/ul>","bfeed7e2":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We do it categorical using the city feature and the labelencoder. <\/p>  <\/li>\n<\/ul>","d4d1a455":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> the difference with her old job is usually 1 year. <\/p>  <\/li>\n<\/ul>","843a189a":"<ul>\n    <li style = \"color:red\" > <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\">Even when we look at the first 5 rows of your data, we see that there is a lot of missing data.<\/p> <\/li>\n<\/ul>","8c119145":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> By looking at the graphs above, we can see where our null data is. <\/p>  <\/li>\n<\/ul>","0859aefe":"<a id = \"3\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udd0d Basic Data Analysis &#34; <\/h2>","3e6b4ad3":"<a id = \"11\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; <strong>2.<\/strong> Random Forest Model &#34; <\/h3>","b0e59509":"<a id = \"14\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; <strong>5.<\/strong> SVM Model &#34; <\/h3>","ccc45208":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We see the distribution of the education level feature within the data. It consists mostly of graduates. <\/p>  <\/li>\n<\/ul>","b50b4615":"<a id = \"1\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \u2714\ufe0f Load and Check Data &#34; <\/h2> ","df46dc02":"<a id = \"9\"><\/a>\n<h4 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcca Train - Test Split &#34; <\/h4>","1296f117":"<a id = \"15\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcc8 Model Result &#34; <\/h3>","c3c05da7":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We see that the number of STEMs is quite high compared to others. When creating our model, it may override others. <\/p>  <\/li>\n<\/ul>","cfeea227":"<a id = \"6\"><\/a>\n<h4 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; Fill Missing Value &#34; <\/h4>","b46087ab":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> Here again, we make an arrangement, we make it simpler. <\/p>  <\/li>\n<\/ul>","a10c0aa5":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> After removing our main discipline nulls, we see that there are 3 nulls left.We take them out of our data. <\/p>  <\/li>\n<\/ul>","5ef6806a":"<a id = \"13\"><\/a>\n<h3 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; <strong>4.<\/strong> KNN Model &#34; <\/h3>","84fc3fb5":"<a id = \"5\"><\/a>\n<h4 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34;  Find Missing Value &#34; <\/h4>","be819fea":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> here we see that the number of men is higher than the others. <\/p>  <\/li>\n        <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> Also, we see that there are too many nulls. We will try to fix this in the future. <\/p>  <\/li>\n<\/ul>","bc674e08":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> Here, too, we see that we have a lot of null data, but in general the distribution is not very different. <\/p>  <\/li>\n<\/ul>","3a7b5cdf":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> columns that we have examined and visualized above. We will make it more understandable for our model. <\/p>  <\/li>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We will look at its effects on the target and make groupings accordingly. <\/p>  <\/li>\n<\/ul>","4d99d4c0":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We can delete data that is too little in your blank data to be ignored. <\/p>  <\/li>\n<\/ul>","2780be46":"<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> We see that there are many nulls in our properties.If we do not fix them, it will affect our model badly. <\/p>  <\/li>\n<\/ul>","f1a67abe":"<a id = \"8\"><\/a>\n<h2 style = \"text-shadow: 6px 6px 4px #333;font-family:Comic Sans MS;color:black;text-decoration: underline;font-weight:bold\"> &#34; \ud83d\udcc1 Modeling &#34; <\/h2>\n\n<ul>\n    <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"><strong>1.<\/strong> XGBoost Model <\/p>  <\/li>\n        <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> <strong>2.<\/strong> RandomForest Model <\/p>  <\/li>\n        <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> <strong>3.<\/strong> CatBoost Model <\/p>  <\/li>\n        <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> <strong>4.<\/strong>KNN Model <\/p>  <\/li>\n        <li style = \"color:red\"> <p style = \"font-family:Comic Sans MS;color:black;font-weight:500\"> <strong>5.<\/strong>SVM Model <\/p>  <\/li>\n<\/ul>"}}