{"cell_type":{"c33619b8":"code","e965b209":"code","53a65527":"code","13116fd1":"code","8b249249":"code","1f9f57ab":"code","6ee7f386":"code","cd4743d3":"code","6c30e3e4":"code","d556826e":"code","bc6f9204":"code","254fed01":"code","bb7ee666":"code","af2d1071":"code","4b05151f":"code","461b565c":"code","0b9fac8a":"code","2bbedfa1":"code","1a05d96c":"code","adaa708f":"code","57f99a28":"code","d5ca7c0d":"code","25601949":"code","7e13c6f1":"code","79e16c39":"code","1460f5b2":"code","054b7a49":"markdown","702910ed":"markdown","2deb4283":"markdown","dbf282b1":"markdown","19b2a4de":"markdown","5c3d8612":"markdown","ee6e386a":"markdown","35f4ca62":"markdown","e8c94e1d":"markdown"},"source":{"c33619b8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e965b209":"train = pd.read_csv('..\/input\/mti-bootcamp-day-3\/train_dataset.csv')\ntest = pd.read_csv('..\/input\/mti-bootcamp-day-3\/test_dataset.csv')\nsample = pd.DataFrame(columns = ['Id', 'SalePrice'])\nsample['Id'] = test['Id']","53a65527":"train.head()","13116fd1":"train.describe()","8b249249":"train.columns","1f9f57ab":"train.dtypes","6ee7f386":"train.isnull().sum().sort_values(ascending = False).head(10)","cd4743d3":"plt.figure(figsize= [15,15])\nsns.heatmap(train.corr().abs(), annot = True, square = True)","6c30e3e4":"train.corr()['SalePrice'].abs().sort_values(ascending = False)","d556826e":"sns.distplot(train['SalePrice'])","bc6f9204":"df_all = pd.concat([train, test], axis = 0)","254fed01":"categorical_col = ['Alley', 'BsmtQual', 'CentralAir', 'Condition1', 'Condition2', 'FireplaceQu', 'GarageQual', 'HouseStyle', 'LotShape', 'MSZoning', 'MiscFeature', \n                   'PoolQC', 'Street', 'Utilities']\n\nfor col in categorical_col:\n  df_all[col] = df_all[col].fillna('Tidak Ada')","bb7ee666":"# Missing Values imputation\nnumerical_col = ['BsmtFullBath', 'BsmtHalfBath', 'LotFrontage', 'TotalBsmtSF']\nfor col in numerical_col:\n  df_all[col] = df_all[col].fillna(df_all[col].median())  ","af2d1071":"df_all.shape","4b05151f":"df_all = pd.get_dummies(df_all, columns = categorical_col, drop_first = False)\ndf_all.shape","461b565c":"df_all['Total_Bath'] = df_all['FullBath'] + (0.5*df_all['HalfBath']) + df_all['BsmtFullBath'] + (0.5*df_all['BsmtHalfBath'])\ndf_all = df_all.drop(['FullBath', 'HalfBath', 'BsmtFullBath', 'BsmtHalfBath'], axis = 1)","0b9fac8a":"df_all.head()","2bbedfa1":"df_all = df_all.drop(['Id', 'MiscVal'], axis = 1)","1a05d96c":"from sklearn.preprocessing import StandardScaler\n\ntrain_preprocessed = df_all[:train.shape[0]]\ntest_preprocessed = df_all[train.shape[0]:]\n\nX = train_preprocessed.drop(['SalePrice'], axis = 1)\ny = train['SalePrice']\nX_subm = test_preprocessed.drop(['SalePrice'], axis = 1)\n\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\nX_subm = scaler.transform(X_subm)","adaa708f":"# Split Train - Validation Set\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X,y, test_size = 0.1, shuffle = True, random_state = 101)","57f99a28":"# Model Training\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_log_error\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nprint('MSLE train : ', mean_squared_log_error(y_train, abs(model.predict(X_train))))","d5ca7c0d":"# Validation\ny_val_pred = model.predict(X_val)\n\nprint('MSLE : ', mean_squared_log_error(y_val, y_val_pred))","25601949":"print('Intercept :' , model.intercept_)\nprint('Coef : ', model.coef_)","7e13c6f1":"y_subm = model.predict(X_subm)","79e16c39":"sample['SalePrice'] = y_subm","1460f5b2":"sample.to_csv('submission.csv', index = False)","054b7a49":"# Scaling","702910ed":"#Feature Selection","2deb4283":"# EDA","dbf282b1":"## One-hot Encoding","19b2a4de":"# Feature Engineering","5c3d8612":"# Modelling","ee6e386a":"## Missing Values","35f4ca62":"# Data Preprocessing","e8c94e1d":"# Submission"}}