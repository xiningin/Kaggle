{"cell_type":{"425ed11e":"code","985e9bdd":"code","2ba1cf8e":"code","eeabacfe":"code","1f6b132d":"code","f616c066":"code","e31ecce2":"code","7421347e":"markdown","29878f91":"markdown","66968535":"markdown","b9c247ec":"markdown","69def4f3":"markdown","fdf4d351":"markdown","ed758d7f":"markdown"},"source":{"425ed11e":"import numpy as np \nimport pandas as pd\n\nhist = pd.read_csv('..\/input\/historical_transactions.csv')","985e9bdd":"hist = hist[['card_id','purchase_date','purchase_amount']]\nhist = hist.sort_values(by=['card_id', 'purchase_date'], ascending=[True, True])","2ba1cf8e":"hist.head()","eeabacfe":"## Time\nfrom datetime import datetime\n\nz = hist.groupby('card_id')['purchase_date'].max().reset_index()\nq = hist.groupby('card_id')['purchase_date'].min().reset_index()\n\nz.columns = ['card_id', 'Max']\nq.columns = ['card_id', 'Min']\n\n## Extracting current timestamp\nnow = datetime.now()\ncurr_date = now.strftime(\"%m-%d-%Y, %H:%M:%S\")\ncurr_date = pd.to_datetime(curr_date)\n\nrec = pd.merge(z,q,how = 'left',on = 'card_id')\nrec['Min'] = pd.to_datetime(rec['Min'])\nrec['Max'] = pd.to_datetime(rec['Max'])\n\n## Time value \nrec['Recency'] = (curr_date - rec['Max']).astype('timedelta64[D]') ## current date - most recent date\n\n## Recency value\nrec['Time'] = (rec['Max'] - rec['Min']).astype('timedelta64[D]') ## Age of customer, MAX - MIN\n\nrec = rec[['card_id','Time','Recency']]\nrec.head()","1f6b132d":"## Frequency\nfreq = hist.groupby('card_id').size().reset_index()\nfreq.columns = ['card_id', 'Frequency']\nfreq.head()","f616c066":"## Monitary\nmon = hist.groupby('card_id')['purchase_amount'].sum().reset_index()\nmon.columns = ['card_id', 'Monitary']\nmon.head()","e31ecce2":"final = pd.merge(freq,mon,how = 'left', on = 'card_id')\nfinal = pd.merge(final,rec,how = 'left', on = 'card_id')\n\nfinal['historic_CLV'] = final['Frequency'] * final['Monitary'] \nfinal['AOV'] = final['Monitary']\/final['Frequency'] ## AOV - Average order value (i.e) total_purchase_amt\/total_trans\nfinal['Predictive_CLV'] = final['Time']*final['AOV']*final['Monitary']*final['Recency'] \n\nfinal.head()","7421347e":"Customers keep coming and going, but they do so silently. \n\n1. Is there a specific metric that weights the relationship between the customers and the business? \n2. What are the individual components that play a vital role in calculating this metric?\n3. Using the individual components, how do we calculate the metric? \n\nOne such metric is CLV (Customer Life Time Value). The objective of this kernal is to understand how CLV is calculated. ","29878f91":"Why are we subsetting just three columns in historical transactions dataset? For the CLV models, the following components are used:\n\n* Recency - This represents the age of the customer when they made their latest transactions. (Current_date - last_transaction_date)\n* Frequency - This represents the total number of transactions\/number of visits a customer has made. (Count of total transactions)\n* Monitary - This represents the total purchase amount that a specified customer has made. (Sum of purchase_amt)\n* Time - This represents the age of the customer. Time span between a customer\u2019s first and last transaction.","66968535":"### Hope these features boost your model performance. HAPPY KAGGLING! ","b9c247ec":"### Objective","69def4f3":"### What\u2019s a Customer Worth?","fdf4d351":"![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*46_4Ps1cl9Ansa2f0BpaeQ.png)","ed758d7f":"### (R)ecency (F)requency (M)onitary Value"}}