{"cell_type":{"a060a6c8":"code","b0937c68":"code","b6778939":"code","e3ab9d0c":"code","d9a35124":"code","4fb315b8":"code","28dc1b90":"code","0c3c8d10":"markdown","a8177743":"markdown","7d8bcd08":"markdown","036df44f":"markdown","e730df60":"markdown"},"source":{"a060a6c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b0937c68":"!pip install EvolutionaryFS==0.0.5","b6778939":"from EvolutionaryFS import GeneticAlgorithmFS","e3ab9d0c":"from sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nfrom sklearn.datasets import load_diabetes","d9a35124":"##get feature and target\nX,y = load_diabetes(return_X_y=True, as_frame=True)\n##get train and test data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=1)\n\ndata_dict={0:{'x_train':X_train,'y_train':y_train,'x_test':X_test,'y_test':y_test}}\ncolumns_list=list(X.columns)\n\nmodel_object=LinearRegression(n_jobs=-1)\nevoObj=GeneticAlgorithmFS(model=model_object,data_dict=data_dict,cost_function=mean_squared_error,average='',cost_function_improvement='decrease',columns_list=columns_list,generations=100,population=50,prob_crossover=0.9,prob_mutation=0.1,run_time=60000)\nbest_columns=evoObj.GetBestFeatures()    \nprint(best_columns)","4fb315b8":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import f1_score\nfrom sklearn.datasets import load_wine\nfrom sklearn.model_selection import train_test_split","28dc1b90":"X,y = load_wine(return_X_y=True, as_frame=True)\n##get train and test data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=1)\n\ndata_dict={0:{'x_train':X_train,'y_train':y_train,'x_test':X_test,'y_test':y_test}}\ncolumns_list=list(X.columns)\n\nmodel_object=LogisticRegression(n_jobs=-1,random_state=1)\nevoObj=GeneticAlgorithmFS(model=model_object,data_dict=data_dict,cost_function=f1_score,average='micro',cost_function_improvement='increase',columns_list=columns_list,generations=20,population=30,prob_crossover=0.9,prob_mutation=0.1,run_time=60000)\nbest_columns=evoObj.GetBestFeatures()\nprint(best_columns)","0c3c8d10":"## Import ","a8177743":"# Feature selection for machine learning models using genetic algorithm with the help of EvolutionaryFS python library","7d8bcd08":"## Classification","036df44f":"## Regression","e730df60":"## Installation"}}