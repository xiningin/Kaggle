{"cell_type":{"b0629d7c":"code","1e46be69":"code","e8389e35":"code","a13f9470":"code","6b2e6da9":"code","458fd9df":"code","646138dd":"code","316f0bb8":"code","813cb7ce":"code","8edad70c":"code","e0d6299f":"code","eb2eaf85":"code","e0d89da1":"code","6c6bcc58":"code","ff56206e":"markdown","6b402845":"markdown","15e3ccb1":"markdown","9c23cf6d":"markdown","f38acbd6":"markdown","58e4255b":"markdown","ca526430":"markdown"},"source":{"b0629d7c":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.metrics import classification_report","1e46be69":"data = pd.read_csv('..\/input\/bus1234.csv\/bus1234.csv')","e8389e35":"data","a13f9470":"data.info()","6b2e6da9":"plt.figure(figsize=(16, 10))\nsns.violinplot(x=data['group'], y=data['miles'], hue=data['replace'], palette='husl')\nplt.title(\"Miles Per Group\")\nplt.show()","458fd9df":"plt.figure(figsize=(16, 10))\nsns.lineplot(data=data.groupby(by='year').sum()['replace'])\nplt.title(\"Replacements Made Over Time\")\nplt.show()","646138dd":"plt.figure(figsize=(16, 10))\nsns.barplot(x=data['month'], y=data.groupby(by='month').sum()['replace'])\nplt.xticks(\n    ticks=np.arange(12),\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n)\nplt.title(\"Replacement By Month\")\nplt.show()","316f0bb8":"def onehot_encode(df, column):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column], prefix=column)\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","813cb7ce":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    # Drop the index columns\n    df = df.drop(['Unnamed: 0'], axis=1)\n    \n    # One-hot encoding\n    for column in ['id', 'group']:\n        df = onehot_encode(df, column)\n    \n    # Split df into X and y\n    y = df['replace']\n    X = df.drop('replace', axis=1)\n    \n    # Train-test split\n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, shuffle=True, random_state=1)\n    \n    \n    \n    return X_train, X_test, y_train, y_test","8edad70c":"X_train, X_test, y_train, y_test = preprocess_inputs(data)","e0d6299f":"X_train","eb2eaf85":"y_train.value_counts()","e0d89da1":"model = LogisticRegression(\n    class_weight={\n        0: 1.0,\n        1: 10.0\n    }\n)\nmodel.fit(X_train, y_train)","6c6bcc58":"print(\"Test Accuracy: {:.2f}%\".format(model.score(X_test, y_test) * 100))\n\ny_pred = model.predict(X_test)\nprint(classification_report(y_test, y_pred, target_names=['No Replacement', 'Replacement']))","ff56206e":"# Training","6b402845":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/hXHhXqzem8E","15e3ccb1":"# Getting Started","9c23cf6d":"# Task for Today  \n\n***\n\n## Engine Replacement Prediction  \n  \nGiven *data about buses*, let's try to predict which engines will be **replaced**.  \n  \nWe will use a logistic regression model to make our predictions.","f38acbd6":"# Preprocessing","58e4255b":"# Results","ca526430":"# Exploratory Data Analysis"}}