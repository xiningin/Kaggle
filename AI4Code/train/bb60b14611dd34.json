{"cell_type":{"7fa17aed":"code","99a2c498":"code","2931b383":"code","5a13c490":"code","5eb27e76":"code","7b4bb209":"code","476b9884":"code","1f45c34f":"code","b75b2ad4":"code","d96b746f":"code","c5c85b14":"code","5824bde3":"code","50fa8cd6":"code","ab9bf1f5":"code","40712931":"code","0a2e007e":"code","550d69b7":"code","dabd17f6":"code","5e303c28":"code","12de909d":"markdown","272e19f7":"markdown","92401517":"markdown","b467f386":"markdown","f74f05c8":"markdown","ef3b1205":"markdown","af73004b":"markdown"},"source":{"7fa17aed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","99a2c498":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Activation,Flatten,Conv2D,MaxPooling2D,Dropout,GlobalAveragePooling2D,BatchNormalization\nfrom tensorflow.keras.applications import InceptionV3\nfrom tensorflow.keras.optimizers import Adam,SGD","2931b383":"train_data='..\/input\/covidistesgp\/CovidDataset\/train'\ntest_data='..\/input\/covidistesgp\/CovidDataset\/validation'","5a13c490":"data = tf.keras.preprocessing.image_dataset_from_directory(directory = train_data)\nclasses = data.class_names\nprint(classes)","5eb27e76":"plt.figure(figsize = (12,12))\nfor image, label in data.take(1):\n    for i in range(10):\n        ax = plt.subplot(5, 5, i+1)\n        plt.imshow(image[i].numpy().astype(\"uint8\"))\n        plt.title(classes[label[i]])\n        plt.axis(\"off\")","7b4bb209":"augmentation=ImageDataGenerator(featurewise_center=False,\n    samplewise_center=False,\n    featurewise_std_normalization=False,\n    samplewise_std_normalization=False,\n    zca_whitening=False,\n    zca_epsilon=1e-06,\n    rotation_range=10,\n    width_shift_range=0.5,\n    height_shift_range=0.5,\n    brightness_range=None,\n    shear_range=2.0,\n    zoom_range=0.1,\n    channel_shift_range=10.0,\n    fill_mode=\"nearest\",\n    cval=0.0,\n    horizontal_flip=True,\n    vertical_flip=False,\n    rescale=1\/255,\n    preprocessing_function=None,\n    data_format='channels_last',\n    validation_split=0.3,\n    dtype=None,)","476b9884":"train_IDG=augmentation.flow_from_directory(train_data,\n                       target_size=(299, 299),\n    color_mode=\"rgb\",\n    \n    class_mode=\"binary\",\n    batch_size=32,\n    shuffle=True,\n    seed=None,\n    save_to_dir=None,\n    save_prefix=\"\",\n    save_format=\"png\",\n    follow_links=False,\n    subset='training',\n    interpolation=\"nearest\",)\nvalidation_IDG=augmentation.flow_from_directory(train_data,\n                       target_size=(299, 299),\n    color_mode=\"rgb\",\n    \n    class_mode=\"binary\",\n    batch_size=8,\n    shuffle=True,\n    seed=None,\n    save_to_dir=None,\n    save_prefix=\"\",\n    save_format=\"png\",\n    follow_links=False,\n    subset='validation',\n    interpolation=\"nearest\"\n                                                \n    )\ntest_IDG=augmentation.flow_from_directory(test_data,\n                       target_size=(299, 299),\n    color_mode=\"rgb\",\n    \n    class_mode=\"binary\",\n    \n    shuffle=True,\n    seed=None,\n    save_to_dir=None,\n    save_prefix=\"\",\n    save_format=\"png\",\n    follow_links=False,\n    \n    interpolation=\"nearest\",)","1f45c34f":"base_model=InceptionV3(weights='imagenet',\n    include_top=False,\n    input_shape=(299,299, 3))","b75b2ad4":"model = Sequential()\nmodel.add(base_model)\nmodel.add(GlobalAveragePooling2D())\nmodel.add(Dropout(0.3))\nmodel.add(Dense(120, activation='tanh'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.summary()","d96b746f":"# looking at the layers in the model\nfor i, layer in enumerate(model.layers):\n    print(i, layer.name, layer.trainable)","c5c85b14":"# freezing inception V3 params\nbase_model.trainable=False","5824bde3":"optimizer=Adam(lr=0.01)\nloss='binary_crossentropy'\nmodel.compile(optimizer=optimizer,loss=loss,metrics=tf.keras.metrics.AUC())\nmodel.summary()","50fa8cd6":"hist = model.fit(train_IDG,\n                epochs = 5,\n                validation_data = validation_IDG) ","ab9bf1f5":"plt.figure()\nplt.plot(hist.history['auc_3'])\nplt.plot(hist.history['val_auc_3'])\nplt.title(\"Model Accuracy\")\nplt.xlabel(\"Epoch\")\nplt.ylabel('Accuracy')\nplt.legend(['train','validation'],loc='upper left')\nplt.show()","40712931":"for layer in model.layers[-13:]:\n    if not isinstance(layer, BatchNormalization):\n        layer.trainable = True","0a2e007e":"optimizer = Adam(lr = 0.0001)\nloss = 'binary_crossentropy'\nmodel.compile(optimizer= optimizer, \n             loss = loss, \n             metrics = tf.keras.metrics.AUC())\nmodel.summary()","550d69b7":"hist = model.fit(train_IDG,\n                epochs = 5,\n                validation_data =validation_IDG)","dabd17f6":"score = model.evaluate(train_IDG)\nprint('Train Loss: ', score[0])\nprint('Train Accuracy: ', score[1])","5e303c28":"score = model.evaluate(test_IDG)\nprint('Test Loss: ', score[0])\nprint('Test Accuracy: ', score[1])","12de909d":"# TRANSFER LEARNING","272e19f7":"# IMPORTING NECESSARY LIBARARIES","92401517":"# SCORE","b467f386":"# LOADING DATA","f74f05c8":"UNFREEZING THE BASE LAYER","ef3b1205":"# IMAGE DATA GENERATOR","af73004b":"# PLOTTING THE ACCURACY VS EPOCH GRAPH"}}