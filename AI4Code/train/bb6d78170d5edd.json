{"cell_type":{"2a77a48b":"code","7387f440":"code","09841db6":"code","a409224b":"code","9c24bbb8":"code","b3ba6917":"code","1e59530a":"code","1102a57f":"code","8f058815":"code","ded2ef0d":"markdown"},"source":{"2a77a48b":"import numpy as np\nimport pandas as pd\n\nfrom scipy import stats\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')","7387f440":"p1 = pd.read_csv(\"..\/input\/tps-12-nn-tpu-pseudolabeling-0-95690\/tps12-pseudeo-submission.csv\")\np2 = pd.read_csv(\"..\/input\/tps-12-nn-tpu-pseudolabeling-0-95690\/tps12-pseudeo-submission.csv\")\np3 = pd.read_csv(\"..\/input\/tpsdec21-12-eliminate-cover-type-4\/submission_without4.csv\")\np4 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\np5 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\np6 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\np7 = pd.read_csv(\"..\/input\/tps-12-super-fast-blending-tool\/tps12-fast-blend.csv\")\np8 = pd.read_csv(\"..\/input\/tpsdec21-12-eliminate-cover-type-4\/submission_without4.csv\")\np9 = pd.read_csv(\"..\/input\/tpsdec21-12-eliminate-cover-type-4\/submission_without4.csv\")\np10 = pd.read_csv(\"..\/input\/tpsdec21-12-eliminate-cover-type-4\/submission_without4.csv\")\n\nsubmission = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')\n\npredictions = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]","09841db6":"results = pd.DataFrame()\nfor i, ds in enumerate(predictions):\n    results[f'p{i+1}'] = ds['Cover_Type']\n\nprint(results.shape)\nresults.head()","a409224b":"%%time\nresults[\"ensemble\"] = stats.mode(np.array(results), axis=1)[0]\nresults.head()","9c24bbb8":"def nunique(a, axis):\n    return (np.diff(np.sort(a,axis=axis),axis=axis)!=0).sum(axis=axis)+1","b3ba6917":"results[\"dif\"] = nunique(results.iloc[:,:len(predictions)].values,1) - 1\nresults.head()","1e59530a":"results.dif.value_counts()","1102a57f":"submission['Cover_Type'] = results[\"ensemble\"]\nsubmission.to_csv(\"submission.csv\", index=False)\nsubmission.head()","8f058815":"plt.figure(figsize=(10,5))\nax = sns.countplot(x=submission.Cover_Type)\nplt.title(\"Predictions\")\nplt.xlabel(\"Cover Type\")\nax.bar_label(ax.containers[0])\nplt.show()","ded2ef0d":"I am not interested in ensemble notebooks; since all efforts are for others who publish their great notebooks with a good score, you get a simple average without much effort. However, in this competition, I saw there were no ensemble notebooks and there were some discussion that is ensemble can get a better results here or not, since this competition is a little bit different from previous ones. So I was just curious to test a simple ensemble. \n\nOf course the credit of these good scores is for original notebook publishers:\n- @kaaveland for [TPS202112 - Reasonable XGBoost model](https:\/\/www.kaggle.com\/kaaveland\/tps202112-reasonable-xgboost-model)\n- @remekkinas for [TPS-12 NN (TPU) + Pseudolabeling [0.95690]](https:\/\/www.kaggle.com\/remekkinas\/tps-12-nn-tpu-pseudolabeling-0-95690) and [TPS-12 - super fast blending tool](https:\/\/www.kaggle.com\/remekkinas\/tps-12-super-fast-blending-tool\/comments)\n- @ambrosm for [TPSDEC21-12 Eliminate cover type 4!](https:\/\/www.kaggle.com\/ambrosm\/tpsdec21-12-eliminate-cover-type-4)"}}