{"cell_type":{"309cc289":"code","b09d3596":"code","962b399f":"markdown","6ce8d490":"markdown"},"source":{"309cc289":"class deQueue  : \n    def __init__(self):\n        self.items = []  \n        \n    def isEmpty(self):\n        return self.items == []  \n    \n    def addrear(self, item):\n        self.items.insert(0,item)  \n    \n    def removefront(self):\n        return self.items.pop()  \n        #membuang objek dari depan\n    def addfront(self, item):\n        self.items.append(item)\n    def removerear(self):\n        return self.items.pop(0)  \n        #membuang objek dari belakang\n    def size(self):\n        return len(self.items)\n    def semua(self):\n        return self.items\n    \nd=deQueue()\nd.addfront('Azwar')\nd.addfront('Dafa')\nd.addfront('tara')\nd.addfront('Riko')\nd.addfront('supris')\nprint(d.semua())\nprint(\"banyak data :\",d.size())\nprint(d.removefront(),\"dibuang\")\nprint(\"sisa :\",d.semua())\nprint(d.removerear(),\"dibuang\")\nprint(\"sisa :\",d.semua())\nprint('\\n')","b09d3596":"class Deque :   \n    def __init__(self):\n        self.items = []  \n    def isEmpty(self):\n        return self.items == []  \n    def addFront(self, item):\n        self.items.append(item)  \n    def addRear(self, item):\n        self.items.insert(0,item)  \n    def removeFront(self):\n        return self.items.pop()  \n    def removeRear(self):\n        return self.items.pop(0)  \n    def size(self):\n        return len(self.items)\n    def cetak(self) :\n        for i in range (len(self.items)) :\n            print(self.items[i])\n \ndef pengecekpalindrom(teks):\n    d = Deque()  \n    for i in range (len(teks)):\n        if teks[i] != ' ' :\n            d.addRear(teks[i])\n  \n    samaatautidak = True\n    while d.size() > 1 and samaatautidak:\n        kepala = d.removeFront()\n        ekor = d.removeRear()\n        if kepala != ekor:\n            samaatautidak = False\n    return samaatautidak\nteks = input(\"silahkan masukan teks : \")\nif pengecekpalindrom('ma lam') :\n    print(\"kata '\",teks,\"' merupakan kata palindrom.\")\nelse :\n    print(\"kata '\",teks,\"' bukan kata palindrom.\")","962b399f":"Listing kedua ini ialah untuk menciptakan sebuah program yang bertujuan untuk mengecek apakah sebuah kata itu termasuk Palindrome atau tidak.\nAdapun yang pertama kali dilakukan ialah memanggil Deque dari modul pythonds.basic.deque lalu diikuti dengan pemanggilan fungsi python dengan nama fungsi \"palchecker\" dan parameternya ialah \"aString\", dan setelahnya dilakukan penciptaan deque dengan variabel \"chardeque\" selanjutnya, dilakukan penambahan elemen ch pada ekor Deque chardeque dilakukan pengecekan, apabila ia masih sama (Palindrome) maka cetak \"True\".\n\nKemudian deque memiliki elemen lebih dari 1, dan masih sama (Palindrome) maka pertama dilakukan penghapusan elemen di depan Deque chardeque dan kemudian dilakukan penghapusan elemen di ekor Deque chardeque  elemen pertama sama dengan elemen terakhir (keduanya juga Palindrome) maka cetaklah False, kemudian dilakukan pencetakan fungsi palchecker dari \"lsdkjfskf\" dan kemudian dilakukan pula pencetakan  palchecker dari \"radar\"","6ce8d490":"dari setiap sintax coding tersebut\n-def init (self): self.items = []\ndigunakan untuk menguji  suatu object sudah terisi baik penuh ataupun kosong\n-def isEmpty(self): return self.items == []\n untuk menambahkan suatu item baru dari deque\n-def addFront(self, item): self.items.append(item)\nUntuk menambahkan suatu item baru ataupun atribut yang terletak pada bagian ekor\n-def addRear(self, item): self.items.insert(0,item)\ndigunakan untuk menghapus bagian item yang terletang pada bagian depan deque\n-def removeFront(self): return self.items.pop()\ndigunakan untuk menghapus item pada bagian ujung object\n-def removeRear(self): return self.items.pop(0)\ndigunakan untuk mengembalikan jumlah item yang telah dihapus \n-def size(self):\ndigunakan untuk mengembalikan nilai"}}