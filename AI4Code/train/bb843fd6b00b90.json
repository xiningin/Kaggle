{"cell_type":{"b0d31e3e":"code","085c0a01":"code","ebfacdb9":"code","3a74cf7e":"code","0fb80a33":"code","8a001873":"code","a6f8f427":"code","a263dfc0":"code","c3491d29":"code","e3e1b254":"code","847ed72e":"code","19b25430":"code","2c7c125f":"code","d1cf5824":"code","92627f6a":"code","16c483a8":"code","480474bd":"code","039eef54":"code","5a7ee1bd":"code","5274b0d2":"markdown","55614606":"markdown","f57ec6eb":"markdown","ccf64cf0":"markdown","a2ec4a52":"markdown","1d9a265d":"markdown","ae8320ec":"markdown","f7cda15e":"markdown","fd9751e2":"markdown","dfa3df7d":"markdown","739853cf":"markdown","6bb499fa":"markdown","4ec57018":"markdown","8b60153b":"markdown","775cbb0a":"markdown"},"source":{"b0d31e3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","085c0a01":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go","ebfacdb9":"df = pd.read_csv('\/kaggle\/input\/2019-coronavirus-dataset-01212020-01262020\/2019_nCoV_20200121_20200206.csv',\n                header = 0,\n                names = ['province', 'country','last_update','confirmed','suspected','recovered','death'])","3a74cf7e":"df['last_update'] = pd.to_datetime(df['last_update']).dt.date","0fb80a33":"df.info()","8a001873":"df['country'].replace({'Hong Kong':'Mainland China',\n                      'Taiwan':'Mainland China',\n                      'Macau':'Mainland China'},inplace = True)","a6f8f427":"china = df[df['country'] == 'Mainland China']","a263dfc0":"from datetime import date\n\nd = china['last_update'].astype('str')\nyear = int(d.values[0].split('-')[0])\nmonth = int(d.values[0].split('-')[1])\nday = int(d.values[0].split('-')[2].split()[0])\n\nchina_update = china[china['last_update'] == pd.Timestamp(date(2020,2,5))]\nchina_update.head()","c3491d29":"china_last = china_update.groupby(['province','last_update']).agg({'confirmed':sum,'recovered':sum,'death':sum}).reset_index().sort_values('confirmed',ascending = False)\nchina_last.head()","e3e1b254":"print(\"Until 05 Feb 2020, there are %s provinces infected in China.\"%format(len(china_update['province'].unique())))","847ed72e":"# Top five province for confirmed\nchina_last.groupby('province')['confirmed'].sum().sort_values(ascending = False)[:5]","19b25430":"china_growth = china.groupby(['province','last_update']).max().reset_index().sort_values('last_update')","2c7c125f":"hubei = china_growth[china_growth['province'] == 'Hubei']\ntrace1 = go.Scatter(name = 'Hubei confimred growth', x = hubei['last_update'], y = hubei['confirmed'], line_shape = 'linear')\ndata = [trace1]\nfig = go.Figure(data)\n\nfig.update_layout(title = 'Confirmation growth for Hubei confirmed cases')\nfig.show()\n\n\n#hubei = china[china['province'] == 'Hubei'].reset_index()\nzhejiang = china_growth[china_growth['province'] == 'Zhejiang']\nguangdong = china_growth[china_growth['province'] == 'Guangdong']\nhenan = china_growth[china_growth['province'] == 'Henan']\nhunan = china_growth[china_growth['province'] == 'Hunan']\n\n#hubei_confirmed_growth = hubei['confirmed'].groupby(hubei['last_update']).max().reset_index()\n#zhejiang_confirmed_growth = zhejiang.groupby(zhejiang['last_update']).agg({'confirmed':sum}).reset_index()\n#guangdong_confirmed_growth = guangdong.groupby(guangdong['last_update']).agg({'confirmed':sum}).reset_index()\n#henan_confirmed_growth = henan.groupby(henan['last_update']).agg({'confirmed':sum}).reset_index()\n#hunan_confirmed_growth = hunan.groupby(hunan['last_update']).agg({'confirmed':sum}).reset_index()\n\n#trace1 = go.Scatter(name = 'Hubei confimred growth', x = hubei_confirmed_growth['last_update'], y = hubei_confirmed_growth['confirmed'], line_shape = 'spline')\ntrace2 = go.Scatter(name = 'Zhejiang confimred growth', x = zhejiang['last_update'], y = zhejiang['confirmed'], line_shape = 'linear')\ntrace3 = go.Scatter(name = 'Guangdong confimred growth', x = guangdong['last_update'], y = guangdong['confirmed'], line_shape = 'linear')\ntrace4 = go.Scatter(name = 'Henan confimred growth', x = henan['last_update'], y = henan['confirmed'], line_shape = 'linear')\ntrace5 = go.Scatter(name = 'Hunan confimred growth', x = hunan['last_update'], y = hunan['confirmed'], line_shape ='linear') \n\ndata = [trace2, trace3, trace4, trace5]\nfig = go.Figure(data)\n\nfig.update_layout(title = 'Confirmation growth for 5 most confirmed cases')\nfig.show()","d1cf5824":"out_of_hubei = china[china['province'] != 'Hubei']\noohubei_confirmed_growth = out_of_hubei.groupby(out_of_hubei['last_update']).agg({'confirmed':sum}).reset_index()\nchina_growth_ = china.groupby(china['last_update']).agg({'confirmed':sum}).reset_index()\n\ntrace1 = go.Scatter(name = 'Hubei confirmed cases', x = hubei['last_update'], y = hubei['confirmed'],line_shape = 'spline')\ntrace2 = go.Scatter(name = 'Out of Hubei confirmed casses', x = oohubei_confirmed_growth['last_update'], y = oohubei_confirmed_growth['confirmed'], line_shape = 'spline')\ntrace3 = go.Scatter(name = 'China confirmed casses', x = china_growth_['last_update'], y = china_growth_['confirmed'], line_shape = 'spline')\n\ndata = [trace1, trace2,trace3]\nfig = go.Figure(data)\nfig.update_layout(title = 'Confirmed cases of Hubei VS out of Hubei')\n\nfig.show()","92627f6a":"# Top five province for mortality\nchina_last.groupby('province')['death'].sum().sort_values(ascending = False)[:5]","16c483a8":"#Top five provinces for recovery\nchina_last.groupby('province')['recovered'].sum().sort_values(ascending = False)[:5]","480474bd":"china_recovery_growth = china.groupby(china['last_update']).agg({'recovered':sum}).reset_index()\nchina_death_growth = china.groupby(china['last_update']).agg({'death':sum}).reset_index()\n\ntrace1 = go.Scatter(name = 'China recovered cases trend', x = china_recovery_growth['last_update'], y = china_recovery_growth['recovered'], line_shape = 'spline')\ntrace2 = go.Scatter(name = 'China death cases trend', x = china_death_growth['last_update'], y = china_death_growth['death'], line_shape = 'spline')\n\ndata = [trace1, trace2]\nfig = go.Figure(data)\nfig.update_layout(title = 'Recovery\/Death cases of China')\n\nfig.show()","039eef54":"china['recovered_ratio'] = (china['recovered']\/china['confirmed'])*100\nchina['death_ratio'] = (china['death']\/china['confirmed'])*100\n\nchina_recovered_ratio = china.groupby(china['last_update']).agg({'recovered_ratio':'mean'}).reset_index()\nchina_death_ratio = china.groupby(china['last_update']).agg({'death_ratio':'mean'}).reset_index()\n\ntrace1 = go.Scatter(name = 'Recovered Ratio %', x = china_recovered_ratio['last_update'], y = china_recovered_ratio['recovered_ratio'])\ntrace2 = go.Scatter(name = 'Death Ratio %', x = china_death_ratio['last_update'], y = china_death_ratio['death_ratio'])\ndata = [trace1, trace2]\nfig = go.Figure(data)\nfig.update_layout(title = 'Recovery\/Death ratio for China')\nfig.show()","5a7ee1bd":"hubei['recovered_ratio'] = (hubei['recovered']\/hubei['confirmed'])*100\nhubei_recovery_ratio = hubei.groupby(hubei['last_update']).agg({'recovered_ratio':'mean'}).reset_index()\nout_of_hubei['recovered_ratio'] = (out_of_hubei['recovered']\/out_of_hubei['confirmed'])*100\nout_of_hubei_ratio = out_of_hubei.groupby(out_of_hubei['last_update']).agg({'recovered_ratio':'mean'}).reset_index()\n\ntrace1 = go.Scatter(name = 'Hubei recovered ratio %', x = hubei_recovery_ratio['last_update'], y = hubei_recovery_ratio['recovered_ratio'], line_shape = 'spline')\ntrace2 = go.Scatter(name = 'Out of Hubei recovered ratio %', x = out_of_hubei_ratio['last_update'], y = out_of_hubei_ratio['recovered_ratio'], line_shape = 'spline') \ntrace3 = go.Scatter(name = 'China recovered ratio %', x = china_recovered_ratio['last_update'], y = china_recovered_ratio['recovered_ratio'], line_shape = 'spline') \ndata = [trace1, trace2, trace3]\nfig = go.Figure(data)\nfig.update_layout(title = 'Recovery ratio % of China, Hubei and Out of Hubei')\n\nfig.show()\n\n\nhubei['death_ratio'] = (hubei['death']\/hubei['confirmed'])*100\nhubei_death_ratio = hubei.groupby(hubei['last_update']).agg({'death_ratio':'mean'}).reset_index()\nout_of_hubei['death_ratio'] = (out_of_hubei['death']\/out_of_hubei['confirmed'])*100\nout_of_hubei_death_ratio = out_of_hubei.groupby(out_of_hubei['last_update']).agg({'death_ratio':'mean'}).reset_index()\n\ntrace1 = go.Scatter(name = 'Hubei death ratio %', x = hubei_death_ratio['last_update'], y = hubei_death_ratio['death_ratio'], line_shape = 'spline')\ntrace2 = go.Scatter(name = 'Out of Hubei death ratio %', x = out_of_hubei_death_ratio['last_update'], y = out_of_hubei_death_ratio['death_ratio'], line_shape = 'spline') \ntrace3 = go.Scatter(name = 'China death ratio %', x = china_death_ratio['last_update'], y = china_death_ratio['death_ratio'], line_shape = 'spline') \ndata = [trace1, trace2, trace3]\nfig = go.Figure(data)\nfig.update_layout(title = 'Death ratio % of China, Hubei and Out of Hubei')\n\nfig.show()","5274b0d2":"It is considered here that Hong Kong, Taiwan and Macau belong to Mainland China. The contry column should be changed.","55614606":"The growth curve trend of Hubei is similar to the whole country, and the values are similar. After January 31, the number of confirmed cases in other provinces \uff08out of Hubei) has increased significantly. Inflection point of confirmed cases across provinces is presented at February 5. ***Refer to official data from Tencent, only 10 confirmed cases increased on February 16.*** Maybe it's a beginning of the good news.","f57ec6eb":"Take the latest update data (05 Feb 2020) for further analysis.","ccf64cf0":"Import data of 2020 Feb 06","a2ec4a52":"Severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2),formerly known as the 2019 novel coronavirus (2019-nCoV),is a positive-sense, single-stranded RNA coronavirus.\n\nThe virus is the cause of coronavirus disease 2019 (COVID-19) and is contagious among humans.There is no vaccine against the virus at this time. SARS-CoV-2 has genetic similarities to SARS-CoV (79.5%) and bat coronaviruses (96%),which makes an origin in bats likely,although an intermediate reservoir such as a pangolin is thought to be involved.\n\nSARS-CoV-2 is implicated in the ongoing 2019\u201320 Wuhan coronavirus outbreak, a Public Health Emergency of International Concern.Because of this connection, the virus is sometimes referred to informally as the \"Wuhan coronavirus\" \n\nFrom wikipedia\n\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/7\/78\/SARS-CoV-2_49534865371.jpg)","1d9a265d":"### To be continued...\n### If you like this kernel, please upvote.","ae8320ec":"According to global data, China has the highest number of confirmed cases in the world and far exceeds other countries. Creat a new datafram to look for the distribution of confirmed\/recovered\/deaths cases in China.","f7cda15e":"The death and recovered data can be check together. List top 5 provinces for mortality and recovery.","fd9751e2":"Until 05 Feb 2020, confirmed cases have been detected in 30 provinces in China. Obviously, Hubei Province has the most confirmed cases. For other provinces, which one has more confirmed cases? List 5 provinces which have most confirmed cases (Hubei is included).","dfa3df7d":"The number of confirmed cases in Hubei Province is about 10 times that of the Zhejiang. When was the fastest increase of confirmed cases in Hubei and another province?","739853cf":"## Hope everything will be OK[](http:\/\/)","6bb499fa":"Check recovered and death trends across the provinces","4ec57018":"As confirmed cases, compare the relationship between recovery\/death cases across the Hubei, out of Hubei and china.","8b60153b":"In Hubei province, Wuhan is a city which has the most confirmed cases. Compare the relationship between the cumulative number of confirmed cases across the Hubei and out of Hubei.","775cbb0a":"How about the ratio of recovery and death in mainland china?"}}