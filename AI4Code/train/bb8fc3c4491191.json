{"cell_type":{"b7be5cc6":"code","99f1b872":"code","eddefdb4":"code","b573d975":"code","13714595":"code","1d01f010":"code","de83188d":"code","8e9de1ae":"code","fb62d985":"code","e6f20620":"code","160445e1":"code","1f9998db":"code","958f0f76":"code","fee9d180":"code","ca68c63b":"code","95240ae3":"code","3a3ee155":"code","77d31756":"code","20780997":"code","f2e530cb":"code","d0127fab":"code","0ee66e36":"code","8433cd7e":"code","b4f7e2fd":"code","22a8db6d":"code","6ad44067":"code","9eb14c9c":"code","a897b61b":"code","4585d11b":"code","6dc6bbb9":"code","7a778f3d":"code","1a9915b6":"code","421a1e5e":"code","50a13edd":"code","0176ba7a":"code","c9cd2876":"code","37502b2b":"code","6bc42427":"code","5d0dd360":"code","db98ba93":"code","17fcfeb0":"code","f797cfcd":"code","c2840108":"code","9beb2026":"code","0c461b81":"code","e59f2a2b":"code","0ff3e13d":"code","24dbdbfb":"code","82b777b3":"code","573ce94d":"code","78de5417":"code","ad23dcc2":"code","5562a109":"code","d82afc31":"code","5b90f4c9":"code","2c71e28c":"code","08ff855c":"code","13e4c5a7":"code","cb830053":"code","9537f57b":"code","d74c5100":"code","8e5a1537":"code","89d6d582":"code","c97f98b0":"code","2572f2e3":"code","19e58dcb":"code","09d85362":"code","25152cdc":"code","a91716c4":"code","8bf8d13a":"code","fb7e889a":"code","7784a533":"code","3688031b":"code","aa0b9b7d":"code","a36ec069":"code","fe1a79ff":"code","f5189fcc":"code","02eca50f":"markdown","a6054504":"markdown","d10d9ae9":"markdown","de01c28d":"markdown","877dac5b":"markdown","eb9792c1":"markdown"},"source":{"b7be5cc6":"import numpy as np\nfrom numpy import inf\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.graph_objs.scatter.marker import Line\nfrom plotly.graph_objs import Line\nimport matplotlib.pyplot as plt\npd.set_option('display.max_columns', None)\nimport warnings\nwarnings.filterwarnings('ignore')","99f1b872":"worldwide = pd.read_csv('https:\/\/covid.ourworldindata.org\/data\/ecdc\/total_cases.csv')","eddefdb4":"worldwide['date'] = pd.to_datetime(worldwide['date'])\nworldwide = worldwide.reset_index()\na = worldwide.iloc[worldwide.shape[0]-1]\na = list(a)[0]\ntop_10 = worldwide.tail(1)\ntop_10 = top_10.transpose()\ntop_10 = top_10.reset_index()\ntop_10 = top_10.rename(columns = {'index' : 'Country'})\ntop_10 = top_10.rename(columns = {a : 'Cases'})\ntop_10.drop([0, 1], inplace = True)\ntop_10 = top_10.reset_index()\ntop_10 = top_10[top_10['Country'] != 'World']\ntop_10.drop(columns = ['index'], inplace = True)\ntop_10 = top_10.sort_values(by = 'Cases', ascending = False).head(10)\ntop_10","b573d975":"country_list = np.array(top_10['Country'])","13714595":"country_wise = pd.read_csv('https:\/\/covid.ourworldindata.org\/data\/owid-covid-data.csv')","1d01f010":"country_wise = country_wise[country_wise['location'] != 'world']","de83188d":"world = country_wise.sort_values(by = 'date')","8e9de1ae":"world_data = px.choropleth(world, locations=\"iso_code\",\n                    color=\"total_cases\",\n                    hover_name=\"location\",\n                    animation_frame=\"date\",\n                    title = \"Total new COVID-19 cases\",\n                   color_continuous_scale=px.colors.sequential.Reds)\nworld_data[\"layout\"].pop(\"updatemenus\")\nworld_data.show()","fb62d985":"world_data = px.choropleth(world, locations=\"iso_code\",\n                    color=\"total_deaths\",\n                    hover_name=\"location\",\n                    animation_frame=\"date\",\n                    title = \"Total COVID-19 deaths\",\n                   color_continuous_scale=px.colors.sequential.Reds)\nworld_data[\"layout\"].pop(\"updatemenus\")\nworld_data.show()","e6f20620":"world_data = px.choropleth(world, locations=\"iso_code\",\n                    color=\"new_tests_per_thousand\",\n                    hover_name=\"location\",\n                    animation_frame=\"date\",\n                    title = \"Tests Per Thousand\",\n                   color_continuous_scale=px.colors.sequential.Plasma)\nworld_data[\"layout\"].pop(\"updatemenus\")\nworld_data.show()","160445e1":"country_wise['date'] = pd.to_datetime(country_wise['date'])\ncountry_wise['Mortality_Rate'] = (country_wise['total_deaths']\/country_wise['total_cases'])*100","1f9998db":"cases = []\nfor col in country_wise:\n    for col in country_list:\n        cases.append(country_wise.loc[country_wise['location'] == col])","958f0f76":"country_1 = cases[0]\ncountry_2 = cases[1]\ncountry_3 = cases[2]\ncountry_4 = cases[3]\ncountry_5 = cases[4]\ncountry_6 = cases[5]\ncountry_7 = cases[6]\ncountry_8 = cases[7]\ncountry_9 = cases[8]\ncountry_10 = cases[9]","fee9d180":"x = country_1.merge(country_2, on = 'date', how = 'left')\nx = x[['date', 'new_cases_x', 'new_cases_y']]\nx.rename(columns = {'new_cases_x' : 'country_1', 'new_cases_y' : 'country_2'}, inplace = True)\nx = x.merge(country_3, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_3'}, inplace = True)\nx = x.merge(country_4, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_4'}, inplace = True)\nx = x.merge(country_5, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_5'}, inplace = True)\nx = x.merge(country_6, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_6'}, inplace = True)\nx = x.merge(country_7, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_7'}, inplace = True)\nx = x.merge(country_8, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_8'}, inplace = True)\nx = x.merge(country_9, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_9'}, inplace = True)\nx = x.merge(country_10, on = 'date', how = 'left')\nx = x[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'country_9', 'new_cases']]\nx.rename(columns = {'new_cases' : 'country_10'}, inplace = True)","ca68c63b":"x = x.fillna(0)","95240ae3":"x = x.reset_index()","3a3ee155":"x.rename(columns = {'index':'Days'}, inplace = True)","77d31756":"top_10 = top_10[top_10['Country'] != 'Rest']","20780997":"fig = px.bar(top_10, \n            x = 'Cases',\n            y = 'Country', \n            orientation = 'h', \n            height = 500, \n            title = '10 Worst Affected Nations', \n            color = 'Country')\nfig.show()","f2e530cb":"total_affected = worldwide.tail(1)\ntotal_affected = int(total_affected['World'])","d0127fab":"top_10['Percentage'] = (top_10['Cases']\/total_affected)*100","0ee66e36":"top_10_cases = top_10['Cases'].sum()\nrest_cases = total_affected - top_10_cases\nper = (rest_cases\/total_affected)*100\nnew_row = pd.DataFrame({'Country' : ['Rest'], 'Cases' : [rest_cases], 'Percentage' : [per]})\ntop_10 = pd.concat([top_10, new_row])\ntop_10.style.background_gradient(cmap = 'reds')","8433cd7e":"fig = px.pie(top_10,\n            values = 'Percentage',\n            names = 'Country', \n            title = 'Percentage Of Global Cases')\nfig.show()","b4f7e2fd":"top_10_total_cases = country_1.merge(country_2, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'total_cases_x', 'total_cases_y']]\ntop_10_total_cases.rename(columns = {'total_cases_x' : 'country_1', 'total_cases_y' : 'country_2'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_3, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_3'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_4, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_4'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_5, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_5'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_6, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_6'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_7, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_7'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_8, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_8'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_9, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_9'}, inplace = True)\ntop_10_total_cases = top_10_total_cases.merge(country_10, on = 'date', how = 'left')\ntop_10_total_cases = top_10_total_cases[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'country_9', 'total_cases']]\ntop_10_total_cases.rename(columns = {'total_cases' : 'country_10'}, inplace = True)\ntop_10_total_cases.fillna(0, inplace = True)","22a8db6d":"top_10_total_cases = top_10_total_cases.reset_index()\ntop_10_total_cases.drop(columns = ['date'], inplace = True)","6ad44067":"top_10_total_cases.rename(columns = {'index' : 'Days'}, inplace = True)","9eb14c9c":"top_10_total_cases.rename(columns = {'country_1' : country_list[0]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_2' : country_list[1]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_3' : country_list[2]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_4' : country_list[3]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_5' : country_list[4]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_6' : country_list[5]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_7' : country_list[6]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_8' : country_list[7]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_9' : country_list[8]}, inplace = True)\ntop_10_total_cases.rename(columns = {'country_10' : country_list[9]}, inplace = True)","a897b61b":"fig_inc = go.Figure(go.Line(x = top_10_total_cases['Days'], \n                            y = top_10_total_cases[country_list[0]],\n                            name = country_list[0], \n                            mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[1]], \n                          name = country_list[1], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[2]], \n                          name = country_list[2], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[3]], \n                          name = country_list[3], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[4]], \n                          name = country_list[4], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[5]], \n                          name = country_list[5], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[6]], \n                          name = country_list[6], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[7]], \n                          name = country_list[7], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[8]], \n                          name = country_list[8], \n                          mode = 'lines+markers'))\nfig_inc.add_trace(go.Line(x = top_10_total_cases['Days'],\n                          y = top_10_total_cases[country_list[9]], \n                          name = country_list[9], \n                          mode = 'lines+markers'))\nfig_inc.update_layout(title = 'Incremental Cases')\nfig_inc.update_xaxes(title= '------>Timeline (Days since 31-12-2019)' ,showline=False)\nfig_inc.update_yaxes(title= '------>Number of incremental cases', showline=False)\nfig_inc.show()","4585d11b":"confirmed = pd.read_csv('https:\/\/data.humdata.org\/hxlproxy\/api\/data-preview.csv?url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv&filename=time_series_covid19_confirmed_global.csv')\ndeath = pd.read_csv('https:\/\/data.humdata.org\/hxlproxy\/api\/data-preview.csv?url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv&filename=time_series_covid19_deaths_global.csv')\nrecovered = pd.read_csv('https:\/\/data.humdata.org\/hxlproxy\/api\/data-preview.csv?url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv&filename=time_series_covid19_recovered_global.csv')","6dc6bbb9":"a = confirmed.groupby(['Country\/Region']).agg(sum)\na = a.sort_values(a.columns[a.shape[1]-1], ascending = False)\na = a.transpose()\na.drop(a.index[[0, 1]], inplace = True)\na.rename(columns = {'US' : 'United States'}, inplace = True)\na = a[[country_list[0], country_list[1], country_list[2], country_list[3], country_list[4], country_list[5], country_list[6], country_list[7], country_list[8], country_list[9]]]\n","7a778f3d":"b = death.groupby(['Country\/Region']).agg(sum)\nb = b.transpose()\nb.rename(columns = {'US' : 'United States'}, inplace = True)\nb = b[[country_list[0], country_list[1], country_list[2], country_list[3], country_list[4], country_list[5], country_list[6], country_list[7], country_list[8], country_list[9]]]\nb.drop(b.index[[0, 1]], inplace = True)","1a9915b6":"c = recovered.groupby(['Country\/Region']).agg(sum)\nc = c.transpose()\nc.rename(columns = {'US' : 'United States'}, inplace = True)\nc = c[[country_list[0], country_list[1], country_list[2], country_list[3], country_list[4], country_list[5], country_list[6], country_list[7], country_list[8], country_list[9]]]\nc.drop(c.index[[0, 1]], inplace = True)","421a1e5e":"country_one = pd.DataFrame({'Confirmed' : a[country_list[0]], 'Death' : b[country_list[0]], 'Recovered' : c[country_list[0]]})\ncountry_one['Active'] = country_one['Confirmed']-(country_one['Death']+country_one['Recovered'])\ncountry_one['Mortality_Rate'] = (country_one['Death']\/country_one['Confirmed'])*100\ncountry_one['Recovery_Rate'] = (country_one['Recovered']\/country_one['Confirmed'])*100\ncountry_one = country_one.fillna(0)\ncountry_one = country_one.reset_index()\ncountry_one.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_two = pd.DataFrame({'Confirmed' : a[country_list[1]], 'Death' : b[country_list[1]], 'Recovered' : c[country_list[1]]})\ncountry_two['Active'] = country_two['Confirmed']-(country_two['Death']+country_two['Recovered'])\ncountry_two['Mortality_Rate'] = (country_two['Death']\/country_two['Confirmed'])*100\ncountry_two['Recovery_Rate'] = (country_two['Recovered']\/country_two['Confirmed'])*100\ncountry_two = country_two.fillna(0)\ncountry_two = country_two.reset_index()\ncountry_two.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_three = pd.DataFrame({'Confirmed' : a[country_list[2]], 'Death' : b[country_list[2]], 'Recovered' : c[country_list[2]]})\ncountry_three['Active'] = country_three['Confirmed']-(country_three['Death']+country_three['Recovered'])\ncountry_three['Mortality_Rate'] = (country_three['Death']\/country_three['Confirmed'])*100\ncountry_three['Recovery_Rate'] = (country_three['Recovered']\/country_three['Confirmed'])*100\ncountry_three = country_three.fillna(0)\ncountry_three = country_three.reset_index()\ncountry_three.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_four = pd.DataFrame({'Confirmed' : a[country_list[3]], 'Death' : b[country_list[3]], 'Recovered' : c[country_list[3]]})\ncountry_four['Active'] = country_four['Confirmed']-(country_four['Death']+country_four['Recovered'])\ncountry_four['Mortality_Rate'] = (country_four['Death']\/country_four['Confirmed'])*100\ncountry_four['Recovery_Rate'] = (country_four['Recovered']\/country_four['Confirmed'])*100\ncountry_four = country_four.fillna(0)\ncountry_four = country_four.reset_index()\ncountry_four.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_five = pd.DataFrame({'Confirmed' : a[country_list[4]], 'Death' : b[country_list[4]], 'Recovered' : c[country_list[4]]})\ncountry_five['Active'] = country_five['Confirmed']-(country_five['Death']+country_five['Recovered'])\ncountry_five['Mortality_Rate'] = (country_five['Death']\/country_five['Confirmed'])*100\ncountry_five['Recovery_Rate'] = (country_five['Recovered']\/country_five['Confirmed'])*100\ncountry_five = country_five.fillna(0)\ncountry_five = country_five.reset_index()\ncountry_five.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_six = pd.DataFrame({'Confirmed' : a[country_list[5]], 'Death' : b[country_list[5]], 'Recovered' : c[country_list[5]]})\ncountry_six['Active'] = country_six['Confirmed']-(country_six['Death']+country_six['Recovered'])\ncountry_six['Mortality_Rate'] = (country_six['Death']\/country_six['Confirmed'])*100\ncountry_six['Recovery_Rate'] = (country_six['Recovered']\/country_six['Confirmed'])*100\ncountry_six = country_six.fillna(0)\ncountry_six = country_six.reset_index()\ncountry_six.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_seven = pd.DataFrame({'Confirmed' : a[country_list[6]], 'Death' : b[country_list[6]], 'Recovered' : c[country_list[6]]})\ncountry_seven['Active'] = country_seven['Confirmed']-(country_seven['Death']+country_seven['Recovered'])\ncountry_seven['Mortality_Rate'] = (country_seven['Death']\/country_seven['Confirmed'])*100\ncountry_seven['Recovery_Rate'] = (country_seven['Recovered']\/country_seven['Confirmed'])*100\ncountry_seven = country_seven.fillna(7)\ncountry_seven = country_seven.reset_index()\ncountry_seven.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_eight = pd.DataFrame({'Confirmed' : a[country_list[7]], 'Death' : b[country_list[7]], 'Recovered' : c[country_list[7]]})\ncountry_eight['Active'] = country_eight['Confirmed']-(country_eight['Death']+country_eight['Recovered'])\ncountry_eight['Mortality_Rate'] = (country_eight['Death']\/country_eight['Confirmed'])*100\ncountry_eight['Recovery_Rate'] = (country_eight['Recovered']\/country_eight['Confirmed'])*100\ncountry_eight = country_eight.fillna(0)\ncountry_eight = country_eight.reset_index()\ncountry_eight.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_nine = pd.DataFrame({'Confirmed' : a[country_list[8]], 'Death' : b[country_list[8]], 'Recovered' : c[country_list[8]]})\ncountry_nine['Active'] = country_nine['Confirmed']-(country_nine['Death']+country_nine['Recovered'])\ncountry_nine['Mortality_Rate'] = (country_nine['Death']\/country_nine['Confirmed'])*100\ncountry_nine['Recovery_Rate'] = (country_nine['Recovered']\/country_nine['Confirmed'])*100\ncountry_nine = country_nine.fillna(0)\ncountry_nine = country_nine.reset_index()\ncountry_nine.rename(columns = {'index' : 'Date'}, inplace = True)\n\ncountry_ten = pd.DataFrame({'Confirmed' : a[country_list[9]], 'Death' : b[country_list[9]], 'Recovered' : c[country_list[9]]})\ncountry_ten['Active'] = country_ten['Confirmed']-(country_ten['Death']+country_ten['Recovered'])\ncountry_ten['Mortality_Rate'] = (country_ten['Death']\/country_ten['Confirmed'])*100\ncountry_ten['Recovery_Rate'] = (country_ten['Recovered']\/country_ten['Confirmed'])*100\ncountry_ten = country_ten.fillna(0)\ncountry_ten = country_ten.reset_index()\ncountry_ten.rename(columns = {'index' : 'Date'}, inplace = True)","50a13edd":"fig_log_one = go.Figure(go.Line(x = country_one['Date'], \n                            y = np.log1p(country_one['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_log_one.add_trace(go.Line(x = country_one['Date'],\n                          y = np.log1p(country_one['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_log_one.add_trace(go.Line(x = country_one['Date'],\n                          y = np.log1p(country_one['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_log_one.add_trace(go.Line(x = country_one['Date'],\n                          y = np.log1p(country_one['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_log_one.update_layout(title = country_list[0])\nfig_log_one.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_log_one.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_log_one.show()\n\nfig_log_two = go.Figure(go.Line(x = country_two['Date'], \n                            y = np.log1p(country_two['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_log_two.add_trace(go.Line(x = country_two['Date'],\n                          y = np.log1p(country_two['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_log_two.add_trace(go.Line(x = country_two['Date'],\n                          y = np.log1p(country_two['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_log_two.add_trace(go.Line(x = country_two['Date'],\n                          y = np.log1p(country_two['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_log_two.update_layout(title = country_list[1])\nfig_log_two.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_log_two.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_log_two.show()\n\nfig_three = go.Figure(go.Line(x = country_three['Date'], \n                            y = np.log1p(country_three['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_three.add_trace(go.Line(x = country_three['Date'],\n                          y = np.log1p(country_three['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_three.add_trace(go.Line(x = country_three['Date'],\n                          y = np.log1p(country_three['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_three.add_trace(go.Line(x = country_three['Date'],\n                          y = np.log1p(country_three['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_three.update_layout(title = country_list[2])\nfig_three.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_three.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_three.show()\n\nfig_four = go.Figure(go.Line(x = country_four['Date'], \n                            y = np.log1p(country_four['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_four.add_trace(go.Line(x = country_four['Date'],\n                          y = np.log1p(country_four['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_four.add_trace(go.Line(x = country_four['Date'],\n                          y = np.log1p(country_four['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_four.add_trace(go.Line(x = country_four['Date'],\n                          y = np.log1p(country_four['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_four.update_layout(title = country_list[3])\nfig_four.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_four.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_four.show()\n\nfig_five = go.Figure(go.Line(x = country_five['Date'], \n                            y = np.log1p(country_five['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_five.add_trace(go.Line(x = country_five['Date'],\n                          y = np.log1p(country_five['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_five.add_trace(go.Line(x = country_five['Date'],\n                          y = np.log1p(country_five['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_five.add_trace(go.Line(x = country_five['Date'],\n                          y = np.log1p(country_five['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_five.update_layout(title = country_list[4])\nfig_five.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_five.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_five.show()\n\nfig_six = go.Figure(go.Line(x = country_six['Date'], \n                            y = np.log1p(country_six['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_six.add_trace(go.Line(x = country_six['Date'],\n                          y = np.log1p(country_six['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_six.add_trace(go.Line(x = country_six['Date'],\n                          y = np.log1p(country_six['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_six.add_trace(go.Line(x = country_six['Date'],\n                          y = np.log1p(country_six['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_six.update_layout(title = country_list[5])\nfig_six.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_six.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_six.show()\n\nfig_seven = go.Figure(go.Line(x = country_seven['Date'], \n                            y = np.log1p(country_seven['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_seven.add_trace(go.Line(x = country_seven['Date'],\n                          y = np.log1p(country_seven['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_seven.add_trace(go.Line(x = country_seven['Date'],\n                          y = np.log1p(country_seven['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_seven.add_trace(go.Line(x = country_seven['Date'],\n                          y = np.log1p(country_seven['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_seven.update_layout(title = country_list[6])\nfig_seven.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_seven.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_seven.show()\n\nfig_eight = go.Figure(go.Line(x = country_eight['Date'], \n                            y = np.log1p(country_eight['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_eight.add_trace(go.Line(x = country_eight['Date'],\n                          y = np.log1p(country_eight['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_eight.add_trace(go.Line(x = country_eight['Date'],\n                          y = np.log1p(country_eight['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_eight.add_trace(go.Line(x = country_eight['Date'],\n                          y = np.log1p(country_eight['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_eight.update_layout(title = country_list[7])\nfig_eight.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_eight.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_eight.show()\n\n\nfig_nine = go.Figure(go.Line(x = country_nine['Date'], \n                            y = np.log1p(country_nine['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_nine.add_trace(go.Line(x = country_nine['Date'],\n                          y = np.log1p(country_nine['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_nine.add_trace(go.Line(x = country_nine['Date'],\n                          y = np.log1p(country_nine['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_nine.add_trace(go.Line(x = country_nine['Date'],\n                          y = np.log1p(country_nine['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_nine.update_layout(title = country_list[8])\nfig_nine.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_nine.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_nine.show()\n\n\nfig_ten = go.Figure(go.Line(x = country_ten['Date'], \n                            y = np.log1p(country_ten['Confirmed']),\n                            name = 'Confirmed', \n                            mode = 'lines'))\nfig_ten.add_trace(go.Line(x = country_ten['Date'],\n                          y = np.log1p(country_ten['Death']), \n                          name = 'Death', \n                          mode = 'lines'))\nfig_ten.add_trace(go.Line(x = country_ten['Date'],\n                          y = np.log1p(country_ten['Recovered']), \n                          name = 'Recovered', \n                          mode = 'lines'))\nfig_ten.add_trace(go.Line(x = country_ten['Date'],\n                          y = np.log1p(country_ten['Active']), \n                          name = 'Active', \n                          mode = 'lines'))\nfig_ten.update_layout(title = country_list[9])\nfig_ten.update_xaxes(title= '------>Timeline' ,showline=False)\nfig_ten.update_yaxes(title= '------>Lograthmic increment in cases', showline=False)\nfig_ten.show()\n","0176ba7a":"fig_one = px.line(country_one, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_one.update_layout(title = country_list[0])\nfig_one.show()\n\nfig_two = px.line(country_two, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_two.update_layout(title = country_list[1])\nfig_two.show()\n\nfig_three = px.line(country_three, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_three.update_layout(title = country_list[2])\nfig_three.show()\n\nfig_four = px.line(country_four, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_four.update_layout(title = country_list[3])\nfig_four.show()\n\nfig_five = px.line(country_five, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_five.update_layout(title = country_list[4])\nfig_five.show()\n\nfig_six = px.line(country_six, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_six.update_layout(title = country_list[5])\nfig_six.show()\n\nfig_seven = px.line(country_seven, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_seven.update_layout(title = country_list[6])\nfig_seven.show()\n\nfig_eight = px.line(country_eight, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_eight.update_layout(title = country_list[7])\nfig_eight.show()\n\nfig_nine = px.line(country_nine, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_nine.update_layout(title = country_list[8])\nfig_nine.show()\n\nfig_ten = px.line(country_ten, \n             x = 'Date', \n             y = 'Mortality_Rate')\nfig_ten.update_layout(title = country_list[9])\nfig_ten.show()","c9cd2876":"fig_one = px.line(country_one, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_one.update_layout(title = country_list[0])\nfig_one.show()\n\nfig_two = px.line(country_two, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_two.update_layout(title = country_list[1])\nfig_two.show()\n\nfig_three = px.line(country_three, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_three.update_layout(title = country_list[2])\nfig_three.show()\n\nfig_four = px.line(country_four, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_four.update_layout(title = country_list[3])\nfig_four.show()\n\nfig_five = px.line(country_five, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_five.update_layout(title = country_list[4])\nfig_five.show()\n\nfig_six = px.line(country_six, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_six.update_layout(title = country_list[5])\nfig_six.show()\n\nfig_seven = px.line(country_seven, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_seven.update_layout(title = country_list[6])\nfig_seven.show()\n\nfig_eight = px.line(country_eight, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_eight.update_layout(title = country_list[7])\nfig_eight.show()\n\nfig_nine = px.line(country_nine, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_nine.update_layout(title = country_list[8])\nfig_nine.show()\n\nfig_ten = px.line(country_ten, \n             x = 'Date', \n             y = 'Recovery_Rate')\nfig_ten.update_layout(title = country_list[9])\nfig_ten.show()","37502b2b":"hospital_beds_per_thousand = country_1.merge(country_2, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'hospital_beds_per_thousand_x', 'hospital_beds_per_thousand_y']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand_x' : 'country_1', 'hospital_beds_per_thousand_y' : 'country_2'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_3, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_3'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_4, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_4'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_5, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_5'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_6, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_6'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_7, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_7'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_8, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_8'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_9, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_9'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.merge(country_10, on = 'date', how = 'left')\nhospital_beds_per_thousand = hospital_beds_per_thousand[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'country_9', 'hospital_beds_per_thousand']]\nhospital_beds_per_thousand.rename(columns = {'hospital_beds_per_thousand' : 'country_10'}, inplace = True)\nhospital_beds_per_thousand = hospital_beds_per_thousand.fillna(0)\nhospital_beds_per_thousand = hospital_beds_per_thousand.reset_index()\nhospital_beds_per_thousand.rename(columns = {'index':'Days'}, inplace = True)","6bc42427":"beds = hospital_beds_per_thousand.tail(1)\nbeds.rename(columns = {'country_1' : country_list[0], \n                       'country_2' : country_list[1],\n                       'country_3' : country_list[2],\n                       'country_4' : country_list[3],\n                       'country_5' : country_list[4],\n                       'country_6' : country_list[5],\n                       'country_7' : country_list[6],\n                       'country_8' : country_list[7],\n                       'country_9' : country_list[8],\n                       'country_10' : country_list[9],},\n            inplace = True)\na = int(beds['Days'])\nbeds = beds.transpose()\nbeds = beds.reset_index()\nbeds.drop([0, 1], inplace = True)\nbeds.rename(columns = {'index' : 'Country', a : 'Hospital_beds_per_thousand'}, inplace = True)","5d0dd360":"beds_fig = px.bar(beds,\n             x = 'Country',\n             y = 'Hospital_beds_per_thousand',\n             height = 500,\n             title = 'Hospital Beds Per Thousand',\n             color = 'Country')\nbeds_fig.show()","db98ba93":"country_1['test_per_confirmed'] = country_1['new_tests_smoothed']\/country_1['new_cases']\ncountry_2['test_per_confirmed'] = country_2['new_tests_smoothed']\/country_2['new_cases']\ncountry_3['test_per_confirmed'] = country_3['new_tests_smoothed']\/country_3['new_cases']\ncountry_4['test_per_confirmed'] = country_4['new_tests_smoothed']\/country_4['new_cases']\ncountry_5['test_per_confirmed'] = country_5['new_tests_smoothed']\/country_5['new_cases']\ncountry_6['test_per_confirmed'] = country_6['new_tests_smoothed']\/country_6['new_cases']\ncountry_7['test_per_confirmed'] = country_7['new_tests_smoothed']\/country_7['new_cases']\ncountry_8['test_per_confirmed'] = country_8['new_tests_smoothed']\/country_8['new_cases']\ncountry_9['test_per_confirmed'] = country_9['new_tests_smoothed']\/country_9['new_cases']\ncountry_10['test_per_confirmed'] = country_10['new_tests_smoothed']\/country_10['new_cases']\n","17fcfeb0":"test_per_confirmed = country_1.merge(country_2, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'test_per_confirmed_x', 'test_per_confirmed_y']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed_x' : 'country_1', 'test_per_confirmed_y' : 'country_2'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_3, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_3'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_4, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_4'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_5, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_5'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_6, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_6'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_7, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_7'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_8, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_8'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_9, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_9'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.merge(country_10, on = 'date', how = 'left')\ntest_per_confirmed = test_per_confirmed[['date', 'country_1', 'country_2', 'country_3', 'country_4', 'country_5', 'country_6', 'country_7', 'country_8', 'country_9', 'test_per_confirmed']]\ntest_per_confirmed.rename(columns = {'test_per_confirmed' : 'country_10'}, inplace = True)\ntest_per_confirmed = test_per_confirmed.fillna(0)\ntest_per_confirmed = test_per_confirmed.reset_index()\ntest_per_confirmed.rename(columns = {'index':'Days'}, inplace = True)","f797cfcd":"test_per_confirmed.set_index('date', inplace = True)\ntest_per_confirmed = test_per_confirmed.rolling(7).mean()\ntest_per_confirmed.reset_index(inplace = True)\ntest_per_confirmed.rename(columns = {'index' : 'date'})","c2840108":"test_per_confirmed = test_per_confirmed.fillna(0)","9beb2026":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_1'],\n                    mode='lines',\n                    name=country_list[0]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_2'],\n                    mode='lines',\n                    name=country_list[1]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_3'],\n                    mode='lines',\n                    name=country_list[2]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_4'],\n                    mode='lines',\n                    name=country_list[3]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_5'],\n                    mode='lines',\n                    name=country_list[4]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_6'],\n                    mode='lines', \n                    name=country_list[5]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_7'],\n                    mode='lines',\n                    name=country_list[6]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_8'],\n                    mode='lines',\n                    name=country_list[7]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_9'],\n                    mode='lines', \n                    name=country_list[8]))\nfig.add_trace(go.Scatter(x=test_per_confirmed['date'], y=test_per_confirmed['country_10'],\n                    mode='lines',\n                    name=country_list[9]))\nfig.update_layout(title = 'Test conducted per confirmed case (7 day rolling average)')\nfig.update_xaxes(title= '------>Timeline' ,showline=False)\nfig.update_yaxes(title= '------>Tests \/ Confirmed Case', showline=False)\nfig.show()","0c461b81":"confirmed_daily_pct_change = confirmed.groupby('Country\/Region').agg(sum)\nconfirmed_daily_pct_change = confirmed_daily_pct_change.drop(columns = ['Lat', 'Long'])\nconfirmed_daily_pct_change = confirmed_daily_pct_change.diff(axis = 1, periods = 1)\nconfirmed_daily_pct_change = confirmed_daily_pct_change.pct_change(axis = 1, periods = 1)*100\nconfirmed_daily_pct_change = confirmed_daily_pct_change.fillna(0)\nconfirmed_daily_pct_change[confirmed_daily_pct_change == inf] = 0\nconfirmed_daily_pct_change[confirmed_daily_pct_change == -inf] = 0\nconfirmed_daily_pct_change = confirmed_daily_pct_change.reset_index()\nconfirmed_daily_pct_change.loc[confirmed_daily_pct_change['Country\/Region'] == 'US', 'Country\/Region'] = 'United States'\nconfirmed_daily_pct_change = confirmed_daily_pct_change.loc[confirmed_daily_pct_change['Country\/Region'].isin(country_list)]\nconfirmed_daily_pct_change = confirmed_daily_pct_change.transpose()\nconfirmed_daily_pct_change.columns = confirmed_daily_pct_change.iloc[0]\nconfirmed_daily_pct_change = confirmed_daily_pct_change[1:]\nconfirmed_daily_pct_change = confirmed_daily_pct_change.reset_index()\nconfirmed_daily_pct_change.rename(columns = {'index' : 'date'}, inplace = True)","e59f2a2b":"# fig_confirmed_daily_pct_change = go.Figure()\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'], \n#                                                 y=confirmed_daily_pct_change[country_list[0]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[0]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[1]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[1]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[2]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[2]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[3]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[3]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[4]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[4]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[5]],\n#                                                 mode='lines+markers', \n#                                                 name=country_list[5]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[6]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[6]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[7]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[7]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[8]],\n#                                                 mode='lines+markers', \n#                                                 name=country_list[8]))\n# fig_confirmed_daily_pct_change.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n#                                                 y=confirmed_daily_pct_change[country_list[9]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[9]))\n# fig_confirmed_daily_pct_change.update_layout(title = 'Day on Day %age change in case')\n# fig_confirmed_daily_pct_change.update_xaxes(title= '------>Timeline' ,showline=False)\n# fig_confirmed_daily_pct_change.update_yaxes(title= '------>%age change', showline=False)\n# fig_confirmed_daily_pct_change.show()","0ff3e13d":"fig = make_subplots(\n    rows=10, cols=1,\n    subplot_titles=(country_list[0], country_list[1],\n                    country_list[2], country_list[3],\n                    country_list[4], country_list[5],\n                    country_list[6], country_list[7],\n                    country_list[8], country_list[9]\n                    ))\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[0]],\n                         mode='lines+markers',\n                         name=country_list[0]),\n             row=1, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[1]],\n                        mode='lines+markers',\n                        name=country_list[1]),\n              row=2, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[2]],\n                        mode='lines+markers',\n                        name=country_list[2]),\n              row=3, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[3]],\n                        mode='lines+markers',\n                        name=country_list[3]),\n              row=4, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[4]],\n                        mode='lines+markers',\n                        name=country_list[4]),\n              row=5, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[5]],\n                        mode='lines+markers',\n                        name=country_list[5]),\n              row=6, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[6]],\n                        mode='lines+markers',\n                        name=country_list[6]),\n              row=7, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[7]],\n                        mode='lines+markers',\n                        name=country_list[7]),\n              row=8, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[8]],\n                        mode='lines+markers',\n                        name=country_list[8]),\n              row=9, col=1)\n\nfig.add_trace(go.Scatter(x=confirmed_daily_pct_change['date'],\n                         y=confirmed_daily_pct_change[country_list[9]],\n                        mode='lines+markers',\n                        name=country_list[9]),\n              row=10, col=1)\n\nfig.update_xaxes(title_text=\"------------> Timeline\", row=1, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=2, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=3, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=4, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=5, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=6, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=7, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=8, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=9, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=10, col=1)\n\nfig.update_yaxes(title_text=\"-----> Recovered\", row=1, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=2, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=3, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=4, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=5, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=6, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=7, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=8, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=9, col=1)\nfig.update_yaxes(title_text=\"----->Recovered\", row=10, col=1)\n\nfig.update_layout(height=3000, width=1300, title_text=\"Day on Day %age Change in number of Confirmed Patients\")\n\nfig.show()","24dbdbfb":"death_daily_pct_change = death.groupby('Country\/Region').agg(sum)\ndeath_daily_pct_change = death_daily_pct_change.drop(columns = ['Lat', 'Long'])\ndeath_daily_pct_change = death_daily_pct_change.diff(axis = 1, periods = 1)\ndeath_daily_pct_change = death_daily_pct_change.pct_change(axis = 1, periods = 1)*100\ndeath_daily_pct_change = death_daily_pct_change.fillna(0)\ndeath_daily_pct_change[death_daily_pct_change == inf] = 0\ndeath_daily_pct_change[death_daily_pct_change == -inf] = 0\ndeath_daily_pct_change = death_daily_pct_change.reset_index()\ndeath_daily_pct_change.loc[death_daily_pct_change['Country\/Region'] == 'US', 'Country\/Region'] = 'United States'\ndeath_daily_pct_change = death_daily_pct_change.loc[death_daily_pct_change['Country\/Region'].isin(country_list)]\ndeath_daily_pct_change = death_daily_pct_change.transpose()\ndeath_daily_pct_change.columns = death_daily_pct_change.iloc[0]\ndeath_daily_pct_change = death_daily_pct_change[1:]\ndeath_daily_pct_change = death_daily_pct_change.reset_index()\ndeath_daily_pct_change.rename(columns = {'index' : 'date'}, inplace = True)","82b777b3":"# fig_death_daily_pct_change = go.Figure()\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'], \n#                                                 y=death_daily_pct_change[country_list[0]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[0]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[1]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[1]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[2]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[2]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[3]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[3]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[4]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[4]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[5]],\n#                                                 mode='lines+markers', \n#                                                 name=country_list[5]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[6]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[6]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[7]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[7]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[8]],\n#                                                 mode='lines+markers', \n#                                                 name=country_list[8]))\n# fig_death_daily_pct_change.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n#                                                 y=death_daily_pct_change[country_list[9]],\n#                                                 mode='lines+markers',\n#                                                 name=country_list[9]))\n# fig_death_daily_pct_change.update_layout(title = 'Day on Day %age change in case')\n# fig_death_daily_pct_change.update_xaxes(title= '------>Timeline' ,showline=False)\n# fig_death_daily_pct_change.update_yaxes(title= '------>%age change', showline=False)\n# fig_death_daily_pct_change.show()","573ce94d":"fig = make_subplots(\n    rows=10, cols=1,\n    subplot_titles=(country_list[0], country_list[1],\n                    country_list[2], country_list[3],\n                    country_list[4], country_list[5],\n                    country_list[6], country_list[7],\n                    country_list[8], country_list[9]\n                    ))\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[0]],\n                         mode='lines+markers',\n                         name=country_list[0]),\n             row=1, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[1]],\n                        mode='lines+markers',\n                        name=country_list[1]),\n              row=2, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[2]],\n                        mode='lines+markers',\n                        name=country_list[2]),\n              row=3, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[3]],\n                        mode='lines+markers',\n                        name=country_list[3]),\n              row=4, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[4]],\n                        mode='lines+markers',\n                        name=country_list[4]),\n              row=5, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[5]],\n                        mode='lines+markers',\n                        name=country_list[5]),\n              row=6, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[6]],\n                        mode='lines+markers',\n                        name=country_list[6]),\n              row=7, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[7]],\n                        mode='lines+markers',\n                        name=country_list[7]),\n              row=8, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[8]],\n                        mode='lines+markers',\n                        name=country_list[8]),\n              row=9, col=1)\n\nfig.add_trace(go.Scatter(x=death_daily_pct_change['date'],\n                         y=death_daily_pct_change[country_list[9]],\n                        mode='lines+markers',\n                        name=country_list[9]),\n              row=10, col=1)\n\nfig.update_xaxes(title_text=\"------------> Timeline\", row=1, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=2, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=3, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=4, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=5, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=6, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=7, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=8, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=9, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=10, col=1)\n\nfig.update_yaxes(title_text=\"-----> Recovered\", row=1, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=2, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=3, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=4, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=5, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=6, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=7, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=8, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=9, col=1)\nfig.update_yaxes(title_text=\"----->Recovered\", row=10, col=1)\n\nfig.update_layout(height=3000, width=1300, title_text=\"Day on Day %age Change in number of Patients Deceased\")\n\nfig.show()","78de5417":"recovered_daily_pct_change = recovered.groupby('Country\/Region').agg(sum)\nrecovered_daily_pct_change = recovered_daily_pct_change.drop(columns = ['Lat', 'Long'])\nrecovered_daily_pct_change = recovered_daily_pct_change.diff(axis = 1, periods = 1)\nrecovered_daily_pct_change = recovered_daily_pct_change.pct_change(axis = 1, periods = 1)*100\nrecovered_daily_pct_change = recovered_daily_pct_change.fillna(0)\nrecovered_daily_pct_change[recovered_daily_pct_change == inf] = 0\nrecovered_daily_pct_change[recovered_daily_pct_change == -inf] = 0\nrecovered_daily_pct_change = recovered_daily_pct_change.reset_index()\nrecovered_daily_pct_change.loc[recovered_daily_pct_change['Country\/Region'] == 'US', 'Country\/Region'] = 'United States'\nrecovered_daily_pct_change = recovered_daily_pct_change.loc[recovered_daily_pct_change['Country\/Region'].isin(country_list)]\nrecovered_daily_pct_change = recovered_daily_pct_change.transpose()\nrecovered_daily_pct_change.columns = recovered_daily_pct_change.iloc[0]\nrecovered_daily_pct_change = recovered_daily_pct_change[1:]\nrecovered_daily_pct_change = recovered_daily_pct_change.reset_index()\nrecovered_daily_pct_change.rename(columns = {'index' : 'date'}, inplace = True)","ad23dcc2":"# fig = make_subplots(\n#     rows=10, cols=1,\n#     subplot_titles=(country_list[0], country_list[1],\n#                     country_list[2], country_list[3],\n#                     country_list[4], country_list[5],\n#                     country_list[6], country_list[7],\n#                     country_list[8], country_list[9]\n#                     ))\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[0]],\n#                          mode='lines+markers',\n#                          name=country_list[0]),\n#              row=1, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[1]],\n#                         mode='lines+markers',\n#                         name=country_list[1]),\n#               row=2, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[2]],\n#                         mode='lines+markers',\n#                         name=country_list[2]),\n#               row=3, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[3]],\n#                         mode='lines+markers',\n#                         name=country_list[3]),\n#               row=4, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[4]],\n#                         mode='lines+markers',\n#                         name=country_list[4]),\n#               row=5, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[5]],\n#                         mode='lines+markers',\n#                         name=country_list[5]),\n#               row=6, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[6]],\n#                         mode='lines+markers',\n#                         name=country_list[6]),\n#               row=7, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[7]],\n#                         mode='lines+markers',\n#                         name=country_list[7]),\n#               row=8, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[8]],\n#                         mode='lines+markers',\n#                         name=country_list[8]),\n#               row=9, col=1)\n\n# fig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n#                          y=recovered_daily_pct_change[country_list[9]],\n#                         mode='lines+markers',\n#                         name=country_list[9]),\n#               row=10, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=1, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=2, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=3, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=4, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=5, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=6, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=7, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=8, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=9, col=1)\n# fig.update_xaxes(title_text=\"------------> Timeline\", row=10, col=1)\n\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=1, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=2, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=3, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=4, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=5, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=6, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=7, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=8, col=1)\n# fig.update_yaxes(title_text=\"-----> Recovered\", row=9, col=1)\n# fig.update_yaxes(title_text=\"----->Recovered\", row=10, col=1)\n\n# fig.update_layout(height=3000, width=1300, title_text=\"Day on Day %age Change in number of Recovered Patients\")\n\n# fig.show()","5562a109":"fig = make_subplots(\n    rows=10, cols=1,\n    subplot_titles=(country_list[0], country_list[1],\n                    country_list[2], country_list[3],\n                    country_list[4], country_list[5],\n                    country_list[6], country_list[7],\n                    country_list[8], country_list[9]\n                    ))\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[0]],\n                         mode='lines+markers',\n                         name=country_list[0]),\n             row=1, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[1]],\n                        mode='lines+markers',\n                        name=country_list[1]),\n              row=2, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[2]],\n                        mode='lines+markers',\n                        name=country_list[2]),\n              row=3, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[3]],\n                        mode='lines+markers',\n                        name=country_list[3]),\n              row=4, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[4]],\n                        mode='lines+markers',\n                        name=country_list[4]),\n              row=5, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[5]],\n                        mode='lines+markers',\n                        name=country_list[5]),\n              row=6, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[6]],\n                        mode='lines+markers',\n                        name=country_list[6]),\n              row=7, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[7]],\n                        mode='lines+markers',\n                        name=country_list[7]),\n              row=8, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[8]],\n                        mode='lines+markers',\n                        name=country_list[8]),\n              row=9, col=1)\n\nfig.add_trace(go.Scatter(x=recovered_daily_pct_change['date'],\n                         y=recovered_daily_pct_change[country_list[9]],\n                        mode='lines+markers',\n                        name=country_list[9]),\n              row=10, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=1, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=2, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=3, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=4, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=5, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=6, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=7, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=8, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=9, col=1)\nfig.update_xaxes(title_text=\"------------> Timeline\", row=10, col=1)\n\nfig.update_yaxes(title_text=\"-----> Recovered\", row=1, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=2, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=3, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=4, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=5, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=6, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=7, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=8, col=1)\nfig.update_yaxes(title_text=\"-----> Recovered\", row=9, col=1)\nfig.update_yaxes(title_text=\"----->Recovered\", row=10, col=1)\n\nfig.update_layout(height=3000, width=1300, title_text=\"Day on Day %age Change in number of Recovered Patients\")\n\nfig.show()","d82afc31":"raw_data_1 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/raw_data1.csv')\nraw_data_2 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/raw_data2.csv')\nraw_data_3 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/raw_data3.csv')\nraw_data_4 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/raw_data4.csv')\nraw_data_5 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/raw_data5.csv')\nstatus_1 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/death_and_recovered1.csv')\nstatus_2 = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/death_and_recovered2.csv')\nstatewise = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/state_wise.csv')\ncase_time_series = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/case_time_series.csv')\ndistrictwise = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/district_wise.csv')\nstatewise_tested = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/statewise_tested_numbers_data.csv')\nicmr_tested = pd.read_csv('https:\/\/api.covid19india.org\/csv\/latest\/tested_numbers_icmr_data.csv')","5b90f4c9":"total = pd.DataFrame(statewise[statewise['State'] == 'Total'])\ntotal = total[['Recovered', 'Deaths', 'Active']]\ntotal = total.transpose()\ntotal = total.reset_index()\ntotal.rename(columns = {'index' : 'Property', 0 : 'Numbers'}, inplace = True)\ntotal","2c71e28c":"fig_total = px.pie(total, \n                  values = 'Numbers', \n                  names = 'Property', \n                  title = 'Current COVID-19 Status',\n                  color_discrete_map={'Active':'blue',\n                                 'Recovered':'green',\n                                 'Deaths':'red'})\nfig_total.show()","08ff855c":"statewise = statewise.drop([0])","13e4c5a7":"df_confirmed = statewise[['State', 'Confirmed']]\ndf_recovered = statewise[['State', 'Recovered']]\ndf_death = statewise[['State', 'Deaths']]\ndf_active = statewise[['State', 'Active']]","cb830053":"fig_statewise = make_subplots(rows=2, cols=2, specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}], [{\"type\": \"pie\"}, {\"type\": \"pie\"}]])\n\nfig_statewise.add_trace(go.Pie(\n     values=df_confirmed['Confirmed'],\n     labels=df_confirmed['State'],\n     domain=dict(x=[0, 0.5]),\n     title_text=\"Confirmed Cases\"), \n     row=1, col=1)\n\nfig_statewise.add_trace(go.Pie(\n     values=df_active['Active'],\n     labels=df_active['State'],\n     domain=dict(x=[0.5, 1.0]),\n     title_text=\"Active Cases\"),\n    row=1, col=2)\n\nfig_statewise.add_trace(go.Pie(\n     values=df_recovered['Recovered'],\n     labels=df_recovered['State'],\n     domain=dict(x=[0, 0.5]),\n     title_text=\"Recovered\"),\n    row=2, col=1)\n\nfig_statewise.add_trace(go.Pie(\n     values=df_death['Deaths'],\n     labels=df_death['State'],\n     domain=dict(x=[0.5, 1.0]),\n     title_text=\"Deaths\"),\n    row=2, col=2)\n\nfig_statewise.update_traces(hoverinfo='label+percent+name', textinfo='none')\nfig_statewise.show()","9537f57b":"statewise_5k = statewise[statewise['Confirmed'] >= 5000]\nstatewise_5k = statewise_5k[statewise_5k['State'] != 'State Unassigned']\nstatewise_5k = statewise_5k[statewise_5k['State'] != 'Total']","d74c5100":"fig = go.Figure(data=[\n    go.Bar(name='Confirmed', x=statewise_5k['State'], y=statewise_5k['Confirmed'], marker_color = 'Blue'),\n    go.Bar(name='Recovered', x=statewise_5k['State'], y=statewise_5k['Recovered'], marker_color = 'Green'),\n    go.Bar(name='Deceased', x=statewise_5k['State'], y=statewise_5k['Deaths'], marker_color = 'Red')\n])\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.show()","8e5a1537":"net_updated = statewise[['State', 'Confirmed', 'Active', 'Recovered', 'Deaths']]\nnet_updated['Mortaliy Rate'] = net_updated['Deaths']\/net_updated['Confirmed']\nnet_updated['Recovery Rate'] = net_updated['Recovered']\/net_updated['Confirmed']\nnet_updated = net_updated.fillna(0)\nnet_updated.style.background_gradient(cmap = 'Reds')","89d6d582":"delta_updated = statewise[(statewise['Delta_Confirmed'] > 0) | (statewise['Delta_Recovered'] > 0) | (statewise['Delta_Deaths'] > 0)]\ndelta_updated = delta_updated[['State', 'Last_Updated_Time', 'Delta_Confirmed', 'Delta_Recovered', 'Delta_Deaths']]\ndelta_updated.style.background_gradient(cmap='Blues')","c97f98b0":"beds = pd.read_json('https:\/\/api.rootnet.in\/covid19-in\/hospitals\/beds.json')\nbeds = pd.DataFrame(beds['data']['regional'])","2572f2e3":"statewise_beds = beds[['state', 'totalBeds']]\nstatewise_beds = statewise_beds[statewise_beds['state'] != 'INDIA']\nstatewise_beds = statewise_beds.sort_values(by = 'totalBeds', ascending = False)\nstatewise_beds.style.background_gradient(cmap='Greens')","19e58dcb":"fig = px.bar(statewise_beds, \n            x = 'totalBeds',\n            y = 'state', \n            orientation = 'h',\n            title = 'Hospital beds in each state', \n            color = 'state')\nfig.show()","09d85362":"urban_rural_beds = beds[['state', 'urbanHospitals','ruralHospitals']]\nurban_rural_beds = urban_rural_beds[urban_rural_beds['state'] != 'INDIA']\nurban_rural_beds.style.background_gradient(cmap='Greys')","25152cdc":"fig = go.Figure(data=[\n    go.Bar(name='Urban Hospitals', x=urban_rural_beds['state'], y=urban_rural_beds['urbanHospitals']),\n    go.Bar(name='Rural Hospitals', x=urban_rural_beds['state'], y=urban_rural_beds['ruralHospitals'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.show()","a91716c4":"urban_rural_beds = beds[['state', 'urbanBeds','ruralBeds']]\nurban_rural_beds = urban_rural_beds[urban_rural_beds['state'] != 'INDIA']\nurban_rural_beds.style.background_gradient(cmap='Blues')","8bf8d13a":"fig = go.Figure(data=[\n    go.Bar(name='Urban Beds', x=urban_rural_beds['state'], y=urban_rural_beds['urbanBeds']),\n    go.Bar(name='Rural Beds', x=urban_rural_beds['state'], y=urban_rural_beds['ruralBeds'])\n])\nfig.update_layout(barmode='group')\nfig.show()","fb7e889a":"samples_tested = icmr_tested[['Update Time Stamp', 'Total Samples Tested']]\nsamples_tested = samples_tested.set_index('Update Time Stamp')\nsamples_tested = samples_tested.diff()\nsamples_tested = samples_tested.reset_index()\nsamples_tested['Update Time Stamp'] = pd.to_datetime(samples_tested['Update Time Stamp'])\nsamples_tested['Update Time Stamp'] = samples_tested['Update Time Stamp'].dt.strftime('%d-%m-%Y')\nsamples_tested['Date'] = pd.DatetimeIndex(samples_tested['Update Time Stamp']).date\nsamples_tested['Month'] = pd.DatetimeIndex(samples_tested['Update Time Stamp']).month\nsamples_tested = samples_tested[['Date', 'Month', 'Total Samples Tested']]\nsamples_tested = samples_tested.fillna(0)\nsamples_tested.head()","7784a533":"fig_daily_tested = px.scatter(samples_tested,\n                          x = 'Date',\n                          y = 'Total Samples Tested',\n                          color = 'Month',\n                          hover_data = ['Date', 'Total Samples Tested'],\n                          size = 'Total Samples Tested',\n                          title = 'Number of Samples Tested Daily')\nfig_daily_tested.show()","3688031b":"indivisuals_tested_pm = icmr_tested[['Update Time Stamp', 'Tests per million']]\nindivisuals_tested_pm['Date'] = pd.to_datetime(indivisuals_tested_pm['Update Time Stamp'])\nindivisuals_tested_pm['Date'] = indivisuals_tested_pm['Date'].dt.strftime('%d-%m-%Y')\nindivisuals_tested_pm['Month'] = pd.DatetimeIndex(indivisuals_tested_pm['Date']).month\nindivisuals_tested_pm = indivisuals_tested_pm.fillna(0)","aa0b9b7d":"fig_pm = px.scatter(indivisuals_tested_pm,\n                   x = 'Date',\n                   y = 'Tests per million', \n                   size = 'Tests per million',\n                   color = 'Month',\n                   hover_data = ['Date', 'Tests per million'])\nfig_pm.show()\n","a36ec069":"states = districtwise['State'].unique()\nstate = pd.DataFrame()\ni = 1\nfor col in states:\n    while(i < len(states)):\n        x = districtwise[districtwise['State'] == states[i]].sort_values(by = 'Confirmed', ascending = False).head(5)[['State', 'District', 'Confirmed']]\n        state = pd.concat([state, x])\n        i = i+1\nstate = state[(state['District'] != 'Unknown')]\nstate.style.background_gradient(cmap = 'Reds')","fe1a79ff":"trend = case_time_series[['Date', 'Total Confirmed', 'Total Recovered', 'Total Deceased']]\ntrend['Total Active'] = trend['Total Confirmed'] - (trend['Total Recovered'] + trend['Total Deceased'])","f5189fcc":"fig_trend = go.Figure()\n\nfig_trend.add_trace(go.Scatter(\n    x=trend['Date'], \n    y=trend['Total Confirmed'],\n    mode = 'lines+markers',\n    name = 'Confirmed'\n    ))\nfig_trend.add_trace(go.Scatter(\n    x=trend['Date'], \n    y=trend['Total Active'],\n    mode = 'lines+markers',\n    name = 'Active'\n))\nfig_trend.add_trace(go.Scatter(\n    x=trend['Date'],\n    y=trend['Total Recovered'],\n    mode = 'lines+markers',\n    name = 'Recovered'\n))\nfig_trend.add_trace(go.Scatter(\n    x=trend['Date'],\n    y=trend['Total Deceased'],\n    mode = 'lines+markers',\n    name = 'Deceased'\n))\n\nfig_trend.update_layout(title = 'Trends', showlegend=True)\nfig_trend.update_xaxes(title = '------>Timeline', showline = False)\nfig_trend.update_yaxes(title = '------>Numbers', showline = False)\nfig_trend.show()","02eca50f":"# COVID-19 Analysis, Visualization and Comparison","a6054504":"### 10 worst affected nations","d10d9ae9":"## Impact of COVID-19 in India","de01c28d":"## Resources\n* https:\/\/covid.ourworldindata.org\/data\/ <br>\n* https:\/\/data.humdata.org\/hxlproxy\/api\/data-preview <br>\n* https:\/\/api.covid19india.org\/csv\/latest\/ <br>\n* https:\/\/api.rootnet.in\/covid19-in\/hospitals\/beds <br>\n* https:\/\/www.kaggle.com\/tarunkr\/covid-19-case-study-analysis-viz-comparisons","877dac5b":"### Global Overview","eb9792c1":"### Importing Libraries"}}