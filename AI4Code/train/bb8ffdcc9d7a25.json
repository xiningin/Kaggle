{"cell_type":{"c9fcdae1":"code","ce0a129f":"code","d36de7c9":"code","e9f790ea":"code","3c0302aa":"code","38ef1fdb":"code","22f2a19f":"code","aecdd0b0":"code","22b2a779":"code","503c4829":"code","6cccd309":"code","e942026c":"code","4c377c7d":"code","d570379e":"code","99dee229":"code","830e1f96":"code","d8c705ba":"code","82d33cfc":"code","6a5ead69":"code","5176cdfd":"code","3d29ee39":"code","b6ee0ae2":"code","b6785652":"code","a08e86c3":"code","af2f99c7":"code","44cff022":"code","3dc1c721":"code","ce3b15db":"code","0594a337":"code","40320c6a":"code","026079a1":"code","b670f139":"code","c97ed878":"code","f89a572c":"code","2ccace5a":"code","4a281695":"code","37669003":"code","bd823428":"code","33d8e3cc":"code","449dabde":"code","ad8751cf":"code","4c3419d0":"code","a6a0ec34":"code","0d8225f9":"code","126095df":"code","a1ee7775":"code","3d30eec9":"code","c727a694":"code","b947b377":"code","aea9f83d":"code","2ccd7c35":"code","4a75ac43":"code","b6639a2d":"code","2b56d79e":"code","3a303f4e":"code","a29dcede":"code","1ec6bda4":"code","8851dad6":"code","b9cb4e2f":"code","94ba0f4a":"code","a9d815df":"code","0db209b9":"code","3699ce24":"code","3b79ea2e":"code","6fe94965":"code","520d7741":"code","a923951b":"markdown","2d8e5541":"markdown","f5ec2c8f":"markdown","9cfd3ce6":"markdown","3e6f5f8f":"markdown","aa5669b5":"markdown","611b73be":"markdown","18a62573":"markdown","72c8c6bf":"markdown","aa03de21":"markdown","8ae2cf56":"markdown","b64ae497":"markdown","046c8408":"markdown","0b9bc1df":"markdown","4ac277be":"markdown","0a9eecf7":"markdown","18cd794a":"markdown","6afc843d":"markdown","2622f8ef":"markdown"},"source":{"c9fcdae1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression , Ridge , LogisticRegression\nfrom sklearn.preprocessing import LabelEncoder , PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score , mean_squared_error\nfrom scipy import stats\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn.over_sampling import SMOTE\nfrom graphviz import Source\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix , classification_report\nfrom mlxtend.plotting import plot_confusion_matrix\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings('ignore')","ce0a129f":"credit = pd.read_csv('..\/input\/default-of-credit-card-clients\/default of credit card clients.csv')","d36de7c9":"credit.head()","e9f790ea":"credit.info()","3c0302aa":"credit.describe()","38ef1fdb":"credit.isnull().sum()","22f2a19f":"credit = credit.drop('ID' , axis=1)","aecdd0b0":"# count the duplicated cases\ncredit.duplicated().sum()","22b2a779":"credit = credit.drop_duplicates()","503c4829":"credit['dpnm'].value_counts()","6cccd309":"fig, ax = plt.subplots(figsize=(25,15))\nsns.heatmap(credit.corr(),annot=True,cmap=\"YlGnBu\" , ax=ax)","e942026c":"# X2: Gender (1 = male; 2 = female)\ncredit['SEX'].value_counts()","4c377c7d":"sns.set_palette(\"RdBu\")\npositions = (1, 2)\nlabels = (\"Male\", \"Female\")\nsns.kdeplot(x='SEX',data= credit)\nplt.xticks(positions,labels)","d570379e":"# X2: Gender (1 = male; 2 = female)\n# dpnm = 0 or 1\nsns.set_palette(\"Paired\")\nf, ax = plt.subplots(2,figsize=(10,10))\ngender=credit['SEX'].unique()\nlist=['male','female']\ni=0\nfor g in gender :\n  data = credit[credit['SEX']==g]\n  data = data['dpnm'].value_counts()\/data.shape[0]*100\n  data.plot.pie(shadow = True, autopct=\"%.1f%%\",explode=(0,0.3), ax=ax[i])   \n  ax[i].set_title(list[i])\n  i+=1","99dee229":"sns.set_palette(\"tab10\")\npositions = (0, 1)\nlabels = (\"Male\", \"Female\")\nsns.catplot(x='SEX' , y='LIMIT_BAL' , hue='dpnm' , kind='box' , data = credit) \nplt.xticks(positions,labels)","830e1f96":"# X3: Education (1 = graduate school; 2 = university; 3 = high school; 0, 4, 5, 6 = others)\ncredit['EDUCATION'].value_counts()","d8c705ba":"sns.set_palette(\"RdBu\")\ndef rep(Edu):\n  if Edu in [0,4,5,6]:\n    return 4\n  else:\n    return Edu  \n\ncredit['EDUCATION'] = credit['EDUCATION'].apply(rep)     \npositions = (1,2,3,4)\nlabels = (\"graduate school\", \"university\" , 'high school','others')\nsns.kdeplot(x='EDUCATION',data= credit)\nplt.xticks(positions,labels)","82d33cfc":"# X3: Education (1 = graduate school; 2 = university; 3 = high school; 0, 4, 5, 6 = others)\nsns.set_palette(\"Paired\")\nf, ax = plt.subplots(2,2,figsize=(10,10))\nEdu=[1,2,3,4]\nlist = ['graduate school','university','high school','others']\ni=0\nj=0\nfor e in Edu :\n  data = credit[credit['EDUCATION']==e]\n  data = data['dpnm'].value_counts()\/data.shape[0]*100\n  data.plot.pie(shadow = True, autopct=\"%.1f%%\",explode=(0,0.3), ax=ax[i][j])   \n  #data.plot.pie ()\n  ax[i][j].set_title(list[e-1])\n  j+=1\n  if j%2 == 0:\n    i+=1\n    j=0","6a5ead69":"sns.set_palette(\"tab10\")\npositions = (0,1,2,3)\nlabels = (\"graduate school\", \"university\" , 'high school','others')\nsns.catplot(x='EDUCATION' , y='LIMIT_BAL' , hue='dpnm' , kind='box' , data = credit) \nplt.xticks(positions,labels)","5176cdfd":"# X4: Marital status (1 = married; 2 = single; 3 = divorce; 0=others).\ncredit['MARRIAGE'].value_counts()","3d29ee39":"sns.set_palette(\"RdBu\")\npositions = (0, 1 , 2 , 3)\nlabels = ('others','married', 'single', 'divorce')\nsns.kdeplot(x='MARRIAGE',data= credit)\nplt.xticks(positions,labels)","b6ee0ae2":"# X4: Marital status (1 = married; 2 = single; 3 = divorce; 0=others).\nsns.set_palette(\"Paired\")\nf, ax = plt.subplots(2,2,figsize=(10,10))\nm_status=credit['MARRIAGE'].unique()\nlist=['married','single','divorce', 'others']\ni=0\nj=0\nfor m in m_status :\n  data = credit[credit['MARRIAGE']==m]\n  data = data['dpnm'].value_counts()\/data.shape[0]*100\n  data.plot.pie(shadow = True, autopct=\"%.1f%%\",explode=(0,0.3), ax=ax[i][j])\n  ax[i][j].set_title(list[m-1])\n  j+=1\n  if j%2 == 0:\n    i+=1\n    j=0","b6785652":"sns.set_palette(\"tab10\")\npositions = (0,1,2,3)\nlabels = ('others','married','single','divorce')\nsns.catplot(x='MARRIAGE' , y='LIMIT_BAL' , hue='dpnm' , kind='box' , data = credit) \nplt.xticks(positions,labels)","a08e86c3":"sns.set_palette(\"RdBu\")\nsns.kdeplot(x='AGE',data= credit)","af2f99c7":"sns.set_palette(\"Paired\")\ncredit1 = credit.copy()\ndef category(age):\n  if age <= 40:\n    return '<=40'\n  elif age <= 60:\n    return '<=60'\n  elif age <= 80:\n    return '<=80'\ncredit1['AGE'] = credit1['AGE'].apply(category)\n\nf, ax = plt.subplots(3,figsize=(10,10))\nage=credit1['AGE'].unique()\ni=0\nfor a in age :\n  data = credit1[credit1['AGE']== a]\n  data = data['dpnm'].value_counts()\/data.shape[0]*100\n  data.plot.pie(shadow = True, autopct=\"%.1f%%\", ax=ax[i])\n\n  ax[i].set_title(a)\n  i+=1\n\n     ","44cff022":"sns.set_palette(\"tab10\")\nsns.catplot(x='AGE' , y='LIMIT_BAL' , hue='dpnm' , kind='box' , data = credit1) ","3dc1c721":"g = sns.JointGrid(data=credit[credit['dpnm']==1], x=\"LIMIT_BAL\", y=\"AGE\"  )\ng.plot(sns.scatterplot, sns.kdeplot)\ng.refline(x=200000,y=35)\ng.refline(x=40000,y=25)","ce3b15db":"g = sns.JointGrid(data=credit[credit['dpnm']==1], x=\"LIMIT_BAL\", y=\"AGE\" )\ng.plot(sns.scatterplot, sns.boxplot)\ng.refline(x=50000,y=28)\ng.refline(x=200000,y=42)","0594a337":"print(credit.columns)","40320c6a":"sns.set_palette(\"Paired\")\nfor pay in ['PAY_6' , 'PAY_5', 'PAY_4','PAY_3', 'PAY_2', 'PAY_1']:\n  sns.catplot(x= pay,y='LIMIT_BAL' , hue='dpnm' , data = credit)","026079a1":"#X4: Marital status (1 = married; 2 = single; 3 = divorce; 0=others)\nsns.set_palette(\"tab10\")\npositions = (0,1,2,3)\nlabels = ('others','married','single','divorce')\nsns.catplot( x='MARRIAGE',y='LIMIT_BAL', hue='dpnm', data = credit,col='SEX', kind='box')\nplt.xticks(positions,labels) ","b670f139":"labeled = credit.copy()\nlabeled['MARRIAGE'] = labeled['MARRIAGE'].replace([0,1,2,3],['others','married','single','divorce'])\nlabeled['EDUCATION'] = labeled['EDUCATION'].replace([1,2,3,4],['graduate school', 'university' , 'high school','others'])\nlabeled['SEX'] = labeled['SEX'].replace([1,2],[\"Male\", \"Female\"])","c97ed878":"labeled[labeled['dpnm']==1].groupby(['SEX','MARRIAGE','EDUCATION'])['LIMIT_BAL'].sum().sort_values(ascending=False)[0:10].plot(kind = \"bar\",figsize=(9,9),color='pink')","f89a572c":"sns.set_palette('Paired')\nlabeled.groupby(['SEX','MARRIAGE','EDUCATION','dpnm'])['LIMIT_BAL'].sum().sort_values(ascending=False).unstack().plot(kind = \"bar\" , figsize=(20,10))","2ccace5a":"sns.set_palette(\"tab10\")\nratio = labeled.groupby(['SEX','MARRIAGE','EDUCATION','dpnm'])['LIMIT_BAL'].sum().sort_values(ascending=False).unstack()\nratio = ratio.replace(np.NaN,0)\nratio['ratio_dpnm']=ratio[1]\/ratio[0]\nratio['ratio_dpnm'].sort_values(ascending=False)[0:20].plot(kind='bar' , figsize=(20,10) , y = 1,color='pink')","4a281695":"ratio['ratio_dpnm'] = (ratio['ratio_dpnm']-ratio['ratio_dpnm'].min())\/(ratio['ratio_dpnm'].max()-ratio['ratio_dpnm'].min())\nratio[1] = (ratio[1]-ratio[1].min())\/(ratio[1].max()-ratio[1].min())\nratio.plot(kind='bar' , figsize=(20,10) , y = [1,'ratio_dpnm'])","37669003":"ratio['ratio']=ratio['ratio_dpnm']*ratio[1]\nratio['ratio'].sort_values(ascending=False)[0:10].plot(kind='bar' , figsize=(20,10),color='pink')","bd823428":"plt.figure(figsize=(20,20))\ncredit.boxplot()","33d8e3cc":"sns.boxplot(x='AGE',data=credit)","449dabde":"for pay in ['PAY_6' , 'PAY_5', 'PAY_4','PAY_3', 'PAY_2', 'PAY_1']:\n  sns.catplot(x= pay , kind='box' ,data = credit)","ad8751cf":"#sns.boxplot(x='LIMIT_BALL',data=credit)\nsns.catplot(x= 'LIMIT_BAL' , kind='box' ,data = credit)","4c3419d0":"# removing outlier\ncred = credit[(credit['AGE']<=60) & (credit['PAY_1']<=2) & (credit['PAY_2']<=2) & (credit['PAY_3']<=2) & (credit['PAY_4']<=2) & (credit['PAY_5']<=2) & (credit['PAY_6']<=2) & (credit['LIMIT_BAL']<=600000)  ]","a6a0ec34":"# only 22 %\ncred['dpnm'].value_counts()","0d8225f9":"x=cred.drop(\"dpnm\", axis=1)\nx = (x-x.mean())\/x.std()\ny = cred[\"dpnm\"].values","126095df":"sm = SMOTE(random_state=42) # 15000\/23335\nx_res, y_res = sm.fit_resample(x, y)","a1ee7775":"x_train, x_test, y_train,y_test = train_test_split(x_res, y_res,test_size= 0.2, random_state = 42)","3d30eec9":"gnb = GaussianNB()\ngnb.fit(x_train,y_train)\nprint(gnb.score(x_train,y_train))\nprint(gnb.score(x_test,y_test))","c727a694":"logr=LogisticRegression(solver='liblinear',random_state=42)\nlogr.fit(x_train,y_train)\nprint(logr.score(x_train,y_train))\nprint(logr.score(x_test,y_test))","b947b377":"kclf = KNeighborsClassifier(n_neighbors=90)\nkclf.fit(x_train,y_train)\nprint(kclf.score(x_train,y_train))\nprint(kclf.score(x_test,y_test))","aea9f83d":"dt = DecisionTreeClassifier(max_depth=6 , max_features=10 , random_state=42)\ndt.fit(x_train,y_train)\nprint(dt.score(x_train,y_train))\nprint(dt.score(x_test,y_test))","2ccd7c35":"fig = plt.figure(figsize=(6,6))\ndot_data=tree.export_graphviz(dt)\nSource(dot_data)","4a75ac43":"rf = RandomForestClassifier(max_depth=6, max_features=10, random_state=42)\nrf.fit(x_train,y_train)\nprint(rf.score(x_train,y_train))\nprint(rf.score(x_test,y_test))","b6639a2d":"xgb = XGBClassifier(max_depth=6, random_state=42,learning_rate=0.01)\nxgb.fit(x_train,y_train)\nprint(xgb.score(x_train,y_train))\nprint(xgb.score(x_test,y_test))","2b56d79e":"y_pred1 = xgb.predict(x_test)","3a303f4e":"plot_confusion_matrix (confusion_matrix(y_test,y_pred1 ))","a29dcede":"print(classification_report(y_test, y_pred1))","1ec6bda4":"clfs = [\n    {\"Model\":RandomForestClassifier(),\"Parameters\":{'max_depth': [7,8], 'max_features': [7,8], 'n_estimators': [60,70]}},\n    {\"Model\":KNeighborsClassifier(),\"Parameters\":{\"n_neighbors\":[2,3],'algorithm':['auto', 'ball_tree']}}\n]","8851dad6":"from sklearn.metrics import f1_score,plot_roc_curve,accuracy_score,roc_curve,roc_auc_score,recall_score\nfor clf in clfs:\n    grid = GridSearchCV(estimator=clf['Model'], param_grid=clf['Parameters'] , cv = 10 )\n    grid_result =grid.fit(x_train, y_train)\n    print(grid_result.best_score_, grid_result.best_params_)\n    model1=grid_result.best_estimator_\n    plot_roc_curve(model1, x_test, y_test)\n    y_pred = model1.predict(x_test)\n    print(model1)\n    print(\"--------------------------------------\")\n    print(classification_report(y_test,y_pred))\n    print(\"======================================\")\n","b9cb4e2f":"parm_grid = {'max_depth': [7,11],'learning_rate':[0.2,0.5],'eval_metric':['mlogloss'] }","94ba0f4a":"xgb = XGBClassifier()\ngrid = GridSearchCV(estimator=xgb, param_grid=parm_grid , cv = 10 )\ngrid_result =grid.fit(x_train, y_train)","a9d815df":"print(grid_result.best_score_, grid_result.best_params_)","0db209b9":"model=grid_result.best_estimator_","3699ce24":"y_pred2=model.predict(x_test)","3b79ea2e":"accuracy_score(y_test,y_pred2)","6fe94965":"print(classification_report(y_test, y_pred2))","520d7741":"plot_roc_curve(model, x_test, y_test)","a923951b":"married is higher in the three graphs so they are a big problem\n\nsingle is the the second higher problem (not paying,large number)\n\ndivorce and others are not a serious problem ","2d8e5541":"\"This research employed a binary variable, default payment (Yes = 1, No = 0), as the response variable. This study reviewed the literature and used the following 23 variables as explanatory variables:\n\nX1: Amount of the given credit (NT dollar): it includes both the individual consumer credit and his\/her family (supplementary) credit.\n\nX2: Gender (1 = male; 2 = female).\n\nX3: Education (1 = graduate school; 2 = university; 3 = high school; 0, 4, 5, 6 = others).\n\nX4: Marital status (1 = married; 2 = single; 3 = divorce; 0=others).\n\nX5: Age (year).\n\nX6 - X11: History of past payment. We tracked the past monthly payment records (from April to September, 2005) as follows: X6 = the repayment status in September, 2005; X7 = the repayment status in August, 2005; . . .;X11 = the repayment status in April, 2005. The measurement scale for the repayment status is:\n\n-2: No consumption; -1: Paid in full; 0: The use of revolving credit; 1 = payment delay for one month; 2 = payment delay for two months; . . .; 8 = payment delay for eight months; 9 = payment delay for nine months and above.\n\nX12-X17: Amount of bill statement (NT dollar). X12 = amount of bill statement in September, 2005; X13 = amount of bill statement in August, 2005; . . .; X17 = amount of bill statement in April, 2005.\n\nX18-X23: Amount of previous payment (NT dollar). X18 = amount paid in September, 2005; X19 = amount paid in August, 2005; . . .;X23 = amount paid in April, 2005.\n\nY: client's behavior; Y=0 then not default, Y=1 then default\"","f5ec2c8f":"# The ratio between the ones who don't pay to the ones who pay  ","9cfd3ce6":"from the graph we see that the worst category was (female,married,university)\n\nmost of the top borrowing were females\nmost of the top borrowing were university or graduate schools","3e6f5f8f":"# the ratio for each category representing the worst category that borrows alot of money and also has a higher ratio of people that don't pay ","aa5669b5":"# the relation between not paying and borrowing a lot of money","611b73be":"male and divorce is more likely to borrow","18a62573":"# The most ten categories who borrowed much money","72c8c6bf":"females are not paying back more than men and also more than men\n\nfemale are not reliable and their numbers are great\n\nwe should put more restrictions on them and lend them less ","aa03de21":"from age 20 to 40 is the most problem ","8ae2cf56":"# The dpnm 0 or 1 for each category","b64ae497":"if a borrower didn't pay back more than one month then probably he will not pay at all\n\nwe notice that a one month delay is increasing when month increase","046c8408":"the (female,single,graduate school) is the most paying back category but also the second most borrowing category ","0b9bc1df":"females are not paying back more than men and also more than men\nfemale are not reliable and their numbers are great\nwe should put more restrictions on them and lend them less\n\nfrom age 20 to 42 is the most problem\n\nif a borrower has a delay in paying back more than one month then probably he will not pay at the next months \n\nwe notice that people are tending to have a 1 month delay over months\n\nthe (female,single,graduate school) is the most paying back category but also the second most borrowing category\n\nMale and divorce is the worst category either with graduate school or university\n\nthe married and single categories are the most worst categories\n\nwe see that the worst category at all was (female,married,university) as we saw from the graphs before","4ac277be":"we find that a huge percentage in Males don't pay in the first categories but in general females are worse than men in paying back\n\nMale and divorce is the worst category either with graduate school or university ","0a9eecf7":"from age 25 to 42 is the most problem","18cd794a":"## conclusion","6afc843d":"others are the most reliable and less in number but has a higher tendency to borrow large money but this is not important as they are small\n\nhigh school are the most un reliable but they are small and has less tendency to borrow much money so I don't care about them\n\ngraduate and university are the the main problem because they are large in number and higher tendency (graduate) , not paying back(university)","2622f8ef":"from the graph the worst category was (female,married,university) (the same as the first bar graph)\n\nthe married and single categories are the most worst categories"}}