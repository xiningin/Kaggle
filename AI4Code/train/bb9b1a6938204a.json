{"cell_type":{"efb7e883":"code","507be538":"code","a76fb1a7":"code","d391ed7f":"code","7ceef214":"code","cffe1ef3":"code","c6a41aa0":"code","a7dea3be":"code","5fe75a77":"code","47863d8d":"code","5f9d33c4":"code","e338ebc9":"code","36efb0fa":"code","78fe0476":"code","75bff1d7":"code","56133004":"code","27b90387":"code","0e04f19a":"code","233898f8":"code","f5f32990":"markdown","32d906e3":"markdown","54704335":"markdown","aef44779":"markdown","7e8537bc":"markdown","b4c2702d":"markdown","c71bbef9":"markdown","6746ac84":"markdown","ce756326":"markdown"},"source":{"efb7e883":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\nimport plotly as pty\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\n# Set notebook mode to work in offline\npyo.init_notebook_mode()\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","507be538":"transaction = pd.read_csv(\"\/kaggle\/input\/anz-synthesised-transaction-dataset\/anz.csv\")","a76fb1a7":"# Overview of data\ntransaction.head()","d391ed7f":"# to check columns in data\ntransaction.info()","7ceef214":"transaction['status'].unique()","cffe1ef3":"# The visualisation represents the amount of transaction done by females and mals based on status. \n\nimport plotly.express as px\npx.bar(transaction,x='status',y='amount',color='gender',barmode='group')","c6a41aa0":"# Amount of transaction date wise\npx.line(transaction.groupby(['date']).sum()['amount'])","a7dea3be":"# average amount of transaction\npx.line(transaction.groupby(['date']).mean()['amount'])","5fe75a77":"# mean amount of transactions executed per day\ntransaction.groupby(['date']).sum()['amount'].mean()","47863d8d":"# Statewise representation of amount \n\npx.bar(transaction,x=transaction['merchant_state'].dropna().unique(),y=transaction.groupby(['merchant_state']).sum()['amount'])","5f9d33c4":"# Convert the date column from string to datetime type\ntransaction['date']=pd.to_datetime(transaction['date'])","e338ebc9":"# To get the mean amount of transactions per month\ntransaction.groupby(transaction['date'].dt.strftime('%B'))['amount'].mean()","36efb0fa":"transaction.groupby(transaction['date'].dt.strftime('%B'))['amount'].count()","78fe0476":"transaction['long_lat'].head()","75bff1d7":"# Representation of transaction data on map\n\nlat = []\nlon = []\n\n# For each row in a varible,\nfor row in transaction['long_lat']:\n    # Try to,\n    try:\n        # Split the row by comma and append\n        # everything before the comma to long\n        lon.append(row.split(' ')[0])\n        # Split the row by comma and append\n        # everything after the comma to lat\n        lat.append(row.split(' ')[1])\n    # But if you get an error\n    except:\n        # append a missing value to lat\n        lon.append(np.NaN)\n        # append a missing value to lon\n        lat.append(np.NaN)\n\n# Create two new columns from lat and lon\ntransaction['latitude'] = lat\ntransaction['longitude'] = lon","56133004":"transaction['latitude'].head()","27b90387":"transaction['latitude']=pd.to_numeric(transaction['latitude'])\ntransaction['longitude']=pd.to_numeric(transaction['longitude'])","0e04f19a":"import math","233898f8":"map = folium.Map(location=['-25.2744','133.7751'],tiles='cartodbpositron',zoom_start=5)\n\n\nmc = MarkerCluster()\nfor idx, row in transaction.iterrows():\n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker([row['latitude'], row['longitude']]))\nmap.add_child(mc)\n\n\n\nmap","f5f32990":"### Mean amount of transactions done per day : 24871.254945","32d906e3":"### Both females and males have nearly equal amount of authorized transactions while in case of posted transactions the males are far ahead of females.","54704335":"### Average amounts of transactions made by customers for months August,September and October are 185.121, 182.045 and 196.427","aef44779":"### Here we can conclude that the New South Wales and Tasmania states have transacrtions with very high amounts.\n### While Queensland, Victoria and northan territory have low amounts of transactions.","7e8537bc":"### Number of transactions done per month  :\n### August : 3943   September : 4087  October : 4013","b4c2702d":"### From the above line plot we can infer that the amount of transaction is remarkably low on weekends especially on sunday.","c71bbef9":"# Data@ANZ Virtual Internship Program :\n## Here is my attempt to get some useful insights from the transaction data.","6746ac84":"### From the above interactive map we can conclude that the majority of transactions are done from Melbourne, Sydney, Brisbane and Perth.","ce756326":"## Insights achieved from data visualisations :\n### 1. Both females and males have nearly equal amount of authorized transactions while in case of posted transactions the males are far ahead of females.\n### 2. The amount of transaction is remarkably low on weekends especially on sunday.\n### 3. Mean amount of transactions done per day : 24871.254945\n### 4.  The New South Wales and Tasmania states have transacrtions with very high amounts,\n### while Queensland, Victoria and northan territory have low amounts of transactions.\n### 5. Average amounts of transactions made by customers for months August,September and October are 185.121, 182.045 and 196.427 .\n### 6. Number of transactions done per month :\n### August : 3943 \n### September : 4087 \n### October : 4013\n### 7. The majority of transactions are done from Melbourne, Sydney, Brisbane and Perth."}}