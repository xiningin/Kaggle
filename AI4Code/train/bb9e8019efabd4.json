{"cell_type":{"dfeeddc7":"code","2ad64724":"code","649992e8":"code","e94feae0":"code","839b0d99":"code","ce4e3fb4":"code","1a9f560a":"code","470e45f5":"code","7a7c737c":"code","a0aea84a":"code","e9a517f6":"code","3f4261e8":"code","0e9542d8":"code","349e032f":"code","4b7447bd":"code","aa242207":"code","4a0e0db9":"code","aa6736b3":"code","c332ca06":"code","c4c8d529":"code","3cffaa2c":"code","a596705d":"code","7586a4e9":"code","a019ce08":"code","d0289273":"code","658fa6e4":"code","aa9242b1":"code","fd0f1037":"code","6f1c0d85":"code","dab541c4":"code","a1702bc3":"markdown","93d6e5c9":"markdown","8943eae4":"markdown","a8f4f93a":"markdown","9c0bcd35":"markdown","21150c1a":"markdown","126e559e":"markdown","cefb5943":"markdown","5ad3b4b5":"markdown","5e90aa04":"markdown","01896c59":"markdown","73a9eaf3":"markdown","12978c67":"markdown","1d45004f":"markdown","fab943ef":"markdown","6fc12cb6":"markdown","5f75e14b":"markdown","0a9ababb":"markdown","1892a225":"markdown"},"source":{"dfeeddc7":"# Importing libraries\n\nimport pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.express as px\n\nimport matplotlib.pyplot as plt\nimport bq_helper\n\n%matplotlib inline","2ad64724":"# To use BigQuery, we'll import the Python package below:\n\nfrom google.cloud import bigquery\n\n# Create a \"Client\" object\n\nclient = bigquery.Client()","649992e8":"# Construct a reference to the \"google_analytics_sample\" dataset\n\ndataset_ref = client.dataset(\"google_analytics_sample\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\n\ndataset = client.get_dataset(dataset_ref)","e94feae0":"# List all the tables in the \"google_analytics_sample\" dataset\n\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset \n\nfor table in tables:  \n    print(table.table_id)","839b0d99":"# Construct a reference to the \"ga_sessions_20170701\" table\n\ntable_ref_20170701 = dataset_ref.table(\"ga_sessions_20170701\")\n\n# API request - fetch the table\n\ntable_20170701 = client.get_table(table_ref_20170701)\n","ce4e3fb4":"# Preview the first five lines of the \"ga_sessions_20170701\" table\n\nclient.list_rows(table, max_results=5).to_dataframe()","1a9f560a":"# Print information on all the columns in the \"ga_sessions_20170701\" table in the \"google_analytics_sample\" dataset\n\ntable_20170701.schema","470e45f5":"# Users\n\nquery = \"\"\"\n\nSELECT\n    COUNT(DISTINCT fullvisitorId) AS users\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","7a7c737c":"# New Users\n\nquery = \"\"\"\n\nSELECT\n    COUNT(DISTINCT CASE WHEN visitNumber = 1 THEN fullvisitorId END) AS new_users\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","a0aea84a":"# Number of Sessions per User\n\nquery = \"\"\"\n\nSELECT\n  round(sessions\/users,2) AS sessions_per_users\nFROM (\n  SELECT\n    COUNT(DISTINCT fullvisitorId) AS users,\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n  FROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1)\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n","e9a517f6":"# Sessions\n\nquery = \"\"\"\n\nSELECT\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n  FROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\n    \n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","3f4261e8":"# Average Session Duration\n\nquery = \"\"\"\n\nSELECT\n  total_session_duration\/sessions AS avg_session_duration\nFROM (\n  SELECT\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    SUM(totals.timeOnSite\/ totals.hits ) AS total_session_duration\n  FROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1)\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n","0e9542d8":"# Pageviews\n\nquery = \"\"\"\n\nSELECT\n    COUNT(DISTINCT CASE WHEN hits.type = \"PAGE\" THEN CONCAT(fullvisitorID, cast(visitId as STRING), date, hits.hitNumber) END) as pageviews\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n\n    ","349e032f":"# Pages per Session\n\nquery = \"\"\"\n\nSELECT\n  round(pageviews\/sessions,2) AS pageviews_per_session\nFROM (\n  SELECT\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    COUNT(DISTINCT CASE WHEN hits.type = \"PAGE\" THEN CONCAT(fullvisitorID, cast(visitId as STRING), date, hits.hitNumber) END) as pageviews\n  FROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1)\n    \n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","4b7447bd":"# Bounces and Bounce Rate\n\nquery = \"\"\"\n\nSELECT\n  ROUND(bounces\/sessions*100,2) AS bounce_rate\nFROM (\n  SELECT\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    COUNT(DISTINCT CASE WHEN totals.bounces = 1 THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) END) AS bounces\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1)\n    \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n\n  ","aa242207":"# User Engagement\n\nquery = \"\"\"\n\nSELECT\n    marketing_channel,\n    users,\n    pageviews,\n    sessions,\n    ROUND(pageviews\/sessions,2) AS pageviews_per_session\nFROM (\n  SELECT\n    channelGrouping AS marketing_channel,\n    COUNT(DISTINCT fullvisitorId) AS users,\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    COUNT(DISTINCT CASE WHEN hits.type = \"PAGE\" THEN CONCAT(fullvisitorID, cast(visitId as STRING), date, hits.hitNumber) END) as pageviews\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\n  WHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\n    GROUP BY marketing_channel)\n    ORDER BY pageviews_per_session DESC\n    \n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","4a0e0db9":"# Total Revenue by Source\n\nquery = \"\"\"\n\nSELECT \n    source,\n    COUNT(DISTINCT transactions) AS transactions,\n    SUM(total_revenue\/1000000) AS total_revenue\nFROM (\n    SELECT \n        trafficSource.source AS source,\n        hits.hitNumber AS hit_number, \n        hits.transaction.transactionId AS transactions,\n        hits.transaction.transactionRevenue AS total_revenue \nFROM \n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n    UNNEST (hits) AS hits\nWHERE \n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1)\nGROUP BY source\nORDER BY 3 DESC        \nLIMIT 10\n\n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df    ","aa6736b3":"# Total Revenue by Channel\n\nquery = \"\"\"\n\nSELECT\n  channelGrouping AS marketing_channel,\n  COUNT(DISTINCT hits.transaction.transactionId) as transactions,\n  SUM(hits.transaction.transactionRevenue\/1000000) AS total_revenue\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY marketing_channel\nORDER BY 3 DESC\n \n        \"\"\"\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","c332ca06":"# eCommerce Conversion Rate\n\nquery = \"\"\"\n\nSELECT\n  marketing_channel,\n  transactions,\n  sessions,\n  ROUND(transactions\/sessions*100,2) AS eCom_conversion_rate\nFROM (\n  SELECT\n    channelGrouping AS marketing_channel,\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    COUNT(DISTINCT hits.transaction.transactionId) AS transactions\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY marketing_channel)\nORDER BY 4 DESC  \n        \n        \"\"\"\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","c4c8d529":"# Goal Conversion Rate\n\nquery = \"\"\"\n\nSELECT\n  marketing_channel,\n  registration_goal,\n  sessions,\n  ROUND(registration_goal\/sessions*100,2) AS registration_conversion_rate\nFROM (\n  SELECT\n    channelGrouping AS marketing_channel,\n    COUNT(DISTINCT CASE WHEN hits.page.pagePath = \"\/registersuccess.html\" THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) end) AS registration_goal,\n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY \n    marketing_channel)\nORDER BY 4 DESC\n        \n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n  ","3cffaa2c":"# Landing Page Bounce Rates\n\nquery = \"\"\"\n\nselect\nlanding_page,\nnew_users,\nbounces,\nsessions,\nCASE\n    WHEN sessions = 0 THEN 0\n    ELSE bounces \/ sessions\n  END AS bounce_rate\n  FROM (\nSELECT\n  landing_page,\n  COUNT(DISTINCT CASE WHEN visitNumber = 1 THEN fullvisitorId END) AS new_users,\n  SUM(bounces) AS bounces,\n  SUM(sessions) AS sessions\nFROM (\n  SELECT\n    fullVisitorId,\n    visitStartTime,\n    visitNumber,\n    pagePath AS landing_page,\n    CASE\n      WHEN hitNumber = first_interaction THEN bounces\n      ELSE 0\n    END AS bounces,\n    CASE\n      WHEN hitNumber = first_hit THEN visits\n      ELSE 0\n    END AS sessions\n  FROM (\n    SELECT\n      visitNumber,\n      fullVisitorId,\n      visitStartTime,\n      hits.page.pagePath,\n      totals.bounces,\n      totals.visits,\n      hits.hitNumber,\n      MIN(IF(hits.isInteraction IS NOT NULL,\n          hits.hitNumber,\n          0)) OVER (PARTITION BY fullVisitorId, visitStartTime) AS first_interaction,\n      MIN(hits.hitNumber) OVER (PARTITION BY fullVisitorId, visitStartTime) AS first_hit\n    FROM\n      `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n        UNNEST (hits) AS hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"))\nGROUP BY\n   landing_page)\nORDER BY\n  sessions DESC\nLIMIT 10\n   \n  \"\"\"\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","a596705d":"# Landing Page Exit Rates\n\nquery = \"\"\"\n\nSELECT\n  landing_page,\n  pageviews,\n  exits,\n  CASE\n    WHEN pageviews = 0 THEN 0\n    ELSE exits \/ pageviews\n  END AS exit_rate\nFROM (\n  SELECT\n    pagepath AS landing_page,\n    COUNT(*) AS pageviews,\n    SUM(exits) AS exits\n  FROM (\n    SELECT\n      hits.page.pagePath,\n      CASE\n        WHEN hits.isExit IS NOT NULL THEN 1\n        ELSE 0\n      END AS exits\n     FROM\n      `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n        UNNEST (hits) AS hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\" \n    AND hits.type = 'PAGE')\n  GROUP BY\n    pagePath)\nORDER BY\n  pageviews DESC\n  LIMIT 10\n\n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","7586a4e9":"# Device Category Exit Rates\n\nquery = \"\"\"\n\nSELECT\n    deviceCategory AS device_category,\n    COUNT(hit_number) AS hit_number,\n    ROUND(SUM(bounces)\/SUM(sessions)*100,2) AS bounce_rate\nFROM (\n  SELECT\n    device.deviceCategory,\n    hits.hitNumber AS hit_number, \n    COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n    COUNT(DISTINCT CASE WHEN totals.bounces = 1 THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) END) AS bounces\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) AS hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\nGROUP BY\n    deviceCategory,\n    hitNumber,\n    fullvisitorid,\n    visitid,\n    date)\nGROUP BY\n    device_category\nORDER BY 3 DESC\nLIMIT 10      \n        \n\n      \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n","a019ce08":"# Total Revenue By Product Category\n\nquery = \"\"\"\n\nSELECT \n    product.v2ProductCategory AS product_category,\n    COUNT(DISTINCT hits.transaction.transactionId) as transactions,\n    SUM(hits.transaction.transactionRevenue\/1000000) AS total_revenue\nFROM \n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n    UNNEST (hits) AS hits,\n    UNNEST(hits.product) AS product\nWHERE \n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY product_category\nORDER BY 3 DESC        \nLIMIT 10\n\n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","d0289273":"# Shopping Behaviour \n\nquery = \"\"\"\n\nSELECT\n  product.v2ProductName AS product_name,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"1\" THEN 1 END) AS productListView,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"2\" THEN 1 END) AS productDetailView,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"3\" THEN 1 END) AS addToCart,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"4\" THEN 1 END) AS removeToCart,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"5\" THEN 1 END) AS checkout,\n  SUM(CASE WHEN hits.eCommerceAction.action_type = \"6\" THEN 1 END) AS transaction,\n  \nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) hits,\n    unnest (hits.product) product\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    GROUP BY product_name\nORDER BY transaction DESC\nLIMIT 10\n        \n        \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","658fa6e4":"query = \"\"\"\n\nSELECT\n    hits.eCommerceAction.action_type AS eCommerce_action,\n    COUNT(fullVisitorID) AS hit_number\nFROM\n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) AS hits,\n    UNNEST (hits.product) product\nWHERE\n    _table_suffix BETWEEN \"20170701\" AND \"20170731\"\n    AND\n    (\n    hits.eCommerceAction.action_type != '0' \n    AND \n    hits.eCommerceAction.action_type != '3' \n    AND \n    hits.eCommerceAction.action_type != '4'\n    )\nGROUP BY eCommerce_action\nORDER BY eCommerce_action\nLIMIT 10\n\n        \"\"\"\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","aa9242b1":"query_df['eCommerce_action'] = query_df['eCommerce_action'].astype(str)\nquery_df['eCommerce_action'] = query_df['eCommerce_action'].replace(['1', '2', '5', '6'], ['ProductListView','ProductDetailView','Checkout','Transaction'])\n\nfig = go.Figure(go.Funnel(y = query_df['eCommerce_action'], x = query_df['hit_number'], textposition = 'inside', textinfo = 'value+percent initial'))\nfig.update_layout(title_text = 'Shopping Cart Abandonment')\n\nfig.show()","fd0f1037":"# Browser Bounce Rates\n\nquery = \"\"\"\n\nSELECT \n    browser,\n    bounces,\n    sessions,\n    ROUND(bounces\/sessions*100,2) AS bounce_rate\nFROM (\n    SELECT \n        device.Browser AS browser,\n        COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n        COUNT(DISTINCT CASE WHEN totals.bounces = 1 THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) END) AS bounces\nFROM \n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n    UNNEST (hits) AS hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY browser)\nORDER BY 3 DESC \nLIMIT 10\n\n        \"\"\"\n    \nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df","6f1c0d85":"# Total Revenue By Country\n\nquery = \"\"\"\n    \nSELECT \n    geoNetwork.country AS country,          \n    SUM(hits.transaction.transactionRevenue\/1000000) AS total_revenue\nFROM \n    `bigquery-public-data.google_analytics_sample.ga_sessions_*`,\n    UNNEST (hits) AS hits\nWHERE\n    _table_suffix BETWEEN \"20170701\"\n    AND \"20170731\"\n    AND totals.visits = 1\nGROUP BY\n    country\nORDER BY 2 desc\nLIMIT 10\n\n      \"\"\"\n\nsafe_query_job= client.query(query)\nquery_df= safe_query_job.to_dataframe()\nquery_df\n\n","dab541c4":"fig = go.Figure(data= go.Choropleth(\n    locations= query_df['country'], \n    z = query_df['total_revenue'].astype(float), \n    locationmode = 'country names', \n    colorscale = 'Reds',\n    colorbar_title = \"Dollar Revenue\",\n))\n\nfig.update_layout(\n    title_text = 'July 2017 Google Merchandise Store by Geo Location',\n)\n\nfig.show()","a1702bc3":"### 3. Landing pages","93d6e5c9":"### 4. Product performance","8943eae4":"## **Background**\n\nIn this kernel I will perform some exploratory data analysis on the Google Merchandise store. I will take a sample of this data from July 2017, and provide some descriptive analysis on the site's performance. I will explore:\n\n* Audience overview\n* Channel acquisition\n* Landing pages\n* Product performance\n* Rest of the metrics\n","a8f4f93a":"### 1. Audience overview","9c0bcd35":"### 5. Rest of the metrics","21150c1a":"**Observations:**\n\nAs we can see from the table above, direct traffic has generated the most revenue. Interestingly, while direct traffic has generated more revenue than referral traffic, referral traffic has led to more transactions. \n\n**Recommendations:**\n\nIncrease high-value content assets to stimulate direct traffic. ","126e559e":"**Observations:**\n\nApparel generated the most revenue, followed by office and lifestyle.\n\n**Recommandations:**\n\nCreate online advertisements for apparel products.","cefb5943":"### 2. Channel acquisition","5ad3b4b5":"**Observations:**\n\nThe majority of revenue is generated from US-based transactions.\n\n**Recommandations:**\n\nIncrease revenue by offering the website in multiple languages.\n\n","5e90aa04":"**Observations:**\n\nGoogle Sunglasses were sold the most.\n\n**Recommandations:**\n\nPromote Google Sunglasses by creating a landing page.","01896c59":"**Observations:**\n\nThe best performing browsers: \n* Google Chrome\n* Opera  \n* Safari.\n\nThe worst performing browsers: \n* Opera Mini\n* Internet Explorer  \n* Firefox\n\n**Recommendations:**\n\nImprove website performance for browsers with a high bounce rate. Look for technical issues.\n","73a9eaf3":"**Observations:**\n\nAs we can see from the table above, referral traffic is by far the best performer, getting maximum conversions, followed by display, and paid search.\n","12978c67":"**Observations:**\n\nOn Google Merchandise store the rate of \"initiated checkout\" reached 66%, but only 30.20% of consumers have made a purchase after initiating the checkout process.\n\n**Recommandations:**\n\nOptimize the checkout process. It\u2019s critical to make sure all necessary information is available and that the consumer understands the stages of the checkout process. Make it simple and make it easy. ","1d45004f":"**Observations:**\n\nThe table above represents average registration conversion rate by acquisition channel across all Google Merchandise store visitors. As we can see from the table, visitors who entered the website from other sources were more likely to see the sign up page.\n","fab943ef":"**Observations:**\n\nAs we can see from the table above, referral traffic was the key traffic source for user engagement. Visitors  viewed 6.31 pages on average per session. \n\nFrom a business perspective, the higher the pages per session metric, the better. This is because a high pages per session count shows that the website visitors looked around and visited more than one page \u2013 truly engaging with the website.\n\n**Recommendations:**\n\nIncrease referral traffic by building backlinks.","6fc12cb6":"**Observations:**\n\nDirect traffic is the top source in terms of generating website sales and revenue. Most visitors visited the  website either by typing the URL into a browser or through browser bookmarks.\n\n\n","5f75e14b":"**Observations:**\n\nWhen comparing bounce rates on devices, bounce rates are 5.71% higher on mobiles than desktops. The bounce rate for tablet users is about 2.70% higher than those of desktop shoppers.\n\n**Recommendations:**\n\nFormatting the pages to be as mobile and tablet friendly as possible is one of the best ways to reduce the bounce rates for mobile and tablet devices.","0a9ababb":"**Rule of Thumb:**\n\nAs a rule of thumb, a bounce rate in the range of 26 to 40 percent is excellent. 41 to 55 percent is roughly average. 56 to 70 percent is higher than average.\n\n**Observations:**\n\nFirst, a high bounce rate is not necessarily bad. On the one hand, a high bounce rate from the Youtube page might just mean that visitors found what they were looking for. On the other hand, a high bounce rate from product pages might be explained by ineffective content and\/or low accessibility, it can also be the result of mismatch between keywords and content or even purpose of page.\n\n**Recommandations:**\n\nCreate a product landing page to lower the bounce rate of the waze+baby+on+bo page.\n\nWhy?\n\nBecause landing pages are designed and optimized for conversion goals. \n\nProduct pages are more for informing, while landing pages are for converting. As a result, each page uses different elements to help support their intent. \n","1892a225":"**Observations:**\n\nThe Youtube page has a high bounce rate and a high exit rate. Exit rate is not concerned about where a visitor entered the site, only with the page from which they exited. It may simply indicate that the visitor found what they were looking for.\n\n**Recommandations:**\n\nEvaluate the Youtube page. Look for mismatch between keywords and content. \n"}}