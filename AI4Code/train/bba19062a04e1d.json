{"cell_type":{"5fd06022":"code","152ee9db":"code","f6cca438":"code","e41349dc":"code","cf50cee9":"code","eafed6b0":"code","02936fa5":"code","c15a04fd":"code","354e964f":"code","28fb5050":"code","46cb547b":"code","e5b73ead":"code","42c2bb6f":"code","62cb7568":"code","72e45ec5":"code","554b8b73":"code","d85b99f3":"code","d6870e49":"code","d42f16a4":"code","630f667b":"code","d2f7a952":"code","8ca31823":"code","ebba83fe":"markdown","90a9f350":"markdown","aeeeb318":"markdown","a2fe2312":"markdown","bd3f3678":"markdown"},"source":{"5fd06022":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nimport math\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.style.use(\"seaborn-whitegrid\")\n\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","152ee9db":"#dataframe import pandas.read_csv\n\ndf_usd = pd.read_csv(\"\/kaggle\/input\/USD_TRY0.csv\")\ndf_gau = pd.read_csv(\"\/kaggle\/input\/GAU_TRY1.csv\")","f6cca438":"df_usd.head()","e41349dc":"df_gau.head()","cf50cee9":"df_usd.describe()","eafed6b0":"df_usd.info()","02936fa5":"df_gau.info()","c15a04fd":"df_usd.columns","354e964f":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(df_usd[variable],bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Fre\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","28fb5050":"numericVar = [\"Price\",\"Open\",\"High\",\"Low\"]\n\nfor i in numericVar:\n    plot_hist(i)","46cb547b":"df_usd.tail()","e5b73ead":"df_usd_r = df_usd[::-1]","42c2bb6f":"df_gau_r = df_gau[::-1]\ndf_gau_r","62cb7568":"plt.figure(figsize = (20,10))\nsns.pointplot(x=df_usd_r['Date'][500:546],y='Price',data=df_usd_r,color='r',alpha=0.1)\nplt.title('USD\/TRY Price Analysis',color='red',fontsize=15,style='italic')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","72e45ec5":"plt.figure(figsize = (20,10))\nsns.pointplot(x=df_gau_r['Date'][590:650],y='Price',data=df_gau_r,color='blue',alpha=0.1)\nplt.title('GAU\/TRY Price Analysis',color='blue',fontsize=15,style='italic')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","554b8b73":"df_usd_x = df_usd_r['HL_PCT'] = (df_usd_r['High'] - df_usd_r['Low']) \/ df_usd_r['Open'] * 100.0\ndf_usd_x = df_usd_r['PCT_CHG'] = (df_usd_r['Price'] - df_usd_r['Low']) \/ df_usd_r['Price'] * 100.0\ndf_usd_x = df_usd_r[['Date','Price','HL_PCT','PCT_CHG']]","d85b99f3":"df_usd_x.head()","d6870e49":"plt.figure(figsize = (20,10))\nsns.pointplot(x=df_usd_x['Date'][494:543],y=df_usd_x['PCT_CHG'],data=df_usd_x,color='turquoise',alpha=0.1)\nplt.title('USD\/TRY PCT_CHG Analysis',color='turquoise',fontsize=15,style='italic')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","d42f16a4":"df_gau_x = df_gau_r['HL_PCT'] = (df_gau_r['High'] - df_gau_r['Low']) \/ df_gau_r['Open'] * 100.0\ndf_gau_x = df_gau_r['PCT_CHG'] = (df_gau_r['Price'] - df_gau_r['Low']) \/ df_gau_r['Price'] * 100.0\ndf_gau_x = df_gau_r[['Date','Price','HL_PCT','PCT_CHG']]","630f667b":"df_gau_x.head()","d2f7a952":"plt.figure(figsize = (20,10))\nsns.pointplot(x=df_gau_x['Date'][590:649],y='PCT_CHG',data=df_gau_x,color='purple',alpha=0.1)\nplt.title('GAU\/TRY PCT_CHG Analysis',color='purple',fontsize=15,style='italic')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","8ca31823":"plt.figure(figsize = (20,10))\nsns.pointplot(x=df_gau_x['Date'][590:649],y='PCT_CHG',data=df_gau_x,color='purple',alpha=0.1)\nsns.pointplot(x=df_usd_x['Date'][494:543],y=df_usd_x['PCT_CHG'],data=df_usd_x,color='turquoise',alpha=0.1)\nplt.title('GAU\/TRY vs USD\/TRY PCT_CHG Analysis',color='black',fontsize=15,style='italic')\nplt.text(10,4,'USD\/TRY PCT_CHG',color='turquoise',fontsize = 17,style = 'italic')\nplt.text(10,4.2,'GAU\/TRY PCT_CHG',color='purple',fontsize = 17,style = 'italic')\nplt.xticks(rotation=90)\nplt.grid(2)\nplt.show()\nplt.savefig(\"graph.png\")","ebba83fe":"# Introduction\nWe compare and analyze statistics of relationships and data between USD\/TRY and GAU\/TRY. In general, I will test my own knowledge, make the necessary code explanations and make relevant examples.\n\n<font color='red'>\nContent\n1. [Load and Check Data](#1)\n1. [Variable Descriptions](#2)","90a9f350":"## Load and Check Data\n    * Import the data and check","aeeeb318":"## Variable Descriptions\n\n    * Date: Date Time\n    * Price: Present Price\n    * Open: Open Price\n    * High: High Price\n    * Low: Low Price\n    * Change%: Daily Change","a2fe2312":"## Basic Data Analyis","bd3f3678":"## Numerical Variable"}}