{"cell_type":{"08195626":"code","930e4033":"code","791c9416":"code","f95c752f":"code","3d3381de":"code","08826aad":"code","ee35bf0b":"code","7a63ae9c":"code","5164f6d6":"code","582ae6f2":"code","184813d4":"code","cd59423c":"code","e3ae135f":"code","930cf6f4":"markdown","8e723296":"markdown","6ca893c1":"markdown","d88274f6":"markdown","7625c378":"markdown","fb85497e":"markdown","8a4cdb53":"markdown","c687e375":"markdown","f596f4f9":"markdown","2afac479":"markdown","8adff830":"markdown","8fffa65c":"markdown","d533ad78":"markdown","5808a4ba":"markdown","f5c98c9a":"markdown","6e41b286":"markdown","3e48f447":"markdown","2b52e4dd":"markdown","8e42d160":"markdown","fcbc87e5":"markdown"},"source":{"08195626":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport datetime, time\n%matplotlib inline\nplt.rcParams[\"figure.figsize\"] = [10,10]","930e4033":"################## USING THE PROVIDED CODE TO PREPARE THE DATA #########################\n\n## 1. Reading data into a pandas DataFrame, and inspecting the columns a bit\n\ndf = pd.read_csv(\"..\/input\/train_electricity.csv\")\ndfTest = pd.read_csv(\"..\/input\/test_electricity.csv\")\n#insert column to test data to match formats\ndfTest.insert(1, 'Consumption_MW', '')\n\nprint(\"Dataset has\", len(df), \"entries.\")\n\nprint(f\"\\n\\t{'Column':20s} | {'Type':8s} | {'Min':12s} | {'Max':12s}\\n\")\nfor col_name in df.columns:\n    col = df[col_name]\n    print(f\"\\t{col_name:20s} | {str(col.dtype):8s} | {col.min():12.1f} | {col.max():12.1f}\")\n\n## 2. Adding some datetime related features\n\ndef add_datetime_features(df):\n    features = [\"Year\", \"Week\", \"Day\", \"Dayofyear\", \"Month\", \"Dayofweek\",\n                \"Is_year_end\", \"Is_year_start\", \"Is_month_end\", \"Is_month_start\",\n                \"Hour\", \"Minute\",]\n    one_hot_features = [\"Month\", \"Dayofweek\"]\n\n    datetime = pd.to_datetime(df.Date * (10 ** 9))\n\n    df['Datetime'] = datetime  # We won't use this for training, but we'll remove it later\n\n    for feature in features:\n        new_column = getattr(datetime.dt, feature.lower())\n        if feature in one_hot_features:\n            df = pd.concat([df, pd.get_dummies(new_column, prefix=feature)], axis=1)\n        else:\n            df[feature] = new_column\n    return df\n\ndf = add_datetime_features(df)\ndfTest = add_datetime_features(dfTest)\ndf.columns\n\n########################################## END ##############################################","791c9416":"print(df.isnull().sum().sum())\nprint(dfTest.isnull().sum().sum())","f95c752f":"df.plot(x = 'Datetime', y = 'Consumption_MW', figsize=(20,15), linewidth = 0.5,  c = 'g', alpha = 0.5, xlim=(df['Datetime'].iloc[[0,-1]]), title = 'Electricity consumption over time'); ","3d3381de":"f, ax = plt.subplots(1, 1)\ndf2 = df[(df['Consumption_MW'] > 1000) & (df['Consumption_MW'] < 10000)]\ndf2.plot(x = 'Datetime', y = 'Consumption_MW', figsize=(20,5), ax = ax, linewidth = 0.5, c = 'g', alpha = 0.5) \n\ndfSmoothed = df2.copy()\ndfSmoothed['Consumption_MW'] = dfSmoothed['Consumption_MW'].rolling(window=20000,center=True).mean()\ndfSmoothed.plot(x = 'Datetime', y = 'Consumption_MW', c = 'w', figsize=(20,5), ax = ax, xlim=(df['Datetime'].iloc[[0,-1]]))\nax.legend(('Real', 'Smoothed')); ax.set_title('Cleaner consumption data');","08826aad":"f, (ax1, ax2) = plt.subplots(1, 2, figsize=(20,10))\ncolor=iter(plt.cm.YlGn(np.linspace(0,1,9)))\n\n\nfor i in range(2010,2018):\n    data = dfSmoothed[dfSmoothed['Year'] == i]\n    c=next(color)\n    ax1.plot(data.Dayofyear, data.Consumption_MW, c = c)\n    ax2.bar(i, df2.loc[df2['Year'] == i,'Consumption_MW'].sum(), align='center', color = c, width = 0.4)\n    \nax1.legend(('2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'))\nax1.set_xlabel('Day of the year'); ax1.set_ylabel('Consumption (smoothed), MW');\nax1.set_title('Seasonal variation during the year (2010-2017)')\n    \nax2.set_ylim(3.1e8, 3.75e8)\nax2.set_xlabel('Year'); ax2.set_ylabel('Total consumption, MW')\nax2.text(2012.6, 3.33e8, 'Price \\nincreases'); ax2.text(2016.4, 3.69e8, 'Elon Musk \\ndrops hot \\nTesla Model 3');\nax2.set_title('Change of the annual electricity consumption');","ee35bf0b":"color=iter(plt.cm.YlGn(np.linspace(0,1,9)))\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(20,10))\nax1 = plt.subplot(121, projection='polar')\nfor i in range(2010,2019):\n    data = dfSmoothed[dfSmoothed['Year'] == i].dropna()\n    c=next(color)\n    ax1.plot(data.Dayofyear\/365*2*np.pi, data.Consumption_MW, c = c)\n\nax1.set_rmin(6000)\nax1.set_title('365 days of each Year')\nax1.legend(('2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'))\n    \nax2 = plt.subplot(122,projection='polar')\nfor i in range(1,13):\n    data = df2[df2.iloc[:,14+i]==1].dropna()\n    ax2.bar(i\/12*2*np.pi, data.Consumption_MW.sum(), width = 2*np.pi\/14, color = 'g', alpha = 0.3)\n    ax2.annotate('Month  '+str(i), xy=(i\/12*2*np.pi, 2.4e8))\n\nax2.set_rmin(1.7e8)\nax2.set_title('Month-wise data summed over all the years');","7a63ae9c":"f, ax1 = plt.subplots(1, 1, figsize=(20,10))\ncolor=iter(plt.cm.YlGn(np.linspace(0,1,52)))\nfor i in range(0,52):\n    data = df2[(df2['Year'] == 2017) &  (df2['Week'] == i)]\n    c=next(color)\n    ax1.plot(np.linspace(0,1,len(data)), data.Consumption_MW, c = c)\n\nax1.set_ylim(0); ax1.set_xlim(0,1)\nax1.text(0.005, 7500, 'Night'); ax1.text(0.035, 9500, 'Morning'); \nax1.text(0.09, 9700, 'Evening'); ax1.text(0.15, 7500, 'Night'); \nax1.annotate('EEML \\nparticipant \\npreparing \\nKaggle \\nsubmission', xy=( 0.875, 7300), xytext=(0.85, 8500), arrowprops=dict(arrowstyle='->'))\nax1.set_xlabel('Days of the week, Monday trough Sunday'); ax1.set_ylabel('Consumption, MW'); ax1.set_title('Weekly electricity consumption, 2017')\nax1.plot([0,1],[5000, 5000]);","5164f6d6":"#pd.plotting.scatter_matrix(df.loc[:,'Date':'Production_MW'], alpha=0.2, figsize=(20, 20), diagonal='kde')\n#sns.pairplot(df2.loc[:,'Date':'Production_MW'], diag_kind=\"kde\")\n\nremoved = df[(df['Consumption_MW'] < 1000) | (df['Consumption_MW'] > 10000)]\n# data which has been removed\n\nf, axs = plt.subplots(10,10, figsize=(20,20))\nfor m in range(10):\n    for n in range(10):\n        axs[m][n].set_axis_off()\n        if m == 0:\n            axs[m][n].set_title(df2.columns[n])\n        if n == 0:\n            axs[m][n].set_title(df2.columns[m], x = -0.1, y = 0.5, rotation = 'vertical')\n        if m==n:\n            axs[m][n].hist(df2.iloc[:,m], bins=100, color = 'r', alpha = 0.6)\n            continue\n        axs[m][n].scatter(df2.iloc[:,m], df2.iloc[:,n], s = 1, color = 'g', alpha = 0.2)\n        axs[m][n].scatter(removed.iloc[:,m], removed.iloc[:,n], s = 10, color = 'r', alpha = 0.7)\n\ncorr = df2.loc[:,'Date':'Production_MW'].corr()\nf, ax = plt.subplots(1,1, figsize=(20,10))\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, cmap=sns.diverging_palette(130, 10, as_cmap=True))\n\nfor i in range(np.size(corr, 0)):\n    for j in range(np.size(corr, 1)):\n        text = ax.text(j+0.5, i+0.5, round(corr.iloc[i, j],2), ha=\"center\", va=\"center\", color=\"w\", size=15)","582ae6f2":"delta = np.mean(np.abs(df2['Consumption_MW']-df2['Production_MW']))\nrmse = np.sqrt(np.mean((df2['Consumption_MW']-df2['Production_MW'])**2))\nprint('Mean absolute difference =', delta, 'MW')\nprint('RMSE = ', rmse, 'MW')\n\nf, (ax1, ax2, ax3) = plt.subplots(3, 1)\nax1.fill_between(df2.iloc[50000:52000,0], df2.iloc[50000:52000,1]-rmse, df2.iloc[50000:52000,1]+rmse, color='g', alpha=0.1)\ndf2.iloc[50000:52000].plot(x = 'Date', y = 'Production_MW', figsize=(20,5), ax = ax1, color = 'r', alpha=0.7) \ndf2.iloc[50000:52000].plot(x = 'Date', y = 'Consumption_MW', figsize=(20,5), ax = ax1, color = 'g', alpha=0.7)  \n\nax2.fill_between(df2.iloc[100000:102000,0], df2.iloc[100000:102000,1]-rmse, df2.iloc[100000:102000,1]+rmse, color='g', alpha=0.1)\ndf2.iloc[100000:102000].plot(x = 'Date', y = 'Production_MW', figsize=(20,5), ax = ax2, color = 'r', alpha=0.7) \ndf2.iloc[100000:102000].plot(x = 'Date', y = 'Consumption_MW', figsize=(20,5), ax = ax2, color = 'g', alpha=0.7)  \nax2.legend(loc='center left');\n\nax3.fill_between(df2.iloc[150000:152000,0], df2.iloc[150000:152000,1]-rmse, df2.iloc[150000:152000,1]+rmse, color='g', alpha=0.1)\ndf2.iloc[150000:152000].plot(x = 'Date', y = 'Production_MW', figsize=(20,5), ax = ax3, color = 'r', alpha=0.7) \ndf2.iloc[150000:152000].plot(x = 'Date', y = 'Consumption_MW', figsize=(20,5), ax = ax3, color = 'g', alpha=0.7)  \n\nax1.set_xlim(df2.Date.iloc[[50000,52000]]);\nax2.set_xlim(df2.Date.iloc[[100000,102000]]);\nax3.set_xlim(df2.Date.iloc[[150000,152000]]);\n\n\nj = 0\nout = np.empty([8,2])\nfor i in range(2010,2018):\n    data = df2[df2['Year'] == i]\n    out[j,0] = sum(data.Consumption_MW)\n    out[j,1] = sum(data.Production_MW)\n    j = j + 1\n    \nplt.xlabel('Year'); plt.ylabel('Total consumption, MW'); plt.legend(loc='upper left');\nfig, ax = plt.subplots(figsize=(20,5)); width = 0.22;\nax.barh(np.arange(2010,2018) - width\/2, out[:,0], width, label='Consumption_MW', alpha = 0.5, color = 'g')\nax.barh(np.arange(2010,2018) + width\/2, out[:,1], width, label='Production_MW', alpha = 0.5, color = 'r')\nplt.xlabel('Year'); plt.ylabel('Total consumption, MW'); plt.legend(loc='upper left');\n","184813d4":"out = np.empty([9,7]) \nj = 0\nfor i in range(2010,2019):\n    out[j,:] = np.asarray(df2.loc[df2['Year'] == i,'Coal_MW':'Biomass_MW'].sum())\n    out[j,:] \/= sum(out[j,:])\n    j += 1\n    \ndfRatio = pd.DataFrame(out, index= range(2010,2019), columns=df2.columns[2:9])\ndfRatio.plot.barh(stacked=True, figsize = (17,10), colormap='YlGn', title='Ratio of eneregy sources in total production');\nfor i in range(np.size(out, 1)):\n    for j in range(np.size(out, 0)):\n        text = plt.text(i\/20+0.7, j+0.35, round(out[j,i],2), ha=\"center\", va=\"center\", color=\"k\")\nplt.ylabel('Year');","cd59423c":"fig, axs = plt.subplots(4, 2, figsize=(20, 20), sharex=True, sharey=False)\n\n# data which has been removed\nremoved = df[(df['Consumption_MW'] < 1000) | (df['Consumption_MW'] > 10000)]\n\n#concatenate with data for 2018 to have more information\ndfC = pd.concat([df2, dfTest])\n\n\nfor i in range(4):\n    for j in range(2):\n        if i*2+j == 7: \n            break\n        df2.plot(x = 'Datetime', y = df2.columns[i*2+j+2], ax = axs[i][j], linewidth = 0.2, c = 'g', alpha = 0.6)\n        dfTest.plot(x = 'Datetime', y = dfTest.columns[i*2+j+2], ax = axs[i][j], linewidth = 0.2, c = 'r', alpha = 0.6)\n        axs[i][j].plot_date(removed['Datetime'], removed.iloc[:,i*2+j+2], marker='o', ls = '', color='r')\n\ndfCSmoothed = dfC.copy()\ndfCSmoothed.loc[:,'Coal_MW':'Biomass_MW'] = dfCSmoothed.loc[:,'Coal_MW':'Biomass_MW'].rolling(window=20000,center=True).mean()\naxs[3][1].plot_date(dfCSmoothed['Datetime'], dfCSmoothed.loc[:,'Coal_MW':'Biomass_MW'], marker='', ls='-')\naxs[3][1].legend(dfCSmoothed.columns[2:9])\nplt.tight_layout()","e3ae135f":"def recursive(nYears, resampled, xp, yp, pred, color, i):\n\n    if nYears > 0:\n        nYears -= 1\n        resampled = resampled - pd.Timedelta('365 days')\n        \n        i, pred = recursive(nYears, resampled, xp, yp, pred, color, i)\n        \n        x = [time.mktime(t.timetuple()) for t in resampled]\n        pred[:,i] = np.interp(x, xp, yp)\n        c = next(color)\n        ax1.plot(np.linspace(0,1,3000), pred[:3000,i], c = c)\n        ax2.bar(i, pred[:,i].sum(), align='center', color = c, width = 0.3)\n        i += 1  \n        return i, pred      \n    else:\n        return i, pred\n\nfor nYears in range(2,6):\n    fig = plt.figure(figsize = (20,4))\n    gs = plt.GridSpec(1, 5, figure=fig)\n    ax1 = fig.add_subplot(gs[0, :-1])\n    ax2 = fig.add_subplot(gs[0, -1])\n\n    color=iter(plt.cm.YlGn(np.linspace(0,1,nYears+4)))\n    c = next(color);c = next(color);\n    \n    # select needed time interval\n    resampled = dfTest.Datetime\n    \n    xp = np.asarray(df2.Date)\n    yp = np.asarray(df2.Consumption_MW)\n    pred = np.empty([len(resampled),nYears])\n    i = 0\n    \n    i, pred = recursive(nYears, resampled, xp, yp, pred, color, i)\n\n    predFinal = pred.mean(axis=1) * 1.06 \n\n    ax1.plot(np.linspace(0,1,3000), predFinal[:3000], c = 'k')\n    ax1.set_xlim(0,1); ax1.set(xlabel='time, a.u.', ylabel='Consumption, MW')\n    \n    ax2.bar(nYears, predFinal.sum(), align='center', color ='k', width = 0.3)\n    ax2.set(xlabel='Year', ylabel='Total Consumption, MW')\n    ax2.set_xticklabels(list(range(2017-nYears, 2019)))\n    ax2.set_yticklabels([])\n    \n    # to save csv\n    # pd.DataFrame(data={'Date': dfTest.Date, 'Consumption_MW': predFinal}).to_csv('res_'+str(nYears)+'.csv', index=False)","930cf6f4":"- The figure above illustrates how renewable sources of energy systematically become dominant sources of electricity in Romania. \n- The most dramatic change we can observe in `Wind` power, which has grown to 13% of total electricity from its complete absence in 2010.\n- `Coal` industry demonstrate almost linear decline.\n- Despite the general tendency for ecological sources, the contribution of `Hydroelectric` energy decreases.\n- The part of the energy from `Gas` is increasing, despite the fact that dry natural gas production has declined steadily over the past three decades in Romania ([source](https:\/\/www.eia.gov\/beta\/international\/analysis.php?iso=ROU)).\n- `Nuclear` energy keeps its part stable. Particularly, nuclear power is produced by 2 power plants in Romania nowadays, but there are plans to build 2 more, and increase nuclear energy part from ~20% to ~40% in total production ([source](https:\/\/www.eia.gov\/beta\/international\/analysis.php?iso=ROU)).\n\nAccording to Iulian Iancu, chairman of the Committee for Industries and Services of the Chamber of Deputies, the decrease of electricity price and increase of consumption is directly related to the utilization of renewable sources of energy: \n>\u201cIn June 2012, the price of electricity generation was somewhere around RON 270 (EUR 60) per MWh, and this year it was on average of about EUR 33. We are talking about a drop by one third in the price of energy production. Life has proven our projection was correct. When 100 MWh of renewable energy production enters the energy system, the price drops by EUR 1.5 per MWh,\u201d Iancu said.\n\nSource: [BalkanGreenEnergyNews](https:\/\/balkangreenenergynews.com\/electricity-consumption-in-romania-increases-by-8-5\/)\n\nIn addition to that, worth mentioning that Romania needs to meet the European Union's 2020 renewable energy target, which involves renewable energy accounting for 24% of Romania\u2019s gross final energy consumption. <br>\n\nSo, we may expect that the part of renewable sources of energy *will continue to grow in the future*, even after 2020, and will allow to obtain more affordable and environmentally-friendly electricity. The only competitor to them may be nuclear energy if the new power plants will actually be built. The Gas energy is expected to have a soon *decline*, simply due to the decline of its natural extraction. <br>","8e723296":"## Electricity production and other variables\n\nWe've discussed only `consumption` variable so far but didn't say a thing about the other data. Let us correct it.\n\nThe most basic steps to be performed here are plotting pair-wise relation of variables and finding their linear correlation, which is done below. We also illustrate histogram of each variable (on diagonal) and the outlier points which were removed in the first step (<font color=red>red dots<\/font>). *It may be seen that red dots indeed do not fit in the overall distribution and their removal made data significantly cleaner.*","6ca893c1":"## Comparison of the different energy sources\n\nNow we can plot temporal plots of each energy source. Interestingly, *the outliers we removed at the very first step* (extreme consumption values) *also manifest abnormal values at the production plots* (up to negative values) (marked by <font color=red>red dots<\/font>), so we can conclude that their removal wasn't wrong. The outliers are not necessarily wrong values, but in any case, they confuse the model and plays the role of the noise if we want to discover systematic long term behaviour.\n\nThe red line illustrates data for the 2018 year to give an image of its evolution.","d88274f6":"Another interesting aspect which is worth of our discussion is a daily distribution of consumption. The plot below illustrates the results for 7 days of each week over one year (2017):\n- It may be clearly seen that daily variations are strongly expressed. We can easily identify *night, morning*, and *evening* time.\n- However, despite large variation of consumption during the day, *the significant part of electricity is in use constantly, even during the night*. Approximately, 5 TW of energy is in use constantly (blue line), which makes at least 50% of total consumption. \n- On Sunday the statistic is the least consistent and usage of electricity is the most variative. It can be easily explained by the fact that a lot of industries doesn't work on Sundays, many people go outside or have picni\u0441 with family, whereas others stay at home and predict electricity.","7625c378":"Here:\n- The left plot is the same smoothed consumption data as on the previous figure but in polar coordinates.\n- The right plot - the original data summarized for each month. Not surprisingly, we observe the largest consumption during the fall and winter months.","fb85497e":"### Results of prediction\nInterestingly, the long term \"model\" which included the 5 last years showed the best accuracy, while the short term model of 2 years - the worst. Although, the difference between them is not so big - 820 vs 840. In total, results are *awful* and are very low in the public leaderboard. This illustrates why we do data analysis track and not prediction.","8a4cdb53":"It does not, so we can continue.\n\n## Consumption behaviour\n\nFirst of all, let us check how a target variable changes over time.","c687e375":"## Let's firstly check if the data contains any NaN values","f596f4f9":"## Prediction\n\nThe simple analysis we have done gave us some basic impression on the data. It inspires us to check how accurate will be the most trivial intuitive prediction. We call it *baseline* model, but one may call it *dumb*  <font size=\"1\">and will be right<\/font>.  <br>\n\nSo, our hypothesis (based on observations) is the following:\n### *The consumption will be similar as in previous years but a bit higher in total*.\n\nTherefore, we can implement it as averaging the data for a few previous years and increase it artificially.\n\nDespite the simplicity of the approach, it's implementation is not so trivial. What particularly was not trivial: the resampling and interpolation of the temporal interval which is not flexible in Pandas, iterative time decreasing and reordering the years in normal order using the recursive function. Also, please notice that our approach does not utilize any data from future <font size=\"1\">and even data of production<\/font>. \n\nThe general rule we use in our prediction is $C_{2018}= k \\frac{1}{N}\\sum_{n = 1, ... , N}C_{2018-n} $, where $C_{2018}$ is a convenient notation of the test interval from 2018-01-08 to 2019-01-03, $C_{2018-n}$ - the same time interval minus $n$ years, and $k$ is an arbitrary scaling coefficient chosen to satisfy \"but a bit higher in total\" condition. The latter may be also satisfied by adding a constant, but scaling is preferable for the sake of increasing the variance which was decreased due to the averaging. $k$ was arbitrarily chosen to be equal 1.06 just to approximately fit in the overall increase of electricity consumption (see Figure below, right).\n\nBelow (left) we illustrate results of the prediction (**black line**) on top of the data from previous years (lighter - older) using arbitrary time interval to make it better visible. The bar chart on the right illustrates total consumption over the years, including our prediction (black bar).","2afac479":"## Thus, \nafter removing the outliers, we can plot a cleaner consumption graph (green), and additionally smooth daily variations to better see year-wise behavior (white)","8adff830":"Here, 7 plots illustrate the production of each source on their own scale (for better visibility), whereas the last plot shows their relationship on a global scale (smoothed for easier understanding). We can see that only `Gas` production (orange line) follows the same periodical pattern as `consumption` variable, however, the Pearson correlation between them is only 0.59. Also, we can see some more outliers in the `Nuclear` plot.\n\n*The data for the 2018 year does not differ significantly from previous years and mostly follows the same tendency for each energy source.*","8fffa65c":"## Next, we also can visualize our periodic data in polar coordinates","d533ad78":"So, what actually was not trivial:\n\n- First of all, our approach is based on finding consumption data of exactly the same as test time interval $n$ years ago. Moreover, it should be resampled to contain the same timestamps and not be shifted for a few minutes\/hours. This surely cannot be achieved by simple filtering by year\/month (it doesn't even produce vectors of the same length). In result, the goal was achieved by subtracting 365 days from the initial interval, transforming data into a numerical vector of seconds, and implementing linear interpolation of `consumption` values for obtained numerical vector. In other words, we started from test timestamp `2018-01-08 00:08:07` and obtained the consumption data for `2017-01-08 00:08:07`, `2016-01-08 00:08:07`, and so on, for all the test timestamps <font size=\"1\">ignoring 366-days years which nobody likes<\/font>.\n- In order to make visualization perceptually better, we had to order the obtained data by time increasing. Considering that we defined time intervals by subtracting 365 days, it was logical to implement recursion which first achieved the oldest data via subtraction, and then performed computation and plotting on the way back.\n- We try the different number of recent years (2 through 5) since more recent years contains more relevant data, whereas averaging more years allows to obtain more stable and less noisy data.","5808a4ba":"## Let's now compare the most correlated variables: consumption and production.\n\nFirstly, let's take a glimpse by plotting some arbitrary intervals and RMS difference of production and consumption:","f5c98c9a":"## Year-wise comparison\n\nSmoothed consumption plot cut onto the years on the left, total consumption over the year bar chart on the right. Lighter color denote older year. ","6e41b286":"- Unfortunately, the obtained plots are rather complex and don't demonstrate any trivial dependencies. \n- The only exception is the `production` variable which is highly correlated with `consumption`.\n- Adding some common sense makes the situation clearer. Does energy production really define public consumption? Indeed, how often do we check nuclear and coal production when charging our phones or deciding to switch on the lights on the street? Perhaps, in the industry, it plays a bigger role. Perhaps, the price of electricity can be an additional predictor. But, even having the price data available does not help a lot ([data](https:\/\/www.statista.com\/statistics\/418113\/electricity-prices-for-households-in-romania\/)). What could be the better predictors: the information on equipment large factories use and their business-plan on production, information on electrical devices purchased and electrical vehicles imported, *etc*.\n- The ratio of consumption in different sectors should be also taken into account. According to [National Institute of Statistics (Romania)](http:\/\/www.insse.ro\/cms\/sites\/default\/files\/com_presa\/com_pdf\/energie04e19.pdf), ~65% of electricity is consumed by economy (industry), 20% - by population (households), 10% is consumed by the electrical facilities themselves, and remaining 5% is exported <font size=\"1\">(although, at the same time 6% are imported, which does not make much sense for data scientists but maybe makes sense for economists)<\/font>.","3e48f447":"- Immediately we can see that consumption changes *periodically*. Even without temporal data, we could already identify summer and winter time and find the number of years.\n- We also can clearly see the outliers which demonstrate *unrealistic* consumption values. A few of them contain a value which is too high (may be possible, but makes no benefit to the prediction), and a few others contain almost zeros (which are surely wrong). So we remove them.\n- The data may be considered balanced.","2b52e4dd":"## What about the individual sources?\n\nLet's check their distribution first of all:","8e42d160":"Well, the high correlation did not lie. \n- The `production` variable follows the `consumption` almost perfectly. Most of the time it fits within an error interval of ~600 MW. It surely can be used to predict the consumption data in this case, but practical usefulness of it is arguable. Normally, one would like to predict the production needed to satisfy consumer consumption requirements and not vice versa.\n- However, from the other side, we can see a significant difference between total annual consumption and production on the bottom bar chart, for example for the year 2014. *This difference has been decreasing during recent years and is expected to be minimal in 2018.*\n- Using `production` values as a prediction of `consumption` in test data also resulted in RMSE of around 600, which is not that bad, and can be used as the cheapest solution (although practically this data unlikely will be available).","fcbc87e5":"We can also compare consumption over the years, which is illustrated above. <br>\nThe change, however, is not linear. \n- It may be seen that starting from 2010 electricity consumption was decreasing and reached its minimum in 2013. [The first link in Google](https:\/\/www.romania-insider.com\/romania-to-raise-electricity-prices-in-stages-from-2013-cancel-social-tariff-for-low-income-consumers) gives us a hint that it may be related to the increase of price and cancellation of low-tariffs in Romania in 2013, which seems to be a meaningful reason. [Another website](https:\/\/www.statista.com\/statistics\/418113\/electricity-prices-for-households-in-romania\/) shows that it was the largest change in electricity price over the last years from 10.75 to 13.23 cents\/kW (+23%).\n- Then, consumption inevitably started to grow. We can expect that it will grow in the following years due to the increased amount of electronic devices per capita, development of electric cars, and general shifting to electric power from oil. \n- However, the seasonal variations are not as big. **This illustrates that main change is introduced by weather-independent factors such as electronic devices and equipment, whereas the need for air conditioning and heating stays relatively the same.**\n- According to Iulian Iancu, chairman of the Committee for Industries and Services of the Chamber of Deputies, the decrease of electricity price and increase of consumption is directly related to the utilization of renewable sources of energy (discussed later in the text)."}}