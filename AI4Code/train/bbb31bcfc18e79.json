{"cell_type":{"f414a7ef":"code","c07c9c88":"code","fdd56fd9":"code","9c50cd10":"code","07b41415":"code","50285412":"code","2f7750cd":"markdown","f94d4ebf":"markdown","6cdda42c":"markdown","e7db9ba2":"markdown","6ff48f6c":"markdown","129a1dd0":"markdown","a8fb8e92":"markdown"},"source":{"f414a7ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c07c9c88":"train_df = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')","fdd56fd9":"train_df.describe()","9c50cd10":"import plotnine as p9 # create plots\n\ntrain_melt_df = pd.melt(train_df,\n                       id_vars=[\"time\"],\n                       value_vars=[\"signal\", \"open_channels\"])\n\n# Create plot\ntime_train_plot = p9.ggplot(data=train_melt_df,\n                         mapping=p9.aes(x='time', \n                                        y='value',\n                                       color='variable'))\n\n# Draw the plots using a line graph\ntime_train_plot = time_train_plot + p9.geom_line()\n\n# Create subplots\ntime_train_plot = time_train_plot + p9.facet_wrap(['variable'], 2)\n\n# get figure size\ntime_train_plot + p9.theme(\n    figure_size=(20, 18),\n    aspect_ratio=1\/10)","07b41415":"train_df.loc[:,['signal','open_channels']].corr(method=\"spearman\")","50285412":"import plotnine as p9 # create plots\n\n# Create plot\ntime_test_plot = p9.ggplot(data=test_df,\n                         mapping=p9.aes(x='time', \n                                        y='signal'))\n\n# Draw the plots using a line graph\ntime_test_plot = time_test_plot + p9.geom_line()\n\n# get figure size\ntime_test_plot + p9.theme(\n    figure_size=(20, 18),\n    aspect_ratio=1\/10)","2f7750cd":"Now let's look at the testing set.","f94d4ebf":"plot the signal and open_channels by time for our training set.","6cdda42c":"# Exploratory Data Analysis","e7db9ba2":"Wow! 84% correlation!","6ff48f6c":"In this competition we are given ion channel signal data to predict ion channel events (0-10)","129a1dd0":"import training and testing data frames","a8fb8e92":"Cool so it looks like signal and open channels is highly correlated ,but let's calculate Spearman's Correlation to make sure."}}