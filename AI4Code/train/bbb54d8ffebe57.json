{"cell_type":{"0ec19593":"code","92089453":"code","80fd000c":"code","bba8afc2":"code","be7a304c":"code","4c06765e":"code","616125d4":"code","66fdc47a":"code","2375995c":"code","66003aec":"code","d6fca917":"code","73a86166":"markdown"},"source":{"0ec19593":"import pandas as pd\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\ncolor = sns.color_palette()\nfrom IPython.core.display import display, HTML\ndisplay(HTML(\"<style>.container { width:100% !important; }<\/style>\"))\n%matplotlib inline","92089453":"all_play = pd.read_csv(\"..\/input\/nba_2017_players_with_salary_wiki_twitter.csv\", index_col=0)","80fd000c":"all_play.head()","bba8afc2":"def plotCorrelationMatrix(df, graphWidth):\n    filename = df.dataframeName\n    df = df.dropna('columns') # drop columns with NaN\n    df = df[[col for col in df if df[col].nunique() > 1]] # keep columns where there are more than 1 unique values\n    if df.shape[1] < 2:\n        print(f'No correlation plots shown: The number of non-NaN or constant columns ({df.shape[1]}) is less than 2')\n        return\n    corr = df.corr()\n    plt.figure(num=None, figsize=(graphWidth, graphWidth), dpi=80, facecolor='w', edgecolor='k')\n    corrMat = plt.matshow(corr, fignum = 1)\n    plt.xticks(range(len(corr.columns)), corr.columns, rotation=90)\n    plt.yticks(range(len(corr.columns)), corr.columns)\n    plt.gca().xaxis.tick_bottom()\n    plt.colorbar(corrMat)\n    plt.title(f'Correlation Matrix for {filename}', fontsize=15)\n    plt.show()\n","be7a304c":"plt.subplots(figsize=(20,20))\nax = plt.axes()\nax.set_title(\"NBA Player Correlation Heatmap: Stats\")\ncorr = all_play.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values, cmap=\"Purples\")","4c06765e":"#Looking for relationship between Wins_RPM and other variables\nsns.lmplot(x=\"SALARY_MILLIONS\", y=\"WINS_RPM\", data=all_play); \nsns.lmplot(x=\"PACE\", y=\"WINS_RPM\", data=all_play);\nsns.lmplot(x=\"TWITTER_FAVORITE_COUNT\", y=\"WINS_RPM\", data=all_play);\nsns.lmplot(x=\"TWITTER_RETWEET_COUNT\", y=\"WINS_RPM\", data=all_play);\nsns.lmplot(x=\"PAGEVIEWS\", y=\"WINS_RPM\", data=all_play)","616125d4":"#Salary and Wins are related. Check if Points & Position has an effect\nsns.swarmplot(x=\"POINTS\", y=\"WINS_RPM\", hue=\"POSITION\" ,data=all_play)","66fdc47a":"#For specific Positions, does Pace of the player affect Wins\nsns.lmplot(x=\"PACE\", y=\"WINS_RPM\", col=\"POSITION\", hue=\"POSITION\",data=all_play, col_wrap=2, size=3)","2375995c":"nRowsRead = 1000 \ndf3 = pd.read_csv(\"..\/input\/nba_2017_players_with_salary_wiki_twitter.csv\", delimiter=',', nrows = nRowsRead)\ndf3.dataframeName = 'Player Stats.csv'\nnRow, nCol = df3.shape\nprint(f'There are {nRow} rows and {nCol} columns')","66003aec":"#Check the effect of Age\ndf3.head(5)\n\n","d6fca917":"#Running a regression to understand significant effect of variables on WINS_RPM\nr=smf.ols(formula='WINS_RPM ~ AGE + POINTS + PACE +POSITION', data=all_play).fit()\nprint(r.summary())","73a86166":"Exploration of How Social Media Can Predict Winning Metrics Better Than Salary"}}