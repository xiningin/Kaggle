{"cell_type":{"57bab826":"code","19e9fcfa":"code","5fe00f28":"code","8b82b20c":"code","13dc7340":"code","f347eb42":"code","81006425":"code","4124ad87":"code","22feeaab":"code","65ba8f84":"code","2c6095bc":"code","6e366bc9":"code","fdbc3fcb":"code","86cbf587":"code","63a644ac":"code","ab36cf20":"code","b25b3819":"code","0feee4b3":"code","6c84a3bc":"code","66370a4f":"code","9158f5f5":"code","b3b829db":"code","ea98e018":"code","bf7bd3cc":"code","a2c62b24":"code","bbfb9f5e":"code","2b991f62":"code","79469f2e":"code","8fcc0d18":"code","163b6a90":"code","3d14f58d":"code","4887082d":"code","df5406ce":"code","02df5a39":"code","f8c30271":"code","875acb4f":"code","28c6556f":"code","88ccd3ca":"code","92bdad94":"code","955642ad":"code","a039aeda":"code","92de9b8f":"markdown","67d5d2c0":"markdown","6686265e":"markdown","e1a400ab":"markdown","04356b5f":"markdown","377213fc":"markdown","7f250fb6":"markdown","94ac9edf":"markdown","78bc6618":"markdown","4c65d1d5":"markdown","5f4de967":"markdown","4921a582":"markdown","c7ccb071":"markdown","faf821f3":"markdown","8a57c969":"markdown","04c89656":"markdown","107c3775":"markdown","e161a888":"markdown","577ebad7":"markdown","edb774da":"markdown","a682653c":"markdown","b3960e43":"markdown","698d285a":"markdown","09c60c50":"markdown","4e4324cf":"markdown","40c29ebb":"markdown","979d7aea":"markdown","4f093b94":"markdown","de05a5f7":"markdown","29e3f129":"markdown","d9f449f2":"markdown"},"source":{"57bab826":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\nplt.style.use('seaborn-whitegrid')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","19e9fcfa":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_PassengerId = test_df[\"PassengerId\"]\n","5fe00f28":"train_df.columns","8b82b20c":"train_df.head()","13dc7340":"train_df.describe()","f347eb42":"train_df.info()","81006425":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output: Bar plot & value count\n    \"\"\"\n    #get feature\n    var = train_df[variable]\n    #count number of categorical variable\n    varValue= var.value_counts()\n    \n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","4124ad87":"category1 = [\"Survived\",'Sex','Pclass','Embarked','SibSp','Parch']\nfor c in category1:\n    bar_plot(c)","22feeaab":"category2 = ['Cabin','Name','Ticket']\nfor each in category2:\n    bar_plot(each)","65ba8f84":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins=80)\n    plt.xlabel(variable)\n    plt.ylabel('Frequency')\n    plt.title('{} distribution with histogram'.format(variable))\n    plt.show()","2c6095bc":"numericVar = ['Fare','Age','PassengerId']\nfor n in numericVar:\n    plot_hist(n)","6e366bc9":"# Pclass vs Survived\ntrain_df[['Pclass','Survived']].groupby(['Pclass'],as_index = False).mean().sort_values(by='Survived',ascending=False)","fdbc3fcb":"#Sex vs Survived\ntrain_df[['Sex','Survived']].groupby(['Sex'],as_index=False).mean().sort_values(by='Survived', ascending=False)","86cbf587":"#SibSp vs Survived\ntrain_df[['SibSp','Survived']].groupby(['SibSp'],as_index=False).mean().sort_values(by='Survived',ascending=False)","63a644ac":"#Parch vs Survived\ntrain_df[['Parch','Survived']].groupby(['Parch'],as_index=False).mean().sort_values(by='Survived',ascending=False)","ab36cf20":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for x in features:\n        #1st quartile\n        Q1 = np.percentile(df[x],25)\n        #3rd quartile\n        Q3 = np.percentile(df[x],75)\n        #IQR\n        IQR = Q3-Q1\n        # Outlier\n        outlier_step = IQR*1.5\n        # Detect outlier and its indices\n        outlier_list_col = df[(df[x]< Q1 - outlier_step) | (df[x] > Q3 + outlier_step)].index\n        #Store indices\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v>2)\n    return multiple_outliers\n    ","b25b3819":"train_df.loc[detect_outliers(train_df,[\"Age\",'SibSp','Parch','Fare'])]","0feee4b3":"#drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,['Age','SibSp','Parch','Fare']),axis = 0).reset_index(drop = True)","6c84a3bc":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","66370a4f":"train_df.columns[train_df.isnull().any()]","9158f5f5":"train_df.isnull().sum()","b3b829db":"train_df[train_df['Embarked'].isnull()]","ea98e018":"train_df.boxplot(column=\"Fare\",by = 'Embarked')\nplt.show()","bf7bd3cc":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna('C')","a2c62b24":"train_df[train_df[\"Fare\"].isnull()]","bbfb9f5e":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"]))","2b991f62":"list1 = ['SibSp','Parch','Age','Fare','Survived']\nsns.heatmap(train_df[list1].corr(),annot=True,fmt = '.2f')","79469f2e":"g = sns.factorplot(x='SibSp',y='Survived',data=train_df,kind='bar',size=6)\ng.set_ylabels('Survive Probabilty')\nplt.show()","8fcc0d18":"g = sns.factorplot(x='Parch',y='Survived',kind='bar',data=train_df,size=6)\ng.set_ylabels('Survived Probabilty')\nplt.show()","163b6a90":"g = sns.factorplot(x='Pclass',y='Survived',data=train_df,kind='bar',size=6)\ng.set_ylabels('Survived Probabilty')\nplt.show()","3d14f58d":"g = sns.FacetGrid(train_df,col='Survived')\ng.map(sns.distplot,\"Age\",bins=25)\nplt.show()","4887082d":"g = sns.FacetGrid(train_df,col='Survived',row='Pclass')\ng.map(plt.hist, \"Age\",bins=25)\ng.add_legend()\nplt.show()","df5406ce":"g = sns.FacetGrid(train_df,row='Embarked',size=3)\ng.map(sns.pointplot,\"Pclass\",\"Survived\",'Sex')\ng.add_legend()\nplt.show()","02df5a39":"g = sns.FacetGrid(train_df,row='Embarked',col='Survived',size=3)\ng.map(sns.barplot,'Sex',\"Fare\")\ng.add_legend()\nplt.show()","f8c30271":"train_df[train_df['Age'].isnull()]","875acb4f":"sns.factorplot(x='Sex',y='Age',hue='Pclass',data=train_df,kind='box')\nplt.show()","28c6556f":"sns.factorplot(x='Parch',y='Age',data=train_df,kind='box')\nsns.factorplot(x='SibSp',y='Age',data=train_df,kind='box')\nplt.show()","88ccd3ca":"train_df['Sex'] = [1 if i=='male' else 0 for i in train_df['Sex']]","92bdad94":"sns.heatmap(train_df[[\"Age\",'Sex','SibSp','Parch','Pclass']].corr(),annot=True)\nplt.show()","955642ad":"index_nan_age = list(train_df['Age'][train_df[\"Age\"].isnull()].index)\nfor i in index_nan_age:\n    age_pred = train_df[\"Age\"][((train_df[\"SibSp\"]==train_df.iloc[i][\"SibSp\"]) & (train_df[\"Parch\"]==train_df.iloc[i][\"Parch\"]) & (train_df[\"Pclass\"]==train_df.iloc[i][\"Pclass\"])) ].median()\n    age_med = train_df[\"Age\"].median()\n    if not np.isnan(age_pred):\n        train_df[\"Age\"].iloc[i] = age_pred\n    else:\n        train_df[\"Age\"].iloc[i]=age_med\n    ","a039aeda":"train_df[train_df[\"Age\"].isnull()]","92de9b8f":"# Variable Description\n<a id='2'><\/a>\n<font color='blue'>\n1.PassengerId: Unique ID number for each passenger<br>\n2.Survived: Whether the passenger is survived(1) or not(0)<br>\n3.Pclass: Passenger class<br>\n4.Name: Name of the passenger<br>\n5.Sex: Gender of the passenger<br>\n6.Age: Age of the passenger<br>\n7.SibSp:Number of siblings\/spouse<br>\n8.Parch: Number of parent\/children<br>\n9.Ticket: Ticket number<br>\n10.Fare: Ticket price<br>\n11.Cabin: Cabin No<br>\n12.Embarked: Port where passenger embarked (C= Cherbourg, Q=Queenstown, S=Southhampton)","67d5d2c0":"\n# Load and Check Data\n<a id='1'><\/a> \n\n","6686265e":"<a id='5'><\/a>\n## Numerical Variable\n","e1a400ab":"Sex is not informative for age prediction.\n1st class passengers are older than 2nd, and 2nd is older than 3rd","04356b5f":"<a id='20'><\/a><br>\n## Fill Missing: Age Feature","377213fc":"<a id='15'><\/a><br>\n## Pclass -- Survived\n","7f250fb6":"# Introduction\nOne of the most important key point of 1912 is the disaster of Titanic. In 1912, the Titanic sank after colliding with an iceberg which lead to a death of 1502 passengers and crew out of 2224.\n\n<font color='blue'>\nContent:\n    \n1. [Load and Check Data](#1)\n2. [Variable Description](#2)  \n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n3. [Basic Data Analysis](#6)<br>\n4. [Outlier Detection](#7)<br>\n5. [Missing Value](#8)<br>\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n6. [Visualisation](#11)\n    * [Correlation Between Sibsp -- Parch -- Age -- Fare -- Survived](#12)\n    * [SibSp -- Survived](#13)\n    * [Parch -- Survived](#14)\n    * [Pclass -- Survived](#15)\n    * [Age -- Survived](#16)\n    * [Pclass -- Survived -- Age](#17)\n    * [Embarked -- Sex -- Pclass--Survived](#18)\n    * [Embarked -- Sex -- Fare -- Survived](#19)\n    * [Fill Missing: Age Feature](#20)","94ac9edf":"<a id='16'><\/a><br>\n## Age -- Survived\n","78bc6618":"<a id='14'><\/a><br>\n## Parch -- Survived\n","4c65d1d5":"<a id='10'><\/a><br>\n## Fill Missing Value\n* Embark has 2 missing value\n* Fare has only 1","5f4de967":"* float64(2): Fare and Age<br>\n* int64(5): Pclass, SibSp, Parch, PassengerId, survived<br>\n* object(5): Cabin, Embarked, Ticket, Name, Sex","4921a582":"age is not correlated with sex but correlated with parch sibsp pclass","c7ccb071":"<a id='12'><\/a><br>\n## Correlation Between Sibsp -- Parch -- Age -- Fare -- Survived","faf821f3":"<a id='19'><\/a><br>\n## Embarked -- Sex -- Fare--Survived\n","8a57c969":"<a id='11'><\/a><br>\n# Visualisation","04c89656":"<a id='18'><\/a><br>\n## Embarked -- Sex -- Pclass--Survived\n","107c3775":"* Having a lot of SibSp have less chance to survive\n* If SibSp<=2, passenger has more chance to survive\n* One can create a new feature which describes these categories.","e161a888":"<a id='4'><\/a>\n## Categorical Variable","577ebad7":"* Pclass is important for training","edb774da":"<a id='6'><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","a682653c":"<a id='8'><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","b3960e43":"* SibSp and Parch can be used for new feature extraction with th=3\n* small families have more chance to survive\n* there is a std in survival of passenger with parch=3","698d285a":"<a id='17'><\/a><br>\n## Parch -- Survived -- Age\n","09c60c50":"<a id='3'><\/a>\n# Univariate Variable Analysis\n\n* Categorical Variable Analysis: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, SibSp and Parch<br>\n* Numerical Variable Analysis: Age, PassengerId, Fare","4e4324cf":"<a id='13'><\/a><br>\n## SibSp -- Survived","40c29ebb":"* age<=10 has a high survival rate\n* oldest passengers survived\n* large number of 20yo did not survive,\n* most passengers are in 15-35 age range.\n* use age feature in training\n* use age dist to fill missing value age","979d7aea":"<a id='7'><\/a><br>\n# Outlier Detection","4f093b94":"* Passengers who pay higher fare has better survival rate","de05a5f7":"Fare feature seems to have correlation with survived feature (0.26)","29e3f129":"* Female passenger have much better survival rate rather than males.\n* Males have better survival rate in Pclass 3 in Embark C\n* embarked and sex will be used in training","d9f449f2":"<a id='9'><\/a><br>\n## Find Missing Value"}}