{"cell_type":{"b19a5281":"code","e8872323":"code","7d1d6522":"code","f794e48a":"code","0a7ff047":"code","27300ab7":"code","f9b2181b":"code","71e635b9":"code","1df4d2af":"code","57a2d5bd":"code","9848d33f":"code","f7d5ca54":"code","22c19a3b":"code","fdde24f3":"code","f37a595f":"code","20b3a064":"markdown"},"source":{"b19a5281":"import numpy as np\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n#\n# Import Keras modules\n#\nfrom keras import models\nfrom keras import layers\nfrom tensorflow.keras.utils import to_categorical\nfrom sklearn.neural_network import MLPClassifier # neural network","e8872323":"# Load the iris dataset\n\niris = datasets.load_iris()","7d1d6522":"X = iris.data\ny = iris.target","f794e48a":"#Data split in train\/test sets","0a7ff047":"# Create training and test split\n#\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=1)","27300ab7":"# Create categorical labels\n#\ntrain_labels = to_categorical(y_train)\ntest_labels = to_categorical(y_test)","f9b2181b":"clf = MLPClassifier(solver='adam', alpha=1e-5, hidden_layer_sizes=(3, 3), random_state=1)","71e635b9":"clf.fit(X_train, y_train)","1df4d2af":"prediction = clf.predict(X_test)\nprint(prediction)","57a2d5bd":"print(y_test)","9848d33f":"print('The accuracy of the Multi-layer Perceptron is:',metrics.accuracy_score(prediction,y_test))","f7d5ca54":"# Create the network\n#\nnetwork = models.Sequential()\nnetwork.add(layers.Dense(32, activation='relu', input_shape=(4,)))\nnetwork.add(layers.Dense(64, activation='relu'))\nnetwork.add(layers.Dense(128, activation='relu'))\nnetwork.add(layers.Dense(3, activation='softmax'))","22c19a3b":"# Compile the network\n#\nnetwork.compile(optimizer='sgd',\n                loss='categorical_crossentropy',\n                metrics=['accuracy'])","fdde24f3":"# Fit the neural network\n#\nnetwork.fit(X_train, train_labels, epochs=20, batch_size=40)","f37a595f":"# Get the accuracy of test data set\n#\ntest_loss, test_acc = network.evaluate(X_test, test_labels)\n#\n# Print the test accuracy\n#\nprint('Test Accuracy: ', test_acc, '\\nTest Loss: ', test_loss)","20b3a064":"Classify iris dataset using MLP classifier in keras API. Perform the following.\n"}}