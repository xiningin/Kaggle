{"cell_type":{"d71bc4be":"code","3cb5192b":"code","53818ca7":"code","28f519ce":"code","4fb5fab4":"code","ba669d83":"code","6e5f2af6":"code","ffd58563":"code","00b7ed9a":"code","fcc58ec0":"code","07265805":"code","b73cc9a0":"code","42e053bb":"code","9c7691e0":"code","03a03463":"code","efae4ac5":"code","3361a81b":"code","e30fd9c1":"code","a303a2a9":"code","9773f5a1":"code","b1384942":"code","cb7c6541":"code","7234eccb":"code","d97d833d":"code","6c9cdccc":"code","b7ac0691":"code","6c6aeb7f":"code","2d458cf1":"code","093059ea":"code","909a1b74":"code","08fb627b":"markdown","ccdb7117":"markdown"},"source":{"d71bc4be":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","3cb5192b":"water.info()","53818ca7":"water.describe()","28f519ce":"Potability_0=water[water.Potability==0]\nPotability_0.head()","4fb5fab4":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","ba669d83":"Potability_0.describe()","6e5f2af6":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","ffd58563":"Potability_1=water[water.Potability==1]\nPotability_1.head()","00b7ed9a":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","fcc58ec0":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","07265805":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","b73cc9a0":"water.nunique()","42e053bb":"round(water.Potability.value_counts()*100\/len(water),2)","9c7691e0":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","03a03463":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","efae4ac5":"round(data.Potability.value_counts()*100\/len(data),2)","3361a81b":"!pip install pycaret","e30fd9c1":"from pycaret.classification import *","a303a2a9":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","9773f5a1":"rf = create_model('rf')","b1384942":"print(rf)","cb7c6541":"tuned_rf = tune_model(rf,optimize = 'Kappa')","7234eccb":"plot_model(tuned_rf, plot = 'auc')","d97d833d":"plot_model(tuned_rf, plot = 'pr')","6c9cdccc":"plot_model(tuned_rf, plot='feature')","b7ac0691":"plot_model(tuned_rf, plot = 'confusion_matrix')","6c6aeb7f":"evaluate_model(tuned_rf)","2d458cf1":"predict_model(tuned_rf)","093059ea":"unseen_predictions = predict_model(tuned_rf, data=data_unseen)\nunseen_predictions.head()","909a1b74":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","08fb627b":"#### Treating Missing value for Potability_1 records","ccdb7117":"#### Treating Missing value for Potability_0 records"}}