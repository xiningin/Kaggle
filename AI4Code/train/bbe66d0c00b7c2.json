{"cell_type":{"73d03823":"code","8a015f0f":"code","6e77dfb1":"code","6f39851b":"code","2e88c5e6":"code","45f8b4a2":"code","9e64a386":"code","0e70b4a6":"code","982225d0":"code","d74a7d6e":"code","2bbcda2b":"code","90da886e":"code","a9d42c79":"code","ca87a5df":"code","94ef1f8e":"code","ee6ff375":"code","7afd3d95":"code","679d928c":"code","7fa3c26c":"code","27eb4d02":"code","3c3cf5b6":"code","69d5f89e":"code","60a5c514":"code","5bf3ce77":"code","1002fa8d":"code","baa85266":"code","d3f87604":"code","2ad1c9f3":"code","14d29583":"code","e5dde237":"code","b56ab275":"code","791368d5":"code","7d1c79d9":"code","576af051":"code","1475ba55":"code","0d8d26eb":"code","2b0d43cc":"code","68fdeaeb":"code","40879186":"code","018dd0e1":"code","fa7328a6":"code","824bd43b":"code","ab093605":"markdown","f73a9655":"markdown","05d40d80":"markdown","381788c8":"markdown","09d10efe":"markdown","de4292b6":"markdown","bd3ecd14":"markdown","f8b06092":"markdown","4f8507b6":"markdown","1dce2847":"markdown","86b4010b":"markdown","0193dbdf":"markdown","6bedbdf8":"markdown","f8e7a321":"markdown","b86c1993":"markdown","dba5ba7c":"markdown","d33c984e":"markdown","69972bf5":"markdown","f7b9e124":"markdown","1d9f8f41":"markdown","ea9001e3":"markdown","5fc9ac3b":"markdown","2683668e":"markdown","ef2c8628":"markdown","19e6c0e7":"markdown","9ecd577b":"markdown","fe360596":"markdown","b67d24c7":"markdown","930c100d":"markdown","5ff2daac":"markdown","ccc61498":"markdown","d33e3796":"markdown","34069731":"markdown","f293f640":"markdown","99f1ab5b":"markdown","6b530a83":"markdown","53343817":"markdown","a13db7f3":"markdown","50d27d62":"markdown","4aaba0a3":"markdown"},"source":{"73d03823":"pip install chart_studio","8a015f0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\nimport chart_studio.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6e77dfb1":"data=pd.read_csv('..\/input\/Video_Games_Sales_as_at_22_Dec_2016.csv')","6f39851b":"data=data[data['Year_of_Release']<=2015.0]      # very less data after 2015 is available ","2e88c5e6":"data.head()","45f8b4a2":"data.isnull().sum()","9e64a386":"data.shape","0e70b4a6":"plt.figure(figsize=(20,10))\nsns.countplot(data['Platform'])\nplt.title('Number of games on each platform',fontdict={'fontsize':30})\nplt.xlabel('Platform',fontdict={'fontsize':20})\nplt.ylabel('Number of games',fontdict={'fontsize':20})","982225d0":"df=data['Genre'].value_counts()\n\ntrace=go.Pie(labels=df.index,\n            values=df.values,\n            hole=0.3)\n\nlayout=go.Layout(title='Fraction of games of each Genre')\n\nfig=go.Figure(data=[trace],layout=layout)\niplot(fig)","d74a7d6e":"plt.figure(figsize=(15,10))\nax=sns.countplot(data['Rating'])\nplt.title('Number of games of different Ratings',fontdict={'fontsize':30})\nplt.xlabel('Rating',fontdict={'fontsize':20})\nplt.ylabel('Rating',fontdict={'fontsize':30})\nfor bar in ax.patches:\n    ax.text(bar.get_x()+bar.get_width()\/2,bar.get_height(),int(bar.get_height()),ha='center',va='bottom',fontsize=15,color='red')","2bbcda2b":"df=data['Publisher'].value_counts()[:30]\n\ntrace=go.Bar(x=df.index,\n            y=df.values,\n            marker=dict(color='rgba(0,0,255,0.5)',\n                       line=dict(color='rgb(0,0,0)',width=1.5)))\n\nlayout=go.Layout(title='Number of games released by each Publisher',\n                xaxis=dict(title='Publisher'),\n                yaxis=dict(title='Number of games released'))\n\nfig=go.Figure(data=[trace],layout=layout)\niplot(fig)\n","90da886e":"df=data['Year_of_Release'].value_counts().sort_index()\ntrace=go.Scatter(x=df.index,\n                y=df.values,\n                mode='markers+lines',\n                marker=dict(color='rgba(255,0,0,0.5)'))\n\nlayout=go.Layout(title='Number of games released each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Number of games'))\n\nfig=go.Figure(data=[trace],layout=layout)\n\niplot(fig)","a9d42c79":"ds_df=data[data['Platform']=='DS']['Year_of_Release'].value_counts().sort_index()\nps2_df=data[data['Platform']=='PS2']['Year_of_Release'].value_counts().sort_index()\nps3_df=data[data['Platform']=='PS3']['Year_of_Release'].value_counts().sort_index()\nx_df=data[data['Platform']=='X360']['Year_of_Release'].value_counts().sort_index()\nwii_df=data[data['Platform']=='Wii']['Year_of_Release'].value_counts().sort_index()\npc_df=data[data['Platform']=='PC']['Year_of_Release'].value_counts().sort_index()\n\ntrace1=go.Scatter(x=ds_df.index,\n                  y=ds_df.values,\n                  mode='lines+markers',\n                 name='Nintendo DS')\ntrace2=go.Scatter(x=ps2_df.index,\n                  y=ps2_df.values,\n                  mode='lines+markers',\n                 name='PS2')\ntrace3=go.Scatter(x=ps3_df.index,\n                  y=ps3_df.values,\n                  mode='lines+markers',\n                 name='PS3')\ntrace4=go.Scatter(x=x_df.index,\n                  y=x_df.values,\n                  mode='lines+markers',\n                 name='XBOX 360')\ntrace5=go.Scatter(x=wii_df.index,\n                  y=wii_df.values,\n                  mode='lines+markers',\n                 name='Wii')\ntrace6=go.Scatter(x=pc_df.index,\n                  y=pc_df.values,\n                  mode='lines+markers',\n                 name='PC')\n\nlayout=go.Layout(title='Number of games of top platforms released each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Number of games'))\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4,trace5,trace6],layout=layout)\niplot(fig)","ca87a5df":"action_df=data[data['Genre']=='Action']['Year_of_Release'].value_counts().sort_index()\nsports_df=data[data['Genre']=='Sports']['Year_of_Release'].value_counts().sort_index()\nshooter_df=data[data['Genre']=='Shooter']['Year_of_Release'].value_counts().sort_index()\nadventure_df=data[data['Genre']=='Adventure']['Year_of_Release'].value_counts().sort_index()\nracing_df=data[data['Genre']=='Racing']['Year_of_Release'].value_counts().sort_index()\n\ntrace1=go.Scatter(x=action_df.index,\n                 y=action_df.values,\n                 mode='lines+markers',\n                 name='Action')\ntrace2=go.Scatter(x=sports_df.index,\n                 y=sports_df.values,\n                 mode='lines+markers',\n                 name='Sports')\ntrace3=go.Scatter(x=shooter_df.index,\n                 y=shooter_df.values,\n                 mode='lines+markers',\n                 name='Shooter')\ntrace4=go.Scatter(x=adventure_df.index,\n                 y=adventure_df.values,\n                 mode='lines+markers',\n                 name='Adventure')\ntrace5=go.Scatter(x=racing_df.index,\n                 y=racing_df.values,\n                 mode='lines+markers',\n                 name='Racing')\n\nlayout=go.Layout(title='Number of games in each Genre released in each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Number of games released'))\nfig=go.Figure(data=[trace1,trace2,trace3,trace4,trace5],layout=layout)\niplot(fig)","94ef1f8e":"action_df=data[data['Genre']=='Action'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nsports_df=data[data['Genre']=='Sports'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nshooter_df=data[data['Genre']=='Shooter'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nadventure_df=data[data['Genre']=='Adventure'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nracing_df=data[data['Genre']=='Racing'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\n\ntrace1=go.Scatter(x=action_df.index,\n                 y=action_df.values,\n                 mode='lines+markers',\n                 name='Action')\ntrace2=go.Scatter(x=sports_df.index,\n                 y=sports_df.values,\n                 mode='lines+markers',\n                 name='Sports')\ntrace3=go.Scatter(x=shooter_df.index,\n                 y=shooter_df.values,\n                 mode='lines+markers',\n                 name='Shooter')\ntrace4=go.Scatter(x=adventure_df.index,\n                 y=adventure_df.values,\n                 mode='lines+markers',\n                 name='Adventure')\ntrace5=go.Scatter(x=racing_df.index,\n                 y=racing_df.values,\n                 mode='lines+markers',\n                 name='Racing')\n\nlayout=go.Layout(title='Global Sales of some genres in each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Global Sales'))\nfig=go.Figure(data=[trace1,trace2,trace3,trace4,trace5],layout=layout)\niplot(fig)","ee6ff375":"ds_df=data[data['Platform']=='DS'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nps2_df=data[data['Platform']=='PS2'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nps3_df=data[data['Platform']=='PS3'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nx_df=data[data['Platform']=='X360'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nwii_df=data[data['Platform']=='Wii'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\npc_df=data[data['Platform']=='PC'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\n\ntrace1=go.Scatter(x=ds_df.index,\n                  y=ds_df.values,\n                  mode='lines+markers',\n                 name='Nintendo DS')\ntrace2=go.Scatter(x=ps2_df.index,\n                  y=ps2_df.values,\n                  mode='lines+markers',\n                 name='PS2')\ntrace3=go.Scatter(x=ps3_df.index,\n                  y=ps3_df.values,\n                  mode='lines+markers',\n                 name='PS3')\ntrace4=go.Scatter(x=x_df.index,\n                  y=x_df.values,\n                  mode='lines+markers',\n                 name='XBOX 360')\ntrace5=go.Scatter(x=wii_df.index,\n                  y=wii_df.values,\n                  mode='lines+markers',\n                 name='Wii')\ntrace6=go.Scatter(x=pc_df.index,\n                  y=pc_df.values,\n                  mode='lines+markers',\n                 name='PC')\n\nlayout=go.Layout(title='Global Sales of games of top platforms in each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Global sales'))\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4,trace5,trace6],layout=layout)\niplot(fig)","7afd3d95":"ea_df=data[data['Publisher']=='Electronic Arts'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nubisoft_df=data[data['Publisher']=='Ubisoft'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\nactivision_df=data[data['Publisher']=='Activision'][['Global_Sales','Year_of_Release']].groupby('Year_of_Release')['Global_Sales'].sum().sort_index()\n\n\ntrace1=go.Scatter(x=ea_df.index,\n                  y=ea_df.values,\n                  mode='lines+markers',\n                 name='Electronic Arts')\ntrace2=go.Scatter(x=ubisoft_df.index,\n                  y=ubisoft_df.values,\n                  mode='lines+markers',\n                 name='Ubisoft')\ntrace3=go.Scatter(x=activision_df.index,\n                  y=activision_df.values,\n                  mode='lines+markers',\n                 name='Activision')\n\n\nlayout=go.Layout(title='Global Sales of games of top Publishers in each year',\n                xaxis=dict(title='Year'),\n                yaxis=dict(title='Global sales'))\n\nfig=go.Figure(data=[trace1,trace2,trace3],layout=layout)\niplot(fig)","679d928c":"df=data[data['Genre'].isin(['Action','Sports','Racing','Shooter','Adventure'])]\nplt.figure(figsize=(15,10))\nsns.violinplot(x='Genre',y='Global_Sales',data=df)\nplt.title('Distribution of Global Sales of popular Genres',fontdict={'fontsize':30})\nplt.xlabel('Genre',fontdict={'fontsize':20})\nplt.ylabel('Global_Sales',fontdict={'fontsize':20})","7fa3c26c":"df=data[data['Platform'].isin(['PS2','DS','PS3','X360','PC','Wii'])]\nplt.figure(figsize=(15,10))\nsns.boxenplot(x='Platform',y='Global_Sales',data=df)\nplt.title('Distribution of Global Sales of games on popular Platforms',fontdict={'fontsize':30})\nplt.xlabel('Platform',fontdict={'fontsize':20})\nplt.ylabel('Global_Sales',fontdict={'fontsize':20})","27eb4d02":"data[(data['Genre']=='Sports') & (data['Global_Sales']>80)]","3c3cf5b6":"df=data[data['Publisher'].isin(['Electronic Arts','Ubisoft','Activision'])]\nplt.figure(figsize=(15,10))\nsns.swarmplot(x='Publisher',y='Global_Sales',data=df)\nplt.title('Distribution of Global Sales of games of popular Publishers',fontdict={'fontsize':30})\nplt.xlabel('Publishers',fontdict={'fontsize':20})\nplt.ylabel('Global_Sales',fontdict={'fontsize':20})","69d5f89e":"data[(data['Publisher']=='Activision') & (data['Global_Sales']>14)]","60a5c514":"df=data[data['Rating'].isin(['E','T','E10+','M'])]\nplt.figure(figsize=(15,10))\ng=sns.stripplot(x='Rating',y='Global_Sales',data=df)\nplt.title('Distribution of Global Sales vs  Rating',fontdict={'fontsize':30})\nplt.xlabel('Rating',fontdict={'fontsize':20})\nplt.ylabel('Global Sales',fontdict={'fontsize':20})","5bf3ce77":"df=data[data['Publisher'].isin(['Electronic Arts','Ubisoft','Activision'])]\nplt.figure(figsize=(15,10))\nsns.boxenplot(x='Publisher',y='Critic_Score',data=df)\nplt.title('Distribution of Critic Score of games of popular Publishers',fontdict={'fontsize':30})\nplt.xlabel('Publishers',fontdict={'fontsize':20})\nplt.ylabel('Critic_Score',fontdict={'fontsize':20})","1002fa8d":"df=data[data['Platform'].isin(['PS2','DS','PS3','X360','PC','Wii'])]\nplt.figure(figsize=(15,10))\nsns.stripplot(x='Platform',y='Critic_Score',data=df)\nplt.title('Distribution of Critic Score of games on popular Platforms',fontdict={'fontsize':30})\nplt.xlabel('Platform',fontdict={'fontsize':20})\nplt.ylabel('Critic Score',fontdict={'fontsize':20})","baa85266":"df=data[data['Genre'].isin(['Action','Sports','Racing','Shooter','Adventure'])]\nplt.figure(figsize=(15,10))\nsns.boxplot(x='Genre',y='Critic_Score',data=df)\nplt.title('Distribution of Critic Score of popular Genres',fontdict={'fontsize':30})\nplt.xlabel('Genre',fontdict={'fontsize':20})\nplt.ylabel('Critic Score',fontdict={'fontsize':20})","d3f87604":"df=data[data['Rating'].isin(['E','T','E10+','M'])]\nplt.figure(figsize=(15,10))\nsns.violinplot(x='Rating',y='Critic_Score',data=df)\nplt.title('Distribution of Critic Scores vs  Rating',fontdict={'fontsize':30})\nplt.xlabel('Rating',fontdict={'fontsize':20})\nplt.ylabel('Critic Score',fontdict={'fontsize':20})","2ad1c9f3":"data['User_Score']=data['User_Score'].replace('tbd',np.nan)\ndata['User_Score']=data['User_Score'].astype(float)","14d29583":"df=data[data['Publisher'].isin(['Electronic Arts','Ubisoft','Activision'])]\nplt.figure(figsize=(15,10))\nsns.swarmplot(x='Publisher',y='User_Score',data=df)\nplt.title('Distribution of User Score of games of popular Publishers',fontdict={'fontsize':30})\nplt.xlabel('Publishers',fontdict={'fontsize':20})\nplt.ylabel('User_Score',fontdict={'fontsize':20})","e5dde237":"df=data[data['Platform'].isin(['PS2','DS','PS3','X360','PC','Wii'])]\nplt.figure(figsize=(15,10))\nsns.violinplot(x='Platform',y='User_Score',data=df)\nplt.title('Distribution of User Score of games on popular Platforms',fontdict={'fontsize':30})\nplt.xlabel('Platform',fontdict={'fontsize':20})\nplt.ylabel('User Score',fontdict={'fontsize':20})","b56ab275":"df=data[data['Genre'].isin(['Action','Sports','Racing','Shooter','Adventure'])]\nplt.figure(figsize=(15,10))\nsns.swarmplot(x='Genre',y='User_Score',data=df)\nplt.title('Distribution of User Scores of popular Genres',fontdict={'fontsize':30})\nplt.xlabel('Genre',fontdict={'fontsize':20})\nplt.ylabel('User Score',fontdict={'fontsize':20})","791368d5":"df=data[data['Rating'].isin(['E','T','E10+','M'])]\nplt.figure(figsize=(15,10))\nsns.boxenplot(x='Rating',y='User_Score',data=df)\nplt.title('Distribution of User Scores vs  Rating',fontdict={'fontsize':30})\nplt.xlabel('Rating',fontdict={'fontsize':20})\nplt.ylabel('User Score',fontdict={'fontsize':20})","7d1c79d9":"df=data[data['Platform'].isin(['Wii','PS2','PS3','X360','Wii','PC'])]\ndf_na=df[['Platform','NA_Sales']].groupby('Platform')['NA_Sales'].mean().reset_index()\ndf_eu=df[['Platform','EU_Sales']].groupby('Platform')['EU_Sales'].mean().reset_index()\ndf_jp=df[['Platform','JP_Sales']].groupby('Platform')['JP_Sales'].mean().reset_index()\ndf_global=df[['Platform','Global_Sales']].groupby('Platform')['Global_Sales'].mean().reset_index()\n\ntrace1=go.Bar(x=df_na['Platform'],\n             y=df_na['NA_Sales'],\n             marker=dict(color='rgba(255,0,0,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='NA Sales')\n\ntrace2=go.Bar(x=df_eu['Platform'],\n             y=df_eu['EU_Sales'],\n             marker=dict(color='rgba(0,255,0,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='EU Sales')\n\ntrace3=go.Bar(x=df_jp['Platform'],\n             y=df_jp['JP_Sales'],\n             marker=dict(color='rgba(0,0,255,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='JP Sales')\n\ntrace4=go.Bar(x=df_global['Platform'],\n             y=df_global['Global_Sales'],\n             marker=dict(color='rgba(139,69,19,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='Global Sales')\n\nlayout=go.Layout(title='Sales in various regions on different Platforms',\n                xaxis=dict(title='Platforms'),\n                yaxis=dict(title='Sales'),\n                barmode='group')\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4],layout=layout)\niplot(fig)","576af051":"df=data[data['Genre'].isin(['Action','Sports','Shooter','Racing','Adventure'])]\ndf_na=df[['Genre','NA_Sales']].groupby('Genre')['NA_Sales'].mean().reset_index()\ndf_eu=df[['Genre','EU_Sales']].groupby('Genre')['EU_Sales'].mean().reset_index()\ndf_jp=df[['Genre','JP_Sales']].groupby('Genre')['JP_Sales'].mean().reset_index()\ndf_global=df[['Genre','Global_Sales']].groupby('Genre')['Global_Sales'].mean().reset_index()\n\ntrace1=go.Bar(x=df_na['Genre'],\n             y=df_na['NA_Sales'],\n             marker=dict(color='rgba(240,128,128,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='NA Sales')\n\ntrace2=go.Bar(x=df_eu['Genre'],\n             y=df_eu['EU_Sales'],\n             marker=dict(color='rgba(218,165,32,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='EU Sales')\n\ntrace3=go.Bar(x=df_jp['Genre'],\n             y=df_jp['JP_Sales'],\n             marker=dict(color='rgba(0,128,128,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='JP Sales')\n\ntrace4=go.Bar(x=df_global['Genre'],\n             y=df_global['Global_Sales'],\n             marker=dict(color='rgba(139,0,139,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='Global Sales')\n\nlayout=go.Layout(title='Sales in various regions in different Genres',\n                xaxis=dict(title='Genre'),\n                yaxis=dict(title='Sales'),\n                barmode='group')\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4],layout=layout)\niplot(fig)","1475ba55":"df=data[data['Publisher'].isin(['Electronic Arts','Ubisoft','Activision'])]\ndf_na=df[['Publisher','NA_Sales']].groupby('Publisher')['NA_Sales'].mean().reset_index()\ndf_eu=df[['Publisher','EU_Sales']].groupby('Publisher')['EU_Sales'].mean().reset_index()\ndf_jp=df[['Publisher','JP_Sales']].groupby('Publisher')['JP_Sales'].mean().reset_index()\ndf_global=df[['Publisher','Global_Sales']].groupby('Publisher')['Global_Sales'].mean().reset_index()\n\ntrace1=go.Bar(x=df_na['Publisher'],\n             y=df_na['NA_Sales'],\n             marker=dict(color='rgba(178,34,34,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='NA Sales')\n\ntrace2=go.Bar(x=df_eu['Publisher'],\n             y=df_eu['EU_Sales'],\n             marker=dict(color='rgba(34,139,34,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='EU Sales')\n\ntrace3=go.Bar(x=df_jp['Publisher'],\n             y=df_jp['JP_Sales'],\n             marker=dict(color='rgba(64,224,208,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='JP Sales')\n\ntrace4=go.Bar(x=df_global['Publisher'],\n             y=df_global['Global_Sales'],\n             marker=dict(color='rgba(210,105,30,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='Global Sales')\n\nlayout=go.Layout(title='Sales in various regions by different Publishers',\n                xaxis=dict(title='Publisher'),\n                yaxis=dict(title='Sales'),\n                barmode='group')\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4],layout=layout)\niplot(fig)","0d8d26eb":"df=data[data['Rating'].isin(['E','M','T','E10+'])]\ndf_na=df[['Rating','NA_Sales']].groupby('Rating')['NA_Sales'].mean().reset_index()\ndf_eu=df[['Rating','EU_Sales']].groupby('Rating')['EU_Sales'].mean().reset_index()\ndf_jp=df[['Rating','JP_Sales']].groupby('Rating')['JP_Sales'].mean().reset_index()\ndf_global=df[['Rating','Global_Sales']].groupby('Rating')['Global_Sales'].mean().reset_index()\n\ntrace1=go.Bar(x=df_na['Rating'],\n             y=df_na['NA_Sales'],\n             marker=dict(color='rgba(128,0,0,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='NA Sales')\n\ntrace2=go.Bar(x=df_eu['Rating'],\n             y=df_eu['EU_Sales'],\n             marker=dict(color='rgba(255,215,0,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='EU Sales')\n\ntrace3=go.Bar(x=df_jp['Rating'],\n             y=df_jp['JP_Sales'],\n             marker=dict(color='rgba(85,107,47,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='JP Sales')\n\ntrace4=go.Bar(x=df_global['Rating'],\n             y=df_global['Global_Sales'],\n             marker=dict(color='rgba(0,0,205,0.5)',\n                        line=dict(color='rgb(0,0,0)',width=1.5)),\n             name='Global Sales')\n\nlayout=go.Layout(title='Sales in various regions in different Ratings',\n                xaxis=dict(title='Ratings'),\n                yaxis=dict(title='Sales'),\n                barmode='group')\n\nfig=go.Figure(data=[trace1,trace2,trace3,trace4],layout=layout)\niplot(fig)","2b0d43cc":"data['User_Score']=data['User_Score']*10\ndf=data[data['Platform'].isin(['Wii','PS2','PS3','X360','Wii','PC'])]\ndf_cs=df[['Platform','Critic_Score']].groupby('Platform')['Critic_Score'].mean().reset_index()\ndf_us=df[['Platform','User_Score']].groupby('Platform')['User_Score'].mean().reset_index()\n\ntrace1=go.Bar(x=df_cs['Platform'],\n             y=df_cs['Critic_Score'],\n              marker=dict(color='rgba(128,0,0,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='Critic Score')\n\ntrace2=go.Bar(x=df_us['Platform'],\n             y=df_us['User_Score'],\n              marker=dict(color='rgba(0,0,205,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='User Score')\n\nlayout=go.Layout(title='Average User and Critic Score for games on top Platforms',\n                xaxis=dict(title='Platforms'),\n                yaxis=dict(title='Average Scores'),\n                barmode='relative')\n\nfig=go.Figure(data=[trace1,trace2],layout=layout)\n\niplot(fig)  ","68fdeaeb":"df=data[data['Genre'].isin(['Action','Shooter','Adventure','Racing','Sports'])]\ndf_cs=df[['Genre','Critic_Score']].groupby('Genre')['Critic_Score'].mean().reset_index()\ndf_us=df[['Genre','User_Score']].groupby('Genre')['User_Score'].mean().reset_index()\n\ntrace1=go.Bar(x=df_cs['Genre'],\n             y=df_cs['Critic_Score'],\n              marker=dict(color='rgba(34,139,34,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='Critic Score')\n\ntrace2=go.Bar(x=df_us['Genre'],\n             y=df_us['User_Score'],\n              marker=dict(color='rgba(255,99,71,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='User Score')\n\nlayout=go.Layout(title='Average User and Critic Score for games in different Genres',\n                xaxis=dict(title='Genres'),\n                yaxis=dict(title='Average Scores'),\n                barmode='relative')\n\nfig=go.Figure(data=[trace1,trace2],layout=layout)\n\niplot(fig)","40879186":"df=data[data['Publisher'].isin(['Electronic Arts','Ubisoft','Activision'])]\ndf_cs=df[['Publisher','Critic_Score']].groupby('Publisher')['Critic_Score'].mean().reset_index()\ndf_us=df[['Publisher','User_Score']].groupby('Publisher')['User_Score'].mean().reset_index()\n\ntrace1=go.Bar(x=df_cs['Publisher'],\n             y=df_cs['Critic_Score'],\n              marker=dict(color='rgba(218,165,32,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='Critic Score')\n\ntrace2=go.Bar(x=df_us['Publisher'],\n             y=df_us['User_Score'],\n              marker=dict(color='rgba(0,0,205,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='User Score')\n\nlayout=go.Layout(title='Average User and Critic Score for games by top Publishers',\n                xaxis=dict(title='Publishers'),\n                yaxis=dict(title='Average Scores'),\n                barmode='relative')\n\nfig=go.Figure(data=[trace1,trace2],layout=layout)\n\niplot(fig)","018dd0e1":"df=data[data['Rating'].isin(['M','T','E','E10+'])]\ndf_cs=df[['Rating','Critic_Score']].groupby('Rating')['Critic_Score'].mean().reset_index()\ndf_us=df[['Rating','User_Score']].groupby('Rating')['User_Score'].mean().reset_index()\n\ntrace1=go.Bar(x=df_cs['Rating'],\n             y=df_cs['Critic_Score'],\n              marker=dict(color='rgba(128,0,0,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='Critic Score')\n\ntrace2=go.Bar(x=df_us['Rating'],\n             y=df_us['User_Score'],\n              marker=dict(color='rgba(255,255,0,0.5)',\n                          line=dict(color='rgb(0,0,0)',width=1.5)),\n              name='User Score')\n\nlayout=go.Layout(title='Average User and Critic Score for games in different Ratings',\n                xaxis=dict(title='Ratings'),\n                yaxis=dict(title='Average Scores'),\n                barmode='relative')\n\nfig=go.Figure(data=[trace1,trace2],layout=layout)\n\niplot(fig)","fa7328a6":"data.head()","824bd43b":"from math import pi\n\nplt.style.use('ggplot')\nplt.figure(figsize=(20,15))\nidx=1\nfor platform in ['DS','PS3','X360','PS2','PC','Wii']:\n    df=data[data['Platform']==platform][['EU_Sales','JP_Sales','Other_Sales']]\n    labels=list(df.columns)\n    values=list(df.mean().values)\n\n\n    N=len(labels)\n    angles=[n\/float(N)*2*pi for n in range(N)]\n    angles+=angles[:1]\n    values+=values[:1]\n    ax = plt.subplot(3,2,idx,polar=True)\n\n    plt.xticks(angles[:-1],labels,color='grey',size=16)\n    ax.set_rlabel_position(0)\n    plt.yticks(list(np.arange(0.025,0.1,0.025)),['0.025','0.05','0.075'],color='grey',size=12)\n    plt.ylim(0,0.1)\n    ax.plot(angles,values,linewidth=1,linestyle='solid')\n    ax.fill(angles,values,'b',alpha=0.1)\n    plt.title(platform)\n    idx+=1\n    \nplt.tight_layout()","ab093605":"Genre wise, Action games are created the most . Sadly, Shooter games are made less . I love these two genres a lot. What about you?","f73a9655":"The ratings are given by ESRB (Entertainment Software Rating Board). E rating means the game is suitable for generally all ages. It may contain cartoons,fantasy and mild violence. M rating implies the game is suitable for age 17 and above. It might contain intense violence,blood and gore, sexual content and strong language. T rating implies game is suitable for ages 13 and above. May contain violence, minimal blood and infrequent use of strong language. E10+ rating implies the game is suitable for all ages above 10. You may look into other ratings on the official website of ESRB : https:\/\/www.esrb.org\/ratings\/ratings_guide.aspx","05d40d80":"The game is Wii Sports :D","381788c8":"PS2 performs really well in terms of User Scores. Its median is higher than those of others and the violin is bulged at the median that means many games have that score, which is good. ","09d10efe":"Median of Global Sales of EA is higher than that of Activision and Ubisoft. This means more than half of the games of EA make more global sales than the median global sales of Activision and Ubisoft. And on top of that, EA release more number of games as well. So, EA has quality as well as quantity. This sounds ideal :D Some games of Activision have made really high sales compared to that of Ubisoft and EA.","de4292b6":"Globally, Shooter(Adventure) based games are sold the most(least). In NA aswell, Shooter(Adventure) are at the top(bottom). In EU aswell, Shooter(Adventure) grabs the top(bottom) spot. In Japan, Sports(Shooter) based games are sold the most(least). Yeah, I had heard Japanese do all the things differently than the rest of the world, xD, it seems to be true here aswell. \nMaking Shooter based games seems beneficial to the companies as they have the highest sales.\n","bd3ecd14":"Globally,in Eu and in NA, M rated games are sold the most while in Japan T rated games are sold the most. ","f8b06092":"Median of Critic score of PC games is higher than all other popular platforms. Yeah, PC rocks ! :D ","4f8507b6":"<h1><center><font size=\"6\">Video Games Data Analysis<\/font><\/center><\/h1>\n\n\n\n\n<img src=\"https:\/\/cdn0.tnwcdn.com\/wp-content\/blogs.dir\/1\/files\/2018\/03\/video-games-and-block-chain.jpeg\" width=\"800\"><\/img>\n\n\n\n<br>","1dce2847":"# <a id='7'>Sales in different regions vs Categorical Features<\/a> ","86b4010b":"Nintendo DS and PS2 have most number of games followed by Wii, PS3, PS and PSP !  Until today, I believed that PC has most number of games. Sad I only have PC :( What about you ?","0193dbdf":"M and T rated games have tough competition. Top score of T rated games is more than that of M rated games but even the lowest is lower than that of M. ","6bedbdf8":"Looks like action games get pretty consistent User Scores","f8e7a321":"All these ratings games have higher User Score than Critic Score","b86c1993":"Electronic Arts has released most number of games surpassing others by large margin. Close fight between Activision and Ubisoft.","dba5ba7c":"Wii has some games which have made huge Global Sales. Maybe it is the the same Sports game we saw before. PC has a flattened distribution and so most games make almost same amout of global sales. ","d33c984e":"# <a id='5'>Critic Score vs Categorical Features<\/a> ","69972bf5":"Again, as the median of critic scores for EA is more than that of Activision and Ubisoft, that means more than half of the games of EA are rated better than the median of Ubisoft and Activision. EA is really a BEAST :D . Despite making so many games, the lowest critic score isn't of EA. So, they are maintaining their quality I guess. :D","f7b9e124":"Sales in Japan are significantly less compared to sales in other regions, after all Japan is just a country while the other two are continents. Global sales of games on XBOX 360(PC) are highest(lowest). I am sad for PC gamers. Surprisingly, it seems no one plays computer games in Japan, LOL.  In EU, PS3 based games are sold the most. In Japan, PS2 based games are sold the most. While in NA, XBOX360 games are sold the most.  ","1d9f8f41":"Only PC and Nintendo DS were in the market before 2000. Each Platform had a year of peak release. Nintendo DS platform games were released in largest number in the year 2008,Wii in 2009 and X360 and PS3 in the year 2011. This can be to rival each other's businesses. Maybe, officials in Wii would have enforced higher release targets upon looking at the releases of DS in 2008 :P .  ","ea9001e3":"Number of racing games released show decreasing trend after year 2003. Sad for them. Action games released are the most every year since 2004. ","5fc9ac3b":"# <a id='4'>Global Sales vs Categorical Features<\/a> ","2683668e":"# <a id='2'>Counting Visualisations<\/a> ","ef2c8628":"# <a id='8'>Comparing User vs Critic Score<\/a> ","19e6c0e7":"In PC, PS3 and XBOX360 based games, the Critic Score is higher than the User Score . On the other hand, PS2 and Wii based games have higher Userscore than critic score","9ecd577b":"The User Score is out of 10 while the critic score is out of 100. So, I shall multiply User score by 10. ","fe360596":"# <a id='0'>Content<\/a>\n\n- <a href='#1'>Importing Basic Libraries and Modules<\/a> \n- <a href='#2'>Count Visualisations<\/a> \n- <a href='#3'>Time Series Visualisations<\/a>  \n- <a href='#4'> Global Sales vs Categorical Features<\/a>\n- <a href='#5'>Critic Score vs Categorical Features<\/a>   \n- <a href='#6'>User Score vs Categorical Features<\/a>\n- <a href='#7'>Sales in different regions vs Categorical Features<\/a>\n- <a href='#8'>Comparison between Critic and User Score<\/a>","b67d24c7":"Either number of games released have really decreased after 2009 or only partial data of those years is available. If the former is true and if the trend continues, then it is sad news for gamers :( . But yeah, quality of games matter more to me rather than quantity. What about you?","930c100d":"# <a id='3'>Visualisations involving Time Series<\/a> ","5ff2daac":"Most games are targeted towards all age groups. Seems logical. It is then followed by Teen, Mature and then E+10 rating. ","ccc61498":"Except for Sports based games, all other genres have higher user score than critic score.","d33e3796":"# <a id='1'>Importing Basic Libraries and Modules<\/a> ","34069731":"Tough fight between Sports and Shooter Genre. I am in favour of Shooter games ","f293f640":"Globally, in Eu and in Japan, EA makes the highest sales while in NA, Activision makes the highest.","99f1ab5b":"Some Sports games have made huge global sales. Even though Action games are most released but none of their games have made such huge global sales. Global sales of adventure games show a flattened distribution in certain range and so we can say that most Adventure games' global sales are almost in the same range ","6b530a83":"M rating games have higher median of critic score than that of other ratings. ","53343817":"# <a id='6'>User Score vs Categorical Features<\/a> ","a13db7f3":"Wow, Only Ubisoft has higher average User score than Critic Score. ","50d27d62":"Hello Kagglers, video games have special place in my life. I used to play them a lot (You can say I was addicted :P). Nowadays, I only play them seldomly and want to get better in machine learning through this platform. Today, I came across this dataset and was very excited to analyze its data. I am sure many Kagglers used to game as well and I hope they will be happy to see these visualisations. Comment your most favourite game you have ever played . Let us see if we have anything in common apart from using Kaggle :D. My favourite game is Crysis 3 . \n\n**Please upvote if you like this Kernel, it is free of charge :P  **","4aaba0a3":"Wow, all of those games are from Call of Duty series. I love the COD series. Amongst the above three, I have played Black Ops and MW3 but haven't yet played Black Ops 3. Now I feel like playing it :D. What about you guys ?"}}