{"cell_type":{"c1ef3607":"code","264e052a":"code","873df957":"code","9fc5f45b":"code","f7a00c5f":"code","5f5737d5":"code","c92fcb26":"code","c22b7cd1":"code","7c1d1403":"code","a833d5e0":"code","7451c7de":"code","bc7da79e":"code","230ac489":"code","b0892be3":"code","e511c30d":"code","780da66f":"code","29dd3751":"code","80cb0d9a":"code","78ab35db":"code","72fd046b":"code","e0c24a7d":"code","08d95507":"code","8c1164d8":"code","c570b471":"code","62788c1d":"code","7917b386":"code","a263a1b3":"code","eb2fc8ba":"code","b81cd938":"code","4c4ababe":"code","bdcbf634":"code","1c2ff692":"code","d9c667a1":"code","a7da4d95":"code","c556caee":"markdown","c10f0eac":"markdown","48a1c9df":"markdown","35119e22":"markdown","371c42bb":"markdown","b10f5f76":"markdown","e9c415bc":"markdown","9493cfd8":"markdown","ef77f682":"markdown","9744cfd8":"markdown","05fecf37":"markdown","f210c808":"markdown"},"source":{"c1ef3607":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns \n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","264e052a":"# plt.style.available","873df957":"# a = [1,2,3,4]\n# plt.plot(a)\n# plt.show()","9fc5f45b":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassangerId = test_df[\"PassengerId\"]","f7a00c5f":"train_df.columns","5f5737d5":"train_df.head()","c92fcb26":"train_df.describe()","c22b7cd1":"train_df.info()","7c1d1403":"def bar_plot(variable):\n    \"\"\"\"\n         input: variable ex: \"Sex\"\n         output: bar plot & value count\n     \"\"\"    \n     # get feature\n    var = train_df[variable]\n     # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    ","a833d5e0":"category1 = [\"Survived\", \"Sex\", \"Pclass\", \"Embarked\", \"SibSp\", \"Parch\"]\nfor c in category1:\n    bar_plot(c)\n    ","7451c7de":"category2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","bc7da79e":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","230ac489":"numericVar = [\"Fare\", \"Age\", \"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","b0892be3":"# train_df[[\"Pclass\", \"Survived\"]]","e511c30d":"# Pclass vs Survived\n\n# train_df[[\"Pclass\", \"Survived\"]].groupby([\"Pclass\"], as_index = False).mean()","780da66f":"# Pclass vs Survived\ntrain_df[[\"Pclass\", \"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False )","29dd3751":"# Sex vs Survived\ntrain_df[[\"Sex\", \"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False )","80cb0d9a":"# SibSp vs Survived\ntrain_df[[\"SibSp\", \"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False )","78ab35db":"# Parch vs Survived\ntrain_df[[\"Parch\", \"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False )","72fd046b":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3-Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n        \n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers\n        ","e0c24a7d":"# a = [\"a\", \"a\", \"a\", \"a\", \"b\", \"b\"]\n# Counter(a)","08d95507":"train_df.loc[detect_outliers(train_df,[\"Age\", \"SibSp\", \"Parch\", \"Fare\"])]","8c1164d8":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\", \"SibSp\", \"Parch\", \"Fare\"]),axis = 0).reset_index(drop = True)","c570b471":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df], axis = 0).reset_index(drop = True)","62788c1d":"train_df.head()","7917b386":"# train_df.columns","a263a1b3":"train_df.columns[train_df.isnull().any()]","eb2fc8ba":"train_df.isnull().sum()","b81cd938":"train_df[train_df[\"Embarked\"].isnull()]","4c4ababe":"train_df.boxplot(column = \"Fare\", by = \"Embarked\")\nplt.show()","bdcbf634":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"c\")\ntrain_df[train_df[\"Embarked\"].isnull()]","1c2ff692":"train_df[train_df[\"Fare\"].isnull()]","d9c667a1":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","a7da4d95":"train_df[train_df[\"Fare\"].isnull()]","c556caee":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n\n* Categorical Variable: Survived, Sex, Pclass, Embarked, Cabin, Name, Sibsp and Parch \n* Numerical Variable: Age, PassangerId and Fare","c10f0eac":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","48a1c9df":"<a id = \"9\"><\/a><br>\n## Find Missing Value","35119e22":"<a id = \"1\"><\/a><br>\n# Load and Check Data","371c42bb":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1","b10f5f76":"<a id = \"5\"><\/a><br>\n## Numerical Variable ","e9c415bc":"<a id = \"2\"><\/a><br>\n# Variable Description\n\n1. PassengerId: unique id number to each passanger\n1.  Survived: passenger survive(1) or died(0)\n1. Pclass: passenger class\n1. Name: name \n1. Sex: gender of passenger\n1. Age: age of passanger\n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number \n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked (C = Chesbourg, Q = Queenstown, S = Southampton)","9493cfd8":"<a id = \"8\"><\/a><br>\n\n# Missing Value\n * Find Missing Value\n * Fill Missing Value","ef77f682":"# Introduction\n\nThe sinking of Titanic is one of the most notorious shipwrecks in the history.In 1912,during her voyage, the Titanic sank after colliding with an iceberg,killing 1502 out of 2224 passengers and crew.\n\n<font color = 'blue'>\n      \nContent:\n\n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n     * [Univariate Variable Analysis](#3)\n        * [Categorical Variable ](#4)\n        * [Numerical Variable ](#5)    \n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n      * [Find Missing Value](#9)\n      * [Fill Missing Value](#10)","9744cfd8":"<a id = \"7\"><\/a><br>\n# Outlier Detection","05fecf37":"<a id = \"4\"><\/a><br>\n## Categorical Variable","f210c808":"* float64(2) : Fare and age\n* int64(5) : Pclass, sibsp, parch, passengerId and survived\n* object(5) : Cabin, embarked, ticket and sex"}}