{"cell_type":{"bdf2e407":"code","623ce1b7":"code","789b8f4a":"code","d7bf3904":"code","f02518dd":"code","1ffd727a":"code","e1e4afd1":"code","e090647e":"code","2a0efe45":"code","0e3db4dc":"code","98aa04c5":"code","c8acd6c4":"code","8a41714f":"code","55622692":"code","40625497":"code","f5b36a34":"code","2ac0c37c":"code","8f64f300":"code","c6124af0":"code","904e8f95":"code","695714a0":"code","147b0813":"code","4df3268b":"code","ac053ad7":"code","f6552c98":"code","3dc28550":"code","bd69f86c":"code","af239bd6":"code","26ad6563":"code","c3c4b41e":"code","3ba8a5aa":"code","25251484":"code","92a522d2":"code","7646c2ad":"code","527621a6":"code","68ead52b":"code","34a41fd6":"code","29d70700":"code","09c258af":"code","447bab24":"code","7dc72d4f":"markdown","ea3d9316":"markdown","748b55a7":"markdown","3afe2cea":"markdown","1c9689d2":"markdown","c74bdc38":"markdown","236cf326":"markdown","91161a1b":"markdown","7f423297":"markdown","91a78e27":"markdown","e47d27de":"markdown","3f228261":"markdown","3b08f311":"markdown","a2baff34":"markdown","d9103745":"markdown","a001b960":"markdown","0e046efb":"markdown","3adb9439":"markdown","0176ba40":"markdown","4f69e4a6":"markdown","0c378d19":"markdown","f4b2e0fa":"markdown","d32ce2a3":"markdown","363a26c4":"markdown","7eb04c42":"markdown","818de027":"markdown","d4976324":"markdown","aa7a767a":"markdown","6268e798":"markdown","1db78e94":"markdown","343f26ac":"markdown","8996bdc7":"markdown","88856b7a":"markdown","143385e9":"markdown","f1c9d5c5":"markdown","d1a382c6":"markdown","ed63166b":"markdown","96c3e0d1":"markdown","e1d06748":"markdown","2473109e":"markdown","35d585db":"markdown","b571f92d":"markdown"},"source":{"bdf2e407":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom plotly.offline import plot\n\n# display all the columns in the dataset\npd.pandas.set_option('display.max_columns', None)\n\n# Setting color palette.\norange_black = ['#fdc029', '#df861d', '#FF6347', '#aa3d01', '#a30e15', '#800000', '#171820']\n\n# Setting plot styling.\nplt.style.use('fivethirtyeight')","623ce1b7":"# lets load the dataset first\nresponse = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")","789b8f4a":"# check the dataset\nresponse.head()","d7bf3904":"response.shape","f02518dd":"# lets drop the 1st row\nresponse.drop(0,inplace=True)","1ffd727a":"# re-check the dataset\nresponse.head()","e1e4afd1":"# dataset information\nresponse.info()","e090647e":"# check null values\nresponse.isnull().sum().sort_values(ascending = False)[response.isnull().sum()!=0]","2a0efe45":"# visualize 15 columns with most no. of null values \nplt.figure(constrained_layout=True, figsize=(12, 8))\npercent = (response.isnull().sum().sort_values(ascending=False) \/ len(response) *\n           100)[(response.isnull().sum().sort_values(ascending=False) \/ len(response) *\n                 100) != 0]\n\nmissing = pd.DataFrame({\"missing%\":percent[:15]})\n\nsns.barplot(x=missing.index,\n            y='missing%',\n            data=missing,\n            palette=orange_black)\nplt.xticks(rotation=30)\nplt.title('Train Data Missing Values')","0e3db4dc":"# Replace null values with \"Missing\"\nfor col in response.columns:\n    response[col].fillna(\"Missing\",inplace=True)","98aa04c5":"# helper function to plot countplots for features\ndef univariate_plots(feat,name):\n    count = response[feat].value_counts().sort_values(ascending = False)\n\n    # lets visualize the feature distribution in the dataset\n    fig = px.pie(count,\n                 values=count.values,\n                 names=count.index,\n                 color_discrete_sequence=orange_black,\n                 hole=.1,title= name + \" Distribution\")\n    fig.update_traces(textinfo='percent', pull=0.01)    \n    fig.show()","c8acd6c4":"# Check Age Distribution\nunivariate_plots(\"Q1\",\"Age Wise\")","8a41714f":"# Gender Distribution\nunivariate_plots(\"Q2\",\"Gender Wise\")","55622692":"# Country wise Distribution\nunivariate_plots(\"Q3\",\"Country Wise\")","40625497":"# Let's check Educational Qualification of the Kagglers\nunivariate_plots(\"Q4\",\"Educational Qualification\")","f5b36a34":"# Check the current role\nunivariate_plots(\"Q5\",\"Title Most Similar to your current Role\")","2ac0c37c":"univariate_plots(\"Q6\",\"Coding Experience\")","8f64f300":"Q7 = [\"Q7_Part_1\",\"Q7_Part_2\",\"Q7_Part_3\",\"Q7_Part_4\",\"Q7_Part_5\",\"Q7_Part_6\",\"Q7_Part_7\",\"Q7_Part_8\",\"Q7_Part_9\",\"Q7_Part_10\",\n      \"Q7_Part_11\",\"Q7_Part_12\",\"Q7_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q7):\n    plt.subplot(7,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Programming Languages used on a Regular Basis\")\nplt.show()","c6124af0":"values = []\nindex  = [\"Python\",\"R\",\"SQL\",\"C\",\"C++\",\"JAVA\",\"Java Script\",\"Julia\",\"Swift\",\"Bash\",\"MATLAB\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q7_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_Part_12'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q7_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=index,\n            y=values,\n            palette=orange_black)\nplt.xticks(rotation=30)\nplt.title('Programming Languages used on a Regular Basis')","904e8f95":"univariate_plots(\"Q8\",\"Programming Language Recommended to an Aspirant Data Scientist\")","695714a0":"Q9 = [\"Q9_Part_1\",\"Q9_Part_2\",\"Q9_Part_3\",\"Q9_Part_4\",\"Q9_Part_5\",\"Q9_Part_6\",\"Q9_Part_7\",\"Q9_Part_8\",\"Q9_Part_9\",\"Q9_Part_10\",\n      \"Q9_Part_11\",\"Q9_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q9):\n    plt.subplot(6,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Integrated Developmemt Environment\")\nplt.show()","147b0813":"values = []\nindex  = [\"Jupyter\",\"RStudio\",\"Visual Studio\",\"VSCode\",\"PyCharm\",\"Spyder\",\"Notepad++\",\"Sublime Text\",\"Vim\/Emacs\",\"MATLAB\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q9_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q9_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=index,\n            y=values,            \n            palette=orange_black)\nplt.xticks(rotation=30)\nplt.title('Integrated Development Environment')","4df3268b":"Q10 = [\"Q10_Part_1\",\"Q10_Part_2\",\"Q10_Part_3\",\"Q10_Part_4\",\"Q10_Part_5\",\"Q10_Part_6\",\"Q10_Part_7\",\"Q10_Part_8\",\"Q10_Part_9\",\"Q10_Part_10\",\"Q10_Part_11\",\"Q10_Part_12\",\"Q10_Part_13\",\"Q10_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q10):\n    plt.subplot(7,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Hosted Notebook Products used\")\nplt.show()","ac053ad7":"values = []\nindex  = [\"Kaggle Notebooks\",\"Colab Notebooks\",\"Azure Notebooks\",\"PaperSpace\/Gradient\",\"Binder\/JupyterHub\",\"Code Ocean\",\n          \"IBM Watson Studio\",\"Amazon Sagemaker Studio\",\"Amazon EMR Notebooks\",\"Google Cloud AI Platform Notebook\",\n          \"Google Cloud Datalab Notebooks\",\"Databricks Collaborative Notebooks\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q10_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_12'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_Part_13'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q10_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\n#values = sorted(values,reverse=True)\n\nusers = pd.DataFrame({\"Users%\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=\"Users%\",\n            data=users,\n            palette=orange_black)\nplt.title(\"Hosted Notebook Products used\")","f6552c98":"univariate_plots(\"Q11\",\"Computing Platform\")","3dc28550":"Q12= ['Q12_Part_1','Q12_Part_2','Q12_Part_3','Q12_OTHER']\n\nplt.figure(figsize = (12,8))\n\nfor idx,col in enumerate(Q12):\n    plt.subplot(2,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Specialized Hardware Used\")\nplt.show()","bd69f86c":"values = []\nindex  = ['GPUs','None','TPUs','Others']\n\n\nvalues.append((len(response[response['Q12_Part_1'] == \"GPUs\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q12_Part_3'] == \"None\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q12_Part_2'] == \"TPUs\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q12_OTHER'] == \"Other\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"Users%\":values})\n\nplt.figure(figsize = (12,8))\n\nsns.barplot(x=index,\n            y=\"Users%\",\n            data=users,\n            palette=orange_black)\nplt.title('Specialized Hardware Used')","af239bd6":"univariate_plots(\"Q13\",\"No. of Times TPUs used\")","26ad6563":"Q14 = [\"Q14_Part_1\",\"Q14_Part_2\",\"Q14_Part_3\",\"Q14_Part_4\",\"Q14_Part_5\",\"Q14_Part_6\",\"Q14_Part_7\",\"Q14_Part_8\",\"Q14_Part_9\",\"Q14_Part_10\",\"Q14_Part_11\",\"Q14_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q14):\n    plt.subplot(6,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Data Visualization Libraries or Tools\")\nplt.show()","c3c4b41e":"values = []\nindex  = [\"Matplotlib\",\"Seaborn\",\"Plotly\",\"GGplot\",\"Shiny\",\"D3 js\",\"Altair\",\"Bokeh\",\"Geoplotlib\",\"Leafleat\/Folium\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q14_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q14_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\n#values = sorted(values,reverse=True)\n\nusers = pd.DataFrame({\"Users%\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=\"Users%\",\n            data=users,\n            palette=orange_black)\nplt.title('Data Visualization Libraries or Tools')","3ba8a5aa":"univariate_plots(\"Q15\",\"Year using ML Methods\")","25251484":"Q16 = [\"Q16_Part_1\",\"Q16_Part_2\",\"Q16_Part_3\",\"Q16_Part_4\",\"Q16_Part_5\",\"Q16_Part_6\",\"Q16_Part_7\",\"Q16_Part_8\",\"Q16_Part_9\",\n       \"Q16_Part_10\",\"Q16_Part_11\",\"Q16_Part_12\",\"Q16_Part_13\",\"Q16_Part_14\",\"Q16_Part_15\",\"Q16_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q16):\n    plt.subplot(8,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"Machine Learning Frameworks used\")\nplt.show()","92a522d2":"values = []\nindex  = [\"Scikit-Learn\",\"TensorFlow\",\"Keras\",\"PyTorch\",\"Fast.ai\",\"MXNet\",\"XGBoost\",\"LGBM\",\"CatBoost\",\"Prophet\",\"H20 3\",\n          \"Caret\",\"Tidymodels\",\"JAX\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q16_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_12'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_13'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_14'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_Part_15'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q16_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"Users%\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=\"Users%\",\n            data=users,\n            palette=orange_black)\nplt.title('Machine Learning Frameworks ')","7646c2ad":"Q17 = [\"Q17_Part_1\",\"Q17_Part_2\",\"Q17_Part_3\",\"Q17_Part_4\",\"Q17_Part_5\",\"Q17_Part_6\",\"Q17_Part_7\",\"Q17_Part_8\",\"Q17_Part_9\"\n       ,\"Q17_Part_10\",\"Q17_Part_11\",\"Q17_OTHER\"]\n\nplt.figure(figsize = (16,32))\n\nfor idx,col in enumerate(Q17):\n    plt.subplot(6,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n\nplt.suptitle(\"ML Algorithm used on a Regular Basis\")\nplt.show()","527621a6":"values = []\nindex  = [\"Linear or Logistic Regression\",\"Decision Trees or Random Forests\",\"Gradient Boosting Machines (xgboost, lightgbm, etc)\"\n          ,\"Bayesian Approaches\",\"Evolutionary Approaches\",\"Dense Neural Networks (MLPs, etc)\",\"Convolutional Neural Networks\",\n          \"Generative Adversarial Networks\",\"Recurrent Neural Networks\",\"Transformer Networks (BERT, gpt-3, etc)\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q17_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_7']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_8']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_9']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_10'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_Part_11'] != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q17_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=values,\n            palette=orange_black)\n\nplt.title('ML Algorithm used on a Regular Basis')","68ead52b":"Q18 = [\"Q18_Part_1\",\"Q18_Part_2\",\"Q18_Part_3\",\"Q18_Part_4\",\"Q18_Part_5\",\"Q18_Part_6\",\"Q18_OTHER\"]\n\nplt.figure(figsize = (32,32))\n\nfor idx,col in enumerate(Q18):\n    plt.subplot(4,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n    #plt.xticks(rotation=30)\n\nplt.suptitle(\"Computer Vision Method used on a Regular Basis\")\nplt.show()","34a41fd6":"values = []\nindex  = [\"PIL\/cv2\/skimage etc.\",\"U-Net\/Mask\/R-CNN etc.\",\"YOLOv3\/RetinaNet\/etc.\",\n          \"VGG\/Inception\/ResNet etc.\",\"GAN\/VAN etc\",\"None\",\"Other\"]\n\nvalues.append((len(response[response['Q18_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_Part_6']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q18_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=values,\n            palette=orange_black)\n\nplt.title('Computer Vision Methods used on a Regular Basis')","29d70700":"Q19 = [\"Q19_Part_1\",\"Q19_Part_2\",\"Q19_Part_3\",\"Q19_Part_4\",\"Q19_Part_5\",\"Q19_OTHER\"]\n\nplt.figure(figsize = (32,32))\n\nfor idx,col in enumerate(Q19):\n    plt.subplot(4,2,idx+1)\n    sns.countplot(response[col],palette=orange_black)\n    #plt.xticks(rotation=30)\n\nplt.suptitle(\"NLP Methods used on a Regular Basis\")\nplt.show()","09c258af":"values = []\nindex  = [\"Word embeddings\/vectors (GLoVe, fastText, word2vec)\",\n          \"Encoder-decoder models (seq2seq, vanilla transformers)\",\n          \"Contextualized embeddings (ELMo, CoVe)\",\n          \"Transformer language models (GPT-3, BERT, XLnet, etc)\",\n          \"None\",\"Other\"]\n\nvalues.append((len(response[response['Q19_Part_1']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q19_Part_2']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q19_Part_3']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q19_Part_4']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q19_Part_5']  != \"Missing\"])\/response.shape[0])*100)\nvalues.append((len(response[response['Q19_OTHER']   != \"Missing\"])\/response.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(y=index,\n            x=values,\n            palette=orange_black)\n\nplt.title('NLP Methods used on a Regular Basis')","447bab24":"univariate_plots(\"Q20\",\"Size Of the Company\")","7dc72d4f":"Personal Laptops are the most popular computing platforms","ea3d9316":"We have quite a good represntation from all age groups ranging from 18 to 70+ old","748b55a7":"Python is by far the most popular programming language for Data Scientists","3afe2cea":"#### Q11 - What type of computing platform do you use most often for your data science projects?","1c9689d2":"Google Collab & Kaggle are the top hosted notebooks environments","c74bdc38":"TPUs are yet to gain popularity, may be because its not as straight forward as using CPUs\/GPUs!","236cf326":"Almost 50% of the Kagglers have less than 2 years of experience in using Machine Learning methods","91161a1b":"* 26% of the Kagglers are students\n* 13% are Professional Data Scientists\n* 10% are Software Professionals but not Data Scientists","7f423297":"#### Q2 - What is your gender","91a78e27":"#### Q19 - Which of the following natural language processing (NLP) methods do you use on a regular basis (Select all that apply)","e47d27de":"#### Q18- Which categories of computer vision methods do you use on a regular basis? (Select all that apply)","3f228261":"* Matplotlibs and Seaborns are the most popular libraries for visualization\n* Plotly (extensively used in this notebook :-) ) is also becoming popular\n* GGPlot is at the third place","3b08f311":"Almost 30% Kagglers are from India, next highest is from USA (11%)","a2baff34":"Out of the total participants, 80% were Male!","d9103745":"Again, Python!","a001b960":"All the features are categorical","0e046efb":"No surprise again, Linear, Logistic Regressions , Decision Trees and Random Forests are the most popular algorithms used","3adb9439":"Again, no surprise, Word Embeddings,Encoder Decoder models are at the top here!","0176ba40":"#### Q7 - What programming languages do you use on a regular basis? (Select all that apply)","4f69e4a6":"Dataset has 20037 rows and 355 columns","0c378d19":"#### Q15 - For how many years have you used machine learning methods?","f4b2e0fa":"GPUs is most widely used by data scientists","d32ce2a3":"Transfer Learning rules as far as computer vision is concerned","363a26c4":"Almost 75% of the Kagglers are either Graduate or Post Graduate!","7eb04c42":"#### Q6 - For how many years have you been writing code and\/or programming?","818de027":"#### Q20 - What is the size of the company where you are employed?","d4976324":"#### Q4 - What is the highest level of formal education that you have attained or plan to attain within the next 2 years?","aa7a767a":"* Around 60% of the Kagglers have less than 5 years of Progamming Experience\n* 15% of the Kagglers have more than 10 years of Programming Experience","6268e798":"#### Q13 - Approximately how many times have you used a TPU (tensor processing unit)?","1db78e94":"#### Q5 - Select the title most similar to your current role (or most recent title if retired)","343f26ac":"#### Q8 - What programming language would you recommend an aspiring data scientist to learn first?","8996bdc7":"#### Q17 - Which of the following ML algorithms do you use on a regular basis? (Select all that apply)","88856b7a":"# Objective - \n\nThis year Kaggle is launching the second annual Data Science Survey Challenge, where we will be awarding a prize pool of $30,000 to notebook authors who tell a rich story about a subset of the data science and machine learning community.\n\nThe challenge objective: tell a data story about a subset of the data science community represented in this survey, through a combination of both narrative text and data exploration. A \u201cstory\u201d could be defined any number of ways, and that\u2019s deliberate. The challenge is to deeply explore (through data) the impact, priorities, or concerns of a specific group of data science and machine learning practitioners. That group can be defined in the macro (for example: anyone who does most of their coding in Python) or the micro (for example: female data science students studying machine learning in masters programs). This is an opportunity to be creative and tell the story of a community you identify with or are passionate about!","143385e9":"No surprise looking at the top 4 frameworks here!","f1c9d5c5":"#### Q1 - What is your age (# years)?","d1a382c6":"#### Q9- Which of the following integrated development environments (IDE's) do you use on a regular basis?(Select all that apply)","ed63166b":"#### Q14 - What data visualization libraries or tools do you use on a regular basis? (Select all that apply)","96c3e0d1":"#### Q16 - Which of the following machine learning frameworks do you use on a regular basis? (Select all that apply)","e1d06748":"#### Q10-Which of the following hosted notebook products do you use on a regular basis? (Select all that apply)","2473109e":"Jupyter is the most popular IDE for Data Scientists","35d585db":"#### Q3 - In which country do you currently reside?","b571f92d":"#### Q12-Which types of specialized hardware do you use on a regular basis? (Select all that apply)"}}