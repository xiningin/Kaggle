{"cell_type":{"e4213d89":"code","842f3349":"code","013bfedc":"code","2b89550b":"code","1d83cd1d":"code","552e42cf":"code","1f8d04e4":"code","5fb398f0":"code","5d0203e6":"code","0b6f59ff":"code","81d01e63":"code","036ef533":"code","192577e5":"code","67c17974":"code","f327a35e":"code","b737aa2c":"code","2455858c":"code","7511af35":"code","fc8bd93e":"code","9ec3ffe1":"code","0f50f8e9":"code","be61eec2":"code","82805e43":"code","6bbab39d":"code","d9380169":"code","48eb4f11":"code","cb15de27":"code","30a175a4":"code","9a6c83c3":"code","bbfb0889":"code","0969855f":"code","2885844c":"code","1a9eb59b":"code","4c96e803":"code","480f8590":"code","0b6a6739":"code","d4f418a9":"code","00ec863d":"code","d69b492f":"markdown","3f8a8033":"markdown","faa872af":"markdown","e9857323":"markdown","80f69f2a":"markdown","ace14800":"markdown","f72a4208":"markdown","a940e7ab":"markdown","023bad7e":"markdown","505ba4b4":"markdown","81a04829":"markdown","add94244":"markdown","357a4838":"markdown","34721f18":"markdown","ed4289bc":"markdown","79eb3686":"markdown","06d5b174":"markdown","2dc07520":"markdown","21c44324":"markdown","b26d93c1":"markdown","eb5913c0":"markdown","c5a75223":"markdown","48a84dc5":"markdown","83fe2ef7":"markdown","0a480ef8":"markdown","5ee2887c":"markdown","a04c8145":"markdown","c7051598":"markdown","17bb7db6":"markdown","f5e7bbdc":"markdown","976b0ddb":"markdown","7f89148c":"markdown","a5a09aa8":"markdown","bcb9b4ef":"markdown","e3910f96":"markdown","7afd3c63":"markdown"},"source":{"e4213d89":"import csv as csv \nimport numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\nimport geopandas as gp\nimport statsmodels.api as sm","842f3349":"#Loading of my datasets into the console\nemploymentrate = pd.read_excel('..\/input\/employment-rate\/employmentrate2017.xlsx')\n\nemploymentrate.head()\n\n#References\n#London DataStore\n#(Employment Rates by Ethnicity)\n#(https:\/\/data.london.gov.uk\/dataset\/employment-rates-by-ethnicity)","013bfedc":"#Loading of my second dataset\nemploymentindustry = pd.read_excel('..\/input\/employment-industry\/employmentindustry2017.xlsx')\n\nemploymentindustry.head()\n\n#References\n#London DataStore\n#(Workplace Employment by Industry\n#(https:\/\/data.london.gov.uk\/dataset\/workplace-employment-industry-borough))","2b89550b":"#Loading of my third dataset\nlondoncensus = pd.read_csv('..\/input\/london-census\/londoncensus.csv')\n\nlondoncensus.head()\n\n#References\n#London Census Data\n#https:\/\/moodle.city.ac.uk\/mod\/page\/view.php?id=1400847","1d83cd1d":"#Datasets Information, mean, max, std for example\nprint('The Employment Rate dataframe has {} rows and {} columns'.format(employmentrate.shape[0], employmentrate.shape[1]))\nprint('The Employment Industry dataframe has {} rows and {} columns'.format(employmentindustry.shape[0], employmentindustry.shape[1]))\nprint('The London Census dataframe has {} rows and {} columns'.format(londoncensus.shape[0], londoncensus.shape[1]))\n","552e42cf":"employmentrate.describe(include='all')","1f8d04e4":"employmentindustry.describe(include='all')","5fb398f0":"londoncensus.describe(include='all')","5d0203e6":"#I tried using dataframes shape and count to give me the number of missing values\n#But it didn't show me the 3 missing values with exclamation point (!) in the employmentrate dataset\nprint (employmentrate.shape[0] - employmentrate.count())","0b6f59ff":"#Then I tried using isnull() to find out if the 3 missing values would be discovered and it wasn't...\natLeastOneNaN = employmentrate['Indian'].isnull() | employmentrate['Pakistan\/Bangladesh'].isnull()\nprint(atLeastOneNaN)","81d01e63":"#Here are the three missing values in the employmentrate dataset\nprint(employmentrate.Indian[12])\nprint(employmentrate['Pakistan\/Bangladesh'][21])\nprint(employmentrate['Pakistan\/Bangladesh'][25])","036ef533":"#As you can see when I try to get the mean of the dataset, the two obvious columns with '!' in them are missing\nemploymentrate.mean()","192577e5":"#Right here, I am replacing the '!' with NaN values and then replacing those NaN values with the means of the....\n#...'Indian' & 'Pakistan\/Bangladesh' columns respectively.\nemploymentrate['Indian'] = employmentrate['Indian'].replace('!',np.NaN)\nemploymentrate['Indian'] = employmentrate['Indian'].fillna(employmentrate['Indian'].mean())\n\nemploymentrate['Pakistan\/Bangladesh'] = employmentrate['Pakistan\/Bangladesh'].replace('!',np.NaN)\nemploymentrate['Pakistan\/Bangladesh'] = employmentrate['Pakistan\/Bangladesh'].fillna(employmentrate['Pakistan\/Bangladesh'].mean())","67c17974":"#Now when I compute the mean, it gives me the mean for all the columns in the employmentrate dataset\nemploymentrate.mean()","f327a35e":"#First of all, I will slice the London Census data to get the columns I need to be analysed visually\n#I will slice the dataset to get the rows that have all the boroughs and population by Age, Ethnic group, Sex,\n#...Religion, and health condition columns\nldncensusdf = londoncensus.iloc[25:, [0, 1, 2, 3, 6, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, \n                                      37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, \n                                      51, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68]]\nldncensusdf.head()","b737aa2c":"#Loading the shp file for the london census data\nldnwards = gp.read_file('..\/input\/london-shape-files\/london_wards_2011_wgs84.shp')\nldnwards.head()","2455858c":"#Ploting georgraphical boundaries of london wards\nldnwards.plot(column='NAME', figsize=(40,10))\nplt.show()","7511af35":"#Joining sliced london census data with geography\nframes=[ldnwards,ldncensusdf]\ndata=pd.concat(frames,axis=1)\n#Removing any wards that have missing values\nldngeo = data[data['Borough'].notnull()];\nldngeo.describe()","fc8bd93e":"#Geographically plotting the cesus data to discover different spread across london based on Sex, Religion and...\n#Health condition for example\nldngeo.crs = {'init' :'epsg:4326'}\nattr = \"No of all residents\"\nax = ldngeo.plot(column=attr, cmap='YlGn', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by sex: Male\"\nax = ldngeo.plot(column=attr, cmap='BuPu', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by sex: Female\"\nax = ldngeo.plot(column=attr, cmap='YlOrBr', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by ethnic group: White\"\nax = ldngeo.plot(column=attr, cmap='GnBu', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by religion: Jewish\"\nax = ldngeo.plot(column=attr, cmap='Oranges', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by religion: Christian\"\nax = ldngeo.plot(column=attr, cmap='Oranges', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by religion: Muslim\"\nax = ldngeo.plot(column=attr, cmap='YlOrRd', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by health condition: Bad health\"\nax = ldngeo.plot(column=attr, cmap='YlOrRd', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()\nattr = \"Population by health condition: Good health\"\nax = ldngeo.plot(column=attr, cmap='YlOrRd', legend=True, figsize=(12,5))\nax.set_title(attr)\nplt.show()","9ec3ffe1":"#Using a hexbin plot with marginal distributions to distintly assess the spread of Jewish religion compared to \n#Christians\n#Plotting the hexbin plot for Christians\nsns.set(style=\"ticks\")\n\n\nx = ldncensusdf['No of all residents']\ny = ldncensusdf['Population by religion: Christian']\n\nsns.jointplot(x, y, kind=\"hex\", color=\"#4CB391\")\n#Plotting the hexbin box plot for Jewish\nsns.set(style=\"ticks\")\n\n\nx = ldncensusdf['No of all residents']\ny = ldncensusdf['Population by religion: Jewish']\n\nsns.jointplot(x, y, kind=\"hex\", color=\"#4CB391\")","0f50f8e9":"#Using a horizontal bar chat\n#Ploting the employment rate of White\nplt.barh(employmentrate.Area, employmentrate.White, label='White')\n\n#Ploting the employment rate of Mixed\nplt.barh(employmentrate.Area, employmentrate.Mixed, label='Mixed')\n\n#Ploting the employment rate of Indian\nplt.barh(employmentrate.Area, employmentrate.Indian, label='Indian')\n\n#Adding legend and labels\nplt.legend(loc='center right', prop={'size': 15})\nplt.title('Employment Rates by Ethnic Groups')\nplt.xlabel('Percentages')\nplt.ylabel('Boroughs')\nplt.rcParams['figure.figsize'] = (30,20)\n\n#Displaying the plot\nplt.show()","be61eec2":"#Using a horizontal bar chat\n#Ploting the employment rate of Pakistan\/Bangladesh\nplt.barh(employmentrate.Area, employmentrate['Pakistan\/Bangladesh'], label='Pakistan\/Bangladesh', color='#86bf91')\n\n#Ploting the employment rate of Black\/Black British\nplt.barh(employmentrate.Area, employmentrate['Black\/Black British'], label='Black\/Black British', color='#000000')\n        \n#Ploting the employment rate of Other ethnic groups\nplt.barh(employmentrate.Area, employmentrate.Other, label='Other', color='#FFFF66')\n\n#Adding legends and labels\nplt.legend(loc='center right', prop={'size': 15})\nplt.title('Employment Rates by Ethnic Groups')\nplt.xlabel('Percentages')\nplt.ylabel('Boroughs')\nplt.rcParams['figure.figsize'] = (30,20)\n\n#Displaying the plot\nplt.show()","82805e43":"#Ploting half of the employment industry\nplt.barh(employmentindustry.Area, employmentindustry['Agriculture, Forestry & Fishing'], \n         label='Agriculture, Forestry & Fishing')\n\nplt.barh(employmentindustry.Area, employmentindustry['Mining, Quarrying & Utilities'], \n         label='Mining, Quarrying & Utilities')\n\nplt.barh(employmentindustry.Area, employmentindustry['Manufacturing'], \n         label='Manufacturing')\n\nplt.barh(employmentindustry.Area, employmentindustry['Construction'], \n         label='Construction')\n\nplt.barh(employmentindustry.Area, employmentindustry['Motor Trades'], \n         label='Motor Trades')\n\nplt.barh(employmentindustry.Area, employmentindustry['Wholesale'], \n         label='Wholesale')\n\nplt.barh(employmentindustry.Area, employmentindustry['Retail'], \n         label='Retail')\n\nplt.barh(employmentindustry.Area, employmentindustry['Accommodation & Food Services'], \n         label='Accommodation & Food Services')\n\nplt.barh(employmentindustry.Area, employmentindustry['Information & Communication'], \n         label='Information & Communication')\n\nplt.barh(employmentindustry.Area, employmentindustry['Professional, Scientific & Technical'], \n         label='Professional, Scientific & Technical')\n\nplt.barh(employmentindustry.Area, employmentindustry['Business Administration & Support Services'], \n         label='Business Administration & Support Services')\n\nplt.barh(employmentindustry.Area, employmentindustry['Public Administration & Defence'], \n         label='Public Administration & Defence')\n\nplt.barh(employmentindustry.Area, employmentindustry['Education'], \n         label='Education')\n\nplt.barh(employmentindustry.Area, employmentindustry['Health'], \n         label='Health')\n\nplt.barh(employmentindustry.Area, employmentindustry['Arts, Entertainment, Recreation & Other Services'], \n         label='Arts, Entertainment, Recreation & Other Services')\n\n#Adding legend and titles\nplt.legend(loc='center right', prop={'size': 15})\nplt.title('Employment Industries by Boroughs')\nplt.xlabel('Total Numbers')\nplt.ylabel('Areas')\nplt.rcParams['figure.figsize'] = (20,20)\n\n# Display the plot\nplt.show()","6bbab39d":"#Selecting the two variables\nval1 = ldncensusdf['Population by religion: Christian']\nval2 = ldncensusdf['Population by health condition: Bad health']","d9380169":"corrPearson, pValPearson = stats.pearsonr(val1,val2)\nprint (\"Pearson's correlation is\", corrPearson, \"with a p-value of\",pValPearson)","48eb4f11":"corrSpearman, pValSpearman = stats.spearmanr(val1,val2)\nprint (\"Spearman's correlation is\", corrSpearman, \"with a p-value of\",pValSpearman)","cb15de27":"plt.suptitle('Christians vs Bad health')\nplt.xlabel('Christians')\nplt.ylabel('Bad Health')\nplt.scatter(val1,val2 , c = \"#8b0000\", s = 30, alpha = 0.5, linewidth='0')","30a175a4":"corr = ldncensusdf.corr()\n#print(corr.head())\n\nplt.figure(figsize = (30,30))\nimport seaborn as sns\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)","9a6c83c3":"#Correlation with sole focus on population with bad health\ncorrbadhealth=corr[['Population by health condition: Bad health']]\n\n#Sorting the amount of correlation\ncorrbadhealth=corrbadhealth.sort_values(by ='Population by health condition: Bad health',ascending=False)\n\nplt.figure(figsize = (10,20))\nimport seaborn as sns\nax = sns.heatmap(\n    corrbadhealth, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)","bbfb0889":"#Make a copy\ncorrcopy=corr.copy()\n\n#Creating a new column for the variable name & index\ncorrcopy.index.name = 'var1'\ncorrcopy.reset_index(inplace=True)\n\n#Preserving the column\ncorrpair = corrcopy.melt(id_vars = ['var1'])\n\n#Replacing the some of the column names\ncorrpair = corrpair.rename(columns = {'variable': 'var2','value': 'corr'})\n\n#Removing duplicate rows where var1 and var2 are the same\ncorrpair = corrpair.drop(corrpair[corrpair['var1']==corrpair['var2']].index)","0969855f":"#Ploting the histogram\nplt.hist(corrpair['corr'],20)\nplt.title(\"Correlation distributions bounded by combinational numerical variables\")\n\n#Sorting the correlation rows\ncorrpair = corrpair.sort_values(by ='corr',ascending=False)\n\nprint()\nprint(\"Top ten most positively correlated pairs of variables\")\nprint(corrpair.head(10))\n\nprint()\nprint(\"Top ten most negatively correlated pairs of variables (reverse order)\")\nprint(corrpair.tail(10))\n\n#Adding extra column with absolute correlation\ncorrpair['abscorr']=abs(corrpair['corr'])\n#Sorting in ascending order\ncorrpair=corrpair.sort_values(by ='abscorr',ascending=False)\n\nprint()\nprint(\"Top ten most correlated pairs of variables with 'Population by health condition: Bad health'\")\nprint(corrpair[corrpair['var1']=='Population by health condition: Bad health'].head(10))","2885844c":"#Building linear regression model\n#There are 4 values that linear regression function returns that describes the model\nslope, intercept, rvalue, pvalue, stderr = stats.linregress(val1, val2)\n\nprint (\"Slope: \", slope)\nprint (\"Intercept: \", intercept)\nprint (\"p_value: \", pvalue)\nprint (\"std_err: \", stderr)","1a9eb59b":"#Calculating regression line\n#Calculating 2 points from the parameters\nx1=val1.min() #min value of the independent variable\nx2=val1.max() #max value of the independent variable\ny1=x1*slope + intercept #calculate the dependent variable value from x1\ny2=x2*slope + intercept #calculate the dependent variable value from x2\n\n#Ploting scatterplot\nplt.suptitle('Christians vs. Bad Health')\nplt.xlabel('Population by religion: Christian')\nplt.ylabel('Population by health condition: Bad health')\nplt.scatter(val1, val2, c = \"#D06B36\", s = 30, alpha = 0.6, linewidth='0')\n\nplt.plot([x1,x2],[y1,y2])","4c96e803":"#Fiting second-order curve\npCoeff = np.polyfit(val1, val2, 2)\n#Sorting the curve to make it look like a curve is supposed to be\nxs = np.sort(val1)\n#Calculating the value for each use of the polynomial\nys = np.polyval(pCoeff, xs)\n\n#Ploting data values\nplt.scatter(val1,val2 , c = \"#D06B36\", s = 30, alpha = 0.6, linewidth='0')\n#Ploting linear \"curve\" so that it looks dashed\nplt.plot([x1,x2],[y1,y2], \"k--\")\n#Ploting second order polynomal curve\nplt.plot(xs, ys, linewidth = 3, fillstyle=\"none\")","480f8590":"#Using the dependent variable 'Population by health condition: Bad health' here is  is still\ndependent = val2;\n#The two independent variables(regressors) \nindependents = ldncensusdf[[\"Population by religion: Christian\", \"Population by sex: Male\"]]\n#Adding the intercepts\nindeptswithconst = sm.add_constant(independents)\n\n# we use the OLS function from statsmodels\nmodel = sm.OLS(dependent, indeptswithconst)\nresults = model.fit()\n\nprint (results.summary())","0b6a6739":"#Calculating dependent variable values from parameters directly\nmodelledDependentOLSDirect  = ldncensusdf[\"Population by religion: Christian\"]*results.params[\"Population by religion: Christian\"] + ldncensusdf[\"Population by sex: Male\"]*results.params[\"Population by sex: Male\"] + results.params['const']\n\n#Calculating dependent variable values from the predict method\nmodelledDependentOLSPredict  = results.predict()\n\n#Calculate the residuals 3 ways\nresidualsDirect=dependent-modelledDependentOLSDirect\nresidualsPredict=dependent-modelledDependentOLSDirect\nresidualsFromLib=results.resid\n\n\n#both residual distributions are the same (because both methods of\n#calculating the dependent variable values are the same)\nf, ax = plt.subplots(1, 3)\nax[0].set_title(\"Residuals (direct)\")\nax[0].hist(residualsDirect,20)\nax[1].set_title(\"Residuals (predict())\")\nax[1].hist(residualsPredict,20)\nax[2].set_title(\"Residuals (from residuals)\")\nax[2].hist(residualsFromLib,20)\n\nprint(results.params)","d4f418a9":"#Checking standard deviation for more clarity\nprint(dependent.std())\nplt.boxplot(dependent)","00ec863d":"print(\"R-squared:\",results.rsquared)\nprint(\"MSE model:\",results.mse_model)\nprint(\"MSE residuals:\",results.mse_resid)\nprint(\"MSE total:\",results.mse_total)","d69b492f":"**Loading of datasets**","3f8a8033":"**Filling out the missing datasets**","faa872af":"The model has a 0.438 R-Squared value indicating that the model was not a good fit at all. The R-Squared value is important because it is a measure of how good the regression line approximates the data points. Also, because the P-Value is higher than the coefficient, it signifies a non exiestent relationship. Finally population has a bigger significance on the model because like we calculated earlier, it has a high correlation with Bad health.","e9857323":"**Correlation Analysis**","80f69f2a":"My aim is to discover the boroughs that have the highest employment industry across the boroughs in london. What is the industry that has the higest employment and what borough is it located in? Just like I did for the employment rate dataset, I will split the employment industries graphs into two for better analysis.","ace14800":"I plotted 3 ethnic groups first so that it would be easier to discover what other ethnic group had the highest employment rate in each of the boroughs. Based on the bar chart above, White ethnic group are very highly to be employed in Harrow, being the highest, and Newham, Southwark and Wandsworth trailing very closely. Indians are likely to be employed in Camden, with Islington and Merton trailing very closely. Mixed ethnicities are likely to employed in Lambeth with only one other borough, Sutton, trailing closely behind.","f72a4208":"Now I will visually display the population spread in London across various boroughs. I am confident that questions like, 'What is the most populated area in London', 'Why is that area highly populated', 'Is the employment rate high\/low in the most populated area in London', 'What employment industries have the highest employment in the most populated area in London' will be answered.","a940e7ab":"Plotting the employment rate by ethnicity should be straight forward. I will cross check with my plotted geographical data to find out, for example, what religion is highly populated in that area or if the health condition of that area is good or bad. I used a horizontal bar chart because it lists all 36 boroughs on the vertical axis clearly.","023bad7e":"I used OpenRefine to clean all the datasets, mostly the employmentrate and employment industry. For the londoncensus data, the only data wrangling I did was to change all the column names related to boroughs in London.\nIn the employmentrate dataset there are three missing values in two columns with an exclamation point '!'. One in the 'Indian' column and two in the 'Paskistan\/Bangladesh' column. Also in Lambeth, the percentage is 100% for Pakistan\/Bangladesh when in actuality, there was't any data for number of employed divided by total population.\nBelow, I used different techniques to locate the three missing data in the employmentrate dataset and then replaced them with the means of the two columns with missing data.","505ba4b4":"**Employment Rate**","81a04829":"I geographically plotted the main variables(Ages, Ethnic group, Sex, Religion and Health condition) above. As you can see above, in the plot for the Jewish population in London, they are mainly located in the north of london where as the Christians are evenly spread across london. Residents with 'Bad Health' are almost pretty much evenly spread around London except south east london which is quite alarming to be honest.","add94244":"The next step is to view the distribution of the residuals, locate the top ten most positive & negative correlations and then finally find the variables that correlate with the population of Bath health variable.","357a4838":"In order to carry out a multiple regression I will use the statsmodels library. Following that, I will also calculate, manually, some of the measures. I cannot use my highest correlated variable from above, first of all the recorded data is almost the same which is why it has a 98% correlation with Bad Health. Because my top three highest correlated variable are all within the same topic, health, I will use 'Population by sex: Male' for the multiple regression calculation.","34721f18":"**Population Spread in London**","ed4289bc":"Population Spread in London City Boroughs","79eb3686":"**Regression analysis**","06d5b174":"In conclusion a R squared score of 0.438, doesn't entirely mean the model is bad because you can gather information from the predictors. I will conclude and finalize by agreeing that my R square score is a fairly good or you could say, reasonable model. Thank you and I hope you find my analysis helpful!","2dc07520":"**Calculating Residuals**","21c44324":"**Spearman's correlation**","b26d93c1":"**Pearson's correlation**","eb5913c0":"The correlation above shows the variables that are highly correlated with Bad health. It is very helpful because I can chose those variables to build a model that will be a very good predictor. Now, the next step is to look for variables that have the strongest correlations with Bad health. I will first restructure the correlation matrix in a way that for each row, I will have variables and their correlation listed and then I will sort all the correlations in the right order.","c5a75223":"**Imports**","48a84dc5":"[](http:\/\/)The Hexbin plot with marginal distributions reiterated my discovery that the Christian population are evenly distributed than the Jewish across london boroughs.","83fe2ef7":"**Description of Datasets**","0a480ef8":"**Dataset Information**","5ee2887c":"With a standard deviation of 500, it is fair to say that the residuals indicated a more than average amount of the variation in the data. From the geographical maps I plotted earlier, you could see how widely spread both variables that I used are.","a04c8145":"**Multiple Regression**","c7051598":"Above, are the final 3 ethnic groups. For Black\/Black British, Barnet is the borough with the highest employment rate with only Bromley trailing behind. Pakistan\/Bangladesh has the highest employment rate in Lambeth, but I mentioned earlier, that part of the data is misleading because there was't any record for number of employed  Pakistan\/Bangladesh divided by their total population. I selected the second largest percetage of employment rate for the Pakistan\/Bangladesh and used it to conclude on where they have their highest employment rate. That borough is, Havering. Other ethnic groups have the highest employment rate in Lambeth with Bexley trailing behind.","17bb7db6":"Looking at the scatterplot, it is obvious that the scatterplot does not seem to fit well due to the fact that there isn't a relationship. I will try fitting a polynomial curve(second order curve) using a numpy function called np.polyval().","f5e7bbdc":"In order to model the relationship between the population spread of bad health in london and the christian population, I would need to build a couple of regression models. My dependent variable is going to be \"Population by health condition: Bad health\" and independent variable is going to be \"Population by religion: Christian\". There are other independent variable I could use like \"Population by health condition: Very bad health\" for example which is has the best correlation but if you look at the dataset, the figures recorded in both columns are almost the same. Also it wouldn't be wise to find a relationship between Bad health and Very bad health because they're variables that are very similar in description and numbers which I previously just mentioned. ","976b0ddb":"**Employment Industries**","7f89148c":"In this employment industries chart of london boroughs, in the City of London and Westminister the Professional, Scientific & Technical industry according to the bar chart is the highest job sector. That is very interesting, what could be the population by ethinic group or health condition for example in Westminister & City of London. In second place, also in the city of London, Business Administration, is second highest employment industry. Also in Westminister, the third highest employment industry is Mining, Quaring & Utilities. There is a trend here, the City of London & Westminister have a high rate of a variety of different employment industries, therefore this indicates that there would be more job oppotunities in those boroughs. \nCompared to my findings above, Black\/Black British have a high employment rate in Barnet, and looking at this employment industry chart, its safe to assume that Black\/Black British are employed in the Health sector. In addition, the goegraphical graphs I ploted above on london census, you discover that there is a high female population in Barnet.","a5a09aa8":"Since the residuals look fairly big, I think its safe to say that the model is averagely good.","bcb9b4ef":"I will perform correlation analysis to quantify and amount of linear correspondance between two variables. The two variables are going to be population by bad health and population by christian religion. Those two variables were chosen because when I graphed them geographically earlier on in the notebook, they had a wide spread across all the boroughs in london. I will first perform a Pearson's correlation, then Spearman, plot a scatter graph to find any differences or relationships, I will also use the function corr() to produce a data frame of all the correlation coefficients for each pair of numeric variables. The corr() function is basically a matrix with variables as columns and then it also produces rows that will be very useful to plot a heatmap in the Seaborne library. I will use the Seaborn heatmap hue as a visual indication of positive or negative correlation.","e3910f96":"**Cleaning the datasets**","7afd3c63":"Just like my Pearsons and Spearmans correlation calculated, in the scatter plot above, there doesn't seem to be any linear relationship at all because since my calculated correlation values are between 0 & 0.3, it indicates a weak positive(negative) linear relationship. Despite that, if you keep having a look at the scatter plot over and over again it may look like a regression line could be drawn across."}}