{"cell_type":{"c45b8ed4":"code","51c8a266":"code","8fcd5d64":"code","f5081312":"code","7584e0f2":"code","9b8909e8":"code","ddabb304":"code","e0c007c5":"code","5c95f0cc":"code","3c5e03eb":"code","29fc1de0":"code","ae3ee11c":"code","38eab70a":"code","0f345a96":"code","edff7cb8":"code","53ccd44e":"code","4ea70156":"code","7036759d":"code","9d8c3ba4":"code","5b9858b5":"code","ba4d172a":"code","f0e68a14":"code","0086114e":"code","7a6f8de5":"markdown","75615b6a":"markdown","ed8b30c9":"markdown","09d26bd7":"markdown","8a12b1ca":"markdown","e753ed85":"markdown","085ad39e":"markdown","f22a257b":"markdown","db8fce7b":"markdown","85fdfb6b":"markdown","cfa87dff":"markdown","25cf8c04":"markdown","852a1707":"markdown","8e0c575b":"markdown","d33b644a":"markdown","095afc89":"markdown","fd15ed9a":"markdown","a989f2c7":"markdown","ab089fd2":"markdown","78d61b32":"markdown","f8a89784":"markdown"},"source":{"c45b8ed4":"import numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport pandas as pd\r\nimport seaborn as sns\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LinearRegression\r\nfrom sklearn.metrics import r2_score\r\nfrom sklearn.tree import DecisionTreeRegressor\r\nfrom sklearn.preprocessing import PolynomialFeatures\r\nfrom sklearn.linear_model import LinearRegression\r\nfrom sklearn.ensemble import RandomForestRegressor\r\n","51c8a266":"dataset = pd.read_csv('..\/input\/insurance\/insurance.csv')","8fcd5d64":"dataset.head()","f5081312":"dataset.info()","7584e0f2":"dataset.isnull().sum()","9b8909e8":"dataset.describe()","ddabb304":"sns.set()\r\nplt.figure(figsize=(6, 6))\r\nsns.distplot(dataset['age'])\r\nplt.title('Age Distribution')\r\nplt.show()","e0c007c5":"plt.figure(figsize=(6, 6))\r\nsns.countplot(x='sex', data=dataset)\r\nplt.title('Sex Distribution')\r\nplt.show()","5c95f0cc":"dataset.replace({'sex': {'male': 0, 'female': 1}}, inplace=True)\r\ndataset.replace({'smoker': {'yes': 0, 'no': 1}}, inplace=True)\r\ndataset.replace({'region': {\r\n    'southeast': 0, 'southwest': 1, 'northeast': 2, 'northwest': 3}}, inplace=True)\r\nX = dataset.drop(columns='charges', axis=1)\r\ny = dataset['charges']\r\n","3c5e03eb":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","29fc1de0":"mul_regressor = LinearRegression()\r\nmul_regressor.fit(X_train, y_train)\r\n","ae3ee11c":"y_pred = mul_regressor.predict(X_test)\r\nnp.set_printoptions(precision=2)\r\n","38eab70a":"r2_score(y_test, y_pred)","0f345a96":"decision_regressor = DecisionTreeRegressor(random_state = 0)\r\ndecision_regressor.fit(X_train, y_train)","edff7cb8":"y_pred = decision_regressor.predict(X_test)\r\nnp.set_printoptions(precision=2)\r\n","53ccd44e":"r2_score(y_test, y_pred)","4ea70156":"poly_reg = PolynomialFeatures(degree = 4)\r\nX_poly = poly_reg.fit_transform(X_train)\r\npoly_regressor = LinearRegression()\r\npoly_regressor.fit(X_poly, y_train)","7036759d":"y_pred = poly_regressor.predict(poly_reg.transform(X_test))\r\nnp.set_printoptions(precision=2)","9d8c3ba4":"r2_score(y_test, y_pred)","5b9858b5":"forest_regressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\r\nforest_regressor.fit(X_train, y_train)\r\n","ba4d172a":"y_pred = forest_regressor.predict(X_test)\r\nnp.set_printoptions(precision=2)","f0e68a14":"r2_score(y_test, y_pred)","0086114e":"input_data = (31,1,25.74,0,1,0)\nnumpy_array = np.asarray(input_data)\nreshaped = numpy_array.reshape(1,-1)\n\nprediction = forest_regressor.predict(reshaped)\nprint(prediction)\nprint('The insurance cost is USD ', prediction[0])","7a6f8de5":"### Importing the dataset","75615b6a":"### Importing the libraries","ed8b30c9":"# Predicting","09d26bd7":"## Evaluating the Model Performance","8a12b1ca":"### Splitting the dataset into the Training set and Test set","e753ed85":"# Polynomial Rregression","085ad39e":"## Data Pre-Processing","f22a257b":"Random Forest Regression has the highest r squared score, thus, the best model for predictions.","db8fce7b":"# Multiple Linear Regression","85fdfb6b":"## Evaluating the Model Performance","cfa87dff":"# Decision Tree Regression","25cf8c04":"## Predicting the Test set results","852a1707":"## Predicting the Test set results","8e0c575b":"<H1>Medical Cost Prediction","d33b644a":"## Predicting the Test set results","095afc89":"## Predicting the Test set results","fd15ed9a":"## Training the Polynomial Regression model on the Training set","a989f2c7":"## Training the Random Forest Regression model on the whole dataset","ab089fd2":"# Random Forest Regression","78d61b32":"## Evaluating the Model Performance","f8a89784":"## Evaluating the Model Performance"}}