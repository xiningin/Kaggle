{"cell_type":{"debc98c5":"code","32315f20":"code","97638d89":"code","7cd9a8f3":"code","17b5c60c":"code","7242f7fe":"code","e9abc873":"code","920ac06e":"code","aa61dc6a":"code","70c21c39":"code","0b4c65ff":"code","a93df49b":"code","821e4c97":"code","7643bc43":"code","5d5c739f":"code","b3d97fdc":"code","4579b315":"code","d3881ddf":"code","2d27c1ea":"code","59707983":"code","ed3c5386":"code","09f0b783":"code","ff92e73c":"code","91204f5f":"code","e0745a82":"code","e3bcc56f":"code","fd643d51":"code","719d6238":"code","510f7a29":"code","8fe527a2":"code","e89814d9":"code","a528f075":"code","08aa7eae":"code","421f339d":"code","c5bda031":"code","8b6809eb":"code","55501443":"code","9aeaeccc":"code","b0ec1ffc":"code","85f8e20a":"code","e26644d3":"code","0e7b62a0":"code","f6d6da52":"code","73fcaa67":"code","ff695b93":"code","3dae299c":"code","a3425de5":"code","8cf79ebc":"code","d9ea5d3b":"code","339f4f86":"code","809d6a08":"code","3ba6d080":"code","f40a3a74":"code","11ccd5f1":"code","4f8a4081":"code","5a62d0d0":"code","825fba07":"code","7d8ed17a":"code","e6466e9c":"code","84343e1c":"code","6c26f6ca":"code","429840ff":"code","ef848e9e":"code","5acdff24":"code","bef72d40":"code","8ae1db6a":"code","fb965301":"code","a021fb16":"code","95e34822":"code","7582d982":"code","23254c4b":"code","45e2ef31":"code","7de9e270":"code","27b5e6c9":"code","0cfec8df":"code","c9a64cd1":"code","6fb404dc":"code","8c223f3c":"code","b1163949":"code","5b617a92":"markdown","6bc91087":"markdown","aa445e60":"markdown","cb077cd6":"markdown","e39edef4":"markdown","eb404066":"markdown","70918aa4":"markdown","8c823628":"markdown","13936871":"markdown","4bdb446d":"markdown","d6a775b9":"markdown","308a10b9":"markdown","0733a360":"markdown","3a4e66ce":"markdown","1a29af48":"markdown","6e8755eb":"markdown","c9256c5d":"markdown","52f7ff84":"markdown","88f3bbd9":"markdown","faf66f4a":"markdown","c5723b99":"markdown","f3679af3":"markdown","4917c2b5":"markdown","9fecca0f":"markdown","ed86cb98":"markdown","1af8a30a":"markdown","d420d5e8":"markdown","b08cd44d":"markdown","36acc2b1":"markdown","c23e71d2":"markdown","549a906e":"markdown","2a4dbd61":"markdown"},"source":{"debc98c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32315f20":"file = open('\/kaggle\/input\/ense3-octobre\/files\/adult.data', 'r')","97638d89":"def chr_int(a):\n    if a.isdigit():\n        return int(a)\n    else:\n        return 0\n                \ndata=[]\nfor line in file:\n     data1=line.split(', ')\n     if len(data1)==15:\n        data.append([chr_int(data1[0]),data1[1],chr_int(data1[2]),data1[3],chr_int(data1[4]),data1[5],data1[6],\\\n            data1[7],data1[8],data1[9],chr_int(data1[10]),chr_int(data1[11]),chr_int(data1[12]),data1[13],\\\n            data1[14]])","7cd9a8f3":"print (data[1:3])","17b5c60c":"df = pd.DataFrame(data) #  Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes \n\ndf.columns = ['age', 'type_employer', 'fnlwgt', 'education', \n                \"education_num\",\"marital\", \"occupation\", \"relationship\", \"race\",\"sex\",\n                \"capital_gain\", \"capital_loss\", \"hr_per_week\",\"country\",\"income\"]\ndf.head()","7242f7fe":"df.tail()","e9abc873":"df.shape","920ac06e":"counts = df.groupby('country').size()\n\nprint (counts) ","aa61dc6a":"counts = df.groupby('age').size() # grouping by age\nprint('Nombre maximum de entit\u00e9 pour un age est',max (counts))\ncounts [0:20]","70c21c39":"ml = df[(df.sex == 'Male')] # grouping by sex\nml.shape","0b4c65ff":"ml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\nml1.shape","a93df49b":"fm =df[(df.sex == 'Female')]\nfm.shape","821e4c97":"fm1 =df[(df.sex == 'Female')&(df.income=='>50K\\n')]\nfm1.shape","7643bc43":"df1=df[(df.income=='>50K\\n')]\n\nprint ('The rate of people with high income is: ', int(len(df1)\/float(len(df))*100), '%.' )\nprint ('The rate of men with high income is: ', int(len(ml1)\/float(len(ml))*100), '%.' )\nprint ('The rate of women with high income is: ', int(len(fm1)\/float(len(fm))*100), '%.' )","5d5c739f":"df1=df[(df.income=='>50K\\n')]\n\nprint ('The rate of people with high income is: ', int(len(df1)\/float(len(df))*100), '%.' )\nprint ('The rate of men with high income is: ', int(len(ml1)\/float(len(ml))*100), '%.' )\nprint ('The rate of women with high income is: ', int(len(fm1)\/float(len(fm))*100), '%.' )","b3d97fdc":"print ('The average age of men is: ', ml['age'].mean(), '.' )\nprint ('The average age of women is: ', fm['age'].mean(), '.')","4579b315":"print ('The average age of high-income men is: ', ml1['age'].mean(), '.' )\nprint ('The average age of high-income women is: ', fm1['age'].mean(), '.')","d3881ddf":"ml_mu = ml['age'].mean()\nfm_mu = fm['age'].mean()\nml_var = ml['age'].var()\nfm_var = fm['age'].var()\nml_std = ml['age'].std()\nfm_std = fm['age'].std()\n\nprint ('Statistics of age for men: mu:', ml_mu, 'var:', ml_var, 'std:', ml_std)\nprint ('Statistics of age for women: mu:', fm_mu, 'var:', fm_var, 'std:', fm_std)","2d27c1ea":"ml_mu_hr = ml['hr_per_week'].mean()\nfm_mu_hr = fm['hr_per_week'].mean()\nml_var_hr = ml['hr_per_week'].var()\nfm_var_hr = fm['hr_per_week'].var()\nml_std_hr = ml['hr_per_week'].std()\nfm_std_hr = fm['hr_per_week'].std()\n\nprint ('Statistics of hours per week for men: mu:', ml_mu_hr, 'var:', ml_var_hr, 'std:', ml_std_hr)\nprint ('Statistics of hours per week for women: mu:', fm_mu_hr, 'var:', fm_var_hr, 'std:', fm_std_hr)","59707983":"ml_median= ml['age'].median()\nfm_median= fm['age'].median()\n\nprint (\"Median age per men and women: \", ml_median, fm_median)","ed3c5386":"ml_median_age= ml1['age'].median()\nfm_median_age= fm1['age'].median()\n\nprint (\"Median age per men and women with high-income: \", ml_median_age, fm_median_age)","09f0b783":"ml_median_hr= ml['hr_per_week'].median()\nfm_median_hr= fm['hr_per_week'].median()\nprint (\"Median hours per week per men and women: \", ml_median_hr, fm_median_hr)","ff92e73c":"import matplotlib.pyplot as plt\nml_age=ml['age']\nml_age.hist(histtype='stepfilled', bins=20)","91204f5f":"fm_age=fm['age']\nfm_age.hist(histtype='stepfilled', bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Female samples',fontsize=15)\nplt.show()","e0745a82":"import seaborn as sns\nfm_age.hist(histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .8), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Samples',fontsize=15)\nplt.show()","e3bcc56f":"fm_age.hist(histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('PMF',fontsize=15)\nplt.show()","fd643d51":"ml_age.hist(histtype='stepfilled', density=True, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","719d6238":"fm_age.hist(histtype='stepfilled', density=True, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","510f7a29":"ml_age.hist(histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","8fe527a2":"fm_age.hist(histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","e89814d9":"ml_age.hist(bins=10,histtype='stepfilled', density=True, alpha=.4)   # default number of bins = 10\nfm_age.hist(bins=10, histtype='stepfilled', density=True, alpha=.6, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","a528f075":"ml_age.hist(histtype='step', cumulative=True,  linewidth=3.5, bins=20)\nfm_age.hist(histtype='step', cumulative=True,  linewidth=3.5, bins=20, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","08aa7eae":"ml_age.hist(histtype='step', cumulative=True, density=True, linewidth=3.5, bins=20)\nfm_age.hist(histtype='step', cumulative=True, density=True, linewidth=3.5, bins=20, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF & Proba',fontsize=15)\nplt.show()","421f339d":"print (\"The mean sample difference is \", ml_age.mean() - fm_age.mean())","c5bda031":"df['age'].median()","8b6809eb":"len(df[(df.income == '>50K\\n') & (df['age'] < df['age'].median() - 15)])","55501443":"len(df[(df.income == '>50K\\n') & (df['age'] > df['age'].median() + 35)])","9aeaeccc":"df2 = df.drop(df.index[(df.income=='>50K\\n') & (df['age']>df['age'].median() +35) & (df['age'] > df['age'].median()-15)])\n\ndf2.shape","b0ec1ffc":"ml1_age=ml1['age']\nfm1_age=fm1['age']","85f8e20a":"ml2_age = ml1_age.drop(ml1_age.index[(ml1_age >df['age'].median()+35) & (ml1_age>df['age'].median() - 15)])\n\nfm2_age = fm1_age.drop(fm1_age.index[(fm1_age > df['age'].median()+35) & (fm1_age > df['age'].median()- 15)])","e26644d3":"mu2ml = ml2_age.mean()\nstd2ml = ml2_age.std()\nmd2ml = ml2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income male population\n\nprint (\"Men statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", ml2_age.min(), \"Max:\",ml2_age.max())","0e7b62a0":"mu3ml = fm2_age.mean()\nstd3ml = fm2_age.std()\nmd3ml = fm2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income female population\nprint (\"Women statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", fm2_age.min(), \"Max:\",fm2_age.max())","f6d6da52":"print ('The mean difference with outliers is: %4.2f.'% (ml_age.mean() - fm_age.mean()))\nprint (\"The mean difference without outliers is: %4.2f.\"% (ml2_age.mean() - fm2_age.mean()))","73fcaa67":"plt.figure(figsize=(13.4,5))\n\ndf.age[(df.income == '>50K\\n')].plot(alpha=.25, color='blue')\ndf2.age[(df2.income == '>50K\\n')].plot(alpha=.45,color='red')\n\nplt.ylabel('Age')\nplt.xlabel('Samples')","ff695b93":"import numpy as np\n\ncountx,divisionx = np.histogram(ml2_age, normed=True)\ncounty,divisiony = np.histogram(fm2_age, normed=True)","3dae299c":"import matplotlib.pyplot as plt\n\nval = [(divisionx[i]+divisionx[i+1])\/2 for i in range(len(divisionx)-1)]\n\nplt.plot(val, countx-county,'o-')\nplt.title('Differences in promoting men vs. women')\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Differences',fontsize=15)\nplt.show()","a3425de5":"print (\"Remember:\\n We have the following mean values for men, women and the difference:\\nOriginally: \", ml_age.mean(), fm_age.mean(),  ml_age.mean()- fm_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"For high-income: \", ml1_age.mean(), fm1_age.mean(), ml1_age.mean()- fm1_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"After cleaning: \", ml2_age.mean(), fm2_age.mean(), ml2_age.mean()- fm2_age.mean()) # The difference between the mean values of male and female populations.)\n\nprint (\"\\nThe same for the median:\")\nprint (ml_age.median(), fm_age.median(), ml_age.median()- fm_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml1_age.median(), fm1_age.median(), ml1_age.median()- fm1_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml2_age.median(), fm2_age.median(), ml2_age.median()- fm2_age.median()), # The difference between the mean values of male and female populations.)","8cf79ebc":"def skewness(x):\n    res=0\n    m=x.mean()\n    s=x.std()\n    for i in x:\n        res+=(i-m)*(i-m)*(i-m)\n    res\/=(len(x)*s*s*s)\n    return res\n\nprint (\"The skewness of the male population is:\", skewness(ml2_age))\nprint (\"The skewness of the female population is:\", skewness(fm2_age))","d9ea5d3b":"def pearson(x):\n    return 3*(x.mean()-x.median())\/x.std()\n\nprint (\"The Pearson's coefficient of the male population is:\", pearson(ml2_age))\nprint (\"The Pearson's coefficient of the female population is:\", pearson(fm2_age))","339f4f86":"ml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\n\nml2 = ml1.drop(ml1.index[(ml1['age']>df['age'].median() +35)&(ml1['age']> df['age'].median()- 15)])\n\nfm2 = fm1.drop(fm1.index[(fm1['age']> df['age'].median() + 35)& (fm1['age']> df['age'].median() - 15)])\n\nprint (ml2.shape, fm2.shape)","809d6a08":"print (\"Men grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(ml2_age[ml2_age<41])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(ml2_age[ml2_age >44])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(ml2_age[(ml2_age>40) & (ml2_age< 45)])\/float(len(ml2_age.index)))),\"%.\")","3ba6d080":"print (\"Women grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(fm2_age[fm2_age <41])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(fm2_age[fm2_age >44])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(fm2_age[(fm2_age>40) & (fm2_age< 45)])\/float(len(fm2_age.index)))),\"%.\")","f40a3a74":"print (\"The male mean:\", ml2_age.mean())\nprint (\"The female mean:\", fm2_age.mean())","11ccd5f1":"ml2_young = len(ml2_age[(ml2_age<41)])\/float(len(ml2_age.index))\nfm2_young  = len(fm2_age[(fm2_age<41)])\/float(len(fm2_age.index))\nprint (\"The relative risk of female early promotion is: \", 100*(1-ml2_young\/fm2_young))","4f8a4081":"ml2_elder = len(ml2_age[(ml2_age>44)])\/float(len(ml2_age.index))\nfm2_elder  = len(fm2_age[(fm2_age>44)])\/float(len(fm2_age.index))\nprint (\"The relative risk of male late promotion is: \", 100*ml2_elder\/fm2_elder)","5a62d0d0":"l = 3\nx=np.arange(0,2.5,0.1)\ny= 1- np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential CDF: $\\lambda$ =%.2f'% l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","825fba07":"from __future__ import division\nimport scipy.stats as stats\n\nl = 3\nx=np.arange(0,2.5,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential PDF: $\\lambda$ =%.2f'% l, fontsize=15)\nplt.xlabel('x', fontsize=15)\nplt.ylabel('PDF', fontsize=15)\nplt.show()","7d8ed17a":"l = 0.25\n\nx=np.arange(0,25,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential: $\\lambda$ =%.2f' %l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('PDF',fontsize=15)\nplt.show()","e6466e9c":"u=6 # mean\ns=2 # standard deviation\n\nx=np.arange(0,15,0.1)\n\ny=(1\/(np.sqrt(2*np.pi*s*s)))*np.exp(-(((x-u)**2)\/(2*s*s)))\n\nplt.plot(x,y,'-')\nplt.title('Gaussian PDF: $\\mu$=%.1f, $\\sigma$=%.1f'%(u,s),fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('Probability density',fontsize=15)\nplt.show()","84343e1c":"fig, ax = plt.subplots(1, 9, sharey=True, squeeze=True, figsize=(14, 5))\nx = np.linspace(0, 1, 100)\nfor i in range(9):\n    f = np.mean(np.random.random((10000, i+1)), 1)\n    m, s = np.mean(f), np.std(f, ddof=1)\n    fn = (1\/(s*np.sqrt(2*np.pi)))*np.exp(-(x-m)**2\/(2*s**2))  # normal pdf            \n    ax[i].hist(f, 40,color=[0, 0.2, .8, .6]) \n    ax[i].set_title('n=%d' %(i+1))\n    ax[i].plot(x, fn, color=[1, 0, 0, .6], linewidth=5)\nplt.suptitle('Demonstration of the central limit theorem for a uniform distribution', y=1.05)\nplt.show()","6c26f6ca":"from scipy.stats.distributions import norm\n\n# Some random data\ny = np.random.random(15) * 10\nx = np.linspace(0, 10, 100)\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\ny = np.r_[x1, x2] # r_ Translates slice objects to concatenation along the first axis.\nx = np.linspace(min(y), max(y), 100)\n\n# Smoothing parameter\ns = 0.4\n\n# Calculate the kernels\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'go', ms=10)","429840ff":"from scipy.stats import kde\n\nx1 = np.random.normal(-1, 0.5, 15)\n\n# parameters: (loc=0.0, scale=1.0, size=None)\n\nx2 = np.random.normal(6, 1, 10)\ny = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\n\nx = np.linspace(min(y), max(y), 100)\ns = 0.4   # Smoothing parameter\n\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\n# Calculate the kernels\ndensity = kde.gaussian_kde(y)\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'bo', ms=10)","ef848e9e":"xgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(y, bins=28)\nplt.plot(xgrid, density(xgrid), 'r-')","5acdff24":"# Create a bi-modal distribution with a mixture of Normals.\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\n\n# Append by row\nx = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\nplt.hist(x, bins=18)","bef72d40":"density = kde.gaussian_kde(x)\nxgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(x, bins=18)\nplt.plot(xgrid, density(xgrid), 'r-')","8ae1db6a":"x = np.random.normal(0.0, 1.0, 10000)\na = plt.hist(x,50)","fb965301":"print ('The empirical mean of the sample is ', x.mean())","a021fb16":"NTs=200\nmu=0.0\nvar=1.0\nerr = 0.0\nNPs=1000\nfor i in range(NTs):\n    x = np.random.normal(mu, var, NPs)\n    err += (x.mean()-mu)**2\n\nprint ('MSE: ', err\/NTs)","95e34822":"def Cov(X, Y):\n    def _get_dvis(V):\n        return [v - np.mean(V) for v in V]\n    dxis = _get_dvis(X)\n    dyis = _get_dvis(Y)\n    return np.sum([x * y for x, y in zip(dxis, dyis)])\/len(X)\n\n\nX = [5, -1, 3.3, 2.7, 12.2]\nX= np.array(X)\nY = [10, 12, 8, 9, 11]\n\nprint (\"Cov(X, X) = %.2f\" % Cov(X, X))\nprint (\"Var(X) = %.2f\" % np.var(X))\n\nprint (\"Cov(X, Y) = %.2f\" % Cov(X, Y))","7582d982":"MAXN=100\nMAXN=40\n\nX=np.array([[1,9],[3, 2], [5,3],[5.5,4],[6,4],[6.5,4],[7,3.5],[7.5,3.8],[8,4],\n[8.5,4],[9,4.5],[9.5,7],[10,9],[10.5,11],[11,11.5],[11.5,12],[12,12],[12.5,12],[13,10]])","23254c4b":"plt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('Economic growth(T)',fontsize=15)\nplt.ylabel('Stock market returns(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","45e2ef31":"X=np.array([[1,8],[2, 7], [3,6],[4,8],[5,8],[6,7],[7,7],[8,5],[9,5],[10,6],[11,4],[12,5],[13,3],[14,2],[15,2],[16,1]])\n\nplt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('World Oil Production(T)',fontsize=15)\nplt.ylabel('Gasoline prices(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","7de9e270":"def Corr(X, Y):\n    assert len(X) == len(Y)\n    return Cov(X, Y) \/ np.prod([np.std(V) for V in [X, Y]])\n\nprint (\"Corr(X, X) = %.5f\" % Corr(X, X))\n\nY=np.random.random(len(X))\n\nprint (\"Corr(X, Y) = %.5f\" % Corr(X, Y))","27b5e6c9":"def list2rank(l):\n    #l is a list of numbers\n    # returns a list of 1-based index; mean when multiple instances\n    return [np.mean([i+1 for i, sorted_el in enumerate(sorted(l)) if sorted_el == el]) for el in l]\n\nl = [7, 1, 2, 5]\nprint (\"ranks: \", list2rank(l))\n\ndef spearmanRank(X, Y):\n    # X and Y are same-length lists\n    #print (list2rank(X) )\n    #print (list2rank(Y))\n    return Corr(list2rank(X), list2rank(Y))\n\nX = [10, 20, 30, 40, 1000]\nY = [-70, -1000, -50, -10, -20]\nplt.plot(X,'ro')\nplt.plot(Y,'go')\n\nprint (\"Pearson rank coefficient: %.2f\" % Corr(X, Y))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(X, Y))","0cfec8df":"X=np.array([[10.0, 8.04,10.0, 9.14, 10.0, 7.46, 8.0, 6.58],\n[8.0,6.95, 8.0, 8.14, 8.0, 6.77, 8.0, 5.76],\n[13.0,7.58,13.0,8.74,13.0,12.74,8.0,7.71],\n[9.0,8.81,9.0,8.77,9.0,7.11,8.0,8.84],\n[11.0,8.33,11.0,9.26,11.0,7.81,8.0,8.47],\n[14.0,9.96,14.0,8.10,14.0,8.84,8.0,7.04],\n[6.0,7.24,6.0,6.13,6.0,6.08,8.0,5.25],\n[4.0,4.26,4.0,3.10,4.0,5.39,19.0,12.50],\n[12.0,10.84,12.0,9.13,12.0,8.15,8.0,5.56],\n[7.0,4.82,7.0,7.26,7.0,6.42,8.0,7.91],\n[5.0,5.68,5.0,4.74,5.0,5.73,8.0,6.89]])","c9a64cd1":"plt.subplot(2,2,1)\nplt.scatter(X[:,0],X[:,1],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\n\nprint (\"Mean(X) = %.2f\" % np.mean(X[:,0]))\nprint (\"Var(X) = %.2f\" % np.var(X[:,0]))\nprint (\"Cov(X, Y) = %.2f\" % Cov(X[:,0], X[:,1]))\n\nprint (\"Pearson rank coefficient: %.5f\" % Corr(X[:,0], X[:,1]))\nprint (\"Spearman rank coefficient: %.5f\" % spearmanRank(X[:,0], X[:,1]))","6fb404dc":"plt.subplot(2,2,2)\nplt.scatter(X[:,2],X[:,3],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\n\nprint (\"Mean(X) = %.2f\" % np.mean(X[:,2]))\nprint (\"Var(X) = %.2f\" % np.var(X[:,2]))\nprint (\"Cov(X, Y) = %.2f\" % Cov(X[:,2], X[:,3]))\n\nprint (\"Pearson rank coefficient: %.5f\" % Corr(X[:,2], X[:,3]))\nprint (\"Spearman rank coefficient: %.5f\" % spearmanRank(X[:,2], X[:,3]))\n\n\n\n","8c223f3c":"plt.subplot(2,2,3)\nplt.scatter(X[:,4],X[:,5],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\n\nprint (\"Mean(X) = %.2f\" % np.mean(X[:,4]))\nprint (\"Var(X) = %.2f\" % np.var(X[:,4]))\nprint (\"Cov(X, Y) = %.2f\" % Cov(X[:,4], X[:,5]))\n\nprint (\"Pearson rank coefficient: %.5f\" % Corr(X[:,4], X[:,5]))\nprint (\"Spearman rank coefficient: %.5f\" % spearmanRank(X[:,4], X[:,5]))","b1163949":"plt.subplot(2,2,4)\nplt.scatter(X[:,6],X[:,7],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.gcf().set_size_inches((10,10))\n\nprint (\"Mean(X) = %.2f\" % np.mean(X[:,6]))\nprint (\"Var(X) = %.2f\" % np.var(X[:,6]))\nprint (\"Cov(X, Y) = %.2f\" % Cov(X[:,6], X[:,7]))\n\nprint (\"Pearson rank coefficient: %.5f\" % Corr(X[:,6], X[:,7]))\nprint (\"Spearman rank coefficient: %.5f\" % spearmanRank(X[:,6], X[:,7]))\n","5b617a92":"Promotion des hommes moins promotion des femmes: de 20 \u00e0 41 ans les femmes sont plus promus que les hommes, puis les hommes sont plus promus que les femmes","6bc91087":"Question 15: De m\u00eame pour les femmes j'ai ajout\u00e9 density=True","aa445e60":"Question 6: L'age le plus repr\u00e9sent\u00e9 est 36 ans avec 898 cas","cb077cd6":"Question 11: On obtient le nombre de femme qu'il y a pour chaque \u00e2ge. Il y a beaucoup de femme jeune puis leur nombre d\u00e9croit avec l'\u00e2ge. Sans doute d\u00fb au fait qu'\u00e0 l'\u00e9poque beaucoup de femme ne pouvaient pas travailler, ou alors caus\u00e9 par les grossesses et maternit\u00e9s. ","e39edef4":"Question 21: On cherche \u00e0 calculer le coefficient d'asymetrie par rapport \u00e0 le m\u00e9diane, pour \u00e9viter les valeurs absurdes. L'asym\u00e9trie par rapport \u00e0 la m\u00e9diane est plus \u00e9lev\u00e9 chez les femmes.","eb404066":"Question 13: Pour moi, il s'agit de m\u00eame graphe que le 12, sauf que sample \u00e0 \u00e9t\u00e9 chang\u00e9 par PMF","70918aa4":"Augmenter n permet de rendre la distribution plus centr\u00e9.","8c823628":"Question 20: En moyenne les hommes de l'\u00e9chantillon sont 2,57 ans plus ag\u00e9s que l'\u00e9chantillon des femmes.","13936871":"Question 19: Ainsi nous pouvons voir que la courbe rouge des femmes est sup\u00e9rieur au d\u00e9but ce qui signifie que l'echantillon des femmes est plus jeune que celui des hommes.","4bdb446d":"Question 5: il y a 29170 entit\u00e9 dans USA et 643 dans Mexico","d6a775b9":"Question 2: Range les donn\u00e9es de data dans un tableau, df.columns nous permet de d\u00e9finir les colonnes. df.head(n) donne les n premi\u00e8re lignes","308a10b9":"4.3.1 Sample and Estimated Mean, Variance and Standard Scores","0733a360":"4.2.1.7 Measuring Asymmetry","3a4e66ce":"Question 1: print (data[n:w]) nous donne les donn\u00e9es de data de la ligne n \u00e0 w-1, dans la commande pr\u00e9cedente nous avons rempli les donn\u00e9es dans data \u00e0 l'aide de la fonction chr_int, si il n'y a pas de donn\u00e9 pour une certaine entit\u00e9 on metrra 0","1a29af48":"Question 12: Ici nous avons plac\u00e9 sur le m\u00eame histograme les ages pour l'\u00e9chantillons de femme et d'homme, ainsi il est plus simple de comparer. On remarque tout de suite que l'\u00e9chantillon d'homme est plus gran que celui des femmes. ","6e8755eb":"Question 8: On calcule la moyenne d'age de homme et femme puis on fait la moyenne parmis ceux qui gagnent plus de 50 000 par an. On constate que ceux qui gagnent plus que 50 000 sont plus ag\u00e9es","c9256c5d":"4.2.5 Continuous Distribution","52f7ff84":"Question 14: J'ai rajout\u00e9 density=TRue afin d'avoir la probability d'\u00eatre dans une tranche d'\u00e2ge. Par exemple 15% des hommes qui travailent ont entre 18 et 21 ans","88f3bbd9":"Question 9: Le premier programme nous donne la moyenne, la variance et l'ecart type de l'age des hommes puis celle des femmes. \n            Le deuxi\u00e8me montre la moyenne, la variance et l'ecart type du temps pass\u00e9 par semaine au travaille. Montre que la moyenne des hommes est leg\u00e8rement plus \u00e9lev\u00e9 que celle des femmes.","faf66f4a":"Question 4: df.shape donne les dimmensions du tableau, donc donne le nombre de ligne et de colonne","c5723b99":"Question 18: Cette histogramme avec homme et femme est plus interessant en probabilit\u00e9 car l'effectif des femmes etant plus petit que celui des hommes, la comparaison n'\u00e9tait pas pertinante. Par contre en probabilit\u00e9 nous pouvons mieux \u00e9tudier la r\u00e9partition de l'age des hommes et des femmes. On voit que les hommes sont plus ag\u00e9s et que les femmes ont un pic chez les jeunes.","f3679af3":"Exercice: Pour tous les graphes, la moyenne des valeurs de X est de 9, la variance des X est de 10 et la covariance de 5. ENsuite pour les coefficient de corr\u00e9lation il varie, certain sont autoour de 0,8.","4917c2b5":"Question 19: Ici nous pouvons comparer les histogrammes cumulative des hommes et des femmes, mais puisque l'effectif des femmes est plus faible, il n'y a rien \u00e0 conclure. Donc je propose de rajouter denity=True comme ci dessou","9fecca0f":"Question 7: donne la proportion de personne dans df1 (ceux qui gagnent plus de 50 000 par an), ml1 (chez les hommes) et fm1 (chez les femmes)","ed86cb98":"Question 21: What does the figure shows?\nLa courbe rouge est la densit\u00e9 de probabilit\u00e9, nous l'avons obtenu gr\u00e2ce \u00e0 la methode par noyau (ou dansit\u00e9 de Kernel). Les points bleu sont sans doute des noyaux gaussien. Par contre je n'ai pas tr\u00e8s bien compris de quelle densit\u00e9 de probabilit\u00e9 il s'agit.","1af8a30a":"4.2.3 Outliers","d420d5e8":"Question 3: df.tail(n) donne les n derni\u00e8re lignes","b08cd44d":"Question 16: Ici l'histogramme est cumulative, donc on va \u00e0 chaque fois ajouter les valeurs d'avant. Pour notre exemple on a les nombre d'hommes dont l'\u00e2ge est inf\u00e9rieur \u00e0 n. Par exemple 5000 hommes ont moins de 26 ans et 20000 ont moins de 56 ans.","36acc2b1":"Question 10: On observe que les hommes sont plus ag\u00e9s que les femmes peut importe leur salaire. De mani\u00e8re g\u00e9n\u00e9ral les hommes et femmes qui gagnent beaucoup sont plus ag\u00e9s, ce qui est normal car ils ont plus d'exp\u00e9rience. Et nous observons que le temps de travail median est de 40 pour les hommes et les femmes. ","c23e71d2":"Question 17: L'histogramme est encore cumulative mais cette fois ci pour les femmes. On constate que \u00e0 90 ans on a pris en compte tout l'effectif.","549a906e":"Question 21: What do you obtained as result?\nNous obtenont le MSE (l'erreur quadratique moyenne) pour un \u00e9chantillon de 200 entit\u00e9es prenant des valeurs al\u00e9atoire de 0 \u00e0 1000. Les valeurs prisent au hasard suivent la loi normal centr\u00e9 en 0 et d'\u00e9cart type 1, donc la loi normal centr\u00e9 r\u00e9duite.  S j'augment le nombre d'entit\u00e9 (NTs) le MSE sera plus faible car le nombre des valeurs extr\u00e8me seront plus n\u00e9gligeable.","2a4dbd61":"Question 10 bis: Cette histogramme nous permet de connaitre la r\u00e9partition des \u00e2ges chez les hommes, on constate que l'age le plus repr\u00e9senter est de 32 \u00e0 34 ans. Par conre apr\u00e8s 55 ans il y a de moins en moins de monde, ce qui repr\u00e9sentent les d\u00e9pards \u00e0 la retraite. "}}