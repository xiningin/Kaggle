{"cell_type":{"6e2d106a":"code","7c0bd615":"code","1cc21549":"code","85991b2c":"code","a14dacd7":"code","7eb1c1c0":"code","627b29b0":"code","bfb0314d":"code","5dc53454":"code","e7cc5fb0":"code","abfc3f06":"code","9fb3aa62":"code","64870139":"code","e4cab752":"code","1e85f251":"code","42687260":"code","ed8b0bc2":"code","13155253":"code","db97c843":"code","c19431d1":"markdown","c1cc84e2":"markdown","bcd121e2":"markdown","69d95036":"markdown","0b00d6fe":"markdown","63171a44":"markdown","d81d777e":"markdown","044b840e":"markdown","8bb5b258":"markdown","5ed878d6":"markdown","e65558ee":"markdown","3b6fcb1c":"markdown","f02e1c32":"markdown","367293c8":"markdown","f5b85fdb":"markdown","a2654a69":"markdown","3f97941c":"markdown","bf248516":"markdown","5917397d":"markdown"},"source":{"6e2d106a":"import pandas as pd\nimport numpy as np\ndf=pd.read_csv(\"\/kaggle\/input\/agesal.csv\")","7c0bd615":"df.head(5)","1cc21549":"df.shape","85991b2c":"import matplotlib.pyplot as plt\nplt.scatter(df['Age'], df['Sal'], s = 100, c = 'red')\nplt.title('Scatter plot Age Versus Salary')\nplt.xlabel('Age')\nplt.ylabel('Salary')","a14dacd7":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters = 3, init = 'random', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(df)","7eb1c1c0":"y_kmeans","627b29b0":"plt.scatter(df.iloc[y_kmeans == 0, 0], df.iloc[y_kmeans == 0, 1], s=100,c = 'red')\nplt.scatter(df.iloc[y_kmeans == 1, 0], df.iloc[y_kmeans == 1, 1], s = 100, c = 'blue')\nplt.scatter(df.iloc[y_kmeans == 2, 0], df.iloc[y_kmeans == 2, 1], s = 100, c = 'green')\n#plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'yellow', label = 'Centroids')","bfb0314d":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler().fit(df)\ndf_scaled = scaler.transform(df)\nkmeans = KMeans(n_clusters = 3, init = 'random', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(df_scaled)","5dc53454":"plt.scatter(df_scaled[y_kmeans == 0, 0], df_scaled[y_kmeans == 0, 1], c = 'red')\nplt.scatter(df_scaled[y_kmeans == 1, 0], df_scaled[y_kmeans == 1, 1], s = 100, c = 'blue')\nplt.scatter(df_scaled[y_kmeans == 2, 0], df_scaled[y_kmeans == 2, 1], s = 100, c = 'green')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'yellow', label = 'Centroids')","e7cc5fb0":"from sklearn import datasets\nmyiris = datasets.load_iris()\nx = myiris.data\ny = myiris.target","abfc3f06":"y","9fb3aa62":"#Scaling using standard scalar\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler().fit(x)\nx_scaled = scaler.transform(x)","64870139":"import matplotlib.pyplot as plt\nplt.scatter(x_scaled[y == 0, 0], x_scaled[y == 0, 3], s = 100, c = 'red', label = 'Iris-setosa')\nplt.scatter(x_scaled[y == 1, 0], x_scaled[y == 1, 3], s = 100, c = 'blue', label = 'Iris-versicolour')\nplt.scatter(x_scaled[y == 2, 0], x_scaled[y == 2, 3], s = 100, c = 'green', label = 'Iris-virginica')","e4cab752":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'random', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x_scaled)\n    wcss.append(kmeans.inertia_)","1e85f251":"wcss","42687260":"plt.plot(range(1, 11), wcss)\nplt.title('The elbow method')\nplt.xlabel('Number of clusters')\nplt.ylabel('SSE')      #within cluster sum of squares\nplt.show()","ed8b0bc2":"kmeans = KMeans(n_clusters = 3, init = 'random', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(x_scaled)","13155253":"plt.scatter(x_scaled[y_kmeans == 0, 0], x_scaled[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Iris-setosa')\nplt.scatter(x_scaled[y_kmeans == 1, 0], x_scaled[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Iris-versicolour')\nplt.scatter(x_scaled[y_kmeans == 2, 0], x_scaled[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Iris-virginica')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'yellow', label = 'Centroids')\nplt.legend()","db97c843":"from sklearn.datasets import fetch_mldata\nmnist=fetch_mldata('MNIST original')\nmnist","c19431d1":"![image.png](attachment:image.png)","c1cc84e2":"#Assignments","bcd121e2":"Visualising the clusters based on the first two features - sepal length and sepal width","69d95036":"* [<font size=4>Question 1:How to fit k-means?<\/font>](#1)\n* [<font size=4>Question 2:How scaling affects k-means?<\/font>](#2)\n* [<font size=4>Question 3: What are some of the parameters k-Means<\/font>](#3)   \n* [<font size=4>Question 4: How can we use WCSS to find number of clusters<\/font>](#4)   ","0b00d6fe":"# Question 3:What are the parameters of K-means? <a id=\"3\"><\/a>","63171a44":"# Question 1:How to fit k-means? <a id=\"1\"><\/a>","d81d777e":"**WCSS**","044b840e":"* n_clusters: int, default=8\n* init{\u2018k-means++\u2019, \u2018random\u2019} or  ndarray is passed, it should be of shape (n_clusters, n_features) \n* n_init: Number of time the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia.\n* max_iter: int, default=300\n* MiniBatchKMeans Alternative online implementation that does incremental updates of the centers positions using mini-batches.","8bb5b258":"![image.png](attachment:image.png)","5ed878d6":"Scaling the data (using any one method)","e65558ee":"# Question 2:How scaling affects k-means? <a id=\"2\"><\/a>","3b6fcb1c":"Finding the optimum number of clusters for k-means clustering using Elbow method","f02e1c32":"# K-Means clustering on Iris flower dataset","367293c8":"* Iris dataset compare  intialization with k-means ++  and random  itretaion is  50 and report the interia (k=3)\n* with k =3, maxiter = 500, plot the WCSS with different ireation values 50,100,150,200,250,300,350,400  -> WCSS (Plot it)\n* try with diffrent init values 1,5,10,20,30 ","f5b85fdb":"Applying kmeans to the dataset \/ Creating the kmeans clustering","a2654a69":"Visualising the clusters based on the first two features - sepal length and sepal width","3f97941c":"![image.png](attachment:image.png)","bf248516":"Importing the Iris dataset","5917397d":"# Question 4: How WCSS is used to find cluster? <a id=\"4\"><\/a>"}}