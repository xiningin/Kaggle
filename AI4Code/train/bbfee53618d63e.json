{"cell_type":{"1d28f14e":"code","48266fd5":"code","bd87e71e":"code","211ea193":"code","75413d64":"code","4c739111":"code","2c83f6f9":"code","486ef170":"code","21bed026":"code","05a16601":"code","1eb28912":"code","961a6321":"code","e5b4bb59":"code","556e725c":"code","074b4dc4":"code","4082d767":"code","3e76c150":"code","4a923b0d":"code","a7efd9e6":"code","2fff8834":"code","d8dd4197":"code","175369ae":"code","92613101":"code","1a7507c4":"code","8a2df04f":"code","f7c54219":"code","87bbd4bf":"code","56662c02":"code","89df3366":"code","817db631":"code","b5805b29":"code","04d51bec":"code","2716dc8e":"code","0ad16765":"code","8d5e17f0":"code","73c2dc10":"code","32b203c4":"code","972482f4":"code","6c19fe92":"markdown","0673dc8d":"markdown","2cd6f9fc":"markdown","0509e9f1":"markdown","1687ece2":"markdown","e9b3da16":"markdown","6c4131b9":"markdown","b6a1b2b9":"markdown","a02a16a8":"markdown","00f63a26":"markdown","a2993433":"markdown","2eede40b":"markdown","342bbec4":"markdown","b1478874":"markdown","c4febb20":"markdown","c5607456":"markdown","80315e97":"markdown","25e50332":"markdown","af06febc":"markdown","7127fa22":"markdown","df065ac3":"markdown","317d000b":"markdown","1d2368e0":"markdown","05981643":"markdown","cf516608":"markdown","8855df81":"markdown","c8dd6f8f":"markdown","3017c580":"markdown","585199a8":"markdown","2d6b3f30":"markdown","dd6de610":"markdown"},"source":{"1d28f14e":"import pandas as pd\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', None)\n\ndata1 = pd.read_csv('..\/input\/avocado-prices\/avocado.csv')","48266fd5":"data1.head()","bd87e71e":"data1.info()","211ea193":"data1.shape","75413d64":"data1.describe()","4c739111":"data1.describe(include=['object'])","2c83f6f9":"'''Missing Value Chart'''\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10, 5))\ndata1.isnull().mean(axis=0).plot.barh()\nplt.title(\"Ratio of missing values per columns\")","486ef170":"data1.isnull().values.sum() #total missing values","21bed026":"'''Checking Duplicate'''\n\nprint('Dupplicate entries: {}'.format(data1.duplicated().sum()))\n# data.drop_duplicates(inplace = True)","05a16601":"obj = data1.dtypes[data1.dtypes == \"object\"].index.tolist()\nprint(obj)","1eb28912":"'''Nunique Columns'''\n\ndef nunique_counts(data):\n   for i in data.columns:\n       count = data[i].nunique()\n       print(i, \": \", count)\n    \nnunique_counts(data1)","961a6321":"data1['Date'] = pd.to_datetime(data1['Date'])","e5b4bb59":"data1.rename(columns={'year':'Year'}, inplace=True) #renaming kolom","556e725c":"data1.rename(columns={'4046':'PLU 4046'}, inplace=True) #renaming kolom\ndata1.rename(columns={'4225':'PLU 4225'}, inplace=True) #renaming kolom\ndata1.rename(columns={'4770':'PLU 4770'}, inplace=True) #renaming kolom","074b4dc4":"data1['Year'] = data1['Date'].dt.year\ndata1['Month'] = data1['Date'].dt.month\ndata1['Day'] = data1['Date'].dt.day","4082d767":"data1.head()","3e76c150":"data1.info()","4a923b0d":"data1['Year'].min(), data1['Year'].max()","a7efd9e6":"data1.drop('Unnamed: 0', axis=1, inplace=True)","2fff8834":"data1['Total Volume'].sum() == data1['PLU 4046'].sum() + data1['PLU 4225'].sum() + data1['PLU 4770'].sum()","d8dd4197":"data1['Total Volume'].sum(), data1['PLU 4046'].sum() + data1['PLU 4225'].sum() + data1['PLU 4770'].sum()","175369ae":"data1['Total Revenue'] = data1['AveragePrice'] * data1['Total Volume']\ndata1['Total Revenue PLU 4046'] = data1['AveragePrice'] * data1['PLU 4046']\ndata1['Total Revenue PLU 4225'] = data1['AveragePrice'] * data1['PLU 4225']\ndata1['Total Revenue PLU 4770'] = data1['AveragePrice'] * data1['PLU 4770']\ndata1['Total Revenue Small Bags'] = data1['AveragePrice'] * data1['Small Bags']\ndata1['Total Revenue Large Bags'] = data1['AveragePrice'] * data1['Large Bags']\ndata1['Total Revenue XLarge Bags'] = data1['AveragePrice'] * data1['XLarge Bags']","92613101":"data1.head()","1a7507c4":"import plotly.express as px\nimport plotly.offline as py \npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go \nimport plotly.tools as tools\nimport warnings\nfrom collections import Counter\nfrom plotly.subplots import make_subplots\n\ncustom_aggregation = {}\ncustom_aggregation[\"Total Volume\"] = \"sum\"\ncustom_aggregation[\"PLU 4046\"] = \"sum\"\ncustom_aggregation[\"PLU 4225\"] = \"sum\"\ncustom_aggregation[\"PLU 4770\"] = \"sum\"\n\ndata2 = data1.groupby(\"type\").agg(custom_aggregation)\ndata2['Avocado Type'] = data2.index\n\nfig = make_subplots(rows=1, \n                    cols=2, \n                    specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=('Total Volume',\n                                    'PLU 4046'))\n\n\nlabels = data2['Avocado Type'].tolist()\nvalues = data2['Total Volume'].tolist()\nvalues1 = data2['PLU 4046'].tolist()\nvalues2 = data2['PLU 4225'].tolist()\nvalues3 = data2['PLU 4770'].tolist()\n\nfig.add_trace(go.Pie(\n                    labels=labels,\n                    values=values, \n                    name=''),\n                    1,1)\n\nfig.add_trace(go.Pie(\n                    labels=labels,\n                    values=values1, \n                    name=''),\n                    1,2)\n\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig['layout'].update(height=400, \n                     width=800, \n                     title='Volume by Avocado Type',\n                    legend_title=\"Type\")\nfig.show()","8a2df04f":"fig = make_subplots(rows=1, \n                    cols=2, \n                    specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=('PLU 4225',\n                                    'PLU 4770'))\n\nvalues2 = data2['PLU 4225'].tolist()\nvalues3 = data2['PLU 4770'].tolist()\n\nfig.add_trace(go.Pie(\n                    labels=labels,\n                    values=values2, \n                    name=''),\n                    1,1)\n\nfig.add_trace(go.Pie(\n                    labels=labels,\n                    values=values3, \n                    name=''),\n                    1,2)\n\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig['layout'].update(height=400, \n                     width=800, \n                     title='Volume by Avocado Type',\n                    legend_title=\"Type\")\nfig.show()","f7c54219":"custom_aggregation = {}\ncustom_aggregation[\"Total Revenue\"] = \"sum\"\ndata2 = data1.groupby(\"type\").agg(custom_aggregation)\ndata2['Avocado Type'] = data2.index\n\nlabels = data2['Avocado Type'].tolist()\nvalues = data2['Total Revenue'].tolist()\n\nfig = px.pie(data2, values=values, names=labels)\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig['layout'].update(height=400, width=800, title='Total Revenue by Avocado Type', legend_title=\"Type:\")\nfig.show()","87bbd4bf":"custom_aggregation = {}\ncustom_aggregation[\"Small Bags\"] = \"sum\"\ncustom_aggregation[\"Large Bags\"] = \"sum\"\ncustom_aggregation[\"XLarge Bags\"] = \"sum\"\n\ndata2 = data1.groupby(\"type\").agg(custom_aggregation)\ndata2['Avocado Type'] = data2.index\n\nsb = go.Bar(\n    x = data2['Avocado Type'].value_counts().index.sort_values(),\n    y = data2[\"Small Bags\"],\n    name='Small Bags')\n\nlb = go.Bar(\n    x = data2['Avocado Type'].value_counts().index.sort_values(),\n    y = data2[\"Large Bags\"],\n    name='Large Bags')\n\nxlb = go.Bar(\n    x = data2['Avocado Type'].value_counts().index.sort_values(),\n    y = data2[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n\ndata = [sb, lb, xlb]\n\nfig = tools.make_subplots(rows=1, \n                          cols=1)\n\nfig.append_trace(sb, 1, 1)\nfig.append_trace(lb, 1, 1)\nfig.append_trace(xlb, 1, 1)\n\nfig['layout'].update(height=400, \n                     width=800, \n                     title='Type & Total Volume on Each Bags',\n                    xaxis_title=\"Avocado Type\",\n                    yaxis_title=\"Total Volume\",\n                    legend_title=\"Bags:\")\n\npy.iplot(fig, filename='combined-savings')","56662c02":"custom_aggregation = {}\ncustom_aggregation[\"Total Volume\"] = \"sum\"\ndata2 = data1.groupby(\"region\").agg(custom_aggregation)\ndata2['Region'] = data2.index\n\nfig = px.bar(data2, x='Region', y=\"Total Volume\", color=\"Region\")\nfig['layout'].update(height=400, width=800, title='Total Volume by Region')\nfig.show()","89df3366":"custom_aggregation = {}\ncustom_aggregation[\"Total Revenue\"] = \"sum\"\ndata2 = data1.groupby(\"region\").agg(custom_aggregation)\ndata2['Region'] = data2.index\n\nfig = px.bar(data2, x='Region', y=\"Total Revenue\", color=\"Region\")\nfig['layout'].update(height=400, width=800, title='Total Revenue by Region')\nfig.show()","817db631":"custom_aggregation = {}\ncustom_aggregation[\"AveragePrice\"] = \"mean\"\ndata2 = data1.groupby(\"region\").agg(custom_aggregation)\ndata2['Region'] = data2.index\n\nfig = px.bar(data2, x='Region', y=\"AveragePrice\", color=\"Region\")\nfig['layout'].update(height=400, width=800, title='Average Price by Region')\nfig.show()","b5805b29":"custom_aggregation = {}\ncustom_aggregation[\"Total Revenue PLU 4046\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4225\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4770\"] = \"sum\"\n\ndata2 = data1.groupby(\"region\").agg(custom_aggregation)\ndata2['Region'] = data2.index\n\ndata3 = data2[:11]\ndata4 = data2[12:23]\ndata5 = data2[24:35]\ndata6 = data2[36:47]\ndata7 = data2[48:55]\n\nplu_1 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_2 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_3 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\n#------------------------------------------------------------------\n\nplu_4 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_5 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_6 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\n\n#------------------------------------------------------------------\n\nplu_7 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_8 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_9 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\n#------------------------------------------------------------------\n\nplu_10 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_11 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_12 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\n#------------------------------------------------------------------\n\nplu_13 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_14 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_15 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\n\n\ndata = [plu_1, plu_2, plu_3,plu_4,plu_5,plu_6,\n       plu_7,plu_8,plu_9,plu_10,plu_11,plu_12,\n       plu_13,plu_14,plu_15]\n\nfig = tools.make_subplots(rows=5, \n                          cols=1)\n\nfig.append_trace(plu_1, 1, 1)\nfig.append_trace(plu_2, 1, 1)\nfig.append_trace(plu_3, 1, 1)\n\nfig.append_trace(plu_4, 2, 1)\nfig.append_trace(plu_5, 2, 1)\nfig.append_trace(plu_6, 2, 1)\n\nfig.append_trace(plu_7, 3, 1)\nfig.append_trace(plu_8, 3, 1)\nfig.append_trace(plu_9, 3, 1)\n\nfig.append_trace(plu_10, 4, 1)\nfig.append_trace(plu_11, 4, 1)\nfig.append_trace(plu_12, 4, 1)\n\nfig.append_trace(plu_13, 5, 1)\nfig.append_trace(plu_14, 5, 1)\nfig.append_trace(plu_15, 5, 1)\n\n\nfig['layout'].update(height=1700, \n                     width=900, \n                     title='Avocado Revenue by Label & Region',\n                     showlegend=False)\n\npy.iplot(fig, filename='combined-savings')","04d51bec":"custom_aggregation = {}\ncustom_aggregation[\"Small Bags\"] = \"sum\"\ncustom_aggregation[\"Large Bags\"] = \"sum\"\ncustom_aggregation[\"XLarge Bags\"] = \"sum\"\n\ndata2 = data1.groupby(\"region\").agg(custom_aggregation)\ndata2['Region'] = data2.index\n\ndata3 = data2[:11]\ndata4 = data2[12:23]\ndata5 = data2[24:35]\ndata6 = data2[36:47]\ndata7 = data2[48:55]\n\nplu_1 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"Small Bags\"],\n    name='Small Bags')\n\nplu_2 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"Large Bags\"],\n    name='Large Bags')\n\nplu_3 = go.Bar(\n    x = data3['Region'].value_counts().index.sort_values(),\n    y = data3[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n#------------------------------------------------------------------\n\nplu_4 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"Small Bags\"],\n    name='Small Bags')\n\nplu_5 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"Large Bags\"],\n    name='Large Bags')\n\nplu_6 = go.Bar(\n    x = data4['Region'].value_counts().index.sort_values(),\n    y = data4[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n\n#------------------------------------------------------------------\n\nplu_7 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"Small Bags\"],\n    name='Small Bags')\n\nplu_8 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"Large Bags\"],\n    name='Large Bags')\n\nplu_9 = go.Bar(\n    x = data5['Region'].value_counts().index.sort_values(),\n    y = data5[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n#------------------------------------------------------------------\n\nplu_10 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"Small Bags\"],\n    name='Small Bags')\n\nplu_11 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"Large Bags\"],\n    name='Large Bags')\n\nplu_12 = go.Bar(\n    x = data6['Region'].value_counts().index.sort_values(),\n    y = data6[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n#------------------------------------------------------------------\n\nplu_13 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"Small Bags\"],\n    name='Small Bags')\n\nplu_14 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"Large Bags\"],\n    name='Large Bags')\n\nplu_15 = go.Bar(\n    x = data7['Region'].value_counts().index.sort_values(),\n    y = data7[\"XLarge Bags\"],\n    name='XLarge Bags')\n\n\ndata = [plu_1, plu_2, plu_3,plu_4,plu_5,plu_6,\n       plu_7,plu_8,plu_9,plu_10,plu_11,plu_12,\n       plu_13,plu_14,plu_15]\n\nfig = tools.make_subplots(rows=5, \n                          cols=1)\n\nfig.append_trace(plu_1, 1, 1)\nfig.append_trace(plu_2, 1, 1)\nfig.append_trace(plu_3, 1, 1)\n\nfig.append_trace(plu_4, 2, 1)\nfig.append_trace(plu_5, 2, 1)\nfig.append_trace(plu_6, 2, 1)\n\nfig.append_trace(plu_7, 3, 1)\nfig.append_trace(plu_8, 3, 1)\nfig.append_trace(plu_9, 3, 1)\n\nfig.append_trace(plu_10, 4, 1)\nfig.append_trace(plu_11, 4, 1)\nfig.append_trace(plu_12, 4, 1)\n\nfig.append_trace(plu_13, 5, 1)\nfig.append_trace(plu_14, 5, 1)\nfig.append_trace(plu_15, 5, 1)\n\n\nfig['layout'].update(height=1700, \n                     width=900, \n                     title='Avocado Revenue by Bags & Region',\n                     showlegend=False)\n\npy.iplot(fig, filename='combined-savings')","2716dc8e":"fig = make_subplots(rows=2, \n                    cols=1,\n                    subplot_titles=(['Monthly Avocado Price',\n                                    'Monthly Total Revenue']))\n\ncustom_aggregation = {}\ncustom_aggregation[\"AveragePrice\"] = \"mean\"\ncustom_aggregation[\"Total Revenue\"] = \"sum\"\n\ndata2 = data1.set_index(pd.DatetimeIndex(data1['Date']))\ndata0 = data2.resample('M').agg(custom_aggregation)\ndata0.columns = [\"Average Price\", 'Total Revenue']\ndata0['Date'] = data0.index\n\nx = data0['Date'].tolist()\ny = data0['Average Price'].tolist()\ny2 = data0['Total Revenue'].tolist()\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='darkgreen', width=2)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='green', width=2)), \n                         2, 1)\n\n\nfig['layout'].update(height=600, \n                     width=900,\n                    showlegend=False)\n\nfig['layout']['xaxis']['title']='Time'\nfig['layout']['xaxis2']['title']='Time'\nfig['layout']['yaxis']['title']='Price of 1 Avocado ($)'\nfig['layout']['yaxis2']['title']='Total Revenue ($)'\n\nfig.show()","0ad16765":"fig = make_subplots(rows=2, \n                    cols=1,\n                    subplot_titles=(['Monthly Avocado Price',\n                                    'Monthly Total Revenue']))\n\ncustom_aggregation = {}\ncustom_aggregation[\"AveragePrice\"] = \"mean\"\ncustom_aggregation[\"Total Revenue\"] = \"sum\"\ndata_ = data1.loc[data1['type'] == 'conventional']\ndata__ = data1.loc[data1['type'] == 'organic']\n\ndata2 = data_.set_index(pd.DatetimeIndex(data_['Date']))\ndata0 = data2.resample('M').agg(custom_aggregation)\ndata0['Date'] = data0.index\n\nx = data0['Date'].tolist()\ny1 = data0['AveragePrice'].tolist()\ny2 = data0['Total Revenue'].tolist()\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y1,\n                         line=dict(color='darkgreen', width=2),\n                         name='Conventional Price'), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='darkgreen', width=2),\n                         name='Conventional Revenue'), \n                         2, 1)\n\n\n#--------------------------------------------------------------------------\n\ndata2 = data__.set_index(pd.DatetimeIndex(data__['Date']))\ndata0 = data2.resample('M').agg(custom_aggregation)\ndata0['Date'] = data0.index\n\nx = data0['Date'].tolist()\ny1 = data0['AveragePrice'].tolist()\ny2 = data0['Total Revenue'].tolist()\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y1,\n                         line=dict(color='blue', width=2),\n                         name='Organic Price'), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='blue', width=2),\n                         name='Organic Revenue'), \n                         2, 1)\n\n#----------------------------------------------------------------------------\n\nfig['layout'].update(height=1000, \n                     width=900,\n                    showlegend=True)\n\nfig['layout']['xaxis']['title']='Time'\nfig['layout']['xaxis2']['title']='Time'\n\nfig['layout']['yaxis']['title']='Avocado Price ($)'\nfig['layout']['yaxis2']['title']='Total Revenue ($)'\n\nfig.show()\n\n","8d5e17f0":"fig = make_subplots(rows=3, \n                    cols=1,\n                    subplot_titles=(['Monthly PLU 4046 Total Revenue',\n                                    'Monthly PLU 4225 Total Revenue',\n                                    'Monthly PLU 4770 Total Revenue']))\n\ncustom_aggregation = {}\ncustom_aggregation[\"Total Revenue PLU 4046\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4225\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4770\"] = \"sum\"\n\ndata2 = data1.set_index(pd.DatetimeIndex(data1['Date']))\ndata0 = data2.resample('M').agg(custom_aggregation)\ndata0.columns = [\"Total Revenue PLU 4046\",'Total Revenue PLU 4225','Total Revenue PLU 4770']\ndata0['Date'] = data0.index\n\nx = data0['Date'].tolist()\ny = data0['Total Revenue PLU 4046'].tolist()\ny2 = data0['Total Revenue PLU 4225'].tolist()\ny3 = data0['Total Revenue PLU 4770'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='darkgreen', width=2)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='blue', width=2)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='black', width=2)), \n                         3, 1)\n\nfig['layout'].update(height=1000, \n                     width=900,\n                    showlegend=False)\n\nfig['layout']['xaxis']['title']='Time'\nfig['layout']['xaxis2']['title']='Time'\nfig['layout']['xaxis3']['title']='Time'\n\nfig['layout']['yaxis']['title']='Total Revenue PLU 4046 ($)'\nfig['layout']['yaxis2']['title']='Total Revenue PLU 4225 ($)'\nfig['layout']['yaxis3']['title']='Total Revenue PLU 4770 ($)'\n\nfig.show()","73c2dc10":"fig = make_subplots(rows=3, \n                    cols=1,\n                    subplot_titles=(['Monthly Small Bags Total Revenue',\n                                    'Monthly Large Bags Total Revenue',\n                                    'Monthly XLarge Bags Total Revenue']))\n\ncustom_aggregation = {}\ncustom_aggregation[\"Total Revenue Small Bags\"] = \"sum\"\ncustom_aggregation[\"Total Revenue Large Bags\"] = \"sum\"\ncustom_aggregation[\"Total Revenue XLarge Bags\"] = \"sum\"\n\ndata2 = data1.set_index(pd.DatetimeIndex(data1['Date']))\ndata0 = data2.resample('M').agg(custom_aggregation)\ndata0.columns = [\"Total Revenue Small Bags\",'Total Revenue Large Bags','Total Revenue XLarge Bags']\ndata0['Date'] = data0.index\n\nx = data0['Date'].tolist()\ny = data0['Total Revenue Small Bags'].tolist()\ny2 = data0['Total Revenue Large Bags'].tolist()\ny3 = data0['Total Revenue XLarge Bags'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='darkgreen', width=2)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='blue', width=2)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='black', width=2)), \n                         3, 1)\n\nfig['layout'].update(height=1000, \n                     width=900,\n                    showlegend=False)\n\nfig['layout']['xaxis']['title']='Time'\nfig['layout']['xaxis2']['title']='Time'\nfig['layout']['xaxis3']['title']='Time'\n\nfig['layout']['yaxis']['title']='Total Revenue Small Bags ($)'\nfig['layout']['yaxis2']['title']='Total Revenue Large Bags ($)'\nfig['layout']['yaxis3']['title']='Total Revenue XLarge Bags ($)'\n\nfig.show()","32b203c4":"custom_aggregation = {}\ncustom_aggregation[\"Total Revenue PLU 4046\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4225\"] = \"sum\"\ncustom_aggregation[\"Total Revenue PLU 4770\"] = \"sum\"\n\ndata_ = data1.loc[data1['Year'] == 2015]\ndata__ = data1.loc[data1['Year'] == 2016]\ndata___ = data1.loc[data1['Year'] == 2017]\n\n#--------------------------------------------------------------------------------------------------------\nfig = tools.make_subplots(rows=3, \n                          cols=1,\n                        specs=[[{'type':'bar'}],\n                              [{'type':'bar'}],\n                              [{'type':'bar'}]],\n                       subplot_titles=(['2015',\n                                        '2016',\n                                       '2017']))\n\ndata2 = data_.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_1 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_2 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_3 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\nfig.append_trace(plu_1, 1, 1)\nfig.append_trace(plu_2, 1, 1)\nfig.append_trace(plu_3, 1, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue PLU 4046'].tolist()\ny2 = data2['Total Revenue PLU 4225'].tolist()\ny3 = data2['Total Revenue PLU 4770'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         1, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\n\ndata2 = data__.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_4 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_5 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_6 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\nfig.append_trace(plu_4, 2, 1)\nfig.append_trace(plu_5, 2, 1)\nfig.append_trace(plu_6, 2, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue PLU 4046'].tolist()\ny2 = data2['Total Revenue PLU 4225'].tolist()\ny3 = data2['Total Revenue PLU 4770'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         2, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\ndata2 = data___.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_7 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4046\"],\n    name='PLU 4046')\n\nplu_8 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4225\"],\n    name='PLU 4225')\n\nplu_9 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue PLU 4770\"],\n    name='PLU 4770')\n\nfig.append_trace(plu_7, 3, 1)\nfig.append_trace(plu_8, 3, 1)\nfig.append_trace(plu_9, 3, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue PLU 4046'].tolist()\ny2 = data2['Total Revenue PLU 4225'].tolist()\ny3 = data2['Total Revenue PLU 4770'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         3, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         3, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         3, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\n\ndata = [plu_1, plu_2, plu_3,\n       plu_4,plu_5,plu_6,\n       plu_7,plu_8,plu_9]\n\nfig['layout'].update(height=900, \n                     width=900, \n                     title='Avocado Monthly Revenue by Avocado Type in:',\n                     showlegend=False)\n\nfig['layout']['xaxis']['title']='Month'\nfig['layout']['xaxis2']['title']='Month'\nfig['layout']['xaxis3']['title']='Month'\n\nfig['layout']['yaxis']['title']='Total Revenue ($)'\nfig['layout']['yaxis2']['title']='Total Revenue ($)'\nfig['layout']['yaxis3']['title']='Total Revenue ($)'\n\npy.iplot(fig, filename='combined-savings')","972482f4":"custom_aggregation = {}\ncustom_aggregation[\"Total Revenue Small Bags\"] = \"sum\"\ncustom_aggregation[\"Total Revenue Large Bags\"] = \"sum\"\ncustom_aggregation[\"Total Revenue XLarge Bags\"] = \"sum\"\n\ndata_ = data1.loc[data1['Year'] == 2015]\ndata__ = data1.loc[data1['Year'] == 2016]\ndata___ = data1.loc[data1['Year'] == 2017]\n\n#--------------------------------------------------------------------------------------------------------\nfig = tools.make_subplots(rows=3, \n                          cols=1,\n                        specs=[[{'type':'bar'}],\n                              [{'type':'bar'}],\n                              [{'type':'bar'}]],\n                       subplot_titles=(['2015',\n                                        '2016',\n                                       '2017']))\n\ndata2 = data_.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_1 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Small Bags\"],\n    name='Small Bags')\n\nplu_2 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Large Bags\"],\n    name='Large Bags')\n\nplu_3 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue XLarge Bags\"],\n    name='XLarge Bags')\n\nfig.append_trace(plu_1, 1, 1)\nfig.append_trace(plu_2, 1, 1)\nfig.append_trace(plu_3, 1, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue Small Bags'].tolist()\ny2 = data2['Total Revenue Large Bags'].tolist()\ny3 = data2['Total Revenue XLarge Bags'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         1, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         1, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\n\ndata2 = data__.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_4 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Small Bags\"],\n    name='Small Bags')\n\nplu_5 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Large Bags\"],\n    name='Large Bags')\n\nplu_6 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue XLarge Bags\"],\n    name='Xlarge Bags')\n\nfig.append_trace(plu_4, 2, 1)\nfig.append_trace(plu_5, 2, 1)\nfig.append_trace(plu_6, 2, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue Small Bags'].tolist()\ny2 = data2['Total Revenue Large Bags'].tolist()\ny3 = data2['Total Revenue XLarge Bags'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         2, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         2, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\ndata2 = data___.groupby(\"Month\").agg(custom_aggregation)\ndata2['Month'] = data2.index\n\nplu_7 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Small Bags\"],\n    name='Small Bags')\n\nplu_8 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue Large Bags\"],\n    name='Large Bags')\n\nplu_9 = go.Bar(\n    x = data2['Month'].value_counts().index.sort_values(),\n    y = data2[\"Total Revenue XLarge Bags\"],\n    name='XLarge Bags')\n\nfig.append_trace(plu_7, 3, 1)\nfig.append_trace(plu_8, 3, 1)\nfig.append_trace(plu_9, 3, 1)\n\n\nx = data2['Month'].tolist()\ny = data2['Total Revenue Small Bags'].tolist()\ny2 = data2['Total Revenue Large Bags'].tolist()\ny3 = data2['Total Revenue XLarge Bags'].tolist()\n\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y,\n                         line=dict(color='blue', width=1)), \n                         3, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y2,\n                         line=dict(color='red', width=1)), \n                         3, 1)\n\nfig.add_trace(go.Scatter(x=x, \n                         y=y3,\n                         line=dict(color='green', width=1)), \n                         3, 1)\n\n#--------------------------------------------------------------------------------------------------------\n\n\ndata = [plu_1, plu_2, plu_3,\n       plu_4,plu_5,plu_6,\n       plu_7,plu_8,plu_9]\n\nfig['layout'].update(height=900, \n                     width=900, \n                     title='Avocado Monthly Revenue by Avocado Bags in:',\n                     showlegend=False)\n\nfig['layout']['xaxis']['title']='Month'\nfig['layout']['xaxis2']['title']='Month'\nfig['layout']['xaxis3']['title']='Month'\n\nfig['layout']['yaxis']['title']='Total Revenue ($)'\nfig['layout']['yaxis2']['title']='Total Revenue ($)'\nfig['layout']['yaxis3']['title']='Total Revenue ($)'\n\npy.iplot(fig, filename='combined-savings')","6c19fe92":"# Task & Description","0673dc8d":"# Data Importing & Preview","2cd6f9fc":"- Total avocados volume sold by its region majority is from West, South Central and California","0509e9f1":"- As well as the volume, Conventional avocados give almost all of the revenue which generated compared to Organic avocados","1687ece2":"1. In which cities can millenials have their avocado toast AND buy a home?\n\n    - Region which have low avocado price are: South Central, Houston, and Dallas\n    \n    \n2. Do the price, volume, and type of avocado change over time?\n\n    - Yes, avocados price, get its lowets price in May 2016 and Feb 2017. And for highest price in October 2016 and Sep 2017. At a glance, we can see that avocados price is cyclical. Increased from beginning of the year until  September get its higher price on one year, and then decreased until Feb - May.\n\n\n3. Does the number of avocados sold differ across regions and cities?\n\n    - Yes it does, region which have high avocado sales are West, South Central and California\n    \n\n4. Is there a preference for certain avocado sizes? Did 2017 change those preferences?\n\n    - Yes it is, we can see that the market preference on Aug 2015 until Aug 2016 is increased on chosing PLU 4225 than PLU 4046 and from Aug 2016 until Dec 2017 the market preference of chosing PLU 4046 and 4225 are balanced\n\n\n5. Was the Avocadopocalypse of 2017 real?\n\n    - I think its not, it's normal. Because tha avocado price are cyclical. And in 2017 it get it's highest price. As we know there is so many factors that affect avocados price especially in US. We must check the supplier of the avocado (maybe its imported from other country? or from US farm). Climate also giving a significance role in avocados price.\n","e9b3da16":"# Total Volume by Region","6c4131b9":"# Avocado Monthly Revenue by Avocado Bags","b6a1b2b9":"- We can see that the market preference on Aug 2015 until Aug 2016 is increased on chosing PLU 4225 than PLU 4046 (the red and blue line getting closer)\n- And from Aug 2016 until Dec 2017 the market preference of chosing PLU 4046 and 4225 are balanced","a02a16a8":"# Monthly Avocado Price & Revenue","00f63a26":"# Volume by Avocado Type","a2993433":"- The idea here is, i want to find out the tencendy of a region to chose avocado type\n- For overall in US, mostly market chose PLU 4046 than PLU 4225. For PLU 4770 the size is very small\n- But in certain region market prefer to chose PLU 4225 than PLU 4046. The region such as: Baltimore, Chicago, Great Lakes, Hartfor Spring Field and etc\n- This is very usefull information as consideration to optimalize the avocado sales in each region","2eede40b":"- And for the Bags, it seems there is no significance different on market preference from chosing Bags. Every month the avocados on Small bags are sold more compared to Large and Xlarge Bags","342bbec4":"Hello \ud83d\ude4c, welcome to my notebook. In this notebook we will try to exploring avocado price data and also make time-series visualization. Feel free if you have any question or suggestion! Thank you!","b1478874":"# Average Price by Region","c4febb20":"# Avocado Monthly Revenue by Avocado Type","c5607456":"# Total Revenue by Region","80315e97":"- For the avocados price, get its lowets price in May 2016 and Feb 2017. And for highest price in October 2016 and Sep 2017\n- At a glance, we can see that avocados price is cyclical. Increased from beginning of the year until  September get its higher price on one year, and then decreased until Feb - May.","25e50332":"- The interesting discovery is, for revenue on XLarge Bags avocados always get it's peak on July every year and then decrease until December\n- Can we assume that for market segment which need avocados in large volume such as Company, Restaurant always make a purchase on July? Need further inspection","af06febc":"# Avocado Revenue by Bags & Region","7127fa22":"- Most of avocados sold are in Small Bags, maybe its for retail market.\n- But in several region such as Dayton and Denver, market prefer to buy on Large Bags compared to Small Bags","df065ac3":"- Context: It is a well known fact that Millenials LOVE Avocado Toast. It's also a well known fact that all Millenials live in their parents basements. Clearly, they aren't buying home because they are buying too much Avocado Toast! But maybe there's hope\u2026 if a Millenial could find a city with cheap avocados, they could live out the Millenial American Dream.\n\n- Content: This data was downloaded from the Hass Avocado Board website in May of 2018 & compiled into a single CSV. Here's how the Hass Avocado Board describes the data on their website:\n\n- The table below represents weekly 2018 retail scan data for National retail volume (units) and price. Retail scan data comes directly from retailers\u2019 cash registers based on actual retail sales of Hass avocados. Starting in 2013, the table below reflects an expanded, multi-outlet retail data set. Multi-outlet reporting includes an aggregation of the following channels: grocery, mass, club, drug, dollar and military. The Average Price (of avocados) in the table reflects a per unit (per avocado) cost, even when multiple units (avocados) are sold in bags. The Product Lookup codes (PLU\u2019s) in the table are only for Hass avocados. Other varieties of avocados (e.g. greenskins) are not included in this table. Some relevant columns in the dataset:\n\n    1. Date - The date of the observation\n    2. AveragePrice - the average price of a single avocado\n    3. type - conventional or organic\n    4. year - the year\n    5. Region - the city or region of the observation\n    6. Total Volume - Total number of avocados sold\n    7. 4046 - Total number of avocados with PLU 4046 sold\n    8. 4225 - Total number of avocados with PLU 4225 sold\n    9. 4770 - Total number of avocados with PLU 4770 sold\n\n\n- Inspiration\n\n    1. In which cities can millenials have their avocado toast AND buy a home?\n\n    2. Was the Avocadopocalypse of 2017 real?\n    \n    3. Do the price, volume, and type of avocado change over time?\n\n    4. Does the number of avocados sold differ across regions and cities?\n\n    5. Is there a preference for certain avocado sizes? Did 2017 change those preferences?","317d000b":"- From this chart we know that most of avocados (either it conventional nor organic) is sold majority on Small Bags. ","1d2368e0":"- For the data shape we got 18249 rows and 14 features\n- After checking for the missing values and duplicates, we know our data is ready\n- For date columns, we will convert it to datetime format so later we can use for time series analysis\n- We also generete it's Year, Month and Date seperately in different columns\n- I want to find out if total volumes is summination of PLU 4046, 4225, and 4770 volumes and its not same\n- And then making little feature engineering to generate total revenue from total volumes, volumes by its avocado types and bags","05981643":"# Conclusion","cf516608":"Finish, don't forget to upvote! Thank you!:)","8855df81":"- By total volume (all and volume by avocado type) we know that majority of avocado sold is Conventional Avocados. Meanwhile, for Organic Avocados the sizes is very small, nearly 1%-2% of total avocados sold","c8dd6f8f":"# Total Revenue by Avocado Type","3017c580":"- The region which have high avg. avocados price are: Hatfor Spring Field, San Francisco and California. Meanwhile South Central, Houston, and Dallas are region with lowest avocados price","585199a8":"# Type & Total Volume on Each Bags","2d6b3f30":"# Avocado Revenue by Label & Region","dd6de610":"- For Conventional and Organic avocados price it seems like no significance different\n- Majority of revenue is come from Conventional avocados compared to Organic one"}}