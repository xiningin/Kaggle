{"cell_type":{"18ff8e32":"code","a94e1c91":"code","c1181559":"code","b546c975":"code","9c0bbe8b":"code","09755c79":"code","95d74460":"code","c0c49e2c":"code","96c4441c":"code","cc09cc33":"code","066fa303":"code","815c4bb2":"code","4acf85b8":"code","c79e7ee6":"code","3864866f":"code","fcfe8898":"code","35623174":"code","c7725bcc":"code","08817624":"code","a83ce15d":"code","4c94567e":"code","7cbb0ac2":"code","031b2785":"code","30714659":"code","ee118a0b":"code","2c9665e0":"code","617328ef":"code","84a407e5":"code","36738915":"code","c825cc09":"code","af695969":"code","ee1fe34d":"markdown","9952af96":"markdown","4eaeab37":"markdown","803bc131":"markdown","e9c50f82":"markdown","7c9f877c":"markdown","3a0a662b":"markdown","c9b31a9a":"markdown","7f8188bd":"markdown","3f51d247":"markdown","4a074625":"markdown","2e2f7be0":"markdown","984712cb":"markdown"},"source":{"18ff8e32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nimport operator\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a94e1c91":"Sum_Weather = pd.read_csv(\"..\/input\/weatherww2\/Summary of Weather.csv\")","c1181559":"Sum_Weather.head(2)","b546c975":"Sum_Weather.info()","9c0bbe8b":"Sum_Weather.describe().T","09755c79":"# Extract 3 columns 'MaxTemp','MinTemp', 'MeanTemp' for pure and better showing\n\nSum_Weather_df = Sum_Weather[['MaxTemp','MinTemp', 'Date']]\n#Sum_Weather_df","95d74460":"Sum_Weather_df = Sum_Weather_df[:][:500]      # lets take limit for speed regression calculating\nSum_Weather_df.head(2)","c0c49e2c":"pd.to_datetime(Sum_Weather_df['Date'])","96c4441c":"# See picture with scatter or plot method\n\n#sns.pairplot(Sum_Weather_df, kind=\"reg\")\n\nplt.figure(figsize=(22,10))\nplt.plot(Sum_Weather_df.Date, Sum_Weather_df.MaxTemp, Sum_Weather_df.MinTemp,)\nplt.title(\"Max and Min Temperature of Dates\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Max and Min Temperature\")\nplt.legend()\nplt.show()\n\n","cc09cc33":"# see how many null values we have\n\nSum_Weather_df.isnull().sum()","066fa303":"# Features chose\n\ny = np.array(Sum_Weather_df['MaxTemp']).reshape(-1, 1)\nX = np.array(Sum_Weather_df['MinTemp']).reshape(-1, 1)","815c4bb2":"# Split data as %20 is test and %80 is train set\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 42)","4acf85b8":"from sklearn.linear_model import LinearRegression\n\nlin_df = LinearRegression()  \nlin_df.fit(X_train, y_train)","c79e7ee6":"y_pred = lin_df.predict(X_test)                                     # Predict Linear Model\naccuracy_score = lin_df.score(X_test, y_test)                       # Accuracy score\nprint(\"Linear Regression Model Accuracy Score: \" + \"{:.1%}\".format(accuracy_score))","3864866f":"from sklearn.metrics import mean_squared_error,r2_score\n\nprint(\"R2 Score: \" +\"{:.3}\".format(r2_score(y_test, y_pred)));","fcfe8898":"# Finally draw figure of Linear Regression Model\n\nplt.scatter(X_test, y_test, color='r')\nplt.plot(X_test, y_pred, color='g')\nplt.show()","35623174":"mlin_df = LinearRegression()\nmlin_df = mlin_df.fit(X_train, y_train)\nmlin_df.intercept_       # constant b0\nmlin_df.coef_            # variable coefficient","c7725bcc":"y_pred = mlin_df.predict(X_train)                                      # predict Multi linear Reg model\nrmse = np.sqrt(mean_squared_error(y_train, mlin_df.predict(X_train)))\nprint(\"RMSE Score for Test set: \" +\"{:.2}\".format(rmse))\nprint(\"R2 Score for Test set: \" +\"{:.3}\".format(r2_score(y_train, y_pred)));      # this is test error score","08817624":"# cross validation method is giving better and clear result\n\ncross_val_score(mlin_df, X, y, cv=10, scoring = 'r2').mean()","a83ce15d":"mlin_df.score(X_train, y_train)      # r2 value","4c94567e":"# Finally draw figure of Multiple Linear Regression Model\n\nplt.scatter(X_train, y_train, s=100)\n\n# sort the values of x before line plot\nsort_axis = operator.itemgetter(0)\nsorted_zip = sorted(zip(X_train,y_pred), key=sort_axis)\nX_test, y_pred = zip(*sorted_zip)\nplt.plot(X_train, y_train, color='r')\nplt.show()","7cbb0ac2":"from sklearn.preprocessing import PolynomialFeatures\n\npoly_df = PolynomialFeatures(degree = 5)\ntransform_poly = poly_df.fit_transform(X_train)\n\nlinreg2 = LinearRegression()\nlinreg2.fit(transform_poly,y_train)\n\npolynomial_predict = linreg2.predict(transform_poly)","031b2785":"rmse = np.sqrt(mean_squared_error(y_train,polynomial_predict))\nr2 = r2_score(y_train,polynomial_predict)\nprint(\"RMSE Score for Test set: \" +\"{:.2}\".format(rmse))\nprint(\"R2 Score for Test set: \" +\"{:.2}\".format(r2))","30714659":"plt.scatter(X_train, y_train, s=50)\n# sort the values of x before line plot\nsort_axis = operator.itemgetter(0)\nsorted_zip = sorted(zip(X_train,polynomial_predict), key=sort_axis)\nX_train, polynomial_predict = zip(*sorted_zip)\nplt.plot(X_train, polynomial_predict, color='m')\nplt.show()","ee118a0b":"from sklearn.tree import DecisionTreeRegressor\n\ndt_reg = DecisionTreeRegressor()          # create  DecisionTreeReg with sklearn\ndt_reg.fit(X_train,y_train)","2c9665e0":"dt_predict = dt_reg.predict(X_train)\n#dt_predict.mean()","617328ef":"plt.scatter(X_train,y_train, color=\"red\")                           # scatter draw\nX_grid = np.arange(min(np.array(X_train)),max(np.array(X_train)), 0.01)  \nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.plot(X_grid,dt_reg.predict(X_grid),color=\"g\")                 # line draw\nplt.xlabel(\"Temperature\")\nplt.ylabel(\"Salinity\")\nplt.title(\"Decision Tree Model\")\nplt.show()","84a407e5":"rmse = np.sqrt(mean_squared_error(y_train,dt_predict))\nr2 = r2_score(y_train,dt_predict)\nprint(\"RMSE Score for Test set: \" +\"{:.2}\".format(rmse))\nprint(\"R2 Score for Test set: \" +\"{:.2}\".format(r2))","36738915":"from sklearn.ensemble import RandomForestRegressor\n\nrf_reg = RandomForestRegressor(n_estimators=5, random_state=0)\nrf_reg.fit(X_train,y_train)\nrf_predict = rf_reg.predict(X_train)\n#rf_predict.mean()","c825cc09":"plt.scatter(X_train,y_train, color=\"red\")                           # scatter draw\nX_grid = np.arange(min(np.array(X_train)),max(np.array(X_train)), 0.01)  \nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.plot(X_grid,rf_reg.predict(X_grid),color=\"b\")                 # line draw\nplt.xlabel(\"Temperature\")\nplt.ylabel(\"Salinity\")\nplt.title(\"Random Forest Model\")\nplt.show()","af695969":"rmse = np.sqrt(mean_squared_error(y_train,rf_predict))\nr2 = r2_score(y_train,rf_predict)\nprint(\"RMSE Score for Test set: \" +\"{:.2}\".format(rmse))\nprint(\"R2 Score for Test set: \" +\"{:.2}\".format(r2))","ee1fe34d":"* This was just for train set and you can also do for test set.","9952af96":"## 2.1.Multiple Linear Regression Model Tunning","4eaeab37":"**Result:** When we revise 5 models, they gave very bad predicts. So linear regression models are not suitable for this data.","803bc131":"* This was just for train set and you can also do for test set.","e9c50f82":"# 5.Random Forest Model","7c9f877c":"* This was just for train set and you can also do for test set.","3a0a662b":"# 4.Decision Tree Regression","c9b31a9a":"# 3.Polynomial Regression","7f8188bd":"# Linear regression (predicting a continuous value):\n\n*** Question:**\n>     Weather Conditions in World War Two: Is there a relationship between the daily minimum and maximum temperature? Can you predict the maximum temperature given the minimum temperature? ","3f51d247":"# 1.Linear Regression","4a074625":"# 2.Multiple Linear Regression","2e2f7be0":"* This was just for train set and you can also do for test set.","984712cb":"I didn't fix dates accordingly. But this is sample and you can also rotate extra."}}