{"cell_type":{"01b22967":"code","ce8726ef":"code","e3bd43a7":"code","5957a174":"code","52192944":"code","25ae9931":"code","7b6ec45a":"code","b72b4077":"code","eec8dff7":"code","cef96377":"code","7d9243d3":"code","0f052450":"code","0a6bf744":"markdown","e18a3cb2":"markdown","a9ab92e4":"markdown","703bab7b":"markdown","02484f8c":"markdown","c65c73c4":"markdown","c374db18":"markdown","a6f0fade":"markdown"},"source":{"01b22967":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce8726ef":"import cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimage=cv2.imread('..\/input\/natural-images\/data\/natural_images\/cat\/cat_0353.jpg')\nplt.imshow(image,cmap=\"gray\"),plt.axis(\"off\")\nplt.show()","e3bd43a7":"image_grey=cv2.imread('..\/input\/natural-images\/data\/natural_images\/cat\/cat_0353.jpg',cv2.IMREAD_GRAYSCALE)\nmax_output_value=255\nneighbourhood_size=99\nsubtract_from_mean=10\nimage_binarized=cv2.adaptiveThreshold(image_grey,max_output_value,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,cv2.THRESH_BINARY,neighbourhood_size,subtract_from_mean)\nplt.imshow(image_binarized,cmap=\"gray\"),plt.axis(\"off\")\nplt.show()","5957a174":"img_flower=cv2.imread('..\/input\/natural-images\/data\/natural_images\/flower\/flower_0449.jpg')\nplt.imshow(img_flower,cmap=\"gray\"),plt.axis(\"off\")\nplt.show()","52192944":"median_intensity=np.median(img_flower)\nlower_threshold = int(max(0, (1.0 - 0.33) * median_intensity)) \nupper_threshold = int(min(255, (1.0 + 0.33) * median_intensity))\n\nimage_canny = cv2.Canny(img_flower, lower_threshold, upper_threshold)\nplt.imshow(image_canny, cmap=\"gray\"), plt.axis(\"off\") \nplt.show()\n","25ae9931":"image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) \nimage_gray = np.float32(image_gray)\n\nblock_size = 2 \naperture = 29 \nfree_parameter = 0.04\n\n\ndetector_responses = cv2.cornerHarris(image_gray,block_size,  aperture, free_parameter)\n\ndetector_responses = cv2.dilate(detector_responses, None)\nthreshold = 0.02 \nimage[detector_responses > threshold * detector_responses.max()] = [255,255,255]\n\nimage_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\nplt.imshow(image_gray, cmap=\"gray\"), plt.axis(\"off\") \nplt.show()","7b6ec45a":"image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\ncorners_to_detect = 10 \nminimum_quality_score = 0.05 \nminimum_distance = 25\ncorners = cv2.goodFeaturesToTrack(image_gray, corners_to_detect,  minimum_quality_score, minimum_distance)\n\ncorners = np.float32(corners)\n\nfor corner in corners:   \n    x, y = corner[0]    \n    cv2.circle(image, (x,y), 10, (255,255,255), -1)\n   \n\n\n","b72b4077":"image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nplt.imshow(image_rgb, cmap='gray'), plt.axis(\"off\") \nplt.show()\n","eec8dff7":"image_10X10=cv2.resize(image_grey,(10,10))\nimage_10X10.flatten()","cef96377":"plt.imshow(image_10X10, cmap=\"gray\"), plt.axis(\"off\") \nplt.show()\n","7d9243d3":"image_color=cv2.imread('..\/input\/natural-images\/data\/natural_images\/cat\/cat_0353.jpg',cv2.IMREAD_COLOR)","0f052450":"image_color_10X10=cv2.resize(image_color,(10,10))\nimage_color_10X10.flatten().shape","0a6bf744":"Convert image data to one-dimensional vector ","e18a3cb2":"If the image is in color, instead of each pixel being represented by one value, it is represented by multiple values (most often three) representing the channels (red, green, blue, etc.) that blend to make the final color of that pixel. For this reason, if our 10 \u00d7 10 image is in color, we will have 300 feature values for each observation","a9ab92e4":"Images are presented as a grid of pixels. If an image is in grayscale, each pixel is presented by one value (i.e., pixel intensity: 1 if white, 0 if black). ","703bab7b":"DETECTING CORNERS","02484f8c":"CREATING FEATURES OG MACHINE LEARNING","c65c73c4":"* max_output_value===> the maximum intensity of the output pixel intensities\n* cv2.ADAPTIVE_THRESH_GAUSSIAN_C ===> pixel\u2019s threshold to be a weighted sum of the neighboring pixel intensities\n* The last two parameters are the block size (the size of the neighborhood used to determine a pixel\u2019s threshold) and a constant subtracted from the calculated threshold (used to manually fine-tune the threshold). \n* THRESH_BIANRY==>A binary threshold is a simple \"either or\" threshold, where the pixels are either 255 or 0. In many cases, this would be white or black, but we have left our image colored for now, so it may be colored still. The first parameter here is the image. The next parameter is the threshold, we are choosing 10. The next is the maximum value, which we're choosing as 255. Next and finally we have the type of threshold, which we've chosen as THRESH_BINARY. Normally, a threshold of 10 would be somewhat poor of a choice. We are choosing 10, because this is a low-light picture, so we choose a low number. Normally something about 125-150 would probably work best.","c374db18":"Given an image, you want to output a simplified version.\n\n\n*Thresholding is the process of setting pixels with intensity greater than some value to be white and less than the value to be black. A more advanced technique is adaptive thresholding, where the threshold value for a pixel is determined by the pixel intensities of its neighbors. This can be helpful when lighting conditions change over different regions in an image:\n*\n","a6f0fade":"Find edges of an image"}}