{"cell_type":{"9dbb488e":"code","88a05736":"code","c3f3db3b":"code","13d06f11":"code","040dbdeb":"code","193ea715":"code","9f6a5bbd":"code","cc0dd23d":"code","564a2084":"code","8989aa29":"code","d6589b2e":"markdown","4118a4cc":"markdown","56123ff4":"markdown","95c4c983":"markdown","4aafcf20":"markdown","16ea8242":"markdown","e73361d6":"markdown","6077d1eb":"markdown"},"source":{"9dbb488e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt, rcParams, rc\nimport seaborn as sns\n\n#For code reproducibility and stability\nnp.random.seed(42)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nplt.style.use('ggplot')\n# Any results you write to the current directory are saved as output.","88a05736":"#load and import data\ndf=pd.read_csv('..\/input\/housetrain.csv')","c3f3db3b":"#show the information of all the columns\ndf.info(verbose=True)","13d06f11":"#print data shape\nprint(\"The Dimension of this data is: {}\".format(df.shape))","040dbdeb":"#Now let's look at the data and print the first 5 columns\ndf.head()","193ea715":"#plot a scatter plot for the data\nplt.figure(figsize=(20,10))\nplt.scatter(df.YearBuilt, df.SalePrice)\nplt.xlabel(\"Year Built\", fontsize=13)\nplt.ylabel(\"Sale Price\", fontsize=13)\nplt.show()","9f6a5bbd":"plt.figure(figsize=(20,10))\nplt.scatter(df.GrLivArea, df.SalePrice)\nplt.xlabel('GrLivArea', fontsize=13)\nplt.ylabel('Sale price', fontsize=13)\nplt.show()","cc0dd23d":"#Remove outliers\ndf=df.drop(df[(df['GrLivArea'] > 4000) & (df['SalePrice'] < 300000)].index)\n\n#Plot it again for validation\nplt.figure(figsize=(20,10))\nplt.scatter(df['GrLivArea'], df['SalePrice'])\nplt.ylabel('SalePrice', fontsize=13)\nplt.xlabel('GrLivArea', fontsize=13)\nplt.show()","564a2084":"#seaborn to plot histogram\nsns.distplot(df['SalePrice'])\nprint('Skewness is: %f' % df['SalePrice'].skew())\nprint('Kurtosis is: %f' % df['SalePrice'].kurt())","8989aa29":"corrolation_map=df.corr()\nf, ax=plt.subplots(figsize=(20,10))\nsns.heatmap(corrolation_map, vmax=1, square=True)\n","d6589b2e":"Plot the Histogram of the normal distribution and get **Skewness** and **Kurtosis** values of the Sale\n* **Skewness:** Measure of a dataset\u2019s symmetry \u2013 or lack of symmetry\n* **Kurtosis:**  Measure weight of the tails relative to the rest of the distribution","4118a4cc":"**Visualize some data for more insight**","56123ff4":"Corrolation with heatmap style","95c4c983":"**Read data and get some basic statistics**","4aafcf20":"In this distribution, we can conclude that we have a fairly large positive skew with the left tail distribution being larger than the right tail. Also, this distribution shows a **Leptokurtic** distribution, as the Kurtosis is above zero, where there are more weight on the tails.","16ea8242":"Now let's plot another scatter the house price with GrLivArea","e73361d6":"It's obvious that the 2 dots on the very right are outliers and far from the original data, to ensure that these data doesn't harm the model later, let's cut those ones.","6077d1eb":"Let's see how the house price increased by the years"}}