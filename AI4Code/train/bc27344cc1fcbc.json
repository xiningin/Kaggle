{"cell_type":{"f879e82d":"code","fbf6496f":"code","046f18c5":"code","5a5bf6d6":"code","b182ad03":"code","d0794313":"markdown","d9361f55":"markdown","aa5064bc":"markdown","9f9ef86f":"markdown","782d6083":"markdown","a18a2886":"markdown"},"source":{"f879e82d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker\nimport datetime\nimport numpy as np\nfrom matplotlib.font_manager import FontProperties\n\ncategory = {0:'Film & Animation', 1:\"Autos & Vehicles\", 2:\"Music\", 3:\"Pets & Animals\", 4:\"Sports\",\n           5:\"Short Movies\", 6:\"Travel & Events\", 7:\"Gaming\", 8:\"Videoblogging\", 9:\"People & Blogs\",\n           10:\"Comedy\", 11: \"Entertainment\",12: \"News & Politics\",13: \"Howto & Style\",14: \"Education\",\n            15: \"Science & Technology\",16: \"Movies\",17: \"Anime\/Animation\",18: \"Action\/Adventure\",\n            19: \"Classics\",20: \"Comedy\",21: \"Documentary\",22: \"Drama\",23: \"Family\",24: \"Foreign\",\n            25: \"Horror\",26: \"Sci-Fi\/Fantasy\",27:\"Thriller\",28:\"Shorts\", 29:\"Shows\",30: \"Trailers\"}\n\ndrop_column = ['video_id','title', 'channel_title','publish_time', 'tags', 'comment_count',\n               'thumbnail_link', 'comments_disabled', 'ratings_disabled',\n               'video_error_or_removed', 'description', 'likes', 'dislikes']","fbf6496f":"def filtering(address = None):\n    will_drop = []\n    df = pd.read_csv(address, encoding=\"ISO-8859-1\")\n    df['trending_date'] = '20' + (df['trending_date'].str.replace('.', '-'))\n    df['trending_date'] = (df['trending_date'].apply(lambda x: datetime.datetime.strptime(x, \"%Y-%d-%m\").date())).astype(str)\n    df['category_id'] = df['category_id'].map(category)\n    for column in df.columns.tolist():\n        if column in drop_column:\n            will_drop.append(column)\n    df = df.drop(will_drop, axis=1)\n    df_final = df.groupby(['trending_date', 'category_id'], as_index=False).sum()\n    df_final['trending_date'] = df_final['trending_date'].apply(lambda x: x[:-3])\n    df_final = df_final[(df_final['trending_date'] != '2017-11') & (df_final['trending_date'] !='2017-12')]\n    df_final = df_final.groupby(['trending_date', 'category_id']).sum()\n    return df_final","046f18c5":"def make_graph(df, title=None ):\n    fontP = FontProperties()\n    pvt = df.pivot_table(index='trending_date', columns='category_id', values='views')\n    plt.style.use('fivethirtyeight')\n    bar = pvt.plot(figsize=(15,8), fontsize=22, cmap=\"Paired\" ,ylim=(0, df['views'].max()*1.05), kind='bar')\n    bar.yaxis.set_major_formatter(matplotlib.ticker.FormatStrFormatter(\"%.1f\"))\n    bar.LineWidth = 10\n    plt.legend(fontsize=20, title='Description of lines', bbox_to_anchor=(1.05, 1), loc='upper left', prop=fontP)\n    plt.title(title, loc='center',fontdict={'fontsize': 40})\n    plt.xlabel('Months', fontdict={'fontsize': 25})\n    plt.ylabel('Views', fontdict={'fontsize': 25})\n    plt.xticks(rotation=45)\n    return bar","5a5bf6d6":"df_US = filtering(address = \"..\/input\/youtube-new\/USvideos.csv\")\ndf_CA = filtering(address = \"..\/input\/youtube-new\/CAvideos.csv\")\ndf_DE = filtering(address = \"..\/input\/youtube-new\/DEvideos.csv\")\ndf_FR = filtering(address = \"..\/input\/youtube-new\/FRvideos.csv\")\ndf_GB = filtering(address = \"..\/input\/youtube-new\/GBvideos.csv\")\ndf_IN = filtering(address = \"..\/input\/youtube-new\/INvideos.csv\")\ndf_JP = filtering(address = \"..\/input\/youtube-new\/JPvideos.csv\")\ndf_KR = filtering(address = \"..\/input\/youtube-new\/KRvideos.csv\")\ndf_MX = filtering(address = \"..\/input\/youtube-new\/MXvideos.csv\")                     \ndf_RU = filtering(address = \"..\/input\/youtube-new\/RUvideos.csv\")","b182ad03":"df_US_graph = make_graph(df_US, title=\"Trend of US\")\ndf_CA_graph = make_graph(df_CA, title=\"Trend of CA\")\ndf_DE_graph = make_graph(df_DE, title=\"Trend of DE\")\ndf_FR_graph = make_graph(df_FR, title=\"Trend of FR\")\ndf_GB_graph = make_graph(df_GB, title=\"Trend of GB\")\ndf_IN_graph = make_graph(df_IN, title=\"Trend of IN\")\ndf_JP_graph = make_graph(df_JP, title=\"Trend of JP\")\ndf_KR_graph = make_graph(df_KR, title=\"Trend of KR\")\ndf_MX_graph = make_graph(df_MX, title=\"Trend of MX\")\ndf_RU_graph = make_graph(df_RU, title=\"Trend of RU\")","d0794313":"# **Data Cleaning**\n1. Use read_csv to get data\n2. Organize df['trending_date'] for future usage\n3. Drop useless columns by using drop_column\n4. Apply groupby for combining data to each month","d9361f55":"***Apply filtering function***","aa5064bc":"***Apply make_graphy function to make graph***","9f9ef86f":"# **Visualization**\n\n1. Use FontProperties() to store and manipulate font properties\n2. Manipulate graph for easy to understand","782d6083":"# ****Find Most Popular Genre****\n\nThis notebook is checking which genre is popular for each country. Reason why I pick this topic is that each country has different culture and environment. Therefore, I thought these conditions will affect people's intrest at youtude videos. I would say some part of my thought is right and some are not. This is my first time to make project(?), so if there is any comment that you recommend, please let me know!","a18a2886":"***Basic libraries and List & Dict***"}}