{"cell_type":{"63ece886":"code","00070005":"code","7ea390b0":"code","48559107":"code","09ea7254":"code","5a083ec9":"markdown"},"source":{"63ece886":"import itertools\n\nnum_list = [5,1,1,5,]\nind = list(range(1,len(num_list)+1))","00070005":"# Generate a list of index numbers\nind = list(range(1,len(num_list)+1))","7ea390b0":"# Create a list of all combinations of sizes between 2 and N\/2 (round up for odd N). \n#Smallest combination size is 2 numbers. Largest combination size is N\/2 numbers.\n\ncombo = [j for i in range(2, int(len(num_list)\/2)+2) for j in itertools.combinations(ind,i)]","48559107":"# Create list of all the combinations that meet the addition criteria\nadd_ind = [x for x in combo if all(y != x[x.index(y)-1]+1 for y in x)]","09ea7254":"# Add all numbers to corresponding indexes from add_ind and find the largest value.\ntotal = []\nfor a in add_ind:\n    sum = 0\n    for b in a:\n        sum = sum + num_list[b-1]\n    total.append(sum)\nmax(total)","5a083ec9":"# Daily Coding Problem (Asked by Airbnb)\n\nGiven a list of integers, write a function that returns the largest sum of non-adjacent numbers. Numbers can be 0 or negative.\n\nFor example, [2, 4, 6, 2, 5] should return 13, since we pick 2, 6, and 5. [5, 1, 1, 5] should return 10, since we pick 5 and 5."}}