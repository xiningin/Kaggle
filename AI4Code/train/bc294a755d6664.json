{"cell_type":{"4125752e":"code","55879680":"code","cf83b5b0":"code","e9113759":"code","e0eea03b":"code","237755a1":"code","af734b48":"code","700822c4":"code","0fa53c31":"code","e4a550fa":"code","656a2bdd":"code","99e426f5":"code","18539314":"code","f52dc128":"code","e9dee9fc":"code","3bdab44c":"code","3d9f976f":"code","30aa4fac":"code","b3414e08":"code","03473491":"code","1385c839":"code","3fc1406b":"code","941f7c71":"code","55cd8b5a":"code","f5298587":"code","46d27d62":"code","58e572b7":"code","6aad0155":"code","0427a607":"code","17a4dd16":"code","c0a7df2a":"code","58e60965":"code","9e602a6b":"code","69ddb825":"code","a5dab7ab":"code","9fda50bb":"code","e585e1af":"markdown","6054069a":"markdown","4c17b175":"markdown","1fb7d233":"markdown","26300423":"markdown","89f46aac":"markdown","f6744d8a":"markdown","243962e7":"markdown","6555d51d":"markdown","9f3e2c6f":"markdown","fd7c5e4e":"markdown","a162d0db":"markdown","daaf4dbd":"markdown","374be6f3":"markdown","159abef4":"markdown","64c27ddc":"markdown","61aa5766":"markdown","156c36c6":"markdown","bd8ed790":"markdown","786c4679":"markdown","3e5336ec":"markdown","2daec8f4":"markdown","9a769bbf":"markdown","68eeb3a9":"markdown","21b5f220":"markdown","ff23c5cb":"markdown","dc69c077":"markdown","290701dc":"markdown","7ab66930":"markdown","877ba178":"markdown","57ad68f1":"markdown"},"source":{"4125752e":"# import libraries\nfrom datetime import datetime\nimport lxml\nfrom lxml import html\nimport requests\nimport numpy as np\nimport pandas as pd","55879680":"# input a stock symbol\nsymbol = 'GOOGL'","cf83b5b0":"# Yahoo Finance links\nurl_bs = 'https:\/\/finance.yahoo.com\/quote\/' + symbol + '\/balance-sheet?p=' + symbol\nurl_is = 'https:\/\/finance.yahoo.com\/quote\/' + symbol + '\/financials?p=' + symbol\nurl_cf = 'https:\/\/finance.yahoo.com\/quote\/' + symbol + '\/cash-flow?p='+ symbol","e9113759":"# Set up the request headers that we're going to use, to simulate a request by the Chrome browser. \n# Simulating a request from a browser is generally good practice when building a scraper\nheaders = {\n    'Accept': 'text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/webp,image\/apng,*\/*;q=0.8,application\/signed-exchange;v=b3',\n    'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Cache-Control': 'max-age=0',\n    'Pragma': 'no-cache',\n    'Referrer': 'https:\/\/google.com',\n    'User-Agent': 'Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/77.0.3865.120 Safari\/537.36'\n}","e0eea03b":"def get_table(url):\n    # Fetch the page that we're going to parse, using the request headers defined above\n    page = requests.get(url, headers)\n\n    # Parse the page with LXML, so that we can start doing some XPATH queries\n    # to extract the data that we want\n    tree = html.fromstring(page.content)\n\n    # Smoke test that we fetched the page by fetching and displaying the H1 element\n    tree.xpath(\"\/\/h1\/text()\")\n    table_rows = tree.xpath(\"\/\/div[contains(@class, 'D(tbr)')]\")\n\n    # Ensure that some table rows are found; if none are found, then it's possible\n    # that Yahoo Finance has changed their page layout, or have detected\n    # that you're scraping the page.\n    assert len(table_rows) > 0\n\n    parsed_rows = []\n\n    for table_row in table_rows:\n        parsed_row = []\n        el = table_row.xpath(\".\/div\")\n\n        none_count = 0\n\n        for rs in el:\n            try:\n                (text,) = rs.xpath('.\/\/span\/text()[1]')\n                parsed_row.append(text)\n            except ValueError:\n                parsed_row.append(np.NaN)\n                none_count += 1\n\n        if (none_count < 4):\n            parsed_rows.append(parsed_row)\n\n    df = pd.DataFrame(parsed_rows)\n    df_org = df\n    \n    df = pd.DataFrame(parsed_rows)\n    df = df.set_index(0) # Set the index to the first column: 'Period Ending'.\n    df = df.transpose() # Transpose the DataFrame, so that our header contains the account names\n\n    # Rename the \"Breakdown\" column to \"Date\"\n    cols = list(df.columns)\n    cols[0] = 'Date'\n    df = df.set_axis(cols, axis='columns', inplace=False)\n    df_rot = df\n    return df_org, df_rot","237755a1":"# get Balance Sheet \nBS_orginal, BS_transpose = get_table(url_bs)\n\n# get Income Statement \nIS_orginal, IS_transpose = get_table(url_is)\n\n# get Cash Flow\nCF_orginal, CF_transpose = get_table(url_cf)","af734b48":"# Balance Sheet original table\nBS_orginal","700822c4":"# Balance Sheet transpose table\nBS_transpose","0fa53c31":"BS_analysis = pd.DataFrame(BS_transpose['Date']) # copy columns of dataframe\nBS_analysis","e4a550fa":"current_assets = BS_transpose['Total Current Assets'].str.replace(',', '').astype(int)\ncurrent_liabilities = BS_transpose['Total Current Liabilities'].str.replace(',', '').astype(int)\nworking_capital = current_assets - current_liabilities\nBS_analysis['Working Capital'] = working_capital # copy columns of dataframe\nBS_analysis","656a2bdd":"current_assets = BS_transpose['Total Current Assets'].str.replace(',', '').astype(int)\ncurrent_liabilities = BS_transpose['Total Current Liabilities'].str.replace(',', '').astype(int)\nworking_capital = current_assets - current_liabilities\ntotal_sales = IS_transpose['Total Revenue'].str.replace(',', '').astype(int)\nworking_capital_per_dollar_of_sales = working_capital \/ total_sales\nBS_analysis['Working Capital per Dollar of Sales'] = working_capital # copy columns of dataframe\nBS_analysis","99e426f5":"current_ratio = current_assets \/ current_liabilities\nBS_analysis['Current Ratio'] = current_ratio\nBS_analysis","18539314":"inventory = BS_transpose['Inventory'].str.replace(',', '').astype(int)\nquick_current_ratio = (current_assets - inventory) \/ current_liabilities\nBS_analysis['Quick Current Ratio'] = quick_current_ratio\nBS_analysis","f52dc128":"total_liabilities = BS_transpose['Total Liabilities'].str.replace(',', '').astype(int)\nshareholders_equity = BS_transpose['Total stockholders\\' equity'].str.replace(',', '').astype(int)\ndebt2equity_ratio = total_liabilities \/ shareholders_equity\nBS_analysis['Debt to Equity Ratio'] = debt2equity_ratio\nBS_analysis","e9dee9fc":"net_credit_sales = IS_transpose['Net Income'].str.replace(',', '').astype(int)\naverage_net_receivables_for_the_period = BS_transpose['Net Receivables'].str.replace(',', '').astype(int)\nreceivable_turnover = net_credit_sales \/ average_net_receivables_for_the_period\nBS_analysis['Receivable Turnover'] = receivable_turnover\nBS_analysis","3bdab44c":"number_of_days_in_period = 365\naverage_age_of_receivables = number_of_days_in_period \/ receivable_turnover\nBS_analysis['Average Age of Receivables'] = average_age_of_receivables\nBS_analysis","3d9f976f":"cost_of_goods_sold = IS_transpose['Cost of Revenue'].str.replace(',', '').astype(int)\naverage_inventory_for_the_period = inventory\ninventory_turnover = cost_of_goods_sold \/ average_inventory_for_the_period\nBS_analysis['Inventory Turnover'] = inventory_turnover\nBS_analysis","30aa4fac":"number_of_days_for_inventory_to_turn = number_of_days_in_period \/ inventory_turnover\nBS_analysis['Number of Days for Inventory to Turn'] = number_of_days_for_inventory_to_turn\nBS_analysis","b3414e08":"# Income Statement original table\nIS_orginal","03473491":"# Income Statement transpose table\nIS_transpose","1385c839":"IS_analysis = pd.DataFrame(IS_transpose['Date']) # copy columns of dataframe\nIS_analysis","3fc1406b":"revenue = IS_transpose['Total Revenue'].str.replace(',', '').astype(int)\ncost_of_goods_sold = IS_transpose['Cost of Revenue'].str.replace(',', '').astype(int)\ngross_profit_margin = (revenue - cost_of_goods_sold) \/ revenue\nIS_analysis['Gross Profit Margin'] = gross_profit_margin * 100\nIS_analysis","941f7c71":"RD_expense = IS_transpose['Research Development'].str.replace(',', '').astype(int)\nRD_to_sales = RD_expense \/ revenue\nIS_analysis['RD to sales'] = RD_to_sales\nIS_analysis","55cd8b5a":"operating_income = IS_transpose['Operating Income or Loss'].str.replace(',', '').astype(int)\noperating_profit_margin = operating_income \/ revenue\nIS_analysis['Operating Profit Margin'] = RD_to_sales\nIS_analysis","f5298587":"interest_expense = IS_transpose['Interest Expense'].str.replace(',', '').astype(int)\nearnings_before_interest_and_taxes = IS_transpose['Income Before Tax'].str.replace(',', '').astype(int)\ninterest_coverage_ratio = earnings_before_interest_and_taxes \/ interest_expense\nIS_analysis['Interest Coverage Ratio'] = interest_coverage_ratio\nIS_analysis","46d27d62":"net_income = IS_transpose['Net Income'].str.replace(',', '').astype(int)\nnet_profit_margin = net_income \/ revenue\nIS_analysis['Net Profit Margin'] = net_profit_margin\nIS_analysis","58e572b7":"net_profit = IS_transpose['Net Income available to common shareholders'].str.replace(',', '').astype(int)\naverage_shareholde_equity_for_the_period = BS_transpose['Total stockholders\\' equity'].str.replace(',', '').astype(int)\nreturn_on_equity = net_profit \/ average_shareholde_equity_for_the_period\nIS_analysis['Return on Equity'] = return_on_equity\nIS_analysis","6aad0155":"average_assets_for_the_period = BS_transpose['Total Assets'].str.replace(',', '').astype(int)\nassets_turnover = revenue \/ average_assets_for_the_period\nIS_analysis['Asset Turnover'] = assets_turnover\nIS_analysis","0427a607":"return_on_assets = net_profit_margin \/ assets_turnover\nIS_analysis['Return on Assets'] = return_on_assets\nIS_analysis","17a4dd16":"# Cash Flow original table\nCF_orginal","c0a7df2a":"# Cash Flow transpose table\nCF_transpose","58e60965":"CF_analysis = pd.DataFrame(CF_transpose['Date']) # copy columns of dataframe\nCF_analysis","9e602a6b":"net_cash_provided_from_operating_activites = CF_transpose['Net cash provided by operating activites'].str.replace(',', '').astype(int)\naverage_current_liabilities = BS_transpose['Total Current Liabilities'].str.replace(',', '').astype(int)\ncurrent_liability_coverage_ratio = net_cash_provided_from_operating_activites \/ average_current_liabilities\nCF_analysis['Current Liability Coverage Ratio'] = current_liability_coverage_ratio\nCF_analysis","69ddb825":"share_price = 1428.96\noperating_cash_flow = CF_transpose['Operating Cash Flow'].str.replace(',', '').astype(int)\ncommon_stock = BS_transpose['Common Stock'].str.replace(',', '').astype(int)\noperating_cash_flow_per_share = operating_cash_flow \/ common_stock\nprice_to_cash_flow_ratio = share_price \/  operating_cash_flow_per_share\nCF_analysis['Price to Cash Flow Ratio'] = price_to_cash_flow_ratio\nCF_analysis","a5dab7ab":"cash_flow_margin_ratio = operating_cash_flow \/ net_sales\nCF_analysis['Cash Flow Margin Ratio'] = cash_flow_margin_ratio\nCF_analysis","9fda50bb":"cash_flow_coverage_ratio = cash_flow_from_operations \/ total_debt\nCF_analysis['Cash Flow Margin Ratio'] = cash_flow_coverage_ratio\nCF_analysis","e585e1af":"**Average Age of Receivables = Number of days in period \u00f7 Receivable Turnover**","6054069a":"## Part 2. Financial Statement Analysis","4c17b175":"### get financial statments in tables (DataFrame)","1fb7d233":"### Balance Sheet Analysis","26300423":"**Receivable Turnover = Net Credit Sales \u00f7 Average Net Receivables for the Period** <br \/>\n*Net Credit Sales is from Income Statement*","89f46aac":"# Financial Statement Analysis","f6744d8a":"**Net profit margin = net income (after taxes) \u00f7 revenue**","243962e7":"**Current Ratio = Current Assets \u00f7 Current Liabilities**","6555d51d":"**Cash Flow Coverage Ratio = Cash Flow from Operations \u00f7 Total Debt**","9f3e2c6f":"**Current Liability Coverage Ratio = Net Cash from Operating Activities \u00f7 Average Current Liabilities**","fd7c5e4e":"**Gross Profit Margin = (Revenue - Cost of Goods sold) \u00f7 Revenue** <br \/>","a162d0db":"**Working Capital Per Dollar of Sales = Working Capital \u00f7 Total Sales** <br \/>\n*Total Sales is from Income Statement*","daaf4dbd":"**Cash Flow**","374be6f3":"**Number of Days for Inventory to Turn = Number of days in Period \u00f7 Inventory Turnover**","159abef4":"**Return on equity (ROE) = net profit \u00f7 average shareholder equity for the period**","64c27ddc":"**Cash Flow Margin Ratio = Cash Flow from Operating Cash Flows \u00f7 Net Sales** ","61aa5766":"**working capital = current assets - current liabilities**","156c36c6":"**Income Statement**","bd8ed790":"**Operating Profit Margin = Operating Income \u00f7 revenue**","786c4679":"## Part I. Scrape Yahoo Finance","3e5336ec":"**Quick \/ Acid Test \/ Current Ratio = Current Assets minus inventory (called \"Quick Assets) \u00f7 Current Liabilities**","2daec8f4":"### Cash Flow Analysis","9a769bbf":"**Interest coverage ratio = earnings before interest and taxes (EBIT) \u00f7 interest expense**","68eeb3a9":"**Return on assets = net income \u00f7 total average assets for the period** <br \/>\n**Return on assets = net profit margin x assets turnover** <br \/>","21b5f220":"### Income statement Analysis ","ff23c5cb":"**Balance Sheet**","dc69c077":"**Inventory Turnover = Cost of Goods Sold \u00f7 Average Inventory for the Period** <br \/>\n*Cost of Goods Sold is from Income Statement*","290701dc":"**Asset Turnover = Revenue \u00f7 Average Assets for the period**","7ab66930":"**debt-to-equity ratio = total liabilities \u00f7 shareholders' equity**","877ba178":"**Price to Cash Flow Ratio = Share Price \u00f7 Operating Cash Flow per Share**","57ad68f1":"**Research and development (R&D) to sales = R&D expense \u00f7 Revenue**"}}