{"cell_type":{"f793d198":"code","4630c4ea":"code","b84adcde":"code","ef4bb10f":"code","e228b5ba":"code","ae105d0c":"code","0d80ce0e":"code","1f5d169e":"code","abdac6ab":"code","0ed8972e":"code","65feb9d0":"code","2fd52899":"code","bcbfe6ac":"code","cca93da2":"code","db4eb2ad":"code","b9d42656":"code","32a15cdf":"code","0ecb389c":"code","a330ce42":"code","707b384c":"code","7c38b73c":"code","01df3a1c":"code","eba3fc3c":"code","a5d850e4":"code","77b824d7":"code","27972468":"code","e09e103a":"code","e7be7396":"code","8657bff9":"code","99777d16":"code","7c961411":"code","c3b8dc12":"code","1260c7e4":"code","3bb76734":"code","1a20daae":"code","5d73a2ec":"code","eff01d3f":"code","5519fe88":"code","740d6a00":"code","1a626c48":"markdown","2232394e":"markdown","e252ea30":"markdown","53a81223":"markdown","ebaea140":"markdown","ffe624ec":"markdown","9f882159":"markdown","798c759d":"markdown","5a10da00":"markdown","c8c00201":"markdown","9d49734d":"markdown","0153980e":"markdown","b7efb813":"markdown","43fc6ae4":"markdown","b6055798":"markdown","bb088439":"markdown","ad49b75a":"markdown","3e53ab4f":"markdown","ca7d14ed":"markdown","f323d7a6":"markdown","21dfdbbe":"markdown","a6e80613":"markdown","f41f8587":"markdown","538c5f88":"markdown","aa764f6e":"markdown","957f43b6":"markdown","9c98fb67":"markdown","f16b4be3":"markdown","a0ee9b8f":"markdown","019982f2":"markdown","29b904aa":"markdown","11bdd2bb":"markdown","823e8a5f":"markdown","d00ec18e":"markdown","8b6ea575":"markdown","27503538":"markdown","9190280e":"markdown","eaf9ad57":"markdown","b7ac6fa5":"markdown","161020ef":"markdown","32f133da":"markdown","0355da6b":"markdown","0d841f3f":"markdown","106e65a9":"markdown","ec1aa9bf":"markdown","1f376cf8":"markdown","e0fe91ca":"markdown","a05d40c4":"markdown","d617c9eb":"markdown","b9c2754d":"markdown","efd9f209":"markdown","42575ea9":"markdown","66858d22":"markdown","459fb458":"markdown","c1769c75":"markdown","a9e0bae4":"markdown","343ebaf8":"markdown","54cdc7a0":"markdown","883b69be":"markdown","0aa5e29f":"markdown","64336648":"markdown","ae81291c":"markdown","e01c7443":"markdown","e365a514":"markdown","bd211042":"markdown","b0545c48":"markdown","2efb48ad":"markdown","5dcd36d6":"markdown","d1f21407":"markdown","c984228b":"markdown","0c289d2f":"markdown","bbefd022":"markdown","f1d206d3":"markdown","a4e45304":"markdown","e00fd69f":"markdown","f1e99541":"markdown","218add1f":"markdown","0be84578":"markdown","773d1908":"markdown","97bbde28":"markdown","78f1e9b0":"markdown","69adcd99":"markdown","30298907":"markdown","c4e579e4":"markdown","442eef1b":"markdown","b2884309":"markdown","3e2995f9":"markdown","e3b37471":"markdown","05f870d0":"markdown","37c4ed60":"markdown","8c1b2d64":"markdown"},"source":{"f793d198":"import plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport numpy as np\nimport pandas as pd \n\n\niris_df = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\ntips_df = pd.read_csv(\"..\/input\/tipping\/tips.csv\")\ntitanic = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ngap_df = pd.read_csv(\"..\/input\/gapminder-datacamp-2007\/gapminder_full.csv\")\neth_data = pd.read_csv(\"..\/input\/top-50-cryptocurrency-historical-prices\/Ethereum.csv\" , \n                       index_col =[\"SNo\"] , \n                       parse_dates=['Date'])\nstart = \"2020-01-01\"\nend = \"2021-07-31\"\nmask = (eth_data['Date'] >= start) & (eth_data['Date'] <= end)\neth_data = eth_data.loc[mask]","4630c4ea":"fig = px.scatter(iris_df, \n                 x=\"SepalWidthCm\", \n                 y=\"SepalLengthCm\")\nfig.show()","b84adcde":"fig = px.scatter(data_frame = iris_df, \n                 x=\"SepalWidthCm\", \n                 y=\"SepalLengthCm\", \n                 color=\"Species\",\n                 size='PetalLengthCm', \n                 hover_data=['PetalWidthCm'])\n\nfig.show()","ef4bb10f":"fig = px.scatter(data_frame = iris_df, \n                 x=\"SepalWidthCm\", \n                 y=\"SepalLengthCm\", \n                 size = \"PetalLengthCm\",\n                 color='PetalLengthCm')\n                \nfig.show()","e228b5ba":"fig = px.scatter(data_frame=iris_df, \n                 x=\"SepalWidthCm\", \n                 y=\"SepalLengthCm\", \n                 color=\"Species\",\n                 #size = \"PetalLengthCm\",\n                 symbol = \"Species\"\n                 )\nfig.show()","ae105d0c":"fig = px.scatter(data_frame = iris_df, \n                 x=\"SepalLengthCm\", \n                 y=\"SepalWidthCm\", \n                 size = \"PetalLengthCm\",\n                 marginal_x=\"histogram\", \n                 marginal_y=\"box\",\n                )\nfig.show()","0d80ce0e":"fig = px.scatter(data_frame = iris_df, \n                 x=\"SepalLengthCm\", \n                 y=\"SepalWidthCm\", \n                 size = \"PetalLengthCm\",\n                 color = \"Species\",\n                 marginal_x=\"histogram\", \n                 marginal_y=\"box\",\n                )\nfig.show()","1f5d169e":"fig = px.scatter(data_frame = tips_df, \n                 x=\"total_bill\", \n                 y=\"tip\", \n                 size =\"size\",\n                 trendline=\"ols\")\nfig.show()","abdac6ab":"df = px.data.tips()\nfig = px.scatter(tips_df, \n                 x=\"total_bill\", \n                 y=\"tip\",  \n                 color= \"day\" , \n                 size =\"size\",\n                trendline=\"ols\")\nfig.show()","0ed8972e":"fig = px.scatter(tips_df, \n                 x=\"total_bill\", \n                 y=\"tip\", \n                 symbol=\"smoker\", \n                 color=\"sex\", \n                 trendline=\"ols\", \n                 trendline_scope=\"overall\",\n                 trendline_color_override=\"black\")\nfig.show()","65feb9d0":"N = 10000\nfig = go.Figure(data=go.Scattergl(x = np.random.randn(N),\n                                  y = np.random.randn(N),\n                                  mode='markers',\n    marker=dict(\n        color=np.random.randn(N),\n        colorscale='Viridis',\n        line_width=1\n    )\n))\n\nfig.show()","2fd52899":"px.scatter(data_frame= gap_df,\n           x= \"gdp_cap\",\n           y=\"life_exp\", animation_frame=\"year\",\n           animation_group=\"country\",\n           size=\"population\", \n           color=\"continent\", \n           hover_name=\"country\",\n           log_x=True, size_max=55, range_x=[100,100000], range_y=[25,90])","bcbfe6ac":"fig = px.line(data_frame=gap_df.query(\"country=='Canada'\"),\n              x=\"year\",\n              y=\"life_exp\",\n              color='country')\nfig.show()","cca93da2":"fig = px.line(data_frame= gap_df.query(\"continent=='Oceania'\"),\n              x=\"year\", \n              y=\"life_exp\", \n              color='country')\nfig.show()","db4eb2ad":"fig = px.line(data_frame= gap_df.query(\"continent=='Oceania'\"),\n              x=\"year\", \n              y=\"life_exp\", \n              markers =True,\n              #symbol = \"country\",\n              color='country')\nfig.show()","b9d42656":"fig = px.line(data_frame = eth_data ,\n               y = \"Price\",\n               x=\"Date\", \n               title = 'Ethereum(ETH) Daily Price')\nfig.update_traces(line_color = \"red\")\nfig.update_xaxes(\n    title_text = 'Date',\n    rangeslider_visible = True,\n    rangeselector = dict(\n        buttons = list([\n            dict(count = 1, label = '1M', step = 'month', stepmode = 'backward'),\n            dict(count = 6, label = '6M', step = 'month', stepmode = 'backward'),\n            dict(count = 1, label = 'YTD', step = 'year', stepmode = 'todate'),\n            dict(count = 1, label = '1Y', step = 'year', stepmode = 'backward'),\n            dict(step = 'all')])))\n\nfig.update_yaxes(title_text = 'Price in USD', ticksuffix = '$')\nfig.update_layout(showlegend = True,\n    title = {\n        'text': 'Ethereum(ETH) Daily Price (2020-Present)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","32a15cdf":"eth_data = eth_data[-150:]\nfig = px.line(data_frame =  eth_data,\n               y = \"Price\",\n               x=\"Date\", \n               title = 'Ethereum(ETH) Daily Price')\nfig.update_traces(line_color=\"firebrick\" , line_width = 4)\nfig.add_trace(go.Scatter(x=eth_data[\"Date\"], \n                         y=eth_data[\"High\"], \n                         name='High',\n                         line=dict(color='firebrick', width=3,dash='dot')))\nfig.add_trace(go.Scatter(x=eth_data[\"Date\"], \n                         y=eth_data[\"Low\"], \n                         name='Low',\n                         line=dict(color='firebrick', width=3,dash='dash')))\nfig.update_xaxes(\n    title_text = 'Date',\n    rangeslider_visible = True,\n    rangeselector = dict(\n        buttons = list([\n            dict(count = 1, label = '1M', step = 'month', stepmode = 'backward'),\n            dict(count = 6, label = '6M', step = 'month', stepmode = 'backward'),\n            dict(count = 1, label = 'YTD', step = 'year', stepmode = 'todate'),\n            dict(count = 1, label = '1Y', step = 'year', stepmode = 'backward'),\n            dict(step = 'all')])))\n\nfig.update_yaxes(title_text = 'Price in USD', ticksuffix = '$')\nfig.update_layout(showlegend = True,\n    title = {\n        'text': 'Ethereum(ETH) Daily Price (2020-Present)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","0ecb389c":"fig = px.pie(data_frame = tips_df, \n             values='tip', \n             names='day')\nfig.show()","a330ce42":"fig = px.pie(data_frame= gap_df.query(\"year == 2007\").query(\"continent == 'Europe'\"), \n             values='population', \n             names='country',\n             title='Population of Europe continent',\n             hover_data=['life_exp'], \n             labels={'lifeExp':'life expectancy'})\nfig.update_traces(textposition='inside', \n                  textinfo='percent+label')\nfig.show()","707b384c":"fig = px.pie(tips_df, \n             values='tip', \n             names='day',hole = 0.3)\nfig.show()","7c38b73c":"labels = ['Oxygen','Hydrogen','Carbon_Dioxide','Nitrogen']\nvalues = [4500, 2500, 1053, 500]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0, 0, 0.2, 0])])\nfig.show()","01df3a1c":"europe = gap_df.query(\"year == 2007\").query(\"continent == 'Europe'\")\nasia = gap_df.query(\"year == 2007\").query(\"continent == 'Asia'\")\nafrica = gap_df.query(\"year == 2007\").query(\"continent == 'Africa'\")\namerica = gap_df.query(\"year == 2007\").query(\"continent == 'Americas'\")\nfig = make_subplots(rows=2, \n                    cols=2,\n                    specs=[[{'type':'domain' }, {'type':'domain'} ], \n                           [{'type':'domain'} , {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=asia[\"country\"], values=asia[\"population\"], name=\"Asia\" ),1,1)\nfig.update_traces(textposition='inside')\nfig.add_trace(go.Pie(labels=europe[\"country\"], values=europe[\"population\"], name=\"Europe\"),1,2)\nfig.update_traces(textposition='inside')\nfig.add_trace(go.Pie(labels=europe[\"country\"], values=europe[\"population\"], name=\"Africa\"),2,1)\nfig.update_traces(textposition='inside')\nfig.add_trace(go.Pie(labels=america[\"country\"], values=america[\"population\"], name=\"America\"),2,2)\nfig.update_traces(textposition='inside')\nfig.show()","eba3fc3c":"fig = px.bar(data_frame= gap_df.query(\"country == 'Canada'\"),\n             x='year',\n             y='population')\nfig.show()","a5d850e4":"fig = px.bar(data_frame= gap_df.query(\"country == 'Canada'\"),\n             x='year', \n             y='population',\n             hover_data=['life_exp', 'gdp_cap'], \n             )\nfig.update_traces(marker_color ='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()\n","77b824d7":"fig = px.bar(data_frame= gap_df.query(\"country == 'Canada'\"),\n             x='year', \n             y='population',\n             hover_data=['life_exp', 'gdp_cap'], \n             color='life_exp',\n             color_continuous_scale=\"Emrld\")\nfig.show()","27972468":"fig = px.bar(data_frame= gap_df.query(\"country == 'Canada'\"),\n             y='year', \n             x='population',\n             hover_data=['life_exp', 'gdp_cap'], \n             color='life_exp',\n             color_continuous_scale=\"Emrld\" , orientation=\"h\")\nfig.show()","e09e103a":"x= [1,3,5,7,9,11,13] \ny1 = [21,11,17,32]\ny2= [17,18,29,40]\n\nfig = go.Figure(data=[\n    go.Bar(x=x, y=y1),\n    go.Bar(x=x, y=y2)\n])\nfig.update_layout(barmode='stack')\nfig.show()","e7be7396":"x= [1,3,5,7,9,11,13] \ny1 = [21,11,17,32]\ny2= [17,18,29,40]\n\nfig = go.Figure(data=[\n    go.Bar(x=x, y=y1),\n    go.Bar(x=x, y=y2)\n])\nfig.update_layout(barmode='group')\nfig.show()","8657bff9":"fig = px.bar(tips_df, \n             x=\"sex\", \n             y=\"total_bill\", \n             color=\"smoker\", \n             barmode=\"group\",\n             facet_row=\"time\", \n             facet_col=\"day\",\n             category_orders={\"day\": [\"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n                              \"time\": [\"Lunch\", \"Dinner\"]})\nfig.show()","99777d16":"fig = px.bar(data_frame=gap_df, \n             x=\"continent\", \n             y=\"population\", \n             color=\"continent\",\n             animation_frame=\"year\", \n             animation_group=\"country\", \n             range_y=[0,4000000000])\nfig.show()","7c961411":"fig = px.box(tips_df, y=\"total_bill\" )\nfig.show()","c3b8dc12":"fig = px.box(tips_df, \n             x= \"day\", \n             y=\"total_bill\" )\nfig.show()","1260c7e4":"fig = px.box(tips_df, \n             x=\"total_bill\" )\nfig.show()","3bb76734":"fig = px.box(tips_df, \n             x=\"time\", \n             y=\"total_bill\", \n             points=\"all\")\nfig.show()","1a20daae":"fig = px.box(tips_df, \n             x=\"time\", \n             y=\"total_bill\", \n             points=\"outliers\")\nfig.show()","5d73a2ec":"fig = px.strip(tips_df,\n               x='day', \n               y='tip')\nfig.show()","eff01d3f":"fig = px.box(tips_df, \n             x=\"day\", \n             y=\"total_bill\", \n             color=\"smoker\" )\nfig.update_traces(quartilemethod=\"linear\") \nfig.show()","5519fe88":"fig = px.box(tips_df,\n             x=\"time\", \n             y=\"total_bill\", \n             color=\"smoker\",\n             notched=True, \n             hover_data=[\"day\"] # add day column to hover data\n            )\nfig.show()","740d6a00":"N = 30\nc = ['hsl('+str(h)+',50%'+',50%)' for h in np.linspace(0, 360, N)]\n\nfig = go.Figure(\n    data=[go.Box(y=3.5 * np.sin(np.pi * i\/N) + i\/N + (1.5 + 0.5 * np.cos(np.pi*i\/N)) * np.random.rand(10),marker_color=c[i]) for i in range(int(N))])\n\nfig.update_layout(\n    xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),\n    yaxis=dict(zeroline=False, gridcolor='white'),\n    paper_bgcolor='rgb(255,255,255)',\n    plot_bgcolor='rgb(255,255,255)',\n)\n\nfig.show()","1a626c48":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","2232394e":"<a id=\"3\"><\/a>\n# <center>PIE PLOTS<\/center>","e252ea30":"<a id=\"5.1\"><\/a>\n###  Basic Bar Plot","53a81223":"#### <center> Press the play \u25b6\ufe0f button to see the animation<\/center>","ebaea140":"<a id=\"5.2\"><\/a>\n###  Horizontal Bar Plot","ffe624ec":"<a id=\"4.8\"><\/a>\n### Animated Bar Plot","9f882159":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","798c759d":"<a id=\"1.6.c\"><\/a>\n#### Single Trendline with multiple traces","5a10da00":"<a id=\"5\"><\/a>\n# <center>BOX PLOTS<\/center>","c8c00201":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","9d49734d":"<a id=\"1\"><\/a>\n# <center>SCATTER PLOTS<\/center>","0153980e":"#### Basic Box Plot -1 ","b7efb813":"<a id=\"5.3.b\"><\/a>\n#### Box Plots with outlier points","43fc6ae4":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","b6055798":"<a id=\"toc\"><\/a>\n![](https:\/\/raw.githubusercontent.com\/sanskar-hasija\/kaggle\/main\/images\/plotly_animation.gif)\n## <center>Table of Contents<\/center>\n\n* [IMPORTS](#0)\n\n* [1) SCATTER PLOTS](#1)\n    * [1.1 Basic Scatter Plot](#1.1)\n    * [1.2 Scatter PLots with Variable-sized circular markers ](#1.2) \n    * [1.3 Continous Color Scatter Plots](#1.3) \n    * [1.4 Scatter Plot with markers(symbols)](#1.4) \n    * [1.5 Marginal Distribution Scatter Plots](#1.5) \n    * [1.6 Scatter Plots with Trendlines](#1.6)\n        * [1.6.a Single Linear Refression fit ](#1.6.a)\n        * [1.6.b Multiple Linear Refression fit ](#1.6.b)\n        * [1.6.c Single Trendline with multiple traces](#1.6.c)\n    * [1.7 Scatter Plot on large datasets](#1.7)\n    * [1.8 Animated Scatter Plot ](#1.8)\n    \n\n* [2) LINE PLOTS](#2)\n    * [2.1 Basic Line plot ](#2.1)\n    * [2.2 Line Plot with Column Encoding Color ](#2.2)\n    * [2.3 Line Plot with markers(symbols) ](#2.3)\n    * [2.4 Line Plot with date axes ](#2.4)\n    * [2.5 Style Line Plot](#2.5)\n\n\n* [3) PIE PLOTS](#3)\n    * [3.1 Basic Pie Plot ](#3.1)\n    * [3.2 Pie Plot with Hover Text ](#3.2)\n    * [3.3 Donut Plot ](#3.3)\n    * [3.4 Pulled- out Pie Plot](#3.4)\n    * [3.5 Pie Chart in Subplots ](#3.5)\n    \n    \n* [4) BAR PLOTS](#4)\n    * [4.1 Basic Bar Plot ](#4.1)\n    * [4.2 Bar Plot with Hover Text ](#4.2)\n    * [4.3 Bar Plot with continous Color scale ](#4.3)\n    * [4.4 Horizontal Bar Plot ](#4.4)\n    * [4.5 Stacked Bar Plot ](#4.5)\n    * [4.6 Grouped Bar Plot ](#4.6)\n    * [4.7 Facetted Bar Subplots ](#4.7)\n    * [4.8 Animated Bar Plot ](#4.8)\n    \n\n* [5) BOX PLOTS](#5)\n    * [5.1 Basic Box Plot ](#5.1)\n    * [5.2 Horinotal Box Plot ](#5.2)\n    * [5.3 Box Plot with points ](#5.3)\n        * [5.3.a Box Plot with all points ](#5.3.a)\n        * [5.3.b Box Plot with outlier points ](#5.3.b)\n        * [5.3.c Box Plot with only points ](#5.3.c)\n    * [5.4 Grouped Box Plot ](#5.4)\n    * [5.5 Styled Box Plot ](#5.5)\n    * [5.6 Rainbow Box Plot ](#5.6)\n    ","bb088439":"**Created by Sanskar Hasija**\n\n**Plotly Ultimate Guide For Beginners\ud83d\udcc8\ud83d\udcca**\n\n**25 NOVEMBER 2021**\n","ad49b75a":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","3e53ab4f":"<a id=\"4.1\"><\/a>\n### Basic Bar Plot","ca7d14ed":"<a id=\"2\"><\/a>\n# <center>LINE PLOTS<\/center>","f323d7a6":"<a id=\"1.4\"><\/a>\n### Scatter Plot with markers(symbols)","21dfdbbe":"<a id=\"1.5\"><\/a>\n### Marginal Distribution Scatter Plots","a6e80613":"<a id=\"4.5\"><\/a>\n### Stacked Bar Plot","f41f8587":"<a id=\"1.7\"><\/a>\n### Scatter Plot on large dataset","538c5f88":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","aa764f6e":"<a id=\"5.3.a\"><\/a>\n#### Box Plots with all points","957f43b6":"<a id=\"2.5\"><\/a>\n### Style Line Plot","9c98fb67":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","f16b4be3":"Different marker styles available here - https:\/\/plotly.com\/python\/marker-style\/","a0ee9b8f":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","019982f2":"<a id=\"1.1\"><\/a>\n### Basic Scatter PLot","29b904aa":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","11bdd2bb":"<a id=\"5.3.c\"><\/a>\n#### Box Plots with only points","823e8a5f":"<a id=\"5.3\"><\/a>\n###  Box Plots with Points","d00ec18e":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","8b6ea575":"<a id=\"1.6.b\"><\/a>\n#### Multiple Linear Refression fit","27503538":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","9190280e":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","eaf9ad57":"<a id=\"4.6\"><\/a>\n###  Grouped Bar Plot","b7ac6fa5":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","161020ef":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","32f133da":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","0355da6b":"<a id=\"1.3\"><\/a>\n### Continous Color Scatter Plots","0d841f3f":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","106e65a9":"<a id=\"4\"><\/a>\n# <center>BAR PLOTS<\/center>","ec1aa9bf":"<a id=\"2.1\"><\/a>\n### Basic Line Plot","1f376cf8":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","e0fe91ca":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","a05d40c4":"#### <center> Press the play \u25b6\ufe0f button to see the animation<\/center>","d617c9eb":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","b9c2754d":"<a id=\"3.5\"><\/a>\n### Pie Chart in Subplots","efd9f209":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","42575ea9":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","66858d22":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","459fb458":"# <center>PLOTLY ULTIMATE GUIDE FOR BEGINNERS\ud83d\udcc8\ud83d\udcca<\/center>\n## <center>If you find this notebook useful, support with an upvote\ud83d\udc4d<\/center>","c1769c75":"<a id=\"2.2\"><\/a>\n### Line Plot with Column Encoding Color","a9e0bae4":"<a id=\"1.2\"><\/a>\n### Scatter PLots with Variable-sized circular markers","343ebaf8":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","54cdc7a0":"<a id=\"2.3\"><\/a>\n### Line Plot with markers(symbols)","883b69be":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","0aa5e29f":"<a id=\"3.3\"><\/a>\n### Donut Plot","64336648":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","ae81291c":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","e01c7443":"<a id=\"4.3\"><\/a>\n### Bar Plot with continous Color scale","e365a514":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","bd211042":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","b0545c48":"<a id=\"5.4\"><\/a>\n###  Grouped Bar Plot","2efb48ad":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","5dcd36d6":"<a id=\"0\"><\/a>\n## <center>Imports<\/center>","d1f21407":"#### Basic Box Plot - 2 ","c984228b":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","0c289d2f":"<a id=\"5.5\"><\/a>\n###  Styled Bar Plot","bbefd022":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","f1d206d3":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","a4e45304":"<a id=\"5.6\"><\/a>\n###  Rainbow Bar Plot","e00fd69f":"<a id=\"1.6\"><\/a>\n### Scatter Plots with Trendlines","f1e99541":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","218add1f":"<a id=\"3.4\"><\/a>\n### Pulled- out Pie Plot","0be84578":"<a id=\"4.2\"><\/a>\n### Bar Plot with Hover Text","773d1908":"<a id=\"4.4\"><\/a>\n### Horizontal Bar Plot","97bbde28":"<a id=\"3.1\"><\/a>\n### Basic Pie Plot","78f1e9b0":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","69adcd99":"<a id=\"3.2\"><\/a>\n### Pie Plot with Hover Text","30298907":"<a id=\"4.7\"><\/a>\n### Facetted Bar Subplots","c4e579e4":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","442eef1b":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","b2884309":"<a id=\"2.4\"><\/a>\n### Line Plot with Date Axes ","3e2995f9":"## <center>If you find this notebook useful, support with an upvote\ud83d\udc4d<\/center>","e3b37471":"<a id=\"1.6.a\"><\/a>\n#### Single Linear Refression fit","05f870d0":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>","37c4ed60":"<a id=\"1.8\"><\/a>\n### Animated Scatter Plot","8c1b2d64":"<a href=\"#toc\" role=\"button\" aria-pressed=\"true\" >\u2b06\ufe0fBack to Table of Contents \u2b06\ufe0f<\/a>"}}