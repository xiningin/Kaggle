{"cell_type":{"0a6e91b1":"code","9070ceeb":"code","db6010a0":"code","283f4b15":"code","02200de0":"code","fa9bd894":"code","90b4bb3d":"code","bd90ac26":"code","95f67536":"code","1a9f7484":"code","d14db713":"code","367651e4":"code","be6f299d":"code","6c31105a":"code","7cc606a4":"code","2ec0eb2d":"code","d9c51664":"code","bbc98efd":"code","d52cee6c":"code","9f0d6bb2":"code","73e792d8":"code","47ad3022":"code","445dfe71":"code","9a11ac7a":"code","afe5b5f6":"code","b454b700":"code","f96a591a":"code","a23aa4ba":"code","4c66f621":"code","69db62cd":"code","842e0cf1":"code","5d9a3620":"code","23adf8c0":"code","65c0d12e":"code","6ccdd0ba":"code","96b601f6":"code","f662ef87":"code","1ce8ca84":"code","3ede7d74":"code","191e83aa":"markdown","5b1d0c83":"markdown","dc2be3c1":"markdown","d19be067":"markdown","88e2ffee":"markdown","e0559bd5":"markdown","a0ea16b9":"markdown","66c4b770":"markdown","cf6a44b2":"markdown","1d3dbb0d":"markdown","ecaa0f79":"markdown","320a1217":"markdown","965aebfa":"markdown","bd4a2e76":"markdown","ee002c5f":"markdown","eb532903":"markdown","acdccebd":"markdown"},"source":{"0a6e91b1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxATEBURExASFhUWFxUVFxcVFR4YGBUWFhkYGBUVFRcYHSggGBolHxUVITEhJSorLy4uFx8zODMtNygtLisBCgoKDg0OGhAQGy8fHyYtKy4tLS03LS0tKy0rLC0rKy0tKystLTgtNy04LS0rLS0tKys3LTctLSstLSs0LS0tLf\/AABEIAKgBLAMBIgACEQEDEQH\/xAAcAAEAAQUBAQAAAAAAAAAAAAAAAgEDBAUGBwj\/xABEEAACAQIEAgYHBQYFAgcAAAABAgADEQQFEiEGMRMiMkFRYQdSU3GBktEVcpGhsSMzNUJikxQWF4LBc6IkQ7KzwuLw\/8QAGwEBAAMBAQEBAAAAAAAAAAAAAAECAwQFBgf\/xAAlEQEAAgIBAwQCAwAAAAAAAAAAAQIDERIhMVEEFCJBEzIzgfD\/2gAMAwEAAhEDEQA\/APNTEGei\/YGW5dhaNbH06levXGpKKtpCrYHflyuLk98DzqJ0mOo4TFVteFoNh6KoDUVn1G9zuLk+UxqmU0HVjQrFmUE6WAuwHMixgaSJ2\/FeQ4UZVhMfhqZTV1Kw1FuvYjvO3WU\/jM3M+GcHh6eV0HpXxGJem1Y6j+7JAZbXsL6gL+RgedxPS6fCWCbiFsD0R6AU9YUO176A3avfmTGEwGRYrFNgVw9fD1db00qdIWVnQkciTztyMDlvR1\/FcJ\/1f\/i0670nfxF\/uU\/0M0PDGVPhc+o4Z92p19NxyYaSVYe8ETf+k\/8AiL\/cp\/oZtg\/Zx+t\/jcpKzaZRllN6VTEVnZaVMqvUALM7Xsovt3GbQcMUujuazdIqUq1RdIsKNRrCxvuwBB8J1TeIeZXFa0bhzMqJ1v8AlGmGKNVe\/SV1WwG6UU1hvibCYuK4dpjD9IlVzUWjTxDqy9XQ5sdJHeJXnBOCznhJzY5RlaVqdZzVCtSptUCablgoud+QHdMnF8PlMP03SXYLSqOmnYLVuEs3edt\/fE2hT8dpjbTiSE6F+G0\/wwqq7mp0SVSpUaSHbQEUj+a8wl4exWop0R1adfMdm9ib3tsefhK8olW2K8fTWiTEzlyTEalTo+swLAXFwo7236o98u0cgxTarUj1GKsLi4YC5Fr77RuFPx38NcJMCbHLslqO1IstqdR1QsCCRqO1xzHxmVlmT06lSuGaoFpEAaFBJu+gXB+EruCMVp+mnEms2eK4erozBV1qKhphhbrMDa1vGSoZBWPS6rKaaB7EjrAnaxvbx38pXcKzivvWmsEmJlfZNeyHoz1yAviSRcXHdtvvM2lkNTRrYj94KZUEE723G9jz5SNqRivP01iyazNrZRVBayHSNRBJF7K2nex53IFpSpl1RHRKildRA7j32PLvHhI2pOO\/hjCTBmzxuTEVjSpLUbSCSXAXkbXB7xLIyqvy0d7DmOaC7D8JRFsN4nsxRJiZ\/wBjVSf2asRpQm9huwuO+KOUV2UMKex8x427ztvIlWcN\/DDEuLL65dW63UPUuG8iNzbx23l5cprXW62DEAG4t1uUiWf4r+GKsuCSxWHNNyhO4PdIrKSytExOpSEQIkKPFCJ61xJln21hcLiMJUpmrSTo6lJmCkX039xBX4gzyUzY0MrxA3TY9XsvY9a2xt95b+FxLvvm6qZRUwbNg8UUQ1FDgh9SrvYXt37fpLGFoU8KHc1gxKlVCHnfvYeG81Jy6ux36x3vdrnY2N7\/AI+6UGU1iC2kWAud\/wCkMPjY\/kfCB6J6MOjxmCxGXVSABUSsl+QGoFgPin\/dNbxLm4xHENIqepSr0KKeFkcaiP8AcTOO+zq6m3I7DZrcwD3e8Td8D8PYXFOf8RjOhtUSmqD95Vd+Wknz77QO9wzD\/Nrm4t0J\/wDaE1uU8GVqOZtjsW9KjQp1qlYFqgu\/WYqABy5gzT4zgonOjl9CtUChFdqjNd1XSC24587CblOGsmxGKfLkr4z\/ABCBrVHcshZB1rA7bfDvgafLs3XF8SU8QgOl64C371VCoPxtebT0n\/xF\/uU\/0M5zhLLnw2e0MO9tVOuVNuRspsR7wQZ0fpP\/AIi\/3Kf6GbYP2cXrv4\/7arKczpJRq4etTZqdQq10IDK6XsRfa28zsVxIjUGQUmFV6VOgzk9Xo6ZupA9Y2H4TX5Tly1KbO5Nuko0lt61Q7k+4Azo6vB+HFUANX0\/twVIAdjRF9SbWKmb2476uLHGSY6Mevxar1qVU02tToujC461R10lv0ljE8SJ0ASnTYVTRp0GckWC0zfqgd5PjMo8LUV6c\/wDiHCJRdVQDWOlBJDg+rbeaj7JDVMMqNYYhVN2I6raiji\/vFx75EcS05Y\/39K4HOWDVnq3dqtF6V9hbVaxNu4WlyvnZOEXCjWR1dZc37NyqIByXfvl7NuHHV6xooTSpEgkupJ0i7kW525kd0tYfIKgxFClWGkVitrEE6T3+XPvj492cxkjou1eIXthguoLQVLoT1XdGJvYd0zcdxOr9KAtS1Sk1NQdI0F3DG2kC4298xsbw06pTAV+kqVKy6X2slPk2\/IW3vMVMixBZ0CrqQXK6xci2q6C\/WFt9pXVSZzV6NovEVLqqabsOiek7kr0hVrWAIFiFttfxl+nxUuvWabfvjVsD\/L0XRge\/kZjV+GwaZqJUAC0KVYhiN2cm4HgNpDOuHalJx0alkYoq7gsXZQ1iBy77SPiTOaGbh+JqK0qaCiw0tRY2ta9M3Yjvu1++YODzo0ziSupWrdkg7r1i2\/wmP9h17uAEJQEsA6k7C5sL72l1MgxBCHQLOusEsANO2532G4Eaqzm2azJwWe6FoDSWNKpUdrnt69j8ee8vvndI606N+jNEUV3GoWbUGJ5Hf8pi5PlQepVSqKg6JCxVO0SCBbf3yeOyCqj1dA1JTPO4BIADGw7yAd7Ss62jeXjuP99Nh\/mjek2hurbWvV0mylLqQL3se+Y2FzOiiFAlTSKyVkJIv1bAhvHvmPUyLELcsqgBQxJYWAPLv5nwlFyavZDo\/eEBdxzYXXUO6\/deRqFJvmn6bA8Qfs2UIbmsagJPJCwcofiJDM83FWojgMAratJA2JIJ02A8O+WFyLEatOgX06u0LWvp58ucouT1yXGjdCQ245gXIHibb7SuoVtbNMalt1zmk1Zjpq6aunVqYdUhww0+Cy9VzqmlSopUtapVKspFuuunfxmkzTCLTZVW9jTR9\/FhczFEhFvU5K\/Ge7qMLm1Lo2cg9ToAFuAWKX3HleY5zoFbFDcoym3iz67+6aISYkSzt6vJp0D56CKgCsNTFlItfdQpBv7u6QqZupGyntUm\/tjeaYSYkSzn1WTyysXVVqjMoIDEmx8Tz5SCy2JcWUly2nlMzKQlZQSshV4mZ0Fei6qoGJJ1KpI2vst1v5bAX8pvv9Nm9uf7Z+sp\/pq3tz\/bP1nL7\/C\/RfbXc6aThv352YAcrkOLsw8rkCYmMr1UsvSsQyqx32uVI\/IOw+M63\/TZvbn+2frH+mze3P8AbP1j3+Hyj213FHHVfXPMH4jkfyH4TYcH\/wARwv8A16X\/AKhOl\/02b25\/tn6y9hPR\/VpVFqpiSHRgynouTDcHcx7\/AA+U+2uyeMs6rYTiJq9FNb6KaaLHrqyC6i3ft+U63hboauKfHtlb4VtLNUr1mtuQL6E\/VrCctieFcZUxQxj4xjXUqQ\/Q8iosu3KX83yHMcUuivmNV19Xo9Kn3hSL\/GPf4fKPb3aPK8zXE8SJXTsPiOr5qqFQfjb85tfSf\/EX+5T\/AEMucJcCNQx1Ct0xOh9VtFr7Ec77c5L0l4ao2YMVpuRop7hSRyPgJ3ejzUyTM1ef6\/HaKalpMpzBEpOjXv0lGsnm1Mm6nwuCfwmanE7\/AOMqYk6zqWqqKW3p6xYWPdYzSDA1vZVPkP0lRga3sqnyH6TumKy8rleI1DbZTnSpTrU6wrP0xQllqaWul+ZPMS3WzJA+F03ZaCrfu1Nr6R7fjb4TXjBVvZVPkP0lRgq3sqnyH6SNQjd9adD\/AJq6tQdF1mauaZ1bKK\/aDDvt3TGqZ4DjKWJ0G1MUhpvz6NQNj5zVDBVvZVPkP0lRgqvsqnyH6SONSb5JdBhuKyppkozaGrk6mvda3cCb2ImRg+LFRnY03Yk7NqUNp0aArWXcDmLTmhg6vsqnyH6SQwdX2VT5D9JXjU\/Llbps\/RkZGpNZsPTobMLhqZuG91zymS\/FXW1rS36WlU3O37OnoK\/Gc8MHV9lU+U\/SSGDq+yqfKfpHGqs3yuhwHENCkHCUGAYub6xfrrYhjbcA7iRwvEYV1Og26BKBsRfqG4Zbgj4GaMYSr7Kp8p+kkMJV9lU+Q\/SU4wicmX6bHCZyyVK9Traqqsoa+6kkEEkd+0v4PPmXDtROq5LkOCLnWN9eoG\/wmqGEq+zqfKfpJLhKvs3+U\/SNQz5ZY7N2M\/XpalQ02IdFTQSNJsunrC2++4tLqcSD9mej3DUmc6tm6JSqhR3TRjCVfZv8p+kkMJV9m\/yn6SuoPyZm5GfDRp6M\/u2p8\/Wqa7\/8S+eI\/wB71WXWxdSpFwSoWxuDt7pohhans3+U\/STGFqezf5T9JGoROXMycxxfSsrWtpRE+UWvMcSQwtT2b\/KfpJjDVPZv8p+kq5rVvadzCIkxJDDVPUf5T9JMYep6j\/KfpIlnOO\/hQSayq4d\/Uf5TJjDv6jfKZWVZxX8KCXFgYd\/Ub5T9JcFB\/Ub8D9JWVZxX8IiJc6B\/Ub8DHQP6jfgZCs4r+HpOkeEaR4ScRwr4fdbQ0+UaR4ScSeFfBuUNI8I0jwk4jhHg3KGkeEaR4ScRwjwblHTFpKJMREdhG0ppk4ko1COmU0ycRs4whpEaZOIOMIaY0yctV66opZmCqouSTYADxg4wlpjSJ5rxN6XMPTBTCJ0z3tqbqoPMd7Tm8N6ZMaGu9Ciy94F1PwNzBqHt+mU0zQcIcYYbH070zpde3TbtL5+Y850UHGEbSmmTiDUIaI0iTiDjCOkSmgScQcYQ0iNAk4g4whoEaBJxBxhDQI0CTiDjCGgRoEnEHGPCGgR0Y8JOIRxgiIhYiIgJS8rNXnpq6F6PXbWNejthLHs\/HTe29rwNpeLzkRm2NVbtR0qFFywuVHU65a41Hd+r\/TMOnn+NqlUCAM1msqkEoChDXvsDdhbygd1E5vLMwxrOgq0QAwe9gRpIA0hidrXuNvKSyzHY56oFSkFTSzMStjqAW1Mb+JPW77QOiicZSxuY6nqGkx2WylbAGyalUX331i8uUs6xzhitHqh6i30G66GdVFtXXvpW57rwOvi85HEZpmNtIwxuSwJA2AIAGk3vcX5nbYywmOzMBCKRNlCEspFzZCWZQSSQ2pfdvA7SVmAz4i4tTpkWS5LEbk\/tNrcgOUj0mK9lS+c89fu9Xf3wjbYzyr055s606OFUkCoS72\/mC2Cr+J\/KehtUxXdTpcmt1zzDDT3d63PvnB+kHCGpjcIagUFBVIUG911LoYgj338INvHlyvEEXFCp8plfsnE+wqfKZ7OMMnqj4yxh9DEjQR3i57v+JbSvKXmfCmMr4LG0axR1GsKwIIDKxsR+d59MgzyfiHLFqUSoG9wR94G458txPVaV9IvzsL++0iVolciIkJIiICIiAiIgIiICIiAiIgIiICIiAiIgJp+JK9dFpmiLk1BqAFyVCsxA8LlQL+c3EpaByCZzialZdNF+i1KCujtjS5bdgLb2HwlFzvFU3IbDs5ZqpFlI0IuoUwCBv2N\/vDxnYWi0DnsJnVdqlRTQGlKZYPuA5sCLAi9jcj4TBoZ5iyWY0W0sU0jSQVOlC3MdkktvOvtFoHGJxDjD1zhygKkWIJCkkdZrC9x2beO86jKixoU2ftFFLbW6xAJ298y7SogUtGmViBS0rEQE8o9M9HEJWw2LpKxWmrqxAvbfV1rfykXnq81HFNSiMHX6ZwqGm6kn+oEfHnIkc7wzl9Sth0rOwUVAGAI6wUgEX85vcXk6MBoNiBbfe48\/OaD0fcT4avh0oCqvS0lWmQRoLhQAHUHmDOqxeJpUlL1KiooFyWawEVnojjDzHiehjGx1HL6a9spUZwNhTDi\/uG25909cBnBcMZjhswzCtXRiRRSnTQWK8nLF794JA2nXnKKVrdbssvbbk51N3+PfIrO4J6M\/VGqYf2bT1autfVr7R7WnTyvyt3S2MopWt17aVXttyRtS9\/O\/4yx1ZtSuq2BYC5sLm1zzsPPYyz9o0dv2tPc2HWG522H4ia7N8lp1FUdJoC1GqhibkOysFKknaxYG3laazCcKsqMorIQ6mmx08lsoJSx2a6H8vCEumXHUje1RDa97MNtPa\/CXw4O4375y78L6tSmrZbVdKISAvSC1+d7Egm3LeQzzh\/EMt6eKI0UyoBOnexBGoWAXcc+VoHV6o1TkW4axDM37cKpUaWUtsSahKoNWy9decyKnDlW7FcSy+qdz6uz3NjYBgPvQOjq1lVSzEADck8gPEyL4umCQXUEWvuNri4v4bXM5atwlUZGT\/EsQxbtFiLG+kkA9oX90zMy4ZFWs1XXbUw1LbtIKZQKT3WJuD5nxgbqnj6TEKtRCWBIAYG4GxI\/CZU53K+HWo1VqdLc9Y1DY3qar9UjkFBNx37TooCIiAiIgIiICIiAiIgIiICIiAiIgIiIFLzHxmNpUl1VKioPFiB+s0PG\/EwwdIBbGtUuEB5ADm58hPHcbi6tVy9Wozse9jf8AAchL1x76sMueKTqO703OvSRQQ6cOhqn1j1U+pnnPFOd4nG3NRuXZRdlX3DvPnMKJvFIhx2zWt3csQVPeCPgZOriajCzVHYeDMT+s6CrhkbmoltMBTH8spOLq2j1Wo7MjgLO6+DrNVpgFWGl1Owbw37iJ7bw5xhhsVZQdFX2b8z908mniaqBsBKjnccxy8j5GTOOJhSPUWidvo4GVnlfCnH707UsUSychU5sv3\/WHnznp9CurqHUgqwBBHIg8iJjas17u2mSt43DVcS5S+IVAj6SjMwNyOsUZUO3OzFT8JpU4axim6YjTqZS2ljyBqEgXBA7QPnadBndLEsqig4VrsSTaxGhtIN+7VpmjdczVBdna4QG2gMCaq3tzBOgnc8rSq659hYzn\/ijfTudRuXBqlTy7PXTb+mQpZXiqoxFKqzaW0AMzGzEVCzFQOyCukW8oGEzMBjrW5H8pXdrUxc3HMAP5EymGwmZqbtUuWYMestgdNMHYjsbVNh3kQL1HKceNV8QLEuVAY2QkAKw23AIPVO28xqOT5hqKGu1gg6xe4uTU1KBbrc03PKZ9WhmHR0QtS76T0hOm2skHrbbpbULDflLVfL8cVoOKt6qUmFTcWZ2amSpFrFbB\/wAoEcNk+NXtYjV1r21EC1iARYbWJU6eRtNtw\/g69KkVr1TUfVe5N+4cthtcE285ziYbHu4oMzgLoYstgg0tSI0m27fvb8xMvDYfNS46SqAt6d9IXs3Gvn\/NYN3W3gdbEosrAREQEREBERAREQEREBERAREQEREBEShgeK+kPFmpmFUX2phaY8rAE\/mTOamx4jqasZiG8atT8jb\/AImvnXXs8q87tKkSsSVFIlYgUiViAnp3onzUtTqYZiT0dmTyRtiPgf1nmE7L0UtbHMPGi35MspkjdW2CdXh67aLSsTmekpaLSsQKWi0rEClotKxAREQEREBERAREQEREBERAREQEREBERASJkprOJMWKWErVC1rU3sfMiy\/mRCJnUPCswcNWqsO+pUP4uTMZzYXlRykK3L4j9Z2PJnulTvYX8JKUiEKxKRArIO24Hj9JOW37Q+I\/\/fhAnOr9GuIVMYzubKKTXPvZAPzInKTrvRe3\/j7eNJ\/1Uyt+0tMX7w9TfN6AveoNtd+f\/l7v3d0qM1o3trF7heR5ldYHL1d5maRGkTl6PT6tbXzykKZdTrsqMANrio2lNzyuZjf5lpKCKmzKbOEu4Q72BNhubHum4q0EZSrKCpFiCNiPAzFp5NhwQRRS4vvbxhLBPFmE7mZue4UkALe5PlYE+6bxTeYS5RhwLCjTA5bKOWkLb8ABM0CBWIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAnDelnFgYRKV+s9QG39KAk\/npncmeUelrEXxVJPVpFj\/vb\/AOsvSN2Y551SXDCTGFZkZx2aZS\/nrJAH5GQm8wotlddrdrEUVH+0FjOiXn1jbRyspKyVSIiAlur3e8fSXJCqpIsBc3H6wJTf8B19GY0P6mZPmVv+QJoAZlZZieir0qvqVEb4A7\/lInstSdWh9DRIq195Kcj1iIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiIFDPEOPcV0mYViDspWmP9oF\/zJlYmuLu5fVT8Yc8Z0mdUDSy3B0yLGq1TEN8bKn\/awiJrPeHLSPjMublYiWZkREBJUyNQve1xe3O197fCIghEi23O1xfxsbXlGiIT9voPJ8WtXD0qq8nRWHxEzYicc93rV7QREQkiIgIiICIiAiIgIiIH\/9k=',width=400,height=400)","9070ceeb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nfrom plotly.subplots import make_subplots\n%matplotlib inline\nimport missingno as msno\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","db6010a0":"df = pd.read_csv('..\/input\/uncover\/UNCOVER\/esri_covid-19\/esri_covid-19\/cdcs-social-vulnerability-index-svi-2016-overall-svi-census-tract-level.csv', encoding='ISO-8859-2')\ndf.head()","283f4b15":"df.plot.area(y=['st','stcnty','e_uninsur','objectid'],alpha=0.4,figsize=(12, 6));","02200de0":"plt.clf()\ndf.groupby('st').size().plot(kind='bar')\nplt.show()","fa9bd894":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQDwwP5BdGRGIgNy2W55et26fLmDVFvab88gA2MNCPJsn3oox1K&usqp=CAU',width=400,height=400)","90b4bb3d":"#Let's visualise the evolution of results\nppe = df.groupby('st').sum()[['stcnty','objectid','e_daypop']]\n#evolution['Expiration Rate'] = (evolution['Expired'] \/ evolution['Cumulative']) * 100\n#evolution['Discharging Rate'] = (evolution['Discharged'] \/ evolution['Cumulative']) * 100\nppe.head()","bd90ac26":"plt.figure(figsize=(20,7))\nplt.plot(ppe['objectid'], label='objectid')\nplt.plot(ppe['stcnty'], label='stcnty')\nplt.plot(ppe['e_daypop'], label='e_daypop')\nplt.legend()\n#plt.grid()\nplt.title('Social Vulnerability Index ')\nplt.xticks(ppe.index,rotation=45)\nplt.xlabel('st')\nplt.ylabel('Population')\nplt.show()","95f67536":"plt.figure(figsize=(20,7))\nplt.plot(ppe['stcnty'], label='St County')\nplt.legend()\n#plt.grid()\nplt.title('Social Vulnerability Census')\nplt.xticks(ppe.index,rotation=45)\nplt.ylabel('Rate %')\nplt.show()","1a9f7484":"#This is another way of visualizing the evolution: plotting the increase evolution (difference from day to day)\ndiff_ppe = ppe.diff().iloc[1:]\nplt.figure(figsize=(20,7))\nplt.plot(diff_ppe['stcnty'], label='St County')\nplt.legend()\nplt.grid()\nplt.title('Social Vulnerability Census')\nplt.xticks(ppe.index,rotation=45)\nplt.ylabel('Rate %')\nplt.show()","d14db713":"print('Statistics Social Vulnerability ')\n\ndiff_ppe.describe()","367651e4":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df['st'], y=df['stcnty'],\n                    mode='lines+markers',marker_color='blue'))\nfig.update_layout(title_text = 'Social Vulnerability Census')\nfig.update_layout(plot_bgcolor='rgb(275, 270, 273)',width=600, height=600)\nfig.show()","be6f299d":"df_grp = df.groupby([\"st\"])[[\"stcnty\",\"objectid\",\"e_daypop\"]].sum().reset_index()\ndf_grp.head()","6c31105a":"df_grp_r = df_grp.groupby(\"st\")[[\"stcnty\",\"objectid\",\"e_daypop\"]].sum().reset_index()","7cc606a4":"df_grp_rl20 = df_grp_r.tail(20)","2ec0eb2d":"fig = px.bar(df_grp_rl20[['st', 'stcnty']].sort_values('stcnty', ascending=False), \n             y=\"stcnty\", x=\"st\", color='st', \n             log_y=True, template='ggplot2', title='Social Vulnerability Census')\nfig.show()","d9c51664":"df_grp_d = df_grp.groupby(\"st\")[[\"stcnty\",\"objectid\",\"e_daypop\"]].sum().reset_index()","bbc98efd":"df_grp_dl20 = df_grp_d.tail(20)","d52cee6c":"f, ax = plt.subplots(figsize=(23,10))\nax=sns.scatterplot(x=\"st\", y=\"stcnty\", data=df_grp_dl20,\n             color=\"black\",label = \"counties\")\nax=sns.scatterplot(x=\"st\", y=\"objectid\", data=df_grp_dl20,\n             color=\"red\",label = \"Object ID\")\nax=sns.scatterplot(x=\"st\", y=\"e_daypop\", data=df_grp_dl20,\n             color=\"blue\",label = \"Population\")\nplt.plot(df_grp_dl20.st,df_grp_dl20.stcnty,zorder=1,color=\"black\")\nplt.plot(df_grp_dl20.st,df_grp_dl20.objectid,zorder=1,color=\"red\")\nplt.plot(df_grp_dl20.st,df_grp_dl20.e_daypop,zorder=1,color=\"blue\")","9f0d6bb2":"df1 = pd.read_csv('..\/input\/uncover\/UNCOVER\/HDE_update\/inform-covid-indicators.csv', encoding='ISO-8859-2')\ndf1.head()","73e792d8":"corr = df1.corr(method='pearson')\nsns.heatmap(corr)","47ad3022":"#Let's visualise the evolution of vulnerability\nvulnerability = df1.groupby('country').sum()[['inform_risk', 'population_density', 'inform_vulnerability', 'inform_epidemic_lack_of_coping_capacity', 'people_using_at_least_basic_sanitation_services']]\nvulnerability.head()","445dfe71":"plt.figure(figsize=(20,7))\nplt.plot(vulnerability['inform_risk'], label='Risks')\nplt.plot(vulnerability['population_density'], label='Population Density')\nplt.plot(vulnerability['inform_vulnerability'], label='Inform Vulnerability')\nplt.plot(vulnerability['inform_epidemic_lack_of_coping_capacity'], label='Inform Epidemic Lack of Coping Capacity')\nplt.plot(vulnerability['people_using_at_least_basic_sanitation_services'], label='People Using at least Basic Sanitation Services')\nplt.legend()\n#plt.grid()\nplt.title('Social Vulnerabilities Indicators')\nplt.xticks(vulnerability.index,rotation=45)\nplt.xlabel('Countries')\nplt.ylabel('Vulnerabilities Indicators')\nplt.show()","9a11ac7a":"plt.figure(figsize=(20,7))\nplt.plot(vulnerability['inform_risk'], label='Respiratory Diseases')\nplt.legend()\nplt.grid()\nplt.title('')\nplt.xticks(vulnerability.index,rotation=45)\nplt.ylabel('Rate %')\nplt.show()","afe5b5f6":"import shap\nimport lightgbm as lgb\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold\nimport random","b454b700":"SEED = 99\nrandom.seed(SEED)\nnp.random.seed(SEED)","f96a591a":"dfmodel = df1.copy()\n\n# read the \"object\" columns and use labelEncoder to transform to numeric\nfor col in dfmodel.columns[dfmodel.dtypes == 'object']:\n    le = LabelEncoder()\n    dfmodel[col] = dfmodel[col].astype(str)\n    le.fit(dfmodel[col])\n    dfmodel[col] = le.transform(dfmodel[col])","a23aa4ba":"#change columns names to alphanumeric\ndfmodel.columns = [\"\".join (c if c.isalnum() else \"_\" for c in str(x)) for x in dfmodel.columns]","4c66f621":"X = dfmodel.drop(['iso3','current_health_expenditure_per_capita'], axis = 1)\ny = dfmodel['inform_risk']","69db62cd":"lgb_params = {\n                    'objective':'binary',\n                    'metric':'auc',\n                    'n_jobs':-1,\n                    'learning_rate':0.005,\n                    'num_leaves': 20,\n                    'max_depth':-1,\n                    'subsample':0.9,\n                    'n_estimators':2500,\n                    'seed': SEED,\n                    'early_stopping_rounds':100, \n                }","842e0cf1":"# choose the number of folds, and create a variable to store the auc values and the iteration values.\nK = 5\nfolds = KFold(K, shuffle = True, random_state = SEED)\nbest_scorecv= 0\nbest_iteration=0\n\n# Separate data in folds, create train and validation dataframes, train the model and cauculate the mean AUC.\nfor fold , (train_index,test_index) in enumerate(folds.split(X, y)):\n    print('Fold:',fold+1)\n          \n    X_traincv, X_testcv = X.iloc[train_index], X.iloc[test_index]\n    y_traincv, y_testcv = y.iloc[train_index], y.iloc[test_index]\n    \n    train_data = lgb.Dataset(X_traincv, y_traincv)\n    val_data   = lgb.Dataset(X_testcv, y_testcv)\n    \n    LGBM = lgb.train(lgb_params, train_data, valid_sets=[train_data,val_data], verbose_eval=250)\n    best_scorecv += LGBM.best_score['valid_1']['auc']\n    best_iteration += LGBM.best_iteration\n\nbest_scorecv \/= K\nbest_iteration \/= K\nprint('\\n Mean AUC score:', best_scorecv)\nprint('\\n Mean best iteration:', best_iteration)","5d9a3620":"lgb_params = {\n                    'objective':'binary',\n                    'metric':'auc',\n                    'n_jobs':-1,\n                    'learning_rate':0.05,\n                    'num_leaves': 20,\n                    'max_depth':-1,\n                    'subsample':0.9,\n                    'n_estimators':round(best_iteration),\n                    'seed': SEED,\n                    'early_stopping_rounds':None, \n                }\n\ntrain_data_final = lgb.Dataset(X, y)\nLGBM = lgb.train(lgb_params, train_data)","23adf8c0":"print(LGBM)","65c0d12e":"# telling wich model to use\nexplainer = shap.TreeExplainer(LGBM)\n# Calculating the Shap values of X features\nshap_values = explainer.shap_values(X)","6ccdd0ba":"shap.summary_plot(shap_values[1], X, plot_type=\"bar\")","96b601f6":"shap.summary_plot(shap_values[1], X)","f662ef87":"cat = []\nnum = []\nfor col in df1.columns:\n    if df1[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","1ce8ca84":"plt.style.use('dark_background')\nfor col in df1[num].drop(['inform_risk'],axis=1):\n    plt.figure(figsize=(8,5))\n    plt.plot(df1[col].value_counts(),color='Red')\n    plt.xlabel(col)\n    plt.ylabel('Social Vulnerability Factors ')\n    plt.tight_layout()\n    plt.show()","3ede7d74":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQ1IDyyWbqKXOX627hm1cIBSFSggg3RdhzxlQiBAQnSQvtGmkA1&usqp=CAU',width=400,height=400)","191e83aa":"Codes from Thor God of Thunder","5b1d0c83":"Coronavirus deaths at Miguel Couto Hospital (Rio de Janeiro) worry employees.\n\n\"What we saw was a compromised scenario, with a PPE problem. Employees were being forced to use an N95 only. There was a lack of training and a lack of knowledge of what was happening \u201d The complaints related to PPE reached the Regional Nursing Council (Coren) and the Union of Nurses in Rio. Two weeks ago, Coren's vice president, Ana Teresa Souza, made an inspection at the hospital.\n\nComplaints about PPE are many. Missing N95 masks, cloaks and even face shields ( face protection made of acrylic).\nhttps:\/\/translate.google.com.br\/translate?hl=en&sl=pt&u=https:\/\/oglobo.globo.com\/rio\/mortes-por-coronavirus-no-miguel-coutona-gavea-preocupam-funcionarios-24365569&prev=search","dc2be3c1":"change.org","d19be067":"#Doctors lacking PPE 'bullied' into treating Covid-19 patients \n\nDoctors in Britain are being \u201cbullied and shamed\u201d into treating patients with Covid-19 despite not having the masks, gowns and eyewear they need to protect themselves from the virus.\n\nOthers are being told to hold their breath to avoid getting infected because of persistent shortages of personal protective equipment (PPE) .\n\n\u201cLack of personal protective equipment continues to be a critical issue. It is heartbreaking to hear that some staff have been told to simply \u2018hold their breath\u2019 due to lack of masks,\u201d \"Doctors are dying. Nurses are dying. We are devastated, and can no longer stand by and watch as more dedicated colleagues lose their life,\"\n\nBased on 500 reports so far from 193 hospital trusts and GP practices, the DAUK says that:\n72% of doctors cannot get hold of an FFP3 mask when they need one. 77% report shortages of long-sleeved gowns. \n43% cannot always use a visor or goggles when they need them.\n\nThe findings also indicate that protective kit is still in short supply for doctors undertaking \u201caerosol generating procedures\u201d on Covid-19 patients, such as intubating them, where potentially dangerous droplets are expelled from their mouths.\nhttps:\/\/www.theguardian.com\/world\/2020\/apr\/06\/nhs-doctors-lacking-ppe-bullied-into-treating-covid-19-patients\n\n","88e2ffee":"#Rational use of personal protective equipment (PPE) for coronavirus disease (COVID-19)\n\nIn this context, PPE includes gloves, medical masks, goggles or a face shield, and gowns, as well as for specific procedures, respirators (i.e. N95 or FFP2 standard or equivalent) and aprons. It is intended for those involved in distributing and managing PPE, as well as public health authorities and individuals in health care and community settings, and it provides information about when PPE use is most appropriate.\n\nAdditional precautions are required by health  care workers to protect themselves and prevent transmission in the healthcare setting.  Precautions to be implemented by health care workers caring for patients with COVID-19 include using PPE appropriately; this involves selecting proper PPE and being trained in how to put on, remove, and dispose of it.\n\n#Disruptions in the global supply chain of PPE \n\nThe current global stockpile of PPE is insufficient, particularly for medical masks and respirators; the supply of gowns and goggles is soon expected to be insufficient also. Surging global demand \u2212 driven not only by the number of COVID-19 cases but also by misinformation, panic buying, and stockpiling \u2212 will result in further shortages of PPE globally. The capacity to expand PPE production is limited, and the current demand for respirators and masks cannot be met, especially if widespread inappropriate use of PPE continues. https:\/\/apps.who.int\/iris\/bitstream\/handle\/10665\/331498\/WHO-2019-nCoV-IPCPPE_use-2020.2-eng.pdf","e0559bd5":"#Thanks to rossinEndrew I can say my PPE (Personal Protective Equipment) is complete with this SHAP VALUES Visualization.","a0ea16b9":"#Ensure PPE use is rational and appropriate\n\nPPE should be used based on the risk of exposure (e.g. type of activity) and the transmission dynamics of the pathogen (e.g. contact, droplet or aerosol). The overuse of PPE will have a further impact on supply shortages.\nhttps:\/\/apps.who.int\/iris\/bitstream\/handle\/10665\/331498\/WHO-2019-nCoV-IPCPPE_use-2020.2-eng.pdf ","66c4b770":"telenganatoday.com - PPE kits for Telangana cops on COVID-19 duties","cf6a44b2":"#Thanks to rossinEndrew I can say my PPE is complete with this SHAP VALUES Visualization.\nhttps:\/\/www.kaggle.com\/endrewrossin\/fast-initial-lightgbm-model-to-detect-exam-result\/comments","1d3dbb0d":"process.st","ecaa0f79":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","320a1217":"#Recommended personal PPE during the outbreak of COVID-19 outbreak, according to the setting, personnel, and type of activity.\n\nPatient room:\n\nHealth care workers (Medical mask, Gown, Gloves,Eye protection (goggles or face shield)).Cleaners (Medical mask,Gown, Heavy duty gloves, Eye protection (if risk of splash from organic material or chemicals),Boots or closed work shoes. Visitors(Medical mask, Gown, Gloves).\n\nTriage (Maintain spatial distance of at least 1 metre. No PPE required).Laboratory (Medical mask, Gown, Gloves, Eye protection (if risk of splash). Administrative areas (No PPE required).\n\nHome: Caregiver (Gloves, Medical mask, Apron (if risk of splash)). \n\nPublic areas (e.g. schools, shopping malls, train stations): No PPE required.\n\nAmbulance or transfer vehicle: Driver: Only driving (No PPE required), Assisting with loading or unloading patient with suspected COVID-19 (Medical mask, Gowns, Gloves, Eye protection).\n\nSpecial considerations for rapid-response teams assisting with public health investigations: \n\nCommunity - Anywhere: Maintain spatial distance of at least 1 metre. No PPE required.\nhttps:\/\/apps.who.int\/iris\/bitstream\/handle\/10665\/331498\/WHO-2019-nCoV-IPCPPE_use-2020.2-eng.pdf","965aebfa":"#Minimize the need for PPE\n\nThe following interventions can minimize the need for PPE while protecting health care workers and others from exposure to the COVID-19 virus in health care settings. \n\nConsider using telemedicine to evaluate suspected cases of COVID-192, thus minimizing the need for these persons to go to health care facilities for evaluation.\n\nUse physical barriers to reduce exposure to the COVID-19 virus, such as glass or plastic windows. This approach can be implemented in areas of the health care setting where patients will first present, such as triage areas, the registration desk at the emergency department, or at the pharmacy window where medication is collected. \n\nRestrict health care workers from entering the rooms of COVID-19 patients if they are not involved in direct care. Consider bundling activities to minimize the number of times a room is entered (e.g. check vital signs during medication administration or have food delivered by health care workers while they are performing other care) and plan which activities will be performed at the bedside.\n\nIdeally, visitors will not be allowed but if this is not possible,restrict the number of visitors to areas where COVID-19 patients are being isolated; restrict the amount of time visitors are allowed to spend in the area; and provide clear instructions about how to put on and remove PPE and perform hand hygiene to ensure that visitors avoid self-contamination. \nhttps:\/\/apps.who.int\/iris\/bitstream\/handle\/10665\/331498\/WHO-2019-nCoV-IPCPPE_use-2020.2-eng.pdf","bd4a2e76":"#Strategies to Optimize the Supply of PPE and Equipment\n\nPersonal protective equipment (PPE) is used every day by healthcare personnel (HCP) to protect themselves, patients, and others when providing care. PPE helps protect HCP from potentially infectious patients and materials, toxic medications, and other potentially dangerous substances used in healthcare delivery.https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/hcp\/ppe-strategy\/index.html","ee002c5f":"#Codes from Vansh Jatana https:\/\/www.kaggle.com\/vanshjatana\/covid-19-in-australia","eb532903":"#Personal Protective Equipment (PPE) Burn Rate Calculator\n\nThe Personal Protective Equipment (PPE) Burn Rate Calculator (3 sheets) is a spreadsheet-based model that will help healthcare facilities plan and optimize the use of PPE for response to coronavirus disease 2019 (COVID-19). Non-healthcare facilities such as correctional facilities may also find this tool useful.\n\nTo use the calculator, enter the number of full boxes of each type of PPE in stock (gowns, gloves, surgical masks, respirators, and face shields, for example) and the total number of patients at your facility. The tool will calculate the average consumption rate, also referred to as a \u201cburn rate,\u201d for each type of PPE entered in the spreadsheet. This information can then be used to estimate how long the remaining supply of PPE will last, based on the average consumption rate. Using the calculator can help facilities make order projections for future needs.https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/hcp\/ppe-strategy\/burn-calculator.html","acdccebd":"#Considerations related to the safe handling of bodies of deceased persons with suspected or confirmed COVID-19\n\nConsiderations must be done while supporting public health preparedness planning and response activities on the safe handling of bodies of deceased persons with suspected or confirmed COVID-19: at the site of death, during transport, storage and preparation before burial\/cremation, and during burial\/cremation. \n\nEstablish a preparedness plan for the handling of dead bodies of suspected or confirmed COVID-19 cases, addressing access to adequately trained staff, transportation, equipment and the physical structures needed for storage of bodies and performance of burials and cremations.    \nAddress organisational structures involved in memorial services, burials and cremations in order to minimise delays between time of death and burial\/cremation.  \n\nIdentify key professional groups within and outside the healthcare system that are involved in the handling of dead bodies. Besides healthcare staff, this could include primary care, morgue staff, funeral agencies, transportation services, religious representatives, and organisational structures undertaking burials or cremations. Ensure that they know how to access current official recommendations. Assess the `need of PPE for each of these groups; if PPE is supplied, ensure there is adequate training` in its use.\nhttps:\/\/www.ecdc.europa.eu\/sites\/default\/files\/documents\/COVID-19-safe-handling-of-bodies-or-persons-dying-from-COVID19.pdf"}}