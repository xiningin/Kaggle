{"cell_type":{"2424fa42":"code","bf132379":"code","caf3e0ea":"code","bf7021a4":"code","6f67a4b4":"code","819e0c3e":"code","685cb64c":"code","85bc8970":"code","eb63dea0":"code","5ce23cac":"code","1d82b2c7":"code","7703aabf":"code","80ae63b0":"code","481ae3f0":"code","371b92b4":"code","53f11452":"code","a93cf2f4":"markdown","d4fe64b4":"markdown","fe9f9062":"markdown","60ce18db":"markdown","30dad244":"markdown","b758e79d":"markdown","49da03d3":"markdown","86d57983":"markdown","87d0780b":"markdown","e1e5eb64":"markdown","961ed770":"markdown","36616821":"markdown","e7c3d68e":"markdown"},"source":{"2424fa42":"import pandas as pd\nimport numpy  as np\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split,KFold,cross_val_score\nfrom sklearn.metrics import confusion_matrix,roc_auc_score\nfrom pandas_profiling import ProfileReport\nfrom imblearn.over_sampling import SMOTE,SMOTENC,ADASYN\nfrom sklearn.model_selection import StratifiedKFold\n# Comment this if the data visualisations doesn't work on your side\n%matplotlib inline\n\nplt.style.use('bmh')","bf132379":"import warnings\nwarnings.filterwarnings('ignore')","caf3e0ea":"df_train = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/train.csv')\ndf_test = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/test.csv')\ndf_train.head()","bf7021a4":"# profile = ProfileReport(df_train,title='Profile Report',explorative=True)\n# profile.to_widgets()","6f67a4b4":"df_train.info()","819e0c3e":"df_test.info()","685cb64c":"def label_encoder(data):\n    le = preprocessing.LabelEncoder()\n    data = le.fit_transform(data)\n    return data","85bc8970":"df_train['Gender'] = label_encoder(df_train['Gender'])\ndf_train['Vehicle_Age'] = label_encoder(df_train['Vehicle_Age'])\ndf_train['Vehicle_Damage'] = label_encoder(df_train['Vehicle_Damage'])\ndf_train.head()","eb63dea0":"df_train['Policy_Sales_Channel']  = df_train['Policy_Sales_Channel'].astype(int)\ndf_train['Region_Code']  = df_train['Region_Code'].astype(int)\ndf_train.head()","5ce23cac":"category_col=['Gender','Driving_License', 'Region_Code', 'Previously_Insured','Vehicle_Damage',\n         'Vehicle_Age','Vintage','Policy_Sales_Channel']\n\nX = df_train.copy()\ny = X['Response']\nX.drop(['id','Response'],axis=1,inplace=True)\nX_train, X_cv, y_train, y_cv = train_test_split(X, y, test_size=0.25,shuffle=True,random_state=99,stratify=y)\nprint(\"Size of X_train \", X_train.shape)\nprint(\"Size of X_cv \", X_cv.shape)\nprint(\"Size of y_train \", y_train.shape)\nprint(\"Size of y_cv \", y_cv.shape)\n","1d82b2c7":"from catboost import CatBoostClassifier\nparams = {'iterations':1000,\n        'learning_rate':0.1,\n        'cat_features': category_col,\n        'depth':7,\n        'eval_metric':'AUC',\n        'loss_function':'Logloss',\n        'verbose':200,\n        'od_type':\"Iter\", # overfit detector\n        'od_wait':300, # most recent best iteration to wait before stopping\n        'random_seed': 99,\n        'l2_leaf_reg' : 11\n          }\n\ncat_model = CatBoostClassifier(**params)\ncat_model.fit(X_train, y_train,   \n          eval_set=(X_cv, y_cv), \n          use_best_model=True, # True if we don't want to save trees created after iteration with the best validation score\n          plot=True  \n         );","7703aabf":"import statsmodels.api as sm\nlogit_model=sm.Logit(y,X)\nresult=logit_model.fit()\nprint(result.summary())","80ae63b0":"from sklearn.metrics import roc_curve\nlogit_roc_auc = roc_auc_score(y, cat_model.predict_proba(X)[:,1])\nfpr, tpr, thresholds = roc_curve(y, cat_model.predict_proba(X)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='Cataboost (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()","481ae3f0":"X_test = df_test.copy()\n\n# Encoding category using Label Encoder\nX_test['Gender'] = label_encoder(X_test['Gender'])\nX_test['Vehicle_Damage'] = label_encoder(X_test['Vehicle_Damage'])\nX_test['Vehicle_Age'] = label_encoder(X_test['Vehicle_Age'])\nX_test.drop(['id'],axis=1, inplace=True)\nX_test['Policy_Sales_Channel']  = X_test['Policy_Sales_Channel'].astype(int)\nX_test['Region_Code']  = X_test['Region_Code'].astype(int)\nX_test.head()","371b92b4":"response = cat_model.predict_proba(X_test)\nresponse","53f11452":"submission = pd.DataFrame(df_test['id'],columns=['id',])\nsubmission['Response'] = response[:, 1]\nsubmission.head(10)","a93cf2f4":"## Prediction","d4fe64b4":"##  Loading Train and Test Data","fe9f9062":"## Prediction on Test Data","60ce18db":"## Splitting up Train and Test Data","30dad244":"1) Firstly Data with 12 variables and has 0 missing values.\n\n2) Region_code feature have 2021 zero values which need to be checked if '0' is a region code or else its corrupted data.\n\n3) Target Variable (Response) is highly imbalanced which need to be handled using by smote analysis or \n   other types analysis to balance the highly biased target variable.","b758e79d":"Your client is an Insurance company that has provided Health Insurance to its customers now they need your help in building a model to predict whether the policyholders (customers) from past year will also be interested in Vehicle Insurance provided by the company.\n\nAn insurance policy is an arrangement by which a company undertakes to provide a guarantee of compensation for specified loss, damage, illness, or death in return for the payment of a specified premium. A premium is a sum of money that the customer needs to pay regularly to an insurance company for this guarantee.\n\nFor example, you may pay a premium of Rs. 5000 each year for a health insurance cover of Rs. 200,000\/- so that if, God forbid, you fall ill and need to be hospitalised in that year, the insurance provider company will bear the cost of hospitalisation etc. for upto Rs. 200,000. Now if you are wondering how can company bear such high hospitalisation cost when it charges a premium of only Rs. 5000\/-, that is where the concept of probabilities comes in picture. For example, like you, there may be 100 customers who would be paying a premium of Rs. 5000 every year, but only a few of them (say 2-3) would get hospitalised that year and not everyone. This way everyone shares the risk of everyone else.\n\nJust like medical insurance, there is vehicle insurance where every year customer needs to pay a premium of certain amount to insurance provider company so that in case of unfortunate accident by the vehicle, the insurance provider company will provide a compensation (called \u2018sum assured\u2019) to the customer.\n\nBuilding a model to predict whether a customer would be interested in Vehicle Insurance is extremely helpful for the company because it can then accordingly plan its communication strategy to reach out to those customers and optimise its business model and revenue. \n\nNow, in order to predict, whether the customer would be interested in Vehicle insurance, you have information about demographics (gender, age, region code type), Vehicles (Vehicle Age, Damage), Policy (Premium, sourcing channel) etc.","49da03d3":"# Janatahack: Cross-sell Prediction \n### Public Rank - 72 (0.8584736363), Private Rank - 58 (0.8632359852)","86d57983":"### Problem Statement","87d0780b":"## Model","e1e5eb64":"## Pre-Processing","961ed770":"## Data Analysis:","36616821":"### Encoding Categorical features using Label Encoder","e7c3d68e":"### Submission"}}