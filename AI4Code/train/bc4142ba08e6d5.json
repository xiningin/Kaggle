{"cell_type":{"8e76288a":"code","c6bac027":"code","14fbfe86":"code","c2c37c52":"code","81868178":"code","d9cfb75e":"code","ab82f583":"code","0680c0cf":"markdown","79d1f745":"markdown","91e87dac":"markdown","58f3e2ae":"markdown","890d6542":"markdown","55a2cc2a":"markdown"},"source":{"8e76288a":"import numpy as np\nimport pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import normalized_mutual_info_score, mutual_info_score\nfrom tqdm import tqdm_notebook as tqdm\nfrom itertools import combinations\nimport seaborn as sns\nfrom functools import partial\n\nimport os","c6bac027":"def astype_cat(dd, cols):\n    for col in cols:\n        if isinstance(col, tuple):\n            col, idx1, idx2 = col\n            for idx in range(idx1, idx2+1):\n                full_col=col+str(idx)\n                dd[full_col]=dd[full_col].astype(\"category\")\n        else:\n            dd[col]=dd[col].astype(\"category\")\n            \ndd=pd.read_csv(\"..\/input\/train_transaction.csv\")\nastype_cat(dd, [\"ProductCD\", (\"card\", 1, 6), \"addr1\", \"addr2\", \"P_emaildomain\", \"R_emaildomain\", (\"M\", 1, 9)])\n\nddid=pd.read_csv(\"..\/input\/train_identity.csv\")\nastype_cat(ddid, [\"DeviceType\", \"DeviceInfo\", (\"id_\", 12, 38)])\n\ndd=dd.merge(ddid, \"left\", \"TransactionID\")\n\ndd[\"datetime\"]=(dd[\"TransactionDT\"].apply(lambda x:dt.timedelta(seconds=x)+pd.Timestamp(\"2017-11-30\")))\n\ndel ddid\n\ndd.head()","14fbfe86":"cat_cols=dd.dtypes.loc[lambda x:x==\"category\"].index\n\ndef calc_scores(score_func):\n    scores=[]\n    for col1, col2 in tqdm(list(combinations(cat_cols, 2))):\n        score=score_func(dd[col1].cat.codes, dd[col2].cat.codes)\n        scores.append((col1, col2, score))\n    scores=pd.DataFrame(scores, columns=[\"col1\", \"col2\", \"score\"])\n    \n    scores_sym=pd.concat([scores, scores.rename(columns={\"col1\":\"col2\", \"col2\":\"col1\"})])\n    \n    return scores_sym","c2c37c52":"scores1=calc_scores(partial(normalized_mutual_info_score, average_method=\"arithmetic\"))","81868178":"sns.clustermap(scores1.pivot(\"col1\", \"col2\", \"score\").fillna(scores1[\"score\"].max()), figsize=(15,15));\ndisplay(scores1.sort_values(\"score\", ascending=False).iloc[:20])","d9cfb75e":"scores2=calc_scores(mutual_info_score)","ab82f583":"sns.clustermap(scores2.pivot(\"col1\", \"col2\", \"score\").fillna(scores2[\"score\"].max())**(1\/3), figsize=(15,15));\ndisplay(scores2.sort_values(\"score\", ascending=False).iloc[:20])","0680c0cf":"## Plain Mutual Information\n\nProbably less useful","79d1f745":"This notebook clusters categorical variables to show what is related.","91e87dac":"# Load data","58f3e2ae":"# Plot clustermap","890d6542":"## Normalized Mutual Information","55a2cc2a":"Groups:\n\n* id 21-26\n* id 14, 30, 32, 34\n* -> derived: ProductCD, id 17, 35\n* DeviceType, id 12, (15, 16), (28, 29), 36, 37, 38\n* -> derived: (DeviceInfo, 31), R_email, M6, (19, 20), 13, 18, M4-5(?)\n* ProductCD, id 17, 35\n* M1-3, M7-9\n* P_email alone\n* card6 almost alone\n* card1-2, addr1, card5(?)\n* card4-5\n* addr2, card3, {ProductCD, 17, 35}, M4(?)"}}