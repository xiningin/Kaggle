{"cell_type":{"eac65a0c":"code","fb3378ac":"code","f9df6701":"code","27b9f103":"code","7e0e201f":"code","2fce4dbe":"code","6705bd9e":"code","b9d4059f":"code","22bd7a58":"code","0dacdc06":"code","b918f5b7":"code","51949eed":"code","7dd64e9e":"code","8107e30e":"code","c91e4060":"code","b8cf6041":"code","ede4fa8d":"markdown","caebe535":"markdown","8347f134":"markdown","612f0bd6":"markdown","63d63d5b":"markdown","0eb3e45e":"markdown","c42bf67a":"markdown","d10e914d":"markdown","aafeb958":"markdown","b10f53c0":"markdown","d57a579b":"markdown","6f1c50ea":"markdown","6c39ffd3":"markdown","efa64127":"markdown","990cc5f0":"markdown","fc56b495":"markdown","859a0d39":"markdown","b99e5140":"markdown","310f93e3":"markdown","68bd9309":"markdown","90d3a821":"markdown","2647d99f":"markdown","4823ac1d":"markdown","e0a2d425":"markdown","81576689":"markdown","2bdaa9b2":"markdown","e51959ec":"markdown","9232d5cc":"markdown","823cd6a7":"markdown","a278b2ba":"markdown","f1300cb9":"markdown","ce9796b9":"markdown","abf2ee23":"markdown","2fb4e78a":"markdown","e81222af":"markdown","f33200c7":"markdown","26f89e0a":"markdown","a456f1c2":"markdown","0832a23e":"markdown","a1794ae4":"markdown","7e447c0e":"markdown","f06c2f1f":"markdown","73c39d82":"markdown"},"source":{"eac65a0c":"#Import the libraries\nimport numpy as np","fb3378ac":"#Step - 1 \n#Denoting the new basis vectors as numpy arrays\n#Notice the way the arguments are taken\n\nB2 = np.array([3,-3],[4,-5])\nB2","f9df6701":"#Step - 2\n#Create the transformation matrix M","27b9f103":"# M is the inverse of B2\nM = np.linalg.inv(B2)","7e0e201f":"M","2fce4dbe":"M @ B2","6705bd9e":"#Step - 3 \n#Perform the change of basis","b9d4059f":"#Denote v1\nv1 = np.array([[4],[9]])","22bd7a58":"v1","0dacdc06":"#Apply the change of basis formula\n#Multiply the transformation matrix M with v1\n\nv2 = M @ v1","b918f5b7":"v2","51949eed":"#Step-1 \n#Denote B1 as numpy arrays\nB1 = np.array([[1,1],[2,3]])","7dd64e9e":"#Step-2\n#Find the transformation matrix M\nM = B1","8107e30e":"M","c91e4060":"#Step -3 \n#Apply the change of basis formula\n#v2 = M*v1\nv1 = np.array([[3],[1]])\nv2 = M @ v1\nv2","b8cf6041":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/images\/COB2.png\")","ede4fa8d":"B1 is one set of basis vectors and v1 is the point's representation in B1 whereas B2 is another set of basis vectors and v2 is the same point's representation in B2.","caebe535":"\\begin{equation*} 4* \\begin{bmatrix} 1  \\\\ 0 \\end{bmatrix} + 9 * \\begin{bmatrix} 0 \\\\ 1\\end{bmatrix} = 3* \\begin{bmatrix} 1 \\\\ 2\\end{bmatrix} + 1*\\begin{bmatrix} 1 \\\\ 3\\end{bmatrix}\\end{equation*} ","8347f134":"\\begin{equation*}B_2 = \\begin{bmatrix} 1 \\\\ 2\\end{bmatrix} \\space and \\space \\begin{bmatrix} 1 \\\\ 3\\end{bmatrix}\\end{equation*} ","612f0bd6":"\\begin{equation*}or \\space B_2 = \\begin{bmatrix} 1 & 1 \\\\ 2 & 3\\end{bmatrix}\\end{equation*} ","63d63d5b":"### Summary","0eb3e45e":"\\begin{equation*}v_2 = \\begin{bmatrix} 3 \\\\  1\\end{bmatrix} \\end{equation*}","c42bf67a":"\\begin{equation*}or \\space B_2 = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1\\end{bmatrix}\\end{equation*} ","d10e914d":"In this demonstration, we'll take a look at how to perform change of basis calculations in python. Mainly we'll look at\n- how to denote the basis vectors in numpy\n- how to create the transformation matrix\n- how to perform change of basis","aafeb958":"\\begin{equation*} v_2 = \\begin{bmatrix} 3 \\\\ 1\\end{bmatrix}\\end{equation*} ","b10f53c0":"#### Case 1 - Moving from the standard basis to a non-standard basis","d57a579b":"In this case B2 is the standard basis or the identity matrix and therefore it's inverse will be B2 itself. Therefore the above equation gets simplified as ","6f1c50ea":"\\begin{equation*} v_1 = \\begin{bmatrix} 3\\\\ 1 \\end{bmatrix}\\space in \\space B_1 = \\begin{bmatrix} 1 &1 \\\\ 2 &3 \\end{bmatrix}  \\end{equation*} ","6c39ffd3":"So, therefore the same point P's representation in the new basis vectors B2, is given as ","efa64127":"**Shortcut for finding M**\n\nOnce we've correctly set the conventions and when our movement is between standard and non-standard basis vectors, it's possible to express M in terms of just the non-standard basis vectors\n\n- If we're moving from a standard basis to a non-standard basis, M is equal to the inverse of the non-standard basis vectors\n\n- If we're moving from a non-standard basis to a standard basis, M is equal to the non-standard basis vectors.","990cc5f0":"\\begin{equation*}  \\begin{bmatrix} 1 & 0 \\\\ 0 & 1\\end{bmatrix}* \\begin{bmatrix} 4 \\\\ 9 \\end{bmatrix} = \\begin{bmatrix} 1 & 1 \\\\ 2 & 3\\end{bmatrix}*\\begin{bmatrix} 3 \\\\ 1\\end{bmatrix}\\end{equation*} ","fc56b495":"\\begin{equation*} v_1 = \\begin{bmatrix} 4 \\\\ 9 \\end{bmatrix}\\space in \\space B_1 = \\begin{bmatrix} 1 &0 \\\\ 0 &1 \\end{bmatrix}  \\end{equation*} ","859a0d39":"B2 = np.array([arguments])","b99e5140":"Recall the formula for transformation matrix M again","310f93e3":"In this scenario, you are given a point's representation in the standard basis.Your task is to identify the same point's representation in a new set of basis vectors","68bd9309":"\\begin{equation*} M = B_2^{-1}* B_1\\end{equation*} ","90d3a821":"\n\\begin{equation*} M = B_2^{-1}* B_1\\end{equation*} \n","2647d99f":"As you can see, numpy creates the matrix by taking in the rows as the arguments. So therefore, first create the basis vector matrix and then pass the arguments.","4823ac1d":"Let's take the same example as above in the reverse order","e0a2d425":"**Q** - Let's say you're given a point P which is represented as v1 in the non-standard basis B1 as shown below","81576689":"In this scenario, you are given a point's representation in a non-standard basis.Your task is to identify the same point's representation in the standard basis vectors","2bdaa9b2":"We know that, in order to get v2 we have the equation as ","e51959ec":"#### Case 2 - Moving from a non-standard basis to the standard basis","9232d5cc":"A few conventions before we proceed\n- By default, we'll assume the original basis as B1 and the new basis as B2\n- The original vector representation is denoted as v1 and the new vector representation as v2\n- Matrix M is to be multiplied with v1 to obtain v2","823cd6a7":"\\begin{equation*} M = B_1\\end{equation*} ","a278b2ba":"The above representation is shown in the diagram below","f1300cb9":"\\begin{equation*} v_2 = M*v_1\\end{equation*} ","ce9796b9":"\\begin{equation*} B_1*v_1 = B_2*v_2\\end{equation*} ","abf2ee23":"In the above example, we have shown that","2fb4e78a":"The same point P can have multiple representations in multiple basis vectors. When moving between two set of basis vectors the following rule holds true","e81222af":"Now you need to find the same point's representation in a different basis B2, which is denoted as follows","f33200c7":"Now you need to find the same point's representation in the standard basis B2, which is denoted as follows","26f89e0a":"Since B1 is the standard basis vectors which is also the identity matrix, the above equation gets simplified as","a456f1c2":"**Q** - Let's say you're given a point P which is represented as v1 in the standard basis B1 as shown below","0832a23e":"or in more concrete terms","a1794ae4":"# Change of Basis","7e447c0e":"Now we know that","f06c2f1f":"\\begin{equation*} M = B_2^{-1}\\end{equation*} ","73c39d82":"\\begin{equation*}B_2 = \\begin{bmatrix} 1 \\\\ 0\\end{bmatrix} \\space and \\space \\begin{bmatrix} 0 \\\\ 1\\end{bmatrix}\\end{equation*} "}}