{"cell_type":{"4a78ace2":"code","73d52e18":"code","5de9b3a1":"code","bc29a643":"code","d480b23c":"code","afb8b1e5":"code","a206a1a4":"code","a206f7f7":"code","3a107bc0":"code","3cc171a9":"code","7a7a095d":"code","ea5aaab5":"code","53924233":"markdown","19bb468a":"markdown","b2b2746e":"markdown","c04e1024":"markdown","642ac153":"markdown","8e21445c":"markdown","fe4f1915":"markdown","d06e6c40":"markdown","9ec3285e":"markdown","5b232653":"markdown","47828f57":"markdown","ba7b9ded":"markdown","334c84f6":"markdown","6625b3e6":"markdown","9b9acc3f":"markdown"},"source":{"4a78ace2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\npd.options.display.max_columns = 10\npd.options.display.max_columns = 100\ntest = pd.read_csv(\"\/kaggle\/input\/ml-challenge-tr-is-bankasi\/test.csv\")\ntrain = pd.read_csv(\"\/kaggle\/input\/ml-challenge-tr-is-bankasi\/train.csv\")\n\n\ntrain_len = len(train)\n#573075\n","73d52e18":"#train[(train[\"ISLEM_TUTARI\"]\/train[\"ISLEM_ADEDI\"]).isnull()].fillna()\ntrain.loc[573075] = train.loc[573075].replace(0.0,1.0)","5de9b3a1":"train[\"YIL_AY\"] = train[\"YIL_AY\"].astype(str)\ntest[\"YIL_AY\"] = test[\"YIL_AY\"].astype(str)","bc29a643":"sektorler = train[\"SEKTOR\"].value_counts()\nsektorler.plot(kind='bar')","d480b23c":"#for tur in pd.unique(train[\"ISLEM_TURU\"]):\ntur = 'PESIN'\nfor sektor in pd.unique(train[\"SEKTOR\"]):\n    p_sektor1 = train[(train[\"ISLEM_TURU\"]==tur)&(train[\"SEKTOR\"]==sektor)&(train[\"YIL_AY\"].astype(str).str[0:4]>='2017')][[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ISLEM_TUTARI\",\"ISLEM_ADEDI\"]]\n    p_sektor1[\"ORT_TUTAR\"] = p_sektor1[\"ISLEM_TUTARI\"]\/p_sektor1[\"ISLEM_ADEDI\"]\n    p_group1 = p_sektor1.groupby([\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR':['mean']})\n    p_group1.columns = ['ORT_TUTAR']\n    p_group1.reset_index(inplace=True)\n    p_group1[\"YIL_AY\"] = p_group1[\"YIL_AY\"].astype(str)\n    fark = p_group1[p_group1[\"YIL_AY\"]=='201801']['ORT_TUTAR'].values-p_group1[p_group1[\"YIL_AY\"]=='201901']['ORT_TUTAR'].values\n    yeni_deger = p_group1[p_group1[\"YIL_AY\"]=='201802']['ORT_TUTAR'].values - fark\n    p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    plt.figure(figsize=(10,8))\n    p_group1.plot(x='YIL_AY',y='ORT_TUTAR')\n    plt.xlabel('Y\u0131l - Ay')\n    plt.ylabel('Ortalama Tutar')\n    title = \"\u0130\u015flem T\u00fcr\u00fc: \"+tur+\" - Sekt\u00f6r: \"+sektor\n    plt.title(title)\n    plt.show()","afb8b1e5":"tahminler_test = pd.DataFrame(columns=[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ORT_TUTAR\"])\n\ntur='PESIN'\nfor sektor in pd.unique(train[\"SEKTOR\"]):\n    p_sektor1 = train[(train[\"ISLEM_TURU\"]==tur)&(train[\"SEKTOR\"]==sektor)&(train[\"YIL_AY\"].astype(str).str[0:6]<'201812')][[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ISLEM_TUTARI\",\"ISLEM_ADEDI\"]]\n    p_sektor1[\"ORT_TUTAR\"] = p_sektor1[\"ISLEM_TUTARI\"]\/p_sektor1[\"ISLEM_ADEDI\"]\n    p_group1 = p_sektor1.groupby([\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR':['mean']})\n    p_group1.columns = ['ORT_TUTAR']\n    p_group1.reset_index(inplace=True)\n    p_group1[\"YIL_AY\"] = p_group1[\"YIL_AY\"].astype(str)\n    fark = p_group1[p_group1[\"YIL_AY\"]=='201711']['ORT_TUTAR'].values-p_group1[p_group1[\"YIL_AY\"]=='201811']['ORT_TUTAR'].values\n    yeni_deger = p_group1[p_group1[\"YIL_AY\"]=='201712']['ORT_TUTAR'].values - fark\n    p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    #plt.figure(figsize=(10,8))\n    #p_group1.plot(x='YIL_AY',y='ORT_TUTAR')\n    #plt.xlabel('Y\u0131l - Ay')\n    #plt.ylabel('Ortalama Tutar')\n    #plt.title((\"\u0130\u015flem T\u00fcr\u00fc: \",tur,\" - Sekt\u00f6r: \",sektor))\n    #plt.show()\n    tahminler_test = tahminler_test.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    \ntur='TAKSITLI'\nfor sektor in pd.unique(train[\"SEKTOR\"]):\n    p_sektor1 = train[(train[\"ISLEM_TURU\"]==tur)&(train[\"SEKTOR\"]==sektor)&(train[\"YIL_AY\"].astype(str).str[0:6]<'201812')][[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ISLEM_TUTARI\",\"ISLEM_ADEDI\"]]\n    p_sektor1[\"ORT_TUTAR\"] = p_sektor1[\"ISLEM_TUTARI\"]\/p_sektor1[\"ISLEM_ADEDI\"]\n    p_group1 = p_sektor1.groupby([\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR':['mean']})\n    p_group1.columns = ['ORT_TUTAR']\n    p_group1.reset_index(inplace=True)\n    p_group1[\"YIL_AY\"] = p_group1[\"YIL_AY\"].astype(str)\n    \n    try:\n        fark = p_group1[p_group1[\"YIL_AY\"]=='201711']['ORT_TUTAR'].values-p_group1[p_group1[\"YIL_AY\"]=='201811']['ORT_TUTAR'].values\n        yeni_deger = p_group1[p_group1[\"YIL_AY\"]=='201712']['ORT_TUTAR'].values - fark\n        p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n        tahminler_test = tahminler_test.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    except:\n        yeni_deger = p_group1['ORT_TUTAR'].mean()\n        p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger}, ignore_index=True)\n        tahminler_test = tahminler_test.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201812', 'ORT_TUTAR':yeni_deger}, ignore_index=True)    \n    #plt.figure(figsize=(14,14))\n    #p_group1.plot(x='YIL_AY',y='ORT_TUTAR')\n    #plt.xlabel('Y\u0131l - Ay')\n    #plt.ylabel('Ortalama Tutar')\n    #plt.title((\"\u0130\u015flem T\u00fcr\u00fc: \",tur,\" - Sekt\u00f6r: \",sektor))\n    #plt.show()","a206a1a4":"tahminler_test","a206f7f7":"train[\"ORT_TUTAR1\"] = train[\"ISLEM_TUTARI\"]\/train[\"ISLEM_ADEDI\"]\ncust_dagilim = train.groupby([\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR1':'mean'})\ncust_dagilim.columns = [\"CUST_ORT_ISLEM_TUTARI\"]\ncust_dagilim.reset_index(inplace=True)\ncust_dagilim = cust_dagilim[(cust_dagilim[\"YIL_AY\"]>'201807')&(cust_dagilim[\"YIL_AY\"]<='201811')]\n\ncust_dagilim = cust_dagilim.groupby([\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\"]).agg({'CUST_ORT_ISLEM_TUTARI':'mean'})\ncust_dagilim.columns = [\"CUST_ORT_ISLEM_TUTARI\"]\ncust_dagilim.reset_index(inplace=True)\n\ncust_dagilim[\"YIL_AY\"] = '201812'\n\ntrain = pd.merge(train,cust_dagilim,on=[\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"], how='left')","3a107bc0":"train_201812 = pd.merge(train,tahminler_test,on=[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"], how='inner')\n#M\u00fc\u015fterinin son 4 aydaki ortalama i\u015flem tutar\u0131n\u0131 tahmin ay\u0131ndaki i\u015flem adediyle \u00e7arp\u0131p genele g\u00f6re beklenen i\u015flem tutar\u0131n\u0131 hesapl\u0131yoruz.\ntrain_201812[\"PRED_ISLEM_TUTARI\"] = train_201812[\"ORT_TUTAR\"]*train_201812[\"ISLEM_ADEDI\"]\n#train_201812[\"PRED_ISLEM_TUTARI2\"] = train_201812[\"ORT_TUTAR\"]*(np.sqrt(train_201812[\"ISLEM_ADEDI\"]))\n\n\n#son 4 ayl\u0131k verisi olmayan m\u00fc\u015fterilerde genel ortalama i\u015flem tutar\u0131n\u0131 kulland\u0131k.\ntrain_201812[\"CUST_ORT_ISLEM_TUTARI\"].loc[train_201812[train_201812[\"CUST_ORT_ISLEM_TUTARI\"].isnull()].index.values]=train_201812[\"ORT_TUTAR\"].loc[train_201812[train_201812[\"CUST_ORT_ISLEM_TUTARI\"].isnull()].index.values].values\ntrain_201812[\"CUST_ORT_ISLEM_TUTARI\"] = train_201812[\"CUST_ORT_ISLEM_TUTARI\"]*train_201812[\"ISLEM_ADEDI\"]\n\n#Mix\ntrain_201812[\"PRED_ISLEM_TUTARI_MEAN\"] = (train_201812[\"PRED_ISLEM_TUTARI\"]*3 + train_201812[\"CUST_ORT_ISLEM_TUTARI\"]*7)\/10\n","3cc171a9":"print(np.sqrt(mean_squared_error(train_201812[\"ISLEM_TUTARI\"],train_201812[\"PRED_ISLEM_TUTARI_MEAN\"])))","7a7a095d":"tahminler = pd.DataFrame(columns=[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ORT_TUTAR\"])\n\n\n### 201902 KISMI ###\ntur='PESIN'\nfor sektor in pd.unique(train[\"SEKTOR\"]):\n    p_sektor1 = train[(train[\"ISLEM_TURU\"]==tur)&(train[\"SEKTOR\"]==sektor)&(train[\"YIL_AY\"].astype(str).str[0:6]<'201902')][[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ISLEM_TUTARI\",\"ISLEM_ADEDI\"]]\n    p_sektor1[\"ORT_TUTAR\"] = p_sektor1[\"ISLEM_TUTARI\"]\/p_sektor1[\"ISLEM_ADEDI\"]\n    p_group1 = p_sektor1.groupby([\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR':['mean']})\n    p_group1.columns = ['ORT_TUTAR']\n    p_group1.reset_index(inplace=True)\n    p_group1[\"YIL_AY\"] = p_group1[\"YIL_AY\"].astype(str)\n    fark = p_group1[p_group1[\"YIL_AY\"]=='201801']['ORT_TUTAR'].values-p_group1[p_group1[\"YIL_AY\"]=='201901']['ORT_TUTAR'].values\n    yeni_deger = p_group1[p_group1[\"YIL_AY\"]=='201802']['ORT_TUTAR'].values - fark\n    p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    #plt.figure(figsize=(10,8))\n    #p_group1.plot(x='YIL_AY',y='ORT_TUTAR')\n    #plt.xlabel('Y\u0131l - Ay')\n    #plt.ylabel('Ortalama Tutar')\n    #plt.title((\"\u0130\u015flem T\u00fcr\u00fc: \",tur,\" - Sekt\u00f6r: \",sektor))\n    #plt.show()\n    tahminler = tahminler.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    \ntur='TAKSITLI'\nfor sektor in pd.unique(train[\"SEKTOR\"]):\n    p_sektor1 = train[(train[\"ISLEM_TURU\"]==tur)&(train[\"SEKTOR\"]==sektor)&(train[\"YIL_AY\"].astype(str).str[0:6]<'201902')][[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\",\"ISLEM_TUTARI\",\"ISLEM_ADEDI\"]]\n    p_sektor1[\"ORT_TUTAR\"] = p_sektor1[\"ISLEM_TUTARI\"]\/p_sektor1[\"ISLEM_ADEDI\"]\n    p_group1 = p_sektor1.groupby([\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR':['mean']})\n    p_group1.columns = ['ORT_TUTAR']\n    p_group1.reset_index(inplace=True)\n    p_group1[\"YIL_AY\"] = p_group1[\"YIL_AY\"].astype(str)\n    \n    try:\n        fark = p_group1[p_group1[\"YIL_AY\"]=='201801']['ORT_TUTAR'].values-p_group1[p_group1[\"YIL_AY\"]=='201901']['ORT_TUTAR'].values\n        yeni_deger = p_group1[p_group1[\"YIL_AY\"]=='201802']['ORT_TUTAR'].values - fark\n        p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n        tahminler = tahminler.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger[0]}, ignore_index=True)\n    #except:\n        #print(\"Something went wrong\")\n    except:\n        yeni_deger = p_group1['ORT_TUTAR'].mean()\n        p_group1 = p_group1.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger}, ignore_index=True)\n        tahminler = tahminler.append({'ISLEM_TURU':tur ,'SEKTOR': sektor, 'YIL_AY':'201902', 'ORT_TUTAR':yeni_deger}, ignore_index=True)    \n    #plt.figure(figsize=(10,8))\n    #p_group1.plot(x='YIL_AY',y='ORT_TUTAR')\n    #plt.xlabel('Y\u0131l - Ay')\n    #plt.ylabel('Ortalama Tutar')\n    #plt.title((\"\u0130\u015flem T\u00fcr\u00fc: \",tur,\" - Sekt\u00f6r: \",sektor))\n    #plt.show()\n    \ntrain[\"ORT_TUTAR1\"] = train[\"ISLEM_TUTARI\"]\/train[\"ISLEM_ADEDI\"]\ncust_dagilim = train.groupby([\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"]).agg({'ORT_TUTAR1':'mean'})\ncust_dagilim.columns = [\"CUST_ORT_ISLEM_TUTARI\"]\ncust_dagilim.reset_index(inplace=True)\ncust_dagilim = cust_dagilim[(cust_dagilim[\"YIL_AY\"]>'201808')&(cust_dagilim[\"YIL_AY\"]<='201901')] #bunu bir de 201812 son olacak \u015fekilde denemek gerek. \u00e7\u00fcnk\u00fc senelik adet ba\u015f\u0131na ort. i\u015fem tutar\u0131 de\u011fi\u015fimini pred'le yakal\u0131yoruz.\n\ncust_dagilim = cust_dagilim.groupby([\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\"]).agg({'CUST_ORT_ISLEM_TUTARI':'mean'})\ncust_dagilim.columns = [\"CUST_ORT_ISLEM_TUTARI\"]\ncust_dagilim.reset_index(inplace=True)\n\ncust_dagilim[\"YIL_AY\"] = '201902'\n\n\ntest = pd.merge(test,cust_dagilim,on=[\"CUSTOMER\",\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"], how='left')\n\n\ntest_201902 = pd.merge(test,tahminler,on=[\"ISLEM_TURU\",\"SEKTOR\",\"YIL_AY\"], how='left')\ntest_201902[\"PRED_ISLEM_TUTARI\"] = test_201902[\"ORT_TUTAR\"]*test_201902[\"ISLEM_ADEDI\"]\n#test_201902[\"PRED_ISLEM_TUTARI2\"] = test_201902[\"ORT_TUTAR\"]*(np.sqrt(test_201902[\"ISLEM_ADEDI\"]))\n\ntest_201902[\"CUST_ORT_ISLEM_TUTARI\"].loc[test_201902[test_201902[\"CUST_ORT_ISLEM_TUTARI\"].isnull()].index.values]=test_201902[\"ORT_TUTAR\"].loc[test_201902[test_201902[\"CUST_ORT_ISLEM_TUTARI\"].isnull()].index.values].values\ntest_201902[\"CUST_ORT_ISLEM_TUTARI\"] = test_201902[\"CUST_ORT_ISLEM_TUTARI\"]*test_201902[\"ISLEM_ADEDI\"]\ntest_201902[\"PRED_ISLEM_TUTARI_MEAN\"] = (test_201902[\"PRED_ISLEM_TUTARI\"]*3 + test_201902[\"CUST_ORT_ISLEM_TUTARI\"]*7)\/10\n","ea5aaab5":"submission=pd.DataFrame({'Id':test_201902[\"ID\"], 'Predicted':test_201902[\"PRED_ISLEM_TUTARI_MEAN\"]})\nsubmission.to_csv('submission_ver11.csv', index=False)","53924233":"\u015eimdi k\u0131r\u0131l\u0131mlarda ayl\u0131k ortalama tutarlar:","19bb468a":"YIL_AY de\u011fi\u015fkeni \u00fczerinden i\u015flem yapabilmek i\u00e7in t\u00fcr\u00fcn\u00fc stringe \u00e7evirdik.","b2b2746e":"\u015eimdi de m\u00fc\u015fterinin son aylardaki \u00f6deme profilini \u00e7\u0131kard\u0131k. Burada son 4 ay var. Son 1,2,3,4,5,6 ve 9 ay\u0131 denedik. En iyi \u00e7al\u0131\u015fan son 2 ay. Ancak 201902 tahmininde sene ba\u015f\u0131 etkisini biraz azaltmak i\u00e7in son 4 ay kullanaca\u011f\u0131z.","c04e1024":"Burada yo\u011fun olan sekt\u00f6rlere bakt\u0131\u011f\u0131m\u0131zda, 201711-201712 ge\u00e7i\u015finin 201811-201812'e \u00e7ok benzer oldu\u011funu g\u00f6r\u00fcyoruz. Bir pattern var. ","642ac153":"Plotlar\u0131 a\u00e7arsan\u0131z ayl\u0131k d\u00f6nemlerde tahminimizi de izleyebilirsiniz. 201711-201811 fark\u0131n\u0131 al\u0131p 201812 i\u00e7in beklenen ortalama tutar\u0131 hesaplad\u0131k. Ayn\u0131 y\u00f6ntemi ileride 201902 i\u00e7in kullanaca\u011f\u0131z.","8e21445c":"Bir m\u00fc\u015fterinin i\u015flem tutar\u0131 var ancak adedi s\u0131f\u0131r. Bunu 1 olarak varsayd\u0131k.","fe4f1915":"Tahminlerimizi yapal\u0131m. Genel ve bireysel ortalamalar\u0131 belirli oranlarda birle\u015ftirece\u011fiz. %30-%70 iyi \u00e7al\u0131\u015f\u0131yor. %70 bireysel %30 genel.","d06e6c40":"Tahmin performans\u0131n\u0131 \u00f6l\u00e7mek i\u00e7in:\n* Y\u0131l etkisine bak\u0131yoruz. Bunu da tahmin d\u00f6neminden 12 ay \u00f6nceki i\u015flem tutar\u0131 ortalamas\u0131 ile aralar\u0131ndaki farktan yakal\u0131yoruz.\n* M\u00fc\u015fterinin son aylardaki ortalama i\u015flem tutar\u0131na bak\u0131yoruz\n\nB\u00f6ylece m\u00fc\u015fterinin verilen sekt\u00f6r ve t\u00fcrde en yak\u0131n d\u00f6nemdeki harcama profilini \u00e7\u0131kar\u0131yoruz.\nAyn\u0131 zamanda tahmin d\u00f6neminde yap\u0131lan ortalama harcamay\u0131 da 12 ay \u00f6ncesine g\u00f6re oranlayarak \u00e7\u0131kart\u0131yoruz ve bireysel de\u011feri bu say\u0131yla mixliyoruz.\n\n1. \u00d6rne\u011fin 201812 d\u00f6nemini 201711-201811 fark\u0131na bakarak tahmin edebiliriz. 201711-201811 ve 201712-201812 farklar\u0131 birbirine \u00e7ok yak\u0131n. Y\u0131l boyunca da bu tutarlar\u0131n yak\u0131n olaca\u011f\u0131n\u0131 varsayd\u0131k. Buradan y\u0131l etkisini al\u0131yoruz. B\u00f6ylece 201712+fark \u015feklinde 201812 i\u00e7in bir ortalama tutar tahmin edebiliriz.\n\n2. Ay etkisi de 12 ay \u00f6ncesine y\u0131l etkisini ekleyerek hesaplad\u0131\u011f\u0131m\u0131z i\u00e7in aradan \u00e7\u0131km\u0131\u015f oluyor. Buradaki varsay\u0131m\u0131m\u0131z da aya g\u00f6re da\u011f\u0131l\u0131m\u0131n her sene benzer olmas\u0131.","9ec3285e":"# Sekt\u00f6r ve T\u00fcr Baz\u0131nda Ayl\u0131k Ortalama Tutarlar","5b232653":"Herhangi bir ML k\u00fct\u00fcphanesi kullanmadan tahmin yapt\u0131k. Datada sekt\u00f6r ve i\u015flem t\u00fcr\u00fcn\u00fcn haricinde ay ve y\u0131l etkisi de var. Bunlar dolar kuru, s\u0131cakl\u0131k, bayram ve di\u011fer tatil g\u00fcnleri gibi \u00e7e\u015fitli sebeplerden kaynaklan\u0131yor olabilir. Ancak bu de\u011fi\u015fkenler t\u00fcm sekt\u00f6rlerde **ayn\u0131 etkiyi yaratm\u0131yor**. \u00d6rne\u011fin turizmde haziran-temmuz-a\u011fustos aylar\u0131n\u0131n ortalama i\u015flem tutarlar\u0131 y\u00fcksekken market al\u0131\u015fveri\u015fi ba\u015fka bir da\u011f\u0131l\u0131m izliyor. Hatta \u00e7o\u011fu sekt\u00f6r-i\u015flem t\u00fcr\u00fc k\u0131r\u0131l\u0131m\u0131 d\u0131\u015f etkenlerden b\u00fcy\u00fck \u00f6l\u00e7\u00fcde ba\u011f\u0131ms\u0131z bir da\u011f\u0131l\u0131m sergiliyor. Bu y\u00fczden lineer modellerde bu de\u011fi\u015fkenleri kullanmak \u00e7ok sa\u011fl\u0131kl\u0131 olmayabilir. \n\nAy ve y\u0131l etkisini tahminleyebilmek i\u00e7in de\u011fi\u015fken \u00fcretmek yerine var olan datada sekt\u00f6r ve i\u015flem t\u00fcr\u00fc k\u0131r\u0131l\u0131m\u0131nda ayl\u0131k ortalama i\u015flem tutarlar\u0131n\u0131 hesaplad\u0131k ve bir m\u00fc\u015fterinin ayn\u0131 k\u0131r\u0131l\u0131m ve ayn\u0131 ayda benzer da\u011f\u0131l\u0131ma sahip oldu\u011funu g\u00f6rd\u00fck. Ancak sadece genele bakarak tahmin yapmayaca\u011f\u0131z \u00e7\u00fcnk\u00fc standart sapmam\u0131z da y\u00fcksek. Bu y\u00fczden problemi bireysel taraftan da inceleyece\u011fiz. ","47828f57":"\u00d6nce yo\u011fun sekt\u00f6rlere bakal\u0131m.","ba7b9ded":"Bundan sonras\u0131nda da ayn\u0131s\u0131n\u0131 201902 i\u00e7in uygulad\u0131k. Son 5 ayl\u0131k \u00f6deme profili ve 201801-201901 ge\u00e7i\u015fini y\u0131ll\u0131k de\u011fi\u015fim olarak baz ald\u0131k. LB 1169 olabilirmi\u015f ama submission hakk\u0131 bitmi\u015fti :)","334c84f6":"# Tahmin Performans\u0131","6625b3e6":"# Giri\u015f","9b9acc3f":"Bu yakla\u015f\u0131m\u0131 201812'de test ettik ve ger\u00e7ek de\u011ferleri de elimizde oldu\u011fu i\u00e7in rmse hesaplad\u0131k. Ayn\u0131 \u015fekilde 201901 i\u00e7in de test edebilirdik ancak sene ba\u015flar\u0131nda data biraz dalgal\u0131."}}