{"cell_type":{"ae6c9b17":"code","0665fef5":"code","00fd023a":"code","c4cb6950":"code","b95ab2ca":"code","cd66a07a":"code","3a21429b":"code","cc85f930":"code","86e384e3":"code","2ea56d43":"code","456afdfd":"code","7bc23222":"code","caf30186":"code","8749e8f0":"code","5197be9f":"code","6085bbc8":"code","778181c6":"code","fea00653":"markdown","ba5ac674":"markdown","60b7ed48":"markdown","8ec8f2d3":"markdown","24298b2f":"markdown","98f25be2":"markdown","a71567a3":"markdown","6ff62b24":"markdown","980bbcf7":"markdown","835273b9":"markdown","6fcee48e":"markdown","408bd7db":"markdown","6ef462aa":"markdown","a902e45a":"markdown","ffd7556d":"markdown","4e073a71":"markdown","601683a4":"markdown","faeee419":"markdown"},"source":{"ae6c9b17":"import numpy  as np \nimport pandas as pd\npd.set_option('display.max_columns', None)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nsns.set(style=\"darkgrid\")\nsns.set_palette(\"bright\")\n\ncsv_0 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_00.csv',index_col=0)\ncsv_1 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_01.csv',index_col=0)\ncsv_2 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_02_v2.csv',index_col=0)\ncsv_3 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_03.csv',index_col=0)\ncsv_4 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_04.csv',index_col=0)\ncsv_5 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_05.csv',index_col=0)\ncsv_6 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/optiver-realized-volatility-prediction-publicleaderboard_06.csv',index_col=0)\ncsv_7 = pd.read_csv('..\/input\/optiver-public-leaderboard-files\/PrivateLeaderboardRank.csv',index_col=0)\n\n# create the positions\ncsv_0.insert(loc=2, column='position 0', value=np.arange(start=1, stop=(len(csv_0)+1) ))\ncsv_1.insert(loc=2, column='position 1', value=np.arange(start=1, stop=(len(csv_1)+1) ))\ncsv_2.insert(loc=2, column='position 2', value=np.arange(start=1, stop=(len(csv_2)+1) ))\ncsv_3.insert(loc=2, column='position 3', value=np.arange(start=1, stop=(len(csv_3)+1) ))\ncsv_4.insert(loc=2, column='position 4', value=np.arange(start=1, stop=(len(csv_4)+1) ))\ncsv_5.insert(loc=2, column='position 5', value=np.arange(start=1, stop=(len(csv_5)+1) ))\ncsv_6.insert(loc=2, column='position 6', value=np.arange(start=1, stop=(len(csv_6)+1) ))\ncsv_7.rename(columns = {'PrivateLeaderboardRank':'position 7'}, inplace = True)\n\ncsv_0 = csv_0.drop([           'SubmissionDate'], axis='columns')\ncsv_1 = csv_1.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_2 = csv_2.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_3 = csv_3.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_4 = csv_4.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_5 = csv_5.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_6 = csv_6.drop(['TeamName','SubmissionDate'], axis='columns')\ncsv_7 = csv_7.drop(['TeamName'], axis='columns')\n\ncsv_0.rename(columns={\"Score\":\"score 0\"},inplace=True)\ncsv_1.rename(columns={\"Score\":\"score 1\"},inplace=True)\ncsv_2.rename(columns={\"Score\":\"score 2\"},inplace=True)\ncsv_3.rename(columns={\"Score\":\"score 3\"},inplace=True)\ncsv_4.rename(columns={\"Score\":\"score 4\"},inplace=True)\ncsv_5.rename(columns={\"Score\":\"score 5\"},inplace=True)\ncsv_6.rename(columns={\"Score\":\"score 6\"},inplace=True)\ncsv_7.rename(columns={\"PrivateLeaderboardScore\":\"score final\"},inplace=True)\n\nmerged_df = csv_0.join(csv_1).join(csv_2).join(csv_3).join(csv_4).join(csv_5).join(csv_6).join(csv_7)\n\n# output the merged dataframe\nmerged_df.to_csv('merged_Optiver_scores.csv', index=True)\n\n# Take a look at the top 20\npd.set_option('display.max_columns', None)\nmerged_df.set_index(\"TeamName\").sort_values(by='score final', ascending=True).head(20)","0665fef5":"# https:\/\/matplotlib.org\/stable\/gallery\/color\/named_colors.html\ncolor_1 = 'blue'\ncolor_2 = 'olive'\ncolor_3 = 'orange'\ncolor_4 = 'crimson'\ncolor_5 = 'limegreen'\ncolor_6 = 'red'\ncolor_7 = 'teal'\ncolor_8 = 'yellowgreen'\n\nfig  = px.scatter(merged_df,x='position 0',y='position 1',hover_name='TeamName').update_traces(marker=dict(color=color_1))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","00fd023a":"fig  = px.scatter(merged_df,x='position 1',y='position 2',hover_name='TeamName').update_traces(marker=dict(color=color_2))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","c4cb6950":"fig  = px.scatter(merged_df,x='position 2',y='position 3',hover_name='TeamName').update_traces(marker=dict(color=color_4))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","b95ab2ca":"fig  = px.scatter(merged_df,x='position 3',y='position 4',hover_name='TeamName').update_traces(marker=dict(color=color_7))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","cd66a07a":"fig  = px.scatter(merged_df,x='position 4',y='position 5',hover_name='TeamName').update_traces(marker=dict(color=color_6))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","3a21429b":"fig  = px.scatter(merged_df,x='position 5',y='position 6',hover_name='TeamName').update_traces(marker=dict(color=color_3))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","cc85f930":"fig  = px.scatter(merged_df,x='position 6',y='position 7',hover_name='TeamName').update_traces(marker=dict(color=color_5))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard position\",\n    yaxis_title=\"New Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","86e384e3":"fig  = px.scatter(merged_df,x='position 0',y='position 7',hover_name='TeamName').update_traces(marker=dict(color=color_6))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Public Leaderboard position (September 27, 2021)\",\n    yaxis_title=\"Private Leaderboard position\",)\n#fig.update_layout(xaxis = dict(range=[0.17,0.3]))\n#fig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=4000, y1=4000,line=dict(color=\"black\",width=1.5,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","2ea56d43":"fig  = px.scatter(merged_df,x='score 0',y='score 1',hover_name='TeamName').update_traces(marker=dict(color=color_1))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","456afdfd":"fig  = px.scatter(merged_df,x='score 1',y='score 2',hover_name='TeamName').update_traces(marker=dict(color=color_2))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","7bc23222":"fig  = px.scatter(merged_df,x='score 2',y='score 3',hover_name='TeamName').update_traces(marker=dict(color=color_4))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","caf30186":"fig  = px.scatter(merged_df,x='score 3',y='score 4',hover_name='TeamName').update_traces(marker=dict(color=color_7))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","8749e8f0":"fig  = px.scatter(merged_df,x='score 4',y='score 5',hover_name='TeamName').update_traces(marker=dict(color=color_6))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","5197be9f":"fig  = px.scatter(merged_df,x='score 5',y='score 6',hover_name='TeamName').update_traces(marker=dict(color=color_3))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","6085bbc8":"fig  = px.scatter(merged_df,x='score 6',y='score final',hover_name='TeamName').update_traces(marker=dict(color=color_5))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Old Leaderboard score\",\n    yaxis_title=\"New Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","778181c6":"fig  = px.scatter(merged_df,x='score 0',y='score final',hover_name='TeamName').update_traces(marker=dict(color=color_6))\nfig.update_layout(\n    title=\"The black line represents \u0394=0.\",\n    xaxis_title=\"Public Leaderboard score (September 27, 2021)\",\n    yaxis_title=\"Private Leaderboard score\",)\nfig.update_layout(xaxis = dict(range=[0.17,0.3]))\nfig.update_layout(yaxis = dict(range=[0.17,0.3]))\nfig.add_shape(type=\"line\",x0=0, y0=0, x1=250, y1=250,line=dict(color=\"black\",width=1,))\nfig.update_traces(mode='markers', marker_size=3)\nfig.show();","fea00653":"### Interactive shakeup scatterplot: Positions\n##### Shakeup #1","ba5ac674":"### Shakeup #4","60b7ed48":"### Shakeup #7","8ec8f2d3":"### Shakeup #2","24298b2f":"### Shakeup #6","98f25be2":"### Shakeup #7","a71567a3":"### Related reading\n* [Shakeup scatterplots: Boxes, strings and things...](https:\/\/www.kaggle.com\/carlmcbrideellis\/shakeup-scatterplots-boxes-strings-and-things)","6ff62b24":"### Shakeup #6","980bbcf7":"### Shakeup #5","835273b9":"### Final shakeup between Public and Private Leaderboard positions\n(the Public Leaderboard being the one on the final submission deadline of September 27, 2021)","6fcee48e":"### Final shakeup between Public and Private Leaderboard scores\n(the Public Leaderboard being the one on the final submission deadline of September 27, 2021)","408bd7db":"### Shakeup #5","6ef462aa":"### [Optiver Realized Volatility Prediction competition](https:\/\/www.kaggle.com\/c\/optiver-realized-volatility-prediction\/): Interactive shakeup scatterplots\n####  The \"Top 20\"\nNote: The entire merged scores dataframe can be found as a `csv` file in the **Data** section this notebook.\n\nNote: The team names are those as of September 2021, and may have been changed since.\n","a902e45a":"### Shakeup #3","ffd7556d":"### Shakeup #4","4e073a71":"### Shakeup #3","601683a4":"### Interactive shakeup scatterplot: Scores\n### Shakeup #1","faeee419":"### Shakeup #2"}}