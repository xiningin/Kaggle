{"cell_type":{"8623b557":"code","56242bd9":"code","5e132876":"code","ea402360":"code","63e0273f":"code","2ee9e02f":"code","1cb50699":"code","ad81ed33":"code","ba2a3a43":"code","d030e56e":"code","9ea5cb8b":"code","6d13cc32":"code","53136342":"code","366166e3":"code","6c2fc0f9":"code","37765f86":"code","22d553aa":"code","4fd4d173":"code","fdb66a68":"code","012f0784":"code","514d2de7":"markdown","71378e35":"markdown","b6b7e4e7":"markdown"},"source":{"8623b557":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","56242bd9":"train_path = \"..\/input\/train_V2.csv\"\ntrain_data = pd.read_csv(train_path, index_col=\"Id\")\ntrain_data.head()","5e132876":"test_path = \"..\/input\/test_V2.csv\"\ntest_data = pd.read_csv(test_path, index_col=\"Id\")\ntest_data.head()","ea402360":"train_data.info()","63e0273f":"columns = train_data.columns\nfor column in columns:\n    print(f\"{column}: {train_data[column].isna().sum()}\")","2ee9e02f":"data = train_data.copy()\ndata = data.dropna()","1cb50699":"columns = data.columns\nfor column in columns:\n    print(f\"{column}: {data[column].isna().sum()}\")","ad81ed33":"num_data = data.select_dtypes(include='number')","ba2a3a43":"num_data.info()","d030e56e":"# plt.figure(figsize=(15, 15))\n# sns.heatmap(data=num_data.corr(), annot=True, fmt='.1f')\n# plt.show()","9ea5cb8b":"# plt.figure(figsize=(15, 15))\n# sns.scatterplot(x=num_data.walkDistance, y=num_data.winPlacePerc)\n# plt.show()","6d13cc32":"# plt.figure(figsize=(15, 15))\n# sns.scatterplot(x=num_data.damageDealt, y=num_data.kills)\n# plt.show()","53136342":"# average number of kills\nprint(data.kills.mean())","366166e3":"# maximum kills by a player\nprint(data.kills.max())","6c2fc0f9":"y = num_data.winPlacePerc\nX = num_data.drop(columns='winPlacePerc')","37765f86":"test_X = test_data.select_dtypes(include='number')","22d553aa":"from sklearn.tree import DecisionTreeRegressor\n\nmodel = DecisionTreeRegressor()\nmodel.fit(X, y)","4fd4d173":"output = model.predict(test_X)","fdb66a68":"out = pd.DataFrame({'Id': test_X.index, 'winPlacePerc': output})","012f0784":"out.to_csv('submission.csv', index=False)","514d2de7":"**Data fields**\n- DBNOs - Number of enemy players knocked.\n- assists - Number of enemy players this player damaged that were killed by teammates.\n- boosts - Number of boost items used.\n- damageDealt - Total damage dealt. Note: Self inflicted damage is subtracted.\n- headshotKills - Number of enemy players killed with headshots.\n- heals - Number of healing items used.\n- Id - Player\u2019s Id\n- killPlace - Ranking in match of number of enemy players killed.\n- killPoints - Kills-based external ranking of player. (Think of this as an Elo ranking where only kills matter.) If there is a value other than -1 in rankPoints, then any 0 in killPoints should be treated as a \u201cNone\u201d.\n- killStreaks - Max number of enemy players killed in a short amount of time.\n- kills - Number of enemy players killed.\n- longestKill - Longest distance between player and player killed at time of death. This may be misleading, as downing a player and driving away may lead to a large longestKill stat.\n- matchDuration - Duration of match in seconds.\n- matchId - ID to identify match. There are no matches that are in both the training and testing set.\n- matchType - String identifying the game mode that the data comes from. The standard modes are \u201csolo\u201d, \u201cduo\u201d, \u201csquad\u201d, \u201csolo-fpp\u201d, \u201cduo-fpp\u201d, and \u201csquad-fpp\u201d; other modes are from events or custom matches.\n- rankPoints - Elo-like ranking of player. This ranking is inconsistent and is being deprecated in the API\u2019s next version, so use with caution. Value of -1 takes place of \u201cNone\u201d.\n- revives - Number of times this player revived teammates.\n- rideDistance - Total distance traveled in vehicles measured in meters.\n- roadKills - Number of kills while in a vehicle.\n- swimDistance - Total distance traveled by swimming measured in meters.\n- teamKills - Number of times this player killed a teammate.\n- vehicleDestroys - Number of vehicles destroyed.\n- walkDistance - Total distance traveled on foot measured in meters.\n- weaponsAcquired - Number of weapons picked up.\n- winPoints - Win-based external ranking of player. (Think of this as an Elo ranking where only winning matters.) If there is a value other than -1 in rankPoints, then any 0 in winPoints should be treated as a \u201cNone\u201d.\n- groupId - ID to identify a group within a match. If the same group of players plays in different matches, they will have a different groupId each time.\n- numGroups - Number of groups we have data for in the match.\n- maxPlace - Worst placement we have data for in the match. This may not match with numGroups, as sometimes the data skips over placements.\n- winPlacePerc - The target of prediction. This is a percentile winning placement, where 1 corresponds to 1st place, and 0 corresponds to last place in the match. It is calculated off of maxPlace, not numGroups, so it is possible to have missing chunks in a match.","71378e35":"from above plot we can say that as the walking distance of a player increases, chances of getting better placement increases. But some players placement is good despite very less walking distance. This may be due to a player playing in squad or duo mode.","b6b7e4e7":"since there is only one row with null value, we can safely drop that row"}}