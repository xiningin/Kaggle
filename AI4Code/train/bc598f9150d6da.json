{"cell_type":{"b9768f91":"code","d8a9d11a":"code","59bbcb4b":"code","bc507c86":"code","4dd6f278":"code","c52511fe":"code","58ad497b":"code","8cdd8114":"code","6b5f9640":"code","1e67c814":"code","0fa19a63":"code","339e2c2b":"code","c2f5480a":"code","121f9570":"code","4536ff91":"code","01da42bc":"code","65abed26":"code","5c0a8475":"code","9257977c":"code","9350f245":"code","aac2195d":"code","3213b583":"code","8cc7d8ea":"code","4a3e64d7":"code","38010ea3":"code","ceaad017":"code","d0135fff":"code","4d901737":"code","f20ab845":"code","6b6eba83":"code","5cf9c365":"code","7e563da8":"code","81ffe2f1":"code","edeeefa3":"code","f5691be4":"code","41c0965d":"code","2b15ae19":"code","2b6b16a7":"code","0255b198":"code","e280efdc":"code","f9710c8c":"code","5ff7e1f0":"code","9af57629":"code","5d68ac0e":"code","f8d4539f":"code","0e0ce4fe":"code","1a963f5a":"code","ba385b96":"markdown","1490c23c":"markdown","abc082d3":"markdown","4e4547a8":"markdown","c7eda14b":"markdown","d31ed288":"markdown"},"source":{"b9768f91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8a9d11a":"import matplotlib.pyplot as plt\nimport seaborn as sns","59bbcb4b":"df=pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")\ndf.head()","bc507c86":"df.isnull().sum() #no missing data","4dd6f278":"df.info()","c52511fe":"df.describe()","58ad497b":"plt.figure(figsize=(12,7))\nsns.distplot(df[\"price\"])\n#The range goes up to 8e6, but the frequency on those values is very low, meaning those values are outliers","8cdd8114":"sns.countplot(df[\"bedrooms\"])","6b5f9640":"df.corr().price.sort_values()","1e67c814":"plt.figure(figsize=(12,7))\nsns.scatterplot(x=\"price\",y=\"sqft_living\", data=df)","0fa19a63":"plt.figure(figsize=(12,7))\nsns.boxplot(x=\"bedrooms\",y=\"price\",data=df)","339e2c2b":"plt.figure(figsize=(12,7))\nsns.scatterplot(x=\"price\",y=\"long\", data=df)","c2f5480a":"plt.figure(figsize=(12,7))\nsns.scatterplot(x=\"price\",y=\"lat\", data=df)","121f9570":"plt.figure(figsize=(12,7))\nsns.scatterplot(x=\"long\",y=\"lat\", data=df, hue=\"price\") ","4536ff91":"df.sort_values(\"price\", ascending=False).head(30)","01da42bc":"len(df)*0.01","65abed26":"no_outliers=df.sort_values(\"price\", ascending=False).iloc[217:]","5c0a8475":"plt.figure(figsize=(12,7))\nsns.scatterplot(x=\"long\",y=\"lat\", data=no_outliers, edgecolor=None,palette=\"RdYlGn\", alpha=\n                0.3, hue=\"price\") ","9257977c":"plt.figure(figsize=(12,7))\nsns.boxplot(x=\"waterfront\",y=\"price\",data=df)","9350f245":"plt.figure(figsize=(12,7))\nsns.distplot(no_outliers[\"price\"])","aac2195d":"df=no_outliers","3213b583":"df.drop(\"id\", axis=1, inplace=True)","8cc7d8ea":"df[\"date\"]=pd.to_datetime(df[\"date\"])\ndf[\"year\"]=df[\"date\"].apply(lambda date: date.year)\ndf.drop(\"date\",axis=1,inplace=True)","4a3e64d7":"df[\"zipcode\"].value_counts() #This feature could be reengineered into something more useful with domain knowledge\ndf.drop(\"zipcode\",axis=1,inplace=True)","38010ea3":"df[\"yr_renovated\"].value_counts()","ceaad017":"df.iloc[1][\"yr_renovated\"]","d0135fff":"not_renov=list(df[\"yr_renovated\"]==0)\nyr_renov=[]\nfor i in range(0,len(not_renov)):\n    if not_renov[i]:\n        yr_renov.append(df.iloc[i][\"yr_built\"])\n    else:\n        yr_renov.append(df.iloc[i][\"yr_renovated\"])\ndf[\"yr_renovated\"]=yr_renov\ndf[\"built_to_renov\"]=df[\"yr_renovated\"]-df[\"yr_built\"]\ndf[\"renov_to_sold\"]=df[\"year\"]-df[\"yr_renovated\"]\ndf.drop([\"yr_renovated\",\"year\"],axis=1,inplace=True)","4d901737":"df[\"sqft_basement\"].value_counts()","f20ab845":"df.drop([\"lat\",\"long\"],axis=1,inplace=True)","6b6eba83":"df.head()","5cf9c365":"X = df.drop('price',axis=1)\ny = df['price']","7e563da8":"from sklearn.model_selection import train_test_split","81ffe2f1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","edeeefa3":"from sklearn.preprocessing import MinMaxScaler","f5691be4":"scaler=MinMaxScaler()\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)","41c0965d":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation\nfrom tensorflow.keras.optimizers import Adam","2b15ae19":"X_train.shape","2b6b16a7":"model = Sequential()\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(10,activation='relu'))\nmodel.add(Dense(5,activation='relu'))\nmodel.add(Dense(3,activation='relu'))\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='adam',loss='mse')","0255b198":"model.fit(x=X_train,y=y_train.values,validation_data=(X_test,y_test.values),\n          batch_size=128,epochs=400)","e280efdc":"losses = pd.DataFrame(model.history.history)\nlosses.plot()","f9710c8c":"from sklearn.metrics import mean_squared_error, mean_absolute_error, explained_variance_score","5ff7e1f0":"predictions=model.predict(X_test)","9af57629":"np.sqrt(mean_squared_error(y_test,predictions))","5d68ac0e":"mean_absolute_error(y_test,predictions)","f8d4539f":"df[\"price\"].describe()","0e0ce4fe":"explained_variance_score(y_test,predictions)","1a963f5a":"plt.figure(figsize=(15,8))\nplt.scatter(y_test,predictions)\nplt.plot(y_test,y_test,\"r\")","ba385b96":"# Since we have year of sale, year of construction and year of renovation, we will engineer these into two more consistent features: Years between building and renovation and years between renovation and sale","1490c23c":"# EDA","abc082d3":"# Modeling","4e4547a8":"# Removing the outliers might improve the fit of our model, and so we will make a model only for house up to 2.5 mi dollars","c7eda14b":"# We will leave \"sqft_basement\" as is since the number 0 indicates the absence of a basement","d31ed288":"# Feature Engineering"}}