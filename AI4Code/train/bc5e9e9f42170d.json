{"cell_type":{"56b78f73":"code","748bdc72":"code","fdca0cd6":"code","2fdb8996":"code","f7a4f01e":"code","243d79ad":"code","cca9967e":"code","8e7771b7":"code","3a090139":"code","bc89fcce":"code","001283ac":"code","024250b1":"code","e7fb7176":"code","33cca937":"code","3436e275":"code","91eb79dd":"code","2cfc5eba":"code","5458bff8":"code","68cc0b78":"code","8ecbe3d2":"code","4abf2fa5":"code","fa0108be":"code","3b594739":"code","6555758b":"code","d2e356da":"code","b0cf3175":"code","7100f77b":"code","94ac0b6a":"code","9f77005c":"code","b47d8f31":"code","925aeb47":"markdown","6880d879":"markdown","71aead88":"markdown","acc24baa":"markdown","82c09a95":"markdown","ea4acff1":"markdown","ec2fdd47":"markdown","3214134f":"markdown","f99d51c9":"markdown","d60dbd0c":"markdown","6916ae5a":"markdown","a9283077":"markdown","d54fa17a":"markdown","1289109f":"markdown","15918132":"markdown","2b5f12dc":"markdown"},"source":{"56b78f73":"# Writed By Mostafa Hassani\n# Version 1\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom bidi.algorithm import get_display\n#from arabic_reshaper import reshape\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","748bdc72":"DF_HR  = pd.read_csv(\"\/kaggle\/input\/dataset-hr\/HR.csv\")","fdca0cd6":"DF_HR.head()","2fdb8996":"DF_HR.info()","f7a4f01e":"DF_HR.describe().T","243d79ad":"Columns = DF_HR.columns\nfor Col in Columns:\n    Uniques = DF_HR[Col].unique()\n    print(\"Uniques Data Of {} is : \".format(Col))\n    print(np.sort(Uniques))\n    print()    ","cca9967e":"pd.value_counts(DF_HR['salary']).plot.pie()","8e7771b7":"def Bar_Lable(plot,N_Fraction):\n    for p in plot.patches:\n        plot.annotate(format(p.get_height(), N_Fraction), \n                      (p.get_x() + p.get_width() \/ 2, p.get_height()+(p.get_height()\/50)),\n                      ha='center', va='center')","3a090139":"plt.figure(figsize=(8, 8))\nPlot = sns.countplot(x='salary', data=DF_HR)\nBar_Lable(Plot,'.0f')","bc89fcce":"plt.figure(figsize=(15, 6))\nPlot = sns.countplot(x='department', data=DF_HR)\nPlot.set_xticklabels(Plot.get_xticklabels(), rotation=45)\nBar_Lable(Plot,'.0f')","001283ac":"plt.figure(figsize=(15, 6))\nPlot = sns.countplot(x='department', data=DF_HR, hue='salary')\nPlot.set_xticklabels(Plot.get_xticklabels(), rotation=45)\nBar_Lable(Plot,'.0f')","024250b1":"DF_HR[DF_HR['left']==0].sort_values([\"number_project\",\"satisfaction_level\"],ascending=False).head(20)","e7fb7176":"Last_Evaluation = DF_HR['last_evaluation'][DF_HR['left']==0].sort_values(ascending=False)\nDF_LE = pd.DataFrame(Last_Evaluation,columns=['last_evaluation'])\nprint(Last_Evaluation.min(),\"==>\",Last_Evaluation.max())\nprint(DF_LE.head(15))\nplt.xlim(0.35,1.05)\nplt.xticks(np.arange(0.35, 1.05, step=0.05),rotation=45)\nsns.distplot(DF_LE, hist=True, kde=False,bins=15, rug=False )","33cca937":"Cor = np.abs(DF_HR.corrwith(DF_HR['left']))\nprint(Cor.sort_values(ascending=False))\n\nplt.figure(figsize=(12,8))\nsns.heatmap(DF_HR.corr(),annot=True,linewidths=0.1,cmap=\"RdBu\")","3436e275":"plt.figure(figsize=(15,5))\nData_Left = DF_HR[DF_HR['left']==1]\nsns.swarmplot(x='department', y='time_spend_company' ,data=Data_Left)","91eb79dd":"plt.figure(figsize=(15,5))\nplt.xticks(rotation=45)\nsns.boxplot(x='department', y='time_spend_company', data=DF_HR, hue='left')","2cfc5eba":"plt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nsns.boxplot(x='last_evaluation', data=DF_HR[DF_HR['left']==0])\nplt.xlim(0.35,1.05)\nplt.xticks(np.arange(0.35, 1.05, step=0.05))\nplt.subplot(1,2,2)\nsns.distplot(DF_HR['last_evaluation'][DF_HR['left']==0],bins=11)","5458bff8":"plt.figure(figsize=(20,5))\nplt.subplot(1,3,1)\nplt.xlim(0.35,1.05)\nplt.xticks(np.arange(0.35, 1.05, step=0.05),rotation=45)\nsns.histplot(x='last_evaluation', data=DF_HR, hue='left',bins=11)\nplt.subplot(1,3,2)\nplt.xlim(0.35,1.05)\nplt.xticks(np.arange(0.35, 1.05, step=0.05),rotation=45)\nsns.histplot(x='last_evaluation', data=DF_HR[DF_HR['left']==0],bins=11)\nplt.subplot(1,3,3)\nplt.xlim(0.35,1.05)\nplt.xticks(np.arange(0.35, 1.05, step=0.05),rotation=45)\nsns.histplot(x='last_evaluation', data=DF_HR[DF_HR['left']==1],bins=11)","68cc0b78":"plt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nplt.xlim(0.05,1.05)\nplt.title(\"Personnel who have not resigned\")\nplt.xticks(np.arange(0.05, 1.05, step=0.05),rotation=45)\nsns.histplot(x='satisfaction_level', data=DF_HR[DF_HR['left']==0], bins=20)\nplt.subplot(1,2,2)\nplt.xlim(0.05,1.05)\nplt.title(\"Personnel who have resigned\")\nplt.xticks(np.arange(0.05, 1.05, step=0.05),rotation=45)\nsns.histplot(x='satisfaction_level', data=DF_HR[DF_HR['left']==1], bins=20)","8ecbe3d2":"plt.figure(figsize=(15,5))\nplt.xticks(rotation=45)\nPlot = sns.countplot(x='department', data=DF_HR[DF_HR['left']==0],hue='salary')\nBar_Lable(Plot,'.0f')","4abf2fa5":"# salary_dict = {'low':0,'medium':1,'high':2}\n# DF_HR['salary_num'] = DF_HR.salary.map(salary_dict)\n# DF_HR.drop('salary', inplace=True, axis=1)\n# DF_HR = DF_HR.rename(index=str, columns={'salary_num':'salary'})\nDF_HR['salary'] = DF_HR['salary'].replace({'low':1, 'medium':2, 'high':3})\nDF_HR.head()","fa0108be":"Temp = pd.get_dummies(DF_HR['department'],drop_first=True)\nDF_HR = pd.concat([DF_HR, Temp], axis=1)\nDF_HR.drop(['department'],axis=1, inplace=True)\nDF_HR.head()","3b594739":"from sklearn.preprocessing import MinMaxScaler\nFeatures = ['satisfaction_level','last_evaluation','number_project','average_montly_hours','time_spend_company',\n            'Work_accident','promotion_last_5years','salary']\nScaler = MinMaxScaler()\nDF_HR[Features] = Scaler.fit_transform(DF_HR[Features])\nDF_HR.head()","6555758b":"from sklearn.model_selection import train_test_split\n\nX_DF_HR = DF_HR.drop('left', axis=1)\nY_DF_HR = DF_HR['left']\nX_Train, X_Test, Y_Train, Y_Test = train_test_split(X_DF_HR,Y_DF_HR,test_size=0.3, train_size=0.7, random_state=100,\n                                                    shuffle=True, stratify=(Y_DF_HR))","d2e356da":"sns.countplot(DF_HR['left'])","b0cf3175":"from sklearn.utils import class_weight\nClass_weights = class_weight.compute_class_weight('balanced', np.unique(Y_Train), Y_Train)\nClass_weights = dict(zip(np.unique(Y_Train), class_weight.compute_class_weight('balanced', np.unique(Y_Train), Y_Train)))\nClass_weights","7100f77b":"def Model(Kind):\n    EXE_Model = Kind(class_weight=Class_weights)\n    EXE_Model.fit(X_Train,Y_Train)\n    Predicted_Model = EXE_Model.predict(X_Test)\n    Acc_Test = accuracy_score(Predicted_Model,Y_Test)\n    print('Accuracy on Train: {:.3f}'.format(EXE_Model.score(X_Train,Y_Train)))\n    print('Accuracy on Test : {:.3f}'.format(Acc_Test))\n    print(classification_report(Y_Test, Predicted_Model))\n    print('Confusion Matrix:')\n    print(confusion_matrix(Y_Test, Predicted_Model))    ","94ac0b6a":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report #Metrics\nfrom sklearn.metrics import confusion_matrix #Metrics\nfrom sklearn.metrics import accuracy_score #Metrics\n\nModel(LogisticRegression)","9f77005c":"from sklearn.ensemble import RandomForestClassifier\n\nModel(RandomForestClassifier)","b47d8f31":"from sklearn.svm import SVC\n\nModel(SVC)","925aeb47":"# *The latest status of the evaluation of personnel who did not suffer a decline in the company in a downward direction*","6880d879":"# *Analysis of staff drop chart based on the type of department and the average time spent in the organization*","71aead88":"# *Compare the histogram of the latest evaluation status of personnel who have suffered a loss and personnel who will be active in the company in one format*","acc24baa":"# **Scaling**","82c09a95":"# *Comparison of distribution and box chart of loyal personnel of the organization based on the latest evaluation status of the organization's people in one frame*","ea4acff1":"# **Number of people employed in each department**","ec2fdd47":"# **Weighting**","3214134f":"# *Changing Categorical to numerical*","f99d51c9":"# **Number of people hired based on salary level and type of department**","d60dbd0c":"# *Maximum number of projects that personnel who have resigned did, based on satisfaction level*","6916ae5a":"# **Number of people hired based on salary level**","a9283077":"# *Comparison of satisfaction histogram of personnel  who have resigned and personnel who will be active in the company in one format*","d54fa17a":"# *Graph the number of people working in each data department according to the amount of income (bar chart)*","1289109f":"# *The most influential component on the problem target based on correlation detection*","15918132":"# *Box plot of all departments in terms of loss of personnel, and the average time spent in the organization in a frame*","2b5f12dc":"# **Train Test Split**"}}