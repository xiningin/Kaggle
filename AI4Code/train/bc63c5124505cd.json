{"cell_type":{"e96bd81c":"code","ea7c75f5":"code","68569275":"code","53e8be54":"code","81f9ec49":"code","9e696bf1":"code","8323cabc":"code","fb122b79":"code","83d4e4ed":"code","4436da17":"code","c026697a":"code","2270ca27":"code","e93036de":"code","9ed23d1b":"code","e6b2c593":"code","2d1d713c":"code","c4cdb13c":"code","b7b58331":"code","c7dd1bdd":"code","c1f88450":"code","f5fc987e":"code","16c6d867":"code","0e40efd8":"code","1f492884":"code","2d5c447d":"code","32fa53f6":"code","221e627e":"code","1e19b372":"code","19e69d75":"code","d271e813":"code","1c2fc9cf":"code","0c18040c":"code","e08939fe":"code","84425876":"code","35a1d061":"code","70c4af32":"code","d4ede093":"code","ad74a4e3":"code","d6ff0600":"code","577722cf":"code","ff62330c":"code","7bf9a205":"code","8146c329":"code","2a34dd91":"code","07cf75f6":"code","b1dadc93":"code","bfc9102a":"code","d40ca500":"code","be788097":"code","234d8854":"code","1791fa78":"code","7e51dea8":"code","989c3dca":"code","e2bac9a0":"code","cbd4db95":"code","1bfc6634":"code","892b2ba5":"markdown","59e67819":"markdown","cf954cf6":"markdown","c700e08a":"markdown","a4d04fe1":"markdown","9693cf8a":"markdown","036c603c":"markdown","01cfba4f":"markdown","12c1abd1":"markdown","300b15fa":"markdown","ce733c4a":"markdown","91610925":"markdown","7113f8e5":"markdown","c1d19288":"markdown","4da47f91":"markdown","8b077aaf":"markdown"},"source":{"e96bd81c":"#  This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas_profiling\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ea7c75f5":"import geopandas\nimport seaborn as sns\nsns.set()\nimport matplotlib.pyplot as plt\n%matplotlib inline","68569275":"df = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","53e8be54":"\ndf.profile_report()","81f9ec49":"#Shape of dataframe\ndf.shape","9e696bf1":"#describing all the columns in our dataset\ndf.columns","8323cabc":"#by default head shows us top 5 records\ndf.head()","fb122b79":"sns.boxplot(x= df['price']) # correct the range of box plot or remove it\n#explain what this boxplot is depicting here instead of what box plot represents in general","83d4e4ed":"plt.figure(figsize=(16, 6))\nsns.boxplot(x=\"neighbourhood_group\", y=\"price\", data=df)","4436da17":"#method1\nplt.figure(figsize=(16, 6))\nsns.scatterplot(x=\"neighbourhood\", y=\"price\", data=df.sort_values('price', ascending=False).head(10))","c026697a":"#method2\nplt.figure(figsize =(18,7))\nsns.barplot(x=\"neighbourhood\", y=\"price\", data=df.nlargest(10,['price']))","2270ca27":"print (\"Total Neighbourhoods: \", len(np.unique(df.neighbourhood)))","e93036de":"#using groupby to group two columns neighbourhood and price also find mean of price along with sorting the values and resetting index\ndf_top_prices_by_neighbourhood = df.groupby('neighbourhood').agg({'price': 'mean'}).sort_values('price').reset_index()","9ed23d1b":"#showing columns in dataframe\ndf_top_prices_by_neighbourhood.columns","e6b2c593":"plt.figure(figsize=(25, 10))\nsns.barplot(x=\"neighbourhood\", y=\"price\", data=df_top_prices_by_neighbourhood.head(20))","2d1d713c":"df_host_popularity = df.groupby('host_id').agg({'number_of_reviews': 'sum'})","c4cdb13c":"#finding total_reviews\ntotal_reviews = df.number_of_reviews.sum()\ntotal_reviews","b7b58331":"df_host_popularity['popularity_index'] = df_host_popularity['number_of_reviews']. \\\n                                                apply(lambda x: x\/float(total_reviews)*100)","c7dd1bdd":"#sorting and showing top 10 values\ndf_host_popularity.sort_values('popularity_index', ascending=False).head(10)","c1f88450":"df_host_popularity = df_host_popularity.reset_index()\n#deleting number_of_reviews column\ndel df_host_popularity['number_of_reviews']","f5fc987e":"df_host_popularity.head(10)","16c6d867":"#merging dataframes\ndf = pd.merge(df, df_host_popularity)","0e40efd8":"df.head()","1f492884":"#df[df.minimum_nights > 7].sort_values('popularity_index', ascending=False).head(20)['neighbourhood']\np_inde_filtered = df.filter([\"neighbourhood\",\"minimum_nights\",'popularity_index'])\nnew = p_inde_filtered.query('minimum_nights>7')\nnew1 = new.sort_values('popularity_index', ascending=False).head(20)\nnew1['neighbourhood']\n","2d5c447d":"df_popular_regions = df.groupby('neighbourhood').agg({'popularity_index': 'sum'}).reset_index()","32fa53f6":"plt.figure(figsize=(18, 7))\nsns.barplot(x='neighbourhood', y='popularity_index', data=df_popular_regions.sort_values('popularity_index', \n                                                                                        ascending=False).head(10))","221e627e":"df_n_roomtype = df.groupby(['neighbourhood','room_type']).agg({'price':'sum'})\ndf_n_roomtype","1e19b372":"df_n_roomtype = pd.pivot_table(df_n_roomtype, values='price', index=['neighbourhood'], columns=['room_type'])","19e69d75":"#Maximum revenue in Private Rooms\ndf_n_roomtype.sort_values('Private room', ascending = False).head(1)","d271e813":"#Minimum revenue in Private Rooms\ndf_n_roomtype.sort_values('Private room', ascending = True).head(1)","1c2fc9cf":"#Maximum revenue in Entire home\/apt\ndf_n_roomtype.sort_values('Entire home\/apt', ascending = False).head(1)","0c18040c":"#Minimum revenue in Entire home\/apt\ndf_n_roomtype.sort_values('Entire home\/apt', ascending = True).head(1)","e08939fe":"#Maximum revenue in Shared room\ndf_n_roomtype.sort_values('Shared room', ascending = False).head(1)","84425876":"#Minimum revenue in Shared room\ndf_n_roomtype.sort_values('Shared room', ascending = True).head(1)","35a1d061":"df_neighbourhood_room_type_mean = df.groupby(['neighbourhood', 'room_type']) \\\n                                                .agg({'price': 'mean'}).reset_index()","70c4af32":"#renaming a column\ndf_neighbourhood_room_type_mean = df_neighbourhood_room_type_mean.rename(columns = {'price': 'average_region_price'})\n#creating a pivot table\ndf_neighbourhood_room_type_mean_pivot = pd.pivot_table(df_neighbourhood_room_type_mean, values='average_region_price', \n                           index=['neighbourhood'], columns=['room_type'])","d4ede093":"#Plotting \nimport matplotlib.pyplot as plt\nax=df_neighbourhood_room_type_mean_pivot.sort_values('Private room', ascending=False).head().plot(kind='bar', width = 0.5)\nax.set_xlabel('neighbourhood', fontsize = 20)\nax.set_ylabel('average_price', fontsize = 20)\nlabels=list(df_neighbourhood_room_type_mean_pivot.sort_values('Private room', ascending=False).index[:5])\nax.set_xticklabels(rotation=30,labels=labels,fontsize=10)\nplt.show()\n# fig_size = plt.rcParams[\"figure.figsize\"]\n# plt.figure(figsize=(20,10))\n# #fig_size[0] = 20\n# #fig_size[1] = 10\n# #ax = plt.gca()\n# for tick in ax.xaxis.get_major_ticks():\n#     tick.label.set_fontsize(20) \n#     tick.label.set_rotation('horizontal')\n# for tick in ax.yaxis.get_major_ticks():\n#     tick.label.set_fontsize(16)     \n# # plt.rcParams[\"figure.figsize\"] = fig_size\n# plt.legend(prop={'size':'15'})\n# plt.show(ax)","ad74a4e3":"df_neighbourhood_sum = df.groupby('neighbourhood').agg({'number_of_reviews': 'sum'}).reset_index()","d6ff0600":"df_neighbourhood_host_sum = df.groupby(['host_id', 'neighbourhood']).agg({'number_of_reviews': 'sum'}).reset_index()","577722cf":"#renaming columns\ndf_neighbourhood_sum = df_neighbourhood_sum.rename(columns = {'number_of_reviews': 'sum_of_reviews'})","ff62330c":"#merging\ndf_neighbourhood_host_merged = pd.merge(df_neighbourhood_host_sum, df_neighbourhood_sum)","7bf9a205":"df_neighbourhood_host_merged.head()","8146c329":"df_neighbourhood_host_merged['host_neighbourhood_popularity'] = df_neighbourhood_host_merged.apply(lambda x: x['number_of_reviews']\/float(x['sum_of_reviews'])*100 \\\n                                       if x['sum_of_reviews'] != 0 else 0, \n                                                                   axis=1)","2a34dd91":"df_neighbourhood_host_merged.sort_values('host_neighbourhood_popularity', ascending=False).head()","07cf75f6":"#deleting columns\ndel df_neighbourhood_host_merged['sum_of_reviews']\ndel df_neighbourhood_host_merged['number_of_reviews']","b1dadc93":"df_neighbourhood_host_merged[df_neighbourhood_host_merged['neighbourhood'] == 'Baychester']","bfc9102a":"df = pd.merge(df, df_neighbourhood_host_merged)","d40ca500":"df[df.host_neighbourhood_popularity > 90] \\\n[['host_id', 'host_name', 'neighbourhood', 'neighbourhood_group', 'host_neighbourhood_popularity']]","be788097":"df_neighbourhood_room_type_mean = df[df['room_type'] != 'Shared room'].groupby(['neighbourhood', 'room_type']) \\\n                                                .agg({'price': 'mean'}).reset_index()","234d8854":"df_neighbourhood_room_type_mean = df_neighbourhood_room_type_mean.rename(columns = {'price': 'average_region_price'})","1791fa78":"df = pd.merge(df, df_neighbourhood_room_type_mean)","7e51dea8":"df[df['neighbourhood'] == 'Baychester']","989c3dca":"df_neighbourhood_room_type_mean_pivot = pd.pivot_table(df_neighbourhood_room_type_mean, values='average_region_price', \n                           index=['neighbourhood'], columns=['room_type'])","e2bac9a0":"#Plotting \n\n\nimport matplotlib.pyplot as plt\nax=df_neighbourhood_room_type_mean_pivot.sort_values('Private room', ascending=False).head().plot(kind='bar', width = 0.5)\nax.set_xlabel('neighbourhood', fontsize = 20)\nax.set_ylabel('average_price', fontsize = 20)\nlabels=list(df_neighbourhood_room_type_mean_pivot.sort_values('Private room', ascending=False).index[:5])\nax.set_xticklabels(rotation=30,labels=labels,fontsize=10)\nplt.show()","cbd4db95":"df['region_price_margin'] = df.apply(lambda x: ((x['price'] - x['average_region_price'])\/x['price'])*100 if x['price'] != 0 else 0, axis=1)","1bfc6634":"df.head()","892b2ba5":"**Finding Outliers**\n\nFor 1 particular column","59e67819":"**10 most popular hosts based on number_of_reviews**","cf954cf6":"**Which neighbourhood is generating maximum and minimum revenues in terms of private rooms,shared rooms and entire homes?**","c700e08a":"** Neighbourhood\u2019s average price so that I am able to pick an economical location to book my hotel.**","a4d04fe1":"\n![new york](https:\/\/www.worldatlas.com\/upload\/c6\/23\/73\/shutterstock-152208935.jpg)","9693cf8a":"> > > The pivot table takes simple column-wise data as input, and groups the entries into a two-dimensional table that provides a multidimensional summarization of the data.","036c603c":"> > > The graph above is depicting outliers for different neighbourhood groups.\n\n> >  Outliers can be defined as an observation that lies an abnormal distance from other values in a random sample from a population.\n","01cfba4f":"**Average price income for private rooms and entire homes for each of the neighbourhoods?**","12c1abd1":"![bnb](https:\/\/img4.cityrealty.com\/neo\/i\/p\/mig\/airbnb_guide.jpg)","300b15fa":"** Plot showing top 10 neighbourhoods with highest hotel prices.**","ce733c4a":"> > > This type of graph is used to show the shape of the distribution, its central value, and its variability.\n> > \n> > > It is especially useful for indicating whether a distribution is skewed and whether there are potential unusual observations (outliers) in the data set.","91610925":"**The most popular regions based on the host_id\u2019s popularity_index**\n","7113f8e5":"**The average price income for private rooms,shared rooms and entire homes for each of the neighbourhoods is shown below.**","c1d19288":"**Top locations where people tend to stay for a longer duration (more than a week) and sorted by their popularity index**","4da47f91":"**Relative price difference of that host with respect to the neighbourhood\u2019s average pricing**","8b077aaf":"**Host_id\u2019s popularity in its neighbourhood**"}}