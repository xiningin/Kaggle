{"cell_type":{"28f29f16":"code","083e65ca":"code","e8f4babe":"code","9e82008d":"code","c1c9ef28":"code","f9f50c5d":"code","1d725c50":"markdown","6982ba90":"markdown","22cddbb4":"markdown"},"source":{"28f29f16":"import os\nimport pandas as pd\nimport joblib as jb\nfrom tqdm.auto import tqdm, trange\nimport gc","083e65ca":"def get_N(folder = \"..\/input\/us-weather-daily-summaries-1991-2016\/data\", filename = \"weather\", ext = \"csv\"):\n    \n    \"\"\"\n    Get total number of batches files present in the directory.\n    \"\"\"\n    \n    N = 0\n    while True:\n        if os.path.isfile(\"{}\/{}_{}.{}\".format(folder, filename, N, ext)):\n            N += 1\n        else:\n            break\n    \n    return N\n\n\ndef read_df(i_min, i_max, folder = \"..\/input\/us-weather-daily-summaries-1991-2016\/data\", filename = \"weather\", ext = \"csv\", n_jobs=-1, progress=True):\n    \n    \"\"\"\n    Load a part of batches file in one dataframe.\n    \"\"\"\n    \n    df = jb.Parallel(n_jobs=n_jobs)(\n        jb.delayed(pd.read_csv)(\"{}\/{}_{}.{}\".format(folder, filename, i, ext))\n        for i in tqdm(range(i_min,i_max), desc=\"Loading dataset\", disable=not progress)\n    )\n    df = pd.concat(df, axis=0, ignore_index=True)\n    \n    return df","e8f4babe":"N = get_N()\nprint(\"Number of batches files: {}\".format(N))","9e82008d":"df = read_df(0,50)\ndisplay(df.head())\ndisplay(df.info())","c1c9ef28":"def get_null_matrix(path):\n    df = pd.read_csv(path)\n    null_matrix = df.groupby(\"STATION\").apply(lambda col: col.isnull().any())\n    del df; gc.collect()\n    return null_matrix\n\n\ndef get_batches_null_matrix(folder=\"..\/input\/us-weather-daily-summaries-1991-2016\/data\", filename=\"weather\", ext=\"csv\", n_jobs=-1, progress=True):\n\n    N = get_N(folder=folder, filename=filename, ext=ext)\n    \n    null_matrix = jb.Parallel(n_jobs=n_jobs)(\n        jb.delayed(get_null_matrix)(\"{}\/{}_{}.{}\".format(folder,filename,i,ext))\n        for i in trange(N, desc=\"Null matrix\", disable=not progress)\n    )\n    null_matrix = pd.concat(null_matrix, axis=0)\n    \n    gc.collect()\n    return null_matrix\n\n\nnull_matrix = get_batches_null_matrix()\ndisplay(null_matrix.head())\ndisplay(null_matrix.info())","f9f50c5d":"drop_cols = null_matrix.all().loc[lambda x: x].index.tolist()\nprint(\"Columns containing only missing values: {}\/{} ({:.0%})\".format(len(drop_cols), null_matrix.shape[1], len(drop_cols)\/null_matrix.shape[1]))\nprint(drop_cols)","1d725c50":"# Dataset","6982ba90":"Avoid reading the entire dataset because notebook will try to allocate more memory than the available.","22cddbb4":"# Preprocessing"}}