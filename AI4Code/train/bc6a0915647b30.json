{"cell_type":{"520c2722":"code","675dcdb7":"code","a65c7ed2":"code","2e223cc4":"code","1cf2d31e":"code","abebc5db":"code","7eee0a3d":"code","efb465bd":"code","3b51123d":"code","01afd540":"code","aafc5be2":"code","8b303bf8":"code","b3df3512":"code","eca2fa47":"markdown","e740b47d":"markdown","bbb39e7c":"markdown"},"source":{"520c2722":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.express as px\npy.offline.init_notebook_mode(connected = True)\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","675dcdb7":"df = pd.read_csv('..\/input\/pulsepoint-respond-local-threats-and-emergency\/PulsePoint-emergencies-cleaned.csv', delimiter=',', encoding = \"utf8\")\n\ndf.head()","a65c7ed2":"df1 = pd.read_csv('..\/input\/pulsepoint-respond-local-threats-and-emergency\/PulsePoint_local_threats_emergencies.csv', delimiter=',', encoding = \"utf8\")\n\ndf1.head()","2e223cc4":"!pip install dataprep","1cf2d31e":"! python -m pip install \"dask[dataframe]\" --upgrade  # or python -m pip install","abebc5db":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","7eee0a3d":"plot_missing(df)","efb465bd":"plot_missing(df1)","3b51123d":"plot(df)","01afd540":"plot(df, \"location\")","aafc5be2":"plot(df, \"time_of_the_day\")","8b303bf8":"plot_correlation(df)","b3df3512":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'red',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"time_of_the_day\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Time of the Day of Emergencies\")\nplt.show()","eca2fa47":"![](https:\/\/p1cdn4static.civiclive.com\/UserFiles\/Servers\/Server_11492833\/Image\/Departments\/Fire%20Department\/Pulse%20Point\/PulsePoint%20animation.jpg)cityofcollegepark\nhttps:\/\/www.collegeparkga.com\/departments\/fire_department\/pulse_point","e740b47d":"#Pulse Point Emergencies\n\n\"PulsePoint Respond is a 911-connected mobile app that can immediately inform you of emergencies occurring in your community and can request your help when cardiopulmonary resuscitation (CPR) is needed nearby.\"\n\nhttps:\/\/apps.apple.com\/us\/app\/pulsepoint-respond\/id500772134","bbb39e7c":"It was strange since the last Dataprep (plot df) input 42  shows Morning as the time of the day with more emergencies. Though the WordCloud  has only displayed Midnight (the 2nd one on input 42 chart).\n\nThat's all for now. \n\n#Thanks Ahmed Shahriar Sakib for the the useful Dataset. "}}