{"cell_type":{"46712aec":"code","9963c167":"code","3ba6e266":"code","b5e0de34":"code","dd4fed39":"code","04f90ff5":"code","f2ae24fa":"code","3383ef1f":"code","fd0a120e":"code","6c35e60e":"code","17b9ddf9":"code","a1f02b16":"code","0050c865":"code","9bbcdfb8":"code","1353d162":"code","bd481e56":"code","2dd96871":"code","c7dc011a":"code","bc5139f7":"code","81562731":"code","dcfb3b31":"code","1a0eb497":"code","98e7083e":"markdown","706c5b5a":"markdown","9affdcec":"markdown","c3b54461":"markdown"},"source":{"46712aec":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import cross_val_score, KFold\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, roc_auc_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nimport lightgbm as lgb\nfrom catboost import CatBoostClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import VotingClassifier\nimport time\nfrom contextlib import contextmanager","9963c167":"churn_data = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')","3ba6e266":"churn_data.info() # NAN value bulunmamaktadir.","b5e0de34":"churn_data.head()","dd4fed39":"churn_data.drop(labels=['RowNumber','CustomerId','Surname'],\n                axis=1,\n                inplace=True)","04f90ff5":"churn_data.head()","f2ae24fa":"categorical_features = [\"Geography\",\"Gender\",\"NumOfProducts\",\"HasCrCard\",\"IsActiveMember\"]\n\nnumerical_features = [\"CreditScore\",\"Age\",\"Tenure\",\"Balance\",\"EstimatedSalary\"]\n\ntarget = \"Exited\"","3383ef1f":"churn_data[numerical_features].describe()","fd0a120e":"churn_data[numerical_features].hist(bins=30, figsize=(10, 10));","6c35e60e":"fig, ax = plt.subplots(1, 5, figsize=(30, 5))\nchurn_data[churn_data.Exited == 0][numerical_features].hist(bins=30, color=\"blue\", alpha=0.5, ax=ax);\nchurn_data[churn_data.Exited == 1][numerical_features].hist(bins=30, color=\"red\", alpha=0.5, ax=ax);","17b9ddf9":"g = sns.pairplot(churn_data,hue = 'Exited',corner=True)","a1f02b16":"# Import label encoder \nfrom sklearn import preprocessing \n  \n# label_encoder object knows how to understand word labels. \nlabel_encoder = preprocessing.LabelEncoder() \n  \n# Encode labels in column 'species'. \nchurn_data[\"Geography\"] = label_encoder.fit_transform(churn_data[\"Geography\"])\nchurn_data[\"Gender\"] = label_encoder.fit_transform(churn_data[\"Gender\"])","0050c865":"churn_data.head()","9bbcdfb8":"churn_data[numerical_features].describe()","1353d162":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler() \ndata_scaled = scaler.fit_transform(churn_data[numerical_features])","bd481e56":"churn_data[numerical_features] = data_scaled","2dd96871":"churn_data.head()","c7dc011a":"df = churn_data\nX = df.drop(['Exited'], axis=1)\ny = df[\"Exited\"]\n    \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)","bc5139f7":"# Veri k\u00fcmesi olu\u015ftural\u0131m.\nlgb_train = lgb.Dataset(data=X_train, label=y_train,  free_raw_data=False)\n# De\u011ferlendirme veri k\u00fcmesini olu\u015fturuyoruz.\nlgb_eval = lgb.Dataset(data=X_test, label=y_test, reference=lgb_train,  free_raw_data=False)\n\n# E\u011fitim parametrelerini belirleyelim\nparams = {\n    'task': 'train',\n    'boosting_type': 'gbdt',\n    'objective': 'binary',\n    'metric': 'auc',\n    'num_leaves': 31,\n    'learning_rate': 0.05,\n    'verbose': -1\n}\n\n# Kategorik de\u011fi\u015fkenlerin indeksleri\nkategorik_indeks = [1,2,6,7,8]\nprint('Kategorik de\u011fi\u015fkenler: ' + str(churn_data.columns[kategorik_indeks].values))\n\nprint('E\u011fitim...')\n# Modeli e\u011fitelim\nevals_result={}\ngbm = lgb.train(params,\n                lgb_train,\n                valid_sets = lgb_eval,\n                categorical_feature = kategorik_indeks,\n                num_boost_round= 150,\n                early_stopping_rounds= 25,\n                evals_result=evals_result)\nprint('E\u011fitim bitti...')\n\n# Tahmin ve de\u011ferlendirme\ny_pred = gbm.predict(X_test, num_iteration=gbm.best_iteration)\n\nprint('En iyi sonucu veren iterasyon: ', gbm.best_iteration)\nprint('E\u011fri alt\u0131 alan de\u011feri:', roc_auc_score(y_test, y_pred))\nprint('\u0130sabetlilik de\u011feri:', accuracy_score(y_test, ( y_pred>= 0.5)*1))","81562731":"print('E\u011fri alt\u0131 alan...')\nax = lgb.plot_metric(evals_result, metric='auc')\nax.set_title('E\u011fri Alt\u0131 Alan\u0131n \u0130terasyona G\u00f6re De\u011fi\u015fimi')\nax.set_xlabel('\u0130terasyon')\nax.set_ylabel('E\u011fri Alt\u0131 Alan De\u011feri')\nax.legend_.remove()\nplt.show()","dcfb3b31":"ax = lgb.plot_importance(gbm, max_num_features=10)\nax.set_title('')\nax.set_xlabel('\u00d6zniteliklerin \u00d6nemi')\nax.set_ylabel('\u00d6znitelikler')\nplt.show()","1a0eb497":"y_pred","98e7083e":"****Input all the neccessay packages****","706c5b5a":"RowNumber, Customer ID and Surname degiskenlerini drop ediyoruz, bu degiskenlerin isimize yaramayacagini dusunduk","9affdcec":"Kategorik degiskenlerden \"Geography\",\"Gender\" numeric yapmamiz gerektiginden labelencoder uyguluyoruz","c3b54461":"**MACHINE LEARNING**"}}