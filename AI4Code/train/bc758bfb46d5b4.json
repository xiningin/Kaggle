{"cell_type":{"32c5945e":"code","95e252aa":"code","f89c46c7":"code","51f52734":"code","e5c41078":"code","f60ad16d":"code","4ae2bac5":"code","9900bc91":"code","3e94a442":"code","86c5e64a":"code","46de1c9e":"code","5aa8114f":"code","f858aacf":"code","0d5fad44":"code","47b52b3f":"code","714d6cfd":"code","3c973b69":"code","3fe1121a":"code","b00eecb3":"code","2ad25034":"code","964030ea":"code","74954e92":"code","f15aa666":"code","2773f5e9":"code","1a58535c":"code","25c159a2":"code","2b968e17":"code","d436875d":"code","5de3df42":"code","ca7a169c":"code","9ce03382":"code","19161ea4":"code","5a7ce0bd":"code","b531d41c":"code","1022d77a":"code","8b2ecfd3":"code","364c849d":"code","c87f007b":"code","1c4bc4cf":"code","617d1611":"code","c9dee8c8":"code","ff76b151":"code","db50b6f4":"code","2eb3582d":"code","48ad09e9":"code","78627b84":"code","3ef5734e":"code","98659c6b":"code","3f338edb":"code","4c98ea05":"code","e4bd2b47":"code","a6aae89c":"code","9a6e5fcd":"code","c101fc01":"code","aef185a0":"code","3c981873":"code","8e7f3080":"code","ea97ea79":"code","9996a736":"code","7bee65c2":"code","d49f66e3":"code","4ab24055":"code","3d8186de":"code","6304bf07":"code","288c3fb1":"code","6f61ec00":"code","5cc57a27":"markdown","3faec232":"markdown","09c27e32":"markdown","01587532":"markdown","2acaa19d":"markdown","a9d753ba":"markdown","6be9fa93":"markdown","ae3bd5b7":"markdown","e705a9a0":"markdown","78ffe6c0":"markdown","d9a3067f":"markdown","16077df9":"markdown","4016d9ec":"markdown","6144c934":"markdown","984f36dd":"markdown","b4c59eea":"markdown","01bd2cfc":"markdown","7f985252":"markdown","0b715d7a":"markdown","c7d98efa":"markdown"},"source":{"32c5945e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","95e252aa":"data_15=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2015.csv\")\ndata_16=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2016.csv\")\ndata_17=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2017.csv\")\ndata_18=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2018.csv\")\ndata_19=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\")","f89c46c7":"data15=data_15.copy()\ndata16=data_16.copy()\ndata17=data_17.copy()\ndata18=data_18.copy()\ndata19=data_19.copy()  #We copy original data","51f52734":"data15.columns","e5c41078":"data15.drop(['Happiness Rank','Standard Error','Economy (GDP per Capita)','Family','Dystopia Residual'],axis=1,inplace=True)\n#we deleted unnecessary columns","f60ad16d":"data15.rename(columns={\"Health (Life Expectancy)\":\"Health\",\"Trust (Government Corruption)\":\"Corruption\"},inplace=True)\n#We rename columns what we want.","4ae2bac5":"data15['Year'] = '2015' #We add column Year \ndata15 = data15[['Year','Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']] \n#we have determined the columns order","9900bc91":"data15  #final version of the report 2015.","3e94a442":"data16.columns","86c5e64a":"data16.drop(['Happiness Rank','Lower Confidence Interval','Upper Confidence Interval','Economy (GDP per Capita)','Family','Dystopia Residual'],axis=1,inplace=True)\n#we deleted unnecessary columns","46de1c9e":"data16.rename(columns={\"Health (Life Expectancy)\":\"Health\",\"Trust (Government Corruption)\":\"Corruption\"},inplace=True)\n#We rename columns what we want.","5aa8114f":"data16['Year'] = '2016' #We add a column 'Year'.And order columns\ndata16 = data16[['Year','Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']]","f858aacf":"data16 #Final version of the report 2016","0d5fad44":"data17.columns","47b52b3f":"data17.drop(['Happiness.Rank','Whisker.high','Whisker.low','Economy..GDP.per.Capita.','Family','Dystopia.Residual',],axis=1,inplace=True)\n#we delete unnecessary columns,","714d6cfd":"data17.rename(columns={\"Happiness.Score\":\"Happiness Score\",\"Health..Life.Expectancy.\":\"Health\",\"Trust..Government.Corruption.\":\"Corruption\"},inplace=True)\n#We remane columns.","3c973b69":"data17['Year'] = '2017' #We add a new column and order columns\ndata17 = data17[['Year','Country','Happiness Score','Health','Freedom','Corruption','Generosity']]","3fe1121a":"data17 #Final version of the report 2017","b00eecb3":"data18.columns","2ad25034":"data18.rename(columns={\"Country or region\":\"Country\",\"Score\":\"Happiness Score\",\"Healthy life expectancy\":\"Health\",\"Freedom to make life choices\":\"Freedom\",\"Perceptions of corruption\":\"Corruption\"},inplace=True)\n#We rename columns,","964030ea":"data18.drop(['Overall rank','GDP per capita','Social support'],axis=1,inplace=True) #We delete unnecessary columns.","74954e92":"data18['Year'] = '2018' #We add columns 'Year'.And order columns\ndata18 = data18[['Year','Country','Happiness Score','Health','Freedom','Corruption','Generosity']]","f15aa666":"data18 ##Final version of the report 2018","2773f5e9":"data19.columns","1a58535c":"data19.drop(['Overall rank','GDP per capita','Social support'],axis=1,inplace=True) #We delete unnecessary columns","25c159a2":"data19.rename(columns={\"Country or region\":\"Country\",\"Score\":\"Happiness Score\",\"Healthy life expectancy\":\"Health\",\"Freedom to make life choices\":\"Freedom\",\"Perceptions of corruption\":\"Corruption\"},inplace=True)\n#We rename columns what we want.","2b968e17":"data19['Year'] = '2019' #Add a new columns and order all columns\ndata19 = data19[['Year','Country','Happiness Score','Health','Freedom','Corruption','Generosity']]","d436875d":"data19 #Final version of the report 2019","5de3df42":"a=list(data16.Country.unique()) #we look at sorted countries.\nsorted(a)","ca7a169c":"alldata=pd.concat([data15,data16,data17,data18,data19],axis=0,ignore_index=True)\nalldata =alldata[['Year','Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']]","9ce03382":"alldata #we combined all reports into a single dataframe","19161ea4":"# print(alldata[alldata.Country=='Trinidad & Tobago'])\n# print(alldata[alldata.Country=='Taiwan Province of China'])\n# print(alldata[alldata.Country=='Hong Kong S.A.R., China'])\n# print(alldata[alldata.Country=='Northern Cyprus'])\n# print(alldata[alldata.Country=='North Macedonia']) \n#Changing different names for the same countries for consistency.","5a7ce0bd":"alldata.loc[507,'Country'] = 'Trinidad and Tobago'\nalldata.loc[664,'Country'] = 'Trinidad and Tobago'\nalldata.loc[385,'Country'] = 'Hong Kong'\nalldata.loc[527,'Country'] = 'North Cyprus'\nalldata.loc[689,'Country'] = 'North Cyprus'\nalldata.loc[709,'Country'] = 'Macedonia'\nalldata.loc[347,'Country'] = 'Taiwan'\n#Changing different names for the same countries for consistency.","b531d41c":"alldata.columns","1022d77a":"\nd = data15.iloc[:,1:3] \nalldata = pd.merge(alldata,d, on = 'Country', how = 'left')\n\n#Take the country and region information.\n","8b2ecfd3":"alldata","364c849d":"alldata.drop([\"Region_x\"],axis=1,inplace=True)\nalldata.rename(columns={\"Region_y\":\"Region\"},inplace=True) #We delete unnecessary columns.And order columns\nalldata =alldata[['Year','Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']]","c87f007b":"alldata #Final version of alldata(2015,2016,2017,2018,2019)","1c4bc4cf":"alldata.isna().sum() #There are 18 NaN values of region and one value of corruption","617d1611":"alldata[alldata.Region.isna()].Country","c9dee8c8":"#We find missing region informations\nalldata.loc[233,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[407,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[567,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[737,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[270,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[425,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[588,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[738,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[300,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[461,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[623,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[781,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[254,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[745,'Region'] = 'Sub-Saharan Africa'\nalldata.loc[364,'Region'] = 'Latin America and Caribbean'  \nalldata.loc[518,'Region'] = 'Latin America and Caribbean'\nalldata.loc[172,'Region'] = 'Latin America and Caribbean'\nalldata.loc[209,'Region'] = 'Latin America and Caribbean'","ff76b151":"alldata[\"Corruption\"].mean()","db50b6f4":"alldata[alldata.Corruption.isna()]","2eb3582d":"alldata[\"Corruption\"].fillna(alldata[\"Corruption\"].mean(),inplace=True) #We write missing corruption as mean.","48ad09e9":"alldata.isna().sum() #We havent NaN values now.","78627b84":"alldata.info() #alldata information","3ef5734e":"alldata.describe().T #alldata describe.","98659c6b":"alldata[\"Region\"].value_counts() ","3f338edb":"alldata.Region.unique()","4c98ea05":"len(alldata.Region.unique())","e4bd2b47":"koralasyon=alldata.corr() #We find correlation of alldata.\nkoralasyon","a6aae89c":"koralasyon[(koralasyon.abs()>0.5)&(koralasyon.abs()<1)]  #health and feedom affect happiness most.","9a6e5fcd":"corr_years=alldata.groupby(\"Year\").corr()\ncorr_years","c101fc01":"corr_years[(corr_years.abs()>0.5)&(corr_years.abs()<1)] #Generally,every year health and freedom affect happiness score most.","aef185a0":"alldata[\"Region\"].value_counts()","3c981873":"happ_averages=alldata.groupby('Country')['Happiness Score'].mean()","8e7f3080":"happ_averages","ea97ea79":"happ_averages.sort_values(ascending=False).head(3)","9996a736":"happ_averages.sort_values(ascending=False).tail(3)","7bee65c2":"corrup_averages=alldata.groupby('Country')['Corruption'].mean()\ncorrup_averages","d49f66e3":"corrup_averages.sort_values(ascending=False).head()","4ab24055":"corrup_averages.sort_values(ascending=False).tail()","3d8186de":"freedom_averages=alldata.groupby('Region')['Freedom'].mean()\nfreedom_averages.sort_values(ascending=False).head(1)","6304bf07":"freedom_averages.sort_values(ascending=False).tail(1)","288c3fb1":"health_average = alldata.groupby('Region')['Health'].mean()\nhealth_average.sort_values(ascending=False).tail(1)","6f61ec00":"alldata.groupby(\"Region\").aggregate({'Happiness Score':'mean','Freedom':'mean', 'Corruption':'mean'}).T","5cc57a27":"# #12. Find out which region is the most unhealthy.","3faec232":"\n# #3. Some datasets do not have the region information of the countries, search these countries and add them to the missing places in the region column.","09c27e32":"# #13. By grouping the countries according to their regions, take the average of the variables Happiness, Freedom and Corruption.","01587532":"# #2019 report","2acaa19d":"# #11. whats is the highest and lowest freedom average by region","a9d753ba":"# #2017 report","6be9fa93":"# #10. Find the best and worst countries by taking the average of 5 years CORRUPTION.","ae3bd5b7":"# 1.Merge all the data into a single dataframe","e705a9a0":"# #2018 report","78ffe6c0":"* ![](http:\/\/)![](http:\/\/)![](http:\/\/) ","d9a3067f":"# #8. What is the number of countries by region","16077df9":"# #7. Which is the variable that affects happiness most. Check if there is a difference by years.","4016d9ec":"# #6. Calculate how many different regions exist.","6144c934":"we need only Country,Region,(happiness.score=score),Health,Freedom,Corruption,Generosity","984f36dd":"# #9. Find the happiest and the most unhappy 3 countries by taking the average of HAPPINESS for 5 years.","b4c59eea":"# #2015 report","01bd2cfc":"# #4. Fill NaN values with the average of that variable","7f985252":"# #5. Get the info() and describe() information on the data.","0b715d7a":"# #2. Count the NaN values.","c7d98efa":"# #2016 report"}}