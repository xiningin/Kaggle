{"cell_type":{"79cb7fc7":"code","e40f1590":"code","8cf0761c":"code","53e6de19":"code","834efe5d":"code","40300efc":"code","08389b2b":"code","f0db8115":"code","707d0db3":"code","a1e42ba9":"code","d99710c0":"code","dc5a4ebb":"code","25db8e0c":"code","f12fbf2e":"code","e32278d9":"code","7fd05a5f":"code","dbac3ddd":"code","59a4b997":"code","7cfc8d5d":"code","d5e88271":"code","7e701723":"code","40f71457":"code","353ffeba":"code","72d23f04":"code","766bb13c":"code","a9d3a1d8":"code","0f985f24":"code","93d79ea5":"code","36701646":"code","e400948d":"code","1b07115e":"markdown","2a9854f7":"markdown"},"source":{"79cb7fc7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e40f1590":"import plotly.express as px \nimport plotly.graph_objects as go \nimport plotly.figure_factory as ff \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom pandas_profiling import ProfileReport","8cf0761c":"df_ga = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\")","53e6de19":"# Defining all our palette colours.\nprimary_blue = \"#496595\"\nprimary_blue2 = \"#85a1c1\"\nprimary_blue3 = \"#3f4d63\"\nprimary_grey = \"#c6ccd8\"\nprimary_black = \"#202022\"\nprimary_bgcolor = \"#f4f0ea\"\n\nprimary_green = px.colors.qualitative.Plotly[2]\n\nplt.rcParams['axes.facecolor'] = primary_bgcolor\n\ncolors = [primary_blue, primary_blue2, primary_blue3, primary_grey, primary_black, primary_bgcolor, primary_green]\nsns.palplot(sns.color_palette(colors))","834efe5d":"df_ga.head()","40300efc":"df_ga.shape","08389b2b":"df_ga.info()","f0db8115":"print(df_ga[\"Year\"].value_counts(dropna = False))","707d0db3":"df_ga.columns","a1e42ba9":"profile = ProfileReport(df_ga, title = \"Video Games Profile\")\nprofile","d99710c0":"df_ga.describe()","dc5a4ebb":"df_ga.boxplot(column = \"Rank\", by = \"Genre\", figsize= (12,12))","25db8e0c":"new = df_ga.head(10)\nmelted = pd.melt(frame =new, id_vars = \"Name\", value_vars = [\"Year\",\"Global_Sales\"])\nmelted.head(20)","f12fbf2e":"new1 = df_ga.head(10)\nnew2 = df_ga.tail(10)\ncon_data = pd.concat([new1,new2],axis = 0, ignore_index = True)\ncon_data","e32278d9":"data1 = df_ga[\"Global_Sales\"].head(20)\ndata2 = df_ga[\"Genre\"].head(20)\ndata3 = df_ga[\"Name\"].head(20)\nconcat = pd.concat([data3,data2,data1], axis = 1)\nconcat","7fd05a5f":"df_ga.Year.notnull().all()","dbac3ddd":"df_ga.Year.fillna(\"empty\", inplace = True)","59a4b997":"df_ga.Year.value_counts(dropna= False)","7cfc8d5d":"assert df_ga.Year.notnull().all()","d5e88271":"total_column = \"Total_Shipped\"\ndf_ga[total_column] = df_ga[\"Global_Sales\"]\ndf_ga.Year.value_counts(dropna = True)\nmean_of_year= 2006.406443","7e701723":"copy = df_ga.copy()\ncopy.Year= df_ga.Year.replace([\"empty\"],mean_of_year)\ncopy.Year.value_counts(dropna = True)","40f71457":"copy = copy.sort_values(\"Year\", ascending = True)","353ffeba":"copy.Year.value_counts(dropna = True)","72d23f04":"ani= px.histogram(copy, x= \"Publisher\", animation_frame= \"Year\", range_y =(0,70))\nani.update_xaxes(type= \"category\")\nani.update_xaxes(categoryorder = \"category ascending\")\nani.show()","766bb13c":"top_sal = copy.groupby([\"Publisher\",\"Year\"]).agg({total_column: \"count\"}).reset_index()\ntop_sal\n","a9d3a1d8":"top_sal.columns = [\"Publisher\",\"Year\",\"Count\"]\ntop_sal = top_sal[top_sal.Year.isin([2016,2017,2018,2019])]\ntop_sal = top_sal\ntop_sal = top_sal[top_sal.Count > top_sal.Count.sum() * 0.01]\ntop_sal[\"Year\"]= top_sal[\"Year\"].astype(str)","0f985f24":"an_sal = copy.groupby([\"Publisher\",\"Year\"]).agg({total_column: \"count\"}).reset_index()\nan_sal.columns = [\"Publisher\",\"Year\",\"Count\"]\nan_sal = an_sal[an_sal.Year.isin([2016,2017,2018,2019])]\nan_sal.Year.value_counts()","93d79ea5":"top_sal","36701646":"ani2 =px.bar(top_sal , x = \"Publisher\", y = \"Count\", color = \"Year\" , barmode = \"group\")\nani2.update_layout(title = \"Total Sales by Publishers\")\nani2.update_xaxes(type = \"category\")\nani2.update_xaxes(categoryorder = \"category ascending\")","e400948d":"ani3 =px.bar(an_sal , x = \"Publisher\", y = \"Count\", color = \"Year\" , barmode = \"group\")\nani3.update_layout(title = \"Total Sales by Publishers\")\nani3.update_xaxes(type = \"category\")\nani3.update_xaxes(categoryorder = \"category ascending\")","1b07115e":"# **Now we will start rewiewing video games by year**","2a9854f7":"This shows us Adventure is the most attractive genre in our dataset"}}