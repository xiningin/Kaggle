{"cell_type":{"c504e9d2":"code","e4dd667f":"code","77edadaf":"code","f77571ce":"code","072a6f90":"code","6e13bbcf":"code","e5033c6e":"code","024b1496":"code","77f8d626":"code","62d46c39":"code","b21ad85d":"code","dd385eee":"code","b6e0a8b6":"code","3c32e806":"code","71232fd9":"code","96f8ed72":"code","eb1c9b46":"code","552a247a":"code","56e7e6a6":"code","68431574":"code","d4747666":"code","caafb404":"code","9903aab4":"code","2d99722f":"code","c190dcdf":"code","82854f70":"code","6b366de7":"code","b6671dab":"markdown","19f573b5":"markdown","8cf0d562":"markdown","330466de":"markdown","153c7883":"markdown","af681cee":"markdown","c42005b8":"markdown","cdb5176a":"markdown","606c2fb6":"markdown","cf764029":"markdown","9d846f24":"markdown","bfb9c6a1":"markdown","16aa5b39":"markdown","9fe15ec1":"markdown","3fa8a3bb":"markdown","228ab2ca":"markdown","353fc44a":"markdown","debac183":"markdown","e18f7868":"markdown","1ba0ecae":"markdown","87ebecb5":"markdown","760849f8":"markdown","fbed8181":"markdown","1dc7761d":"markdown","43fb30b0":"markdown","30cc30c9":"markdown","9603e23c":"markdown","049ab089":"markdown","36b0187a":"markdown","ce4b3623":"markdown","cbd84121":"markdown","65b4a4bc":"markdown","596322cc":"markdown","8609169d":"markdown","17fd157b":"markdown","24c448c3":"markdown","3d0bc8a1":"markdown","67158c9f":"markdown","a9f98d37":"markdown","3d06768d":"markdown","b82a5dc7":"markdown"},"source":{"c504e9d2":"%%html\n<style>\n@import url('https:\/\/fonts.googleapis.com\/css?family=Ewert|Roboto&effect=3d|ice|');\nbody {background-color: gainsboro;} \na {color: #37c9e1; font-family: 'Roboto';} \nh1 {color: #37c9e1; font-family: 'Orbitron'; text-shadow: 4px 4px 4px #aaa;} \nh2, h3 {color: slategray; font-family: 'Orbitron'; text-shadow: 4px 4px 4px #aaa;}\nh4 {color: #818286; font-family: 'Roboto';}\nspan {font-family:'Roboto'; color:black; text-shadow: 5px 5px 5px #aaa;}  \ndiv.output_area pre{font-family:'Roboto'; font-size:110%; color:lightblue;}      \n<\/style>","e4dd667f":"import pandas as pd\nimport numpy as np\nimport random\nimport math\nfrom matplotlib import pyplot as plt","77edadaf":"data = pd.read_csv('..\/input\/Indicators.csv')\ndata.shape","f77571ce":"data.head(10)","072a6f90":"countries = data['CountryName'].unique().tolist()\nlen(countries)","6e13bbcf":"countryCodes = data['CountryCode'].unique().tolist()\nlen(countryCodes)","e5033c6e":"countryIndicators = data['IndicatorName'].unique().tolist()\nlen(countryIndicators)","024b1496":"years = data['Year'].unique().tolist()\nlen(years)","77f8d626":"print(min(years),\" to \",max(years))","62d46c39":"# select CO2 emissions for the United States\nhist_indicator = 'CO2 emissions \\(metric'\nhist_country = 'USA'\n\nmask1 = data['IndicatorName'].str.contains(hist_indicator) \nmask2 = data['CountryCode'].str.contains(hist_country)\n\n# stage is just those indicators matching the USA for country code and CO2 emissions over time.\nstage = data[mask1 & mask2]","b21ad85d":"stage.head()","dd385eee":"# get the years\nyears = stage['Year'].values\n# get the values \nco2 = stage['Value'].values\n\n# create\nplt.bar(years,co2)\nplt.show()\nplt.xkcd()","b6e0a8b6":"# switch to a line plot\nplt.plot(stage['Year'].values, stage['Value'].values)\n\n# Label the axes\nplt.xlabel('Year')\nplt.ylabel(stage['IndicatorName'].iloc[0])\n\n#label the figure\nplt.title('CO2 Emissions in USA')\n\n# to make more honest, start they y axis at 0\n\nplt.axis([1959, 2011,0,25])\n\nplt.show()\nplt.xkcd()","3c32e806":"hist_data = stage['Value'].values","71232fd9":"print(len(hist_data))","96f8ed72":"plt.hist(hist_data, 10, normed=False, facecolor='green')\n\nplt.xlabel(stage['IndicatorName'].iloc[0])\nplt.ylabel('# of Years')\nplt.title('Histogram Example')\n\nplt.grid(True)\nplt.xkcd()\nplt.show()","eb1c9b46":"hist_indicator = 'CO2 emissions \\(metric'\nhist_year = 2011\n\nmask1 = data['IndicatorName'].str.contains(hist_indicator) \nmask2 = data['Year'].isin([hist_year])\n\n# apply our mask\nco2_2011 = data[mask1 & mask2]\nco2_2011.head()","552a247a":"print(len(co2_2011))","56e7e6a6":"fig, ax = plt.subplots()\n\nax.annotate(\"USA\",\n            xy=(18, 5), xycoords='data',\n            xytext=(18, 30), textcoords='data',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"arc3\"),\n            )\n\nplt.hist(co2_2011['Value'], 10, normed=False, facecolor='green')\n\nplt.xlabel(stage['IndicatorName'].iloc[0])\nplt.ylabel('# of Countries')\nplt.title('Histogram of CO2 Emissions Per Capita')\nplt.xkcd()\n#plt.axis([10, 22, 0, 14])\nplt.grid(True)\n\nplt.show()","68431574":"# select GDP Per capita emissions for the United States\nhist_indicator = 'GDP per capita \\(constant 2005'\nhist_country = 'USA'\n\nmask1 = data['IndicatorName'].str.contains(hist_indicator) \nmask2 = data['CountryCode'].str.contains(hist_country)\n\n# stage is just those indicators matching the USA for country code and CO2 emissions over time.\ngdp_stage = data[mask1 & mask2]","d4747666":"gdp_stage.head(2)","caafb404":"stage.head(2)","9903aab4":"plt.plot(gdp_stage['Year'].values, gdp_stage['Value'].values)\nplt.xlabel('Year')\nplt.ylabel(gdp_stage['IndicatorName'].iloc[0])\nplt.title('GDP Per Capita USA')\n\n# to make more honest, start they y axis at 0\n#plt.axis([1959, 2011,0,25])\nplt.xkcd()\nplt.show()","2d99722f":"print(\"GDP Min Year = \", gdp_stage['Year'].min(), \"max: \", gdp_stage['Year'].max())\nprint(\"CO2 Min Year = \", stage['Year'].min(), \"max: \", stage['Year'].max())","c190dcdf":"gdp_stage_trunc = gdp_stage[gdp_stage['Year'] < 2012]\nprint(len(gdp_stage_trunc))\nprint(len(stage))","82854f70":"fig, axis = plt.subplots()\n# Grid lines, Xticks, Xlabel, Ylabel\n\naxis.yaxis.grid(True)\naxis.set_title('CO2 Emissions vs. GDP \\(per capita\\)',fontsize=10)\naxis.set_xlabel(gdp_stage_trunc['IndicatorName'].iloc[0],fontsize=10)\naxis.set_ylabel(stage['IndicatorName'].iloc[0],fontsize=10)\n\nX = gdp_stage_trunc['Value']\nY = stage['Value']\n\naxis.scatter(X, Y)\nplt.xkcd()\nplt.show()","6b366de7":"np.corrcoef(gdp_stage_trunc['Value'],stage['Value'])","b6671dab":"For how many countries do we have CO2 per capita emissions data in 2011","19f573b5":"### How many UNIQUE country names are there ?","8cf0d562":"### Lets pick a country and an indicator to explore: CO2 Emissions per capita and the USA","330466de":"## 1.3 Data Visualisation is an important aspect of data science. Why? \nBecause data scientists deal with humongous amounts of data. And it becomes easier to understand the data if we can see it visually and dig deeper.\nFor this sole purpose, Python has the matplotlib package to generate simple and interactive visualisations. Let's start using matplotlib to extract information from data. \nFor this purpose, We will be using the [World Development Indicators](https:\/\/www.kaggle.com\/worldbank\/world-development-indicators) that explore country development indicators from around the world.","153c7883":"### How many years of data do we have ?","af681cee":"#### &#128221;Note:\nSo the USA, at ~18 CO2 emissions (metric tons per capital) is quite high among all countries.\n\nAn interesting next step, which we'll save for you, would be to explore how this relates to other industrialized nations and to look at the outliers with those values in the 40s!","c42005b8":"### Relationship between GPD and CO2 Emissions in USA","cdb5176a":"### Let's see how emissions have changed over time using MatplotLib","606c2fb6":"# &#128253; Intro Of This Notebook:\nThis notebook use for Matplotlib tutorial for beginners.I hope so that this notebook become very helpful for beginners.So,This notebook uses a dataset for this tutorial from kaggle Dataset.We will describe the dataset further as we explore with it using matplotlib.","cf764029":"### Using Histograms to explore the distribution of values\nWe could also visualize this data as a histogram to better explore the ranges of values in CO2 production per year. ","9d846f24":"## &#128202; 2.2 Basic Plotting, Part 1","bfb9c6a1":"## Motivation \n\n> **\u201cA data scientist does model-driven analyses of our data; analyzes to improve our planning, increase our productivity, and develop our deeper levels of subject matter expertise. A data scientist works at the tactical, operational, and strategic levels, sharing insights with the business.\u201d** -Chris Pehura","16aa5b39":"### What's the range of years?","9fe15ec1":"## &#128223; 2.1 Initial exploration of the Dataset","3fa8a3bb":"To get started, we will need to:\n\n&#128229; Download the data from: https:\/\/www.kaggle.com\/worldbank\/world-development-indicators\n\nExtract the zip file called world-development-indicators.zip","228ab2ca":"### ScatterPlot for comparing GDP against CO2 emissions (per capita)\n\nFirst, we'll need to make sure we're looking at the same time frames","353fc44a":"## &#128201;  2.3 Basic Plotting, Part 2 ","debac183":"This doesn't look like a strong relationship.  We can test this by looking at correlation.","e18f7868":"![Imgur](https:\/\/i.imgur.com\/ir790WK.png)","1ba0ecae":"A correlation of 0.07 is pretty weak, but you'll learn more about correlation in the next course.\n\nYou could continue to explore this to see if other countries have a closer relationship between CO2 emissions and GDP.","87ebecb5":"## 1.1 Defination Of Matplotlib\nMatplotlib is a library in Python that can help for easily draw Plotting.Matplotlib is a library for making 2D plots of arrays in Python.Although it has its origins in emulating the MATLAB graphics commands, it is independent of MATLAB, and can be used in a Pythonic, object oriented way. Although Matplotlib is written primarily in pure Python, it makes heavy use of NumPy and other extension code to provide good performance even for large arrays. Its father John Hunter(1968 - 2012).\n![Imgur](https:\/\/i.imgur.com\/ix4izp4.png)\n\nWhen I went searching for a Python plotting package, I had several requirements:\n\n* Plots should look great - publication quality. One important requirement for me is that the text looks good (antialiased, etc.)\n* Postscript output for inclusion with TeX documents\n* Embeddable in a graphical user interface for application development\n* Code should be easy enough that I can understand it and extend it\n* Making plots should be easy\n> Everyone can learn [Matplotlib](https:\/\/www.kaggle.com\/richayadav07\/python-bootcamp-part-3) from my kernel also.click on [\"Python Bootcamp for ML\"](https:\/\/www.kaggle.com\/richayadav07\/python-bootcamp-part-3) then you can see this kernel.","760849f8":"### But how do the USA's numbers relate to those of other countries?","fbed8181":"### Are there same number of country codes ?","1dc7761d":"## 1.2 How Matplotlib Work?\nMatplotlib is designed with the philosophy that you should be able to create simple plots with just a few commands, or just one! If you want to see a histogram of your data, you shouldn\u2019t need to instantiate objects, call methods, set properties, and so on; it should just work.","43fb30b0":"### \ud83d\udcd1 Import Libraries\nWe will start by importing the Python libraries we will be using in this visualization. These libraries include:\n\n* pandas and numpy for data ingestion and manipulation.\n\n* matplotlib for data visualization\n\n* random  pseudo-random number generators for various distributions.\n\n","30cc30c9":"# &#128187; 2. Implementation","9603e23c":"## Thanks for viewing the kernel, please upvote if you liked it. &#128170; &#128234;","049ab089":"Looks like it has different indicators for different countries with the year and value of the indicator. ","36b0187a":"So although we've seen a decline in the CO2 emissions per capita, it does not seem to translate to a decline in GDP per capita","ce4b3623":"Turns out emissions per capita have dropped a bit over time, but let's make this graphic a bit more appealing before we continue to explore it.","cbd84121":"# &#128204; Code Library, Style, and Links","65b4a4bc":"So the USA has many years where it produced between 19-20 metric tons per capita with outliers on either side.","596322cc":"### \ud83d\udcc5 Load and Read the Data","8609169d":"This is a really large dataset, at least in terms of the number of rows.  But with 6 columns, what does this hold?","17fd157b":"## Now Lets Start!\u270c","24c448c3":"## Excellent References:\n1.[Introduction to Matplotlib\u200a\u2014\u200aData Visualization in Python](https:\/\/heartbeat.fritz.ai\/introduction-to-matplotlib-data-visualization-in-python-d9143287ae39)\n\n2.[Matplotlib Tutorial: Python Plotting](https:\/\/www.datacamp.com\/community\/tutorials\/matplotlib-tutorial-python?utm_source=adwords_ppc&utm_campaignid=1455363063&utm_adgroupid=65083631748&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=1t1&utm_creative=278443377086&utm_targetid=aud-299261629574:dsa-473406587955&utm_loc_interest_ms=&utm_loc_physical_ms=9074036&gclid=CjwKCAjwio3dBRAqEiwAHWsNVQXldlstQTTubSRNJfgS1vqdkzcbtXwjustXwdv5IYzGjulgkOUkwBoC0isQAvD_BwE)\n\n3.[Python Plotting With Matplotlib (Guide)](https:\/\/realpython.com\/python-matplotlib-guide\/)\n","3d0bc8a1":"# &#128214; 1. Introduction","67158c9f":"Useful  `LINKS`:\n\n1.[Introduction of Matplotlib](https:\/\/www.youtube.com\/watch?v=qqwf4Vuj8oM)\n\n2.[Matplotlib Documantation](https:\/\/matplotlib.org\/index.html)\n","a9f98d37":"We have 3 extra years of GDP data, so let's trim those off so the scatterplot has equal length arrays to compare (this is actually required by scatterplot)","3d06768d":"# &#128209; Contents\n<ul>\n<li>1. Introduction<\/li>\n<ul>\n    <li>1.1 Defination Of Matplotlib <\/li>\n    <li>1.2 How Matplotlib work? <\/li>\n<\/ul>\n<li>2. Implementation <\/li>\n<ul>\n    <li>2.1  Initial exploration of the Dataset <\/li>\n    <li>2.2 Basic Plotting, Part 1<\/li>\n    <li>2.3 Basic Plotting, Part 2 <\/li>\n<\/ul>\n<\/ul>\n\n<br>","b82a5dc7":"### Are there many indicators or few ?"}}