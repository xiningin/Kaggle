{"cell_type":{"088bf16f":"code","35f5bab1":"code","cf0be2fe":"code","49363206":"code","0d79dca3":"code","b85da4ca":"code","ae3cb515":"code","0f3cdb77":"code","c1fd7042":"code","fe0b8523":"code","06df9831":"code","31c3acb8":"code","55725171":"code","9ea5d283":"code","33136212":"code","8fdbb972":"code","7264718e":"code","30c18995":"code","f673c002":"code","0274930e":"code","5763e699":"code","acf3d5aa":"code","1a92bda7":"code","b1d1967c":"code","cbcd6a15":"code","7e136b79":"code","f02fbcfe":"code","3e92b785":"code","05c157e2":"code","1f9402ea":"code","6e25118f":"code","77993208":"code","4c95cf75":"code","6b3fa17d":"code","726a5b38":"code","3af9e5da":"code","ecbdf028":"code","ed8fcbe9":"markdown"},"source":{"088bf16f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","35f5bab1":"!ls","cf0be2fe":"!git clone https:\/\/github.com\/martiansideofthemoon\/squash-generation","49363206":"!ls","0d79dca3":"import os\nos.chdir('\/kaggle\/working\/squash-generation')\n!ls","b85da4ca":"!pip install -r requirements.txt","ae3cb515":"!ls ","0f3cdb77":"# !cp -r \/kaggle\/input\/gpt2-corefs\/gpt2_corefs_question_generation \/kaggle\/working\/squash-generation\/question-generation\/","c1fd7042":"os.chdir('\/kaggle\/working\/squash-generation\/pytorch-pretrained-BERT')\n!pip install --editable .","fe0b8523":"os.chdir('\/kaggle\/working\/squash-generation')\n!ls","06df9831":"!pip install spacy\n!python -m spacy download en_core_web_sm","31c3acb8":"# !python squash\/extract_answers.py --key quac_869","55725171":"# !python question-generation\/interact.py --model_checkpoint \/kaggle\/input\/gpt2-corefs\/gpt2_corefs_question_generation\/ --model_type gpt2 --key quac_869\n","9ea5d283":"# !ls squash\/temp\/quac_869","33136212":"# with open(\"\/kaggle\/working\/squash-generation\/squash\/temp\/quac_869\/generated_questions.json\") as f:\n#   print(f.read())\n    ","8fdbb972":"# import json \n  \n# # Opening JSON file \n# f = open('\/kaggle\/working\/squash-generation\/squash\/temp\/quac_869\/generated_questions.json','r') \n  \n# # returns JSON object as  \n# # a dictionary \n  \n","7264718e":"# print(f)","30c18995":"# import json\n\n\n# json_object = json.loads(f.read())\n\n# json_formatted_str = json.dumps(json_object, indent=2)\n\n# print(json_formatted_str)","f673c002":"!ls","0274930e":"import torch","5763e699":"# !ls \/kaggle\/input\/temp-dataset\/temp_dataset\/\n\n\n\n\n\n","acf3d5aa":"# !rm data\/temp_dataset\/README.md","1a92bda7":"!ls","b1d1967c":"!ls \/kaggle\/input\/pickkle","cbcd6a15":"!cp -r \/kaggle\/input\/pickkle\/*  \/kaggle\/working\/squash-generation\/data\/temp_dataset\/","7e136b79":"!ls data\/temp_dataset","f02fbcfe":"# !pip install git+https:\/\/github.com\/lanpa\/tensorboardX","3e92b785":"# !mkdir question-generation\/gpt2_corefs_question_generations\n# !ls question-generation","05c157e2":"!python -m spacy download en\n","1f9402ea":"#!pip install git+https:\/\/github.com\/lanpa\/tensorboardX","6e25118f":"!pip install tensorboardX==1.6","77993208":"!ls data\/temp_dataset\/temp_dataset","4c95cf75":"# !ls question-generation\/gpt2_corefs_question_generations","6b3fa17d":"# !cp question-generation\/gpt2_corefs_question_generation\/pytorch_model.bin question-generation\/gpt2_corefs_question_generations","726a5b38":"# !ls question-generation\/gpt2_corefs_question_generations","3af9e5da":"!python -m torch.distributed.launch --nproc_per_node=1 question-generation\/train.py --eval_before_start --n_epochs=1 --model_checkpoint gpt2 --train_batch_size 2 --valid_batch_size 2 --gradient_accumulation_steps 16  --dataset_path data\/temp_dataset\/instances_corefs --dataset_cache data\/temp_dataset\/cache_corefs --output_dir question-generation\/gpt2_corefs_question_generation\n","ecbdf028":"torch.cuda.get_device_name(0)","ed8fcbe9":"python -m torch.distributed.launch --nproc_per_node=4 question-generation\/train.py --eval_before_start --n_epochs 4 --model_checkpoint gpt2 --dataset_path data\/temp_dataset\/instances_corefs --dataset_cache data\/temp_dataset\/cache_corefs --output_dir question-generation\/gpt2_corefs_question_generation\n"}}