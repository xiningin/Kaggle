{"cell_type":{"936a7afd":"code","8f44b958":"code","cf035ca8":"code","560b81ec":"code","55ed2b2e":"code","e601e6a9":"code","58dda301":"code","9852b564":"code","9a1e5880":"code","28ee8379":"code","909015e6":"code","59fcac28":"code","b1f40ab0":"code","fb830e0b":"code","94bf7852":"code","329a7353":"code","745343ec":"code","7973a154":"code","bc5ffed2":"code","607e49b8":"code","eb70b897":"code","8c179d4e":"code","05d6630f":"code","25afb62c":"code","83155109":"code","0cc3672a":"code","887d2e7a":"markdown","e6c74eab":"markdown","d45f75da":"markdown","9933c755":"markdown","4610e2b9":"markdown","e82bcde6":"markdown","35b2ec87":"markdown","c3fc63c0":"markdown","10658bac":"markdown"},"source":{"936a7afd":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","8f44b958":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nqcode = df.iloc[0].to_dict()\ndf.drop([0], axis=0, inplace=True)\ndf.columns = ['Time'] + df.columns[1:].tolist()\ndf['Q2'] = df['Q2'].map(lambda x: 'Male' if x == 'Man' else 'Non-male')\ndf['region'] = df['Q3'].map(lambda x: 'India' if x == 'India' else 'World')\ndf.head()","cf035ca8":"t = df['Time'].astype(float)\nt = t[t < 20000]\nax = t.hist(bins=100)\nax.set_xlim(0, 5000)","560b81ec":"india = df[df['Q3'] == 'India']\nworld = df[df['Q3'] != 'India']","55ed2b2e":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nindia['Q2'].value_counts().plot(kind='pie', ax=ax1)\nax1.set_title('India')\nworld['Q2'].value_counts().plot(kind='pie', ax=ax2)\nax2.set_title('World')\nfig.suptitle('Gender Ratios - India and the World')","e601e6a9":"groups = df.groupby('Q3')['Q2']\ndef myagg(g):\n    return g.value_counts(normalize=True).loc['Male']\ngr = groups.agg(myagg).sort_values()\nfig, (ax1, ax2) = plt.subplots(ncols=2, nrows=1, figsize=(10, 6))\ngr.head(10).plot(kind='barh', ax=ax1)\nax1.set_title('Best Gender Ratios')\ngr.tail(10).plot(kind='barh', ax=ax2)\nax2.set_title('Worst Gender Ratios')\nplt.tight_layout()","58dda301":"ages = df['Q1'].unique().tolist()\nages.sort()\nages = pd.api.types.CategoricalDtype(categories=ages, ordered=True)\ndf['Q1'] = df['Q1'].astype(ages)\n\npd.crosstab(df['Q1'], df['region'], normalize=True).plot(kind='bar')","9852b564":"xdf = df.dropna(subset=['Q4'])\nxdf = xdf[xdf['Q4'] != 'I prefer not to answer']\nqual = [\n    'No formal education past high school',\n    'Some college\/university study without earning a bachelor\u2019s degree',\n    'Professional degree',\n    'Bachelor\u2019s degree',\n    'Master\u2019s degree',\n    'Doctoral degree'\n]\nqual = pd.api.types.CategoricalDtype(categories=qual, ordered=True)\nxdf['Q4'] = xdf['Q4'].astype(qual)\npd.crosstab(xdf['Q4'], df['region'], normalize=True).plot(kind='barh')","9a1e5880":"india = df[df['region'] == 'India']\nworld = df[df['region'] == 'World']\nindia['Q5'].value_counts().head().plot(kind='bar')","28ee8379":"world['Q5'].value_counts().head().plot(kind='bar')","909015e6":"def process_mcq(prefix, df):\n\n    xdf = df[[c for c in df if c.startswith(prefix)] + ['region']]\n\n    x = xdf[xdf['region'] == 'India']\n    x = x[[c for c in x if c != 'region']]\n    x_prop = x.fillna(value=False).astype(bool).sum(0) \/ x.shape[0]\n    x_prop.index = x.mode(axis=0).iloc[0]\n\n\n    y = xdf[xdf['region'] == 'World']\n    y = y[[c for c in y if c != 'region']]\n    y_prop = y.fillna(value=False).astype(bool).sum(0) \/ y.shape[0]\n    y_prop.index = y.mode(axis=0).iloc[0]\n\n    pd.DataFrame.from_dict(dict(World=y_prop, India=x_prop)).plot(kind='bar')\n\nprocess_mcq('Q7_', df)","59fcac28":"process_mcq('Q10_', df)","b1f40ab0":"pd.crosstab(df['Q11'], df['region'], normalize=True).plot(kind='barh')","fb830e0b":"process_mcq('Q14_', df)","94bf7852":"xdf = df.dropna(subset=['Q15'])","329a7353":"ml_exp = [\n    'I do not use machine learning methods',\n    'Under 1 year',\n    '1-2 years',\n    '2-3 years',\n    '3-4 years',\n    '4-5 years',\n    '5-10 years',\n    '10-20 years',\n    '20 or more years',\n]\nml_exp = pd.api.types.CategoricalDtype(categories=ml_exp, ordered=True)\nxdf['Q15'] = xdf['Q15'].astype(ml_exp)\npd.crosstab(xdf['Q15'], xdf['region'], normalize=True).plot(kind='barh')","745343ec":"process_mcq('Q16_', df)","7973a154":"process_mcq('Q19_', df)","bc5ffed2":"xdf = df.dropna(subset=['Q20'])\nco_size = [\n    '0-49 employees',\n    '50-249 employees',\n    '250-999 employees',\n    '1000-9,999 employees',\n    '10,000 or more employees'\n]\nco_size = pd.api.types.CategoricalDtype(categories=co_size, ordered=True)\nxdf['Q20'] = xdf['Q20'].astype(co_size)\npd.crosstab(xdf['Q20'], xdf['region'], normalize=True).plot(kind='barh')","607e49b8":"xdf = df.dropna(subset=['Q21'])\nteam_size = [\n    '0',\n    '1-2',\n    '3-4',\n    '5-9',\n    '10-14',\n    '15-19',\n    '20+'\n]\nteam_size = pd.api.types.CategoricalDtype(categories=team_size, ordered=True)\nxdf['Q21'] = xdf['Q21'].astype(team_size)\npd.crosstab(xdf['Q21'], xdf['region'], normalize=True).plot(kind='barh')","eb70b897":"xdf = df.dropna(subset=['Q22']).copy()\nxdf = xdf[xdf['Q22'] != 'I do not know']\nq22_map = {\n    'No (we do not use ML methods)': 'None',\n    'We are exploring ML methods (and may one day put a model into production)': 'Exploring',\n    'We use ML methods for generating insights (but do not put working models into production)': 'For insight generation',\n    'We recently started using ML methods (i.e., models in production for less than 2 years)': '< 2 years in prod',\n    'We have well established ML methods (i.e., models in production for more than 2 years)': '> 2 years in prod'\n}\nxdf['Q22'] = xdf['Q22'].map(lambda x: q22_map[x])\nml_maturity = pd.api.types.CategoricalDtype(categories=q22_map.values(), ordered=True)\nxdf['Q22'] = xdf['Q22'].astype(ml_maturity)\npd.crosstab(xdf['Q22'], xdf['region'], normalize=True).plot(kind='barh')","8c179d4e":"process_mcq('Q23_', df)","05d6630f":"process_mcq('Q28_A_', df)","25afb62c":"process_mcq('Q31_A_', df)","83155109":"process_mcq('Q33_A_', df)","0cc3672a":"process_mcq('Q34_A_', df)","887d2e7a":"Muslim majority countries have the best gender ratio???","e6c74eab":"Significantly higher use of hosted notebook products - obv, students can't afford expensive hardware. Try this with professionals too - in fact for all the rest.","d45f75da":"If there were too many people answering the survey too quickly, we'd have dropped their responses. Not too many such people it seems. Most people took ~ 15 mins to answer the survey, which seems reasonable.","9933c755":"Slightly less relative usage of web-based visualization tools.","4610e2b9":"India is flooding with Students.","e82bcde6":"Lots of grads and not enough postgrads.","35b2ec87":"We use a lot more C, C++ and Java than the rest of the world, and a lot less bash.","c3fc63c0":"India seems to have only slightly better gender representation.","10658bac":"India is significantly younger than the rest of the world."}}