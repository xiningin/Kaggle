{"cell_type":{"3f081b07":"code","0d5bdf12":"code","87bf4341":"code","2c59aac6":"code","3ee3a59a":"code","d5a2e30d":"code","2b57da75":"code","59357bbd":"code","1dae1b04":"code","45f52947":"code","d577fa0c":"code","455ff260":"code","058295a8":"code","60b7b444":"code","7ec6b7ae":"code","35ab0e3f":"code","328f89ed":"code","c1103c75":"code","2082a655":"code","474b8393":"code","dee541dc":"markdown","4462c022":"markdown","ddfb684f":"markdown","4d1d4ee8":"markdown","718c7333":"markdown"},"source":{"3f081b07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0d5bdf12":"train_df = pd.read_csv('\/kaggle\/input\/cte-ml-hack-2019\/train_real.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/cte-ml-hack-2019\/test_real.csv')","87bf4341":"train_df","2c59aac6":"sns.heatmap(train_df.corr(),annot=True,cmap='RdYlGn',linewidths=0.2) #data.corr()-->correlation matrix\nfig=plt.gcf()\nfig.set_size_inches(14,8)\nplt.show()","3ee3a59a":"train_df.dtypes","d5a2e30d":"X_train = train_df.drop(['Id', 'label','Soil','Wilderness_Area_C'], axis=1)\nY_train = train_df['label']","2b57da75":"X_test,X_val,Y_test,Y_val = train_test_split(X_train,Y_train,random_state=26)\nX_val\n","59357bbd":"X_train.head()","1dae1b04":"Y_train.head()","45f52947":"X_tester = test_df.drop(['Id','Soil','Wilderness_Area_C'], axis=1)\nX_tester.head()","d577fa0c":"# we can try to fit the base model \n# we can try logistic regression\nfrom sklearn.linear_model import LogisticRegressionCV\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn import metrics \nfrom sklearn.metrics import roc_auc_score\n\nclf=LogisticRegressionCV(cv=5, max_iter = 1000).fit(X_train, Y_train)","455ff260":"train_res=clf.predict(X_train)\ntrain_res","058295a8":"test_res = clf.predict(X_tester)\ntest_res\n","60b7b444":"random_forest = RandomForestClassifier(n_estimators=100,oob_score=True,max_features=10)\n\n\nrandom_forest.fit(X_train, Y_train)\n\nY_pred = random_forest.predict(X_tester)\n\n","7ec6b7ae":"submission_df = pd.DataFrame()\nsubmission_df['Id'] = test_df['Id']\nsubmission2_df = pd.DataFrame()\nsubmission2_df['Id'] = test_df['Id']","35ab0e3f":"submission_df['Predicted'] = test_res.tolist()\nsubmission2_df['Predicted'] = Y_pred.tolist()","328f89ed":"submission_df.tail()","c1103c75":"submission2_df.tail()","2082a655":"submission_df.to_csv('vanilla_logistic_submission.csv',index=False)\nsubmission2_df.to_csv('vanilla_logistic_submission2.csv',index=False)","474b8393":"!ls","dee541dc":"# Basic Binary Logistic regression\n\nYou should obviously see the limitations of a model and familiarise yourselves with other models in sci-kit learn.","4462c022":"Dropping 'Soil' column for convenience. You should try to think of ways to generate features from these columns. Try seeing kernels from other Kaggle (Tabular data) competitions for inspirations for Feature Engineering.","ddfb684f":"Your EDA (Exploratory Data Analysis) goes here. Get a good feel of the data, look out for stuff that might help later.","4d1d4ee8":"# Make a submission\n","718c7333":"# Train-Test split\n\nYou are also expected to split train_df into train and validation dataframes (or else choose a cross validation scheme)\n"}}