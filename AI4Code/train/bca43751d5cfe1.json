{"cell_type":{"b870d4a7":"code","8f6fbab3":"code","23a70a5c":"code","ec5b147f":"code","c7a63bbf":"code","85dae23a":"code","396dfbce":"code","480e0681":"code","cd8a8908":"code","b4bd7571":"code","ba104ee9":"code","71f30601":"code","455a9e6c":"code","04feb96d":"code","dd96dbce":"markdown","31f9e300":"markdown","c2677b22":"markdown","adfe0e63":"markdown","6b0ba3fd":"markdown","08442338":"markdown"},"source":{"b870d4a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f6fbab3":"df=pd.read_csv('..\/input\/in-hospital-mortality-prediction\/data01.csv')","23a70a5c":"df.describe()","ec5b147f":"df.isnull().sum()","c7a63bbf":"#df=pd.DataFrame(df)\n#df = df.drop(['Neutrophils','Basophils','Lymphocyte','PT','INR'.'NT-proBNP','Creatine kinase','Creatinine','Urea nitrogen','glucose','Blood potassium','Blood sodium','Blood calcium','Chloride','Anion gap','Magnesium ion','PH','Bicarbonate','Lactic','acid','PCO2','EF'],axis=1)\ndf = df.dropna(subset=['outcome'])\ny=df['outcome']\nx=df.drop(\"outcome\",axis=1)","85dae23a":"for i in df.columns:\n    if df[i].nunique() == 2:\n        print(i)","396dfbce":"import plotly.express as px\nfig = px.histogram(df, x=\"age\", color=\"outcome\", marginal=\"box\", hover_data=df.columns)\nfig.show()","480e0681":"df1 = df.dropna(subset=['BMI'])\nfig = px.histogram(df, x=\"BMI\", color=\"outcome\", marginal=\"box\", hover_data=df1.columns)\nfig.show()","cd8a8908":"df1 = df.dropna(subset=['SP O2'])\nfig = px.histogram(df, x=\"SP O2\", color=\"outcome\", marginal=\"box\", hover_data=df1.columns)\nfig.show()","b4bd7571":"df1 = df.dropna(subset=['heart rate'])\nfig = px.histogram(df, x=\"heart rate\", color=\"outcome\", marginal=\"box\", hover_data=df1.columns)\nfig.show()","ba104ee9":"import plotly.graph_objs as go\ndiabetic = df[df[\"diabetes\"]==1]\nnon_diabetic = df[df[\"diabetes\"]==0]\n\n\nlabels = ['diabetic - Survived','diabetic - Not Survived', \"non diabetic -  Survived\", \"non diabetic - Not Survived\"]\nvalues = [len(diabetic[df[\"outcome\"]==0]),len(diabetic[df[\"outcome\"]==1]),\n          len(non_diabetic[df[\"outcome\"]==0]),len(non_diabetic[df[\"outcome\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","71f30601":"import plotly.graph_objs as go\ndepression = df[df[\"depression\"]==1]\nnon_depression = df[df[\"depression\"]==0]\n\n\nlabels = ['depression - Survived','depression - Not Survived', \"without depression -  Survived\", \"without depression - Not Survived\"]\nvalues = [len(depression[df[\"outcome\"]==0]),len(depression[df[\"outcome\"]==1]),\n          len(non_depression[df[\"outcome\"]==0]),len(non_depression[df[\"outcome\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","455a9e6c":"import plotly.graph_objs as go\nad = df[df[\"deficiencyanemias\"]==1]\nnon_ad = df[df[\"deficiencyanemias\"]==0]\n\n\nlabels = ['Anemia deficiency - Survived','Anime deficiency - Not Survived', \"without Anime deficiency  -  Survived\", \"without Anime deficiency - Not Survived\"]\nvalues = [len(ad[df[\"outcome\"]==0]),len(ad[df[\"outcome\"]==1]),\n          len(non_ad[df[\"outcome\"]==0]),len(non_ad[df[\"outcome\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","04feb96d":"\nrf = df[df[\"Renal failure\"]==1]\nnon_rf = df[df[\"Renal failure\"]==0]\n\n\nlabels = ['Renal failure - Survived','Renal failure - Not Survived', \"without Renal failure  -  Survived\", \"without Renal failure  - Not Survived\"]\nvalues = [len(rf[df[\"outcome\"]==0]),len(rf[df[\"outcome\"]==1]),\n          len(non_rf[df[\"outcome\"]==0]),len(non_rf[df[\"outcome\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","dd96dbce":"**WE CAN SEE A SHARP RISE IN NUMBER OF DEATHS AFTER THE 18-20 RANGE \nTHE BMI RANGE OF 25-29 IS OVERWEIGHT \nTHE BMI RANGE OF 30+ IS OBESE\nWE CAN SEE OVERWEIGHT AND OBESE ARE HAVING RELATIVELY HIGHER NUMBER OF DEATHS**","31f9e300":"# THANKS FOR READING, DO COMMENT FOR SUGGESTIONS AND UPVOTE IF YOU LIKE IT","c2677b22":"**WE CAN CLEARLY SEE THAT THE MOST DEATHS ARE FROM AGES 88-89 AND ALSO AS AGE IS INCREASED THE NUMBER OF DEATHS ARE INCREASING**","adfe0e63":"We can see that these above features have only 2 unique values.","6b0ba3fd":"**CLEARLY THE AMOUNT OF NON DIABETIC SURVIVED IS MORE THAN DIABETIC SURVIVED**","08442338":"**CLEARLY THE AMOUNT OF PEOPLE SURVIVED WITHOUT DEPRESSION IS FAR MORE THAN THOSE SURVIVED WITH DEPRESSRION**"}}