{"cell_type":{"29f25429":"code","faee0ee9":"code","7986b36b":"code","b73e96d5":"code","12b9686e":"code","1a295a0a":"code","abac814a":"code","c34378ab":"markdown"},"source":{"29f25429":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\ndf = pd.read_csv(\"\/kaggle\/input\/jojos-bizarre-adventure-stand-stats\/jojostandstatsv2.csv\")\n\ndictionary = {'A':5, 'B':4, 'C':3, 'D': 2, 'E': 1}\n\nfor i in df.iloc[:, 1:].columns:\n    df[\"number_{}\".format(i)] = df[\"{}\".format(i)].map(dictionary)","faee0ee9":"hist_data = list()\n\nhist_df = df.dropna()\n    \nfor column in list(hist_df.iloc[:, 7:13].columns):\n    hist_data.append(hist_df[column].values)\n    \ngroup_labels = list(hist_df.iloc[:, 1:7].columns)\n\nfig = ff.create_distplot(hist_data, group_labels, show_hist=False, show_rug=False)\nfig.update_layout(title = \"Curve Plot of Stand stats\", title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\")\nfig.show()","7986b36b":"x = df[df[\"Stand\"] == \"Stone Free\"]\ndata = [go.Scatterpolar(\n  r = [x['number_PWR'].values[0],x['number_SPD'].values[0],x['number_RNG'].values[0],x['number_PER'].values[0],x['number_PRC'].values[0],x['number_DEV'].values[0]],\n  theta = ['DESTRUCTIVE POWER <b>{}<b>'.format(x['PWR'].values[0]),'SPEED <b>{}<b>'.format(x['SPD'].values[0]),'RANGE <b>{}<b>'.format(x['RNG'].values[0]),'DURABILITY <b>{}<b>'.format(x['PER'].values[0]),'PRECISION <b>{}<b>'.format(x['PRC'].values[0]),'DEVELOPMENT POTENTIAL <b>{}<b>'.format(x['DEV'].values[0])],\n  fill = 'toself',\n  #fillcolor=\"lightblue\",\n  marker= dict(symbol = 'star',\n               size=20,\n               color='mediumpurple',\n               line=dict(\n               color='royalblue',\n               width=3\n            ))\n)]\n\nlayout = go.Layout(\n  polar = dict(radialaxis= dict(gridcolor = \"white\",\n                                tickmode='array',\n                                tickvals=['0', '1', '2', '3', '4', '5'],\n                                ticktext=['E', 'F', 'D', 'C', 'D', 'A']),\n                                \n  angularaxis_linecolor='black',\n  bgcolor = 'lightgreen'),\n  title = \"Stats of <b>{}<b>\".format(x.Stand.values[0])\n)\nfig = go.Figure(data=data, layout=layout)\nfig.update_layout(title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\")\niplot(fig)","b73e96d5":"x = df[df[\"Stand\"] == \"Gold Experience\"]\ndata = [go.Scatterpolar(\n  r = [x['number_PWR'].values[0],x['number_SPD'].values[0],x['number_RNG'].values[0],x['number_PER'].values[0],x['number_PRC'].values[0],x['number_DEV'].values[0]],\n  theta = ['DESTRUCTIVE POWER <b>{}<b>'.format(x['PWR'].values[0]),'SPEED <b>{}<b>'.format(x['SPD'].values[0]),'RANGE <b>{}<b>'.format(x['RNG'].values[0]),'DURABILITY <b>{}<b>'.format(x['PER'].values[0]),'PRECISION <b>{}<b>'.format(x['PRC'].values[0]),'DEVELOPMENT POTENTIAL <b>{}<b>'.format(x['DEV'].values[0])],\n  fill = 'toself',\n  #fillcolor=\"lightblue\",\n  marker= dict(symbol = 'star-diamond',\n               size=20,\n               color='gold',\n               line=dict(\n               color='gold',\n               width=3\n            ))\n)]\n\nlayout = go.Layout(\n  polar = dict(radialaxis= dict(gridcolor = \"white\",\n                                tickmode='array',\n                                tickvals=['0', '1', '2', '3', '4', '5'],\n                                ticktext=['E', 'F', 'D', 'C', 'D', 'A']),\n                                \n  angularaxis_linecolor='black',\n  bgcolor = 'rebeccapurple'),\n  title = \"Stats of <b>{}<b>\".format(x.Stand.values[0])\n)\nfig = go.Figure(data=data, layout=layout)\nfig.update_layout(title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\")\niplot(fig)","12b9686e":"fig = px.sunburst(df, path=['PWR', \"Stand\"], color='PWR', title=\"Stands by Destructive Power\", color_discrete_sequence= px.colors.sequential.thermal)\nfig.update_layout(title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\")\nfig.show()","1a295a0a":"fig = px.sunburst(df, path=['SPD', \"Stand\"], color='SPD', title=\"Stands by Speed\", color_discrete_sequence= px.colors.sequential.Plasma_r)\nfig.update_layout(title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\")\nfig.show()","abac814a":"fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=list(df.DEV.unique()),\n                             values=list(df.DEV.value_counts()), hole=.2, name=\"DEV\",\n                             ), 1, 1)\n\nfig.add_trace(go.Pie(labels=list(df.PWR.unique()),\n                             values=list(df.PWR.value_counts()), hole=.2, name=\"PWR\",\n                             ), 1, 2)\n\nfig.update_traces(textinfo='label+percent', textfont_size=16, insidetextorientation='radial',\n                  marker=dict(colors=px.colors.diverging.Portland, line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    title_text=\"Stat values\", title_x=0.5, font=dict(family=\"Times New Roman\", size=18), font_color=\"#000000\",\n    annotations=[dict(text='DEV', x=0.19, y=0.5, font_size=20, showarrow=False),\n                 dict(text='PWR', x=0.82, y=0.5, font_size=20, showarrow=False)])\n\nfig.show()","c34378ab":"Inspired by: https:\/\/www.kaggle.com\/thebrownviking20\/intermediate-visualization-tutorial-using-plotly"}}