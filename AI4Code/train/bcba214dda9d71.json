{"cell_type":{"a7d195cc":"code","83d3a247":"code","8015fffd":"code","45ee1aa6":"code","2609749e":"code","524f57ba":"code","7d2eacf0":"code","543dedfe":"code","971aaa96":"code","759c5b67":"code","e87d0b45":"code","00a1d023":"code","65fb9807":"code","58df659f":"code","0845ef3a":"code","48db449e":"code","5a950291":"code","5604b5f4":"code","5662c460":"code","82605b89":"code","f754a574":"code","3d30f818":"markdown","25a8162a":"markdown","e2986ce1":"markdown","609b39c8":"markdown","fa5986f5":"markdown","ecb67708":"markdown","ac3749bb":"markdown","b7569209":"markdown","5e969098":"markdown","fa484755":"markdown","9bccf7dd":"markdown"},"source":{"a7d195cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83d3a247":"df = pd.read_csv('\/kaggle\/input\/heart-attack-prediction\/data.csv')\ndf.head()","8015fffd":"df.isnull().sum()","45ee1aa6":"x = df.drop(columns=['slope','ca','thal','fbs'])\nprint(x)","2609749e":"y = df['fbs']\nprint(y)","524f57ba":"from sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder()  \nx= x.apply(label_encoder.fit_transform)\nprint(x)","7d2eacf0":"y= label_encoder.fit_transform(y)\nprint(y)","543dedfe":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","971aaa96":"iplot([go.Histogram2dContour(x=df.head(500)['age'], \n                             y=df.head(500)['fbs'], \n                             contours=go.Contours(coloring='heatmap')),\n       go.Scatter(x=df.head(1000)['age'], y=df.head(1000)['fbs'], mode='markers')])","759c5b67":"df = df.assign(n=0).groupby(['fbs', 'age'])['n'].count().reset_index()\ndf = df[df[\"age\"] < 100]\nv = df.pivot(index='age', columns='fbs', values='n').fillna(0).values.tolist()","e87d0b45":"iplot([go.Surface(z=v)])","00a1d023":"import seaborn as sns\nimport matplotlib.pyplot as plt","65fb9807":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Heart attack prediction\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=df['fbs'], y=df['age'])\n\n# Add label for vertical axis\nplt.ylabel(\"age\")","58df659f":"sns.lineplot(data=y)","0845ef3a":"sns.scatterplot(data=df, x=\"age\", y=\"fbs\")","48db449e":"df['fbs'].value_counts().head(10).plot.pie()","5a950291":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split","5604b5f4":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=4)","5662c460":"nb = GaussianNB()\nnb.fit(x_train, y_train)","82605b89":"y_pred = nb.predict(x_test)\nprint(y_pred)\n\nprint(accuracy_score(y_test, y_pred))","f754a574":"from sklearn import model_selection\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n# random forest model creation\nrfc = RandomForestClassifier()\nrfc.fit(x_train,y_train)\n# predictions\nrfc_predict = rfc.predict(x_test)\n\nprint(\"Accuracy:\",accuracy_score(y_test, rfc_predict))","3d30f818":"3D plots using plotly","25a8162a":"Bar chart using Seaborn","e2986ce1":"Label Encoding is needed to convert the string value to integer.","609b39c8":"We are going to find the null values presented in the datasets.","fa5986f5":"Predictions using Randomforest","ecb67708":"Pie charts","ac3749bb":" **Surface contours using plotly**","b7569209":"Scatterplot using seaborn","5e969098":"Line plot using Seaborn","fa484755":"We are dropping three columns, which is necessary to our dataset.","9bccf7dd":"Predictions using Naive-Bayes Classifier"}}