{"cell_type":{"61b52ce5":"code","632b5a23":"code","b6b9c0dd":"code","d0262eb2":"code","145f1350":"code","407c5c88":"code","972bea7f":"code","f4286f0b":"code","fdc1677e":"markdown","769b1605":"markdown","24e7e74b":"markdown","0ecb0100":"markdown","a38709ea":"markdown","8217b360":"markdown","efda746e":"markdown"},"source":{"61b52ce5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","632b5a23":"from collections import Counter\n\ndef count_words_fast(text):\n    text = text.lower()\n    skips = [\".\", \",\", \";\", \":\", \"'\", '\"', \"\\n\", \"!\", \"?\", \"(\", \")\"]\n    for ch in skips:\n        text = text.replace(ch, \"\")\n    word_counts = Counter(text.split(\" \"))\n    return word_counts\n\ndef word_stats(word_counts):\n    num_unique = len(word_counts)\n    counts = word_counts.values()\n    return (num_unique, counts)","b6b9c0dd":"hamlets = pd.read_csv(\"\/kaggle\/input\/hamlet-english-german-portuguese\/hamlets.csv\",index_col=0)             \nhamlets","d0262eb2":"language, text = hamlets.iloc[0]\n\ncounted_text = count_words_fast(text)\n\ndata = pd.DataFrame({\n    \"word\": list(counted_text.keys()),\n    \"count\": list(counted_text.values())\n})\ndata.head(10)","145f1350":"data[\"length\"] = data[\"word\"].apply(len)\n\ndata.loc[data[\"count\"] > 10,  \"frequency\"] = \"frequent\"\ndata.loc[data[\"count\"] <= 10, \"frequency\"] = \"infrequent\"\ndata.loc[data[\"count\"] == 1,  \"frequency\"] = \"unique\"\n\ndata.groupby('frequency').count()","407c5c88":"sub_data = pd.DataFrame({\n    \"language\": language,\n    \"frequency\": [\"frequent\",\"infrequent\",\"unique\"],\n    \"mean_word_length\": data.groupby(by = \"frequency\")[\"length\"].mean(),\n    \"num_words\": data.groupby(by = \"frequency\").size()\n})\n\nsub_data","972bea7f":"def summarize_text(language, text):\n    counted_text = count_words_fast(text)\n\n    data = pd.DataFrame({\n        \"word\": list(counted_text.keys()),\n        \"count\": list(counted_text.values())\n    })\n    \n    data.loc[data[\"count\"] > 10,  \"frequency\"] = \"frequent\"\n    data.loc[data[\"count\"] <= 10, \"frequency\"] = \"infrequent\"\n    data.loc[data[\"count\"] == 1,  \"frequency\"] = \"unique\"\n    \n    data[\"length\"] = data[\"word\"].apply(len)\n    \n    sub_data = pd.DataFrame({\n        \"language\": language,\n        \"frequency\": [\"frequent\",\"infrequent\",\"unique\"],\n        \"mean_word_length\": data.groupby(by = \"frequency\")[\"length\"].mean(),\n        \"num_words\": data.groupby(by = \"frequency\").size()\n    })\n    \n    return(sub_data)\n    \ngrouped_data = pd.DataFrame(columns = [\"language\", \"frequency\", \"mean_word_length\", \"num_words\"])\n\nfor i in range(hamlets.shape[0]):\n    language, text = hamlets.iloc[i]\n    sub_data = summarize_text(language, text)\n    grouped_data = grouped_data.append(sub_data)\n    \ngrouped_data","f4286f0b":"colors = {\"Portuguese\": \"green\", \"English\": \"blue\", \"German\": \"red\"}\nmarkers = {\"frequent\": \"o\",\"infrequent\": \"s\", \"unique\": \"^\"}\nimport matplotlib.pyplot as plt\nfor i in range(grouped_data.shape[0]):\n    row = grouped_data.iloc[i]\n    plt.plot(row.mean_word_length, row.num_words,\n        marker=markers[row.frequency],\n        color = colors[row.language],\n        markersize = 10\n    )\n\ncolor_legend = []\nmarker_legend = []\nfor color in colors:\n    color_legend.append(\n        plt.plot([], [],\n        color=colors[color],\n        marker=\"o\",\n        label = color, markersize = 10, linestyle=\"None\")\n    )\nfor marker in markers:\n    marker_legend.append(\n        plt.plot([], [],\n        color=\"k\",\n        marker=markers[marker],\n        label = marker, markersize = 10, linestyle=\"None\")\n    )\nplt.legend(numpoints=1, loc = \"upper left\")\n\nplt.xlabel(\"Mean Word Length\")\nplt.ylabel(\"Number of Words\")\nplt.show();","fdc1677e":"We will find and plot the distribution of word frequencies for each translation of Hamlet.  Perhaps the distribution of word frequencies of Hamlet depends on the translation --- let's find out!","769b1605":"We will summarize the text for a single translation of Hamlet in a `pandas` dataframe. ","24e7e74b":"We will continue to define summary statistics for a single translation of Hamlet. ","0ecb0100":"Now, we will plot our results and look for differences across each translation.","a38709ea":"Now, we will join all the data summaries for text Hamlet translation.","8217b360":"We will find and visualize summary statistics of the text of different translations of Hamlet. Now, functions `count_words_fast` and `word_stats`","efda746e":"Now, we will summarize the statistics in data into a smaller pandas dataframe. "}}