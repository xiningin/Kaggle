{"cell_type":{"d67675d5":"code","a0bd4497":"code","c71d4fda":"code","4a84936a":"code","6d6f3a27":"code","42869efc":"code","19c79123":"code","94249ad9":"code","ee7a3026":"code","4ba4e06f":"code","23c4a84a":"code","544b7456":"code","98e975ee":"code","69d7ca1d":"code","6c5363e6":"code","db451fa9":"code","f87e5132":"code","6eebaab4":"code","e3d1b592":"code","d575bba9":"code","68517f36":"code","e77edcbe":"code","8289261e":"code","16b440ef":"code","ba02d092":"code","2f683e49":"code","3c8b822d":"code","3a0ea8f3":"code","ce9ee988":"code","d15d0ca4":"code","f3f5b2fa":"code","e737d580":"code","31acb748":"code","81d9bba9":"code","034ce2b9":"code","3910517b":"code","d38991dc":"code","63267728":"code","8e85ecfd":"code","e33c7208":"markdown","d34cf491":"markdown","8dfd0109":"markdown","b9dd8ce5":"markdown","7efe9023":"markdown","5c7b5e6c":"markdown","9b332969":"markdown","f00dae19":"markdown","f1845763":"markdown","8e335b1b":"markdown","34529b0f":"markdown","0bef23b1":"markdown","95ad8632":"markdown","1ec83775":"markdown"},"source":{"d67675d5":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a0bd4497":"#import packages for the data cleaning and EDA\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport seaborn as sns","c71d4fda":"#take a look at the origninal data\ndata = pd.read_csv('..\/input\/10-coffee-places-from-ukrainian-cities\/Ukraine Cities Coffee Shops Analysis - Main.csv')\ndata_duplicate = data.copy()\ndata.head()","4a84936a":"data.info()","6d6f3a27":"#check whether there is a missing value\ndata.isna().sum()","42869efc":"#replace the missing values by average numbers for Rating and Reviews columns\ndata['Rating'] = data['Rating'].fillna(data['Rating'].mean())\ndata['Reviews'] = data['Reviews'].fillna(data['Reviews'].mean())\ndata.isna().sum()","19c79123":"#take a look at the variables despite the missing values in 4 columns\nna_list = ['Price', 'Delivery option', 'Dine in option', 'Takeout option']\n\nfor na in na_list:\n    counts = data[na].value_counts()\n    print('{}\\n{}\\n'.format(na, counts))","94249ad9":"data = data.drop('Price', axis=1)\ndata['Delivery option'] = data['Delivery option'].fillna('unknown')\ndata['Dine in option'] = data['Dine in option'].fillna('False')\ndata['Takeout option'] = data['Takeout option'].fillna('False')\nprint(data.isna().sum())\n\nmsno.matrix(data)\nplt.show()","ee7a3026":"#change the variable type in the Reviews columns to integer\ndata['Reviews'] = data['Reviews'].astype('int')\ndata.info()","4ba4e06f":"#review the number of shops in different regions\ndata.groupby('Region')['Place name'].count()","23c4a84a":"#chech whether there is a duplicated value in the Place Name column\ndata.groupby('Region')['Place name'].nunique()","544b7456":"data[data['Place name'].duplicated(keep=False)]","98e975ee":"data['Place name'] = data['Place name'].str.lower()\ndata['Place type'] = data['Place type'].str.lower()\ndata.head()","69d7ca1d":"#define categorical columns and numeric columns\ncat_columns = ['Place type', 'Delivery option', 'Dine in option', 'Takeout option']\nnum_columns = ['Rating', 'Reviews']","6c5363e6":"#bar plots to see the value distributions in differnet columns\nplt.figure(figsize=(12,16))\nsns.set_context(\"notebook\")\nplt.style.use('ggplot') \nplt.subplots_adjust(hspace=0.4, wspace=0.6)\nsns.set_palette(\"Spectral\")\nfor i, cat_col in enumerate(cat_columns):\n    plt.subplot(3, 2, i+1)\n    sns.countplot(y=cat_col, data=data, \n                  order=data[cat_col].value_counts().index)\n    plt.title(cat_col)\n    plt.xticks(rotation=0)\nplt.show()","db451fa9":"#histogram to see the distributions in Rating and Reviews columns\nplt.figure(figsize=(12,12))\nplt.subplots_adjust(hspace=0.6, wspace=0.6)\nfor i, num_col in enumerate(num_columns):\n    plt.subplot(2, 2, i+1)\n    sns.histplot(data[num_col], color='grey', kde=True)\n    plt.title(num_col)\nplt.show()","f87e5132":"plt.boxplot(data['Reviews'])\nplt.xlabel('Reviews')\nplt.ylabel('Count')\nplt.title('Outliners of The Review Column')\nplt.show()","6eebaab4":"review_top = data['Reviews'].mean()+data['Reviews'].std()*3\ndata[data['Reviews'] > review_top]","e3d1b592":"#drop the outliner\ndata_dropone = data.drop(100, axis=0)\ndata_dropone","d575bba9":"data_dropone.reset_index(drop=True)","68517f36":"#group shops by regions and get the average numbers of the ratings and reviews\nregion_grouped = data_dropone.groupby('Region')[num_columns].mean().round(2)\nregion_grouped","e77edcbe":"#plot the average ratings and reviews per region\nplt.figure(figsize=(14,12))\nplt.subplots_adjust(hspace=0.2, wspace=0.34)\nsns.set_palette(\"Paired\")\nfor i, group_col in enumerate(region_grouped.columns.to_list()):\n    plt.subplot(2, 2, i+1)\n    sns.barplot(x=region_grouped[group_col], y=region_grouped.index, log=True)\n    plt.title(group_col +' (Log Scale)')\n    plt.xticks(rotation=0)\nplt.show()","8289261e":"#import the packages for clustering\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans","16b440ef":"#select Rating and Reviews columns\ndata_cluster = data_dropone[num_columns]\ndata_cluster","ba02d092":"#standardize variables in these two colums\nscaler=StandardScaler()\nscaler.fit(data_cluster)\ndata_normalized = scaler.transform(data_cluster)\ndata_normalized = pd.DataFrame(data=data_normalized, columns=data_cluster.columns)\ndata_normalized.agg(['mean', 'std']).round()","2f683e49":"#find the elbow to determine the optimal number of clusters\nsse={}\nfor k in range(1, 11):\n    kmeans = KMeans(n_clusters=k, random_state=1)\n    kmeans.fit(data_normalized)\n    sse[k] = kmeans.inertia_\n\nsns.pointplot(x=list(sse.keys()), y=list(sse.values()))\nplt.title('The Elbow Method')\nplt.xlabel('k')\nplt.ylabel('SSE')\nplt.show()","3c8b822d":"#get the labels by K-means clustering and then attach the labels back to the data\nkmeans = KMeans(n_clusters=4, random_state=44)\nkmeans.fit(data_normalized)\ncluster_labels = kmeans.labels_\n\ndata_dropone = data_dropone.assign(cluster=cluster_labels)\ndata_dropone.head()","3a0ea8f3":"#review the number of entries in different clusters\ndata_dropone['cluster'].value_counts()","ce9ee988":"#review the average ratings and reviews in different clusters\ndata_comparison = data_dropone[['Rating', 'Reviews', 'cluster']].groupby('cluster').mean()\ndata_comparison","d15d0ca4":"#transform the numbers into proportions\nrating_range = data_comparison['Rating'].max() - data_comparison['Rating'].min()\ndata_comparison['rating_prop'] = (data_comparison['Rating'] - data_comparison['Rating'].min()) \/ rating_range\nreview_range = data_comparison['Reviews'].max() - data_comparison['Reviews'].min()\ndata_comparison['review_prop'] = (data_comparison['Reviews'] - data_comparison['Reviews'].min()) \/ review_range\ndata_comparison","f3f5b2fa":"#heatmap to easily understand the value difference between clusters\nplt.subplots(figsize=(16, 6))\nsns.heatmap(data_comparison[['rating_prop', 'review_prop']], cmap = 'YlGnBu')\nplt.show()","e737d580":"#select the shops in cluster 3\ncluster_3 = data_dropone[data_dropone['cluster']==3]\nprint('Number of Coffee Places in Cluster 3:', len(cluster_3))\ncluster_3.head()","31acb748":"#plot the distributions in cluster 3\nplt.figure(figsize=(12,16))\nplt.subplots_adjust(hspace=0.4, wspace=0.6)\nsns.set_palette(\"Spectral\")\nfor i, cat_col in enumerate(cat_columns):\n    plt.subplot(3, 2, i+1)\n    sns.countplot(y=cat_col, data=cluster_3, \n                  order=cluster_3[cat_col].value_counts().index)\n    plt.title(cat_col)\n    plt.xticks(rotation=0)\nplt.show()","81d9bba9":"#get the percentage of the shops providing all services in cluster 3\ndeliver = cluster_3['Delivery option'] == True\ndinein = cluster_3['Dine in option'] == True\ntakeout = cluster_3['Takeout option'] == True\n\nall_service_3 = cluster_3[deliver & dinein & takeout]\nprop_3 = len(all_service_3) \/ len(cluster_3)\nprint('{:.1%} of the Shops Provides All Services in Cluster 3.'.format(prop_3))","034ce2b9":"#get the percentage of the shops providing all services in cluster 0\ncluster_0 = data_dropone[data_dropone['cluster']==0]\ndeliver = cluster_0['Delivery option'] == True\ndinein = cluster_0['Dine in option'] == True\ntakeout = cluster_0['Takeout option'] == True\n\nall_service_0 = cluster_0[deliver & dinein & takeout]\nprop_0 = len(all_service_0) \/ len(cluster_0)\nprint('{:.1%} of the Shops Provides All Services in Cluster 0.'.format(prop_0))","3910517b":"#get the percentage of the shops providing all services in cluster 1\ncluster_1 = data_dropone[data_dropone['cluster']==1]\ndeliver = cluster_1['Delivery option'] == True\ndinein = cluster_1['Dine in option'] == True\ntakeout = cluster_1['Takeout option'] == True\n\nall_service_1 = cluster_1[deliver & dinein & takeout]\nprop_1 = len(all_service_1) \/ len(cluster_1)\nprint('{:.1%} of the Shops Provides All Services in Cluster 1.'.format(prop_1))","d38991dc":"#get the percentage of the shops providing all services in cluster 2\ncluster_2 = data_dropone[data_dropone['cluster']==2]\ndeliver = cluster_2['Delivery option'] == True\ndinein = cluster_2['Dine in option'] == True\ntakeout = cluster_2['Takeout option'] == True\n\nall_service_2 = cluster_2[deliver & dinein & takeout]\nprop_2 = len(all_service_2) \/ len(cluster_2)\nprint('{:.1%} of the Shops Provides All Services in Cluster 2.'.format(prop_2))","63267728":"#plot the percentage of the shops providing all services in different clusters\nplt.figure(figsize=(12,6))\ncluster = ['Cluster 0', 'Cluster 1', 'Cluster 2', 'Cluster 3']\nproportion = [prop_0*100, prop_1*100, prop_2*100, prop_3*100]\nplt.bar(cluster, proportion, color = 'grey')\nplt.title('Proportion of The Shops Providing All Services', size=16, y=1.04)\nplt.xlabel('Clusters', size=14)\nplt.ylabel('Proportion (%)', size=14)\nplt.show()","8e85ecfd":"plt.figure(figsize=(12,6))\ndict_3 = dict(cluster_3['Region'].value_counts())\nplt.bar(list(dict_3.keys()), list(dict_3.values()))\nplt.xticks(rotation=45)\nplt.title('Shops Sorted by Regions (Cluster 3)', y=1.04)\nplt.xlabel('Regions')\nplt.ylabel('Number of Shops in Cluster 3')\nplt.show()","e33c7208":"Here is the first view of the shop structure in cluster 3. It seems most shops in cluster 3 provide the same services as the previous exploratory analysis for all shops. The common type of the places in cluster 3 is a coffee shop. They do not provide a delivery service but have dine-in and takeout options. However, compared to the previous plot in the EDA section, we can notice that more shops in cluster 3 provide a delivery service, although they are still not the majority in this cluster. However, this analysis assumes that shops providing all services, which are delivery, dine-in, and take-out services, would have a higher possibility of getting higher ratings and reviews.","d34cf491":"Take a look at the proportions of the shops providing all services in different clusters. It is obvious that a higher percentage, 21.2%, of shops in cluster 0 provides all services. It could be a concern for the next marketing plan.","8dfd0109":"Most shops have around 4 rating scores. As for the reviews column, it is highly skewed. It seems there are some outliners having super high reviews. Thus, this analysis would like to review whether the outliners are suitable to be kept.","b9dd8ce5":"Because of few missing values in the Rating and Reviews columns, replacing the missing values with average numbers is an idea.\n\nAs for the price, most values are either $$ or missing values, so removing the price column should be fine because it does not provide enough information.\n\nRegarding the dine-in and takeout services, the variables in these columns are either \"True\" and missing values. Thus, it is obvious that the missing values should be \"False,\" which means the shops do not provide dine-in or takeout options.\n\nLastly, since the missing values in the Delivery column are neither \"True\" nor \"False,\" this analysis replace the missing values with \"unknown.\"","7efe9023":"It seems there are some franchise coffee shops in this dataset. They have the same name in different regions, or some of them are in the same regions. However, it is acceptable since they are different shops providing different services. This analysis will keep these duplicated place names.","5c7b5e6c":"Here are the clustering results.\n\n- Cluster 0 \u2013 High rating with low reviews\n- Cluster 1 \u2013 Both medium rating and reviews\n- Cluster 2 \u2013 Both low rating and reviews\n- Cluster 3 \u2013 Medium rating and high reviews\n\nShops in cluster 3 have both higher ratings and reviews. It tells the shops in this cluster have a better performance. so this analysis takes cluster 3 as an example to explore the traits of the shops.","9b332969":"Take a look at the locations of the shops in cluster 0.\u00a0Lviv\u00a0and Kiev are the regions where these coffee shops are.\n\n# 5. Conclusion\nThis analysis uses an elbow method to get an optimal number of clusters for K-means clustering. Different clusters show different rating and review performance. The findings are as below.\n\n1. 4 clusters is an optimal number of clusters to well split the shops based on the rating and review performance.\n    - Cluster 0 \u2013 High rating with low reviews\n    - Cluster 1 \u2013 Both medium rating and reviews\n    - Cluster 2 \u2013 Both low rating and reviews\n    - Cluster 3 \u2013 Medium rating and high reviews\n2. 21.2% of shops provides all services, delivery, dine-in, and takeout options, in Cluster 3\n3. Shops in Lviv and Kiev are the majority in Cluster 3\n\nLastly, here are suggestions for further analysis to explore more insights.\n\n1. Complete the data\n    - Since there are many missing values in this dataset, retrive the values would get a more accurate analysis.This\n2. Take a closer look for all clusters\n    - Explorre the characters of other clusters for further analysis since this analysis only focuses on the cluster 3.\n3. different clustering methods\n    - Use a hierarchical clustering method to group the shops and then cross-validate the results of different clustering methods.","f00dae19":"By looking at the average rating and reviews per region, they demonstrate that a high rating does not support high reviews for most regions. Only the shops in Kiev have a relatively high rating and high reviews.\n\n# 4. Analysis\n## 4.1 Elbow Method \nThis analysis chooses ratings and reviews for clustering because these numbers are the common metrics to evaluate marketing performance. Likewise, an Elbow method would help\u00a0determine how many clusters are appropriate for the data.","f1845763":"# 1. Backgroud\n## 1.1 Situation\nA coffee company is looking for the opportunities to expand the business into Ukraine. Due to a marketing purpose, we would like to identify the key coffee shops in Ukraine in order to build up the next marketing plans. \n\n## 1.2 Analysis Plan\nThe analysis plan is to answer the questions.\n\n1. What kinds of services do these coffee shops provide in Ukraine? \n2. In the cluster with higher ratings and reviews, what services do the coffee places provide?\n3. Where are the coffee shops located? \n \n\n# Processing\n## 2.1 Data Structure\nThe data contains 200 rows and 9 columns. The columns are as below.\n\n1. Region\n2. Place name\n3. Place type\n4. Rating\n5. Reviews\n6. Price\n7. Delivery option\n8. Dine in option\n9. Takeout option\n\n## 2.2 Method\nThe tools to preceed this analysis are as follows.\n\n- Python\n- Elbow Method - A tool for choosing an optimal number of clusters.\n- K-means clustering - It groups entries by a closer distance between entries. \n\n# 3. Process\n## 3.1 Data Cleaning\nThis section involves data cleansing with an exploratory data analysis.","8e335b1b":"Reagarding the plots above, most places are coffee shops. Most of them do not have a delivery service but have dine-in and take-out options.","34529b0f":"It is more efficient to choose 3 or 4 clusters, as the plot shown. The sharpest angels are at 3 or 4. It means more than 4 clusters would not have much difference between clusters due to the slope. Thus, this analysis chooses 4 clusters to proceed with the clustering analysis.\n\n## 4.2 K-means Clustering\nK-Mean clustering groups entries by SSE (Sum of Squared Distance), which is a good method to sort items with similar characters.","0bef23b1":"It looks the place is a coffee manufacturer who would not be a huge concern if this analysis drops this shop. Although we might want to review this shop in the future, we can still evaluate it individually. It would be better to drop it for further analysis. Otherwise, it would cause issues when clustering.","95ad8632":"Lastly, change the letters in the Place name and Place type columns into lower cases in order to avoid any categorical issue.\n\n## 3.2 EDA (Exploratory Data Analysis)\nAn EDA (Exploratory Data Analysis) will help understand the main characteristics of the dataset. Further analysis would be based on the findings explored from the EDA.","1ec83775":"Standardization is required since the distributions of these two columns are skewed, as mentioned in the previous sections. Besides, a normal distribution would help K-means clustering get a better result."}}