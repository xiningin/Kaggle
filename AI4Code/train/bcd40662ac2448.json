{"cell_type":{"eccffc10":"code","63591eda":"code","90d1d33a":"code","4ac6223e":"code","8e273ad0":"code","bf997e1d":"code","3101f05d":"code","c977af1e":"code","5b3d6c67":"code","b2fdc553":"code","51306dbb":"code","3587b245":"code","dc472eb8":"code","eddace28":"code","011a8ad4":"code","09da3317":"code","be0247c5":"code","da255f09":"markdown","4f932998":"markdown","e1b1974f":"markdown","ccb447c5":"markdown","41ed8cb8":"markdown","03e2e9c9":"markdown","e9830bd1":"markdown","9225d2e2":"markdown"},"source":{"eccffc10":"import pandas as pd\nimport gensim\nfrom gensim.utils import simple_preprocess\nfrom gensim.parsing.preprocessing import STOPWORDS\nfrom nltk.stem import WordNetLemmatizer, SnowballStemmer\nfrom nltk.stem.porter import *\nfrom gensim import corpora, models\nimport numpy as np\nfrom pprint import pprint\nnp.random.seed(2018)\nimport nltk\n#nltk.download('wordnet')","63591eda":"data = pd.read_csv('..\/input\/abcnews-date-text.csv', error_bad_lines=False);\ndata_text = data[['headline_text']]\ndata_text['index'] = data_text.index\ndocuments = data_text","90d1d33a":"print(len(documents))\nprint(documents[:5])","4ac6223e":"def lemmatize_stemming(text):\n    stemmer = nltk.stem.porter.PorterStemmer()\n    return stemmer.stem(WordNetLemmatizer().lemmatize(text, pos='v'))\ndef preprocess(text):\n    \n    result = []\n    for token in gensim.utils.simple_preprocess(text):\n        if token not in gensim.parsing.preprocessing.STOPWORDS and len(token) > 3:\n            result.append(lemmatize_stemming(token))\n    return result","8e273ad0":"doc_sample = documents[documents['index'] == 4310].values[0][0]\nprint('original document: ')\nwords = []\nfor word in doc_sample.split(' '):\n    words.append(word)\nprint(words)\nprint('\\n\\n tokenized and lemmatized document: ')\nprint(preprocess(doc_sample))","bf997e1d":"processed_docs = documents['headline_text'].map(preprocess)\nprocessed_docs[:10]","3101f05d":"dictionary = gensim.corpora.Dictionary(processed_docs)\ncount = 0\nfor k, v in dictionary.iteritems():\n    print(k, v)\n    count += 1\n    if count > 10:\n        break","c977af1e":"dictionary.filter_extremes(no_below=15, no_above=0.5, keep_n=100000)\n","5b3d6c67":"bow_corpus = [dictionary.doc2bow(doc) for doc in processed_docs]\nbow_corpus[4310]","b2fdc553":"bow_doc_4310 = bow_corpus[4310]\nfor i in range(len(bow_doc_4310)):\n    print(\"Word {} (\\\"{}\\\") appears {} time.\".format(bow_doc_4310[i][0], \n                                               dictionary[bow_doc_4310[i][0]], \nbow_doc_4310[i][1]))","51306dbb":"tfidf = models.TfidfModel(bow_corpus)\ncorpus_tfidf = tfidf[bow_corpus]\nfor doc in corpus_tfidf:\n    pprint(doc)\n    break","3587b245":"lda_model = gensim.models.LdaMulticore(bow_corpus, num_topics=10, id2word=dictionary, passes=2, workers=2)\n\nfor idx, topic in lda_model.print_topics(-1):\n    print('Topic: {} \\nWords: {}'.format(idx, topic))","dc472eb8":"lda_model_tfidf = gensim.models.LdaMulticore(corpus_tfidf, num_topics=10, id2word=dictionary, passes=2, workers=4)\nfor idx, topic in lda_model_tfidf.print_topics(-1):\n    print('Topic: {} Word: {}'.format(idx, topic))","eddace28":"processed_docs[4310]","011a8ad4":"for index, score in sorted(lda_model[bow_corpus[4310]], key=lambda tup: -1*tup[1]):\n    print(\"\\nScore: {}\\t \\nTopic: {}\".format(score, lda_model.print_topic(index, 10)))","09da3317":"for index, score in sorted(lda_model_tfidf[bow_corpus[4310]], key=lambda tup: -1*tup[1]):\n    print(\"\\nScore: {}\\t \\nTopic: {}\".format(score, lda_model_tfidf.print_topic(index, 10)))","be0247c5":"unseen_document = 'How a Pentagon deal became an identity crisis for Google'\nbow_vector = dictionary.doc2bow(preprocess(unseen_document))\nfor index, score in sorted(lda_model[bow_vector], key=lambda tup: -1*tup[1]):\n    print(\"Score: {}\\t Topic: {}\".format(score, lda_model.print_topic(index, 5)))","da255f09":"**Running LDA using Bag of Words\n**","4f932998":"**Performance evaluation by classifying sample document using LDA Bag of Words model**","e1b1974f":"**Running LDA using TF-IDF**","ccb447c5":"**Performance evaluation by classifying sample document using LDA TF-IDF model.**","41ed8cb8":"Gensim filter_extremes\nFilter out tokens that appear in\n* less than 15 documents (absolute number) or\n* more than 0.5 documents (fraction of total corpus size, not absolute number).\n* after the above two steps, keep only the first 100000 most frequent tokens.","03e2e9c9":"Topic modeling is a type of statistical modeling for discovering the abstract \u201ctopics\u201d that occur in a collection of documents. Latent Dirichlet Allocation (LDA) is an example of topic model and is used to classify text in a document to a particular topic. It builds a topic per document model and words per topic model, modeled as Dirichlet distributions.","e9830bd1":"Data Pre-processing\n\nWe will perform the following steps:\n* Tokenization: Split the text into sentences and the sentences into words. Lowercase the words and remove punctuation.\n* Words that have fewer than 3 characters are removed.\n* All stopwords are removed.\n* Words are lemmatized \u2014 words in third person are changed to first person and verbs in past and future tenses are changed into present.\n* Words are stemmed \u2014 words are reduced to their root form.","9225d2e2":"**Testing model on unseen document\n**"}}