{"cell_type":{"25e6b9e5":"code","227908f4":"code","24b04439":"code","a4ad9741":"code","a57261f1":"code","068be922":"code","45490955":"code","869b4aff":"code","f5c0711c":"code","6656242e":"code","86e464ae":"code","b5545956":"code","3307d8c5":"code","f6372139":"code","d05c995e":"markdown","8e1bdb29":"markdown","50254a05":"markdown","9a83c80f":"markdown","fa6a6b11":"markdown","91213be5":"markdown","dd464196":"markdown","2dfa4b8b":"markdown","6a564580":"markdown","a12656d3":"markdown","a0cc81a3":"markdown","08080dc8":"markdown","5ea6b9e5":"markdown","0c02f254":"markdown","67300b44":"markdown","c10474fa":"markdown","536bc8bd":"markdown"},"source":{"25e6b9e5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","227908f4":"train_data = '..\/input\/song-popularity-prediction\/train.csv'\ntest_data = '..\/input\/song-popularity-prediction\/test.csv'","24b04439":"df = pd.read_csv(train_data)\ndf.head()","a4ad9741":"num_rows, num_cols = df.shape\nprint(f\"Number of rows: {num_rows}\")\nprint(f\"Number of features: {num_cols-2}\")","a57261f1":"df.dtypes","068be922":"null_map = df.drop(columns=['id', 'song_popularity']).isnull()\nplt.figure(figsize=(20, 8))\nplt.title('Overview of missing values', fontweight='bold', fontsize=15)\nsns.heatmap(null_map, cmap='viridis');","45490955":"temp_df = df.drop(columns=['id','song_popularity'])\ntotal_missing = temp_df.isnull().sum().sum()*100\/(temp_df.shape[0]*temp_df.shape[1])\nprint(f\"{total_missing:.2f}% of total data is missing.\")","869b4aff":"percent_of_null = df.drop(columns=['id', 'song_popularity']).isnull().sum()*100\/num_rows\nplt.figure(figsize=(20, 8))\nplt.title('Percentage of missing values from each column', fontweight='bold', fontsize=15)\nax = sns.barplot(x=percent_of_null.index, y=percent_of_null.values)\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nfor p in ax.patches:\n    height = p.get_height()\n    width = p.get_width()\n    x, _ = p.get_xy()\n    ax.text(x + width\/2.8 , height+0.2, f\"{height:.2f}%\")","f5c0711c":"popularity_before_drop = df['song_popularity'].value_counts()\npopularity_after_drop = df.dropna()['song_popularity'].value_counts()\npercent_of_missing_values_from_each = (popularity_before_drop - popularity_after_drop)*100\/popularity_before_drop\nplt.figure(figsize=(10, 8))\nplt.title('Percentage of missing values from each category', fontweight='bold', fontsize=15)\nax = sns.barplot(x=percent_of_missing_values_from_each.index, y=percent_of_missing_values_from_each.values)\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nfor p in ax.patches:\n    height = p.get_height()\n    width = p.get_width()\n    x, _ = p.get_xy()\n    ax.text(x + width\/2.8 , height+0.2, f\"{height:.2f}%\")","6656242e":"popularity_percent = df['song_popularity'].value_counts()*100\/num_rows\nplt.figure(figsize=(10, 8))\nplt.title('Target Value Analysis', fontweight='bold', fontsize=15)\nax = sns.barplot(x=popularity_percent.index, y=popularity_percent.values)\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nfor p in ax.patches:\n    height = p.get_height()\n    width = p.get_width()\n    x, _ = p.get_xy()\n    ax.text(x + width\/2.8 , height+0.5, f\"{height:.2f}%\")","86e464ae":"corr = df.dropna().corr()\nmat = np.triu(corr)\nplt.figure(figsize=(20,10))\nplt.title('Correlation heatmap', fontweight='bold', fontsize=15)\nsns.heatmap(corr, mask=mat, annot=True);","b5545956":"cont_cols = ['song_duration_ms', 'acousticness', 'danceability', 'energy',\n       'instrumentalness','liveness', 'loudness',\n       'speechiness', 'tempo', 'time_signature', 'audio_valence']\nfig, ax = plt.subplots(nrows=3, ncols=4, figsize=(20, 15))\ncol_idx = 0\nrow_idx = 0\nfor col in cont_cols:\n    if col_idx%4 == 0 and col_idx > 0:\n        col_idx = 0\n        if row_idx < 2:\n            row_idx += 1\n    ax[row_idx][col_idx].spines['top'].set_visible(False)\n    ax[row_idx][col_idx].spines['right'].set_visible(False)\n    sns.histplot(df.dropna(), x=col, hue='song_popularity', ax=ax[row_idx][col_idx], kde=True)\n    col_idx += 1\nax[2][3].remove()\nax[2][2].remove()\nax[2][1].remove()","3307d8c5":"temp_df = df['key'].value_counts()\/num_rows\ntemp_df = temp_df.reset_index()\ntemp_df.columns = ['key', 'percent']\nplt.figure(figsize=(10,8))\nplt.title('Labels of column key above 5% of overall data.', fontweight='bold', fontsize=15)\nax = sns.barplot(data=temp_df, x='key', y='percent');\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.axhline(0.05, color='red');","f6372139":"audio_percent = df['audio_mode'].value_counts()*100\/num_rows\nplt.figure(figsize=(10,8))\nplt.title('Audio category column.', fontweight='bold', fontsize=15)\nax = sns.barplot(x=audio_percent.index, y=audio_percent.values);\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nfor p in ax.patches:\n    height = p.get_height()\n    width = p.get_width()\n    x, _ = p.get_xy()\n    ax.text(x + width\/2.8 , height+0.5, f\"{height:.2f}%\")","d05c995e":"# <a id='target-missing-percent'><\/a><span style=\"color:red\">How much percentage of data is missing from each class?<\/span>","8e1bdb29":"### <span style=\"color:blue\">70-30 imbalance in Audio column.<\/span>","50254a05":"# <span style=\"color:red\">Thank you for giving a look. Hope you like it and helped you in some way :D !<\/span>","9a83c80f":"### <span style=\"color:blue\">There is no significant correlation between target column and other columns.<br>Also, there are some multicollinearity between the obvious features like: <\/span>\n- energy and loudness (positive correlation)\n- loudness and acousticness (negative correlation)\n- energy and acousticness (negative correlation)","fa6a6b11":"# <a id=\"distAnalysis\"><\/a><span style=\"color:red\">Distribution check on our continous columns<\/span>","91213be5":"# <span style=\"color:red\">Analyse the Audio column.<\/span>","dd464196":"## <a id=\"targetAnalysis\"><\/a><span style=\"color:red\">Target Value Analysis, let's check the percentage of labels we have.<\/span>","2dfa4b8b":"### <span style=\"color:blue\">Lots of missing data in columns:<\/span>\n- song_duration_ms *(continuous)*\n- acousticness *(continuous)*\n- danceability *(continuous)*\n- energy *(continuous)*\n- instrumentalness *(continuous)*\n- key *(discrete)*\n- liveness *(continuous)*\n- loudness *(continuous)*","6a564580":"### <span style=\"color:blue\">Dataset in imbalanced. There are more songs which are not popular than the popular songs.<br>Need to balance the dataset!<\/span>","a12656d3":"### Content of Notebook\n- **[Missing Data Analysis](#MissingDataAnalysis)**\n    - **[Heatmap](#MissingDataAnalysis)**\n    - **[Column Wise Analysis](#colWise)**\n    - **[Missing Data per class](#target-missing-percent)**\n- **[Target analysis](#targetAnalysis)**\n- **[Correlation analysis](#corr)**\n- **[Distribution (continous) analysis](#distAnalysis)**\n- **[Categorical analysis](#catAnalysis)**\n","a0cc81a3":"### <span style=\"color:blue\">Label 3, 11 don't even contribute 5%. Since column key is ordinal, we cannot group them.<\/span>","08080dc8":"### <span style=\"color:blue\">All columns having missing data, contributes almost 10% each to the total of missing data.<\/span>","5ea6b9e5":"# <a id=\"corr\"><\/a><span style=\"color:red\">Correlation plot can give us some insights.<\/span>","0c02f254":"### <span style=\"color:blue\">None of the columns have normal distribution. We will need to make some transformations on these columns.<\/span>","67300b44":"# <\/span><a id='catAnalysis'><\/a><span style=\"color:red\">Categorical column analysis. Lets check for any rare labels.","c10474fa":"## <a id=\"colWise\"><\/a><span style=\"color:red\">Let's check how much each column contributes to the missing data.<\/span>","536bc8bd":"\n# <a id=\"MissingDataAnalysis\"><\/a><span style=\"color:red\">Overview of missing values.<\/span>"}}