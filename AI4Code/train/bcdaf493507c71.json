{"cell_type":{"f5b10b6f":"code","39e1f91e":"code","2bbc21d0":"code","ebcf893a":"code","99eb09bf":"code","5c4ac558":"code","4835bdba":"code","a18083a0":"code","81e5d5d2":"code","105c0a8b":"code","4cc4b005":"code","52d053f3":"code","2e3b7026":"code","b98ca9b8":"code","e83a9dbc":"code","d1207ac4":"code","5af0f7d9":"code","4c74b583":"code","1d97771e":"code","bd4c2b3d":"code","c4eabeb8":"code","f51654fc":"code","fe5e722b":"code","a858c37e":"code","9e571a74":"code","26bf4715":"code","3791cec9":"code","faaad14c":"code","55e671ba":"code","1cf11dbf":"code","25fe0465":"code","84220523":"code","81b4c2e2":"code","befa9d40":"code","1104e920":"code","afa80019":"code","9909c81e":"code","15b450fa":"code","20f9f231":"code","e6028df2":"code","22e0bdd1":"markdown","35e9e53e":"markdown","a378f58c":"markdown","c1d199e7":"markdown","070c778b":"markdown","464b519f":"markdown","eca4e8db":"markdown","8f3c55bd":"markdown","d9e7b618":"markdown","348ed784":"markdown"},"source":{"f5b10b6f":"import numpy as np\nimport pandas as pd\nimport os\n#import xgboost as xgb\n#from sklearn.model_selection import train_test_split","39e1f91e":"train_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')\n","2bbc21d0":"train_df.dtypes","ebcf893a":"train_df.head()","99eb09bf":"test_df.tail()","5c4ac558":"train_df['trsin_or_test'], test_df['trsin_or_test'] = 'train', 'test'\ndata_df = pd.concat([train_df, test_df])\ndata_df.head()","4835bdba":"data_df['date']=pd.to_datetime(data_df['date'])","a18083a0":"data_df.dtypes","81e5d5d2":"data_df.info()","105c0a8b":"data_df['year'] = data_df['date'].dt.year\ndata_df['quarter'] = data_df['date'].dt.quarter\ndata_df['month'] = data_df['date'].dt.month\ndata_df['weekofyear'] = data_df['date'].dt.weekofyear\ndata_df['weekday'] = data_df['date'].dt.weekday\ndata_df['dayofweek'] = data_df['date'].dt.dayofweek","4cc4b005":"data_df.head()","52d053f3":"data_df.groupby(['quarter', 'item'])['sales'].mean()","2e3b7026":"data_df['item_quarter_mean'] = data_df.groupby(['quarter', 'item'])['sales'].transform('mean')","b98ca9b8":"data_df.head()","e83a9dbc":"data_df['store_quarter_mean'] = data_df.groupby(['quarter', 'store'])['sales'].transform('mean')\ndata_df['store_item_quarter_mean'] = data_df.groupby(['quarter', 'item', 'store'])['sales'].transform('mean')","d1207ac4":"data_df['item_month_mean'] = data_df.groupby(['month', 'item'])['sales'].transform('mean')\ndata_df['store_month_mean'] = data_df.groupby(['month', 'store'])['sales'].transform('mean')\ndata_df['store_item_month_mean'] = data_df.groupby(['month', 'item', 'store'])['sales'].transform('mean')","5af0f7d9":"data_df['item_weekofyear_mean'] = data_df.groupby(['weekofyear', 'item'])['sales'].transform('mean')\ndata_df['store_weekofyear_mean'] = data_df.groupby(['weekofyear', 'store'])['sales'].transform('mean')\ndata_df['store_item_weekofyear_mean'] = data_df.groupby(['weekofyear', 'item', 'store'])['sales'].transform('mean')\n","4c74b583":"data_df['itemweekday_mean'] = data_df.groupby(['weekday', 'item'])['sales'].transform('mean')\ndata_df['storeweekday_mean'] = data_df.groupby(['weekday', 'store'])['sales'].transform('mean')\ndata_df['storeitemweekday_mean'] = data_df.groupby(['weekday', 'item', 'store'])['sales'].transform('mean')","1d97771e":"data_df.head()","bd4c2b3d":"data_df.tail()","c4eabeb8":"data_df.isnull().sum().sum()","f51654fc":"data_df.info()","fe5e722b":"data_df.head()","a858c37e":"data_df.shape","9e571a74":"data_df.columns","26bf4715":"data_df.drop(['date','id','sales'],axis=1,inplace=True)","3791cec9":"data_df.info()","faaad14c":"x= data_df[data_df['trsin_or_test'] == 'train']#.dropna().drop(['id', 'sales', 'trsin_or_test', 'date'], axis=1)\ntest = data_df[data_df['trsin_or_test'] == 'train']#.dropna()['sales']","55e671ba":"x.head()","1cf11dbf":"test.head()","25fe0465":"x.drop(['trsin_or_test'],axis=1,inplace=True)\ntest.drop(['trsin_or_test'],axis=1,inplace=True)","84220523":"y=pd.read_csv('..\/input\/train.csv',usecols=['sales'])\ny=y.sales","81b4c2e2":"y.shape","befa9d40":"y.head()","1104e920":"from sklearn import ensemble\nxbr=ensemble.GradientBoostingRegressor()\nxbr","afa80019":"%%time\nxbr.fit(x,y)","9909c81e":"%%time\nxbr.score(x,y)","15b450fa":"%%time\npredict=pd.DataFrame(xbr.predict(test),columns=['sales'])","20f9f231":"ids=pd.read_csv(\"..\/input\/test.csv\",usecols=['id'])\nsub=ids.join(predict)\nsub.head()","e6028df2":"sub.to_csv('sample.csv',index=False)","22e0bdd1":"> **New cols for mean() based on weekday** ","35e9e53e":"> **New cols for mean() based on weekof year** ","a378f58c":"> **New cols for mean() based on quarter**","c1d199e7":"### Libraries","070c778b":"> **Model Predection**","464b519f":"%%time\nmodel = xgbmodel\n\n\npredict=pd.DataFrame(model.predict(xgb.DMatrix(test),ntree_limit=model.best_ntree_limit))\n","eca4e8db":"x_train, x_validate, y_train, y_validate = train_test_split(x, y, random_state=0, test_size=0.25)\n\nprint(x_train.shape, x_validate.shape, y_train.shape, y_validate.shape)\n\n %%time\nparams = {\n    'colsample_bytree': 0.8,\n    'eta': 0.1,\n    'eval_metric': 'mae',\n    'lambda': 1,\n    'max_depth': 6,\n    'objective': 'reg:linear',\n    'seed': 0,\n    'silent': 1,\n    'subsample': 0.8,\n}\nxgbtrain = xgb.DMatrix(x_train, label=y_train)\nxgbvalidate = xgb.DMatrix(x_validate, label=y_validate)\nxgbmodel = xgb.train(list(params.items()), xgbtrain, early_stopping_rounds=50, evals=[(xgbtrain, 'train'), (xgbvalidate, 'validate')], num_boost_round=200, verbose_eval=50)","8f3c55bd":"> **submssion of results**\n\n","d9e7b618":"> **loading dataset**","348ed784":"> **New cols for mean() based on month** "}}