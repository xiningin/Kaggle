{"cell_type":{"31f0c90a":"code","6cac4fb4":"code","bb3cce65":"code","dc5df557":"code","4f35f76c":"code","191910c7":"code","d893cc63":"code","c09d1f1e":"code","3b9ee3b5":"code","cfd7b969":"code","9b361053":"code","5f45e69f":"code","22b9f267":"markdown","07a20857":"markdown","2734c5c0":"markdown","c038e3af":"markdown","3b6e7874":"markdown","01631851":"markdown"},"source":{"31f0c90a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.rcParams[\"figure.figsize\"] = (12,12)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6cac4fb4":"df = pd.read_csv('\/kaggle\/input\/bus-dataset\/bus.csv')","bb3cce65":"df.dropna(inplace=True)\ndf.head(5)\n","dc5df557":"types = df['Type'].unique()","4f35f76c":"types\n","191910c7":"types_dict = dict()\nfor item in types:\n    types_dict[item]= (df['Type'].str.lower() == item.lower()).sum()","d893cc63":"types_dict.pop('Single deck')","c09d1f1e":"labels,num_data= list(types_dict.keys()),  list(types_dict.values())","3b9ee3b5":"x = np.arange(len(labels))\nplt.bar(x,num_data)\nplt.xticks(x,labels,rotation=90,fontSize=18)\nplt.title(\"Type Distribution\",fontSize=20)\nplt.show()","cfd7b969":"temp = min(types_dict.values()) \nres = [key for key in types_dict if types_dict[key] == temp] \nres","9b361053":"countries = df['Country'].unique()","5f45e69f":"countries","22b9f267":"# Displaying the first 5 entries in the DataFrame","07a20857":"# Finding Unique Types\n","2734c5c0":"This is my first notebook do say me ur reviews and correct my mistakes","c038e3af":"# Inference\n  - Single Deck bus is manufactured the most School bus.\n  - School bus is manufactured the least.","3b6e7874":"# Seeing the Distribution\n","01631851":"# Unique Countries"}}