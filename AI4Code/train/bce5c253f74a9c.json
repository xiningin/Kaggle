{"cell_type":{"4a27a49c":"code","7de5d83d":"code","8ad020a6":"code","991eb751":"code","244431fa":"code","6f15acfd":"code","8155ef4f":"code","19a7aa20":"code","69d96b0d":"code","3549789e":"code","733f6263":"markdown"},"source":{"4a27a49c":"!pip install requests\n","7de5d83d":"!pip install bs4","8ad020a6":"!pip install lxml","991eb751":"import pandas as pd\nimport requests\nfrom bs4 import BeautifulSoup as bs","244431fa":"all_books = [] # list to store all extracted information\n","6f15acfd":"#define a function that opens an url and find all the product listings\n\ndef page(url):\n    res = requests.get(url)\n    soup = bs(res.text, \"lxml\")\n    \n    return soup.findAll(\"article\", attrs={\"class\": \"product_pod\"})\n    ","8155ef4f":"#function that extract the information on each individual book listing\n# The function takes a list of all listed books on a given page; click on the book link\n# and scrape the book information\n\ndef extract(listings):\n    for listing in listings:\n        base_link = \"http:\/\/books.toscrape.com\/catalogue\/\"\n        link = listing.find(\"a\").get(\"href\") \n        book_link = base_link + link # create the book link\n        \n\n        # get the link of each product\n        book_page = requests.get(book_link)\n        soup_2 = bs(book_page.text, \"lxml\")\n\n        # title\n        book_info = soup_2.find(\"div\", attrs={\"class\": \"col-sm-6 product_main\"}) \n        title = book_info.find(\"h1\").text\n\n        # price\n        price = float(book_info.find(\"p\").text.strip()[2:])\n\n        # unique product code\n        upc = soup_2.find(\"td\").text\n\n        book = {\"title\": title, \"price\": price, \"upc\": upc} # store book information in a dictionary\n        all_books.append(book)","19a7aa20":"last_pg = 10 # set the last page to scrape\npg = 1 #initialize the first page\n\nwhile pg <= last_pg:\n    url = f\"http:\/\/books.toscrape.com\/catalogue\/page-{pg}.html\"\n    print(f\"extracting page {pg}\")\n    listings = page(url) #call the page function\n    extract(listings) #call the extract function\n    pg += 1\nprint(all_books)","69d96b0d":"df = pd.DataFrame(all_books)\nprint(df)\nprint(df.shape)","3549789e":"#store in csv\ndf.to_csv(\"books_to_scrape.csv\", index=False)","733f6263":"In this notebook we will scrape information from http:\/\/books.toscrape.com\/ using the beautifulsoup module and the requests library. The information will be stored in a pandas dataframe.The http:\/\/books.toscrape.com\/ site is a demo site that allows one to practice scraping without the risks of ip blocking and other legal issues. \n"}}