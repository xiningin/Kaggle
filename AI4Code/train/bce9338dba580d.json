{"cell_type":{"11283b18":"code","8e28cc08":"code","1d2aa268":"code","ea0b6bc1":"code","7208d997":"code","5593cedc":"code","447c8a92":"code","16e94d83":"code","07563dc4":"code","1b2926fa":"code","6f308cc0":"code","11a04097":"code","7a36e269":"code","51fb69eb":"code","843498c8":"code","973da16a":"code","8fb98b56":"code","86e3083b":"code","3af0ed5e":"code","3db4b190":"code","987fa67e":"markdown","e9b56766":"markdown","96558619":"markdown","81a75258":"markdown","695e381c":"markdown","ea334e84":"markdown","19444bff":"markdown","9f763eb6":"markdown","9de61bb4":"markdown","0139f9cf":"markdown","1e2eade6":"markdown"},"source":{"11283b18":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e28cc08":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# import autosklearn \nfrom sklearn.model_selection import train_test_split\nfrom pandas_profiling import ProfileReport","1d2aa268":"from sklearn.linear_model import LinearRegression,SGDRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor,AdaBoostRegressor,BaggingRegressor,ExtraTreesRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score","ea0b6bc1":"df_train=pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv')\ndf_test=pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv')","7208d997":"df_train","5593cedc":"d1=ProfileReport(df_train.drop(['id'],axis=1))\nd1.to_widgets()","447c8a92":"X=df_train.drop(['id','target'],axis=1)\ny=df_train['target']","16e94d83":"x_train,x_val,y_train,y_val=train_test_split(X,y,test_size=0.2,random_state=42)","07563dc4":"lr=LinearRegression()\nlr.fit(x_train,y_train)\npred1=lr.predict(x_val)\n\nprint(f\"RMSE = {mean_squared_error(y_val,pred1,squared=False)}\")\nprint(f\"MAE = {mean_absolute_error(y_val,pred1)}\")\nprint(f\"R2_Score = {r2_score(y_val,pred1)}\")\n\nplt.figure(figsize=(10,10))\nplt.scatter(x=y_val,y=pred1)\nplt.show()","1b2926fa":"lr=SGDRegressor()\nlr.fit(x_train,y_train)\npred2=lr.predict(x_val)\n\nprint(f\"RMSE = {mean_squared_error(y_val,pred2,squared=False)}\")\nprint(f\"MAE = {mean_absolute_error(y_val,pred2)}\")\nprint(f\"R2_Score = {r2_score(y_val,pred2)}\")\n\nplt.figure(figsize=(10,10))\nplt.scatter(x=y_val,y=pred2)\nplt.show()","6f308cc0":"lr=RandomForestRegressor(n_jobs=-1,verbose=1,n_estimators=500)\nlr.fit(x_train,y_train)\npred3=lr.predict(x_val)\n\nprint(f\"RMSE = {mean_squared_error(y_val,pred3,squared=False)}\")\nprint(f\"MAE = {mean_absolute_error(y_val,pred3)}\")\nprint(f\"R2_Score = {r2_score(y_val,pred3)}\")\n\nplt.figure(figsize=(10,10))\nplt.scatter(x=y_val,y=pred3)\nplt.show()","11a04097":"lr=BaggingRegressor(LinearRegression())\nlr.fit(x_train,y_train)\npred3=lr.predict(x_val)\n\nprint(f\"RMSE = {mean_squared_error(y_val,pred3,squared=False)}\")\nprint(f\"MAE = {mean_absolute_error(y_val,pred3)}\")\nprint(f\"R2_Score = {r2_score(y_val,pred3)}\")\n\nplt.figure(figsize=(10,10))\nplt.scatter(x=y_val,y=pred3)\nplt.show()","7a36e269":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)\nx_train,x_val,y_train,y_val=train_test_split(x_train,y_train,test_size=0.2,random_state=42)","51fb69eb":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout,Input,BatchNormalization\nfrom tensorflow.keras.callbacks import EarlyStopping\nimport tensorflow as tf\n\ne=EarlyStopping(verbose=1,patience=5,restore_best_weights=True)\nn=2","843498c8":"model=Sequential()\n\nmodel.add(Input(shape=(x_train.shape[1],)))\n\nmodel.add(Dense(x_train.shape[1],activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(n*x_train.shape[1],activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(n*x_train.shape[1],activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(x_train.shape[1],activation='relu'))\n\nmodel.add(Dense(1,activation='relu'))\n\nmodel.compile(metrics=[tf.keras.metrics.RootMeanSquaredError()],loss='mse',optimizer='adam')","973da16a":"model.summary()","8fb98b56":"results=model.fit(x_train,y_train,validation_data=(x_val,y_val),epochs=100,callbacks=[e])","86e3083b":"pred3=model.predict(x_test)\n\nprint(f\"RMSE = {mean_squared_error(y_test,pred3,squared=False)}\")\nprint(f\"MAE = {mean_absolute_error(y_test,pred3)}\")\nprint(f\"R2_Score = {r2_score(y_test,pred3)}\")\n\nplt.figure(figsize=(10,10))\nplt.scatter(x=y_test,y=pred3)\nplt.show()","3af0ed5e":"d1=pd.DataFrame(results.history)\nd1.iloc[:,[1,3]].plot(figsize=(10,10))","3db4b190":"d1=pd.DataFrame(results.history)\nd1.iloc[:,[0,2]].plot(figsize=(10,10))","987fa67e":"# Tensorflow model analysis","e9b56766":"# Bagging Regressor","96558619":"# Train Test Split","81a75258":"## Linear Regression","695e381c":"# Data Input","ea334e84":"# Tensorflow Model","19444bff":"# Random Forest Regressor","9f763eb6":"# Data Analysis","9de61bb4":"# SGDRegressor","0139f9cf":"# Model Building","1e2eade6":"# Package Import"}}