{"cell_type":{"dec14e15":"code","05811677":"code","f256a9aa":"code","35fa54e7":"code","01e1e9a0":"code","b3cf2d85":"code","32da8868":"code","5a38d263":"code","e65074e1":"code","2992971a":"code","59f53c43":"code","dcae93cd":"markdown","91acc176":"markdown","9a54bfd7":"markdown"},"source":{"dec14e15":"import os\nprint(os.listdir(\"..\/input\"))","05811677":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#load dataset\ndataset = pd.read_csv('..\/input\/creditcard.csv')\ndataset.shape","f256a9aa":"#plot histogram of each parameter\ndataset.hist(figsize=(20,20))\nplt.show()","35fa54e7":"#no of frauds in dataset\nfraud = dataset[dataset['Class']==1]\nvalid = dataset[dataset['Class']==0]\n\noutlier_fraction = len(fraud)\/float(len(valid))\nprint(outlier_fraction)\n\nprint('fraud: {}'.format(len(fraud)))\nprint('valid: {}'.format(len(valid)))","01e1e9a0":"corrmat = dataset.corr()\nfig = plt.figure(figsize=(12,9))\n\nsns.heatmap(corrmat, vmax = .8, square = True)\nplt.show()","b3cf2d85":"from sklearn.model_selection import train_test_split\nX = dataset.iloc[:,:30]\nY = dataset.iloc[:,30]\nprint(X.shape)\nprint(Y.shape)","32da8868":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.25,random_state=0)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","5a38d263":"from sklearn import ensemble\n\n# Creating classifier Object\nada = ensemble.AdaBoostClassifier()\n#Fitting the classifier to training data\nada.fit(X_train,Y_train)\n\n# Making Predictions\nada_pred = ada.predict(X_test)\n\nprint(\"Traing Score:%f\"%ada.score(X_train,Y_train))\nprint(\"Testing Score:%f\"%ada.score(X_test,Y_test))","e65074e1":"from sklearn.metrics import accuracy_score, classification_report,confusion_matrix\nprint(accuracy_score(Y_test,ada_pred))\nprint(classification_report(Y_test,ada_pred))\nprint(confusion_matrix(Y_test,ada_pred))","2992971a":"from sklearn import ensemble\n\n# Initializing Classifier Object\nrf = ensemble.RandomForestClassifier()\n# Fitting the classifier to training data\nrf.fit(X_train,Y_train)\n\n# Making Predictions\nrf_pred = rf.predict(X_test)\n\nprint(\"Traing Score:%f\"%rf.score(X_train,Y_train))\nprint(\"Testing Score:%f\"%rf.score(X_test,Y_test))","59f53c43":"from sklearn.metrics import accuracy_score, classification_report,confusion_matrix\nprint(accuracy_score(Y_test,rf_pred))\nprint(classification_report(Y_test,rf_pred))\nprint(confusion_matrix(Y_test,rf_pred))","dcae93cd":"**Random Forest Classifier**","91acc176":"**Ada Boost Classifier**","9a54bfd7":"**Conclusion**\n\nAda Boost got an test accuracy of 0.9992, f1-score of 0.76 for fraud and 1.0 for non-fraud transactions respectively.\n\nWhere as Random Forest got an test accuracy of 0.9995, f1-score of 0.84 for fraud and 1.0 for non-fraud transactions respectively."}}