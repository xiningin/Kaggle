{"cell_type":{"13d4f52c":"code","9f516c17":"code","9d6c2610":"code","1d0f9046":"code","376b82fd":"code","2c9a6093":"code","3d035476":"code","d0f0f0ef":"code","6456a107":"code","d31394dd":"code","33c99899":"code","fe0bd9d8":"code","6c8af85f":"code","18aad548":"code","62db4dbc":"code","ef8df26e":"code","0075e34c":"code","283bc4cf":"code","eedd3f9e":"code","ae2870bc":"code","26abd79a":"code","31f98a94":"code","d78f8811":"code","d7e923ce":"code","f7c0dece":"code","c40e01b1":"code","5d31c499":"code","c7cd1081":"code","ad69c4a0":"code","d0db759c":"code","9214d797":"code","44d6c3f9":"code","a11a98b0":"code","71000bef":"code","4c0d3770":"code","bd028d2e":"code","1d5ae432":"code","6f24fc3d":"code","ff4ad7d7":"code","8e46fa1e":"code","2f8c650e":"code","8b71c97e":"code","efab3f87":"code","33e2981b":"code","21d9890a":"code","9faded43":"code","6387fdb8":"code","4c7e6876":"code","4676c101":"markdown","3977d1cf":"markdown","38b09afb":"markdown","f9f76f2a":"markdown","d7b48b6b":"markdown","89b60695":"markdown","53aa3944":"markdown","75684d66":"markdown","cb26a057":"markdown","407cbcff":"markdown","e531ce91":"markdown","464942ef":"markdown","f6ab1eed":"markdown","52ac0f95":"markdown","99c989b9":"markdown","993c9c4f":"markdown","d43e3683":"markdown","b1a96682":"markdown","450ddf51":"markdown","8249aa39":"markdown","2f8d10e3":"markdown","e7170ece":"markdown","55225031":"markdown","06333288":"markdown","1280edf4":"markdown","8e9296c3":"markdown"},"source":{"13d4f52c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f516c17":"# first we import all the important library\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport datetime\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly.subplots import make_subplots","9d6c2610":"# read the csv\ndf=pd.read_csv(\"\/kaggle\/input\/windows-store\/msft.csv\")","1d0f9046":"df.head(20)","376b82fd":"df.shape","2c9a6093":"df.describe()","3d035476":"df.info()","d0f0f0ef":"df.isna().sum()","6456a107":"df.dropna(axis=0,inplace=True)","d31394dd":"df.isna().sum()","33c99899":"df.shape","fe0bd9d8":"sns.countplot(data=df,\n                  x= 'Rating',\n        \n                  )\nplt.title('Count of different rating',size = 20)","6c8af85f":"print( len(df['Category'].unique()) , \"categories\")# we print the unique category\n\nprint(\"\\n\", df['Category'].unique())","18aad548":"print( len(df['Rating'].unique()) , \"Rating\")\n\nprint(\"\\n\", df['Rating'].unique())","62db4dbc":"g = sns.countplot(x=\"Category\",data=df, palette = \"Set1\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90, ha=\"right\")\ng \nplt.title('Count of app in each category',size = 20)","ef8df26e":"g = sns.catplot(x=\"Category\",y=\"Rating\",data=df, kind=\"box\", height = 10 ,\npalette = \"Set1\")\ng.set_xticklabels(rotation=90)\ng = g.set_ylabels(\"Rating\")\nplt.title('Boxplot of Rating VS Category',size = 20)","0075e34c":"df['No of people Rated'].head()","283bc4cf":"df['Reviews']=df['No of people Rated'] # we make a copy of column 'No of people Rated' to 'Review'","eedd3f9e":"df.drop('No of people Rated', axis=1, inplace=True) # we delete the column 'No of people Rated'","ae2870bc":"df","26abd79a":"\ng = sns.kdeplot(df.Reviews, color=\"Green\", shade = True)\ng.set_xlabel(\"Reviews\")\ng.set_ylabel(\"Frequency\")\nplt.title('Distribution of Reveiw',size = 20)","31f98a94":"df[df.Reviews > 950].head(10)","d78f8811":"plt.figure(figsize = (10,10))\ng = sns.regplot(x=\"Reviews\", y=\"Rating\",color = 'green', data=df);\nplt.title('Rating VS Reveiws',size = 20)","d7e923ce":"plt.figure(figsize = (10,10))\ng = sns.countplot(x=\"Price\",data=df, palette = \"Set1\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90, ha=\"right\")\ng \nplt.title('Count of app in each category',size = 20)","f7c0dece":"df['Type']=df['Price']\nfor row in range(df.shape[0]):\n    if df.loc[row, 'Type'] != 'Free':\n        df.loc[row, 'Type'] = 'Paid'\ndf\n","c40e01b1":"plt.figure(figsize = (5,5))\nsns.countplot(data=df,\n                  x= 'Type',)","5d31c499":"df['Price'].value_counts().head(30)","c7cd1081":"import random\n\ndef generate_color():\n    color = '#{:02x}{:02x}{:02x}'.format(*map(lambda x: random.randint(0, 255), range(3)))\n    return color","ad69c4a0":"flatui = []\nfor i in range(0,len(df['Category'].unique()),1):\n    flatui.append(generate_color())","d0db759c":"g = sns.catplot(x=\"Price\", y=\"Rating\", hue=\"Category\", kind=\"swarm\", data=df,palette = flatui,size = 10)\ng.set_xticklabels(rotation=90)\nplt.title('Category in each Price VS Rating',size = 20)","9214d797":"plt.figure(figsize=(12,7))\ndf2 = df.groupby(['Category'])['Reviews'].sum().sort_values(ascending=False).reset_index()\ng = sns.barplot(x='Category', y='Reviews', data=df2, palette=\"cubehelix\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.set_title('Total number Reviews by Category', fontsize=20)\nplt.show()","44d6c3f9":"plt.figure(figsize=(12,7))\ndf3 = df.groupby(['Category'])['Rating'].mean().sort_values(ascending=False).reset_index()\ng = sns.barplot(x='Category', y='Rating', data=df3, palette=\"cubehelix\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.set_title('Average rating by Category', fontsize=20)\nplt.show()","a11a98b0":"df['Year'] = pd.DatetimeIndex(df['Date']).year\ndf_year = df.groupby(['Year', 'Category'])['Reviews'].sum()\ndf_year = pd.DataFrame(df_year.reset_index())\ndf_year","71000bef":"plt.figure(figsize=(16,9))\ng = sns.barplot(x='Year', y='Reviews', data = df_year, palette='Set2')\ng.set_title('Total number of Reviews by Year ', fontsize=20)\nplt.show()\n","4c0d3770":"plt.figure(figsize=(20,9))\ng = sns.barplot(x='Year', y='Reviews', data = df_year, hue='Category')\ng.set_title('Total number of Reviews by Year by Category ', fontsize=20)\ng.legend(loc='upper left')\nplt.show()","bd028d2e":"df_paid=df[df['Type']=='Paid']\ndf_paid['Price']","1d5ae432":"sns.countplot(data=df_paid,\n                  x= 'Rating',)\nplt.title('Count of different rating of paid app',size = 20)","6f24fc3d":"df_free=df[df['Type']=='Free']\ndf_free","ff4ad7d7":"sns.countplot(data=df_free,\n                  x= 'Rating',)\nplt.title('Count of different rating of free app',size = 20)","8e46fa1e":"df_paid['Price'] = df_paid['Price'].str.split(expand=True)[1]#we removed the rupee symbol from price","2f8c650e":"df_paid['Price'] = df_paid['Price'].str.replace(',','') # we removed the ',' in price.\ndf_paid['Price'] = df_paid['Price'].astype(float) #and convert it to float.","8b71c97e":"df_top_paid = df_paid.sort_values(by='Price', ascending=False).head(30)","efab3f87":"df_top_paid","33e2981b":"plt.figure(figsize=(20,20))\ng = sns.barplot(x='Name', y='Price', data = df_top_paid,hue='Category')\ng.set_title('Top paid apps', fontsize=5)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.show()","21d9890a":"dayOfWeek={0:'Monday', 1:'Tuesday', 2:'Wednesday', 3:'Thursday', 4:'Friday', 5:'Saturday', 6:'Sunday'}\ndf['Weekday'] = pd.DatetimeIndex(df['Date']).weekday\ndf['Weekday'] = df['Weekday'].map(dayOfWeek)\ndf_week = df.groupby(['Weekday'])['Reviews'].sum()\ndf_week = pd.DataFrame(df_week.reset_index())\ndf_week","9faded43":"g = sns.barplot(x='Weekday', y='Reviews', data = df_week)\ng.set_title('Reviews on weekdays', fontsize=25)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.show()","6387fdb8":"df5=df.groupby(['Weekday'])['Name'].count().sort_values(ascending=False)\ndf5 = pd.DataFrame(df5.reset_index())\ndf5","4c7e6876":"g = sns.barplot(x='Weekday', y='Name', data = df5)\ng.set_title('apps published on weekdays', fontsize=5)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.show()","4676c101":"**I am a student so if you want to give me some suggestion please write it in comment box.**","3977d1cf":"***Window store also contain some expensive apps which have price above 2000***","38b09afb":"Now our CSV file does not contains NaN value.","f9f76f2a":"**Music and Book Apps have most reviews as they are most popular category**","d7b48b6b":"**Number of Reviews does not affect Rating very much. **","89b60695":"***Paid apps are generally rated 1.0 because if you are paying for a thing then your expectation will be higher.****","53aa3944":"***Free apps are rated better than paid apps and mostly they are rated above 3.5.***","75684d66":"***Devloper tools category is most expensive category as their app are used by big programmers***","cb26a057":"# Thank you for viewing my notebook. Please Upvote my notebook if you like it.","407cbcff":"**There are total 13 category of apps available on window store.**","e531ce91":"  **Most of apps are rated above 4.0 and there are very few apps which are rated below 2.5**","464942ef":"**As you can see there is a new column 'Review'.**","f6ab1eed":"File have 5322 rows and 6 column.","52ac0f95":"***Most of the apps are launched on working days than saturday and sunday. ***","99c989b9":"***Very less reviews are given on saturday and sunday as it is a holiday.***","993c9c4f":"**As it contains some NaN value so we remove the rows which contains NaN value.**","d43e3683":"**Category of app does not affect it's rating very much.**","b1a96682":"**Approx 50% of app are rated above 4.00 and have more than 548 Review.**","450ddf51":"**As we can see csv file contain six column which contains name of app, rating of app, No of people Rated the app, category it belong to, date of publishment and price of app.**","8249aa39":"# Today, we are doing analysis of window store apps using matplotlib, seaborn and some other python library. So, if you like it please upvote my notebook.","2f8d10e3":"**Most of the apps are free in window store.**","e7170ece":"***As you can see an app is above 5000 rupees and it is most expensive app in window store.***","55225031":"***Government and Politics apps are mostly rated above 4.0. ***","06333288":"**We added a new column name 'Type' in that we named all the apps which are free as free and which are paid as paid **","1280edf4":"***Most of the reviews were given in 2016. ***","8e9296c3":"**There are many apps which are related to music and after that books apps are famous.**"}}