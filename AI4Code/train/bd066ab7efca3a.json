{"cell_type":{"1502fcbc":"code","8c2a6b85":"code","55622953":"code","1ad1506b":"code","ee0858da":"code","3c3ebe62":"code","48f5fa06":"code","c617e082":"code","a215a77a":"code","75e40829":"code","22c7ec95":"code","e8583e5d":"code","4e99e203":"markdown","8413ca13":"markdown","8ab4ce53":"markdown","538a8013":"markdown","db1c1d6c":"markdown","5fe6229d":"markdown","95b916bb":"markdown","eb9ea076":"markdown","7dece9f1":"markdown"},"source":{"1502fcbc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","8c2a6b85":"dataset = pd.read_csv('..\/input\/covid19-corona-virus-india-dataset\/complete.csv')\nis_true = dataset['Name of State \/ UT'] == 'Gujarat'\ndataset = dataset[is_true]\nX = dataset.iloc[:, 0].values\nconfcases = dataset.iloc[:, -1].values\nrecvcases = dataset.iloc[:, -5].values\ndeath = dataset.iloc[:, -2].values","55622953":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX = le.fit_transform(X) + 1","1ad1506b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg_conf = PolynomialFeatures(degree = 7)\nX_poly_conf = poly_reg_conf.fit_transform(X.reshape(-1,1))\nregressor_conf = LinearRegression()\nregressor_conf.fit(X_poly_conf, confcases)","ee0858da":"poly_reg_recv = PolynomialFeatures(degree =8)\nX_poly_recv = poly_reg_recv.fit_transform(X.reshape(-1,1))\nregressor_recv = LinearRegression()\nregressor_recv.fit(X_poly_recv, recvcases)","3c3ebe62":"poly_reg_d = PolynomialFeatures(degree = 6)\nX_poly_d = poly_reg_d.fit_transform(X.reshape(-1,1))\nregressor_d = LinearRegression()\nregressor_d.fit(X_poly_d, death)","48f5fa06":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nplt.plot(le.inverse_transform(X - 1), confcases,color = 'orange',label = 'Confirmed Cases')\nplt.plot(le.inverse_transform(X - 1), recvcases,color = 'blue',label = 'Recovered Cases')\nplt.plot(le.inverse_transform(X - 1), death,color = 'grey',label = 'Casualities')\n\n#ax.bar(x_date, conf_cases_india, color = 'orange',label = 'Original Value')\nplt.xlabel('Dates')\nplt.ylabel('Count')\nax.set_xticks(range(0, len(X), 4))\n#ax.set_yticks(range(0, conf_cases_india[len(conf_cases_india)-1], 3000))\nplt.title('Confirmed Cases, Recovered cases, Casualities till date in Gujarat-India')\nplt.xticks(rotation = 'vertical')\nax.legend(loc='best')\nplt.show()","c617e082":"import matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_axes([0,0,1.5,0.7])\nax.plot(le.inverse_transform(X - 1), regressor_conf.predict(X_poly_conf),color = 'blue',label = 'Predicted Value')\nax.bar(X, confcases, color = 'red',label = 'Original Value',log=True)\nplt.xlabel('Dates')\nplt.ylabel('Count')\n#plt.ylim(0,6000)\n#ax.set_yticks(range(0, confcases[len(confcases)-1], 2000))\nax.set_xticks(range(0, len(X), 3))\nplt.title('Confirmed Cases till date in Gujarat-India')\nplt.xticks(rotation = 'vertical')\nax.legend(loc='best')\nplt.show()","a215a77a":"fig = plt.figure()\nax = fig.add_axes([0,0,1.5,0.7])\nax.plot(le.inverse_transform(X-1), regressor_recv.predict(X_poly_recv),color = 'red',label = 'Predicted Value')\nax.bar(X-1, recvcases, color = 'orange',label = 'Original Value',log=True)\nplt.xlabel('Dates')\nplt.ylabel('Count')\nax.set_xticks(range(0, len(X), 3))\nplt.title('Recovered Cases till date in Gujarat-India( LOGARITHMIC )')\nplt.xticks(rotation = 'vertical')\nax.legend(loc='best')\nplt.show()","75e40829":"fig = plt.figure()\nax = fig.add_axes([0,0,1.5,0.7])\nax.plot(le.inverse_transform(X - 1), regressor_d.predict(X_poly_d),color = 'black',label = 'Predicted Value')\nplt.bar(X-1, death,color = 'grey',label = 'Original Value',log=True)\nplt.xlabel('Dates')\nplt.ylabel('Count')\nax.set_xticks(range(0, len(X), 3))\nplt.title('Casualities till date in Gujarat-India')\nplt.xticks(rotation = 'vertical')\nax.legend(loc='best')\nplt.show()","22c7ec95":"from datetime import date\ndt1 = date(2020,3,20)\ndt2 = date(2020,5,15)\ndelta = dt2 - dt1\nprint(delta.days)\n\nprint('Total Confirmed cases till tomorrow: ', regressor_conf.predict(poly_reg_conf.transform([[delta.days + 1]])))\nprint('Total Recovered cases till tomorrow: ', regressor_recv.predict(poly_reg_recv.transform([[delta.days + 1]])))\nprint('Total Casualities till tomorrow: ', regressor_d.predict(poly_reg_d.transform([[delta.days + 1]])))\n","e8583e5d":"labels = 'Active Cases', 'Cured Cases', 'Casualties'\nsections = [confcases[len(confcases)-1] - recvcases[len(recvcases)-1] - death[len(death)-1], recvcases[len(recvcases)-1], death[len(death)-1]]\ncolors = ['c', 'g', 'y']\nplt.pie(sections, labels=labels, colors=colors,\n        startangle=90,\n        explode = (0, 0.1, 0.05),\n        autopct = '%1.2f%%')\n\nplt.axis('equal') # Try commenting this out.\nplt.title('Covid-19 Gujarat Analysis')\nplt.legend(loc='upper left',fontsize=8)\nplt.show()","4e99e203":"**Casualities**","8413ca13":"**Pie chart Visualization**","8ab4ce53":"**Casualities Plot (Logarithmic Curve)**","538a8013":"**Recovered Cases visualation (Logarithmic Curve)**","db1c1d6c":"**Confirmed Cases visualation (Logarithmic Curve)**","5fe6229d":"**Prediction for Conf Cases, recovered cases , and deaths**","95b916bb":"**Confirmed Cases**","eb9ea076":"**Confirmed Cases, Recovered cases, Casualities till date in Gujarat-India**","7dece9f1":"**Recovered Cases**"}}