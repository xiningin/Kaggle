{"cell_type":{"935e08e4":"code","8d95acb0":"code","efde147c":"code","dfa4c90e":"code","0c651197":"code","c4cd391a":"code","9774961a":"code","fe8e8506":"code","71d5e201":"code","fdceb29d":"code","21dba1ff":"code","5d356d5d":"code","bb933185":"markdown","cc901f75":"markdown","ce8af527":"markdown","68e3e32e":"markdown","2e48a382":"markdown","1154b731":"markdown","c6721838":"markdown","78a53466":"markdown","657bc762":"markdown","c9459f62":"markdown"},"source":{"935e08e4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","8d95acb0":"df = pd.read_csv(\"..\/input\/nutrition-studiese\/fivethirtyeight-nutrition-studies\/raw_anonymized_data.csv\")\ndf.info()","efde147c":"df.select_dtypes(include=['object']).head()","dfa4c90e":"dummies = pd.get_dummies(df.select_dtypes(include=['object']))\ndf = df.drop(df.select_dtypes(include=['object']), axis = 1)\ndf = pd.concat([df, dummies], axis = 1)\ndf.info()","0c651197":"df = df.iloc[:,1:]\ndf.head()","c4cd391a":"X = df.drop([\"rash_Yes\",\"rash_No\"], axis=1)\ny = df[\"rash_Yes\"]","9774961a":"heartdiseasedf = df.loc[df[\"rash_Yes\"] == 1]\nlen(heartdiseasedf) \/ len(df) ","fe8e8506":"from sklearn.model_selection import cross_val_score\n\ndef rmse_cv(model, X, y, cv):\n    rmse= np.sqrt(-cross_val_score(model, X, y, scoring=\"neg_mean_squared_error\", cv = cv))\n    return(rmse)","71d5e201":"from sklearn import linear_model\n\nclf = linear_model.LogisticRegression(solver='liblinear')\nclf.fit(X,y)\nprint(rmse_cv(clf, X, y, 5))\nprint(clf.score(X,y))","fdceb29d":"from sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier()\nclf.fit(X,y)\nprint(rmse_cv(clf, X, y, 5))\nprint(clf.score(X,y))","21dba1ff":"from sklearn.ensemble import AdaBoostClassifier\n\nclf = AdaBoostClassifier()\nclf.fit(X,y)\nprint(rmse_cv(clf, X, y, 5))\nprint(clf.score(X,y))","5d356d5d":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import AdaBoostClassifier\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42) \nclf = AdaBoostClassifier()\nclf.fit(X_train, y_train)\nprint(clf.score(X_test, y_test))","bb933185":"Time to try predictions","cc901f75":"Alright no object columns anymore. Let's drop the ID column.","ce8af527":"Let's do the same with a test train split","68e3e32e":"Find the ratio in the data ","2e48a382":"Load Data","1154b731":"Looks like this can be encoded","c6721838":"# Introduction\n\nThis is a small dataset that includes a column on if a person had a rash in the last year based on their nutrition. It should be noted that this is a small dataset and relationships found don't neccessarily bear out in the wider population. It is always fun to play with the dataset however. ","78a53466":"This is a small dataset so let's setup for cross validation","657bc762":"Let's look at the objects that are shown above, we need them gone","c9459f62":"Time to split X and y."}}