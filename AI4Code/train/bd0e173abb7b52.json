{"cell_type":{"81804cc6":"code","71865f72":"code","80832469":"code","b6a81865":"code","3c5709ef":"code","984e7f82":"code","a48bf6ff":"code","13376972":"code","f296da59":"code","95269cee":"code","1f041a36":"code","bb593afa":"code","79cb43b4":"code","aa797bd2":"code","c18f3e52":"code","4b6ee3dc":"code","29ed6613":"code","a1dfd794":"markdown","6911afea":"markdown","4e304cd1":"markdown","68dc591f":"markdown","9684d9aa":"markdown","f96640b8":"markdown","6e782a75":"markdown","bb720f64":"markdown","83b54f3e":"markdown","6f373bc4":"markdown","c9812cf2":"markdown","4a97f821":"markdown","af038589":"markdown","28408e69":"markdown","728a11bd":"markdown"},"source":{"81804cc6":"import pandas as pd\nimport numpy as np","71865f72":"data = pd.read_csv('..\/input\/adult.data.csv')\ndata.head()","80832469":"# You code here\ndata[\"sex\"].value_counts()","b6a81865":"# You code here\ndata[data[\"sex\"] == \"Female\"][\"age\"].mean()","3c5709ef":"# You code here float((data['native-country'] == 'Germany').sum()) \/ data.shape[0]\nfloat((data['native-country'] == 'Germany').sum()) \/ data.shape[0]","984e7f82":"def find_mean(df):\n    return np.mean(df)\n\ndef find_std(df):\n    return np.std(df)\n\nprint(\"Mean and standard deviation of age who earn less than 50k per year --\")\nprint(\"Mean -- \",find_mean(data[data['salary'] == '<=50K' ]['age']))\nprint(\"Standard Deviation -- \", find_std(data[data['salary'] == '<=50K']['age']))\n\nprint(\"Mean and standard deviation of age who earn more than 50k per year --\")\nprint(\"Mean -- \", find_mean(data[data['salary'] == '>50K']['age']))\nprint(\"Standard Deviation -- \", find_std(data[data['salary'] == '>50K']['age']))","a48bf6ff":"# You code here\ndata[data['salary'] == '>50K']['education'].value_counts()","13376972":"# You code here\n'''\nfor (race, sex), sub_df in data.groupby(['race', 'sex']):\n    print(\"Race: {0}, sex: {1}\".format(race, sex))\n    print(sub_df['age'].describe())\n'''\nfor (race, sex), sub_df in data.groupby(['race', 'sex']):\n    print(\"Race: {0}, sex: {1}\".format(race, sex))\n    print(sub_df['age'].describe())\n","f296da59":"pd.crosstab(data['race'], data['sex'], values=data['age'],aggfunc=[np.mean, np.std, np.min, np.max]).T","95269cee":"# You code here\nmarried = ['Married-civ-spouse', 'Married-spouse-absent', 'Married-AF-spouse']\n\ndata.loc[(data['sex'] == 'Male') & (data['marital-status'].isin(married)), 'salary'].value_counts()","1f041a36":"data.loc[(data['sex'] == 'Male') & (data['marital-status'].str.startswith('Married')), 'salary'].value_counts()","bb593afa":"data['marital-status'].value_counts()","79cb43b4":"# You code here\nmax_load = data['hours-per-week'].max()\nprint(\"Number of hours a person works per week is -- \", max_load)","aa797bd2":"number_workers = data[data['hours-per-week'] == max_load].shape[0]\nprint(\"The number of people work such a number of hours -- \", number_workers)","c18f3e52":"rich_share = float(data[(data['hours-per-week'] == max_load) & (data['salary'] == '>50K')].shape[0]) \/ number_workers\n\nprint(\"Percentage of rich among them -- {}%\".format(int(rich_share * 100)))","4b6ee3dc":"# You code here\nfor (country, salary), sub_df in data.groupby(['native-country', 'salary']):\n    print(country, salary, round(sub_df['hours-per-week'].mean()))","29ed6613":"pd.crosstab(data['native-country'], data['salary'], values=data['hours-per-week'], aggfunc=np.mean).T","a1dfd794":"**2. What is the average age (*age* feature) of women?**","6911afea":"**4-5. What are the mean and standard deviation of age for those who earn more than 50K per year (*salary* feature) and those who earn less than 50K per year? **","4e304cd1":"**7. Display age statistics for each race (*race* feature) and each gender (*sex* feature). Use *groupby()* and *describe()*. Find the maximum age of men of *Amer-Indian-Eskimo* race.**","68dc591f":"# <center> Assignment #1 (demo)\n## <center>  Exploratory data analysis with Pandas\n","9684d9aa":"**9. What is the maximum number of hours a person works per week (*hours-per-week* feature)? How many people work such a number of hours, and what is the percentage of those who earn a lot (>50K) among them?**","f96640b8":"**8. Among whom is the proportion of those who earn a lot (>50K) greater: married or single men (*marital-status* feature)? Consider as married those who have a *marital-status* starting with *Married* (Married-civ-spouse, Married-spouse-absent or Married-AF-spouse), the rest are considered bachelors.**","6e782a75":"**1. How many men and women (*sex* feature) are represented in this dataset?** ","bb720f64":"**In this task you should use Pandas to answer a few questions about the [Adult](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Adult) dataset. (You don't have to download the data \u2013 it's already here). Choose the answers in the [web-form](https:\/\/docs.google.com\/forms\/d\/1uY7MpI2trKx6FLWZte0uVh3ULV4Cm_tDud0VDFGCOKg). This is a demo version of an assignment, so by submitting the form, you'll see a link to the solution .ipynb file.**","83b54f3e":"<h5> Observation <\/h5>\n\nFrom above findings we can conclude that it is not true that people who earn more than 50K have at least high school education.\nAs stated above, we can see that people who have done 1st to 11th school also earning more than 50K","6f373bc4":"<h5> Observation <\/h5>\n\nIts good to be married, as we can see from the findings.","c9812cf2":"**6. Is it true that people who earn more than 50K have at least high school education? (*education \u2013 Bachelors, Prof-school, Assoc-acdm, Assoc-voc, Masters* or *Doctorate* feature)**","4a97f821":"Unique values of all features (for more information, please see the links above):\n- `age`: continuous.\n- `workclass`: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\n- `fnlwgt`: continuous.\n- `education`: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\n- `education-num`: continuous.\n- `marital-status`: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\n- `occupation`: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\n- `relationship`: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\n- `race`: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\n- `sex`: Female, Male.\n- `capital-gain`: continuous.\n- `capital-loss`: continuous.\n- `hours-per-week`: continuous.\n- `native-country`: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.   \n- `salary`: >50K,<=50K","af038589":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\">\n    \n## [mlcourse.ai](mlcourse.ai) \u2013 Open Machine Learning Course \n\n<center>Author: [Yury Kashnitskiy](http:\/\/yorko.github.io) <br>\nTranslated and edited by [Sergey Isaev](https:\/\/www.linkedin.com\/in\/isvforall\/), [Artem Trunov](https:\/\/www.linkedin.com\/in\/datamove\/), [Anastasia Manokhina](https:\/\/www.linkedin.com\/in\/anastasiamanokhina\/), and [Yuanyuan Pao](https:\/\/www.linkedin.com\/in\/yuanyuanpao\/) <br>All content is distributed under the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license.","28408e69":"**10. Count the average time of work (*hours-per-week*) for those who earn a little and a lot (*salary*) for each country (*native-country*). What will these be for Japan?**","728a11bd":"**3. What is the percentage of German citizens (*native-country* feature)?**"}}