{"cell_type":{"493ef139":"code","7c76a42c":"code","e3573667":"code","eaf2d222":"code","0eba7e1b":"code","07c20b53":"code","15887598":"code","8f0aba30":"code","0bc76ea0":"code","72ebb157":"code","19435d27":"code","4a382845":"code","253331e5":"code","745f63b5":"code","bfee61fd":"code","db836e5b":"code","9d27fc79":"markdown","3c46087f":"markdown","c57080ae":"markdown","d315a6d1":"markdown","acaa4654":"markdown","b72ddb81":"markdown","3642af18":"markdown","34a9e652":"markdown","37bd5e9e":"markdown"},"source":{"493ef139":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c76a42c":"x1=input()","e3573667":"y1=input()","eaf2d222":"x3=input()","0eba7e1b":"y3=input()","07c20b53":"listaintrare=input()","15887598":"listaintrare","8f0aba30":"type(listaintrare)","0bc76ea0":"lista=listaintrare.split(\",\")","72ebb157":"x5,y5,x7,y7=lista","19435d27":"x5","4a382845":"print(\"Cooordonate dreptunghi 1 sunt:\",\"(\",x1,y1,\")\",\"(\",x1,y3,\")\",\"(\",x3,y3,\")\",\"(\",x3,y1,\")\")","253331e5":"print(\"Cooordonate dreptunghi 2 sunt:\",\"(\",x5,y5,\")\",\"(\",x5,y7,\")\",\"(\",x7,y7,\")\",\"(\",x7,y5,\")\")","745f63b5":"#if sau functie de determinare maxim si minim interval\nif x1 < x3:\n        minx1=x1\n        maxx1=x3\nelse:\n        minx1=x3\n        maxx1=x1\nif y1 < y3:\n    miny1=y1\n    maxy1=y3\nelse:\n    miny1=y3\n    maxy1=y1\nif x5 < x7:\n    minx2=x5\n    maxx2=x7\nelse:\n    minx2=x7\n    maxx2=x5\nif y5 < y7:\n    miny2=y5\n    maxy2=y7\nelse:\n    miny2=y7\n    maxy2=y5","bfee61fd":"print(\"interval pe axa x dreptunghi 1:\",minx1,maxx1)\nprint(\"interval pe axa y dreptunghi 1:\",miny1,maxy1)\nprint(\"interval pe axa y dreptunghi 1:\",minx2,maxx2)\nprint(\"interval pe axa y dreptunghi 1:\",miny2,maxy2)","db836e5b":"if minx2 >maxx1 or minx1>maxx2 or miny2 >maxy1 or miny1>maxy2:\n    print(\"Dreptunghiurile nu se intersecteaza\")\nelse:\n    intesect_minim = int(max(minx1, minx2))\n    intesect_maxim = int(min(maxx1, maxx2))\n    print(\"interval intesectie pe axa x:\",intesect_minim,intesect_maxim)\n    intesect_minim_y = int(max(miny1, miny2))\n    intesect_maxim_y = int(min(maxy1, maxy2))\n    print(\"interval intesectie pe axa y:\",intesect_minim_y,intesect_maxim_y)\n    aria=(intesect_maxim - intesect_minim)*(intesect_maxim_y-intesect_minim_y)\n    print(\"aria intersectiei este:\",aria)","9d27fc79":"Am transformat sirul de intrare in lista","3c46087f":"Introducere date","c57080ae":"Verificare intersectie interval","d315a6d1":"Sau orice alta metoda de introducere date\n","acaa4654":"Mesaj de verificare","b72ddb81":"Verificare","3642af18":"MESAJE DE CONTROL","34a9e652":"lista de intrare este de tip string","37bd5e9e":"Schimbare tip variabila"}}