{"cell_type":{"a49020fc":"code","21f5ced4":"code","85f03c8f":"code","ea9d1453":"code","f3298eb3":"code","f700047c":"code","46bc2ae5":"code","1bd156d7":"code","4aa11783":"code","367fcd71":"code","944752ba":"code","ff8b7a63":"code","42c54042":"code","a5acec04":"code","4c2557c2":"code","a5e3b0bb":"code","53a17e8c":"code","a4fdca00":"code","3b58c318":"code","f4dc2a02":"code","5517fc90":"code","eb496c8b":"code","ae2a7a4e":"code","8ca77e2c":"code","50fa953d":"code","5a263c04":"code","ff52898d":"code","375bc826":"code","cfa97ed5":"code","f572210b":"code","d06b5f4c":"code","f1f8ba31":"code","286c84c3":"code","eabd4ca3":"code","b8771cfd":"code","16a0e930":"code","ad4f4f42":"code","10d90585":"code","b52b508a":"code","a5e022d7":"code","8d99b03b":"code","002a7dfb":"code","3ad829c0":"code","0d792607":"code","f2a5e037":"code","8d6d0c13":"code","76256a77":"code","a232d5dc":"code","41bc0375":"code","61d3ffcc":"code","8f57b6d7":"code","ee30f079":"code","62c1f883":"code","b9619e70":"code","8135d179":"code","b60041c5":"markdown"},"source":{"a49020fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21f5ced4":"literacy_data = pd.read_csv('..\/input\/india-literacy-data-district-wise\/Literacy Data 2011.csv')","85f03c8f":"literacy_data.head()","ea9d1453":"literacy_data.shape","f3298eb3":"# Missing values\n\nliteracy_data.isnull().values.sum()\n","f700047c":" literacy_data.drop(['Unnamed: 0'], axis=1, inplace=True)","46bc2ae5":"literacy_data.head()","1bd156d7":"literacy_data.describe()","4aa11783":"literacy_data.info()","367fcd71":"import seaborn as sns \nimport matplotlib.pyplot as plt","944752ba":"literacy_data_district_count = literacy_data['District'].value_counts()\nliteracy_data_district_count","ff8b7a63":"literacy_data['District'].nunique()","42c54042":"literacy_data['State'].nunique()","a5acec04":"literacy_data_sort=literacy_data.sort_values(by=['Literacy'],ascending=False)\nliteracy_data_sort","4c2557c2":"top_20_districts = literacy_data_sort[:20]\ntop_20_states = literacy_data_sort[:20]","a5e3b0bb":"literacy_data_sort.head(20)","53a17e8c":"literacy_data_sort.tail(20)","a4fdca00":"import plotly.graph_objects as go\n\nfig = go.Figure(\n    data=[go.Bar(x = top_20_districts['District'],\n                 y = top_20_districts['Literacy'])],\n    layout_title_text=\"Districts with High Literacy Rate\"\n)\n\n\nfig.show()","3b58c318":"import plotly.graph_objects as go\n\nfig = go.Figure(\n    data=[go.Scatter(x = top_20_districts['District'],\n                 y = top_20_districts['Literacy'])],\n    layout_title_text=\"Districts with High Literacy Rate\"\n    \n)\n\n\nfig.show()","f4dc2a02":"import plotly.graph_objects as go\n\nfig = go.Figure(\n    data=[go.Bar(x = literacy_data_sort.tail(20)['District'],\n                        y = literacy_data_sort.tail(20)['Literacy'])],\n    layout_title_text=\"Districts with Low Literacy Rate\"\n)\n\n\nfig.show()","5517fc90":"import plotly.graph_objects as go\n\nfig = go.Figure(\n    data=[go.Scatter(x = literacy_data_sort.tail(20)['District'],\n                        y = literacy_data_sort.tail(20)['Literacy'])],\n    layout_title_text=\"Districts with Low Literacy Rate\"\n)\n\n\nfig.show()","eb496c8b":"literacy_data['State'].value_counts()","ae2a7a4e":"import geopandas as gpd\n\nfp = r'\/kaggle\/input\/indiageofiles\/india-polygon.shp'\nmap_df = gpd.read_file(fp)\nmap_df.rename(columns={'st_nm': 'State'},inplace=True)\nmap_df.head() #check the head of the file","8ca77e2c":"map_df['State']","50fa953d":"map_df['State'].nunique()","5a263c04":"data_merge = map_df.merge(literacy_data_sort, on='State', how='left')\ndata_merge.head()","ff52898d":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Literacy Rate', fontdict={'fontsize': '25', 'fontweight' : '10'})\n\n# plot the figure\ndata_merge.plot(column='Literacy',cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);","375bc826":"map_df = map_df.drop('id',axis=1)","cfa97ed5":"map_df","f572210b":"map_df.shape","d06b5f4c":"map_df['geometry'][0]","f1f8ba31":"map_df['geometry'][13]","286c84c3":"state_map = map_df.set_index('State')['geometry'].to_dict()","eabd4ca3":"state_map","b8771cfd":"df1 = literacy_data_sort","16a0e930":"df1","ad4f4f42":"state_map['Karnataka']","10d90585":"state_map['Karnataka'].wkt","b52b508a":"df1['geometry'] = map_df['State'].map(state_map)","a5e022d7":"# for each row fetch state values\nfor index, row in df1.iterrows():\n    #print(row['State'])\n    val = row['State']\n     \nprint(val)\n# if this state value exits in state_map fetch corresponding geometry value\n","8d99b03b":"def get_geo(state_name):\n    \n    if state_name.strip() in state_map.keys():\n        return state_map.get(state_name.strip())\n    else:\n        return 0","002a7dfb":"df1","3ad829c0":"# for each row fetch state values\nfor index, row in df1.iterrows():\n    #print(row)\n    \n    print(row['State'])\n    print(\"==\")\n    \n    s =get_geo(row['State']) \n    #print(s)\n    \n    print(\"===============\")\n    df1['geometry'][index] = s\n    \n    \n    #df2['geometry']= s\n    #print(row)\n   \n    #val = row['State']\n    ","0d792607":"df1","f2a5e037":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Literacy Rate', fontdict={'fontsize': '25', 'fontweight' : '10'})\n\n# plot the figure\ndf1.plot(column='Literacy',cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);","8d6d0c13":"df1['Literacy'] = pd.to_numeric(df1['Literacy'], errors='coerce')","76256a77":"df1.dtypes","a232d5dc":"df2 = df1","41bc0375":"df2","61d3ffcc":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('Statewise Literacy Rate', fontdict={'fontsize': '25', 'fontweight' : '10'})\ndf2.plot(column='Literacy',\n         cmap='YlOrRd', \n         linewidth=0.8,\n         ax=ax, \n         edgecolor='0',\n         legend=True,markersize=[39.739192, -104.990337]);\n\n# plot the figure\n#df2.plot(column='Literacy',cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0', legend=True,markersize=[39.739192, -104.990337]);","8f57b6d7":"help(df2.plot)","ee30f079":"#https:\/\/github.com\/geopandas\/geopandas\/issues\/735","62c1f883":"pd.plotting.register_matplotlib_converters()","b9619e70":" pd.__version__","8135d179":"# Reference \n# https:\/\/www.kaggle.com\/sumaiyasande2494\/covid-19-spread-in-india-eda-interactive-maps","b60041c5":"### Plotting data on India Map"}}