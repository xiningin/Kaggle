{"cell_type":{"89773e9b":"code","8d932eb9":"code","5265dea5":"code","29b2156f":"code","bb79c8d9":"code","0dda7596":"code","86ee7226":"code","3311e006":"code","30bba27f":"markdown"},"source":{"89773e9b":"from PIL import Image\nimport pytesseract\nimport os\nimport sys","8d932eb9":"!ls ..\/input\/","5265dea5":"class ImageQuoteExtractor():\n    \n    ### only single image will be feed here\n    def load_single_image(self,imname):\n        self.imname = imname\n        self.im = Image.open(self.imname)\n        ## convert to grayscale\n        self.final = self.im.convert(\"L\")\n        return self.final\n    ## in this a total folder will be feed here\n    \n    def translate_single_image(self):\n        self.text = pytesseract.image_to_string(self.final) \n        return self.text\n    def load_multiple_image(self,folder):\n        self.images = []\n        for filename in os.listdir(folder):\n            ## load the image\n            path = str(folder)+\"\/\"+str(filename)\n            #print(path)\n            self.im = Image.open(path)\n            self.tmp = self.im.convert('L')\n            self.images.append(self.tmp)\n    \n    def translate_multiple_image(self):\n        self.texts = []\n        for image in self.images:\n            self.text = pytesseract.image_to_string(image)\n            self.texts.append(self.text)\n        \n        return self.texts","29b2156f":"i = ImageQuoteExtractor()","bb79c8d9":"i.load_single_image('..\/input\/third.png')","0dda7596":"i.translate_single_image()","86ee7226":"i.load_multiple_image('..\/input')","3311e006":"i.translate_multiple_image()","30bba27f":"## Creating the quote extractor with OCR"}}