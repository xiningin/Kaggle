{"cell_type":{"213e9bdd":"code","25a62244":"code","25f387b8":"code","b7c38c45":"code","aa54b7f3":"code","7596c6a2":"code","7fbf707a":"code","89439572":"code","9081efa1":"code","d0ba3c7d":"code","ffab8a3a":"code","a89d2082":"code","6b07427f":"code","216360ba":"code","6e054d47":"markdown","14170c2a":"markdown","05fab6f0":"markdown"},"source":{"213e9bdd":"# Check NVIDIA System Management Interface\n!nvidia-smi\n\n# If you'd like to see your GPU (maybe to see if it's CUDA compatible)\n!lspci | grep -i nvidia\n\n# If you's like to see the location of CUDA\n!whereis cuda\n\n# If you'd like to see CUDA version\n!nvcc --version\n\n# Check presence of CuDNN \n!whereis cudnn\n\n# Check version of cudnn\n!cat \/usr\/include\/cudnn_version.h","25a62244":"# Check is TensorFlow can access GPU\nfrom tensorflow.python.client import device_lib\ndevice_lib.list_local_devices()\n\n\n\n# Alternatively, check device name\nimport tensorflow as tf\ntf.test.gpu_device_name()\n\n# Check for CUDA\ntf.test.is_built_with_cuda()","25f387b8":"# Download models\n!git clone --depth 1 https:\/\/github.com\/tensorflow\/models\n\n# Compile proto files \n%cd models\/research\n!pip install protobuf\n!protoc object_detection\/protos\/*.proto --python_out=.\n%cd ..\n%cd ..\n\n# Install cocoapi\n!pip install cython \n!git clone https:\/\/github.com\/cocodataset\/cocoapi.git\n%cd cocoapi\/PythonAPI\n!make\n%cd ..\n%cd ..\n!cp -r cocoapi\/PythonAPI\/pycocotools models\/research\/\n\n# Install object detection api\n%cd models\/research\n!cp object_detection\/packages\/tf2\/setup.py .\n!python -m pip install .\n%cd ..\n%cd ..","b7c38c45":"# View tensorflow installation\n!pip freeze | grep tensorflow\n\n# Uninstall version 2.5\n!pip uninstall tf-models-official --yes\n# Install version 2.4\n!pip install tensorflow==2.4\n!pip install tf-models-official==2.4","aa54b7f3":"# View tensorflow installation\n!pip freeze | grep tensorflow","7596c6a2":"# Verify TensorFlow 2 Object Detection API installation (optional)\n%cd models\/research\n!python object_detection\/builders\/model_builder_tf2_test.py\n%cd ..\n%cd ..","7fbf707a":"# Making Directories \n!mkdir workspace\n%cd workspace\n!mkdir annotations\n!mkdir script\n!mkdir csv_files\n!mkdir pre_trained_models\n!mkdir models","89439572":"# Skip this..........if you already having tf.records generated and uploaded to kaggle\/input\/**tf_records folder\n\n# or else Run this following code\n# make sure you have the necessary kaggle\/input\/folders are uploaded properly\n\n# copy the scripts file uploaded to kaggle\/input\/scripts to kaggle\/...\/workspace\/scripts\/\n%cd script\n!cp \/kaggle\/input\/covid-scripts\/generate_tfrecord_csv_to_tfrecord.py .\n!ls\n%cd ..\n\n# Copy the csv files uploaded to kaggle\/input\/**csv_files to kaggle\/working\/workspace\/csv_files folders\n%cd csv_files\n!cp \/kaggle\/input\/covid-csv\/X_train.csv  .\n!cp \/kaggle\/input\/covid-csv\/X_test.csv  .\n!cp \/kaggle\/input\/covid-csv\/train_data_csv.csv  .\n!ls\n%cd ..\n\n# run this code to generate tfrecords --- if tf records are not present in kaggle input or kaggle\/working\/annotations folders\n%cd script\n! python generate_tfrecord_csv_to_tfrecord.py --csv_input=\/kaggle\/working\/workspace\/csv_files\/X_train.csv  --output_path=\/kaggle\/working\/workspace\/annotations\/train.record  --image_dir=\"\"\n! python generate_tfrecord_csv_to_tfrecord.py --csv_input=\/kaggle\/working\/workspace\/csv_files\/X_test.csv  --output_path=\/kaggle\/working\/workspace\/annotations\/test.record  --image_dir=\"\"\n\n%cd ..\n%cd annotations\n!cp \/kaggle\/input\/covid-scripts\/covid_label_map.pbtxt  .\n!ls\n%cd ..","9081efa1":"# Run this only if tf.record file are already uploaded to kaggle\/input\/**tfrecords\/folder\n# copy the available file to appropriate kaggle\/working\/***   folders\n\n# skip this if you are generating tf.records here on the run.....\n%cd annotations\n!cp \/kaggle\/input\/covid-scripts\/covid_label_map.pbtxt . \n!cp \/kaggle\/input\/covid-scripts\/covid_label_map.pbtxt . \n!cp \/kaggle\/input\/covid-scripts\/covid_label_map.pbtxt . \n\n!ls\n%cd ..","d0ba3c7d":"%cd pre_trained_models\n# Choose model of your choice and dpaste the download link kere \n!wget http:\/\/download.tensorflow.org\/models\/object_detection\/tf2\/20200711\/ssd_resnet50_v1_fpn_640x640_coco17_tpu-8.tar.gz\n!tar -xf ssd_resnet50_v1_fpn_640x640_coco17_tpu-8.tar.gz\n%cd ssd_resnet50_v1_fpn_640x640_coco17_tpu-8\n!ls\n%cd ..\n%cd ..","ffab8a3a":"# copying uploaded config file from kaggle\/input\/**config folder\n%cd models\n!mkdir ssd_resnet50_v1_fpn\n%cd ssd_resnet50_v1_fpn\n!cp \/kaggle\/input\/resnet-sheri-config\/pipeline.config  .\n!ls\n%cd ..\n%cd ..","a89d2082":"# Make sure that your are in kaggle\/working\/workspace\n# execute the following commands","6b07427f":"!cp  \/kaggle\/working\/models\/research\/object_detection\/model_main_tf2.py  .","216360ba":"!python model_main_tf2.py --model_dir=models\/ssd_resnet50_v1_fpn --pipeline_config_path=models\/ssd_resnet50_v1_fpn\/pipeline.config","6e054d47":"Clearly, TensorFlow is able access GPU and everything seems normal. What we need to ensure is that the **TensorFlow 2 Object Detection API** is able to access the **GPU**.","14170c2a":"### TensorFlow Object Detection API Installation\n#### 1. Downloading the TensorFlow Model Garden\n>workspace\/\n\n>\u2514\u2500 models\/\n\n>        \u251c\u2500 community\/\n\n>        \u251c\u2500 official\/\n\n>        \u251c\u2500 orbit\/\n\n>        \u251c\u2500 research\/\n\n>        \u2514\u2500\u2500 ...\n#### 2. Protobuf Installation\/Compilation\n#### 3. COCO API installation\n#### 4. Install the Object Detection API","05fab6f0":"**What options do we have?**\n1. We could upgrade to CUDA v11.2. I found this <a href=\"https:\/\/medium.com\/analytics-vidhya\/installing-any-version-of-cuda-on-ubuntu-and-using-tensorflow-and-torch-on-gpu-b1a954500786\">blog<\/a> useful for doing so. But it involves installing 2-3GB CUDA Toolkit from <a href=\"https:\/\/developer.nvidia.com\/cuda-11.2.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=runfilelocal\">here<\/a> and other complicated software engineering that's especially difficult on Kaggle.\n2. We can work with an older version of TensorFlow.\n\n**How do we work with an older version?**\n1. Install the latest TF2 OD API (v2.5). You'll also find a directory structure with everything you need.\n2. Uninstall tf-models-official v2.5\n3. Install tensorflow v2.4\n4. Install tf-models-official v2.4 (it is compatible with the hardware\/software configuration)"}}