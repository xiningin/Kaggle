{"cell_type":{"9988f5e3":"code","70b0dd12":"code","f6fc2bc3":"code","0935a84b":"markdown"},"source":{"9988f5e3":"# Install:\n# Kaggle environments.\n!git clone https:\/\/github.com\/Kaggle\/kaggle-environments.git\n!cd kaggle-environments && pip install .\n\n# GFootball environment.\n!apt-get update -y\n!apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone -b v2.3 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .\n","70b0dd12":"%%writefile submission.py\nfrom kaggle_environments.envs.football.helpers import *\nfrom math import sqrt\n\ndirections = [\n[Action.TopLeft, Action.Top, Action.TopRight],\n[Action.Left, Action.Idle, Action.Right],\n[Action.BottomLeft, Action.Bottom, Action.BottomRight]]\n\ndirsign = lambda x: 1 if abs(x) < 0.01 else (0 if x < 0 else 2)\n\nenemyGoal = [1, 0]\nperfectRange = [[0.6, 1], [-0.2, 0.2]]\n\ndef inside(pos, area):\n    return area[0][0] <= pos[0] <= area[0][1] and area[1][0] <= pos[1] <= area[1][1]\n\n@human_readable_agent\ndef agent(obs):\n    controlled_player_pos = obs['left_team'][obs['active']]\n\n    if obs[\"game_mode\"] == GameMode.Penalty:\n        return Action.Shot\n    if obs[\"game_mode\"] == GameMode.Corner:\n        if controlled_player_pos[0] > 0:\n            return Action.Shot\n    if obs[\"game_mode\"] == GameMode.FreeKick:\n        return Action.Shot\n    # Make sure player is running.\n    if  0 < controlled_player_pos[0] < 0.6 and Action.Sprint not in obs['sticky_actions']:\n        return Action.Sprint\n    elif 0.6 < controlled_player_pos[0] and Action.Sprint in obs['sticky_actions']:\n        return Action.ReleaseSprint\n\n    # Does the player we control have the ball?\n    if obs['ball_owned_player'] == obs['active'] and obs['ball_owned_team'] == 0:\n        goalkeeper = 0\n        if inside(controlled_player_pos, perfectRange) and controlled_player_pos[0] < obs['ball'][0]:\n            return Action.Shot\n        elif abs(obs['right_team'][goalkeeper][0] - 1) > 0.2 and controlled_player_pos[0] > 0.4 and abs(controlled_player_pos[1]) < 0.2:\n            return Action.Shot\n        else:\n            xdir = dirsign(enemyGoal[0] - controlled_player_pos[0])\n            ydir = dirsign(enemyGoal[1] - controlled_player_pos[1])\n            return directions[ydir][xdir]\n    else:\n        # Run towards the ball.\n        xdir = dirsign(obs['ball'][0] - controlled_player_pos[0])\n        ydir = dirsign(obs['ball'][1] - controlled_player_pos[1])\n        return directions[ydir][xdir]\n","f6fc2bc3":"# Set up the Environment.\nfrom kaggle_environments import make\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True}, debug=True)\noutput = env.run([\"\/kaggle\/working\/submission.py\", \"do_nothing\"])[-1]\nprint('Left player: reward = %s, status = %s, info = %s' % (output[0]['reward'], output[0]['status'], output[0]['info']))\nprint('Right player: reward = %s, status = %s, info = %s' % (output[1]['reward'], output[1]['status'], output[1]['info']))\nenv.render(mode=\"human\", width=800, height=600)","0935a84b":"Since people are wondering how good the top bots really are and what strategies they deploy.\nHere is my best performing bot so far. I created it as a baseline to evaluate my other bots against it\nbut I am surprised myself how good it still performs a week into the competition. (At the time of writing it is number three :-))\n\nIt is a simple adaptation from the starter bot and all it does is:\n- In stadards always shot\n- If you don't have the ball, go to the ball\n- If you have the ball, go towards the goal\n- If you are close to the goal, shot\n\nMaybe it can serve as a baseline for other people as well who wants to know what they need to beat to get higher up the ladder."}}