{"cell_type":{"f1b6ada2":"code","4eab6e01":"code","174a50a9":"code","787b1207":"code","5928245d":"code","23517def":"code","1e34f38f":"code","2d9d868b":"code","a5a89b0d":"code","7ff8c00c":"code","cfd4b133":"code","f09e6ac6":"code","827ae51d":"code","d00d2c88":"code","56dd71c9":"code","53296fee":"markdown","63b918eb":"markdown","c2fbbfb3":"markdown","61bb11db":"markdown","d1864c17":"markdown","55bcc1cc":"markdown","365db14a":"markdown","816039c0":"markdown","3d561052":"markdown","f4ec9077":"markdown","426aa1f0":"markdown","634cbc89":"markdown","3291a611":"markdown"},"source":{"f1b6ada2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4eab6e01":"df = pd.read_csv('..\/input\/full-exoplanet-catalog\/exoplanet_confirm_and_candidates.csv')\ndf","174a50a9":"df.columns","787b1207":"df = df.rename(columns={\"# name\": \"planet_name\", \"mass\":\"mass_jup\", \"radius\":\"radius_jup\"})","5928245d":"df['mass_earth'] = df['mass_jup'] * 317.8\ndf['radius_earth'] = df['radius_jup'] * 11.5\n\ndf['log_mass_earth'] = np.log10(df['mass_earth'])\ndf['log_radius_earth'] = np.log10(df['radius_earth'])\ndf['log_orbital_period'] = np.log10(df['orbital_period'])\ndf['log_star_teff'] = np.log10(df['star_teff'])\ndf.head()","23517def":"#display(df[df['mass_earth'] < 5])","1e34f38f":"columns = list(df.columns)\nnew_columns = []\nfor i in columns:\n    if 'error' not in i:\n        new_columns.append(i)\n        \nnew_columns","2d9d868b":"df_2 = df[new_columns]","a5a89b0d":"df_2 = df_2.drop(['inclination',\n 'angular_distance',\n 'discovered',\n 'updated',\n 'omega',\n 'tperi',\n 'tconj',\n 'tzero_tr',\n 'tzero_tr_sec',\n 'lambda_angle',\n 'impact_parameter',\n 'tzero_vr','hot_point_lon','log_g',\n 'publication', 'ra',\n 'dec',\n 'mag_v',\n 'mag_i',\n 'mag_j',\n 'mag_h',\n 'mag_k', 'star_detected_disc',\n 'star_magnetic_field',\n 'star_alternate_names'], axis=1)\n\ndf_2","7ff8c00c":"df.planet_status.unique()","cfd4b133":"## Split dataframe into confirmed and candidates \n\nconfirmed = df_2.query('planet_status == \"Confirmed\"')\ncandidates = df_2.query('planet_status == \"Candidate\"')","f09e6ac6":"fig = px.scatter(confirmed, x=\"log_orbital_period\", y=\"log_mass_earth\", \n                 hover_data=['planet_name'], color='star_teff')\nfig.show()","827ae51d":"confirmed_temp = confirmed.query('star_teff <= 10000')\nfig = px.scatter(confirmed_temp, x=\"log_orbital_period\", y=\"log_mass_earth\", \n                 hover_data=['planet_name'], color='star_teff')\nfig.show()","d00d2c88":"\nfig = px.scatter(confirmed_temp, x=\"log_orbital_period\", y=\"log_radius_earth\", \n                 hover_data=['planet_name'], color='star_teff')\nfig.show()","56dd71c9":"confirmed_rad = confirmed_temp.query('log_radius_earth > -1 & log_radius_earth < 1.5')\nfig = px.scatter(confirmed_rad, x=\"log_orbital_period\", y=\"log_radius_earth\", \n                 hover_data=['planet_name'], color='star_teff')\nfig.show()","53296fee":"Creating new dataframe ","63b918eb":"Almost all star temperatures are less then 10.000 K. Drop the hottest:","c2fbbfb3":"Drop objects with radius more than 30 Earth:","61bb11db":"### Data preparation","d1864c17":"Further, dataset may be splitted by two tables - with confirmed and candidate planets.","55bcc1cc":"Most of objects are concentrated in field between 0.6 - 23 Earth radius and orbital period between 0.5 and 1000 days.\n\nOn average, the less the radius of the planet - the lower the temperature of the host star.\n\nAll planets may be splitted on two groups by radius - more than 5 Earth mass and less.  ","365db14a":"#### Orbital period - planet radius","816039c0":"To be continued..","3d561052":"Most of objects are concentrated in field between 0.5 Earth - 30 Jupiter mass and orbital period between 0.5 and 1000 days.\n\nOn average, the less the mass of the planet - the lower the temperature of the host star.\n\nAll planets, on probation, may be splitted on two groups by mass - more than 50 Earth mass and less.  ","f4ec9077":"## Visualizations (for confirmed exo)","426aa1f0":"#### Orbital period - planet mass","634cbc89":"At may 2021, there are over 4 thousands confirmed exoplanets, and few thousands more candidates more. In this notebook, I want to find patterns in distributions of planets. And try to explain gaps in distributions - planets with which characteristics we didn't found yet and why?","3291a611":"We have 98 columns - not all of them we need (at least initially). I want rename some, remove columns with measurement errors, and add column with logarithms of some parameters - it'll be more convenient for diagrams."}}