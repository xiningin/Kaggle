{"cell_type":{"9cf414db":"code","274cd23e":"code","f17ef210":"code","e666df46":"code","3c6a0e17":"code","feb13a49":"code","024895d9":"code","960a5769":"code","906a2611":"code","0cb64d19":"code","08b6c199":"code","4adb9cb2":"code","a8466d18":"code","72c43560":"code","a71f9120":"code","a1e0c84d":"code","34853e85":"code","389f032c":"code","bc5d560a":"code","4658352d":"code","287ad94c":"code","d474501f":"code","300166d4":"code","d17ed73b":"code","25fd2123":"code","ce8e49f6":"code","29640c48":"code","c80f99fe":"code","de4af9a5":"code","c056f1cf":"code","2b8e42a6":"code","ef7a3745":"code","89ea7b68":"code","524f2639":"code","0c20b183":"code","fa48a012":"code","bcec9b55":"code","662ff246":"code","3ec8abf3":"code","0cb6a919":"code","6bcec042":"code","603c1bf8":"code","0026bce1":"markdown","a6b6a3b0":"markdown","d9b35d5f":"markdown","8c469501":"markdown","a4dd43fa":"markdown"},"source":{"9cf414db":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfrom tqdm import tqdm\nimport re\nfrom PIL import Image\nimport random\nimport pydicom\nimport gc\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","274cd23e":"import tensorflow as tf\nimport tensorflow.keras.backend as K\nimport tensorflow.keras.layers as L\nimport tensorflow.keras.models as M\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import KFold","f17ef210":"df = pd.read_csv(\"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/test.csv\")\nsample = pd.read_csv(\"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/sample_submission.csv\")","e666df46":"df.head()","3c6a0e17":"df.info()","feb13a49":"print(f\"Out of 1549 entried there were only {df['Patient'].nunique()} unique patients\")","024895d9":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(16,7))\nsns.countplot(df['Sex'],ax=ax1).set_title(\"GENDER COUNT OF GIVEN DATA\");\nsns.countplot(df['SmokingStatus'],ax=ax2).set_title(\"SMOKING STATUS COUNT OF GIVEN DATA\");","960a5769":"print(\"Since the data has dupilcated values let's recheck by dropping duplicates\")\nprint()\nprint(\"######### GENDER ##########\")\nprint()\nprint(df[['Patient','Sex','SmokingStatus']].drop_duplicates()['Sex'].value_counts())\nprint()\nprint(\"####### SMOKING STATUS ########\")\nprint()\nprint(df[['Patient','Sex','SmokingStatus']].drop_duplicates()['SmokingStatus'].value_counts())","906a2611":"sns.set_style('whitegrid')\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,7))\n\nprint(f\"FVC minimum value - {df['FVC'].min()}, FVC maximum value - {df['FVC'].max()}                 \\\n          WEEKS minimum value - {df['Weeks'].min()}, WEEKS maximum value - {df['Weeks'].max()}\")\n\nsns.distplot(df['FVC'],ax=ax1,kde=False,bins=40,color='salmon').set_title(\"FVC DISTRIBUTION\");\nsns.distplot(df['Weeks'],ax=ax2,kde=False,bins=40,color='salmon').set_title(\"WEEKS DISTRIBUTION\");","0cb64d19":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,7))\n\nprint(f\"Age minimum value - {df['Age'].min()}, Age maximum value - {df['Age'].max()}                 \\\n          Percent minimum value - {df['Percent'].min()}, Percent maximum value - {df['Percent'].max()}\")\n\nsns.distplot(df['Age'],ax=ax1,kde=False,bins=40,color='plum').set_title(\"AGE DISTRIBUTION\");\nsns.distplot(df['Percent'],ax=ax2,kde=False,bins=40,color='plum').set_title(\"PERCENT DISTRIBUTION\");","08b6c199":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,4))\nsns.boxplot(df['Percent'],ax=ax1,palette='winter',orient='h').set_title(\"PERCENTAGE DETAILS\");\nsns.boxplot(df['Age'],ax=ax2,palette='winter',orient='h').set_title(\"AGE DETAILS\");","4adb9cb2":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(20,4))\nsns.boxplot(df['FVC'],ax=ax1,palette='winter',orient='h').set_title(\"FVC DETAILS\");\nsns.boxplot(df['Weeks'],ax=ax2,palette='winter',orient='h').set_title(\"WEEKS DETAILS\");","a8466d18":"fig, (ax1,ax2) = plt.subplots(1,2,figsize=(14,7));\nsns.boxplot(df['Sex'],df['FVC'],palette='winter',orient='v',ax=ax1).set_title(\"GENDER VS FVC\");\n\nsns.boxplot(df['SmokingStatus'],df['FVC'],palette='winter',orient='v',ax=ax2).set_title(\"SMOKING STAT VS FVC\");","72c43560":"print(\"######## FVC #########\\n\")\nprint(f\"Mean FVC of Male {df[df['Sex']=='Male']['FVC'].mean()}\")\nprint(f\"Mean FVC of Female {df[df['Sex']=='Female']['FVC'].mean()}\\n\")\n\nprint(\"######## Smoking Stat #########\\n\")\nprint(f\"Mean FVC of Smoker {df[df['SmokingStatus']=='Currently smokes']['FVC'].mean()}\")\nprint(f\"Mean FVC of Ex-Smoker {df[df['SmokingStatus']=='Ex-smoker']['FVC'].mean()}\")\nprint(f\"Mean FVC of Never Smoked {df[df['SmokingStatus']=='Never smoked']['FVC'].mean()}\")","a71f9120":"sns.pairplot(hue='Sex',data=df,x_vars=['Weeks','FVC','Percent','Age'],y_vars=['Weeks','FVC','Percent','Age'],height=3);","a1e0c84d":"print(\"FVC decreases over time for most of the cases\")\nplt.figure(figsize = (15,10))\na = sns.lineplot(x = df[\"Weeks\"], y = df[\"FVC\"], hue = df[\"Patient\"], size=1,legend=False)","34853e85":"df['Photo count'] = 0\nnames = df['Patient'].unique()\nfor name in names:\n    file = '\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/'+name\n    df.loc[df['Patient']==name,'Photo count'] = len(os.listdir(file))\n    \ndata = df.groupby(by=\"Patient\")[\"Photo count\"].first().reset_index(drop=False)\ndata = data.sort_values(['Photo count']).reset_index(drop=True)\ndata['Photo count'].describe()","389f032c":"plt.figure(figsize=(20,5))\nsns.distplot(data['Photo count'],bins=200,kde=False)","bc5d560a":"patient_dir = \"..\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\"\n\nfiles = []\nfor dcm in list(os.listdir(patient_dir)):\n    files.append(dcm)\n    \nfiles.sort(key=lambda f: int(re.findall('\\d+',f)[0]))\n\ndatasets = []\n\nfor dcm in files:\n    path = patient_dir + \"\/\" + dcm\n    datasets.append(pydicom.dcmread(path))\n    \nfig=plt.figure(figsize=(16, 6))\n\ncolumns = 10\nrows = 3\n\nfor i in range(columns*rows):\n    img = datasets[i].pixel_array\n    fig.add_subplot(rows, columns, i+1)\n    plt.imshow(img, cmap=\"plasma\")\n    plt.axis('off');","4658352d":"def seed_everything(seed=2020):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    \nseed_everything(42)","287ad94c":"df.drop_duplicates(keep=False, inplace=True, subset=['Patient','Weeks'])","d474501f":"sample['Patient'] = sample['Patient_Week'].apply(lambda x:x.split('_')[0])\nsample['Weeks'] = sample['Patient_Week'].apply(lambda x: int(x.split('_')[-1]))\nsample =  sample[['Patient','Weeks','Confidence','Patient_Week']]\nsample = sample.merge(test.drop('Weeks', axis=1), on=\"Patient\")","300166d4":"df['WHERE'] = 'train'\ntest['WHERE'] = 'val'\nsample['WHERE'] = 'test'\ndata = df.append([test, sample])","d17ed73b":"data['min_week'] = data['Weeks']\ndata.loc[data.WHERE=='test','min_week'] = np.nan\ndata['min_week'] = data.groupby('Patient')['min_week'].transform('min')","25fd2123":"base = data.loc[data.Weeks == data.min_week]\nbase = base[['Patient','FVC']].copy()\nbase.columns = ['Patient','min_FVC']\nbase['nb'] = 1\nbase['nb'] = base.groupby('Patient')['nb'].transform('cumsum')\nbase = base[base.nb==1]\nbase.drop('nb', axis=1, inplace=True)","ce8e49f6":"data = data.merge(base, on='Patient', how='left')\ndata['base_week'] = data['Weeks'] - data['min_week']\ndel base\ngc.collect()","29640c48":"data[['Sex_Male','SmokingStatus_Ex-smoker','SmokingStatus_Never smoked']] = pd.get_dummies(data[['Sex','SmokingStatus']],drop_first=True)\n\nfeatures = ['Percent','Age','min_FVC','base_week']","c80f99fe":"from sklearn.preprocessing import MinMaxScaler\n\nfor i in features:\n    scaler = MinMaxScaler()\n    data[i] = scaler.fit_transform(data[[i]])","de4af9a5":"df = data.loc[data.WHERE=='train'].drop('WHERE',axis=1)\ntest = data.loc[data.WHERE=='val'].drop('WHERE',axis=1)\nsample = data.loc[data.WHERE=='test'].drop('WHERE',axis=1)","c056f1cf":"features += ['Sex_Male','SmokingStatus_Ex-smoker','SmokingStatus_Never smoked']","2b8e42a6":"df[features].head()","ef7a3745":"X = df[features].values\n\ny = df['FVC'].values\n\ntest_ = sample[features].values\n\ny = y.astype('float64') ","89ea7b68":"nh = X.shape[1]\npe = np.zeros((test_.shape[0], 3))\npred = np.zeros((X.shape[0], 3))","524f2639":"C1, C2 = tf.constant(70, dtype='float32'), tf.constant(1000, dtype=\"float32\")\n\ndef score(y_true, y_pred):\n    tf.dtypes.cast(y_true, tf.float32)\n    tf.dtypes.cast(y_pred, tf.float32)\n    sigma = y_pred[:, 2] - y_pred[:, 0]\n    fvc_pred = y_pred[:, 1]\n    \n    sigma_clip = tf.maximum(sigma, C1)\n    delta = tf.abs(tf.dtypes.cast(y_true[:, 0], tf.float32) - tf.dtypes.cast(fvc_pred, tf.float32))\n    delta = tf.minimum(delta, C2)\n    sq2 = tf.sqrt( tf.dtypes.cast(2, dtype=tf.float32) )\n    metric = (delta \/ sigma_clip)*sq2 + tf.math.log(sigma_clip* sq2)\n    return K.mean(metric)\n\ndef qloss(y_true, y_pred):\n    qs = [0.2, 0.50, 0.8]\n    q = tf.constant(np.array([qs]), dtype=tf.float32)\n    e = y_true - y_pred\n    e = tf.dtypes.cast(y_true,tf.float32) - tf.dtypes.cast(y_pred,tf.float32)\n    v = tf.maximum(q*e, (q-1)*e)\n    return K.mean(v)\n\ndef mloss(_lambda):\n    def loss(y_true, y_pred):\n        return _lambda * qloss(y_true, y_pred) + (1 - _lambda)*score(y_true, y_pred)\n    return loss\n\ndef make_model(nh):\n    z = L.Input((nh,), name=\"Patient\")\n    x = L.Dense(100, activation=\"relu\", name=\"d1\")(z)\n    x = L.Dense(100, activation=\"relu\", name=\"d2\")(x)\n    p1 = L.Dense(3, activation=\"linear\", name=\"p1\")(x)\n    p2 = L.Dense(3, activation=\"relu\", name=\"p2\")(x)\n    preds = L.Lambda(lambda x: x[0] + tf.cumsum(x[1], axis=1), \n                     name=\"preds\")([p1, p2])\n    \n    model = M.Model(z, preds, name=\"CNN\")\n    model.compile(loss=mloss(0.8), optimizer=tf.keras.optimizers.Adam(lr=0.1, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.01, amsgrad=False), metrics=[score])\n    return model","0c20b183":"kf = KFold(n_splits=5)\ncnt = 0\nEPOCHS = 800\n\nfor tr_idx, val_idx in kf.split(X):\n    cnt += 1\n    print(f\"FOLD {cnt}\")\n    model = make_model(nh)\n    model.fit(X[tr_idx], y[tr_idx], batch_size=128, epochs=EPOCHS, \n            validation_data=(X[val_idx], y[val_idx]), verbose=0)\n    print(\"train\", model.evaluate(X[tr_idx], y[tr_idx], verbose=0, batch_size=128))\n    print(\"val\", model.evaluate(X[val_idx], y[val_idx], verbose=0, batch_size=128))\n    print(\"predict val...\")\n    pred[val_idx] = model.predict(X[val_idx], batch_size=128, verbose=0)\n    print(\"predict test...\")\n    pe += model.predict(test_, batch_size=128, verbose=0) \/ 5","fa48a012":"sigma_opt = mean_absolute_error(y, pred[:, 1])\nunc = pred[:,2] - pred[:, 0]\nsigma_mean = np.mean(unc)\nprint(sigma_opt, sigma_mean)","bcec9b55":"idxs = np.random.randint(0, y.shape[0], 100)\nplt.plot(y[idxs], label=\"ground truth\")\nplt.plot(pred[idxs, 0], label=\"q25\")\nplt.plot(pred[idxs, 1], label=\"q50\")\nplt.plot(pred[idxs, 2], label=\"q75\")\nplt.legend(loc=\"best\")\nplt.show()","662ff246":"plt.hist(unc)\nplt.title(\"uncertainty in prediction\")\nplt.show()","3ec8abf3":"sample['FVC1'] = 0.996*pe[:, 1]\nsample['Confidence1'] = pe[:, 2] - pe[:, 0]\n\nsubm = sample[['Patient_Week','FVC','Confidence','FVC1','Confidence1']].copy()","0cb6a919":"subm.loc[~subm.FVC1.isnull(),'FVC'] = subm.loc[~subm.FVC1.isnull(),'FVC1']\nif sigma_mean<70:\n    subm['Confidence'] = sigma_opt\nelse:\n    subm.loc[~subm.FVC1.isnull(),'Confidence'] = subm.loc[~subm.FVC1.isnull(),'Confidence1']","6bcec042":"otest = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\nfor i in range(len(otest)):\n    subm.loc[subm['Patient_Week']==otest.Patient[i]+'_'+str(otest.Weeks[i]), 'FVC'] = otest.FVC[i]\n    subm.loc[subm['Patient_Week']==otest.Patient[i]+'_'+str(otest.Weeks[i]), 'Confidence'] = 0.1","603c1bf8":"subm[[\"Patient_Week\",\"FVC\",\"Confidence\"]].to_csv(\"submission.csv\", index=False)","0026bce1":"Clearly Female had much lower FVC than male and as mentioned on Risk Factors it is reason why men are most likely got affected by Pulmonary (may be due to place men work and some other external factors).\n\nFVC value is large for smokers.","a6b6a3b0":"Most of the people have CT scan images less than 150 and very rarely people have images greater than 500","d9b35d5f":"**REFERENCES:**\n\nhttps:\/\/www.kaggle.com\/ulrich07\/osic-multiple-quantile-regression-starter","8c469501":"<span style=\"font-size:29px;\">Pulmonary Fibrosis<\/span><br><br>\n<span style=\"font-size:20px; margin-bottom:10px\"><b>What is Pulmonary Fibrosis?<\/b><\/span>\n\n   Pulmonary fibrosis is a lung disease that occurs when lung tissue becomes damaged and scarred. This thickened, stiff tissue makes it more difficult for your lungs to work properly. As pulmonary fibrosis worsens, you become progressively more short of breath.\n\n![ima.jpg](attachment:ima.jpg)\n<br>\n\n<span style=\"font-size:20px; margin-bottom:10px\"><b>Risk Factors:<\/b><\/span><br>\n\n1) **Age:**\nThe disorder is much more likely to affect **middle-aged and older adults**.<br><br>\n2) **Sex:**\nIt affects Men more likely than women.\n<br><br>\n3) **Smoking:**\nSmokers and former smokers develop pulmonary fibrosis than do people who have never smoked.\n\n\n(If you need to more about Pulmonary read these articles, https:\/\/www.lung.org\/lung-health-diseases\/lung-disease-lookup\/pulmonary-fibrosis, https:\/\/www.mayoclinic.org\/diseases-conditions\/pulmonary-fibrosis\/symptoms-causes\/syc-20353690#)\n\n<span style=\"font-size:20px; margin-bottom:10px\"><b>Data Description:<\/b><\/span><br><br>\nThe training set has anonymized, baseline CT scan and the associated details of the patient such as Sex, Age and Smoking Status were provided along with **FVC([Force Vital Capacity](https:\/\/www.verywellhealth.com\/forced-expiratory-capacity-measurement-914900#)) measurements**.\n<br> <br>\nFVC of a patient is measured each time he has taken a checkup at hospital from week 0 (negative value means reading taken before week 0) over the course of approximately 1-2 years and is provided along with the CT scan.\n\nOur task is to predict the predict the FVC for the final three weeks for each patient along with it's confidence from the provided FVC value, patient metadata and CT scan.","a4dd43fa":"## EDA"}}