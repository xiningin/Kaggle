{"cell_type":{"c3f32a23":"code","51231698":"code","156a4b2d":"code","b81b7ccb":"code","aaad5d71":"code","c3cb9c29":"code","4b8cf8dd":"code","24644c8f":"code","631f364c":"code","c1adcf0b":"markdown","f7da8274":"markdown"},"source":{"c3f32a23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51231698":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","156a4b2d":"df = pd.read_csv('fashion-mnist_train.csv')\ndf_test = pd.read_csv('new_test.csv')","b81b7ccb":"df.info() # \u0412\u044b\u0431\u043e\u0440\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u0442\u0438\u043f int64","aaad5d71":"df.isnull().any().sum() # \u0440\u043e\u0432\u043d\u043e 0 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","c3cb9c29":"print(df.shape)\ndf.head()","4b8cf8dd":"X = np.array(df.loc[:, 'pixel1':])\ny = np.array(df.loc[:, 'label'])","24644c8f":"some_ten_images = df.groupby('label').first()\n\nplt.figure(figsize=(30,10))\ni = 1\nfor j in range(10):\n    ax = plt.subplot(2, 5, i)\n    pixels = np.array(some_ten_images.iloc[j]).reshape((28, 28))\n    plt.imshow(pixels, cmap='gray')\n    i += 1\nplt.show()","631f364c":"sns.countplot(y)","c1adcf0b":"## \u0422\u0443\u0442 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434, \u0447\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u0447\u0442\u043e \u043e\u0431\u043b\u0435\u0433\u0447\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443:","f7da8274":"## \u0413\u043b\u044f\u043d\u0435\u043c \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u043a\u043b\u0430\u0441\u0441\u044b"}}