{"cell_type":{"f1cc690e":"code","83175e31":"code","8e53ed5c":"code","b7a011ed":"code","172aae05":"code","215f318a":"code","db25a34e":"code","2b6d7d87":"code","79655d84":"code","d887edf9":"code","1c8351b9":"code","278ea796":"code","8e1c9197":"code","09830dd1":"code","e56fbc78":"code","bdb8c6d4":"code","08967fbc":"code","60ec3010":"code","855687f3":"markdown","700c1a22":"markdown","8dc874f5":"markdown","27d39bbe":"markdown","bb0c2ad8":"markdown","184509d9":"markdown","185bca54":"markdown"},"source":{"f1cc690e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport pylab\nimport seaborn as sns\n%matplotlib inline","83175e31":"#I think these things would have been done better on imdb database but, anyway ","8e53ed5c":"data = pd.read_csv(\"..\/input\/wiki_movie_plots_deduped.csv\")","b7a011ed":"data.head()","172aae05":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\nimport plotly.graph_objs as go\n","215f318a":"\ntemp=data['Release Year'].value_counts()\ntemp=temp.sort_index(ascending=True)\nYear=temp.index\nNumber=temp.values\ntrace = [go.Scatter(\n    x = Year,\n    y = Number,\n    mode = 'lines',\n    name = 'lines'\n)]\nlayout = go.Layout(\n    title='Number of movies by year',\n)\nfig = go.Figure(data=trace, layout=layout)\niplot(fig)","db25a34e":"data['Origin\/Ethnicity'].unique()","2b6d7d87":"data.groupby( [ \"Origin\/Ethnicity\"])['Title'].count().sort_values(ascending=False)","79655d84":"Indian = ['Assamese','Bengali','Bollywood','Kannada','Malayalam','Marathi','Punjabi', \n          'Tamil', 'Telugu']\nOthers = ['Australian', 'Bangladeshi','Egyptian', 'Hong Kong', 'Filipino'\n          , 'Malaysian', 'Maldivian',\n           'Russian', 'South_Korean', 'Turkish']\n","d887edf9":"Indian_data = data[data['Origin\/Ethnicity'].isin(Indian)]\nOthers_data = data[data['Origin\/Ethnicity'].isin(Others)]\nAmerican_data=data[data['Origin\/Ethnicity']=='American']\nBritish_data=data[data['Origin\/Ethnicity']=='British']\nCanadian_data=data[data['Origin\/Ethnicity']=='Canadian']\nChinese_data=data[data['Origin\/Ethnicity']=='Chinese']\nJapanese_data=data[data['Origin\/Ethnicity']=='Japanese']","1c8351b9":"temp=Indian_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace1 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Indian'\n)\ntemp=Others_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace2 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Others'\n)\ntemp=American_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace3 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'American'\n)\ntemp=British_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace4 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'British'\n)\ntemp=Chinese_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace5 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Chinese'\n)\ntemp=Canadian_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace6 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Canadian'\n)\ntemp=Japanese_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace7 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Japanese'\n)\nlayout = go.Layout(\n    title='Number of movies classified by origin per year',\n)\n\ndatapoints = [trace1, trace2,trace3,trace4,trace5,trace6,trace7]\nfig = dict(data=datapoints,layout=layout)\niplot(fig)","278ea796":"data.groupby( [ \"Genre\"])['Title'].count().sort_values(ascending=False)","8e1c9197":"temp_data=data[data['Genre']=='drama']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace1 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'drama'\n)\ntemp_data=data[data['Genre']=='comedy']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace2 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'comedy'\n)\n\ntemp_data=data[data['Genre']=='horror']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace3 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'horror'\n)\n\ntemp_data=data[data['Genre']=='action']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace4 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'action'\n)\n\ntemp_data=data[data['Genre']=='thriller']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace5 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'thriller'\n)\n\ntemp_data=data[data['Genre']=='romance']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace6 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'romance'\n)\n\ntemp_data=data[data['Genre']=='western']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace7 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'western'\n)\n\n\ntemp_data=data[data['Genre']=='film noir']\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace8 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'film noir'\n)\n\nlayout = go.Layout(\n    title='Number of movies classified by Genre per year',\n    \n)\n\ndatapoints = [trace1, trace2,trace3,trace4,trace5,trace6,trace7,trace8]\nfig = dict(data=datapoints,layout=layout)\niplot(fig)","09830dd1":"##total=data['Release Year'].value_counts().sort_index(ascending=True).values\n##total","e56fbc78":"layout = go.Layout(\n    title='Film Noir by year',\n    annotations= [\n    {\n      \"x\": 1945, \n      \"y\": 1.06818181818, \n      \"font\": {\n        \"color\": \"rgb(255, 0, 0)\", \n        \"size\": 8\n      }, \n      \"showarrow\": False, \n      \"text\": \"Rise in popularity of Film Noir\", \n      \"xref\": \"x\", \n      \"yref\": \"paper\"\n    }],\n    shapes= [\n        {\n            'type': 'rect',\n            'xref': 'x',\n            'yref': 'paper',\n            'x0': '1940',\n            'y0': 0,\n            'x1': '1950',\n            'y1': 1,\n            'fillcolor': '#d3d3d3',\n            'opacity': 0.5,\n            'line': {\n                'width': 0,\n            }\n        }]\n)\n\n\n\ndatapoints = [trace8]\nfig = dict(data=datapoints,layout=layout)\niplot(fig)","bdb8c6d4":"\ntemp=data['Release Year'].value_counts()\ntemp=temp.sort_index(ascending=True)\nYear=temp.index\nNumber=temp.values\ntrace0 = go.Scatter(\n    x = Year,\n    y = Number,\n    mode = 'lines',\n    name = 'Total'\n)\n\ntemp=American_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace1 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'American'\n)\n\nlayout = go.Layout(\n    title='Number of movies by year',\n    annotations= [\n    {\n      \"x\": 2007, \n      \"y\": 1, \n      \"font\": {\n        \"color\": \"rgb(255, 0, 0)\", \n        \"size\": 8\n      }, \n      \"showarrow\": True, \n      \"text\": \"2007 Financial crysis\", \n      \"xref\": \"x\", \n      \"yref\": \"paper\"\n    },\n    {\n      \"x\": 1942, \n      \"y\": 1, \n      \"font\": {\n        \"color\": \"rgb(255, 0, 0)\", \n        \"size\": 8\n      }, \n      \"showarrow\": False, \n      \"text\": \"WWII\", \n      \"xref\": \"x\", \n      \"yref\": \"paper\"\n    },\n    {\n      \"x\": 1916, \n      \"y\": 1, \n      \"font\": {\n        \"color\": \"rgb(255, 0, 0)\", \n        \"size\": 8\n      }, \n      \"showarrow\": False, \n      \"text\": \"WWI\", \n      \"xref\": \"x\", \n      \"yref\": \"paper\"\n    }],\n    shapes= [\n        {\n            'type': 'rect',\n            'xref': 'x',\n            'yref': 'paper',\n            'x0': '1939',\n            'y0': 0,\n            'x1': '1945',\n            'y1': 1,\n            'fillcolor': '#d3d3d3',\n            'opacity': 0.5,\n            'line': {\n                'width': 0,\n            }\n        },\n         {\n            'type': 'rect',\n            'xref': 'x',\n            'yref': 'paper',\n            'x0': '2007',\n            'y0': 0,\n            'x1': '2007.4',\n            'y1': 1,\n            'fillcolor': '#d3d3d3',\n            'opacity': 1,\n            'line': {\n                'width': 0,\n            }\n        },\n        {\n            'type': 'rect',\n            'xref': 'x',\n            'yref': 'paper',\n            'x0': '1914',\n            'y0': 0,\n            'x1': '1918',\n            'y1': 1,\n            'fillcolor': '#d3d3d3',\n            'opacity': 0.5,\n            'line': {\n                'width': 0,\n            }\n        }\n        ]\n)\n\nfig = go.Figure(data=[trace0,trace1], layout=layout)\niplot(fig)","08967fbc":"Indian_Pop = [449480608,458494963,467852537,477527970,487484535,497702365,508161935,518889779,529967317,541505076,553578513,566224812,579411513,593058926,607050255,621301720,635771734,650485030,665502284,680915804,696783517,713118032,729868013,746949067,764245202,781666671,799181436,816792741,834489322,852270034,870133480,888054875,906021106,924057817,942204249,960482795,978893217,997405318,1015974042,1034539214,1053050912,1071477855,1089807112,1108027848,1126135777,1144118674,1161977719,1179681239,1197146906,1214270132,1230980691,1247236029,1263065852,1278562207,1293859294,1309053980,1324171354,1339180127]\nIndian_Pop_Million = np.array(Indian_Pop)\/1000000\nIndian_GDP = [36535925031.34,38709096075.6305,41599070242.3094,47776000900.0302,55726873083.5543,58760424669.8482,45253641303.1897,49466168890.9507,52377324284.1951,57668330026.3629,61589800519.5084,66452561865.8332,70509913049.4003,84374541630.2062,98198276856.6209,97159222024.1364,101346972433.934,119866746574.408,135468782808.69,150950826964.424,183839864649.15,190909548789.769,198037712681.605,215350771428.331,209328156800.867,229410293759.071,245664654062.873,275311425331.64,292632656262.687,292093308319.642,316697337894.513,266502281094.117,284363884080.101,275570363431.902,322909902308.892,355475984177.451,387656017798.596,410320300470.283,415730874171.13,452699998386.914,462146799337.698,478965491060.771,508068952065.901,599592902016.345,699688852930.276,808901077222.839,920316529729.747,1201111768410.27,1186952757636.11,1323940295874.06,1656617073124.71,1823049927772.05,1827637859136.23,1856722121394.42,2039127446299.3,2102390808997.09,2274229710530.03,2597491162897.67\n        ]\nIndian_GDP_Million = np.array(Indian_GDP)\/1000000000\nYear = [1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\ntemp=Indian_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace3 = go.Scatter(\n    x = Year,\n    y = Indian_GDP_Million,\n    mode = 'lines',\n    name = 'Indian_GDP In Billion USD'\n)\ntrace2 = go.Scatter(\n    x = Year,\n    \n    y = Indian_Pop_Million,\n    mode = 'lines',\n    name = 'Indian_Population In Million'\n)\ntrace1 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Indian'\n)\n\ndatapoints = [trace1,trace2,trace3]\nfig = dict(data=datapoints)\niplot(fig)","60ec3010":"data['Soviet']=data.Plot.str.contains('Soviet', case=False)\nAmerican_data=data[data['Origin\/Ethnicity']=='American']\ntemp_data=American_data[data['Soviet']==True]\ntemp=temp_data['Release Year'].value_counts().sort_index(ascending=True)\ntrace1 = go.Scatter(\n    x = temp.index,\n    y = temp.values,\n    mode = 'lines',\n    name = 'Instances of Occurrence '\n)\nlayout = go.Layout(\n    title='Number of movies wit  by year',\n    annotations= [\n    {\n      \"x\": 1991, \n      \"y\": 1, \n      \"font\": {\n        \"color\": \"rgb(255, 0, 0)\", \n        \"size\": 8\n      }, \n      \"showarrow\": True, \n      \"text\": \"Dissolution of the Soviet Union\", \n      \"xref\": \"x\", \n      \"yref\": \"paper\"\n    }\n        \n    ],\n    shapes= [\n\n         {\n            'type': 'rect',\n            'xref': 'x',\n            'yref': 'paper',\n            'x0': '1991',\n            'y0': 0,\n            'x1': '1991.4',\n            'y1': 1,\n            'fillcolor': '#d3d3d3',\n            'opacity': 1,\n            'line': {\n                'width': 0,\n            }\n        }\n        \n        ]\n)\n\n\ndatapoints = [trace1]\nfig = dict(data=datapoints,layout=layout)\niplot(fig)","855687f3":"##  When was film Noir popular again ? ","700c1a22":"## Are there too many drama movies ? ","8dc874f5":"## Still under progress , any suggessions are welcome ","27d39bbe":"### Did Hollywood stop making movies with Soviet Union in it after the Dissolution ","bb0c2ad8":"## Did Financial crysis or the 2 Wars affect the Movie Industry much ?","184509d9":"###  Indian movies are increasing as there is an increasing market size for it right ? ","185bca54":"**Number Of Movies per year**"}}