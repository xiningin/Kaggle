{"cell_type":{"6347ac48":"code","f765b8e6":"code","ab9028bc":"code","bddb7358":"code","43068efb":"code","d5fd6819":"code","ebd323ba":"code","73f8e0c2":"code","f61c510c":"code","e8b6f050":"code","5b6c5834":"code","dc504304":"code","2a0dc5a9":"code","c25c2f1e":"code","98b65a2b":"code","aaadc4a2":"code","3131f7d9":"code","e5683e0e":"code","62496ce4":"markdown","6c1dba1f":"markdown","fe434e78":"markdown","db16a443":"markdown","0904cb21":"markdown","e516c38d":"markdown","cd976173":"markdown","8746cd23":"markdown","c7e9077d":"markdown","5e9a4d38":"markdown","09789b19":"markdown","7a4eb54d":"markdown"},"source":{"6347ac48":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport dask.dataframe as dd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n","f765b8e6":"train=pd.read_csv(\"..\/input\/train.csv\",nrows = 2_000_000)","ab9028bc":"train.shape","bddb7358":"train.head()","43068efb":"train.dtypes","d5fd6819":"train['pickup_datetime']=pd.to_datetime(train['pickup_datetime'],format='%Y-%m-%d %H:%M:%S UTC')","ebd323ba":"train.isna().sum()","73f8e0c2":"train = train.dropna(how = 'any', axis = 'rows')","f61c510c":"train.describe().round()\n","e8b6f050":"train = train[train.fare_amount>=0]","5b6c5834":"train=train[train.passenger_count!=208]","dc504304":"sns.lmplot(x=\"passenger_count\", y=\"fare_amount\", data=train)\nplt.show()","2a0dc5a9":"train = train.drop(((train[train['pickup_latitude']<-90])|(train[train['pickup_latitude']>90])).index, axis=0)\ntrain = train.drop(((train[train['pickup_longitude']<-180])|(train[train['pickup_longitude']>180])).index, axis=0)\ntrain = train.drop(((train[train['dropoff_latitude']<-90])|(train[train['dropoff_latitude']>90])).index, axis=0)\ntrain[train['dropoff_latitude']<-180]|train[train['dropoff_latitude']>180]","c25c2f1e":"#https:\/\/public.tableau.com\/views\/DashBoardNYCTAXI\/Dashboard1?:embed=y&:display_count=yes\n            \nfrom IPython.display import IFrame\nIFrame('https:\/\/public.tableau.com\/views\/DashBoardNYCTAXI\/Dashboard1?:embed=y&:showVizHome=no', width=1050, height=925)","98b65a2b":"from haversine import haversine\ntrain=train.reset_index(drop=True)","aaadc4a2":"train['traveldistancemiles'] = train.apply(lambda row: haversine((row['pickup_longitude'], row['pickup_latitude']), (row['dropoff_longitude'], row['dropoff_latitude']),miles=True), axis=1)","3131f7d9":"train=train[train['traveldistancemiles']< 700.0]","e5683e0e":"sns.lmplot(x=\"traveldistancemiles\", y=\"fare_amount\", data=train)\nplt.show()","62496ce4":"> ** Drop of location and pickup location of NYC taxi **","6c1dba1f":"**liner plot of traveldistancemiles vs fare_amount**  \n\n- plot is not linear so need to analyse outliers","fe434e78":"**Lets calculate distance between two gps points using haversine distance**  \ncalculated distance is in miles","db16a443":"** we filter latitude in range (-90,90) and longitude(-180,180) **","0904cb21":"**Check datatypes of train dataframe**","e516c38d":"** linear graph of passangercount vs fare_amount is not linear in realtion so only consider passanger count as important feature is not good**","cd976173":"**Check for missing value**","8746cd23":"**statstical analysis of all features**\n\n-fare_amount will be zero in case of free but never be minus. hence we drop it.  \n-in which max passanger count is 208 if we consider taxi as bus but it can not carry 208 passanger so we drop it \n","c7e9077d":"** Stay Connected for more insights**","5e9a4d38":"**traveldistancemiles is new generated feature and miles above 700.0 is some how unrealistic in taxi commute so we only take below 700.0 observations**","09789b19":"**after checking datatypes we need to convert pickup_datetime from object to datetime**","7a4eb54d":"**only 14 null \/2_000_000 so we can drop**"}}