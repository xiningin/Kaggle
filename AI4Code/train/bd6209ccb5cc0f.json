{"cell_type":{"250e46f1":"code","939bba34":"code","a5042d8b":"code","24af2102":"code","322b8a79":"code","c5efe674":"code","ee556e55":"code","22115f46":"code","ec4071b4":"code","2dabb832":"code","0d53be10":"code","0ad7113c":"code","56316179":"code","ce341d81":"markdown","d928d2bc":"markdown","7d75b14f":"markdown","4c5119bd":"markdown","8e19c301":"markdown","db705ffd":"markdown","560666cb":"markdown","5ad58ea1":"markdown","4b6a85c5":"markdown"},"source":{"250e46f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n\n\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns  \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n\n","939bba34":"path = \"\/kaggle\/input\/new-york-city-airbnb-open-data\/\"\n\nfilename_read = os.path.join(path, \"AB_NYC_2019.csv\")\ndf=pd.read_csv(filename_read, na_values=['NA','?','NaN'])\ndf = df.reindex(np.random.permutation(df.index))\ndf=df.interpolate(method='linear')\n","a5042d8b":"print(df.head(3))\nprint( list(df.columns))# show the features and label \nprint( df.shape)\ndf.dtypes\n\ndf.isnull().sum()\ndf.fillna('0',inplace=True)\n\ndf.isnull().sum()","24af2102":"#Plots to understand the data better\n\n#List of the columns containing numerical values \nnumerical = [\n   'latitude', 'longitude', 'price', 'minimum_nights', 'calculated_host_listings_count','availability_365', 'number_of_reviews', 'reviews_per_month'\n]\n#List of the columns containing categorical values \ncategorical = [\n  'neighbourhood_group', 'room_type']\n#dropping columns that are not needed for the model\ndf.drop(columns=['name', 'host_id','host_name', 'neighbourhood','id','last_review',])\ndf = df[numerical + categorical]\ndf.shape\n","322b8a79":"\n#Heatmap for the ralation between all the columns\nrelation = df.corr(method='kendall')\nsns.heatmap(relation, annot=True)\ndf.columns","c5efe674":"\n#Countplot for the count of airBnBs with the same price\nsns.set(style='whitegrid', palette=\"deep\", font_scale=1, rc={\"figure.figsize\": [8, 5]})\nsns.distplot(\n    df['price'], norm_hist=False, kde=False, bins=20, hist_kws={\"alpha\": 1}\n).set(xlabel='Price', ylabel='Count');\ndf[numerical].hist(bins=15, figsize=(15, 6), layout=(2, 4));\n#plot for room_type\nsns.countplot(df['room_type']);\n#plor for neighbourhood_group\nsns.countplot(df['neighbourhood_group']);\n\n","ee556e55":"\n#plot for the relation betweeb room_type and price\nsns.scatterplot(x=df['room_type'], y=df['price']);\n","22115f46":"#plot for the relation betweeb neighbourhood_group and price\nsns.scatterplot(x=df['neighbourhood_group'], y=df['price']);\n","ec4071b4":"#plot for the relation betweeb minimum_nights and price\nsns.scatterplot(x=df['minimum_nights'], y=df['price']);\n","2dabb832":"\n#plot for the relation betweeb availability_365 and price\nsns.scatterplot(x=df['availability_365'], y=df['price']);\n","0d53be10":"\n#More interesting plot for the relation between availability_365 and price showing both their individual plots and the relation\nsns.jointplot(x=df['availability_365'], y=df['price']);\n","0ad7113c":"\n#Map for longtitude, latitude and neighbourhood_group\nsns.scatterplot(df.longitude,df.latitude,hue=df.neighbourhood_group)\nplt.ioff()","56316179":"\n#Map for longtitude, latitude and room_type\nsns.scatterplot(df.longitude,df.latitude,hue=df.room_type)\nplt.ioff()","ce341d81":"\n\nLooking at the shape of our dataset we can see that we have 16 columns and 48895 rows. We can then check the types of the columns using \u201cdf.dtypes\u201d to\nbetter understand our dataset. I then used the Pandas'\nmethod \u201c.isnull().sum()\u201d to check if there is any missing data.\nThe results show that the columns: 'name', 'host_name', 'last_review' and 'reviews_per_month' have missing values. To cope with these missing values I used Pandas' \u201c.filna\u201d method and I changed them into zeros. Moreover, I had to check if there is any categorical data, which has to be changed to dummy variables.\n\n","d928d2bc":"Observations that can be made following these plots are that the prices for entire homes and apartments is usually between 0 and 8000, while for a shared room the maximum price is 2000 and usually between 0 and less than 4000 for a private room. Higher prices can be expected in Manhattan and Brooklyn, while for Queens the range is 0-2500 with one \u201clisting costing 10000; and less than 2000 for Bronx and Staten Islands.","7d75b14f":"Next plots show the relation between price and number of different columns:","4c5119bd":"To produce a good model, we have to clear our data and prepare it for fitting.\n\nThe dataset contains 16 columns, please see the table below for a list of each column and the information it provides:","8e19c301":"For a better understanding of the data, I decided to\nseparate the columns with categorical and numerical data into two different lists, followed by dropping the columns that are not needed for the model. Since the column \"last_review\" has more than ten thousand missing values, we have dropped this column. Other columns that we have removed are: 'name', 'host_id', 'host_name', 'neighborhood' , 'id' since they all contain values of type \"string\u201d, which unlike numerical data cannot be converted to dummy variables due to the uniqueness of every value. After making these changes our dataset has 10 columns and 48,895 rows.","db705ffd":"I then applied some plots to better understand our data. The first plot is a heatmap that shows the correlation between all the columns in the dataset. In this heatmap, I used the default colours to visualize the coefficients. We have dark purple to black for negative values and then purple to pale yellow for the positive ones. By this heatmap, we can see that our target \"price\" is positively related to the latitude but negatively related to the longitude. A positive correlation can be seen between price and the columns: \"minimum_nights\" and\n\"availability_365\", indicating that the\nprice might get higher for a listing with more available nights. On the other hand, the correlation with the columns \"calculated_host_listings_count\", \"number_of_reviews\" and \"reviews_per_month\" is negative, which means that the price might go down depending on the reviews for the apartment or the room.","560666cb":"We\u2019ve produced some more interesting plots with the scatter graphs below, that let us analyze which type of room is more abundant in each NYC borough.\n","5ad58ea1":"I am analyzing a dataset containing information about all properties in New York City (NYC) that are registered with \u2018AirBnB\u2019, a business that acts as an online marketplace for individuals to both offer and book out lodging.\n\n","4b6a85c5":"We can see that in Brooklyn we have a majority of shared rooms, in Manhattan between the 40.7 and 40.8 latitudes and around -74.0 longitude, we have more entire homes\/apartments than private rooms and almost no shared rooms. The Bronx looks like it has similar numbers of private rooms and entire homes, while Queens tends to have a number of entire homes located at -73.8 longitude and 40.7-40.8 latitude and private rooms around this area. For Staten Island, the private homes and apartments are located more between -74.1 and -74.3 longitude and 40.5 \u2013 40.6 latitude, while the private rooms are over 40.6 latitude."}}