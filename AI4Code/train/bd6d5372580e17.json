{"cell_type":{"5e682ba0":"code","b955b2df":"code","d3858cf8":"code","49b4e3d7":"code","9209164f":"code","4ed08a6a":"code","6055aad7":"code","aa1fbf8e":"code","fcb686e4":"code","545f9171":"code","8a4d0c6f":"code","83e41a16":"code","6c9ceda3":"code","a7bb94b6":"code","e9c030a9":"code","6bab71d4":"code","a9df7518":"code","457d36c4":"code","cf4bae96":"code","7cf483e0":"code","4f032c8f":"code","266ea0df":"code","c97971ae":"code","70eb0f0d":"code","49421e3e":"code","f36f53eb":"code","c6bcf999":"code","4ccfb9d9":"code","8cf0f318":"code","0f7b4c45":"code","6f0c9476":"code","d949bc48":"code","ad8e7fa7":"code","fbe6387a":"code","d3a69b49":"code","7884f2e1":"code","6fbf8730":"code","aab309ba":"code","625b2277":"code","9226ad57":"code","8b7a705e":"code","3fe875ff":"code","91bf7efd":"code","bff71974":"code","385085d0":"code","46cfc9d1":"code","0bc3b8a9":"code","9c861b8d":"code","1de40b94":"code","b42ec986":"code","da8a9cdd":"code","ad1e2070":"code","17be8ba1":"code","621c6ea3":"code","13894e0a":"code","e204dc52":"code","dfdbbe05":"markdown","bd71337d":"markdown","904f48cc":"markdown","81922a42":"markdown","ed57e724":"markdown","919f4402":"markdown","42b597de":"markdown","2ab1c15b":"markdown","bad59b22":"markdown","31bf3e65":"markdown","1c646ed7":"markdown","3948b813":"markdown","dcfe339f":"markdown","dc235e09":"markdown","a9f03499":"markdown","b946d92f":"markdown","5e3f269c":"markdown","90d6b0ec":"markdown","7a95a751":"markdown","d6ef30b1":"markdown","a455b312":"markdown","7ef952e7":"markdown","1c87bcc9":"markdown","99f2f64e":"markdown","c084aaef":"markdown","166b8585":"markdown","82a619b5":"markdown","c705a5d9":"markdown","6a1ef7a2":"markdown","609abbb3":"markdown","58fba448":"markdown","911ba98f":"markdown","43a1e8a1":"markdown","6317bf83":"markdown","0fbdbcd5":"markdown","f450f7b7":"markdown","7609e95a":"markdown","bdd54af9":"markdown","bcc03dfb":"markdown","8ab2ad85":"markdown","69c62461":"markdown","1e4ef2c3":"markdown","3e16134e":"markdown","2912bfcc":"markdown","243e8f97":"markdown","4273eedc":"markdown","612b8a76":"markdown","f8f5c19c":"markdown","b2e004c8":"markdown","f79718d4":"markdown","de9de097":"markdown","43fca332":"markdown","17941a1a":"markdown","34c5c19c":"markdown","27f19acf":"markdown","15fc97ca":"markdown","6c0e3693":"markdown","169026f4":"markdown","8b7a81a2":"markdown","fee783d7":"markdown"},"source":{"5e682ba0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats;\nimport seaborn as sns;\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.patches as mpatches   ","b955b2df":"\nbasketBallDf=pd.read_csv(\"..\/input\/basketballcsv\/Basketball.csv\");    \n","d3858cf8":"basketBallDf.shape","49b4e3d7":"basketBallDf.info()","9209164f":"basketBallDf.isna().sum()","4ed08a6a":"dupes = basketBallDf.duplicated()\nsum(dupes)","6055aad7":"basketBallDf.describe(include=\"all\")","aa1fbf8e":"\nbasketBallDf.tail()","fcb686e4":"basketBallDf.rename(columns = {'Runner-up': 'Runnerup'}, inplace = True)","545f9171":"print(\"TournamentChampion\",basketBallDf['TournamentChampion'].unique())\nprint(\"Runner-up\",basketBallDf['Runnerup'].unique())\nprint(\"TeamLaunch\",basketBallDf['TeamLaunch'].unique())\nprint(\"Team\",basketBallDf['Team'].unique())\nprint(\"Score\",basketBallDf['Score'].unique())\n","8a4d0c6f":"basketBallDf.tail(5)","83e41a16":"basketBallDfOriginal=basketBallDf.copy(deep=True); #take copy as original data set.\n\n#1.get first 4 values from team launch and create a new column\nbasketBallDf['TeamLaunch'] = basketBallDfOriginal['TeamLaunch'].str.slice(0,4);\n\n# we can fill Zero in place of missing value '-'. Because  if HighestPositionHeld is not 1 or 2  then TournamentChampion,Runner-up fields are not filling up.\nbasketBallDf=basketBallDf.replace('-',0);\n\n#replace Team with T as , to show data on plot it will easy\nbasketBallDf['Team']=basketBallDf['Team'].str.replace('Team ','T');\n\ncolumns = basketBallDf.columns.drop('Team');\n\nbasketBallDf[columns] = basketBallDf[columns].apply(pd.to_numeric, errors='coerce')\n\n","6c9ceda3":"basketBallDf.tail(5)","a7bb94b6":"basketBallDf.drop(60,inplace=True)","e9c030a9":"basketBallDf.describe(include=\"all\")","6bab71d4":"basketBallDf.skew()\n","a9df7518":"plt.figure(figsize=(10,5))\n\ncolumns = basketBallDf.columns.drop('Team');\nbasketBallDfFidt = basketBallDf[columns];\nsns.distplot(basketBallDfFidt);\nplt.show()\n","457d36c4":"plt.figure(figsize=(10,5))\nh=np.asarray(basketBallDf['Score']);\n\nfit=stats.norm.pdf(h,np.mean(h),np.std(h))\nplt.plot(h,fit,label='normal')\nplt.hist(h,bins=100,density = True,color='g', label='actual')\nplt.legend()\nplt.show()","cf4bae96":"plt.figure(figsize=(10,5))\nplt.hist(basketBallDf.Score, color='gold') ;# plots a simple histogram\nplt.axvline(basketBallDf.Score.mean(), color='m', linewidth=1)\nplt.axvline(basketBallDf.Score.median(), color='g', linestyle='dashed', linewidth=1)\nplt.axvline(basketBallDf.Score.mode()[0], color='b', linestyle='dashed', linewidth=1);","7cf483e0":"fig, ax = plt.subplots(3, 4)\n\nfig.set_figheight(5)\nfig.set_figwidth(15)\n\nsns.boxplot(x=basketBallDf['PlayedGames'],ax=ax[0][0]);\nsns.boxplot(x=basketBallDf['WonGames'],ax=ax[0][1]);\nsns.boxplot(x=basketBallDf['TournamentChampion'],ax=ax[0][2]);\nsns.boxplot(x=basketBallDf['Runnerup'],ax=ax[0][3]);\n\nsns.boxplot(x=basketBallDf['TeamLaunch'],ax=ax[1][0]);\nsns.boxplot(x=basketBallDf['HighestPositionHeld'],ax=ax[1][1]);\nsns.boxplot(x=basketBallDf['BasketScored'],ax=ax[1][2]);\nsns.boxplot(x=basketBallDf['BasketGiven'],ax=ax[1][3]);\n\nsns.boxplot(x=basketBallDf['Tournament'],ax=ax[2][0]);\nsns.boxplot(x=basketBallDf['Score'],ax=ax[2][1]);\nsns.boxplot(x=basketBallDf['DrawnGames'],ax=ax[2][2]);\nsns.boxplot(x=basketBallDf['LostGames'],ax=ax[2][3]);\n\n\n\nfig.tight_layout() \nplt.show()\n","4f032c8f":"\nsns.distplot(basketBallDf.TeamLaunch)\n","266ea0df":"basketBallDf['TeamLaunchCategory'] = (pd.qcut(basketBallDf['TeamLaunch'], 4, labels=['VeryOld', 'Old', 'New', 'VeryNew']));","c97971ae":"\nplt.figure(figsize=(25,5))\nsns.countplot(x='TeamLaunch',hue='TeamLaunchCategory',data = basketBallDf)\nplt.title(\"Team Launch count along with category  Category\",size=15)\nplt.show()","70eb0f0d":"plt.figure(figsize=(10,5))\nsns.distplot(basketBallDfFidt, hist_kws=dict(cumulative=True), kde_kws=dict(cumulative=True));\nplt.show()","49421e3e":"basketBallDf.corr()","f36f53eb":"\n  \nplt.figure(figsize=(10,5))\ncorrmat = basketBallDf.corr(method='pearson')\nsns.heatmap(corrmat, cmap=\"YlGnBu\", fmt='.2f',annot=True)\nplt.show();","c6bcf999":"plt.figure(figsize=(10,5))\npairplot=sns.pairplot(basketBallDf);\nplt.show()","4ccfb9d9":"SortedDf=basketBallDf.sort_values('Tournament',ascending=False);\n  \n  \nplt.figure(figsize=(35,10))\n# set height of bar\nbars1 = SortedDf.Tournament\nbars2 = SortedDf.TournamentChampion\nbars3 = SortedDf.Runnerup\n # set width of bar\nbarWidth =  0.2\n# Set position of bar on X axis\nr1 = np.arange(len(bars1))+barWidth\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n\n# Make the plotax\nplt.bar(r1, bars1, color='b', width=barWidth, edgecolor='white', label='Tournament')\nplt.bar(r2, bars2, color='g', width=barWidth, edgecolor='white', label='TournamentChampion')\nplt.bar(r3, bars3, color='y', width=barWidth, edgecolor='white', label='Runnerup')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Teams', fontweight='bold')\nplt.xticks([r + (barWidth) for r in range(len(bars1))], SortedDf.Team)\nplt.title(\"Tournament vs TournamentChampion vs Runnerup \",size=35);\n# Create legend & Show graphic\nplt.legend()\nplt.show()","8cf0f318":"SortedDf=basketBallDf.sort_values('PlayedGames',ascending=False);\n  \nplt.figure(figsize=(35,10))\n# set height of bar\nbars1 = SortedDf.PlayedGames\nbars2 = SortedDf.WonGames\nbars3 = SortedDf.DrawnGames\nbars4 = SortedDf.LostGames\n # set width of bar\nbarWidth =  0.2\n# Set position of bar on X axis\nr1 = np.arange(len(bars1))+barWidth\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n\n# Make the plotax\nplt.bar(r1, bars1, color='b', width=barWidth, edgecolor='white', label='PlayedGames')\nplt.bar(r2, bars2, color='g', width=barWidth, edgecolor='white', label='WonGames')\nplt.bar(r3, bars3, color='y', width=barWidth, edgecolor='white', label='DrawnGames')\nplt.bar(r4, bars4, color='r', width=barWidth, edgecolor='white', label='LostGames')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Teams', fontweight='bold')\nplt.xticks([r + (3*barWidth) for r in range(len(bars1))], SortedDf.Team)\nplt.title(\"PlayedGames vs WonGames Vs DrawnGames vs LostGames\",size=35)\n# Create legend & Show graphic\nplt.legend()\nplt.show()","0f7b4c45":"SortedDf=basketBallDf.sort_values('BasketScored',ascending=False);\n  \nplt.figure(figsize=(35,10))\n# set height of bar\nbars1 = SortedDf.BasketScored\nbars2 = SortedDf.BasketGiven\n\n # set width of bar\nbarWidth =  0.2\n# Set position of bar on X axis\nr1 = np.arange(len(bars1))+barWidth\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n\n# Make the plotax\nplt.bar(r1, bars1, color='g', width=barWidth, edgecolor='white', label='BasketScored')\nplt.bar(r2, bars2, color='r', width=barWidth, edgecolor='white', label='BasketGiven')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Teams', fontweight='bold')\nplt.xticks([r + (barWidth) for r in range(len(bars1))], SortedDf.Team)\nplt.title(\"BasketScored vs BasketGiven\",size=35)\n# Create legend & Show graphic\nplt.legend()\nplt.show()","6f0c9476":"cor_matrix = basketBallDf.corr().abs()\nupper_tri = cor_matrix.where(np.triu(np.ones(cor_matrix.shape),k=1).astype(np.bool))\n","d949bc48":"upper_tri","ad8e7fa7":"\nperformaceMatrix=basketBallDf[['Team','TeamLaunch','TeamLaunchCategory','PlayedGames','HighestPositionHeld']]\nperformaceMatrix['win']=round((basketBallDf.WonGames\/ basketBallDf.PlayedGames)*100,2)\nperformaceMatrix['Drawn']=round((basketBallDf.DrawnGames\/ basketBallDf.PlayedGames)*100,2)\nperformaceMatrix['Lost']=round((basketBallDf.LostGames\/ basketBallDf.PlayedGames)*100,2)\nperformaceMatrix['TChampionship']=round((basketBallDf.TournamentChampion\/ basketBallDf.Tournament)*100,2)\nperformaceMatrix['TRunnerup']=round((basketBallDf.Runnerup\/ basketBallDf.Tournament)*100,2)\n\nperformaceMatrix.describe()","fbe6387a":"fig, ax = plt.subplots(1, 3)\n\nfig.set_figheight(5)\nfig.set_figwidth(15)\n\nsns.distplot(performaceMatrix['win'], ax = ax[0])\nsns.distplot(performaceMatrix['Lost'], ax = ax[1])\nsns.distplot(performaceMatrix['Drawn'], ax = ax[2])\n\nax[0].set_title('Win %')\nax[1].set_title('Lost %')\nax[2].set_title('Drawn %')\nplt.show()","d3a69b49":"fig, ax = plt.subplots(2, 3)\n\nfig.set_figheight(5)\nfig.set_figwidth(15)\n\nsns.boxplot(x=performaceMatrix['win'],ax=ax[0][0]);\nsns.boxplot(x=performaceMatrix['Lost'],ax=ax[0][1]);\nsns.boxplot(x=performaceMatrix['Drawn'],ax=ax[0][2]);\nsns.boxplot(x=performaceMatrix['TChampionship'],ax=ax[1][0]);\nsns.boxplot(x=performaceMatrix['TRunnerup'],ax=ax[1][1]);\nsns.boxplot(x=performaceMatrix['TeamLaunch'],ax=ax[1][2]);\n\n\nfig.tight_layout() \nplt.show()\n","7884f2e1":"\nbasketBallDfFidt = performaceMatrix[['win','Drawn','Lost']];\n\nz = np.abs(stats.zscore(basketBallDfFidt))  # get the z-score of every value with respect to their columns\n","6fbf8730":"threshold = 3\nnp.where(z > threshold)","aab309ba":"performaceMatrix.iloc[[0,1,45,59]]","625b2277":"SortedDf=basketBallDf.sort_values('PlayedGames',ascending=False);\nfig, ax = plt.subplots(figsize=(40,10))   # setting the figure size of the plot\nax.scatter(SortedDf['Team'], SortedDf['PlayedGames'])  # scatter plot\nax.set_xlabel('Team ', fontsize=18)\nax.set_ylabel('Played Games', fontsize=18)\n\nteam=np.array(SortedDf.Team);\nbasket=np.array(SortedDf.PlayedGames);\nfor i, txt in enumerate(SortedDf.TeamLaunch):\n    plt.annotate(txt, (team[i], basket[i]))\nplt.title(\"Team vs PlayedGames Annotated with TeamLaunch\",size=35);\nplt.show()","9226ad57":"SortedDf=performaceMatrix.sort_values('win',ascending=False);\n \nplt.figure(figsize=(35,10));\n# set height of bar\nbars1 = SortedDf.win\nbars2 = SortedDf.Drawn\nbars3 = SortedDf.Lost\n # set width of bar\nbarWidth =  0.2\n# Set position of bar on X axis\nr1 = np.arange(len(bars1))+barWidth\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n# Make the plotax\nplt.bar(r1, bars1, color='g', width=barWidth, edgecolor='white', label='Win%')\nplt.bar(r2, bars2, color='y', width=barWidth, edgecolor='white', label='Drawn%')\nplt.bar(r3, bars3, color='r', width=barWidth, edgecolor='white', label='Lost%')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Teams', fontweight='bold')\nplt.xticks([r + (3*barWidth) for r in range(len(bars1))], SortedDf.Team)\nplt.title(\"Win% Vs Drawn% Vs Lost%\",size=35)\n\n\n    \n# Create legend & Show graphic\nplt.legend()\nplt.show()","8b7a705e":"gamesPlayed=basketBallDf.sort_values('PlayedGames',ascending=False).groupby('TeamLaunchCategory')['PlayedGames'].sum().reset_index();\n\nplt.figure(figsize=(15,5))\nsns.barplot(x ='TeamLaunchCategory', y='PlayedGames' ,data = gamesPlayed)\nplt.title(\"PlayedGames across Team launch category\",size=15)\nplt.show()","3fe875ff":"SortedDf=(performaceMatrix.sort_values(['TeamLaunch'],ascending=[True]))\n\nplt.figure(figsize=(30,5))\nsns.pointplot(x='Team',y='PlayedGames',hue='TeamLaunchCategory' ,data=SortedDf);\nplt.title(\"Played games across teams in the order of team launch \")\nplt.show()","91bf7efd":"SortedDf=(performaceMatrix.sort_values(['TeamLaunch'],ascending=[True]))\nfig, ax =plt.subplots(6,figsize=(30, 30), sharey=True)\n\nsns.pointplot(x='Team',y='win',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[0]);\nsns.pointplot(x='Team',y='Drawn',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[1]);\nsns.pointplot(x='Team',y='Lost',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[2]);\nsns.pointplot(x='Team',y='TChampionship',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[3]);\nsns.pointplot(x='Team',y='TRunnerup',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[4]);\nsns.pointplot(x='Team',y='HighestPositionHeld',hue='TeamLaunchCategory' ,data=SortedDf,ax=ax[5]);\n\n\nfig.tight_layout()\nplt.subplots_adjust(hspace=0.3)\nax[0].set_title(\"Performance report of teams in playing games\\n win%\",size='30')\nax[1].set_title(\"Drawn %\",size='30')\nax[2].set_title(\"Lost %\",size='30')\nax[3].set_title(\"Tournment Championship %\",size='30')\nax[4].set_title(\"Tournment Runnerup  %\",size='30')\nax[5].set_title(\"HighestPositionHeld\",size='30')","bff71974":"groupLostMean=performaceMatrix.groupby(['TeamLaunchCategory'])['Lost'].mean().reset_index();\ngroupDrawnMean=performaceMatrix.groupby(['TeamLaunchCategory'])['Drawn'].mean().reset_index();\ngroupWinMean=performaceMatrix.groupby(['TeamLaunchCategory'])['win'].mean().reset_index();\n\nfig, ax =plt.subplots((3),figsize=(10, 10), sharey=True)\n\nsns.pointplot(x=groupWinMean.TeamLaunchCategory,y=groupWinMean.win,data=groupWinMean,ax=ax[0]);\nsns.pointplot(x=groupDrawnMean.TeamLaunchCategory,y=groupDrawnMean.Drawn,data=groupDrawnMean,ax=ax[1]);\nsns.pointplot(x=groupLostMean.TeamLaunchCategory,y=groupLostMean.Lost,data=groupLostMean,ax=ax[2]);\n\nfig.tight_layout()\nplt.subplots_adjust(hspace=0.3)\nax[0].set_title(\" Analyze Team launch categories \\n Mean win%\",size='20')\nax[1].set_title(\"Mean Drawn %\",size='20')\nax[2].set_title(\"Mean Lost %\",size='20')\nplt.show()","385085d0":"performaceMatrix.sort_values(['win'],ascending=[False]).head(10)","46cfc9d1":"performaceMatrix[(performaceMatrix.win==performaceMatrix.win.max()) & (performaceMatrix.Lost==performaceMatrix.Lost.min() )]","0bc3b8a9":"performaceMatrix[performaceMatrix.TeamLaunchCategory != 'VeryOld'].sort_values(['win'],ascending=[False]).head(10)","9c861b8d":"basketBallDf[(basketBallDf.PlayedGames==basketBallDf.PlayedGames.max())]","1de40b94":"basketBallDf[(basketBallDf.PlayedGames==basketBallDf.PlayedGames.nlargest(4)[3])]\n","b42ec986":"(basketBallDf.sort_values(['PlayedGames'],ascending=[True])).head(3)","da8a9cdd":"(basketBallDf.sort_values(['HighestPositionHeld'],ascending=[False])).head(1)","ad1e2070":"sorted=performaceMatrix.loc[performaceMatrix['TeamLaunchCategory']=='VeryOld'].sort_values(['win'],ascending=[True])\nsorted.head(5)","17be8ba1":"\nperformaceMatrix.sort_values(['Drawn'],ascending=[False]).head(1)","621c6ea3":"sorted=(basketBallDf.sort_values(['PlayedGames'],ascending=[True]))\n\nsorted[(sorted.TeamLaunch==sorted.TeamLaunch.min())].head(2)","13894e0a":"teamsFilters=['T21','T39','T46','T19','T20','T11','T9','T5','T3','T4','T6','T14','T7','T8','T10','T18']\n\nbetterTeams=pd.DataFrame(columns=performaceMatrix.columns);\n\nfor i in teamsFilters:\n       if i in performaceMatrix.Team.values:\n            betterTeams = pd.concat([betterTeams,performaceMatrix[ performaceMatrix.Team==i]], ignore_index=True)\n           \n        \nbetterTeams.sort_values('win',ascending=False)\n\n","e204dc52":"betterTeams[betterTeams.TeamLaunchCategory!='VeryOld']","dfdbbe05":"### T61 has no valida data - It participatd in 1 tournments and got 9 th position. No information about games or baskets. Lets drop it.","bd71337d":"check for duplicates in data ","904f48cc":"### Data cleaning is completed. Data set will look like below","81922a42":"### PlayedGames vs WonGames VsDrawnGames vs LostGames","ed57e724":"### Data Cleaning","919f4402":"- <font color='blue' size=4> By giving more practice we can turn this drawn to win percentage <\/font>","42b597de":"### 2. Best performed Team in Given data set ","2ab1c15b":" <font color='blue' size=4>- Lets categorize data set based on team launch<\/font>","bad59b22":"The data distribution  can be shown in graph as below .","31bf3e65":"- <font color='Blue' size=4> As mentioned above given data set is RightSkewed or Postively Skewed .<\/font>","1c646ed7":"Most of the values are showing not a number issue , so lets check for data, there would be some missing values.","3948b813":"### 7. Team with Most Drawn games","dcfe339f":"<font color='blue' size=4> From above graphs we can analyze the teams which has more winning propbability. <\/br> 1. T21,T39,t46 are from very new category .  As stated above T21  is the top 6th best team ingiven data set . and best team in Very New Team category. <\/br> 2.  T19,T20 are from New category. <\/br> 3. T11, T9,T15 are from Old category. <\/br> 4.  T1, T2 are outliers in given data set. T3,T4,T5,T6,T14,T18,T7,T8,T10,T18 <\/font>","dc235e09":"### <font color='blue' size=4> Recommended Teams for company X, based on all above analysis <\/font>","a9f03499":"### 4. Teams with High Targets","b946d92f":"### 4.Teams with Low Targets ","5e3f269c":"## Performance Matrix","90d6b0ec":"<font color='blue' size=4> 1.A bulk of the observations lie within the first bin out of 10 bins(almost 36 teams out of 61). Most of them got the score betwen 0 to 500<\/br>\n2.there are very few teams got more than 4000  approximatel 3 teams, generally we take them as outliers.<\/br>\n3.We can see from the above figure that the mode and the mean are not very close to each other and that the median is lower than both.<\/br>\n4.There are few teams whose score is more than 1500.<\/br>\n5.We dont have any team whose score is 3500 to 4000<\/font>","7a95a751":"### Check the Information about the data and the datatypes of each respective attributes.","d6ef30b1":"## <b>Step 2: Perform detailed statistical analysis and EDA<\/b>","a455b312":"## Bivariate Anyalysis","7ef952e7":"## Multivariate Analysis","1c87bcc9":"<font size=4 color='Blue'> 1.average drawn across team launch category  is high for very new teams comapred to old teams so , by giving some more practise this drawn can be converted to success<\/font> <\/br>\n<font size=4 color='Blue'>2. average Lost across team launch category  is low  for very new teams comapred  to other teams so , very new teams are better compared old\/ new teams.<\/font><\/br>\n<font size=4 color='Blue'>3. average success across team launch category  is high for very old teams and gradully decreasing for newst teams<\/font>","99f2f64e":"above teams are out liears , so we look for seond max target teams","c084aaef":"- <font color='blue' size=4> As Tournment Chamion and Won games has perfect poistive correlation, all the observation from Tournment graphs are same withPlayed Games .\n- Team3 showing best retults after T1,T2. <\/font>","166b8585":"### 6. Old Teams with less performace.","82a619b5":"### 3. Top 10 winning teams in Given data set excluding very old teams","c705a5d9":"<b>Cumulative Distribution<\/b>","6a1ef7a2":"- <font color='blue' size=4> We observe that  T1 to T8 teams participated in more tournments . Eventhough T7 played many tournment it did nt come first 2 places any time.\n- T1 ,T2 and T5 played same number of tournaments but  results are good as T1 >T2>T5\n- T11 appered for less tournments but it showed good results compared to few other teams.\n- T20, and T21 are participated in less torenments but they stood in second places in few tournments.\n- There are many teams played in tournments but didnt come in first two places.<\/font>\n","609abbb3":"## <b>Step 1: Read the data set, clean the data and prepare final dataset to be used for analysis. <\/b>","58fba448":"- <font color='blue' size=4> most of the teams BaskedGiven > Baskets scored. \n- Only T1,T2,T5,T3,T4,T6, T21 has more baskets scored compared to Baskets given. T8 has equal proportion.\n<\/font>","911ba98f":"## Finding Outliers using Z score","43a1e8a1":"<font color='blue' size=4 > \n- There are old teams who played very less games T52 ,T54. <\/br>\n- T25 ,T37, T44 are quite new teams but they participated in good amount of games compared to few old teams.<\/br>\n- T21 is the team is from 1998 year but good number of  games played and it is almost at midian of the dtaa points.\n<\/font>","6317bf83":"### Tournment Details across teams . ","0fbdbcd5":"No Null values in data","f450f7b7":"Correlation Map","7609e95a":"### 8. Old teams with low targets\n","bdd54af9":"## Univariate Analysis","bcc03dfb":"## Improvements or suggestions to the association management on quality,quantity, variety, velocity, veracity etc. on the data points collected by the association to perform a better data analysis in future","8ab2ad85":"out of T1, T2, T5 . Performance order of team is T1>T2>T5","69c62461":"<b>Note:<\/b> <font color='Blue' size=4> Positively skewed: Most frequent values are low and tail is towards high values.<\/font>","1e4ef2c3":"<font color='blue' size=4> please find below suggestions for data point collection \n\n1. Highly correlated : The columns in the data set are highly correlated . It says that we have duplicancy of columns. So to measure performace of a team other than this duplicate columns, please check for any other points.\n    WonGames = Basketsscored = Score\n2. Quality:  We have incomplete team information. For example Team61. This Team dont have any information about how many games it played or about baskets .\n But it has highest poistion held. \n\n3. Variety: To analyze a bastball team other then the given information , more subject related data can be added . Example: HighestPositionHeld column . Dont have target value to analyze team. \n\n4. volume: Data set is comparing 61 teams. Having only team information would not be enough. We can increase the volumn of data set by adding players information so that we can analyze current team players and predidct which team will have more winning probability.\n\n5. Missing information: We have Team Launch information , it has the data which shows that team is very old team. But dont know what kind of players we have in that team now  to analyze performance about the team. \n\n6. OutDated information check:  We have few old teams Team54,Team52 who played very less games , it is even less than new teams. So is this team still active and participating in any tournmaments ? \n\n7. Veracity: Our data set is small , it has  out liers and missing information . With these ,  Eventually it effects the reliability of its results. \n\n8. Team wise data prediction may vary because it will be based on players . So vbetter we gather information about teams and its players too.\n\n9. Incomplete data: The data in HighestPositionHeld column is not complete , it is just showing the highest position but dont know how mant times it got that poistion and all \n\n10. We can add more identifiers to data about team .more identifiers will help us to analyze teams accurately.\n\n <\/font >\n\n\n\n","3e16134e":"There are no duplicates","2912bfcc":"- <font color='blue' size=4> Score,BasketScored,WonGames So we see same kind of box plot result.  There are  outliers. \n- TournamentChampion and RunnerUP  dont have box at all because as we seen above in describe() 75% data has value as Zero. Remaining are outliers.\n- if we see IQR of columns, Most of the columns has more values are scattered between median  and Upper Quartile . So there is right skeweness in  data <\/font>","243e8f97":"### As, Some of the older teams are already in contract with competitors. We focus on other teams.","4273eedc":"### Import Laibraries","612b8a76":"### <font color='Blue' > - Every team has different targets so to compare team performance preparing matrix based on indevidual team its own target and result <\/br> - We have perfect positivily corelated fields lets drop them to do easy analysis <\/font>\n","f8f5c19c":"### 1. Top 10  teams in the given list with Hightest winning percentage","b2e004c8":"Graphical Representation above matrix.","f79718d4":"Correlation among all columns in data set","de9de097":" - <font color='Blue' size=4>There is a special character in data i.e '_'. We should eliminate this missing value.<\/br> \n -  TeamLaunch year need not be interval field we can take by default first year as Team Launch year to make data simple.<\/br>\n - Every row in data represents a team. We have 61 teams to analyze . \n -  Here column 'Team' can be considered as category bacause every unique has a single row representaion . For simple EDA process Team1 cab be reanamed to 1 \n -  When we check data types of most of the columns are Objects , but values in integers so we can do type conversion. <\/br>\n -  Column name Runner-Up  has special character , for simplicity rename it.<\/font>","43fca332":"- <font color='Blue' size=4> Team Launch : Old team in give data set is 1929. and new team is from 2017 .  \n- Score: There is a huge difference between Q3 to Max value , there is a chance of outliers. Same applied for PLayedGames and Basket Scored. Standard deviation is high.\n- TournamentChampion and Runnerup : these fields has 75% data as Zero . Here also we have some outliers.","17941a1a":"<font color='blue' size=4>  - Outliers are T1 and T2  with more win % , far from other data points .<\/br> - T46 team has more drawn percentage far from data points. <\/br> - T60 team has more lost percentage far from data points.<\/font>\n","34c5c19c":"- We can see  difference in the input data for TeamLaunch ,TournamentChampion,Runner-up columns lets inspect data in these 3 columns.","27f19acf":"### Read data set","15fc97ca":"Check for null values","6c0e3693":"### shape of the data","169026f4":"\n- <font color='blue' size=4>Score,WonGames ,Baskets Scored correlation value is 1.  So its a  perfect positive correlation. \n- PlayedGames and Tournmanet correlation value is 1.  So its a  perfect positive correlation.\n- Other than TeamLaunch and HighestPositionHeld remaining all fields are positively correlated.\n- TeamLaunch is negatively correlated means for old teams given values are more and for new teams its low.\n- PlayedGames and Drawn Games  correlation is 0.99 , it means most of the games are Drawn compared to win\/lost .\n- TournmentChampion and Runnerup are the counts . So we  see  30% to 70% correlation with  other fields.<\/font>\n-  <font color='blue' size=6> Highly Correlated  data set  <\/font>\n\n\n","8b7a81a2":"Histogram for checking the Skewness","fee783d7":"### 5. Teams that has high rank in position."}}