{"cell_type":{"0e299fd4":"code","eb82b795":"code","b16c0337":"code","107fff63":"markdown"},"source":{"0e299fd4":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport lightgbm as lgb\nimport random\nimport os\nimport numpy as np\n\n# Function to fix some seeds\ndef seed_everything(seed):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n\nSEED = 42\nseed_everything(SEED)\n\n# Read train data\ndf_train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-dec-2021\/train.csv\")\ndf_train.drop([\"Id\"], axis=1, inplace=True)\n\n# Only sample a smaller fraction of the train data for speed purposes\ndf_train = df_train.sample(frac=0.25, random_state=SEED)","eb82b795":"y = df_train[\"Cover_Type\"]\nX = df_train.drop([\"Cover_Type\"], axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=SEED)","b16c0337":"params = {\n    \"objective\": \"multiclass\",\n    \"num_classes\": 7,\n    \"random_state\": SEED,\n    \"deterministic\": True,\n}\n\nfor _ in range(3):\n    seed_everything(SEED)\n    model = lgb.LGBMClassifier(**params)\n    model.fit(X_train, y_train)\n    y_test_pred = model.predict(X_test)\n    print(accuracy_score(y_test, y_test_pred))","107fff63":"##### Fixing the problem quoted by @delai50"}}