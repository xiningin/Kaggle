{"cell_type":{"6bcce93e":"code","f1e66ebe":"code","b7c212c2":"code","8c853405":"code","aa592463":"code","fb6fffd9":"code","12971f8e":"code","18705fe9":"code","37c4ed3f":"code","476d818e":"code","73f02fc1":"code","6beb0b51":"code","2655b6d9":"code","1e484b6e":"code","05434692":"code","f7a37b08":"code","1895e595":"code","5f491e1e":"code","f48623b5":"code","750ae79f":"code","ea884a24":"code","ec715d21":"code","786391c3":"code","5f68ec49":"code","fe456838":"code","68f70cbf":"code","477f30d0":"code","d95467af":"code","d29f00f8":"code","c30f8874":"markdown","b4ae9712":"markdown","62957a3e":"markdown","9cde21da":"markdown","5f4b3aae":"markdown","8cf89e2e":"markdown","384d0270":"markdown","52e7e838":"markdown","47fbea2c":"markdown","bcad2ed1":"markdown","41d471ac":"markdown","bcb21632":"markdown","527d94c4":"markdown","f2af44e3":"markdown","1cab4d9d":"markdown","98f1bccd":"markdown","07ad70d8":"markdown","12580676":"markdown","8201f354":"markdown","0339e19a":"markdown","339ea9b4":"markdown","20c6dafb":"markdown","744f01d4":"markdown","4d2b2177":"markdown","589d1354":"markdown","1488a49e":"markdown","c2468282":"markdown","4a66dad5":"markdown","7cfdbd51":"markdown","c01fa32d":"markdown","d043b67f":"markdown","c32e9177":"markdown","06e38e88":"markdown","5432e5f4":"markdown","0335ef9b":"markdown","f7f4ea78":"markdown","f1a171df":"markdown","83b62244":"markdown","8e0bf0e8":"markdown"},"source":{"6bcce93e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f1e66ebe":"import sys\nimport warnings\n\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")","b7c212c2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport matplotlib\nplt.style.use('ggplot')\nimport warnings\nimport itertools\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'","8c853405":"df = pd.read_csv('\/kaggle\/input\/accident_UK.csv')\ndf.head()","aa592463":"df.info()","fb6fffd9":"df['Date'] = pd.to_datetime(df['Date'])\ndf.head()","12971f8e":"df = df.sort_values(by=['Date'])\ndf.head()","18705fe9":"df.info()","37c4ed3f":"accident = df.set_index('Date')\naccident.index","476d818e":"y = accident['Total_Accident'].resample('MS').mean()\ny.head()","73f02fc1":"y.plot(figsize=(15, 6))\nplt.show()","6beb0b51":"from pylab import rcParams\nimport statsmodels.api as sm\nrcParams['figure.figsize'] = 16, 10\ndecomposition = sm.tsa.seasonal_decompose(y, model='additive')\nfig = decomposition.plot()\nplt.show()","2655b6d9":"p = d = q = range(0, 2)\npdq = list(itertools.product(p, d, q))\nseasonal_pdq = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]\nprint('Examples of parameter combinations for Seasonal ARIMA...')\nprint('SARIMAX: {} x {}'.format(pdq[1], seasonal_pdq[1]))\nprint('SARIMAX: {} x {}'.format(pdq[1], seasonal_pdq[2]))\nprint('SARIMAX: {} x {}'.format(pdq[2], seasonal_pdq[3]))\nprint('SARIMAX: {} x {}'.format(pdq[2], seasonal_pdq[4]))","1e484b6e":"for param in pdq:\n    for param_seasonal in seasonal_pdq:\n        try:\n            mod = sm.tsa.statespace.SARIMAX(y,\n                                            order=param,\n                                            seasonal_order=param_seasonal,\n                                            enforce_invertibility=False)\n\n            results = mod.fit()\n            \n            print('ARIMA{}x{}12 - AIC:{}'.format(param, param_seasonal, results.aic))\n        except:\n            continue","05434692":"mod = sm.tsa.statespace.SARIMAX(y,\n                                order=(1, 1, 1),\n                                seasonal_order=(1, 1, 1, 12),\n                                enforce_invertibility=False)\nresults = mod.fit()\nprint(results.summary().tables[1])","f7a37b08":"results.plot_diagnostics()\nplt.show()","1895e595":"pred = results.get_prediction(start=pd.to_datetime('2017-01-01'), dynamic=False)\npred_ci = pred.conf_int()\nax = y['2014':].plot(label='observed')\npred.predicted_mean.plot(ax=ax, label='One-step ahead Forecast', alpha=.7, figsize=(14, 7))\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.2)\nax.set_xlabel('Date')\nax.set_ylabel('Furniture Sales')\nplt.legend()\nplt.show()","5f491e1e":"y_forecasted = pred.predicted_mean\ny_truth = y['2017-01-01':]\nmse = ((y_forecasted - y_truth) ** 2).mean()\nprint('The Mean Squared Error of our forecasts is {}'.format(round(mse, 2)))","f48623b5":"pred_uc = results.get_forecast(steps=100)\npred_ci = pred_uc.conf_int()\nax = y.plot(label='observed', figsize=(14, 7))\npred_uc.predicted_mean.plot(ax=ax, label='Forecast')\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.25)\nax.set_xlabel('Date')\nax.set_ylabel('Furniture Sales')\nplt.legend()\nplt.show()","750ae79f":"df = df.sort_values(by=['Date'])\ndf.head()","ea884a24":"df = df.rename(columns={'Date': 'ds',\n                        'Total_Accident': 'y'})\ndf.head()","ec715d21":"ax = df.set_index('ds').plot(figsize=(15, 8))\nax.set_ylabel('Total Accident')\nax.set_xlabel('Date')\n\nplt.show()","786391c3":"from fbprophet import Prophet\nmy_model = Prophet(interval_width=0.95)\nmy_model.fit(df)","5f68ec49":"future_dates = my_model.make_future_dataframe(periods=36, freq='MS')\nfuture_dates.tail()","fe456838":"forecast = my_model.predict(future_dates)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","68f70cbf":"pd.plotting.register_matplotlib_converters()\nmy_model.plot(forecast, uncertainty=True)","477f30d0":"my_model.plot_components(forecast)","d95467af":"from fbprophet.diagnostics import cross_validation\ndf_cv = cross_validation(my_model, initial='730 days', period='180 days', horizon = '365 days')\ndf_cv.head()","d29f00f8":"from fbprophet.diagnostics import performance_metrics\ndf_p = performance_metrics(df_cv)\ndf_p.head()","c30f8874":"Let's sort the values by Date","b4ae9712":"![original-min.png](attachment:original-min.png)","62957a3e":"# **Component of Time Series**","9cde21da":"let\u2019s get our environment ready with the libraries we\u2019ll need and then import the data!","5f4b3aae":"![giphy-min.gif](attachment:giphy-min.gif)","8cf89e2e":"![7807104_1578230927_time_analysis_tittle-banner%20%281%29-min.jpg](attachment:7807104_1578230927_time_analysis_tittle-banner%20%281%29-min.jpg)","384d0270":"Let's visualise the number of accident in each year","52e7e838":"Let's create a graph of our actuals and forecast","47fbea2c":"**Evaluation of Forecasts**","bcad2ed1":"# **What is Prophet ?**","41d471ac":"Let's extract the average number of accident in each month","bcb21632":"Let's find out the MSE to see the accuracy of our model. \nThe mean squared error (MSE) is largely used as a metric to determine the performance of an algorithm. In addition, MSE is the average of the square of the difference between the observed and predicted values of a variable.","527d94c4":"Time Series is a set of observations on the values that a variable takes at different times. For example: Sales Trend, Stock Market Price, Weather Forecast etc.\nTime Series is using to predict the future values based on the previous obseved value.","f2af44e3":"plot_components provides us a graph of our trend and seasonality","1cab4d9d":"Benefit of Prophet Approach:\n* Uneven time interval between data is not a problem\n* Day with NA is not a problem\n* Seasonality with multiple periods (Week & Year) is handled by default\n* Works well by default setting, parameters are easily interpretable","98f1bccd":"# **Please Upvote ! If you find this notebook is useful!**\n\n# Many Thanks !","07ad70d8":"We need to always run model diagnostics to investigate any unusual behavior.","12580676":"Check out the Data","8201f354":"Convert the Date column to Date type","0339e19a":"To create a forecast with our model we need to create some futue dates. Prophet provides us with a helper function called make_future_dataframe. We pass in the number of future periods and frequency. Above we created a forecast for the next 36 month or 3 years.","339ea9b4":"Set the Date for index","20c6dafb":"The above output suggests that SARIMAX (1, 1, 1)x(1, 1, 1, 12) yields the lowest AIC value of 289.92. Therefore we should consider this to be optimal option.","744f01d4":"Prophet requires the variable names in the time series to be:\n* y \u2013 Target\n* ds \u2013 Datetime\n\nSo, the next step is to convert the dataframe according to the above specifications","4d2b2177":"This step is parameter Selection for our ARIMA Time Series Model. Our goal here is to use a \u201cgrid search\u201d to find the optimal set of parameters that yields the best performance for our model.","589d1354":"**Fitting the Prophet model**\n\nset the uncertainty interval to 95% (the Prophet default is 80%)","1488a49e":"# **What is ARIMA model?**","c2468282":"* Trend : Tend may show the growth or decline in a time series over a long period. This is the type of tendency which continues to persist for a very long period. Prices and export and import data, for example, reflect obviously increasing tendencies over time.\n* Seasonality : These are short term movements occurring in data due to seasonal factors. The short term is generally considered as a period in which changes occur in a time series with variations in weather or festivities\n* Irregularity : These are sudden changes occurring in a time series which are unlikely to be repeated. They are components of a time series which cannot be explained by trends, seasonal or cyclic movements. These variations are sometimes called residual or random components.\n* Cyclic : These are long term oscillations occurring in a time series. These oscillations are mostly observed in economics data and the periods of such oscillations are generally extended from five to twelve years or more. These oscillations are associated with the well known business cycles. \n\n","4a66dad5":"Sorting the data by Date","7cfdbd51":"**Fitting the ARIMA model**","c01fa32d":"![measuring-forecast-accuracy-banner-2272px-min.png](attachment:measuring-forecast-accuracy-banner-2272px-min.png)","d043b67f":"Let's visualise the data using time-series decomposition that allows us to decompose our time series into three distinct components: trend, seasonality, and noise.","c32e9177":"In odrer to understand the accuracy of our forecasts, we compare predicted number of accident to real number of accidents of the time series, and we set forecasts to start at 2017\u201301\u201301 to the end of the data.","06e38e88":"As we can see in the below table. yhat is our forcasted value","5432e5f4":"Prophet is an open source Time Series Forecasting Algorithm from Facebook and it designed for ease of use without expert knowledge on Time Series Forecasting or Statistics. Time Series Forecasting builds model by finding a best smooth line which can be represented as sum of the following component:\n* Overal Growth Trend\n* early Seasonality\n* Weekly Seasonality \n* Holiday Affects","0335ef9b":"As we can see in the below graph the number of road accident in UK will be declined in next years","f7f4ea78":"# **What is Time Series?**","f1a171df":"**Visualising Forecasts**","83b62244":"Let\u2019s visualise the number of road accident for each day","8e0bf0e8":"ARIMA stands for Auto Regressive Integrated Moving Average. There are seasonal and Non-seasonal ARIMA models that can be used for forecasting\nAn ARIMA model is characterized by 3 terms: p, d, q\nwhere p is the order of the AR term, q is the order of the MA term and d is the number of differencing required to make the time series stationary.\nIf a time series, has seasonal patterns, then you need to add seasonal terms and it becomes SARIMA, short for \u2018Seasonal ARIMA\u2019. More on that once we finish ARIMA."}}