{"cell_type":{"038624d2":"code","7d4bdf37":"code","bb43b419":"code","3f85a2f6":"code","959042d0":"code","69a13f1a":"code","cc9adc38":"code","a6084fcd":"code","cd677d1c":"code","b2667b15":"code","7fdaabe5":"code","b57c2a3d":"code","61e67870":"code","f9cee44b":"code","546cdf1b":"code","2e155c49":"code","8987c663":"code","80de493b":"code","585b6757":"code","d5405bec":"code","116583b0":"code","695c482e":"code","dca98e70":"code","109eef6b":"code","95dc3a1e":"code","e1bfa7f9":"code","b739c720":"code","f3a89788":"code","a9dd8d40":"code","a3cd2a20":"code","6cd17a32":"code","d3c81bad":"code","ae10388e":"code","da3f081c":"code","08a75c78":"code","bf6ae8dc":"code","586112fd":"code","382340b1":"code","0c4c4efa":"code","a37b20be":"code","1ef01ef4":"code","0db7b011":"code","605fdacf":"code","9e2a7d2f":"markdown","8fc8fe15":"markdown","abbf0915":"markdown","5b043327":"markdown","b41a202b":"markdown","06190e30":"markdown","f92dc3b0":"markdown","6227508f":"markdown","3006203f":"markdown","17342ae9":"markdown","0e8a2bee":"markdown","f86525fd":"markdown","0c07a594":"markdown","60445e09":"markdown","b480587e":"markdown","88d758ec":"markdown","43ab1f4e":"markdown","0a5fd981":"markdown","07eb0f1e":"markdown","7618f048":"markdown","fc40158c":"markdown","7455be10":"markdown","1d9b7a49":"markdown","c93e7e3c":"markdown","7d378058":"markdown","8db6c348":"markdown","723629e7":"markdown"},"source":{"038624d2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import VotingClassifier\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.preprocessing import PolynomialFeatures\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\")","7d4bdf37":"data=pd.read_csv('..\/input\/personal-loan-modeling\/Bank_Personal_Loan_Modelling.csv')\ndata","bb43b419":"data.drop(['ID', 'ZIP Code'], axis = 1, inplace=True)\ndata","3f85a2f6":"data.describe()","959042d0":"data['Experience'][data['Experience'] < 0] = data['Experience'].mean()\ndata.describe()","69a13f1a":"data['ann_CV'] = data['CCAvg'] * 12\ndata","cc9adc38":"data.drop('CCAvg', axis = 1, inplace = True)\ndata","a6084fcd":"fig, ax = plt.subplots(figsize = (10, 10))\nsns.heatmap(data.corr(),cmap='BuPu',cbar=True,annot=True,linewidths=0.5,ax=ax)\nplt.show","cd677d1c":"sns.scatterplot(x = 'Age', y = 'Income', data = data, hue = 'Personal Loan')","b2667b15":"sns.scatterplot(x = 'Age', y = 'ann_CV', data = data, hue = 'Personal Loan')","7fdaabe5":"sns.countplot(x='Experience', hue = 'Personal Loan', data = data)","b57c2a3d":"sns.countplot(x='Family', hue = 'Personal Loan', data = data)","61e67870":"sns.countplot(x='CreditCard', hue = 'Personal Loan', data = data)","f9cee44b":"sns.countplot(x='Securities Account', hue = 'Personal Loan', data = data)","546cdf1b":"sns.countplot(x='CD Account', hue = 'Personal Loan', data = data)","2e155c49":"sns.catplot(x='Securities Account', y = 'CD Account', data = data, kind = 'bar', hue = 'Personal Loan' )","8987c663":"sns.catplot(x='CreditCard', y = 'CD Account', data = data, kind = 'bar', hue = 'Personal Loan' )","80de493b":"X = data.drop('Personal Loan', axis = 1).values\ny = data['Personal Loan'].values.reshape((-1, 1))\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1)\ny_test","585b6757":"logistic_model=LogisticRegression(solver='liblinear')","d5405bec":"logistic_model.fit(X_train, y_train)\ny_pred = logistic_model.predict(X_test)\nprint(logistic_model.score(X_train,y_train)*100)\nprint(accuracy_score(y_test, y_pred)*100)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","116583b0":"k_class = KNeighborsClassifier (n_neighbors=5)","695c482e":"k_class.fit(X_train,y_train)\ny_pred = k_class.predict(X_test)\nprint(k_class.score(X_train,y_train)*100)\nprint(accuracy_score(y_test, y_pred)*100)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","dca98e70":"tree_class = DecisionTreeClassifier(criterion='gini', max_depth=4, splitter='best', random_state=33)","109eef6b":"tree_class.fit(X_train, y_train)\ny_pred = tree_class.predict(X_test)\nprint(tree_class.score(X_train,y_train)*100)\nprint(accuracy_score(y_test, y_pred)*100)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","95dc3a1e":"Random_class = RandomForestClassifier(n_estimators=400, criterion='gini', max_depth=2, random_state = 33)","e1bfa7f9":"Random_class.fit(X_train, y_train)\ny_pred = Random_class.predict(X_test)\nprint(Random_class.score(X_train,y_train)*100)\nprint(accuracy_score(y_test, y_pred)*100)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","b739c720":"Voting_class = VotingClassifier(estimators=[('tree_class', tree_class), ('logistig_model', logistic_model), ('k_class', k_class), ('Random_class', Random_class)], \n                                voting='hard')","f3a89788":"Voting_class.fit(X_train, y_train)\ny_pred = Voting_class.predict(X_test)\nprint(Voting_class.score(X_train,y_train)*100)\nprint(accuracy_score(y_test, y_pred)*100)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","a9dd8d40":"from imblearn.over_sampling import SMOTE\nsm = SMOTE(random_state=1)\nX_sm , y_sm = sm.fit_resample(X,y)","a3cd2a20":"poly_feat = PolynomialFeatures(degree = 3)\nX_sm = poly_feat.fit_transform(X_sm)","6cd17a32":"X_sm_train, X_sm_test, y_sm_train, y_sm_test = train_test_split(X_sm, y_sm, test_size=0.30, random_state=1)\ny_sm_train= y_sm_train.reshape(-1,1)\ny_sm_test = y_sm_test.reshape(-1,1)","d3c81bad":"logistic_model_2=LogisticRegression(solver='liblinear')","ae10388e":"logistic_model_2.fit(X_sm_train, y_sm_train)\ny_pred = logistic_model_2.predict(X_sm_test)\nprint(logistic_model_2.score(X_sm_train,y_sm_train)*100)\nprint(accuracy_score(y_sm_test, y_pred)*100)\nprint(confusion_matrix(y_sm_test, y_pred))\nprint(classification_report(y_sm_test, y_pred))","da3f081c":"X_sm_K , y_sm_K = sm.fit_resample(X,y)\nX_sm_train_K, X_sm_test_K, y_sm_train_K, y_sm_test_K = train_test_split(X_sm_K, y_sm_K, test_size=0.30, random_state=1)\ny_sm_train_K= y_sm_train_K.reshape(-1,1)\ny_sm_test_K = y_sm_test_K.reshape(-1,1)","08a75c78":"k_class_2 = KNeighborsClassifier (n_neighbors=1)","bf6ae8dc":"k_class_2.fit(X_sm_train_K,y_sm_train_K)\ny_pred = k_class_2.predict(X_sm_test_K)\nprint(k_class_2.score(X_sm_train_K,y_sm_train_K)*100)\nprint(accuracy_score(y_sm_test_K, y_pred)*100)\nprint(confusion_matrix(y_sm_test_K, y_pred))\nprint(classification_report(y_sm_test_K, y_pred))","586112fd":"tree_class_2 = DecisionTreeClassifier(criterion='gini', max_depth=4, splitter='best', random_state=33)","382340b1":"tree_class_2.fit(X_sm_train,y_sm_train)\ny_pred = tree_class_2.predict(X_sm_test)\nprint(tree_class_2.score(X_sm_train,y_sm_train)*100)\nprint(accuracy_score(y_sm_test, y_pred)*100)\nprint(confusion_matrix(y_sm_test, y_pred))\nprint(classification_report(y_sm_test, y_pred))","0c4c4efa":"Random_class_2 = RandomForestClassifier(n_estimators=400, criterion='gini', max_depth=2, random_state = 33)","a37b20be":"Random_class_2.fit(X_sm_train,y_sm_train)\ny_pred = Random_class_2.predict(X_sm_test)\nprint(Random_class_2.score(X_sm_train,y_sm_train)*100)\nprint(accuracy_score(y_sm_test, y_pred)*100)\nprint(confusion_matrix(y_sm_test, y_pred))\nprint(classification_report(y_sm_test, y_pred))","1ef01ef4":"from sklearn.ensemble import VotingClassifier\nVoting_class_2 = VotingClassifier(estimators=[('tree_class', tree_class_2), ('logistig_model', logistic_model_2), ('k_class_2', k_class_2), ('Random_class', Random_class_2)], \n                                voting='hard')","0db7b011":"Voting_class_2.fit(X_sm_train,y_sm_train)\ny_pred = Voting_class_2.predict(X_sm_test)\nprint(Voting_class_2.score(X_sm_train,y_sm_train)*100)\nprint(accuracy_score(y_sm_test, y_pred)*100)\nprint(confusion_matrix(y_sm_test, y_pred))\nprint(classification_report(y_sm_test, y_pred))","605fdacf":"print('The classification report for the best model before scalling')\nprint(classification_report(y_test, tree_class.predict(X_test)))\nprint()\nprint('The classification report for the best model after scalling')\nprint(classification_report(y_sm_test, Voting_class_2.predict(X_sm_test)))","9e2a7d2f":"# *Random Forest Classifier*","8fc8fe15":"# *Logistic Regression*","abbf0915":"**We will rapeate the reasample operation to prevent polynomial operation in this algorithm**","5b043327":"# **Algorithm**\n**On our work we will use five kind of algorithms**\n**to the find algorithm with highest f1_score**\n* LogisticRegression\n* KNeighborsClassifier\n* DecisionTreeClassifier\n* RandomForestClassifier\n","b41a202b":"**We can see in previous two graph the Family and Experience has a low effect in the personal loan attribute**","06190e30":"# ***treat imbalanced in data***","f92dc3b0":"# *Voting Classifier*","6227508f":"# ***treat the small number of feature***","3006203f":"# Drop coulmns operation\n\n* ID coulumn in our database have a unique number for every client.\n* ZIP Code coulumn in our database have a ZIP Code for the city of the clients\n\n* so there is no relation between ID columns or ZIP Code coulumn and any ather variable.\n* so it will be useful when drop them to prevent occurrence of misleading.","17342ae9":"* **After investigating previous plots.**\n* **We will work on the all data after drop the 'ID' and 'ZIP Code' coulmns**\n* **becouse we find all coulmns are affect on each other**","0e8a2bee":"**Clients with income more than 100k are more likely to get loan**","f86525fd":"# observations\nwe will convert the CCAvg from monthely average to annual average like income coulmn","0c07a594":"# ***problems***\n**We can find a problem in recall and precision values in all model we tried before and this lead to low f1_score value.<br>**\n**This problem has many causes such as**\n* Small number of features\n* dataset has a small number of recordes\n* dataset values need standarzation","60445e09":"# **Now we will compare between the best algorithm before scalling and the best after scalling**","b480587e":"# Observations\n* we can see in the describe cell above\n* the min value of Experience columns is (-3)\n* but we knowe the Experience values must be possitive\n* we will change any negative Experience value by the mean","88d758ec":"# ***Finally***\n**In the end, we found Voting Classifier is the best algorithm.<br>**\n**with accurecy score = 97.53 %<br>**\n**and with f1_score = 98 %**","43ab1f4e":"# ***Spliting the data into training and test after sampling and polynomial operations***","0a5fd981":"**Clients with annual CV average more than 30 are more likely to get loan**","07eb0f1e":"# *K Neighbors Classifier*","7618f048":"# *Decision Tree Classifier*","fc40158c":"# *K Neighbors Classifier*","7455be10":"# Observation\n* 'Age' and 'Experience' are correlated with each other.\n\n* 'Income' and \u2018ann_CCAvg' correlated with each other.\n \n* 'CD Account' has a correlation with 'Credit Card', 'Securities Account', 'Online', \u2018ann_CCAvg' and 'Income'.\n \n* 'Personal Loan' has correlation with 'Income\u2019, ann_'CCAvg', 'CD Account', 'Mortgage', and 'Education'.\n \n* 'Mortgage' has moderate correlation with 'Income'\n \n* 'Income' influences \u2018ann_CCAvg', 'Personal Loan', 'CD Account' and 'Mortgage'.","1d9b7a49":"# ***Logistic Regression***","c93e7e3c":"# *Decision Tree Classifier*","7d378058":"# *Voting Classifier*","8db6c348":"# **Spliting the data into training and test set in the ratio of 70:30**","723629e7":"# *Random Forest Classifier*"}}