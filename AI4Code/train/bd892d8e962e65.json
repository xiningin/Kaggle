{"cell_type":{"7a1046bc":"code","ca4a0c54":"code","5a81b160":"code","c84f7d2f":"code","687d1d5c":"code","ca403b75":"code","c214f369":"code","f293609f":"code","e0a7d70f":"code","e27719b5":"code","50aeb8e4":"code","2a7aac17":"code","315a0f1c":"code","259fcc01":"code","9aebb50d":"code","81a83c12":"code","d8c71139":"code","9802f1bd":"code","3cba2c4c":"code","79523a5b":"code","a281eaec":"code","8ccc686f":"code","d0495974":"code","17588a1c":"code","ed1612c2":"code","1263f358":"code","981f2d7d":"code","8fc9fc1c":"code","55b4072d":"code","f8599806":"code","2636e997":"code","427b702d":"code","894e67b6":"code","dc572d8d":"code","ff5ecced":"code","ff443458":"code","48093298":"code","7f1c130b":"code","5712b356":"code","815fe824":"markdown","2c1ac203":"markdown","f32cb36a":"markdown","20f619e6":"markdown","8a50e528":"markdown","e50375c7":"markdown","a511fca9":"markdown","1c37c415":"markdown","c83c32fe":"markdown","416de0b9":"markdown"},"source":{"7a1046bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca4a0c54":"df = pd.read_csv('\/kaggle\/input\/world-health-organization-road-traffic-deaths\/who_road_deaths.csv', skiprows=1)\ndf.head()","5a81b160":"df.columns.tolist()","c84f7d2f":"#Trying to split all columns the same time didn't work\n\n#df[\" Both sexes\", \" Male\", \" Female\", \" Both sexes.1\", \" Male.1\", \" Female.1\"]= df[\" Both sexes\", \" Male\", \" Female\", \" Both sexes.1\", \" Male.1\", \" Female.1\"].str.split(\"[\", n = 1, expand = True)","687d1d5c":"df[\" Male\"]= df[\" Male\"].str.split(\"[\", n = 1, expand = True)","ca403b75":"df[\" Both sexes\"]= df[\" Both sexes\"].str.split(\"[\", n = 1, expand = True)","c214f369":"df[\" Female\"]= df[\" Female\"].str.split(\"[\", n = 1, expand = True)","f293609f":"df[\" Both sexes.1\"]= df[\" Both sexes.1\"].str.split(\"[\", n = 1, expand = True)","e0a7d70f":"df[\" Male.1\"]= df[\" Male.1\"].str.split(\"[\", n = 1, expand = True)","e27719b5":"df[\" Female.1\"]= df[\" Female.1\"].str.split(\"[\", n = 1, expand = True)","50aeb8e4":"df.head()","2a7aac17":"import glob\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport folium","315a0f1c":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Reds(np.linspace(0,1,20))\ndf[\"Year\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"Male\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Yearly Road Traffic Deaths\")\nplt.axis(\"off\")\nplt.show()","259fcc01":"msno.bar(df, color='#25c28b', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.title(\"Non-null entries in Road Traffic Deaths\",font=\"Georgia\", size=20)\nplt.show()","9aebb50d":"#Code by Bizen https:\/\/www.kaggle.com\/hiro5299834\/tps-apr-2021-deebtables\/notebook\n\nTARGET = 'Country' #Target could Not be float otherwise will result in valueError: Unknown label type: 'continuous'. Even after the encoding.\n\nlabel_cols = [' Male', ' Both sexes', ' Female', ' Male.1', ' Both sexes.1', ' Female.1']\nnumerical_cols = ['Year']","81a83c12":"#Code by Bizen https:\/\/www.kaggle.com\/hiro5299834\/tps-apr-2021-deebtables\/notebook\n\nfrom sklearn.preprocessing import LabelEncoder\n\ndef label_encoder(c):\n    le = LabelEncoder()\n    return le.fit_transform(c)\n\nlabel_encoded_df = df[label_cols].apply(label_encoder)\nnumerical_df = df[numerical_cols]\ntarget_df = df[TARGET]\n\ndf = pd.concat([numerical_df, label_encoded_df, target_df], axis=1)","d8c71139":"df.head()","9802f1bd":"corr = df.corr(method='pearson')\nsns.heatmap(corr);","3cba2c4c":"afghanistan = df[(df['Country']=='Afghanistan')].reset_index(drop=True)\nafghanistan.head()","79523a5b":"plt.figure(figsize=(16,6))\n\nsns.scatterplot( data=afghanistan, x=\"Year\", y=\" Male\", hue=\"Country\")\nplt.xticks(rotation=45)\nplt.title('Male Road traffic deaths in Afghanistan');","a281eaec":"plt.figure(figsize=(25,6))\nplt.title('Male Road Traffic Deaths in Afghanistan')\nplt.xticks(rotation=70)\nsns.barplot(x=afghanistan['Year'], y=' Male', data=afghanistan);","8ccc686f":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df[' Male'])\nplt.axvline(df[' Male'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('Male Road Traffic Deaths');","d0495974":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df[' Female'])\nplt.axvline(df[' Female'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('Female Road Traffic Deaths');","17588a1c":"#https:\/\/seaborn.pydata.org\/generated\/seaborn.lineplot.html\n\nsns.lineplot(data=df,x='Year', y=\" Both sexes\")\nplt.title ('Both Sexes Road Traffic Deaths');\n#plt.xticks(rotation=45);","ed1612c2":"fig = px.bar(df, \n             x='Year', y=' Male', color_discrete_sequence=['#DC143C'],\n             title='Male road traffic deaths', text=' Male.1')\nfig.show()","1263f358":"#Code by Beyza T. https:\/\/www.kaggle.com\/beyzat\/first-notebook-da\n\nx = np.linspace(1,100, 100)  # creating an array by numpy for x-axis values\n\nplt.plot(x, x**2)  # y = x^2\nplt.xlabel(\"Year\")  # naming x axis\nplt.ylabel(\" Both sexes\")  # naming y axis\nplt.show()","981f2d7d":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\n#Let's visualise freedom\nroad = df.groupby('Year').sum()[[' Male',' Female',' Both sexes', ' Both sexes.1', ' Male.1', ' Female.1']]\n#evolution['Expiration Rate'] = (evolution['Expired'] \/ evolution['Cumulative']) * 100\n#evolution['Discharging Rate'] = (evolution['Discharged'] \/ evolution['Cumulative']) * 100\nroad.head()","8fc9fc1c":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\nplt.figure(figsize=(20,7))\nplt.plot(road[' Male'], label=' Male')\nplt.plot(road[' Female'], label=' Female')\nplt.plot(road[' Both sexes'], label=' Both sexes')\nplt.legend()\n#plt.grid()\nplt.title('Road Traffic Deaths')\nplt.xticks(road.index,rotation=45)\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.show()","55b4072d":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\nplt.figure(figsize=(20,7))\nplt.plot(road[' Male.1'], label=' Male.1')\nplt.plot(road[' Female.1'], label=' Female.1')\nplt.plot(road[' Both sexes.1'], label=' Both sexes.1')\nplt.legend()\n#plt.grid()\nplt.title('Road Traffic Deaths Percent')\nplt.xticks(road.index,rotation=45)\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.show()","f8599806":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\n#What aboutfreedom in Not Free countries rate ?\nplt.figure(figsize=(20,7))\nplt.plot(road[' Both sexes'], label='Both sexes deaths')\nplt.legend()\n#plt.grid()\nplt.title('Both sexes road traffic deaths')\nplt.xticks(road.index,rotation=45)\nplt.ylabel('Rate %')\nplt.show()","2636e997":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\n#What aboutfreedom in Not Free countries rate ?\nplt.figure(figsize=(20,7))\nplt.plot(road[' Both sexes.1'], label='Both sexes percent', color= 'red')\nplt.legend()\n#plt.grid()\nplt.title('Both sexes percent of road traffic deaths')\nplt.xticks(road.index,rotation=45)\nplt.ylabel('Rate %')\nplt.show()","427b702d":"fig = px.bar(afghanistan, \n             x='Year', y=' Male',color_discrete_sequence=['darkgreen'],\n             title='Male road traffic deaths in Afghanistan', text=' Male.1')\nfig.show()","894e67b6":"fig = px.histogram(afghanistan, x=\"Year\", y=\" Male\", color= ' Male.1',\n                   hover_data=afghanistan.columns)\nfig.show()","dc572d8d":"# making a lineplot to check the relation between customer care calls, customer ratings and gender\n\nplt.figure(figsize = (18, 9))\nsns.lineplot(x = 'Year', y = ' Male', hue = ' Male.1', data = df,\n             palette = 'rocket', ci = 0)\nplt.title('Male road traffic deaths',\n          fontsize = 15)\nplt.show()","ff5ecced":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","ff443458":"y = df.loc[~df.Year.isnull()][['Year', ' Male', ' Male.1']]\n\ny_log=np.log1p(y)","48093298":"#Code by Oniel Gracious https:\/\/www.kaggle.com\/onielg\/simplecatboostwithclassifierchains\/notebook\n\n#histogram and normal probability plot\nfrom scipy import stats\n\nfrom scipy.stats import norm\ntarget=[' Male',' Male.1','Year']\nfor t in target:\n    fig = plt.figure()\n    sns.distplot(y_log[t], fit=norm);\n    res = stats.probplot(y_log[t], plot=plt)","7f1c130b":"#Code by V\u00edtor Gama Lemos  https:\/\/www.kaggle.com\/vitorgamalemos\/predict-trends-using-google\/notebook\n\nimport ipywidgets as widgets\nimport statsmodels.api as sm\n\nfor col in df.columns:\n    frequencia = 7\n    result = sm.tsa.seasonal_decompose(df[col].dropna(),\n                                        period=frequencia)\n    fig = result.plot()\n    fig.set_figheight(9)\n    fig.set_figwidth(14)\n    plt.show()","5712b356":"#Code by V\u00edtor Gama Lemos https:\/\/www.kaggle.com\/vitorgamalemos\/predict-trends-using-google\/notebook \n\n#y = df.resample('MS').mean()\n#parametros = {\n               # \"order\": (1, 1, 1),\n                #\"seas_order\": (1, 1, 0, 12)\n             #}\n\n#predict_model = []\n#for col in y.columns:\n #   print(f\"Training SARIMAX model ... product: {col}\")\n  #  modelo = sm.tsa.statespace.SARIMAX(y[col],\n   #                             order=parametros[\"order\"],\n    #                            seasonal_order=parametros[\"seas_order\"],\n     #                           enforce_stationarity=False,\n      #                          enforce_invertibility=False)\n\n    #results = modelo.fit()\n    #print(results.summary().tables[1])\n    #results.plot_diagnostics(figsize=(16, 8))\n    #predict_model.append(results)\n    \n \n#TypeError: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' \n\n#Saving snippet for the next time.","815fe824":"![](https:\/\/image.slidesharecdn.com\/magnitudea4webun-180613013240\/95\/road-traffic-injuries-the-facts-1-638.jpg?cb=1528854107)slideshare.net","2c1ac203":"#Though data goes up to 2019, why do we have only till 2015?? ","f32cb36a":"#Probably, that's not the right way to split that Dataframe above. But it was the only solution I found in \"Python \/ Pandas Split strings into two List\/Columns using str.split()\"\n\nLast Updated : 07 May, 2019. Unfortunately, the lists between brackets were gone after the not very successful \"split\".\n\nhttps:\/\/www.geeksforgeeks.org\/python-pandas-split-strings-into-two-list-columns-using-str-split\/","20f619e6":"#Why this chart above doesn't show odds years?","8a50e528":"#Since I didn't encode Country names the last time. I have to perform a 2nd Encoding.","e50375c7":"#Since a chart with all Countries doesn't result satisfactory, I make a single plot with the first country of the Dataset.","a511fca9":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: orange;\"><b style=\"color:#001f3f;\">Road Traffic Injuries<\/b><\/h1><\/center>\n\n\"Approximately 1.3 million people die each year as a result of road traffic crashes.\"\n\n\"The United Nations General Assembly has set an ambitious target of halving the global number of deaths and injuries from road traffic crashes by 2030 (A\/RES\/74\/299)\"\n\n\"Road traffic crashes cost most countries 3% of their gross domestic product.\"\n\n\"More than half of all road traffic deaths are among vulnerable road users: pedestrians, cyclists, and motorcyclists.\"\n\n\"93% of the world's fatalities on the roads occur in low- and middle-income countries, even though these countries have approximately 60% of the world's vehicles.\"\n\n\"Road traffic injuries are the leading cause of death for children and young adults aged 5-29 years.\"\n\nhttps:\/\/www.who.int\/news-room\/fact-sheets\/detail\/road-traffic-injuries","1c37c415":"#Comparing with Female Road Traffic Deaths","c83c32fe":"#There are so many Road Traffic Deaths that many charts don't work as all the space is completely filled by the deaths.\n\n#Below, is an example of I'm talking about. Too clumsy, only mean that there is too many Deaths.","416de0b9":"#It was suppose to be a Sarimax Model. since I don't have month\/weeks Datetime, TimeDelta. That's my end line."}}