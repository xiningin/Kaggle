{"cell_type":{"76c8b71d":"code","8d496b81":"code","e3783e2b":"code","74f9e46f":"code","91dd5e54":"code","54971c69":"code","dc6a0a78":"code","7c706562":"code","4fd6cc10":"code","4e5c8670":"code","2e230574":"markdown","e6f1c1f2":"markdown","776bbc37":"markdown","f223ae7e":"markdown","dd3b22cc":"markdown","22144ef4":"markdown","e51e53b0":"markdown","4c0583bb":"markdown","63eb60b7":"markdown","effb073f":"markdown"},"source":{"76c8b71d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8d496b81":"import nltk\ndef to_lower(text):\n    \"\"\"\n    Converting text to lower case as in, converting \"Hello\" to  \"hello\" or \"HELLO\" to \"hello\".\n    \"\"\"\n    return ' '.join([w.lower() for w in nltk.word_tokenize(text)])\ntext = \"\"\"Harry Potter is the most miserable, lonely boy you can imagine. He's shunned by his relatives, the Dursley's, that have raised him since he was an infant. He's forced to live in the cupboard under the stairs, forced to wear his cousin Dudley's hand-me-down clothes, and forced to go to his neighbour's house when the rest of the family is doing something fun. Yes, he's just about as miserable as you can get.\"\"\"\nprint (to_lower(text))","e3783e2b":"text = \"This is a Demo Text for NLP using NLTK. Full form of NLTK is Natural Language Toolkit\"\nsent_token = nltk.sent_tokenize(text)\nprint (sent_token)","74f9e46f":"text = \"This is a Demo Text for NLP using NLTK. Full form of NLTK is Natural Language Toolkit\"\nword_tokens = nltk.word_tokenize(text)\nprint (word_tokens)\n","91dd5e54":"import nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\n#is based on The Porter Stemming Algorithm\nstopword = stopwords.words('english')\nwordnet_lemmatizer = WordNetLemmatizer()\ntext = \"the functions of this fan is great\"\nword_tokens = nltk.word_tokenize(text)\nlemmatized_word = [wordnet_lemmatizer.lemmatize(word) for word in word_tokens]\nprint (lemmatized_word)","54971c69":"import nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem import SnowballStemmer\n#is based on The Porter Stemming Algorithm\nstopword = stopwords.words('english')\nsnowball_stemmer = SnowballStemmer('english')\ntext = \"This is a Demo Text for NLP using NLTK. Full form of NLTK is Natural Language Toolkit\"\nword_tokens = nltk.word_tokenize(text)\nstemmed_word = [snowball_stemmer.stem(word) for word in word_tokens]\nprint (stemmed_word)\n","dc6a0a78":"import re\ntext = \"\"\"<head><body>hello world!<\/body><\/head>\"\"\"\ncleaned_text = re.sub('<[^<]+?>','', text)\nprint (cleaned_text)","7c706562":"text = \"There was 200 people standing right next to me at 2pm.\"\noutput = ''.join(c for c in text if not c.isdigit())\nprint(output)","4fd6cc10":"from string import punctuation\ndef strip_punctuation(s):\n    return ''.join(c for c in s if c not in punctuation)\ntext = \"Hello! how are you doing?\"\nprint (strip_punctuation(text))","4e5c8670":"import nltk\nfrom nltk.corpus import stopwords\nstopword = stopwords.words('english')\ntext = \"This is a Demo Text for NLP using NLTK. Full form of NLTK is Natural Language Toolkit\"\nword_tokens = nltk.word_tokenize(text)\nremoving_stopwords = [word for word in word_tokens if word not in stopword]\nprint (removing_stopwords)\n","2e230574":"**Remove Numbers**\n\nRemoving numbers from the text like \u201c1,2,3,4,5\u2026\u201d We usually remove numbers when we do text clustering or getting keyphrases as we numbers doesn\u2019t give much importance to get the main words. To remove numbers, you can use: .isnumeric() else .isdigit()","e6f1c1f2":"**Lemmatize**\n\nlemmatize the text so as to get its root form eg: functions,funtionality as function","776bbc37":"**Stemming**\n\nstemming is the process of reducing inflected (or sometimes derived) words to their word stem, base or root form","f223ae7e":"**word tokenize**\n\nTokenize words to get the tokens of the text i.e breaking the sentences into list of words.","dd3b22cc":"**Convert text to lower case:**\n\nConverting text to lower case as in, converting \u201cHello\u201d to \u201chello\u201d or \u201cHELLO\u201d to \u201chello\u201d.\n","22144ef4":"**Remove punctuation\n**\n\nRemoving punctuation from the text like \u201c.?!\u201d and also the symbols like \u201c@#$\u201d .","e51e53b0":"**Pre-Processing Text in Python**\n\nSo are you planning to do a research in text fields but not sure about how to start?<br><br>\nWell, why not start with pre-processing of text as it is very important while doing research in text field and its easy! Cleaning the text helps you get quality output by removing all irrelevant text and getting the forms of the words etc.","4c0583bb":"**Stop words removal**\n\nRemove irrelevant words using nltk stop words like \u201cis,the,a\u201d etc from the sentences as they don\u2019t carry any information.","63eb60b7":"**sentence tokenize**\n\nIf the there are more than 1 sentence split it i.e breaking the sentences to a list of sentence.","effb073f":"**Remove Tags**\n\nRemoving html tags from the text like \u201c<head><body>\u201d using regex.\n"}}