{"cell_type":{"303de7f2":"code","32d15228":"code","a862a6d4":"code","d89c39b8":"code","3fb872a0":"code","214d71d6":"code","95824a7a":"code","b3aaf2a3":"code","b2f68f88":"code","6579ff12":"code","33a92d66":"code","fe07612b":"code","d7bb89a2":"code","4243883f":"code","adc32851":"code","b42fbe81":"code","353b7c5f":"code","a725d8da":"code","fdf3bbbe":"code","12c9ceb6":"code","4a4d7f32":"code","ec534629":"code","2dd35e46":"code","170500e9":"code","87f4ac67":"code","bb737372":"code","42c924e4":"code","56ae133c":"code","0fb949fe":"code","2bb2031b":"code","6ed28948":"code","a409daa5":"code","41533047":"code","60c13cde":"code","6deb514c":"code","6cb91d86":"code","f93069be":"code","bb18f81c":"code","c2e0ae7a":"code","55699b47":"code","1d679e94":"code","05dfc60e":"code","2970fb36":"code","f73d4daa":"code","f8403c3d":"code","6a16346d":"code","224d751f":"code","a98d62ab":"code","52745ce7":"code","19393241":"code","1aaabad4":"code","fc92811e":"code","79d7bc94":"code","59c64f8d":"code","43305c19":"code","881afd49":"code","86386edb":"code","02e27ae6":"code","5fa4b214":"code","9b4ef1b2":"code","1f4cd401":"code","18ac7bd0":"code","a7b343df":"code","b92bae96":"markdown","254a5949":"markdown","780c262d":"markdown","acbaf4f1":"markdown","c59d8b03":"markdown","b0f15164":"markdown","e1b9d80a":"markdown","f0d809c5":"markdown","b9808d41":"markdown","47ee6e8b":"markdown","23298e1e":"markdown","9d8fd658":"markdown","e786929a":"markdown","6c84d4d9":"markdown","a0feb756":"markdown","99a774a6":"markdown","cffffe31":"markdown","8527b852":"markdown","d1ece0d7":"markdown","8cba416b":"markdown","38a75b90":"markdown","b6fd9ca6":"markdown","10c7914d":"markdown","48c02ed4":"markdown","ca4d19d8":"markdown","a15357b1":"markdown"},"source":{"303de7f2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","32d15228":"california_housing = pd.read_csv('https:\/\/raw.githubusercontent.com\/ageron\/handson-ml\/master\/datasets\/housing\/housing.csv')\ncalifornia_housing.head()","a862a6d4":"california_housing.info()","d89c39b8":"#shape of the data\ncalifornia_housing.shape","3fb872a0":"missing_percent = california_housing.isna().sum() * 100 \/len(california_housing)\nmissing_percent","214d71d6":"california_housing['total_bedrooms'].isna().sum()","95824a7a":"california_housing.describe()","b3aaf2a3":"california_housing.hist(bins = 50,figsize=(15,12))\nplt.show()","b2f68f88":"california_housing['median_income'].hist(bins = 20)\nplt.title('Median Income Distribution')\nplt.show()","6579ff12":"# Housing Median age distribution\nplt.figure(figsize=(8,6))\nsns.set_style('darkgrid')\nsns.histplot(data=california_housing, x='housing_median_age',alpha =0.5,bins =30, kde=True)#\nplt.show()","33a92d66":"plt.figure(figsize=(8,4))\nsns.histplot(data=california_housing, x='total_bedrooms',bins =50)\nplt.show()","fe07612b":"plt.figure(figsize=(8,6))\nsns.boxplot(x='total_bedrooms',color='red', data=california_housing)\nplt.show()","d7bb89a2":"california_housing['total_rooms'].describe()","4243883f":"plt.figure(figsize=(8,6))\nsns.boxplot(x='total_rooms', data=california_housing,color='red')\nplt.show()","adc32851":"plt.figure(figsize=(8,6))\nsns.scatterplot(x='median_income',y='median_house_value', hue='ocean_proximity', data=california_housing)\nplt.show()","b42fbe81":"plt.figure(figsize=(12,6))\nplt.subplot(1,2,1)\nsns.boxplot(x='population', data=california_housing)\nplt.subplot(1,2,2)\nsns.histplot(data=california_housing,x='population', bins=100)\nplt.xlim(0,15000)\nplt.show()","353b7c5f":"plt.figure(figsize=(12,6))\nsns.scatterplot(x='longitude',y='latitude', data=california_housing, hue= 'median_house_value',palette='rainbow', alpha=0.8)\nplt.title('Meadian House Price based on location')\nplt.show()","a725d8da":"plt.figure(figsize=(4,3))\npx.scatter(california_housing,x='longitude',y='latitude', color= 'ocean_proximity',symbol='ocean_proximity')\nplt.show()","fdf3bbbe":"plt.figure(figsize=(8,6))\nsns.boxplot(x='ocean_proximity', y='median_house_value', data=california_housing)\nplt.title('Median House Value vs Ocean Proximity')\nplt.show()","12c9ceb6":"plt.figure(figsize=(8,6))\nsns.heatmap(california_housing.corr(),annot=True)\nplt.title('Correlation Matrix of features')\nplt.show()\n","4a4d7f32":"california_housing_2 = california_housing.copy()\nQ1 = california_housing.quantile(0.25)\nQ3 = california_housing.quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","ec534629":"california_housing_2 = california_housing_2[~((california_housing_2 < (Q1 - 1.5 * IQR)) |(california_housing_2 > (Q3 + 1.5 * IQR))).any(axis=1)]","2dd35e46":"california_housing.shape, california_housing_2.shape","170500e9":"california_housing['total_bedrooms'].isna().sum()","87f4ac67":"california_housing_2.fillna(value=california_housing_2['total_bedrooms'].median(),inplace=True)","bb737372":"california_housing_2.total_bedrooms.isna().sum()","42c924e4":"california_housing_2['bedrooms_per_rooms'] = california_housing_2['total_bedrooms'] \/california_housing_2['total_rooms']\ncalifornia_housing_2['total_rooms_per_household'] = california_housing_2['total_rooms']\/california_housing_2['households']\ncalifornia_housing_2['population_per_househod'] = california_housing_2['population']\/california_housing_2['households']","56ae133c":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler, OrdinalEncoder,StandardScaler\nfrom sklearn.compose import make_column_transformer","0fb949fe":"california_housing_2.ocean_proximity.value_counts()","2bb2031b":"california_housing_2.ocean_proximity.unique()","6ed28948":"proximity_n = [ 'INLAND','<1H OCEAN', 'NEAR OCEAN', 'NEAR BAY', 'ISLAND']","a409daa5":"ct = make_column_transformer(\n...     (MinMaxScaler(), ['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income','bedrooms_per_rooms',\n       'total_rooms_per_household', 'population_per_househod']),\n...     (OrdinalEncoder(categories=[proximity_n]),['ocean_proximity']))","41533047":"X = california_housing_2.drop('median_house_value', axis=1)\ny = california_housing_2.median_house_value\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","60c13cde":"ct.fit(X_train)\nX_train_normal = ct.transform(X_train)\nX_test_normal = ct.transform(X_test)","6deb514c":"# Final Training Dataset after scaling \npd.DataFrame(X_train_normal).head()","6cb91d86":"from sklearn.linear_model import LinearRegression, Lasso, ElasticNet","f93069be":"lr = LinearRegression()\nlr.fit(X_train_normal,y_train)","bb18f81c":"y_predict = lr.predict(X_test_normal)\ny_predict","c2e0ae7a":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score, explained_variance_score","55699b47":"print('mean absolute error: ',mean_absolute_error(y_test, y_predict))\nprint(' root mean squared error: ',np.sqrt(mean_squared_error(y_test,y_predict)))\nprint('Coefficient of determination R^2: ',r2_score(y_test,y_predict))","1d679e94":"fig= plt.figure(figsize=(12,6))\nresult = pd.DataFrame({'Predicted':y_predict,'Actual':y_test})\nresult = result.reset_index()\nresult = result.drop(['index'],axis=1)\nplt.plot(result[:100])\nplt.legend(['Actual','Predicted'])\nplt.title('Actual vs Predicted')\nplt.show()","05dfc60e":"from sklearn.tree import DecisionTreeRegressor","2970fb36":"dt = DecisionTreeRegressor(criterion='mse',splitter='best')\ndt.fit(X_train_normal,y_train)","f73d4daa":"y_predict_dt = dt.predict(X_test_normal)","f8403c3d":"print('mean absolute error: ',mean_absolute_error(y_test, y_predict_dt))\nprint(' root mean squared error: ',np.sqrt(mean_squared_error(y_test,y_predict_dt)))\nprint('Coefficient of determination R^2: ',r2_score(y_test,y_predict_dt))","6a16346d":"fig= plt.figure(figsize=(12,6))\nresult = pd.DataFrame({'Predicted':y_predict_dt,'Actual':y_test})\nresult = result.reset_index()\nresult = result.drop(['index'],axis=1)\nplt.plot(result[:100])\nplt.legend(['Actual','Predicted'])\nplt.title('Actual vs Predicted')\nplt.show()","224d751f":"lasso = Lasso(alpha=0.001)\nlasso.fit(X_train_normal,y_train)","a98d62ab":"y_predict_lasso = lasso.predict(X_test_normal) ","52745ce7":"print('mean absolute error: ',mean_absolute_error(y_test, y_predict_lasso))\nprint(' root mean squared error: ',np.sqrt(mean_squared_error(y_test,y_predict_lasso)))\nprint('Coefficient of determination R^2: ',r2_score(y_test,y_predict_lasso))","19393241":"fig= plt.figure(figsize=(12,6))\nresult = pd.DataFrame({'Predicted':y_predict_lasso,'Actual':y_test})\nresult = result.reset_index()\nresult = result.drop(['index'],axis=1)\nplt.plot(result[:100])\nplt.legend(['Actual','Predicted'])\nplt.title('Actual vs Predicted')\nplt.show()","1aaabad4":"elas_net  = ElasticNet(0.001)\nelas_net.fit(X_train_normal,y_train)","fc92811e":"y_predict_el = elas_net.predict(X_test_normal)\ny_predict_el","79d7bc94":"print('mean absolute error: ',mean_absolute_error(y_test, y_predict_el))\nprint('root mean squared error: ',np.sqrt(mean_squared_error(y_test,y_predict_el)))\nprint('Coefficient of determination R^2: ',r2_score(y_test,y_predict_el))","59c64f8d":"fig= plt.figure(figsize=(12,6))\nresult = pd.DataFrame({'Predicted':y_predict_el,'Actual':y_test})\nresult = result.reset_index()\nresult = result.drop(['index'],axis=1)\nplt.plot(result[:100])\nplt.legend(['Actual','Predicted'])\nplt.title('Actual vs Predicted')\nplt.show()","43305c19":"from sklearn.ensemble import RandomForestRegressor","881afd49":"\nrf = RandomForestRegressor()\nrf.fit(X_train_normal,y_train)","86386edb":"y_predict_rf = rf.predict(X_test_normal)\ny_predict_rf","02e27ae6":"print('mean absolute error: ',mean_absolute_error(y_test, y_predict_rf))\nprint('root mean squared error: ',np.sqrt(mean_squared_error(y_test,y_predict_rf)))\nprint('Coefficient of determination R^2: ',r2_score(y_test,y_predict_rf))","5fa4b214":"fig= plt.figure(figsize=(12,6))\nresult = pd.DataFrame({'Predicted':y_predict_rf,'Actual':y_test})\nresult = result.reset_index()\nresult = result.drop(['index'],axis=1)\nplt.plot(result[:100])\nplt.legend(['Actual','Predicted'])\nplt.title('Actual vs Predicted')\nplt.show()","9b4ef1b2":"sns.jointplot(y_test,y_predict,kind='reg')\nplt.show()","1f4cd401":"plt.figure(figsize=(8,4))\nsns.displot(y_test-y_predict, bins=30 , kde=True)\nplt.title('Residual Distribution')\nplt.show()","18ac7bd0":"r1 = np.sqrt(mean_squared_error(y_test,y_predict))\nr2_dt = np.sqrt(mean_squared_error(y_test,y_predict_dt))\nr3_la = np.sqrt(mean_squared_error(y_test,y_predict_lasso))\nr4_el = np.sqrt(mean_squared_error(y_test,y_predict_el))\nr5_rf = np.sqrt(mean_squared_error(y_test,y_predict_rf))\n\np1 =r2_score(y_test,y_predict)\np2 =r2_score(y_test,y_predict_dt)\np3 =r2_score(y_test,y_predict_lasso)\np4 =r2_score(y_test,y_predict_el)\np5 = r2_score(y_test,y_predict_rf)","a7b343df":"pd.DataFrame({'Model': ['Linear Regression','Decision Tree Regression','Lasso','Elastic Net','RandomForest'],\n              'RMSE':[r1, r2_dt, r3_la, r4_el, r5_rf],\n              'R^2' :[p1,p2,p3,p4,p5]})","b92bae96":"# Encoding Missing values","254a5949":" Now, let's create a list of proximity of ocean based on the distance from the Ocean.","780c262d":"## Lasso Regression","acbaf4f1":"# Creating Train and Test data set","c59d8b03":"# Checking Missing Data","b0f15164":"# Sources\n\n- [Types of Categorical Data Encoding](https:\/\/www.analyticsvidhya.com\/blog\/2020\/08\/types-of-categorical-data-encoding\/)\n- [How to detect outliers](https:\/\/towardsdatascience.com\/ways-to-detect-and-remove-the-outliers-404d16608dba)","e1b9d80a":"[Data Source](https:\/\/raw.githubusercontent.com\/ageron\/handson-ml\/master\/datasets\/housing\/housing.csv)","f0d809c5":"# Detecting Outliers\n\nThere are many approaches availabe for detecting outliers in  dataset. Such as `Z Score`,`IQR (Inter Quantile Range)`, `Box Plot`. Here, we will  use `IQR` for detecting and removing outliers from the data set. Although, we have already seen in the box plot that we have outliers in the dataset.","b9808d41":"# California Housing Price Prediction","47ee6e8b":"# Scaling Features","23298e1e":" The features of dataset are in different scale. It is a good practice to scale all the  features in the same scale.","9d8fd658":"## Decision Tree Regressor","e786929a":"**Load Data**","6c84d4d9":"# Exploratory Data Analysis","a0feb756":"**Take a look on Data**","99a774a6":"## Random Forest Regressor","cffffe31":"# Creating New features","8527b852":"# Further Steps\n\n1. Investigate **multicollinearity** among features. \n2. New features can be added, and features exceeding the **Variance Inflation Factor** threshold can be dropped.\n3.  The fitted plot suggests that the data is not completely homoscedastic. Removing Heteroscedasticity from the data may lead to better results.","d1ece0d7":"## Linear Regression","8cba416b":"After implementing different algorithms, we see that RandomForest outperforms other algorithms in terms of both Root Mean Square Error and Coefficient of determination","38a75b90":"**Machine Learning algorithms**, we are going to use \n\n- Linear Regression\n- Decision Tree Regressor\n- Lasso \n- Elastic Net \n- Random Forest Regression","b6fd9ca6":"## Elastic Net ","10c7914d":"There are 207 missing values in total_bedrooms feature. We can encode the missing values by taking the median of total_bedrooms. ","48c02ed4":"### Set up Environment","ca4d19d8":"# Descriptive statistics of Numerical Features","a15357b1":"[Image Source](https:\/\/unsplash.com\/)\n![link text](https:\/\/drive.google.com\/uc?id=1rnAMgV4M8to4iWOsxCwhHwY3BDDEscNg)"}}