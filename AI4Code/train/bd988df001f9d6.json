{"cell_type":{"348e09db":"code","b8140d05":"code","f95dc206":"code","ac093ed3":"code","17e6f20a":"code","91bb7800":"code","cf75a5ee":"code","b8bbe0cd":"code","5d94ced2":"code","94b01bf7":"code","b017b9da":"code","c0b685b4":"code","89114e11":"code","3b0ca3cf":"code","6afeafc8":"code","995b922e":"code","65de5a67":"markdown","d96b4afc":"markdown","9876d854":"markdown","458bad99":"markdown","c2c85d69":"markdown","f814e924":"markdown","66273115":"markdown","e143de25":"markdown","3e43690b":"markdown","fda574f9":"markdown","3e35e65a":"markdown"},"source":{"348e09db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b8140d05":"dataset=pd.read_csv(\"..\/input\/iris-dataset\/iris.csv\")","f95dc206":"dataset.head()","ac093ed3":"#cheking for the null values and replacing them with the na values\ndataset.isnull().sum()","17e6f20a":"#luckly we do not have any null values\n#now we can describe the data\ndataset.describe()","91bb7800":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","cf75a5ee":"#making scatter plot by class\nclasses=dataset['species'].unique()\nprint(\"Different calsses---names\")\nprint(classes)\n","b8bbe0cd":"sns.pairplot(dataset,hue='species')","5d94ced2":"plt.figure(figsize=(10, 10))\n\nfor column_index, column in enumerate(dataset.columns):\n    if column == 'species':\n        continue\n    plt.subplot(2, 2, column_index + 1)\n    sns.violinplot(x='species', y=column, data=dataset)","94b01bf7":"from sklearn.model_selection import train_test_split\nlabels = dataset[\"species\"].values\nnew = dataset.drop(columns=[\"species\"])\nX_train,X_test,Y_train,Y_test = train_test_split(new,labels,test_size=0.25,random_state=42)","b017b9da":"X_train.head()","c0b685b4":"Y_train[:5]","89114e11":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train,Y_train)\nlr.predict(X_test)\nlr.score(X_test,Y_test)","3b0ca3cf":"#definately it is overfitting we can visualize the data to see the overfitting","6afeafc8":"from sklearn import svm\nfrom sklearn.metrics import accuracy_score","995b922e":"svc = svm.SVC()\nsvc.fit(X_train,Y_train)\ny_pred=svc.predict(X_test)\naccuracy_score(Y_test,y_pred)\n","65de5a67":"We will use the accuracy as the measure of accuracy on this dataset as this is a classification task.\n","d96b4afc":"i guess they are pretty much easily saperable in this case we can visualize the decision boundry we can not take the full use of it as the model is already preforming good","9876d854":"**Visualization**","458bad99":"Some clear intuation can be drawn from voilen plots as we can see the two class vergicolor and verginica are overlapping so we can gain some usefull insigit from the voilen plots","c2c85d69":"We can see that the virginica tend to have the majority of its species petal width and similarly length in the highest range\nand similarly we can do for all to get more insight of the data","f814e924":"Violin plots are very helpfull in showing where the density of the data is going ","66273115":"**Cleaning the data**","e143de25":"We are using two models for now \n\n1.Logitic Regression\n\n2.Svm","3e43690b":"*Splitting the data*","fda574f9":"by the data visualization we can see that how the data is saperable clearly all the three species are seperabel easily","3e35e65a":"**Train and Testing the data**"}}