{"cell_type":{"7145cbca":"code","08b3955d":"code","86437c2d":"code","bb60aa54":"code","bb7fef7d":"code","5549b272":"code","d2b5d604":"code","2a08da40":"code","7fc0f174":"code","32ba2789":"code","7cad564a":"code","89b2bab5":"code","60cc8a63":"code","f4201a32":"code","7786cdad":"code","dddb936a":"code","7c2f39a8":"code","93ae8fde":"code","a6cea27e":"code","457ef5ed":"code","901c8130":"code","590c82ac":"code","70ed3ee4":"code","5a91f98a":"code","f2481e06":"code","5046036f":"code","799c55ee":"code","540b6243":"code","a95ad689":"code","0b38498f":"code","bb97fba5":"code","9e7536ac":"code","c2b8c9bb":"code","d8609856":"code","d9593cb6":"code","44b8d060":"code","2b2a15e9":"code","dca0502a":"code","72e621cb":"code","02e80f46":"code","224403c1":"code","c07ba1e9":"code","82e62686":"code","a66b2a55":"code","8e4c153e":"code","6496d53f":"code","a065b285":"code","d3073179":"code","ea976849":"code","8355f9f7":"code","b7add8a3":"code","c5826489":"code","4c3fbf5c":"code","f618c343":"code","c8ac1e5a":"markdown","32dcc681":"markdown","04349ca2":"markdown","54f16e95":"markdown","42e5e4ca":"markdown","5a6627f4":"markdown","f2262d31":"markdown","70597ef1":"markdown","d561c819":"markdown","5b0df0fd":"markdown","9f60942f":"markdown","73fba0f8":"markdown","ba53927c":"markdown","477ca279":"markdown","715db1ff":"markdown","c00a5f26":"markdown","b19cf6c9":"markdown","671c3f04":"markdown","c7bd3711":"markdown","8e808eae":"markdown","d4100592":"markdown"},"source":{"7145cbca":"#import keras\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split  \nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers \nfrom sklearn.linear_model import LinearRegression\nfrom scipy import stats","08b3955d":"df1 = pd.read_csv('..\/input\/california-housing\/california_housing_train.csv')\ndf2 = pd.read_csv('..\/input\/california-housing\/california_housing_test.csv')\nframes = [df1,df2]\ndf = pd.concat(frames,ignore_index=True)\ndf","86437c2d":"df.shape","bb60aa54":"df.info()","bb7fef7d":"df.isnull().sum()","5549b272":"df.duplicated().sum()","d2b5d604":"sns.boxplot(x=df['median_house_value'])","2a08da40":"df_outliers= df[(np.abs(stats.zscore(df['median_house_value'])) < 1)]\nprint(f'We will lose {((df.shape[0] - df_outliers.shape[0])\/df.shape[0])*100}% of our data if we drop the outliers')","7fc0f174":"df_outliers.shape","32ba2789":"df_outliers","7cad564a":"sns.boxplot(x=df_outliers['median_house_value'])","89b2bab5":"df.describe()","60cc8a63":"plt.figure(figsize=(12, 8))\nsns.heatmap(df.corr(), annot=True).set_title(\"Heat Map for our Data\")","f4201a32":"plt.figure(figsize=(15,8))\nax= sns.scatterplot(data=df, x=\"median_income\", y=\"median_house_value\").set_title(\"Income And House Value Relationship\")","7786cdad":"plt.figure(figsize=(15,8))\nax= sns.scatterplot(data=df_outliers, x=\"median_income\", y=\"median_house_value\").set_title(\"Income And House Value Relationship after dropping outliers\")","dddb936a":"plt.figure(figsize=(15,8))\nsns.scatterplot(data=df, x=\"longitude\", y=\"latitude\", hue=df[\"median_house_value\"], size=df[\"median_house_value\"]).set_title(\"longitude And latitude  Relationship with house value\")","7c2f39a8":"plt.figure(figsize=(15,8))\nsns.scatterplot(data=df_outliers, x=\"longitude\", y=\"latitude\", hue=df[\"median_house_value\"], size=df[\"median_house_value\"]).set_title(\"longitude And latitude  Relationship with house value after dropping outliers\")","93ae8fde":"X1 = df.drop(columns=['median_house_value'])\nX2 = df_outliers.drop(columns=['median_house_value'])\nX1","a6cea27e":"Y1 =df[['median_house_value']]\nY2 =df_outliers[['median_house_value']]\nY1","457ef5ed":"X_train1, X_test1, y_train1, y_test1 = train_test_split( X1, Y1, train_size=0.7)\nX_train2, X_test2, y_train2, y_test2 = train_test_split( X2, Y2, train_size=0.7)","901c8130":"X_train1","590c82ac":"model1 = keras.Sequential()\nmodel1.add(keras.layers.Dense(8, activation='relu', input_shape=(8,)))\nmodel1.add(keras.layers.Dense(8, activation='relu'))\nmodel1.add(keras.layers.Dense(4, activation='relu'))\nmodel1.add(keras.layers.Dense(8, activation='relu'))\nmodel1.add(keras.layers.Dense(1))\n#optimizer=keras.optimizers.RMSprop(0.001)\nmodel1.compile(optimizer='adam',loss='mean_squared_error',metrics='mean_squared_error')","70ed3ee4":"model1.summary()","5a91f98a":"callback = tf.keras.callbacks.EarlyStopping(monitor='loss', patience=3)\nmodel1.fit(X_train1,y_train1,epochs=500,batch_size=20, callbacks=[callback])","f2481e06":"y_predict1= model1.predict(X_test1)","5046036f":"y_predict1","799c55ee":"y_test1.values","540b6243":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test1.values, y_predict1)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Neural Network Model Without Removing Outliers Values ')","a95ad689":"model2 = keras.Sequential()\nmodel2.add(keras.layers.Dense(8, activation='relu', input_shape=(8,)))\nmodel2.add(keras.layers.Dense(8, activation='relu'))\nmodel2.add(keras.layers.Dense(4, activation='relu'))\nmodel2.add(keras.layers.Dense(8, activation='relu'))\nmodel2.add(keras.layers.Dense(1))\n#optimizer=keras.optimizers.RMSprop(0.001)\nmodel2.compile(optimizer='adam',loss='mean_squared_error',metrics='mean_squared_error')","0b38498f":"callback = tf.keras.callbacks.EarlyStopping(monitor='loss', patience=3)\nmodel2.fit(X_train2,y_train2,epochs=500,batch_size=20, callbacks=[callback])","bb97fba5":"y_predict2= model2.predict(X_test2)","9e7536ac":"y_predict2","c2b8c9bb":"y_test2.values","d8609856":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test2.values, y_predict2)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Neural Network Model with Removing Outliers Values ')","d9593cb6":"#splitting feature \"median_income\"'longitude','latitude' to train set , and put \"median_house_value\" to test set\n#df_incomeX = df[['longitude','latitude','median_income']]\ndf_incomeX = df_outliers[['median_income']]\ndf_incomeY =df_outliers[['median_house_value']]\nX_train3, X_test3, y_train3, y_test3 = train_test_split(df_incomeX,df_incomeY, train_size=0.7)","44b8d060":"df_incomeX","2b2a15e9":"model3 = keras.Sequential()\nmodel3.add(keras.layers.Dense(8, activation='relu', input_shape=(1,)))\nmodel3.add(keras.layers.Dense(8, activation='relu'))\nmodel3.add(keras.layers.Dense(4, activation='relu'))\nmodel3.add(keras.layers.Dense(1))\n#optimizer=keras.optimizers.RMSprop(0.001)\nmodel3.compile(optimizer='adam',loss='mean_squared_error',metrics='mean_squared_error')","dca0502a":"model3.summary()","72e621cb":"callback = tf.keras.callbacks.EarlyStopping(monitor='loss', patience=3)\nmodel3.fit(X_train3,y_train3,epochs=500,batch_size=20, callbacks=[callback])","02e80f46":"y_predict3= model3.predict(X_test3)","224403c1":"y_predict3","c07ba1e9":"y_test3.values","82e62686":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test3.values, y_predict3)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Neural Network Model using \"Income\" Column')","a66b2a55":"#model2.save('Realtech_housing_prise.h5')","8e4c153e":"# if you want to load the model use this\n#old_model = keras.models.load_model('Realtech_housing_prise.h5')","6496d53f":"reg = LinearRegression()\nreg.fit(X_train1,y_train1)\nreg_predict1= reg.predict(X_test1)\nmean_squared_error(y_test1.values, reg_predict1)","a065b285":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test1.values, reg_predict1)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Linear Regression Model Without Removing Outliers Values')","d3073179":"\nreg2 = LinearRegression()\nreg2.fit(X_train3,y_train3)\nreg_predict2= reg2.predict(X_test3)\nmean_squared_error(y_test3.values,reg_predict2)","ea976849":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test3.values, reg_predict2)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Linear Regression Model using \"income\" Column Only')","8355f9f7":"\nreg3 = LinearRegression()\nreg3.fit(X_train2,y_train2)\nreg_predict3= reg3.predict(X_test2)\nmean_squared_error(y_test2.values,reg_predict3)","b7add8a3":"plt.figure(figsize=(15,8 ))\nplt.scatter(y_test2.values, reg_predict3)\nplt.xlabel('True house value')\nplt.ylabel('Predicted house value')\nplt.title('Linear Regression Model With Removing Outliers Values')","c5826489":"# = keras.models.load_model('\/content\/drive\/MyDrive\/Colab Notebooks\/Realtech_housing_prise\/Realtech_housing_prise.h5')","4c3fbf5c":"#df_test = pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/Realtech_housing_prise\/california_housing_test.csv')","f618c343":"#o = df_test.drop(columns=['median_house_value'])\n#p =df_test[['median_house_value']]","c8ac1e5a":"LinearRegression for all the data","32dcc681":"#### We noticd we have outliers values so we need to Remove it from our dataset ","04349ca2":"LinearRegression for only the median_income","54f16e95":"creating the model with four layers ","42e5e4ca":"### Step1: Importing the Necessary libraries and reading our data","5a6627f4":"### Now we will create another model without outliers data to see if it's worthy to drop that rows ","f2262d31":"### Step2: Data Cleaning \n#### Checking if our dataset has null or duplicated values or outliers","70597ef1":"### Step3:  **Predictive Analysis** ","d561c819":"## this has a beter result but still not that great so we go with LinearRegression\n","5b0df0fd":"#### We noticed that there is a specific area where the price is high ","9f60942f":"### Splitting the data into train and test set","73fba0f8":"### Fitting all train variables to the model","ba53927c":"creating the model with 5 layers ","477ca279":"#### We noticed a strong correlation between \"median_income\" and \"median_house_value\"feature. We'll explore this features further.","715db1ff":"Fitting three Variables: median_income , longitude , latitude  to the model","c00a5f26":"### we can save our model by using this code","b19cf6c9":"LinearRegression for all data after dropping outliers","671c3f04":"# Step4: Modeling And Splitting Our Data ","c7bd3711":"# LinearRegression","8e808eae":"mean squared error score","d4100592":"mean squared error score"}}