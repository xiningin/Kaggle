{"cell_type":{"712c935a":"code","6307e63a":"code","a8d0bd1f":"code","649d88e9":"code","b6f5a82f":"code","4488806b":"code","976a0c01":"code","304d82a0":"code","74b3c0d1":"code","cbcbba64":"code","4d776b3e":"code","5c612eaa":"code","24113644":"code","d0b5e7f1":"code","3cb4faf1":"code","c0d4c95e":"code","bc529b72":"code","7cb2c3ed":"code","84bce4b4":"code","580d2903":"code","cf3e016d":"code","d5872781":"code","47ba0003":"code","44c54d48":"code","d13f564a":"code","a0d8e1d2":"code","f1c8525c":"code","a703d1b8":"code","78c43aa2":"code","11a4f5be":"code","6f725bdb":"code","bf9ae762":"code","a4e98a22":"code","bf03a2d6":"code","67cfaced":"code","f34b3f47":"code","f135a7b4":"code","a129c975":"code","3bd63e4a":"code","35ba21f4":"code","3b71a414":"code","b0a1bbfa":"code","28d50bb8":"code","cb4ce106":"code","8af0e792":"code","75d53a50":"code","935dc705":"code","1ae2187c":"code","57a079a2":"code","d0444075":"code","802aaf2a":"code","d6e65205":"code","2e617fc9":"code","411ff01f":"code","d163925a":"markdown","30041ef3":"markdown","9d1e970b":"markdown","38c9648c":"markdown","1f92da64":"markdown","711c9266":"markdown","104fd2c6":"markdown","858243be":"markdown","4e102e8c":"markdown","6ac08ddd":"markdown","0243b425":"markdown","467de763":"markdown","1602fd74":"markdown","519db5bf":"markdown","38ba3954":"markdown","fa2b718f":"markdown","bbf025fb":"markdown","29fb391f":"markdown","da20510a":"markdown","e498d630":"markdown","57afa350":"markdown","c5f8b441":"markdown","69cd6d48":"markdown","b7d604f9":"markdown"},"source":{"712c935a":"import pandas as pd \nimport numpy as np\nfrom pathlib import Path\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom tqdm.notebook import tqdm\ntqdm.pandas()","6307e63a":"csv_file = Path('..\/input\/calculating-number-of-pixels-for-change-in-masks\/annotations.csv')\nroot_dir = Path('..\/input\/spacenet-7-change-detection-chips-and-masks\/chip_dataset\/change_detection')","a8d0bd1f":"df = pd.read_csv(csv_file)","649d88e9":"df.head()","b6f5a82f":"df['target'].value_counts()","4488806b":"groups = df.groupby('im_name')","976a0c01":"def get_stats_df(groups):\n    stats_dict = {\n        'location_names' : [],\n        'percent_change' : [],\n        'pxl_median' : [],\n        'pxl_mean' : [],\n        'pxl_std' : [],\n    }\n\n    for group in groups:\n        name = group[0]\n        n_change = group[1]['is_blank'].isna().sum()\n        n_total = len(group[1])\n        percent_change = n_change\/n_total*100\n        # the median number of pixels that change when there is change\n        pixel_median = group[1][group[1]['is_blank']!='blank']['n_change_pix'].median()\n        pixel_mean = group[1][group[1]['is_blank']!='blank']['n_change_pix'].mean()\n        pixel_std = group[1][group[1]['is_blank']!='blank']['n_change_pix'].std()\n\n        stats_dict['location_names'].append(name)\n        stats_dict['percent_change'].append(int(percent_change))\n        stats_dict['pxl_median'].append(int(pixel_median))\n        stats_dict['pxl_mean'].append(int(pixel_mean))\n        stats_dict['pxl_std'].append(int(pixel_std))\n    \n    stats_df = pd.DataFrame(stats_dict)\n    \n    return stats_df","304d82a0":"stats_df = get_stats_df(groups)","74b3c0d1":"stats_df.head()","cbcbba64":"stats_df.describe()","4d776b3e":"def plot_mean_and_std(stats_df):\n    fig = go.Figure()\n\n    fig.add_trace(go.Bar(x=stats_df['location_names'],\n                    y=stats_df['pxl_mean'],\n                    name='Mean',\n                    marker_color='rgb(122,81,149)'\n                    ))\n\n    fig.add_trace(go.Bar(x=stats_df['location_names'],\n                    y=stats_df['pxl_std'],\n                    name='Standard Deviation',\n                    marker_color='rgb(239,86,117)'\n                    ))\n\n    fig.update_layout(\n        title='Pixel Statistics per Satellite Image Location',\n        xaxis=dict(\n            title='Satellite Images Location ID',\n            titlefont_size=16,\n            tickfont_size=14,\n        ),\n        yaxis_tickfont_size=14,\n\n        legend=dict(\n            x=0,\n            y=1.0,\n            bgcolor='rgba(255, 255, 255, 0)',\n            bordercolor='rgba(255, 255, 255, 0)'\n        ),\n\n        barmode='group',\n        bargap=0.2, # gap between bars of adjacent location coordinates.\n        bargroupgap=0.01 # gap between bars of the same location coordinate.\n    )\n    fig.show()","5c612eaa":"plot_mean_and_std(stats_df)","24113644":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=stats_df['location_names'],\n                y=stats_df['pxl_median'],\n                name='Median',\n                marker_color='rgb(122,81,149)'\n                ))\n\nfig.update_layout(\n    title='Median Number of Change Pixels per Satellite Image Location',\n    xaxis=dict(\n        title='Satellite Images Location ID',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    yaxis_tickfont_size=14,\n    \n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    \n    barmode='group',\n    bargap=0.2, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.01 # gap between bars of the same location coordinate.\n)\nfig.show()","d0b5e7f1":"def plot_median_pixel_change_and_percentage_change(labels,percent_changes,pixel_medians,title=None):\n    fig = go.Figure()\n    if title is None:\n        title = 'Median Number of Change Pixels and Percentage Change Per Location Combined'\n    else:\n        title = 'Median Number of Change Pixels and Percentage Change Per Location Combined ' + title\n        \n    fig.add_trace(go.Bar(x=labels,\n                    y=percent_changes,\n                    name='Percentage',\n                    marker_color='rgb(255,166,0)'\n                    ))\n\n    fig.add_trace(go.Bar(x=labels,\n                    y=pixel_medians,\n                    name='Median',\n                    marker_color='rgb(122,81,149)'\n                    ))\n\n    fig.update_layout(\n        title=title,\n        xaxis=dict(\n            title='Satellite Images Location ID',\n            titlefont_size=16,\n            tickfont_size=14,\n        ),\n        yaxis_tickfont_size=14,\n\n        legend=dict(\n            x=0,\n            y=1.0,\n            bgcolor='rgba(255, 255, 255, 0)',\n            bordercolor='rgba(255, 255, 255, 0)'\n        ),\n\n        barmode='group',\n        bargap=0.2, # gap between bars of adjacent location coordinates.\n        bargroupgap=0.01 # gap between bars of the same location coordinate.\n    )\n    fig.show()","3cb4faf1":"plot_median_pixel_change_and_percentage_change(stats_df['location_names'],stats_df['percent_change'],stats_df['pxl_median'])","c0d4c95e":"def filter_by_median_and_percentage_change(df,median_thresh=10,percentage_thresh=10):\n    _filter = (df['pxl_median'] > median_thresh) & (df['percent_change'] > percentage_thresh)\n    df_filtered = df[_filter].reset_index(drop=True)\n    return df_filtered","bc529b72":"filtered_df = filter_by_median_and_percentage_change(stats_df)","7cb2c3ed":"stats_df.describe()","84bce4b4":"filtered_df.describe()","580d2903":"filtered_df.head()","cf3e016d":"filtered_df.head()","d5872781":"plot_median_pixel_change_and_percentage_change(filtered_df['location_names'],filtered_df['percent_change'],filtered_df['pxl_median'])","47ba0003":"filtered_df['percent_change'].median()","44c54d48":"filtered_df.describe()","d13f564a":"def categorize_df(df,hm=28,hp=35,lm=14,lp=14):\n    '''\n    df: DataFrame\n    hm: High Median Threshold\n    hp: High Change Percentage Threshold\n    lm: Low Median Threshold\n    lp: Low Change Percentage Threshold\n    '''\n    median = df['pxl_median']\n    percentage = df['percent_change']\n    \n    if (median > hm) and (percentage > hp):\n        df['type'] = 'hmhp'\n    elif (median > hm) and (percentage < lp):\n        df['type'] = 'hmlp'\n    elif (median < lm) and (percentage < lp):\n        df['type'] = 'lmlp'\n    elif (median < lm) and (percentage > hp):\n        df['type'] = 'lmhp'\n    elif (lm < median < hm) and (lp < percentage < hp):\n        df['type'] = 'mmmp'\n    else:\n        df['type'] = 'other'\n    \n    return df","a0d8e1d2":"stats_df.head()","f1c8525c":"stats_df = stats_df.progress_apply(lambda x: categorize_df(x),axis=1)","a703d1b8":"other_df = stats_df[stats_df['type'] == 'other']\nhmlp_df = stats_df[stats_df['type'] == 'hmlp']\nlmlp_df = stats_df[stats_df['type'] == 'lmlp']\nmmmp_df = stats_df[stats_df['type'] == 'mmmp']\nhmhp = stats_df[stats_df['type'] == 'hmhp']","78c43aa2":"plot_median_pixel_change_and_percentage_change(other_df.index.astype(str),other_df['percent_change'],other_df['pxl_median'], title='(Other)')","11a4f5be":"plot_median_pixel_change_and_percentage_change(hmlp_df.index.astype(str),hmlp_df['percent_change'],hmlp_df['pxl_median'],title='(High Median, Low Percentage)')","6f725bdb":"plot_median_pixel_change_and_percentage_change(lmlp_df.index.astype(str),lmlp_df['percent_change'],lmlp_df['pxl_median'],title='(Low Median, Low Percentage)')","bf9ae762":"plot_median_pixel_change_and_percentage_change(hmhp.index.astype(str),hmhp['percent_change'],hmhp['pxl_median'],title='(High Median, High Percentage)')","a4e98a22":"plot_median_pixel_change_and_percentage_change(mmmp_df.index.astype(str),mmmp_df['percent_change'],mmmp_df['pxl_median'], title='(Mid Median, Mid Percentage)')","bf03a2d6":"# df only containing images with change in them\ndf_change = df[df['is_blank'] != 'blank'].reset_index(drop=True)\n# extracting on necessary columns\ndf_pix = df_change.loc[:,['im_name','im_dates','period_1','period_2','n_change_pix','month_diff']]","67cfaced":"df_pix['n_change_pix'].describe()","f34b3f47":"fig = px.box(df_change[df_change['n_change_pix'] < 180], y=\"n_change_pix\")\n\nfig.update_layout(\n    title='Distribution of Number of Pixels Containing Change\\n Threshold: 180',\n    xaxis_title=\"\",\n    yaxis_title=\"Number of Pixels Containing Change\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","f135a7b4":"fig = px.histogram(df_change[df_change['n_change_pix'] < 180], x=\"n_change_pix\", nbins=100)\n\nfig.update_layout(\n    title='Distribution of Number of Pixels Containing Change\\n Threshold: 180',\n    xaxis_title=\"Number of Pixels Containing Change\",\n    yaxis_title=\"Count\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","a129c975":"df_pix_months = df_pix.groupby('month_diff')","3bd63e4a":"month = []\nmonth_image_counts = []\nfor gp in df_pix_months:\n    month.append(gp[0])\n    month_image_counts.append(len(gp[1]))","35ba21f4":"fig = px.bar(x=month, y=month_image_counts)\n\nfig.update_layout(\n    title='Number of Images Containing Change vs Difference in Number of Months',\n    xaxis_title=\"Difference in Number of Months\",\n    yaxis_title=\"Total Number of Images Containing Change\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","3b71a414":"def plot_monthly_change_statistics(df_pix,threshold=None):\n    if threshold is not None:\n        df_pix_filtered = df_pix[df_pix['n_change_pix'] < threshold].reset_index(drop=True)\n        title = \"Number of Pixels Containing Change vs Difference in Number of Months \\nThreshold: \" + str(threshold)\n    else:\n        df_pix_filtered = df_pix\n        title = \"Number of Pixels Containing Change vs Difference in Number of Months\"\n        \n    df_pix_months = df_pix_filtered.groupby('month_diff')\n    fig = go.Figure()\n\n    for gp in df_pix_months:\n      fig.add_trace(go.Box(y=gp[1]['n_change_pix'].values, name=gp[0]))\n\n    fig.update_layout(\n        title=title,\n        xaxis_title=\"Difference in Number of Months\",\n        yaxis_title=\"Number of Pixels Containing Change\",\n        font=dict(\n            family=\"Courier New, monospace\",\n            size=18,\n            color=\"#7f7f7f\"\n        )\n    )\n    fig.show()","b0a1bbfa":"plot_monthly_change_statistics(df_pix)","28d50bb8":"plot_monthly_change_statistics(df_pix,threshold=850)","cb4ce106":"plot_monthly_change_statistics(df_pix,threshold=150)","8af0e792":"valid_indices = [2,22,17,39,43]","75d53a50":"location_names = stats_df['location_names']","935dc705":"valid_names = location_names.iloc[valid_indices]\nvalid_names","1ae2187c":"valid_df_mask = df['im_name'].progress_map(lambda x: True if x in valid_names.values else False)","57a079a2":"train_df_mask = ~valid_df_mask","d0444075":"train_df_mask.value_counts()","802aaf2a":"valid_df_mask.value_counts()","d6e65205":"train_df = df[train_df_mask].reset_index(drop=True)\ntrain_df","2e617fc9":"valid_df = df[valid_df_mask].reset_index(drop=True)\nvalid_df","411ff01f":"valid_df.to_csv('valid_csv.csv',index=False)\ntrain_df.to_csv('train_csv.csv',index=False)","d163925a":"## Visualizing Number of Pixels Containing Change\n### BoxPlot of Number of Pixels Containing Change\nLet's visualize the Number of by plotting a box plot. This box plot will have a threshold of 180 pixels. This means that any images containing more more than 180 pixels of change will not be part of the summary statistics. The reason for this is that I am considering any number greater than 180 as an outlier.","30041ef3":"## Import Dependencies","9d1e970b":"## Grouping our Dataset by Date\nNow lets group our dataset by the month in which the image was taken in. The number of pixels containing change in our masks varies with the number of months apart that the satellite images were captured in. \n\nLet's simplify things by starting with isolating the part of the dataframe that we are only interested in, by extracting the necessary columns.","38c9648c":"Finally we can use the dfs above directly in our future notebooks as inputs.","1f92da64":"Now that we have a better understanding of our dataset, let's use the summary statistics from our filtered df to categorize our original dataset into groups. \n\nWe will group our dataset based on the interquartile ranges of the filtered dataframe:\n\n* High Mean, High Percentage Change\n* High Mean, Low Percentage Change\n* Low Mean, High Percentage Change\n* Low Mean, Low Percentage Change\n* Mid Mean, Mid Percentage Change\n\nWe will add a column, to our existing dataframe, specifying which category the belongs to location belongs to.","711c9266":"### Extracting Location Statistics\nBelow we loop over all the groups, and extract some important statistics. These statistics include:\n\n* Percentage Change\n* Pixel Medians\n* Pixel Means\n* Pixel Standard Deviations","104fd2c6":"## Reading Annotations CSV File","858243be":"Below we create a simple mask by looping over the names column of our dataframe and ensuing that they are part othe names we extracted earlier.","4e102e8c":"### Number of Images Containing Change vs Difference in Number of Months\nLet's visualize the distribution of the number of images containing change to the number of months between the 2 images.","6ac08ddd":"## Loading Paths\nLet's load the paths to our files and directories below.","0243b425":"## Grouping Our Dataset by Location\nFirst of all we start by grouping our dataset by location. This will help see, whether different locations have different amounts of change, and whether the number of pixels varies from location to location. \n\nIn order to do that, we will be using the updated csv file that we created in our [previous notebook](https:\/\/www.kaggle.com\/amerii\/calculating-number-of-pixels-for-change-in-masks), in which we extracted the change in pixels metadata for each pair of images.","467de763":"### Distribution of Number Of Pixels Containing Change","1602fd74":"Let's create a helper function below to help us visualize how the number of images containing change relates to the median number of pixels that change within that location.","519db5bf":"Let's start by returning the names of the validation set based on the indices that we extracted earlier.","38ba3954":"## Visualizations","fa2b718f":"We can tell from our plots that our images have a high variance when it comes to the distribution of number of pixels that change per chip. Let's have a look at our medians instead so we can get a clearer idea of what's going on.","bbf025fb":"# SpaceNet 7 Dataset Exploratory Data Analysis and Training and Validation Split\n\nBefore we split our dataset let's explore how are data is distributed. We will mainly focus on exploring whether there is change or no change in the image. Furthermore, if there is change in the image we would like to know how much change we have in our chips. \n\nIt is important to understand the dataset we are analyzing is in fact the chips dataset, so the numbers for the original unsegmented dataset will differ. Another thing to keep in mind, is that if we end up changing the dimensions of our segmented chips then the analysis below will also differ.","29fb391f":"### Analysis\nNotice how some of our locations can only have up to 1 percent of the chips containing locations, furthermore we also have some locations that have a median pixel change of 4, that means that most of the chips barely contain any change.\n\nLet's create a plot and try and visualize the statistics for each location.","da20510a":"Below we create a helper function that allows us to filter our dataframe based on the median and the number of images containing the change. ","e498d630":"### Comparing Original_df and Filtered_df stats","57afa350":"### Number of Pixels Containing Change vs Difference in Number of Months\nIn the previous plot we visualized how the `number of images` containing change varies with the number of months between the 2 images. In plot below we ask ourselves: Do the number of months between the 2 images affect the `number of pixels` containing change? \n\nIt would make sense, that as the number of months increases between the 2 images, then the number of change pixels, will most likely increase as well.\n\nLet's have a look at the distribution below with various thresholds; first the entire dataset, second at 850 pixels threshold, third at 150 pixels threshold.","c5f8b441":"## Saving the Output CSVs","69cd6d48":"Notice how the median and the variance vary as we increase the number of months between our images. This important to consider when training our model. Our model is more likely to perform better on images containing a higher number of pixels denoting change. \n\nNow that we added these extra columns, we can translate this new knowledge directly into our evaluation metrics to see where our model performs well and where it performs poorly.\n\nOne of the possible reasons that we our data varied so much when we grouped by location, is because we didn't account for the monthly change. As difference in number of months grows between the images, the more likely we are to see higher number of pixels change.","b7d604f9":"## Splitting Dataset to Training and Validation Sets\nNow that we have visualized how our datasets look like, let us manually choose the indices of the locations that we would like to have in our validation set. With our new found information, we will now split our data based on the location.\n\nWhen splitting our dataset we would ideally like to make it as representitive as the real data as possible, therefore we will split based on the categories that we obtained earlier. We will choose one from each so we can make sure that our training and validation data are atleast from the same distribution when it comes to the amount of change and per location and the number of pixels that change if change exists.\n\nThe indices below are the indices found in the location plots that we plotted earlier."}}