{"cell_type":{"0ad42072":"code","3a2c3be3":"code","6a373898":"code","a3673f80":"code","45745719":"code","baebc3de":"code","34647534":"code","3d4d4267":"code","d7c60bb0":"code","57c4116b":"code","57583fd2":"code","fcb20050":"code","02aa5e0d":"markdown"},"source":{"0ad42072":"# Import the necessary libraries\n\n# TensorFlow and tf.keras\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# Helper libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom os import listdir\nfrom os.path import join\nimport cv2\nimport pandas\nimport os\nimport random","3a2c3be3":"# Set the path of the input folder \n\ndata = \"..\/input\/flowers\/flowers\/\"\n\n# List out the directories inside the main input folder\n\nfolders = os.listdir(data)\n\nprint(folders)","6a373898":"# Import the images and resize them to a 128*128 size\n# Also generate the corresponding labels\n\nimage_names = []\ntrain_labels = []\ntrain_images = []\n\nsize = 64,64\n\nfor folder in folders:\n    for file in os.listdir(os.path.join(data,folder)):\n        if file.endswith(\"jpg\"):\n            image_names.append(os.path.join(data,folder,file))\n            train_labels.append(folder)\n            img = cv2.imread(os.path.join(data,folder,file))\n            im = cv2.resize(img,size)\n            train_images.append(im)\n        else:\n            continue\n      ","a3673f80":"# Transform the image array to a numpy type\n\ntrain = np.array(train_images)\n\ntrain.shape","45745719":"# Reduce the RGB values between 0 and 1\n\ntrain = train.astype('float32') \/ 255.0","baebc3de":"# Extract the labels\n\nlabel_dummies = pandas.get_dummies(train_labels)\n\nlabels =  label_dummies.values.argmax(1)","34647534":"pandas.unique(train_labels)","3d4d4267":"pandas.unique(labels)","d7c60bb0":"# Shuffle the labels and images randomly for better results\n\nunion_list = list(zip(train, labels))\nrandom.shuffle(union_list)\ntrain,labels = zip(*union_list)\n\n# Convert the shuffled list to numpy array type\n\ntrain = np.array(train)\nlabels = np.array(labels)","57c4116b":"# Develop a sequential model using tensorflow keras\n\nmodel = keras.Sequential([\n    keras.layers.Flatten(input_shape=(64,64,3)),\n    keras.layers.Dense(128, activation=tf.nn.tanh),\n    keras.layers.Dense(5, activation=tf.nn.softmax)\n])","57583fd2":"# Compute the model parameters\n\nmodel.compile(optimizer=tf.train.AdamOptimizer(), \n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","fcb20050":"# Train the model  with 5 epochs \n\nmodel.fit(train,labels, epochs=5)","02aa5e0d":" **This is an interesting dataset for building Deep Learning Neural Networks. here we use tensorflow keras API to form the model.**"}}