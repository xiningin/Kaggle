{"cell_type":{"aefe1295":"code","46473a43":"code","385d0cb6":"code","c1cf4da1":"code","f613c298":"code","929bf57b":"code","995aa834":"code","55b8d9d9":"code","1906f79d":"code","fb5dd0d6":"code","1d87ab5f":"code","663d4e26":"code","e45028c3":"code","e2682203":"code","a71155ea":"code","79300393":"code","f325b677":"code","c38587ce":"code","d988bd50":"code","8f3eea23":"code","284fd254":"code","1b533247":"code","3dc8df5b":"code","d0e8d0e2":"code","e3da5276":"code","bd285472":"code","71b90005":"code","06f205da":"code","489b1f1c":"code","d28246c1":"markdown","0a7cae83":"markdown","3e4fcbc3":"markdown","4ce34afd":"markdown","0ee1b170":"markdown","5f310226":"markdown","f2520ef5":"markdown","fa470209":"markdown","b7125aa7":"markdown","abf4c481":"markdown","67d307ea":"markdown","ca899f46":"markdown","2a667083":"markdown","ff027277":"markdown","d242b6cd":"markdown","f397cba9":"markdown","1a6b9f1d":"markdown","24c83f63":"markdown","2e67ec3f":"markdown","691e55df":"markdown","b4931b3b":"markdown","3734e363":"markdown","9a8f5aac":"markdown","4a41f16a":"markdown","9c85092b":"markdown","e71b02e6":"markdown","71059405":"markdown","6b2356f2":"markdown","f342d018":"markdown","d0f4f38a":"markdown","b279915e":"markdown","67e06874":"markdown","8c0b118c":"markdown"},"source":{"aefe1295":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npokemon = pd.read_csv(\"..\/input\/pokemon\/pokemon.csv\")\npokemon.head()","46473a43":"pokemon.type1.value_counts().plot.bar()","385d0cb6":"pokemon.hp.value_counts().sort_index().plot.line()","c1cf4da1":"pokemon.weight_kg.plot.hist()","f613c298":"pokemon.plot.scatter(x='defense', y='attack')","929bf57b":"pokemon.plot.hexbin(x='defense', y='attack', gridsize=15)","995aa834":"pokemon_stats_legendary = pokemon.groupby(['is_legendary', 'generation']).mean()[['attack', 'defense']]","55b8d9d9":"pokemon_stats_legendary.plot.bar(stacked=True)","1906f79d":"pokemon_stats_by_generation = pokemon.groupby('generation').mean()[['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed']]","fb5dd0d6":"pokemon_stats_by_generation.plot.line()","1d87ab5f":"pokemon.plot.scatter(x='defense', \n                     y='attack', \n                     figsize=(12,6))","663d4e26":"my_plot = pokemon.base_total.plot.hist(figsize=(12,6),\n                             color='gray',\n                             fontsize=16,\n                             bins=50)\n\nmy_plot.set_title('Density by base total', fontsize=20)","e45028c3":"my_plot = pokemon.type1.value_counts().plot.bar(figsize=(12,6),\n                                                fontsize=14)\n\nmy_plot.set_title('Pokemon by primary type', fontsize=20)\nsns.despine(bottom=True,\n            left=True)","e2682203":"fig, axarr = plt.subplots(2, 1, figsize=(8,8))","a71155ea":"fig, axarr = plt.subplots(2, 1, figsize=(8,8))\npokemon.defense.plot.hist(ax=axarr[0], bins=40)\naxarr[0].set_title('Defense frequency', fontsize=14)\npokemon.attack.plot.hist(ax=axarr[1], bins=40)\naxarr[1].set_title('Attack frequency', fontsize=14)","79300393":"sns.countplot(pokemon.generation)","f325b677":"sns.distplot(pokemon.hp)","c38587ce":"sns.jointplot(x=pokemon.attack, y=pokemon.defense)","d988bd50":"sns.jointplot(x=pokemon.attack, y=pokemon.defense, kind='hex')","8f3eea23":"sns.kdeplot(pokemon.hp, pokemon.attack, shade=True)","284fd254":"sns.boxplot(x=pokemon.is_legendary, y=pokemon.attack)","1b533247":"sns.violinplot(x=pokemon.is_legendary, y=pokemon.attack)","3dc8df5b":"grid = sns.FacetGrid(pokemon, row='is_legendary')\ngrid.map(sns.kdeplot, 'attack')","d0e8d0e2":"grid = sns.FacetGrid(pokemon, col='is_legendary', row='generation')\ngrid.map(sns.kdeplot, 'attack')","e3da5276":"sns.pairplot(pokemon[['hp', 'attack', 'defense']])","bd285472":"sns.lmplot(x='attack', y='defense', hue='is_legendary', fit_reg=False, data=pokemon, markers = ['x', 'o'])","71b90005":"sns.boxplot(x='generation', y='base_total', hue='is_legendary', data=pokemon)","06f205da":"sns.heatmap(pokemon.loc[:,['hp', 'attack', 'sp_attack', 'defense', 'sp_defense', 'speed']].corr(), annot=True)","489b1f1c":"from pandas.plotting import parallel_coordinates\ndf = pokemon[pokemon.type1.isin(['fighting', 'psychic'])].loc[:, ['type1', 'attack', 'sp_attack', 'defense', 'sp_defense']]\nparallel_coordinates(df, 'type1', colors=['violet', 'blue'])","d28246c1":"1. Create a 2x1 grid of size 8x8","0a7cae83":"**IV. Plotting in Seaborn**","3e4fcbc3":"6. Show attack frequency for different types of Legendary property (using a Seaborn box plot and violin plot)  \n  \n*Hint: the column names are 'attack' and 'is_legendary'*","4ce34afd":"2. Defense-Attack relation (using a Hex plot):  \n  \n*Hint: the column names are 'defense' and 'attack'*","0ee1b170":"III. Subplots","5f310226":"3. For each combination of the following Pokemon qualities:  \n    * Legendary (2 possible values), and \n    * Generation (7 possible values)  \n  \nshow average Attack and Defense level (using a Stacked bar chart)  \n  \n*Hint: the column names are 'defense', 'attack', 'is_legendary' and 'generation'*","f2520ef5":"3. The frequency of Pokemon by weight (using a histogram):  \n  \n*Hint: the column name is 'weight_kg'*","fa470209":"1. Represent the frequency of each Pokemon generation (using a Seaborn barchart)","b7125aa7":"**VI. Multivariate plotting**","abf4c481":"1. The frequency of Pokemon by type (using a bar chart):  \n  \n*Hint: the column name is 'type1'*","67d307ea":"3. Compare in a pair-like manner parameters: Hit Points, Attack, Defense (using a Seaborn Pairplot)","ca899f46":"2. Same as before, but should have separate plots for each of the legendary levels (horizontal grid) and  generation (vertical grid)","2a667083":"**II. Bivariate plotting with Pandas**","ff027277":"1. Increase the size of a scattered plot (defense vs. attack for each Pokemon)","d242b6cd":"1. Build separate KDE plots for Attack frequency (for each of the legendary levels)","f397cba9":"2. Represent density of Hit Points in a Pokemon set (using a Seaburn histogram with KDE line)","1a6b9f1d":"4. Same as before, but should include a hex plot instead of a scatter plot","24c83f63":"3. Create a Seaborn heatmap representing correlation between parameters: Hit Points, Attack, Special Attack, Defense, Special Defense, Speed","2e67ec3f":"3. Increase the size of a bar chart (representing Pokemon frequency by Primary type), add title, increase font for both title and axis, and delete plot borders  \n  \n*Hint: the column name is 'type1'*","691e55df":"This is an editable version of a kernel containing all exercises on Data Visualization course on Kaggle (using Pandas and Seaborn).  \nYou can find the course itself on this [link:](https:\/\/www.kaggle.com\/learn\/data-visualization)  \nYou can unhide the fields to see the source code for each plot, or fork the kernel to try it yourself","b4931b3b":"4. For each of the following properties: \n    * hit points, \n    * attack level, \n    * defense level, \n    * special attack level, \n    * special defense level, \n    * speed\n  \nbuild a chart showing how frequency of such property depends on the Pokemon generation (using a Bivariate Line Chart)  \n  \n*Hint: the column names are 'hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed' and 'generation'*","3734e363":"2. Increase the size of a histogram representing 'Total strength' density over the whole set of Pokemons, change bucket color, add plot title, increase font for both title and axis, and set the number of bins  \n  \n*Hint: the column name is 'base_total'*","9a8f5aac":"**V. Faceting in Seaborn**","4a41f16a":"**III. Styling the plots**","9c85092b":"2. Show total score statistics for each generation (using in a boxplot), where different color stand for different legendary level","e71b02e6":"2. Visualize defense frequency and attack frequency (using histograms) on 2x1 grid and create titles for both","71059405":"1. Build Attack - Defense scatter plot for the whole dataset using different markers for different legendary levels (in terms of color and shape)","6b2356f2":"**I. Univariate plotting with Pandas (exercises)**","f342d018":"2. The frequency of hit points for a whole set (using a line chart):  \n  \n*Hint: the column name is 'hp'*","d0f4f38a":"3. Create a joint plot (scatter and individual histograms) representing Attack-Defense level relation for the whole dataset","b279915e":"1. Defense level - Attack level relation for each pokemon (using a scatter plot):  \n  \n*Hint: the column names are 'defense' and 'attack'*","67e06874":"4. Use parallel coordinates to represent each value of several qualities (attack, special attack, defense, special defense) where different types of Pokemon stand for a different line color (here, we consider only Fighting and Psychic types)","8c0b118c":"5. Relation of Hit Points-Attack level in a dataset (using a Seaborn 2D kde plot)"}}