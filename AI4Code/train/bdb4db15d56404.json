{"cell_type":{"578e92be":"code","dd286adf":"code","4956a792":"code","c2779366":"code","85db8bcb":"code","e3f91795":"code","01486d28":"code","050e2254":"code","e9a8fa3c":"code","ccb99368":"code","55e3fdba":"code","2b57179e":"code","925bbab3":"code","7f7c2dbc":"code","a0c38c32":"code","01b2d30b":"code","45e60a75":"code","d41314db":"code","30943589":"code","32a1beb4":"code","c1206cfc":"code","0161abc1":"code","313bea42":"code","492c78a6":"code","f957ed02":"code","6f9cc62d":"code","0825812f":"code","46fd8f09":"code","1fe5be4e":"code","efe81a0d":"code","00c9fbfb":"code","06f248b6":"code","bda07301":"code","66120784":"code","73e89799":"code","d5fe3b21":"code","56966761":"code","30a13540":"code","4580009a":"code","138b0feb":"code","46cdffc5":"code","02b75c04":"code","294f54c3":"code","ff46a1f8":"code","7e86695a":"code","9502dd25":"code","284d4e7e":"code","02b2b5f7":"code","c2cd12c1":"code","99f6f924":"code","c0205e01":"code","68863dce":"code","b6b49182":"code","87750130":"code","b0b64a35":"code","49cda820":"code","88c4e745":"code","f892c1b5":"code","aafc8b32":"code","5a98bdee":"code","938a1511":"code","96de267d":"code","09a7f9b1":"code","48d28cfc":"code","73813474":"code","04a8cac2":"code","32fdf9a4":"code","641220b8":"code","4277465a":"markdown","e7a3156f":"markdown","0a54e13b":"markdown","f213d727":"markdown","1db39143":"markdown","3757aebd":"markdown","edbabad5":"markdown","ceceb34d":"markdown","d1fab84e":"markdown","10c6f27a":"markdown","ccae9d87":"markdown","b5b994ec":"markdown","39f82e6b":"markdown","a020f70f":"markdown","5cdf50db":"markdown","24926b34":"markdown"},"source":{"578e92be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dd286adf":"#read datas\nPercentage_People_Below_Poverty_Level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv',encoding=\"windows-1252\")\nPolice_Killings_US = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv',encoding=\"windows-1252\")\nPercent_Over_25_Completed_HighSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv',encoding=\"windows-1252\")\nShare_Race_By_City = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv',encoding=\"windows-1252\")","4956a792":"Percentage_People_Below_Poverty_Level.head()","c2779366":"Percentage_People_Below_Poverty_Level.info()","85db8bcb":"Percentage_People_Below_Poverty_Level.poverty_rate.value_counts()","e3f91795":"Percentage_People_Below_Poverty_Level.poverty_rate.replace([\"-\"],0.0,inplace = True) # we fixed the meaningless value.","01486d28":"#Percentage_People_Below_Poverty_Level.poverty_rate.value_counts()","050e2254":"Percentage_People_Below_Poverty_Level.poverty_rate = Percentage_People_Below_Poverty_Level.poverty_rate.astype(float)\n# we changed type of poverty_rate from object(str) to float.","e9a8fa3c":"#Percentage_People_Below_Poverty_Level.info()","ccb99368":"Percentage_People_Below_Poverty_Level['Geographic Area'].unique()","55e3fdba":"area_list = list(Percentage_People_Below_Poverty_Level['Geographic Area'].unique()) #we get a list of unique states\narea_poverty_ratio = list() # we created a list for ratio of each state","2b57179e":"for i in area_list:  # we're in our unique state list\n    area_filter = Percentage_People_Below_Poverty_Level[Percentage_People_Below_Poverty_Level['Geographic Area'] == i]\n    area_poverty_rate = sum(area_filter.poverty_rate)\/len(area_filter)\n    area_poverty_ratio.append(area_poverty_rate)","925bbab3":"data = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values #we sorted the poverty ratio values and get an index values array.\nsorted_data = data.reindex(new_index) #with new_index array(sorted index values) we sorted the data\n","7f7c2dbc":"#visualization part (barplot)\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'],y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation = 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","a0c38c32":"Police_Killings_US.head()","01b2d30b":"Police_Killings_US.name.value_counts() # we can see, 'TK TK' is most probably a broken value so we must ignore it.","45e60a75":"separated_names = Police_Killings_US.name[Police_Killings_US.name != 'TK TK'].str.split() \n#we separated the names and surnames\nnames,surnames= zip(*separated_names)\nnamelist = names+surnames\nname_count = Counter(namelist)\nmost_common_names = name_count.most_common(15)\nname,count = zip(*most_common_names)\nname,count = list(name),list(count)","d41314db":"#visualization part\nplt.figure(figsize=(15,10))\nax= sns.barplot(x=name, y=count,palette = sns.cubehelix_palette(len(names)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","30943589":"Percent_Over_25_Completed_HighSchool.head()","32a1beb4":"Percent_Over_25_Completed_HighSchool.info()","c1206cfc":"Percent_Over_25_Completed_HighSchool.percent_completed_hs.value_counts()","0161abc1":"Percent_Over_25_Completed_HighSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)","313bea42":"#Percent_Over_25_Completed_HighSchool.percent_completed_hs.value_counts()","492c78a6":"Percent_Over_25_Completed_HighSchool.percent_completed_hs = Percent_Over_25_Completed_HighSchool.percent_completed_hs.astype(float)","f957ed02":"#Percent_Over_25_Completed_HighSchool.info()","6f9cc62d":"area_list = list(Percent_Over_25_Completed_HighSchool['Geographic Area'].unique())\ncompleted_hs_ratio = list()","0825812f":"for i in area_list:\n    filter2 = Percent_Over_25_Completed_HighSchool[Percent_Over_25_Completed_HighSchool['Geographic Area'] == i]\n    ratio_of_completed_hs = sum(filter2.percent_completed_hs)\/len(filter2)\n    completed_hs_ratio.append(ratio_of_completed_hs)","46fd8f09":"#sorting\ndata = pd.DataFrame({'area_list': area_list,'completed_hs_ratio':completed_hs_ratio})\nnew_index = (data['completed_hs_ratio'].sort_values(ascending=False)).index.values #we sorted the completed highschool ratio values and get an index values array.\nsorted_data2 = data.reindex(new_index) #with new_index array(sorted index values) we sorted the data","1fe5be4e":"#visualization part\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'],y=sorted_data2['completed_hs_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","efe81a0d":"Share_Race_By_City.head()","00c9fbfb":"Share_Race_By_City.replace(['-'],0.0,inplace = True)\nShare_Race_By_City.replace(['(X)'],0.0,inplace = True)","06f248b6":"Share_Race_By_City.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = Share_Race_By_City.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)","bda07301":"area_list = list(Share_Race_By_City['Geographic area'].unique())\nshare_black = list()\nshare_white = list()\nshare_asian = list()\nshare_native_american = list()\nshare_hispanic = list()","66120784":"for i in area_list:\n    area_filter = Share_Race_By_City[Share_Race_By_City['Geographic area']==i]\n    share_white.append(sum(area_filter.share_white)\/len(area_filter))\n    share_black.append(sum(area_filter.share_black)\/len(area_filter))\n    share_asian.append(sum(area_filter.share_asian)\/len(area_filter))\n    share_native_american.append(sum(area_filter.share_native_american)\/len(area_filter))\n    share_hispanic.append(sum(area_filter.share_hispanic)\/len(area_filter))","73e89799":"# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","d5fe3b21":"# high school graduation rate vs Poverty rate of each state\n#normalization\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max(sorted_data['area_poverty_ratio'])\nsorted_data2['completed_hs_ratio'] = sorted_data2['completed_hs_ratio']\/max(sorted_data2['completed_hs_ratio'])","56966761":"data = pd.concat([sorted_data,sorted_data2['completed_hs_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\ndata.head()","30a13540":"#visualization\nf,ax1 = plt.subplots(figsize=(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color = 'lime',alpha=0.8)\nsns.pointplot(x='area_list',y='completed_hs_ratio',data=data,color = 'red',alpha=0.8)\nax1.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nax1.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","4580009a":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(data.area_poverty_ratio, data.completed_hs_ratio, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","138b0feb":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"completed_hs_ratio\", data=data,size=5, ratio=3, color=\"r\")","46cdffc5":"# Race rates according in kill data \nPolice_Killings_US.race.dropna(inplace=True)\nPolice_Killings_US.race.value_counts()\nlabels = Police_Killings_US.race.value_counts().index\nsizes = Police_Killings_US.race.value_counts().values\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\n","02b75c04":"# visualization\nplt.figure(figsize = (7,7))\nplt.pie(sizes,explode = explode,labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","294f54c3":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\", y=\"completed_hs_ratio\", data=data)\nplt.show()","ff46a1f8":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(data.area_poverty_ratio, data.completed_hs_ratio, shade=True, cut=3)\nplt.show()","7e86695a":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","9502dd25":"data.corr()","284d4e7e":"#correlation map\n# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\nf,ax = plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,linecolor='red',fmt='.1f',ax=ax)\nplt.show()","02b2b5f7":"Police_Killings_US.head()","c2cd12c1":"Police_Killings_US.manner_of_death.unique()","99f6f924":"# Plot the orbital period with horizontal boxes\nsns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=Police_Killings_US,palette=\"PRGn\")\nplt.show()","c0205e01":"sns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=Police_Killings_US)\nplt.show()","68863dce":"sns.pairplot(data)\nplt.show()","b6b49182":"Police_Killings_US.head()","87750130":"Police_Killings_US.gender.value_counts()","b0b64a35":"sns.countplot(Police_Killings_US.gender)\nplt.title(\"gender\",color ='red',fontsize=15)\nplt.show()","49cda820":"Police_Killings_US.armed.value_counts()","88c4e745":"armed","f892c1b5":"# kill weapon\narmed = Police_Killings_US.armed.value_counts()\n#print(armed)\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","aafc8b32":"#age of killed people\nabove25 = [\"above25\" if i>25 else \"below25\" for i in Police_Killings_US.age]\nsns.countplot(above25)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)","5a98bdee":"#race of killed people\nsns.countplot(Police_Killings_US.race)\nplt.title('Race of killed people',color = 'blue',fontsize=15)","938a1511":"Police_Killings_US.head()","96de267d":"#most dangerous cities\ncity = Police_Killings_US.city.value_counts()\nplt.figure(figsize=(11,6))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","09a7f9b1":"#most dangerous states\nstates = Police_Killings_US.state.value_counts()\nplt.figure(figsize=(10,6))\nsns.barplot(x=states[:18].index,y=states[:18].values)","48d28cfc":"#having mental illnes or not\nsns.countplot(Police_Killings_US.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","73813474":"#threat types\nsns.countplot(Police_Killings_US.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","04a8cac2":"#flee types\nsns.countplot(Police_Killings_US.flee)\nplt.xlabel('Flee types')\nplt.title('Flee types',color='blue',fontsize=16)","32fdf9a4":"#Having body camera or not\nsns.countplot(Police_Killings_US.body_camera)\nplt.xlabel('Having body camera')\nplt.title('Having body camera',color = 'orange',fontsize=16)","641220b8":"#kill numbers\nstates2 = Police_Killings_US.state.value_counts().index[:10]\nkills = Police_Killings_US.state.value_counts().values[:10]\nsns.barplot(x=states2,y=kills)\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","4277465a":"High school graduation rate of the population that is older than 25 in states","e7a3156f":"Percentage of state's population according to races that are black,white,native american, asian and hispanic","0a54e13b":"**Swarm Plot**","f213d727":"**Pie Chart**","1db39143":"**Count Plot**","3757aebd":"**Box Plot**","edbabad5":"**Point Plot**","ceceb34d":"**Violin Plot**","d1fab84e":"what did we above? With for loop, we received each state and we calculated each state's poverty ratio and we put their ratio in a list whose name is area_poverty_ratio\n","10c6f27a":"as we can see , there is a \"-\" value. This is a meaningless value. We must ignore it. See below ","ccae9d87":"**Kde Plot**","b5b994ec":"**Joint Plot**","39f82e6b":"**Pair Plot**","a020f70f":"**Heatmap**","5cdf50db":"**LM Plot**","24926b34":" \n \n Most common 15 Name or Surname of killed people"}}