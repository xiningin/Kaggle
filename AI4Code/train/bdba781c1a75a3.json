{"cell_type":{"fe6039b5":"code","7a7b7c23":"code","a5671b17":"code","8dcccb37":"code","f4193a4d":"code","5bda4ef1":"code","604357e0":"code","d786a46d":"code","47a67235":"code","3a88f74b":"code","ba18f9b6":"code","7409fcbb":"code","549228db":"code","2904e741":"markdown","d3f09dd0":"markdown","f7ca1e18":"markdown","62abf4be":"markdown","3d10d950":"markdown","d48c6407":"markdown","120674fe":"markdown"},"source":{"fe6039b5":"pip install pdfminer.six","7a7b7c23":"from pdfminer.high_level import extract_text\ntext = extract_text('..\/input\/resume-pdf\/AnuvaGoyal_Latex.pdf')","a5671b17":"extracted_text={}","8dcccb37":"import re\nimport spacy","f4193a4d":"match=re.search(r'[\\w\\.-]+@[\\w\\.-]+',text)\nmatch.group(0)#E-MAIL\nimport re\ndef get_email_addresses(string):\n    r = re.compile(r'[\\w\\.-]+@[\\w\\.-]+')\n    return r.findall(string)\n\nemail = get_email_addresses(text)\nprint(email)\nextracted_text['E-mail'] = email","5bda4ef1":"def get_phone_numbers(string):\n    r = re.compile(r'(\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{4}|\\(\\d{3}\\)\\s*\\d{3}[-\\.\\s]??\\d{4}|\\d{3}[-\\.\\s]??\\d{4})')\n    phone_numbers = r.findall(string)\n    return [re.sub(r'\\D', '', num) for num in phone_numbers]\n\nphone_number= get_phone_numbers(text)\nprint(phone_number)\nextracted_text['Phone number'] = phone_number","604357e0":"from spacy.matcher import Matcher\n\n# load pre-trained model\nnlp = spacy.load('en_core_web_sm')\n\n# initialize matcher with a vocab\nmatcher = Matcher(nlp.vocab)\n\ndef extract_name(resume_text):\n    nlp_text = nlp(resume_text)\n    \n    # First name and Last name are always Proper Nouns\n    pattern = [{'POS': 'PROPN'}, {'POS': 'PROPN'}]\n    \n    matcher.add('NAME', [pattern], on_match=None)\n    \n    matches = matcher(nlp_text)\n    \n    for match_id, start, end in matches:\n        span = nlp_text[start:end]\n        return span.text\n    \n    \nname = extract_name(text)\nprint(name)\nextracted_text['Name'] = name","d786a46d":"# load pre-trained model\nnlp = spacy.load('en_core_web_sm')\n\n\ndef extract_skills(resume_text):\n    nlp_text = nlp(resume_text)\n\n    # removing stop words and implementing word tokenization\n    tokens = [token.text for token in nlp_text if not token.is_stop]\n    \n    skills = [\"machine learning\",\n             \"deep learning\",\n             \"nlp\",\n             \"natural language processing\",\n             \"mysql\",\n             \"sql\",\n             \"django\",\n             \"computer vision\",\n             \"opencv\",\n             \"mongodb\",\n             \"artificial intelligence\",\n             \"ai\",\n             \"flask\",\n             \"robotics\",\n             \"data structures\",\n             \"python\",\n             \"c\",\n             \"matlab\",\n             'NumPy','CSS', 'HTML', 'Javascipt',\n             'Pandas', 'Tensor\ufb02ow', 'Scikit-Learn', 'OpenCV',\n\n             ]\n    \n    skillset = []\n    \n    # check for one-grams (example: python)\n    for token in tokens:\n        if token.lower() in skills:\n            skillset.append(token)\n    \n    # check for bi-grams and tri-grams (example: machine learning)\n    for token in nlp_text.noun_chunks:\n        token = token.text.lower().strip()\n        if token in skills:\n            skillset.append(token)\n    \n    return [i.capitalize() for i in set([i.lower() for i in skillset])]\n\n\nextracted_text['Skills'] = extract_skills(text)","47a67235":"from nltk.corpus import stopwords\n\n# load pre-trained model\nnlp = spacy.load('en_core_web_sm')\n\n# Grad all general stop words\nSTOPWORDS = set(stopwords.words('english'))\n\n# Education Degrees\nDegree = [\n            'BE','B.E.', 'B.E', 'BS', 'B.S','C.A.','c.a.','B.Com','B. Com',\n            'M. Com', 'M.Com','M. Com .',\n            'ME', 'M.E', 'M.E.', 'MS', 'M.S',\n            'BTECH', 'B.TECH', 'M.TECH', 'MTECH',\n            'PHD', 'phd', 'ph.d', 'Ph.D.','MBA','mba',\n            'graduate', 'post-graduate','5 year integrated masters','masters',\n            'SSC', 'HSC', 'CBSE', 'ICSE', 'X', 'XII'\n        ]\n\ndef extract_degree(resume_text):\n    nlp_text = nlp(resume_text)\n\n    # Sentence Tokenizer\n    nlp_text = [sent.text.strip() for sent in nlp_text.sents]\n\n    edu = {}\n    # Extract education degree\n    for index, text in enumerate(nlp_text):\n        for tex in text.split():\n            # Replace all special symbols\n            tex = re.sub(r'[?|$|.|!|,]', r'', tex)\n            if tex.upper() in Degree and tex not in STOPWORDS:\n                edu[tex] = text + nlp_text[index + 1]\n\n    # Extract year\n    education = []\n    for key in edu.keys():\n        year = re.search(re.compile(r'(((20|19)(\\d{2})))'), edu[key])\n        if year:\n            education.append((key, ''.join(year[0])))\n        else:\n            education.append(key)\n    return education\n\nextract_degree(text)\nextracted_text['Degree'] = extract_degree(text)","3a88f74b":"sub_patterns = ['[A-Z][a-z]* [A-Z][a-z]* University','[A-Z][a-z]* Educational Institute','[A-Z][a-z]* University',\n                'University of [A-Z][a-z]* [A-Z][a-z]*', 'University of [A-Z][a-z]*',\n                'Ecole [A-Z][a-z]* [A-Z][a-z]*']\npattern = '({})'.format('|'.join(sub_patterns))\neducation = re.findall(pattern, text)\nextracted_text['Education'] = education","ba18f9b6":"sub_patterns = ['[A-Z][a-z]* [A-Z][a-z]* Pvt. Ltd.','[A-Z][a-z]* [A-Z][a-z]* Private Limited', '[A-Z][a-z]* LLC',\n                '[A-Z][a-z]* Pvt. Ltd.', '[A-Z][a-z]* Private Limited', '[A-Z][a-z]* [A-Z][a-z]* [A-Z][a-z]* Pvt. Ltd.']\npattern = '({})'.format('|'.join(sub_patterns))\nexperience = re.findall(pattern, text)\nextracted_text['Experience'] = experience","7409fcbb":"print(extracted_text)","549228db":"import json\n# Serializing json \njson_object = json.dumps(extracted_text, indent =8)\n  \n# Writing to sample.json\nwith open(\"sample.json\", \"w\") as outfile:\n    outfile.write(json_object)\n    \n\nprint(json_object)","2904e741":"Extracting Degree","d3f09dd0":"Extracting Name","f7ca1e18":"Extracting E-mail ID","62abf4be":"Extracting University\/College","3d10d950":"Extracting Skills","d48c6407":"Extracting Phone Number","120674fe":"Extracting Experience"}}