{"cell_type":{"5de5d6b8":"code","0739a68e":"code","e7f6c2ff":"code","b56f531e":"code","ddb4d36b":"code","5faa6cfd":"code","355f23db":"code","a6022290":"code","0dae5b0c":"code","226ad0bc":"code","1d1cbb36":"code","1460613c":"code","6ef50e03":"code","8631b146":"code","7327a47e":"markdown","1d3a9156":"markdown","77be2f72":"markdown","39527d73":"markdown","5abb4a4d":"markdown","9b84a7cb":"markdown","c32f6347":"markdown"},"source":{"5de5d6b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0739a68e":"filename = '\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv'\n\ndf = pd.read_csv(filename)","e7f6c2ff":"df.head()","b56f531e":"df.describe()","ddb4d36b":"df.Genre.value_counts().plot(kind='pie', figsize=(9,9))","5faa6cfd":"df.Author.value_counts().head()\n\ndf.Author.value_counts().head().plot(kind='bar', figsize=(9,6), title='Top 5 bestselling authors')","355f23db":"temp = df.value_counts(['Year', 'Author']).sort_index().reset_index()","a6022290":"temp = temp.rename(columns={0: 'count'}).sort_values(by=['Year', 'count'], ascending=[True, False])\ntemp.head()","0dae5b0c":"for y in temp.Year.unique():\n    temp_y = temp[temp.Year == y]\n    print('Top 3 authors of {}: {}'.format(y, ', '.join(temp_y.Author.head(3))))","226ad0bc":"temp = df.value_counts(['Genre', 'Author']).sort_index().reset_index()\ntemp = temp.rename(columns={0: 'count'}).sort_values(by=['Genre', 'count'], ascending=[True, False])\ntemp.head()","1d1cbb36":"for g in temp.Genre.unique():\n    temp_g = temp[temp.Genre == g]\n    print('Top 5 {} authors: {}'.format(g, ', '.join(temp_g.Author.head(5))))","1460613c":"for g in temp.Genre.unique():\n    temp[temp.Genre == g].head().plot(kind='bar', x='Author', y='count', \n                                      figsize=(9,6), title='Top 5 {} Authors'.format(g))","6ef50e03":"df_author = df.groupby('Author').mean()","8631b146":"df_author.sort_values(['User Rating', 'Reviews'], ascending=False).head()","7327a47e":"It looks like **Fiction** is the less represented genre.","1d3a9156":"# Data Visualizations on Authors","77be2f72":"The top 5 author average ratings, with number of reviews as tiebreaker:\n\n1. Bill Martin Jr. (4.9, 14344 reviews)\n2. Jill Twiss (4.9, 11881 reviews)\n3. Nathan W. Pyle (4.9, 9382 reviews)\n4. Emily Winfield Martin (4.9, 8842 reviews)\n5. Chip Gaines (4.9, 7861 reviews)","39527d73":"### Top 5 authors for each genre?","5abb4a4d":"### Top 3 authors in each year?","9b84a7cb":"### Top 5 authors of all time?","c32f6347":"### Top 5 highest average user ratings for each author?"}}