{"cell_type":{"7af508e8":"code","662b3606":"code","a0a4dc7b":"code","2d6ba436":"code","7fe7718d":"code","9bba6903":"code","af77ddfe":"code","a5f3849a":"code","67712f6d":"code","b9e33bf8":"code","769d77a5":"code","ee3877d3":"code","3b7f715d":"code","369a3b2b":"code","a33b28d3":"code","dce18e7c":"code","608adb39":"code","92b6e3aa":"code","2ff6ad25":"code","c0182530":"code","987d2022":"code","21b5aad8":"code","35e7a1c5":"code","b785cfeb":"code","8313a3b8":"code","08d680d8":"code","3064d73b":"code","0a1e4a55":"code","1dcba45c":"code","e469c1e1":"code","0a9dc02a":"code","2b7eed93":"code","fd1583a8":"code","efcbae73":"code","95b854d4":"code","d983ad15":"code","882abd77":"code","f6ea8e4c":"code","84fd24db":"code","0a79f98c":"code","879fcf8e":"code","ea10d7cb":"code","ff2b9b41":"code","ca74a87c":"code","11cd2a85":"code","32721a6a":"code","c46443e4":"code","5d573246":"code","2acd5114":"code","3940ab22":"code","efe4ec39":"code","139ef8a6":"code","01d54e54":"code","b1c46789":"code","4186f5af":"markdown","e0bf7e72":"markdown","c2eae3a5":"markdown","9f0aff51":"markdown","aeb5a46e":"markdown","ad8a2555":"markdown","8aa1730c":"markdown","c553a2ff":"markdown","1d3cb0cc":"markdown","25365a7c":"markdown","6266603d":"markdown","57e605ec":"markdown","c0a6abc1":"markdown","63a438ec":"markdown","39000410":"markdown","18f0d343":"markdown","a7970b6b":"markdown","f6a2ae00":"markdown","8404704c":"markdown","89ac83f9":"markdown","0552c3f0":"markdown","d0ce8cbc":"markdown","de2a6faa":"markdown","4432e128":"markdown","91dcb012":"markdown","bcff4d94":"markdown","a2d4b348":"markdown","4b740dc3":"markdown","719e50b7":"markdown","e5917ccd":"markdown","7215f4b5":"markdown","6785b9e6":"markdown","17f386f6":"markdown","fd63db90":"markdown","8a4a90a3":"markdown","baae2953":"markdown","08cb290a":"markdown","0419cb7d":"markdown","2e07cada":"markdown","4d9e32d2":"markdown","3a277330":"markdown"},"source":{"7af508e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","662b3606":"import matplotlib.pyplot as plt \nimport seaborn as sns \nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nplt.style.use('fivethirtyeight')\n","a0a4dc7b":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_train.head()","2d6ba436":"df_train.shape","7fe7718d":"df_train.columns","9bba6903":"df_train.info()","af77ddfe":"df_train.isnull().sum()","a5f3849a":" df_train.Survived.value_counts()","67712f6d":"#Ploting Barplot and piechart\nf,ax = plt.subplots(1,2,figsize=(18,8))\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct = '%1.1f%%',\n                                             ax=ax[0],shadow=True)\nax[0].set_title(\"Survived\")\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train,ax=ax[1])\nax[1].set_title('Survived')\nax[1].set_xlabel('Survived')\nplt.show()\n","b9e33bf8":" df_train.groupby(['Sex','Survived'])['Survived'].count()","769d77a5":"#plotting sex vs survived\nf,ax=plt.subplots(1,2,figsize=(18,8))\ndf_train[['Sex', 'Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\nax[0].set_titles=('Survived vs sex')\nsns.countplot('Sex',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Sex:Survived vs Dead')\nplt.show()\n","ee3877d3":"pd.crosstab(df_train.Pclass,df_train.Survived,margins=True).style.background_gradient(cmap='YlGn')","3b7f715d":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['Blue','Red','Green'],ax=ax[0])\nax[0].set_title('Number of Passengers By Pclass')\nax[0].set_ylabel('Count')\nsns.countplot('Pclass',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Pclass:Survived vs Dead')\nplt.show()\n\n","369a3b2b":"pd.crosstab([df_train.Sex,df_train.Survived],df_train.Pclass,margins=True).style.background_gradient(cmap='summer_r')","a33b28d3":"sns.factorplot('Pclass','Survived',hue='Sex',data=df_train)\nplt.show()","dce18e7c":"print('Mean Age',df_train.Age.mean())\nprint('Max Age',df_train.Age.max())\nprint('Min Age',df_train.Age.min())","608adb39":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot('Pclass','Age',hue='Survived',split=True,data=df_train,ax=ax[0])\nax[0].set_title('Survived vs Pclass and Age')\nax[0].set_yticks(range(0,110,10))\nsns.violinplot('Sex','Age',hue='Survived',split=True,data=df_train,ax=ax[1])\nax[1].set_title('Survived vs Age and Sex')\nax[1].set_yticks(range(0,110,10))\nplt.show()\n","92b6e3aa":"df_train.Age.isna().sum()","2ff6ad25":"df_train['Intial'] =0\nfor i in df_train:\n    df_train['Intial'] =df_train.Name.str.extract('([A-Za-z]+)\\.')","c0182530":"pd.crosstab(df_train.Sex,df_train.Intial).style.background_gradient(cmap='summer_r')","987d2022":"df_train['Intial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],\n                            ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)","21b5aad8":"df_train.groupby('Intial')['Age'].mean()","35e7a1c5":"#assigning values to Nan\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Mr'),'Age']=33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Mrs'),'Age']=36\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Master'),'Age']=5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Miss'),'Age']=21\ndf_train.loc[(df_train.Age.isnull())&(df_train.Intial=='Other'),'Age']=46","b785cfeb":"df_train.Age.isnull().sum()","8313a3b8":"f,ax=plt.subplots(1,2,figsize=(20,10))\ndf_train[df_train['Survived']==0].Age.plot.hist(ax=ax[0],bins=20,edgecolor='black',color='red')\nax[0].set_title('Survived=0')\nax[0].set_xticks(range(0,85,5))\ndf_train[df_train['Survived']==1].Age.plot.hist(ax=ax[1],bins=20,edgecolor='black',color='green')\nax[1].set_title('Survived=1')\nax[1].set_xticks(range(0,85,5));\n","08d680d8":"sns.factorplot('Pclass','Survived', col='Intial',data=df_train)\nplt.show()","3064d73b":"pd.crosstab([df_train.Embarked,df_train.Pclass],[df_train.Sex,df_train.Survived],\n            margins=True).style.background_gradient(cmap='summer_r')","0a1e4a55":"sns.factorplot('Embarked','Survived',data=df_train)\nfig=plt.gcf()\nfig.set_size_inches(5,3)\nplt.show()","1dcba45c":"f,ax=plt.subplots(2,2,figsize=(20,10))\nsns.countplot('Embarked',data=df_train,ax=ax[0,0])\nax[0,0].set_title('No. of passangers board')\nsns.countplot('Embarked',hue='Sex',data=df_train,ax=ax[0,1])\nax[0,1].set_title('male female split for Embarked')\nsns.countplot('Embarked',hue='Pclass',data=df_train,ax=ax[1,0])\nax[1,0].set_title('Classwise split for Embarked')\nsns.countplot('Embarked',hue='Survived',data=df_train,ax=ax[1,1])\nax[1,1].set_title('Survived vs Embareked')\nplt.subplots_adjust(wspace=0.2,hspace=0.5)\nplt.show()","e469c1e1":"sns.factorplot('Pclass','Survived',hue='Sex',col='Embarked',data=df_train)\nplt.show();","0a9dc02a":"df_train.Embarked.fillna('S',inplace=True)","2b7eed93":"df_train.Embarked.isna().sum()","fd1583a8":"pd.crosstab(df_train.SibSp,df_train.Survived,margins=True).style.background_gradient(cmap='summer_r')","efcbae73":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.barplot('SibSp','Survived',data=df_train,ax=ax[0])\nax[0].set_title('SibSp vs Survived')\nsns.factorplot('SibSp','Survived',data=df_train,ax=ax[1])\nax[1].set_title('SibSp vs Survived')\n#plt.close(2)\nplt.show();","95b854d4":"pd.crosstab(df_train.SibSp,df_train.Pclass).style.background_gradient(cmap='summer_r')","d983ad15":"pd.crosstab(df_train.Parch,df_train.Survived,margins=True).style.background_gradient(cmap='summer_r')","882abd77":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.barplot('Parch','Survived',data=df_train,ax=ax[0])\nax[0].set_title('Parch vs Survived')\nsns.factorplot('Parch','Survived',data=df_train,ax=ax[1])\nax[1].set_title('Parch vs Survived')\n#plt.close(2)\nplt.show();","f6ea8e4c":"print('max fare:',df_train.Fare.max())\nprint('min fare:',df_train.Fare.min())\nprint('mean fare:',df_train.Fare.mean())","84fd24db":"f,ax=plt.subplots(1,3,figsize=(20,8))\nsns.distplot(df_train[df_train['Pclass']==1].Fare,ax=ax[0])\nax[0].set_title('Fare for Pclass 1')\nsns.distplot(df_train[df_train['Pclass']==2].Fare,ax=ax[1])\nax[1].set_title('Fare for Pclass 2')\nsns.distplot(df_train[df_train['Pclass']==3].Fare,ax=ax[2])\nax[2].set_title('Fare for Pclass 2')\nplt.show();","0a79f98c":"sns.heatmap(df_train.corr(),annot=True,cmap='RdYlGn',linewidths=0.2)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.show()","879fcf8e":"df_train['Age_Band'] = 0\ndf_train.loc[df_train['Age']<=16,'Age_Band']=0\ndf_train.loc[(df_train['Age']>16)&(df_train['Age']<=32),'Age_Band']=1\ndf_train.loc[(df_train['Age']>32)&(df_train['Age']<=48),'Age_Band']=2\ndf_train.loc[(df_train['Age']>48)&(df_train['Age']<=64),'Age_Band']=3\ndf_train.loc[df_train['Age']>64,'Age_Band']=4\ndf_train.head()\n\n","ea10d7cb":"df_train['Age_Band'].value_counts().to_frame().style.background_gradient(cmap='summer_r')","ff2b9b41":"sns.factorplot('Age_Band','Survived',hue='Sex',data=df_train)\nplt.show()","ca74a87c":"sns.factorplot('Age_Band','Survived',col='Pclass',data=df_train)\nplt.show()","11cd2a85":"df_train['Family_Size']=0\ndf_train['Family_Size']=df_train['Parch']+df_train['SibSp']\ndf_train['Alone']=0\ndf_train.loc[(df_train.Family_Size)==0,'Alone']=1","32721a6a":"f,ax = plt.subplots(1,2,figsize=(18,6))\nsns.factorplot('Family_Size','Survived',data=df_train,ax=ax[0])\nax[0].set_title('Familysize vs Survived')\nsns.factorplot('Alone','Survived',data=df_train,ax=ax[1])\nax[1].set_title('Alone vs Survived')\n#plt.close(2)\n#plt.close(3)\nplt.show()","c46443e4":"sns.factorplot('Alone','Survived',data=df_train,hue='Sex',col='Pclass')\nplt.show()","5d573246":"df_train['Fare_Range'] = pd.qcut(df_train['Fare'],4)\ndf_train.groupby(['Fare_Range'])['Survived'].mean().to_frame().style.background_gradient(cmap='summer_r')","2acd5114":"df_train['Fare_cat']=0\ndf_train.loc[df_train['Fare']<=7.9,'Fare_cat']=0\ndf_train.loc[df_train['Fare']>31,'Fare_cat']=3\ndf_train.loc[(df_train['Fare']>7.9)&(df_train['Fare']<=14.45),'Fare_cat']=1\ndf_train.loc[(df_train['Fare']>14.45)&(df_train['Fare']<=31),'Fare_cat']=2\n","3940ab22":"sns.factorplot('Fare_cat','Survived',data=df_train,hue='Sex')\nplt.show()","efe4ec39":"df_train['Sex'].replace(['male','female'],[0,1],inplace=True)\ndf_train['Embarked'].replace(['S','C','Q'],[0,1,2],inplace=True)\ndf_train['Intial'].replace(['Mr','Mrs','Miss','Master','Other'],[0,1,2,3,4],inplace=True)\n","139ef8a6":"df_train.drop(['Name','Age','Ticket','Fare','Cabin','Fare_Range','PassengerId'],axis=1,inplace=True)","01d54e54":"df_train.head(5)","b1c46789":"sns.heatmap(df_train.corr(),annot=True,cmap='RdYlGn',linewidths=0.2,annot_kws={'size':20})\nfig=plt.gcf()\nfig.set_size_inches(15,12)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show();","4186f5af":"* Survival for women of class 1 and 2 is ALMOST 100%\n* Port Q is unluckiest for men\n* Port S has low survival chance for women of class 3.","e0bf7e72":"* There is around 55% chances of survival for those who have boarded from port C.\n* S has lowest survival chances","c2eae3a5":"**3. Age** \nIt is a continous feature","9f0aff51":" Some of them being highly **Positive** correlate **SibSp and Family_Size** and **Parch and Family_Size** and some **negative** ones like **Alone and Family_Size**.","aeb5a46e":"**INSIGHTS:**\n* maximun passenger from S are class 3.\n* Passenger from C are lucky \n* port Q has 95 % class 3.","ad8a2555":"There are 177 null value but a four year old can't be assign with mean age(29).","8aa1730c":"# Converting String to Numeric","c553a2ff":"**Women and Children first policy hold strong**","1d3cb0cc":"**fare_range increases, the chances of survival increases**","25365a7c":"From this we can see that around **18% of men only survived**** while around **75% of women survived****.\n(Women and Children First policy)","6266603d":"No missing Data in Embarked","57e605ec":"Going alone is not safe.","c0a6abc1":"# Analysing the Features","63a438ec":"**Age**,**Cabin**,**Embarked** are the features with null value.","39000410":"Changing **Age --> Age Band**","18f0d343":"* Survival Rate for chlidren(below 10) are pretty good.\n* Pclass 1 passengers have higher survival rate b\/w 20-50 age group.\n* survival rate for men Decrease with increase in age","a7970b6b":"**Observations **\n* **Sex:** The chance of survival for women is high as compared to men.\n \n* **Pclass**:There is a visible trend that being a 1st class passenger gives you better chances of survival. The survival rate for Pclass3 is very low. For women, the chance of survival from Pclass1 is almost 1 and is high too for those from Pclass2. Money Wins!!!.\n\n* **Age**: Children less than 5-10 years do have a high chance of survival. Passengers between age group 15 to 35 died a lot.\n \n* **Embarked**: This is a very interesting feature. The chances of survival at C looks to be better than even though the majority of Pclass1 passengers got up at S. Passengers at Q were all from Pclass3.\n\n* **Parch+SibSp**: Having 1-2 siblings,spouse on board or 1-3 Parents shows a greater chance of probablity rather than being alone or having a large family travelling with you.\n\n","f6a2ae00":"* Oldest person to survive is of age 85\n* Toddlers were saved in large number\n* Max death is at age 30-40","8404704c":"**2.Pclass**\nIts is an ordinal feature","89ac83f9":"**4.Embarked**\nCategorical Value","0552c3f0":"Survival for alone passenger is very low and families with member>4 decreases.","d0ce8cbc":"**5.SibSb**","de2a6faa":"Features are not correlated so all feature can be carried on","4432e128":"* **P1class** survival chance is around **63%.**\n* **P2class** survival chance is around **48%.**\n* **P3class** survival chance is around **25%**.\n* Moral of the Story:**Money Can Buy Happyness. **","91dcb012":"**Fare_Range**","bcff4d94":"# Dropping some featutes.\n* Name--> We don't need name feature as it cannot be converted into any categorical value.\n\n* Age--> We have the Age_band feature, so no need of this.\n \n* Ticket--> It is any random string that cannot be categorised.\n \n* Fare--> We have the Fare_cat feature, so unneeded\n \n* Cabin--> A lot of NaN values and also many passengers have multiple cabins. So this is a useless feature.\n \n* Fare_Range--> We have the fare_cat feature.\n \n* PassengerId--> Cannot be categorised.","a2d4b348":"Number of rows are 891 and 12 rows.\ntarget === survival \nfeature === 10 excluding id.","4b740dc3":"**6.Fare**\n* continous Feature","719e50b7":"**1.SEX**\nIt is a categorical feature","e5917ccd":"**Family_Size And Alone**","7215f4b5":"# How many survived?","6785b9e6":"Slicing Intials From name","17f386f6":"# 2.FEATURE ENGINEERING AND DATA CLEANING","fd63db90":"# Correlation Between The Features","8a4a90a3":"**5.Parch**","baae2953":"By above plot we can deduce the chance of survival is 38.4%.","08cb290a":"Lets visualize this.\n","0419cb7d":"*  Insights:\n*  1.Women of Pclass 1 has survival rate upto 98%.\n*  2.Women are priority even men of Pclass1 has less survival rate than Pclass 3 women.\n*  3.Men of Pclass 3 has survival rate as low as 15%.","2e07cada":"**Insights:**\n*  No women above 64.\n*  Rate of survival decreases as the age increases.\n*  Women of pclass 1,2 have almost survival rate of 100%.","4d9e32d2":"With increase in Fare survival chance increase.","3a277330":"# Load Data and Veiw Dataset "}}