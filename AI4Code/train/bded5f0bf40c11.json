{"cell_type":{"423b46c5":"code","1f6837db":"code","74cb7493":"code","036ce587":"code","a632f6ea":"code","70a7caf7":"code","b76cf444":"code","6d2e345a":"code","76667987":"code","2ad2a1fa":"code","5f2e654f":"code","43eae4ef":"code","445e5341":"code","1ef08c14":"code","56469a9c":"code","f0f4ed65":"code","2e2b5557":"code","f6f372af":"code","8cc97711":"code","01447d05":"code","c015687f":"code","307bacd4":"code","7eb57ed4":"code","0bd0416f":"code","ab4bce24":"markdown","82d6d99e":"markdown","0df3c7c0":"markdown","e0f11c31":"markdown","369af722":"markdown","30423975":"markdown","57be7c82":"markdown","3881d884":"markdown","fe87dd5e":"markdown","3ae80dc7":"markdown","85f99559":"markdown"},"source":{"423b46c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f6837db":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","74cb7493":"df = pd.read_csv('..\/input\/diabetes-prediction-using-logistic-regression\/diabetes-dataset.csv')\ndf.head()","036ce587":"df.info()","a632f6ea":"print(df.Outcome.value_counts())","70a7caf7":"df.describe","b76cf444":"df.isna().sum()","6d2e345a":"featureList = ['Glucose', 'BloodPressure',\t'SkinThickness',\t'Insulin',\t'BMI']\nprint(df[featureList].isin({0}).sum())","76667987":"for col in featureList:\n  df[col] = df[col].replace({ 0 : df[col].mean() })","2ad2a1fa":"featureList = ['Glucose', 'BloodPressure',\t'SkinThickness',\t'Insulin',\t'BMI']\nprint(df[featureList].isin({0}).sum())","5f2e654f":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","43eae4ef":"plt.figure(figsize=(10, 5))\nsns.barplot('Outcome', 'Pregnancies', data=df, ) \nplt.title(\"Bars of Outcome and Pregnancies\")\nplt.xlabel(\"Outcome\")\nplt.ylabel(\"Pregnancies\")\nplt.show()","445e5341":"plt.figure(figsize=(10, 7))\n\nsns.heatmap(df.corr(), annot=True, linewidths=0.2, fmt='.1f', cmap='coolwarm') # cmap='RdYlBu'\nplt.show()","1ef08c14":"feature_columns = df[['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'DiabetesPedigreeFunction', 'Age']]\n\nfeature_columns.head()","56469a9c":"outcome_column = df['Outcome']\noutcome_column.head()","f0f4ed65":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, confusion_matrix","2e2b5557":"X_train, X_test, y_train, y_test = train_test_split( feature_columns, outcome_column, test_size=0.2, random_state=5) ","f6f372af":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","8cc97711":"model = LogisticRegression()","01447d05":"model = model.fit(X_train, y_train)\n\nscore = model.predict(X_train)","c015687f":"print(\"Training Score: \", model.score(X_train, y_train))\nprint(\"Testing Score:  \", model.score(X_test, y_test))","307bacd4":"pred = model.predict(X_test)\nprint(\"Model Accuracy is : \", pred)\n","7eb57ed4":"model.coef_","0bd0416f":"accuracy_score(y_test, pred)","ab4bce24":"Let's clean our data now . Check null Values","82d6d99e":"Thank You.","0df3c7c0":"There are none null values in our selected Dataset\n\nCheck how many values contain zeros in columns","e0f11c31":"Let's replace zeros with mean values","369af722":"Let's Test Our Model Now","30423975":"Now we have successfully replaced all zeros with suitable mean values . Now we have a cleaned dataset\n\nNow Let's import some data visualization packages","57be7c82":"Read Dataset and View first 5 rows using head","3881d884":"Now let us Train our Data for Model Starting with importing packages","fe87dd5e":"Now Let's fit our Model","3ae80dc7":"Project Name - Diabetes Prediction Using Logistic Regression","85f99559":"Name - Pranav Sunil Khairnar****"}}