{"cell_type":{"e9000bb1":"code","3751be1a":"code","e664a9a8":"code","c65bcb2b":"code","fa365a8a":"code","1cf0f034":"code","23bcfa48":"code","55953e60":"code","93fb72b3":"code","3b222cf8":"code","e1647b53":"code","7be71848":"code","09d96ace":"code","f08596eb":"code","5c216688":"code","826b8b48":"markdown","3550e82c":"markdown","4d9b0ccf":"markdown","978f118d":"markdown"},"source":{"e9000bb1":"import pandas as pd\nimport numpy as np","3751be1a":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\n\n# Image manipulation.\nimport PIL.Image\nfrom IPython.display import display","e664a9a8":"# from zipfile import ZipFile\n# image_dir = '..\/input\/leaf-classification\/images.zip'\n# image_folder = ZipFile(image_dir, 'r')\n# image_folder.namelist()[0:5]","c65bcb2b":"# image_folder.namelist()[1:2]","fa365a8a":"# image_folder","1cf0f034":"# importing required modules \nfrom zipfile import ZipFile \n  \n# specifying the zip file name \nimages_zip = '..\/input\/leaf-classification\/images.zip'\n  \n# opening the zip file in READ mode \nwith ZipFile(images_zip, 'r') as zip: \n    # printing all the contents of the zip file \n#     zip.printdir() \n  \n    # extracting all the files \n    print('Extracting all the files now...') \n    zip.extractall() \n    print('Done!') ","23bcfa48":"image_dir = '.\/images' # From output folder.","55953e60":"img = image_dir + '\/' + str(100) + '.jpg'\nimg","93fb72b3":"img = mpimg.imread(img)\nimgplot = plt.imshow(img)\nplt.show()","3b222cf8":"type(imgplot)\n# imgplot.shape","e1647b53":"type(img), img.shape","7be71848":"# img = img.resize((160, 240), mpimg.ANTIALIAS)\n\n# type(img), img.shape","09d96ace":"# show some random images\nplt.figure(figsize=(12,12))\n\ncnt = range(100)\n\nfor k in range(28):\n    randomID = np.random.randint(len(cnt))\n    \n    imageFilename = image_dir + '\/' + str(randomID) + '.jpg' \n    \n    plt.subplot(4,7,k+1); \n    \n    plt.imshow(mpimg.imread(imageFilename), cmap='gray')\n\n    plt.axis('off')","f08596eb":"import cv2 \n\nnew_width = 28\nnew_height = 28\n\n# resized_image = cv2.resize(original_image, (new_width, new_height), \n#                            interpolation=cv2.INTER_NEAREST)","5c216688":"# show some random images\nplt.figure(figsize=(12,12))\n\ncnt = range(100)\n\nfor k in range(28):\n    randomID = np.random.randint(len(cnt))\n    \n    imageFilename = image_dir + '\/' + str(randomID) + '.jpg' \n    \n    plt.subplot(4,7,k+1); \n    \n    src = cv2.imread(imageFilename, cv2.IMREAD_UNCHANGED)\n    \n    resized_image = cv2.resize(src, (new_width, new_height), interpolation=cv2.INTER_NEAREST)\n    \n    plt.imshow(resized_image, cmap='gray')\n    \n#     plt.imshow(mpimg.imread(resized_image), cmap='gray')\n\n    plt.axis('off')\n    ","826b8b48":"# Leaf Classification\nhttps:\/\/www.kaggle.com\/c\/leaf-classification\n\nThis is a kaggle challenge for leaf recognition.\n\nThis is fork of https:\/\/www.kaggle.com\/dskagglemt\/1-leaf-classification-understanding-dataset\nHere we are just workign with Images...","3550e82c":"# Import Libraries\nHere will import the required libraries,and will keep on importing other libraries as and when needed. Below are the main which needed to start the work with.","4d9b0ccf":"# Load Data","978f118d":"* First thing all images are in differnt sizes... we have to make it in one common shape \/ size."}}