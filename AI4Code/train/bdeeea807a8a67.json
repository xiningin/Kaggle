{"cell_type":{"39fbdd75":"code","1da829d5":"code","b1953e86":"code","793125e3":"code","082af049":"code","c2f5bbd1":"code","8973a203":"code","b4afea8d":"code","1f460411":"code","6d5db828":"code","3b46838b":"code","f9b67d08":"code","4d2d4355":"markdown","a10aec27":"markdown","de54397d":"markdown","ad309d3e":"markdown","4794352b":"markdown","21215dc7":"markdown","be857b0d":"markdown","043e3e6a":"markdown"},"source":{"39fbdd75":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1da829d5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport os\nfrom subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS","b1953e86":"with open(\"..\/input\/youtube-new\/KRvideos.csv\", \"rt\", encoding=\"utf8\",errors='ignore') as f:\n    df = pd.read_csv(f)\n\nprint(df.shape)\ndf.head(10)\ndf_yout = df","793125e3":"df_yout['likes_log'] = np.log(df_yout['likes'] + 1)\ndf_yout['views_log'] = np.log(df_yout['views'] + 1)\ndf_yout['dislikes_log'] = np.log(df_yout['dislikes'] + 1)\ndf_yout['comment_log'] = np.log(df_yout['comment_count'] + 1)\n\nplt.figure(figsize = (12,6))\n\nplt.subplot(221)\ng1 = sns.distplot(df_yout['views_log'])\ng1.set_title(\"VIEWS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(224)\ng2 = sns.distplot(df_yout['likes_log'],color='green')\ng2.set_title('LIKES LOG DISTRIBUITION', fontsize=16)\n\nplt.subplot(223)\ng3 = sns.distplot(df_yout['dislikes_log'], color='r')\ng3.set_title(\"DISLIKES LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(222)\ng4 = sns.distplot(df_yout['comment_log'])\ng4.set_title(\"COMMENTS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.show()","082af049":"df_yout['category_name'] = np.nan\n\ndf_yout.loc[(df_yout[\"category_id\"] == 1),\"category_name\"] = 'Film and Animation'\ndf_yout.loc[(df_yout[\"category_id\"] == 2),\"category_name\"] = 'Cars and Vehicles'\ndf_yout.loc[(df_yout[\"category_id\"] == 10),\"category_name\"] = 'Music'\ndf_yout.loc[(df_yout[\"category_id\"] == 15),\"category_name\"] = 'Pets and Animals'\ndf_yout.loc[(df_yout[\"category_id\"] == 17),\"category_name\"] = 'Sport'\ndf_yout.loc[(df_yout[\"category_id\"] == 19),\"category_name\"] = 'Travel and Events'\ndf_yout.loc[(df_yout[\"category_id\"] == 20),\"category_name\"] = 'Gaming'\ndf_yout.loc[(df_yout[\"category_id\"] == 22),\"category_name\"] = 'People and Blogs'\ndf_yout.loc[(df_yout[\"category_id\"] == 23),\"category_name\"] = 'Comedy'\ndf_yout.loc[(df_yout[\"category_id\"] == 24),\"category_name\"] = 'Entertainment'\ndf_yout.loc[(df_yout[\"category_id\"] == 25),\"category_name\"] = 'News and Politics'\ndf_yout.loc[(df_yout[\"category_id\"] == 26),\"category_name\"] = 'How to and Style'\ndf_yout.loc[(df_yout[\"category_id\"] == 27),\"category_name\"] = 'Education'\ndf_yout.loc[(df_yout[\"category_id\"] == 28),\"category_name\"] = 'Science and Technology'\ndf_yout.loc[(df_yout[\"category_id\"] == 29),\"category_name\"] = 'Non Profits and Activism'\ndf_yout.loc[(df_yout[\"category_id\"] == 25),\"category_name\"] = 'News & Politics'","c2f5bbd1":"print(\"Category Name count\")\nprint(df_yout.category_name.value_counts()[:5])\n\nplt.figure(figsize = (14,9))\n\nplt.subplot(211)\ng = sns.countplot('category_name', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting the Video Category's \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Count\", fontsize=12)\n\nplt.subplot(212)\ng1 = sns.boxplot(x='category_name', y='views_log', data=df_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Views Distribuition by Category Names\", fontsize=20)\ng1.set_xlabel(\"\", fontsize=15)\ng1.set_ylabel(\"Views(log)\", fontsize=15)\n\nplt.subplots_adjust(hspace = 0.9, top = 0.9)\n\nplt.show()","8973a203":"plt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='category_name', y='likes_log', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Likes Distribuition by Category Names \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Likes(log)\", fontsize=12)\nplt.show()","b4afea8d":"plt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='category_name', y='dislikes_log', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Dislikes distribuition by Category's\", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Dislikes(log)\", fontsize=12)\nplt.show()","1f460411":"mpl.rcParams['font.size']= 15              \nmpl.rcParams['savefig.dpi']= 100         \nmpl.rcParams['figure.subplot.bottom']= .1 ","6d5db828":"yout_string = str(df_yout['title'])\nprint(yout_string)","3b46838b":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\n#font settings\nwordcloud = WordCloud(\n                          background_color='black',font_path='..\/input\/nanum34\/NanumSquareR.ttf',\n                          stopwords=stopwords,\n                          max_words=1000,\n                          max_font_size=120, \n                          random_state=42\n                         ).generate(str(df_yout['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\")\nplt.axis('off')\nplt.show()","f9b67d08":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\nnewStopWords= ['https', 'youtube', 'VIDEO','youtu','CHANNEL', 'WATCH']\n\nstopwords.update(newStopWords)\n\nwordcloud = WordCloud(\n                          background_color='black',font_path='..\/input\/nanum34\/NanumSquareR.ttf',\n                          stopwords=stopwords,\n                          max_words=1200,\n                          max_font_size=80, \n                          random_state=42\n                         ).generate(str(df_yout['description']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - DESCRIPTION\")\nplt.axis('off')\nplt.show()","4d2d4355":"In terms of description, Korean singer Yoon-Jong Sin and Channel A took the spotlight.\n\nFunnily enough, 'like and subscribe' was also a hot keyword, as many people seemed to ask for like+subscribe","a10aec27":"* # Word Cloud Analysis\n\nIf you do it in Korean, you will face font issues.\n\nTo help it, I had to install nanum font from nanum34 dataset.","de54397d":"# Basic Imports\n","ad309d3e":"# Likes and dislikes","4794352b":"# Categorical Analysis","21215dc7":"In 2017, when the North Korean soldier knocked at a guard post, and caused many ruckus in South Korea.\n\nTherefore, there are many words related to North Korea and JSA. \n\nOther issues were the boy band Wanna One. \n","be857b0d":"This is work in progress","043e3e6a":"# Distributions of views, likes, dislikes and comments"}}