{"cell_type":{"0782852f":"code","6ae0cac7":"code","6643c9c7":"code","9161d935":"code","07d1c582":"code","bc135630":"code","8418a89e":"code","56b47e2b":"code","6fbc9980":"code","f405f534":"code","bd2c264b":"code","e8dbfca0":"code","20366126":"code","d47fc9b6":"code","d2e4a88d":"code","787cfae3":"code","d486b258":"code","da3f484c":"code","346e932a":"code","4c1e77e5":"code","3a0b792e":"code","72fd0b93":"code","47b7109e":"code","9bd43455":"code","c8fdbd9d":"code","c78cacc0":"code","190f1cb4":"code","667ca79d":"code","11a6510b":"code","72587eb4":"code","45ce588e":"markdown","0dc96495":"markdown","b4ad8c13":"markdown","85baf6b7":"markdown","4384bbf7":"markdown","5ab96894":"markdown","e66ada78":"markdown"},"source":{"0782852f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.warn(\"this will not show\")\n\nplt.rcParams[\"figure.figsize\"] = (10,6)\npd.set_option(\"max_columns\",100)\npd.set_option(\"max_rows\",900)\npd.set_option(\"max_colwidth\",200)","6ae0cac7":"dataset = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\ndf = dataset.copy()\ndf.sample(7)","6643c9c7":"df.info()","9161d935":"def missing(df):\n    missing_number = df.isnull().sum().sort_values(ascending=False)\n    missing_percent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\n    missing_values = pd.concat([missing_number, missing_percent], axis=1, keys=['Missing_Number', 'Missing_Percent'])\n    return missing_values\n\nmissing(df)","07d1c582":"df.describe()","bc135630":"df.drop(columns=\"Id\",inplace=True)","8418a89e":"df.duplicated().sum()","56b47e2b":"df = df.drop_duplicates()","6fbc9980":"df.skew()","f405f534":"sns.heatmap(df.corr(),annot=True);","bd2c264b":"sns.countplot(data=df,x=\"Species\");","e8dbfca0":"sns.pairplot(df,hue='Species');","20366126":"import plotly.express as px","d47fc9b6":"fig = px.scatter_3d(df, \n                    x='SepalLengthCm',\n                    y='SepalWidthCm',\n                    z='PetalWidthCm',\n                    color='Species')\nfig.show();","d2e4a88d":"from sklearn.model_selection import train_test_split","787cfae3":"X = df.drop(columns=\"Species\")\ny = df[\"Species\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=44)","d486b258":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score,confusion_matrix, classification_report\nfrom sklearn.model_selection import cross_val_score,cross_validate\nfrom sklearn.metrics import plot_confusion_matrix","da3f484c":"rf_model = RandomForestClassifier(random_state=44)\nrf_model.fit(X_train,y_train)\ny_pred = rf_model.predict(X_test)\ny_train_pred = rf_model.predict(X_train)","346e932a":"def train_val(y_train, y_train_pred, y_test, y_pred):\n\n    scores = {\"train set\": {\"Accuracy\" : accuracy_score(y_train, y_train_pred),\n                            \"Precision\" : precision_score(y_train, y_train_pred,average=\"macro\"),\n                            \"Recall\" : recall_score(y_train, y_train_pred,average=\"macro\"),                          \n                            \"f1\" : f1_score(y_train, y_train_pred,average=\"macro\")},\n    \n              \"test set\": {\"Accuracy\" : accuracy_score(y_test,y_pred),\n                           \"Precision\" : precision_score(y_test, y_pred,average=\"macro\"),\n                           \"Recall\" : recall_score(y_test, y_pred,average=\"macro\"),                          \n                           \"f1\" : f1_score(y_test, y_pred,average=\"macro\")}}\n    \n    return pd.DataFrame(scores)\n","4c1e77e5":"train_val(y_train, y_train_pred, y_test, y_pred)","3a0b792e":"from sklearn.model_selection import GridSearchCV","72fd0b93":"params = {\"n_estimators\": [10,20,50],\n          \"max_depth\" :[None,2,4,8,10],\n          \"min_samples_split\" :[2,3,6,9],\n          \"max_features\" : ['auto',2,3,4],\n          \"random_state\" : [44]}","47b7109e":"rf_grid_model = GridSearchCV(rf_model, params, scoring = \"accuracy\", n_jobs = -1, cv=10).fit(X_train, y_train)","9bd43455":"rf_grid_model.best_params_","c8fdbd9d":"y_pred = rf_grid_model.predict(X_test)\ny_pred_train = rf_grid_model.predict(X_train)\n\n\nprint(classification_report(y_test, y_pred))\nplot_confusion_matrix(rf_grid_model,X_test,y_test);","c78cacc0":"train_val(y_train, y_pred_train, y_test, y_pred)","190f1cb4":"from sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler","667ca79d":"scaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","11a6510b":"svm_model = SVC(random_state=44)\nsvm_model.fit(X_train_scaled,y_train)\ny_pred = svm_model.predict(X_test_scaled)\ny_pred_train = svm_model.predict(X_train_scaled)","72587eb4":"print(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\ntrain_val(y_train, y_pred_train, y_test, y_pred)","45ce588e":"## SVM - Modelling and Model Performance","0dc96495":"#### 3 Boyut oldu\u011fu i\u00e7in 4 sutun se\u00e7emezdim. Bu y\u00fczden y\u00fcksek korele olan sutunlar\u0131mdan sadece birini se\u00e7erek grafi\u011fi \u00e7izdirdim. \ud83d\udc47","b4ad8c13":"## Exploratory Data Analysis and Visualization\n","85baf6b7":"## Random Forest - Modelling and Model Performance\n","4384bbf7":" ## Sonu\u00e7:\n\n**- Random Forest e\u011fitim s\u00fcrecinde feature se\u00e7imini rastgele yapar ve herhangi bir feature 'a  b\u00fcy\u00fck \u00f6l\u00e7\u00fcde ba\u011fl\u0131 de\u011fildir. Bu nedenle, Random Forest, verileri daha iyi genelleyebilir.**\n\n**- Random Forest, datasetimizin orta veya b\u00fcy\u00fck \u00f6l\u00e7ekli oldu\u011fu durumlar i\u00e7in daha uygundur. Ancak birden fazla Decision Tree'yi birle\u015ftirdi\u011finden, yorumlanmas\u0131 daha zor hale gelir. Burada datasetimiz k\u00fc\u00e7\u00fck \u00f6l\u00e7ekli oldu\u011fu i\u00e7in SVM modelimiz daha iyi bir sonu\u00e7 \u00e7\u0131karm\u0131\u015ft\u0131r.**","5ab96894":"# MODEL SELECT\u0130ON","e66ada78":"### TRAIN | TEST "}}