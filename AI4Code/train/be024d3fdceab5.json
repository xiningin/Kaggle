{"cell_type":{"fbadd469":"code","e55ad772":"code","96186cac":"code","98d74879":"code","52fb87c6":"code","964e349f":"code","3260582e":"code","3ca4c13b":"code","80d17b6d":"code","6f2a528c":"code","2d334b40":"code","fbd8aa6b":"code","b30d9a71":"code","3e41becd":"code","d6904b5c":"code","034c4425":"code","8b7bb4bf":"markdown","e1a1e02f":"markdown","5392200d":"markdown"},"source":{"fbadd469":"!pip install mtcnn","e55ad772":"import numpy as np\nimport pandas as pd\nimport os\nimport cv2\nfrom matplotlib import pyplot as plt\nfrom mtcnn import MTCNN\nfrom tqdm import tqdm\nimport warnings\nwarnings.filterwarnings(\"ignore\")","96186cac":"detector = MTCNN()","98d74879":"img0=cv2.imread('..\/input\/ffhq-face-data-set\/thumbnails128x128\/00006.png')\nimg1= cv2.cvtColor(img0, cv2.COLOR_BGR2RGB)\nplt.imshow(img1,cmap=\"gray\")\nplt.axis(\"off\")  \nplt.show()","52fb87c6":"def mtcnn_box(image,BOX) : \n    result = detector.detect_faces(image)\n    return result","964e349f":"# prepare empty box\nBOX1=[]\nmtcnn_box(img1,BOX1)","3260582e":"paths=[]\nfor dirname, _, filenames in os.walk('..\/input\/ffhq-face-data-set'):\n    for filename in filenames:\n        paths+=[os.path.join(dirname, filename)]\n        \nprint(paths[0:10])\nprint(len(paths))","3ca4c13b":"BOX=[]\nfor i,path in enumerate(paths[0:20]):\n    img=cv2.imread(path)\n    BOX+=mtcnn_box(img,BOX)\n    print(i)\n    print(mtcnn_box(img,BOX))","80d17b6d":"print(len(BOX))","6f2a528c":"annotation=pd.DataFrame(columns=['ids','b1','b2','b3','b4','conf','le1','le2','re1','re2','ns1','ns2','lm1','lm2','rm1','rm2','class'],index=range(len(BOX)))\nannotation","2d334b40":"paths[0:20]","fbd8aa6b":"i=0\nfor path1 in paths[0:20]:\n    BOX2=[]\n    img=cv2.imread(path1)\n    BOX2+=mtcnn_box(img,BOX2)\n    for item2 in BOX2:\n        box=item2['box']\n        confidence=item2['confidence']\n        left_eye=item2['keypoints']['left_eye']\n        right_eye=item2['keypoints']['right_eye']\n        nose=item2['keypoints']['nose']\n        mouth_left=item2['keypoints']['mouth_left']\n        mouth_right=item2['keypoints']['mouth_right']\n        annotation.iloc[i,0:1]=path1.split('\/')[-1]\n        annotation.iloc[i,1:5]=box\n        annotation.iloc[i,5:6]=confidence\n        annotation.iloc[i,6:8]=left_eye\n        annotation.iloc[i,8:10]=right_eye\n        annotation.iloc[i,10:12]=nose\n        annotation.iloc[i,12:14]=mouth_left\n        annotation.iloc[i,14:16]=mouth_right        \n        i+=1\n        \nannotation","b30d9a71":"from matplotlib import animation, rc\nrc('animation', html='jshtml')","3e41becd":"def create_animation(ims):\n    fig=plt.figure(figsize=(6,6))\n    plt.axis('off')\n    im=plt.imshow(cv2.cvtColor(ims[0],cv2.COLOR_BGR2RGB))\n    \n    def animate_func(i):\n        im.set_array(cv2.cvtColor(ims[i],cv2.COLOR_BGR2RGB))\n        return [im]\n\n    return animation.FuncAnimation(fig, animate_func, frames=len(ims), interval=1000\/\/2)","d6904b5c":"images0=[]\nfor i in tqdm(range(0,len(paths[0:20]),1)):\n    images0+=[cv2.imread(paths[i])]\n    \nprint(len(images0))","034c4425":"create_animation(images0)","8b7bb4bf":"# Slide Show","e1a1e02f":"https:\/\/github.com\/ipazc\/mtcnn","5392200d":"# detector = MTCNN()"}}