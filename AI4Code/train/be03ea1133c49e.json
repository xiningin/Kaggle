{"cell_type":{"730b8649":"code","9dc8e129":"code","6c984219":"code","580a52e6":"code","6e007d50":"code","9a420fe6":"code","e613fd49":"code","32ba9a4a":"code","2595004c":"code","b487df76":"code","08a1511d":"code","f38e5c7b":"code","a9038e43":"code","009055c8":"code","32fd4c38":"code","74da53cb":"code","cb67be6e":"code","579926c1":"code","99310171":"code","de304da5":"code","b7f37012":"code","43bd8d89":"code","56c410c4":"code","431b9482":"code","e6c3a19e":"code","0c2b6f60":"code","c6e0767a":"code","3e100c16":"code","cf8806cf":"code","d42b82c6":"code","ab377482":"code","08f25b5a":"code","5a87818a":"code","8f1f1a87":"code","2b72af1c":"code","ef20cd61":"code","fcc6f7f3":"code","49bb0c10":"code","eacc2d46":"code","6b8502c2":"code","3b32bcfc":"code","f81ea4dd":"code","ed413bab":"code","2bbe47c1":"code","16ca8f6b":"code","99ba54aa":"code","0e1b993a":"code","0005216c":"code","afb31349":"code","cbfd114f":"code","a1ac11ce":"code","eeb80cf1":"code","b5974914":"code","a5e79abd":"code","72ef4367":"code","2a701eb4":"code","b7795ab1":"code","4377e35b":"code","8494f27e":"code","de0d76b7":"code","c712f718":"code","1972a3e6":"code","d1e631bb":"code","9a7a9ba7":"code","ce06b6dc":"code","bb9ad73e":"code","53badb63":"code","bb379494":"code","ea2b02b5":"code","7e2533e7":"code","61081694":"code","3ead46e5":"code","421d075a":"code","eb5afb01":"code","4a648355":"code","ce2f8950":"code","0a1dc472":"code","f72f359d":"code","41ec8e6f":"code","452f981b":"code","b88ce6c8":"code","4632e1b7":"code","75a54f73":"code","381194eb":"code","c3539876":"code","57a43d3a":"code","a0727f61":"code","5ba80d08":"code","565980f3":"code","4f7b6cb5":"code","8b0c4f67":"code","6fcc3f2b":"code","5cc5eb73":"code","022c522b":"code","5dbb9ff3":"code","0224d774":"code","729fbb8f":"code","91e0f7db":"code","d5493484":"code","ad0d04d8":"code","1a584f5e":"code","32017602":"code","583d9c4a":"code","134f65e6":"code","b373f4de":"code","152db213":"code","b55d8999":"code","2c706d57":"code","622baa0a":"code","c40e0004":"code","f15c132f":"code","4eeaa246":"code","6ae3ada9":"code","683fd227":"code","7db82882":"code","fece9f31":"code","77f571a1":"code","54365b9e":"code","c722453b":"code","68fddd53":"code","487242ac":"code","525037ef":"code","acea511e":"code","3c3c4943":"code","9805abe5":"code","8c44c270":"code","7146d535":"code","53af5ff6":"code","34c4e29b":"code","9f1ca3da":"code","6af637b1":"code","44dbfebf":"code","7fcc68d5":"code","a5a802a8":"code","c710816d":"code","4641387b":"code","738ec74e":"code","6200ef8d":"code","42e0f51d":"code","086d2a6b":"code","82829a7a":"code","60b667f5":"code","e32d940d":"code","b78191d5":"code","6fd1063b":"code","33e60af7":"code","48fc7d4b":"code","7d6f5336":"code","ec9fe84a":"code","7a6798c9":"code","ca3a10b9":"code","f4b0d46e":"code","23ac8ee9":"code","39f8aa5b":"code","dd4a17e8":"code","6efd39bc":"code","522f6dd3":"code","bfde4ed2":"code","6380f041":"code","77eda96a":"code","4152fff4":"code","64814b10":"code","0747f8b8":"code","7c2f866c":"code","cfc2440c":"code","7ba70f19":"code","1d6f3d80":"code","f03a5b46":"code","cd5f1d9d":"code","8c86eb5e":"code","c56ffa7b":"code","c5586489":"code","137feb31":"code","56ee3ac0":"code","8a3c4b67":"code","bcc2496f":"code","e4d77f6c":"code","741a7765":"code","0959df0d":"code","960ed3e3":"code","56641a2c":"code","c278cda2":"code","5e21425c":"code","0b30ba5d":"code","5eb13b4a":"code","7c898c32":"code","98f476b4":"code","f43f4440":"code","7de0ec0a":"code","57928249":"code","72ece112":"code","240dd0fc":"code","90d4ed04":"code","3a843a17":"code","ec4e93fb":"code","c9c5ae45":"code","a0dc9881":"code","dc7f8bf9":"code","5e00cd27":"code","cc605d90":"code","15ae84a4":"code","97d502ff":"code","60c8394f":"code","ffd00e82":"code","4132f920":"code","4c7b8215":"code","da32bfab":"code","2f36ec42":"code","6d368615":"code","124511a2":"code","3c84eb5b":"code","98d5942e":"code","857c379e":"code","b7ecf17f":"code","2b6ed5bf":"code","34f5d925":"code","2255c1bb":"code","cae9be74":"code","6de5ed9f":"code","f15a371a":"code","e81cbb7b":"code","a491d387":"code","f50d1550":"code","e9dcad61":"code","5d69efcb":"code","408f9881":"code","d9db2ae1":"code","bbbb4116":"code","77357a98":"code","7fcc8ce4":"code","4f4d81f2":"code","0f31696e":"code","da7d1cf8":"code","8dd24b7d":"code","8bd0c83e":"code","25971811":"code","20e19b89":"code","c7787404":"code","6ab6af36":"code","36584774":"code","5a8a61a6":"code","edee9b80":"code","5c98a7ae":"code","d48034f7":"code","c9a8a488":"code","d15ca291":"code","76fb07e6":"code","f5167def":"code","a29dfdb2":"code","e17439a3":"code","28953468":"code","06e7c5e9":"code","e60c26cd":"code","86b10748":"code","3ad5f19b":"code","dca3100a":"code","800a2add":"code","dac7faaa":"code","aae1226f":"code","70f63a6e":"code","2d0cd81a":"code","ff7137d9":"code","5617d02e":"code","8559fe03":"code","59416e2b":"code","07b937a4":"code","3af59187":"code","1edcc076":"code","e9c76fd6":"code","5abfa036":"code","1847185f":"code","e9e86eef":"code","64f861e8":"code","577df799":"code","5a522439":"code","3205caed":"code","447b4370":"code","c8bbbd4d":"code","bb3718b4":"code","6cbb09b9":"code","58aedff2":"code","9cde1504":"code","d73396d0":"code","bcabe4f5":"code","7916d872":"code","1127e570":"code","4f6ac129":"code","10b57aeb":"code","ec6458e9":"code","8fd13296":"code","e8f72e65":"code","31bad7ba":"code","8a75bf6a":"code","43230aed":"code","9733756d":"code","2ab10060":"code","06800b5d":"code","686e3b5a":"code","4fc64cab":"code","63a32f52":"code","0f4c1268":"code","f2a35ff4":"code","f7b34694":"code","4981fb27":"code","4e669e3d":"code","88bbed94":"code","e11406c7":"code","7ad3ce0e":"code","8fc44d1e":"code","f00e8465":"code","70a2e5fa":"code","b60a2670":"code","b133fb66":"code","4fb10b6c":"code","5b54c417":"code","0c5e57b4":"code","836b4f28":"code","dd94c47a":"code","840266ed":"markdown","e6b0de23":"markdown","cbbe5714":"markdown","6f03ba29":"markdown","41f7671e":"markdown","49152f47":"markdown","55536336":"markdown","0a02ad00":"markdown","b814f9cf":"markdown","5a5f3b5c":"markdown","c58d113b":"markdown","d0249242":"markdown","c5d80d91":"markdown","c5ad6411":"markdown","9b2cc1c8":"markdown","4afa5ab4":"markdown","c9ad200a":"markdown","f55e0a9a":"markdown","e95e3523":"markdown","911fded8":"markdown","04697333":"markdown","ca88834f":"markdown","5f809f82":"markdown","bf0bfa8c":"markdown","e50c8068":"markdown","ba7643a6":"markdown","a32920b3":"markdown","47805498":"markdown","a3d59160":"markdown","824c8f42":"markdown","a6b1b3df":"markdown","54eedd7e":"markdown","9d019459":"markdown","e53ca4d5":"markdown","5eda86bc":"markdown","58de2250":"markdown","af221bfa":"markdown","fccee251":"markdown","6840309c":"markdown","a596a164":"markdown","323eb8bc":"markdown","385bb34b":"markdown","9d25b08e":"markdown","644327a1":"markdown","25a598e1":"markdown"},"source":{"730b8649":"import warnings\nwarnings.filterwarnings('ignore')\n\n#eda\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.stats as stats\nimport statsmodels.api as sm\nimport copy\nimport scipy\nimport pylab\nimport statsmodels\n#from pandas_profiling import ProfileReport\n\n#modeling\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n%matplotlib inline","9dc8e129":"df=pd.read_csv('..\/input\/innercity.csv')","6c984219":"df.shape","580a52e6":"df.head()","6e007d50":"df.columns","9a420fe6":"from datetime import datetime\ndef clean(i):\n  return datetime.strptime(i[:8], '%Y%m%d')","e613fd49":"df.dayhours=df.dayhours.apply(clean)\ndf_org=copy.deepcopy(df)","32ba9a4a":"df.head()","2595004c":"df.info()","b487df76":"df.describe()","08a1511d":"df.columns","f38e5c7b":"df.basement","a9038e43":"df.drop('cid',1,inplace=True)","009055c8":"#Creating a new column called Base ","32fd4c38":"df['base']=df.basement.where(cond=df.basement==0,other=1)","74da53cb":"df['base']","cb67be6e":"df['base'].value_counts()","579926c1":"df.yr_renovated","99310171":"df['renovated']=df.yr_renovated.where(df.yr_renovated==0,1)\ndf.renovated","de304da5":"date_min=df.dayhours.min()\ndef to_days(i):\n  return (i-date_min).days\ndate_min","b7f37012":"df['dayhours']=df.dayhours.apply(to_days)","43bd8d89":"sns.distplot(df.dayhours)","56c410c4":"sns.scatterplot('dayhours','living_measure',data=df)","431b9482":"plt.plot(df.price.groupby(df.dayhours).sum().index,df.price.groupby(df.dayhours).sum(),'o')","e6c3a19e":"plt.plot(df.price.groupby(df.dayhours).mean().index,df.price.groupby(df.dayhours).mean(),'o')","0c2b6f60":"plt.plot(df.price.groupby(df.dayhours).count().index,df.price.groupby(df.dayhours).count(),'o')","c6e0767a":"np.corrcoef(df.dayhours,df.price)[0,1]","3e100c16":"plt.figure(figsize=(16,8))\nsns.heatmap(df.corr(),annot=True,center=0,cmap='coolwarm')\nplt.show()","cf8806cf":"df.price.describe().apply(lambda x: format(x, 'f'))","d42b82c6":"sns.distplot(df.price)\nplt.show()","ab377482":"sns.boxplot('price',data=df)\nplt.show()","08f25b5a":"q1=df.price.describe()['25%']\nq3=df.price.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_price=df[(df.price<ul) & (df.price>ll)]\ndf_price.price.describe().apply(lambda x: format(x, 'f'))","5a87818a":"print('number of outliers in price:{} out of {} which is {}%'.format(df.price.count()-df_price.price.count(),df.price.count(),(df.price.count()-df_price.price.count())*100\/df.price.count()))","8f1f1a87":"sns.distplot(df_price.price)","2b72af1c":"sns.distplot(np.log(df_price.price))","ef20cd61":"sns.boxplot(df_price.price)","fcc6f7f3":"df.room_bed.value_counts()","49bb0c10":"df_room_bed=df[df.room_bed.isin([1,2,3,4,5,6])]","eacc2d46":"df.room_bed.count()-df_room_bed.room_bed.count()","6b8502c2":"#sns.distplot(df.price[df.room_bed==0],label='0')\n#sns.distplot(df.price[df.room_bed==1],label='1')\nsns.distplot(df.price[df.room_bed==2],label='2')\nsns.distplot(df.price[df.room_bed==3],label='3')\nsns.distplot(df.price[df.room_bed==4],label='4')\nsns.distplot(df.price[df.room_bed==5],label='5')\n#sns.distplot(df.price[df.room_bed==6],label='6')\n#sns.distplot(df.price[df.room_bed==7],label='7')\n#sns.distplot(df.price[df.room_bed==8],label='8')\n#sns.distplot(df.price[df.room_bed==9],label='9')\n#sns.distplot(df.price[df.room_bed==10],label='10')\nplt.legend()\nplt.show()","3b32bcfc":"sns.boxplot('room_bed','price', data=df_price)","f81ea4dd":"df.room_bath.value_counts()","ed413bab":"sns.distplot(df.room_bath)","2bbe47c1":"df_room_bath=df[(df.room_bath<=4.5) & (df.room_bath>=1)]","16ca8f6b":"df_room_bath.room_bath.count()-df.room_bath.count()","99ba54aa":"sns.scatterplot('price','room_bath',data=df)","0e1b993a":"sns.scatterplot('price','room_bath',data=df_price)","0005216c":"df.price.groupby(df.room_bath).sum().plot(kind='bar')","afb31349":"df.price.groupby(df.room_bath).mean().plot(kind='bar')","cbfd114f":"df_room_bath.price.groupby(df_room_bath.room_bath).mean().plot(kind='bar') #shows us that price of a house increases with room_bath","a1ac11ce":"sns.boxplot('room_bath', 'price', data=df)","eeb80cf1":"sns.boxplot('room_bath', 'price', data=df_room_bath)","b5974914":"sns.boxplot('room_bath', 'price', data=df_price)","a5e79abd":"df.living_measure.describe().apply(lambda x: format(x, 'f'))","72ef4367":"sns.distplot(df.living_measure)","2a701eb4":"q1=df.living_measure.describe()['25%']\nq3=df.living_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_living_measure=df[(df.living_measure<ul) & (df.living_measure>ll)]\ndf_living_measure.living_measure.describe().apply(lambda x: format(x, 'f'))","b7795ab1":"sns.distplot(df_living_measure.living_measure)","4377e35b":"sns.distplot(np.log(df_living_measure.living_measure))","8494f27e":"sns.jointplot('living_measure','price', data=df,kind='reg')\n","de0d76b7":"sns.jointplot('living_measure','price', data=df_living_measure,kind='reg')","c712f718":"df.lot_measure.describe().apply(lambda x: format(x, 'f'))","1972a3e6":"sns.distplot(df.lot_measure)","d1e631bb":"q1=df.lot_measure.describe()['25%']\nq3=df.lot_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_lot_measure=df[(df.lot_measure<ul) & (df.lot_measure>ll)]\ndf_lot_measure.lot_measure.describe().apply(lambda x: format(x, 'f'))","9a7a9ba7":"q1=df_price.lot_measure.describe()['25%']\nq3=df_price.lot_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_price_lot_measure=df_price[(df_price.lot_measure<ul) & (df_price.lot_measure>ll)]","ce06b6dc":"sns.distplot(df_lot_measure.lot_measure)","bb9ad73e":"sns.scatterplot('price', 'lot_measure', data=df)","53badb63":"sns.jointplot('lot_measure', 'price', data=df_price_lot_measure,kind='reg')","bb379494":"df.ceil.value_counts()","ea2b02b5":"sns.distplot(df.ceil)","7e2533e7":"sns.distplot(np.log(df.price[df.ceil==1]),label='1')\nsns.distplot(np.log(df.price[df.ceil==1.5]),label='1.5')\nsns.distplot(np.log(df.price[df.ceil==2]),label='2')\nsns.distplot(np.log(df.price[df.ceil==2.5]),label='2.5')\nplt.legend()\nplt.show()","61081694":"sns.boxplot('ceil', 'price', data=df)","3ead46e5":"sns.boxplot('ceil', 'price', data=df_price)","421d075a":"df4=df[(df.ceil<3)]\nnp.corrcoef(df4.price,df4.ceil)","eb5afb01":"df4.shape[0]\/df.shape[0]","4a648355":"df.coast.value_counts()","ce2f8950":"sns.distplot((df.price[df.coast==0]),label='0')\nsns.distplot((df.price[df.coast==1]),label='1')\nplt.legend()\nplt.show()","0a1dc472":"df.coast.value_counts()","f72f359d":"sns.boxplot('coast', 'price', data=df_price)","41ec8e6f":"sns.distplot(df.price[df.coast==0],label='0')\nsns.distplot(df.price[df.coast==1],label='1')\nplt.legend()\nplt.plot()","452f981b":"sns.distplot(df_price.price[df_price.coast==0],label='0')\nsns.distplot(df_price.price[df_price.coast==1],label='1')\nplt.legend()\nplt.plot()","b88ce6c8":"df.sight.value_counts()","4632e1b7":"sns.boxplot('sight', 'price', data=df_price)","75a54f73":"sns.distplot(df.price[df.sight==0],label='0')\nsns.distplot(df.price[df.sight==1],label='1')\nsns.distplot(df.price[df.sight==2],label='2')\nsns.distplot(df.price[df.sight==3],label='3')\nsns.distplot(df.price[df.sight==4],label='4')\nplt.legend()\nplt.show()","381194eb":"sns.distplot(df_price.price[df_price.sight==0],label='0')\nsns.distplot(df_price.price[df_price.sight==1],label='1')\nsns.distplot(df_price.price[df_price.sight==2],label='2')\nsns.distplot(df_price.price[df_price.sight==3],label='3')\nsns.distplot(df_price.price[df_price.sight==4],label='4')\nplt.legend()\nplt.show()","c3539876":"df.price.groupby(df.sight).mean().plot(kind='bar')","57a43d3a":"df_price.price.groupby(df_price.sight).mean().plot(kind='bar')","a0727f61":"df.condition.value_counts()","5ba80d08":"sns.distplot(df.condition)","565980f3":"sns.boxplot('condition', 'price',data=df_price)","4f7b6cb5":"df.quality.value_counts()","8b0c4f67":"df.quality.value_counts(sort= False).plot(kind='bar')","6fcc3f2b":"sns.boxplot('quality', 'price', data=df)","5cc5eb73":"sns.boxplot('quality', 'price', data=df_price)","022c522b":"sns.distplot(df.price[df.quality==5],label='5')\nsns.distplot(df.price[df.quality==6],label='6')\nsns.distplot(df.price[df.quality==7],label='7')\nsns.distplot(df.price[df.quality==8],label='8')\nsns.distplot(df.price[df.quality==9],label='9')\nsns.distplot(df.price[df.quality==10],label='10')\nsns.distplot(df.price[df.quality==11],label='11')\nplt.legend()\nplt.show()","5dbb9ff3":"sns.distplot(df_price.price[df_price.quality==5],label='5')\nsns.distplot(df_price.price[df_price.quality==6],label='6')\nsns.distplot(df_price.price[df_price.quality==7],label='7')\nsns.distplot(df_price.price[df_price.quality==8],label='8')\nsns.distplot(df_price.price[df_price.quality==9],label='9')\nsns.distplot(df_price.price[df_price.quality==10],label='10')\nsns.distplot(df_price.price[df_price.quality==11],label='11')\nplt.legend()\nplt.show()","0224d774":"df.ceil_measure.describe().apply(lambda x:format(x,'f'))","729fbb8f":"sns.distplot(df.ceil_measure)","91e0f7db":"q1=df.ceil_measure.describe()['25%']\nq3=df.ceil_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_ceil_measure=df[(df.ceil_measure<ul) & (df.ceil_measure>ll)]\ndf_ceil_measure.ceil_measure.describe().apply(lambda x: format(x, 'f'))","d5493484":"sns.jointplot('ceil_measure', 'price', data=df,kind='reg')","ad0d04d8":"sns.jointplot('ceil_measure', 'price', data=df_ceil_measure,kind='reg')","1a584f5e":"df.basement.describe().apply(lambda x: format(x,'f'))","32017602":"plt.pie(df.base.value_counts(),labels=['13126 houses without_basement','8487 houses with_basement' ])","583d9c4a":"df.basement.value_counts()","134f65e6":"sns.distplot(df.basement)","b373f4de":"q1=df[df.basement!=0].basement.describe()['25%']\nq3=df[df.basement!=0].basement.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_basement=df[df.basement!=0][(df[df.basement!=0].basement<ul) & (df[df.basement!=0].basement>ll)]\ndf_basement.basement.describe().apply(lambda x: format(x, 'f'))","152db213":"q1=df_price[df_price.basement!=0].basement.describe()['25%']\nq3=df_price[df_price.basement!=0].basement.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_price_basement=df_price[df_price.basement!=0][(df_price[df_price.basement!=0].basement<ul) & (df_price[df_price.basement!=0].basement>ll)]","b55d8999":"(df.basement>ul).sum()","2c706d57":"df_basement.shape[0]\/df.shape[0]","622baa0a":"sns.distplot(df_basement.basement)","c40e0004":"sns.jointplot('basement','price', data=df_price_basement,kind='reg')","f15c132f":"sns.distplot(df.price[df.basement==0],label='no basement')\nsns.distplot(df.price[df.basement!=0],label='basement')\nplt.legend()\nplt.show()","4eeaa246":"sns.distplot(df_price.price[df_price.basement==0],label='no basement')\nsns.distplot(df_price.price[df_price.basement!=0],label='basement')\nplt.legend()\nplt.show()","6ae3ada9":"df.base.value_counts()","683fd227":"sns.boxplot('base','price',data=df)","7db82882":"sns.boxplot('base','price',data=df_price)","fece9f31":"df.yr_built.describe().apply(lambda x: format(x,'f'))","77f571a1":"sns.distplot(df.yr_built)","54365b9e":"sns.scatterplot('yr_built','price', data =df)","c722453b":"plt.figure(figsize=(20,8))\nsns.jointplot('yr_built','price', data =df_price)\nplt.show()","68fddd53":"df.yr_built.nunique()","487242ac":"plt.plot(df.price.groupby(df.yr_built).mean().index,df.price.groupby(df.yr_built).mean(),'o')","525037ef":"plt.plot(df.price.groupby(df.yr_built).count().index,df.price.groupby(df.yr_built).count(),'o')","acea511e":"plt.plot(df.living_measure.groupby(df.yr_built).count().index,df.living_measure.groupby(df.yr_built).mean(),'o')","3c3c4943":"df.yr_renovated.describe()","9805abe5":"df.renovated.value_counts()","8c44c270":"(df.living_measure!=df.living_measure15).sum()","7146d535":"sns.distplot(df.price[df.renovated==0],label='0')\nsns.distplot(df.price[df.renovated==1],label='1')\nplt.legend()\nplt.show()","53af5ff6":"sns.distplot(df_price.price[df_price.renovated==0],label='0')\nsns.distplot(df_price.price[df_price.renovated==1],label='1')\nplt.legend()\nplt.show()","34c4e29b":"sns.scatterplot('yr_renovated','price',data=df[df.renovated==1])","9f1ca3da":"sns.jointplot('yr_renovated','price',data=df_price[df_price.renovated==1],kind='reg')","6af637b1":"sns.jointplot(df[df.renovated==1].price.groupby(df[df.renovated==1].yr_renovated).mean().index,df[df.renovated==1].price.groupby(df[df.renovated==1].yr_renovated).mean(),kind='reg')","44dbfebf":"plt.plot(df_price[df_price.renovated==1].price.groupby(df_price[df_price.renovated==1].yr_renovated).mean().index,df_price[df_price.renovated==1].price.groupby(df_price[df_price.renovated==1].yr_renovated).mean(),'o')","7fcc68d5":"df.price[df.renovated==0].mean()","a5a802a8":"df.zipcode.nunique()","c710816d":"plt.plot(df.price.groupby(df.zipcode).mean().index,df.price.groupby(df.zipcode).mean(),'o')","4641387b":"plt.plot(df.price.groupby(df.zipcode).count().index,df.price.groupby(df.zipcode).count(),'o') #cant see any relation","738ec74e":"plt.plot(df.price.groupby(df.zipcode).sum().index,df.price.groupby(df.zipcode).sum(),'o') #cant see any relation","6200ef8d":"sns.jointplot('long','price', data=df_price)","42e0f51d":"sns.jointplot('lat','price', data=df_price)","086d2a6b":"df.living_measure15.describe()","82829a7a":"q1=df.living_measure15.describe()['25%']\nq3=df.living_measure15.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_living_measure15=df[(df.living_measure15<ul) & (df.living_measure15>ll)]\ndf_living_measure15.living_measure15.describe().apply(lambda x: format(x, 'f'))","60b667f5":"sns.jointplot('living_measure15','price',data=df_price,kind='reg')","e32d940d":"df.lot_measure15.describe()","b78191d5":"q1=df.lot_measure15.describe()['25%']\nq3=df.lot_measure15.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_lot_measure15=df[(df.lot_measure15<ul) & (df.lot_measure15>ll)]\ndf_lot_measure15.lot_measure15.describe().apply(lambda x: format(x, 'f'))","6fd1063b":"q1=df_price.lot_measure15.describe()['25%']\nq3=df_price.lot_measure15.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_price_lot_measure15=df_price[(df_price.lot_measure15<ul) & (df_price.lot_measure15>ll)]","33e60af7":"sns.jointplot('lot_measure15','price',data=df_price_lot_measure15,kind='reg')","48fc7d4b":"sns.jointplot('lot_measure15','price',data=df_lot_measure15)","7d6f5336":"df.furnished.value_counts()","ec9fe84a":"sns.boxplot('furnished','price',data=df_price)","7a6798c9":"sns.distplot(df.price[df.furnished==0],label='0')\nsns.distplot(df.price[df.furnished==1],label='1')\nplt.legend()\nplt.show()","ca3a10b9":"sns.distplot(df_price.price[df_price.furnished==0],label='0')\nsns.distplot(df_price.price[df_price.furnished==1],label='1')\nplt.legend()\nplt.show()","f4b0d46e":"df.total_area.describe().apply(lambda x: format(x,'f'))","23ac8ee9":"q1=df.total_area.describe()['25%']\nq3=df.total_area.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_total_area=df[(df.total_area<ul) & (df.total_area>ll)]\ndf_total_area.total_area.describe().apply(lambda x: format(x, 'f'))","39f8aa5b":"q1=df_price.total_area.describe()['25%']\nq3=df_price.total_area.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_price_total_area=df_price[(df_price.total_area<ul) & (df_price.total_area>ll)]","dd4a17e8":"sns.jointplot('total_area','price',data=df_price_total_area,kind='reg')","6efd39bc":"df.room_bed.value_counts()","522f6dd3":"sns.distplot(df.room_bed,kde=False)","bfde4ed2":"df.room_bed.describe()","6380f041":"df2=df[df['room_bed'].isin([2,3,4,5,6,7,8])]","77eda96a":"df2.shape","4152fff4":"np.corrcoef(df.room_bed,df.price)","64814b10":"#sns.distplot(df.price[df.room_bed==0],label='0')\n#sns.distplot(df.price[df.room_bed==1],label='1')\nsns.distplot(df.price[df.room_bed==2],label='2')\nsns.distplot(df.price[df.room_bed==3],label='3')\nsns.distplot(df.price[df.room_bed==4],label='4')\nsns.distplot(df.price[df.room_bed==5],label='5')\n#sns.distplot(df.price[df.room_bed==6],label='6')\n#sns.distplot(df.price[df.room_bed==7],label='7')\n#sns.distplot(df.price[df.room_bed==8],label='8')\n#sns.distplot(df.price[df.room_bed==9],label='9')\n#sns.distplot(df.price[df.room_bed==10],label='10')\nplt.legend()\nplt.show()","0747f8b8":"df5=df[(df.room_bed<6) & (df.room_bed>1)]\nnp.corrcoef(df5.price,df5.room_bed)","7c2f866c":"from scipy.stats import f_oneway\ng2=df.price[df.room_bed==2]\ng3=df.price[df.room_bed==3]\ng4=df.price[df.room_bed==4]\ng5=df.price[df.room_bed==5]\nprint(g2.mean(),g3.mean(),g4.mean(),g5.mean())\nprint(g2.std(),g3.std(),g4.std(),g5.std())","cfc2440c":"sns.distplot(g2)\nsns.distplot(g3)","7ba70f19":"from scipy.stats import shapiro, anderson","1d6f3d80":"shapiro(g2),shapiro(g3)","f03a5b46":"from scipy.stats import mannwhitneyu","cd5f1d9d":"mannwhitneyu(g2,g3)","8c86eb5e":"f_oneway(g2,g3)","c56ffa7b":"df.price.describe()","c5586489":"q1=df.price.describe()['25%']\nq3=df.price.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)","137feb31":"df1=df[(df.price<ul) & (df.price>ll)]\ndf1.price.describe()","56ee3ac0":"shapiro(np.log(df1.price))","8a3c4b67":"gr2=df1.price[df1.room_bed==2]\ngr3=df1.price[df1.room_bed==3]\ngr4=df1.price[df1.room_bed==4]\ngr5=df1.price[df1.room_bed==5]","bcc2496f":"sns.distplot(np.log(gr2),label='2')\nsns.distplot(np.log(gr3),label='3')\n#sns.distplot(np.log(gr4),label='4')\n#sns.distplot(np.log(gr5),label='5')\nplt.legend()\nplt.show()","e4d77f6c":"shapiro(np.log(g2)),shapiro(np.log(g3))","741a7765":"g2.mean(),g3.mean()","0959df0d":"mannwhitneyu(np.log(gr2),np.log(gr3))","960ed3e3":"df1.shape","56641a2c":"statsmodels.graphics.gofplots.qqplot(np.log(gr5),line='s')\nplt.show()","c278cda2":"sns.distplot(df.living_measure[df.room_bed==2],label='2')\nsns.distplot(df.living_measure[df.room_bed==3],label='3')\nsns.distplot(df.living_measure[df.room_bed==4],label='4')\nsns.distplot(df.living_measure[df.room_bed==5],label='5')\nplt.legend()\nplt.show()","5e21425c":"sns.distplot(df1.living_measure[df1.room_bed==2],label='2')\nsns.distplot(df1.living_measure[df1.room_bed==3],label='3')\n#sns.distplot(df1.living_measure[df1.room_bed==4],label='4')\n#sns.distplot(df1.living_measure[df1.room_bed==5],label='5')\nplt.legend()\nplt.show()","0b30ba5d":"plt.figure(figsize=(16,8))\nsns.heatmap(pd.crosstab(df_room_bed.room_bed,df_room_bed.furnished,values=df_room_bed.price,aggfunc='mean'),annot=True,cmap='coolwarm')\nplt.show()","5eb13b4a":"sns.distplot(df.room_bed)","7c898c32":"sns.distplot(df.room_bath)","98f476b4":"df6=pd.DataFrame()","f43f4440":"df.living_measure.describe()","7de0ec0a":"sns.distplot(df.living_measure)\nplt.show()","57928249":"q1=df.living_measure.describe()['25%']\nq3=df.living_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf3=df[(df.living_measure<ul) & (df.living_measure>ll)]\ndf3.living_measure.describe()","72ece112":"sns.distplot(np.log(df3.living_measure))\nplt.show()","240dd0fc":"anderson(df3.living_measure),anderson(np.log(df3.living_measure))","90d4ed04":"#log transformation giving better results towards normality than outlier treatment\nanderson(df.living_measure),anderson(np.log(df.living_measure))","3a843a17":"sns.scatterplot('living_measure','lot_measure',hue='ceil',data=df,palette='ocean')","ec4e93fb":"sns.scatterplot('living_measure','price',data=df) # can see the correlation but this suffers hetroschedasticity","c9c5ae45":"df_price['diff']=df_price.living_measure-df_price.living_measure15","a0dc9881":"df_price['diff2']=df_price['diff'].where(df_price['diff']==0,df_price['diff']\/df_price['diff'].apply(abs))","dc7f8bf9":"sns.boxplot('diff2','price',data=df_price)","5e00cd27":"sns.jointplot('diff','price',df_price[df_price.diff2==1],kind='reg')","cc605d90":"sns.scatterplot('living_measure','living_measure15',data=df[df.basement==0],hue='renovated')","15ae84a4":"df.columns","97d502ff":"df.info()","60c8394f":"for i in df.columns:\n  if i in ['room_bed','room_bath','ceil','coast','sight','condition','quality','zipcode','furnished','base','renovated']:\n    df[i]=df[i].apply(str)","ffd00e82":"cat=['room_bed','room_bath','ceil','coast','sight','condition','quality','zipcode','furnished','base','renovated']\ncont=['dayhours','price','living_measure','lot_measure','ceil_measure','basement','yr_built','yr_renovated','lat','long','living_measure15','lot_measure15','total_area']","4132f920":"df.info()","4c7b8215":"for i in cat:\n  print(i,df[i].nunique())","da32bfab":"df_mod=pd.get_dummies(df,drop_first=True)","2f36ec42":"df_mod.shape","6d368615":"df_mod.head(3)","124511a2":"df_mod.columns.tolist()","3c84eb5b":"df_out=pd.DataFrame()\ndf_out['dayhours']=np.ones((1,21613),dtype=bool).ravel()","98d5942e":"q1=df_mod.price.describe()['25%']\nq3=df_mod.price.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['price']=(df_mod.price<ul) & (df_mod.price>ll)","857c379e":"df_out.price.head()","b7ecf17f":"q1=df_mod.living_measure.describe()['25%']\nq3=df_mod.living_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['living_measure']=(df_mod.living_measure<ul) & (df_mod.living_measure>ll)","2b6ed5bf":"q1=df_mod.lot_measure.describe()['25%']\nq3=df_mod.lot_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['lot_measure']=(df_mod.lot_measure<ul) & (df_mod.lot_measure>ll)","34f5d925":"q1=df_mod.ceil_measure.describe()['25%']\nq3=df_mod.ceil_measure.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['ceil_measure']=(df_mod.ceil_measure<ul) & (df_mod.ceil_measure>ll)","2255c1bb":"q1=df_mod[df_mod.basement!=0].basement.describe()['25%']\nq3=df_mod[df_mod.basement!=0].basement.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['basement']=(df_mod.basement<ul) & (df_mod.basement>ll)","cae9be74":"df_out['yr_built']=np.ones((1,21613),dtype=bool).ravel()","6de5ed9f":"df_out['yr_renovated']=np.ones((1,21613),dtype=bool).ravel()","f15a371a":"df_out['lat']=np.ones((1,21613),dtype=bool).ravel()","e81cbb7b":"df_out['long']=np.ones((1,21613),dtype=bool).ravel()","a491d387":"q1=df_mod.living_measure15.describe()['25%']\nq3=df_mod.living_measure15.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['living_measure15']=(df_mod.living_measure15<ul) & (df_mod.living_measure15>ll)","f50d1550":"q1=df_mod.lot_measure15.describe()['25%']\nq3=df_mod.lot_measure15.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['lot_measure15']=(df_mod.lot_measure15<ul) & (df_mod.lot_measure15>ll)","e9dcad61":"q1=df_mod.total_area.describe()['25%']\nq3=df_mod.total_area.describe()['75%']\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)\ndf_out['total_area']=(df_mod.total_area<ul) & (df_mod.total_area>ll)","5d69efcb":"for i in ['room_bed_1',\n 'room_bed_10',\n 'room_bed_11',\n 'room_bed_2',\n 'room_bed_3',\n 'room_bed_33',\n 'room_bed_4',\n 'room_bed_5',\n 'room_bed_6',\n 'room_bed_7',\n 'room_bed_8',\n 'room_bed_9',\n 'room_bath_0.5',\n 'room_bath_0.75',\n 'room_bath_1.0',\n 'room_bath_1.25',\n 'room_bath_1.5',\n 'room_bath_1.75',\n 'room_bath_2.0',\n 'room_bath_2.25',\n 'room_bath_2.5',\n 'room_bath_2.75',\n 'room_bath_3.0',\n 'room_bath_3.25',\n 'room_bath_3.5',\n 'room_bath_3.75',\n 'room_bath_4.0',\n 'room_bath_4.25',\n 'room_bath_4.5',\n 'room_bath_4.75',\n 'room_bath_5.0',\n 'room_bath_5.25',\n 'room_bath_5.5',\n 'room_bath_5.75',\n 'room_bath_6.0',\n 'room_bath_6.25',\n 'room_bath_6.5',\n 'room_bath_6.75',\n 'room_bath_7.5',\n 'room_bath_7.75',\n 'room_bath_8.0',\n 'ceil_1.5',\n 'ceil_2.0',\n 'ceil_2.5',\n 'ceil_3.0',\n 'ceil_3.5',\n 'coast_1',\n 'sight_1',\n 'sight_2',\n 'sight_3',\n 'sight_4',\n 'condition_2',\n 'condition_3',\n 'condition_4',\n 'condition_5',\n 'quality_10',\n 'quality_11',\n 'quality_12',\n 'quality_13',\n 'quality_3',\n 'quality_4',\n 'quality_5',\n 'quality_6',\n 'quality_7',\n 'quality_8',\n 'quality_9',\n 'zipcode_98002',\n 'zipcode_98003',\n 'zipcode_98004',\n 'zipcode_98005',\n 'zipcode_98006',\n 'zipcode_98007',\n 'zipcode_98008',\n 'zipcode_98010',\n 'zipcode_98011',\n 'zipcode_98014',\n 'zipcode_98019',\n 'zipcode_98022',\n 'zipcode_98023',\n 'zipcode_98024',\n 'zipcode_98027',\n 'zipcode_98028',\n 'zipcode_98029',\n 'zipcode_98030',\n 'zipcode_98031',\n 'zipcode_98032',\n 'zipcode_98033',\n 'zipcode_98034',\n 'zipcode_98038',\n 'zipcode_98039',\n 'zipcode_98040',\n 'zipcode_98042',\n 'zipcode_98045',\n 'zipcode_98052',\n 'zipcode_98053',\n 'zipcode_98055',\n 'zipcode_98056',\n 'zipcode_98058',\n 'zipcode_98059',\n 'zipcode_98065',\n 'zipcode_98070',\n 'zipcode_98072',\n 'zipcode_98074',\n 'zipcode_98075',\n 'zipcode_98077',\n 'zipcode_98092',\n 'zipcode_98102',\n 'zipcode_98103',\n 'zipcode_98105',\n 'zipcode_98106',\n 'zipcode_98107',\n 'zipcode_98108',\n 'zipcode_98109',\n 'zipcode_98112',\n 'zipcode_98115',\n 'zipcode_98116',\n 'zipcode_98117',\n 'zipcode_98118',\n 'zipcode_98119',\n 'zipcode_98122',\n 'zipcode_98125',\n 'zipcode_98126',\n 'zipcode_98133',\n 'zipcode_98136',\n 'zipcode_98144',\n 'zipcode_98146',\n 'zipcode_98148',\n 'zipcode_98155',\n 'zipcode_98166',\n 'zipcode_98168',\n 'zipcode_98177',\n 'zipcode_98178',\n 'zipcode_98188',\n 'zipcode_98198',\n 'zipcode_98199',\n 'furnished_1',\n 'base_1',\n 'renovated_1']:\n       df_out[i]=np.ones((1,21613),dtype=bool).ravel()","408f9881":"df_out.head()","d9db2ae1":"df_mod.shape","bbbb4116":"df_mod.head()","77357a98":"df_null = pd.DataFrame(np.array([np.nan]*(21613*151)).reshape(21613,151))\ndf_null.head()","7fcc8ce4":"df_out =pd.DataFrame(np.where(df_out,df_mod,df_null),columns=df_mod.columns)","4f4d81f2":"df_out.isnull().sum()","0f31696e":"df_out['out']=df_out.isnull().sum(axis=1) #each row wise total sum of the nulls in a row","da7d1cf8":"df_out.out","8dd24b7d":"df_out.out.value_counts() \n# sum of the 0 nulls in a row in the dataset are 17,786\n# sum of the 3 nulls in a row in the dataset are 1651\n#sum of the 1 null in a row in the dataset are 944 \n# sum of the 2 nulls in a roe are in the dataset 665","8bd0c83e":"df_out['ind']=df.index.tolist()","25971811":"df_out.ind.shape","20e19b89":"df_out=df_out[df_out.out.isin([0,1,2,3])]\nseq=df_out.ind","c7787404":"seq.head()","6ab6af36":"df_out.shape","36584774":"df_out.drop(['out','ind'],1,inplace=True)","5a8a61a6":"df_out.head()","edee9b80":"!pip install impyute","5c98a7ae":"from impyute.imputation.cs import mice","d48034f7":"df_ao=mice(df_out)","c9a8a488":"df_ao.columns=df_mod.columns\ndf_ao.head()","d15ca291":"df_ao=df_ao.iloc[:,:13]\ndf_ao.head()","76fb07e6":"#df_ao['room_bed']=df.iloc[seq].room_bed.values\n#df_ao.loc[:,['price']]","f5167def":"df_ao=df_ao.iloc[:,:13]\ndf_ao['room_bed']=df.iloc[seq].room_bed.values\ndf_ao['room_bath']=df.iloc[seq].room_bath.values\ndf_ao['ceil']=df.iloc[seq].ceil.values\ndf_ao['coast']=df.iloc[seq].coast.values\ndf_ao['sight']=df.iloc[seq].sight.values\ndf_ao['condition']=df.iloc[seq].condition.values\ndf_ao['quality']=df.iloc[seq].quality.values\ndf_ao['zipcode']=df.iloc[seq].zipcode.values\ndf_ao['furnished']=df.iloc[seq].furnished.values\ndf_ao['base']=df.iloc[seq].base.values\ndf_ao['renovated']=df.iloc[seq].renovated.values\ndf_ao.head()","a29dfdb2":"df_ao.columns.tolist()","e17439a3":"from sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn import model_selection\nfrom sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor\nfrom sklearn.linear_model import BayesianRidge\nfrom sklearn.linear_model import Ridge, Lasso","28953468":"x=df_ao.drop(['price'],1)\ny=df_ao.price\nx=pd.get_dummies(x,drop_first=True)\nn,p=x.shape","06e7c5e9":"#ss=StandardScaler()\n#sx=ss.fit_transform(x)","e60c26cd":"#pca=PCA(9)\n#pcasx1=pca.fit_transform(sx1)","86b10748":"#l=[]\n#for i in range(1,13):\n#  l.append(pca.explained_variance_ratio_[:i].sum())\n#l","3ad5f19b":"#xf=np.concatenate((pcasx1,x2),1)","dca3100a":"#xf.shape","800a2add":"kfold = model_selection.KFold(n_splits=10, random_state=100)","dac7faaa":"lr=LinearRegression()\nresults = model_selection.cross_val_score(lr, x, y, cv=kfold)\nresults.mean(),results.var(),1-((1-results.mean())*(n-1)\/(n-p-1))","aae1226f":"from statsmodels.stats.outliers_influence import variance_inflation_factor","70f63a6e":"x.shape","2d0cd81a":"for i in range(x.shape[1]):\n  if x.columns[i] in cont:\n    print(x.columns[i], variance_inflation_factor(x.values, i))","ff7137d9":"x=df_ao.drop(['price','lot_measure','lot_measure15','ceil_measure','basement','total_area','living_measure15','yr_built','yr_renovated','dayhours','long','lat',\n              'room_bath','room_bed','furnished','base','renovated','coast','condition','ceil'],1)\nx.head()","5617d02e":"y=df_ao.price\nprint(x.columns)\nx=pd.get_dummies(x,drop_first=True)\nn,p=x.shape\nprint(p)\nlr=LinearRegression()\nresults = model_selection.cross_val_score(lr, x, y, cv=kfold)\nprint(results.mean(),results.var())\nadjr2=1-((1-results.mean())*(n-1)\/(n-p-1))\nprint('adjr2',adjr2)","8559fe03":"x.columns.tolist()","59416e2b":"x=df_ao.drop(['price','lot_measure15'],1)\nx.head()","07b937a4":"y=df_ao.price\nprint(x.columns)\nx=pd.get_dummies(x,drop_first=True)\nn,p=x.shape\nprint(p)\nlr=LinearRegression()\nresults = model_selection.cross_val_score(lr, x, y, cv=kfold)\nprint(results.mean(),results.var())\nadjr2=1-((1-results.mean())*(n-1)\/(n-p-1))\nprint('adjr2',adjr2)","3af59187":"for i in ['lot_measure','lot_measure15','ceil_measure','basement','total_area','living_measure15','yr_built','yr_renovated','dayhours','long','lat',\n              'room_bath','room_bed','furnished','base','renovated','coast','condition','ceil']:\n              l=['price','lot_measure','lot_measure15','ceil_measure','basement','total_area','living_measure15','yr_built','yr_renovated','dayhours','long','lat',\n              'room_bath','room_bed','furnished','base','renovated','coast','condition','ceil']\n              l.remove(i)\n              x=df_ao.drop(l,1)\n              y=df_ao.price\n              x=pd.get_dummies(x,drop_first=True)\n              lr=LinearRegression()\n              results = model_selection.cross_val_score(lr, x, y, cv=kfold)\n              adjr2=1-((1-results.mean())*(n-1)\/(n-p-1))\n              print(i,'adjr2',adjr2)","1edcc076":"x.shape","e9c76fd6":"for i in range(x.shape[1]):\n  print(x.columns[i],variance_inflation_factor(x.values, i))","5abfa036":"df_ao.columns","1847185f":"x=df_ao.drop(['price','lot_measure15'],1)\ny=df_ao.price\nx=pd.get_dummies(x,drop_first=True)\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=123)\nlr=LinearRegression()\nlr.fit(xtrain,ytrain)\nprint(lr.score(xtrain,ytrain),lr.score(xtest,ytest))\nypred=lr.predict(xtest)","e9e86eef":"sns.jointplot(ypred,ytest)","64f861e8":"from sklearn.feature_selection import RFE","577df799":"selector = RFE(lr, 5, step=1)\nselector = selector.fit(x, y)\nselector.support_ ","5a522439":"selector.ranking_","3205caed":"dt=DecisionTreeRegressor(max_depth=7)\nrf=RandomForestRegressor()\nab=AdaBoostRegressor(dt)\nbr=BayesianRidge()","447b4370":"results = model_selection.cross_val_score(dt, x, y, cv=kfold)\nprint(results.mean())","c8bbbd4d":"results = model_selection.cross_val_score(rf, x, y, cv=kfold)\nprint(results.mean())","bb3718b4":"results = model_selection.cross_val_score(br, x, y, cv=kfold)\nprint(results.mean(),results.var())","6cbb09b9":"dt=DecisionTreeRegressor()\nab=AdaBoostRegressor(dt)\nresults = model_selection.cross_val_score(ab, x, y, cv=kfold)\nprint(results.mean(),results.var())","58aedff2":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=47)\nss=StandardScaler()\nscale=ss.fit(xtrain)\nsxtrain=scale.transform(xtrain)\nsxtest=scale.transform(xtest)","9cde1504":"lr=LinearRegression()\nlr.fit(sxtrain,ytrain)\nc1=lr.coef_\nc1","d73396d0":"lr=Lasso()\nlr.fit(sxtrain,ytrain)\nc2=lr.coef_\nc2","bcabe4f5":"lr=Ridge()\nlr.fit(sxtrain,ytrain)\nc3=lr.coef_\nc3","7916d872":"xtrain.columns","1127e570":"plt.figure(figsize=(16,5))\n#plt.plot(xtrain.columns,c1,'o-',label='linear')\nplt.plot(xtrain.columns,c2,'o-',label='Lasso')\nplt.plot(xtrain.columns,c3,'o-',label='ridge')\nplt.xticks(rotation=90)\nplt.legend()\nplt.show()","4f6ac129":"(df.living_measure==df.living_measure15).count()","10b57aeb":"df_org.cid.nunique()-df_org.shape[0]","ec6458e9":"df_org.cid.value_counts()","8fd13296":"df_org[df_org.cid==2724049222]","e8f72e65":"df.columns","31bad7ba":"df2=df1.loc[:, ['room_bed', 'room_bath', 'living_measure','living_measure15', 'coast', 'sight', 'quality', 'basement', 'furnished']]","8a75bf6a":"#df2['basement']=pd.Series(np.zeros(21613)).where(df2.basement==0,1)","43230aed":"sdf2=StandardScaler().fit_transform(df2)","9733756d":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score","2ab10060":"kmeans=KMeans(n_clusters=3)\nkmeans.fit(df2)\ndf2['cluster']=kmeans.labels_","06800b5d":"df2.cluster.value_counts()","686e3b5a":"df2.columns","4fc64cab":"df2['price']=df.price","63a32f52":"sns.scatterplot('price','living_measure',data=df2,hue='cluster')","0f4c1268":"df2.price[df2.cluster==0].mean(),df2.price[df2.cluster==1].mean(),df2.price[df2.cluster==2].mean()","f2a35ff4":"d1=pd.DataFrame(np.array([1,2,3,4,5,6,7,8]).reshape(4,2),columns='A B'.split())","f7b34694":"k=['a','b','c','d'].remove('a')\nk","4981fb27":"d2=pd.DataFrame(np.array([True,False,True,False,True,False,False,True]).reshape(4,2),columns='A B'.split())\nd2","4e669e3d":"d1[~d2]","88bbed94":"np.ones((1,21613),dtype=bool)","e11406c7":"len('0.6666666666666666')","7ad3ce0e":"df_org.cid.value_counts().value_counts()","8fc44d1e":"df_org.cid.nunique()","f00e8465":"df_org.cid.count()","70a2e5fa":"df.dayhours.max()","b60a2670":"df.dayhours.value_counts()","b133fb66":"1-(20454\/21436)","4fb10b6c":"df.columns","5b54c417":"df_cont=df[['price','living_measure','lot_measure','ceil_measure','basement','yr_built','yr_renovated','living_measure15','lot_measure15','total_area']]","0c5e57b4":"corr=df_cont.corr()","836b4f28":"mask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr, mask=mask, cmap='coolwarm', vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5},annot=True)","dd94c47a":"sns.pairplot(df_cont)","840266ed":"## outlier treatment","e6b0de23":"#Clustering House type:","cbbe5714":"## price vs room_bed:","6f03ba29":"### price vs ceil_measure","41f7671e":"###price vs total_area","49152f47":"# EDA","55536336":"the plots sold ","0a02ad00":"## price vs long","b814f9cf":"### Work:","5a5f3b5c":"## price vs room_bath","c58d113b":"## price vs lot_measure15","d0249242":"## price vs yr_renovated","c5d80d91":"## renovated","c5ad6411":"# Capstone Project :\n\n### Problem statement: \n\n\n##### A house value is simply more than location and square footage. Like the features that make up a person, an educated party would want to know all aspects that give a house its value. For example, you want to sell a house and you don\u2019t know the price which you can take\u200a\u2014\u200ait can\u2019t be too low or too high. To find house price you usually try to find similar properties in your neighbourhood and based on gathered data you will try to assess your house price. \n\n###### Objective:\n\nTake advantage of all of the feature variables available below, use it to analyse and predict house prices. \n\n1.\tcid: a notation for a house\n2.\tdayhours: Date house was sold\n3.\tprice: Price is prediction target\n4.\troom_bed: Number of Bedrooms\/House\n5.\troom_bath: Number of bathrooms\/bedrooms\n6.\tliving_measure: square footage of the home\n7.\tlot_measure: quare footage of the lot\n8.\tceil: Total floors (levels) in house\n9.\tcoast: House which has a view to a waterfront\n10.\tsight: how many members Has been viewed\n11.\tcondition: How good the condition is (Overall)\n12.\tquality: grade given to the housing unit, based on grading system\n13.\tceil_measure: square footage of house apart from basement\n14.\tbasement_measure: square footage of the basement\n15.\tyr_built: Built Year\n16.\tyr_renovated: Year when house was renovated\n17.\tzipcode: zip\n18.\tlat: Latitude coordinate\n19.\tlong: Longitude coordinate\n20.\tliving_measure15:Living room area in 2015(some renovations)This might or might not have affected the lotsize area\n21.\tlot_measure15: lotSize area in 2015(some renovations)\n22.\tfurnished: Based on the quality of room \n23.\t total_area: Measure of both living and lot","9b2cc1c8":"###univariate:","4afa5ab4":"#Data Preperation and Outlier Treatment","c9ad200a":"# Dummyfication","f55e0a9a":"## price vs zipcode","e95e3523":"## dayhours","911fded8":"## price vs sight","04697333":"#rough work:","ca88834f":"## price vs ceil:","5f809f82":"## yr_renovated","bf0bfa8c":"ks=[2,3,4,5,6,7,8,9]\nssw=[]\nfor k in ks:\n    kmeans=KMeans(n_clusters=int(k))\n    kmeans.fit(df2)\n    sil_scores=silhouette_score(df2,kmeans.labels_)\n    print('silhouette score:',sil_scores,'number of clusters:',int(k))\n    ssw.append(kmeans.inertia_)\nplt.plot(ks,ssw)","e50c8068":"## price vs living_measure15","ba7643a6":"## basement","a32920b3":"### price vs living_measure","47805498":"## price vs condition","a3d59160":"## Feature analysis:","824c8f42":"##room_bed","a6b1b3df":"##room_bath","54eedd7e":"# Null imputation using Mice","9d019459":"# replacing outliers with Null values","e53ca4d5":"## price vs coast","5eda86bc":"## base","58de2250":"## price vs lot_measure","af221bfa":"## price vs lat","fccee251":"## price","6840309c":"## price vs basement","a596a164":"##living_measure","323eb8bc":"## price vs yr_built","385bb34b":"## price vs furnished","9d25b08e":"## price vs quality","644327a1":"# Model building","25a598e1":"check tableau"}}