{"cell_type":{"cc409852":"code","92708b57":"code","2d290049":"code","fb989315":"code","2a052b79":"code","24e9550c":"code","4b5db4a9":"code","5e489164":"code","d212b0c1":"code","3e2c3f33":"code","6bde58fe":"code","7fb68299":"code","f760a95a":"code","f9d09528":"code","38d7c848":"code","c0645df5":"code","e665a6c5":"code","daa18224":"code","c07b0e1c":"code","1decf754":"code","f4f07075":"code","9534b30f":"code","0be32064":"code","65d94e2a":"code","7f512366":"code","ea68b0ed":"code","b8ea183c":"code","246eed95":"code","010ed4c0":"code","b4f487ca":"code","50c01de1":"code","25d17dbd":"code","08886e0a":"code","a8a4e126":"code","8e01b803":"code","3b4da116":"code","1a6f4130":"code","32bd62ce":"code","ecccda9f":"code","1fe4226d":"code","4940928a":"code","f9f77edf":"code","56c6b2ae":"code","9609fd74":"code","299e9918":"code","0df74514":"markdown","3db1943e":"markdown","f63d628c":"markdown","2c552186":"markdown","dcc9a374":"markdown","ed01a82e":"markdown","2ee51b5d":"markdown","b43625a5":"markdown","244ac6ac":"markdown","ea2b0020":"markdown","551cd485":"markdown","8f9393de":"markdown","748b504c":"markdown","9b373f78":"markdown","92924a7d":"markdown","bea8d49e":"markdown","45fc7e35":"markdown","a7016063":"markdown","810b13ab":"markdown","b38bd443":"markdown","de0e5aab":"markdown","3efbe1af":"markdown","17248bfd":"markdown","55aa0585":"markdown","b82a0b1f":"markdown","4703fdac":"markdown","1bf3c4b8":"markdown","5dc41237":"markdown","f987fbf1":"markdown","5e3f6517":"markdown","469b6665":"markdown","b1d67d42":"markdown","aaca3a8c":"markdown","332657e0":"markdown","44b16d34":"markdown","9b497cc5":"markdown","6e28113d":"markdown","58971758":"markdown","7beae77e":"markdown","f4bb6a41":"markdown","5318edcb":"markdown","451cb8e7":"markdown","c6d9d87e":"markdown","749535cf":"markdown","9730e107":"markdown","717e5d5e":"markdown","a7acf4e5":"markdown"},"source":{"cc409852":"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","92708b57":"## libraries for data wrangling and visualisation are imported\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2d290049":"Movies = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')\nMovies.head()","fb989315":"Movies.info()","2a052b79":"Movies.drop(['Unnamed: 0','ID','Rotten Tomatoes'],axis = 1,inplace = True)","24e9550c":"Movies.columns","4b5db4a9":"print('No of features:',Movies.shape[1],'\\nNo of Movies:',Movies.shape[0])","5e489164":"Movies.isnull().sum()","d212b0c1":"Movies[['Directors','Genres','Country','Language','Runtime','Age']] = Movies[['Directors','Genres','Country','Language','Runtime','Age']].fillna('NA')","3e2c3f33":"Movies['Age'].value_counts()","6bde58fe":"Movies['Age'] = Movies['Age'].str.replace('+','')\nMovies['Age'] = Movies['Age'].replace('NA','0')\nMovies['Age'] = Movies['Age'].replace('all','1')","7fb68299":"Movies['Age'].value_counts()","f760a95a":"sns.kdeplot(Movies['IMDb'],shade = True)\nplt.axvline(x = Movies['IMDb'].median(),color = 'red',label = 'median')\nplt.legend()","f9d09528":"Movies['IMDb'].fillna(Movies['IMDb'].median(),inplace = True)","38d7c848":"m_count = {'platform':['Netflix','Hulu','Prime Video','Disney+'],\n            'MCount':[Movies['Netflix'].sum(),Movies['Hulu'].sum(),Movies['Prime Video'].sum(),Movies['Disney+'].sum()]}\n\nm_count = pd.DataFrame(m_count)","c0645df5":"plt.figure(figsize=(8,5))\nsns.barplot(x='platform',y='MCount',data = m_count)\nplt.xlabel('OTT platform',labelpad = 20)\nplt.ylabel('count',labelpad = 20)\nplt.show()","e665a6c5":"Dir = Movies.drop('Directors', axis=1).join(\n    Movies['Directors'].str.split(',', expand=True).stack().reset_index(drop=True, level=1).rename('Director'))\nD_count = Dir['Director'].value_counts().head(15).reset_index().set_index('index')\nD_count = D_count[1:16]\n","daa18224":"plt.figure(figsize=(8,8))\nsns.barplot(x=D_count.index,y=D_count.Director,data = D_count)\nplt.xticks(rotation =90)\nplt.xlabel('Director')\nplt.ylabel('count')\nplt.show()","c07b0e1c":"Lang = Movies.drop('Language', axis=1).join(\n    Movies['Language'].str.split(',', expand=True).stack().reset_index(drop=True, level=1).rename('Language'))\n\nLang_count = Lang['Language'].value_counts().head(25).reset_index().set_index('index')","1decf754":"plt.figure(figsize=(8,4))\nsns.barplot(x=Lang_count.index,y=Lang_count.Language,data = m_count)\nplt.xticks(rotation =90)\nplt.xlabel('Language')\nplt.ylabel('count')\nplt.show()","f4f07075":"Genre = Movies.drop('Genres', axis=1).join(\n    Movies['Genres'].str.split(',', expand=True).stack().reset_index(drop=True, level=1).rename('Genre'))\nGenre_count = Genre['Genre'].value_counts().reset_index().set_index('index')","9534b30f":"plt.figure(figsize=(8,8))\nsns.barplot(x=Genre_count.index,y=Genre_count.Genre,data = m_count)\nplt.xticks(rotation =90)\nplt.xlabel('Genre')\nplt.ylabel('count')\nplt.show()","0be32064":"lis = []\nfor i in range(0,Genre.shape[0]):\n    lis.append(Genre.iloc[i,13])\n    \nfrom collections import Counter\nG_count = Counter(lis)\n\nfrom wordcloud import WordCloud\nwc = WordCloud(background_color='white')\nwc.generate_from_frequencies(G_count)\nplt.figure(figsize=(12,10))\nplt.imshow(wc,interpolation='bilinear')\nplt.axis('off')\nplt.show()","65d94e2a":"L_Netflix = Lang.loc[Lang['Netflix'] == 1,'Language'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nL_Prime =  Lang.loc[Lang['Prime Video'] == 1,'Language'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nL_Hulu = Lang.loc[Lang['Hulu'] == 1,'Language'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nL_Disney = Lang.loc[Lang['Disney+'] == 1,'Language'].value_counts().reset_index().set_index('index').drop('NA',axis =0)","7f512366":"fig , axes = plt.subplots(2,2,figsize = (12,12))\n \nplt.subplots_adjust(hspace = 0.6,wspace = 0.5)    \n    \nL_Netflix.head(10).plot(kind = 'bar',ax = axes[0,0])\naxes[0,0].set_title('Netflix')\naxes[0,0].set_xlabel('')\naxes[0,0].set_ylabel('')\n\nL_Prime.head(10).plot(kind = 'bar',ax = axes[0,1])\naxes[0,1].set_title('Prime Video')\naxes[0,1].set_xlabel('')\naxes[0,1].set_ylabel('')\n\n\nL_Hulu.head(10).plot(kind = 'bar',ax = axes[1,0])\naxes[1,0].set_title('Hulu')\naxes[1,0].set_xlabel('')\naxes[1,0].set_ylabel('')\n\n\n\nL_Disney.head(10).plot(kind = 'bar',ax = axes[1,1])\naxes[1,1].set_title('Disney')\n\naxes[1,1].set_xlabel('')\naxes[1,1].set_ylabel('')\n\nfig.text(0.5, 0.004, 'Language', ha='center',fontsize = 'large')\nfig.text(0.004, 0.5, 'Count', va='center', rotation='vertical',fontsize = 'large')\nplt.show()","ea68b0ed":"L_ratings = Lang.groupby('Language')['IMDb'].median()\nL_ratings = L_ratings.reset_index().set_index('Language')","b8ea183c":"Top_10_lang = L_ratings.loc[['English','Hindi','Spanish','French','German','Italian'\n                                                      ,'Japanese','Korean','Mandarin','Russian'],'IMDb']\nTop_10_lang","246eed95":"Top_10_lang = Top_10_lang.reset_index().set_index('Language')\nEnglish = Lang.loc[Lang['Language']=='English','IMDb'].reset_index().set_index('index')","010ed4c0":"fig,axes = plt.subplots(1,2,figsize = (18,6))\n\nsns.kdeplot(English['IMDb'],ax = axes[1],shade = True)\nplt.axvline(English['IMDb'].median(),color = 'red')\n\nsns.barplot(x=Top_10_lang.index,y=Top_10_lang['IMDb'],ax = axes[0])\nplt.show()","b4f487ca":"G_Netflix = Genre.loc[Genre['Netflix'] == 1,'Genre'].value_counts().reset_index().set_index('index')\nG_Prime =  Genre.loc[Genre['Prime Video'] == 1,'Genre'].value_counts().reset_index().set_index('index')\nG_Hulu = Genre.loc[Genre['Hulu'] == 1,'Genre'].value_counts().reset_index().set_index('index')\nG_Disney = Genre.loc[Genre['Disney+'] == 1,'Genre'].value_counts().reset_index().set_index('index')","50c01de1":"fig , axes = plt.subplots(2,2,figsize = (12,12))\n\n \nG_Netflix.head(10).plot(kind = 'bar',ax = axes[0,0],color = 'brown')\naxes[0,0].set_title('Netflix')\naxes[0,0].set_xlabel('')\naxes[0,0].set_ylabel('')\n\nG_Prime.head(10).plot(kind = 'bar',ax = axes[0,1],color = 'green')\naxes[0,1].set_title('Prime Video')\naxes[0,1].set_xlabel('')\n\nG_Hulu.head(10).plot(kind = 'bar',ax = axes[1,0],color = 'gray')\naxes[1,0].set_title('Hulu')\naxes[1,0].set_xlabel('')\naxes[1,0].set_ylabel('')\n\n\nG_Disney.head(10).plot(kind = 'bar',ax = axes[1,1])\naxes[1,1].set_title('Disney')\naxes[1,1].set_xlabel('')\n\nplt.tight_layout()\nfig.text(0.5, 0.004, 'Genre', ha='center',fontsize = 'large')\nfig.text(0.004, 0.5, 'Count', va='center', rotation='vertical',fontsize = 'large')\nplt.show()","25d17dbd":"G_ratings = Genre.groupby('Genre')['IMDb'].median()\nG_ratings = G_ratings.reset_index().set_index('Genre')","08886e0a":"Top_10_genre = G_ratings.loc[['Drama','Comedy','Thriller','Action','Romance','Crime','Adventure','Horror','Family','Mystery'],'IMDb']\nTop_10_genre = Top_10_genre.reset_index().set_index('Genre')","a8a4e126":"plt.figure(figsize=(8,5))\nsns.barplot(x=Top_10_genre.index,y=Top_10_genre['IMDb'])\nplt.xticks(rotation = 90)\nplt.show()","8e01b803":"D_Netflix = Dir.loc[Dir['Netflix'] == 1,'Director'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nD_Prime =  Dir.loc[Dir['Prime Video'] == 1,'Director'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nD_Hulu = Dir.loc[Dir['Hulu'] == 1,'Director'].value_counts().reset_index().set_index('index').drop('NA',axis =0)\nD_Disney = Dir.loc[Dir['Disney+'] == 1,'Director'].value_counts().reset_index().set_index('index').drop('NA',axis =0)","3b4da116":"fig,axes = plt.subplots(2,2,figsize=(12,12))\nD_Netflix.head(10).plot(kind = 'bar',ax = axes[0,0],color = 'brown')\naxes[0,0].set_title('Netflix')\naxes[0,0].set_xlabel('')\naxes[0,0].set_ylabel('')\n\n\nD_Prime.head(10).plot(kind = 'bar',ax = axes[0,1],color = 'green')\naxes[0,1].set_title('Prime Video')\naxes[0,1].set_xlabel('')\naxes[0,1].set_ylabel('')\n\n\nD_Hulu.head(10).plot(kind = 'bar',ax = axes[1,0],color = 'gray')\naxes[1,0].set_title('Hulu')\naxes[1,0].set_xlabel('')\naxes[1,0].set_ylabel('')\n\n\n\nD_Disney.head(10).plot(kind = 'bar',ax = axes[1,1])\naxes[1,1].set_title('Disney')\naxes[1,1].set_xlabel('')\naxes[1,1].set_ylabel('')\n\nfig.tight_layout()\nfig.text(0.5, 0.004, 'Director', ha='center',fontsize = 'large')\nfig.text(0.004, 0.5, 'Count', va='center', rotation='vertical',fontsize = 'large')\nplt.show()","1a6f4130":"D_ratings = Dir.groupby('Director')['IMDb'].median()\nD_ratings = D_ratings.reset_index().set_index('Director')","32bd62ce":"Top_10_dir = D_ratings.loc[['Jay Chapman','Joseph Kane','Cheh Chang','Jim Wynorski','William Beaudine','Sam Newfield','David DeCoteau','Jay Karas','Marcus Raboy','William Witney'],'IMDb']\nTop_10_dir = Top_10_dir.reset_index().set_index('Director')","ecccda9f":"plt.figure(figsize=(8,5))\nsns.barplot(x=Top_10_dir.index,y=Top_10_dir['IMDb'])\nplt.xticks(rotation = 90)\nplt.xlabel('Director',labelpad= 20)\nplt.ylabel('IMDb',labelpad = 20)\nplt.show()","1fe4226d":"f,ax=plt.subplots(1,2,figsize=(20,7))\nsns.distplot(Movies['IMDb'],bins=20,kde=True,color='r',ax=ax[0])\nsns.boxplot(Movies['IMDb'],ax=ax[1],color='r',saturation=0.5)\nplt.show()","4940928a":"country = Movies[Movies['Country']=='India']\ncountry = country.drop('Language', axis=1).join(\n    country['Language'].str.split(',', expand=True).stack().reset_index(drop=True, level=1).rename('Language'))","f9f77edf":"Top_10_lang_india = country['Language'].value_counts().head(10).reset_index().set_index('index')","56c6b2ae":"plt.figure(figsize=(8,5))\nsns.barplot(x=Top_10_lang_india.index,y=Top_10_lang_india['Language'])\nplt.xticks(rotation = 90)\nplt.xlabel('Language',labelpad= 20)\nplt.ylabel('count',labelpad = 20)\nplt.show()","9609fd74":"Im_count = {'platform':['Netflix','Hulu','Prime Video','Disney+'],\n            'ImCount':[country['Netflix'].sum(),country['Hulu'].sum(),country['Prime Video'].sum(),country['Disney+'].sum()]}\n\nIm_count = pd.DataFrame(Im_count)","299e9918":"plt.figure(figsize=(8,4))\nsns.barplot(x='platform',y='ImCount',data = Im_count)\nplt.xlabel('OTT platform')\nplt.ylabel('count')\nplt.show()","0df74514":"All the platforms has more number of movies on 'English' language.\n* __Netflix__:     Followed by 'English' , Hindi and spanish movies comes in line.\n\n* __Prime Video__: Followed by 'English' , French and spanish movies comes in line. 'Hindi' movies stands behind these three.\n\n* __Hulu__ : Followed by 'English' , French and spanish movies comes in line. 'German' movies stands behind these three.\n\n* __Disney+__ : Followed by 'English' , French and spanish movies comes in line. 'German' comes after all these.","3db1943e":"\nA film director controls a film's artistic and dramatic aspects and visualizes the screenplay (or script) while guiding the technical crew and actors in the fulfilment of that vision. The director has a key role in choosing the cast members, production design and all the creative aspects of filmmaking.","f63d628c":"we have seen how the movies are distributed based on 'Platforms','Language','Genre','Directors'. Now lets start analysing each and every feature.","2c552186":"Based on the movie count , Top 10 genres have been chosen.\n\n* With help of this, we can say that all genres have the median rating around 5.8 - 6.2.\n\n* 'Family' and 'Drama' has highest median rating of 6.2.","dcc9a374":"_Directors_ play a vital role in movies.\n\nHere,\n\n* Jay Chapman stands first with a count of 35+ movies.\n* Then comes Joseph Kane and cheh chang with 27+ movies.","ed01a82e":"In the latest 21st century, technology plays a vital role all over the world. One of the best emerging technologies are OTT platforms.\n\nOver the past decade streaming companies completely shook up the distribution method that reigned supreme for the better part of a century.OTT stands for an over-the-top streaming media service.These internet-based services hop \u201cover-the-top\u201d of traditional programming distributors like cable, satellite, and broadcasting.\n\nNow-a-days, everyone has their own smart gadgets such as laptop,smartphone,tablets with 24 hrs wifi connection. This made the filmmakers easy to take their movies to all the customers through the OTT platforms such as 'Netflix','Amazon' etc.\n\nThis Dataset Contains the information of Movies present in the various OTT platforms. It provides detailed information such as Director,Genre,Language,Runtime,Rating on each movies.","2ee51b5d":"## Movies in India","b43625a5":"#### Language","244ac6ac":"This kernel is an attempt to understand the distribution of movies over the OTT platforms. It tries to say about the selection of platform for the movies based on 'Director','Rating','Genre','Language' and so on. Yet lot of new insights can be extracted on further exploration.","ea2b0020":"##### -->Language vs ratings","551cd485":"#### Indian Language Movies","8f9393de":"* The average rating lies lies between 5-7. Also there are some outliers present.\n* The movie is considered to be extraordinary when the rating lies above 8. The movie is considered to be good if the rating lies between 6 - 8.","748b504c":"Relationship between Director and platforms is shown.\n\nNetflix:\n\n* 'Jan suter' and 'Raul campos' leads the Netflix platform by their movies with 20+ movies each.\n\nPrime Video:\n\n* 'Joseph kane' leads the prime video platform with more than 30+ movies.\n* Then followed by 'Jay Chapman'.\n\nHulu:\n\n* 'Tyler Perry' and 'Steve Holland' has around 5+ movies in Hulu.\n\nDisney+:\n\n* 'Paul Hoen' leads the disney platform by 15+ movies.\n* 'James alagar' follows him with 11+ Movies.","9b373f78":"* Most of the movies present is of 'English' Language.\n\n* The reason might be of global language and priority is given to english movies than any other regional languages.","92924a7d":"##### -->Indian Movies vs OTT platforms","bea8d49e":"Based on the graph,\n\n* 'Prime video' has taken maximum movies compared to all other platforms.\n* Then it is followed by 'Netflix'.\n* 'Hulu' and Disney+' has least set of movies.","45fc7e35":"#### **Language**","a7016063":"At its core, the genre of your film is primarily a simple tool for categorizing how your film compares to other films. It's a broad bucket of similar elements that lump films together in a way that makes it easier to sell them and easier to convey the general experience of a film","810b13ab":"* Prime video and Netflix are almost equal when comes to indian movies.\n* Prime video has 800+ and Netflix has 700+ movies.\n* These two platforms are preferred for Indian movies particularly 'Hindi' Language.","b38bd443":"When it comes to Indian movies ,\n\n* 'Hindi' hits every other language having movie count of 650+.\n* Then comes 'Tamil' and 'English' with countof 150+ movies each.","de0e5aab":"##### -->Genre vs ratings","3efbe1af":"By the graph plotted, lets understand the relationship between genre and platforms.\n\n__Netflix:__\n* Genre of 'Drama' has 1500+ movies.\n* It is followed by comedy which is around 1300+.\n* Then 'Thriller','Romance','Action','Documentry' has equally distributed.\n\n__Prime Video:__\n* Genre of 'Drama' has 5000+ movies.\n* It is followed by comedy and thriller which is around 2500+ movies.\n* 'Action' comes next.\n\n__Hulu:__\n* Here also 'Drama' comes first which has around 450+ movies.\n* 'Comedy' and 'Thriller' follows 'Drama'.\n\n__Disney:__\n\n* Unlike other 3 platforms , 'Family' has the leading position with 450+ movies.\n* Then 'comedy' and 'adventure' comes into play followed by 'Fantasy'.\n    \nFrom this we infer that ,\n*  __'Disney+'__ is more suitable for kids as well as family.\n*  __Netflix__ and __Prime Video__ is more suitable for people who enjoy 'Drama' and 'Comedy'.","17248bfd":"Based on the total movie count, top 10 directors have been chosen and their median ratings have been displayed. 'Jay Karas' grabs the first position based on the ratings followed by 'jay Chapman'.","55aa0585":"* Top 10 languages have been chosen based on the distribution of movies and average ratings have been calculated.\n\n* Since maximum movies are of language 'English', median rating of the movies of 'English' is calculated.\n\n* It says that most of the 'English' movies has a median rating of '6.0'","b82a0b1f":"#### **Directors**","4703fdac":"## Distribution of Movies","1bf3c4b8":"* Since IMDb has 3% of null values , it is being filled with median values.","5dc41237":"#### OTT Platforms","f987fbf1":"* 1 - represents all age group\n* 0 - represent null value","5e3f6517":"#### Directors","469b6665":"#### --> Columns Removal","b1d67d42":"## Data  Cleaning","aaca3a8c":"* Most of the movies comes under genre 'Drama'.\n\n* It has been given importance in all the platforms as it gathers attention of all the family audience.\n\n* Then it is followed by 'Comedy','Thriller','Action'.","332657e0":"#### Understanding the ratings","44b16d34":"#### --> Missing Value Treatment","9b497cc5":"##### -->Director vs ratings:","6e28113d":"* There are 10 numerical columns and 7 categorical columns present in the dataset.","58971758":"A high IMDb rating makes an insignificant contribution towards a movie's success. Rating says how good the movie is and decides whether it can be watched or not","7beae77e":"###### --> Language vs platforms","f4bb6a41":"## Drill Down Analysis","5318edcb":"## Movies in OTT platforms","451cb8e7":"##### -->Genre vs platforms","c6d9d87e":"#### Genre","749535cf":"Let us understand the distribution of movies based on the features such as 'Directors','Genres','Country','Language','Age' etc.","9730e107":"##### -->Director vs platforms","717e5d5e":"## Conclusion","a7acf4e5":"#### Genre"}}