{"cell_type":{"79706582":"code","d5be07ab":"code","b0112c08":"code","d04521f1":"code","cf8f65b8":"code","cd95a9c4":"code","2e9bfcc6":"code","444679ab":"code","9f3ac567":"code","86f0fd7b":"code","c3c6014c":"code","c0f1ad8e":"code","55ff4c5e":"code","fdca8f40":"code","a5eb313a":"code","36db607d":"code","61c928c6":"code","2ffd6948":"code","cb4a6936":"code","454bfe22":"code","9c97429c":"code","1432f022":"code","b54f2e4f":"code","c2fd019a":"markdown","e52a676c":"markdown","e3c64568":"markdown","5c664732":"markdown","8000106e":"markdown","8ebb3852":"markdown","50e82477":"markdown","62334aa4":"markdown","1dc1699c":"markdown","1480770d":"markdown","dba5066e":"markdown","8318ce90":"markdown","9e3b3d27":"markdown","aadedd10":"markdown"},"source":{"79706582":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport itertools\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.stats.api as sms\nfrom scipy.stats import ttest_1samp, shapiro, levene, ttest_ind, mannwhitneyu, pearsonr, spearmanr, kendalltau, \\\n    f_oneway, kruskal\nfrom statsmodels.stats.proportion import proportions_ztest\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5be07ab":"df = pd.read_csv(\"\/kaggle\/input\/grocery-website-data-for-ab-test\/grocerywebsiteabtestdata.csv\")\ndf.head()","b0112c08":"df.shape","d04521f1":"df = df.groupby([\"IP Address\", \"LoggedInFlag\", \"ServerID\"])[\"VisitPageFlag\"].sum()","cf8f65b8":"df = df.reset_index(name=\"VisitPageFlagSum\")\ndf.head()","cd95a9c4":"df[\"VisitPageFlag\"] = df[\"VisitPageFlagSum\"].apply(lambda x: 1 if x != 0 else 0)\ndf.head()","2e9bfcc6":"df['group'] = df['ServerID'].map({1:'Test', 2:'Control', 3:'Control'})\ndf.drop(['ServerID','VisitPageFlagSum'],axis=1, inplace=True)","444679ab":"df.head()","9f3ac567":"df_control = df[df['group'] == 'Control'].copy()\ndf_control.reset_index(inplace=True, drop = True)","86f0fd7b":"df_test = df[df['group'] == 'Test'].copy()\ndf_test.reset_index(inplace=True, drop = True)","c3c6014c":"df_control.head()","c0f1ad8e":"df_test.head()","55ff4c5e":"df_control.describe().T","fdca8f40":"df_test.describe().T","a5eb313a":"control_sum_visit = df_control['VisitPageFlag'].count()\nprint(\"Sum visit for control group: \", control_sum_visit)\ncontrol_visit_1 = df_control[df_control['VisitPageFlag'] ==1]['VisitPageFlag'].count()\nprint(\"Visit Page target = 1 : \", control_visit_1)","36db607d":"control_ratio_visit = control_visit_1\/control_sum_visit\ncontrol_ratio_visit","61c928c6":"test_sum_visit = df_test['VisitPageFlag'].count()\nprint(\"Sum visit for test group: \", test_sum_visit)\ntest_visit_1 = df_test[df_test['VisitPageFlag'] ==1]['VisitPageFlag'].count()\nprint(\"Visit Page target = 1 : \", test_visit_1)","2ffd6948":"test_ratio_visit = test_visit_1\/test_sum_visit\ntest_ratio_visit","cb4a6936":"test_stat, pvalue = shapiro(df_control[\"VisitPageFlag\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","454bfe22":"test_stat, pvalue = shapiro(df_test[\"VisitPageFlag\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","9c97429c":"test_stat, pvalue = mannwhitneyu(df_control[\"VisitPageFlag\"],\n                                 df_test[\"VisitPageFlag\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","1432f022":"group_count = df.groupby(['group', 'VisitPageFlag'])['group'].count().reset_index(name='Count')\ngroupped = pd.crosstab(group_count['group'], group_count['VisitPageFlag'], values=group_count['Count'], aggfunc=np.sum, margins=True)","b54f2e4f":"100*groupped.div(groupped['All'], axis=0)","c2fd019a":"For A\/B testing to be applied, the data set must satisfy the Normality and Variance homogeneity assumptions. Then, it can be passed to the implementation of the hypothesis tests.\n   1. If normality and variance homogeneity is provided, an independent two-sample t-test (parametric test) is applied.\n   2. If normality and homogeneity of variance are not provided, the Mann-Whitney U test (non-parametric test) is performed.\nHow to check the assumption of normality?\nIn this, we will first determine the H0 and H1 hypotheses.\n\n- H0 : The assumption of normality is provided.\n- H1 : The assumption of normality is not provided.\n\nNow let's check the assumption of normality.","e52a676c":"When we look directly at the click rates, we see that there is a difference between the two groups. It seems that the new feature applied to the test group is getting more clicks. But this result can be misleading. Therefore, we should seek an answer to the question of whether there is a statistically significant difference. Now we will run A\/B testing.","e3c64568":"# Normality Assumption","5c664732":"Then I need to split the dataset into Test and Control groups. I will perform this operation with the help of ServerID. I set ServerID 1 as Test group and ServerID 2 and 3 as Control group.","8000106e":"We calculate the same ratio within the Test group.","8ebb3852":"# Mann-Whitney U Test","50e82477":"H0 is rejected because p-value<0.05. In other words, we can say statistically that there is a difference between the two groups.","62334aa4":"In the control data set, let's calculate the ratio of those who enter the page we want, compared to all those who enter the site.","1dc1699c":"# A\/B TEST\n![ab-testing-blog.png](attachment:1c6fa814-2e27-4711-a82a-86ea58c62dc1.png)","1480770d":"Let's examine the descriptive statistics of the control group.","dba5066e":"An IP Address may have visited the page more than once. So that this doesn't affect the results, I reduce the Visit value to 1 for users with multiple visits.","8318ce90":"# Conclusion\nWhile the rate of clicking on the link was 9.22% in the Control group, this rate increased to 11.55% in the Test group.\nAs a result of our tests, we can say that this rate increase is not accidental, but has been proven statistically.","9e3b3d27":"A\/B testing is a user experience research technique. They are tests that allow us to decide which would be better between any two features or strategies. With A\/B tests, many features such as being a member of a site, clicking, clicking on advertisements, going to a sale can be tested. In the dataset here, we will observe whether a change made in the web interface of a market increases the number of clicks. \n\nFirst, let's import the necessary libraries and read the data. Then let's see what the data looks like...","aadedd10":"H0 is rejected because the p-value is <0.05. The assumption of normality was not provided.\n\nTherefore, we will use the Mann-Whitney U test.\n\n- H0 : There is no significant difference between the two groups in terms of click rate to the desired page.\n- H1 : There is a difference."}}