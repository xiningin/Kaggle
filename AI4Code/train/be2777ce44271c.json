{"cell_type":{"6aa038bb":"code","5622983a":"code","7825d9d5":"code","4f79a8c3":"code","18694876":"code","4dd81b4b":"code","c432eff4":"code","7e29e088":"code","29b37054":"code","734e194c":"code","9cb441d0":"code","1991dbe8":"code","dd0b81c5":"code","eb0caa7d":"code","46fc1780":"code","0e4f95e1":"code","0917fe5a":"code","afdabe8a":"markdown","44eed589":"markdown","9a4aecbd":"markdown","0e4b4609":"markdown","d4177b55":"markdown","febd959a":"markdown","83a5fe17":"markdown","e86200d9":"markdown","1df23f65":"markdown","b3070e71":"markdown","37482886":"markdown","200707b6":"markdown","a287cab0":"markdown","40e5da4d":"markdown","04d131ed":"markdown","44b61cc2":"markdown","8bedaa7c":"markdown","6f78ef95":"markdown","f04251f0":"markdown","f7ef93c1":"markdown","5f185e3b":"markdown","64cf4941":"markdown","abdffbfc":"markdown","b8f293a8":"markdown","d4be6aa4":"markdown","4f9a154d":"markdown","68b4549d":"markdown","d9819fd3":"markdown","48037975":"markdown"},"source":{"6aa038bb":"import pandas as pd\nimport numpy as np\nimport cufflinks as cf\nfrom plotly.offline import init_notebook_mode, plot, iplot\nimport plotly.express as px","5622983a":"init_notebook_mode(connected=True)\ncf.go_offline()","7825d9d5":"# help(df.iplot)\n# help(df.figure)\n# help(px.bar)\n# help(px.histogram)","4f79a8c3":"df = pd.read_csv('..\/input\/forbes-billionaires-2021-30\/forbes_billionaires_geo.csv')\n#Make Self_made column values nicer for later plots\ndf['Self_made'].replace([True, False], ['Self-made', 'Not self-made'], inplace=True)\n#Remove column capitalization to minimize typos\ndf.columns = [col_n.lower() for col_n in df.columns]","18694876":"n_duplicates = df.duplicated().sum()\ndf_described = df.describe().round(3)\nnull_cnts = df.isnull().sum()\nnull_pcts = (df.isnull().sum() \/ len(df)).round(3)\ndf_null = pd.DataFrame({'n_null': null_cnts, \n              'pct_null': null_pcts}).sort_values('n_null', ascending=False)\n\nprint(f\"Dataframe Shape: {df.shape}\")\nprint(f\"Duplicate Rows: {n_duplicates}\\n\")\nprint(f\"Numerical Column Description:\")\ndisplay(df_described)\nprint(f\"All Column Null Summary:\")\ndisplay(df_null)","4dd81b4b":"#Replace null values with 'No Data'\ndf.fillna('NULL', inplace=True)","c432eff4":"top_20_worth = df.sort_values('networth', ascending=False).iloc[:20] \ntop_20_worth_fig = top_20_worth.figure(kind=\"bar\", \n                   x=\"name\", \n                   y=\"networth\", \n                   title=\"Net Worth and Wealth Source of Top 20 Wealthiest Billionaires\", \n                   xTitle=\"name\", \n                   yTitle=\"Net Worth (Billions $USD)\",\n                   color=\"blue\",\n                   text=\"source\")\ntop_20_worth_fig.update_yaxes(nticks=10)\ndisplay(top_20_worth_fig)","7e29e088":"networth_hist_01 = df[['networth']].figure(kind=\"histogram\", \n                        bins=(0, 200, 5), \n                        histnorm=\"percent\",\n                        title=\"Histogram of Net Worth (All Individuals)\", \n                        xTitle=\"Net Worth (Billions $USD)\", \n                        yTitle=\"Percent\",\n                        theme=\"ggplot\",\n                        color=\"blue\",\n                        bargap=0.1,\n                        orientation=\"v\",\n                        text=\"networth\")\n\nnetworth_hist_01.update_yaxes(nticks=20)\nnetworth_hist_01.update_xaxes(nticks=20)\n\ndisplay(networth_hist_01)","29b37054":"networth_hist_02 = df[['networth']].figure(kind=\"histogram\", \n                        bins=(0, 10, 1), \n                        title=\"Histogram of Net Worth (0-$10bn individuals)\", \n                        xTitle=\"Net Worth (Billions $USD)\", \n                        yTitle=\"Frequency\",\n                        theme=\"ggplot\",\n                        color=\"blue\",\n                        bargap=0.1,\n                        orientation=\"v\",\n                        text=\"networth\")\nnetworth_hist_02.update_yaxes(nticks=20)\nnetworth_hist_02.update_xaxes(nticks=10)\n\ndisplay(networth_hist_02)","734e194c":"def plot_worth_unstacked(col):\n    \"\"\"\n    Makes the following three plots relating net worth to a group (i.e. categorical column):\n        1. Bar chart of total net worth by group\n        2. Bar chart of number of billionaires by group\n        3. Bar chart of average net worth per billionaire in each group\n    Returns nothing but displays all three plots\n    \n    Parameters:\n        col (str): the column to group by and analyze\n    \"\"\"\n    sdf = df.copy()\n    if col == 'children' or col == 'age':\n        sdf[col].replace('NULL', -1, inplace=True)\n    sdf = sdf.groupby(col).agg(\n        {'networth': 'sum', 'name': 'count'}).sort_values('networth', ascending=False).round(3)\n    #We only plot the top 20 values by total net worth\n    if len(sdf.index) > 20:\n        sdf = sdf.iloc[0:20]\n    sdf['avg_networth'] = (sdf['networth'] \/ sdf['name']).round(3)\n    n = len(sdf.index.unique())\n\n    #Total net worth per category\n    total_worth_fig = px.bar(sdf,\n                 y=\"networth\", \n                 text=\"networth\", \n                 title=f\"Total Net Worth by {col.capitalize()} (Top {n})\")\n    total_worth_fig.update_traces(textposition=\"outside\", marker_color=\"lightsalmon\")\n    total_worth_fig.update_layout(yaxis={'title': 'Total Net Worth'}, xaxis={'nticks':30})\n\n    #Number of billionaires per category\n    count_fig = px.bar(sdf, y=\"name\", text=\"name\", \n                       title=f\"Number of Billionaires by {col.capitalize()} (Top {n} by Total Net Worth)\")\n    count_fig.update_traces(textposition=\"outside\", \n                            marker_color=\"crimson\")\n    count_fig.update_layout(yaxis={'title': 'Number of Billionaires'}, xaxis={'nticks':30})\n\n    #Worth per billionaire per category\n    avg_worth_fig = px.bar(sdf, \n                 y=\"avg_networth\", \n                 text=\"avg_networth\", \n                 title=f\"Average Net Worth by {col.capitalize()} (Top {n} by Total Net Worth)\")\n    avg_worth_fig.update_traces(textposition=\"outside\", marker_color=\"lightslategray\")\n    avg_worth_fig.update_layout(yaxis={'title': 'Average Net Worth per Person'}, xaxis={'nticks':30})\n    \n    display(total_worth_fig, count_fig, avg_worth_fig)\n    return None","9cb441d0":"#Remove null safe_made values\ndf_selfmade = df[~df['self_made'].isnull()]\n\n#Make histogram of net worth faceted by self made status\nselfmade_hist = px.histogram(df_selfmade, \n                   x=\"networth\", \n                   facet_row=\"self_made\", \n                   range_x=(0, 50), \n                   range_y=(0, 1600),\n                   facet_col_spacing=0.05,\n                   nbins=40, \n                   title=\"Histograms of Net Worth by Self-made Status\")\n\nselfmade_hist.update_layout(bargap=0.1, yaxis={'range':[0,1800]}, xaxis={'nticks':20})\n#Make labels for each subplot (right hand side) nicer\nselfmade_hist.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\n\n#Plot total worth by self made status\nplot_worth_unstacked(\"self_made\")\ndisplay(selfmade_hist)","1991dbe8":"plot_worth_unstacked(\"country\")","dd0b81c5":"plot_worth_unstacked(\"source\")","eb0caa7d":"plot_worth_unstacked(\"children\")","46fc1780":"plot_worth_unstacked(\"status\")","0e4f95e1":"import ipywidgets as widgets\nfrom ipywidgets import interact, interactive","0917fe5a":"#Make widget\ncols_to_analyze = ['self_made', 'country', 'source', 'children', 'status']\n#Make style to show full description\nfull_description_style = {'description_width': 'initial'}\ncol_widget = widgets.Dropdown(description=\"Column to Analyze:\", \n                              options=cols_to_analyze, \n                              style=full_description_style)\n\ninteractive_output = interactive(plot_worth_unstacked, col=col_widget)\ndisplay(interactive_output)","afdabe8a":"# What Do the Columns Mean?","44eed589":"**Net Worth Across All Individuals**","9a4aecbd":"# How Does Net Worth Vary by Source?","0e4b4609":"### Conclusions\nOver 20% of Education, Children, and Status are null. The other columns have few null values and none of the numerical columns have null values.","d4177b55":"**Help for Functions used in Notebook**","febd959a":"**Show duplicate rows, description of dataframe, and column null counts, and percent null values**","83a5fe17":"### Conclusions\nFrom the above plots, we can see the United States controls the most wealth and has the most billionaires. From the last plot, we can see that billionaires from France have the most money on average and billionaires from Hong Kong and France both have more money on average compared to billionaires from the US.","e86200d9":"**Package Imports**","1df23f65":"### Conclusions\nWe can see that the most wealth is owned by individuals for whom we don't have children data.  This is because this subset also contains the most billionaires as shown in the second chart. Amongst the subset that we do have data, most billionaires have 2 children. When we look at average wealth per billionaire, billionaires with seven children have surprisingly the highest average wealthy by more than double the second-highest.","b3070e71":"By reading the data description <a href=https:\/\/www.kaggle.com\/alexanderbader\/forbes-billionaires-2021-30> here<\/a>, we can learn what each of the columns represents:\n- Name: Name of billionaire\n- NetWorth: Billionaire net worth\n- Country: Country (presumably birth country)\n- Source: Source of wealth (i.e. investments, retail, Amazon)\n- Rank: Rank according to Forbes\n- Age: Age as of 2021\n- Residence: Country of residence\n- Citizenship: Citizenship \n- Status: Marital status\n- Children: Number of children\n- Self_made: Indicator if billionaire is self-made or not\n- Geometry: Point of residency using OpenCageGeocode","37482886":"### Conclusions\nBy far, most billionaires are married. However, the average wealth per person is by far the highest for billionaires that are currently in relationships.","200707b6":"We can see real estate is by far the largest contributor to billionaire net worth, but it's interesting that sources that are just large companies control a large portion of wealth and have lots of wealth per individual in those categories. For example, Jeff Bezos and his ex-wife alone are in the top 10.","a287cab0":"**Initialize for Offline Plotting**","40e5da4d":"### Conclusions\nFrom the first chart, we can see there are many more self-made billionaires than non-self made individuals. From the second chart, we can see wealth distribution is approximately the same between self-made and non self-made individuals. Interestingly, the non-self-made billionaires control more wealth per person.","04d131ed":"# What is the Distribution of Wealth (Net Worth)?","44b61cc2":"**Read Data and Do Some Initial Cleaning**","8bedaa7c":"# How Does Wealth Vary by Country?","6f78ef95":"# How Does Net Worth Vary by Number of Children?","f04251f0":"# Who Are the Wealthiest People in the World? What Are Their Net Worths?","f7ef93c1":"### Let's Look Closer at the Range between 0 and 10 Billion USD","5f185e3b":"### Conclusions\nFrom the first chart, we can see over 75% of the billionaires have net worth between 1 and 5 billion USD. From the second chart, we can see over 50% of the billionaires have net worth between 1 and 2 billion USD. This means that individuals with net worths of over 5 billion USD make up less than 25% of the data. This puts into perspective the wealth of individuals like Jeff Bezos, who has a net worth of over 170 billion according to Forbes.","64cf4941":"## Extra: Interactive Plotting\nLet's use iPyWidgets to the plots interactive!\n<br>\n<br>\nThroughout this notebook, we plotted the same charts for various columns in the dataframe. Rather than writing code to do this one-by-one, we can instead use iPyWidgets to have user-driven input that shows only the variable we want to analyze at a given time.\n<br>\n<br>\nTo do this, we simply create a widget with the columns we viewed earlier and call interactive on the plotting function, using the widget as the function parameter rather than an individual column.","abdffbfc":"## Final Conclusions and Remarks\nOverall, these charts show the danger of looking at total net worth by category. We can see in most of the visualizations that trends found in average net worth per category significantly differ from trends in total net worth.\n<br>\n<br>\nCreating this notebook was a great lesson in Plotly and exploratory data analysis. If you enjoyed reading, **I would greatly appreciate an upvote on Kaggle or a star on Github**. I would also appreciate any improvements to the code, feedback, or questions. Until next time!","b8f293a8":"### Conclusions\nThe wealthiest individual is Jeff Bezos with his wealth from Amazon. It seems the most common source is technology companies, as we see companies like Amazon, Tesla, Microsoft, Facebook, and Google in the top 20. Another notable finding is that three members of the Walton family (Walmart) appear in the top 20 with net worths of around 60 billion USD.","d4be6aa4":"**Import Packages**","4f9a154d":"**Make Widget and Display Interactive Output**","68b4549d":"# How Does Wealth Vary by Self-made Status?","d9819fd3":"# What Does the Data Look Like?","48037975":"# Forbes Billionaire Data Exploration\nNotebook by Michael Kalmus (https:\/\/github.com\/mkalmus). If you enjoy, please consider starring the repository on Github and upvoting on Kaggle!\n<br>\n<br>\nAccording to Wikipedia (<a href=https:\/\/en.wikipedia.org\/wiki\/The_World%27s_Billionaires>Source<\/a>), the world has 2,755 billionaires. In this notebook, we explore a dataset containing information from the <a href=https:\/\/www.forbes.com\/billionaires\/> Forbes data<\/a> about these billionaires, whose net worths range from 177 billion USD to 1 billion USD. The dataset was curated by Alexander Bader and can be found <a href=https:\/\/www.kaggle.com\/alexanderbader\/forbes-billionaires-2021-30>here<\/a>. The dataset was also updated by Sourav Roy <a href=https:\/\/www.kaggle.com\/roysouravcu\/forbes-billionaires-of-2021>here<\/a>.\n<br>\n<br>\nThis notebook uses Plotly, Plotly Express, and Cufflinks to create interactive charts. For more information, read the Plotly documentation <a href=https:\/\/plotly.com\/python\/>here<\/a> and the Cufflinks documentation <a href=https:\/\/github.com\/santosjorge\/cufflinks>here<\/a>. The image below also comes from the Forbes article.\n<br>\n<img src=\"https:\/\/thumbor.forbes.com\/thumbor\/1500x0\/smart\/filters:format(jpeg)\/https%3A%2F%2Fimages.forbes.com%2FBillionaires2021-ListHeader-2%2FBillionaires2021-Desktop-LanderHeader-v2.png\" alt=\"billionaire thumbnail\">"}}