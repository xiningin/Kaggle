{"cell_type":{"39124793":"code","740b4fb5":"code","84d9e081":"code","da720b78":"code","fc19ecb2":"code","804fbf30":"code","4e4e71b2":"code","cc229571":"code","7030d3e0":"code","8523f13b":"code","82d245d5":"code","8a516743":"code","33266f00":"code","cd57d15a":"code","3a6cfd1b":"code","e026ae3d":"code","48f8f60e":"code","1f507160":"code","b76fefb2":"code","0cabe2f6":"code","80faeb22":"code","c349b87b":"code","f0e73e8f":"code","a534a0c6":"code","0ca54883":"code","938eb270":"code","4bdcf0d5":"code","454aa4c4":"code","110d8cab":"code","ca1bb7fa":"code","25b32b9f":"code","50b58311":"code","dc652eba":"code","606cdbfb":"code","1a4797a2":"code","f3b09b3f":"code","3b6b8013":"code","1eab20d8":"code","04edf917":"code","6f375662":"code","7c478af6":"code","ab92e645":"code","67d7d84b":"code","c4262885":"markdown","1c183d4d":"markdown","3c8a9a12":"markdown","1f0eb668":"markdown","0b3c2575":"markdown","755001fa":"markdown","08b965e4":"markdown","0ada998e":"markdown","450b10c7":"markdown","f3fb0945":"markdown","c7095535":"markdown","51205507":"markdown","b9cc3ad5":"markdown","47c1644c":"markdown","ffe37d19":"markdown","c18b96f2":"markdown","50b8d592":"markdown","5e0a079a":"markdown","5e3ca35c":"markdown","4b0dd674":"markdown","ed4940ad":"markdown","85719fef":"markdown","2b416578":"markdown","7bb05e81":"markdown","7fe4b6ce":"markdown","9cf83df9":"markdown","c3249865":"markdown","4b4990c9":"markdown","da284372":"markdown","ed09b2da":"markdown","d31f3161":"markdown","845d72a1":"markdown","b448f4c8":"markdown"},"source":{"39124793":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport os\nimport glob\nimport warnings \n%matplotlib inline","740b4fb5":"#### Reading all files together, ran only once\n\nfolder_name = '..\/input\/bay-wheels-2019-data\/'\nfiles = glob.glob(os.path.join(folder_name, \"*.csv\"))\ndf = pd.concat((pd.read_csv(f) for f in files), ignore_index = True)\nprint(df.shape)\ndf.sample(5)","84d9e081":"#Saving the master data (File Uploaded)\n\ndf.to_csv('fordgo_2019_master.csv', index = False)","da720b78":"ford2019 = pd.read_csv('fordgo_2019_master.csv')","fc19ecb2":"ford2019.sample(10)","804fbf30":"ford2019.info()","4e4e71b2":"ford2019.isnull().sum()","cc229571":"ford2019.duplicated().sum()","7030d3e0":"ford2019.bike_share_for_all_trip.value_counts()","8523f13b":"ford2019.user_type.value_counts()","82d245d5":"#Copy of the original dataframe\ncopy_ford = ford2019.copy()","8a516743":"#Drop the rental access method column as 95% column is empty\ncopy_ford.drop('rental_access_method',axis=1,inplace=True)","33266f00":"#Convert start time and end time to datetime datatype\ncopy_ford.start_time = pd.to_datetime(copy_ford.start_time)\ncopy_ford.end_time = pd.to_datetime(copy_ford.end_time)\n\n#Converting the station_id's and bike_id to string \ncopy_ford.start_station_id = copy_ford.start_station_id.astype('str')\ncopy_ford.end_station_id = copy_ford.end_station_id.astype('str')\ncopy_ford.bike_id = copy_ford.bike_id.astype('str')\n\n#Convert usertype and bike share to category\ncopy_ford.user_type = copy_ford.user_type.astype('category')\ncopy_ford.bike_share_for_all_trip = copy_ford.bike_share_for_all_trip.astype('category') \n\ncopy_ford.info()","cd57d15a":"copy_ford['duration_min'] = copy_ford['duration_sec']\/60\ncopy_ford['duration_min'] = copy_ford['duration_min'].astype(int)","3a6cfd1b":"#Getting the start and end date\ncopy_ford['start_date'] = copy_ford['start_time'].dt.strftime('%Y-%m-%d')\ncopy_ford['end_date'] = copy_ford['end_time'].dt.strftime('%Y-%m-%d')\n\n#Getting the start and end hour\ncopy_ford['start_hour'] = copy_ford['start_time'].dt.strftime('%H')\ncopy_ford['end_hour'] = copy_ford['end_time'].dt.strftime('%H')\n\n#Getting the start and end day\ncopy_ford['start_day'] = copy_ford['start_time'].dt.strftime('%a')\ncopy_ford['end_day'] = copy_ford['end_time'].dt.strftime('%a')\n\n#Getting the start and end month\ncopy_ford['start_month'] = copy_ford['start_time'].dt.strftime('%B')\ncopy_ford['end_month'] = copy_ford['end_time'].dt.strftime('%B')","e026ae3d":"copy_ford.head()","48f8f60e":"#Define function to calculate distance travelled using Haversine Formula\nfrom math import radians, cos, sin, asin, sqrt \ndef distance(lat_1, lat_2, lon_1, lon_2): \n      \n    # radians which converts from degrees to radians. \n    lon_1 = radians(lon_1) \n    lon_2 = radians(lon_2) \n    lat_1 = radians(lat_1) \n    lat_2 = radians(lat_2) \n       \n    # Haversine formula  \n    dlon = lon_2 - lon_1  \n    dlat = lat_2 - lat_1 \n    a = sin(dlat \/ 2)**2 + cos(lat_1) * cos(lat_2) * sin(dlon \/ 2)**2\n  \n    c = 2 * asin(sqrt(a))  \n     \n    # Radius of earth in kilometers. Use 3956 for miles \n    r = 6371\n    dist = c * r\n       \n    # calculate the result \n    return(dist) ","1f507160":"#Finding the distance travelled\ncopy_ford['distance_km'] = copy_ford.apply(lambda x: distance(x['start_station_latitude'], x['end_station_latitude'],\n                                                              x['start_station_longitude'],x['end_station_longitude']), axis=1)","b76fefb2":"#KM to Miles\ncopy_ford['distance_miles'] = copy_ford['distance_km'] * 0.621371","0cabe2f6":"copy_ford.sample(6)","80faeb22":"copy_ford.info(null_counts=True)","c349b87b":"copy_ford.to_csv('fordgo_2019_master_clean.csv',index=False)","f0e73e8f":"#Basic Color Palette\nbasic_color = sb.color_palette()[0]","a534a0c6":"#Trips every hour\nplt.figure(figsize=(7,5))\nsb.set_style('darkgrid')\nsb.countplot(data=copy_ford,x='start_hour',color=basic_color)\nplt.ylabel('#Trips')\nplt.xlabel('Start Hour of Day');\nplt.title('Trips every hour of the day');","0ca54883":"#Defining the order of Days\nday_order = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\nday_cat = pd.api.types.CategoricalDtype(ordered=True, categories=day_order)\ncopy_ford['start_day'] = copy_ford['start_day'].astype(day_cat)","938eb270":"#Trips every day\nplt.figure(figsize=(8,6))\nsb.countplot(data=copy_ford,x='start_day',color=basic_color)\nplt.ylabel('#Trips');\nplt.xlabel('Day of Week');\nplt.title('Trips every day of the week')","4bdcf0d5":"#Defining the order of Months\nmonth_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nmonth_cat = pd.api.types.CategoricalDtype(ordered=True, categories=month_order)\ncopy_ford['start_month'] = copy_ford['start_month'].astype(month_cat)","454aa4c4":"#Trips every month\nplt.figure(figsize=(8,6))\nsb.countplot(data=copy_ford,x='start_month',color=basic_color)\nplt.xlabel('Month of Year');\nplt.ylabel('#Trips');\nplt.title('Trips every Month')\nplt.xticks(rotation=15);","110d8cab":"copy_ford.duration_sec.describe()","ca1bb7fa":"bins = np.arange(0, 3600, 60)\n\nplt.figure(figsize=(8,6))\nplt.hist(data = copy_ford, x = 'duration_sec',bins=bins);\nplt.title(\"Trip Duration in Seconds\", y=1.05)\nplt.ylabel('Number of Bike Trips')\nplt.xlabel('Duration (Sec)');","25b32b9f":"copy_ford.duration_min.describe()","50b58311":"bins = np.arange(0, 50, 1)\nticks = [0, 5, 10, 15, 20, 25, 30,  35, 40, 45,50]\nlabels = ['{}'.format(v) for v in ticks]\n\nplt.figure(figsize=(8,6))\nplt.hist(data = copy_ford, x = 'duration_min',bins= bins);\n\nplt.title(\"Trip Duration in Minutes\", y=1.05)\nplt.xlabel('Duration (Min)')\nplt.ylabel('Number of Bike Trips')\nplt.xticks(ticks, labels);","dc652eba":"copy_ford.distance_miles.describe()","606cdbfb":"bins = np.arange(0, 5, 1.34)\nplt.figure(figsize=(8,6))\nplt.hist(data = copy_ford, x = 'distance_miles',bins=bins)\n\nplt.title(\"Trips Distance in Miles\")\nplt.xlabel('Distance (Miles)')\nplt.ylabel('Number of Bike Trips');","1a4797a2":"plt.figure(figsize=(8,6))\nsb.countplot(data=copy_ford, x='user_type', color=basic_color);\nplt.xlabel('User Type');\nplt.ylabel('Count')\nplt.title(\"Different Types of User\");","f3b09b3f":"plt.figure(figsize=(8,6))\nsb.countplot(data=copy_ford, x='bike_share_for_all_trip', color=basic_color);\nplt.xlabel('Bike Share for All Trip');\nplt.ylabel('Count')\nplt.title(\"Bike Share for all trips activation\");","3b6b8013":"plt.figure(figsize = [12, 10])\nsb.heatmap(copy_ford.corr(), annot = True, fmt = '.3f', cmap = 'vlag_r', center = 0);","1eab20d8":"user_type_count = copy_ford.groupby([\"start_day\", \"user_type\"]).size().reset_index()\n\nplt.figure(figsize=(12,10))\naxis = sb.pointplot(x='start_day', y=0, hue='user_type', scale=.7, data=user_type_count)\nplt.title('The weekly bike rides per user type', fontsize=16, y=1.015)\nplt.xlabel('Day')\nplt.ylabel('Count')\nleg = axis.legend()\naxis = plt.gca()","04edf917":"plt = copy_ford.groupby('user_type')['distance_miles'].mean().plot(kind='barh', figsize=(10,8));\n\nplt.set_title('Average Distance (Miles) by User Type')\nplt.set_xlabel('Average Distance Traveled (Miles)')\nplt.set_ylabel('User Type');","6f375662":"data_sub = copy_ford.query('duration_min < 20')\n\ng = sb.catplot(data=data_sub, y='duration_min', col=\"user_type\", kind='box', color = basic_color)\n\ng.set_titles(col_template = '{col_name}')\ng.set_axis_labels(\"\", \"Duration (Min)\")\ng.fig.suptitle('Duration (Mins) by User Type');","7c478af6":"sb.barplot(data=copy_ford, x='start_day', y='duration_min', color=basic_color);\nplt.xlabel('Day of Week');\nplt.ylabel('Avg. Trip Duration in Minute')\nplt.title('Duration on the days of week');","ab92e645":"sb.pointplot(data=copy_ford, x='start_day', y='duration_min', hue='user_type', dodge=0.3,);\n\nplt.xlabel('Day of Week');\nplt.ylabel('Avg. Trip Duration in Minute')\nplt.legend(title='User Type');","67d7d84b":"plt.figure(figsize=(9,8))\nplt.suptitle('Hourly trips day wise for customers and subscribers', fontsize=14, fontweight='semibold')\n\n# heatmap for customers\nplt.subplot(1, 2, 1)\ncustomer = copy_ford.query('user_type == \"Customer\"').groupby([\"start_day\",\"start_hour\"])[\"bike_id\"].size().reset_index()\ncustomer = customer.pivot(\"start_hour\", \"start_day\", \"bike_id\")\nsb.heatmap(customer,cmap='RdPu')\n\nplt.title(\"Customer\", y=1.015)\nplt.xlabel('Day')\nplt.ylabel('Start Hour')\n\n# heatmap for subscribers\nplt.subplot(1, 2, 2)\nsub = copy_ford.query('user_type == \"Subscriber\"').groupby([\"start_day\",\"start_hour\"])[\"bike_id\"].size().reset_index()\nsub = sub.pivot(\"start_hour\", \"start_day\", \"bike_id\")\nsb.heatmap(sub,cmap='RdPu')\n\nplt.title(\"Subscriber\", y=1.015)\nplt.xlabel('Day')\nplt.ylabel('');","c4262885":"<a id='assess'><\/a>\n## Data Assessing","1c183d4d":"### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?\n - Heatmap suggested that there might be relation between, start station latitude and start station longtitude, end station latitude and end station longtitude.\n - Customers and subscribers regularly use the rides, the no of rides for customers are less because we have very less customers and more subscribers. Also there is a decrease during the weekends for both subscribers and customers, this is because of a weekend.\n - Average distance travelled by subscribers is less than customers. This might be because customers prefer taking bikes for longer distances and the subscribers use rides for their regular commute.\n - The mean travel duration is also more than subscribers as they travel more distance.\n - Shorter trips on weekdays and longer trips happen mostly on weekends.\n \n### Did you observe any interesting relationships between the other features (not the main feature(s) of interest)?\nThere is a difference in the trip duration of customers and subscribers. Customers trips are usually longer than for subscribers, mostly due to the fact that they have leisure trips during the weekends, which are longer. Subscribers mostly use bike sharing system for regular commute purpose such as travelling to and from work.  \n\n<a id='multivariate'><\/a>\n## Multivariate Exploration","3c8a9a12":"**Customers and subscribers regularly use the rides, the no of rides for customers are less because we have very less customers and more subscribers**\n\n**Also there is a decrease during the weekends for both subscribers and customers, this is because of a weekend.**","1f0eb668":"#### Define \nCreate a column for duration in minutes\n#### Code","0b3c2575":"**Trips are shorter from Monday to Friday compared to weekends. It seems there is a regular planned use of sharing system on work days, while leisure use on weekends.**","755001fa":"#### Test \nTesting the above two executions","08b965e4":"#### Define\nFind the distance cycled in km and miles using longitude and latitude of start and end using Haversine Formula\n#### Code\nReference : https:\/\/www.geeksforgeeks.org\/program-distance-two-points-earth\/","0ada998e":"#### Define\n95% of rental access method is empty so drop it\n\n#### Code","450b10c7":"#### Save the cleaned dataset","f3fb0945":"**Again obvious, the most active days of the week are the** ***weekdays (Mon-Fri)***.","c7095535":"**This heatmap suggests there might be relation between, start station latitude and start station longtitude, end station latitude and end station longtitude. This does not prove the correlation. We need futher investigation.**","51205507":"**This suggests that average distance travelled by subscribers is less than customers. This might be because customers prefer taking bikes for longer distances and the subscribers use rides for their regular commute.** ","b9cc3ad5":"### Discuss the distribution(s) of your variable(s) of interest. Were there any unusual points? Did you need to perform any transformations?\nThe number of trips rose around 8-10am and 5-7pm during a day, weekdays (Mon-Fri) had more trips compared to weekends. There were not many other issues except for a surprise in the no of trips deeping in the month of May and June.\n\nMost rides lasted around 8-12 mins.\n### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?\nThe trip duration in seconds and minutes had to be zoomed in using the ticks and labels after finding the describe characteristics of them. \n","47c1644c":"### Talk about some of the relationships you observed in this part of the investigation. Were there features that strengthened each other in terms of looking at your feature(s) of interest?\nMultivariate exploration reinforced the observations found in the earlier bivariate exploration and univariate exploration.The short\/quicker use of subscribers is communicated through their high usage on rush hours from Monday to Friday, stipilating that the use is mostly for office commutes. Customer use shows that they're using the bike sharing system heavily over weekends and in the afternoon, probably for leisure.\n\n### Were there any interesting or surprising interactions between features?\n- Most rides happen during the evening time on all days, and also in the morning during weekdays. \n- Rides on weekends i.e on Saturday and Sunday have longer durations than the bike rides on weekdays.  \n\n#### In general, the overall observation is that there are not much over the top surprising interactions, rather every feature plot starts making more sense once we look at them properly.","ffe37d19":"#### Define\nConvert the datatypes mentioned in the assess section\n\n#### Code & Test","c18b96f2":"#### Define\nFind the date, hour, day, month from start and end time seperately\n#### Code","50b8d592":"#### Test","5e0a079a":"<a id='univariate'><\/a>\n## Univariate Exploration ","5e3ca35c":"**This shows that out 25 million more than 17.5 million rides travel upto 1.34 mile only which is also the mean of the distances**","4b0dd674":"#### Issues:\n- rental access method can be dropped\n- start time and end time are not timestamps.\n- start and station id should be object\n- user type and bike_share_for_all_trip can be of category datatype\n- bike id should be object\n- We can have duration in minutes\n- Seperate date, hour, day, month from start and end time\n- We can calculate distance travelled in km and miles using longitude and latitude\n","ed4940ad":"### Structure of dataset\nThe dataset has 2,500,000+ rides which where taken in the year 2019. I dropped the app access column as 95% values were empty. While I did not drop any of the rows as I feel the start time, end time, longitude and latitude are a important factor. During further cleaning I have added columns to understand and analyze the dataset better.<br>\n\n- Trip Time: start\/end time, duration in seconds and minutes<br>\n- Stations: start\/end station id, name<br>\n- Geolocation : Latitude and longitude of start and end of trip.<br>\n- Subscribed or One time customer : user type<br>\n- Bikes: bike id<br>\n- Extracted Features from the start and end time : date, hour, day, month\n- Distance Travelled: In km and miles.\n\n### Main feature(s) of interest in dataset\n- day\n- month\n- hour\n- duration\n- distance\n- user type\n\n### What features in the dataset do you think will help support your investigation into your feature(s) of interest?\u00b6\nThe most exciting features I feel will be the hour,day,month along with distance travelled and trip duration according to the user type.","85719fef":"**Carrying forward from the previous graph, this boxplot shows that the mean duration is also more than subscribers as they travel more distance.**","2b416578":"<a id='clean'><\/a>\n## Data Cleaning","7bb05e81":"**Subscribers ride much quicker or shorter trips than customers on each day of the week. As seen many times above, both have an increase of trip duration on weekends, mostly for unsubscribed users.**","7fe4b6ce":"**Customers use the sharing system more often on weekends and peak hours mostly around 8am, 5pm and Subscribers use it on mostly on weekdays during the peak hours of 8am and 5pm**","9cf83df9":"<a id='bivariate'><\/a>\n## Bivariate Exploration","c3249865":"# Analyze 2019 FordGoBikes Dataset\n#### By Divyansh Shah (June 2020)\n\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#gather\">Data Gathering<\/a><\/li>\n<li><a href=\"#assess\">Data Assessing<\/a><\/li>\n<li><a href=\"#clean\">Data Cleaning<\/a><\/li>\n<li><a href=\"#univariate\">Univariate Explorations<\/a><\/li>\n<li><a href=\"#bivariate\">Bivariate Explorations<\/a><\/li>\n<li><a href=\"#multivariate\">Multivariate Explorations<\/a><\/li>\n\n<a id='intro'><\/a>\n## Introduction\nBay Wheels is a regional public bicycle sharing system in the San Francisco Bay Area, California operated by Motivate in a partnership with the Metropolitan Transportation Commission and the Bay Area Air Quality Management District. As of January 2018, the Bay Wheels system had over 2,600 bicycles in 262 stations across San Francisco, East Bay and San Jose. The bicycles are available 24 hours a day, seven days a week for periods ranging from a single ride (up to 30 minutes) to a day pass, in 30-minute increments, or customers can purchase an annual subscription which gives them unlimited rides up to 45-minutes in duration. Single rides cost \\\\$2 per trip, day passes cost \\\\$10 per day, and memberships cost \\\\$15 per month or \\\\$149 per year.<br> I have taken all the data for 2019.\n[Dataset Download Link](https:\/\/s3.amazonaws.com\/baywheels-data\/index.html)\n\n\n## Data Gathering\n<a id='gather'><\/a>","4b4990c9":"Plots for no of trips per hour-of-day, day-of-week and month.","da284372":"**As expected winters have the lowest no. of trips, but May and June see a dip in the no of rides. Would be interesting to understand why.** ","ed09b2da":"**Most ride duration ranges from 180-660 seconds**","d31f3161":"**Out of the 25 million rides, 20 million+ rides were taken by subscribers.**","845d72a1":"**Most ride duration ranges from 3-11 minutes. Suggesting that the rides are short travel.**","b448f4c8":"**Not at all suprising, the most active hours of the day are the rush hours i.e** ***8am-10am*** **and** ***5pm-7pm***"}}