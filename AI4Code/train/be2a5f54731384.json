{"cell_type":{"880b2246":"code","d101c536":"code","ad3c4f70":"code","8e61aced":"code","f282694a":"code","c3732f09":"code","eb67a347":"code","f5801a3d":"code","93545142":"code","2b24909b":"code","43fef0e7":"code","34ceea0c":"code","09765ee9":"code","fbb849f8":"code","fa313acb":"code","da3dfb73":"code","35fee05b":"code","34b4bb19":"code","e3bb0e86":"code","93ebc909":"code","615e1776":"code","ecf4d791":"code","cc94000f":"markdown","440f5057":"markdown"},"source":{"880b2246":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d101c536":"from sklearn.feature_selection import mutual_info_regression\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.offline as py","ad3c4f70":"data=pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')\ndata","8e61aced":"X=data.drop('HeartDisease',axis=1)\ny=data.HeartDisease","f282694a":"matrix =np.triu(data.corr())\nfig,ax = plt.subplots(figsize=(12,6),dpi=100)\nsns.heatmap(data.corr(),annot=True,vmax=1,vmin=-1,center=0,ax=ax,mask=matrix,fmt=\".2f\");","c3732f09":"def plot_mi_scores(scores):\n    scores = scores.sort_values(ascending=True)\n    width = np.arange(len(scores))\n    ticks = list(scores.index)\n    plt.barh(width, scores)\n    plt.yticks(width, ticks)\n    plt.title(\"Mutual Information Scores\")","eb67a347":"def make_mi_scores(X, y):\n    X = X.copy()\n    for colname in X.select_dtypes([\"object\", \"category\"]):\n        X[colname], _ = X[colname].factorize()\n    # All discrete features should now have integer dtypes\n    discrete_features = [pd.api.types.is_integer_dtype(t) for t in X.dtypes]\n    mi_scores = mutual_info_regression(X, y, discrete_features=discrete_features, random_state=0)\n    mi_scores = pd.Series(mi_scores, name=\"MI Scores\", index=X.columns)\n    mi_scores = mi_scores.sort_values(ascending=False)\n    return mi_scores","f5801a3d":"mi_scores = make_mi_scores(X, y)","93545142":"print(mi_scores.head(20))\n# print(mi_scores.tail(20))  # uncomment to see bottom 20\n\nplt.figure(dpi=100, figsize=(8, 5))\nplot_mi_scores(mi_scores.head(20))","2b24909b":"plt.figure(figsize=(15,5))\nsns.countplot(x='Age',data=data)\nplt.title('Age Distribution')\nplt.ylabel('Count')","43fef0e7":"plt.figure(figsize=(15,5))\nplt.subplot(221)\nsns.histplot(x='Age',data=data,kde=True)\nplt.title('Age Distribution')\nplt.ylabel('Count')\n\nplt.subplot(222)\nsns.histplot(x='Cholesterol',data=data,kde=True)\nplt.title('Cholesterol data')\nplt.ylabel('Count')\n\nplt.figure(figsize=(15,5))\nplt.subplot(223)\nplt.title('MaxHR Data')\nsns.histplot(x='MaxHR',data=data,kde=True)\nplt.ylabel('Count')\n\nplt.subplot(224)\nsns.histplot(x='RestingBP',data=data,kde=True)\nplt.title('RestingBP Data')\nplt.ylabel('Count')","34ceea0c":"data_new=X\nfor colname in X.select_dtypes([\"object\", \"category\"]):\n        data_new[colname], _ = X[colname].factorize()\n    # All discrete features should now have integer dtypes\n   ","09765ee9":"data_new  # Ordinally encoded ","fbb849f8":"for cname in data_new.columns:   \n    sns.relplot(x=cname,y=y,data=X,hue='ChestPainType',palette=['b','r','g','y'])","fa313acb":"px.box(data,x=data.MaxHR,facet_col=\"HeartDisease\",animation_frame=data.Age)","da3dfb73":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(data_new,y,train_size=800,random_state=0)","35fee05b":"X_train.head()","34b4bb19":"from sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor","e3bb0e86":"Random_forest=RandomForestRegressor(n_estimators=25,random_state=0)\nRandom_forest.fit(X_train,y_train)\n\ny_predict=Random_forest.predict(X_test)\n\ny_predict1=y_predict>=0.5\ny_predict1","93ebc909":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_predict1,y_test)","615e1776":"from sklearn.metrics import classification_report, plot_confusion_matrix,roc_auc_score,f1_score,recall_score\n\nrf_f1 = f1_score(y_test, y_predict1)\nrf_recall = recall_score(y_test, y_predict1)\nrf_auc = roc_auc_score(y_test, y_predict1)","ecf4d791":"print('fi score:',rf_f1,'rf_recall:',rf_recall,'rf_auc:',rf_auc) ","cc94000f":"One thing worth noticing above is that most of the death is due to ChestPainType '2' i.e. ASY Asymptomatic","440f5057":"# Train_test split done "}}