{"cell_type":{"3b67a020":"code","f51c845c":"code","939be6aa":"code","338e9f4d":"code","72b386d7":"code","6a482a96":"code","b81f74cb":"code","aa28130b":"code","006eabbe":"code","d617e768":"code","30069550":"code","411cd5e4":"code","8f3d0ea8":"code","6e69b4ec":"code","2bff502c":"code","cd753687":"code","47dec3cf":"code","55ec2f66":"code","ce13a77e":"code","a662367f":"code","a50eadd4":"code","ef9164e0":"code","b8f3e09b":"code","878bd3fd":"code","40482149":"code","f336c5d6":"code","f1122224":"code","94d66f76":"code","fa43478c":"code","c362879b":"code","6fa72a7c":"markdown","d03b50e5":"markdown","379b3d37":"markdown","4b4de90c":"markdown","c023f726":"markdown","07a4bead":"markdown","ab7a036c":"markdown","3c9dc002":"markdown","93999c50":"markdown","46ac5448":"markdown","e7e2e2e6":"markdown","ffbd4aff":"markdown","0dd7c24c":"markdown","61482231":"markdown","cec7db85":"markdown","595a89f2":"markdown","116ee17a":"markdown","2fb3ec4e":"markdown"},"source":{"3b67a020":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f51c845c":"import seaborn as sns\nimport matplotlib.pyplot as plt","939be6aa":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom lightgbm import LGBMClassifier","338e9f4d":"df = pd.read_csv('\/kaggle\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_size.csv')\ndf2 = pd.read_csv('\/kaggle\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_lter.csv')\ndf.head()","72b386d7":"plt.figure(figsize=(8,6))\nplt.scatter(df['culmen_length_mm'], df['flipper_length_mm'], color='orange', alpha=0.75)\nplt.xlabel(\"Culmen Length\", size=16)\nplt.ylabel(\"Flipper Length\", size=16)\nplt.title(\"Scatter Plot\", size=22)","6a482a96":"fig, ax = plt.subplots(figsize=(12,6))\nsns.heatmap(df.corr(), annot=True, ax=ax)","b81f74cb":"fig, ax = plt.subplots(figsize =(8,5))\nax.hist(df[df.columns[2]], rwidth=0.8, alpha=0.55)\nax.axvline(df[df.columns[2]].median(), color='red')\nax.axvline(df[df.columns[2]].mean())\nplt.xlabel(\"Culmen Length\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Histogram\", size=22)","aa28130b":"sns.pairplot(df, hue='species')","006eabbe":"df.isnull().sum()","d617e768":"for col in list(df.columns):\n    if df[col].dtypes=='object':\n        print('Levels of',col,':',df[col].value_counts().keys())","30069550":"df['sex'].replace('.',np.nan, inplace=True)\ndf.isnull().sum()","411cd5e4":"for col in list(df.columns):\n    if df[col].dtypes=='object':\n#         print('Max (mode) of',col,'****',type(df[col].mode()[0]))\n        df[col].fillna(df[col].mode()[0], inplace=True)\n    else:\n        df[col].fillna(df[col].median(), inplace=True)\nprint(df.isnull().sum())\nprint(\"\\nAll Null values eliminated\")","8f3d0ea8":"df['species'].value_counts()","6e69b4ec":"X = df.drop(['species'], axis=1)\nY = df['species']\nprint(X.shape, Y.shape)","2bff502c":"xtrain, xtest, ytrain, ytest = train_test_split(X, Y, train_size=0.85, stratify=Y, random_state=42)\nytrain2 = pd.get_dummies(ytrain.values, drop_first=True)\nytest2 = pd.get_dummies(ytest.values, drop_first=True)\nprint(xtrain.shape, ytest.shape)","cd753687":"acc_score = []\nfor i in range(3,15,2):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(xtrain['culmen_length_mm'].values.reshape(-1,1), ytrain.values)\n    ypreds = knn.predict(xtest['culmen_length_mm'].values.reshape(-1,1))\n    acc_score.append(accuracy_score (ypreds, ytest))","47dec3cf":"plt.figure(figsize=(12,8))\nplt.plot([i for i in range(3,15,2)],acc_score,  color='orange')\nplt.xlabel(\"Neighbors considered\", size=16)\nplt.ylabel(\"Accuracy score\", size=16)\nplt.title(\"Elbow plot\", size=22)","55ec2f66":"for i,k in zip(ypreds[:25], ytest.values[:25]):\n    print(f\"Predicted: {i}\\t Actual: {k}\")","ce13a77e":"dtree = DecisionTreeClassifier(max_depth=5)\ndtree","a662367f":"mapping = {'Adelie':1,\n          'Gentoo':2,\n          'Chinstrap':3}\nytrain = ytrain.map(mapping)\nytest = ytest.map(mapping)","a50eadd4":"def resolve_index_cols(df):\n    df.reset_index(inplace=True)\n    df.drop(['index','island','sex'], axis=1, inplace=True)\n    return df","ef9164e0":"xtrain = resolve_index_cols(xtrain)\nxtest = resolve_index_cols(xtest)","b8f3e09b":"dtree.fit(xtrain, ytrain)","878bd3fd":"ypreds= dtree.predict(xtest)","40482149":"xr = range(3,11)\nscores = []\nfor i in xr:\n    dt = DecisionTreeClassifier(max_depth=i)\n    dt.fit(xtrain, ytrain)\n    print(f\"Fit DTree with depth {i}\")\n    preds = dt.predict(xtest)\n    scores.append(accuracy_score(preds, ytest))\n","f336c5d6":"plt.figure(figsize=(12,6))\nplt.plot(xr,scores, color='orange')\nplt.xlabel(\"Max Depth\", size=16)\nplt.ylabel(\"Accuracy score\", size=16)\nplt.title(\"Elbow plot\", size=22)","f1122224":"lgc = LGBMClassifier(n_estimators=100)","94d66f76":"xr = range(5,151,10)\nlgc_scores = []\n\nfor i in xr:\n    lgc2 = LGBMClassifier(n_estimators=i)\n    lgc2.fit(xtrain, ytrain)\n    print(f\"Fit classifier with estimators {i}\")\n    lg_preds = lgc2.predict(xtest)\n    lgc_scores.append(accuracy_score(lg_preds, ytest))","fa43478c":"plt.figure(figsize=(12,6))\nplt.plot(xr,lgc_scores, color='orange')\nplt.xlabel(\"Max Depth\", size=16)\nplt.xticks(np.arange(25,151,25))\nplt.ylabel(\"Accuracy score\", size=16)\nplt.title(\"Elbow plot\", size=22)","c362879b":"lgc_scores","6fa72a7c":"> ### Does a longer culmen correlate with body mass?","d03b50e5":"### Additional imports","379b3d37":"### Can LightGBM improve upon this?","4b4de90c":"<img src=\"https:\/\/pbs.twimg.com\/media\/EaAXQn8U4AAoKUj.jpg:large\" alt=\"penguin beak culmen\" style='width: 450px;'><\/img>","c023f726":"## Data cleaning","07a4bead":"## Seaborn Heatmap","ab7a036c":"## Seaborn Pairplot","3c9dc002":"### <font color='green'>Observations:<\/font>\n- **LGBM and Decision Tree both reach the same peak accuracy score**\n- **Ensemble is easily comparable to a Decision Tree given the nature of the dataset**","93999c50":"### Splitting data","46ac5448":"### Basic Import statements","e7e2e2e6":"### Building KNN model on \"culmen length\" vs \"body mass\"","ffbd4aff":"### Sex has an erroneous value","0dd7c24c":"### This dataset is an extremely interesting dataset for Data visualization","61482231":"### Let's try using a Decision Tree","cec7db85":"### Let's test on a varying number of depth levels","595a89f2":"### From the above plot, we can see some good opportunities for clustering applications\n#### Target:\n- **Split the data in 80:20 ratio**\n\n- **Work on training data with cross validation**\n\n- **Design a clustering model to check predictions**","116ee17a":"### **Filling Missing values**\n1. ### Filling with median in case of numerical feature\n2. ### Filling with mode in case of categorical feature","2fb3ec4e":"### **Must ensure stratified splitting of data**"}}