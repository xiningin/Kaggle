{"cell_type":{"b37c3b59":"code","e206e834":"code","9d9d219f":"code","22f0972a":"code","555d0f05":"code","9a9a2282":"code","bccaefe2":"code","287d3f80":"code","8b2e240b":"code","bca8cdeb":"code","98c8b665":"code","52e95ea7":"code","05fda2f0":"code","dbb262b4":"markdown","1e17d5bf":"markdown","5b5aa39e":"markdown","487267e3":"markdown"},"source":{"b37c3b59":"import pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nfrom matplotlib import animation\nfrom matplotlib.animation import FuncAnimation\nfrom IPython.display import HTML\nimport seaborn as sns\nimport plotly.express as px\nfrom datetime import datetime\nfrom palettable.matplotlib import Magma_20_r, Magma_10_r","e206e834":"data = pd.read_csv(\"..\/input\/most-popular-programming-languages-since-2004\/Most Popular Programming Languages from 2004 to 2022.csv\")\ndata.head()","9d9d219f":"data.isna().sum()\n","22f0972a":"data[\"Date\"] = pd.to_datetime(data[\"Date\"])\ndata.head()","555d0f05":"data.info()","9a9a2282":"data.describe()","bccaefe2":"# set global variable for color palette (plots) and grid style\nPALETTE = \"magma_r\" # my favourite palettes: flare, CMRmap_r, magma_r\nsns.set(style=\"darkgrid\")\n\n# function that generates n color values out of defined PALETTE\ndef generate_color_series(n):\n    segments = cm.get_cmap(PALETTE, n)\n    return segments(range(n))","287d3f80":"data_mean_list = []\n\nfor col in data:\n    if col == \"Date\":\n        pass\n    else:\n        data_mean_list.append([col, data[col].mean()])\n\ndata_mean = pd.DataFrame(data_mean_list, columns = [\"language\", \"mean\"])\ndata_mean = data_mean.sort_values(by=[\"mean\"], ascending=False)\n\nplt.figure(figsize=(16, 6))\nplt.subplot(1, 2, 1)\nplt.title(\"Mean popularity of languages\")\nsns.barplot(data=data_mean, x=\"mean\", y=\"language\", palette=generate_color_series(28))\nplt.xlabel(\"Mean popularity in %\")\nplt.ylabel(\"Programming language\")\n\n\nplt.subplot(1, 2, 2)\ndata_mean_top10 = data_mean.nlargest(10, \"mean\")\nplt.title(\"Top 10 mean popular languages\")\ndonut_top10 = plt.Circle( (0,0), 0.7, color='white')\nplt.pie(data_mean_top10[\"mean\"],labels=data_mean_top10[\"language\"], wedgeprops = {\"linewidth\": 5, \"edgecolor\": \"white\"}, colors=generate_color_series(10))\np = plt.gcf()\np.gca().add_artist(donut_top10)\n\nplt.show()\n","8b2e240b":"top10_linechart_color = generate_color_series(10)\nplt.figure(figsize=(14, 8))\nfor index, element in enumerate(data_mean[\"language\"]):\n    plt.plot(data[\"Date\"], data[element], color=top10_linechart_color[index], label=element)\n    plt.legend()\n    if index == 9:\n        break\nplt.title(\"Popularity of languages\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Mean popularity in %\")\n\nplt.legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")","bca8cdeb":"dict_data = data.copy()\ndict_data.drop([\"Date\"], axis=1, inplace=True)\nseries_data = dict_data.to_dict()\n\nbar_label = []\nfor key in dict_data:\n    bar_label.append(key)\n\nbar_color = generate_color_series(28)\n\nfig = plt.figure(figsize=(10, 8))\nax = fig.add_subplot(1, 1, 1)\nax.set_xlim(0, 35)\n\ndef animate(i):\n    i_value = []\n    for key in dict_data:\n        i_value.append(dict_data[key][i])\n    i_value = tuple(i_value)\n    date_bar = data.Date[i].strftime(\"%Y %B\")\n    ax.cla()\n    ax.set_xlim(0, 35)\n    ax.barh(bar_label, i_value, color=bar_color)\n    ax.set_title(f\"Popularity in % at: {date_bar}\", loc=\"left\")\n    plt.gca().invert_yaxis()\n\n    \nani = FuncAnimation(fig, animate, repeat=False, frames=len(dict_data))\n\n%time ani.save(\"bar_animation.gif\", writer=\"imagemagick\", fps=5)\nplt.close()","98c8b665":"HTML(\"<img src='.\/bar_animation.gif'>\")","52e95ea7":"donut_color = generate_color_series(10)\ntop10_language = [\"Java\", \"PHP\", \"Python\", \"C\/C++\", \"JavaScript\", \"C#\", \"Visual Basic\", \"Objective-C\", \"Perl\", \"Matlab\"]\n\nfig = plt.figure(figsize=(10, 8))\nax = fig.add_subplot(1, 1, 1)\n\n\ndef animate(i):\n    top10_value = []\n    for key in top10_language:\n        top10_value.append(dict_data[key][i])\n    top10_value = tuple(top10_value)\n    date_bar = data.Date[i].strftime(\"%Y %B\")\n    ax.cla()\n    donut_top10 = plt.Circle( (0,0), 0.7, color='white')\n    ax.pie(top10_value, labels=top10_language, wedgeprops = {\"linewidth\": 5, \"edgecolor\": \"white\"}, colors=donut_color)\n    p = plt.gcf()\n    p.gca().add_artist(donut_top10)\n    ax.set_title(f\"Populairty in % at: {date_bar}\", loc=\"left\")\n\n\n    \nani = FuncAnimation(fig, animate, repeat=False, frames=len(dict_data))\n\n%time ani.save(\"donut_animation.gif\", writer=\"imagemagick\", fps=5)\nplt.close()\n","05fda2f0":"HTML(\"<img src='.\/donut_animation.gif'>\")","dbb262b4":"# Visualizations","1e17d5bf":"# Data Cleaning\/Wrangling","5b5aa39e":"# Import libraries & load data","487267e3":"# Let's try some animations!\nNote: my first experiences... (feel free to give feedback in general!)"}}