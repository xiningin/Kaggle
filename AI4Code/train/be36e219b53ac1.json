{"cell_type":{"8de51a72":"code","b7113059":"code","9c9c3aa1":"code","0484f22c":"code","e6e5e9ee":"code","50793b45":"code","772ab950":"code","a7c230f0":"code","c2fddaa1":"code","ac400fdc":"code","13863691":"code","86fde12f":"code","e5584ba8":"code","17648c94":"code","40680520":"code","c8d958ca":"code","df26494c":"code","7c2e47e2":"code","93c8dc6e":"code","4a5bd3b7":"markdown","88f2ffd5":"markdown","20864ed2":"markdown","61d7387d":"markdown","967577c2":"markdown"},"source":{"8de51a72":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b7113059":"submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-may-2021\/sample_submission.csv',index_col=None)\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-may-2021\/train.csv', index_col=None)\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-may-2021\/test.csv', index_col=None)","9c9c3aa1":"train.shape, test.shape, submission.shape","0484f22c":"train","e6e5e9ee":"test","50793b45":"train.info()","772ab950":"test.info()","a7c230f0":"train.describe()","c2fddaa1":"train['target'].value_counts()","ac400fdc":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ntrain['target_enc']=le.fit_transform(train['target'])","13863691":"from sklearn.model_selection import StratifiedShuffleSplit\n\nss_split = StratifiedShuffleSplit(n_splits=1, test_size=0.1, random_state=42)\nfor train_index, val_index in ss_split.split(train, train['target_enc']):\n    X_train = train.loc[train_index]\n    X_val = train.loc[val_index]","86fde12f":"y_train = X_train['target_enc']\ny_val = X_val['target_enc']\nX_train.drop(['target', 'target_enc'],axis=1, inplace=True)\nX_val.drop(['target', 'target_enc'],axis=1, inplace=True)","e5584ba8":"from tpot import TPOTClassifier\n\ntpot = TPOTClassifier(generations=5, \n                      population_size=100, \n                      verbosity=2, \n                      scoring = 'roc_auc_ovr',\n                      random_state=42,\n                      config_dict='TPOT cuML')\ntpot.fit(X_train, y_train)\nprint('Validation score :', tpot.score(X_val, y_val))\ntpot.export('tps-may-2021.py')","17648c94":"preds = tpot.predict_proba(test)","40680520":"sample = submission","c8d958ca":"sample = pd.DataFrame(np.column_stack((sample['id'],preds)), index=sample.index, columns=sample.columns)","df26494c":"sample.dtypes","7c2e47e2":"sample['id'] = sample['id'].astype(int)","93c8dc6e":"sample.to_csv('tps_may_tpot_baseline.csv',index=None)","4a5bd3b7":"Label Encode the target","88f2ffd5":"Reference EDA : https:\/\/www.kaggle.com\/subinium\/tps-may-categorical-eda","20864ed2":"## TPOT AutoML","61d7387d":"<div align='center'>\n<img src=\"https:\/\/raw.githubusercontent.com\/EpistasisLab\/tpot\/master\/images\/tpot-logo.jpg\" alt=\"drawing\" width=\"300\"\/>\n<\/div>\nSimple TPOT Auto ML Classifier, No data preprocessing or Feature Engineering. Idea is to get a baseline !","967577c2":"## Stratified split"}}