{"cell_type":{"d08fe0bd":"code","791b4962":"code","d238730f":"code","827a0b64":"code","6c467f05":"code","76f23c5c":"code","87037533":"code","7c43b4a1":"code","75f394e2":"code","bfc8ce19":"code","942e1e8c":"code","29ea0f5a":"code","2ea39baa":"code","e563830b":"code","3b10d5dd":"code","97fed3f0":"code","5d9cf87f":"code","d4a010d2":"code","9f0f2075":"markdown","abd2d0df":"markdown","cab2cc68":"markdown","7277e335":"markdown","f94d86fe":"markdown","5711fda9":"markdown","92395cd3":"markdown"},"source":{"d08fe0bd":"### Importing some libraries\nimport numpy as pd\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn import tree\nfrom sklearn import metrics\n\nimport plotly.express as px\nimport plotly.graph_objects as go","791b4962":"### Importing Dataset\ndf = pd.read_csv('..\/input\/iris\/Iris.csv', index_col='Id')\ndf.head()","d238730f":"df.info()","827a0b64":"X = df.drop('Species', axis=1)\ny = df.Species","6c467f05":"### Plotting countplot for each Species\nsns.countplot(data=df, x='Species')","76f23c5c":"sns.heatmap(df.corr(),\n            annot=True,\n            cmap='RdYlBu')","87037533":"### Plotting feature distribution\nfor col in X.columns:\n    fig, ax = plt.subplots(nrows=1, ncols=3,\n                        sharey=True,\n                        figsize=(12,4))\n  \n    sns.boxplot(data=df, x='Species', y=col, ax=ax[0])\n    sns.violinplot(data=df, x='Species',y=col, ax=ax[1])\n    sns.histplot(data=df, y=col, ax=ax[2])\n    \n    plt.tight_layout()\n    plt.show()","7c43b4a1":"sns.pairplot(df, hue='Species', kind='reg')","75f394e2":"g=sns.jointplot(data=df,\n                x='PetalLengthCm', y='PetalWidthCm',\n                hue='Species')\n\ng.plot_joint(sns.kdeplot, color=\"r\")","bfc8ce19":"fig = px.scatter_3d(df,\n                    x='SepalLengthCm', y='SepalWidthCm', z='PetalWidthCm',\n                    color='Species')\nfig.show()","942e1e8c":"### Plotting Radar plot\ndf_gb=df.groupby('Species').median().transpose().reset_index()\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatterpolar(\n      r=df_gb['Iris-setosa'],\n      theta=df_gb['index'],\n      fill='toself',\n      name='Iris-setosa'\n))\nfig.add_trace(go.Scatterpolar(\n      r=df_gb['Iris-versicolor'],\n      theta=df_gb['index'],\n      fill='toself',\n      name='Iris-versicolor'\n))\nfig.add_trace(go.Scatterpolar(\n      r=df_gb['Iris-virginica'],\n      theta=df_gb['index'],\n      fill='toself',\n      name='Iris-virginica'\n))\n\nfig.update_layout(\n  polar=dict(\n    radialaxis=dict(\n      visible=True,\n      range=[0, 7]\n    )),\n  showlegend=False\n)\n\nfig.show()","29ea0f5a":"### Plotting Andrews curve, visualizing multivariate data by mapping into 2D space through Fourier series\npd.plotting.andrews_curves(df, 'Species', colormap='viridis')\nplt.legend(loc='upper left')","2ea39baa":"### Plotting a heatmap for sorted dataframe based on Species\nsns.heatmap(df.sort_values('Species').drop('Species',axis=1))","e563830b":"### Splitting dataset into train and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.3,\n                                                    random_state=42)","3b10d5dd":"### Using a single Decision Tree for this classification\nmodel = tree.DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)","97fed3f0":"print(metrics.classification_report(y_pred, y_test))\nmetrics.plot_confusion_matrix(model, X_test, y_pred);","5d9cf87f":"### Tree representation\nplt.figure(figsize=(5,5), dpi=200)\ntree.plot_tree(model,\n               feature_names=df.columns,\n               class_names=df.Species.unique(),\n               filled=True)\n\nplt.show()","d4a010d2":"### Text representation\n\ntxt = tree.export_text(model)\nprint(txt)\n","9f0f2075":"\u2191 This graph suggests Iris-Setosa can be easily separated from the other two species by drawing a linear line. This probably is going to be the first split in our Decision Tree.","abd2d0df":"### Modeling","cab2cc68":"\u2191 There are 50 samples for each class in this balanced dataset.","7277e335":"\u2191 There are 150 observations in this dataset, we also have 150 values for each feature. Thus, there is no *missing value* in this dataset.","f94d86fe":"\u2191 By playing with this 3D graph, we can have a better intuition of how the observations are distributed in 3D space.","5711fda9":"\u2191 As can be seen in the previous plots, there is a distinct difference between classes in terms of Petal and Sepal dimensions. So, we can expect getting a fairly high score for this classification.","92395cd3":"## Iris Flowers Classification\n![Iris_setosa_3.jpg](attachment:ca941d0a-ef44-48f7-90a6-fe32db3176c6.jpg)"}}