{"cell_type":{"355e72e7":"code","9d2a071e":"code","c5d48a82":"code","05fb1181":"code","dd0e5b32":"code","0cedd05d":"code","9e8eb61e":"markdown","eb259535":"markdown"},"source":{"355e72e7":"pip install openpyxl","9d2a071e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c5d48a82":"#IMPORTING LIBRARIES\nimport pandas as pd\n\n\n#IMPORTING THE DATASET\ndf= pd.read_excel(r'..\/input\/online-retail-data-set-from-uci-ml-repo\/Online Retail.xlsx')\nprint(df.head())\nprint( \"COLUMN NAMES ARE:\\n\",df.columns)\n","05fb1181":"#EXTRACTING JUST THOSE COLUMNS THAT WE WILL NEED TO WORK ON AND DROPPING THE REMAINING COLUMNS. ALSO REMOVING EMPTY VALUES.\ndf=df[['CustomerID','InvoiceDate','Description']].dropna()\nprint(df.dtypes)\nprint(df.head())\n","dd0e5b32":"#STORING ALL THE TABLES AS VALUES IN A DICTIONARY WHOSE KEYS ARE THE CORRESPONDING CUSTOMER ID \ndictionary_of_tables={}\n\ngrp=df.groupby('CustomerID')\n#A GROUP OBJECT WILL HAVE TWO COMPONENTS. ONE:THE VALUE OF THE ATTRIBUTE ON WHICH THE DATASET IS GROUPED, TWO: THE CRRESPONDING GROUPS FOR EACH UNIQUE VALUE OF THAT ATTRIBUTE.\nfor id_, group in grp:          \n    l=list()\n    for date, group_ in group.groupby('InvoiceDate'):\n        tuple_=date,group_['Description'].tolist()\n        l.append(tuple_)\n        \n    dictionary_of_tables[id_]=pd.DataFrame(l,columns=['TIMESTAMP','BASKET'])\n","0cedd05d":"dictionary_of_tables","9e8eb61e":"# DATA PREPROCESSING ","eb259535":"# FEATURE EXTRACTION AND TABLE CREATION FOR EACH CUSTOMER"}}