{"cell_type":{"3f08861d":"code","dba93bad":"code","8450d437":"code","2d201803":"code","b10c75e8":"code","acab5633":"code","307b9365":"code","57f42aa9":"code","508f3c1a":"code","30a2f29c":"code","a67d8715":"code","c2d8a45b":"code","b15b1257":"code","45cb1ea3":"code","4aa09849":"code","0ea05857":"code","59c7abb6":"code","880a3ce2":"code","277c4191":"code","e077c160":"code","9cd1e0fa":"code","dab26fb0":"code","04d1cfc1":"code","d37f5bea":"code","e56eafd2":"code","2c4c3c58":"code","11eee8ec":"code","4a222532":"code","a81d71c2":"code","ec78541f":"code","df4866bb":"code","bab0b3bf":"code","017521b3":"code","3e5851b6":"code","7a68cb11":"code","8489110f":"code","70ca9271":"code","421a9f3e":"code","e3f2f317":"code","ea5b36f8":"code","0f2fa84f":"code","2a15749c":"code","c1a32e9b":"code","8eb13fb1":"code","ee5b8d1d":"code","31377cd7":"code","561fd150":"code","02a83f2f":"code","68215d79":"code","aa7e20ff":"markdown","6ec5d931":"markdown","07d9d292":"markdown","ad6110f2":"markdown","97f47332":"markdown","5573a7c4":"markdown","56a76a5d":"markdown","ec25d7f1":"markdown","c10dfba9":"markdown","49c4d736":"markdown","4e87bfe8":"markdown","fbe7adbd":"markdown"},"source":{"3f08861d":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom category_encoders import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import ExtraTreesRegressor\nimport seaborn as sns","dba93bad":"df = pd.read_csv('Customer churn.csv',sep=',',encoding=\"utf-8\")\ndf.head(20)","8450d437":"df.head(5) \n\n","2d201803":"df.info()","b10c75e8":"df.hist(figsize=(12,8))\nplt.show()","acab5633":"df.isnull().sum()","307b9365":"plt.figure(figsize=(10,6))\nsns.heatmap(df.isnull(),cmap='viridis')\nplt.title('Missing Data')","57f42aa9":"ten_mean = df['tenure'].mean()\ndf['tenure'].fillna(ten_mean)","508f3c1a":"fill = {\"tenure\":df['tenure'].mean(),\"SeniorCitizen\":int(df['SeniorCitizen'].mode())}\ndf.fillna(fill,inplace=True)","30a2f29c":"df.isnull().sum()","a67d8715":"df.columns","c2d8a45b":"columns = ['gender','tenure','Partner','Dependents', 'MultipleLines','PaymentMethod','StreamingMovies','TotalCharges','Churn']\ndf = df[columns]\ndf.head()","b15b1257":"y=df['Churn'].to_frame()\nX=df[df.columns.difference(['Churn'])]\ndf.head(3) ","45cb1ea3":"from category_encoders import OrdinalEncoder\n\ncategorical_features = [col for col in X.columns if X[col].dtype == 'object']\n\nencoder = OrdinalEncoder(\n    cols=categorical_features,\n    handle_unknown='ignore',\n    return_df=True).fit(X)\n\nX=encoder.transform(X)","4aa09849":"from category_encoders import OrdinalEncoder\n\ncategorical_features = [col for col in y.columns if y[col].dtype == 'object']\n\nencoder = OrdinalEncoder(\n    cols=categorical_features,\n    handle_unknown='ignore',\n    return_df=True).fit(y)\n\ny=encoder.transform(y)","0ea05857":"y.head()","59c7abb6":"X.head()","880a3ce2":"ten_min = X['tenure'].min()\nten_max = X['tenure'].max()\nX['tenure'] = (X['tenure']-ten_min)\/(ten_max-ten_min)","277c4191":"tot_min = X['TotalCharges'].min()\ntot_max = X['TotalCharges'].max()\nX['TotalCharges'] = (X['TotalCharges']-tot_min)\/(tot_max-tot_min)","e077c160":"X.head()","9cd1e0fa":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.ensemble import RandomForestClassifier\nimport shap","dab26fb0":"Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, train_size=0.75, random_state=1)\n\nrf = RandomForestClassifier(n_estimators=100, min_samples_leaf=3)\nrf.fit(Xtrain, ytrain)","04d1cfc1":"rf.score(Xtrain,ytrain)","d37f5bea":"rf.score(Xtest,ytest)","e56eafd2":"from sklearn.metrics import classification_report, accuracy_score, confusion_matrix","2c4c3c58":"ypred=pd.DataFrame(rf.predict(Xtest), columns=['pred'], index=Xtest.index)","11eee8ec":"confusion_matrix(ytest, ypred)","4a222532":"accuracy_score(ytest, ypred)","a81d71c2":"print(classification_report(ytest, ypred))","ec78541f":"data_dict = {'gender': 'Gender',\n             'tenure': \"Tenure in Months\", \n             'Partner': 'Indicates if the customer is married: Yes, No',\n             'Dependents': 'Indicates if the customer lives with any dependents: Yes, No.',\n             'TotalCharges': \"Indicates the customer\u2019s total charges\", \n             'StreamingMovies': 'if the customer uses their Internet service to stream movies from a third party provider: Yes, No',\n             'Churn': 'Indicates if the customer  customer will remain in service or not'}","df4866bb":"from shapash.explainer.smart_explainer import SmartExplainer","bab0b3bf":"xpl = SmartExplainer(features_dict=data_dict) # optional parameter, specifies label for features name","017521b3":"xpl.compile(\n    x=Xtest,\n    model=rf,\n    y_pred=ypred,\n)\n","3e5851b6":"xpl.plot.features_importance()\n","7a68cb11":"xpl.plot.contribution_plot(\"StreamingMovies\")\n","8489110f":"xpl.plot.contribution_plot(\"gender\")","70ca9271":"xpl.plot.contribution_plot(\"PaymentMethod\")","421a9f3e":"xpl.plot.contribution_plot(\"MultipleLines\")","e3f2f317":"xpl.plot.contribution_plot(\"tenure\")","ea5b36f8":"xpl.plot.contribution_plot(\"TotalCharges\")","0f2fa84f":"xpl.plot.contribution_plot(\"Dependents\")","2a15749c":"xpl.plot.compare_plot(index=[Xtest.index[0], Xtest.index[1]])\n","c1a32e9b":"xpl.plot.compare_plot(row_num=[0, 1, 2, 3, 4], max_features=8)\n","8eb13fb1":"xpl.plot.compare_plot(row_num=[0, 1,2 ,3], show_predict=False, max_features=100)","ee5b8d1d":"app = xpl.run_app(title_story='customer churn - Doaa Mahmoud')","31377cd7":"app.kill()\n","561fd150":"\nsummary_df= xpl.to_pandas(\n    max_contrib=9, # Number Max of features to show in summary\n    threshold=500,\n)","02a83f2f":"summary_df.head()","68215d79":"xpl.save('.\/xpl.pkl')","aa7e20ff":"   # Doaa Mahmoud - Data scientest \n   www.linkedin.com\/in\/doaa-mahmoud-abdel-aty-01b25b144\n\n\n### From model training to deployment - an introduction to the SmartPredictor object\nShapash provides a SmartPredictor Object to make prediction and local explainability for operational needs in deployment context.\n\n- It gives a summary of the local explanation of your prediction.\n- SmartPredictor allows users to configure the summary to suit their use.\n- It is an object dedicated to deployment, lighter than SmartExplainer Object with additionnal consistency checks.\n- SmartPredictor can be used with an API or in batch mode.\n\n### This tutorial provides more information to help you getting started with the SmartPredictor Object of Shapash.\n\n# Contents:\n\n- Build a SmartPredictor\n- Save and Load a Smartpredictor\n- Add input\n- Use label and wording\n- Summarize explaination\n\nI used Kaggle's customer churn dataset\n\n","6ec5d931":"# Train Test split + Random Forest fit\n","07d9d292":"### Feature Selection","ad6110f2":"## Define a SmartExplainer","97f47332":"### Feature Scaling","5573a7c4":"![image.png](attachment:image.png)","56a76a5d":" ### Missing Values","ec25d7f1":"# Exploration and training of the model","c10dfba9":"# compile()\nThis method is the first step to understand model and prediction. It performs the sorting of contributions, the reverse preprocessing steps and all the calculations necessary for a quick display of plots and efficient summary of explanation. \n","49c4d736":"### Categorical Features\n### Create Classification Model\nIn this section, I train a Machine Learning supervised model with customer churn data. In this example, we are confronted to a classification problem.","4e87bfe8":"# Great Work !","fbe7adbd":"# Preprocessing Step\nEncoding Categorical Features"}}