{"cell_type":{"f1b97ad4":"code","c3d59d3b":"code","50134ebc":"code","5f44be7d":"code","6a355535":"code","a0d54b51":"code","9affda9f":"code","1d26b05b":"code","0f4f0cee":"code","4edaf0fd":"code","d89edf1e":"code","c8c58b48":"code","4b7c0fa9":"code","d0206e99":"code","3ae5d462":"code","464819af":"code","a16bdd61":"code","fade7776":"code","d3fdf8e4":"code","fd539ef9":"code","c8c72895":"code","99421211":"code","87351172":"code","0c8b51cd":"code","ec07a2f0":"code","144f537c":"code","7b6e2ca3":"code","614e39fe":"code","8ade5f5f":"code","ad3bd499":"code","79d579ec":"code","c3078566":"code","d1d512b9":"code","d8c911cd":"code","174953de":"code","3f5e33fb":"code","e1855d98":"code","477be27f":"code","5315ba95":"code","6f70aa4a":"code","da7384c2":"code","92949f95":"code","c1ecd13f":"code","6aa436b0":"code","6cd343f6":"code","f3241da1":"code","16ba44f8":"code","20078086":"code","dbac64dd":"code","ff4d3ff8":"code","c43b0531":"code","0ba22cd6":"code","f1b2ceab":"code","ba2a84e5":"code","23d017d7":"code","5521fc75":"code","59c66097":"code","42cea44e":"code","b33ee3bd":"code","80fffba8":"code","c841fe58":"code","1ff769e9":"code","a8cf4026":"code","47bfe4fa":"code","432c5155":"code","6a32b439":"code","d9f10834":"code","bedb55d2":"code","9e9a6498":"code","3d021301":"code","e37a11b6":"code","b321441d":"code","89c2ae49":"code","1e76fdc1":"code","830d3269":"code","e915c506":"code","9b9e1410":"code","3ca48530":"code","07fccc7b":"markdown","90339f7c":"markdown","6313f6c6":"markdown","6a6311cc":"markdown","e6f484c1":"markdown","65d104e9":"markdown","41c1a531":"markdown","7b5d5d43":"markdown","09a7e704":"markdown","ca8a349d":"markdown","82accf00":"markdown","8e0d9d77":"markdown"},"source":{"f1b97ad4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3d59d3b":"train_df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2022\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2022\/test.csv')","50134ebc":"train_df.head(10)","5f44be7d":"train_df.shape","6a355535":"train_df.isnull().sum()","a0d54b51":"train_df['country'].unique()","9affda9f":"train_df['store'].unique()","1d26b05b":"train_df['product'].unique()","0f4f0cee":"train_df = train_df.set_index('row_id')","4edaf0fd":"train_df.info()","d89edf1e":"train_df['date'] = pd.to_datetime(train_df['date'])","c8c58b48":"train_df.info()","4b7c0fa9":"train_df.head()","d0206e99":"train_df['month'] = train_df['date'].dt.month","3ae5d462":"train_df['day_of_week'] = train_df['date'].dt.dayofweek","464819af":"train_df.head()","a16bdd61":"sns.boxplot(data=train_df,x='store',y='num_sold')","fade7776":"sns.boxplot(data=train_df,x='product',y='num_sold')","d3fdf8e4":"plt.figure( figsize= (10,8))\nsns.boxplot(data=train_df,x='product',y='num_sold',hue='country')","fd539ef9":"train_df.groupby('month')['num_sold'].sum().plot(kind='barh')","c8c72895":"train_df.groupby('day_of_week')['num_sold'].sum().plot(kind='barh')","99421211":"## Dropping the date column as important month and day features extracted\ntrain_df = train_df.drop('date',axis=1)","87351172":"train_df.head()","0c8b51cd":"y= train_df['num_sold']\nX= train_df.drop('num_sold',axis=1)","ec07a2f0":"X.head()","144f537c":"## one hot encoding of the dataset\ncategory = ['country','store','product']\nX = pd.get_dummies(data=X,columns=category,drop_first=True)","7b6e2ca3":"from sklearn.model_selection import train_test_split\n\nX_train,X_validate,y_train,y_validate = train_test_split(X,y,test_size=0.2,random_state=42)","614e39fe":"print(X_train.shape)\nprint(X_validate.shape)\nprint(y_train.shape)\nprint(y_validate.shape)","8ade5f5f":"X_train.columns","ad3bd499":"## transforming the test data in similer terms\ntest_df = test_df.set_index('row_id')\ntest_df['date'] = pd.to_datetime(test_df['date'])\ntest_df['month'] = test_df['date'].dt.month\ntest_df['day_of_week'] = test_df['date'].dt.dayofweek","79d579ec":"test_df.drop('date',axis=1,inplace=True)","c3078566":"category = ['country','store','product']\ntest_df = pd.get_dummies(data=test_df,columns=category)","d1d512b9":"test_df.columns","d8c911cd":"## dropping country_Finland,store_KaggleMart,product_Kaggle Hat\ntest_df.drop(['country_Finland','store_KaggleMart','product_Kaggle Hat'],axis=1,inplace=True)","174953de":"test_df.columns","3f5e33fb":"test_df.shape","e1855d98":"import statsmodels.api as sm","477be27f":"X_train_c = sm.add_constant(X_train)\nmodel  = sm.OLS(y_train,X_train_c)\nresults = model.fit()\nresults.summary()","5315ba95":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvifs = [variance_inflation_factor(X_train,i) for i in range(X_train.shape[1])]\nvif_df = pd.DataFrame({'cols':X_train.columns,'vif':vifs})\nvif_df","6f70aa4a":"y_validate_predict = results.predict(sm.add_constant(X_validate))","da7384c2":"from sklearn.metrics import r2_score\nprint('R2 score on validation set is ',r2_score(y_validate,y_validate_predict))\nvalidation_scores = {}\nvalidation_scores['lr'] = r2_score(y_validate,y_validate_predict)","92949f95":"from sklearn.metrics import mean_squared_error\nmse = mean_squared_error(y_validate,y_validate_predict)\nrmse = mse**0.5\nprint('Root mean squared error is ', rmse)","c1ecd13f":"def smape(A, F):\n    return 100\/len(A) * np.sum(2 * np.abs(F - A) \/ (np.abs(A) + np.abs(F)))","6aa436b0":"print(smape(y_validate,y_validate_predict))","6cd343f6":"test_df['pred'] = results.predict(sm.add_constant(test_df))","f3241da1":"test_df","16ba44f8":"## for rows with negative values , convert to 0\ntest_df['pred'] = test_df['pred'].apply(lambda x : 0 if x<0 else x)","20078086":"test_df.reset_index(inplace=True)","dbac64dd":"test_df.rename(columns={'pred':'num_sold'},inplace=True)","ff4d3ff8":"#test_df[['row_id','num_sold']].to_csv('.\/submission.csv',index=False)","c43b0531":"from sklearn.tree import DecisionTreeRegressor\ndt = DecisionTreeRegressor(random_state=42)\n","0ba22cd6":"dt.fit(X_train,y_train)\ny_validate_pred_dt = dt.predict(X_validate)\ny_train_pred_dt = dt.predict(X_train)","f1b2ceab":"print('R2 score for Validation set is ',r2_score(y_validate,y_validate_pred_dt))\nprint('R2 score for Train set is',r2_score(y_train,y_train_pred_dt))","ba2a84e5":"%%time\nfrom sklearn.model_selection import GridSearchCV\ndt = DecisionTreeRegressor(random_state=42)\nparamgrid = {\n    'max_depth':[5,10,15,20],\n    'min_samples_split':[20,40,50]\n}\ngrid = GridSearchCV(dt,param_grid=paramgrid,scoring='r2',return_train_score=True,verbose=1,n_jobs=-1)","23d017d7":"%%time\ngrid.fit(X_train,y_train)","5521fc75":"grid.best_params_","59c66097":"grid.best_score_","42cea44e":"dt_model = grid.best_estimator_","b33ee3bd":"y_validate_pred = dt_model.predict(X_validate)\nsmape(y_validate,y_validate_pred)","80fffba8":"test_df['dt_pred'] = dt_model.predict(test_df[['month', 'day_of_week', 'country_Norway', 'country_Sweden',\n       'store_KaggleRama', 'product_Kaggle Mug', 'product_Kaggle Sticker']])","c841fe58":"test_df.rename(columns={'num_sold':'lr_pred'},inplace=True)","1ff769e9":"#test_df[['row_id','dt_pred']].rename(columns={'dt_pred':'num_sold'}).to_csv('.\/submission.csv',index=False)","a8cf4026":"from sklearn.ensemble import RandomForestRegressor","47bfe4fa":"rf_base = RandomForestRegressor(random_state=42)","432c5155":"rf_base.fit(X_train,y_train)","6a32b439":"y_validate_rfbase_pred = rf_base.predict(X_validate)","d9f10834":"print('Base RF model r2score is ',r2_score(y_validate,y_validate_rfbase_pred))","bedb55d2":"paramgrid={\n    'max_depth':[5,10,15,20],\n    'min_samples_split':[20,40,50],\n    'n_estimators':[20,30,40],\n    'max_features':[3,4,5]\n}","9e9a6498":"rf = RandomForestRegressor(random_state=42)","3d021301":"grid = GridSearchCV(rf,param_grid=paramgrid,n_jobs=-1,verbose=1,scoring='r2')","e37a11b6":"%%time\ngrid.fit(X_train,y_train)","b321441d":"## params of optimised model\ngrid.best_params_","89c2ae49":"rf_optimum = grid.best_estimator_","1e76fdc1":"y_validate_rfopt_pred = rf_optimum.predict(X_validate)","830d3269":"print('Optimized RF model r2score is ',r2_score(y_validate,y_validate_rfopt_pred))","e915c506":"## use the optimized model for prediction on test_df\ntest_df['rf_pred'] = rf_optimum.predict(test_df[['month', 'day_of_week', 'country_Norway', 'country_Sweden',\n       'store_KaggleRama', 'product_Kaggle Mug', 'product_Kaggle Sticker']])","9b9e1410":"## correct negative values to 0\ntest_df['rf_pred'] = test_df['rf_pred'].apply(lambda x: 0 if x<0 else x)","3ca48530":"test_df[['row_id','rf_pred']].rename(columns={'rf_pred':'num_sold'}).to_csv('.\/submission.csv',index=False)","07fccc7b":"### 3. Ensemble Training - Random Forest","90339f7c":"Norway seems to be leading in sales","6313f6c6":"## Model Building","6a6311cc":"### 2. Decision tree based model","e6f484c1":"Considering this Linear Regression one as a base model ,go forward with Other type of models","65d104e9":"1.) Base Model","41c1a531":"2.) Hyperparameter Tuning","7b5d5d43":"Values are well within range. So no multicollinearity","09a7e704":"### 1. Based on Linear Regression -Base model","ca8a349d":"1) Base Decision Tree","82accf00":"2) Hyper parameter tuning","8e0d9d77":"Since probability for all features is less than 0.05 , all features are significant"}}