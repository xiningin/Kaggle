{"cell_type":{"4baf68c8":"code","74f923ed":"code","5240e4f7":"code","47c65975":"code","e18e7fc1":"code","da94ffd3":"code","d6757ae8":"code","5a4b0a33":"code","cc92b037":"code","9c41cf9f":"code","b564fd9f":"code","436f9a53":"code","b5b69e87":"code","9c77c799":"code","3dc999a6":"code","60b290af":"code","0e4cf8d9":"code","eb513eb6":"code","69c3cd1a":"code","3b9602fd":"code","74d5c607":"markdown","6438ee3c":"markdown","e751ad56":"markdown","c66dd725":"markdown","5a6e5412":"markdown","efc963e9":"markdown","707c5c6c":"markdown","8c6ab270":"markdown","954d8e99":"markdown","ae4f9dd1":"markdown","6b16d5e4":"markdown","635ef7d8":"markdown","43bfe35a":"markdown","f32df040":"markdown"},"source":{"4baf68c8":"import numpy as np ## Linear ALgebra\nimport pandas as pd ## For working with data\nimport plotly.express as px ## Visualization\nimport plotly.graph_objects as go ## Visualization\nimport matplotlib.pyplot as plt ## Visualization\nimport plotly as py ## Visualization\nfrom wordcloud import WordCloud, STOPWORDS ## To create word clouds from script\nimport os","74f923ed":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\npath = os.path.join(dirname, filename)\n\ndf = pd.read_csv(path)","5240e4f7":"df.shape","47c65975":"df.isnull().sum()","e18e7fc1":"df.dropna(inplace=True) ## We can drop the null values as they're very less in number.","da94ffd3":"df.head()","d6757ae8":"df.info()","5a4b0a33":"df.loc[:,'Release Date'] = pd.to_datetime(df['Release Date'])\n\ndf['Year'] = df['Release Date'].dt.year\ndf['Month'] = df['Release Date'].dt.month\nmonth_mapper = {1:'Jan', 2:'Feb', 3:'Mar', 4:'Apr', 5:'May', 6:'Jun',\n               7:'Jul', 8:'Aug', 9:'Sep', 10:'Oct', 11:'Nov', 12:'Dec'}\ndf.loc[:,'Month'] = df['Month'].map(month_mapper)","cc92b037":"temp = df['Season'].value_counts().reset_index()\ntemp.columns=['Season', 'Counts']\ntemp.sort_values(by='Season', inplace=True)\npx.bar(temp, 'Season', 'Counts', title='Total dialougue counts in season.')","9c41cf9f":"wordcloud = WordCloud(width = 800, height = 800,stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in df['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","b564fd9f":"tyrion_lannister = df[df['Name']=='tyrion lannister']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in tyrion_lannister['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","436f9a53":"arya_stark = df[df['Name']=='arya stark']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in arya_stark['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","b5b69e87":"daenerys_targaryen = df[df['Name']=='daenerys targaryen']\nwordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in daenerys_targaryen['Sentence']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","9c77c799":"temp = df.groupby(by='Season')['Episode'].unique().agg(len).reset_index()\npx.line(temp, 'Season', 'Episode', labels={'Episode':'Number of Episodes'})","3dc999a6":"wordcloud = WordCloud(stopwords=STOPWORDS, min_font_size=10, background_color ='white').generate(\n    ' '.join(i for i in df['Episode Title']))\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.show() ","60b290af":"print( 'Total number of characters featured in G.O.T.' , len(df['Name'].unique()))","0e4cf8d9":"temp = df['Name'].value_counts().reset_index()\ntemp.columns=['Character', 'No of Dialouges']\npx.bar(temp.head(10), 'Character', 'No of Dialouges', color='No of Dialouges', title='Characters with most dialouges in G.O.T.')","eb513eb6":"for group,data in df.groupby(by='Season'):\n    print(group, 'Was on air in Year ', data['Year'].unique())","69c3cd1a":"temp = df.groupby(by='Season')['Month'].unique().reset_index()\ntemp.columns = ['Season', 'Months']\nmonth_counts = dict()\nfor i in temp['Months']:\n    for j in i:\n        if j not in month_counts :\n            month_counts[j]=1\n        else :\n            month_counts[j]+=1\npx.bar(x=month_counts.keys(), y=month_counts.values(), color=month_counts.values(),\n       labels={'x':'Months', 'y':'Counts'}, title='Months that show was on air in.')","3b9602fd":"df['Last_Name'] = df['Name'].apply(lambda x : str(x).split()[-1])\n\ntemp = df['Last_Name'].value_counts().head(10).reset_index()\ntemp.columns = ['Last Name', 'Counts']\npx.bar(temp, 'Last Name', 'Counts', color='Counts', title='Most populer Last Names in G.O.T.')","74d5c607":"## Dialouges","6438ee3c":"#### Arya Stark","e751ad56":"#### The Date is in string format. It can be more useful for us if we change it into datetime object.","c66dd725":"#### Daenerys targaryen","5a6e5412":"### Seasons and their Times","efc963e9":"### Characters with most dialouges in G.O.T.","707c5c6c":"### Number of episodes per season","8c6ab270":"### Most Frequent words for episode titles","954d8e99":"### Most Frequently used words in dialogues .","ae4f9dd1":"#### Ttyrion Lannister","6b16d5e4":"## Hello everyone !\n### This is my analysis on 'Game Of Thrones Script' dataset. I am going to do exploratory data analysis on the data and project visualizations.","635ef7d8":"#### Since my friend is interested in last names, i am going to extract that for her.","43bfe35a":"### Now, i am going to see what words do my favourite characters use in their dialogue most frequently.","f32df040":"### For a friend."}}