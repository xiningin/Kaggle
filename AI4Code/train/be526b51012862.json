{"cell_type":{"90e3b63a":"code","58797f97":"code","0fe99091":"code","a3432423":"code","3f9e6084":"code","3791ebb7":"code","782de6bd":"code","0cb2b247":"code","fe51d9a4":"code","2123fa0a":"code","4701e680":"code","d764b0c8":"code","e16759b3":"code","11905397":"code","6570a56d":"code","c8242a12":"code","c2695f97":"code","ceadab01":"code","975daa41":"code","d89fef81":"code","119ceb7f":"code","055e6239":"markdown","ea2fbf1a":"markdown","a2e322e8":"markdown","1a779b23":"markdown","d7b4642d":"markdown","cfaea316":"markdown","5bfa81c1":"markdown","4bb09af1":"markdown","a5bf9597":"markdown","13e3695b":"markdown","51655907":"markdown","4df2a122":"markdown","e095abbf":"markdown","f8c185ff":"markdown","909fc1da":"markdown","152c7ca8":"markdown","7362c80b":"markdown","5f6d282b":"markdown","4965f5a8":"markdown","c9ef4824":"markdown","c24306da":"markdown","32b6dbef":"markdown","8408db2a":"markdown","ef8a5621":"markdown","6e3f5239":"markdown","faa64302":"markdown","d0accf1e":"markdown"},"source":{"90e3b63a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","58797f97":"%matplotlib inline\n\nimport datetime\nimport math\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nimport re\nimport nltk\n\nfrom folium import plugins\n!pip install alphashape\nimport alphashape\nfrom functools import lru_cache\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\nfrom nltk.corpus import stopwords\nfrom collections import Counter\n\n\ncols = ['datetime', 'city', 'state', 'country', 'shape', 'duration (seconds)',\n       'duration (hours\/min)', 'comments', 'date posted', 'latitude',\n       'longitude ', 'missed']\ndf1 = pd.read_csv('\/kaggle\/input\/ufo-sightings\/complete.csv', error_bad_lines=False, names=cols)\ndf1.drop([0], inplace=True)\ndf2 = pd.read_csv('\/kaggle\/input\/ufo-sightings\/scrubbed.csv')\ndf2.head()","0fe99091":"print(f'Shape of complete.csv:', df1.shape)\nprint(f'Shape of scrubbed.csv:', df2.shape)","a3432423":"\ndef na_cols_freq(df):\n    features_num = df.columns\n    na_columns = df.isna().sum(axis=0)\n    na_columns_num = na_columns[features_num] \/ df.shape[0]\n    print(na_columns_num[na_columns_num > 0], '\\n')\n\nuncorrect = df1.loc[df1['missed'] == 0]\nprint('Uncorrect rows:', uncorrect.shape[0], '\\n')\nprint('Nan elements missed:\\n')\nna_cols_freq(uncorrect)\nuncorrect.head()","3f9e6084":"df1 = df1.loc[df1['missed'].isna()]\ndf1.drop(['missed'], axis=1, inplace=True)\ndf1.shape\n\nmissed = pd.concat([df1, df2]).drop_duplicates(subset=['comments'], keep=False)\nprint('Nan elements missed:\\n')\nna_cols_freq(missed)\nprint('Num of latitude = 0:', missed.loc[missed['latitude'] == '0'].shape[0], '\\n')\nprint('Num of longitude = 0:',missed.loc[missed['longitude '] == '0'].shape[0], '\\n')\nprint('Num of duration seconds = 0:',missed.loc[missed['duration (seconds)'] == '0'].shape[0], '\\n')\n\nmissed.head()","3791ebb7":"ufo_base = pd.concat([df1, df2]).drop_duplicates(subset=['comments'], keep='last')\n\n#  \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f 24:00 \u043d\u0430 23.59\ndef custom_to_datetime(date):\n    if date[11:13] == '24':\n        x = date[:11] + '23:59'\n    elif date[10:12] == '24':\n        x = date[:10] + '23:59'\n    elif date[9:11] == '24':\n        x = date[:9] + '23:59'\n    else:\n        return pd.to_datetime(date)\n    return pd.to_datetime(x)\n\nufo_base.index = np.arange(0, len(ufo_base))\nufo_base['datetime'] = ufo_base['datetime'].apply(custom_to_datetime)  \nufo_base['date posted'] = pd.to_datetime(ufo_base['date posted'])\n\nufo_base['country'] = ufo_base['country'].fillna('unknown')\nufo_base['state'] = ufo_base['state'].fillna('unknown')\nufo_base['shape'] = ufo_base['shape'].fillna('unknown')\nufo_base['comments'] = ufo_base['comments'].fillna('unknown')\n\nufo_base['shape'] = ufo_base['shape'].astype('category')\nufo_base['state'] = ufo_base['state'].astype('category')\nufo_base['country'] = ufo_base['country'].astype('category')\n\nufo_base['duration (seconds)'] = pd.to_numeric(ufo_base['duration (seconds)'], errors='coerce')\nufo_base['latitude'] = pd.to_numeric(ufo_base['latitude'], errors='coerce')\nufo_base['longitude '] = pd.to_numeric(ufo_base['longitude '], errors='coerce')    \n\nufo_base.loc[: ,'latitude'].replace({0.0: np.nan}, inplace=True)\nufo_base.loc[: ,'longitude '].replace({0.0: np.nan}, inplace=True)\nufo_base.loc[: ,'duration (seconds)'].replace({0.0: np.nan}, inplace=True)\nufo_base['month'] = ufo_base['datetime'].dt.month\nufo_base['weekday'] = ufo_base['datetime'].dt.weekday","782de6bd":"na_cols_freq(ufo_base)","0cb2b247":"plt.clf()\nsns_plot = sns.distplot(ufo_base['datetime'].dt.year, bins = 54).\\\nset_title('\u041f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0433\u043e\u0434\u0430\u043c')\nfig = sns_plot.get_figure()\nplt.xlim(1960,2020)\nplt.grid(True)\nplt.xlabel(\"\u0413\u043e\u0434\")\nplt.ylabel(\"\u041f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\")","fe51d9a4":"data = ufo_base.groupby(['month']).size().reset_index(name='count')\n\nfig, ax = plt.subplots()\n\nax.bar(data['month'], data['count'])\nplt.xlabel('\u041c\u0435\u0441\u044f\u0446', fontsize=15)\nplt.ylabel(' \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c', fontsize=11)\nax.set_xticklabels(['\u042f\u043d\u0432\u0430\u0440\u044c','\u042f\u043d\u0432\u0430\u0440\u044c', '\u0424\u0435\u0432\u0440\u0430\u043b\u044c', '\u041c\u0430\u0440\u0442', '\u0410\u043f\u0440\u0435\u043b\u044c', '\u041c\u0430\u0439', '\u0418\u044e\u043d\u044c', '\u0418\u044e\u043b\u044c',\\\n                    '\u0410\u0432\u0433\u0443\u0441\u0442', '\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c', '\u041e\u043a\u0442\u044f\u0431\u0440\u044c', '\u041d\u043e\u044f\u0431\u0440\u044c', '\u0414\u0435\u043a\u0430\u0431\u0440\u044c'])\nplt.xticks(rotation=90)\nplt.locator_params(axis='x', nbins=13)","2123fa0a":"data = ufo_base.groupby(['weekday']).size().reset_index(name='count')\n\nfig, ax = plt.subplots()\n\nax.bar(data['weekday'], data['count'])\nplt.xlabel('\u041c\u0435\u0441\u044f\u0446', fontsize=15)\nplt.ylabel(' \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c', fontsize=11)\nax.set_xticklabels(['\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', '\u0412\u0442\u043e\u0440\u043d\u0438\u043a', '\u0421\u0440\u0435\u0434\u0430', '\u0427\u0435\u0442\u0432\u0435\u0440\u0433',\\\n                    '\u041f\u044f\u0442\u043d\u0438\u0446\u0430', '\u0421\u0443\u0431\u0431\u043e\u0442\u0430', '\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435'])\nplt.xticks(rotation=90)\nplt.locator_params(axis='x', nbins=8)\n\n","4701e680":"plt.clf()\nsns_plot = sns.distplot(ufo_base['datetime'].dt.hour, bins = 24, kde=False).\\\nset_title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0447\u0430\u0441\u0430\u043c')\nfig = sns_plot.get_figure()\n#plt.xlim(1960,2020)\nplt.grid(True)","d764b0c8":"\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(20,10))\nax = sns.countplot(y='shape', data=ufo_base, \\\n                   order = ufo_base['shape'].value_counts().index).\\\nset_title('\u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u043f\u043e \u0447\u0430\u0441\u0442\u043e\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u0445 \u0432 \u043d\u0435\u0431\u0435 \u0444\u0438\u0433\u0443\u0440')\n#plt.xticks(rotation=90)\n\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e', fontsize=20)\nplt.xlabel('\u0422\u0438\u043f \u0444\u0438\u0433\u0443\u0440\u044b', fontsize=20)\n","e16759b3":"ax = sns.catplot(y='state',\n            data=ufo_base,\n            kind='count',\n            height=15,\n            order = ufo_base['state'].value_counts().index)\n\nax.fig.suptitle('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0448\u0442\u0430\u0442\u0430\u043c', x=0.5, y=1,\\\n                fontsize = 25)\n\nplt.ylabel('\u0428\u0442\u0430\u0442', fontsize=20)\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e', fontsize=20)","11905397":"sns.set(style='darkgrid')\nplt.figure(figsize=(20,10))\nax = sns.countplot(x='country', data=ufo_base,\\\n                  order = ufo_base['country'].value_counts().index, log=True).\\\nset_title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c', fontsize=25)\n\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, log', fontsize=20)\nplt.xlabel('\u0428\u0442\u0430\u0442', fontsize=20)","6570a56d":"fig = plt.hist(x = ufo_base['duration (seconds)'], bins=np.arange(0,15000,300), log=True)\n\nplt.title('\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 UFO', fontsize=20)\n\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, log', fontsize=15)\nplt.xlabel('\u0412\u0440\u0435\u043c\u044f, \u0441', fontsize=15)","c8242a12":"fig = plt.hist(x = (ufo_base['date posted'].dt.year - ufo_base['datetime'].dt.year), bins=np.arange(0,100,3), log=True)\n\nplt.title('\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u043c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 UFO \u0438 \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u043c \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 \u0433\u043e\u0434\u0430\u0445', fontsize=15)\n\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, log', fontsize=15)\nplt.xlabel('\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u0432 \u0433\u043e\u0434\u0430\u0445', fontsize=15)","c2695f97":"def text_edit(row):\n    row = row.lower()\n    row = re.sub('[^\u0430-\u044f\u0451a-z\\s]', '', row)\n    row = nltk.word_tokenize(row)\n    row = [stemmer.stem(x) for x in row]    \n    return row\n   \n# \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043b\u0438\u0448\u043d\u0438\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0441\u0442\u043e\u043f-\u0441\u043b\u043e\u0432.\nstemmer = nltk.stem.SnowballStemmer('english')\nstop_words = stopwords.words('english')\n\ncomments = ufo_base['comments'].apply(text_edit)\ncomments = comments.apply(lambda x: [item for item in x if item not in stop_words])\ncomments = list(comments.apply(lambda x: ' '.join(x)))\n\n# \u0432\u0435\u043a\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f, \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u043c\u044b\u0445 \u0441\u043b\u043e\u0432.\n\ncount_vec = CountVectorizer(min_df = 0.01)\nX = count_vec.fit_transform(comments)\n\nvocab = count_vec.get_feature_names()\ncounts = X.sum(axis=0).A1\nfreq_distribution = Counter(dict(zip(vocab, counts)))\ncommon = freq_distribution.most_common(50)\npd.DataFrame(common, columns= ['word', 'count'])","ceadab01":"sample =ufo_base.loc[(~ufo_base['latitude'].isna())].sample(10000)\n\nMap = folium.Map(zoom_start=2)\nfor lat, long in zip(sample['latitude'], sample['longitude ']):\n    folium.Circle((lat, long),\n                   radius=0.1,\n                   color='red',\n                   fill_color='#3186cc',\n                   ).add_to(Map)\nMap","975daa41":"sample =ufo_base.loc[ (ufo_base['country'] == 'us') & (~ufo_base['latitude'].isna())].sample(5000)\n\nMap = folium.Map(location=(41.526653, -101.103882), zoom_start=2.7)\nfor lat, long in zip(sample['latitude'], sample['longitude ']):\n    folium.Circle((lat, long),\n                   radius=0.01,\n                   color='red',\n                   fill_color='#3186cc',\n                   ).add_to(Map)\nMap","d89fef81":"counts_of_vision = pd.DataFrame(ufo_base.groupby('state')['state'].count())\ncounts_of_vision['count'] = counts_of_vision['state']\nx = pd.Series(counts_of_vision.index).apply(lambda x: x.upper())\ncounts_of_vision.index = np.arange(0, counts_of_vision.shape[0])\ncounts_of_vision['State'] = x\ncounts_of_vision.drop('state', axis=1, inplace=True)\n\nurl = 'https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data'\nstate_geo = f'{url}\/us-states.json'\nstate_unemployment = f'{url}\/US_Unemployment_Oct2012.csv'\nstate_data = pd.read_csv(state_unemployment)\n\nm = folium.Map(location=[48, -102], zoom_start=3)\n\nfolium.Choropleth(\n    geo_data=state_geo,\n    name='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e',\n    data=counts_of_vision,\n    columns=['State', 'count'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.4,\n    legend_name='Number of UFO Sightings'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\nm","119ceb7f":"counts_of_vision = pd.DataFrame(ufo_base.groupby('state').mean())\ncounts_of_vision['count'] = counts_of_vision['duration (seconds)']\ncounts_of_vision['duration (seconds)'] = np.log(counts_of_vision['duration (seconds)'])\nx = pd.Series(counts_of_vision.index).apply(lambda x: x.upper())\ncounts_of_vision.index = np.arange(0, counts_of_vision.shape[0])\ncounts_of_vision['State'] = x\n\nbins = list(counts_of_vision['duration (seconds)'].quantile([0, 0.25, 0.5, 0.75, 1]))\n\nurl = 'https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data'\nstate_geo = f'{url}\/us-states.json'\nstate_unemployment = f'{url}\/US_Unemployment_Oct2012.csv'\nstate_data = pd.read_csv(state_unemployment)\n\nm = folium.Map(location=[48, -102], zoom_start=3)\n\nfolium.Choropleth(\n    geo_data=state_geo,\n    name='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e',\n    data=counts_of_vision,\n    columns=['State', 'duration (seconds)'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    bins=bins,\n    fill_opacity=0.7,\n    line_opacity=0.4,\n    legend_name='Time of UFO Sightings in log(seconds)'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\nm","055e6239":"## \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0447\u0430\u0441\u0430\u043c","ea2fbf1a":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0441 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u043c. \u042d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0433\u043e\u0434\u0430 \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439.","a2e322e8":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0432 \u0448\u0442\u0430\u0442\u044b \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u044b\u043c\u0438 \u044f\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 UFO \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u044d\u0442\u043e \u0448\u0442\u0430\u0442\u044b \u0441 \u0441\u0430\u043c\u044b\u043c \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u0432 \u0441\u0442\u0440\u0430\u043d\u0435.","1a779b23":"## \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0448\u0442\u0430\u0442\u0430\u043c","d7b4642d":"## \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u043c\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f\u0445:","cfaea316":"## \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u044f \u0437\u0430 UFO \u043f\u043e \u0448\u0442\u0430\u0442\u0430\u043c","5bfa81c1":"## \u041f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0433\u043e\u0434\u0430\u043c","4bb09af1":"\u041c\u043e\u0436\u0435\u043c \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043a\u043e\u043d\u043e\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438:\n\n1.  \u0427\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0433\u043e\u0434, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u044f\u0432\u043e\u043a. \u042d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u0438\u0440\u0430 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0440\u043e\u0441\u043b\u043e, \u043f\u0440\u043e\u0449\u0435 \u0441\u0442\u0430\u043b\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0443\u0447\u0430\u0438 (\u0434\u0430\u0432\u043d\u0438\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b\u0442\u044c \u0443\u0442\u0435\u0440\u044f\u043d\u044b) \u0438 \u0443\u0444\u043e\u043b\u043e\u0433\u0438 \u0430\u043a\u0442\u0438\u0432\u043d\u0435\u0435 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c:)\n\n2. \u0412 \u043b\u0435\u0442\u043d\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u044f\u0432\u043e\u043a. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u043b\u044e\u0434\u0438 \u0447\u0430\u0449\u0435 \u0433\u0443\u043b\u044f\u044e\u0442 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u043e \u0443\u043b\u0438\u0446\u0430\u043c.\n\n3. \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0437\u0430\u043c\u0435\u0447\u0435\u043d\u0430 \u0432 \u0432\u0435\u0447\u0435\u0440\u043d\u0435\u0435 \u0438 \u043d\u043e\u0447\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0442\u0430\u043a \u043a\u0430\u043a \u043b\u0435\u0433\u0447\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0432 \u043d\u0435\u0431\u0435.","a5bf9597":"\u0421 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0437\u0433\u0437\u044f\u0434\u0430 \u043d\u0435 \u0432\u0438\u0434\u043d\u043e \u043f\u0440\u044f\u043c\u043e\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0430\u0432\u0438\u0430\u0431\u0430\u0437\u0430\u043c\u0438, \u0437\u0430\u043a\u043e\u043d\u043e\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u0432 \u0448\u0442\u0430\u0442\u0435, \u043f\u043e\u0434\u0432\u0435\u0440\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0443\u0444\u043e\u043b\u043e\u0433\u0430\u043c \u0438 \u0442. \u0434.\n\n\u041d\u0430 \u0410\u043b\u044f\u0441\u043a\u0435 \u0438 \u0413\u0430\u0432\u0430\u044f\u0445 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0438\u0437-\u0437\u0430 \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432 \u043d\u0435\u0431\u0435.","13e3695b":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 (\u0438\u0437-\u0437\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430) \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0438 \u0438\u043c\u0435\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u0442\u0430\u043a \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u043e\u0439\u0442\u0438\u0441\u044c \u0431\u0435\u0437 \u043d\u0438\u0445.","51655907":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0440\u0430\u0441\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0432 \u0430\u043d\u0433\u043b\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0436\u0438\u0437\u043d\u0438.","4df2a122":"## \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c","e095abbf":"## \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 UFO","f8c185ff":"## \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0448\u0442\u0430\u0442\u0430\u043c \u0421\u0428\u0410","909fc1da":"## \u041c\u0435\u0441\u0442\u0430, \u0433\u0434\u0435 \u0431\u044b\u043b\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u044b UFO \u043d\u0430 \u043a\u0430\u0440\u0442\u0435 \u043c\u0438\u0440\u0430","152c7ca8":"\u041a\u0430\u043b\u0438\u0444\u043e\u0440\u043d\u0438\u044f, \u0424\u043b\u043e\u0440\u0438\u0434\u0430 \u0422\u0435\u0445\u0430\u0441 \u0438 \u0442. \u0434. \u0448\u0442\u0430\u0442\u044b \u0441 \u0441\u0430\u043c\u044b\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0431\u043e\u043b\u044c\u0448\u0435.","7362c80b":"\u041e\u0447\u0435\u043d\u044c \u0447\u0430\u0441\u0442\u043e \u0444\u0438\u0433\u0443\u0440\u044b \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b (unknown).","5f6d282b":"## \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u044f\u0432\u043e\u043a \u043e\u0431 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u043e\u043c UFO \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438","4965f5a8":"### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0438 \u0438\u043c\u043f\u043e\u0440\u0442 \u0434\u0430\u043d\u043d\u044b\u0445","c9ef4824":"# \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:","c24306da":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 complete \u043d\u0430 10% \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u0432 scrubbed. \u0422\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043d\u0435 \u0442\u0430\u043a \u043c\u043d\u043e\u0433\u043e, \u0442\u043e \u0434\u0430\u043d\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0430 \u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0435\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438. ","32b6dbef":"## \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430","8408db2a":"\u041c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f\u0445 \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442:\n\n1. \u0424\u043e\u0440\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n2. \u0426\u0432\u0435\u0442.\n3. \u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0435\u0442\u0430.\n4. \u0412 \u043a\u0430\u043a\u043e\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0431\u044b\u043b \u0437\u0430\u043c\u0435\u0447\u0435\u043d \u043e\u0431\u044a\u0435\u043a\u0442.\n5. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.","ef8a5621":"\u0412\u043d\u0443\u0442\u0440\u0438 \u0441\u0442\u0440\u0430\u043d\u044b \u0438 \u043d\u0430 \u0410\u043b\u044f\u0441\u043a\u0435 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0438\u0437-\u0437\u0430 \u043d\u0438\u0437\u043a\u043e\u0439 \u043f\u043b\u043e\u0442\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0438 \u043c\u0430\u043b\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0433\u043e\u0440\u043e\u0434\u043e\u0432.","6e3f5239":"## \u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u043f\u043e \u0447\u0430\u0441\u0442\u043e\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u0445 \u0432 \u043d\u0435\u0431\u0435 \u0444\u0438\u0433\u0443\u0440","faa64302":"\u041c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u0441\u043a\u0430\u0447\u043a\u0438 \u0432 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0435. \u042d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u043f\u0440\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0431\u0438\u043d\u044b \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445 3600 \u0438 7200 (\u0447\u0430\u0441 \u0438 \u0434\u0432\u0430 \u0447\u0430\u0441\u0430).\n\u0412 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c, \u0443\u0432\u0438\u0434\u0435\u0442\u044c UFO \u0443\u0434\u0430\u0432\u0430\u043b\u043e\u0441\u044c \u043d\u0435\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f.","d0accf1e":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435:"}}