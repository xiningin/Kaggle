{"cell_type":{"a2ac4d74":"code","b72263aa":"code","ab8c3f95":"code","aa448bd6":"code","e94314b9":"code","31b2a8fd":"code","779435f9":"code","afe28923":"code","d452e114":"code","7204e2cb":"code","08605c0e":"code","3d77599d":"code","22c78917":"code","4660e094":"code","1993c581":"code","ea787164":"code","238efa73":"code","5d75248d":"code","5ae5e84f":"code","b574c47f":"code","00ae0a41":"code","70697ba1":"code","e77e5daa":"code","abf450ac":"code","c2a4af04":"code","04812940":"code","6d612a32":"code","fdcb7864":"code","549fba69":"code","e14c9a09":"code","fa79a4c0":"code","55f5ba6f":"markdown","65653539":"markdown","65ab2fbe":"markdown","7757e83f":"markdown","fabe13bc":"markdown","a1b3a7f0":"markdown","3bb37e3b":"markdown","c4370293":"markdown","073b6696":"markdown","9153c23b":"markdown","ab812d92":"markdown"},"source":{"a2ac4d74":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.model_selection import cross_val_score\nfrom collections import Counter\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n%matplotlib inline\n","b72263aa":"df=pd.read_json('..\/input\/train.json')\ndf.head()","ab8c3f95":"df.info()","aa448bd6":"import pandas_profiling\npandas_profiling.ProfileReport(df)","e94314b9":"f, ax = plt.subplots(figsize=(5,6))\nsns.countplot(y = 'cuisine', \n                   data = df,\n                  order = df.cuisine.value_counts(ascending=False).index)","31b2a8fd":"ingredients_individual = Counter([ingredient for ingredient_list in df.ingredients for ingredient in ingredient_list])\ningredients_individual = pd.DataFrame.from_dict(ingredients_individual,orient='index').reset_index()\n\n\ningredients_individual = ingredients_individual.rename(columns={'index':'Ingredient', 0:'Count'})\n\n#Most common ingredients\nsns.barplot(x = 'Count', \n            y = 'Ingredient',\n            data = ingredients_individual.sort_values('Count', ascending=False).head(20))","779435f9":"df.ingredients","afe28923":"label = df.cuisine\n\nfeatures = df.drop(['cuisine'], axis = 1)","d452e114":"X_train, X_test, y_train, y_test = train_test_split(features, label, test_size = 0.20, random_state =0) ","7204e2cb":"train_ingredients_text = X_train.ingredients.apply(lambda s: ' '.join(w.lower() for w in s)).str.replace('[^\\w\\s]','')\ntest_ingredients_text = X_test.ingredients.apply(lambda s: ' '.join(w.lower() for w in s)).str.replace('[^\\w\\s]','')  ","08605c0e":"tfidf = TfidfVectorizer(\n    min_df = 3,\n    max_df = 0.95,\n    stop_words = 'english'\n)\n\ntfidf.fit(train_ingredients_text)\ntext = tfidf.transform(train_ingredients_text)\ntext","3d77599d":"traintext = tfidf.transform(test_ingredients_text)","22c78917":"clf = RandomForestClassifier(n_estimators=100, max_depth=16,random_state=0)\nclf.fit(text, y_train)","4660e094":"y_pred= clf.predict(traintext)","1993c581":"accuracy_score(y_test,y_pred)*100 ","ea787164":"y_pred=clf.predict(text)\naccuracy_score(y_train,y_pred)*100 ","238efa73":"clf.score(text,y_train)","5d75248d":"clf.score(traintext,y_test)","5ae5e84f":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,max_depth=16, min_samples_leaf=5) \nclf_gini.fit(text, y_train)\n","b574c47f":"clf_gini.score(text,y_train)","00ae0a41":"clf_gini.score(traintext,y_test)","70697ba1":"crossvalidation = df.ingredients.apply(lambda s: ' '.join(w.lower() for w in s)).str.replace('[^\\w\\s]','')\ntext1 = tfidf.transform(crossvalidation)\nscores = cross_val_score(clf_gini, text1, label, cv=5)\nscores","e77e5daa":"scores = cross_val_score(clf, text1, label, cv=5)\nscores","abf450ac":"from sklearn.multiclass import OneVsRestClassifier\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn.linear_model import LogisticRegression\n#from sklearn.ensemble import RandomForestClassifier\n# parameters = {'C': np.arange(1, 100, 5)}\nmodel = LinearSVC()\n# model = LogisticRegression(multi_class='multinomial')\n# model = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)\n# model = SVC()\n\nmodel = OneVsRestClassifier(model)\n# model = BaggingRegressor(model, n_estimators=100)\n# model = GridSearchCV(model, parameters, n_jobs=-1, verbose=2, cv=3)\n\nprint(cross_val_score(model, text, y_train, cv=3)) \n\n","c2a4af04":"model.fit(text, y_train)\nmodel.score(traintext, y_test)","04812940":"df1=pd.read_json(\"..\/input\/test.json\")\ndf1.head()","6d612a32":"predicting = df1.ingredients.apply(lambda s: ' '.join(w.lower() for w in s)).str.replace('[^\\w\\s]','')\ntextpre = tfidf.transform(predicting)\npredicted= model.predict(textpre)","fdcb7864":"print(predicted)","549fba69":"sub=pd.read_csv(\"..\/input\/sample_submission.csv\")\nsub.head()\ndel sub['cuisine']\nsub.head()","e14c9a09":"sub['cuisine']=predicted\nsub.head()","fa79a4c0":"sub.to_csv(\"Submission.csv\",index=False)\n","55f5ba6f":"# Random Forest Classifier (Ensemble Learning)","65653539":"### Decision Tree Test Data Score","65ab2fbe":"## Cross Validation for Decision Tree","7757e83f":"## Cross Validation for Random Forest","fabe13bc":"# For Testing on the test data provided by kaggle","a1b3a7f0":"### Decision Tree Training Data Score","3bb37e3b":"### Random Forest Train Data Accuracy","c4370293":"# Decision Tree Classifier","073b6696":"### Random Forest Test Data Accuracy","9153c23b":"# Term Frequency, Inverse Document Frequency","ab812d92":"# Analysis Of Ingrediants"}}