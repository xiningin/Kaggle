{"cell_type":{"c7d5af73":"code","b7561abb":"code","c73ecfdc":"code","c3da395f":"code","14ab065e":"code","26962b62":"code","6780f456":"code","2518f6c5":"code","b5f0753b":"code","350d4f0e":"code","c52e2e83":"code","d2ca2f13":"code","f3f26d41":"code","e445250e":"code","e3a924c8":"code","91f7d36b":"code","c087a3d1":"code","df7b2dbb":"code","e638cb34":"code","01b86471":"code","df25c0cf":"code","ece6a0ce":"code","4642a8a2":"code","4f061745":"code","b18d4ca7":"code","cdec113e":"code","29201e6b":"code","1fae466a":"code","89a9be3c":"code","e3d0037f":"code","b0d01440":"code","976dc45d":"markdown","2755cf6c":"markdown","22eb81eb":"markdown","cd14d6ab":"markdown","307f9b0a":"markdown","3f7c28a3":"markdown"},"source":{"c7d5af73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7561abb":"df_2013 = pd.read_csv(\"\/kaggle\/input\/air-quality\/real_2013.csv\")","c73ecfdc":"df_2013.head()","c3da395f":"df_2014 = pd.read_csv(\"\/kaggle\/input\/air-quality\/real_2014.csv\")","14ab065e":"df_2014.head()","26962b62":"df_2015 = pd.read_csv(\"\/kaggle\/input\/air-quality\/real_2015.csv\")","6780f456":"df_2015.shape","2518f6c5":"df_2015.head()","b5f0753b":"frames = [df_2013,df_2014,df_2015]\ndata = pd.concat(frames)","350d4f0e":"data.shape","c52e2e83":"missing_val_count_by_column = (data.isnull().sum())\nprint(missing_val_count_by_column[missing_val_count_by_column > 0])","d2ca2f13":"data2 = data.dropna(axis=0) # Since only one row missing","f3f26d41":"data2.shape","e445250e":"import matplotlib.pyplot as plt  \nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline","e3a924c8":"X = data2[['T','TM','Tm','SLP','H','VV','V','VM']]\ny = data2['PM 2.5']","91f7d36b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","c087a3d1":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train) #training the algorithm","df7b2dbb":"#To retrieve the intercept:\nprint(regressor.intercept_)\n#For retrieving the slope:\nprint(regressor.coef_)","e638cb34":"y_pred = regressor.predict(X_test)","01b86471":"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","df25c0cf":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, y_pred)","ece6a0ce":"r2_score(y_test, y_pred)","4642a8a2":"# Plot outputs\nimport matplotlib.pyplot as plt\nplt.scatter(y_test, y_pred, color='black')\nplt.xticks(())\nplt.yticks(())\n\nplt.show()","4f061745":"test = pd.read_csv(\"\/kaggle\/input\/air-quality\/real_2016.csv\")","b18d4ca7":"test.head()","cdec113e":"X_2016 = test[['T','TM','Tm','SLP','H','VV','V','VM']]\ny_2016 = test['PM 2.5']","29201e6b":"y_pred2 = regressor.predict(X_2016)","1fae466a":"df = pd.DataFrame({'Actual': y_2016, 'Predicted': y_pred2})\ndf","89a9be3c":"from sklearn.metrics import mean_squared_error,r2_score\nmean_squared_error(y_2016, y_pred2)","e3d0037f":"r2_score(y_2016, y_pred2)","b0d01440":"# Plot outputs\nimport matplotlib.pyplot as plt\nplt.scatter(y_2016, y_pred2, color='black')\nplt.xticks(())\nplt.yticks(())\n\nplt.show()","976dc45d":"# Check missing values","2755cf6c":"# Predictions","22eb81eb":"# Check error","cd14d6ab":"# Combine the 3 dataframes","307f9b0a":"# Let's use 2013, 2014 and 2015 data as training\/validation and Predict air quality on 2016 data","3f7c28a3":"# Linear Regression Model"}}