{"cell_type":{"cfb4970d":"code","9c20cf1b":"code","b4686557":"code","c6583560":"code","4a357f6f":"code","23ca2fcc":"code","92c2bd57":"code","94bf1a37":"code","8a76ccb6":"code","a8301e98":"code","420c0957":"code","5b7cb348":"code","646ac4d1":"code","6beac825":"code","1c248725":"code","c6a9364d":"code","703a9947":"code","9713bb86":"code","71c67350":"code","9835d63f":"code","9d608bea":"code","ea133687":"code","bac6cc98":"code","37423b79":"code","e66219a4":"code","1c727cd2":"code","3f323cf9":"code","c403552c":"code","b7f16b43":"code","91147ca1":"code","303a12f6":"code","71854a72":"code","4c1c183d":"code","afeae3cf":"markdown","84146105":"markdown","ecf62d5d":"markdown","6e1a4bc0":"markdown","2f539d36":"markdown","be64e70b":"markdown","729f4452":"markdown","c3391b18":"markdown","ca106696":"markdown","133ec163":"markdown","2ed2111b":"markdown","2508566b":"markdown","8fcb7796":"markdown","44a818ff":"markdown","872bde01":"markdown"},"source":{"cfb4970d":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9c20cf1b":"df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","b4686557":"df.head()","c6583560":"test.tail()","4a357f6f":"sex_bin = {\"female\": 0,   # Zero is female \n           \"male\": 1}     # One is for male\ndf['Sex'] = df['Sex'].map(sex_bin)\ntest['Sex'] = test['Sex'].map(sex_bin)","23ca2fcc":"sns.countplot(x=\"Sex\", hue=\"Survived\", data=df)","92c2bd57":"sns.heatmap(data=df.corr(), annot=True )","94bf1a37":"df.info()","8a76ccb6":"def get_title(name):\n    first = name.split(',')\n    second = first[1].split('.')\n    return second[0]\n","a8301e98":"df.Name = df.Name.apply(get_title)\ntest.Name = test.Name.apply(get_title)","420c0957":"def best_age(name):\n    return df.loc[(df.Name == name)].Age.mean()","5b7cb348":"for i in df.Name.unique():\n    if (df.loc[(df.Name == i)].Age.isnull().sum()) > 0:\n        print(i, \"&\", df.loc[(df.Name == i)].Age.isnull().sum())\n        print(best_age(i))","646ac4d1":"df.Age=df.Age.fillna(df.Name.apply(best_age))\ntest.Age=test.Age.fillna(test.Name.apply(best_age))","6beac825":"df.isnull().sum()","1c248725":"test.isnull().sum()","c6a9364d":"y_train = df.Survived \nX_train = df.drop(\"Survived\", axis=1) # remove Survived from dataframe\n","703a9947":"X_train = X_train.drop([\"Ticket\", \"Cabin\", \"PassengerId\"], axis=1) # removing other 3 figures from dataset","9713bb86":"X_train.columns","71c67350":"X_train.loc[(X_train.Embarked.isnull())]","9835d63f":"X_train.loc[(X_train.Name == \" Miss\") & (X_train.SibSp == 0) & (X_train.Parch== 0) & (X_train.Embarked == \"S\")].count()  # most popular -> \"S\" => X_train.Embarked == \"S\"  ","9d608bea":"X_train.loc[(X_train.Name == \" Mrs\") & (X_train.SibSp == 0) & (X_train.Parch== 0) & (X_train.Embarked == \"S\")]","ea133687":"X_train.Embarked.fillna(\"S\", inplace=True)","bac6cc98":"test.Fare.fillna(test.Fare.mean(), inplace=True) # fill missing values in test dataframe","37423b79":"features = ['Pclass', 'Sex', 'Age' ,'SibSp', 'Parch', 'Fare', 'Embarked']\nX = pd.get_dummies(X_train[features], drop_first=True) #change categorical variables into dummy variables ","e66219a4":"test_features = ['Pclass', 'Sex', 'Age' ,'SibSp', 'Parch', 'Fare', 'Embarked']\nX_test = pd.get_dummies(test[test_features], drop_first=True)","1c727cd2":"X.head()","3f323cf9":"X_test.head()","c403552c":"X_test.info()","b7f16b43":"X.info()","91147ca1":"from sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression(random_state=7, solver='liblinear') # i have used solver as a liblinear because i have binary values like 0 and 1\nlogreg.fit(X, y_train)\n","303a12f6":"logreg.score(X, y_train)","71854a72":"preds = logreg.predict(X_test)","4c1c183d":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': preds})\noutput.to_csv('LogisticRegressionv1.csv', index=False)","afeae3cf":"**Age** has many missing values!\n\n**Cabin** has only about 25% out of 100% values!\n\n**Embarked** has double missing values!","84146105":"Thank you, Kagglers!\nShare your ideas abour my notebook and upvote if it was useful!\nHappy New Year to everyone!","ecf62d5d":"So to conclude from above plot:\n* majority of male are NOT survived\n* majority of female are survived\n* male are greater than female","6e1a4bc0":"My plan for replacing **Age** is to use mean() function for each title in **Name**\n\nI will remove **Cabin** from dataframe because I find it  irrelevant\n\nI will use  the most popular value instead of  missing values in **Embarked**\n","2f539d36":"**This is my first public Kaggle notebook!** I am happy to share my experience with you, Kagglers!\n\n**My roadmap:**\n\n* Importing dataset,\n* Visualization dataset,\n* Filling missing values,\n* Implementing LogisticRegression, \n* Use LogisticRegression to predict test dataset,\n* Upload my results to public leaderboard.\n\n","be64e70b":"Let\\`s observe **heatmap**\n* Low correlations are between Survived and [Fare & Pclass]\n* Zero correlations are between Survived and [Age, SibSp, PassengerId and Parch]\n* Age & Pclass has normal negative correlation which means that Pclass maybe been devived into Age category\n* Fare & Pclass also have normolized negative correlation which is probably means relationship\n* Parch and SibSp have normal positive correlation value\n* PassengerId does not have any high or low correlation with other feature -> so we drop PassenderId\n\n**Those correlation results tell us that Zero correlation features should be eliminated.\nHowever, Age i think must stay for modelling.**","729f4452":"My model score is **0.79910**, when i have implemented **LogisticRegression**","c3391b18":"We REPLACED NAME TO TITLE:\n* 17 UNIQUE TITLES\n* TITLES ARE HELPFUL FOR PREDICTING AGE \n* TITLE HELPS TO PREDICT OTHER MISSING VALUES\n* NOW I AM ANALYSING TITLES AND OTHER FEATURES\n","ca106696":"*df.head()* & *df.tail()* made similar work!","133ec163":"**We finished our tasks on both dataframes**\n\nThose dataframes are ready for fitting!","2ed2111b":"First of all, I must change **Sex** from **Categorical format** to **Numerical format** in both *df* & *test*:","2508566b":"In **test** dataframe, i have one missing value in **Fare** & 327 inn **Cabin**","8fcb7796":"*As you see, We have two missing value in Embarked for Miss and Mrs*","44a818ff":"Here is values for missing values in **Age** column","872bde01":"* Age column has many missing values \n* Cabin column also has many missing values \n* Embarked column has 2 missing values\nNow i should replace missing value to reallistic values:\n"}}