{"cell_type":{"cc03942e":"code","2b430986":"code","bee7c964":"code","634d79d6":"code","34fc126e":"code","e4862212":"code","f49ae615":"code","a6699fbf":"code","2c349ef3":"code","13bd9ad3":"code","a3ca28c6":"code","1312ecde":"code","d2bea2b8":"code","a4183a77":"code","8fdebf84":"code","6855e939":"code","98f85c6f":"code","0a3f390e":"code","d1ec5f47":"code","ad9a0e90":"code","afc2ef51":"code","9018b7da":"code","c35d2db1":"code","d140bb98":"code","a7d77532":"code","73b8abd0":"code","1362d686":"code","cdd5df4d":"code","1bc47c14":"code","5e5db0cf":"code","c363fa74":"code","af0c725b":"code","10023531":"code","49fc792a":"code","ef351c1e":"code","7e28449e":"code","f93a4771":"code","9420d38a":"code","2d6a12ed":"code","a1b739f5":"code","4d09d03b":"code","20067bfc":"code","4bdef4a6":"code","2b876179":"code","ca8d3a12":"code","35d559f0":"code","8986e1be":"code","3b3b4b97":"code","6b3401b1":"code","0a62b25b":"code","ba3ee2d1":"code","4623ed66":"code","1515dd38":"code","1dd2377f":"code","099120d1":"markdown","3a83c0a2":"markdown","1d5776a1":"markdown","bfc5272c":"markdown","ca7868b6":"markdown","671cf47f":"markdown","a9b15e9a":"markdown","b97ef887":"markdown","b6c87a9b":"markdown","610682b6":"markdown","a0c8f268":"markdown","dd0ee3d1":"markdown","185bfd55":"markdown","3fab39f9":"markdown","38dbc8e0":"markdown","b219db9e":"markdown","24630e45":"markdown","39a48262":"markdown","36026812":"markdown","63028f94":"markdown","a1f47026":"markdown","50b81508":"markdown","5f4cd5a3":"markdown","19116ee0":"markdown","d0a535a3":"markdown","60a5a834":"markdown","3484fed9":"markdown","1479f7cf":"markdown","f92d5a88":"markdown","6278c9a0":"markdown","8e2a7617":"markdown","ce16c856":"markdown","2c43fa59":"markdown","f97a9bef":"markdown","58583afc":"markdown","4aa0a424":"markdown","73c86365":"markdown"},"source":{"cc03942e":"#system\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n#Data Preprocessing and Algebra\nimport numpy as np \nimport pandas as pd \n\n#Data Visualization\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport plotly.express as px\n\n#Machine Learning and Evaluation Model\nfrom sklearn.model_selection import train_test_split, cross_val_score, KFold, cross_validate, cross_val_predict\n!pip install xgboost\nfrom xgboost import XGBRegressor\nfrom xgboost import XGBRFRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score, make_scorer","2b430986":"df = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")","bee7c964":"df.sample(10)","634d79d6":"df.shape","34fc126e":"df.columns","e4862212":"import missingno","f49ae615":"missingno.matrix(df)","a6699fbf":"#Melihat data yang hilang\ndef missing_percentage(df):\n    \"\"\"This function takes a DataFrame(df) as input and returns two columns, total missing values and total missing values percentage\"\"\"\n    total = df.isnull().sum().sort_values(ascending = False)\n    percent = round(df.isnull().sum().sort_values(ascending = False)\/len(df)*100,2)\n    return pd.concat([total, percent], axis=1, keys=['Total','Percent'])\n\nmissing_percentage(df)","2c349ef3":"#Mengitung nilai yang unik\nfor col in df.columns:\n    print('Nilai unik pada feature', col, 'adalah')\n    print(df[col].value_counts())\n    print('\\n')","13bd9ad3":"column = ['id', 'date', 'price', 'bedrooms', 'bathrooms', 'sqft_living',\n       'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade',\n       'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode',\n       'lat', 'long', 'sqft_living15', 'sqft_lot15']\n\nnumeric = ['price', 'bedrooms', 'bathrooms', 'sqft_living',\n       'sqft_lot', 'floors','sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated','lat', \n           'long', 'sqft_living15', 'sqft_lot15']\n\ndf[numeric].describe()","a3ca28c6":"#Membulatkan bilangan pada variabel floors dan bathrooms\ndf[\"bathrooms\"] = np.round(df.bathrooms)\ndf[\"floors\"] = np.round(df.floors)","1312ecde":"#Menambahkan kolom is_renovated\nis_renovated = []\nfor x in df[\"yr_renovated\"] :\n    if x == 0:\n        x=0\n    else :\n        x=1\n    is_renovated.append(x)\ndf[\"is_renovated\"] = np.array(is_renovated)","d2bea2b8":"#Menambahkan kolom have_basement\nhave_basement = []\nfor x in df[\"sqft_basement\"] :\n    if x == 0:\n        x=0\n    else :\n        x=1\n    have_basement.append(x)\ndf[\"have_basement\"] = np.array(have_basement)","a4183a77":"#Menambahkan kolom building_age, yr_sold, month_sold\nfrom datetime import datetime\nimport calendar\n\ndf['date'] = df['date'].str.split('T').str[0]\n\nmonths = []\nyears = []\nfor x in df.date :\n    datetime_object = datetime.strptime(x, '%Y%m%d')\n    month = datetime_object.month\n    month = calendar.month_name[month]\n    year = datetime_object.year\n    months.append(month)\n    years.append(year)\n\ndf[\"yr_sold\"] = np.array(years)\ndf[\"month_sold\"] = np.array(months)\ndf[\"building_age\"] = df[\"yr_sold\"] - df[\"yr_built\"]","8fdebf84":"# Sebaran Harga Rumah\nsns.displot(df.price)\nplt.title(\"Sebaran Harga Rumah\")","6855e939":"df[\"price\"].describe()","98f85c6f":"#Bulan dengan Penjualan Terbanyak\nsns.countplot(y ='month_sold', data = df,order = df[\"month_sold\"].value_counts().index)\n\nplt.title(\"Bulan dengan Penjualan Terbanyak\")\n# Show the plot\nplt.show()","0a3f390e":"#Banyaknya Penjualan Setiap Tahun\nsns.countplot(y ='yr_sold', data = df,order = df[\"yr_sold\"].value_counts().index)\n\nplt.title(\"Banyaknya Penjualan Setiap Tahun\")\n# Show the plot\nplt.show()","d1ec5f47":"#Harga Terhadap Kepunyaan Basement atau Tidak\nsns.boxplot(y=df[\"price\"],x = df['have_basement'])\nplt.title(\"Harga Terhadap Kepunyaan Basement atau Tidak\")\n# Show the plot\nplt.show()","ad9a0e90":"#Harga Terhadap Apakah Rumah Sudah Direnovasi atau Belum\n\nsns.boxplot(y=df[\"price\"],x = df['is_renovated'])\nplt.title(\"Harga Terhadap Apakah Rumah Sudah Direnovasi atau Belum\")\n# Show the plot\nplt.show()","afc2ef51":"#Harga Terhadap Letak Rumah yang Berada Dipinggir Air atau Tidak\nsns.boxplot(y=df[\"price\"],x = df['waterfront'])\n\nplt.title(\"Harga Terhadap Letak Rumah yang Berada Dipinggir Air atau Tidak\")\n# Show the plot\nplt.show()","9018b7da":"#Harga Rumah terhadap View\nsns.boxplot(y=df[\"price\"],x = df['view'])\n\nplt.title(\"Harga Rumah terhadap View\")\n# Show the plot\nplt.show()","c35d2db1":"#Harga Rumah terhadap Condition\nsns.boxplot(y=df[\"price\"],x = df['condition'])\n\nplt.title(\"Harga Rumah terhadap Condition\")\n# Show the plot\nplt.show()","d140bb98":"#Harga Rumah terhadap Grade\nsns.boxplot(y=df[\"price\"],x = df['grade'])\n\nplt.title(\"Harga Rumah terhadap Grade\")\n# Show the plot\nplt.show()","a7d77532":"#Harga Rumah terhadap Jumlah Lantai\n\nsns.boxplot(y=df[\"price\"],x = df['floors'])\n\nplt.title(\"Harga Rumah terhadap Jumlah Lantai\")\n# Show the plot\nplt.show()","73b8abd0":"#Harga Rumah terhadap Banyaknya Kamar Tidur\nsns.boxplot(y=df[\"price\"],x = df['bedrooms'])\n\nplt.title(\"Harga Rumah terhadap Banyaknya Kamar Tidur\")\n# Show the plot\nplt.show()","1362d686":"#Harga Rumah terhadap Banyaknya Bathroom\nsns.boxplot(y=df[\"price\"],x = df['bathrooms'])\n\nplt.title(\"Harga Rumah terhadap Banyaknya Bathroom\")\n# Show the plot\nplt.show()","cdd5df4d":"#Harga Rumah terhadap sqft_lot\nsns.scatterplot(y=df[\"price\"],x = df['sqft_lot'])\nplt.title(\"Harga Rumah terhadap sqft_lot\")","1bc47c14":"#Harga Rumah terhadap sqft_lot15\nsns.scatterplot(y=df[\"price\"],x = df['sqft_lot15'])\nplt.title(\"Harga Rumah terhadap sqft_lot15\")","5e5db0cf":"#Harga Rumah terhadap sqft_living\nsns.scatterplot(y=df[\"price\"],x = df['sqft_living'])\nplt.title(\"Harga Rumah terhadap sqft_living\")","c363fa74":"#Harga Rumah terhadap sqft_living15\nsns.scatterplot(y=df[\"price\"],x = df['sqft_living15'])\nplt.title(\"Harga Rumah terhadap sqft_living15\")","af0c725b":"#Harga Rumah terhadap building_age\nsns.scatterplot(y=df[\"price\"],x = df['building_age'])\nplt.title(\"Harga Rumah terhadap building_age\")","10023531":"#Harga Rumah terhadap sqft_basement\nsns.scatterplot(y=df[df['sqft_basement']!=0][\"price\"],x = df[df['sqft_basement']!=0][\"sqft_basement\"])\nplt.title(\"Harga Rumah terhadap sqft_basement\")","49fc792a":"#Harga Rumah terhadap sqft_basement\nsns.scatterplot(y=df[\"price\"],x = df['sqft_above'])\nplt.title(\"Harga Rumah terhadap sqft_above\")","ef351c1e":"#Memisahkan Kolom Numerik dan Kategorik\nnumeric = ['price', 'bedrooms', 'bathrooms', 'sqft_living',\n       'sqft_lot', 'floors','sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated','lat', 'long', 'sqft_living15', 'sqft_lot15','building_age','yr_sold']\n\ncategoric = [\"grade\",\"view\",\"condition\",\"zipcode\",\"waterfront\"]\n\ncategoric = [\"grade\",\"view\",\"have_basement\",\"is_renovated\",\"condition\",\"zipcode\",\"waterfront\",\"price\"]\n\ndf_numeric = df[numeric]\ndf_categoric = df[categoric]","7e28449e":"#Melihat Korelasi harga terhadap variabel numerik\nCorr = pd.DataFrame((abs(df_numeric.corr()['price']).sort_values(ascending = False)))\nCorr = Corr.reset_index()\nCorr = Corr.drop(Corr[Corr.price == 1].index)\n#Mengubah Nama Kolom\nCorr = Corr.rename({'price': 'Correlation_Score'}, axis=1)\nCorr","f93a4771":"sns.barplot(x=Corr[\"Correlation_Score\"],y = Corr['index'])\nplt.title(\"Komponen Numerik yang Penting Dalam Penentuan Harga Rumah\")\n# Show the plot\nplt.show()","9420d38a":"#Melihat Korelasi harga terhadap variabel kategorik\nCorr = pd.DataFrame((abs(df_categoric.corr(method='kendall')['price']).sort_values(ascending = False)))\nCorr = Corr.reset_index()\nCorr = Corr.drop(Corr[Corr.price == 1].index)\n#Mengubah Nama Kolom\nCorr = Corr.rename({'price': 'Correlation_Score'}, axis=1)\nCorr","2d6a12ed":"sns.barplot(x=Corr[\"Correlation_Score\"],y = Corr['index'])\nplt.title(\"Komponen Kategorik yang Penting Dalam Penentuan Harga Rumah\")\n# Show the plot\nplt.show()","a1b739f5":"# #Melihat sebaran harga rumah terdahap lokasi rumah\n# df[\"price_per_sqft_living\"] = df[\"price\"]\/df[\"sqft_living\"]\n\n# fig = px.scatter_mapbox(df, lat=\"lat\", lon=\"long\",     color=\"price_per_sqft_living\", size=\"sqft_living\",\n#                   color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=10, title=\"Geomap Plot Dari Harga Rumah per Sqft_living di Kota King County\")\n\n# fig.update_layout(mapbox_style=\"open-street-map\")\n\n# fig.show()","4d09d03b":"#Save File Bersih\ndf.to_csv(\"MariBisnisClean.csv\",index=False)","20067bfc":"#Memisahkan X dan y\nselected = [\"sqft_living15\",\"sqft_living\",\"sqft_above\",\"sqft_basement\",\"bathrooms\",\"bedrooms\",\"floors\",\"grade\",\"view\",\"have_basement\",\"waterfront\",\"is_renovated\",\"price\",\"lat\",\"long\"]\ndf_selected = df[selected]\n\nX = df_selected.drop(columns=\"price\")\ny = df_selected[\"price\"]","4bdef4a6":"#Parameter Tuning\ndef hyperParameterTuning(X_train, y_train):\n    param_tuning = {\n        'tree_method': ['gpu_hist'],\n        'learning_rate': [0.01, 0.1],\n        'max_depth': [3, 5, 7, 10],\n        'min_child_weight': [1, 3, 5],\n        'subsample': [0.5, 0.7],\n        'colsample_bytree': [0.5, 0.7],\n        'n_estimators' : [100, 200, 500],\n        'objective': ['reg:squarederror']\n    }\n\n    xgb_model = XGBRegressor()\n\n    gsearch = GridSearchCV(estimator = xgb_model,\n                           param_grid = param_tuning,                        \n                           #scoring = 'neg_mean_absolute_error', #MAE\n                           scoring = 'neg_mean_squared_error',  #MSE\n                           cv = 5,\n                           n_jobs = -1,\n                           verbose = 1)\n\n    gsearch.fit(X_train,y_train)\n\n    return gsearch.best_params_","2b876179":"# hyperParameterTuning(X, y)","ca8d3a12":"#Train-Test Split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)","35d559f0":"#Melatih Model\nxgb_model = XGBRegressor(colsample_bytree = 0.5,\n learning_rate = 0.01,\n max_depth = 7,\n min_child_weight = 5,\n n_estimators = 500,\n objective = 'reg:squarederror',\n subsample= 0.5)\nmodel = xgb_model.fit(X_train, y_train)","8986e1be":"# Memprediksi nilai y dari X_test\ny_predict = model.predict(X_test)","3b3b4b97":"# Aktual vs Prediksi \n\nfig, ax1 = plt.subplots(figsize=(8,6))\nplt.scatter(y_test,y_predict,color='blue')\nplt.plot(y_test,y_test,color='red')\nplt.title('XGboost Regression Result')\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.show()","6b3401b1":"#Cross-Validation\nscoring = {'MSE' : make_scorer(mean_squared_error),\n          'MAE' : make_scorer(mean_absolute_error),\n           'R2' : make_scorer(r2_score)\n          }\nkfold = KFold(n_splits=5, random_state=1234, shuffle = True)\nresults_reg = cross_validate(estimator=xgb_model,X=X,\n                                          y=y,\n                                          cv=kfold,\n                                          scoring=scoring)\nresults_reg","0a62b25b":"rmse = np.sqrt(results_reg.get('test_MSE'))\nmae = (results_reg.get('test_MAE'))\nr2 = (results_reg.get('test_R2'))\nprint('mean_RMSE : ', \"%.15f\" % (rmse.mean()))\nprint('mean_MAE : ', \"%.15f\" % (mae.mean()))\nprint('mean_R2 : ', \"%.15f\" % (r2.mean()))","ba3ee2d1":"# #Menyimpan Model\n# from sklearn.externals import joblib\n# joblib.dump(value=model, filename=\"model.pkl\")","4623ed66":"# # Register model\n# import urllib.request\n# from azureml.core.model import Model\n\n# from azureml.core import Workspace\n# ws = Workspace(subscription_id=\"760f001d-51de-4ea3-a6ab-57123ed2aba3\",\n#                resource_group=\"KampusMerdeka\",\n#                workspace_name=\"MariBisnisCapstoneProject-RAR\")\n\n\n# model = Model.register(ws, model_name=\"kcxgb\", model_path=\"model.pkl\")","1515dd38":"# #scoring_file.py\n# # ---------------------------------------------------------\n# # Copyright (c) Microsoft Corporation. All rights reserved.\n# # ---------------------------------------------------------\n# import json\n# import logging\n# import os\n# import pickle\n# import numpy as np\n# import pandas as pd\n# import joblib\n\n\n# from inference_schema.schema_decorators import input_schema, output_schema\n# from inference_schema.parameter_types.numpy_parameter_type import NumpyParameterType\n# from inference_schema.parameter_types.pandas_parameter_type import PandasParameterType\n\n\n# input_sample = pd.DataFrame({\n# \"sqft_living15\" : pd.Series([0], dtype=\"int64\"),\n# \"sqft_living\" : pd.Series([0], dtype=\"int64\"),\n# \"sqft_above\" : pd.Series([0], dtype=\"int64\"),\n# \"sqft_basement\" : pd.Series([0], dtype=\"int64\"),\n# \"bathrooms\" : pd.Series([0], dtype=\"int64\"),\n# \"bedrooms\" : pd.Series([0], dtype=\"int64\"),\n# \"floors\" : pd.Series([0], dtype=\"int64\"),\n# \"grade\" : pd.Series([0], dtype=\"int64\"),\n# \"view\" : pd.Series([0], dtype=\"int64\"),\n# \"have_basement\" : pd.Series([0], dtype=\"int64\"),\n# \"waterfront\": pd.Series([0], dtype=\"int64\"),\n# \"is_renovated\" : pd.Series([0], dtype=\"int64\"),\n# \"lat\" : pd.Series([0.0], dtype=\"float64\"),\n# \"long\" : pd.Series([0.0], dtype=\"float64\")\n# })\n# output_sample = np.array([0.0])\n\n# def init():\n#     global model\n#     # This name is model.id of model that we want to deploy deserialize the model file back\n#     # into a sklearn model\n#     model_path = os.path.join(os.getenv('AZUREML_MODEL_DIR'), 'model.pkl')\n#     model = joblib.load(model_path)\n\n\n# @input_schema('data', PandasParameterType(input_sample))\n# @output_schema(NumpyParameterType(output_sample))\n# def run(data):\n#     try:\n#         result = model.predict(data)\n#         return json.dumps({\"result\": result.tolist()})\n#     except Exception as e:\n#         result = str(e)\n#         return json.dumps({\"error\": result})\n","1dd2377f":"# #Conda-env.yml\n# # Conda environment specification. The dependencies defined in this file will\n# # be automatically provisioned for runs with userManagedDependencies=False.\n\n# # Details about the Conda environment file format:\n# # https:\/\/conda.io\/docs\/user-guide\/tasks\/manage-environments.html#create-env-file-manually\n\n# name: project_environment\n# dependencies:\n#   # The python interpreter version.\n#   # Currently Azure ML only supports 3.5.2 and later.\n# - python=3.6.2\n\n# - pip:\n#   - azureml-train-automl-runtime==1.35.1\n#   - inference-schema\n#   - azureml-interpret==1.35.0\n#   - azureml-defaults==1.35.0\n# - numpy>=1.16.0,<1.19.0\n# - pandas==0.25.1\n# - scikit-learn==0.22.1\n# - py-xgboost<=0.90\n# - fbprophet==0.5\n# - holidays==0.9.11\n# - psutil>=5.2.2,<6.0.0\n# channels:\n# - anaconda\n# - conda-forge\n","099120d1":"Visit : https:\/\/app.powerbi.com\/view?r=eyJrIjoiOWIxNTA5MTItNTg1NC00ZDQyLWEzYTctOWRiMTRhZGU3YmQ2IiwidCI6ImFmMmMwNzM0LWNiNDItNDY0Zi1iNmJmLTJhMjQxYjZhZGE1NiIsImMiOjEwfQ%3D%3D&pageName=ReportSection\n\n![image.png](attachment:b644f6a9-430a-4dbe-bb74-36b535ddb955.png)","3a83c0a2":"Pada tahap ini kita akan melakukan transformasi data dan pembersihan data, setalh itu kita akan sedikit melakukan Exploratory Data Analysis (EDA) untuk mendapatkan insight dari data yang sudah kita buat, sehingga dapat dijadikan alasan dalam pengambilan keputusan bisnis.","1d5776a1":"### Menghitung Nilai Unik Pada Setiap Kolom dan Melakukan Analisis Deskriptif Sederhana","bfc5272c":"### Melihat Sebagian Data","ca7868b6":"# 3. Data Preparation","671cf47f":"## Power BI Visualization (Dashboard)","a9b15e9a":"## Import Library","b97ef887":"# 2. Data Understanding","b6c87a9b":"Pada tahap ini kita akan melakukan EDA untuk mendapatkan insight bagi keperluan bisnis. Insight yang diambil selalu dikaitkan dengan target variabel yaitu price. Beberapa visualisasi yang dilakukan :\n* Sebaran Harga Rumah\n* Bulan dengan Penjualan Terbanyak\n* Banyaknya Penjualan Setiap Tahun\n* Harga Terhadap Kepunyaan Basement atau Tidak\n* Harga Terhadap Apakah Rumah Sudah Direnovasi atau Belum\n* Harga Terhadap Letak Rumah yang Berada Dipinggir Air atau Tidak\n* Harga Rumah terhadap View\n* Harga Rumah terhadap Condition\n* Harga Rumah terhadap Grade\n* Harga Rumah terhadap Jumlah Lantai\n* Harga Rumah terhadap Banyaknya Kamar Tidur\n* Harga Rumah terhadap Banyaknya Bathroom\n* Harga Rumah terhadap sqft_lot\n* Harga Rumah terhadap sqft_lot15\n* Harga Rumah terhadap sqft_living\n* Harga Rumah terhadap sqft_living15\n* Harga Rumah terhadap building_age\n* Harga Rumah terhadap sqft_basement\n* Harga Rumah terhadap sqft_above\n* Komponen Numerik yang Penting Dalam Penentuan Harga Rumah\n* Komponen Kategorik yang Penting Dalam Penentuan Harga Rumah\n* Melihat sebaran harga rumah terdahap lokasi rumah","610682b6":"**Test hasil Deployment**\n![image.png](attachment:a8392420-7208-4623-8f7c-accebd37fc5c.png)!","a0c8f268":"Pada tahap ini terdapat 2 file yang dibutuhkan, yaitu file environtment dan file scoring, keduanya mengatur outputan saat model sudah dideploy","dd0ee3d1":"#Deploy Model","185bfd55":"# 1. Business Understanding","3fab39f9":"### Melihat Baris dan Kolom\/Variabel\/Featurenya","38dbc8e0":"![image.png](attachment:8f98b8ea-499d-4ace-8165-1efd2d89bb9f.png)","b219db9e":"Pada tahap ini kita akan :\n* Membulatkan bilangan pada variabel bathroom\n* Menambahkan kolom is_renovated\n* Menambahkan kolom have_basement\n* Menambahkan kolom yr_sold, month, sold, building_age","24630e45":"# 0. Pendahuluan","39a48262":"Berdasarkan ilmu pengetahuan dan dataset yang digunakan berikut adalah pembagian data numerik dan data kategorik dari setiap kolom, hal ini berguna dalam melakukan Exploratory Data Analysis :\n\n1. Data Kategorik\n* id (Nominal)\n* Date (Nominal)\n* waterfront (Nominal)\n* view (Nominal)\n* condition (Ordinal)\n* grade (Ordinal)\n* zipcode (Nomnial)\n\n2. Data Numerik\n* price\n* bedrooms\n* bathrooms\n* sqft_living\n* sqft_lot\n* floor\n* sqft_above\n* sqft_basement\n* yr_built\n* yr_renovated\n* lat\n* long\n* sqft_living15\n* sqft_lot15\n","36026812":"# Microsoft x Kemendibud Ristek Independent Study Capstone Project\n\nby : Rizky Alif Ramadhan\n\nlink script : https:\/\/www.kaggle.com\/rizkyalifr\/eda-xgboost-regression\/\n\nRest Endpoint : http:\/\/c5df5d0f-4635-4de3-be26-7b5d44a6fd09.southeastasia.azurecontainer.io\/score","63028f94":"# 5. Evaluation","a1f47026":"Setalah kita mengetahui permasalahan bisnis yang akan kita selesaikan, kita selanjutnya akan mengetahui data yang akan kita gunakan untuk menyelesaikan masalah bisnis tersebut. Kita akan melakukan data describing, untuk mengenal data tersebut.","50b81508":"### Melihat Apakah Terdapat Nilai Null Pada Data","5f4cd5a3":"![image.png](attachment:5ff4cfc3-3da7-493d-80d0-4db2b6ceb5ca.png)","19116ee0":"Dapat dilihat bahwa tidak terdapat nilai null atau missing value pada dataset tersebut","d0a535a3":"# 4. Modelling","60a5a834":"Untuk melakukan penambangan data terhadap data MariBisnis.csv yang merupakan data penjualan rumah di King County, USA. Kami menggunakan metode data mining Cross-Industry Standart Process for Data Mining (CRISP-DM). Berikut adalah ilustrasi dari CRISP-DM :\n\n\n![image.png](attachment:6c08aefc-2b5b-4a3d-b94d-d69868adc3e0.png)\n\nCross-Industry Standard Process for Data Mining atau CRISP-DM adalah salah satu model proses datamining (datamining framework) yang awalnya (1996) dibangun oleh 5 perusahaan yaitu Integral Solutions Ltd (ISL), Teradata, Daimler AG, NCR Corporation dan  OHRA. Framework ini kemudian dikembangan oleh ratusan organisasi dan perusahaan di Eropa untuk dijadikan methodology standard non-proprietary bagi data mining. Versi pertama dari methodologi ini dipresentasikan pada 4th CRISP-DM SIG Workshop di Brussels pada bulan Maret 1999 (Pete Chapman, 1999); dan langkah langkah proses data mining berdasarkan model ini di publikasikan pada tahun berikutnya (Pete Chapman,2000).\n\nBeberapa tahapan dalam CRISP-DM yaitu :\n1. Busnisess Understanding\n2. Data Understanding\n3. Data Preparation\n4. Modelling\n5. Evaluation\n6. Deployment\n","3484fed9":"Pada tahap ini kita akan melakukan evaluasi terhadap model yang kita buat, menggunakan cross-validation, dengan jumlah fold = 5. Metrics yang digunakan dalam evaluasi ini ada 3 yaitu mean_absolute_error, root_mean_squared_error, dan yang terakhir adalah r2_score.","1479f7cf":"### Meload Data","f92d5a88":"Setelah berhasil membuat model, sekarang kita akan mendeploy model yang telah berhasil kita buat. Pertama kita akan menyimpan model yang kita buat, melakukan registrasi dari model tersebut ke dalam workspace. Kemudian melakukan deployment. Setelah itu kita mencoba melakukan test terhadap model hasil deploy-an kita.","6278c9a0":"Pada tahap business understanding ini, kami menentukan tujuan dan persyaratan dengan jelas secara keseluruhan, menerjemahkan tujuan tersebut serta menentukan pembatasan dalam perumusan masalah data mining, dan selanjutnya mempersiapkan strategi awal untuk mencapai tujuan tersebut.\n\nDataset ini berisi harga jual rumah untuk King County,USA yang mencakup Seattle. Rumah yang dijual disini adalah rumah yang dijual antara bulan Mei 2014 hingga Mei 2015.\n\nTidak adanya acuan dalam harga penjualan rumah melatarbelakangi kami untuk mengembangkan model regresi ini. Diharapkan dengan adanya model ini tidak terjadi kebingungan dalam menentukan harga jual maupun harga beli dari sebuah rumah.\n\nTujuan dan rumusan masalah yang akan diselesaikan adalah **melakukan prediksi terhadap harga rumah, menurut feature-feature yang tersedia** seperti jumlah tempat tidur, kamar mandi, dan lain sebagainya yang merupakan atribut dari sebuah rumah dan **melakukan eksplorasi dari dataset yang tersedia untuk keperluan bisnis, seperti melihat sebaran harga rumah menurut lokasi**, melihat hubungan antara harga rumah dengan kondisi, apakah sudah pernah melakukan renovasi atau tidak, dan lain-lain.\n\n* Prediksi harga rumah tersebut berguna untuk penjual maupun pembeli, untuk penjual berguna untuk perkiraan harga yang nantinya akan dipasang pada iklan atau harga yang ditawarkan kepada pembeli. Untuk pembeli berguna untuk melihat kisaran harga yang ditawarkan sehingga dapat menyiapkan budget yang sesuai. Dalam prediksi harga kami akan menggunakan XGboost Regressor dengan Metricsnya adalah RMSE\n* Eksplorasi dataset berguna untuk perusahaan marketplace jual-beli rumah seperti dalam menentukan segmentasi pasar dan menentukan keputusan bisnis.\n","8e2a7617":"## 3.2 Exploratory Data Analysis","ce16c856":"Berikut adalah hal yang kita dapatkan pada langkah ini :\n\n* Kita dapat melihat pada variabel id terdapat id yang terulang, hal ini menunjukan **terdapat beberapa rumah yang dibeli kemudian dijual kembali lebih dari satu kali dalam rentang waktu May 2014 sampai May 2015**. Namun, karena lebih banyak variabel id yang tidak terulang kita akan menghapus variabel id ini dalam proses analisis.\n* Berdasarkan ciri-ciri dataset, data kita bukanlah time-series walaupun terdapat variabel date. Mengepa demikian? karena pada data time-series yang diamati hanyalah satu entitas, sementara data yang kita gunakan lebih dari 1 entitas. Kita dapat menghapus kolom date pada proses modelling, namun kolom ini berguna untuk melihat rata-rata penjualan setiap harinya atau setiap bulannya.\n* Berdasarkan variabel floor, rumah yang dijual kebanyakan berlantai 1 dan 2\n* Hanya sedikit rumah yang terletak pada pinggir pantai (163 rumah saja)\n* Kebanyakan rumah memiliki nilai view 0\n* Kondisi rumah terbanyak adalah dengan nilai 3\n* Kebanyakan rumah yang dijual tidak memiliki basement\n* 559 Rumah dibagun pada tahun 2014, kami menganggap rumah tersebut adalah rumah baru\n* Kebanyakan rumah tidak direnovasi\n* Harga rata-rata rumah adalah 540088.1 dolar\n* Berdasarkan standar deviasi lat dan long kita dapat melihat bahwa rumah yang dijual masih dalam satu region yaitu di King County, USA","2c43fa59":"## 3.1 Data Transformation","f97a9bef":"# 6. Deployment (Azure ML Studio)","58583afc":"### Menentukan Apakah Sebuah Kolom Itu Merupakan Data Kategorik atau Numerik","4aa0a424":"Terdapat 21613 baris data dan 21 kolom, salah satunya yaitu variabel price merupakan target variabel yang nantinya akan dibuatkan model terhadap variabel tersebut. Berikut adalah penjelasan dari setiap kolomnya :\n\n\n![image.png](attachment:5d0b59b5-eec8-441c-8d44-cfe375065f72.png)\n\n\nsumber : https:\/\/geodacenter.github.io\/data-and-lab\/KingCounty-HouseSales2015\/","73c86365":"Pada tahap modelling, pertama kita memisahkan X dan y dimana variabel y adalah variabel target kita yaitu \"price\". Setelah itu kita melakukan hyperparameter tuning untuk mencari parameter mana yang terbaik yang akan digunakan pada model XGboost yang kita buat. Selanjutnya kita memisahkan data menjadi data latih dan data test. Kemudian melakukan testing dan melakukan plotting terhadap hasil aktual vs hasil prediksi. Berdasarkan hasil EDA, kita hanya memilih beberapa variabel yang akan dimasukan ke variabel X, yaitu :\n* \"sqft_living15\"\n* \"sqft_living\"\n* \"sqft_above\"\n* \"sqft_basement\"\n* \"bathrooms\"\n* \"bedrooms\"\n* \"floors\"\n* \"grade\"\n* \"view\"\n* \"have_basement\"\n* \"waterfront\"\n* \"is_renovated\"\n* \"lat\"\n* \"long\"\n"}}