{"cell_type":{"947e978b":"code","dc7c44e7":"code","dbfb9fb7":"code","0716dbbb":"code","aef70162":"code","b1b65278":"code","ae797570":"code","706d940a":"code","ea56de6e":"code","d76abb8a":"markdown","df33374f":"markdown","10606797":"markdown","10d64c04":"markdown","dfde16dd":"markdown"},"source":{"947e978b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nimport matplotlib.pyplot as plt\nfrom plotly.graph_objs import *\nimport colorlover as cl\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport gc\ngc.enable()\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\n\n#DATASET VIEW\npath=\"\/kaggle\/input\/kaggle-survey-2019\/\"\n\ndata_files=list(os.listdir(path))\ndf_files=pd.DataFrame(data_files,columns=['File_Name'])\ndf_files['Size_in_MB']=df_files.File_Name.apply(lambda x:round(os.stat(path+x).st_size\/(1024*1024),2))\n\nwith pd.option_context('display.max_rows', None, 'display.max_columns', None):\n    display(df_files.sort_values('File_Name'))","dc7c44e7":"%%time\n#READING DATASET\nprint('READING MULTIPLE CHOICE RESPONSE...')\ndf_mchresp=pd.read_csv(path+'multiple_choice_responses.csv',low_memory=False)\n\nprint('READING OTHER TEXT RESPONSE...')\ndf_othtxtresp=pd.read_csv(path+'other_text_responses.csv')\n\nprint('READING QUESTINGS ONLY...')\ndf_quesonly=pd.read_csv(path+'questions_only.csv')\n\nprint('READING SURVEY SCHEMA...')\ndf_surshma=pd.read_csv(path+'survey_schema.csv')","dbfb9fb7":"#All FUNCTIONS\n\n#FUNCTION FOR PROVIDING FEATURE SUMMARY\ndef feature_summary(df_fa):\n    print('DataFrame shape')\n    print('rows:',df_fa.shape[0])\n    print('cols:',df_fa.shape[1])\n    col_list=['Null','Unique_Count','Data_type','Max\/Min','Mean','Std','Skewness','Sample_values']\n    df=pd.DataFrame(index=df_fa.columns,columns=col_list)\n    df['Null']=list([len(df_fa[col][df_fa[col].isnull()]) for i,col in enumerate(df_fa.columns)])\n    #df['%_Null']=list([len(df_fa[col][df_fa[col].isnull()])\/df_fa.shape[0]*100 for i,col in enumerate(df_fa.columns)])\n    df['Unique_Count']=list([len(df_fa[col].unique()) for i,col in enumerate(df_fa.columns)])\n    df['Data_type']=list([df_fa[col].dtype for i,col in enumerate(df_fa.columns)])\n    for i,col in enumerate(df_fa.columns):\n        if 'float' in str(df_fa[col].dtype) or 'int' in str(df_fa[col].dtype):\n            df.at[col,'Max\/Min']=str(round(df_fa[col].max(),2))+'\/'+str(round(df_fa[col].min(),2))\n            df.at[col,'Mean']=df_fa[col].mean()\n            df.at[col,'Std']=df_fa[col].std()\n            df.at[col,'Skewness']=df_fa[col].skew()\n        elif 'datetime64[ns]' in str(df_fa[col].dtype):\n            df.at[col,'Max\/Min']=str(df_fa[col].max())+'\/'+str(df_fa[col].min())\n        df.at[col,'Sample_values']=list(df_fa[col].unique())\n    display(df_fa.head())       \n    return(df.fillna('-'))","0716dbbb":"#FEATURE SUMMARY SURVEY SCHEMA\npd.set_option('display.max_colwidth', -1)\ndisplay(feature_summary(df_surshma))\n\n#SCHEMA TABLE TRANSPOSING\ndf_survey_schema=pd.DataFrame()\ndf_survey_schema['Ques_no']=df_surshma.columns[1:-1]\ndf_survey_schema['Sort_index']=[int(x[1:]) for x in df_survey_schema['Ques_no']]\ndf_survey_schema['Ques_text']=list(df_surshma.iloc[0,1:-1])\nfor i in range(1,10):\n    df_survey_schema[df_surshma.iloc[i,0]]=list(df_surshma.iloc[i,1:-1])\n\nprint('Survey Schema shape:',df_survey_schema.shape)\n\ndf_survey_schema.sort_values('Sort_index')\n\n#FEATURE SUMMARY MULTIPLE CHOICE RESPONSE\ndf_mchresp.replace(np.nan,'Not Applicable',inplace=True)\nwith pd.option_context('display.max_rows', None, 'display.max_columns', None):\n    display(feature_summary(df_mchresp))\n    \n#FEATURE SUMMARY OTHER TEXT RESPONSES    \ndisplay(feature_summary(df_othtxtresp))\n\n#FEATURE SUMMARY QUESTIONS ONLY\ndisplay(feature_summary(df_quesonly))\n\n\n#ALL MULTIPLE CHOICE QUESTIONS\ndf_mul_ch_resp=pd.DataFrame()\ndf_mul_ch_resp['Ques_text']=df_mchresp.iloc[0,1:].values\ndf_mul_ch_resp['Ques_no']=df_mchresp.columns[1:]\ndf_mul_ch_resp['Parent']=df_mul_ch_resp.Ques_no.apply(lambda x:x.split('_')[0] if x.split('_')[0]!=x else x)\n# df_mul_ch_resp['Child']=df_mul_ch_resp.Ques_no.apply(lambda x:x.split('_')[2] if x.split('_')[2]!=x else np.nan)\n# df_mul_ch_resp['Duration']=df_mchresp['Time from Start to Finish (seconds)'][1:].values\ndf_mul_ch_resp['Choices']='choice'\ndf_mul_ch_resp['Count_per_choice']='choice'\n\nfor i,col in enumerate(df_mchresp.columns[1:]):\n    cols=[col,'Time from Start to Finish (seconds)']\n    df_mul_ch_resp.at[i,'Choices']=list(df_mchresp[col][1:].unique())\n    df_mul_ch_resp.at[i,'Count_per_choice']=list(df_mchresp[cols][1:].groupby(col).count().reset_index()['Time from Start to Finish (seconds)'].values)\n\n    \ndf_mul_ch_resp['No_of_choices']=df_mul_ch_resp.Choices.apply(lambda x:len(x))\ndf_mul_ch_resp['Perc_of_count']=df_mul_ch_resp.Count_per_choice.apply(lambda x:list((np.array(x)*100\/np.array(x).sum()).round(2)))\n\nwith pd.option_context('display.max_rows', None, 'display.max_columns', None):\n    display(df_mul_ch_resp)\n    \n\n#CREATING DATAFRAME FOR SUB QUESTION COUNT\ndf_sub_ques=df_mul_ch_resp[['Ques_no','Parent']].groupby('Parent').count().reset_index()\ndf_sub_ques.columns=['Ques_no','Sub_ques_count']\ndisplay(df_sub_ques)\n\n#JOINING SURVEY SCHEMA WITH SUB QUESTION COUNT\ndf_survey_schema_f=pd.merge(df_survey_schema,df_sub_ques,how='left',on='Ques_no')\n\ndf_survey_schema_f.sort_values('Sort_index',inplace=True)\ndf_survey_schema_f.reset_index(inplace=True)\ndf_survey_schema_f.drop(['index','Sort_index'],axis=1,inplace=True)","aef70162":"with pd.option_context('display.max_rows', None, 'display.max_columns', None):\n    display(df_mul_ch_resp[['Ques_text','Ques_no','Parent','No_of_choices','Choices','Count_per_choice']])","b1b65278":"#UNDERSTANDING SURVEY SCHEMA\ncols=['Ques_no','Ques_text','Sub_ques_count','# of Respondents:']\ndf_survey_schema_f[cols]","ae797570":"df_survey_schema_f['# of Respondents:']=df_survey_schema_f['# of Respondents:'].astype(int)\nplt.figure(figsize=(8,10))\nsns.barplot(x=df_survey_schema_f['# of Respondents:'],y=df_survey_schema_f['Ques_no'])\nplt.xlabel('RESPONSE COUNT',color='blue')\nplt.ylabel('QUESTION',color='blue')\nplt.title('QUESTIONS WITH RESPONDENT COUNT',color='blue')\nplt.show()","706d940a":"df_survey_schema_f['Sub_ques_count']=df_survey_schema_f['Sub_ques_count'].astype(int)\nplt.figure(figsize=(8,10))\nsns.barplot(x=df_survey_schema_f['Sub_ques_count'],y=df_survey_schema_f['Ques_no'])\nplt.xlabel('SUB QUESTION COUNT',color='blue')\nplt.ylabel('QUESTION',color='blue')\nplt.title('QUESTIONS WITH SUB QUESTION COUNT',color='blue')\nplt.show()","ea56de6e":"for i in range(0,df_mul_ch_resp.shape[0]):\n    if ('TEXT' not in df_mul_ch_resp.loc[i,'Ques_no']):\n        if (df_mul_ch_resp.loc[i,'No_of_choices']<15):\n            plt.figure(figsize=(6, 4))\n        else:\n            plt.figure(figsize=(6, 10))\n        sns.barplot(x=df_mul_ch_resp.loc[i,'Count_per_choice'],y=df_mul_ch_resp.loc[i,'Choices'])\n        plt.xlabel('RESPONSE COUNT',color='blue')\n        plt.ylabel('CHOICES',color='blue')\n        plt.title(df_mul_ch_resp.loc[i,'Ques_no']+':'+df_mul_ch_resp.loc[i,'Ques_text'],color='blue')\n        plt.show()","d76abb8a":"# READING DATASET","df33374f":"# AVAILABLE DATASET","10606797":"# OVERVIEW OF ALL MULTIPLE CHOICE QUESTIONS AND CORRESPONDING SUB QUESTIONS\n- Starting with simple data visualiztion on multiple choice questions\n","10d64c04":"# ABOUT THE SURVEY AND REPORT\n\nKaggle\u2019s State of Machine Learning and Data Science 2019 survey is the most comprehensive dataset available on the state of machine learning and data science today. \n\n<br>\nKaggle\u2019s third annual survey of its community shows the worldwide reach of data science. Based on responses from 19,717 Kaggle members, the survey report focuses on the 21% that are currently employed as data scientists. Overall, we see a relatively young, highly educated community working at companies of all sizes that are still figuring out the best way to adopt machine learning technologies.\n\n<br>\nThe Kaggle community includes learners and practitioners of all levels. This analysis focuses on the professional data scientists within the community\u2014their education, employment, and the tools used to perform their work. You\u2019ll see certain regions\u2014most notably the United States and India\u2014represented at the extremes of the data.\n\n<br>\nThe content of this report focuses on respondents who are currently employed and chose their current job title as \u201cdata scientist\u201d. There are many other job titles that support data science and machine learning workflows and you can find their responses in the complete 2019 survey dataset on Kaggle.Data scientists have adopted cloud computing in their work, though not as a replacement for local developer environments. Nevertheless, many have significant budgets for cloud tools, with the United States spending beyond others. Google Cloud Platform usage grew compared to the 2018 survey, with overall usage second to AWS. Among cloud machine learning tools, use of Google Cloud AutoML nearly doubled since last year.\n\n<br>\nWhile many data scientists have advanced degrees, most continue to learn new data science skills. Blogs, Kaggle forums, Coursera, and YouTube are among the common methods of ongoing education. With many companies still new to machine learning, it\u2019s clear there is still a need for both instruction and practical application of techniques.Many survey questions were multiple choice with the ability for respondents to select all options that applied to them. For that reason, you may see visualizations where the total percentage is more than 100%. All monetary amounts captured in the report are in USD.\n","dfde16dd":"# Understanding Survey Schema"}}