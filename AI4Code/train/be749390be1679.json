{"cell_type":{"eb787fbd":"code","2cc2fb10":"code","90ca8969":"code","2c71a05e":"code","9c997129":"code","f6a60323":"code","cbbab9ab":"code","22f69b87":"code","6a6eec85":"code","ff0e0b06":"code","eb567195":"code","bd6d6d6b":"code","80198782":"markdown","8cf5d554":"markdown","1b860753":"markdown","c1426d00":"markdown","8c19f0f1":"markdown","d2d29cbe":"markdown","6f98c456":"markdown","9df32c6e":"markdown","7da71013":"markdown","bef94e44":"markdown","6e60f382":"markdown"},"source":{"eb787fbd":"import pandas as pd\nimport numpy as np\nimport pylab as py\nimport matplotlib.pyplot as plt\n%matplotlib inline","2cc2fb10":"my_data = pd.read_csv(\"..\/input\/random-linear-regression\/train.csv\")\nmy_data =my_data.dropna()\nmy_data.head()","90ca8969":"plt.scatter(my_data.x,my_data.y,edgecolor=\"red\")\nplt.title(\"Given Dataset\",size= 20)\nplt.xlabel(\"x\",size= 20)\nplt.ylabel(\"y\",size= 20)\nplt.show()","2c71a05e":"msk = np.random.rand(len(my_data)) < 0.3\ntrain = my_data[msk]\ntest = my_data[~msk]","9c997129":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\ntrain_x = np.asanyarray(train[['x']])\ntrain_y = np.asanyarray(train[[\"y\"]])\nregr.fit(train_x,train_y)","f6a60323":"print(\"The Coefficients: \",regr.coef_)\nprint(\"The Intercept is: \",regr.intercept_)","cbbab9ab":"plt.scatter(train.x,train.y)\nplt.plot(train_x,train_x*regr.coef_[0][0] + regr.intercept_[0],color ='red',alpha = 1,linewidth =2)\nplt.legend([\"Trained data\",\"Orignal data\"])\nplt.title(\"Given Dataset after Training\",size= 20)\nplt.xlabel(\"x\",size = 20)\nplt.ylabel(\"y\",size = 20)\nplt.show()","22f69b87":"from sklearn.metrics import r2_score\ntest_x = np.asanyarray(test[[\"x\"]])\ntest_y = np.asanyarray(test[[\"y\"]])\n\ny_hat = regr.predict(test_x)\n\nprint(\"The Mean Absolute Error(MAE) is: \",np.mean(np.absolute(y_hat - test_y)))\nprint(\"The Mean Squared Error(MSE) is: \",np.mean(np.absolute(y_hat - test_y)**2))\nprint(\"The R2 Score(R2) is: \",r2_score(y_hat,test_y))","6a6eec85":"test_data = pd.read_csv(\"..\/input\/random-linear-regression\/test.csv\")\ntest_data.head()","ff0e0b06":"test_data_x = test_data[[\"x\"]]","eb567195":"test_data_y = test_data[[\"y\"]]\npred = regr.predict(test_data_x)","bd6d6d6b":"print(\"The Mean Absolute Error(MAE) is: \",np.mean(np.absolute(pred - test_data_y)))\nprint(\"The Mean Squared Error(MSE) is: \",np.mean(np.absolute(pred - test_data_y)**2))\nprint(\"The R2 Score(R2) is: \",r2_score(pred,test_data_y))","80198782":"# Predicting the outcomes","8cf5d554":"# Further Evaluation of the predictions done","1b860753":"# Splitting data Randomly into training and testing sets","c1426d00":"# Seeing the trend of untrained data","8c19f0f1":"# Importing data from train and cleaning it","d2d29cbe":"# **Importing Important Libraries**","6f98c456":"# Printing the Coeffcients and intercepts","9df32c6e":"# Seeing how well trained and orignal data fits","7da71013":"# Importing the testing data again","bef94e44":"# Evaluation of the Model","6e60f382":"# Training the Model"}}