{"cell_type":{"a4d28905":"code","582b6662":"code","86f936e3":"code","0295e16c":"code","c26d6cb4":"code","2fd0cc2b":"code","25f36b01":"code","e7bd4ce2":"code","7e7c88a7":"code","c7d9b205":"code","22590e8c":"code","f70e3a2b":"code","76ebec31":"markdown","0b131446":"markdown","898a34ec":"markdown","eb25a406":"markdown","5b207088":"markdown","9144bf74":"markdown"},"source":{"a4d28905":"import pandas as pd \nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib as plt","582b6662":"def load_persona():\n    df=pd.read_csv(\"..\/input\/persona-data\/persona.csv\")\n    return df\ndf=load_persona()\ndf","86f936e3":"def check_df(dataframe, head=5, tail=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(tail))\n\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ncheck_df(df)\n","0295e16c":"df.groupby([\"COUNTRY\",\"SOURCE\",\"SEX\",\"AGE\"]).agg({\"PRICE\":\"mean\"})","c26d6cb4":"a=df.groupby([\"COUNTRY\",\"SOURCE\",\"SEX\",\"AGE\"]).agg({\"PRICE\":\"mean\"})\na.sort_values(\"PRICE\", ascending=False)\nagg_df=a.sort_values(\"PRICE\", ascending=False)","2fd0cc2b":"agg_df.reset_index()\nagg_df=agg_df.reset_index()\nagg_df.columns","25f36b01":"bins_= [0, 18, 23, 30, 40, 70]\nlabels_= ['0_18', '19_23', '24_30', '31_40', '41_70']\n\nagg_df[\"AGE_CAT\"]= pd.cut(agg_df[\"AGE\"],bins=bins_, labels=labels_ )\nagg_df.head()","e7bd4ce2":"agg_df[\"customer_level_based\"]=[str(row[0].upper()) + \"_\" + str(row[1].upper()) + \"_\" + str(row[2].upper()) + \"_\" + str(row[5].upper()) for row in agg_df.values ]","7e7c88a7":"agg_df= agg_df.groupby([\"customer_level_based\"]).agg({\"PRICE\":\"mean\"}).sort_values(\"PRICE\", ascending=False).reset_index()\nagg_df.head(20)","c7d9b205":"agg_df[\"SEGMENT\"]=pd.qcut(agg_df[\"PRICE\"], 4, labels=[\"D\",\"C\",\"B\",\"A\"])\nagg_df.head()\nagg_df.groupby([\"SEGMENT\"]).agg({\"PRICE\":[\"mean\",\"max\",\"sum\"]})","22590e8c":"def new(agg_df, new_user):\n    print(agg_df[agg_df[\"customer_level_based\"]== new_user])\n    \nnew(agg_df,\"TUR_ANDROID_FEMALE_31_40\")","f70e3a2b":"new(agg_df,\"FRA_IOS_FEMALE_31_40\")","76ebec31":"#### Average earnings in COUNTRY, SOURCE, SEX, AGE breakdown","0b131446":"### \nLet's segment customers","898a34ec":"##### \nLet's convert \"AGE\" variable to categorical variable","eb25a406":"##### \nLet's categorize new customers by segment and estimate how much revenue they can bring","5b207088":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9144bf74":"### ABOUT THE DATASET\nPersona.csv dataset includes prices of products sold by an international game company and\nSome demographic information of users purchasing these products\ncontains.\nThe data set consists of records created in each sales transaction.\nThis means that the table is not deduplicated.\nIn other words, a user with certain demographic characteristics may have made more than one purchase."}}