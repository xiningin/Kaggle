{"cell_type":{"bc585924":"code","15b265d9":"code","38dad2f1":"code","d288b533":"code","706a9c10":"code","141a5ce6":"code","d72d8cd1":"code","5e207d6a":"code","0fbba90b":"code","eefc06dc":"code","c00c88c6":"code","23101db8":"code","de9c71ef":"code","af0452f1":"code","d861c346":"code","ec853209":"code","2b83f431":"code","1752daf9":"code","64f2b0c3":"code","a51baf4f":"code","a3beb315":"code","b20e06bd":"markdown","f124854c":"markdown","0ef48aaf":"markdown","913ade16":"markdown","6907243e":"markdown","7da37539":"markdown","a41e1d0b":"markdown","e8cc6743":"markdown"},"source":{"bc585924":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import preprocessing\nimport tensorflow as tf\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LinearRegression\nimport xgboost\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import train_test_split\nfrom hyperopt import STATUS_OK, Trials, fmin, hp, tpe\nfrom sklearn.metrics import mean_squared_log_error\nimport seaborn as sns","15b265d9":"train = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/train.csv\")","38dad2f1":"test = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/test.csv\")","d288b533":"sample_sub = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/sample_submission.csv\")","706a9c10":"train.head()","141a5ce6":"test.head()","d72d8cd1":"all_data = pd.concat([train,test])","5e207d6a":"categoryA_enc = preprocessing.LabelEncoder()\ncategoryA_enc.fit(all_data[\"categoryA\"])\nall_data\ntrain[\"categoryA\"] = categoryA_enc.transform(train[\"categoryA\"])\ntest[\"categoryA\"] = categoryA_enc.transform(test[\"categoryA\"])","0fbba90b":"categoryB_enc = preprocessing.LabelEncoder()\ncategoryB_enc.fit(all_data[\"categoryB\"])\ntrain[\"categoryB\"] = categoryB_enc.transform(train[\"categoryB\"])\ntest[\"categoryB\"] = categoryB_enc.transform(test[\"categoryB\"])","eefc06dc":"categoryC_enc = preprocessing.LabelEncoder()\ncategoryC_enc.fit(all_data[\"categoryC\"])\ntrain[\"categoryC\"] = categoryC_enc.transform(train[\"categoryC\"])\ntest[\"categoryC\"] = categoryC_enc.transform(test[\"categoryC\"])","c00c88c6":"categoryD_enc = preprocessing.LabelEncoder()\ncategoryD_enc.fit(all_data[\"categoryD\"])\ntrain[\"categoryD\"] = categoryD_enc.transform(train[\"categoryD\"])\ntest[\"categoryD\"] = categoryD_enc.transform(test[\"categoryD\"])","23101db8":"categoryE_enc = preprocessing.LabelEncoder()\ncategoryE_enc.fit(all_data[\"categoryE\"])\ntrain[\"categoryE\"] = categoryE_enc.transform(train[\"categoryE\"])\ntest[\"categoryE\"] = categoryE_enc.transform(test[\"categoryE\"])","de9c71ef":"categoryF_enc = preprocessing.LabelEncoder()\ncategoryF_enc.fit(all_data[\"categoryF\"])\ntrain[\"categoryF\"] = categoryF_enc.transform(train[\"categoryF\"])\ntest[\"categoryF\"] = categoryF_enc.transform(test[\"categoryF\"])","af0452f1":"category_unit_enc = preprocessing.LabelEncoder()\ncategory_unit_enc.fit(all_data[\"unit\"])\ntrain[\"unit\"] = category_unit_enc.transform(train[\"unit\"])\ntest[\"unit\"] = category_unit_enc.transform(test[\"unit\"])","d861c346":"train.describe()","ec853209":"sns.pairplot(train)\nplt.show()","2b83f431":"best_model = xgboost.XGBRegressor(colsample_bytree=0.4,\n                 gamma=0,                 \n                 learning_rate=0.07,\n                 max_depth=3,\n                 min_child_weight=1.5,\n                 n_estimators=10000,                                                                    \n                 reg_alpha=0.75,\n                 reg_lambda=0.45,\n                 subsample=0.6,\n                 seed=42,\n                 eval_metric=mean_squared_log_error) ","1752daf9":"best_model.fit(train.iloc[:,1:-1],train[\"result\"])","64f2b0c3":"res = best_model.predict(test.iloc[:,1:])","a51baf4f":"sample_sub[\"result\"] = res","a3beb315":"sample_sub.to_csv('submission.csv',index=False)","b20e06bd":"<div style=\"width:100%;text-align: center;\"> <img align=middle src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBw0NDQ0NDQ0NDQ0NDQ0NDQ4NDQ8NDQ0NFREWFhURFRUYHSggGBolGxUVITEhJSkrLi4uFx81ODMsQygtOi8BCgoKDg0OFRAPFSsdHx0rLS0rKy0tLSsrLS0tLS0rLS0tKy0tKystLS0rLS0tLS0rLSsrKy0vLS0rLSsrKysrN\/\/AABEIALcBEwMBIgACEQEDEQH\/xAAcAAADAQEBAQEBAAAAAAAAAAABAgMABAUGBwj\/xABDEAACAQQAAgYFCQYCCwAAAAAAAQIDBBESBSEGEyIxQVFhcYGRoRQjMlJicrHR8AczQnOSwUNTJDREVIOEhZOi4fH\/xAAYAQEBAQEBAAAAAAAAAAAAAAAAAQIDBf\/EACQRAQEBAAEEAQMFAAAAAAAAAAARAQISITFBUQMTYSIygaGx\/9oADAMBAAIRAxEAPwD9PQyJpjJnaPOUQyETChFUQRMhyIHCJkORAwRMhyIHyYXIciBjADkKIRQ5AIRcmyIHMLk2SQMAGQZEBYrNkDEGYrC2I2WIzFZmxWxAGKwsRlRmIwsRiIDEkM2I2AMmFyYqOpMZMmmMmI0omMmTTCmIqiGJpjZAYImQ5AcwuQ5AYORMhIHybIphFPkORDCB8hyJkOQGybIuTZAbIMgyDIByBsDYrEBbFZhWwgsVszYjZRmxGwtitiIDYrZmxJMsQJMSTC2I2INkwmTFiOpMZMkmMmVpVMbJJMZMkFExskshTEVTIRNgpiB8hyJkOQHybImQ5AfIciZNkQUyHJPJsiKpk2RMm2JA+TZE2NsWB8gyLsDYkDtitiuQMiAtitgbFbLEHIGxXIVsQFsVsDYrZYjNiSZmxGwjNiSZmxGxEbJhMmLB1JjJkVIZSLFWTGTIpjKRIqqYyZFSGUhBXIcklIKkIqmQ7E8hyIKbB2J5NkQV2NsTybJIK7B2JZNkqq5NknsbYQUybJPYGRBTYGwmQZAfYDkJkDkSIZyA2I2ByLAzYrYrkK5CIZsRsDYjkWBmybYHIRyEQXIRsDkTcixDZCS2MWI6VIZMipDKRY0spDKRFSGTJFWTCmSUgqQgtkOSKkMpBVNg7E9g5IKbB2JZDkQV2MpEsh2EFdjZJbB2Cq7G2JbG2ArsDYnsDYCuQORPYGwHkU+jNvt8rnXrfLuvlUU05fQ6xuMPLXXCwey5CNgcghtgNiOQrkWB3IVyEchXIRDOQrkK5CORYhnIRyEchHIsQzkI5CuQjkWIbYJHYwg61IZSOdSHUixpdSGUiCkNsQXUgqRFSCpAXUg7EdgqQirbB2I7B2JFW2DsS2NkQV2Dklk2wgtk2SWxthFVybJPYKbED7AyLzCoPyfubEByDYzg\/wD7y\/Eyh6V70IF354ys+XjgDkePZ9DrOn1V4qjfEOtbrVFP5ypL+NS+y1jl5NHt9S\/1zJkNyJOQrkVdCXk\/6ZEnRZUK5COQZwkvAlLJUM5COQrYjkWIZyEchXIm5FiHcicpCuQjkWB9gEtjCI61IdSOZSGUixp0qQ2xzqQVMkHQpDKRzqQykILqQykc6kNsSKupB2IKQVIkF9g7ENg7iKtuFSIqQyl5fF4ivWxBZMZfp+Bzxk5coJPHfUqcqcfux8SU7huWlKnK5q\/XqvSjH1REHoQ5\/R7Xq7veLOtFPDeX9WnDeXxeDnqWk0try5lj\/Jt\/mqa9Ge9nnXXSSNunG1t6a+1KWZP2iXwPcUa8lmNCUV9avXVJe6CIVcx\/e3FjT9HV1K798pHw3EulN\/UfOHLyi2edG7uaj7VGq36Ms3n099p1P0b5fbR7+IUo\/dtaaRy1uO2a5LisF\/ylOR+f1qM5vWVOrDPoy\/cXo9C7iqtoKrz7t6UoL3sfbzPO\/wCGa9azXD\/lzvlxhfK6letRqQcKUo\/J9Oy+pa5LEYe1H1lG6t5d3EbWX3rOkvwPyp9GK9NynqushdVLdxTe7cYOTkvBpLkanbTzrt2vJtJjPp32u6\/XY4f0Ljh036YOk\/fFjv5Uv9n61edreKf\/AI1Efk7tbuP+HUx55WCtvdcQotNKpFeeeXwH2vydT9MnfRj+9hcUP59q3H+umxqcoVVmnKnV\/lVE3\/TLD+J8pw3pdfwwqnbj9rme5b8VtLrHXUI06n+ZSeks+wzvDcLjsqUV6n5STg\/ic1Wi1\/75HZKhVUc0KqrQ\/wAussvHrOSncRk3DDt6njTqdulL1eRMNxyTyiTkd1WHPElpLw57U5ep+BxVqTX5G8ZiTkI5AkyUpFiKbGI7GLB1KQVIgpDKQiuhTHUjmUhlIQdCkHYgphUyQdCkMpHOpBUhFdCkHYhsbYkF9zbkHMVzEHUp+HvGU8vHdFd7\/I5NuaXn8RnU7SXwEHRVnKbVOPZj4vxZ0xqxoR1ppJvvl3yZwXVRwxJe0tb1I1ljxJFcd9QnVy5Tk\/aeTLhNPPam17e4+jnYVYc12o+RN8Po1lrKXVv08sms5JHm0eBWkkvn5r7vez2+HcGscNJ1pJcm3NpZ8vSc9CXyWapQoqUX31O\/kfO9MulToPSj2VjHInffa5H3NO3srf6MUn5RlJyfxPmukXTOFo+xZKb8HPL\/AAPhOH9O3Tl87mSz35PsLf8AaPwmtT0uaaz9ZU4yaMzM\/P8ALU34jx7f9oShRozVKPXRvLmvKGeWtV1OyvFY3+B9lwDpVRu0pTtIxb72oxl+Kyfn\/D+I8HpcRlfyvK8lUr3blQlGq4qlLKg8ufayteTXLPoPe4j+0vh0Fi0oRXlLXn7idt85\/azfT9DrQjUj83NJP+GVKFSHti8fifNcU4HNZlCyoVn4u1qSoSfrpt49x+eVf2lVk245S8vM9jgPTatfT6tQnTrQSlmL2jJe4ccm9tTc2d8XvKFOH07a5oPxym0Sozp5SjOSbPrqF5fVXipGHV\/xOeO4r1Vll4pRlL0LxOnV8sdLh4ddukl857Gehca145fKS7pIjPg0ZvZZj5I56+bfk3lE7b4XvitKs383U713MWT\/AIX3rufmSt5dZma7hI1NpNeRYiVeJxzZ1znnPoOOqaxC7GJZMEdCmMpnOpDKQV0KQykc6kMpAX2CpENgqYHRsFTIbG2A6dg7HOpB2IqzkK5d\/pJ7CyZRScm4rH04Pl6UG6k6kY1afKpD6UfM59v14hVTHPm4+LXegPQjVhd0dc9XWiu6XJNnk0L+pa1Na0HhPvXcWTku3TSqx8UvpL2FJVre4WkqnU1PKp3ZIPpuFcVoVUtaiT8pcj0bjh9KvHEoxkvOLw17T87r8Pvrb5ylSjcU1zzS7XL1Itwzp\/Soy6u5pTpNcnlOLXvMbw3zx1vOXy+luuAThFqhXqRX1ai25ehnw3HehF3X2UK9Fzf8NVuGfU2foFn0v4fVSauEvQ5YO6PEbGty6+lL0OUTPVyztuL0561\/OnFehnFbVtVbbl4SjOLi\/bk8eXBLuKz1Ocd+soy\/uf0pxfh8qtKUKFvZXMWuUa13Upr3Rpv8Ufn76J1adfatwCrOl\/FK1v4tR82k5tyXsRjPp8N8umc+T8lqWNbkpUqqwk8aSff3eBe24ZcSwlSljzaaP6C4ZwWg40Xb0VShWcJU4zjUVVUIPtVG28qMsxSXpXny+glwWlOOk49n7PZ+PeZ6OGb306+W+n84WvR2vNpKm5t+Cep+mdEOj3EbeGY0ra2275ScXN\/3PvKPRiwpPZ0k39qUvzOyTsqS59VFLza5HTOXHP24xubvnXkWvBKs+dxdbr6tNap+09KlY0aS7Mf7\/E4OIdMeHW+c1Yya8I4Z8pxP9pHWNwtKMpyfJYi2\/gXM58vSfpx9TxbiSoxeOR8dO7qXdXVc1nwI0eD8Uv31t3JWdDvcqz1ePQj0KXEbSzXyfh1Od5cvk6iWVk6ZmZ476zvd6NeSt6Spp4bXPzOO3liMn5+LOaUOrl1t9UU68ucbem9mn6TVaknzq9jP0aS+lj0lzGVHU5N+Bz1Zi1Kvn4dyOedQ0HczHO5mCOlSGUjmUhlIK6FIZTOdSCpAdCkMpHPsFSA6FIO5z7B2ILqY25z7B2A6NzORDY2wFWxNvFZT81\/dC7AbAbPPOGn9am8P3DSqb9mao115VF1dT2Mi2By9vrWQGUY0ntSr3thL1OtQ+HgdErm8rLWpT4XxeH2tadfHt8TmjUcfouUfuzaXufIWajLnOFKb85UtZf1QEWkq8P4a38\/wm8s5ePVSlKn7DjuOCcGfdc8Rtn5uG8V8D0qdRx5QlWgvKFZ1I+6XMdXVRf4s\/bHPwaBXkUOAwz\/onSKHojXU6T\/E9Gjwvj0P3N\/bV14aXK5+8erOM\/3lOzq\/zbeUX74o5Z2do+bs7J\/y7u4pP3BaNlV6R03SVCNOWOtpwzWprEVLtQw3ySce70cj0Xe9K3307aP\/ABqOfxPDocPtswbtuUtmkr2pHGeaTz3YXLmdqtLdd1u1\/wBQRN4rXXKn0gn+9VL\/AL9NL8TmqcFvKn+s3dvTXivlEWxXbW\/+7wf3r2UzKlQXdb2i+85VCsjT4Vwuk+243U\/JTzHPsPQo306axaW9raR+vpmfvOSNZrlFwgvKjQjH4sWVRvvcn96X9kPPkp7in1z2uri4un9SGYUyka8oR0oqnZ0339Utq0vacrqfrvEdQItCcaeerWrffVqdutL1eRN1MZxnL75SeZv8iMqhNzKKyqEpTEchHIopsYjsEIupDKRzqQykRXQpBUiCkFSA6Ng7EFIOxBfYOxDYOxRbYOxHY2wF9g7ENg7AW2NsR2NsBbY2SWxtgqhiewNgKNgyJsDYCm78372brH5v3ktgbBFes\/WI\/kbf9Yj+R5tpaSg1UlWnOctusg\/oLnywdbkRVus\/XL8gda\/N+8i5Acioq6n67xXMk5CuQFXMRzJuQrkA7kK5E3IVyAo5COQjkK5FD7GJbGKi6kMpGMZUykHYxiBtg7GMUFSDsYwB2DsYwUdjbGMBtjbGMAdjbAMBtjbGMBtgbGMANgOQTADYXYxggOQHIBgA5CuRjBSuQrkAwCuQrkYxUByEcjGAXYxjFR\/\/2Q==\" alt=\"Heart beating\" style=\"height:500px;margin-top:3rem;\"> <\/div>","f124854c":"# Convert strings to ints","0ef48aaf":"# <center> Water quality prediction using XGBoost Regression<\/center>\n","913ade16":"# Import data","6907243e":"# Predict on test data","7da37539":"# Defining and training model","a41e1d0b":"# Adding both train and test data to one df","e8cc6743":"# Take an initial look at the data"}}