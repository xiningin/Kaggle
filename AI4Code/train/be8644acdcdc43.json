{"cell_type":{"ec4ae6eb":"code","996cd26a":"code","b60a6539":"code","87666410":"code","6a4bd6f5":"code","7b2f524c":"code","da755ed3":"code","46b5ed48":"code","385e0a70":"code","40bdb71a":"code","70446c1d":"code","fadd30b4":"code","99207ffe":"code","d3f93919":"code","5025431d":"code","b43cff40":"code","2c48b942":"code","d35653d1":"code","1a230b42":"code","4df0e3d0":"code","9eb0e104":"code","6f5aed81":"code","e3ea5821":"markdown","31571269":"markdown","d01431ed":"markdown","8c81c2ea":"markdown","c6872625":"markdown","e0e0c1b1":"markdown","318e2560":"markdown","f70e6de3":"markdown","3adbb63e":"markdown","6ec7b155":"markdown","a3ff2643":"markdown","bc3e6cc4":"markdown"},"source":{"ec4ae6eb":"# Library for data analysis and data structure with high performance and also easy to use.\nimport pandas as pd \n\n# Seaborn library for data visualization, for creating sophisticated graphics\nimport seaborn as sns \n\n# And we will use seaborn so that every time we print the graphs we can have the grid lines\n# and a white background for a better understanding of the information that will be presented.\nsns.set(style = 'whitegrid') \n\n# To ignore possible warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# And in addition we will also call the matplotlib set of functions, pyplot allows you to create figures and graphs\nimport matplotlib.pyplot as plt \n\n# And lastly, if we want to visualize here on the jupyter notebook the graphics that we are going to create we will need this method\n%matplotlib inline ","996cd26a":"# Loading the dataset\ndf = pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')","b60a6539":"# Viewing the first 5 lines of the dataset\ndf.head()","87666410":"# Selecting the dataset columns\ndf.columns","6a4bd6f5":"# Selecting the columns we will use\ndf = df[['Company Name', 'Location', 'Datum', 'Detail', 'Status Rocket', ' Rocket', 'Status Mission']]\n\n# Renaming the 'Rocket' column to 'Cost_Mission'\ndf.rename(columns = {\n    ' Rocket':'Cost_Mission',\n    'Datum':'Date_Time'\n}, inplace = True)","7b2f524c":"# Add the 'Year' and 'Country' columns\n\n# Add the 'Year' column\ndf['Year'] = df.Date_Time.str.split(' ').str[3]\n\n# Add the 'Country' column\ndf['Country'] = df.Location.str.split(',').str[-1]\n\n# Correcting the names of some countries that are wrong\nreplace_countries = {\n    'Russia' : 'Russian Federation',\n    \"Shahrud Missile Test Site\": \"Iran\",\n    'New Mexico' : 'USA',\n    \"Yellow Sea\": 'China',\n    \"Barents Sea\": 'Russian Federation',\n    \"Pacific Missile Range Facility\": 'USA',\n    \"Gran Canaria\": 'USA'\n}\ndf['Country'] = df['Country'].replace(replace_countries)\n\n# Add the 'Month' column\ndf['Month'] = df.Date_Time.str.split(' ').str[1]","da755ed3":"# Viewing data types\ndf.dtypes","46b5ed48":"# Replacing the characters in the 'Cost_Mission' column\ndf.Cost_Mission = df.Cost_Mission.str.replace(',', '')\n\n# Change the data type of the 'Cost_Mission' column\ndf.Cost_Mission = df.Cost_Mission.astype(float)\n\n# Change the format of the 'Date_Time' column\ndf.Date_Time = pd.to_datetime(df['Date_Time']).apply(lambda x: x.strftime(\"%Y-%m-%d %H:%M:%S\"))","385e0a70":"# Viewing the first 3 lines of the dataset\ndf.head(3)","40bdb71a":"# Replacing null values by 0\ndf.fillna(0, inplace = True)","70446c1d":"# Viewing the first 3 lines of the dataset\ndf.head(3)","fadd30b4":"# Temos tr\u00eas tipos de status: 'Success', 'Failure', 'Prelaunch Failure' e 'Partial Failure'\n\n# Visualizando a quantidade de miss\u00f5es por status\npd.DataFrame(df['Status Mission'].value_counts())","99207ffe":"# Setting the size of the chart figure\nfig = plt.subplots(figsize = (14, 7))\n\n# Creating the chart\ng = sns.barplot(\n            x = df['Status Mission'].value_counts().index, \n            y = df['Status Mission'].value_counts().values, \n            data = df,\n            palette = 'rocket')\n\n# Chart title\nplt.title('Total Missions by Status Mission', fontdict = {'size':18})\n\n# Axis subtitles (x & y)\nplt.xlabel('Status Mission', fontdict = {'size':16})\nplt.ylabel('Amount of Missions', fontdict = {'size':16})\n\n# Add labels to chart bars\nfor x in g.patches:\n    g.annotate((int(x.get_height())), \n    (x.get_x()+0.35, \n    x.get_height()+20))","d3f93919":"# Distribution of Success Missions based on Launch Year\n\n# Filtering successful missions\nmission_Success = df[df['Status Mission'] == 'Success']\n\n# Setting the chart size\nfig, x = plt.subplots(figsize=(20, 6.5))\ng = sns.histplot(\n    x = mission_Success.Year.sort_values(), \n    data = mission_Success, \n    color='#31a354', \n    kde = True\n)\n\n# Chart title\ng.set_title('Distribution of Success Missions based on Launch Year', fontdict = {'size':18})\n\n# Customizing the axes (x and y)\ng.xaxis.set_label_text('Year', fontdict = {'size':15})\ng.yaxis.set_label_text('Amount of Missions', fontdict = {'size':15})\n\n# Customizing the chart labels\nlabels = mission_Success.Year.sort_values().unique()\ng.set_xticklabels(labels, rotation = 45, ha = 'center', fontdict = {'size':12})\nplt.show();","5025431d":"# Creating the chart\ng = sns.catplot(\n            x = mission_Success['Company Name'].value_counts().values,\n            y = mission_Success['Company Name'].value_counts().index,\n            data = mission_Success,\n            kind = 'bar',\n            aspect = 1.5,\n            height = 8,\n            palette = 'YlGnBu_r'\n)\n\n# Chart title\nplt.title('Amount of Successful Launches per Company', fontdict = {'size':18})\n\n# Define the axes (x & y)\nplt.xlabel('Amount per Launch', fontdict = {'size':16})\nplt.ylabel('Company Name', fontdict = {'size':16})\n\n# Plotting the chart\nplt.show()","b43cff40":"# Create the chart\ng = sns.catplot(x = mission_Success.Country.value_counts().index,\n            y = mission_Success.Country.value_counts().values,\n            data = mission_Success,\n            kind = 'bar',\n            aspect = 1.5,\n            height = 8,\n            palette = 'YlGn_r'\n)\n\n# Chart title\nplt.title('Amount of Successful Launches per Country', fontdict = {'size':18})\n\n# Definindo os eixos (x & y)\nplt.xlabel('Amount per Launches', fontdict = {'size':16})\nplt.ylabel('Country', fontdict = {'size':16})\n\n# Customizing the axis labels\ng.set_xticklabels(rotation = 45, ha = 'right')\n\nfor i in g.ax.patches:\n    g.ax.annotate((int(i.get_height())), \n    (i.get_x()+0.16, \n    i.get_height()+20))\n\n# Plotting the chart\nplt.show()","2c48b942":"# Average cost per mission\n\n# Defining the variable to make the pivot\nvar = pd.DataFrame()\n\n# Selecting only the cost of missions greater than zero\ndf_Cost_Mission = df[df['Cost_Mission'] > 0]\n\n# Selecting the data and applying the average\nfor b in list(df_Cost_Mission.Month.unique()):\n    for v in list(df_Cost_Mission['Status Mission'].unique()):\n        z = df_Cost_Mission[(df_Cost_Mission.Month == b) & (df_Cost_Mission['Status Mission'] == v)]['Cost_Mission'].mean()\n        var = var.append(pd.DataFrame({'Month':b , 'Status Mission':v , 'avgCost_Mission':z}, index=[0]))\n\n# Resetting the index of our new dataset  \nvar = var.reset_index(drop = True)\n\n# Filtering values and formats\nvar['avgCost_Mission'].fillna(0,inplace=True)\nvar['avgCost_Mission'].isnull().value_counts()\nvar['avgCost_Mission'] = var['avgCost_Mission'].astype(int)\n\n# Viewing the first 5 lines of the new dataset\npd.DataFrame(var.head())","d35653d1":"# Selecting the columns of our new dataset\ntri = var.pivot('Month', 'Status Mission', 'avgCost_Mission')\n\n# Creating the figure for the chart\nfig, ax = plt.subplots(figsize=(15, 12.5))\n\n# Creating the chart\nsns.heatmap(tri, linewidths=1, cmap='YlGnBu', annot=True, ax=ax, fmt='d')\n\n# Defining the chart title\nax.set_title('Heatmap - Average cost of a mission per month, as well as the mission status', fontdict={'size':20})\n\n# Add title on the x and y axes\nax.xaxis.set_label_text('Status Miss\u00e3o',fontdict= {'size':20})\nax.yaxis.set_label_text('Month',fontdict= {'size':20})\n\n# Plot the chart\nplt.show()","1a230b42":"# Chart size\nfig = plt.subplots(figsize = (14, 5))\n\n# Creating the chart\ng = sns.barplot(\n    order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    x = df.Month.value_counts().index,\n    y = df.Month.value_counts().values,\n    data = df,\n    color = '#1c9099'\n)\n\n# Chart title\nplt.title('Total Cost of Missions per Month', fontdict = {'size':18})\n\n# Axis labels (x & y)\nplt.xlabel('Month', fontdict = {'size':16})\nplt.ylabel('Amount of Missions per Month', fontdict = {'size':16})\n\n# Plot\nplt.show()","4df0e3d0":"# Group the columns \ncost_mission_company = df.groupby(['Company Name'])['Cost_Mission'].sum().reset_index()\n\n# Mission cost > zero\ncost_mission_company = cost_mission_company[cost_mission_company['Cost_Mission'] > 0]\n\n# Create the chart\ng = sns.catplot(\n    x = 'Company Name',\n    y = 'Cost_Mission',\n    data = cost_mission_company,\n    kind = 'bar',\n    aspect = 2.2\n)\n\n# Graphic title\ng.ax.set_title('Mission cost per Company', fontdict = {'size':18})\n\n# Customizing the axes (x and y)\nplt.xlabel('Company Name', fontdict = {'size':16})\nplt.ylabel('Cost Mission', fontdict = {'size':16})\n\n# Customizing the x-axis labels\ng.set_xticklabels(rotation = 45, ha = 'right');","9eb0e104":"# Select the two countries, 'Russia' and 'USA'\nrussia_usa = df[df.Country.isin([' Russia', ' USA'])]\n\n# Select all the successful missions\nrussia_usa_success = russia_usa[russia_usa['Status Mission'] == 'Success']\n\n# Creating the graph figure\nfig = plt.subplots(figsize = (18, 5))\n\n# Creating the chart\ng = sns.histplot(\n    russia_usa_success,\n    x = 'Year', hue = 'Country',\n    palette = 'BuGn',\n    multiple = 'stack',\n    kde = True\n);\n\n# Chart title\nplt.title('Russia vs USA - Successful Missions per Year', fontdict = {'size':18})\n\n# Eixos x & y\nplt.xlabel('Year', fontdict = {'size':16})\nplt.ylabel('Amount of Successful Missions', fontdict = {'size':16})\n\n# Customize the x-axis labels\nlabels = russia_usa_success.Year.sort_values().unique()\ng.set_xticklabels(labels, rotation = 45)\n\n# Print the chart\nplt.show()","6f5aed81":"# Select all missions that were unsuccessful\nrussia_usa_failure = russia_usa[russia_usa['Status Mission'] != 'Success']\n\n# Create the graph figure\nfig = plt.subplots(figsize = (18, 5))\n\n# Create the chart\ng = sns.histplot(\n    russia_usa_failure,\n    x = 'Year', hue = 'Country',\n    palette = 'YlOrRd',\n    multiple = 'stack',\n    kde = True\n);\n\n# Chart title\nplt.title('Russia vs USA - Unsuccessful Missions per Year', fontdict = {'size':18})\n\n# X & y axes\nplt.xlabel('Year', fontdict = {'size':16})\nplt.ylabel('Amount of Unsuccessful Missions', fontdict = {'size':16})\n\n# Customize the x-axis labels\nlabels = russia_usa_success.Year.sort_values().unique()\ng.set_xticklabels(labels, rotation = 45)\n\n# Print the chart\nplt.show()","e3ea5821":"# Which countries were most successful in their launches?","31571269":"# What is the Total Cost of Missions per Month?","d01431ed":"# Which companies were most successful in their launches?\n","8c81c2ea":"# Filtered and organized data, now let's analyze our dataset\n##### * Statistics\n##### * Data Visualization\n\n\n# Since 1957 how many Missions have been carried out until today (2020), presenting by mission status?","c6872625":"# Comparing Russia with the USA over the years?","e0e0c1b1":"# Which company has spent the most on its missions?","318e2560":"# <font color='pink'>Loading the Data<\/font>\n\n#### To upload a file in csv format we can call the pandas library which will also help us in the course of our analysis\n\n\n#### This done we will load the file, remembering that the file has to be in the same directory where your jupyter notebook is\n#### If it is in another directory just enter the full path.","f70e6de3":"# What is the Average Cost of a Mission per Month, as well as the Status of the Mission?","3adbb63e":"# End...","6ec7b155":"# <font color='pink'>Data organization and Exploratory Analysis<\/font>\n\n##### * Selecting Columns that we will not use\n##### * Renaming columns\n##### * Adding new columns\n##### * Identifying null values and replacing","a3ff2643":"# What is the Distribution of Success Missions with by Year of Launch?","bc3e6cc4":"# <font color='pink' size='6'>All Space Missions from 1957<\/font>\n\n## Author: Adilson Anselmo\n* [Linkedin](https:\/\/www.linkedin.com\/in\/adilsonanselmo\/)\n* [Kaggle](https:\/\/www.kaggle.com\/adilsonanselmo)\n* [Medium](https:\/\/medium.com\/@adilsonselmo)\n\n### Hi there, what do you think of learning a little more with the data that we have at our disposal in Kaggle, I am fascinated by astrophysics I decided to get data from all missions into space since 1957. \n### So let's see and learn a little more about how to do exploratory data analysis with Python huhuh :) and already collect insights\n### Dataset Link: https:\/\/www.kaggle.com\/agirlcoding\/all-space-missions-from-1957 and let's go.\n\n\n# Data Collection\n#### The data that we will use is in the link above, what you will do is download and unzip, when downloading it you can choose the csv format.\n\n## Libraries"}}