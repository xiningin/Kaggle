{"cell_type":{"b37c3435":"code","1d24474b":"code","e135b9aa":"code","6feda99e":"code","f583aa4e":"code","387990ff":"code","87361f2e":"code","97541903":"code","33e8de61":"code","da25f9f5":"code","13fa11b3":"markdown","7e8b4460":"markdown","de9eced7":"markdown"},"source":{"b37c3435":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","1d24474b":"housing = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\nhousing.info()","e135b9aa":"housing.describe()","6feda99e":"housing = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\nhousing['IsResidential']=housing['MSZoning'].isin(['RH','RL','RP','RM'])\nhousing['HasFireplaces'] = (housing['FireplaceQu'].notnull()) & (housing['Fireplaces'] != 0)\nhousing['HasPool'] = (housing['PoolQC'].notnull()) & (housing['PoolArea'] != 0)\nhousing['HasGarage'] = (housing['GarageQual'].notnull()) & (housing['GarageArea'] != 0)\nhousing['HasBasement'] = (housing['BsmtQual'].notnull()) & (housing['BsmtCond'].notnull())\nhousing['HasSecondFloor'] = housing['2ndFlrSF'] != 0\nhousing['HasMasonryVeneer'] = (housing['MasVnrType'].notnull()) & (housing['MasVnrType'] != 'None') & (housing['MasVnrArea'] != 0)\nhousing['IsBuiltOrRemodeledRecently'] = housing['YrSold'] - housing['YearRemodAdd'] <= 15\nhousing['IsWellConserved'] = ((housing['YrSold'] - housing['YearRemodAdd'] > 20) & (housing['OverallCond'] >= 5))\n\n\n\nhousing['HasFireplaces'].corr(housing['SalePrice'])\n#np.corrcoef(IsResidential, SalePrice)\n#housing.describe()\n#no_outliers = housing.copy()\n#no_outliers = no_outliers[no_outliers['MSZoning'] == 'RL']\n#no_outliers = no_outliers[no_outliers['SalePrice'] > 20000]\n#no_outliers = no_outliers.sort_values(by='SalePrice', ascending=False)\n#no_outliers.sort_values(by='SalePrice', ascending=False)\n#pd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n#no_outliers.sort_values(by='SalePrice', ascending=False)\n#no_outliers.head(30)\n\n#no_outliers.isnull().sum(axis = 0)\n","f583aa4e":"housing.sort_values(by='SalePrice', ascending=False)","387990ff":"housing_labels = housing[\"SalePrice\"].copy()\nhousing_prepared = housing.drop(\"SalePrice\", axis=1)\nhousing_prepared = housing.drop(\"Id\", axis=1)\nhousing_prepared = housing_prepared.apply(pd.to_numeric, errors='coerce')\nhousing_prepared.fillna(0, inplace=True)","87361f2e":"lrmodel = LinearRegression()\nlrmodel.fit(housing_prepared, housing_labels)","97541903":"X = housing.iloc[:100]\ny = housing_labels.iloc[:100]\ny_pred =  lrmodel.predict(housing_prepared.iloc[:100])\nprint(\"Predictions:\\n\", list(y_pred))\nprint(\"Real Data:\\n\", list(y))","33e8de61":"housing_predictions = lrmodel.predict(housing_prepared)\nmse = mean_squared_error(housing_labels, housing_predictions)\nrmse = np.sqrt(mse)\nprint(f\"mse: {mse}, rmse: {rmse}\")","da25f9f5":"plt.scatter(y, y_pred, color = 'red')\nplt.plot(y, y_pred, color = 'blue')\nplt.title('real data vs predicted')\nplt.xlabel('real data')\nplt.ylabel('predicted')\nplt.show()","13fa11b3":"# Imports","7e8b4460":"1. Realice una Regresi\u00f3n Lineal con el dataset [houseprices](https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/overview). La descripci\u00f3n de las columnas se encuentra en la carpeta data.\nPuede basarse en el notebook: 6 y 7.\n    1. Exploraci\u00f3n de datos (2pts)\n    2. Limpieza de datos (2pts)\n    3. Normalizaci\u00f3n (2pts) \n    4. Mostrar Resultados (2pts)\n\n**\\[EXTRA\\]** \u00a1El que obtenga el menor RMSE tendr\u00e1 10 puntos extra, que podr\u00e1 utilizar para reponer en cualquier otra tarea!","de9eced7":"# Tarea Semana 4"}}