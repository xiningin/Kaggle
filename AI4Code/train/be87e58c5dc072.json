{"cell_type":{"ab7cfe0d":"code","310801f8":"code","66a17b16":"code","c447ca84":"code","5259b473":"code","40ff06e3":"code","c5b7f400":"code","b7922d44":"code","1e3b78d2":"code","460c7282":"code","c0531685":"code","41d1a52a":"code","5d77c485":"code","be6ce3a3":"code","594b0caa":"code","1b57223c":"code","e0233bf9":"code","9e44aba9":"markdown","ff1e3334":"markdown","3f63514a":"markdown","7ebd0172":"markdown"},"source":{"ab7cfe0d":"import numpy as np\nimport pandas as pd\npd.set_option(\"display.max_columns\", 100)\n\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\n\nfrom category_encoders import CountEncoder\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import KFold\n\nfrom tqdm.notebook import tqdm\nfrom xgboost import XGBRegressor\nimport cv2\n!pip install japanize-matplotlib\nimport seaborn as sns","310801f8":"# \u30e1\u30a4\u30f3\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u307e\u3059\nX_train = pd.read_csv('\/kaggle\/input\/data-science-autumn-2021\/train.csv', parse_dates=['latest_saledate'])\nX_test = pd.read_csv('\/kaggle\/input\/data-science-autumn-2021\/test.csv', parse_dates=['latest_saledate'])","66a17b16":"X_train.head(2)","c447ca84":"X_train['Price_Inc']=  X_train.groupby([\"city\",\"latest_saleyear\"])['latestPrice'].transform('mean')","5259b473":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"pflugerville\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['pflugerville_2018'] = np.select(conditions, choices, default = 0)\nX_train['pflugerville_2018_'] = X_train['pflugerville_2018'] .max()\n\nconditions = [(X_train['city'] == \"pflugerville\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['pflugerville_2019'] = np.select(conditions, choices, default = 0)\nX_train['pflugerville_2019_'] = X_train['pflugerville_2019'] .max()\n\nX_train['pflugervillePriceInc2018'] = (X_train['pflugerville_2018_']+1)\/(X_train['pflugerville_2018_']+1)\nX_train['pflugervillePriceInc2019'] = (X_train['pflugerville_2019_']+1)\/(X_train['pflugerville_2018_']+1)\n\n#X_train = X_train.drop(['pflugerville_2018','pflugerville_2019','pflugerville_2019_','pflugerville_2018_'],axis=1)","40ff06e3":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"del valle\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['del valle_2018'] = np.select(conditions, choices, default = 0)\nX_train['del valle_2018_'] = X_train['del valle_2018'] .max()\n\nconditions = [(X_train['city'] == \"del valle\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['del valle_2019'] = np.select(conditions, choices, default = 0)\nX_train['del valle_2019_'] = X_train['del valle_2019'] .max()\n\nX_train['del vallePriceInc2018'] = (X_train['del valle_2018_']+1)\/(X_train['del valle_2018_']+1)\nX_train['del vallePriceInc2019'] = (X_train['del valle_2019_']+1)\/(X_train['del valle_2018_']+1)\n\n#X_train = X_train.drop(['del valle_2018','del valle_2019','del valle_2018_','del valle_2019_'],axis=1)","c5b7f400":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"austin\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['austin_2018'] = np.select(conditions, choices, default = 0)\nX_train['austin_2018_'] = X_train['austin_2018'] .max()\n\nconditions = [(X_train['city'] == \"austin\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['austin_2019'] = np.select(conditions, choices, default = 0)\nX_train['austin_2019_'] = X_train['austin_2019'] .max()\n\nX_train['austinPriceInc2018'] = (X_train['austin_2018_']+1)\/(X_train['austin_2018_']+1)\nX_train['austinPriceInc2019'] = (X_train['austin_2019_']+1)\/(X_train['austin_2018_']+1)\n\n#X_train = X_train.drop(['austin_2018','austin_2019','austin_2018_','austin_2019_'],axis=1)","b7922d44":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"driftwood\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['driftwood_2018'] = np.select(conditions, choices, default = 0)\nX_train['driftwood_2018_'] = X_train['driftwood_2018'] .max()\n\nconditions = [(X_train['city'] == \"driftwood\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['driftwood_2019'] = np.select(conditions, choices, default = 0)\nX_train['driftwood_2019_'] = X_train['driftwood_2019'] .max()\n\nX_train['driftwoodPriceInc2018'] = (X_train['driftwood_2018_']+1)\/(X_train['driftwood_2018_']+1)\nX_train['driftwoodPriceInc2019'] = (X_train['driftwood_2019_']+1)\/(X_train['driftwood_2018_']+1)\n\n#X_train = X_train.drop(['driftwood_2018','driftwood_2019','driftwood_2018_','driftwood_2019_'],axis=1)","1e3b78d2":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"manor\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['manor_2018'] = np.select(conditions, choices, default = 0)\nX_train['manor_2018_'] = X_train['manor_2018'] .max()\n\nconditions = [(X_train['city'] == \"manor\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['manor_2019'] = np.select(conditions, choices, default = 0)\nX_train['manor_2019_'] = X_train['manor_2019'] .max()\n\nX_train['manorPriceInc2018'] = (X_train['manor_2018_']+1)\/(X_train['manor_2018_']+1)\nX_train['manorPriceInc2019'] = (X_train['manor_2019_']+1)\/(X_train['manor_2018_']+1)\n\n#X_train = X_train.drop(['manor_2018','manor_2019','manor_2018_','manor_2019_'],axis=1)","460c7282":"# City\u6bce\u306e2018\uff0c2019\u306e\u5e73\u5747\u4fa1\u683c\u3092\u30ab\u30e9\u30e0\u5316\nconditions = [(X_train['city'] == \"dripping springs\") & (X_train['latest_saleyear'] == 2018)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['dripping springs_2018'] = np.select(conditions, choices, default = 0)\nX_train['dripping springs_2018_'] = X_train['dripping springs_2018'] .max()\n\nconditions = [(X_train['city'] == \"dripping springs\") & (X_train['latest_saleyear'] == 2019)]\n\nchoices = [X_train['Price_Inc']]\n\nX_train['dripping springs_2019'] = np.select(conditions, choices, default = 0)\nX_train['dripping springs_2019_'] = X_train['dripping springs_2019'] .max()\n\nX_train['dripping springsPriceInc2018'] = (X_train['dripping springs_2018_']+1)\/(X_train['dripping springs_2018_']+1)\nX_train['dripping springsPriceInc2019'] = (X_train['dripping springs_2019_']+1)\/(X_train['dripping springs_2019_']+1)\n\n#X_train = X_train.drop(['dripping springs_2018','dripping springs_2019','dripping springs_2018_','dripping springs_2019_'],axis=1)","c0531685":"conditions = [(X_train['city'] == \"pflugerville\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"pflugerville\") & (X_train['latest_saleyear'] == 2019),\n              (X_train['city'] == \"del valle\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"del valle\") & (X_train['latest_saleyear'] == 2019),\n              (X_train['city'] == \"austin\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"austin\") & (X_train['latest_saleyear'] == 2019),\n              (X_train['city'] == \"driftwood\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"driftwood\") & (X_train['latest_saleyear'] == 2019),\n              (X_train['city'] == \"manor\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"manor\") & (X_train['latest_saleyear'] == 2019),\n              (X_train['city'] == \"dripping springs\") & (X_train['latest_saleyear'] == 2018),\n              (X_train['city'] == \"dripping springs\") & (X_train['latest_saleyear'] == 2019),]\nchoices = [X_train['pflugervillePriceInc2018'],X_train['pflugervillePriceInc2019'],\n           X_train['del vallePriceInc2018'],X_train['del vallePriceInc2019'],\n           X_train['austinPriceInc2018'],X_train['austinPriceInc2019'],\n           X_train['driftwoodPriceInc2018'],X_train['driftwoodPriceInc2019'],\n           X_train['manorPriceInc2018'],X_train['manorPriceInc2019'],\n           X_train['dripping springsPriceInc2018'],X_train['dripping springsPriceInc2019']]\n\nX_train['dripping springsPriceInc2019']= (X_train['pflugervillePriceInc2019']+X_train['del vallePriceInc2019']\n                                         +X_train['austinPriceInc2019']+X_train['driftwoodPriceInc2019']\n                                         +X_train['manorPriceInc2019'])\/5\n\nX_train['Price_IncX'] = np.select(conditions, choices, default = 0)","41d1a52a":"increseAvg = (X_train['pflugervillePriceInc2019']+X_train['del vallePriceInc2019']\n              +X_train['austinPriceInc2019']+X_train['driftwoodPriceInc2019']\n              +X_train['manorPriceInc2019']+X_train['dripping springsPriceInc2019'])\/6-1","5d77c485":"print(increseAvg)","be6ce3a3":"X_test['pflugervillePriceInc2020'] = (X_train['pflugervillePriceInc2019']-1)*2+1\nX_test['del vallePriceInc2020'] = (X_train['del vallePriceInc2019']-1)*2+1\nX_test['austinPriceInc2020'] = (X_train['austinPriceInc2019']-1)*2+1\nX_test['driftwoodPriceInc2020'] = (X_train['driftwoodPriceInc2019']-1)*2+1\nX_test['manorPriceInc2020'] = (X_train['manorPriceInc2019']-1)*2+1\nX_test['dripping springsPriceInc2020'] = (X_train['dripping springsPriceInc2019']-1)*2+1\nX_test['manchacaPriceInc2020'] = increseAvg*2+1\nX_test['roadPriceInc2020'] = increseAvg*2+1\nX_test['west lake hillsPriceInc2020'] = increseAvg*2+1","594b0caa":"X_test['pflugervillePriceInc2021'] = (X_train['pflugervillePriceInc2019']-1)*3+1\nX_test['del vallePriceInc2021'] = (X_train['del vallePriceInc2019']-1)*3+1\nX_test['austinPriceInc2021'] = (X_train['austinPriceInc2019']-1)*3+1\nX_test['driftwoodPriceInc2021'] = (X_train['driftwoodPriceInc2019']-1)*3+1\nX_test['manorPriceInc2021'] = (X_train['manorPriceInc2019']-1)*3+1\nX_test['dripping springsPriceInc2021'] = (X_train['dripping springsPriceInc2019']-1)*3+1\nX_test['manchacaPriceInc2021'] = increseAvg*3+1\nX_test['roadPriceInc2021'] = increseAvg*3+1\nX_test['west lake hillsPriceInc2021'] = increseAvg*3+1\n\nX_train = X_train.drop(['pflugervillePriceInc2018','del vallePriceInc2018',\n                       'austinPriceInc2018','driftwoodPriceInc2018',\n                       'manorPriceInc2018','dripping springsPriceInc2018',\n                       'pflugervillePriceInc2019','del vallePriceInc2019',\n                       'austinPriceInc2019','driftwoodPriceInc2019',\n                       'manorPriceInc2019','dripping springsPriceInc2019'],axis=1)","1b57223c":"conditions = [(X_test['city'] == \"pflugerville\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"pflugerville\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"del valle\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"del valle\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"austin\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"austin\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"driftwood\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"driftwood\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"manor\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"manor\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"dripping springs\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"dripping springs\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"manchaca\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"manchaca\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"road\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"road\") & (X_test['latest_saleyear'] == 2021),\n              (X_test['city'] == \"west lake hills\") & (X_test['latest_saleyear'] == 2020),\n              (X_test['city'] == \"west lake hills\") & (X_test['latest_saleyear'] == 2021),]\nchoices = [X_test['pflugervillePriceInc2020'],X_test['pflugervillePriceInc2021'],\n           X_test['del vallePriceInc2020'],X_test['del vallePriceInc2021'],\n           X_test['austinPriceInc2020'],X_test['austinPriceInc2021'],\n           X_test['driftwoodPriceInc2020'],X_test['driftwoodPriceInc2021'],\n           X_test['manorPriceInc2020'],X_test['manorPriceInc2021'],\n           X_test['dripping springsPriceInc2020'],X_test['dripping springsPriceInc2021'],\n           X_test['manchacaPriceInc2020'],X_test['manchacaPriceInc2021'],\n           X_test['roadPriceInc2020'],X_test['roadPriceInc2021'],\n           X_test['west lake hillsPriceInc2020'],X_test['west lake hillsPriceInc2021'],]\nX_test['Price_IncX'] = np.select(conditions, choices, default = 0)\n\nX_test = X_test.drop(['pflugervillePriceInc2020','del vallePriceInc2020',\n                     'austinPriceInc2020','driftwoodPriceInc2020',\n                     'manorPriceInc2020','dripping springsPriceInc2020',\n                     'pflugervillePriceInc2021','del vallePriceInc2021',\n                     'austinPriceInc2021','driftwoodPriceInc2021',\n                     'manorPriceInc2021','dripping springsPriceInc2021',\n                     'manchacaPriceInc2020','manchacaPriceInc2021',\n                     'roadPriceInc2020','roadPriceInc2021',\n                     'west lake hillsPriceInc2020','west lake hillsPriceInc2021'],axis=1)\n\n# X_train = X_train.drop(['Price_Inc'],axis=1)","e0233bf9":"#\u6563\u5e03\u56f3\u3092\u4f5c\u6210\u30d9\u30fc\u30b9\ndata = pd.concat([X_train[\"latest_saleyear\"],X_train[\"Price_IncX\"]],axis=1)\nplt.figure(figsize=(20, 10))\nsns.scatterplot(x=\"latest_saleyear\",y=\"Price_IncX\",hue=\"city\",data=X_train)\nplt.xlabel(\"latest_saleyear\")\nplt.ylabel(\"Price_IncX\")","9e44aba9":"11\/14\u3000test\u30c7\u30fc\u30bf\u306b\u3057\u304b\u306a\u3044\u90fd\u5e02\u3092\u8ffd\u52a0","ff1e3334":"11\/14\u3000test\u30c7\u30fc\u30bf\u306b\u3057\u304b\u306a\u3044\u90fd\u5e02\u3092\u8ffd\u52a0","3f63514a":"2018\u5e74\u304b\u30892019\u5e74\u306e\u4e0a\u6607\u3092\u30b0\u30e9\u30d5\u306b\u3057\u307e\u3057\u305f\nCity\u6bce\u306b\u30de\u30fc\u30af\u306e\u8272\u3092\u5909\u3048\u3089\u308c\u307e\u3057\u305f","7ebd0172":"11\/4\u3000dripping springs\u306f\uff11\u3064\u3057\u304b\u30c7\u30fc\u30bf\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4ed6\u306e\u90fd\u5e02\u306e\u5e73\u5747\u5024\u306b\u7f6e\u304d\u63db\u3048\u305f"}}