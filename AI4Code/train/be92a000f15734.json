{"cell_type":{"4ae441bf":"code","af869cde":"code","4011ec04":"code","a9636c86":"code","386ff4d0":"code","4bfaf5fd":"code","89252cfe":"code","2c71b881":"code","0b649ed8":"code","ff61146f":"code","064a67dc":"code","8e7fb7d8":"code","178f3fe8":"code","e9631a89":"code","3207516e":"code","12080069":"code","b28736b3":"code","07bfe581":"code","c5ee0263":"code","1ee28660":"code","fd9dce95":"code","b5da964e":"code","cf4e95a2":"code","5801e30e":"code","84e3156c":"code","e6008e59":"code","4fdeb0c2":"code","81ba167a":"code","78cfb488":"code","a5b14e87":"code","803a38c5":"code","3ed1007f":"code","5d7a249b":"code","78cfe918":"code","c783c1a1":"code","6aec70f7":"code","5fa77314":"code","1927595b":"code","fa729ee4":"code","844ea376":"code","8411a630":"code","8b5524b4":"code","8acc2115":"code","7ad8b85e":"code","fc7fd3cb":"code","25890057":"code","c9aef7ca":"code","78095bb2":"code","326b54a9":"code","32daa43d":"code","9358fa64":"code","2aca7bc6":"code","4984d72a":"code","47fc5b35":"code","41f0f112":"code","096d0c28":"code","8d944cef":"code","e44495d8":"code","150ddf14":"code","a8e3a1df":"markdown","e1b3a1f1":"markdown","3a8065c3":"markdown","cc65a163":"markdown","9e1a3a79":"markdown","6a41f563":"markdown","3e00bc92":"markdown"},"source":{"4ae441bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af869cde":"import pandas as pd","4011ec04":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","a9636c86":"df.head()","386ff4d0":"df.dtypes","4bfaf5fd":"df.shape","89252cfe":"df.describe(include = 'all')","2c71b881":"df['Age' == Nan]","0b649ed8":"import matplotlib.pyplot as plt","ff61146f":"plt.hist(df['Age'])","064a67dc":"df[df['Age'].isnull()]","8e7fb7d8":"df.Age.fillna(value=df.Age.mean(), inplace=True)","178f3fe8":"df[df['Age'].isnull()]","e9631a89":"len(df['Cabin'].unique())","3207516e":"cabin_df = df[df['Cabin'].notnull()]","12080069":"import seaborn as sns","b28736b3":"sns.catplot(x=\"Cabin\", hue=\"Survived\", kind=\"count\", data=cabin_df)","07bfe581":"df.drop('Cabin', inplace=True, axis=1)","c5ee0263":"sns.catplot(x=\"Embarked\", hue=\"Survived\", kind=\"count\", data=cabin_df)","1ee28660":"df.Embarked.fillna(value=df.Embarked.value_counts().idxmax(), inplace=True)","fd9dce95":"df.describe(include='all')","b5da964e":"df.drop('PassengerId', inplace=True, axis=1)","cf4e95a2":"df.head()","5801e30e":"df.drop('Name', inplace=True, axis=1)","84e3156c":"df.head()","e6008e59":"sns.countplot('Ticket', data=df)","4fdeb0c2":"df.drop('Ticket', inplace=True, axis=1)","81ba167a":"df.head()","78cfb488":"df.hist('Parch')","a5b14e87":"sns.boxplot(data=df, x='Pclass')","803a38c5":"df['Pclass'].describe()","3ed1007f":"sns.boxplot(data=df, x='Age')","5d7a249b":"sns.boxplot(data=df, x='Fare')","78cfe918":"#lets handle outliers using flooring, capping\ndef fix_outliers(df_, col_name):\n    q1 = df_[col_name].quantile(0.25)\n    q3 = df_[col_name].quantile(0.75)\n    iqr = q3-q1\n    whisker_upper = q3+1.5*iqr\n    whisker_down = q1-1.5*iqr\n    df_[col_name] = np.where(df_[col_name]>whisker_upper, whisker_upper, np.where(df_[col_name]<whisker_down, whisker_down, df_[col_name]))\n    return df_","c783c1a1":"df = fix_outliers(df, 'Fare')","6aec70f7":"sns.boxplot(data=df, x='Fare')","5fa77314":"df = fix_outliers(df, 'Age')\nsns.boxplot(data=df, x='Age')","1927595b":"sns.histplot(data=df, x='Age', kde=True)","fa729ee4":"df['Age'] = (df['Age']-df['Age'].mean())\/df['Age'].std()","844ea376":"sns.histplot(data=df, x='Age', kde=True)","8411a630":"sns.histplot(data=df, x='Fare', kde=True)","8b5524b4":"df['Fare'] = (df['Fare']-df['Fare'].mean())\/df['Fare'].std()","8acc2115":"sns.histplot(data=df, x='Fare', kde=True)","7ad8b85e":"df['Fare'].std()","fc7fd3cb":"df.head()","25890057":"df.dtypes","c9aef7ca":"sex_one_hot_encoded = pd.get_dummies(df.Sex, prefix='Sex')\nprint(sex_one_hot_encoded.head())","78095bb2":"embarked_one_hot_encoded = pd.get_dummies(df.Embarked, prefix='Embarked')\nprint(embarked_one_hot_encoded.head())","326b54a9":"pd.concat([df, sex_one_hot_encoded], axis=1)","32daa43d":"df = pd.concat([df, sex_one_hot_encoded, embarked_one_hot_encoded], axis=1)","9358fa64":"df.head()","2aca7bc6":"df.drop(['Sex', 'Embarked'], axis=1, inplace=True)","4984d72a":"df.head()","47fc5b35":"from sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(df.drop('Survived', axis=1), df['Survived'], test_size=0.3)\n","41f0f112":"svm = SVC()\nsvm = svm.fit(X_train, y_train)","096d0c28":"y_pred = svm.predict(X_test)","8d944cef":"acc = y_pred == y_test\nacc.sum()\/acc.count()","e44495d8":"from sklearn.metrics import accuracy_score","150ddf14":"accuracy_score(y_test, y_pred)","a8e3a1df":"## Stndrdization","e1b3a1f1":"---\n## Check Outliers","3a8065c3":"## Ctegorical features encoding","cc65a163":"## test using svm","9e1a3a79":"we can drop the column because it is almost gives no information","6a41f563":"## Handle missings","3e00bc92":"## Drop Irrelevants"}}