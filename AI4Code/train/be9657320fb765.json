{"cell_type":{"75e52ca6":"code","af430d09":"code","75ecff71":"code","b3e2261b":"code","5bb7f693":"code","bf14eef0":"code","117091aa":"code","0c808b42":"code","2cdb80e2":"code","2c6e4e2d":"code","d04837e0":"code","f191d6be":"code","df64f434":"code","d6c3eefb":"code","a0a7fea5":"code","8b3c4add":"code","32bab392":"code","0c52b698":"code","bbeacbbd":"code","69194c61":"code","15293d87":"code","19c7bff2":"code","af2a41a5":"code","cb12565d":"code","23a9e126":"code","a31df383":"code","54faefb2":"code","c9cc8488":"code","145b24f1":"markdown","1942dbe7":"markdown","43402374":"markdown","8268b7ea":"markdown","a5069417":"markdown","abdb2be8":"markdown","eeedb49e":"markdown","44c19fbd":"markdown","c0e1add9":"markdown","e2202aa0":"markdown","4a99f562":"markdown","f8999d86":"markdown","e748dd89":"markdown","26ad4de5":"markdown","efecb196":"markdown","381f7dab":"markdown","6d7dee8f":"markdown","1150ab3c":"markdown","370e64c6":"markdown","d237bcc7":"markdown","1a908d03":"markdown","2138c801":"markdown","662e3938":"markdown"},"source":{"75e52ca6":"import pandas as pd                #Pandas library for data analysis\nimport numpy as np                 #For numerical analysis of data\nimport matplotlib.pyplot as plt    #Python's plotting \n\n\nimport plotly.express as px       #Plotly for plotting the COVID-19 Spread.\nimport plotly.offline as py       #Plotly for plotting the COVID-19 Spread.\nimport seaborn as sns             #Seaborn for data plotting\nimport plotly.graph_objects as go #Plotlygo for plotting\n\nfrom plotly.subplots import make_subplots\n\n\nimport glob                       #For assigning the path\nimport os                         #OS Library for implementing the functions.\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\n#Selcting the other essential libraries for data manipulation\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nimport datetime as dt\nimport xgboost as xgb\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor","af430d09":"#Reading the cumulative cases dataset\ncovid_cases = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n\n#Viewing the dataset\ncovid_cases.head()","75ecff71":"#Importing the essential datasets from the challenge\n\ntraining_data = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/train.csv\")\ntesting_data = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/test.csv\")","b3e2261b":"#Checking for the null values in dataset\nprint(training_data.isnull().sum())\nprint(testing_data.isnull().sum())\n\n#Checking for the datatypes for the columns\nprint(training_data.dtypes)\nprint(testing_data.dtypes)\n\n#Filling the values\ntraining_data['Province_State'].fillna(\"\",inplace = True)\ntesting_data['Province_State'].fillna(\"\",inplace = True)","5bb7f693":"#Groping the same cities and countries together along with their successive dates.\n\ncountry_list = covid_cases['Country\/Region'].unique()\n\ncountry_grouped_covid = covid_cases[0:1]\n\nfor country in country_list:\n    test_data = covid_cases['Country\/Region'] == country   \n    test_data = covid_cases[test_data]\n    country_grouped_covid = pd.concat([country_grouped_covid, test_data], axis=0)\n    \ncountry_grouped_covid.reset_index(drop=True)\ncountry_grouped_covid.head()\n\n#Dropping of the column Last Update\ncountry_grouped_covid.drop('Last Update', axis=1, inplace=True)\n\n#Replacing NaN Values in Province\/State with a string \"Not Reported\"\ncountry_grouped_covid['Province\/State'].replace(np.nan, \"Not Reported\", inplace=True)\n\n#Printing the dataset\ncountry_grouped_covid.head()\n\n#country_grouped_covid holds the dataset for the country","bf14eef0":"#Creating a dataset to analyze the cases country wise - As of 04\/10\/2020\n\nlatest_data = country_grouped_covid['ObservationDate'] == '04\/10\/2020'\ncountry_data = country_grouped_covid[latest_data]\n\n#The total number of reported Countries\ncountry_list = country_data['Country\/Region'].unique()\nprint(\"The total number of countries with COVID-19 Confirmed cases = {}\".format(country_list.size))","117091aa":"#Creating the interactive map\npy.init_notebook_mode(connected=True)\n\n#GroupingBy the dataset for the map\nformated_gdf = covid_cases.groupby(['ObservationDate', 'Country\/Region'])['Confirmed', 'Deaths', 'Recovered'].max()\nformated_gdf = formated_gdf.reset_index()\nformated_gdf['Date'] = pd.to_datetime(formated_gdf['ObservationDate'])\nformated_gdf['Date'] = formated_gdf['Date'].dt.strftime('%m\/%d\/%Y')\n\nformated_gdf['log_ConfirmedCases'] = np.log(formated_gdf.Confirmed + 1)\nformated_gdf['log_Fatalities'] = np.log(formated_gdf.Deaths + 1)\n\n#Plotting the figure\n\n\nfig = px.choropleth(formated_gdf, locations=\"Country\/Region\", locationmode='country names', \n                     color=\"log_ConfirmedCases\", hover_name=\"Country\/Region\",projection=\"mercator\",\n                     animation_frame=\"Date\",width=1000, height=800,\n                     color_continuous_scale=px.colors.sequential.Viridis,\n                     title='The Spread of COVID-19 Cases Across World')\n\n#Showing the figure\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)\n","0c808b42":"#Creating the interactive map\npy.init_notebook_mode(connected=True)\n\n#GroupingBy the dataset for the map\nformated_gdf = covid_cases.groupby(['ObservationDate', 'Country\/Region'])['Confirmed', 'Deaths', 'Recovered'].max()\nformated_gdf = formated_gdf.reset_index()\nformated_gdf['Date'] = pd.to_datetime(formated_gdf['ObservationDate'])\nformated_gdf['Date'] = formated_gdf['Date'].dt.strftime('%m\/%d\/%Y')\n\nformated_gdf['log_ConfirmedCases'] = np.log(formated_gdf.Confirmed + 1)\nformated_gdf['log_Fatalities'] = np.log(formated_gdf.Deaths + 1)\n\n#Plotting the figure\n\n\nfig = px.choropleth(formated_gdf, locations=\"Country\/Region\", locationmode='country names', \n                     color=\"log_Fatalities\", hover_name=\"Country\/Region\",projection=\"mercator\",\n                     animation_frame=\"Date\",width=1000, height=800,\n                     color_continuous_scale=px.colors.sequential.Viridis,\n                     title='The Deaths because of COVID-19 Cases')\n\n#Showing the figure\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)\n","2cdb80e2":"#Plotting a bar graph for confirmed cases vs deaths due to COVID-19 in World.\n\nunique_dates = country_grouped_covid['ObservationDate'].unique()\nconfirmed_cases = []\nrecovered = []\ndeaths = []\n\nfor date in unique_dates:\n    date_wise = country_grouped_covid['ObservationDate'] == date  \n    test_data = country_grouped_covid[date_wise]\n    \n    confirmed_cases.append(test_data['Confirmed'].sum())\n    deaths.append(test_data['Deaths'].sum())\n    recovered.append(test_data['Recovered'].sum())\n    \n#Converting the lists to a pandas dataframe.\n\ncountry_dataset = {'Date' : unique_dates, 'Confirmed' : confirmed_cases, 'Recovered' : recovered, 'Deaths' : deaths}\ncountry_dataset = pd.DataFrame(country_dataset)\n\n#Plotting the Graph of Cases vs Deaths Globally.\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=country_dataset['Date'], y=country_dataset['Confirmed'], name='Confirmed Cases of COVID-19', marker_color='rgb(55, 83, 109)'))\nfig.add_trace(go.Bar(x=country_dataset['Date'],y=country_dataset['Deaths'],name='Total Deaths because of COVID-19',marker_color='rgb(26, 118, 255)'))\n\nfig.update_layout(title='Confirmed Cases and Deaths from COVID-19',xaxis_tickfont_size=14,\n                  yaxis=dict(title='Reported Numbers',titlefont_size=16,tickfont_size=14,),\n    legend=dict(x=0,y=1.0,bgcolor='rgba(255, 255, 255, 0)',bordercolor='rgba(255, 255, 255, 0)'),barmode='group',bargap=0.15, bargroupgap=0.1)\nfig.show()\n\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=country_dataset['Date'], y=country_dataset['Confirmed'], name='Confirmed Cases of COVID-19', marker_color='rgb(55, 83, 109)'))\nfig.add_trace(go.Bar(x=country_dataset['Date'],y=country_dataset['Recovered'],name='Total Recoveries because of COVID-19',marker_color='rgb(26, 118, 255)'))\n\nfig.update_layout(title='Confirmed Cases and Recoveries from COVID-19',xaxis_tickfont_size=14,\n                  yaxis=dict(title='Reported Numbers',titlefont_size=16,tickfont_size=14,),\n    legend=dict(x=0,y=1.0,bgcolor='rgba(255, 255, 255, 0)',bordercolor='rgba(255, 255, 255, 0)'),\n    barmode='group',bargap=0.15, bargroupgap=0.1)\nfig.show()","2c6e4e2d":"#Generating a function to concatenate all of the files available.\n\nfolder_name = '..\/input\/covcsd-covid19-countries-statistical-dataset'\nfile_type = 'csv'\nseperator =','\ndataframe = pd.concat([pd.read_csv(f, sep=seperator) for f in glob.glob(folder_name + \"\/*.\"+file_type)],ignore_index=True,sort=False)","d04837e0":"#Selecting the columns that are required as is essential for the data-wrangling task\n\ncovid_data = dataframe[['Date', 'State', 'Country', 'Cumulative_cases', 'Cumulative_death',\n       'Daily_cases', 'Daily_death', 'Latitude', 'Longitude', 'Temperature',\n       'Min_temperature', 'Max_temperature', 'Wind_speed', 'Precipitation',\n       'Fog_Presence', 'Population', 'Population Density\/km', 'Median_Age',\n       'Sex_Ratio', 'Age%_65+', 'Hospital Beds\/1000', 'Available Beds\/1000',\n       'Confirmed Cases\/1000', 'Lung Patients (F)', 'Lung Patients (M)',\n       'Life Expectancy (M)', 'Life Expectancy (F)', 'Total_tests_conducted',\n       'Out_Travels (mill.)', 'In_travels(mill.)', 'Domestic_Travels (mill.)']]","f191d6be":"#Merging the columns together\n\ntraining_data['Country_Region'] = training_data['Country_Region'] + ' ' + training_data['Province_State']\ntesting_data['Country_Region'] = testing_data['Country_Region'] + ' ' + testing_data['Province_State']\ndel training_data['Province_State']\ndel testing_data['Province_State']\n\n#Creating a function to split-date\n\ndef split_date(date):\n    date = date.split('-')\n    date[0] = int(date[0])\n    if(date[1][0] == '0'):\n        date[1] = int(date[1][1])\n    else:\n        date[1] = int(date[1])\n    if(date[2][0] == '0'):\n        date[2] = int(date[2][1])\n    else:\n        date[2] = int(date[2])    \n    return date\n\ntraining_data.Date = training_data.Date.apply(split_date)\ntesting_data.Date = testing_data.Date.apply(split_date)","df64f434":"#Manipulation of columns for both training dataset\n\nyear = []\nmonth = []\nday = []\n\nfor i in training_data.Date:\n    year.append(i[0])\n    month.append(i[1])\n    day.append(i[2])\n    \ntraining_data['Year'] = year\ntraining_data['Month'] = month\ntraining_data['Day'] = day\ndel training_data['Date']\n\n#Manipulation of columns for both testing dataset\n\nyear = []\nmonth = []\nday = []\nfor i in testing_data.Date:\n    year.append(i[0])\n    month.append(i[1])\n    day.append(i[2])\n    \ntesting_data['Year'] = year\ntesting_data['Month'] = month\ntesting_data['Day'] = day\ndel testing_data['Date']\ndel training_data['Id']\ndel testing_data['ForecastId']\ndel testing_data['Year']\ndel training_data['Year']","d6c3eefb":"#Filtering of the dataset to view the latest contents (as of 30-03-2020)\nlatest_data = covid_data['Date'] == '30-03-2020'\ncountry_data_detailed = covid_data[latest_data]\n\n#Dropping off unecssary columns from the country_data_detailed dataset\ncountry_data_detailed.drop(['Daily_cases','Daily_death','Latitude','Longitude'],axis=1,inplace=True)\n\n#Viewing the dataset\ncountry_data_detailed.head(3)","a0a7fea5":"#Replacing the text Not Reported and N\/A with numpy missing value cmputation\n\ncountry_data_detailed.replace('Not Reported',np.nan,inplace=True)\ncountry_data_detailed.replace('N\/A',np.nan,inplace=True)\n\n\n#Viewing the dataset\ncountry_data_detailed.head(3)","8b3c4add":"#Converting the datatypes\n\ncountry_data_detailed['Lung Patients (F)'].replace('Not reported',np.nan,inplace=True)\ncountry_data_detailed['Lung Patients (F)'] = country_data_detailed['Lung Patients (F)'].astype(\"float\")","32bab392":"#Getting the dataset to check the correlation \ncorr_data = country_data_detailed.drop(['Date','State','Country','Min_temperature','Max_temperature','Out_Travels (mill.)',\n                                        'In_travels(mill.)','Domestic_Travels (mill.)','Total_tests_conducted','Age%_65+'], axis=1)\n\n#Converting the dataset to the correlation function\ncorr = corr_data.corr()","0c52b698":"#Plotting a heatmap\n\ndef heatmap(x, y, size,color):\n    fig, ax = plt.subplots(figsize=(20,3))\n    \n    # Mapping from column names to integer coordinates\n    x_labels = corr_data.columns\n    y_labels = ['Cumulative_cases', 'Cumulative_death']\n    x_to_num = {p[1]:p[0] for p in enumerate(x_labels)} \n    y_to_num = {p[1]:p[0] for p in enumerate(y_labels)} \n    \n    n_colors = 256 # Use 256 colors for the diverging color palette\n    palette = sns.cubehelix_palette(n_colors) # Create the palette\n    color_min, color_max = [-1, 1] # Range of values that will be mapped to the palette, i.e. min and max possible correlation\n\n    def value_to_color(val):\n        val_position = float((val - color_min)) \/ (color_max - color_min) # position of value in the input range, relative to the length of the input range\n        ind = int(val_position * (n_colors - 1)) # target index in the color palette\n        return palette[ind]\n\n    \n    ax.scatter(\n    x=x.map(x_to_num),\n    y=y.map(y_to_num),\n    s=size * 1000,\n    c=color.apply(value_to_color), # Vector of square color values, mapped to color palette\n    marker='s'\n)\n    \n    # Show column labels on the axes\n    ax.set_xticks([x_to_num[v] for v in x_labels])\n    ax.set_xticklabels(x_labels, rotation=30, horizontalalignment='right')\n    ax.set_yticks([y_to_num[v] for v in y_labels])\n    ax.set_yticklabels(y_labels)\n    \n    \n    ax.set_xticks([t + 0.5 for t in ax.get_xticks()], minor=True)\n    ax.set_yticks([t + 0.5 for t in ax.get_yticks()], minor=True)\n    \n    ax.set_xlim([-0.5, max([v for v in x_to_num.values()]) + 0.5]) \n    ax.set_ylim([-0.5, max([v for v in y_to_num.values()]) + 0.5])\n    \ncorr = pd.melt(corr.reset_index(), id_vars='index') \ncorr.columns = ['x', 'y', 'value']\nheatmap(x=corr['x'],y=corr['y'],size=corr['value'].abs(),color=corr['value'])","bbeacbbd":"#Creating a correlation matrix\n\nmatrix = corr_data.corr()\nprint(matrix)","69194c61":"#Reading the temperature data file\ntemperature_data = pd.read_csv('..\/input\/covcsd-covid19-countries-statistical-dataset\/temperature_data.csv')\n\n#Viewing the dataset\ntemperature_data.head()","15293d87":"#Checking the dependence of Temperature on Confirmed COVID-19 Cases\n\nunique_temp = temperature_data['Temperature'].unique()\nconfirmed_cases = []\ndeaths = []\n\nfor temp in unique_temp:\n    temp_wise = temperature_data['Temperature'] == temp\n    test_data = temperature_data[temp_wise]\n    \n    confirmed_cases.append(test_data['Daily_cases'].sum())\n    deaths.append(test_data['Daily_death'].sum())\n    \n#Converting the lists to a pandas dataframe.\n\ntemperature_dataset = {'Temperature' : unique_temp, 'Confirmed' : confirmed_cases, 'Deaths' : deaths}\ntemperature_dataset = pd.DataFrame(temperature_dataset)","19c7bff2":"#Plotting a scatter plot for cases vs. Temperature\n\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(go.Scattergl(x = temperature_dataset['Temperature'],y = temperature_dataset['Confirmed'], mode='markers',\n                                  marker=dict(color=np.random.randn(10000),colorscale='Viridis',line_width=1)),secondary_y=False)\n\nfig.add_trace(go.Box(x=temperature_dataset['Temperature']),secondary_y=True)\n\nfig.update_layout(title='Daily Confirmed Cases (COVID-19) vs. Temperature (Celcius) : Global Figures - January 22 - March 30 2020',\n                  yaxis=dict(title='Reported Numbers'),xaxis=dict(title='Temperature in Celcius'))\n\nfig.update_yaxes(title_text=\"BoxPlot Range \", secondary_y=True)\n\nfig.show()\n","af2a41a5":"#Conducting Statistical Tests over the dataset\n\nsample = temperature_dataset['Temperature'].sample(n=250)\ntest = temperature_dataset['Temperature']\n\nfrom scipy.stats import ttest_ind\n\nstat, p = ttest_ind(sample, test)\nprint('Statistics=%.3f, p=%.3f' % (stat, p))","cb12565d":"training_data['ConfirmedCases'] = training_data['ConfirmedCases'].apply(int)\ntraining_data['Fatalities'] = training_data['Fatalities'].apply(int)\n\ncases = training_data.ConfirmedCases\nfatalities = training_data.Fatalities\ndel training_data['ConfirmedCases']\ndel training_data['Fatalities']\n\nlb = LabelEncoder()\ntraining_data['Country_Region'] = lb.fit_transform(training_data['Country_Region'])\ntesting_data['Country_Region'] = lb.transform(testing_data['Country_Region'])\n\nscaler = MinMaxScaler()\nx_train = scaler.fit_transform(training_data.values)\nx_test = scaler.transform(testing_data.values)","23a9e126":"from xgboost import XGBRegressor\n\nrf = XGBRegressor(n_estimators = 1500 , max_depth = 15, learning_rate=0.1)\nrf.fit(x_train,cases)\ncases_pred = rf.predict(x_test)\n\nrf = XGBRegressor(n_estimators = 1500 , max_depth = 15, learning_rate=0.1)\nrf.fit(x_train,fatalities)\nfatalities_pred = rf.predict(x_test)","a31df383":"#Rouding off the prediction values and converting negatives to zero\ncases_pred = np.around(cases_pred)\nfatalities_pred = np.around(fatalities_pred)\n\ncases_pred[cases_pred < 0] = 0\nfatalities_pred[fatalities_pred < 0] = 0","54faefb2":"#Importing the dataset for generating output\nsubmission_dataset = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/submission.csv\")\n\n#Adding results to the dataset\nsubmission_dataset['ConfirmedCases'] = cases_pred\nsubmission_dataset['Fatalities'] = fatalities_pred\n\nsubmission_dataset.head()","c9cc8488":"#Submitting the dataset\nsubmission_dataset.to_csv(\"submission.csv\" , index = False)","145b24f1":"# <a id='covspread'><h3>Analysis of Spread of COVID-19 : Geospatially<\/a>","1942dbe7":"<a id='ov2'><h3>Analyses from the bar chart<\/h3><\/a>\n\nFrom the Graph of Confirmed Cases vs Deaths we observe the following trends.\n\n1. On March 17th 2020, 56 Days post the first confirmed case of COVID-19. The Global Count of confirmed covid-19 cases crossed 200k mark.\n2. Within 7 days, on 24th March 2020, the Global confirmed case count reached beyond 400k mark.\n3. It took 3 days from March 24th 2020 to March 27th 2020, for global confirmed case count to reach 600k mark.\n4. The same trends were observed of 3 days. On April 2, 2020 1m mark of COVID-19 was crossed.\n5. Within the next 2 days, 200k more confirmed cases was added.\n\nThe total cumber of recovered cases was far more less than the confirmed cases. A total of 20.55% cases were recovered out of total confirmed cases as of April 6th 2020.","43402374":"<h3> Plotting a Running Map for observing the spread of COVID-19 Deaths <\/h3>","8268b7ea":"\n<a id='lib'><h3>Importing the Essential Libraries <\/h3><\/a>","a5069417":"# <a id='temp'><h3>Role of Temperature and Climate in spread of COVID-19<\/h3><\/a>\n\nAnd does people living in colder weather environment are more prone to covid-19 that those in warmer regions?","abdb2be8":"<a id='ov1'><h3> General Observations from the above Choreopleth Graphs <\/h3><\/a>\n\n1. The cases of COVID-19 starts from China as the epicenter with first initial COVID-19 Cases reported in Australia, US, Canada.\n\n2. Gradually cases in China increases and the confirmed cases is more than anywhere else in the world.\n\n3. Europe emerges later as the new epicenter for the virus, where there is a rapid rise in COVID-19 Cases in European Countries. This outbreak occurs where the confirmed number of COVID-19 Cases in China saturates.\n\n4. The confirmed cases of COVID-19 gradually spreads throughout the world, with spike in confirmed cases seen in European regions and US.\n\n5. As of April 3rd 2020, USA has the highest number of confimed COVID-19 Cases reported, with some European Countries emerging as the 2nd-4th highest cases of COVID-19\n\n<a id='barspread'><h3> Analysis of Spread and deaths due to COVID-19 from Bar Graphs <\/h3><\/a>","eeedb49e":"<h3> Selecting the Columns for manipulation <\/h3>","44c19fbd":"<h3> Initial Analysis from the datasets <\/h3>\n\nWith a weak correlation we observe the following trends\n\n1. With the rise in tempertaure, the confirmed cases tend to slow down (negative correlation). However substantial proof needs to be added here. For the sake of this in the upcoming versions of the notebook I'll analyze the trends for all the days to check the temperature.\n\n2. Median age tends to affect the cases. So for a higher median age of the country cases tends to increase.\n\n3. Life expectancy also seems to affect the COVID-19 confirmed cases with a weak correlation. The effect is seen more prominent in males than in females.\n\nWe keep forward to look with more dataset to analyze the correlation as since the correaltions obtained here are too weak.","c0e1add9":"<a id='data'><h3>Datasets used in the notebook<h3><\/a>\n\n1. We read the Novel-Corona-Virus-2019-dataset managed by SRK into this notebook. The dataset hold s information about the cumulative case counts of COVID-19 Across the world. The dataset can be viewed and downloaded from - [here](https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset)\n\n2. The dataset CovCSD - COVID-19 Countries Statistical Dataset created by me (Available at https:\/\/www.kaggle.com\/aestheteaman01\/covcsd-covid19-countries-statistical-dataset) is loaded here. The information for the dataset can be seen at the description section for the dataset.\n\n3. The default dataset available with this notebook","e2202aa0":"\n# <a id='main'><h3>Table of Contents<\/h3><\/a>\n- [Importing the Essential Libraries](#lib)\n- [Datasets used in notebook](#data)\n- [Analysis of Speread of COVID-19 : Geospatially](#covspread)\n- [General Observations from the geospatial maps](#ov1)\n- [Analysis of Speread of COVID-19 : Bar Graphs](#barspread)\n- [General Observations from the Bar Graphs](#ov2)\n- [Which demographic factors play a role in Transmission?](#demo)\n- [Affect of Temperature on Transmission of COVOID-19](#temp)\n- [Some Factors that had contributed to the spread of COVID-19](#findings)\n- [Building the Timeseries Model](#seriestime)\n\n","4a99f562":"<h3> Plotting a Running Map for observing the spread of COVID-19 Confirmed Cases <\/h3>\n","f8999d86":"# <a id='demo'><h3>Which demographic factors play a role in transmission across populations?<\/h3><\/a>","e748dd89":"# <a id='findings'><h3>The findings from the Analyses<\/h3><\/a>\n\n1. Median age tends to affect the cases. So for a city that has a higher median age, the cases tend to increase.\n\n2. Life expectancy also seems to affect the COVID-19 confirmed cases with a weak correlation. The effect is seen more prominent in males than in females.\n\n3. With the rise in tempertaure, the confirmed cases tend to slow down (negative correlation). The maximum number of cases has occured between a range on temperatures (from -4 to 17 deree celcius). The transmissons are substantially higher in colder regions and with the increase in temperature, transmissions trend to decrease. Hence, people in colder environments and cooler climatic conditions are much prone to the transmission of COVID-19.","26ad4de5":"<h3> The next big steps <\/h3>\n\nThis notebook is an extended version of my notebook under the UNCOVER COVID-19 Challenge. I'll accordingly update this notebook with newer set of analyses and timeseries prediction models. Accordingly I'll update this section accordingly over the course of this competition.\n\nContact\nLinkedIn - https:\/\/www.linkedin.com\/in\/amankumar01\/","efecb196":"<h3> Adding it to final dataset <\/h3>","381f7dab":"# <a id='seriestime'><h3>Building the Timeseries Models<\/h3><\/a>\n\nTesting the model performance using Gradient Boosting","6d7dee8f":"<h3> Observing the Trends <\/h3>\n\nThe temperature Range (-4 Deree Celcius- 17 Degree Celcius) has the highest number of confirmed case count. Almost majority of the confirmed cases are in this range. Although the spread of COVID-19 is across all the temperature range, but within this range the spread is observed to be highest.\n\nAnd as observed in the boxplot plotted over the scatter plot, within three quartiles of temperature (Q1-Q3) Majority and highest number of confirmed cases are observed. Here since p-value>0.05 we can safely accept the null hypothesis about the distribution of temperature over the spread of COVID-19\n\n","1150ab3c":"<h3> Importing a dataset to anlayze the temperature trends <\/h3>\n\nWe import a dataset into this notebook that was created by me under the name CovCSD - COVID-19 Countries Statistical Dataset. It contains detail of multiple countries with the temperatrure figures. We import the dataset accordingly and analyze them with proper data managing tools available.","370e64c6":"<h3> A little editing with the datasets for Analyses and Prediction <\/h3>\n","d237bcc7":"<H3> Task Details <\/H3>\n\n\"Kaggle is launching a companion COVID-19 forecasting challenges to help answer a subset of the NASEM\/WHO questions. While the challenge involves forecasting confirmed cases and fatalities between April 15 and May 14 by region, the primary goal isn't only to produce accurate forecasts. It\u2019s also to identify factors that appear to impact the transmission rate of COVID-19. You are encouraged to pull in, curate and share data sources that might be helpful. If you find variables that look like they impact the transmission rate, please share your finding in a notebook. As the data becomes available, we will update the leaderboard with live results based on data made available from the Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE).\n\nWe have received support and guidance from health and policy organizations in launching these challenges. We're hopeful the Kaggle community can make valuable contributions to developing a better understanding of factors that impact the transmission of COVID-19.\" - Kaggle COVID-19 Forecast Challenge","1a908d03":"# Timeseries Analysis and Factors influencing Spread of COVID-19\n","2138c801":"<h3> Analysis of Temperature and Confrimed Cases via Plotly Graphs <\/h3>","662e3938":"<h3> Running the XGBRegressor Algorithm <\/h3>"}}