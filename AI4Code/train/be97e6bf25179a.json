{"cell_type":{"12993d09":"code","0b71c053":"code","821ae859":"code","fa10a18e":"code","6122743d":"code","c6801fa2":"code","991e987b":"code","83d975c6":"code","4eb3fb0f":"code","e8e5ad59":"code","554a5403":"code","089cd388":"code","4cef3d4f":"code","17634f47":"code","0b43c55c":"code","886c162c":"code","90012291":"code","63a5ecce":"code","f8231c43":"code","919db719":"code","aca9e74f":"markdown","5d0a531a":"markdown","e2328818":"markdown","30dc79aa":"markdown","8242cc59":"markdown","8fabd5ac":"markdown","4da904d8":"markdown","72e4bfbd":"markdown","301950fd":"markdown","602237b2":"markdown","ee96f08f":"markdown","9fa82f8c":"markdown","2376305c":"markdown","d17173c6":"markdown","689c1838":"markdown","799b453c":"markdown"},"source":{"12993d09":"\n\n#importing the libaries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n","0b71c053":"#Get the dataset\ndf=pd.read_csv(\"..\/input\/Churn_Modelling.csv\")","821ae859":"#check the dataset\ndf.head()","fa10a18e":"#checking the null values\ndf.isnull().sum()","6122743d":"X = df.iloc[:, 3:13].values\ny = df.iloc[:, 13].values","c6801fa2":"print(X)","991e987b":"print(y)","83d975c6":"\n# Encoding Independent variable\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nlabelencoder_X_1 = LabelEncoder()\nX[:, 1] = labelencoder_X_1.fit_transform(X[:, 1])\nlabelencoder_X_2 = LabelEncoder()\nX[:, 2] = labelencoder_X_2.fit_transform(X[:, 2])\nonehotencoder = OneHotEncoder(categorical_features = [1])\nX = onehotencoder.fit_transform(X).toarray()\nX = X[:, 1:]","4eb3fb0f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)","e8e5ad59":"\n# Feature scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)\n\n","554a5403":"# Importing keras libraries and packages\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","089cd388":"# Initializing the ANN\nclassifier = Sequential()\n","4cef3d4f":"\n# Adding the input layer and the first hidden layer\nclassifier.add(Dense(units = 6, init = 'uniform', activation = 'relu'))\n\n# Adding the second hidden layer\nclassifier.add(Dense(units = 6, init = 'uniform', activation = 'relu'))\n\n# Adding the output layer\nclassifier.add(Dense(units = 1, init = 'uniform', activation = 'sigmoid'))\n\n\n","17634f47":"\n# Compile the ANN\nclassifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n","0b43c55c":"\n# Fitting the ANN to the training set\nclassifier.fit(X_train, y_train, batch_size = 10, epochs = 100)\n\n# Predicting the test set results\ny_pred = classifier.predict(X_test)\n\n","886c162c":"#show if probability of leaving the bank is true or false........lets compare it....... \ny_pred = (y_pred > 0.5)\nprint(y_pred)\n","90012291":"\n# Making the confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","63a5ecce":"Accuracy=(1542+142)\/2000\nAccuracy","f8231c43":"Error_rate=(53+263)\/2000\nError_rate","919db719":"\n\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential\nfrom keras.layers import Dense\ndef build_classifier():\n    classifier = Sequential()\n    classifier.add(Dense(units = 6, init = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 6, init = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, init = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier\nclassifier = KerasClassifier(build_fn = build_classifier, batch_size = 10, epochs = 100)\naccuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 2, n_jobs = 1)\nmean = accuracies.mean()\nvariance = accuracies.std()\n\n","aca9e74f":"# ||ARTIFICIAL NEURAL NETWORK -ANN||# ","5d0a531a":"       Artificial neural networks or connectionist systems are computing systems that are inspired by, but not necessarily identical to, the biological neural networks that constitute animal brains. Such systems \"learn\" to perform tasks by considering examples, generally without being programmed with any task-specific rules. \n       ","e2328818":"# ||Part 1-DataPreprocessing......||","30dc79aa":"What is **neuron**?\n             \n             \n             A neuron (also called neurone or nerve cell) is a cell that carries electrical impulses. Neurons are the basic units of the nervous system.\n\nHow **neuron** look like?\n\n![](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxATEhISERIQEBQSFRIVEhEQFRAQFhURFxgWFxcWFhgYHS0gGBonJxcWITMhJS0rLi4uFx8zODMtNygtLisBCgoKDg0OGxAQGzAmICUvLS0vLS0rLTUtMC0tLS0tLS0tLS0tLS0tLy0tLS0tLS0vLi0tLS0tLS0tLS0tLS0tLf\/AABEIAK4BIgMBEQACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAABAUBAwYCB\/\/EAEAQAAIBAgMEBwUFBgUFAAAAAAECAAMRBBIhBTFBUQYTIjJhcYFCcpGhsRQjUsHwM2KCwtHhc5Ky0vEVJURTov\/EABoBAQACAwEAAAAAAAAAAAAAAAADBAECBQb\/xAAyEQEAAgIBAwEGBAYCAwAAAAAAAQIDEQQSITFBBRNRYXGBFCIykSNCobHB0VLxcuHw\/9oADAMBAAIRAxEAPwD7jAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA5+n0toEYuy1A2EqinUQhQWBbIKia2KE5hfmjDhAuTjaQLg1KYNMZnBZbovNhfQeJgK2MpJfPUppbfmZVtoW1udNAT5AwMfbaV2XrKd0XM4zLdU35mF9B4mB7w+Jpvc03RwCQSjK1mG8G24+EDbAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQON2n0TrPTY03pJWOJrOCS2V8LVrrUem\/ZveyqwsNGQC9ibhGq9DcQwxdNmpFaq7Q6msXJYHFszZXpCkDlGYD9o1+rUgDQKE1uj2JrYinXxKYUBcRSrPSR6lcZaeGxNEWL0lzNmqow0GgPEC4Qsf0QxLpWpD7Mo\/wC5NSrh6nWVWxa1wtOsvV9hFNYXIZr9ShyjcA6TZeyjSxFaoBTWnUpYVFVOz26XXZiQAABZ0AP7vCwgW8BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEDF4GjD4jM1Qf8ArbL5nKrfzTMxpHW8WmYj07NyVAdxvqRpzGhmG8TE+HqGSBU09v0bkVM1HWyGpks\/adbrlJ\/ATrawsedgzU6QYYAEPcG9yA1lUIXzNcaLbUHjwvADpBh7kM5p2t31ZRq1RRra1\/unJG8BTcCBPwuJSoodDmU7m1F\/K\/CBugICAgICAgICAgICAgICAgICAgICAgICAgIHiqxANhc8BuueV4YmZ12Qa20l6ipVXeiuSraEOoPZYcDebxT82le\/Ij3NslfSJ+0texKtSoi1C1kIGVdLtwLufE3sB\/xnJWKz0teJe2WkZJ8Sgbe2j9nd8nfrU1yC1\/vASub4EeeUSTFj6436Qqc3lfh7TFf1Wjt++trTBVlSkmjKoyIpcEMxJCgkHUXJ46yG0T1L2K1a44j07R3TalVVFyQOXieQ5marDVndu6Mg5vv9F\/rbygQxsSkDewvmDXtchgWIsb6DtvoNO22mpgYbYVE2uq6DL3fZyhLHXXsi2sD2+xqZOYhb3zXy2Oa7NfQ83f8AzsNxMCVgsKtNSq2sSWNuJOpJ5mBIgICAgICAgICAgICAgICAgICAgICAgICAgICBBxuy6VTNcEFhZmRmQkbrNY2b1vN63mvhBl42PLE79e3ZRfe4Ar2jVwxNje2amTx\/Wnrvsflzf+X93M1k9nzHfeOe30eMZjqK441KrdmnSXJYFrs2ulvBjM1pecOq\/Fpl5GKOb13ntFe33b6lTF4l6bJT6mijZgKxys5A0NrG1t+60j1jxxMb3M\/BPF+RybxaK6rE77z3n5rrCUnBJdUB5hmqMfMkCw8JBMR6OlSbz+rX2TZhIQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQKnbhe9LI25rsufqwVuNWIdTYa\/iHNTwCvpYzHEath0I\/wzc5Df29BmAA\/dIvreBY7HxlVusFfq1Oc9UEZGJS3gT4wLWBHx+GWpTdH7rAg+Hj+c2raazEwizY65KTW3iXznYODFXEIhZgO0cynKeyCRY8NwnTzXmuPenkeFgjNyIpM9u\/8AR9A2dgmp3DVHq8mZnJt4gm1\/ETm3t1T4eswYpxxqbTP1TponIHlmEMSjjGr1bVOC9Zf+AkH6TMxMTppGWs06khDcAzDes7jb1DJAQEBAQEBAQEDBMDIgVfSA1DSyUnWm7kDOXFLKo1Yg2PILoD3oFb\/1LGk7sOo+7sM9I2uBnDHPuBzC41sE0N2sGyvi8V1alalE1FZri9IKwNJiua7aAPYaG+g8YHlMZjDlvUw63K5v2ZIW9EH299mrnzRfUPC43GAXvQJIXMudD2yr58pZ9LEU7DdqfQN+xcViTUArdXZlBbK9NrVSFJC2Ykre4AsLWOpuLB0EBAQEBAQMEwPKVAdxB8tdY0xFonw9wy8VaYYWO79ajkYGqjUIOR9\/stuzD\/d4evgAg9Jsd1VBzezMMie82nyFz6SXBTqvCl7QzxhwTPrPaHBbIxPVVqVTgrC\/unRvkTOnlr10mHlOHknDnrafj\/d9SUzjvcRO2YCBT9J8WtOiWLZXBBpc+sHLw338CZLhpNraUPaOauLDM71Pp9XPYXG1KtBMPSp1GX\/yK1r95izBee\/+0s2x1rabTP0hysXJvlwxjx1nX81vn5l1VPaKsQqJVJ5NTqIAOZLACU5rLu1z1ntWJ\/ZOE1TswEBAQEBAQEBAqekAd6ZpUiRVbKRlbLYAi7E8BwkuKYi27eFPmxfJjnHjn8yVstawpgVyrON5S9iOF\/Ga3ms2\/L4S8eMtccRlnc\/JtBvUPgot\/ETf\/Ss0Tt8BAQEBAQEBAQPLuBqSAOZ0hiZiPKPtDEFVW29nRB\/EdT8LzasbR5b9MR9YSCARY6358pql056rVFDGAKoVcQiKABYGor2J045T9JPEdeP6OXe8YOXHwvEfu6IGQOozAhbUxVKmhaqwUcPxZhuyjfebUpa86qizZ8eGvVedOEx+0qmJqDNoqXyDmOLHx3acJfpSMVderzmXLbmZItH6Y8FbAgjdMVzanu3ycKLVdFsfpLSFNUrsadRAFJIJDW3G4kGTj23uveF7i+0scUimadWj9m\/E9LMKvdZqh5KpHzawmK8XJLfJ7X41PE7+kKp+lGKrErhqNj61GA58h6yb8NjpH57KU+1eRmnpwU\/yrKGHrPUNTE0q1YIbVADZl4js78vHS0mtala6xzpSx4s18nXnrNojzHq7fZuIRgBSpstNRoShpC\/JVIufP6znXiYnvPd6bj5K2jWOuo+mlhNFggICAgICAgICBgwKnYZu2IZu\/wBcytfeEH7MDwsQfUyXL4j4aUuJO7ZJt56pj7en9ErG7UoUtKlVEPIkX+G+a1x3t4hLl5WHFOr2iFHgMG74hquHr1OpYhnLXYO19UXNvFgNeF7Sa1oinTaO6hiw3vnnJivPT5nfx+EfJ1AlZ12YCAgICAgICB4qKCCCAQd4OsMTETGpczjcHiCzUcNUDItiRVv909wVCONb8bcNOctUtSI3eO7kZ8WebTjwW7fP0n5T\/htSltS3fwx8wdfgsxvB8JZivtGPWqq6Q1McEU1lpWR1ZatK91YbuOnwk2GuGZ\/LM\/RR59+ZWkTliO073HxF6Z1rD7umTxN2F\/SZ\/B135Yj23l1rojf1aK3S3FN3eqTxVST\/APRMzHFpCK3tjk2\/TqPttXHrKrZqjM55sb\/DlJJmtI1WEFaZORbqyTMrXD4dVAJsLcTYayne8zLuYOPXFHdMygjQg+IsZFuY8rvRWY3HdVbSw4teWsN58ONzuPWPzI+x9lNiKmVeyq99+Q5DxMny5Yx1+bncTiW5OTpr2r6y+hbP2fTooEpqFHHmTzJ4mcy97XncvWYOPTDXppGma+DBZaiko66Zh7S\/hYcR9OExFpiNNrYom3VHaUkCYSswEBAQEBAQEBAQBgcxtM1RijTw5CtXpr1jb8gUkZ7c7aSzSKzj6r+kuPyZyRyujD5vHefhr1+ulngNi0KWuQO3GpU7bE87mRWy2t\/pdw8LFijxufjPls2htWlQKK97uQFVRc8rnwmKY7X3pnPyseCa1t6rATRaICAgICAgICBoxGHz6ZnX3DlMzE6aXp1esx9DC4VKa5UFhqd5JJOpJJ1J8YtaZ7yY8dcdemqNtfalOgmZzc+yg3seQ\/rN8eObz2Q8nk0wV3bz6R8UDC7GNUiri+251WlchKYO4W4nnN7Zen8tP3VcXD97PvOR3n4ekN+O6OYZ1IFNaZ4PTAUg\/nMVz3rO9pM3s3j5K66Yj5w4naGzalB8tQaHuuO6w8PHwl+mSMkbh53Nxb8e\/Tf7SkYS0hyRK\/xtRp52spzKfZtYed9fymMOmPaMW3E+iqwWKqZm0KZdxFx6HnJZrFvKjTJfHO6ytNoVyaSk6E7\/AJ6zTDSOtb5uW1uPEz5l2XRbCKmGp23uA7HmW1+lh6Spnt1Xl2PZ2GMfHrr17yt5EvEBAQEBAQEBAQEBAQMGBy2EFericU1IhFzLTNUjMVCDVUG65Otzu0lq3TTHWJcXF73Lyclqdo7Rv6fBaLsCidahq1j+KpUqH5AgCRe+t6LscDHP65mfrMq7auy8F1lKkyur1bhWV2NgOBzE6HcJJjyZIrMx4VeTxuL7ylLR3nx3dKglbe3WiNdnqGSAgICAgICAgeKiXFtfQlT8RDExuNKXaOyKCgVCCz9ZQGaoz1CAaqaDMdJNTJbxHhz8\/ExV1aY3O6+Z36wvRIXRIEbH4JKyFKguD8QeYPAzatprO4RZsNM1ei8dnAYnDth6zUmNwLFW5qdx\/XKdCJjJTqh5qa242acVvHom5lZbNqDK2pidw6vXS9NWQ2pUl3An3jf5SWJvbyozGDHO6x+7TiquYEGSUr0ztW5GWMlemXW9Dcfno9We9S7J9z2T+XpKnJp0238XY9k8j3mHonzX\/wCh0EgdQgICAgVGD6RYd0D5sgJqBQ2pKoM2YZb6FSrgb7MLgG4AS8JtSjUYoj3YAkjK62tluNRvGdbjeMwvaBMgIGjFYunTGao6oObED4c5tWs27RCPJlpjjd50panS3D3si1av+Gv9dZNHGv66hz7e1sPikTb6QwOllEftKdekObpp9Zn8Nb0mJYj2tj\/nraPsucFj6VUXpur+R1HmN4kFq2r5hfw58eWN0nbXtXaCUabO53DsrxZuAEUpN51DHI5FcOObT9o+Mo\/RzCtToDP33LVH95ze30m+a3Vfsi4GK2PDHV5nvP1kx2MdnNCgQH0NSoRcUlP1c8B6mYrWIjqt\/wBmXLa1vdYvPrPw\/wDbXW6P0Dkclw6EN1pY5iQb9onQ\/lwtM1zWjcR6tL8DFOrTvcevr90PD9IM2NNEMrUiAqFbd8C978RvHwkk4P4XV6q9faG+Z7re6+n1dKJWdcgICAgICAgICBC2nhy4RRu6ymzHkqMH\/lA9ZvSdIM+ObxER8Yn9k2aJyAgcT04AFakeJQ\/Jv7mXuL3rMPOe2e2ak\/JSvibCTdHdTtydRpPwOwMTWAbSkp3F73I5gCaWzY6dvKfFweRyI6vEfNJr9DqwHZqo55EMnz1mscuvwSW9i5ojcXiVbhalbB11Z0ZeDDgycbHcecltFc1NQpYrZeFmi1418fn9H0XD11dVZSCrAEEcpzJjU6l6+l4vWLV8Nsw2ICB4qpmBU3AIsbcjArjsGh+EbiNFpDQqFNrLxAA8hA20dlohvTOVu1rlQ3vkvewub5Evrc5RA2tjVUHrLU8oucx0tzB4iZiJmdQ1vetI6rTqFJV21Wrkpgk03NXqaKPIfryliMVad8nn4OVbm5M89HGjt\/ynx9m\/B9Gad8+IZsTU4l75fILy85i3It4p2hJi9mU315p6rfPx9oXVKiqiygKOSgAfKQTMz5dGtK1jVY09OgIsdRyOsxHZmYie0qXG9GaLHPTLYd+DUuzr4j+lpPXkWjtbvHzc\/L7MxWnqpuk\/Gv8AlVnYWMSoKualiivd64vp4gE2B9ZL77HMa8fRR\/AcqmTr3F\/qnPj9ogEfZEvzFRT8ryOKYZ\/m\/otW5HO1P8KPtKowuNxlO1IrSw7MSTVrhhndjqc3dJk01xW77mflCjjz8vH\/AA9RWZ9Z9fuuKHR5nIbF1nr8erF1p\/Ab\/lIZzxHakaX6ez7Xnq5F+r5eIXH2CldGyJen3DlHZ4acpD1W7xtf9xj3E9MdvHbwkzVKQEBAQEBAQEBAQBgQ620ERiHzLyYhipHvAWHkZtFJnwhtmrSdW7NNXbmFVSxrUyP3WDH0A1m3ub+NI7c3BWN9cOF2\/tFsRWvlZQLKiHvW8RzN\/pOjgxxSjy3O5NuTm7RrXaI9XRdHejQW1WuAX3rTOoXxPNvpKubkb\/LV2OB7Min8TL5+DqQJUdtm0CNjsFTqoUqKGB+R5jkZtS81ncIs2GmWvTeHPbPdsFV6mob0KhPVVD7Lfhbl+jztZvrNXrjz6uVhm3Cye6vP5J8T\/h1IMqO0zAQEDBMCq2vtynQ7OtSoe7STUm+6\/KS48Nr9\/RS5XOpg\/L5t6VjyrqOxq2JYVMaeyDdMOugHvePz+kknLWkdOP8AdUpw8vInr5M9vSsf5dHRoqoCqAoG4KLADwErzO+8utWsVjVY1DZMNiAgICAtA11aKsCrAMDvDC4PoZmJmJ3DW1K2jVo3CmF8IwFycM5sLm5osd2p9g\/KS9skfP8AuoRvi2jvuk\/0n\/S8BkLoo9PHU2qNSDAugBZddAf0PjNumYjc+EVc1LXnHE949EmapSAgICAgICAgIHio1gTYnwFrn4wxM6hQvhK2IqutVylKnl+6pMRdiL2ZuOlj6jzM8WrSu6x3c22DJyMk1yTqsekf7esVRwWFXMKdPOB2Ftmdm4Wvc8tYrOXLOts5KcXi16orG\/T47UPR2m4rpXqLm601gDa5WoNSbf5hprvlnPMdHRX0cr2dW3vozZI31bj6TEu8E5707MBAQIm0cClZGp1BcH4g8CPGbUtNZ3CHPgpmpNLx2UeF2jUwhFHFXanupYgXItwD\/r475PalcsdVPPwczHyb8Ofdcj9Ppb\/bo6NVWAZSGB3EEEHyMrzGvLr1tFo3HhsvMNmqviEQFnYKo3liAJmImZ1DS+StI3adQoK+162IJp4NbLubEOLKPdHP9W4yxGKtI3k\/ZzL8vLyJ6ONGo9bT4+0J+yNh06Pa1qVD3qr6sSd9uUjyZbX7eizxeDTB382nzMrUSJdICAgICAgICB4rUlZSrAMCLEHUEcjMxMx4a2rFoms+JVR2O6gijiK1MW7KnJUVfAZhe3rJPeRM94U54lqxrHeYj0j\/AL7qfolg6qYisaoe4WxZr2ZiwNwTv3Xk\/IvWaRFXO9l4MtORecnw1v493YSm75AQEBAQEBAQEBA8dUNeGbfbnYC\/yEMa8oSbLphw2Udk5hxLP+JidWI4X5+VtuudaQRx6dUW14MFgAoZSNBVeon8Rzem8iZtbfcw4eiJj5zP7rCaLBAQEBA1V8OjqVdQyneGAIMzEzE7hpelb16bRuFFU6MBSTh61XD39kEsvwuPnLEciZ\/VG3Mn2XFJ3hvNf7MHZWP3fbNPcF495i\/4H4Tm+Pff0ZodFlLBsRVqYgjgxIX4XJ+cTyZiNVjTNPZdZt1ZrTb6+F9RoqoCqAoGgAAAA8pXmZmdy6daVrHTWNQ2TDYgICAgICAgICAgIGLQMwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA\/\/Z)\n","8242cc59":"# ||Part-2 Splitting the dataset...||#","8fabd5ac":"**Error rate=(FN+FP)\/Total**","4da904d8":"# ||Part 4-Building ANN model....||","72e4bfbd":"**Seperating independent variable and dependent variable:-**","301950fd":"\n# ||Part3-Creating ANN....||#\n\n","602237b2":"# ||Goal:-||\n          \n           Can we build a classifier which can determine whether they will leave or not?\n\n\n","ee96f08f":"# ||Working||#\n\n\n![](https:\/\/www.analyticsvidhya.com\/wp-content\/uploads\/2014\/10\/flowchart-ANN.png)","9fa82f8c":"An ANN is based on a collection of connected units or nodes called artificial neurons, which loosely model the neurons in a biological brain. Each connection, like the synapses in a biological brain, can transmit a signal from one artificial neuron to another. An artificial neuron that receives a signal can process it and then signal additional artificial neurons connected to it.\n\n\n\nIn common ANN implementations, the signal at a connection between artificial neurons is a real number, and the output of each artificial neuron is computed by some non-linear function of the sum of its inputs. The connections between artificial neurons are called 'edges'. Artificial neurons and edges typically have a weight that adjusts as learning proceeds. The weight increases or decreases the strength of the signal at a connection. Artificial neurons may have a threshold such that the signal is only sent if the aggregate signal crosses that threshold. Typically, artificial neurons are aggregated into layers. Different layers may perform different kinds of transformations on their inputs. Signals travel from the first layer (the input layer), to the last layer (the output layer), possibly after traversing the layers multiple times.","2376305c":"# ||In ANN neuron look like this!||#\n\n\n![](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxEREhUUEhIVFRUXFxMaFxUYFhoaFxkYGBgYGBgYGBsdHSghGRomGxcWIT0hJSkrLjEyGSAzODMtOSguLisBCgoKDg0OGxAQGzAmHyYrLS4rMC8tMDU1Ky0tMi0tLTIvLzM3Ly4rLS0tLSs3Ly8tLy0tNS0tLS03LzMtLS8wNf\/AABEIAMIBAwMBIgACEQEDEQH\/xAAbAAEAAwEBAQEAAAAAAAAAAAAABAUGAwIBB\/\/EAEUQAAICAQMBBgIGCAQDBwUAAAECAxEABBIhMQUGEyJBUTJhFCMzQnGSBxVScoGRstEWU2LSk6LTVHOClKGxwSQ0Q2Pw\/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAECAwQF\/8QALhEAAgECAwYEBwEBAAAAAAAAAAECAxESITEEE0FRYfBxgZGhBSKxwdHh8TIj\/9oADAMBAAIRAxEAPwD9xxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYz4wNcdf54Biu9HeIwaqKQToIIJY4dTHuAJ+kADeQTdRltO3HpI\/tl32r248WoTTx6dpXeKSVSHRRUbxqw83r9YP\/wC5H2TsAPpJdNIwfxRMHcpV+KWLGt3XzGqIrj2znoewJEl08r6jxGggeGylF1cxksx3fHcScgV1454Aq\/19I8Mj6iEbV10cCiKZgQV1KwqzHapKh9pI53WQQBnHtiSSWfXCZGaLTwwOqxah45P\/AMznaQFpnCgHzDgAWctJe6xKSRichH1SakAoDtZZlnK3YsGRR\/A1887zdgMz6p\/Gr6TEkZHh\/AFV1BHm5NSN19h05sDlH28Qm2CBpTHBBK6b\/MEkDbEQsD4klI3BI9LPOB2sF1OrCwSmSOLSE+ew4kaYJtSyI9pV9zVdcm6GeE7rukiSQ6pom8GKGao1IkSLd4bANeyQbm55HPTPvaXdXxW1DCcr4yaVfhvaNM7SIDZ86sXYMp+IGuPUCt7c7b+kaWQoSjQa7QxMY5SUbdPpSdrLW9DHNRBHW+OAcv8AvZDu0eop3QiGUq8bsjqwQkMGUg2Dz7ZXy902ZZwdST4+o007XGvDweCQAAR5SYE\/hY5POXfa2iaeCSIPsMiMhfbdBgVJAJ68+t\/xwDJL2pN4Z0ercjVwyaX6xGaP6RA2ojTxk2kVYJV1HAJPoRlzqe8myQqkLyIsyQuybi4ZttsFCndGu8bjuBFNwa579t93otX4DS8SwSxypIoogqysy9fgYLRUk+h6gZyi7vumokkj1TpFM6ySQbVI3gKpKP1QMFWxz60VvAOen70blRvCrdq5NK3nva6O8e8eXzKSh9jyM86XvNLIJWXRyFY3mjJ3pZkjkWMDaDe02W3egU54XumQ3l1DCMas6pU2LYd2Z3UseqlnYjgVdc8V7fusTp54PHI8adptwQeVmlEpQqSQ8ZIoqeqki+cArO3+3PpGllKEo8Gt0MTGOUlW3T6Ynay1uQxzUQR1v2By476aOSXT1DM8Evi6cRyoT5WaaNfMoIEi80VawRkfUd02dZwdSfr59NO31a8PB4NAUR5SYE\/hY5POXXamieZFVZAlPE5O3dfhusgFWKBKgfgT+OAZrRdstqX00coaLUxakpqYVdlH\/wBtqHVhRG+FyiupN9K6g5YRd5S7oscDOkjSqkgLUGjD00tJUcbFCA4LfEtgXxK13d6GXVafVm1mg3jcON6Mjpsf3ALlh7G66nOPY\/d6TTOQuqdtPvd0gKr5C5LFPEHLRhmJC9RwLIFYBX9gd6ppYtC80KA6xWKuJDtD+G0qow2cEqrV1+A83QMzsrvQJ4o5QiqGOo8S5L8NYCVdjS03mocftAixzniHuio0UejMzlYmiMcgAWRFicMoBHqVBUt67j06ZN0fd2GN9QwBI1G3cn3FAQRsFH3dwUE11oe2ARYu89mDfAyjUxs8B3AklU8Xw5Bx4bmO26sPKwvpdJ2l3iMsWh1UiNpoWm00m9pgFaOSGV2EgUgUtL8XyIo2Bd6HuwY0gRpvEGmRl05ZPMtoYg0hDfWMIyV4CjzGxdV5\/wAKD6NpNMZQyaUx1ujB8RY0Maq4uqKsb9\/l0wC57O1Eki7nj8Oydo3WxW+Cw2jaSKO3ki+aPGS8rO7\/AGW2liEPimRFJEe4eZEs7YyxJLBRQBPNDknLPAGMYwBjGMAYxjAGMYwBjGMAYxjAGMYwBnOeYIpZugr0vqa9PxzpkPtb7I\/in9a5KV2Dz+tYvdvyN\/bH61i92\/I39sqMZ0bmJW5b\/rWL3b8jf2x+tYvdvyN\/bM34zfSCm7y+CGAofFvZSbq+lfLnKyTvGIY90qMVVV8SQFepgM97eOKUj5Ej0siu7iTc2\/61i92\/I39sfrWL3b8jf2zFJ208ckqyrdTogAIO1WXSgdACw36i7I46Xe0HvoO2TIVUx+YhGfa1hFkaRUPIFi4yPT5XyA3cRc1361i92\/I39sfrWL3b8jf2zKa\/tpIZNjrQ+r898U5Zb6ejqq\/jInvnjUdsEB\/q2GzhmDL5XAjJXkUeH60fhPTglu4kXNd+tYvdvyN\/bH61i92\/I39sx0\/azswEaMKlRSTVNcrxFDY8p8hbjkAr71nP\/EflMhjqPw4Huza+IsjHxKU7VGyt3IF2aFkN3Em5tf1rF7t+Rv7Y\/WsXu35G\/tlQDjJ3MSLl3p9ejttUm6J5UjgUD1HzGSspOyvth+4\/9UeXeZTiouyLIYxjKA8SyBQWPQAk\/gOTkT9axe7fkb+2de0fspP3H\/pOZPtyaREDI22mG61DAqeDdsoFdevpQBJAzSEFJNshmpTtOMkAFrJA5Vh16emTMx\/YOp8RVbxBJUzLvAAUlZdp20SNoIrqembDInFR0CGMYyhIxjGAMYxgDGMYAxjK7U6vUKxCabeo6N4qrfHsRxkpXBY4ynl1+qCk\/Ra4PPjKa+dVzn533s7wdoSRadJ4206v4xJUshm2bNti90QIZj4bGz+AORV\/503Uei6o22ei69WNKOr5n65kftCIuhVau16mhwwP\/wAZ+Wfo77feHUGB3donjZgvmkKOrIF2DkgMGfyj9mwPiOfqGk7RhlsRyKxHVQfMP3l6j+IytGe8gqiWQ2qg9nrSoyauuXqV36um9k\/Mf9uP1dN7J+c\/7cvM8SvQJomgTQ6n5D55tvZGFjCdt66KOXw5oA7KOvlIpwCQCaNGhY+WTOyOzPHDahUUiX0ci12AxEcKeCAfU9T71mb7x65Z9Q8iBgDtFMKNqKII9ORmu7jdoq0KwhX3R7yzV5BudiBd9SD0yzm7XPH2Tb5VdrnSbWFadfyeV7qxjpptP+Vf9A\/Y\/wD1x\/kX2GdF7ugMriCAOu7awrcu821HZYs8n3zTYyu8Z7Figk7IduWSMmq5N8WDXw9LVT\/AZxfu8GZnMEJZwAzGrYDoGOyyOB19s0ufDjeyFj861mlh0MlPFvZvPYEfUuTuNKu57B8xs89eTlh2LoYtUhePTRAIRH5goNKtgCgfLUrCv9Te+U\/e3tJZ57COhRQjK4AYMGYnoT6EZbdwe0goaDY7Mzs+4AbVXYotjdjlSOntlsbSPGpfEJT26VG6w8PHL9l5+rpvZPzH\/bj9XTeyfnP+3LzGV3sj2bFX2fopEk3MFA2sOGs2Sp9h+yctMr+2+2YNHEZZ32oCB0JJJ6KoHLE+w9iegys7td9dJr3McRdZAC3hyLtYqDW5eSGFkdDYsWBeZynd56kYkna+Zo8Yzx4y7tu4bgASt80SQDXWrB5+WCxx7R+yk\/cf+k5j+804SAlmCjdGLaXwl5YABpKJRbI5APtXObHtH7KT9x\/6TmL7d10a1FJMIdwDb95UkBqIUqQQeLu\/bqCc2paMhn3uwzswfxI5Iy6ANG5dSVeuBQC0ABQ4sn2zd5iu7DKY0KyiUeKfOGdgfrem5yWNdOT6Vm1yKvAIYxjMiRjGMAYxjAGMYwBnzPuVuq7A0srl5IUZj1Yjk0K\/9gMlW4gsHYAEnoBeZTvj252f9HTxkGpWU3EibSWK9XVrGzbuFtYI3V1NZaP3X0dGoEB966fPnMh3i\/R0FjjbRLukTxPEDsA0u\/aSwNBQ4KDy+VaY9KGRVsqcnDOXBW\/Zvsyg60VUdo3zZ47Eh0GtR00mn+j6iPzbXomVDQNuS3iL0HmvaasUaa60bGQBJEWWiaimHNr8QidrKOKJMbk\/JttHMn2P3f12jlXUSp4SlWjoOGdd7ITv2NQB2KBTMOti9oOh1sTOhkvUEEr4nh7JAdnov1XiRzJ1BZFPFWOCvRse8lRjvMvsc3xBUY7TPcttc+f5L\/RxqxqGeaJ15aGQ7yL91kttvzRgPY5K8XVJ8Ucco94zsb8jkr\/z5Ri5Nu\/UiSMkeFqNi2rHgK7JtaOT0vgHpweDPk+nwgfWRzIBy3gnxR8yqyAMP3Rf+k5MoZ6rzv8AXL3MYy6Py\/BVd4OztPO4csdK5IEnioVVh0+L4C49wxvofStT2Xo4oY1SIDaPW7s+rE+pPvkTT6ueRd0f0eUcj43TkdQfK1H5HI36te9w00cbHkmDUMhJ+dRqG\/8AFeUcVp39ikKUITdSMc3q7GgxmeMuuj+FHlHs\/g3+dXSh\/wCAnOXYvZq6mBJ5ml8aQb2IlcGFj1ij2kBBGfJVc7fNZJvOUcPE6YyvwNNjMV2F3sk1KVGUZk8rSBXkL0a8Tw1C0rVu4YjnLTxyx+sm1XzVNM6L\/MRlx+fNHRktSm9i9D73n7vJqRvUiOVeN56Ff2X+XWj6fzx2O+j0qeHE\/iN98oDI7N0tggNfh6YRdFdtFI5HRpYJ5GH4GRCRnefvFpowVBYsAD4axvvo8DykCh8zQ+eFBvKzffmYqnSjUdWyUnxJH0+Vvg07\/JnZUX+Vlx+XIeq106nazxq5F+FGjSyV72SoUf6mWvnkabtlHFy6lIE\/YRvrG+ReuCf2UF+zZWN2hp5KijlhijbkqXXp6vqDfmY+kVm+rki1GkaT1t33yLSqdTPd7tDre0QFh3TCE+IQWSuVKhUKhUL011yKvzm8i9w+5OqbUrJqI5YIow\/O8xyOzKVCqUYOqiyxNi6A5BNbrtXvPouztOGVxKSwCpG6s7u1kljfHAJLH245oGH3P\/SDHrpfBkhMEhDFPPvRgvUBtqkNXNEdLoms4627dZS0a0KKlT3icn83iXn+GYf8zV\/+e1X\/AFchv3NiOojm8bUVFyqnUTM26+bd5CdlV5Vq6Nkg0NH4q+4\/nkZ+04VlWIyASMLVTxu62FPRiK+EGxwa5zeNSpwbOs99o\/ZSfuP\/AEnM3qpEj+sO6\/KnlDsTZ4G1bvk9a45zSdo\/ZSfuP\/Scw\/eXRGTayxozAqPPF4tgk+VV8aOiDTXfTJpaMMutBOHKsAw86imUq3DDqCAc0+YvuzAyRorLtPi2QEEY5ksUokehVfeP8OmbTIq6oIYxjMiRjGMAYxjAGMYwBldqdXqFYhNMHUdG8VVvj2I4yxxkp2BTy6\/VhT\/9KBwefGU18628\/hn513t7wdoSQ6dJ4206yeMSVLIZtmzba\/FEKZj4bGz+AIz9bdgASegzKd8e3ez\/AKOnjINUspJiRNpLFat1axs22LawRuA6msrWd6Ulp15HRsksNeDw4s9OZmf0Ya2U6iTTks8BhdyrEsqMHRQBd7Q4Z\/L0OywODeu1eh+jNvDMicDxhyYgOiyg\/aQfM8pZ5A8yw\/0f9q6GQPFpoDp3FM6NRZx03h7JcDgcmxY4AIvYEZXZW4U0sWL7k\/EbVK8ngwdOX9MZ2hBHG5fUQqqycSMlhWvjxI3FMCRW6JuvVdxB3T3Oo0gUxuJtNXWQkug9CZFB3R197axHU2LIlywfRwRt36Y\/FHW7wgeu0fei\/wBP3fTjgQzv0e0wVJpGrybuYi3KmNya8M30Y0CRyF6dyliVvro\/wzzMOHPtflHXUTxE+I4k0z0PrxRRl9CzraMn\/eV14rJcfajIAZtuw9J4+YiPdupj\/Ekr\/q9MjaWUJbae2QH63T1Txk8kop5U+uw8Hqv+rzq1gba2m4ml3bDGSnThnlA4IU8HcCbpepylk8mv1+PcvdrNd\/n2J2t1hYiKEjewBL8ERoejn0JPO0epBPQHOK92NLRGxqPxr4sgSQn4mlQNtkZvUsDfreQYOxdTpbOndHslnVhs3k9SQLXd6DbsA4u6zp2Wmp1UKag6l4WlRJEiRY2jQMNyq25C0hogMdwvnbtyk0kvld0Xg2\/9LMhd4e7kalpUjXYTciUQFP8AmKV8yfNl5HWiNynjp9W8VKks7kc+EKlmXjgsjWHjPo6Mg6dc9Q9vajUL5lEQBKsFYgMVJVqkCswUkGqUHp5sitCkJUrOsMdsd0UR3QkgfEzg74TXNjg0egteqF5Rwz8u8zllhUrxLiDUaydAxKNHzuED7ZSQfhbfYQ+hAYEH72eP8TaLTKyqCrit0W23JY1bMLB56tuOVEsmmlbaedQWAaZmZ4m2A\/cNhzRP1RW155HDGQe3Y9IrRgB5WFmVVJG3pvlTgxgc0vwem5RZE7pN2wvwWX5y9xvLZ389e\/oS11c8r+WLfOV3IzkCCFTwGCglrPIBZQzUapbA6O7QKyGcbh5nESqXBPJeaWUlFHF2wXgUBwBlZCmmVQxkaPduIWAuJpyQSS7oAGJu9qClrhqGd9HHtVblQqpLJA8Z2g3YLOigNJ67irUelkbjDil\/Nfr9vElN9squ3u6Op7Rj3hwhTmJZGchyRR3Ei0WujBF5+7QtuHcz9G8sc4l1whZEDbIgfEDMwK7ntQKAJoc2SDxt5vO8nfv6JED4G6VjtQBvqiepJYgNQAJ+Hnget5Wd0\/0miaXw9aIoQQSkwYrHY+4+8+U1yDfNEccX51XC66v\/AK4EqNDeK7+Y2f8AhrQ\/9j03\/Bj\/ANucD3R0PirL9GiBStqhFVAwN79oAtunJuqFVznr\/F3Z3\/btL\/x4\/wDdnEd9OzzKsQ1MRL1tdXRkLE1sJBO1unWgbFEnjOlKvwv7nXkW\/aP2Un7j\/wBJzK9twu8RVN24kfCIyR7n60FKHzBPsCc1XaP2Un7j\/wBJzMdp60wqG2Fxuo+dF2jnkl2UdaHX1xS0YZ67DgeNIletwZbp3cfGDwz8n\/46DjNdmU7I1fjBHoC5AKDq\/SSuShK3x0BOavK1dUEMYxmRIxjGAMYxgDGMYAyt1XYGllcvJAjMatiOTQr\/ANgMssrdVq9SrEJpg6+jeMFvj228c5aN75A4P3X0RBrTxg+9dPnzmR7xfo7CpG2iW5FMniB2ppd+0l7raHBQeXyrRPShmul1+rCk\/RQODz4ymvnW3n8M\/Pe9XeLtB4YI5o20wk8UlkZkaUIUC8fHCDuJKE2ePSxldob3EnUd48Vc6thVR7RBUnaV8i9\/R\/3Tn08zajUAIfDaNIwwY07IzM5FgfZqAAT636VupxakVfB4ur46X6Z+afou7UnOpfTs7yRGJpPOzP4bK6KNrNZAYO3luvJwOufpc5G02aFGyOoFcnMNlcHTWDQv8SVVbRNVmnLjbwy9jj2ZHthjXYUpEGwtuK0B5S1ncR0uzeQdRpTBuKLvha\/Ehq6u9zxj1vm4\/Xkjmw07swoYYzG5dNibXYksy0KYk8kkc2c9a3VLEhZ+grgckk8BVHqxNAD551XeI8+ywmb1LJGEos27jSTIw8Sz0gZjYZfUFgRSncLUFvkcU2lZpZNviOQZJBxBJXRW4uBl5AY2p+8STx2k7JYb53QMXDeJBYpUNE+E3G2W1DE2AxHUUCPHZ2ubVVEZD4JDbZuVfUKvBUdNhHRjwT1XaOnTfLLNce++fhz2zz14d98vGfH2o2qtNOSlGpZCBcbeqKOQ0nz5UdfN0PyPu8UGyLVaiOI9YwyN1JLbXdDIu4k9G4+7tzjq+wXiIk0TLGyihE32RHXYK+Ffl0HNBSSc+aDW6\/URJPGNPGrqGWFw7M4ItbmVgIwf+7ehXXoMKmG146e5vDFf5tfYjaruwmmVn0YCActEZXjUgddsikNGfxJX3Au8r07bMo2\/SJIUYAbJUDyOxq0i2BWog9bLkMCABRL9dSaw2yNEgP2Z2EhlJBLFyImYEepYAj4WNNnzXsgI2yaZJXsbml8ZnX18csVUIOPLTV0Wrzsgm8p5vny+vrY5ZtXeHJfU56ttTFGIDEqRsQY0RgZIvMNpZiQIk3dKJaztDDqO+j7ch0IaHl5CbMjhw5Y+uoNE36ArYNUKyrg8Ft0aalN1ES+NMrQyHpUIHDChQ3KyoKGwm8seye3tNplOnVFKEkLRUoGb4kkkHlb5H4yOCt1u1lC8bYW+LSyv14mcZZ3vb38ix0GglBEunSmb4nlKrEyk2RHGm5ox+G0k8tuOeF7VmlYIZCHLFQI9qackdQJzuZz14Sm4NqMgL2dAhtwXibgxQJKvh381AadB7MePRa4Ft9IRo6jmkkiYClk0jyxlflsRSR+JOYSS1tfrb+\/boaxvpp59\/ch9udwY9VFTysJwbSXzMF4oqQzFnUg\/eYn2I6ZE7l\/o7+hzjUTTLK6BhGqqQqlgVZySSS20lR0oM3WxVd3o726nQoEhoGQ0viLKdgAJLqJUU\/IKS4Fg3Q2mH3G\/SBqjOIdWzTrIG2ssQ8VXVS1BYlG5dqt92xXWs82th36Us5cCVKhvErfNwP1usjP2fE0olZAZFG1WPO0WSdoPCk3yRyeL6DIP+Io\/8nVf+Vm\/2ZBk74IupjhME9Sjyt4MgYMDR3IyA+HVecE9TYHXOiNOpwR15F72j9lJ+4\/9JzHd6JimnJDhDujAcsigFmCglpI5FUc9djH29xse0fspP3H\/AKTmR7fsRhlbaVZauYxKb4pmCOfX9k810yaWjDPHdXVRsqosyyOrguQ6Pyzg3aIg2kn9heh49c3WYzu3IzIhbr4p58RpAfreod0UkH90DNnkVeAQxjGZEjGMYAxjGAMYxgDGMrdV2Hp5GLuhLHqd7j0roGr0yVbiCwdgASeAOScyffbtjs\/6PH46DUrKS0KxkEnaOZEcMNgAYDcD96ubrLZ+7Wmo0hB9D4knHz+LMf3h\/R1tjjbR+aRTJ4gd6MnibSWB+FWBUceUEE+wytWypycM5cFb9m+yqDrRVR2jfNrgWn6O+0dAwki00DQSABnV23u69AwkLMXUE1RNrfQbheykujXJri+BfpeYP9H\/AHS1GnmbUagBD4bRpGGDGnZGZnI4H2agAE+t+lb1jXXM6Dk4LGrMttipKtJUpXjwbIy6gpEHm2oQoMlNaqatqJAsDnmsgRmz9Jn8iqD4aNxsB43sP8xgarqAa6lr4z6tZCsr34IYeDGBbTSdVcL94CrUdON54AIlQ6VmPjaggFeUjvyRf6iejSV97oOg9S3VbDr30X3OG99O+p5WB9Sd0qlYfuwnq\/s0o9B7R\/m58qxu8OiRAZVYISVJW63sOFaP2nHQGju+FgRVTPpzy8adRt\/znB2fii8GT8eF\/wBR6Z30vZqo29iZJP8AMfkj3Cjog+SgfO8lScXd+nf9GHErL1KfsntSbVWhIhK\/Edv1r0atUaxF6WG3EE1Q4YydL2XqYI\/Bhmj8IcRl4y0kaeicMBJtHAJrgC9xsn7252OzkTQMI9QnKsfhevuSD1BHF9RkbTdvaqWHxYtESNreVplVnZbH1QohkLAgMxWxyAQQSqWkrx9OQhdZS9Sr1\/ZY0K1FIXLWQrsu+\/vOWZWTbuI+6CSwAJJAMXTSOWZGIeRjZ0zRGOeXjjxCDtjhHoB5a4Ykkg9Ox1M1ajUTbpJAG8OAM8igjyrwCYaBI6BhZ8wtr0B0hZPDXTRRR3dzUzbv2tqk23ruLg51OagsLz696+Xqc2Fyd9Onf3I2q008oA1ELCMfCmmdfLx1LkpJY9kA9jYyOnbuliVtNqK2ba5hZbU8BZItoon9pRtb0okDPc+mEYG7XLIB1ilm8NT8g6ndXyk8TJWg7e0AUx3FEOhTybG3cUrLaPfsDfuBlNVo2umVvW7L6PW3iV\/Z76mIqkJPhMWEZ1D2rCrCgruZX9rIBAPlsHPphdW87ujs1tp78GGUnr4Min4zyaLeb7yi7HnUaTSR8LC0kRItY4ZRJHRsFHRQWUGjRNrXB4C550es3L4fi6iRXsRs8QdJl6kMJFB3gXY3AGrFchb6\/Ml45f3vNFNMn9Sw1vYGh1+nMWzYA12oCSxygdTYNPTH4gQQ3qDnDup3D02gkMqvJLJRUNJtpVNWFVQBZocmz6CgTmP79z6vSJG0RkhErGMuKXy7XcIv1jsvQ1z5QG2hbyv\/AEdd5NYmqWLdPqUkD3G0m9gVXcHVpW8vSiNwB3e9Z5taVNVlHV8\/2WVaG8UZR+bhkftmePDXduobqAuuaFkC\/bk\/zyr\/AFtP\/wBg1H59N\/1srpe8WqGqjiGhlKuoLC490YsjxCyyMuz0o7T5TW7oNlSk9LeqOu5f9o\/ZSfuP\/SczPaenMkZVevBosyBq+6WTzKD8vwogkZpu0fspP3H\/AKTmT7faourDzR\/CHPJYAEhPMVBo0PbmxYN6WjDJPY8DosavV714VmZVBcUoZvMQPc1+AFAazMd3fclVJcuTKTexo6uW9oV\/MAAQOetX0oZscrV1QQxjGZEjGMYAxjGAMYxgDK3VavUq5CaYOoqm8YLfHttNc5ZYyU7ApZtfrAp\/+kUcHnxwa+dbOfwz8+71d4u0XhgSaNtMJPFYsjMjShDGF4+OIHcSUJs8eljP1l2ABJ4A5JzJ99u2Oz\/o8fjoNSspJhWNhZ2jmRHDDYAGALg35qF3WVrO9KSWXXPI6NkeGvFuOLPTmZ39F3ak\/wBJeBpHkiMTSedmfw2V41G0sSQGDt5bryWB8V63tTXCZvCUF0sjYD9symipP3YFPxN6ny88q2N7K7waVUOn0WmfTu9mVnbcxRaFiUvub4qtmXbfVdwbNL2bENtASOCBaQjhwOFDznam0DpHGQo5HmBzTY6WGjGTlfkzP4lVU9pnFQwdO\/UsYHpyQPpGo5UkeWKIfsbuQg6WBbngkcCpidmFyG1DeIQbCVUS+1J94jjzNfPI29M8QxanaFRIdOg4UC5CB7bRsVD\/ABYZ0\/VIb7WSWX5M21f4om1SP3gcu317+nocyXQ66ntSGM7WkG79hbZ\/yLbf+mcvp0z\/AGWnb96VhGP5AM\/8CoyZp9LHGNsaKg9lAUfyGdczvFaIvZviV30TUP8AaT7R+zEgX+BZtxP4jbkHs+PVaaIadIFkEYCQy+KFXw1FJ41+dWAoHaHur4vaJ0XbcLVtLGzqAPI3XTsUlHI4pgRz19LyS2ujDshPmVd5+QJrr7\/LIbuSlYqdJ3T0yxbHS2PmkdWdC8hNu\/lbi2JNfwz5\/haNTcey\/QSQxOP57Vc\/my402tjkRZFYbWVXF8HawtSQenHvkgHLqrPmVdODzsVEcM8XSGBx7ofDP8FKsP8AmGe5tepUrNBKFPBBj8RSPn4e8V+OWmfKyMV9UMNtGUenMd1pdSt+sLNvX8ACd8f4A0P2chdpIOS6eA7UWtvqHYdGEoH1UgNU5CnjkNQrSanSRyCpEVx7MoYf+uQ27GjHwF4\/kkjBfyElP+XLxqK9++\/IpKDKyCSHWo+k1aBmoEo4osAeHFHysDRtT1oqaIyT3e7q6LRFm00W1mFF2dpHr9kM7EhbA4HFjMF+lXsZtPDC6SPsMu1qAXbuVqFoAEVjwaA3EgG7o0P6MNRqI9aselA2ukhkjJKx7QOJGABohtiggX5q\/DnrVKe+UIrUyVbDUVOaz5n7vWfMqvE1\/wDl6b\/iyf8ATyull7U+lRhUh8Lb9b5iYwLPKsUD+L8uVoC9t2dlTvxXqdVy+7R+yk\/cf+k5kO8bgQm7ILxigwW9zgcsWUKOet+g4b4Tr+0fspP3H\/pOZDvJKFhssFG+MWTGBy49ZQVX8SD8uecvS0YY7rMoRE3ozCW2CkULkv0duORzf8ug3GYnuyFKowIYmQDeGjewHHG6NQpA9gOPxzbZWrwCGMYzIkYxjAGMYwBjGMAZXansTTyMXdCWPU73HpXQNXpljjJTa0BUP3c01GkIPod78fP4sx3eH9HW2ONtHbSKZPEDvRl8QqSwPwqwKjjyg2fYZ+jOaBrrWUmi7zxNFG8gZGeOJioV2AMiK4UMF83De3oemKjdSDhJ5PU0o1ZUaiqQ1Rm+4fc6aGY6jVIqkIyRx2rkbipZ2IsA+QAAE9Wv5foFZSajvTp0Qt5zQfy7DdoszMvPQj6PMOfVfmLuwczp0404qMdEWr1516jqT1Z9xjGXMRjGMAzJ7pjYy+ItsNdubwuT9LkaQ\/e+6W\/jWdf8OsH3iYfG7ANHd75Hcq\/mG9R4jgdKpDyQbm9o6ZvHhmCbwizKQNu4b9hDeYjjyEf+L2vKZNLrkIQKTErRAJUJUKo0hJFi\/iGq68\/8pwCRpO6oQIDIrhPBotFbfVqgIvd8J2A16c9eKuuydH4EEUO7d4ccabiKLbFC2R6XWV3ZCatXUSFim1gxYpe\/eSGtbLAiuPLVet0LzAGMYwBjGQe0u0PCaFKtppPDT0FiOSUkn22RP+JofPAJOp06SKUkVXRhTKwBUg+hB4IyN2X2PptMCNPBFEGrd4aKt10uhzkJO8cYEm8MHjLBlA3chmUFTxd7f4WLz2veODcFO9WJRaMbVucwgLuqibni6H1J9DQFxjIPZnaiajfsDUhUWRVlkV+P4MMnYBG7R+yk\/cf+k5le1hvUxre401AshKgiwJADsPz4PsR1Gq7R+yk\/cf8ApOZbtHTTEhoJUjeqPiRmRGAsjgOhBBJ5B9TYPFb0tGQz32CjBUDCj4g43lyAHAAZyAWahyT+FmrOvzK9l6do9gd97l1LPW0Fiw6L91RwALPAFknk6rK1dUEMYxmRIxjGAMYxgDGMYAxjGAeJyArFrqjdXdVzVc\/yyiPZelljRYrUFInQ\/WUEUBVqyK8nFdeby+kWwQfUEfzyifu8zRxRvIjiIIBcVghVZeQX6mx\/I8c8Ad5eyNG7UyDdTiiWFinDtV+bjUSAtz9oeect1HGZhe6ZsEzKSFdbEZB8x0xsESWDenJ9fj5HB3aPSRFEVSdxVVBNAXQAuhwPwGAdcYxgDGMYAxjGAMYxgDGMYAzjqdOkgAcXRBHJBBHQgjkHr09znbGAUkOk0UojKqSGV2XiRQwD7mL9LO9r8\/JLH3OIOxtOrSBrbe6lQxcEbUirYS1kjwUbcObHyznJ3dZo0jMilY2Qrcd+VZ45trefk1GFvjqTXpkeHuntUKZIzwV+yK+UwiEgbZAVNKvIPAFexAF7oNBFCD4S7Qavkm6FA8nrVC\/kPYZKyP2fpjFGqFtxUVuoC\/nQ4GSMA+ML65x+iR\/5aflH9s74wDkumQGwig+4UZ1xjAGMYwBjGMAYxjAOGumZELKpYiuACSbIHQfjkJO0pC1eC1UnO1hy1jmx04vjoOvtlpjAKmLtWR9tQSLbAeZHFDdRJ8vHvzxV\/wAfLdrSKLMEjHy\/Cj+u7023xQ\/nlxjAKdO2WYHbEwIYCiDfoDxVmrY0OoRvXPcnazKdpiN11NqD0s8joLsn0Hz4y0rBGAUuo7bdQahbnaEsNzuUtfw8\/dFD1NdcnaLWs7EFCoHS7vovWwOpYgfuH8MmVn2sAYxjAGMYwBjGMA4vKRIq7TRVyW5oFSgA6VzuPU\/d\/l2xjAGMYwBjGMAZE12pdCu1C1lroE0AL\/hfTJeMAqD2tIGAMD0bs7H48wA521W0sf4dM6frQlVYI3O6wEd6ATd1RSD6V73Qs5Z4rAKqXtSRefBdhsQ+VXvcQxK\/DfHl9PvH2rPJ7YewPo8vIHOx6Fgnk7fw\/nlvjAKtu1H2qVjJJUmgHI4IU+YLR6kj3AscZ10mtd32tEyinO4g1YkKgcgdQA38fbkzwMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAMYxgDGMYAxjGAf\/2Q==)\n","d17173c6":"# ||Part-5 Evaluating the ANN||","689c1838":"# ||About the dataset||\n\n    \n-- RowNumber\n\n-- CustomerId\n\n-- Surname\n\n-- CreditScore\n\n-- Geography\n\n-- Gender\n\n-- Age\n\n-- Tenure\n\n-- Balance\n\n-- NumOfProductsHow many accounts, bank account affiliated products the person has\n\n-- HasCrCard\n\n-- IsActiveMemberSubjective, but for the concept\n\n-- EstimatedSalary","799b453c":"**Accuracy rate =(TN+TP)\/Total**"}}