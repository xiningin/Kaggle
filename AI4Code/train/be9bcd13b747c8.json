{"cell_type":{"c5ce9e4e":"code","5dfa6836":"code","6112eeb5":"code","4574b898":"code","c574a790":"code","4ec9f5f4":"code","9234b392":"code","79ca3aac":"code","9803b03d":"code","60604b1c":"code","fb97e3f3":"code","b40be390":"code","970ca882":"code","c5ee11e6":"code","05577a20":"code","abaf5ba2":"code","87f38c04":"code","b35427f3":"code","837600d0":"code","ff337d23":"code","09133ec3":"code","15ac3f56":"code","9c410229":"code","773560b1":"code","8d3c87fc":"code","96c6cdbe":"code","506afcc7":"code","48852062":"code","a2ef6896":"code","e525d2df":"code","0506343f":"code","552a115e":"code","3102faa6":"code","9c2e8c55":"code","dad44f4f":"code","56672168":"code","90ef2c16":"code","fe589d16":"code","ba64bbfe":"code","9d65a8fe":"code","1311e830":"markdown","224e01e4":"markdown","a70c3fa3":"markdown","df597a6e":"markdown","44f34ee9":"markdown","5bcb690b":"markdown","7c87f45a":"markdown","5c5b69ab":"markdown","e136db60":"markdown","d369a4f6":"markdown","00e88616":"markdown","77f8ec07":"markdown","813cafc0":"markdown","e347bcbc":"markdown","f539477f":"markdown","eefeca76":"markdown","4c685306":"markdown","72ef3c3a":"markdown","e0104b95":"markdown","468f17ce":"markdown"},"source":{"c5ce9e4e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","5dfa6836":"df = pd.read_csv(\"..\/input\/online-retail-customer-clustering\/OnlineRetail.csv\", delimiter=',', encoding = \"ISO-8859-1\")","6112eeb5":"df.head()","4574b898":"df.info()","c574a790":"df.describe()","4ec9f5f4":"msno.bar(df)","9234b392":"df.count()","79ca3aac":"df[df['CustomerID'].isnull()].count()","9803b03d":"100 - ((541909-135000)\/541909 * 100)","60604b1c":"df.dropna(inplace=True)","fb97e3f3":"msno.bar(df)","b40be390":"df['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'], format='%d-%m-%Y %H:%M')","970ca882":"df['Total Amount Spent']= df['Quantity'] * df['UnitPrice']\n\ntotal_amount = df['Total Amount Spent'].groupby(df['CustomerID']).sum()\ntotal_amount = pd.DataFrame(total_amount).reset_index()\ntotal_amount.head()","c5ee11e6":"transactions = df['InvoiceNo'].groupby(df['CustomerID']).count()\ntransaction = pd.DataFrame(transactions).reset_index()\ntransaction.head()","05577a20":"final = df['InvoiceDate'].max()\ndf['Last_transact'] = final - df['InvoiceDate']\nLT = df.groupby(df['CustomerID']).min()['Last_transact']\nLT = pd.DataFrame(LT).reset_index()\nLT.head()","abaf5ba2":"df_new = pd.merge(total_amount, transaction, how='inner', on='CustomerID')","87f38c04":"df_new = pd.merge(df_new, LT, how='inner', on='CustomerID')","b35427f3":"df_new.head()","837600d0":"df_new['Last_transact'] = df_new['Last_transact'].dt.days","ff337d23":"df_new.head()","09133ec3":"from sklearn.cluster import KMeans","15ac3f56":"kmeans= KMeans(n_clusters=2)\nkmeans.fit(df_new[['Total Amount Spent', 'InvoiceNo', 'Last_transact']])\npred = kmeans.predict(df_new[['Total Amount Spent', 'InvoiceNo', 'Last_transact']])","9c410229":"kmeans.cluster_centers_","773560b1":"kmeans.labels_","8d3c87fc":"pred = pd.DataFrame(pred, columns=['pred'])\ndf_new = df_new.join(pred)","96c6cdbe":"fig, ax =plt.subplots(nrows= 1, ncols = 3, figsize= (14,6))\nty=sns.stripplot(x='pred', y='Total Amount Spent', data=df_new, s=8, ax = ax[0], palette='magma_r')\nsns.despine(left=True)\nty.set_title('Clusters based on different Amounts')\nty.set_ylabel('Total Spent')\nty.set_xlabel('Clusters')\n\ntt=sns.boxplot(x='pred', y='InvoiceNo', data=df_new, ax = ax[1], palette='coolwarm_r')\ntt.set_title('Clusters based on Number of Transactions')\ntt.set_ylabel('Total Transactions')\ntt.set_xlabel('Clusters')\n\ntr=sns.boxplot(x='pred', y='Last_transact', data=df_new, ax = ax[2], palette='magma_r')\ntr.set_title('Clusters based on Last Transaction')\ntr.set_ylabel('Last Transactions (Days ago)')\ntr.set_xlabel('Clusters')","506afcc7":"sns.pairplot(hue='pred', data=df_new, diag_kind='kde', palette='magma')","48852062":"kmeans.inertia_","a2ef6896":"error_rate = []\nfor clusters in range(1,16):\n    kmeans = KMeans(n_clusters = clusters)\n    kmeans.fit(df_new)\n    kmeans.predict(df_new)\n    error_rate.append(kmeans.inertia_)\n    ","e525d2df":"error_rate = pd.DataFrame({'Cluster':range(1,16) , 'Error':error_rate})","0506343f":"error_rate","552a115e":"plt.figure(figsize=(12,8))\np = sns.barplot(x='Cluster', y= 'Error', data= error_rate, palette='coolwarm_r')\nsns.despine(left=True)\np.set_title('Error Rate and Clusters')\n","3102faa6":"country_wise = df.groupby('Country').sum()","9c2e8c55":"country_codes = pd.read_csv('..\/input\/iso-country-codes-global\/wikipedia-iso-country-codes.csv', names=['Country', 'two', 'three', 'numeric', 'ISO'])","dad44f4f":"country_codes.head()","56672168":"country_wise = pd.merge(country_codes,country_wise, on='Country')","90ef2c16":"country_wise.head()","fe589d16":"from plotly import __version__\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()\nimport plotly.graph_objs as go","ba64bbfe":"data = dict(type='choropleth',colorscale='GnBu', locations = country_wise['three'], locationmode = 'ISO-3', z= country_wise['Total Amount Spent'], text = country_wise['Country'], colorbar={'title':'Revenue'},  marker = dict(line=dict(width=0))) \nlayout = dict(title = 'European Countries According to Revenue!', geo = dict(scope='europe',showlakes=False, projection = {'type': 'winkel tripel'}))\nChoromaps2 = go.Figure(data=[data], layout=layout)\niplot(Choromaps2)\n","9d65a8fe":"data = dict(type='choropleth',colorscale='rainbow', locations = country_wise['three'], locationmode = 'ISO-3', z= country_wise['Total Amount Spent'], text = country_wise['Country'], colorbar={'title':'Revenue'},  marker = dict(line=dict(width=0))) \nlayout = dict(title = 'All Countries According to Revenue!', geo = dict(scope='world',showlakes=False, projection = {'type': 'winkel tripel'}))\nChoromaps2 = go.Figure(data=[data], layout=layout)\niplot(Choromaps2)\n\n","1311e830":"# Clusters are created!\n\n* we will now visualize them using different analytics tools and plots. \n* KMeans Clustering is unsupervised learning model so this means we do not really have anything to compare it with. \n* However we will try to visualize and make assumptions of how it actually made the segmentation","224e01e4":"# Observing Datatypes, Columns and Rows","a70c3fa3":"# Country wise Analysis","df597a6e":"<img src=\"https:\/\/media.giphy.com\/media\/j6ZReIODqJXh5sPLVq\/giphy.gif\">","44f34ee9":"# Elbow Method to decide how many Clusters to chose!\n*  It is difficult to predict the right number of clusters that we should opt for \n*  We can do this Elbow method to get the right number of clusters\n*  After performing this we might add or reduce the number of clusters based on how much error we are reducing by increasing the clusters!\n","5bcb690b":"# Thank you! Please Upvote if you liked it :)","7c87f45a":" Last Transact column still needs to be simplified for just number of days","5c5b69ab":"# K Means Clustering Model","e136db60":"# Number of Transactions","d369a4f6":"# Last Transaction (LT)","00e88616":"# Merging All the newly created columns","77f8ec07":"The dataset for country codes is taken from wikipedia","813cafc0":"* We observed that CustomerID is missing.\n* We will first check approximately how many rows are mssing this detail\n* Then we will delete the missing rows. \n* The type of analysis I will be performing requires groupby according to customers so that is why it is necessary to remove null values from this column. ","e347bcbc":"* Approximately 25% of the data is missing.\n* We will prooceed with dropping the missing rows now.","f539477f":"* Now we can see above that the matrix is showing all bars are equal\n* meaning that the data is clean and ready to be used in the model\n* meanwhile we will change the data type of InvoiceDate to Datetime.\n* We will also create three new fields:","eefeca76":"# Hello Guys..Please have a look at this and Enjoy! \n\n* This is a Dataset for Online Retail Store.\n* I have loaded the dataset and cleaned the columns in the first part of this project\n* then I have created some visuals and some new columns to analyze the data\n* then have performed KMeans Clustering (Unsupervised) Machine Learning Model.\n* I have also used the Elbow Method after KMeans Clustering to see if the clusters I chse could be any better.\n* At the end I have created a plotly mapping of the Countries by Revenue from Customers!\n* UPVOTE IF YOU LIKE THE WORK! THANKS!!!","4c685306":"# Data Cleaning: Checking for Null Values","72ef3c3a":"# Importing Libraries and Loading Data","e0104b95":"# Amount","468f17ce":"1. Amount\n2. Number of Transactons\n3. Last Transactions(how many days ago was that customer's last transaction)"}}