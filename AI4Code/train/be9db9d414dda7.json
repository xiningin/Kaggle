{"cell_type":{"6c6d02a2":"code","066bd870":"code","0f988f6a":"code","50e0ee02":"code","ae270cb9":"code","20a8de7b":"code","c3055bb9":"code","ccc2c452":"code","cc285b45":"code","3e4a3bde":"code","163c5514":"code","0d1797a7":"code","272ab47c":"code","157a8705":"code","84b5e038":"markdown","5dc4c672":"markdown","79138ef0":"markdown","759ef05c":"markdown","79c21cd3":"markdown","ca9cf5c1":"markdown","d201304f":"markdown","a33c8c2d":"markdown","2a62c023":"markdown","366fe208":"markdown","1920a2ef":"markdown","90c4623a":"markdown","c4ae9e6d":"markdown","240e3f3b":"markdown","db5d1f69":"markdown","2954ba8f":"markdown","1f5dc331":"markdown"},"source":{"6c6d02a2":"import matplotlib as mpl\nimport matplotlib.pyplot as plt  \n\nplt.style.use('ggplot')  # look at http:\/\/tonysyu.github.io\/raw_content\/matplotlib-style-gallery\/gallery.html\n\nmpl.rcParams['font.family'] = 'serif'  \n\n%matplotlib inline","066bd870":"plt.plot([1, 2, 3], [10, 11, 12]);\n# other settings ...\nplt.show()","0f988f6a":"import math\nimport numpy as np\nnp.random.seed(2400)\n\nx= np.linspace(-2*math.pi,+2*math.pi,100)\ny= np.sin(x)\n\nplt.plot(x,y)\nplt.show()","50e0ee02":"plt.plot(y) # x axis assumed to be the index!","ae270cb9":"plt.plot(x,y) \nplt.axis('off')\n#plt.axis([-3,2,-1,1])\n","20a8de7b":"plt.plot(x,y)\nplt.xticks([-2 * math.pi, 0, 2* math.pi],\n           ['$-2\\pi$', '0' ,r'$2\\pi$'])","c3055bb9":"plt.figure(figsize=(11, 5))  # make a larger picture \n\n# style\n#plt.plot(x,y, '.')  \nplt.plot(x,y, '>')  \n\n# labeling\nplt.xlabel('X')  \nplt.ylabel('sin(X)')  \nplt.title('A Simple Sin() Plot');  \n\n","ccc2c452":"y2 = np.cos(x)\n\nplt.plot(x,y)\nplt.plot(x,y2,'k.')\n","cc285b45":"plt.plot(x,y, label='Sin()')\nplt.plot(x,y2,'k.', label='Cos()')\n\nplt.legend(loc=0)","3e4a3bde":"y3 = np.exp(x)\n\nplt.plot(x,y, label='Sin()')\nplt.plot(x,y3, label='Exp()')\n\nplt.legend()","163c5514":"fig, ax1 = plt.subplots()\nplt.plot(x,y, label='Sin()')\nplt.legend()\n\nax2 = ax1.twinx()\nplt.plot(x,y3,'b', label='Exp()')\nplt.legend()\n","0d1797a7":"plt.figure(figsize=(11, 5))  # make a larger picture \n\nplt.subplot(221)\nplt.plot(x,y, label='Sin()')\nplt.legend()\n\nplt.subplot(222)\nplt.plot(x,y2, label='Cos()')\nplt.legend()\n\n\nplt.subplot(223)\nplt.plot(x,y3, label='Exp()')\nplt.legend()","272ab47c":"y4 =np.random.standard_normal((10000,2))\n\n\nplt.hist(y4[:,0], bins=30)\n\n#plt.hist(y4, bins=30)\n#plt.hist(y4, bins=30, stacked=True)","157a8705":"plt.scatter(y4[:, 0], y4[:, 1], marker='.')","84b5e038":"# Matplotly","5dc4c672":"# Deviation from the defaults\n\n### Axis\n\n\n| Parameter                \t| Description                                  \t|\n|--------------------------\t|----------------------------------------------\t|\n| Empty                    \t| Returns current axis limits                  \t|\n| off                      \t| Turns axis lines and labels off              \t|\n| equal                    \t| Leads to equal scaling                       \t|\n| scaled                   \t| Produces equal scaling via dimension changes \t|\n| tight                    \t| Makes all data visible (tightens limits)     \t|\n| image                    \t| Makes all data visible (with data limits)    \t|\n| [xmin, xmax, ymin, ymax] \t| Sets limits to given (listof) values         \t|","79138ef0":"# Plotly\n","759ef05c":"* Draw Sin(x)","79c21cd3":"* Legends\n\n\n| Loc     \t| Description   \t|\n|---------\t|---------------\t|\n| Default \t| Upper right   \t|\n| 0       \t| Best possible \t|\n| 1       \t| Upper right   \t|\n| 2       \t| Upper left    \t|\n| 3       \t| Lower left    \t|\n| 4       \t| Lower right   \t|\n| 5       \t| Right         \t|\n| 6       \t| Center left   \t|\n| 7       \t| Center right  \t|\n| 8       \t| Lower center  \t|\n| 9       \t| Upper center  \t|\n| 10      \t| Center        \t|","ca9cf5c1":"#### Xticks\n* Latex-style axis ","d201304f":"* Separate subplots","a33c8c2d":"* Histogram\n\n| Parameter   \t| Description                                          \t|\n|-------------\t|------------------------------------------------------\t|\n| x           \t| list object(s), ndarray object                       \t|\n| bins        \t| Number of bins                                       \t|\n| range       \t| Lower and upper range of bins                        \t|\n| normed      \t| Norming such that integral value is 1                \t|\n| weights     \t| Weights for every value in x                         \t|\n| cumulative  \t| Every bin contains the counts of the lower bins      \t|\n| histtype    \t| Options (strings): bar, barstacked, step, stepfilled \t|\n| align       \t| Options (strings): left, mid, right                  \t|\n| orientation \t| Options (strings): horizontal, vertical              \t|\n| rwidth      \t| Relative width of the bars                           \t|\n| log         \t| Log scale                                            \t|\n| color       \t| Color per data set (array-like)                      \t|\n| label       \t| String or sequence of strings for labels             \t|\n| stacked     \t| Stacks multiple data sets                            \t|","2a62c023":"## Aestatics \n\n* Colors\n\n| Character \t| Color   \t|\n|-----------\t|---------\t|\n| b         \t| Blue    \t|\n| g         \t| Green   \t|\n| r         \t| Red     \t|\n| c         \t| Cyan    \t|\n| m         \t| Magenta \t|\n| y         \t| Yellow  \t|\n| k         \t| Black   \t|\n| w         \t| White   \t|\n\n\n* Style\n\n| Character \t| Symbol                \t|\n|-----------\t|-----------------------\t|\n| -         \t| Solid line style      \t|\n| --        \t| Dashed line style     \t|\n| -.        \t| Dash-dot line style   \t|\n| :         \t| Dotted line style     \t|\n| .         \t| Point marker          \t|\n| ,         \t| Pixel marker          \t|\n| o         \t| Circle marker         \t|\n| v         \t| Triangle_down marker  \t|\n| <         \t| Triangle_left marker  \t|\n| >         \t| Triangle_right marker \t|\n| 1         \t| Tri_down marker       \t|\n| 2         \t| Tri_up marker         \t|\n| 3         \t| Tri_left marker       \t|\n| 4         \t| Tri_right marker      \t|\n| s         \t| Square marker         \t|\n| p         \t| Pentagon marker       \t|\n| h         \t| Hexagon1 marker       \t|\n| H         \t| Hexagon2 marker       \t|\n| x         \t| X marker              \t|\n| D         \t| Diamond marker        \t|\n| d         \t| Thin diamond marker   \t|\n| \\|        \t| Vline marker          \t|\n| _         \t| Hline marker          \t|","366fe208":"### Others...\n> * Don't forget the Gallery https:\/\/matplotlib.org\/1.5.3\/gallery.html","1920a2ef":"* **plt.plot(x,y)** plot a 2D graph for two **lists** OR **np.array**","90c4623a":"# Data Visualisation\n\n_\"Most of us need to listen to the music to understand how beautiful it is. But often that\u2019s how we present statistics: we just show the notes, we don\u2019t play the music.\" - Hans Rosling_\n\n\n* Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n\n\n* Matplotlib can be used for creating plots and charts. The library is generally used as follows:\n\n> * Call a plotting function with some data (e.g. .plot()).\n> * Call many functions to setup the properties of the plot (e.g. labels and colors).\n> * Make the plot visible (e.g. .show()).\n\n* Lots of available templates: https:\/\/matplotlib.org\/stable\/gallery\/index.html\n\n* There are several other higher level visualisation tools mostly with Matplotly backend:\n\n> * The **pyplot** API : The most common approach to plotting with Matplotlib, Matlab style graphs\n> * **Pandas Visualization** (covered in the last session)\n> * **Plotly**: for interactive plots\n> * **ggplot**: very similiar to the R\u2019s ggplot2\n> * **Seaborn**: high-level interface + lots of nice templates in https:\/\/seaborn.pydata.org\/examples\/index.html\n\n\n* We discuss only **matplotlib** (ch 7, Python for Finance Mastering Data-Driven Finance by Yves Hilpisch)\n* https:\/\/matplotlib.org\/1.5.3\/users\/pyplot_tutorial.html\n\n","c4ae9e6d":"* Scatter","240e3f3b":"## Other plot types\n\nLook at the full list: https:\/\/matplotlib.org\/1.5.3\/api\/pyplot_summary.html","db5d1f69":"## Plotly Express in Python\n\nPlotly Express (PX) is high-level API for creating figures.\n\n* Documantation: https:\/\/plotly.com\/python\/plotly-express\/\n\n\n* Mostly follow this pattern:\n\n```Python\nimport plotly.express as px\n\nfig = px....(df, ...)\nfig.show()\n```\n\nGraph types:\n\n<ul>\n<li><strong>Basics<\/strong>: <a href=\"https:\/\/plotly.com\/python\/line-and-scatter\/\"><code>scatter<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/line-charts\/\"><code>line<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/filled-area-plots\/\"><code>area<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/bar-charts\/\"><code>bar<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/funnel-charts\/\"><code>funnel<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/gantt\/\"><code>timeline<\/code><\/a><\/li>\n<li><strong>Part-of-Whole<\/strong>: <a href=\"https:\/\/plotly.com\/python\/pie-charts\/\"><code>pie<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/sunburst-charts\/\"><code>sunburst<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/treemaps\/\"><code>treemap<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/funnel-charts\/\"><code>funnel_area<\/code><\/a><\/li>\n<li><strong>1D Distributions<\/strong>: <a href=\"https:\/\/plotly.com\/python\/histograms\/\"><code>histogram<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/box-plots\/\"><code>box<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/violin\/\"><code>violin<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/strip-charts\/\"><code>strip<\/code><\/a><\/li>\n<li><strong>2D Distributions<\/strong>: <a href=\"https:\/\/plotly.com\/python\/2D-Histogram\/\"><code>density_heatmap<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/2d-histogram-contour\/\"><code>density_contour<\/code><\/a><\/li>\n<li><strong>Matrix Input<\/strong>: <a href=\"https:\/\/plotly.com\/python\/imshow\/\"><code>imshow<\/code><\/a><\/li>\n<li><strong>3-Dimensional<\/strong>: <a href=\"https:\/\/plotly.com\/python\/3d-scatter-plots\/\"><code>scatter_3d<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/3d-line-plots\/\"><code>line_3d<\/code><\/a><\/li>\n<li><strong>Multidimensional<\/strong>: <a href=\"https:\/\/plotly.com\/python\/splom\/\"><code>scatter_matrix<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/parallel-coordinates-plot\/\"><code>parallel_coordinates<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/parallel-categories-diagram\/\"><code>parallel_categories<\/code><\/a><\/li>\n<li><strong>Tile Maps<\/strong>: <a href=\"https:\/\/plotly.com\/python\/scattermapbox\/\"><code>scatter_mapbox<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/lines-on-mapbox\/\"><code>line_mapbox<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/mapbox-county-choropleth\/\"><code>choropleth_mapbox<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/mapbox-density-heatmaps\/\"><code>density_mapbox<\/code><\/a><\/li>\n<li><strong>Outline Maps<\/strong>: <a href=\"https:\/\/plotly.com\/python\/scatter-plots-on-maps\/\"><code>scatter_geo<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/lines-on-maps\/\"><code>line_geo<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/choropleth-maps\/\"><code>choropleth<\/code><\/a><\/li>\n<li><strong>Polar Charts<\/strong>: <a href=\"https:\/\/plotly.com\/python\/polar-chart\/\"><code>scatter_polar<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/polar-chart\/\"><code>line_polar<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/wind-rose-charts\/\"><code>bar_polar<\/code><\/a><\/li>\n<li><strong>Ternary Charts<\/strong>: <a href=\"https:\/\/plotly.com\/python\/ternary-plots\/\"><code>scatter_ternary<\/code><\/a>, <a href=\"https:\/\/plotly.com\/python\/ternary-plots\/\"><code>line_ternary<\/code><\/a><\/li>\n<\/ul>","2954ba8f":"#### Subplots\n\n* Same-figure, 2 * y axes\n* shared X axis\n```Python\nfig, ax1 = plt.subplots()\nax2 = ax1.twinx()\n```","1f5dc331":"### Multiple plots\n\n"}}