{"cell_type":{"9644996d":"code","fec5f162":"code","b45bd640":"code","5ff72a15":"code","169b196d":"code","9c72ec28":"code","abea1b6f":"code","b849fc13":"code","fb58b4f0":"code","99c9b3d7":"code","0867187b":"code","03f1f06e":"code","fb408dfa":"code","f2f825c7":"code","ec295842":"code","a4dea743":"code","59b9e8fb":"code","988f124a":"code","c06e4b68":"code","93f3c324":"code","1d25b9ab":"code","f524064f":"code","9d7905eb":"code","aaddf6c8":"code","7511656b":"code","25a61837":"code","51db448c":"code","012d0df2":"code","15c2003f":"code","223f6259":"code","9ac1eb55":"code","d45a0037":"code","8675c675":"code","3869ed3c":"code","a306307e":"code","4de32ca5":"code","18261bae":"code","578e0d90":"code","03002bf6":"code","cad41d42":"code","7bfa1a18":"code","fca66ec0":"code","944e0da6":"code","2275d0a0":"code","86b8de97":"code","c4608db8":"code","9aa3b1db":"code","163e42a9":"code","3a29e397":"code","35682418":"code","099bd39c":"code","3f10af4c":"code","dcd51bec":"code","e6e18173":"code","ad879a38":"code","357a26a0":"code","e220a339":"code","b6c811c3":"markdown","e3097119":"markdown","678bc2c7":"markdown","74876e66":"markdown"},"source":{"9644996d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fec5f162":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","b45bd640":"corn_and_olive_dataset=pd.DataFrame.from_dict({'shape':['round','oval'],'color':['yellow','green'],\n                                              'ingredient_type':['corn','olives']})","5ff72a15":"corn_and_olive_dataset","169b196d":"corn_and_olive_dataset['c_shape']=corn_and_olive_dataset['shape'].apply(lambda x: 1 if x=='round' else 0)\ncorn_and_olive_dataset['c_color']=corn_and_olive_dataset['color'].apply(lambda x: 1 if x=='yellow' else 0)\ncorn_and_olive_dataset['c_ingredient_type']=corn_and_olive_dataset['ingredient_type'].apply(lambda x: 1 if x=='corn' else 0)","9c72ec28":"corn_and_olive_dataset","abea1b6f":"corn_and_olive_dataset.plot(kind='scatter',x='c_shape',y='c_color',c='c_ingredient_type', colormap='jet')","b849fc13":"from tensorflow.keras.layers import Dense","fb58b4f0":"single_neuron_layers=Dense(units=1,input_dim=2,activation='sigmoid')","99c9b3d7":"from tensorflow.keras.optimizers import SGD","0867187b":"sgd=SGD()\nloss='binary_crossentropy'","03f1f06e":"from tensorflow.keras.models import Sequential\nsingle_neuron_model=Sequential()\nsingle_neuron_model.add(single_neuron_layers)\nsingle_neuron_model.compile(loss=loss,optimizer=sgd,metrics=['accuracy'])\nsingle_neuron_model.summary()","fb408dfa":"history=single_neuron_model.fit(corn_and_olive_dataset[['c_shape','c_color']],corn_and_olive_dataset[['c_ingredient_type']],\n                               epochs=2500)","f2f825c7":"test_loss, test_acc = single_neuron_model.evaluate(\n    corn_and_olive_dataset[['c_shape', 'c_color']],\n    corn_and_olive_dataset['c_ingredient_type']\n)","ec295842":"bad_pizza_dataset = pd.DataFrame.from_dict({'tomato_sauce': ['no', 'no', 'yes', 'yes'],\n                                            'barbecue_sauce': ['no', 'yes', 'no', 'yes'],\n                                            'result': ['sauce error', 'good', 'good', 'sauce error']})","a4dea743":"bad_pizza_dataset['c_tomato_sauce'] = bad_pizza_dataset['tomato_sauce'].apply(lambda x: 1 if x == 'yes' else 0)\nbad_pizza_dataset['c_barbecue_sauce'] = bad_pizza_dataset['barbecue_sauce'].apply(lambda x: 1 if x == 'yes' else 0)\nbad_pizza_dataset['c_result'] = bad_pizza_dataset['result'].apply(lambda x: 1 if x == 'sauce error' else 0)","59b9e8fb":"bad_pizza_dataset","988f124a":"bad_pizza_dataset.plot(kind='scatter',x='c_tomato_sauce',y='c_barbecue_sauce',c='c_result',colormap='jet')","c06e4b68":"input_layer=Dense(units=2, input_dim=2,activation='sigmoid')\noutput_layer=Dense(units=1,activation='sigmoid')","93f3c324":"bad_pizza_model=Sequential()\nbad_pizza_model.add(input_layer)\nbad_pizza_model.add(output_layer)\nsgd=SGD()\nbad_pizza_model.compile(loss='binary_crossentropy',optimizer=sgd,metrics=['accuracy'])\nbad_pizza_model.summary()","1d25b9ab":"history = bad_pizza_model.fit(bad_pizza_dataset[['c_tomato_sauce', 'c_barbecue_sauce']],\n                              bad_pizza_dataset['c_result'],epochs=3000)","f524064f":"test_loss, test_acc = bad_pizza_model.evaluate(bad_pizza_dataset[['c_tomato_sauce', 'c_barbecue_sauce']],\n                                               bad_pizza_dataset['c_result'])","9d7905eb":"plt.figure(figsize=(7, 6))\nplt.plot(history.history['loss'])\nplt.plot(history.history['accuracy'])\nplt.title('Model Training History')\nplt.ylabel('Value')\nplt.xlabel('Epoch')\nplt.legend(['Loss', 'Accuracy'], loc='center right')\nplt.show()","aaddf6c8":"input_layer = Dense(units=2, input_dim=2, activation='sigmoid')\noutput_layer = Dense(units=1, activation='sigmoid')\n\nbad_pizza_model = Sequential()\nbad_pizza_model.add(input_layer)\nbad_pizza_model.add(output_layer)\n\nhigh_lr_sgd = SGD(learning_rate=10)\n\nbad_pizza_model.compile(loss='binary_crossentropy', optimizer=high_lr_sgd, metrics=['accuracy'])\n\nbad_pizza_model.summary()","7511656b":"high_lr_model_history = bad_pizza_model.fit(bad_pizza_dataset[['c_tomato_sauce', 'c_barbecue_sauce']],\n                                            bad_pizza_dataset['c_result'],epochs=3000)","25a61837":"plt.figure(figsize=(7, 6))\nplt.plot(high_lr_model_history.history['loss'])\nplt.plot(high_lr_model_history.history['accuracy'])\nplt.title('Model Training History')\nplt.ylabel('Value')\nplt.xlabel('Epoch')\nplt.legend(['Loss', 'Accuracy'], loc='center right')\nplt.show()","51db448c":"input_layer = Dense(units=3, input_dim=2, activation='sigmoid')\noutput_layer = Dense(units=1, activation='sigmoid')\n\nbad_pizza_model = Sequential()\nbad_pizza_model.add(input_layer)\nbad_pizza_model.add(output_layer)\n\nsgd = SGD(learning_rate=1)\n\nbad_pizza_model.compile(loss='binary_crossentropy', optimizer=sgd, metrics=['accuracy'])\n\nbad_pizza_model.summary()","012d0df2":"history_model = bad_pizza_model.fit(bad_pizza_dataset[['c_tomato_sauce', 'c_barbecue_sauce']],bad_pizza_dataset['c_result'],\n                                    epochs=3000)","15c2003f":"plt.figure(figsize=(7, 6))\nplt.plot(history_model.history['loss'])\nplt.plot(history_model.history['accuracy'])\nplt.title('Model Training History')\nplt.ylabel('Value')\nplt.xlabel('Epoch')\nplt.legend(['Loss', 'Accuracy'], loc='center right')\nplt.show()","223f6259":"pizza_types=pd.read_csv('..\/input\/pizza-types\/pizza_types.csv',index_col=0)","9ac1eb55":"pizza_types.head(10)","d45a0037":"pizza_types.shape","8675c675":"training_dataset = pizza_types.sample(frac=0.8)\ntesting_dataset = pizza_types[~pizza_types.index.isin(training_dataset.index)]","3869ed3c":"training_dataset.shape","a306307e":"pizza_type_model=Sequential()\npizza_type_model.add(Dense(units=3,input_dim=15,activation='softmax'))\nsgd=SGD()\npizza_type_model.compile(loss='categorical_crossentropy',optimizer=sgd,metrics=['accuracy'])\npizza_type_model.summary()","4de32ca5":"history_sgd_pizza_type_model = pizza_type_model.fit(\n    training_dataset[['corn', 'olives', 'mushrooms', 'spinach', 'pineapple', 'artichoke', 'chilli', 'pepper', 'onion', 'mozzarella', 'egg', 'pepperoni', 'beef', 'chicken', 'bacon',]],\n    training_dataset[['vegan', 'vegetarian', 'meaty']],epochs=200,validation_split=0.2)","18261bae":"test_loss, test_acc = pizza_type_model.evaluate(testing_dataset[['corn', 'olives', 'mushrooms', 'spinach', 'pineapple', 'artichoke', 'chilli', 'pepper', 'onion', 'mozzarella', 'egg', 'pepperoni', 'beef', 'chicken', 'bacon',]],\n                                                testing_dataset[['vegan', 'vegetarian', 'meaty']])\n","578e0d90":"from tensorflow.keras.optimizers import Adam","03002bf6":"pizza_type_model=Sequential()\npizza_type_model.add(Dense(units=3,input_dim=15,activation='softmax'))\nadam=Adam()\npizza_type_model.compile(loss='categorical_crossentropy',optimizer=adam,metrics=['accuracy'])\npizza_type_model.summary()","cad41d42":"history_adam_pizza_type_model = pizza_type_model.fit(training_dataset[['corn', 'olives', 'mushrooms', 'spinach', 'pineapple', 'artichoke', 'chilli', 'pepper', 'onion', 'mozzarella', 'egg', 'pepperoni', 'beef', 'chicken', 'bacon',]],\n                                                     training_dataset[['vegan', 'vegetarian', 'meaty']],epochs=200,validation_split=0.2)\n","7bfa1a18":"traffic_data=pd.read_csv('..\/input\/traffic-data\/traffic_data.csv',index_col=0)","fca66ec0":"traffic_data.head()","944e0da6":"traffic_data.shape","2275d0a0":"traffic_data['type'].value_counts()","86b8de97":"traffic_data.groupby('day')['type']","c4608db8":"traffic_data['c_type']=traffic_data['type'].apply(lambda x: 1 if x=='traffic' else 0)","9aa3b1db":"import matplotlib.pyplot as plt\nfrom matplotlib.pyplot import colorbar, figure","163e42a9":"figure(num=None, figsize=(12,10))\nplt.scatter(\n            traffic_data['day'],traffic_data['hour'],c=traffic_data['c_type'],cmap='jet')\ncbar=colorbar()","3a29e397":"traffic_data=traffic_data.join(pd.get_dummies(traffic_data['day']))","35682418":"training_dataset=traffic_data.sample(frac=0.8)","099bd39c":"testing_dataset=traffic_data[~traffic_data.index.isin(training_dataset.index)]","3f10af4c":"input_columns=['minute', 'hour', 'second','Friday', 'Monday',\n       'Saturday', 'Sunday', 'Thursday', 'Tuesday', 'Wednesday']","dcd51bec":"from tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import LeakyReLU\n\ntraffic_model=Sequential([Dense(32,input_dim=len(input_columns),activation='relu'),\n                          Dropout(0.1),\n                          Dense(32),\n                          LeakyReLU(alpha=0.1),\n                          Dropout(0.1),\n                          Dense(1,activation='sigmoid'),])\nadam=Adam()\ntraffic_model.compile(loss='binary_crossentropy',optimizer=adam,metrics=['accuracy'])\ntraffic_model.summary()","e6e18173":"batch_size=100","ad879a38":"history_traffic_model = traffic_model.fit(training_dataset[input_columns],training_dataset[['c_type']],\n                                          epochs=50,validation_split=0.1,batch_size=batch_size)","357a26a0":"test_loss, test_acc = traffic_model.evaluate(testing_dataset[input_columns],testing_dataset['c_type'])","e220a339":"model = Sequential([Dense(units=10, input_dim=4, activation='relu'),])\nmodel.summary()","b6c811c3":"**Training small neural network**","e3097119":"**Set Up and Train Your First Multi-Output Neural Network**","678bc2c7":"**Train a Deeper Fully Connected Neural Network**","74876e66":"**Train a Neural Network with Multiple Output Neurons**"}}