{"cell_type":{"95f700f3":"code","a1914f54":"code","2a132483":"code","4553cf3f":"code","8cef7359":"code","c9a4534d":"code","b5fc21cd":"code","001b16be":"code","38193c5f":"code","132051e7":"code","fec2f2cc":"code","c645a8a4":"code","73d6a431":"code","209db53f":"code","e5c881b5":"code","b99f388f":"code","9bddfb9a":"code","06c15498":"code","396d63f3":"code","23647a8b":"code","e3870f4b":"code","151be0aa":"code","eb05a066":"code","79dae7bc":"markdown","547bc9ca":"markdown","e2a01653":"markdown","225e639e":"markdown"},"source":{"95f700f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns #visulation tools\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a1914f54":"data=pd.read_csv(\"..\/input\/pokemon-challenge\/pokemon.csv\")","2a132483":"data.info()","4553cf3f":" data.corr()","8cef7359":"#correlation map\nf,ax =plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","c9a4534d":"data.head(15)","b5fc21cd":"data.columns","001b16be":"#plot\ndata.Speed.plot(kind='line', color='g', label ='Speed',linewidth=1, alpha=0.5,grid=True,linestyle=':')\ndata.Defense.plot(color='r', label ='Defense',linewidth=1, alpha=0.5,grid=True,linestyle='-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","38193c5f":"#scatter plot\n# x=attack , y=defense\ndata.plot(kind='scatter', x='Attack', y='Defense', alpha=0.5, color='red',grid=True)\nplt.xlabel('Attack')\nplt.ylabel('Defense')\nplt.title('Attack Defence Scatter Plot')\nplt.show()","132051e7":"#Histogram\n#bins = number of bar in figure\ndata.Speed.plot(kind='hist', bins=50,figsize=(12,12),grid=True)\nplt.show()","fec2f2cc":"#clf() --> cleans it up again you can start a fresh\ndata.Speed.plot(kind='hist' , bins=50)\nplt.clf()","c645a8a4":"#crate dictionary and look is its keys and values\ndictionary={'spain' : 'madrid','USA' : 'vegas'}\nprint(dictionary.keys())\nprint(dictionary.values())","73d6a431":"#List is not immutable\n#keys are unique\ndictionary['spain']=\"Barcelona\"    #update existing entry\nprint(dictionary)\ndictionary['france']=\"Paris\"       #add new entry\nprint(dictionary)\ndel dictionary['USA']              #remove entry with key\nprint(dictionary)\nprint('france' in dictionary)      #check include or not\n","209db53f":"dictionary.clear()\nprint(dictionary)","e5c881b5":"data=pd.read_csv('..\/input\/pokemon-challenge\/pokemon.csv')","b99f388f":"series = data['Defense']\nprint(type(series))\ndata_frame=data[['Defense']]\nprint(type(data_frame))","9bddfb9a":"#Comparison operator\n\nprint(3>2)\nprint(3!=2)\n\n#Boolean operators\n\nprint(True and False)\nprint(True or False)","06c15498":"# Filtering pandas data frame\nx=data['Defense']>200   #there are only 3 pokemons who have higherdefense value than 200\ndata[x]","396d63f3":"data.columns","23647a8b":"legend=(data['Legendary'] == True) & (data['Speed']>=100)\ndata[legend]","e3870f4b":"data[np.logical_and(data['Legendary'] == True,data['Attack']>=120)]","151be0aa":"i=0\nwhile i!=5 :\n    print('i is: ',i)\n    i+=1\nprint (i,' is equal to 5')","eb05a066":"#stay in loop if conditions is true\nlis =[1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\nfor index,value in enumerate(lis):\n    print(index,\":\",value)\nprint('')\n\n#for dictionaries\ndictionary={'spain' : 'madrid' , 'france' : 'paris' , 'Turkey' : 'Ankara'}\nfor key,value in dictionary.items():\n    print(key,\":\",value)\nprint('')\n\nfor index,value in data[['Attack']][0:10].iterrows():\n    print(index,\" : \",value)","79dae7bc":"<a id=\"5\"><\/a><br>\nBefore continue with pandas we need to learn **logic , control flow** and **filtering**\n<br>Comparison operator: == , < ,> ,>=\n<br> Boolean operators: and, or ,not\n<br> Filtering pandas","547bc9ca":"# **PANDAS**\n\nWhat we need to know about pandas?\n* CSV : comma- separated values\n\n     \n","e2a01653":"# The AND operator in 2 different ways","225e639e":"# **Loop Data Structures (while and for)**"}}