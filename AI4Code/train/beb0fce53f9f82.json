{"cell_type":{"29b60b87":"code","3831ccfa":"code","18a28d89":"code","ae580eaa":"code","558e41fd":"code","0a07d418":"code","5e173e41":"code","4efec77f":"code","6e066598":"code","dddfa5dd":"code","4dbd0314":"code","50f1b928":"code","7f4b73ae":"code","8c4c88d1":"code","54b8f117":"code","62c047c6":"code","322f1c0c":"code","b2d975ed":"code","da74f976":"code","2af9b571":"code","2f9b2588":"code","7f73a90b":"code","79de9a93":"code","5460b462":"code","1c6e3b22":"code","00c13ded":"code","d783d3f0":"code","fb3b1839":"code","368947c1":"code","bf1c9c94":"code","148312ba":"code","9e82f813":"code","b14f0c65":"code","48550ae7":"code","615cb2fb":"code","4d12a9be":"markdown","b26f5a17":"markdown","79ded01e":"markdown","a7d02932":"markdown","270d4035":"markdown","2a649edb":"markdown","25f08a9c":"markdown","bbaf01aa":"markdown","4fcc3efe":"markdown","ccf34e27":"markdown","748bea53":"markdown","5ba87de3":"markdown"},"source":{"29b60b87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3831ccfa":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\n\npd.pandas.set_option('display.max_columns',None)","18a28d89":"pip install emoji --upgrade","ae580eaa":"import emoji","558e41fd":"filename = \"\/kaggle\/input\/watsapp-chat-txt-file\/Cryo.txt\"","0a07d418":"df = pd.read_csv(filename,header = None , error_bad_lines = False,encoding = 'utf8')","5e173e41":"df","4efec77f":"df.columns=['Date','chat']\ndf","6e066598":"Message = df['chat'].str.split(\"-\",n=1,expand = True)\nMessage","dddfa5dd":"df['Time']=Message[0]\ndf['Text']=Message[1]\n\ndf = df.drop('chat',axis=1)\ndf","4dbd0314":"Message1 = df['Text'].str.split(\":\",n=1,expand = True)\nMessage1","50f1b928":"df['Name']=Message1[0]\ndf['text']=Message1[1]\n\ndf = df.drop('Text',axis=1)\ndf","7f4b73ae":"df['text'] = df['text'].str.lower()\ndf","8c4c88d1":"df = df.dropna()\ndf","54b8f117":"df['text'] = df['text'].str.replace('<media omitted>','Media_Shared')\ndf","62c047c6":"df['text'] = df['text'].str.replace('this message was deleted','Message_Deleted')\ndf","322f1c0c":"df=df.reset_index()\ndf","b2d975ed":"df.drop(['index'],axis=1,inplace=True)\ndf","da74f976":"msg_count = df.Name.value_counts()\nmsg_count","2af9b571":"df.Date.value_counts().head(20)","2f9b2588":"media_share = df['text'] == ' Media_Shared'\nmedia_share","7f73a90b":"media = df[media_share]\nmedia","79de9a93":"media.Name.value_counts()","5460b462":"msg_deleted = df['text'] == ' Message_Deleted'\ndeleted = df[msg_deleted]\ndeleted.Name.value_counts()","1c6e3b22":"name = df.Name.unique()\nname","00c13ded":"byname = df.groupby('Name')\nuser=[' Jay Faldu', ' Gautam Vekariya (Mech)',\n       ' Dhruvin Gandhi (Mech. )', ' Vijay Gondaliya ( Mech)',\n       ' Jemi Godhani(Mech. )']","d783d3f0":"for x in range(len(name)):\n    user[x] = byname.get_group(name[x])","fb3b1839":"jay = user[0].reset_index().drop(['index'],axis=1)\ngautam = user[1].reset_index().drop(['index'],axis=1)\ndhruvin = user[2].reset_index().drop(['index'],axis=1)\nvijay = user[3].reset_index().drop(['index'],axis=1)\njemi = user[4].reset_index().drop(['index'],axis=1)","368947c1":"def extract_emojis(columnname,dataframe):\n    emojis=[]\n    for string in dataframe[columnname]:\n        my_str = str(string)\n        for each in my_str:\n            if each in emoji.UNICODE_EMOJI:\n                emojis.append(each)\n    return emojis","bf1c9c94":"jay_emoji = pd.DataFrame(extract_emojis('text',jay))[0].value_counts()\ngautam_emoji = pd.DataFrame(extract_emojis('text',gautam))[0].value_counts()\ndhruvin_emoji = pd.DataFrame(extract_emojis('text',dhruvin))[0].value_counts()\nvijay_emoji = pd.DataFrame(extract_emojis('text',vijay))[0].value_counts()\njemi_emoji = pd.DataFrame(extract_emojis('text',jemi))[0].value_counts()\n","148312ba":"pd.DataFrame(jay_emoji).transpose()","9e82f813":"pd.DataFrame(gautam_emoji).transpose()","b14f0c65":"pd.DataFrame(dhruvin_emoji).transpose()","48550ae7":"pd.DataFrame(vijay_emoji).transpose()","615cb2fb":"pd.DataFrame(jemi_emoji).transpose()","4d12a9be":"# Watsapp Chat Analysis\n\n\n\n\n\n\n#  ------------------------------------------------","b26f5a17":"# Created By :- Faldu jay\n### Email :- jay.faldu928@gmail.com\n\n\n\n\n\n# ------------------------------------------------","79ded01e":"## make timeand massage as saperate column from chat column","a7d02932":"# Analysis of total Massage sent by individual member","270d4035":"# Date on which most massages are sent","2a649edb":"# Emoji Analysis of all memebers\n\nIt show that which emoji sent how many times by perticuler member","25f08a9c":"## saperate massages from chat column","bbaf01aa":"# ------------------------------------------\n\n\n# Thank You!!!!!!!!!!!!!!!!!!!\n\n\n# ------------------------------------------","4fcc3efe":"# making DataFrame from Txt File","ccf34e27":"### change mediafile data as \"media_shared\"","748bea53":"# Analysis of massages deleted after sent","5ba87de3":"# analysis of midea shared by individual member"}}