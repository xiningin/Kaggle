{"cell_type":{"d9cc636b":"code","5e06ef17":"code","0846390e":"code","4a064462":"code","8696690f":"code","04f856bb":"code","6a3e365b":"code","719f3b4c":"code","77e9f3ee":"code","ec6aadc5":"code","4b6baec6":"code","a95e87f4":"code","f4cd5720":"code","009f2f5b":"code","c88642b5":"code","8efe1691":"code","5e593889":"code","16976db8":"code","b246ce63":"code","d0bc691e":"code","78caf0e5":"code","b8362f52":"code","3efd5167":"code","acd92906":"code","87845e62":"code","107f3446":"code","d77b8f79":"code","65fee63e":"markdown","a883b4bd":"markdown","21ffa44f":"markdown","c9d199c0":"markdown","0727f952":"markdown","c9b4659c":"markdown","2c66b87b":"markdown","1e5f4c19":"markdown","6c4d7378":"markdown","5a2ca22f":"markdown","6eeb98b5":"markdown","cda22975":"markdown","157c625a":"markdown","10daf52b":"markdown","096bc92d":"markdown","acb0308d":"markdown","0370dd07":"markdown","ec1955c6":"markdown"},"source":{"d9cc636b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","5e06ef17":"ecom_customers = pd.read_csv('..\/input\/ecommerce-customers\/Ecommerce Customers')","0846390e":"ecom_customers.head()","4a064462":"ecom_customers.info()","8696690f":"ecom_customers.describe()","04f856bb":"sns.set_style(style='darkgrid')\nsns.jointplot(x='Time on Website', y='Yearly Amount Spent', data=ecom_customers, color='black')","6a3e365b":"sns.set_style(style='darkgrid')\nsns.jointplot(x='Time on App', y='Yearly Amount Spent', data=ecom_customers, color='black')","719f3b4c":"sns.jointplot(x='Time on App', y='Length of Membership', kind='hex', data=ecom_customers)","77e9f3ee":"sns.pairplot(data=ecom_customers)","ec6aadc5":"sns.lmplot(x='Length of Membership', y='Yearly Amount Spent', data=ecom_customers)","4b6baec6":"ecom_customers.columns","a95e87f4":"X = ecom_customers[['Avg. Session Length', 'Time on App', 'Time on Website', 'Length of Membership']]\ny = ecom_customers['Yearly Amount Spent']","f4cd5720":"X.head()","009f2f5b":"from sklearn.model_selection import train_test_split","c88642b5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","8efe1691":"lm = LinearRegression()","5e593889":"from sklearn.linear_model import LinearRegression","16976db8":"lm.fit(X=X_train, y=y_train)","b246ce63":"lm.coef_","d0bc691e":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","78caf0e5":"predictions = lm.predict(X_test)\npredictions","b8362f52":"sns.scatterplot(x=y_test, y=predictions)","3efd5167":"from sklearn import metrics","acd92906":"metrics.mean_absolute_error(y_true=y_test, y_pred=predictions)","87845e62":"metrics.mean_squared_error(y_true=y_test, y_pred=predictions)","107f3446":"np.sqrt(metrics.mean_squared_error(y_true=y_test, y_pred=predictions))","d77b8f79":"sns.distplot((y_test-predictions),bins=10)","65fee63e":"## Predicting Test Data\nNow that we have fit our model, let's evaluate its performance by predicting off the test values!\n\n**Use lm.predict() to predict off the X_test set of the data.**","a883b4bd":"## Get the Data\n\nWe'll work with the Ecommerce Customers csv file from the company. It has Customer info, suchas Email, Address, and their color Avatar. Then it also has numerical value columns:\n\n* Avg. Session Length: Average session of in-store style advice sessions.\n* Time on App: Average time spent on App in minutes\n* Time on Website: Average time spent on Website in minutes\n* Length of Membership: How many years the customer has been a member. \n\n** Read in the Ecommerce Customers csv file as a DataFrame called customers.**","21ffa44f":"## Conclusion\nWe still want to figure out the answer to the original question, do we focus our efforst on mobile app or website development? Or maybe that doesn't even really matter, and Membership Time is what is really important.  Let's see if we can interpret the coefficients at all to get an idea.\n\n**Recreate the dataframe below. **","c9d199c0":"## Exploratory Data Analysis\n\n**Let's explore the data!**\n___\n**Use seaborn to create a jointplot to compare the Time on Website and Yearly Amount Spent columns.**","0727f952":"**Check the head of customers, and check out its info() and describe() methods.**","c9b4659c":"## Residuals\n\nLet's quickly explore the residuals to make sure everything was okay with our data. \n\n**Plot a histogram of the residuals and make sure it looks normally distributed.**","2c66b87b":"**Based off this plot check the most correlated feature with Yearly Amount Spent. and create a linear model plot**","1e5f4c19":"**Use jointplot to create a 2D hex bin plot comparing Time on App and Length of Membership.**","6c4d7378":"### Jose Portilla's Course project solution\n\n\n# Linear Regression Project\n\nAn e-commerce company based in New York City is selling clothing online but they also have in-store style and clothing advice sessions. Customers come in to the store, have sessions\/meetings with a personal stylist, then they can go home and order either on a mobile app or website for the clothes they want.\n\nWe are trying to decide whether to focus the efforts on mobile app experience or website.","5a2ca22f":"**Let's explore these types of relationships across the entire data set with pairplot.**","6eeb98b5":"## Training and Testing Data\n\nNow that we've explored the data a bit, let's go ahead and split the data into training and testing sets.","cda22975":"**Create a scatterplot of the real test values versus the predicted values.**","157c625a":"**Print out the coefficients of the model**","10daf52b":"## Training the Model\n\nNow its time to train our model on our training data!\n\n**Import LinearRegression from sklearn.linear_model **","096bc92d":"## Imports\nImport pandas, numpy, matplotlib,and seaborn. set %matplotlib inline","acb0308d":"## Evaluating the Model\n\nLet's evaluate our model performance by calculating the residual sum of squares and the explained variance score (R^2).\n\n**Calculate the Mean Absolute Error, Mean Squared Error, and the Root Mean Squared Error. Refer to the lecture or to Wikipedia for the formulas**","0370dd07":"**Do the same but with the Time on App column instead.**","ec1955c6":"**Train\/fit lm on the training data.**"}}