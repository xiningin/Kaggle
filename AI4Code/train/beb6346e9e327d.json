{"cell_type":{"fc0bb687":"code","6f2c879f":"code","1b18643b":"code","495d078a":"code","dc56b217":"code","8b66b950":"code","2dc3dd7f":"code","744b0118":"code","722d30a8":"code","d55af66a":"code","4ff7da51":"code","161573f2":"code","09319cf6":"code","71758ea8":"code","a5ebd4bf":"code","6f4089df":"code","adf0196b":"code","343b2436":"code","2cc6f614":"code","6fcd526b":"code","156dc15e":"code","7609e84a":"code","11642312":"code","8f810b25":"code","4b2afdc8":"code","9d19c932":"code","cc7f04b2":"code","5df7f3e1":"code","26ace416":"code","c47843b7":"code","be89464a":"code","286835e1":"code","cc0d891c":"code","e4c2a917":"code","5bab06d9":"markdown","6661f0e4":"markdown","39189695":"markdown","78802e57":"markdown","40a686e1":"markdown","856ac967":"markdown","9d7e363a":"markdown","3fe7e53c":"markdown","53cc6117":"markdown"},"source":{"fc0bb687":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f2c879f":"#\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u306f\u300cimport\u300d\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1b18643b":"#\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u306fPandas\u306e\u300cread_csv()\u300d\ndata_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndata_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndata_gender_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","495d078a":"#\u5909\u6570\u540d\u3067\u5b9f\u884c\u3059\u308c\u3070\u4e2d\u8eab\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\n#\u305f\u3060\u3057\u3001\u6570\u304c\u591a\u3044\u3068\u81ea\u52d5\u3067\u7701\u7565\u3055\u308c\u308b\ndata_train","dc56b217":"#\u30c7\u30fc\u30bf\u6570\u304c\u591a\u3044\u3068\u5168\u4ef6\u8868\u793a\u306f\u6642\u9593\u304c\u304b\u304b\u308b\n#head()\u3067\u8868\u793a\u884c\u6570\u3092\u6307\u5b9a\uff08\u30c7\u30d5\u30a9\u30eb\u30c85\u884c\uff09\ndata_train.head()","8b66b950":"data_test.head(10)","2dc3dd7f":"#describe()\u3092\u4f7f\u3048\u3070\u3001\u4e3b\u8981\u306a\u7d71\u8a08\u6307\u6a19\u3092\u307e\u3068\u3081\u3066\u78ba\u8a8d\u3067\u304d\u308b\ndata_train.describe()","744b0118":"#\u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u3056\u3063\u3068\u78ba\u8a8d\u3059\u308b\u306b\u306f\u300cpandas_profiling\u300d\u304c\u4fbf\u5229\n# import pandas_profiling","722d30a8":"#\u5b9f\u884c\u306fpandas.DataFrame\u306e\u300cprofile_report()\u300d\n# data_train.profile_report()","d55af66a":"#Pclass\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\nsns.countplot(x='Pclass', hue='Survived', data=data_train)","4ff7da51":"#Sex\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\nsns.countplot(x='Sex', hue='Survived', data=data_train)","161573f2":"#Age\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\n#\u30c7\u30fc\u30bf\u6570\u304c\u591a\u3044\u3068\u975e\u5e38\u306b\u898b\u3065\u3089\u3044\nsns.countplot(x='Age', hue='Survived', data=data_train)","09319cf6":"#\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3067\u5e45\u3092\u53d6\u3063\u3066\u78ba\u8a8d\nplt.hist(data_train.loc[data_train['Survived'] == 0, 'Age'].dropna(), bins=30, alpha=0.7, label='0')\nplt.hist(data_train.loc[data_train['Survived'] == 1, 'Age'].dropna(), bins=30, alpha=0.7, label='1')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.legend(title='Survived')","71758ea8":"#SibSp\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316  \u5144\u5f1f\uff08Siblings\uff09\u3084\u914d\u5076\u8005\uff08Spouses\uff09\u306e\u6570\nsns.countplot(x='SibSp', hue='Survived', data=data_train)","a5ebd4bf":"#Parch\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316  \u89aa\uff08Parents\uff09\u3084\u5b50\u4f9b\uff08Children\uff09\u306e\u6570\nsns.countplot(x='Parch', hue='Survived', data=data_train)\n#\u51e1\u4f8b\u306e\u4f4d\u7f6e\u56fa\u5b9a\nplt.legend(loc='upper right', title='Survived')","6f4089df":"#\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3067\u5e45\u3092\u53d6\u3063\u3066\u78ba\u8a8d\n#\u7279\u5b9a\u306e\u7bc4\u56f2\u306b\u96c6\u307e\u3063\u3066\u3044\u308b\u3068\u304d\u306f\u30d3\u30f3\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u305f\u307b\u3046\u304c\u898b\u3084\u3059\u3044\nplt.hist(data_train.loc[data_train['Survived'] == 0, 'Fare'].dropna(), bins=30, alpha=0.7, label='0')\nplt.hist(data_train.loc[data_train['Survived'] == 1, 'Fare'].dropna(), bins=30, alpha=0.7, label='1')\nplt.xlabel('Fare')\nplt.ylabel('Count')\nplt.legend(title='Survived')","adf0196b":"#\u518d\u78ba\u8a8d\n#\u7279\u5b9a\u306e\u7bc4\u56f2\u306b\u96c6\u307e\u3063\u3066\u3044\u308b\u3068\u304d\u306f\u30d3\u30f3\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u305f\u307b\u3046\u304c\u898b\u3084\u3059\u3044\nplt.hist(data_train.loc[data_train['Survived'] == 0, 'Fare'].dropna(), range=(0,250), bins=20, alpha=0.7, label='0')\nplt.hist(data_train.loc[data_train['Survived'] == 1, 'Fare'].dropna(), range=(0,250), bins=20, alpha=0.7, label='1')\nplt.xlabel('Fare')\nplt.ylabel('Count')\nplt.legend(title='Survived')","343b2436":"#Embarked\u3068Survived\u306e\u4ef6\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3067\u53ef\u8996\u5316\nsns.countplot(x='Embarked', hue='Survived', data=data_train)","2cc6f614":"#\u6559\u5e2b\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3001\u53cc\u65b9\u306b\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3046\u305f\u3081\u3001\u4e00\u65e6\u3072\u3068\u3064\u306b\u7d50\u5408\ndata_all = pd.concat([data_train, data_test], sort=False)","6fcd526b":"#\u5404\u7279\u5fb4\u91cf\u306e\u6b20\u640d\u5024\u306e\u6570\u3092\u78ba\u8a8d\n#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u300cSurvived\u300d\u304c\u306a\u3044\u305f\u3081\u6b20\u640d\u5024\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\ndata_all.isnull().sum()","156dc15e":"#Parch\u3068SibSp\u3092\u5408\u308f\u305b\u305f\u7279\u5fb4\u91cf\u3092\u4f5c\u6210\ndata_all['Families'] = data_all['Parch'] + data_all['SibSp'] + 1\ndata_train['Families'] = data_all['Families'][:len(data_train)]\ndata_test['Families'] = data_all['Families'][len(data_train):]\nsns.countplot(x='Families', data=data_train, hue='Survived')","7609e84a":"#1\u304c\u305a\u3070\u629c\u3051\u3066\u591a\u3044\u305f\u3081\u3001\u5225\u306e\u7279\u5fb4\u91cf\u3068\u3057\u3066\u629c\u304d\u51fa\u3059\ndata_all['Alone'] = 0\ndata_all.loc[data_all['Families'] == 1, 'Alone'] = 1\ndata_all.head()","11642312":"#Sex\u306e\u5024\u3092\u7537\u6027\u30fb\u5973\u6027\u3067\u5206\u3051\u308b\ndata_all['Sex_male'] = data_all['Sex'].replace(['male', 'female'], [1, 0])\ndata_all['Sex_female'] = data_all['Sex'].replace(['male', 'female'], [0, 1])\ndata_all['Sex'] = data_all['Sex'].replace(['male', 'female'], [0, 1])\ndata_all.head()","8f810b25":"#\u5e74\u9f62\u306f\u82e5\u3044\u4eba\u304b\u3089\u9ad8\u9f62\u8005\u307e\u3067\u5e45\u5e83\u3044\u305f\u3081\u3001\u4e2d\u592e\u5024\u3067\u88dc\u5b8c\u3059\u308b\u306e\u3082\u624b\ndata_all['Age'].fillna(data_all['Age'].median(), inplace=True)","4b2afdc8":"#Embarked\u306e\u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3057\u3001\u6570\u5024\u306b\u7f6e\u304d\u63db\u3048\u308b\ndata_all['Embarked'].fillna('S', inplace=True)\ndata_all['Embarked'] = data_all['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)","9d19c932":"#\u5f71\u97ff\u306e\u5c11\u306a\u305d\u3046\u306a\u7279\u5fb4\u91cf\u306f\u4e00\u65e6\u524a\u9664\u3059\u308b\ndrop_columns = ['PassengerId', 'Name', 'Ticket', 'Cabin']\ndata_all.drop(drop_columns, axis=1, inplace=True)","cc7f04b2":"#\u518d\u78ba\u8a8d\ndata_all.isnull().sum()","5df7f3e1":"#Fare\u306e\u6b20\u640d\u5024\u3092\u5e73\u5747\u5024\u3067\u88dc\u5b8c\u3059\u308b\ndata_all['Fare'].fillna(np.mean(data_all['Fare']), inplace=True)","26ace416":"#\u7d50\u5408\u3057\u305f\u30c7\u30fc\u30bf\u3092\u3001\u518d\u5ea6\u6559\u5e2b\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u96e2\ndata_train = data_all[:len(data_train)]\ndata_test = data_all[len(data_train):]","c47843b7":"#\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6295\u5165\u3059\u308b\u305f\u3081\u3001\u7279\u5fb4\u91cf\u3068\u76ee\u7684\u5909\u6570\u3092\u5206\u96e2\ny_data_train = data_train['Survived']\nX_data_train = data_train.drop('Survived', axis=1)\nX_data_test = data_test.drop('Survived', axis=1)","be89464a":"#\u6c7a\u5b9a\u6728\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)","286835e1":"#\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\nclf.fit(X_data_train, y_data_train)","cc0d891c":"#\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\ny_data_pred = clf.predict(X_data_test)","e4c2a917":"#\u4e88\u6e2c\u7d50\u679c\u3092Submit\u7528\u306ecsv\u3068\u3057\u3066\u4f5c\u6210\nsubmit = data_gender_submission\nsubmit['Survived'] = list(map(int, y_data_pred))\nsubmit.to_csv('engineering_submit.csv', index=False)","5bab06d9":"# \u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0","6661f0e4":"# \u4e88\u6e2c","39189695":"## \u5404\u7279\u5fb4\u91cf\u3068\u76ee\u7684\u5909\u6570\u306e\u95a2\u4fc2\u6027\u3092\u78ba\u8a8d","78802e57":"# \u6307\u91dd\n**\u2460Parch\u3068SibSp\u306f\u3069\u3061\u3089\u3082\u5bb6\u65cf\u69cb\u6210\u306e\u7279\u5fb4\u91cf\u3067\u3042\u308a\u3001\u4eba\u6570\u306b\u5fdc\u3058\u3066\u751f\u5b58\u7387\u304c\u5909\u308f\u308b\u3053\u3068\u304b\u3089\u30012\u3064\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u7279\u5fb4\u91cf\u3092\u4f5c\u3063\u3066\u307f\u308b    \n\u2461Age\u306f\u5e74\u4ee3\u5dee\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u5e73\u5747\u306b\u6a19\u6e96\u504f\u5dee\u3092\u52a0\u3048\u3066\u3070\u3089\u3064\u304d\u3092\u8003\u616e\u3059\u308b  \n\u2462Sex\u306f\u5973\u6027\u304c\u5727\u5012\u7684\u306b\u751f\u5b58\u7387\u304c\u9ad8\u3044\u305f\u3081\u3001\u7537\u6027\u3068\u5973\u6027\u5225\u3005\u306e\u7279\u5fb4\u91cf\u306b\u5206\u3051\u3066\u307f\u308b  \nparch\uff1a \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u540c\u4e57\u3057\u3066\u3044\u308b\u89aa\uff08Parents\uff09\u3084\u5b50\u4f9b\uff08Children\uff09\u306e\u6570  \nsibsp\uff1a \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\uff08Siblings\uff09\u3084\u914d\u5076\u8005\uff08Spouses\uff09\u306e\u6570**","40a686e1":"# \u30e2\u30c7\u30eb\u4f5c\u6210","856ac967":"# \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f","9d7e363a":"# Submit","3fe7e53c":"# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f","53cc6117":"# EDA\uff08\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790\uff09"}}