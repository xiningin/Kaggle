{"cell_type":{"d478702d":"code","e9a80b30":"code","0b3731e3":"code","c6e27319":"code","bd82502b":"code","f4e33817":"code","84807f2a":"code","fb626ab4":"code","106ec5d4":"code","2ee71f18":"code","a25fadc3":"code","e8307dc4":"code","8f8ce424":"code","e98971eb":"code","c8cfce3b":"code","de78f4db":"code","b858d56a":"code","6d2c9230":"code","3e6d896f":"code","ff1f47b7":"markdown","8cf731da":"markdown","1c2a6ae4":"markdown","52933958":"markdown","51d9e077":"markdown"},"source":{"d478702d":"import os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    \n    for filename in filenames:\n        \n        print(os.path.join(dirname, filename))","e9a80b30":"# Importing libraries and dependencies\n\nimport pandas as pd\nimport numpy as np  \nimport matplotlib.pyplot as plt  \n%matplotlib inline","0b3731e3":" #Reading the dataset\n\ndf = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndf.head(n = 5)","c6e27319":"convert_label = {\"Species\": {\"Iris-versicolor\": 0, \"Iris-setosa\": 1, \"Iris-virginica\": 2} }\ndf = df.replace(convert_label)","bd82502b":"df.head(n=5)","f4e33817":"df.shape","84807f2a":"df.dtypes","fb626ab4":"# total null value (column-wise)\ndf.isnull().sum()","106ec5d4":"df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']].describe()","2ee71f18":"df['Species'].unique()","a25fadc3":"df['Species'].value_counts()","e8307dc4":"df['Species'].value_counts().plot(kind = 'barh', color = ['red', 'orange', 'yellow'])","8f8ce424":"x = df.iloc[:, [1, 2, 3, 4]].values\nx","e98971eb":"y = df['Species']\ny = np.array(y)\nprint(y)","c8cfce3b":"plt.scatter(x[y == 0, 0], x[y == 0, 1], marker = '+', s = 80, c = 'yellow', label = 'Iris-versicolor')\nplt.scatter(x[y == 1, 0], x[y == 1, 1], marker = '+', s = 80, c = 'orange', label = 'Iris-setosa')\nplt.scatter(x[y == 2, 0], x[y == 2, 2], marker = '+', s = 80, c = 'red', label = 'Iris-virginica')\n\nplt.title('Iris Dataset Clustering')\nplt.legend()","de78f4db":"# Hierarchical Clustering\n\nimport scipy.cluster.hierarchy as sch\n\ndendogram = sch.dendrogram(sch.linkage(x, method='ward'))\n\nplt.title('Dendogram')\nplt.xlabel('Species')\nplt.ylabel('Euclidean Distances')\nplt.show()","b858d56a":"from sklearn.cluster import KMeans\n\nkm = KMeans(n_clusters = 3, random_state = 5)\nkm.fit(x)\n\npredict = km.labels_\n\npredict","6d2c9230":"plt.scatter(x[predict == 0, 0], x[predict == 0, 1], s = 70, marker = '^', c = 'yellow', label = 'Iris-versicolour')\nplt.scatter(x[predict == 1, 0], x[predict == 1, 1], s = 70, marker = '*', c = 'orange', label = 'Iris-setosa')\nplt.scatter(x[predict == 2, 0], x[predict == 2, 2], s = 70, marker = 's', c = 'red', label = 'Iris-virginica')\n\nplt.title('K-means Clustering for Iris dataset')\nplt.legend()","3e6d896f":"from sklearn.metrics import classification_report\n\nprint(classification_report(y, km.labels_))","ff1f47b7":"### Plottiong the model","8cf731da":"### Using Dendogram to find the optimal number of clusters","1c2a6ae4":"### Evaluation of the model","52933958":"### Iris Dataset Clustering Plot\nIn this Iris dataset, we have three classes. We visualise these classes in a 2-D graph.","51d9e077":"### Implementing K-means with k = 3"}}