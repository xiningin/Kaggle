{"cell_type":{"ccd551e9":"code","bface9db":"code","33a8c449":"code","d958d4c2":"code","b10557b7":"code","e69656e4":"code","2aa834a3":"code","56c9e3ed":"code","e32e3294":"code","4ef59483":"code","4b8ef795":"code","c63b17c0":"code","41680bb6":"code","dac199b3":"code","ce3b8ca2":"code","b6e68358":"code","dc262798":"markdown"},"source":{"ccd551e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n#from subprocess import check_output\n#print(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","bface9db":"data = pd.read_csv('..\/input\/movies_metadata.csv')","33a8c449":"data.info()\ndata.columns\ndata.head(10)\ndata.dtypes #column types\ndata.describe()","d958d4c2":"f1= (data.original_language == 'tr')\ndata1 = data[f1]\ndata1.head(10)\n#data_view=data1.loc[:,['original_language','original_title','overview','vote_count','vote_average','popularity','release_date','runtime','revenue']].sort_values('release_date',ascending=False)\n\ndata_view=data1.loc[:,['original_language','original_title','overview','vote_count','vote_average','popularity','release_date','runtime','revenue']].sort_values('release_date',ascending=False)\ndata_view\n","b10557b7":"data.corr()\n#correlation map\n#featurelar aras\u0131ndaki ili\u015fkiyi g\u00f6rmek i\u00e7in kullan\u0131l\u0131r\n#1 e yak\u0131n olduk\u00e7a ili\u015fkili\n#-1 e yak\u0131nla\u015ft\u0131k\u00e7a ters orant\u0131l\u0131\n\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","e69656e4":"data_view.vote_count.plot(color='r',label = 'Vote Count',linewidth=1,alpha = 1,grid = True,linestyle = ':')\ndata_view.revenue.plot(color='g', label = 'Revenue',linewidth=1,alpha=1,grid=True,linestyle='-.')\nplt.legend(loc='upper left')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","2aa834a3":"# Scatter Plot \n# x = vote_count, y = vote_average\ndata.plot(kind='scatter', x='vote_count', y='vote_average',alpha = 0.5,color = 'red')\nplt.xlabel('vote_count')              # label = name of label\nplt.ylabel('vote_average')\nplt.title('vote_count vote_average Scatter Plot')            # title = title of plot\nplt.show()","56c9e3ed":"# Histogram\n# bins = number of bar in figure\ndata.vote_count.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","e32e3294":"#dictionary examples\ndictionary = data_view.set_index('original_title')['vote_count'].to_dict()\ndictionary","4ef59483":"dictionary['Kedi'] = 50.0\n\n#del dictionary['Siccin 3: C\u00fcrm\u00fc Ask']\nprint('Pek Yak\u0131nda' in dictionary)\ndictionary.clear()\n#del dictionary\ndictionary","4b8ef795":"i=0\nfor index,value in data_view[['original_title']][::1].iterrows():\n    print(index,\" : \",value)\n    i = i+1\nprint(\"Toplam: \",i)","c63b17c0":"#user definition function\ndef factorial(x):\n    i=1\n    fac=i\n    while i<=x:\n        fac = fac*i\n        i = i+1\n    return fac\n\nfactorial(3)\n\n    ","41680bb6":"#lambda function\n\nlis = [1,2,3,4,5]\nlis2=[]\n\nx = lambda i:i**2\n\nfor i in lis:\n    lis2.append(x(i))\n    \nlis2\n","dac199b3":"#map,zip,filter\n\nlis3 = map(factorial,lis)\n\nfor i in lis3:\n    print(i)\n\nlis4 = [1,2,3,4,5]\nlis5 = ['a','b','c','d','e']\nlis6 = [10,20,30,40,50]\n\n\ndata1 = zip(lis4,lis5)\nunlis1,unlis2 = zip(*data1)\nprint(unlis1)\nprint(unlis2)\n\ndata2 = map(lambda x,y:x*y,lis4,lis6)\ndata3 = filter(lambda x: x%2==0,lis4)\n\nfor i in data1:\n    print(i)\n\nfor i in data2:\n    print(i)\n\nprint(list(data3))\n","ce3b8ca2":"#list comprehention\n\nlis7 = [100,50,250,40,15,312,475,86,20,500]\nlis7_state = ['large' if i>100 else 'medium' if i<=100 and i>=50 else 'small' for i in lis7]\nprint(lis7_state)\n\n","b6e68358":"total_vote_average = data.vote_average.mean()\nprint(total_vote_average)\n\ndata_view=data.loc[:,['original_language','original_title','overview','vote_count','vote_average','popularity','release_date','runtime','revenue']].sort_values('release_date',ascending=False)\nf1= (data_view.original_language == 'tr')\ndata_view = data_view[f1]\n\ndata_view['state'] = ['good' if each > total_vote_average else 'bad' for each in data_view.vote_average]\ndata_view\n\n\n\n","dc262798":"I am beginner to Data Science and Python.\nThis kernel is notes to myself for use codes while learning."}}