{"cell_type":{"d0f28b73":"code","f209979e":"code","4d9e8946":"code","0128491e":"code","cfb63a6f":"code","64d63be0":"code","edcf349b":"code","33e7b6f1":"code","182bdf86":"code","b025741e":"code","b6e86565":"code","85739a26":"code","d3aba6d5":"code","d845e9bd":"code","7bf33678":"code","f3718138":"code","69d32d26":"code","0286cd71":"code","15f332b0":"code","76a54b7e":"code","100b1e57":"code","65b40ddb":"code","85296179":"code","00692945":"code","867f75ac":"code","39d641de":"code","b76e4c40":"code","9f5ad548":"code","1b9d34ce":"code","2f2acd03":"code","b84cd5cb":"code","6806276d":"code","2d9466b2":"markdown","60654552":"markdown","a8d31399":"markdown","6871dd66":"markdown","66d9685a":"markdown","df5b611f":"markdown","15eefa97":"markdown","559a65e9":"markdown","60e597fe":"markdown","e55bf0ed":"markdown","1ff2334e":"markdown","5cfde2e5":"markdown","df1c4197":"markdown","32fd3077":"markdown"},"source":{"d0f28b73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f209979e":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId=test_df[\"PassengerId\"]","4d9e8946":"train_df.columns ","0128491e":"len(train_df.columns)","cfb63a6f":"train_df.head()","64d63be0":"train_df.describe()","edcf349b":"train_df.info()","33e7b6f1":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n{}\".format(variable,varValue))","182bdf86":"category1= [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","b025741e":"category2= [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","b6e86565":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"{} distribution with histogram\".format(variable))\n    plt.show()","85739a26":"numericVar=[\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","d3aba6d5":"train_df[[\"Pclass\",\"Survived\"]]","d845e9bd":"train_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"]).mean()\n#if we do not use as_index=False,","7bf33678":"#Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","f3718138":"#Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","69d32d26":"#Sibsp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","0286cd71":"#Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","15f332b0":"#Embarked vs Survived\ntrain_df[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","76a54b7e":"#Age vs Survived\ntrain_df[[\"Age\",\"Survived\"]].groupby([\"Age\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","100b1e57":"def detect_outliers(df, features):\n    outlier_indices = []\n    \n    for c in features:\n        #1st quartile\n        Q1 = np.percentile(df[c],25)\n        #3rd quartile\n        Q3 = np.percentile(df[c],75)\n        #IQR\n        IQR = Q3 - Q1\n        #Outlier step\n        outlier_step = IQR * 1.5\n        #Detect outlier and indices\n        outlier_list_col = df[(df[c] < Q1 - outlier_step)| (df[c] > Q3 + outlier_step)].index\n        #store indices\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices=Counter(outlier_indices)\n    #if there are more than two outliers in the same sample, we will remove it from list:\n    multiple_outliers=list(i for i,v in outlier_indices.items() if v>2) \n    return multiple_outliers","65b40ddb":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","85296179":"train_df_len=len(train_df)\ntrain_df=pd.concat([train_df,test_df],axis=0).reset_index(drop=True)\n#if your run this cell more one time, an error occurs here.","00692945":"train_df.head()","867f75ac":"train_df.columns[train_df.isnull().any()]\n#which columns have missing values","39d641de":"train_df.isnull().sum()\n#total number of missing values in columns ","b76e4c40":"train_df[train_df[\"Embarked\"].isnull()]","9f5ad548":"train_df.boxplot(column=\"Fare\", by=\"Embarked\",figsize=(11,11))\nplt.show()","1b9d34ce":"train_df[\"Embarked\"]=train_df[\"Embarked\"].fillna(\"C\")","2f2acd03":"train_df[train_df[\"Embarked\"].isnull()]","b84cd5cb":"train_df[\"Fare\"]=train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"]))","6806276d":"train_df[train_df[\"Fare\"].isnull()]","2d9466b2":"<a id=\"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing values\n* Fare has only 1 missing value","60654552":"<a id=\"7\"><\/a><br>\n# Outlier Detection","a8d31399":"<a id=\"5\"><\/a><br>\n## Numerical Variable","6871dd66":"<a id=\"4\"><\/a><br>\n## Categorical Variable","66d9685a":"* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","df5b611f":"<a id=\"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Survived, Sex, Pclass, Cabin, Name, Ticket, SibSp and Parch\n* Numeric Variable: Agei PassengerId and Fair","15eefa97":"* float64(2): Age and Fare\n* int64(5): PassengerId, Survived, Pclass, SibSp and Parch\n* object(5): Cabin and Embarked","559a65e9":"<a id=\"6\"><\/a><br>\n# Basic Data Analysis","60e597fe":"<a id=\"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","e55bf0ed":"<a id=\"1\"><\/a><br>\n# Load and Check Data","1ff2334e":"<a id = \"2\"><\/a><br>\n# Variable Description","5cfde2e5":"<a id=\"9\"><\/a><br>\n## Find Missing Value","df1c4197":"# INTRODUCTION\nThe sinking of Titanic is one of the most infamous shipwrecks in the history. In 1912, during her first voyage, the Titanic sank after colliding with an iceberg. After this shipwreck, 1502 out of 3547 passengers and crew killed. Also, interest in this shipwreck has been gradually increasing.\n\n<font color=\"blue\">\nContent:\n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)","32fd3077":"1. PassengerId: unique ID number to each passenger\n1. Survived: Passenger survive(1) or died(0) \n1. Pclass: Passenger class\n1. Name name \n1. Sex: Gender of passenger\n1. Age: Age of passenger\n1. SibSp: Number of siblings\/spouses\n1. Parch: Number of parents\/children\n1. Ticket: Ticket number\n1. Fare: Amount of money spent on ticket\n1. Cabin: Cabin category\n1. Embarked: Port where passenger embarked(C=Cherbourg, Q=Queenstown, S=Southampton)"}}