{"cell_type":{"41245640":"code","94cde0f5":"code","96ab5e37":"code","117b8783":"code","f29ee833":"code","d27694f1":"code","6469a46d":"code","87a3d361":"markdown","f7d042e1":"markdown","f2ed1f84":"markdown","246f0482":"markdown","c9c03a19":"markdown","e0fba585":"markdown","f7c46a3a":"markdown","64d196b6":"markdown"},"source":{"41245640":"!pip install feyn","94cde0f5":"import feyn\nimport pandas as pd\ndf = pd.read_csv(\"\/kaggle\/input\/car-insurance-data\/Car_Insurance_Claim.csv\")","96ab5e37":"df.dropna(inplace=True)\ntrain, test = feyn.tools.split(df, ratio=(2,1), random_state=42)","117b8783":"stypes = {name: \"cat\" for name in df if df[name].dtype==\"object\"}","f29ee833":"ql = feyn.connect_qlattice()\nql.reset(random_seed=42)","d27694f1":"models = ql.auto_run(train, output_name=\"OUTCOME\", kind=\"classification\", stypes=stypes)","6469a46d":"models[0].plot_roc_curve(train, label=\"train\")\nmodels[0].plot_roc_curve(test, label=\"test\")","87a3d361":"![image.png](attachment:9edd699d-f706-47b7-a7a5-0ca5d130d2c5.png)\n\nIn the TLDR (Too Long; didn't read) notebooks, I don't try to do any fancy feature engineering, data cleaning, n-fold validation, or similar time consuming techniques. I simply solve the problem in six staightforward steps:\n\n1. Load the data\n2. Split in train and test sets\n3. Determine in input features are categorical or continuous\n4. Connect to a QLattice and reset it\n5. Use QLattice to find the simples possible model\n6. Evaluate the model (with AUC for classification and $R^2$ for regression)\n\n","f7d042e1":"# 3. Identify categorical features","f2ed1f84":"# 2. Split in train and test","246f0482":"# 4. Connect to QLattice an reset","c9c03a19":"# 6. Evaluate with AUC","e0fba585":"# THE END","f7c46a3a":"# 5. Find best model","64d196b6":"# 1. Load the data "}}