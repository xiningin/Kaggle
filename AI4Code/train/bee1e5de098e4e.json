{"cell_type":{"e1f9a1eb":"code","d7e64f1d":"code","e40a7ec5":"code","1120bec3":"code","76a00dce":"code","966cdae6":"code","19f2ee25":"code","ac4e36ee":"code","6a11a5b1":"code","cad5fcb1":"code","8fcb5215":"code","13f6b738":"code","987f8a35":"code","a8224a1b":"code","56d46396":"code","eb48b561":"code","d6dba8ae":"code","2825058f":"code","86002e88":"code","a914e23b":"code","854c0b6e":"code","1e44eb77":"code","13bd5559":"code","bbb21a55":"code","a772424f":"code","526705ff":"code","a3c6d4f6":"code","afb43833":"code","76314a9c":"code","a42e6f60":"code","bceae0c4":"code","9de3ceb5":"code","a6774561":"code","310d234f":"code","2a6c9703":"code","ce6a938c":"code","3e37c43c":"code","184a82fa":"code","7f5ef335":"code","975b4998":"code","c6d42d1a":"code","e78206c1":"code","13aaa167":"code","9536fa1a":"code","24784db0":"code","b2f4da8b":"code","f99e875d":"code","fcd2b0e5":"code","5f968155":"code","c391bc58":"code","f3874cc3":"code","ec1cbff2":"code","5538c7d5":"code","117a36b6":"code","1e914485":"code","b9b16a8e":"code","6bb9225d":"code","bc24cbf6":"code","4048ba4a":"code","dc314128":"code","90d7f6ac":"code","3bd4bd0e":"code","81cc2fa9":"code","b1076a57":"code","ef210f09":"code","d07a8b40":"code","b31ca160":"code","bba0df49":"code","e9061802":"code","8b8b4505":"code","4170442f":"code","a8519c25":"code","298e4819":"code","9c72b94b":"code","aea188b2":"code","474b0f00":"code","79dc3107":"code","696aff16":"code","6ca14eab":"code","b02ed25d":"code","b284780e":"code","83d8244a":"code","4a9bad0e":"code","776c11e9":"code","3beb6f65":"code","af933792":"code","162c7b2b":"code","af74fd9e":"code","31df6068":"code","212ee223":"code","ab2e2b42":"code","eb8a6d4b":"code","e0704fdb":"code","5cfe943d":"code","c4bea0ea":"code","733e4f98":"code","ee272eb9":"code","acbe16c7":"code","fed226b0":"code","dae8dae0":"code","8c84e27e":"code","84eb3814":"code","3a04245f":"code","44c7f1a1":"code","8730c642":"code","8d7e6257":"code","619f1a9d":"code","9206c1be":"code","9b07a05f":"code","eb27fe21":"code","c2c28271":"code","fb2f71ed":"code","d4d41d4f":"code","178738ff":"code","bda98ba5":"code","6530e1af":"code","2ddd8b32":"code","4be4715c":"code","b69f28ca":"code","eeb1b901":"code","1750f8dd":"code","1da4144f":"code","a87ea081":"code","926c000d":"code","33ae3647":"code","bf0385d1":"code","e8da5583":"code","1e47e724":"code","188ac3c0":"code","0f3a9a83":"code","229a87f8":"code","75f74b11":"code","28e8d266":"code","c0bc087f":"markdown","ea969aec":"markdown","24b545d2":"markdown","320147ab":"markdown","20f30471":"markdown","281bbab3":"markdown","3ed3cac5":"markdown","3e7df375":"markdown","8776c1ca":"markdown","4f1783f5":"markdown","19ed1924":"markdown","b121bb79":"markdown","c125156a":"markdown","03b05c75":"markdown","8c3040c2":"markdown","5c4bfc62":"markdown","961d0aa1":"markdown","6a53501c":"markdown","40990add":"markdown","d0bd9d45":"markdown","ef3cde22":"markdown","d07f1afd":"markdown","6383366c":"markdown","fb89e6b0":"markdown","db9cf481":"markdown","77680fbb":"markdown","447c36b3":"markdown","33ed1419":"markdown","74c0ad8b":"markdown","034b7e26":"markdown","2a4b1ed6":"markdown","b7a6da88":"markdown","75173d40":"markdown","160a6936":"markdown","22534a57":"markdown","8c9ff4ca":"markdown","cd050cc7":"markdown","37b7dc9f":"markdown","79586863":"markdown","fb928ce1":"markdown","a0c4cf48":"markdown","2d6e8373":"markdown","7a76d7d4":"markdown","412494cf":"markdown","81d8b41b":"markdown","05c7190e":"markdown","44a1b8ed":"markdown","4b0cbca4":"markdown","3d3c6837":"markdown","81d4618b":"markdown","5787f8d8":"markdown","6392ce34":"markdown"},"source":{"e1f9a1eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7e64f1d":"#importing relevant libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom wordcloud import WordCloud, STOPWORDS\nimport glob\nimport plotly.graph_objs as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom datetime import datetime as dt\ninit_notebook_mode(connected=True)\n%matplotlib inline ","e40a7ec5":"#reading the product info dataset\n\nproduct_df = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\n","1120bec3":"# .head() shows top 5 datapoints\nproduct_df.head()","76a00dce":"#getting insights\nproduct_df.describe()","966cdae6":"#more insighst\nproduct_df.info()","19f2ee25":"#dropping null objects\nproduct_df.dropna(inplace=True)","ac4e36ee":"# Grouping products by which Sector(s) they belong to\npie=product_df.groupby('Sector(s)').count()[['LP ID']]\npie['percent'] = (pie['LP ID']\/pie['LP ID'].sum() *100)\nx=list(pie['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\npie","6a11a5b1":"# Plotting a pie chart\nsns.set_style('darkgrid')\nplt.figure(figsize=(10,10))\n\nplt.pie(pie['LP ID'],labels=pie.index,explode=[0,0.4,0,0,0],colors = (\"blue\",\"cyan\",\"orange\",\"beige\",\"green\"),autopct='%1.1f%%')\n         \nplt.title(\"Sector(s) in which most Digital Learning providers are active in\")\nplt.legend(title=\"Sector(s):\")","cad5fcb1":"#plotting a bar graph\nplt.figure()\nplt.title(\"Active sectors\")\nplt.ylabel('Sector(s)')\nplt.xlabel('No. of providers')\nsns.barplot(x=list(pie['LP ID']),y=pie.index)","8fcb5215":"# Since only 2 products do not deal with PreK-12 , let's find thos\nproduct_df[product_df['Sector(s)']=='Higher Ed; Corporate']['Product Name'],product_df[product_df['Sector(s)']=='Corporate']['Product Name']","13f6b738":"#Function to classify PEFs into `LC,CM & SDO`\ndef pef1(data):\n    return data.split('-')[0]\n#Function to further classify LC,CM & SDO\ndef pef2(data):\n     return data.split('-')[0]+'-'+data.split('-')[1]\n#Using the above functions\nproduct_df1 = product_df.sort_values(by='Primary Essential Function',axis=0)\nproduct_df1['PEF-1']=product_df['Primary Essential Function'].apply(pef1)\nproduct_df1['PEF-2']=product_df['Primary Essential Function'].apply(pef2)","987f8a35":"#Grouping by Primary Essential Function\npef=product_df1.groupby('Primary Essential Function',sort=False).count()[['LP ID']]\npef['percent'] = (pef['LP ID']\/pef['LP ID'].sum() *100) # finding what percent of products have these Primary Essential Function","a8224a1b":"pef.head()","56d46396":"def pef1(data):\n    return data.split('-')[0]\ndef pef2(data):\n     return data.split('-')[0]+'-'+data.split('-')[1]\nproduct_df1 = product_df.sort_values(by='Primary Essential Function',axis=0)\nproduct_df1['PEF-1']=product_df['Primary Essential Function'].apply(pef1)\nproduct_df1['PEF-2']=product_df['Primary Essential Function'].apply(pef2)","eb48b561":"product_df1.head()","d6dba8ae":"# Similar as that of pef above\npef1=product_df1.groupby('PEF-1',sort=False).count()[['LP ID']]\npef1['percent'] = (pef1['LP ID']\/pef1['LP ID'].sum() *100)","2825058f":"pef1","86002e88":"# Similar as that of pef above\npef2=product_df1.groupby('PEF-2',sort=False).count()[['LP ID']]\npef2['percent'] = (pef2['LP ID']\/pef2['LP ID'].sum() *100)\n","a914e23b":"plt.figure(figsize=(10,10))\ncm, lc, other, sdo=[plt.cm.Blues, plt.cm.Reds, plt.cm.Greens, plt.cm.pink_r]\nplt.pie(pef1['LP ID'],labels=pef1.index,explode=[0,0.4,0,0],colors=[cm(0.6) , lc(0.6) , other(0.8) , sdo(0.6)],autopct='%1.1f%%')\nplt.title(\"Sector(s) in which most Digital Learning providers are active in\")\nplt.legend(title=\"Sector(s):\",loc='lower right',bbox_to_anchor=(0,0))\n#ax.legend(loc='lower right',bbox_to_anchor=(-2,1.5))","854c0b6e":"#Plotting a nested pie chart using pef1 and pef2\nsns.set_style('darkgrid')\nfig,ax = plt.subplots()\nax.axis('equal')\n\nplt.rcParams.update({'text.color' : \"black\",\n                     'axes.labelcolor' : \"black\"})\nplt.rcParams.update({'font.size': 25})\n\ncm, lc, other, sdo=[plt.cm.Blues, plt.cm.Reds, plt.cm.Greens, plt.cm.pink_r]\n\nax.pie(pef1['LP ID'],colors=[cm(0.6) , lc(0.6) , other(0.8) , sdo(0.6)], radius=10,explode=[0,0,0,0],labeldistance =1.1)\nax.pie(pef2['LP ID'],labels=pef2.index,colors=[cm(0.2),cm(0.4),cm(0.6),lc(0.5),lc(0.1),lc(0.2),lc(0.3),lc(0.4),lc(0.5),lc(0.6),lc(0.7),lc(0.8),lc(0.9),other(0.5),sdo(0.1),sdo(0.2),sdo(0.3),sdo(0.4),sdo(0.5),sdo(0.6),sdo(0.7),sdo(0.8),sdo(0.9)], autopct='%1.1f%%', radius=8)\n                  \nplt.title(\"Primary Essential Functions\",fontdict={'fontsize':50})\nax.legend(loc='lower right',bbox_to_anchor=(-2,1.5))\nplt.subplots_adjust(left=0.0, bottom=0.1, right=0.85)","1e44eb77":"#Plotting a bar graph based on the pie chart above for better understanding\nplt.figure()\nplt.title(\"Most Common Primary Essential Functions\")\nplt.ylabel('Primary Essential Functions')\nplt.xlabel('No. of providers')\nsns.barplot(x=list(pef1['LP ID']),y=pef1.index)","13bd5559":"#Plotting pef2s\nplt.figure(figsize=(10,10))\nplt.title(\"Most Common Primary Essential Functions\")\nplt.ylabel('Primary Essential Functions')\nplt.xlabel('No. of providers')\nsns.barplot(x=list(pef2['LP ID']),y=pef2.index)","bbb21a55":"#grouping data by company name\nmore_than1 = product_df1.groupby('Provider\/Company Name').count()[['Product Name','Primary Essential Function']]","a772424f":"#finding companies with more than 1 product\nmore_than1 = more_than1[more_than1['Product Name']>1]","526705ff":"\nplt.figure(figsize=(10,10))\nplt.rcParams.update({'font.size': 10})\nplt.title(\"Companies with most products in the Digital Learning Industry\")\nplt.ylabel('Companies')\nplt.xlabel('No. of products')\nsns.barplot(x=list(more_than1['Product Name']),y=more_than1.index)\n","a3c6d4f6":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(product_df['Product Name'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Words in the product names')","afb43833":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(product_df['Provider\/Company Name'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Words in the Company names')","76314a9c":"#dataset containing all the products of google in the EdTech industry\ngoogle_df = product_df1[product_df1['Provider\/Company Name']=='Google LLC']\ngoogle_df.head()","a42e6f60":"#analysis of sector in which Google works in\ngpie=google_df.groupby('Sector(s)').count()[['LP ID']]\ngpie['percent'] = (gpie['LP ID']\/gpie['LP ID'].sum() *100)\nx=list(gpie['percent'])\ny=[]\nfor i in x:\n    y.append(str(i))\ngpie\n","bceae0c4":"plt.figure(figsize=(10,10))\n\nplt.pie(gpie['LP ID'],labels=gpie.index,explode=[0,0,0.4],colors = (\"beige\",\"cyan\",\"orange\",\"beige\",\"green\"),autopct='%1.1f%%')\n         \nplt.title(\"Sector(s) in which Google is active in\")\nplt.legend(title=\"Sector(s):\")","9de3ceb5":"plt.figure()\nplt.title(\"Active sectors\")\nplt.ylabel('Sector(s)')\nplt.xlabel('No. of providers')\nsns.barplot(x=list(gpie['LP ID']),y=gpie.index)","a6774561":"gpef1=google_df.groupby('PEF-1',sort=False).count()[['LP ID']]\ngpef1['percent'] = (gpef1['LP ID']\/gpef1['LP ID'].sum() *100)\ngpef1","310d234f":"gpef2=google_df.groupby('PEF-2',sort=False).count()[['LP ID']]\ngpef2['percent'] = (gpef2['LP ID']\/gpef2['LP ID'].sum() *100)","2a6c9703":"plt.figure(figsize=(10,10))\ncm, lc, other, sdo=[plt.cm.Blues, plt.cm.Reds, plt.cm.Greens, plt.cm.pink_r]\nplt.pie(gpef1['LP ID'],labels=gpef1.index,explode=[0,0,0,0],colors=[cm(0.6) , lc(0.6) , other(0.8) , sdo(0.6)],autopct='%1.1f%%')\nplt.title(\"Primary Essential Functions of Google Products\")\nplt.legend(title=\"Sector(s):\",loc='lower right',bbox_to_anchor=(0,0))","ce6a938c":"sns.set_style('darkgrid')\nfig,ax = plt.subplots()\nax.axis('equal')\n\nplt.rcParams.update({'text.color' : \"black\",\n                     'axes.labelcolor' : \"black\"})\nplt.rcParams.update({'font.size': 35})\n\ncm, lc, other, sdo=[plt.cm.Blues, plt.cm.Reds, plt.cm.Greens, plt.cm.pink_r]\n\nax.pie(gpef1['LP ID'],labels=gpef1.index,colors=[cm(0.6) , lc(0.6) , other(0.8) , sdo(0.6)], radius=10,explode=[0,0,0,0])\nax.pie(gpef2['LP ID'],labels=gpef2.index,colors=[cm(0.2),cm(0.4),lc(0.1),lc(0.2),lc(0.3),lc(0.4),other(0.5),sdo(0.3),sdo(0.4)], autopct='%1.1f%%', radius=8)\n                  \nplt.title(\"Google\",fontdict={'fontsize':50})\nax.legend(loc='lower right',bbox_to_anchor=(-2,1.5))\nplt.subplots_adjust(left=0.0, bottom=0.1, right=0.85)","3e37c43c":"plt.rcParams.update({'font.size': 15})\n\nplt.figure(figsize=(10,10))\nplt.title(\"Google's Most Common Primary Essential Functions\")\nplt.ylabel('Primary Essential Functions')\nplt.xlabel('No. of providers')\nsns.barplot(x=list(gpef2['LP ID']),y=gpef2.index)","184a82fa":"plt.figure(figsize=(15,10))\npef1['G percent'] = gpef1['percent']\nplt.plot(pef1[\"percent\"],label='All companies',marker='.')\nplt.plot(gpef1[\"percent\"],label='Google',marker='*')\nplt.title(\"Comparison of Google with other Edtech Companies\")\nplt.xlabel('Primary Essential Functions')\nplt.ylabel('Percentage of company in this domain')\nplt.legend()","7f5ef335":"district_df = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\n                          \n                          ","975b4998":"district_df.head()","c6d42d1a":"district_df.info()","e78206c1":"district_df.shape","13aaa167":"(district_df['pp_total_raw'][0])","9536fa1a":"district_df.locale.unique()","24784db0":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(district_df['state'].dropna().astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')","b2f4da8b":"states = district_df.groupby(by ='state').count()[['district_id']]","f99e875d":"#abbreviations of all the US States\nus_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}","fcd2b0e5":"codes = []\nfor i in states.index:\n    codes.append(us_state_abbrev[i])\nprint(codes)","5f968155":"data = dict(\n        type = 'choropleth',\n        colorscale = 'portland',\n        locations = codes,\n        locationmode = 'USA-states',\n        z = list(states['district_id']),\n        text = states.index,\n        colorbar = {'title':'States'},\n      )\nlayout = dict(title = 'States',\n              geo = dict(projection = {'type':'mercator'})\n             )\nlayout = dict(title= 'States with most districts mentioned',\n              geo = {'scope':'usa'})\n\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","c391bc58":"plt.figure(figsize=(10,10))\nplt.title(\"States with most Districts Mentioned\")\nplt.ylabel('States')\nplt.xlabel('No. of districts mentioned')\nsns.barplot(x=list(states['district_id']),y=states.index)","f3874cc3":"plt.figure(figsize=(10,10))\nsns.heatmap(district_df.isna(),cbar=False)","ec1cbff2":"district_df.dropna(subset=['state'],inplace=True)\ndistrict_df.sample(5)","5538c7d5":"plt.figure(figsize=(10,10))\nsns.heatmap(district_df.isna(),cbar=False,)","117a36b6":"locale = district_df.groupby('locale').count()['district_id']\nlist(locale)","1e914485":"plt.figure(figsize=(10,10))\n\nplt.pie(locale,labels=locale.index,explode=[0,0,0.3,0],colors = (\"blue\",\"cyan\",\"orange\",\"beige\",\"green\"),autopct='%1.1f%%')\n         \nplt.title(\"Localities of the districts mentioned\")\nplt.legend(title=\"Locality:\")","b9b16a8e":"plt.figure(figsize=(16,7))\nplt.title(\"Localities of the districts mentioned\")\nplt.ylabel('Sector(s)')\nplt.xlabel('No. of Districts')\nsns.barplot(x=list(locale),y=locale.index)","6bb9225d":"district_df['state'].nunique()","bc24cbf6":"#importing additional data\ngdp = pd.read_csv('..\/input\/gdp-per-capita-in-us-states\/bea-gdp-by-state.csv')[1:]\ngdp.head()","4048ba4a":"us_state_abbrev","dc314128":"codes = []\nfor i in gdp.Area:\n    if i =='District of Columbia':\n        i='District Of Columbia'\n    if i == 'New England':\n        break\n        \n    else:\n        codes.append(us_state_abbrev[i])\nprint(codes,len(codes))","90d7f6ac":"len(us_state_abbrev),gdp.shape","3bd4bd0e":"data = dict(\n        type = 'choropleth',\n        colorscale = 'viridis',\n        locations = codes,\n        locationmode = 'USA-states',\n        z = list(gdp['2017']),\n        text = gdp.Area,\n        colorbar = {'title':'GDP per capita'},\n      )\nlayout = dict(title = 'States',\n              geo = dict(projection = {'type':'mercator'})\n             )\nlayout = dict(title= 'GDP per capita of US States',\n              geo = {'scope':'usa'})\n\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","81cc2fa9":"plt.figure(figsize=(10,20))\nsns.barplot(x=gdp['2017'],y=gdp.Area)","b1076a57":"codes1 = []\ngdp1 = gdp[gdp['Area']!='District of Columbia']\nfor i in gdp1.Area:\n    if i =='District of Columbia':\n        i='District Of Columbia'\n    if i == 'New England': #Because we don't need to consider data below it\n        break\n        \n    else:\n        codes1.append(us_state_abbrev[i])\n#print(codes,len(codes))\ndata = dict(\n        type = 'choropleth',\n        colorscale = 'viridis',\n        locations = codes1,\n        locationmode = 'USA-states',\n        z = list(gdp1['2017']),\n        text = gdp1.Area,\n        colorbar = {'title':'GDP per capita'},\n      )\nlayout = dict(title = 'States',\n              geo = dict(projection = {'type':'mercator'})\n             )\nlayout = dict(title= 'GDP per capita of US States',\n              geo = {'scope':'usa'})\n\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","ef210f09":"# A function that finds gdp of the state\ndef gdp_finder(data):\n    \n    x= list(gdp[gdp['Area']==data]['2017'])\n    return x","d07a8b40":"gdps = []\nfor i in district_df['state']:\n    if i =='District Of Columbia':\n        i='District of Columbia'\n    gdps.append(gdp_finder(i)[0])\n    if gdp_finder(i)==[]:\n        print(i)","b31ca160":"district_df['2017 GDP per capita of state']=gdps","bba0df49":"district_df.head()","e9061802":"# Downloaded df from https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services\ncc_df = pd.read_csv('..\/input\/cconnection\/county_connections_dec_2018 (1).csv')\ncc_df.head(300)","8b8b4505":"confidential = cc_df[cc_df['ratio']==-9999]\nconfidential.groupby('statename').sum()['ratio']","4170442f":"ratio_df=cc_df.groupby('statename').sum()[['ratio']]\nratio_df['Confidential Sum']=confidential.groupby('statename').sum()['ratio']","a8519c25":"ratio_df['Count']=cc_df.groupby('statename').count()[['ratio']]\nratio_df = ratio_df.fillna(0)\nratio_df['Mean Ratio']=(ratio_df['ratio']-ratio_df['Confidential Sum'])\/ratio_df['Count']\nratio_df.drop(['ratio','Confidential Sum','Count'],axis=1,inplace=True)","298e4819":"ratio_df","9c72b94b":"codes1 = [] \nfor i in ratio_df.index:\n    if i =='District of Columbia':\n        i='District Of Columbia'\n    if i =='Northern Mariana Isl':\n        i='Northern Mariana Islands'\n    if i == 'New England': #Because we don't need to consider data below it\n        break\n        \n    else:\n        codes1.append(us_state_abbrev[i])\n#print(codes,len(codes))\ndata = dict(\n        type = 'choropleth',\n        colorscale = 'viridis',\n        locations = codes1,\n        locationmode = 'USA-states',\n        z = list(ratio_df['Mean Ratio']),\n        text = ratio_df.index,\n        colorbar = {'title':'County connectivity'},\n      )\n\nlayout = dict(title= 'County Connectivity of US states',\n              geo = {'scope':'usa'})\n\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","aea188b2":"x= list(district_df.state)\ncc = []\nfor i in x:\n    if i =='District Of Columbia':\n        i='District of Columbia'\n    if i =='Northern Mariana Isl':\n        i='Northern Mariana Islands'\n    cc.append(list(ratio_df[ratio_df.index==i]['Mean Ratio'])[0])\n    if len(list(ratio_df[ratio_df.index==i]['Mean Ratio']))<1:\n        print(i)\n\ndistrict_df['County Connections Ratio']=cc","474b0f00":"\nsns.jointplot(x='2017 GDP per capita of state',y='County Connections Ratio',data=district_df)\n#plt.title('GDP per capita vs County Connections Ratio'","79dc3107":"plt.figure(figsize=(15,10))\nsns.jointplot(x='2017 GDP per capita of state',y='County Connections Ratio',data=district_df[district_df['state']!='District Of Columbia'])\n","696aff16":"district_df.sample(10)","6ca14eab":"district_df.corr()","b02ed25d":"plt.figure(figsize=(16,7))\nsns.countplot(x='pct_black\/hispanic',data=district_df,hue='locale')\nplt.title('pct_black\/hispanic by the locale')","b284780e":"data_path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \ncsv_files = glob.glob(data_path + \"\/*.csv\")\n\ndfs = []\n\nfor filename in csv_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    dfs.append(df)\n    \nengagement_df = pd.concat(dfs)\nengagement_df = engagement_df.reset_index(drop=True)\nengagement_df.head()","83d8244a":"product_df.head()","4a9bad0e":"engagement_df.info()","776c11e9":"engagement_df.describe()","3beb6f65":"sns.heatmap(engagement_df.isna())","af933792":"engagement_df.dropna(inplace = True)","162c7b2b":"#sns.heatmap(engagement_df.isna())","af74fd9e":"def month(data):\n    return int(data.split('-')[1])\ndef datetime(data):\n    d_t = dt(int(data.split('-')[0]),int(data.split('-')[1]),int(data.split('-')[2]))\n    return d_t\n    \nengagement_df['Month']=engagement_df['time'].apply(month)\nengagement_df['time']=engagement_df['time'].apply(datetime)","31df6068":"engagement_df.head()","212ee223":"index_df = engagement_df.groupby('Month')[['engagement_index','pct_access']].mean()","ab2e2b42":"engagement_df.describe()","eb8a6d4b":"plt.figure(figsize=(16,7))\nplt.plot(index_df['engagement_index'])\nplt.title('Engagement Index throughout 2020')\nplt.ylabel('Engagement index')\nplt.xlabel('Months')","e0704fdb":"plt.figure(figsize=(16,7))\n\nplt.title('Pct access throughout 2020')\nplt.ylabel('Pct access')\nplt.xlabel('Months')\nplt.plot(index_df['pct_access'])","5cfe943d":"index_df","c4bea0ea":"engagement_df = engagement_df.merge(product_df1,left_on='lp_id',right_on='LP ID')","733e4f98":"jan_df = engagement_df[engagement_df['Month']==1].groupby('Product Name')[['engagement_index','pct_access']].mean()","ee272eb9":"plt.figure(figsize=(16,7))\nplt.bar(height = jan_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = jan_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in January')","acbe16c7":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(jan_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in Jan')","fed226b0":"feb_df = engagement_df[engagement_df['Month']==2].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = feb_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = feb_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in February')","dae8dae0":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(feb_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in Feb')","8c84e27e":"mar_df = engagement_df[engagement_df['Month']==3].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = mar_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = mar_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in March')","84eb3814":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(mar_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in March')","3a04245f":"apr_df = engagement_df[engagement_df['Month']==4].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = apr_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = apr_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in April')","44c7f1a1":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(apr_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in April')","8730c642":"may_df = engagement_df[engagement_df['Month']==5].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = may_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = may_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in May')","8d7e6257":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(may_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in May')","619f1a9d":"jun_df = engagement_df[engagement_df['Month']==6].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = jun_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = jun_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in June')","9206c1be":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(jun_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in June')","9b07a05f":"jul_df = engagement_df[engagement_df['Month']==7].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = jul_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = jul_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in July')","eb27fe21":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(jul_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in July')","c2c28271":"aug_df = engagement_df[engagement_df['Month']==8].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = aug_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = aug_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in August')","fb2f71ed":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(aug_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in August')","d4d41d4f":"sep_df = engagement_df[engagement_df['Month']==9].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = sep_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = sep_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in September')","178738ff":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(sep_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in September')","bda98ba5":"oct_df = engagement_df[engagement_df['Month']==10].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = oct_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = oct_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in October')","6530e1af":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(oct_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in October')","2ddd8b32":"nov_df = engagement_df[engagement_df['Month']==11].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = nov_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = nov_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in November')","4be4715c":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(nov_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in November')","b69f28ca":"dec_df = engagement_df[engagement_df['Month']==12].groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = dec_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = dec_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in December')","eeb1b901":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(dec_df.index.astype(str)))\nplt.figure(figsize=(15, 10))\n\nplt.imshow(cloud)\nplt.axis('off')\nplt.title('Most used Digital Learning platforms in December')","1750f8dd":"yr_df = engagement_df.groupby('Product Name')[['engagement_index','pct_access']].mean()\nplt.figure(figsize=(16,7))\nplt.bar(height = yr_df.sort_values(by='engagement_index').tail(10)['engagement_index'],x = yr_df.sort_values(by='engagement_index').tail(10).index)\nplt.xticks(rotation = 90)\nplt.title('Most used Edtech platforms in 2020')","1da4144f":"zoom_df=engagement_df[engagement_df['Product Name']=='Zoom'].groupby('Month')[['engagement_index','pct_access']].mean()","a87ea081":"meet_df=engagement_df[engagement_df['Product Name']=='Meet'].groupby('Month')[['engagement_index','pct_access']].mean()","926c000d":"plt.figure(figsize=(16,7))\nplt.plot(meet_df['engagement_index'],label='meet')\nplt.plot(zoom_df['engagement_index'],label='zoom')\nplt.title('ENGAGEMENT INDEX : MEET VS ZOOM')\nplt.xlabel('MONTHS')\nplt.legend()","33ae3647":"plt.figure(figsize=(16,7))\nplt.plot(meet_df['pct_access'],label='meet')\nplt.plot(zoom_df['pct_access'],label='zoom')\nplt.title('PCT ACCESS : MEET VS ZOOM')\nplt.xlabel('MONTHS')\nplt.legend()","bf0385d1":"yt_df=engagement_df[engagement_df['Product Name']=='YouTube'].groupby('Month')[['engagement_index','pct_access']].mean()","e8da5583":"plt.figure(figsize=(16,7))\nplt.plot(yt_df['pct_access'],label='Youtube')\n\nplt.title('PCT ACCESS : YOUTUBE')\nplt.xlabel('MONTHS')\nplt.legend()","1e47e724":"plt.figure(figsize=(16,7))\nplt.plot(yt_df['engagement_index'],label='Youtube')\n\nplt.title('ENGAGEMENT INDEX : YOUTUBE')\nplt.xlabel('MONTHS')\nplt.legend()","188ac3c0":"mp_df=engagement_df.groupby(['Month','PEF-1'])[['pct_access','engagement_index']].mean()","0f3a9a83":"mp_df['PEF']=['CM','LC','LC\/CM\/SDO','SDO']*12","229a87f8":"plt.figure(figsize=(16,7))\nsns.barplot(x=[str(x) for x in mp_df.index],y=mp_df['engagement_index'],hue=mp_df['PEF'])\nplt.xticks(rotation=90)","75f74b11":"cm=mp_df[mp_df['PEF']=='CM']\nother=mp_df[mp_df['PEF']=='LC\/CM\/SDO']\nlc = mp_df[mp_df['PEF']=='LC']\nsdo=mp_df[mp_df['PEF']=='SDO']\n","28e8d266":"plt.figure(figsize=(16,7))\nplt.plot(list(cm['engagement_index']),label='CM')\nplt.plot(list(lc['engagement_index']),label='LC')\nplt.plot(list(sdo['engagement_index']),label='SDO')\nplt.plot(list(other['engagement_index']),label='All')\nplt.title('ENGAGEMENT INDICES')\nplt.xlabel('MONTHS')\nplt.legend()","c0bc087f":"Plotting a similar map of USA but by dropping District of Columbia since it is an outlier","ea969aec":"`Sector(s)` and `Primary Essential Function` are the two columns I will primarily focus on to draw insights about the direction in which the Digital Learning Industry is going.","24b545d2":"**Let's plot the Gdp per capita values on the map of USA**","320147ab":"### **September**","20f30471":"## Trying to visualize the locale mentioned ","281bbab3":"**Strategy of Google is different from the rest of the companies in this domain.\nAs we can see in the plot above.**","3ed3cac5":"### **July**","3e7df375":"## Youtube : Performance throughout the year","8776c1ca":"### **Throughout the year**","4f1783f5":"### Merging this data with the districts dataframe","19ed1924":"We can see a huge dip in engagement and pct_index , that maybe due to summer vacations in USA ","b121bb79":"The hypothesis seems to fail as the both parameters in the graph above do not show an direct correlation","c125156a":"*Apart from words like Learning and Education , which may be common in the names of most Edtech companies, Google LLC is the biggest , most significant organization in this domain*","03b05c75":"## Let's Analyse the companies that have more than one product","8c3040c2":"**January**","5c4bfc62":"Since District of Columbia is a clear outlier here , let's drop it to further test the hypothesis","961d0aa1":"\n![image.png](attachment:bdda62a8-be61-4f27-8acd-910563820d10.png)!","6a53501c":"## LET'S COMPARE ZOOM AND MEET\n\n`Zoom` and `meet` are two of the most used platforms as online classes","40990add":"# COVID-19'S IMPACT ON DIGITAL LEARNING\n\nBy :- $Arihant Jha$                 \n\nDate: $August 3,2021$\n\n## OVERVIEW\n\n\nThe COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow.\n\nI intend to analyse 3 different datasets `product_info` , `districts_info` and `engagement_data` in that order and find insighst.\n\n## OBJECTIVE\n\n **to explore**:\n \n *(1) the state of digital learning in 2020*\n \n *(2) how the engagement of digital learning relates to factors such as district demographics, broadband access, and state\/national level policies and events.*","d0bd9d45":"**March**","ef3cde22":"# THANKS FOR GOING THROUGH MY NOTEBOOK!!!\n\n### This is still a work in progress.\n### Do $upvote$ if you like my work\n### Please feel free to share your suggestions in $comments$, it will be very helpful","d07f1afd":"### **August**","6383366c":"While most companies have struggled to put forward 5 products , `Google LLC` has surprisingly put up **$27$ products**, establishing itself head and shoulder above the rest.\n\nIt would be interesting to analyse the products of `Google` and their domains","fb89e6b0":"It can clearly be observed that most districts are Subarban.","db9cf481":"### **December**","77680fbb":"**February**","447c36b3":"We can see that because of vacation youtube, instagram and hulu are the top used platforms.\n","33ed1419":"Let us find out which sector(s) do most companies deal with **`Sectors`**","74c0ad8b":"# PRODUCT INFO \n## Understanding the data\n\nThe product file products_info.csv includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n**Each Column:**\n\n$LP ID$:The unique identifier of the product\n\n$URL$:Web Link to the specific product\n\n$Product Name$:Name of the specific product\n\n$Provider\/Company Name$:Name of the product provider\n\n$Sector(s)$:Sector of education where the product is used\n\n$Primary Essential Function$:The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: *`LC` = Learning & Curriculum, `CM` = Classroom Management, and `SDO` = School & District Operations. Each of these categories have **multiple sub-categories** with which the products were labeled*\n","034b7e26":"**`Primary Essential Function` : The main objective of the company\/provider**\n\nWe first need to understand the following key words.\n\n1. $LC :  Learning & Curriculum$\n\n2. $CM :  Classroom Management & others$\n\n3. $SDO = School & District Operations$\n\n\n\n","2a4b1ed6":"### **October**","b7a6da88":"# DISTRICT INFORMATION DATA\n\n## Understanding the data\n\nThe district file districts_info.csv includes information about the characteristics of school districts, including data from NCES (2018-19), FCC (Dec 2018), and Edunomics Lab. In this data set, we removed the identifiable information about the school districts. We also used an open source tool ARX (Prasser et al. 2020) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset.\n\n**district_id** : The unique identifier of the school district\n\n**state** : The state where the district resides in\n\n**locale** : NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See Locale Boundaries User's Manual for more information.\n\n**pct_black\/hispanic** : Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n\n**pct_free\/reduced** : Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n\n**countyconnectionsratio** : ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See FCC data for more information.\n\n**pptotalraw** : Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district.","75173d40":"**April**","160a6936":"Here we finish the analysis of our first dataset.\n\n## $Findings$:\n\n1. Each sector had a fair share of products in it's domain , with 48.3 percent primarily focusing on PreK_12.\n2. It seems likely that every product built it's way up the ladder, i.e. it was built for PreK-12 ,then used for Higher Education and then for corporate.\n3. There are only 2 products that do not focus on PreK-12.\n4. The pie chart makes it clear that mostly all products(77.3%) focused on learning and curriculum building.\n5. The subsections can be easily observed in the pie chart above.\n6. An interesting finding was that even though other companies had no more than 5 products in this domain yet , Google took a giant leap and managed to launch 27 different products.\n7. On further interrogation of the dataset, another interesting thing was observed, although Google still has majority (48.1%) of it's product focusing on learning, the company showed big divergence from the general trend in the other two domains.\n>*  22.2 percent of Google products focused on Classroom Management , compared to 9.7% in general.\n>* 6 out of 34 products in the Classroom Management domain are from Google\n\n\nLet us explore the other two datasets and finally explore if we can *combine the findings of all 3 datasets.*\n","22534a57":"## CLEANING THE DISTRICT DATA : PART 2\n\n1. It is very strange that every data point in the county_connections_ratio column has the same value , we must add the real values there from *additional datasets*","8c9ff4ca":"**May**","cd050cc7":"We can finally see Zoom in top10","37b7dc9f":"No great correlation between GDP per capita and county connection ratio , only 0.096","79586863":"Since we need the state shortforms like AZ for arizona, we need to make some changes in the dataset.\n\n**We need to use additional Data**","fb928ce1":"### It is my observation that GDP per capita would have a correlation with the engagement in Engagement Dataset, hence I will add it by state to district_df and then use it later on ","a0c4cf48":"## Cleaning the data\nWe know that the district dataset is filled with a lot of null values.\nLet's try to visualize it.","2d6e8373":"`LC-Digital Learning Platforms` , `LC-Sites, References and Resources` and `LC- Study tools` are the three biggest focus among EdTech Companies","7a76d7d4":"## Exploratory Data Analysis","412494cf":"# ENGAGEMENT DATAFRAME\n\n**time:** date in \"YYYY-MM-DD\"\n\n**lp_id:** The unique identifier of the product\n\n**pct_access:** Percentage of students in the district have at least one page-load event of a given product and on a given day\n\n**engagement_index:** Total page-load events per one thousand students of a given product and on a given day","81d8b41b":"## Let's see which product was most used in each month","05c7190e":"### **June**","44a1b8ed":"## Understanding the pie chart above\nThe *`pie chart`* above represents $PrimaryEssentialFunctions$\n\nThere is an inner pie and an outer pie. The outer pie has 4 major slices and the slices in the inner pie are the subslices of the of major slices with same colour group in the outer pie.\n\ne.g. `CM - Classroom Engagement & Instruction` (shade of blue)\n`CM - Teacher Resources` (shade of blue)\n`CM - Virtual Classroom` (shade of blue)  are the subslices of `CM` (in blue)\n\nThe outer pie is divided into 4 sections (IN COUNTERCLOCKWISE DIRECTION) representing:\n1. `CM in blue`   : 9.7% (with 3 subsections in the inner pie)\n2. `LC in red`    : 77.3% (with 10 subsections in the inner pie)\n3. `All in green` : 4.5% (with 1 subsections in the inner pie)\n4. `SDO in brown` : 8.5% (with 9 subsections in the inner pie)\n\nIt is very clear that 81.8% new companies offer primarily **Learning and curriculum**.\n>77.3 directly related to LC and 4.5 related to all\n\nIt is followed by **Classroom management** and **School & district Operation**\n\n\nPS: Please zoom into the pie chart to see the nuances","4b0cbca4":"## Google LLC Product Analysis\n","3d3c6837":"**Except for two providers all the other providers are concerned about `PreK-12`**\n\n>`Qualtrics` : *Deals with Higher Ed & Corporates*\n\n> `Weebly`   : *Deals only with Corporates*","81d4618b":"### **November**","5787f8d8":"## HYPOTHESIS : COUNTY CONNECTION RATIO MUST BE DIRECTLY CORRELATED WITH GDP PER CAPITA\n\n**As standard of living increases with increase in GDP per capita**","6392ce34":"It is clear that there a lot of data points that are just empty , with no information what so ever. It would be best if we first drop those data points."}}