{"cell_type":{"3f0c3011":"code","2f91e60e":"code","c67c92e2":"code","1cc50603":"code","63a78010":"code","842d8a3d":"code","7d14e156":"code","2677c31d":"code","45ac0364":"code","00256643":"code","9369ac96":"code","67f0ad02":"code","fcd7b06a":"code","b2a84c80":"code","6f305209":"code","bfe67337":"code","1ba17da7":"code","acea35a8":"code","3aadbfe6":"code","753f8b34":"markdown","3d4a90c2":"markdown","cb151f58":"markdown","67e1d6bd":"markdown","05d6b0a0":"markdown","fc5b20ed":"markdown","3c839bc8":"markdown","25fea7aa":"markdown","03592a38":"markdown","451f638a":"markdown","cb8ae21b":"markdown","c35ebc03":"markdown","2197e311":"markdown","1be6b99d":"markdown","750a6aa2":"markdown","c4031f16":"markdown","5e589991":"markdown","0bd6f6c8":"markdown","6bfd2468":"markdown","aac9e279":"markdown","7451a0f8":"markdown","77280339":"markdown","821e99ce":"markdown","cecbfa99":"markdown","444767b1":"markdown"},"source":{"3f0c3011":"import numpy as np # almost everything\nimport pandas as pd # working with tables\nimport seaborn as sns # plotting library\n%matplotlib inline\nfrom matplotlib import patches\nimport matplotlib.pyplot as plt # importing pyplot\nfrom scipy import stats # importing some stats that will be useful later on\n\nimport warnings\nwarnings.filterwarnings('ignore') # ignoring all warnings","2f91e60e":"sns.set_style('whitegrid') # white grid background on plots\nsns.set_palette('colorblind', 10) # color palette for colorblinds with 10 colors\ncurrent_palette = sns.color_palette() # saving this palette in separate variable\nsns.set_context('notebook') # setting notebook context","c67c92e2":"data = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv', low_memory=False).drop(0); # loading data\n\nindia = data[data['Q3'] == 'India'].copy()\nusa = data[data['Q3'] == 'United States of America'].copy()\nbrazil = data[data['Q3'] == 'Brazil'].copy()\njapan = data[data['Q3'] == 'Japan'].copy()\nrussia = data[data['Q3'] == 'Russia'].copy()","1cc50603":"print('Number of respondents: ', data.shape[0])","63a78010":"salary = data['Q10'].str.replace(',','').str.replace('$','').str.replace('>','').str.strip(' ').str.split('-').apply(pd.Series).astype(np.float32) # getting numeric values of salary\nsalary.columns = ['min', 'max'] # renaming columns\nsalary['midrange'] = (salary['max'] + salary['min']) \/ 2 # calculating mid-range: (max + min) \/ 2","842d8a3d":"loglogtime = np.log(np.log(data['Time from Start to Finish (seconds)'].astype(np.int32)))\n\nindia_time = loglogtime.loc[india.index]\nusa_time = loglogtime.loc[usa.index]\nbrazil_time = loglogtime.loc[brazil.index]\njapan_time = loglogtime.loc[japan.index]\nrussia_time = loglogtime.loc[russia.index]\n\nq1_all = np.percentile(loglogtime, 25)\nq3_all = np.percentile(loglogtime, 75)\n\nq1_india = np.percentile(india_time, 25)\nq3_india = np.percentile(india_time, 75)\n\nq1_usa = np.percentile(usa_time, 25)\nq3_usa = np.percentile(usa_time, 75)\n\nq1_brazil = np.percentile(brazil_time, 25)\nq3_brazil = np.percentile(brazil_time, 75)\n\nq1_japan = np.percentile(japan_time, 25)\nq3_japan = np.percentile(japan_time, 75)\n\nq1_russia = np.percentile(russia_time, 25)\nq3_russia = np.percentile(russia_time, 75)\n\nfast_all = data.loc[(loglogtime < q1_all)]\nslow_all = data.loc[(loglogtime > q3_all)]\n\nfast_india = india.loc[(india_time < q1_india)]\nslow_india = india.loc[(india_time > q3_india)]\n\nfast_usa = usa.loc[(usa_time < q1_usa)]\nslow_usa = usa.loc[(usa_time > q3_usa)]\n\nfast_brazil = brazil.loc[(brazil_time < q1_brazil)]\nslow_brazil = brazil.loc[(brazil_time > q3_brazil)]\n\nfast_japan = japan.loc[(japan_time < q1_japan)]\nslow_japan = japan.loc[(japan_time > q3_japan)]\n\nfast_russia = russia.loc[(russia_time < q1_russia)]\nslow_russia = russia.loc[(russia_time > q3_russia)]\n\ninfo_time = pd.DataFrame()\ninfo_time['Countries'] = ['All', 'India', 'USA', 'Brazil', 'Japan', 'Russia']\ninfo_time['Size'] = [fast_all.shape[0], fast_india.shape[0], fast_usa.shape[0], fast_brazil.shape[0], fast_japan.shape[0], fast_russia.shape[0]]\ninfo_time['Median duration for slow respondents, min'] = [int(np.round(slow_all['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)),\n                                                          int(np.round(slow_india['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                          int(np.round(slow_usa['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                          int(np.round(slow_brazil['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                          int(np.round(slow_japan['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                          int(np.round(slow_russia['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60))]\ninfo_time['Median duration for quick respondents, min'] = [int(np.round(fast_all['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)),\n                                                           int(np.round(fast_india['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                           int(np.round(fast_usa['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                           int(np.round(fast_brazil['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                           int(np.round(fast_japan['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60)), \n                                                           int(np.round(fast_russia['Time from Start to Finish (seconds)'].astype(np.int32).median() \/ 60))]\n\ninfo_time","7d14e156":"age_order = ['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-59', '60-69', '70+']","2677c31d":"fig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Age comparison', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q1'].value_counts(normalize=True).loc[age_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","45ac0364":"fig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Gender comparison', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q2'].value_counts(normalize=True).plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","00256643":"education_dict = {'Master\u2019s degree': 'Master', \n                  'Bachelor\u2019s degree': 'Bachelor', \n                  'Doctoral degree': 'Doctor', \n                  'Some college\/university study without earning a bachelor\u2019s degree': 'Audition',\n                  'No formal education past high school': 'High School',\n                  'I prefer not to answer': 'Other',\n                  'Professional degree': 'Professional'}\n\neducation_order = ['High School', 'Professional', 'Audition', 'Bachelor', 'Master', 'Doctor']\n\nfig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Education comparison', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q4'].map(education_dict).value_counts(normalize=True).loc[education_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","9369ac96":"size_order = ['0-49 employees', '50-249 employees', '250-999 employees', '1000-9,999 employees', '> 10,000 employees']\n\nfig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Company size charts', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q6'].value_counts(normalize=True).loc[size_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","67f0ad02":"ds_num_order = ['0', '1-2', '3-4', '5-9', '10-14', '15-19', '20+']\n\nfig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Number of data scientists in a company', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q7'].value_counts(normalize=True).loc[ds_num_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","fcd7b06a":"ml_use_order = ['I do not know', \n                'No (we do not use ML methods)',\n                'We are exploring ML methods (and may one day put a model into production)',\n                'We use ML methods for generating insights (but do not put working models into production)',\n                'We recently started using ML methods (i.e., models in production for less than 2 years)',\n                'We have well established ML methods (i.e., models in production for more than 2 years)']\n\nfig, axs = plt.subplots(1, 6, figsize=(20,10), sharey=True);\nfig.suptitle('Intensivity of ML use in company', x=0.5, y=1.05)\n\naxs[0].set_title('All')\nslow_all['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[0]);\nfast_all['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[0]);\n\naxs[1].set_title('India')\nslow_india['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[1]);\nfast_india['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[1]);\n\naxs[2].set_title('USA')\nslow_usa['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[2]);\nfast_usa['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[2]);\n\naxs[3].set_title('Brazil')\nslow_brazil['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[3]);\nfast_brazil['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[3]);\n\naxs[4].set_title('Japan')\nslow_japan['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[4]);\nfast_japan['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[4]);\n\naxs[5].set_title('Russia')\nslow_russia['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[5]);\nfast_russia['Q8'].value_counts(normalize=True).loc[ml_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[5]);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","b2a84c80":"fig, axs = plt.subplots(2, 3, figsize=(20,10));\nfig.suptitle('Distribution of mid-range salary', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nsalary.loc[slow_all.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][0]);\nsalary.loc[fast_all.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][0]);\n\naxs[0][1].set_title('India')\nsalary.loc[slow_india.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][1]);\nsalary.loc[fast_india.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][1]);\n\naxs[0][2].set_title('USA')\nsalary.loc[slow_usa.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][2]);\nsalary.loc[fast_usa.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[0][2]);\n\naxs[1][0].set_title('Brazil')\nsalary.loc[slow_brazil.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][0]);\nsalary.loc[fast_brazil.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][0]);\n\naxs[1][1].set_title('Japan')\nsalary.loc[slow_japan.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][1]);\nsalary.loc[fast_japan.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][1]);\n\naxs[1][2].set_title('Russia')\nsalary.loc[slow_russia.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][2]);\nsalary.loc[fast_russia.index]['midrange'].plot(kind='kde', bw_method='silverman', ax=axs[1][2]);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","6f305209":"slow_median_all = salary.loc[slow_all.index]['midrange'].median()\nfast_median_all = salary.loc[fast_all.index]['midrange'].median()\nslow_mean_all = salary.loc[slow_all.index]['midrange'].mean()\nfast_mean_all = salary.loc[fast_all.index]['midrange'].mean()\n\nslow_median_india = salary.loc[slow_india.index]['midrange'].median()\nfast_median_india = salary.loc[fast_india.index]['midrange'].median()\nslow_mean_india = salary.loc[slow_india.index]['midrange'].mean()\nfast_mean_india = salary.loc[fast_india.index]['midrange'].mean()\n\nslow_median_usa = salary.loc[slow_usa.index]['midrange'].median()\nfast_median_usa = salary.loc[fast_usa.index]['midrange'].median()\nslow_mean_usa = salary.loc[slow_usa.index]['midrange'].mean()\nfast_mean_usa = salary.loc[fast_usa.index]['midrange'].mean()\n\nslow_median_brazil = salary.loc[slow_brazil.index]['midrange'].median()\nfast_median_brazil = salary.loc[fast_brazil.index]['midrange'].median()\nslow_mean_brazil = salary.loc[slow_brazil.index]['midrange'].mean()\nfast_mean_brazil = salary.loc[fast_brazil.index]['midrange'].mean()\n\nslow_median_japan = salary.loc[slow_japan.index]['midrange'].median()\nfast_median_japan = salary.loc[slow_brazil.index]['midrange'].median()\nslow_mean_japan = salary.loc[slow_japan.index]['midrange'].mean()\nfast_mean_japan = salary.loc[slow_brazil.index]['midrange'].mean()\n\nslow_median_russia = salary.loc[slow_russia.index]['midrange'].median()\nfast_median_russia = salary.loc[fast_russia.index]['midrange'].median()\nslow_mean_russia = salary.loc[slow_russia.index]['midrange'].mean()\nfast_mean_russia = salary.loc[fast_russia.index]['midrange'].mean()\n\ninfo_time['Mean slow salary - Mean quick salary'] = [slow_mean_all-fast_mean_all, \n                                                     slow_mean_india-fast_mean_india, \n                                                     slow_mean_usa-fast_mean_usa, \n                                                     slow_mean_brazil-fast_mean_brazil, \n                                                     slow_mean_japan-fast_mean_japan,\n                                                     slow_mean_russia-fast_mean_russia]\n\ninfo_time['Median slow salary - Median quick salary'] = [slow_median_all-fast_median_all, \n                                                         slow_median_india-fast_median_india, \n                                                         slow_median_usa-fast_median_usa, \n                                                         slow_median_brazil-fast_median_brazil, \n                                                         slow_median_japan-fast_median_japan,\n                                                         slow_median_russia-fast_median_russia]\n\ninfo_time","bfe67337":"cc_spent_order = ['$0 (USD)', '$1-$99', '$100-$999', '$1000-$9,999', '$10,000-$99,999', '> $100,000 ($USD)']\n\nfig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Number of data scientists in a company', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q11'].value_counts(normalize=True).loc[cc_spent_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","1ba17da7":"code_exp_order = ['I have never written code', '< 1 years', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\n\nfig, axs = plt.subplots(1, 6, figsize=(20,10), sharey=True);\nfig.suptitle('Coding experience', x=0.5, y=1.05)\n\naxs[0].set_title('All')\nslow_all['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[0]);\nfast_all['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[0]);\n\naxs[1].set_title('India')\nslow_india['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[1]);\nfast_india['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[1]);\n\naxs[2].set_title('USA')\nslow_usa['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[2]);\nfast_usa['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[2]);\n\naxs[3].set_title('Brazil')\nslow_brazil['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[3]);\nfast_brazil['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[3]);\n\naxs[4].set_title('Japan')\nslow_japan['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[4]);\nfast_japan['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[4]);\n\naxs[5].set_title('Russia')\nslow_russia['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[5]);\nfast_russia['Q15'].value_counts(normalize=True).loc[code_exp_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[5]);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","acea35a8":"tpu_use_order = ['Never', 'Once', '2-5 times', '6-24 times', '> 25 times']\n\nfig, axs = plt.subplots(1, 6, figsize=(20,10), sharey=True);\nfig.suptitle('TPU usage aka what Google is really interested in', x=0.5, y=1.05)\n\naxs[0].set_title('All')\nslow_all['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[0]);\nfast_all['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[0]);\n\naxs[1].set_title('India')\nslow_india['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[1]);\nfast_india['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[1]);\n\naxs[2].set_title('USA')\nslow_usa['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[2]);\nfast_usa['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[2]);\n\naxs[3].set_title('Brazil')\nslow_brazil['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[3]);\nfast_brazil['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[3]);\n\naxs[4].set_title('Japan')\nslow_japan['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[4]);\nfast_japan['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[4]);\n\naxs[5].set_title('Russia')\nslow_russia['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[0], alpha=0.8, ax=axs[5]);\nfast_russia['Q22'].value_counts(normalize=True).loc[tpu_use_order].plot(kind='barh', color=current_palette[1], alpha=0.8, ax=axs[5]);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","3aadbfe6":"ml_use_exp_order = ['< 1 years', '1-2 years', '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-15 years', '20+ years']\n\nfig, axs = plt.subplots(2, 3, figsize=(16,10));\nfig.suptitle('Machine learning coding experience', x=0.5, y=1.05)\n\naxs[0][0].set_title('All')\nslow_all['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][0], rot=30);\nfast_all['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][0], rot=30);\n\naxs[0][1].set_title('India')\nslow_india['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][1], rot=30);\nfast_india['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][1], rot=30);\n\naxs[0][2].set_title('USA')\nslow_usa['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[0][2], rot=30);\nfast_usa['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[0][2], rot=30);\n\naxs[1][0].set_title('Brazil')\nslow_brazil['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][0], rot=30);\nfast_brazil['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][0], rot=30);\n\naxs[1][1].set_title('Japan')\nslow_japan['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][1], rot=30);\nfast_japan['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][1], rot=30);\n\naxs[1][2].set_title('Russia')\nslow_russia['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[0], alpha=0.8, ax=axs[1][2], rot=30);\nfast_russia['Q23'].value_counts(normalize=True).loc[ml_use_exp_order].plot(kind='bar', color=current_palette[1], alpha=0.8, ax=axs[1][2], rot=30);\n\nfig.legend([patches.Patch(facecolor=current_palette[color]) for color in range(2)], ['Slow respondents', 'Quick respondents'], loc='upper right');\n\nfig.tight_layout();","753f8b34":"# TPU usage","3d4a90c2":"Let Google analytics decide what to do with this info","cb151f58":"The younger audience is generally faster in completing surveys, who would have thought","67e1d6bd":"The difference between median salaries suggests to take it slow and breathe","05d6b0a0":"We will compare respondents that spent more than time than the 3rd quartile (slow) and ones that spent less time than the 1st quartile (quick). I will take only top-5 countries in the number of responses.","fc5b20ed":"Males have more time to waste on surveys, except Russia","3c839bc8":"# Size of data science department","25fea7aa":"# Cloud computing","03592a38":"Indian and Russian big tech companies are kinda slow","451f638a":"# Education","cb8ae21b":"It's free real estate\n\nBut in Brazil and Japan you gotta go fast with thinking and computing","c35ebc03":"# SLOW AND STEADY","2197e311":"And they do not know what their company is doing","1be6b99d":"In the end, we are all here to <s>machine<\/s> learn","750a6aa2":"# Gender","c4031f16":"# Salary","5e589991":"The fastest respondents are not even data scientists","0bd6f6c8":"# Company size","6bfd2468":"# Intensity of ML use","aac9e279":"Coding in kaggle competitions is overrated","7451a0f8":"# ML experience","77280339":"# Coding experience","821e99ce":"![](https:\/\/assets.pokemon.com\/assets\/cms2\/img\/pokedex\/full\/079.png)","cecbfa99":"Brazilian Ph.Ds are the fastest thinkers","444767b1":"# Age"}}