{"cell_type":{"6d5fc70c":"code","987b74ae":"code","aa65de11":"code","fece4946":"code","76300398":"code","34cade91":"code","1ef71cb2":"code","b781486f":"code","1aa8e6ea":"code","e67c5e12":"code","46df6bff":"code","49099890":"code","3eec081d":"code","8a135446":"code","e03b6ac6":"code","ba804700":"code","a1745b59":"code","7e5ef927":"code","521702c2":"code","c4400d7a":"code","bc3724de":"code","596c1a6b":"code","4e2c1275":"code","a32ea8ae":"code","0cc2502c":"code","c5ac9be6":"code","45abbd8b":"code","b5fb30c7":"code","26448625":"code","60020fe7":"code","15ccf029":"code","c5813117":"code","c8b00da1":"code","d8d300d5":"code","c0a2afe2":"code","8c70789d":"code","0d62fc6c":"code","be594fb3":"code","1a10e414":"code","cfafd0f1":"code","6d6e21c9":"code","40af8caf":"code","c21a2f61":"code","b729b71a":"code","e1f26e9f":"code","6d6c703f":"code","52df7f7b":"code","57202e08":"code","962d8e80":"code","84fb3ed2":"code","df4fe0ac":"code","7b6f9165":"code","a79f6790":"code","5882d391":"code","2b7c1e2c":"code","e2229274":"code","1caa28f1":"code","66d0d212":"code","041bd314":"code","44fb536a":"code","64929173":"code","971634ef":"code","4a853162":"code","8e817a35":"code","bf063192":"code","05df9274":"code","5e0b7c63":"code","4866f18a":"code","59a5e4da":"code","180c0f77":"code","a134d2a9":"code","1f53b726":"code","e9aaf7ad":"code","48888c4b":"code","fcb38d2b":"code","2ba5a1d6":"code","3fd26d4a":"code","15b3e80c":"code","3d304b61":"code","5f95e6a2":"code","f7e50cbb":"code","89489fda":"code","d8b18c0d":"code","28484a1c":"code","03a5c26e":"code","b5262a35":"code","3adec928":"code","e486916e":"code","7fd58c7d":"code","c702c053":"code","b4119688":"code","209e816a":"markdown","b7f16947":"markdown","e7fbbef1":"markdown","4b66c591":"markdown","41ef9510":"markdown","3115953e":"markdown","e0e4e91a":"markdown","528276fe":"markdown","0a18ae08":"markdown","299b5863":"markdown","45132db1":"markdown","1b904f44":"markdown","b732b411":"markdown","87048303":"markdown","6aa6f7bd":"markdown","b4c268e5":"markdown","630e1977":"markdown","f093caf4":"markdown","35762bfa":"markdown","744c273d":"markdown","fea88c45":"markdown","45659d4c":"markdown","c7142f4d":"markdown","ed68c3d6":"markdown","287c046b":"markdown","bc5ccac1":"markdown","911b61da":"markdown","eb2e63cc":"markdown","9799c955":"markdown","09d8d9fb":"markdown","0a096ec1":"markdown","bab4deed":"markdown","d402b43d":"markdown","607f6ccc":"markdown","249d8b47":"markdown","e069cddd":"markdown","b4d19fc8":"markdown","17a20a66":"markdown","6b32a5cb":"markdown","ed5905a1":"markdown","33c03929":"markdown","03167fbd":"markdown","0073dfc9":"markdown","e9d31a61":"markdown","13bc8d1c":"markdown","09baed6b":"markdown","323d8a9d":"markdown","293a86c0":"markdown","96e96066":"markdown","6811c6b3":"markdown","9077444e":"markdown","6bcb2c53":"markdown","1194f6c6":"markdown","90397198":"markdown","8d67c7dc":"markdown","e32613e8":"markdown","3a5b6e3f":"markdown","46c9a26d":"markdown","c575a335":"markdown","f92932d0":"markdown","5ee19c16":"markdown","288fd5c1":"markdown","8cef497e":"markdown","f68cb912":"markdown","4fef2d69":"markdown","38cc31cb":"markdown","edf29187":"markdown"},"source":{"6d5fc70c":"# importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(action = 'ignore')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","987b74ae":"#importing data\ndata = pd.read_csv('\/kaggle\/input\/nyc_taxi_trip_duration.csv')\nweather = pd.read_csv('\/kaggle\/input\/nyc_2016_weather.csv')\n","aa65de11":"data=data.merge(weather, how='left', left_on=pd.to_datetime(data['dropoff_datetime']).dt.date, right_on=pd.to_datetime(weather['date']).dt.date)","fece4946":"data.drop(['key_0','date'],axis=1, inplace=True)","76300398":"data.info()","34cade91":"#first 5 instances using \"head()\" function\ndata.head()","1ef71cb2":"#last 5 instances using \"tail()\" function\ndata.tail()","b781486f":"#finding out the shape of the data using \"shape\" variable: Output (rows, columns)\ndata.shape","1aa8e6ea":"#Printing all the columns present in data\ndata.columns","e67c5e12":"# A closer look at the data types present in the data\ndata.dtypes","46df6bff":"data['passenger_count'].value_counts()","49099890":"# Identifying variables with integer datatype\ndata.dtypes[data.dtypes == 'int64']","3eec081d":"\ndata['vendor_id'] = data['vendor_id'].astype('category')\ndata['passenger_count'] = data['passenger_count'].astype('category')\ndata.dtypes[data.dtypes == 'int64']","8a135446":"# Identifying variables with float datatype\ndata.dtypes[data.dtypes == 'float64']","e03b6ac6":"data.dtypes[data.dtypes=='object']","ba804700":"data.id.nunique()","a1745b59":"data.drop('id', axis=1, inplace=True)","7e5ef927":"data['store_and_fwd_flag'].value_counts()","521702c2":"data['store_and_fwd_flag']= data['store_and_fwd_flag'].astype('category')","c4400d7a":"data['precipitation'].value_counts()","bc3724de":"data['precipitation'].replace('T','0', inplace=True)","596c1a6b":"data['precipitation']=data['precipitation'].astype('float64')\n","4e2c1275":"data['snow fall'].value_counts()","a32ea8ae":"data['snow fall'].replace('T','0', inplace=True)\ndata['snow fall']=data['snow fall'].astype('float64')","0cc2502c":"data['snow depth'].value_counts()","c5ac9be6":"data['snow depth'].replace('T','0', inplace=True)\ndata['snow depth']=data['snow depth'].astype('float64')","45abbd8b":"# creating an instance(date) of DatetimeIndex class using \"pickup_datetime\" \ndate_pick = pd.DatetimeIndex(data['pickup_datetime'])","b5fb30c7":"data['day_of_month'] = date_pick.strftime(\"%d\")\ndata['weekday'] = date_pick.strftime(\"%A\")\ndata['month_pick'] = date_pick.month\ndata['hour_pick'] = date_pick.strftime(\"%H\")\n","26448625":"data.head()","60020fe7":"timedelta=pd.to_datetime(data['dropoff_datetime'])-pd.to_datetime(data['pickup_datetime'])","15ccf029":"data['validation']=round(timedelta.dt.total_seconds(),0)==data['trip_duration']","c5813117":"data['validation'].sum()==data.shape[0]","c8b00da1":"data.drop('validation',axis=1,inplace=True) # Hence is not usable in future","d8d300d5":"data = data.drop(columns = ['pickup_datetime','dropoff_datetime'])\ndata.dtypes","c0a2afe2":"data[['weekday','month_pick','hour_pick','day_of_month']]=data[['weekday','month_pick','hour_pick','day_of_month']].astype('category')\ndata.dtypes","8c70789d":"# Numerical datatypes\ndata.select_dtypes(include=['int64','float64','Int64']).dtypes","0d62fc6c":"# seggregating variables into groups\ngeo_details = ['pickup_longitude','pickup_latitude','dropoff_longitude','dropoff_latitude']\ntarget_detail = ['trip_duration']\nmeteo_details = ['maximum temperature','minimum temperature','average temperature', 'precipitation']\n","be594fb3":"# custom function for easy and efficient analysis of numerical univariate\n\ndef UVA_numeric(data, var_group):\n  '''\n  Univariate_Analysis_numeric\n  takes a group of variables (INTEGER and FLOAT) and plot\/print all the descriptives and properties along with KDE.\n\n  Runs a loop: calculate all the descriptives of i(th) variable and plot\/print it\n  '''\n\n  size = len(var_group)\n  plt.figure(figsize = (7*size,3), dpi = 100)\n  \n  #looping for each variable\n  for j,i in enumerate(var_group):\n    \n    # calculating descriptives of variable\n    mini = data[i].min()\n    maxi = data[i].max()\n    ran = data[i].max()-data[i].min()\n    mean = data[i].mean()\n    median = data[i].median()\n    st_dev = data[i].std()\n    skew = data[i].skew()\n    kurt = data[i].kurtosis()\n\n    # calculating points of standard deviation\n    points = mean-st_dev, mean+st_dev\n\n    #Plotting the variable with every information\n    plt.subplot(1,size,j+1)\n    sns.kdeplot(data[i], shade=True)\n    sns.lineplot(points, [0,0], color = 'black', label = \"std_dev\")\n    sns.scatterplot([mini,maxi], [0,0], color = 'orange', label = \"min\/max\")\n    sns.scatterplot([mean], [0], color = 'red', label = \"mean\")\n    sns.scatterplot([median], [0], color = 'blue', label = \"median\")\n    plt.xlabel('{}'.format(i), fontsize = 20)\n    plt.ylabel('density')\n    plt.title('std_dev = {}; kurtosis = {};\\nskew = {}; range = {}\\nmean = {}; median = {}'.format((round(points[0],2),round(points[1],2)),\n                                                                                                   round(kurt,2),\n                                                                                                   round(skew,2),\n                                                                                                   (round(mini,2),round(maxi,2),round(ran,2)),\n                                                                                                   round(mean,2),\n                                                                                                   round(median,2)))","1a10e414":"UVA_numeric(data, target_detail)","cfafd0f1":"data[data.trip_duration>24*60*60] # One trip dat lasts 22 days!!!!","6d6e21c9":"UVA_numeric(data,meteo_details)","40af8caf":"UVA_numeric(data,geo_details)","c21a2f61":"import folium\nfrom folium import plugins\nfrom IPython.display import HTML, display\nmymap = folium.Map(location=[41., -74], zoom_start=8 )\n\n#for lat, lon in zip(test['pickup_latitude'],test['pickup_longitude']):\n#    folium.CircleMarker([lat, lon],radius=4, color='black',\n#                    fill_color='red', fill_opacity=0.5, opacity=0.4).add_to(map)\n#map\n\ntaxi = data[['pickup_latitude', 'pickup_longitude']].values\n\n# plot heatmap\nmymap.add_children(plugins.HeatMap(taxi, radius=15))\nmymap.save('plot_data.html')\nHTML('<iframe src=plot_data.html width=700 height=450><\/iframe>')\n","b729b71a":"mymap = folium.Map(location=[41., -74], zoom_start=8 )\n\n#for lat, lon in zip(test['pickup_latitude'],test['pickup_longitude']):\n#    folium.CircleMarker([lat, lon],radius=4, color='black',\n#                    fill_color='red', fill_opacity=0.5, opacity=0.4).add_to(map)\n#map\n\ntaxi = data[['dropoff_latitude', 'dropoff_longitude']].values\n\n# plot heatmap\nmymap.add_children(plugins.HeatMap(taxi, radius=15))\nsrcdoc = mymap.save('plot_data_drop.html')\nHTML('<iframe src=plot_data_drop.html width=700 height=450><\/iframe>')","e1f26e9f":"data.select_dtypes(exclude=['int64','float64','Int64']).columns","6d6c703f":"# Custom function for easy visualisation of Categorical Variables\ndef UVA_category(data, var_group):\n\n  '''\n  Univariate_Analysis_categorical\n  takes a group of variables (category) and plot\/print all the value_counts and barplot.\n  '''\n  # setting figure_size\n  size = len(var_group)\n  plt.figure(figsize = (7*size,10), dpi = 100)\n\n  # for every variable\n  for j,i in enumerate(var_group):\n    norm_count = data[i].value_counts(normalize = True)\n    n_uni = data[i].nunique()\n\n  #Plotting the variable with every information\n    plt.subplot(1+size\/\/4,4,j+1)\n    plt.subplots_adjust(hspace = 0.8)\n    sns.barplot(norm_count, norm_count.index , order = norm_count.index)\n    plt.xlabel('fraction\/percent', fontsize = 20)\n    plt.ylabel('{}'.format(i), fontsize = 20)\n    plt.title('n_uniques = {} \\n value counts \\n {};'.format(n_uni,norm_count))","52df7f7b":"UVA_category(data, ['vendor_id', 'passenger_count', 'store_and_fwd_flag'])\nUVA_category(data, [ 'day_of_month','weekday', 'month_pick', 'hour_pick'])","57202e08":"# finding number of missing values in every variable\ndata.isnull().sum()","962d8e80":"# custom function for easy outlier analysis\n\ndef UVA_outlier(data, var_group, include_outlier = True):\n  '''\n  Univariate_Analysis_outlier:\n  takes a group of variables (INTEGER and FLOAT) and plot\/print boplot and descriptives\\n\n  Runs a loop: calculate all the descriptives of i(th) variable and plot\/print it \\n\\n\n\n  data : dataframe from which to plot from\\n\n  var_group : {list} type Group of Continuous variables\\n\n  include_outlier : {bool} whether to include outliers or not, default = True\\n\n  '''\n\n  size = len(var_group)\n  plt.figure(figsize = (7*size,4), dpi = 100)\n  \n  #looping for each variable\n  for j,i in enumerate(var_group):\n    \n    # calculating descriptives of variable\n    quant25 = data[i].quantile(0.25)\n    quant75 = data[i].quantile(0.75)\n    IQR = quant75 - quant25\n    med = data[i].median()\n    whis_low = med-(1.5*IQR)\n    whis_high = med+(1.5*IQR)\n\n    # Calculating Number of Outliers\n    outlier_high = len(data[i][data[i]>whis_high])\n    outlier_low = len(data[i][data[i]<whis_low])\n\n    if include_outlier == True:\n      print(include_outlier)\n      #Plotting the variable with every information\n      plt.subplot(1,size,j+1)\n      sns.boxplot(data[i], orient=\"v\")\n      plt.ylabel('{}'.format(i))\n      plt.title('With Outliers\\nIQR = {}; Median = {} \\n 2nd,3rd  quartile = {};\\n Outlier (low\/high) = {} \\n'.format(\n                                                                                                   round(IQR,2),\n                                                                                                   round(med,2),\n                                                                                                   (round(quant25,2),round(quant75,2)),\n                                                                                                   (outlier_low,outlier_high)\n                                                                                                   ))\n      \n    else:\n      # replacing outliers with max\/min whisker\n      data2 = data[var_group][:]\n      data2[i][data2[i]>whis_high] = whis_high+1\n      data2[i][data2[i]<whis_low] = whis_low-1\n      \n      # plotting without outliers\n      plt.subplot(1,size,j+1)\n      sns.boxplot(data2[i], orient=\"v\")\n      plt.ylabel('{}'.format(i))\n      plt.title('Without Outliers\\nIQR = {}; Median = {} \\n 2nd,3rd  quartile = {};\\n Outlier (low\/high) = {} \\n'.format(\n                                                                                                   round(IQR,2),\n                                                                                                   round(med,2),\n                                                                                                   (round(quant25,2),round(quant75,2)),\n                                                                                                   (outlier_low,outlier_high)\n                                                                                                   ))","84fb3ed2":"UVA_outlier(data, target_detail,)","df4fe0ac":"UVA_outlier(data, target_detail, include_outlier=False)","7b6f9165":"UVA_outlier(data, geo_details)","a79f6790":"UVA_outlier(data, geo_details, include_outlier=False)","5882d391":"UVA_outlier(data,meteo_details)","2b7c1e2c":"UVA_outlier(data,meteo_details, include_outlier = False)","e2229274":"# isolating numerical datatypes\nnumerical = data.select_dtypes(include=['int64','float64','Int64'])[:]\nnumerical.dtypes","1caa28f1":"# calculating correlation\ncorrelation = numerical.dropna().corr()\ncorrelation","66d0d212":"# plotting heatmap usill all methods for all numerical variables\nplt.figure(figsize=(36,6), dpi=140)\nfor j,i in enumerate(['pearson','kendall','spearman']):\n  plt.subplot(1,3,j+1)\n  correlation = numerical.dropna().corr(method=i)\n  sns.heatmap(correlation, linewidth = 2, cmap='YlOrRd', annot=True)\n  plt.title(i, fontsize=18)\n\n","041bd314":"#from geopy.distance import geodesic\n\n#data['distance_km'] =  [geodesic((a,b),(c,d)).km for a,b,c,d in zip(data['pickup_latitude'],data['pickup_longitude'],data['dropoff_latitude'],data['dropoff_longitude'])]","44fb536a":"#data.to_csv('\/kaggle\/input\/taxi_after_distance_computation.csv')\ndata.info()","64929173":"data = pd.read_csv('\/kaggle\/input\/taxi_after_distance_computation.csv')\ndata.drop('Unnamed: 0', axis=1, inplace=True)\ndata[['vendor_id','passenger_count','store_and_fwd_flag','day_of_month','weekday','month_pick','hour_pick']]=data[['vendor_id','passenger_count','store_and_fwd_flag','day_of_month','weekday','month_pick','hour_pick']].astype('category')","971634ef":"data.info()","4a853162":"UVA_numeric(data,['distance_km'])","8e817a35":"data[data.distance_km==0]","bf063192":"UVA_outlier(data, ['distance_km'],)","05df9274":"UVA_outlier(data, ['distance_km'],include_outlier=False)","5e0b7c63":"numerical = data.select_dtypes(include=['int64','float64','Int64'])[:]\nnumerical.dtypes\n# calculating correlation\n# plotting heatmap usill all methods for all numerical variables\nplt.figure(figsize=(36,6), dpi=140)\nfor j,i in enumerate(['pearson','kendall','spearman']):\n  plt.subplot(1,3,j+1)\n  correlation = numerical.dropna().corr(method=i)\n  sns.heatmap(correlation, linewidth = 2, cmap='YlOrRd', annot=True)\n  plt.title(i, fontsize=18)","4866f18a":"# Grouping variables\n\ntrip_details = ['trip_duration','distance_km','average temperature','precipitation','snow fall','snow depth']\n","59a5e4da":"\nplt.figure(dpi=140)\nsns.pairplot(numerical[trip_details])","180c0f77":"#taking log of every value to negate outliers\nfor column in trip_details:\n  mini=1\n  if numerical[column].min()<0:\n    mini =  abs(numerical[column].min()) + 1\n  \n  numerical[column] = [i+mini for i in numerical[column]]\n  numerical[column] = numerical[column].map(lambda x : np.log(x))","a134d2a9":"\nplt.figure(dpi=140)\nsns.jointplot(np.sqrt(np.log1p(data['distance_km'])).sample(52500),np.log1p(data['trip_duration']).sample(52500), kind='scatter', ylim=(0,12),xlim=(0,7))","1f53b726":"plt.figure(dpi=120)\nsns.scatterplot(x=numerical['distance_km'],y=numerical['trip_duration'] ,data=numerical, s=2)","e9aaf7ad":"from statsmodels.stats.weightstats import ztest\nfrom statsmodels.stats.weightstats import ttest_ind","48888c4b":"plt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nIQR = data['trip_duration'].quantile(0.75)-data['trip_duration'].quantile(0.25)\nwhis_high = data['trip_duration'].quantile(0.75)+1.5*IQR\ndata_wo = data[data.trip_duration<whis_high]\nsns.boxplot(x='vendor_id', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nx1 = data['trip_duration'][(data['vendor_id']==1)]# & (data.trip_duration<2000)]\nx2 = data['trip_duration'][(data['vendor_id']==2)]# & (data.trip_duration<2000)]\n\nm1 = x1.mean()\nm2 = x2.mean()\n#tstat, pval = ztest(x1,x2)\nttest1, pval1 = ztest(x1,x2,alternative='smaller',value=-0.01*m1)\nttest2, pval2 = ztest(x1,x2,alternative='larger',value=0.01*m1)\npval = abs(pval1-pval2)\n#tstat, pval = ztest(x1,x2)\nplt.xlabel('vendor')\nplt.ylabel('trip_duration')\nplt.title('p-value with outliers: {}'.format(pval))\n\nplt.subplot(1,2,2)\nsns.boxplot(x='vendor_id', y='trip_duration', data=data_wo, showfliers = False,\n            meanline=True,showmeans=True,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nx1 = data['trip_duration'][(data['vendor_id']==1) & (data.trip_duration<whis_high)]\nx2 = data['trip_duration'][(data['vendor_id']==2) & (data.trip_duration<whis_high)]\n\nm1 = x1.mean()\nm2 = x2.mean()\n#pval = TwoSampZ(m1,m2,s1,s2,n1,n2)\nttest1, pval1 = ztest(x1,x2,alternative='larger',value=-0.01*m1)# Ha:mean(x1) - mean(x2)+val>0\nttest2, pval2 = ztest(x1,x2,alternative='smaller',value=0.01*m1)# Ha:mean(x1) - mean(x2)-val<0\npval = pval1+pval2\n#tstat, pval = ztest(x1,x2)\nplt.xlabel('vendor')\nplt.ylabel('trip_duration')\nplt.title('p-value with outliers removed: {}'.format(pval))","fcb38d2b":"data_without_outliers = data[data.trip_duration<whis_high]\nplt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['hour_pick'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='hour_pick', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['hour_pick'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='hour_pick', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","2ba5a1d6":"order_ind = data.groupby(by=['weekday'])['trip_duration'].mean().sort_values().index","3fd26d4a":"plt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['weekday'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='weekday', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['weekday'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='weekday', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","15b3e80c":"plt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['day_of_month'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='day_of_month', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['day_of_month'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='day_of_month', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","3d304b61":"plt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['month_pick'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='month_pick', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['month_pick'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='month_pick', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","5f95e6a2":"plt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['passenger_count'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='passenger_count', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['passenger_count'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='passenger_count', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","f7e50cbb":"data['precipitation_cat'] = data['precipitation']>0\ndata_without_outliers['precipitation_cat'] = data_without_outliers['precipitation']>0","89489fda":"plt.figure(figsize=(10,9))\nplt.subplot(2,1,1)\norder_ind = data.groupby(by=['precipitation_cat'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='passenger_count', y='trip_duration', data=data, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('with outliers')\nplt.subplot(2,1,2)\norder_ind = data_without_outliers.groupby(by=['precipitation_cat'])['trip_duration'].mean().sort_values().index\nsns.boxplot(x='passenger_count', y='trip_duration', data=data_without_outliers, showfliers = False,\n            meanline=True,showmeans=True, order=order_ind,\n            meanprops={'linestyle':'-', 'linewidth':2.5, 'color':'yellow'})\nplt.title('without outliers')","d8b18c0d":"data.dtypes","28484a1c":"def BVA_categorical_plot(data, tar, cat):\n  '''\n  take data and two categorical variables,\n  calculates the chi2 significance between the two variables \n  and prints the result with countplot & CrossTab\n  '''\n  #isolating the variables\n  data = data[[cat,tar]][:]\n\n  #forming a crosstab\n  table = pd.crosstab(data[tar],data[cat],)\n  f_obs = np.array([table.iloc[0][:].values,\n                    table.iloc[1][:].values])\n\n  #performing chi2 test\n  from scipy.stats import chi2_contingency\n  chi, p, dof, expected = chi2_contingency(f_obs)\n  \n  #checking whether results are significant\n  if p<0.05:\n    sig = True\n  else:\n    sig = False\n\n  #plotting grouped plot\n  sns.countplot(x=cat, hue=tar, data=data)\n  plt.title(\"p-value = {}\\n difference significant? = {}\\n\".format(round(p,8),sig))\n\n  #plotting percent stacked bar plot\n  #sns.catplot(ax, kind='stacked')\n  ax1 = data.groupby(cat)[tar].value_counts(normalize=True).unstack()\n  ax1.plot(kind='bar', stacked='True',title=str(ax1))\n  int_level = data[cat].value_counts()","03a5c26e":"BVA_categorical_plot(data, 'vendor_id', 'hour_pick')","b5262a35":"BVA_categorical_plot(data, 'vendor_id', 'weekday')","3adec928":"BVA_categorical_plot(data, 'vendor_id', 'passenger_count')","e486916e":"data.pivot_table('trip_duration', 'weekday', ['vendor_id'], aggfunc='mean')","7fd58c7d":"data.pivot_table('trip_duration', ['weekday'], 'vendor_id', aggfunc='count')","c702c053":"data_without_outliers.pivot_table('trip_duration', 'weekday', ['vendor_id'], aggfunc='mean')","b4119688":"data_without_outliers.pivot_table('trip_duration', 'weekday', ['vendor_id'], aggfunc='count')","209e816a":"### 2. Are Are vendors distrubuted equaly in weekdays","b7f16947":"<b>Pearson show weak correltation between distance and trip duration, but kendal and spearman shows strong one. There is a need to check it with the scatter plots with comparison to trip duration","e7fbbef1":"## Univariate Analysis: Numerical Variables","4b66c591":"* There are some travels with 0km and trip duration, probably it is move there and back ride.","41ef9510":"#### List of Hypothesis to check under this combination\n1.   Are vendors distrubuted equaly in hours\n2.   Are vendors distrubuted equaly in weekdays\n3.   Are passenger_count correlated with vendor \n\n\n","3115953e":"But all in all vendor_id = 2 is picked up more frequently","e0e4e91a":"### Trip duration outliers","528276fe":"### Integer Data Type","0a18ae08":"# Many Thanks to AnalyticsVidhya for great EDA\/ML Course online","299b5863":"# Exploratory Data Analysis","45132db1":"**Summary**\n* vendor_id\n  * more preferable is id=2 of vendor but not much\n\n* Passenger_count\n  *  most common trip is solo and with someone - but there are extremes like 9 in the taxi (bus?)\n\n* store_and_fwd_flag:\n  *  Major there was connection to the server and data was stored\n  *  Anyway there were some issues and in further analysis its good idea to see this records\n  \n* Date analysis\n  * lack of trips on 31st of month is because not every month has 31 days, because of Feb 30 is also slightly under line\n  * Most frequent day to trip is Friday and Saturday\n  * Month are similarly, and this may vary because maybe of weather conditions which will be checked in further analysis\n  * Most common hours to pick a taxi are 18-22 (party? :) and least common 02-05 H which is normall","1b904f44":"### 2.  Does hour affect trip duration ?","b732b411":"**There were some outliers shown by high kurtosis**","87048303":"Summary:\n\n*    **All** features got correct datatype. **Nothing to do here**\n\n","6aa6f7bd":"## Reading Files into Python","b4c268e5":"**Summary of Trip Duration:**\n\n\nit is weird that one passanger was in taxi 22 days, huge outlier. Is it even possible?\n\n**Things to Investigate Further down the road:**\n*    Is this real to be passanger in taxi so long?","630e1977":"### Meteo Details","f093caf4":"List of Hypothesis and investigation to perform under this combination.\n\n1.  Are customers taking specified vendor got longer avg trip duration ?\n2.  Does hour affect trip duration ?\n3.  Does specified weekdays affect trip duration?\n","35762bfa":"### Geo Analysis","744c273d":"* When precipitation occurs there is longer ride","fea88c45":"**Summary:**\n* Almost every ride is in New York borders, because of box flatten\n","45659d4c":"### Heatmap","c7142f4d":"## Bivariate Analysis : Numerical-Numerical","ed68c3d6":"There are some int64, float64 and object. Let's find out starting with int's","287c046b":"## Univariate Analysis : Categorical Varibales","bc5ccac1":"Summary:\n\n*    **vendor id** There are 2 vendors so it should be **converted to category**.\n\n*    **passenger_count** this also should be **convereted to category**.\n\n*    **trip_duration** and **Maximum Temperature** and **Minimum Temperature** are also numbers and hence we are okay with them as integers.\n\n","911b61da":"## Variable Identification and Typecasting","eb2e63cc":"<B> Merge taxi dataset with weather in New York Central Park","9799c955":"### 1. Are customers taking specified vendor got longer avg trip duration ?\nbecause of large samples we will compare means in 1% tollerance\n\n$H0: m2 \\notin (0.99m1;1.01m1)$ <br>\n$Ha: m2 \\in (0.99m1;1.01m1)$","09d8d9fb":"**Summary of meteo data**\n*    Avg of temperature in NY Central Park vary from 38 to 70 Fahrenheit degree\n*    The most common in precipitation is close to 0\n\n\n**Things to investigate further down**\n1.    Does temperature got impact on trip duration ?\n2.    Does precipitation got impact on trip duration ?\n","0a096ec1":"* **precipitation** should be **converter to float64** but what is **T** value?\n\n**Wikipedia:**\n\nIn meteorology, a trace denotes an amount of precipitation, such as rain or snow, that is greater than zero, but is too small to be measured by standard units or methods of measurement. The designation of a trace rather than zero is used to indicate that precipitation did fall, but not enough to be measured reliably. This is important for both weather forecasting and climatological purposes, because even precipitation amounts too small to be measured can have significant societal impacts.\n\n\nThe term \"trace\" is used in two different but related contexts. The first is in weather forecasting and record-keeping of rain, snow, and other precipitation, where a trace denotes an amount of precipitation that is greater than zero, but is too small to be measured by standard units or methods of measurement. This can be as little as just a few raindrops or snowflakes, or be enough to wet or coat the ground, but will not be enough to register via standard measurements with a rain gauge or other measuring device.\n\n* **Decision:** Converting values 'T' into 0 then converting feature to float","bab4deed":"###### Trip duration rather is not related with day of month (very weak correlation)","d402b43d":"###### Box plot shows that (Monday,Sunday,Saturday) got low trip_duration in compare with (Tuesday-Friday) same for both with and without outliers. \n\n### BUT! there is less difference between these two groups","607f6ccc":"### Bivariate analysis again but with distance_km","249d8b47":"**Clean Data!**\n","e069cddd":"### Taxi travel and datetime info","b4d19fc8":"## Univariate Analysis: Outliers","17a20a66":"### Float Data Type","6b32a5cb":"### Meteo 2016","ed5905a1":"**Result:**\n\nVendor 2 is more likely to be picked by customer.","33c03929":"**Inferences**\n1.    There is kind of correlation with distance_km and trip_duration but its not linear\n2.    Good point is to fill distance_km == 0km with means. This should 'solve' problem of trip with return","03167fbd":"### 3.  Does specified weekdays affect trip duration?","0073dfc9":"## Bivariate : Categorical-Categorical","e9d31a61":"### datetime Data Type","13bc8d1c":"Summary:\n* There are no outliers in Temperature which we suspected but there are rare many with precipitations, and this may lead to longer trip durations","09baed6b":"### Scatterplot","323d8a9d":"*    **store_and_fwd_flag** should be **converted to category**","293a86c0":"**id** column can be drop to analysis because it has no usefull information for us","96e96066":"##### It is clearly that outliers hugely affects data and both hypothesis. There is one ride to San Jose which disturbs mean so its obvious that in model selection for ML better remove such annomalies\n\nH0 in first case is fail to reject, but in second case without outliers we can safely reject null hypothesis and claim that vendors doesnt affect trip duration, which is seen on second boxplot","6811c6b3":"###### After removing outliers there is no difference in group 1-6 passengers\n###### passenger_count 7,0,9 may be treated as anomally","9077444e":"Result: Same as before vendor 2 is more likely to be picked by customer","6bcb2c53":"##### - As we see in boxplot there is relation between hour of pickup and average trip duration. Usually longer trips are at hours 15-16 and lowest at 6 am\n##### - but when we remove outliers its rather shorter trips in night - morning hours\n","1194f6c6":"Same idea like in precipitation with value **T**","90397198":"<b> Checking if trip duration has no errors","8d67c7dc":"## Bivariate Analysis: Continuous-Categorical variables","e32613e8":"### Trip duration information","3a5b6e3f":"## Univariate: Missing Values","46c9a26d":"Difference in trip duration is because of outliers","c575a335":"* Kendall and Spearman correlation seem to have very similar pattern between them, except the slight variation in magnitude of correlation.\n*  Too many variables with insignificant correlation.\n*  Major correlation lies between the geo spatial vars and precipitation and snow fall.\n*  Unfortunatelly Trip duration is corelatted weak with everything in set, lets calculate distance traveled","f92932d0":"**the scatter plot is is not meaningful due to the presence of outliers**","5ee19c16":"### Correlation Matrix","288fd5c1":"Result: Vendor 1 is picked up more frequently in solo rides","8cef497e":"**Summary of geospatial data**\n*    There are many centers in delivery and pickup places\n*    One of them is JFK Airport and American Airlines Hanger\n*    Kurtosis is very high so there are extremes pickups and dropoffs\n*    The Extremes are in San Jose for example Toronto etc.\n*There are pickups and dropoffs in ocean which is probably an error\n*Further analysis: Calculating distance betweend pick up and drop off and check if there is correlation with trip time","f68cb912":"**As we extracted data from pickup dates without seconds and minutes, and we got trip duration then we could remove pickup and dropoff dates**","4fef2d69":"## Multivariate Analysis","38cc31cb":"### Object Data Type","edf29187":"### 1. Are vendors distrubuted equaly in hours"}}