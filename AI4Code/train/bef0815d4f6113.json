{"cell_type":{"d30c95d5":"code","80c7a1c7":"code","080c5a65":"code","fe33f735":"code","4e7d4ce3":"code","49d96511":"code","74bdd927":"code","660c8656":"code","ccd32086":"code","98201430":"code","fd55ab11":"code","0cacd30f":"code","34759fc9":"code","4ab26c85":"code","31d5ae29":"code","cd901748":"code","2951db3f":"code","a28f7fba":"code","01483f8d":"code","89087449":"code","1644dff3":"code","242ab1c0":"code","93fd7ebc":"code","80f1b959":"code","e6578365":"code","5e04656a":"code","661fa057":"code","856749cc":"code","b26679de":"code","0d1c72b8":"code","403479a8":"code","25d647a3":"code","f5785e1c":"code","55adfdd2":"code","6a13d3ad":"code","d6127a35":"code","4d1b1bed":"code","322fcf0a":"code","3455dd0f":"code","1fefb18f":"code","0bda11d2":"code","adc52672":"code","b96d2805":"markdown","4c0151f9":"markdown","452be694":"markdown","756e9fd3":"markdown","d2aa0b7d":"markdown","308de56e":"markdown"},"source":{"d30c95d5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","80c7a1c7":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain_data.head()","080c5a65":"train_data.shape","fe33f735":"train_data.describe()","4e7d4ce3":"train_data.info()","49d96511":"train_data.isnull().sum()","74bdd927":"sb.heatmap(train_data.isnull())","660c8656":"#Missing value imputation\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","ccd32086":"train_data['Age'] = train_data[['Age', 'Pclass']].apply(impute_age, axis = 1)","98201430":"sb.heatmap(train_data.isnull())","fd55ab11":"train_data.drop('Cabin', axis = 1, inplace = True)","0cacd30f":"train_data.info()","34759fc9":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_data.head()","4ab26c85":"test_data.shape","31d5ae29":"test_data.describe()","cd901748":"test_data.info()","2951db3f":"test_data.isnull().sum()","a28f7fba":"sb.heatmap(test_data.isnull())","01483f8d":"test_data['Age'] = test_data[['Age', 'Pclass']].apply(impute_age, axis = 1)","89087449":"sb.heatmap(test_data.isnull())","1644dff3":"sb.countplot(x = 'Survived', data = train_data)","242ab1c0":"sb.countplot(x = 'Survived', hue = 'Sex', data = train_data)","93fd7ebc":"sb.countplot(x = 'Survived', hue = 'Pclass', data = train_data)","80f1b959":"plt.figure(figsize = (12, 7))\nsb.boxplot(x = 'Survived', y = 'Age', data = train_data)","e6578365":"train_data.head()","5e04656a":"train_data = train_data.set_index('PassengerId')\ntrain_data = train_data.drop(columns=['Name', 'Ticket', 'Fare'])\ntrain_data = pd.get_dummies(train_data, columns=['Pclass', 'SibSp', 'Parch', 'Sex', 'Embarked'])","661fa057":"train_data.head()","856749cc":"test_data.head()","b26679de":"test_data = test_data.set_index('PassengerId')\ntest_data = test_data.drop(columns=['Name', 'Ticket', 'Fare', 'Cabin'])\ntest_data = pd.get_dummies(test_data, columns=['Pclass','SibSp', 'Parch', 'Sex', 'Embarked'])","0d1c72b8":"test_data = test_data.drop(['Parch_9'], axis=1)\ntest_data.head()","403479a8":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(train_data.drop('Survived', axis = 1),\n                                                   train_data['Survived'], test_size = 0.20,\n                                                   random_state = 101)","25d647a3":"from sklearn.linear_model import LogisticRegression\nlogmodel = LogisticRegression()\nlogmodel.fit(x_train, y_train)\npredictions = logmodel.predict(x_test)","f5785e1c":"logmodel.score(x_test, y_test)","55adfdd2":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, predictions))","6a13d3ad":"from sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score","d6127a35":"def plot_roc_curve(fpr, tpr):\n    plt.plot(fpr, tpr, color = 'orange', label = \"ROC\")\n    plt.plot([0, 1],[0, 1], color = 'darkblue', linestyle = '--' )\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver Operating Characteristics (ROC) Curve')\n    plt.legend()\n    plt.show()","4d1b1bed":"probs = logmodel.predict_proba(x_test)\nprobs","322fcf0a":"probs = probs[:, 1]\nprobs","3455dd0f":"auc = roc_auc_score(y_test, probs)\nprint('AUC: %.2f' % auc)","1fefb18f":"fpr, tpr, thresholds = roc_curve(y_test, probs)","0bda11d2":"plot_roc_curve(fpr, tpr)","adc52672":"submission_df = pd.DataFrame(columns=['PassengerId', 'Survived'])\nsubmission_df['PassengerId'] = test_data.index\nsubmission_df['Survived'] = logmodel.predict(test_data)\nsubmission_df.to_csv('submissions.csv', header=True, index=False)\nsubmission_df.head(10)","b96d2805":"## Classification Report","4c0151f9":"## Training and Testing Data","452be694":"## Data Visualization\n","756e9fd3":"## ROC Curve","d2aa0b7d":"## Modelling\n","308de56e":"## Regression"}}