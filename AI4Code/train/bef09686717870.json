{"cell_type":{"8e029f01":"code","de576b8e":"code","49b58e81":"code","3f80db3b":"code","8e3a8ee0":"code","c6f6e648":"code","edcaee6e":"code","e8ce6e66":"code","a624253b":"code","bd122d76":"code","70106f44":"code","65d0559e":"code","f1b82750":"code","96c453a3":"code","bfbd8628":"code","df0e06de":"code","7d82a418":"code","f313fa4c":"code","7d111b59":"code","25db78f6":"code","2b76d020":"code","0661c5a9":"code","71577253":"code","e8236a6a":"code","a491d3b2":"code","e3c2be86":"code","207cb95a":"code","4b708636":"code","d19d3b7a":"code","81fc7f4c":"code","90d732c4":"code","a10e02a6":"code","da417749":"code","e6adc23b":"code","4d84e48d":"code","550a4342":"code","67f1813e":"code","5d437d54":"code","f8d5b2c7":"code","bdb5d589":"code","41bafe3a":"code","d32c1b7b":"markdown","d2b2b99f":"markdown"},"source":{"8e029f01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","de576b8e":"import sklearn.datasets as dataset","49b58e81":"wine_data = dataset.load_wine()\n","3f80db3b":"wine_data['feature_names']","8e3a8ee0":"X = wine_data['data']","c6f6e648":"X.shape","edcaee6e":"y=wine_data['target']","e8ce6e66":"y.shape","a624253b":"X.ndim","bd122d76":"X.shape","70106f44":"y.ndim","65d0559e":"y.shape","f1b82750":"y[0:5]","96c453a3":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)","bfbd8628":"X_train[0:5]","df0e06de":"from sklearn.neighbors import KNeighborsClassifier","7d82a418":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train,y_train)","f313fa4c":"y_pred = knn.predict(X_test)","7d111b59":"y_pred","25db78f6":"y_test","2b76d020":"from sklearn.metrics import confusion_matrix\ncon_mat = confusion_matrix(y_test,y_pred)\ncon_mat","0661c5a9":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)","71577253":"from sklearn.model_selection import GridSearchCV","e8236a6a":"param_grid={\"weights\":[\"uniform\",\"distance\"],\n           \"algorithm\":[\"ball_tree\",\"kd_tree\",\"brute\"],\n           \"n_neighbors\":np.arange(2,10)}","a491d3b2":"gridcv = GridSearchCV(knn,param_grid=param_grid,cv=3)","e3c2be86":"KNeighborsClassifier?","207cb95a":"knngrid = gridcv.fit(X,y)","4b708636":"knngrid.best_score_","d19d3b7a":"best_knn = knngrid.best_estimator_","81fc7f4c":"best_knn.fit(X_train,y_train)","90d732c4":"y_pred = best_knn.predict(X_test)","a10e02a6":"accuracy_score(y_test,y_pred)","da417749":"from sklearn.model_selection import RandomizedSearchCV","e6adc23b":"RandomizedSearchCV?","4d84e48d":"randomCV = RandomizedSearchCV(knn,param_grid,cv=3)","550a4342":"clf = randomCV.fit(X,y)","67f1813e":"clf.best_score_","5d437d54":"knnrandom = clf.best_estimator_","f8d5b2c7":"knnrandom.fit(X_train,y_train)","bdb5d589":"y_pred = knnrandom.predict(X_test)","41bafe3a":"accuracy_score(y_test,y_pred)","d32c1b7b":"**Implementing the same using GridSearchCV**","d2b2b99f":"* **Implementing the same using RandomSearchCV**"}}