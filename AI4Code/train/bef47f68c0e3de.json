{"cell_type":{"9a7726e3":"code","6113441d":"code","bb0aa953":"code","7ea135f4":"code","5f154e67":"code","8c827ede":"code","cbdc523a":"code","22cf8ccc":"code","fe1928d8":"code","d12f3f11":"code","88ca0bab":"code","1879743c":"code","bc665975":"code","a12059e8":"code","ca546148":"code","ce8eaf39":"code","222d2bd8":"code","282ca2ee":"code","91c424c1":"code","445b0b33":"code","f55a1132":"code","970cacd0":"code","f7992964":"code","2a09f6f6":"code","39d61e6a":"code","cd72c8b6":"code","9e344da9":"code","0b499e54":"code","7677d126":"code","ac0f48ba":"code","7456ef59":"code","a21394ef":"code","3cef5fff":"code","1e9cb3e6":"code","cb3b9dec":"code","d860554d":"code","2286fdfa":"code","6b61ea64":"code","16f2cf88":"code","23b0a83a":"code","109e01f0":"code","58688f52":"code","1c919e64":"code","cae54889":"code","ab8caab9":"code","751e2012":"code","ff0d37f8":"code","48ebd2ab":"code","e298e9fc":"code","a40c7781":"code","7cd02b0e":"code","7dffea66":"code","765fb77f":"code","8f702309":"code","790de68e":"code","4ce5f3ce":"code","9f315e4e":"code","81fe6766":"code","99fb0e0c":"code","f38fca9f":"code","4b6453ac":"code","f47af548":"code","00788b2d":"code","21c7cb79":"code","8b81d94b":"code","773f68cb":"code","d510963c":"code","6aa6445f":"code","54628c29":"code","d9bd7034":"code","c4972442":"code","b3855e68":"code","97a27b03":"code","6a6c013e":"code","4ab6d646":"code","23a0c580":"code","78301233":"code","be7fc771":"code","fa34005b":"code","8173f8ef":"code","8d91aecb":"code","4c3a496b":"code","46bca32b":"code","17f8c8be":"code","35b2ac26":"code","a434d8fb":"code","0284cef1":"code","e780f502":"code","d46b0a10":"code","0835441d":"code","b30d8d05":"markdown","97d884f6":"markdown","0019bfad":"markdown","fda257c1":"markdown"},"source":{"9a7726e3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6113441d":"# \uc2e4\uc218 \nprint(3.1415e0)\n\n# \ubcf5\uc18c\uc218\nprint(3 + 5j + 2 - 3j) # \uc2e4\uc218\uc640 \ud5c8\uc218 \uc870\ud569 (real number + imaginary number)","bb0aa953":"# \uc74c\uc218 \ubaab \n-5.3 \/\/ 0.5  # - 10 \uc774 \uc544\ub2cc -11 \uc784\uc744 \uc8fc\uc758 (\ub098\ub204\uae30 \uacb0\uacfc\ub97c \ub118\uc9c0 \uc54a\ub294 \uac00\uc7a5 \uc791\uc740 \uc815\uc218)","7ea135f4":"# \uacc4\uc0b0 \uc21c\uc11c \n2 ** 2 ** 3 # \uc624\ub978\ucabd\ubd80\ud130 \uc67c\ucabd","5f154e67":"# \ud45c\ud604\uc2dd \ubb38\uc790\uc5f4 \uc2e4\ud589 \ud568\uc218 eval()\n\nprint(eval('10 + 21 \/ 7'))\nprint(eval(\"'ML'\" * 3))","8c827ede":"# keyword : \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4 \ubb38\ubc95\uc5d0\uc11c \uc774\ubbf8 \uc608\uc57d\ub41c \ub2e8\uc5b4\n\nimport keyword\nprint(keyword.kwlist)","cbdc523a":"# \uc5ec\ub7ec \ubcc0\uc218 \ub300\uc785 \na, b, c = 10, 5, 3\na, b, c = c, b, a\nprint(a, b, c)","22cf8ccc":"# \ub098\ub204\uae30 \ubaab (\/\/) \uacfc \ub098\uba38\uc9c0 (%) \uc5f0\uc0b0 \ub3d9\uc2dc \uc218\ud589 \ndivmod(34, 3)","fe1928d8":"# \uc0c1\uc218 \ud45c\ud604 : 2, 8, 10, 16 \uc9c4\uc218\nprint(10)\nprint(0b11) # 2 \uc9c4\ubc95\nprint(0o17) # 8 \uc9c4\ubc95\nprint(0x1f) # 16 \uc9c4\ubc95","d12f3f11":"# \uc9c4\uc218 \ubcc0\ud658 \ud568\uc218 \nprint(bin(8)) # Binary 2 \uc9c4\uc218\nprint(oct(8)) # Octal 8 \uc9c4\uc218\nprint(hex(14)) # heXadecimal 16 \uc9c4\uc218","88ca0bab":"# int \ub97c \uc774\uc6a9\ud55c \uc9c4\uc218 \ubcc0\ud658 \nprint(int('18'), int('18', 10)) # 10 \uc9c4\uc218 \ubcc0\ud658\nprint(int('11', 2)) # 2 \uc9c4\uc218 \ubb38\uc790\uc5f4 11 \uc744 10 \uc9c4\uc218 \ubcc0\ud658\nprint(int('11', 8)) # 8 \uc0c1\ub3d9\nprint(int('11', 16)) # 16 \uc0c1\ub3d9","1879743c":"# \ub9e8 \uc55e\uc758 0b, 0o, 0x \uc778\uc2dd\ud558\uc5ec \uc790\ub3d9 10 \uc9c4\uc218 \ubcc0\ud658\ubc95 \nprint(int('0o11', 0)) # 8 \uc9c4\uc218\nprint(int('0b11', 0)) # 2 \uc9c4\uc218\nprint(int('0x11', 0)) # 16 \uc9c4\uc218","bc665975":"# \ubb38\uc790\uc5f4 Index \n'python'[len('python') - 1]","a12059e8":"# \ubb38\uc790\uc5f4 index \ud65c\uc6a9\nstr = \"Hello World!\"\nn = len(str)\n\nprint('\ubb38\uc790\uc5f4\uc758 \uae38\uc774: ', n)\nprint('\uccab \ubb38\uc790: ', str[0], str[-n])\nprint('\uc911\uac04 \ubb38\uc790: ', str[n \/\/ 2], str[-n \/\/ 2])\nprint('\ub9c8\uc9c0\ub9c9 \ubb38\uc790: ', str[n-1], str[-1])","ca546148":"# \uc74c\uc218 \uc2ac\ub77c\uc774\uc2f1 \n'python'[-5:-1] # [start:end] \ub85c \uc0ac\uc6a9\ud558\uba70 start \ubd80\ud130 end - 1 \uae4c\uc9c0 \uc2ac\ub77c\uc774\uc2f1","ce8eaf39":"# \uc591\uc218, \uc74c\uc218 \ud63c\ud569 \uc2ac\ub77c\uc774\uc2f1 \n'python'[0:-2]","222d2bd8":"# \ud55c \uc22b\uc790 \uc2ac\ub77c\uc774\uc2f1 \ubc0f \ubb38\uc790\uc5f4 \uc804\uccb4\n'python'[:4], 'python'[:]","282ca2ee":"# \ubb38\uc790\uc5f4 \uac04\uaca9 \uc870\uc815\n'python'[::1] # str[start:end:step] \ucc98\uc74c\ubd80\ud130 \ub05d\uae4c\uc9c0 1 \uac1c\uc529 \ubb38\uc790\uc5f4 \ubc18\ud658 \n'python'[::-1], 'python'[4:0:-1] # \ubb38\uc790\uc5f4\uc744 \ubc18\ub300\ub85c \ucd9c\ub825 (1 \uac1c\uc529)","91c424c1":"'python'[::2]","445b0b33":"print(ord('\uac00'), chr(44032))\nprint(ord('D') - ord('A'))","f55a1132":"# \uc774\uc2a4\ucf00\uc774\ud504 \uc2dc\ud000\uc2a4 \ubb38\uc790\nprint('\\\\')\nprint('\\'')\nprint('\\\"')\nprint('\\a')","970cacd0":"print('\\b')\nprint('ab' + \"\\b\" + \"c\") # \\b \ub294 \uc774\uc804 \ubb38\uc790 \uc9c0\uc6b0\uae30 (backspace)\nprint('\\N{DAGGER}')\nprint('\\N{REMINDER RIBBON}')","f7992964":"print('a\\tb') # \\t \ub294 \uc218\ud3c9 \ud0ed","2a09f6f6":"'\\uac00' # 16 \ube44\ud2b8 16 \uc9c4\uc218 \ucf54\ub4dc, unicode '\uac00'","39d61e6a":"str = '\\'python\\' \uc740 \uadc0\ub3c4 \ubc18 \ub85c\uc12c\uc774 \ub9cc\ub4e0 \uc5b8\uc5b4\uc774\ub2e4.'\nstr2 = \"\\\"\ub78c\ubcf4\ub974\uae30\ub2c8\\\" \ub294 '\uadf8\ub79c\uc800'\ubcf4\ub2e4 \ube60\ub974\ub2e4\"\n\nprint(str)\nprint(str2)","cd72c8b6":"# \ubb38\uc790\uc5f4\uc758 \ucd5c\ub300 \/ \ucd5c\uc18c\n\nprint(min('5647'), max('5647'))\nprint(min('ipython'), max('ipython'))\nprint(min('ipython', 'java'))","9e344da9":"# \ubb38\uc790\uc5f4 \uba54\uc18c\ub4dc\n# \ubb38\uc790\uc5f4\uc740 \uc218\uc815 \ub420 \uc218 \uc5c6\ub294 \uc790\ub8cc\ub85c str \uc790\uccb4\uac00 \uc218\uc815\ub41c \uac83\uc774 \uc544\ub2c8\ub77c, replace method \uac00 \uc791\uc6a9\ud55c \uc0c8\ub85c\uc6b4 \ubb38\uc790\uc5f4\uc774 \ubc18\ud658\ub418\ub294 \uac83\uc784. \n\nstr = '\uc57c\uad6c\ub294 \uc7ac\ubc0c\ub294 \uc2a4\ud3ec\uce20\uc774\ub2e4.'\nstr.replace('\uc57c\uad6c', '\ucd95\uad6c')","0b499e54":"str = '\uc57c\uad6c \uc57c\uad6c \uc57c\uad6c \uc57c\uad6c'\nstr.replace('\uc57c\uad6c', '\ucd95\uad6c', 2) # \uc55e\uc5d0\uc11c 2 \ubc88\uc9f8\uae4c\uc9c0 \ubb38\uc790\uc5f4\uc744 \ub300\uccb4 ","7677d126":"val = '125.87'\nnum = val.replace('.', '')\nprint(num)","ac0f48ba":"# \ubd80\ubd84 \ubb38\uc790\uc5f4 \ud69f\uc218 \ubc18\ud658 \uba54\uc18c\ub4dc : count()\nstr = '\\\"\ub78c\ubcf4\ub974\uae30\ub2c8\"\\ \ub294 \"\uadf8\ub79c\uc800\" \ubcf4\ub2e4 \ube60\ub974\ub2e4'\nstr.count('\ub78c'), str.count('\ub2e4')","7456ef59":"# \ubb38\uc790\uc5f4 \uc0bd\uc785 \uba54\uc18c\ub4dc : join()\nstr = 'python'\n'*'.join(str)","a21394ef":"# \ubb38\uc790\uc5f4 \ucc98\uc74c \uc704\uce58\ud55c index \ucc3e\uae30 : find(), index()\nstr = '\ubc14\ub451 \uccb4\uc2a4 \uc7a5\uae30'\nstr.find('\ubc14\ub451'), str.find('\uc218\uc601') # find \uba54\uc18c\ub4dc\uc758 \uacbd\uc6b0 \ucc3e\ub294 \ubb38\uc790\uc5f4\uc774 \uc5c6\uc73c\uba74 -1 \uc744 \ubc18\ud658 ","3cef5fff":"str.index('\uccb4\uc2a4') # \uccb4\uc2a4 \uae00\uc790 \uc778\ub371\uc2a4 \ubc18\ud658","1e9cb3e6":"str = '\uac10\uc790 \uace0\uad6c\ub9c8'\npos = str.find(' ')\npreword = str[:pos]\npostword = str[pos+1:]\n\nprint(preword, postword)\nprint(preword[::-1], postword[::-1])","cb3b9dec":"# \uc624\ub978\ucabd\ubd80\ud130 \ud2b9\uc815 \ubb38\uc790\uac00 \uc5b4\ub514\uc5d0 \uc704\uce58\ud558\ub294\uc9c0 \ucc3e\uae30 : rfind(), rindex()\n'python ipython'.rfind('on'), 'python ipython'.rindex('py') ","d860554d":"# \ubb38\uc790\uc5f4 \ub098\ub204\uae30 : split()\n'\uc790\ub3d9\ucc28 \ube44\ud589\uae30 \ubc30 \uc6b0\uc8fc\uc120'.split()","2286fdfa":"'\ub370\uc2a4\ud06c\ud0d1 2000000, \ub178\ud2b8\ubd81 1800000, \uc2a4\ub9c8\ud2b8\ud3f0 1500000'.split(',')","6b61ea64":"a, b = '\ub370\uc2a4\ud06c\ud0d1 \ub178\ud2b8\ubd81'.split() # \uac01\uac01\uc758 \ubcc0\uc218\uc5d0 \ubb38\uc790\uc5f4\uc744 \ub098\ub220\uc11c \uc785\ub825 \na, b","16f2cf88":"# \ubb38\uc790\uc5f4 \uc54c\ud30c\ubcb3 \ubcc0\ud658 : upper(), lower(), capitalize(), title(), swapcase()\nprint('python'.upper())             # \ub300\ubb38\uc790\nprint('python'.lower())             # \uc18c\ubb38\uc790\nprint('python class'.capitalize())  # \uccab \ubb38\uc790\ub9cc \ub300\ubb38\uc790\ub85c \ubcc0\ud658 \nprint('python class'.title())       # \ub2e8\uc5b4\ub9c8\ub2e4 \uccab \ubb38\uc790\ub97c \ub300\ubb38\uc790\ub85c \ubcc0\ud658\nprint('PyThOn'.swapcase())          # \ub300 \/ \uc18c\ubb38\uc790 \uc5ed\uc804","23b0a83a":"# \ubb38\uc790\uc5f4 \uc911\uac04 \ubc30\uce58 : center()\n' AI Study '.center(30, '*') # \ucc44\uc6b8 \ubb38\uc790 \uae30\ud638 * \ub4f1\uc744 \ub123\uc9c0 \uc54a\uc73c\uba74 \ube48 \uacf5\ubc31 \ucc98\ub9ac","109e01f0":"# \ubb38\uc790\uc5f4 \uc624\ub978 \/ \uc67c \uc815\ub82c : ljust(), rjust()\nprint('AI Study'.ljust(20))\nprint('AI Study'.ljust(20, '*')) \nprint('AI Study'.rjust(20, '*'))","58688f52":"# \ubb38\uc790\uc5f4 \uc55e \ub4a4 \ud2b9\uc815 \ubb38\uc790 \uc81c\uac70 : strip()\n\n# \uacf5\ubc31 \uc81c\uac70 \nprint('   AI Study   '.lstrip()) # \uc67c \uacf5\ubc31 \uc81c\uac70\nprint('   AI Study   '.rstrip()) # \uc624\ub978 \uacf5\ubc31 \uc81c\uac70 \nprint('   AI Study   '.strip())  # \uc67c\/\uc624\ub978 \uacf5\ubc31 \uc81c\uac70 (\uacb0\uacfc\ub294 \uc67c \uacf5\ubc31 \uc81c\uac70\uc640 \uac19\uc544 \ubcf4\uc784.)\nprint('!!!AI Study***'.strip('! *')) # \uc9c0\uc815\ud55c \ubb38\uc790\ub9cc \uc81c\uac70 ","1c919e64":"# 0 \ucc44\uc6b0\uae30 : zfill()\nprint('123'.zfill(5)) # \ubb38\uc790\uc5f4 \uc9c0\uc815\ud55c \ud3ed (\uc5ec\uae30\uc11c\ub294 5) \uc758 \uc55e \ubd80\ubd84\uc5d0 0 \uc744 \ucc44\uc6cc \ub123\uc74c.\nprint('abc'.zfill(5))\nprint('\uac00\ub098\ub2e4'.zfill(7))","cae54889":"# \ubb38\uc790\uc5f4 \ucd9c\ub825 \uc815\ud615\ud654 : format()\nstr = '{} + {} = {}'.format(1, 2, 1 + 2) # \uc911\uad04\ud638 {} \uc704\uce58\uc5d0 \ub530\ub77c \uc21c\uc11c\ub300\ub85c \uc778\uc790\uac00 \uc785\ub825\ub428. \nprint(str)","ab8caab9":"a, b, c = 1, 2, 3\nprint('{} + {} = {}'.format(a, b, a + b))\nprint('{} \/ {}'.format(a, b, a \/ b))","751e2012":"# 10 \uc9c4\uc218 \uc815\uc218 d, \ubd80\ub3d9 \uc18c\uc218\ub294 f \ub85c \ud45c\uae30 \n# {0:1d} \ub294 \uc778\uc790 \uc21c\uc704 0 \ubc88, 1 \uc740 \ud3ed, d \ub294 \uc815\uc218\ub97c \uc758\ubbf8\na, b = 10, 3 \nprint('{0:1d} \/ {1:d} = {2:f}'.format(a, b, a \/ b))","ff0d37f8":"# {2:5.3f} \ub294 \uc778\uc790 \uc21c\uc704 2 \ubc88, \ud3ed\uc740 5, .3f \ub294 \uc18c\uc218\uc810 \uc774\ud558 3 \uc790\ub9ac\nprint('{0:5d} \/ {1:5d} = {2:5.3f}'.format(a, b, a \/ b))","48ebd2ab":"a, b = 111, 9\nprint('{:5b} \/\/ {:5o} = {:10d}'.format(a, b, a \/\/ b)) # 2 \uc9c4\uc218 \/\/ 8 \uc9c4\uc218 = 10 \uc9c4\uc218 ","e298e9fc":"# \ubb34\ud55c\ub300 (infinity) \nprint('{0:10f}{0:10.3F}'.format(2.8E1000))","a40c7781":"# \uc9c0\uc218 \ud615\uc2dd (e, E), \ud615\uc2dd (g, G) \nprint('1234567890abcdef' * 2) # 16 \uc790\ub9ac \nprint('{0:16e}{0:16E}'.format(3.141592)) \nprint('{0:16g}{1:16G}'.format(45.4548E1, 67.8453E20))","7cd02b0e":"# \uc720\ub2c8 \ucf54\ub4dc (c)\nprint('12345' * 3)\nprint('{0:5c}{1:5c}{2:5c}'.format(0x41, 65, 0o101))\nprint('{0:<5c}{1:^5c}{2:>5c}'.format(0x41, 65, 0o101)) # < ^ > \ub294 \uac01\uac01 \uc67c \/ \uc911\uac04 \/ \uc624\ub978 \uc815\ub82c","7dffea66":"# \ud37c\uc13c\ud2b8 (%) \nprint('{0:7.1%} \\n {0:.2%} \\n {0:f}'.format(.258)) # \ud558\ub098\uc758 \uc22b\uc790\uac00 \ucc28\ub840\ub85c \ub2e4 \ub4e4\uc5b4\uac00\ubbc0\ub85c \uc778\uc790 \uc21c\uc704\ub294 0 \uc73c\ub85c \uac19\uc74c. ","765fb77f":"# \ubb38\uc790\uc5f4 (s) \nprint('1234567890' * 3)\nprint('{0:<10s}{0:^10s}{0:>10s}'.format('AI Study')) # \uc5ed\uc2dc < ^ > \ub85c \uac01\uac01 \uc67c \/ \uc911\uac04 \/ \uc624\ub978 \uc815\ub82c","8f702309":"# C \uc5b8\uc5b4 \ubc29\uc2dd\uc758 \ucd9c\ub825 (\ucc38\uace0)\nprint('%d ** %x = %o' % (3, 2, 3 ** 2)) # \uac01\uac01 10, 16, 8 \uc9c4\uc218 \ucd9c\ub825 \nprint('%d %%' % 78) # %% \ub450 \uac1c\ub294 % \ud558\ub098\ub97c \ucd9c\ub825 ","790de68e":"# \ub17c\ub9ac \uc5f0\uc0b0 \ntype(True)","4ce5f3ce":"print(bool(0), bool(0.0), bool(''))           # 0 \uc774\ub098 \uacf5\ubc31\uc740 False\nprint(bool(10), bool(3.14), bool('AI Study')) # \uc5b4\ub5a4 \uc218\ub098 \ubb38\uc790\uac00 \ub4e4\uc5b4\uac00\uba74 True \nprint(int(True), int(False))                  # True 1, False 0\nprint(55 * False)                             ","9f315e4e":"# \ub17c\ub9ac\uacf1 and (&) \uc640 \ub17c\ub9ac\ud569 or (|, shift + \uc5ed\uc2ac\ub798\uc26c \ubc84\ud2bc (\uc5d4\ud130 \uc704)), not (\ub17c\ub9ac \ubc18\ub300) \uc740 \uc0dd\ub7b5 \n# \uae30\ubcf8 \ub17c\ub9ac \uc5f0\uc0b0\ub3c4 \uc0dd\ub7b5 (8 > 2 \ub294 True \ub4f1)\n# \ub17c\ub9ac \uc5f0\uc0b0\uc758 \uc6b0\uc120 \uc21c\uc704\ub294 not, and, or \uc21c \n\n# \ub9ce\uc740 \uba38\uc2e0 \ub7ec\ub2dd \uc5f0\uad6c\uc790\ub4e4\uc744 \uba58\ubd95\uc5d0 \ube60\ub728\ub9b0 \ubc30\ud0c0\uc801 \ub17c\ub9ac\ud569 ^ \u3137\u3137\u3137 \nprint(True ^ True)  # \ub450 \ud56d\uc774 \uac19\uc73c\uba74 False\nprint(False ^ True) # \ub450 \ud56d\uc774 \ud2c0\ub9ac\uba74 True","81fe6766":"# \ube44\ud2b8 \ub17c\ub9ac \uc5f0\uc0b0 : 2 \uc9c4\uc218\ub85c \ubc14\uafb8\uc5b4 \ub17c\ub9ac\uacf1, \ub17c\ub9ac\ud569, \ubc30\ud0c0\uc801 \ub17c\ub9ac\ud569\uc744 \uc801\uc6a9 \na, b = 23, 57\nprint('10 \uc9c4\uc218: {0:2d}, 2 \uc9c4\uc218: {0:08b}'.format(a & b))","99fb0e0c":"# \ube44\ud2b8 \uc774\ub3d9 \uc5f0\uc0b0 \na = 0b00011011\n\nprint('10 \uc9c4\uc218 {0:3d}, 2 \uc9c4\uc218 {0:08b}'.format(a))\nprint('10 \uc9c4\uc218 {0:3d}, 2 \uc9c4\uc218 {0:08b}'.format(a >> 2)) # \ube44\ud2b8 \uc815\ubcf4\uac00 \uc624\ub978\ucabd\uc73c\ub85c 2 \uce78 \ubc00\ub9bc\nprint('10 \uc9c4\uc218 {0:3d}, 2 \uc9c4\uc218 {0:08b}'.format(a << 2)) # \ube44\ud2b8 \uc815\ubcf4\uac00 \uc67c\ucabd\uc73c\ub85c 2 \uce78 \ubc00\ub9bc","f38fca9f":"# \uc870\uac74\uc5d0 \ub530\ub978 \uc120\ud0dd : if, else \ubb38 (\ub458 \uc911 \ud558\ub098 \uace0\ub974\uae30)\nmath_score = 92\nif math_score >= 90:                  # \uc774 \uc870\uac74\uc744 \ucda9\uc871\ud558\uba74, \n    print('\uc544\ubc84\uc9c0\uac00 \uc120\ubb3c\uc744 \uc8fc\uc2e0\ub2e4.')      # \uc2e4\ud589\ubb38\uc774 \uc2e4\ud589\nelse:                                 # \uc774 \uc870\uac74\uc744 \ub9cc\uc871\ud558\uc9c0 \ubabb\ud558\uba74,\n    print('\uc544\ubc84\uc9c0 \uac00\ubc29\uc5d0 \ub4e4\uc5b4 \uac00\uc2e0\ub2e4.')   # \uc67c\ucabd \uc2e4\ud589\ubb38\uc774 \uc2e4\ud589 ","4b6453ac":"# \uc608\uc2dc : \ub098\uba38\uc9c0 \uc5f0\uc0b0\uc790\ub97c \ud65c\uc6a9\ud55c \uc9dd\uc218\/\ud640\uc218 \ud310\uc815\nn = 5\nif n % 2 == 0:                 # \ub098\uba38\uc9c0\uac00 0 \uc778 \uacbd\uc6b0\uc758 \uc870\uac74\uc2dd\uc740 \uc815\ub9d0 \ub9ce\uc774 \uc0ac\uc6a9\ub428. \n    print('%d \ub294 \uc9dd\uc218\ub2e4.'% n)\nelse:\n    print('%d \ub294 \ud640\uc218\ub2e4.'% n)","f47af548":"# \uc608\uc2dc \nfrom time import localtime\n\nhour = localtime().tm_hour\nmnt = localtime().tm_min\n\nif hour < 10:\n    print('\uc9c0\uae08 \uc2dc\uac01: %d \uc2dc %d \ubd84, \uc601\ud654 \uc870\uc870 \ud560\uc778 \uac00\ub2a5' % (hour, mnt))\nelse:\n    print('\uc9c0\uae08 \uc2dc\uac01: %d \uc2dc %d \ubd84, \uc601\ud654 \uc870\uc870 \ud560\uc778 \ubd88\uac00' % (hour, mnt))","00788b2d":"# \uc5ec\ub7ec \uc870\uac74 \uc911 \ud558\ub098 \uace0\ub974\uae30 : if, elif\npoint = 95\n\nif 90 <= point:\n    print('\uc810\uc218 {}, \uc131\uc801 {}'.format(point, 'A'))\nelif 80 <= point:\n    print('\uc810\uc218 {}, \uc131\uc801 {}'.format(point, 'B'))\nelif 70 <= point:\n    print('\uc810\uc218 {}, \uc131\uc801 {}'.format(point, 'C'))\nelif 60 <= point:\n    print('\uc810\uc218 {}, \uc131\uc801 {}'.format(point, 'D'))\nelse:\n    print('\uc810\uc218 {}, \uc131\uc801 {}'.format(point, 'F'))","21c7cb79":"# \ubc18\ubcf5\ubb38 : for, while \nfor s in 'python':   # \uc2dc\ud000\uc2a4 'python' (\uc5ec\uae30\uc120 \ubb38\uc790\uc5f4) \uc758 \uad6c\uc131 \ubb38\uc790 \ud558\ub098 \ud558\ub098\ub97c \ubcc0\uc218 s \uc5d0 \ud560\ub2f9 \ubc1b\uc544 \ucc98\ub9ac \n    print(s, ord(s)) # ord(\ubb38\uc790) \ub294 \ubb38\uc790\uc758 \ucf54\ub4dc \ubc88\ud638\ub97c \ud638\ucd9c","8b81d94b":"# \uc608\uc2dc (\uc22b\uc790\ud615 \uc2dc\ud000\uc2a4)\nfor i in 1, 2, 3, 4:\n    print(i, end = ' ') # end=' ' \ub97c \ub123\uc73c\uba74 \uac19\uc740 \uc904\uc5d0\uc11c \ubaa8\ub450 \ucd9c\ub825","773f68cb":"sum = 0\nfor i in 1, 2, 3, 4, 5, 6:\n    sum += i\n    print(i, sum)\nelse:\n    print('\ud569: %.2f, \ud3c9\uade0: %.2f' % (sum, sum \/ 6))","d510963c":"# \ub0b4\uc7a5 \ud568\uc218 : range() \nfor i in range(5):   # range(5) \ub294 0 ~ 4 \uae4c\uc9c0\uc758 \uc815\uc218 \uc2dc\ud000\uc2a4\ub97c \uc758\ubbf8 \n    print(i, end = ' ')","6aa6445f":"# \uc608\uc2dc\nfor i in range(1, 10, 2):   # 1 ~ 9 \uae4c\uc9c0 \uac04\uaca9 2 \ub9cc\ud07c \uc815\uc218 \uc2dc\ud000\uc2a4\ub97c \uc758\ubbf8 \n    print(i, end = ' ')","54628c29":"# input \ubb38\uc740 \uc785\ub825 \uac12\uc744 \ubc1b\ub294 \ud568\uc218\ub85c \ubcf8 \ub178\ud2b8\ubd81 \uc2e4\ud589\uc744 \uc704\ud574 \ube44 \ud65c\uc131\uc131\ud654 \n\n# for i in range(3):\n#     coffee = input('\uc8fc\ubb38! [\uc544\uc544][\uc544\ub5bc][\uc544\ud3ec] >>')\n    \n#     if coffee == '\uc544\uc544':\n#         print('%s \uc8fc\ubb38' % coffee) # s \ub294 string \uc758 \uc57d\uc790\ub85c \ubb38\uc790\uc5f4\uc744 \uc758\ubbf8 \n        \n#     elif coffee == '\uc544\ub5bc':\n#         print('%s \uc8fc\ubb38' % coffee) \n        \n#     elif coffee == '\uc544\ud3ec':\n#         print('%s \uc8fc\ubb38' % coffee)\n# else:\n#     print('\uc8fc\ubb38 \uc885\ub8cc')","d9bd7034":"# \ud69f\uc218 \uc815\ud558\uc9c0 \uc54a\uc740 \ubc18\ubcf5\uc5d0 \uc801\ud569\ud55c : while()\n# \uc5b4\ub5a4 \uc870\uac74\uc774 False \uac00 \ub420 \ub54c\uae4c\uc9c0 \ubc18\ubcf5\uc744 \uc218\ud589\nn = 1\nwhile n < 5:          # n=5 \uac00 \ub418\uba74 \ubc18\ubcf5\ubb38\uc744 \uc911\ub2e8\ud558\uace0 else \ube14\ub85d\uc73c\ub85c \uc774\ub3d9 \n    print(n, end=' ') # n \uc744 \ucd9c\ub825\n    n += 1            # n \uac12\uc744 1 \uc62c\ub9ac\uace0 \ub2e4\uc2dc \ubc18\ubcf5\ubb38 \uc218\ud589 \nelse:\n    print('\\n \ubc18\ubcf5 while \uc885\ub8cc: n => %d' % n) # n=5 \uac00 \ub418\uba74 else \ube14\ub85d \uc2e4\ud589 \ud6c4 \uc885\ub8cc ","c4972442":"# \uc911\ucca9\ub41c for \ubc18\ubcf5\ubb38 (\uad6c\uad6c\ub2e8) : \ubc18\ubcf5\ubb38 \ub3cc\uc544\uac00\ub294 \uc6d0\ub9ac\ub97c \uc815\ud655\ud788 \uc774\ud574\uac00 \ud544\uc694\ud568. \nfor i in range(2, 10):      # \ub2e8\uc218 (\uc77c\ub2e8 2 \ub85c\ub9cc \uacc4\uc18d \ubc18\ubcf5, \uadf8 \ub2e4\uc74c \uacf5\ubc31\uc774 \ud6c4 3 \ub2e8\uc73c\ub85c \ubc18\ubcf5....\uacc4\uc18d) \n    for j in range(1, 10):  # x \uc5bc\ub9c8 (1 ~ 9 \uae4c\uc9c0, \ud55c \ubc88 \ub2e4 \ub3cc\uba74 \ud2b9\uc815 \ub2e8\uc774 \ub05d\ub09c \uac83.)\n        print(\"%d * %d = %2d\" % (i, j, i * j), end=' ')\n    print()                                              # \uad6c\uad6c\ub2e8\uc744 \ub2e8\uc218 \ubcc4\ub85c \ucd9c\ub825\ud558\ub3c4\ub85d \uc785\ub825 ","b3855e68":"import random","97a27b03":"# \ub09c\uc218\ub97c \ub9cc\ub4dc\ub294 random \ubaa8\ub4c8 \nrandom.randint(1, 10) # 1 ~ 10 \uc911 \uc784\uc758\uc758 \ub09c\uc218 \uc0dd\uc131, random \uc740 \ubaa8\ub4c8\uc774\uace0 randint \ub294 \ud568\uc218","6a6c013e":"# \ubcf5\uad8c 6 \uac1c \uc22b\uc790 \nfor i in range(6):\n    n = random.randint(1, 45)\n    print(n, end=' ')","4ab6d646":"# \uac04\ub2e8\ud55c \ub85c\ub610 : \uadf9\uc545\uc758 \ud655\ub960...\nwin = 1, 2, 3, 4, 5, 6\nprint(' \ubaa8\uc758 \ub85c\ub610 \ub2f9\ucca8 \ubc88\ud638 '.center(28, '='))\nprint(win)\nprint()\nprint(' \ub0b4 \ubc88\ud638 \ud655\uc778 '.center(30, '*'))\n\ncnt = 0\nfor i in range(6):\n    n = random.randint(1, 45)\n    if n in win:\n        print(n, 'O ', end=' ')\n        cnt += 1\n    else:\n        print(n, 'X ', end=' ')\n\nprint()\nprint(cnt, '\uac1c \ub9de\uc74c')","23a0c580":"from random import randint  # from \ubaa8\ub4c8 import \ud568\uc218 \uc21c\uc73c\ub85c \uac00\uc838\uc624\uba74 random.randint \ub9d0\uace0 \uac04\ub2e8\ud788 randint \ub85c \uc0ac\uc6a9 \uac00\ub2a5","78301233":"randint(1, 5)","be7fc771":"# \ubc18\ubcf5\uc744 \uc81c\uc5b4\ud558\ub294 break, continue\nwin = 7\n\nwhile True:\n    n = randint(0, 9)   # 0 ~ 9 \uc911 \uc784\uc758\uac12 \uc0dd\uc131 \n    if n == win:\n        print('\uc815\ub2f5 %d, \uc885\ub8cc!' % n)\n        break\n    else:\n        print('%d, %d \ub098\uc62c \ub54c\uae4c\uc9c0 \uacc4\uc18d' % (n, win))\n\nelse:\n    print('\uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 \ubd80\ubd84')","fa34005b":"# \ubaa8\uc74c \uc77c\ubd80\ub9cc \uc81c\uac70\ud558\uace0 \ucd9c\ub825\ud558\ub294 \uc608\uc2dc \nfor s in 'ai study with python':\n    if s in 'aeiou':\n        continue       # continue \uc774\ud6c4\uc758 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uace0 \ub2e4\uc2dc \ubc18\ubcf5\ubb38\uc73c\ub85c \ud68c\uadc0 \n    print(s, end=' ')\n    \nelse:\n    print()","8173f8ef":"for s in 'python'[::-1]:\n    print(s, end=' ')","8d91aecb":"for s in 'ai study'[1::2]: # index 1\ubc88\ubd80\ud130 2 \uce78\uc529 \uac74\ub108 \n    print(s, end=' ')","4c3a496b":"# \uae30\ud638\ub85c \ub41c for \ubb38\uc740 \uc880 \ub354 \uc9c1\uad00\uc801\uc73c\ub85c \uc774\ud574\ub97c \ud560 \uc218 \uc788\ub3c4\ub85d \ub3c4\uc640 \uc90c. \nfor i in range(3):\n    for j in range(6):\n        print('*', end=' ')\n    print()","46bca32b":"for j in range(1, 6):\n    if j % 2 == 0:     # 2 \ub85c \ub098\ub208 \ub098\uba38\uc9c0\uac00 0 \uc778 \uc218 : 2 \uc758 \ubc30\uc218\n        s = '*'\n    else:\n        s = '#'\n    print(s * j)","17f8c8be":"for j in range(2, 7):\n    if j % 2 == 0:\n        s = '*'\n    else:\n        s = '#'\n    print(s * (j-1))","35b2ac26":"num = 1\n\nwhile num <= 17:\n    num += 3 \n    if num % 4 == 0:\n        continue;      # 19 \ucd9c\ub825\uc744 \uc74c\ubbf8 \n    print(num)","a434d8fb":"# list\nai = ['\uba38\uc2e0\ub7ec\ub2dd', '\ub525\ub7ec\ub2dd', '\uc778\uacf5\uc9c0\ub2a5']\n\nnum = 0\nfor s in ai:\n    num += 1\n    print('%d. %s' % (num, s)) ","0284cef1":"print('*' * 55)\n\nfor s in ai:\n    print('{:^15s}'.format(s), end=' ')    # ^15 \ub294 \ubb38\uc790\uc5f4\uc744 \ud3ed 15, \uc911\uc591 \uc815\ub82c\ub85c \ucd9c\ub825\ud558\ub294 \ucf54\ub4dc\uc784. \n\nprint()\nprint('*' * 55)","e780f502":"# \ub9ac\uc2a4\ud2b8 \ucd94\uac00 \nai = []\nai.append('\uba38\uc2e0\ub7ec\ub2dd')\nai.append('\ub525\ub7ec\ub2dd')\nai.append('\uc778\uacf5\uc9c0\ub2a5')\nai","d46b0a10":"ai[0]","0835441d":"# \ub9ac\uc2a4\ud2b8\uc758 \uba54\uc18c\ub4dc : count(), index() \n","b30d8d05":"* \uba64\ubc84\uc27d \uc5f0\uc0b0 in \n    - **x in s** : x \uac00 s \uc5f4 \ubd80\ubd84\uc5d0 \uc788\uc73c\uba74 True, \uc5c6\uc73c\uba74 False\n    - **x not in s** : x \uac00 s \uc5f4 \ubd80\ubd84\uc5d0 \uc5c6\uc73c\uba74 True, \uc788\uc73c\uba74 False","97d884f6":"[\ucc38\uace0] : \uc0b0\uc220 \uc5f0\uc0b0\uc790 \uacc4\uc0b0 \uc21c\uc11c (\ub354 \ub9ce\uc9c0\ub9cc \uc911\uc694\ud55c \uac83\ub9cc \ud45c\uc2dc)  \n      \n      1) \uad04\ud638 \n      2) **\n      3) \ubd80\ud638\ub85c\uc368\uc758 +, -\n      4) *, \/, \/\/, %\n      5) +, - (\ub367\uc148, \ube84\uc148) \n      6) >>, << (\ube44\ud2b8 \uc774\ub3d9)\n      7) &  \n      8) ^   \n      9) |  ","0019bfad":"### Python \ubb38\ubc95\uc5d0\uc11c \ub193\uce58\uae30 \uc27d\uac70\ub098, \uc751\uc6a9\uc744 \uc704\ud574 \uaf2d \ud544\uc694\ud55c \uae30\ubcf8\uae30 \ubd80\ubd84\ub9cc **\ube60\ub974\uac8c** \uc815\ub9ac\ud569\ub2c8\ub2e4.   \n### Keep Going ~! ","fda257c1":"#### \ubb38\uc790\uc5f4\uc758 \ub2e4\uc591\ud55c \ud615\uc2dd \uc720\ud615\n\n* d : 10 \uc9c4\uc218 \uc815\uc218  \n* c : \uc720\ub2c8\ucf54\ub4dc \uc218\uc5d0 \ub300\uc751 \ubb38\uc790 \ucd9c\ub825  \n* f, F : \uc18c\uc218\uc810 \uc5ec\uc12f \uc790\ub9ac\uae4c\uc9c0 \uc2e4\uc218 \ucd9c\ub825, F \uc758 \uacbd\uc6b0 'INF' (\ubb34\ud55c)\uc774\ub098 'NAN' \uc73c\ub85c \ub300\ubb38\uc790 \ud45c\uc2dc    \n* b : 2 \uc9c4\uc218 \uc815\uc218  \n* o : 8 \uc9c4\uc218 \uc815\uc218  \n* x : 16 \uc9c4\uc218 \uc815\uc218   \n* e, E : \uc9c0\uc218 \ud615\uc2dd\uc73c\ub85c \uc9c0\uc218 \ud45c\ud604\uc774 \uac01\uac01 e, E  \n* g, G : \uc2e4\uc218\ub97c \uc77c\ubc18\uc801 \uc18c\uc218\uc810\uc73c\ub85c \ud45c\ud604\ud558\uc9c0\ub9cc \ucee4\uc9c0\uba74 \uc9c0\uc218\uc2b9 \ud45c\uc2dc  \n* % : \ud37c\uc13c\ud2b8 \ud615\uc2dd, \uc778\uc790\uc758 100 \ubc30\ub97c \uc18c\uc218\uc810 \ucd9c\ub825\ud558\uace0 \ub4a4\uc5d0 \ub2e8\uc704 % \ucd9c\ub825 \n* s : \ubb38\uc790\uc5f4 \ud615\uc2dd (\uae30\ubcf8 \uc67c\ucabd \uc815\ub82c)"}}