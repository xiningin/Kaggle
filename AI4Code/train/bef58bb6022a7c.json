{"cell_type":{"aeb23d81":"code","bd4347cc":"code","38ab1819":"code","a30812ce":"code","471408d3":"code","6ed44aa4":"code","30a229cb":"code","f75db6d1":"code","67928e6c":"code","9f2c84e0":"code","a099e659":"code","c0123125":"code","b2156b28":"code","6770a97a":"code","cf994f98":"code","c35c84b5":"code","30fda846":"code","59ab9130":"code","69fc5138":"code","368e188f":"code","1d0b82ca":"code","79c5f2bc":"code","f3a292ad":"code","e177b93e":"code","515fb51d":"code","dd796dce":"code","60cfb287":"code","c4bd9442":"code","c0987e77":"code","65e72c6e":"markdown","54f1773b":"markdown","a525fc86":"markdown"},"source":{"aeb23d81":"import pandas as pd\nfrom bs4 import BeautifulSoup\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n%matplotlib inline","bd4347cc":"df= pd.read_csv('..\/input\/amazon-manual-coffe-grinder-review\/Kaggle_Data_Coffee.csv')","38ab1819":"df","a30812ce":"def getdate(column):\n    return column.split('on')[-1]\n    ","471408d3":"def getlocation(column):\n    return column.split('on')[0]\n    ","6ed44aa4":"df['Location']= df['Date'].apply(getlocation)\ndf['Date']=df['Date'].apply(getdate)\n\n","30a229cb":"df","f75db6d1":"def Country(text):\n    return text.split('in')[-1]","67928e6c":"df['Country']=df['Location'].apply(Country)","9f2c84e0":"df.drop('Location',axis=1,inplace=True)","a099e659":"df","c0123125":"len(df['Date'][0])","b2156b28":"df= df[['Username','Country','Date','Review','Rating']]","6770a97a":"df","cf994f98":"df['Date'].dtype","c35c84b5":"df['Date']=pd.to_datetime(df['Date'], errors='coerce')","30fda846":"df['Review_Length']= df['Review'].apply(len)","59ab9130":"df= df[['Username','Country','Date','Review','Review_Length','Rating']]","69fc5138":"df","368e188f":"def getstars(fromtext):\n    return fromtext[:1]","1d0b82ca":"df['Stars\/5']=df['Rating'].apply(getstars)","79c5f2bc":"df.drop('Rating',axis=1,inplace=True)","f3a292ad":"df","e177b93e":"df=df.astype({'Stars\/5': 'int64'})","515fb51d":"df['Stars\/5'].mean()","dd796dce":"plt.figure(figsize=(10,4))\nplt.title('Stars(Out of five), Mean=3.96')\nsns.countplot(x='Stars\/5',data=df,palette='PuRd')","60cfb287":"plt.figure(figsize=(10,4))\nplt.xlim([datetime.date(2017, 1, 1), datetime.date(2021, 7, 19)])\nsns.kdeplot(x='Date',data=df,color='purple',fill=True)","c4bd9442":"plt.figure(figsize=(10,5))\nplt.xlim([datetime.date(2016, 8, 1), datetime.date(2021, 7, 19)])\nplt.yticks([0,1,2,3,4,5])\nsns.kdeplot(x='Date',y='Stars\/5',data=df,fill=True,levels=6,color='purple')\n\nplt.figure(figsize=(10,5))\nplt.xlim([datetime.date(2016, 8, 1), datetime.date(2021, 7, 19)])\nsns.kdeplot(x='Date',hue='Stars\/5',palette='BuPu',fill=True,data=df)","c0987e77":"plt.figure(figsize=(10,4))\nsns.regplot(x='Review_Length',y='Stars\/5',color='purple',data=df)","65e72c6e":"# \nreview_text= []\nreview_stars= []\nreview_user= []\nreview_date= []\n\nfor i in files:\n    with open(f'data_directory{i}', 'r', encoding='utf-8') as reader:\n        html_string = reader.read()\n        soup = BeautifulSoup(html_string, 'html.parser') \n\nfor review in soup.find_all(class_=\"a-section celwidget\"):\n            try:\n                review_text.append(review.find_all(class_=\"review-text-content\")[0].text.strip())\n                review_stars.append(review.find_all(class_=\"review-rating\")[0].text)\n                review_user.append(review.find_all(class_=\"a-profile-name\")[0].text)\n                review_date.append(review.find_all(class_=\"a-size-base a-color-secondary review-date\")[0].text)\n            except ValueError:\n                pass \n               \n               \n### df=pd.DataFrame(data={'Username':review_user,'Date':review_date,'Review':review_text,'Rating':review_stars}) #","54f1773b":"# Read htmls & turned them to a dataframe","a525fc86":"# Python code for reading htmls (with directory)"}}