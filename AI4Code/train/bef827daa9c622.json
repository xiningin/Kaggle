{"cell_type":{"030885b7":"code","3bc5cf24":"code","eb44f46c":"code","e8ea6eef":"code","a9a9c3ec":"code","19034085":"code","361fab03":"code","a54e00a2":"code","18a543c9":"markdown","8af9e34e":"markdown","f78fa0a1":"markdown","06f7fde3":"markdown","a3a08055":"markdown"},"source":{"030885b7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n%matplotlib inline\nprint(f'Libraries have been imported! :)')\n\ndf = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\n\ndf.drop('id',axis=1,inplace=True)\ndf.drop('Unnamed: 32',axis=1,inplace=True)\n\ndf.diagnosis = df.diagnosis.apply(lambda x:0 if x=='B' else 1).astype(int)\n#df['diagnosis'] = df['diagnosis'].map({'M':1,'B':0})\n\n#print(df.tail())\nprint(f'Preview:\\n\\n{df.head()}')\nprint(' ')\nprint(df.describe(),'\\n','\\n')","3bc5cf24":"# simple heat map showing where we are missing data\nheat_map = sns.heatmap(df.isnull(), yticklabels = False, cbar = True, cmap = \"RdPu\", vmin = 0, vmax = 1)\nplt.title('Null Value Heatmap')\nplt.show()","eb44f46c":"# a count plot shows the counts of observations in each categorical bin using bars\n# think of it as a histogram across a categorical, instead of quantitative, variable\nplt.figure(figsize = (10,6))\nsns.set_style('darkgrid')\nsns.countplot(data=df, x=df.diagnosis, palette='flare')\nplt.show()\n","e8ea6eef":"# let's check out the spread of mean radius using a histogram\\\nplt.figure(figsize = (10,6))\nsns.histplot(df.radius_mean,bins = 25)\nplt.show()","a9a9c3ec":"#Let\u2019s visualize the average radius of a tumor by diagnosis via a box plot.\nplt.figure(figsize = (10,6))\nsns.boxplot(x=df.diagnosis,y=df.radius_mean,data=df)\nplt.show()","19034085":"# calculate the average radius size by diagnosis (0 or 1)\nprint(df.groupby(df.diagnosis).radius_mean.mean(),'\\n','\\n')\nprint(df.info(),'\\n','\\n')\n#print(df.columns,'\\n','\\n')\n\n\n#Split data into X and y\nX = df.drop('diagnosis',axis=1) #[1:100]\ny = df.diagnosis #[1:100]\n\nprint('X: \\n',X.tail(),'\\n','\\n','y: \\n',y.tail(),'\\n','\\n')\n\n#Split data into train set and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 69)","361fab03":"#Train and predict\nmod = LogisticRegression()\nmod.fit(X_train,y_train)\npred = mod.predict(X_test)\n\ncorrect_pred= 0 \nincorrect_pred = 0\nidx = 0\nfor i in y_test:\n    if i == pred[idx]:\n        correct_pred += 1\n        idx +=1\n    else:\n        incorrect_pred += 1\n        idx += 1\n\nprint('No of correct pred = ','\\t',correct_pred)\nprint('No of incorrect pred =  ',incorrect_pred,'\\n','\\n')\nprint('Prediction score: ',mod.score(X_test,y_test),'\\n','\\n')","a54e00a2":"print(classification_report(y_test, pred),'\\n','\\n')\nconfusion_matrix(y_test, pred)","18a543c9":"**The Box-plot shows that those diagnosed with cancer tend to have larger radius when compared to those who don't.**","8af9e34e":"**The blank graph shows that there are no null values in the Data.**","f78fa0a1":"Using the Wisconsin breast cancer diagnostic dataset","06f7fde3":"![j.jpg](attachment:15a84ea0-f8b4-498d-b117-826d179471a4.jpg)","a3a08055":"**The Confusion Matrix shows that out of 94 predicted to not have breast cancer , 2 were falsely classified as they actually had cancer , while in case of 77 predicted to have cancer , 6 were falsely classified as they didnt have cancer.**"}}