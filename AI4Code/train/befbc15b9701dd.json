{"cell_type":{"183f91b8":"code","8a124820":"code","08f9f219":"code","7610a528":"code","3134b7d7":"code","351eede4":"code","28bfb02b":"code","b2edaf0b":"code","1caada0d":"code","4d60a930":"code","6b4c5c27":"code","d011d894":"code","b2b64c1d":"code","f795ba72":"code","96ddea3d":"code","c38c3c9e":"code","bbeda330":"code","f2108d87":"code","9c28085b":"code","4479bc4a":"code","62a37ccc":"code","a389a4ce":"code","5fe3a31a":"code","6c602e91":"code","fc19019a":"code","7eccf6b3":"code","87e31386":"code","3b96cf9d":"code","7dddcc3e":"code","4b628c0b":"code","cc98e888":"code","bed3de52":"code","4b1f1a27":"code","6f69f1ff":"markdown","a3e012d2":"markdown","0f8fb578":"markdown","77fb089a":"markdown","071f41b5":"markdown","d873990e":"markdown","5a313f2d":"markdown","27358204":"markdown","a910882e":"markdown","c1dd4357":"markdown","20cea2ac":"markdown"},"source":{"183f91b8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))","8a124820":"df = pd.read_csv(\"..\/input\/train.csv\")\ndf.sample(5)","08f9f219":"df.describe()","7610a528":"df.columns","3134b7d7":"!pip install fklearn","351eede4":"columns_to_train = [\"OverallQual\", \"GrLivArea\", \"GarageCars\", \"GarageArea\", \n \"TotalBsmtSF\", \"1stFlrSF\", \"FullBath\", \"TotRmsAbvGrd\", \n \"YearBuilt\", \"Neighborhood\", 'KitchenQual', 'HouseStyle', 'LotArea', 'SalePrice']","28bfb02b":"train = df[columns_to_train]\ntrain.dtypes","b2edaf0b":"from fklearn.tuning.model_agnostic_fc import correlation_feature_selection\n\ncorrelation_feature_selection(train,features=columns_to_train)['feature_corr']['SalePrice'] #threshold)","1caada0d":"train.isnull().sum()","4d60a930":"import matplotlib.pyplot as plt \ncolumns_to_explore = [\"GrLivArea\", \"GarageArea\", \n \"TotalBsmtSF\", \"1stFlrSF\", \"TotRmsAbvGrd\", \n \"YearBuilt\", 'LotArea', 'SalePrice']\n\n#eplore 3 by 3\ntrain.boxplot(column=columns_to_explore[:3])","6b4c5c27":"train.boxplot(column=columns_to_explore[3:6])","d011d894":"train.boxplot(column=columns_to_explore[6:])","b2b64c1d":"train[train.GrLivArea < 2650].boxplot(column=\"GrLivArea\")\ntrain = train.drop(train[train.GrLivArea > 2650].index).copy()","f795ba72":"train[train.GarageArea < 950].boxplot(column=\"GarageArea\")\ntrain = train.drop(train[train.GarageArea > 950].index).copy()","96ddea3d":"train[(train.TotalBsmtSF < 1800) & (train.TotalBsmtSF > 200)].boxplot(column=\"TotalBsmtSF\")\ntrain = train.drop(train[(train.TotalBsmtSF > 1800) | (train.TotalBsmtSF < 200)].index).copy()","c38c3c9e":"train[train['1stFlrSF'] < 1850].boxplot(column=\"1stFlrSF\")\ntrain = train.drop(train[train['1stFlrSF'] > 1850].index).copy()","bbeda330":"train[train.TotRmsAbvGrd < 10].boxplot(column=\"TotRmsAbvGrd\")\ntrain = train.drop(train[train.TotRmsAbvGrd > 10].index).copy()","f2108d87":"train[train.YearBuilt > 1885].boxplot(column=\"YearBuilt\")\ntrain = train.drop(train[train.YearBuilt < 1885].index).copy()","9c28085b":"train[(train.SalePrice < 280000) & (train.SalePrice > 45000)].boxplot(column='SalePrice')\ntrain = train.drop(train[(train.SalePrice > 280000) | (train.SalePrice < 45000)].index).copy()","4479bc4a":"train[(train.LotArea < 15800) & (train.LotArea > 2100)].boxplot(column=\"LotArea\")\ntrain = train.drop(train[(train.LotArea > 15800) | (train.LotArea < 2100)].index).copy()","62a37ccc":"from fklearn.training.pipeline import build_pipeline\nfrom fklearn.training.regression import linear_regression_learner\nfrom fklearn.training.transformation import capper, floorer, prediction_ranger, label_categorizer\nfrom fklearn.training.imputation import imputer\n\ndef fit(train_data):\n    labelcateg_fn = label_categorizer(columns_to_categorize=['Neighborhood', 'KitchenQual', 'HouseStyle'])\n    imputer_fn = imputer(columns_to_impute=columns_to_train[:-1])\n    capper_fn = capper(columns_to_cap=columns_to_train[:-1])\n    regression_fn = linear_regression_learner(features=columns_to_train[:-1], \n                                              target=columns_to_train[-1], \n                                              prediction_column=\"Predicted_Value\")\n    \n    learner = build_pipeline(labelcateg_fn, imputer_fn, capper_fn, regression_fn)\n    predict_fn, training_predictions, logs = learner(train_data)\n    \n    return predict_fn, logs","a389a4ce":"from math import ceil\n\nn_train = ceil(0.75*train.shape[0])\n\ntrain_df = train.iloc[:n_train,:]\ntest_df = train.iloc[n_train:,:]\n\nmodel, log = fit(train_df)","5fe3a31a":"test_df.describe()","6c602e91":"preds = model(test_df)","fc19019a":"preds","7eccf6b3":"from fklearn.validation.evaluators import mse_evaluator, mean_prediction_evaluator\n\nmse_evaluator(preds, target_column=\"SalePrice\", prediction_column=\"Predicted_Value\")","87e31386":"mean_prediction_evaluator(preds, prediction_column=\"Predicted_Value\")","3b96cf9d":"to_predict = pd.read_csv(\"..\/input\/test.csv\")\nto_predict.sample(5)","7dddcc3e":"index = to_predict.Id\nprint(train.columns)\nto_predict = to_predict[train.columns[:-1]]\nto_predict.isnull().sum() ","4b628c0b":"to_predict.describe()","cc98e888":"to_predict.GarageCars.fillna(to_predict.GarageCars.mean(), inplace=True)\nto_predict.GarageArea.fillna(to_predict.GarageArea.mean(), inplace=True)\nto_predict.TotalBsmtSF.fillna(to_predict.TotalBsmtSF.mean(), inplace=True)\nto_predict.KitchenQual.fillna(\"TA\", inplace=True)\nto_predict.isnull().sum() ","bed3de52":"preds_ = model(to_predict)\npredictions_ = preds_['Predicted_Value'].values\npredictions_","4b1f1a27":"d = {\"Id\" : index, \"SalePrice\" : predictions_}\nhouse_prices = pd.DataFrame(data=d)\nhouse_prices.to_csv(\"house_prices.csv\", index=False)","6f69f1ff":"# Searching for outliers\n<a id=\"section2\"><\/a>","a3e012d2":"# Evaluating Model\n<a id=\"section4\"><\/a>","0f8fb578":"### [Lucas](https:\/\/www.linkedin.com\/in\/lestevam\/) (data scientist at nubank group) points in this [article](https:\/\/medium.com\/building-nubank\/introducing-fklearn-nubanks-machine-learning-library-part-i-2a1c781035d0) which priciples motivate the library creation. of which we can cite:\n* Making it easy to build pipelines where the data transformations that happen during training match the models in production.\n* Allowing for safer iteration in interactive environments (e.g. Jupyter Notebooks), preventing mistakes caused by stateful code and making research more reproducible.\n* Allowing us to write very generic validation, tuning and feature selection code that works across model types and applications, making us more efficient overall.","77fb089a":"<img src=\"https:\/\/media.giphy.com\/media\/x4O0fjpQfoBZS\/giphy.gif\" width=\"480\" height=\"431\"\/>\n<h2 align=center>The main idea of this kernel was explore this library.<\/h2>\n<h4 align=center>I thought it's a very cool and practical tool as well as sklearn<\/h4>","071f41b5":"### Recently Nubank's group has created the [fklearn library](https:\/\/github.com\/nubank\/fklearn), a sklearn based library who use machine learning with functional programming concepts.","d873990e":"# Load and Explore the data\n<a id=\"section1\"><\/a>","5a313f2d":"# Training and Predicting\n<a id=\"section3\"><\/a>","27358204":"# Predicting Prices\n<a id=\"section5\"><\/a>","a910882e":"# Table of Contents\n1. [Load and Explore the data](#section1)\n    - [Installing the library and exploring a little more](#section11)\n2. [Searching for outliers](#section2)\n    - [Excluding outliers](#section21)\n3. [Training and Predicting](#section3)  \n4. [Evaluating Model](#section4)  \n5. [Predicting Prices](#section5)","c1dd4357":"## Installing the library and exploring a little more\n<a id=\"section11\"><\/a>","20cea2ac":"### Excluding outliers\n<a id=\"section21\"><\/a>"}}