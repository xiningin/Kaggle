{"cell_type":{"92b0c2c2":"code","521dfd08":"code","8ad14b50":"code","8526195d":"code","c0a9bbff":"code","d419a3db":"code","71b8002b":"code","36bc0559":"code","e17df549":"code","060da189":"code","bd30176b":"code","29dbc9ef":"code","cd0caddd":"code","114f1019":"code","b2b617a0":"code","559fb9d4":"code","6108c0f9":"code","d92aafa8":"code","ac658ffd":"code","1f6891e0":"code","532f4bc3":"code","a5660b41":"code","2d175e0b":"code","2e2060ef":"markdown","61c4935a":"markdown","87d3ff22":"markdown","058d2771":"markdown","403e372e":"markdown","fa4ae0f8":"markdown","9ab90fda":"markdown","7a268a76":"markdown","8802f52c":"markdown"},"source":{"92b0c2c2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score","521dfd08":"Data=pd.read_csv('..\/input\/fuelconsumptioncsv\/FuelConsumption.csv')","8ad14b50":"Data.head(10)","8526195d":"print(Data.count())","c0a9bbff":"Data.isnull().any()","d419a3db":"plt.subplots(figsize=(10,10))\nsns.heatmap(Data.corr(), cmap = 'RdGy')","71b8002b":"sns.pairplot(Data)","36bc0559":"plt.scatter(Data.ENGINESIZE, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"ENGINESIZE\")\nplt.ylabel(\"Emission\")\nplt.show()","e17df549":"# write your code here\nplt.scatter(Data.CYLINDERS, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"CYLINDERS\")\nplt.ylabel(\"Emission\")\nplt.show()","060da189":"plt.scatter(Data.FUELCONSUMPTION_CITY, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"FUELCONSUMPTION_CITY\")\nplt.ylabel(\"Emission\")\nplt.show()","bd30176b":"# write your code here\nplt.scatter(Data.FUELCONSUMPTION_HWY, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"FUELCONSUMPTION_HWY\")\nplt.ylabel(\"Emission\")\nplt.show()","29dbc9ef":"plt.scatter(Data.FUELCONSUMPTION_COMB, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"FUELCONSUMPTION_COMB\")\nplt.ylabel(\"Emission\")\nplt.show()","cd0caddd":"plt.scatter(Data.FUELCONSUMPTION_COMB_MPG, Data.CO2EMISSIONS,  color='blue')\nplt.xlabel(\"FUELCONSUMPTION_COMB_MPG\")\nplt.ylabel(\"Emission\")\nplt.show()","114f1019":"Data[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY','FUELCONSUMPTION_COMB','FUELCONSUMPTION_COMB_MPG']]","b2b617a0":"x=np.array(Data[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY','FUELCONSUMPTION_COMB','FUELCONSUMPTION_COMB_MPG']]).reshape(-1,6)\ny=np.array(Data['CO2EMISSIONS']).reshape(-1,1)","559fb9d4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test =  train_test_split(x,y,test_size=0.3)","6108c0f9":"from sklearn import linear_model\nmodel = linear_model.LinearRegression()\nmodel.fit (X_train,y_train)","d92aafa8":"print('\u0110\u1ed9 d\u1ed1c:',model.coef_)\nprint('H\u1ec7 S\u1ed1 Ch\u1eb7n:',model.intercept_)","ac658ffd":"y_pred=model.predict(X_train)","1f6891e0":"def Evaluate_model (x,y,model):\n    y_pred=model.predict(x)\n    print('R2:',r2_score(y,y_pred))\n    print('MAE:', metrics.mean_absolute_error(y, y_pred))\n    print('MSE:', metrics.mean_squared_error(y, y_pred))\n    print('RMSE:', np.sqrt(metrics.mean_squared_error(y, y_pred)))","532f4bc3":"print('Data Train')\nEvaluate_model (X_train,y_train,model)\nprint('_____________________________')\nprint('Data Test')\nEvaluate_model (X_test,y_test,model)","a5660b41":"from sklearn.model_selection import KFold\nkf5 = KFold(n_splits=5, shuffle=False)\nLR = linear_model.LinearRegression()\ni = 1\nfor train_index, test_index in kf5.split(x):\n    X_train =x[train_index]\n    X_test = x[test_index]\n    y_train =y[train_index]\n    y_test = y[test_index]\n    LR.fit(X_train, y_train)\n    print(f\"Accuracy for the fold no. {i} on the test set: {r2_score(y_test, LR.predict(X_test))}\")\n    i += 1","2d175e0b":"print('Data Train')\nEvaluate_model (X_train,y_train,LR)\nprint('_____________________________')\nprint('Data Test')\nEvaluate_model (X_test,y_test,LR)","2e2060ef":"# Data Generator","61c4935a":"# Import library","87d3ff22":"# Train Model","058d2771":"# Training with Cross validation","403e372e":"\n# Check Attribute Correlation","fa4ae0f8":"# Plot Data","9ab90fda":"# Evaluate model","7a268a76":"# Check 'NaN' in Data","8802f52c":"# Load Data"}}