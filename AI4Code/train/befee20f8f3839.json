{"cell_type":{"ccddefb6":"code","5e255ecd":"code","2638b728":"code","6833c901":"code","8588ca93":"code","8a2d96f4":"code","bb3e7bcc":"code","51a11d07":"code","90a26a57":"code","6fa1e940":"code","670b1d49":"code","da5694d7":"code","381410d1":"code","49b832ed":"code","48c70134":"code","b4128dc8":"code","4377df97":"code","353f6c20":"code","61a5fabf":"code","f6da0794":"code","1236a6e5":"code","ebedba56":"code","2d41a2cd":"code","2bfaa22b":"code","131b5319":"code","ef98bce4":"code","debae06b":"code","754d953f":"code","4b81686f":"code","055fe898":"code","43f4e674":"code","62a3bc83":"code","cf1921b9":"code","ee4ae9d9":"code","414bc8a3":"code","c1a483aa":"code","0934fba8":"code","876dc43d":"code","63f01734":"code","640ca374":"code","3539d9d2":"code","9a30852b":"code","69844f1e":"code","fef765cd":"code","c3105526":"code","de56e30f":"code","9e90b4fe":"code","7d1dfa8c":"code","e6646ac6":"code","e03adcda":"code","a302403f":"code","9a3e7398":"code","8ddea125":"code","15ca404c":"code","b15ed307":"code","12b328af":"code","b538dc40":"code","c3fe15a8":"code","a1cf867a":"code","2440bc70":"code","37bc3d48":"code","d2da1aec":"code","40565df5":"markdown"},"source":{"ccddefb6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5e255ecd":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","2638b728":"\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","6833c901":"train['set'] = 'train'\ntest['set'] = 'test'","8588ca93":"test.info()","8a2d96f4":"test['Survived'] = np.nan","bb3e7bcc":"data = pd.concat([train,test],sort=True)","51a11d07":"#finding out missing values\nmissing = data.isna().sum().sort_values(ascending=False)\npercentage = (data.isna().sum()\/data.isna().count()).sort_values(ascending=False)\nvalues = pd.concat([missing,percentage],axis=1,keys=('missing','percentage'))\nvalues","90a26a57":"#cabin variable is not having any signifinace and having a lot of NA's So drop this variable\ndel data['Cabin']\ndel data['PassengerId']","6fa1e940":"#EDA\nsns.countplot(data['Survived'])","670b1d49":"#Distribution of survival according to Age\nsns.boxplot(data['Survived'],data['Age'])","da5694d7":"#Distribution of survival according to Age and Gender\nsns.boxplot(data['Survived'],data['Age'],hue=data['Sex'])","381410d1":"#Distribution of survival according to Fare\nsns.boxplot(data['Survived'],data['Fare'])\n#There seems to be more survivals according to more fare","49b832ed":"sns.catplot(x=\"Sex\", y=\"Survived\", hue=\"Pclass\", kind=\"bar\", data=data)","48c70134":"g = sns.catplot(x=\"Fare\", y=\"Survived\", row=\"Pclass\",\n                kind=\"box\", orient=\"h\", height=1.5, aspect=4,\n                data=data.query(\"Fare > 0\"))\ng.set(xscale=\"log\")","b4128dc8":"#NA treatment for Age\n#Distribution of age according to Pclass\nsns.boxplot(data['Pclass'],data['Age'])","4377df97":"#Imputing NA in Age variable\ndata['Age'].fillna(data.groupby([\"Sex\",\"Pclass\"])['Age'].transform('median'),inplace=True)","353f6c20":"#Check NA in Age variable\nprint(data['Age'].isna().sum())","61a5fabf":"#Imputing NA in Fare variable\ndata['Fare'].fillna(data.groupby([\"Pclass\"])['Age'].transform('median'),inplace=True)","f6da0794":"print(data['Fare'].isna().sum())","1236a6e5":"#Distribution of Embarked with Pclass\nsns.countplot(data['Embarked'],hue=data['Pclass'])","ebedba56":"#Replace NA in Embarked with highest frequency Pclass\ndata['Embarked'].fillna('S',inplace=True)","2d41a2cd":"data = pd.get_dummies(data, columns=['Embarked'],drop_first=True)","2bfaa22b":"data = pd.get_dummies(data, columns=['Sex'],drop_first=True)","131b5319":"train_set = data[data['set']=='train']","ef98bce4":"del train_set['set']\ntrain_set.info()","debae06b":"sns.heatmap(train_set.isnull(),yticklabels=False,cbar=False,cmap='viridis')","754d953f":"test_set = data[data['set']=='test']","4b81686f":"del test_set['set']\ndel test_set['Survived']\ndel train_set['Name']\ndel test_set['Name']\ndel train_set['Ticket']\ndel test_set['Ticket']","055fe898":"#Finally, lets look the correlation of df_train\nplt.figure(figsize=(15,12))\nplt.title('Correlation of Features for Train Set')\nsns.heatmap(train_set.astype(float).corr(),vmax=1.0,  annot=True)\nplt.show()","43f4e674":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","62a3bc83":"X_train, X_test, y_train, y_test = train_test_split(train_set.drop('Survived',axis=1), \n                                                    train_set['Survived'], test_size=0.30, \n                                                    random_state=101)","cf1921b9":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","ee4ae9d9":"predictions = logmodel.predict(X_test)","414bc8a3":"from sklearn.metrics import classification_report","c1a483aa":"print(classification_report(y_test,predictions))","0934fba8":"test_predictions = logmodel.predict(test_set)","876dc43d":"submission = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':test_predictions})","63f01734":"#Convert DataFrame to a csv file that can be uploaded\n#This is saved in the same directory as your notebook\nfilename = 'Titanic_Predictions.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","640ca374":"from sklearn.ensemble import RandomForestClassifier","3539d9d2":"classifier = RandomForestClassifier(n_estimators=35, max_depth=5, random_state=1)\nmodel_rf = classifier.fit(X_train,y_train)","9a30852b":"prediction_rf = model_rf.predict(X_test)","69844f1e":"print(classification_report(y_test,prediction_rf))","fef765cd":"sub_predict_rf = model_rf.predict(test_set)","c3105526":"submission1 = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':sub_predict_rf})","de56e30f":"submission1.to_csv('Titanic_prediction1.csv',index=False)","9e90b4fe":"from sklearn import linear_model\nimport numpy as np\nreg = linear_model.RidgeClassifier(alpha=0.5, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, class_weight=None, solver='auto', random_state=None)\nmodel_rid = reg.fit(X_train,y_train)","7d1dfa8c":"predict_rid = model_rid.predict(X_test)\nprint(classification_report(y_test,predict_rid))","e6646ac6":"sub_prd_rid = model_rid.predict(test_set)","e03adcda":"submission2 = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':sub_prd_rid})","a302403f":"submission2.to_csv(\"Titanic_prediction2.csv\",index=False)","9a3e7398":"from sklearn.linear_model import RidgeClassifierCV\nreg_CV = RidgeClassifierCV(alphas=np.logspace(-6,6,13))\n","8ddea125":"model_CV = reg_CV.fit(X_train,y_train)","15ca404c":"predict_cv = reg_CV.predict(X_test)","b15ed307":"print(classification_report(y_test,predict_cv))","12b328af":"from sklearn import svm\nfrom sklearn.model_selection import GridSearchCV\nparameters = {'kernel' : ('linear','rbf'), 'C' : [1,10]}\n","b538dc40":"svc = svm.SVC()\ngsv = GridSearchCV(svc,parameters)","c3fe15a8":"model_gsv = gsv.fit(X_train,y_train)","a1cf867a":"predict_gvm = model_gsv.predict(X_test)","2440bc70":"print(classification_report(y_test,predict_gvm))","37bc3d48":"from sklearn.linear_model import SGDClassifier\nsgd = SGDClassifier(max_iter=1000, tol=1e-3)\nmodel_sgd = sgd.fit(X_train,y_train)\npredict_sgd = model_sgd.predict(X_test)\n","d2da1aec":"print(class)","40565df5":"Model Building"}}