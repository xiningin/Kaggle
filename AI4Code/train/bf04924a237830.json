{"cell_type":{"5e2bf1e9":"code","6d53f680":"code","5ae7fc7a":"code","4be647ab":"code","8fc5345c":"code","825b36d1":"code","66c42171":"markdown","7fa6a525":"markdown","5cfdf933":"markdown","85a16235":"markdown","fe694c41":"markdown"},"source":{"5e2bf1e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d53f680":"!pip install plyer","5ae7fc7a":"!pip3 install asyncio","4be647ab":"import asyncio\n\nasyncio.set_event_loop_policy(\n    asyncio.WindowsProactorEventLoopPolicy())\n\nasyncio.run(your_code())","8fc5345c":"import time \nfrom plyer import notification \n  \n  \nif __name__==\"__main__\": \n  \n        notification.notify( \n            title = \"Clueless\", \n            message=\" Exactly, I've no clue about what I'm really doing\" , \n            \n            # displaying time \n            timeout=2 \n) \n        # waiting time \n        time.sleep(7)","825b36d1":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient, Mar\u00edlia Prata, @mpwolke was here Clueless' )","66c42171":"#Trying to fix the notification I added asyncio. Just to get more errors.","7fa6a525":"#According to StackOverflow:\n\nhttps:\/\/github.com\/python\/cpython\/blob\/master\/Lib\/asyncio\/base_events.py#L493\n\nIt's a planned feature but it is not implemented yet. It will work in the future but the current versions don't support it.\n\nThe asyncio support for it is not yet finished. The endpoints were defined but they are as of now not usable.\n\nhttps:\/\/stackoverflow.com\/questions\/60432219\/python-error-raise-notimplementederror-when-trying-to-call-shell-command-async","5cfdf933":"How to create a simple Desktop Notifier application using Python. A desktop notifier is a simple application which produces a notification message in form of a pop-up message on desktop. We will be using plyer module for the same.\nhttps:\/\/www.geeksforgeeks.org\/python-desktop-notifier-using-plyer-module\/","85a16235":"#Syntax: notify(title=\u201d, message=\u201d, `app_name`=\u201d, `app_icon`=\u201d, timeout=10, ticker=\u201d, toast=False)\n\nParameters:\n\ntitle (str) \u2013 Title of the notification\n\nmessage (str) \u2013 Message of the notification\n\napp_name (str) \u2013 Name of the app launching this notification\n\napp_icon (str) \u2013 Icon to be displayed along with the message\n\ntimeout (int) \u2013 time to display the message for, defaults to 10\n\nticker (str) \u2013 text to display on status bar as the notification arrives\n\ntoast (bool) \u2013 simple Android message instead of full notification\n\n\nAdd the sleep function to show that notification again.\n\nhttps:\/\/www.geeksforgeeks.org\/python-desktop-notifier-using-plyer-module\/","fe694c41":"#Call the notify method of this class."}}