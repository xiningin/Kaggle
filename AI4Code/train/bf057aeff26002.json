{"cell_type":{"249246b4":"code","6f63e22d":"code","64d7c3e4":"code","f2d24c59":"code","99e83c51":"code","f4b02823":"code","da15ca57":"code","45f854e3":"code","33802e0b":"code","9b536f40":"code","ae3d182e":"code","be11106a":"code","2f3fef98":"code","d72167ff":"code","90fae386":"code","c6b15b56":"code","974412be":"code","7a3e79da":"code","44a23b3d":"code","ddcd609f":"code","b08faa42":"code","667955c8":"code","ec9f7fd2":"code","b65a6848":"markdown","ec29f0a4":"markdown","9e066b44":"markdown","c2cf69d3":"markdown","8ea5746a":"markdown","5b5d8d2a":"markdown","3b554961":"markdown","d7306361":"markdown","6b4d1615":"markdown","ac6a5b1d":"markdown","20da4183":"markdown","6e11cccd":"markdown","9d081ec0":"markdown","f9162317":"markdown","d1204475":"markdown","b7af90fa":"markdown","dd25ef41":"markdown","652e1e1b":"markdown","59ea8978":"markdown","3a26d517":"markdown","a8c7c005":"markdown","a2cd87be":"markdown"},"source":{"249246b4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n%matplotlib inline\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\npd.options.mode.chained_assignment = None\npd.options.display.max_columns = 999","6f63e22d":"from subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/data-science-for-good-kiva-crowdfunding\/\"]).decode(\"utf8\"))","64d7c3e4":"kiva_loans_df = pd.read_csv(\"..\/input\/data-science-for-good-kiva-crowdfunding\/kiva_loans.csv\")\nkiva_loans_df.head()","f2d24c59":"kiva_mpi_locations_df = pd.read_csv(\"..\/input\/data-science-for-good-kiva-crowdfunding\/kiva_mpi_region_locations.csv\")\nkiva_mpi_locations_df.head()","99e83c51":"loan_theme_ids_df = pd.read_csv(\"..\/input\/data-science-for-good-kiva-crowdfunding\/loan_theme_ids.csv\")\nloan_theme_ids_df.head()","f4b02823":"loan_themes_by_region_df = pd.read_csv(\"..\/input\/data-science-for-good-kiva-crowdfunding\/loan_themes_by_region.csv\")\nloan_themes_by_region_df.head()","da15ca57":"kiva_loans_df.shape","45f854e3":"cnt_srs = kiva_loans_df['country'].value_counts().head(50)\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Viridis',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Country wise distribution of loans',\n    width=700,\n    height=1000,\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"CountryLoan\")","33802e0b":"con_df = pd.DataFrame(kiva_loans_df['country'].value_counts()).reset_index()\ncon_df.columns = ['country', 'num_loans']\ncon_df = con_df.reset_index().drop('index', axis=1)\n\n#Find out more at https:\/\/plot.ly\/python\/choropleth-maps\/\ndata = [ dict(\n        type = 'choropleth',\n        locations = con_df['country'],\n        locationmode = 'country names',\n        z = con_df['num_loans'],\n        text = con_df['country'],\n        #colorscale = [[0,'rgb(255, 255, 255)'],[1,'rgb(56, 142, 60)']],\n        #colorscale = [[0,'rgb(255, 255, 255)'],[1,'rgb(220, 83, 67)']],\n        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.85,\"rgb(40, 60, 190)\"],[0.9,\"rgb(70, 100, 245)\"],\\\n            [0.94,\"rgb(90, 120, 245)\"],[0.97,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '',\n            title = 'Number of Loans'),\n      ) ]\n\nlayout = dict(\n    title = 'Number of loans by Country',\n    geo = dict(\n        showframe = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='loans-world-map')","9b536f40":"cnt_srs = kiva_loans_df['sector'].value_counts().head(25)\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Rainbow',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Sector wise distribution of loans',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"SectorLoan\")","ae3d182e":"cnt_srs = kiva_loans_df['activity'].value_counts().head(25)\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Picnic',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Activity wise distribution of loans',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"ActivityLoan\")","be11106a":"plt.figure(figsize=(8,6))\nplt.scatter(range(kiva_loans_df.shape[0]), np.sort(kiva_loans_df.loan_amount.values))\nplt.xlabel('index', fontsize=12)\nplt.ylabel('loan_amount', fontsize=12)\nplt.title(\"Loan Amount Distribution\")\nplt.show()","2f3fef98":"plt.figure(figsize=(8,6))\nplt.scatter(range(kiva_loans_df.shape[0]), np.sort(kiva_loans_df.funded_amount.values))\nplt.xlabel('index', fontsize=12)\nplt.ylabel('loan_amount', fontsize=12)\nplt.title(\"Funded Amount Distribution\")\nplt.show()","d72167ff":"ulimit = np.percentile(kiva_loans_df.loan_amount.values, 99)\nllimit = np.percentile(kiva_loans_df.loan_amount.values, 1)\nkiva_loans_df['loan_amount_trunc'] = kiva_loans_df['loan_amount'].copy()\nkiva_loans_df['loan_amount_trunc'].loc[kiva_loans_df['loan_amount']>ulimit] = ulimit\nkiva_loans_df['loan_amount_trunc'].loc[kiva_loans_df['loan_amount']<llimit] = llimit\n\nplt.figure(figsize=(12,8))\nsns.distplot(kiva_loans_df.loan_amount_trunc.values, bins=50, kde=False)\nplt.xlabel('loan_amount_trunc', fontsize=12)\nplt.title(\"Loan Amount Histogram after outlier truncation\")\nplt.show()","90fae386":"cnt_srs = kiva_loans_df.term_in_months.value_counts()\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Picnic',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Repayment Term in Months'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"RepaymentIntervals\")","c6b15b56":"cnt_srs = kiva_loans_df.repayment_interval.value_counts()\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Rainbow',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Repayment Interval of loans'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"RepaymentIntervals\")","974412be":"cnt_srs = kiva_loans_df.lender_count.value_counts()\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Portland',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Lender Count'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"LenderCount\")","7a3e79da":"cnt_srs = kiva_loans_df.lender_count.value_counts().head(100)\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Portland',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Lender Count Top 100'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"LenderCount\")","44a23b3d":"olist = []\nfor ll in kiva_loans_df[\"borrower_genders\"].values:\n    if str(ll) != \"nan\":\n        olist.extend( [l.strip() for l in ll.split(\",\")] )\ntemp_series = pd.Series(olist).value_counts()\n\nlabels = (np.array(temp_series.index))\nsizes = (np.array((temp_series \/ temp_series.sum())*100))\n\ntrace = go.Pie(labels=labels, values=sizes)\nlayout = go.Layout(\n    title='Borrower Gender'\n)\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"BorrowerGender\")","ddcd609f":"trace = []\nfor name, group in kiva_loans_df.groupby(\"country\"):\n    trace.append ( \n        go.Box(\n            x=group[\"loan_amount_trunc\"].values,\n            name=name\n        )\n    )\nlayout = go.Layout(\n    title='Loan Amount Distribution by country',\n    width = 800,\n    height = 2000\n)\n#data = [trace0, trace1]\nfig = go.Figure(data=trace, layout=layout)\npy.iplot(fig, filename=\"LoanAmountCountry\")","b08faa42":"trace = []\nfor name, group in kiva_loans_df.groupby(\"sector\"):\n    trace.append ( \n        go.Box(\n            x=group[\"loan_amount_trunc\"].values,\n            name=name\n        )\n    )\nlayout = go.Layout(\n    title='Loan Amount Distribution by Sector',\n    width = 800,\n    height = 800\n)\n#data = [trace0, trace1]\nfig = go.Figure(data=trace, layout=layout)\npy.iplot(fig, filename=\"LoanAmountSector\")","667955c8":"scl = [ [0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n    [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"] ]\n\ndata = [ dict(\n        type = 'scattergeo',\n        lon = kiva_mpi_locations_df['lon'],\n        lat = kiva_mpi_locations_df['lat'],\n        text = kiva_mpi_locations_df['LocationName'],\n        mode = 'markers',\n        marker = dict(\n            size = 8,\n            opacity = 0.8,\n            reversescale = True,\n            autocolorscale = False,\n            symbol = 'circle',\n            line = dict(\n                width=1,\n                color='rgba(102, 102, 102)'\n            ),\n            colorscale = scl,\n            cmin = 0,\n            color = kiva_mpi_locations_df['MPI'],\n            cmax = kiva_mpi_locations_df['MPI'].max(),\n            colorbar=dict(\n                title=\"Multi-dimenstional Poverty Index\"\n            )\n        ))]\n\nlayout = dict(\n        title = 'Multi-dimensional Poverty Index at different regions',\n        colorbar = True,\n        geo = dict(\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            #countrywidth = 0.5,\n            #subunitwidth = 0.5\n        ),\n    )\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='d3-airports' )","ec9f7fd2":"country_profile_df = pd.read_csv(\"..\/input\/undata-country-profiles\/kiva_country_profile_variables.csv\")\n                                 \n#Find out more at https:\/\/plot.ly\/python\/choropleth-maps\/\ndata = [ dict(\n        type = 'choropleth',\n        locations = country_profile_df['country'],\n        locationmode = 'country names',\n        z = country_profile_df['GDP per capita (current US$)'],\n        text = country_profile_df['country'],\n        #colorscale = [[0,'rgb(255, 255, 255)'],[1,'rgb(56, 142, 60)']],\n        #colorscale = [[0,'rgb(255, 255, 255)'],[1,'rgb(220, 83, 67)']],\n        #colorscale = [[0,\"rgb(5, 10, 172)\"],[0.85,\"rgb(40, 60, 190)\"],[0.9,\"rgb(70, 100, 245)\"],\\\n        #    [0.94,\"rgb(90, 120, 245)\"],[0.97,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n        colorscale = [[0.0, 'rgb(242,240,247)'],[0.03, 'rgb(218,218,235)'],[0.06, 'rgb(188,189,220)'],\\\n            [0.1, 'rgb(158,154,200)'],[0.15, 'rgb(117,107,177)'],[1.0, 'rgb(84,39,143)']],\n        autocolorscale = False,\n        reversescale = False,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '',\n            title = 'GDP per capita'),\n      ) ]\n\nlayout = dict(\n    title = 'GDP per capita by Country',\n    geo = dict(\n        showframe = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='gdp-world-map')","b65a6848":"**Sectorwise distribution of loans:**","ec29f0a4":"Let us list down the files present in this data and also take a look at the top few rows of each files.","9e066b44":"**loan_theme_ids.csv**\n\nThis file contains records from the Kiva Data Snapshot and can be matched to the loan theme regions to get a loan\u2019s location.","c2cf69d3":"Interestingly there are few loans with 0 lenders. We might have to look into them.\n\n**Borrower Gender:**\n\nNow let us look at the gender distribution of the borrowers.","8ea5746a":"** GDP per capita of the countries:**\n\nNow let us look at the GDP per capita of these countries. GDP per capita gives an estimate of the welfare of the people. ","5b5d8d2a":"More to come. Stay tuned.!","3b554961":"**kiva_loans.csv**\n\nThis is a subset of Kiva's data snapshots. This file has some of the loans given by Kiva. ","d7306361":"**Sectorwise Loan Amount distribution:**","6b4d1615":"**loan_themes_by_region.csv**\n\nThis file contains regional data related to loan themes and partner ids. They are Kiva\u2019s estimates as to the various geolocations in which a loan theme has been offered, as well as the resulting estimate of which MPI Region(s) the loan theme is in.","ac6a5b1d":"**Graph 6 **\nMonthly loans are higher followed by irregular loans. \n\n**Lender Count:**\n\nWe also have a veriable lender_count - Number of lenders contributing to loan. Looks like more than one person lends the loan. So we can take a look at this variable.","20da4183":"Looks like there are few loans with more than 500 lenders and is highly skewed. So we can look only at the initial left side of the graph.","6e11cccd":"**Multi-dimensional Poverty Index:**\n\nWe are given the MPI values of different regions. Let us plot the same (Please zoom-in to have a closer look)","9d081ec0":"**Grahp 1 : Philippines has more number of loans given by Kiva followed by Kenya and  El salvador. Now let us plot the same in world map.**","f9162317":"**Loan Amount & Funded Amunt:**\n\nNow let us look at the loan amount column to know about the distribution. First let us see if there are any outliers in the column by doing a scatter pliot.","d1204475":"Now let us see the countrywise distribution of loans in the given snapshot data.","b7af90fa":"**kiva_mpi_region_locations.csv**\n\nThis file contains Kiva\u2019s estimates as to the geolocation of subnational MPI regions","dd25ef41":"**grahp 4 \nLoan amount is rightly skewed with majority of the loans falling under sub 1000 USD category.\n\n**Repayment Term:****\n","652e1e1b":"We can now look at the snapshot of the loans data to understand more about the problem.","59ea8978":"**Graph 5**\nLooks like \"14 month term\" loans are most availed followed by \"8 month term\". I expected that half yearly and yearly loans will be more but was wrong. \n\nNow let us look at the repayment_interval (which is Frequency at which lenders are scheduled to receive installments)","3a26d517":"**Graph2 : Sector wise, Agriculture has the highest number of loans followed by food and retail.  Now let us look at the loan details at activity level.**","a8c7c005":"Nearly 80% of the borrowers are female. \n\n**Countrywise Loan Amount Distribution:**\n\nNow let us look at the loan amount distribution at country level. ","a2cd87be":"**grahp 3 Looks like there is one loan worth 100K USD and it is funded too. Now let us truncate the extreme values and then do a histogram plot.**"}}