{"cell_type":{"939cba78":"code","a29d92e9":"code","c4fc4f5c":"code","988d3b82":"code","1480ce2b":"code","9f4cac6c":"code","a475e935":"code","e1280765":"code","b73d24d9":"code","d99c8bd9":"code","c8f87d61":"code","bf22d3ac":"code","2c105262":"code","d621a998":"code","4c022850":"code","7d7b9c77":"code","0db33e7d":"code","679123f2":"code","d7a2b204":"code","60615452":"code","c482e2f0":"code","41ef1b47":"code","cd70a574":"code","8284eeef":"code","911fd3bb":"code","f9f4e575":"markdown","6176144c":"markdown","ac3f80d4":"markdown","240db62b":"markdown","d2740eb3":"markdown","095ba5a3":"markdown","3add45d3":"markdown","68230072":"markdown","62679a09":"markdown","99cd0e86":"markdown","f028b9b8":"markdown","42d5ea77":"markdown","679edfd0":"markdown","3da8c3a9":"markdown","941884a2":"markdown","33c29ee3":"markdown","803754d4":"markdown","d8977845":"markdown","02e32109":"markdown","3f255ee0":"markdown","ac5ff090":"markdown","4ffa7686":"markdown","efa6cf35":"markdown","4826633e":"markdown","317d414d":"markdown","c800bbb8":"markdown"},"source":{"939cba78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a29d92e9":"#Load our libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#scikit-learn models\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n#model evaluation metrics\nfrom sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error\n#We want our plots appear inside our notebook\n%matplotlib inline","c4fc4f5c":"#Load our data\ndata=pd.read_csv(\"..\/input\/boston-house-prices\/housing.csv\")","988d3b82":"#view a summary of our loaded data\ndata.head()","1480ce2b":"#column names for house features\ncolumn_names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']\n#assigning columns names to our data\ndata=pd.read_csv(\"..\/input\/boston-house-prices\/housing.csv\",header=None,delimiter=r\"\\s+\", names=column_names)","9f4cac6c":"#getting the shape our data in rows and columns\ndata.shape","a475e935":"#loading the first 5 rows from our data to get it's summary\ndata.head()","e1280765":"#loading the last 5 rows from our data to get it's summary\ndata.tail()","b73d24d9":"#check the data types in our data\ndata.dtypes","d99c8bd9":"data.isna().sum()","c8f87d61":"#get the summary description of our data\ndata.describe()","bf22d3ac":"data.MEDV.hist()","2c105262":"sns.distplot(data['MEDV'], bins=30)\nplt.show()","d621a998":"#Let's drop outliers(housing prices over or equal to 50) from our data\ndata=data[~(data[\"MEDV\"]>=50)]\nsns.distplot(data['MEDV'], bins=30)\nplt.show()","4c022850":"plt.figure(figsize=(10, 5))\n\nplt.scatter(data.CRIM,data.MEDV)\nplt.xlabel(\"Per capita crime rate by town\")\nplt.ylabel(\"Housing Price\")\nplt.title(\"House price vs per capita crime rate by town\");","7d7b9c77":"plt.figure(figsize=(10,5))\n\nplt.scatter(data.RM,data.MEDV)\nplt.xlabel(\"average number of rooms per dwelling\")\nplt.ylabel(\"Housing Price\")\nplt.title(\"House prices vs Number of rooms\");","0db33e7d":"plt.figure(figsize=(10,5))\nplt.scatter(data.DIS,data.MEDV)\nplt.xlabel(\"weighted distances to five Boston employment centres\")\nplt.ylabel(\"House Prices\")\nplt.title(\"House prices vs five Boston employment centres\");","679123f2":"plt.figure(figsize=(10,5))\nplt.scatter(data.AGE,data.MEDV)\nplt.xlabel(\"proportion of owner-occupied units built prior to 1940\")\nplt.ylabel(\"House prices\")\nplt.title(\"House Price vs Age of the house\");","d7a2b204":"plt.figure(figsize=(10,5))\nplt.scatter(data.PTRATIO ,data.MEDV)\nplt.xlabel(\"pupil-teacher ratio by town\")\nplt.ylabel(\"House prices\")\nplt.title(\"House prices vs pupil-teacher ratio by town.\");","60615452":"corr_matrix=data.corr()\nfig,ax=plt.subplots(figsize=(10,6))\nax=sns.heatmap(corr_matrix,\n              annot=True,\n              linewidth=0.5,\n              fmt=\".2f\",\n              cmap=\"viridis\");\n","c482e2f0":"#Difine our feature varibles and target variable\nX=data.drop(\"MEDV\",axis=1)\ny=data[\"MEDV\"]","41ef1b47":"#splitting our data into training and test\nnp.random.seed(42)\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","cd70a574":"#instantiate our model\nlin_reg=LinearRegression()\n\n#fit training data into our model\nlin_reg.fit(X_train,y_train)\n\n#use our model to predict with test data\nl_preds=lin_reg.predict(X_test)\n\n#evaluate our model's performance using mean squared error\nmse=mean_squared_error(y_test,l_preds)\n\n#evaluate our model's performance using mean absolute error\nmae=mean_absolute_error(y_test,l_preds)\n\n#evaluate our model's performance using r2_score\nR2_score=r2_score(y_test,l_preds)\n\nprint(\"Linear Regresssion\")\nprint(\"Mean Squared Error :\",mse)\nprint(\"mean Absolute Error :\",mae)\nprint(\"R2 Score :\",R2_score)","8284eeef":"#instantiate our model\ndt_reg=DecisionTreeRegressor()\n\n#fit training data to our model\ndt_reg.fit(X_train,y_train)\n\n#using our model to predict on test data\ndt_preds=dt_reg.predict(X_test)\n\n#evaluating our third model's performance in housing price prediction\n\n#evaluate our model's performance using mean squared error\nmse=mean_squared_error(y_test,dt_preds)\n\n#evaluate our model's performance using mean absolute error\nmae=mean_absolute_error(y_test,dt_preds)\n\n#evaluate our model's performance using r2_score\nR2_score=r2_score(y_test,dt_preds)\n\nprint(\"Decision Tree Regression\")\nprint(\"Mean Squared Error :\",mse)\nprint(\"mean Absolute Error :\",mae)\nprint(\"R2 Score :\",R2_score)","911fd3bb":"#instantiate our model\nr_forest=RandomForestRegressor()\n\n#fitting our training data into our model\nr_forest.fit(X_train,y_train)\n\n#predict on  test data using our model\nr_preds=r_forest.predict(X_test)\n\n#evaluate our second model performance\n\n#evaluate our model's performance using mean squared error\nmse=mean_squared_error(y_test,r_preds)\n\n#evaluate our model's performance using mean absolute error\nmae=mean_absolute_error(y_test,r_preds)\n\n#evaluate our model's performance using r2_score\nR2_score=r2_score(y_test,r_preds)\n\nprint(\"Random Forest Regression\")\nprint(\"Mean Squared Error :\",mse)\nprint(\"mean Absolute Error :\",mae)\nprint(\"R2 Score :\",R2_score)","f9f4e575":"* On average the distribution of the house prices are between 10 and 50 dollars.\n* There those on the extreme (outliers) house prices at dollars over 50.","6176144c":"From the plot above shows the lesser the per capita crime rate by town the more the house prices fall betwween $12-40\"safe neighbour hood the expensive the house\".\nWhich implies the higher the crime rate by town the cheaper houses to find.","ac3f80d4":"#### 5.5  Housing pricing vs to Age of the house","240db62b":"## 7.Model scores \n\n### Conclusion\nRandom Forest Regression had a better score  at 0.88 than the others linear regression had 0.76 while Decision Tree Regression had 0.798 however this is just a baseline score as we have seen in the  data visualization this data has outliers which need to be dropped.A starting point was in our target varible (MEDV-price) which improved the score more will be done on the features to make even a better score.","d2740eb3":"From our dataset most house prices at between 20-30,have an average of 6-7 rooms with some few(outliers) exceptional ones at 50$.\n\nThe more the number of rooms above 7 in a house the higher the price ranging between above $30 -50.","095ba5a3":"## 4. Data Exploration\n* The objective here is to find out:\n* What questions are you trying to solve?\n* What kind of data do we have and how do we treat different types?\n* What's missing from the data and how do you deal with it?\n* Where are the outliers and why should you care about them?\n* How can you add,change or remove features to get more out of your data.","3add45d3":"#### 5.2 House Price vs CRIME Rate by town","68230072":"#### 6.2 Decision Tree Regression","62679a09":"Houses where the pupil-teacher ration by town is high the majority of the house prices range between $5-25.\n\nThese can be understood as the few pupils to teacher ration the higher the prices of houses in that town (A narrative of public vs private schools) on impact of nearby houses.","99cd0e86":"## 2. Data Background\n\n* This dataset contains information collected by the U.S Census Service concerning housing in the area of Boston Mass.\nThe data was obtained from the StatLib archive (http:\/\/lib.stat.cmu.edu\/datasets\/boston).\n\n* The data was originally published by Harrison, D. and Rubinfeld, D.L. `Hedonic prices and the demand for clean air', J.          Environ. Economics & Management, vol.5, 81-102, 1978.\n\n## 3. Data Features\nFrom the shared information this dataset containes 14 attributes(columns) namely:\n\n1. CRIM - per capita crime rate by town\n2. ZN - proportion of residential land zoned for lots over 25,000 sq.ft.\n3. INDUS - proportion of non-retail business acres per town.\n4. CHAS - Charles River dummy variable (1 if tract bounds river; 0 otherwise)\n5. NOX - nitric oxides concentration (parts per 10 million)\n6. RM - average number of rooms per dwelling\n7. AGE - proportion of owner-occupied units built prior to 1940\n8. DIS - weighted distances to five Boston employment centres\n9. RAD - index of accessibility to radial highways\n10. TAX - full-value property-tax rate per dollars 10,000\n11. PTRATIO - pupil-teacher ratio by town\n12. B - 1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town\n13. LSTAT - % lower status of the population\n14. MEDV - Median value of owner-occupied homes in dollars 1000's","f028b9b8":"The house prices around $5-30 fall between 1-6 weighted distances to the 5 Boston employment centers.\n\nThe nearer the house to the employment center the likely the price to be cheaper.","42d5ea77":"#### 5.3 Housing prices vs average number of rooms per dwelling","679edfd0":"The loaded data has no column names hence we shall need to assign it the appropriate column names based on information collected by the U.S Census Service concerning housing in the area of Boston Mass.","3da8c3a9":"## Objective\n\n* This notebook's objective is to use Python-based machine learning and datascience libraries in order to build machine learning models able to predict the housing prices given features of a house.\n\n* The machine learning models to be used include:\n  * Linear Regression\n  * Random Forest Regression\n  * Decision Tree Regression\n  \nLooking forward to your feedback in the comment section also kindly UPVOTE and motivate a beginner here!!!","941884a2":"## 1.Problem Definition\nGiven a set of a house features can we be able to predict it's price.","33c29ee3":"#### 5.6 House prices vs pupil-teacher ratio by town.","803754d4":"#### 5.7 Correlation Matrix","d8977845":"## 6. Model Builing\n\nOur data being in continous  (not categorical) in nature (house prices) we shall use regression models in predicting the house prices.\n\nFirst we  define our data into feature variables and target variable then later split them into training and testing data then train our models on the training data(seen) before evaluating them on the testing data(unseen).","02e32109":"Our data does not have missing values and it's composed of floating and integer data types.\nIn the event there are missing values one needs to replace mssing values (imputing) or remove them especially if comprise of a larger % in a column.","3f255ee0":"####  6.1 Linear Regression","ac5ff090":"#### 5.4 Housing Prices vs 5 Boston employment centres","4ffa7686":"#### 6.3 Random Forest Regression","efa6cf35":"The older the Age proportion of owner-occupied units built prior to 1940 the cheaper it is price ranging between $10-20.\n\nMost of the proportion of owner-occupied units built prior to 1940 range between 80-100.","4826633e":"There is a strong positive correlation between the house price and the average number of rooms per dwelling at 0.69 followed by the correlation between the house price and ZN(proportion of residential land zoned for lots over 25,000 sq.ft.) at 0.4 ,DIS(weighted distances to five Boston employment centres) at 0.37 and B( - 1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town) at 0.36 in correlation to house price.\n\nThe house feature with the strong negative correlation is LSTAT (% lower status of the population) at -0.76 .","317d414d":"#### target variable\nOur target variable that we want to predict is the house price with a column label  \"MEDV\" which is the Median value of owner-occupied homes in $1000's","c800bbb8":"## 5. Data Visualization\n\n#### 5.1(MEDV)House price distribution"}}