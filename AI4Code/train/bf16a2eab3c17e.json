{"cell_type":{"5a1adf83":"code","59bfe870":"code","2123dee2":"code","43499af2":"code","f85a0bb5":"code","ccfd9819":"code","ed712814":"code","b98d81a2":"code","9966e3e9":"code","3beee65e":"code","9c050227":"code","52f01e1a":"code","a40e1da9":"code","d9728586":"code","a0736e52":"code","0e9055c1":"code","29abcbee":"code","23e74dca":"code","4150b56d":"code","19348d9b":"code","05c04c7c":"code","47abffa9":"code","daf270ea":"code","25a08dc1":"code","4b315ab9":"code","840549c8":"code","39cf76f7":"code","63dbc1d8":"code","f58bb7cd":"code","33c0f053":"code","62dee670":"code","21ee3ed2":"markdown","b1880c7b":"markdown","8db9e3e0":"markdown","be66b9aa":"markdown","6180ae24":"markdown","5775d8c4":"markdown","34892b06":"markdown","fabe9461":"markdown","b88b5db5":"markdown","e6570ad2":"markdown","c218c161":"markdown","b64076e5":"markdown","4753bf68":"markdown"},"source":{"5a1adf83":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59bfe870":"data=pd.read_csv(\"..\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv\")","2123dee2":"data.head()","43499af2":"data.tail()","f85a0bb5":"data['slope'].unique()","ccfd9819":"data.shape","ed712814":"data.isnull().sum()","b98d81a2":"import seaborn as sns\nimport matplotlib.pyplot as plt","9966e3e9":"g=sns.FacetGrid(data,col='cp')\ng.map(sns.histplot,\"cp\")","3beee65e":"plt.figure(figsize=(10,10))\nsns.barplot(x='age',y='cp',data=data)\n","9c050227":"plt.figure(figsize=(10,5))\nsns.barplot(x='age',y='trestbps',data=data)","52f01e1a":"plt.figure(figsize=(10,5))\nsns.barplot(x='age',y='chol',data=data)","a40e1da9":"# Matrix for data reading","d9728586":"corr = data.corr()\nplt.figure(figsize=(20,10))\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n)","a0736e52":"data.head()","0e9055c1":"new_data=data.drop(columns=['fbs'])","29abcbee":"new_data","23e74dca":"X=new_data.drop(columns=['target'])\nY=new_data['target']","4150b56d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=0)","19348d9b":"from sklearn.svm import SVC\nclassifier=SVC()\nclassifier.fit(x_train,y_train)","05c04c7c":"Y_pred1=classifier.predict(x_test)","47abffa9":"from sklearn.metrics import f1_score\nf1_score(y_test, Y_pred1)","daf270ea":"from sklearn.naive_bayes import GaussianNB\nclassifier=GaussianNB()\nclassifier.fit(x_train,y_train)","25a08dc1":"y_pred2=classifier.predict(x_test)","4b315ab9":"f1_score(y_test,y_pred2)","840549c8":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(n_estimators=10,criterion='entropy',random_state=0)\nclassifier.fit(x_train,y_train)","39cf76f7":"y_pred3=classifier.predict(x_test)","63dbc1d8":"f1_score(y_test,y_pred3)","f58bb7cd":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred2)\n","33c0f053":"cm","62dee670":"ax= plt.subplot()\nsns.heatmap(cm, annot=True, ax = ax) #annot=True to annotate cells\n\n# labels, title and ticks\nax.set_xlabel('Predicted labels');ax.set_ylabel('True labels')\nax.set_title('Confusion Matrix')","21ee3ed2":"1. SVC ","b1880c7b":"Age with chol","8db9e3e0":"Random Forest","be66b9aa":"**Preprocessing**","6180ae24":"Age Groups with CP","5775d8c4":"Let's analyse a bit","34892b06":"In my conclusion, Naive Bayes suits much better and provide good score rather than other famous algorithms in this specific case.","fabe9461":"Let's Create confussion matrix for naive bayes","b88b5db5":"2. Naive Bayes","e6570ad2":"Age with trestbps","c218c161":"Analyse the Corelation matrix and find out that the corelation of target value and fbs is 0 , so we can drop fbs","b64076e5":"**split the data into train and test**","4753bf68":"Let's apply multiple models"}}