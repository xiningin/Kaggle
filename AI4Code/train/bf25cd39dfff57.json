{"cell_type":{"dbea2220":"code","f6c5534e":"code","0e7e02f5":"code","50d48770":"code","ff7db276":"code","ecfde5ee":"code","09d56e2a":"code","a3d6bffe":"code","13554637":"code","f47550db":"code","bb31a0f9":"code","a2066beb":"code","dfc4821f":"code","53a58a53":"code","0fd23275":"code","554f72fc":"code","be1a3016":"code","2cc1547d":"code","ff9af0fa":"code","6f89eeba":"code","3b4cdb47":"code","92b83854":"code","e9eeef08":"code","df194b4b":"code","ddb8add0":"code","cb861505":"code","ded9665b":"code","36550e28":"code","b6803490":"code","1d51f3a0":"code","6adf8cbc":"code","91f4b7fc":"code","bf4613d5":"code","57162683":"code","056eb3f2":"code","0d34025f":"code","1f010adf":"code","475ff7c2":"code","16dc3edc":"code","e5cb2955":"code","47ca5bb6":"code","7bcdb77c":"code","fafa20a0":"code","0052f7bc":"code","8fd5db87":"markdown","ec54e703":"markdown","94b4a919":"markdown","bd35a2c6":"markdown","17833db7":"markdown","17de3ce1":"markdown","63c4c6ed":"markdown","c37348c7":"markdown","b098f01d":"markdown","dd4603b4":"markdown","eccc6693":"markdown","8b3961c2":"markdown","575b0370":"markdown","2d57c3b0":"markdown","8cddd8be":"markdown","01375fb1":"markdown","48e7e35e":"markdown","295051a7":"markdown","d939f5b0":"markdown","29cf4cab":"markdown","c73545cc":"markdown","9820bcdf":"markdown","872eb446":"markdown","6dbac41b":"markdown","e41bf332":"markdown","de13bcc5":"markdown","60e7d194":"markdown","c0c965c4":"markdown","7c7e2522":"markdown","458171de":"markdown","f9492831":"markdown","bef3c803":"markdown","bf0262a0":"markdown","9f8f2185":"markdown","075ca2b8":"markdown","90395b27":"markdown","c8d2ffb4":"markdown","e2152756":"markdown","266f76f2":"markdown","0ef7c409":"markdown","8221c448":"markdown","32fd10aa":"markdown","868a932b":"markdown","53a58832":"markdown","6203d2f5":"markdown"},"source":{"dbea2220":"%%HTML\n<style type=\"text\/css\">\ntable.dataframe td, table.dataframe th {\n    border: 1px  black solid !important;\n  color: black !important;\n}\n<\/style>\n","f6c5534e":"import nltk\nnltk.download('stopwords')","0e7e02f5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.dates as mdates\nimport io\nfrom collections import Counter\nfrom wordcloud import WordCloud\nfrom nltk.corpus import stopwords\n\ndef print_full(x):\n    pd.set_option('display.max_rows', None)\n    pd.set_option('display.max_columns', None)\n    pd.set_option('display.width', 2000)\n    pd.set_option('display.float_format', '{:20,.2f}'.format)\n    pd.set_option('display.max_colwidth', None)\n    print(x)\n    pd.reset_option('display.max_rows')\n    pd.reset_option('display.max_columns')\n    pd.reset_option('display.width')\n    pd.reset_option('display.float_format')\n    pd.reset_option('display.max_colwidth')\n\nclass txtcol:\n   BOLD = '\\033[1m'\n   UNDERLINE = '\\033[4m'\n   END = '\\033[0m'\n\nplt.style.use('ggplot')\n\nfive_thirty_eight = [\n    \"#30a2da\",\n    \"#fc4f30\",\n    \"#e5ae38\",\n    \"#6d904f\",\n    \"#8b8b8b\",\n]\n\nsns.set_palette(five_thirty_eight)\nsns.palplot(sns.color_palette())","50d48770":"appdata = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')","ff7db276":"appdata.info()","ecfde5ee":"appdata.Size.unique()","09d56e2a":"appdata[appdata['Size'] == '1,000+']","a3d6bffe":"appdata.drop(10472, inplace = True)","13554637":"appdata['Size'] = appdata['Size'].apply(lambda x: x if x==0 else x.replace('M','0000'))\nappdata['Size'] = appdata['Size'].apply(lambda x: x if x==0 else x.replace('k','000'))\nappdata['Size'] = appdata['Size'].replace('Varies with device', 0)\nappdata['Size'] = appdata['Size'].apply(lambda x: x if x==0 or float(x) > 100.00 else str(x.replace('.','')[:-(len(str(x.split('.')[0])))]))\nappdata['Size'] = appdata['Size'].replace(0, np.NaN)\nappdata['Size'] = appdata['Size'].apply(pd.to_numeric)\nappdata.Size.unique()","f47550db":"appdata.Installs.unique()","bb31a0f9":"appdata['Installs'] = appdata['Installs'].apply(lambda x: x.split('+')[0])\nappdata['Installs'] = appdata['Installs'].apply(lambda x: x.replace(',', ''))\nappdata['Installs'].unique()","a2066beb":"appdata['Price'].unique()","dfc4821f":"appdata['Price']  = appdata['Price'].apply(lambda x: x if x.isnumeric() else x.split('$')[1])","53a58a53":"appdata['Installs'] = appdata['Installs'].apply(pd.to_numeric)\nappdata['Reviews'] = appdata['Reviews'].apply(pd.to_numeric)\nappdata['Price'] = appdata['Price'].apply(pd.to_numeric)\nappdata['Price'] = appdata['Price'].replace(0, np.NaN)\nappdata['Rating'] = appdata['Rating'].apply(pd.to_numeric)","0fd23275":"appdata = appdata.drop_duplicates(subset=['App'], keep = 'first')","554f72fc":"appdata.info()","be1a3016":"appdata.dropna(axis = 0, subset = ['Rating'], inplace = True)","2cc1547d":"appdata[\"Size\"] = appdata.groupby(\"Genres\")['Size'].transform(lambda x: x.fillna(x.mean()))\nappdata['Size'] = appdata['Size'].apply(np.floor)\nappdata.info()","ff9af0fa":"appdata['Last Updated'] = pd.to_datetime(appdata['Last Updated']) \nappdata","6f89eeba":"app_count = appdata['App'].count()\nprint(txtcol.BOLD + 'Number of Apps in the Store: {}' .format(app_count) + txtcol.END)","3b4cdb47":"sum_reviews = appdata['Reviews'].sum()\nprint(txtcol.BOLD + 'Total number of Reviews Given: {}' .format(sum_reviews) + txtcol.END)","92b83854":"sum_installs = appdata['Installs'].sum()\nprint(txtcol.BOLD + 'Total number of Installs: {}+' .format(sum_installs) + txtcol.END)","e9eeef08":"avg_reviews = appdata['Reviews'].sum()\/appdata['Installs'].sum()*100\nprint(txtcol.BOLD +'Average Percentage of Reviews Given: {:.2f}%' .format(avg_reviews) + txtcol.END ) ","df194b4b":"avg_size = appdata['Size'].apply(pd.to_numeric).mean()\nprint(txtcol.BOLD +'Average Size of Application: {:.2f} Bytes' .format(avg_size) + txtcol.END )","ddb8add0":"avg_price = appdata['Price'].apply(pd.to_numeric).mean()\nprint(txtcol.BOLD +'Average Price of Application: {:.2f} Dollars' .format(avg_price) + txtcol.END )","cb861505":"appdata2 = appdata.sort_values(['Reviews'], ascending=[False])[:50]\nappdata2.sort_values('Rating', ascending = False)\nappdata2 = appdata2.set_index('App')\nprint(txtcol.BOLD + 'Top 10 Highest Rated Apps:' + txtcol.END)\nprint(appdata2['Rating'].sort_values(ascending = False)[:10].to_markdown())","ded9665b":"appdata2 = appdata.sort_values('Installs', ascending=False)[:10]\nappdata2 = appdata2.set_index('App')\nprint(txtcol.BOLD + 'Top 10 Apps with Highest Number of Installs:' + txtcol.END)\nprint(appdata2['Installs'].sort_values(ascending = False)[:10].to_markdown())","36550e28":"sns.displot(appdata['Rating'], kde=True)","b6803490":"sns.displot(appdata['Size'], kde=True)","1d51f3a0":"fig, ax = plt.subplots(1, 2, figsize=(20, 10))\nax[0].scatter(appdata['Rating'], appdata['Size'])\nax[0].set_xlabel('Rating')\nax[0].set_ylabel('Size')\nax[1].scatter(appdata['Size'].apply(np.log), appdata['Installs'].apply(np.log))\nax[1].set_ylabel('Installs')\nax[1].set_xlabel('Size')","6adf8cbc":"fig, ax = plt.subplots(2, 1, figsize=(18, 18))\nsns.barplot(x = appdata['Size'], \n                 y = appdata['Category'], \n                 palette = 'Set2', ax = ax[0])\nax[0].set(title = 'Average Size according to Category')\nsns.barplot(y = appdata.groupby('Category')['Installs'].sum().index, \n                 x = appdata.groupby('Category')['Installs'].sum().values, \n                 palette = 'Set2', ax = ax[1])\nax[1].set(title = 'Installs according to Category', xlabel = 'Installs')","91f4b7fc":"fig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Installs'], \n                 y = appdata['Category'], \n                 palette = 'Set2')\nax.set(xlabel = 'Installs', title = 'Average Installs According to Category')","bf4613d5":"fig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Category'].value_counts().values, \n                 y = appdata['Category'].value_counts().index, \n                 palette = 'Set2')\nax.set(xlabel = 'Number of Apps', title = 'Number of Apps According to Category')","57162683":"\nfig = plt.subplots(figsize=(15, 15))\ncat = ['GAME','COMMUNICATION','FAMILY', 'TOOLS','MEDICAL', 'SOCIAL']\nfor index, item in enumerate(cat):\n  app_name = appdata.groupby('Category').get_group(item)['App']\n  word_counter = Counter()\n  for app in app_name:\n    word_counter.update(app.split(' '))\n  word_counter = dict(word_counter)\n  stop_words = ['&','-', 'for']\n  for i in stop_words:\n    del word_counter[i] \n  wc = WordCloud(stopwords = ['&','-', '_', '& '], relative_scaling=0).generate_from_frequencies(word_counter)\n  plt.subplot(3,2, index+1)\n  plt.imshow(wc)\n  plt.axis(\"off\")\n  plt.title(item)\nplt.show()","056eb3f2":"fig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(y = appdata.groupby('Category')['Reviews'].sum().index, \n                 x = appdata.groupby('Category')['Reviews'].sum().values,\n                 palette = 'Set2')\nax.set(xlabel = 'Number of Reviews', title = 'Number of Reviews Recieved According to Category')","0d34025f":"sns.scatterplot(y= appdata['Reviews'].apply(np.log), x = appdata['Installs'].apply(np.log))","1f010adf":"fig = plt.subplots(figsize=(10, 10))\nax = sns.boxplot(x = appdata['Rating'], \n                 y = appdata['Category'], \n                 palette = 'Set2')\nax.set(xlabel = 'Rating', title = 'Box Plot of Rating according to Category')","475ff7c2":"fig = plt.figure(figsize = (10,10))\nplt.pie(appdata['Type'].value_counts().values, autopct='%1.2f%%', shadow=True, \n        explode = (0, 0.1), startangle= -160)\nplt.legend(labels = appdata['Type'].value_counts().index)\nplt.show()","16dc3edc":"def price_cat(price):\n    try:\n        if  price <= 0.99:\n            return 'Cheap'\n        elif price >= 1 and price <=4.99:\n            return 'Affordable'\n        elif price >= 5 and price <=9.99:\n            return 'Expensive'\n        elif price >= 10:\n            return 'Very Expensive'\n    except ValueError as error:\n        return 'none'\nappdata['Price_Type'] = appdata['Price'].apply(price_cat)\nfig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Price_Type'].value_counts().index, \n                 y = appdata['Price_Type'].value_counts().values, \n                 palette = 'Set2')\nax.set(xlabel = 'Rating', title = 'App according to their Prices')","e5cb2955":"fig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Installs'], \n                 y = appdata['Price_Type'], \n                 palette = 'Set2')\nax.set(xlabel = 'Installs', title = 'Average Installs according to Price Type')","47ca5bb6":"appdata['Price_Type'] = appdata['Price_Type'].transform(lambda x: x.fillna('Free'))\nfig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Rating'], \n                 y = appdata['Price_Type'], \n                 palette = 'Set2')\nax.set(xlabel = 'Installs', title = 'Average Ratings according to Price Type')","7bcdb77c":"fig = plt.figure(figsize = (10,10))\nplt.pie(appdata['Content Rating'].value_counts().values, autopct='%1.2f%%', \n        shadow=True)\nplt.legend(labels = appdata['Content Rating'].value_counts().index)\nplt.show()","fafa20a0":"appdata['Price_Type'] = appdata['Price_Type'].transform(lambda x: x.fillna('Free'))\nfig = plt.subplots(figsize=(10, 10))\nax = sns.barplot(x = appdata['Rating'], \n                 y = appdata['Content Rating'], \n                 palette = 'Set2')\nax.set(xlabel = 'Rating', title = 'Average Ratings according to Content Rating')","0052f7bc":"l = ['FAMILY', 'GAME', 'TOOLS', 'FINANCE', 'COMMUNICATION', 'SOCIAL']\nfig, ax= plt.subplots(3, 2, figsize = (15,15))\nax = ax.ravel()\nfor index, item in enumerate(l):\n  ax[index].bar(appdata.groupby('Category').get_group(item)['Last Updated'].value_counts().index, \n        appdata.groupby('Category').get_group(item)['Last Updated'].value_counts().values, \n        color = five_thirty_eight)\n  plt.subplots_adjust(hspace = 0.3)\n  ax[index].xaxis.set_major_formatter(mdates.DateFormatter('%Y'))\n  ax[index].set(xlabel= 'Year', ylabel='Number of Apps', title = item)\nplt.show()","8fd5db87":"After looking at the basic stats we got a basic idea of the App Store, now let's dig into the most beautiful part of an analysis DATA VISUALIZATION","ec54e703":"Now we will find out some of the basic stats about the Google App Store","94b4a919":"If we focus on the Family category, we see that there are apps with Game as a Genre. So this was something strange from the graph. ","bd35a2c6":"Let's look into the average installs according to category to and I expect to not see Game category topping the list.","17833db7":"There's the twist! Not as great a twist like in a Nolan movie, but the Game category has most numbers of Installs despite having highest average size!. As we had discovered some basics stats of apps with highest installs, there was not a single app with Game category! Let's find out the reason.","17de3ce1":"This tells that playstore is majorly populated with Apps that everyone can use there are only a few apps that are strictly for 18+ Adults.","63c4c6ed":"Continuing with the Size variable, we have to convert those into Bytes.","c37348c7":"So there aren't much surprises in this graph, it follows a truly linear relationship which was expected. Moving forward.","b098f01d":"As we observed above the communication category had the highest average installs count. And depiste having highest average install counts the rating box is not widely spread as most of the apps in this category has ratings more than 3.2(excluding the outliers). Game  category ratings are even better with most apps rated above 3.5","dd4603b4":"Let's have a look at average rating according to Content Rating","eccc6693":"# Data Visualization","8b3961c2":"This graph looks interesting, we can observe that average size of an application in Game category is highest(which is expected). With tools with the lowest average size","575b0370":"Upon using the info(), we found out that there's only one variable with numeric data type. We need to convert some of the variables which needs to be numeric, the variables are Reviews(number of reviews), Size, Installs, Price. The reason of them being non-numeric is that some of them include non-numeric characters such as '+', '$'. Let's explore the variables one by one","2d57c3b0":"There's the culprit! Looking at this entry, it seems like that the variable values has been sifted to the left from 'Category' onwards. So we will choose to delete this entry.","8cddd8be":"Now let's dig into the Ratings part again. Below is the box plot of the ratings arranged according to the categories","01375fb1":"Another similar kind of category to Family is Medical, it is listed in the top 10 highest number of apps list but has the least installs. So there seems to be a lot apps of poor quality and there's an opportunity\/scope to build\/produce an app in that category","48e7e35e":"Now let's look at the average size of applications according to category","295051a7":"Now, Before going into the Ratings part let's give a look to the number of reviews given per category","d939f5b0":"Now this seems interesting, looking at the first plot. We can observe that as the size increases the number of rating decreases. App less than size of 400MB is crowded with ratings comparatively. So this explains that why developers must go with applications with lesser size","29cf4cab":"Now let's dig into the Pricing category.","c73545cc":"Here we have two observations, first that the sizes are given in Kilobytes and Megabytes. Keeping them in this format might cause us some trouble in the future, so we will convert them to a single unit i.e. bytes.\nSecond is the '1,000+' which needs to be investigated","9820bcdf":"# Some Standard Stats About the Dataset","872eb446":"With the missing values in Size, we will subsitute those with the mean of that particular genre.","6dbac41b":"Observing this distribution plot, Number of apps decreases with increase in size. Let's look into Rating vs Size and Installs vs Size","e41bf332":"Now let's look at the updating trend of Top 4 categories with most apps and Communication and Social category. ","de13bcc5":"So most of the apps in the market are in the adffordable section. Now let's see the average app installs according to app category","60e7d194":"# Missing Data","c0c965c4":"That's something interesting, Expensive category has the most number of average app installs.This says that investers\/developers can price their apps under 10 Dollars. Let's look at the average ratings.  ","7c7e2522":"Now this is something strange, suddenly Family category has come into the picture. Despite having most number of apps in the category, almost double of the second(Game) category it is nowhere near in terms of number of installs. Most probably Family category is populated with similar kinds of apps. Also something noticable about Communication is that despite being second in most number of installs the number of apps way less compared to other categories this says a lot about the quality of apps produced in this category","458171de":"Now we have sorted the Size variable let's dig into Installs","f9492831":"We can observe that Apps in family categories are recently updated there are also a few apps which haven't been updated since 2012. The trend of Games seems to have started from 2015. Apps in social category are also not updated very frequently.","bef3c803":"Rating distribution is left skewed. Majority of apps seems to have rating around 3.5 to 4.5 ","bf0262a0":"As discussed above, the values has some commas and '+' sign in it. We may remove those.","9f8f2185":"So, almost 93% of apps are free. Let's look at the price distribution of the apps","075ca2b8":"The 3 categories that caught my eyes were Dating, Lifestyle and Maps_and_Navigation. The ratings for those category are varied and people might have mixed experiences with those apps. Also there are some categories which don't have full Rating(5) those might be the categories investers might be interested in.","90395b27":"# Importing and Data Cleaning","c8d2ffb4":"Now that both Family, Medical has caught our eyes let's try building a word cloud of words used in name of apps in Game, Communication, Tools, Family, Social and Medical category.","e2152756":"Now let's have a look at Content Rating.","266f76f2":"After cleaning the variable, we must look into the missing data.\nRating and Size seems to have a large amount of data missing comparatively. Looking at the variables, the Rating is a very subjective variable and substituting a mean with missing data would not be ideal in this case, so we will rather drop those entries.","0ef7c409":"This plot also follows the similar trend as installs with Game and Communication topping the list followed by Social and Tools. Now this is the perfect opportunity to look into the Installs vs Reviews Scatter.","8221c448":"Also, we will remove duplicates, if available","32fd10aa":"Price variable looks a bit cleaner and we will just have to remove the dollar sign","868a932b":"And that's how you do a prediction! Haha. Jokes aside, The game category is way down, not even in top 3. With communication topping the list, this explains that people do use their phones for what they were intended to. This also concludes that people tend to download multiple apps or large amount of apps from Game category in their mobile phones compared to Communication and Social. Assuming this, I expect games to have the most number of apps. Let's figure it out.","53a58832":"Now let's divide the price into 4 categories \n\n\n* less than 0.99 = Cheap\n* 1 to 4.99 = Affordable\n* 5 to 9.99 = Expensive\n* more than 10 Very Expensive\n\n","6203d2f5":"That's impressive. So one thing is clear that Paid apps are slightly rated higher than Free. But the average ratings of Very Expensive Apps are lower than Free apps. So there's a point to takeaway that apps price more than 10 Dollars are usually not brought and rated higher."}}