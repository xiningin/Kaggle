{"cell_type":{"62dba408":"code","9e26f197":"code","f5237bca":"code","8553cb69":"code","c5176690":"code","cc68dfee":"code","4bca2e16":"code","86fe8760":"code","4553123c":"code","064752f6":"code","0496bbbb":"code","520abd24":"code","c07f7502":"code","53706466":"code","d14a914e":"markdown","ff74cfed":"markdown","90461c1a":"markdown","5858f4c3":"markdown","14ddf825":"markdown","e91c1113":"markdown","4f69b4cd":"markdown","eb161340":"markdown","745482c7":"markdown","4fc4abf1":"markdown","613523f0":"markdown","e1b7fb8a":"markdown","4a0bd370":"markdown","4a71eeda":"markdown"},"source":{"62dba408":"import seaborn as sea\nimport numpy as num\nimport pandas as pan \nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","9e26f197":"sales_train = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nitems = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nsample_submission = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\ntest = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nitem_catalog = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nshops = pan.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")                                    ","f5237bca":"sales_train.head()","8553cb69":"sales_train.tail()","c5176690":"sales_train = sales_train[sales_train['item_cnt_day']>0]\nsales_train = sales_train[sales_train['item_cnt_day']<1000]\nsales_train = sales_train[sales_train['item_price']>0]\nsales_train = sales_train[sales_train['item_price']<100000]","cc68dfee":"egitim_verisi = pan.merge(sales_train, items, how='left', on=['item_id'])\negitim_verisi = pan.merge(egitim_verisi, item_catalog, how='left', on=['item_category_id'])\negitim_verisi = pan.merge(egitim_verisi, shops, how='left', on=['shop_id'])\negitim_verisi['date'] = pan.to_datetime(egitim_verisi['date'], format='%d.%m.%Y')\negitim_verisi.head()","4bca2e16":"egitim_verisi=egitim_verisi.drop(\"item_name\",axis=1)\negitim_verisi=egitim_verisi.drop(\"item_category_name\",axis=1)\negitim_verisi=egitim_verisi.drop(\"shop_name\",axis=1)\n\negitim_verisi.head()","86fe8760":"birlestirilmis = pan.DataFrame(egitim_verisi.groupby(['shop_id', 'date_block_num','item_id'])['item_cnt_day'].sum().reset_index())\nayl\u0131k_toplam_satis = birlestirilmis.groupby('date_block_num')['item_cnt_day'].sum()\ntoplam_ay_sayisi = num.arange(34)\nayl\u0131k_toplam_satis = ayl\u0131k_toplam_satis.to_numpy()\nayl\u0131k_toplam_satis","4553123c":"x_egitimVerisi, x_testVerisi, y_egitimVerisi, y_testVerisi = train_test_split(toplam_ay_sayisi,ayl\u0131k_toplam_satis, test_size = 25\/100, random_state = 123, shuffle=1)\nprint(x_egitimVerisi.shape,x_testVerisi.shape,y_egitimVerisi.shape,y_testVerisi.shape)\nx_egitimVerisi = x_egitimVerisi.reshape(-1, 1);x_testVerisi = x_testVerisi.reshape(-1, 1)\ny_egitimVerisi = y_egitimVerisi.reshape(-1, 1);y_testVerisi = y_testVerisi.reshape(-1, 1)\nprint(x_egitimVerisi.shape,x_testVerisi.shape,y_egitimVerisi.shape,y_testVerisi.shape)","064752f6":"LR_Modeli = LinearRegression()\nLR_Modeli.fit(x_egitimVerisi, y_egitimVerisi)\nprint(\"Skor: \", LR_Modeli.score(x_egitimVerisi,y_egitimVerisi))\ntahmin=LR_Modeli.predict(x_testVerisi)\nhata_orani = mean_squared_error(y_testVerisi, tahmin)\nprint(\"Hata De\u011feri: \",hata_orani)\n\n\nprint(\"Bir Sonraki Ay Tahmin Edilen Toplam Sat\u0131\u015f: \" , LR_Modeli.predict([[34]]))\n","0496bbbb":"egitim_verisi=egitim_verisi.drop(\"date\",axis=1)\negitim_verisi = egitim_verisi[['date_block_num','shop_id','item_id','item_price','item_category_id','item_cnt_day']]\negitim_verisi","520abd24":"inputs = egitim_verisi.iloc[:, :5]  \noutputs = egitim_verisi.iloc[:, 5:6]  \nprint(inputs)\nprint(outputs)","c07f7502":"TF_Modeli = Sequential()\nTF_Modeli.add(Dense(32, input_dim=5, activation='relu'))   \nTF_Modeli.add(Dropout(0.3)) \nTF_Modeli.add(Dense(1, activation='sigmoid'))   \nTF_Modeli.compile(loss='mse', optimizer='adam', metrics=['accuracy'])   \nTF_Modeli.summary()","53706466":"TF_Modeli.fit(inputs, outputs, epochs=10)  \n_, basari = TF_Modeli.evaluate(inputs, outputs)\nprint('Ba\u015far\u0131 De\u011feri: %.4f' % (basari*100))","d14a914e":"*Okunan Birden Fazla Veri Dosyas\u0131n\u0131n Birbiri ile Alakal\u0131 Olanlar\u0131n\u0131 Kolayl\u0131k A\u00e7\u0131s\u0131ndan Bir Arada Toplama \u0130\u015flemi*","ff74cfed":"*Verileri Model E\u011fitimine Sokmak \u0130\u00e7in Haz\u0131rl\u0131k A\u015famas\u0131*","90461c1a":"*Veriler Bir Arada Topland\u0131ktan Sonra Gerekli Olmayan Baz\u0131 S\u00fctunlar\u0131n Kald\u0131r\u0131lmas\u0131*","5858f4c3":"*Kar\u015f\u0131la\u015ft\u0131rma Yapmak \u0130\u00e7in Farkl\u0131 Bir Model \u0130le E\u011fitimi Tekrarlama \u0130\u015flemi*","14ddf825":"*Sequential Modeli Olu\u015fturma*","e91c1113":"*TensorFlow.Keras.Sequential ile Model E\u011fitimi Ger\u00e7ekle\u015ftirmek \u0130\u00e7in Verilerin Haz\u0131rlanmas\u0131*","4f69b4cd":"*Bir Ay \u0130\u00e7erisinde Yap\u0131lan Toplam Sat\u0131\u015f\u0131 Hesaplama \u0130\u015flemi*","eb161340":"*Model E\u011fitimine Ba\u015flama ve Sonu\u00e7lar\u0131 Yazd\u0131rma*","745482c7":"*Veri Setinde Bulunan Ayk\u0131r\u0131 De\u011ferleri Ortadan Kald\u0131rarak Ba\u015far\u0131l\u0131 Bir Model Olu\u015fturma A\u015famas\u0131*","4fc4abf1":"*Lineer Regresyon ile Model Ba\u015far\u0131s\u0131 ve Tahmini Hesaplama \u0130\u015flemi*","613523f0":"*Gerekli K\u00fct\u00fcphanelerin Import Edilmesi*","e1b7fb8a":"*Verilerin .csv Format\u0131n Okunma \u0130\u015flemi*","4a0bd370":"#### AD: FURKAN\n#### SOYAD: AKAR\n#### \u00d6\u011eRENC\u0130 NO: 160201016\n#### EMA\u0130L: furkanakar03@gmail.com\n#### DERS: B\u00dcY\u00dcK VER\u0130 ANAL\u0130N\u0130ZE G\u0130R\u0130\u015e - SORU 2","4a71eeda":"*\u00d6nemli Veri Seti Olan \"sales_train\" Verisinin Ekrana Yazd\u0131r\u0131lmas\u0131*"}}