{"cell_type":{"aaa31b7f":"code","cc1d815c":"code","84269c02":"code","a21dee2a":"code","58b67d9e":"code","1c558ad5":"code","061fa4c6":"code","4f5978be":"code","a271302c":"code","eb89da78":"code","6266b052":"code","beee9274":"code","374a1af8":"code","ed9a7381":"code","efb35cf5":"code","8c29b381":"code","6d492a37":"code","b81be63f":"code","629968a6":"code","29579823":"code","6cfff80c":"code","17c77079":"code","758a2564":"code","bf6d4ece":"code","f29b2525":"code","d5e0cdfc":"code","f1575705":"code","2fc6957b":"code","63ca36a9":"code","8603c82d":"code","39abcecf":"code","4b7ecbf8":"code","785108a3":"code","cf44559a":"code","3e053aaa":"code","32d220aa":"code","0fd22085":"code","b6da1ed0":"code","c778e336":"markdown","fd5c22a4":"markdown","8f53772f":"markdown","3d1c9fb4":"markdown","6a85662a":"markdown"},"source":{"aaa31b7f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n\nimport os\nprint(os.listdir(\"..\/input\"))","cc1d815c":"df = pd.read_csv('..\/input\/S4248SM144NCEN.csv', index_col= 'DATE', parse_dates=True)\ndf.index.freq = 'MS'","84269c02":"df.info()","a21dee2a":"df.columns= ['Sales']","58b67d9e":"df.head()","1c558ad5":"df.plot(figsize=(16,8))","061fa4c6":"from statsmodels.tsa.seasonal import seasonal_decompose","4f5978be":"result= seasonal_decompose(df['Sales'])","a271302c":"result.plot();","eb89da78":"len(df)","6266b052":"train = df.iloc[:316]\ntest= df.iloc[316:]","beee9274":"test= test[0:12]","374a1af8":"test.info()","ed9a7381":"from sklearn.preprocessing import MinMaxScaler","efb35cf5":"scaler = MinMaxScaler()","8c29b381":"scaler.fit(train)","6d492a37":"scaled_train = scaler.transform(train)","b81be63f":"scaled_test = scaler.transform(test) ","629968a6":"from keras.preprocessing.sequence import TimeseriesGenerator","29579823":"len(scaled_train)","6cfff80c":"from keras.models import Sequential\nfrom keras.layers import Dense, LSTM","17c77079":"n_input = 12\nn_feature = 1\n\ntrain_generator = TimeseriesGenerator(scaled_train,scaled_train,length=n_input, batch_size=1)","758a2564":"model = Sequential()\n\nmodel.add(LSTM(128,activation = 'relu', input_shape= (n_input, n_feature), return_sequences=True))\nmodel.add(LSTM(128, activation='relu', return_sequences=True))\nmodel.add(LSTM(128, activation='relu', return_sequences=False))\nmodel.add(Dense(1))\nmodel.compile(optimizer='adam', loss='mse')","bf6d4ece":"model.summary()","f29b2525":"model.fit_generator(train_generator,epochs= 50)","d5e0cdfc":"my_loss= model.history.history['loss']\nplt.plot(range(len(my_loss)),my_loss)","f1575705":"first_eval_batch = scaled_train[-12:]","2fc6957b":"first_eval_batch","63ca36a9":"first_eval_batch = first_eval_batch.reshape((1,n_input,n_feature))","8603c82d":"model.predict(first_eval_batch)","39abcecf":"#holding my predictions\ntest_predictions = []\n\n\n# last n_input points from the training set\nfirst_eval_batch = scaled_train[-n_input:]\n# reshape this to the format RNN wants (same format as TimeseriesGeneration)\ncurrent_batch = first_eval_batch.reshape((1,n_input,n_feature))\n\n#how far into the future will I forecast?\n\nfor i in range(len(test)):\n    \n    # One timestep ahead of historical 12 points\n    current_pred = model.predict(current_batch)[0]\n    \n    #store that prediction\n    test_predictions.append(current_pred)\n    \n    # UPDATE current batch o include prediction\n    current_batch = np.append(current_batch[:,1:,:],[[current_pred]], axis= 1)","4b7ecbf8":"test_predictions","785108a3":"true_predictions = scaler.inverse_transform(test_predictions)","cf44559a":"true_predictions","3e053aaa":"test['Predictions'] =true_predictions","32d220aa":"test.head()","0fd22085":"test.plot(figsize=(12,8))","b6da1ed0":"model.save('mycoolmodel.h5')","c778e336":"# Forecast Using RNN Model","fd5c22a4":"Our model is not bad!\n\nThanks:) If you like it please vote. ","8f53772f":"# Time Series Forecasting with LSTM-generator\n\nOn this notebook, we will try to predict the alcohol sales for unknown future for 1 month using LSTM-generator. \nYou can find more informations about data in that site:\n* https:\/\/fred.stlouisfed.org\/series\/S4248SM144NCEN\n\n\nLet's import libraries","3d1c9fb4":"As we can see, we have 17 years sale data. And this data is acting like time series data.","6a85662a":"Now, we will start to create LSTM model for forecasting."}}