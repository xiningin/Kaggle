{"cell_type":{"892086db":"code","2827169d":"code","4d2dba61":"code","598aba9d":"code","814e5288":"code","94a30971":"code","8de0c4f2":"code","e2c045e6":"code","44141631":"code","e7bf81e6":"code","7a4cc6f3":"code","39231451":"code","c0465a79":"code","ae83e3da":"code","5e5bf4ec":"code","a5b7907f":"code","af2548ab":"markdown","45104ee0":"markdown","df9538e6":"markdown","3b910bbf":"markdown","73a2a90f":"markdown","dd0244aa":"markdown","56bf0b71":"markdown","bf6daa28":"markdown","76175f4e":"markdown"},"source":{"892086db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2827169d":"data = pd.read_csv(\"..\/input\/2017.csv\")","4d2dba61":"data.info()","598aba9d":"data.corr()","814e5288":"#correlation map\nf,ax = plt.subplots()\nsns.heatmap(data.corr(),annot = True, ax=ax ,fmt='.1f') # annot = show numbers on squares, fmt = how many number comes after comma\nplt.show()","94a30971":"data.head()\n","8de0c4f2":"data.tail()","e2c045e6":"data.columns","44141631":"#i want to rename columns for easy coding\ndata.rename(columns = {'Happiness.Rank' : 'Happinessrank',\n                       'Happiness.Score':'HappinessScore',\n                       'Whisker.high':'Whiskerhigh',\n                       'Whisker.low':'Whiskerlow',\n                       'Economy..GDP.per.Capita.':'EconomyGDP'},inplace=True)\ndata.columns","e7bf81e6":"data.EconomyGDP.plot(kind=\"line\",color=\"red\",label=\"Economy GDP\",grid=True,alpha=0.5,linestyle=\":\",figsize=(9,9))\nplt.legend()\ndata.Freedom.plot(kind=\"line\", color=\"blue\",label=\"Freedom Level\",grid=True,alpha=0.5,linestyle=\"-.\",figsize=(9,9))\nplt.legend()\nplt.xlabel(\"Happiness Rank\")\nplt.ylabel(\"Parameters\")\nplt.title(\"Relations Between Economy gdp-Happiness and Freedom Happiness\")\nplt.show()","7a4cc6f3":"#Scatter plot\ndata.plot(kind=\"scatter\",x=\"Happinessrank\",y=\"Family\",color=\"red\",alpha=0.5,figsize=(9,9))\nplt.xlabel(\"Happiness Rank\")\nplt.ylabel(\"Family\")\nplt.show()","39231451":"data.EconomyGDP.plot(kind=\"hist\",bins=60,figsize=(9,9))\nplt.title(\"Economy GDP Level Frequency of Countries\")\nplt.show()","c0465a79":"dictionary = dict([(country,economy) for country,economy in zip(data.Country,data.EconomyGDP)]) \n# this code makes the country-economyGDP\nprint(dictionary)\n","ae83e3da":"for i in dictionary.keys():\n    print(i,\"=>\",dictionary[i])\n","5e5bf4ec":"x= data['EconomyGDP'] > 0.5\ndata[x]\n","a5b7907f":"data[(data['Family']<1.0) & (data['Generosity']>0.3)]\n# or you can use\n# data(np.logical_and(data['Family']<1.0 ,data['Generosity']>0.3 ))","af2548ab":"**Filtering data with Pandas library:**","45104ee0":"**Plotting Some Graphics**\n\nNow, we will plot somethings with this data.\n","df9538e6":"* # HAPPINESS RANK OF COUNTRIES\n","3b910bbf":"**List of countries that have economy gdp bigger than 0.5**","73a2a90f":"We can get the relat\u0131on between \"economic gdp per capita - happiness\"  and  \"freedom - happiness\" ","dd0244aa":"***\u0130t will be updated....\nThanks for reading***","56bf0b71":"**\u0130t's the list of countries that have generosity > 0.3 and family contributing < 1.0**","bf6daa28":"**\u0130n this graphic \"family\" means the contributing level of counting the happiness score; happiness rank get better with \nincreasing of the contr\u0131but\u0131ng level of family as you can see.**\n","76175f4e":"The economy GDP's of 155 country using dictionary:"}}