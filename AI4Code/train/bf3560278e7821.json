{"cell_type":{"36df9e3d":"code","aefd2ba3":"code","7b632d0c":"code","70964e1c":"code","e45f35a3":"code","ce56b1e5":"code","b604e122":"code","228b8d50":"code","d7abac46":"code","009c16e5":"code","eb6c4cef":"code","39a54096":"code","ee22d691":"code","338eebe5":"markdown","a2a106c8":"markdown","71a245cc":"markdown","e15356ae":"markdown","7be15a30":"markdown","9259a689":"markdown","ece5eac7":"markdown","67575869":"markdown","a12634d8":"markdown","db3fcc31":"markdown","aa149184":"markdown","5d06cd08":"markdown","54702d1e":"markdown","7cb4513c":"markdown","6f7a55a9":"markdown","bdb91c34":"markdown","c876214b":"markdown","3b44081e":"markdown"},"source":{"36df9e3d":"from glob import glob\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nfrom matplotlib import colors\nimport json","aefd2ba3":"data_path = '\/kaggle\/input\/abstraction-and-reasoning-challenge\/'\ntrain_set_json_files = glob(f'{data_path}training\/*.json')\ntrain_set_json_files.sort()","7b632d0c":"def show_task(task_file_name, grid=True):\n    \"\"\"\n    Plots train and test pairs of a specified task,\n    using same color scheme as the ARC app\n    \"\"\"\n    def show_pairs(pairs, sublot):\n        for i, pair in enumerate(pairs):\n            for j, key in enumerate(('input', 'output')):\n                width, height = len(pair[key][0]), len(pair[key])\n                axs = plt.Subplot(fig, subplot[i*2 + j])\n                axs.imshow(pair[key], cmap=cmap, norm=norm,\n                           extent=(0, width, 0, height))\n                axs.set_title(f'{key}, {len(pair[key])}X{len(pair[key][0])}')\n                if grid:\n                    axs.set_xticks(range(0, width))\n                    axs.set_yticks(range(0, height))\n                    axs.set_xticklabels([])\n                    axs.set_yticklabels([])\n                    axs.tick_params(length=0)\n                    axs.grid(True)\n                    for axis in ['top','bottom','left','right']:\n                        axs.spines[axis].set_linewidth(0)\n                else:\n                    axs.axis('off')\n                fig.add_subplot(axs)\n\n    cmap = colors.ListedColormap(\n        ['#000000', '#0074D9','#FF4136','#2ECC40','#FFDC00',\n         '#AAAAAA', '#F012BE', '#FF851B', '#7FDBFF', '#870C25'])\n    norm = colors.Normalize(vmin=0, vmax=9)\n    \n    with open(task_file_name) as f:\n        task = json.load(f)\n    \n    train_pairs = task['train']\n    test_pairs = task['test']\n    n_rows = max(len(train_pairs), len(test_pairs))\n    \n    fig = plt.figure(figsize=(12, 3 * n_rows))\n    outer = gridspec.GridSpec(1, 2, wspace=0.3)\n    for i, pairs in enumerate((train_pairs, test_pairs)):\n        subplot = gridspec.GridSpecFromSubplotSpec(n_rows, 2,\n                      subplot_spec=outer[i], wspace=0.1, hspace=0.15)\n        show_pairs(pairs, subplot)\n    fig.show()","70964e1c":"print(f'File {train_set_json_files[0]}')\nshow_task(train_set_json_files[0])","e45f35a3":"print(f'File {train_set_json_files[1]}')\nshow_task(train_set_json_files[1])","ce56b1e5":"print(f'File {train_set_json_files[2]}')\nshow_task(train_set_json_files[2])","b604e122":"print(f'File {train_set_json_files[3]}')\nshow_task(train_set_json_files[3])","228b8d50":"print(f'File {train_set_json_files[4]}')\nshow_task(train_set_json_files[4])","d7abac46":"print(f'File {train_set_json_files[5]}')\nshow_task(train_set_json_files[5])","009c16e5":"print(f'File {train_set_json_files[6]}')\nshow_task(train_set_json_files[6])","eb6c4cef":"print(f'File {train_set_json_files[7]}')\nshow_task(train_set_json_files[7])","39a54096":"print(f'File {train_set_json_files[8]}')\nshow_task(train_set_json_files[8])","ee22d691":"print(f'File {train_set_json_files[9]}')\nshow_task(train_set_json_files[9])","338eebe5":"Switch blue to red and add 3X3 below preserving some symmetry? Sounds complicated, correct me in the comments.","a2a106c8":"### 1","71a245cc":"# Data Exploration\n\nIn this notebook we will take a close look at some tasks in training set to estimate our own abstraction and reasoning skills :)\n\n\n(and maybe THEN read the [paper](https:\/\/arxiv.org\/abs\/1911.01547))","e15356ae":"## Was this notebook interesting or useful by any means? Please upvote it!","7be15a30":"### 3","9259a689":"What the task is? It's tricky. Took me some time (without dimensions of images), what about you? \n\nColored pixels in input image are filled with input image itself, whereas black pixels are just upscaled.\n\nRecursion? We need to go deeper!","ece5eac7":"Repeat biggest figure in directions and with colors specified by small figures? \n\nIt's harder to put into words than grasp the concept itself.","67575869":"Now we are ready to test our own abstraction and reasoning skills.","a12634d8":"A bunch of imports below. Take a look if you are interested in what tools we are using.","db3fcc31":"Keep bottom-right colored corners fixed and move other pixels to the right? \n\nAnd maybe red rectangles should be moved a bit more? \n\nThere are really too few data points, challenging even for human beings.","aa149184":"### 2","5d06cd08":"## Explore the Train Set","54702d1e":"Define a function **show_task** that will take a *.json file name as its input and plot all train pairs of a specified task on the left side and test pairs on the right.\n\nTake a look if you are interested in implementation details.","7cb4513c":"Simple. Fully bordered zones are filled with yellow color.","6f7a55a9":"### 5 ","bdb91c34":"### P.S. 5 more examples without any reasoning.","c876214b":"### 4 ","3b44081e":"Get a list of *.json files in train set. "}}