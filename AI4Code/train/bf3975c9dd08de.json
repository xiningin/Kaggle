{"cell_type":{"c3250f8f":"code","3a2bb584":"code","e9b38abb":"code","f88fa2fd":"code","d5a1da72":"code","c0796f86":"code","f7fc9a88":"code","5807313d":"code","b2cb1fb4":"code","d9ff769e":"code","453222f2":"code","5c7959b3":"code","560bbf61":"code","684b0255":"code","b01796c8":"markdown","d7832d4f":"markdown","77834343":"markdown","44df2f9b":"markdown","f6332d9f":"markdown","9fbfe1bf":"markdown","c37fe310":"markdown","e001a02b":"markdown","578fa671":"markdown","2d1600c9":"markdown","341d027a":"markdown"},"source":{"c3250f8f":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3a2bb584":"train_df = pd.read_csv('..\/input\/astro-analytics-techsoc-iitm\/train_techsoc.csv')\ntest_df = pd.read_csv('..\/input\/astro-analytics-techsoc-iitm\/test_techsoc.csv')\nsub_df = pd.read_csv('..\/input\/astro-analytics-techsoc-iitm\/sample_submission_techsoc.csv')","e9b38abb":"train_df.head()","f88fa2fd":"test_df.head()","d5a1da72":"sub_df.head()","c0796f86":"fig, ax = plt.subplots(ncols=3,nrows=2)\nfig.set_size_inches(14.7, 8.27)\nsns.scatterplot(data=train_df,x='x_sim',y='x',ax=ax[0][0])\nsns.scatterplot(data=train_df,x='y_sim',y='y',ax=ax[0][1])\nsns.scatterplot(data=train_df,x='z_sim',y='z',ax=ax[0][2])\nsns.scatterplot(data=train_df,x='Vx_sim',y='Vx',ax=ax[1][0])\nsns.scatterplot(data=train_df,x='Vy_sim',y='Vy',ax=ax[1][1])\nsns.scatterplot(data=train_df,x='Vz_sim',y='Vz',ax=ax[1][2])","f7fc9a88":"sat_df = train_df[train_df['sat_id']==0]\nfig = plt.figure(figsize=(8, 6))\nax = plt.axes(projection='3d')\nxs = sat_df.x\nys = sat_df.y\nzs = sat_df.z\nax.plot3D(xs, ys, zs, 'gray')\nax.view_init(30,30)","5807313d":"X = train_df['x_sim']\ny = train_df['x']\nX2 = sm.add_constant(X)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nprint(est2.summary())","b2cb1fb4":"X = train_df['Vx_sim']\ny = train_df['Vx']\nX2 = sm.add_constant(X)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nprint(est2.summary())","d9ff769e":"params1 = ['x','y','z','Vx','Vy','Vz']\nparams2 = ['x_sim','y_sim','z_sim','Vx_sim','Vy_sim','Vz_sim']","453222f2":"reg = LinearRegression()\nfor i in range(6):\n    X = train_df.loc[:,params2[i]].values.reshape(-1,1)\n    y = train_df.loc[:,params1[i]].values.reshape(-1,1)\n    X_test = test_df.loc[:,params2[i]].values.reshape(-1,1)\n    reg.fit(X,y)\n    sub_df[params1[i]] = reg.predict(X_test)","5c7959b3":"sub_df.set_index('id',inplace=True)","560bbf61":"sub_df.head()","684b0255":"sub_df.to_csv('basic_submission.csv')","b01796c8":"## Linear Model","d7832d4f":"## Importing the libraries","77834343":"## Reading the datasets","44df2f9b":"## EDA","f6332d9f":"### Fitting the Linear Model","9fbfe1bf":"R-squared score suggests that there is a strong linear relationship between real and simulated satellite coordinates","c37fe310":"It is evident that the path is elliptical. This can be used in the model for better predictions (Not done in this notebook).","e001a02b":"### Visualizing the path traversed by a satellite","578fa671":"The linear relationship is not very strong. Still for the base model predictions it can be assumed to be linear","2d1600c9":"### Visualizing the correlation between real and simulated values","341d027a":"### Check whether a linear relationship exists"}}