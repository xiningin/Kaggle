{"cell_type":{"3e292eab":"code","f970c094":"code","923243af":"code","2797005a":"code","4423cf96":"code","c6eaa19a":"code","8ff02462":"code","686e3e2b":"code","ae07878e":"code","15f2e7ec":"code","c68d3cdc":"code","c8374e11":"code","87000917":"code","4fe195e2":"code","ad0a5ab0":"code","ceca5100":"code","6ee6aee3":"code","78e28cfd":"code","7f3e79a5":"code","04fd400f":"code","c7600d74":"code","33181976":"code","085373dd":"code","caa49374":"code","2bc14240":"code","52597106":"code","762e99fb":"code","2e7a7f04":"code","8fdee0d5":"code","b45b6005":"markdown","33adf4cc":"markdown","b1227d4b":"markdown","40643b92":"markdown","0470d4d3":"markdown","24863d91":"markdown"},"source":{"3e292eab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f970c094":"!pip install -U scikit-learn","923243af":"!pip install xlrd\n!pip install openpyxl","2797005a":"import pandas as pd\ndados = pd.read_excel(\"\/kaggle\/input\/covid19\/Kaggle_Sirio_Libanes_ICU_Prediction.xlsx\")\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\ndados.head()","4423cf96":"dados.describe()\n#os dados est\u00e3o anonimizados em rela\u00e7\u00e3o as doen\u00e7as. ","c6eaa19a":"dados['ICU'].head()","8ff02462":"dados['ICU'].value_counts()","686e3e2b":"#retorna apenas as colunas num\u00e9ricas ou categoricas. Retira as colunas que n\u00e3o s\u00e3o string\ndados.describe().columns","ae07878e":"x_columns = dados.describe().columns\ndados_limpos = dados.dropna()","15f2e7ec":"dados_limpos.columns.astype","c68d3cdc":"dados_limpos[x_columns].head()","c8374e11":"#sa\u00edda \u00e9 o ICU\ny = dados_limpos['ICU']\n#entrada \u00e9 tudo menos o ICU\nx = dados_limpos[x_columns].drop(['ICU'], axis=1)","87000917":"x.head()","4fe195e2":"from sklearn.linear_model import LogisticRegression\nmodelo = LogisticRegression()\nmodelo.fit(x,y)","ad0a5ab0":"#apresentando o paciente numero 4 da lista\nx.iloc[4]","ceca5100":"# executando o modelo incluindo o registro 4 como um novo paciente, vai para UTI.\nmodelo.predict([x.iloc[4]])","6ee6aee3":"#apresentando o que aconteceu com o paciente na realidade. Foi para UTI.\ny.iloc[4]","78e28cfd":"# testando para todos da lista. \n# Primeiramente compara novos pacientes no modelo \n# Depois compara com o resultado real\n# Apresenta a soma do n\u00famero de acertos. \nsum(modelo.predict(x) == y)","7f3e79a5":"# testando para todos da lista. \n# Primeiramente compara novos pacientes no modelo \n# Depois compara com o resultado real\n# Apresenta a soma do n\u00famero de erros. \nsum(modelo.predict(x) != y)","04fd400f":"# apresentando a taxa de acerto\nacurracy = sum(modelo.predict(x) == y)\/ len(y)\nacurracy","c7600d74":"y.value_counts()","33181976":"# este modelo serve de base, pois estima proporcionalmente. (modelo ingenuo)\nfrom sklearn.dummy import DummyClassifier\nmodelo = DummyClassifier()\nmodelo.fit(x,y)\nsum(modelo.predict(x)==y)\/len(y) ","085373dd":"#forma\u00e7ando uma semente (assim garante o mesmo resultado sempre que rodar) \nimport numpy as np\nnp.random.seed(272754280)","caa49374":"from sklearn.metrics import accuracy_score\naccuracy_score(y, modelo.predict(x))","2bc14240":"#refazer os dados para treino e teste\n#stratify \u00e9 para proporcionar os dados de maneira ficar uma distribui\u00e7\u00e3o justa.\n#\u00e9 necess\u00e1rio balancear os dados de teste e treino para que n\u00e3o de uma divergencia grande ao escolher \n#os dados aleatorieamente\n\nfrom sklearn.model_selection import train_test_split\n\n#escolhe aleat\u00f3rio\nx_train, x_test, y_train, y_test = train_test_split(x,y, stratify=y)","52597106":"#dados para treinar\nprint(len(x_train), len(y_train))\n#dados para testar\nprint(len(x_test), len(y_test))","762e99fb":"#realizando realmente a regress\u00e3o com treino e teste.\n#cria o modelo\nmodelo = LogisticRegression()\n#coloca os dados de entrada e sa\u00edda selecionados para treino\nmodelo.fit(x_train, y_train)\n#utiliza os dados de teste para fazer a predi\u00e7\u00e3o\ny_prediction = modelo.predict(x_test)\n#compara para ver a percentual de acerto.\naccuracy_score(y_test,y_prediction)","2e7a7f04":"# com o stratify os percentuais ficam mais pr\u00f3ximos de 50% para o treino\ny_train.value_counts(normalize=True)","8fdee0d5":"# com o stratify os percentuais ficam mais pr\u00f3ximos de 50% para o teste\ny_test.value_counts(normalize=True)","b45b6005":"## Desafio 1 : pequisar aprendizado supervisionado, n\u00e3o supervisionado, por refor\u00e7o e outros\n## Desafio 2 : pesquisar sobre regress\u00e3o e classifica\u00e7\u00e3o, etc.\n\nhttps:\/\/www.alura.com.br\/artigos\/conhecendo-os-tipos-de-aprendizado-de-maquina?gclid=CjwKCAjw_o-HBhAsEiwANqYhp5XVw62LiKsMv2KgPYccTDvoveSMoHMVBlIy2-un2nVIY0xCZ3C3rBoCQ8AQAvD_BwE","33adf4cc":"# M\u00f3dulo 04 aula 03\n- Como metrificar um modelos de classifica\u00e7\u00e3o, usando o Sci-kit Learn;\n- Como realizar o treinamento dividindo em dados de treino e teste.","b1227d4b":"# Modulo 04 Aula 02\n- O que \u00e9 a uma regress\u00e3o log\u00edstica;\n- Como treinar o seu primeiro modelo de Machine Learning.","40643b92":"## Desafio 05 - Decida quanto voc\u00ea vai escolher para treino e quanto para teste? Quanto as pessoas utilizam e qual o motivo?\n\n## Desafio 06 - Olhe a documenta\u00e7\u00e3o da LogisticRegression... o que tem de par\u00e2metro em comum com o train_test_split? O que isso significa pra n\u00f3s? .","0470d4d3":"# Modulo 04 Aula 01\n- Como usar os notebooks direto do Kaggle;\n- O que s\u00e3o algoritmos supervisionados;\n- O que s\u00e3o dados anonimizados e sua relev\u00e2ncia da perspectiva \u00e9tica.","24863d91":"## Desafio 3: Qual o motivo de jogar fora o ICU do dado X? O que acontece se estiver no x? Pq seria bom\/ruim? .\n## Desafio 4: Pesquisar sobre \u00e9tica em data science\/ci\u00eancia de dados e intelig\u00eancia artificial "}}