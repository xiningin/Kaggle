{"cell_type":{"055d9b42":"code","a306f276":"code","daea3e8f":"code","2ef2a8d1":"code","ba8eb0cf":"code","0de7813b":"code","c504fd8f":"code","7fc0fdf9":"code","45f61bfc":"code","f9a05fa3":"markdown"},"source":{"055d9b42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a306f276":"def josn_DF():\n    import json\n    with open(\"..\/input\/stanford-question-answering-dataset\/train-v1.1.json\") as input_file:    \n        json_data = json.load(input_file)\n        \n    context = pd.DataFrame(columns=['id', 'context'])\n    Question = pd.DataFrame(columns=['id', 'cID', 'Question'])\n    Answer = pd.DataFrame(columns=['id','qID','cID','Answer'])  \n    \n    context_no_tracker = 0\n    Question_no_tracker = 0\n    Answer_no_tracker = 0\n    json_layer1 = json_data['data']\n    for i in tqdm(json_layer1):\n        json_layer2 = i['paragraphs']\n        for context_no_tracker,j in enumerate(json_layer2,context_no_tracker):\n            context.loc[context_no_tracker] = [context_no_tracker,j['context']]\n            for Question_no_tracker,k in enumerate(j['qas'],Question_no_tracker):\n                Question.loc[Question_no_tracker] = [Question_no_tracker,context_no_tracker,k['question']]\n                for  Answer_no_tracker,l in enumerate(k['answers'],Answer_no_tracker):\n                    Answer.loc[Answer_no_tracker] = [Answer_no_tracker,Question_no_tracker,context_no_tracker,l['text']]\n            \n    return(context,Question,Answer)","daea3e8f":"context,Question,Answer = josn_DF()","2ef2a8d1":"context.head()","ba8eb0cf":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in context.context)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","0de7813b":"Question.head()","c504fd8f":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in Question.Question)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()\n","7fc0fdf9":"Answer.head()","45f61bfc":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in Answer.Answer)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","f9a05fa3":"#Codes from TejasVedagiri https:\/\/www.kaggle.com\/tejasvedagiri\/json-to-dataframe"}}