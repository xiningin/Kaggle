{"cell_type":{"9b006c13":"code","7f8ba29a":"code","e7fbae56":"code","813a3683":"code","178604a7":"code","6f96ff44":"code","77fb8481":"code","0ac4d522":"code","ad52d2f0":"code","197af87d":"code","73dc84c8":"code","bdb7c320":"code","2985646f":"code","60c95740":"code","6b2474d5":"code","d778fcfe":"code","4b490bef":"code","3225d1be":"code","2936d1e7":"code","99496a59":"markdown","ea12a1b1":"markdown","7cbf73f2":"markdown","eba6d34b":"markdown","05bfdc79":"markdown","3307b223":"markdown","b9b5551e":"markdown","facb8a2b":"markdown"},"source":{"9b006c13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7f8ba29a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n%matplotlib inline\nimport os","e7fbae56":"calls = pd.read_csv('..\/input\/911.csv')\ncalls","813a3683":"calls.isnull().sum()","178604a7":"# Our data has some missing values that may affect our analysis.","6f96ff44":"# adding column 'Reason'\ncalls['Reason'] = calls['title'].apply(lambda x: x.split(':')[0])\ncalls.head()","77fb8481":"#reason counts and its plots\ndf=calls['Reason'].value_counts()\nprint(df)\nsns.countplot(x='Reason',data=calls,palette='viridis')","0ac4d522":"calls['zip'].value_counts().head(10).plot.bar(color = 'black')\nplt.xlabel('Zip Codes',labelpad = 22)\nplt.ylabel('Number of Calls')\nplt.title('Zip Codes with Most 911 Calls')","ad52d2f0":"# zipcode 19401 has most number of complaints!!","197af87d":"#Visualization of number of calls relative to township\n\ncalls['twp'].value_counts().head(10).plot.bar(color = 'orange')\nplt.xlabel('Townships', labelpad = 20)\nplt.ylabel('Number of Calls')\nplt.title('Townships with Most 911 Calls')","73dc84c8":"# Let's split the column 'title', make a column 'emergency' and see how many calls were there for what emergency.","bdb7c320":"calls['Emergency'] = calls['title'].apply(lambda x: x.split(':')[1])\ncalls['Emergency'].value_counts().head(30)","2985646f":"#Hence most 911 calls were for 'Vehicle Accident'.","60c95740":"#Visualization of top 10 911 Calls\ncalls['Emergency'].value_counts().head(10).plot.bar(color = 'red')\nplt.xlabel('Emergency',labelpad = 22)\nplt.ylabel('Number of 911 Calls')\nplt.title('Top 10 Emergency Description Calls')","6b2474d5":"calls['timeStamp'] = pd.to_datetime(calls['timeStamp'])               # coverting from strings to datetime object\ncalls['Month'] = calls['timeStamp'].apply(lambda time: time.month)    # creating column\"Month'\nsns.countplot(x='Month',data=calls,hue='Reason',palette='nipy_spectral')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nbyMonth = calls.groupby('Month').count()\nbyMonth.head(12)","d778fcfe":"byMonth['twp'].plot()","4b490bef":"sns.lmplot(x='Month',y='twp',data=byMonth.reset_index())","3225d1be":"calls['hour'] = calls['timeStamp'].map(lambda x: x.hour)\n\ngroupByMonthDay = calls[(calls['hour'] >= 8) & (calls['hour'] <= 18)].groupby('Month',as_index = False).sum()\n\nyy = groupByMonthDay['e'].values\nlabels  = ['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov']\nxx = groupByMonthDay['Month'].values\nwidth = 1\/1.5\nplt.bar(xx, yy, width, color=\"black\",align='center')\nplt.title('911 Calls each month 8 am to 6 pm')\nplt.xticks(xx, labels)\nplt.show()","2936d1e7":"groupByMonthNight = calls[(calls['hour'] > 18) | (calls['hour'] < 8)].groupby('Month',as_index = False).sum()\n\ngroupByMonthNight.head()\n\ny = groupByMonthNight['e'].values\nlabels  = ['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov']\nx = groupByMonthNight['Month'].values\nwidth = 1\/1.5\nplt.bar(x, y, width, color=\"blACK\",align='center')\nplt.title('911 Calls each month 6 pm to 8 am')\nplt.xticks(x, labels)\nplt.show()","99496a59":"# Question 2:\n# There are 3 reasons listed for 911 calls in the column 'Title' :\n # 1.) EMS\n # 2.) Traffic\n # 3.) Fire\n# Lets make another column named 'Reason' with this info and see which  is the most common reason for 911 call. ","ea12a1b1":"# Question 5: What is the main emergency associated with the call?","7cbf73f2":"# Question 3: What are the top 10 zipcodes with most number of 911 calls?","eba6d34b":"# Question 1 : What are the columns containing the null Values?","05bfdc79":"# Question 4: What are the top 10 townships with most number of calls?","3307b223":"# Question 6: What are the count of calls per month  for different reasons? ","b9b5551e":"# Time Analysis: 911 calls between time periods.","facb8a2b":"# Question 7:  Visualising linear relationship for calls per month\n"}}