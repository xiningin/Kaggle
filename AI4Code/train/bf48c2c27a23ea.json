{"cell_type":{"9b67f886":"code","5cfbd54e":"code","93a59bf7":"code","2b4436e4":"code","6882867e":"code","98e5d9cd":"code","789c45d2":"code","4c30eada":"code","b3b5dc04":"code","0984339f":"code","60dddfb9":"code","a129d49d":"code","a42d55bb":"code","d11aff39":"code","22092980":"code","d13baf40":"code","4a3da6fb":"code","2c873087":"code","13e64240":"code","5eda48e5":"code","c9422215":"code","67176046":"code","eea6179d":"code","5d59fa61":"code","547c264f":"code","e840fcb9":"code","1110a9a2":"code","4faf9076":"code","f76b5380":"code","318c8c4b":"code","8955b201":"code","e41ab325":"code","abcceb8b":"code","fc961da8":"code","39eed2d4":"code","309327f1":"markdown","72027202":"markdown","f146a555":"markdown","1bcbb096":"markdown","6201cc20":"markdown"},"source":{"9b67f886":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5cfbd54e":"from mlxtend.frequent_patterns import apriori, association_rules","93a59bf7":"pip install openpyxl","2b4436e4":"pd.set_option('display.max_columns', None)\n","6882867e":"pd.set_option('display.max_rows', None)\n","98e5d9cd":"# \u00e7\u0131kt\u0131n\u0131n tek bir sat\u0131rda olmas\u0131n\u0131 sa\u011flar.\npd.set_option('display.expand_frame_repr', False)","789c45d2":"df_ = pd.read_excel(\"\/kaggle\/input\/online-retail-ii-uci\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")","4c30eada":"df = df_.copy()","b3b5dc04":"df.info()","0984339f":"df.head()","60dddfb9":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit","a129d49d":"def replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit","a42d55bb":"def retail_data_prep(dataframe):\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n    dataframe = dataframe[dataframe[\"Price\"] > 0]\n    replace_with_thresholds(dataframe, \"Quantity\")\n    replace_with_thresholds(dataframe, \"Price\")\n    return dataframe","d11aff39":"df = df.loc[(df[\"StockCode\"] != \"POST\")]","22092980":"df_germany = df[df['Country'] == \"Germany\"]","d13baf40":"df_germany.head()","4a3da6fb":"df_germany.shape","2c873087":"def create_invoice_product_df(dataframe, id=False):\n    if id:\n        return dataframe.groupby(['Invoice', \"StockCode\"])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)\n    else:\n        return dataframe.groupby(['Invoice', 'Description'])['Quantity'].sum().unstack().fillna(0). \\\n            applymap(lambda x: 1 if x > 0 else 0)","13e64240":"ger_inv_pro_df = create_invoice_product_df(df_germany, id=True)","5eda48e5":"ger_inv_pro_df.head()","c9422215":"frequent_itemsets = apriori(ger_inv_pro_df, min_support=0.01, use_colnames=True)","67176046":"rules = association_rules(frequent_itemsets, metric=\"support\", min_threshold=0.01)","eea6179d":"def check_id(dataframe, stock_code):\n    product_name = dataframe[dataframe[\"StockCode\"] == stock_code][[\"Description\"]].values[0].tolist()\n    print(product_name)","5d59fa61":"check_id(df_germany, 21987)\n# ['PACK OF 6 SKULL PAPER CUPS']","547c264f":"check_id(df_germany, 23235)\n# ['STORAGE TIN VINTAGE LEAF']","e840fcb9":"check_id(df_germany, 22747)\n# [\"POPPY'S PLAYHOUSE BATHROOM\"]","1110a9a2":"frequent_itemsets.sort_values(\"support\", ascending=False).head()","4faf9076":"rules.sort_values(\"support\", ascending=False).head()","f76b5380":"rules.sort_values(\"lift\", ascending=False).head()","318c8c4b":"#Nurlan\ndef arl_recommender(rules_df, product_id, rec_count=1):\n    sorted_rules = rules_df.sort_values(\"lift\", ascending=False)\n\n    recommendation_list = []\n\n    for i, product in sorted_rules[\"antecedents\"].items():\n\n        for j in list(product):\n            if j == product_id:\n                for element in list(sorted_rules.loc[i][\"consequents\"]):\n                    if element not in recommendation_list:\n                        recommendation_list.append(element)\n                        \n                      \n    return recommendation_list[:rec_count]","8955b201":"arl_recommender(rules, 21987, 3)","e41ab325":"arl_recommender(rules, 23235, 2)","abcceb8b":"arl_recommender(rules, 23235, 2)","fc961da8":"check_id(df, arl_recommender(rules, 21987, 1)[0])","39eed2d4":"check_id(df, arl_recommender(rules, 22747, 1)[0])","309327f1":"2) Germany M\u00fc\u015fterileri \u00dczerinden Birliktelik Kurallar\u0131 \u00dcretiniz","72027202":"- antecedent support = ilk \u00fcr\u00fcn\u00fcn tek ba\u015f\u0131na g\u00f6zlenme olas\u0131l\u0131\u011f\u0131\n\n- consequent support = son \u00fcr\u00fcn\u00fcn tek ba\u015f\u0131na g\u00f6zlenme olas\u0131l\u0131\u011f\u0131\n\n- Support (X,Y) = Freq (X,Y)\/N, range: [0,1]\n- N : B\u00fct\u00fcn g\u00f6zlem say\u0131s\u0131\n- X ve Y'nin birlikte g\u00f6r\u00fclme olas\u0131l\u0131\u011f\u0131. \u00d6rnek: Yumurta ve \u00e7ay, t\u00fcm al\u0131\u015fveri\u015flerin %40'\u0131nda birlikte g\u00f6zlenmektedir.\n\n- Confidence (X,Y) = Freq (X,Y) \/ Freq (X), range: [0,1]\n- X \u00fcr\u00fcn\u00fc sat\u0131n al\u0131nd\u0131\u011f\u0131nda, Y \u00fcr\u00fcn\u00fcn\u00fcn sat\u0131lmas\u0131 olas\u0131l\u0131\u011f\u0131\n- Confidence (Ekmek, S\u00fct) = Freq(Ekmek, S\u00fct) \/ Freq(S\u00fct)      => Ekmek sat\u0131n al\u0131nd\u0131\u011f\u0131nda, s\u00fct sat\u0131n al\u0131nmas\u0131 olas\u0131l\u0131\u011f\u0131.\n- \u00d6rnek: Yumurta alan m\u00fc\u015fterilerin %67'si \u00e7ay da almaktad\u0131r.\n\n- Lift = Support (X,Y) \/ (Support (X) * Support (Y)), range: [0,\u221e]\n- X \u00fcr\u00fcn\u00fc sat\u0131n al\u0131nd\u0131\u011f\u0131nda, Y \u00fcr\u00fcn\u00fcn\u00fcn sat\u0131n al\u0131nma olas\u0131l\u0131\u011f\u0131 lift kat kadar art\u0131yor.\n- E\u011fer hesaplanan de\u011fer 1'den b\u00fcy\u00fck \u00e7\u0131karsa, bunlar birbirlerine ba\u011f\u0131ml\u0131d\u0131r, birbirlerini etkiliyorlard\u0131r yorumu yap\u0131labilir.\n- \u00d6rnek: Yumurta olan al\u0131\u015fveri\u015flerde \u00e7ay \u00fcr\u00fcn\u00fcn\u00fcn sat\u0131\u015f\u0131 1,11 kat artmaktad\u0131r.\n\n- Leverage = levarage(X, Y)= support(X, Y) \u2212 (support(X) * support(Y)), range: [\u22121,1]\n- Birlikte g\u00f6r\u00fclen X ve Y'nin g\u00f6zlenme frekans\u0131 ile X ve Y ba\u011f\u0131ms\u0131z olsayd\u0131 beklenen frekans aras\u0131ndaki fark\u0131 hesaplar.\n- 0 leverage de\u011feri, ba\u011f\u0131ms\u0131zl\u0131\u011f\u0131 g\u00f6sterir.\n\n- Conviction = conviction(X,Y)= (1\u2212support(Y)) \/ (1\u2212confidence(X,Y)), range: [0,\u221e]\n- Y\u00fcksek bir conviction de\u011feri, sonucun b\u00fcy\u00fck \u00f6l\u00e7\u00fcde antecedents'a ba\u011fl\u0131 oldu\u011fu anlam\u0131na gelir.\n- \u00d6rne\u011fin, m\u00fckemmel bir confidence puan\u0131 durumunda, payda 0 olur (1 - 1 nedeniyle) ve bunun i\u00e7in conviction puan\u0131 'inf' olarak tan\u0131mlan\u0131r.\n- Lift'e benzer \u015fekilde, \u00f6\u011feler ba\u011f\u0131ms\u0131zsa, conviction 1'dir.","f146a555":"3) ID'leri Verilem \u00dcr\u00fcnlerin \u0130simleri Nelerdir?","1bcbb096":"4) Sepetteki Kullan\u0131c\u0131lar i\u00e7in \u00dcr\u00fcn \u00d6nerisi Yap\u0131n\u0131z","6201cc20":"* Kullan\u0131c\u0131 1 \u00fcr\u00fcn id'si: 21987\n* Kullan\u0131c\u0131 2 \u00fcr\u00fcn id'si: 23235\n* Kullan\u0131c\u0131 3 \u00fcr\u00fcn id'si: 22747"}}