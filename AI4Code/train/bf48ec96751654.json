{"cell_type":{"9c184d1d":"code","b5a9fdf3":"code","e6c702b3":"code","a41a1ecb":"code","292efad9":"code","0a182ae2":"code","24b732e4":"code","8784d00f":"code","a6a5115d":"code","27b37353":"code","a932ac8e":"code","fc92a280":"code","424ae84d":"code","0857e3c5":"code","e5d04b44":"code","8369a54f":"code","a4a5e2da":"code","5e5d30fa":"code","10500021":"code","b27eac0f":"code","c6fc40fe":"code","9fc4096d":"code","11450a5a":"code","78cc7d2b":"code","52a0bd16":"code","f7559a05":"code","ff83d01a":"code","9184120a":"code","c0eb92dd":"code","80ed5fc6":"code","197ae5cd":"code","c1e0fcb2":"markdown","93c1541f":"markdown","cc47fba3":"markdown","c5a87958":"markdown","4c3ffbdc":"markdown","808f269d":"markdown"},"source":{"9c184d1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5a9fdf3":"import pandas as pd\nimport numpy as np","e6c702b3":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","a41a1ecb":"len(test)","292efad9":"df=pd.DataFrame(train)\ndf1=pd.DataFrame(test)\ndf.head()","0a182ae2":"df1.head()","24b732e4":"df.drop(['PassengerId','Embarked', 'SibSp', 'Name', 'Parch', 'Ticket', 'Cabin'], axis='columns', inplace=True)\ndf1.drop(['PassengerId','Embarked', 'SibSp', 'Name', 'Parch', 'Ticket', 'Cabin'], axis='columns', inplace=True)","8784d00f":"y=df.Survived\nx= df.drop(['Survived'], axis='columns')\n#x1=df1.drop(['Survived'], axis='columns')","a6a5115d":"print(len(y))","27b37353":"train.Sex.value_counts().plot(kind = 'bar', color = ['blue', 'yellow']);\n","a932ac8e":"train.Survived.value_counts().plot(kind = 'bar', color = ['red', 'pink']);\n","fc92a280":"pd.crosstab(train.Survived, train.Sex)","424ae84d":"dummies= pd.get_dummies(x.Sex)\ndummies.head()","0857e3c5":"dummies1= pd.get_dummies(df1.Sex)\n","e5d04b44":"x= pd.concat([x,dummies], axis='columns')\nx.head()","8369a54f":"df1= pd.concat([df1,dummies1], axis='columns')\ndf1.head()","a4a5e2da":"x.drop(['Sex','male'],axis='columns',inplace=True)\nx.head(3)","5e5d30fa":"df1.drop(['Sex','male'],axis='columns',inplace=True)\ndf1.head()","10500021":"x.columns[x.isna().any()]","b27eac0f":"df1.columns[df1.isna().any()]","c6fc40fe":"x.Age.head(10)","9fc4096d":"x.Age=x.Age.fillna(x.Age.mean())\nx.Age.head(10)","11450a5a":"df1.Age=df1.Age.fillna(df1.Age.mean())\ndf1.Fare=df1.Fare.fillna(df1.Fare.mean())\ndf1.Age.head()\ndf1.head()","78cc7d2b":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test= train_test_split(x,y, test_size=0.4)","52a0bd16":"len(x_test)","f7559a05":"len(x_train)","ff83d01a":"len(y_test)","9184120a":"from sklearn.naive_bayes import GaussianNB\nmodel= GaussianNB(var_smoothing=1e-08)","c0eb92dd":"model.fit(x_train, y_train)","80ed5fc6":"model.score(x_test, y_test)","197ae5cd":"Y_pred= model.predict(x_test)","c1e0fcb2":"I am dropping male column also as only female column will be enough","93c1541f":"Now check outliers, that whether there is any NaN value in tha dataset","cc47fba3":"I am using gaussian naive bayes here","c5a87958":"There are some NaN values in column of age so we will replace them with mean","4c3ffbdc":"ML models can't handle text so we need to do one hot encoding for dummies. Dummies will convert male and female into seperate column with 1 and 0 value","808f269d":"now we will add these columns to our input i.e x"}}