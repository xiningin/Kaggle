{"cell_type":{"9e45a815":"code","d34a72da":"code","e478c383":"code","94329a8b":"code","4dbc84db":"code","fdccf2a8":"code","bb6e7e00":"code","32b2a20f":"code","9d729e93":"markdown","7f010fcf":"markdown"},"source":{"9e45a815":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d34a72da":"fn = '\/kaggle\/input\/cancer-cell-line-encyclopedia\/ccle.txt\/CCLE.txt'\n# '..\/input\/ccle.txt\/CCLE.txt'\ndf = pd.read_csv(fn, index_col=0)\ndf","e478c383":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport time","94329a8b":"\nimport time\n\nt0 = time.time()\n\nX = df.values.T\nprint(X.shape)\ncm = np.corrcoef(X.T) # C\n\nprint(time.time() - t0, ' seconds passed ')\n\nprint('Calculated correlation matrix of shape:' , cm.shape )\nv = cm.ravel()\nprint('std',np.std(v),'mean', np.mean(v),'min', np.min(v))","4dbc84db":"import matplotlib.pyplot as plt \nimport time\nt0 = time.time()\nplt.figure(figsize = (20,6))\nplt.hist(v, bins = 100)\nplt.title('Genes pairwise correlations. Count: '+str(len(v)))\nplt.show()\nprint(time.time()-t0,'seconds passed')\n\nif 0: # Cause out of memory\n    plt.plot(np.sort(v) )\n    plt.show()","fdccf2a8":"#clustermap\nt0 = time.time()\nsns.clustermap(cm[:3000,:3000],cmap='vlag');\nplt.title('3000 genes correlations clustered ')\nplt.show()\nprint(time.time()-t0,'seconds passed')","bb6e7e00":"#clustermap\nt0 = time.time()\nsns.clustermap(cm[:6000,:6000],cmap='vlag');\nplt.title('6000 genes correlations clustered ')\nplt.show()\nprint(time.time()-t0,'seconds passed')","32b2a20f":"#clustermap\nt0 = time.time()\nsns.clustermap(cm,cmap='vlag');\nplt.title('All genes correlations clustered ')\nplt.show()\nprint(time.time()-t0,'seconds passed')","9d729e93":"# What is about ?\n\nThe dataset contains genes expression matrix for 1037 cell lines. 18874 genes measured. Bulk gene expression data. This data was obtained from the Broad Institute Cancer Cell Line Encyclopedia https:\/\/portals.broadinstitute.org\/ccle\/data.\n\nHere we just want to clusterize genes correlation matrix.\nStandard algorithm used in seaborn seems to grow complexity as N^3 - \nfor 3000 genes it takes 37 seconds, for 6000 - it takes 211 seconds. \nSo expected hour(s) for full 18K genes.\n\nBasic analysis see other notebook: https:\/\/www.kaggle.com\/alexandervc\/ccle-loader-and-basic-eda\n\n","7f010fcf":"# Correlation matrix for genes"}}