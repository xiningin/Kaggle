{"cell_type":{"a28d37f6":"code","17412fc1":"code","1474cbaf":"code","244bfd8a":"code","62b21c78":"code","b3a713e0":"code","e0ba9c87":"code","a6aedb9c":"code","e9aae312":"code","bc5a9aaf":"code","580fc19c":"code","508f665b":"code","cf5c9117":"code","ea854fe3":"code","57f90521":"code","cc227cff":"code","b94eaffd":"code","a104c4ef":"code","2a3c467c":"code","3f0d9c37":"code","e90729ad":"code","a83d717c":"code","fb7ed2d4":"code","dab66aab":"code","4102c21e":"code","13357334":"code","cfc63cbd":"code","d3e412ed":"code","a3e8ac2c":"code","80d03d15":"code","ee55c371":"code","6d56db82":"code","0f4cf55c":"code","7e7e7984":"code","868d2b12":"code","65a3aea2":"code","79fa7fb7":"code","8bc3fed1":"code","78ea5899":"code","57c35bf4":"code","b0df1cfc":"code","a17d9184":"code","9660ba6f":"code","ff729d90":"code","95d005b8":"code","2ff2f708":"code","64492b75":"code","b04f1276":"code","71d2635e":"code","0ac0ba17":"code","140394db":"code","99fdc1e9":"code","7caeab34":"code","e54a69ee":"code","9f37894c":"code","71d6a91c":"code","a08c687e":"code","006836a7":"code","6bd8b4a4":"code","3a8f535d":"code","417fa792":"code","3894138a":"code","40a259a2":"code","1fcc7a78":"code","4f002e5e":"code","9e3e39ee":"code","a6f0d116":"code","989fb40d":"code","b805efbd":"code","434691a0":"code","7398bd49":"code","ed58bf3b":"code","2e04a69c":"code","45c39e73":"code","217f31b2":"code","d95a8726":"code","c5a53fbd":"code","074cd920":"code","c6ceacde":"code","9d4f5e52":"code","a0c55c18":"code","d58826ae":"code","69ad28f8":"code","8927b9f2":"code","0c400d18":"code","799247c4":"code","f095c2f6":"code","9d93248b":"code","d9a91192":"code","4255dc5d":"code","2932f970":"code","0bbbed0c":"code","80de0c28":"markdown","cf0c43d8":"markdown","80014ef2":"markdown","4d7f656f":"markdown","561a8f7f":"markdown","5d2d3774":"markdown","d7c7b103":"markdown","4d5d9450":"markdown","963e1cb7":"markdown","03ba6675":"markdown","169c4c0b":"markdown","bd0a41cf":"markdown","8536dd05":"markdown","c7ff732a":"markdown","ecf19844":"markdown","3542f3d2":"markdown","5dfc95ce":"markdown","bee9bad2":"markdown","6c342965":"markdown","79e756d3":"markdown","bf0a5b2e":"markdown","842948b3":"markdown","c043d12c":"markdown","77222675":"markdown","a8a5f7d3":"markdown","5b2e20cf":"markdown","004b0d5a":"markdown","6972ced6":"markdown","44ebd793":"markdown","12d3a9ea":"markdown","bca71a73":"markdown","88d63239":"markdown","d60f3d06":"markdown","afe06f43":"markdown","16c7a9c9":"markdown","8dfe4ffc":"markdown","7ecc4f70":"markdown","444a6186":"markdown","2ae54ba4":"markdown","5a2165c8":"markdown","aea811b0":"markdown","de1ea94d":"markdown","873ee5d0":"markdown","9fd0356b":"markdown","c73bf137":"markdown","1e3d7f5b":"markdown","3e5c5c0c":"markdown","aecf33b9":"markdown","6977c834":"markdown","2f4bc4d7":"markdown","0ea7a23f":"markdown","9a873b2b":"markdown","7f9702d3":"markdown","1d0252b4":"markdown","e2b589f2":"markdown","095c8ac6":"markdown","108eb1c6":"markdown","c8558f67":"markdown","a86e0f4f":"markdown","8b75e68b":"markdown","d146c679":"markdown","1c0931a7":"markdown","28360697":"markdown","6fe3e0cb":"markdown","ea07aec4":"markdown","64d2cb26":"markdown","5d87ed5d":"markdown"},"source":{"a28d37f6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","17412fc1":"df=pd.read_csv('..\/input\/loan-predication\/train_u6lujuX_CVtuZ9i (1).csv')","1474cbaf":"df.head()","244bfd8a":"df.shape","62b21c78":"df.nunique()","b3a713e0":"df.isnull().sum()","e0ba9c87":"df.dtypes","a6aedb9c":"df.skew()","e9aae312":"df['Loan_Status'].value_counts()","bc5a9aaf":"df.describe()","580fc19c":"#We separate categorical and continuous features\ncat=[i for i in df.columns if df[i].nunique()<11]\ncont=[i for i in df.columns if df[i].nunique()>=11 and i!='Loan_ID']","508f665b":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Loan_Status'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Loan_Status',data=df)\ndf['Loan_Status'].value_counts()","cf5c9117":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Gender'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Gender',data=df)\ndf['Gender'].value_counts()","ea854fe3":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Married'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Married',data=df)\ndf['Married'].value_counts()","57f90521":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Dependents'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Dependents',data=df)\ndf['Dependents'].value_counts()","cc227cff":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Education'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Education',data=df)\ndf['Education'].value_counts()","b94eaffd":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Self_Employed'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Self_Employed',data=df)\ndf['Self_Employed'].value_counts()","a104c4ef":"plt.figure(figsize=(15,8))\nsns.countplot(x='Loan_Amount_Term',data=df)\ndf['Loan_Amount_Term'].value_counts()","2a3c467c":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Credit_History'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Credit_History',data=df)\ndf['Credit_History'].value_counts()","3f0d9c37":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['Property_Area'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='Property_Area',data=df)\ndf['Property_Area'].value_counts()","e90729ad":"plt.figure(figsize=(8,6))\nsns.histplot(df['ApplicantIncome'],kde=True,color='k')\nprint('Minimum',df['ApplicantIncome'].min())\nprint('Maximum',df['ApplicantIncome'].max())","a83d717c":"plt.figure(figsize=(8,6))\nsns.histplot(df['CoapplicantIncome'],kde=True,color='r')\nprint('Minimum',df['CoapplicantIncome'].min())\nprint('Maximum',df['CoapplicantIncome'].max())","fb7ed2d4":"plt.figure(figsize=(8,6))\nsns.histplot(df['LoanAmount'],kde=True,color='k')\nprint('Minimum',df['LoanAmount'].min())\nprint('Maximum',df['LoanAmount'].max())","dab66aab":"for i in cont:\n    sns.boxplot(df[i])\n    plt.figure()","4102c21e":"plt.figure(figsize=(8,6))\nsns.stripplot(x='Loan_Status',y='Loan_Amount_Term',data=df)","13357334":"plt.figure(figsize=(8,6))\nsns.stripplot(x='Loan_Status',y='Credit_History',data=df)","cfc63cbd":"plt.figure(figsize=(10,8))\nax=sns.violinplot(x='Loan_Status',y='ApplicantIncome',data=df,color='.8')\nax=sns.stripplot(x='Loan_Status',y='ApplicantIncome',data=df,color=\".3\")","d3e412ed":"plt.figure(figsize=(10,8))\nax=sns.violinplot(x='Loan_Status',y='CoapplicantIncome',data=df,color=\".8\")\nax=sns.stripplot(x='Loan_Status',y='CoapplicantIncome',data=df,color=\".3\")","a3e8ac2c":"plt.figure(figsize=(10,8))\nax=sns.violinplot(x='Loan_Status',y='LoanAmount',data=df,color=\".8\")\nax=sns.stripplot(x='Loan_Status',y='LoanAmount',data=df,color=\".3\")","80d03d15":"#ApplicantIncome vs Categorical features\nfig,ax=plt.subplots(5,2,figsize=(20,40))\nr=0\nc=0\nfor i,n in enumerate(cat):\n    if i%2==0 and i>0:\n        r+=1\n        c=0\n    graph=sns.boxenplot(x=n,y='ApplicantIncome',data=df,ax=ax[r,c])\n    graph=sns.stripplot(x=n,y='ApplicantIncome',data=df,color=\".3\",ax=ax[r,c])\n    c+=1","ee55c371":"#CoapplicantIncome vs Categorical features\nfig,ax=plt.subplots(5,2,figsize=(20,40))\nr=0\nc=0\nfor i,n in enumerate(cat):\n    if i%2==0 and i>0:\n        r+=1\n        c=0\n    graph=sns.boxenplot(x=n,y='CoapplicantIncome',data=df,ax=ax[r,c])\n    graph=sns.stripplot(x=n,y='CoapplicantIncome',data=df,color=\".3\",ax=ax[r,c])\n    c+=1","6d56db82":"#LoanAmount vs Categorical features\nfig,ax=plt.subplots(5,2,figsize=(20,40))\nr=0\nc=0\nfor i,n in enumerate(cat):\n    if i%2==0 and i>0:\n        r+=1\n        c=0\n    graph=sns.boxenplot(x=n,y='LoanAmount',data=df,ax=ax[r,c])\n    graph=sns.stripplot(x=n,y='LoanAmount',data=df,color=\".3\",ax=ax[r,c])\n    c+=1","0f4cf55c":"sns.lmplot(x='CoapplicantIncome',y='LoanAmount',data=df,height=6, aspect=1.2)","7e7e7984":"sns.lmplot(x='ApplicantIncome',y='LoanAmount',data=df,height=6, aspect=1.2)","868d2b12":"sns.lmplot(x='ApplicantIncome',y='CoapplicantIncome',data=df,height=6, aspect=1.2)","65a3aea2":"plt.figure(figsize=(6,8))\nsns.stripplot(x='Self_Employed',y='LoanAmount',hue='Loan_Status',data=df,marker='D',size=10)","79fa7fb7":"plt.figure(figsize=(6,8))\nsns.stripplot(x='Property_Area',y='LoanAmount',hue='Loan_Status',data=df,marker='D',size=10)","8bc3fed1":"plt.figure(figsize=(6,8))\nsns.barplot(x='Loan_Status',y='LoanAmount',hue='Credit_History',data=df)","78ea5899":"plt.figure(figsize=(6,8))\nsns.barplot(x='Loan_Status',y='ApplicantIncome',hue='Dependents',data=df)","57c35bf4":"plt.figure(figsize=(6,8))\nsns.barplot(x='Loan_Status',y='ApplicantIncome',hue='Gender',data=df)","b0df1cfc":"sns.factorplot(x='Property_Area',y='Credit_History',hue='Loan_Status',data=df)","a17d9184":"plt.figure(figsize=(10,10))\nsns.scatterplot(x='ApplicantIncome',y='LoanAmount',data=df,hue='Loan_Status')","9660ba6f":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),annot=True,cmap='Greys')","ff729d90":"df.drop('Loan_ID',axis=1,inplace=True)","95d005b8":"#Imputing null values of categorical features with mode\ndf['Gender'].fillna(df['Gender'].mode()[0],inplace=True)\ndf['Married'].fillna(df['Married'].mode()[0],inplace=True)\ndf['Dependents'].fillna(df['Dependents'].mode()[0],inplace=True)\ndf['Self_Employed'].fillna(df['Self_Employed'].mode()[0],inplace=True)\ndf['Credit_History'].fillna(df['Credit_History'].mode()[0],inplace=True)\ndf['Loan_Amount_Term'].fillna(df['Loan_Amount_Term'].mode()[0],inplace=True)","2ff2f708":"#Imputing null value of continuos feature LoanAmount with median as high skewness is present in it.\ndf['LoanAmount'].fillna(df['LoanAmount'].median(),inplace=True)","64492b75":"plt.figure(figsize=(8,6))\nsns.heatmap(df.isnull())","b04f1276":"from sklearn.preprocessing import OrdinalEncoder,LabelEncoder\no=OrdinalEncoder()\nl=LabelEncoder()","71d2635e":"#We use ordinal encoder to Encode Independent features\nfor i in df.columns:\n    if df[i].dtypes=='O' and i!='Loan_Status':\n        df[i]=o.fit_transform(df[i].values.reshape(-1,1))","0ac0ba17":"#We use label encoder to encode label \ndf['Loan_Status']=l.fit_transform(df['Loan_Status'])","140394db":"#Function to choose the right threshold \ndef threhold(z,d):\n    for i in np.arange(3,5,0.2):\n        data=d.copy()\n        data=data[(z<i).all(axis=1)]\n        loss=(d.shape[0]-data.shape[0])\/d.shape[0]*100\n        print('With threshold {} data loss is {}%'.format(np.round(i,1),np.round(loss,2))) ","99fdc1e9":"#Using zscore method to remove outliers\nfrom scipy.stats import zscore\nz=np.abs(zscore(df))\nthrehold(z,df)","7caeab34":"#We use threshold as 3.6 because data is expensive and we already have less of data.\ndf=df[(z<3.6).all(axis=1)]","e54a69ee":"for i in cont:\n    print(i,df[i].skew())","9f37894c":"df['CoapplicantIncome']=np.cbrt(df['CoapplicantIncome'])\ndf['LoanAmount']=np.cbrt(df['LoanAmount'])\ndf['ApplicantIncome']=np.log(df['ApplicantIncome'])","71d6a91c":"for i in cont:\n    sns.distplot(df[i])\n    plt.figure()","a08c687e":"#Separating dependent and independent features.\nx=df.copy()\nx.drop('Loan_Status',axis=1,inplace=True)\ny=df['Loan_Status']","006836a7":"#Oversampling using Smote\nfrom imblearn.over_sampling import SMOTE\nover=SMOTE()","6bd8b4a4":"x,y=over.fit_resample(x,y)","3a8f535d":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ny.value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(y)\ny.value_counts()","417fa792":"#Scaling the data using min max scaler\nfrom sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()","3894138a":"xd=scaler.fit_transform(x)\nx=pd.DataFrame(xd,columns=x.columns)","40a259a2":"from sklearn.model_selection import train_test_split,cross_val_score","1fcc7a78":"#We import Classification Models\nfrom sklearn.naive_bayes import  GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier","4f002e5e":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report,roc_auc_score,roc_curve","9e3e39ee":"#Function to find the best random state\ndef randomstate(x,y):\n    maxx=0\n    model=LogisticRegression()\n    for i in range(1,201):\n        xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25,random_state=i)\n        model.fit(xtrain,ytrain)\n        p=model.predict(xtest)\n        accu=accuracy_score(p,ytest)\n        if accu>maxx:\n            maxx=accu\n            j=i\n    return j","a6f0d116":"#Splitting data into train and test\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25,random_state=randomstate(x,y))","989fb40d":"#To evakuate performances of all the models\ndef performance(p,ytest,m,xtest,s):\n    print('------------------------------------',m,'------------------------------------')\n    print('Accuracy',np.round(accuracy_score(p,ytest),4))\n    print('----------------------------------------------------------')\n    print('Mean of Cross Validation Score',np.round(s.mean(),4))\n    print('----------------------------------------------------------')\n    print('AUC_ROC Score',np.round(roc_auc_score(ytest,m.predict_proba(xtest)[:,1]),4))\n    print('----------------------------------------------------------')\n    print('Confusion Matrix')\n    print(confusion_matrix(p,ytest))\n    print('----------------------------------------------------------')\n    print('Classification Report')\n    print(classification_report(p,ytest))","b805efbd":"#Creating a list of models which will be created one by one\nmodels=[GaussianNB(),KNeighborsClassifier(),SVC(probability=True),LogisticRegression(),DecisionTreeClassifier(),\n        RandomForestClassifier(),AdaBoostClassifier(),GradientBoostingClassifier(),XGBClassifier(verbosity=0)]","434691a0":"#Creates and trains model from the models list\ndef createmodel(trainx,testx,trainy,testy):\n    for i in models:\n        model=i\n        model.fit(trainx,trainy)\n        p=model.predict(testx)\n        score=cross_val_score(model,x,y,cv=10)\n        performance(p,testy,model,testx,score) ","7398bd49":"createmodel(xtrain,xtest,ytrain,ytest)","ed58bf3b":"from sklearn.model_selection import GridSearchCV,RandomizedSearchCV","2e04a69c":"params={'n_estimators':[100, 200, 300, 400, 500],\n            'criterion':['gini','entropty'],\n            'max_depth':[None,1,2,3,4,5,6,7,8,9,10],\n           'max_features':['int','float','auto','log2']}","45c39e73":"g=GridSearchCV(RandomForestClassifier(),params,cv=10)","217f31b2":"g.fit(xtrain,ytrain)","d95a8726":"print(g.best_params_)\nprint(g.best_estimator_)\nprint(g.best_score_)","c5a53fbd":"m=RandomForestClassifier(max_features='log2', n_estimators=400)\nm.fit(xtrain,ytrain)\np=m.predict(xtest)\nscore=cross_val_score(m,x,y,cv=10)\nperformance(p,ytest,m,xtest,score)","074cd920":"params={'n_estimators':[100,200,300,400,500],\n      'learning_rate':[0.001,0.01,0.10,],\n      'subsample':[0.5,1],\n      'max_depth':[1,2,3,4,5,6,7,8,9,10]}","c6ceacde":"g=RandomizedSearchCV(GradientBoostingClassifier(),params,cv=10)","9d4f5e52":"g.fit(xtrain,ytrain)","a0c55c18":"print(g.best_params_)\nprint(g.best_estimator_)\nprint(g.best_score_)","d58826ae":"m=GradientBoostingClassifier(max_depth=6, subsample=0.5)\nm.fit(xtrain,ytrain)\np=m.predict(xtest)\nscore=cross_val_score(m,x,y,cv=10)\nperformance(p,ytest,m,xtest,score)","69ad28f8":"params={\n \"learning_rate\"    : [0.01,0.05, 0.10, 0.15, ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]\n    \n}","8927b9f2":"g=GridSearchCV(XGBClassifier(),params,cv=10)","0c400d18":"g.fit(xtrain,ytrain)","799247c4":"print(g.best_params_)\nprint(g.best_estimator_)\nprint(g.best_score_)","f095c2f6":"m=XGBClassifier(colsample_bytree=0.5, gamma=0.4, learning_rate= 0.01, max_depth=15, min_child_weight= 1)\nm.fit(xtrain,ytrain)\np=m.predict(xtest)\nscore=cross_val_score(m,x,y,cv=10)\nperformance(p,ytest,m,xtest,score)","9d93248b":"model=RandomForestClassifier(max_features='log2', n_estimators=400)\nmodel.fit(xtrain,ytrain)\np=model.predict(xtest)\nscore=cross_val_score(model,x,y,cv=10)","d9a91192":"performance(p,ytest,model,xtest,score)","4255dc5d":"fpred=pd.Series(model.predict_proba(xtest)[:,1])\nfpr,tpr,threshold=roc_curve(ytest,fpred)","2932f970":"plt.plot(fpr,tpr,color='k',label='ROC')\nplt.plot([0,1],[0,1],color='b',linestyle='--')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC-AUC curve')\nplt.legend()","0bbbed0c":"import joblib\njoblib.dump(model,'loan.obj')","80de0c28":"# Hyperparameter Tuning","cf0c43d8":"### Univariate Analysis","80014ef2":"As the Loan amount increases, there is also an increase in co-applicants income.","4d7f656f":"Loan are not granted on the basis of applicant income alone as loans are also rejected, where applicants income is very high.","561a8f7f":"##### Gradient Boost","5d2d3774":"##### Imputing null values","d7c7b103":"Approved loans of higher loan amount may be granted but with lower amount they are rejected even if the credit history is good.","4d5d9450":"If a person have bad credit history, there are chances his loan will be rejected, whereas there are some cases where loan have been granted even after bad credit history. Also good credit history does not guarantee you a approval of loan alone.","963e1cb7":"There are 10 columns with object type data while others are numerical.","03ba6675":"##### Scaling the dataset","169c4c0b":"Dataset has 614 rows and 13 columns","bd0a41cf":"### Bivariate Analysis","8536dd05":"Male applicants have higher income than females, also there are more, no, of males applicants compared to females. Unmarried applicants do not take loan more than 40000, also there are more no. of married applicants. As the no. of dependents increase applicant's income seem a decrease in amount while there are large no. of outliers present. Graduates have higher incomes than no graduates and there no. is also high. Mean income of self employed is higher than the non self employed applicants but there no. is very low. Applicants, even with high salary seem to take longer loan amount terms. Most of the applicants with good credit history have higher incomes with presence of outliers. People living in rural areas seem to have highest income as compared to other areas.","c7ff732a":"Most loan applicants have 0 dependents, people who have 3 or more than 3 dependes are very few.","ecf19844":"##### Encoding Object type columns","3542f3d2":"##### Random Forest","5dfc95ce":"Most of the applicants who apply for loan have a good credit history","bee9bad2":"Male co-applicants have higher income than females, also there are more, no, of males co-applicants compared to females but here highest income is of female co applicant. Unmarried co-applicants have there salary more than the married ones. Co-Applicants income do not depend on the no, of dependents of the applicant. Graduates have higher incomes than non graduates and there no. is also high. Mean income of non self employed is higher than the non self employed co-applicants. Co-Applicants, even with high salary seem to take longer loan amount terms. Most of the co-applicants with good credit history have higher incomes with presence of outliers. People living in rural areas seem to have highest mean income as compared to other areas, while co-applicants from urban area have the highest. Loans of Co-applicants are also rejected who have salary more than 30000.","6c342965":"There are outliers in all three columns with highest in Loan Amount.","79e756d3":"# EDA","bf0a5b2e":"Most loan applicant take loan amount term of 360 while there are very few who take short loan amount term.","842948b3":"As the loan amount increases Applicant income also increases. but loan is not granted alone on these both relationship as higher loan amounts with lower income lso have been accepted and lower loan amount with higher applicant income are also rejected.","c043d12c":"Self Employed people seem to apply for loan lesser than who are not self employed or this could also be that there are less no. of peple who are self employed.","77222675":"There are more no. of applicants who are married than the unmarried ones.","a8a5f7d3":"There are more no. of graduate applicants than than the non graduates one.","5b2e20cf":"Most loan applicants live in semiurban area while the applicants from rural area are the least in no.","004b0d5a":"Loan amount varies from 9 to 700. Most of the loan amount lie in 80 to 180. Data is skewed to the right side with mean greater than the median.","6972ced6":"There are null values present in 7 columns","44ebd793":"##### Removing skewness","12d3a9ea":"As the Loan amount increases, there is also an increase in Loan Applicants income.","bca71a73":"Loan amount and credit history has count less than 614, therefore it consists of missing values. Mean is higher in ApplicantIncome, CoapplicantIncome and LoanAmount than median while less in the last two columns which suggest skewness is present. Former case has right skewness and latter has left skewness present. Diffrence in Min, max and inter quartie range is variable which suggests presence of outliers.","88d63239":"Dataset is highly imbalanced as label class do not have eqaul count of categories.","d60f3d06":"Applicants having bad credit history are subjected to get rejected no matter from where they belong.","afe06f43":"No. of female applicants having higher income are approved while this is not the case for male applicants. Even if they have higher incomes they are rejected.","16c7a9c9":"Most of the loan applicants have their income in the range 0 to 5000. Income of co applicant is much lower than the applicants. Data is highly skewed to the right.","8dfe4ffc":"There are more no. of male applicants than female applicants, almost 4 times.","7ecc4f70":"# Please Upvote if you like my work. Thanks!!","444a6186":"There is a slight decrease in co applicants income as loan Applicants income increases.","2ae54ba4":"Loan applicants incom is highest who have 3 dependents but approving of loan alone does not depend on these factors.","5a2165c8":"##### Removing Outliers","aea811b0":"Self employed people usually take higher amounts of loans as compared to non self employed ones but for loan amount more than 400 there loan status is not approved.","de1ea94d":"# Finalizing the best Model","873ee5d0":"There is more density in yes category where a co applicant income is more but loan are not granted on the basis of c0-applicant income alone as loans are also rejected, where co-applicants income is very high.","9fd0356b":"### Multivariate Analysis","c73bf137":"# Saving the model","1e3d7f5b":"Skewness has reduced as shown in the above distribution plot.","3e5c5c0c":"# Feature Engineering","aecf33b9":"##### Handling Imbalanced Data","6977c834":"Dataset is imbalanced.","2f4bc4d7":"The best model for our problem id Random forest as it gives a good cross validation score and difference between its cross validation score and accuracy score is minimum.","0ea7a23f":"Data is balanced now, both the category of income have 50% data each.","9a873b2b":"Most high amount approved loans are from rural area, folowed by urban, even though no. of applicants from semi urban area are more in number.","7f9702d3":"![](https:\/\/i.routestofinance.com\/img\/banking-and-loans-2017\/unsecured-loans-definition-and-explanation.jpg)","1d0252b4":"# Evaluation Metrics","e2b589f2":"There are few applications for less than 150 loan amount term and most of them are accepted. While most application are for higher terms.","095c8ac6":"There is one identifier cilumn loan id which needs to be removed.","108eb1c6":"There are no more null values in the dataset.","c8558f67":"Random Forest, Gradient Boost and Xtreme Gradient Boosting gives the highest performace so we apply Hyperparameter tunning on them.","a86e0f4f":"##### Xtreme Gradient Boost","8b75e68b":"##### Dropping identifier columns","d146c679":"Importing neccessary libraries","1c0931a7":"There are more no. of applicants for loan amount less than 200. Loans greater than 600 are all accepted, All over Loan amount does not concludes if a loan will be accepted or not.","28360697":"There is not much correlation between independent variables except for loan amount shows positive correlation with Applicants and Co-applicants income.","6fe3e0cb":"There is skewness present in the dataset.","ea07aec4":"# Modelling Phase","64d2cb26":"Most of the loan applicants have their income in the range 1000 to 10000 while applicants having income as low as 150 and as high as 81000 also apply for loan. Data is highly skewed to the right.","5d87ed5d":"Females usually take loans on lower amounts but ouliers are also present. Married people have mean loan amount greater than the unmarried ones. There are more applicants with 0 dependents but there mean loan amount is least compared to loan applicatns whi have dependents. Non graduates take loans on higher amounts compared to non graduates. Even though no. of non self employed applicants are more but self employed applicants apply for higher amounts of loan. Least loan amount is giver=n for loan period of 120 but usually higher loan amounts are given with greater loan amount term. People with good credit history take loan on greater amounts but presence of outliers is there. People from rural areas have mean loan amount highest while, highes loan amounts are taken by people from urban area. Loan status do not depend on Loan amount as highest amount loans are also passed and lowest amount loans are also rejected."}}