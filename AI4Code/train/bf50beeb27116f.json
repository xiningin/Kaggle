{"cell_type":{"0385ba88":"code","e7d71c96":"code","f5f14c10":"code","3482e9a6":"code","28f9bfc1":"code","7cea5e09":"code","b669d3eb":"code","a71f8818":"code","33f29765":"code","94d357cf":"code","6ebf66ed":"code","67cdc767":"code","917af872":"code","adfd3bc9":"code","0f06dfa2":"code","355e72b4":"code","6d84570c":"code","92713553":"code","04b4f709":"code","1d145f5b":"code","e1bbc7ca":"code","07e9d708":"markdown","52a24d36":"markdown","309b39f1":"markdown","8bb10e5b":"markdown","b88f51e7":"markdown","b89651f9":"markdown","1b5405e8":"markdown","c67a2d21":"markdown","c15433b5":"markdown","858d5bf0":"markdown","53ed642d":"markdown","4039111a":"markdown","313d74d4":"markdown"},"source":{"0385ba88":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e7d71c96":"path = '\/kaggle\/input\/fish-market\/Fish.csv'\ndf = pd.read_csv(path)","f5f14c10":"df.head()","3482e9a6":"df.shape","28f9bfc1":"df.info()","7cea5e09":"df.describe(include='all')","b669d3eb":"df.isna().sum()","a71f8818":"df.corr()","33f29765":"px.histogram(df,x='Species')      #counts of fishes organized by species","94d357cf":"px.histogram(df,x='Species',y='Weight')   #total sum of weight per species","6ebf66ed":"sns.pairplot(df,hue='Species')","67cdc767":"sns.heatmap(df.corr())","917af872":"fish = pd.get_dummies(df,columns=[\"Species\"])  #Converting Categorical Data\nprint(fish.shape)\nfish.head()","adfd3bc9":"x=fish.iloc[:,1:13].values     \ny= fish[\"Weight\"].values       ","0f06dfa2":"x_train,x_test,y_train,y_test = train_test_split(x,y, train_size = 0.7, random_state = 100)  #splitting into test and train ","355e72b4":"reg = LinearRegression()   #Creating a Linear Regression Object\nreg.fit(x_train,y_train)","6d84570c":"score = reg.score(x_train,y_train)    #Predicting score of the model on x_train,y_train\nprint(score)","92713553":"print(\"Coeffs: \", reg.coef_)\nprint(\"Interept: \",reg.intercept_)","04b4f709":"preds = reg.predict(x_test) ","1d145f5b":"pred_data = {\"y_test\":y_test,\"y_pred\":preds}\npd.DataFrame(data=pred_data).head()","e1bbc7ca":"r2 = r2_score(y_test,preds)\nprint(\"R2 score: \"+str(r2))","07e9d708":"The above histogram gives us a valuable information that even though there is a majority of Perch fishes , the weight of Bream fishes combined is greater than Perch fishes combined. This means Bream is a bigger fish than Perch.","52a24d36":"The R2 score which we got is High. Which means that our model is working fine.","309b39f1":"Check out my Linear Regression Notebook : https:\/\/www.kaggle.com\/amartyanambiar\/beginner-simple-linear-regression","8bb10e5b":"## Understanding the Data","b88f51e7":"##  Model Creation","b89651f9":"The corr() function has shed light on the high correlations of Lengths,Width to Weight.","1b5405e8":"There are no NaN values. The data is clean and we are good to go.","c67a2d21":"## Importing Libraries & Dataset","c15433b5":"## Prediction for Test Data","858d5bf0":"The describe() function gives us an insight on certain things like, there are 7 unique species and Perch is the most prevalent species in the dataset.","53ed642d":"In the above pairplot, we see a strong positive linear regression. ","4039111a":"## Visualization","313d74d4":"The dataset contains 159 rows and 7 columns, of which 6 columns are Numerical and 1 is Categorical.\n\nWe have to create a Multiple Linear Regression model to predict the Weight of a fish when the inputs are its Length,Width,Height and Species."}}