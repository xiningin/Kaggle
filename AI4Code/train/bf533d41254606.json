{"cell_type":{"6e5d9f15":"code","90157e0e":"code","53ef6ff1":"code","6302b7ca":"code","d73bc43f":"code","67d0f078":"code","ce139e10":"code","e36e934f":"code","40cc6518":"code","dd3e0a0a":"code","64ca96a8":"code","ed6a2277":"code","b70fc11e":"code","fa80c61c":"code","2ae1032a":"code","cae6dc63":"code","d2b756d5":"code","a912f5ea":"code","18bb36a9":"code","ae64d3fb":"code","977c7f11":"code","028f7a15":"code","b012efd4":"markdown"},"source":{"6e5d9f15":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import  DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.metrics import classification_report\nfrom sklearn import preprocessing","90157e0e":"\ncomp = pd.read_csv(\"\/media\/gargi\/Data\/DataSets\/Company_Data.csv\")","53ef6ff1":"comp","6302b7ca":"comp.describe()","d73bc43f":"comp[\"Sales\"] = pd.cut(comp[\"Sales\"], bins =[0,8,17],labels = [\"Risky\",\"Good\"] )","67d0f078":"comp","ce139e10":"label_encoder = preprocessing.LabelEncoder()\ncomp['Sales']= label_encoder.fit_transform(comp['Sales']) \ncomp['US']= label_encoder.fit_transform(comp['US'])\ncomp['ShelveLoc']= label_encoder.fit_transform(comp['ShelveLoc']) \ncomp['Urban']= label_encoder.fit_transform(comp['Urban']) ","e36e934f":"comp","40cc6518":"x=comp.iloc[:,1:9]\ny=comp['Sales']","dd3e0a0a":"x","64ca96a8":"y","ed6a2277":"comp['Sales'].unique()","b70fc11e":"comp.Sales.value_counts()","fa80c61c":"colnames = list(comp.columns)\ncolnames","2ae1032a":"x_train, x_test,y_train,y_test = train_test_split(x,y, test_size=0.2,random_state=40)","cae6dc63":"model = DecisionTreeClassifier(criterion = 'entropy',max_depth=4)\nmodel.fit(x_train,y_train)","d2b756d5":"tree.plot_tree(model);","a912f5ea":"fn=[\n 'CompPrice',\n 'Income',\n 'Advertising',\n 'Population',\n 'Price',\n 'ShelveLoc',\n 'Age',\n 'Education',\n 'Urban',\n 'US']\ncn=['Good','Risky']\nfig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (4,4), dpi=300)\ntree.plot_tree(model,\n               feature_names = fn, \n               class_names=cn,\n               filled = True);","18bb36a9":"preds = model.predict(x_test) # predicting on test data set \npd.Series(preds).value_counts() # getting the count of each category ","ae64d3fb":"preds","977c7f11":"pd.crosstab(y_test,preds) # getting the 2 way table to understand the correct and wrong predictions","028f7a15":"np.mean(preds==y_test)","b012efd4":"# Building Decision Tree Classifier using Entropy Criteria"}}