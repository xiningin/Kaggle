{"cell_type":{"6e9837b9":"code","6b4673df":"code","86527c5c":"code","da980ea3":"code","34e0e256":"code","9933f849":"code","a629cb8a":"code","cbe00a3f":"code","2ae81137":"code","db4a41d4":"code","380898fe":"code","e6df855e":"code","e2635a83":"code","c242e24e":"code","6fe88bc2":"code","98b9dd8e":"code","0bc5d1e6":"code","d5a535e4":"code","254cc1a1":"code","fc0d067a":"code","fa1c62a7":"code","e00e2e5c":"code","4ccba30d":"code","672fcbf0":"code","837f0e7f":"code","d4bb8906":"code","916beaf3":"code","9217c512":"markdown","5eb2f254":"markdown","0b343459":"markdown","08f08f69":"markdown","243a4477":"markdown","48a2bb07":"markdown","19ab0733":"markdown","0e31c89c":"markdown","46e585c4":"markdown","8018cf40":"markdown","594ddb4a":"markdown","8df32c6e":"markdown","bda921fc":"markdown","b377a1e0":"markdown","f78106c4":"markdown"},"source":{"6e9837b9":"# Gerekli k\u00fct\u00fcphaneler\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix, classification_report,f1_score,recall_score,roc_auc_score, roc_curve\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rc,rcParams\nimport itertools\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning) \nwarnings.filterwarnings(\"ignore\", category=UserWarning) ","6b4673df":"# Veri setinin okutulmas\u0131\ndf = pd.read_csv(\"..\/input\/creditcard\/creditcard.csv\")\ndf.head()","86527c5c":"# Veri setindeki de\u011fi\u015fken ve g\u00f6zlem say\u0131s\u0131\nprint(\"G\u00f6zlem say\u0131s\u0131 : \" ,len(df))\nprint(\"De\u011fi\u015fken say\u0131s\u0131 : \", len(df.columns))","da980ea3":"# veri setindeki de\u011fi\u015fkenlerin tiplerini ve bo\u015f de\u011fer i\u00e7erip i\u00e7ermedi\u011fini g\u00f6zlemlemek istiyoruz\ndf.info()","34e0e256":"# 1 s\u0131n\u0131f\u0131n\u0131n veri setinde bulunma oran\u0131 %0.2, 0 s\u0131n\u0131f\u0131n\u0131n ise %99.8\nf,ax=plt.subplots(1,2,figsize=(18,8))\ndf['Class'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('da\u011f\u0131l\u0131m')\nax[0].set_ylabel('')\nsns.countplot('Class',data=df,ax=ax[1])\nax[1].set_title('Class')\nplt.show()","9933f849":"# Time ve Amount de\u011fi\u015fkenlerini standartla\u015ft\u0131rma\nrob_scaler = RobustScaler()\ndf['Amount'] = rob_scaler.fit_transform(df['Amount'].values.reshape(-1,1))\ndf['Time'] = rob_scaler.fit_transform(df['Time'].values.reshape(-1,1))\ndf.head()","a629cb8a":"# Hold out y\u00f6ntemi uygulay\u0131p veri setini e\u011fitim ve test olarak ikiye ay\u0131r\u0131yoruz.(%80,%20)\nX = df.drop(\"Class\", axis=1)\ny = df[\"Class\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=123456)","cbe00a3f":"# modelin tan\u0131mlan\u0131p, e\u011fitilmesi ve ba\u015far\u0131 skoru\nmodel = LogisticRegression(random_state=123456)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f\"%(accuracy))","2ae81137":"def plot_confusion_matrix(cm, classes,\n                          title='Confusion matrix',\n                          cmap=plt.cm.Blues):\n\n    plt.rcParams.update({'font.size': 19})\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title,fontdict={'size':'16'})\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45,fontsize=12,color=\"blue\")\n    plt.yticks(tick_marks, classes,fontsize=12,color=\"blue\")\n    rc('font', weight='bold')\n    fmt = '.1f'\n    thresh = cm.max()\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, format(cm[i, j], fmt),\n                 horizontalalignment=\"center\",\n                 color=\"red\")\n\n    plt.ylabel('True label',fontdict={'size':'16'})\n    plt.xlabel('Predicted label',fontdict={'size':'16'})\n    plt.tight_layout()\n\nplot_confusion_matrix(confusion_matrix(y_test, y_pred=y_pred), classes=['Non Fraud','Fraud'],\n                      title='Confusion matrix')","db4a41d4":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","380898fe":"# Auc Roc Curve\ndef generate_auc_roc_curve(clf, X_test):\n    y_pred_proba = clf.predict_proba(X_test)[:, 1]\n    fpr, tpr, thresholds = roc_curve(y_test,  y_pred_proba)\n    auc = roc_auc_score(y_test, y_pred_proba)\n    plt.plot(fpr,tpr)\n    plt.show()\n    pass\n\ngenerate_auc_roc_curve(model, X_test)","e6df855e":"y_pred_proba = model.predict_proba(X_test)[:, 1]\nauc = roc_auc_score(y_test, y_pred_proba)\nprint(\"AUC ROC Curve with Area Under the curve = %.3f\"%auc)","e2635a83":"# random oversampling \u00f6nce e\u011fitim setindeki s\u0131n\u0131f say\u0131s\u0131\ny_train.value_counts()","c242e24e":"# RandomOver Sampling uygulanmas\u0131 (E\u011fitim setine uygulan\u0131yor)\nfrom imblearn.over_sampling import RandomOverSampler\noversample = RandomOverSampler(sampling_strategy='minority')\nX_randomover, y_randomover = oversample.fit_resample(X_train, y_train)","6fe88bc2":"# random oversampling den sonra e\u011fitim setinin s\u0131n\u0131f say\u0131s\u0131\ny_randomover.value_counts()","98b9dd8e":"# modelin e\u011fitilmesi ve ba\u015far\u0131 oran\u0131\nmodel.fit(X_randomover, y_randomover)\ny_pred = model.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f%%\" % (accuracy))","0bc5d1e6":"plot_confusion_matrix(confusion_matrix(y_test, y_pred=y_pred), classes=['Non Fraud','Fraud'],\n                      title='Confusion matrix')","d5a535e4":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","254cc1a1":"# smote dan \u00f6nce e\u011fitim setindeki s\u0131n\u0131f say\u0131s\u0131\ny_train.value_counts()","fc0d067a":"# Smote uygulanmas\u0131 (E\u011fitim setine uygulan\u0131yor)\nfrom imblearn.over_sampling import SMOTE\noversample = SMOTE()\nX_smote, y_smote = oversample.fit_resample(X_train, y_train)","fa1c62a7":"# smote dan sonra e\u011fitim setinin s\u0131n\u0131f say\u0131s\u0131\ny_smote.value_counts()","e00e2e5c":"# modelin e\u011fitilmesi ve ba\u015far\u0131 oran\u0131\nmodel.fit(X_smote, y_smote)\ny_pred = model.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: %.3f%%\" % (accuracy))","4ccba30d":"plot_confusion_matrix(confusion_matrix(y_test, y_pred=y_pred), classes=['Non Fraud','Fraud'],\n                      title='Confusion matrix')","672fcbf0":"#s\u0131n\u0131fland\u0131rma raporu\nprint(classification_report(y_test, y_pred))","837f0e7f":"# random undersampling den \u00f6nce e\u011fitim setindeki s\u0131n\u0131f say\u0131s\u0131\ny_train.value_counts()","d4bb8906":"from imblearn.under_sampling import RandomUnderSampler\n# transform the dataset\nranUnSample = RandomUnderSampler()\nX_ranUnSample, y_ranUnSample = ranUnSample.fit_resample(X_train, y_train)","916beaf3":"# Random undersampling sonra\ny_ranUnSample.value_counts()","9217c512":"# Dengesiz Veri Seti\n\nDengesiz veri seti s\u0131n\u0131fland\u0131rma problemlerinde g\u00f6r\u00fcl\u00fcr ve s\u0131n\u0131f da\u011f\u0131l\u0131mlar\u0131n\u0131n birbirine yak\u0131n olmad\u0131\u011f\u0131 durumlarda ortaya \u00e7\u0131kar. Problem \u00e7o\u011funlu\u011fa sahip s\u0131n\u0131f\u0131n az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131 domine etmesinden kaynaklan\u0131r. Olu\u015fturulan model \u00e7o\u011funlu\u011fa sahip s\u0131n\u0131fa yak\u0131nl\u0131k g\u00f6sterir, bu da az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131n k\u00f6t\u00fc s\u0131n\u0131fland\u0131r\u0131lmas\u0131na sebep olur.\n\nDengesiz veri setleriyle kar\u015f\u0131la\u015ft\u0131\u011f\u0131m\u0131zda do\u011fru g\u00f6zlem yapabilmek ve dengeyi sa\u011flayabilmek i\u00e7in uygulayabilece\u011fimiz \u00e7e\u015fitli y\u00f6ntemler vard\u0131r:\n\n- Do\u011fru Metrik Se\u00e7imi\n  - Precision\n  - Recall\n  - F1-score\n  - ROC Curve\n  - AUC\n- Resampling\n  - Oversampling\n     - Random Oversampling\n     - SMOTE Oversampling\n  - Undersampling\n     - Random Undersampling\n     - NearMiss Undersampling\n     - Undersampling (Tomek links)\n     - Undersampling (Cluster Centroids)\n- Daha fazla veri toplamak\n- S\u0131n\u0131fland\u0131rma modellerinde bulunan \u201cclass_weight\u201d parametresi kullan\u0131larak az\u0131nl\u0131k ve \u00e7o\u011funluk s\u0131n\u0131flar\u0131ndan e\u015fit \u015fekilde \u00f6\u011frenebilen model yarat\u0131lmas\u0131,\n- Tek bir modele de\u011fil , di\u011fer modellerdeki performanslara da bak\u0131lmas\u0131,\n- Daha farkl\u0131 bir yakla\u015f\u0131m uygulan\u0131p Anomaly detection veya Change detection yapmak\n\nDengesizlik i\u00e7eren Credit Card Fraud Detection veri setini inceleyip, daha sonras\u0131nda bu dengesizlikle ba\u015fa \u00e7\u0131kabilmek i\u00e7in veri setine \u00e7e\u015fitli y\u00f6ntemler uygulayaca\u011f\u0131z.","5eb2f254":"**NearMiss Undersampling:**\n- Bilgi kayb\u0131n\u0131 \u00f6nler. \n- KNN algoritmas\u0131na dayan\u0131r. \n- \u00c7o\u011funluk s\u0131n\u0131f\u0131na ait \u00f6rneklerin az\u0131nl\u0131k s\u0131n\u0131f\u0131na ait \u00f6rneklerle olan uzakl\u0131\u011f\u0131 hesaplan\u0131r. \n- Belirtilen k de\u011ferine g\u00f6re uzakl\u0131\u011f\u0131 k\u0131sa olan \u00f6rnekler korunur.\n\n**Undersampling (Tomek links):** \n\nFarkl\u0131 s\u0131n\u0131flara ait en yak\u0131n iki \u00f6rne\u011fin aras\u0131ndaki \u00e7o\u011funluk s\u0131n\u0131f\u0131n\u0131n \u00f6rnekleri kald\u0131r\u0131larak, iki s\u0131n\u0131f aras\u0131ndaki bo\u015fluk artt\u0131r\u0131l\u0131r.\n\n**Undersampling (Cluster Centroids):** \n\n\u00d6nemsiz \u00f6rneklerin veri setinden \u00e7\u0131kar\u0131lmas\u0131d\u0131r.\u00d6rne\u011fin \u00f6nemli veya \u00f6nemsiz oldu\u011fu k\u00fcmelemeyle belirlenir.\n\nUndersampling ve Oversampling tekniklerinin bir araya gelmesiyle daha dengeli veri setleri olu\u015fturulabilinir.\n\n### Di\u011fer Y\u00f6ntemler\n\n- Daha fazla veri toplamak,\n- S\u0131n\u0131fland\u0131rma modellerinde bulunan \u201cclass_weight\u201d parametresi kullan\u0131larak az\u0131nl\u0131k ve \u00e7o\u011funluk s\u0131n\u0131flar\u0131ndan e\u015fit \u015fekilde \u00f6\u011frenebilen model yarat\u0131lmas\u0131,\n- Tek bir modele de\u011fil , di\u011fer modellerdeki performanslara da bak\u0131lmas\u0131,\n- Daha farkl\u0131 bir yakla\u015f\u0131m uygulan\u0131p Anomaly detection veya Change detection yapmak\n\ngibi y\u00f6ntemlerle de dengesiz veri setiyle ba\u015fa \u00e7\u0131k\u0131l\u0131r.\n\nHangi y\u00f6ntemin en iyi sonu\u00e7 verece\u011fi elimizdeki veri setine ba\u011fl\u0131d\u0131r. Y\u00f6ntemler denenerek veri setine en uygun olan\u0131n se\u00e7ilmesi en iyi sonucu sa\u011flar diyebiliriz.","0b343459":"#### ROC curve\n\nROC e\u011frisi , t\u00fcm s\u0131n\u0131fland\u0131rma e\u015fiklerinde bir s\u0131n\u0131fland\u0131rma modelinin performans\u0131n\u0131 g\u00f6steren bir grafiktir. Bu e\u011fri iki parametreyi \u00e7izer:\n    \n- True Positive Rate : Recall<img src=\"https:\/\/cdn-images-1.medium.com\/max\/265\/1*_l7BcJqqNnIzcjzY0b7WGg.png\"  width=\"200\"\/>\n\n\n- False Positive Rate : Fraud'\u0131 tespit etmedeki ba\u015far\u0131s\u0131zl\u0131k\n<img src=\"https:\/\/miro.medium.com\/max\/506\/1*YHYVVN_lu4_fhtGYyziC1w.png\"  width=\"200\"\/>\n\nFarkl\u0131 s\u0131n\u0131fland\u0131rma e\u015fiklerinde ger\u00e7ek pozitif oran ve yanl\u0131\u015f pozitif oran e\u011frisidir. (0,0) \u2018da ba\u015flar ve (1,1)\u2019 de biter. \u0130yi bir model, 0'dan 1'e h\u0131zla giden bir e\u011fri \u00fcretir.\n\n<img src=\"https:\/\/marlin-prod.literatumonline.com\/cms\/attachment\/36cdb4ec-0c7d-48cb-9a4d-7cb463f8b7c3\/gr1.jpg\"  width=\"300\"\/>\n\n #### AUC (Area under the ROC curve)\nROC e\u011frisini tek bir say\u0131 ile \u00f6zetler. (0,0) 'dan (1,1)' e kadar t\u00fcm ROC e\u011frisinin alt\u0131ndaki iki boyutlu alan\u0131n tamam\u0131n\u0131 \u00f6l\u00e7er. En iyi de\u011fer 1, en k\u00f6t\u00fc de\u011feri 0.5'dir.\n","08f08f69":"## Veri Setinin \u0130ncelenmesi\n\nKredi kart\u0131 \u015firketlerinin doland\u0131r\u0131c\u0131l\u0131\u011f\u0131 tespit etmeleri \u00f6nemlidir, m\u00fc\u015fterilerine yanl\u0131\u015f \u00fccretlendirilme yap\u0131lmas\u0131n\u0131 istemezler. \n\nBu veri seti kullan\u0131larak doland\u0131r\u0131c\u0131l\u0131k yap\u0131lm\u0131\u015f kredi kartlar\u0131n\u0131 tespit eden bir model olu\u015fturulmak isteniliyor. \n\nVeri seti eyl\u00fcl 2013'te avrupada kredi kart\u0131yla yap\u0131lan i\u015flemlerden ve bu i\u015flemlerin fraud(doland\u0131r\u0131c\u0131l\u0131k) ise 1 de\u011filse 0 olarak etiketlenmesiyle olu\u015fmu\u015ftur. Gizlilik nedeniyle arka plan bilgisi \u00e7ok fazla bulunmuyor ve \"Time\",\"Amount\" de\u011fi\u015fkeni haricinde di\u011fer de\u011fi\u015fkenler PCA(Principal component analysis) ile d\u00f6n\u00fc\u015ft\u00fcr\u00fclm\u00fc\u015ft\u00fcr. \n\n- \"Time\" : ilk i\u015flem ile her i\u015flem aras\u0131ndaki saniye\n- \"Amount\": maliyet \n\nilk olarak veri setini okutup, bo\u015f de\u011fer olup olmad\u0131\u011f\u0131n\u0131 g\u00f6zlemleyip, Class de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131na bakaca\u011f\u0131z. Daha sonras\u0131nda \"Amount\" ve \"Time\" de\u011fi\u015fkenini standartla\u015ft\u0131r\u0131yoruz. Veriyi hold out y\u00f6ntemiyle ay\u0131r\u0131p, s\u0131n\u0131fland\u0131rma modeli olan logistic regression ile modeli olu\u015fturuyoruz. Tek bir model \u00fczerinden gidece\u011fiz.","243a4477":"**SMOTE Oversampling:**\n\nOverfitting\u2019i \u00f6nlemek i\u00e7in az\u0131nl\u0131k s\u0131n\u0131f\u0131ndan sentetik \u00f6rnekler olu\u015fturulmas\u0131.\n\n- \u00d6nce az\u0131nl\u0131k s\u0131n\u0131f\u0131ndan rastgele bir \u00f6rnek se\u00e7ilir.\n- Daha sonra bu \u00f6rnek i\u00e7in en yak\u0131n kom\u015fulardan k tanesi bulunur.\n- k en yak\u0131n kom\u015fulardan biri rastgele se\u00e7ilir ve az\u0131nl\u0131k s\u0131n\u0131f\u0131ndan rastgele se\u00e7ilen \u00f6rnekle birle\u015ftirilip \u00f6zellik uzay\u0131nda bir \u00e7izgi par\u00e7as\u0131 olu\u015fturarak sentetik \u00f6rnek olu\u015fturulur.","48a2bb07":"## Undersampling\n\n\u00c7o\u011funluk s\u0131n\u0131f\u0131na ait \u00f6rneklerin \u00e7\u0131kar\u0131lmas\u0131yla veri setini dengeleme tekni\u011fidir. B\u00fcy\u00fck veri setine sahip olundu\u011funda kullan\u0131labilir. Elimizdeki veri seti b\u00fcy\u00fck olmad\u0131\u011f\u0131 i\u00e7in verimli sonu\u00e7lar al\u0131nmayacakt\u0131r. Ama y\u00f6ntemleri a\u00e7\u0131klay\u0131p  baz\u0131lar\u0131n\u0131n nas\u0131l uygulanabilice\u011fini g\u00f6sterece\u011fim. \n\n**Random Undersampling:** \n\n- \u00c7\u0131kar\u0131lan \u00f6rnekler rastgele se\u00e7ilir. \n- B\u00fcy\u00fck veri setine sahipseniz bu tekni\u011fi kullanabilirsiniz. \n- Rastgele se\u00e7imden dolay\u0131 bilgi kayb\u0131 ya\u015fanabilir.","19ab0733":"- Non Fraud s\u0131n\u0131f\u0131 i\u00e7in 56870 (TP) do\u011fru, 5 (FP) yanl\u0131\u015f toplam 56875 tahmin yap\u0131lm\u0131\u015f.\n\n- Fraud s\u0131n\u0131f\u0131 i\u00e7in 31 (FN) yanl\u0131\u015f, 56 (TN) do\u011fru toplam 87 tahmin yap\u0131lm\u0131\u015f.\n\nModel bize Fraud durumunu 0.99 do\u011frulukla tahmin edebildi\u011fini s\u00f6yl\u00fcyor.Ama confusion Matrix'i inceledi\u011fimizde Fraud s\u0131n\u0131f\u0131ndaki yanl\u0131\u015f tahminlerin oran\u0131 hayli y\u00fcksek. \u00c7o\u011funluk s\u0131n\u0131f\u0131n\u0131 tahmin etmekte  ba\u015far\u0131l\u0131yken, az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131 tahmin etmede ba\u015far\u0131l\u0131 de\u011fildir. Yani model 0.99 oranla non-fraud s\u0131n\u0131f\u0131n\u0131 do\u011fru tahmin etmekte.\n\nNon Fraud s\u0131n\u0131f\u0131na ait g\u00f6zlem say\u0131s\u0131n\u0131n fraud s\u0131n\u0131f\u0131na ait g\u00f6zlem say\u0131s\u0131ndan fazla olmas\u0131, modelin Non Fraud s\u0131n\u0131f\u0131n\u0131 tahminlemede ba\u015far\u0131l\u0131 olmas\u0131na neden olmakta. \n\nYapt\u0131\u011f\u0131m\u0131z bu g\u00f6zlem ile accuarcy score'un s\u0131n\u0131fland\u0131rma modelleri i\u00e7in iyi bir performans \u00f6l\u00e7\u00fcm\u00fc olmad\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz, \u00f6zelliklede elimizdeki veri setindeki gibi dengesizlik i\u00e7eriyorsa.\n\nVeri setini inceledik,  dengesizlikle nas\u0131l ba\u015fa \u00e7\u0131k\u0131p model olu\u015fturabilice\u011fimize, hangi y\u00f6ntemlerin uygulanabilece\u011fine ve performans\u0131n\u0131 hangi metriklerle \u00f6l\u00e7ebilece\u011fimize bakabiliriz.","0e31c89c":"**Precision** \u00f6l\u00e7\u00fcs\u00fcn\u00fc herbir s\u0131n\u0131f i\u00e7in inceleyelim. \n\n- 0 (non fraud )s\u0131n\u0131f\u0131 i\u00e7in yap\u0131lan tahminlerden ka\u00e7\u0131n\u0131n do\u011fru oldu\u011funu verir. Confusion matrix'ine bak\u0131ld\u0131\u011f\u0131nda 56870 + 31 = 56901 tane non fraud s\u0131n\u0131f\u0131 tahmini yap\u0131lm\u0131\u015f ve bunun 56870 tanesi do\u011fru tahmin edilmi\u015f. 0 s\u0131n\u0131f\u0131 i\u00e7in Precision de\u011feri 1'dir (56870 \/ 56901 )\n\n- 1 (fraud) s\u0131n\u0131f\u0131 i\u00e7in yap\u0131lan tahminlerden ka\u00e7\u0131n\u0131n do\u011fru oldu\u011funu verir. Confusion matrix'ine bak\u0131ld\u0131\u011f\u0131nda 5 + 56 = 61 tane fraud s\u0131n\u0131f\u0131 tahmini yap\u0131lm\u0131\u015f ve bunun 56 tanesi do\u011fru tahmin edilmi\u015f. 0 s\u0131n\u0131f\u0131 i\u00e7in Precision de\u011feri 0.92'dir (56 \/ 61)\n\n**Recall** \u00f6l\u00e7\u00fcs\u00fcn\u00fc herbir s\u0131n\u0131f i\u00e7in inceleyelim.\n\n- 0(non fraud) s\u0131n\u0131f\u0131 i\u00e7in tahmin etmemiz gereken de\u011ferlerin ne kadar\u0131n\u0131 do\u011fru tahmin etti\u011fimizi g\u00f6sterir. 56870 + 5 = 56875 tane non fraud s\u0131n\u0131f\u0131na ait g\u00f6zlemimiz var ve bunlar\u0131n 56870 i do\u011fru tahmin edilmi\u015f. 0 s\u0131n\u0131f\u0131 i\u00e7in recall de\u011feri 56870 \/ 56875 = 1 'dir.\n\n- 1(fraud) s\u0131n\u0131f\u0131 i\u00e7in tahmin etmemiz gereken de\u011ferlerin ne kadar\u0131n\u0131 do\u011fru tahmin etti\u011fimizi g\u00f6sterir. 31 + 56 = 87 tane fraud s\u0131n\u0131f\u0131na ait g\u00f6zlemimiz var ve bunlar\u0131n 56'si do\u011fru tahmin edilmi\u015f. 1 s\u0131n\u0131f\u0131 i\u00e7in recall de\u011feri 56 \/ 87 = 0.64 'dir.\n\nRecall de\u011ferinlerine bak\u0131ld\u0131\u011f\u0131nda 1 s\u0131n\u0131f\u0131n tahmin edilme ba\u015far\u0131s\u0131zl\u0131\u011f\u0131n\u0131 \u00e7ok rahat g\u00f6rebiliyoruz.\n\n**F1-score**'u da recall ve precision de\u011ferlerinin harmonik ortalams\u0131n\u0131 ifade ediyor.\n\n**Support** ise s\u0131n\u0131flar\u0131n ger\u00e7ek de\u011ferlerinin say\u0131s\u0131n\u0131 ifade etmekte. \u00d6l\u00e7\u00fcmlerin yap\u0131sal zay\u0131fl\u0131klar\u0131n\u0131 g\u00f6sterebilir yani S\u0131n\u0131flar aras\u0131ndaki g\u00f6zlem say\u0131s\u0131ndaki dengesizli\u011fin \u00f6l\u00e7\u00fcmleri etkiledi\u011fini s\u00f6yliyebiliriz.","46e585c4":"## Confusion Matrix\nConfusion Matrix, bir s\u0131n\u0131fland\u0131rma modelinin ger\u00e7ek de\u011ferlerinin test verisi \u00fczerindeki performans\u0131n\u0131 a\u00e7\u0131klamak i\u00e7in kullan\u0131lan bir tablodur.\n\nTahmini ve ger\u00e7ek de\u011ferlerin 4 farkl\u0131 kombinasyonunu i\u00e7ermektedir.\n\n<img src=\"https:\/\/miro.medium.com\/max\/2102\/1*fxiTNIgOyvAombPJx5KGeA.png\" width=\"400px\"\/>\n\n- True Positives (TP) : Pozitif tahmin edildi ve bu do\u011fru.\n- True Negative (TN) : Negatif tahmin edildi ve bu do\u011fru.\n- False Positive (FP) : Pozitif tahmin edildi ve bu yanl\u0131\u015f.\n- False Negative (FN) : Negatif tahmin edildi ve bu yanl\u0131\u015f.","8018cf40":"Random Oversampling uyguland\u0131ktan sonra e\u011fitilen modelin do\u011fruluk de\u011feri 0.97'd\u0131r, d\u00fc\u015f\u00fc\u015f g\u00f6zlenmekte. Confusion Matrix ve S\u0131n\u0131fland\u0131rma raporuna bak\u0131ld\u0131\u011f\u0131nda, tahmin edilen fraud s\u0131n\u0131flar\u0131n\u0131n yanl\u0131\u015f \u00e7\u0131kma oran\u0131 y\u00fcksek g\u00f6r\u00fcn\u00fcyor, bu da 1 s\u0131n\u0131f\u0131n precision de\u011ferini d\u00fc\u015f\u00fcrm\u00fc\u015f durumda. Ama 1 s\u0131n\u0131f\u0131n\u0131n recall de\u011ferinde de bir y\u00fckseli\u015f var, modelin fraud s\u0131n\u0131f\u0131n\u0131 do\u011fru tahmin etme oran\u0131 artm\u0131\u015ft\u0131r. \u0130lk modele g\u00f6re Non fraud s\u0131n\u0131f\u0131n\u0131n tahmin edilme ba\u015far\u0131s\u0131 d\u00fc\u015fm\u00fc\u015f durumda ama fraud s\u0131n\u0131f\u0131n\u0131n do\u011fru tahmin edilmesindeki y\u00fckselme randomoversampling yap\u0131ld\u0131ktan sonra olu\u015fturulmu\u015f modeli tercih etmemizde b\u00fcy\u00fck bir etken.","594ddb4a":"**Accuracy** sistemde do\u011fru olarak yap\u0131lan tahminlerin t\u00fcm tahminlere oran\u0131d\u0131r.\n\nOlu\u015fturdu\u011fumuz modelin do\u011fruluk skoru 0.999. Modelimiz m\u00fckemmel \u00e7al\u0131\u015f\u0131yor diyebiliriz, de\u011fil mi? \n\nPerformans\u0131n\u0131 incelemek i\u00e7in birde Confusion Matrix'ine bakal\u0131m.","8df32c6e":"# Do\u011fru Metrik Se\u00e7imi\n\nDo\u011fruluk de\u011ferinin (Accuracy Score) yeterli olmad\u0131\u011f\u0131n\u0131 g\u00f6rd\u00fck. Modelin performans\u0131n\u0131 \u00f6l\u00e7mek i\u00e7in farkl\u0131 metriklere bakmam\u0131z gerekiyor.\n\n**Precision (Kesinlik):** Pozitif olarak tahmin edilenlerin ne kadar\u0131n\u0131n ger\u00e7ekte pozitif oldu\u011funu g\u00f6sterir. E\u011fer precision d\u00fc\u015f\u00fck ise \u00e7ok say\u0131da hatal\u0131 pozitif oldu\u011funu ifade eder.<img src=\"https:\/\/miro.medium.com\/max\/1104\/1*5PvyyMvH5n42XICQrlXOzw.png\"  width=\"300\"\/>\n\n**Recall (Duyarl\u0131l\u0131k):** Pozitif olarak tahmin etmemiz gereken de\u011ferlerin ne kadar\u0131n\u0131 pozitif tahmin etti\u011fimizi g\u00f6sterir. E\u011fer recall d\u00fc\u015f\u00fck ise \u00e7ok say\u0131da yanl\u0131\u015f negatif oldu\u011funu ifade eder. M\u00fcmk\u00fcn oldu\u011fu kadar y\u00fcksek olmal\u0131d\u0131r.<img src=\"https:\/\/lawtomated.com\/wp-content\/uploads\/2019\/10\/Recall_1.png\"  width=\"350\"\/>\n\n**F1 score:** D\u00fc\u015f\u00fck precison ve y\u00fcksek recall veya tam tersi durumda iki modeli kar\u015f\u0131la\u015ft\u0131rmak g\u00fc\u00e7t\u00fcr. Kar\u015f\u0131la\u015ft\u0131r\u0131labilir bir hale getirmek F1 score'u\nprecision ve recall'u ayn\u0131 anda \u00f6l\u00e7\u00fclmesine yard\u0131mc\u0131 olur. Precision ve Duyarl\u0131l\u0131k de\u011ferlerinin harmonik ortalamas\u0131n\u0131 g\u00f6stermektedir.<img src=\"https:\/\/lawtomated.com\/wp-content\/uploads\/2019\/10\/F1-Score.png\"  width=\"350\"\/>\n\nModelimiz i\u00e7in bu metrikleri inceleyelim.\n\n**S\u0131n\u0131fland\u0131rma raporu**, ana s\u0131n\u0131fland\u0131rma \u00f6l\u00e7\u00fctlerinin s\u0131n\u0131f baz\u0131nda temsilini g\u00f6sterir.","bda921fc":"# Resampling\n\nYeniden \u00f6rnekleme(Resampling), az\u0131nl\u0131k s\u0131n\u0131f\u0131na yeni \u00f6rnekler ekleyerek veya \u00e7o\u011funluk s\u0131n\u0131f\u0131ndan \u00f6rnekler \u00e7\u0131kar\u0131larak veri setinin daha dengeli hale getirilmesidir.<img src=\"https:\/\/miro.medium.com\/max\/2956\/1*YfQc_bSmbrlgD9gVd6f99A.png\"  width=\"600\"\/>\n\n## Oversampling\nAz\u0131nl\u0131k s\u0131n\u0131f\u0131na ait \u00f6rneklerin kopyalanmas\u0131yla veri setini dengeler.\n\n**Random Oversampling:** \n- Az\u0131nl\u0131k s\u0131n\u0131f\u0131ndan rastgele se\u00e7ilen \u00f6rneklerin eklenmesiyle veri setinin dengelenmesidir. \n- Veri setiniz k\u00fc\u00e7\u00fckse bu teknik kullan\u0131labilinir. \n- Overfitting\u2019e neden olabilir.\n\nRandomOverSampler metodu sampling_strategy arg\u00fcman\u0131n\u0131 almakta, sampling_stratefy='minority' dendi\u011finde az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131n say\u0131s\u0131n\u0131 \u00e7o\u011funluk s\u0131n\u0131f\u0131n\u0131n say\u0131sa e\u015fitleyecek \u015fekilde art\u0131r\u0131r.\n\nBu arg\u00fcmana float bir de\u011ferde girebiliriz. \u00d6rne\u011fin az\u0131nl\u0131k s\u0131n\u0131f\u0131m\u0131z\u0131n say\u0131s\u0131 1000, \u00e7o\u011funluk s\u0131n\u0131f\u0131n\u0131n say\u0131s\u0131 100 olsun. sampling_stratefy = 0.5 dersek, az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131n say\u0131s\u0131 500 olucak \u015fekilde ekleme yap\u0131lacakt\u0131r.","b377a1e0":"**REFERANS**\n- https:\/\/machinelearningmastery.com\/random-oversampling-and-undersampling-for-imbalanced-classification\/\n- https:\/\/machinelearningmastery.com\/smote-oversampling-for-imbalanced-classification\/\n- https:\/\/towardsdatascience.com\/understanding-confusion-matrix-a9ad42dcfd62\n- https:\/\/towardsdatascience.com\/understanding-auc-roc-curve-68b2303cc9c5\n- https:\/\/machinelearningmastery.com\/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset\/","f78106c4":"**Not :** ROC e\u011frisinin (AUC) alt\u0131ndaki alan, genel s\u0131n\u0131fland\u0131rma performans\u0131n\u0131 de\u011ferlendirir. AUC, bir s\u0131n\u0131fa di\u011ferine daha fazla \u00f6nem vermedi\u011finden, az\u0131nl\u0131k s\u0131n\u0131f\u0131n\u0131 iyi yans\u0131tmamaktad\u0131r.\n\nDengesizli\u011fi gidermek i\u00e7in \u00e7e\u015fitli y\u00f6ntemleri veri setine uygulayal\u0131m.\n\n#### NOT: Y\u00f6ntemler e\u011fitim setine uygulanmal\u0131d\u0131r. Test setine uygulan\u0131rsa do\u011fru de\u011ferlendirme yap\u0131lamaz."}}