{"cell_type":{"cd5a7065":"code","78d8c24e":"code","110fe5b7":"code","73d0f705":"code","856cdb89":"code","98248f5d":"code","383c4f11":"code","e27a5cbb":"code","88f5f944":"code","f55f912d":"code","969ed921":"code","5c8b2f75":"code","4d7b3ee1":"code","86d96028":"code","d18dc5b9":"code","572b25bf":"code","d354da5d":"markdown","0ba548b1":"markdown","bf9e6cb5":"markdown","48eecd0c":"markdown","606ca7f8":"markdown","3b369ac2":"markdown"},"source":{"cd5a7065":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","78d8c24e":"train_df = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv')\ntrain_df.head(3)","110fe5b7":"test_df = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/test.csv')\ntest_df.head(3)","73d0f705":"cc_by_country = train_df[train_df['Date'] == '2020-03-18'].groupby('Country\/Region').sum()['ConfirmedCases'].reset_index()","856cdb89":"fig = plt.figure()\nax = fig.add_subplot(111)\nn, bins, batches = ax.hist(cc_by_country['ConfirmedCases'])","98248f5d":"cc_less_than_10000 = cc_by_country[cc_by_country['ConfirmedCases'] <= 10000]['ConfirmedCases']\n\nfig = plt.figure()\nax = fig.add_subplot(111)\nn, bins, batches = ax.hist(cc_less_than_10000)","383c4f11":"cc_less_than_2000 = cc_by_country[cc_by_country['ConfirmedCases'] <= 2000]['ConfirmedCases']\n\nfig = plt.figure()\nax = fig.add_subplot(111)\nn, bins, batches = ax.hist(cc_less_than_2000)","e27a5cbb":"cc_less_than_500 = cc_by_country[cc_by_country['ConfirmedCases'] <= 500]['ConfirmedCases']\n\nfig = plt.figure()\nax = fig.add_subplot(111)\nn, bins, batches = ax.hist(cc_less_than_500)","88f5f944":"train_df_jp = train_df[train_df['Country\/Region'] == 'Japan']\n\nfig = plt.figure(figsize=(18,6))\nax = fig.add_subplot(111)\nax.bar(train_df_jp['Date'].str.slice(start=-5), train_df_jp['ConfirmedCases'])","f55f912d":"train_df_jp['CcDiff'] = train_df_jp['ConfirmedCases'].diff().fillna(0)\n\nfig = plt.figure(figsize=(18,6))\nax = fig.add_subplot(111)\nax.bar(train_df_jp['Date'].str.slice(start=-5), train_df_jp['CcDiff'])","969ed921":"# https:\/\/qiita.com\/MToyokura\/items\/8a58cb43e634e6421834\nimport statsmodels.graphics.api as smg\nfrom statsmodels.graphics.tsaplots import plot_acf\n\nplot_acf(train_df_jp['CcDiff'], lags=29, alpha=None)\nplt.show()","5c8b2f75":"train_df_ch = train_df[train_df['Country\/Region'] == 'China'].groupby('Date').sum()['ConfirmedCases'].reset_index()\n\nfig = plt.figure(figsize=(18,6))\nax = fig.add_subplot(111)\nax.bar(train_df_ch['Date'].str.slice(start=-7), train_df_ch['ConfirmedCases'])","4d7b3ee1":"train_df_ch['CcDiff'] = train_df_ch['ConfirmedCases'].diff().fillna(0)\n\nfig = plt.figure(figsize=(18,6))\nax = fig.add_subplot(111)\nax.bar(train_df_ch['Date'].str.slice(start=-5), train_df_ch['CcDiff'])","86d96028":"# https:\/\/qiita.com\/MToyokura\/items\/8a58cb43e634e6421834\nimport statsmodels.graphics.api as smg\nfrom statsmodels.graphics.tsaplots import plot_acf\n\nplot_acf(train_df_ch['CcDiff'], lags=29, alpha=None)\nplt.show()","d18dc5b9":"train_df_ch = train_df[train_df['Country\/Region'] == 'China']\nprv_lst = train_df_ch['Province\/State'].unique().tolist()\n\nfig, axes = plt.subplots(11,3)\nfig.set_figheight(23)\nfig.set_figwidth(18)\n\nfor i in range(0, len(prv_lst)):\n    prv = prv_lst[i]\n    prv_df = train_df_ch[train_df_ch['Province\/State'] == prv]\n    axes[int(i \/ 3)][i % 3].bar(prv_df['Date'].str.slice(start=-7), prv_df['ConfirmedCases'])\n    axes[int(i \/ 3)][i % 3].set_title(prv)\n    axes[int(i \/ 3)][i % 3].set_xticks([])\n    axes[int(i \/ 3)][i % 3].set_xticklabels([])","572b25bf":"tmp_geo_df = train_df.apply(\n    lambda x: x['Country\/Region'] if pd.isna(x['Province\/State']) else x['Country\/Region'] + '-' + x['Province\/State'],\n    axis=1).to_frame('GeoName')\ntrain_df_geo = pd.concat([train_df, tmp_geo_df], axis=1)\nprv_lst = train_df_geo['GeoName'].unique().tolist()\n\nfig, axes = plt.subplots(95,3)\nfig.set_figheight(200)\nfig.set_figwidth(18)\n\nfor i in range(0, len(prv_lst)):\n    prv = prv_lst[i]\n    prv_df = train_df_geo[train_df_geo['GeoName'] == prv]\n    axes[int(i \/ 3)][i % 3].bar(prv_df['Date'].str.slice(start=-7), prv_df['ConfirmedCases'])\n    axes[int(i \/ 3)][i % 3].set_title(prv)\n    axes[int(i \/ 3)][i % 3].set_xticks([])\n    axes[int(i \/ 3)][i % 3].set_xticklabels([])","d354da5d":"### Japan","0ba548b1":"## Settings","bf9e6cb5":"### All countries & provinces","48eecd0c":"#### By Province\/State in China","606ca7f8":"## EDA","3b369ac2":"### China"}}