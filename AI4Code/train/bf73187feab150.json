{"cell_type":{"3a48381c":"code","49699b53":"code","a6412d26":"code","7c284cfc":"code","617d2271":"code","20d9d75e":"code","3d305b94":"markdown","187406e3":"markdown","84a45211":"markdown"},"source":{"3a48381c":"import numpy as np,pandas as pd\nimport h5py,pylab as pl\nimport tensorflow_hub as th,tensorflow as tf\nfrom tensorflow import image as timage","49699b53":"fpath='..\/input\/tf-cats-vs-dogs\/'\nf='CatDogImages.h5'\nf=h5py.File(fpath+f,'r')\nkeys=list(f.keys()); print(keys)\nx_test=np.array(f[keys[0]])\ny_test=np.array(f[keys[1]],dtype='int8')\nx_train=np.array(f[keys[2]])\ny_train=np.array(f[keys[3]],dtype='int8')\nN=len(y_train); shuffle_ids=np.arange(N)\nnp.random.RandomState(12).shuffle(shuffle_ids)\nx_train,y_train=x_train[shuffle_ids],y_train[shuffle_ids]\nN=len(y_test); shuffle_ids=np.arange(N)\nnp.random.RandomState(23).shuffle(shuffle_ids)\nx_test,y_test=x_test[shuffle_ids],y_test[shuffle_ids]\nn=int(len(x_test)\/2)\nx_valid,y_valid=x_test[:n],y_test[:n]\nx_test,y_test=x_test[n:],y_test[n:]\ndel f\npd.DataFrame([[x_train.shape,x_valid.shape,x_test.shape],\n              [x_train.dtype,x_valid.dtype,x_test.dtype],\n              [y_train.shape,y_valid.shape,y_test.shape],\n              [y_train.dtype,y_valid.dtype,y_test.dtype]],\n             columns=['train','valid','test'],\n             index=['image shape','image type',\n                    'label shape','label type'])","a6412d26":"fw='weights.best.hdf5'\ndef premodel(pix,den,mh,lbl,activ,loss):\n    model=tf.keras.Sequential([\n        tf.keras.layers.Input((pix,pix,3),\n                              name='input'),\n        th.KerasLayer(mh,trainable=True),\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(den,activation='relu'),\n        tf.keras.layers.Dropout(rate=.5),\n        tf.keras.layers.Dense(lbl,activation=activ)])\n    model.compile(optimizer='adam',\n                  metrics=['accuracy'],loss=loss)\n    display(model.summary())\n    return model\ndef cb(fw):\n    early_stopping=tf.keras.callbacks\\\n    .EarlyStopping(monitor='val_loss',patience=20,verbose=2)\n    checkpointer=tf.keras.callbacks\\\n    .ModelCheckpoint(filepath=fw,save_best_only=True,verbose=2)\n    lr_reduction=tf.keras.callbacks\\\n    .ReduceLROnPlateau(monitor='val_loss',verbose=2,\n                       patience=5,factor=.8)\n    return [checkpointer,early_stopping,lr_reduction]","7c284cfc":"[handle_base,pixels]=[\"inception_v3\",128]\nmhandle=\"https:\/\/tfhub.dev\/google\/imagenet\/{}\/classification\/4\"\\\n.format(handle_base)","617d2271":"model=premodel(pixels,1024,mhandle,1,\n               'sigmoid','binary_crossentropy')\nhistory=model.fit(x=x_train,y=y_train,batch_size=128,\n                  epochs=5,callbacks=cb(fw),\n                  validation_data=(x_valid,y_valid))","20d9d75e":"model.load_weights(fw)\nmodel.evaluate(x_test,y_test)","3d305b94":"## TF Hub Models","187406e3":"## Data","84a45211":"## Code Modules"}}