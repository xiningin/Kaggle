{"cell_type":{"a0f66bdd":"code","98f716d9":"code","3cfd4776":"code","91ab9fb9":"code","dd4d9e5d":"code","2a1a2645":"code","ff2490e2":"code","97505a80":"code","d99d1545":"code","3c2ed339":"code","c807b60d":"code","dbb87a22":"code","78ece931":"code","329f2fe5":"code","f253efad":"code","9ac79539":"code","5f34dd6d":"code","193ee169":"code","b40e29fe":"code","40bda73a":"code","e4764e2d":"code","49e5e0d2":"code","c525ca22":"code","29797549":"code","ec5b474f":"code","b30b84d3":"code","63afe57a":"code","b322402d":"code","49cfc644":"code","f9281186":"code","6bf5c6e5":"code","9821e876":"code","25b7043a":"code","88ebe53c":"code","c2917026":"code","b77e7aa9":"code","f0fc8152":"code","1387fb40":"code","3b01da8f":"code","b1e8e320":"code","57ba1506":"code","3a5b9c59":"code","504297c9":"code","34dfbf47":"code","dc6d4cd4":"code","2c6db1d2":"code","ebbbfb30":"code","f4d655b2":"code","00ae879c":"code","d1189181":"code","043e0927":"code","53cfa485":"code","79d20a4c":"code","21328a95":"code","bf2ffe06":"code","511388be":"code","c3d2c8e1":"code","bf0fc871":"code","cb2ff62f":"code","d4909c21":"code","cb5558a0":"code","63b472e9":"code","3fb89ec5":"code","b78cd0c9":"code","c69831f8":"code","61e71e9e":"code","312fde36":"code","741908b6":"code","7fa30cf9":"code","d9fe0cb9":"code","4e0620c8":"code","b8547af6":"markdown","21fee738":"markdown","8ca8421f":"markdown","304546dd":"markdown","78b9ac5c":"markdown","36c2ecf5":"markdown","22c800a9":"markdown","cd4b83c2":"markdown","372e0b40":"markdown","9fddc012":"markdown","3e22767e":"markdown","7689bdc9":"markdown","a597e466":"markdown","6cf6d690":"markdown","f648eeb1":"markdown","722e1ce6":"markdown","698b0d88":"markdown","ec3a294e":"markdown","2d69c9db":"markdown","6807ef3f":"markdown","44aec5e0":"markdown","49275afe":"markdown","59642a4e":"markdown","ce83d7dd":"markdown","96ef567e":"markdown","0a660b3d":"markdown","b3ad6eab":"markdown","3cba6565":"markdown","c8105e98":"markdown","23779ab1":"markdown","77a1d6b2":"markdown","71a6b3fd":"markdown","b90b441d":"markdown","2de76e77":"markdown","0bb7da47":"markdown","f6210e97":"markdown","9a34f62c":"markdown","191ff322":"markdown","98a427b1":"markdown","d52dabd8":"markdown","feee4b18":"markdown","d7e5ac0e":"markdown","11598ce0":"markdown","799f8715":"markdown","146be2f1":"markdown","08ed8962":"markdown","1fff1510":"markdown","06a608fc":"markdown","2c59b95b":"markdown","bce7072e":"markdown","2dab38d0":"markdown","3c701e39":"markdown","65e80df3":"markdown","326d89b5":"markdown","eb33808f":"markdown","e7637f2d":"markdown","599d7985":"markdown","8e8b7182":"markdown","1c7e2b77":"markdown","1f69b4f7":"markdown","c0dd859c":"markdown","a601b345":"markdown","2ff790b6":"markdown","188e32b3":"markdown","fe87142d":"markdown","f33d984f":"markdown","a33676e8":"markdown","ecffdd0f":"markdown","bb8134e4":"markdown","7d4ffd58":"markdown","49cceb45":"markdown","c7d32a92":"markdown","368c93ed":"markdown"},"source":{"a0f66bdd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","98f716d9":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')","3cfd4776":"train.head()","91ab9fb9":"train.info()","dd4d9e5d":"train.isnull().any()","2a1a2645":"train.describe()","ff2490e2":"train['id'].duplicated().any()","97505a80":"unique_breaths = train['breath_id'].unique()\nnum_breaths = len(unique_breaths)\nprint(num_breaths)","d99d1545":"train['breath_id'][:500].plot();","3c2ed339":"breath_lengths = train[['id','breath_id']].groupby('breath_id').count()['id']\nbreath_lengths.unique()","c807b60d":"BREATH_LENGTH = breath_lengths.unique()[0]","dbb87a22":"r_c_std_in_breaths = train[['breath_id','R','C']].groupby('breath_id').std()\nprint(r_c_std_in_breaths['R'].unique())\nprint(r_c_std_in_breaths['C'].unique())","78ece931":"r_values = train[['breath_id', 'R']].groupby('breath_id').mean()['R']\nprint(r_values)\nprint()\nprint('Unique values:')\nprint(r_values.value_counts())\n\nr_unique = np.sort(r_values.unique()).astype(int)","329f2fe5":"c_values = train[['breath_id', 'C']].groupby('breath_id').mean()['C']\nprint(c_values)\nprint()\nprint('Unique values:')\nprint(c_values.value_counts())\n\nc_unique = np.sort(c_values.unique()).astype(int)","f253efad":"rc_values = np.array([\n    [r, c, len(train[(train['R'] == r) & (train['C'] == c)])\/\/BREATH_LENGTH] \n    for r in r_unique \n    for c in c_unique\n])\n\nx = range(len(rc_values))\nplt.bar(x, rc_values[:,2])\nplt.xticks(x, [str(r) + '_' + str(c) for r, c in rc_values[:,:2] ])\nplt.xlabel('R_C')\nplt.ylabel('Number counts')\nplt.show()","9ac79539":"first_breath  = train[train['breath_id'] == 1]\nsecond_breath = train[train['breath_id'] == 2]\n\nx = range(BREATH_LENGTH)\nt1 = first_breath['time_step']\nt2 = second_breath['time_step']\nplt.plot(x, t1)\nplt.plot(x, t2, ls = '--')","5f34dd6d":"(max(t1) - min(t1)) \/ BREATH_LENGTH","193ee169":"plt.plot(t1.values - t2.values);","b40e29fe":"train[['breath_id', 'time_step']].groupby('breath_id').min()['time_step'].std()","40bda73a":"time_step_max = train[['breath_id', 'time_step']].groupby('breath_id').max()['time_step']\ntime_step_max.describe()","e4764e2d":"plt.hist(time_step_max, 50);","49e5e0d2":"len(time_step_max.unique())","c525ca22":"first_dt = first_breath['time_step'].diff()[1:]\nprint(max(first_dt)\/min(first_dt))\nsecond_dt = second_breath['time_step'].diff()[1:]\nprint(max(second_dt)\/min(second_dt))","29797549":"train['dt'] = train['time_step'].diff()\ndt_loc = train.columns.get_loc('dt')\ntrain.iloc[::BREATH_LENGTH, dt_loc] = np.nan #corresponds to start of each breath\nplt.hist(train['dt'], 30);\nplt.xlabel('time step size');","ec5b474f":"plt.hist(train['dt'], np.arange(0, 0.05, 0.001))\nplt.xlabel('time step size');","b30b84d3":"plt.hist(train['dt'], np.arange(0.0315, 0.0355, 0.000002))\nplt.xlabel('time step size');","63afe57a":"plt.hist(train['dt'][240:320], np.arange(0.0315, 0.0355, 0.00002))\nplt.xlabel('time step size');","b322402d":"train[train['dt'] < 0.031]","49cfc644":"train[train['dt'] > 0.05]","f9281186":"train[train['dt'] > 0.05]['dt'].values\/0.03","6bf5c6e5":"dt_means = np.median(np.reshape(train['dt'].values, (-1, BREATH_LENGTH))[:,1:], axis = -1)\nplt.hist(dt_means,90);\nmedian_dt_peaks = [0.03170, 0.03195, 0.03340, 0.03355, 0.03375, 0.03402, 0.03428,]\n\nfor peak in median_dt_peaks:\n    plt.axvline(peak, color = 'r', lw = 1)","9821e876":"first_u_out  = first_breath['u_out']\nsecond_u_out = second_breath['u_out']\nplt.plot(range(BREATH_LENGTH), first_u_out, marker = 'o')\nplt.plot(range(BREATH_LENGTH), second_u_out, marker = 'o')","25b7043a":"u_out_min = train[['breath_id', 'u_out']].groupby('breath_id').min()['u_out']\nu_out_max = train[['breath_id', 'u_out']].groupby('breath_id').max()['u_out']\nprint(max(u_out_min))\nprint(min(u_out_max))","88ebe53c":"u_out_decreases        = train['u_out'].diff()[1:].values < 0\nbreath_id_remains_same = train['breath_id'].diff()[1:].values == 0\nassert(np.max(u_out_decreases * breath_id_remains_same) == 0)","c2917026":"u_out_diff = train['u_out'].diff()\nu_out_diff[0] = 0. #remove the NaN\nu_out_transitions = u_out_diff.index[u_out_diff == 1] % BREATH_LENGTH\nplt.hist(u_out_transitions, 7, align = 'right')\nprint('u_out transitions happen between timesteps:')\nprint(min(u_out_transitions))\nprint(max(u_out_transitions))","b77e7aa9":"plt.scatter(u_out_transitions, time_step_max, alpha = 0.01);\nplt.ylabel('Lenght of the breath')\nplt.xlabel('step of u_out transition');","f0fc8152":"idxs = u_out_transitions + np.arange(0,BREATH_LENGTH*num_breaths,BREATH_LENGTH) - 1\ntimes_before_transition = train['time_step'][idxs]\nplt.hist(times_before_transition, 50)\nassert(max(train['u_out'][idxs]) == 0) #Check all really before the transition","1387fb40":"idxs = u_out_transitions + np.arange(0,BREATH_LENGTH*num_breaths,BREATH_LENGTH)\ntimes_after_transition = train['time_step'][idxs]\nplt.hist(times_after_transition,50)\nassert(min(train['u_out'][idxs]) == 1) #Check all really after the transition","3b01da8f":"plt.plot(times_after_transition[:1000].values)\nplt.plot(times_before_transition[:1000].values)\nplt.axhline(0.99, c = 'k');\nplt.ylabel('Time');\nplt.xlabel('Breath');","b1e8e320":"for idx in range(7):\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[idx]]['u_in'], marker = 'o')\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[idx]]['u_out'], marker = 'o')\n    plt.show()","57ba1506":"for idx in range(15):\n    u_in = train[train['breath_id'] == unique_breaths[idx]]['u_in']\n    u_out_transition = u_out_transitions[idx]\n    step_since_transition = range(BREATH_LENGTH - u_out_transition)\n    plt.plot(step_since_transition, u_in[u_out_transition:])","3a5b9c59":"for idx in [15,16,29]:\n    u_in = train[train['breath_id'] == unique_breaths[idx]]['u_in']\n    u_out_transition = u_out_transitions[idx]\n    step_since_transition = range(BREATH_LENGTH - u_out_transition)\n    plt.plot(step_since_transition, u_in[u_out_transition:])","504297c9":"for idx in range(15):\n    u_in = train[train['breath_id'] == unique_breaths[idx]]['u_in']\n    u_out_transition = u_out_transitions[idx]\n    time_steps = train[train['breath_id'] == unique_breaths[idx]]['time_step'].values\n    time_since_transition = time_steps - time_steps[u_out_transition]\n    plt.plot(time_since_transition[u_out_transition:], u_in[u_out_transition:])\nplt.xlim([0.4,0.65])\nplt.ylim([0,3.4])","34dfbf47":"plt.hist(train[['breath_id', 'u_in']].groupby('breath_id').max()['u_in'], 100);","dc6d4cd4":"    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[31]]['u_in'], marker = 'o');","2c6db1d2":"    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[32]]['u_in'], marker = 'o');","ebbbfb30":"    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[40]]['u_in'], marker = 'o');","f4d655b2":"    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[35]]['u_in'], marker = 'o');","00ae879c":"for idx in range(7):\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[idx]]['u_in'], marker = 'o', label = 'u_in')\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[idx]]['u_out'], marker = 'o', label = 'u_out')\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == unique_breaths[idx]]['pressure'], marker = 'o', label = 'pressure')\n    plt.legend()\n    plt.show()","d1189181":"avgs = np.zeros(BREATH_LENGTH)\nfor t in range(BREATH_LENGTH):\n    avgs[t] = train['pressure'][t::BREATH_LENGTH].mean()\nplt.plot(avgs)","043e0927":"train[train['pressure'] <= 0]","53cfa485":"negative_pressure_breaths = train[train['pressure'] <= 0]['breath_id'].unique()\nnegative_pressure_breaths","79d20a4c":"for idx in [542, 851, 3928, 7949, 11216, 124575]:\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == idx]['u_in'], marker = 'o')\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == idx]['u_out'], marker = 'o')\n    plt.plot(range(BREATH_LENGTH), train[train['breath_id'] == idx]['pressure'], marker = 'o')\n    plt.show()","21328a95":"max_u_in_for_negative_pressure_breaths = [train[train['breath_id'] == b]['u_in'].max() for b in negative_pressure_breaths]\nplt.hist(max_u_in_for_negative_pressure_breaths);","bf2ffe06":"initial_pressure = train['pressure'][::BREATH_LENGTH]\nplt.hist(initial_pressure,20);","511388be":"initial_u_in = train['u_in'][::BREATH_LENGTH]\nplt.scatter(initial_u_in, initial_pressure);\nplt.ylabel('Initial pressure')\nplt.xlabel('Initial u_in');","c3d2c8e1":"fig, axs = plt.subplots(len(r_unique), len(c_unique), figsize=(14,14))\nfor i, r in enumerate(r_unique):\n    for j, c in enumerate(c_unique):\n        foo = train[(train['R'] == r) & (train['C'] == c)]\n        axs[i,j].scatter(foo['u_in'][::BREATH_LENGTH], foo['pressure'][::BREATH_LENGTH]);\n        axs[i,j].set_ylim([-2,8])\n        axs[i,j].text(35,-1.2,f'R={r},C={c}')\n        axs[i,j].axhline(4, color = 'k', ls = '--')\n        axs[i,j].set_ylabel('Initial pressure')\n        axs[i,j].set_xlabel('Initial u_in');","bf0fc871":"fig, axs = plt.subplots(len(r_unique), len(c_unique), figsize=(14,14))\nfor i, r in enumerate(r_unique):\n    for j, c in enumerate(c_unique):\n        foo = train[(train['R'] == r) & (train['C'] == c)]\n        for k in range(600):\n            axs[i,j].plot(range(35), foo[k*BREATH_LENGTH:k*BREATH_LENGTH+35]['pressure'], c = 'g', alpha = 0.005);\n#        axs[i,j].set_ylim([0,8])\n        axs[i,j].text(20,5,f'R={r},C={c}')\n        axs[i,j].set_ylabel('Pressure')\n        axs[i,j].set_xlabel('Timestep');    ","cb2ff62f":"template_start = np.zeros(num_breaths, dtype = int)\nfor idx in range(num_breaths):\n    u_in = train.iloc[idx*BREATH_LENGTH:(idx+1)*BREATH_LENGTH]['u_in'].values\n    u_in_second_stage = u_in[u_out_transitions[idx]:]\n    dt = np.argmax(u_in_second_stage != 0.) #Do not count the zeros right after the transition\n    template_start[idx] = u_out_transitions[idx] + dt #Offset from the beginning","d4909c21":"u_in_template = train[train['breath_id'] == unique_breaths[0]]['u_in'][template_start[0]:].values\nl_template = len(u_in_template)\nnp.savetxt('u_in_template.txt', u_in_template)\nplt.plot(u_in_template);\nplt.xlabel('timestep')\nplt.ylabel('u_in');","cb5558a0":"u_in = train[train['breath_id'] == unique_breaths[2]]['u_in'][template_start[2]:].values\nplt.plot(u_in)\nplt.plot(u_in_template)\nl1 = len(u_in)\nl2 = len(u_in_template)\nprint(sum((u_in[1:min(l1,l2)] - u_in_template[:min(l1,l2)-1])**2))\nprint(sum((u_in[:min(l1,l2)] - u_in_template[:min(l1,l2)])**2))\nprint(sum((u_in[:min(l1,l2)-1] - u_in_template[1:min(l1,l2)])**2))","63b472e9":"u_in = train[train['breath_id'] == unique_breaths[29]]['u_in'][template_start[29]:].values\nplt.plot(u_in)\nplt.plot(u_in_template)\nl1 = len(u_in)\nl2 = len(u_in_template)\nprint(sum((u_in[1:min(l1,l2)] - u_in_template[:min(l1,l2)-1])**2))\nprint(sum((u_in[:min(l1,l2)] - u_in_template[:min(l1,l2)])**2))\nprint(sum((u_in[:min(l1,l2)-1] - u_in_template[1:min(l1,l2)])**2))","3fb89ec5":"has_template = np.zeros(num_breaths, dtype = bool)\ntemplate_chi2 = np.zeros(num_breaths)\nfor idx in range(num_breaths):\n    u_in = train.iloc[idx*BREATH_LENGTH + template_start[idx]:(idx+1)*BREATH_LENGTH]['u_in'].values\n    li = len(u_in)\n    #compare breath data shifted by +-1, 0 with the template, calculate chi2\n    s1 = sum((u_in[1:min(li,l_template)] - u_in_template[:min(li,l_template)-1])**2)\n    s2 = sum((u_in[:min(li,l_template)] - u_in_template[:min(li,l_template)])**2)\n    s3 = sum((u_in[:min(li,l_template)-1] - u_in_template[1:min(li,l_template)])**2)\n    template_chi2[idx] = min(s1, s2, s3)\n    has_template[idx] = template_chi2[idx] < 4.","b78cd0c9":"print(has_template[2])\nprint(has_template[29])\nnp.histogram(template_chi2, np.arange(0,50,4))","c69831f8":"print('Number of breaths with template: ', sum(has_template))\nprint(f'Fraction: {sum(has_template)\/num_breaths:.3}')","61e71e9e":"print('R    C    fraction with template')\nfor r in r_unique:\n    for c in c_unique:\n        filt = (r_values == r) * (c_values == c)\n        print(f'{r:02}   {c}   {sum(has_template[filt])\/sum(filt):.2f}')","312fde36":"worst_template_id = np.argmax(template_chi2*(template_chi2 < 4))\nprint('Chi2: ', template_chi2[worst_template_id])\nu_in = train.iloc[worst_template_id*BREATH_LENGTH + template_start[idx]:(worst_template_id+1)*BREATH_LENGTH]['u_in'].values\nplt.plot(u_in);\nplt.ylabel(\"u_in\")\nplt.xlabel('time step');","741908b6":"without_template = [i for i in range(num_breaths) if has_template[i] == False]\nlen(without_template)","7fa30cf9":"for i in without_template[:15]:\n    b = unique_breaths[i]\n    ts = template_start[i]\n    u_in = train[train['breath_id'] == b]['u_in'][ts:].values\n    plt.plot(u_in)\nplt.ylim([0, 30]);","d9fe0cb9":"full_has_template = np.zeros(len(train))\nfull_no_template  = np.zeros(len(train))\nfor idx in range(BREATH_LENGTH):\n    full_has_template[idx::BREATH_LENGTH] = has_template\n    full_no_template[idx::BREATH_LENGTH] = 1 - has_template","4e0620c8":"foo_template = train[(train['R'] == 50) & (train['C'] == 10) & full_has_template]\nfoo_no_template = train[(train['R'] == 50) & (train['C'] == 10) & full_no_template]\nplt.scatter(foo_no_template['u_in'][::BREATH_LENGTH], foo_no_template['pressure'][::BREATH_LENGTH], label = 'Without template');\nplt.scatter(foo_template['u_in'][::BREATH_LENGTH], foo_template['pressure'][::BREATH_LENGTH], label = 'With template');\nplt.ylim([-2,8])\nplt.legend()\nplt.text(35,-1.2,f'R=50,C=10')\nplt.axhline(4, color = 'k', ls = '--')\nplt.ylabel('Initial pressure')\nplt.xlabel('Initial u_in');","b8547af6":"# Individual breaths","21fee738":"# Pressure","8ca8421f":"There is actually a very clear structure. Looks a bit like a sum of normal distributions.","304546dd":"The time steps within each individual breath are mostly equal sized, varying by a few percent max","78b9ac5c":"No timestep is shorter than 0.031","36c2ecf5":"We saw above that u_in very often follows a template once u_out is turned on. We want to see how often this happens.","22c800a9":"There is about a factor two scatter in the various R\/C combinations. \n\nFor R = 20 we see C = 50 most often, for R = 5, 50 we see C = 10 most often.","cd4b83c2":"All breaths start at timestep zero","372e0b40":"We find out whether the template is present by comparing u_in data during the final part of the breath and the template. We also store the chi2 value for a sanity check.","9fddc012":"Within each breath, we have periods of both zero and unit u_out (so for example not always zero)","3e22767e":"Get distribution of median time step size for each breath. Find the approximate position of the discovered peaks;","7689bdc9":"Overplotting pressures for many breaths over each other reveals presence of several independent modes.","a597e466":"id numbers are unique as expected (no duplicates)","6cf6d690":"One time step seems to correspond to about","f648eeb1":"Data columns and their types","722e1ce6":"Breaths where we encounter a negative pressure:","698b0d88":"Plot several","ec3a294e":"# Time steps in individual breaths","2d69c9db":"Basic descriptive statistics","6807ef3f":"It is not possible to make a 100% perfect separation, though the time of the u_out transition seems to be very close to 0.99","44aec5e0":"Average pressure","49275afe":"Vast majority of the breaths follows the standard protocol during the u_out = 1 phase:","59642a4e":"# u_in control input","ce83d7dd":"A handful of examples - after a varying initial sequence, there seems to be a standard protocol when u_out is switched on","96ef567e":"For each row of the dataframe, keep info about whether it belongs to a breath with\/without template","0a660b3d":"Indeed, they all have maximal u_in below four","b3ad6eab":"Few examples where the u_in reaches the maximal value:","3cba6565":"Most of the maximal timesteps are unique, so there is some randomness in these","c8105e98":"For each breath we have exactly 80 data points:","23779ab1":"R and C values are constant within each breath (having zero standard deviation)","77a1d6b2":"So does C:","71a6b3fd":"# u_out control input","b90b441d":"u_in maxima are interestingly distributed","2de76e77":"Each breath is ~ 2.5 to 3 seconds long","0bb7da47":"We know from train.describe that there are negative pressure values. There are actually plenty.","f6210e97":"Plot the initial pressure\/u_in distribution for R = 50, C = 10 with and without the template. The strange initial pressures all correspond to the cases without the template present in the second part of u_in. This strongy suggests that we can not consider the pressure at early times independent of the pressures at late times. Possibly because the same cycle was repeated several times?","9a34f62c":"Two sample breaths","191ff322":"Most of the behavior with u_out turned on is pretty consistent","98a427b1":"Using time on the x axis seems to lead to a bit better alignment","d52dabd8":"Few such examples. Interestingly, all of them have very small maximal values of u_in \/ none of them has the standard second part of the breath","feee4b18":"This is the distribution of the last recorded time for which u_out is still zero.","d7e5ac0e":"Pressure typically starts between 4 and 7, but there are outliers","11598ce0":"We check that our choice of chi2 cutoff was not too conservative. We find that the breath we labeled as having a template indeed seems to follow the same u_in pattern, but some time steps seem to be missing. We should investigate this in more detail.","799f8715":"There are several rows corresponding to each breath:","146be2f1":"Find the index of the first nonzero u_in after the u_out turned on. This should be the first point of the template for those breaths that follow it.","08ed8962":"We find that the longer the breath, the sooner the u_out transition happens. This suggests that u_out transition occurs always at the same time.","1fff1510":"Number of different breath data","06a608fc":"Sanity check:\n\n1) we confirm results for the two breaths we investigated explicitly above\n\n2) there are no breaths where chi2 is small but larger than 5 by a little bit - we have a clear separation","2c59b95b":"# Load the train data and get the general feeling","bce7072e":"But not all","2dab38d0":"More interestingly, in R = 50, C = 10 case only 60% of the breaths follow the template in the second part of the breath. For all other R, C combinations, all breaths follow the template once u_out is turned on. This suggests that for these R, C combinations we can compress all u_in information once u_out has been turned on into a single number (start time of the template).","3c701e39":"There is a wide range of shapes:","65e80df3":"It is likely that the big first peak in the histogram above is breaths where in the first part of the breath u_in does not reach the peak of the typicall u_in progression in the second part of the breath:","326d89b5":"The two time series for the first two breaths are not perfectly aligned","eb33808f":"The u_out transitions happen between time steps 25 and 32, with almost all between 30 and 32","e7637f2d":"Take a look at time sampling for the first two breaths. Looks like pretty uniform sampling in time.","599d7985":"Given R = 50, C = 10 is the most frequent combination, we still encounter plenty of cases with non-standard second part of the breath","8e8b7182":"# R and C","1c7e2b77":"And only a handful are longer than 0.05. All such timesteps but one occur for R = 50, C = 10. Both u_out zero and one present.","1f69b4f7":"This is the distribution of the first recorded time for which u_out is one.","c0dd859c":"First few lines","a601b345":"Turns out only R = 50, C = 10 shows very low initial pressures","2ff790b6":"There are no missing values","188e32b3":"In most of the cases we miss 7-8 timesteps","fe87142d":"R has only three distinct values:","f33d984f":"Within each breath, u_out never decreases, so it is always a step up:","a33676e8":"Read off the template from the first breath:","ecffdd0f":"Investigate one breath with and one without the template. Plot the comparison, evaluate chi2. In principle, template can be shifted by one time step due to unequal time sampling, so we compare chi2 for three time shifts (-1, 0, 1 time step).","bb8134e4":"They can not be quite determined from initial u_in alone","7d4ffd58":"It is not that all timesteps from a single breath belong to the same Gaussian..","49cceb45":"Calculate and plot histogram of time step sizes","c7d32a92":"Zoom in on the main peak","368c93ed":"# Analyze how often we see non-standard second part of u_in"}}