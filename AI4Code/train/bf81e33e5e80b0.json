{"cell_type":{"1b6b0bfc":"code","905b47df":"code","aa3ebd79":"code","b0e6f227":"code","a8450702":"code","04b24035":"code","1b3e2367":"code","e74ec997":"code","9d86429c":"code","4bb77743":"code","7bf9aee4":"code","2b4b02ee":"code","0783c608":"code","a5ae2348":"code","e3ae189f":"code","30a57448":"code","86f397f4":"code","ae7e4321":"code","1795c1d7":"code","7b90e4f7":"code","0dd46cde":"code","30b020f0":"code","40e84fbd":"code","217ecf72":"code","f18e484a":"code","1fc19685":"code","e840794a":"code","221439b9":"code","7fc11f8b":"code","bb4d7f51":"code","edec9dd5":"code","7d7e44c6":"code","a91659e1":"code","f4f94b22":"code","2d5a002e":"code","c6cb6e2f":"code","64350de1":"code","b7a3e658":"code","f37e91ac":"code","f6ef153d":"code","1c4510a3":"code","d443adba":"code","fa3736fb":"code","75b5f1d8":"code","99f37060":"code","6d092cdf":"code","3385b8e8":"code","cadbfc89":"code","1511c41f":"code","0ecc0f5e":"code","5b368516":"code","c0963d99":"markdown","1ed6c161":"markdown","98e4fcc9":"markdown","b339d345":"markdown","06b3de50":"markdown","10b9663a":"markdown","e8ef8cea":"markdown","510504cc":"markdown","56f56093":"markdown","4ff4707e":"markdown","b59dbeaa":"markdown","a520e6f1":"markdown","2ae2fa6f":"markdown","c29cdf34":"markdown","ab181436":"markdown","bcfe59ac":"markdown","d1abf732":"markdown","0ecee966":"markdown","ba40bd91":"markdown","5dd78f08":"markdown","35727bf5":"markdown","ad7efe93":"markdown","19c28396":"markdown","1e67a474":"markdown","23577211":"markdown","0ce9a916":"markdown","f3ebb7e3":"markdown","7935f363":"markdown","ba882016":"markdown","7e05f595":"markdown","d91690bd":"markdown","2e33bacc":"markdown","b09ffbb3":"markdown","709ed8e7":"markdown","bdc1317b":"markdown","a9e205d3":"markdown","9c6d698f":"markdown","15b7431d":"markdown","3be6d3ca":"markdown","27e324f4":"markdown","09da2449":"markdown","81405d09":"markdown","10463239":"markdown","65d2f046":"markdown","1ea4029b":"markdown","68fc0302":"markdown","6334fc04":"markdown","5785ac82":"markdown","fed0b0ee":"markdown","6509233b":"markdown","b114b8a6":"markdown","f64e551f":"markdown","1d4ea4b7":"markdown","7dbc5f54":"markdown","e8a04cef":"markdown","3ce29e10":"markdown","4833d1ee":"markdown","a505835d":"markdown","34748df1":"markdown","786cffdd":"markdown","7a4f8f1b":"markdown","4d440126":"markdown","5327d68f":"markdown","3cb72951":"markdown","6d78c612":"markdown","dd6ee038":"markdown","661a21de":"markdown","6dbb979f":"markdown","0b20c59d":"markdown","0924d3d2":"markdown","23bed9a2":"markdown","52502faf":"markdown","ee63bcbc":"markdown","cbcd078e":"markdown","93c767ca":"markdown","8eb92bc8":"markdown","bd063b16":"markdown","0ca452e3":"markdown","b7251ba9":"markdown","87290bee":"markdown","2cdae72a":"markdown","62933452":"markdown","9e48a6d3":"markdown","f307212f":"markdown","300162cc":"markdown","b1583485":"markdown","d2057434":"markdown","11b8fd62":"markdown","28981a13":"markdown"},"source":{"1b6b0bfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","905b47df":"import plotly.express as px","aa3ebd79":"#data from https:\/\/github.com\/devbabar\/sales_data_analysis_visualization\ndata1 = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/devbabar\/sales_data_analysis_visualization\/master\/WA_Sales_Products_2012-14.csv\")\ndata1","b0e6f227":"data = data1.sample(n = 100)","a8450702":"px.scatter(data_frame = data)","04b24035":"px.scatter(data_frame = data,\n           x = 'Revenue')","1b3e2367":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity')","e74ec997":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type')","9d86429c":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line')","4bb77743":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity')","7bf9aee4":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country')","2b4b02ee":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country',\n           custom_data = ['Year', 'Quarter'])","0783c608":"px.scatter(data_frame = data,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country',\n           custom_data = ['Year', 'Quarter'],\n           text = 'Order method type')","a5ae2348":"# Removing the clutter for a better graph\n# Removed text attribute and added height attribute.\npx.scatter(data_frame = data,\n           height = 1000,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country',\n           facet_row = 'Order method type')","e3ae189f":"px.scatter(data_frame = data,\n           height = 600,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country',\n           facet_col = 'Order method type')","30a57448":"px.scatter(data_frame = data,\n           height = 1000,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           symbol = 'Product line',\n           size = 'Quantity',\n           hover_name = 'Retailer country',\n           facet_col = 'Order method type',\n           facet_col_wrap = 3)","86f397f4":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 600,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           error_x='Quantity')","ae7e4321":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 600,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           error_y='Quantity')","1795c1d7":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 600,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           error_x='Quantity',\n           error_x_minus='Gross margin')","7b90e4f7":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 1000,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Retailer type',\n           error_y='Quantity',\n           error_y_minus='Gross margin')","0dd46cde":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           range_x = [20000, 50000])","30b020f0":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           range_y = [0, 5000])","40e84fbd":"# Removed few parameter to clean the clutter\n#To understand animation we have group the data and then check\n# The data is grouped so that animation parameter can be understood.\ndf_for_animation = data.groupby(['Retailer type', 'Year'])[['Revenue', 'Quantity']].agg('sum').reset_index()","217ecf72":"fig1 = px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue', \n           color = 'Retailer type', \n           animation_frame = 'Year',\n           range_y = [0,600000])\nfig1","f18e484a":"fig2 = px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue', \n           color = 'Retailer type', \n           animation_frame = 'Year',\n           animation_group = 'Retailer type',\n           range_y = [0,1000000])\nfig2","1fc19685":"px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue',\n           category_orders = {'Retailer type' : \n                              ['Equipment Rental Store', 'Direct Marketing', \n                               'Department Store', 'Warehouse Store', \n                               'Eyewear Store', 'Golf Shop', 'Outdoors Shop', \n                               'Sports Store']\n                             }\n          )","e840794a":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           labels = {'Revenue':'Changed_Name_Xaxis', 'Quantity': 'Changed_Name_Yaxis'})","221439b9":"# This is without the above paramter.\nfig3 = px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue', \n           color = 'Retailer type')\nfig3","7fc11f8b":"fig4 = px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue', \n           color = 'Retailer type',\n           color_discrete_sequence = [\"red\", \"green\", \"blue\", \"goldenrod\", \"magenta\", 'yellow', 'black', 'pink'])\nfig4","bb4d7f51":"fig5 = px.scatter(data_frame = df_for_animation, \n           x = 'Retailer type', \n           y = 'Revenue', \n           color = 'Retailer type',\n           color_discrete_map = {'Equipment Rental Store':'green', \n                                      'Direct Marketing':'blue', \n                                      'Department Store':'goldenrod', \n                                      'Warehouse Store':'magenta', \n                                      'Eyewear Store':'yellow', \n                                      'Golf Shop':'red', \n                                      'Outdoors Shop':'black', \n                                      'Sports Store':'pink'\n                                     }\n                 )\nfig5","edec9dd5":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Revenue',\n           color_continuous_scale = 'viridis')\n\n# color scales - \n#https:\/\/plotly.com\/python\/builtin-colorscales\/","7d7e44c6":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Revenue',\n           range_color = [0,200000])\n\n#This graph is same as above but the range of color on the left is now limited to 200k.","a91659e1":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Revenue',\n           y = 'Quantity',\n           color = 'Revenue',\n           color_continuous_scale = 'viridis',\n           color_continuous_midpoint = 150000)","f4f94b22":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Retailer type',\n           y = 'Revenue',\n           symbol = 'Retailer type',\n           symbol_sequence = ['circle','square-open','cross-open','triangle-ne-open','pentagon-dot','hourglass-open','diamond-x-open','cross-thin-open']\n          )","2d5a002e":"# Removed few parameter to clean the clutter\npx.scatter(data_frame = data,\n           height = 500,\n           x = 'Retailer type', \n           y = 'Revenue',\n           symbol = 'Retailer type',\n           symbol_map = {'Equipment Rental Store':'circle', \n                                      'Direct Marketing':'square-open', \n                                      'Department Store':'cross-open', \n                                      'Warehouse Store':'triangle-ne-open', \n                                      'Eyewear Store':'pentagon-dot', \n                                      'Golf Shop':'hourglass-open', \n                                      'Outdoors Shop':'diamond-x-open', \n                                      'Sports Store':'cross-thin-open'\n                                     }\n          )","c6cb6e2f":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue', \n           color = 'Retailer type',\n           opacity = .4)","64350de1":"px.scatter(data_frame = data, \n           x = 'Year', \n           y = 'Revenue',\n           size = 'Quantity',\n           title = 'Without Max Size')","b7a3e658":"px.scatter(data_frame = data, \n           x = 'Year', \n           y = 'Revenue',\n           size = 'Quantity',\n           size_max = 10,\n           title = 'With Max Size')","f37e91ac":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           marginal_y = 'box')","f6ef153d":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           marginal_x = 'box')","1c4510a3":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           marginal_y = 'box',\n           marginal_x = 'box')","d443adba":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           trendline = 'ols')","fa3736fb":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           color = 'Retailer type',\n           trendline = 'ols')","75b5f1d8":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           trendline = 'ols',\n           trendline_color_override = 'red')","99f37060":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           log_x = True)","6d092cdf":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           log_y = True)","3385b8e8":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           render_mode = 'svg')","cadbfc89":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           title = 'This is a title')","1511c41f":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           title = 'This is a title',\n           template = 'plotly_dark')","0ecc0f5e":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           width = 500)","5b368516":"px.scatter(data_frame = data, \n           x = 'Quantity', \n           y = 'Revenue',\n           height = 300)","c0963d99":"### Parameter 4: *'color'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/> 2.Can be use to grouping.","1ed6c161":"### Parameter 32: *'marginal_y'*\n*This parameter is used for drawing a subplot to visualize y-distribution.*<br\/>\n1.One of 'rug', 'box', 'violin', or 'histogram'","98e4fcc9":"## Parameters\n> 1. data_frame<br\/>\n> 2. X <br\/>\n> 3. Y <br\/>\n> 4. color <br\/>\n> 5. symbol <br\/>\n> 6. size <br\/>\n> 7. hover_name <br\/>\n> 8. custom_data <br\/>\n> 9. text <br\/>\n> 10. facet_row <br\/>\n> 11. facet_col <br\/>\n> 12. facet_col_wrap <br\/>\n> 13. error_x <br\/>\n> 14. error_y <br\/>\n> 15. error_x_minus <br\/>\n> 16. error_y_minus <br\/>\n> 17. range_x <br\/>\n> 18. range_y <br\/>\n> 19. animation_frame <br\/>\n> 20. animation_group <br\/>\n> 21. category_orders <br\/>\n> 22. labels <br\/>\n> 23. color_discrete_sequence <br\/>\n> 24. color_discrete_map <br\/>\n> 25. color_continuous_scale <br\/>\n> 26. range_color <br\/>\n> 27. color_continuous_midpoint <br\/>\n> 28. symbol_sequence <br\/>\n> 29. symbol_map <br\/>\n> 30. opacity <br\/>\n> 31. size_max <br\/>\n> 32. marginal_y <br\/>\n> 33. marginal_x <br\/>\n> 34. trendline <br\/>\n> 35. trendline_color_override <br\/>\n> 36. log_x <br\/>\n> 37. log_y <br\/>\n> 38. render_mode <br\/>\n> 39. title <br\/>\n> 40. template <br\/>\n> 41. width <br\/>\n> 42. height <br\/>","b339d345":"### Parameter 7: *'hover_name'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/> 2.The values in here appear **bold** in tooltip.","06b3de50":"### Parameter 37: *'log_y'*\n*This parameter is used for changing the scale of y-axis.*<br\/>\n1.A Boolean value","10b9663a":"### >> The retailer country is also available explicitly.","e8ef8cea":"### >> Beautiful lines in different groups showing relation among them.","510504cc":"### >> The error bars showing variation in y - direction!!! ","56f56093":"### >> Can you find now which product line is producing what revenue with what retailer.","4ff4707e":"### Parameter 34: *'trendline'*\n*This parameter is used for drawing a line depicting the regression trend.*<br\/>\n1.One of 'ols' or 'lowess'","b59dbeaa":"### >> A trendline can your desired color too.","a520e6f1":"### >> let's fit out plot according to our needs. Use width!","2ae2fa6f":"### >> Using Color, can you differentiante which one has made highest revenue or selling more.[](http:\/\/)","c29cdf34":"# Plotly Express Scatter Visualization\n#### This tutorial will guide you through every parameter which is available on official documentation step by step.","ab181436":"### Parameter 16: *'error_y_minus'*\n1.This is basically representation of variability in data and is used for Standard Deviation, Mean errors, Variations, etc. <br\/>2.Size the error bars in negatve direction. <br\/>3.Either name of the columns or array-like.<br\/>4.Need **error_y** to be defined.","bcfe59ac":"### Parameter 33: *'marginal_x'*\n*This parameter is used for drawing a subplot to visualize x-distribution.*<br\/>\n1.One of 'rug', 'box', 'violin', or 'histogram'","d1abf732":"### Parameter 2: *'X'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/>2.Values from this are used on x-axis","0ecee966":"### >> This is for y-axis!","ba40bd91":"### >> Can be helpful if you need to focus on only a portion of data in y-direction.","5dd78f08":"### >> The error bar has its length,vertically, skewed depending on the values of *gross margin*. ","35727bf5":"## >> We have an extra plot on y-axis which shows distribution of data of y-axis.","ad7efe93":"### >> This is a bad plot, but can you see the method produced highest revenue. Let's make this using our next parameter for a cleaner graph.","19c28396":"### >> The error bars showing variation in x - direction, but what if you have to check it in y-direction. It's what you just thought of!!!","1e67a474":"### >> We have an extra plot on x-axis which shows distribution of data of x-axis.","23577211":"### >> Can be helpful if you need to focus on only a portion of data in x-direction.","0ce9a916":"### Parameter 40: *'template'*\n*This parameter is controls the template theme of the plot*<br\/> [Refer Templates](https:\/\/plotly.com\/python\/templates\/)","f3ebb7e3":"### >> Pretty Much the same information as previous one, but in a different manner. But you to have control on the number of columns in each row.","7935f363":"### Parameter 27: *'color_continuous_midpoint'*\n*This parameter is used to declare a mid point, which acts as a centre of the range of color scale.*<br\/>\n1.An integer value.<br\/>2.Works well on color continous scale.","ba882016":"### Parameter 14: *'error_y'*\n1.This is basically representation of variability in data and is used for Standard Deviation, Mean errors, Variations, etc.","7e05f595":"### Parameter 38: *'render_mode'*\n*This parameter is controls how does the browser renders the plot.*<br\/>\n1.One of 'auto', 'svg' or 'webgl', default 'auto'","d91690bd":"### Parameter 35: *'trendline_color_override'*\n*This parameter is used for coloring the line depicting the regression trend.*<br\/>\n1.A Valid CSS color","2e33bacc":"### Parameter 17: *'range_x'*\n1.The range of x axis can be defined. <br\/>2. List of two numbers","b09ffbb3":"### Parameter 29: *'symbol_map'*\n*This parameter is used to define symbol map for features in a data.*<br\/>\n1.Dictionary type of entry - symbols from [plotly.js symbols](https:\/\/plotly.com\/javascript\/reference\/#scatter-marker-symbol)","709ed8e7":"### Parameter 5: *'symbol'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/> 2.Can be use to grouping.","bdc1317b":"### Parameter 24: *'color_discrete_map'*\n*This does the same this as above but this parameter maps the color on the element you specify.*<br\/>\n1.String values of valid css color.<br\/>2.Override parameter 21 - color_discrete_sequence","a9e205d3":"### >> We like themes and so why not try different ones which can be more compelling.","9c6d698f":"### Parameter 12: *'facet_col_wrap'*\n1.Number of columns.","15b7431d":"### >> The difference is evident in the diameters of the circles.","3be6d3ca":"### >> What is your plot showing? Give it a title!","27e324f4":"### Parameter 42: *'height'*\n*This parameter is controls the height of the plot.*<br\/>","09da2449":"### >> Do you see any size difference with the quantity.","81405d09":"### Parameter 11: *'facet_col'*\n1.Names of columns in the dataframe or pandas series or array like object. <br\/>2.Produce facetted subplots horizontally.","10463239":"### Parameter 30: *'opacity'*\n*This parameter is used for defining opacity.*<br\/>\n1.Float value in range 0 to 1.","65d2f046":"### Parameter 26: *'range_color'*\n*This paramter is used to declare a range through with color scale should stretch.*<br\/>\n1.list of two values selected from the column of graph which carries color.","1ea4029b":"### >> The x-axis has it order changed according to the values we set.","68fc0302":"### >> A beautiful line showing relation in two data features.","6334fc04":"### >> The error bar has its length skewed,horizontally, depending on the values of *gross margin*. ","5785ac82":"### >> The height can also be controlled by you.","fed0b0ee":"### Parameter 18: *'range_y'*\n1.The range of y axis can be defined. <br\/>2. List of two numbers","6509233b":"### >> That's a beautiful plot!!!","b114b8a6":"### >> The Retailer types now have colors defined according to our desire.","f64e551f":"### >> Voila! A plot!!! But we did not add y-axis. That's our third parameter.","1d4ea4b7":"### Parameter 31: *'size_max'*\n*This parameter is used for limiting the size of the marker.*<br\/>\n1.Used along with size paramter.","7dbc5f54":"### Parameter 19: *'animation_frame'*\n1.The range of x axis can be defined. <br\/>2. List of two numbers","e8a04cef":"### Parameter 25: *'color_continuous_scale'*\n*This paramter is used to display numeric data, generally, as numeric data is continous most of the time.*<br\/>\n1.String values of valid css color.","3ce29e10":"### Parameter 23: *'color_discrete_sequence'*\n1.A list of color in a sequence to be assigned.","4833d1ee":"### >> Did you see the difference in the animation with parameter 19 and animation with parameter 20. ","a505835d":"## Scatter Plot\n[Official Documentation](https:\/\/plotly.com\/python-api-reference\/generated\/plotly.express.scatter.html#plotly.express.scatter) on Plotly **scatter** plot.","34748df1":"## Next - Scatter_3d","786cffdd":"### Parameter 9: *'text'*\n1.Names of columns in the dataframe or pandas series or array like object. <br\/>2.They appear as text label in figure","7a4f8f1b":"### >> Sometimes, the data can overwhleming, but we have log scale for us. This is of x-axis!","4d440126":"### >> The Color is spread acccording the mid point we declared.","5327d68f":"### >> The way your plot should render can also be controlled by you!","3cb72951":"### Parameter 20: *'animation_group'*\n1.Names of the columns, str. <br\/>2. Maintain object consistency throughout frames. (Link)","6d78c612":"### Parameter 3: *'Y'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/>2.Values from this are used on Y-axis","dd6ee038":"### >> We have two subplots along x-axis and y-axis showing distribution of x-axis and y-axis data.","661a21de":"### >> Different symbols can be decalred in any sequence to different features to make a compelling plot. But what if you need to maintain a cleaner code to keep a track of which feature has which symbol. It's our next parameter.","6dbb979f":"### >> Well, we have divided the graph in different rows or 'method types'(a column in the data). Let's have this horizontally!","0b20c59d":"### Parameter 41: *'width'*\n*This parameter is controls the width of the plot.*<br\/>","0924d3d2":"### >> I do not know what it did.","23bed9a2":"### >> The color of the markers is lighter and more markers can be counted now.","52502faf":"### Parameter 8: *'custom_data'*\n1.List of str - names of columns in the dataframe or pandas series or array like object.","ee63bcbc":"### >> Isn't is a pretty clean plot!!!","cbcd078e":"### Parameter 39: *'title'*\n*This parameter is controls what should be the title of the plot.'*","93c767ca":"### Parameter 21: *'category_orders'*\n1.Dictionary to put the category in desired order. <br\/>2.The x-axis is ordered in alphabetical order if order not defined.","8eb92bc8":"### Parameter 15: *'error_x_minus'*\n1.This is basically representation of variability in data and is used for Standard Deviation, Mean errors, Variations, etc. <br\/>2.Size the error bars in negatve direction. <br\/>3.Either name of the columns or array-like.<br\/>4.Need **error_x** to be defined.","bd063b16":"### >> Off course, Nothing is plotted. You did not tell the library what to plot, which brings us to our second parameter.","0ca452e3":"### Parameter 22: *'labels'*\n1.Dictionary of the columns names to be overridden","b7251ba9":"### Parameter 28: *'symbol_sequence'*\n*This parameter is used to define symbols in a sequence.*<br\/>\n1.list of strings from [plotly.js symbols](https:\/\/plotly.com\/javascript\/reference\/#scatter-marker-symbol)<br\/>2.Use Symbol parameter to group.","87290bee":"### >> With a lot of data points color scaling can be useful for segmentation.","2cdae72a":"### >> Now we have the color we want and the sequence we want.","62933452":"### >> We have desired symbols of our features and also can check the code for a faster search of what is mapped to what.","9e48a6d3":"### Parameter 13: *'error_x'*\n1.This is basically representation of variability in data and is used for Standard Deviation, Mean errors, Variations, etc.<br\/>2.Either the name of the columns or serier or array-like","f307212f":"### Parameter 10: *'facet_row'*\n1.Names of columns in the dataframe or pandas series or array like object. <br\/>2.Produce facetted subplots vertically.","300162cc":"### >> We just changed x-axis label's and y-axis label's text.","b1583485":"### Parameter 6: *'size'*\n1.Name of a column in the dataframe or pandas series or array like object.<br\/> 2.Mark for sizing.","d2057434":"### Parameter 36: *'log_x'*\n*This parameter is used for changing the scale of x-axis.*<br\/>\n1.A Boolean value","11b8fd62":"### Parameter 1: *'data_frame'*\n*This parameter is used to feed the plot with different data features.*\n1.Need for column names. <br\/>2.Optional","28981a13":"##### With applying sequence color."}}