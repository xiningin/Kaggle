{"cell_type":{"832cf115":"code","e6a41527":"code","773df280":"code","542d2022":"code","68f577d2":"code","c1a4b862":"code","f0364604":"code","2d8698e4":"code","19098bff":"code","f515deea":"code","d22f4087":"code","c3ae1dde":"code","eef41f77":"code","b0506400":"code","d71df077":"code","40948ada":"code","1c0783db":"code","413fc593":"code","c88bf0eb":"markdown","9a92e52c":"markdown","3a1eb919":"markdown","bd8a4f30":"markdown","98169e24":"markdown","7ea86569":"markdown","7a568607":"markdown","e714f231":"markdown","187d6363":"markdown","dae4e2d1":"markdown","16ae460d":"markdown","ddd30f64":"markdown","7722d3f2":"markdown","ba40f0eb":"markdown","b93ddf1e":"markdown","925d7e5a":"markdown","24d576f2":"markdown","7c27b7b9":"markdown","493056d7":"markdown","90d07df8":"markdown"},"source":{"832cf115":"\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","e6a41527":"df=pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')\ndf.head()","773df280":"df.info()","542d2022":"\nnumeric=df.select_dtypes(exclude=['object'])\ncategoric=df.select_dtypes(include=['object'])\nnumeric.info()","68f577d2":"categoric.info()","c1a4b862":"categoric.nunique()","f0364604":"plt.figure(figsize=(10,10))\nsns.distplot(df['SalePrice'])","2d8698e4":"bk=df[['SalePrice','SaleType','SaleCondition']]\nfor i in bk.columns[1:]:\n    sns.set(font_scale=2)\n    fig, ax = plt.subplots()\n    fig.set_size_inches(20,10)\n    sale=sns.swarmplot(y='SalePrice', x=i, data=bk)\n    sale.set_xticklabels(sale.get_xticklabels(),rotation=90)\n    ","19098bff":"#drawing box plots for all the columns of the locality\nlocality=df[['SalePrice','Neighborhood','Alley','Street','MSZoning']]\nfor i in locality.columns[1:]: \n    sns.set(font_scale=2)\n    fig,ax= plt.subplots()\n    fig.set_size_inches(20,10)\n    sale=sns.violinplot(y='SalePrice', x=i, data=locality)\n    sale.set_xticklabels(sale.get_xticklabels(),rotation=90)","f515deea":"prop=df[['SalePrice','PoolQC','FireplaceQu','CentralAir','Heating','HeatingQC','Electrical','KitchenQual','LotShape','Utilities','Fence','Functional','GarageType','BldgType','HouseStyle','RoofStyle']]\nfor i in prop.columns[1:]: \n    sns.set(font_scale=2)\n    fig,ax= plt.subplots()\n    fig.set_size_inches(20,10)\n    sale=sns.boxplot(y='SalePrice',x=i,data=prop)\n    sale.set_xticklabels(sale.get_xticklabels(),rotation=90)","d22f4087":"numeric.isnull().sum()","c3ae1dde":"numeric['LotFrontage'].replace({np.nan:numeric.LotFrontage.mean()},inplace=True)\nnumeric['GarageYrBlt'].replace({np.nan:numeric.GarageYrBlt.mean()},inplace=True)","eef41f77":"sns.set(font_scale=1)\nnumeric.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);","b0506400":"for i in numeric.columns[1:]: \n    sns.set(font_scale=2)\n    fig,ax= plt.subplots()\n    fig.set_size_inches(20,10)\n    sp=sns.scatterplot(y='SalePrice',x=i,data=numeric)\n    sp.set_xticklabels(sale.get_xticklabels(),rotation=90);","d71df077":"import datetime\nnow=datetime.datetime.now()\ndf['ageofbuilding']=now.year-df['YearBuilt']\nplt.figure(figsize=(20,10))\nsns.distplot(df['ageofbuilding'],kde=True)\n","40948ada":"plt.figure(figsize=(20,10))\nsns.set(font_scale=1)\nya=sns.stripplot(y='SalePrice',x='ageofbuilding',data=df)\nya.set_xticklabels(ya.get_xticklabels(),rotation=90);","1c0783db":"sns.set(font_scale=2)\nplt.figure(figsize=(25,10))\nsns.heatmap(numeric.corr())","413fc593":"cr=numeric.corr()\ncr['SalePrice'].sort_values(ascending=False)","c88bf0eb":"#Separating the numeric data from the categorical data","9a92e52c":"The price predominantly ranges between 100000 to 300000","3a1eb919":"Checking the missing values of each column of numeric data","bd8a4f30":"Comparing all the numeric data with saleprice (Bivariate Analysis)","98169e24":"Plotting the histogram for all the numeric data (Univariate Analysis)","7ea86569":"Since it is difficult to identify the most correlated columns, using sort to predict the columns with highest correlation with saleprice","7a568607":"STUDIES BASED ON CATEGORICAL DATA","e714f231":"**Correlation Analysis**\nStudies on the Correlation between the numerical values, inorder to predict the relationship between the saleprice and the other columns","187d6363":"There is one column called Year Built,","dae4e2d1":"Relationship between the price, sale type and sale condition","16ae460d":"Based on the year the house is built, we can predict the age of the building","ddd30f64":"Results based on Neighborhood and SalePrice\n\n1)NridgHt and StoneBr are the expensive neighborhoods 2)MeadowV is the cheapest neighborhood\n\nResults based on Alley\n1)Grvl has houses in the range of 1 lakh and 1.5 lakh\n2)Pave has houses in the range of 1.5 lakh to 2 lakh\n\n","7722d3f2":"Replacing the missing values with mean of the data","ba40f0eb":"#Establishing the relationship between the properties of the houses and the Sale price ","b93ddf1e":"Comparing the age of the Building with the SalePrice","925d7e5a":"Establishing the relationship between the saleprice and locality","24d576f2":"The most asked question before buying a house will be the cost of the plot. Hence, starting with the sale price","7c27b7b9":"Importing libraries","493056d7":"STUDIES BASED ON NUMERIC DATA","90d07df8":"**Reading the files**"}}