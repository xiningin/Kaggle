{"cell_type":{"0bb1157a":"code","2a286f10":"code","2dba649d":"code","3102d0e5":"code","c33eb5c2":"code","918c2501":"code","37f6a079":"code","f8e16afa":"code","e49d07c5":"code","f2a12dab":"code","fb8a3b89":"code","29392b3b":"code","1dd6d9dd":"code","2551bc5c":"code","217a03f2":"code","d0d21381":"code","a33a1082":"code","d8dd73f6":"code","8d10b06c":"code","e694fdce":"code","55353323":"markdown","9ba4ed58":"markdown","3ba9b34e":"markdown","c074b8a6":"markdown","4971ad19":"markdown","a82e3540":"markdown"},"source":{"0bb1157a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","2a286f10":"# \u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u5927\u307e\u304b\u306b\u628a\u63e1\u3059\u308b\nimport pandas_profiling\ntrain.profile_report()","2dba649d":"train.head()","3102d0e5":"# train\u3068\u6bd4\u3079\u308b\u3068Survived\u30ab\u30e9\u30e0\u304c\u306a\u3044\ntest.head()","c33eb5c2":"# \u7279\u5fb4\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\n# Sex\u30ab\u30e9\u30e0\u306emale, female\u30920, 1\u306b\u5909\u63db\ndata = pd.concat([train, test], sort=False)\ndata['Sex'].replace(['male', 'female'], [0, 1], inplace=True)","918c2501":"# \u6b20\u640d\u5024\u3092\u7a74\u57cb\u3081\u3059\u308b\u51e6\u7406\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)","37f6a079":"data['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)","f8e16afa":"age_avg = data['Age'].mean()\nage_std = data['Age'].std()\n\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)","e49d07c5":"data.head()","f2a12dab":"# submit\u306e\u6e96\u5099\ndelete_columns = ['Name', 'PassengerId', 'SibSp', 'Parch', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)","fb8a3b89":"data.head()","29392b3b":"# \u5b66\u7fd2\ntrain = data[:len(train)]\ntest = data[len(train):]","1dd6d9dd":"y_train = train['Survived']\nx_train = train.drop('Survived', axis=1)\nx_test = test.drop('Survived', axis=1)","2551bc5c":"x_train.head()","217a03f2":"y_train.head()","d0d21381":"from sklearn.linear_model import LogisticRegression","a33a1082":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)","d8dd73f6":"model.fit(x_train, y_train)","8d10b06c":"y_pred = model.predict(x_test)","e694fdce":"submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')\nsubmission['Survived'] = list(map(int, y_pred))\nsubmission.to_csv('submission.csv', index=False)","55353323":"2. Sex","9ba4ed58":"## \u63d0\u51fa","3ba9b34e":"3. Fare","c074b8a6":"4. Embarked","4971ad19":"## \u5b66\u7fd2","a82e3540":"5.Age"}}