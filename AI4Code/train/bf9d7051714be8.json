{"cell_type":{"de214bba":"code","dc4a0a43":"code","d160b49d":"code","9fbaeea9":"code","3efd2840":"code","b179ca47":"code","39787a2c":"code","2072e29a":"code","0e65cab8":"code","11aaf478":"code","4957869e":"code","4afb2b86":"code","45f523ec":"code","5b62e5b5":"code","7381a4b6":"code","cdd30d3b":"code","b2762da9":"code","03be1445":"code","2d80d69e":"code","44a82f2f":"code","e53a963d":"code","b978d814":"code","da5447d4":"code","c0b22b95":"code","48f7da37":"code","5eaa5868":"code","05cf9bfa":"code","00885eed":"code","6ace9b65":"code","e7b2eaf7":"code","909ca9f5":"code","bf71600c":"code","a689b7c0":"markdown","899784f8":"markdown","025c7bab":"markdown","7e6dc566":"markdown","55fb9778":"markdown","d4f57ed1":"markdown","3c83667e":"markdown","82513061":"markdown","e5e569d4":"markdown","eee66f3e":"markdown","c7dee696":"markdown","0def10a2":"markdown","56139723":"markdown","2327bb9e":"markdown","1f4d9579":"markdown","30e4f8aa":"markdown","32aad6e3":"markdown","baa7accd":"markdown","b9253b13":"markdown","f5cce3cd":"markdown","af562352":"markdown","50785600":"markdown","cd8c0064":"markdown"},"source":{"de214bba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc4a0a43":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nimport plotly.io as pio\npio.renderers.default = 'iframe'\n\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","d160b49d":"df = pd.read_csv('..\/input\/udemy-courses\/udemy_courses.csv')\ndf.head(2)","9fbaeea9":"df.shape","3efd2840":"df.info()","b179ca47":"df.isnull().sum()","39787a2c":"df.describe()","2072e29a":"df[\"date\"] = pd.to_datetime(df[\"published_timestamp\"])","0e65cab8":"df1 = df.drop([\"course_id\", \"url\", \"published_timestamp\"], axis = 1).copy()\ndf1.sample(2)","11aaf478":"df1.describe()","4957869e":"fig = px.histogram(df, x =\"price\", title = 'Price & UDEMY Courses')\nfig.show()","4afb2b86":"fig = px.box(df1, x =\"num_lectures\", hover_data= df1[[\"course_title\", \"subject\",\"content_duration\", \"price\", ]])\nfig.update_traces(quartilemethod = \"inclusive\")\nfig.show()","45f523ec":"fig = px.histogram(df, x= 'num_subscribers', title='Number of Subscribers of UDEMY Courses')\n\nfig.show()","5b62e5b5":"fig = px.histogram(df1, x= 'num_lectures', title='Number of Lectures of UDEMY Courses')\n\nfig.show()","7381a4b6":"fig = px.histogram(df1, x= 'content_duration', title='Durations of UDEMY Courses')\n\nfig.show()","cdd30d3b":"fig = px.histogram(df1, x= 'num_reviews', title='Number of Reviews of UDEMY Courses')\n\nfig.show()","b2762da9":"df1.corr()","03be1445":"sns.heatmap(df1.corr(), annot = True)","2d80d69e":"df1.subject.value_counts(normalize=True)","44a82f2f":"fig = px.histogram(df1, x =\"subject\", title =\"Subject Of Udemy Course\")\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","e53a963d":"df1['year']= df1['date'].dt.year\n\nsubj_year = df1.groupby('year')['subject'].value_counts().reset_index(level=0).rename(columns={'subject': 'subject count'}, index={'index': 'Subject'})\nsubj_year","b978d814":"fig = px.line(subj_year, x='year', y='subject count', color= subj_year.index, title='UDEMY Courses & Each Year')\nfig.show()","da5447d4":"df1['level'].value_counts(normalize=True)","c0b22b95":"fig = px.histogram(df1, x=\"level\", title='Course Count by Level of Courses')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","48f7da37":"df2= df1.groupby('year')[['num_subscribers','num_reviews','num_lectures']].sum().reset_index()\ndf2","5eaa5868":"fig = px.line(df2, x='year', y=['num_subscribers','num_reviews','num_lectures'])\nfig.show()","05cf9bfa":"paid_year = df1.groupby('year')['is_paid'].value_counts().reset_index(level=0).rename(columns={'is_paid': 'paid_free count'}, index={'index': 'is_paid'})\npaid_year","00885eed":"fig = px.line(paid_year, x='year', y='paid_free count', color= paid_year.index)\nfig.show()","6ace9b65":"top15_free =  df1[df1['price']==0][['course_title','year','subject',\n                                  'num_subscribers']].sort_values(by= 'num_subscribers',\n                                                                  ascending=False).head(15)\ntop15_free","e7b2eaf7":"fig = px.bar(top15_free, y= 'num_subscribers', x='course_title', \n             hover_data = top15_free[['year','subject']], \n             color='subject')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","909ca9f5":"top15_exp = df1[['course_title','year',\n                'subject','num_subscribers', 'price']].sort_values(by=['price','num_subscribers'], \n                                                                   ascending=False).head(15)\n\ntop15_exp","bf71600c":"fig = px.bar(top15_exp , y= 'num_subscribers', x='course_title', hover_data = top15_exp[['price','year']], color='subject')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","a689b7c0":"* Number of Subscribers","899784f8":"* values of course & it's levels","025c7bab":"* line chart, courses, sunject & each year","7e6dc566":"* dropping the columns that no need..\n* check the dataset with sampling..","55fb9778":"* all the best\n* thank you for your time","d4f57ed1":"* creating a new column using \"published_timestamp\"","3c83667e":"* used the plotly all chart in this notebook\n* Price & UDEMY Courses","82513061":"* correlation of the values, matrix table","e5e569d4":"* set the new dataframe\n* course & subscribers & reviews & lectures in years","eee66f3e":"* examine the descriptive values of dataset","c7dee696":"* prices & courses","0def10a2":"* examine the subject of the courses","56139723":"* also can be check descriptives in boxplot","2327bb9e":"* check the values of date column\n\n* create a new column named 'year'\n* for evalute year&subject create a variable 'subj_year'\n* check the values of date column","1f4d9579":"* Number of Reviews","30e4f8aa":"* subject's histogram","32aad6e3":"* top expensive courses","baa7accd":"* notice that no null vales in dataset. many times can not be seen like clean data..","b9253b13":"* Number of lecturs","f5cce3cd":"* duration of the courses","af562352":"* heatmap via seaborn about values","50785600":"* start to examine the dataset","cd8c0064":"* top free courses"}}