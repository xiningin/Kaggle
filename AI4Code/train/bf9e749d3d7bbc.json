{"cell_type":{"67b5c5ce":"code","62849a24":"code","fe9bc8b8":"code","5a341f42":"markdown","32dd7210":"markdown"},"source":{"67b5c5ce":"%%writefile submission.py\nimport re\nimport random\nimport pydash\nfrom itertools import combinations_with_replacement\n\nactions = list(combinations_with_replacement([2,1,0,2,1,0],3)) * 18\n# random.shuffle(actions)\nprint('len(actions)',len(actions))\nprint(actions)\nactions = pydash.flatten(actions)\n\n# observation   =  {'step': 1, 'lastOpponentAction': 1}\n# configuration =  {'episodeSteps': 10, 'agentTimeout': 60, 'actTimeout': 1, 'runTimeout': 1200, 'isProduction': False, 'signs': 3}\ndef kaggle_agent(observation, configuration):    \n    action = actions[observation.step] % configuration.signs\n    return int(action)","62849a24":"%run -i 'submission.py'","fe9bc8b8":"from kaggle_environments import make\nimport random\n\nenv = make(\"rps\", configuration={\"episodeSteps\": 20}, debug=True)\nenv.run([\"submission.py\", lambda obs, conf: random.randint(0, 2)])\n# env.run([\"submission.py\", rock_agent])\nprint(env.render(mode=\"ipython\", width=600, height=600))","5a341f42":"# Rock Paper Scissors - De Bruijn Sequence\n\nThis implements a [De Bruijn Sequence](https:\/\/en.wikipedia.org\/wiki\/De_Bruijn_sequence) of moves.\n\nThis is a deterministic move order bot, which will play every move an equal number of times, which should be equlivant a Nash Equlibrium random bot\n\nThe idea however is to trap agents looking for statistical patterns that don't actually exist","32dd7210":"# Further Reading\n\nThis notebook is part of a series exploring Rock Paper Scissors:\n- [Rock Paper Scissors - PI Bot](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-pi-bot)\n- [Rock Paper Scissors - De Bruijn Sequence](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-de-bruijn-sequence)\n- [Rock Paper Scissors - Random Agent](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-random-agent)\n- [Rock Paper Scissors - Weighted Random Agent](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-weighted-random-agent)\n- [Rock Paper Scissors - Statistical Prediction](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-statistical-prediction)\n- [Rock Paper Scissors - Random Seed Search](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-random-seed-search)\n- [Rock Paper Scissors - RNG Statistics](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-rng-statistics)\n- [Rock Paper Scissors - XGBoost](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-xgboost)\n- [Rock Paper Scissors - Decision Tree](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-scissors-decision-tree)"}}