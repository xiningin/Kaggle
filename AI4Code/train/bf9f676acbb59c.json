{"cell_type":{"56abd53d":"code","215c53a8":"code","0803ddb8":"code","2df5f157":"code","0c185a47":"code","23682d3e":"code","6f4f8dbb":"code","0a5343bb":"code","ff86180a":"code","f5bcd83a":"code","81d97203":"code","5d30600b":"code","b4cbd45e":"code","0e65993e":"code","c0805d18":"code","9cefa2b0":"code","a33b7b1d":"code","af898d15":"code","13eec810":"code","2fcb8d43":"code","9e403492":"code","77108361":"code","1b0e5e82":"code","b0293f01":"code","12ddc585":"code","8b9216e3":"code","ef299036":"code","1cc4dd36":"code","d963d939":"code","d273a9b5":"code","e5905096":"code","2594e06a":"code","cdb05103":"code","5ab0da05":"code","3b133659":"code","b983889e":"code","7b8c2ae2":"code","d563e4c1":"code","324aa132":"code","dbd1a5ba":"code","a5ad3e18":"code","90c7325b":"code","5da5131f":"code","fb4cbd2c":"code","018f42f2":"code","0cd26ad2":"markdown","aa0050b8":"markdown","b34450dd":"markdown","93cb5948":"markdown","8051fe1d":"markdown","09e484e1":"markdown","78ad7329":"markdown","7f78287a":"markdown","50d1362b":"markdown","321ff593":"markdown","1c6f9044":"markdown","5474cc76":"markdown","c5dc0ae7":"markdown","a0830235":"markdown","4c09ba43":"markdown","8e842704":"markdown","e9a9560a":"markdown","422da5db":"markdown","c1ecbae5":"markdown","b77d9ec7":"markdown","ba8bd91a":"markdown","f40fcb43":"markdown","5617d52b":"markdown","4e83994a":"markdown","5ebab0d7":"markdown","dbc94e88":"markdown","56a7dca9":"markdown","9e7068f4":"markdown","f0908d15":"markdown","519ebe0e":"markdown","64f2e778":"markdown","600ebc2b":"markdown","2636b317":"markdown","a45d064c":"markdown","5bdc7054":"markdown","7b85ab27":"markdown","3e22761c":"markdown","b5b396c5":"markdown","4e8df4db":"markdown","3b0eea28":"markdown","f1ec29a9":"markdown","17e5b220":"markdown","41daeb84":"markdown","08c94e12":"markdown","12696d5f":"markdown","c1e0739c":"markdown","a4b57178":"markdown","b38750bb":"markdown","92002411":"markdown","3f47217c":"markdown","4d17f994":"markdown","f2d7c8ac":"markdown","b3a46191":"markdown","9b7beb94":"markdown","ed32db1e":"markdown","55514a02":"markdown","62546ba5":"markdown","a7e7246b":"markdown","280b101f":"markdown","abe85541":"markdown","3533b583":"markdown","2fcef2e1":"markdown","02ff5f26":"markdown","8f044af6":"markdown","47f2f0cf":"markdown","961f1aa1":"markdown","80bb020b":"markdown","c25d8d69":"markdown","9509dd73":"markdown","969ea6f3":"markdown","626968f1":"markdown","f96b951a":"markdown","e3de40cc":"markdown","cae1b5ba":"markdown","7fec5045":"markdown","75c321bb":"markdown","a7f8c0ad":"markdown"},"source":{"56abd53d":"import pandas as pd # para lidar com a base de dados\nimport sklearn # para poder usar o classificador KNN\nimport numpy as np\nimport matplotlib.pyplot as plt # plotar os gr\u00e1ficos\nimport seaborn as sns # tamb\u00e9m para plotar gr\u00e1ficos, mais ligada a datasets","215c53a8":"train_data = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\", index_col=['Id'], na_values=\"?\")","0803ddb8":"train_data.shape","2df5f157":"train_data.tail(n=5)","0c185a47":"train_data.info()","23682d3e":"train_data.describe(include = [np.number])","6f4f8dbb":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"age\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","0a5343bb":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"fnlwgt\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","ff86180a":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"education.num\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","f5bcd83a":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"capital.gain\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","81d97203":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"capital.loss\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","5d30600b":"custom_palette = sns.color_palette(\"Set1\", 10) # Ajustar para cores mais agrad\u00e1veis\nsns.catplot(x=\"hours.per.week\", y=\"income\", kind=\"violin\", split=True, data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","b4cbd45e":"sns.catplot(x=\"hours.per.week\", y=\"income\", kind=\"boxen\", data=train_data, palette = [custom_palette[1],custom_palette[2]], aspect=2)","0e65993e":"train_data.describe(exclude = [np.number])","c0805d18":"sns.catplot( x = \"race\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=1)\nplt.xticks(rotation=30)","9cefa2b0":"def sum_groups(cluster):\n    k = 0\n    j = 0\n    for value in cluster:\n        if value == '<=50K':\n            k += 1\n        else:\n            j += 1   \n    return k, j\n\n# Branca\n\nprimeiro_cluster = train_data.loc[(train_data['race'] == 'White')].income\nprimeiro_cluster.values\n\n%matplotlib inline\ncores_grafico = [custom_palette[1],custom_palette[2]]\nfig, ax = plt.subplots(figsize=(6,5), subplot_kw= dict(aspect='equal'))\nax.pie(sum_groups(primeiro_cluster.values), autopct='%1.1f%%', pctdistance=1.2, colors=cores_grafico, wedgeprops=dict(width=1, edgecolor='w'))\nax.set_title('Distribui\u00e7\u00e3o da renda para race White')\nplt.legend(['<=50K', '>50K'])\nplt.show()\n\n# Asiatica\n\nprimeiro_cluster = train_data.loc[(train_data['race'] == 'Asian-Pac-Islander')].income\nprimeiro_cluster.values\n\n%matplotlib inline\ncores_grafico = [custom_palette[1],custom_palette[2]]\nfig, ax = plt.subplots(figsize=(6,5), subplot_kw= dict(aspect='equal'))\nax.pie(sum_groups(primeiro_cluster.values), autopct='%1.1f%%', pctdistance=1.2, colors=cores_grafico, wedgeprops=dict(width=1, edgecolor='w'))\nax.set_title('Distribui\u00e7\u00e3o da renda para race Asian')\nplt.legend(['<=50K', '>50K'])\nplt.show()\n\n# Negra\n\nprimeiro_cluster = train_data.loc[(train_data['race'] == 'Black')].income\nprimeiro_cluster.values\n\n%matplotlib inline\ncores_grafico = [custom_palette[1],custom_palette[2]]\nfig, ax = plt.subplots(figsize=(6,5), subplot_kw= dict(aspect='equal'))\nax.pie(sum_groups(primeiro_cluster.values), autopct='%1.1f%%', pctdistance=1.2, colors=cores_grafico, wedgeprops=dict(width=1, edgecolor='w'))\nax.set_title('Distribui\u00e7\u00e3o da renda para race Black')\nplt.legend(['<=50K', '>50K'])\nplt.show()","a33b7b1d":"sns.catplot( x = \"sex\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=1)\nplt.xticks(rotation=30)","af898d15":"sns.catplot( x = \"workclass\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=2)\nplt.xticks(rotation=30)","13eec810":"sns.catplot( x = \"education\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=2)\nplt.xticks(rotation=30)","2fcb8d43":"sns.catplot( x = \"marital.status\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=1.5)\nplt.xticks(rotation=30)","9e403492":"sns.catplot( x = \"occupation\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=1.5)\nplt.xticks(rotation=30)","77108361":"sns.catplot( x = \"relationship\", hue = \"income\", kind = \"count\", data = train_data, palette = [custom_palette[1],custom_palette[2]],height=5, aspect=1)\nplt.xticks(rotation=30)","1b0e5e82":"train_data[\"native.country\"].value_counts()","b0293f01":"train_data_corr = train_data.copy()","12ddc585":"# Importando o LabelEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\ntrain_data_corr['income'] = LabelEncoder().fit_transform(train_data_corr['income'])\ntrain_data_corr['marital.status'] = LabelEncoder().fit_transform(train_data_corr['marital.status']) \ntrain_data_corr['relationship'] = LabelEncoder().fit_transform(train_data_corr['relationship'])\ntrain_data_corr['race'] = LabelEncoder().fit_transform(train_data_corr['race'])\ntrain_data_corr['sex'] = LabelEncoder().fit_transform(train_data_corr['sex'])","8b9216e3":"plt.figure(figsize=(12,12))\n\nsns.heatmap(train_data_corr.corr().round(3), square = True, annot=True, vmin=-1, vmax=1, cmap='YlGnBu')\nplt.show()","ef299036":"train_data.drop_duplicates(keep='first', inplace = True)","1cc4dd36":"train_data = train_data.drop(['fnlwgt', 'native.country', 'education', 'race'], axis=1)","d963d939":"train_data.isnull().sum()","d273a9b5":"Y_train = train_data.pop(\"income\")\nX_train = train_data","e5905096":"numerical_cols = list(X_train.select_dtypes(include=[np.number]).columns.values)\n\nnumerical_cols.remove('capital.gain')\nnumerical_cols.remove('capital.loss')\n\nsparse_cols = ['capital.gain','capital.loss']\n\ncategorical_cols = list(X_train.select_dtypes(exclude=[np.number]).columns.values)\n\nprint(\"Colunas num\u00e9ricas: \", numerical_cols)\nprint(\"Colunas esparsas: \", sparse_cols)\nprint(\"Colunas categ\u00f3ricas: \", categorical_cols)","2594e06a":"from sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(strategy='most_frequent') #estrat\u00e9gia: susbtituir pela moda","cdb05103":"from sklearn.preprocessing import OneHotEncoder\n\none_hot = OneHotEncoder(sparse=False) ","5ab0da05":"from sklearn.pipeline import Pipeline\n\ncategorical_pipeline = Pipeline(steps = [\n    ('imputer', SimpleImputer(strategy = 'most_frequent')),\n    ('onehot', OneHotEncoder(drop='if_binary'))])","3b133659":"from sklearn.preprocessing import RobustScaler,StandardScaler\n\nsparse_pipeline = Pipeline(steps = [\n    ('scaler', RobustScaler())])\nnumerical_pipeline = Pipeline(steps = [\n    ('scaler', StandardScaler())])","b983889e":"from sklearn.compose import ColumnTransformer\n\n# Cria o nosso Pr\u00e9-Processador\n\n# Cada pipeline est\u00e1 associada a suas respectivas colunas no dataset\npreprocessor = ColumnTransformer(transformers = [\n    ('num', numerical_pipeline, numerical_cols),\n    ('spr', sparse_pipeline, sparse_cols),\n    ('cat', categorical_pipeline, categorical_cols)\n])\n\nX_train = preprocessor.fit_transform(X_train)","7b8c2ae2":"from sklearn.neighbors import KNeighborsClassifier","d563e4c1":"from sklearn.model_selection import cross_val_score\n\n# Quantidades e vizinhos a serem testados\nvizinhos = [15,20,25,30]\n\n# Dicion\u00e1rio que guarda o desempenho de cada k\nneighbors_scores = {}\n\nfor k in vizinhos:\n    # Calcula a m\u00e9dia de acur\u00e1cia de cada classificador\n    score = cross_val_score(KNeighborsClassifier(n_neighbors=k), X_train, Y_train, cv = 5, scoring=\"accuracy\").mean()\n\n    # Guarda essa acur\u00e1cia\n    neighbors_scores[k] = score\n\n# Obt\u00e9m a quantidade de vizinhos com o melhor desempenho\nbest_k = max(neighbors_scores, key=neighbors_scores.get)\n\nprint(\"Hiperpar\u00e2metro com melhor resultado: \", best_k)\nprint(\"Acur\u00e1cia obtida: \", neighbors_scores[best_k])","324aa132":"knn = KNeighborsClassifier(n_neighbors = best_k)\nknn.fit(X_train, Y_train)","dbd1a5ba":"test_data = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\", index_col=['Id'], na_values=\"?\")","a5ad3e18":"X_test = test_data.drop(['fnlwgt', 'native.country', 'education','race'], axis=1)","90c7325b":"X_test = preprocessor.transform(X_test)\npredicao = knn.predict(X_test)\npredicao","5da5131f":"submission = pd.DataFrame()","fb4cbd2c":"submission[0] = test_data.index\nsubmission[1] = predicao\nsubmission.columns = ['Id','income'] #inclus\u00e3o das colunas Id e previs\u00e3o no arquivo\nsubmission.to_csv('submission.csv',index = False) #converte o data frame para um arquivo csv","018f42f2":"submission.head()","0cd26ad2":"Para o atributo pa\u00eds de origem, nota-se que mais de 90% dos entrevistados s\u00e3o estadunidenses, por conseguinte, n\u00e3o \u00e9 apropri\u00e1vel utilizar a var\u00edavel native.country para a classifica\u00e7\u00e3o. ","aa0050b8":"Os dados categ\u00f3ricos podem ser transformados em n\u00fameros por meio do uso do `OneHotEncoder`.","b34450dd":"Como ser\u00e1 visto posterioremente, as vari\u00e1veis *workclass* e *occupation* possuem dados faltantes e isso permite que o comando `LabelEncoder` seja executado. Portanto, os dois atributos n\u00e3o est\u00e3o presentes no *heatmap*.","93cb5948":"#### 4.2.2 Gr\u00e1ficos com atributos Categ\u00f3ricos\n\nA seguir, uma s\u00e9rie de gr\u00e1ficos que mostram como os par\u00e2metros do tipo objeto afetam o r\u00f3tulo (**Income**). Para isso, utilizou-se os gr\u00e1ficos do tipo barra.","8051fe1d":"Observa-se um desbalanceamento dos dados, que est\u00e3o mais concentrados no setor privado. ","09e484e1":"### 4.2 An\u00e1lise de Correla\u00e7\u00e3o","78ad7329":"Os dados esparsos e num\u00e9ricos ser\u00e3o normalizados. Para os dados esparsos e num\u00e9ricos, usa-se, respectivamente, o m\u00e9todo `RobustScaler` e `StandardScaler`.","7f78287a":"Evidencia-se uma tend\u00eancia das pessoas casadas serem mais remuneradas.","50d1362b":"**Relationship**","321ff593":"O comando `shape` fornece o n\u00famero de linhas e colunas do dataset.","1c6f9044":"Ap\u00f3s isso, remove-se as colunas 'fnlwgt', 'naive.country', 'education' e 'race' as quais se mostraram serem pouco relevantes para o r\u00f3tulo.","5474cc76":"Inicia-se o processo de limpeza de dados com a remo\u00e7\u00e3o dos dados duplicados, o que pode ser feito por meio do m\u00e9todo `drop_duplicates`.","c5dc0ae7":"**Native.country**","a0830235":"Assim, percebe-se que a idade \u00e9 um fator relevante para a identifica\u00e7\u00e3o do r\u00f3tulo, pois os gr\u00e1ficos mostram que as pessoas com maior idade s\u00e3o as que ganham mais. ","4c09ba43":"Nota-se que a vari\u00e1vel 'relationship' possui um comportamento similar com a vari\u00e1vel 'marital.status', o que j\u00e1 era de se esperar.","8e842704":"## 3. Base de treino ","e9a9560a":"# PMR3508 - KNN for Dataset Adult\n\n## An\u00e1lise e predi\u00e7\u00e3o de dados do Dataset Adult","422da5db":"Portanto, verifica-se que as horas por semana \u00e9 um fator pertinente para a defini\u00e7\u00e3o do r\u00f3tulo, pois aqueles que ganham mais de 50K s\u00e3o os possuem mais horas de trabalho por semana.","c1ecbae5":"Para se estimar a acur\u00e1cia do modelo proposto, usa-me a chamada **Valida\u00e7\u00e3o Cruzada** ou \"**Cross-Validation**\". Nela, os dados s\u00e3o particionados em k divis\u00f5es e o modelo treina em k-1 delas, ou seja, sempre \u00e9 deixado um livre para que se teste o desempenho. Dessa forma, o processo \u00e9 repetido k vezes e, ao final, obt\u00eam-se uma boa acur\u00e1cia esperada.","b77d9ec7":"Para o tratamento dos valores faltantes ser\u00e1 executada a substitui\u00e7\u00e3o dos valores omissos pela moda.","ba8bd91a":"Para a vari\u00e1vel fnlwgt, as classifica\u00e7\u00f5es (maior ou menor que 50K) s\u00e3o muito semelhantes, logo, esse atributo se mostra pouco relevante para a classifica\u00e7\u00e3o do r\u00f3tulo e, por isso, n\u00e3o ser\u00e1 inclu\u00eddo no KNN.","f40fcb43":"## 5. Limpeza de Dados","5617d52b":"#### 4.2.1 Atributos Categ\u00f3ricos\n\nPara os par\u00e2metros do tipo objeto, a fun\u00e7\u00e3o `describe` retorna:\n* count: n\u00famero de valores (n\u00e3o nulos);\n* unique: quantidade de categorias diferentes;\n* top: a categoria mais frequente;\n* freq: contagens da categ\u00f3ria mais frequente;","4e83994a":"Outra vez a rela\u00e7\u00e3o bem expressiva entre o per\u00edodo de estudos (n\u00edvel de educa\u00e7\u00e3o) e a remunera\u00e7\u00e3o. Como pode ser evidenciado pelo gr\u00e1fico, as pessoas com mestrado e\/ou doutorado que recebem mais de 50K est\u00e3o em maior n\u00famero diante de indiv\u00edduos com o mesmo n\u00edvel de ensino, mas que recebem menos de 50K.","5ebab0d7":"Nesse sentido, h\u00e1 dois tipos de vari\u00e1veis no dataset: num\u00e9ricas e categ\u00f3ricas. Na pr\u00f3xima se\u00e7\u00e3o ser\u00e1 analisado separadamente as duas.","dbc94e88":"## 4. An\u00e1lise de Dados\n\n","56a7dca9":"### 5.2 Dados Faltantes\n\nPrimeiramente, separa-se os dados em X e Y, sendo Y a vari\u00e1vel desejada (**income**) e X as vari\u00e1veis independentes.","9e7068f4":"A sequ\u00eancia de transformadores do scikit-learn \u00e9 explicitada pelo `Pipeline`.","f0908d15":"Remove-se as colunas que anteriormente foram consideradas irrelevantes: 'fnlwgt', 'native.country', 'education' e 'race'.","519ebe0e":"Por fim, o resultado:","64f2e778":"### 7. Dados de teste\n\nPor fim, pode-se agora fazer a predi\u00e7\u00e3o dos dados teste.\n\nPrimeiro, importa-se os dados de tese:","600ebc2b":"**Occupation**","2636b317":"**Workclass**","a45d064c":"#### 6.1 Valida\u00e7\u00e3o Cruzada","5bdc7054":"**Marital.status**","7b85ab27":"Com aux\u00edlio deses gr\u00e1ficos, \u00e9 poss\u00edvel verificar que a propor\u00e7\u00e3o das pessoas que recebem mais de 50K em rela\u00e7\u00e3o \u00e0s pessoas que recebem menos de 50K \u00e9 maior para a popula\u00e7\u00e3o branca e asi\u00e1tica -- mais de 25% para ambas. Em contrapartida, essa percentagem \u00e9 em torno de 12% para a popula\u00e7\u00e3o negra.","3e22761c":"Al\u00e9m disso, para uma melhorar compreens\u00e3o das vari\u00e1veis que est\u00e3o sendo trabalhadas, tem-se o m\u00e9todo `info`, o qual informa o tipo de cada vari\u00e1vel e a quantidade de valores n\u00e3o faltantes na tabela. ","b5b396c5":"Agora, executa o comando `ColumnTransformer` que aplicar\u00e1 as diferentes pipelines em suas respectivas colunas.","4e8df4db":"Dessa forma, a quantidade de vizinhos k que fornece o melhor resultado \u00e9 o 25. Logo, usa-se esse hiperpar\u00e2metro no classificador KNN.","3b0eea28":"**Capital.loss**","f1ec29a9":"#### 4.1.1 Atributos Num\u00e9ricos\n\nPara os valores num\u00e9ricos, a fun\u00e7\u00e3o `describe` retorna algumas estat\u00edsticas mais simples sobre esses dados:\n* count: n\u00famero de valores (n\u00e3o nulos);\n* mean: m\u00e9dia dos valores;\n* std: desvio padr\u00e3o;\n* min: valor m\u00ednimo;\n* 25%: primeiro quartil;\n* 50%: mediana;\n* 75%: terceiro quartil;\n* max: valor m\u00e1ximo;","17e5b220":"Com isso, usa-se o comando `SimpleImputer` para substituir o valor dos dados faltantes pelo valor de maior frequ\u00eancia, ou seja, a moda. ","41daeb84":"O gr\u00e1fico em barra para as diferentes etnias fornece uma compara\u00e7\u00e3o da propor\u00e7\u00e3o das etnias no dataset. Entretanto, n\u00e3o se consegue visualizar com tanta clareza a porcentagem entre os indiv\u00edduos que recebem mais de 50K e os que recebem menos de 50K. Dessa maneira, projeta-se o gr\u00e1fico de pizza para as etnias: white, black e asian.","08c94e12":"**Hours.per.week**","12696d5f":"Ser\u00e1 testado alguns valores do hiperpar\u00e2metro k a fim de obter a quantidade de vizinhos que obt\u00e9m o melhor resultado.","c1e0739c":"O tempo de estudo se mostra ser um atributo pertinente para a classifica\u00e7\u00e3o do income, uma vez que o gr\u00e1fico em verde (income maior que 50K) \u00e9 mais denso para as pessoas que tiveram uma maior dura\u00e7\u00e3o nos estudos. Por outro lado, o gr\u00e1fico em azul (income menor que 50K) apresenta uma distribui\u00e7\u00e3o maior em um menor tempo de estudo.","a4b57178":"Como foi anteriormente comentado no item 4.2.1,  h\u00e1 uma concentra\u00e7\u00e3o de pessoas dos Estados Unidos no dataset -- quase 90%. Dessa maneira, por os dados estarem desbalanceados,a vari\u00e1vel 'native.country' ser\u00e1 exclu\u00edda na classifica\u00e7\u00e3o.  ","b38750bb":"Os atributos est\u00e3o divididos em dois tipos:\n* N\u00famero: age, fnlwgt, education.num, capital.gain, capital.loss, hours.per.week.\n* Objeto: workclass, education, marital.status, occupation, relationship, race, sex, native.coutry.\n\n**Income** (Target) \u00e9 o label da renda anual de cada pessoa e ele \u00e9 o r\u00f3tulo que se deseja prever.","92002411":"Em seguida, seccionaset o data-se em dados num\u00e9ricos, esparsos e categ\u00f3ricos.","3f47217c":"**Age**","4d17f994":"Atesta-se o que foi anteriormente comentado sobre o atributo fnlwgt: ele n\u00e3o possui uma boa correla\u00e7\u00e3o. De fato, o valor do coefiente \u00e9 de -0.009 e est\u00e1 perto de 0, assim, \u00e9 conveniente dizer que o income n\u00e3o depende dessa vari\u00e1vel.\n\nAdemais, a correla\u00e7\u00e3o da coluna 'race' tamb\u00e9m se mostra pequeno, por isso ela tamb\u00e9m ser\u00e1 removida posteriormente da classifica\u00e7\u00e3o.","f2d7c8ac":"**Sex**","b3a46191":"**Education.num**","9b7beb94":"## 6. Modelo preditivo\n\nTerminado a limpeza e o pr\u00e9-processamento ds dados, pode-se, finalmente, aplicar o modelo de predi\u00e7\u00e3o -- **classificador KNN**.\n\nPara utilizar esse modelo, executa-se a classe `KNeighborsClassifier`.","ed32db1e":"Por meio desses dados, \u00e9 poss\u00edvel evidenciar a presen\u00e7a de outliers nos atributos \"hours per week\", \"capital loss\" e \"capital gain\", pois os tr\u00eas possuem valores m\u00e1ximos bem elevados. \n\nAdemais, nota-se uma dispers\u00e3o dos dados dos atributos \"capital gain\" e \"capital loss\", j\u00e1 que ambos possuem um valor alto no desvio de padr\u00e3o.","55514a02":"#### 5.2.1 Dados Categ\u00f3ricos\n\n","62546ba5":"O pr\u00f3ximo passo \u00e9 localizar os dados faltantes e ponderar a melhor forma de trat\u00e1-los. Para a localiza\u00e7\u00e3o, usa-se o comando `isnull().sum()`, o qual mostra o n\u00famero de valores faltantes por coluna.","a7e7246b":"Pelo gr\u00e1fico infere-se que as pessoas que trabalham menos horas ganham menos de 50K, j\u00e1 que h\u00e1 uma maior concentra\u00e7\u00e3o no lado esquerdo do pico (menos do que 40 horas). Em contrapartida, os indiv\u00edduos que recebem mais de 50K s\u00e3o aqueles que trabalham acima de 40 horas, pois no gr\u00e1fico verde h\u00e1 uma maior densidade no lado direito do pico de 40 horas. Para visualizar melhor isso, plotou-se o gr\u00e1fico do tipo 'boxen'.","280b101f":"Pelo gr\u00e1fico, nota-se que para todos os tipos de ocupa\u00e7\u00e3o o 'income' de <=50K \u00e9 preponderante diante do >50K, o que torna esse atibuto n\u00e3o t\u00e3o relavante. Ademais,verifica-se que algumas ocupa\u00e7\u00f5es como 'Machine-op-inspct' e 'handlers-cleaners' est\u00e3o em grande n\u00famero.","abe85541":"**Fnlwgt**","3533b583":"Percebe-se que os gr\u00e1ficos das vari\u00e1veis 'capital.gain' e 'capital.loss' diferem bastante das anteriores e tamb\u00e9m apresentam uma distribui\u00e7\u00e3o desbalanceada. Isso se deve a elas serem esparsas e possuirem outliers.","2fcef2e1":"A partit do comando `tail`, pode-se visualizar as 5 \u00faltimas linhas do dataset.","02ff5f26":"#### 5.2.2 Dados Esparsos e Num\u00e9ricos\n","8f044af6":"### 5.1 Dados duplicados e irrelevantes","47f2f0cf":"A an\u00e1lise de correla\u00e7\u00e3o pode ser feita por meio do coeficiente de correla\u00e7\u00e3o de Pearson (*Pearson's r)*. Esse coeficiente define o grau de correla\u00e7\u00e3o entre duas vari\u00e1veis na estat\u00edstica e varia entre -1 e 1. Nesse sentido, quanto mais pr\u00f3ximo de 0, menor a correla\u00e7\u00e3o.\n\nPara estabeler a correla\u00e7\u00e3o das vari\u00e1veis num\u00e9ricas, as vari\u00e1veis categ\u00f3ricas precisam ser transformadas para n\u00fameros. Assim, \u00e9 necess\u00e1rio fazer algumas modifica\u00e7\u00f5es no dataframe, por isso fez-se uma c\u00f3pia.","961f1aa1":"## 1. Metas\n\n* Apresenta\u00e7\u00e3o \u00e0s plataformas, bibliotecas e recursos essenciais ao Machine Learning e Date Science;\n* An\u00e1lise, tratamento e manipula\u00e7\u00e3o dos dados;\n* Avalia\u00e7\u00e3o de impacto da sele\u00e7\u00e3o de vari\u00e1veis e feature engineering e sele\u00e7\u00e3o do par\u00e2metro K.","80bb020b":"**Capital.gain**","c25d8d69":"Em seguida, preenche-se o \u00edndice de cada vari\u00e1vel e seu respectivo r\u00f3tulo:","9509dd73":"**Race**","969ea6f3":"#### 4.1.2 Gr\u00e1ficos com atributos Num\u00e9ricos\n\nA seguir, uma s\u00e9rie de gr\u00e1ficos que mostram como os par\u00e2metros num\u00e9ricos afetam o r\u00f3tulo (**Income**). Para isso, utilizou-se os gr\u00e1ficos do tipo *violin*, pois eles permitem a compara\u00e7\u00e3o da distribui\u00e7\u00e3o da densidade dos dados para cada uma das poss\u00edveis classifica\u00e7\u00f5es da vari\u00e1vel categ\u00f3rica interessada.   \n\n","626968f1":"### 8. Submiss\u00e3o\n\nPara submeter, \u00e9 necess\u00e1fio a cria\u00e7\u00e3o do arquivo no formato `.csv`.","f96b951a":"Ao utilizar os valores dos gr\u00e1ficos, percebe-se que enquanto apenas 10% das mulheres ganham mais de 50k por ano, a porcentagem dos homens que ultrapassa 50k \u00e9 de 30%. Logo, \u00e9 poss\u00edvel identificar a desigualdade entre a remunera\u00e7\u00e3o entre remunera\u00e7\u00e3o de homens e mulheres.","e3de40cc":"### 4.1 Visualiza\u00e7\u00e3o dos dados","cae1b5ba":"Para importar os dados, usa-se o comando`csv_read` da biblioteca pandas.","7fec5045":"## 2. Bibliotecas\n\nA seguir, as bibliotecas utilizadas para a explora\u00e7\u00e3o dos dados.","75c321bb":"**Education**","a7f8c0ad":"Aplica-se o preprocessamento e depois a predi\u00e7\u00e3o. "}}