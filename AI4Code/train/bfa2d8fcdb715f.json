{"cell_type":{"450c7cde":"code","9e428caf":"code","c2d1ae9c":"code","9ae6a5d8":"code","8819b44a":"code","8d585742":"code","f7896161":"code","6e95319e":"code","122fc50a":"code","e6113a13":"code","fbe52260":"code","70235cd1":"code","99e90307":"code","89d93ae3":"code","95e43ab1":"code","9a1de0e9":"code","6cd3c09a":"code","5d84869b":"code","d4b20372":"code","fdb114e5":"code","54a1af99":"code","582a92e7":"code","2e69b1ca":"code","1196b5ac":"code","f878b698":"code","afbf788d":"code","e0b7d364":"code","23e8db28":"code","314c4605":"markdown","1a98c053":"markdown","497d69f9":"markdown","e4ee8389":"markdown","12a686b0":"markdown","5d340098":"markdown","0790ac24":"markdown","6aa8f746":"markdown","e11d9427":"markdown"},"source":{"450c7cde":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9e428caf":"#importing modules\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","c2d1ae9c":"df = pd.read_csv('..\/input\/mall-customers\/Mall_Customers.csv')","9ae6a5d8":"df.head()","8819b44a":"df = df.rename(columns={'Genre':'Sex'})","8d585742":"df.columns","f7896161":"df.describe()","6e95319e":"df.isnull().sum()","122fc50a":"numerical = ['CustomerID ','Age','Annual Income (k$)','Spending Score (1-100)']\ncategorical = ['Sex']","e6113a13":"sns.pairplot(df)","fbe52260":"fig = plt.figure(figsize = (15,10))\naxes = 340\nfor cat in categorical:\n    axes += 1\n    fig.add_subplot(axes)\n    sns.countplot(data = df, x = 'Sex')\n    plt.xticks(rotation=40)\nplt.show()","70235cd1":"#create correlation\ncorr = df.corr(method = 'pearson')\n\n#convert correlation to numpy array\nmask = np.array(corr)\n\n#to mask the repetitive value for each pair\nmask[np.tril_indices_from(mask)] = False\nfig, ax = plt.subplots(figsize = (15,12))\nfig.set_size_inches(15,15)\nsns.heatmap(corr, mask = mask, vmax = 0.9, square = True, annot = True)","99e90307":"df_cluster = pd.DataFrame()\ndf_cluster['CustomerID'] = df['CustomerID']\ndf_cluster['Age'] = df['Age']\ndf_cluster['Annual Income (k$)'] = df['Annual Income (k$)']\ndf_cluster['Spending Score (1-100)'] = df['Spending Score (1-100)']\ndf_cluster.head()","89d93ae3":"sns.boxplot(df['CustomerID'])","95e43ab1":"sns.boxplot(df['Age'])","9a1de0e9":"sns.boxplot(df['Annual Income (k$)'])","6cd3c09a":"sns.boxplot(df['Spending Score (1-100)'])","5d84869b":"fig, (ax1, ax2, ax3, ax4) = plt.subplots(4,1, figsize=(8,8))\nsns.distplot(df[\"CustomerID\"], ax=ax1)\nsns.distplot(df[\"Age\"], ax=ax2)\nsns.distplot(df[\"Annual Income (k$)\"], ax=ax3)\nsns.distplot(df[\"Spending Score (1-100)\"], ax=ax4)\nplt.tight_layout()\nplt.legend()","d4b20372":"df_cluster_log = np.log(df_cluster[['Age', 'Annual Income (k$)','Spending Score (1-100)']])\n\nfig, (ax1, ax2, ax3) = plt.subplots(3,1, figsize=(8,8))\nsns.distplot(df_cluster_log[\"Age\"], ax=ax1)\nsns.distplot(df_cluster_log[\"Annual Income (k$)\"], ax=ax2)\nsns.distplot(df_cluster_log[\"Spending Score (1-100)\"], ax=ax3)\nplt.tight_layout()","fdb114e5":"#Fit and transform\ndf_cluster_log.head()","54a1af99":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\ncluster_scaled = scaler.fit_transform(df_cluster_log)","582a92e7":"from sklearn.cluster import KMeans\n\nSum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(cluster_scaled)\n    Sum_of_squared_distances.append(km.inertia_)\n    \nplt.figure(figsize=(20,5))\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","2e69b1ca":"from mpl_toolkits.mplot3d import Axes3D\n\nmodel = KMeans(n_clusters=3)\nmodel.fit(cluster_scaled)\nkmeans_labels = model.labels_\n\nfig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\nax = plt.axes(projection=\"3d\")\n\nax.scatter3D(df_cluster['Age'],df_cluster['Annual Income (k$)'],df_cluster['Spending Score (1-100)'],c=kmeans_labels, cmap='rainbow')\n\nxLabel = ax.set_xlabel('Age', linespacing=3.2)\nyLabel = ax.set_ylabel('Annual Income (k$)', linespacing=3.1)\nzLabel = ax.set_zlabel('Spending Score (1-100)', linespacing=3.4)\nprint(\"K-Means\")","1196b5ac":"df1_clustered_kmeans = df_cluster.assign(Cluster=kmeans_labels)\ngrouped_kmeans = df1_clustered_kmeans.groupby(['Cluster']).mean().round(1)\ngrouped_kmeans","f878b698":"from sklearn.cluster import MiniBatchKMeans, KMeans \nfrom sklearn.metrics.pairwise import pairwise_distances_argmin \n#from sklearn.datasets.samples_generator import make_blobs \n\nbatch_size = 20\n# perform the mini batch K-means \nmbk = MiniBatchKMeans(init ='k-means++', n_clusters = 3, \n                      batch_size = batch_size, n_init = 10, \n                      max_no_improvement = 10, verbose = 0) \nmbk.fit(cluster_scaled) \nmbk_means_cluster_centers = np.sort(mbk.cluster_centers_, axis = 0) \nmbk_means_labels = pairwise_distances_argmin(cluster_scaled, mbk_means_cluster_centers) \n\n\nfig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\nax = plt.axes(projection=\"3d\")\n\nax.scatter3D(df_cluster['Age'],df_cluster['Annual Income (k$)'],df_cluster['Spending Score (1-100)'],\n             c=mbk_means_labels, cmap='rainbow')\n\nxLabel = ax.set_xlabel('Age', linespacing=3.2)\nyLabel = ax.set_ylabel('Credit Amount', linespacing=3.1)\nzLabel = ax.set_zlabel('Duration', linespacing=3.4)\nprint(\" Mini Batch K-Means\")","afbf788d":"df_clustered_kmeans = df_cluster.assign(Cluster=mbk_means_labels)\ngrouped_kmeans_minibatch = df_clustered_kmeans.groupby(['Cluster']).mean().round(1)\ngrouped_kmeans_minibatch","e0b7d364":"grouped_kmeans","23e8db28":"df_clustered = df.assign(Cluster=kmeans_labels) #back apply\ndf_clustered.head()","314c4605":"This has caused the skewness to be removed","1a98c053":"From these models, we can choose the most well segmented model, that is k-means. We use the clusters from the that model to analyze the dataset","497d69f9":"From the figure above we can see that the most optimal values are 3. So we choose 3 as the k values of the k-means model","e4ee8389":"Conclusion from Plot above:\n\nWomen are more in number than men","12a686b0":"Plotting Box plots to find outliers - The box plot shows outliers in the numerical features","5d340098":"# Model\n \n- K-means","0790ac24":"# Log Transform\nWe can use logarithmic transformation to reduce the outliers and distribution skewness","6aa8f746":"K-means First we use the Elbow Method to determine the optimal k value for the k-means","e11d9427":"### Features\n\nAge (numeric)\n\nSex (text: male, female)\n\nAnnual Income (k$)\n\nSpending Score (1-100)"}}