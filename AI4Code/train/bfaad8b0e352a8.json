{"cell_type":{"d600cd52":"code","44e87f01":"code","52f136d9":"code","b1bbcbfc":"code","f1bbef46":"code","45dc20de":"code","35f1625e":"code","30753276":"code","b117ee6f":"code","4a8342a1":"code","49159ad3":"code","dfbcd7d5":"code","5c87d245":"code","7604682f":"code","7e613948":"code","d36cbaa8":"code","abd2a936":"code","c6685b6b":"code","75f01ed2":"code","85a3f8bd":"code","464cb840":"code","caebd698":"code","cdc54c67":"code","0499e612":"code","8aa0132e":"code","78dd8bc6":"code","a4f0e3ff":"code","f4dcf03e":"code","98c3133f":"code","be0c3782":"code","ded8a870":"code","5eeebfa1":"code","05aea02b":"code","fb919f2c":"code","ab2ffae0":"code","ff487135":"code","1c2da7f2":"markdown","5de89375":"markdown","90c48449":"markdown","4a6410e5":"markdown","4d9060b1":"markdown","253112af":"markdown","759b8a9a":"markdown","830e9db1":"markdown","7a7f6c26":"markdown","386970d3":"markdown"},"source":{"d600cd52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","44e87f01":"dataFR = pd.read_csv(\"\/kaggle\/input\/youtube-new\/FRvideos.csv\")\ndataCA = pd.read_csv(\"\/kaggle\/input\/youtube-new\/CAvideos.csv\")\ndataUS = pd.read_csv(\"\/kaggle\/input\/youtube-new\/USvideos.csv\")\ndataIN = pd.read_csv(\"\/kaggle\/input\/youtube-new\/INvideos.csv\")\ndataDE = pd.read_csv(\"\/kaggle\/input\/youtube-new\/DEvideos.csv\")\ndataGB = pd.read_csv(\"\/kaggle\/input\/youtube-new\/GBvideos.csv\")","52f136d9":"print(\"FRANCE:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataFR.info()\ndataFR.head()","b1bbcbfc":"print(\"CANADA:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataCA.info()\ndataCA.head()","f1bbef46":"print(\"UNITED STATES:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataUS.info()\ndataUS.head()","45dc20de":"print(\"INDIA:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataIN.info()\ndataIN.head()","35f1625e":"print(\"GERMANY:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataDE.info()\ndataDE.head()","30753276":"print(\"GLOBAL:\")\nprint(\" \")\nprint(\"Information:\")\nprint(\" \")\ndataGB.info()\ndataGB.head()","b117ee6f":"data_frame_list = [dataFR,dataCA,dataUS,dataIN,dataDE,dataGB]","4a8342a1":"for data_frame in data_frame_list:\n    data_frame.drop('video_id',axis=1,inplace=True)\n    data_frame.drop('description',axis=1,inplace=True)\n    data_frame.drop('thumbnail_link',axis=1,inplace=True)","49159ad3":"data_frame_list[5]","dfbcd7d5":"same = []\nfor data_frame in data_frame_list:\n    for each in data_frame['title']:\n        if each in dataGB['title']:\n            same.append(each)","5c87d245":"print(same)","7604682f":"del data_frame_list","7e613948":"print(\"FRANCE:\")\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataFR.corr(), annot=True, linewidths=.5, fmt ='0.1f', ax=ax, cmap='Blues')\nplt.show()","d36cbaa8":"dataFR.corr()","abd2a936":"dataFR.likes.plot(kind='line', color='r', label='Likes', linewidth=1, alpha=0.5, grid=True, linestyle=':')\ndataFR.dislikes.plot(kind='line', color='b', label='Dislikes', linewidth=1, alpha=0.5, grid=True, linestyle='-')\nplt.title('Trend Videos in France - Likes, Dislikes')\nplt.legend(loc='upper left')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","c6685b6b":"print(\"CANADA:\")\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataCA.corr(), annot=True, linewidths=.5, fmt='.1f',ax=ax, cmap=\"Blues\")\nplt.show()","75f01ed2":"dataCA.corr()","85a3f8bd":"dataCA.likes.plot(kind='line', color='r', label='Likes', linewidth=1, alpha=0.5, grid=True, linestyle=':')\ndataCA.dislikes.plot(kind='line', color='b', label='Dislikes', linewidth=1, alpha=0.5, grid=True, linestyle='-')\nplt.title('Trend Videos in Canada - Likes, Dislikes')\nplt.legend(loc='upper left')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","464cb840":"print(\"UNITED STATES:\")\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataUS.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax, cmap=\"Blues\")\nplt.show()","caebd698":"dataUS.corr()","cdc54c67":"dataUS.likes.plot(kind='line', color='r', label='Likes', linewidth=1, alpha=0.5, grid=True, linestyle=':')\ndataUS.dislikes.plot(kind='line', color='b', label='Dislikes', linewidth=1, alpha=0.5, grid=True, linestyle='-')\nplt.title('Trend Videos in United States - Likes, Dislikes')\nplt.legend(loc='upper left')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","0499e612":"print(\"INDIA:\")\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataIN.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax, cmap=\"Blues\")\nplt.show()","8aa0132e":"dataIN.corr()","78dd8bc6":"dataIN.likes.plot(kind='line', color='r', label='Likes', linewidth=1, alpha=0.5, grid=True, linestyle=':')\ndataIN.dislikes.plot(kind='line', color='b', label='Dislikes', linewidth=1, alpha=0.5, grid=True, linestyle='-')\nplt.title('Trend Videos in India - Likes, Dislikes')\nplt.legend(loc='upper right')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","a4f0e3ff":"print(\"GERMANY:\")\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataDE.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax, cmap=\"Blues\")\nplt.show()","f4dcf03e":"dataDE.corr()","98c3133f":"dataDE.likes.plot(kind='line', color='r', label='Likes', linewidth=1, alpha=0.5, grid=True, linestyle=':')\ndataDE.dislikes.plot(kind='line', color='b', label='Dislikes', linewidth=1, alpha=0.5, grid=True, linestyle='-')\nplt.title('Trend Videos in Germany - Likes, Dislikes')\nplt.legend(loc='upper left')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","be0c3782":"f,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(dataGB.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax, cmap='Blues')\nplt.show()","ded8a870":"dataGB.corr()","5eeebfa1":"dataGB.likes.plot(kind='line', color=\"r\", label=\"likes\", linewidth=1, alpha=0.5, grid=True, linestyle=\":\")\ndataGB.dislikes.plot(kind='line', color=\"b\", label=\"Dislikes\", linewidth=1, alpha=0.5, grid=True, linestyle=\"-\")\nplt.title('Trend Videos in Global - Likes, Dislikes')\nplt.legend(loc='upper left')\nplt.xlabel('Song Index')\nplt.ylabel('Value')\nplt.show()","05aea02b":"country=['France','Canada','United States','India','Germany','Global']\nmean_views= [dataFR['views'].mean(),dataCA['views'].mean(),dataUS['views'].mean(),dataIN['views'].mean(),dataDE['views'].mean(),dataGB['views'].mean()]\nplt.bar(country,mean_views)\nplt.title('Mean of Views - Countries')\nplt.show()","fb919f2c":"plt.scatter(dataFR.video_error_or_removed,dataFR.dislikes,color='blue',label='France',alpha=0.7)\nplt.scatter(dataCA.video_error_or_removed,dataCA.dislikes,color='red',label='Canada',alpha=0.7)\nplt.scatter(dataUS.video_error_or_removed,dataUS.dislikes,color='yellow',label='United States',alpha=0.7)\nplt.scatter(dataIN.video_error_or_removed,dataIN.dislikes,color='purple',label='India',alpha=0.7)\nplt.scatter(dataDE.video_error_or_removed,dataDE.dislikes,color='black',label='Germany',alpha=0.7)\nplt.scatter(dataGB.video_error_or_removed,dataGB.dislikes,color='green',label='Global',alpha=0.1)\n\nplt.title('Relation between Dislike and Error or Remove')\nplt.legend(loc='upper right')\nplt.xlabel('Removed Video')\nplt.ylabel('Dislike')\nplt.show()","ab2ffae0":"plt.scatter(dataFR.comments_disabled,dataFR.dislikes,color='blue',label='France',alpha=0.7)\nplt.scatter(dataCA.comments_disabled,dataCA.dislikes,color='red',label='Canada',alpha=0.7)\nplt.scatter(dataUS.comments_disabled,dataUS.dislikes,color='yellow',label='United States',alpha=0.7)\nplt.scatter(dataIN.comments_disabled,dataIN.dislikes,color='purple',label='India',alpha=0.7)\nplt.scatter(dataDE.comments_disabled,dataDE.dislikes,color='black',label='Germany',alpha=0.7)\nplt.scatter(dataGB.comments_disabled,dataGB.dislikes,color='green',label='Global',alpha=0.1)\n\nplt.title('Relation between Dislike and Comments Disabled')\nplt.legend(loc='upper right')\nplt.xlabel('Comments Disabled')\nplt.ylabel('Dislike')\nplt.show()","ff487135":"plt.scatter(dataFR.comment_count,dataFR.likes,color='blue',label='France',alpha=0.6)\nplt.scatter(dataCA.comment_count,dataCA.likes,color='red',label='Canada',alpha=0.6)\nplt.scatter(dataUS.comment_count,dataUS.likes,color='yellow',label='United States',alpha=0.6)\nplt.scatter(dataIN.comment_count,dataIN.likes,color='purple',label='India',alpha=0.6)\nplt.scatter(dataDE.comment_count,dataDE.likes,color='black',label='Germany',alpha=0.6)\nplt.scatter(dataGB.comment_count,dataGB.likes,color='green',label='Global',alpha=0.1)\n\nplt.title('Relation between Like and Comment')\nplt.legend(loc='upper right')\nplt.xlabel('Comment')\nplt.ylabel('Like')\nplt.show()","1c2da7f2":"**As you can see, there is no same item. Then, I can begin to visualize.**","5de89375":"**In the dataframes, there are only 5 parameters are numerical, so I can only compare these attributes of the trend videos.**\n**Nevertheless, I can compare a string or boolean feature's numerical value, for example title's or channel_title's, with another one, but there are some data I don't use such as video_id, description. First, I want to gather all the dataframes in a list and then, get rid of the useless attributes one by one. Becaue I don't want to mix them, I use a list instead of concatenating them.**","90c48449":"**I also wonder that is there any interaction between dislike and comment disabled.**","4a6410e5":"**Now, I can compare the attributes. But first, I want to be sure no item in a dataframe, which is special for a country, is also in the global one.**","4d9060b1":"**Lastly, I want to see interaction between like and comment count.**","253112af":"**What I understand is there is almost no interaction between them.**","759b8a9a":"**Looks like Canada and India don't like to comment and Germany is the most balanced.**","830e9db1":"**-------------Comprison mean of views of all countries---------------**","7a7f6c26":"**I wonder that is there any relation between dislike and error or removed videos.**","386970d3":"**Similar with before**"}}