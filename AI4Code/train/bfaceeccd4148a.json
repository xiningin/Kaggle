{"cell_type":{"393b755b":"code","244aa7df":"code","ff5dc8d7":"code","1f994836":"code","b11e848e":"code","548c23e9":"code","d7be1f0f":"code","7039a871":"code","1f85b442":"code","5e1a48f8":"code","3df26ef4":"code","1bb7c77c":"code","ea2cecbb":"code","729fe799":"code","c93d24a8":"code","b019b937":"code","40999d30":"code","2fed04fa":"code","6180c71c":"code","b6455116":"code","7276c3fc":"code","0717ddd4":"code","ae22d1fb":"code","27c754ff":"code","4bc77f0c":"code","c68730f5":"code","811c55ac":"code","9e3bc350":"code","01893d7b":"code","787fd428":"code","a1c38826":"code","ad304932":"markdown","4a9ca8e3":"markdown","d3fbfda3":"markdown","b02f20c7":"markdown","6461204b":"markdown","aa46dd9c":"markdown","80868867":"markdown","c0edd731":"markdown","43f30b8b":"markdown","c1835d18":"markdown","2984f740":"markdown","837e534e":"markdown","d68c5dfb":"markdown","48d99239":"markdown","bbeeb750":"markdown"},"source":{"393b755b":"pip install kaleido","244aa7df":"import kaleido","ff5dc8d7":"import os\n\nimport pandas as pd\n\nimport numpy as np\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\nfrom PIL import Image\nimport plotly.express as px\n\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f994836":"data_path = '\/kaggle\/input\/netflix-shows\/netflix_titles.csv'\ndata = pd.read_csv(data_path)\n\nprint(data.isnull().sum())\n# date_added, rating, duration\uc758 \uacb0\uce21\uce58\uc758 \uc22b\uc790\uac00 \uc801\uc5b4 \uacb0\uce21\uce58 \uc0ad\uc81c \uc9c4\ud589\ndata = data.dropna(subset=['date_added', 'rating', 'duration'])\nprint('\\n\uc0ad\uc81c \ud6c4\\n')\nprint(data.isnull().sum())","b11e848e":"# \ucd94\uac00\ub41c \ub0a0\uc9dc\ub97c \ucd94\uac00\ub41c \uc5f0\ub3c4\ub85c \ub370\uc774\ud130 \uac04\uc18c\ud654\ndata['added_year'] = data['date_added'].apply(lambda i: i[-4:]).astype(int)\ndata.head()","548c23e9":"# \ud06c\ub85c\uc2a4\ud0ed\uc744 \ud65c\uc6a9\ud558\uc5ec \ube48\ub3c4\ub85c \uc774\ub8e8\uc5b4\uc9c4 \ub370\uc774\ud130\ud504\ub808\uc784 \uc0dd\uc131\nyear_type_df = pd.crosstab(data.added_year, data.type)\nyear_type_df['added_year'] = year_type_df.index\nyear_type_df = year_type_df.reset_index(drop=True)\nyear_type_df.head()","d7be1f0f":"x = year_type_df['added_year']\ny = np.vstack([year_type_df['Movie'],year_type_df['TV Show']])\nlabels = ['Movie','TV Show']\nfig, ax = plt.subplots()\nfig.set_size_inches(15, 10)\nax.stackplot(year_type_df['added_year'], year_type_df['Movie'], year_type_df['TV Show'], labels=labels)\nax.legend(loc='upper left', fontsize = 20)\nax.set_title('number of shows added by year', fontsize = 0)\nax.set_ylabel('number of shows', fontsize = 20)\nax.set_xlabel('year', fontsize = 20)\nplt.show()","7039a871":"tmp = data.groupby(['type', 'added_year']).count().reset_index().rename(columns={'show_id':'count', 'added_year': 'year'})\nfig = px.area(tmp, x=\"year\", y=\"count\", color=\"type\", line_group=\"type\")\nfig.update_layout(\n    title=\"\uc5f0\ub3c4\ubcc4 \ub137\ud50c\ub9ad\uc2a4 \ucd94\uac00 \uc791\ud488 \uc218\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"Type\",\n)\n\nfig.show()\n# fig.write_image(\"fig1.png\")","1f85b442":"movie_df = data[data['type'] == 'Movie']\ntv_df = data[data['type'] == 'TV Show']","5e1a48f8":"tv_df.head()","3df26ef4":"tmp = pd.DataFrame(tv_df['duration'].value_counts()).reset_index()\nfig = px.pie(tmp, values='duration', names='index')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    title=\"TV Show \uc2dc\uc98c \uc218 \ubd84\ud3ec\",\n    legend_title=\"Seasons\",\n)\nfig.show()","1bb7c77c":"tv_df.head()","ea2cecbb":"tmp = pd.DataFrame(tv_df['rating'].value_counts()).reset_index()\nfig = px.pie(tmp, values='rating', names='index')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    title=\"TV Show \uc5f0\ub839 \ub4f1\uae09 \ubd84\ud3ec\",\n    legend_title=\"Rating\"\n)\nfig.show()","729fe799":"tmp = pd.DataFrame(movie_df['rating'].value_counts()).reset_index()\nfig = px.pie(tmp, values='rating', names='index')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    title=\"\uc601\ud654 \uc5f0\ub839 \ub4f1\uae09 \ubd84\ud3ec\",\n    legend_title=\"Rating\"\n)\nfig.show()","c93d24a8":"_2020_df = data[data['added_year'] == 2020]\n_2021_df = data[data['added_year'] == 2021]","b019b937":"_2020_df['add_release_gap'] = _2020_df['added_year'] - _2020_df['release_year']","40999d30":"_2020_df.head()","2fed04fa":"_2020_df.loc[_2020_df['release_year'] > 2020, 'add_release_gap'] = 0\n_2020_df['relativity'] = np.where(_2020_df['add_release_gap'] <= 2, 'produced within 2 years', 'produced more than 2 years ago')\n_2020_df.head()","6180c71c":"_2020_gap = pd.crosstab(_2020_df.relativity,_2020_df.added_year)\n_2020_gap_df = _2020_gap.copy()\n_2020_gap_df['count'] = _2020_gap_df[2020]\ndel _2020_gap_df[2020]\n_2020_gap_df['relativity'] = _2020_gap_df.index\n_2020_gap_df.head()","b6455116":"fig = px.pie(_2020_gap_df, values='count', names='relativity')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    title=\"2020\ub144 \ub4f1\ub85d\ub0a0\uc9dc\uc640 \uc81c\uc791\ub0a0\uc9dc\uac00 2\ub144\ubbf8\ub9cc\uc778\uc9c0 \uc5ec\ubd80\",\n#     xaxis_title=\"Year\",\n#     yaxis_title=\"Counts\",\n#     legend_title=\"Type\",\n)\nfig.show()","7276c3fc":"_2021_df['add_release_gap'] = _2021_df['added_year'] - _2021_df['release_year']\n_2021_df['relativity'] = np.where(_2021_df['add_release_gap'] <= 2, 'produced within 2 years', 'produced more than 2 years ago')\n_2021_df.head()","0717ddd4":"_2021_gap = pd.crosstab(_2021_df.relativity,_2021_df.added_year)\n_2021_gap_df = _2021_gap.copy()\n_2021_gap_df['count'] = _2021_gap_df[2021]\ndel _2021_gap_df[2021]\n_2021_gap_df['relativity'] = _2021_gap_df.index\n_2021_gap_df.head()","ae22d1fb":"fig = px.pie(_2021_gap_df, values='count', names='relativity')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    title=\"2021\ub144 \ub4f1\ub85d\ub0a0\uc9dc\uc640 \uc81c\uc791\ub0a0\uc9dc\uac00 2\ub144\ubbf8\ub9cc\uc778\uc9c0 \uc5ec\ubd80\",\n#     xaxis_title=\"Year\",\n#     yaxis_title=\"Counts\",\n#     legend_title=\"Type\",\n)\nfig.show()","27c754ff":"_2020_2021_gap = pd.concat([_2020_df, _2021_df])\n_2020_2021_gap.head()","4bc77f0c":"tmp = _2020_2021_gap.groupby(['added_year', 'relativity']).count().reset_index().rename(columns={'show_id': 'count'})\ntmp['added_year'] = tmp['added_year'].astype(str)\nfig = px.bar(tmp, x=\"added_year\", y=\"count\", color=\"relativity\", width=700, height=600)\nfig.update_layout(\n    title=\"2020, 2021\ub144 \ube44\uad50\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"\",\n)\nfig.show()","c68730f5":"data['add_release_gap'] = data['added_year'] - data['release_year']\ndata['relativity'] = np.where(data['add_release_gap'] <= 2, 'produced within 2 years', 'produced more than 2 years ago')\ndata.head()","811c55ac":"tmp = data.groupby(['added_year', 'relativity']).count().reset_index().rename(columns={'show_id': 'count'})\ntmp['added_year'] = tmp['added_year']\nfig = px.bar(tmp, x=\"added_year\", y=\"count\", color=\"relativity\")\nfig.update_xaxes(nticks=20)\nfig.update_layout(\n    title=\"\uc5f0\ub3c4\ubcc4 \ube44\uad50\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"\",\n)\nfig.show()","9e3bc350":"data_us = data[data['country'] == 'United States']\ndata_india = data[data['country'] == 'India']\ndata_korea = data[data['country'] == 'South Korea']","01893d7b":"tmp = data_us.groupby(['added_year', 'relativity']).count().reset_index().rename(columns={'show_id': 'count'})\ntmp['added_year'] = tmp['added_year']\nfig = px.bar(tmp, x=\"added_year\", y=\"count\", color=\"relativity\", title='United States', category_orders={\"relativity\": [\"produced within 2 years\", \"produced more than 2 years ago\"]})\nfig.update_xaxes(nticks=20)\nfig.update_layout(\n    title=\"United States\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"\",\n)\nfig.show()","787fd428":"tmp = data_india.groupby(['added_year', 'relativity']).count().reset_index().rename(columns={'show_id': 'count'})\ntmp['added_year'] = tmp['added_year']\nfig = px.bar(tmp, x=\"added_year\", y=\"count\", color=\"relativity\",title='India', category_orders={\"relativity\": [\"produced within 2 years\", \"produced more than 2 years ago\"]})\nfig.update_xaxes(nticks=10)\nfig.update_layout(\n    title=\"India\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"\",\n)\nfig.show()","a1c38826":"tmp = data_korea.groupby(['added_year', 'relativity']).count().reset_index().rename(columns={'show_id': 'count'})\ntmp['added_year'] = tmp['added_year']\nfig = px.bar(tmp, x=\"added_year\", y=\"count\", color=\"relativity\", title='South Korea', category_orders={\"relativity\": [\"produced within 2 years\", \"produced more than 2 years ago\"]})\nfig.update_xaxes(nticks=10)\nfig.update_layout(\n    title=\"South Korea\",\n    xaxis_title=\"Year\",\n    yaxis_title=\"Counts\",\n    legend_title=\"\",\n)\nfig.show()","ad304932":"## \ud55c\uad6d\uc758 \uacbd\uc6b0 \uc0c1\ub300\uc801\uc73c\ub85c\ub294 \uc2e0\uc791\uc758 \uac10\uc18c\ud3ed\uc740 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uc5c8\uc73c\ub098 \uac10\uc18c\ud3ed\uc774 \uaf64\ub098 \uc788\ub294\ub9cc\ud07c \ucf54\ub85c\ub098\uc758 \uc5ec\ud30c\ub97c \uc644\uc804\ud788 \ud53c\ud55c \uac83\uc740 \uc544\ub2c8\ub77c\uace0 \ud310\ub2e8\ub428","4a9ca8e3":"- \uc791\ud488 \ucd94\uac00 \uadf8\ub798\ud504\ub97c \uc0dd\uc131\ud560 \ub54c, \uacc4\uc18d \ub298\uc5b4\ub098\ub294 \ucd94\uac00 \uc791\ud488 \uc218\uac00 2020\ub144\uc744 \uae30\uc810\uc73c\ub85c \uaebe\uc774\ub294 \uac83\uc744 \ud655\uc778\n- \ucf54\ub85c\ub098\uc5d0 \ub530\ub978 \uc601\ud5a5\uc774 \uc788\uc5c8\uc9c0 \uc54a\uc744\uae4c \uc2f6\uc5b4 2020\ub144\uacfc 2021\ub144\uc5d0 \ucd94\uac00\ub41c \uc601\ud654\ub97c \ub300\uc0c1\uc73c\ub85c \uc0c8\ub85c \ucd94\uac00\ub41c \uc791\ud488\uc774 2\ub144 \uc774\ub0b4\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 \uc791\ud488\uacfc \uadf8\ubcf4\ub2e4 \uc624\ub798\uc804\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 \uc791\ud488\uc73c\ub85c \ub098\ub204\uc5b4 \uc2dc\uac01\ud654 \uc9c4\ud589\n- \ub9cc\uc57d 2020\ub144\uc5d0 \ube44\ud574 2021\ub144\uc5d0 \ucd94\uac00\ub41c \uc601\ud654 \ubaa9\ub85d\uc5d0\uc11c \uc0c1\ub300\uc801\uc73c\ub85c \ucd5c\uc2e0\uc791\ud488\uc774 \uc904\uc5b4\ub4e4\uc5c8\ub2e4\uba74 \uc791\ud488 \uc81c\uc791\uc5d0 \uc788\uc5b4 \ucf54\ub85c\ub098\uc758 \uc601\ud5a5\uc774 \uc788\uc5c8\ub2e4\uace0 \uc0dd\uac01\ud560 \uc218 \uc788\uc74c.","d3fbfda3":"# Movie\uc640 TV\ub85c \ubd84\ud560","b02f20c7":"# TV\uc758 \uc5f0\ub839\ub4f1\uae09\uc5d0 \ub530\ub978 \ube48\ub3c4\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc0dd\uc131","6461204b":"- \ub204\uc801\ub9c9\ub300\uadf8\ub798\ud504\ub97c \uc0dd\uc131\ud574\ubcf8 \uacb0\uacfc, \ucf54\ub85c\ub098 \uc774\ud6c4 \uc0c8\ub85c \ub137\ud50c\ub9ad\uc2a4\uc5d0 \ucd94\uac00\ub41c \uc791\ud488 \uc218 \uc790\uccb4\ub3c4 \ub9ce\uc774 \uc904\uc5c8\uc9c0\ub9cc \uc2e0\uc791\uc758 \ube44\uc911 \uc790\uccb4\uac00 \ud655\uc5f0\ud788 \uc904\uc5b4\ub4e0 \uac83\uc744 \ud655\uc778\n- \ucf54\ub85c\ub098\uac00 \uc2e0\uc791 \ucd2c\uc601 \uc77c\uc815\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \uc8fc\uace0 \uc788\uc74c\uc744 \uc608\uc0c1\ud560 \uc218 \uc788\uc74c\n- \uc870\uae08 \ub354 \uae34 \uc2dc\uacc4\uc5f4\ub85c \uadf8\ub798\ud504 \uc0dd\uc131","aa46dd9c":"- \uae34 \uc2dc\uacc4\uc5f4\uc5d0\uc11c \ubcf4\ub354\ub77c\ub3c4 \ud655\uc2e4\ud788 2021\ub144\uc758 \uc2e0\uc791 \uc218 \uac10\uc18c\uac00 \ub69c\ub837\ud568\uc744 \ud655\uc778\n- \ucf54\ub85c\ub098\uc758 \uc601\ud5a5\ub825 \uc2e4\uac10\n- \ucf54\ub85c\ub098\uc758 \uc601\ud5a5\ub825\uc774 \uac15\ud588\ub358 \ubbf8\uad6d\uacfc \uc778\ub3c4, \uc0c1\ub300\uc801\uc73c\ub85c \uc548\uc804\ud588\ub358 \ud55c\uad6d\uc5d0 \ub300\ud55c \uadf8\ub798\ud504\ub9cc \ub530\ub85c \uc0dd\uc131","80868867":"# \ub4f1\ub85d\ub0a0\uc9dc\uc640 \uc81c\uc791\ub0a0\uc9dc\uac00 \uac00\uae4c\uc6b4 \uc601\ud654\uc640 \uc544\ub2cc \uc601\ud654\uc758 \ube48\ub3c4\uc218\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc0dd\uc131","c0edd731":"# \uac01 \uc5f0\ub3c4\ubcc4 \ub137\ud50c\ub9ad\uc2a4\uc5d0 \ucd94\uac00\ub41c Movie, TV Show\uc758 \uc218\ub97c y\ub85c \ub450\uc5b4 stackplot \uc0dd\uc131","43f30b8b":"# \uac01 \uc2dc\uc98c \uc218\uc5d0 \ub300\ud55c \ud30c\uc774\ucc28\ud2b8 \uc0dd\uc131","c1835d18":"- \ud655\uc2e4\ud788 2021\ub144\uc758 \uc2e0\uc791 \ube44\uc728\uc774 \uc904\uc5b4\ub4e0 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- \ud30c\uc774\ucc28\ud2b8 2\uac1c\ubcf4\ub2e4 \ub9c9\ub300\uadf8\ub798\ud504\uc5d0 \uad6c\ud604\ud558\ub294 \uac83\uc774 \ud574\ub2f9 \ub0b4\uc6a9\uc5d0 \ub300\ud55c \uc124\uba85\uc774 \ub354 \uc9c1\uad00\uc801\uc77c \uac70 \uac19\uc544\uc11c \ub204\uc801\ub9c9\ub300\uadf8\ub798\ud504 \uad6c\ud604","2984f740":"## \ubbf8\uad6d\uc758 \uacbd\uc6b0 \uc608\uc0c1\ub300\ub85c \uc2e0\uc791\uc758 \uac10\uc18c\ud3ed\uc774 \ub9e4\uc6b0 \ud06c\uac8c \ub098\ud0c0\ub0a8","837e534e":"# 2020\ub144 \ub370\uc774\ud130\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c 2021\ub144 \ub370\uc774\ud130\ub3c4 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc804\ucc98\ub9ac \uc9c4\ud589","d68c5dfb":"## \uc778\ub3c4\uc758 \uacbd\uc6b0\ub3c4 \uc2e0\uc791\uc758 \uac10\uc18c\ud3ed\uc774 \uc2ec\ud558\uac8c \ub098\ud0c0\ub09c \uac83\uc744 \ud655\uc778","48d99239":"- \uc774\uc720\ub294 \uc54c \uc218 \uc5c6\uc73c\ub098 2020\ub144 \ub4f1\ub85d \uc791\ud488 \uc911\uc5d0 \uc81c\uc791\ub144\ub3c4\uac00 2021\ub144\uc778 \uacbd\uc6b0\uac00 \uc788\uc74c.\n- \uc544\ub9c8 \uc790\uccb4 \uc81c\uc791 \ud0c0\uc774\ud2c0\uc774\ub77c \ubbf8\ub9ac \ub4f1\ub85d\uc744 \ud574\ub454 \ucf00\uc774\uc2a4\uac00 \uc544\ub2d0\uae4c \uc608\uc0c1\n- \uc774\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 2020\ub144\ubcf4\ub2e4 \ud6c4\uc5d0 \uc81c\uc791\ub41c \uc791\ud488\uc758 \uacbd\uc6b0 \ub4f1\ub85d\ub144\uacfc \uc81c\uc791\ub144\ub3c4 \ucc28\uc774\ub97c 0\uc73c\ub85c \uc124\uc815\n- 2\ub144 \uc774\ub0b4\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 \uc601\ud654\ub294 produced within 2 years, \uadf8\ubcf4\ub2e4 \uc624\ub798\ub41c \uc601\ud654\ub294 produced more than 2 years ago\ub77c\uace0 \uae30\ub85d","bbeeb750":"# \uc601\ud654\uc758 \uc5f0\ub839\ub4f1\uae09\uc5d0 \ub530\ub978 \ube48\ub3c4\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc0dd\uc131"}}