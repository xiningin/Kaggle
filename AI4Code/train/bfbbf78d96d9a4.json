{"cell_type":{"ea1e1a07":"code","7b12c218":"code","25691200":"code","fa2f378d":"code","8ffae120":"code","779688ec":"code","a8e1cb13":"code","bfea9ecf":"code","84553f09":"code","5bb911ca":"code","3eb64a63":"code","d4a1376a":"code","91a9cde4":"code","7794f872":"code","f2a36221":"code","167cc144":"markdown","8c10d438":"markdown","909ff8c4":"markdown","9db3cda0":"markdown","be86883a":"markdown","6eebdd6d":"markdown","dca39a76":"markdown","eb5ab265":"markdown","1e2b701e":"markdown","7f65a949":"markdown"},"source":{"ea1e1a07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n#for visualization \nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b12c218":"fish=pd.read_csv('..\/input\/fish-market\/Fish.csv')\nfish.shape","25691200":"fish.head()\n#to get first 5 row ,if you want last 5 row use (tail())\n#if you want to get any number of row write that number in head() Like: head(13) ","fa2f378d":"fish.info()\n#it help to now data type of column and if we hane missing data ","8ffae120":"fish.describe()\n#get more information about column ","779688ec":"fish['Species'].value_counts()\n#count the species of fish we have in data ","a8e1cb13":"#visualization \nplt.figure(figsize=(12,8))\nsns.countplot(fish['Species'])\nplt.show()","bfea9ecf":"# We can look at an individual feature in Seaborn through a \n\nplt.figure(figsize=(12,8))\nsns.boxplot(x=\"Species\", y=\"Weight\", data=fish)\nplt.show()","84553f09":"#we will split our data to dependent and independent\n#first dependent data \nX=fish.iloc[:,1:]\nX.head(2)","5bb911ca":"#second independent\n# we add more [] to make it 2d array\ny=fish[[\"Species\"]]\ny.head(2)","3eb64a63":"#split our data to train and test\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","d4a1376a":"#there are to many model to train it but we will use two model \nfrom sklearn.linear_model import LogisticRegression\nlogistic_classifier = LogisticRegression(random_state =42)\nlogistic_classifier.fit(X_train,y_train)","91a9cde4":"logistic_classifier.score(X_test,y_test)","7794f872":"# Support Vector Machine (SVM)\nfrom sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear', random_state = 42)\nclassifier.fit(X_train, y_train)","f2a36221":"classifier.score(X_test,y_test)","167cc144":"(87,5%)good Not bad \nbut we will try to find more effective model","8c10d438":"# Train model to get best one \n\n","909ff8c4":"best prediction we have (93.75%) to SVM","9db3cda0":"we have 159 row and 7 column","be86883a":"No missing data ","6eebdd6d":"see here Weight how make data more different and more effective\n\nwe can visualization with every column not just Weigth \n\n","dca39a76":"# Train anthor model to get best prediction","eb5ab265":"we finish our data know we start to train model and test it ","1e2b701e":"# EDA","7f65a949":"we have small data for some kind of fish like(Whitefish,parkki,smelt)"}}