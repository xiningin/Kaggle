{"cell_type":{"3931fe3f":"code","362a4ace":"code","3a2ba21a":"code","0c892802":"code","c0edde10":"code","b58ac9ba":"code","38bb4bb2":"code","3295a542":"code","ca5925e6":"markdown","bc60c584":"markdown","0cce4e7a":"markdown","ac503b09":"markdown","c0ed0e3f":"markdown"},"source":{"3931fe3f":"# Import the Iris dataset\nfrom sklearn.datasets import load_iris\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\niris = load_iris()\n\n# let's look at what this dataset contains\nprint(\"Keys:\", list(iris.keys()))\n# print(iris.DESCR) # Uncomment for a lengthy description\n\n# Numpy arrays\nX = iris.data\ny = iris.target\n\nfeature_names = iris.feature_names\ntarget_names = iris.target_names\n\n# Pandas DataFrame\ndf = pd.DataFrame(X, columns=iris.feature_names)\ndf['species'] = [target_names[i] for i in y]\ndf['encoded_species'] = y\n\nprint(\"Features:\", feature_names)\nprint(\"Targets:\", target_names)\n\ndf.head()","362a4ace":"# Verifying the spread of the data\n\nfig, ax  = plt.subplots(figsize=(8,8))\nsns.countplot(y='species', data = df)\nplt.show()","3a2ba21a":"# Visualising the spread of various features\nfig, ax = plt.subplots(figsize=(16,8))\n\nfeatures = X.T\nfor i in range(len(features)):\n    sns.kdeplot(features[i], ax=ax, label=feature_names[i])\nax.legend()\nax.set_title('Featues')\nplt.show()","0c892802":"# Visualising the correlations between features\nsns.pairplot(df, vars=feature_names, hue=\"species\")","c0edde10":"# Splitting X and y into training and testing sets\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\n\n# training the model on the training set\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)","b58ac9ba":"# making predictions on the testing set\ny_pred = knn.predict(X_test)\n\n# comparing actual values with the predicted ones\nfrom sklearn import metrics\nacc = metrics.accuracy_score(y_test, y_pred) * 100\nprint(f'kNN model accuracy: {round(acc, 2)}%')","38bb4bb2":"# Plot the confusing matrix\nmatrix = metrics.confusion_matrix(y_test, y_pred)\nprint(matrix)\n\nf, ax = plt.subplots(figsize=(7, 5))\nax = sns.heatmap(matrix, xticklabels=target_names, yticklabels=target_names, cmap=\"YlGnBu\")","3295a542":"# saving the model \nimport joblib \njoblib.dump(knn, 'iris_knn.pkl')","ca5925e6":"## Aim:\n1. To load and use the iris dataset using scikit-learn\n2. To train and test the machine learning model\n3. To predict the test data\n4. To plot graphs using matplotlib and seaborn","bc60c584":"## Exploring the data","0cce4e7a":"## Training the model","ac503b09":"## Evaluating the model","c0ed0e3f":"The dataset is evenly balanced, with 50 samples for each species"}}