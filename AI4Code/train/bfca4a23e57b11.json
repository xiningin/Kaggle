{"cell_type":{"be5b99ec":"code","2eb049ab":"code","7cc07fe5":"code","d70c8722":"code","e05ac840":"code","30d6cece":"code","eccf3c30":"code","62f1f9a3":"code","3ef7a2ea":"code","efc7f707":"code","e50e0394":"code","3ded42ca":"code","4d844b7f":"code","5fa7d44b":"code","c9560003":"code","78d56ba3":"code","0a1b81f7":"code","f91c8229":"code","5c2dad23":"code","af45fc99":"code","144bc43d":"code","a0640592":"code","f71a85e2":"code","106a894e":"code","0ee2ebb8":"code","d8721d1f":"code","e71470eb":"code","f1ff997a":"code","cdc77f20":"code","42f5e0f6":"code","4111adf7":"code","b562f8fb":"code","b9475960":"code","1364b6fd":"code","7678d917":"code","2b688ecc":"code","4508667e":"code","b9b038eb":"code","abf9f9e2":"code","cebfd7e6":"code","abbad625":"code","4dd9428c":"code","28d46744":"code","bf4b3f61":"code","fdae18c0":"code","a1d792d0":"code","63df5a05":"code","d8eb696f":"code","5487d13a":"code","ae9d1fd8":"code","04e4cb89":"code","5c8274b9":"code","2d6c0e1d":"code","d7413338":"code","930d532f":"code","c2c06c38":"code","62a4db2e":"code","45a13a73":"code","f0169f7a":"code","008178ec":"code","a032dc48":"code","4654378e":"code","0006aa35":"code","188819e1":"code","4f1ece47":"code","1e18d029":"code","0e9bb9c0":"code","fa21470e":"code","78cdc088":"code","96096ebb":"code","1d56be8f":"code","52846f32":"code","d2bcb6b9":"code","e85f3096":"code","50ec2793":"code","d2c75354":"code","c43108c6":"code","4bfb2f91":"code","8d58c0c5":"code","bbd7b601":"code","5308bf70":"code","1e69dcb8":"code","4c6d99f1":"code","b6e73906":"code","ab3cfd6d":"code","40d17e9e":"markdown","5bf3b486":"markdown","6e2cddf4":"markdown","d6923c1c":"markdown","8da8db96":"markdown","f46af07c":"markdown","596372f6":"markdown","e197bb6e":"markdown","4f9abba7":"markdown","14897154":"markdown","e3cb8deb":"markdown","80d1d4a0":"markdown","f5b94346":"markdown","636c1fd9":"markdown","e3aa54dc":"markdown","f17a5b08":"markdown","c3cb2bd3":"markdown","2c77c839":"markdown","de634c9e":"markdown","4d4cdce5":"markdown","6f8dd609":"markdown","ccacd676":"markdown","7df6f8b2":"markdown","301fdf14":"markdown","1ac66eff":"markdown","217f0b7e":"markdown","cab9e76c":"markdown","5dc398c5":"markdown","1f08e2e2":"markdown","ecf23c60":"markdown","1f35182a":"markdown","68aa489f":"markdown","aa295b64":"markdown","9b5bf0f4":"markdown","c8627659":"markdown","5ffad7d3":"markdown","edf4e24c":"markdown","690a4cca":"markdown","6be29a73":"markdown","348a36c9":"markdown","d1b1ff8f":"markdown","1c401762":"markdown","7dc9e3eb":"markdown","d9955918":"markdown","ff68997c":"markdown","4dc762bd":"markdown","f41d1c25":"markdown","6e1b9c06":"markdown","75fff667":"markdown","34420471":"markdown","3efc93a1":"markdown"},"source":{"be5b99ec":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom imblearn.under_sampling import NearMiss\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import class_weight\nimport xgboost\nfrom xgboost import XGBClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import roc_curve\n\npd.options.display.max_rows = 20","2eb049ab":"%time data = pd.read_table('..\/input\/XYZCorp_LendingData.txt',parse_dates=['issue_d'],low_memory=False)","7cc07fe5":"data.head() # Top 5 rows","d70c8722":"data.shape #(rows,columns)","e05ac840":"data['default_ind'].value_counts()","30d6cece":"sns.countplot('default_ind',data=data)","eccf3c30":"data.isnull().sum()","62f1f9a3":"lis=data.isnull().sum()\nfor i in range(len(lis)):\n    if lis[i]>800000:\n        del data['{}'.format(lis.index[i])]","3ef7a2ea":"lis=data[data.columns].corr()['default_ind'][:]\ndata[data.columns].corr()['default_ind'][:]","efc7f707":"lis2=[]\nfor i in range(len(lis)):\n    if lis[i]<0.02 and lis[i]>(-0.02):\n        lis2.append(lis.index[i])","e50e0394":"for i in range(len(lis2)):\n    del data['{}'.format(lis2[i])]","3ded42ca":"data[data.columns].corr()['default_ind'][:]","4d844b7f":"data.info()","5fa7d44b":"data['application_type'].value_counts()","c9560003":"sns.countplot('application_type',data=data)","78d56ba3":"df=data.groupby('application_type')\ndf['default_ind'].value_counts()","0a1b81f7":"data['application_type'] = np.where(data['application_type']=='INDIVIDUAL', 0, data['application_type'])\ndata['application_type'] = np.where(data['application_type']=='JOINT', 1, data['application_type'])","f91c8229":"data['application_type'].value_counts()","5c2dad23":"data['application_type']=data['application_type'].astype(float)\n# Object to Float type","af45fc99":"#data['verification_status'].value_counts()\ndf=data.groupby('verification_status')\ndf['default_ind'].value_counts()","144bc43d":"sns.countplot('verification_status',data=data,hue='default_ind')","a0640592":"df=pd.get_dummies(data['verification_status'],drop_first=True)\ndata=pd.concat([df,data],axis=1)\ndel data['verification_status']\n# Dummy Variables","f71a85e2":"data['initial_list_status'].value_counts()","106a894e":"sns.countplot('initial_list_status',data=data,hue='default_ind')","0ee2ebb8":"data['initial_list_status'] = np.where(data['initial_list_status']=='f', 0, data['initial_list_status'])\ndata['initial_list_status'] = np.where(data['initial_list_status']=='w', 1, data['initial_list_status'])","d8721d1f":"data['initial_list_status'].value_counts()","e71470eb":"data['initial_list_status']=data['initial_list_status'].astype(float)","f1ff997a":"data['term'].value_counts()","cdc77f20":"sns.countplot('term',data=data,hue='default_ind')","42f5e0f6":"data['term'] = np.where(data['term']==' 36 months', 0, data['term'])\ndata['term'] = np.where(data['term']==' 60 months', 1, data['term'])","4111adf7":"data['term'].value_counts()","b562f8fb":"data['term']=data['term'].astype(float)","b9475960":"data['grade'].value_counts()","1364b6fd":"sns.countplot('grade',data=data,hue='default_ind',color='red',saturation=0.5)","7678d917":"data['grade'] = np.where(data['grade']=='A', 0, data['grade'])\ndata['grade'] = np.where(data['grade']=='B', 0, data['grade'])\ndata['grade'] = np.where(data['grade']=='C', 0, data['grade'])\ndata['grade'] = np.where(data['grade']=='D', 1, data['grade'])\ndata['grade'] = np.where(data['grade']=='E', 1, data['grade'])\ndata['grade'] = np.where(data['grade']=='F', 1, data['grade'])\ndata['grade'] = np.where(data['grade']=='G', 1, data['grade'])","2b688ecc":"data['grade'].value_counts()","4508667e":"data['grade']=data['grade'].astype(float)","b9b038eb":"data['home_ownership'].value_counts()","abf9f9e2":"df=data.groupby('home_ownership')\ndf['default_ind'].value_counts()","cebfd7e6":"sns.countplot('home_ownership',data=data,hue='default_ind')","abbad625":"data['home_ownership'] = np.where(data['home_ownership']=='RENT', 1, data['home_ownership'])\ndata['home_ownership'] = np.where(data['home_ownership']=='OWN', 1, data['home_ownership'])\ndata['home_ownership'] = np.where(data['home_ownership']=='MORTGAGE', 1, data['home_ownership'])\ndata['home_ownership'] = np.where(data['home_ownership']=='NONE', 2, data['home_ownership'])\ndata['home_ownership'] = np.where(data['home_ownership']=='OTHER', 2, data['home_ownership'])\ndata['home_ownership'] = np.where(data['home_ownership']=='ANY', 0, data['home_ownership'])","4dd9428c":"data['home_ownership'].value_counts()","28d46744":"df=pd.get_dummies(data['home_ownership'],drop_first=True)\ndata=pd.concat([df,data],axis=1)\ndel data['home_ownership']\n# Dummy Variables","bf4b3f61":"data['pymnt_plan'].value_counts()","fdae18c0":"del data['pymnt_plan']","a1d792d0":"data.info()","63df5a05":"data['last_credit_pull_d'] = pd.to_datetime(data['last_credit_pull_d'])\ndata['Month'] = data['last_credit_pull_d'].apply(lambda x: x.month)\ndata['Year'] = data['last_credit_pull_d'].apply(lambda x: x.year)\ndata = data.drop(['last_credit_pull_d'], axis = 1)","d8eb696f":"lis3=[]\nfor i in range(len(data.dtypes)):\n    if data.dtypes[i]!='object':\n        lis3.append(data.dtypes.index[i])","5487d13a":"data=data[lis3]","ae9d1fd8":"data.isnull().sum()","04e4cb89":"del data['mths_since_last_record']\ndel data['id']\ndel data['member_id']\ndel data['tot_cur_bal']\ndel data['total_rev_hi_lim']\ndel data['policy_code']","5c8274b9":"plt.figure(figsize=(20,20))\nsns.heatmap(data.corr(),annot=False,cmap='magma')","2d6c0e1d":"data['revol_util'].fillna(data['revol_util'].mean(),inplace=True)\ndata['Month'].fillna(data.mode()['Month'][0],inplace=True)\ndata['Year'].fillna(data.mode()['Year'][0],inplace=True)","d7413338":"data.shape","930d532f":"data['last']=data['default_ind']\ndel data['default_ind']\ndata['default_ind']=data['last']\ndel data['last']","c2c06c38":"data.info()","62a4db2e":"sns.boxplot('grade','int_rate',data=data)","45a13a73":"sns.violinplot('default_ind','int_rate',data=data,bw='scott',inner='quartile')","f0169f7a":"sns.stripplot('default_ind','annual_inc',data=data,jitter=True)","008178ec":"sns.boxplot('default_ind','inq_last_6mths',data=data)","a032dc48":"sns.boxplot('default_ind','out_prncp',data=data)","4654378e":"sns.boxplot('default_ind','total_pymnt',data=data)","0006aa35":"sns.stripplot('default_ind','total_rec_prncp',data=data,jitter=True)","188819e1":"sns.violinplot('default_ind','total_rec_int',data=data,inner='quartile')","4f1ece47":"sns.boxplot('default_ind','recoveries',data=data)","1e18d029":"sns.stripplot('default_ind','recoveries',data=data,jitter=True)","0e9bb9c0":"sns.stripplot('default_ind','collection_recovery_fee',data=data,jitter=True)","fa21470e":"sns.stripplot('default_ind','last_pymnt_amnt',data=data,jitter=True)","78cdc088":"data.info()","96096ebb":"data.head()","1d56be8f":"'''train = data[data['issue_d'] < '2015-6-01']\ntest = data[data['issue_d'] >= '2015-6-01']'''","52846f32":"del data['issue_d']","d2bcb6b9":"'''X_train=train.iloc[:,:-1].values\ny_train=train.iloc[:,-1].values\nX_test=test.iloc[:,:-1].values\ny_test=test.iloc[:,-1].values'''","e85f3096":"X=data.iloc[:,:-1].values\ny=data.iloc[:,-1].values","50ec2793":"os=NearMiss(random_state=42)\nX_res,y_res=os.fit_sample(X,y)","d2c75354":"X_train,X_test,y_train,y_test=train_test_split(X_res,y_res,test_size=0.25,random_state=0)","c43108c6":"'''\nclass_weights = class_weight.compute_class_weight('balanced',\n                                                 np.unique(y_train),\n                                                 y_train)\n#model.fit(X_train, y_train, class_weight=class_weights)'''","4bfb2f91":"'''class_weights'''","8d58c0c5":"'''\nxgb= XGBClassifier()\nxgb.fit(X_train,y_train)\ny_pred=xgb.predict(X_test)'''","bbd7b601":"'''\nlr=LogisticRegression(class_weight=\"balanced\")\nlr.fit(X_train,y_train)\ny_pred=lr.predict(X_test)'''","5308bf70":"lr=RandomForestClassifier(n_estimators=10, criterion='entropy')\nlr.fit(X_train,y_train)\ny_pred=lr.predict(X_test)\ny_pred_prob=lr.predict_proba(X_test)","1e69dcb8":"print(confusion_matrix(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","4c6d99f1":"acc=cross_val_score(estimator=lr,X=X_train,y=y_train,cv=10)\nacc.mean()","b6e73906":"y_pred_prob_1=y_pred_prob[:,1]","ab3cfd6d":"fpr,tpr,thresholds=roc_curve(y_test,y_pred_prob_1)\nplt.plot(fpr,tpr)\nplt.xlim([0.0,1.0])\nplt.ylim([0.0,1.0])\nplt.title('ROC Curve')\nplt.xlabel('FalsePositiveRate')\nplt.ylabel('TruePositiveRate')\nplt.grid(True)","40d17e9e":"# Project Domain - Bank","5bf3b486":"### Last_credit_pull_d","6e2cddf4":"#### Evaluation Metrics","d6923c1c":"#### Last_pymnt_amt","8da8db96":"#### NULL Values","f46af07c":"#### total_rec_prncp","596372f6":"### Final Shape","e197bb6e":"#### Reading Data","4f9abba7":"#### Independent & Dependent Varibles","14897154":"#### Modelling","e3cb8deb":"#### Delete columns having more 8M records as NULL ","80d1d4a0":"#### Correlation of O\/P variable with all others","f5b94346":"### Please UPVOTE if you like my work!!!","636c1fd9":"### Term","e3aa54dc":"### Machine Learning\/Modelling","f17a5b08":"### Dependent Variable Analysis","c3cb2bd3":"# Continuous Variable","2c77c839":"#### Removing all object type Features","de634c9e":"#### total_pymnt","4d4cdce5":"> **DownSampling**<br>\n> **EDA**<br>\n> **ML algorithms(XGB, Logistic Regression, RandomForest)**<br>\n> **CrossValidation**","6f8dd609":"#### Importing Libraries","ccacd676":"#### Downsampling","7df6f8b2":"#### total_rec_int","301fdf14":"### Initial_list_status","1ac66eff":"#### Splitting data","217f0b7e":"#### Int_rate","cab9e76c":"#### Making Output Variable last column","5dc398c5":"### HIGHLIGHTS ","1f08e2e2":"### Pymnt_Plan","ecf23c60":"#### Recoveries","1f35182a":"#### Deleting unnecessary columns","68aa489f":"**Thus, we can conclude it is an Imbalanced Data**","aa295b64":"#### Total columns left- 43","9b5bf0f4":"## Task- Predict Defaulters","c8627659":"### Verification_Status","5ffad7d3":"#### APPLICATION_TYPE","edf4e24c":"#### Filling Null values","690a4cca":"#### Removing columns with very low Correlation","6be29a73":"#### collection_recovery_fee","348a36c9":"#### annual_inc","d1b1ff8f":"#### Cross-Validation","1c401762":"#### Grouping based on O\/P variable","7dc9e3eb":"### Home_Ownership","d9955918":"#### out_prncp","ff68997c":"#### inq_last_6mths","4dc762bd":"# Exploratory Data Analysis","f41d1c25":"## Text Data(Object Type)","6e1b9c06":"### ROC Curve","75fff667":"### Grade","34420471":"#### HEATMAP","3efc93a1":"### Deleting date column"}}