{"cell_type":{"f8bee773":"code","323d1f12":"code","b4894cb8":"code","6faad501":"code","1a1e0c8e":"code","b908de83":"code","393e3360":"code","c8c417e1":"code","062928b3":"code","29c1f421":"code","de4a2d02":"code","5ab52dd3":"code","47d9e962":"code","773e77cb":"code","d2f96d8b":"code","d2aa23d2":"code","e6fa2cc1":"code","8205ffb7":"code","f1187362":"code","4f492b3e":"code","0fc7a87d":"code","d3ce60a0":"code","e9d01de4":"code","7e714e0b":"code","e74d501d":"code","ba2f9c20":"code","611b657d":"code","dc763f97":"code","a0d70216":"code","3a2b1cd8":"markdown","17ae8b2d":"markdown","e6428837":"markdown","632971fa":"markdown","b39752df":"markdown","cd2ac6f5":"markdown","3017ebc2":"markdown","935a80ca":"markdown","c75b3cca":"markdown","a3245db5":"markdown","83bf2e11":"markdown","8240fb53":"markdown","6df4bd86":"markdown","402c0269":"markdown","7f211082":"markdown","f01e29ad":"markdown"},"source":{"f8bee773":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler","323d1f12":"def remove_percent_sign(string):\n    \"\"\" Removing percent sign\"\"\"\n    if pd.isnull(string):\n        return string\n    else:\n        return string.replace('%', '')\n\ndef adding_proportions(df, dividend, divider,new_col_names):\n    \"\"\"Dividing columns in order to get proportion data\"\"\"\n    i= 0\n    for i in range(len(dividend)):\n        df[new_col_names[i]] = df[dividend[i]]\/df[divider[i]]\n        i+=1\n\ndef get_reg_data(df, X_column_name, y_column_name, remove_zeros=False):\n    \"\"\" Preparing columns for linear regression \"\"\"\n    df_name=df\n    df_name[X_column_name]=pd.to_numeric(df_name[X_column_name], errors ='ignore')\n    df_name[y_column_name]=pd.to_numeric(df_name[y_column_name], errors ='ignore')\n   \n    \n    if remove_zeros:\n        df_name= df_name[df_name[X_column_name]!=0]\n        df_name= df_name[df_name[y_column_name]!=0]\n    \n    data_for_reg = df_name[[X_column_name, y_column_name]].dropna()\n    \n    x = data_for_reg[X_column_name]\n    y = data_for_reg[y_column_name]\n    \n    return x, y\n\ndef generate_reg_graph(df, X_column, y_column, no_zeros=False):\n    \"\"\" Peforms linear regression and graphs, can be provided with a list of columns\"\"\"\n    if type(X_column) != list:\n        X_column =[X_column]   \n    if type(y_column) !=list:\n        y_column = [y_column]\n    for x_col in X_column:\n            for y_col in y_column:\n                x, y = get_reg_data(df, x_col, y_col,remove_zeros=no_zeros )\n                if len(x) == len(y):\n                    n=len(x)\n                \n\n                slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)\n                plt.scatter( x, y)\n                if p_value<0.05:\n                    plt.plot(x, intercept + slope * x, '-', color='red')\n                \n                plt.xlabel(x_col)\n                plt.ylabel(y_col)\n                plt.show()\n                print('x:{}, y:{}, r_value:{}, p_value:{:.3f}, n :{}'.format(x_col, y_col, r_value, p_value, n))\n              ","b4894cb8":"#Reading, cleaning and adding calculations for the school data\nschool_data = pd.read_csv('..\/input\/data-science-for-good\/2016 School Explorer.csv')\nstr_cols_bool = (school_data.dtypes == object)\nstr_cols = list(str_cols_bool[str_cols_bool].index)\n\nfor col in str_cols:\n    school_data[col]=school_data[col].apply(remove_percent_sign)    \n\nela_4s = ['Grade 3 ELA 4s - All Students',\n          'Grade 4 ELA 4s - All Students',\n          'Grade 5 ELA 4s - All Students',\n          'Grade 6 ELA 4s - All Students',\n          'Grade 7 ELA 4s - All Students',\n          'Grade 8 ELA 4s - All Students']\n\nela_tested =['Grade 3 ELA - All Students Tested',\n             'Grade 4 ELA - All Students Tested',\n             'Grade 5 ELA - All Students Tested',\n             'Grade 6 ELA - All Students Tested',\n             'Grade 7 ELA - All Students Tested',\n             'Grade 8 ELA - All Students Tested']\n\nmath_4s = ['Grade 3 Math 4s - All Students',\n          'Grade 4 Math 4s - All Students',\n          'Grade 5 Math 4s - All Students',\n          'Grade 6 Math 4s - All Students',\n          'Grade 7 Math 4s - All Students',\n          'Grade 8 Math 4s - All Students']\n\nmath_tested= ['Grade 3 Math - All Students tested',\n             'Grade 4 Math - All Students Tested',\n             'Grade 5 Math - All Students Tested',\n             'Grade 6 Math - All Students Tested',\n             'Grade 7 Math - All Students Tested',\n             'Grade 8 Math - All Students Tested']\n\nela_new_cols = ['Grade 3 ELA 4s proportion',\n          'Grade 4 ELA 4s proportion',\n          'Grade 5 ELA 4s proportion',\n          'Grade 6 ELA 4s proportion',\n          'Grade 7 ELA 4s proportion',\n          'Grade 8 ELA 4s proportion']\n\nmath_new_cols =['Grade 3 Math 4s proportion',\n          'Grade 4 Math 4s proportion',\n          'Grade 5 Math 4s proportion',\n          'Grade 6 Math 4s proportion',\n          'Grade 7 Math 4s proportion',\n          'Grade 8 Math 4s proportion']\n\nadding_proportions(school_data, ela_4s, ela_tested, ela_new_cols)\nadding_proportions(school_data, math_4s, math_tested, math_new_cols)","6faad501":"#Reading and adding calculations for SHSAT data\nshsat_data = pd.read_csv('..\/input\/data-science-for-good\/D5 SHSAT Registrations and Testers.csv')\nshsat_data['Rate of students taking SHSAT']=shsat_data['Number of students who took the SHSAT']\/shsat_data['Enrollment on 10\/31']\nshsat_data['registered\/enrolled'] = shsat_data['Number of students who registered for the SHSAT']\/shsat_data['Enrollment on 10\/31']\nshsat_data['took\/registered'] = shsat_data['Number of students who took the SHSAT']\/shsat_data['Number of students who registered for the SHSAT']","1a1e0c8e":"avg_shsat = shsat_data.groupby('School name')['Rate of students taking SHSAT', 'registered\/enrolled', 'took\/registered'].mean()\navg_shsat = avg_shsat.reset_index()\navg_shsat['School Name']=avg_shsat['School name'].apply(lambda x: x.upper())\nschools_shsat = school_data.merge(avg_shsat, how='inner')\nschools_shsat['Student Attendance Rate'].replace(0,np.nan, inplace=True)\n","b908de83":"plt.figure(figsize=(16,16))\nax1 = plt.subplot(3,2,1)\nsns.swarmplot(x= 'Strong Family-Community Ties Rating',  y='Rate of students taking SHSAT' , data = schools_shsat)\nplt.ylabel('Rate of students taking the SHSAT')\n\nplt.subplot(3,2,2, sharex=ax1)\nsns.swarmplot(x= 'Rigorous Instruction Rating',  y='Rate of students taking SHSAT' , data = schools_shsat,\n              order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,3, sharex=ax1)\nsns.swarmplot(x= 'Collaborative Teachers Rating',  y='Rate of students taking SHSAT' , data = schools_shsat, \n              order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,4,sharex=ax1)\nsns.swarmplot(x= 'Effective School Leadership Rating',  y='Rate of students taking SHSAT' , data = schools_shsat,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,5,sharex=ax1)\nsns.swarmplot(x= 'Trust Rating',  y='Rate of students taking SHSAT' , data = schools_shsat,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\n\nplt.subplot(3,2,6,sharex=ax1)\nsns.swarmplot(x= 'Student Achievement Rating',  y='Rate of students taking SHSAT' , data = schools_shsat,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\nplt.show()","393e3360":"def perform_anova(df, category,col_of_interest ):\n    exceeds = df[df[category]=='Exceeding Target'].loc[:,col_of_interest ]\n    meets = df[df[category]=='Meeting Target'].loc[:,col_of_interest ]\n    approaches = df[df[category]=='Approaching Target'].loc[:,col_of_interest ]\n    F_value, p_value = stats.f_oneway(exceeds, meets, approaches)\n    print('{}, {}, F_value = {:.3f}, p_value = {:.3f}\\n'.format(category, col_of_interest,F_value, p_value))","c8c417e1":"perform_anova(schools_shsat, 'Effective School Leadership Rating', 'Rate of students taking SHSAT' )","062928b3":"perform_anova(schools_shsat, 'Student Achievement Rating', 'Rate of students taking SHSAT' )","29c1f421":"cols_of_interest = ['Grade 8 ELA 4s proportion',\n                    'Percent ELL', \n                   'Percent Black \/ Hispanic',\n                   'Percent Black',\n                   'Percent Hispanic',\n                   'Percent Asian',\n                   'Percent White',\n                   'Average ELA Proficiency',\n                    'Average Math Proficiency',\n 'Grade 6 ELA 4s proportion',\n 'Grade 7 ELA 4s proportion',\n 'Grade 8 ELA 4s proportion',\n 'Grade 6 Math 4s proportion',\n 'Grade 7 Math 4s proportion',\n 'Grade 8 Math 4s proportion']\n                    \ngenerate_reg_graph(schools_shsat, X_column='Student Attendance Rate', y_column= 'Rate of students taking SHSAT', no_zeros=True)\ngenerate_reg_graph(schools_shsat, X_column=cols_of_interest, y_column= 'Rate of students taking SHSAT', no_zeros=False)\n","de4a2d02":"schma = pd.read_csv('..\/input\/schema\/schma19962016.csv', low_memory=False)\n\ndiploma_rate = schma[['SCHNAM', 'YEAR', 'HPGPERDIP4AVG']].dropna()\n\ndiploma_rate.rename(columns={'SCHNAM': 'School Name', 'YEAR': 'Year','HPGPERDIP4AVG':'Diploma Rate'}, inplace=True)\n\n#diploma_rate['Year'].unique()\n\ndiploma_rate_2010_2013= diploma_rate[diploma_rate['Year']>2009]\n\ndiploma_rate_2010_2013= diploma_rate_2010_2013.dropna()\n\ndiploma_rate_2010_2013= diploma_rate_2010_2013.groupby('School Name')['Diploma Rate'].mean().to_frame()\n\ndiploma_rate_2010_2013=diploma_rate_2010_2013.reset_index()\nschools_diploma_rate = diploma_rate_2010_2013.merge(school_data)","5ab52dd3":"cols_to_check = ['Economic Need Index',\n                 'Percent ELL',\n 'Percent Black \/ Hispanic',\n 'Percent Black',\n 'Percent Hispanic',\n 'Percent Asian',\n 'Percent White',\n 'Average ELA Proficiency',\n 'Average Math Proficiency']","47d9e962":"generate_reg_graph(schools_diploma_rate, X_column='Student Attendance Rate', y_column= 'Diploma Rate', no_zeros=True)","773e77cb":"generate_reg_graph(schools_diploma_rate, X_column=cols_to_check, y_column= 'Diploma Rate', no_zeros=False)","d2f96d8b":"plt.figure(figsize=(16,16))\nax1 = plt.subplot(3,2,1)\nsns.violinplot(x= 'Strong Family-Community Ties Rating',  y='Average ELA Proficiency' , data = school_data)\n#plt.ylabel('Rate of students taking the SHSAT')\n\nplt.subplot(3,2,2, sharex=ax1)\nsns.violinplot(x= 'Collaborative Teachers Rating',  y='Average ELA Proficiency' , data = school_data,\n              order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\n#plt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,3, sharex=ax1)\nsns.violinplot(x= 'Rigorous Instruction Rating',  y='Average ELA Proficiency' , data = school_data, \n              order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\n#plt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,4,sharex=ax1)\nsns.violinplot(x= 'Effective School Leadership Rating',y='Average ELA Proficiency' , data = school_data,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\n#plt.ylabel('Rate of students taking the SHSAT')\nplt.subplot(3,2,5,sharex=ax1)\nsns.violinplot(x= 'Trust Rating',y='Average ELA Proficiency' , data = school_data,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\n#plt.ylabel('Rate of students taking the SHSAT')\n\nplt.subplot(3,2,6,sharex=ax1)\nsns.violinplot(x= 'Student Achievement Rating',y='Average ELA Proficiency' , data = school_data,\n             order = ['Exceeding Target','Meeting Target', 'Approaching Target'] )\nplt.ylabel('Rate of students taking the SHSAT')\nplt.show()","d2aa23d2":"perform_anova(school_data, 'Strong Family-Community Ties Rating', 'Average ELA Proficiency' )","e6fa2cc1":"perform_anova(school_data, 'Rigorous Instruction Rating', 'Average ELA Proficiency' )","8205ffb7":"perform_anova(school_data, 'Effective School Leadership Rating', 'Average ELA Proficiency' )","f1187362":"perform_anova(school_data, 'Collaborative Teachers Rating', 'Average ELA Proficiency' )","4f492b3e":"perform_anova(school_data, 'Trust Rating', 'Average ELA Proficiency' )","0fc7a87d":"perform_anova(school_data, 'Student Achievement Rating', 'Average ELA Proficiency' )","d3ce60a0":"cols_for_ela = ['Economic Need Index',\n                'Percent ELL', \n                'Percent Black \/ Hispanic',\n                'Percent Black',\n                'Percent Hispanic',\n                'Percent Asian',\n                'Percent White']\n                ","e9d01de4":"generate_reg_graph(school_data, X_column='Student Attendance Rate', y_column= 'Average ELA Proficiency', no_zeros=True)","7e714e0b":"generate_reg_graph(school_data, X_column=cols_for_ela, y_column= 'Average ELA Proficiency', no_zeros=False)","e74d501d":"cols_demographics = ['Percent ELL', \n                'Percent Black \/ Hispanic',\n                'Percent Black',\n                'Percent Hispanic',\n                'Percent Asian',\n                'Percent White']","ba2f9c20":"generate_reg_graph(school_data, X_column=cols_demographics, y_column= 'Economic Need Index', no_zeros=False)","611b657d":"schools_need = school_data.loc[:, ['School Name','Economic Need Index', 'Student Attendance Rate']].sort_values(by=['Economic Need Index', 'Student Attendance Rate'], ascending = [False, True])","dc763f97":"the_ten_in_need = schools_need.iloc[0:9,:]","a0d70216":"the_ten_in_need","3a2b1cd8":"The small amount of data limits the inference ability. I performed ANOVA to find out if there is a siginificant differnce between the levels (Exceeding target, meeting target and approaching target) for the parameters of effective school leadership and student achievement rating.","17ae8b2d":"Let's explore the quantative variables using simple linear regression ","e6428837":"Family community ties:  There is a difference in the ELA scores between the three groups, but actually the lowest family- community ties rating has the higher ELA proficiency.","632971fa":"Here is the list of ten schools with the highest Economic need and the lowest student attendance","b39752df":"The following features were significantly and positively correlated with the proportion of kids taking the test: \n* The proportion of students in grade  5, 6, 7 that are in  the highest level of ELA (English Language arts) \n*  The proportion of students in grade 6, 7 that are in  the highest level of Math","cd2ac6f5":"The best predictor for ELA score is the economic need index. Student attendence rate plays a role as well. The demographics of the schools are correlated with ELA scores- But are also correlated with economic need.","3017ebc2":"Let's have a look on how other factors can contribute to higher levels of SHSAT taking","935a80ca":"SHSAT-taking rate by categorical features:","c75b3cca":"The schools that need the most assistance are the schools with lower attendence rate and higher economic needs:","a3245db5":"Performed ANOVA for the different parameters:","83bf2e11":"* ELA and Math scores keeps re-surfecing as good predictors of academic success. Let's explore the full school data to see what might influence ELA scores.","8240fb53":"For the SHSAT data (School, year, grade registration and taking the test ) I evaluated the mean values for each school (regardless of grade and year), and applied the additional feature of the school by mergeing with the school data. ","6df4bd86":"In all other categorical variables the ELA proficiency mean differs between the 3 levels, which makes each and one of them a possible predictor for ELA scores.","402c0269":"* Average diploma rates at the schools were positively correlated with Average ELA and Math scores, Attendence rate, percent of Asian students,\n* Average diploma rates at the schools were negetively correlated with economic need, the percent of Black\/Hispanic students, percent of Hispanic students, and percent of English learners. \n","7f211082":"PASSNYC seeks to increase the participation of underserved 8-9th graders in SHSAT exam, which can land them a spot in NYC best high schools. In order to do so,  schools that can benefit greatly from targeted survices should be identified.\n\nMy Objectives are:\n* Explore the SHSAT participation data of Central Harlem schools to identify factors affecting participation\n* Explore the NYC schools data set and additional resources according the these factors\n* Set criteria for schools that can benefit from additional resources and services\n* Identify these schools\n\n","f01e29ad":"ELA results appear to be an interesting factor to further explore, but the available SHSAT data is limited. I chose to explore another parameter of success- gaining a high school diploma. In order to do so, I use the SCHAMA dataset, and focus on the diploma rate after 2009."}}