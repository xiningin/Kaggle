{"cell_type":{"c5642c4a":"code","8bf9aa6f":"code","90172215":"code","170888c1":"code","72f15bb0":"code","079511d2":"code","b6dc6456":"code","e7ff6069":"code","38e56bd0":"code","6977380b":"code","10fb5a69":"code","e1e50fc9":"code","63a1868c":"code","90a38cd5":"code","8c48b219":"code","c1011aef":"code","ba3e0602":"code","85697298":"code","ab36cb3b":"code","b9bf8186":"code","c004083e":"code","48ab91e2":"code","6e99178a":"code","a034f91d":"code","f464a557":"code","d034d615":"code","ccd90911":"code","64c5266e":"code","72eebd60":"code","f94f567e":"code","3c749f12":"code","439623c4":"code","f380de6e":"code","020f24c3":"code","dc533d47":"code","1e916a8e":"code","a23a0e4a":"code","8c2e42c0":"code","d71247dc":"code","94a044db":"code","f790c8e3":"markdown","cc510ddc":"markdown","15834da6":"markdown","e8912d03":"markdown","78f0244c":"markdown","938a0c92":"markdown","19bde53e":"markdown","7faadd64":"markdown","b7d43bca":"markdown","0b7b2387":"markdown","46493034":"markdown","1ba7cc5d":"markdown","36e843bb":"markdown","f2f4bf25":"markdown","ce8c9f11":"markdown","188e1ffa":"markdown","0095a8a8":"markdown"},"source":{"c5642c4a":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport matplotlib.gridspec as gridspec \nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom plotly.offline import plot\nimport warnings\nwarnings.filterwarnings(action='ignore')","8bf9aa6f":"df = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf.head()","90172215":"df.drop([0,1], inplace=True)","170888c1":"df.isnull().sum().sort_values(ascending = False)","72f15bb0":"for col in df.columns:\n    df[col].fillna(\"Missing\",inplace=True)","079511d2":"def univariate_plots(feat,name):\n    count = df[feat].value_counts().sort_values(ascending = False)\n\n    # lets visualize the feature distribution in the dataset\n    fig = px.pie(count,\n                 values=count.values,\n                 names=count.index,\n                 color_discrete_sequence=orange_black,\n                 hole=.1,title= name + \" Distribution\")\n    fig.update_traces(textinfo='percent', pull=0.01)    \n    fig.show()","b6dc6456":"orange_black = ['#fdc029', '#df861d', '#FF6347', '#aa3d01', '#a30e15', '#800000', '#171820']\n\n# Setting plot styling.\nplt.style.use('fivethirtyeight')","e7ff6069":"agedata = df['Q1'].sort_index()\nagedata","38e56bd0":"import seaborn as sb\nimport seaborn as sns\nagedata = df['Q1'].sort_index()\nx = df['Q1']\nsns.countplot( x=\"Q1\", data = df)\n\n\nplt.title('Distribution of Age',fontsize=20)\nplt.xticks(rotation =90, fontsize=20)\nplt.xlabel('Age',fontsize=20)","6977380b":"univariate_plots(\"Q1\",\"Age Wise\")","10fb5a69":"gender = df['Q2'].value_counts().sort_index()\ngender","e1e50fc9":"import seaborn as sb\nimport seaborn as sns\nx = df['Q2']\nsns.countplot( x='Q2', data = df,order = gender.index)\n\nplt.title('Gender',fontsize=20)\nplt.xticks(rotation=90,fontsize=20)\nplt.xlabel('Gender',fontsize=20)","63a1868c":"univariate_plots(\"Q2\",\"Gender\")","90a38cd5":"country = df['Q3'].value_counts().sort_index()\ncountry","8c48b219":"education = df['Q4'].value_counts().sort_index()\neducation","c1011aef":"univariate_plots(\"Q4\",\"Education\")","ba3e0602":"import seaborn as sns\nagedata = df['Q4'].sort_index()\nx = df['Q4']\nsns.countplot( x=\"Q4\", data = df)\n\nplt.title('Distribution of Education',fontsize=20)\nplt.xticks(rotation=90, fontsize=20)\nplt.xlabel('Education',fontsize=20)","85697298":"univariate_plots(\"Q4\",\"Education Status\")","ab36cb3b":"role = df['Q5'].value_counts().sort_index()\nrole","b9bf8186":"\nexperience = df['Q6'].value_counts().sort_index()\nexperience","c004083e":"language = df[[i for i in df.columns if 'Q7' in i]]\nlanguage_all = pd.Series(dtype='int')\nfor i in language.columns:\n    language_all[language[i].value_counts().index[0]] = language[i].count()\n\nlanguage_all = language_all.sort_values(ascending=True)\nlanguage_all","48ab91e2":"recommended = df['Q8'].value_counts().sort_index()\nrecommended","6e99178a":"values = []\nindex  = [\"Python\",\"R\",\"SQL\",\"C\",\"C++\",\"JAVA\",\"Java Script\",\"Julia\",\"Swift\",\"Bash\",\"MATLAB\",\"None\",\"Other\"]\n\nvalues.append((len(df[df['Q7_Part_1']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_2']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_3']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_4']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_5']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_6']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_7']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_8']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_9']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_10'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_11'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_Part_12'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q7_OTHER']   != \"Missing\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=index,\n            y=values,\n            palette=orange_black)\nplt.xticks(rotation=30)\nplt.title('Programming Languages used on a Regular Basis')","a034f91d":"df_ides = df[[i for i in df.columns if 'Q9' in i]]\ndf_ides_all = pd.Series(dtype='int')\nfor i in df_ides.columns:\n    df_ides_all[df_ides[i].value_counts().index[0]] = df_ides[i].count()\ndf_ides_all","f464a557":"values = []\nindex  = [\"Jupyter\",\"RStudio\",\"Visual Studio\",\"VSCode\",\"PyCharm\",\"Spyder\",\"Notepad++\",\"Sublime Text\",\"Vim\/Emacs\",\"MATLAB\",\"None\",\"Other\"]\n\nvalues.append((len(df[df['Q9_Part_1']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_2']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_3']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_4']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_5']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_6']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_7']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_8']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_9']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_10'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_Part_11'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q9_OTHER']   != \"Missing\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=index,\n            y=values,\n            palette=orange_black)\nplt.xticks(rotation=20)\nplt.title('Integrated Development Environment')","d034d615":"df_notebooks = df[[i for i in df.columns if 'Q10' in i]]\ndf_notebooks_all = pd.Series(dtype='int')\nfor i in df_notebooks.columns:\n    df_notebooks_all[df_notebooks[i].value_counts().index[0]] = df_notebooks[i].count()\ndf_notebooks_all","ccd90911":"values = []\nindex  = [\"Kaggle Notebooks\",\"Colab Notebooks\",\"Azure Notebooks\",\"PaperSpace\/Gradient\",\"Binder\/JupyterHub\",\"Code Ocean\",\n          \"IBM Watson Studio\",\"Amazon Sagemaker Studio\",\"Amazon EMR Notebooks\",\"Google Cloud AI Platform Notebook\",\n          \"Google Cloud Datalab Notebooks\",\"Databricks Collaborative Notebooks\",\"None\",\"Other\"]\n\nvalues.append((len(df[df['Q10_Part_1']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_2']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_3']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_4']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_5']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_6']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_7']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_8']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_9']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_10'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_11'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_12'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_Part_13'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q10_OTHER']   != \"Missing\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=values,\n            y=index,\n            palette=\"rocket\")\nplt.xticks(rotation=30)\nplt.title('Hosted Notebook Products used')","64c5266e":"platform = df['Q11'].value_counts().sort_index()\nplatform","72eebd60":"univariate_plots(\"Q11\",\"Computing Platform Wise\")","f94f567e":"df_hardware = df[[i for i in df.columns if 'Q12' in i]]\ndf_hardware_all = pd.Series(dtype='int')\nfor i in df_hardware.columns:\n    df_hardware_all[df_hardware[i].value_counts().index[0]] = df_hardware[i].count()\ndf_hardware_all","3c749f12":"values = []\nindex  = ['GPUs','None','TPUs','Others']\n\n\nvalues.append((len(df[df['Q12_Part_1'] == \"GPUs\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q12_Part_3'] == \"None\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q12_Part_2'] == \"TPUs\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q12_OTHER'] == \"Other\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"Users%\":values})\n\nplt.figure(figsize = (12,8))\n\nsns.barplot(x=index,\n            y=\"Users%\",\n            data=users,\n            palette=\"deep\")\nplt.title('Specialized Hardware Used')","439623c4":"tpu = df['Q13'].value_counts().sort_index()\ntpu","f380de6e":"univariate_plots(\"Q13\",\"TPU Use Rate Wise\")","020f24c3":"df_library = df[[i for i in df.columns if 'Q14' in i]]\ndf_library_all = pd.Series(dtype='int')\nfor i in df_library.columns:\n    df_library_all[df_library[i].value_counts().index[0]] = df_library[i].count()\ndf_library_all","dc533d47":"values = []\nindex  = [\"Matplotlib\",\"Seaborn\",\"Plotly\",\"GGplot\",\"Shiny\",\"D3 js\",\"Altair\",\"Bokeh\",\"Geoplotlib\",\"Leafleat\/Folium\",\"None\",\"Other\"]\n\nvalues.append((len(df[df['Q14_Part_1']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_2']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_3']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_4']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_5']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_6']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_7']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_8']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_9']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_10'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_Part_11'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q14_OTHER']   != \"Missing\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=values,\n            y=index,\n            palette=\"pastel\")\nplt.xticks(rotation=30)\nplt.title('Data Visualization Libraries or Tools')","1e916a8e":"df_mlyears = df[[i for i in df.columns if 'Q15' in i]]\ndf_mlyears_all = pd.Series(dtype='int')\nfor i in df_mlyears.columns:\n    df_mlyears_all[df_mlyears[i].value_counts().index[0]] = df_mlyears[i].count()\ndf_mlyears","a23a0e4a":"univariate_plots(\"Q15\",\"Year using ML Methods\")","8c2e42c0":"df_mlframe = df[[i for i in df.columns if 'Q16' in i]]\ndf_mlframe_all = pd.Series(dtype='int')\nfor i in df_mlframe.columns:\n    df_mlframe_all[df_mlframe[i].value_counts().index[0]] = df_mlframe[i].count()\ndf_mlframe","d71247dc":"values = []\nindex  = [\"Scikit-Learn\",\"TensorFlow\",\"Keras\",\"PyTorch\",\"Fast.ai\",\"MXNet\",\"XGBoost\",\"LGBM\",\"CatBoost\",\"Prophet\",\"H20 3\",\n          \"Caret\",\"Tidymodels\",\"JAX\",\"None\",\"Other\"]\n\nvalues.append((len(df[df['Q16_Part_1']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_2']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_3']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_4']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_5']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_6']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_7']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_8']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_9']  != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_10'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_11'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_12'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_13'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_14'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_Part_15'] != \"Missing\"])\/df.shape[0])*100)\nvalues.append((len(df[df['Q16_OTHER']   != \"Missing\"])\/df.shape[0])*100)\n\nusers = pd.DataFrame({\"index\":index,\"value\":values})\n\nplt.figure(figsize = (12,8))\nsns.barplot(x=index,\n            y=values,\n            palette=\"Set2\")\nplt.xticks(rotation=30)\nplt.title('Machine Learning Frameworks')","94a044db":"univariate_plots(\"Q20\",\"Size Of the Company\")","f790c8e3":"\nProgramming Language Experience","cc510ddc":"Programming Language","15834da6":"Size of the company where you are employed","e8912d03":"Age Distribution","78f0244c":"Hardware","938a0c92":"Country","19bde53e":"Computing Platform","7faadd64":"Visualization Libraries","b7d43bca":"Years of Using Machine learning","0b7b2387":"Recommended Programming Language","46493034":"Current Role","1ba7cc5d":"Gender","36e843bb":"\nMost Used Machine Learning Framework","f2f4bf25":"TPU Use Rate","ce8c9f11":"\nHosted Notebooks","188e1ffa":"Favourite IDE","0095a8a8":"Education"}}