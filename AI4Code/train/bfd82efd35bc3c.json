{"cell_type":{"ad78d505":"code","88b7fa9b":"code","4982a537":"code","fdc03bdb":"code","c844ef49":"code","5fdfd3f6":"code","02471316":"code","5629d8f6":"code","5f52daec":"code","416e9040":"code","da88ec25":"code","e695c23f":"code","81006b16":"code","ffb5e4f4":"code","300e5032":"code","3e70b613":"code","8b55956d":"code","58a13456":"code","d1a1d622":"code","d6805f1f":"code","34ef94a7":"code","78c0df03":"code","6c313396":"code","36bb9abe":"code","7f44721d":"code","d4f9dd10":"code","eae6ce11":"code","3ad99ceb":"code","3b4441fb":"code","c529e744":"code","56b889dc":"code","8280bc29":"code","dcbb5025":"code","a1155fbf":"code","43cd6002":"code","0da67c42":"code","1f460b4e":"code","81a8fe5b":"code","4068271a":"code","af7c8478":"code","b80c0d6e":"code","ebdb1f8b":"code","5cb82d1f":"code","bbe05e05":"code","5e105a95":"code","d090ed46":"code","23dc17ea":"code","227abe66":"code","275b934e":"code","c58e57f8":"code","2c2e3b13":"code","af1ad518":"code","157eb8d3":"code","b3fe53c1":"code","3162abf6":"code","fc7ce480":"code","c8b430e0":"code","e75abcdd":"code","12db0121":"code","92289b25":"code","89621a12":"code","e6330454":"code","bd433cf2":"code","a56f9e14":"code","159777be":"code","546fac48":"code","157a5db2":"code","1a6e2c62":"code","23a9ee77":"code","769084d8":"code","6d539575":"code","2b7bf087":"code","9c7ae8a5":"code","61509cfd":"code","f2a9cea3":"code","f807348a":"code","5c7487c5":"code","8cc7d55f":"code","6c221090":"markdown","200c0fa5":"markdown","fc2df5fb":"markdown","28f8369d":"markdown","202f36aa":"markdown","0e1881e5":"markdown","7798beb6":"markdown","fc0940b8":"markdown","5b575525":"markdown","e77372c7":"markdown","8911c3b4":"markdown","28214cc6":"markdown","30e783ef":"markdown","c1c29d45":"markdown","70a1317c":"markdown","abc77ce5":"markdown","8b0daf07":"markdown"},"source":{"ad78d505":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#plt.style.use('ggplot')\n#plt.style.use('tableau-colorblind10')\n\n%matplotlib inline","88b7fa9b":"pd.set_option('display.max_columns', None)\ndata= pd.read_csv(\"..\/input\/fifa19\/data.csv\")\n","4982a537":"data.head()","fdc03bdb":"def value_and_wage_conversion(Value):\n    out = Value.replace('\u20ac', '')\n    if 'M' in out:\n        out = float(out.replace('M', ''))*1000000\n    elif 'K' in Value:\n        out = float(out.replace('K', ''))*1000\n    return float(out)\n\n\ndata['Value'] = data['Value'].apply(lambda x: value_and_wage_conversion(x))\ndata['Wage'] = data['Wage'].apply(lambda x: value_and_wage_conversion(x))\n\ndata['Wage'].head()","c844ef49":"data.head()","5fdfd3f6":"data.describe()","02471316":"data.columns","5629d8f6":"data['Club'].fillna('No Club', inplace = True)\ndata['Position'].fillna('unknown', inplace = True)\ndata['Work Rate'].fillna('Medium\/ Medium', inplace = True)\ndata['Preferred Foot'].fillna('Right', inplace = True)\n","5f52daec":"data.isnull().sum()","416e9040":"new_data=data[[\"Name\",\"Nationality\",\"Club\",\"Age\",'Overall','Position',\"Preferred Foot\",'Value','Wage','Work Rate','International Reputation', 'Skill Moves', 'Finishing', 'FKAccuracy', 'SprintSpeed']]\n\nnew_data.head()\n","da88ec25":"new_data.shape","e695c23f":"new_data.info()","81006b16":"new_data.isnull().sum()","ffb5e4f4":"new_data[\"International Reputation\"].fillna(3, inplace = True)\nnew_data['Skill Moves'].fillna(3, inplace = True)\nnew_data['Finishing'].fillna(int(new_data['Finishing'].median()), inplace = True)\nnew_data[\"FKAccuracy\"].fillna(int(new_data[\"FKAccuracy\"].median()), inplace = True)\nnew_data[\"SprintSpeed\"].fillna(int(new_data[\"SprintSpeed\"].median()), inplace = True)\n","300e5032":"new_data.isnull().sum()","3e70b613":"sns.pairplot(new_data[[\"International Reputation\",\"Skill Moves\",\"Finishing\",\"FKAccuracy\",\"SprintSpeed\"]], palette='deep')\n","8b55956d":"plt.figure(figsize=(15, 7))\n#new_data[\"International Reputation\"].plot(kind=\"hist\")\n#new_data[\"Finishing\"].plot(kind=\"hist\")\n#new_data[\"Skill Moves\"].plot(kind=\"hist\")\n#new_data[\"FKAccuracy\"].plot(kind=\"hist\")\nnew_data[\"SprintSpeed\"].plot(kind=\"hist\")\n\nplt.xlabel(\"overall\")\nplt.title(\"Sprint Speed distribution\", fontsize = 20)\n\nplt.show()","58a13456":"new_data[new_data[\"International Reputation\"] == 5]","d1a1d622":"top_speed = new_data.sort_values(by=['SprintSpeed'], ascending=False).head(10)\nfk = new_data.sort_values(by=['FKAccuracy'], ascending=False).head(10)\nsk = new_data.sort_values(by=['Skill Moves',\"Overall\"], ascending=False).head(10)\nfinish = new_data.sort_values(by=['Finishing'], ascending=False).head(10)\n","d6805f1f":"fig, ax1 = plt.subplots(nrows=4, ncols=1, figsize=[15, 25])\n\n\np1 = sns.lineplot(top_speed[\"Name\"],top_speed[\"SprintSpeed\"],ax = ax1[0], color = \"royalblue\")\n#p1.set_yscale(\"log\")\np1.set_title(\"fastest 10 players in fifa\", fontsize=18)\n#p1.set_yticks([0, 20,40,60,80,100])\n#p1.set_yticklabels(['0', '20','40','60','80','100']);\n\n\np2 = sns.lineplot(fk[\"Name\"],fk[\"FKAccuracy\"],ax = ax1[1], color = \"royalblue\")\np2.set_title(\"best Free kick takers\", fontsize=18)\n#p2.set_yscale(\"log\")\n#p2.set_yticks([0, 0.2,0.4,0.6,0.8,1])\n#p2.set_yticklabels(['0', '20','40','60','80','100'])\n\np3 = sns.lineplot(sk[\"Name\"],sk[\"Overall\"],ax = ax1[2], color = \"royalblue\")\np3.set_title(\"best Skilled players\", fontsize=18)\n#p3.set_yscale(\"log\")\n\np4 = sns.lineplot(finish[\"Name\"],finish[\"Finishing\"],ax = ax1[3], color = \"royalblue\")\np4.set_title(\"best Finishers\", fontsize=18)\n#p4.set_yscale(\"log\")\n\nplt.show()","34ef94a7":"plt.style.use('ggplot')\nplt.rcParams['figure.figsize'] = (13, 7)\nsns.countplot(new_data['Preferred Foot'])\nplt.title('Most Preferred Foot of the Players', fontsize = 20)\nplt.show()","78c0df03":"plt.rcParams['figure.figsize'] = (15, 7)\n\nsns.countplot(new_data['Position'],color=\"royalblue\")\nplt.title(\"Player's positions distribution\", fontsize = 20)\nplt.tick_params(axis='x', rotation=70)\nplt.show()","6c313396":"new_data['Position'].unique()","36bb9abe":"conditions = [\n    (new_data['Position'] == 'RF') | (new_data['Position'] == 'ST') | (new_data['Position'] == 'LW') | (new_data['Position'] == 'LF') | (new_data['Position'] == 'RS') | (new_data['Position'] == 'LS') | (new_data['Position'] == 'RW') | (new_data['Position'] == 'CF')\n    ,(new_data['Position'] == 'RCM') | (new_data['Position'] == 'LCM') | (new_data['Position'] == 'LDM') | (new_data['Position'] == 'CAM') | (new_data['Position'] == 'CDM') | (new_data['Position'] == 'RM') | (new_data['Position'] == 'LAM') | (new_data['Position'] == 'LM') | (new_data['Position'] == 'RDM') & (new_data['Position'] == 'CM') | (new_data['Position'] == 'RAM')\n    ,(new_data['Position'] == 'RCB') | (new_data['Position'] == 'CB') | (new_data['Position'] == 'LCB') | (new_data['Position'] == 'LB') | (new_data['Position'] == 'RB') | (new_data['Position'] == 'LWB') | (new_data['Position'] == 'RWB')\n    ,(new_data['Position'] == 'GK')]\n\nchoices = ['ATK','MID','DEF',\"GK\"]\nnew_data['general position'] = np.select(conditions, choices, default='unkown')\nnew_data['general position']","7f44721d":"plt.rcParams['figure.figsize'] = (15, 7)\n\nsns.countplot(new_data['general position'],palette=\"deep\")\nplt.title(\"Player's positions distribution\", fontsize = 20)\nplt.tick_params(axis='x', rotation=70)\nplt.show()","d4f9dd10":"st_total= new_data[new_data[\"Position\"] == \"ST\"].head(10)\nst_total = st_total.sort_values(by=['Value'], ascending=False).head(10)\nst_total\n\n#------------------------------------------------------------------------\ncm = new_data[new_data[\"Position\"] == \"CM\"]\nrcm = new_data[new_data[\"Position\"] == \"RCM\"]\nlcm = new_data[new_data[\"Position\"] == \"LCM\"]\n\ncm_total = pd.concat([cm, rcm,lcm], ignore_index=True)\ntop_cm = cm_total.sort_values(by=['Value'], ascending=False).head(10)\n\n#------------------------------------------------------------------------\ncb = new_data[new_data[\"Position\"] == \"CB\"]\nrcb = new_data[new_data[\"Position\"] == \"RCB\"]\nlcb = new_data[new_data[\"Position\"] == \"LCB\"]\n\ncb_total = pd.concat([cb, rcb,lcb], ignore_index=True)\ntop_cb = cb_total.sort_values(by=['Value'], ascending=False).head(10)\n\n#------------------------------------------------------------------------\n\ntop_gk= new_data[new_data[\"Position\"] == \"GK\"].head(10)\n","eae6ce11":"def top10_position_value(df , color ,position,ax):\n    \n    plt.style.use('tableau-colorblind10')\n    \n    sns.barplot(df[\"Name\"],df[\"Value\"],color=color , ax=ax).set_title(\"top 10 \" + position +\" players according to their value\", fontsize=18)\n            \n    ax.set_xticklabels(ax.get_xticklabels(),rotation=30)\n        ","3ad99ceb":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=[20, 17])\n\ntop10_position_value(st_total , \"crimson\" ,\"ST\" , axes[0,0])\n\ntop10_position_value(top_cm   , \"g\"       ,\"CM\" , axes[0,1])\n\ntop10_position_value(top_cb   , \"b\"       ,\"CB\" , axes[1,0])\n\ntop10_position_value(top_gk   , \"y\"       ,\"GK\" , axes[1,1])\n","3b4441fb":"plt.rcParams['figure.figsize'] = (15, 5)\n\nnew_data[\"Value\"].plot(kind=\"line\")\n\nplt.title(\"Player's Values distribution \", fontsize = 20)\nplt.show()","c529e744":"top_10_values = new_data.sort_values(by=['Value'], ascending=False).head(10)\ntop_10_values","56b889dc":"fig, ax2 = plt.subplots(nrows=2, ncols=1, figsize=[13, 11])\n\nsns.barplot(top_10_values['Name'],top_10_values['Value'],color=\"c\", ax =ax2[0]).set_title(\"Top 10 values in fifa\", fontsize=18)\n\ntop_10_players_overall_value = new_data.sort_values(by=['Overall'], ascending=False).head(10)\ntop_10_players_overall_value\nsns.barplot(top_10_players_overall_value[\"Name\"].head(10),top_10_players_overall_value[\"Value\"].head(10),color=\"c\", ax =ax2[1]).set_title(\"Values of Top 10 players\", fontsize=18)\n\n","8280bc29":"plt.rcParams['figure.figsize'] = (15, 5)\n\nnew_data[\"Wage\"].plot(kind=\"line\")\n\nplt.title(\"Player's wages distribution \", fontsize = 20)\nplt.show()","dcbb5025":"top_10_wages = new_data.sort_values(by=['Wage'], ascending=False).head(10)\ntop_10_wages","a1155fbf":"fig, ax3 = plt.subplots(nrows=2, ncols=1, figsize=[15, 11])\n\nsns.barplot(top_10_wages['Name'],top_10_wages['Wage'],color=\"plum\", ax =ax3[0]).set_title(\"Top 10 wages in fifa\", fontsize=18)\n\ntop_10_players_overall_wage = new_data.sort_values(by=['Wage'], ascending=False).head(10)\ntop_10_players_overall_wage\nsns.barplot(top_10_players_overall_wage[\"Name\"].head(10),top_10_players_overall_wage[\"Value\"].head(10),color=\"plum\", ax =ax3[1]).set_title(\"Wages of Top 10 players\", fontsize=18)","43cd6002":"new_data[\"Age\"]\nnew_data[\"Overall\"]\nnew_data[\"Work Rate\"]","0da67c42":"new_data[\"Age\"].astype(int)","1f460b4e":"new_data[\"Age\"].dtype","81a8fe5b":"plt.rcParams['figure.figsize'] = (15, 5)\nsns.countplot(new_data[\"Work Rate\"],palette=\"Blues_d\")\n#new_data[\"Work Rate\"].plot(kind=\"bar\")\n\nplt.title(\"Work Rate frequency\", fontsize = 20)\nplt.show()","4068271a":"plt.figure(figsize=(42, 10))\n\nplt.subplot(131)\nplt.bar(new_data[\"Work Rate\"],new_data[\"Age\"])\nplt.ylabel(\"age\")\nplt.xlabel(\"work_rate\")\n\nplt.title(\"The relation between player age and his work rate\", fontsize = 20)\nplt.show()","af7c8478":"#new_data[\"Overall\"].plot(kind=\"hist\")\nplt.figure(figsize=(15, 7))\n\nsns.countplot(new_data['Overall'])\n#plt.tick_params(axis='x', rotation=70)\n\nplt.title(\"overall\", fontsize = 20)\n\nplt.show()","b80c0d6e":"plt.figure(figsize=(15, 7))\nnew_data[\"Overall\"].plot(kind=\"hist\",color=\"violet\")\n\n#plt.tick_params(axis='x', rotation=70)\n\nplt.title(\"overall\")\nplt.xlabel(\"overall\")\nplt.title(\"overall histogram\", fontsize = 20)\n\nplt.show()","ebdb1f8b":"plt.figure(figsize=(15, 7))\n#sns.set(style = \"dark\", palette = \"deep\", color_codes = True)\n\nnew_data[\"Age\"].plot(kind=\"hist\",color='tomato')\n\nplt.title(\"overall\")\nplt.xlabel(\"overall\")\nplt.title(\"ages distribution\", fontsize = 20)\n\nplt.show()","5cb82d1f":"plt.figure(figsize=(40, 7))\n\nplt.subplot(131)\nplt.scatter(new_data[\"Age\"], new_data[\"Overall\"],marker=\"x\")\n\nplt.ylabel(\"overall\")\nplt.xlabel(\"age\")\n\nplt.title('relation between age and overall',fontsize=20)\nplt.show()","bbe05e05":"new_data[new_data[\"Age\"] == 43]","5e105a95":"cb = cb_total[cb_total[\"Work Rate\"] == \"High\/ High\"]\ncb_work_rate = cb.sort_values(by=['Overall'], ascending=False).head(10)\ncb_work_rate","d090ed46":"fig, ax4 = plt.subplots(nrows=2, ncols=1, figsize=[13, 12])\n\nsns.barplot(cb_work_rate[\"Name\"], cb_work_rate[\"Age\"],color=\"blue\", ax =ax4[0]).set_title(\"CBs that have high attack and defence rate above 80 overall\", fontsize=18)\n\n\n\nst_work_rate_total= new_data[new_data[\"Position\"] == \"ST\"]\nst = st_work_rate_total[st_work_rate_total[\"Work Rate\"] == \"High\/ High\"]\nst_work_rate = st[st[\"Overall\"] >= 80]\nst_work_rate\nsns.barplot(st_work_rate[\"Name\"], st_work_rate[\"Age\"],color=\"crimson\", ax =ax4[1]).set_title(\"STs that have high attack and defence rate above 80 overall\", fontsize=18)\n","23dc17ea":"def Club(x):\n    return new_data[new_data['Club'] == x ][['Name','Age','Club',\"Value\",\"Position\"]].sort_values(by=['Value'],ascending=False)\n\nReal_Madrid = Club('Real Madrid')\nReal_Madrid","227abe66":"\n#barca = new_data.loc[new_data['Club']=='FC Barcelona']\n\nplt.figure(figsize=(50, 6))\n\nplt.subplot(131)\nplt.bar(Real_Madrid[\"Name\"],Real_Madrid[\"Value\"],color=\"k\")\nplt.tick_params(axis='x', rotation=70)\n\nplt.ylabel(\"Value\")\nplt.xlabel(\"Name\")\n\nplt.title(\"Real madrid player's values\", fontsize = 20)\nplt.show()","275b934e":"new_data[\"Nationality\"].head()","c58e57f8":"co_ordinates = pd.read_csv(\"..\/input\/world-coordinates\/world_coordinates.csv\")\nco_ordinates[co_ordinates[\"Country\"] == \"Belgium\"]","2c2e3b13":"latitude = [-38.416097,39.399872,-14.235004,40.463667,50.503887]\nlongitude = [-63.616672,-8.224454,-51.92528,-3.74922,4.469936]\noverall = new_data[\"Overall\"].head()\n","af1ad518":"new_data[\"Nationality\"]","157eb8d3":"import folium\nincidents = folium.Map(location=[10, -20], zoom_start=2.4,tiles='CartoDB dark_matter')\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, log, overall,Nationality,name in zip( latitude,longitude, overall,new_data[\"Nationality\"],new_data[\"Name\"]):\n    \n    folium.CircleMarker(\n            [lat, log],\n            radius=15,\n            popup = ('<strong>name<\/strong>: ' + str(name) + '<br>'\n                     '<strong>Nationality<\/strong>: ' + str(Nationality).capitalize() + '<br>'\n            '<strong>overall<\/strong>: ' + str(overall) + '<br>'), # define how big you want the circle markers to be\n            color='green',\n            fill_color='green',\n            fill_opacity=0.7\n        ).add_to(incidents)\n    \n\n# add incidents to map\nincidents","b3fe53c1":"\nnatio_count = new_data[\"Nationality\"].value_counts().head()\nnatio_count","3162abf6":"dummy_data = {\n        'top5': [\"England\",\"Germany\",\"Spain\",\"Argentina\",\"France\"],\n        'long': [1.1743,10.451526,-3.74922,-63.616672,2.213749],\n        'late': [52.3555,51.165691,40.463667,-38.416097,46.227638]\n}\ndata_new= pd.DataFrame(dummy_data, columns = [\"top5\",'long','late'])\n\ndata_new","fc7ce480":"co_ordinates[co_ordinates[\"Country\"] == \"Spain\"]","c8b430e0":"import folium\nincidents_2 = folium.Map(location=[10, -20], zoom_start=2.4,tiles='CartoDB dark_matter')\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, log,country,count in zip( data_new[\"late\"],data_new[\"long\"],data_new[\"top5\"],natio_count):\n    \n    folium.CircleMarker(\n            [lat, log],\n            radius=15,\n            popup = ('<strong>natio_count<\/strong>: ' + str(count) + '<br>'\n                     '<strong>country<\/strong>: ' + str(country).capitalize() + '<br>'), # define how big you want the circle markers to be\n            color='yellow',\n            fill_color='yellow',\n            fill_opacity=0.7\n        ).add_to(incidents_2)\n    \n\n# add incidents to map\nincidents_2","e75abcdd":"fifa17 = pd.read_csv(\"..\/input\/fifa-20-complete-player-dataset\/players_17.csv\")\nfifa18 = pd.read_csv(\"..\/input\/fifa-18-demo-player-dataset\/CompleteDataset.csv\")\nfifa19 = pd.read_csv(\"..\/input\/fifa19\/data.csv\")\nfifa20 = pd.read_csv(\"..\/input\/fifa-20-complete-player-dataset\/players_20.csv\")","12db0121":"fifa17.head(1)","92289b25":"fifa_17 = fifa17[\"short_name\"][0]\nfifa_18 = fifa18[\"Name\"][0]\nfifa_19 = fifa19[\"Name\"][1]\nfifa_20 = fifa20[\"short_name\"][1]\n\noverall_17 = fifa17[\"overall\"][0]\noverall_18 = fifa18[\"Overall\"][0]\noverall_19 = fifa19[\"Overall\"][1]\noverall_20 = fifa20[\"overall\"][1]\n\nage_17 = fifa17[\"age\"][0]\nage_18 = fifa18[\"Age\"][0]\nage_19 = fifa19[\"Age\"][1]\nage_20 = fifa20[\"age\"][1]","89621a12":"dummy_data = {\n        'name': [fifa_17,fifa_18,fifa_19,fifa_20],\n        'overall': [overall_17,overall_18,overall_19,overall_20],\n        'age': [age_17,age_18,age_19,age_20]\n}","e6330454":"CR7 = pd.DataFrame(dummy_data, columns = ['name','overall',\"age\"])\n\nCR7","bd433cf2":"plt.plot(CR7[\"age\"],CR7[\"overall\"])\n\nplt.ylabel(\"age\")\nplt.xlabel(\"work_rate\")\n\nplt.title(\"Cristiano ronaldo overall changes for the past 4 years\", fontsize = 20)\nplt.show()","a56f9e14":"fifa17 = fifa17[fifa17[\"club\"] == 'AS Monaco']\nfifa17[fifa17[\"short_name\"] == \"K. Mbappe Lottin\"]","159777be":"fifa17[fifa17[\"short_name\"] == \"K. Mbappe Lottin\"]","546fac48":"fifa20[fifa20[\"short_name\"] == \"K. Mbapp\u00e9\"]","157a5db2":"mbappe_fifa_17 = fifa17[\"short_name\"][3899]\nmbappe_fifa_18 = fifa18[\"Name\"][127]\nmbappe_fifa_19 = fifa19[\"Name\"][25]\nmbappe_fifa_20 = fifa20[\"short_name\"][10]\n\nmbappe_overall_17 = fifa17[\"overall\"][3899]\nmbappe_overall_18 = fifa18[\"Overall\"][127]\nmbappe_overall_19 = fifa19[\"Overall\"][25]\nmbappe_overall_20 = fifa20[\"overall\"][10]\n\nmbappe_age_17 = fifa17[\"age\"][3899]\nmbappe_age_18 = fifa18[\"Age\"][127]\nmbappe_age_19 = fifa19[\"Age\"][25]\nmbappe_age_20 = fifa20[\"age\"][10]","1a6e2c62":"dummy_data2 = {\n        'name': [mbappe_fifa_17,mbappe_fifa_18,mbappe_fifa_19,mbappe_fifa_20],\n        'overall': [mbappe_overall_17,mbappe_overall_18,mbappe_overall_19,mbappe_overall_20],\n        'age': [mbappe_age_17,mbappe_age_18,mbappe_age_19,mbappe_age_20]\n}","23a9ee77":"mbappe = pd.DataFrame(dummy_data2, columns = ['name','overall',\"age\"])\n\nmbappe","769084d8":"sns.lineplot(mbappe['age'], mbappe[\"overall\"], palette = 'Wistia')\n\nplt.ylabel(\"age\")\nplt.xlabel(\"work_rate\")\n\nplt.title(\"Kylian Mbapp\u00e9 overall changes for the past 4 years\", fontsize = 20)\nplt.show()","6d539575":"box_plot_data = data[[\"Age\",'Overall',\"Wage\",\"Value\",'Skill Moves', 'Finishing', 'FKAccuracy', 'SprintSpeed']]\n","2b7bf087":"ax = sns.boxplot(data=box_plot_data)\nplt.tick_params(axis='x', rotation=30)","9c7ae8a5":"box_plot_data = data[[\"Age\",'Overall','Skill Moves', 'Finishing', 'FKAccuracy', 'SprintSpeed']]\n\nax = sns.boxplot(data=box_plot_data)\nplt.tick_params(axis='x', rotation=30)","61509cfd":"import seaborn as sns\nsns.boxplot(x=new_data[\"Wage\"])","f2a9cea3":"sns.boxplot(x=new_data[\"Value\"])","f807348a":"sns.boxplot(x=new_data[\"Skill Moves\"])","5c7487c5":"fig, ax = plt.subplots(figsize=(16,8))\nax.scatter(new_data[\"Value\"],new_data[\"Age\"])\nax.set_xlabel('Value')\nax.set_ylabel('Age')\nplt.show()","8cc7d55f":"new_data.sort_values(by= [\"Value\"], ascending = False).head(3)\n","6c221090":"![wp2375304.jpg](attachment:wp2375304.jpg)","200c0fa5":"### top 5 players in the world with their overall and nationality","fc2df5fb":"### Top 5 countries with the most number of players in it","28f8369d":"### Real madrid players info","202f36aa":"### now let's go and see overall changes for cristiano ronaldo and mbappe","0e1881e5":"### there is no data for age 43","7798beb6":"### let's see the biggest 3 outliers shown here","fc0940b8":"### detecting outliers","5b575525":"### so, this plot won't be useful with value and wage columns because the varaity of the data in them, i will plot them separatly","e77372c7":"welcome to my kernel about FIFA 19 dataset\n\nin this kernel i will use FIFA 19 dataset to show different insights about player's values ,wages and their different attributes like age, overall, speed, ability to take freekicks and more, also i've done some EDA to understand the distribution of the features \n\ni used other datasets also to show the change of overall for some players over years\n\nif you have any suggest,advice or correction please don't hesitate to write it, i think it will be very helpful for me and if you like this kernel an upvote would be great.\n\n","8911c3b4":"### it was expected that there is alot of outliers because it is a continuous data, lets see Value's column","28214cc6":"### let's get rid of sympols beside Value and Wage columns","30e783ef":"### a little bit confusing, let's try a trick","c1c29d45":"### let's see also Skill Moves column's boxplot as it is not clarefied enough in the above plot","70a1317c":"### much better, as you can see in the first plot that it may misleading us to think that attack players are more than other players just because the number of ST players","abc77ce5":"## Now let's analyse the highest players values for every position, as follows:\n**attack as  ST**\n\n**midfield as CM**\n\n**defence as CB**\n\n**goalkeeping as GK**\n\n\n\n### - We need to merge LCM and RCM to CM to get the total number of CMs , so do with CB, RCB ,LCB\n### - each position will be colored with it's color in the game","8b0daf07":"### Visualizing some skills with top 10 players acquire each one of them"}}