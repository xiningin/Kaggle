{"cell_type":{"ec20111b":"code","bfbeb131":"code","7e9e3849":"code","c21efe47":"code","c97c4b71":"code","a55502f7":"code","aca6a5a0":"markdown","631c12ce":"markdown","9e72dcdd":"markdown"},"source":{"ec20111b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","bfbeb131":"train_set = pd.read_csv('..\/input\/training_set.csv')\ntrain_md = pd.read_csv('..\/input\/training_set_metadata.csv')","7e9e3849":"train_set.head()","c21efe47":"train_md.head()","c97c4b71":"class_ids = train_md['target'].unique()\nclass_ids.sort(axis=0)\noids = [(c, train_md[train_md['target']==c].sample(n=3, random_state=2018)['object_id'].values) for c in class_ids]\noids","a55502f7":"for cid, oid in oids:\n    plt.figure(figsize=(10, 10))\n    for band in range(6):        \n        plt.subplot(6, 1, band+1)\n        if band == 0:\n            plt.title('Target {} (object_id = {})'.format(cid, oid))\n        plt.ylabel('Band {}'.format(band))\n        for i in range(3):\n            ts = train_set[((train_set['object_id']==oid[i]) & (train_set['passband']==band))]\n            plt.plot(ts['mjd'], ts['flux'], 'x-')\n    plt.show()\n    ","aca6a5a0":"Get some random objects for each class and plot the flux for each band:","631c12ce":"Maybe some classes could be identified with a rainflow algorithm analyzing only the time series:\n* Target 52: band 0 has a lot of fluctuations while the other bands have only one cycle\n* Target 65: quite flat for every band\n* Target 92: many fluctuations in bands 1 to 5\n","9e72dcdd":"Plot of time series for each class to see if a [rainflow cycle counting](https:\/\/en.wikipedia.org\/wiki\/Rainflow-counting_algorithm) algorithm can help in the classification."}}