{"cell_type":{"6578ccff":"code","dd8dcc5f":"code","f54fa1dc":"code","7b9e3faa":"code","b4e32ae4":"markdown"},"source":{"6578ccff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dd8dcc5f":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense #,Activation\nfrom sklearn.model_selection import train_test_split","f54fa1dc":"df = pd.read_csv(\"..\/input\/heights-and-weights-dataset\/SOCR-HeightWeight.csv\", encoding=\"utf8\")\n\nx = df[\"Height(Inches)\"]\ny = df[\"Weight(Pounds)\"]\nx_train, x_test, y_train, y_test = train_test_split(x, y, train_size=.80)\n\nmodel = Sequential()\nmodel.add(Dense(units = 2, input_dim=1, activation = \"relu\"))\noptimizer = tf.keras.optimizers.RMSprop(0.0099)\nmodel.compile(loss='mean_squared_error',optimizer=optimizer)\nx_train1 = x_train.values\ny_train1 = y_train.values\nmodel.fit(x_train1, y_train1, epochs=50) #epoch = n\u00famero de evaluaciones\nmodel.summary()\nmodel.evaluate(x_test, y_test)","7b9e3faa":"height = input(\"What is your height in inches? \\n\")\nweight = model.predict([float(height)])\nprint(str(\"weight = \"+ np.array2string(weight[0][0])+\" lb\"))","b4e32ae4":"Usefull libraries are imported."}}