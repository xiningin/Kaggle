{"cell_type":{"e7f8c8f0":"code","26185eef":"code","fb962ad2":"code","7710210a":"code","0c36de25":"code","9c8a1827":"code","fc790183":"code","5a66c03d":"code","b89bf9c5":"code","60bff2cc":"code","3b750b2e":"code","94d1dd35":"code","be4504b1":"code","89509b4e":"code","c6b83e59":"code","10d0e6cc":"code","f2cda2d0":"code","a366818b":"markdown","03758639":"markdown","09988d52":"markdown","a3afc7ad":"markdown","611d7704":"markdown","4b58709d":"markdown","ef83173d":"markdown","83696b6f":"markdown","ff85b0d8":"markdown","77dcdc94":"markdown","a42e7e75":"markdown","afaf6bae":"markdown","a2e51039":"markdown","eed5b500":"markdown","172c95f2":"markdown","30de5164":"markdown"},"source":{"e7f8c8f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","26185eef":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fb962ad2":"train = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/test.csv\")","7710210a":"train.head()","0c36de25":"train.dtypes","9c8a1827":"train.isnull().sum()\/len(train)","fc790183":"train.describe()","5a66c03d":"train[\"price_range\"].value_counts()","b89bf9c5":"corr = train.corr().abs()\nn_most_correlated = 10\nmost_correlated_feature = corr[\"price_range\"].sort_values(ascending = False)[:n_most_correlated].drop(\"price_range\")\nmost_correlated_feature_name = most_correlated_feature.index.values\n\nf, ax = plt.subplots(figsize = (15, 6))\nplt.xticks(rotation = \"90\")\nsns.barplot(x = most_correlated_feature_name, y = most_correlated_feature)\nplt.title(\"En fazle kolerasyona sahip de\u011fi\u015fkenler\")","60bff2cc":"corr2 = train.corr()\nf, ax = plt.subplots(figsize = (15, 6))\nsns.heatmap(corr2)","3b750b2e":"most_correlated_feature2 = corr[\"price_range\"].sort_values(ascending = False)[:10]\nfair = most_correlated_feature2.index\n\ntrain2 = pd.DataFrame()\n\nfor i in fair:\n    train2 = pd.concat([train2, train[i]], axis = 1)\n\n    \nsns.pairplot(data = train2, hue = \"price_range\")","94d1dd35":"x = train.iloc[:, 0:20]\ny = train.iloc[:, 20:21]\n\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 23)\n\n#datan\u0131n train ve test setlerine b\u00f6l\u00fcm\u00fc.","be4504b1":"from sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(x_train, y_train)\nrf_tahmin = rf.predict(x_test)\n\nprint(\"Accuracy Score: \", accuracy_score(y_test, rf_tahmin))","89509b4e":"import statsmodels.api as sm\nX_1 = sm.add_constant(x)\n\nmodel = sm.OLS(y,X_1).fit()\nmodel.pvalues\n\ncols2 = list(x.columns)\npmax = 1\nwhile (len(cols2)>0):\n    p= []\n    X_1 = x[cols2]\n    X_1 = sm.add_constant(X_1)\n    model = sm.OLS(y,X_1).fit()\n    p = pd.Series(model.pvalues.values[1:],index = cols2)      \n    pmax = max(p)\n    feature_with_p_max = p.idxmax()\n    if(pmax>0.05):\n        cols2.remove(feature_with_p_max)\n    else:\n        break\nselected_features_BE = cols2\nprint(selected_features_BE)\nlen(selected_features_BE)\n\n\ntrain2 = pd.DataFrame()\n\nfor i in selected_features_BE:\n    train2 = pd.concat([train2, train[i]], axis = 1)\n    \ntrain2 = pd.concat([train2, train[\"price_range\"]], axis = 1)\n\nx2 = train2.iloc[:, 0:6]\ny2 = train2.iloc[:, 6:7]\n\nX_train, X_test, Y_train, Y_test = train_test_split(x2, y2, test_size =0.33, random_state =34)\n\nrf2 = RandomForestClassifier()\nrf2.fit(X_train, Y_train)\nrf2_tahmin = rf2.predict(X_test)\n\nprint(\"FEATURE SELECTION \u0130LE ACCURACY SCORE: \",accuracy_score(Y_test, rf2_tahmin))","c6b83e59":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier()\nknn.fit(X_train, Y_train)\nknn_tahmin = knn.predict(X_test)\n\naccuracy_score(Y_test, knn_tahmin)","10d0e6cc":"from sklearn.model_selection import GridSearchCV\n\nknn_params = {\n        \"n_neighbors\" : np.arange(2, 10, 1),\n        \"weights\" : [\"uniform\", \"distance\"],\n        \"leaf_size\" : (30, 40, 50, 20),\n        \"p\" : (1, 2)\n        }\n\nknn_ = KNeighborsClassifier()\n\nknn_grid = GridSearchCV(knn_, knn_params, cv = 10, n_jobs = -1, verbose = 2)\nknn_grid.fit(X_train, Y_train)\nknn_grid.best_params_\n\nknn_tune = KNeighborsClassifier(leaf_size = 30, n_neighbors = 9, p = 2, weights = \"uniform\")\nknn_tune.fit(X_train, Y_train)\nknn_tune_tahmin = knn_tune.predict(X_test)\n\naccuracy_score(Y_test, knn_tune_tahmin)","f2cda2d0":"from sklearn.svm import SVC\n\nsvm = SVC(kernel = \"linear\")\nsvm.fit(X_train, Y_train)\nsvm_tahmin = svm.predict(X_test)\n\naccuracy_score(Y_test, svm_tahmin)","a366818b":"Verinin ilk 5 sat\u0131r\u0131, veriye ait veri tipleri, bo\u015f veri olup olamd\u0131\u011f\u0131 ve basit istatistik de\u011ferlerini inceleyelim.","03758639":"\u00d6nce datam\u0131z\u0131 tan\u0131yarak ba\u015flayal\u0131m...\n\nMobile Price Classification datas\u0131nda bizlere 20 farkl\u0131 de\u011fi\u015fken veriyor. Nedir bu de\u011fi\u015fkenler?\n\n1. Battery Power (Telefona ait batarya kapasitesini g\u00f6stern dei\u015fken)\n2. Blue (Bluetooth \u00f6zelli\u011finin olup olmad\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fi\u015fken)\n3. Clock Speed (\u0130\u015flemci h\u0131z\u0131n\u0131 g\u00f6steren de\u011fi\u015fken)\n4. Dual Sim (\u00c7ift sim kart olup olmad\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fi\u015fken)\n5. FC (\u00d6n kamera mp de\u011feri)\n6. 4G (Telefonun 4G ba\u011flant\u0131s\u0131 olup olamd\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fi\u015fken)\n7. \u0130nt Memory (Bellek)\n8. Mobile_Wt (Telefonun kal\u0131nl\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fer)\n9. n_cores (\u0130\u015flemci say\u0131s\u0131)\n10. PC (Arka kamera mp de\u011feri)\n11. px_height (\u00c7\u00f6z\u00fcn\u00fcrl\u00fck)\n12. px_width (\u00c7\u00f6z\u00fcn\u00fcrl\u00fck)\n13. Ram (ram)\n14. sc_h (Ekran y\u00fcksekli\u011fi)\n15. sc_w (Ekran geni\u015fli\u011fi)\n16. talk_time (Konu\u015fma s\u00fcresi)\n17. three_g (3G \u00f6zelli\u011finin olup olmad\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fer)\n18. touch_screen (Dokunmatik olup olamd\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fer)\n19. wifi (kablosuz internetin olup olmad\u0131\u011f\u0131n\u0131 g\u00f6steren de\u011fer)\n20. price_range (fiyat aral\u0131\u011f\u0131 -hedef de\u011fi\u015fken)\n\nAmac\u0131m\u0131z yukar\u0131daki de\u011fi\u015fkenleri kullanarak hedef de\u011fi\u015fkenimiz olan price_range de\u011ferini y\u00fcksek orandan do\u011fru tahmin etmeye \u00e7al\u0131\u015fmak.\n\nBa\u015flayal\u0131m.\n","09988d52":"En y\u00fcksek skoru %97 ile SVM \u00e7\u0131karm\u0131\u015f oldu.","a3afc7ad":"\u0130lk sonucumuzun de\u011feri %75.\n\n\u015eimdi feature selection yaparak yine random forest modeli kural\u0131m.","611d7704":"Feature Selection ile model %86 ba\u015far\u0131 sa\u011flad\u0131. Eski halinden 10 puan daha iyi bu olduk\u00e7a g\u00fczel bir fark.","4b58709d":"\u0130lk olarak ba\u015flang\u0131\u00e7 k\u00fct\u00fcphanelerini ve train-test datas\u0131n\u0131 y\u00fckleyerek ba\u015flayal\u0131m.","ef83173d":"Bu \u00e7al\u0131\u015fma sayfas\u0131nda Mobile Price Classification datas\u0131 ile ilgili yeni bir \u00e7\u00f6z\u00fcm \u00f6rne\u011fini payla\u015f\u0131yorum. Konu hakk\u0131ndaki yorumlar\u0131n\u0131z benim i\u00e7in \u00f6nemlidir.\n\nBaz\u0131 k\u0131s\u0131mlar da g\u00f6r\u00fc\u015f eksikli\u011fi veya dolayl\u0131 yoldan gidilmi\u015f olabilir yeni olan t\u00fcm \u00f6nerilere a\u00e7\u0131\u011f\u0131m umar\u0131m bu \u00f6rnek \u00e7al\u0131\u015fma sizin i\u00e7in faydal\u0131 olur.\n\n\nMerhaba bu \u00e7al\u0131\u015fma da \"Mobile Price Classification\" datas\u0131 ile \u00e7e\u015fitli makine \u00f6\u011frenmesi algoritmalar\u0131 kurup bu algoritmalar\u0131 iyile\u015ftirmeye \u00e7al\u0131\u015faca\u011f\u0131z. Ayn\u0131 zamanda data da bulunan de\u011fi\u015fkenleri inceleyerek baz\u0131 de\u011fi\u015fimler yap\u0131p modelimizi daha iyi a\u00e7\u0131klayac\u0131 hale getirmeye \u00e7al\u0131\u015faca\u011f\u0131z.","83696b6f":"G\u00f6r\u00fcld\u00fc\u011f\u00fc gibi price_range ile ram'dan ba\u015fka iyi bir ili\u015fkisi olan de\u011fi\u015fken yok. \u00c7o\u011fu 0 de\u011ferine yak\u0131n yani hi\u00e7bir a\u00e7\u0131klay\u0131c\u0131l\u0131klar\u0131 yok. Ayn\u0131 zaman da bir iki \u00f6rnek hari\u00e7 (\u00f6n ve arka kamera, 3G ve 4G gibi) de\u011fi\u015fkenlerin birbirleri ile de bir ili\u015fkisi yok fakat yine de bizim datam\u0131zdalar. \n\nBunu daha net g\u00f6rebilmek i\u00e7in price_range ile en fazla ili\u015fkiye sahip 10 de\u011fi\u015fkeni al\u0131p bir pair plot \u00e7izdirece\u011fim.","ff85b0d8":"De\u011fi\u015fkenlerin veri tipleri int ve float herhangi encode i\u015flemi yapmam\u0131za gerek yok ayn\u0131 zaman da veri de bo\u015f sat\u0131rlarda yok!\n\n\u015eimdi hedef de\u011fi\u015fken olan price_range i\u00e7erisinde ka\u00e7 farkl\u0131 s\u0131n\u0131f var ve bu s\u0131n\u0131flara ait ne kadar de\u011fer var bunlara bakal\u0131m.","77dcdc94":"Yukar\u0131daki grafikler de price_range de\u011fi\u015fkeninin ram hari\u00e7 di\u011fer de\u011fi\u015fkenlerde d\u00fczensiz, ratgele da\u011f\u0131ld\u0131 g\u00f6z\u00fck\u00fcyor ve bunlar en y\u00fcksek kolerasyona sahip 10 de\u011fi\u015fken. Belki de price_range'i a\u00e7\u0131klamak i\u00e7in bu de\u011fi\u015fkenlerin bir \u00e7o\u011funa ihtiyac\u0131m\u0131z yok ve belki de kuraca\u011f\u0131m\u0131z modelde fazlal\u0131k olup daha d\u00fc\u015f\u00fck bir skor elde etmemize neden olacaklar. \n\nDenemek i\u00e7in \u015f\u00f6yle bir y\u00f6ntem izleyece\u011fim;\n\n\u00d6nce hi\u00e7bir i\u015flem yapmadan train ve test setini haz\u0131lay\u0131p bir model kuraca\u011f\u0131m ard\u0131ndan feature selection kullanarak \u00e7\u0131karmam gereken de\u011fi\u015fkenleri bulup \u00e7\u0131kard\u0131ktan sonra hi\u00e7bir de\u011fi\u015fik yapmadan ayn\u0131 modeli tekrar kuraca\u011f\u0131m.\n\n** feature selection --> \n\n\"\u00d6zellik se\u00e7imi (feature selection), orijinal veri setini temsil edebilecek en iyi altk\u00fcmenin se\u00e7imi olarak tan\u0131mlanmaktad\u0131r. \u00d6zellik se\u00e7imi (di\u011fer ad\u0131yla nitelik se\u00e7imi veya de\u011fi\u015fken se\u00e7imi), kullan\u0131lan algoritmaya g\u00f6re \u00f6zellikleri de\u011ferlendirerek veri setindeki n adet \u00f6zellik aras\u0131ndan en iyi k adet \u00f6zelli\u011fi se\u00e7me i\u015flemidir.\"\n\n\u00d6zellik Se\u00e7im Y\u00f6ntemleri ve Yeni Bir Yakla\u015f\u0131m\nH\u00fcseyin BUDAK\n\nDaha ayr\u0131nt\u0131l\u0131 bilgi --> [https:\/\/dergipark.org.tr\/en\/download\/article-file\/552933](http:\/\/)","a42e7e75":"Umar\u0131m bu \u00e7al\u0131\u015fma sizin i\u00e7in faydal\u0131 olmu\u015ftur.\n\nTekrar g\u00f6r\u00fc\u015fmek \u00fczere.\n\nAlper Temel.","afaf6bae":"En y\u00fcksek kolerasyona sahip de\u011fi\u015fken \"ram\". Ram neredeyse tek ba\u015f\u0131na price_range de\u011ferini belirleyebilecek oranda g\u00fc\u00e7l\u00fc.\n\nEn fazla kolerasyona sahip 10 de\u011fi\u015fkeni g\u00f6rd\u00fck \u015fimdi de t\u00fcm de\u011fi\u015fkenlerin birbirleyle olan kolerasyonlar\u0131n\u0131 bakal\u0131m.","a2e51039":"Modele feature selection ile devam etmek daha iyi.\n\n\u015eimdi s\u0131ras\u0131yla knn ve svm modellerini deneyelim ve bu modelleri tune ederek nihai sonuca ula\u015fal\u0131m.","eed5b500":"**price_range de\u011fi\u015fkeni ile en fazla kolerasyona sahip olan de\u011fi\u015fkenleri bulmak**","172c95f2":"0, 1, 2 ve 3 diye 4 farkl\u0131 s\u0131n\u0131f\u0131m\u0131z var biz bunlar\u0131 do\u011fru tahmin etmeye \u00e7al\u0131\u015fca\u011f\u0131z. \u0130\u015fin g\u00fczel yan\u0131 bu dataset \u00f6rnek bir dataset oldu\u011fu i\u00e7in s\u0131n\u0131flar e\u015fit miktarlarda e\u011fer d\u00fczensiz olarak da\u011f\u0131lsalard\u0131 model ilk a\u015famada daha fazla say\u0131da \u00f6rnek bulunduran s\u0131n\u0131fa yanl\u0131 davranabilirdi. S\u0131n\u0131flar\u0131n \u00e7ok d\u00fczensiz da\u011f\u0131ld\u0131\u011f\u0131 \u00f6rnekler resample i\u015flemi faydal\u0131 olabilir. \u00d6rne\u011fin hedef de\u011fi\u015fken \"evet\" ve \"hay\u0131r\" \u015feklinde olu\u015fan 2 farkl\u0131 s\u0131n\u0131f olsun ve \"hay\u0131r\" cevaplar\u0131n\u0131n miktar\u0131 \"evet\"'lerin 10 kat\u0131, 100 kat\u0131 hatta 1000 kat\u0131 oldu\u011funu d\u00fc\u015f\u00fcnelim bu tip proplemlerde modeller genellikle hay\u0131r cevab\u0131na yanl\u0131 olacakt\u0131rlar. Bu problemi \u00e7\u00f6zmek i\u00e7in e\u011fer elinizde yeteri kadar data oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyorsan\u0131z \"hay\u0131r\" lar\u0131 \"evet\" lerin say\u0131s\u0131n\u0131 inderecek kadar sat\u0131r\u0131 datan\u0131zdan \u00e7\u0131kararak d\u00fczenleyebilirsiniz yada \"evet\" leri \"hay\u0131r\" lar\u0131n say\u0131s\u0131na getirecek kadar \u00e7o\u011faltabilirsiniz. \u00d6rnek \u00e7al\u0131\u015fma i\u00e7in --> [https:\/\/www.kaggle.com\/alpertemel\/fraud-data-93-accuracy](http:\/\/)","30de5164":"   **MOBILE PRICE CLASSIFICATION DATASET**"}}