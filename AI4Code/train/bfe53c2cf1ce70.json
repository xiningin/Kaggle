{"cell_type":{"fd73689e":"code","27929698":"code","53b03929":"code","c3a453f8":"code","c9a20346":"code","171d18fe":"code","117a8315":"code","56d7aec0":"code","e528ca20":"code","0a08fccd":"code","db31ee3e":"code","1d232926":"code","a295fde1":"code","ae6873af":"code","907f2ca3":"markdown","ec063f19":"markdown","efd928e2":"markdown","a583b45a":"markdown","406a6a02":"markdown"},"source":{"fd73689e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","27929698":"data = pd.read_csv('..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv')","53b03929":"data.describe()\n","c3a453f8":"data.columns","c9a20346":"data.info()","171d18fe":"data.shape","117a8315":"data.head(10)","56d7aec0":"color_list = ['red' if i == 'Abnormal' else 'green' for i in data.loc[:,'class']]\n\npd.plotting.scatter_matrix(data.loc[:,data.columns != 'class'],\n                          c = color_list,\n                          figsize=[15,15],\n                          diagonal='hist',\n                          alpha =0.5,\n                          s=200,\n                          marker='*',\n                          edgecolor='black')\n\nplt.show()","e528ca20":"data.loc[:,'class'].value_counts()","0a08fccd":"sns.countplot(x='class',data=data)","db31ee3e":"data_with_class_equals_normal = data[data['class']=='Abnormal']\ndata_with_class_equals_normal","1d232926":"x = data_with_class_equals_normal['pelvic_incidence'].values.reshape(-1,1)\ny = data_with_class_equals_normal['sacral_slope'].values.reshape(-1,1)\n\n#Scatter\nplt.figure(figsize=[15,15])\nplt.scatter(x,y,color='blue')\nplt.xlabel('Pelvic Incidence')\nplt.ylabel('Sacral Slope')\n\nplt.show()\n","a295fde1":"from sklearn.linear_model import LinearRegression\n\nlin_reg = LinearRegression()\n\n# predict space\n\npredict_space = np.linspace(min(x),max(x)).reshape(-1,1)\n\n# Fitting\n\nlin_reg.fit(x,y)\n\n#Predicting\n\npredicted = lin_reg.predict(predict_space)\n\n# R^2\n\nr2 = lin_reg.score(x,y)\n\nprint('R^2 Score: ',r2)\n","ae6873af":"# Plotting regression line\n\n\nplt.plot(predict_space,predicted,color=\"black\",linewidth=4)\nplt.scatter(x,y)\nplt.xlabel('Pelvic Incidence')\nplt.ylabel('Sacral Slope')\nplt.show()","907f2ca3":"Let's checking how many normal and abnormal in this class.","ec063f19":"    Now we have a data to make linear regression . In regression problems target value is continuosly varying variable such as price of house or sacral_slope .\n    Lets fit line into this points.","efd928e2":"First of all , we need to read our csv file.","a583b45a":"Plotting scatter \n\ngreen : normal\n\nred : abnormal \n\nc : color\n\nfigsize = figure size\n\ndiagonal = histogram of each features\n\nalpha = opacity\n\ns = size of marker\n\nmarker = marker type\n\n","406a6a02":"Also we can learn this information by using seaborn library."}}