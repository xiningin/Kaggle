{"cell_type":{"e607e345":"code","52dc64f0":"code","3eb0a005":"code","1fc487f1":"code","632e2c3f":"code","c6e59e8d":"code","96ad23c6":"code","27854b8c":"code","566dd20a":"code","10de2dbc":"code","23d40a2a":"markdown","08b5c6b8":"markdown","821d01bc":"markdown","33b565ef":"markdown","4dfc483c":"markdown","a679d7b7":"markdown","80951af7":"markdown","f164f7e2":"markdown","9f9101ee":"markdown","b6dd90d5":"markdown"},"source":{"e607e345":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn import ensemble\nfrom matplotlib import style\nfrom sklearn.ensemble import VotingRegressor\nfrom sklearn.ensemble import RandomForestRegressor\n\nstyle.use('fivethirtyeight')\n%matplotlib inline\n\nTEST_DATASET_PATH = '\/kaggle\/input\/realestatepriceprediction\/test.csv'\nTRAIN_DATASET_PATH = '\/kaggle\/input\/realestatepriceprediction\/train.csv'\n\ntest_data = pd.read_csv(TEST_DATASET_PATH)\ntrain_data = pd.read_csv(TRAIN_DATASET_PATH)","52dc64f0":"# Box plot\nplt.figure(figsize=(12, 6))\nsns.boxplot(train_data['Rooms'], train_data['Price'])\nplt.xlabel('Rooms')\nplt.ylabel('Price')\nplt.title('Distribution of Price by Rooms')\nplt.show();","3eb0a005":"# \u043e\u0442\u0431\u0438\u0440\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ndf_num_features = train_data.select_dtypes(include='float64')\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043c\u0430\u043b\u043e\u0437\u043d\u0430\u0447\u0430\u0449\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b\nnum_features = pd.DataFrame(df_num_features)\nnum_features.drop(\"Ecology_1\", axis=1, inplace=True)\nnum_features.drop(\"Healthcare_1\", axis=1, inplace=True)\nnum_features.hist(figsize=(10, 8), bins=20, grid=False);","1fc487f1":"corr = num_features.corr()\nplt.figure(figsize = (8, 8))\nmask = np.zeros_like(corr, dtype=np.bool)  # \u043e\u0442\u0440\u0435\u0437\u0430\u0435\u043c \u043b\u0438\u0448\u043d\u044e\u044e \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u043c\u0430\u0442\u0440\u0438\u0446\u044b\nmask[np.triu_indices_from(mask)] = True\nsns.set(font_scale=1.4)\nsns.heatmap(num_features.corr(), mask=mask, annot=True, fmt='.1f', linewidths=.5, cmap='GnBu')\nplt.title('Correlation matrix')\nplt.show();","632e2c3f":"test_data.info()","c6e59e8d":"train_data = train_data.sort_values('Price')\ntest_data = test_data.sort_values('DistrictId')\ntrain_data = train_data.fillna(method='pad')\ntest_data = test_data.fillna(method='pad')","96ad23c6":"from pylab import rcParams\nrcParams['figure.figsize'] = 12, 6  # \u043c\u0435\u043d\u044f\u0435\u043c \u0440\u0430\u0437\u043c\u0435\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n\nplt.scatter(train_data.Price, train_data.Square)","27854b8c":"X_train = pd.get_dummies(train_data)\nX_train.drop(\"Price\", axis=1, inplace=True)\nX_train.drop(\"Id\", axis=1, inplace=True)\ny_train = train_data.Price\n\nmodel1 = ensemble.GradientBoostingRegressor(n_estimators=442, max_depth=5, min_samples_split=2,\n                                           learning_rate=0.1, loss='ls', random_state=42)\n\nmodel2 = RandomForestRegressor(n_estimators=1442, max_depth=18, random_state=42, max_features=7)\n\nmodel = VotingRegressor([('model1', model1), ('model2', model2)])\n\nmodel.fit(X_train, y_train)","566dd20a":"X_test = pd.get_dummies(test_data)\nX_test.drop(\"Id\", axis=1, inplace=True)\ntest_data[\"Price\"] = model.predict(X_test)\ntest_data.loc[:, ['Id', 'Price']].to_csv('VR_predictions.csv', index=False)","10de2dbc":"# !pip install kaggle\n# !kaggle competitions submit -c realestatepriceprediction -m \"VotingRegressor\" -f VR_predictions.csv","23d40a2a":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","08b5c6b8":"# Python \u0434\u043b\u044f Data Science: \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442","821d01bc":"\u0427\u0442\u043e\u0431\u044b \u043e\u0442\u0441\u044b\u043b\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0441\u0440\u0430\u0437\u0443 \u043d\u0430 Kaggle, \u043d\u0443\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 kaggle \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u043e\u043a\u0435\u043d\n![image.png](attachment:image.png)\n\u0422\u043e\u043a\u0435\u043d \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0438\u043d\u0443\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443 .kaggle. \u041d\u0430 win10 \u043e\u043d\u0430 \u0437\u0434\u0435\u0441\u044c: C:\\Users\\Username\\","33b565ef":"## \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0438 \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c","4dfc483c":"## \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n### \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 - \u0445\u043e\u0440\u043e\u0448\u043e...","a679d7b7":"## \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0446\u0435\u043d\u044b \u0438 \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0432 \u0444\u0430\u0439\u043b","80951af7":"### https:\/\/scikit-learn.org\/stable\/modules\/ensemble.html#voting-regressor\n![image.png](attachment:image.png)\n#### \u042d\u0442\u043e, \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c, +0.01","f164f7e2":"## \u041d\u0438\u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 - \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438","9f9101ee":"## \u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","b6dd90d5":"## \u041e\u0446\u0435\u043d\u043a\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0440\u0430\u0437\u0440\u0435\u0437\u0435 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432"}}