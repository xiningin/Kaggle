{"cell_type":{"f7b5084c":"code","37ef6ae4":"code","4685665b":"code","2de22c7a":"code","e0b72aa6":"code","2c95df45":"code","af0c358d":"code","5e2ac2a2":"code","1faff992":"code","15e0b990":"code","5b32e6cd":"code","e7762071":"code","4b7b8b7c":"code","88c4ebca":"code","0201b08b":"code","84eb9889":"code","1543b820":"code","2bd8e103":"code","112e58d2":"code","056b4c63":"code","a08c4874":"code","4b2bd75d":"code","aedf2e5e":"code","876a21c7":"code","142da4f6":"code","20d144ce":"code","5eb7911c":"code","2e8723b7":"code","0909e4c3":"code","acc1f19b":"code","4da2e96d":"code","386f56b8":"code","0ec0298f":"code","3bbc1c6c":"code","48309f5e":"code","041d16ab":"code","69e84bc6":"code","5d934016":"code","d6e610f1":"code","0d2225bb":"code","664b5fdd":"code","17f8a7dc":"code","8bdf17e7":"code","390ceb37":"code","0fcbd40e":"code","dac5d736":"code","935fd5c6":"code","e842650a":"code","85ff6bf3":"code","fd3cd4c9":"code","0a77cf41":"code","0e8f98d4":"code","3c140dad":"code","45264aeb":"code","096379f6":"code","590e1d07":"code","4f99c973":"code","84f6d745":"code","1cef96b4":"code","f882267c":"code","77cc203e":"code","d7e9cc93":"code","0ad29895":"code","6cec7d71":"code","288f1cba":"code","5a982258":"code","164ee922":"code","721d0d34":"code","77f92458":"code","eee9fcd0":"code","a700ffaa":"code","4fa8819e":"code","480841b3":"code","d647dcc3":"code","8725b835":"code","604867b1":"code","bdd5c3af":"code","56e0c32d":"markdown","532fb1f8":"markdown","4be19173":"markdown","d0a0ed6d":"markdown","7c5a2ca3":"markdown","bdc9e6f7":"markdown","9a6efd91":"markdown","8a9708fc":"markdown","95ad7514":"markdown","e4b39b17":"markdown","578d6917":"markdown","8257f5ca":"markdown","849acd3e":"markdown","1f4c180f":"markdown","0376667c":"markdown","2a2b28da":"markdown","68b70b7a":"markdown","3b8d232b":"markdown","a83162d3":"markdown","1948b3dd":"markdown","2545736d":"markdown","95294768":"markdown","082047fe":"markdown","f01c24d7":"markdown","cd1ffb43":"markdown","027be7f7":"markdown","4375680c":"markdown","e08ac7d8":"markdown","0bfa0747":"markdown","791d288b":"markdown","63ffb5cb":"markdown","42405134":"markdown","95e9f3ab":"markdown","8e20fa5c":"markdown","fb13b21d":"markdown","48681362":"markdown","902c2a6c":"markdown","dd40c217":"markdown","8c72974e":"markdown"},"source":{"f7b5084c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","37ef6ae4":"df=pd.read_table('..\/input\/en.openfoodfacts.org.products.tsv',sep='\\t', low_memory=False)","4685665b":"df.info()","2de22c7a":"df.head()","e0b72aa6":"pd.options.display.max_columns = 108\ndf.describe()","2c95df45":"df.describe(exclude=[np.number])","af0c358d":"df.drop(df[df.product_name.isnull()].index, inplace=True)","5e2ac2a2":"cols_to_drop = ['no_nutriments','nutrition_grade_uk','chlorophyl_100g','glycemic-index_100g','water-hardness_100g',\n               'image_url','image_small_url','url','ingredients_from_palm_oil','ingredients_that_may_be_from_palm_oil']\ndf.drop(cols_to_drop,axis=1,inplace=True)","1faff992":"def checkDuplicates(*col):\n    print (\"There are {0} duplicated rows in {1} column\".format(df.duplicated(col).sum(), col) )","15e0b990":"checkDuplicates('product_name','brands')","5b32e6cd":"df.drop_duplicates(['product_name','brands'],inplace=True)","e7762071":"m = df.astype(str).apply(lambda x: x.str.contains(\"palm|palme\", case=False, na=False)).any() \nc = df.columns[m]\nprint (c)","4b7b8b7c":"frames = []\n\nfor col in c:\n    mask = df[col].str.lower().str.contains('palm oil|palme',na=False)\n    frames.append(df[mask])\n\npalm_brands = pd.concat(frames)","88c4ebca":"palm_brands[['ingredients_from_palm_oil_n','ingredients_that_may_be_from_palm_oil_n']].dropna(how='any',axis=0)","0201b08b":"palm_brands.shape","84eb9889":"palm_brands.drop_duplicates(inplace=True)","1543b820":"palm_brands.shape","2bd8e103":"palm_brands['labels_en'].value_counts()","112e58d2":"palm_brands.loc[palm_brands.labels_en.str.lower().str.contains('sustainable palm oil',na=False),'labels_en'] = 'Sustainable Palm Oil'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('palm-oil',na=False),'labels_en'] = 'Palm-oil'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('palm oil free',na=False),'labels_en'] = 'Palm oil free'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('kosher|halal',na=False),'labels_en'] = 'Kosher,Halal'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('organic',na=False),'labels_en'] = 'Organic'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('vegetarian|green dot|vega',na=False),'labels_en'] = 'Vegetarian,Vegan'\npalm_brands.loc[palm_brands.labels_en.str.lower().str.contains('gluten-free|gluten free',na=False),'labels_en'] = 'Gluten Free'","056b4c63":"palm_brands['labels_en'].value_counts().head(5)","a08c4874":"palm_brands['brands'].isnull().sum()","4b2bd75d":"palm_brands['brands'].fillna(palm_brands.product_name.str.split(' ').str[:2].str.join(','),inplace=True)","aedf2e5e":"palm_brands['brands']=palm_brands['brands'].str.replace('Tastykake,  Tasty Baking Company','Tasty Baking Company')\npalm_brands['brands']=palm_brands['brands'].str.replace('Tastykake','Tasty Baking Company')\npalm_brands['brands']=palm_brands['brands'].str.replace('Cornetto','Unilever')\npalm_brands['brands']=palm_brands['brands'].str.replace('Weis Quality','Weis')\npalm_brands['brands']=palm_brands['brands'].str.replace('Weis,  Weis Markets  Inc.','Weis')\npalm_brands['brands']=palm_brands['brands'].str.replace('Hill & Valley', 'Hill & Valley Inc.')\npalm_brands['brands']=palm_brands['brands'].str.replace('Gluten Free Bake Shop Inc', 'Gluten Free Bake Shoppe Inc.')\npalm_brands['brands']=palm_brands['brands'].str.replace('Jessie Lord Bakery', 'Jessie Lord Bakery Llc')\npalm_brands['brands']=palm_brands['brands'].str.replace('Carrfour', 'Carrefour')\npalm_brands['brands']=palm_brands['brands'].str.replace('Giant, Fresh & Easy', 'Giant')\npalm_brands['brands']=palm_brands['brands'].str.replace('Deep, Giant', 'Giant')\npalm_brands['brands']=palm_brands['brands'].str.replace('Tarallinii,olio', 'Tarallini,')\npalm_brands['brands']=palm_brands['brands'].str.replace('Weight,Watchers', 'Weight Watchers')\npalm_brands['brands']=palm_brands['brands'].str.replace('Whole earth', 'Whole Earth')\npalm_brands['brands']=palm_brands['brands'].str.replace('Vaseline,rosy', 'Unilever')\npalm_brands['brands']=palm_brands['brands'].str.replace('Acme Fresh Market', 'Acme')\npalm_brands['brands']=palm_brands['brands'].str.replace('Absolutely Gluten Free', 'Absolutely')\npalm_brands['brands']=palm_brands['brands'].str.replace('Rita', 'Poppies')\npalm_brands['brands']=palm_brands['brands'].str.replace('Coles Patisserie,Coles', 'Coles')\npalm_brands['brands']=palm_brands['brands'].str.replace('Edward and Sons, Edward & Sons', 'Edward & Sons')\npalm_brands['brands']=palm_brands['brands'].str.replace('7days', '7 Days')\npalm_brands['brands']=palm_brands['brands'].str.replace('A Couple Of Squares', 'A Couple Of Squares Inc.')\npalm_brands['brands']=palm_brands['brands'].str.replace('Aladin', 'Aladdin')","876a21c7":"palm_brands.loc[palm_brands.brands.str.lower().str.contains(\"snyder's|lance\",na=False),'brands'] = \"Snyder's Lance\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('hy-vee',na=False),'brands'] = 'Hy-Vee Inc'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('meijer',na=False),'brands'] = 'Meijer'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('market pantry|target',na=False),'brands'] = 'Market Pantry'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('dawn food',na=False),'brands'] = 'Dawn Foods'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('the bakery',na=False),'brands'] = 'The Bakery by Walmart'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('wal-mart|walmart',na=False),'brands'] = 'Walmart'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('lofthouse',na=False),'brands'] = 'Lofthouse Foods'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('elmer',na=False),'brands'] = 'Elmer Corporation'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('unilever',na=False),'brands'] = 'Unilever'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('decorated',na=False),'brands'] = 'The Decorated Cookie Company'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('clover valley',na=False),'brands'] = 'Clover Valley'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('hill valley',na=False),'brands'] = 'Hill & Valley Inc.'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('sainsbury',na=False),'brands'] = \"Sainsbury's\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('casino',na=False),'brands'] = \"Casino\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('carrefour|jury',na=False),'brands'] = \"Carrefour\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('ferrero|nutella',na=False),'brands'] = \"Ferrero\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('dean',na=False),'brands'] = \"Dean Foods\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('aldi',na=False),'brands'] = 'Aldi-Benner Company'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('skippy',na=False),'brands'] = 'Skippy,Hormel Foods'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('kroger|fresh food|bakery fresh',na=False),'brands'] = 'Kroger'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('vico',na=False),'brands'] = 'Vico'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('lipton|lay|dorito',na=False),'brands'] = 'PepsiCo'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('lindt',na=False),'brands'] = 'Lindt & Sprungli Gmbh'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('barilla|harry',na=False),'brands'] = 'Barilla'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('so delicious',na=False),'brands'] = 'So Delicious Dairy Free'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('findus',na=False),'brands'] = 'Findus'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('western family',na=False),'brands'] = 'Western Family'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('ibakefood',na=False),'brands'] = 'ibakefoods'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('lotus',na=False),'brands'] = 'Lotus'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('schnucks',na=False),'brands'] = 'Schnucks'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('pillsbury',na=False),'brands'] = 'Pillsbury'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('food club',na=False),'brands'] = 'Food Club'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('entenmann',na=False),'brands'] = \"Entenmann's\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('wilton',na=False),'brands'] = \"Wilton\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"freshley's\",na=False),'brands'] = \"Mrs. Freshley's, Flowers Foods Inc.\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('fresh & easy',na=False),'brands'] = \"Fresh & Easy\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('hubert',na=False),'brands'] = \"St Hubert\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('betty',na=False),'brands'] = \"Betty Crocker\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('auchan',na=False),'brands'] = \"Auchan\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('tesco',na=False),'brands'] = \"Tesco\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('walkers',na=False),'brands'] = \"Walkers\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('heinz|kraft',na=False),'brands'] = \"Kraft Heinz Co\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('arnott|tim tam',na=False),'brands'] = \"Arnott's\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('marks|m&s',na=False),'brands'] = 'Marks & Spencer'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('maltesers|mars|snickers|twix|skittles',na=False),'brands'] = 'Mars'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('ghirardelli',na=False),'brands'] = 'Ghirardelli Chocolate Company'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('endangered',na=False),'brands'] = 'Endangered Species Chocolate Co'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('u bio',na=False),'brands'] = 'U'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('soleil',na=False),'brands'] = 'Bio Soleil'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('jardin',na=False),'brands'] = 'Jardin Bio'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('power crunch',na=False),'brands'] = 'Power Crunch'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('power bar',na=False),'brands'] = 'Power Bar'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('big y',na=False),'brands'] = 'Big Y Foods Inc.'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('little debbie|mckee|sunbelt|heartland|drake',na=False),'brands'] = 'McKee Foods'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('dansk',na=False),'brands'] = 'Royal Dansk'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('wild oats',na=False),'brands'] = 'Wild Oats Marketplace'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('terres et c\u00e9r\u00e9ales',na=False),'brands'] = 'Terres et C\u00e9r\u00e9ales Bio'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('food lion|ahold|giant|hannaford',na=False),'brands'] = 'Ahold Delhaize'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('supervalu',na=False),'brands'] = 'Essential Everyday,Supervalu'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('harris|ht trader',na=False),'brands'] = 'Harris Teeter'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('trader joe',na=False),'brands'] = \"Trader Joe's\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('mousquetaires',na=False),'brands'] = \"Mousquetaires\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('nestle|nestl\u00e9|maggi|buitoni|nescafe|herta|milo',na=False),'brands'] = \"Mousquetaires\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"migros s\u00e9lection|farmer|anna's|m-classic|m-budget|cornatur|migros\",na=False),'brands'] = \"Elsa Miforma\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"365|whole food\",na=False),'brands'] = \"Whole Foods Market\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"coop\",na=False),'brands'] = \"Coop Group\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"lactel|primev\u00e8re|primevere\",na=False),'brands'] = \"Lactalis Intl\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"marque rep\u00e8re|marque repere|leclerc\",na=False),'brands'] = \"Marque Rep\u00e8re,Leclerc\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"belvita|cadbury|cote d'or|figaro|freia|marabou|mikado|milka|prince|oreo|ritz|toblerone|lu,\",na=False),'brands'] = \"Mondelez Intl\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"brossard|jacquet\",na=False),'brands'] = \"Jacquet,Brossard\"\npalm_brands.loc[palm_brands.brands.str.contains(\"Cora\",na=False),'brands'] = \"Louis Delhaize\"\npalm_brands.loc[palm_brands.brands.str.contains(\"LU\",na=False),'brands'] = \"Mondelez Intl\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"kellogg\",na=False),'brands'] = \"Kellogg's\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"claude leger|claude l\u00e9ger|chabrior\",na=False),'brands'] = \"Mousquetaires\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"monique\",na=False),'brands'] = \"Monique Ranou\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"ivoria\",na=False),'brands'] = \"Ivoria Chocolate\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"intermarch\u00e9|intermarche\",na=False),'brands'] = \"Intermarch\u00e9\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"danone\",na=False),'brands'] = \"Danone\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"united biscuits|bn|mcvitie|godiva\",na=False),'brands'] = \"Yildiz Holdings\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"\u00fcltje|ultje\",na=False),'brands'] = \"\u00dcltje\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"tous\",na=False),'brands'] = \"Tous les jours,CJ Foodville\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"3 toque\",na=False),'brands'] = \"3 Toques\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"toque\",na=False),'brands'] = \"Toque du chef\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"knorr\",na=False),'brands'] = \"Unilever\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"nissin\",na=False),'brands'] = \"Nissin Foods\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('7-eleven|7 select',na=False),'brands'] = \"7-Eleven\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('les delice|les d\u00e9lice',na=False),'brands'] = 'Les Delices des 7 vallees'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"505\",na=False),'brands'] = \"505 Southwestern\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('alnatura|altanatura',na=False),'brands'] = \"Alnatura\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('poppies|macaron|berlidon|delizza',na=False),'brands'] = \"Poppies-Berlidon\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('britannia',na=False),'brands'] = \"Britannia Industries\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('antoinette',na=False),'brands'] = \"Antoinette Patisserie\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('180',na=False),'brands'] = \"180 Snacks Inc.\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('market square',na=False),'brands'] = \"Market Square Bakery\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('monoprix',na=False),'brands'] = \"Monoprix\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('gagnant|leader',na=False),'brands'] = \"Leader Price\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('st michel|saint michel',na=False),'brands'] = \"St Michel\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('r\u00e9villon|revillon',na=False),'brands'] = \"R\u00e9villon Chocolatier\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('gerbl\u00e9|gerble',na=False),'brands'] = \"Gerbl\u00e9\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('m&m',na=False),'brands'] = \"Mars\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('mes p',na=False),'brands'] = \"Mes P'tits Secrets\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('pasquier',na=False),'brands'] = \"Pasquier\"\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('valu time',na=False),'brands'] = 'Valu Time'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('pepperidge|campbell|royal dansk|arnott',na=False),'brands'] = 'Kelsen'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains('planta fin',na=False),'brands'] = 'Unilever'\npalm_brands.loc[palm_brands.brands.str.lower().str.contains(\"planta fin|carte d'or|miko|fruit d'or|hellmann\",na=False),'brands'] = 'Unilever'","142da4f6":"#I cant simply search for string LU\/Lu\/lu as this will return many other unwanted rows. Therefore, I needed to specify that I am\n#looking for a 2-lenght string and replace them with the correct company name.\n\nfilter = palm_brands.brands.str.len() == 2\npalm_brands.loc[filter,'brands'] = \"Mondelez Intl\"","20d144ce":"plt.figure(figsize=(10,8))\nax=palm_brands['brands'].value_counts()[:20].plot(kind='barh',color='teal')\nax.invert_yaxis()\nax.set_title(\"Number of products by Brand in Dataset\",{'fontsize':14})\nplt.show()","5eb7911c":"palm_brands['brands']=palm_brands['brands'].str.replace('Aladin', 'Aladdin')","2e8723b7":"palm_brands.loc[palm_brands.brands.str.lower().str.contains(\"planta fin|carte d'or|miko|fruit d'or|hellmann\",na=False),'brands'] = 'Unilever'","0909e4c3":"palm_brands[palm_brands.brands.str.lower().str.contains(\"wall\",na=False)][['brands','product_name','countries_en']]","acc1f19b":"palm_brands.shape","4da2e96d":"ing_palm_oil = palm_brands[(palm_brands['ingredients_from_palm_oil_n'] > 0.0) | (palm_brands['ingredients_that_may_be_from_palm_oil_n'] > 0.0)]","386f56b8":"ing_palm_oil.shape","0ec0298f":"palm_brands['ingredients_from_palm_oil_n'].value_counts()","3bbc1c6c":"palm_brands['ingredients_that_may_be_from_palm_oil_n'].value_counts()","48309f5e":"grouped = ing_palm_oil.groupby('brands').size().reset_index(name='count').sort_values(by='count',ascending=False).head(20)","041d16ab":"ax = grouped.plot(x='brands',kind='barh',color='palevioletred',figsize=(10,8))\nax.invert_yaxis()\nax.legend().set_visible(False)\nax.set_title('Top 20 Brands producing products with Ingredients that (may) contain palm oil',{'fontsize':20})\nplt.tight_layout()\nplt.show()","69e84bc6":"plt.figure(figsize=(10,8))\ning_palm_oil[ing_palm_oil['labels_en'] == 'Sustainable Palm Oil']['brands'].value_counts().head(20).plot(kind='bar',color='green')\nplt.title('Brands producing with Sustainable Palm Oil',fontsize=14)\nplt.show()","5d934016":"palm = ing_palm_oil['ingredients_from_palm_oil_tags']","d6e610f1":"palm_dict = {'huile-de-palme':'Palm Oil','huile-de-palme,e304-palmitate-d-ascorbyle':'Palm Oil,e304','oleine-de-palme':'Palm Olein',\n             'e304-palmitate-d-ascorbyle':'e304','mono-et-diglycerides-d-acides-gras-de-palme':'e471',\n             'huile-de-palme,stearine-de-palme':'Palm Oil,Palm Sterin','e304-palmitate-d-ascorbyle,huile-de-palme':'e304,Palm Oil',\n             'huile-de-palme,oleine-de-palme':'Palm Oil,Palm Olein','oleine-de-palme,e304-palmitate-d-ascorbyle':'Palm Olein,e304',\n             'stearine-de-palme':'Palm Sterin','huile-de-palme,mono-et-diglycerides-d-acides-gras-de-palme':'Palm Oil,e471',\n             'oleine-de-palme,huile-de-palme':'Palm Oil,Palm Olein','stearine-de-palme,huile-de-palme':'Palm Oil,Palm Sterin'}\n\npalm_updated = palm.map(palm_dict,na_action=None)","0d2225bb":"palm_updated = palm_updated.str.split(',',expand=True)","664b5fdd":"palm_count = palm_updated.apply(pd.value_counts)","17f8a7dc":"palm_count['total'] = palm_count.apply(lambda row:row[0] + row[1],axis=1).astype(int)","8bdf17e7":"enum = pd.DataFrame(ing_palm_oil['ingredients_that_may_be_from_palm_oil_tags'].str.extractall('([e]\\d\\d\\d\\w?)'))","390ceb37":"enum.dropna(inplace=True)","0fcbd40e":"enum_count = enum.apply(pd.value_counts)","dac5d736":"fig = plt.figure(figsize=(14,8))\nax1 = fig.add_subplot(1,2,1)\n\nx1_cor = np.arange(5)\nax1.bar(x1_cor,palm_count.total,color='skyblue')\nax1.set_xticks(x1_cor)\nax1.set_xticklabels(palm_count.index)#,rotation='vertical')\nax1.set_title('Food Products containing Palm Oil and its variants')\n\nx2_cor = np.arange(14)\nax2 = fig.add_subplot(1,2,2)\nax2.bar(x2_cor,enum_count[0],color='lightcoral')\nax2.set_xticks(x2_cor)\nax2.set_xticklabels(enum_count.index,rotation='vertical',fontsize=14)\nax2.set_title('Emulsifiers,Stabilisers,Thickeners and Coloring (E160a) Used')\nplt.show()","935fd5c6":"plt.rcParams[\"figure.figsize\"] = [10,6]\nfig, (ax,ax2) = plt.subplots(ncols=2)\nfig.subplots_adjust(wspace=0.5)\nsns.heatmap(palm_brands[palm_brands['ingredients_from_palm_oil_n'] > 0.0].groupby('ingredients_from_palm_oil_n').mean()[['trans-fat_100g','saturated-fat_100g','fat_100g','cholesterol_100g']],annot=True,linewidth=.5, cmap=\"rocket\", ax=ax, cbar=False)\nfig.colorbar(ax.collections[0], ax=ax,location=\"left\", use_gridspec=False, pad=0.2)\nplt.title('Mean of Fats vs Number of Ingredients from Palm Oil',fontsize=14)\nsns.heatmap(palm_brands[palm_brands['ingredients_that_may_be_from_palm_oil_n'] > 0.0].groupby('ingredients_that_may_be_from_palm_oil_n').mean()[['trans-fat_100g','saturated-fat_100g','fat_100g','cholesterol_100g']],annot=True,linewidth=.5, cmap=\"icefire\", ax=ax2, cbar=False)\nfig.colorbar(ax2.collections[0], ax=ax2,location=\"right\", use_gridspec=False, pad=0.2)\n#ax2.set_title('Mean of Fats vs Number of Ingredients from Palm Oil')\nplt.show()","e842650a":"plt.figure(figsize=(12,10))\ndf[df['additives_n'] > 0.0]['additives_n'].value_counts().plot(kind='bar',color='cadetblue')\nplt.title('Number of additives used in food products',fontsize=14)\nplt.show()","85ff6bf3":"additives = (df['additives_en'].str.extractall(\"(?P<Count>[E]\\d\\d\\d\\w?)\"))","fd3cd4c9":"additives_count = additives.apply(pd.value_counts).head(30)","0a77cf41":"additives_count['Enum'] = additives_count.index","0e8f98d4":"additives_count.reset_index(drop=True,inplace=True)","3c140dad":"additives_mapping = {'E330': 'orange','E322':'purple','E322i':'purple','E101':'blue','E375':'orange','E101i':'blue',\n                    'E300':'cyan','E415':'purple','E412':'orange','E500':'orange','E471':'purple','E203':'forestgreen','E407':'purple',\n                    'E440':'purple','E250':'forestgreen','E150a':'blue','E450':'orange','E500i':'blue','E331':'orange',\n                     'E129':'orange','E339':'orange','E440i':'purple','E160a':'blue','E270':'orange','E102':'blue',\n                     'E410':'purple','E133':'blue','E341':'orange','E428':'purple','E621':'orange','E202':'blue'}\n\nadditives_count['Colors'] = additives_count['Enum'].map(additives_mapping)","45264aeb":"import matplotlib.patches as mpatches","096379f6":"ax = additives_count.plot(x='Enum',y='Count',kind='barh',color=additives_count['Colors'],figsize=(12,10))\nax.invert_yaxis()\nax.legend().set_visible(False)\nax.set_title('30 most commonly used additives (categorized)',{'fontsize':20})\n\ncolors = mpatches.Patch(color='blue', label='Colors')\nothers = mpatches.Patch(color='orange', label='Others')\nemulsifiers = mpatches.Patch(color='purple', label='Emulsifiers')\nsweetners = mpatches.Patch(color='orchid', label='Sweetners')\nantioxidant = mpatches.Patch(color='cyan', label='Antioxidants')\npreservatives = mpatches.Patch(color='forestgreen', label='Preservatives')\n\nplt.legend(handles=[colors,others,emulsifiers,sweetners,antioxidant,preservatives])\nplt.show()","590e1d07":"ing_df = df.dropna(subset=['ingredients_text'])","4f99c973":"ing_df = ing_df['ingredients_text'].str.replace('(\\W)',',').str.replace(',,,',',').str.replace(',,',',')","84f6d745":"from collections import Counter\nresults = ing_df.str.split(',').values.tolist()\nflat_results = [item for sublist in results for item in sublist]\ncount = Counter(flat_results)","1cef96b4":"count.most_common(20)","f882267c":"del count['de']\ndel count['']\ndel count['and']\ndel count['organic']\ndel count['d']\ndel count['natural']","77cc203e":"count['salt'] = count.pop('sel',183655)\ncount['sugar'] = count.pop('sucre',135054)","d7e9cc93":"top10 = count.most_common(10)","0ad29895":"labels,count = zip(*top10)\nxs = np.arange(len(labels)) \nplt.bar(xs,count,color='darkseagreen')\nplt.xticks(xs, labels)\nplt.title(\"10 Most commonly use ingredients\")\nplt.show()","6cec7d71":"df[['created_datetime','last_modified_datetime']].isnull().sum()","288f1cba":"df.dropna(subset=['created_datetime'],axis=0,inplace=True)","5a982258":"converted_created_datetime = pd.to_datetime(df['created_datetime'],errors='coerce')","164ee922":"converted_last_modified = pd.to_datetime(df['last_modified_datetime'],errors='coerce')","721d0d34":"ave_delta = ((converted_last_modified-converted_created_datetime)\/2).astype('m8[D]').astype(np.float32)","77f92458":"ave_delta.hist(bins=5)\nplt.title(\"Mean Difference between 'Last Modified' and 'First Created'\")\nplt.ylabel(\"Days\")\nplt.xlabel(\"Products\")\nplt.show()","eee9fcd0":"df['converted_created_datetime'] = pd.to_datetime(df['created_datetime'],errors='coerce')","a700ffaa":"time = (df.set_index('converted_created_datetime').resample('M')['product_name'].count())\/30","4fa8819e":"plt.figure(figsize=(12,10))\nx_corr = np.arange(69)\nx_time = ['Jan12','Feb12','Mar12','Apr12','May12','Jun12','Jul12','Aug12','Sep12','Oct12','Nov12','Dec12','Jan13','Feb13',\n          'Mar13','Apr13','May13','Jun13','Jul13','Aug13','Sep13','Oct13','Nov13','Dec13','Jan14','Feb14','Mar14','Apr14',\n          'May14','Jun14','Jul14','Aug14','Sep14','Oct14','Nov14','Dec14','Jan15','Feb15','Mar15','Apr15','May15','Jun15',\n          'Jul15','Aug15','Sep15','Oct15','Nov15','Dec15','Jan16','Feb16','Mar16','Apr16','May16','Jun16','Jul16','Aug16',\n          'Sep16','Oct16','Nov16','Dec16','Jan17','Feb17','Mar17','Apr17','May17','Jun17','Jul17','Aug17','Sep17']\nfrequency=4\n\nplt.bar(x_corr,time)\nplt.xticks(x_corr[::frequency],x_time[::frequency],rotation=90)\nplt.title('Montly Mean of Created Items',{'fontsize':14})\nplt.show()\n\n","480841b3":"nutrition_score = df[['nutrition-score-fr_100g','energy_100g','saturated-fat_100g','sugars_100g','sodium_100g','proteins_100g']]","d647dcc3":"nutrition_score.dropna(inplace=True)","8725b835":"nutrition_score_corr = nutrition_score.corr()","604867b1":"nutrition_score_corr","bdd5c3af":"plt.figure(figsize=(10,8))\nsns.heatmap(nutrition_score_corr,annot=True,linewidth=0.5)\nplt.title('Correlation of elements that contribute to Nutrition Score',fontsize=14)\nplt.show()","56e0c32d":"### a. Interested in columns that contains the word palm oil or gives information on palm oil.","532fb1f8":"### e. Fats ","4be19173":"According to Mieux Choisir, a Swiss journal, the label RSPO (Roundtable on Sustainable Palm Oil) is nothing but a failure. This is largely due to guidelines not enforced. For example, deforestations are still happening, and extremely toxic pesticides are continually being used. Even thought brands\/products may have this RSPO label, it doesnt really mean anything. Further reading below.\n\n<b>Reference Site<b>\n\n<i>https:\/\/www.frc.ch\/huile-de-palme-label-rspo-insuffisant\/<i>","d0a0ed6d":"###   a.  Removing missing values","7c5a2ca3":"Firstly, for the missing brand names, I am making an assumption that it can be found in the 1st 2 words of the product name, which I will use to fill up with. Secondly, I will have go thru the list, and similar brands will be consolidated. An observation is that the brand column seeems to contain company names, which will be good for my analysis as I am after all interested in looking at companies using palm oil in their products.\n\n<em>Notes:<\/em>\n   \n   - Replace tastykake (line of products) with Tasty Baking Company (company producing them).\n   - 2 different values, Hy-Vee,Hy-Vee Inc. and Hy-Vee. Will consolidate this. (US supermarket company)\n   - Several different inputs for Lofthouse Cookies, which are produced by Tree House Foods.\n   - Ahold - Dutch\n   - Hy-Vee (US supermarket company)\n   - krogern (US retail co.)\n   - Weis (US retailer)\n   - Roundy's (US retailer)\n   - Food Club (AU)\n   - Dean Foods Co\n   - food lion (US retailer)\n   - market pantry (brand by Target)\n   - jewel osco retailer (carries ibakefoods)\n   - fresh & easy (us neighborhood chain)","bdc9e6f7":"### a. Analysis of products and their palm content","9a6efd91":"# Conclusion","8a9708fc":"### d. Palm Oil (and her variants) and the ENum additives","95ad7514":"Looking at the list above, there are many variations as to how each product is labeled. My focus will be to see if a product contains palm oil, comes from sustainable source and if they contains additives. \n\n<em>Notes\/Assumptions:<\/em>\n    \n    - I consider colorings as an additives. \n    - Green dot is a label to indicate vegetarian foods.\n    - Any labels containing 'sustainable palm oil' will be categorized as such.","e4b39b17":"We want to see if there's any relationship between products that contain palm oil and the fat content. The columns of interests are as follows-\n\n    - trans-fat_100g\n    - saturated-fat_100g\n    - fat_100g\n    - cholesterol_100g\n\nRecommendation of fat intake should be between 44g to 78g (depending on daily calorie intake) and saturated fat should not exceed 7% of the total calorie intake.\n\n<b>Reference Site<b>\n\n<i>https:\/\/www.livestrong.com\/article\/406941-recommended-fat-intake-by-the-american-heart-association\/\n\nhttps:\/\/healthyforgood.heart.org\/eat-smart\/infographics\/the-facts-on-fats<i>","578d6917":"In this dataset, there are many overlapping columns that differ by the suffixes. According to the text file on the Open Food Facts database, https:\/\/world.openfoodfacts.org\/data\/data-fields.txt, columns with suffix _en are in the English language. There are columns that have _tag, which are normalized. Therefore, for any transformation, we will look at either one of these 2 types of columns (depending on what is made available to us).","8257f5ca":"Looking at the graph above, it's worrying to know that there are some products that contains more than 20 additives. Based on some research, the types of additives used are regulated and has to be approved prior to use. However, there's no official documents limiting the number of additives that can be added to food products. \n\n<b>Reference Sites<b>\n\n<i>https:\/\/www.fda.gov\/food\/ingredientspackaginglabeling\/foodadditivesingredients\/ucm091048.htm\n\nhttp:\/\/www.who.int\/mediacentre\/factsheets\/food-additives\/en\/<i>","849acd3e":"________\n# V. Text Data\n\nBased on the __ingredients_text__ column, what are the most common ingredients?","1f4c180f":"______\n# Summary\n\n__I. Importing and Discovering the Database__\n\n__II. Cleaning and Manipulating the Data__\n    \n    a. Removing missing values\n    b. Removing Duplicates\n    \n    \n__III. Investigation__\n\n    a. Interested in columns that contains the word palm oil or gives information on palm oil.\n    b. labels_en column\n    c. Brands\n    \n\n__IV. USED FOR FURTHER CLEANING__\n\n    a. Analysis of products and their palm content\n    b. At a glance\n    c. Sustainable Palm Oil\n    d. Palm Oil (and her variants) and the ENum additives\n    e. Fats\n    f. Additives\n    \n__V. Text Data__\n\n    a. Data Cleaning and Transformation\n    \n__VI. Time-series analysis__\n\n__VII. Finding Correlations__\n\n__Conclusion__","0376667c":"____\n# I. Importing and Discovering the Database","2a2b28da":"In the 1st plot, the mean of the fat content doesnt increase with the number of ingredients from palm oil. However, for the 2nd plot, it shows the fat content increases with increased number of ingredients from palm oil.","68b70b7a":"1) As the question I would answered is tied to product names, I will start off by deleting rows that have missing product_name.\n\n2) Based on the 2 summary tables above, I will remove the following columns that are empty or I deem not neccessary for my data analysis.\n\n    a) no_nutriments\n    b) nutrition_grade_uk\n    c) chlorophyl_100g\n    d) glycemic-index_100g\n    e) water-hardness_100g \n    f) image_url\n    g) imaage_small_url\n    h) url\n    i) ingredients_from_palm_oil\n    j) ingredients_that_may_be_from_palm_oil\n    \n3) I will also proceed to remove columns ending with __acid_100g__ as I do not need them for my data analysis, and the number of rows filled is extremely few compared to the 300k rows.","3b8d232b":"___________\n__`First of all,`__ I would like to know :\n\n - What brands manufacture their products with palm oil? Can we consider them as healthy? What is their fat content? What does it mean to use sustaianable palm oil.\n \n \n - What additives are used? If so, what kind? How does these additives affect the health of the consumers? What are the commonly used additives?","a83162d3":"Looking at the most common ingredients, there are several that __ingredients__ that cannot be considered as one. I will therefore delete them. There are also used of French words for the same ingredients captured in English. Will need to rename the ingredients (keys) so that it will reflect the true count.","1948b3dd":"### c. Sustainable Palm Oil","2545736d":"### f. Additives","95294768":"### c. Brands","082047fe":"Running this line below simply tells us that there are no 2 rows of the same. It make sense as there are many different contributors, each with their own style of inputing values for each columns. Thus, it is more useful to get duplicates on columns of interest. I have written a simple helper funtion to check for duplicates anytime we need to. \n\nI did a deeper investigation, and found that there are duplicates of product_names and brands. I will proceed to drop duplicated rows based on product_names and brands_tags.","f01c24d7":"Before proceeding with cleaning and transforming the data further, I will look at the rows\/columns that contain the word 'palm oil'. \n    \n    a) focus on brands\/compnaies\n    b) look in depth into ingredients ie palm oil content, additives(types?commonly used?cancer causing?), \n    fats(types of fats)?(what's the relations)\n    c) sustainable palm oil. What does this mean? does fat content still change or makes it healthier?","cd1ffb43":"### b. `labels_en` column ","027be7f7":"______\n# IV. USED FOR FURTHER CLEANING","4375680c":"Below are the commonly found ingredients that originates (or made from) palm oil. The 4 items below are found in the 'ingredients_from_palm_oil_tags'.\n\n- e471 - A group of synthetic fats that are produced from glycerol and natural fatty acids, either from plant and animal origins.It is an emulsifier to combine fats and water. It can come from palm oil, coconut oil, soybean oil, cottonseed oil or canola oil. Contains trans fats, which have been associated with numerous diseases, including heart, stroke and diabetes. Prmote inflammation and obesity, raised LDL (low density lipoprotein) and lower HDL (high-density lipoprotein).\n\n\n- Palm stearin - the solids fraction of palm oil. Fatty acid composition contins almost 50% palmitic acids (saturated fatty acids) and 35% oleic acid (common monounstaturated fatty acid). According to WHO, convincing evidences states that palmitic acids increases the risk of developing cardiovascular disease, by increasing LDL levels in the blood. \n\n\n- Palm Olein - the liquid fraction of palm oil. Some suggests that it has a similar compostion to olive oils, which helps in reducting the LDL.\n\n\n- Palmitic acid - Boosts metastasis in mouse models of human oral cancer cells. Among all fatty acids, it has the strongest effect in boosting the metastatic potential of CD36+ metastasis-initiating cells.\n\n\n- e304 - Ascorbyl palmitate (antioxidant food additive) an ester formed from ascorbic acids and palmitic acid, creating a fat-soluble form of Vit. C.\n\n\n<b>Reference Site<b>\n\n<i>https:\/\/www.food.gov.uk\/science\/additives\/enumberlist<i>\n\n\n\n\n","e08ac7d8":"____\n# II. Cleaning and Manipulating the Data","0bfa0747":"### b. At a glance","791d288b":"Next, we are interested in these following columns. The value by the column name tells us how many ingredients comes from palm oil, and we are only interested in 1.0 and above, and it will tell us which brands uses ingredients that contains or come from palm oil.\n\n    a) ingredients_from_palm_oil_n (5941)\n    b) ingredients_from_palm_oil_tags\n    c) ingredients_that_may_be_from_palm_oil_n (2911)\n    d) ingredients_that_may_be_from_palm_oil_tags","63ffb5cb":"Looking the heatmap above, it tells us that energy,saturated_fat and sugars contributes to the nutrition_score of a product. ","42405134":"### a. Data Cleaning and Transformation","95e9f3ab":"_____________\n# VII. Finding Correlations\n\nInvestigate the relationship between the nutritional score and the other variables. Identify the variables which most affect the nutritional score and provide some insight into which factors cause both a low or a high nutritional score.\n\nBased on https:\/\/www.food.gov.uk\/northern-ireland\/nutritionni\/niyoungpeople\/nutlab\/nutprofmod, the score is based the content of the following -\n\n    - energy\n    - saturated fat\n    - sugars\n    - sodium\n    - protein\n\nI will use the abovementioned columns and 'nutrition-score-fr_100g', which is adapted for the French market. To note is a food is classified less healthy when scores 4 points or more. A drink is classified less healthy when scores 1 point or more. ","8e20fa5c":"Very interesting finding, I didnt not expect there be product_name to contain the string __palm oil__. Palm oil has an extremely bad reputation, and consumers are smarter about avoiding them. So, it's strange to find food producers to name their product as such.\n\nI will create a seperate DF with the columns\/rows of interest and drop duplicated rows. I cannot simply delete rows with null values. I will need to transform the data, which is a tedious task as many rows are either missing values, not correctly categorized or they are filled with too many values. ","fb13b21d":"In conclusion, \n\n- a lot of brands are producing food products with palm oil. Number varies as it depends on how big a company is and how many products they are producing. \n\n\n- What I found intesting is that there are additvies that are from palm oil source, but are named as a Enum food products. As a consumer, I am more aware when reading labels and not just look for palm oil, but look for variants of palm oils. \n\n\n- We cannot consider food products containing palm oil as healthy, neither does producing with sustainable palm oil give any significance due to the laxed laws and regulations.\n\n\n- Most commonly use additive is E330 (citric acid), which is a preservative used to prevent bacteria growth. Next commonly used additives are emulsifiers, and followed by colors.","48681362":"_____\n# III. Investigation","902c2a6c":"### b. Removing Duplicates","dd40c217":"After examining the ingredients_text column, there are NaN values which I will remove. The inputs are not consistently captured. There are many non-word characters used to capture the ingredients. I will replace them all with commas, which I will then split into a collections to obtain the count.","8c72974e":"__________\n# VI. Time-series analysis\n\nInvestigate the created_datetime and last_modified_datetime and use data visualization to communicate the findins on the following -\n\n    1) Analyze the mean time difference between these two values.\n    2) Analyze the mean number of created items per month over the timeline of the data. "}}