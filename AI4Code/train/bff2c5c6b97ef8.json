{"cell_type":{"1e350149":"code","ca306e39":"code","25194fb4":"code","bf87df36":"code","c5611baa":"code","b095e1b1":"code","5f0001a9":"code","972ec084":"code","a13eebdb":"code","d1e5a1a0":"code","c2d95538":"code","8db3bf7e":"code","ed005ce2":"code","a132d250":"code","db7883a0":"code","c4456c1e":"code","04335226":"code","edb4c3c2":"code","a7627414":"code","fa2d66b8":"code","27eeeedf":"code","bcb025e6":"code","643fa27f":"code","a6e7ce4a":"code","246ef6a1":"code","905edd31":"code","8cd6a2dc":"code","58388ced":"code","cbe94467":"code","982480f0":"code","deb632d6":"code","2e89aa44":"code","ca2945be":"code","b29fd48c":"code","7e65855a":"code","d3140343":"code","103be0b8":"code","f067b116":"code","c7e55d3a":"code","2a4d7dbe":"markdown","b6f5dfdf":"markdown","bd749243":"markdown","3a1cc9d8":"markdown","505aeb37":"markdown","c56817cf":"markdown","d6bd9c87":"markdown","c88382e3":"markdown","d2971ca0":"markdown","6c252665":"markdown","a8ba6628":"markdown","a37680cc":"markdown","8ec9a590":"markdown","c9d0f0d2":"markdown","d18dfbfc":"markdown","5b1605fb":"markdown","19ffb478":"markdown","83fd121a":"markdown","25041c3a":"markdown","d522e046":"markdown","3c04a9b8":"markdown","3351139c":"markdown","df69e13d":"markdown","d5b9b590":"markdown","615bc491":"markdown","ccfc622a":"markdown","a9c183a4":"markdown","c644f9c8":"markdown","1915dea6":"markdown","b8577d91":"markdown","bc2be884":"markdown","6a412e9b":"markdown","ddcd3c6f":"markdown","0c5a4de4":"markdown","3e89b8e3":"markdown","41b9c630":"markdown","2ad761f1":"markdown","f6802735":"markdown"},"source":{"1e350149":"# Load necessary libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# In order to have the output of plotting function printed to the notebook\n%matplotlib inline \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ca306e39":"main_df=pd.read_csv(\"\/kaggle\/input\/suicide-rates-overview-1985-to-2016\/master.csv\")\nmain_df.head(10)","25194fb4":"# Create a summary table for the dataframe\n\ndef summary_df(df):\n    print(f\"Dataset Shape: {df.shape}\")\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    \n    return summary","bf87df36":"summary_df(main_df)","c5611baa":"# How many countries were survayed each year?\nyear_df=main_df.groupby(\"year\").agg({\"country\":\"nunique\"}).reset_index()\nfig=plt.figure()\nplt.bar(year_df[\"year\"], year_df[\"country\"])\nplt.show()","b095e1b1":"# Find the index of the first row of 1990 data\nmain_df=main_df.sort_values(by=[\"year\"]).reset_index(drop=True)\nidx_list_1990=main_df[main_df[\"year\"]==1990].index.values.tolist()\nstart_year=min(idx_list_1990)\n\n# Find the index of the last row of 2015 data\nidx_list_2015=main_df[main_df[\"year\"]==2015].index.values.tolist()\nend_year=max(idx_list_2015)\n\n# Slice the Dataframe so that we have only 1990-2005 data\nmain_df=main_df.iloc[start_year:end_year].reset_index(drop=True)","5f0001a9":"# After selecting the 1990-2005 rows out of the original dataset\nmain_df","972ec084":"# Create a DataFrame that has country name, country code, region, and income group information\nclass_df=pd.read_csv(\"\/kaggle\/input\/world-bank-country-and-lending-groups\/worldbank_classification.csv\")\nclass_df","a13eebdb":"# Clean the class_df for future use\nclass_df=class_df.drop(columns=[\"x\",\"Lending category\",\"Other\"])\nclass_df=class_df.rename(columns={\"Economy\": \"country\",\"Code\":\"country code\"})\ncountries_218=class_df[\"country\"].tolist()\nclass_df=class_df.set_index(\"country\")","d1e5a1a0":"# Identify which country names are different between main_df and class_df\nmain_countries=main_df[\"country\"].unique().tolist()\n\nprint(\"The names of the following countries are different between two dataframes:\")\nfor country in main_countries:\n    if country in countries_218:\n        continue\n    else:\n        print (country)","c2d95538":"# Make the country names consistent between main_df and class_df\nmain_df['country'] = main_df['country'].replace(\"Kyrgyzstan\",\"Kyrgyz Republic\")\nmain_df['country'] = main_df['country'].replace(\"Macau\", \"Macao SAR\")\nmain_df['country'] = main_df['country'].replace(\"Republic of Korea\", \"South Korea\")\nmain_df['country'] = main_df['country'].replace(\"Russian Federation\", \"Russia\")\nmain_df['country'] = main_df['country'].replace(\"Saint Kitts and Nevis\", \"St. Kitts and Nevis\")\nmain_df['country'] = main_df['country'].replace(\"Saint Lucia\", \"St. Lucia\")\nmain_df['country'] = main_df['country'].replace(\"Saint Vincent and Grenadines\", \"St. Vincent and the Grenadines\")\nmain_df['country'] = main_df['country'].replace(\"Slovakia\", \"Slovak Republic\")","8db3bf7e":"# Grab the category information (e.g., Region, ISO code) from the class_df and add it to the new dataframe\ndef add_classification(df, classification):\n    \n    group_labels=class_df[classification]\n    left_join=pd.merge(df, group_labels, on=\"country\", how='left') \n    \n    return left_join","ed005ce2":"# Create the suicide rate (per 100,000 population) column\ndef groupby_add_s_rate(df, groupby):\n    new_df=df.groupby(groupby).agg({\"suicides_no\":\"sum\", \"population\":\"sum\"}).reset_index()\n    new_df[\"suicides\/100k pop\"]=new_df[\"suicides_no\"]\/new_df[\"population\"]*100000\n    return new_df","a132d250":"# Create a Choropleth Map for a given year\nimport plotly.express as px\n\ndef world_map_year (year):\n    new_df=main_df[main_df[\"year\"]==year]\n    new_df=new_df.groupby(\"country\").agg({\"suicides_no\":\"sum\", \"population\":\"sum\"}).reset_index()\n    new_df[\"suicides\/100k pop\"] = new_df[\"suicides_no\"]\/new_df[\"population\"]*100000\n    \n    # Add ISO alpha3 country code to dataframe\n    df_w_code=add_classification(new_df, \"country code\")\n    \n    fig = px.choropleth(df_w_code, \n                    locations=\"country code\",\n                    color=\"suicides\/100k pop\", \n                    hover_name=\"country\", # column to add to hover information\n                    color_continuous_scale=px.colors.sequential.Plasma)\n    title = 'Suicide rate (per 100,000 population) in {}'.format(year)\n    fig.update_layout(title_text=title)\n    fig.show()","db7883a0":"def world_map_slider(df, column, map_title):\n\n    # Define the max and min of the color bar\n    bar_max=df[column].max()\n    bar_min=df[column].min()\n    \n    # Add ISO alpha3 country code to dataframe\n    df_w_code=add_classification(df, \"country code\")\n    \n    # Make a choropleth map\n    fig = px.choropleth(df_w_code, locations=\"country code\",\n                    color=column,\n                    hover_name=\"country\",\n                    animation_frame=\"year\",\n                    title = map_title,\n                    range_color=(bar_min, bar_max),   # Without setting this up, the color bar range changes\n                   color_continuous_scale=px.colors.sequential.Plasma)\n    #fig[\"layout\"].pop(\"updatemenus\")  # Uncomment it if you want to manually drag the slider\n    fig.show()","c4456c1e":"world_map_year(2009)","04335226":"# Groupby year and country\nyear_country_df=groupby_add_s_rate(main_df, [\"year\",\"country\"])\n\n# Make a world map with slider\nworld_map_slider(year_country_df, \"suicides\/100k pop\", \"Suicide rate (per 100,000 population) from 1990 to 2015\")","edb4c3c2":"# Total suicide rate over time\ns_rate_year=groupby_add_s_rate(main_df, [\"year\"])\n\n# Plot a graph\nfig=plt.figure(figsize=(10,5))\nplt.plot( \"year\", \"suicides\/100k pop\", data=s_rate_year, marker='o', \n         markerfacecolor='white', markersize=6, color='red', linewidth=4)\nplt.xlabel(\"Year\")\nplt.ylim(0,20)\nplt.ylabel(\"Suicide Rate (per 100,000 population)\")\nfig.suptitle(\"Worldwide suicide rate from 1990 to 2015, both sexes\", fontsize=15)","a7627414":"import seaborn as sns\n\nall_countries_year=groupby_add_s_rate(main_df, [\"year\",\"country\"])\n\ndef country_stat (country):   \n    # Extract the country specific data \n    country_df=main_df[main_df[\"country\"]==country]\n    \n    # Create a plot \n    fig, axes = plt.subplots(3, figsize=(15,10))\n    fig.text(0.08, 0.5, 'Suicide rate (per 100,000 population)', va='center', rotation='vertical')\n\n    # Give some space between subplots\n    plt.subplots_adjust(hspace=0.4)\n    \n    # Top plot: Box plot\n    sns.boxplot(y=all_countries_year['suicides\/100k pop'], x=all_countries_year['year'], palette=\"YlGn\", ax=axes[0])\n\n    # Top plot: line plot (both sexes). IMPORTANT: Change the x values to STRING b\/c sns.boxplot convert x.dtype to string.\n    suicide_df=groupby_add_s_rate(country_df, \"year\")\n    sns.lineplot(y=suicide_df['suicides\/100k pop'], x=suicide_df['year'].astype('str'), \n                 color='red', linewidth=2.5, ax=axes[0])\n    axes[0].set(ylabel=None)\n    axes[0].set(xlabel=None)\n    axes[0].set_title(\"Box plot: all countries; line plot: {}\".format(country))\n \n    # Middle plot: line plot (male vs. female)\n    mf_df=groupby_add_s_rate(country_df, [\"year\", \"sex\"])\n \n    for key, grp in mf_df.groupby(['sex']):\n        axes[1].plot(grp[\"year\"], grp[\"suicides\/100k pop\"], label=key)\n    ymax=max(mf_df[\"suicides\/100k pop\"])+4\n    axes[1].set_ylim([0,ymax])\n    axes[1].legend(loc=\"best\")\n    axes[1].set_title(\"Male vs. Female Suicide Rates of {}\".format(country))\n\n    # Bottom plot: line plot (age groups)\n    age_df=groupby_add_s_rate(country_df, [\"year\", \"age\"])\n\n    for key, grp in age_df.groupby(['age']):\n        axes[2].plot(grp[\"year\"], grp[\"suicides\/100k pop\"], label=key)\n\n    ymax2=max(age_df[\"suicides\/100k pop\"])+4\n    axes[2].set_ylim([0,ymax2])\n    axes[2].set_xlabel(\"year\")\n    axes[2].legend(loc=\"best\")\n    axes[2].set_title(\"Suicide Rates of Different Age Groups in {}\".format(country))","fa2d66b8":"country_stat(\"United States\")","27eeeedf":"country_stat(\"South Korea\")","bcb025e6":"mf_year=main_df.groupby([\"year\",\"sex\"]).agg({\"suicides_no\":\"sum\", \"population\":\"sum\"}).reset_index()\nmf_year[\"suicides\/100k pop\"] = mf_year[\"suicides_no\"]\/mf_year[\"population\"]*100000\n\nfig, ax = plt.subplots()\n\nfor key, grp in mf_year.groupby(['sex']):\n    ax.plot(grp[\"year\"], grp[\"suicides\/100k pop\"], label=key)\n\nplt.legend(loc='best')\nplt.xlabel(\"Year\")\nplt.ylim(0,30)\nplt.ylabel(\"Suicide Rate (per 100,000 population)\")\nplt.show()","643fa27f":"# Load the GNI per capita file and clean it up\ngni_capita_df=pd.read_csv(\"..\/input\/worldincomegroupclassification\/GNI per capita.csv\")\ngni_df = gni_capita_df.copy()\ngni_df = gni_df.iloc[4:]\nn_col = gni_capita_df.iloc[3,0:4].tolist()\nn_col = n_col + (gni_capita_df.iloc[3, 4:].astype(\"int64\").tolist())\ngni_df.columns = n_col\ngni_df=gni_df.rename(columns={\"Country Code\":\"country code\"})\n\n# Load the csv file containing the thresholds for the income group categorization each year\nthreshold_df=pd.read_csv(\"..\/input\/worldincomegroupclassification\/income classification threshold.csv\")\n\n# For the suicide rate dataframe, group by year and country. Add the ISO code.\ns_rate_df=groupby_add_s_rate(main_df, [\"year\",\"country\"])\ns_rate_df=add_classification(s_rate_df, \"country code\")","a6e7ce4a":"# Create a list of years from 1990 to 2015. It'll be used in the following for loop.\nyears=s_rate_df[\"year\"].unique().tolist()\n\n# Add the income group and region information to the dataframe\ndef add_income_region(df):\n\n    years=s_rate_df[\"year\"].unique().tolist()\n    income_group_df=pd.DataFrame()\n\n    for year in years:\n\n        # Add the GNI per capita column to the suicide rate dataframe\n        sub_df=df[df[\"year\"]==year]\n        gni_sub_df=gni_df[[year, \"country code\"]]\n        gni_sub_df=gni_sub_df.rename(columns={year:\"GNI per capita\"})\n        sub_df=pd.merge(sub_df, gni_sub_df, on=\"country code\", how=\"inner\")\n        sub_df.dropna(inplace=True)\n\n        # bin the GNI per capita into four income groups  \n        max_gni=max(sub_df[\"GNI per capita\"])\n        cut_labels_4 = ['Low', 'Lower-middle', 'Upper-middle', 'High']\n        str_year=str(year)\n        cut_bins = threshold_df[str_year].tolist()\n        cut_bins.append(max_gni)   # WARNING: when append() is used with list, you don't need to assign it to a list (e.g., no need to have \"cut_bins= at the beginning)\n        sub_df[\"income group\"]=pd.cut(sub_df[\"GNI per capita\"], bins=cut_bins, labels=cut_labels_4)\n\n        income_group_df=income_group_df.append(sub_df)  \n\n    # Add the Region information to the dataframe\n    region_df=class_df.reset_index().set_index(\"country code\")[\"Region\"]\n    category_df=pd.merge(income_group_df, region_df, on=\"country code\", how=\"left\")\n        \n    return category_df","246ef6a1":"category_df=add_income_region(s_rate_df)\ncategory_df","905edd31":"# How many countries in each category were survayed each year?\ndef country_counts(category):\n    dist_df=category_df.groupby([\"year\", category]).agg({\"country code\":\"nunique\"}).reset_index()\n    sns.lineplot(x='year', y='country code', data=dist_df, hue=category).set_title(\"Number of countries surveyed\")\n    plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","8cd6a2dc":"country_counts(\"income group\")","58388ced":"def category_and_year(category, year):\n    \n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 9))\n    \n    # Left plot: All the groups in the select category over time\n    sns.lineplot(x = \"year\", y = \"suicides\/100k pop\", data=category_df, estimator=\"median\",\n                 hue=category, ci=None, ax=ax1)\n    # Add a vertical line to show where the select year is\n\n    ymax = max(category_df.groupby([\"year\",category])[\"suicides\/100k pop\"].median())\n    ymin = min(category_df.groupby([\"year\",category])[\"suicides\/100k pop\"].median())\n    \n    ax1.vlines(year, ymin, ymax, linestyles =\"dashed\", colors =\"k\", label=year )\n    ax1.text(year+0.5, ymax-1, year, fontsize=15)\n    \n    # Right plot: All the groups in the select category in the chosen year\n    sub_df=category_df[category_df[\"year\"]==year]\n    \n    # Set the descending order for the categories of the violin plot\n    inc_order = sub_df.groupby(category)[\"suicides\/100k pop\"].median().reset_index()\n    inc_order = inc_order.sort_values(\"suicides\/100k pop\", ascending=False).set_index(category).index.tolist()\n    \n    sns.violinplot(x = category, y = \"suicides\/100k pop\", data = sub_df, \n                   scale = 'width', inner = 'quartile', color='w', order=inc_order, ax=ax2)\n    ax2.set_title(\"Suicide rate (per 100,000 population) in {fyr} categorized by {fcat}\".format(fyr=year, fcat=category))\n      \n    # Rotate the x labels for regions\n    if category == \"Region\":\n        ax2.set_xticklabels(ax2.get_xticklabels(), rotation=45, horizontalalignment='right')","cbe94467":"category_and_year(\"income group\", 2003)","982480f0":"country_counts(\"Region\")","deb632d6":"category_and_year(\"Region\", 1992)","2e89aa44":"# Calculate % of total suicide rate for each age group\nage_grp_df=groupby_add_s_rate(main_df, [\"year\",\"country-year\", \"age\"])\ntotal_s_rate_df=age_grp_df.groupby(\"country-year\").agg({\"suicides\/100k pop\":\"sum\"}).reset_index()\ntotal_s_rate_df=total_s_rate_df[[\"country-year\", \"suicides\/100k pop\"]]\ntotal_s_rate_df=total_s_rate_df.rename(columns={\"suicides\/100k pop\": \"total suicide rate\"})\n\nage_s_rate=pd.merge(age_grp_df, total_s_rate_df, on=\"country-year\", how='left') \nage_s_rate[\"% total suicide rate\"]=age_s_rate[\"suicides\/100k pop\"]\/age_s_rate[\"total suicide rate\"]*100","ca2945be":"age_s_rate","b29fd48c":"# Plot suicide rates of different age groups\nsns.lineplot(x=\"year\", y=\"% total suicide rate\", data=age_s_rate, estimator=\"mean\", hue=\"age\")\nplt.legend(bbox_to_anchor=(1.05, 1.0), loc='upper left')","7e65855a":"# Group the suicide rate dataframe by year, country, and age. Add ISO contry code.\nmain_grp=groupby_add_s_rate(main_df, [\"year\",\"country\",\"age\"])\nmain_grp=add_classification(main_grp, \"country code\")\n\n# Add the income group and region information\nmain_grp=add_income_region(main_grp)","d3140343":"# Add a label to indicate which group the data point falls into. \ndef make_labels(df):\n    if df[\"age\"]==\"75+ years\" and df[\"income group\"]==\"High\" and df[\"Region\"]==\"Europe & Central Asia\":\n        value=\"75+ years, high income, Europe\"\n    elif df[\"age\"]==\"15-24 years\" and df[\"income group\"]==\"Upper-middle\" and df[\"Region\"]==\"Latin America & Caribbean\":\n        value=\"15-24 years, Upper-middle income, Latin America & Caribbean\"\n    else:\n        value=\"other\"\n\n    return value","103be0b8":"# Add labels to each row using apply() method\nmain_grp[\"label\"] = main_grp.apply(make_labels, axis=1)","f067b116":"# Get rid of \"other\" data so that stripplot only shows two groups of my interest\nstripplot_df=main_grp[~(main_grp[\"label\"]==\"other\")]\n\n# Create a bar plot and a strip plot\nfig, ax = plt.subplots(figsize=(20,10))\nplt.title(\"Bar plot: suicide rates of different age groups in different countries; stripplot: data points of two interest groups\")\nsns.boxplot(y=main_grp['suicides\/100k pop'], x=main_grp['year'], color=\"white\")\nsns.stripplot(x=\"year\", y=\"suicides\/100k pop\", hue=\"label\", data=stripplot_df,\n                   size=5,jitter=True, edgecolor=\"black\", linewidth=0.5)","c7e55d3a":"# Run a t-test between two groups\n\nfrom scipy.stats import ttest_ind\n\ncat1 = main_grp[main_grp['label']==\"75+ years, high income, Europe\"]\ncat2 = main_grp[main_grp['label']==\"15-24 years, Upper-middle income, Latin America & Caribbean\"]\n\nttest_ind(cat1[\"suicides\/100k pop\"], cat2[\"suicides\/100k pop\"])\n","2a4d7dbe":"> The orange dots are distinctively separate from the blue dots. Is the difference significant? To answer this question, we should run a statistical test.","b6f5dfdf":"> * The suicide rate of the high income group is consistantly high, whereas other groups fluctuated.\n> * **High income vs. Upper-middle income**: They are right next to each other in terms of the income group, but their suicide rates are very different especially from 2009 to 2015. Interesting.\n> * We need more data points from the Low income group.\n> * For further analysis, I'll focus on **the High and Upper-Middle income groups**.","bd749243":"### Thanks for reading my kernel. As I'm learning a lot from fellow Kagglers' work, I hope mine gave you some insights.","3a1cc9d8":"## By income groups","505aeb37":"## By Age Group\n\nIMPORTANT: For the age group, I'd like to look at **% of total suicide rate** instead of the suicide rate.","c56817cf":"> Great! Now we have a dataframe that contains the income group and region info.","d6bd9c87":"### Datasets used in this kernel:\n* [Suicide rates](https:\/\/www.kaggle.com\/russellyates88\/suicide-rates-overview-1985-to-2016) from 1985 to 2016 (based on year, country, age group)\n* [ISO alpha-3 (three-letter) country codes](https:\/\/www.kaggle.com\/taniaj\/world-bank-country-and-lending-groups)\n* GNI per capita and income group classification from World Bank\n* [Region (e.g., South Asia, Europe) information](https:\/\/www.kaggle.com\/taniaj\/world-bank-country-and-lending-groups) for countries","c88382e3":"> * It is **alarming**! South Korea was ranked below the 50th percentile in 1990, but it has become one of the top countires with the highest suicide rates since late 2000.\n> * A spike in the suicide rate in 1998 coincides with the [1997 Asian finacial crisis](https:\/\/en.wikipedia.org\/wiki\/1997_Asian_financial_crisis), which had long-lasting effects not only on economy but also on numerous families in South Korea.\n> * The suicide deaths of the 75+ years group are twice (or more) as high as those of other age groups. Is the government or other organizations doing something to address this disturbing statistics?","d2971ca0":"## By region","6c252665":"## Prepare the dataset for analysis","a8ba6628":"# Which population is at greatest risk for suicide?","a37680cc":"## Functions","8ec9a590":"> Choropleth maps look cool. However, it is **hard to see small countries** and any changes occuring in them. Remember this caveat when using choropleth maps for data visualization. ","c9d0f0d2":"> p-value is smaller than 0.05, indicating that two groups are significantly different.","d18dfbfc":"Again, let's check if we have enough countries for each category to make any important implications from the analysis","5b1605fb":"> Unfortunately, we don't have the same number of countries examined for each year. Let's limit our analysis to years that surveyed more than 60 countires--**from 1990 to 2015**.","19ffb478":"## A Choropleth map of a single year","83fd121a":"> * **No missing values** for the information I need for analysis. GREAT! \n> * The \"HDI for year\" column won't be used in this kernel.","25041c3a":"# Further questions\n\n* Before this data analysis, I didn't know and never imagined that senior's suicide rate was this high. What is pushing them to this horrible decision? Given that an aging population is one of the recent major demographic trends, there should be some in-depth studies on seniors' psychological health.\n* As stated above, why do women attempt suicide more than men but their suicide death rate is lower than men's?\n* Different people would think about killing themselves for different reasons. Are they different based on their socioeconomic status or their age? If yes, wouldn't we need different suicide prevention strategies for different groups?\n* The data collection is biased; only a few countries in South Asia and Sub-Saharan Africa were surveyed for the suicide rate. The dataset also lacks the data from low-income countries. What do global organizations do to reach out to countries with weak infrastructure for data collection?\n* What are some effective suicide prevention programs? Are they effective universally? Or should they be tailored to a country\/culture?","d522e046":"# Analysis by categories\n\n## By sex","3c04a9b8":"# Visualization of the country-specific suicide rate","3351139c":"> * Latin America and Europe show consistant suicide rate thoroughout the years and we have more than 15 countires per region surveyed. Let's focus on these two groups for further analysis.\n> * Geological region is not the best proxy for the culture (i.e. two countries in the same region could have very different cultures). I wonder if there is a way to group countries based on similar cultures. Could natural language processing help find similiarities in culture?","df69e13d":"> Few countries in the Low income group have been surveyed. Although I won't leave out this group from the following analysis, I will not pay attention to it since we do not have enough data points.","d5b9b590":"## Suicide rate plot","615bc491":"## A Choropleth map with slider","ccfc622a":"### Checking the distribution of data points over time","a9c183a4":"The [World Bank](https:\/\/datahelpdesk.worldbank.org\/knowledgebase\/articles\/906519) puts countries into four categories based on [their GNI per income](https:\/\/data.worldbank.org\/indicator\/NY.GNP.PCAP.CD): low, lower-middle, upper-middle, and high. The threshold for each category is updated every year. Let's bin the countries into four income groups and check their suicide rates.","c644f9c8":"## Visualizing high vs. low risk groups\n\nThe analyses above indicate that 75+ year-old people, high income group countries, and Europe have relatively high suicide rates than other respective categories. On the other hand, 15-24 years, Upper-middle income, and Latin America & Caribbean have low suicide rate compared to other categories. \n\nBased on the EDA, I hypothesize that the suicide rate of **75+ year-old people living in high income European countries** is significantly higher than that of **15-24 years in Upper-middle income countires in Latin America or Caribbean**. \n\nLet's test this hypothesis!","1915dea6":"> Not many countries in South Asia and Sub-Saharan Africa have been surveyed. Take this account when analyzing the data.","b8577d91":"# EDA: Worldwide suicide rate (per 100,000 population)","bc2be884":"> * It appears that the suicide rate goes up as people age. It is odd when you think about [a study on happiness](https:\/\/exploringyourmind.com\/middle-aged-people-happiest\/), which demonstrated that middle-aged people are happiest. Is it possible that committing suicide has nothing to do with being happy\/unhappy?\n> * It is not surprising that 5-14 years group had the lowest suicide rate.","6a412e9b":"> * The global suicide rate has been between 12.5 and 15.5 per 100,000 population. \n> * The rate has been slowly decreasing from early 2000.\n> * From 1992 to 1995, the global suicide rate went up. I wonder whether the early 1990s economic downturn was one of the reasons.\n","ddcd3c6f":"> * US suicide rate (both sexes) was at around the 50th percentile in late 1990, but it has increased to 75th percentile since then.\n> * **Take with a grain of salt**: There are more suicide death in males than in women, but it does NOT necessarily mean that males try to kill themselves more than females. According to [American Foundation for Suicide Prevention](http:\/\/afsp.org\/suicide-statistics\/), female adults attempt suicide 1.5 times more than males. Here is a [BBC article](https:\/\/www.bbc.com\/future\/article\/20190313-why-more-men-kill-themselves-than-women) looking into the discrepancy in suicide rate between males and females.\n> * What drove the decrease in the suicide rate of the seniors in 1990s? Any changes in the policy or social structure? \n> * Except for the 5-14 years group, the suicide rate for every age group is slowly increasing from 2010.","0c5a4de4":"Before looking at the suicide rates of different income groups, we should see whether we have enough data points for each income group.","3e89b8e3":"### Note to myself: New methods\/functions I used\n\n* **merge** (similar to vlookup in Excel; with merge, for-loop becomes unnecessary; more info: https:\/\/www.geeksforgeeks.org\/how-to-do-a-vlookup-in-python-using-pandas\/)\n* **apply** (map() function works on Series only. Use apply() instead; more info:  https:\/\/kanoki.org\/2019\/11\/25\/pandas-apply-map-and-applymap\/)\n* **cut** (use it to bin data into categories; more info: https:\/\/pbpython.com\/pandas-qcut-cut.html)\n* **ttest** \n* **Plots:** \n> * Choropleth map (plotly.express > folium; Plotly.express has a built-in country geometry (with three-letter ISO country codes), whereas folium asks you to upload the country geojson file; more info: https:\/\/plotly.com\/python\/choropleth-maps\/)\n> * stripplot (\"hue=category\" works here as well to color the dots based on the category) \n> * lineplot with groupby (You don't need to create separate dataframes for different categories for the line plot)","41b9c630":"> Now, the country names are consistent bewteen dataframes we are going to use for analysis.","2ad761f1":"### Making country names consistent between dataframes\n* Sometimes, different dataframe use different names for the same contry (USA vs. United States vs. United States of America).\n* This impedes merging different dataframe based on the country name.\n* Solution: Use the ISO alpha-3 country code (e.g., ALB for Albania, CAN for Canada) instead of the country name.","f6802735":"> * Worldwide, males die by suicide ~4x more than females. However, as I mentioned above, suicide deaths are **different** from suicide attempts. In fact, [in US](http:\/\/afsp.org\/suicide-statistics\/), female adults **try** to commit suicide more than males. \n> * Female's suicide rate has stayed more or less constant, whereas male's changed. Why?\n> * What could explain the difference between male and female in suicide deaths and suicide attempts? Is it something aboug their physical differences or psychological differences? Or both?"}}