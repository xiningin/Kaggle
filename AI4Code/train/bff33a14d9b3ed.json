{"cell_type":{"bcdab050":"code","8a607e3e":"code","7356a8ce":"code","607d5166":"code","cfd44d6c":"code","935967e9":"code","10be70d4":"code","e2fbbb5c":"code","fd199651":"code","37505d0e":"code","b09c56c3":"code","8b9c777d":"markdown","60fa8b27":"markdown","f9a55793":"markdown","a0020e79":"markdown","925a90cb":"markdown","2dae868d":"markdown","5d802a5c":"markdown","2cbf30c7":"markdown","b44d6f5a":"markdown","39b3c713":"markdown","39f292c0":"markdown","280ea4e5":"markdown","0941be44":"markdown","02dad363":"markdown"},"source":{"bcdab050":"import numpy as np # \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0430\u043b\u0433\u0435\u0431\u0440\u0430\nimport pandas as pd # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\n#\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435\ntrain.head(10)","8a607e3e":"train.shape #\u043a\u043e\u043b-\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432","7356a8ce":"train.isnull().sum().sort_values(ascending=False).head(20) #","607d5166":"train.nunique().sort_values(ascending=False).head(20) ","cfd44d6c":"t = 'SalePrice'\ntrain.dropna(axis=0, subset=[t],inplace=True)","935967e9":"sp=train['SalePrice']\nalldata = pd.concat([train.iloc[:,:-1], test],axis=0)","10be70d4":"alldata=alldata.drop(columns=['Id'], axis=1)\n","e2fbbb5c":"def Handle(df):\n    numeric = [cname for cname in df.columns if df[cname].dtype in ['int64', 'float64']]\n    categoric = [cname for cname in df.columns if df[cname].dtype == \"object\"]\n    values = {}\n    for a in categoric:\n        values[a] = 'UNKNOWN'\n\n    for a in numeric:\n        values[a] = df[a].median() #\u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0434\u043b\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u0443, \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u0438 \u0434\u0430\n        \n    df.fillna(value=values, inplace=True) #\u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c","fd199651":"Handle(alldata)\nalldata.isnull().sum().sum()","37505d0e":"\ncategorical=[cname for cname in alldata.columns if alldata[cname].dtype == \"object\"]\nalldata=pd.get_dummies(alldata,columns=categorical)\n#\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\ntrain_data = alldata.iloc[:1460, :]\ntest_data = alldata.iloc[1460:, :]\nprint(train_data.shape)\nprint(test_data.shape)","b09c56c3":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import RidgeCV\nimport xgboost as xgb\ntrain_data['SalePrice']=sp\ny = train_data['SalePrice']\nX = train_data.drop(['SalePrice'],axis=1)\nX_train, X_test, y_train, y_test = train_test_split(\n                          X, y, random_state=42, test_size=.33)\n\n\nridge_cv = RidgeCV(alphas = (0.01, 0.05, 0.1, 0.3, 1, 3, 5, 10))\nridge_cv.fit(X_train, y_train)\nridge_cv_preds = ridge_cv.predict(test_data)\n\nmodel_xgb = xgb.XGBRegressor(n_estimators=270, max_depth=5, learning_rate=0.2)\nmodel_xgb.fit(X_train, y_train)\nxgb_preds = model_xgb.predict(test_data)\n\npredictions = (ridge_cv_preds + xgb_preds) \/ 2\nsubmission = {\n    'Id': test.Id.values,\n    'SalePrice': predictions\n}\nsolution = pd.DataFrame(submission)\nsolution.to_csv('submission.csv',index=False)","8b9c777d":"\u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0441 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438","60fa8b27":"# \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \"\u0426\u0435\u043d\u044b \u0434\u043e\u043c\u043e\u0432\"\n\n## \u041f\u043e\u0433\u0434\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","f9a55793":"\u041d\u0430\u043c \u0432\u0440\u044f\u0434-\u043b\u0438 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0441\u0442\u043e\u043b\u0431\u0435\u0446 ID, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043c\u043e\u0436\u0435\u043c \u0434\u0440\u043e\u043f\u043d\u0443\u0442\u044c \u0435\u0433\u043e","a0020e79":"\u0418\u043c\u0435\u0435\u043c \u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u0421 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043e\u0447\u0435\u043d\u044c \u043f\u043b\u043e\u0445\u0438\u043c\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u0445","925a90cb":"## \u0421\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c","2dae868d":"\u0422\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","5d802a5c":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c  \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445, \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043b-\u0432\u0430 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, ","2cbf30c7":"## \u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","b44d6f5a":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0438\u0434\u0436-\u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u0438\u043b\u0438 \u0433\u0440\u0435\u0431\u043d\u0435\u0432\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f - \u044d\u0442\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043f\u043e\u043d\u0438\u0436\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438. \u0415\u0433\u043e \u043a\u0430\u043a \u0440\u0430\u0437 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442 \u0434\u043b\u044f \u0431\u043e\u0440\u044c\u0431\u044b \u0441 \u043f\u0435\u0440\u0435\u0438\u0437\u0431\u044b\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c. \u0418 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c XGBoost, \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u0436\u0438\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u0439,\u0434\u0430\u043b\u0435\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u043d\u043e\u0435. \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0438\u0433\u0440\u0430\u0442\u044c \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","39b3c713":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430, \u043d\u0430\u0434\u043e \u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438, \u0433\u0434\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u043e\u043e\u0431\u0449\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442","39f292c0":"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043d\u0430\u0448\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438","280ea4e5":"\u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430","0941be44":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u043f\u0430\u0440\u0443 \u0432\u0435\u0449\u0435\u0439","02dad363":"\u0422\u0435\u043f\u0435\u0440\u044c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0434\u0432\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0445 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439"}}