{"cell_type":{"2540634f":"code","c6c5e985":"code","94219c05":"code","f5236cdb":"code","71d78f44":"code","010a0d2d":"code","63938c3c":"code","576120b6":"code","1078934a":"code","ffd5dc23":"code","460a183d":"code","4908046d":"code","f89c7c4f":"code","832787ad":"code","a5d05bdd":"code","77855b61":"code","eaa6d4ed":"markdown","79230194":"markdown","b4d298d9":"markdown","fb1b1f6e":"markdown","89b0b33b":"markdown"},"source":{"2540634f":"import numpy as np\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c6c5e985":"train_data = pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/train.csv')\ntest_data = pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/test.csv')\nsubmit = pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/submission.csv')","94219c05":"x_tr = train_data \nx_tr = x_tr.drop(columns=['Province_State','ConfirmedCases','Fatalities'])","f5236cdb":"x_tr.info()","71d78f44":"x_tr.Date = pd.to_datetime(x_tr.Date)\nx_tr.Date = x_tr.Date.astype(int)\nx_tr.head()","010a0d2d":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nx_tr.Country_Region = le.fit_transform(x_tr.Country_Region)\nx_tr.head(200)","63938c3c":"y_target = train_data.ConfirmedCases\ny_target.head()","576120b6":"test_features = test_data.drop(columns=['Province_State'])\ntest_features.Date = pd.to_datetime(test_features.Date)\ntest_features.Date = test_features.Date.astype(int)\ntest_features.Country_Region = le.fit_transform(test_features.Country_Region)\ntest_features.info()\ntest_features.head(200)","1078934a":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=100,random_state=10)\nrf.fit(x_tr,y_target)","ffd5dc23":"predict = rf.predict(test_features)\n\npredict","460a183d":"y_target_fat = train_data.Fatalities\ny_target_fat.head()","4908046d":"rf.fit(x_tr,y_target_fat)","f89c7c4f":"predict_fat = rf.predict(test_features)\n\npredict_fat","832787ad":"predict_fat[0:100]","a5d05bdd":"submit.ForecastId = test_data.ForecastId\nsubmit.ConfirmedCases = predict\nsubmit.Fatalities = predict_fat\n\nsubmit.head(25)","77855b61":"submit.to_csv('submission.csv',index=False)","eaa6d4ed":"## convert the Country_Region and Date Column's Data type ","79230194":"## Importing Library","b4d298d9":"We have separated the features and target data, now we will use Random Forest to predict the values.","fb1b1f6e":"## Importing dataset","89b0b33b":"We have used Label Encoder to cnvert the categorical variable Country to int "}}