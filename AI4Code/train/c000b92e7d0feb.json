{"cell_type":{"d8d113a3":"code","7052c16d":"code","f0d74f42":"code","ef6b0dea":"code","1ba0af6a":"code","832a67a2":"code","e5e5e667":"code","3a4b4af9":"code","31f73d02":"code","3ce5795c":"code","eb797a70":"markdown","145017b3":"markdown"},"source":{"d8d113a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7052c16d":"class color:\n   PURPLE = '\\033[95m'\n   CYAN = '\\033[96m'\n   DARKCYAN = '\\033[36m'\n   BLUE = '\\033[94m'\n   GREEN = '\\033[92m'\n   YELLOW = '\\033[93m'\n   RED = '\\033[91m'\n   BOLD = '\\033[1m'\n   UNDERLINE = '\\033[4m'\n   END = '\\033[0m'\n\nprint(color.CYAN + 'Colored Text' + color.END)","f0d74f42":"df = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")\ndf.head()","ef6b0dea":"print(color.BOLD+\"Value counts of Categorical Predictor Variables: \\n\"+color.END)\nprint(color.CYAN+\"\\nSex:\\n{}\".format(df['sex'].value_counts())+color.END)\nprint(color.RED+\"\\nChest Pain Type:\\n{}\".format(df['cp'].value_counts())+color.END)\nprint(color.CYAN+\"\\nFasting Blood Sugar Type (>120 mg\/dl):\\n{}\".format(df['fbs'].value_counts())+color.END)\nprint(color.RED+\"\\nRest ECG results:\\n{}\".format(df['restecg'].value_counts())+color.END)\nprint(color.CYAN+\"\\nExercise induced Angina:\\n{}\".format(df['exang'].value_counts())+color.END)\nprint(color.RED+\"\\nST exercise induced slope:\\n{}\".format(df['slope'].value_counts())+color.END)\nprint(color.CYAN+\"\\nNumber of major vessels colored by flouroscopy:\\n{}\".format(df['ca'].value_counts())+color.END)\nprint(color.RED+\"\\nType of defect:\\n{}\".format(df['thal'].value_counts())+color.END)","1ba0af6a":"print(color.BOLD+\"Value counts of Categorical Target Variable: \\n\"+color.END)\nprint(color.YELLOW+\"\\nNormal\/Abnormal wrt Heart Disease:\\n{}\".format(df['target'].value_counts())+color.END)","832a67a2":"df.info()","e5e5e667":"df.describe()","3a4b4af9":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_theme(style = 'darkgrid')\n\nfig, axis = plt.subplots(4,2, figsize=(15,20)) # figsize=(width, height) of each of the subplot\n\nsns.countplot(data = df, x = 'sex', ax=axis[0][0])\naxis[0][0].set(xlabel='Sex')\n\nsns.countplot(data = df, x = 'cp', ax=axis[0][1])\naxis[0][1].set(xlabel='Chest Pain Type')\n\nsns.countplot(data = df, x = 'fbs', ax=axis[1][0])\naxis[1][0].set(xlabel='Fasting Blood Sugar')\n\nsns.countplot(data = df, x = 'restecg', ax=axis[1][1])\naxis[1][1].set(xlabel='Resting ECG Results')\n\nsns.countplot(data = df, x = 'exang', ax=axis[2][0])\naxis[2][0].set(xlabel='Exercise induced Angina')\n\nsns.countplot(data = df, x = 'slope', ax=axis[2][1])\naxis[2][1].set(xlabel='Peak exercise ST slope')\n\nsns.countplot(data = df, x = 'ca', ax=axis[3][0])\naxis[3][0].set(xlabel='Number of major vessels colored by flouroscopy')\n\nsns.countplot(data = df, x = 'thal', ax=axis[3][1])\naxis[3][1].set(xlabel='Type of Heart Defect')\n\nfig.suptitle(\"Frequency of Categories accross different Predcitor Variables\", size=24)\nfig.tight_layout(pad=3.0)","31f73d02":"fig, axis = plt.subplots(2,2, figsize=(15,20))\n\nsns.histplot(df.age, color='green', label='Age', kde=True, ax=axis[0][0])\naxis[0][0].set(xlabel='Age')\naxis[0][0].legend()\n\nsns.histplot(df.trestbps, color='#0066cc', label='Resting BP', kde=True, ax=axis[0][1])\naxis[0][1].set(xlabel=\"Resting BP\")\naxis[0][1].legend()\n\nsns.histplot(df.chol, color='#e6b800', label='Serum Cholestrol level', kde=True, ax= axis[1][0])\naxis[1][0].set(xlabel='Serum Cholestrol Level')\naxis[1][0].legend()\n\nsns.histplot(df.thalach, color='red', label='Max HR achieved', kde=True, ax=axis[1][1])\naxis[1][1].set(xlabel='Max Heart Rate')               \naxis[1][1].legend()\n\nfig.suptitle(\"Distribution of Continuous Predictor Variables\", size=24)\nfig.tight_layout(pad=3.0)","3ce5795c":"# pair plot - all possible scatter plots\nfig = plt.figure(figsize=(10,10))\nsns.pairplot(df)\nplt.show()","eb797a70":"## Data Description\n<br>\n\n<h3>Predictor Variables:<\/h3>\n1. <b>age<\/b>\n<br>2. <b>sex<\/b>: (0,1)\n<br>3. <b>cp<\/b>: chest pain type (0,1,2,3)\n<br>4. <b>trestbps<\/b>: resting blood pressure\n<br>5. <b>chol<\/b>: serum cholestrol level in mg\/dl\n<br>6. <b>fbs<\/b>: fasting blood sugar (0, 1 at >120 mg\/dl)\n<br>7. <b>restecg<\/b>: resting ecg results (0,1,2)\n<br>8. <b>thalach<\/b>: maximum heart rate achieved\n<br>9. <b>exang<\/b>: exercise induced angina (chest pain due to insufficient blood flow to the heart muscle)\n<br>10. <b>oldpeak<\/b>: ST depression observed in ECG induced by exercise relative to rest\n<br>11. <b>slope<\/b>: slope of the ST segment during peak exercise\n<br>12. <b>ca<\/b>: number of major vessels colored by flouroscopy (0,1,2,3,4)\n<br>13. <b>thal<\/b>: normal, fixed defect, reversable defect (0,1,2,3)\n\n\n<br>\n<h3>Target Variable:<\/h3>\n<b>target<\/b>: abnormal\/normal wrt heart disease (1\/0)\n\n<br><br>","145017b3":"# To be continued..."}}