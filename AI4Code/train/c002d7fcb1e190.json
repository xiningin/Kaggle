{"cell_type":{"53029cb7":"code","22b91d08":"code","feffa293":"code","dad96a87":"code","0166dd5c":"code","252aceac":"code","2b4beddb":"code","639005c9":"code","de1906a4":"code","b3a6ba01":"code","ec55584a":"code","c5233642":"code","02f8bc7e":"markdown","731b7930":"markdown","e24851bc":"markdown","d6d95cd7":"markdown"},"source":{"53029cb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","22b91d08":"import tensorflow as tf\nimport keras_preprocessing\nfrom keras_preprocessing import image\nfrom keras_preprocessing.image import ImageDataGenerator\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom keras.callbacks import EarlyStopping\nimport numpy as np\nfrom tensorflow.python.keras.utils.data_utils import Sequence\nfrom urllib.request import urlopen\nfrom PIL import Image\nfrom numpy import asarray\n\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.filterwarnings('ignore')","feffa293":"train_path = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/train\"\ntest_path = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/validation\"\n\ntrain_horses = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/train\/horses\"\ntest_horses = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/validation\/horses\"\n\ntrain_humans = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/train\/humans\"\ntest_humans = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/validation\/humans\"\n\ntrain_data_dir = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/train\" \nvalidation_data_dir = \"\/kaggle\/input\/horses-or-humans-dataset\/horse-or-human\/validation\"","dad96a87":"# Constants\nCLASS_NAMES = ['Horse','Human']\nIMG_SIZE = 28","0166dd5c":"train_datagen = ImageDataGenerator(  \n    rescale = 1.\/255,\n    rotation_range=40,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    fill_mode='nearest'\n    )\n\ntest_datagen = ImageDataGenerator(rescale=1. \/ 255)\n\ntrain_generator = train_datagen.flow_from_directory(  \n    train_data_dir,\n    target_size=(IMG_SIZE, IMG_SIZE),\n    class_mode='categorical')\n\nvalidation_generator = test_datagen.flow_from_directory(  \n    validation_data_dir,\n    target_size=(IMG_SIZE, IMG_SIZE),\n    class_mode='categorical')","252aceac":"model = keras.Sequential(\n    [\n        keras.Input(shape=(48,48,3)),\n        layers.Flatten(),\n        layers.BatchNormalization(),\n        layers.Dropout(0.2),\n        layers.Dense(128,activation = 'relu'),\n        layers.BatchNormalization(),\n        layers.Dropout(0.2),\n        layers.Dense(256,activation = 'relu'),\n        layers.Dropout(0.2),\n        layers.Dense(512,activation = 'relu'),\n        layers.Dropout(0.2),\n        layers.Dense(2,activation='softmax')\n    ]\n)\n\nmodel.build((IMG_SIZE,IMG_SIZE))\nmodel.summary()","2b4beddb":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\n\nhistory = model.fit(train_generator,\n                    epochs=40,\n                    verbose=1, \n                    #shuffle=True,\n                    validation_data=test_generator,\n                   )","639005c9":"early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=20)\n\nclassifier_history = model.fit( training_generator,\n                                epochs=40, \n                                batch_size=100, \n                                verbose=1,\n                                shuffle=True,\n                                validation_data=test_generator\n                                )","de1906a4":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.ylim([0, 1.1])\nplt.show()\n\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","b3a6ba01":"model_eval = model.evaluate_generator ( test_generator,verbose=0)\n\nprint('Model accuracy:',model_eval[1])\nprint('Model loss:',model_eval[0])","ec55584a":"img_human = Image.open(urlopen('https:\/\/hips.hearstapps.com\/hmg-prod.s3.amazonaws.com\/images\/regaine-for-men-minoxidil-1584286450.jpg'))\nimg_human = img_human.convert('RGB')\nimg_human = img_human.resize((48,48))\nimg_human_arr = asarray(img_human) \/ 255\nprediction = model.predict(np.array([img_human_arr]))\n\nprint(prediction)\n\ny_class_human = pred.argmax(axis=-1)\nprint(\"Prediction:\",CLASS_NAMES[y_class_human[0]])","c5233642":"img_horse = Image.open(urlopen('https:\/\/www.thesprucepets.com\/thmb\/KYaXBSM013GnZ2jEZJnX4a9oIsU=\/3865x2174\/smart\/filters:no_upscale()\/horse-galloping-in-grass-688899769-587673275f9b584db3a44cdf.jpg'))\nimg_horse = img_horse.convert('RGB')\nimg_horse = img_horse.resize((48,48))\nimg_horse_arr = asarray(img_horse) \/ 255\nprediction = model.predict(np.array([img_horse_arr]))\n\nprint(prediction)\n\ny_class_horse = pred_horse.argmax(axis=-1)\nprint(\"Prediction:\",CLASS_NAMES[y_class_horse[0]])","02f8bc7e":"# Image Augmentation (ImageDataGenerator Keras)","731b7930":"# Imports","e24851bc":"# Perceptron Model","d6d95cd7":"# Load data\n"}}