{"cell_type":{"4b553c4a":"code","90a43954":"code","2c80756e":"code","c8165b79":"code","b1d8ac3f":"code","3ce4b4f6":"code","a36bd430":"code","60a1884e":"code","5eba5f3d":"code","daf77714":"code","3bf944f1":"code","1d0506ad":"code","a11a115c":"code","9b556db2":"code","ea4b834b":"code","782779a6":"code","603a4e81":"code","67cae13a":"code","a2a74b75":"code","34495f79":"code","3b5b7c84":"code","4f916f3f":"code","80184c5e":"code","e419025e":"code","efafa45d":"code","9ad0390c":"code","ec4cd553":"code","68d9e31b":"code","44a86048":"markdown","898e883c":"markdown","1f48f8fa":"markdown","efda7d98":"markdown","5177d461":"markdown"},"source":{"4b553c4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90a43954":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set_style('whitegrid')\n\nimport missingno as msno\nimport pandas_profiling\n\nimport gc\nimport datetime\n\n%matplotlib inline\ncolor = sns.color_palette()","2c80756e":"df = pd.read_csv('..\/input\/ecommerce-data\/data.csv', encoding = 'ISO-8859-1')\ndf.head()","c8165b79":"df.info()","b1d8ac3f":"# check missing values for each column \ndf.isnull().sum().sort_values(ascending=False)","3ce4b4f6":"#% of missing values for each feature\nmissing_percentage = df.isnull().sum() \/ df.shape[0] * 100\nmissing_percentage","a36bd430":"# change the format of data- String to Timestamp format\ndf.InvoiceDate = pd.to_datetime(df.InvoiceDate, format='%m\/%d\/%Y %H:%M')\ndf.info()\n\n\n","60a1884e":"# data frame without missing values\ndf_new = df.dropna()\ndf_new.info()","5eba5f3d":"df_new.isnull().sum().sort_values(ascending=False)","daf77714":"df_new.describe().round(2)","3bf944f1":"df_new['Country'].value_counts()","1d0506ad":"len(df_new['Country'].unique().tolist())","a11a115c":"#Remove Quantity with negative values\ndf_new = df_new[df_new.Quantity > 0]\ndf_new.describe().round(2)","9b556db2":"#orders made by the customers\norders=df_new.groupby(by=['CustomerID','Country'], sort=['InvoiceNo'], as_index=False)['InvoiceNo'].count()\norders.sort_values('InvoiceNo', ascending=False)","ea4b834b":"orders = df_new.groupby(by=['CustomerID','Country'], as_index=False)['InvoiceNo'].count()\n\nplt.subplots(figsize=(20,6))\nplt.plot(orders.CustomerID, orders.InvoiceNo,color ='steelblue')\nplt.grid(True)\nplt.xlabel('Customers ID', fontsize=15, fontname=\"Times New Roman\")\nplt.ylabel('Number of Orders',fontsize=15, fontname=\"Times New Roman\")\nplt.title('Number of Orders from different Customers', fontsize=25, color ='steelblue', fontname=\"Times New Roman\",fontweight=\"bold\")\nplt.show()","782779a6":"#money spent by different customers\ndf_new['MoneySpent'] = df_new['Quantity'] * df_new['UnitPrice']\nmoney_spent = df_new.groupby(by=['CustomerID','Country'], as_index=False)['MoneySpent'].sum()\nmoney_spent.sort_values(by='MoneySpent', ascending=False)\n","603a4e81":"df_new.info()","67cae13a":"money_spent = df_new.groupby(by=['CustomerID','Country'], as_index=False)['MoneySpent'].sum()\n\nplt.subplots(figsize=(20,6))\nplt.plot(money_spent.CustomerID, money_spent.MoneySpent,color ='steelblue')\nplt.grid(True)\nplt.xlabel('Customers ID', fontsize=15, fontname=\"Times New Roman\")\nplt.ylabel('Money spent ($)',fontsize=15, fontname=\"Times New Roman\")\nplt.title('Money Spent from different Customers', fontsize=25, color ='steelblue', fontname=\"Times New Roman\",fontweight=\"bold\")\nplt.show()","a2a74b75":"#money spent by customers from each country\nmoney_spent_country = df_new.groupby(by=['Country'], as_index=False)['MoneySpent'].sum()\nmoney_spent_country.sort_values(by='MoneySpent', ascending=False)\n","34495f79":"money_spent_country = money_spent.groupby(by=['Country'], as_index=False)['MoneySpent'].sum().sort_values(by='MoneySpent', ascending=False)\nplt.subplots(figsize=(20,6))\nsns.barplot(money_spent_country.Country, money_spent_country.MoneySpent,palette=\"Blues_r\")\nplt.grid(True)\nplt.xlabel('Country', fontsize=15, fontname=\"Times New Roman\")\nplt.ylabel('Money spent ($)',fontsize=15, fontname=\"Times New Roman\")\nplt.title('Money Spent by customers from each country', fontsize=25, color ='steelblue', fontname=\"Times New Roman\",fontweight=\"bold\")\nplt.xticks(rotation=80)\nplt.yscale(\"log\")\nplt.show()","3b5b7c84":"#amount of transactions by each country\ntransaction_country = df_new.groupby(by=['Country'], as_index=False)['InvoiceNo'].count()\ntransaction_country.sort_values(by='InvoiceNo', ascending=False)\n","4f916f3f":"transaction_country = df_new.groupby(by=['Country'], as_index=False)['InvoiceNo'].count().sort_values(by='InvoiceNo', ascending=False)\nplt.subplots(figsize=(20,6))\nsns.barplot(transaction_country.Country, transaction_country.InvoiceNo,palette=\"Blues_r\")\nplt.grid(True)\nplt.xlabel('Country', fontsize=15, fontname=\"Times New Roman\")\nplt.ylabel('Transactions',fontsize=15, fontname=\"Times New Roman\")\nplt.title('Amount of transactions by each country', fontsize=25, color ='steelblue', fontname=\"Times New Roman\",fontweight=\"bold\")\nplt.xticks(rotation=80)\nplt.yscale(\"log\")\nplt.show()","80184c5e":"df_new.info()","e419025e":"df_new.head()","efafa45d":"df_new.InvoiceDate.describe()","9ad0390c":"df_new[\"Year\"] = df_new.InvoiceDate.dt.year\ndf_new[\"Quarter\"] = df_new.InvoiceDate.dt.quarter\ndf_new[\"Month\"] = df_new.InvoiceDate.dt.month\ndf_new[\"Week\"] = df_new.InvoiceDate.dt.week\ndf_new[\"Weekday\"] = df_new.InvoiceDate.dt.weekday\ndf_new[\"Day\"] = df_new.InvoiceDate.dt.day\ndf_new[\"Dayofyear\"] = df_new.InvoiceDate.dt.dayofyear\ndf_new[\"Date\"] = pd.to_datetime(df_new[['Year', 'Month', 'Day']])\ndf_new.insert(loc = 10 , column='Year_month', value=df_new['InvoiceDate'].map(lambda x: 100*x.year + x.month))\n\ndf_new.head()","ec4cd553":"monthly_sales = df_new.groupby(by=['Year_month'], as_index=False)['MoneySpent'].sum()\nprint(monthly_sales)","68d9e31b":"positions = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)\nyearmonth = [\"Dec-2010\", \"Jan-2011\", \"Feb-2011\", \"Mar-2011\", \"Apr-2011\", \"May-2011\",\n             \"Jun-2011\", \"Jul-1011\", \"Aug-2011\", \"Sep-2011\", \"Oct-2011\", \"Nov-2011\", \n             \"Dec-2011\"]\n\nmonthly_sales = df_new.groupby(by=['Year_month'], as_index=False)['MoneySpent'].sum()\nplt.subplots(figsize=(20,6))\nsns.barplot(monthly_sales.Year_month, monthly_sales.MoneySpent,color=\"steelblue\")\nplt.grid(True)\nplt.xlabel('Date', fontsize=15, fontname=\"Times New Roman\")\nplt.ylabel('Money spent ($)',fontsize=15, fontname=\"Times New Roman\")\nplt.title('Monthly money income', fontsize=25, color ='steelblue', fontname=\"Times New Roman\",fontweight=\"bold\")\nplt.xticks(positions, yearmonth)\n\nplt.show()","44a86048":"# **Making visualizations**","898e883c":"# **Getting information about dataset. Exploring data.**","1f48f8fa":"Sales per day\/month","efda7d98":"# **Importing necessary libraries**","5177d461":"# **Manipulating data.**"}}