{"cell_type":{"040474bc":"code","f35b5861":"code","5f343f04":"code","99b30378":"code","7781085d":"code","4f7c87ea":"code","d2b48510":"code","dbf7ae37":"code","87200b8a":"code","1888d91c":"code","ef9abd46":"code","234891e3":"code","d4156e37":"code","c79a1844":"code","30607658":"code","357ad5a2":"code","03a52d3e":"code","2d0fbbcc":"code","153d4a09":"code","090592cd":"code","263b0aea":"code","4470ca92":"code","40c780a9":"code","d0336a1d":"code","2a737781":"code","362e0ce9":"markdown","d14ea5ea":"markdown"},"source":{"040474bc":"!pip install openpyxl","f35b5861":"import datetime as dt\nimport pandas as pd\npd.set_option('display.max_columns',None)\ndf_=pd.read_excel(\"..\/input\/online-retail-ii\/online_retail_II.xlsx\",sheet_name=\"Year 2010-2011\")\n","5f343f04":"df=df_.copy()\ndf.head()","99b30378":"df.isnull().sum()\ndf.info()","7781085d":"# What is the number of unique products :\ndf[\"Description\"].nunique()","4f7c87ea":"# How many product existed and their quantity :\ndf[\"Description\"].value_counts().head()","d2b48510":"# Which is the most ordered product, show in order?\ndf.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\",ascending=False).head()","dbf7ae37":"# How many invoices have been issued in total?\ndf[\"Invoice\"].nunique()","87200b8a":"# How much money was earn on average per invoice? ,\n# (it is necessary to create a new variable by multiplying two variables)\n# let's create the df again by removing the returned items\n\ndf=df[~df[\"Invoice\"].str.contains(\"C\",na=False)]\ndf.isnull().sum()\ndf[\"TotalPrice\"]=df[\"Price\"]*df[\"Quantity\"]\ndf[\"TotalPrice\"].head()","1888d91c":"\n# What are the most expensive products?\ndf.sort_values(\"Price\",ascending=False).head()","ef9abd46":"# How many orders came from which country :\n\ndf[\"Country\"].value_counts().head()","234891e3":"# Show each countries earnings :\ndf.groupby(\"Country\").agg({\"TotalPrice\": \"sum\"}).sort_values(\"TotalPrice\", ascending=False).head()","d4156e37":"###############################################################\n# Data Preparation\n###############################################################\n\ndf.isnull().sum()\ndf.dropna(inplace=True)\ndf.describe([0.01,0.05,0.1,0.25,0.5,0.75,0.90,0.95,0.99]).T\n","c79a1844":"###############################################\n# Calculating RFM Metrics\n###############################################\n# Recency, Frequency, Monetary\n# Recency: Time from customer's last purchase.\n# In other words, it is \"the time since the last contact of the customer\".\n# So to find the recency =\n# Today's date\u200a-\u200aLast purchase (you can see this process below with #the lambda function )\n#We find the last time to set references.\n# but we add 1 or 2 days more to this date so that those who shop on #that day will not have 0 value. By this way we are obstructing Receny values will become 0.\n# here we can see that the last date is 2010\u201312\u201309 so as I mentioned #we changed it to 2010\u201312\u201311 which is shown as today_date variable\n\ndf[\"InvoiceDate\"].max()\ntoday_date=dt.datetime(2011,12,11)","30607658":"#lets create RFM \nrfm=df.groupby(\"Customer ID\").agg({\"InvoiceDate\":lambda date : (today_date-date.max()).days,                                 \"Invoice\":lambda num: len(num),\n\"TotalPrice\": lambda TotalPrice: TotalPrice.sum()})\n","357ad5a2":"\n#We are going to change column names to #\"Recency\",\"Frequency\",\"Monetary\" \n\nrfm.columns=[\"Recency\",\"Frequency\",\"Monetary\"]\n","03a52d3e":"#We should check is there any anomaly in the transactions.If there #is a Transaction Monetary and Frequencey values should be greater #than 0 . \n#So In summary We have brought Monetary and Frequency values greater #than 0 in order to prevent the \"TotalPrice\" variable being empty #even though there is a purchase.\nrfm=rfm[(rfm[\"Monetary\"])>0&(rfm[\"Frequency\"]>0)]\nrfm","2d0fbbcc":"###############################################################\n# Calculating RFM Scores\n###############################################################\n\n# Recency\nrfm[\"RecencyScore\"] = pd.qcut(rfm[\"Recency\"],5,labels=[5,4,3,2,1])\nrfm[\"FrequencyScore\"] = pd.qcut(rfm[\"Frequency\"],5,labels=[1,2,3,4,5])\nrfm[\"MonetaryScore\"] = pd.qcut(rfm[\"Monetary\"],5,labels=[1,2,3,4,5])\nrfm","153d4a09":"\nrfm[\"RFM_SCORE\"]=(rfm[\"RecencyScore\"].astype(str)+rfm[\"FrequencyScore\"].astype(str)+rfm[\"MonetaryScore\"].astype(str))\n\nrfm[rfm[\"RFM_SCORE\"]==\"555\"].head()","090592cd":"###############################################################\n# Naming & Analysing RFM Segments\n###############################################################\n\n# RFM Naming\nseg_map = {\n    r'[1-2][1-2]': 'Hibernating',\n    r'[1-2][3-4]': 'At_Risk',\n    r'[1-2]5': 'Cant_Loose',\n    r'3[1-2]': 'About_to_Sleep',\n    r'33': 'Need_Attention',\n    r'[3-4][4-5]': 'Loyal_Customers',\n    r'41': 'Promising',\n    r'51': 'New_Customers',\n    r'[4-5][2-3]': 'Potential_Loyalists',\n    r'5[4-5]': 'Champions'\n}\n\nrfm\n\nrfm['Segment'] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str)\n\nrfm['Segment'] = rfm['Segment'].replace(seg_map, regex=True)\ndf[[\"Customer ID\"]].nunique()","263b0aea":"rfm[[\"Segment\",\"Recency\",\"Frequency\",\"Monetary\"]].groupby(\"Segment\").agg({tuple([\"mean\",\"count\"])})","4470ca92":"import matplotlib.pyplot as plt\nsegments_counts = rfm['Segment'].value_counts().sort_values(ascending=True)\nsegments_counts","40c780a9":"fig, ax = plt.subplots()\n\nbars = ax.barh(range(len(segments_counts)),\n             segments_counts,\n             color='silver')\nax.set_frame_on(False)\nax.tick_params(left=False,\n              bottom=False,\n              labelbottom=False)\nax.set_yticks(range(len(segments_counts)))\nax.set_yticklabels(segments_counts.index)\n\nfor i, bar in enumerate(bars):\n       value = bar.get_width()\n       if segments_counts.index[i] in ['Can\\'t loose']:\n           bar.set_color('firebrick')\n       ax.text(value,\n               bar.get_y() + bar.get_height()\/2,\n               '{:,} ({:}%)'.format(int(value),\n                                  int(value*100\/segments_counts.sum())),\n               va='center',\n               ha='left'\n              )\n\nplt.show()","d0336a1d":"#Select the customer IDs of the \"Loyal Customers\" class and get the excel output.\n##########################################\nrfm[rfm[\"Segment\"] == \"Loyal_Customers\"].head()\nrfm[rfm[\"Segment\"] == \"Loyal_Customers\"].index\nnew_df = pd.DataFrame()\nnew_df[\"Loyal_Customers\"] = rfm[rfm[\"Segment\"] == \"Loyal_Customers\"].index\n\nnew_df.to_excel(\"Loyal_Customers.xlsx\")\n\ndf","2a737781":"#Sources\u00a0:\u00a0\n#[1] https:\/\/en.wikipedia.org\/wiki\/RFM_(market_research)\n#[2] https:\/\/futurice.com\/blog\/know-your-customers-with-rfm\n#[3]https:\/\/www.veribilimiokulu.com -Mr Mustafa Vahit Keskin ( Data Scientist ) \n# DSMLBC4 (2021)\u200a-\u200aWEEK 3 CRM Analysis1\u200a-\u200ahttps:\/\/www.miuul.com","362e0ce9":"**Data Set Information:**\nDataset named \u201cOnline Retail II\u201d includes UK based online store between 01\/12\/2009 - 09\/12\/2011 which included the sales.\nSouvenirs included in the product catalog of this company and these can be considered as promotional items\nAlso known that most of that company\u2019s customers are wholesalers.\n\nLink to the Data Set: \nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail+II\n\n**Column\/Variable Information:**\nInvoiceNo: Invoice number. \n    \nUnique to each transaction, If this code starts with C, means the operation is aborted.\n\nStockCode: Product code. Unique number for each product.\n    \nDescription: Product name\nQuantity: Number of products. How many of the products sold on the invoices\n    \nInvoiceDate: Invoice date and time.\n    \nUnitPrice: Product price (in GBP)\n    \nCustomerID: Unique customer number\n    \nCountry: The name of the country where the customer lives.\n\n**Aim**\nidentification of  customers behaviours towards the business problem\nand clustering these groups according to the behaviors\n\n**Clue:**\n\nThose who shows common behaviors will be in the same group. Then feedbacks will be given specifically on the development of techniques for sales and marketing to these groups.\n","d14ea5ea":"##########################################\n# PROJECT: Customer Segmentation with RFM\n##########################################\n# An e-commerce company wants to segment its customers and determine marketing strategies according to these segments.\n# Apply RFM analysis to sheet named \"Year 2010-2011\" of online_retail_II.xlsx data set.\n\n# Where is the dataset? Download the \"online_retail_II.xlsx\" file at the address below.\n# https:\/\/www.kaggle.com\/nathaniel\/uci-online-retail-ii-data-set AND\n\n# To understand explanation of the codes :\n# https:\/\/medium.com\/@ulasturker\/crm-analysis-with-the-rfm-segmentation-and-python-837e1607816f\n\n# To Download the code file from the github : #https:\/\/github.com\/ulasturker\/DATA_SCIENCE\/blob\/main\/W3.1-#CRM%20Analysis%201%20with%20RFM%20and%20Python\/W.31_CRM_ANALYSIS1_RFM_PYTHON.py\n\n###########################################\n# TASK 1: Simulate Exploratary Data Analysis \/ Data Understanding\n##########################################"}}