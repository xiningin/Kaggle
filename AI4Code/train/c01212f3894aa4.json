{"cell_type":{"f9c15c4a":"code","c3e3a0ee":"code","8a4af70a":"code","63302723":"code","d77649e2":"code","fa514dcc":"code","df15788e":"code","ba0ed516":"code","600cfaff":"code","2aef3f9f":"code","723fe66d":"code","557a3ac5":"code","f908b203":"code","5e432b13":"code","56de2721":"code","582df1c8":"code","bbe7e65d":"code","1aa6f2c3":"code","0e744fc6":"code","07404c38":"code","f31eb764":"code","97ae517a":"code","80179107":"code","481ba47b":"code","60f3da3d":"code","7e879d67":"code","d7aab53b":"code","bdd3fd90":"code","ba65d224":"code","59594540":"code","7af648be":"code","5178fcb5":"code","78495848":"code","769dc2e9":"code","b644b062":"code","781fa480":"code","1b696920":"code","a1755dc2":"code","660b1bcf":"code","799dad67":"code","36d4a9ab":"code","6d8e86ae":"code","8edc06b1":"code","81ac2372":"code","948ae13b":"code","0bd920d0":"code","5040778b":"code","ca809702":"code","02e8a5e6":"code","114f55a1":"code","3ca44d03":"code","d577e21d":"code","167b3e2a":"code","e1f62cfc":"code","f42b9d3f":"code","a6d34f27":"code","7fda9117":"markdown","de35ac29":"markdown","16ba841e":"markdown","5a857364":"markdown","c00ecba8":"markdown","3992648f":"markdown","349ec3d5":"markdown","60ad1a02":"markdown","6511ffe4":"markdown","2fd22ca0":"markdown","0439c142":"markdown","9811bfd7":"markdown","d87e663c":"markdown","b16557da":"markdown","0f71558a":"markdown","d0bafb59":"markdown","44910427":"markdown","c3741156":"markdown","d611a9e8":"markdown","9c3535c1":"markdown","92330d73":"markdown","6cf29433":"markdown","115be45b":"markdown","6501d7d9":"markdown","a28642e2":"markdown","5e8f67cd":"markdown","eaca612b":"markdown","d19c83c8":"markdown","ef402745":"markdown","0a591394":"markdown","88c67b77":"markdown","6871dfc6":"markdown","edc3f4ce":"markdown","6d05997e":"markdown","e08bca92":"markdown","e9d1f99a":"markdown","b3c1ed59":"markdown","bcaa338b":"markdown","b9ede7cc":"markdown","b62ea46d":"markdown","1ed63274":"markdown","e9f4b5b7":"markdown","49ce042e":"markdown","f79449a7":"markdown","c33abb42":"markdown","3022919d":"markdown","05a0bf73":"markdown","667931cc":"markdown","377c0be4":"markdown","aaa65a36":"markdown"},"source":{"f9c15c4a":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas_profiling\n%matplotlib inline\nsns.set(style=\"white\", color_codes=True)\n\nfrom subprocess import check_output\nfrom matplotlib.pyplot import pie, axis, show\n\nimport warnings\nwarnings.filterwarnings('ignore')","c3e3a0ee":"movies = pd.read_csv('https:\/\/raw.githubusercontent.com\/insaid2018\/Term-1\/master\/Data\/Projects\/1000%20movies%20data.csv')\nmovies.head()","8a4af70a":"movies.describe()","63302723":"movies.columns.unique()","d77649e2":"movies.shape","fa514dcc":"movies.info()","df15788e":"movies.isnull().sum()","ba0ed516":"profile = pandas_profiling.ProfileReport(movies)\nprofile.to_file(output_file=\"movies_preprofiling.html\")","600cfaff":"movies.set_index('Title', inplace=True)\nmovies.head()","2aef3f9f":"movies.rename(columns={'Runtime (Minutes)': 'Runtime', 'Revenue (Millions)': 'Revenue'}, inplace=True)\nmovies.head()","723fe66d":"movies.columns","557a3ac5":"movies['Revenue_(Millions)'] = movies['Revenue_(Millions)'].fillna(movies['Revenue_(Millions)'].median())\nmovies['Revenue_(Millions)'].isnull().sum()","f908b203":"movies.dropna(subset=['Metascore'], inplace=True)","5e432b13":"total = movies.isnull().sum().sort_values(ascending=False)\npercent = (movies.isnull().sum()\/movies.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total','Percent'])\nmissing_data.head()","56de2721":"movies.shape","582df1c8":"profile = pandas_profiling.ProfileReport(movies)\nprofile.to_file(output_file=\"movies_postprofiling.html\")","bbe7e65d":"corr = movies.corr()\nplt.figure(figsize=(8,8))\nsns.heatmap(corr, vmax=.8, linewidth=.01, square=True, annot=True)\nplt.title('Coorelation b\/w diff. features')","1aa6f2c3":"movies.Year.value_counts().sort_values()","0e744fc6":"sns.countplot(x='Year', data=movies)","07404c38":"sns.boxplot('Year', 'Runtime_(Minutes)', data = movies)","f31eb764":"movies[movies['Year']==2006]['Runtime_(Minutes)'].mean()","97ae517a":"movies[movies['Year']==2016]['Runtime_(Minutes)'].mean()","80179107":"movies.plot.hexbin(x='Year', y='Metascore', gridsize=14)","481ba47b":"movies.groupby('Year')['Revenue_(Millions)'].sum().sort_index().plot.line()","60f3da3d":"movies.groupby('Year')['Revenue_(Millions)', 'Runtime_(Minutes)', 'Rating'].mean().plot.line()","7e879d67":"top5_director_movies = movies.Director.value_counts().head(5).plot.bar()\ntop5_director_movies","d7aab53b":"Top5_directors_revenue = movies.groupby('Director').agg({'Revenue_(Millions)': 'mean', 'Runtime_(Minutes)': 'mean', 'Metascore': 'mean', 'Rating': 'mean'}).sort_values('Revenue_(Millions)', ascending=False)[:5]\nTop5_directors_revenue","bdd3fd90":"Top5_directors_revenue.plot.line()","ba65d224":"Top5_directors_rating = movies.groupby('Director').agg({'Rating': 'mean'}).sort_values('Rating', ascending=False)[:5]\nTop5_directors_rating.plot.bar()","59594540":"Top5_directors_metascore = movies.groupby('Director').agg({'Metascore': 'mean'}).sort_values('Metascore', ascending=False)[:5]\nTop5_directors_metascore.plot.bar()","7af648be":"sns.regplot(y='Runtime_(Minutes)', x='Metascore', data=movies)","5178fcb5":"movies['Runtime_(Minutes)'].plot.hist()","78495848":"runtime_bin_edges = [66, 100, 111, 123, 191]\nruntime_bin_names = ['Short', 'Medium', 'Long', 'Significantly Long']\nmovies['Runtime_bins'] = pd.cut(movies['Runtime_(Minutes)'], runtime_bin_edges, labels=runtime_bin_names)\nmovies.head()","769dc2e9":"movies.groupby(['Runtime_bins'])['Runtime_bins'].count()","b644b062":"as_fig = sns.FacetGrid(movies,hue='Runtime_bins',aspect=2)\n\nas_fig.map(sns.kdeplot,'Runtime_(Minutes)',shade=True)\n\noldest = movies['Runtime_(Minutes)'].max()\n\nas_fig.set(xlim=(0,oldest))\n\nas_fig.add_legend()\n\nplt.title('Runtime distribution using FacetGrid')","781fa480":"movies.groupby('Runtime_bins').agg({'Revenue_(Millions)': 'mean', 'Rating': 'mean', 'Metascore': 'mean'}).sort_values('Runtime_bins', ascending=True).plot.line()","1b696920":"movies.Genre.nunique()","a1755dc2":"top5_genre = movies.Genre.value_counts().head(10)\ntop5_genre.plot.bar()","660b1bcf":"top5_genre = movies.groupby('Genre')['Revenue_(Millions)'].mean().sort_values(ascending=False)[:10]\ntop5_genre.plot.barh()","799dad67":"movies['Genre_count'] = movies.Genre.str.split(',').str.len()\nmovies.head()","36d4a9ab":"movies.groupby(['Genre_count'])['Genre_count'].count()","6d8e86ae":"sns.violinplot('Genre_count', 'Revenue_(Millions)', kind='point', data=movies)\nplt.title('Factorplot for Genre vs Revenue')","8edc06b1":"rating_bin_edges = [2, 6.2, 6.8, 7.4, 9]\nrating_bin_names = ['Poor', 'Okay', 'Good', 'Very Good']\nmovies['Rating_bins'] = pd.cut(movies['Rating'], rating_bin_edges, labels=rating_bin_names)\nmovies.head()","81ac2372":"fig, ax = plt.subplots(figsize=(7,5))\nsns.countplot('Rating_bins', data=movies, hue='Genre_count')\nplt.title('Rating vs Genre')","948ae13b":"sns.set(style=\"whitegrid\", palette=\"muted\")\npd.melt(movies, \"Rating_bins\")\nsns.swarmplot(x=\"Rating_bins\", y=\"Revenue_(Millions)\", palette='gnuplot', data=movies)","0bd920d0":"sns.boxplot(x= 'Year', y='Rating_bins', data = movies)","5040778b":"as_fig = sns.FacetGrid(movies,hue='Rating_bins',aspect=2)\n\nas_fig.map(sns.kdeplot,'Runtime_(Minutes)',shade=True)\n\noldest = movies['Runtime_(Minutes)'].max()\n\nas_fig.set(xlim=(0,oldest))\n\nas_fig.add_legend()\n\nplt.title('Rating distribution using FacetGrid')","ca809702":"movies.Metascore.plot.hist()","02e8a5e6":"movies['Metascore'].plot(kind='box')","114f55a1":"revenue_bin_edges = [0, 13.27, 47.98, 113.75, 936.63]\nrevenue_bin_names = ['Poor', 'Marginal', 'Fair', 'High']\nmovies['Revenue_bins'] = pd.cut(movies['Revenue_(Millions)'], revenue_bin_edges, labels=revenue_bin_names)\nmovies.head(2)","3ca44d03":"sns.factorplot('Genre_count', 'Metascore', data=movies, hue='Revenue_bins')","d577e21d":"sns.set(color_codes=True)\nsns.set_palette(sns.color_palette('muted'))\n\nsns.distplot(movies['Metascore'].dropna())","167b3e2a":"movies_new = movies.copy(deep=True)","e1f62cfc":"from sklearn.preprocessing import LabelEncoder\nnumber = LabelEncoder()\nfor i in movies_new.columns:\n    movies_new[i] = number.fit_transform(movies_new[i].astype('str'))\nmovies_new.head()","f42b9d3f":"features_correlation = movies_new.corr()\nplt.figure(figsize=(8,8))\nsns.heatmap(features_correlation, vmax=1, square=True, annot=False, cmap='Blues')\nplt.show()","a6d34f27":"sns.pairplot(movies[[\"Votes\",\"Metascore\",\"Genre_count\",\"Rating_bins\"]], vars=[\"Votes\",\"Metascore\",\"Genre_count\"], hue=\"Rating_bins\", dropna=True)\nplt.title('Pair Plot')","7fda9117":"Genres are again classified into 3 groups for ease of doing analysis- 1, 2 and 3","de35ac29":"- There is high correlation b\/w Rating & Metascore (critic's rating)\n- Movies rated higher have earned more revenues\n- People have voted movies with high Runtime more\n- Highre Runtime means better rating as well and earned more Revenues as well\n- Votes are directly proportional to movie rating\n- Votes, Rating, Revenue, Runtime, Metascore have direct correlation with each other though in different proportions","16ba841e":"### Introduction:\nAnalysis of last 10 yrs. (i.e. from 2006-2016) movies data on IMDB and come up with the success factors of any movie and their correlation. \n\n### Data description and loading the dataset:\n\nThe dataset contains 1000 observations of movies data hosted on IMDB.\nIMDB (Internet Movie Database) is an online database of information related to films, television programs, home videos and video games, and internet streams, including cast, production crew and personnel biographies, plot summaries, trivia, and fan reviews and ratings.\nUsers registered on this site are invited to rate any film on a scale of 1 to 10, and the totals are converted into a weighted mean-rating that is displayed beside each title.\nIt also displays the Metascore of each title. Metascore is the rating given by another movie rating company called Metacritic. However, unlike IMDB, they get ratings from registered well known rating agencies and calculates a weighted average of those ratings.\n\n\n**Data Dictionary**\n- Rank - Movie rank order\n- Title - The title of the film\n- Genre - A comma-separated list of genres used to classify the film\n- Description - Brief one-sentence movie summary\n- Director - The name of the film's director\n- Actors - A comma-separated list of the main stars of the film\n- Year - The year that the film released as an integer.\n- Runtime (Minutes) - The duration of the film in minutes.\n- Rating - User rating for the movie 0-10\n- Votes - Number of votes\n- Revenue (Millions) - Movie revenue in millions\n- Metascore - An aggregated average of critic scores. Values are between 0 and 100. Higher scores represent positive reviews.","5a857364":"Same observation as mentioned above holds true for Metascore criteria as well","c00ecba8":"**The End**","3992648f":"200 different types movies were produced in 10 years","349ec3d5":"Longer duration movies performed better from all angles. They earn high revenue, liked by audience and critics also appreciate this.","60ad1a02":"Duration wise breakup of movie labels","6511ffe4":"Movies with Good and V.Good ratings have earned greater revenues","2fd22ca0":"Movies with 3 genres have been rated highest","0439c142":"Doing pandas profiling to find out data insights","9811bfd7":"Rating has been classified into 3 bins- Poor, Okay, Good and V.Good ","d87e663c":"#### Trend and analysis based on METASCORE","b16557da":"### Data Normalization\nSince there are 128 missing values in Revenue column i.e. 12.8% which is right skewed, hence filling the same with median","0f71558a":"Creating a copy of dataframe into memory location","d0bafb59":"#### Trend and analysis based on YEAR","44910427":"### Data Profiling","c3741156":"### Recommendations\n\nBased on the findings from EDA would like to recommend below:\n- Top directors with proven track record should be pitched in while going for any new movie production\n- Movie duration should be maintained >2 hrs. for better results and audience appeal\n- irrespective of hovering around multiple genres, it\u2019s best to stick to combo of selected few one\u2019s having more customer liking\n- User\u2019s ratings\/votes are influenced by critic\u2019s review during any new movie release and therefore feedback shared by them should never be ignored while directing\/producing new movies\n- Focus should be more on quality of movies rather than the count in order to make market credibility and audience confidence","d611a9e8":"Rating wise all the above directors stand head-to-head with each other","9c3535c1":"#### Trend and analysis based on GENRE","92330d73":"From the pairplot, it is observed that:\n- Movies having higher ratings have received large no. of votes\n- Higher Metascore ensures better ratings and higher votes\n- Movies having 3 genres have performed better with good Metascore and larger count of votes as well ","6cf29433":"Most of the movies have average Runtime\/ duration of 113 mins.","115be45b":"#### Trend and analysis based on RUNTIME","6501d7d9":"Count of movies falling under different labels","a28642e2":"Mean Metascore stands at around 60 and follow almost uniform distribution curve","5e8f67cd":"Movies with higher Runtimes\/duration have been rated better by audiences","eaca612b":"### Identifying patterns and performing Analysis\nLet's find out trend and correlation b\/w different variables present in the dataset","d19c83c8":"Higher the duration, better is the Metascore","ef402745":"Metascore and Revenue earning is high for movies with 3 genres. Metascore with 55 score and genre 1 has Poor revenues while with genre 2 & 3 have Metascore of 65","0a591394":"Action, Sci-Fi movies were most liked by audience. Adventure is another critical parameter for any movie success","88c67b77":"Runtime\/duration of movies shrink over a period of time","6871dfc6":"#### Key takeaways from this dataset\n- Basic use of Pandas and Exploratory Data Analysis(EDA) which includes cleaning, combining, reshaping, slicing, dicing, and transforming data for analysis purpose.\n- Plotting graphs using pandas like countplot, factorplot, swarmplot, barplot, violinplot, hexaplot, piechart, kdeplot, distplot, pairplot etc.\n- Using packages like matplotlib and seaborn to develop better insights about the data.\n- Create new features which will help in better prediction on hidden aspects of data. \n- Pandas Profiling to get an overall statistical knowldge of the data like any missing values and irregualities present in the data so as to normalize the data for better analysis. \n- Get to know coorelation b\/w different variables present in the data which might have an impact on overall finding.\n- Drawing final conclusion on the problem at hand.\n\n#### Problem Statement\n1. Introduction\n\n#### Approach Used\n1. Data Loading and description\n2. Data Profiling\n3. Data Normalization\n4. Identifying the patterns and analysis through questions\n    - What is the correlation b\/w different parameters\n    - What is the trend of movies being produced yr. on yr.\n    - How many movies directed by Top 5 directors\n    - What is the average Runtime of movies over the yrs.\n    - What kind of movies are rated higher\n    - Do directors have any role to play in people's choice\n5. Final Conclusion","edc3f4ce":"There is an upward Revenue trend due to higher number of movies getting released","6d05997e":"#### Trend and analysis based on Rating","e08bca92":"Genre with 3 counts have reported highest Revenue","e9d1f99a":"James Cameron and Colin are the highest earning directors producing movies of large duration and critics also appraise them","b3c1ed59":"Critics gave better scores to movies released during recent years ","bcaa338b":"#### Trend and analysis based on DIRECTOR","b9ede7cc":"### Conclusion\n\nBased on the data analysis done using Python as the programming language, below inferences can be summarized:\n- Though the movies production has increased significantly, but the revenue, duration and user\u2019s rating have seen a downfall\n- There is no direct relation b\/w directors producing more number of movies vs their revenue earning\n- User rating and critic\u2019s score stand in equilibrium for top rated directors\n- Though there is similar ratio of movies by duration count, still longer duration movies have much better chances of generating positive ratings\/score and higher revenue\n- 4 genres vis-\u00e0-vis Adventure, Action, Sci-Fi & Drama have been liked by audience more than any other genre\n- A combination of 3 genres (consisting above categories) attract larger people to the cinema halls thereby create more profitable business for producers, actors and directors\n- During 2010 to 2014, quality of movies were far better than any other years\n- Critics have maintained a steady judgement over given timeframe and on an average 60% is their verdict score for most of the movies","b62ea46d":"Maximum number of movies belong to Action, Adventure & Sci-Fi combination followed by Drama","1ed63274":"Segregating the Runtime into 4 labels - short, medium, long, significantly long","e9f4b5b7":"Plotting the Heatmap on overall parameters on their numerical correlation. Findings:\n- There were more number of movies getting produced in later years almost 5 times than that of initial year, 2006\n- Though no. of movies produced have increased but their 'Runtime' has reduced over a period of time significantly\n- Movies have higher 'Metascore' in 2016 as compared to previous years \n- As visible, movies having >75% Metascore have almost similar trend as no. of movies being produced\n- Strange to see that average 'Revenue' has come down drastically in last 10 years. Net Revenue has increased due to more movies getting produced \n- Average vaue of Rating is almost constant over the years","49ce042e":"Dropping the null values from Metascore which is 64, 6.4%","f79449a7":"Ridley Scott produced highest number of movies which is 8","c33abb42":"With year passes by, user ratings have gone down considerably","3022919d":"Mean value of Revenue and Runtime saw a dip in recent times","05a0bf73":"Converting categorical values into nukerical codes below using Labelencoder","667931cc":"More number of movies are produced year-on-year","377c0be4":"Above graph shows Metascore distribution plot","aaa65a36":"Revenue has been classified into 4 sub-categories: Poor, Marginal, Fair & High"}}