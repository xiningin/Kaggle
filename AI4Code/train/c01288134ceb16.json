{"cell_type":{"6ab79a99":"code","abaac2c9":"code","69e2b468":"code","8308644b":"code","e0a9857e":"code","cf6e7d44":"code","87e7d066":"code","17b6e354":"code","8d1b878f":"code","3572ce2c":"code","121fe8e1":"code","8c69cb7d":"code","6158d770":"code","62b6a431":"code","d19a0453":"code","d95deec5":"code","647dc26c":"code","01715b01":"code","597b47da":"code","273a10ec":"code","1cf25bd7":"code","93b5ab1e":"code","e3bed742":"code","50d15e33":"code","354cd70c":"code","9c15b6c0":"markdown","7c33aa63":"markdown","35ff865d":"markdown","4ff36da9":"markdown","f11d0ae5":"markdown","cd66dc2a":"markdown","5f7700fb":"markdown","f557120f":"markdown","9dc598dd":"markdown","7457e6f7":"markdown","f3c4b9e7":"markdown","68b17fc5":"markdown","02c7449d":"markdown","bf1a9027":"markdown","1425be11":"markdown","88236a35":"markdown","946331c5":"markdown","f74ae71d":"markdown","330b430c":"markdown","33e44f65":"markdown","b1b61e0e":"markdown","88254fc5":"markdown","ef61f95c":"markdown","3e8f9d87":"markdown","32696371":"markdown","d8a242d5":"markdown","a7a8d502":"markdown","dc033d5f":"markdown","5ed43b0f":"markdown","918f065c":"markdown","e18c3a5b":"markdown","11bb9d85":"markdown","778d466f":"markdown","df6cb9e3":"markdown","6379dc71":"markdown","425dc60d":"markdown","8904d4ac":"markdown"},"source":{"6ab79a99":"# \u6211\u4eec\u8fd9\u4e2a notebook \u4f7f\u7528\u7684python3\u7684\u73af\u5883\u5b89\u88c5\u4e86\u5f88\u591a\u6709\u7528\u7684\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u5e93\n# \u8fd9\u4e2a\u73af\u5883\u88ab\u5c01\u88c5\u6210docker\u955c\u50cf\"kaggle\/python\"\uff1ahttps:\/\/github.com\/kaggle\/docker-python\n# \u6bd4\u5982\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8f7d\u5165\u51e0\u4e2a\u6709\u7528\u7684\u5e93\n\nimport numpy as np # linear algebra \u7ebf\u6027\u4ee3\u6570\u5e93\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv) \u6570\u636e\u5904\u7406\uff0cCSV \u6587\u4ef6 I\/O\nimport matplotlib.pyplot as plt\n\n# \u6570\u636e\u8f93\u5165\u6587\u4ef6\u5728\"..\/input\/\"\u76ee\u5f55\u4e2d\n# \u6bd4\u5982\u8c03\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u5217\u51fa\u8f93\u5165\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6(\u901a\u8fc7\u70b9\u51fb run \u6309\u94ae \u6216\u8005 \u6309\u4e0b\u5feb\u6377\u952e Shift+Enter)\n# \u8f7d\u5165 warning \u5e93\nimport warnings\n# \u8fc7\u6ee4\u8b66\u544a\nwarnings.filterwarnings('ignore')\nfrom subprocess import check_output\n# \u5982\u679c\u662f kaggle \u73af\u5883\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n# \u5982\u679c\u662f github \u4e0b\u8f7d\u7684\uff0c\u4f60\u9700\u8981\u81ea\u5df1\u4e0b\u8f7d[Sign-language-digits\u6570\u636e\u96c6](https:\/\/www.kaggle.com\/ardamavi\/sign-language-digits-dataset)\n#print(check_output([\"ls\", \"input\"]).decode(\"utf8\"))\n# \u4f60\u5199\u5230 input\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab\u6253\u5370\u5728\u4e0b\u65b9\u3002","abaac2c9":"# \u8bd1\u8005\u6ce8\uff1a\u8f7d\u5165npy\u683c\u5f0f\u7684\u6570\u7ec4\u6587\u4ef6\uff0c\u8fd9\u662fnumpy\u5b58\u50a8\u6570\u7ec4\u7684\u4e00\u79cd\u683c\u5f0f\n# \u5982\u679c\u662f kaggle \u73af\u5883\nx_l = np.load('..\/input\/sign-language-digits-dataset\/X.npy')\nY_l = np.load('..\/input\/sign-language-digits-dataset\/Y.npy')\n# \u5982\u679c\u662f github \u4e0b\u8f7d\u7684\uff0c\n#x_l = np.load('input\/Sign-language-digits-dataset\/X.npy')\n# Y_l = np.load('input\/Sign-language-digits-dataset\/Y.npy')\nimg_size = 64\nplt.subplot(1, 3, 1)\n# \u8bd1\u8005\u6ce8\uff1a\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8x_l\u5e8f\u53f7\uff0c\u770b\u770b\u4e0d\u540c\u624b\u52bf\u7b26\u53f7\n# \u7b26\u53f70\u56fe\u7247\nplt.imshow(x_l[205].reshape(img_size, img_size))\nplt.axis('off')\nplt.subplot(1, 3, 2)\n# \u7b26\u53f71\u56fe\u7247\nplt.imshow(x_l[823].reshape(img_size, img_size))\nplt.axis('off')\nplt.subplot(1, 3, 3)\n# \u8bd1\u8005\u6ce8\uff1a\u7b26\u53f73\u56fe\u7247\uff0c\u4f60\u8fd8\u53ef\u4ee5\u8bd5\u8bd5\u5176\u4ed6\u5e8f\u53f7\nplt.imshow(x_l[1].reshape(img_size, img_size))\nplt.axis('off')","69e2b468":"# Join a sequence of arrays along an row axis.\n# \u628a\u4e00\u4e32\u6570\u7ec4\u7684\u8fde\u63a5\u8d77\u6765\uff0c\u7edf\u4e00\u7f16\u53f7\nX = np.concatenate((x_l[204:409], x_l[822:1027] ), axis=0) # \u4ece 0 \u5230 204 \u662f\u7b26\u53f7\u201d0\u201c \u4ece205\u5230410\u662f\u7b26\u53f7\u201d1\u201c\nz = np.zeros(205)\no = np.ones(205)\nY = np.concatenate((z, o), axis=0).reshape(X.shape[0],1)\n# \u8bd1\u8005\u7b14\u8bb0\uff1a\u8fd9\u91cc\u5c06z\u548co\u8fde\u63a5\u8d77\u6765,\u7136\u540e\u53d8\u6210\u4e00\u4e2a410x1\u7684\u6570\u7ec4\nprint(X.shape)\nprint(Y.shape)\n# \u53bb\u6389\u6ce8\u91ca\u5c31\u53ef\u4ee5\u9605\u8bfb\u5230np.reshape\u7684\u5e2e\u52a9\n# help(np.reshape)","8308644b":"# \u8ba9\u6211\u4eec\u521b\u5efa\u6570\u7ec4 x_train, y_train, x_test, y_test \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.15, random_state=42)\nnumber_of_train = X_train.shape[0]\nnumber_of_test = X_test.shape[0]\nprint(number_of_train)\nprint(number_of_test)","e0a9857e":"X_train_flatten = X_train.reshape(number_of_train,X_train.shape[1]*X_train.shape[2])\nX_test_flatten = X_test .reshape(number_of_test,X_test.shape[1]*X_test.shape[2])\nprint(\"X train flatten\",X_train_flatten.shape)\nprint(\"X test flatten\",X_test_flatten.shape)","cf6e7d44":"x_train = X_train_flatten.T\nx_test = X_test_flatten.T\ny_train = Y_train.T\ny_test = Y_test.T\nprint(\"x train: \",x_train.shape)\nprint(\"x test: \",x_test.shape)\nprint(\"y train: \",y_train.shape)\nprint(\"y test: \",y_test.shape)","87e7d066":"# \u7b80\u5355\u7684\u5b9a\u4e49\u65b9\u6cd5\u793a\u4f8b\n# \u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u5b66\u4f1a python, \u4e0d\u7528\u7ba1\u4ed6\ndef dummy(parameter):\n    dummy_parameter = parameter + 5\n    return dummy_parameter\nresult = dummy(3)     # result = 8\n\n# \u8ba9\u6211\u4eec\u521d\u59cb\u5316\u53c2\u6570\u5427\n# \u6211\u4eec\u9700\u8981\u4e00\u4e2a4096\u7ef4\u7684\u6570\u7ec4\u4f5c\u4e3a\u6211\u4eec\u8fd9\u4e2a\u521d\u59cb\u5316\u6743\u91cd\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u6bcf\u4e00\u7ef4\u5bf9\u5e94\u7740\u4e00\u4e2a\u50cf\u7d20\u3002\n# \u8bd1\u8005\u6ce8\uff1ainitialize_weights_and_bias\u51fd\u6570\u63a5\u53d7dimension\u505a\u4e3a\u53c2\u6570\uff0c\u6bd4\u5982 dimension=4096, \n# \u7136\u540e\u901a\u8fc7 np.full \u521b\u5efa\u4e00\u4e2a4096\u7ef4\u7684\u957f\u5ea6\u4e3a1\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u901a\u901a\u8d4b\u503c\u4e3a0.01\n# \u8bd1\u8005\u6ce8\uff1anp.full \u8fd4\u56de\u4e00\u4e2a\u6839\u636e\u6307\u5b9ashape\u548ctype,\u5e76\u7528fill_value\u586b\u5145\u7684\u65b0\u6570\u7ec4\u3002\ndef initialize_weights_and_bias(dimension):\n    w = np.full((dimension,1),0.01)\n    b = 0.0\n    return w, b\n#help(np.full)","17b6e354":"w,b = initialize_weights_and_bias(4096)\n# \u8bd1\u8005\u6ce8\uff1a\u6211\u4eec\u6765\u770b\u770b\u53c2\u6570\u7684\u5f62\u72b6\u5427\nprint(w.shape)\nprint(b)","8d1b878f":"# \u8ba1\u7b97z\u503c\n#z = np.dot(w.T,x_train)+b\ndef sigmoid(z):\n    y_head = 1\/(1+np.exp(-z))\n    return y_head","3572ce2c":"y_head = sigmoid(0)\ny_head","121fe8e1":"# \u524d\u5411\u4f20\u64ad\u6b65\u9aa4:\n# \u8ba1\u7b97 z = w.T*x+b\n# y_head = sigmoid(z)\n# loss(error) = loss(y,y_head)\n# cost = sum(loss)\ndef forward_propagation(w,b,x_train,y_train):\n    z = np.dot(w.T,x_train) + b\n    y_head = sigmoid(z) # probabilistic 0-1\n    loss = -y_train*np.log(y_head)-(1-y_train)*np.log(1-y_head)\n    cost = (np.sum(loss))\/x_train.shape[1]      # x_train.shape[1]  is for scaling\n    return cost ","8c69cb7d":"# \u5728\u540e\u5e8f\u4f20\u64ad\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u524d\u5411\u4f20\u64ad\u5f97\u5230\u7684 y_head \n# \u56e0\u6b64\uff0c\u6211\u4eec\u628a\u524d\u5411\u4f20\u64ad\u548c\u540e\u5411\u4f20\u64ad\u7ed1\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u518d\u5199\u4e2a\u540e\u5411\u4f20\u64ad\u7684\u51fd\u6570\u3002\ndef forward_backward_propagation(w,b,x_train,y_train):\n    # \u524d\u5411\u4f20\u64ad\n    z = np.dot(w.T,x_train) + b\n    y_head = sigmoid(z)\n    loss = -y_train*np.log(y_head)-(1-y_train)*np.log(1-y_head)\n    cost = (np.sum(loss))\/x_train.shape[1]      # x_train.shape[1]  is for scaling\n    # \u540e\u5411\u4f20\u64ad\n    derivative_weight = (np.dot(x_train,((y_head-y_train).T)))\/x_train.shape[1] # x_train.shape[1]  is for scaling\n    derivative_bias = np.sum(y_head-y_train)\/x_train.shape[1]                 # x_train.shape[1]  is for scaling\n    gradients = {\"derivative_weight\": derivative_weight,\"derivative_bias\": derivative_bias}\n    return cost,gradients","6158d770":"# \u66f4\u65b0\u5b66\u4e60\u53c2\u6570\ndef update(w, b, x_train, y_train, learning_rate,number_of_iterarion):\n    cost_list = []\n    cost_list2 = []\n    index = []\n    # \u66f4\u65b0\u5b66\u4e60\u53c2\u6570\u9700\u8981number_of_iterarion\u6b21\u8fed\u4ee3\n    for i in range(number_of_iterarion):\n        # \u505a\u524d\u5411\u548c\u540e\u5411\u4f20\u64ad\u6765\u5bfb\u627e\u4ee3\u4ef7\u548c\u68af\u5ea6\n        cost,gradients = forward_backward_propagation(w,b,x_train,y_train)\n        cost_list.append(cost)\n        # \u8ba9\u6211\u4eec\u6765\u505a\u66f4\u65b0\n        w = w - learning_rate * gradients[\"derivative_weight\"]\n        b = b - learning_rate * gradients[\"derivative_bias\"]\n        if i % 10 == 0:\n            cost_list2.append(cost)\n            index.append(i)\n            print (\"Cost after iteration %i: %f\" %(i, cost))\n    # \u6211\u4eec\u66f4\u65b0\u4e86\u5b66\u4e60\u53c2\u6570\u6743\u91cd weights \u548c\u504f\u7f6e\u503c bias\n    parameters = {\"weight\": w,\"bias\": b}\n    plt.plot(index,cost_list2)\n    plt.xticks(index,rotation='vertical')\n    plt.xlabel(\"Number of Iterarion\")\n    plt.ylabel(\"Cost\")\n    plt.show()\n    return parameters, gradients, cost_list\n#parameters, gradients, cost_list = update(w, b, x_train, y_train, learning_rate = 0.009,number_of_iterarion = 200)","62b6a431":" # \u9884\u6d4b\ndef predict(w,b,x_test):\n    # x_test \u662f\u524d\u5411\u4f20\u64ad\u7684\u8f93\u5165\n    z = sigmoid(np.dot(w.T,x_test)+b)\n    Y_prediction = np.zeros((1,x_test.shape[1]))\n    # \u5982\u679c z \u5927\u4e8e 0.5, \u6211\u4eec\u7684\u9884\u6d4b\u7ed3\u679c\u662f\u7b26\u53f71 (y_head=1),\n    # \u5982\u679c z \u5c0f\u4e8e 0.5,, \u6211\u4eec\u7684\u9884\u6d4b\u7ed3\u679c\u662f\u7b26\u53f70 (y_head=0),\n    for i in range(z.shape[1]):\n        if z[0,i]<= 0.5:\n            Y_prediction[0,i] = 0\n        else:\n            Y_prediction[0,i] = 1\n\n    return Y_prediction\n# predict(parameters[\"weight\"],parameters[\"bias\"],x_test)","d19a0453":"def logistic_regression(x_train, y_train, x_test, y_test, learning_rate ,  num_iterations):\n    # \u521d\u59cb\u5316\n    dimension =  x_train.shape[0]  # that is 4096\n    w,b = initialize_weights_and_bias(dimension)\n    # \u4e0d\u8981\u53bb\u6539\u53d8\u5b66\u4e60\u7387\n    parameters, gradients, cost_list = update(w, b, x_train, y_train, learning_rate,num_iterations)\n    \n    y_prediction_test = predict(parameters[\"weight\"],parameters[\"bias\"],x_test)\n    y_prediction_train = predict(parameters[\"weight\"],parameters[\"bias\"],x_train)\n\n    # \u6253\u5370\u8bad\u7ec3\u6d4b\u8bd5\u9519\u8bef\n    print(\"train accuracy: {} %\".format(100 - np.mean(np.abs(y_prediction_train - y_train)) * 100))\n    print(\"test accuracy: {} %\".format(100 - np.mean(np.abs(y_prediction_test - y_test)) * 100))\n    \nlogistic_regression(x_train, y_train, x_test, y_test,learning_rate = 0.01, num_iterations = 150)","d95deec5":"from sklearn import linear_model\nlogreg = linear_model.LogisticRegression(random_state = 42,max_iter= 150)\nprint(\"test accuracy: {} \".format(logreg.fit(x_train.T, y_train.T).score(x_test.T, y_test.T)))\nprint(\"train accuracy: {} \".format(logreg.fit(x_train.T, y_train.T).score(x_train.T, y_train.T)))","647dc26c":"# \u521d\u59cb\u5316\u53c2\u6570\u548c\u5c42\u5927\u5c0f\ndef initialize_parameters_and_layer_sizes_NN(x_train, y_train):\n    parameters = {\"weight1\": np.random.randn(3,x_train.shape[0]) * 0.1,\n                  \"bias1\": np.zeros((3,1)),\n                  \"weight2\": np.random.randn(y_train.shape[0],3) * 0.1,\n                  \"bias2\": np.zeros((y_train.shape[0],1))}\n    return parameters","01715b01":"\ndef forward_propagation_NN(x_train, parameters):\n\n    Z1 = np.dot(parameters[\"weight1\"],x_train) +parameters[\"bias1\"]\n    A1 = np.tanh(Z1)\n    Z2 = np.dot(parameters[\"weight2\"],A1) + parameters[\"bias2\"]\n    A2 = sigmoid(Z2)\n\n    cache = {\"Z1\": Z1,\n             \"A1\": A1,\n             \"Z2\": Z2,\n             \"A2\": A2}\n    \n    return A2, cache\n","597b47da":"# \u8ba1\u7b97\u4ee3\u4ef7\ndef compute_cost_NN(A2, Y, parameters):\n    logprobs = np.multiply(np.log(A2),Y)\n    cost = -np.sum(logprobs)\/Y.shape[1]\n    return cost\n","273a10ec":"# \u540e\u5411\u4f20\u64ad\ndef backward_propagation_NN(parameters, cache, X, Y):\n\n    dZ2 = cache[\"A2\"]-Y\n    dW2 = np.dot(dZ2,cache[\"A1\"].T)\/X.shape[1]\n    db2 = np.sum(dZ2,axis =1,keepdims=True)\/X.shape[1]\n    dZ1 = np.dot(parameters[\"weight2\"].T,dZ2)*(1 - np.power(cache[\"A1\"], 2))\n    dW1 = np.dot(dZ1,X.T)\/X.shape[1]\n    db1 = np.sum(dZ1,axis =1,keepdims=True)\/X.shape[1]\n    grads = {\"dweight1\": dW1,\n             \"dbias1\": db1,\n             \"dweight2\": dW2,\n             \"dbias2\": db2}\n    return grads","1cf25bd7":"# \u66f4\u65b0\u53c2\u6570\ndef update_parameters_NN(parameters, grads, learning_rate = 0.01):\n    parameters = {\"weight1\": parameters[\"weight1\"]-learning_rate*grads[\"dweight1\"],\n                  \"bias1\": parameters[\"bias1\"]-learning_rate*grads[\"dbias1\"],\n                  \"weight2\": parameters[\"weight2\"]-learning_rate*grads[\"dweight2\"],\n                  \"bias2\": parameters[\"bias2\"]-learning_rate*grads[\"dbias2\"]}\n    \n    return parameters","93b5ab1e":"# \u9884\u6d4b\ndef predict_NN(parameters,x_test):\n    # x_test \u662f\u524d\u5411\u4f20\u64ad\u7684\u8f93\u5165\n    A2, cache = forward_propagation_NN(x_test,parameters)\n    Y_prediction = np.zeros((1,x_test.shape[1]))\n    # \u5982\u679cz>0.5, \u6211\u4eec\u9884\u6d4b\u7684\u7ed3\u679c\u662f\u7b26\u53f71\n    # \u5982\u679cz<0.5, \u6211\u4eec\u9884\u6d4b\u7684\u7ed3\u679c\u662f\u7b26\u53f70,\n    for i in range(A2.shape[1]):\n        if A2[0,i]<= 0.5:\n            Y_prediction[0,i] = 0\n        else:\n            Y_prediction[0,i] = 1\n\n    return Y_prediction","e3bed742":"# \u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\ndef two_layer_neural_network(x_train, y_train,x_test,y_test, num_iterations):\n    cost_list = []\n    index_list = []\n    #\u521d\u59cb\u5316\u53c2\u6570\u548c\u5c42\u5927\u5c0f\n    parameters = initialize_parameters_and_layer_sizes_NN(x_train, y_train)\n\n    for i in range(0, num_iterations):\n         # \u524d\u5411\u4f20\u64ad\n        A2, cache = forward_propagation_NN(x_train,parameters)\n        # \u8ba1\u7b97\u5f00\u9500\n        cost = compute_cost_NN(A2, y_train, parameters)\n         # \u540e\u5411\u4f20\u64ad\n        grads = backward_propagation_NN(parameters, cache, x_train, y_train)\n         # \u66f4\u65b0\u53c2\u6570\n        parameters = update_parameters_NN(parameters, grads)\n        \n        if i % 100 == 0:\n            cost_list.append(cost)\n            index_list.append(i)\n            print (\"Cost after iteration %i: %f\" %(i, cost))\n    plt.plot(index_list,cost_list)\n    plt.xticks(index_list,rotation='vertical')\n    plt.xlabel(\"Number of Iterarion\")\n    plt.ylabel(\"Cost\")\n    plt.show()\n    \n    # \u9884\u6d4b\n    y_prediction_test = predict_NN(parameters,x_test)\n    y_prediction_train = predict_NN(parameters,x_train)\n\n    # \u6253\u5370\u8bad\u7ec3\u548c\u6d4b\u8bd5\u7684\u7ed3\u679c\n    print(\"train accuracy: {} %\".format(100 - np.mean(np.abs(y_prediction_train - y_train)) * 100))\n    print(\"test accuracy: {} %\".format(100 - np.mean(np.abs(y_prediction_test - y_test)) * 100))\n    return parameters\n\nparameters = two_layer_neural_network(x_train, y_train,x_test,y_test, num_iterations=2500)","50d15e33":"# \u8f6c\u7f6e\nx_train, x_test, y_train, y_test = x_train.T, x_test.T, y_train.T, y_test.T","354cd70c":"# \u8bc4\u4f30ANN\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential # \u8f7d\u5165\u795e\u7ecf\u7f51\u7edc\u5e93\nfrom keras.layers import Dense # \u8f7d\u5165\u6211\u4eec\u5c42\u5e93\ndef build_classifier():\n    classifier = Sequential() # \u8f7d\u5165\u795e\u7ecf\u7f51\u7edc\n    classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu', input_dim = x_train.shape[1]))\n    classifier.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier\nclassifier = KerasClassifier(build_fn = build_classifier, epochs = 100)\naccuracies = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 3)\nmean = accuracies.mean()\nvariance = accuracies.std()\nprint(\"Accuracy mean: \"+ str(mean))\nprint(\"Accuracy variance: \"+ str(variance))","9c15b6c0":"* \u73b0\u5728\u6211\u4eec\u67093\u7ef4\u6570\u7ec4X \u505a\u4e3a\u8f93\u5165\uff0c\u4f46\u662f\u6211\u4eec\u8981\u628a\u964d\u7ef4\u52302\u7ef4\uff0c\u624d\u80fd\u628a\u4ed6\u53d8\u6210\u6211\u4eec\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8f93\u5165\n* \u8bd1\u8005\u6ce8\uff1a\u4e5f\u5c31\u662f\u901a\u8fc7numpy.reshape\u628a64*64\u7684\u4e8c\u7ef4\u6570\u7ec4\u53d8\u62104096\u7684\u4e00\u7ef4\u6570\u7ec4.\n* \u6211\u4eec\u7684\u6807\u7b7e\u6570\u7ec4(Y)\u5df2\u7ecf\u662f2\u7ef4\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u52a8\u5b83\u3002\n* \u8ba9\u6211\u4eec\u628aX\u6570\u7ec4\u53d8\u5e73\u5427(\u56fe\u50cf\u6570\u7ec4).\n","7c33aa63":"<font color='green'>\n\n**Welcome to Deep Learning Tutorial for Beginners**\n\n**\u6b22\u8fce\u8bbf\u95ee\u521d\u5b66\u8005\u7684\u6df1\u5ea6\u5b66\u4e60\u6307\u5357**\n\n** [kaggle \u82f1\u6587\u539f\u7248](https:\/\/www.kaggle.com\/kanncaa1\/deep-learning-tutorial-for-beginners) **\n** \u4f5c\u8005: [DATAI](https:\/\/www.kaggle.com\/kanncaa1) **\n* \u6211\u4f1a\u4e00\u6761\u6761\u628a\u6df1\u5ea6\u5b66\u4e60\u89e3\u91ca\u6e05\u695a\u3002\n* \u6211\u6ca1\u6709\u53bb\u5199\u957f\u800c\u96be\u8bfb\u7684\u7ae0\u8282\uff0c\u76f8\u53cd\u6211\u4f1a\u5b9a\u4e49\u548c\u53cd\u590d\u5f3a\u8c03\u4e00\u6761\u6761\u7684\u5173\u952e\u8bcd\u3002\n* \u5728\u8fd9\u6761\u6307\u5357\u7684\u7ed3\u5c3e\uff0c\u4f60\u4f1a\u5f97\u5230\u5145\u8db3\u7684\u6df1\u5ea6\u5b66\u4e60\u7684\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u8fdb\u4e00\u6b65\u6df1\u5165\u4e86\u89e3\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u770b\u6b63\u6587\u5427\u3002\n\n** \u7ffb\u8bd1: [\u9648\u6c81\u60a6](https:\/\/www.kaggle.com\/qinyuechen) **\n** \u672c\u6587\u662f\u6839\u636e\u539f\u6587\u7ffb\u8bd1\u7684\uff0c\u4ee3\u8868\u7684\u662f\u4f5c\u8005\u89c2\u70b9 **\n** \u8bd1\u8005\u6ce8\u662f\u8bd1\u8005\u81ea\u5df1\u7684\u4e2a\u4eba\u89c2\u70b9\u548c\u4e1a\u4f59\u6d3b\u52a8\uff0c\u4e0d\u4ee3\u8868\u672c\u4eba\u4f9b\u804c\u516c\u53f8\u7684\u89c2\u70b9 **\n** \u672c\u6587\u7eaf\u5c5e\u4e2a\u4eba\u4e1a\u4f59\u7ffb\u8bd1\uff0c\u65e0\u507f\u5206\u4eab\uff0c\u4e0d\u627f\u62c5\u7531\u6b64\u9020\u6210\u7684\u8fde\u5e26\u8d23\u4efb **\n** \u7ffb\u8bd1\u7684\u76ee\u7684\uff1a\u5df2\u7ecf\u5de5\u4f5c\u5341\u4e94\u5e74\u4e86\uff0c\u4f5c\u4e3a\u5de5\u7a0b\u5e08\uff0c\u8fd8\u662f\u559c\u6b22\u76f4\u63a5\u52a8\u624b\u4e0acode,\u800c\u4e0d\u662f\u770b\u4e66\uff0c\u770b\u7b97\u6cd5\u3002\u8fd9\u7bc7notebook \u5f04\u4e0b\u6765\uff0c\u57fa\u672c\u4e0a\u5c31\u628a\u6df1\u5ea6\u5b66\u4e60\u7b80\u5355\u8fc7\u4e86\u4e00\u904d\uff0c\u518d\u56de\u5934\u770b\u4e66\u4e8b\u534a\u529f\u500d\u3002\u6211\u8fd8\u5728\u67d0\u4e9b\u7279\u5b9a\u672f\u8bed\u548c\u5e93\u4e0a\u52a0\u4e86\u6211\u641c\u7d22\u7684\u7ed3\u679c\uff0c\u548c\u6211\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u8ba9\u4f60\u770b\u8d77\u6765\u4e8b\u534a\u529f\u500d\u3002**\n\n** \u4f60\u53ef\u4ee5\u5728kaggle\u4e0a\u73a9\u8fd9\u4e2anotebook, \u4e5f\u53ef\u4ee5\u5230[\u6211\u7684github\u4ed3\u5e93](https:\/\/github.com\/hugulas\/cqyblog\/blob\/master\/ai\/deeplearning\/deep-learning-tutorial-for-beginners.ipynb)\u4e0b\u8f7d\u4e2d\u6587\u7248\u4e0b\u6765\u73a9\u3002**\n\n\n<font color='red'>\n<br>\u6b63\u6587:\n* [\u4ecb\u7ecd](#1)\n* [\u6570\u636e\u96c6\u6982\u89c8](#2)\n* [\u903b\u8f91\u56de\u5f52](#3)\n    * [\u8ba1\u7b97\u56fe](#4)\n    * [\u521d\u59cb\u5316\u53c2\u6570](#5)\n    * [\u524d\u5411\u4f20\u64ad](#6)\n        * \u6fc0\u5316\u51fd\u6570 Sigmoid\n        * \u635f\u5931\u51fd\u6570 Loss(error) Function\n        * \u4ee3\u4ef7\u51fd\u6570 Cost Function\n    * [\u7528\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5](#7)\n        * \u540e\u5411\u4f20\u64ad\n        * \u66f4\u65b0\u53c2\u6570\n    * [\u7528Sklearn\u505a\u903b\u8f91\u56de\u5f52](#8)\n    * [\u603b\u7ed3\u548c\u63d0\u95ee](#9)\n    \n* [\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc](#10)\n    * [2\u5c42\u795e\u7ecf\u7f51\u7edc](#11)\n        * [\u5c42\u6570\u548c\u521d\u59cb\u5316\u6743\u91cd\u548c\u504f\u7f6e\u503c\u53c2\u6570](#12)\n        * [\u524d\u5411\u4f20\u64ad](#13)\n        * [\u635f\u5931\u51fd\u6570\u548c\u4ee3\u4ef7\u51fd\u6570](#14)\n        * [\u540e\u5411\u4f20\u64ad](#15)\n        * [\u66f4\u65b0\u53c2\u6570](#16)\n        * [\u7528\u5b66\u4e60\u5230\u7684\u6743\u91cd\u548c\u504f\u7f6e\u503c\u53c2\u6570\u505a\u9884\u6d4b](#17)\n        * [\u521b\u5efa\u6a21\u578b](#18)\n    * [L\u5c42\u795e\u7ecf\u7f51\u7edc](#19)\n        * [\u7528keras\u5e93\u5b9e\u73b0](#22)\n* \u65f6\u95f4\u5e8f\u5217\u9884\u6d4b: https:\/\/www.kaggle.com\/kanncaa1\/time-series-prediction-with-eda-of-world-war-2\n* [\u7528Pytorch\u5e93\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc](#23)\n* [\u7528Pytorch\u5e93\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc](#24)\n* [\u7528Pytorch\u5e93\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc](#25)\n* [\u7ed3\u8bba](#20)\n\n","35ff865d":"* \u4e3a\u4e86\u521b\u5efa\u56fe\u50cf\u6570\u7ec4\uff0c\u6211\u628a0\u548c1\u7684\u6570\u7ec4\u8fde\u63a5\u5230\u4e00\u8d77\u3002\n* \u7136\u540e\u6211\u4e3a\u7b26\u53f70\u56fe\u50cf\u6570\u7ec4\u521b\u5efa\u4e86\u6807\u7b7e\u6570\u7ec4z\uff0c\u4e3a\u7b26\u53f71\u56fe\u50cf\u6570\u7ec4\u521b\u5efa\u4e86\u6807\u7b7e\u6570\u7ec4o\n* \u8bd1\u8005\u6ce8\uff1a\u4e0d\u719f\u6089numpy\u7684\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u641c\u7d22\u201dnumpy.resharp \u4f8b\u5b50\" \u6216\u8005\u8c03\u7528help(np.reshape)\u6765\u770b\u4e0b\u5b83\u7684\u7528\u6cd5 [python\u57fa\u7840\u4e4bnumpy.reshape\u8be6\u89e3](https:\/\/www.jianshu.com\/p\/fc2fe026f002)","4ff36da9":"<a id=\"22\"><\/a> <br>\n## \u7528keras\u5e93\u5b9e\u73b0\n\u8ba9\u6211\u4eec\u770b\u770bkeras\u5e93\u7684\u4e00\u4e9b\u53c2\u6570\uff1a\n* units: \u8282\u70b9\u7684\u8f93\u51fa\u7ef4\u5ea6\n* kernel_initializer: \u521d\u59cb\u5316\u6743\u91cd\n* activation: \u6fc0\u6d3b\u51fd\u6570, \u6211\u4eec\u7528relu\n* input_dim: \u8f93\u5165\u7ef4\u5ea6\uff0c\u8fd9\u91cc\u5b83\u5c31\u662f\u6211\u4eec\u56fe\u8c61\u4e2d\u7684\u50cf\u7d20\u6570\u91cf\uff084096\u50cf\u7d20\uff09\n* \u4f18\u5316\u5668: \u6211\u4eec\u4f7f\u7528adam\u4f18\u5316\u5668\n    * Adam\u662f\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\u6700\u6709\u6548\u7684\u7684\u4f18\u5316\u7b97\u6cd5\u4e4b\u4e00\u3002\n    * Adam\u7684\u4e00\u4e9b\u4f18\u70b9\u662f\u76f8\u5bf9\u5c0f\u7684\u5185\u5b58\u9700\u6c42\uff0c\u548c\u5e38\u5e38\u53ea\u8981\u5c11\u91cf\u8c03\u6821\u8d85\u53c2\u5c31\u80fd\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n* \u635f\u5931: \u4ee3\u4ef7\u51fd\u6570\u662f\u76f8\u540c\u7684. \u540c\u65f6\u6210\u672c\u51fd\u6570\u662f\u6211\u4eec\u524d\u9762\u7528\u8fc7\u7684cross-entropy\n$$J = - \\frac{1}{m} \\sum\\limits_{i = 0}^{m} \\large\\left(\\small y^{(i)}\\log\\left(a^{[2] (i)}\\right) + (1-y^{(i)})\\log\\left(1- a^{[2] (i)}\\right)  \\large  \\right) \\small \\tag{6}$$\n* metrics: \u8fd9\u662f\u7cbe\u786e\u7684\n* cross_val_score: \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5982\u679c\u4f60\u4eec\u4e0d\u77e5\u9053\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u8bf7\u770b\u6211\u7684\u673a\u5668\u5b66\u4e60\u6307\u5357\u3002\nhttps:\/\/www.kaggle.com\/kanncaa1\/machine-learning-tutorial-for-beginners\n* epochs: \u8fed\u4ee3\u6570\u91cf","f11d0ae5":"<a id=\"18\"><\/a> <br>\n## \u521b\u5efa\u6a21\u578b\n* \u8ba9\u6211\u4eec\u628a\u6240\u6709\u4e1c\u897f\u653e\u5230\u4e00\u8d77","cd66dc2a":"<a id=\"17\"><\/a> <br>\n## \u7528\u5b66\u5230\u7684\u6743\u91cd\u548c\u504f\u7f6e\u503c\u505a\u9884\u6d4b\n* \u8ba9\u6211\u4eec\u5199\u9884\u6d4b\u65b9\u6cd5\u5427\uff0c\u5b83\u548c\u903b\u8f91\u56de\u5f52\u7684\u90a3\u4e2a\u5dee\u4e0d\u591a","5f7700fb":"<a id=\"13\"><\/a> <br>\n## \u524d\u5411\u4f20\u64ad\n* \u524d\u5411\u4f20\u64ad\u548c\u903b\u8f91\u56de\u5f52\u51e0\u4e4e\u4e00\u6837\u3002\n* \u552f\u4e00\u7684\u533a\u522b\u662f\u6211\u4eec\u4f7f\u7528tanh\u51fd\u6570\u548c\u6211\u4eec\u6240\u6709\u90fd\u505a\u4e24\u6b21.\n* numpy\u4e5f\u6709tanh\u51fd\u6570. \u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u5b83\u3002","f557120f":"* \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\uff1a\n    * \u521d\u59cb\u5316\u53c2\u6570 (\u5df2\u7ecf\u5b9e\u73b0)\n    * \u901a\u8fc7\u524d\u5411\u4f20\u64ad\u548c\u4ee3\u4ef7\u51fd\u6570\u5bfb\u627e\u4ee3\u4ef7 (\u5df2\u7ecf\u5b9e\u73b0)\n    * \u66f4\u65b0\uff08\u5b66\u4e60\uff09\u53c2\u6570\uff08\u6743\u91cd\u548c\u504f\u7f6e\u503c\uff09\u3002\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u5b83\u3002\n","9dc598dd":"<a id=\"7\"><\/a> <br>\n##  \u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5\n* \u597d\u7684\uff0c\u73b0\u5728\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u4ee3\u4ef7\u662f\u9519\u8bef \n* \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u51cf\u5c11\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5982\u679c\u6210\u672c\u9ad8\uff0c\u5b83\u8868\u793a\u6211\u4eec\u505a\u51fa\u4e86\u9519\u8bef\u7684\u9884\u6d4b\u3002 \n* \u8ba9\u6211\u4eec\u6765\u60f3\u60f3\u7b2c\u4e00\u6b65\uff0c\u4e00\u5207\u90fd\u662f\u4ece\u521d\u59cb\u5316\u6743\u91cd\u548c\u504f\u7f6e\u503c\u5f00\u59cb\u3002\u56e0\u6b64\u4ee3\u4ef7\u4f9d\u8d56\u4e8e\u4ed6\u4eec\u3002\n* \u4e3a\u4e86\u964d\u4f4e\u4ee3\u4ef7\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u6743\u91cd\u548c\u504f\u7f6e\u503c\u3002\n* \u6362\u53e5\u8bdd\u8bf4, \u6211\u4eec\u7684\u6a21\u578b\u9700\u8981\u5b66\u4e60\u53c2\u6570\u6743\u91cd\u548c\u504f\u7f6e\u503c\uff0c\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\u3002\u8fd9\u9879\u6280\u672f\u88ab\u79f0\u4e3a\u68af\u5ea6\u4e0b\u964d\u3002\n* \u8ba9\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50:\n    * \u6211\u4eec\u8bbe\u7f6e w=5\u548c bias=0,\u6240\u4ee5\u73b0\u5728\u5ffd\u7565\u504f\u7f6e\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u524d\u5411\u4f20\u64ad\uff0c\u6211\u4eec\u7684\u4ee3\u4ef7\u51fd\u6570\u662f1.5. \n    \n    * \u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837 (\u7ea2\u7ebf)\n    <a href=\"http:\/\/imgbb.com\/\"><img src=\"http:\/\/image.ibb.co\/dAaYJH\/7.jpg\" alt=\"7\" border=\"0\"><\/a>\n    * \u5982\u4f60\u6240\u89c1\u5728\u8fd9\u5e45\u56fe\u4e2d\uff0c \u6211\u4eec\u5f53\u524d\u7684\u7ed3\u679c\u5e76\u4e0d\u5728\u4ee3\u4ef7\u51fd\u6570\u7684\u6700\u4f4e\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8fbe\u5230\u4ee3\u4ef7\u6700\u4f4e\u70b9\u3002\u597d\u5427\uff0c\u8ba9\u6211\u4eec\u6765\u66f4\u65b0\u6743\u91cd\u3002\uff08\u7b26\u53f7:=\u8868\u793a\u4e3a\u66f4\u65b0\u4e2d\uff09 \n    * w := w - step. \u95ee\u9898\u662f\u8fd9\u91cc\u7684\u8ddd\u79bb(step)\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5728\u5f53\u524d\uff0c\u8ddd\u79bb\u5c31\u662f\u56fe\u4e2d\u659c\u7ebfslope1\u3002\u597d\u5427\uff0c\u8fd9\u6837\u7684\u6539\u53d8\u662f\u663e\u8457\u7684\u3002\u4e3a\u4e86\u627e\u5230\u6700\u4f4e\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u659c\u7387slope1.\u6bd4\u5982\u6211\u4eec\u7528 slope1 = 3\uff0c\u7136\u540e\u6211\u4eec\u66f4\u65b0\u6743\u91cd\u3002w := w - slope1 => w = 2\u3002\n    * \u73b0\u5728\u6211\u4eec\u7684\u6743\u91cd w \u662f2\uff0c\u5982\u4f60\u8bb0\u5f97\u90a3\u6837\uff0c \u6211\u4eec\u9700\u8981\u7ee7\u7eed\u524d\u5411\u4f20\u64ad\u5bfb\u627e\u6700\u4f4e\u4ee3\u4ef7\u503c(cost)\n    * \u6bd4\u5982\u8bf4\u6839\u636e\u524d\u5411\u4f20\u64ad\uff0c\u6211\u4eec\u7b97\u51fa w=2\u662f\uff0c\u4ee3\u4ef7\u51fd\u6570\u53d6\u503c\u662f0.4\u3002\u6211\u4eec\u8fd9\u4e48\u505a\u770b\u8d77\u6765\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u4ee3\u4ef7\u51fd\u6570\u53d6\u503c\u53d8\u5c0f\u4e86\u3002\u6211\u4eec\u5f97\u5230\u4e86\u65b0\u7684\u6743\u91cd\u503c\uff0c\u4ee3\u4ef7\u51fd\u6570\u53d6\u503c\u662f0.4\u3002\u8fd9\u6837\u591f\u4e86\u5417\uff1f\u4e8b\u5b9e\u4e0a\u6211\u5e76\u4e0d\u77e5\u9053\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u8bd5\u4e00\u6b65\u3002\n    * Slope2 = 0.7 and w = 2. \u8ba9\u6211\u4eec\u6765\u66f4\u65b0\u6743\u91cd w : = w - step(slope2) => w = 1.3 \u6743\u91cd\u73b0\u5728\u662f1.3. \u8ba9\u6211\u4eec\u627e\u51fa\u65b0\u7684\u4ee3\u4ef7\u51fd\u6570\u53d6\u503c\u3002\n    * \u518d\u505a\u4e86\u4e00\u6b21\u524d\u5411\u4f20\u64ad\u540e\uff0c w=1.3 \u7136\u540e\u6211\u4eec\u7684\u4ee3\u4ef7 cost =0.3. \u597d\u5427\uff0c\u6211\u4eec\u7684\u4ee3\u4ef7\u53d8\u5f97\u66f4\u4f4e\uff0c \u5b83\u770b\u8d77\u6765\u4e0d\u9519\u3002 \u4f46\u662f\u5b83\u662f\u4e0d\u662f\u8db3\u591f\u597d\u4e86\u5462\u6216\u8005\u6211\u4eec\u662f\u4e0d\u662f\u8fd8\u8981\u518d\u6267\u884c\u4e00\u6b65\u5462\uff1f\u7b54\u6848\u8fd8\u662f\u6211\u4e0d\u77e5\u9053\uff0c\u8ba9\u6211\u4eec\u518d\u8bd5\u8bd5\u3002\n    * Slope3 = 0.01 \u5e76\u4e14 w = 1.3. \u66f4\u65b0\u6743\u91cd w := w - step(slope3) => w = 1.29 ~ 1.3. \u8fd9\u6b21\u6743\u91cd\u5e76\u6ca1\u6709\u53d8\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u627e\u5230\u4e86\u4ee3\u4ef7\u51fd\u6570\u7684\u6700\u4f4e\u70b9\u3002 \n    * \u8fd9\u4e00\u5207\u770b\u8d77\u6765\u90fd\u4e0d\u9519\uff0c\u4f46\u662f\u6211\u4eec\u662f\u600e\u4e48\u786e\u5b9a\u659c\u7387\u7684\u5462? \u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u9ad8\u4e2d\u6216\u8005\u5927\u5b66\u7684\u8bfe\u7a0b\uff0c\u4e3a\u4e86\u627e\u5230\u51fd\u6570\u5728\u67d0\u4e00\u6307\u5b9a\u70b9\u7684\u659c\u7387\uff08\u4ee3\u4ef7\u51fd\u6570\u7684\u659c\u7387\uff09\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e00\u70b9\u6c42\u5bfc\u6570. \u4e5f\u8bb8\u4f60\u8fd8\u4f1a\u95ee\uff0c\u597d\u5427\u6211\u77e5\u9053\u600e\u4e48\u6c42\u659c\u7387\u4e86\uff0c\u4f46\u662f\u600e\u4e48\u77e5\u9053\u8be5\u5f80\u90a3\u8fb9\u8d70\u5462\uff1f\u4f60\u4f1a\u8bf4\u4e5f\u8bb8\u987a\u7740\u659c\u7387\uff0c\u4ee3\u4ef7\u503c\u4e5f\u53ef\u80fd\u53d8\u5927\u800c\u4e0d\u662f\u8d70\u5411\u6700\u4f4e\u70b9\u3002\u6211\u4eec\u7684\u7b54\u6848\u662f\u659c\u7387\uff08\u5bfc\u6570\uff09\u540c\u65f6\u7ed9\u51fa\u4e86\u8ddd\u79bb\u548c\u65b9\u5411\u3002\u56e0\u6b64\u4e0d\u7528\u62c5\u5fc3\u3002\n    * \u66f4\u65b0\u540e\u7684\u7b49\u5f0f\u662f\u8fd9\u6837\u7684\u3002\u4ed6\u8868\u793a\u901a\u8fc7\u6743\u91cd\u548c\u504f\u7f6e\u503c\u8ba1\u7b97\u5f97\u5230\u7684\u4ee3\u4ef7\u51fd\u6570\u3002\u6839\u636e\u6743\u91cd\u548c\u504f\u7f6e\u503c\u5bf9\u4ee3\u4ef7\u51fd\u6570\u6c42\u5bfc\uff0c\u7136\u540e\u4e58\u4ee5\u03b1\u5b66\u4e60\u7387\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u66f4\u65b0\u6743\u91cd\u503c\u3002\uff08\u4e3a\u4e86\u89e3\u91ca\uff0c\u6211\u5ffd\u7565\u4e86\u504f\u7f6e\u503c\uff0c\u4f46\u662f\u6240\u6709\u7684\u6b65\u9aa4\u90fd\u5e94\u8be5\u5305\u542b\u504f\u7f6e\u503c\uff09\n    <a href=\"http:\/\/imgbb.com\/\"><img src=\"http:\/\/image.ibb.co\/hYTTJH\/8.jpg\" alt=\"8\" border=\"0\"><\/a>\n    * \u73b0\u5728\uff0c\u6211\u786e\u5b9a\u4f60\u4f1a\u95ee\u4ec0\u4e48\u662f\u5b66\u4e60\u7387\uff0c\u6211\u524d\u9762\u4ece\u6ca1\u6709\u63d0\u5230\u8fc7\u3002\u5b83\u662f\u975e\u5e38\u76f4\u767d\u7684\u672f\u8bed\uff0c\u5b83\u51b3\u5b9a\u4e86\u5b66\u4e60\u7387\u3002\u7136\u540e\uff0c\u8fd9\u91cc\u6709\u4e2a\u5b66\u4e60\u5f88\u5feb\u6216\u8005\u4e0d\u5b66\u4e60\u7684\u6743\u8861\u3002\u6bd4\u5982\u8bf4\u4f60\u5728\u5df4\u9ece\uff08\u5f53\u524d\u7684\u4ee3\u4ef7\uff09\uff0c\u7136\u540e\u4f60\u60f3\u53bb\u9a6c\u5fb7\u91cc\uff08\u6700\u5c0f\u4ee3\u4ef7\uff09\u3002\u5982\u679c\u4f60\u7684\u901f\u5ea6\uff08\u5b66\u4e60\u7387\uff09\u5f88\u6162\uff0c\u4f60\u4f1a\u82b1\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u9a6c\u5fb7\u91cc\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4f60\u7684\u901f\u5ea6\uff08\u5b66\u4e60\u7387\uff09\u975e\u5e38\u5927\uff0c\u4f60\u53ef\u4ee5\u8dd1\u5f97\u98de\u5feb\u4f46\u662f\u6709\u53ef\u80fd\u5760\u6bc1\u800c\u6c38\u8fdc\u5230\u4e0d\u4e86\u9a6c\u5fb7\u91cc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u660e\u667a\u5730\u9009\u62e9\u901f\u5ea6\uff08\u5b66\u4e60\u7387\uff09\n    * \u5b66\u4e60\u7387\u4e5f\u79f0\u4e3a\u8d85\u53c2\uff0c\u9700\u8981\u88ab\u9009\u62e9\u548c\u8c03\u6821\u3002\u6211\u4f1a\u5728\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\u4e00\u8d77\u66f4\u8be6\u7ec6\u4ecb\u7ecd\u5b83\u548c\u5176\u4ed6\u8d85\u53c2\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5047\u8bbe\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u5b66\u4e60\u7387\u4e3a1\n    \n* \u6211\u60f3\u73b0\u5728\u4f60\u5df2\u7ecf\u7406\u89e3\u4e86\u524d\u5411\u4f20\u64ad\u7684\u903b\u8f91\u4e86\uff08\u4ece\u6743\u91cd\u548c\u504f\u7f6e\u503c\u5230\u4ee3\u4ef7\uff09\u548c\u540e\u5411\u4f20\u64ad\uff08\u4ece\u4ee3\u4ef7\u6765\u66f4\u65b0\u6743\u91cd\u548c\u504f\u7f6e\u503c\uff09\u3002\u800c\u4e14\u4f60\u4e5f\u5b66\u4e60\u4e86\u68af\u5ea6\u4e0b\u964d\u3002\u5728\u5b9e\u73b0\u4ee3\u7801\u524d\uff0c\u4f60\u8fd8\u8981\u5b66\u4e60\u53e6\u5916\u4e00\u4ef6\u4e8b\u60c5\uff1a\u6211\u4eec\u600e\u4e48\u6839\u636e\u6743\u91cd\u548c\u504f\u7f6e\u503c\u5bf9\u4ee3\u4ef7\u51fd\u6570\u6c42\u5bfc\u3002\u8fd9\u548cPython\u6216\u8005\u7f16\u7a0b\u65e0\u5173\u3002\u8fd9\u662f\u7eaf\u6570\u5b66\u3002\u6709\u4e24\u4e2a\u89c2\u70b9\uff0c\u7b2c\u4e00\u4e2a\u662f\u7528 Google\u641c\u7d22\u5173\u4e8e\u600e\u4e48\u5bf9log loss\u51fd\u6570\u6c42\u5bfc\uff0c \u7b2c\u4e8c\u4e2a\u662fgoogle\u641c\u7d22\u4ec0\u4e48\u662flog loss\u51fd\u6570\u7684\u5bfc\u6570\u3002\u6211\u9009\u62e9\u7b2c\u4e8c\u79cd\u56e0\u4e3a\u6211\u4e0d\u8bf4\u8bdd\u5c31\u65e0\u6cd5\u89e3\u91ca\u6570\u5b66 \uff1a\uff09\n\n$$ \\frac{\\partial J}{\\partial w} = \\frac{1}{m}x(  y_head - y)^T$$\n$$ \\frac{\\partial J}{\\partial b} = \\frac{1}{m} \\sum_{i=1}^m (y_head-y)$$","7457e6f7":"<a id=\"19\"><\/a> <br>\n# L\u5c42\u795e\u7ecf\u7f51\u7edc\n* **\u5982\u679c\u9690\u85cf\u5c42\u6570\u589e\u52a0\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48:** \u65e9\u671f\u7684\u5c42\u4f1a\u68c0\u6d4b\u7b80\u5355\u7684\u7279\u6027\u3002\n* \u5982\u679c\u540e\u9762\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6a21\u578b\u7531\u7b80\u5355\u7684\u7279\u6027\u7ec4\u6210\uff0c\u6a21\u578b\u53ef\u4ee5\u5b66\u4e60\u66f4\u591a\u66f4\u590d\u6742\u7684\u529f\u80fd\u3002\u6bd4\u65b9\u8bf4\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b26\u53f71.\n<a href=\"http:\/\/ibb.co\/dNgDJH\"><img src=\"http:\/\/preview.ibb.co\/mpD4Qx\/10.jpg\" alt=\"10\" border=\"0\"><\/a>\n* \u5982\u679c\u7b2c\u4e00\u5c42\u5b66\u4e60\u4e86\u8fb9\u7f18\u6216\u8005\u57fa\u672c\u56fe\u50cf\u6bd4\u5982\u8bf4\u7ebf\u6761\u3002\u5f53\u5c42\u6570\u589e\u52a0\u65f6\uff0c\u5c42\u5f00\u59cb\u5b66\u4e60\u66f4\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u51f8\u591a\u8fb9\u5f62\u5f62\u72b6\u6216\u8005\u5178\u578b\u7279\u5f81\u6bd4\u5982\u98df\u6307\u3002\n* \u8ba9\u6211\u4eec\u6765\u521b\u5efa\u4e2a\u6a21\u578b\n    * \u6709\u4e00\u4e9b\u8d85\u53c2\u6bd4\u5982\u6211\u4eec\u9700\u8981\u7684\u5b66\u4e60\u7387\uff0c\u8fed\u4ee3\u6570\uff0c\u9690\u85cf\u5c42\u6570\uff0c\u9690\u85cf\u5355\u5143\u6570\uff0c\u6fc0\u6d3b\u51fd\u6570\u7684\u7c7b\u578b\u3002\u54c7\uff0c\u592a\u591a\u4e86\uff0c\uff1a\uff09\n    * \u5982\u679c\u4f60\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u4e16\u754c\uff0c\u8fd9\u4e9b\u8d85\u53c2\u53ef\u4ee5\u9760\u81ea\u89c9\u6311\u9009 \n    * \u4f46\u662f, \u5982\u679c\u4f60\u4e0d\u60f3\u82b1\u592a\u591a\u65f6\u95f4\uff0c\u6700\u540e\u7684\u529e\u6cd5\u8fd8\u662f google \u641c\u7d22\uff0c\u4f46\u662f\u8fd9\u4e5f\u4e0d\u662f\u5fc5\u987b\u7684\u3002\u4f60\u9700\u8981\u5c1d\u8bd5\u4e0d\u540c\u8d85\u53c2\uff0c\u627e\u5230\u6700\u597d\u7684\u3002\n    * \u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u7684\u6a21\u578b\u67092\u4e2a\u9690\u85cf\u5c42\u5206\u522b\u5e26\u4e868\u4e2a\u548c4\u4e2a\u8282\u70b9\u3002 \u56e0\u4e3a\u9690\u85cf\u5c42\u548c\u8282\u70b9\u6570\u589e\u52a0\u4e86\uff0c\u5b83\u4f1a\u82b1\u5927\u91cf\u7684\u65f6\u95f4\u3002\n    * \u5bf9\u4e8e\u6fc0\u6d3b\u51fd\u6570\uff0c\u6211\u4eec\u4f1a\u5206\u522b\u7528 relu(\u7b2c\u4e00\u9690\u85cf\u5c42)\uff0c relu(\u7b2c\u4e8c\u9690\u85cf\u5c42)\u548c sigmoid(\u8f93\u51fa\u5c42)\n    * \u8fed\u4ee3\u5c06\u4f1a\u662f100\u6b21\n* \u6211\u4eec\u7684\u65b9\u6cd5\u548c\u524d\u9762\u4e00\u6837\uff0c\u867d\u7136\u4f60\u5df2\u7ecf\u5b66\u8fc7\u6df1\u5ea6\u5b66\u4e60\u7684\u903b\u8f91\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7keras\u5e93\u6765\u7b80\u5316\u3002\u6211\u4eec\u4f1a\u4e3a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528keras\u5e93\u3002\n\n* \u9996\u5148\u8ba9\u6211\u4eec\u6765\u8f6c\u7f6e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 x_train, x_test, y_train and y_test.\n\n    \n    ","f3c4b9e7":"* \u54c7, \u6211\u89c9\u5f97\u7d2f\u4e86 :) \u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u53c2\u6570. \u8fd9\u8868\u793a\u6211\u4eec\u9002\u5e94\u4e86\u6570\u636e\n* \u4e3a\u4e86\u9884\u6d4b\uff0c\u6211\u4eec\u5df2\u7ecf\u641e\u597d\u4e86\u53c2\u6570\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5f00\u59cb\u9884\u6d4b\u5427\u3002\n* \u5728\u9884\u6d4b\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u7528\u6d4b\u8bd5\u96c6x_test\u505a\u4e3a\u8f93\u5165\u3002\u6211\u4eec\u5bf9\u5b83\u505a\u524d\u5411\u9884\u6d4b\u3002","68b17fc5":"* \u5982\u4f60\u6240\u89c1, \u6211\u4eec\u7684\u8bad\u7ec3\u6570\u7ec4\u4e2d\u6709348\u5f20\u56fe\u50cf\uff0c\u6bcf\u5f20\u56fe\u50cf\u67094096\u4e2a\u50cf\u7d20\u3002\n* \u540c\u65f6, \u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u7ec4\u670962\u5f20\u56fe\u50cf\uff0c\u6bcf\u5f20\u56fe\u50cf\u4e5f\u67094096\u4e2a\u50cf\u7d20\u3002\n* \u7136\u540e\uff0c\u6211\u4eec\u5bf9\u77e9\u9635\u505a\u8f6c\u7f6e\uff0c\u4e5f\u5c31\u662f\u505a\u884c\u548c\u5217\u7684\u4ea4\u6362\u3002\n* \u6211\u77e5\u9053\u4f60\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u8981\u505a\u7f6e\u6362\uff0c\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u4e0a\u7684\u89e3\u91ca\u3002\u4f60\u770b\u5230\u6211\u540e\u9762\u5199\u5f97\u4ee3\u7801\u5c31\u660e\u767d\u4e86\u3002\uff1a\uff09\n* \u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u5df2\u7ecf\u628a\u7ebf\u6027\u4ee3\u6570\u57fa\u672c\u8fd8\u7ed9\u5927\u5b66\u8001\u5e08\u4e86\uff0c\u8bf7\u770b\u4e00\u4e0b\u767e\u5ea6\u767e\u79d1\uff0c\u975e\u5e38\u7b80\u5355https:\/\/baike.baidu.com\/item\/%E8%BD%AC%E7%BD%AE%E7%9F%A9%E9%98%B5\uff09","02c7449d":"<a id=\"10\"><\/a> <br>\n# \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc (ANN)\n* \u5b83\u4e5f\u88ab\u79f0\u4e3a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6216\u8005\u6df1\u5ea6\u5b66\u4e60\n* **\u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc:** \u5b83\u662f\u57fa\u672c\u4e0a\u662f\u903b\u8f91\u56de\u5f52\uff0c\u5e76\u4e14\u6267\u884c\u4e24\u904d\u4ee5\u4e0a\u3002\n* \u5728\u903b\u8f91\u56de\u5f52\u4e2d, \u6709\u8f93\u5165\u5c42\u548c\u8f93\u51fa\u5c42\u3002\u7136\u540e\uff0c\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5728\u8f93\u5165\u5c42\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u81f3\u5c11\u8fd8\u6709\u4e00\u5c42\u9690\u85cf\u7684\u5c42\n* **\u4ec0\u4e48\u662f\u6df1\u5ea6, \u591a\u5c11\u5c42\u53ef\u4ee5\u79f0\u4e3a\u6df1\u5ea6 ** \u5f53\u6211\u95ee\u6211\u7684\u8001\u5e08\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4ed6\u8bf4\u201c\u6df1\u5ea6\u201d\uff08Deep)\u662f\u4e2a\u5177\u6709\u76f8\u5bf9\u6027\u7684\u540d\u8bcd\uff1b\u5b83\u5f53\u7136\u662f\u6307\u51fa\u4e86\u7f51\u7edc\u7684\u6df1\u5ea6\uff0c\u8868\u660e\u4e86\u6709\u591a\u5c11\u9690\u85cf\u5c42\u3002 \u201c\u4f60\u7684\u6e38\u6cf3\u6c60\u6709\u591a\u6df1\uff1f\u201d \u5b83\u53ef\u4ee5\u662f12\u82f1\u5bf8\u6df1\uff083.6\u7c73\u5de6\u53f3\uff09\u4e5f\u53ef\u4ee5\u662f2\u82f1\u5bf8\uff080.6\u7c73)\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5b83\u90fd\u6709\u4e2a\u6df1\u5ea6\u3002\u6cf3\u6c60\u7684\u8d28\u91cf\u53ef\u4ee5\u7528\u6df1\u5ea6\u6765\u8868\u793a\u300232\u5e74\u524d\uff0c\u6211\u4f7f\u7528\u4e86\u4e24\u5230\u4e09\u4e2a\u9690\u85cf\u5c42\u3002\u90a3\u662f\u56e0\u4e3a\u90a3\u65f6\u6211\u6536\u5230\u4e86\u4e13\u7528\u786c\u4ef6\u7684\u9650\u5236\u3002\u5728\u51e0\u5e74\u524d\uff0c20\u5c42\u88ab\u89c6\u4e3a\u633a\u6df1\u4e86\u3002\u572810\u6708\uff0c\u5434\u6069\u8fbe\u63d0\u5230\u4e86152\u5c42\u662f\u4ed6\u76ee\u524d\u77e5\u9053\u7684\u6700\u5927\u7684\u5546\u4e1a\u7f51\u7edc\u3002\u4e0a\u5468\uff0c\u6211\u548c\u5728\u67d0\u8457\u540d\u5927\u516c\u53f8\u4f9b\u804c\u7684\u4eba\u804a\u5929\uff0c\u4ed6\u8bf4\u4ed6\u7528\u4e86\u51e0\u5343\u5c42\u3002\u6240\u4ee5\uff0c\u6211\u503e\u5411\u4e8e\u575a\u6301\u95ee\u201c\u591a\u6df1\uff1f\u201d\n* **\u4e3a\u4ec0\u4e48\u5b83\u79f0\u4e3a\u201c\u9690\u85cf\u201d:** \u56e0\u4e3a\u9690\u85cf\u5c42\u770b\u4e0d\u5230\u8f93\u5165(\u8bad\u7ec3\u96c6)\u3002\n* \u6bd4\u65b9\u8bf4\u4f60\u6709\u8f93\u5165\uff0c1\u5c42\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u3002\u5f53\u6709\u4eba\u95ee\u4f60\u201c\u563f\uff0c\u6211\u7684\u670b\u53cb\uff0c\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u6709\u51e0\u5c42\uff1f\u201d\u7b54\u6848\u662f\u201c\u6211\u6709\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\u201d\u3002\u56e0\u4e3a\u5f53\u8ba1\u7b97\u5c42\u6570\u65f6, \u8f93\u5165\u5c42\u88ab\u65e0\u89c6\u4e86\u3002\n* \u8ba9\u6211\u4eec\u6765\u770b2\u5c42\u795e\u7ecf\u7f51\u7edc: \n<a href=\"http:\/\/ibb.co\/eF315x\"><img src=\"http:\/\/preview.ibb.co\/dajVyH\/9.jpg\" alt=\"9\" border=\"0\"><\/a>\n* \u6211\u4eec\u4f1a\u4e00\u6b65\u6b65\u5b66\u4e60\u8fd9\u5f20\u56fe.\n    * \u5982\u4f60\u6240\u89c1\u5728\u8f93\u5165\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u6709\u4e00\u5c42\u9690\u85cf\u5c42\u3002\u800c\u8fd9\u4e2a\u9690\u85cf\u5c42\u67093\u4e2a\u8282\u70b9\u3002\u5982\u679c\u4f60\u597d\u5947\u4e3a\u5565\u6211\u9009\u62e9\u4e863\u4e2a\u8282\u70b9\uff0c\u7b54\u6848\u662f\u6ca1\u6709\u7406\u7531\uff0c\u6211\u5c31\u662f\u8fd9\u4e48\u9009\u7684\u3002\u8282\u70b9\u6570\u91cf\u662f\u548c\u5b66\u4e60\u7387\u4e00\u6837\u662f\u8d85\u53c2\u3002\u56e0\u6b64\u6211\u4eec\u4f1a\u5728\u795e\u7ecf\u7f51\u7edc\u90e8\u5206\u7ed3\u675f\u7684\u65f6\u5019\u770b\u5230\u8fd9\u4e9b\u8d85\u53c2\u3002\n    * \u8f93\u5165\u548c\u8f93\u51fa\u5c42\u6ca1\u6709\u53d8\u3002\u4ed6\u4eec\u548c\u903b\u8f91\u56de\u5f52\u662f\u4e00\u6837\u7684\u3002\n    * \u5728\u56fe\u4e2d\u6709\u4e00\u4e2atanh\u51fd\u6570\uff0c\u4f60\u53ef\u80fd\u5e76\u4e0d\u4e86\u89e3. \u5b83\u548csigmoid\u51fd\u6570\u4e00\u6837\u662f\u6fc0\u6d3b\u51fd\u6570. Tanh\u6fc0\u6d3b\u51fd\u6570\u7528\u4e8e\u9690\u85cf\u5355\u5143\u65f6\u6bd4sigmoid\u51fd\u6570\u597d\uff0c\u56e0\u4e3a\u5b83\u7684\u8f93\u51fa\u7684\u5e73\u5747\u503c\u63a5\u8fd1\u4e8e0\uff0c\u6240\u4ee5\u5b83\u4e3a\u4e0b\u4e00\u5c42\u505a\u4e86\u6570\u636e\u96c6\u4e2d\u3002\u800c\u4e14\uff0ctanh\u6fc0\u6d3b\u51fd\u6570\u589e\u52a0\u4e86\u975e\u7ebf\u6027\uff0c\u8fd9\u8ba9\u6211\u4eec\u7684\u5b66\u4e60\u6a21\u578b\u66f4\u597d\u3002\n    * \u5982\u4f60\u6240\u89c1\u7d2b\u8272\u7684\u6709\u4e24\u90e8\u5206\u3002\u6bcf\u4e2a\u90e8\u5206\u90fd\u548c\u903b\u8f91\u56de\u5f52\u90a3\u6837\u3002\u5b83\u4eec\u7684\u533a\u522b\u662f\u6fc0\u6d3b\u51fd\u6570\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u3002\n        * \u5728\u903b\u8f91\u56de\u5f52\u4e2d: \u8f93\u5165 => \u8f93\u51fa\n        * \u5728\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\u4e2d: \u8f93\u5165 => \u9690\u85cf\u5c42 => \u8f93\u51fa\u5c42. \u4f60\u53ef\u4ee5\u8ba4\u4e3a\u9690\u85cf\u5c42\u662f\u7b2c\u4e00\u90e8\u5206\u7684\u8f93\u51fa\u548c\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u3002\n* \u8bf4\u5b8c\u4e86. \u6211\u4eec\u5c06\u4f1a\u6cbf\u7740\u903b\u8f91\u56de\u5f52\u76f8\u540c\u7684\u8def\u5f84\u6765\u5b66\u4e60\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\u3002\n\n   \n    \n    ","bf1a9027":"<a id=\"14\"><\/a> <br>\n## \u635f\u5931\u51fd\u6570\u548c\u4ee3\u4ef7\u51fd\u6570\n* \u635f\u5931\u51fd\u6570\u548c\u4ee3\u4ef7\u51fd\u6570\u540c\u903b\u8f91\u56de\u5f52\u662f\u4e00\u6837\u7684\n* Cross entropy function\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/image.ibb.co\/nyR9LU\/as.jpg\" alt=\"as\" border=\"0\"><\/a><br \/>","1425be11":"* \u6211\u4eec\u505a\u4e86\u9884\u6d4b\u3002\n* \u73b0\u5728\u8ba9\u6211\u4eec\u628a\u6240\u6709\u5de5\u4f5c\u4e32\u8d77\u6765\u5427\u3002","88236a35":"<a id=\"3\"><\/a> <br>\n# \u903b\u8f91\u56de\u5f52\n* \u5f53\u6211\u4eec\u8bf4\u5230\u4e8c\u5143\u5206\u7c7b\u65f6\uff080\u548c1\u7684\u8f93\u51fa\uff09\uff0c\u6211\u4eec\u5c31\u4f1a\u7acb\u523b\u60f3\u5230\u903b\u8f91\u56de\u5f52\u3002\n* \u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u770b\u5230\u56de\u5f52\u4e24\u4e2a\u5b57\u5c31\u5f88\u6655\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5173\u4e8e\u903b\u8f91\u56de\u5f52\u7684\u89e3\u91ca\u3002\n\uff08https:\/\/easyai.tech\/ai-definition\/logistic-regression\/\uff09\n* \u7136\u800c\uff0c\u5728\u6df1\u5ea6\u5b66\u4e60\u6307\u5357\u4e2d\uff0c\u903b\u8f91\u56de\u5f52\u662f\u6307\u4ec0\u4e48\u5462\uff1f\n* \u7b54\u6848\u662f\u903b\u8f91\u56de\u5f52\u662f\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\u3002\n* \u987a\u4fbf\u8bf4\u4e00\u5634\uff0c\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60\u5c31\u662f\u540c\u4e00\u4ef6\u4e1c\u897f\u3002\u5f53\u6211\u4eec\u8bb2\u5230\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u89e3\u91ca\u201cdeep\u201d\u201c\u6df1\u5ea6\u201d\u8fd9\u4e2a\u540d\u8bcd\u7684\u5177\u4f53\u542b\u4e49\u3002\n* \u4e3a\u4e86\u80fd\u7406\u89e3\u903b\u8f91\u56de\u5f52\uff08\u7b80\u6613\u6df1\u5ea6\u5b66\u4e60\uff09\uff0c\u8ba9\u6211\u4eec\u5148\u5b66\u4e60\u4e0b\u8ba1\u7b97\u56fe\uff08computation graph\uff09\u3002 ","946331c5":"* \u6211\u4eec\u5b66\u4e60\u4e86\u7b80\u6613\u795e\u7ecf\u7f51\u7edc\uff08\u903b\u8f91\u56de\u5f52\uff09\u80cc\u540e\u7684\u903b\u8f91\u548c\u600e\u4e48\u5b9e\u73b0\u5b83\u3002\n* \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u903b\u8f91\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u53ef\u4ee5\u7528sklearn\u5e93\u4e86\uff0c\u7528\u5b83\u6765\u5b9e\u73b0\u8fd9\u4e9b\u903b\u8f91\u56de\u5f52\u7684\u6b65\u9aa4\u66f4\u52a0\u5bb9\u6613\u3002\n\n\n","f74ae71d":"\u6211\u4eec\u5199\u4e86sigmoid\u65b9\u6cd5\uff0c\u4e5f\u8bd5\u7740\u7528\u5b83\u8ba1\u7b97\u4e86y_head\u503c\u3002\u8ba9\u6211\u4eec\u6765\u5b66\u4e60\u4e0b\u635f\u5931\u51fd\u6570\u5427\n* \u8bd1\u8005\u6ce8\uff1a\u53c2\u8003 \n[\u5206\u7c7b\u95ee\u9898\u4e4b\u635f\u5931\u51fd\u6570](https:\/\/zh.wikipedia.org\/wiki\/%E5%88%86%E9%A1%9E%E5%95%8F%E9%A1%8C%E4%B9%8B%E6%90%8D%E5%A4%B1%E5%87%BD%E6%95%B8)\n* \u8ba9\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c \u6211\u628a\u4e00\u5f20\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u628a\u5b83\u4e58\u4ee5\u76f8\u5e94\u7684\u6743\u91cd\u7136\u540e\u52a0\u4e0a\u504f\u7f6e\u503c\uff0c\u7136\u540e\u5f97\u5230z\u3002\u7136\u540e\uff0c\u6211\u628az\u4ee3\u5165sigmoid\u65b9\u6cd5\u4e2d\uff0c\u8fd9\u6837\u6211\u5f97\u5230\u4e86 y_head\u503c\u3002\u76f4\u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5728\u505a\u4ec0\u4e48\u3002\u7136\u540e\uff0c\u6bd4\u65b9\u8bf4\uff0cy_head\u53d8\u6210\u4e860.9, \u6bd40.5\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u6d4b\u56fe\u50cf\u662f\u7b26\u53f71.OK\uff0c\u6bcf\u4e00\u4ef6\u4e8b\u60c5\u770b\u6765\u662f\u597d\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u7684\u9884\u6d4b\u662f\u6b63\u786e\u7684\u5417\uff1f\u6211\u4eec\u600e\u4e48\u68c0\u67e5\u8fd9\u662f\u5bf9\u662f\u9519\u561b\uff1f\u7b54\u6848\u662f\u901a\u8fc7\u635f\u5931\u51fd\u6570\uff1a\n    * \u635f\u5931\u51fd\u6570\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\n    <a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/image.ibb.co\/eC0JCK\/duzeltme.jpg\" alt=\"duzeltme\" border=\"0\"><\/a>\n    * \u5b83\u8bf4\u4f60\u5982\u679c\u505a\u4e86\u9519\u8bef\u7684\u9884\u6d4b\uff0c\u635f\u5931\u6216\u8005\u9519\u8bef\u5728\u53d8\u5927\u3002**DENKLEM DUZELTME**\n        * \u4f8b\u5b50\uff1a \u6211\u4eec\u771f\u5b9e\u7684\u56fe\u50cf\u662f\u7b26\u53f71\u5e76\u4e14\u5b83\u7684\u6807\u7b7e\u4e5f\u662f1\uff0c\u7136\u540e\u6211\u4eec\u7684\u9884\u6d4b\u503c y_head=1\u3002 \u5f53\u6211\u4eec\u653e\u5165y\u548cy_head\u653e\u5165\u635f\u5931\u516c\u5f0f\uff0c\u7ed3\u679c\u5c31\u662f0.\u5f53\u6211\u4eec\u505a\u51fa\u6b63\u786e\u9884\u6d4b\u65f6\uff0c\u6211\u4eec\u7684\u635f\u5931\u662f0, \u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u505a\u51fa\u7684\u662f\u9519\u8bef\u7684\u9884\u6d4b\uff0c\u6bd4\u5982 y_head=0,\u635f\u5931\u5c31\u662f\u65e0\u7a77\u5927\u3002\n* \u5728\u8fd9\u4e4b\u540e\uff0c\u4ee3\u4ef7\u51fd\u6570\u662f\u635f\u5931\u51fd\u6570\u7684\u603b\u548c\u3002\u6bcf\u4e2a\u56fe\u7247\u90fd\u6709\u76f8\u5e94\u7684\u635f\u5931\u51fd\u6570\u3002\u4ee3\u4ef7\u51fd\u6570\u662f\u8fd9\u4e9b\u56fe\u7247\u7684\u635f\u5931\u51fd\u6570\u7684\u603b\u548c\u3002        \n* \u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u3002\n","330b430c":"<a id=\"2\"><\/a> <br>\n# \u6570\u636e\u96c6\u6982\u89c8\n* \u6211\u4eec\u5c06\u4f1a\u5728\u672c\u6307\u5357\u4e2d\u4f7f\u7528 \"sign language digits data set\" \uff08\u6570\u5b57\u7b26\u5408\u8bed\u97f3\u6570\u636e\u96c6\uff09 \n* \u5728\u8fd9\u4e2a\u6570\u636e\u4e2d\u67092062\u5f20\u7528\u624b\u52bf\u8868\u793a\u7684\u6570\u5b57\u7b26\u53f7\u56fe\u7247\n* \u5927\u5bb6\u90fd\u77e5\u9053\u6570\u5b57\u662f\u4ece0\u52309, \u56e0\u6b64\u670910\u4e2a\u6570\u5b57\u7b26\u53f7\u3002\n* \u5728\u672c\u6587\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u7b80\u5316\u6210\u53ea\u67090\u548c1\u4e24\u4e2a\u6570\u5b57\u7b26\u53f7\u3002 \n* \u5728\u6570\u636e\u96c6\u4e2d\uff0c\u7b26\u53f70\u76f8\u5173\u7684\u56fe\u50cf\u7684\u7d22\u5f15\u5728204\u5230408\u4e4b\u95f4\u3002 \u7b26\u53f70\u7684\u6570\u91cf\u6709205\u4e2a\u3002\n* \u540c\u65f6\u7b26\u53f71\u5728822\u52301028\u4e4b\u95f4\u3002\u7b26\u53f71\u7684\u6570\u91cf\u662f206\u4e2a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6bcf\u79cd\u7b26\u53f7\u5404\u81ea\u4f7f\u7528205\u4e2a\u6837\u672c\u3002\n* \u8bf4\u660e\uff1a\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u6765\u8bf4\uff0c205\u4e2a\u6837\u672c\u8fd8\u662f\u975e\u5e38\u975e\u5e38\u5730\u5c11\u7684\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u4e00\u4efd\u6307\u5357\uff0c\u8fd9\u5f71\u54cd\u4e0d\u5927\u3002\n* \u8ba9\u6211\u4eec\u51c6\u5907\u597d\u6211\u4eec\u7684X\u548cY\u6570\u7ec4\u3002X\u662f\u7531\u7b26\u53f71\u548c\u7b26\u53f70\u7684\u624b\u52bf\u56fe\u50cf\u7ec4\u6210\u7684\u6570\u7ec4, Y\u662f\u6807\u7b7e\u6570\u7ec4\uff080\u548c1)\u3002","33e44f65":"* \u8ba9\u6211\u4eec\u6765\u770b\u770b\u903b\u8f91\u56de\u5f52\u7684\u8ba1\u7b97\u56fe\u5427\u3002\n<a href=\"http:\/\/ibb.co\/c574qx\"><img src=\"http:\/\/preview.ibb.co\/cxP63H\/5.jpg\" alt=\"5\" border=\"0\"><\/a>\n    * \u53c2\u6570\u5305\u62ec\u4e86 weight(\u6743\u91cd)\u548c bias(\u504f\u7f6e\uff09 \n    * Weights\u6743\u91cd: \u6bcf\u4e2a\u50cf\u7d20\u7684\u7cfb\u6570\n    * Bias\u504f\u7f6e: \u622a\u8ddd\n    * z = (w.t)x + b  => z equals to (transpose of weights times input x) + bias \n    * z = (w.t)x + b  => z \u7b49\u4e8e (\u7cfb\u6570\u4e58\u4ee5\u50cf\u7d20\u7684\u8f6c\u7f6e) + \u504f\u7f6e\u503c    \n    * \u6362\u4e00\u79cd\u65b9\u5f0f\u6765\u8bf4 => z = b + px1*w1 + px2*w2 + ... + px4096*w4096\n    * y_head = sigmoid(z)\n    * \u901a\u8fc7\u6fc0\u6d3b\u51fd\u6570Sigmoid\u53ef\u4ee5\u5c06z\u505a\u4e3a\u53c2\u6570\uff0c\u83b7\u5f97\u57280\u548c1\u4e4b\u95f4\u8fd4\u56de\u503c\u3002\u4f60\u53ef\u4ee5\u5728\u8ba1\u7b97\u56fe\u4e2d\u770b\u5230 sigmoid \u51fd\u6570\n* \u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u4f7f\u7528sigmoid\u51fd\u6570?\n    * \u5b83\u7ed9\u51fa\u4e86\u6982\u7387\u6027\u7684\u7ed3\u679c\n    * \u5b83\u662f\u53ef\u5bfc\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u7528\u5230\u5b83\u3002(\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u770b\u5230\u5b83)\n* \u8ba9\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff1a\n    * \u6bd4\u65b9\u8bf4\u6211\u4eec\u53d1\u73b0 z=4, \u7136\u540e\u6211\u4eec\u5c06 z\u505a\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 sigmoid \u51fd\u6570\u3002\u7ed3\u679cy_head\u7684\u53d6\u503c\u5927\u6982\u662f0.9\u3002\u5b83\u8868\u793a\u5206\u7c7b\u7684\u7ed3\u679c\u670990%\u7684\u6982\u7387\u662f1\u3002\n* \u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff0c\u6328\u4e2a\u4ed4\u7ec6\u7ec3\u4e60\u8ba1\u7b97\u56fe\u7684\u6bcf\u4e2a\u90e8\u5206\u5427\u3002","b1b61e0e":"<a id=\"11\"><\/a> <br>\n## 2\u5c42\u795e\u7ecf\u7f51\u7edc\n* \u5c42\u7684\u5927\u5c0f\uff0c\u6743\u91cd\u4ee5\u53ca\u504f\u7f6e\u503c\u53c2\u6570\u521d\u59cb\u5316\n* \u524d\u5411\u4f20\u64ad\n* \u635f\u5931\u51fd\u6570\u548c\u4ee3\u4ef7\u51fd\u6570\n* \u540e\u5411\u4f20\u64ad\n* \u66f4\u65b0\u53c2\u6570\n* \u7528\u5b66\u5230\u7684\u6743\u91cd\u7684\u504f\u7f6e\u503c\u505a\u9884\u6d4b\n* \u521b\u5efa\u6a21\u578b","88254fc5":"<a id=\"25\"><\/a> <br>\n## Pytorch\u5e93\u4e2d\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\n* Pytorch\u548ckeras\u4e00\u6837\u662f\u4e00\u79cd\u6846\u67b6\u3002\n* \u5b83\u8ba9\u521b\u5efa\u548c\u5b9e\u73b0\u6df1\u5ea6\u5b66\u4e60\u5757\u66f4\u7b80\u5355\u3002\n* \u5faa\u73af\u795e\u7ecf\u7f51\u7edcRNN: https:\/\/www.kaggle.com\/kanncaa1\/recurrent-neural-network-with-pytorch","ef61f95c":"<a id=\"9\"><\/a> <br>\n## \u603b\u7ed3\u548c\u95ee\u9898\n<font color='purple'>\n\u5728\u7b2c\u4e00\u90e8\u5206\u6211\u4eec\u90fd\u505a\u4e86\u4ec0\u4e48:\n* \u521d\u59cb\u5316\u53c2\u6570\u6743\u91cd\u548c\u504f\u7f6e\u503c\n* \u524d\u5411\u4f20\u64ad\n* \u635f\u5931\u51fd\u6570\n* \u4ee3\u4ef7\u51fd\u6570\n* \u540e\u5411\u4f20\u64ad (\u68af\u5ea6\u4e0b\u964d)\n* \u7528\u5b66\u4e60\u5230\u7684\u53c2\u6570\u6743\u91cd\u548c\u504f\u7f6e\u503c\u505a\u9884\u6d4b\n* \u901a\u8fc7 Skylearn \u8fdb\u884c\u903b\u8f91\u56de\u5f52\n\n<br> \u5982\u679c\u4f60\u5728\u8fd9\u91cc\u6709\u95ee\u4f60\u53ef\u4ee5\u95ee\u4f5c\u8005\uff0c\u56e0\u4e3a\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u6784\u5efa\u903b\u8f91\u56de\u5f52\u7684\u4eba\u5de5\u667a\u80fd\u7f51\u7edc\u3002\n<br> \u5bb6\u5ead\u4f5c\u4e1a: \u8fd9\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u70b9\uff0c\u505c\u4e0b\u6765\u505a\u4e2a\u8054\u7cfb\u5427. \u4f60\u7684\u4f5c\u4e1a\u662f\u521b\u5efa\u81ea\u5df1\u7684\u903b\u8f91\u56de\u5f52\u65b9\u6cd5\u6765\u5206\u7c7b\u53e6\u5916\u4e24\u4e2a\u6570\u5b57\u7b26\u53f7\u3002","3e8f9d87":"<font color='purple'>\n\n\u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5b66\u4e60\u4e86\u5982\u4f55\u5b9e\u73b0\u3002\n* \u5c42\u7684\u5927\u5c0f\uff0c\u6743\u91cd\u4ee5\u53ca\u504f\u7f6e\u503c\u53c2\u6570\u521d\u59cb\u5316\n* \u524d\u5411\u4f20\u64ad\n* \u635f\u5931\u51fd\u6570\u548c\u4ee3\u4ef7\u51fd\u6570\n* \u540e\u5411\u4f20\u64ad\n* \u66f4\u65b0\u53c2\u6570\n* \u7528\u5b66\u5230\u7684\u6743\u91cd\u7684\u504f\u7f6e\u503c\u505a\u9884\u6d4b\n* \u521b\u5efa\u6a21\u578b\n\n<br> Now lets learn how to implement L layer neural network with keras.","32696371":"<a id=\"12\"><\/a> <br>\n## \u5c42\u7684\u5927\u5c0f\uff0c\u6743\u91cd\u4ee5\u53ca\u504f\u7f6e\u503c\u53c2\u6570\u521d\u59cb\u5316\n* \u8bad\u7ec3\u96c6x_train\u6709348\u4e2a\u6837\u672c $x^{(348)}$:\n$$z^{[1] (348)} =  W^{[1]} x^{(348)} + b^{[1] (348)}$$ \n$$a^{[1] (348)} = \\tanh(z^{[1] (348)})$$\n$$z^{[2] (348)} = W^{[2]} a^{[1] (348)} + b^{[2] (348)}$$\n$$\\hat{y}^{(348)} = a^{[2] (348)} = \\sigma(z^{ [2] (348)})$$\n\n* \u5728\u903b\u8f91\u56de\u5f52\u4e2d, \u6211\u4eec\u521d\u59cb\u5316\u6743\u91cd 0.01 \u548c\u504f\u7f6e\u503c 0. \u8fd9\u6b21, \u6211\u4eec\u968f\u673a\u521d\u59cb\u5316\u6743\u91cd\u3002\u5982\u679c\u6211\u4eec\u628a\u7b2c\u4e00\u9690\u85cf\u5c42\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u521d\u59cb\u5316\u4e3a0\u5c06\u4f1a\u8fdb\u884c\u540c\u6837\u7684\u8ba1\u7b97\uff0c\u5373\u4f7f\u591a\u6b21\u68af\u5ea6\u4e0b\u964d\u7684\u8fed\u4ee3\u540e\uff0c\u6bcf\u4e2a\u8fd9\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4ecd\u7136\u8fd8\u662f\u548c\u5176\u4ed6\u795e\u7ecf\u5143\u4e00\u6837\u8ba1\u7b97\u76f8\u540c\u7684\u4e8b\u60c5\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u505a\u968f\u673a\u7684\u521d\u59cb\u5316\u3002\u800c\u4e14\uff0c\u8d77\u59cb\u7684\u6743\u91cd\u4f1a\u6bd4\u8f83\u5c0f\u3002\u5982\u679c\u5b83\u4eec\u7684\u521d\u59cb\u503c\u975e\u5e38\u5927\uff0c\u8fd9\u4f1a\u5bfc\u81f4tanh\u51fd\u6570\u7684\u8f93\u5165\u975e\u5e38\u5927\uff0c\u7136\u800c\u8fd9\u4f1a\u5bfc\u81f4\u68af\u5ea6\u63a5\u8fd1\u4e8e0.\u4f18\u5316\u7b97\u6cd5\u4f1a\u975e\u5e38\u6162\u3002\n* \u504f\u7f6e\u503c\u5f00\u59cb\u65f6\u4f1a\u662f0","d8a242d5":"<a id=\"4\"><\/a> <br>\n##  \u8ba1\u7b97\u56fe\n* \u8ba1\u7b97\u56fe\u662f\u4e00\u4e2a\u7406\u89e3\u6570\u5b66\u8868\u8fbe\u5f0f\u7684\u4e0d\u9519\u7684\u65b9\u5f0f\u3002\n* \u5b83\u770b\u8d77\u6765\u50cf\u6570\u5e8f\u8868\u8fbe\u5f0f\u7684\u53ef\u89c6\u5316\u5c55\u793a\u3002\n* \u6bd4\u5982\u8bf4\u8868\u8fbe\u5f0f $$c = \\sqrt{a^2 + b^2}$$\n* \u5b83\u7684\u8ba1\u7b97\u56fe\u5982\u56fe\u6240\u793a. \u5982\u6211\u4eec\u6240\u89c1\u7684\uff0c\u6570\u5b66\u88ab\u7528\u56fe\u5f62\u7684\u65b9\u5f0f\u8868\u8fbe\u51fa\u6765\n<a href=\"http:\/\/imgbb.com\/\"><img src=\"http:\/\/image.ibb.co\/hWn6Lx\/d.jpg\" alt=\"d\" border=\"0\"><\/a>","a7a8d502":"<a id=\"20\"><\/a> <br>\n# \u7ed3\u8bba\n* \u9996\u5148\uff0c\u611f\u8c22\u6570\u636e\u96c6\u7684\u63d0\u4f9b\u8005\n* \u5982\u679c\uff0c\u4f60\u770b\u5230\u6709\u9519\u8bef\u62fc\u5199\uff0c\u8bf7\u65e0\u89c6\u5b83\u4eec\uff0c\u8c22\u8c22 \uff1a\uff09\n* \u8fd9\u7bc7\u6307\u5357\u662f\u6bd4\u8f83\u6d45\u663e\u7684, \u5982\u679c\u67d0\u4e9b\u5185\u5bb9\u4f60\u9700\u8981\u66f4\u591a\u7ec6\u8282\u53ef\u4ee5\u8bc4\u8bba.\n* \u5982\u679c\u4f60\u89c9\u5f97\u6211\u67d0\u4e9b\u5185\u5bb9\u6ca1\u6709\u89e3\u91ca\u6e05\u695a\uff0c\u4f60\u53ef\u4ee5\u5230 youtube\u4e0a\u9762\u5b66\u4e60\uff08\u7279\u522b\u662f\u5434\u6069\u8fbe\uff09\uff0c\u7136\u540e\u7ee7\u7eed\u3002\n* \u5982\u679c\u6709\u4e9b\u5173\u4e8ePython\u548c\u673a\u5668\u5b66\u4e60\u7684\u5185\u5bb9\u4f60\u7406\u89e3\u4e0d\u4e86\uff0c\u8bf7\u770b\u6211\u5176\u4ed6\u7684\u6307\u5357\u3002\n    * \u6570\u636e\u79d1\u5b66: https:\/\/www.kaggle.com\/kanncaa1\/data-sciencetutorial-for-beginners\n    * \u673a\u5668\u5b66\u4e60: https:\/\/www.kaggle.com\/kanncaa1\/machine-learning-tutorial-for-beginners\n* \u73b0\u5728\u6211\u5e0c\u671b\u4f60\u7406\u89e3\u548c\u5b66\u4e60\u4ec0\u4e48\u662f\u6df1\u5ea6\u5b66\u4e60\u3002\u7136\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6bcf\u6b21\u7f16\u5199\u957f\u957f\u7684\u4ee3\u7801\u6765\u6784\u5efa\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002\u56e0\u4e3a\u6709\u6df1\u5ea6\u5b66\u4e60\u7684\u6846\u67b6\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u642d\u5efa\u5b66\u4e60\u6a21\u578b\u3002\n    * \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc: https:\/\/www.kaggle.com\/kanncaa1\/pytorch-tutorial-for-deep-learning-lovers\n    * \u5377\u79ef\u795e\u7ecf\u7f51\u7edc: https:\/\/www.kaggle.com\/kanncaa1\/pytorch-tutorial-for-deep-learning-lovers\n    * \u5faa\u73af\u795e\u7ecf\u7f51\u7edc: https:\/\/www.kaggle.com\/kanncaa1\/recurrent-neural-network-with-pytorch\n     \n\n### <br>\u5982\u679c\u4f60\u559c\u6b22\u4ed6\uff0c\u8bf7\u95ee\u4f5c\u8005\u70b9\u8d5e\u3002\n## <br> \u5982\u679c\u4f60\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6211\u975e\u5e38\u9ad8\u5174\u542c\u5230\u4ed6\u3002\n","dc033d5f":"<a id=\"1\"><\/a> <br>\n# INTRODUCTION\n# \u4ecb\u7ecd\n* **\u6df1\u5ea6\u5b66\u4e60:**  \u4e00\u79cd\u4ece\u6570\u636e\u4e2d\u76f4\u63a5\u5b66\u4e60\u7279\u6027\u7684\u673a\u5668\u5b66\u4e60\u7684\u6280\u672f\n* **\u4e3a\u4ec0\u4e48\u6df1\u5ea6\u5b66\u4e60:** \u968f\u7740\u6570\u636e\u603b\u91cf\u4e0d\u65ad\u589e\u957f\uff0c\u673a\u5668\u5b66\u4e60\u7684\u6027\u80fd\u5c31\u4e0d\u90a3\u4e48\u597d\u4e86\uff0c\u800c\u6df1\u5ea6\u5b66\u4e60\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6bd4\u5982\u66f4\u51c6\u786e\u3002\n<a href=\"http:\/\/ibb.co\/m2bxcc\"><img src=\"http:\/\/preview.ibb.co\/d3CEOH\/1.png\" alt=\"1\" border=\"0\"><\/a>\n* **\u4ec0\u4e48\u662f\u5927\u91cf:** \u8fd9\u4e00\u70b9\u5e76\u4e0d\u5bb9\u6613\u56de\u7b54\uff0c\u4f46\u662f\u76f4\u89c9\u4e0a100\u4e07\u4e2a\u6837\u672c\u8db3\u4ee5\u79f0\u4e3a\u201d\u5927\u91cf\u7684\u6570\u636e\u201c\n* **\u6df1\u5ea6\u5b66\u4e60\u7684\u4f7f\u7528\u9886\u57df\uff1a** \u8bed\u97f3\u8bc6\u522b\uff0c\u56fe\u50cf\u5206\u7c7b\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6216\u8005\u63a8\u8350\u7cfb\u7edf\n* **\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u533a\u522b\uff1a** \n    * \u673a\u5668\u5b66\u4e60\u5305\u542b\u4e86\u6df1\u5ea6\u5b66\u4e60\u3002 \n    * \u673a\u5668\u5b66\u4e60\u7684\u7279\u5f81\u9700\u8981\u624b\u5de5\u751f\u6210\u3002\n    * \u800c\u53e6\u4e00\u9762\uff0c\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u5f81\u662f\u76f4\u63a5\u4ece\u6570\u636e\u4e2d\u83b7\u5f97\u3002\n<a href=\"http:\/\/ibb.co\/f8Epqx\"><img src=\"http:\/\/preview.ibb.co\/hgpNAx\/2.png\" alt=\"2\" border=\"0\"><\/a>\n\n<br>\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6570\u636e\u5427\u3002","5ed43b0f":"<a id=\"24\"><\/a> <br>\n## Pytorch\u5e93\u4e2d\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\n* Pytorch\u548ckeras\u4e00\u6837\u662f\u4e00\u79cd\u6846\u67b6\u3002\n* \u5b83\u8ba9\u521b\u5efa\u548c\u5b9e\u73b0\u6df1\u5ea6\u5b66\u4e60\u5757\u66f4\u7b80\u5355\u3002 \n* \u5377\u79ef\u795e\u7ecf\u7f51\u7edc: https:\/\/www.kaggle.com\/kanncaa1\/pytorch-tutorial-for-deep-learning-lovers","918f065c":"* X\u7684\u5f62\u72b6\u662f (410, 64, 64)\n    * 410\u8868\u793a\u6211\u4eec\u6709410\u5f20\u7167\u7247 (\u6807\u5fd70\u548c\u6807\u5fd71\u7684\u7167\u7247)\n    * 64 \u8868\u793a\u6211\u4eec\u7167\u7247\u7684\u5927\u5c0f\u662f64x64(64x64\u50cf\u7d20)\n* Y\u7684\u5f62\u72b6\u662f(410,1)\n    *  410 \u8868\u793a\u6211\u4eec\u6709410\u4e2a\u6807\u7b7e(0\u548c1\u7ec4\u6210) \n* \u8ba9\u6211\u4eec\u628aX,Y\u62c6\u5206\u6210\u8bad\u7ec3\u7ec4\u548c\u6d4b\u8bd5\u7ec4\n    * \u53c2\u6570 test_size = \u6d4b\u8bd5\u5927\u5c0f\u7684\u767e\u5206\u6bd4. \u6d4b\u8bd5\u5360 15% \u548c \u8bad\u7ec3\u5360 85% (\u8bd1\u8005\u6ce8\uff1a\u539f\u6587\u8fd9\u91cc\u6807\u6ce8\u621075%\u662f\u8ba1\u7b97\u9519\u8bef\u3002)\n    * \u53c2\u6570 random_state = 42 \u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u968f\u673a\u79cd\u5b50. \u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u53cd\u590d\u5212\u5206\u8bad\u7ec3\u548c\u6d4b\u8bd5\u7ec4\uff0c\u4ed6\u603b\u662f\u4f7f\u7528\u76f8\u540c\u7684\u8bad\u7ec3\u548c\u6d4b\u8bd5\u5206\u5e03\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684random_state\u53c2\u6570\u503c","e18c3a5b":"<a id=\"5\"><\/a> <br>\n## \u53c2\u6570\u521d\u59cb\u5316\n* \u4ece\u524d\u9762\u7684\u6570\u636e\u51c6\u5907\u9636\u6bb5\uff0c\u4f60\u77e5\u9053\u6211\u4eec\u7684\u8f93\u5165\u662f4096\u50cf\u7d20\u7684\u56fe\u7247\u6570\u7ec4\u3002\uff08\u56fe\u7247\u4fdd\u5b58\u5728 x_train \u4e2d\uff09\n* \u6bcf\u4e2a\u6570\u7ec4\u6709\u81ea\u5df1\u5bf9\u5e94\u7684\u6743\u91cd\u3002\n* \u7b2c\u4e00\u6b65\u662f\u6bcf\u4e2a\u50cf\u7d20\u4e58\u4ee5\u81ea\u5df1\u7684\u6743\u91cd\u3002\n* \u4f46\u662f\uff0c\u95ee\u9898\u662f\u6743\u91cd\u7684\u521d\u59cb\u503c\u5e94\u8be5\u662f\u591a\u5c11\u5462\uff1f \n    * \u5173\u4e8e\u6743\u91cd\u521d\u59cb\u5316\u7684\u4e00\u4e9b\u6280\u672f\uff0c\u6211\u4f1a\u5728\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\u89e3\u91ca\u3002\u4f46\u662f\uff0c\u8fd9\u4e00\u6b21\u521d\u59cb\u5316\u6743\u91cd\u662f0.01 \n    * \u597d\u7684\uff0c\u6743\u91cd\u662f0.01\uff0c\u90a3\u4e48\u6743\u91cd\u6570\u7ec4\u7684\u5f62\u72b6\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u5982\u4f60\u5bf9\u8ba1\u7b97\u56fe\u6240\u7406\u89e3\u7684\u90a3\u6837\uff0c\u5b83\u662f(4096,1)\n    * \u8bd1\u8005\u6ce8\uff1a\u6211\u4eec\u7684\u8bad\u7ec3\u96c6\u7684\u5f62\u72b6\u662fx train:  (4096, 348)\n    * \u5e76\u4e14\u521d\u59cb\u504f\u7f6e\u503c\u662f0.\n* \u8ba9\u6211\u4eec\u6765\u5199\u4ee3\u7801\u5427\u3002\u4e3a\u4e86\u80fd\u5728\u4eba\u5de5\u667a\u80fd\u7f51\u7edc(ANN)\u7b49\u6807\u9898\u4e2d\u53cd\u590d\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\uff0c\u6211\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b9\u6cd5(method).","11bb9d85":"<a id=\"23\"><\/a> <br>\n## Pytorch\u5e93\u4e2d\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc.\n* Pytorch\u548ckeras\u4e00\u6837\u662f\u4e00\u79cd\u6846\u67b6\u3002\n* \u5b83\u8ba9\u521b\u5efa\u548c\u5b9e\u73b0\u6df1\u5ea6\u5b66\u4e60\u5757\u66f4\u7b80\u5355\u3002\n* \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc: https:\/\/www.kaggle.com\/kanncaa1\/pytorch-tutorial-for-deep-learning-lovers","778d466f":"<font color='purple'>\n\u5230\u73b0\u5728\u6211\u4eec\u90fd\u505a\u4e86\u4ec0\u4e48:\n* \u4e3a\u7b26\u53f70\u548c\u7b26\u53f71\u521b\u5efa\u4e86\u6807\u7b7e\n* \u521b\u5efa\u4e86\u5df2\u7ecf\u964d\u7ef4\u7684\u8bad\u7ec3\u548c\u6d4b\u8bd5\u7ec4\n* \u6211\u4eec\u6700\u7ec8\u7684\u8f93\u5165(\u56fe\u50cf)\u548c\u8f93\u51fa\uff08\u6807\u7b7e\u548c\u5206\u7c7b\uff09\u770b\u8d77\u6765\u5982\u56fe\u6240\u793a\n<a href=\"http:\/\/ibb.co\/bWMK7c\"><img src=\"http:\/\/image.ibb.co\/fOqCSc\/3.png\" alt=\"3\" border=\"0\"><\/a>","df6cb9e3":"<a id=\"6\"><\/a> <br>\n## \u524d\u5411\u4f20\u64ad\n* \u6bcf\u4e00\u6b65\u901a\u8fc7\u50cf\u7d20\u8ba1\u7b97\u4ee3\u4ef7\u7684\u8fc7\u7a0b\u90fd\u53ef\u4ee5\u79f0\u4e3a\u524d\u5411\u4f20\u64ad\u3002\n    * z = (w.T)x + b => \u5728\u8fd9\u4e2a\u7b49\u5f0f\u4e2d\u6211\u4eec\u77e5\u9053x\u662f\u50cf\u7d20\u6570\u7ec4\uff0c\u6211\u4eec\u77e5\u9053w(\u6743\u91cd)\u548cb(\u504f\u7f6e\u503c)\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ea\u8981\u901a\u8fc7\u8ba1\u7b97\u5c31\u80fd\u77e5\u9053z\u7684\u503c (T\u662ftranspose\u8f6c\u7f6e\u8fd0\u7b97)\n    * \u7136\u540e\uff0c\u6211\u4eec\u5c06z\u4ee3\u5165sigmoid\u51fd\u6570\u4e2d\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2ay_head\u503c\uff08\u53ef\u80fd\u6027\uff09\u3002\u5982\u679c\u4f60\u7684\u601d\u8def\u770b\u5230\u8fd9\u91cc\u611f\u5230\u6df7\u4e71\uff0c\u90a3\u4e48\u5c31\u518d\u53bb\u770b\u4e00\u773c\u8ba1\u7b97\u56fe\u3002sigmoid\u51fd\u6570\u7684\u516c\u5f0f\u5df2\u7ecf\u5728\u8ba1\u7b97\u56fe\u4e2d\u8868\u793a\u51fa\u6765\u3002\n    * \u7136\u540e\u6211\u4eec\u8fd0\u7b97\u635f\u5931loss(error)\u51fd\u6570\n    * \u4ee3\u4ef7\u51fd\u6570\u662f\u6240\u6709\u635f\u5931\u7684\u603b\u548c \n    * \u8ba9\u6211\u4eec\u4ecez\u548c\u7f16\u5199sigmoid\u65b9\u6cd5\u5f00\u59cb\u5427\u3002\u6211\u4eec\u628az\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u8fd4\u56dey_head\u503c\uff08\u53ef\u80fd\u6027\uff09\u3002 ","6379dc71":"<a id=\"8\"><\/a> <br>\n## \u901a\u8fc7 Skylearn \u505a\u903b\u8f91\u56de\u5f52\n* \u5728sklearn\u5e93\u4e2d, \u6709\u4e2a\u903b\u8f91\u56de\u5f52\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u903b\u8f91\u56de\u5f52\u3002 \n* \u6211\u4e0d\u6253\u7b97\u89e3\u91casklearn\u903b\u8f91\u56de\u5f52\u7528\u5230\u7684\u6bcf\u4e2a\u53c2\u6570\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u8bfb\u8fd9\u7bc7\u6587\u7ae0 http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html\n* \u4f46\u662f\uff0c\u7cbe\u786e\u5ea6\u548c\u6211\u4eec\u524d\u9762\u8ba1\u7b97\u5f97\u5230\u7684\u662f\u4e0d\u4e00\u6837\u7684\u3002\u56e0\u4e3a\u903b\u8f91\u56de\u5f52\u51fd\u6570\u8fd8\u4f7f\u7528\u4e86\u5176\u4ed6\u5f88\u591a\u6211\u4eec\u6ca1\u6709\u5728\u524d\u9762\u7528\u5230\u7684\u7279\u6027\uff0c\u6bd4\u5982\u4e0d\u540c\u7684\u4f18\u5316\u53c2\u6570\u548c\u8c03\u6574\u3002\n* \u8ba9\u6211\u4eec\u5bf9\u903b\u8f91\u56de\u5f52\u4e0b\u4e2a\u7ed3\u8bba\uff0c\u7136\u540e\u5f00\u59cb\u4eba\u5de5\u667a\u80fd\u7f51\u7edc\u90e8\u5206\u5427\u3002","425dc60d":"<a id=\"16\"><\/a> <br>\n## \u66f4\u65b0\u53c2\u6570\n* \u66f4\u65b0\u53c2\u6570\u548c\u903b\u8f91\u56de\u5f52\u662f\u4e00\u6837\u7684\n* \u6211\u4eec\u5176\u5b9e\u548c\u903b\u8f91\u56de\u5f52\u4e00\u6837\u5e72\u4e86\u5927\u91cf\u7684\u5de5\u4f5c\u3002","8904d4ac":"<a id=\"15\"><\/a> <br>\n## \u540e\u5411\u4f20\u64ad\n* \u5982\u4f60\u6240\u77e5\uff0c\u540e\u5411\u4f20\u64ad\u9700\u8981\u6c42\u5bfc\u3002\n* \u5982\u679c\u4f60\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\uff0c\uff08\u6211\u9700\u8981\u7528\u8bf4\u6765\u8bb2\u89e3\uff09\uff0c\u8bf7\u770b youtube \u89c6\u9891\n* \u4f46\u662f\u903b\u8f91\u662f\u4e00\u6837\u7684, \u8ba9\u6211\u4eec\u6765\u5199\u4ee3\u7801\u5427\u3002"}}