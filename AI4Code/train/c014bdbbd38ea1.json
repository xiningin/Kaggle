{"cell_type":{"8fb1b2e4":"code","3869d911":"code","581f4b3f":"code","05dccd99":"code","2d4fb49c":"code","39531266":"code","c45c7d67":"code","75ccf53f":"code","d9276dc7":"code","e6e970ae":"code","cb0b180d":"code","cf92f897":"code","d8695939":"code","e105298a":"code","f624a112":"code","cda8414e":"code","22e22b7f":"code","a7eca533":"code","a8f18e97":"code","12d76fb1":"code","af84cdd0":"code","887ab7f3":"code","e13484ac":"code","63a5aaf9":"code","c2b80869":"code","e29ffc3c":"code","a8ce1fb2":"code","b017af6c":"code","d8b160f1":"code","072e1213":"code","6cfd4a91":"code","5814c272":"code","db9e3413":"code","7aa1ec9d":"code","6ffd7948":"code","bf1b5cf9":"code","4854c615":"code","49dbcb70":"code","26b4f6a0":"code","530e5a27":"code","0a87be57":"code","dc7da1ec":"code","d336fc85":"code","748ade5d":"code","b58f319b":"code","5fa12120":"code","2309e0f0":"code","281547c6":"markdown","58202b75":"markdown","cbbb0de6":"markdown","a67e64c2":"markdown","6783cb0f":"markdown","ed0ef434":"markdown","b71ecd3a":"markdown","71739e79":"markdown","62de4c12":"markdown","a7e1cba5":"markdown","6ddb02f1":"markdown","211c6140":"markdown","11163587":"markdown","32f42363":"markdown","8b7753b7":"markdown","72d053f4":"markdown","38ced287":"markdown","b7b344dc":"markdown","02817b6b":"markdown","ddec18a4":"markdown","12b39940":"markdown","a66c0174":"markdown","a3a3f058":"markdown","cdc6616f":"markdown","be9b76a5":"markdown","bb954f58":"markdown","6a8182ea":"markdown","44eafe95":"markdown","44933904":"markdown","557a98f4":"markdown","d10b73fb":"markdown","6dace141":"markdown","5d0f611a":"markdown","39fbaf05":"markdown","e2ff6bb1":"markdown","9b622b21":"markdown","442a97bf":"markdown","c6e33d1e":"markdown","baf8de8b":"markdown","a0b257d1":"markdown","6a000750":"markdown"},"source":{"8fb1b2e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.\n","3869d911":"# load data\ndf = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\n#check columns' names\ndf.columns","581f4b3f":"#column rename \ndf.rename(columns = {'math score':'math_score','reading score':'reading_score', 'writing score':'writing_score'},inplace =True)\ndf.rename(columns = {'race\/ethnicity':'race_ethnicity', 'parental level of education':'parental_level_of_education','test preparation course':'test_preparation_course'},inplace = True)","05dccd99":"#check first 5 entries\ndf.head()","2d4fb49c":"#check basic statistics values\ndf.describe()","39531266":"df.info()","c45c7d67":"category1 = [\"gender\",\"race_ethnicity\",\"parental_level_of_education\",\"lunch\",\"test_preparation_course\"]\nfor i in category1:\n    \n    plt.figure(figsize = (9,15))\n    sns.set_style(\"whitegrid\") #for grid background\n    sns.catplot(x=i, kind=\"count\", palette=\"ch:.25\", dodge=True, data=df)\n    plt.xticks(rotation= 90)\n    plt.ylabel(\"Frequency\")\n    plt.title(i)\n    plt.show()\n   \n ","75ccf53f":"#new mean of scores column\ndf[\"meanofscores\"] = (df[\"math_score\"]+df[\"reading_score\"]+df[\"writing_score\"])\/3\ndf.head()","d9276dc7":"numericVar = [\"math_score\", \"reading_score\", \"writing_score\",\"meanofscores\"]\nfor n in numericVar:\n    sns.set(style=\"whitegrid\") #for grid background\n    ax = sns.distplot(df[n], color=\"y\")\n    plt.show()\n    ","e6e970ae":"#gender vs meanofscore\ndf[[\"gender\",\"meanofscores\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","cb0b180d":"df[[\"race_ethnicity\",\"meanofscores\"]].groupby([\"race_ethnicity\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","cf92f897":"df[[\"lunch\",\"meanofscores\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","d8695939":"df[[\"parental_level_of_education\",\"meanofscores\"]].groupby([\"parental_level_of_education\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","e105298a":"df[[\"test_preparation_course\",\"meanofscores\"]].groupby([\"test_preparation_course\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","f624a112":"def detect_outliers(df, features):\n    outlier_indices = []\n    for c in features:\n        #1st quartile\n        Q1 = np.percentile(df[c],25)\n        #3rd quartile\n        Q3 = np.percentile(df[c],75)\n        #IQR\n        IQR = Q3-Q1\n        #Outlier step\n        outlier_step = IQR*1.5\n        #detect outlier and their indeces\n        outlier_list_col = df[(df[c]<Q1-outlier_step)|(df[c]>Q3+outlier_step)].index\n        #store indices\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v>1)\n    return multiple_outliers","cda8414e":"df.loc[detect_outliers(df,[\"math_score\",\"reading_score\",\"writing_score\",\"meanofscores\"])]","22e22b7f":"#Before decide to drop all outliers, let look at boxplots\nplt.figure(figsize = (9,12))\nsns.boxplot(x=\"gender\", y=\"meanofscores\", hue=\"lunch\", data=df, palette=\"PRGn\")\nax.legend(loc='lower right',frameon = True) \nsns.set(style=\"whitegrid\")\n\nsns.despine(left=True, bottom=True)\nplt.show()","a7eca533":"#even if we have just little outliers, lets drop all to catch normalization easily\n# drop outliers\ndf = df.drop(detect_outliers(df,[\"math_score\",\"reading_score\",\"writing_score\",\"meanofscores\"]),axis = 0).reset_index(drop = True)","a8f18e97":"#missing value check codes; we will check meaningless value like \"-\" or losts of zero\n#but our data set has none of them\n#df[\"math score\"].value_counts()","12d76fb1":"#df[\"reading score\"].value_counts()","af84cdd0":"#df[\"writing score\"].value_counts()","887ab7f3":"#df[\"meanofscores\"].value_counts()","e13484ac":"#to check drop\ndf.info()","63a5aaf9":"#race success ratio\nrace_list = list(df['race_ethnicity'].unique()) # for finding each rece type\nrace_success_ratio = [] #to sort these values\nfor i in race_list:\n    x = df[df['race_ethnicity'] == i]\n    race_success_rate = sum(x.meanofscores)\/len(x)\n    race_success_ratio.append(race_success_rate)\n#for the ratio, we will create new data set\ndata = pd.DataFrame({'race_list':race_list, 'race_success_ratio':race_success_ratio})\n#sort our data\nnew_index = (data['race_success_ratio'].sort_values(ascending = False)).index.values\nsorted_data = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(10,5))\nsns.barplot(x = sorted_data['race_list'],y = sorted_data['race_success_ratio'],palette=\"ch:.25\")\nplt.xticks(rotation=0)\nplt.xlabel('race\/ethnicity')\nplt.ylabel('success ratio')\nplt.title('Success rate given race\/ethnicity')\nsns.set(style=\"whitegrid\")\nax.set(xlim=(0, 24))\nsns.despine(left=True, bottom=True)","c2b80869":"df[[\"race_ethnicity\",\"meanofscores\"]].groupby([\"race_ethnicity\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","e29ffc3c":"#make meanofscore integer\ndf['meanofscores'] = df['meanofscores'].astype('int')\n# calculate score interval and add new column\ndf['grading_scale'] = ['A ' if 100>=i>=93 else 'A-' if 92>=i>=90 else 'B+' if 89>=i>=87 else 'B ' if 86>=i>=83 else 'B-' if 82>=i>=80 else 'C+' if 79>=i>=77 else 'C ' if 76>=i>=73 else 'C-' if 72>=i>=70 else 'D+' if 69>=i>=67 else 'D ' if 66>=i>=63 else 'D-' if 62>=i>=60 else 'F ' for i in df.meanofscores]","a8ce1fb2":"df['grading_scale'].value_counts()","b017af6c":"grade_list = list(df['grading_scale'].unique()) # for finding each grade type\ngrade_ratio = [] #to sort these values\nfor i in grade_list:\n    x = df[df['grading_scale'] == i]\n    grade_rate = sum(x.meanofscores)\n    grade_ratio.append(grade_rate)\n#for the ratio, we will create new data set\ndata = pd.DataFrame({'grade_list':grade_list, 'grade_ratio':grade_ratio})\n#sort our data\nnew_index = (data['grade_ratio'].sort_values(ascending = False)).index.values\nsorted_data = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(10,5))\n\nsns.barplot(x = sorted_data['grade_ratio'] ,y = sorted_data['grade_list'],palette=\"pastel\")\nplt.xticks(rotation=0)\nplt.xlabel('Sum of Grade')\nplt.ylabel('Grade Scale')\nplt.title('Sum of Grade  given grade scale')\nsns.set(style=\"whitegrid\")\nax.set(xlim=(0, 24))\nsns.despine(left=True, bottom=True)\n","d8b160f1":"df[[\"parental_level_of_education\",\"meanofscores\"]].groupby([\"parental_level_of_education\"], as_index = False).mean().sort_values(by=\"meanofscores\",ascending = False)","072e1213":"math_score_count =Counter(df.math_score)\nmost_common_scores = math_score_count.most_common(15)\nprint(most_common_scores)","6cfd4a91":"math_score_count =Counter(df.math_score)\nmost_common_scores = math_score_count.most_common(15)\n\nx,y = zip(*most_common_scores)\nx,y = list(x),list(y)\n\n# visualization\nplt.figure(figsize=(10,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Most Common Scores')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Score')\nsns.set(style=\"whitegrid\")\n\nsns.despine(left=True, bottom=True)","5814c272":"plt.subplots(figsize =(15,10))\nax = sns.pointplot(x=\"test_preparation_course\", y=\"meanofscores\", hue=\"lunch\",\n                   data=df,\n                   markers=[\"o\", \"x\"],\n                   linestyles=[\"-\", \"--\"])\nsns.set(style=\"whitegrid\")\n\nsns.despine(left=True, bottom=True)","db9e3413":"\n\ng = sns.jointplot( 'math_score','reading_score', data = df, kind=\"kde\", space=0, color=\"g\") #kde: kernel density estimation #size: graph size\nsns.set(style=\"whitegrid\")\nplt.savefig('graph.png')#it is related to kaggle notebook visual\nplt.show()\n\n","7aa1ec9d":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\n\ng = sns.jointplot(\"math_score\", \"reading_score\", data=df, kind=\"reg\")\nsns.set(style=\"whitegrid\")\nplt.show()","6ffd7948":"#make meanofscore integer\ndf['meanofscores'] = df['meanofscores'].astype('int')\n# calculate score interval and add new column\ndf['grading_scale2'] = ['A ' if 100>=i>=90 else 'B' if 89>=i>=80 else 'C' if 79>=i>=70  else 'D' if 69>=i>=60 else 'F ' for i in df.meanofscores]","bf1b5cf9":"df.grading_scale2.value_counts()","4854c615":"labels = df.grading_scale2.value_counts().index\n\nexplode = [0.1,0,0,0,0]\n\nsizes= df.grading_scale2.value_counts().values\n\n#visualization\n\n#add colors\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99','#ffcc00']\n\nplt.figure(figsize = (8,8))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nplt.title('Percentage of Grade Scale',color = 'grey',fontsize = 15)\n\n\nplt.show()","49dbcb70":"sns.lmplot(x='math_score', y='writing_score',data=df)\nsns.set(style=\"whitegrid\")\n\nplt.show()","26b4f6a0":"sns.kdeplot(df.math_score, df.reading_score, shade=True,cut=3)\nsns.set(style=\"whitegrid\")\nplt.show()","530e5a27":"\nsns.violinplot(data=df, palette=\"cool\", inner=\"points\")\nsns.set(style=\"whitegrid\")\nplt.show()","0a87be57":"f,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"white\", fmt= '.1f',ax=ax)\nplt.show()","dc7da1ec":"plt.figure(figsize = (8,8))\nplt.xticks(rotation=90)\nsns.set(style=\"whitegrid\")\nsns.swarmplot(x=\"parental_level_of_education\", y=\"meanofscores\",hue=\"grading_scale2\", data=df)\nax.legend(loc='lower right',frameon = True) \nplt.show()","d336fc85":"plt.figure(figsize = (8,8))\nplt.xticks(rotation=90)\nsns.set(style=\"whitegrid\")\nsns.swarmplot(x=\"test_preparation_course\", y=\"meanofscores\",hue=\"grading_scale2\", data=df)\nax.legend(loc='lower right',frameon = True) \nplt.show()","748ade5d":"plt.figure(figsize = (8,8))\nplt.xticks(rotation=90)\nsns.set(style=\"whitegrid\")\nsns.swarmplot(x=\"lunch\", y=\"meanofscores\",hue=\"grading_scale2\", data=df)\nax.legend(loc='lower right',frameon = True) \nplt.show()","b58f319b":"sns.pairplot(df)\nplt.show()","5fa12120":"#Count Plot\nplt.figure(figsize=(10,7))\nsns.countplot(df.grading_scale)\nplt.title('Number of Each Grade',color = 'grey',fontsize=15)\nplt.show()","2309e0f0":"#Bar Plot\ngrade = df.grading_scale.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=grade.index,y=grade.values)\nplt.title('Number of Each Grade',color = 'grey',fontsize=15)\nplt.show()","281547c6":"<a id = \"2\"><\/a><br>\n<font color='grey'>\n## Load and check data","58202b75":"<font color='grey'>\n    <a id = \"18\"><\/a><br>\n  8. Distributions Shape of Scores\n    * Violin Plot","cbbb0de6":"<font color='grey'>\n    <a id = \"14\"><\/a><br>\n5. Relation between math scores and reading scores\n  * Joint Plot","a67e64c2":"<font color='grey'>\nAs we seen the above table, female children, group E children, children who have parents<br>graduated from master's degree, children who have standard lunch, and children who<br>completed their test preparation course have higher mean score. But we need to<br>further statistical tests to say these differences meaningful statistically.","6783cb0f":" <font color='grey'>\n    <a id = \"16\"><\/a><br>\n7. Correlation between Math Score and Writing Score\n * LM Plot\n","ed0ef434":"<font color='grey'>\n    <a id = \"12\"><\/a><br>\n3. Most common 15 scores<br>\n   * Bar Plot","b71ecd3a":" <font color='grey'>\n    <a id = \"17\"><\/a><br>\n  8. Correlation between Math Score and Reading Score\n    * Kde Plot","71739e79":"<font color='grey'>\n    <a id = \"10\"><\/a><br>\n* Effect of Race\/Ethnicity and Parental Level of Education<br>\n  * Bar Plot","62de4c12":"<font color='grey'>\nIt is clearly seen that completed test preparation course and eating lunch have positive effect on scores. This means that children who completed test course and eat lunch have higher possibility to get higher score than others.","a7e1cba5":"<font color='grey'>\nEven if group E has highest success rate, the other ratios are also similar so we cannot say ethnicity important factor on scores level.","6ddb02f1":"<font color='grey'>\nwe can see clearly children who have lunch have higher scores.","211c6140":"<font color='grey'>\n## Conclusion\nLet try to answer the questions which we mentioned on introduction.\n    \n- How effective is the test preparation course?<br>\n[Test preparation course completed VS Test preparation course none](#13) shows us test preparation course has positive effect on scores. [Distribution of Mean scores according to Categorical Variables with Grade Scale](#20) also shows that the test preparation course is the most effective factor.\n\n- Which major factors contribute to test outcomes?<br>\n [Effect of Race\/Ethnicity and Parental Level of Education](#10) show us Race is not a major factor. [Box Plot](#8) shows that children who have lunch have higher score, so lunch affect children's success.\n\n- What would be the best way to improve student scores on each test?<br>\n[Distribution of Mean scores according to Categorical Variables with Grade Scale](#20) shows us the best way to improve students scores on tests is getting test preparation course.\n\n- What patterns and interactions in the data can you find?<br>\n[Relation between math scores and reading scores](#14)<br>\n[Distributions Shape and Correlation between Scores](#21)<br>\nThese graphs show that all scores have positive correlation each other.","11163587":"<font color='grey'>\nThese graphs shows that both lunch and test preparation course have positive effect on getting better scores. \nRemarkbly, even if the number of children who got test preparation course lower than others, their test scores higher than others. \n It seems to the best thing to improve test score get the preparation course. However, if we want to prove this, we need to do some statistical tests.","32f42363":"<font color='grey'>\n    <a id = \"20\"><\/a><br>\n  10. Distribution of Mean scores according to Categorical Variables with Grade Scale\n    * Swarm Plot","8b7753b7":"\n<font color='grey'>\n### **A summary comment on basic statistic values:**<br>\n    \nEven if mean of reading score is higher than mean of others, all scores are very close each other. <br>Additionally, because all means and medians are very close, it seems to scores have a balanced distrubition.","72d053f4":"<a id = \"1\"><\/a><br>\n<font color='grey'>\n## Load necessary dictionaries","38ced287":"<font color='grey'>\n    <a id = \"21\"><\/a><br>\n  11. Distributions Shape and Correlation between Scores\n    * Pair Plot","b7b344dc":"<a id = \"5\"><\/a><br>\n<font color='grey'>\n### Numerical Variables\n    \n   * Histogram","02817b6b":"<font color='grey'>\nint64(3) : math score, reading score, writing score<br>\nobject(5): gender, race\/ethnicity, parental level of education, lunch, test preparation course,<br>\nthere is no missing value\n","ddec18a4":"<a id = \"7\"><\/a><br>\n<font color='grey'>\n## Outlier Detection\n    \n   * Box plot","12b39940":"<font color='grey'>\n    <a id = \"22\"><\/a><br>\n  12. Number of Each Grade(Finding the most common grade)\n    * Count Plot vs Bar Plot","a66c0174":"<a id = \"4\"><\/a><br>\n<font color='grey'>\n### Categorical Variables\n    \n   * Bar Plots\n    ","a3a3f058":"<font color='grey'>\nThese graphs show that all score have positive correlation each other, also distribution of all of them seems to be normal.","cdc6616f":"<font color='grey'>\n    <a id = \"13\"><\/a><br>\n4. Test preparation course completed VS Test preparation course none\n   * Point Plot","be9b76a5":"<font color='grey'>\n# Introduction\nThis data set basically shows that 1000 students information. It has five information about students and 3 types of exams score. Our aim is find if these information affect the score or not. Specifically, we will try to find answers of below questions with visualize seaborn library.\n    \n- How effective is the test preparation course?<br>\n- Which major factors contribute to test outcomes?<br>\n- What would be the best way to improve student scores on each test?<br>\n- What patterns and interactions in the data can you find?<br>\n\n","bb954f58":"<font color='grey'>\nit can be clearly seen that there is positive corelation between scores.","6a8182ea":"<font color='grey'>\nAs you see, some column names have space between words and these spaces can be problem when we are writing codes, like \"df.math score\" , unfortunately, this code does not work because of space. So we will change column names to make our job easier.","44eafe95":"<font color='grey'>\n   ### Variable Descripton\n1. gender: gender of students (male, female)\n1. race\/ethnicity: divided into 3 groups as A,B,C,D,E <br>\n    (The data set has no detailed information about these groups)\n1. parental level of education: graduation level of parents\n1. lunch: Standart or Free\/reduced\n1. test preparation course: none or completed\n1. math score : integer value\n1. reading score: integer value\n1. writing score: integer value","44933904":" <font color='grey'>\n    <a id = \"15\"><\/a><br>\n6. Grade Scale\n  * Pie Chart","557a98f4":"<font color='grey'>\nAs mentioned before, all scores seem to have normal distribution.<br>\nTo general view, firstly we can calculate mean of scores to look effect of each categorical variable.","d10b73fb":"<font color='grey'>\n## Content\n1. [Load necessary dictionaies](#1)\n1. [Load and Check Data](#2)\n1. [Univariate Variable Analysis](#3)\n    1. [Categorical Variable](#4)\n       * [Bar plot](#4)\n    1. [Numerical Variable](#5)\n       * [Histogram](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n    * [Box plot](#8)\n1. [Some noticeable ratios](#9)\n    1. [Effect of Race\/Ethnicity and Parental Level of Education](#10)<br>\n      * [Bar Plot](#10)\n    1. [Grade Scale with sum of scores](#11)\n      * [Horizontal bar plot](#11)\n    1. [Most common 15 scores](#12)\n      * [Bar Plot](#12)\n    1. [Test preparation course completed VS Test preparation course none](#13)\n      * [Point Plot](#13)\n    1. [Relation between math scores and reading scores](#14)\n      * [Joint Plot](#14)\n    1. [Grade Scale](#15)\n      * [Pie Chart](#15)\n    1. [Correlation between scores](#16)\n      * [LM Plot](#16)\n    1. [Correlation between Math Score and Reading Score](#17)\n      * [Kde Plot](#17)\n    1. [Distributions Shape of Scores](#18)\n      * [Violin Plot](#18)\n    1. [Correlation Map](#19)\n      * [Heat map](#19)\n    1. [Distribution of Mean scores according to Categorical Variables with Grade Scale](#20)\n      * [Swarm Plot](#20)\n    1. [Distributions Shape and Correlation between Scores](#21)\n      * [Pair Plot](#21)\n    1. [Number of Each Grade(Finding the most common grade)](#22)\n      * [Count Plot vs Bar Plot](#22)\n    \n    \n\n","6dace141":"<font color='grey'>\n    <a id = \"9\"><\/a><br>\n## Some noticeable ratios","5d0f611a":"<font color='grey'>\nThese bar plots give us information about each categoric variables.<br>\n    <br>\n     **Gender:** Even if females are higher than males, the numbers close each other.<br>\n    <br>\n     **Race\/Ethnicty:** while the group C has the highest number, Group D, Group B, Group E and Group A come respectively behind Group C.<br>\n    <br>\n     **Parental level of Education:** The highest proportion is belong to parents who are graduated from some college. Also, the number of parents who have assocciate's degree has nearly same number of the highest one. Minority of parents are graduated from masters.<br>\n    <br>\n    ** Lunch:** While most of children have a lunch, nearly third one of children free from lunch.<br>\n    <br>\n     **Test preparation course:** On the contrary lunch rates, nearly third one of children completed test preparetion course.","39fbaf05":"<font color='grey'>\n    <a id = \"11\"><\/a><br>\n2. Grade Scale with sum of scores\n   * horizontal bar plot","e2ff6bb1":"<font color='grey'>\n    <a id = \"8\"><\/a><br>\n### Box Plot","9b622b21":"<font color='grey'>\n    <a id = \"19\"><\/a><br>\n  9. Correlation Map\n    * Heat map","442a97bf":"<a id = \"3\"><\/a><br>\n<font color='grey'>\n## Univariate Variable Analysis\n       \n   * **Categorical Variables:** gender, race\/ethnicity, parental level of education,<br> lunch, test preparation course\n   * **Numerical Variables:** math score, reading score, writing score","c6e33d1e":"<font color='grey'>\nThis graph clearly show that parental level of education has no effect on scores, all distrubution of parental level of education seems to be similar.","baf8de8b":"<a id = \"6\"><\/a><br>\n<font color='grey'>\n### Basic Data Analysis\n    \n* gender vs meanofscores\n* race\/ethnicity vs meanofscores\n* parental level of education vs meanofscores \n* lunch vs meanofscores\n* tes preparation course vs meanofscores","a0b257d1":"<font color='grey'>\nBefore further analysis, we need to find outlier values if there exists.","6a000750":"<font color='grey'>\nThis graphs show that majority of students got F. However [Most common 15 scores](#12) also shows that these majority of F points are 58 and 59."}}