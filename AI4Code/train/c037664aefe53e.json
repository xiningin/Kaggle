{"cell_type":{"28e3bff2":"code","7a61bc5f":"code","03eba7e2":"code","a3e19ef9":"code","4edc4ec7":"code","00f272df":"code","6dc50c09":"code","d6e19acb":"code","fefb6fcb":"code","8eaaaa31":"code","20238181":"code","4d75f6f0":"code","c1954a83":"code","c5b018e0":"code","cd429a04":"code","274b7ed8":"code","900078f3":"markdown","04743c55":"markdown","7e34c330":"markdown","83e4f77a":"markdown","f19aa3d7":"markdown","25404633":"markdown","d67b54c7":"markdown","b946f92a":"markdown","858f9b56":"markdown","84554b77":"markdown","ae61bff5":"markdown"},"source":{"28e3bff2":"import numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt # graphical representation\nimport seaborn as sns\n%matplotlib inline","7a61bc5f":"# Getting the data\n# Reading the data as df\nad_data = pd.read_csv(\"\/kaggle\/input\/advertising\/advertising.csv\")\nad_data.head()","03eba7e2":"# data description\nad_data.info()\n# no null values","a3e19ef9":"# Statical Description\nad_data.describe()","4edc4ec7":"# Age Distribution using histogram\nad_data['Age'].hist(bins=35)","00f272df":"# Area income as per age\nsns.jointplot(x= 'Age',y = 'Area Income',data=ad_data)","6dc50c09":"# Daily time spend on website as per age\n\nsns.jointplot(x='Age',y='Daily Time Spent on Site', data= ad_data, kind = 'kde', color ='red')","d6e19acb":"# Joint plot for daily time spend and daily internet use\n\nsns.jointplot(x='Daily Time Spent on Site',y='Daily Internet Usage',data = ad_data )\n# seems like formation of cluster","fefb6fcb":"# Pair plot for the whole data set based on y(clicked on ad)\nsns.pairplot(ad_data, hue= 'Clicked on Ad')","8eaaaa31":"#from sklearn.model_selection import train_test_split\nad_data.columns","20238181":"# Selecting x and y \n# x is usually the input and y is output\ny = ad_data['Clicked on Ad']\n\n# need to remove string data \nx = ad_data[['Daily Time Spent on Site', 'Age', 'Area Income','Daily Internet Usage', 'Male']]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=101)","4d75f6f0":"from sklearn.linear_model import LogisticRegression\nlogit = LogisticRegression()","c1954a83":"# Fitting Logistic regression on our training data\nlogit.fit(x_train,y_train)","c5b018e0":"ad_pred = logit.predict(x_test)","cd429a04":"# Creating a Classification report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test,ad_pred))\n# 93% accuracy","274b7ed8":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,ad_pred))","900078f3":"**Train and fit Logistic Regression Model on the training set**","04743c55":"This data set contains the following:\n* 'Daily Time Spent on Site': time Spend by the consumer on site(minutes).\n* 'Age': age of cumtomer (years).\n* 'Area Income': Avg. Income of geographical area of consumer\n* 'Daily Internet Usage': Avg. minutes a day consumer is on the internet\n* 'Ad Topic Line': Headline Topic of the advertisement\n* 'City': consumer's city\n* 'Male': Catogerical male Column\n* 'Country': Country of consumer\n* 'Timestamp': Time at which consumer clicked on Ad or closed window\n* 'Clicked on Ad': 0 or 1 indicated weather Ad was clicked or not\n","7e34c330":"# Exploratory Data Analysis(E.D.A)\nUsing Seaborn ","83e4f77a":"Importing required libraries","f19aa3d7":"**Inspiration**\nExplore the data to find predict who is more likely to click the add!","25404633":"# [Logistic Regression](http:\/\/https:\/\/en.wikipedia.org\/wiki\/Logistic_regression)","d67b54c7":"**Feature engineering**: Choosing feature which makes sense to our output","b946f92a":"# ** Over & Out**\nDon't forget to **UPVOTE**","858f9b56":"As it is Classification Problem we will use ***Logistic Regression***","84554b77":"**If you find this kernel useful, UPVOTE\u00b6\n**","ae61bff5":"# **Predicting and Evoluating our Model**\nLet's Predict values for our Test Data"}}