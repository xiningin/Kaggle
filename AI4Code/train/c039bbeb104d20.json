{"cell_type":{"997a87f5":"code","4551aed9":"code","370e5618":"code","60279dd1":"code","b5df5cbf":"code","e5c4e4e3":"code","8c190332":"code","7ec07e2e":"code","dc737c96":"code","45bc9c7a":"code","37281771":"code","7823e6a8":"code","e7f79df7":"code","d6c4e73b":"code","099f0a9f":"markdown","e63da335":"markdown"},"source":{"997a87f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import pearsonr, chi2_contingency\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4551aed9":"np.set_printoptions(suppress=True, precision = 2)\ndf = pd.read_csv('..\/input\/nba-games\/NBA all data.csv')","370e5618":"df.info()\ndf['point_diff'] = df['pts'] - df ['opp_pts']","60279dd1":"df_10 = df[df['year_id'] == 2010]\ndf_14 = df[df['year_id'] == 2014]","b5df5cbf":"knick_pts = df_10.pts[df_10['fran_id'] == 'Knicks']\nnets_pts = df_10.pts[df_10['fran_id'] == 'Nets']\nknick_pts_mean = np.mean(knick_pts)\nnets_pts_mean = np.mean(nets_pts)\ndiff_means_2010 = knick_pts_mean - nets_pts_mean","e5c4e4e3":"figure(figsize = (8, 8), dpi=80)\nplt.xlabel('Points')\nplt.ylabel('Times')\nplt.title('Knick Vs Neats Games', fontsize = 16)\nplt.hist(knick_pts, edgecolor = 'black', density = True, alpha = 0.5, color = '#008080', label = 'Knick')\nplt.hist(nets_pts, edgecolor = 'black', density = True, alpha = 0.5, color = '#9400d3', label = 'Neats')\nplt.legend()\nplt.show()","8c190332":"points_2010 = np.mean(df_10.pts)\npoints_2014 = np.mean(df_14.pts)\ndiff_means_years = points_2014 - points_2010","7ec07e2e":"figure(figsize = (8, 8), dpi=80)\nplt.xlabel('Points Throught Years')\nplt.ylabel('Times')\nplt.title('Points ', fontsize = 16)\nplt.hist(df_10.pts, edgecolor = 'black', density = True, alpha = 0.5, color = '#D41313', label = '2010')\nplt.hist(df_14.pts, edgecolor = 'black', density = True, alpha = 0.5, color = '#1382D4', label = '2014')\nplt.legend()\nplt.show()","dc737c96":"figure(figsize = (12, 12), dpi=100)\nsns.set_style('darkgrid')\nsns.set_palette('Set2')\nplt.title('Points by Year')\nsns.boxplot(y = df_10.pts, x = df_10.fran_id)\nplt.xlabel('Teams')\nplt.ylabel('Points')\nplt.xticks(rotation = 90)\n\nplt.show()","45bc9c7a":"print('Frequency')\nlocation_result_freq = pd.crosstab(df_10.game_result, df_10.game_location)\nprint(location_result_freq)\nprint('Proportions')\nlocation_result_proportion = location_result_freq \/ len(df_10)\nprint(location_result_proportion)","37281771":"chi2, pval, dof, expected = chi2_contingency(location_result_proportion)\nprint(expected)\nprint(chi2)","7823e6a8":"cov_forecast_ptsdiff = np.cov(df_10['forecast'], df_10['point_diff'])\nprint(cov_forecast_ptsdiff)","e7f79df7":"correlation_forecast_ptsdiff, p = pearsonr(df_10['forecast'], df_10['point_diff'])\nprint(correlation_forecast_ptsdiff)","d6c4e73b":"figure(figsize = (7, 7), dpi=80)\nplt.scatter(x = df_10['forecast'], y = df_10['point_diff'])\nplt.xlabel('Forecasted Win Prob.')\nplt.ylabel('Point Differential')\nplt.tight_layout()\nplt.show()","099f0a9f":"> # We can identify covariance get in points by the NBA's teams and point difference that it's the marginal covariance.","e63da335":"> # The 'Game Location' and 'Game results' are associated"}}