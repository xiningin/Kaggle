{"cell_type":{"efb7658a":"code","f987ed22":"code","c481af1c":"code","3640867c":"code","edaeb87e":"code","ec28b3e3":"code","73954413":"code","3664cb38":"code","63cc7a87":"code","9999921e":"code","4290324e":"code","1ef02d69":"code","b0f85275":"code","fce5815a":"code","94f41561":"code","af122cb4":"code","256cfd6e":"code","d93d0817":"markdown","ae81b001":"markdown","2b00646a":"markdown","bfe01735":"markdown","00a094aa":"markdown","e1a8bf0f":"markdown","baebb2b1":"markdown","acccacb7":"markdown","d80c7378":"markdown","e65bb5f1":"markdown","f0285def":"markdown","65e6f711":"markdown","89fb30ff":"markdown","ec5873c0":"markdown","f27a2be8":"markdown","34281ab5":"markdown","a31cea12":"markdown","db9f621a":"markdown"},"source":{"efb7658a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nfrom PIL import Image\nimport matplotlib.pyplot as plt\npd.plotting.register_matplotlib_converters()\n%matplotlib inline\nfrom wordcloud import WordCloud, STOPWORDS\n\nimport seaborn as sns# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f987ed22":"#reading date from CSV file\ncsv_file ='\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv'\ndf = pd.read_csv(csv_file,skiprows=[1])","c481af1c":"fig = px.histogram(df, x=\"Q1\",\n        marginal=\"box\",\n        ).update_xaxes(categoryorder=\"category ascending\",)\nfig.show()","3640867c":"#Gender plotly Pie\ngender = df['Q2'].value_counts()\nfig = px.pie(values=gender.values,names=gender.index)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.show()","edaeb87e":"#plotly Chorophleth map\ncountry = df['Q3'].value_counts().reset_index()\nfig = px.choropleth(country, locations=\"index\",\n                    locationmode = 'country names',\n                    color=\"Q3\", # lifeExp is a column of gapminder\n                    hover_name=\"index\", # column to add to hover information\n                     \n                    color_continuous_scale=px.colors.sequential.Blugrn)\n\nfig.show()","ec28b3e3":"#\nrst = df['Q4'].value_counts()\nfig = px.pie(values= rst.values,names=rst.index,labels=False,)\nfig.update_traces(textposition='inside',textinfo='percent+label',showlegend=False)\nfig","73954413":"#plotly HBar\nlang = df.filter(regex='Q7').copy()\ncol_lang = ['Python','R','SQL','C','C++','Java',\n                'Javascript','Julia','Swift','Bash',\n                'MATLAB','None','Other']\nlang.set_axis(col_lang,\n                axis=1,inplace=True)\nlang.fillna(0,inplace=True)\nlang = lang.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_lang = lang.sum().sort_values(ascending=True)\nfig = px.bar(sorted_lang, text='value', labels={'value':'Use on a regular',\n                                                'index':'programming languages'},orientation='h',)\nfig.show()","3664cb38":"#Plotly heatmap \n# corrolation Q7 with it self programming languages use on regular\nfig = px.imshow(lang.corr(),color_continuous_scale='purples')\nfig.show()","63cc7a87":"#plotly HBar\nrst = df['Q8'].value_counts()\nfig = px.pie(values= rst.values,names=rst.index,hole=.4)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.show()","9999921e":"#Data Visual Libs\nvisual = df.filter(regex='Q14').copy()\nvisual.set_axis(['Matplotlib','Seaborn','Plotly \/ Plotly Express',\n                'Ggplot \/ ggplot2','Shiny','D3.js','Altair',\n                'Bokeh','Geoplotlib','Leaflet \/ Folium','None','Other'],\n                axis=1,inplace=True)\nvisual.fillna(0,inplace=True)\nvisual = visual.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_visual = visual.sum()#.sort_values(ascending=True)\nfig = px.bar(sorted_visual, text='value', labels={'value':'Use on a regular',\n                                                'index':'Data visualization libraries'})#,orientation='h',)\nfig.show()","4290324e":"\nml = df.filter(regex='Q16').copy()\nml.set_axis(['Scikit-learn','TensorFlow','Keras','PyTorch',\n                'Fast.ai','MXNet','Xgboost','LightGBM','CatBoost',\n                'Prophet','H2O 3','Caret','Tidymodels',\n                'JAX','None','Other'],\n                axis=1,inplace=True)\nml.fillna(0,inplace=True)\nml = ml.apply(lambda x: [1 if n else 0 for n in x ])\nsorted_ml = ml.sum()#.sort_values(ascending=True)\nfig = px.bar(sorted_ml, text='value', labels={'value':'Use on a regular',\n                                                'index':'machine learning frameworks'})\nfig.show()","1ef02d69":"plt.figure(figsize=(18,7))\nsns.countplot(x=df.iloc[:,1],order=['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54',\n                                    '55-59','60-69','70+'],hue=df.iloc[:,2], palette='Purples_r')","b0f85275":"#Gender destribution with age groups\nage_group = df.groupby(['Q1','Q2'])['Q3'].count().reset_index()\nfig= px.line(age_group ,x='Q1',y ='Q3',color='Q2',labels={'x':'Age Group',\n                                                'y':'Gender'})\nfig.show()","fce5815a":"age = df.filter(regex='Q(7|1$)').copy()\nage.set_axis(['age']+col_lang,axis=1,inplace=True)\nage = age.groupby('age').count()\n\nfig = px.imshow(age,labels={'x':'Programming Language','y':'Age Group'},color_continuous_scale='purples')\nfig.show()","94f41561":"job = pd.DataFrame(df['Q5'].value_counts()).reset_index()\njob.columns = ['Q5', 'count']\n\n\nq=df[['Q5','Q6']]\n\nx= pd.DataFrame(q.groupby('Q5')['Q6'].value_counts())\nx.columns = ['n']\nx.reset_index(inplace=True)\n\nx = x.merge(job, how='left', on='Q5')\nx['count'] = ((x['n']\/x['count'])*100).round(decimals=1)\n\npiv = x.pivot('Q5', 'Q6', 'count')\n\nplt.figure(figsize=(10,8))\nsns.heatmap(piv, annot=True, linewidths=.2, cmap ='Oranges', cbar_kws={'shrink':0.7, 'label':'% responses for Current Role and Code experiences'})\nplt.title('Current Role & code experince written')\nplt.show()","af122cb4":"coding_years = df.filter(regex='Q(10|3$)').copy()\ncoding_years = coding_years.groupby('Q3').count()\ncoding_years.set_axis(['Kaggle Notebooks','Colab Notebooks','Azure Notebooks',\n                'Paperspace \/ Gradient','Binder \/ JupyterHub','Code Ocean',\n                'IBM Watson Studio','Amazon Sagemaker Studio','Amazon EMR Notebooks',\n                'Google Cloud AI Platform Notebooks','Google Cloud Datalab Notebooks',\n                'Databricks Collaborative Notebooks','None','Other'],\n                axis=1,inplace=True)\n\nfig = px.area(coding_years,labels={'value':'Count','variable':'Hosting Notebook'})\nfig.show()","256cfd6e":"plt.figure(figsize=(18,7))\nsns.countplot(x=df.Q15,hue=df.Q15)","d93d0817":"# Inspiring First Programming Language :\n- Q8 What programming language would you recommend an aspiring data scientist to learn first?\n- **Python** without competitor","ae81b001":"# Current Role (Career)& Code Write Experince\n- How many years title have been writing code\/programing? relation with current Role(Career)","2b00646a":"## Age\/Programming Language Relationship\nPrefered Programming Language due to kaggle Age phase users","bfe01735":"# Age \/ Gender Relationship\n**Woman** in 22-24 in peak of it's own line,but **Men** go in peak in 25-29","00a094aa":"# Over View\nWho are Kaggle Users ? and what is programming they use?","e1a8bf0f":"\n# Countries in details\nCountry\/hosted notebook","baebb2b1":"# Countries :\n- most kaggle users according country \n- the india country is most kaggle users ","acccacb7":"# Age : \n- Exmine Data  Most kaggle Users According Age Category\n- most Kaggle Users \"youth\" from 22-39","d80c7378":" What is programming languages mostly programmer know together.\n - corrolation  programming languages with it self use on regular\n\n","e65bb5f1":"# Programming Languages \n- Q7 What programming languages do you use on a regular basis ?\n-  **Python** The Top of Most Language using With Programmers.","f0285def":"# Popular Data Visualization libraries\nThe 1st Prefers Library (MatPlotLib)","65e6f711":"**Kaggle,is an online community of data scientists and machine learning practitioners. Kaggle allows users to find and publish data sets, explore and build models in a web-based data-science environment, work with other data scientists and machine learning engineers, and enter competitions to solve data science challenges.**","89fb30ff":"# Years Used Machine Learning Methods:","ec5873c0":"# Gender Classification","f27a2be8":"# Importing Data Files and Libraries  ","34281ab5":"# Education Level:\nBiggest Kaggle users as Education Exmine (Master & Bachelor) Degree ","a31cea12":"# Contents:\n* **Importing Data And libraries**\n*   **Over View**\n     * Age\n     * Gender Classification\n     * Countries \n     * Education Level\n     * Programming Languages\n     * Inspiring First Programming Language \n     * Popular Data Visualization libraries \n     * Regural ML FramWork Use\n* **Age \/ Gender Relationship**\n* **Age\/Programming Language Relationship**\n* **Current Role (Career)& Code Write Experince**\n* **Countries in details**\n* **Years Used Machine Learning Methods**","db9f621a":"# Regural ML FramWork Use?\n- (**Scikit-learn**) is most user framework"}}