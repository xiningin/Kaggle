{"cell_type":{"9ebb8adb":"code","3e97c34f":"code","c6ca9e0b":"code","10808a60":"code","4fa0afe8":"code","41c5af90":"code","c196fbce":"code","5f34eac2":"code","c97ed1fa":"code","ed5f48ee":"code","4a9ed48b":"code","96f3e2d7":"code","475ba6b4":"code","b68a4632":"markdown","d07b15c0":"markdown","a38a094f":"markdown","abcb2e44":"markdown","89372578":"markdown","1569ac28":"markdown","a909cc74":"markdown","3164c094":"markdown","102f6ac0":"markdown","5cc2ab8c":"markdown","f9f4bd23":"markdown","46ef2c7d":"markdown","f1ad1e8b":"markdown","5c143aec":"markdown","7eb3965b":"markdown","a96785c5":"markdown"},"source":{"9ebb8adb":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.simplefilter(action = 'ignore', category = FutureWarning)\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n\nfrom lwoku import get_accuracy, get_prediction, plot_confusion_matrix, plot_features_importance","3e97c34f":"RANDOM_STATE = 1\nN_JOBS = -1\nN_ESTIMATORS = 2000","c6ca9e0b":"X_train = pd.read_csv('..\/input\/learn-together\/train.csv', index_col='Id', engine='python')\nX_test = pd.read_csv('..\/input\/learn-together\/test.csv', index_col='Id', engine='python')","10808a60":"y_train = X_train['Cover_Type'].copy()","4fa0afe8":"X_train = X_train.drop(['Cover_Type'], axis='columns')","41c5af90":"rf_clf = RandomForestClassifier(n_estimators=N_ESTIMATORS,\n                                min_samples_leaf=100,\n                                verbose=1,\n                                random_state=RANDOM_STATE,\n                                n_jobs=N_JOBS)","c196fbce":"rf_clf.fit(X_train, y_train)","5f34eac2":"y_test_pred = pd.Series(rf_clf.predict(X_test), index=X_test.index)","c97ed1fa":"y_train_pred = get_prediction(rf_clf, X_train, y_train)","ed5f48ee":"accuracy_score(y_train, y_train_pred)","4a9ed48b":"plot_confusion_matrix(y_train, y_train_pred)","96f3e2d7":"plot_features_importance(X_train.columns, rf_clf)","475ba6b4":"y_test_pred.to_csv('submission.csv', header=['Cover_Type'], index=True, index_label='Id')","b68a4632":"## Define","d07b15c0":"## Predict for train set","a38a094f":"# Prepare data","abcb2e44":"# Introduction\n\nThis notebook establishes a baseline to test tactics and see if they improve the score.\nThe results are collected in [Tactic 99. Summary](https:\/\/www.kaggle.com\/juanmah\/tactic-99-summary).\n\nThe model choosen in this notebook is the Random Forest Classifier.\n\nThis model is, on purpose, not optimized.\nIt will be optimized in successive notebooks in this tactic series,\nwhere some tactics will be tested and the results analysed.","89372578":"## Predict","1569ac28":"## Plot features importance","a909cc74":"# Define constants","3164c094":"# Create submission","102f6ac0":"## Fit","5cc2ab8c":"## Accuracy","f9f4bd23":"## Plot confusion matrix","46ef2c7d":"## Define the dependent variable","f1ad1e8b":"# Model","5c143aec":"## Define a training set","7eb3965b":"## Read training and test files","a96785c5":"## Set model parameters"}}