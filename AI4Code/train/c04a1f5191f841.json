{"cell_type":{"9c707d25":"code","53577fa6":"code","19f85610":"code","f1895d3d":"code","9456aeab":"code","6b98e6c9":"code","115afa8b":"code","297e39c4":"code","0ecc0f5f":"code","1d420e81":"code","a962ebbb":"code","c7ebd252":"code","48f92c25":"code","4ded1c46":"code","ad466531":"code","2b3316a5":"code","ded3423e":"code","7f43a3ee":"code","5236e0dd":"code","f64e1f8b":"code","73763b39":"code","0b654071":"code","2e74ead0":"code","12f126c1":"code","1bac6636":"code","ffcdfdaf":"markdown","879c8c70":"markdown","c57d9cf7":"markdown","0c2c2e44":"markdown","e8a76191":"markdown","cc091ed5":"markdown","7fde38a9":"markdown"},"source":{"9c707d25":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53577fa6":"# We will perform Data Ingestion First\n\nTRAIN_PATH='..\/input\/house-prices-advanced-regression-techniques\/train.csv'\nTEST_PATH='..\/input\/house-prices-advanced-regression-techniques\/test.csv'\n\ntrain_data=pd.read_csv(TRAIN_PATH)\ntest_data=pd.read_csv(TEST_PATH)\n\nprint(\"Shape of Train Data is \",train_data.shape)\nprint(\"Shape of Test Data is \",test_data.shape)","19f85610":"train_data.head()","f1895d3d":"test_data.head()","9456aeab":"train_data.isna().sum()[train_data.isna().sum()>0]","6b98e6c9":"train_data.fillna('Unknown',inplace=True)","115afa8b":"test_data.isna().sum()[test_data.isna().sum()>0]","297e39c4":"test_data.fillna('Unknown',inplace=True)","0ecc0f5f":"# Now we will describe the data\n\n# First we will get different dtype columns in the data\nprint('Numeric Type Columns - Train Data\\n')\nprint(list(train_data._get_numeric_data().columns),'\\n\\n')\n\nprint('Categorical Type Columns - Train Data\\n')\nprint(list(set(train_data.columns)-set(train_data._get_numeric_data().columns)),'\\n\\n')\n\nprint('Numeric Type Columns - Test Data\\n')\nprint(list(test_data._get_numeric_data().columns),'\\n\\n')\n\nprint('Categorical Type Columns - Test Data\\n')\nprint(list(set(test_data.columns)-set(test_data._get_numeric_data().columns)),'\\n\\n')\n","1d420e81":"print(\"Training Data Description\\n\")\ntrain_data.describe().transpose()","a962ebbb":"print(\"Testing Data Description\\n\")\ntest_data.describe().transpose()","c7ebd252":"train_data_numeric=list(train_data._get_numeric_data().columns)\ntrain_data_category=list(set(train_data.columns)-set(train_data._get_numeric_data().columns))\n\ntest_data_numeric=list(test_data._get_numeric_data().columns)\ntest_data_category=list(set(test_data.columns)-set(test_data._get_numeric_data().columns))\n                         \n","48f92c25":"oe=OrdinalEncoder()\nfor col in train_data_category:\n    train_data[col]=oe.fit_transform(np.asarray(train_data[col].astype('str')).reshape(-1,1))\nfor col in test_data_category:\n    test_data[col]=oe.fit_transform(np.asarray(test_data[col].astype('str')).reshape(-1,1))\n","4ded1c46":"train_data.head()","ad466531":"test_data.head()","2b3316a5":"l=list(set(train_data._get_numeric_data().columns))\nfor col in l:\n    if(col=='Id'):\n        continue\n    upper_limit = int(train_data[col].mean() + 3*train_data[col].std())\n    lower_limit = int(train_data[col].mean() - 3*train_data[col].std())\n    train_data[col] = np.where(train_data[col]>upper_limit,upper_limit,np.where(train_data[col]<lower_limit,lower_limit,train_data[col]))\n\nfor col in l:\n    plt.figure(figsize=(10,1))\n    sns.boxplot(data=train_data[l],x=train_data[col],orient='h')","ded3423e":"l=list(set(test_data._get_numeric_data().columns))\nfor col in l:\n    if(col=='Id'):\n        continue\n    upper_limit = int(test_data[col].mean() + 3*test_data[col].std())\n    lower_limit = int(test_data[col].mean() - 3*test_data[col].std())\n    test_data[col] = np.where(test_data[col]>upper_limit,upper_limit,np.where(test_data[col]<lower_limit,lower_limit,test_data[col]))\n\nfor col in l:\n    plt.figure(figsize=(10,1))\n    sns.boxplot(data=test_data[l],x=test_data[col],orient='h')","7f43a3ee":"train_data.head()","5236e0dd":"test_data.head()","f64e1f8b":"train_data.corr()","73763b39":"test_data.corr()","0b654071":"from sklearn.neural_network import MLPRegressor\nX=train_data.iloc[:,0:-1]\ny=train_data.loc[0:1459,'SalePrice']\nmodel=MLPRegressor(activation='relu',solver='adam', alpha=0.0001, batch_size='auto', learning_rate='constant')\n\nmodel.fit(X,y)","2e74ead0":"from sklearn.metrics import mean_squared_error\npred=model.predict(test_data)\n\nprint(np.sqrt(mean_squared_error(y[0:1459],pred)))","12f126c1":"df=pd.DataFrame({'Id':test_data['Id'],'SalePrice':pred})\ndf","1bac6636":"df.to_csv('submission.csv',index=False)","ffcdfdaf":"# **HOUSE PRICE PREDICTION**<br>\n\nThis notebook goes through the entire dataset available to us by finding out correlations in data, cleaning it, performing EDA and using these finding a best fit Machine Learning Algorithm to develop a learning equation for the dataset.<br><br>\n\nThe research question we attempt to solve include :<br><br>\n\n1. How is the data structured ?\n2. Does the data have Nulls or Duplicates or Outliers?\n3. How is the distribution of various columns in the data ?\n4. Are columns related to each other ?\n5. Can we reduce the features without affecting the accuracy ?\n6. What is the best sale price of any given house ?\n","879c8c70":"# **DATA CORRELATION**","c57d9cf7":"# **OUTLIER CAPPING OF NUMERIC DATA**","0c2c2e44":"# **DATA CLEANING**","e8a76191":"# **DATA DESCRIPTION**","cc091ed5":"# **REGRESSION USING NEURAL NETWORKS**","7fde38a9":"# **ONE HOT ENCODING OF CATEGORICAL FEATURES**"}}