{"cell_type":{"910f44f1":"code","b26dea45":"code","e6b4e0d4":"code","e44a5dda":"code","ba2b358e":"code","150baf23":"code","f5261caf":"code","8085c116":"code","a4816827":"code","7252c34c":"code","c6bbe1e5":"code","cd32f0c3":"code","8a710c1d":"code","cb7b0e8b":"code","22eda877":"code","1ddf2fb1":"code","5d583a11":"code","1318e4b3":"code","f852859b":"markdown","26b35188":"markdown","3641b0ab":"markdown","2e7bf41d":"markdown","0f398d3f":"markdown","66f35777":"markdown","cdc00a7a":"markdown","a8293b16":"markdown","d6e31d25":"markdown"},"source":{"910f44f1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b26dea45":"df = pd.read_csv('..\/input\/kyphosis-dataset\/kyphosis.csv')","e6b4e0d4":"df.head()","e44a5dda":"sns.pairplot(df,hue='Kyphosis',palette='Set1')","ba2b358e":"from sklearn.model_selection import train_test_split","150baf23":"X = df.drop('Kyphosis',axis=1)\ny = df['Kyphosis']","f5261caf":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","8085c116":"from sklearn.tree import DecisionTreeClassifier","a4816827":"dtree = DecisionTreeClassifier()","7252c34c":"dtree.fit(X_train,y_train)","c6bbe1e5":"predictions = dtree.predict(X_test)","cd32f0c3":"from sklearn.metrics import classification_report,confusion_matrix","8a710c1d":"print(classification_report(y_test,predictions))","cb7b0e8b":"print(confusion_matrix(y_test,predictions))","22eda877":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train, y_train)","1ddf2fb1":"rfc_pred = rfc.predict(X_test)","5d583a11":"print(confusion_matrix(y_test,rfc_pred))","1318e4b3":"print(classification_report(y_test,rfc_pred))","f852859b":"# EDA\n\nWe'll just check out a simple pairplot for this small dataset.","26b35188":" # Kyphosis-Decision Trees and Random Forests","3641b0ab":"# Random Forests\n\nNow let's compare the decision tree model to a random forest.","2e7bf41d":"# Decision Trees\n\nWe'll start just by training a single decision tree.","0f398d3f":"# Train Test Split\n\nLet's split up the data into a training set and a test set!","66f35777":"# Prediction and Evaluation \n\nLet's evaluate our decision tree.","cdc00a7a":"# Import Libraries","a8293b16":"MODEL COMPLETE!!!","d6e31d25":"# Get the Data"}}