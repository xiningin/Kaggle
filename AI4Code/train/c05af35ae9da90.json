{"cell_type":{"b2766ddf":"code","cae1bdfc":"code","0c8bacfa":"code","a74d977c":"code","db68a447":"code","ba6c3653":"code","02e92cc8":"code","04a6a21a":"code","bf56103b":"code","a342fbb4":"code","5c157b92":"code","258d0377":"code","7e2a0883":"markdown","44bbde56":"markdown","f44a4cf8":"markdown","40c00803":"markdown","003fbabe":"markdown","9a1b2eff":"markdown"},"source":{"b2766ddf":"import glob\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nclasses_names = ['cats', 'dogs']\nIMG_SIZE = 224","cae1bdfc":"# read the data from directory\ndef get_data_from_folder(path):\n    data = []\n    \n    for class_name in classes_names:\n        try : \n#             print(class_name)\n            files = glob.glob(path + \"\/\" + class_name + '\/*') # Get files in each folder.\n#             print(files)\n            for f in files:\n#                 print(f)\n                img = cv2.imread(f) # Read the image\n                img = cv2.resize(img, (IMG_SIZE, IMG_SIZE)) # Resize the image\n                data.append([np.array(img), classes_names.index(class_name)]) # Append Image array and corresponding label to data.\n        except:\n            pass\n    np.random.shuffle(data)\n    return data\n        ","0c8bacfa":"train_path = '..\/input\/dogs-cats-images\/dataset\/training_set' \n\ntraining_data = get_data_from_folder(train_path)\n\ntraining_data[:1]","a74d977c":"len(training_data)","db68a447":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n\nimage_size = (224, 224)\nbatch_size = 32","ba6c3653":"train_ds = image_dataset_from_directory(\n    train_path,\n    labels = \"inferred\",\n    label_mode = 'int',\n    validation_split = 0.2,\n    subset = \"training\",\n    seed = 1337,\n    image_size = image_size,\n    batch_size = batch_size,\n)\n\nval_ds = image_dataset_from_directory(\n    train_path,\n    labels = \"inferred\",\n    label_mode = 'int',\n    validation_split = 0.2,\n    subset = \"validation\",\n    seed = 1337,\n    image_size = image_size,\n    batch_size = batch_size,\n)","02e92cc8":"train_ds","04a6a21a":"val_ds","bf56103b":"import matplotlib.pyplot as plt\n\nplt.figure(figsize = (10,10))\n\nfor images, labels in train_ds.take(1):\n    for i in range(9):\n        ax = plt.subplot(3,3,i+1)\n        plt.imshow(images[i].numpy().astype('uint'))\n        plt.title(int(labels[i]))\n        plt.axis(\"off\")\n        \n        ","a342fbb4":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale = 1.\/255., # Rescaling\n    rotation_range = 40, # for augmentation\n    width_shift_range = 0.2,\n    height_shift_range = 0.2,\n    shear_range = 0.2,\n    zoom_range = 0.2,\n    horizontal_flip = True\n)\n\n","5c157b92":"train_generator = train_datagen.flow_from_directory(\n    train_path,\n    batch_size = batch_size,\n    class_mode = \"binary\", # As we have two classes.\n    target_size = image_size\n)","258d0377":"train_generator","7e2a0883":"Once we have the data.. we can start with the model training.","44bbde56":"# Method 2 : Using Keras","f44a4cf8":"## Import necessary libraries","40c00803":"# Method 1 : Without any help from Tensorflow \/ Keras\n","003fbabe":"# Visualize the data","9a1b2eff":"# Method 3 : Using ImageData Generator to lad data."}}