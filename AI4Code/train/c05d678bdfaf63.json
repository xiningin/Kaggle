{"cell_type":{"37f8a88d":"code","4f99ecce":"code","4f3a7ef2":"code","7b85889e":"code","b796b1d5":"code","7895aac9":"code","265c4c5d":"code","e889b822":"code","7d4371c9":"code","ff543fdf":"markdown","f938e2c6":"markdown","442d59c5":"markdown","ca9ba3b0":"markdown","a59125d0":"markdown","b19e40ed":"markdown"},"source":{"37f8a88d":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\ntf.compat.v1.set_random_seed(0)\nfrom tensorflow import keras\nimport numpy as np\nnp.random.seed(0)\nimport itertools\nfrom keras.preprocessing.image import image_dataset_from_directory\nfrom tensorflow.keras.layers.experimental.preprocessing import Rescaling\nfrom sklearn.metrics import precision_score, accuracy_score, recall_score, confusion_matrix, ConfusionMatrixDisplay","4f99ecce":"train_gen = image_dataset_from_directory(directory=\"..\/input\/new-plant-diseases-dataset\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/train\",\n                                         image_size=(256, 256))\ntest_gen = image_dataset_from_directory(directory=\"..\/input\/new-plant-diseases-dataset\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/valid\",\n                                        image_size=(256, 256))\n\nrescale = Rescaling(scale=1.0\/255)\ntrain_gen = train_gen.map(lambda image,label:(rescale(image),label))\ntest_gen  = test_gen.map(lambda image,label:(rescale(image),label))","4f3a7ef2":"model = keras.Sequential()\n\nmodel.add(keras.layers.Conv2D(32,(3,3),activation=\"relu\",padding=\"same\",input_shape=(256,256,3)))\nmodel.add(keras.layers.Conv2D(32,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.MaxPooling2D(3,3))\n\nmodel.add(keras.layers.Conv2D(64,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.Conv2D(64,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.MaxPooling2D(3,3))\n\nmodel.add(keras.layers.Conv2D(128,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.Conv2D(128,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.MaxPooling2D(3,3))\n\nmodel.add(keras.layers.Conv2D(256,(3,3),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.Conv2D(256,(3,3),activation=\"relu\",padding=\"same\"))\n\nmodel.add(keras.layers.Conv2D(512,(5,5),activation=\"relu\",padding=\"same\"))\nmodel.add(keras.layers.Conv2D(512,(5,5),activation=\"relu\",padding=\"same\"))\n\nmodel.add(keras.layers.Flatten())\n\nmodel.add(keras.layers.Dense(1568,activation=\"relu\"))\nmodel.add(keras.layers.Dropout(0.5))\n\nmodel.add(keras.layers.Dense(38,activation=\"softmax\"))\n\nopt = keras.optimizers.Adam(learning_rate=0.0001)\nmodel.compile(optimizer=opt,loss=\"sparse_categorical_crossentropy\",metrics=['accuracy'])\nmodel.summary()","7b85889e":"ep = 7\nhistory = model.fit_generator(train_gen,\n          validation_data=test_gen,\n          epochs = ep)","b796b1d5":"plt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nplt.title(\"Train and Validation Loss\")\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Loss\")\nplt.plot(range(1,8),history.history['loss'],label=\"Train Loss\")\nplt.plot(range(1,8),history.history['val_loss'], label=\"Validation Loss\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.title(\"Train and Validation Accuracy\")\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Accuracy\")\nplt.plot(range(1,8),history.history['accuracy'], label=\"Train Accuracy\")\nplt.plot(range(1,8),history.history['val_accuracy'], label=\"Validation Accuracy\")\nplt.legend()\nplt.tight_layout()","7895aac9":"labels = []\npredictions = []\nfor x,y in test_gen:\n    labels.append(list(y.numpy()))\n    predictions.append(tf.argmax(model.predict(x),1).numpy())","265c4c5d":"predictions = list(itertools.chain.from_iterable(predictions))\nlabels = list(itertools.chain.from_iterable(labels))","e889b822":"print(\"Train Accuracy  : {:.2f} %\".format(history.history['accuracy'][-1]*100))\nprint(\"Test Accuracy   : {:.2f} %\".format(accuracy_score(labels, predictions) * 100))\nprint(\"Precision Score : {:.2f} %\".format(precision_score(labels, predictions, average='micro') * 100))\nprint(\"Recall Score    : {:.2f} %\".format(recall_score(labels, predictions, average='micro') * 100))","7d4371c9":"cm = confusion_matrix(labels, predictions)\ndisp = ConfusionMatrixDisplay(confusion_matrix=cm,\n                              display_labels=list(range(1,39)))\nfig, ax = plt.subplots(figsize=(15,15))\ndisp.plot(ax=ax)\nplt.title(\"Confusion Matrix\")\nplt.show()","ff543fdf":"<h1>Leaf Disease Classification - Keras CNN<\/h1>\n<img \nstyle=\"width : 100%;margin: auto;\"     src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAoHCBUUFBcVFRQYGBcaGxsbHBsaGxsdHR0bIRogGxsaGxscICwkGx0pICAaJTYmKS4wMzMzGyQ5PjkyPSwyMzABCwsLEA4QHhISHjIpIik0MjI0MjI0MjIyNDIyNDQyMjIyMjIyMjIyMjIyNDIyMjIyMjIyMjIyMjIyMjIyMjIyMv\/AABEIALABHgMBIgACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAGAAMEBQcCAQj\/xABEEAABAgQEAwUFBgQEBAcAAAABAhEAAwQhBRIxQQZRYRMicYGRMqGxwfAUI0JS0eEHYnLxkqKy0hUkM0MWNFRzgpPC\/8QAGgEAAgMBAQAAAAAAAAAAAAAAAgMAAQQFBv\/EACoRAAICAgICAAYCAgMAAAAAAAABAhEDIQQSMUETIjJRYZFxgQUjobHB\/9oADAMBAAIRAxEAPwDZoUNzQSCAWLFizsdi28A\/D2IVQxeopJ1SudLl06VpzIlp7yigk\/doTzIvEIHRMUGI8USpSsoGdtSDYdNC8D3HvFnZvTyVjMfbUDp\/I40Oj9DGdyaspLhV+e\/k+0ZZ590hUslOka\/TcWJWWEpbfmF0vyJaxiUcfFiEODeyr+mWMgp8TUJiC5LKSW8CHgoqJigkMC4JBN+evg0FjyOUmmKnlkg4k8RSz7Qy+b\/KLKXVpUAUsQdwYycVSz1bn5xIoMWmSVPLvupBPtDkD+E9R74Z2YePK5Omal9o6e+I9ZX5EFQAtzMVuG4imfLRMQbKGhZ0ndKmNiIi8RTVdioIbMfZzPlfKpna7Pq20X2tWjT1Pf8AxQosRLDNuS\/uj1PE0w6S0+p+ucAdHVzk1Ip5i0TAZImBSUFBT3sgSQVFwdQdYI5pbSGJWc3JlnF+S+TxCT+BLt116RX1\/GC5amEpJAd3JGyTbn7QtEGim95Tlk6tzOj6coqcbkElCkEFRURlOiu7djsWA9IVJtfsjzySu\/K\/5LxHHSyW7NGraq8n90eHjqYCR2KP8RgImSlZj3CnKAW5Bm+UdSpiWucxuGa46F\/rWGJ2D8af3DJXHq3AEhJNtyzGDXD6rtUJVa4uOR5RkclAUrboefR40TCa1MulUoiyASdtucVKSim2NwZZSlUmTcXxLsxlT7Z5jQc4qhi838\/+VP6RmtDMKK6WMxSlaV5QmauaFtcKmlZdLC4IBc7wYZjrrHG5GTIpWpOmNyTd6Lf\/AIzO\/P8A5U\/pHQxib+f\/ACp\/SKcJJ6Q4EAXKvSKjlnX1P9iHkl9yTUY1U9opKZgYBNmTrlBO0MnHqkarbyT\/ALYpKyqyzlnr8hElFYFBtY52TkZd\/M1\/bK7yftl3T43POq38h\/tgqoakTEhQgAkEPb0ggwKtCVZSSx9HiuD\/AJDJDMlkk2nrfobhyO6kwqjyOFLABJLAXJOgEAFVx4s1UqXLkpNNOE0ImqUQpZlpLrQB\/wBvMwBOrEhrR6xvVmsLp2NSkKUku6SxYWeOP\/EEn+b0gRCur735x6QTvCPiszPKwqmcSSE65v8AD+8Rp3GNMhOZRUBmCPZ3IJ56MIGZyEAd6\/jFcVpKES5iAuWuZMcHkEJYjkQTtCZciSaWivjSD4cTSCHGcjmE\/vHaOI5J\/N\/h\/eMsqaWbRETJalLkk6alHQ9Ov0b2gxBE1II1G4g1nfhlLO\/BodDiCJr5HtzDRMgLwWsyzE9bHwP7waCH48nZD8c+yOFpcEHQhuXvGkCFfwvRUoXVJlzTNADK+0VJUoi6UqJmF0uBZTi0GRgQ46xAIliW9zch\/SCn9LLnLqrMixFalzFrWSpSlEqJ1JOsRpaxy9T+jRLqhmOsRwANiT1sPd+sc5RoyWdrnKZgwHQAerawc0y1LlkuxUAof\/JIOnjAIlfIAfXM6QY4ZPKZCCQ\/cR8CB7hD8P1EdtUhqsWtGiR5Bvh4xDRXoJTmseewd7E8rGLJc9MwMUkPa41hpGGpYZWP19esaXHejXh41q5aJHD+J9hUCUWEucQH0aYzJALbtlY7kaQT8SLX9nV2eUzH7oV7ObKpszbQJ1+H5pJSdQC3vOvQFvIQSJqBMpZaxZ8rjMVEEJIIKjdRcam8Co0zR06RBXhOlmoJ7RCQpbmZN7TOpak2Ay5QEoAsACwAi6nLLteG0LSxRfMlTv8Ayn93h1KwDpDINvZx8\/1NexyRIO5aImMJZMspD5FhStHYhQ+UPqqr\/KIOJzS0sp7wUtIUn8yWmOw31s3KJldRQiCjdSJCky1ZSQyxrzY8v1iLiWDJWFTUKZepHNhuOfX+8MLUhSUlCilQLMoah9zs0WdIBuQDr0PhEg01YyUVdIoUJIBa7X\/tBdgdYV0FQkgslmJBYuzhzqdPWKOqpAhZI0Pu5+EEWGSlJoahx3SAR42f5QGZfJL+H\/0Fgvt+wcpaaXKLoloSSGJSlKSfFheJIqC1zERZ0vCzgamPPW35HskfbVDeOhVvY7jrEEzE7j3wpsyxbRj8IYroVKxupnd9VtzrpDklcQvtJClAsRmNj4w+gpOloxZIasMtKdd3eLOnnsQobN6xSyDE6SqOfkiVtMOqqkl1dOZc1KskwAKAUpJIcFnSQWLc7hxvGd8QcNyk1clUufOKZCSns1TJq2JSwTLmKWSgCzpFrNB9gdR\/y7qNkvo5sOgv5QDJqRMKlgABSiqwYFzq2z8o9dgzueCDvbW\/6NeSfyqvZLC948VNhtC+ZhyWpJ0HnDDMMLExf4QB1itxWqErsitIUj7xyxYKJQzHY2Pvi2rZ+UWuYqqiuMsywpIWlSDmBbdarsdYTOuyBkO4fjMs93MCghmPwIhybhwlntJJ7upR+jRXVvDsuYntKY5FM+T8J6D8p90cYTiKkEyprpIsxi5fZ\/sDs7p\/su6GqdQL+IjSqOY8tJtcDS8ZNKR944DgnbWNRwZTyUa2DX1i+LJ9mmaOO9tDmIVHZy1rYnKkqsHNhs9vWMRxjGJs+ZmXz02HT0jZeIZWanmB2sN2e+kY9idMymy\/XKH5lJvXgfkhKeoop1JJv8bQggAXL8m+v1hTgQbhvGElJbmIT1aM7xuPkQWBokedz+nugqwJeaUhy\/dIO9hMW0CoRyHzgpwdOSSh\/wArm2xUpQ9x+ENwr5h2FpStk2ZIBDc+UdyZRSfT1j3tNCLiHUsbvGt0b9nUxLi8P4Wt6OWNWOVyzFs4cdOm2m0QaiflSqJuBy2pE6jMrMxZhmzHut+Ek5g9+9Cn5RU\/pI6ZgAWNyx8hy8zEabM2DwqpJCmGm7ctb+kSKKXmURyST9dIifWzkciLc6Xs4ppQ1Vf65fP6NVxRMIRLWBfOhrs4CZmnui3lTLsLnRjFbxYypCMxYhaW5aEX\/wA3uiZZekZo4\/lcvsMU9T2pPdSghQcE3TZiS\/tXizp5bEPbkdurGBSnXM7QrlKc5QFEBix9oq13ffaLwYiZawlQUpIAZTAi+mljpuXt0gcc2mHrq3Xvz6Cqkkg5VFOnTyi6xZGShm2buk+8N7orcIqkTQkJ1+rfKLzia1JN\/p+Yi8tSg3+Ga8EWoszEgx2tFrkD66RHnLYBt+XKOUKc9LR59LYtoc7Jz7Qfz+tI97JkKGZyx0fl4Q6iV72Hyh1acss2ex01h8IaAkgYmz\/vFv8AmV8ecSJE2KibN+8Xf8av9RiVJnQGTGRMIKaaYspK3EUFNMi4plho5maFFhVQB6SoAUfZNnI2cXF76QOUyGSHL21G\/W0GOEyWo1O6XBuzEA2cHeAumW4BHLaO5wodMMfzY6eoxO6kkWDx3SFhHpGbWEilOyhGtJ2LFUoTqovFBjakFUvOP+3bYjvq0ggVQp1WoqbYWH6xWzp0qZNVKmISU91uYdANjtrtCZp9kBJaIeF1ipehzCLPFZSJ0vOB3wHB38Ig1OALl96UStHI6j9YZRWsMvTSJbSpgJuqZ5huKZFd4aRrvDVSJtOhY0L\/ABjJ8Mw4TFubAnWNfwmlEqSiWC4SNYPixl8Rv1Q\/iJ22yVNSFJIOhBHraMj4lowiYshxchtI18xnHGkplqJSQ5JD2fW46WPjGzJ9J1OO6kAC5hHUe+GBMHhzsP7e6JFTPZIAAH9\/0+cV5WH5xnTs3Sxxmto6mTV6hduYAB9weC7DphMpALkmWh3\/AKAC\/WBE5SNYJqKcEoSk7BobjpSswS467fgtpRaOliziIyFPoXjsE+X1eHN\/cfFDdZmVLJQe8bAWuToPPSCbD5OSQhIDNlJdxchRNibXJttA2gNMSLFJWk6E6KBsBd7QY5Puz\/UPgYBeQMugerwx0e4bz5xFC2fnFniEvpFLNXmUwBBsCOZ5t1i\/DORy4b7IkU6xmDlt3in4wqc0sF\/+4PGyVesTAWir4lX90kMCCseoSSD5Xisi9\/wYoy11IFDiRlkaKABABfcuS4LxLxWqExIUhJTl1IsD0tpufKKOUprbco6UtrC9w0V1V2TvLr19B3\/DALmVKjnIShDlLODmLXL2Oh33jQuLP\/Jzv6fmIGP4V4cUSVz8waaQAltMhUMzvdyTsNILsdS9PNB3SR62iSVwa\/k6XGjWNfkx1Civy0iVIQRtEgUwSspZkiwu7jnEtEpIYty8wHIHvjixh9xTVNpnkpBPMbx7UI7MKJ6e9QESQstYBNvnFbXLDE3PMnX2ht0jSo\/KBJAFKIN9SdecTaeX1eKqSDFtRpMLy6QCT9ljTJPL68YtqYnTeIdPLtF9w7QKmzUjK4SQpT8gbxzJ\/O6Q1K3Qfy5eWlAy5SEpcdXDxn1XL7OoWh3SrvudcyiSR8I02sT92R4fEQHY9R5gFteXmPk1\/Owj0XwqhFL0kassLjoqwI6SDtHCFuHEOylAmKTMp4uQSHUfIfrAxWU4XNUoC7hiOgAEEdVUByNAPp44m0aQrMA2hAPhf3\/CAkuzN2LiRaTkM0OIKSjKQ\/U\/2iDXy0rVmYAnX+8XS8HzoK+8Mri7XAuSljp4wK1U7sKgIc9moDV7AnUcv7RfW9Gj4GJrwXOC05VOlpS4ClMbgFuhNn1jXEBhFPgOEoly0kpdRZV2LHbLa3PneLqHcfE8advyZlCMG1HwKB3i\/BPtMlWQfeJHd7wSDcPmPIB4IiYbmh0kAsSCxZ2PNt4e1aoKMnF2j5jmVBIbbWOUKbWCnH8HMuYt1ZgSS5Zze9xZ4GKmRl+uehjGjr9tWjkKf4N9awXUye6AeQ5cvF\/dAZLX30jW4Hvg8ShQZi\/oPTf4w6CM85K9HqZZSXGkS0zxvDIO0N1KLat1hgKLLDEiZUy0MSEgr0cOGy5rMBqx5gbwbVKGQPEfAwM8B4WodpNmIUCcolqLsZagFFg7EEttZupgwrJfcHj8jFRXszZJXKgerEOHgZmIMuY\/51FjazJT7yXgwqZVop5lPf69IJqzPlx940Vs+Wlkt7RJccukVHFtMES0gXOYH3H94t50sg+EV\/FE8dmmWUvMKiSvoAA0LlekcuaUbtU0Dv25BkdmUd6wvz5i9vnHmC4YupnS5SGdZ1OgYOSW6AxxLw9a1hCElalMAB1jWuB+FxSywuYlJnKu5AJQNMqVddyPlBRjXgbjg8rVrSCfDKBEiWmXLTlQnQX3uTfrHmMj7iZ4fMRNERMW\/wCivw+cHWjpJVpGdVMgZsx1sIfkS4lTaV3iMF5LF30DO589j+kc\/Li6S7emJy492jucMo0gRxWtHfSC6sptys\/yaLHFcTN2PlAgqbnmnwU\/pC3LWjNIapJEXlNTNe0RaeUzRc0VKtZCEAlRLARz8+RskfsPUlMpaglAJJ5X6xpvD2EJkIGhWRdXN7t5RF4cwNNOMyrrO\/IMLNBCI38HhOP+ya36Rqx4+u35PJyXSRFVUU0XENrlvHVaGmbYhh8yQpSgkmT3Q7uUvYnmzt6xwlL6GNCqKJKwQpIIOxYg+RgXreHFy3VK7ycxJQ10gkME8wL+TRmnja8eBE8ftFFVUjpdPtDbn4dY7l1aVSgo2UCxcefvOb3RInSVoUUKBBGoP1cQxUUKJiSki53BIvsbQt0kOw8np8sjz\/iy0CywdwAQfr3xN4Sw5E+eZ0yW6pYBS72JNi2hs7P5cwHkGWbpDpO7nT3Rq\/DFGESUrKcq1gFQ9Ws7Cx2iuPNTlSHPkxncYl7ChQo3ijlekNgw9HjRCAbxphAWkrDtuzAJYAB\/GMgxKXkUU8rR9GzJaVBlJBB2IBHoYhLwWmVdVPJJ6y0H4iFyhfg0Y8\/RUz5vopX3qP6gfS\/yg7QANmHJrftGqDAaQFxSyH\/9pH+2KbEsSw+RMMucunlLYHKvICx0LEaRIwoBZKdgLMWkdIueH8A+0d+al5JCks579mYNcJuS\/NJ5wV08mmmITMly5S0KDpUlCCCNiC0MY3jKaeXnIWo6AJBLnqdEp6n3m0E9ElltaLtKGjyoQ6fOMhxDGKyerMZq0DZEtakJHiUl1HqfICI1Ti8+VLBXNmqSmYkKAmzElQYkpzuSHsHEA8tejH8ePajWJkiKuopSCbRmmB8c1UiYTmMyUok9mtRWUgmwQtTqBA3JLtcRsWD4lKqpSZsu6TqCA6TulQ5wUZqQ6OWMnSAzF5JShR0YP5QOfY5lRNTKlupQDtdg5u52sBGxqkIOqEnxSD8o8lUstDlEtCT\/ACpA+Ai3Ddic2BZGmVPD\/DkumSk5QZjMV73u3hBCExjPEPEs1Kky01CkqVcsshQDhtFOl+cV1RjlQnKBPnAkXPaTPD80X4JLIsb60b1ETFP+kvw+cYrTYvUG5qJzBn+8mab3fw9YvZdZOmArM+aCUnuhamJudAWF7Rfkt5kvQTJR0jifS5gQ0ZIcQqzMWPtU8JSpYJ7WYAGJ\/mjuXjk+wTUT1F2vMme7vQPkp8lL0XfE2GrlXACZepuA3zJJgcwljNVceyfiII8HqKiXMTMmTZs1KSCULmLIJ5KBUbfpoY1HC6lE6WJiUZXsxTuNWLXHUcozS4lppOrAXXK21ozfCMKXOVlQncAnYPzPrGkYNgsunT3bqLOos7tdvfFlISAbWiuHF2H\/APrqb\/7pf+6FYeDGDuTt+vwPhiUS4RDyYiyapExKVoUFJUApKkkEKSQ4IIsQRvDM7EUglIIJGvT9+kb7Ck1FWyyhRRTsbyXKbb84HsY4xmy5ykISkpQzg6lwC\/v2hGTkQg6Znny8cFbYex7ARQ8fylWmpKD0vBbR1iJqQpCgpJ3EHDNCfhh4uRjyfSz2qpETAy0hQuz6hwzg6g+EDWI4GqX3kOpF3A9pI\/8A0ILoUFKCkHKCl5MxVghqJ6SjQtmLOA2pPlGloSwAEdNHsLxYVjuvZIQUT2FChQ8MUKFCiEFChQohBRmfE8sS6qfUSVVyKrsxLT2VN2ktbALSApUtSSMzP3ksQRtGmRTT13PnFN0QH6TF50qhRNrQEzgn7xKWuoqIQGFsyhkcCzk6DQGVi06YF9pMUQsuUAsj+kD8rW+L6xY8Z4n2k7sh7MtiX3mFL89AlSW01PSKFCHLktybUwtu2ZMuV31iSpZB1P6RX4+GkFgwM5Hgfu1et3izkqFmt9c4hY+SZWmYCYh+gyLu+1z74GaVGVXYMUyEk6sYMODcZmUcx3zSlkBY6cwOYgVQJVnBB3vbyixp6faWoqJsE6kk6ANqdID+Ak5Xo+gpM0LSlSS6VAEHobiHDoYCP4fYosA0c9KkTUjOgHQyzyI6\/PlBwdD4RpjK1Z0Yu1Z8z4lJnS6iaxVmUsqSQxSpKld3MTows1maLIrEzumwG+8T0Yb2kybMYjvHS9xYuQLuQTEHEqbs1j8qgCD1e7+URp0YMsu8iTKp1hKkghTix02Bi5wicqWQFg6AOdN7fXKKWiqLtv8AQgvoZFkqyhQ8vhziRTAcd6ZmtUtS5qwbkqNvHSLvCaNKUmYsd5LAD3B+sR8UCJVRNCQXCt7N3R8\/nHdNPmTD3WSD+X1Jc35xIhT07LidVCXLZu8qzfOCLhjHVy05FgqQWy3unWw6G1tm6xRYVRBdphzPrmLny3i1p6FSXBudLfL3Qb8bLxNqVo0khnPjABxRLNbVS8OloyyUtNqlhGUFKSCmSlXMnKS2jj8pEHqljIVDQgEedxA5iuJ5Elz4am+g0hGSagrZ0JTUYtvwPV2JM0uUkJSEgWsAGsA2logy5jFyIo5SlXN7lyYsJVUd4RHJe2cWeZ5JW\/6H6+YyVKUR0GvTz5+UAOOzXnqU+qUH1lpgqrFkhRO3OA\/G1d9B5y5f+lvlGTM+0rF5V6GkTIMeD8eMlYQpRyK1Bu3hAMgxNkTWaM1uDUkZreOSlHyj6AlTAoAguDDkB\/AmLGaky1e0gC76jTSDCO1gyrJBNHosGVZYKS9nsKFChw4UKFCiEFChQohBQoUKIQ8gdq13PiYIoz\/jiqEummunNnPZ9BmtmPh8W2eAn4KbpWZlOm5502a4ZcxarHMGKybKOo5GJMpb6mIwQzgjQWYjXrD0hhvfk9\/2gUjmt27LKSejxFx2cpKEnQ50kX\/kXqPW0S6Zb6WiJjgASHAUMyH1t3V3caRJrQN1JESnVJmhpiMqm9pNj42183j04WpF5awoa3sR+8Ql4eWCkEqHvHprHMisWj8RhdFy0F3DM9cuoRN7Qu4C1KdRyk95+dvONhdw4uCHBj5\/psXyLCm112vvG64TUdpIlrd8yEl3Cntq4sYPHLdGniz7WmBWAU0uYtaCrKpszAFyNLn2QzdNRrqWuIeEUqBVKVlNhlV3gb8xoG5DyhumqlSZiZiUpUwKSC9wQxY7Eag33FngwpBKmSwpBCgwysDpyY36XD2g6o1fDi14M7lcGzU5VBUvMToFf7gOkWqMOnSbEEjnzDbbEecFE0DKkpC0ggEFQb\/ElQzJta7CHZC1sg5u6bsGu7tcjl1Hygk6FywxfjRjHEYSmoUokkkO3gtab\/4YdwcqU7MLgEDkX59B74s+PKAJrVKUWSoOAzHVyG8SfOKeXiXZp+7T0c29w19YkWZMseroJ8PUEOsm25Ow1\/T0ixocWClqy6Oz6efhAPJmTJgGZRyvcaJ9BF1VVKZYlpAZy3kP7wdi1OvBp1JPzUZf8Iy+IBAS3k3mIFq5pkxIf2TcRbYHVFdFMII7rgW00Jdtb\/A3gWwjEQMxJzKJNz+kYORJdlF+PJfNy\/64x+\/\/AIXyqJJFyYYElDkJuel4clYilZAIuYZrSQoGzDQdfCDXVq0c\/sl4FWUych7wFvH3CAjF1MtIBcBCRcAjR3YwbU07tCoLZIIypfcl7CAPFrrTf8CP9CYy54000Rz7NMYSRybw\/SHXvEYhofkiMkvuKkvYbfw7mNVMfxJIF97H5GNUjJuCED7XLf8AmI8cpjWRG7\/HSuDX5Ot\/i3eF\/wAs6hQoUdE6QoUKFEIKFChRCChQoUQh5GY\/xGlZqSYp1OiYhQYjUryd4NcMom24HWNOgUrkuVB9cwfk9oCRGrTRiEmqt1+cdS1l9YZ+z5VqRfuqUnvM9iRdrPbwiWClJuQDyv8AOIjmukW1AsWcnrDXEacoY2OdI5uQlT9LRIw+mXMSlYyJQpeTOpQYKZ+9+UM123iPxAgBISpQOVYAKbg2WLaOCLjSKntFqNU2ippp6kaXES5ktEwZgL9Ir0yFva\/h+kSKeax5H4wFC5KtjKZCicrX+vWNx4GpezoZSeYUr2irUnR\/Z6pFgXjO8HoRMWModRYAE\/isG9Y2JEsJTlSAABYAMILHHdj+LHbZl1SqCjhCnyyCsv31EqB0YOkEcv28IA+LM4RKKVlPfYs4vlJFxtY26iOsH4mXSkmYZigQAAkptrtYejfocjT8eMZdWazWICgGJsX8m5biKmnlTEzQe0AlBBT2QSLqKnKzMJcBrZQBu7xBwTH5VWkiXMUhYIHZrypUdWyAEpPgnTfUReSqZQPsn0Pz3+uTWNTTVozP+I6FLqkAJvlIt4J\/v5wMzKdKAkKUAXuOngPq0E38Sq4moRLSSFISoEA6ZggjxdoDkpAZ9G+Voq6Ofya7bJ8qvEsKyjM\/pzfwdoiiqKlZpiiT9WA2htCrki311hvDaYzaiXL\/ADrSksQCxUBYqsD4xTYiMeyo2ThCn\/5BRC0qCw4CWOW90qP5uY2aAasw6ZTTUksqWTqC1+RcWMbAilTLldmgMlKQkDoIE8eoQpJBDpOo+vjCcsFKm0dKOCEklJXQNf8AE5BWlQOQptlJuTpY6RbLqyvQgeDRnmN0SpZKSp0m6VNc9D1G8FfC9ZMq0ZAgFaQxULC1r8jAJKKtfoycvhRxrtjXkcqZOSYicqZZBcJ3LXYCB3FEfeF9AlCX5MgRYcQ06pashUVeZiqraoZ1A30B8QAkt0tGWcuzaqqOPG34IgLxDx+aoIQlJIzFRLEjRgAW11eJqZgDk3ISpWUC+VKSpRA6AE+Ud4LRmrnDOQwbKkcuX7xeGD7KTWkdPhYJSyJ1pFn\/AArq5xr5UtfeQy3JLFLIUQRzuwbrG+RS8PYBKpJbISnMbqU135A6tF0I6OOCVtKrOooRjaiqOoUKFDCxQoUKIQUKFCiEFChQohDyBqqRc+PzgmigqUXPiYGSshlfHmHdnMROloUAvN2hA7oIypS7BkkuddTAyhlXVGt4\/hYqJK5RLZmZV7KBcFgQ7GMklyFJWULSUqTqFOCLcj5QK1ox54U7XssqOZoEjeOOJ05UyhmBzBSrO4ILMqzA32fXbeRSsCEpDnnsIjY\/KWpUpKQVKOZgASSWRoBf0i5PQqCt+Clkzynfy+vq8OqX+Kz\/AFeGVIuxDG7v0110ibhWGqnzUy0B1qLAD4k7D9IBluIR8ATjMrJcvK6e8TdmCQS7+hjazA5wjw1Lopdge1mJR2hdxmDlk9BmI6sIIoOEaRrxQ6R2ZfxXRZpBUCAZZz3e4ALjxYkjw6vAqJOdkqU2ve239XjUammfUAtzHrAJNw7s5hlLcgXQSwzJ6NaxJG2j2cQUlsy8vG+ykimlyezWAbgkX2I382MH+FrzS9ddU7aNpAklbK7OakM+jWI0B93ui\/oJQF0KIcixv5eEXEzwm09AfxbO+\/DNmyOTv7a2byAiBTUme5OUDUn3eO8TuKVpFRYOQhr6f9SZdt7NaKyUhczvKJYanYQsvI97Oqzud1F3Fzt1Z4Of4UYErtF1K091IyocBio66h3A3DawP4LhC6uaiWl8gcv01JvYaRteE4dLp5aZUsMkepO6j1MEtj+NG3daRLUlwRFXX0ZULdeXLd4tobWmKkrOijHeOaIy5ffTooEFtA7FvreKjhPiRNIuYFBRQq4AZ3bqQOW8bDjWFonSyiYlwepBsXFwX1A3jFuJ8KMk90MAspGgubvYXFjfX4wr6WHKCnHqx\/GMZMxfahCmcFiUnS\/OBymlzalfdBN3IGznU84uMKlZxlUXBdywygNZyfP0EW1BhS6eUUpUklaipZBsEn2QGBJte3OFpRVteReLg48b0gZmUok99BK1MtCnukhaShYtd8qjvvBN\/C3B89UkmeU5O\/kAfOEkFnOm20GHC\/BMuYEzZoV2YJZCvxHTMcpsH5+6DmiwSnkqCpclCFAEOkXY6h4bBSktjZuKeiyj2FCh4kUKFCiEFChQohBQoUKIQUKFCiEFFLNFz4mLqK5dKok6esQhWrlwOY9wxLnOsAImkg5wHJYAMofiDBvIeZmaNXIeseGiVyHrEpMFxvTMoGGrlKCCliSwvrdtf1iuximJyKCiCM10+V3Ea7V4EJgKVAXiDI4PlhQK\/vANEqbL5j8XnaBadUJWGnozDBOFqmoJyyxkVYzJgLJuFFSdyog7avqHeNR4f4ckUYPZjMok\/eLCSsAgApBADJs7ReilV0joSFRFFIZGFHCY6EdiSYXYmDGFTNkxTYrhQnJy5sqgXQpgWLEXG6S9xaCpdKo8oaVh5PKIwWrVMzRdBnzJmJyTEi25HUbKT1HuaH6KUtB5p8d\/0g5qsE7Qd4BxoRqD0P08VE\/hme\/dKCObsfRvnEujHPjtPRlvEIH2k2zKYhtn7RfyaHcMwWbUzESwNS5AYBI5nbTnBkeA6lc\/Ors0JIucxURdRsG6wcYTgkumRlli59pR9pR69On94CKAjxpSlctIawLBkUssIQ2YtmPUbDprrFqI9Es8o6yGCOgkkqRyDHgEd5DCEsxTQSGzLcRnX8UsGmGl7SUgqKJiVryu4QELBVbYEpJ6CNMCY5MuBcbLTo+YJGLkIKFZrgj97Rd4FiNRUNJlS1KNgcoJyp0BUwcj9PGNgxfgShqVFa5WRZF1Szkc\/mIHdUrqRE7h7hunokZJCGJ9pamK1MSRmUAHZy0D0QXxGTsJplS5MuWpWYpSAVMz+W0TYUKGoWKFChRCChQoUQgoUKFEIf\/Z\">","f938e2c6":"<h1>Metrics<\/h1>","442d59c5":"<h1>Data Engineering<\/h1>\n<p>Since the data is already augmented, there is no requirement of data engineering. Feature scaling is automatically done by image generators<\/p>","ca9ba3b0":"<h1>Modelling<\/h1>","a59125d0":"<h1>Data Loading<\/h1>\n<p>Setting up Image Data Generators<p>","b19e40ed":"<h3>Confusion Matrix<\/h3>"}}