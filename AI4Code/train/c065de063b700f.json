{"cell_type":{"514d8b1b":"code","c3af578b":"code","b45753bf":"code","64f116fa":"code","33edc990":"code","cd4856d0":"code","8f33e6ed":"code","f5bf5d27":"code","46ad7e75":"code","4e30af09":"markdown","5a1b2262":"markdown","4eff2629":"markdown","775f6094":"markdown"},"source":{"514d8b1b":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"openaq\" dataset\ndataset_ref = client.dataset(\"openaq\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# List all the tables in the \"openaq\" dataset\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset (there's only one!)\nfor table in tables:  \n    print(table.table_id)","c3af578b":"# construct a reference to the dataset global_air_quality\ntable_ref = dataset_ref.table('global_air_quality')\n\n#API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"global_air_quality\" table\nclient.list_rows(table, max_results = 5).to_dataframe()","b45753bf":"# Query to select all the items from the \"city\" column where the \"country\" column is 'US'\nquery = \"\"\"\n        SELECT city\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"","64f116fa":"#setup query\nquery_job = client.query(query)","33edc990":"# API request - run the query, and return a pandas DataFrame\nus_cities = query_job.to_dataframe()","cd4856d0":"us_cities","8f33e6ed":"us_cities.city.value_counts().head()","f5bf5d27":"# Query to get the score column from every row where the type column has value \"job\"\nquery = \"\"\"\n        SELECT *\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'IN' \n        \"\"\"\n\n# Create a QueryJobConfig object to estimate size of query without running it\ndry_run_config = bigquery.QueryJobConfig(dry_run=True)\n\n# API request - dry run query to estimate costs\ndry_run_query_job = client.query(query, job_config=dry_run_config)\n\nprint(\"This query will process {} bytes.\".format(dry_run_query_job.total_bytes_processed))\n","46ad7e75":"# Only run the query if it's less than 1 MB\nONE_HUNDREAD_MB = 100*1000*1000\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=ONE_HUNDREAD_MB)\n\n# Set up the query (will only run if it's less than 1 MB)\nsafe_query_job = client.query(query, job_config=safe_config)\n\n# API request - try to run the query, and return a pandas DataFrame\nsafe_query_job.to_dataframe()","4e30af09":"Say we want to select all the values from the city column that are in rows where the country column is 'US' (for \"United States\").","5a1b2262":"We'll use an OpenAQ dataset about air quality.\n\nFirst, we'll set up everything we need to run queries and take a quick peek at what tables are in our database.","4eff2629":"The dataset contains only one table, called global_air_quality. We'll fetch the table and take a peek at the first few rows to see what sort of data it contains.","775f6094":"You can also specify a parameter when running the query to limit how much data you are willing to scan. Here's an example with a low limit."}}