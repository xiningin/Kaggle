{"cell_type":{"23358c98":"code","6ea9325b":"code","f3e9784f":"code","753d7e76":"code","f4978544":"code","ec04dcba":"code","f266efb0":"code","ea7b837f":"code","50c8d7cb":"code","e9dd113f":"code","51d7ab92":"code","d59afb28":"code","ca3abc99":"code","49fd4e94":"code","a137b124":"code","1e1611e3":"code","4ca246e7":"code","f7510599":"code","213a46f9":"code","da9e715b":"code","bc653123":"code","fbb4a333":"code","aaf0783b":"markdown"},"source":{"23358c98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6ea9325b":"#import Computation Libraries\nimport pandas as pd\nimport numpy as np\n\n#import Visualization Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f3e9784f":"#read women shoe prices csv\ndf_women_shoes = pd.read_csv(\"\/kaggle\/input\/womens-shoes-prices\/7210_1.csv\")","753d7e76":"#check for sample data in the csv\ndf_women_shoes.sample(10)","f4978544":"#Get information about the column properties, datatypes, notnull count\ndf_women_shoes.info()","ec04dcba":"# Here only choose 5 columns interesting for the analysis of the data.\ncolumns = ['brand', 'prices.amountMin', 'prices.amountMax', 'prices.isSale', 'prices.currency']","f266efb0":"df_women_shoes = df_women_shoes[columns]\ndf_women_shoes.shape","ea7b837f":"df_women_shoes.info()","50c8d7cb":"df_women_shoes.dropna(inplace=True)\ndf_women_shoes.shape","e9dd113f":"for currency, subset in df_women_shoes.groupby('prices.currency'):\n    print(currency,len(subset))","51d7ab92":"df_women_shoes[df_women_shoes['prices.currency']!='USD']","d59afb28":"for row in df_women_shoes.head().itertuples():\n    #print(row._5)\n    if row._5 == 'USD':\n        pass\n    elif row._5 == 'GBP':\n        df_women_shoes['prices.amountMin'][row.index] *= 1.3\n        df_women_shoes['prices.amountMax'][row.index] *= 1.3\n        df_women_shoes['prices.isSale'][row.index] *= 1.3\n    elif row._5 == 'EUR':\n        df_women_shoes['prices.amountMin'][row.index] *= 1.1\n        df_women_shoes['prices.amountMax'][row.index] *= 1.1\n        df_women_shoes['prices.isSale'][row.index] *= 1.1\n    elif row._5 == 'CAD':\n        df_women_shoes['prices.amountMin'][row.index] *= 0.73\n        df_women_shoes['prices.amountMax'][row.index] *= 0.73\n        df_women_shoes['prices.isSale'][row.index] *= 0.73\n    elif row._5 == 'AUD':\n        df_women_shoes['prices.amountMin'][row.index] *= 0.75\n        df_women_shoes['prices.amountMax'][row.index] *= 0.75\n        df_women_shoes['prices.isSale'][row.index] *= 0.75","ca3abc99":"#create a column for average price\ndf_women_shoes['prices.average']= (df_women_shoes['prices.amountMin'] + df_women_shoes['prices.amountMax'])\/2","49fd4e94":"#check newly added prices.average column\ndf_women_shoes.head()","a137b124":"shoelist=[]\nfor brand,subset in df_women_shoes.groupby('brand'):\n    shoelist.append([brand,subset['prices.amountMax'].mean(axis=0)])","1e1611e3":"#create a new dataframe for analysis\ndfshoes= pd.DataFrame(shoelist,columns=['brand','avgprice'])","4ca246e7":"#sort values by average price\ndfshoes.sort_values('avgprice',ascending=False,axis=0,inplace=True)\ndfshoes.head(10)","f7510599":"#check the price range for top 10 brands\narr = np.arange(1,11)\nplt.figure(figsize=(10,6))\nplt.barh(arr,dfshoes['avgprice'].head(10), tick_label=dfshoes['brand'].head(10))\nplt.gca().invert_yaxis()\nplt.ylabel('Brands', fontsize =12)\nplt.isinteractive=True","213a46f9":"ax = dfshoes.head(10).plot(kind='barh',figsize=(10,6))\n#plt.xlabel('Price in USD')\nplt.ylabel('Brands',fontsize=12)\nax.invert_yaxis()\nplt.title('Most experience average price brand')\nplt.show()","da9e715b":"listrange =[]\nfor brand, subset in df_women_shoes.groupby('brand'):\n    listrange.append([brand, abs(subset['prices.average'].max() - subset['prices.average'].min())])\ndfpricerange = pd.DataFrame(listrange, columns=['brand','range'])\ndfpricerange.head(10)\nnewdf = dfpricerange.sort_values('range', ascending = False, axis=0).head(10)\nnewdf\nplt.figure(figsize=(10,6))\n#plt.xlabel('Price Range (USD)', fontsize=16)\nplt.ylabel('Brands', fontsize=16)\nplt.barh(np.arange(10),newdf['range'],tick_label=newdf['brand'])\nplt.gca().invert_yaxis()\nplt.show()","bc653123":"plt.hist(dfshoes['avgprice'],bins=50)\nplt.show()","fbb4a333":"fig,axs = plt.subplots(2,5,figsize=(15,6))\n\nfor idx,brand in enumerate(df_women_shoes['brand'].value_counts().sort_values(ascending=False)[0:10].index):\n    print(idx,brand)\n    axs[idx\/\/5,idx%5].hist(df_women_shoes[df_women_shoes['brand']==brand]['prices.average'], bins=20)\n    axs[idx\/\/5,idx%5].set_title(brand)\nplt.suptitle(\"Shoe price pattern\")\nplt.tight_layout()\nfig.subplots_adjust(top=0.88)\nplt.show()","aaf0783b":"#### As there are doifferent currency types available,convert all currencies to USD  "}}