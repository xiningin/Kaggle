{"cell_type":{"1129a9e5":"code","c75faa02":"code","bcb1898b":"code","bb6e6b43":"code","d29685de":"code","c17a7106":"code","735d704e":"code","3b508f8b":"code","d89ff39b":"code","272c192e":"code","82ec2bfb":"code","1f76125a":"code","a84257a6":"code","5b213a70":"code","3f7aebbe":"code","a35bb94c":"code","55b0b4d1":"markdown","aad191c3":"markdown","e6da11f9":"markdown","265bb267":"markdown","fc4b9b09":"markdown","123b8935":"markdown","8c275224":"markdown","e4982f3c":"markdown","1df9d82c":"markdown","39c3d5e1":"markdown","44374238":"markdown","15482a92":"markdown","29dc50ff":"markdown"},"source":{"1129a9e5":"#first we import all the libraries we're gonna need.\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","c75faa02":"df = pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","bcb1898b":"df.info()","bb6e6b43":"df.head()","d29685de":"sns.pairplot(df)","c17a7106":"df.corr()","735d704e":"#we can delet 'No' column to increase power of model.\n\ndf.drop(['No'], axis = 1, inplace = True)\n\n#X : Features\n#y : Target variable\n\nX = df.drop(['Y house price of unit area'], axis = 1)\ny = df['Y house price of unit area']\n","3b508f8b":"#we use train_test_split from sklearn.model_selection to devide dataset to train and test set.\n\nfrom sklearn.model_selection import train_test_split \n\n#train set in a bigger sample of dataset that model uses to learn.\n#test set in smaller sample of dataset that model should be evaluated in.\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n\n#random_state before spliting controls shuffling dataset","d89ff39b":"#we can define a model with the desired algorithm using \"LinearRegression\" from \"sklearn.linear_model\"\n\n#for better understanding of what happend in next step we can make a Linear Regression Class to explain its functions.\n\n\"\"\"\nclass Linear_Regression:\n\n    def __init__(self):\n        self.x = 0\n        self.y = 0\n        self.alpha0 = 0\n        self.alpha1 = 0\n        self.coefficients = [self.alpha0, self.alpha1]\n    \n    def fit(self, x, y):\n        self.x = np.array(x)\n        self.y = np.array(y)\n        \n        y_mean = np.mean(self.y)\n        x_mean = np.mean(self.x)\n        \n        self.alpha1 = np.sum((self.x - x_mean)*(self.y - y_mean))\/np.sum((self.x - x_mean)**2)\n        self.alpha0 = y_mean - (self.alpha1 * x_mean)\n        \n        self.coefficients = [self.alpha0, self.alpha1]\n        return self\n    \n    def predict(self, x):\n        y_pred = self.alpha0 + (self.alpha1 * x)\n        return y_pred\n        pass\n\"\"\"\n\nfrom sklearn.linear_model import LinearRegression\n\nmodel= LinearRegression() #our model is a Linear Regression\n\nmodel.fit(X_train, y_train) #model.fit builds the model base on train set and returns the Coefficient of each feature.","272c192e":"pd.DataFrame(model.coef_, X.columns, columns=['Coeficient'])","82ec2bfb":"y_pred = model.predict(X_test)","1f76125a":"from sklearn import metrics #we use this function to compare sets\n\nMAE = metrics.mean_absolute_error(y_test, y_pred) # mean ( y_test - y_pred )\nMSE = metrics.mean_squared_error(y_test, y_pred)  # (mean (y_test - y_pred)) ^ 2\nRMSE = np.sqrt(MSE)                               # sqrt ((mean (y_test - y_pred)) ^ 2)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","a84257a6":"print('Predict mean =',np.mean(y_pred),'\\nReal mean =',np.mean(df['Y house price of unit area']))\nprint(abs(np.mean(y_pred) - np.mean(df['Y house price of unit area'])),' is diffrence.')","5b213a70":"test_residuals = y_test - y_pred\n\nsns.scatterplot(x=y_test, y=y_pred)\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","3f7aebbe":"sns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","a35bb94c":"sns.distplot(test_residuals, bins=25, kde=True)","55b0b4d1":"As we could see, there are 5 factors that maybe have effects on price. Transaction date, house age, distance to the nearest MRT station, number of convenience stores, latitude and longitude.\n\nwith correlation analysis we can figure out the basis information about dependence between features.","aad191c3":"# 1. Import & getting basic info of Dataset","e6da11f9":"# 3. Features and Target Variable","265bb267":"**Hello everyone!**\n\nIn this notebook we start using ML algorithms to analyse a usual dataset. We are going to use Linear Regression method for create a model on dataset and then evaluate the results!\n\n![image.png](attachment:f5a45bd6-e004-4708-bebe-c19df8fd10f0.png)\n\nIn statistics, linear regression is a linear approach for modelling the relationship between a scalar response and one or more explanatory variables (also known as dependent and independent variables). The case of one explanatory variable is called simple linear regression; for more than one, the process is called multiple linear regression. This term is distinct from multivariate linear regression, where multiple correlated dependent variables are predicted, rather than a single scalar variable.\n\nRegression makes a Linear equation that describes realationship between two or more variables. for example if we have x feature for predicting y (target variable) linear regressions generate a Two-dimensional line equation and if we have n (more than 2) variables linear regressions generate a n-dimenshional line equation like this:\n\n![](https:\/\/s4.uupload.ir\/files\/untitled-2_q7qg.jpg)\n\nYou can learn more about Linear Regression here:\n\nhttps:\/\/en.wikipedia.org\/wiki\/Linear_regression (English)\n\nhttps:\/\/blog.faradars.org\/simple-linear-regression\/ (Persian)\n    \nWe use Real Estate dataset to make a model that predict house prices based on 6 features. In the following, You can realize more about dataset.\n\n","fc4b9b09":"Based on this information X3 factor had the most negetive correlation with price. Also we can see the strong correlation between longitude and distance to the nearest MRT station.","123b8935":"as we can see 'latitude' has the most effects on model. ","8c275224":"# 8. Residuals","e4982f3c":"# 2. Exploratory Data Analysis","1df9d82c":"# 7. Evaluating Model\nIn this step we have prediction values and real ones. So we should compare them to see how reliable our model is.","39c3d5e1":"Also we can compare the mean of Target variable in dataset and predict values.","44374238":"# 6. Predicting Test set\nNow model learn how to calculate the house price with its features. So we predict the test set to see results.","15482a92":"# 4. Train & Test set","29dc50ff":"# 5. Train the model"}}