{"cell_type":{"e45e1ee8":"code","0c5cdbff":"code","1f06a30c":"code","a625e56d":"code","41340b1c":"code","60bb7fa5":"code","9aa06da1":"code","394dfdc0":"code","b98a5328":"code","a945c863":"code","23630e8c":"code","4485eddb":"code","1089c555":"code","b7061228":"code","dcba173f":"code","9acae7f2":"code","f2d55827":"code","bcfe8a45":"code","f5921568":"code","8ff5da60":"code","42f79e0e":"code","7d1b1bb3":"code","2cfe16c0":"code","bcd29f87":"markdown","7e75f28c":"markdown","b7aacfb4":"markdown","56fdb14a":"markdown","684e8379":"markdown","b8886c9a":"markdown","71d217f7":"markdown","eff6fd91":"markdown","5247d67b":"markdown","06351df4":"markdown","eca78477":"markdown","bcff2386":"markdown","789ec443":"markdown","fe59a253":"markdown"},"source":{"e45e1ee8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\nimport warnings\n\nimport itertools\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)","0c5cdbff":"#loading the data set\n\nws_df = pd.read_csv('..\/input\/Wholesale%20customers%20data.csv')\nws_df.head(500)","1f06a30c":"ws_df.drop(labels=(['Channel','Region']),axis=1,inplace=True)","a625e56d":"ws_df.info()\n","41340b1c":"ws_df.shape","60bb7fa5":"ws_df.rename(columns={'Fresh':'Rice','Milk':'Sugar','Grocery':'Dal','Frozen':'Flour','Detergents_Paper':'Salt','Delicassen':'Oil'},inplace=True)","9aa06da1":"print(ws_df.columns)","394dfdc0":"ws_df.info()","b98a5328":"ws_df.head(5)","a945c863":"ws_df.head(5).plot.bar()\nplt.title('Amount Weight description')\nplt.xlabel('---Items---')\nplt.ylabel('---Weight in m.u---')","23630e8c":"ws_df.describe().T","4485eddb":"ws_df.describe().T.plot.bar()","1089c555":"import itertools\n\nattr_col = [i for i in ws_df.columns if i not in 'strength']\nlength = len(attr_col)\ncs = [\"r\",\"c\",\"b\",\"g\",\"k\"]\nfig = plt.figure(figsize=(15,25))\n\nfor i,j,k in itertools.zip_longest(attr_col,range(length),cs):\n    plt.subplot(4,2,j+1)\n    ax = sns.distplot(ws_df[i],color=k,rug=True)\n    ax.set_facecolor(\"w\")\n    plt.axvline(ws_df[i].mean(),linestyle=\"dashed\",label=\"mean\",color=\"brown\")\n    plt.legend(loc=\"best\")\n    plt.title(i,color=\"red\")\n    plt.xlabel(\"\")","b7061228":"#Summary View of all attribute , The we will look into all the boxplot individually to trace out outliers\n\nax = sns.boxplot(data=ws_df, orient=\"h\")","dcba173f":"from sklearn.preprocessing import normalize\n\nX_std = normalize(ws_df)\nX_std = pd.DataFrame(X_std, columns=ws_df.columns)\nX_std.head(6)\n","9acae7f2":"#RANDOM ANALYSIS\n#The main aim of the below graphs is to understand relation between products or items and their consumption using random analysis.","f2d55827":"import matplotlib.pyplot as plt \n  \n# defining labels \nactivities = ['Rice', 'Sugar', 'Dal','Flour', 'Salt' , 'Oil'] \n  \n# portion covered by each label \nslices = [8, 5, 7, 2, 4, 6] \n  \n# color for each label \ncolors = ['g', 'b', 'r', 'pink','y', 'violet'] \n  \n# plotting the pie chart \nplt.pie(slices, labels = activities, colors=colors,  \n        startangle=90, shadow = True, explode = (0, 0, 0.1, 0,0,0), \n        radius = 2.3, autopct = '%1.1f%%') \n  \n# plotting legend \nplt.legend() \n  \n# showing the plot \nplt.show() ","bcfe8a45":"import matplotlib.pyplot as plt \n\n# x-coordinates of left sides of bars \nleft = [1, 3, 5, 7, 9, 11] \n\n# heights of bars \nheight = [33.3, 20.8, 29.2, 17.7, 16.7, 8.8] \n\n# labels for bars \ntick_label = ['Rice', 'Sugar', 'Dal', 'Flour', 'Salt' , 'Oil'] \n\n# plotting a bar chart \nplt.bar(left, height, tick_label = tick_label, \n\t\twidth = 0.8, color = ['red', 'y']) \n\n# naming the x-axis \nplt.xlabel('---products\/items---') \n# naming the y-axis \nplt.ylabel('---percentage\/proportion---') \n# plot title \nplt.title('Consumption plot') \n\n# function to show the plot \nplt.show() \n","f5921568":"import matplotlib.pyplot as plt\n\ndays = [1,2,3,4,5]\n\nRice = [7,8,6,11,7]\nSugar =   [2,3,4,3,2]\nDal =  [7,8,7,2,2]\nOil =  [7,8,7,1,2]\nFlour =  [8,5,7,8,13]\nSalt  = [7,4,5,9,11]\n\n\n\nplt.plot([],[],color='m', label='Rice', linewidth=5)\nplt.plot([],[],color='c', label='Sugar', linewidth=5)\nplt.plot([],[],color='r', label='Dal', linewidth=5)\nplt.plot([],[],color='y', label='Oil', linewidth=5)\nplt.plot([],[],color='k', label='Flour', linewidth=5)\nplt.plot([],[],color='b', label='Salt', linewidth=5)\n\n\nplt.stackplot(days,Rice,Sugar,Dal,Flour,Salt,Oil, colors=['m','c','r','y','k','b'])\n\nplt.xlabel('--Along x-axis--')\nplt.ylabel('--Along y-axis--')\nplt.title('--Avg annual Proprortion expenditure--')\nplt.legend()\nplt.show()","8ff5da60":"import matplotlib.pyplot as plt\n\nslices = [10,12,15,7,5, 11]\nactivities = ['Rice','Sugar','Dal','Oil','Flour','Salt']\ncols = ['c','m','r','b','y','pink']\n\nplt.pie(slices,\n        labels=activities,\n        radius=2.1,\n        colors=cols,\n        startangle=90,\n        shadow= True,\n        explode=(0,0.1,0,0,0,0),\n        autopct='%1.1f%%')\n\nplt.title('---Monthly Expenditure in m.u---')\nplt.show()","42f79e0e":"import matplotlib.pyplot as plt\nimport numpy as np\nimport urllib\nimport matplotlib.dates as mdates\n\ndef bytespdate2num(fmt, encoding='utf-8'):\n    strconverter = mdates.strpdate2num(fmt)\n    def bytesconverter(b):\n        s = b.decode(encoding)\n        return strconverter(s)\n    return bytesconverter\n    \n\ndef graph_data(stock):\n\n    fig = plt.figure()\n    ax1 = plt.subplot2grid((1,1), (0,0))\n    \n    # Unfortunately, Yahoo's API is no longer available\n    # feel free to adapt the code to another source, or use this drop-in replacement.\n    stock_price_url = 'https:\/\/pythonprogramming.net\/yahoo_finance_replacement'\n    source_code = urllib.request.urlopen(stock_price_url).read().decode()\n    stock_data = []\n    split_source = source_code.split('\\n')\n    for line in split_source[1:]:\n        split_line = line.split(',')\n        if len(split_line) == 7:\n            if 'values' not in line and 'labels' not in line:\n                stock_data.append(line)\n\n    date, closep, highp, lowp, openp, adj_closep, volume = np.loadtxt(stock_data,\n                                                          delimiter=',',\n                                                          unpack=True,\n                                                          converters={0: bytespdate2num('%Y-%m-%d')})\n\n    ax1.plot_date(date, closep,'-', label='Average Price(Random)')\n    for label in ax1.xaxis.get_ticklabels():\n        label.set_rotation(45)\n    ax1.grid(True)#, color='g', linestyle='-', linewidth=5)\n\n    plt.xlabel('Date')\n    plt.ylabel('Price')\n    plt.title('--Time series depiction of expenditure--')\n    plt.legend()\n    plt.subplots_adjust(left=0.09, bottom=0.20, right=0.94, top=0.90, wspace=0.2, hspace=0)\n    plt.show()\ngraph_data('TSLA')","7d1b1bb3":"heat_map=sns.heatmap(ws_df.head(5))\nplt.title('Item wt description of 1st few rows')\nplt.show()\n","2cfe16c0":"heat_map=sns.heatmap(ws_df.tail(5),cmap='YlGnBu')\nplt.title('Item wt description of last few rows')\nplt.show()","bcd29f87":"# Dropping The Data Set","7e75f28c":"# ### Identifying Outliers-BoxPLot Anlaysis\n    ","b7aacfb4":"### Well, with the help of random analysis it becomes significant to take into consideration the current prices of various items and drawing comparison on it with the expense of household","56fdb14a":"###AARUSHI SHARMA\n###DOT DUMMY GROCERY MODEL\n\n\nWe will make use of Wholesale customers Data Set. This file has been sourced from uci\n![](http:\/\/)\n - https:\/\/archive.ics.uci.edu\/ml\/datasets\/wholesale+customers\n\nThe data set refers to the clients of a wholesale distributor. It includes the annual spending in monetary units (m.u.) on diverse product categories\n\n### Attribute Information:\n    \n- FRESH---> RICE: annual spending (m.u.) on fresh products (Continuous)\n- MILK---> SUGAR: annual spending (m.u.) on milk products (Continuous)\n- GROCERY-->DAL: annual spending (m.u.)on grocery products (Continuous)\n- FROZEN-->FLOUR: annual spending (m.u.)on frozen products (Continuous)\n- DETERGENTS_PAPER-->SALT: annual spending (m.u.) on detergents and paper products (Continuous)\n- -->OIL\n- CHANNEL: customers Channel\u200a-\u200aHoreca (1: Hotel\/Restaurant\/Cafe) or Retail channel (Nominal).\n    \n    ","684e8379":"### Quick Obseravtion: \nAs can be seen from the above there seems to be loads of outliers in almost every attribute. \n    ","b8886c9a":"Line Graph denoting average expenditure with timestamp","71d217f7":"###CHANGING COLUMN HEADERS","eff6fd91":"### Quick Obs: \n\n- Fresh, Milk , grocery all has the mean and median values which are differing a lot. It means the data is skewed and is not normally distributed\n- None of the attribute  seems to have normal distibution \n- There seems to be skewness in the data attributes\n\n## Univariate Data visualization of attributes: \n","5247d67b":"### Loading The Data Set","06351df4":"Pie chart denoting percentage expenditure","eca78477":"\n[](http:\/\/)### Analysis: \n\nAs all the attributes above are non-null and have equal nog rows\u00a0, there seems to be no missing values. All the attributes are of numerical type\u00a0.\n\n\n### EDA:\u00a0\n\nLet's try to see how the attributes are distributed. To find if there are any outliers in the given data set etc..\n\n### Descriptive Statistics: \n","bcff2386":"## Normalizing The Dataset ","789ec443":"Mean Annual spending of clients on grocery items\/products in monetary units(m.u) with reference to wholesale grocery dataset","fe59a253":"![](http:\/\/)### Quick Observation: \n\n - As can be seen above almost all the attribites are highly skewed with long positive tails. \n"}}