{"cell_type":{"ff1f50bf":"code","95850fc5":"code","d0336ecf":"code","8e01169d":"code","62e73c21":"code","854bff39":"code","5260fa53":"code","a7e0c099":"code","37db1046":"code","23f88c68":"code","3f00f94f":"code","a83ab5c2":"code","56f6787d":"code","c8ba8a4e":"code","586d7687":"code","92b4f122":"code","0173db32":"code","39f1b679":"code","4e2cabb1":"code","7d973605":"code","bb7615b9":"code","97638692":"code","9dd993de":"code","d84251b1":"code","4e9b2b3e":"code","2369e108":"code","66de9144":"code","35a29a7d":"code","61cc9990":"code","6ae35ff2":"markdown","b724bab6":"markdown","e8a08fb2":"markdown","c26a2f2d":"markdown","27f8b57b":"markdown"},"source":{"ff1f50bf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","95850fc5":"import matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\n\n%matplotlib inline","d0336ecf":"data_X = pd.read_csv(os.path.join(dirname,'training_set_features.csv'))\ndata_y = pd.read_csv(os.path.join(dirname,'training_set_labels.csv'))","8e01169d":"data_X.head(50)","62e73c21":"data_y.head()","854bff39":"data_X.info()","5260fa53":"data_y.info()","a7e0c099":"data_y['h1n1_vaccine'].value_counts()","37db1046":"data_y['seasonal_vaccine'].value_counts()","23f88c68":"data_X.isna().sum()","3f00f94f":"data_X.max()","a83ab5c2":"data_X = data_X.drop('respondent_id', axis = 1)","56f6787d":"plt.rcParams[\"figure.figsize\"] = (15,30)","c8ba8a4e":"data_X['health_worker'].sum()","586d7687":"data_X['health_worker'].isna().sum()","92b4f122":"hw_with_insurance = data_X[(data_X['health_worker'] == 1) & (data_X['health_insurance']==1)]\nhw_with_insurance['health_worker'].sum()","0173db32":"hw_without_insurance = data_X[(data_X['health_worker'] == 1) & (data_X['health_insurance']==0)]\nhw_without_insurance['health_worker'].sum()","39f1b679":"# close to half the values of these columns are NULL so discarding\ndata_X.drop(['health_insurance','employment_industry','employment_occupation'],axis=1,inplace = True)","4e2cabb1":"conc = [data_X, data_y]\ndata = pd.concat(conc, axis = 1)\ndata.head()\ndata = data.drop('respondent_id', axis =1)\ndata","7d973605":"# For categorical features\nfor col in data.columns:\n    if data[col].isnull().sum() and data[col].dtypes == 'object':\n        data[col].loc[(data[col].isnull())] = data[col].mode().max()","bb7615b9":"# For Numerical features\nfor col in data.columns:\n    if data[col].isnull().sum() and data[col].dtypes != 'object':\n        data[col].loc[(data[col].isnull())] = data[col].median()","97638692":"data.isnull().sum()","9dd993de":"data","d84251b1":"# One Hot Encoding for Categorical Features\n\ncols = data.columns # Data Columns\n\nnum_cols = data._get_numeric_data().columns # Numerical Columns\ndata_num = data[num_cols]\n\ncate_columns  = list(set(cols) - set(num_cols)) # Categorical Columns\n\ndata_one_hot_cat = pd.DataFrame()\n\nfor each in data[cate_columns]:\n    dummies = pd.get_dummies(data[each], prefix=each, drop_first=False)\n    data_one_hot_cat = pd.concat([data_one_hot_cat, dummies], axis=1)\n    \ndata_one_hot = pd.concat([data_num, data_one_hot_cat], axis=1)\n\ndata_one_hot","4e9b2b3e":"# histograms\ndata_one_hot[num_cols].hist()\nplt.show()","2369e108":"data_one_hot_cat.hist()\nplt.show()","66de9144":"# Correlation between feature\ndef corrl(data):\n    corr = data.corr()\n    # Generate a mask for the upper triangle\n    mask = np.triu(np.ones_like(corr, dtype=bool))\n    heat_plot = sns.heatmap(corr, mask = mask, vmax=.3, center=0,\n                square=True, linewidths=1, cbar_kws={\"shrink\": .5}, annot=True, fmt='.2f', cmap='Spectral', xticklabels=True , yticklabels=True )\n    sns.despine()\n    heat_plot.figure.set_size_inches(30,25)\n\n    plt.show()\n    \ncorrl(data_num)\ncorrl(data_one_hot_cat)","35a29a7d":"sns.catplot('h1n1_vaccine',data=data_y,kind='count', height = 3.5)\nsns.catplot('seasonal_vaccine',data=data_y,kind='count', height = 3.5)","61cc9990":"categorical = data_X.select_dtypes(include = 'object').columns\ndata_X[categorical].head()","6ae35ff2":"**Set up the configuration**\n\nLet's start off with our Python program and begin with installing and importing the necessary packages.","b724bab6":"Some important points\nIf health worker, we can assume that they have health insurance\nCountries with universal healthcare include Austria, Belarus, Bulgaria, Croatia, Czech Republic, Denmark, Finland, France, Germany, Greece, Iceland, Isle of Man, Italy, Luxembourg, Malta, Moldova, Norway, Poland, Portugal, Romania, Russia, Serbia, Spain, Sweden, Switzerland, Turkey, Ukraine, and the United Kingdom --- Not valid as the data is only for US","e8a08fb2":"The main purpose of this dataset is to perform a multilaber classification of wheather a person will take **H1N1 Vaccine** or **Seasonal Flu Vaccine**.\n","c26a2f2d":"Filling up all the null values with median values","27f8b57b":"We can see from above that we have lot of missing values for health insurance, employment_industry, employment_occuppation"}}