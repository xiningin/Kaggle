{"cell_type":{"e700ce32":"code","7301ba3c":"code","db55ae81":"code","e6da5bd4":"code","6ad9c9b9":"code","01d22fb5":"code","4731f05e":"code","28734259":"code","a318f671":"code","0e2a9f27":"code","f67bafd6":"code","fd76b604":"code","2ce429ae":"code","17075776":"code","1c089c49":"code","5adc0018":"code","8adaaee8":"code","dfad6858":"code","b1dc9328":"code","96869db7":"code","1ef4ca48":"code","55613fc5":"code","94ae6ff9":"code","420e0a6c":"code","1ccff651":"markdown","9ff522b5":"markdown","9d6cc796":"markdown","0ff91813":"markdown","497d2d42":"markdown","e3f9ab44":"markdown","b46580d1":"markdown","f222ca55":"markdown","930e6658":"markdown","a4cf8169":"markdown","987deb9f":"markdown","cf2e3350":"markdown","3f7087af":"markdown","d170ed87":"markdown","63232e68":"markdown","e274e6fa":"markdown","888de76f":"markdown","7af3ca2c":"markdown","1557351a":"markdown","c6faecbd":"markdown","0f389500":"markdown","764cef20":"markdown"},"source":{"e700ce32":"#Setup enviornment \nfrom google.cloud import bigquery \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns ","7301ba3c":"#Create the client object \nclient = bigquery.Client()\n","db55ae81":"#create the reference to the dataset \ndataset_ref = client.dataset(\"san_francisco_bikeshare\", project=\"bigquery-public-data\")\n\n#API request \ndataset = client.get_dataset(dataset_ref)","e6da5bd4":"#Preview the data \ntables_list = list(client.list_tables(dataset))\n\n#Identify the names of the tables\nfor i in tables_list:\n    print(i.table_id)\n    \n#Create a refence to a table in the dataset \ntable_ref = dataset_ref.table('bikeshare_regions')\n\n#API request \ntable = client.get_table(table_ref)\n\n#Create a dataframe \ndf = client.list_rows(table, max_results = 5).to_dataframe()\nprint(df)\n\n#Create a reference to the remaining tables\ntable2_ref = dataset_ref.table('bikeshare_station_info')\ntable3_ref = dataset_ref.table('bikeshare_station_status')\ntable4_ref = dataset_ref.table('bikeshare_trips')\n\ntable_list = [table2_ref, table3_ref, table4_ref]\nfor i in table_list:\n    table = client.get_table(i)\n    #View the schema of each table to get more info about each column \n    print(table.schema)\n    df = client.list_rows(table, max_results = 5).to_dataframe()\n    print(df.columns)\n    print(df)\n","6ad9c9b9":"#Get an idea of how big the 'bikeshare_trips' table is \nquery = \"\"\"\nSELECT *\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\n\"\"\"\n\n#Create a QueryJobConfig object and set the dry_run parameter to True \ndry_run_config = bigquery.QueryJobConfig(dry_run = True)\n\n#API request to estimate memory usage\ndry_query_run = client.query(query, job_config = dry_run_config)\n\nprint(\"This query will process {} bytes.\".format(dry_query_run.total_bytes_processed))","01d22fb5":"#Set a query limit of 1 gb\none_gb = 1000*1000*1000\nsafe_query = bigquery.QueryJobConfig(maximum_bytes_billed = one_gb)\n\n#First query \nquery1 = \"\"\"\nSELECT DISTINCT(station_id)\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_station_info`\nWHERE short_name LIKE 'SF%' \n\"\"\"\n\n#run the query\nquery_res = client.query(query1, job_config = safe_query)\n\n#Create a dataframe \nquery_res = query_res.to_dataframe()\nprint(query_res)\nprint('There is a total of 263 stations')","4731f05e":"#use both 'bikeshare_station_info' and 'bikeshare_trips' to find the top 10 start stations\n\nquery2 = \"\"\"\nSELECT start_station_id, COUNT(trip_id) as trips_n \nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_station_info` as t1\nINNER JOIN `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips` as t2 \nON t1.station_id = t2.start_station_id \nWHERE short_name LIKE 'SF%' \nGROUP BY (start_station_id)\nORDER BY COUNT(trip_id) desc\nLIMIT 10\n\"\"\"\n\nquery_res2 = client.query(query2)\n\nquery_res2 = query_res2.to_dataframe()\nprint(query_res2)\n\n#change the data type of the \"start_station_id\" to a string \nquery_res2['start_station_id'] = query_res2['start_station_id'].astype('str')","28734259":"#Create a box plot of the ten most popular start stations \nplt.bar(query_res2.start_station_id, query_res2.trips_n)\nplt.xlabel('Station Number')\nplt.ylabel('Count of Trips')\nplt.title('Top Ten most Popular Start Stations')\nplt.xticks(query_res2['start_station_id'])\nplt.show()","a318f671":"#use both 'bikeshare_station_info' and 'bikeshare_trips' to find the top 10 end stations\nquery3 = \"\"\"\nSELECT end_station_id, COUNT(trip_id) as trips_n \nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_station_info` as t1\nINNER JOIN `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips` as t2 \nON t1.station_id = t2.start_station_id \nWHERE short_name LIKE 'SF%' \nGROUP BY (end_station_id)\nORDER BY COUNT(trip_id) desc\nLIMIT 10\n\"\"\"\nquery_res3 = client.query(query3)\nquery_res3 = query_res3.to_dataframe()\nquery_res3","0e2a9f27":"#Change the data type of the \"end_station_id\" to a string \nquery_res3['end_station_id'] = query_res3['end_station_id'].astype('str')\nquery_res3.dtypes","f67bafd6":"#Create a box plot of the ten most popular start stations \nplt.bar(query_res3.end_station_id, query_res2.trips_n)\nplt.ylabel('Count of Trips')\nplt.xlabel('Station Number')\nplt.title('Top 10 most Popular End Stations')\nplt.xticks(query_res3['end_station_id'])\nplt.show()","fd76b604":"#Finding start and end stations represented in both dataframes\nmerge_df = pd.merge(query_res2, query_res3, left_on='start_station_id', right_on='end_station_id', how=\"inner\")\nmerge_df","2ce429ae":"#Find the top routes\nquery11 = \"\"\"\nSELECT start_station_id, end_station_id, COUNT(trip_id) as trip_count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_station_info` as t1 \nINNER JOIN `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips` as t2 \nON t1.station_id = t2.start_station_id \nWHERE short_name LIKE 'SF%'\nGROUP BY start_station_id, end_station_id\nORDER BY COUNT(trip_id) DESC\nLIMIT 10 \n\"\"\"\n\nquery11_res = client.query(query11)\nquery11_res = query11_res.to_dataframe()\nquery11_res","17075776":"#Count the number customer and subscribers \nquery4 = \"\"\"\nSELECT subscriber_type, COUNT(subscriber_type) as num_total\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY subscriber_type\n\"\"\"\nquery_res4 = client.query(query4)\nquery_res4 = query_res4.to_dataframe()\nquery_res4","1c089c49":"#Identify the busiest time of day \nquery5 = \"\"\"\nSELECT extract(HOUR FROM start_date) as hour, COUNT(trip_id) as trip_count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY hour\nORDER BY hour \n\"\"\"\n\nquery_res5 = client.query(query5)\nquery_res5 = query_res5.to_dataframe()\n\n#Create a list to change the hour column \nhour_list = ['12 am', '1 am', '2 am','3 am','4 am','5 am','6 am','7 am', '8 am', '9 am', '10 am', '11 am', '12 pm', '1 pm', '2 pm','3 pm','4 pm','5 pm','6 pm','7 pm', '8 pm', '9 pm', '10 pm', '11 pm']\n\n#Replace the values in the column with the values in the list \nquery_res5['hour'] = hour_list\nprint(query_res5)","5adc0018":"#Plot the dataframe as a bar graph \n\nplt.bar(query_res5.hour, query_res5.trip_count)\nplt.ylabel('Count of Trips')\nplt.xlabel('Hours in the Day')\nplt.title('Activity of Users throughout the Day')\nplt.xticks(rotation = 90)\nplt.show()","8adaaee8":"#Identify the difference between Subscribers and customers count during the day\nquery8 = \"\"\"\nSELECT extract(HOUR FROM start_date) as hour, subscriber_type, COUNT(*) as count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY hour, subscriber_type\nORDER BY hour \n\"\"\"\n\nquery8_res = client.query(query8)\nquery8_res = query8_res.to_dataframe() \n\n#Create a list to change the hour column \nhour_list2 = ['12 am', '12 am', '1 am', '1 am', '2 am', '2 am','3 am', '3 am','4 am', '4 am','5 am', '5 am','6 am', '6 am','7 am', '7 am', '8 am', '8 am','9 am', '9 am', '10 am', '10 am', '11 am', '11 am', '12 pm', '12 pm', '1 pm','1 pm', '2 pm','2 pm','3 pm','3 pm','4 pm','4 pm','5 pm','5 pm','6 pm','6 pm','7 pm','7 pm', '8 pm','8 pm', '9 pm','9 pm', '10 pm','10 pm', '11 pm', '11 pm']\n\n#Change the hour column \nquery8_res['hour'] = hour_list2\nprint(query8_res.head())\nquery8_res.dtypes ","dfad6858":"#filter for subscribers and customers into individual dataframes \ndf1 = query8_res[query8_res['subscriber_type'] == 'Subscriber']\ndf2 = query8_res[query8_res['subscriber_type'] == 'Customer']\n\n\n#Create the x-axis - the np.arange() function from numpy library is used to create a range of values \nx_axis = np.arange(len(hour_list))\n\n#To avoid overlapping of bars in each group, the bars are shifted -0.2 units and +0.2 units from the x-axis \n#The width of the bars of each graph is set 0.4 units \nplt.bar(x_axis - 0.2,  df1['count'], 0.4, label=\"Subscriber\")\nplt.bar(x_axis + 0.2, df2['count'], 0.4, label=\"Customer\")\nplt.xticks(x_axis, hour_list, rotation = 90)\nplt.xlabel('Hours in the Day')\nplt.ylabel('Count of Trips')\nplt.title('Activity of Users Throughout the Day')\nplt.legend()\nplt.plot()","b1dc9328":"#Identify the busiest day's of the week \nquery6 = \"\"\"\nSELECT extract(DAYOFWEEK FROM start_date) as day, COUNT(trip_id) as trip_count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY day\nORDER BY day \n\"\"\"\n#DAYOFWEEK: Returns values in the range [1, 7] with Sunday as the first day of the week \n\nquery6_res = client.query(query6)\nquery6_res = query6_res.to_dataframe()\nprint(query6_res)\n\n#Create list of days in a week to create the x_axis \nday_list = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat']\nquery6_res['day'] = day_list\n\n#plot the bar graph \nplt.bar(query6_res['day'], query6_res['trip_count'])\nplt.xlabel('Days of the Week')\nplt.ylabel('Count of Trips')\nplt.title('Activity of Users throughout the Week')\nplt.plot()","96869db7":"#Identify the difference between Subscribers and customers count throughout the week\nquery9 = \"\"\"\nSELECT extract(DAYOFWEEK FROM start_date) as day, subscriber_type, COUNT(*) as count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY day, subscriber_type\nORDER BY day\n\"\"\"\n\nquery9_res = client.query(query9)\nquery9_res = query9_res.to_dataframe()\nprint(query9_res)\n\n#Filter the dataframe into subscribers and customers \ndf_s = query9_res[query9_res['subscriber_type'] == 'Subscriber']\ndf_c = query9_res[query9_res['subscriber_type'] == 'Customer']","1ef4ca48":"#Create a bar plot representing both subscriber and customer counts throughout the week\n\n#Create list of days in a week to create the x_axis \nday_list = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat']\n\n#create the x_axis \nx_axis2 = np.arange(len(day_list))\n\n#plot the bar graph \nplt.bar(x_axis2 - 0.2,  df_s['count'], 0.4, label=\"Subscriber\")\nplt.bar(x_axis2 + 0.2,  df_c['count'], 0.4, label=\"Customer\")\nplt.xticks(x_axis2, day_list)\nplt.xlabel('Days of the Week')\nplt.ylabel('Count of Trips')\nplt.title('Activity of Users throughout the Week')\nplt.legend()\nplt.show()","55613fc5":"#Identify the busiest months of the year \nquery7 = \"\"\"\nSELECT extract(MONTH FROM start_date) as month, COUNT(trip_id) as trip_count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY month\nORDER BY month\n\"\"\"\n\nquery7_res = client.query(query7)\nquery7_res = query7_res.to_dataframe()\n\n#Change the month column from int to string \nmonth_list = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nquery7_res['month'] = month_list\nprint(query7_res)\n\n#Create the bar plot \nplt.bar(query7_res['month'], query7_res['trip_count'])\nplt.xlabel('Months in the Year')\nplt.ylabel('Count of Trips')\nplt.title('Activity of Users throughout the Year')\nplt.plot()","94ae6ff9":"#identify the difference in activity between customers and subscribers throughout the year \n\nquery10 = \"\"\"\nSELECT extract(MONTH FROM start_date) as month, subscriber_type, COUNT(*) as count\nFROM `bigquery-public-data.san_francisco_bikeshare.bikeshare_trips`\nGROUP BY month, subscriber_type\nORDER BY month \n\"\"\"\n\nquery10_res = client.query(query10)\nquery10_res = query10_res.to_dataframe()\nprint(query10_res.head())\n\n#Filter the dataframe for subscribers and customers\ndf_s2 = query10_res[query10_res['subscriber_type'] == \"Subscriber\"]\ndf_c2 = query10_res[query10_res['subscriber_type'] == \"Customer\"]\n","420e0a6c":"#Create a bar plot representing subscriber and customer activity throughout the year \n\n#Create the x-axis \nx_axis3 = np.arange(len(month_list))\n\n#plot the bar graph \nplt.bar(x_axis3 - 0.2,  df_s2['count'], 0.4, label=\"Subscriber\")\nplt.bar(x_axis3 + 0.2,  df_c2['count'], 0.4, label=\"Customer\")\nplt.xticks(x_axis3, month_list)\nplt.xlabel('Months in the Year')\nplt.ylabel('Count of Trips')\nplt.title('Activity of Users throughout the Year')\nplt.legend()\nplt.show()","1ccff651":"## Top Start and End Stations","9ff522b5":"The busiest day's of the week appear to be during the **weekday**, and not the **weekend**. Further analysis will be needed to uncover why this is true, and not the opposite for bike sharing. ","9d6cc796":"The shape of the distribution of the number of rides for both, subscribers and customers are completely different. The number of rides throughout the day for subscribers is vastly greater than that of customers. The peak hours for customers appears to be in the **afternoon**, between 1 to 5 pm. My hypothesis is that both subscribers and customers, partake in different activities throughout the day. ","0ff91813":"# Analyze the Data \n\nI'll begin by writing a query to find the number of stations in San Francisco ","497d2d42":"## Customers and Subscribers \n\nA number of options are available to riders, ranging from single rides to an annual subscription. The current pricing for the options are:\n* Single rides start at $3 per trip\n\n* Day passes start at $10 per day \n\n* Memberships are $25 per month, or $159 per year \n\nRiders are labeled as a **Subscriber** if they purchase an annual or 30-day plan, whereas riders who purchase single rides or day passes are known as **Customers**.\n\nThe future success of Bay Wheels could be the conversion of customer to subscribers, making it even more important to understand how customers and subscribers differ on the platform. From this analysis a promotion plan can then be made to incentivize customers on becoming subscribers to the platform. \n","e3f9ab44":"The number of total rides throughout the **weekday** between subscribers and customers has the greatest numbers of disproportion. While the number of riders for subscribers on the weekend drops drastically drops, the difference between subscribers and customers becomes more proportional. ","b46580d1":"# Feedback ","f222ca55":"# Tableau Dashboard ","930e6658":"If you have the opportunity, please check out the dashboard I created for this analysis [LINK](https:\/\/public.tableau.com\/app\/profile\/adrian.gonzalez8681\/viz\/SanFranciscoBikeSharingDashboard\/Dashboard1)","a4cf8169":"# Conclusion and Final Thoughts \n","987deb9f":"There are a total of 5 stations from both dataframes that are in the top 10 stations. The question that then comes to mind is, **why might these station be so popular?** My initial thoughts to the question might be due to location and routes. I will begin by looking at the top routes to draw any correlation between the top start and end stations. ","cf2e3350":"Unfortunately, I am not able to get the number of individual customer and subscribers due to what I believe is privacy reasons. But, I am able to get the number of rides for both customers and subscribers. \n\nSubscribers have **5x** the number of rides compared to customers on the platform. My hypothesis is that subscriber use the bicycles as a means of commute, while subscribers may use the bicycles for leisure activities. Further insights between Subscribers and Customers will also be analyzed below in the **Activity** segment. \n","3f7087af":"Now that I have previewed the data, I can begin to generate questions that can lead to insights about ride sharing in the city of San Francisco. And also, write my first queries to make it possible.  \n\nGeneral overviews of the data:\n* Trip information \n* Customer information \n* Station information  \n\n## General Questions for analysis\n1. How do members and subscribers differ in usage?\n2. What are the most popular start and end station pairings? \n3. Which hour in the day, and day has the high level of traffic?","d170ed87":"From the 263 stations around the city, which are the most popular start and end stations? ","63232e68":"There is a large disproportion in the number of rides between Subscribers and Customers throughout the year. While these numbers may be disproportion, the distribution of rides throughout the year for both Subscribers and Customers follows a similar shape. The busiest season of the year for both Subscribers and Customers appears to be **autumn**, as noted in the section above for all users. ","e274e6fa":"## Activity\nBicycles are available 24 hours a day, 365 days a year for riders. Understanding what time of day, which day of the week, and month of year is the busiest will help further my analysis. ","888de76f":"* The disproportion in the number of rides between subscribers and customers is high, with subscribers greater than customers. \n* The shape of the distribution in the number of rides between subscribers and customers thoughout the day is completely different. \n* The busiest time for bike sharing in the San Francisco region is during **autumn**\n\nThank you for taking the time to view my initial analysis on bike sharing with BigQuery! I will continue to update this project with additional queries and insights within the coming days\/weeks, showcasing better data-driven visualizations and insights. This project was ment as an introduction to working with BigQuery to analyze a dataset, hopefully I was able to provide a level of insight on how to complete the analysis process.  ","7af3ca2c":"The distribution represents a **bimodal shape.** The peak hours are 8 am and 5 pm as shown in the graph, which may be the result of riders communiting to work or school in the morning and evening. Further analysis will be needed to uncover any correlations within the data.","1557351a":"# San Fransico Bay Wheels \n![image](https:\/\/techcrunch.com\/wp-content\/uploads\/2018\/01\/gettyimages-866244720.jpg?w=1390&crop=1)\n\nMy first project importing and analyzing data from BigQuery on Kaggle. This will be the basis for future work, involving huge dataset from BigQuery by putting my SQL skills to work.  \n\nBay Wheels, formerly known as Ford GoBike have become a new form of transportation in the San Francisco area, offering benefits such as affordability, convenience, and exercise for riders. The bike share system is divided into stations around the city, users are able to unlock and return bicycles at any station once their trip is complete. \n\n\n## About the Data \nThe dataset contains trip data from 2013-2018, including the following:\n* **Trip ID**\n* **Duration (in seconds)**\n* **Subscription Type**\n* **Start time**\n* **End time**\n* **Start Station** \n* **End Station** \n* **Latitude**\n* **Longitude**\n","c6faecbd":"A few of the top start and end stations appear in both dataframes, I will continue by identifying those stations to gain more insight.","0f389500":"I would appreciate any feedback, or upvotes as a new data enthusiast if you found the analysis helpful. ","764cef20":"The busiest months of the year appear to be during **April** and **October**, which are during two completely different seasons. But, the busiest season appears to be during autumn (August, September, and October). It's also worth noting that San Francisco is located in northern California, where the summers are long, confortable, and the winters are short, and partial cloudy. And according to the **Tourism Score**, based on this [article](https:\/\/weatherspark.com\/y\/557\/Average-Weather-in-San-Francisco-California-United-States-Year-Round#Sections-BestTime), the best time to visit San Francisco for warm-weather activities is from **late June** to **early October.**  The autumn season falls within this time frame, but additional analysis will be needed to understand the relationship between bike sharing and warm weather in greater detail. "}}