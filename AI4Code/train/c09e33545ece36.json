{"cell_type":{"e24e997f":"code","8650515d":"code","e8f4720d":"code","956189e6":"code","35569683":"code","2f02c5b2":"code","3316ebae":"code","ea846778":"code","f4e56f77":"code","a7bb5100":"code","0495543e":"code","33b3bf39":"code","d20e06f0":"code","dd21e6b2":"code","8b281337":"code","723f0291":"code","6faa1a84":"code","9e215d6a":"code","4ded9e17":"code","83442faf":"code","f84205b9":"code","868ccd7c":"code","824b8ce2":"code","04cbdbf3":"code","ecc12723":"code","f62f02c9":"code","630bfcd7":"code","b041af3b":"code","39a56956":"code","a0b532fa":"code","172825c3":"code","2f158bb8":"code","7e4dffee":"code","b7fe8e29":"code","c4719792":"code","6d8858a7":"code","8b87ebbf":"code","4e9a59f2":"code","e9a0078c":"code","57f86894":"code","f8c47082":"code","b595bc8e":"code","bdd5bc46":"code","9697f0ed":"code","3fbe6fe7":"code","28288daa":"code","317977a3":"code","870e01c7":"code","b859d273":"code","63cce745":"code","10f3de56":"code","3ef90a66":"code","c70d4bc2":"code","a49b07c1":"code","2ddf3780":"code","97394382":"markdown","339eb3c2":"markdown","640d3675":"markdown","908c6bd5":"markdown","e0a5cf96":"markdown","4635e4cf":"markdown","41ce1405":"markdown","7f7ce714":"markdown","1bb6ed94":"markdown","b1c0da79":"markdown","3c9f7403":"markdown","a50f462a":"markdown","77b4e604":"markdown","5b0a6ee2":"markdown","b69d791d":"markdown","1ccdcb59":"markdown","df6c8b4e":"markdown","0d2e8940":"markdown","97bc2bcb":"markdown","27e7f7cd":"markdown","e80f0058":"markdown","3d67503c":"markdown","55a0d1f9":"markdown","2de4084f":"markdown","db3c5cdc":"markdown","0af40d28":"markdown"},"source":{"e24e997f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport seaborn as sns; sns.set()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8650515d":"data_train=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndata_gender=pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\ndata_test=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","e8f4720d":"data_train","956189e6":"data_gender","35569683":"data_test","2f02c5b2":"pd.options.display.max_rows=None\npd.options.display.max_columns=None\ndisplay(data_train)","3316ebae":"pd.reset_option(\"display.max_rows\")\npd.reset_option(\"display.max_columns\")\npd.get_option(\"display.max_rows\")","ea846778":"pd.set_option(\"display.max_rows\",20)\ndisplay(data_test)","f4e56f77":"data_train, data_gender, data_test","a7bb5100":"data_train.info()\n#There are missing values in cabin and age.","0495543e":"data_test.info()\n#There are missing values in age and cabin.","33b3bf39":"data_train.columns, data_gender.columns, data_test.columns","d20e06f0":"len(data_train.columns),len(data_gender.columns),len(data_test.columns)","dd21e6b2":"display(data_train.tail())\ndisplay(data_gender.tail())\ndisplay(data_test.tail())","8b281337":"data_merged=pd.merge(data_gender,data_test,on=\"PassengerId\")\ndata_merged","723f0291":"data_train.columns==data_merged.columns","6faa1a84":"data=pd.concat([data_train,data_merged],ignore_index=True)\ndata","9e215d6a":"data.info()","4ded9e17":"data.describe().T\n","83442faf":"data[\"Age\"].mean()","f84205b9":"data.Age.median()","868ccd7c":"data.Age.max()","824b8ce2":"perc = [.10,.20,.40,.60,.80]\ninclude = ['float','integer']\ndesc = data.describe(percentiles = perc, include = include)\ndesc.T","04cbdbf3":"c=data.corr()\nc","ecc12723":"c[c<1].abs().max() \n#Getting the max values of correlation coefficient (as absolute values) for each variable.","f62f02c9":"a=c.abs()<1\nc.abs()[a].max()\n# Getting the max values of correlation coefficient \n#(as absolute values) for each variable (Another method)\n# We see relatively strong relation between fare and \n#passenger class.","630bfcd7":"a=c.abs()<1\nb=c.abs()>.5\nc.abs()[a&b]\n# a method to see absolute values of correlation <1 and >0.5","b041af3b":"data.isna().sum()","39a56956":"data[data.Cabin.isna()]\n# Getting the nan values in cabin column\n# We see that we have 1014 rows as nan values","a0b532fa":"data[data.Cabin.isna()==False]\n# Getting the data excluding nan values","172825c3":"#1)for cabin:\ndata[\"Cabin\"].value_counts()","2f158bb8":"#2)for name:\ndata[\"Name\"].value_counts()\n# We see two repeating names here.","7e4dffee":"data[(data.Name==\"Connolly, Miss. Kate\")|(data.Name==\"Kelly, Mr. James\")]\n# We see that they have different information, so they are not the same persons.","b7fe8e29":"#for tickets:\ndata.Ticket.value_counts()\n#There are also  some repeating values.","c4719792":"data[data.Ticket==\"CA. 2343\"]\n#We can say for CA. 2343 that the people who have the same ticket number are from the same family.","6d8858a7":"data.Survived.unique(), data.Sex.unique(), data.Pclass.unique(), data.SibSp.unique(), data.Parch.unique(), data.Embarked.unique()","8b87ebbf":"data[(data.Parch==0)&(data.SibSp==0)]\n#We see that 790 people travelled alone.","4e9a59f2":"data[(data.Parch>=1)|(data.SibSp>=1)][\"Survived\"].mean()","e9a0078c":"data[\"Survived\"].mean()","57f86894":"data[\"Survived\"][(data.Parch==0)&(data.SibSp==0)].mean()","f8c47082":"data.Survived[data.Sex==\"female\"].mean()","b595bc8e":"data[\"Survived\"].mean()","bdd5bc46":"data.Survived[data.Age<18].mean()","9697f0ed":"data.Survived.mean()","3fbe6fe7":"data.Survived[data.Pclass==1].mean()","28288daa":"data.Survived[data.Pclass==2].mean()","317977a3":"data.Survived[data.Pclass==3].mean()","870e01c7":"data.columns","b859d273":"dat=data.copy()","63cce745":"dat.rename(columns={\"SibSp\":\"kardes_es\",\"Parch\":\"Eb_cocuk\"},inplace=True)\ndat","10f3de56":"#First method of replace\ndat.Survived.replace(0,\"died\",inplace=True)\ndat.Survived.replace(1,\"live\",inplace=True)\ndat","3ef90a66":"#Second method\ndat.replace([\"S\",\"C\",\"Q\"],[\"Southampton\",\"Cherbourg\",\"Queenstown\"],inplace=True)\ndat","c70d4bc2":"# data1.Kabin.fillna('Belirsiz', inplace = True)\n# data1","a49b07c1":"data","2ddf3780":"plt.figure(figsize = (12,8))\nsns.barplot(x='Embarked',y ='Fare',hue=\"Sex\",data = data )\nplt.xticks(rotation=30);\n\n#For making much clear of the axis and table names\nplt.xlabel('Embarked Names')\nplt.ylabel('Amount of fare')\nplt.title('Relationship of Embarked and Fare');","97394382":"### correlation","339eb3c2":"### Repeating Values:\n\n* We will use value_counts() for finding repeating values.","640d3675":"### Replacing NaN valuse(using fillna()):","908c6bd5":"### Passengers traveling alone:","e0a5cf96":"### Seeing different categories in categorical variables(using unique()):","4635e4cf":"### Variable Notes\npclass: A proxy for socio-economic status (SES)\n* 1st = Upper\n\n* 2nd = Middle\n* 3rd = Lower\n\nage: Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5\n\nsibsp: The dataset defines family relations in this way...\nSibling = brother, sister, stepbrother, stepsister\nSpouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n\nparch: The dataset defines family relations in this way...\nParent = mother, father\nChild = daughter, son, stepdaughter, stepson\nSome children travelled only with a nanny, therefore parch=0 for them.","41ce1405":"# Only Try to learn(for dat)","7f7ce714":"conclusion:\n* We see that the mean of survival is higher in people who travel together, we can make an initial assessment that\n* families, particularly the women and children, were given priority to get on rescue boats.","1bb6ed94":"data_gender.info()","b1c0da79":"conclusion:\n* We also see that passengers with higher class have survival rates above average.(pivot ile daha rahat incelenebilir).","3c9f7403":"### We can see all data together.","a50f462a":"## Merging data and Concat data:","77b4e604":"### Outlook of Data","5b0a6ee2":"### General informations using info():","b69d791d":"### Using set_option:","1ccdcb59":"### Changing columns names:","df6c8b4e":"conclusion:\n* We see that women and passengers younger than 18 have a higher survival average than the total average. ","0d2e8940":"### For the concat we will see,is the columns same? ","97bc2bcb":"### We will find number od NaN values(using isna()):","27e7f7cd":"### Changing the percentiles","e80f0058":"### Reset display option:\n* we must reset option for using simple.","3d67503c":"### WE WILL DO:\n* Reading Files\n* Outlook of Data\n* We will see all data\n* Reset display option\n* Using set_option\n* We can see all data together\n* General informations using info()\n* Merging data and Concat data\n* For the concat we will see,is the columns same?\n* Lets see the statistics od the data,using describe()\n* Changing the percentiles\n* correlation\n* We will find number od NaN values(using isna())\n* Repeating Values\n* Seeing different categories in categorical variables(using unique()):\n* Traveling alone or not,gender for loiking survived\n* Only Try to learn(for dat:changing columns,rename,replace,fillna,..)","55a0d1f9":"### Reading Files:","2de4084f":"### We will see all data:","db3c5cdc":"### Overview\n* The data has been split into two groups:\n\n* training set (train.csv)\n* test set (test.csv)\nThe training set should be used to build your machine learning models. For the training set, we provide the outcome (also known as the \u201cground truth\u201d) for each passenger. Your model will be based on \u201cfeatures\u201d like passengers\u2019 gender and class. You can also use feature engineering to create new features.\n\nThe test set should be used to see how well your model performs on unseen data. For the test set, we do not provide the ground truth for each passenger. It is your job to predict these outcomes. For each passenger in the test set, use the model you trained to predict whether or not they survived the sinking of the Titanic.\n\nWe also include gender_submission.csv, a set of predictions that assume all and only female passengers survive, as an example of what a submission file should look like.","0af40d28":"### Lets see the statistics od the data,using describe()"}}