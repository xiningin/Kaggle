{"cell_type":{"bd1a0cf6":"code","8e1cb81a":"code","35c4a290":"code","d48c36c5":"code","b9cfef03":"code","36f4ad03":"code","96d26457":"code","9e47b020":"code","4ef8ba0c":"code","e909b737":"code","175ef11d":"code","0a8c6553":"code","ca2e2ac0":"code","f20162b9":"code","190718ca":"code","6a89a4f0":"code","18546b2e":"code","5103aa74":"code","ccc3a55d":"code","47f89b84":"code","6a388d01":"code","e87f1549":"code","0c8d2d4d":"code","00c17ea6":"code","20584065":"code","2b58ad94":"code","10bcfd5b":"code","ba72efaf":"code","933379f5":"code","9cbfb5ab":"markdown","06f79425":"markdown","8ff69d58":"markdown","03cc77b7":"markdown","b7368d38":"markdown","6d6e12f0":"markdown","6dabcaf5":"markdown","2b528ac2":"markdown","21463a96":"markdown","3ff87c99":"markdown","98911bc2":"markdown","9b91381e":"markdown","43b26290":"markdown","4c5fc836":"markdown","a782beba":"markdown","14cba282":"markdown","090d523c":"markdown","43c1f72d":"markdown","5050f793":"markdown","17f986d6":"markdown","c33a39e3":"markdown","ddb3948b":"markdown","2fdcad98":"markdown","c50f214b":"markdown","d4fd9e5b":"markdown","47c9381e":"markdown","7eaa780c":"markdown","97cefd86":"markdown","a5d20508":"markdown","4c08722f":"markdown","9732d1c9":"markdown","91355e56":"markdown","88aaf0e1":"markdown","9749084f":"markdown"},"source":{"bd1a0cf6":"import pandas as pd\nimport numpy as np\nimport datetime\nimport re\n\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import iplot,init_notebook_mode,plot\n\ninit_notebook_mode(connected=True)\ndata = pd.read_csv(\"..\/input\/indian-startup-funding\/startup_funding.csv\",index_col='Sr No')","8e1cb81a":"data.head(10)","35c4a290":"data.tail(10)","d48c36c5":"data.shape","b9cfef03":"data.info()","36f4ad03":"data.rename(columns={'Date dd\/mm\/yyyy':'Date','Amount in USD':'Fund'},inplace=True)\n\ndef DateFormatting(dates):\n    try:\n        date = pd.to_datetime(dates,format='%d\/%m\/%Y')\n    except(Exception)as e:\n        return pd.to_datetime(\"05\/07\/2018\",format='%d\/%m\/%Y') if(dates == '05\/072018') else None\n        return pd.to_datetime(\"07\/01\/2015\",format='%d\/%m\/%Y') if(dates == '15-01-07 00:00:00') else None\n        return pd.to_datetime(\"10\/7\/2015\",format='%d\/%m\/%Y') if(dates == '\\\\xc2\\\\xa010\/7\/2015') else None\n        return pd.to_datetime(\"22\/01\/2015\",format='%d\/%m\/%Y') if(dates == '22\/01\/\/2015') else None\n    else:\n        return date\n        \n    \n\ndata['Date'] = data['Date'].apply(DateFormatting)","96d26457":"exceptionList =['unknown','Undisclosed','undisclosed']\ndef ConvertingDataIntoFloat(money):\n    match = ''\n    if((type(money)!=float)):\n        match = re.match(r'(\\\\\\\\xc2\\\\\\\\xa0)(.*)',money)\n    try:\n        if(money not in exceptionList and (type(money)!=float) and bool(re.match(r'\\\\\\\\xc2\\\\\\\\xa0.*',money))==False):\n            if('+' in money and (',' in money)):\n                return float(money.replace('+','').replace(',',''))\n            elif('+' in money and (',' in money)!=True):\n                return float(money.replace('+',''))\n            elif(',' in money):\n                return float(money.replace(',',''))\n        elif(money in exceptionList):\n            return np.nan\n        elif(match):\n            if(match.group(2)=='N\/A'):\n                return np.nan\n            else:\n                return float(match.group(2).replace(',',''))\n    except(Exception)as e:\n        print(e,end='\\t')\n        print(money)\n    else:\n        if(type(money)==str):\n            return float(money)\n        else:\n            return money\n        \ndata['Fund'] = data['Fund'].apply(ConvertingDataIntoFloat)","9e47b020":"for col in data.columns:\n    print(\"({1:.2f}%) -- {2}  value(s) are NaN in {0} Column\".format(col,data[col].isna().sum()\/len(data)*100,data[col].isna().sum()))\n    ","4ef8ba0c":"data2 = data[data['Fund'].isna()!=True]\nfor col in data2.columns:\n    print(\"({1:.2f}%) -- {2}  value(s) are NaN in {0} Column\".format(col,data2[col].isna().sum()\/len(data2)*100,data2[col].isna().sum()))","e909b737":"data2['City  Location'] = [re.sub(r'\\\\\\\\xc2\\\\\\\\xa0','',str(x)) if(('\\\\\\\\xc2\\\\\\\\xa' in str(x)) and (type(x)!=float)) else x for x in data2['City  Location'].values]\n\ndata2['Startup Name'] = [re.search(r'([\\w\\s]*).(in|com)',str(do)).group(1) if(('.in' in str(do)) or ('.com' in str(do))) else str(do) for do in data2['Startup Name'] ]","175ef11d":"fundData = data2.sort_values(\"Fund\",ascending=False,axis=0,na_position='last')# we can also do inplace = True","0a8c6553":"fig = px.line(fundData,x='Date',y='Fund')\n\nfig.show()","ca2e2ac0":"fundData[fundData['Fund']>1000000000]","f20162b9":"fundData.loc[fundData['Fund']==3.900000e+09,'Fund'] = 50000000\nfundData.drop('Remarks',1,inplace=True)\nFinalData = fundData\nFinalData.set_index('Date',inplace=True)","190718ca":"MonthlyMeanFunding = pd.DataFrame()\nMonthlyMeanFunding['Avg Funding of Month'] = FinalData['Fund'].resample('M').mean()\n\ndata1 = go.Bar(x=MonthlyMeanFunding.index,\n              y=MonthlyMeanFunding['Avg Funding of Month'],\n              text=MonthlyMeanFunding.index)\n\nlay = go.Layout(title='Monthly Avg Funding',\n          xaxis=dict(title='Month and Year'),\n          yaxis = dict(title='Avg Funding'))\n\nfig = dict(data=data1,layout=lay)\niplot(fig)\n\n#seems to be there is Quaterly funding","6a89a4f0":"QuarterMeanFunding = pd.DataFrame()\nQuarterMeanFunding['Quarters'] = FinalData['Fund'].resample('Q').mean()\n\ndata1 = go.Bar(\n    x=QuarterMeanFunding.index,\n    y=QuarterMeanFunding['Quarters']\n)\n\nlay = go.Layout(title='Quarterly Mean Funding',\n               xaxis=dict(title='Quarters'),\n               yaxis=dict(title='Mean Funding'))\n\nfig = dict(data=data1,layout=lay)\niplot(fig)","18546b2e":"#How much funds does startups generally get in India ?(maximum funding, minimum funding , average funding and number of fundings)","5103aa74":"totalFunding = FinalData['Startup Name'].value_counts()\n\nfig = px.scatter(totalFunding,x=totalFunding.index,y=totalFunding[0:],title='Total Number of Funding to Each Company',\n                labels={\n                    'index':\"Company's Name\",\n                    'y':'Total No. of Times Funding Received'\n                })\n\nfig.show()","ccc3a55d":"company = FinalData.groupby(['Startup Name'])['Fund'].sum()\nallMerge = pd.merge(totalFunding,company,on=totalFunding.index)\nallMerge.rename(columns={'key_0':\"Startup Name\",'Startup Name':'Total Times Funding','Fund':'TotalFund'},inplace=True)\n\nfig = px.scatter(allMerge,x='Startup Name',y='TotalFund',hover_data=allMerge,title='Total Fund VS Startup Name')\n\nfig.show()","47f89b84":"# finding Min and Max funding in Startup\n\nfig = px.box(allMerge['TotalFund'])\n\nfig.show()\n\n","6a388d01":"industryType = FinalData.groupby(['Industry Vertical'])['Fund'].mean()\n\nAboveM = industryType[industryType>100000000]\nfig = px.scatter(x = AboveM.index,y=AboveM,color=AboveM,size=AboveM,title='Funding (100M+) Vs Industry Type',\n                labels={\n                    'x':'Industry Type',\n                    'y':'Total Funding'\n                })\nfig.show()","e87f1549":"LessM = industryType[(industryType<100000000) & (industryType>50000000)]\n\nfig = px.scatter(x=LessM.index,y=LessM,size=LessM,color=LessM,title='Funding (100M - 50M) Vs Industry Type',\n                labels={\n                    'x':'Industry Type',\n                    'y':'Total Funding'\n                })\nfig.show()","0c8d2d4d":"LessM = industryType[industryType<50000000]#less than 50M\n\nfig = px.scatter(x=LessM.index,y=LessM,size=LessM,color=LessM,title='Funding (Below 50M) Vs Industry Type',\n                labels={\n                    'x':'Industry Type',\n                    'y':'Total Funding'\n                })\nfig.show()","00c17ea6":"totalStartupInCity = FinalData['City  Location'].value_counts()\n\nfig = px.pie(totalStartupInCity,names=totalStartupInCity.index\n             ,values=totalStartupInCity.values,title='Total Number of Startup in Cities',height=800)\nfig.update_traces(textposition='inside',textinfo='percent+label')\n\nfig.show()","20584065":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlessThan10 = totalStartupInCity[totalStartupInCity<10]\nGreaterThan10 = totalStartupInCity[totalStartupInCity>10]\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=lessThan10.index, values=lessThan10, name=\"10<\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=GreaterThan10.index , values=GreaterThan10, name=\"10+\",marker = {\"colors\":lessThan10}),\n              1, 2)\n\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_traces(textposition='inside',textinfo='percent+label')\n\nfig.update_layout(\n    title_text=\"City With Number of  Startup\",\n    annotations=[dict(text='10<', x=0.18, y=0.5, font_size=20, showarrow=False),\n                 dict(text='10+', x=0.82, y=0.5, font_size=20, showarrow=False)])\nfig.show()","2b58ad94":"from wordcloud import WordCloud\n\ninvester = FinalData[\"Investors Name\"][~pd.isnull(FinalData[\"Investors Name\"])]\n\nwordCloud = WordCloud(width=500,height= 300).generate(' '.join(invester))\n\nplt.figure(figsize=(19,9))\n\nplt.axis('off')\nplt.title(\"Investers Name\")\nplt.imshow(wordCloud)\nplt.show()\n","10bcfd5b":"#lets get top ten investers \ninvesters = FinalData['Investors Name'].value_counts().head(20)\n\nfig = px.bar(x=investers.index,y=investers,color=investers.index,title='Top Investers',\n            labels={\n                'x':\"Investers Name\",\n                'y':'Number of Investment'\n            })\n\nfig.show()","ba72efaf":"investType = FinalData['InvestmentnType'].value_counts()\nwordCloud = WordCloud(width=500,height=200).generate(' '.join(investType.index[0:]))\n\nplt.figure(figsize=(19,9))\nplt.imshow(wordCloud)\nplt.title('Investment Type',fontsize=20)\nplt.axis('off')\nplt.show()","933379f5":"from plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nhighInvestType = investType[investType>12]\nlowInvestType = investType[investType<12]\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=highInvestType.index, values=highInvestType, name=\"10<\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=lowInvestType.index,values=lowInvestType, name=\"10+\",marker = {\"colors\":highInvestType}),\n              1, 2)\n\n\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_traces(textposition='inside',textinfo='percent+label')\n\n\nfig.update_layout(\n    title_text=\"City With Number of  Startup\",\n    annotations=[dict(text='Pie-1', x=0.18, y=0.5, font_size=20, showarrow=False),\n                 dict(text='Pie-2', x=0.82, y=0.5, font_size=20, showarrow=False)])\n\nfig.show()","9cbfb5ab":"> Rapido Bikes is in the final stages of closing a $50 million funding round, led by private equity firm WestBridge Capital, showcasing the growing investor interest in the Indian tech-focused mobility sector. -->(According to Economic Times Report)","06f79425":"# Content\nThis dataset has funding information of the Indian startups from January 2015 to August 2017. It includes columns with the date funded, the city the startup is based out of, the names of the funders, and the amount invested (in USD). \n","8ff69d58":"**Above Graph show which industries have got 100M+ Funding**","03cc77b7":"So in the data set there might be an error which show 3.9B $ \n\nwe will convert those 3.9B$ to 50Million $","b7368d38":"It's seems like \n* Seed Funding\n* Private Equity \nhave major type of funding in Indian Funding Ecosystem","6d6e12f0":"**Printing basic Information of Row and Columns**","6dabcaf5":"**In Quarterly we can see that there are actually growth in Funding year-by-year**\n\n**We can't say it is a trendy growth but its seem's like every quarter have seasonlity growth**","2b528ac2":"# What are different types of funding for startups ?","21463a96":"> Changing Date Column into Datetime Format","3ff87c99":"# Possible questions which could be answered are:\n\n*     How does the funding ecosystem change with time?\n*     Do cities play a major role in funding?\n*     Which industries are favored by investors for funding?\n*     Who are the important investors in the Indian Ecosystem?\n*     How much funds does startups generally get in India?\n","98911bc2":"# All finished with pre-processing now lets start doing EDA","9b91381e":"# How much funds does startups generally get in India?","43b26290":"> Checking the shape of dataset (Row and Columns)","4c5fc836":"# Which industries are favored by investors for funding?","a782beba":"# 1 - > How does the funding ecosystem change with time?","14cba282":"> Now lets Check the Null value in Each Column","090d523c":"**Importing libraries**","43c1f72d":"We will delete the Remark Column which have more than 85%+ Missing values","5050f793":"* Min Funding = 16k\n* Quartile 1 = 431k\n* Median = 1.5M\n* Quartile 3 = 8M\n* Upper Fence = 19.4M","17f986d6":"> **Reading Top 10 data from dataset**","c33a39e3":"> Reading last 10 data from dataset","ddb3948b":"So we Simply drop those NaN value and corresponding row as per Fund Column","2fdcad98":"# Who are the important investors in the Indian Ecosystem?","c50f214b":"Only Few company have got More than 1B+ Dollar Funding","d4fd9e5b":"We can see cities like \n* Bangalore\n* Mumbai\n* Delhi\n* Gurgaon\n* Bangaluru\n\nhave maximum number of startup then followed by \n* Chennai\n* Hyderabad\n* Pune,etc","47c9381e":"Above Bar graph show top 20 Investers in Indian Funding Ecosystem","7eaa780c":"**From above graph we can say that only 10 startup got more than 5 times funding**","97cefd86":"To Fill Missing Values in data set we have multiple approach Like \n* Forword Fill\n* Backword Fill\n* Mean,Median and Mode Fill\n* There is Dedicated Library \"Imputer\" in Sklearn which provide some more method\n\nbut In this type of domain we can't use those because Funding depends upon mutliple factor (User-base, Company's Growth rate,Competition in market and etc).\n\n*(we will use all those method in next Version)","a5d20508":"Some company are listed as **CarDekho**.com and **CarDekho** so we will extract only the company name","4c08722f":">We will prefer Industry Vertical Column because it have only 7% nan value\n\nWe will divide funding Mean in different size \n* Above 100M+\n* Between 100M to 50M\n* Below 50M","9732d1c9":"If your guys have any suggestion(s) or question please leave comment below.\n\nYour comments and suggestion(s) will help me to improvise my Skill ","91355e56":"# Do cities play a major role in funding?","88aaf0e1":"![Startups-Government-1.jpg](attachment:Startups-Government-1.jpg)\n\npic credit - google images","9749084f":"> Converting Fund Column Datatype  Object into Float"}}