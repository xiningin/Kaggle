{"cell_type":{"5bec16af":"code","1690bac2":"code","c97bd419":"code","04101ed2":"code","71478bee":"code","4966d8ad":"code","781923d9":"code","92320a9b":"code","68b4fa69":"code","f5b3ee9f":"code","ad5de1c7":"code","1c0468eb":"markdown","0e1e467b":"markdown","feef1ae6":"markdown","4378c4c2":"markdown","05706aa3":"markdown","a1842a7d":"markdown"},"source":{"5bec16af":"import pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport sklearn\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import GridSearchCV\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1690bac2":"df = pd.read_csv('..\/input\/us-airbnb-open-data\/AB_US_2020.csv')\n\ndf.head(5)","c97bd419":"print(\"Shape of df : \",df.shape)\nprint(\"Unique neighbourhood : \", df['neighbourhood'].nunique())\nprint(\"City : \", df['city'].nunique())\nprint(\"\\nUnique Cities :-  \\n\\n\", df['city'].unique())\nprint(\"\\nRoom Type :-  \\n\\n\", df['room_type'].unique())","04101ed2":"cityName = 'San Clara Country'    # Just input the city name\n\ndf2 = df.copy()\ndf2 = df2[(df2['city'] == cityName)] \n\ndf2 = df2.groupby(['neighbourhood', 'room_type']).mean().price.reset_index().round(2)\ndf2 = df2.pivot(index='neighbourhood', columns='room_type', values='price')\n\ndf2","71478bee":"df2.plot(figsize=(18,6), kind='bar',alpha=0.75, rot=30)\nplt.xlabel(\"Neighbourhoods of \" + cityName)\nplt.ylabel(\"Average Price\")","4966d8ad":"cityName = 'Clark County'    # Just input the city name\n\ndf2 = df.copy()\ndf2 = df2[(df2['city'] == cityName)] \n\ndf_count = df2.groupby(['room_type']).count().id\ndf_sumPrice = df2.groupby(['room_type']).sum().price\n\nfig = plt.figure (figsize=(15,5))\n#fig.suptitle('', size = 15)\n\nax1 = plt.subplot(1, 2, 1)\nax1.set_title('Percentage of Room types')\ndf_count.plot(kind='pie', autopct='%1.1f%%', label='', pctdistance=0.7)\nplt.ylabel(\"\")\n\nax2 = plt.subplot(1, 2, 2)\nax2.set_title('Total Price of different Room types')\ndf_sumPrice.plot(kind='pie', autopct='%1.1f%%', label='', pctdistance=0.7)\nplt.ylabel(\"\")\n","781923d9":"df3 = df.copy()\ndf3 = df3[df3.city != 'Washington D.C.'] #problem with neighbourhood\ndf3 = df3[['city', 'neighbourhood', 'room_type', 'number_of_reviews', 'price']] \n\ndf4 = pd.get_dummies(df3)\n\n","92320a9b":"from sklearn.model_selection import train_test_split\nfrom ast import literal_eval\n\n\ny = df4.price\nX = df4.drop('price', axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1) # 90% training and 10% test\n#Selecting Feature ? \n#X_train, X_test, fs = select_features(X_train, y_train, X_test)\n\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","68b4fa69":"from sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn import metrics\nimport numpy as np\n\n\nlm = LinearRegression()\n#lm = Ridge(alpha=1.0)\n\n\nlm.fit(X_train,y_train)\n\npredictions = lm.predict(X_test)","f5b3ee9f":"import seaborn as sns\n\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions).round(2))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions).round(2))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)).round(2))","ad5de1c7":"for i in range(1, len(predictions), 1000):  #Only showing every 100th value\n    print(\"Prediction : \", predictions[i].round(2), \"\\t; Actual : \", y_test.iloc[i])\n    ","1c0468eb":"## Predict house price based on City, Neighbourhood, Room type and Reviews","0e1e467b":"### Percentage of Different Room Types in a City and their Total Price\n","feef1ae6":"## Average price - group by Neighbourhood and Room type of a city","4378c4c2":"### Few Information from the dataset","05706aa3":"### I hope you find this kernel useful in your day to day work.\n## Please do leave your comments and if you like this kernel greatly appreciate an UPVOTE","a1842a7d":"### Inspiration\n\nCan we predict the price of each house in different regions?<br>\nCan we describe a region using the names of listings in that region?<br>\nWhat can we learn about different regions from the data?<br>\nBased on different factors is it possible to recommend a title to the host for his\/her listing?<br>\nCan we estimate the popularity of a listing based on given features?"}}