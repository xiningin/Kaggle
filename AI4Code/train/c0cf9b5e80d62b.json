{"cell_type":{"7113c345":"code","2999495a":"code","5f93f52b":"code","33fc4039":"code","f20899d5":"code","acff628e":"code","cc6f927e":"code","b5172437":"code","f0f93481":"code","910539ef":"code","6313055f":"code","ef113f2b":"code","d159b440":"code","6c6ac959":"code","ff613cc3":"code","62f83bf7":"code","a1549ddb":"code","ba0db2c3":"code","26db7f53":"code","6491f779":"code","d620fc06":"code","2d0b9f31":"code","f667d921":"code","7933c42b":"code","e35d2ad7":"code","42824249":"code","bdc061c3":"code","07057a58":"code","02027216":"markdown","3cd296ac":"markdown","bcc45f60":"markdown","a61dfe82":"markdown","3487462e":"markdown","6561d4d7":"markdown","5a3bdee2":"markdown"},"source":{"7113c345":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2999495a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n","5f93f52b":"csv_data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","33fc4039":"csv_data","f20899d5":"csv_data.nunique()\n","acff628e":"df = csv_data.copy() # Create a copy","cc6f927e":"df.groupby('gender').mean()","b5172437":"df_mean = df.groupby(\"gender\").agg([np.mean, np.std])  # Let's make a table that only contains the gender and average score","f0f93481":"df_mean # It worked!","910539ef":"sns.set_style(\"darkgrid\")\ndf_mean['math score'].plot(kind = 'barh', y = 'mean', legend = False, color = ['pink', 'blue'],figsize=(9, 6),fontsize = 16,xerr='std')\nplt.title(\"Average scores of the Math Test by gender\",fontsize = 16)\nplt.xlabel(\"Gender\",fontsize = 16)\nplt.ylabel(\"Mean\",fontsize = 16)\nplt.xticks(rotation=0)\nplt.show()","6313055f":"sns.set_style(\"darkgrid\")\ndf_mean['reading score'].plot(kind = 'barh', y = 'mean', legend = False, color = ['pink', 'blue'],figsize=(9, 6),fontsize = 16,xerr='std')\nplt.title(\"Average scores of the Reading Test by gender\",fontsize = 16)\nplt.xlabel(\"Gender\",fontsize = 16)\nplt.ylabel(\"Mean\",fontsize = 16)\nplt.xticks(rotation=0)\nplt.show()","ef113f2b":"sns.set_style(\"darkgrid\")\ndf_mean['writing score'].plot(kind = 'barh', y = 'mean', legend = False, color = ['pink', 'blue'],figsize=(9, 6),fontsize = 16,xerr='std')\nplt.title(\"Average scores of the Writing Test by gender\",fontsize = 16)\nplt.xlabel(\"Gender\",fontsize = 16)\nplt.ylabel(\"Mean\",fontsize = 16)\nplt.xticks(rotation=0)\nplt.show()\n","d159b440":"df.columns = df.columns.str.replace(' ', '_')  # replace whitespace with _ to make it cleaner","6c6ac959":"df.head()","ff613cc3":"score_mean = df.groupby(['race\/ethnicity']).mean()","62f83bf7":"score_mean.head() # I don't want race\/ethnicity to be the index.. let's reset that","a1549ddb":"score_mean = score_mean.reset_index()\nscore_mean.head()\n","ba0db2c3":"plt.plot(df.groupby(['race\/ethnicity']).mean())\nsns.set_style(\"darkgrid\")\nplt.legend(['Math Score','Reading Score','Writing Score'])\nplt.title(\"Correlation between the race\/ethnicity and test scores\",fontsize = 16)\nplt.xlabel(\"Race\/Ethnicity\",fontsize = 16)\nplt.ylabel(\"Mean test score\",fontsize = 16)\nplt.xticks(rotation=0, fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.figure(figsize=(12,6))\nplt.rcParams['figure.figsize'] = (9,5)\nplt.show()\n# Seems that group E has the best average","26db7f53":"plt.pie(score_mean['math_score'],\n       labels = score_mean['race\/ethnicity'].values,\n       autopct = '%.2f%%',\n        textprops = {\n            'color' : 'black',     \n        }\n       )\nplt.title('Math Scores by race\/ethnicity', fontsize = '16')\nplt.show()","6491f779":"plt.pie(score_mean['reading_score'],\n       labels = score_mean['race\/ethnicity'].values,\n       autopct = '%.2f%%',\n        textprops = {\n            'color' : 'black',     \n        }\n       )\nplt.title('Reading Scores by race\/ethnicity', fontsize = '16')\nplt.show()","d620fc06":"plt.pie(score_mean['writing_score'],\n       labels = score_mean['race\/ethnicity'].values,\n       autopct = '%.2f%%',\n        textprops = {\n            'color' : 'black',     \n        }\n       )\nplt.title('Writing Scores by race\/ethnicity', fontsize = '16')\nplt.show()","2d0b9f31":"# Now let's create a 'total' score column\nscore_mean['total'] = score_mean['math_score']+score_mean['reading_score']+score_mean['writing_score']\nscore_mean","f667d921":"plt.bar(x = score_mean['race\/ethnicity'],\n       height = score_mean['total'], \n        color = 'midnightblue')\nplt.title('Total score number comparison', fontsize = '16')\nplt.xlabel(\"Race\/ethnicity\")\nplt.ylabel(\"Total score\")\nplt.xticks(rotation=0)\nplt.show()","7933c42b":"df.head()","e35d2ad7":"lunch_mean = df.groupby(df['lunch']).mean()\nlunch_mean = lunch_mean.reset_index()\nlunch_mean # People with free\/reduced lunch averages a lower score than those with standard lunch!","42824249":"lunch_sum =  df.groupby(df['lunch']).sum() # I'll also create the sum of all scores\nlunch_sum['total'] = lunch_sum['math_score'] + lunch_sum['reading_score'] + lunch_sum['writing_score']\n","bdc061c3":"lunch_sum","07057a58":"fig, axes = plt.subplots(2,2, figsize = (12,10))\naxes[0,0].bar(x = lunch_mean['lunch'],\n             height = lunch_mean['math_score'],\n             color = 'darkred')\naxes[0,0].set_title(\"Average Math score comparision\")\naxes[0,1].bar(x = lunch_mean['lunch'],\n             height = lunch_mean['reading_score'],\n             color = 'midnightblue')\naxes[0,1].set_title(\"Average Reading score comparision\")\naxes[1,0].bar(x = lunch_mean['lunch'],\n             height = lunch_mean['writing_score'],\n             color = 'darkgreen')\naxes[1,0].set_title(\"Average Writing score comparision\")\naxes[1,1].bar(x = lunch_mean['lunch'],\n             height = lunch_sum['total'],\n             color = 'purple')\naxes[1,1].set_title(\"Total score comparision\")\nplt.show()","02027216":"**It seems females do considerably better at the Writing and Reading tests**","3cd296ac":"# Now let's plot this","bcc45f60":"# Now let's check the correlation between race group and scores","a61dfe82":"# Is there a correlation between gender and scores?","3487462e":"**let's add a copy**","6561d4d7":"# Does having free\/reduced lunch correlate with the test scores?\n","5a3bdee2":"# Plotting this table"}}