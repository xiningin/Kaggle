{"cell_type":{"d82a1abe":"code","80ebf8ab":"code","40d078b9":"code","6ab89a1d":"code","dbe2e8f7":"code","03fd25f7":"code","3251d5f5":"code","2bd9be47":"code","85fbdd68":"code","931138c9":"code","6cfe8db3":"code","d865505b":"code","4df44589":"code","2af186ff":"markdown","4bac167a":"markdown","2d023cca":"markdown","47ed8cba":"markdown","9b82cd1a":"markdown","72b76387":"markdown","0bfdce14":"markdown","e33ef5f3":"markdown","0e3f57df":"markdown","5e4599c5":"markdown","2b44e8fb":"markdown","83102560":"markdown","92bf93b7":"markdown","c4cb6704":"markdown","63e1d2d0":"markdown","29b52373":"markdown","47aabf9a":"markdown","9b3dd406":"markdown","95c79271":"markdown"},"source":{"d82a1abe":"import pandas as pd\nimport matplotlib.pyplot as plt","80ebf8ab":"from sklearn import datasets\ndigits = datasets.load_digits() ","40d078b9":"\nplt.gray() \nplt.matshow(digits.images[0]) # first digit\nplt.show()\n\nplt.matshow(digits.images[1]) #second digit\nplt.show()","6ab89a1d":"x=digits.data \ny=digits.target\n\nprint(x.shape)\nprint(x)\nprint()\nprint(y.shape)\nprint(y)","dbe2e8f7":"x=pd.DataFrame(x) #converting in to dataframe\ny=pd.DataFrame(y,columns=['target']) ","03fd25f7":"#combining x and y\ndf=pd.DataFrame(x)\ndf['target']=y\ndf.head()","3251d5f5":"x=x.sub(x.mean(axis=0), axis=1)\nx=x.values","2bd9be47":"from sklearn.decomposition import PCA\npca = PCA(n_components=2) #Selecting 2 component PCA\nprincipalComponents = pca.fit_transform(x) #Fit the model with X and apply the dimensionality reduction on X.\nprincipalDf = pd.DataFrame(data = principalComponents, columns = ['principal component 1', 'principal component 2'])\nfinalDf = pd.concat([principalDf, y], axis = 1) #Concatinating principal components with class(y)","85fbdd68":"#plot even digits\nd1=finalDf\n\nfig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\n\ntargets = [0,2,4,6,8]\ncolors = ['r', 'g', 'b','y','black']\n\nfor target, color in zip(targets,colors):\n    indicesToKeep = (d1['target'] == target)\n    ax.scatter(d1.loc[indicesToKeep, 'principal component 1']\n               , d1.loc[indicesToKeep, 'principal component 2']\n               , c = color\n               , s = 50)\nax.legend(targets)\nax.grid()","931138c9":"#plot first five digits\nd1=finalDf.head(5)\n\nfig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\n\ntargets = [0,1,2,3,4]\ncolors = ['r', 'g', 'b','y','black']\n\nfor target, color in zip(targets,colors):\n    indicesToKeep = (d1['target'] == target)\n    ax.scatter(d1.loc[indicesToKeep, 'principal component 1']\n               , d1.loc[indicesToKeep, 'principal component 2']\n               , c = color\n               , s = 50)\nax.legend(targets)\nax.grid()\nplt.savefig(\"6a_without_lib\")","6cfe8db3":"#plot last five digits\nd1=finalDf.tail(5)\n\nfig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\n\ntargets = [9,0,8,9,8]\ncolors = ['r', 'g', 'b','r','b']\n\nfor target, color in zip(targets,colors):\n    indicesToKeep = (d1['target'] == target)\n    ax.scatter(d1.loc[indicesToKeep, 'principal component 1']\n               , d1.loc[indicesToKeep, 'principal component 2']\n               , c = color\n               , s = 50)\nax.legend(targets)\nax.grid()","d865505b":"#plot odd digits\nd1=finalDf\n\nfig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\n\ntargets = [1,3,5,7,9]\ncolors = ['r', 'g', 'b','y','black']\n\nfor target, color in zip(targets,colors):\n    indicesToKeep = (d1['target'] == target)\n    ax.scatter(d1.loc[indicesToKeep, 'principal component 1']\n               , d1.loc[indicesToKeep, 'principal component 2']\n               , c = color\n               , s = 50)\nax.legend(targets)\nax.grid()","4df44589":"#plot class 1,2,6,8\nd1=finalDf\n\nfig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\n\ntargets = [1,2,6,8]\ncolors = ['r', 'g', 'b','y']\n\nfor target, color in zip(targets,colors):\n    indicesToKeep = (d1['target'] == target)\n    ax.scatter(d1.loc[indicesToKeep, 'principal component 1']\n               , d1.loc[indicesToKeep, 'principal component 2']\n               , c = color\n               , s = 50)\nax.legend(targets)\nax.grid()","2af186ff":"Upvote my work if you like it.","4bac167a":"Last five digits belong to class 9,0,8,9 and 8 respectively. Clearly, we can see 3 clusters. Each belonging to class 0,8 and 9.","2d023cca":"# Plot last five digits of dataset","47ed8cba":"## Pre-processing\nPreprocessing involves subtracting the mean from each column.","9b82cd1a":"# Visualize 64 dimension image using PCA\nVisualization gives more insight into the dataset. But it becomes impossible to visualize the multidimensional data. \n\nPCA comes in handy in this situation to visualize data with multi-dimensions. \n\nBelow I have shown how we can use PCA on a 8*8 image and convert it to 2 dimensions and then visualize it easily.  ","72b76387":".data is used for attributes of dataset i.e. 64 pixel values\n\n.target is used for digit class","0bfdce14":"Plot digit belonging to class 1,2,6 and 8. Class 6 has a considerable amount of separation from others. While class 1,2 and 8 may cause confusion.","e33ef5f3":"Class belonging to 1,3,5,7,9. None of the class is clearly separated. Predicting class will cause confusion.","0e3f57df":"## Importing Libraries","5e4599c5":" First five digits belong to class 0,1,2,3,4 respectively. All of them are clearly separated from each other","2b44e8fb":"# Plot digits belonging to class 1,2,6 and 8.","83102560":"# Plot odd digits of dataset","92bf93b7":"Even digits belongd to class 0,2,4,6,8. Class 0,6 and 4 form one cluster while class 2 and 8 form another cluster. \n","c4cb6704":"# Plot even digits of dataset","63e1d2d0":"## Conclusion\nPCA can be used to visulize high dimentional dataset. And relation between data can be found easily.","29b52373":"# Plot first five digits of dataset","47aabf9a":"## Data Analysis\nVisualize some data points","9b3dd406":"## Using PCA for 2 principal components\nPCA forms the basis of multivariate data analysis based on projection methods. The most important use of PCA is to represent a multivariate data table as smaller set of variables. \n\nPCA finds lines, planes and hyper-planes in the K-dimensional space that approximate the data as well as possible in the least squares sense. A line or plane that is the least squares approximation of a set of data points makes the variance of the coordinates on the line or plane as large as possible.\n\nIn below code two principal components are calculated.","95c79271":"## Loading digit dataset from sklearn\nSklearn provides many toy dataset and these dataset can be used directly without the need of downloading from external website. In this kernel dataset used consist of 64 dimention images. It has total 1797 images and these belonging to 10 classes (0 to 9)."}}