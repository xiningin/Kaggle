{"cell_type":{"b0307e00":"code","c1033867":"code","4809b042":"code","edd24c6e":"code","2ba07335":"code","57a12b36":"code","46d80797":"code","76dece36":"code","4c2341ec":"code","db8dce81":"code","d95ea3d9":"code","cbd5a643":"code","a6d64d61":"code","d032891c":"code","eb64ff9c":"code","1ab9bc8a":"code","bac2296f":"code","78ead93b":"code","79c2822b":"code","800bfc90":"code","23824c61":"code","38ec7eea":"code","5a55ae46":"code","55000a61":"markdown","ce7b1b47":"markdown"},"source":{"b0307e00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c1033867":"data = pd.read_csv('..\/input\/petrol-consumption\/petrol_consumption.csv') ","4809b042":"data.head()","edd24c6e":"X = data.iloc[:, 0:4].values  \ny = data.iloc[:, 4].values  ","2ba07335":"# import sklearn \nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=0)  ","57a12b36":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()  \nX_train = sc.fit_transform(X_train)  \nX_test = sc.transform(X_test)  ","46d80797":"from sklearn.ensemble import RandomForestRegressor\n\nregressor = RandomForestRegressor(n_estimators=20, random_state=0)  \nregressor.fit(X_train, y_train)  \ny_pred = regressor.predict(X_test)  ","76dece36":"from sklearn import metrics\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))  ","4c2341ec":"from sklearn.ensemble import RandomForestRegressor\n\nregressor = RandomForestRegressor(n_estimators=100, random_state=0)  \nregressor.fit(X_train, y_train)  \ny_pred = regressor.predict(X_test)  ","db8dce81":"from sklearn import metrics\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))  ","d95ea3d9":"data = pd.read_csv('..\/input\/bank-note-authentication-uci-data\/BankNote_Authentication.csv')","cbd5a643":"data.head()","a6d64d61":"X = data.iloc[:, 0:4].values  \ny = data.iloc[:, 4].values ","d032891c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)  ","eb64ff9c":"sc = StandardScaler()  \nX_train = sc.fit_transform(X_train)  \nX_test = sc.transform(X_test)  ","1ab9bc8a":"from sklearn.ensemble import RandomForestClassifier \nrf_model = RandomForestClassifier(n_estimators=20, random_state=0)  \nrf_model.fit(X_train, y_train)  \ny_pred = rf_model.predict(X_test)  ","bac2296f":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\nprint(confusion_matrix(y_test,y_pred))  \nprint(classification_report(y_test,y_pred))  \nprint(accuracy_score(y_test, y_pred))  ","78ead93b":"rf_model2 = RandomForestClassifier(n_estimators=100, random_state=0)  \nrf_model2.fit(X_train, y_train)  \ny_pred = rf_model2.predict(X_test)  ","79c2822b":"print(confusion_matrix(y_test,y_pred))  \nprint(classification_report(y_test,y_pred))  \nprint(accuracy_score(y_test, y_pred))  ","800bfc90":"# alternative way to write the feature and label dataset \nX = data.drop('class', axis = 1)\ny = data['class']","23824c61":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)  ","38ec7eea":"# Decision Tree\nfrom sklearn.tree import DecisionTreeClassifier\nclt = DecisionTreeClassifier()\nclt.fit(X_train, y_train)\ny_pred = clt.predict(X_test)","5a55ae46":"print(confusion_matrix(y_test,y_pred))  \nprint(classification_report(y_test,y_pred))  \nprint(accuracy_score(y_test, y_pred))  ","55000a61":"# Random Forest Regression\n\n* Question: How to predict the gas consumption (in millions of gallons) in 48 of the US states based on petrol tax (in cents), per capita income (dollars), paved highways (in miles) and the proportion of population with the driving license.\n\n* Source: Historical Petral Consumption \n\n* Solution: Using random forest algorithm via the Scikit-Learn Python library. ","ce7b1b47":"# Random Forest Classification \n\n* Question: How to predict whether a bank currency note is authentic or not based on four attributes i.e. variance of the image wavelet transformed image, skewness, entropy, and curtosis of the image.\n\n* Source: UCI Machine Learning Database \n\n* Solution: Using random forest algorithm for a binary classfication. "}}